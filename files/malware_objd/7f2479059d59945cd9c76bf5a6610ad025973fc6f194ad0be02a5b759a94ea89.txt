
7f2479059d59945cd9c76bf5a6610ad025973fc6f194ad0be02a5b759a94ea89.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [ebx],eax
  402e93:	xchg   esp,eax
  402e94:	sub    eax,0x7c7c7cf0
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x36],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	add    ebp,ebp
  402f43:	aam    0xf8
  402f45:	mov    cl,0x7c
  402f47:	imul   edi,ebx,0x27
  402f4a:	retf   0xcb4
  402f4d:	mov    edi,0xea5a28be
  402f52:	ja     0x402fb9
  402f54:	int    0x4f
  402f56:	(bad)  
  402f57:	sbb    BYTE PTR [ebx-0x24],cl
  402f5a:	aad    0x8
  402f5c:	sub    DWORD PTR [edx+eax*4],edi
  402f5f:	inc    edi
  402f60:	int3   
  402f61:	in     al,0xb4
  402f63:	cli    
  402f64:	loope  0x402f72
  402f66:	outs   dx,DWORD PTR ds:[esi]
  402f67:	sub    al,0x4e
  402f69:	xchg   esi,eax
  402f6a:	lahf   
  402f6b:	dec    esp
  402f6c:	jno    0x402ef5
  402f6e:	lahf   
  402f6f:	dec    esp
  402f70:	pushf  
  402f71:	xor    ecx,ebp
  402f73:	and    esp,DWORD PTR ds:0x66080934
  402f79:	inc    edi
  402f7a:	xlat   BYTE PTR ds:[ebx]
  402f7b:	xor    dh,ch
  402f7d:	jbe    0x402ff2
  402f7f:	dec    ebp
  402f80:	adc    al,0xef
  402f82:	(bad)  
  402f83:	cs and eax,0xfae83819
  402f89:	lea    edx,[eax]
  402f8b:	or     dh,BYTE PTR [edx+0x37]
  402f8e:	adc    ebx,DWORD PTR ds:0x18dcc758
  402f94:	jmp    0x3a503ffe
  402f99:	sti    
  402f9a:	ret    
  402f9b:	xlat   BYTE PTR ds:[ebx]
  402f9c:	dec    edx
  402f9d:	sbb    DWORD PTR [ecx+0x7f],ecx
  402fa0:	enter  0x75bf,0x5d
  402fa4:	icebp  
  402fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fa6:	icebp  
  402fa7:	sbb    eax,0x5557ab9f
  402fac:	daa    
  402fad:	in     eax,0x4f
  402faf:	pop    es
  402fb0:	jg     0x402f35
  402fb2:	mov    cl,0x6
  402fb4:	les    edx,FWORD PTR [ebx]
  402fb6:	icebp  
  402fb7:	mov    ds:0x82165c2d,al
  402fbc:	mov    ds:0x8d26a0eb,al
  402fc1:	and    bh,BYTE PTR [ebx-0x16]
  402fc4:	dec    esp
  402fc5:	cli    
  402fc6:	out    0x8,al
  402fc8:	iret   
  402fc9:	popf   
  402fca:	push   ds
  402fcb:	mov    dl,0xb8
  402fcd:	out    0x96,eax
  402fcf:	out    0xf7,eax
  402fd1:	ins    BYTE PTR es:[edi],dx
  402fd2:	inc    esi
  402fd3:	lahf   
  402fd4:	cwde   
  402fd5:	xor    DWORD PTR [ebp+0x438137f5],eax
  402fdb:	push   ecx
  402fdc:	fstp   DWORD PTR [edx]
  402fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fdf:	push   ds
  402fe0:	xchg   esp,eax
  402fe1:	mov    edx,0x66910f30
  402fe6:	dec    ebx
  402fe7:	rol    ch,cl
  402fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fea:	nop
  402feb:	adc    al,0x7f
  402fed:	cld    
  402fee:	mov    ds:0x76427e48,al
  402ff3:	(bad)  
  402ff4:	loop   0x403060
  402ff6:	ins    BYTE PTR es:[edi],dx
  402ff7:	popf   
  402ff8:	dec    ecx
  402ff9:	sbb    eax,0x5c0152b0
  402ffe:	retf   0xc3ca
  403001:	out    dx,eax
  403002:	retf   
  403003:	jle    0x403079
  403005:	scas   al,BYTE PTR es:[edi]
  403006:	(bad)  
  403007:	and    dh,dh
  403009:	aaa    
  40300a:	lahf   
  40300b:	and    edx,DWORD PTR [esi]
  40300d:	in     eax,dx
  40300e:	mov    cl,0x26
  403010:	mov    ch,0x88
  403012:	sbb    eax,0xb096a683
  403017:	add    eax,0xde493ece
  40301c:	adc    BYTE PTR [esi],cl
  40301e:	push   edi
  40301f:	in     eax,0xb4
  403021:	adc    eax,0xf0227de7
  403026:	stos   DWORD PTR es:[edi],eax
  403027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403028:	cmc    
  403029:	dec    ebp
  40302a:	adc    cl,BYTE PTR [edi+esi*4]
  40302d:	jnp    0x40306e
  40302f:	lock jmp 0x7b86:0x88fcf347
  403037:	dec    esi
  403038:	fistp  DWORD PTR [ebp+0x73]
  40303b:	out    0x8,al
  40303d:	fmul   DWORD PTR [eax+0x69]
  403040:	(bad)  
  403041:	(bad)  
  403042:	fadd   DWORD PTR [esi]
  403044:	push   ds
  403045:	inc    edx
  403046:	pushf  
  403047:	mov    edi,DWORD PTR [ecx+0x69c108ec]
  40304d:	lods   eax,DWORD PTR ds:[esi]
  40304e:	xchg   DWORD PTR [edx],edi
  403050:	add    ebx,DWORD PTR [ebx-0x4a1999c9]
  403056:	or     ebx,DWORD PTR [edx]
  403058:	mov    eax,0x1e70605e
  40305d:	inc    esp
  40305e:	adc    bh,ah
  403060:	xlat   BYTE PTR ds:[ebx]
  403061:	(bad)  
  403062:	call   0x5dbeb3e3
  403067:	loopne 0x40304c
  403069:	and    BYTE PTR [esi-0x3d],0x8a
  40306d:	jne    0x4030ca
  40306f:	stos   BYTE PTR es:[edi],al
  403070:	push   esp
  403071:	pop    ss
  403072:	jecxz  0x403000
  403074:	xlat   BYTE PTR ds:[ebx]
  403075:	in     al,0xbe
  403077:	dec    ecx
  403078:	cmp    DWORD PTR ds:0x51c97710,edi
  40307e:	xor    ecx,DWORD PTR [edi]
  403080:	mov    ds:0xa6bcda5c,al
  403085:	or     DWORD PTR [esi],esi
  403087:	jno    0x4030c7
  403089:	aaa    
  40308a:	cmp    esi,DWORD PTR [edx+0x20302624]
  403090:	gs jbe 0x40303c
  403093:	addr16 in eax,0xd3
  403096:	sub    esi,DWORD PTR [edx+ebx*2-0x73]
  40309a:	dec    bh
  40309c:	imul   esi,esp,0xffffff83
  40309f:	popf   
  4030a0:	or     BYTE PTR [ebp+0x5d],0x41
  4030a4:	es out dx,al
  4030a6:	cmp    BYTE PTR [ebx-0x740bb3e8],0x48
  4030ad:	pop    esi
  4030ae:	sub    BYTE PTR [esi+0x10],0xee
  4030b2:	aaa    
  4030b3:	push   ss
  4030b4:	jnp    0x4030d1
  4030b6:	lods   eax,DWORD PTR ds:[esi]
  4030b7:	fmul   st(0),st
  4030b9:	in     al,0xdb
  4030bb:	aam    0xe0
  4030bd:	enter  0x8f54,0x10
  4030c1:	jle    0x403056
  4030c3:	cwde   
  4030c4:	dec    esi
  4030c5:	push   eax
  4030c6:	jne    0x4030b8
  4030c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030c9:	cmp    dh,BYTE PTR [edi-0x46]
  4030cc:	cmp    DWORD PTR [esi-0x29],ecx
  4030cf:	pop    es
  4030d0:	(bad)  
  4030d1:	jo     0x40309b
  4030d3:	push   edx
  4030d4:	repz sub al,0x92
  4030d7:	and    dl,BYTE PTR [ecx+ecx*8+0x42]
  4030db:	cld    
  4030dc:	mov    ecx,0xe0fa2820
  4030e1:	les    ecx,FWORD PTR [ebp-0x14d39c69]
  4030e7:	hlt    
  4030e8:	cli    
  4030e9:	pop    esp
  4030ea:	dec    esp
  4030eb:	xchg   ebx,eax
  4030ec:	ds xchg edx,eax
  4030ee:	cli    
  4030ef:	mov    ecx,0x196179d3
  4030f4:	add    DWORD PTR [esp-0x16],0xfffffff1
  4030f9:	jecxz  0x403092
  4030fb:	dec    ecx
  4030fc:	mov    ch,0x65
  4030fe:	psrlq  mm4,mm6
  403101:	xchg   esi,eax
  403102:	jmp    0x40311d
  403104:	and    BYTE PTR [eax-0x1ad5e33d],bh
  40310a:	loopne 0x403144
  40310c:	rcl    edx,0x3d
  40310f:	lock cmp eax,0xaf15ea6e
  403115:	push   0x67
  403117:	push   esp
  403118:	enter  0x6fb,0xae
  40311c:	sub    eax,0xfe6dc671
  403121:	xchg   edx,eax
  403122:	icebp  
  403123:	call   0x2721:0xe10791d6
  40312a:	jns    0x403186
  40312c:	pop    edi
  40312d:	or     BYTE PTR [ebx],0xb0
  403130:	scas   al,BYTE PTR es:[edi]
  403131:	cmp    al,0x3e
  403133:	inc    edx
  403134:	and    al,0xe1
  403136:	inc    ebx
  403137:	mov    DWORD PTR [ebx+0x5f],ecx
  40313a:	ds (bad) 
  40313c:	retf   0xa09
  40313f:	les    edi,FWORD PTR [ebp+0x10e11444]
  403145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403146:	adc    al,BYTE PTR [ebx]
  403148:	xchg   esi,eax
  403149:	in     al,0xff
  40314b:	in     eax,dx
  40314c:	xchg   ebp,eax
  40314d:	inc    esi
  40314e:	stos   DWORD PTR es:[edi],eax
  40314f:	dec    edx
  403150:	sti    
  403151:	dec    ebx
  403152:	add    DWORD PTR [esi-0x58],esi
  403155:	pop    eax
  403156:	fcmovbe st,st(6)
  403158:	sbb    BYTE PTR [ecx],ch
  40315a:	xlat   BYTE PTR ds:[ebx]
  40315b:	dec    edi
  40315c:	fidiv  WORD PTR [ecx+0x6d0ed461]
  403162:	outs   dx,DWORD PTR ds:[esi]
  403163:	jl     0x403107
  403165:	pop    ss
  403166:	xchg   ecx,eax
  403167:	dec    edi
  403168:	psrad  mm7,QWORD PTR ds:0x1c63945e
  40316f:	pushaw 
  403171:	sbb    ah,BYTE PTR [esp+eax*2]
  403174:	ret    
  403175:	cmp    al,0x50
  403177:	pop    ecx
  403178:	inc    esi
  403179:	jbe    0x403160
  40317b:	pop    esp
  40317c:	fiadd  WORD PTR [edi-0x77]
  40317f:	call   0xd0e66654
  403184:	imul   ebp,esi,0x7c
  403187:	aaa    
  403188:	cmp    DWORD PTR [esi-0x241b086e],edx
  40318e:	scas   eax,DWORD PTR es:[edi]
  40318f:	xor    DWORD PTR [ecx+0x6b],ecx
  403192:	xor    DWORD PTR [eax-0x45],ecx
  403195:	ins    BYTE PTR es:[edi],dx
  403196:	add    al,0xe3
  403198:	adc    eax,0x68ef261a
  40319d:	ss ror ecx,cl
  4031a0:	les    eax,FWORD PTR [edx]
  4031a2:	rcpps  xmm7,xmm1
  4031a5:	pop    ss
  4031a6:	sbb    eax,0xf69f7e1a
  4031ab:	imul   esi,DWORD PTR [ebx-0x7ca15905],0x4061a651
  4031b5:	xchg   esi,eax
  4031b6:	pop    ss
  4031b7:	ret    0x6123
  4031ba:	pop    ebx
  4031bb:	cmp    dh,0x92
  4031be:	fmul   DWORD PTR [ebx-0x56f85b66]
  4031c4:	mov    bh,0xad
  4031c6:	mov    esp,0xc1575272
  4031cb:	mov    ds:0xbe30e882,eax
  4031d0:	jp     0x40321a
  4031d2:	leave  
  4031d3:	mov    ebx,DWORD PTR [edx-0x77]
  4031d6:	adc    ah,dl
  4031d8:	ds jne 0x4031f5
  4031db:	mov    ah,0x50
  4031dd:	sahf   
  4031de:	leave  
  4031df:	frstor [ecx]
  4031e1:	imul   edx,edi,0xce41e703
  4031e7:	loop   0x40323d
  4031e9:	in     eax,0x3e
  4031eb:	adc    BYTE PTR [esi],ah
  4031ed:	add    edi,DWORD PTR [ebx+0x4d5b1793]
  4031f3:	cmp    esp,ebp
  4031f5:	test   al,0x80
  4031f7:	sahf   
  4031f8:	stos   BYTE PTR es:[edi],al
  4031f9:	dec    ebx
  4031fa:	scas   al,BYTE PTR es:[edi]
  4031fb:	push   edi
  4031fc:	ss cld 
  4031fe:	fucom  st(0)
  403200:	jg     0x40322d
  403202:	mov    al,ds:0x53d9387c
  403207:	mov    esp,0xe93b458
  40320c:	inc    edi
  40320d:	jb     0x4031e6
  40320f:	nop
  403210:	popa   
  403211:	mov    ebp,DWORD PTR [ebp-0x42883847]
  403217:	jmp    0x403208
  403219:	or     al,0x95
  40321b:	mul    BYTE PTR [esi+edx*2+0x76]
  40321f:	sahf   
  403220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403221:	add    al,0x71
  403223:	xchg   DWORD PTR [esi+0x73],ebx
  403226:	loope  0x403275
  403228:	push   es
  403229:	daa    
  40322a:	adc    ebx,ecx
  40322c:	pop    edi
  40322d:	dec    edi
  40322e:	xlat   BYTE PTR ds:[ebx]
  40322f:	inc    edi
  403230:	(bad)  
  403231:	(bad)  
  403232:	sub    eax,0x7ce32137
  403237:	lahf   
  403238:	push   0x79
  40323a:	push   ss
  40323b:	int3   
  40323c:	mov    ds:0xdaae408b,al
  403241:	dec    BYTE PTR [edi]
  403243:	and    eax,0x6b62e073
  403248:	push   0xd5807e7e
  40324d:	add    BYTE PTR [edx],dh
  40324f:	jno    0x403294
  403251:	cmp    dl,BYTE PTR [edx-0x27]
  403254:	push   ds
  403255:	sbb    BYTE PTR [eax],dh
  403257:	(bad)  
  403258:	xchg   esp,eax
  403259:	ret    
  40325a:	scas   eax,DWORD PTR es:[edi]
  40325b:	push   ds
  40325c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40325d:	jbe    0x9383d6a3
  403263:	xchg   BYTE PTR [ebp-0x15be8909],ch
  403269:	in     eax,0x35
  40326b:	ss mov es,esp
  40326e:	jns    0x4032a6
  403270:	mov    cl,0xa3
  403272:	shl    ah,0xba
  403275:	mov    al,0xc0
  403277:	mov    dl,0xb1
  403279:	cld    
  40327a:	out    dx,eax
  40327b:	mov    dl,0x4a
  40327d:	sbb    DWORD PTR [ecx+0x249e91d1],edx
  403283:	test   DWORD PTR [eax+0x649f926c],edx
  403289:	mov    dl,0xd1
  40328b:	mov    bh,0x8b
  40328d:	pop    eax
  40328e:	or     bl,ch
  403290:	or     BYTE PTR [ebx-0x634496d1],ch
  403296:	push   0xffffffaf
  403298:	jl     0x403305
  40329a:	(bad)  
  40329b:	icebp  
  40329c:	push   edx
  40329d:	sub    bh,BYTE PTR [edi-0x37092f22]
  4032a3:	sub    edi,DWORD PTR [edx]
  4032a5:	mov    cl,0xd6
  4032a7:	imul   ecx,DWORD PTR [esi],0xffffffe7
  4032aa:	inc    esi
  4032ab:	inc    ebp
  4032ac:	push   cs
  4032ad:	dec    esi
  4032ae:	mov    esp,0x884876a8
  4032b3:	(bad)  
  4032b5:	stos   BYTE PTR es:[edi],al
  4032b6:	push   es
  4032b7:	inc    edi
  4032b8:	rcr    DWORD PTR [edx],0xa4
  4032bb:	push   ds
  4032bc:	sahf   
  4032bd:	call   0x1b95:0x166ead5d
  4032c4:	or     ecx,ebp
  4032c6:	hlt    
  4032c7:	jp     0x40331a
  4032c9:	std    
  4032ca:	sub    DWORD PTR [esi-0x4e],ecx
  4032cd:	mov    edi,0x904bf8f4
  4032d2:	inc    ebp
  4032d3:	mov    cl,0x16
  4032d5:	sbb    ah,BYTE PTR [eax]
  4032d7:	or     eax,edx
  4032d9:	adc    al,ah
  4032db:	add    DWORD PTR [edx-0x44902ec0],ebx
  4032e1:	sbb    ebx,DWORD PTR [edi]
  4032e3:	cmp    DWORD PTR [ebx+0x3d73e39a],ebx
  4032e9:	imul   ebx,DWORD PTR [ebx-0x61],0xd
  4032ed:	mov    bl,0xef
  4032ef:	std    
  4032f0:	retf   
  4032f1:	sbb    al,0x6f
  4032f3:	sub    BYTE PTR [esi+0x6a],0x7a
  4032f7:	jns    0x40331b
  4032f9:	and    dl,dl
  4032fb:	push   ecx
  4032fc:	add    ebp,ebp
  4032fe:	clc    
  4032ff:	xchg   edx,eax
  403300:	mov    al,0x95
  403302:	sahf   
  403303:	scas   eax,DWORD PTR es:[edi]
  403304:	jae    0x4032db
  403306:	hlt    
  403307:	inc    edx
  403308:	fild   DWORD PTR [esi+0x1256622c]
  40330e:	and    DWORD PTR [esi+0x9dc953e],ebx
  403314:	push   ss
  403315:	arpl   WORD PTR [ebx],sp
  403317:	mov    ds:0xe6e1432a,al
  40331c:	call   0x82cd:0x9608ba7
  403323:	test   al,0xc8
  403325:	add    al,0x6d
  403327:	lds    eax,FWORD PTR [ebx]
  403329:	fidivr WORD PTR [esi-0xd]
  40332c:	mov    bl,BYTE PTR [esi-0x2008e3b]
  403332:	lds    esi,FWORD PTR [ebx-0x678c292c]
  403338:	mov    ?,WORD PTR [eax+eax*4-0x2926eb18]
  40333f:	inc    ebp
  403340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403341:	(bad)  
  403343:	ror    DWORD PTR [edi],1
  403345:	xor    DWORD PTR [ebx],ecx
  403347:	in     eax,dx
  403348:	and    bh,ah
  40334a:	dec    esi
  40334b:	cli    
  40334c:	xor    DWORD PTR [edx+ebp*4+0x57],esp
  403350:	bound  esp,QWORD PTR [ebx-0x70]
  403353:	fimul  DWORD PTR [ebx]
  403355:	mov    ecx,0x9cf504c0
  40335a:	push   esi
  40335b:	scas   eax,DWORD PTR es:[edi]
  40335c:	lar    edx,WORD PTR [ebp+0x1e93fa7f]
  403363:	jmp    0x403326
  403365:	mov    esp,0x495891ae
  40336a:	sahf   
  40336b:	sbb    esi,DWORD PTR es:[eax]
  40336e:	in     al,0x4f
  403370:	ins    DWORD PTR es:[edi],dx
  403371:	imul   ebx,ebx,0x71
  403374:	mov    ds:0x32567c46,eax
  403379:	mov    bl,0x6f
  40337b:	inc    ebx
  40337c:	imul   esp,DWORD PTR ds:0x18cd29d4,0xefd574d9
  403386:	push   eax
  403387:	xor    al,0xd0
  403389:	adc    DWORD PTR [edx-0x5626f05e],0xacd54918
  403393:	pushf  
  403394:	mov    cl,0xd
  403396:	cmp    al,0xf4
  403398:	pushf  
  403399:	push   esi
  40339a:	cmc    
  40339b:	mov    al,ds:0x11e9ea9b
  4033a0:	push   0x91bb51dd
  4033a5:	sub    ebx,DWORD PTR [ecx]
  4033a7:	push   es
  4033a8:	push   esi
  4033a9:	mov    ah,0x54
  4033ab:	mov    esi,0x6da35e2a
  4033b0:	ins    BYTE PTR es:[edi],dx
  4033b1:	icebp  
  4033b2:	jmp    0x403346
  4033b4:	iret   
  4033b5:	xchg   esi,eax
  4033b6:	jg     0x403406
  4033b8:	mov    dl,0x57
  4033ba:	addr16 jle 0x40336c
  4033bd:	cwde   
  4033be:	mov    edx,0xf8d752ea
  4033c3:	bound  edx,QWORD PTR [esi]
  4033c5:	and    eax,0xea8b565a
  4033ca:	xor    bh,BYTE PTR ss:[esi+0x40]
  4033ce:	push   ebx
  4033cf:	scas   eax,DWORD PTR es:[edi]
  4033d0:	sbb    BYTE PTR [edx],ah
  4033d2:	pop    esp
  4033d3:	retf   0xd89b
  4033d6:	pop    ecx
  4033d7:	ins    DWORD PTR es:[edi],dx
  4033d8:	push   ecx
  4033d9:	adc    al,dl
  4033db:	popa   
  4033dc:	or     BYTE PTR [ebp-0x359f02f5],cl
  4033e2:	mov    al,0xfb
  4033e4:	inc    edx
  4033e5:	mov    edx,0xeb61e778
  4033ea:	lock sbb ah,BYTE PTR [ecx+0x2c]
  4033ee:	cld    
  4033ef:	cdq    
  4033f0:	and    BYTE PTR [ecx*2-0x90d29fe],dh
  4033f7:	add    al,0x2b
  4033fa:	retf   0xc26c
  4033fd:	(bad)  
  4033fe:	pop    eax
  4033ff:	(bad)  
  403400:	retf   0x9cc1
  403403:	add    eax,0x976344e5
  403408:	add    eax,0x2f1b5f34
  40340d:	jbe    0x40340a
  40340f:	cmp    ecx,ebx
  403411:	jp     0x403485
  403413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403414:	imul   ebx,DWORD PTR ds:0x76d00253,0x7
  40341b:	dec    esi
  40341c:	push   0xffffff9a
  40341e:	dec    edx
  40341f:	loope  0x4033dc
  403421:	dec    edx
  403422:	rcl    BYTE PTR [edi],0xe9
  403425:	cmp    al,0x13
  403427:	jbe    0x4033e8
  403429:	xchg   ebx,eax
  40342a:	push   ss
  40342b:	fs ss and eax,0xec5b303d
  403432:	push   esp
  403433:	cmp    al,0x73
  403435:	sub    dh,BYTE PTR [ebx+0x4]
  403438:	clc    
  403439:	jae    0x403490
  40343b:	inc    ecx
  40343c:	mov    edi,0x1e709577
  403441:	mov    ebx,0xd182c94e
  403446:	(bad)  
  403447:	mov    eax,ds:0xc74004f1
  40344c:	pop    ebx
  40344d:	test   eax,0x72f090e8
  403452:	ss pop esi
  403455:	pop    edx
  403456:	stc    
  403457:	lahf   
  403458:	jmp    0x4033da
  40345a:	pop    ds
  40345b:	loope  0x403419
  40345d:	pusha  
  40345e:	sub    esp,DWORD PTR ds:0xaaf51a8d
  403464:	push   ebx
  403465:	push   eax
  403466:	or     DWORD PTR [edi],ebx
  403468:	lods   al,BYTE PTR ds:[esi]
  403469:	add    ch,BYTE PTR [edx]
  40346b:	aad    0x1c
  40346d:	out    0xd7,eax
  40346f:	mov    edx,DWORD PTR [edi-0x22]
  403472:	leave  
  403473:	mov    ?,WORD PTR [edx]
  403475:	scas   eax,DWORD PTR es:[edi]
  403476:	xchg   edx,eax
  403477:	jno    0x403437
  403479:	lahf   
  40347a:	mov    eax,0x81835407
  40347f:	nop
  403480:	and    eax,ecx
  403482:	sbb    DWORD PTR [edi-0x7d],eax
  403485:	lods   al,BYTE PTR ds:[esi]
  403486:	(bad)  
  403487:	mov    eax,0xac97892f
  40348c:	xchg   ebp,eax
  40348d:	mov    ch,0x32
  40348f:	call   0x29276d98
  403494:	mov    esp,0xb1584e7
  403499:	push   ds
  40349a:	add    ah,BYTE PTR [edi+ecx*2+0x1f0dc8b3]
  4034a1:	out    0xf3,al
  4034a3:	jns    0x4034a5
  4034a5:	cli    
  4034a6:	rcr    dl,0x55
  4034a9:	scas   al,BYTE PTR es:[edi]
  4034aa:	add    DWORD PTR [ebx],0xffffffd8
  4034ad:	cmp    ebp,eax
  4034af:	call   0x7ec62efa
  4034b4:	mov    ecx,0x520cc80e
  4034b9:	fbld   TBYTE PTR [esi]
  4034bb:	add    BYTE PTR [esi],ah
  4034bd:	xchg   ecx,eax
  4034be:	lods   eax,DWORD PTR ds:[esi]
  4034bf:	(bad)  
  4034c0:	(bad)  [edx+0x4a]
  4034c3:	xlat   BYTE PTR ds:[ebx]
  4034c4:	inc    edx
  4034c5:	cmc    
  4034c6:	mov    eax,0xee297f0
  4034cb:	jmp    0x403523
  4034cd:	xchg   ecx,eax
  4034ce:	add    al,0xee
  4034d0:	pusha  
  4034d1:	gs xor al,0x7c
  4034d4:	mov    bh,0xbb
  4034d6:	shl    ah,1
  4034d8:	and    eax,0xc01b9d26
  4034dd:	sub    ch,BYTE PTR [esi+edi*1]
  4034e0:	add    esi,edi
  4034e2:	inc    eax
  4034e3:	fwait
  4034e4:	outs   dx,DWORD PTR ds:[esi]
  4034e5:	add    esi,DWORD PTR [ecx+0x2b]
  4034e8:	and    edx,DWORD PTR [ebp-0x570a16d]
  4034ee:	bound  eax,QWORD PTR [esi+0x456156ca]
  4034f4:	push   esp
  4034f6:	cli    
  4034f7:	cli    
  4034f8:	test   al,0x15
  4034fa:	pop    es
  4034fb:	cmc    
  4034fc:	or     DWORD PTR [edx-0x2b470f59],edi
  403502:	cs xchg ecx,eax
  403504:	push   edx
  403505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403506:	les    sp,DWORD PTR [ecx-0x61]
  40350a:	mov    dh,0x34
  40350c:	cmc    
  40350d:	hlt    
  40350e:	ds or  eax,0x671f64f9
  403514:	jne    0x40351f
  403516:	iret   
  403517:	cmp    DWORD PTR [edx-0x6aef92c6],0x42971dff
  403521:	jg     0x4034dc
  403523:	imul   eax,edx,0x2174c105
  403529:	ret    
  40352a:	mov    dh,0xf8
  40352c:	push   esp
  40352d:	dec    edx
  40352e:	and    al,0x16
  403530:	mov    ebp,fs
  403532:	ja     0x403506
  403534:	pop    ss
  403535:	lahf   
  403536:	sar    ecx,cl
  403538:	jmp    0x8094088c
  40353d:	fsubr  DWORD PTR [edx]
  40353f:	push   DWORD PTR [ebp+0x56]
  403542:	rcr    DWORD PTR [edx-0x42],cl
  403545:	stos   BYTE PTR es:[edi],al
  403546:	arpl   WORD PTR [esi-0x51],bp
  403549:	out    0x8,eax
  40354b:	or     al,0x11
  40354d:	xor    ebp,DWORD PTR [ebx+ecx*4+0x56]
  403551:	push   ebx
  403552:	dec    ebx
  403553:	add    al,0x40
  403555:	jg     0x4034ed
  403557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403558:	ins    DWORD PTR es:[edi],dx
  403559:	(bad)  
  40355a:	mov    dh,0x34
  40355c:	mov    ds:0xcc9a4c88,al
  403561:	in     al,dx
  403562:	mov    eax,0xbd10bf0a
  403567:	pop    ds
  403568:	xlat   BYTE PTR ds:[ebx]
  403569:	shr    DWORD PTR [edx+0x11975afa],0x2f
  403570:	xor    al,0x59
  403572:	fsub   DWORD PTR [ecx-0x31]
  403575:	mov    bh,0xa8
  403577:	add    eax,0x9c7b2eec
  40357c:	imul   edi,DWORD PTR ds:0xe0152549,0x74cd0e9f
  403586:	dec    eax
  403587:	cdq    
  403588:	stos   DWORD PTR es:[edi],eax
  403589:	mov    cl,BYTE PTR [edi-0x471ec366]
  40358f:	mov    eax,ss
  403591:	loope  0x403606
  403593:	cmp    BYTE PTR [ecx+0x4],ch
  403596:	ja     0x4035c2
  403598:	and    dh,BYTE PTR ds:[edx-0x63e19381]
  40359f:	xlat   BYTE PTR ds:[ebx]
  4035a0:	aaa    
  4035a1:	cli    
  4035a2:	mov    bh,0x4d
  4035a4:	repnz cld 
  4035a6:	ret    
  4035a7:	xchg   BYTE PTR [edi+0x429f3106],ah
  4035ad:	in     al,0x7b
  4035af:	iret   
  4035b0:	maskmovq mm3,mm5
  4035b3:	cmp    esp,esi
  4035b5:	xor    BYTE PTR [ebp-0x61],bl
  4035b8:	dec    ebp
  4035b9:	fcom   QWORD PTR [ebx+0x5d]
  4035bc:	pop    ebx
  4035bd:	mov    eax,ds:0x1831bb53
  4035c2:	outs   dx,BYTE PTR ds:[esi]
  4035c3:	dec    esi
  4035c4:	int3   
  4035c5:	jae    0x4035f6
  4035c7:	inc    edx
  4035c8:	add    BYTE PTR ds:0x4b1f8b14,ah
  4035ce:	retf   0xcb18
  4035d1:	push   esp
  4035d2:	mov    BYTE PTR [edi+ebx*8+0x67],ch
  4035d6:	xchg   BYTE PTR [ecx+0x35a43301],ch
  4035dc:	and    eax,0x470e17d6
  4035e1:	mov    bl,0x2f
  4035e3:	ins    DWORD PTR es:[edi],dx
  4035e4:	add    ebp,DWORD PTR ds:0x8e9f4a9a
  4035ea:	ret    
  4035eb:	sbb    DWORD PTR [ecx],esp
  4035ed:	xor    BYTE PTR ds:0xd0069bac,cl
  4035f3:	daa    
  4035f4:	sti    
  4035f5:	aad    0x9
  4035f7:	xor    eax,esp
  4035f9:	add    eax,0x4471eedd
  4035fe:	add    eax,0xcbbfb3e2
  403603:	fisubr WORD PTR ds:0x65b84fba
  403609:	rol    BYTE PTR [edi+0x4eb0ecad],0x6d
  403610:	dec    ecx
  403611:	ja     0x4035d1
  403613:	dec    ecx
  403614:	add    BYTE PTR [edx+0x168c466e],dh
  40361a:	rcr    BYTE PTR [ebp+0x58c7ddc7],1
  403620:	jmp    0x403660
  403622:	fs sub dl,al
  403625:	fstp   st(5)
  403627:	fmul   QWORD PTR [edx+edi*1]
  40362a:	repz aad 0x39
  40362d:	pop    ss
  40362e:	aam    0xef
  403630:	pop    ecx
  403631:	leave  
  403632:	call   0xfa9042fa
  403637:	and    BYTE PTR [eax],bh
  403639:	fstp   QWORD PTR [esi-0x44957ee8]
  40363f:	imul   eax,DWORD PTR [esi+0x43],0xa7eda221
  403646:	sbb    ch,BYTE PTR [ecx+0x3f6214c8]
  40364c:	clc    
  40364d:	pop    esi
  40364e:	cmp    bl,BYTE PTR [esi]
  403650:	(bad)  
  403651:	sub    eax,0x1b056438
  403656:	clc    
  403657:	xchg   ecx,eax
  403658:	mov    WORD PTR [esi-0x6f],?
  40365b:	cwde   
  40365c:	mov    ecx,0xe76c1072
  403661:	pop    ds
  403662:	or     bl,bl
  403664:	xor    ah,ch
  403666:	mov    ah,0x6d
  403668:	loop   0x40360f
  40366a:	lods   al,BYTE PTR ds:[esi]
  40366b:	pop    ebp
  40366c:	or     eax,0x71d2ba21
  403671:	xchg   esi,eax
  403672:	sub    DWORD PTR ds:0x6194ae25,edi
  403678:	mov    edi,cs
  40367a:	repnz fnsave [ecx+0x2d]
  40367e:	inc    edx
  40367f:	push   edi
  403680:	mov    esi,0xcc2a531
  403685:	nop
  403686:	jb     0x403673
  403688:	dec    ebx
  403689:	ret    
  40368a:	ins    DWORD PTR es:[edi],dx
  40368b:	mov    ebp,0x1305f055
  403690:	sub    eax,0x3219ffc5
  403695:	faddp  st(6),st
  403697:	mov    BYTE PTR [edi+0x2fb23690],0x29
  40369e:	push   0x46
  4036a0:	mov    al,ds:0xcd7edd3d
  4036a5:	int    0xad
  4036a7:	or     dl,dh
  4036a9:	cmp    BYTE PTR ds:0x11dda877,dh
  4036af:	or     BYTE PTR [ecx],ah
  4036b1:	cmp    edi,DWORD PTR [eax+0x78c35ec2]
  4036b7:	js     0x40368a
  4036b9:	inc    esp
  4036ba:	inc    edi
  4036bb:	inc    ebx
  4036bc:	mov    ah,bh
  4036be:	cmp    ch,BYTE PTR [ebx-0x77]
  4036c1:	or     ah,BYTE PTR [esp+eiz*8]
  4036c4:	sahf   
  4036c5:	sahf   
  4036c6:	retf   0x2d5c
  4036c9:	dec    edx
  4036ca:	xor    ebx,esi
  4036cc:	(bad)  
  4036cd:	and    eax,0x5d04f0b9
  4036d2:	mov    eax,ds:0x4a6e7b01
  4036d7:	and    DWORD PTR [edi-0xb],ecx
  4036da:	ret    
  4036db:	and    bl,cl
  4036dd:	and    ecx,edx
  4036df:	je     0x40371f
  4036e1:	imul   esi,DWORD PTR ds:0x7b4fdea4,0x67
  4036e8:	and    al,0x46
  4036ea:	ja     0x4036e6
  4036ec:	push   ecx
  4036ed:	lock push 0x7f82c0ae
  4036f3:	and    al,0xc9
  4036f5:	out    0x3e,al
  4036f7:	aaa    
  4036f8:	(bad)  
  4036f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036fa:	inc    esi
  4036fb:	and    DWORD PTR [edx+0x78d00bd0],ecx
  403701:	into   
  403702:	(bad)  
  403703:	push   es
  403704:	daa    
  403705:	and    dl,BYTE PTR [esi]
  403707:	(bad)  
  403709:	and    eax,DWORD PTR [esi-0x72]
  40370c:	mov    ds:0x2dba422,al
  403711:	jle    0x4036a4
  403713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403714:	jbe    0x403696
  403716:	push   cs
  403717:	xchg   esi,eax
  403718:	test   eax,0xdd6e4ff7
  40371d:	test   ah,al
  40371f:	mov    dl,0xed
  403721:	add    DWORD PTR [esp+ecx*1-0x4df5c600],esp
  403728:	mov    ch,0x68
  40372a:	add    al,0xd
  40372c:	or     eax,DWORD PTR ds:0x8e1a48ea
  403732:	jmp    0x200b070a
  403737:	sar    ch,cl
  403739:	fiadd  DWORD PTR [edx]
  40373b:	(bad)
  40373e:	mov    ah,0x7a
  403740:	mov    eax,0x9be19c
  403745:	jne    0x4037a2
  403747:	inc    esi
  403748:	(bad)  
  403749:	mov    ecx,0x73fb683a
  40374e:	ror    BYTE PTR [edi-0xafbd2da],cl
  403754:	dec    ecx
  403755:	or     BYTE PTR [ebp-0x74],bh
  403758:	stos   BYTE PTR es:[edi],al
  403759:	or     eax,0xdd616ffe
  40375e:	out    0x7f,al
  403760:	dec    esi
  403761:	fisubr WORD PTR [edx+0x55]
  403764:	jmp    0xffa62b51
  403769:	loope  0x403788
  40376b:	xchg   ecx,eax
  40376c:	stc    
  40376d:	and    esp,ebp
  40376f:	jno    0x4037b2
  403771:	inc    ebx
  403772:	xchg   ecx,eax
  403773:	add    bh,BYTE PTR ds:0x6f7b65cf
  403779:	scas   al,BYTE PTR es:[edi]
  40377a:	mov    ch,0x4a
  40377c:	mov    al,ds:0x69fa9f63
  403781:	add    DWORD PTR [esi-0x3f],ebx
  403784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403785:	loope  0x403747
  403787:	dec    edx
  403788:	jb     0x4037fa
  40378a:	fs add al,0x5e
  40378d:	xchg   esi,eax
  40378e:	out    0xe6,eax
  403790:	pop    esi
  403791:	jl     0x40371d
  403793:	push   ds
  403794:	pop    ss
  403795:	cmp    esp,DWORD PTR [ecx+0x67]
  403798:	fmul   QWORD PTR [ecx]
  40379a:	jne    0x403801
  40379c:	ja     0x4037d7
  40379e:	cmc    
  40379f:	xor    ebp,DWORD PTR [esp+eax*2-0x866c3d]
  4037a6:	les    edx,FWORD PTR [esi-0x36a3dd04]
  4037ac:	ss jge 0x4037cc
  4037af:	xor    dh,BYTE PTR [ebp+0xac17413]
  4037b5:	lods   eax,DWORD PTR ds:[esi]
  4037b6:	fadd   QWORD PTR [ebp+eax*4+0x261e55c6]
  4037bd:	push   ecx
  4037be:	xchg   ebp,eax
  4037bf:	inc    ecx
  4037c0:	or     esi,DWORD PTR [esi]
  4037c2:	jge    0x40381f
  4037c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c5:	into   
  4037c6:	and    al,BYTE PTR [esi+0x7478ec73]
  4037cc:	(bad)  
  4037cd:	mov    WORD PTR [edi-0x4fffa356],fs
  4037d3:	sub    bh,bl
  4037d5:	fwait
  4037d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037d7:	adc    eax,0x64adf6bf
  4037dc:	push   es
  4037dd:	cmp    al,0xca
  4037df:	out    dx,eax
  4037e0:	xchg   ecx,eax
  4037e1:	and    ebp,DWORD PTR [ecx]
  4037e3:	clc    
  4037e4:	popa   
  4037e5:	pop    eax
  4037e6:	test   eax,0x14051fcd
  4037eb:	push   edx
  4037ec:	sub    edx,DWORD PTR [eax]
  4037ee:	lahf   
  4037ef:	adc    DWORD PTR [eax+0x5a],ecx
  4037f2:	sub    eax,0x318f9c25
  4037f7:	mov    ds:0xbed54065,eax
  4037fc:	sub    BYTE PTR [ebp+0x32],dl
  4037ff:	mov    WORD PTR [edi],gs
  403801:	xchg   edi,eax
  403802:	out    dx,eax
  403803:	dec    edi
  403804:	jbe    0x40379b
  403806:	iret   
  403807:	js     0x40384d
  403809:	leave  
  40380a:	push   edi
  40380b:	xchg   ebp,eax
  40380c:	or     edx,ebx
  40380e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40380f:	mov    edx,0xc3069229
  403814:	jae    0x40379e
  403816:	outs   dx,DWORD PTR ds:[esi]
  403817:	(bad)  
  403818:	mov    al,ds:0xf42d3ae1
  40381d:	or     al,al
  40381f:	push   0xfffffff8
  403821:	imul   edi,DWORD PTR [ebp+0x3cb6c9d5],0xf5699fa9
  40382b:	popa   
  40382c:	cld    
  40382d:	dec    ebp
  40382e:	cmp    al,0xcb
  403830:	pop    ss
  403831:	shr    DWORD PTR [ecx+0x5504075f],1
  403837:	sub    BYTE PTR [edi],ch
  403839:	jle    0x4037f7
  40383b:	adc    edx,DWORD PTR [ebp-0x59bb8160]
  403841:	jmp    0xdc61:0x9758b81e
  403848:	or     dl,dh
  40384a:	add    al,0xb7
  40384c:	pusha  
  40384d:	aam    0xdc
  40384f:	popf   
  403850:	pop    ebp
  403851:	add    eax,0x13bd678a
  403856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403857:	inc    edi
  403858:	add    al,0x1c
  40385a:	nop
  40385b:	ret    
  40385c:	test   DWORD PTR [esi-0x47c483c1],edi
  403862:	push   esp
  403863:	dec    edi
  403864:	dec    eax
  403865:	cwde   
  403866:	(bad)  
  403867:	dec    ecx
  403868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403869:	inc    esi
  40386a:	dec    BYTE PTR [bp+di+0xda6]
  40386f:	ins    BYTE PTR es:[edi],dx
  403870:	call   0x55515495
  403875:	div    BYTE PTR es:[edx-0x2b1608a]
  40387c:	dec    ebx
  40387d:	out    dx,al
  40387e:	inc    ecx
  40387f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403880:	add    BYTE PTR [edi+0x70b30c9b],al
  403886:	jmp    0x614b9021
  40388b:	jno    0x403866
  40388d:	sub    DWORD PTR [edi-0x29f34c42],ebp
  403893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403894:	stos   BYTE PTR es:[edi],al
  403895:	cwde   
  403896:	push   ds
  403897:	pusha  
  403898:	sbb    esi,ebp
  40389a:	loop   0x4038dd
  40389c:	xchg   eax,ebp
  40389e:	in     eax,dx
  40389f:	ja     0x403846
  4038a1:	sbb    ah,dl
  4038a3:	(bad)  
  4038a4:	fucom  st(6)
  4038a6:	stc    
  4038a7:	mov    dl,ah
  4038a9:	or     eax,0xf07acfec
  4038ae:	pop    ss
  4038af:	enter  0xdf5b,0xb6
  4038b3:	test   DWORD PTR ds:0x3dae26e0,esp
  4038b9:	sahf   
  4038ba:	inc    ebp
  4038bb:	xchg   BYTE PTR ds:0xedca92f4,al
  4038c1:	in     al,dx
  4038c2:	adc    eax,edi
  4038c4:	mov    eax,0x88e27db0
  4038c9:	add    ah,dl
  4038cb:	rcl    DWORD PTR [edi],0x4a
  4038ce:	test   eax,0xaf3c6a08
  4038d3:	xchg   ebp,eax
  4038d4:	jmp    0x5795:0x7a98c5d2
  4038db:	xor    ebx,edx
  4038dd:	and    BYTE PTR [edi-0x11],0xed
  4038e1:	mov    al,ds:0xd417d44f
  4038e6:	sbb    DWORD PTR [esi+0x5e],ebp
  4038e9:	mov    dl,dh
  4038eb:	aaa    
  4038ec:	ja     0x40389f
  4038ee:	and    edi,DWORD PTR [ecx+0x28]
  4038f1:	int    0xdd
  4038f3:	arpl   WORD PTR [esi],sp
  4038f5:	out    dx,al
  4038f6:	xchg   edx,eax
  4038f7:	or     BYTE PTR [ecx],bh
  4038f9:	es pop ebp
  4038fb:	sub    esi,DWORD PTR ds:0x85d5c5a1
  403901:	pop    edx
  403902:	xchg   ecx,eax
  403903:	pop    ds
  403904:	daa    
  403905:	mov    esp,0x81204624
  40390a:	cmp    DWORD PTR [eax],edi
  40390c:	xor    dl,BYTE PTR [edi-0x1c]
  40390f:	mov    ebp,0x3deb57d3
  403914:	sub    DWORD PTR [edx+ebp*1-0x51],0x79
  403919:	inc    ecx
  40391a:	xor    al,0xf
  40391c:	add    BYTE PTR [edx+0x64],al
  40391f:	in     al,0x3e
  403921:	mov    al,ds:0x54ac78ce
  403926:	fadd   QWORD PTR [edx-0x74]
  403929:	cwde   
  40392a:	sub    dl,BYTE PTR [ebx+edi*1-0x75]
  40392e:	pop    ss
  40392f:	(bad)  
  403930:	jecxz  0x4038c7
  403932:	cdq    
  403933:	mov    WORD PTR [ebx+0x7881c7d9],?
  403939:	xchg   ebp,eax
  40393a:	fistp  WORD PTR [esi-0x66]
  40393d:	mov    ds:0xb9bbb800,al
  403942:	mov    esp,ebx
  403944:	mov    eax,0x637bceda
  403949:	or     esi,DWORD PTR [edi-0x3843039d]
  40394f:	and    DWORD PTR [edx+0x3697928b],ecx
  403955:	aaa    
  403956:	inc    edx
  403957:	pushf  
  403958:	sub    al,cl
  40395a:	xor    eax,0xa08d6845
  40395f:	in     al,dx
  403960:	sahf   
  403961:	call   0x957e877a
  403966:	xchg   DWORD PTR [edi+0x5522601],esi
  40396c:	aas    
  40396d:	cmp    DWORD PTR [ecx],ebp
  40396f:	push   ds
  403970:	adc    DWORD PTR [ebx-0x6c38cc99],0xffffffdb
  403977:	addr16 mov eax,0x2283fdc5
  40397d:	ret    0x716a
  403980:	clc    
  403981:	bound  ebp,QWORD PTR [ecx]
  403983:	cdq    
  403984:	bound  edx,QWORD PTR [ecx-0x4b86afc2]
  40398a:	(bad)  [edi-0x6d]
  40398d:	(bad)  
  40398e:	push   edi
  40398f:	call   0xfe830ea5
  403994:	mov    edi,0xdf582353
  403999:	ins    BYTE PTR es:[edi],dx
  40399a:	xchg   ebx,eax
  40399b:	in     eax,dx
  40399c:	test   DWORD PTR [ecx-0x238a8fdf],edx
  4039a2:	rcr    ebp,1
  4039a4:	push   0x7
  4039a6:	ficom  DWORD PTR [edi+0x3e]
  4039a9:	in     eax,0xb2
  4039ab:	inc    edx
  4039ac:	dec    esp
  4039ad:	inc    edi
  4039ae:	push   cs
  4039af:	mov    bh,0xf7
  4039b1:	(bad)  [ebx]
  4039b3:	dec    eax
  4039b4:	xchg   edx,eax
  4039b5:	pop    ds
  4039b6:	cmp    DWORD PTR [edi],eax
  4039b8:	cmp    BYTE PTR [esp+esi*1+0x52],al
  4039bc:	imul   edi,DWORD PTR [eax+0xdd5a95d],0xb68d4bc7
  4039c6:	daa    
  4039c7:	repz hlt 
  4039c9:	jnp    0x4039dd
  4039cb:	lahf   
  4039cc:	dec    ebx
  4039cd:	ds pop edi
  4039cf:	fs push ss
  4039d1:	ret    
  4039d2:	and    ah,0x37
  4039d5:	mov    ah,0x1f
  4039d7:	hlt    
  4039d8:	sbb    DWORD PTR [esi+edx*1-0x2abfc22],ecx
  4039df:	pop    ds
  4039e0:	aad    0x8f
  4039e2:	xor    ebx,DWORD PTR [ecx-0x2e9dd2f7]
  4039e8:	pop    ds
  4039e9:	cwde   
  4039ea:	retf   0xfeef
  4039ed:	and    al,0x99
  4039ef:	mov    al,0xf8
  4039f1:	add    eax,edx
  4039f3:	shl    BYTE PTR [ebx+0x72],0x65
  4039f7:	sahf   
  4039f8:	jo     0x4039c8
  4039fa:	lds    edi,FWORD PTR [esi+0x290d2e34]
  403a00:	lds    esi,FWORD PTR [ecx-0xcc12339]
  403a06:	mov    ebx,DWORD PTR [ebx+0x67]
  403a09:	jne    0x4039f8
  403a0b:	push   edi
  403a0c:	cmp    eax,0x2995cfee
  403a11:	cs arpl bp,bx
  403a14:	(bad)  
  403a15:	adc    ecx,DWORD PTR [ecx-0x8d03d27]
  403a1b:	adc    BYTE PTR [edi-0x3f12568b],al
  403a21:	cmp    ah,BYTE PTR [edx+0x39423238]
  403a27:	loope  0x403a49
  403a29:	mov    edx,0xbe877b68
  403a2e:	cmp    eax,0x2ffda6f4
  403a33:	arpl   WORD PTR [esp+edi*8+0x6b],sp
  403a37:	jle    0x403a32
  403a39:	sbb    DWORD PTR [ebx+0x34],0xfffffffa
  403a3d:	jmp    0x403aa9
  403a3f:	cmp    edx,0xffffffe4
  403a42:	sbb    esi,DWORD PTR [ebp+0x76]
  403a45:	sbb    BYTE PTR [esi+0x32],bh
  403a48:	adc    BYTE PTR [edi-0x45d6a6d4],dh
  403a4e:	aam    0xe7
  403a50:	int    0x4
  403a52:	mov    dl,0x64
  403a54:	retf   0x19bc
  403a57:	nop
  403a58:	in     eax,dx
  403a59:	sbb    ebx,DWORD PTR [esi-0x23ccbfb6]
  403a5f:	bound  esi,QWORD PTR [eax-0x50b20a81]
  403a65:	or     esi,DWORD PTR [edi+0x476fdff8]
  403a6b:	int3   
  403a6c:	aaa    
  403a6d:	call   DWORD PTR [ecx+esi*2-0x2a]
  403a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a72:	pop    eax
  403a73:	aam    0x4c
  403a75:	push   ds
  403a76:	gs mov eax,0x93d415c6
  403a7c:	pop    edi
  403a7d:	mov    ebx,?
  403a7f:	cmp    DWORD PTR [esi+0x2a],ecx
  403a82:	add    bh,BYTE PTR [ecx+0x4d]
  403a85:	ins    BYTE PTR es:[edi],dx
  403a86:	xchg   edi,eax
  403a87:	xchg   esp,eax
  403a88:	data16 out dx,al
  403a8a:	adc    ebp,DWORD PTR [edi-0x578d1def]
  403a90:	pop    edx
  403a91:	ret    
  403a92:	push   edi
  403a93:	daa    
  403a94:	cmp    al,0xa
  403a96:	mov    dh,0x7d
  403a98:	cdq    
  403a99:	add    eax,esi
  403a9b:	push   eax
  403a9c:	ror    BYTE PTR [ecx],0xae
  403a9f:	out    0x5e,al
  403aa1:	mov    BYTE PTR [bx+si],bl
  403aa4:	inc    eax
  403aa5:	jne    0x403a6c
  403aa7:	cmp    ebp,DWORD PTR [eax+edx*8+0x22509ddd]
  403aae:	(bad)  
  403aaf:	sub    cl,BYTE PTR [esi]
  403ab1:	inc    esp
  403ab2:	retf   0x73d6
  403ab5:	or     eax,0x2bb031c5
  403aba:	add    dl,0x26
  403abd:	inc    esp
  403abe:	sbb    ebp,DWORD PTR [edx]
  403ac0:	cmc    
  403ac1:	int3   
  403ac2:	imul   ebp,DWORD PTR [ecx+ecx*8-0x52],0xffffffd3
  403ac7:	inc    DWORD PTR [ecx]
  403ac9:	fimul  DWORD PTR [edx+ecx*4]
  403acc:	sti    
  403acd:	dec    esp
  403ace:	add    cl,BYTE PTR ds:0x35862451
  403ad4:	aas    
  403ad5:	(bad)  
  403ad6:	test   cl,0xac
  403ad9:	int3   
  403ada:	xor    dh,al
  403adc:	loop   0x403b01
  403ade:	ins    DWORD PTR es:[edi],dx
  403adf:	xchg   edi,eax
  403ae0:	std    
  403ae1:	shl    BYTE PTR [ecx-0x46],1
  403ae4:	pop    ecx
  403ae5:	out    dx,eax
  403ae6:	outs   dx,DWORD PTR ds:[esi]
  403ae7:	and    eax,0xff5a8d09
  403aec:	and    al,0x1
  403aee:	test   BYTE PTR [edx],al
  403af0:	gs mov ebx,ss
  403af3:	inc    esp
  403af4:	mov    ds:0x4ed6fc0e,al
  403af9:	int    0xce
  403afb:	sub    eax,0x92bd57c2
  403b00:	adc    BYTE PTR [edx+0x1631466c],0x74
  403b07:	repnz rol edi,0x4d
  403b0b:	sbb    al,0x4c
  403b0d:	pop    ss
  403b0e:	ret    
  403b0f:	cmp    eax,0x57a4b0d5
  403b14:	push   cs
  403b15:	xor    cl,BYTE PTR [ebx-0x6d800163]
  403b1b:	push   edi
  403b1c:	jb     0x403ac5
  403b1e:	sbb    BYTE PTR [ebx+0x7f],bh
  403b21:	mov    BYTE PTR [ecx+ebp*4],cl
  403b24:	pusha  
  403b25:	dec    eax
  403b26:	or     eax,0xfad6b35
  403b2b:	mov    dl,0x50
  403b2d:	or     edi,DWORD PTR [edi+ecx*4]
  403b30:	mov    bh,0x2c
  403b32:	push   ebp
  403b33:	pop    esi
  403b34:	mov    bl,BYTE PTR [ecx+0x3eeed024]
  403b3a:	push   0xffffffaf
  403b3c:	mov    bl,0xf2
  403b3e:	and    BYTE PTR [edi-0x2321e6e6],0x89
  403b45:	cli    
  403b46:	pop    ebp
  403b47:	rcl    ah,0xc0
  403b4a:	in     eax,0xa1
  403b4c:	test   al,0x60
  403b4e:	inc    eax
  403b4f:	xchg   DWORD PTR [eax+0x3d],ebp
  403b52:	dec    edi
  403b53:	xchg   esi,eax
  403b54:	xor    DWORD PTR [ecx],0xffffffc2
  403b57:	mov    ah,0xc5
  403b59:	cmp    esp,ebx
  403b5b:	jno    0x403b5d
  403b5d:	outs   dx,DWORD PTR ds:[esi]
  403b5e:	sub    al,0x42
  403b60:	addr16 xchg edx,eax
  403b62:	ret    0x2e04
  403b65:	push   esi
  403b66:	test   DWORD PTR [ebx+esi*2],ebx
  403b69:	jne    0x403b12
  403b6b:	push   ds
  403b6c:	push   cs
  403b6d:	shl    DWORD PTR [eax],0x58
  403b70:	pop    ds
  403b71:	pop    edi
  403b72:	add    esi,edi
  403b74:	xchg   ebp,eax
  403b75:	lea    eax,ds:0x8ed757ab
  403b7b:	cmp    BYTE PTR [edx+0x4c],0xf9
  403b7f:	retf   0xc818
  403b82:	icebp  
  403b83:	retf   0x565e
  403b86:	pop    esi
  403b87:	mov    al,0x1f
  403b89:	or     BYTE PTR [ebp+esi*8+0x58365761],cl
  403b90:	cmp    al,0xf0
  403b92:	test   eax,0xb2ca80f3
  403b97:	ret    
  403b98:	out    0xe9,eax
  403b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b9b:	mov    edx,0x13e18357
  403ba0:	sub    al,0x7b
  403ba2:	hlt    
  403ba3:	imul   edx,DWORD PTR [esi+0x22],0xf68d067b
  403baa:	addr16 pop esi
  403bac:	in     al,0x91
  403bae:	push   esi
  403baf:	lock push 0xf44e5c9b
  403bb5:	adc    ebx,edx
  403bb7:	xchg   BYTE PTR fs:[esi+0x7d9aa254],ch
  403bbe:	loope  0x403c1f
  403bc0:	jle    0x403bb0
  403bc2:	mov    dh,BYTE PTR [eax-0x6fe4f0ec]
  403bc8:	cld    
  403bc9:	or     eax,0x7dbc6e29
  403bce:	mov    ebp,0x8e313671
  403bd3:	imul   ebx,ecx,0xcdd27c4b
  403bd9:	adc    al,BYTE PTR [edx+0x6878154a]
  403bdf:	outs   dx,BYTE PTR ds:[esi]
  403be0:	pushf  
  403be1:	mov    eax,0x745ece74
  403be6:	(bad)  
  403be7:	mov    esp,0xf6450b4f
  403bec:	loop   0x403c43
  403bee:	and    ch,bl
  403bf0:	dec    edx
  403bf1:	dec    ebx
  403bf2:	pop    edi
  403bf3:	pop    DWORD PTR [ebx-0x3f8fdab4]
  403bf9:	mov    DWORD PTR [eax+0x31],ebp
  403bfc:	adc    DWORD PTR [esi+0x41cf5d97],edi
  403c02:	ds ret 
  403c04:	dec    ecx
  403c05:	fmul   st,st(4)
  403c07:	dec    esp
  403c08:	ins    DWORD PTR es:[edi],dx
  403c09:	out    0xdd,eax
  403c0b:	ror    ecx,cl
  403c0d:	or     BYTE PTR [edi*4+0x3adafdcd],bl
  403c14:	jmp    0xe126:0xdc6dae7c
  403c1b:	neg    BYTE PTR [ebp-0x6674cb17]
  403c21:	push   ebp
  403c22:	cmp    BYTE PTR ds:0xaa9ff749,0x9a
  403c29:	xor    al,0xcd
  403c2b:	das    
  403c2c:	std    
  403c2d:	mov    bh,0xac
  403c2f:	out    0xb0,eax
  403c31:	or     BYTE PTR [esi],bh
  403c33:	ret    
  403c34:	inc    ebp
  403c35:	mov    ds:0x687e8656,eax
  403c3a:	ret    0x479f
  403c3d:	dec    edi
  403c3e:	outs   dx,DWORD PTR ds:[esi]
  403c3f:	pop    esp
  403c40:	dec    ecx
  403c41:	jno    0x403cb0
  403c43:	cwde   
  403c44:	xchg   esp,eax
  403c45:	test   BYTE PTR [esi],al
  403c47:	popa   
  403c48:	jge    0x403bd1
  403c4a:	stos   DWORD PTR es:[edi],eax
  403c4b:	and    ebp,esi
  403c4d:	mov    cs:0x553f76fa,eax
  403c53:	in     eax,dx
  403c54:	mov    ds:0xf6c1c4e8,eax
  403c59:	sar    DWORD PTR [eax+edi*2+0x1d0950f6],0x74
  403c61:	push   cs
  403c62:	test   eax,0xfe235d39
  403c67:	sub    cl,BYTE PTR es:[ebx]
  403c6a:	mov    ch,0x93
  403c6c:	jle    0x403c06
  403c6e:	loopne 0x403cd5
  403c70:	jno    0x403ca1
  403c72:	cmp    bl,BYTE PTR [edi+ebx*4]
  403c75:	push   esi
  403c76:	add    DWORD PTR [ebx+edi*2+0x77],ebp
  403c7a:	psubd  mm0,mm2
  403c7d:	test   eax,0xa5133025
  403c82:	xor    BYTE PTR [edx+0x2385af6c],ch
  403c88:	pop    esp
  403c89:	repnz jecxz 0x403caf
  403c8c:	jns    0x403d05
  403c8e:	retf   0xb646
  403c91:	mov    BYTE PTR [eax+edi*4],dh
  403c94:	inc    ebp
  403c95:	call   0xc1e2:0xe5192bf9
  403c9c:	rcl    BYTE PTR [ecx+0x18],cl
  403c9f:	xor    BYTE PTR [ebx-0x2c368bc2],bl
  403ca5:	jmp    0x249b:0x48d718d
  403cac:	jno    0x403c46
  403cae:	fs jl  0x403c40
  403cb1:	dec    edi
  403cb2:	retf   0x812c
  403cb5:	retf   0x17b6
  403cb8:	sub    edx,eax
  403cba:	pusha  
  403cbb:	push   ebp
  403cbc:	push   esp
  403cbd:	add    eax,0x6c050950
  403cc2:	mov    al,0xc9
  403cc4:	push   edx
  403cc5:	xor    al,ah
  403cc7:	in     eax,dx
  403cc8:	aas    
  403cc9:	stos   DWORD PTR es:[edi],eax
  403cca:	out    dx,al
  403ccb:	lahf   
  403ccc:	cmp    al,0x46
  403cce:	icebp  
  403ccf:	retf   0x910c
  403cd2:	pop    ds
  403cd3:	es jmp 0x57cd0a3f
  403cd9:	fisubr DWORD PTR [eax-0x53]
  403cdc:	imul   ebx,DWORD PTR [edx-0x78],0xe5df2869
  403ce3:	jg     0x403d59
  403ce5:	data16 daa 
  403ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce8:	into   
  403ce9:	inc    ebx
  403cea:	push   ebp
  403ceb:	sti    
  403cec:	mov    cl,0x1
  403cee:	cmp    ebx,DWORD PTR [edi+0x16]
  403cf1:	jg     0x403cd5
  403cf3:	lahf   
  403cf4:	cdq    
  403cf5:	or     BYTE PTR [esi+edx*1+0x2d],ah
  403cf9:	mov    cl,0x30
  403cfb:	je     0x403d45
  403cfd:	and    BYTE PTR [ecx+0x2f6f72f5],dh
  403d03:	jb     0x403d7c
  403d05:	adc    al,0xe2
  403d07:	in     eax,0xe3
  403d09:	xor    ah,dl
  403d0b:	popa   
  403d0c:	mov    ebp,0xe385d1c
  403d11:	mov    al,0x32
  403d13:	js     0x403d3d
  403d15:	iret   
  403d16:	adc    eax,DWORD PTR [ecx]
  403d18:	xchg   BYTE PTR [ebx],ah
  403d1a:	xchg   esi,eax
  403d1b:	xor    BYTE PTR ds:0x212e633b,bh
  403d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d22:	fs mov bh,0x31
  403d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d26:	bound  edx,QWORD PTR [ebx+0xc]
  403d29:	stos   BYTE PTR es:[edi],al
  403d2a:	and    ah,dh
  403d2c:	mov    fs,WORD PTR [eax+0x66f86b35]
  403d32:	fst    QWORD PTR [edx]
  403d34:	sbb    BYTE PTR ds:0x4e0ca8ba,dh
  403d3a:	jecxz  0x403cc9
  403d3c:	push   cs
  403d3d:	add    al,ah
  403d3f:	into   
  403d40:	add    BYTE PTR [edi+0x77f2451e],0x61
  403d47:	cld    
  403d48:	es ss mov dl,0x13
  403d4c:	mov    eax,0xd6d1ae6e
  403d51:	sub    DWORD PTR [esi+ebp*1-0x782285fe],eax
  403d58:	out    dx,eax
  403d59:	sub    BYTE PTR [ecx+0x19],ch
  403d5c:	cmp    al,bh
  403d5e:	adc    DWORD PTR [ebx-0x466103e1],0xec414d43
  403d68:	pop    ebp
  403d69:	inc    edi
  403d6a:	or     bh,BYTE PTR [ebx-0x4c2797c0]
  403d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d71:	jbe    0x403cf9
  403d73:	fldenv ds:0x3767224f
  403d79:	push   ebp
  403d7a:	aam    0xb9
  403d7c:	inc    ebx
  403d7d:	xor    edi,DWORD PTR [eax+ecx*2]
  403d80:	fmul   QWORD PTR [ecx]
  403d82:	out    0xad,eax
  403d84:	or     DWORD PTR [esi+0xe5a0763],esp
  403d8a:	or     DWORD PTR [ebx],edx
  403d8c:	fwait
  403d8d:	ror    BYTE PTR [edx],0x47
  403d90:	ss test al,0x41
  403d93:	cwde   
  403d94:	div    DWORD PTR [edx]
  403d96:	and    dl,BYTE PTR [esi]
  403d98:	jnp    0x403dde
  403d9a:	mov    ecx,0x4a5c372
  403d9f:	les    ecx,FWORD PTR [edi-0xd]
  403da2:	mov    BYTE PTR [esi-0x4f],cl
  403da5:	pop    eax
  403da6:	(bad)
  403da9:	ja     0x403d5e
  403dab:	pop    ebp
  403dac:	fisttp DWORD PTR [ebx-0x7c]
  403daf:	into   
  403db0:	xchg   BYTE PTR [esi+eax*8+0xc8d812c],dh
  403db7:	or     al,0xb8
  403db9:	push   esp
  403dba:	mov    dh,0x85
  403dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dbd:	sbb    DWORD PTR [ebx+0x115cea02],esp
  403dc3:	repnz test al,0x79
  403dc6:	into   
  403dc7:	pop    esi
  403dc8:	jnp    0x403d65
  403dca:	pop    ecx
  403dcb:	fwait
  403dcc:	push   cs
  403dcd:	(bad)  
  403dce:	loopne 0x403dfa
  403dd0:	xor    DWORD PTR [eax+edx*4],edi
  403dd3:	shl    BYTE PTR [edx],cl
  403dd5:	outs   dx,BYTE PTR ds:[esi]
  403dd6:	js     0x403dd4
  403dd8:	pusha  
  403dd9:	out    0xf7,al
  403ddb:	rcr    ah,0x75
  403dde:	mov    eax,ds:0x3a024af7
  403de3:	mov    ebp,0x74098af8
  403de8:	mov    bl,0x66
  403dea:	enter  0x21bf,0xd8
  403dee:	out    0xb7,eax
  403df0:	dec    ebp
  403df1:	xor    dh,BYTE PTR [ebp+0x26]
  403df4:	xchg   esi,eax
  403df5:	or     BYTE PTR [edx],dh
  403df7:	cmp    eax,0x26be7df5
  403dfc:	mov    eax,0x4c1b7def
  403e01:	retf   
  403e02:	fcmovnu st,st(1)
  403e04:	(bad)  
  403e05:	and    DWORD PTR [ebx+0x1462a49f],eax
  403e0b:	cli    
  403e0c:	repnz jecxz 0x403e18
  403e0f:	dec    edi
  403e10:	arpl   WORD PTR [ecx+0x2e7af757],dx
  403e16:	stos   BYTE PTR es:[edi],al
  403e17:	pop    ebx
  403e18:	je     0x403e93
  403e1a:	push   edi
  403e1b:	cli    
  403e1c:	xor    al,0xa4
  403e1e:	idiv   DWORD PTR [ebp+0x6137c94]
  403e24:	lahf   
  403e25:	fisubr DWORD PTR [edi-0x54]
  403e28:	mov    esi,0xfc8843db
  403e2d:	xchg   edi,eax
  403e2e:	and    al,0xf5
  403e30:	pop    edx
  403e31:	(bad)  
  403e33:	or     al,0xd4
  403e35:	in     al,dx
  403e36:	mov    dh,0xc
  403e38:	inc    esp
  403e39:	mov    edx,0xc066c2b6
  403e3e:	test   ebp,esp
  403e40:	or     edx,edx
  403e42:	adc    DWORD PTR [eax],0xffffffaf
  403e45:	outs   dx,DWORD PTR ds:[esi]
  403e46:	inc    esp
  403e47:	pushf  
  403e48:	adc    eax,0xa2a72561
  403e4d:	repz ss int3 
  403e50:	ret    0x7a24
  403e53:	cld    
  403e54:	push   0xef5ce306
  403e59:	adc    dh,0xe5
  403e5c:	int    0x54
  403e5e:	das    
  403e5f:	rcl    BYTE PTR [ecx-0x5e],1
  403e62:	dec    ecx
  403e63:	sahf   
  403e64:	rol    DWORD PTR [esi+edx*1-0x30],1
  403e68:	sub    DWORD PTR [edx+0x5be2ab99],ecx
  403e6e:	xor    DWORD PTR [edi],edx
  403e70:	shl    BYTE PTR [ecx+0x1592d28f],1
  403e76:	or     ecx,DWORD PTR [esi-0x2e7d4a2]
  403e7c:	test   edx,eax
  403e7e:	das    
  403e7f:	cmp    eax,0x341255ed
  403e84:	jns    0x403e86
  403e86:	(bad)  
  403e87:	mov    bl,0xdc
  403e89:	and    al,0x71
  403e8b:	outs   dx,DWORD PTR ds:[esi]
  403e8c:	sub    al,0x3b
  403e8e:	or     BYTE PTR [esi],ah
  403e90:	adc    ebp,DWORD PTR [ebx+0xec2c90a]
  403e96:	adc    DWORD PTR [ebp+0x7b],0xbe89c548
  403e9d:	cli    
  403e9e:	mov    esi,0xdf776c75
  403ea3:	jecxz  0x403eca
  403ea5:	xor    eax,0x1def07c9
  403eaa:	dec    ecx
  403eab:	je     0x403efe
  403ead:	cmc    
  403eae:	jl     0x403e41
  403eb0:	dec    edx
  403eb1:	lds    edx,FWORD PTR ds:0x42dca929
  403eb7:	add    BYTE PTR ds:0x678ebc7a,cl
  403ebd:	loopne 0x403ea2
  403ebf:	dec    edi
  403ec0:	inc    eax
  403ec1:	mov    al,BYTE PTR [ebx+0x53]
  403ec4:	mov    dh,BYTE PTR [eax-0x3a04bb04]
  403eca:	jg     0x403e5d
  403ecc:	add    al,0x92
  403ece:	sub    DWORD PTR [esi],esi
  403ed0:	cwde   
  403ed1:	call   0x9940:0x2be8a054
  403ed8:	(bad)  
  403ed9:	lea    ebx,[ecx]
  403edb:	jns    0x403e5d
  403edd:	pop    edx
  403ede:	aad    0x7
  403ee0:	ss mov eax,0xcc4d6136
  403ee6:	inc    eax
  403ee7:	inc    edi
  403ee8:	dec    eax
  403ee9:	enter  0x2ee5,0x9c
  403eed:	xchg   esp,eax
  403eee:	mov    dh,0x31
  403ef0:	aam    0xd1
  403ef2:	inc    esp
  403ef3:	pop    ss
  403ef4:	mov    ds:0xe8cf66fd,al
  403ef9:	dec    eax
  403efa:	xor    BYTE PTR [eax],dh
  403efc:	sub    BYTE PTR [eax+0x49],bh
  403eff:	inc    esi
  403f00:	or     eax,0x72f9b17a
  403f05:	retf   0xcf37
  403f08:	jp     0x403f59
  403f0a:	mov    ecx,0xc0e9f110
  403f0f:	mov    ebp,0x32409843
  403f14:	(bad)
  403f18:	pop    edx
  403f19:	pop    ds
  403f1a:	dec    ebx
  403f1b:	mov    BYTE PTR [edi+0x6f51adf4],bh
  403f21:	cwde   
  403f22:	adc    ch,BYTE PTR [esi+0x33]
  403f25:	ins    DWORD PTR es:[edi],dx
  403f26:	push   esi
  403f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f28:	stos   DWORD PTR es:[edi],eax
  403f29:	xchg   edx,eax
  403f2a:	inc    ebx
  403f2b:	dec    esi
  403f2c:	pop    eax
  403f2d:	sub    dl,BYTE PTR [ebp+0x5742b30d]
  403f33:	xchg   ebp,eax
  403f34:	add    eax,0x757e13af
  403f39:	fild   DWORD PTR [ebp-0x6b]
  403f3c:	aad    0xf2
  403f3e:	mov    dh,0x53
  403f40:	fs mov edx,0x2fdf0d18
  403f46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f47:	std    
  403f48:	mov    ah,bh
  403f4a:	das    
  403f4b:	adc    DWORD PTR ss:[edx-0x50],esi
  403f4f:	mov    ah,0x12
  403f51:	and    edi,DWORD PTR [eax-0x43]
  403f54:	inc    edx
  403f55:	in     eax,dx
  403f56:	xor    cl,BYTE PTR [ebx+eax*8]
  403f59:	or     ebp,DWORD PTR [edx]
  403f5b:	adc    dh,al
  403f5d:	pop    ebx
  403f5e:	mov    ecx,0x8b24348
  403f63:	bound  ebx,QWORD PTR [esi+0x634aba18]
  403f69:	call   0xb0680ae
  403f6e:	call   edx
  403f70:	mov    edx,0x4ccff302
  403f75:	jmp    0x6a057404
  403f7a:	dec    esi
  403f7b:	test   ch,bl
  403f7d:	mov    dh,0x4c
  403f7f:	sar    DWORD PTR [ebx+0x2a],1
  403f82:	arpl   ax,sp
  403f84:	fwait
  403f85:	jbe    0x403fb7
  403f87:	adc    DWORD PTR [ecx+eax*4],edx
  403f8a:	cmp    al,0x9d
  403f8c:	xchg   edx,eax
  403f8d:	data16 adc al,0xa
  403f90:	push   es
  403f91:	mov    DWORD PTR ds:0xfe039007,0xd83ba34a
  403f9b:	cli    
  403f9c:	test   eax,0xf107f198
  403fa1:	(bad)  
  403fa2:	dec    esi
  403fa3:	pop    ebp
  403fa4:	stos   DWORD PTR es:[edi],eax
  403fa5:	(bad)  
  403fa6:	(bad)  
  403fa7:	lahf   
  403fa8:	(bad)  
  403fa9:	test   eax,0x9a5f4a94
  403fae:	stc    
  403faf:	sbb    ebx,DWORD PTR [ebx+0x7fa73ba5]
  403fb5:	inc    esp
  403fb6:	jle    0x404017
  403fb8:	sar    DWORD PTR [edx-0x34],0x61
  403fbc:	mov    dl,0xef
  403fbe:	jne    0x403fd8
  403fc0:	rcr    DWORD PTR [ebx],0xa6
  403fc3:	adc    BYTE PTR [ebx],bl
  403fc5:	cmp    esp,DWORD PTR [ebx]
  403fc7:	adc    eax,DWORD PTR [edx-0x50]
  403fca:	cmp    eax,0xbe044e59
  403fcf:	xlat   BYTE PTR ds:[ebx]
  403fd0:	xchg   esi,eax
  403fd1:	repz push esp
  403fd3:	das    
  403fd4:	dec    esi
  403fd5:	jle    0x404054
  403fd7:	xchg   dl,bl
  403fd9:	mov    dl,0x19
  403fdb:	(bad)  
  403fdc:	out    dx,eax
  403fdd:	jmp    DWORD PTR [edx]
  403fdf:	cmp    esi,ecx
  403fe1:	mov    WORD PTR [ecx],fs
  403fe3:	psubsb mm2,QWORD PTR [eax+0xf]
  403fe7:	sbb    BYTE PTR [ecx+0x5a],0x8a
  403feb:	sub    esi,ebx
  403fed:	xor    eax,0x40deb3d5
  403ff2:	das    
  403ff3:	jmp    0x7873e983
  403ff8:	xchg   edi,eax
  403ff9:	stc    
  403ffa:	out    0xf2,eax
  403ffc:	fiadd  DWORD PTR [ecx]
  403ffe:	ins    BYTE PTR es:[edi],dx
  403fff:	int    0x12
  404001:	fsub   DWORD PTR [esi]
  404003:	xchg   esi,eax
  404004:	jnp    0x403f96
  404006:	add    eax,DWORD PTR [edi+0x46f1a533]
  40400c:	pop    es
  40400d:	pop    ecx
  40400e:	mov    ds:0x96ce6000,eax
  404013:	rol    BYTE PTR ds:0x353c3f09,cl
  404019:	popa   
  40401a:	inc    esp
  40401b:	jnp    0x40408d
  40401d:	xchg   edi,eax
  40401e:	fs fld st(4)
  404021:	xchg   edi,eax
  404022:	stos   BYTE PTR es:[edi],al
  404023:	lock mov dh,0xbf
  404026:	(bad)  
  404027:	lock pop edi
  404029:	iret   
  40402a:	aam    0xc7
  40402c:	in     al,0x9f
  40402e:	rcl    ah,cl
  404030:	sub    al,0x88
  404032:	int    0xab
  404034:	(bad)  
  404035:	leave  
  404036:	gs (bad) 
  404038:	mov    WORD PTR [ebp+ecx*8-0x73],fs
  40403c:	test   eax,0xe126ac45
  404041:	mov    al,ds:0x9cc2607d
  404046:	xor    BYTE PTR ds:[edx],0xd2
  40404a:	inc    esp
  40404b:	xor    bh,BYTE PTR [eax+0x24e7d056]
  404051:	jne    0x404043
  404053:	ins    BYTE PTR es:[edi],dx
  404054:	xor    esi,ebp
  404056:	(bad)  
  404057:	push   eax
  404058:	xchg   ebp,eax
  404059:	test   DWORD PTR [eax-0x3794bf4c],0x982e06cc
  404063:	push   0xe13a6b27
  404068:	retf   
  404069:	ret    0x4a40
  40406c:	add    cl,BYTE PTR [ebx-0x444e4b74]
  404072:	mov    DWORD PTR [ebx-0x7f],esi
  404075:	ja     0x404032
  404077:	ror    edi,cl
  404079:	shr    BYTE PTR [edx+0x19],1
  40407c:	dec    esi
  40407d:	pop    ecx
  40407e:	xchg   esp,eax
  40407f:	ins    BYTE PTR es:[edi],dx
  404080:	cmp    eax,0x944a81
  404085:	addr16 push esp
  404087:	push   cs
  404088:	push   edx
  404089:	mov    al,0x25
  40408b:	pop    esi
  40408c:	or     eax,0xb69041ba
  404091:	xchg   DWORD PTR [edx+0x23921a92],eax
  404097:	mov    cl,0xa6
  404099:	pop    ds
  40409a:	test   ah,al
  40409c:	add    esp,DWORD PTR [ebx+0x71183ce5]
  4040a2:	sub    bh,BYTE PTR [edx-0x27bd603c]
  4040a8:	mov    edi,0x2960f881
  4040ad:	sub    ch,BYTE PTR [eax+ecx*4+0x58]
  4040b1:	enter  0x1e62,0x83
  4040b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040b6:	fdivrp st(5),st
  4040b8:	push   ebx
  4040b9:	enter  0x3426,0x4a
  4040bd:	pop    es
  4040be:	xor    edi,DWORD PTR [edi-0xcdeec5b]
  4040c4:	mov    ecx,ecx
  4040c6:	nop
  4040c7:	daa    
  4040c8:	sbb    eax,0xddb44dee
  4040cd:	daa    
  4040ce:	and    ebp,DWORD PTR [edx-0x38]
  4040d1:	adc    DWORD PTR [ebp-0xe],ecx
  4040d4:	pop    esp
  4040d5:	popa   
  4040d6:	cs (bad) 
  4040d8:	(bad)  
  4040da:	or     al,0x96
  4040dc:	aaa    
  4040dd:	or     ch,al
  4040df:	ins    DWORD PTR es:[edi],dx
  4040e0:	or     ch,dh
  4040e2:	lds    edx,FWORD PTR fs:[ecx+eax*8-0x3e43ebb2]
  4040ea:	cld    
  4040eb:	push   ds
  4040ec:	xchg   ebx,eax
  4040ed:	jb     0x4040a4
  4040ef:	test   eax,0x669f86d6
  4040f4:	into   
  4040f5:	(bad)
  4040f8:	mov    al,0x6a
  4040fa:	loopne 0x40408a
  4040fc:	pop    ds
  4040fd:	hlt    
  4040fe:	mov    edx,esi
  404100:	mov    ebp,0xefdf37c9
  404105:	xor    DWORD PTR [ecx],edx
  404107:	(bad)
  40410b:	inc    ebx
  40410c:	dec    eax
  40410d:	bound  esi,QWORD PTR ds:0x8fa9eb8
  404113:	stc    
  404114:	sbb    DWORD PTR [esi+0x6d8657da],edi
  40411a:	mov    bl,0x41
  40411c:	inc    ecx
  40411d:	stc    
  40411e:	mov    cl,ch
  404120:	es ret 
  404122:	xchg   ecx,eax
  404123:	data16 lods al,BYTE PTR ds:[esi]
  404125:	and    dh,al
  404127:	adc    DWORD PTR [eax],esp
  404129:	loop   0x4040b9
  40412b:	inc    eax
  40412c:	jmp    0x404171
  40412e:	iret   
  40412f:	(bad)  
  404130:	bound  ebx,QWORD PTR [esi+eax*8]
  404133:	or     BYTE PTR [edx],cl
  404135:	xor    DWORD PTR [ecx-0x3f],ebx
  404138:	pop    eax
  404139:	in     eax,0x3f
  40413b:	inc    ecx
  40413c:	mov    BYTE PTR [ebp-0x5e914b0b],bh
  404142:	push   DWORD PTR [ebx-0xdfe3b5a]
  404148:	ins    BYTE PTR es:[edi],dx
  404149:	(bad)  
  40414a:	jo     0x40410b
  40414c:	repz out 0xfd,eax
  40414f:	dec    ecx
  404150:	test   al,0x56
  404152:	xor    ecx,esi
  404154:	fldln2 
  404156:	mov    es,WORD PTR [edx+0x11]
  404159:	test   DWORD PTR [ebp-0x16],edi
  40415c:	add    al,0xd
  40415e:	inc    esi
  40415f:	mov    bh,0x4b
  404161:	jl     0x404182
  404163:	and    dl,dl
  404165:	mov    eax,ds:0x8c25738e
  40416a:	or     al,0x80
  40416c:	push   ss
  40416d:	addr16 loope 0x4041eb
  404170:	jmp    0xbb5a:0x95562915
  404177:	jbe    0x404181
  404179:	push   esp
  40417a:	iret   
  40417b:	out    0x36,al
  40417d:	xor    al,0xfa
  40417f:	test   al,0xa5
  404181:	sbb    ebx,eax
  404183:	jmp    0x4041b4
  404185:	dec    esp
  404186:	sti    
  404187:	sub    ah,BYTE PTR [edi-0x42]
  40418a:	and    ch,bh
  40418c:	out    dx,al
  40418d:	pop    ecx
  40418e:	dec    eax
  40418f:	pop    ecx
  404190:	sbb    eax,0xb17ec883
  404195:	icebp  
  404196:	push   esp
  404197:	and    al,0xe
  404199:	add    eax,0x74d5ea86
  40419e:	das    
  40419f:	or     dl,BYTE PTR [ebp+0x58]
  4041a2:	cmp    DWORD PTR [edi],edi
  4041a4:	es mov bh,0x9f
  4041a7:	gs jmp 0x404148
  4041aa:	xlat   BYTE PTR ds:[ebx]
  4041ab:	aad    0xe2
  4041ad:	(bad)  
  4041ae:	popa   
  4041af:	repnz fwait
  4041b1:	xchg   esp,eax
  4041b2:	push   eax
  4041b3:	shl    BYTE PTR [esp+edx*2-0x21d35ec3],0x94
  4041bb:	pop    eax
  4041bc:	dec    esp
  4041bd:	inc    ebx
  4041be:	push   ss
  4041bf:	or     BYTE PTR [ecx],cl
  4041c1:	rol    BYTE PTR [ecx+0x54f76bca],0x3a
  4041c8:	arpl   WORD PTR [ebx-0x72],ax
  4041cb:	icebp  
  4041cc:	or     eax,0x8f4dbc9e
  4041d1:	pop    esp
  4041d2:	jno    0x4041da
  4041d4:	mov    edx,0xe677b85a
  4041d9:	cmp    al,al
  4041db:	xchg   BYTE PTR [eax+edx*8],bh
  4041de:	cmp    al,0xe5
  4041e0:	pop    ebp
  4041e1:	ins    DWORD PTR es:[edi],dx
  4041e2:	add    DWORD PTR [edx+0x4461642e],0x35537a72
  4041ec:	das    
  4041ed:	mov    bh,0x59
  4041ef:	sub    al,0x96
  4041f1:	push   ebp
  4041f2:	inc    edi
  4041f3:	cwde   
  4041f4:	sahf   
  4041f5:	clc    
  4041f6:	inc    ebx
  4041f7:	(bad)  [edx-0x1de2b41]
  4041fd:	outs   dx,BYTE PTR ds:[esi]
  4041fe:	adc    al,0xd1
  404200:	pop    ebx
  404201:	pop    ebx
  404202:	jmp    0x59d95341
  404207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404208:	sub    BYTE PTR [eax+0x1853bee],bl
  40420e:	mov    ds:0x7d5adacf,al
  404213:	outs   dx,DWORD PTR ds:[esi]
  404214:	inc    edx
  404215:	daa    
  404216:	dec    ebx
  404217:	je     0x4041d6
  404219:	inc    esp
  40421a:	ror    DWORD PTR [edx+0x32962ded],1
  404220:	push   eax
  404221:	add    esp,DWORD PTR [ebp+0x20]
  404224:	mov    esp,0x53feab88
  404229:	and    DWORD PTR [eax],eax
  40422b:	xchg   ebp,eax
  40422c:	rol    DWORD PTR [ebx-0x5e],1
  40422f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404230:	stc    
  404231:	stc    
  404232:	xchg   edi,eax
  404233:	bound  eax,QWORD PTR ds:0x186f1e69
  404239:	dec    esi
  40423a:	popf   
  40423b:	inc    ecx
  40423c:	int    0x1d
  40423e:	(bad)  
  40423f:	leave  
  404240:	sbb    al,0x10
  404242:	adc    BYTE PTR [edx],0x45
  404245:	cmp    eax,0x8831462
  40424a:	fiadd  WORD PTR [edx-0x41aeb90f]
  404250:	inc    ebx
  404251:	jl     0x404257
  404253:	(bad)  
  404255:	inc    eax
  404256:	popf   
  404257:	mov    ah,0xc7
  404259:	sub    bh,BYTE PTR [ebp-0x26]
  40425c:	dec    ebx
  40425d:	out    0x72,eax
  40425f:	in     al,dx
  404260:	xor    BYTE PTR [esi+0x7b80cda4],dl
  404266:	add    DWORD PTR [ebp+0x5d],esi
  404269:	dec    edi
  40426a:	jle    0x4042df
  40426c:	mov    ah,0xb6
  40426e:	out    dx,eax
  40426f:	and    al,0x8b
  404271:	ss mov ebx,0xa6c24b75
  404277:	xlat   BYTE PTR ds:[ebx]
  404278:	je     0x4042df
  40427a:	pop    esp
  40427b:	cs cwde 
  40427d:	inc    eax
  40427e:	xchg   ebx,eax
  40427f:	push   esi
  404280:	jnp    0x40428d
  404282:	and    bl,BYTE PTR [esi+0x28]
  404285:	push   ds
  404286:	add    BYTE PTR [eax],0x13
  404289:	push   esi
  40428a:	fbld   TBYTE PTR [edi+0x48547a96]
  404290:	aaa    
  404291:	xchg   BYTE PTR [ebx+0x4ed0c7d4],ah
  404297:	mov    ebp,0xb4984e6b
  40429c:	cmp    eax,0xbd879af7
  4042a1:	push   es
  4042a2:	xor    edx,DWORD PTR [esi]
  4042a4:	fcom   QWORD PTR [esi-0x43c5a77c]
  4042aa:	xchg   esi,eax
  4042ab:	xchg   edi,eax
  4042ac:	fucomp st(0)
  4042ae:	in     eax,0x85
  4042b0:	outs   dx,DWORD PTR gs:[esi]
  4042b2:	mov    ebp,ecx
  4042b4:	lock repnz test BYTE PTR [ecx+0x35f1dc04],ch
  4042bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042bd:	dec    ecx
  4042be:	adc    ch,bh
  4042c0:	mov    DWORD PTR [ecx],edx
  4042c2:	fidiv  WORD PTR [edi]
  4042c4:	jne    0x404345
  4042c6:	or     ebx,DWORD PTR [edi+0x24]
  4042c9:	adc    al,0x1c
  4042cb:	rol    edx,cl
  4042cd:	fild   DWORD PTR [ecx-0x61]
  4042d0:	mov    ah,0x93
  4042d2:	ret    
  4042d3:	jge    0x404304
  4042d5:	or     BYTE PTR [eax+0x27c518f8],0xc5
  4042dc:	push   ss
  4042dd:	popa   
  4042de:	int3   
  4042df:	call   0x1300670b
  4042e4:	and    al,0xed
  4042e6:	pop    ss
  4042e7:	sbb    BYTE PTR [edi],0xc6
  4042ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042eb:	cmp    eax,0xa95fe1bf
  4042f0:	fwait
  4042f1:	in     eax,dx
  4042f2:	call   0x38b9:0x5eac67b1
  4042f9:	fisttp QWORD PTR [eax+ebx*4]
  4042fc:	push   es
  4042fd:	fadd   DWORD PTR [edx+0x263989a0]
  404303:	rcr    DWORD PTR [edi-0x2b],0x2d
  404307:	outs   dx,DWORD PTR ds:[esi]
  404308:	call   0x6e49:0xf9cf2450
  40430f:	sub    edx,DWORD PTR ds:0x9a16d4b9
  404315:	ins    BYTE PTR es:[edi],dx
  404316:	jmp    0x40434c
  404318:	js     0x4042df
  40431a:	push   DWORD PTR [esi-0x46]
  40431d:	mov    ebx,0xe5b30a36
  404322:	pop    eax
  404323:	imul   edx,DWORD PTR [ebx+0x24ece614],0xb02a8d39
  40432d:	aad    0xdc
  40432f:	pop    eax
  404330:	dec    ebx
  404331:	sbb    edi,DWORD PTR [ebp+eiz*8+0x54]
  404335:	or     al,0x6b
  404337:	mov    cl,0x2d
  404339:	test   eax,0x1c76e329
  40433e:	lds    esi,FWORD PTR [edx-0x2d0341cf]
  404344:	scas   al,BYTE PTR es:[edi]
  404345:	push   eax
  404346:	mov    al,ds:0x57df5072
  40434b:	popa   
  40434c:	xchg   edi,eax
  40434d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40434e:	fcmovb st,st(5)
  404350:	xchg   edx,eax
  404351:	fnstcw WORD PTR [eax+0x471a0bc7]
  404357:	dec    ebp
  404358:	cmp    esp,DWORD PTR [eax-0x26fad4f]
  40435e:	dec    ebx
  40435f:	add    eax,0x99c66fe8
  404364:	push   cs
  404365:	sub    eax,0x4ebe045f
  40436a:	sub    al,0x2b
  40436c:	mov    edi,0x4876f3f7
  404371:	cmp    esp,0xc19929f1
  404377:	fs xor al,0x91
  40437a:	shl    DWORD PTR [eax-0x416a7afe],0x93
  404381:	inc    ebx
  404382:	popa   
  404383:	jecxz  0x404373
  404385:	dec    esi
  404386:	dec    edi
  404387:	clc    
  404388:	push   0xffffffa0
  40438a:	dec    esi
  40438b:	sub    al,0x6f
  40438d:	das    
  40438e:	add    al,0x65
  404390:	lahf   
  404391:	inc    edi
  404392:	mov    esp,0xbccc31f4
  404397:	mov    esp,ebx
  404399:	pop    ds
  40439a:	cmc    
  40439b:	sbb    DWORD PTR [esi],edx
  40439d:	pushf  
  40439e:	loop   0x404398
  4043a0:	and    esi,0xffffffd6
  4043a3:	dec    ebx
  4043a4:	aad    0xca
  4043a6:	in     al,0x5c
  4043a8:	mov    eax,0xb0cb467c
  4043ad:	addr16 mov bh,0xb2
  4043b0:	xor    eax,0xea9909c2
  4043b5:	imul   ebx,DWORD PTR [edi-0x79da97f8],0xffffffdf
  4043bc:	aad    0xa7
  4043be:	adc    ebx,DWORD PTR ds:[edi]
  4043c1:	mov    bh,0xd0
  4043c3:	inc    edi
  4043c4:	ficom  WORD PTR [ebx-0x57]
  4043c7:	jge    0x4043a8
  4043c9:	mov    dh,0x7c
  4043cb:	test   DWORD PTR [ecx-0x25],ebx
  4043ce:	shl    BYTE PTR [ebx],0x2e
  4043d1:	nop
  4043d2:	push   edx
  4043d3:	dec    ecx
  4043d4:	dec    esi
  4043d5:	shr    ebp,0xf5
  4043d8:	adc    BYTE PTR [edx-0x32933fac],cl
  4043de:	add    DWORD PTR [esi-0x77],0x2e747178
  4043e5:	xchg   ecx,eax
  4043e6:	mov    ds:0x1c256f6f,al
  4043eb:	iret   
  4043ec:	aas    
  4043ed:	push   0x7e1894d5
  4043f2:	inc    edi
  4043f3:	sub    ebx,eax
  4043f5:	aas    
  4043f6:	repz jno 0x4043f9
  4043f9:	add    al,0x9d
  4043fb:	ret    0x3ecf
  4043fe:	add    DWORD PTR [ebx-0x13f24fb1],0x13b11ca
  404408:	add    esp,edi
  40440a:	and    eax,0x90d22b9d
  40440f:	or     dl,BYTE PTR [eax+edi*1-0xb0a7f68]
  404416:	bound  edi,QWORD PTR [eax]
  404418:	mov    DWORD PTR [edi],eax
  40441a:	jle    0x4043ff
  40441c:	and    esi,ebx
  40441e:	sbb    edi,ebp
  404420:	(bad)  
  404421:	fldz   
  404423:	sub    ah,dh
  404425:	arpl   di,di
  404427:	imul   edi,DWORD PTR [ecx],0x58
  40442a:	push   esp
  40442b:	xchg   esi,eax
  40442c:	sub    eax,0x3aa03148
  404431:	xor    BYTE PTR [edx+0xd],ah
  404434:	xor    ah,BYTE PTR [ebx-0x36]
  404437:	lea    eax,[edx+0x6838140f]
  40443d:	fimul  DWORD PTR ds:[ebx-0x2fe136b1]
  404444:	sbb    ebx,ecx
  404446:	adc    al,0xc8
  404448:	push   bx
  40444a:	scas   al,BYTE PTR es:[edi]
  40444b:	push   0xffffffdf
  40444d:	xchg   edi,eax
  40444e:	mov    ds:0xcb58d053,al
  404453:	jmp    0xf3f5c9b4
  404458:	test   DWORD PTR [ebx+eiz*2],ebp
  40445b:	out    dx,al
  40445c:	pop    edi
  40445d:	jecxz  0x404484
  40445f:	mov    dh,0x5a
  404461:	pop    esi
  404462:	mov    ebx,0xa439c992
  404467:	fs add al,0x45
  40446a:	out    0x42,al
  40446c:	push   ds
  40446d:	push   ss
  40446e:	cmp    DWORD PTR [ecx-0x7c],edx
  404471:	out    dx,eax
  404472:	inc    ebx
  404473:	shl    DWORD PTR [esi],0x87
  404476:	aad    0x5f
  404478:	mov    ds,eax
  40447a:	mov    bl,bh
  40447c:	mov    ds:0x19889fcb,al
  404481:	push   edx
  404483:	mov    edx,0xf2c78216
  404488:	push   esp
  404489:	mov    ch,0xb3
  40448b:	or     DWORD PTR [edi-0x77cc7bb8],0xffffffcd
  404492:	jmp    0xfc577df8
  404497:	mov    eax,0x2b18b2e4
  40449c:	dec    esp
  40449d:	mov    bh,BYTE PTR [ebp-0x674b774f]
  4044a3:	push   ecx
  4044a4:	inc    ebx
  4044a5:	pop    es
  4044a6:	sbb    eax,0x8d186983
  4044ab:	je     0x404461
  4044ad:	jle    0x4044c5
  4044af:	pop    edi
  4044b0:	shr    bh,1
  4044b2:	xor    eax,edi
  4044b4:	mov    edi,0x56d8b925
  4044b9:	mov    esi,0x263f9425
  4044be:	inc    edi
  4044bf:	call   0x435aae19
  4044c4:	push   cs
  4044c5:	push   ebx
  4044c6:	leave  
  4044c7:	add    ch,al
  4044c9:	aas    
  4044ca:	mov    BYTE PTR [ebp-0x720e1eda],0xf3
  4044d1:	jl     0x40451c
  4044d3:	jmp    0x1562:0xe05e5996
  4044da:	pop    ss
  4044db:	clc    
  4044dc:	pushf  
  4044dd:	in     eax,0xaa
  4044df:	pop    ecx
  4044e0:	jecxz  0x404508
  4044e2:	inc    esi
  4044e3:	ficom  DWORD PTR [esi]
  4044e5:	xchg   esi,eax
  4044e6:	dec    ebx
  4044e7:	jecxz  0x404489
  4044e9:	xor    cl,BYTE PTR ss:[eax+0x61bebf37]
  4044f0:	push   es
  4044f1:	retf   
  4044f2:	push   0xcad75c01
  4044f7:	int3   
  4044f8:	xor    BYTE PTR [ebx-0x78e1111f],bl
  4044fe:	dec    edi
  4044ff:	mov    al,ds:0xdad1abae
  404504:	xor    esp,DWORD PTR [esi]
  404506:	inc    edi
  404507:	lods   al,BYTE PTR cs:[esi]
  404509:	js     0x4044e3
  40450b:	popa   
  40450c:	stc    
  40450d:	push   cs
  40450e:	dec    edx
  40450f:	cmp    eax,0xf57737fc
  404514:	mov    ds:0xaa559fb9,eax
  404519:	adc    ebx,DWORD PTR [edi-0x6c7db865]
  40451f:	or     al,0xd
  404521:	rcl    BYTE PTR [ecx],0x8d
  404524:	gs lahf 
  404526:	or     ch,BYTE PTR ds:0x7ceb3160
  40452c:	int3   
  40452d:	cwde   
  40452e:	add    dl,dh
  404530:	push   cs
  404531:	mov    esp,0xb44fc8c0
  404536:	repz mov eax,ds:0x2cb391c5
  40453c:	or     BYTE PTR [ecx],bh
  40453e:	popf   
  40453f:	jmp    0xe89f:0xdb7c51bd
  404546:	sbb    BYTE PTR [ecx+0x127a220d],dh
  40454c:	dec    esi
  40454d:	pop    edi
  40454e:	std    
  40454f:	push   ecx
  404550:	stc    
  404551:	and    eax,0x7b71d441
  404556:	fistp  DWORD PTR [ebx]
  404558:	jg     0x40450f
  40455a:	cwde   
  40455b:	mov    eax,edi
  40455d:	neg    BYTE PTR [edi-0xf]
  404560:	adc    bh,BYTE PTR [edx+ecx*2]
  404563:	xor    DWORD PTR [esi-0x79],ebx
  404566:	dec    ecx
  404567:	(bad)  [ebx+0x76440fee]
  40456d:	ja     0x4045d2
  40456f:	mov    ch,0xe9
  404571:	pop    ebp
  404572:	pop    es
  404573:	mov    edi,0x21460dc9
  404578:	daa    
  404579:	add    dh,BYTE PTR [ebx+0x45]
  40457c:	sti    
  40457d:	adc    esp,edx
  40457f:	pushf  
  404580:	or     eax,0x1023061a
  404585:	scas   eax,DWORD PTR es:[edi]
  404586:	stc    
  404587:	xchg   esi,eax
  404588:	inc    edi
  404589:	lea    ecx,[ebx-0x70]
  40458c:	cdq    
  40458d:	add    al,0x82
  40458f:	push   ebp
  404590:	enter  0x4181,0x49
  404594:	fsubr  DWORD PTR [esi-0x70]
  404597:	and    al,BYTE PTR [esi+esi*1+0xa]
  40459b:	sbb    al,0x86
  40459d:	fs call 0xb037:0xf54e96db
  4045a5:	mov    esi,0xea24f545
  4045aa:	jno    0x4045e3
  4045ac:	cdq    
  4045ad:	jb     0x404540
  4045af:	js     0x4045a0
  4045b1:	add    DWORD PTR [esi+0x2ebe31fe],esi
  4045b7:	sbb    eax,0x7784f912
  4045bc:	push   ds
  4045bd:	xlat   BYTE PTR ds:[ebx]
  4045be:	or     eax,0x956783f5
  4045c3:	jp     0x40460c
  4045c5:	cld    
  4045c6:	mov    al,0x3c
  4045c8:	adc    DWORD PTR gs:0x61f8c581,ecx
  4045cf:	in     al,0xde
  4045d1:	mov    al,ds:0x8c9738e5
  4045d6:	fld    QWORD PTR [ebx+0x3a]
  4045d9:	nop
  4045da:	sbb    edx,DWORD PTR [eax+0x3a8bd75d]
  4045e0:	sbb    eax,0x239901d5
  4045e5:	sbb    al,0xc0
  4045e7:	jg     0x404640
  4045e9:	scas   al,BYTE PTR es:[edi]
  4045ea:	cmovge esi,DWORD PTR [ebp+0x17]
  4045ee:	loope  0x4045da
  4045f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045f1:	(bad)  
  4045f2:	adc    eax,0xd2bad857
  4045f7:	inc    ebx
  4045f8:	xchg   BYTE PTR [ebp+0x73e1922c],ah
  4045fe:	or     BYTE PTR [ebp+0x603a6535],al
  404604:	adc    DWORD PTR [ebx+ecx*4+0x73],ebp
  404608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404609:	or     ch,BYTE PTR ds:[edi+0x115f18f8]
  404610:	out    0xde,eax
  404612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404613:	lods   eax,DWORD PTR ds:[esi]
  404614:	scas   eax,DWORD PTR es:[edi]
  404615:	jo     0x4045bb
  404617:	jns    0x4045ab
  404619:	jecxz  0x40467e
  40461b:	loop   0x4045b1
  40461d:	pop    es
  40461e:	sar    esp,0x1f
  404621:	scas   al,BYTE PTR es:[edi]
  404622:	sub    al,0x63
  404624:	xchg   BYTE PTR [ebp+0x7a],bl
  404627:	mov    bl,0xaa
  404629:	repnz xchg edi,eax
  40462b:	popf   
  40462c:	mov    ebx,0xb73f6f43
  404631:	ds cmp al,0x3f
  404634:	loope  0x4045e4
  404636:	loope  0x404693
  404638:	inc    edx
  404639:	sbb    eax,0x4f11ea33
  40463e:	mov    bl,bl
  404640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404641:	mov    WORD PTR [ebp-0x70],ss
  404644:	(bad)  
  404645:	pop    esp
  404646:	aam    0x6
  404648:	std    
  404649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40464a:	sar    DWORD PTR [ebx-0x36caab05],1
  404650:	inc    esp
  404651:	xor    DWORD PTR [edx+eiz*1+0x23f56527],ebx
  404658:	cli    
  404659:	jbe    0x4045de
  40465b:	mov    eax,DWORD PTR [ebx+0x8bb54e2]
  404661:	in     eax,dx
  404662:	jbe    0x404695
  404664:	test   BYTE PTR [edx+ebx*4],bl
  404667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404668:	pop    esp
  404669:	cmp    DWORD PTR [esi],ecx
  40466b:	sbb    eax,0xec9aed2
  404670:	cli    
  404671:	sar    ebp,cl
  404673:	mov    bl,0x5b
  404675:	add    DWORD PTR [edx-0x2f],eax
  404678:	adc    ah,BYTE PTR [ebp-0x4ced0c4d]
  40467e:	ret    
  40467f:	inc    ebx
  404680:	cli    
  404681:	push   edi
  404682:	das    
  404683:	fs test al,0x60
  404686:	xchg   esi,eax
  404687:	add    al,0xd5
  404689:	mov    edi,DWORD PTR [esi]
  40468b:	ins    BYTE PTR es:[edi],dx
  40468c:	cmp    DWORD PTR [edi],edx
  40468e:	push   ecx
  40468f:	xchg   edx,eax
  404690:	add    eax,0x2fe0b583
  404695:	fld    QWORD PTR [ebx]
  404697:	mov    al,ds:0x2eb49973
  40469c:	shr    dl,cl
  40469e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40469f:	retf   0xa11a
  4046a2:	sub    DWORD PTR fs:[edi],esi
  4046a5:	iret   
  4046a6:	jl     0x4046fb
  4046a8:	pop    edi
  4046a9:	mov    ch,0x8e
  4046ab:	inc    ebp
  4046ac:	push   0x24
  4046ae:	scas   eax,DWORD PTR es:[edi]
  4046af:	shl    BYTE PTR [edx-0x79e8b033],cl
  4046b5:	dec    esp
  4046b6:	in     al,dx
  4046b7:	pop    ss
  4046b8:	adc    esp,DWORD PTR [ebp-0x7d831e1c]
  4046be:	(bad)  
  4046bf:	mov    ebx,0x8e3b41a6
  4046c4:	sbb    eax,0x561bf05b
  4046c9:	or     edx,DWORD PTR [ebp+0x6]
  4046cc:	int3   
  4046cd:	jle    0x40466e
  4046cf:	inc    edx
  4046d0:	jp     0x404685
  4046d2:	jo     0x404685
  4046d4:	inc    ecx
  4046d5:	mov    esp,0xb6469896
  4046da:	in     eax,dx
  4046db:	mov    ebx,0x322a3afb
  4046e0:	bsf    ebp,eax
  4046e3:	pop    ebp
  4046e4:	sbb    bh,BYTE PTR [esi+0x49]
  4046e7:	sbb    BYTE PTR [edi-0x24],0x33
  4046eb:	add    BYTE PTR [ecx],cl
  4046ed:	cmp    BYTE PTR gs:[edx],bh
  4046f0:	std    
  4046f1:	dec    edx
  4046f2:	push   esp
  4046f4:	ins    DWORD PTR es:[edi],dx
  4046f5:	pop    ss
  4046f6:	in     eax,dx
  4046f7:	cld    
  4046f8:	scas   al,BYTE PTR es:[edi]
  4046f9:	cld    
  4046fa:	cwde   
  4046fb:	push   ebx
  4046fc:	jmp    0x40472d
  4046fe:	add    eax,0xa19d973d
  404703:	jb     0x4046a3
  404705:	neg    BYTE PTR [edx+0x43ef9cec]
  40470b:	popf   
  40470c:	loopne 0x4046a6
  40470e:	in     eax,0x87
  404710:	mov    BYTE PTR [ecx+eax*2],bl
  404713:	mov    al,ds:0xb17c05fb
  404718:	cmp    DWORD PTR [ebx+0x31],ebx
  40471b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40471c:	js     0x404724
  40471e:	pop    ss
  40471f:	lds    esp,FWORD PTR [esi-0x69]
  404722:	cmp    DWORD PTR [eax+0x6b],edx
  404725:	mov    bl,0xe3
  404727:	sub    al,0xca
  404729:	mov    bh,0x3e
  40472b:	call   0x22a8:0xd619c131
  404732:	sahf   
  404733:	mov    esp,0x66dba14c
  404738:	ins    BYTE PTR es:[edi],dx
  404739:	sub    edi,0x28
  40473c:	push   esp
  40473d:	push   ebp
  40473e:	mov    eax,ds:0x38a88ed2
  404743:	mov    edx,0x7fa4564c
  404748:	or     eax,0xfc47be9
  40474d:	xchg   ecx,eax
  40474e:	cdq    
  40474f:	inc    eax
  404750:	adc    DWORD PTR [esi],ebp
  404752:	mov    dl,0x53
  404754:	sbb    al,BYTE PTR [edx+0x47f86c00]
  40475a:	adc    eax,0x8726f7ef
  40475f:	push   ss
  404760:	fdiv   DWORD PTR [eax+0x1b]
  404763:	retf   
  404764:	and    dh,dh
  404766:	adc    DWORD PTR [eax],edx
  404768:	push   0x228fc92b
  40476d:	mov    WORD PTR [eax],?
  40476f:	sbb    al,0xa
  404771:	ds sbb edi,edi
  404774:	inc    esp
  404775:	mov    eax,0x3405d538
  40477a:	nop
  40477b:	pop    es
  40477c:	stc    
  40477d:	jg     0x404737
  40477f:	cmp    eax,0xe1fdd56c
  404784:	mov    esp,0xd6f3ee6a
  404789:	inc    ebx
  40478a:	mov    ebx,0xf6531e81
  40478f:	mov    dl,0x8d
  404791:	ins    BYTE PTR es:[edi],dx
  404792:	rcr    esi,0xab
  404795:	stc    
  404796:	xchg   ch,ch
  404798:	retf   0x8a48
  40479b:	scas   al,BYTE PTR es:[edi]
  40479c:	enter  0x309,0x7c
  4047a0:	xor    eax,0x8871f1fe
  4047a5:	jmp    0x404733
  4047a7:	mov    cl,0x99
  4047a9:	in     eax,dx
  4047aa:	jb     0x40475e
  4047ac:	pop    ss
  4047ad:	test   DWORD PTR [edi+0x2b],edx
  4047b0:	mov    bl,0xb9
  4047b2:	or     cl,0x40
  4047b5:	or     BYTE PTR [edi*4+0x27482f20],cl
  4047bc:	es (bad) 
  4047be:	mov    bh,0xf
  4047c0:	cli    
  4047c1:	or     al,BYTE PTR [ebx+0x432e4c2c]
  4047c7:	pop    esi
  4047c8:	cwde   
  4047c9:	sub    BYTE PTR [esi-0x3c5685eb],al
  4047cf:	loop   0x4047b7
  4047d1:	mov    edx,0x5a03718
  4047d6:	ret    0x2b63
  4047d9:	jns    0x4047eb
  4047db:	shr    DWORD PTR [ecx+0x7515e412],cl
  4047e1:	sahf   
  4047e2:	lahf   
  4047e3:	loopne 0x4047bd
  4047e5:	and    BYTE PTR [edx-0x69],ah
  4047e8:	sbb    al,0x92
  4047ea:	or     eax,0x9f90743
  4047ef:	adc    eax,0x895513ec
  4047f4:	or     DWORD PTR [edi],esp
  4047f6:	and    al,0x11
  4047f8:	jmp    0x934e60b6
  4047fd:	pop    ebp
  4047fe:	loop   0x404861
  404800:	adc    esp,DWORD PTR [ecx]
  404802:	sbb    DWORD PTR [edx+edx*1+0x74],edi
  404806:	lds    esi,FWORD PTR [edi]
  404808:	adc    BYTE PTR [ebp-0x7],dh
  40480b:	mov    esp,es
  40480d:	loop   0x40488b
  40480f:	fmul   st(1),st
  404811:	in     al,0x9f
  404813:	xor    esi,esi
  404815:	add    DWORD PTR [edx-0x7f],ecx
  404818:	aaa    
  404819:	xchg   esi,eax
  40481a:	add    DWORD PTR ds:[ebp-0x5bec7558],ebp
  404821:	mov    bh,0x55
  404823:	dec    eax
  404824:	hlt    
  404825:	stc    
  404826:	mov    ch,0x92
  404828:	fmul   QWORD PTR [edx-0x29e77dc9]
  40482e:	in     eax,dx
  40482f:	and    BYTE PTR [ebp-0x7b],0xd2
  404833:	sbb    al,0x37
  404835:	inc    ecx
  404836:	mov    ds:0x7fd24732,eax
  40483b:	pop    edi
  40483c:	je     0x4047c7
  40483e:	dec    eax
  40483f:	or     bl,bh
  404841:	shr    DWORD PTR [ebx-0x4f],1
  404844:	pop    ss
  404845:	cmc    
  404846:	call   0xdb180fb3
  40484b:	and    eax,0x2ff3f05d
  404850:	fsub   QWORD PTR [ebx-0x59]
  404853:	or     BYTE PTR [ebx+0x19],dh
  404856:	pop    ss
  404857:	dec    ebx
  404858:	das    
  404859:	in     eax,0x84
  40485b:	inc    edi
  40485c:	inc    eax
  40485d:	add    al,0x7b
  40485f:	dec    eax
  404860:	lods   al,BYTE PTR ds:[esi]
  404861:	fsub   st,st(3)
  404863:	dec    ebx
  404864:	in     al,dx
  404865:	(bad)  
  404866:	in     eax,dx
  404867:	mov    esp,0x1552df4
  40486c:	jo     0x40489e
  40486e:	or     ecx,DWORD PTR [esi+esi*4-0x3e]
  404872:	fisubr DWORD PTR [edi]
  404874:	push   0xd8f33892
  404879:	nop
  40487a:	cs push edx
  40487c:	jg     0x4048a1
  40487e:	mov    DWORD PTR [si],ebp
  404881:	or     eax,0x32f1d823
  404886:	retf   
  404887:	xor    esi,edx
  404889:	aad    0x26
  40488b:	lods   eax,DWORD PTR ds:[esi]
  40488c:	add    eax,0x7ec7d121
  404891:	mov    ecx,0x9bea7454
  404896:	cmp    edi,DWORD PTR [ecx-0x63fd2401]
  40489c:	push   ss
  40489d:	add    BYTE PTR [edi+edi*8-0x393315c7],ah
  4048a4:	fbld   TBYTE PTR [ebx-0xc8785f3]
  4048aa:	repnz es xor al,0xfe
  4048ae:	xor    eax,0x2c9d33dc
  4048b3:	jecxz  0x404884
  4048b5:	mov    ah,0xf7
  4048b7:	imul   ebx,DWORD PTR [ecx+0x73cda8b2],0xffffff8e
  4048be:	gs mov ah,dh
  4048c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048c2:	cmp    DWORD PTR [edx+0x4c],ecx
  4048c5:	fdivr  st,st(4)
  4048c7:	xchg   esi,eax
  4048c8:	add    DWORD PTR [edx-0x59f720eb],ecx
  4048ce:	xchg   edx,eax
  4048cf:	and    BYTE PTR [edi+0x73],0xd0
  4048d3:	fisubr WORD PTR [ebx]
  4048d5:	cwde   
  4048d6:	fnstsw WORD PTR [eax+edi*1+0x24]
  4048da:	pop    es
  4048db:	int3   
  4048dc:	add    esi,DWORD PTR ds:0x7f2477
  4048e2:	jmp    0xb5f7:0x6b6e75ea
  4048e9:	enter  0xe213,0x4e
  4048ed:	pop    edx
  4048ee:	cmp    bl,BYTE PTR ds:0x79fb42de
  4048f4:	or     ecx,0x8c20234d
  4048fa:	stos   BYTE PTR es:[edi],al
  4048fb:	push   ds
  4048fc:	scas   eax,DWORD PTR es:[edi]
  4048fd:	jle    0x4048f8
  4048ff:	iret   
  404900:	stos   BYTE PTR es:[edi],al
  404901:	fucomi st,st(7)
  404903:	add    eax,0x59072085
  404908:	mov    edi,DWORD PTR [eax]
  40490a:	inc    esp
  40490b:	add    dh,BYTE PTR [ecx]
  40490d:	int3   
  40490e:	jmp    0x4048dd
  404910:	shl    DWORD PTR [edi-0x6b8d35af],1
  404916:	and    DWORD PTR [ecx+0x56c6aa28],edx
  40491c:	dec    ecx
  40491d:	fmul   st,st(5)
  40491f:	cmp    cl,bl
  404921:	pop    ds
  404922:	pop    ss
  404923:	loope  0x40499e
  404925:	push   ebp
  404926:	xchg   dh,al
  404928:	mov    WORD PTR [edi+ebx*4],es
  40492b:	pop    edx
  40492c:	push   ebp
  40492d:	jmp    0xfe319039
  404932:	dec    edx
  404933:	push   eax
  404934:	sbb    al,0xfc
  404936:	jmp    0x1a21:0xa70f76c6
  40493d:	push   ebx
  40493e:	test   bl,0x3a
  404941:	pop    ecx
  404942:	out    dx,al
  404943:	hlt    
  404944:	push   esp
  404945:	ins    DWORD PTR es:[edi],dx
  404946:	sti    
  404947:	xchg   edx,eax
  404948:	xor    DWORD PTR [edx+0x36],edi
  40494b:	ror    edi,cl
  40494d:	nop
  40494e:	adc    DWORD PTR [edi],edx
  404950:	mov    BYTE PTR [eax+0x5e],dl
  404953:	test   al,0xae
  404955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404956:	fsub   DWORD PTR [ebp+0x13]
  404959:	add    ecx,DWORD PTR [esi]
  40495b:	mov    ah,0x47
  40495d:	inc    BYTE PTR [edi]
  40495f:	lahf   
  404960:	(bad)  
  404961:	cs push 0x40
  404964:	add    eax,0xb8353c09
  404969:	pushf  
  40496a:	cld    
  40496b:	aas    
  40496c:	and    eax,edi
  40496e:	and    eax,0x30db912a
  404973:	jnp    0x40494f
  404975:	push   es
  404976:	xor    al,0xa7
  404978:	and    al,0xf
  40497a:	rol    BYTE PTR ds:0xec455ea9,0x91
  404981:	call   0xea49a170
  404986:	and    BYTE PTR [esp+ecx*1+0x4965ac27],0x8b
  40498e:	(bad)  
  40498f:	xor    BYTE PTR [eax],dl
  404991:	dec    esi
  404992:	ficom  WORD PTR [edx-0x1cd64415]
  404998:	ss push edi
  40499a:	scas   eax,DWORD PTR es:[edi]
  40499b:	stos   DWORD PTR es:[edi],eax
  40499c:	xor    al,0xa2
  40499e:	ret    
  40499f:	pop    edx
  4049a0:	retf   
  4049a1:	test   BYTE PTR [edi-0x4e],0x52
  4049a5:	mov    edx,0x3324a620
  4049aa:	and    DWORD PTR [edi],esp
  4049ac:	push   es
  4049ad:	or     eax,0x3d0c1071
  4049b2:	in     al,dx
  4049b3:	retf   
  4049b4:	pushf  
  4049b5:	mov    edx,0x71f976c2
  4049ba:	(bad)  
  4049bb:	push   esi
  4049bc:	(bad)  
  4049bd:	mov    ecx,0xa8915a35
  4049c2:	stc    
  4049c3:	add    al,0xc6
  4049c5:	in     al,dx
  4049c6:	(bad)  
  4049c7:	cmp    edi,ebx
  4049c9:	cmp    al,0xfc
  4049cb:	push   ss
  4049cc:	mov    edx,DWORD PTR [ecx-0x2d]
  4049cf:	mov    al,ds:0x14c53191
  4049d4:	push   ecx
  4049d5:	mov    ebx,0xff83738c
  4049da:	fadd   st,st(4)
  4049dc:	mov    eax,0x5a1d4fbd
  4049e1:	xor    al,0xba
  4049e3:	and    eax,0xaa72d3a7
  4049e8:	rcl    edx,0x8c
  4049eb:	int3   
  4049ec:	sub    BYTE PTR [ecx-0x4eddfaa7],ch
  4049f2:	test   BYTE PTR ds:0x25395a7e,bh
  4049f8:	fmul   QWORD PTR [eax-0x1535485e]
  4049fe:	xor    BYTE PTR [eax+0x5a68f05c],dl
  404a04:	int3   
  404a05:	add    DWORD PTR [ebx-0x78500f8e],esp
  404a0b:	push   esp
  404a0c:	icebp  
  404a0d:	push   ebp
  404a0e:	fwait
  404a0f:	clc    
  404a10:	cmp    al,ah
  404a12:	jne    0x404a91
  404a14:	call   0x7af65831
  404a19:	(bad)  
  404a1a:	inc    ecx
  404a1b:	ds mov al,0xf7
  404a1e:	sbb    ecx,esp
  404a20:	in     al,dx
  404a21:	aaa    
  404a22:	test   al,0x14
  404a24:	push   eax
  404a25:	dec    esi
  404a26:	lods   eax,DWORD PTR fs:[esi]
  404a28:	out    0x2a,eax
  404a2a:	leave  
  404a2b:	add    DWORD PTR [edx+0x6],esp
  404a2e:	inc    ebx
  404a2f:	adc    DWORD PTR [eax-0x3989d301],edi
  404a35:	jle    0x404a75
  404a37:	out    dx,eax
  404a38:	dec    esp
  404a39:	adc    eax,0xb0851eb3
  404a3e:	or     esp,DWORD PTR [esi+0x31]
  404a41:	xor    eax,0x97cf8d87
  404a46:	adc    bh,BYTE PTR [edx+0x1e]
  404a49:	ja     0x404a0b
  404a4b:	pop    eax
  404a4c:	loop   0x404ac0
  404a4e:	inc    esp
  404a4f:	inc    esi
  404a50:	mov    esi,ecx
  404a52:	pushf  
  404a53:	push   es
  404a54:	fnstenv [esi]
  404a56:	jg     0x404a15
  404a58:	ret    
  404a59:	jmp    0x64e48354
  404a5e:	mov    eax,ds:0x8545b21a
  404a63:	xchg   esi,eax
  404a64:	ins    BYTE PTR es:[edi],dx
  404a65:	aas    
  404a66:	push   edx
  404a67:	fmul   QWORD PTR [ebp-0x25]
  404a6a:	push   ebx
  404a6b:	pop    ss
  404a6c:	ret    
  404a6d:	mov    eax,es:0x673c5815
  404a73:	or     ebp,DWORD PTR [esi]
  404a75:	rcl    DWORD PTR [ecx+edi*8+0x2f16c20f],0x55
  404a7d:	mov    ds,WORD PTR [edi-0x524d1e20]
  404a83:	mov    cl,0x5
  404a85:	(bad)  
  404a86:	push   esi
  404a87:	in     al,0x77
  404a89:	mov    ebx,0xb36452e4
  404a8e:	aaa    
  404a8f:	test   BYTE PTR [edx],bl
  404a91:	neg    BYTE PTR [eax+0x3b129137]
  404a97:	inc    ebp
  404a98:	call   FWORD PTR [ecx+0x4611588f]
  404a9e:	shr    DWORD PTR [edi+0x6d1dfb12],1
  404aa4:	test   eax,0x942959ad
  404aa9:	jg     0x404adf
  404aab:	mov    ?,WORD PTR [ebp+0xd49a9c9]
  404ab1:	(bad)  
  404ab2:	out    dx,eax
  404ab3:	in     eax,0x47
  404ab5:	cmp    cl,BYTE PTR [ebp-0x4f]
  404ab8:	rcr    cl,cl
  404aba:	jmp    0xdfe52782
  404abf:	cli    
  404ac0:	mov    ebp,0xcc94646e
  404ac5:	retf   0xd0a9
  404ac8:	out    dx,eax
  404ac9:	cdq    
  404aca:	es jmp 0x404a7c
  404acd:	out    dx,al
  404ace:	sub    al,0x24
  404ad0:	mov    eax,0x2253db9e
  404ad5:	es mov cl,0xf5
  404ad8:	xchg   edi,eax
  404ad9:	loope  0x404a6e
  404adb:	push   ebp
  404adc:	sbb    al,0x8a
  404ade:	pop    es
  404adf:	lock sahf 
  404ae1:	int3   
  404ae2:	mov    DWORD PTR [ebx+0x6e],eax
  404ae5:	xchg   ebx,eax
  404ae6:	mov    eax,0x5e4e1548
  404aeb:	shl    DWORD PTR [ebx+0x23f65ccb],cl
  404af1:	fstp   TBYTE PTR [ebx+eax*4-0x2115dc3d]
  404af9:	(bad)  
  404afa:	xchg   edi,eax
  404afb:	(bad)  
  404afc:	inc    BYTE PTR [ecx+edx*2-0x75]
  404b00:	xor    eax,0xa2e329ec
  404b05:	(bad)  
  404b06:	and    al,0xbb
  404b08:	push   esp
  404b09:	cdq    
  404b0a:	mov    esp,0x9268cd94
  404b0f:	outs   dx,BYTE PTR ds:[esi]
  404b10:	sub    dh,0xd
  404b13:	xor    BYTE PTR [eax+0x5f],ch
  404b16:	inc    esi
  404b17:	adc    al,0xe2
  404b19:	jb     0x404af8
  404b1b:	(bad)  
  404b1c:	cdq    
  404b1d:	fld    st(1)
  404b1f:	cmc    
  404b20:	push   edx
  404b21:	jecxz  0x404b79
  404b23:	shl    DWORD PTR [edx+0x1a],0x25
  404b27:	sti    
  404b28:	mul    BYTE PTR [edx]
  404b2a:	inc    ecx
  404b2b:	ret    0x1a7
  404b2e:	hlt    
  404b2f:	dec    ebp
  404b30:	out    dx,al
  404b31:	inc    ebx
  404b32:	imul   dh
  404b34:	dec    esp
  404b35:	shl    DWORD PTR [esi+0x650a769e],1
  404b3b:	adc    ecx,edi
  404b3d:	push   si
  404b3f:	xchg   ebp,eax
  404b40:	(bad)  
  404b41:	cmp    eax,esi
  404b43:	lahf   
  404b44:	out    0xf5,al
  404b46:	sbb    eax,0x2636560f
  404b4b:	and    BYTE PTR [edx-0x23],ah
  404b4e:	shl    BYTE PTR ds:0x9aaef4a7,0xce
  404b55:	popa   
  404b56:	fadd   QWORD PTR [ebx+0x751f711f]
  404b5c:	iret   
  404b5d:	push   ebp
  404b5e:	mov    ds,WORD PTR [ebp*4+0x7323fa2e]
  404b65:	cmc    
  404b66:	pop    esi
  404b67:	sbb    bl,BYTE PTR [edi+0x2c]
  404b6a:	and    DWORD PTR [edi+esi*8-0x4f],ebp
  404b6e:	ret    
  404b6f:	pop    DWORD PTR [ecx+0x63]
  404b72:	adc    eax,0xf173b05b
  404b77:	mov    dl,0xe6
  404b79:	adc    dh,dh
  404b7b:	push   ecx
  404b7c:	(bad)  
  404b7d:	inc    DWORD PTR [edx+0x7e]
  404b80:	xchg   ecx,eax
  404b81:	mov    cl,0x48
  404b83:	lahf   
  404b84:	push   ds
  404b85:	mov    ds:0x5a18e24a,eax
  404b8a:	js     0x404b7d
  404b8c:	ins    DWORD PTR es:[edi],dx
  404b8d:	je     0x404bf1
  404b8f:	ror    DWORD PTR [ecx],0x87
  404b92:	test   edi,0xe5540bdd
  404b98:	xchg   DWORD PTR [esi-0x6c],ebx
  404b9b:	adc    BYTE PTR [ebx+0x4],dl
  404b9e:	adc    cl,dl
  404ba0:	mov    edx,0xd6f3e802
  404ba5:	xchg   bx,ax
  404ba7:	xchg   ebx,eax
  404ba8:	iret   
  404ba9:	add    edx,DWORD PTR [ebx+0x31c7d0e8]
  404baf:	addr16 mov ds:0x4a81,eax
  404bb3:	or     DWORD PTR [eax],esp
  404bb5:	call   0x83f5:0x76f1a853
  404bbc:	jno    0x404c22
  404bbe:	adc    eax,0x5bf8ba83
  404bc3:	fisub  DWORD PTR [edi]
  404bc5:	or     al,0x1c
  404bc7:	nop
  404bc8:	aam    0x6c
  404bca:	cmp    BYTE PTR [eax],ch
  404bcc:	(bad)  
  404bcd:	jmp    0xffd13b36
  404bd2:	sbb    al,0xf2
  404bd4:	inc    esi
  404bd5:	ficom  DWORD PTR [ebx]
  404bd7:	sbb    edx,edx
  404bd9:	push   ds
  404bda:	stos   DWORD PTR es:[edi],eax
  404bdb:	jecxz  0x404c14
  404bdd:	stos   DWORD PTR es:[edi],eax
  404bde:	icebp  
  404bdf:	je     0x404bb9
  404be1:	cld    
  404be2:	rcl    BYTE PTR [ebx],cl
  404be4:	mov    eax,ds:0x9d50db78
  404be9:	inc    ecx
  404bea:	cmp    al,0x6b
  404bec:	hlt    
  404bed:	sub    BYTE PTR [edx],bl
  404bef:	ret    0x80e9
  404bf2:	jnp    0x404bd7
  404bf4:	inc    ecx
  404bf5:	sub    BYTE PTR [esi+0x74],cl
  404bf8:	jbe    0x404bb7
  404bfa:	jmp    0x141d007e
  404bff:	mov    ebp,0x876394c6
  404c04:	div    BYTE PTR [edi-0x5c27ffb]
  404c0a:	push   ebp
  404c0b:	cli    
  404c0c:	stos   DWORD PTR es:[edi],eax
  404c0d:	inc    eax
  404c0e:	dec    edi
  404c0f:	xor    BYTE PTR [ebp+ebp*2-0x72],ch
  404c13:	or     DWORD PTR [ebx],esp
  404c15:	pushf  
  404c16:	mov    ebx,0xd671833f
  404c1b:	and    BYTE PTR fs:[ebx+ecx*2+0xe05e939],0xe6
  404c24:	dec    ebx
  404c25:	xchg   esp,eax
  404c26:	jae    0x404c95
  404c28:	push   edx
  404c29:	adc    DWORD PTR [edi-0x4b5c02e5],eax
  404c2f:	icebp  
  404c30:	jne    0x404c21
  404c32:	imul   edi,DWORD PTR [eax-0x71a97412],0x2d
  404c39:	mov    WORD PTR [esi+0x63],gs
  404c3c:	popf   
  404c3d:	xchg   ecx,eax
  404c3e:	imul   esp,DWORD PTR [esi-0x50],0x6c
  404c42:	aaa    
  404c43:	(bad)  
  404c44:	hlt    
  404c45:	jmp    0x404c63
  404c47:	or     ah,BYTE PTR [ebp+0x2]
  404c4a:	mov    bh,0x85
  404c4c:	pushf  
  404c4d:	popf   
  404c4e:	std    
  404c4f:	xchg   esi,eax
  404c50:	dec    ebx
  404c51:	mov    dl,0xde
  404c53:	xchg   DWORD PTR [ecx-0x2],edi
  404c56:	push   edi
  404c57:	(bad)  
  404c58:	loopne 0x404c27
  404c5a:	dec    esi
  404c5b:	ret    0x4d61
  404c5e:	or     eax,0x60354361
  404c63:	je     0x404c19
  404c65:	dec    ebp
  404c66:	jbe    0x404cbb
  404c68:	pusha  
  404c69:	pop    ds
  404c6a:	in     eax,0xfe
  404c6c:	fldcw  WORD PTR [eax+eax*1]
  404c6f:	not    DWORD PTR [edx]
  404c71:	in     eax,dx
  404c72:	mov    ch,0xd2
  404c74:	fwait
  404c75:	leave  
  404c76:	jo     0x404cb3
  404c78:	lds    eax,FWORD PTR [eax]
  404c7a:	xchg   BYTE PTR [ecx+edx*8],al
  404c7d:	inc    esi
  404c7e:	jg     0x404c29
  404c80:	xchg   edi,eax
  404c81:	pop    ecx
  404c82:	inc    edx
  404c83:	fwait
  404c84:	clc    
  404c85:	adc    BYTE PTR [ebp-0x32],dh
  404c88:	bound  esi,QWORD PTR [edi]
  404c8a:	test   eax,0x1a49d208
  404c8f:	mov    eax,0xaf2f4602
  404c94:	mov    ebx,0xa28ec34c
  404c99:	sub    al,BYTE PTR [eax+0x7e4eadcd]
  404c9f:	icebp  
  404ca0:	push   edi
  404ca1:	or     al,0x14
  404ca3:	inc    ebx
  404ca4:	cmp    ah,dl
  404ca6:	dec    esp
  404ca7:	add    eax,0x471e4ee0
  404cac:	retf   
  404cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cae:	rdtsc  
  404cb0:	push   ebx
  404cb1:	iret   
  404cb2:	inc    ebx
  404cb3:	je     0x404c5f
  404cb5:	mov    cl,0x3d
  404cb7:	(bad)  
  404cb8:	cmc    
  404cb9:	cmp    BYTE PTR [eax+0x6e8da53],al
  404cbf:	ret    
  404cc0:	push   edi
  404cc1:	in     eax,dx
  404cc2:	or     BYTE PTR [edx],cl
  404cc4:	pop    eax
  404cc5:	adc    esi,eax
  404cc7:	cmp    edi,DWORD PTR [ebp+0x1813061c]
  404ccd:	jge    0x404cab
  404ccf:	xor    eax,0xbb734c76
  404cd4:	popf   
  404cd5:	out    0x78,al
  404cd7:	daa    
  404cd8:	push   es
  404cd9:	ss sub al,0xda
  404cdc:	sub    edx,esi
  404cde:	add    eax,0x994b5ab6
  404ce3:	cmp    al,0x59
  404ce5:	arpl   WORD PTR [edx-0x7b],bx
  404ce8:	cmp    eax,0xf9b0b0fe
  404ced:	rcr    BYTE PTR [esi-0x7f],0xba
  404cf1:	inc    ecx
  404cf2:	fdivr  st,st(5)
  404cf4:	repz mov edi,0x31f0850b
  404cfa:	mov    ebx,0xd06272a7
  404cff:	nop
  404d00:	adc    ebx,DWORD PTR [edi+ebx*2]
  404d03:	lods   al,BYTE PTR ds:[esi]
  404d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d05:	dec    ebp
  404d06:	stos   BYTE PTR es:[edi],al
  404d07:	or     BYTE PTR [ebx+0xcebe869],ch
  404d0d:	aam    0x4c
  404d0f:	pop    ebx
  404d10:	aaa    
  404d11:	imul   ebp,DWORD PTR [ecx-0x4a29b208],0xa25cc328
  404d1b:	inc    esi
  404d1c:	dec    edi
  404d1d:	stos   BYTE PTR es:[edi],al
  404d1e:	pop    es
  404d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d20:	sbb    al,BYTE PTR [edx]
  404d22:	mov    bl,0x6e
  404d24:	sbb    eax,0xf5f88ed
  404d29:	fidivr DWORD PTR [edx+0x15]
  404d2c:	mov    bh,0xc0
  404d2e:	sbb    al,0x55
  404d30:	pop    ss
  404d31:	add    DWORD PTR [eax+0x123c690b],ebp
  404d37:	push   esp
  404d38:	rol    BYTE PTR [ecx-0x75f99b41],cl
  404d3e:	sub    BYTE PTR [ebx],0xa3
  404d41:	test   DWORD PTR [ecx+0x40],0x6989e72
  404d48:	outs   dx,DWORD PTR ds:[esi]
  404d49:	es xchg edi,eax
  404d4b:	xor    bh,BYTE PTR [edi]
  404d4d:	sub    ebx,esi
  404d4f:	push   ecx
  404d50:	lahf   
  404d51:	xchg   ecx,eax
  404d52:	shl    BYTE PTR [ecx-0x30],cl
  404d55:	dec    ebp
  404d56:	dec    edx
  404d57:	arpl   WORD PTR [ebx+0x16],di
  404d5a:	outs   dx,DWORD PTR ds:[esi]
  404d5b:	xchg   edi,eax
  404d5c:	lahf   
  404d5d:	fnsave [edi+0x67]
  404d60:	arpl   WORD PTR [edx+0xc],ax
  404d63:	push   ecx
  404d64:	lahf   
  404d65:	sbb    DWORD PTR ds:0xa95a,eax
  404d6a:	das    
  404d6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d6c:	cmp    dl,BYTE PTR fs:[edi+ecx*4-0x5c893e18]
  404d74:	or     al,0xf0
  404d76:	loopne 0x404de7
  404d78:	sbb    al,0x41
  404d7a:	(bad)  
  404d7b:	cmp    ebp,DWORD PTR [ebx]
  404d7d:	lea    esp,[esi]
  404d7f:	ss mov bl,0xd8
  404d82:	add    esp,DWORD PTR [eax]
  404d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d85:	out    0x99,al
  404d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d88:	sbb    eax,DWORD PTR [eax-0x68]
  404d8b:	test   al,0xae
  404d8d:	outs   dx,BYTE PTR ds:[esi]
  404d8e:	pop    ecx
  404d8f:	dec    edi
  404d90:	adc    DWORD PTR [esi-0x1fd32453],ebp
  404d96:	cli    
  404d97:	clc    
  404d98:	add    al,0xd9
  404d9a:	loopne 0x404dff
  404d9c:	ret    
  404d9d:	mov    ds:0xf0a41280,al
  404da2:	lock repnz mov eax,ds:0x9ec922db
  404da9:	xchg   ecx,eax
  404daa:	sub    bh,dl
  404dac:	cs sar ecx,1
  404daf:	and    DWORD PTR [esi+0x698fa1b5],0x6190b46a
  404db9:	jb     0x404dae
  404dbb:	mov    edx,0x26e0bbe0
  404dc0:	stos   DWORD PTR es:[edi],eax
  404dc1:	in     eax,dx
  404dc2:	sbb    eax,0xf0f65fa7
  404dc7:	lods   al,BYTE PTR ds:[esi]
  404dc8:	leave  
  404dc9:	mov    al,0xe
  404dcb:	bound  ebx,QWORD PTR [edx-0x4a]
  404dce:	dec    esi
  404dcf:	aad    0x8c
  404dd1:	cmp    eax,0x8d2bd959
  404dd6:	(bad)  
  404dd7:	adc    BYTE PTR [ebx-0x25],bl
  404dda:	(bad)  
  404ddb:	mov    edi,0xd78f115a
  404de0:	pop    ebp
  404de1:	pushf  
  404de2:	mov    eax,0x9954464c
  404de7:	gs and ebp,edi
  404dea:	jge    0x404e48
  404dec:	retf   0x4c4a
  404def:	jno    0x404d84
  404df1:	jmp    0x404dc4
  404df3:	and    dl,BYTE PTR [edi+ebp*8]
  404df6:	ss push ebp
  404df8:	or     edx,edx
  404dfa:	dec    ebx
  404dfb:	xor    eax,0xeeab63d1
  404e00:	inc    BYTE PTR [eax-0x2a]
  404e03:	xor    bl,BYTE PTR [edi-0x68]
  404e06:	dec    ebp
  404e07:	loopne 0x404daf
  404e09:	cmp    edi,DWORD PTR [esi-0x63]
  404e0c:	dec    edx
  404e0d:	dec    ebx
  404e0e:	(bad)  
  404e0f:	gs in  eax,0x71
  404e12:	jg     0x404e39
  404e14:	(bad)  
  404e15:	(bad)  
  404e16:	cdq    
  404e17:	sbb    cl,al
  404e19:	cmp    eax,0x6534d745
  404e1e:	dec    ebp
  404e1f:	jne    0x404e6b
  404e21:	loopne 0x404e11
  404e23:	inc    ecx
  404e24:	retf   
  404e25:	push   0xffffffea
  404e27:	xchg   edi,esp
  404e29:	xchg   BYTE PTR ds:0x9b8b08e2,ah
  404e2f:	loope  0x404e0f
  404e31:	in     eax,dx
  404e32:	jns    0x404e94
  404e34:	lea    esp,[ebp-0x50]
  404e37:	mov    bl,0x85
  404e39:	push   es
  404e3a:	dec    ebx
  404e3b:	popa   
  404e3c:	inc    ebp
  404e3d:	shr    DWORD PTR [edx-0x23],0x7f
  404e41:	xlat   BYTE PTR ds:[ebx]
  404e42:	sub    al,0x57
  404e44:	jbe    0x404df1
  404e46:	push   ebp
  404e47:	test   eax,0x4281faf3
  404e4c:	and    DWORD PTR [edx],0x9e1fece0
  404e52:	jp     0x404dfb
  404e54:	xor    eax,0xdb1ee493
  404e59:	and    al,0xec
  404e5b:	pop    ss
  404e5c:	push   ds
  404e5d:	inc    edx
  404e5e:	aam    0xe9
  404e60:	popf   
  404e61:	iret   
  404e62:	je     0x404e79
  404e64:	jg     0x404ecf
  404e66:	inc    edi
  404e67:	aas    
  404e68:	ret    0x8d50
  404e6b:	add    edx,esp
  404e6d:	das    
  404e6e:	loopne 0x404e90
  404e70:	js     0x404e52
  404e72:	xor    al,ah
  404e74:	or     esi,DWORD PTR [edx-0x70]
  404e77:	pop    ss
  404e78:	or     DWORD PTR ds:0xd5e592f3,esi
  404e7e:	fisttp QWORD PTR [ebp-0x33]
  404e81:	and    al,0x21
  404e83:	sub    BYTE PTR [eax-0x6b662e43],al
  404e89:	(bad)  
  404e8a:	pop    ds
  404e8b:	cdq    
  404e8c:	call   0x3fdde0b4
  404e91:	mov    eax,ds:0x15273ad1
  404e96:	cmp    al,0x2b
  404e98:	scas   al,BYTE PTR es:[edi]
  404e99:	loop   0x404e89
  404e9b:	push   esi
  404e9c:	mov    esp,?
  404e9e:	mov    ds:0x6c4df099,eax
  404ea3:	(bad)  
  404ea4:	in     eax,dx
  404ea5:	outs   dx,BYTE PTR ds:[esi]
  404ea6:	sub    ah,BYTE PTR [ebp+0x147294d9]
  404eac:	mov    ch,0x34
  404eae:	adc    BYTE PTR [edi+0x2c],cl
  404eb1:	jns    0x404e51
  404eb3:	mov    esp,0x39335c86
  404eb8:	xchg   DWORD PTR [ebx-0x69302d0a],ebx
  404ebe:	pop    ecx
  404ebf:	in     eax,0x18
  404ec1:	mov    bh,0xc8
  404ec3:	sbb    al,BYTE PTR [edx+eiz*8]
  404ec6:	xchg   esp,eax
  404ec7:	cli    
  404ec8:	or     bh,dh
  404eca:	xchg   esp,eax
  404ecb:	and    al,0x8e
  404ecd:	mov    WORD PTR [eax+ecx*1],?
  404ed0:	cdq    
  404ed1:	inc    ebx
  404ed2:	cld    
  404ed3:	pusha  
  404ed4:	aam    0x76
  404ed6:	mov    ebx,DWORD PTR [ebx-0x2b]
  404ed9:	push   ds
  404eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404edb:	dec    edx
  404edc:	aaa    
  404edd:	dec    ebx
  404ede:	sub    BYTE PTR [ebx],ch
  404ee0:	(bad)  
  404ee1:	call   0x737c:0xeeaffcb6
  404ee8:	add    cl,dh
  404eea:	push   0xc509f85e
  404eef:	add    ebp,edx
  404ef1:	xor    eax,0xe1c23abf
  404ef6:	(bad)  
  404ef8:	push   es
  404ef9:	repnz es xchg edx,eax
  404efc:	test   DWORD PTR [esp+edi*2+0x7c8aa358],edx
  404f03:	sbb    eax,0xb5f8108c
  404f08:	aam    0xd9
  404f0a:	ins    BYTE PTR es:[edi],dx
  404f0b:	and    dh,BYTE PTR [esi]
  404f0d:	dec    ecx
  404f0e:	dec    ebx
  404f0f:	or     DWORD PTR [ebx+ebp*4-0x5],esi
  404f13:	jmp    DWORD PTR [ebx+0x7c]
  404f16:	inc    esi
  404f17:	or     ebx,DWORD PTR [ecx-0x2cbe8a82]
  404f1d:	push   ss
  404f1e:	std    
  404f1f:	jge    0x404f14
  404f21:	inc    esi
  404f22:	dec    esp
  404f23:	add    ecx,DWORD PTR [ecx-0x3dceeebf]
  404f29:	sub    DWORD PTR [esi+ecx*4-0x1e],ebp
  404f2d:	dec    edx
  404f2e:	inc    edi
  404f2f:	dec    ebx
  404f30:	jne    0x404ef0
  404f32:	dec    DWORD PTR [ebx-0x6d]
  404f35:	(bad)  [esi+0x70012d2f]
  404f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f3c:	loopne 0x404f12
  404f3e:	or     ch,cl
  404f40:	add    bh,BYTE PTR [ebx+0x63]
  404f43:	cmp    edi,DWORD PTR [ebx-0x78]
  404f46:	loop   0x404f80
  404f48:	(bad)  
  404f4a:	clc    
  404f4b:	sub    al,0xd0
  404f4d:	pop    edx
  404f4e:	sbb    ch,ah
  404f50:	jno    0x404f1d
  404f52:	lahf   
  404f53:	ja     0x404f39
  404f55:	pop    edx
  404f56:	test   DWORD PTR [eax-0x75],ecx
  404f59:	pop    ebp
  404f5a:	scas   eax,DWORD PTR es:[edi]
  404f5b:	or     eax,0x28e3905
  404f60:	cli    
  404f61:	pop    esi
  404f62:	mov    ch,0xae
  404f64:	retf   0x4c9f
  404f67:	call   0x57aa:0xc746ca15
  404f6e:	sti    
  404f6f:	adc    bl,BYTE PTR [ebx+0x363503de]
  404f75:	(bad)  
  404f77:	xor    al,0xb3
  404f79:	bound  edx,QWORD PTR [edi+0x1d332664]
  404f7f:	iret   
  404f80:	retf   0x1fc1
  404f83:	jno    0x404f89
  404f85:	xchg   esi,eax
  404f86:	ret    0x9e0a
  404f89:	je     0x404f75
  404f8b:	shl    BYTE PTR [esi-0x5a30dea9],1
  404f91:	sub    eax,DWORD PTR [esi]
  404f93:	mov    ecx,DWORD PTR [ecx]
  404f95:	sbb    al,0x78
  404f97:	cmp    al,0x6b
  404f99:	ret    0xc958
  404f9c:	mov    bh,0xb1
  404f9e:	pop    ds
  404f9f:	retf   
  404fa0:	xchg   DWORD PTR fs:[eax-0x7b36d356],ecx
  404fa7:	popa   
  404fa8:	repz out dx,eax
  404faa:	sub    al,0x30
  404fac:	cmp    edi,esp
  404fae:	mov    ebp,0x9dc29337
  404fb3:	call   0x6d1db3f7
  404fb8:	jle    0x404fcf
  404fba:	int    0x67
  404fbc:	test   al,0xd3
  404fbe:	out    dx,al
  404fbf:	add    dl,BYTE PTR [edx+0x76be6f30]
  404fc5:	mov    cl,0x3
  404fc7:	add    DWORD PTR [edx+edi*8+0x20bd6f1d],0x34c759b6
  404fd2:	and    eax,0x57bcac54
  404fd7:	and    ebx,eax
  404fd9:	fstp   DWORD PTR [eax+0x1aa70294]
  404fdf:	outs   dx,BYTE PTR ds:[esi]
  404fe0:	test   DWORD PTR [edi],ebp
  404fe2:	rep lods al,BYTE PTR fs:[esi]
  404fe5:	je     0x405013
  404fe7:	icebp  
  404fe8:	xchg   ebp,eax
  404fe9:	adc    eax,0xe960cbbe
  404fee:	arpl   WORD PTR [ebx-0x57],sp
  404ff1:	jmp    0x404fdc
  404ff3:	add    DWORD PTR [ecx+0x74c9e0a5],edi
  404ff9:	cs cmp edx,ebp
  404ffc:	dec    ebp
  404ffd:	stc    
  404ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fff:	sbb    edi,esi
  405001:	mov    al,0x31
  405003:	inc    ebp
  405004:	daa    
  405005:	mov    ebp,0xb9ecbd55
  40500a:	es cli 
  40500c:	mov    dh,ah
  40500e:	cmp    ch,BYTE PTR [ebp+esi*2-0x11630c5]
  405015:	repnz or ch,BYTE PTR [bx+si+0x7c]
  40501a:	pop    esp
  40501b:	jne    0x405083
  40501d:	pop    ebp
  40501e:	ins    BYTE PTR es:[edi],dx
  40501f:	add    ebp,eax
  405021:	cmp    cl,BYTE PTR [ebx-0x2fd8166e]
  405027:	add    esp,DWORD PTR [edx]
  405029:	lods   al,BYTE PTR ds:[esi]
  40502a:	inc    esi
  40502b:	dec    eax
  40502c:	cmp    eax,0x54b2a049
  405031:	xor    DWORD PTR [edx],esp
  405033:	outs   dx,DWORD PTR ds:[esi]
  405034:	mov    ch,0x90
  405036:	pop    esi
  405037:	loop   0x404fc4
  405039:	jmp    0x1f6e:0x1dd7744
  405040:	in     al,dx
  405041:	hlt    
  405042:	arpl   WORD PTR [ebx-0x51acc404],sp
  405048:	push   ebp
  405049:	or     dh,BYTE PTR [edi]
  40504b:	imul   edx,DWORD PTR [eax-0x47],0xffffffe3
  40504f:	cdq    
  405050:	add    DWORD PTR [eax-0x7f],edx
  405053:	sbb    DWORD PTR [eax],0xce71354c
  405059:	xchg   edi,eax
  40505a:	push   0xc60bcafc
  40505f:	sub    ebx,DWORD PTR [edx]
  405061:	push   ds
  405062:	in     al,0x37
  405064:	(bad)  
  405065:	push   esp
  405066:	jp     0x405009
  405068:	adc    al,0x98
  40506a:	push   eax
  40506b:	or     eax,0x44bb5599
  405070:	sub    al,0x81
  405072:	test   DWORD PTR [edx],esi
  405074:	adc    BYTE PTR [esi-0x3d],al
  405077:	in     al,0x16
  405079:	cdq    
  40507a:	addr16 inc ebp
  40507c:	add    al,0xcd
  40507e:	jne    0x4050cf
  405080:	das    
  405081:	fmulp  st(3),st
  405083:	or     BYTE PTR [edi],cl
  405085:	fsubr  DWORD PTR [ebp+0x239b472d]
  40508b:	mov    dl,0xae
  40508d:	dec    edx
  40508e:	mov    ah,BYTE PTR [edx+0x7c507740]
  405094:	inc    eax
  405095:	push   ebx
  405096:	in     al,dx
  405097:	add    eax,0x4ec28fa3
  40509c:	push   0xa147c385
  4050a1:	mov    ebx,0xb8dc1fdd
  4050a6:	sbb    eax,0x459ac069
  4050ab:	sbb    eax,0x8f471e55
  4050b0:	fisubr DWORD PTR [edx+0x2b3fabd1]
  4050b6:	or     al,0x3d
  4050b8:	mov    eax,0x6149cb4b
  4050bd:	dec    esp
  4050be:	mov    dh,0xf3
  4050c0:	jl     0x405083
  4050c2:	cmc    
  4050c3:	jnp    0x405085
  4050c5:	xor    esp,esp
  4050c7:	shl    DWORD PTR cs:[edx+0x6a],0x26
  4050cc:	imul   edi,DWORD PTR [ecx-0x1cf28dd6],0xb
  4050d3:	dec    ecx
  4050d4:	je     0x405133
  4050d6:	into   
  4050d7:	mov    ds:0x2328259,al
  4050dc:	cwde   
  4050dd:	(bad)  
  4050df:	xchg   esi,eax
  4050e0:	iret   
  4050e1:	dec    edi
  4050e2:	or     bh,BYTE PTR [ebp-0x25957849]
  4050e8:	push   eax
  4050e9:	jmp    0x30a0fe84
  4050ee:	dec    esp
  4050ef:	icebp  
  4050f0:	call   0xe4cf:0xc65239d6
  4050f7:	mov    al,ds:0xc12f9001
  4050fc:	pop    esp
  4050fd:	and    BYTE PTR [ecx-0x7e],dh
  405100:	and    BYTE PTR [esi],bh
  405102:	popf   
  405103:	mov    eax,ds:0xb647d75f
  405108:	clc    
  405109:	push   ss
  40510a:	hlt    
  40510b:	push   ds
  40510c:	mov    ds:0xb3dc04f6,al
  405111:	inc    edx
  405112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405113:	je     0x4050cb
  405115:	leave  
  405116:	mov    dl,0x59
  405118:	fcomip st,st(2)
  40511a:	cmp    al,0x65
  40511c:	or     al,0x5c
  40511e:	push   ecx
  40511f:	ss sbb al,0x3a
  405122:	pop    ebx
  405123:	popa   
  405124:	xchg   esp,eax
  405125:	std    
  405126:	jbe    0x405138
  405128:	(bad)  
  405129:	aad    0x47
  40512b:	ins    BYTE PTR es:[edi],dx
  40512c:	mov    ecx,0xae7f98e1
  405131:	leave  
  405132:	scas   eax,DWORD PTR es:[edi]
  405133:	push   ss
  405134:	inc    esp
  405135:	and    DWORD PTR [ebx+0x5f577c],esp
  40513b:	sub    bl,BYTE PTR [esi]
  40513d:	mov    bl,0x50
  40513f:	test   DWORD PTR [ebx-0x51bbb306],0x8b15a592
  405149:	and    cl,ch
  40514b:	out    dx,al
  40514c:	dec    ecx
  40514d:	jl     0x405196
  40514f:	pusha  
  405150:	mov    esi,0x5e84b3c
  405155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405156:	sti    
  405157:	loopne 0x405153
  405159:	add    al,cl
  40515b:	ffree  st(4)
  40515d:	popa   
  40515e:	lahf   
  40515f:	scas   eax,DWORD PTR es:[edi]
  405160:	mov    al,ds:0x7f2b40e7
  405165:	inc    esp
  405166:	jg     0x40519d
  405168:	add    ebx,DWORD PTR [ebx-0x3a]
  40516b:	daa    
  40516c:	adc    dl,BYTE PTR [edx-0x1eaa869f]
  405172:	fidivr DWORD PTR [esi-0x3d]
  405175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405176:	jmp    0xab6f7f10
  40517b:	lods   eax,DWORD PTR ds:[esi]
  40517c:	in     eax,dx
  40517d:	ficom  WORD PTR [ecx+0x5d6b485a]
  405183:	call   0x4d92:0x73d64b9b
  40518a:	pop    ebx
  40518b:	jmp    0x405202
  40518d:	call   0xad67:0x2aa1fb
  405194:	xor    eax,0x4d956ab9
  405199:	push   esp
  40519a:	inc    esp
  40519b:	add    al,0x97
  40519d:	imul   ebp,DWORD PTR [edx-0x6169bf4],0x7dfed18f
  4051a7:	or     BYTE PTR [edx+0x6bbec5b3],bh
  4051ad:	int    0x70
  4051af:	lods   eax,DWORD PTR ds:[esi]
  4051b0:	pop    es
  4051b1:	sbb    DWORD PTR [ecx],ebp
  4051b3:	push   edx
  4051b4:	lock xor BYTE PTR [ebx],ch
  4051b7:	jp     0x4051e9
  4051b9:	daa    
  4051ba:	popa   
  4051bb:	rcr    DWORD PTR [ebx-0x3855bca1],1
  4051c1:	stos   BYTE PTR es:[edi],al
  4051c2:	dec    ebx
  4051c3:	test   eax,0x25fb0678
  4051c8:	lea    edi,[ebp-0x5d9ac4]
  4051ce:	cdq    
  4051cf:	aaa    
  4051d0:	sbb    BYTE PTR [ecx-0x6d75ef8a],ch
  4051d6:	and    cl,bh
  4051d8:	jb     0x405197
  4051da:	fsubr  DWORD PTR [ecx-0x2093dc8d]
  4051e0:	inc    ebp
  4051e1:	xchg   WORD PTR [ecx+0x4f80093b],sp
  4051e8:	xchg   edi,eax
  4051e9:	sub    esi,edi
  4051eb:	test   al,0xe
  4051ed:	push   edx
  4051ee:	jo     0x405242
  4051f0:	jnp    0x4051e8
  4051f2:	mov    edi,0x5d124ba8
  4051f7:	dec    eax
  4051f8:	stos   DWORD PTR es:[edi],eax
  4051f9:	mov    esi,0x80d0224a
  4051fe:	cmp    al,0xea
  405200:	xchg   esp,eax
  405201:	or     eax,0xa9fa871e
  405206:	inc    eax
  405207:	imul   eax,DWORD PTR [edi-0x2d],0x23e69c48
  40520e:	xchg   esi,eax
  40520f:	retf   0xb84b
  405212:	or     eax,0xf62b3061
  405217:	ror    ch,cl
  405219:	push   ebx
  40521a:	mov    BYTE PTR [ecx+0x33],0x89
  40521e:	mov    ah,0xca
  405220:	sbb    eax,0x5c3334b
  405225:	fdiv   QWORD PTR [edx+0x32]
  405228:	add    cl,ch
  40522a:	add    DWORD PTR fs:[eax],eax
  40522d:	add    BYTE PTR [ebx+0x4d03c84d],cl
  405233:	or     BYTE PTR [ecx+0x4d8bf04d],cl
  405239:	in     al,0x85
  40523b:	leave  
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x2f8394ee
  405804:	adc    ebp,DWORD PTR [esi+0x7c7c5fe0]
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	mov    ebp,0x8aea224
  405813:	jge    0x4057e5
  405815:	mov    ecx,0x3bd8f7c7
  40581a:	int    0x2a
  40581c:	add    ebx,esp
  40581e:	inc    esi
  40581f:	jge    0x40583d
  405821:	add    al,0x79
  405823:	push   ebp
  405824:	sahf   
  405825:	(bad)  
  405826:	jae    0x4057e4
  405828:	into   
  405829:	add    DWORD PTR [eax+0x50a512d6],esp
  40582f:	lea    ebp,ds:0xbb2afca
  405835:	or     bh,al
  405837:	ret    
  405838:	adc    al,0x60
  40583a:	aas    
  40583b:	xor    ch,BYTE PTR [ecx+0x33]
  40583e:	adc    eax,0x9fdcb53d
  405843:	pop    esp
  405844:	stc    
  405845:	arpl   WORD PTR [edi+0x79174777],bp
  40584b:	pop    es
  40584c:	lods   eax,DWORD PTR ds:[esi]
  40584d:	int    0x87
  40584f:	fwait
  405850:	push   ss
  405851:	cwde   
  405852:	jmp    0xef04:0xc9c64f97
  405859:	shr    BYTE PTR [ecx+0x7227ccae],0x12
  405860:	pop    eax
  405861:	ror    BYTE PTR [edx],1
  405863:	mov    ah,0x90
  405865:	rol    BYTE PTR ds:0x86bd6b97,1
  40586b:	add    ebx,edx
  40586d:	lds    eax,FWORD PTR [ebp-0x69]
  405870:	fldenv [ebx+esi*2+0x6ce6da42]
  405877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405879:	mov    esp,0x32ee4e43
  40587e:	adc    BYTE PTR [esi+0x2c],ch
  405881:	xchg   esi,eax
  405882:	inc    ebp
  405883:	jne    0x4058f1
  405885:	xchg   esp,eax
  405886:	leave  
  405887:	pushf  
  405888:	adc    al,0xb6
  40588a:	pop    eax
  40588b:	cmp    bh,dl
  40588d:	das    
  40588e:	mov    al,ds:0xd7b7b213
  405893:	fstp   TBYTE PTR [eax+0x70]
  405896:	and    eax,0x9cf39c5a
  40589b:	push   cs
  40589c:	mov    ds:0xb15fa70f,al
  4058a1:	imul   BYTE PTR [ebx-0x571fe75a]
  4058a7:	lods   al,BYTE PTR gs:[esi]
  4058a9:	pop    eax
  4058aa:	das    
  4058ab:	out    0xa5,eax
  4058ad:	stos   BYTE PTR es:[edi],al
  4058ae:	push   ebp
  4058af:	mov    ebp,0xfc425d20
  4058b4:	ins    DWORD PTR es:[edi],dx
  4058b5:	loope  0x40590c
  4058b7:	dec    eax
  4058b8:	sub    eax,0x96e9a40f
  4058bd:	in     al,dx
  4058be:	pop    eax
  4058bf:	push   esi
  4058c0:	mov    edi,0x9cc77a4c
  4058c5:	mov    bh,0x55
  4058c7:	pop    ecx
  4058c8:	add    edx,0x7bf5104b
  4058ce:	inc    ebp
  4058cf:	xchg   ebx,eax
  4058d0:	xchg   ecx,eax
  4058d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058d2:	inc    eax
  4058d3:	inc    ebx
  4058d4:	lods   al,BYTE PTR ds:[esi]
  4058d5:	std    
  4058d6:	mov    WORD PTR [esp+esi*2+0x33],?
  4058da:	or     DWORD PTR [eax-0x15],0xd34273cf
  4058e1:	dec    ecx
  4058e2:	repnz mov ds:0x39cd5257,eax
  4058e8:	mov    ah,0x37
  4058ea:	xor    ecx,DWORD PTR [ebx+0x30]
  4058ed:	and    esi,DWORD PTR [eax-0x2d]
  4058f0:	mov    ds:0x3b6e93a0,eax
  4058f5:	jns    0x4058bc
  4058f7:	aam    0x7c
  4058f9:	mov    ebx,0x57a1d0f3
  4058fe:	fnstsw WORD PTR [eax-0x1e25a5ca]
  405904:	or     eax,0x7fde4f20
  405909:	adc    eax,edx
  40590b:	dec    ecx
  40590c:	jle    0x4058e3
  40590e:	fisubr WORD PTR [ecx+0x54]
  405911:	xor    eax,0x2c4827b9
  405916:	xor    BYTE PTR [edx],bh
  405918:	add    DWORD PTR [ebx+0x3864fa35],0xffffffc0
  40591f:	xor    DWORD PTR [ecx],0xf68e3119
  405925:	cmp    edx,ecx
  405927:	dec    esp
  405928:	sar    DWORD PTR [edx+0x2d287289],1
  40592e:	mov    eax,ds:0xd7484c0d
  405933:	arpl   WORD PTR [ebx-0xf],ax
  405936:	push   ebx
  405937:	in     al,dx
  405938:	ds mov ch,0x50
  40593b:	ins    DWORD PTR es:[edi],dx
  40593c:	xor    bl,BYTE PTR [ebx+0x60]
  40593f:	call   0xd277b98
  405944:	jb     0x40597a
  405946:	dec    edx
  405947:	push   cs
  405948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405949:	jle    0x405926
  40594b:	dec    edx
  40594c:	mov    bh,0x37
  40594e:	and    BYTE PTR ds:0x5b1b2c85,dh
  405954:	shl    cl,cl
  405956:	call   0xd08ba5dd
  40595b:	xlat   BYTE PTR ds:[ebx]
  40595c:	mov    ch,0xf4
  40595e:	or     al,0x77
  405960:	ret    0xcce1
  405963:	sub    al,0x41
  405965:	xchg   esi,eax
  405966:	out    0x3e,eax
  405968:	pop    ebx
  405969:	and    BYTE PTR [edx-0x6bf7aa0e],dh
  40596f:	(bad)  
  405970:	shr    BYTE PTR [esi-0x25810395],cl
  405976:	mov    bl,0xc4
  405978:	leave  
  405979:	and    esp,ebp
  40597b:	jg     0x40599f
  40597d:	fdiv   DWORD PTR [edi]
  40597f:	adc    al,0xa7
  405981:	mov    fs,WORD PTR [esi-0x74]
  405984:	jmp    0x40590a
  405986:	aam    0xa7
  405988:	xor    ah,BYTE PTR [edx+esi*4+0x72]
  40598c:	adc    BYTE PTR [esi],ch
  40598e:	in     al,0x38
  405990:	test   al,0xa8
  405992:	ja     0x405918
  405994:	and    BYTE PTR [eax+ecx*1],cl
  405997:	cmp    esp,DWORD PTR [eax-0x56]
  40599a:	in     eax,dx
  40599b:	xchg   edi,eax
  40599c:	imul   edx,DWORD PTR [ebp+ecx*8+0x1],0xfae8a0a1
  4059a4:	lea    ebp,[ebp+0x23d33d91]
  4059aa:	xchg   BYTE PTR [ecx-0x1363fede],bh
  4059b0:	xchg   ebx,eax
  4059b1:	test   eax,0x2924d04d
  4059b6:	cmp    edx,eax
  4059b8:	dec    ebp
  4059b9:	loopne 0x4059eb
  4059bb:	ss (bad) 
  4059bd:	arpl   WORD PTR [ecx-0x1c281cb5],bx
  4059c3:	inc    DWORD PTR [esi]
  4059c5:	dec    esp
  4059c6:	jle    0x405a2c
  4059c8:	ret    
  4059c9:	data16 jmp 0x40596f
  4059cc:	loop   0x405a36
  4059ce:	cmp    al,0x6e
  4059d0:	(bad)  
  4059d1:	ds jmp 0x1eb1a2ca
  4059d7:	fmul   QWORD PTR [eax]
  4059d9:	push   ebp
  4059da:	ins    DWORD PTR es:[edi],dx
  4059db:	je     0x405975
  4059dd:	jle    0x405a2e
  4059df:	xchg   ebx,eax
  4059e0:	shr    BYTE PTR ds:0xb78d720b,cl
  4059e6:	and    BYTE PTR [ecx+0x69],al
  4059e9:	xchg   bh,bl
  4059eb:	test   DWORD PTR [ebx+eax*8],edi
  4059ee:	xor    bl,BYTE PTR [edx-0x43ee3800]
  4059f4:	mov    edx,0x6dfbf4c4
  4059f9:	adc    eax,0x86f002af
  4059fe:	add    bh,bl
  405a00:	sub    eax,0xfb53bc36
  405a05:	jecxz  0x40599d
  405a07:	shr    DWORD PTR [eax],0x4c
  405a0a:	cmp    al,0xd3
  405a0c:	stos   DWORD PTR es:[edi],eax
  405a0d:	dec    eax
  405a0e:	mov    bh,0xdb
  405a10:	imul   edx,DWORD PTR [esi+0x32ac950b],0x425667f3
  405a1a:	adc    ebx,DWORD PTR [esi+0x5a]
  405a1d:	xor    ecx,DWORD PTR [ebp+0x5c992d34]
  405a23:	mov    esp,0x2e374c0
  405a28:	add    BYTE PTR [eax],0x7d
  405a2b:	xor    BYTE PTR [edx-0x71],0x26
  405a2f:	cmp    DWORD PTR [edx],ebx
  405a31:	sub    bh,BYTE PTR [ecx]
  405a33:	mov    ds:0x749a0c65,al
  405a38:	or     esp,DWORD PTR gs:0xc182570f
  405a3f:	and    eax,0xbc27d2cc
  405a44:	and    cl,BYTE PTR [ecx+ebx*1-0x682de59a]
  405a4b:	ss jns 0x405a9b
  405a4e:	dec    ecx
  405a4f:	scas   eax,DWORD PTR es:[edi]
  405a50:	xor    eax,0x14dd61e4
  405a55:	shr    DWORD PTR [ebp+0x664059eb],1
  405a5b:	add    BYTE PTR [esi+0x308ebcb3],cl
  405a61:	xchg   ecx,eax
  405a62:	pop    eax
  405a63:	mov    edx,0xf2b69c33
  405a68:	outs   dx,DWORD PTR ds:[esi]
  405a69:	jmp    0x405a75
  405a6b:	int    0xd5
  405a6d:	outs   dx,DWORD PTR ds:[esi]
  405a6e:	pop    esp
  405a6f:	mov    edx,0xe4e98997
  405a74:	xchg   DWORD PTR [edi],esp
  405a76:	pop    ecx
  405a77:	jae    0x405a23
  405a79:	mov    al,ds:0xe439abc0
  405a7e:	adc    al,0x6c
  405a80:	lods   eax,DWORD PTR ds:[esi]
  405a81:	fmulp  st(7),st
  405a83:	add    DWORD PTR [edi+0x17],ebx
  405a86:	adc    cl,BYTE PTR [edi]
  405a88:	cs and al,0xf7
  405a8b:	jg     0x405a18
  405a8d:	xor    bl,BYTE PTR [esi+ebp*1-0x2e271d20]
  405a94:	test   al,0xfc
  405a96:	je     0x405a3e
  405a98:	xchg   edi,eax
  405a99:	add    eax,0x8747e9c6
  405a9e:	or     al,0xbd
  405aa0:	sti    
  405aa1:	js     0x405a61
  405aa3:	sar    DWORD PTR [ebp-0x64a3041],1
  405aa9:	mov    ch,0xf1
  405aab:	sbb    eax,0xba6da7b
  405ab0:	lahf   
  405ab1:	mov    ah,0xa9
  405ab3:	cmp    eax,0x11a89c3f
  405ab8:	pop    edx
  405ab9:	push   es
  405aba:	push   ebp
  405abb:	gs pop eax
  405abd:	popa   
  405abe:	cli    
  405abf:	or     al,0x3c
  405ac1:	arpl   WORD PTR ds:0xaab4045b,sp
  405ac7:	(bad)  
  405ac8:	mov    al,0xfc
  405aca:	push   es
  405acb:	out    0x32,al
  405acd:	xor    ebp,DWORD PTR [eax-0x59]
  405ad0:	xor    eax,0x848d7425
  405ad5:	fadd   st(4),st
  405ad7:	test   eax,0xb6702e39
  405adc:	fisubr DWORD PTR gs:[edx+0x17ba7d29]
  405ae3:	mov    dh,0x52
  405ae5:	les    ebx,FWORD PTR [edi-0x40a91ba6]
  405aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aec:	(bad)  
  405aed:	pop    esi
  405aee:	push   ecx
  405aef:	or     eax,0x92462ea2
  405af4:	mov    ebx,0x1b9207fa
  405af9:	popa   
  405afa:	pop    es
  405afb:	dec    ebx
  405afc:	sub    al,0x36
  405afe:	call   0xbc:0x2d105d76
  405b05:	addr16 pop ecx
  405b07:	xchg   esp,eax
  405b08:	lock mul DWORD PTR [eax+0x523d42c8]
  405b0f:	jb     0x405aab
  405b11:	int    0x27
  405b13:	and    eax,DWORD PTR [ebp-0x28]
  405b16:	cmp    edx,ebp
  405b18:	push   esp
  405b19:	xlat   BYTE PTR ds:[ebx]
  405b1a:	pop    ecx
  405b1b:	mov    dl,0x56
  405b1d:	xchg   edi,eax
  405b1e:	adc    DWORD PTR ds:0xa0d26913,ecx
  405b24:	lock int 0xca
  405b27:	cmc    
  405b28:	mov    eax,DWORD PTR [ecx]
  405b2a:	cwde   
  405b2b:	sbb    ch,BYTE PTR [eax-0x1]
  405b2e:	sub    BYTE PTR fs:[esi],bl
  405b31:	push   ecx
  405b32:	push   esi
  405b33:	arpl   WORD PTR [esi+0x3d],sp
  405b36:	mov    dl,0x44
  405b38:	retf   0xde74
  405b3b:	and    BYTE PTR [ebp+0x223270bd],dh
  405b41:	inc    ebx
  405b42:	sub    dh,BYTE PTR [ecx+0x72]
  405b45:	inc    edx
  405b46:	pop    edi
  405b47:	cmp    ebp,DWORD PTR [eax+0x21]
  405b4a:	retf   
  405b4b:	stc    
  405b4c:	inc    ebp
  405b4d:	pop    ds
  405b4e:	sbb    al,cl
  405b50:	push   esi
  405b51:	cmp    BYTE PTR [eax+ebp*2],dl
  405b54:	dec    edi
  405b55:	push   ss
  405b56:	sub    DWORD PTR [ecx+0x17],edx
  405b59:	jg     0x405aee
  405b5b:	retf   0x9735
  405b5e:	(bad)  
  405b5f:	sub    esi,DWORD PTR [ebp+edx*4-0x25]
  405b63:	je     0x405b5b
  405b65:	fimul  DWORD PTR ds:[eax-0x50]
  405b69:	fidiv  WORD PTR [ecx-0xd]
  405b6c:	or     bh,BYTE PTR [ecx+eax*2-0x47c81fbb]
  405b73:	and    BYTE PTR [edi],ah
  405b75:	(bad)  
  405b76:	mov    dh,0x35
  405b78:	imul   BYTE PTR [esi+edx*8+0x50229a60]
  405b7f:	ficom  DWORD PTR [eax-0x4b]
  405b82:	std    
  405b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b84:	jb     0x405ba6
  405b86:	loop   0x405b3b
  405b88:	mov    edi,ebp
  405b8a:	mov    WORD PTR [edi],fs
  405b8c:	idiv   ebp
  405b8e:	inc    ebx
  405b8f:	lods   al,BYTE PTR ds:[esi]
  405b90:	rol    DWORD PTR [eax+eax*2+0x51],cl
  405b94:	pushf  
  405b95:	mov    al,ds:0x595faf74
  405b9a:	imul   edi,esi,0x77d915f2
  405ba0:	mov    ah,ah
  405ba2:	push   0x43
  405ba4:	mov    al,0x28
  405ba6:	push   ss
  405ba7:	inc    edi
  405ba8:	and    bh,BYTE PTR [eax-0x37f30034]
  405bae:	dec    edi
  405baf:	repnz mov ds:0x407fe4b5,al
  405bb5:	jl     0x405c33
  405bb7:	(bad)  
  405bb8:	popf   
  405bb9:	pop    ebx
  405bba:	mov    al,ds:0x9a5f1bc1
  405bbf:	repz popf 
  405bc1:	cmp    esi,ecx
  405bc3:	xor    DWORD PTR [ecx],0xffffffad
  405bc6:	push   ebp
  405bc7:	xor    DWORD PTR [ebx+eax*4],ebp
  405bca:	pop    edx
  405bcb:	mov    edi,0x16097735
  405bd0:	or     BYTE PTR [eax*2-0x55daca41],bh
  405bd7:	fdivr  QWORD PTR [eax+0xe31abbc]
  405bdd:	xchg   esi,eax
  405bde:	int    0x6f
  405be0:	imul   ebp,DWORD PTR [ecx],0xffffffdc
  405be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405be4:	enter  0x4fcc,0xc7
  405be8:	scas   al,BYTE PTR es:[edi]
  405be9:	mov    dl,0x3b
  405beb:	mov    ebx,0x255c56e7
  405bf0:	xchg   DWORD PTR [edx+0x78b5ebd1],ebp
  405bf6:	jmp    0x23ecbab0
  405bfb:	lock scas al,BYTE PTR es:[edi]
  405bfd:	or     al,0xa5
  405bff:	or     al,0x7a
  405c01:	fistp  WORD PTR [edi+0x48]
  405c04:	sar    DWORD PTR [edx+0x288555db],0x70
  405c0b:	sbb    bl,BYTE PTR [edx]
  405c0d:	push   ebp
  405c0e:	pop    ebp
  405c0f:	sti    
  405c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c11:	in     eax,0x64
  405c13:	icebp  
  405c14:	push   ebx
  405c15:	mov    ds:0xa946ef03,eax
  405c1a:	inc    edi
  405c1b:	sbb    cl,BYTE PTR [ecx+ebx*4]
  405c1e:	or     eax,0x6bb5480f
  405c23:	jle    0x405c0f
  405c25:	iret   
  405c26:	call   0xc13c:0x57aa1201
  405c2d:	aas    
  405c2e:	pop    ebx
  405c2f:	or     edi,DWORD PTR [edx+ecx*4-0x7f784c30]
  405c36:	or     al,cl
  405c38:	hlt    
  405c39:	fnstsw WORD PTR [ebp+eiz*1+0x18]
  405c3d:	or     eax,0xb0559c92
  405c42:	and    DWORD PTR [eax+ecx*4+0x134734e4],ecx
  405c49:	gs dec esp
  405c4b:	push   eax
  405c4c:	(bad)  
  405c4d:	pop    edi
  405c4e:	jge    0x405bf6
  405c50:	scas   eax,DWORD PTR es:[edi]
  405c51:	dec    eax
  405c52:	and    cl,BYTE PTR [esi-0x1a]
  405c55:	mov    ds:0x9bd69681,eax
  405c5a:	sbb    eax,0x7b1bb2c9
  405c5f:	(bad)  
  405c60:	mov    bh,BYTE PTR ss:[edi+ebx*4+0x48]
  405c65:	lods   al,BYTE PTR ds:[esi]
  405c66:	rcl    DWORD PTR [ebp+0x41],1
  405c69:	cmp    esp,esi
  405c6b:	xchg   esi,esp
  405c6d:	pop    ebp
  405c6e:	call   0xffc5:0x8d0b10a3
  405c75:	ret    
  405c76:	pop    ebp
  405c77:	jns    0x405c5c
  405c79:	mov    ah,0x64
  405c7b:	leave  
  405c7c:	sbb    eax,0x5e939be3
  405c81:	sub    DWORD PTR [edi-0x3514a29c],ebx
  405c87:	mov    al,ds:0x1480a1f7
  405c8c:	pop    esp
  405c8d:	jb     0x405c7c
  405c8f:	out    0xee,al
  405c91:	loope  0x405c88
  405c93:	leave  
  405c94:	jbe    0x405c28
  405c96:	fidivr DWORD PTR [esi]
  405c98:	das    
  405c99:	pop    ss
  405c9a:	xchg   ecx,eax
  405c9b:	les    edx,FWORD PTR [edx-0x39]
  405c9e:	mov    eax,0xbb4dbf7b
  405ca3:	xor    al,0x26
  405ca5:	sbb    dl,cl
  405ca7:	je     0x405c63
  405ca9:	or     DWORD PTR [edi+eiz*8+0x2e],esi
  405cad:	cmp    ax,0xd762
  405cb1:	jp     0x405c46
  405cb3:	pop    es
  405cb4:	pop    ebx
  405cb5:	mov    ecx,0xbc468c8e
  405cba:	sbb    cl,0x29
  405cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cbe:	cwde   
  405cbf:	cs stos BYTE PTR es:[edi],al
  405cc1:	aas    
  405cc2:	fld    QWORD PTR [esi+0x51]
  405cc5:	mov    edx,0x41b41913
  405cca:	pop    ss
  405ccb:	loope  0x405c4d
  405ccd:	xor    eax,0x26aafc94
  405cd2:	cmp    DWORD PTR ds:0x4626c9d1,0x3195cf7f
  405cdc:	push   ebp
  405cdd:	lds    edi,FWORD PTR [ebx]
  405cdf:	ins    DWORD PTR es:[edi],dx
  405ce0:	pop    ds
  405ce1:	dec    edi
  405ce2:	retf   0x76ac
  405ce5:	push   edx
  405ce6:	jge    0x405c95
  405ce8:	imul   esp,edi,0xf8fb56bc
  405cee:	rol    BYTE PTR [eax],0x41
  405cf1:	vsubsd xmm1,xmm3,QWORD PTR ds:0xeb7f29ba
  405cf9:	mov    DWORD PTR cs:[esi+0x4f],edi
  405cfd:	iret   
  405cfe:	add    ecx,0xfe59ec64
  405d04:	push   ebx
  405d05:	stos   DWORD PTR es:[edi],eax
  405d06:	xchg   edi,eax
  405d07:	adc    al,0xa7
  405d09:	xor    esp,ecx
  405d0b:	mov    esp,0xc1cf675b
  405d10:	mov    bh,0x69
  405d12:	jle    0x405ca3
  405d14:	push   esp
  405d15:	sub    eax,0x69e80040
  405d1a:	push   0x9f8942a1
  405d1f:	push   ss
  405d20:	repnz adc ch,BYTE PTR [ebx]
  405d23:	(bad)  
  405d24:	mov    ds:0xb35ce971,al
  405d29:	inc    ebp
  405d2a:	(bad)  
  405d2b:	ins    DWORD PTR es:[edi],dx
  405d2c:	mov    ds:0x38d3dc01,eax
  405d31:	aad    0x24
  405d33:	xchg   ebx,eax
  405d34:	inc    ebx
  405d35:	shl    BYTE PTR es:[esi+ecx*8-0x5f9e6613],1
  405d3d:	lds    ebx,FWORD PTR [bx]
  405d40:	xor    eax,0x983ff2c9
  405d45:	aam    0x2a
  405d47:	pop    ecx
  405d48:	mov    esp,0x72b25b07
  405d4d:	gs ret 0x85c2
  405d51:	daa    
  405d52:	fadd   st,st(7)
  405d54:	out    0x42,eax
  405d56:	outs   dx,DWORD PTR ds:[esi]
  405d57:	adc    DWORD PTR [ebx],edi
  405d59:	ss jnp 0x405d89
  405d5c:	mov    ebx,DWORD PTR [edx-0x12c21923]
  405d62:	(bad)  
  405d63:	sbb    dl,BYTE PTR [ebx]
  405d65:	iret   
  405d66:	retf   
  405d67:	push   ebx
  405d68:	or     esp,DWORD PTR [edx+edi*1]
  405d6b:	adc    al,0x5f
  405d6d:	pop    ss
  405d6e:	jp     0x405d64
  405d70:	inc    edx
  405d71:	or     DWORD PTR [ebp-0x36bba88],0xfa12416d
  405d7b:	adc    esp,DWORD PTR [ecx-0x26]
  405d7e:	pop    ebx
  405d7f:	daa    
  405d80:	xchg   esp,eax
  405d81:	fisttp DWORD PTR [esi+0x374f4222]
  405d87:	xchg   edi,eax
  405d88:	std    
  405d89:	nop
  405d8a:	push   ebx
  405d8b:	xchg   ebp,eax
  405d8c:	jns    0x405d13
  405d8e:	scas   eax,DWORD PTR es:[edi]
  405d8f:	popa   
  405d90:	prefetchw BYTE PTR [ebp-0x56cb71ea]
  405d97:	fld    QWORD PTR [edx]
  405d99:	pop    esi
  405d9a:	jl     0x405db3
  405d9c:	(bad)  
  405d9d:	sub    al,BYTE PTR ds:0x9fa8164f
  405da3:	and    al,0xeb
  405da5:	add    al,0xc5
  405da7:	lea    edx,ds:0x48fd9f15
  405dad:	or     bl,BYTE PTR [ebp+eax*2-0x425e7f89]
  405db4:	pop    edi
  405db5:	push   ecx
  405db6:	(bad)  
  405db8:	shl    BYTE PTR [edx-0x77],cl
  405dbb:	and    eax,0x268dd060
  405dc0:	pop    es
  405dc1:	pop    edi
  405dc2:	xchg   esi,eax
  405dc3:	sbb    al,0x39
  405dc5:	neg    DWORD PTR [ebp+esi*4+0x6e]
  405dc9:	pop    eax
  405dca:	sub    esi,DWORD PTR [eax-0x5c]
  405dcd:	out    0x29,al
  405dcf:	inc    eax
  405dd0:	sub    eax,0x14d17f7c
  405dd5:	cmp    ebp,ecx
  405dd7:	push   eax
  405dd8:	popa   
  405dd9:	cli    
  405dda:	sbb    ch,ah
  405ddc:	xor    cl,bh
  405dde:	jo     0x405e4a
  405de0:	pop    ecx
  405de1:	push   edi
  405de2:	adc    al,BYTE PTR [esi+0x20dd76cd]
  405de8:	mov    ds:0xd24000c,eax
  405ded:	pop    ss
  405dee:	dec    ebx
  405def:	cmp    bh,dh
  405df1:	shl    BYTE PTR [edi+eax*1+0x3],0x48
  405df6:	jb     0x405e4e
  405df8:	lock iret 
  405dfa:	push   esp
  405dfb:	sub    eax,0x73ab3ebd
  405e00:	ins    BYTE PTR es:[edi],dx
  405e01:	pop    edi
  405e02:	aam    0x57
  405e04:	call   0x24c7643d
  405e09:	mov    cl,0x46
  405e0b:	psubusw mm4,QWORD PTR [ecx]
  405e0e:	mov    dl,0xd
  405e10:	in     eax,dx
  405e11:	test   esi,eax
  405e13:	int    0xd7
  405e15:	mov    eax,0x72c15e5a
  405e1a:	int    0xaf
  405e1c:	mov    WORD PTR [ebx+eiz*8],cs
  405e1f:	inc    ebp
  405e20:	add    bl,bh
  405e22:	push   0xffffff80
  405e24:	mov    fs,WORD PTR [ebx]
  405e26:	call   0x144d:0x2154672f
  405e2d:	daa    
  405e2e:	dec    ebx
  405e2f:	sbb    cl,bh
  405e31:	stos   DWORD PTR es:[edi],eax
  405e32:	ins    DWORD PTR es:[edi],dx
  405e33:	loope  0x405e1f
  405e35:	cmp    BYTE PTR [edx],bh
  405e37:	adc    al,BYTE PTR [edi+0x4e432b78]
  405e3d:	add    al,0x85
  405e3f:	nop
  405e40:	and    bl,BYTE PTR [edi+ecx*1]
  405e43:	cs xchg ebp,eax
  405e45:	gs test eax,0xbaeb2dab
  405e4b:	inc    ax
  405e4d:	push   ds
  405e4e:	push   esp
  405e4f:	mov    ch,0x8c
  405e51:	dec    esi
  405e52:	mov    ch,BYTE PTR [esi-0x73]
  405e55:	add    BYTE PTR [ebp*1+0x37242f43],dh
  405e5c:	sbb    BYTE PTR [edi-0x10],dh
  405e5f:	or     ecx,DWORD PTR [ebp-0x2642bdcb]
  405e65:	mov    al,0xe7
  405e67:	mov    WORD PTR [ebp-0x2],?
  405e6a:	push   ebx
  405e6b:	dec    ecx
  405e6c:	into   
  405e6d:	pop    esi
  405e6e:	fldenv [eax-0x19da7ddb]
  405e74:	lds    esi,FWORD PTR [edx]
  405e76:	dec    ebp
  405e77:	cmp    ecx,DWORD PTR [edx+0x4e]
  405e7a:	cmc    
  405e7b:	jae    0x405ede
  405e7d:	add    eax,ecx
  405e7f:	or     cl,BYTE PTR [edx+0x14]
  405e82:	adc    dh,BYTE PTR [esi+0x5b]
  405e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e86:	clc    
  405e87:	lahf   
  405e88:	mov    eax,ds:0x87179e14
  405e8d:	dec    esi
  405e8e:	jbe    0x405e8c
  405e90:	enter  0x34df,0x4
  405e94:	mov    BYTE PTR [edx+0x4],bh
  405e97:	icebp  
  405e98:	lahf   
  405e99:	or     ebx,0x75
  405e9c:	fwait
  405e9d:	push   0x37
  405e9f:	xchg   eax,ebp
  405ea1:	pushw  0x8fbf
  405ea5:	push   esi
  405ea6:	xchg   edx,eax
  405ea7:	test   al,0xb3
  405ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eaa:	mov    edx,0xd63a2ae0
  405eaf:	cmp    DWORD PTR [ebp+0x1b],eax
  405eb2:	mov    esp,0xf94742ea
  405eb7:	add    DWORD PTR [ecx-0x1c],ecx
  405eba:	lods   al,BYTE PTR ds:[esi]
  405ebb:	dec    ebp
  405ebc:	loope  0x405e9e
  405ebe:	pushf  
  405ebf:	pop    esi
  405ec0:	adc    BYTE PTR [esi+0x5f15b099],0x90
  405ec7:	push   ds
  405ec8:	in     al,0xed
  405eca:	pusha  
  405ecb:	lods   eax,DWORD PTR ds:[esi]
  405ecc:	inc    esp
  405ecd:	scas   eax,DWORD PTR es:[edi]
  405ece:	daa    
  405ecf:	and    dh,al
  405ed1:	mov    ds:0x41951749,eax
  405ed6:	gs push esp
  405ed8:	stos   BYTE PTR es:[edi],al
  405ed9:	popa   
  405eda:	or     DWORD PTR [eax-0x47],ebp
  405edd:	sbb    BYTE PTR [eax+0x409c68d1],cl
  405ee3:	js     0x405f1d
  405ee5:	or     eax,0x2d8930a0
  405eea:	adc    al,0x2b
  405eec:	xor    BYTE PTR [edi],ch
  405eee:	aad    0x6d
  405ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ef1:	pop    esp
  405ef2:	std    
  405ef3:	sar    DWORD PTR [eax-0x2e050dc9],0x4c
  405efa:	mov    eax,0xf3076d03
  405eff:	retf   
  405f00:	cmp    eax,0x50f009b4
  405f05:	mov    eax,0xe73f4e3a
  405f0a:	retf   
  405f0b:	and    dh,al
  405f0d:	movsx  edi,BYTE PTR [ecx+eiz*2+0x5f]
  405f12:	loopne 0x405f09
  405f14:	mov    BYTE PTR [ebx+esi*2],ah
  405f17:	in     eax,dx
  405f18:	fucomp st(3)
  405f1a:	loope  0x405edc
  405f1c:	rep stos DWORD PTR es:[edi],eax
  405f1e:	dec    edx
  405f1f:	jmp    0x9db01741
  405f24:	repz pop ebp
  405f26:	sahf   
  405f27:	mov    dh,0x65
  405f29:	jns    0x405f5e
  405f2b:	and    ch,bh
  405f2d:	test   eax,0x4a1fb6ed
  405f32:	pop    ebx
  405f33:	or     bh,dh
  405f35:	clc    
  405f36:	sahf   
  405f37:	std    
  405f38:	mov    bl,0x67
  405f3a:	mov    ah,0xca
  405f3c:	ret    
  405f3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f3e:	and    edi,DWORD PTR ss:[ecx*1-0xfe95851]
  405f46:	push   ecx
  405f47:	pop    ss
  405f48:	xchg   dl,ch
  405f4a:	add    al,0xeb
  405f4c:	sti    
  405f4d:	stc    
  405f4e:	jae    0x405f06
  405f50:	jl     0x405f9b
  405f52:	adc    DWORD PTR [edx+0x3e71f2a],eax
  405f58:	dec    ebx
  405f59:	pop    ebx
  405f5a:	fsub   QWORD PTR ds:0xd4c0ad2f
  405f60:	mov    ebx,0xca90d4c
  405f65:	pcmpgtd mm7,QWORD PTR [edi+0x8]
  405f69:	add    esp,DWORD PTR ds:0xee654e52
  405f6f:	lods   al,BYTE PTR ds:[esi]
  405f70:	inc    eax
  405f71:	add    eax,0x673bdff9
  405f76:	mov    ch,BYTE PTR [edi+esi*1-0xc]
  405f7a:	shl    BYTE PTR [edi-0x3a],1
  405f7d:	test   eax,0xf7299f94
  405f82:	outs   dx,BYTE PTR ds:[esi]
  405f83:	retf   0x9a
  405f86:	ffreep st(2)
  405f88:	mov    dl,BYTE PTR [ecx]
  405f8a:	add    edi,ebp
  405f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f8d:	fwait
  405f8e:	in     eax,0x76
  405f90:	and    eax,0xaa3073e
  405f95:	aaa    
  405f96:	mov    edx,0x13e2ae7
  405f9b:	popa   
  405f9c:	mov    ds:0x4b2500ec,eax
  405fa1:	xor    eax,0xe6c604e3
  405fa6:	lea    esi,[ecx+0x7]
  405fa9:	dec    esi
  405faa:	(bad)  
  405fab:	cli    
  405fac:	sub    BYTE PTR [edx],bl
  405fae:	mov    ds:0x5a2cfe40,eax
  405fb3:	xchg   esi,eax
  405fb4:	adc    al,0xab
  405fb6:	aad    0x2b
  405fb8:	jb     0x405fc8
  405fba:	push   ecx
  405fbb:	mov    ds:0xefe907c2,eax
  405fc0:	mov    eax,ds:0xcf4c25b4
  405fc5:	inc    esi
  405fc6:	adc    eax,0xa1e6635
  405fcb:	dec    edi
  405fcc:	ja     0x405fa8
  405fce:	nop
  405fcf:	cmp    al,0x56
  405fd1:	sub    DWORD PTR [esi-0x6bddfd40],ebp
  405fd7:	test   BYTE PTR [ebx],dl
  405fd9:	mov    ds:0x30bf3904,eax
  405fde:	mov    ebp,ebp
  405fe0:	pop    ebx
  405fe1:	add    al,0x88
  405fe3:	pop    es
  405fe4:	pushf  
  405fe5:	and    dl,bl
  405fe7:	ret    0x7163
  405fea:	add    DWORD PTR [ecx],eax
  405fec:	or     DWORD PTR [eax],0x38
  405fef:	in     al,dx
  405ff0:	xchg   esp,eax
  405ff1:	ss aas 
  405ff3:	icebp  
  405ff4:	sti    
  405ff5:	shr    BYTE PTR [ebx+0x5b],0x1
  405ff9:	mov    dl,0x7
  405ffb:	in     al,dx
  405ffc:	into   
  405ffd:	out    0x28,al
  405fff:	mov    esi,DWORD PTR [eax+0x30df8ca2]
  406005:	and    BYTE PTR [ebp+edi*4-0x2eb2d4a3],al
  40600c:	mov    ds:0x93357d78,al
  406011:	test   BYTE PTR [bx+0x2f],dl
  406015:	xor    esp,esi
  406017:	mov    ebx,0x7b2af582
  40601c:	dec    edx
  40601d:	fimul  DWORD PTR [eax-0x675413b7]
  406023:	loopne 0x40608b
  406025:	aaa    
  406026:	jmp    0x2f64639e
  40602b:	add    BYTE PTR [ecx-0x4e],dh
  40602e:	xchg   ecx,eax
  40602f:	cmc    
  406030:	sar    bh,cl
  406032:	inc    esp
  406033:	push   es
  406034:	and    eax,0x77ef2980
  406039:	jb     0x406047
  40603b:	adc    al,0x5
  40603d:	push   esi
  40603e:	lea    edi,[ecx]
  406040:	test   eax,0x5354316
  406045:	push   ebx
  406046:	push   ds
  406047:	cmp    esp,edi
  406049:	dec    ecx
  40604a:	popa   
  40604b:	dec    edi
  40604c:	dec    eax
  40604d:	retf   0x693f
  406050:	pusha  
  406051:	ss scas al,BYTE PTR es:[edi]
  406053:	push   es
  406054:	push   eax
  406055:	jmp    0x8b736633
  40605a:	jbe    0x405fee
  40605c:	in     al,dx
  40605d:	inc    edx
  40605e:	stos   BYTE PTR es:[edi],al
  40605f:	ret    0x6337
  406062:	fdivr  QWORD PTR [edi-0x2cd50b81]
  406068:	out    0xec,al
  40606a:	mov    bh,0xb2
  40606c:	jmp    0x406027
  40606e:	inc    BYTE PTR [ebp+edx*4-0x65]
  406072:	scas   eax,DWORD PTR es:[edi]
  406073:	lds    esp,FWORD PTR [ebx+edi*2]
  406076:	fstp   st(6)
  406078:	xchg   ebp,eax
  406079:	fld    DWORD PTR [ebx+edi*2-0x4e]
  40607d:	cmp    ecx,DWORD PTR [eax+0x590ce97a]
  406083:	and    ecx,ecx
  406085:	fisub  WORD PTR [eax]
  406087:	xchg   bl,bh
  406089:	mov    dl,0xbf
  40608b:	jae    0x406092
  40608d:	int3   
  40608e:	mov    dl,0xe
  406090:	rol    ebx,1
  406092:	pushf  
  406093:	inc    ecx
  406094:	adc    al,BYTE PTR [ebp-0x3]
  406097:	scas   al,BYTE PTR es:[edi]
  406098:	cld    
  406099:	xlat   BYTE PTR ds:[ebx]
  40609a:	(bad)  
  40609b:	xor    DWORD PTR [edx-0xfd74b55],0x49354174
  4060a5:	in     eax,dx
  4060a6:	repnz pop esp
  4060a8:	jne    0x40606e
  4060aa:	out    dx,al
  4060ab:	push   0x51
  4060ad:	adc    al,BYTE PTR cs:[edx+0x50]
  4060b1:	fcmovbe st,st(5)
  4060b3:	imul   edi,DWORD PTR [ebx],0xc2085dc9
  4060b9:	push   ebx
  4060ba:	mov    cl,0x7b
  4060bc:	mov    BYTE PTR [ebp-0x1f],dl
  4060bf:	fcom   QWORD PTR ss:[ebp+0xa]
  4060c3:	mov    edx,0x40e30cc2
  4060c8:	push   es
  4060c9:	sub    DWORD PTR [eax],ebx
  4060cb:	ret    0xdf3d
  4060ce:	rol    BYTE PTR [edx+0x24],0x21
  4060d2:	fld    DWORD PTR ds:0xd39049f0
  4060d8:	popa   
  4060d9:	cs mov cs,ebp
  4060dc:	cmp    al,0x2c
  4060de:	mov    esi,0x15b4b5c5
  4060e3:	push   ecx
  4060e4:	mov    bh,0x50
  4060e6:	std    
  4060e7:	jmp    0x40610e
  4060e9:	mul    DWORD PTR [eax-0x3c]
  4060ec:	lods   eax,DWORD PTR ds:[esi]
  4060ed:	retf   
  4060ee:	hlt    
  4060ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060f0:	and    DWORD PTR [ecx],ecx
  4060f2:	je     0x40613d
  4060f4:	mov    esi,0x829b469d
  4060f9:	dec    esi
  4060fa:	enter  0x707c,0x31
  4060fe:	jmp    0xf1802ee1
  406103:	ret    
  406104:	pop    edx
  406105:	sub    ebp,DWORD PTR [eax+0x2e]
  406108:	and    ah,BYTE PTR [ecx]
  40610a:	mov    ?,WORD PTR [ebx-0x41]
  40610d:	and    DWORD PTR [eax+0x7b8fe5f7],ebp
  406113:	loopne 0x4060d2
  406115:	imul   ecx,DWORD PTR [esi],0x85ae6c95
  40611b:	pop    ss
  40611c:	sar    DWORD PTR [ecx],cl
  40611e:	js     0x40612f
  406120:	and    ebx,edi
  406122:	dec    eax
  406123:	loop   0x4060c8
  406125:	add    dh,al
  406127:	bound  edx,QWORD PTR [ebx+0x8e6da3a]
  40612d:	rol    DWORD PTR [eax-0x47],1
  406130:	outs   dx,BYTE PTR ds:[esi]
  406131:	mov    al,ds:0xd6a6e7f3
  406136:	out    0xe7,eax
  406138:	in     al,dx
  406139:	aam    0xfe
  40613b:	popa   
  40613c:	inc    ebx
  40613d:	sti    
  40613e:	je     0x4061a6
  406140:	mov    eax,ds:0x7412d6fc
  406145:	mov    bl,0x73
  406147:	dec    edx
  406148:	mov    ebx,0xfed86037
  40614d:	test   al,0xa2
  40614f:	push   esi
  406150:	stos   BYTE PTR es:[edi],al
  406151:	xor    eax,0x8706d4d6
  406156:	sti    
  406157:	push   0x48ef70a9
  40615c:	test   eax,0xde8deb6d
  406161:	pop    di
  406163:	xor    BYTE PTR ds:0x362a715e,bh
  406169:	loope  0x40611d
  40616b:	add    esi,DWORD PTR [edi-0x79f68ef0]
  406171:	and    ebx,DWORD PTR [ebx]
  406173:	call   0x555f:0xc99a8d2
  40617a:	and    al,0x8f
  40617c:	(bad)  
  40617d:	fst    QWORD PTR [ebx]
  40617f:	mov    esi,DWORD PTR [edi+0x38f5f447]
  406185:	hlt    
  406186:	and    cl,cl
  406188:	(bad)  
  406189:	dec    edi
  40618a:	mov    ah,0xae
  40618c:	or     eax,0x23e7dae5
  406191:	mov    ah,0x2a
  406193:	dec    edx
  406194:	sub    BYTE PTR [edx],ch
  406196:	loope  0x40612f
  406198:	stos   DWORD PTR es:[edi],eax
  406199:	jns    0x406193
  40619b:	repnz sub BYTE PTR ds:[ecx],ch
  40619f:	jne    0x406146
  4061a1:	push   esi
  4061a2:	(bad)  
  4061a3:	sbb    eax,0x87cdf7fe
  4061a8:	xchg   esi,eax
  4061a9:	sti    
  4061aa:	mov    BYTE PTR [edx],0x60
  4061ad:	repnz scas eax,DWORD PTR es:[edi]
  4061af:	ins    DWORD PTR es:[edi],dx
  4061b0:	mov    esi,0xd58d28ad
  4061b5:	mov    ecx,0x9deb4687
  4061ba:	inc    edx
  4061bb:	mov    bh,0x11
  4061bd:	pushf  
  4061be:	inc    ebp
  4061bf:	dec    eax
  4061c0:	cmp    cl,BYTE PTR [ebx+edi*8]
  4061c3:	shl    dh,0xad
  4061c6:	add    ch,BYTE PTR [eax-0x6d]
  4061c9:	sbb    DWORD PTR [ebx],0x73
  4061cc:	rol    ebx,0xee
  4061cf:	and    DWORD PTR [ecx-0x79],0x8b9eee7
  4061d6:	jl     0x4061b9
  4061d8:	jecxz  0x406172
  4061da:	outs   dx,BYTE PTR es:[esi]
  4061dc:	push   edx
  4061dd:	test   al,0x82
  4061df:	ins    BYTE PTR es:[edi],dx
  4061e0:	in     eax,dx
  4061e1:	and    ah,ah
  4061e3:	cmp    eax,edx
  4061e5:	add    ebp,DWORD PTR [edi-0x78]
  4061e8:	adc    DWORD PTR [ecx+ecx*1+0x5],ecx
  4061ec:	and    bh,bh
  4061ee:	stc    
  4061ef:	ins    DWORD PTR es:[edi],dx
  4061f0:	jmp    0xa7cbfd07
  4061f5:	xchg   edx,eax
  4061f6:	scas   al,BYTE PTR es:[edi]
  4061f7:	dec    ecx
  4061f8:	fnstsw WORD PTR [ebx]
  4061fa:	dec    esi
  4061fb:	adc    esp,DWORD PTR [esi+0x68]
  4061fe:	test   eax,ebx
  406200:	call   0x2474:0x388a7043
  406207:	jle    0x406255
  406209:	mov    bl,0x9f
  40620b:	and    eax,0xbb5ea775
  406210:	cli    
  406211:	fcmovbe st,st(1)
  406213:	jmp    0x49024ea9
  406218:	mov    ecx,0x35a5f6c6
  40621d:	loope  0x406214
  40621f:	out    dx,eax
  406220:	loope  0x40621e
  406222:	(bad)  
  406223:	mov    bl,0xdd
  406225:	ins    DWORD PTR es:[edi],dx
  406226:	sbb    DWORD PTR ds:0x22bd0b6,ecx
  40622c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40622d:	mov    ds:0x32724ada,al
  406232:	hlt    
  406233:	adc    edi,DWORD PTR ds:0x87e72b21
  406239:	out    0x95,al
  40623b:	push   cs
  40623c:	push   0xffffffc1
  40623e:	jb     0x40625d
  406240:	jbe    0x406262
  406242:	cs mov esi,0x7fda9de
  406248:	cmc    
  406249:	cli    
  40624a:	loope  0x406234
  40624c:	mov    edx,0x106d1348
  406251:	in     al,0x3a
  406253:	jnp    0x4062cb
  406255:	stos   DWORD PTR es:[edi],eax
  406256:	or     esp,DWORD PTR [ebx+0x9]
  406259:	jmp    0x5677:0xfb0e0fa9
  406260:	loope  0x4062a9
  406262:	pop    eax
  406263:	cmp    al,0xc6
  406265:	shl    BYTE PTR [ebx+0xc],0x5f
  406269:	add    eax,0x6e2ebf51
  40626e:	sbb    al,0xc9
  406270:	fwait
  406271:	(bad)  
  406272:	mov    ah,0x31
  406274:	call   0xe60279bd
  406279:	pop    ecx
  40627b:	dec    eax
  40627c:	mov    BYTE PTR [ecx-0x488ac1b6],dl
  406282:	add    al,0x90
  406284:	add    al,0x4f
  406286:	cld    
  406287:	aam    0x3
  406289:	sub    al,BYTE PTR [edi]
  40628b:	or     bl,BYTE PTR [esi]
  40628d:	xor    dh,cl
  40628f:	dec    ebx
  406290:	imul   ebp,DWORD PTR [eax+0x0],0xb8d62733
  406297:	add    eax,eax
  406299:	mov    cl,0xe2
  40629b:	test   BYTE PTR [ebx-0x25],bl
  40629e:	aad    0x76
  4062a0:	push   edi
  4062a1:	or     ebx,DWORD PTR [ecx-0x1d626465]
  4062a7:	adc    al,0x97
  4062a9:	(bad)  
  4062aa:	popa   
  4062ab:	pop    ebp
  4062ac:	shr    BYTE PTR [esi-0x46],1
  4062af:	ins    BYTE PTR es:[edi],dx
  4062b0:	cmp    cl,cl
  4062b2:	xor    eax,0xf57f8761
  4062b7:	in     al,0x5
  4062b9:	ins    BYTE PTR es:[edi],dx
  4062ba:	pop    esi
  4062bb:	js     0x4062cc
  4062bd:	or     BYTE PTR [edx+0x2916932e],dh
  4062c3:	stos   DWORD PTR es:[edi],eax
  4062c4:	lods   al,BYTE PTR ds:[esi]
  4062c5:	cmp    ebp,ebx
  4062c7:	or     DWORD PTR [esi],ebx
  4062c9:	mov    WORD PTR [ebx],?
  4062cb:	ins    DWORD PTR es:[edi],dx
  4062cc:	out    0x31,eax
  4062ce:	jbe    0x406279
  4062d0:	push   ebp
  4062d1:	adc    eax,0xfae5911d
  4062d6:	mov    ?,ebp
  4062d8:	retf   0x7fce
  4062db:	cmp    dl,BYTE PTR [edi-0x54]
  4062de:	jle    0x40631b
  4062e0:	xor    BYTE PTR [ebx],cl
  4062e2:	jge    0x40631a
  4062e4:	mov    ch,0xc8
  4062e6:	sbb    DWORD PTR [edx],edi
  4062e8:	cli    
  4062e9:	cwde   
  4062ea:	not    BYTE PTR [edx]
  4062ec:	add    al,0x2c
  4062ee:	sub    al,0xc7
  4062f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062f1:	mov    bh,0x84
  4062f3:	ds mov cl,0x94
  4062f6:	or     eax,0x92aec65b
  4062fb:	or     BYTE PTR [ebx+0x5c768ce9],bl
  406301:	loope  0x406350
  406303:	in     al,dx
  406304:	lahf   
  406305:	inc    edi
  406306:	pusha  
  406307:	mov    ebp,eax
  406309:	cmp    eax,0x3a27f2c3
  40630e:	addr16 cli 
  406310:	imul   edx,DWORD PTR [ebp-0x4c],0x864d9f8a
  406317:	cdq    
  406318:	shl    DWORD PTR [ebp+0x6e6af30c],1
  40631e:	cli    
  40631f:	mov    WORD PTR [ecx],cs
  406321:	ret    
  406322:	add    bh,ah
  406324:	stc    
  406325:	fcomp  DWORD PTR [ebp+0x22dcef2c]
  40632b:	aam    0xb0
  40632d:	jge    0x4063aa
  40632f:	aad    0x6b
  406331:	jae    0x406378
  406333:	dec    ecx
  406334:	test   bl,ch
  406336:	mov    eax,ds:0x67885854
  40633b:	adc    DWORD PTR [esi+0x6fd74000],ebp
  406341:	add    DWORD PTR [edx-0x3c],0x91557e7
  406348:	jle    0x40634d
  40634a:	xlat   BYTE PTR ds:[ebx]
  40634b:	push   cs
  40634c:	fcom   QWORD PTR [edx]
  40634e:	add    BYTE PTR [eax+0x4f],0xf3
  406352:	mov    al,ds:0xe0ee2d29
  406357:	or     esp,ebp
  406359:	les    esp,FWORD PTR [ecx+0x1e35b58b]
  40635f:	rcr    BYTE PTR [edx-0x1a],1
  406362:	rcl    DWORD PTR ds:0xb25e4f52,0xf3
  406369:	leave  
  40636a:	sbb    eax,0x60dc15f5
  40636f:	xchg   DWORD PTR [edi+0x2d],edi
  406372:	jo     0x4062f6
  406374:	lahf   
  406375:	dec    ecx
  406376:	sbb    DWORD PTR [ecx-0x5f],edi
  406379:	(bad)  
  40637a:	jne    0x40633a
  40637c:	inc    ecx
  40637d:	test   eax,0xbed2a0c3
  406382:	sbb    eax,0x15b73cc0
  406387:	mov    edx,ebp
  406389:	add    dl,dl
  40638b:	call   DWORD PTR [edi+0x7ab2bee8]
  406391:	adc    BYTE PTR [esi+edx*4+0x7b],ch
  406395:	jnp    0x4063b3
  406397:	pop    ecx
  406398:	inc    esp
  406399:	std    
  40639a:	loop   0x406381
  40639c:	and    DWORD PTR [edi+eax*8-0x78],0xffffffc7
  4063a1:	gs call 0x81496bc3
  4063a7:	dec    edi
  4063a8:	mov    ch,0x57
  4063aa:	push   0x9
  4063ac:	jecxz  0x406334
  4063ae:	pop    ebx
  4063af:	push   ss
  4063b0:	adc    eax,0xd2dcf7e5
  4063b5:	(bad)  
  4063b6:	push   ebx
  4063b7:	jnp    0x4063ac
  4063b9:	jae    0x406413
  4063bb:	fild   WORD PTR [ebx]
  4063bd:	popa   
  4063be:	fs nop
  4063c0:	arpl   WORD PTR [ebx],dx
  4063c2:	pop    eax
  4063c3:	mov    al,BYTE PTR [esi+0xf]
  4063c6:	nop
  4063c7:	jg     0x40634b
  4063c9:	sbb    eax,0x4849bc44
  4063ce:	mov    edx,DWORD PTR es:[esi]
  4063d1:	retf   0x8dee
  4063d4:	js     0x4063b0
  4063d6:	adc    al,0x33
  4063d8:	shl    DWORD PTR [ebp-0x1600f543],cl
  4063de:	into   
  4063df:	(bad)
  4063e2:	cmc    
  4063e3:	mov    edi,0x5cd3e250
  4063e8:	(bad)
  4063ec:	push   esi
  4063ed:	push   ecx
  4063ee:	arpl   WORD PTR [edi],sp
  4063f0:	ins    DWORD PTR es:[edi],dx
  4063f1:	cmp    al,0x9b
  4063f3:	ret    0xdf47
  4063f6:	xor    BYTE PTR [edx-0x33],ah
  4063f9:	pop    ds
  4063fa:	imul   esp,DWORD PTR ss:[esi],0xffffffde
  4063fe:	add    al,0x84
  406400:	mov    ds:0x8be8d6ba,al
  406405:	(bad)  
  406406:	rol    BYTE PTR [eax],1
  406408:	outs   dx,BYTE PTR ds:[esi]
  406409:	outs   dx,BYTE PTR ds:[esi]
  40640a:	pop    ecx
  40640b:	lods   al,BYTE PTR ds:[esi]
  40640c:	dec    DWORD PTR [esi-0x12c97788]
  406412:	mov    dh,0xc4
  406414:	mov    esp,0x5a17883
  406419:	retf   0xa06f
  40641c:	pop    ss
  40641d:	jp     0x406479
  40641f:	cwde   
  406420:	imul   edx,DWORD PTR [ebx-0xc],0xffffffe3
  406424:	add    eax,0xaaea3482
  406429:	addr16 stc 
  40642b:	and    ah,BYTE PTR [ecx]
  40642d:	add    al,0x75
  40642f:	push   edi
  406430:	jge    0x4063d0
  406432:	inc    edx
  406433:	clc    
  406434:	jge    0x406442
  406436:	mov    BYTE PTR [ecx],bl
  406438:	inc    eax
  406439:	pop    es
  40643a:	lock xor DWORD PTR [eax+ebp*8+0x43c4dafd],eax
  406442:	ins    BYTE PTR es:[edi],dx
  406443:	sti    
  406444:	out    0xb8,eax
  406446:	push   esi
  406447:	lods   eax,DWORD PTR ds:[esi]
  406448:	inc    ebx
  406449:	test   DWORD PTR [eax],ecx
  40644b:	stos   BYTE PTR es:[edi],al
  40644c:	dec    BYTE PTR [edi]
  40644e:	push   cs
  40644f:	push   ebx
  406450:	push   edi
  406451:	leave  
  406452:	adc    al,dh
  406454:	sub    bh,dh
  406456:	push   esi
  406457:	jmp    DWORD PTR [ebx]
  406459:	adc    bh,BYTE PTR [eax-0x10]
  40645c:	repnz fcmovne st,st(5)
  40645f:	adc    al,BYTE PTR [edx+edx*4-0x755827b]
  406466:	jl     0x406436
  406468:	sbb    al,BYTE PTR [ebp+0x143bb80a]
  40646e:	add    eax,DWORD PTR [edi]
  406470:	sub    ah,BYTE PTR [ecx]
  406472:	dec    ebp
  406473:	(bad)  
  406474:	inc    esp
  406475:	stos   DWORD PTR es:[edi],eax
  406476:	sub    edx,eax
  406478:	mov    eax,ds:0xa057f044
  40647d:	push   es
  40647e:	xchg   BYTE PTR [ecx+0x39],ch
  406481:	iret   
  406482:	xor    DWORD PTR [ebx+ebp*4-0x2a],ebx
  406486:	push   eax
  406487:	and    ebx,DWORD PTR [ebp+0x73]
  40648a:	jmp    0xed4c:0xac8dd0ff
  406491:	pop    ecx
  406492:	popf   
  406493:	aas    
  406494:	jp     0x40642c
  406496:	sub    BYTE PTR [ebx-0x18c79136],0xdf
  40649d:	in     eax,0x42
  40649f:	sub    al,0x6b
  4064a1:	and    cl,BYTE PTR [ecx-0x57]
  4064a4:	test   eax,0xfe81538c
  4064a9:	sbb    DWORD PTR [ebp+ebp*1+0x21],eax
  4064ad:	aam    0x9
  4064af:	adc    ch,dh
  4064b1:	add    al,0xc4
  4064b3:	popa   
  4064b4:	lods   al,BYTE PTR ds:[esi]
  4064b5:	rol    BYTE PTR [ecx-0x1b028f2d],cl
  4064bb:	(bad)  
  4064bc:	fsub   DWORD PTR [ebx-0xfc68b5f]
  4064c2:	sub    eax,DWORD PTR [edx+ebx*2+0x184e3d36]
  4064c9:	das    
  4064ca:	lds    eax,FWORD PTR [edi+0x694a0b67]
  4064d0:	adc    BYTE PTR [edx+0x58],bl
  4064d3:	mov    dh,0xd
  4064d5:	shl    DWORD PTR [edx-0x24],1
  4064d8:	push   esp
  4064d9:	div    ecx
  4064db:	mov    ch,0xfc
  4064dd:	out    dx,al
  4064de:	inc    ecx
  4064df:	xlat   BYTE PTR ds:[ebx]
  4064e0:	add    dl,0x16
  4064e3:	stos   BYTE PTR es:[edi],al
  4064e4:	sub    BYTE PTR [eax-0x48618458],al
  4064ea:	lock (bad) 
  4064ed:	arpl   bp,bx
  4064ef:	addr16 data16 mov ds:0x3625,al
  4064f4:	fimul  WORD PTR [esp+ecx*4-0x38]
  4064f8:	aam    0x6a
  4064fa:	pop    es
  4064fb:	test   BYTE PTR [edi-0x3db5c33],ah
  406501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406502:	mov    cl,0xf6
  406504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406505:	add    BYTE PTR [ecx],bh
  406507:	sti    
  406508:	adc    esp,ebp
  40650a:	cdq    
  40650b:	push   esi
  40650c:	mov    BYTE PTR [edx],ch
  40650e:	retf   0x6b23
  406511:	pop    ds
  406512:	mov    dl,BYTE PTR [ebx]
  406514:	aaa    
  406515:	inc    edx
  406516:	sub    BYTE PTR [ecx+0x5746d4ec],0x43
  40651d:	aaa    
  40651e:	test   eax,0x1bf4cdfd
  406523:	inc    ecx
  406524:	pop    edx
  406525:	add    BYTE PTR [ebp-0x80],cl
  406528:	ss out 0xf6,al
  40652b:	test   DWORD PTR [eax-0x6],0x25732e0d
  406532:	add    edi,DWORD PTR [eax+ebx*4]
  406535:	mov    ah,0xc8
  406537:	pop    ebp
  406538:	jb     0x406535
  40653a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40653b:	xchg   edi,eax
  40653c:	xchg   ebx,eax
  40653d:	pop    es
  40653e:	outs   dx,DWORD PTR ds:[esi]
  40653f:	sbb    al,0x8d
  406541:	push   ebx
  406542:	clc    
  406543:	sbb    DWORD PTR [ecx],esi
  406545:	pop    eax
  406546:	ret    
  406547:	push   esp
  406548:	mov    cl,0xb8
  40654a:	outs   dx,DWORD PTR ds:[esi]
  40654b:	mov    eax,ds:0x5397365c
  406550:	fisttp WORD PTR [esi-0xa51a604]
  406556:	cmp    DWORD PTR [ebp-0x19743c9a],esp
  40655c:	(bad)  
  40655d:	pop    edi
  40655e:	bound  ecx,QWORD PTR [edi]
  406560:	stc    
  406561:	mov    ecx,0xa39f09e1
  406566:	xor    DWORD PTR [edx+0x5147a6eb],ecx
  40656c:	dec    edx
  40656d:	loopne 0x40657c
  40656f:	pop    ebp
  406570:	push   edx
  406571:	push   0x4d
  406573:	push   cs
  406574:	pop    eax
  406575:	push   eax
  406576:	inc    edi
  406577:	pop    eax
  406578:	outs   dx,DWORD PTR ds:[esi]
  406579:	mov    cl,0x44
  40657b:	ins    DWORD PTR es:[edi],dx
  40657c:	pop    es
  40657d:	lods   eax,DWORD PTR ds:[esi]
  40657e:	les    eax,FWORD PTR [edx-0x7232234a]
  406584:	imul   edi,DWORD PTR [edx],0x43
  406587:	scas   eax,DWORD PTR es:[edi]
  406588:	pushf  
  406589:	lods   eax,DWORD PTR ds:[esi]
  40658a:	xor    edx,ecx
  40658c:	aam    0xef
  40658e:	sti    
  40658f:	mov    edx,0x3267bc03
  406594:	scas   al,BYTE PTR es:[edi]
  406595:	call   0x3670c53e
  40659a:	add    ch,BYTE PTR [ebp-0x7670e138]
  4065a0:	int3   
  4065a1:	dec    edx
  4065a2:	xor    eax,0x564e4c96
  4065a7:	das    
  4065a8:	ds pop esp
  4065aa:	das    
  4065ab:	sub    al,BYTE PTR [eax+0x212471c4]
  4065b1:	cdq    
  4065b2:	gs dec edi
  4065b4:	jle    0x4065bc
  4065b6:	jb     0x4065a6
  4065b8:	fisub  WORD PTR [edi-0x1c]
  4065bb:	inc    esi
  4065bc:	xchg   ebx,eax
  4065bd:	aam    0x6a
  4065bf:	pop    edi
  4065c0:	adc    al,ch
  4065c2:	mov    ds:0x3f21399c,al
  4065c7:	mov    dh,0x1a
  4065c9:	inc    ebx
  4065ca:	sbb    esp,DWORD PTR [edx]
  4065cc:	xchg   edx,eax
  4065cd:	cli    
  4065ce:	push   esp
  4065cf:	push   cs
  4065d0:	loop   0x40661f
  4065d2:	and    al,0x59
  4065d4:	outs   dx,DWORD PTR ds:[esi]
  4065d5:	call   0xfd692984
  4065da:	out    0x43,al
  4065dc:	mov    bl,0x9d
  4065de:	leave  
  4065df:	sahf   
  4065e0:	jo     0x4065a2
  4065e2:	ins    DWORD PTR es:[edi],dx
  4065e3:	push   ds
  4065e4:	push   0xc6cc62d6
  4065e9:	sbb    eax,0x690b1a9c
  4065ee:	fmul   QWORD PTR [edi-0x2c340a7]
  4065f4:	jae    0x406623
  4065f6:	aas    
  4065f7:	clc    
  4065f8:	in     al,dx
  4065f9:	or     eax,0x6b58517d
  4065fe:	or     eax,DWORD PTR [ebp-0x39169af8]
  406604:	out    0x56,eax
  406606:	out    dx,al
  406607:	jmp    0xc60bcf3d
  40660c:	add    ebx,DWORD PTR [ebx-0x2a5d72d9]
  406612:	test   eax,0x30370762
  406617:	push   ebx
  406618:	or     eax,0x91e4d663
  40661d:	jne    0x40660c
  40661f:	mov    ds:0x588b9189,eax
  406624:	xchg   edi,eax
  406625:	cwde   
  406626:	rcr    DWORD PTR [ecx+0x75],cl
  406629:	add    ch,bh
  40662b:	adc    DWORD PTR [ecx-0x267f5840],ecx
  406631:	(bad)  
  406632:	frstor [eax+0x1576a1f3]
  406638:	aam    0xe5
  40663a:	mov    dl,0xbb
  40663c:	jmp    0xf7d7:0x416a256c
  406643:	or     BYTE PTR [eax+esi*1],bh
  406646:	iret   
  406647:	pop    eax
  406648:	(bad)  
  406649:	setno  BYTE PTR [eax]
  40664c:	xor    BYTE PTR ds:0x74a112f6,ah
  406652:	push   ebp
  406653:	in     al,0x4d
  406655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406656:	mov    cl,0xe5
  406658:	adc    ebx,esi
  40665a:	jae    0x4066bc
  40665c:	out    0xb1,eax
  40665e:	ret    0xf294
  406661:	xor    al,0xc4
  406663:	test   eax,0x71dc2e42
  406668:	cmp    al,0x5f
  40666a:	sbb    esi,ebp
  40666c:	sub    dl,BYTE PTR [edi+0xe]
  40666f:	xchg   ecx,eax
  406670:	sub    BYTE PTR [ecx],al
  406672:	dec    edi
  406673:	dec    eax
  406674:	adc    eax,DWORD PTR [ecx-0x7c]
  406677:	mov    ecx,0x1e8ad4e3
  40667c:	push   0xde11080b
  406681:	in     al,0x35
  406683:	lods   eax,DWORD PTR ds:[esi]
  406684:	push   ebx
  406685:	(bad)  
  406687:	ja     0x40661d
  406689:	cli    
  40668a:	pusha  
  40668b:	jb     0x4066e6
  40668d:	fs mov bl,0x9a
  406690:	pushf  
  406691:	jo     0x4066ea
  406693:	jp     0x4066b5
  406695:	push   ds
  406696:	(bad)  
  406697:	mov    ds:0xe4ed061f,eax
  40669c:	adc    ah,al
  40669e:	sub    al,0x7d
  4066a0:	and    DWORD PTR [ebp+0x2cac84b8],ebx
  4066a6:	dec    ebp
  4066a7:	lods   al,BYTE PTR ds:[esi]
  4066a8:	fistp  WORD PTR [esi+ebx*4]
  4066ab:	dec    ebp
  4066ac:	push   edx
  4066ad:	sbb    eax,0x846624ef
  4066b2:	inc    ebp
  4066b3:	add    bh,BYTE PTR [ebp+0x5c]
  4066b6:	cli    
  4066b7:	xor    bl,BYTE PTR [edx]
  4066b9:	(bad)  
  4066ba:	into   
  4066bb:	jne    0x406668
  4066bd:	pusha  
  4066be:	(bad)  
  4066bf:	mov    esi,DWORD PTR [ebp+0x4af0c48b]
  4066c5:	jb     0x4066ba
  4066c7:	sbb    dl,BYTE PTR [ebp+ebx*8-0xd]
  4066cb:	pop    esp
  4066cc:	push   0xd50ead9e
  4066d1:	mov    ecx,0xd7a5f9c2
  4066d6:	push   edi
  4066d7:	jecxz  0x4066fc
  4066d9:	jbe    0x406665
  4066db:	mov    eax,ds:0x2c29a0be
  4066e0:	sbb    BYTE PTR [edx+eiz*2+0x5205463e],ch
  4066e7:	xchg   ebp,eax
  4066e8:	daa    
  4066e9:	mov    esi,0xef1369da
  4066ee:	dec    edi
  4066ef:	xchg   esi,eax
  4066f0:	imul   ebp,DWORD PTR [edi-0x346c8f3b],0xffffff80
  4066f7:	jle    0x406761
  4066f9:	shr    DWORD PTR [ecx+eiz*1-0x3e749dc3],1
  406700:	adc    ebx,DWORD PTR [ebx]
  406702:	mov    esi,0x9e9d3589
  406707:	add    esp,DWORD PTR [esi]
  406709:	cli    
  40670a:	icebp  
  40670b:	and    al,0xe8
  40670d:	test   eax,0xf6113460
  406712:	add    dh,0x72
  406715:	hlt    
  406716:	nop
  406717:	retf   0xce40
  40671a:	adc    ebp,eax
  40671c:	pop    eax
  40671d:	(bad)
  406721:	js     0x40679f
  406723:	sub    dh,cl
  406725:	std    
  406726:	pop    ebp
  406727:	xlat   BYTE PTR ds:[ebx]
  406728:	fcom   DWORD PTR [ecx]
  40672a:	pop    ds
  40672b:	mov    ebp,0xf0dc1029
  406730:	shl    DWORD PTR [esi-0x3f],cl
  406733:	fisubr WORD PTR [eax]
  406735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406736:	adc    eax,DWORD PTR gs:[edx]
  406739:	jmp    0x4066fe
  40673b:	in     eax,dx
  40673c:	cmp    DWORD PTR [ecx+esi*2-0xcd2500],ebx
  406743:	call   0xc6f1:0x465fdb4a
  40674a:	mov    cl,0xad
  40674c:	mov    ebp,0x8fba005f
  406751:	fist   WORD PTR [ecx+edi*2]
  406755:	cmovge ebx,DWORD PTR [edx+esi*4]
  406759:	cmp    ch,cl
  40675b:	bound  ebx,QWORD PTR [edi+0x695e6029]
  406761:	jp     0x406782
  406763:	sti    
  406764:	sti    
  406765:	mov    al,0x6c
  406767:	lods   eax,DWORD PTR ds:[esi]
  406768:	inc    ebp
  406769:	adc    DWORD PTR [eax+0x27],0x14477ce0
  406770:	pop    edx
  406771:	push   cs
  406772:	mov    BYTE PTR [ecx],ch
  406774:	fcomip st,st(1)
  406776:	aaa    
  406777:	dec    ecx
  406778:	cmp    edi,DWORD PTR [ebx+0x4a]
  40677b:	mov    ecx,0x9cbeacee
  406780:	add    BYTE PTR [edx],bh
  406782:	inc    ebx
  406783:	mov    bl,0x17
  406785:	mov    ebx,0x7a650b10
  40678a:	pop    ebp
  40678b:	aaa    
  40678c:	ss sbb edi,edx
  40678f:	adc    al,ah
  406791:	jl     0x4067e2
  406793:	retf   
  406794:	mov    BYTE PTR [eax+0x25],ch
  406797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406798:	sbb    eax,0x603c5348
  40679d:	inc    edx
  40679e:	push   0x656dc8f7
  4067a3:	push   cs
  4067a4:	fisttp DWORD PTR [edi+eax*8+0x0]
  4067a8:	add    cl,BYTE PTR [edi]
  4067aa:	or     al,ch
  4067ac:	sub    ah,bh
  4067ae:	(bad)  
  4067af:	in     eax,dx
  4067b0:	jecxz  0x4067ed
  4067b2:	cld    
  4067b3:	dec    ecx
  4067b4:	dec    ebp
  4067b5:	cwde   
  4067b6:	clc    
  4067b7:	test   dl,bh
  4067b9:	std    
  4067ba:	loope  0x40677a
  4067bc:	ss cmp ebx,esp
  4067bf:	(bad)  
  4067c0:	jmp    0x106b:0xa4df4215
  4067c7:	stos   DWORD PTR es:[edi],eax
  4067c8:	push   ecx
  4067c9:	xchg   esp,esp
  4067cb:	jne    0x4067cc
  4067cd:	inc    ebx
  4067ce:	inc    edx
  4067cf:	mov    bp,0xbfde
  4067d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067d4:	dec    edi
  4067d5:	mul    BYTE PTR ds:0xb80c179e
  4067db:	call   0xd57c:0x105505a6
  4067e2:	call   0x98a5:0x1cc1853c
  4067e9:	ror    BYTE PTR [esi-0x22ad5ffe],cl
  4067ef:	push   cs
  4067f0:	xor    al,BYTE PTR [ecx]
  4067f2:	cmp    bh,BYTE PTR [eax]
  4067f4:	xor    DWORD PTR [ebp+0x13107d98],0xffffffcf
  4067fb:	cmc    
  4067fc:	clc    
  4067fd:	mov    esi,0xadca00bd
  406802:	xchg   esp,eax
  406803:	jge    0x4067cb
  406805:	(bad)  
  406806:	jae    0x406802
  406808:	push   esi
  406809:	add    ebp,DWORD PTR [ebx+0x14]
  40680c:	pop    es
  40680d:	imul   ebp,ecx,0x46
  406810:	xlat   BYTE PTR ds:[ebx]
  406811:	dec    edx
  406812:	stos   BYTE PTR es:[edi],al
  406813:	test   BYTE PTR [ebp-0xc],ch
  406816:	stos   BYTE PTR es:[edi],al
  406817:	sub    al,0xee
  406819:	or     DWORD PTR [esi+0x4a],ecx
  40681c:	dec    ebx
  40681d:	inc    esp
  40681e:	lods   al,BYTE PTR ds:[esi]
  40681f:	pushf  
  406820:	mov    bl,0x21
  406822:	pop    es
  406823:	lods   al,BYTE PTR ds:[esi]
  406824:	cmc    
  406825:	pop    eax
  406826:	(bad)  
  406827:	mov    esp,0x5be2d817
  40682c:	add    bl,BYTE PTR [ebp-0x16]
  40682f:	or     al,0xcd
  406831:	dec    ecx
  406832:	or     eax,0x167acda7
  406837:	add    eax,0x743f986e
  40683c:	iret   
  40683d:	pop    ss
  40683e:	push   ds
  40683f:	gs inc ebx
  406841:	stos   DWORD PTR es:[edi],eax
  406842:	or     cl,BYTE PTR [eax-0x44]
  406845:	jbe    0x406810
  406847:	fcmovnu st,st(4)
  406849:	cwde   
  40684a:	inc    edi
  40684b:	inc    ebp
  40684c:	daa    
  40684d:	loopne 0x406869
  40684f:	xor    bl,BYTE PTR [edi+0x70]
  406852:	xchg   ecx,eax
  406853:	xor    al,0x24
  406855:	aas    
  406856:	test   bh,ch
  406858:	inc    edi
  406859:	aad    0x23
  40685b:	and    bl,BYTE PTR ds:0x70dd3186
  406861:	sub    edx,DWORD PTR ss:[edi-0x29f28cea]
  406868:	dec    esi
  406869:	cmc    
  40686a:	xor    dh,BYTE PTR [ecx]
  40686c:	loopne 0x4067f8
  40686e:	mov    ds:0xb1a0524a,eax
  406873:	popf   
  406874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406875:	adc    edx,ecx
  406877:	dec    eax
  406878:	sub    eax,0x762ccdfa
  40687d:	add    DWORD PTR [eax+0x74],ecx
  406880:	stos   DWORD PTR es:[edi],eax
  406881:	mov    esi,0x6e865fa7
  406886:	les    ecx,FWORD PTR [eax]
  406888:	sbb    ah,BYTE PTR [edx+0x2bd8b32]
  40688e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688f:	out    0xa,al
  406891:	and    dh,BYTE PTR [ebx-0x2e]
  406894:	test   al,0x9d
  406896:	mov    esp,0xa5e3ee23
  40689b:	outs   dx,DWORD PTR ds:[esi]
  40689c:	(bad)  
  40689d:	test   al,0xda
  40689f:	retf   
  4068a0:	xor    BYTE PTR [ebx],dh
  4068a2:	pushf  
  4068a3:	adc    al,0xe
  4068a5:	jle    0x4068e2
  4068a7:	or     al,0x45
  4068a9:	push   cs
  4068aa:	in     eax,dx
  4068ab:	jne    0x406903
  4068ad:	push   0xffffffb2
  4068af:	sub    DWORD PTR [ebx],eax
  4068b1:	jns    0x406888
  4068b3:	test   DWORD PTR [eax+ebx*4-0x52],0xf9d48a03
  4068bb:	xchg   edx,eax
  4068bc:	in     al,dx
  4068bd:	aaa    
  4068be:	xchg   edx,eax
  4068bf:	mov    ds:0x40c62d53,al
  4068c4:	pusha  
  4068c5:	cmp    esp,DWORD PTR [ecx-0x5c]
  4068c8:	test   DWORD PTR [ebp+0xa],esi
  4068cb:	sbb    BYTE PTR [ecx+ebx*8],0x30
  4068cf:	icebp  
  4068d0:	sbb    ah,BYTE PTR [esi+0x38c3b0bd]
  4068d6:	jae    0x4068ea
  4068d8:	push   es
  4068d9:	xchg   DWORD PTR [edi-0x7d],ebx
  4068dc:	int3   
  4068dd:	sahf   
  4068de:	xor    eax,0xbb89d2a6
  4068e3:	xchg   bh,ch
  4068e5:	inc    esi
  4068e6:	push   ds
  4068e7:	adc    BYTE PTR [ebp+0x47c72889],ah
  4068ed:	and    BYTE PTR [esi],dh
  4068ef:	addr16 test al,0xfc
  4068f2:	test   al,0x5e
  4068f4:	in     eax,0x1a
  4068f6:	mov    WORD PTR [eax+0x2e9239b0],?
  4068fc:	xor    BYTE PTR [ecx],0xf4
  4068ff:	push   cs
  406900:	pop    ss
  406901:	out    0xb7,eax
  406903:	pop    ss
  406904:	pop    ebp
  406905:	sbb    DWORD PTR [ecx+0x79c2429a],ecx
  40690b:	sbb    dl,BYTE PTR [ebp-0x493b137d]
  406911:	sar    ah,0x1d
  406914:	js     0x4068b6
  406916:	aam    0x69
  406918:	(bad)  
  406919:	push   cs
  40691a:	je     0x40694f
  40691c:	add    DWORD PTR [ecx-0x44295bd2],edi
  406922:	pop    edi
  406923:	ins    BYTE PTR es:[edi],dx
  406924:	out    0x30,eax
  406926:	xchg   edx,eax
  406927:	sub    esi,DWORD PTR [ebp-0x57]
  40692a:	cmp    DWORD PTR [ebx],eax
  40692c:	pop    esi
  40692d:	mov    ebx,0x2c231349
  406932:	daa    
  406933:	sub    dl,BYTE PTR [ecx]
  406935:	pop    ds
  406936:	stos   DWORD PTR es:[edi],eax
  406937:	popa   
  406938:	jg     0x406974
  40693a:	adc    al,0x8a
  40693c:	adc    ah,bl
  40693e:	mov    ch,0xff
  406940:	hlt    
  406941:	lock jo 0x406910
  406944:	dec    ecx
  406945:	mov    esi,0x1731c559
  40694a:	pop    esi
  40694b:	lock addr16 dec si
  40694f:	aas    
  406950:	ja     0x4068f1
  406952:	stos   DWORD PTR es:[di],eax
  406954:	inc    ebx
  406955:	and    eax,0x7c9bc3d8
  40695a:	int3   
  40695b:	mov    edx,DWORD PTR [edi+eiz*8+0x5a]
  40695f:	out    dx,eax
  406960:	mov    dh,0xc6
  406962:	xchg   esi,eax
  406963:	inc    ebp
  406964:	or     cl,BYTE PTR [edx+0x7f635366]
  40696a:	in     al,dx
  40696b:	(bad)  
  40696c:	push   ds
  40696d:	mov    al,0xc8
  40696f:	sbb    BYTE PTR [edi+0xd43ae3e],ah
  406975:	sub    al,BYTE PTR [esi]
  406977:	jmp    0xac6a:0xd77a8e07
  40697e:	jo     0x406903
  406980:	and    esi,esp
  406982:	inc    ebp
  406983:	test   eax,0xa53ac75d
  406988:	or     DWORD PTR [edx],ecx
  40698a:	adc    DWORD PTR [esi+edx*8-0x31b372e],0xffffff82
  406992:	mov    al,ds:0xcc1e6105
  406997:	sbb    eax,0xf6cb4a2b
  40699c:	sbb    ebp,DWORD PTR [ebx-0x13dfea34]
  4069a2:	sub    ecx,DWORD PTR [eax-0x63]
  4069a5:	mov    bl,0x18
  4069a7:	stc    
  4069a8:	mov    ch,bl
  4069aa:	mov    eax,0xf26d56e
  4069af:	popa   
  4069b0:	iret   
  4069b1:	jg     0x4069e0
  4069b3:	test   cl,cl
  4069b5:	sbb    eax,0xee370d9c
  4069ba:	cli    
  4069bb:	push   ss
  4069bc:	out    dx,al
  4069bd:	mov    bl,BYTE PTR [ecx-0x5e]
  4069c0:	push   ds
  4069c1:	(bad)  [eax+eiz*1+0xa]
  4069c5:	es dec ebp
  4069c7:	fiadd  DWORD PTR [eax+eax*1-0x45]
  4069cb:	jl     0x406962
  4069cd:	mov    ebx,0xffce819a
  4069d2:	div    BYTE PTR [edx+0x6c]
  4069d5:	add    esp,DWORD PTR [ecx-0xc]
  4069d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069d9:	add    bh,BYTE PTR [ebx+eiz*4+0x59]
  4069dd:	nop
  4069de:	jl     0x406a2a
  4069e0:	retf   
  4069e1:	jae    0x40696d
  4069e3:	shl    BYTE PTR [esi+ecx*2-0x4c],cl
  4069e7:	sbb    al,0x87
  4069e9:	sbb    al,0xb9
  4069eb:	js     0x406a2a
  4069ed:	dec    edx
  4069ee:	dec    ebp
  4069ef:	jns    0x4069fb
  4069f1:	jle    0x406a36
  4069f3:	xor    DWORD PTR [eax],0x28
  4069f6:	xchg   edi,eax
  4069f7:	cmp    DWORD PTR [edi-0x3d6d0fa7],eax
  4069fd:	add    eax,0x837a1619
  406a02:	add    al,0x15
  406a04:	push   cs
  406a05:	inc    ebp
  406a06:	mov    al,ds:0xca568aa8
  406a0b:	je     0x4069a9
  406a0d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  406a0f:	or     BYTE PTR [ebp-0x1b],bh
  406a12:	dec    esp
  406a13:	shl    BYTE PTR [eax+0xa29c47c],cl
  406a19:	dec    edx
  406a1a:	dec    DWORD PTR [eax+0x32]
  406a1d:	sub    eax,0xa1179c7d
  406a22:	mov    ecx,0x686653c1
  406a27:	mov    ah,0x89
  406a29:	mov    edx,0x6d05b548
  406a2e:	push   edx
  406a2f:	std    
  406a30:	or     eax,0x8b933504
  406a35:	push   eax
  406a36:	dec    ecx
  406a37:	out    0x3,eax
  406a39:	add    DWORD PTR [esi],edx
  406a3b:	mov    bh,0xc6
  406a3d:	mov    dl,0xcf
  406a3f:	mov    BYTE PTR [edi+0x191ae5f1],al
  406a45:	and    BYTE PTR [edi+eiz*8+0x7c],cl
  406a49:	jbe    0x4069d2
  406a4b:	inc    ecx
  406a4c:	lods   al,BYTE PTR ds:[esi]
  406a4d:	cmp    ah,cl
  406a4f:	out    dx,eax
  406a50:	mov    eax,0x23f82513
  406a55:	mov    ebx,0xe23ab9f7
  406a5a:	adc    edi,DWORD PTR [edi]
  406a5c:	pop    ds
  406a5d:	mov    esp,0xf4e92fb8
  406a62:	jb     0x4069fc
  406a64:	icebp  
  406a65:	push   esp
  406a66:	lds    esi,FWORD PTR [ebp-0x227db0fc]
  406a6c:	sub    BYTE PTR [ecx],al
  406a6e:	cdq    
  406a6f:	in     al,dx
  406a70:	dec    ebp
  406a71:	pop    es
  406a72:	add    eax,0x4642fcca
  406a77:	fnstcw WORD PTR [edx+esi*1+0x5d]
  406a7b:	xor    DWORD PTR [edx-0x7c245333],esp
  406a81:	inc    ebp
  406a82:	(bad)  
  406a83:	push   cs
  406a84:	mov    esi,edi
  406a86:	cs xor al,0xb9
  406a89:	mov    dh,0xbd
  406a8b:	pop    esi
  406a8c:	adc    al,0x58
  406a8e:	sbb    eax,0x45babf87
  406a93:	jl     0x406aeb
  406a95:	mov    bh,0xf7
  406a97:	push   esp
  406a98:	mov    ds:0x812f1197,al
  406a9d:	leave  
  406a9e:	shr    BYTE PTR [edx-0x4d5faa85],cl
  406aa4:	and    ebp,DWORD PTR [ecx+0x3]
  406aa7:	rcl    DWORD PTR [ebp+0x6cdcd1d6],1
  406aad:	add    ebp,eax
  406aaf:	mov    eax,ds:0x31adbf4a
  406ab4:	js     0x406a52
  406ab6:	popf   
  406ab7:	cmp    esi,DWORD PTR [eax]
  406ab9:	push   ss
  406aba:	xchg   ebx,eax
  406abb:	jmp    DWORD PTR [esp+eiz*8+0x603ff19]
  406ac2:	imul   ebx,DWORD PTR [eax+edi*8-0x7c7704ac],0x4176803c
  406acd:	aaa    
  406ace:	xor    dl,BYTE PTR [eax+0x1ec5b59c]
  406ad4:	iret   
  406ad5:	in     eax,0xfa
  406ad7:	rcl    BYTE PTR [edi+0x76],cl
  406ada:	push   ss
  406adb:	ds add ebx,0x21724579
  406ae2:	test   DWORD PTR [ebx+0x4b00b3f8],esp
  406ae8:	dec    edx
  406ae9:	dec    ebx
  406aea:	fcomp  DWORD PTR [ecx]
  406aec:	fnstenv [edx-0x3d]
  406aef:	loop   0x406aa6
  406af1:	inc    esi
  406af2:	lahf   
  406af3:	(bad)  
  406af4:	ja     0x406b1a
  406af6:	aad    0xa1
  406af8:	(bad)  
  406af9:	stc    
  406afa:	dec    edi
  406afb:	fst    DWORD PTR [ecx+0xb]
  406afe:	fst    DWORD PTR [edi-0x6a]
  406b01:	and    BYTE PTR ds:0xc4b6fb4d,dh
  406b07:	ins    BYTE PTR es:[edi],dx
  406b08:	test   edi,edx
  406b0a:	hlt    
  406b0b:	call   DWORD PTR [ebp-0x2e]
  406b0e:	push   ebx
  406b0f:	mov    ecx,0xbde78f16
  406b14:	xchg   esi,eax
  406b15:	fwait
  406b16:	mov    ch,0x12
  406b18:	cmp    eax,0x61db9ac3
  406b1d:	inc    eax
  406b1e:	les    ecx,FWORD PTR [ecx]
  406b20:	jo     0x406ab0
  406b22:	pop    ebp
  406b23:	sbb    al,0xfd
  406b25:	jne    0x406ab1
  406b27:	dec    ecx
  406b28:	loop   0x406adb
  406b2a:	lods   al,BYTE PTR ds:[esi]
  406b2b:	lock loopne 0x406acc
  406b2e:	dec    edx
  406b2f:	mov    ah,0x81
  406b31:	xor    BYTE PTR [esp+eax*4+0x5d],cl
  406b35:	jg     0x406b98
  406b37:	jecxz  0x406b60
  406b39:	cmp    ebp,DWORD PTR [ebp+0x28]
  406b3c:	jmp    0x406ad3
  406b3e:	fs dec esp
  406b40:	call   0x1abb0e0e
  406b45:	mov    ds:0xdb51915d,al
  406b4a:	add    ah,ch
  406b4c:	mov    al,ds:0x3b66ba39
  406b51:	sbb    ah,bh
  406b53:	out    dx,eax
  406b54:	push   eax
  406b55:	inc    ebx
  406b56:	inc    ecx
  406b57:	sub    bh,BYTE PTR [ebx+edx*8]
  406b5a:	push   ss
  406b5b:	dec    edx
  406b5c:	leave  
  406b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b5f:	pop    ss
  406b60:	ins    BYTE PTR es:[edi],dx
  406b61:	xor    ebp,DWORD PTR [esi+0x4a]
  406b64:	aam    0x9f
  406b66:	mov    ecx,0xe4d00ebf
  406b6b:	shr    BYTE PTR [eax-0x6c],0x84
  406b6f:	jne    0x406b41
  406b71:	inc    eax
  406b72:	jo     0x406b44
  406b74:	sub    ebp,DWORD PTR [edi+eiz*4+0x5f]
  406b78:	ror    BYTE PTR [edi-0xe482adf],1
  406b7e:	fidiv  DWORD PTR [eax]
  406b80:	(bad)  
  406b81:	dec    edi
  406b82:	fimul  WORD PTR [ebx+edx*4]
  406b85:	test   al,0xce
  406b87:	or     esp,ecx
  406b89:	aad    0xde
  406b8b:	aas    
  406b8c:	sti    
  406b8d:	shr    DWORD PTR [edx+0x75],1
  406b90:	cdq    
  406b91:	push   0x66433200
  406b96:	push   gs
  406b98:	pop    ebp
  406b99:	out    dx,eax
  406b9a:	test   DWORD PTR [eax+eax*8+0x49],eax
  406b9e:	xchg   edx,eax
  406b9f:	loopne 0x406c09
  406ba1:	push   ss
  406ba2:	xchg   BYTE PTR [ebx],cl
  406ba4:	pop    edx
  406ba5:	ret    
  406ba6:	add    BYTE PTR [edi-0x59],ch
  406ba9:	xchg   BYTE PTR [esi+0x45351f07],al
  406baf:	xor    ah,ah
  406bb1:	fcom   QWORD PTR [edx]
  406bb3:	ss dec ebp
  406bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bb6:	rol    DWORD PTR [esi+0x4b],0xc0
  406bba:	mov    ebp,0x868ea4ce
  406bbf:	xlat   BYTE PTR ds:[ebx]
  406bc0:	(bad)  
  406bc1:	icebp  
  406bc2:	inc    edx
  406bc3:	xor    eax,DWORD PTR [ecx]
  406bc5:	cmp    eax,0xe6caad1c
  406bca:	in     al,0x95
  406bcc:	xlat   BYTE PTR ds:[ebx]
  406bcd:	int    0xea
  406bcf:	cmp    BYTE PTR [edx-0x62],al
  406bd2:	fsubr  st(2),st
  406bd4:	sub    cl,BYTE PTR [edx-0x52aa0e69]
  406bda:	push   0xffffff9b
  406bdc:	sbb    eax,0x8a65c1cb
  406be1:	cmp    DWORD PTR [edi-0xd],0x3b406762
  406be8:	ret    0x9664
  406beb:	js     0x406c04
  406bed:	push   ecx
  406bee:	mov    dl,0xaf
  406bf0:	jmp    0xa5fa:0xb6b2f3b8
  406bf7:	and    al,0x33
  406bf9:	mov    edi,edi
  406bfb:	dec    ebx
  406bfc:	adc    ecx,DWORD PTR [edx+0x1021a738]
  406c02:	push   ds
  406c03:	je     0x406bc0
  406c05:	push   edi
  406c06:	cmp    DWORD PTR [eax+eiz*8+0x30516da8],esi
  406c0d:	add    BYTE PTR [edi-0xbd2c076],al
  406c13:	repz (bad) 
  406c15:	(bad)  
  406c16:	loop   0x406bd4
  406c18:	pop    ds
  406c19:	stos   BYTE PTR es:[edi],al
  406c1a:	and    BYTE PTR [ebp+0x237294ad],ch
  406c20:	dec    ebp
  406c21:	popf   
  406c22:	je     0x406c1d
  406c24:	jno    0x406ca0
  406c26:	cmp    al,0xe8
  406c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c29:	jb     0x406c22
  406c2b:	sbb    BYTE PTR [edx+0x23],cl
  406c2e:	fild   WORD PTR [eax+0x542a1116]
  406c34:	pop    esi
  406c35:	loop   0x406c8c
  406c37:	pop    edi
  406c38:	bound  esi,QWORD PTR [edi]
  406c3a:	(bad)  
  406c3c:	inc    edx
  406c3d:	xchg   ebp,eax
  406c3e:	clc    
  406c3f:	xchg   ecx,eax
  406c40:	sub    DWORD PTR [ebp-0x27dbb190],esp
  406c46:	sub    esp,DWORD PTR [eax-0x5f]
  406c49:	sbb    al,0x17
  406c4b:	arpl   di,si
  406c4d:	cmp    eax,0x9c97ab22
  406c52:	inc    esi
  406c53:	and    esi,DWORD PTR ds:0x59894a41
  406c59:	iret   
  406c5a:	ret    0x81a0
  406c5d:	pop    edi
  406c5e:	adc    BYTE PTR [ebx],bl
  406c60:	cli    
  406c61:	and    eax,0x5d9f0ba7
  406c66:	lahf   
  406c67:	outs   dx,DWORD PTR ds:[esi]
  406c68:	mov    ds:0x728850a9,eax
  406c6d:	push   edx
  406c6e:	xchg   DWORD PTR [eax],eax
  406c70:	popa   
  406c71:	mov    bl,0x3e
  406c73:	mov    al,ds:0xade00356
  406c78:	push   ds
  406c79:	add    ah,BYTE PTR gs:[ecx-0x6356abf1]
  406c80:	mov    cl,BYTE PTR [esi+0x6b]
  406c83:	push   cs
  406c84:	jno    0x406cc3
  406c86:	aas    
  406c87:	call   0x4f52:0x4859ce80
  406c8e:	cmp    BYTE PTR [edi-0x1f5a365f],al
  406c94:	sbb    eax,0xfb4f7d8b
  406c99:	and    al,0xa3
  406c9b:	ficom  DWORD PTR [ebx+esi*1]
  406c9e:	imul   ebx,esi,0x4d
  406ca1:	xchg   ecx,eax
  406ca2:	outs   dx,DWORD PTR ds:[esi]
  406ca3:	mov    cs,WORD PTR [edi-0x3e2f6a9c]
  406ca9:	mov    ebx,ds
  406cab:	jle    0x406c75
  406cad:	and    al,0xc1
  406caf:	xor    esi,eax
  406cb1:	mov    eax,0xf40ba76f
  406cb6:	mov    eax,0x816158c3
  406cbb:	mov    eax,0x4346de07
  406cc0:	jno    0x406c8c
  406cc2:	jns    0x406cfc
  406cc4:	call   0x8967:0x2e37c3fa
  406ccb:	aas    
  406ccc:	lea    eax,[edi-0x69]
  406ccf:	ret    
  406cd0:	mov    esi,0x5fd6c3ea
  406cd5:	shr    BYTE PTR [edi+0x2ec68d4],1
  406cdb:	lock fneni(8087 only) 
  406cde:	mov    DWORD PTR [ebx],esp
  406ce0:	fimul  DWORD PTR [edi]
  406ce2:	push   cs
  406ce3:	dec    ebx
  406ce4:	cdq    
  406ce5:	jl     0x576a7d53
  406ceb:	sti    
  406cec:	imul   esp,DWORD PTR [esp+ecx*1+0x7f],0x4e
  406cf1:	xchg   ecx,eax
  406cf2:	pop    eax
  406cf3:	push   ss
  406cf4:	mov    bl,0x5
  406cf6:	mov    eax,0xe63c078e
  406cfb:	xor    DWORD PTR [esi-0x24d5bce],esp
  406d01:	in     eax,0x17
  406d03:	out    0x81,al
  406d05:	and    BYTE PTR [ecx+0x1230d035],ch
  406d0b:	dec    ebp
  406d0c:	mov    edx,0x98062fa8
  406d11:	inc    ebp
  406d12:	aad    0x5
  406d14:	dec    esi
  406d15:	xchg   BYTE PTR [edi+0x1c],ch
  406d18:	xchg   edx,eax
  406d19:	xor    al,0x75
  406d1b:	mov    bh,0xbb
  406d1d:	int    0xb9
  406d1f:	into   
  406d20:	mov    BYTE PTR [edi-0xc],bl
  406d23:	mov    esi,gs
  406d25:	cs xor dl,ah
  406d28:	ins    BYTE PTR es:[edi],dx
  406d29:	stos   BYTE PTR es:[edi],al
  406d2a:	cld    
  406d2b:	mov    ds:0xb8fa2587,al
  406d30:	fisttp DWORD PTR [ecx-0x605e17aa]
  406d36:	mov    ebx,0x9754fd2f
  406d3b:	sub    al,0x8a
  406d3d:	xor    ecx,DWORD PTR [edi]
  406d3f:	cmc    
  406d40:	pusha  
  406d41:	repnz mov ecx,0xfb9cfed4
  406d47:	adc    BYTE PTR [ebp-0x5b],0x59
  406d4b:	(bad)  
  406d4d:	mov    bl,0x46
  406d4f:	or     eax,0xe599d209
  406d54:	mov    edx,0x37a7d60f
  406d59:	ins    BYTE PTR es:[edi],dx
  406d5a:	cdq    
  406d5b:	test   BYTE PTR [edi-0x7f],dh
  406d5e:	inc    ecx
  406d5f:	mov    BYTE PTR [esi],dl
  406d61:	cmp    DWORD PTR [edi+0x1a],esp
  406d64:	jae    0x406dac
  406d66:	std    
  406d67:	fnsave [edi]
  406d69:	inc    esi
  406d6a:	test   DWORD PTR [esi+0x16471f1f],esp
  406d70:	inc    ebp
  406d71:	push   0xb48c8677
  406d76:	fbld   TBYTE PTR [eax+0x4f43b7cd]
  406d7c:	(bad)  
  406d7e:	pop    ss
  406d7f:	lods   eax,DWORD PTR ds:[esi]
  406d80:	inc    edx
  406d81:	mov    dh,al
  406d83:	imul   esi,DWORD PTR [eax-0x13],0xffffff93
  406d87:	dec    ecx
  406d88:	mov    ah,0x12
  406d8a:	xor    ebp,eax
  406d8c:	add    ecx,ebx
  406d8e:	stc    
  406d8f:	push   es
  406d90:	adc    edi,esi
  406d92:	rcr    BYTE PTR [ecx+0x2673e1d0],cl
  406d98:	scas   al,BYTE PTR es:[edi]
  406d99:	add    BYTE PTR [edx],dh
  406d9b:	cmp    DWORD PTR [eax-0x59],ecx
  406d9e:	std    
  406d9f:	add    BYTE PTR [eax+0x24],dh
  406da2:	div    DWORD PTR [edx-0x2b6e8c6e]
  406da8:	jmp    0x406e00
  406daa:	push   es
  406dab:	mov    BYTE PTR [ebp-0x28447b67],0xca
  406db2:	stc    
  406db3:	jnp    0x406d4c
  406db5:	mov    edx,0x6b6b11e1
  406dba:	jl     0x406d90
  406dbc:	push   ecx
  406dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dbe:	sbb    ebx,edi
  406dc0:	or     BYTE PTR [ecx],dl
  406dc2:	call   0x630b:0x53db44cb
  406dc9:	sbb    ah,BYTE PTR [ebp+0x62]
  406dcc:	cld    
  406dcd:	idiv   bh
  406dcf:	fisub  DWORD PTR [ebx+ecx*2]
  406dd2:	test   al,0x6b
  406dd4:	cmp    al,0x93
  406dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd7:	push   edx
  406dd8:	sbb    BYTE PTR [ebx-0x1a],bl
  406ddb:	fadd   st(5),st
  406ddd:	mov    bl,0xaa
  406ddf:	mov    eax,ds:0xe4782cbc
  406de4:	cmp    al,0x52
  406de6:	adc    ebp,DWORD PTR [esi+0x30]
  406de9:	and    bl,BYTE PTR [eax]
  406deb:	add    DWORD PTR [ecx],eax
  406ded:	sbb    ecx,ebp
  406def:	or     al,0x4e
  406df1:	or     DWORD PTR [edx-0x18c89bd3],ebx
  406df7:	iret   
  406df8:	imul   ebp,DWORD PTR [edx+0x4b],0x1c1ece82
  406dff:	fldcw  WORD PTR [edx-0x7735aa5c]
  406e05:	inc    edi
  406e06:	dec    esp
  406e07:	inc    esi
  406e08:	mov    esi,DWORD PTR [edx+0x7c]
  406e0b:	jl     0x406e2b
  406e0d:	sub    BYTE PTR [edi+0x6d],0x5f
  406e11:	sbb    al,0xa8
  406e13:	or     ecx,esi
  406e15:	cmp    eax,esp
  406e17:	sbb    BYTE PTR [ebp-0x39],0x59
  406e1b:	inc    ecx
  406e1c:	jns    0x406ddf
  406e1e:	and    ebx,DWORD PTR [ecx+0x1f]
  406e21:	out    0xe3,al
  406e23:	mov    al,0x6c
  406e25:	xlat   BYTE PTR ds:[ebx]
  406e26:	or     al,0x7a
  406e28:	ds jmp 0x406dc6
  406e2b:	imul   edi,esp,0x551223ef
  406e31:	cmp    DWORD PTR [ecx-0x556b77e0],0x6f
  406e38:	into   
  406e39:	mov    dl,BYTE PTR [edi-0x38]
  406e3c:	cld    
  406e3d:	pushf  
  406e3e:	cli    
  406e3f:	add    edx,eax
  406e41:	mov    bl,0x1a
  406e43:	mov    eax,ds:0xa4c84456
  406e48:	add    DWORD PTR [edi+0x28],ecx
  406e4b:	adc    BYTE PTR [edi],dl
  406e4d:	ss and al,0xea
  406e50:	pop    ds
  406e51:	pop    edx
  406e52:	dec    ebp
  406e53:	scas   al,BYTE PTR es:[edi]
  406e54:	pop    ss
  406e55:	sbb    dh,BYTE PTR [edx+0x29]
  406e58:	js     0x406e14
  406e5a:	mov    ch,0x88
  406e5c:	stos   BYTE PTR es:[edi],al
  406e5d:	mov    esi,0xbc88959b
  406e62:	and    DWORD PTR [esi+esi*2-0x1ad91c52],edi
  406e69:	xor    DWORD PTR [esi],esp
  406e6b:	sbb    BYTE PTR [ecx],cl
  406e6d:	or     al,0x11
  406e6f:	adc    al,0xf0
  406e71:	lea    ecx,[ebx+0x6b3df253]
  406e77:	inc    esp
  406e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e79:	test   DWORD PTR [ecx+eiz*2],edi
  406e7c:	xchg   ebx,eax
  406e7d:	in     eax,0xac
  406e7f:	iret   
  406e80:	cli    
  406e81:	(bad)  
  406e82:	adc    DWORD PTR [ebx+esi*4+0x5601429f],edi
  406e89:	je     0x406ed3
  406e8b:	xor    bh,BYTE PTR [edi-0x525aace0]
  406e91:	out    dx,al
  406e92:	mov    ah,0xa
  406e94:	hlt    
  406e95:	sbb    cl,BYTE PTR [esi]
  406e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e98:	dec    eax
  406e99:	mov    bh,0x38
  406e9b:	stc    
  406e9c:	stos   BYTE PTR es:[edi],al
  406e9d:	inc    edi
  406e9e:	fbld   TBYTE PTR [ebx-0x44]
  406ea1:	test   eax,0xe285e670
  406ea6:	jae    0x406e4c
  406ea8:	aam    0x50
  406eaa:	stc    
  406eab:	imul   eax,DWORD PTR [edi+0x55f3b706],0x40
  406eb2:	add    dl,BYTE PTR [ecx]
  406eb4:	xchg   ebx,eax
  406eb5:	clc    
  406eb6:	pop    esi
  406eb7:	push   edx
  406eb8:	xor    eax,0xcd08eb75
  406ebd:	pop    ss
  406ebe:	inc    eax
  406ebf:	xlat   BYTE PTR ds:[ebx]
  406ec0:	cli    
  406ec1:	mov    eax,0x8b530d0
  406ec6:	mov    edx,cs
  406ec8:	xchg   DWORD PTR [esi-0x4b],ecx
  406ecb:	ins    DWORD PTR es:[edi],dx
  406ecc:	test   BYTE PTR [ebx],ah
  406ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ecf:	adc    DWORD PTR ds:0xcf419613,0x74
  406ed6:	pop    ebp
  406ed7:	xor    BYTE PTR fs:[ecx],al
  406eda:	jb     0x406e7e
  406edc:	pusha  
  406edd:	xchg   ebx,eax
  406ede:	scas   al,BYTE PTR es:[edi]
  406edf:	pop    ecx
  406ee0:	aaa    
  406ee1:	gs pop ebp
  406ee3:	ficom  WORD PTR [ecx]
  406ee5:	mov    eax,ds:0x320d7e65
  406eea:	mov    dh,0xbd
  406eec:	int3   
  406eed:	mov    ch,0x33
  406eef:	mov    eax,DWORD PTR [edi+0xa]
  406ef2:	cmp    eax,0xe500a936
  406ef7:	aas    
  406ef8:	dec    ecx
  406ef9:	in     al,0x89
  406efb:	or     ebp,DWORD PTR [edx]
  406efd:	or     DWORD PTR [edi-0x79dd1032],edi
  406f03:	out    dx,al
  406f04:	push   esp
  406f05:	fstp   TBYTE PTR [esi]
  406f07:	pop    es
  406f08:	fnstenv [edx-0x4796d6ff]
  406f0e:	xor    BYTE PTR [ebx+0x49],0xf3
  406f12:	xchg   edi,eax
  406f13:	shr    ah,1
  406f15:	adc    BYTE PTR [ecx],ch
  406f17:	pop    ss
  406f18:	add    bh,al
  406f1a:	retf   0x56a6
  406f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f1e:	ret    
  406f1f:	and    DWORD PTR [esi],esi
  406f21:	(bad)  [edi+0x23]
  406f24:	push   eax
  406f25:	fimul  WORD PTR [edx-0x100fcca6]
  406f2b:	cwde   
  406f2c:	sti    
  406f2d:	rcl    DWORD PTR [esp+esi*1],0x47
  406f31:	adc    al,0x5e
  406f33:	xor    BYTE PTR [ebx+0x10c79ae8],0xf6
  406f3a:	pop    ss
  406f3b:	push   edi
  406f3c:	aad    0x18
  406f3e:	cli    
  406f3f:	repnz fwait
  406f41:	in     eax,dx
  406f42:	(bad)  
  406f43:	fistp  QWORD PTR [edx-0x4d0ba018]
  406f49:	pop    eax
  406f4a:	jno    0x406f69
  406f4c:	xor    ch,BYTE PTR ds:0xa8a17687
  406f52:	cli    
  406f53:	jmp    0xbb0bbab1
  406f58:	je     0x406ef8
  406f5a:	pop    ds
  406f5b:	inc    edi
  406f5c:	lea    edi,[ebp-0x3]
  406f5f:	mov    esi,0xf7e5de64
  406f64:	push   ebx
  406f65:	mov    bh,0x47
  406f67:	jae    0x406f17
  406f69:	cmp    BYTE PTR [edx],bl
  406f6b:	(bad)  
  406f6d:	jl     0x406f31
  406f6f:	and    BYTE PTR [ebp+0x2299c0c4],dh
  406f75:	xchg   esp,eax
  406f76:	ss dec ebp
  406f78:	push   ebp
  406f79:	imul   edx,DWORD PTR [ecx-0x5eed08e6],0xd546648e
  406f83:	sbb    ch,dl
  406f85:	add    dh,ah
  406f87:	xor    al,BYTE PTR [ecx-0x49]
  406f8a:	inc    ecx
  406f8b:	pop    esi
  406f8c:	add    bl,BYTE PTR [esi+0x3e0894a9]
  406f92:	loop   0x406f3c
  406f94:	xchg   edx,eax
  406f95:	sbb    bh,BYTE PTR [ecx-0x41]
  406f98:	jno    0x406fce
  406f9a:	xor    DWORD PTR [eax-0x5e],edx
  406f9d:	in     eax,dx
  406f9e:	push   esi
  406f9f:	sar    cl,0xc8
  406fa2:	mov    esi,0x83d8653f
  406fa7:	push   es
  406fa8:	dec    eax
  406fa9:	into   
  406faa:	pop    eax
  406fab:	nop
  406fac:	fld    TBYTE PTR [eax+0x4a249f99]
  406fb2:	push   edx
  406fb3:	cmp    eax,0xa4742e29
  406fb8:	inc    ebp
  406fb9:	icebp  
  406fba:	cmp    DWORD PTR [eax+edx*4+0x3a],0xffffffcf
  406fbf:	test   DWORD PTR [edi+0x1d],esp
  406fc2:	inc    ecx
  406fc3:	in     eax,dx
  406fc4:	sbb    BYTE PTR [ebx+eax*2+0x32],bh
  406fc8:	push   esi
  406fc9:	cwde   
  406fca:	add    al,0x27
  406fcc:	push   es
  406fcd:	outs   dx,DWORD PTR ds:[esi]
  406fce:	xor    al,0xe2
  406fd0:	call   0xe0ad1832
  406fd5:	jns    0x406f67
  406fd7:	mov    ds:0x5fd3a5bc,eax
  406fdc:	outs   dx,BYTE PTR ds:[esi]
  406fdd:	sbb    ebp,ebp
  406fdf:	mov    al,0x2a
  406fe1:	jg     0x406fb2
  406fe3:	call   0xd6f4f3d4
  406fe8:	sub    BYTE PTR [ebx],bl
  406fea:	mov    ecx,DWORD PTR ds:0xf4af2140
  406ff0:	inc    esi
  406ff1:	push   ebx
  406ff2:	(bad)  
  406ff4:	leave  
  406ff5:	fldz   
  406ff7:	bound  edx,QWORD PTR [esi+0x299cd272]
  406ffd:	leave  
  406ffe:	stc    
  406fff:	out    dx,al
  407000:	out    0xde,al
  407002:	shl    BYTE PTR [ebp+ecx*8+0x7b],1
  407006:	push   esp
  407007:	outs   dx,BYTE PTR ds:[esi]
  407008:	outs   dx,DWORD PTR ds:[esi]
  407009:	mov    bh,0x17
  40700b:	outs   dx,DWORD PTR ds:[esi]
  40700c:	lds    ecx,FWORD PTR [edx]
  40700e:	mov    ds:0xe8644f50,eax
  407013:	enter  0xad78,0x64
  407017:	scas   eax,DWORD PTR es:[edi]
  407018:	dec    eax
  407019:	xchg   edi,eax
  40701a:	retf   0xe6a6
  40701d:	(bad)  
  40701e:	xchg   esp,eax
  40701f:	jmp    0x486a:0x6f878da5
  407026:	fisubr WORD PTR [ecx+0x781631a5]
  40702c:	gs icebp 
  40702e:	add    ah,BYTE PTR [esi+0x682af6dc]
  407034:	sub    DWORD PTR [edi+0x698f855e],esp
  40703a:	mov    eax,ds:0x4277369f
  40703f:	adc    esi,ebp
  407041:	push   esp
  407042:	mov    al,0x1e
  407044:	scas   al,BYTE PTR es:[edi]
  407045:	js     0x40706a
  407047:	call   0xfe07:0x133b8db0
  40704e:	push   esi
  40704f:	push   ebp
  407050:	rcr    BYTE PTR ds:0x97a212d6,0xbc
  407057:	jnp    0x407036
  407059:	mov    cl,0x1b
  40705b:	fcomp  DWORD PTR [esi]
  40705d:	cli    
  40705e:	ret    
  40705f:	sbb    DWORD PTR [esi+esi*1],esp
  407062:	test   al,0xf5
  407064:	or     eax,0x562db1f7
  407069:	adc    al,0x9b
  40706b:	pop    edi
  40706c:	sbb    eax,0x5eb434a1
  407071:	inc    ecx
  407072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407073:	arpl   bp,sp
  407075:	arpl   WORD PTR [esi-0x13],dx
  407078:	dec    ebx
  407079:	mov    dh,0xe0
  40707b:	add    eax,0xa4032d19
  407080:	out    dx,al
  407081:	mov    ch,0x3f
  407083:	mov    bl,0x5c
  407085:	loopne 0x4070d1
  407087:	dec    eax
  407088:	iret   
  407089:	xlat   BYTE PTR ds:[ebx]
  40708a:	and    eax,0x97a6041
  40708f:	bound  ebp,QWORD PTR ds:0x7449b175
  407095:	sbb    eax,0x67066dd0
  40709a:	out    dx,eax
  40709b:	push   cs
  40709c:	ja     0x407096
  40709e:	inc    ebx
  40709f:	sahf   
  4070a0:	dec    esi
  4070a1:	sti    
  4070a2:	add    ebp,eax
  4070a4:	inc    edi
  4070a5:	sti    
  4070a6:	push   ebx
  4070a7:	add    eax,DWORD PTR [esi+0x57c40e5b]
  4070ad:	sahf   
  4070ae:	fs (bad) 
  4070b1:	sbb    ecx,ebp
  4070b3:	mov    ch,0x8
  4070b5:	jecxz  0x4070e3
  4070b7:	in     al,0xae
  4070b9:	test   al,dh
  4070bb:	retf   0xc52c
  4070be:	push   ebx
  4070bf:	and    al,0x7a
  4070c1:	xchg   esp,eax
  4070c2:	sub    eax,DWORD PTR [eax+0x652dffe4]
  4070c8:	jl     0x4070b5
  4070ca:	add    DWORD PTR [esi-0x4f],0x313404a
  4070d1:	pop    ebp
  4070d2:	jle    0x40711d
  4070d4:	fsub   DWORD PTR [eax]
  4070d6:	add    edx,esp
  4070d8:	xchg   ebp,eax
  4070d9:	pop    esi
  4070da:	xor    BYTE PTR [edi-0x42],dh
  4070dd:	pop    ebx
  4070de:	pop    eax
  4070df:	icebp  
  4070e0:	scas   eax,DWORD PTR es:[edi]
  4070e1:	xchg   esp,eax
  4070e2:	(bad)  
  4070e3:	xchg   edx,eax
  4070e4:	(bad)  
  4070e5:	jo     0x4070cb
  4070e7:	imul   edx,DWORD PTR [ebp-0x30],0xf08459f1
  4070ee:	mov    dh,0xdc
  4070f0:	mov    bl,0x77
  4070f2:	ins    BYTE PTR es:[edi],dx
  4070f3:	push   cs
  4070f4:	daa    
  4070f5:	xor    dl,cl
  4070f7:	pop    es
  4070f8:	jmp    0xb69d:0x13b313e2
  4070ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407100:	sub    dl,ch
  407102:	in     al,dx
  407103:	lods   eax,DWORD PTR ds:[esi]
  407104:	add    DWORD PTR [edi],esp
  407106:	mov    dh,0x84
  407108:	mov    cl,0x52
  40710a:	ret    0x6ec0
  40710d:	cmp    al,BYTE PTR [ebx+eiz*8+0x7cb7d49b]
  407114:	stos   DWORD PTR es:[edi],eax
  407115:	retf   
  407116:	jge    0x40717b
  407118:	cmp    eax,0x33e7a48f
  40711d:	sbb    al,0x8a
  407120:	leave  
  407121:	jnp    0x407192
  407123:	pop    ecx
  407124:	aas    
  407125:	or     BYTE PTR [esi+0x65],ch
  407128:	and    al,0x3f
  40712a:	outs   dx,DWORD PTR ds:[esi]
  40712b:	add    ebp,DWORD PTR [esi+0x9]
  40712e:	dec    esi
  40712f:	repz mov esi,DWORD PTR [edx+0x48182971]
  407136:	(bad)  
  407137:	int3   
  407138:	mov    bh,BYTE PTR [edx+ecx*4+0x39]
  40713c:	xchg   ecx,eax
  40713d:	mov    al,ds:0xb08a807
  407142:	pop    ecx
  407143:	add    eax,0x60f7afac
  407148:	or     BYTE PTR [eax-0x2d2d2aff],al
  40714e:	pop    ebx
  40714f:	enter  0xd3ca,0x59
  407153:	fwait
  407154:	mov    dh,0xb6
  407156:	sbb    al,0xae
  407158:	cmp    DWORD PTR [edx],esp
  40715a:	mov    ebx,0x8a26f30b
  40715f:	push   edi
  407160:	mov    al,ds:0xf08310a5
  407165:	xor    BYTE PTR [ebp-0x20],bh
  407168:	pop    edi
  407169:	dec    edx
  40716a:	shl    BYTE PTR [esi+0x4c1a8ba9],0xc2
  407171:	sbb    BYTE PTR [ebp-0x38],al
  407174:	(bad)  
  407175:	mov    dl,dl
  407177:	and    eax,0xe3c99367
  40717c:	out    0x7,al
  40717e:	cdq    
  40717f:	cwde   
  407180:	cmp    edi,DWORD PTR [eax+0x40f3f23f]
  407186:	pop    eax
  407187:	(bad)  
  407188:	jnp    0x407160
  40718a:	sbb    eax,0x3f2978bd
  40718f:	push   eax
  407190:	and    cl,bh
  407192:	cmp    BYTE PTR [esi-0x7a],bh
  407195:	lods   eax,DWORD PTR ds:[esi]
  407196:	test   ch,cl
  407198:	sbb    al,0xa7
  40719a:	in     eax,dx
  40719b:	adc    BYTE PTR [edi-0x5e66f5be],ah
  4071a1:	outs   dx,BYTE PTR ds:[esi]
  4071a2:	ja     0x4071ac
  4071a4:	pushf  
  4071a5:	xchg   ch,bl
  4071a7:	pushf  
  4071a8:	cmp    al,0xb7
  4071aa:	mov    bh,0x2
  4071ac:	jmp    0x4071ff
  4071ae:	and    ebp,ebp
  4071b0:	aam    0x8
  4071b2:	and    BYTE PTR [ebx+esi*8+0x65c62bbf],al
  4071b9:	ds sti 
  4071bb:	mov    bl,0xfe
  4071bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071be:	stos   BYTE PTR es:[edi],al
  4071bf:	fcmovnb st,st(5)
  4071c1:	ficomp DWORD PTR [ebx]
  4071c3:	aas    
  4071c4:	mov    ds:0xa7903e66,eax
  4071c9:	mov    ah,0x43
  4071cb:	pop    esp
  4071cc:	mov    ds:0xdf751bd9,eax
  4071d1:	cs loopne 0x407195
  4071d4:	div    DWORD PTR [eax]
  4071d6:	outs   dx,DWORD PTR ds:[esi]
  4071d7:	push   0xf5314b08
  4071dc:	jmp    0x4071bb
  4071de:	bound  esp,QWORD PTR [ebx+0x0]
  4071e1:	jne    0x407216
  4071e3:	and    DWORD PTR [esi-0x4fa47d2e],0xffffffe1
  4071ea:	xchg   esi,eax
  4071eb:	dec    ebp
  4071ec:	stos   DWORD PTR es:[edi],eax
  4071ed:	add    BYTE PTR [edi+0x5],ch
  4071f0:	imul   edx,DWORD PTR [ecx-0x25aff6da],0x9d68e553
  4071fa:	pop    ebp
  4071fb:	imul   esi,DWORD PTR [ebx+ebx*4-0x36],0xffffffa5
  407200:	daa    
  407201:	push   ebx
  407202:	imul   ecx,DWORD PTR [ecx],0x7cd4794a
  407208:	add    bh,BYTE PTR [edi+0x722b2096]
  40720e:	sbb    DWORD PTR [ebx-0xa911eff],ebx
  407214:	int    0x89
  407216:	pop    edi
  407217:	mov    ebx,0xde31c600
  40721c:	dec    ecx
  40721d:	jno    0x4cca5e4
  407223:	ret    0x6576
  407226:	les    edi,FWORD PTR [edi+0x1b89c9ca]
  40722c:	push   ecx
  40722d:	add    al,0xbb
  40722f:	sbb    eax,0x57e43706
  407234:	ror    DWORD PTR [edx-0x2a9fa94b],cl
  40723a:	fimul  DWORD PTR [edx+0x27]
  40723d:	sbb    al,0x1a
  40723f:	or     al,0xb
  407241:	mov    DWORD PTR [ebp+0x375cacfa],edx
  407247:	pop    esp
  407248:	jecxz  0x4071e6
  40724a:	lds    esi,FWORD PTR es:[edi]
  40724d:	push   ecx
  40724e:	cmp    esi,esp
  407250:	push   edi
  407251:	jmpw   0x9361
  407255:	inc    esp
  407256:	idiv   BYTE PTR [ecx-0x1c]
  407259:	dec    esi
  40725a:	lock mov ah,0xe4
  40725d:	(bad)  
  40725e:	ret    0x7e94
  407261:	jbe    0x407275
  407263:	sbb    ebp,DWORD PTR [edi-0x44]
  407266:	call   0xa773:0xbe024b44
  40726d:	(bad)  [esi+0x26]
  407270:	xchg   esp,eax
  407271:	add    al,0x60
  407273:	xor    ebp,eax
  407275:	or     ebp,DWORD PTR [eax]
  407277:	mov    ds:0x31254b12,eax
  40727c:	or     BYTE PTR [eax-0x65],bl
  40727f:	and    DWORD PTR [edi-0x70],0x82ab4815
  407286:	icebp  
  407287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407288:	pop    ebp
  407289:	jmp    0x962eaeb
  40728e:	xlat   BYTE PTR ds:[bx]
  407290:	sbb    eax,0xc08537d
  407295:	jmp    0xc096468
  40729a:	jmp    0x4072b2
  40729c:	popa   
  40729d:	dec    esp
  40729e:	push   eax
  40729f:	scas   al,BYTE PTR es:[edi]
  4072a0:	and    BYTE PTR ds:0xe1614dd8,bh
  4072a6:	mov    edx,ebp
  4072a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072a9:	push   eax
  4072aa:	popf   
  4072ab:	push   edx
  4072ac:	push   ds
  4072ad:	mov    ds:0x9f482435,al
  4072b2:	and    DWORD PTR [edx+ebp*1+0x166f25eb],edx
  4072b9:	in     al,0x13
  4072bb:	inc    eax
  4072bc:	cmp    ch,BYTE PTR [edx+0x78e22e70]
  4072c2:	push   edi
  4072c3:	es scas eax,DWORD PTR es:[edi]
  4072c5:	push   ss
  4072c6:	jnp    0x407334
  4072c8:	xchg   esp,eax
  4072c9:	mov    dh,0x7c
  4072cb:	jl     0x4072cc
  4072cd:	popa   
  4072ce:	outs   dx,DWORD PTR ds:[esi]
  4072cf:	xor    dh,ah
  4072d1:	pop    ebp
  4072d2:	mov    eax,0x5e0cef45
  4072d7:	fucom  st(3)
  4072d9:	mov    dl,0xa1
  4072db:	add    dl,al
  4072dd:	cmp    DWORD PTR [edi+0x7d46b2ea],ebx
  4072e3:	cwde   
  4072e4:	cmp    DWORD PTR [eax+0x20788d72],eax
  4072ea:	lock sbb eax,0x2e205bb7
  4072f0:	retf   
  4072f1:	outs   dx,DWORD PTR ds:[esi]
  4072f2:	inc    edi
  4072f3:	jnp    0x40727b
  4072f5:	call   0xa816:0x9a72199c
  4072fc:	add    al,0x9
  4072fe:	jns    0x4072f3
  407300:	xchg   edi,eax
  407301:	sub    DWORD PTR [ecx],edi
  407303:	out    0x3b,eax
  407305:	cld    
  407306:	out    dx,al
  407307:	xor    eax,0xff8c9bf7
  40730c:	mov    ebx,0x93b04822
  407311:	popf   
  407312:	daa    
  407313:	pusha  
  407314:	lods   al,BYTE PTR ds:[esi]
  407315:	jns    0x4072e3
  407317:	lods   al,BYTE PTR ds:[esi]
  407318:	adc    BYTE PTR ds:0x98b58df5,0x40
  40731f:	dec    esi
  407320:	pop    ebx
  407321:	xchg   ebx,eax
  407322:	pop    ecx
  407323:	stc    
  407324:	pop    ebp
  407325:	xor    eax,0x9d7b2b33
  40732a:	test   al,0x12
  40732c:	nop
  40732d:	mov    ebx,DWORD PTR [ebx-0x114262e6]
  407333:	xchg   bh,bh
  407335:	out    dx,eax
  407336:	in     eax,0x1
  407338:	xchg   DWORD PTR [edx+edi*4-0x5fb04e90],eax
  40733f:	xor    DWORD PTR [eax-0x36],eax
  407342:	mov    ch,BYTE PTR [ebx-0x4e]
  407345:	sbb    bl,BYTE PTR [ebp-0x2a]
  407348:	stc    
  407349:	add    DWORD PTR [ecx+0x28],0xffffffb5
  40734d:	xor    eax,0x8187b59c
  407352:	xchg   ebx,eax
  407353:	jle    0x4073c6
  407355:	stos   DWORD PTR es:[edi],eax
  407356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407357:	aas    
  407358:	in     eax,0x95
  40735a:	aas    
  40735b:	mov    ah,0xd5
  40735d:	mov    ds:0xae48e033,al
  407362:	mov    cl,0xb2
  407364:	cmp    edx,DWORD PTR es:[ecx+0x55a308ba]
  40736b:	retf   
  40736c:	mov    dl,0xc
  40736e:	jg     0x40733f
  407370:	xchg   edi,eax
  407371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407372:	cmc    
  407373:	fidiv  DWORD PTR [ecx]
  407375:	cwde   
  407376:	adc    esi,ebx
  407378:	cmc    
  407379:	sbb    ebx,DWORD PTR [ebp+0x2026c6fd]
  40737f:	dec    ecx
  407380:	call   0x93e8:0x53c58dbd
  407387:	fs (bad) 
  40738a:	add    al,0x3c
  40738c:	imul   ecx,DWORD PTR [ecx+ebp*8+0x68],0xae3839e5
  407394:	mov    esp,0x236fe1bb
  407399:	shr    esp,1
  40739b:	mov    edi,0xd1336339
  4073a0:	pop    esp
  4073a1:	xchg   dh,ah
  4073a3:	js     0x4073ee
  4073a5:	sub    BYTE PTR [edi],dl
  4073a7:	into   
  4073a8:	push   0x49
  4073aa:	das    
  4073ab:	xor    DWORD PTR [ebx+0x2ac77f1f],edi
  4073b1:	lock pusha 
  4073b3:	jge    0x407340
  4073b5:	loop   0x407399
  4073b7:	dec    esi
  4073b8:	jg     0x4073d1
  4073ba:	fdiv   QWORD PTR [edi-0x42]
  4073bd:	cmp    al,0x2a
  4073bf:	fidiv  WORD PTR [edi+0xbff4f31]
  4073c5:	sbb    eax,0x54885b6b
  4073ca:	daa    
  4073cb:	push   ecx
  4073cc:	scas   al,BYTE PTR es:[edi]
  4073cd:	pusha  
  4073ce:	shr    DWORD PTR [esi],1
  4073d0:	sbb    DWORD PTR [eax],eax
  4073d2:	cwde   
  4073d3:	push   ebx
  4073d4:	push   ss
  4073d5:	jmp    0xbcb6e8c5
  4073da:	popf   
  4073db:	gs mov dh,0x49
  4073de:	mov    al,0x30
  4073e0:	sar    edi,cl
  4073e2:	je     0x407455
  4073e4:	sub    al,0x89
  4073e6:	xchg   edi,eax
  4073e7:	(bad)  
  4073e8:	fwait
  4073e9:	clc    
  4073ea:	popa   
  4073eb:	popf   
  4073ec:	shl    bh,cl
  4073ee:	sub    eax,0x7d650838
  4073f3:	add    dl,dl
  4073f5:	ret    
  4073f6:	jle    0x407452
  4073f8:	in     eax,dx
  4073f9:	push   ds
  4073fa:	xchg   ebx,eax
  4073fb:	icebp  
  4073fc:	cli    
  4073fd:	mov    ecx,0x4fa9137f
  407402:	outs   dx,BYTE PTR ds:[esi]
  407403:	xchg   esi,esp
  407405:	in     al,dx
  407406:	and    al,0x8f
  407408:	pop    ebp
  407409:	add    al,dl
  40740b:	test   al,0xa4
  40740d:	push   esi
  40740e:	jns    0x4073ed
  407410:	inc    eax
  407411:	pop    ss
  407412:	push   ss
  407413:	retf   0x2880
  407416:	or     dl,BYTE PTR [edx-0x68f48e5b]
  40741c:	push   0xafde824e
  407421:	push   ebx
  407422:	retf   0xd8ae
  407425:	mov    ah,0xcb
  407427:	or     al,dl
  407429:	push   es
  40742a:	dec    ebp
  40742b:	sub    ch,BYTE PTR [edi-0x17b6cc7b]
  407431:	(bad)  
  407432:	out    dx,eax
  407433:	(bad)  
  407434:	mov    ds:0x2c7c006e,eax
  407439:	popf   
  40743a:	or     eax,0x9d33775a
  40743f:	mov    esp,0x69d65f34
  407444:	ror    DWORD PTR [esi-0x34],cl
  407447:	test   ax,0x1e91
  40744b:	popa   
  40744c:	data16 add al,0x7d
  40744f:	test   DWORD PTR [edx+0x47],ebx
  407452:	and    dl,BYTE PTR [esi]
  407454:	cmp    ah,BYTE PTR [ebp+0x5b]
  407457:	cmp    cl,BYTE PTR [ecx+0x4211f633]
  40745d:	and    al,BYTE PTR [eax+0x18af5c67]
  407463:	pushf  
  407464:	repnz popa 
  407466:	aas    
  407467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407468:	mov    cl,dl
  40746a:	repnz rcl BYTE PTR [ebx+0x2c3b3155],cl
  407471:	aad    0x5c
  407473:	add    bl,dl
  407475:	dec    esi
  407476:	adc    al,0x51
  407478:	enter  0xab29,0xc7
  40747c:	dec    ebx
  40747d:	mov    edx,0xe5f00d13
  407482:	sbb    ch,BYTE PTR [ecx]
  407484:	and    al,0xe0
  407486:	fidiv  DWORD PTR [esi-0x718b664b]
  40748c:	pushf  
  40748d:	div    esp
  40748f:	(bad)  
  407490:	std    
  407491:	aam    0xb5
  407493:	sbb    esi,DWORD PTR [ebp-0x7d]
  407496:	push   0x2f6815cd
  40749b:	clc    
  40749c:	xor    al,BYTE PTR [ecx]
  40749e:	fiadd  WORD PTR [ecx-0x1d]
  4074a1:	adc    eax,0x2f6d16c
  4074a6:	mov    dh,0x61
  4074a8:	sub    eax,0x60ed5624
  4074ad:	outs   dx,DWORD PTR ds:[esi]
  4074ae:	scas   eax,DWORD PTR es:[edi]
  4074af:	xchg   edx,eax
  4074b0:	hlt    
  4074b1:	push   0x9
  4074b3:	jb     0x407495
  4074b5:	shl    edi,0x52
  4074b8:	xor    al,0x52
  4074ba:	fild   QWORD PTR [esi-0x4b13a064]
  4074c0:	sahf   
  4074c1:	mov    DWORD PTR [esi+ebp*4],ecx
  4074c4:	add    bl,dh
  4074c6:	push   edi
  4074c7:	and    eax,0xd6118be0
  4074cc:	adc    DWORD PTR [esi],edi
  4074ce:	sub    eax,0x9e5a89ca
  4074d3:	pop    edx
  4074d4:	mov    BYTE PTR [eax+0x5f],ch
  4074d7:	not    BYTE PTR [ebp+0x665e12cd]
  4074dd:	xchg   DWORD PTR cs:[ebx],ecx
  4074e0:	inc    edx
  4074e1:	fiadd  WORD PTR [edi+esi*2]
  4074e4:	outs   dx,BYTE PTR ds:[esi]
  4074e5:	test   DWORD PTR [eax+ebx*8-0x1b],ebx
  4074e9:	mov    ds:0x51c88e32,eax
  4074ee:	ins    BYTE PTR es:[edi],dx
  4074ef:	data16 cmc 
  4074f1:	shr    BYTE PTR [eax],1
  4074f3:	inc    edi
  4074f4:	test   DWORD PTR [ecx],edx
  4074f6:	inc    ecx
  4074f7:	jl     0x407529
  4074f9:	scas   al,BYTE PTR es:[edi]
  4074fa:	je     0x4074d5
  4074fc:	int3   
  4074fd:	ror    DWORD PTR [edx-0x10],0x2
  407501:	lea    ecx,[eax-0x6fd36c62]
  407507:	in     al,dx
  407508:	push   ebx
  407509:	pop    esp
  40750a:	xor    ebp,ecx
  40750c:	pop    esp
  40750d:	jbe    0x40753b
  40750f:	push   cs
  407510:	mov    ah,0xc8
  407512:	cmp    al,0xe2
  407514:	sub    DWORD PTR [esi+0x3e],0x2a
  407518:	shr    ebp,cl
  40751a:	sub    al,0x5a
  40751c:	inc    ebx
  40751d:	push   ebp
  40751e:	das    
  40751f:	cdq    
  407520:	lds    edi,FWORD PTR [edi+0x10eb6a8a]
  407526:	xlat   BYTE PTR ds:[ebx]
  407527:	ss dec esp
  407529:	sub    DWORD PTR [eax+0x42],esi
  40752c:	mov    ebx,0x632a0688
  407531:	push   esp
  407532:	cmp    ah,BYTE PTR [edi+0x43]
  407535:	mov    BYTE PTR [ebx+0x275ddaeb],bh
  40753b:	lahf   
  40753c:	or     al,0xda
  40753e:	scas   al,BYTE PTR es:[edi]
  40753f:	cmp    DWORD PTR [ebx-0x30b84e2c],ebp
  407545:	scas   eax,DWORD PTR es:[edi]
  407546:	add    DWORD PTR [eax+0x51],0x7e0f84fb
  40754d:	cmp    eax,0xd5aa82c2
  407552:	pop    esi
  407553:	mov    ebx,0xd14ed428
  407558:	ds dec eax
  40755a:	add    bh,BYTE PTR [ebx+0x3a4d4d7b]
  407560:	iret   
  407561:	imul   ebx,DWORD PTR [ecx+0x18692c8d],0xfffffff8
  407568:	retf   
  407569:	xor    al,0x45
  40756b:	xchg   esp,eax
  40756c:	out    dx,eax
  40756d:	aas    
  40756e:	ja     0x4075be
  407570:	dec    edx
  407571:	lds    edx,FWORD PTR [ecx-0x6c6feec8]
  407577:	stos   BYTE PTR es:[edi],al
  407578:	(bad)  
  407579:	mov    edi,0xceb867e6
  40757e:	sbb    eax,0xf207e061
  407583:	lea    edi,[edx-0x69]
  407586:	ins    DWORD PTR es:[edi],dx
  407587:	mov    esp,0xad8f6c17
  40758c:	fcom   DWORD PTR ds:0x9c28f0c6
  407592:	lds    ebp,FWORD PTR [esi+0x74529d28]
  407598:	add    esp,DWORD PTR [esi-0x2bb16e31]
  40759e:	sbb    DWORD PTR [ecx-0x32acf07b],eax
  4075a4:	popa   
  4075a5:	outs   dx,DWORD PTR ds:[esi]
  4075a6:	fwait
  4075a7:	adc    BYTE PTR [eax],ah
  4075a9:	mov    ds:0x70576336,eax
  4075ae:	call   0x8b5d12b
  4075b3:	aaa    
  4075b4:	out    0x28,eax
  4075b6:	int3   
  4075b7:	inc    eax
  4075b8:	cmp    ebp,ecx
  4075ba:	pop    es
  4075bb:	idiv   DWORD PTR [ebp+0x7e]
  4075be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075bf:	sub    al,0xc1
  4075c1:	mov    edx,0xda902492
  4075c6:	sbb    dh,bl
  4075c8:	mov    esi,0x89b68604
  4075cd:	jmp    0x407561
  4075cf:	or     BYTE PTR ds:0x23937508,0xaf
  4075d6:	inc    esi
  4075d7:	enter  0x37dc,0xf6
  4075db:	std    
  4075dc:	ret    
  4075dd:	xlat   BYTE PTR ds:[ebx]
  4075de:	lds    eax,FWORD PTR [ebx]
  4075e0:	mov    ds:0xe7dc2a4c,eax
  4075e5:	mov    edx,0xb6bdb354
  4075ea:	inc    ebp
  4075eb:	setle  BYTE PTR [esi+0x37]
  4075ef:	pop    edx
  4075f0:	inc    ch
  4075f2:	test   BYTE PTR [edx],dh
  4075f4:	sbb    eax,0x92f1aae1
  4075f9:	call   0xc489:0x13254a10
  407600:	fxch   st(4)
  407602:	call   0x85fa:0x694d4bdd
  407609:	dec    ebx
  40760a:	(bad)  
  40760b:	popa   
  40760c:	popa   
  40760d:	repz test bh,ch
  407610:	fnstcw WORD PTR [ebp-0x50b21a43]
  407616:	cwde   
  407617:	inc    edi
  407618:	sbb    BYTE PTR [edx-0x5c],ch
  40761b:	daa    
  40761c:	pop    eax
  40761d:	add    BYTE PTR [edx+ebp*4+0x145fedaa],0x70
  407625:	fiadd  WORD PTR [ebx+ecx*2+0x388f69d7]
  40762c:	push   edi
  40762d:	(bad)
  407630:	lahf   
  407631:	call   0xd3cb4627
  407636:	rol    DWORD PTR [edx+eiz*4+0x34e8e3ea],1
  40763d:	inc    esi
  40763e:	sahf   
  40763f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407640:	jp     0x407675
  407642:	test   eax,0x3823023d
  407647:	imul   ebx,DWORD PTR [esi],0xffffffa5
  40764a:	ficom  WORD PTR [ecx]
  40764c:	shl    eax,1
  40764e:	mov    ecx,0x735d3af6
  407653:	aaa    
  407654:	stos   BYTE PTR es:[di],al
  407656:	pop    ebp
  407657:	pusha  
  407658:	jnp    0x40764b
  40765a:	repnz mov esi,0xd7c86d77
  407660:	jno    0x4076cc
  407662:	pop    es
  407663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407664:	fadd   DWORD PTR [edi]
  407666:	mov    es,WORD PTR [esi+0x258d622]
  40766c:	mov    BYTE PTR [esi+0x31],dl
  40766f:	xchg   ebp,eax
  407670:	mov    ebp,0xf1074662
  407675:	pop    ecx
  407676:	cld    
  407677:	adc    esi,DWORD PTR [ebp+0x54]
  40767a:	pxor   mm4,mm1
  40767d:	pusha  
  40767e:	push   eax
  40767f:	mov    ebp,esi
  407681:	(bad)  
  407682:	loopne 0x4076a2
  407684:	jmp    0xa21c:0xdb73fce8
  40768b:	mov    bl,0xc4
  40768d:	adc    ebp,DWORD PTR [ebx+0x25]
  407690:	mov    eax,ds:0x800c966e
  407695:	frstor [edi+0x7f24918c]
  40769b:	fld    DWORD PTR [ecx]
  40769d:	dec    ebx
  40769e:	jg     0x40764a
  4076a0:	inc    ebp
  4076a1:	mov    edx,0x5c63687d
  4076a6:	jmp    0x3990:0x7d53fc19
  4076ad:	pop    ss
  4076ae:	cmp    eax,0xc5b9da33
  4076b3:	int    0x1d
  4076b5:	jmp    0x46f2:0x24054c1
  4076bc:	cli    
  4076bd:	xchg   esp,eax
  4076be:	ror    ah,0x90
  4076c1:	jg     0x407683
  4076c3:	test   eax,0x428f204a
  4076c8:	mov    WORD PTR [ebp+0x419d576],ds
  4076ce:	icebp  
  4076cf:	sbb    edx,DWORD PTR [ebx+0x6e]
  4076d2:	clc    
  4076d3:	jne    0x4076d8
  4076d5:	mov    ds:0x7f5d4836,eax
  4076da:	push   ds
  4076db:	mov    dl,BYTE PTR [edi]
  4076dd:	scas   al,BYTE PTR es:[edi]
  4076de:	and    dl,BYTE PTR [edi+0x1d254019]
  4076e4:	shr    BYTE PTR [ebp+0x34],0x8a
  4076e8:	jg     0x40767d
  4076ea:	ja     0x407735
  4076ec:	les    edi,FWORD PTR [ebx-0x1d]
  4076ef:	mov    al,BYTE PTR [ecx+0x38]
  4076f2:	push   0xffffffea
  4076f4:	xchg   edi,eax
  4076f5:	push   ebx
  4076f6:	push   es
  4076f7:	cmp    cl,bh
  4076f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076fa:	lea    eax,[edi+eax*8+0x61]
  4076fe:	add    al,0x2a
  407700:	and    dl,bl
  407702:	mov    ah,0xb3
  407704:	mov    ecx,0x11499470
  407709:	inc    edx
  40770a:	add    edx,DWORD PTR [esi+0xd7b986b]
  407710:	mul    DWORD PTR [ebx+0x34]
  407713:	mov    edi,edi
  407715:	sahf   
  407716:	cmp    BYTE PTR [esi+0x2f1e1f5b],0x1d
  40771d:	fidiv  DWORD PTR [ebp+0x47c8e547]
  407723:	mov    dl,0x94
  407725:	dec    ecx
  407726:	enter  0x152a,0x63
  40772a:	sub    edi,DWORD PTR [ebp+0x19837f11]
  407730:	scas   al,BYTE PTR es:[edi]
  407731:	mov    bh,0xea
  407733:	jmp    0x36c95bc9
  407738:	pop    edi
  407739:	shl    DWORD PTR [esi+ebp*8-0x20],0xcc
  40773e:	mov    DWORD PTR [edi-0x3c],0xc7fad739
  407745:	inc    ecx
  407746:	(bad)  
  407747:	push   0xffffff8a
  407749:	div    ecx
  40774b:	(bad)  
  40774c:	pop    ds
  40774d:	(bad)  
  40774e:	fcom   QWORD PTR [edi]
  407750:	arpl   WORD PTR ds:0xfed5cf25,di
  407756:	es xchg ebp,eax
  407758:	call   DWORD PTR [ecx-0x43]
  40775b:	inc    esi
  40775c:	dec    ecx
  40775d:	sar    edx,cl
  40775f:	in     eax,0xd4
  407761:	pop    ss
  407762:	pop    ds
  407763:	adc    esi,DWORD PTR [eax-0x61]
  407766:	hlt    
  407767:	xor    bh,ah
  407769:	push   ebx
  40776a:	mov    ds:0x5ea34bf6,al
  40776f:	mov    ds:0xa44279d6,al
  407774:	fwait
  407775:	sub    eax,0xd52ab9dd
  40777a:	xor    DWORD PTR [ebp-0x10],0xffffffc9
  40777e:	rcr    DWORD PTR [ecx+0x3185c785],0x43
  407785:	inc    esp
  407786:	call   FWORD PTR [esi]
  407788:	(bad)  
  407789:	mov    ebx,0x90caf68b
  40778e:	int    0xae
  407790:	jno    0x407714
  407792:	out    0xa6,al
  407794:	mov    dh,BYTE PTR [edx+0x71]
  407797:	cmp    al,0xf1
  407799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40779a:	and    eax,0x8c62e423
  40779f:	mov    al,0x9b
  4077a1:	das    
  4077a2:	mov    bl,0x6c
  4077a4:	imul   edx,edi,0xa09ca2a6
  4077aa:	lods   eax,DWORD PTR gs:[esi]
  4077ac:	dec    esp
  4077ad:	test   eax,0xa57da05d
  4077b2:	fidivr DWORD PTR [edi+0x3f]
  4077b5:	test   DWORD PTR [ebx],edi
  4077b7:	mov    DWORD PTR [ecx+0x46],ecx
  4077ba:	ret    
  4077bb:	test   eax,0xb60129e3
  4077c0:	pop    esi
  4077c1:	mov    WORD PTR [ebx+eiz*2-0x54],es
  4077c5:	mov    bh,0x2a
  4077c7:	mov    ds:0x53348f47,al
  4077cc:	imul   esi,DWORD PTR [edx+edx*2+0x1b92ec8e],0x46
  4077d4:	lock mov ebp,0xfd71b6ab
  4077da:	cli    
  4077db:	aaa    
  4077dc:	mov    ds:0xbbfdb21f,eax
  4077e1:	pop    edi
  4077e2:	pop    esp
  4077e3:	add    al,0x20
  4077e5:	xor    edx,DWORD PTR [edx+0x4c6b9957]
  4077eb:	inc    ebp
  4077ec:	xchg   edx,eax
  4077ed:	and    BYTE PTR [eax],bl
  4077ef:	mov    ch,0x10
  4077f1:	jae    0x4077b7
  4077f3:	clc    
  4077f4:	pop    edi
  4077f5:	dec    esp
  4077f6:	inc    edi
  4077f7:	int    0x41
  4077f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077fa:	sbb    DWORD PTR [esi-0x371010a2],eax
  407800:	jb     0x4077e4
  407802:	cwde   
  407803:	in     al,dx
  407804:	xor    edi,DWORD PTR [esi]
  407806:	daa    
  407807:	int    0x1e
  407809:	jnp    0x407851
  40780b:	aaa    
  40780c:	out    dx,eax
  40780d:	adc    al,0x21
  40780f:	fdivp  st(7),st
  407811:	add    BYTE PTR [ebp-0x729d7441],0xd7
  407818:	xor    al,0x6f
  40781a:	or     al,0x2e
  40781c:	fwait
  40781d:	sbb    dh,al
  40781f:	pop    ebp
  407820:	xchg   ebp,eax
  407821:	out    0xe9,eax
  407823:	xchg   esp,eax
  407824:	xchg   ebp,eax
  407825:	cdq    
  407826:	lahf   
  407827:	pop    ebx
  407828:	je     0x407835
  40782a:	push   edi
  40782b:	mov    dh,0x90
  40782d:	mov    al,ds:0xf75e4807
  407832:	xchg   edx,eax
  407833:	shl    BYTE PTR [ebp+ebx*8+0x3182a15a],1
  40783a:	(bad)  
  40783b:	aad    0xfa
  40783d:	aam    0xc8
  40783f:	lods   al,BYTE PTR ds:[esi]
  407840:	jle    0x407813
  407842:	shl    DWORD PTR [ebp-0x4bafcb37],cl
  407848:	cld    
  407849:	adc    esp,ebx
  40784b:	mov    ch,0x27
  40784d:	jne    0x4078b7
  40784f:	mov    al,ds:0x141df82a
  407854:	lods   al,BYTE PTR ds:[esi]
  407855:	aas    
  407856:	or     eax,0x24956bbe
  40785b:	leave  
  40785c:	sbb    edi,DWORD PTR [esi]
  40785e:	jmp    0x31cb:0xa18b08ed
  407865:	cli    
  407866:	add    al,0x48
  407868:	push   esi
  407869:	aaa    
  40786a:	xchg   ecx,eax
  40786b:	push   es
  40786c:	push   0xffffff8a
  40786e:	push   ss
  40786f:	in     al,dx
  407870:	out    0x38,eax
  407872:	inc    esi
  407873:	adc    BYTE PTR [eax],bh
  407875:	test   eax,0xafba26a3
  40787a:	mov    cl,0x9f
  40787c:	push   ss
  40787d:	sub    bl,al
  40787f:	(bad)  
  407881:	std    
  407882:	push   eax
  407883:	mov    al,0xa4
  407885:	int3   
  407886:	int    0x9f
  407888:	sbb    eax,0xe315389f
  40788d:	pop    es
  40788e:	je     0x407896
  407890:	ret    0xfb79
  407893:	add    bl,bl
  407895:	add    ecx,DWORD PTR [edi]
  407897:	pop    ebx
  407898:	push   ss
  407899:	enter  0xca45,0x9e
  40789d:	jg     0x40790a
  40789f:	add    BYTE PTR [esi+0x38f27c4],dh
  4078a5:	push   ecx
  4078a6:	call   0xa6d8:0x3f944e3a
  4078ad:	jle    0x40788b
  4078af:	jmp    0x8dcc1f74
  4078b4:	fnstcw WORD PTR [eax-0x62087c1f]
  4078ba:	retf   
  4078bb:	push   eax
  4078bc:	inc    eax
  4078bd:	jle    0x407845
  4078bf:	fisttp DWORD PTR [esp+eiz*4+0x35ccb078]
  4078c6:	std    
  4078c7:	cmp    eax,0x4fc96f99
  4078cc:	dec    ecx
  4078cd:	cmp    BYTE PTR [ebp-0x37ed4665],cl
  4078d3:	test   al,0x8f
  4078d5:	xchg   edx,eax
  4078d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078d7:	popa   
  4078d8:	and    BYTE PTR [esi],0xf6
  4078db:	sbb    bh,bl
  4078dd:	mov    bl,0x2d
  4078df:	sbb    ebx,ebx
  4078e1:	stc    
  4078e2:	aaa    
  4078e3:	inc    edi
  4078e4:	mov    dh,0xf8
  4078e6:	push   0xffffff88
  4078e8:	xchg   BYTE PTR [ebx+0x1cf0fd2a],bh
  4078ee:	xchg   BYTE PTR [ecx-0x1e74acdc],dh
  4078f4:	xor    edi,DWORD PTR [eax]
  4078f6:	cs fadd st(6),st
  4078f9:	mov    al,ds:0xb7511c74
  4078fe:	sub    al,0xf2
  407900:	sub    eax,0xe414471f
  407905:	and    BYTE PTR [edx-0x24],ch
  407908:	mov    al,BYTE PTR [ebp+0x71eddd0e]
  40790e:	jno    0x40797f
  407910:	sub    al,0xf3
  407912:	push   esi
  407913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407914:	xchg   DWORD PTR [ebp+0x17],ebp
  407917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407918:	es dec esp
  40791a:	fadd   QWORD PTR [ebp+0x717e1aa9]
  407920:	es in  al,0x9f
  407923:	push   eax
  407924:	ins    DWORD PTR es:[edi],dx
  407925:	mov    dh,0xb2
  407927:	xlat   BYTE PTR ds:[ebx]
  407928:	shl    ch,0xc5
  40792b:	lods   eax,DWORD PTR ds:[esi]
  40792c:	(bad)  
  40792e:	pop    ss
  40792f:	jb     0x4078de
  407931:	dec    esi
  407932:	sbb    BYTE PTR [edx+eiz*4+0x1e],bh
  407936:	jnp    0x40791c
  407938:	jbe    0x40794b
  40793a:	inc    esi
  40793b:	pop    ecx
  40793c:	test   BYTE PTR [edx+0x47],al
  40793f:	clc    
  407940:	sbb    eax,0x22b592a1
  407945:	xor    BYTE PTR [edx-0x37b27dd9],dh
  40794b:	lods   al,BYTE PTR ds:[esi]
  40794c:	cmp    BYTE PTR [eax-0x4f543cbb],0x42
  407953:	jo     0x4078d8
  407955:	fidiv  DWORD PTR [ecx-0x1289ae11]
  40795b:	ss fsub st,st(4)
  40795e:	sub    ebx,DWORD PTR [eax+0x32]
  407961:	nop
  407962:	adc    al,0xa0
  407964:	into   
  407965:	sbb    BYTE PTR [eax+edx*8+0x30fad557],bl
  40796c:	dec    esp
  40796d:	push   0xffffff98
  40796f:	add    DWORD PTR [ecx],0xffffff80
  407972:	or     eax,0xbc2a9d90
  407977:	jp     0x407917
  407979:	cmp    bl,BYTE PTR [edi]
  40797b:	xchg   esi,eax
  40797c:	dec    edi
  40797d:	scas   al,BYTE PTR es:[edi]
  40797e:	and    al,0xe8
  407980:	inc    eax
  407981:	add    esp,DWORD PTR [ecx]
  407983:	fcom   QWORD PTR [eax-0x42a4f0aa]
  407989:	inc    eax
  40798a:	imul   ecx,DWORD PTR [ecx-0x12bb9d19],0xd0db78f3
  407994:	jb     0x4079e4
  407996:	dec    ebp
  407997:	pop    edi
  407998:	jns    0x40794e
  40799a:	ins    DWORD PTR es:[edi],dx
  40799b:	push   0xffffffa9
  40799d:	mov    ebp,0x80539cf3
  4079a2:	mov    al,ds:0xb9a1a312
  4079a7:	push   ss
  4079a8:	mov    WORD PTR [ebx],fs
  4079aa:	idiv   DWORD PTR [ecx-0x37d4d859]
  4079b0:	fdiv   QWORD PTR [esi+0x2b]
  4079b3:	test   al,0x6a
  4079b5:	jge    0x407999
  4079b7:	lods   al,BYTE PTR ds:[esi]
  4079b8:	push   cs
  4079b9:	jne    0x407a32
  4079bb:	int3   
  4079bc:	sub    BYTE PTR [esi+0x6d],0xb5
  4079c0:	jle    0x407a3d
  4079c2:	mov    ch,0x36
  4079c4:	lods   al,BYTE PTR ds:[esi]
  4079c5:	neg    DWORD PTR [ebx-0x63]
  4079c8:	or     DWORD PTR [ebx+0x6],eax
  4079cb:	mov    al,0xa8
  4079cd:	xor    BYTE PTR gs:[esi],0xed
  4079d1:	xor    al,BYTE PTR [ebx-0x14eca665]
  4079d7:	out    dx,eax
  4079d8:	push   0x3d
  4079da:	hlt    
  4079db:	ins    BYTE PTR es:[edi],dx
  4079dc:	ins    BYTE PTR es:[edi],dx
  4079dd:	std    
  4079de:	les    edx,FWORD PTR [ecx]
  4079e0:	pop    edi
  4079e1:	loopne 0x4079e5
  4079e3:	jns    0x407a23
  4079e5:	xor    DWORD PTR gs:[edi+eiz*1+0x34d4966e],edi
  4079ed:	stos   BYTE PTR es:[edi],al
  4079ee:	mov    cl,0x3f
  4079f0:	pop    edi
  4079f1:	push   edi
  4079f2:	dec    ebx
  4079f3:	jmp    0x407a58
  4079f5:	rcl    DWORD PTR [edx-0x16],cl
  4079f8:	stos   BYTE PTR es:[edi],al
  4079f9:	and    bl,cl
  4079fb:	mov    bl,0xff
  4079fd:	mov    ds:0xc141baca,eax
  407a02:	adc    DWORD PTR [ecx+0x73625a43],esp
  407a08:	inc    edi
  407a09:	and    al,0xa9
  407a0b:	popf   
  407a0c:	stos   BYTE PTR es:[edi],al
  407a0d:	xchg   ebx,eax
  407a0e:	leave  
  407a0f:	mov    ecx,0xb31e035f
  407a14:	in     eax,0x20
  407a16:	es jg  0x407a93
  407a19:	aad    0xae
  407a1b:	or     dh,al
  407a1d:	mov    BYTE PTR [edx-0x2c],ah
  407a20:	ret    
  407a21:	imul   edi,DWORD PTR [eax-0x30b89960],0xfc1bcf74
  407a2b:	jg     0x4079fe
  407a2d:	mov    ecx,0x5090aa8
  407a32:	cmp    bh,dl
  407a34:	pop    esp
  407a35:	pop    esp
  407a36:	scas   al,BYTE PTR es:[edi]
  407a37:	add    al,0x4d
  407a39:	gs popf 
  407a3b:	js     0x407a94
  407a3d:	sub    eax,0xb8c9b0ee
  407a42:	call   0xc2c4e374
  407a47:	(bad)  
  407a49:	ret    0xc92b
  407a4c:	mov    al,0xc2
  407a4e:	sbb    dl,BYTE PTR [edi+0x5b6a6fdd]
  407a54:	es sbb eax,0xc32757ea
  407a5a:	dec    ebp
  407a5b:	or     eax,0xa6515a97
  407a60:	pusha  
  407a61:	sub    edi,DWORD PTR [edx]
  407a63:	cdq    
  407a64:	push   es
  407a65:	out    dx,al
  407a66:	(bad)  
  407a67:	push   esp
  407a68:	add    BYTE PTR [ebx],dh
  407a6a:	retf   0x3038
  407a6d:	pop    esi
  407a6e:	(bad)
  407a72:	add    ebp,DWORD PTR [edx-0x54]
  407a75:	pop    ds
  407a76:	mov    esi,0x5ea42282
  407a7b:	ins    DWORD PTR es:[edi],dx
  407a7c:	cld    
  407a7d:	pop    esp
  407a7e:	ins    DWORD PTR es:[edi],dx
  407a7f:	rol    DWORD PTR [ecx-0x6f4975bd],0xa
  407a86:	mov    eax,0x242e2a7b
  407a8b:	and    edx,DWORD PTR [esi+0x42]
  407a8e:	repnz stos BYTE PTR es:[edi],al
  407a90:	inc    esp
  407a91:	add    DWORD PTR [edx-0x54],eax
  407a94:	test   dl,0xdd
  407a97:	sub    BYTE PTR [esi+0x7f977060],0x49
  407a9e:	sub    cl,bl
  407aa0:	je     0x407a24
  407aa2:	out    0xdb,eax
  407aa4:	std    
  407aa5:	iret   
  407aa6:	jg     0x407ac7
  407aa8:	lock (bad) 
  407aaa:	jmp    0x407ac5
  407aac:	adc    bl,BYTE PTR [edi-0xe107ad]
  407ab2:	push   0x7712044b
  407ab7:	cmp    al,0x42
  407ab9:	imul   esi,DWORD PTR [ecx-0x60690568],0x3f
  407ac0:	adc    DWORD PTR [esi+0x11],edx
  407ac3:	shl    DWORD PTR [esi-0x59],cl
  407ac6:	jge    0x407a5a
  407ac8:	lahf   
  407ac9:	pop    ss
  407aca:	jmp    0x831772a0
  407acf:	mov    ebp,0xf7c18fbf
  407ad4:	data16 test al,0xd1
  407ad7:	lock jns 0x407b19
  407ada:	xor    al,0x4e
  407adc:	jno    0x407ad2
  407ade:	stos   DWORD PTR es:[edi],eax
  407adf:	in     al,dx
  407ae0:	xor    al,dl
  407ae2:	jb     0x407b00
  407ae4:	xchg   ebx,eax
  407ae5:	xchg   BYTE PTR cs:[eax+0x34],al
  407ae9:	jecxz  0x407b4f
  407aeb:	push   ds
  407aec:	mov    BYTE PTR [ebp-0x2f1d50c5],ch
  407af2:	jnp    0x407b12
  407af4:	sahf   
  407af5:	in     al,0x4
  407af7:	test   DWORD PTR [ebx+0x54],edi
  407afa:	icebp  
  407afb:	test   al,0xea
  407afd:	mov    esp,0xb9ba2b26
  407b02:	cmp    bl,BYTE PTR [eax]
  407b04:	test   DWORD PTR [ebx+0x46],eax
  407b07:	mov    esp,0x8ba8c702
  407b0c:	mov    al,0xbb
  407b0e:	stos   BYTE PTR es:[edi],al
  407b0f:	std    
  407b10:	mov    bh,0x5f
  407b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b13:	pop    es
  407b14:	push   0x20a97326
  407b19:	cmp    BYTE PTR [edi+0x1c03d02f],ch
  407b1f:	push   0xffffffc8
  407b21:	popf   
  407b22:	adc    edi,edi
  407b24:	sbb    esi,ebx
  407b26:	shl    dl,1
  407b28:	and    DWORD PTR [esi-0x77],ebp
  407b2b:	popa   
  407b2c:	xchg   bh,dh
  407b2e:	adc    eax,0xbae0d56b
  407b33:	stos   DWORD PTR es:[edi],eax
  407b34:	dec    eax
  407b35:	add    al,0x4c
  407b37:	outs   dx,BYTE PTR ds:[esi]
  407b38:	push   0xffffff88
  407b3a:	aam    0x21
  407b3c:	inc    ebp
  407b3d:	xor    edi,ecx
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x749370e0
  407e5b:	aaa    
  407e5c:	(bad)  
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	(bad)  
  407e66:	lods   eax,DWORD PTR ds:[esi]
  407e67:	inc    esp
  407e68:	pop    ebx
  407e69:	xor    eax,0x5be60f11
  407e6e:	popf   
  407e6f:	test   al,0x79
  407e71:	rol    bh,0xc9
  407e74:	mov    eax,0xc64fed63
  407e79:	in     eax,dx
  407e7a:	test   al,0xa6
  407e7c:	sbb    eax,0x721ec0ae
  407e81:	retf   0xa658
  407e84:	add    cl,BYTE PTR [ebx-0x5ea91cad]
  407e8a:	pop    ebx
  407e8b:	jb     0x407e50
  407e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e8e:	lea    esi,[ebp-0x20c4ff84]
  407e94:	sub    DWORD PTR [esi-0x23],ebp
  407e97:	xor    eax,0xcad41c85
  407e9c:	sbb    edi,ebp
  407e9e:	repz jo 0x407eb4
  407ea1:	ficom  WORD PTR [edi]
  407ea3:	addr16 sahf 
  407ea5:	inc    esi
  407ea6:	fimul  WORD PTR [edi]
  407ea8:	add    eax,0xf17c7573
  407ead:	int3   
  407eae:	lods   al,BYTE PTR ds:[esi]
  407eaf:	fldcw  WORD PTR [edx]
  407eb1:	add    al,0xda
  407eb3:	pop    ds
  407eb4:	popf   
  407eb5:	aad    0xb9
  407eb7:	pop    ds
  407eb8:	je     0x407ef9
  407eba:	data16 rcl BYTE PTR [edi],0xa5
  407ebe:	mov    edi,0x77ead33d
  407ec3:	mov    dl,0x5b
  407ec5:	xchg   esp,eax
  407ec6:	js     0x407ea0
  407ec8:	test   eax,0x663d0499
  407ecd:	mov    bl,0x23
  407ecf:	lds    esp,FWORD PTR [eax]
  407ed1:	jmp    0x407e7f
  407ed3:	imul   eax,DWORD PTR [edi],0x7545cd8f
  407ed9:	mov    WORD PTR [ecx-0x5db29b1d],ss
  407edf:	mov    ah,0xfc
  407ee1:	mov    ch,0xbe
  407ee3:	pop    edi
  407ee4:	retf   
  407ee5:	ror    BYTE PTR [edi-0x81ef557],0xa9
  407eec:	adc    al,0x22
  407eee:	pause  
  407ef0:	inc    ebp
  407ef1:	inc    ebx
  407ef2:	jle    0x407f01
  407ef4:	adc    BYTE PTR [ebx],ah
  407ef6:	pop    esp
  407ef7:	int    0x9e
  407ef9:	sahf   
  407efa:	sub    DWORD PTR [edi],esp
  407efc:	pop    esi
  407efd:	pop    esp
  407efe:	stos   DWORD PTR es:[edi],eax
  407eff:	jne    0x407f75
  407f01:	outs   dx,DWORD PTR ds:[esi]
  407f02:	jmp    FWORD PTR [edx+ebp*1+0x3ef57f71]
  407f09:	shr    DWORD PTR [ecx+0x566fbfe5],0x95
  407f10:	neg    BYTE PTR [eax-0x12f1a4e9]
  407f16:	or     ax,0x2be
  407f1a:	ret    0x5b15
  407f1d:	push   0xfffffffc
  407f1f:	rcl    BYTE PTR [edx-0x761265c1],cl
  407f25:	mov    ch,0xfd
  407f27:	push   esp
  407f28:	lock pop ebp
  407f2a:	not    BYTE PTR [ecx]
  407f2c:	push   ss
  407f2d:	mov    bh,0x84
  407f2f:	pop    eax
  407f30:	push   eax
  407f31:	aas    
  407f32:	mov    dh,0x1e
  407f34:	ss jno 0x407eda
  407f37:	test   dl,bh
  407f39:	test   BYTE PTR [eax+eiz*4-0x52617fbd],0x4b
  407f41:	adc    DWORD PTR [ebp-0x590248cf],edi
  407f47:	scas   al,BYTE PTR es:[edi]
  407f48:	cmp    BYTE PTR [ecx],0xd
  407f4b:	sbb    al,ch
  407f4d:	add    dh,0xa2
  407f50:	or     al,0xe8
  407f52:	mov    bl,BYTE PTR [ecx]
  407f54:	lods   al,BYTE PTR ds:[esi]
  407f55:	je     0x407fae
  407f57:	jno    0x407fa4
  407f59:	mov    ch,0xbb
  407f5b:	jmp    0xd77b3e31
  407f60:	(bad)  
  407f61:	stos   DWORD PTR es:[edi],eax
  407f62:	je     0x407f8c
  407f64:	push   esi
  407f65:	dec    eax
  407f66:	div    DWORD PTR ss:[edx+edi*8+0x34]
  407f6b:	xor    BYTE PTR [ecx+0x3ee803bb],bh
  407f71:	lods   al,BYTE PTR ds:[esi]
  407f72:	lds    eax,FWORD PTR [esi+0x14]
  407f75:	or     al,0x73
  407f77:	sub    eax,0x6b0b32cb
  407f7c:	inc    edi
  407f7d:	call   0x56f8:0x2d70b4a8
  407f84:	push   ebp
  407f85:	sub    ebx,DWORD PTR [eax-0x46]
  407f88:	ficomp WORD PTR [ebx]
  407f8a:	sub    edx,0xe8f82
  407f90:	and    esp,edi
  407f92:	stos   WORD PTR es:[edi],ax
  407f94:	jl     0x407f53
  407f96:	dec    edi
  407f97:	scas   al,BYTE PTR es:[edi]
  407f98:	pop    ebp
  407f99:	fld    st(6)
  407f9b:	fild   WORD PTR [edx+edx*1]
  407f9e:	pop    edi
  407f9f:	ins    DWORD PTR es:[edi],dx
  407fa0:	test   DWORD PTR [ecx-0x76],0xffca814d
  407fa7:	jns    0x407fd6
  407fa9:	lods   al,BYTE PTR ds:[esi]
  407faa:	pop    eax
  407fab:	add    eax,0xf1add5e8
  407fb0:	pop    eax
  407fb1:	lods   eax,DWORD PTR es:[esi]
  407fb3:	out    dx,eax
  407fb4:	mov    edx,0x4d2acf4
  407fb9:	mov    ecx,0xd517cf10
  407fbe:	fs gs clc 
  407fc1:	in     eax,0xfa
  407fc3:	retf   0x72cb
  407fc6:	add    eax,0x8add6fa8
  407fcb:	mov    ecx,ebx
  407fcd:	repnz scas al,BYTE PTR es:[edi]
  407fcf:	sub    al,0xcd
  407fd1:	inc    esp
  407fd2:	shr    BYTE PTR [eax+eiz*1+0x1a],0x48
  407fd7:	ret    0x648a
  407fda:	loopne 0x407fb4
  407fdc:	push   0xffffffa8
  407fde:	call   0x473c518d
  407fe3:	sti    
  407fe4:	xor    eax,0x4f74e956
  407fe9:	push   0x73
  407feb:	or     al,0x78
  407fed:	pop    ecx
  407fee:	push   edx
  407fef:	and    eax,0x683f2494
  407ff4:	xchg   ebx,eax
  407ff5:	mov    dl,0xfe
  407ff7:	or     esi,ebp
  407ff9:	(bad)  
  407ffa:	sbb    ecx,esi
  407ffc:	sbb    BYTE PTR [edi+0x36],ah
  407fff:	iret   
  408000:	retf   0x2b27
  408003:	mov    eax,ds:0xad0ac23b
  408008:	or     eax,DWORD PTR [esi+0x5a]
  40800b:	add    BYTE PTR [ebx-0xdc6f325],ah
  408011:	sbb    DWORD PTR [ecx+0x327eb5aa],edi
  408017:	into   
  408018:	addr16 int3 
  40801a:	cmp    al,0xed
  40801c:	(bad)  
  40801d:	jp     0x407fdd
  40801f:	retf   
  408020:	pop    ebp
  408021:	test   BYTE PTR [esi-0x2aaf2124],cl
  408027:	popa   
  408028:	jne    0x407fbf
  40802a:	xor    eax,DWORD PTR [ebp-0x73c5e9a5]
  408030:	mov    ch,0x37
  408032:	xor    BYTE PTR [ecx+0x6112d46b],cl
  408038:	(bad)  
  40803b:	js     0x408030
  40803d:	in     eax,dx
  40803e:	(bad)  
  40803f:	sub    BYTE PTR [ecx+0x19755cea],bh
  408045:	cli    
  408046:	push   esi
  408047:	leave  
  408048:	inc    edx
  408049:	imul   ecx,DWORD PTR [ebx],0x22
  40804c:	sub    edi,DWORD PTR [ebp+0x52]
  40804f:	xchg   DWORD PTR [ebp+esi*8+0x166c33d3],edx
  408056:	sbb    BYTE PTR [edx-0x6d],cl
  408059:	jecxz  0x4080b0
  40805b:	sub    bh,BYTE PTR [edx]
  40805d:	jge    0x408031
  40805f:	push   ds
  408060:	xlat   BYTE PTR ds:[ebx]
  408061:	loop   0x408034
  408063:	mov    esp,0xcc1b0f61
  408068:	cmp    eax,0x984e658b
  40806d:	sub    ecx,DWORD PTR [ebx-0x3063fa64]
  408073:	dec    edi
  408074:	ja     0x4080a0
  408076:	dec    edi
  408077:	pop    ecx
  408078:	mov    DWORD PTR ss:[edx-0x770bff0a],esi
  40807f:	in     al,dx
  408080:	push   edx
  408081:	inc    ebx
  408082:	cdq    
  408083:	mov    ebx,0xef7f40c7
  408088:	test   al,0xe9
  40808a:	add    DWORD PTR [ecx+0x2548a83a],esi
  408090:	or     DWORD PTR [ecx+eax*4],esi
  408093:	fstp   QWORD PTR [ebp+0x7a]
  408096:	pushf  
  408097:	pop    ebp
  408098:	sbb    eax,0xcd4e062b
  40809d:	(bad)
  4080a0:	push   ss
  4080a1:	(bad)  
  4080a2:	or     DWORD PTR [edi-0x35d52730],ebx
  4080a8:	aas    
  4080a9:	add    ah,dl
  4080ab:	in     eax,0xaf
  4080ad:	mov    ah,0x53
  4080af:	xor    eax,0xa224b991
  4080b4:	inc    edx
  4080b5:	outs   dx,DWORD PTR ds:[esi]
  4080b6:	int    0xe0
  4080b8:	or     eax,0x5987787e
  4080bd:	dec    edx
  4080be:	mov    edx,0xe5ffd48
  4080c3:	ficom  DWORD PTR [edi]
  4080c5:	ror    DWORD PTR [edx-0x2010e7e7],cl
  4080cb:	out    0x3b,eax
  4080cd:	mov    ch,0x1c
  4080cf:	cmc    
  4080d0:	retf   0x9a1b
  4080d3:	loope  0x40810c
  4080d5:	adc    BYTE PTR [ebx-0x35e87b3],bl
  4080db:	cld    
  4080dc:	pop    ss
  4080dd:	lods   al,BYTE PTR ds:[esi]
  4080de:	sti    
  4080df:	ret    
  4080e0:	cmp    dh,BYTE PTR [eax+0x27de0770]
  4080e6:	cmp    eax,edx
  4080e8:	mov    DWORD PTR [eax],esp
  4080ea:	dec    esi
  4080eb:	mov    ss,ebp
  4080ed:	ja     0x4080b6
  4080ef:	cmc    
  4080f0:	mov    cl,0x43
  4080f2:	lahf   
  4080f3:	add    DWORD PTR [ecx-0x1d],eax
  4080f6:	push   esi
  4080f7:	test   eax,0xe86afb22
  4080fc:	mov    al,ds:0x701a85f2
  408101:	popf   
  408102:	ficomp WORD PTR [eax-0x147fc1d6]
  408108:	push   eax
  408109:	mov    dl,0x91
  40810b:	out    0x5a,eax
  40810d:	jge    0x4080ba
  40810f:	xor    DWORD PTR [eax],eax
  408111:	das    
  408112:	inc    ecx
  408113:	adc    al,BYTE PTR [eax+0x5e25b0c6]
  408119:	aas    
  40811a:	lods   eax,DWORD PTR ds:[esi]
  40811b:	lahf   
  40811c:	cmp    eax,0x6cd1b8b2
  408121:	lock dec ebx
  408123:	ja     0x4080cb
  408125:	jne    0x40816a
  408127:	ins    DWORD PTR es:[edi],dx
  408128:	loope  0x408140
  40812a:	adc    ecx,DWORD PTR [edx]
  40812c:	and    al,0xf6
  40812e:	fcom   DWORD PTR [eax+edi*4-0x489e66f4]
  408135:	mov    cl,0xf5
  408137:	shl    DWORD PTR [ebp+0x15133eaf],1
  40813d:	mov    DWORD PTR [eax],ebx
  40813f:	sub    ecx,DWORD PTR [ebx+eax*2+0x3f9b1a9e]
  408146:	stos   BYTE PTR es:[edi],al
  408147:	or     eax,0x1363b66f
  40814c:	jb     0x4080d9
  40814e:	push   edx
  40814f:	and    esp,DWORD PTR [ebx-0x4b]
  408152:	and    ch,bh
  408154:	jl     0x408165
  408156:	xor    DWORD PTR [esi+eiz*1-0x42],ebx
  40815a:	ja     0x408168
  40815c:	cmp    esp,ecx
  40815e:	xchg   esi,eax
  40815f:	cmp    edi,DWORD PTR [edx-0x24]
  408162:	inc    ebx
  408163:	je     0x408137
  408165:	imul   esp,ebp,0x3e
  408168:	add    eax,0xf44861eb
  40816d:	aas    
  40816e:	push   ds
  40816f:	fdiv   st,st(7)
  408171:	xor    eax,DWORD PTR [edx-0x44]
  408174:	aad    0x5f
  408176:	adc    dl,cl
  408178:	popa   
  408179:	and    DWORD PTR [eax-0x518e9368],eax
  40817f:	xchg   edx,eax
  408180:	adc    BYTE PTR [ecx+ebx*4+0xd04a65c],cl
  408187:	or     dh,al
  408189:	push   0x6b
  40818b:	xchg   edi,eax
  40818c:	(bad)  
  40818d:	leave  
  40818e:	ret    0xeb1c
  408191:	shr    DWORD PTR es:[ebp-0x61],0x5d
  408196:	mov    esi,0xae246bab
  40819b:	repnz div DWORD PTR [esi-0x1e]
  40819f:	mov    ebx,0x15337304
  4081a4:	pop    ss
  4081a5:	hlt    
  4081a6:	neg    BYTE PTR ds:0x3cc92c9
  4081ac:	pop    esi
  4081ad:	lock pop ebp
  4081af:	imul   edx,DWORD PTR [ecx+0x57],0xde8d847a
  4081b6:	dec    ecx
  4081b7:	stos   DWORD PTR es:[edi],eax
  4081b8:	fadd   QWORD PTR [ecx+0x18b9371]
  4081be:	sub    dl,0x8d
  4081c1:	call   0x1386e137
  4081c6:	mov    WORD PTR [edi],gs
  4081c8:	dec    eax
  4081c9:	inc    esi
  4081ca:	push   0x33
  4081cc:	out    dx,al
  4081cd:	xor    BYTE PTR [edx+0xd],bl
  4081d0:	ds mov ecx,0x93114084
  4081d6:	sbb    ch,dl
  4081d8:	sub    ah,BYTE PTR [eax]
  4081da:	frstor [eax+0x400e10a8]
  4081e0:	mov    ah,0x3d
  4081e2:	fnsave [ecx+edx*1-0x41]
  4081e6:	sub    BYTE PTR [ebx],0xf5
  4081e9:	mov    DWORD PTR [edx-0x72],esi
  4081ec:	jl     0x408219
  4081ee:	lods   eax,DWORD PTR ds:[esi]
  4081ef:	(bad)  
  4081f0:	push   ebx
  4081f1:	clc    
  4081f2:	push   ecx
  4081f3:	jns    0x408253
  4081f5:	xor    bh,0x2e
  4081f8:	add    BYTE PTR gs:[eax+0x65],0xa1
  4081fd:	fst    DWORD PTR ds:0x954f4b48
  408203:	cmp    al,0x1b
  408205:	push   esp
  408206:	in     eax,0xe6
  408208:	aam    0x1
  40820a:	mov    dh,0x7c
  40820c:	or     eax,0x33d1a0e7
  408211:	cmc    
  408212:	rol    BYTE PTR [esp+ebx*8],0x1b
  408216:	jge    0x4081d3
  408218:	cld    
  408219:	add    eax,DWORD PTR [ecx+0xa]
  40821c:	adc    DWORD PTR [ebx+edx*4],eax
  40821f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408220:	ds popa 
  408222:	cmp    cl,BYTE PTR [eax]
  408224:	inc    ebx
  408225:	das    
  408226:	test   eax,0xb1c372e3
  40822b:	mov    esi,0xa99f02a4
  408230:	scas   al,BYTE PTR es:[edi]
  408231:	mov    eax,ds:0xf51add7f
  408236:	xor    al,BYTE PTR [edx+0x6594ca90]
  40823c:	into   
  40823d:	sbb    edx,DWORD PTR [edx-0x3669578a]
  408243:	fwait
  408244:	pop    ebp
  408245:	xlat   BYTE PTR ds:[ebx]
  408246:	and    ah,dh
  408248:	xchg   esp,eax
  408249:	mov    ecx,0xc3bb424c
  40824e:	sbb    BYTE PTR [ecx],ah
  408250:	mov    ds:0x96976d8,eax
  408255:	pop    eax
  408256:	jecxz  0x408255
  408258:	imul   ecx,DWORD PTR [edx-0x3f2aae83],0x27
  40825f:	je     0x4081f4
  408261:	mov    bh,0xff
  408263:	inc    edi
  408264:	outs   dx,BYTE PTR ds:[esi]
  408265:	pop    esp
  408266:	jbe    0x40824f
  408268:	aam    0xab
  40826a:	pusha  
  40826b:	inc    esp
  40826c:	jl     0x4081f3
  40826e:	push   edi
  40826f:	fistp  QWORD PTR [esi+0x17]
  408272:	or     DWORD PTR [eax+0x4b],ebp
  408275:	cmp    ecx,DWORD PTR [ebx+0x502fb6d0]
  40827b:	les    esp,FWORD PTR [eax+0x5c4878fe]
  408281:	fxch   st(5)
  408283:	es mov edx,0x2687d44c
  408289:	cli    
  40828a:	mov    ds:0xdf84b35d,eax
  40828f:	iret   
  408290:	jnp    0x40828b
  408292:	sbb    esp,DWORD PTR [ebx]
  408294:	cmp    BYTE PTR [ebx-0x27],0xa4
  408298:	and    eax,0x31ffdbf0
  40829d:	imul   edi,DWORD PTR [ebx+0x68],0x58de7b7e
  4082a4:	push   eax
  4082a5:	adc    al,0xe5
  4082a7:	cs dec esp
  4082a9:	pop    ebx
  4082aa:	in     eax,0x6
  4082ac:	stos   DWORD PTR es:[edi],eax
  4082ad:	in     eax,0x1e
  4082af:	imul   edx,DWORD PTR [ecx-0x38],0x37b7faa7
  4082b6:	cmp    BYTE PTR [edx+0x1e99f111],cl
  4082bc:	int    0xb0
  4082be:	push   cs
  4082bf:	ss ror al,cl
  4082c2:	adc    bh,al
  4082c4:	call   FWORD PTR [eax+esi*1-0x295b6ab7]
  4082cb:	sysret 
  4082cd:	xchg   BYTE PTR [eax-0x55],bh
  4082d0:	repz push esp
  4082d2:	fs call 0x7df9:0x89d0bded
  4082da:	ret    0x5ad2
  4082dd:	ds ret 0x8f59
  4082e1:	push   es
  4082e2:	lock outs dx,BYTE PTR ds:[esi]
  4082e4:	les    ebx,FWORD PTR [ebx]
  4082e6:	adc    al,0xcf
  4082e8:	pop    esi
  4082e9:	xor    eax,0x6ef456e2
  4082ee:	lahf   
  4082ef:	inc    eax
  4082f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f2:	clc    
  4082f3:	mov    ds,ebp
  4082f5:	nop
  4082f6:	dec    edx
  4082f7:	jmp    0x1121f3a1
  4082fc:	and    bh,al
  4082fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082ff:	or     DWORD PTR [ecx-0x4d],0x38dc7986
  408306:	jecxz  0x4082b3
  408308:	add    al,0x50
  40830a:	cmp    edx,DWORD PTR [ebx+0x4e]
  40830d:	(bad)  
  40830e:	lock cmp eax,0x2023899c
  408314:	jnp    0x408383
  408316:	mov    eax,ds:0x518e93ae
  40831b:	pop    es
  40831c:	stos   BYTE PTR es:[edi],al
  40831d:	fsubr  DWORD PTR [edx+0x4d]
  408320:	mov    edi,0xb0e0bbc6
  408325:	fidivr DWORD PTR [ebp-0x12]
  408328:	xchg   esp,eax
  408329:	mov    edi,0xe148a7c2
  40832e:	adc    edi,edx
  408330:	outs   dx,BYTE PTR ds:[esi]
  408331:	out    dx,eax
  408332:	cli    
  408333:	in     eax,dx
  408334:	add    DWORD PTR [eax-0x70ae27f6],edi
  40833a:	lds    ebx,FWORD PTR [esi+ecx*8+0x6bc8eba3]
  408341:	pop    eax
  408342:	ins    DWORD PTR es:[edi],dx
  408343:	xchg   esp,eax
  408344:	push   ebp
  408345:	ret    
  408346:	push   esi
  408347:	add    edi,DWORD PTR [ecx+0x5d521a8c]
  40834d:	addr16 sub eax,0x3c3dc6b9
  408353:	in     al,0xf
  408355:	cs push cs
  408357:	std    
  408358:	and    al,0x7b
  40835a:	push   ebp
  40835b:	adc    ebp,DWORD PTR [esp+esi*1]
  40835e:	xchg   edx,eax
  40835f:	mov    eax,ds:0x1191070
  408364:	cmp    edi,DWORD PTR [ebx+ebx*4]
  408367:	adc    al,0x34
  408369:	dec    ebp
  40836a:	and    BYTE PTR [ecx+0x27],bh
  40836d:	imul   edi,DWORD PTR [ebp-0x33310526],0x376e8d31
  408377:	or     eax,0xb1227bdb
  40837c:	sahf   
  40837d:	push   ecx
  40837e:	enter  0x3846,0x67
  408382:	ret    0xeb94
  408385:	pop    ebx
  408386:	fild   WORD PTR [edi-0x7cc720dd]
  40838c:	push   esi
  40838d:	pop    esi
  40838e:	loop   0x408356
  408390:	js     0x408329
  408392:	push   0x3f
  408394:	mov    ecx,0xc53bcb53
  408399:	add    dl,dl
  40839b:	add    al,0x1b
  40839d:	test   BYTE PTR [eax+ebp*4+0x79],al
  4083a1:	jp     0x4083bb
  4083a3:	jmp    0xdf79ffad
  4083a8:	adc    eax,0xe75a6372
  4083ad:	into   
  4083ae:	jp     0x4083eb
  4083b0:	sub    ebx,DWORD PTR [ebx-0x330ca9]
  4083b6:	shl    edx,1
  4083b8:	jmp    0x408356
  4083ba:	xor    eax,0x8c6ead57
  4083bf:	les    edi,FWORD PTR [edx]
  4083c1:	mov    ds:0x5caa06b2,eax
  4083c6:	mov    ecx,0x60e6fcce
  4083cb:	cmp    ebp,ebp
  4083cd:	cmp    BYTE PTR [eax+0x5b962585],ah
  4083d3:	jnp    0x408368
  4083d5:	xchg   edi,eax
  4083d6:	mov    ebp,0xd1fb5b51
  4083db:	sbb    al,0xa8
  4083dd:	xor    al,0xdb
  4083df:	mov    al,cl
  4083e1:	sar    esi,cl
  4083e3:	aam    0x64
  4083e5:	xor    eax,0xc2528cf
  4083ea:	lahf   
  4083eb:	xor    dl,BYTE PTR [eax+0x6b475af8]
  4083f1:	sub    esi,ebp
  4083f3:	ror    DWORD PTR [ecx+0x75f3c252],0x74
  4083fa:	fmul   QWORD PTR [esp+esi*2]
  4083fd:	xor    al,0x5b
  4083ff:	stc    
  408400:	cmp    cl,al
  408402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408403:	mov    dh,dh
  408405:	xor    eax,0x9853749
  40840a:	jmp    0x23d6:0x27f28079
  408411:	loop   0x40845e
  408413:	ins    DWORD PTR es:[edi],dx
  408414:	out    0x2a,eax
  408416:	add    dh,BYTE PTR [ecx+0x785565e5]
  40841c:	outs   dx,BYTE PTR ds:[esi]
  40841d:	jmp    0x1a8b:0x6df4622b
  408424:	push   ebp
  408425:	arpl   cx,cx
  408427:	dec    edx
  408428:	jp     0x408491
  40842a:	lds    ebx,FWORD PTR [eax]
  40842c:	(bad)  
  40842d:	push   ebp
  40842e:	std    
  40842f:	es in  eax,dx
  408431:	idiv   DWORD PTR [edi]
  408433:	push   ebx
  408434:	mov    dl,bl
  408436:	aam    0xd6
  408438:	cmp    al,0x81
  40843a:	pop    es
  40843b:	jno    0x40842f
  40843d:	xchg   ebp,eax
  40843e:	nop
  40843f:	out    dx,eax
  408440:	sbb    eax,0xd2f8ee
  408445:	sub    DWORD PTR [eax+ebp*4+0x58],edi
  408449:	xor    al,ah
  40844b:	xchg   esi,eax
  40844c:	add    BYTE PTR [eax],bh
  40844e:	call   DWORD PTR [edi]
  408450:	nop
  408451:	scas   eax,DWORD PTR es:[edi]
  408452:	push   eax
  408453:	adc    al,0x59
  408455:	js     0x40844c
  408457:	mov    esi,0xd3f6f8c0
  40845c:	std    
  40845d:	ja     0x4084b0
  40845f:	(bad)  
  408460:	clc    
  408461:	aaa    
  408462:	jbe    0x40847e
  408464:	clc    
  408465:	jbe    0x4084a9
  408467:	lods   al,BYTE PTR ds:[esi]
  408468:	lahf   
  408469:	sbb    BYTE PTR [ebx],ah
  40846b:	xchg   ebx,eax
  40846c:	add    dh,cl
  40846e:	sbb    bl,dl
  408470:	xor    eax,0x3a7f8bb8
  408475:	pop    ebp
  408476:	sub    dh,bl
  408478:	in     eax,dx
  408479:	sbb    eax,0x64246a65
  40847e:	fcomp  st(0)
  408480:	pop    ebp
  408481:	mov    eax,0x7aac5d7
  408486:	leave  
  408487:	ror    esi,1
  408489:	mov    gs,esi
  40848b:	xchg   esi,eax
  40848c:	xchg   ebp,eax
  40848d:	test   eax,0x72a08b8d
  408492:	sub    al,cl
  408494:	add    al,0x84
  408496:	jnp    0x4084f0
  408498:	je     0x4084bd
  40849a:	or     eax,0x86d4ee49
  40849f:	arpl   WORD PTR [ebp-0x2097968f],dx
  4084a5:	test   eax,0x98c2bf66
  4084aa:	jo     0x40846f
  4084ac:	in     eax,0x83
  4084ae:	sub    eax,0x809f8ef0
  4084b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084b4:	mov    bl,0x33
  4084b6:	call   0x468b9169
  4084bb:	and    al,BYTE PTR [edi+0x2bdf0dd3]
  4084c1:	arpl   sp,di
  4084c3:	sub    edx,eax
  4084c5:	and    BYTE PTR [ecx],dl
  4084c7:	ds pop ecx
  4084c9:	mov    eax,0xeb6e832b
  4084ce:	pop    ds
  4084cf:	xor    esi,edx
  4084d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084d2:	imul   BYTE PTR [esi-0x6c03800b]
  4084d8:	mov    ecx,0x1cf75ca5
  4084dd:	icebp  
  4084de:	inc    ebp
  4084df:	or     eax,0x387a9080
  4084e4:	push   es
  4084e5:	jmp    0x6928e26e
  4084ea:	cvtps2pi mm1,QWORD PTR [ecx-0x353c370f]
  4084f1:	xor    dl,ch
  4084f3:	xchg   BYTE PTR [ebp+0x840373b],dh
  4084f9:	inc    esp
  4084fa:	and    eax,0x12afc2a9
  4084ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408500:	lds    esp,FWORD PTR ds:0x92493935
  408506:	fwait
  408507:	sub    al,dl
  408509:	retf   0x2f9e
  40850c:	dec    esp
  40850d:	pop    edi
  40850e:	cmp    ah,dh
  408510:	adc    DWORD PTR [edx],esp
  408512:	sub    al,0x98
  408514:	lock xchg edx,eax
  408516:	jne    0x408511
  408518:	ja     0x408577
  40851a:	data16 sub ch,bl
  40851d:	xchg   ebx,eax
  40851e:	enter  0x3af8,0x14
  408522:	or     BYTE PTR [esi],al
  408524:	ret    
  408525:	call   0x32b4:0x38903ff5
  40852c:	sbb    ah,BYTE PTR [esi-0x13cc9690]
  408532:	into   
  408533:	lods   eax,DWORD PTR ds:[esi]
  408534:	inc    esp
  408535:	mov    al,ds:0x1050ee35
  40853a:	das    
  40853b:	int    0x21
  40853d:	outs   dx,DWORD PTR ds:[esi]
  40853e:	pop    edi
  40853f:	xor    eax,0x71d759b8
  408544:	dec    edx
  408545:	pop    esp
  408546:	or     ch,BYTE PTR [eax]
  408548:	push   ss
  408549:	and    esp,edx
  40854b:	fsub   DWORD PTR [eax-0x64ddb6f0]
  408551:	add    al,0x24
  408553:	test   BYTE PTR [ebx-0x625ffd07],al
  408559:	inc    esp
  40855a:	sbb    eax,DWORD PTR [esi]
  40855c:	fldln2 
  40855e:	retf   
  40855f:	in     eax,0xd
  408561:	jno    0x408559
  408563:	inc    ebx
  408564:	das    
  408565:	jne    0x408513
  408567:	push   edx
  408568:	mov    ah,0xd5
  40856a:	aas    
  40856b:	(bad)  
  40856c:	pusha  
  40856d:	repz lock pop ecx
  408570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408571:	mov    ebx,0x2e166bcc
  408576:	sub    al,0x7d
  408578:	dec    ecx
  408579:	loop   0x408592
  40857b:	test   bh,ah
  40857d:	inc    ecx
  40857e:	cli    
  40857f:	ret    
  408580:	int3   
  408581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408582:	(bad)  [edi]
  408584:	mov    bh,0x56
  408586:	push   esi
  408587:	jecxz  0x4085f1
  408589:	frstor [esi-0x6f]
  40858c:	adc    BYTE PTR [ecx-0x700c6aac],ch
  408592:	add    ecx,DWORD PTR ds:0x1f40c112
  408598:	frstor [edi+edx*1]
  40859b:	ret    
  40859c:	fimul  DWORD PTR [esi+edx*2+0x55]
  4085a0:	dec    edi
  4085a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085a2:	(bad)  
  4085a3:	into   
  4085a4:	scas   al,BYTE PTR es:[edi]
  4085a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085a6:	mov    cl,0x2f
  4085a8:	mov    dh,0xad
  4085aa:	mov    WORD PTR [eax],gs
  4085ac:	call   0x2d59:0xc1b06f0a
  4085b3:	popf   
  4085b4:	sbb    ah,BYTE PTR [eax+0x1c]
  4085b7:	adc    eax,0x4b3bd9eb
  4085bc:	repnz sti 
  4085be:	push   es
  4085bf:	sbb    BYTE PTR [ebp+esi*2-0x7d],al
  4085c3:	xchg   esi,eax
  4085c4:	sbb    bh,BYTE PTR [edx-0x17]
  4085c7:	imul   esp,DWORD PTR [edx+0x582fcdea],0xd
  4085ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085cf:	aas    
  4085d0:	retf   0x488a
  4085d3:	outs   dx,DWORD PTR ds:[esi]
  4085d4:	retf   0x5f2
  4085d7:	push   ds
  4085d8:	xchg   ebx,eax
  4085d9:	int    0x2f
  4085db:	xlat   BYTE PTR ds:[ebx]
  4085dc:	ret    
  4085dd:	(bad)  
  4085de:	mov    esi,0xcd747af6
  4085e3:	cli    
  4085e4:	test   DWORD PTR [esi-0x4a],edi
  4085e7:	out    0x65,eax
  4085e9:	aaa    
  4085ea:	fld    st(1)
  4085ec:	es dec ecx
  4085ee:	push   es
  4085ef:	cmp    bl,BYTE PTR [edx+0x6ea57e4c]
  4085f5:	leave  
  4085f6:	cmp    al,0x55
  4085f8:	ss push ecx
  4085fa:	jmp    0xa78d:0xdafa922b
  408601:	std    
  408602:	shl    DWORD PTR [ebp+edi*2+0x79],cl
  408606:	in     eax,0x11
  408608:	or     eax,0x2e264b5a
  40860d:	pop    esi
  40860e:	cmp    edi,eax
  408610:	shr    BYTE PTR [edx+0x5d3f6472],0xf4
  408617:	sub    dh,BYTE PTR [di]
  40861a:	pop    edx
  40861b:	(bad)  
  40861c:	push   esi
  40861d:	not    BYTE PTR [eax-0x429212a8]
  408623:	xlat   BYTE PTR ds:[ebx]
  408624:	lods   eax,DWORD PTR ds:[esi]
  408625:	jnp    0x4085ec
  408627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408628:	and    al,0xcd
  40862a:	hlt    
  40862b:	push   edx
  40862c:	mov    bl,0x86
  40862e:	mov    WORD PTR [edi],es
  408630:	ja     0x4085d3
  408632:	lds    ebp,FWORD PTR [edi]
  408634:	pcmpeqd mm0,QWORD PTR [ebp+ecx*4+0x71884d1e]
  40863c:	(bad)  
  40863d:	lahf   
  40863e:	adc    eax,DWORD PTR [ecx]
  408640:	xchg   esp,eax
  408641:	das    
  408642:	push   edx
  408643:	daa    
  408644:	jo     0x408670
  408646:	rol    BYTE PTR [edx+0x1c0d5253],0x62
  40864d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40864e:	pop    edi
  40864f:	inc    eax
  408650:	lods   eax,DWORD PTR ds:[esi]
  408651:	aam    0x24
  408653:	pop    edi
  408654:	fxch   st(4)
  408656:	cld    
  408657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408658:	xlat   BYTE PTR ds:[ebx]
  408659:	arpl   WORD PTR [ebx+0x39fef9f0],ax
  40865f:	clc    
  408660:	fisubr WORD PTR [ebx-0x3b]
  408663:	(bad)  
  408664:	loopne 0x4086a3
  408666:	add    al,0x96
  408668:	xor    DWORD PTR [ebx-0x74],eax
  40866b:	add    BYTE PTR [eax],al
  40866d:	sbb    dh,BYTE PTR ds:0xa5225fdc
  408673:	mul    edx
  408675:	call   0xccbd8b23
  40867a:	pop    ebp
  40867b:	fs mov dh,0xa0
  40867e:	int    0x6
  408680:	sar    DWORD PTR [edi-0x55f68661],cl
  408686:	ret    
  408687:	jns    0x4086dd
  408689:	dec    edi
  40868a:	pop    ebx
  40868b:	mov    bh,BYTE PTR cs:[esi]
  40868e:	sub    ch,ah
  408690:	stos   DWORD PTR es:[edi],eax
  408691:	js     0x408689
  408693:	cmc    
  408694:	shl    BYTE PTR [esi-0x68688c86],0xf4
  40869b:	popa   
  40869c:	(bad)  
  40869d:	call   0xc58fc550
  4086a2:	repnz outs dx,DWORD PTR ds:[esi]
  4086a4:	xchg   edx,eax
  4086a5:	out    0xc5,eax
  4086a7:	outs   dx,DWORD PTR ds:[esi]
  4086a8:	pop    edx
  4086a9:	pop    ds
  4086aa:	sbb    BYTE PTR [ebx],ah
  4086ac:	dec    eax
  4086ad:	add    eax,eax
  4086af:	or     eax,esi
  4086b1:	push   cs
  4086b2:	leave  
  4086b3:	fst    st(2)
  4086b5:	add    BYTE PTR [ebx-0x1e],ah
  4086b8:	mov    gs,WORD PTR [ebx+0x26d9266c]
  4086be:	out    0x27,al
  4086c0:	pop    esi
  4086c1:	in     eax,0x69
  4086c3:	or     BYTE PTR [edi-0x22761875],dh
  4086c9:	adc    eax,0xec2a84bb
  4086ce:	pop    edi
  4086cf:	(bad)  
  4086d1:	xchg   ebp,eax
  4086d2:	sub    DWORD PTR [edx],edi
  4086d4:	and    BYTE PTR [ebx],al
  4086d6:	cmp    ch,BYTE PTR [esi]
  4086d8:	ds out dx,al
  4086da:	cmp    BYTE PTR [ecx],0xe5
  4086dd:	sbb    dl,BYTE PTR [ecx-0x47]
  4086e0:	jne    0x408669
  4086e2:	stos   BYTE PTR es:[edi],al
  4086e3:	leave  
  4086e4:	call   0x4c3b:0xaf8b0f0b
  4086eb:	mov    cl,0xe4
  4086ed:	jecxz  0x408697
  4086ef:	daa    
  4086f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086f1:	ins    BYTE PTR es:[edi],dx
  4086f2:	xchg   esi,eax
  4086f3:	cdq    
  4086f4:	cmp    edx,DWORD PTR [ebx+edi*1-0x6ed0f10e]
  4086fb:	outs   dx,BYTE PTR ds:[esi]
  4086fc:	jecxz  0x4086d1
  4086fe:	xchg   edi,eax
  4086ff:	xor    BYTE PTR [edx+0x67b5c8f],al
  408705:	es xchg edx,eax
  408707:	stc    
  408708:	sar    DWORD PTR [edx],cl
  40870a:	arpl   WORD PTR [ebx+0x43],bp
  40870d:	inc    esi
  40870e:	fiadd  DWORD PTR [esi-0x180223d]
  408714:	dec    esi
  408715:	pushw  0x41
  408718:	dec    edx
  408719:	sub    al,dh
  40871b:	clc    
  40871c:	mov    al,0x99
  40871e:	sub    eax,0x62eb63b1
  408723:	popa   
  408724:	adc    ah,BYTE PTR [eax]
  408726:	fild   QWORD PTR [ebx*4-0x76089f93]
  40872d:	or     edi,ebp
  40872f:	shr    BYTE PTR [ebx+0x1b],cl
  408732:	loope  0x4086cc
  408734:	xlat   BYTE PTR ds:[ebx]
  408735:	pusha  
  408736:	jae    0x408750
  408738:	inc    esi
  408739:	mov    ?,bx
  40873c:	adc    BYTE PTR [ebx-0x72f7ca34],bl
  408742:	mov    esi,0x73f42650
  408747:	sub    edi,DWORD PTR [ecx-0x66]
  40874a:	mov    al,0x7e
  40874c:	dec    esi
  40874d:	mov    bl,BYTE PTR [edx+edi*8-0x75468572]
  408754:	and    eax,0x4d036db5
  408759:	xor    DWORD PTR [edi],0x32fd0741
  40875f:	cwde   
  408760:	popa   
  408761:	ss dec edx
  408763:	popa   
  408764:	mov    ebx,0x6f4553a7
  408769:	jno    0x408740
  40876b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40876c:	xchg   DWORD PTR [ebx-0x6c5a5623],ecx
  408772:	push   ebx
  408773:	sbb    al,dh
  408775:	mov    esp,0x21e938c0
  40877a:	mov    fs,WORD PTR [esi]
  40877c:	sub    BYTE PTR [ebx],0x46
  40877f:	fyl2x  
  408781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408782:	cs jg  0x4087d9
  408785:	rol    DWORD PTR [esi+0x507a7033],0xb2
  40878c:	and    BYTE PTR [ebx-0x22836f3f],0x1b
  408793:	inc    ebx
  408794:	push   edi
  408795:	(bad)  
  408797:	fs ins BYTE PTR es:[edi],dx
  408799:	daa    
  40879a:	aaa    
  40879b:	div    eax
  40879d:	mov    ebp,0x3cc4da6
  4087a2:	loope  0x408726
  4087a4:	mov    ?,WORD PTR [esi]
  4087a6:	inc    ebp
  4087a7:	setne  al
  4087aa:	ins    BYTE PTR es:[edi],dx
  4087ab:	icebp  
  4087ac:	sar    BYTE PTR [ebx+ecx*8+0x5393237b],1
  4087b3:	dec    esp
  4087b4:	gs (bad) 
  4087b6:	mov    esp,0x18d7b534
  4087bb:	out    dx,eax
  4087bc:	pop    esi
  4087bd:	in     eax,dx
  4087be:	inc    edx
  4087bf:	and    DWORD PTR [esi+0x11],0x6a
  4087c3:	pop    esp
  4087c4:	les    esp,FWORD PTR [eax-0x58]
  4087c7:	push   esp
  4087c8:	enter  0x51ca,0xa9
  4087cc:	mov    cl,0xf3
  4087ce:	sti    
  4087cf:	test   al,0xd1
  4087d1:	retf   0x269e
  4087d4:	adc    ecx,edi
  4087d6:	adc    ch,BYTE PTR [edi-0x7d7dfbe1]
  4087dc:	xchg   edi,eax
  4087dd:	sbb    ebx,ebp
  4087df:	jne    0x408810
  4087e1:	dec    eax
  4087e2:	pop    esi
  4087e3:	cmp    ecx,DWORD PTR [ebx+0x10c2cbae]
  4087e9:	dec    ebx
  4087ea:	rol    BYTE PTR ds:0x1cf66566,0xbd
  4087f1:	push   ss
  4087f2:	sub    eax,0x4dcec93b
  4087f7:	or     DWORD PTR [ebx+0x6bb6d656],ebp
  4087fd:	xor    BYTE PTR [edx],0xea
  408800:	pop    ebp
  408801:	pop    eax
  408802:	push   ebp
  408803:	jno    0x4087a0
  408805:	sub    al,0x2
  408807:	inc    edi
  408808:	retf   0xa4dc
  40880b:	cmp    BYTE PTR [esp+eiz*2],dl
  40880e:	mov    ds:0x78055933,al
  408813:	or     BYTE PTR [ebx-0x3a],dh
  408816:	cmp    BYTE PTR [ebx],al
  408818:	cmc    
  408819:	fsubr  DWORD PTR [esi]
  40881b:	jae    0x408801
  40881d:	inc    edx
  40881e:	push   esi
  40881f:	xchg   esp,eax
  408820:	pusha  
  408821:	xor    al,0x46
  408823:	(bad)  
  408824:	out    0x48,al
  408826:	imul   ebp,ebp,0xffffffa4
  408829:	mov    ecx,0x10fca78a
  40882e:	jl     0x4087b0
  408830:	rcr    BYTE PTR [ebx-0x33],0x7
  408834:	test   eax,0x4f00bcd2
  408839:	fnsave [esi-0x5c]
  40883c:	cmp    edi,0xffffffd4
  40883f:	xchg   ebx,eax
  408840:	repz inc edx
  408842:	(bad)  
  408844:	xor    al,0xe5
  408846:	mov    ebp,0x7984243c
  40884b:	jnp    0x408808
  40884d:	adc    edx,DWORD PTR [ecx-0x5bd12087]
  408853:	jno    0x408899
  408855:	fs gs inc ebx
  408858:	lahf   
  408859:	(bad)
  40885c:	jmp    0x40881d
  40885e:	mov    al,ds:0xa4edb27f
  408863:	inc    ecx
  408864:	daa    
  408865:	xchg   ecx,eax
  408866:	xchg   edx,eax
  408867:	je     0x4088e0
  408869:	sti    
  40886a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40886b:	adc    dh,BYTE PTR [eax]
  40886d:	push   eax
  40886e:	cwde   
  40886f:	mov    ebx,0xf9edfcee
  408874:	arpl   WORD PTR [eax+0x3e],di
  408877:	sub    al,BYTE PTR [edx+0x5e]
  40887a:	shl    edx,cl
  40887c:	cmc    
  40887d:	dec    ebp
  40887e:	push   edx
  40887f:	repnz dec eax
  408881:	push   es
  408882:	repnz lods al,BYTE PTR ds:[esi]
  408884:	imul   ebx,DWORD PTR [esi],0xb33b012e
  40888a:	add    DWORD PTR [ecx-0x39],0xffffffce
  40888e:	clc    
  40888f:	jb     0x40881d
  408891:	dec    eax
  408892:	xor    al,0xba
  408894:	mov    ebx,0xb6a5e5e7
  408899:	push   cs
  40889a:	shl    BYTE PTR [eax+ebp*8+0x22],0x2f
  40889f:	pop    esi
  4088a0:	dec    edx
  4088a1:	sar    BYTE PTR [ebx-0x1e],1
  4088a4:	lods   eax,DWORD PTR ds:[esi]
  4088a5:	pop    ds
  4088a6:	xchg   BYTE PTR [ebx+esi*8+0x41],bl
  4088aa:	in     al,dx
  4088ab:	inc    ecx
  4088ac:	mov    esp,0xa45e8257
  4088b1:	mov    bl,0x50
  4088b3:	call   0xae22:0xb844226b
  4088ba:	cmc    
  4088bb:	xor    ebx,DWORD PTR [edi+0x8534b81]
  4088c1:	bound  ecx,QWORD PTR [ebp+0x2e301cbf]
  4088c7:	jbe    0x4088be
  4088c9:	adc    DWORD PTR [eax],ebx
  4088cb:	dec    ecx
  4088cc:	push   ebx
  4088cd:	shl    DWORD PTR [edi+esi*4+0xc],1
  4088d1:	repnz add ch,ch
  4088d4:	jmp    0x408911
  4088d6:	sar    BYTE PTR [ecx-0x75],1
  4088d9:	xchg   ebp,eax
  4088da:	xor    BYTE PTR [eax],0x1f
  4088dd:	imul   edi,DWORD PTR [ebx+0x3e],0xcb608e18
  4088e4:	in     eax,0xc9
  4088e6:	push   esi
  4088e7:	loope  0x40895e
  4088e9:	xchg   ebx,eax
  4088ea:	or     BYTE PTR [ecx+0x56],bl
  4088ed:	repnz and dl,dl
  4088f0:	mov    dh,0x50
  4088f2:	lods   eax,DWORD PTR ds:[esi]
  4088f3:	cmp    eax,0x1dc6ba93
  4088f8:	fmul   DWORD PTR [eax-0x2b]
  4088fb:	mov    dl,0x3c
  4088fd:	add    DWORD PTR [esi],ebp
  4088ff:	iret   
  408900:	lds    ebx,FWORD PTR [ebp-0x71]
  408903:	mov    ds,ebp
  408905:	jmp    0x45eb:0xfc008b33
  40890c:	sub    eax,0xb5ae70b1
  408911:	pop    eax
  408912:	push   ebx
  408913:	mov    ds:0xbbf973bc,eax
  408918:	sahf   
  408919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40891a:	xlat   BYTE PTR ds:[ebx]
  40891b:	test   eax,0x703af96c
  408920:	adc    al,0xd
  408922:	pop    ds
  408923:	pop    eax
  408924:	popf   
  408925:	jmp    0x3598:0x4ab11ea8
  40892c:	arpl   WORD PTR [ecx+0x4d],cx
  40892f:	add    BYTE PTR [esi+0x2ff77984],al
  408935:	mov    al,ds:0xe72bb235
  40893a:	clc    
  40893b:	sub    eax,0x2b00d8b
  408940:	sbb    dl,BYTE PTR [eax]
  408942:	mov    ebx,0x1a485a28
  408947:	xchg   DWORD PTR [edi-0xb37f94f],edi
  40894d:	cmp    ah,BYTE PTR [eax]
  40894f:	add    BYTE PTR [edx],bh
  408951:	test   DWORD PTR [eax],ebx
  408953:	fidiv  DWORD PTR [esi+0x6d]
  408956:	inc    edi
  408957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408958:	mov    esp,ss
  40895a:	call   0xdaae626a
  40895f:	push   ds
  408960:	push   ebx
  408961:	cs jb  0x4088e9
  408964:	push   eax
  408965:	adc    eax,0x156d8746
  40896a:	sub    edx,ebp
  40896c:	(bad)  
  40896d:	das    
  40896e:	mov    WORD PTR [esi],fs
  408970:	jg     0x408922
  408972:	sbb    BYTE PTR [ecx+eax*4],ah
  408975:	jne    0x408983
  408977:	xchg   ecx,eax
  408978:	sub    eax,0xa0ad194f
  40897d:	jle    0x40897b
  40897f:	stos   DWORD PTR es:[edi],eax
  408980:	fmul   st,st(5)
  408982:	or     al,BYTE PTR [eax]
  408984:	xchg   ebx,eax
  408985:	(bad)
  408989:	out    0x4d,al
  40898b:	je     0x40896f
  40898d:	pop    ss
  40898e:	stos   DWORD PTR es:[edi],eax
  40898f:	mov    eax,ds:0x91e82b2
  408994:	dec    eax
  408995:	inc    esi
  408996:	push   edx
  408997:	jecxz  0x40891d
  408999:	sbb    al,0xfb
  40899b:	(bad)  
  40899c:	mov    ecx,0x280a074a
  4089a1:	sbb    ah,BYTE PTR [edi]
  4089a3:	sub    eax,0x4208d468
  4089a8:	push   esi
  4089a9:	test   al,0x88
  4089ab:	call   0x4cbb03fb
  4089b0:	je     0x408a2d
  4089b2:	icebp  
  4089b3:	je     0x40896f
  4089b5:	and    esi,eax
  4089b7:	mov    esp,0x3cc6892
  4089bc:	ror    BYTE PTR [edi-0x66],0x64
  4089c0:	sbb    eax,0x34c313f0
  4089c5:	add    BYTE PTR [esi-0x937be24],ch
  4089cb:	aad    0x50
  4089cd:	inc    esi
  4089ce:	mov    ebp,0xcdf3261a
  4089d3:	xlat   BYTE PTR ds:[ebx]
  4089d4:	add    BYTE PTR [eax],dl
  4089d6:	mov    DWORD PTR [edi-0x67f5ba42],edx
  4089dc:	sbb    esp,DWORD PTR [esi+eax*8]
  4089df:	lds    eax,FWORD PTR [ecx-0x4a5fc6eb]
  4089e5:	dec    esi
  4089e6:	fadd   DWORD PTR [esi-0x1a]
  4089e9:	test   BYTE PTR ds:0x63df34e6,dh
  4089ef:	adc    ch,BYTE PTR [edx+ebx*2+0x676f6627]
  4089f6:	or     DWORD PTR [esi+esi*8],0x6b
  4089fa:	int    0xe0
  4089fc:	rcr    DWORD PTR [ecx+0x7bfa144d],0x4b
  408a03:	hlt    
  408a04:	je     0x40898b
  408a06:	jl     0x408a3f
  408a08:	data16 loopne 0x408a7b
  408a0b:	fnstsw WORD PTR [ecx+0x48ce8c42]
  408a11:	fisttp QWORD PTR [edx+edi*1]
  408a14:	aaa    
  408a15:	push   esi
  408a16:	jmp    0x7fdc:0xa84e548a
  408a1d:	sub    DWORD PTR [ecx-0x67],esi
  408a20:	xchg   DWORD PTR [eax],ecx
  408a22:	aam    0x33
  408a24:	imul   BYTE PTR [ebp+0x21]
  408a27:	mov    ebx,DWORD PTR [edi+0x60]
  408a2a:	imul   esp,DWORD PTR [ecx+0xc],0xe29543d8
  408a31:	in     al,0xc2
  408a33:	xchg   dx,ax
  408a35:	ds push esi
  408a37:	lock cwde 
  408a39:	in     al,dx
  408a3a:	jae    0x408a1e
  408a3c:	sub    DWORD PTR [ebx],ecx
  408a3e:	dec    ebx
  408a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a41:	pop    ds
  408a42:	inc    esp
  408a43:	cdq    
  408a44:	xor    BYTE PTR [edx+0x3907deec],bh
  408a4a:	sbb    al,0x7
  408a4c:	pop    esp
  408a4d:	ja     0x4089da
  408a4f:	dec    ebx
  408a50:	and    al,0x60
  408a52:	imul   edi,DWORD PTR [ebp-0x6d59c976],0x36
  408a59:	fist   WORD PTR [eax+0x3eacad65]
  408a5f:	mov    esp,0x5448498
  408a64:	iret   
  408a65:	xchg   ecx,eax
  408a66:	xor    BYTE PTR [eax-0x5eeece14],ah
  408a6c:	mov    al,ds:0xfffc8c23
  408a71:	mov    al,0x3b
  408a73:	mov    bh,0xdc
  408a75:	mov    dh,BYTE PTR [edx+edx*4+0xd]
  408a79:	mov    WORD PTR [edi+0x72819041],ss
  408a7f:	xor    esp,DWORD PTR [esi+0x52]
  408a82:	cmp    BYTE PTR [edx],ch
  408a84:	xor    eax,0xd614f35e
  408a89:	sub    DWORD PTR [ecx-0x6a],ebx
  408a8c:	loope  0x408b0b
  408a8e:	test   al,0x51
  408a90:	adc    edx,0xd9a24df7
  408a96:	popa   
  408a97:	cs mov cl,0x3
  408a9a:	(bad)  
  408a9b:	add    eax,0x906f23c6
  408aa0:	or     esp,ecx
  408aa2:	mov    ch,0xae
  408aa4:	pop    esp
  408aa5:	ins    DWORD PTR es:[edi],dx
  408aa6:	ror    BYTE PTR [eax],1
  408aa8:	shl    BYTE PTR [ecx-0x43],1
  408aab:	dec    ecx
  408aac:	and    dl,BYTE PTR [edi+0x3b]
  408aaf:	dec    eax
  408ab0:	test   DWORD PTR [edx],edi
  408ab2:	xchg   ecx,eax
  408ab3:	and    eax,0xed5a5a0b
  408ab8:	sti    
  408ab9:	mov    ah,0x53
  408abb:	jae    0x408b04
  408abd:	mov    ch,0x3d
  408abf:	int3   
  408ac0:	add    BYTE PTR [edi],bh
  408ac2:	mov    al,ds:0x6d18b2bd
  408ac7:	mov    cl,0xd2
  408ac9:	xor    ah,BYTE PTR [edx+0x116a9c93]
  408acf:	and    BYTE PTR [eax-0x23],ah
  408ad2:	mov    al,ds:0x137f43b1
  408ad7:	pop    ecx
  408ad8:	adc    ah,BYTE PTR [edi]
  408ada:	adc    DWORD PTR [edi-0x4b],0xbe6d15f1
  408ae1:	imul   ebp,DWORD PTR [ecx+edi*8+0x28],0x3f
  408ae6:	mov    ebp,DWORD PTR [edx]
  408ae8:	and    DWORD PTR [edx+0x48687226],esp
  408aee:	sbb    ebp,DWORD PTR [ebx]
  408af0:	inc    edi
  408af1:	mov    BYTE PTR [ecx-0x57120cc1],bh
  408af7:	dec    ebx
  408af8:	pop    edx
  408af9:	fwait
  408afa:	xor    BYTE PTR [ecx],al
  408afc:	sub    al,0x50
  408afe:	xchg   ebx,eax
  408aff:	cmp    edi,DWORD PTR [ecx+0x29d8f934]
  408b05:	cmp    dh,bh
  408b07:	jns    0x408b6f
  408b09:	mov    al,ds:0xc62845e6
  408b0e:	(bad)  
  408b0f:	div    ebp
  408b11:	push   0x79
  408b13:	and    al,0x62
  408b15:	in     eax,dx
  408b16:	imul   ebp
  408b18:	mov    ss,WORD PTR [ecx+edi*1+0x5ba51719]
  408b1f:	inc    edx
  408b20:	jl     0x408b2a
  408b22:	push   0x3e
  408b24:	(bad)
  408b27:	or     BYTE PTR [ecx],0xb3
  408b2a:	repnz cmc 
  408b2c:	mov    eax,DWORD PTR [eax-0x26]
  408b2f:	int    0x2f
  408b31:	xchg   DWORD PTR [ebx],edx
  408b33:	shl    DWORD PTR [esp+ecx*2-0x5e1479fd],0x93
  408b3b:	in     al,dx
  408b3c:	xchg   edi,eax
  408b3d:	mov    eax,ds:0x4980f946
  408b42:	fstp   DWORD PTR [ebx+0x18]
  408b45:	jns    0x408b48
  408b47:	les    esi,FWORD PTR [ebx-0x13eab3e3]
  408b4d:	mov    dh,0x32
  408b4f:	jbe    0x408b32
  408b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b52:	add    eax,0x2019b35f
  408b57:	div    DWORD PTR [ebp+0x6]
  408b5a:	outs   dx,DWORD PTR ds:[esi]
  408b5b:	dec    edi
  408b5c:	aad    0x41
  408b5e:	xchg   edx,eax
  408b5f:	sub    al,0xd2
  408b61:	inc    eax
  408b62:	sbb    ah,BYTE PTR [ebx+0x31fa2d14]
  408b68:	pop    ds
  408b69:	and    esi,ebp
  408b6b:	je     0x408aee
  408b6d:	mov    ch,BYTE PTR [edi-0x58c6e5ab]
  408b73:	(bad)  
  408b74:	in     al,0x40
  408b76:	sub    BYTE PTR [ecx],cl
  408b78:	dec    ebp
  408b79:	jno    0x5250b7c9
  408b7f:	test   al,0x1c
  408b81:	cmp    dh,BYTE PTR fs:0x5a08942d
  408b88:	jmp    0x408b8a
  408b8a:	(bad)  
  408b8b:	sub    BYTE PTR [edx+0x4e0d7653],0x8c
  408b92:	fucomp st(1)
  408b94:	(bad)
  408b99:	ror    DWORD PTR [ecx+0x1947e707],1
  408b9f:	mov    ecx,0xc45516c8
  408ba4:	dec    ebp
  408ba5:	jecxz  0x408b8e
  408ba7:	push   edi
  408ba8:	pop    es
  408ba9:	sub    BYTE PTR ds:0xf3fef204,cl
  408baf:	jl     0x408b61
  408bb1:	int3   
  408bb2:	imul   esp,ebx,0x2e33dd2e
  408bb8:	push   cs
  408bb9:	sbb    DWORD PTR [edi+0x4],edi
  408bbc:	sbb    DWORD PTR [esi+0x50b52a42],ebx
  408bc2:	sti    
  408bc3:	and    edx,0xfb7c60
  408bc9:	mov    ebp,0xb87b62a3
  408bce:	mov    ds:0xc4e2d142,eax
  408bd3:	aam    0x4
  408bd5:	mov    dl,0x4
  408bd7:	inc    esi
  408bd8:	sub    dl,BYTE PTR [ecx+0x1f]
  408bdb:	(bad)  
  408bdc:	mov    ebx,0xbdf0fa8
  408be1:	fisub  DWORD PTR [ecx-0x6a2ace62]
  408be7:	ret    0xd9cb
  408bea:	pop    esi
  408beb:	jp     0x408ba2
  408bed:	(bad)  
  408bef:	xor    esp,DWORD PTR [esi+eax*2+0x771add13]
  408bf6:	sbb    DWORD PTR [edx+0x8c143b6],ecx
  408bfc:	or     ecx,ecx
  408bfe:	add    dh,BYTE PTR [ecx]
  408c00:	into   
  408c01:	call   0xeafcec29
  408c06:	xlat   BYTE PTR fs:[ebx]
  408c08:	ins    DWORD PTR es:[edi],dx
  408c09:	mov    al,0x89
  408c0b:	loope  0x408c2d
  408c0d:	sbb    esi,ecx
  408c0f:	sbb    eax,0x185e396f
  408c14:	aaa    
  408c15:	(bad)  
  408c16:	rol    DWORD PTR [esi+ebx*8],cl
  408c19:	je     0x408ba3
  408c1b:	out    dx,eax
  408c1c:	mov    eax,0xc8765071
  408c21:	push   ds
  408c22:	cmp    dh,BYTE PTR [ebx]
  408c24:	loopne 0x408c8f
  408c26:	sbb    ebp,DWORD PTR [ebp-0x40]
  408c29:	cdq    
  408c2a:	sahf   
  408c2b:	daa    
  408c2c:	push   edx
  408c2d:	xchg   edi,eax
  408c2e:	cmp    eax,DWORD PTR [esi+edi*1-0x10d63625]
  408c35:	inc    esi
  408c36:	sub    bl,BYTE PTR [edx-0x4d]
  408c39:	xor    eax,0xd3ee5a55
  408c3e:	mov    edi,DWORD PTR [ebp-0x56]
  408c41:	or     eax,0x948b4c47
  408c46:	xor    eax,0x954641d1
  408c4b:	lods   al,BYTE PTR ds:[esi]
  408c4c:	pop    ebx
  408c4d:	mov    al,bl
  408c4f:	lods   al,BYTE PTR ds:[esi]
  408c50:	sahf   
  408c51:	clc    
  408c52:	mov    dl,0x82
  408c54:	test   eax,0xd905130
  408c59:	jne    0x408cb1
  408c5b:	aam    0x7e
  408c5d:	add    al,0x57
  408c5f:	mov    ebx,0x41964c7f
  408c64:	pop    ss
  408c65:	xor    eax,0x8bd9c56c
  408c6a:	pop    ebp
  408c6b:	xor    ebp,0x77bcd131
  408c71:	cwde   
  408c72:	jbe    0x408cad
  408c74:	mov    al,0x42
  408c76:	jbe    0x408c8b
  408c78:	xor    al,0xbb
  408c7a:	xlat   BYTE PTR ds:[ebx]
  408c7b:	lds    ebp,FWORD PTR [edx+ebx*1+0x11797266]
  408c82:	loopne 0x408c72
  408c84:	lds    eax,FWORD PTR [esi]
  408c86:	mov    ah,dh
  408c88:	xchg   esp,eax
  408c89:	stos   BYTE PTR es:[edi],al
  408c8a:	test   BYTE PTR [edi],al
  408c8c:	into   
  408c8d:	xor    DWORD PTR [ebx+0x63],esi
  408c90:	inc    ebx
  408c91:	cmp    eax,0x7ad8a6bd
  408c96:	xor    esi,DWORD PTR [eax-0x45]
  408c99:	int    0x56
  408c9b:	scas   al,BYTE PTR es:[edi]
  408c9c:	outs   dx,BYTE PTR ds:[esi]
  408c9d:	xor    BYTE PTR [eax],ah
  408c9f:	out    0xaa,eax
  408ca1:	pop    ecx
  408ca2:	and    ecx,0x9d39285a
  408ca8:	outs   dx,DWORD PTR ds:[esi]
  408ca9:	push   eax
  408caa:	pop    edx
  408cab:	outs   dx,BYTE PTR ds:[esi]
  408cac:	std    
  408cad:	and    al,0xb
  408caf:	xchg   ecx,eax
  408cb0:	mov    WORD PTR [edx],ds
  408cb2:	mov    dh,BYTE PTR [edx*2+0x70659638]
  408cb9:	pop    esi
  408cba:	mov    fs,WORD PTR [edi+0x27]
  408cbd:	jo     0x408c98
  408cbf:	out    dx,eax
  408cc0:	gs je  0x408c7c
  408cc3:	xchg   ecx,eax
  408cc4:	or     ch,BYTE PTR [esi+ebp*2-0xa]
  408cc8:	xchg   ecx,eax
  408cc9:	dec    esi
  408cca:	lods   eax,DWORD PTR ss:[esi]
  408ccc:	inc    ebx
  408ccd:	(bad)
  408cd1:	pop    ss
  408cd2:	aad    0xc7
  408cd4:	jmp    0xe1d9:0x824ff7a3
  408cdb:	in     al,dx
  408cdc:	addr16 daa 
  408cde:	sbb    ch,dl
  408ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce1:	fneni(8087 only) 
  408ce3:	jmp    0x408cc8
  408ce5:	sbb    ah,BYTE PTR [esi+0x6]
  408ce8:	inc    edx
  408ce9:	adc    eax,ecx
  408ceb:	adc    ebx,edi
  408ced:	test   DWORD PTR ds:0xfcf60fd8,edx
  408cf3:	adc    al,0x5b
  408cf5:	mov    edi,0x8f728ea3
  408cfa:	test   DWORD PTR [ebx+0x55],esp
  408cfd:	in     eax,0x1c
  408cff:	sahf   
  408d00:	loope  0x408d44
  408d02:	test   DWORD PTR [ecx+0x762309f],0x6370fd93
  408d0c:	loope  0x408c8f
  408d0e:	or     eax,0x73337574
  408d13:	jno    0x408cbd
  408d15:	ins    DWORD PTR es:[edi],dx
  408d16:	daa    
  408d17:	ss xchg esi,eax
  408d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d1a:	mov    cl,0x58
  408d1c:	jae    0x408ca2
  408d1e:	mov    edx,0x44e05f90
  408d23:	xor    eax,DWORD PTR [edx+0xd0db35d]
  408d29:	inc    ecx
  408d2a:	inc    edi
  408d2b:	(bad)
  408d2e:	add    eax,0xd56a7963
  408d33:	sahf   
  408d34:	mov    DWORD PTR [edx+eax*2],esp
  408d37:	mov    ebp,0x9b56ae8f
  408d3c:	xchg   ebx,eax
  408d3d:	in     eax,dx
  408d3e:	mov    ebp,DWORD PTR [ecx]
  408d40:	push   ebp
  408d41:	in     al,0x61
  408d43:	push   0xafdbe0e7
  408d48:	pop    eax
  408d49:	ret    
  408d4a:	cwde   
  408d4b:	xor    esp,DWORD PTR ds:0x7d596bad
  408d51:	dec    ebp
  408d52:	das    
  408d53:	pop    ebp
  408d54:	imul   DWORD PTR [ecx-0x73]
  408d57:	xlat   BYTE PTR ds:[ebx]
  408d58:	out    0x32,al
  408d5a:	fcom   QWORD PTR [ebx+0xa]
  408d5d:	js     0x408d83
  408d5f:	out    dx,eax
  408d60:	jns    0x408d03
  408d62:	or     al,0xd7
  408d64:	mov    cl,0xc9
  408d66:	cmp    BYTE PTR [ebp+0x59fb6e0e],cl
  408d6c:	dec    ecx
  408d6d:	dec    edi
  408d6e:	add    ecx,ecx
  408d70:	lods   al,BYTE PTR ds:[esi]
  408d71:	xor    DWORD PTR [esi],ebx
  408d73:	push   ebp
  408d74:	ja     0x408d1d
  408d76:	mov    esi,0x7dd7c251
  408d7b:	ja     0x408ddc
  408d7d:	pop    edx
  408d7e:	jo     0x408df0
  408d80:	or     edx,ebx
  408d82:	es cli 
  408d84:	imul   edi,ebp,0xcc6e15d4
  408d8a:	pop    ss
  408d8b:	stos   DWORD PTR es:[edi],eax
  408d8c:	cmp    DWORD PTR [edi],edi
  408d8e:	sub    BYTE PTR [ebx-0x563e4abc],ah
  408d94:	xor    ah,ch
  408d96:	mov    cl,0x9e
  408d98:	aam    0xdf
  408d9a:	(bad)  
  408d9b:	pop    esi
  408d9c:	jb     0x408db9
  408d9e:	cld    
  408d9f:	(bad)  
  408da0:	scas   al,BYTE PTR es:[edi]
  408da1:	in     eax,0x73
  408da3:	jb     0x408d4c
  408da5:	jno    0x408e05
  408da7:	pop    esp
  408da8:	add    BYTE PTR [edx+0x31],0x89
  408dac:	bound  eax,QWORD PTR [eax]
  408dae:	sub    ch,BYTE PTR [ecx-0x1]
  408db1:	pop    eax
  408db2:	adc    eax,0x4515ff
  408db7:	and    BYTE PTR [esi-0x45],bh
  408dba:	or     al,0x2d
  408dbc:	out    0x91,al
  408dbe:	ss mov edi,0xea735119
  408dc4:	pop    es
  408dc5:	(bad)  
  408dc6:	(bad)  
  408dc7:	mov    eax,0xda4177cb
  408dcc:	js     0x408dcc
  408dce:	daa    
  408dcf:	lods   al,BYTE PTR fs:[esi]
  408dd1:	pop    edx
  408dd2:	fs sti 
  408dd4:	mov    cl,0xd
  408dd6:	in     eax,0x82
  408dd8:	jecxz  0x408d95
  408dda:	lahf   
  408ddb:	dec    ebp
  408ddc:	stos   BYTE PTR es:[edi],al
  408ddd:	and    DWORD PTR [esi+0x306f21d4],edi
  408de3:	sub    DWORD PTR [esi],ecx
  408de5:	dec    edi
  408de6:	mov    ah,BYTE PTR [ebx]
  408de8:	fwait
  408de9:	std    
  408dea:	lods   eax,DWORD PTR ds:[esi]
  408deb:	call   0x176b7f09
  408df0:	push   ecx
  408df1:	jns    0x408e45
  408df3:	dec    ebp
  408df4:	call   0x29fc:0x40ec4667
  408dfb:	ret    
  408dfc:	cmp    eax,0x70021fe0
  408e01:	gs loope 0x408e7d
  408e04:	and    al,0x69
  408e06:	fld    TBYTE PTR [edx-0x2]
  408e09:	and    eax,edi
  408e0b:	inc    esi
  408e0c:	enter  0x21fe,0x82
  408e10:	fsub   QWORD PTR [edi-0x36e0f162]
  408e16:	dec    esi
  408e17:	adc    dh,ch
  408e19:	arpl   WORD PTR [esi],cx
  408e1b:	mov    edx,0x21d54c00
  408e20:	call   DWORD PTR [esi]
  408e22:	sbb    BYTE PTR [ebp+eiz*4+0x38b06d34],al
  408e29:	hlt    
  408e2a:	popf   
  408e2b:	outs   dx,DWORD PTR ds:[esi]
  408e2c:	repnz add al,dh
  408e2f:	jecxz  0x408e6c
  408e31:	pusha  
  408e32:	(bad)  
  408e33:	loopne 0x408e4b
  408e35:	(bad)  
  408e37:	mov    eax,0x4e2094a0
  408e3c:	cmp    ah,bh
  408e3e:	stc    
  408e3f:	nop
  408e40:	stos   BYTE PTR es:[edi],al
  408e41:	fdivrp st(5),st
  408e43:	mov    ebp,0xa4ac18a6
  408e48:	test   BYTE PTR [edi-0x5376a927],bl
  408e4e:	sti    
  408e4f:	es mov ecx,0x835636d7
  408e55:	and    BYTE PTR [esi-0x3c13123],dh
  408e5b:	dec    ebp
  408e5c:	cmp    eax,0x2c00c4dd
  408e61:	sub    ebx,esi
  408e63:	adc    al,0xa2
  408e65:	pop    ebx
  408e66:	adc    ch,BYTE PTR [eax-0x67]
  408e69:	rcr    DWORD PTR [esi-0x46],cl
  408e6c:	dec    edx
  408e6d:	imul   ecx,DWORD PTR [ecx+0x4a],0x19427962
  408e74:	dec    eax
  408e75:	push   ebp
  408e76:	or     ecx,DWORD PTR [ecx+eax*2+0x74]
  408e7a:	mov    eax,ds:0x16b04c51
  408e7f:	or     eax,0xf17f68d4
  408e84:	shr    ah,cl
  408e86:	xchg   ebx,eax
  408e87:	shl    al,1
  408e89:	dec    eax
  408e8a:	retf   0xbfcc
  408e8d:	push   edi
  408e8e:	cmp    eax,0xa5ead3d1
  408e93:	les    ecx,FWORD PTR [ebp-0x30f4f4e7]
  408e99:	cmp    eax,0x129dd3e5
  408e9e:	jne    0x408ea3
  408ea0:	stc    
  408ea1:	inc    edx
  408ea2:	or     BYTE PTR [ecx],dh
  408ea4:	ret    
  408ea5:	lods   eax,DWORD PTR ds:[esi]
  408ea6:	idiv   DWORD PTR [ebp+0x4d18ede5]
  408eac:	fstp   DWORD PTR [ebx+0x1149d50b]
  408eb2:	jg     0x408eb5
  408eb4:	and    ah,BYTE PTR [edi+0x73]
  408eb7:	retf   0x26f7
  408eba:	aas    
  408ebb:	mov    edx,0xad018a65
  408ec0:	jae    0x408f39
  408ec2:	out    dx,al
  408ec3:	xchg   ebx,eax
  408ec4:	popf   
  408ec5:	jnp    0x408f39
  408ec7:	test   eax,0x705548e8
  408ecc:	push   edi
  408ecd:	push   ds
  408ece:	sub    ebx,DWORD PTR [ebp-0x7d]
  408ed1:	daa    
  408ed2:	int3   
  408ed3:	sub    DWORD PTR [esp+esi*4+0x47058cc1],esp
  408eda:	arpl   WORD PTR [eax-0x2e6f328b],cx
  408ee0:	mov    bl,0xe4
  408ee2:	push   eax
  408ee3:	outs   dx,DWORD PTR ds:[esi]
  408ee4:	inc    ecx
  408ee5:	jmp    0x89a5db13
  408eea:	ret    0xef9c
  408eed:	xor    bh,dh
  408eef:	jno    0x408f2c
  408ef1:	test   DWORD PTR [eax+0x2b81e8f8],ebx
  408ef7:	daa    
  408ef8:	jg     0x408f40
  408efa:	mov    al,0x7c
  408efc:	sbb    esp,ecx
  408efe:	retf   0xbaee
  408f01:	fwait
  408f02:	mov    ch,0x49
  408f04:	jb     0x408ea5
  408f06:	fcmovu st,st(4)
  408f08:	xchg   ah,dh
  408f0a:	mov    al,0xd7
  408f0c:	dec    esi
  408f0d:	gs mov edx,0xf85c89e9
  408f13:	mov    dl,0xe
  408f15:	mov    dh,0x8
  408f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f18:	icebp  
  408f19:	mov    edi,0xa60d809
  408f1e:	adc    BYTE PTR [ecx+ecx*2-0x15e57580],cl
  408f25:	xchg   esi,eax
  408f26:	out    dx,al
  408f27:	pop    ecx
  408f28:	mov    BYTE PTR [edx],ch
  408f2a:	jp     0x408f01
  408f2c:	xchg   esi,eax
  408f2d:	and    ch,dh
  408f2f:	sub    eax,ebp
  408f31:	xor    eax,eax
  408f33:	cld    
  408f34:	adc    eax,0x48026ab2
  408f39:	push   eax
  408f3a:	mov    ebp,DWORD PTR [esi]
  408f3c:	cmc    
  408f3d:	pop    edx
  408f3e:	mov    ds:0x86152699,al
  408f43:	inc    ebx
  408f44:	mov    esi,0x15edf7f5
  408f49:	clc    
  408f4a:	xchg   edi,eax
  408f4b:	icebp  
  408f4c:	push   ss
  408f4d:	test   edx,ebx
  408f4f:	push   ds
  408f50:	fstp   TBYTE PTR [ebp-0x1b]
  408f53:	pop    ss
  408f54:	xchg   esi,eax
  408f55:	retf   0xb868
  408f58:	adc    eax,DWORD PTR [eax+0x3133332e]
  408f5e:	jg     0x408fb8
  408f60:	icebp  
  408f61:	loope  0x408fd5
  408f63:	pop    edi
  408f64:	push   ebx
  408f65:	sti    
  408f66:	pusha  
  408f67:	mov    edi,0x5d2540e5
  408f6c:	in     al,0x8e
  408f6e:	lea    ebp,[esi+0x549081fc]
  408f74:	lods   al,BYTE PTR ds:[esi]
  408f75:	(bad)  
  408f76:	cmp    ah,BYTE PTR [ebx-0x5b]
  408f79:	inc    ebx
  408f7a:	cmp    bl,BYTE PTR [ebx-0x44]
  408f7d:	popf   
  408f7e:	mov    bh,0x26
  408f80:	fcmovnbe st,st(4)
  408f82:	push   0x15627154
  408f87:	ins    BYTE PTR es:[edi],dx
  408f88:	aaa    
  408f89:	(bad)  
  408f8b:	xchg   ebp,eax
  408f8c:	leave  
  408f8d:	fisttp WORD PTR [eax-0x1]
  408f90:	xor    esp,0xffffffcb
  408f93:	mov    bl,0x66
  408f95:	and    ebx,DWORD PTR [edi+0xd8390]
  408f9b:	ret    0x9df9
  408f9e:	ss and al,0x83
  408fa1:	add    ah,BYTE PTR [edi-0x55]
  408fa4:	jmp    0x77b2f612
  408fa9:	bound  esi,QWORD PTR [ecx+0x5d]
  408fac:	xchg   BYTE PTR [edx+0x59],dh
  408faf:	addr16 dec ebx
  408fb1:	cmp    al,0x54
  408fb3:	outs   dx,DWORD PTR ds:[esi]
  408fb4:	(bad)  
  408fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fb6:	ins    BYTE PTR es:[edi],dx
  408fb7:	nop
  408fb8:	mov    ds:0x1b0fea1d,eax
  408fbd:	jecxz  0x408ff3
  408fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fc0:	ins    BYTE PTR es:[edi],dx
  408fc1:	out    dx,eax
  408fc2:	enter  0x37f5,0x4b
  408fc6:	jg     0x409040
  408fc8:	jmp    0x409040
  408fca:	leave  
  408fcb:	fstp   TBYTE PTR [edx+0xc]
  408fce:	icebp  
  408fcf:	push   ss
  408fd0:	cs das 
  408fd2:	aaa    
  408fd3:	sti    
  408fd4:	sub    BYTE PTR [esi],al
  408fd6:	sbb    eax,0x510ea268
  408fdb:	fmul   DWORD PTR [ebx-0x34]
  408fde:	jno    0x40901e
  408fe0:	das    
  408fe1:	sbb    esi,DWORD PTR [edx+eiz*1+0x4]
  408fe5:	cmp    al,0x1e
  408fe7:	push   0x3c
  408fe9:	cmp    ecx,esp
  408feb:	mov    dh,0x40
  408fed:	mov    dh,0xfc
  408fef:	shl    BYTE PTR [edx+0x31],0x84
  408ff3:	(bad)  
  408ff4:	pop    ds
  408ff5:	sti    
  408ff6:	outs   dx,DWORD PTR ds:[esi]
  408ff7:	out    0x46,al
  408ff9:	shl    DWORD PTR [ebx+eax*8],0x21
  408ffd:	retf   
  408ffe:	and    esp,edi
  409000:	pop    edx
  409001:	ins    DWORD PTR es:[edi],dx
  409002:	sub    bl,BYTE PTR [esp+eax*8-0x77380990]
  409009:	test   bh,bl
  40900b:	test   ebp,edi
  40900d:	stos   BYTE PTR es:[edi],al
  40900e:	xor    BYTE PTR [ebx-0x5273b077],cl
  409014:	adc    BYTE PTR [ecx+0x4a],ah
  409017:	fild   DWORD PTR [edi-0xc]
  40901a:	push   ss
  40901b:	cdq    
  40901c:	xlat   BYTE PTR ds:[ebx]
  40901d:	mov    DWORD PTR [edx+0x4ba4b25],ebx
  409023:	fimul  WORD PTR [edi-0x2]
  409026:	push   edx
  409027:	imul   esp,DWORD PTR [eax+ebp*4+0xf],0x638cca62
  40902f:	push   ds
  409030:	or     BYTE PTR [esi],ch
  409032:	sub    BYTE PTR [esi+0x8b2dde7],dl
  409038:	jle    0x408fd2
  40903a:	mov    esi,0x348d6a25
  40903f:	xor    eax,0xae541ec2
  409044:	pop    edx
  409045:	sti    
  409046:	jno    0x409059
  409048:	jp     0x4090bd
  40904a:	data16 sbb BYTE PTR [ebp-0x560edb65],dl
  409051:	sub    eax,0x22e82071
  409056:	xor    ecx,DWORD PTR [esi]
  409058:	xchg   edx,eax
  409059:	inc    ecx
  40905a:	cmp    al,0xe0
  40905c:	mov    esi,0x96c63344
  409061:	add    eax,0x4cb4bbc6
  409066:	sub    edi,eax
  409068:	mov    DWORD PTR [esp+esi*4-0x33f8ba3c],edi
  40906f:	inc    esp
  409070:	retf   0x913f
  409073:	sti    
  409074:	cld    
  409075:	mov    ah,0x8a
  409077:	or     al,0xca
  409079:	repz inc esi
  40907b:	mov    bl,0x78
  40907d:	or     eax,0x3e008868
  409082:	icebp  
  409083:	and    DWORD PTR [ebx],esi
  409085:	push   es
  409086:	jmp    0xdd44:0xb11ee965
  40908d:	cld    
  40908e:	push   ebx
  40908f:	jmp    0x8655:0xa0a1907a
  409096:	jmp    0x4090bf
  409098:	push   eax
  409099:	enter  0xcf8b,0xc4
  40909d:	push   esp
  40909e:	pop    ss
  40909f:	jl     0x4090f5
  4090a1:	cmp    BYTE PTR [ebx-0x36c449ab],dh
  4090a7:	adc    al,0x40
  4090a9:	pop    ebp
  4090aa:	dec    ebp
  4090ab:	dec    esi
  4090ac:	aas    
  4090ad:	cld    
  4090ae:	shl    eax,0x3c
  4090b1:	add    eax,0xaa07a15f
  4090b6:	lods   al,BYTE PTR ds:[esi]
  4090b7:	rep stos DWORD PTR es:[edi],eax
  4090b9:	xchg   esi,eax
  4090ba:	mov    al,ds:0xc2f54b6d
  4090bf:	push   esp
  4090c0:	in     eax,dx
  4090c1:	dec    eax
  4090c2:	loope  0x409092
  4090c4:	xchg   ebx,eax
  4090c5:	push   cs
  4090c6:	and    dl,BYTE PTR [ecx-0x38]
  4090c9:	jo     0x409072
  4090cb:	or     ebx,DWORD PTR [ebx+0x3]
  4090ce:	(bad)  
  4090cf:	xor    al,0x2d
  4090d1:	leave  
  4090d2:	mov    gs,WORD PTR [ebp-0x13f83792]
  4090d8:	xor    cl,cl
  4090da:	inc    esp
  4090db:	mov    WORD PTR [ebx-0x20],?
  4090de:	and    al,0x2e
  4090e0:	cmc    
  4090e1:	ret    0x8f03
  4090e4:	das    
  4090e5:	ret    0xa902
  4090e8:	cli    
  4090e9:	pop    ss
  4090ea:	aad    0x7d
  4090ec:	mov    cs,edx
  4090ee:	adc    esi,ebp
  4090f0:	cmp    dh,dl
  4090f2:	sub    BYTE PTR [eax-0x7f],bl
  4090f5:	out    0x55,al
  4090f7:	pusha  
  4090f8:	mov    ecx,0x52fe50d3
  4090fd:	in     al,dx
  4090fe:	int    0x3
  409100:	lock cmp al,dh
  409103:	xor    esi,DWORD PTR [ebx+0x42]
  409106:	leave  
  409107:	sbb    eax,0x516d537c
  40910c:	shl    BYTE PTR ds:0x7494b20,1
  409112:	cmp    DWORD PTR [edx-0x70],esp
  409115:	stos   BYTE PTR es:[edi],al
  409116:	add    BYTE PTR [ecx+0x372c22cc],ch
  40911c:	or     al,BYTE PTR [esi+0x45]
  40911f:	adc    al,bl
  409121:	ret    0x680a
  409124:	hlt    
  409125:	xchg   ecx,eax
  409126:	adc    dh,BYTE PTR [eax-0x73753a04]
  40912c:	cwde   
  40912d:	inc    ebp
  40912e:	and    ebp,DWORD PTR [esi+0x44d367ca]
  409134:	pop    esp
  409135:	fidiv  WORD PTR [ebx+0x5]
  409138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409139:	sahf   
  40913a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40913b:	jne    0x409132
  40913d:	xchg   ecx,eax
  40913e:	call   0x6e8d:0x6a19d4a8
  409145:	stos   BYTE PTR es:[edi],al
  409146:	jne    0x4091b6
  409148:	jmp    FWORD PTR [ebp+0x12044893]
  40914e:	jne    0x4090e7
  409150:	enter  0xbd47,0x3c
  409154:	fs jnp 0x4090fc
  409157:	mov    esp,0x4fbe579f
  40915c:	loopne 0x40916d
  40915e:	pop    eax
  40915f:	dec    ebp
  409160:	mov    ah,ah
  409162:	mov    al,0x4c
  409165:	mov    al,BYTE PTR [eax+0x3421492]
  40916b:	icebp  
  40916c:	retf   0x65a2
  40916f:	in     eax,dx
  409170:	sbb    al,0xf6
  409172:	mov    dl,0xef
  409174:	sbb    edi,0xffffff8b
  409177:	cld    
  409178:	sahf   
  409179:	mov    ds:0x37fb7b9e,eax
  40917e:	jne    0x409171
  409180:	xchg   esi,eax
  409181:	mov    ds:0x11fc1562,al
  409186:	or     eax,0x67705f94
  40918b:	dec    BYTE PTR [ebx]
  40918d:	mov    ecx,DWORD PTR [edx+0x688ed76]
  409193:	dec    esi
  409194:	retf   
  409195:	and    BYTE PTR fs:[edx+0x45],bh
  409199:	push   esi
  40919a:	sub    al,0x49
  40919c:	nop
  40919d:	or     ebp,DWORD PTR [esi-0x2d]
  4091a0:	rcl    eax,1
  4091a2:	jbe    0x409188
  4091a4:	push   0xffffffe3
  4091a6:	sub    DWORD PTR [edx+0x2c],edx
  4091a9:	dec    esp
  4091aa:	mov    edx,0x5e7a03cc
  4091af:	push   0x1f
  4091b1:	adc    bh,BYTE PTR [ecx+0x29292a93]
  4091b7:	into   
  4091b8:	repnz and al,0x9e
  4091bb:	or     BYTE PTR [eax],dl
  4091bd:	and    cl,dl
  4091bf:	dec    DWORD PTR [ebp+0x35]
  4091c2:	and    BYTE PTR [ecx+edi*8],ah
  4091c5:	push   esp
  4091c6:	mov    bh,0xfb
  4091c8:	rcl    DWORD PTR [edi],1
  4091ca:	add    eax,esi
  4091cc:	ror    BYTE PTR [ebx-0x1568b5b0],0x40
  4091d3:	imul   eax,esp,0x34
  4091d6:	sub    al,0x22
  4091d8:	and    al,al
  4091da:	inc    eax
  4091db:	in     eax,0x35
  4091dd:	nop
  4091de:	sub    eax,0xcbd0340
  4091e3:	bound  eax,QWORD PTR [esi]
  4091e5:	(bad)  
  4091e6:	into   
  4091e7:	jb     0x409230
  4091e9:	mov    eax,0xe5edca82
  4091ee:	scas   al,BYTE PTR es:[edi]
  4091ef:	jbe    0x4091b3
  4091f1:	retf   
  4091f2:	inc    ebx
  4091f3:	jecxz  0x4091a6
  4091f5:	in     al,dx
  4091f6:	sbb    ch,BYTE PTR [edx-0x62]
  4091f9:	(bad)  
  4091fa:	dec    ah
  4091fc:	inc    esi
  4091fd:	cdq    
  4091fe:	aam    0x18
  409200:	in     al,0x79
  409202:	adc    eax,0xc300642
  409207:	lahf   
  409208:	fldl2e 
  40920b:	pop    es
  40920c:	mov    dl,0x6
  40920e:	(bad)  
  40920f:	mov    al,0xb2
  409211:	push   es
  409212:	call   0xfc2ce58e
  409217:	push   ecx
  409218:	jo     0x409208
  40921a:	stos   DWORD PTR es:[edi],eax
  40921b:	test   DWORD PTR [ebx],ecx
  40921d:	dec    edx
  40921e:	(bad)  
  40921f:	cld    
  409220:	int    0x62
  409222:	retf   0x6e33
  409225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409226:	in     eax,0x73
  409228:	arpl   WORD PTR [eax-0xfbba1e4],bp
  40922e:	adc    BYTE PTR [eax],0x8
  409231:	aaa    
  409232:	dec    eax
  409233:	shl    DWORD PTR ds:0x4055500c,cl
  409239:	adc    al,0x59
  40923b:	in     eax,dx
  40923c:	mov    dl,0xc6
  40923e:	jmp    0x409262
  409240:	jmp    0x3df9:0x3a183b91
  409247:	jns    0x4092ad
  409249:	push   ecx
  40924a:	out    0x15,al
  40924c:	fcmovnu st,st(3)
  40924e:	adc    al,0x7c
  409250:	push   eax
  409251:	push   ebx
  409252:	pop    ebp
  409253:	xor    ch,BYTE PTR [esi]
  409255:	pushf  
  409256:	shl    BYTE PTR [ebx-0x55],0x46
  40925a:	xchg   edi,eax
  40925b:	dec    edx
  40925c:	arpl   WORD PTR [esi],bx
  40925e:	es addr16 xchg esp,eax
  409261:	and    al,BYTE PTR [esi-0x3d]
  409264:	into   
  409265:	fimul  WORD PTR [esi+0x48edd360]
  40926b:	pop    eax
  40926c:	(bad)  
  40926d:	das    
  40926e:	jmp    FWORD PTR [edi-0x22]
  409271:	pop    eax
  409272:	push   edi
  409273:	push   ebx
  409274:	fwait
  409275:	pop    ebx
  409276:	imul   edi,DWORD PTR [ebx-0x7],0xb25334c7
  40927d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40927e:	sar    DWORD PTR fs:0x80aefda9,cl
  409285:	or     eax,0xa3c9a8cd
  40928a:	scas   al,BYTE PTR es:[edi]
  40928b:	out    0x87,al
  40928d:	gs gs out 0x40,eax
  409291:	ins    DWORD PTR es:[edi],dx
  409292:	pop    ebp
  409293:	inc    edi
  409294:	test   DWORD PTR [edx+0x55],0x6febf39e
  40929b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40929c:	mov    eax,ds:0x9794ec11
  4092a1:	ins    DWORD PTR es:[edi],dx
  4092a2:	mov    ecx,0x4c55b4f1
  4092a7:	sbb    DWORD PTR [esi+ecx*4],0x2a52514e
  4092ae:	add    ecx,ebx
  4092b0:	inc    edx
  4092b1:	jecxz  0x40925e
  4092b3:	adc    eax,0x4151fbae
  4092b8:	and    al,0x5c
  4092ba:	loop   0x40926d
  4092bc:	jno    0x40932b
  4092be:	sub    DWORD PTR [ebp+0x1945faad],0x7d314e8a
  4092c8:	push   cs
  4092c9:	inc    esi
  4092ca:	dec    esp
  4092cb:	in     al,0x9b
  4092cd:	pop    ebx
  4092ce:	dec    esp
  4092cf:	ins    BYTE PTR es:[edi],dx
  4092d0:	xchg   DWORD PTR [edx-0x326ce805],eax
  4092d6:	ins    DWORD PTR es:[edi],dx
  4092d7:	cmp    BYTE PTR [ecx],0x85
  4092da:	xchg   esi,eax
  4092db:	fwait
  4092dc:	or     bh,dh
  4092de:	out    dx,eax
  4092df:	mov    ch,0x46
  4092e1:	jns    0x40935c
  4092e3:	dec    ebp
  4092e4:	xor    al,ah
  4092e6:	arpl   WORD PTR [ebx-0x6d92ebe3],sp
  4092ec:	jb     0x4092bf
  4092ee:	push   0x61
  4092f0:	pop    esp
  4092f1:	stos   BYTE PTR es:[edi],al
  4092f2:	aaa    
  4092f3:	sbb    BYTE PTR [esi*2-0x4fe752c2],ch
  4092fa:	(bad)  
  4092fb:	(bad)  
  4092fc:	ds pop esp
  4092fe:	adc    al,0x83
  409300:	loop   0x40936b
  409302:	loope  0x4092a5
  409304:	sub    al,0xbc
  409306:	sti    
  409307:	jle    0x409311
  409309:	loopne 0x4092b3
  40930b:	xchg   DWORD PTR [ebx],ebp
  40930d:	mov    bl,0x8c
  40930f:	pop    ss
  409310:	sbb    BYTE PTR [esp+edi*8+0x15],ch
  409314:	push   0xffffffde
  409316:	jge    0x4092b8
  409318:	cmp    eax,0x1835f53c
  40931d:	test   al,0xdf
  40931f:	hlt    
  409320:	fimul  WORD PTR [edx]
  409322:	pop    ecx
  409323:	jne    0x40939c
  409325:	or     DWORD PTR [esi-0x7e],0xff817da8
  40932c:	pop    esi
  40932d:	fstp   DWORD PTR [edi]
  40932f:	cmp    ch,BYTE PTR [ecx]
  409331:	push   edx
  409332:	gs xchg ebx,eax
  409334:	and    esi,ebx
  409336:	(bad)  
  409338:	xor    al,0xa2
  40933a:	arpl   WORD PTR [ebp+esi*4-0x62f4eb34],sp
  409341:	xor    DWORD PTR [ecx+0x3e52a471],ebp
  409347:	cmp    eax,0xd8ce0cf4
  40934c:	out    0xdd,al
  40934e:	sbb    BYTE PTR [ecx+edx*8+0x311692eb],dl
  409355:	hlt    
  409356:	pop    edx
  409357:	ins    DWORD PTR es:[edi],dx
  409358:	call   0xa332:0xa7d3b9a8
  40935f:	pop    ds
  409360:	js     0x4093a8
  409362:	daa    
  409363:	mov    bh,0xdc
  409365:	shl    ecx,1
  409367:	mov    ebp,0xd26bf5be
  40936c:	(bad)  
  40936e:	xor    ebp,esp
  409370:	push   ebx
  409371:	(bad)  
  409372:	adc    al,BYTE PTR [eax]
  409374:	lods   al,BYTE PTR ds:[esi]
  409375:	bound  edx,QWORD PTR [ebp+eiz*1-0x288907fb]
  40937c:	lods   al,BYTE PTR ds:[esi]
  40937d:	mov    BYTE PTR [esi+0x11],ch
  409380:	pop    esp
  409381:	xchg   esi,eax
  409382:	ficomp DWORD PTR [edx+0x25]
  409385:	sbb    al,0x20
  409387:	add    BYTE PTR [edx-0x70],bl
  40938a:	inc    ebp
  40938b:	or     al,0xb4
  40938d:	and    al,0x8f
  40938f:	push   edi
  409390:	fimul  DWORD PTR ds:0x603831fe
  409396:	jns    0x40937c
  409398:	out    dx,eax
  409399:	repnz dec eax
  40939b:	fcomp  DWORD PTR [edi-0x43c7cb75]
  4093a1:	nop
  4093a2:	scas   al,BYTE PTR es:[edi]
  4093a3:	dec    ecx
  4093a4:	ins    DWORD PTR es:[edi],dx
  4093a5:	adc    al,0xc5
  4093a7:	(bad)  
  4093a8:	in     al,dx
  4093a9:	daa    
  4093aa:	pop    esp
  4093ab:	pop    ebp
  4093ac:	daa    
  4093ad:	das    
  4093ae:	push   esp
  4093af:	sahf   
  4093b0:	cpuid  
  4093b2:	xchg   ecx,eax
  4093b3:	and    cl,al
  4093b5:	jmp    0xb5c82b2e
  4093ba:	add    eax,0xe973924b
  4093bf:	mov    ?,esi
  4093c1:	rol    DWORD PTR [ebp+0x4bf7a4d],0xcd
  4093c8:	jbe    0x409439
  4093ca:	sub    edi,DWORD PTR [ebp-0x39d6792f]
  4093d0:	retf   
  4093d1:	rcr    BYTE PTR [ebp-0x16f9f1df],1
  4093d7:	pop    eax
  4093d8:	sbb    eax,0xcf17f7f3
  4093dd:	dec    ebx
  4093de:	std    
  4093df:	add    DWORD PTR [ecx+0x62],0x589cb9f2
  4093e6:	ins    BYTE PTR es:[edi],dx
  4093e7:	dec    esi
  4093e8:	cmp    eax,0x81762327
  4093ed:	dec    ebp
  4093ee:	or     esp,ecx
  4093f0:	into   
  4093f1:	push   esi
  4093f2:	out    0x30,eax
  4093f4:	xchg   ecx,eax
  4093f5:	cli    
  4093f6:	das    
  4093f7:	push   cs
  4093f8:	mov    dl,0xa
  4093fa:	(bad)  
  4093fb:	xlat   BYTE PTR ds:[ebx]
  4093fc:	mov    bh,0x91
  4093fe:	jnp    0x409447
  409400:	and    BYTE PTR ds:0x951367a4,0x3
  409407:	mov    edx,0x9c3c79a0
  40940c:	xor    dh,dh
  40940e:	ss push ebx
  409410:	pop    ebp
  409411:	loop   0x409407
  409413:	or     edi,0x6
  409416:	jge    0x409477
  409418:	lock push ecx
  40941a:	into   
  40941b:	ins    BYTE PTR es:[edi],dx
  40941c:	into   
  40941d:	sub    BYTE PTR [eax+edx*4+0x10],ah
  409421:	lock imul eax,DWORD PTR [ecx],0x9ba0c0fc
  409428:	push   ebx
  409429:	dec    ebp
  40942a:	mov    esi,0x59b13d42
  40942f:	sub    cl,BYTE PTR [ecx-0x7e]
  409432:	(bad)  
  409433:	mov    cl,0xd
  409435:	and    DWORD PTR [edi-0x3e],0x65c0b8ad
  40943c:	jecxz  0x4093fc
  40943e:	pop    ebp
  40943f:	mov    esi,0xa7e17d
  409444:	push   ebp
  409445:	inc    edx
  409447:	lahf   
  409448:	or     BYTE PTR [ebx],ah
  40944a:	mov    edx,0xa50e1da
  40944f:	dec    esi
  409450:	and    DWORD PTR [eax],eax
  409452:	add    eax,0xb48aa19
  409457:	and    eax,DWORD PTR [ebp+0x2e46767e]
  40945d:	call   0x2003:0x5549fb6c
  409464:	int3   
  409465:	sub    eax,0x329d3024
  40946a:	test   dh,dl
  40946c:	arpl   bx,ax
  40946e:	pop    eax
  40946f:	enter  0xe03d,0xfb
  409473:	add    ah,BYTE PTR [edi-0x66]
  409476:	xchg   esp,eax
  409477:	js     0x409447
  409479:	inc    edx
  40947a:	mov    cl,0x26
  40947c:	dec    ebp
  40947d:	adc    al,0xce
  40947f:	fdivr  DWORD PTR [ecx]
  409481:	jle    0x4094e3
  409483:	ins    DWORD PTR es:[edi],dx
  409484:	mov    edi,0xc4b918d6
  409489:	shl    DWORD PTR [edi],0xe
  40948c:	cmp    edi,DWORD PTR [edi-0x50]
  40948f:	vdivps xmm5,xmm7,XMMWORD PTR [ebp-0x1]
  409494:	stc    
  409495:	pop    esi
  409496:	and    al,0x26
  409498:	add    DWORD PTR [esp+esi*8-0x1d],eax
  40949c:	push   cs
  40949d:	adc    DWORD PTR [eax],0x37
  4094a0:	jmp    0xc0e2:0x4b74d28a
  4094a7:	cmp    BYTE PTR [ecx],al
  4094a9:	out    dx,eax
  4094aa:	push   edi
  4094ab:	jmp    0x40944e
  4094ad:	cwde   
  4094ae:	add    al,0x26
  4094b0:	xchg   ebx,eax
  4094b1:	xchg   ebp,eax
  4094b2:	enter  0xfa1e,0x16
  4094b6:	add    BYTE PTR [edi-0x7dab9994],ah
  4094bc:	or     al,0x54
  4094be:	jmp    FWORD PTR [esi-0x52d4e96b]
  4094c4:	sar    BYTE PTR [ebx+0x51],0xf
  4094c8:	pop    edx
  4094c9:	mov    bl,0x91
  4094cb:	imul   ebp,DWORD PTR ds:0xf1d605d1,0x7
  4094d2:	sbb    esp,ecx
  4094d4:	aaa    
  4094d5:	mov    ds:0xe5d585b8,eax
  4094da:	jp     0x40955a
  4094dc:	fcmove st,st(4)
  4094de:	std    
  4094df:	cmp    ebx,DWORD PTR [eax-0x36fe2e63]
  4094e5:	adc    dh,dl
  4094e7:	sub    al,0x4e
  4094e9:	nop
  4094ea:	and    ah,0x22
  4094ed:	pop    ds
  4094ee:	jl     0x409548
  4094f0:	(bad)  [ebp+0x4e24ac68]
  4094f6:	rol    BYTE PTR [eax],cl
  4094f8:	test   DWORD PTR [ecx],ebp
  4094fa:	in     al,dx
  4094fb:	sub    edi,esi
  4094fd:	xchg   ebx,eax
  4094fe:	in     eax,dx
  4094ff:	adc    al,0xfe
  409501:	lock push 0x31
  409504:	in     eax,dx
  409505:	lods   al,BYTE PTR ds:[esi]
  409506:	or     al,0xd1
  409508:	and    BYTE PTR [esi+0x3c],ch
  40950b:	jo     0x409550
  40950d:	ror    BYTE PTR [ebp+0x2b],0x1f
  409511:	and    eax,0x8d11ebd6
  409516:	out    dx,eax
  409517:	scas   eax,DWORD PTR es:[edi]
  409518:	(bad)  
  409519:	fadd   DWORD PTR [edx-0x64]
  40951c:	mov    ecx,0x32172150
  409521:	dec    edi
  409522:	inc    ecx
  409523:	loop   0x4094f1
  409525:	clc    
  409526:	int3   
  409527:	leave  
  409528:	xchg   edi,eax
  409529:	or     edi,DWORD PTR [ecx]
  40952b:	mov    ds:0x55dcdf20,al
  409530:	sub    eax,0x6522683f
  409535:	test   eax,0x3f5ad4d1
  40953a:	dec    esp
  40953b:	cwde   
  40953c:	std    
  40953d:	cmp    BYTE PTR [esi-0x26],dh
  409540:	mov    al,ds:0xa0dd3f8b
  409545:	dec    esi
  409546:	sbb    dh,dl
  409548:	sti    
  409549:	mov    cl,0x30
  40954b:	add    eax,0x42b0a09b
  409550:	dec    ebx
  409551:	fdivr  QWORD PTR ds:0x449be7f0
  409557:	push   esp
  409558:	popf   
  409559:	repz and eax,0xbaba991a
  40955f:	mov    ebp,0x7004454b
  409564:	jnp    0x409527
  409566:	or     DWORD PTR [ebx+0x70b7b2b8],edx
  40956c:	mov    gs,WORD PTR [ebx-0x49ae17c2]
  409572:	inc    esi
  409573:	sbb    DWORD PTR [eax],edx
  409575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409576:	in     eax,0xbe
  409578:	ds sbb eax,0x3f6704
  40957e:	retf   0x6e6b
  409581:	sub    BYTE PTR [ebx-0x273c937c],ah
  409587:	cmp    DWORD PTR [edi+0x3e],edi
  40958a:	fidiv  DWORD PTR [esi-0x4072246f]
  409590:	jecxz  0x4095f1
  409592:	cmp    eax,0x7cc2b1d0
  409597:	(bad)  
  409598:	popa   
  409599:	retf   0x21c8
  40959c:	or     ah,al
  40959e:	daa    
  40959f:	mov    esp,0x385a0e76
  4095a4:	and    bl,bh
  4095a6:	xchg   esi,eax
  4095a7:	mov    edx,0x9c4c824e
  4095ac:	dec    ecx
  4095ad:	mov    ds:0xe6c79237,al
  4095b2:	stos   BYTE PTR es:[edi],al
  4095b3:	lahf   
  4095b4:	loope  0x40954f
  4095b6:	cmc    
  4095b7:	stos   DWORD PTR es:[edi],eax
  4095b8:	call   0x71233ea2
  4095bd:	push   ss
  4095be:	push   eax
  4095bf:	ror    BYTE PTR [edi+0x536b6932],0x80
  4095c6:	inc    edi
  4095c7:	ror    DWORD PTR [esi-0x30e4132b],1
  4095cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095ce:	mov    al,ds:0xc8fcb4c4
  4095d3:	push   cs
  4095d4:	pop    eax
  4095d5:	add    BYTE PTR [edi+ebp*1],bh
  4095d8:	dec    ecx
  4095d9:	icebp  
  4095da:	sub    eax,DWORD PTR [ebx]
  4095dc:	jg     0x409586
  4095de:	sub    DWORD PTR [edi],0xffffffe5
  4095e1:	test   eax,0x7fd72894
  4095e6:	sti    
  4095e7:	retf   0x70b3
  4095ea:	inc    edx
  4095eb:	mov    eax,ds:0x30b20b5e
  4095f0:	dec    esp
  4095f1:	aam    0x7a
  4095f3:	sbb    ah,BYTE PTR [edi+0xf4c9485]
  4095f9:	rcr    DWORD PTR [edi],0xeb
  4095fc:	daa    
  4095fd:	and    al,0x15
  4095ff:	mov    ds:0x183d0ec5,al
  409604:	sahf   
  409605:	xchg   edi,eax
  409606:	dec    edx
  409607:	mov    dl,0x1d
  409609:	xor    BYTE PTR [edx],0x7a
  40960c:	daa    
  40960d:	hlt    
  40960e:	jmp    0xa051a91f
  409613:	add    ebp,DWORD PTR [ecx]
  409615:	(bad)  
  409616:	adc    al,0x25
  409618:	dec    eax
  409619:	mov    eax,ds:0xe2fe93be
  40961e:	mov    eax,0xd75d3a36
  409623:	xchg   edi,eax
  409624:	sbb    DWORD PTR [ebx-0x5d],0x79653c49
  40962b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40962c:	jg     0x40965e
  40962e:	sbb    dl,BYTE PTR [esi-0x2e]
  409631:	(bad)  
  409632:	mov    ebp,DWORD PTR [ebx-0xe]
  409635:	das    
  409636:	sbb    DWORD PTR [ebp+0x88ef674],edx
  40963c:	gs call 0x8c:0x59bde4ae
  409644:	popf   
  409645:	push   ecx
  409646:	inc    esp
  409647:	mov    ecx,0x839d4ff7
  40964c:	stos   BYTE PTR es:[edi],al
  40964d:	and    edx,DWORD PTR [ebp+esi*1-0x1e92e6c4]
  409654:	sub    dl,BYTE PTR [edx+0x14]
  409657:	ins    BYTE PTR es:[edi],dx
  409658:	test   al,0xc4
  40965a:	mov    ebx,es
  40965c:	ret    0xca61
  40965f:	mov    gs,WORD PTR [ebx-0x130d8ea5]
  409665:	jmp    0x48ea07f8
  40966a:	pushf  
  40966b:	dec    edi
  40966c:	pop    edi
  40966d:	ret    0xe0cb
  409670:	call   0x4636:0x29e3dc1c
  409677:	(bad)  
  409678:	mov    ds:0xc25cefb,al
  40967d:	(bad)
  409680:	push   edi
  409681:	jp     0x4096e1
  409683:	add    eax,0xa10b92cf
  409688:	fnsave [edi]
  40968a:	mov    dh,BYTE PTR [eax-0x17]
  40968d:	sub    dh,BYTE PTR [ecx+0x7aa2d71f]
  409693:	sbb    DWORD PTR [esi],esi
  409695:	inc    esp
  409696:	sub    al,0xd9
  409698:	lds    eax,FWORD PTR [edi-0x15]
  40969b:	leave  
  40969c:	xor    al,0x8a
  40969e:	fwait
  40969f:	sbb    BYTE PTR [ebx+0x4],al
  4096a2:	push   edi
  4096a3:	retf   
  4096a4:	add    BYTE PTR [ebp+edi*1+0x6da7942f],bh
  4096ab:	jmp    0x61a645f
  4096b0:	frstor [edx-0xa]
  4096b3:	and    al,0xad
  4096b5:	int    0x6c
  4096b7:	push   ecx
  4096b8:	ins    DWORD PTR es:[edi],dx
  4096b9:	(bad)
  4096bc:	fistp  QWORD PTR [ebx]
  4096be:	inc    esp
  4096bf:	arpl   cx,sp
  4096c1:	sbb    BYTE PTR [esp+ebx*2-0x4b],dh
  4096c5:	imul   bh
  4096c7:	int    0x47
  4096c9:	or     bl,BYTE PTR [edx+0x6fe4fad3]
  4096cf:	xchg   esi,eax
  4096d0:	ror    BYTE PTR [edx-0x70f7b78c],1
  4096d6:	pop    eax
  4096d7:	xchg   esi,eax
  4096d8:	add    DWORD PTR [edx-0x48998768],esi
  4096de:	ja     0x4096d2
  4096e0:	sub    eax,0x9a4ce943
  4096e5:	cmp    al,0xfd
  4096e7:	test   al,0xaa
  4096e9:	dec    esi
  4096ea:	int3   
  4096eb:	lds    ecx,FWORD PTR [ecx+0x25d004d4]
  4096f1:	or     esp,DWORD PTR [esi-0x37c97c0b]
  4096f7:	pop    ecx
  4096f8:	push   esi
  4096f9:	mov    dl,0xa4
  4096fb:	call   0xc8fe03bd
  409700:	ror    BYTE PTR [edi],0x56
  409703:	pop    ss
  409704:	inc    esp
  409705:	adc    eax,ebp
  409707:	imul   ebx,DWORD PTR [ebx],0x6d92b46b
  40970d:	or     ecx,DWORD PTR [eax]
  40970f:	mov    eax,ds:0x356f5ee0
  409714:	pop    ecx
  409715:	cmp    BYTE PTR [ecx-0x5f],ch
  409718:	push   esp
  409719:	hlt    
  40971a:	outs   dx,DWORD PTR ds:[esi]
  40971b:	div    BYTE PTR [ebp+0x2a52b5b1]
  409721:	pop    esi
  409722:	iret   
  409723:	leave  
  409724:	push   ebx
  409725:	cld    
  409726:	cld    
  409727:	ins    BYTE PTR es:[edi],dx
  409728:	add    BYTE PTR [edi-0x3c],cl
  40972b:	and    bl,dh
  40972d:	or     ch,BYTE PTR [esi+0x13165100]
  409733:	shl    esi,cl
  409735:	lahf   
  409736:	dec    ebx
  409737:	or     eax,0x25dfcf20
  40973c:	js     0x409771
  40973e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40973f:	jb     0x409714
  409741:	sub    al,dl
  409743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409744:	push   es
  409745:	or     ebx,esp
  409747:	mov    DWORD PTR [edi+0x2a],ebp
  40974a:	js     0x40976a
  40974c:	jno    0x40977a
  40974e:	mov    eax,ds:0x983a8b70
  409753:	aas    
  409754:	ja     0x4096f4
  409756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409757:	std    
  409758:	or     DWORD PTR [ecx+0xd4bc86d],edx
  40975e:	push   esp
  40975f:	int    0x13
  409761:	mov    esi,0x42be4aaf
  409766:	dec    esp
  409767:	mov    bl,al
  409769:	or     al,0xc2
  40976b:	mov    ds:0x85bc184a,eax
  409770:	lods   al,BYTE PTR ds:[esi]
  409771:	jmp    0xcf64:0x5925eee7
  409778:	arpl   di,bp
  40977a:	jnp    0x409773
  40977c:	std    
  40977d:	ja     0x4097b9
  40977f:	outs   dx,BYTE PTR ds:[esi]
  409780:	add    BYTE PTR [esi+0x1d],bh
  409783:	or     ch,BYTE PTR [edi+0x681325d4]
  409789:	dec    ecx
  40978a:	bound  edi,QWORD PTR [eax]
  40978c:	adc    eax,0x5f168316
  409791:	mov    cs,WORD PTR [eax]
  409793:	push   ss
  409794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409795:	jge    0x4097ee
  409797:	jns    0x4097ae
  409799:	loopne 0x40981a
  40979b:	lds    eax,FWORD PTR [edi+esi*4-0x53]
  40979f:	mov    ecx,0x78c0a8b6
  4097a4:	out    dx,eax
  4097a5:	dec    eax
  4097a6:	sub    BYTE PTR [eax-0x7f],dh
  4097a9:	or     DWORD PTR [eax],edx
  4097ab:	fs sbb al,0xa1
  4097ae:	add    al,BYTE PTR [eax+0x6f85144e]
  4097b4:	adc    bl,0x68
  4097b7:	bound  edi,QWORD PTR [edi-0xa]
  4097ba:	mov    al,bl
  4097bc:	adc    eax,0xa331df6d
  4097c1:	lea    esi,[ebp-0x4eafb710]
  4097c7:	push   edi
  4097c8:	mov    dh,BYTE PTR [esi]
  4097ca:	and    DWORD PTR [ebp+0x61],esp
  4097cd:	sbb    edi,DWORD PTR [edi-0x19]
  4097d0:	loope  0x409829
  4097d2:	or     BYTE PTR [edi-0x64],bh
  4097d5:	icebp  
  4097d6:	or     BYTE PTR ss:[edi],al
  4097d9:	out    0xd,al
  4097db:	pop    ds
  4097dc:	dec    ecx
  4097dd:	add    ecx,DWORD PTR [eax-0x31]
  4097e0:	add    al,0x5c
  4097e2:	rcr    DWORD PTR [esi],1
  4097e4:	inc    ebp
  4097e5:	sbb    eax,DWORD PTR [ecx-0x65]
  4097e8:	push   ecx
  4097e9:	sbb    BYTE PTR [ebp+0x45],ch
  4097ec:	xchg   BYTE PTR [eax+ecx*2+0x717e6810],bh
  4097f3:	and    edi,DWORD PTR [esi]
  4097f5:	dec    ecx
  4097f6:	xchg   ebx,eax
  4097f7:	pop    edx
  4097f8:	pop    es
  4097f9:	cld    
  4097fa:	mov    esi,0x6ab6b0c6
  4097ff:	push   ebx
  409800:	retf   
  409801:	push   esi
  409802:	call   0x39cf:0xc7aacb20
  409809:	push   cs
  40980a:	fdiv   DWORD PTR [ebp-0x5b]
  40980d:	iret   
  40980e:	(bad)  
  40980f:	out    dx,al
  409810:	ss shl ah,1
  409813:	loope  0x409854
  409815:	fnstenv [eax+ebx*4+0x44]
  409819:	inc    edx
  40981a:	jb     0x409877
  40981c:	mov    eax,0x779a2cff
  409821:	sti    
  409822:	push   esi
  409823:	jmp    0x7b97:0x5ca7d84c
  40982a:	pop    edx
  40982b:	ficomp WORD PTR [ebx+0x490ee458]
  409831:	and    edx,edi
  409833:	mov    dl,al
  409835:	xor    eax,0x56acc405
  40983a:	mov    al,0xff
  40983c:	inc    ebx
  40983d:	test   al,0xaa
  40983f:	in     al,0x55
  409841:	aad    0x6
  409843:	xlat   BYTE PTR ds:[ebx]
  409844:	or     eax,0x3c3f9871
  409849:	cmp    BYTE PTR [eax-0x5407c219],bl
  40984f:	or     DWORD PTR [eax+0x7bb5e37c],edi
  409855:	adc    BYTE PTR [edx-0x7bce7a83],ah
  40985b:	xchg   esp,esi
  40985d:	push   ebx
  40985e:	adc    ch,BYTE PTR ds:0xd9d7ab2b
  409864:	jp     0x4098de
  409866:	adc    ah,BYTE PTR [ebx+eax*1-0x58804015]
  40986d:	fmul   DWORD PTR [ecx+0x56c70d7f]
  409873:	jp     0x409828
  409875:	nop
  409876:	adc    BYTE PTR [esi+esi*2+0x67],bl
  40987a:	sub    DWORD PTR [ecx-0x5ceb43c2],ebp
  409880:	mov    ch,BYTE PTR [edi-0x604408f]
  409886:	or     eax,0x70b2f2cc
  40988b:	mov    WORD PTR [edx-0x75],?
  40988e:	fisttp WORD PTR [edx]
  409890:	xor    al,0xc3
  409892:	and    al,0x92
  409894:	dec    ebx
  409895:	or     esi,0xdfb63148
  40989b:	add    BYTE PTR [ebp+0x562fa4a7],cl
  4098a1:	das    
  4098a2:	fnsave [esi+0xe9cd488]
  4098a8:	hlt    
  4098a9:	repz or DWORD PTR [esi-0x26aa5f],edi
  4098b0:	cmp    eax,DWORD PTR [ecx]
  4098b2:	sbb    bl,BYTE PTR [edx-0x27cb9f6]
  4098b8:	hlt    
  4098b9:	call   0x986b:0x432388b1
  4098c0:	std    
  4098c1:	jo     0x409891
  4098c3:	sub    BYTE PTR [esi+0x1a],bl
  4098c6:	js     0x4098fe
  4098c8:	aaa    
  4098c9:	aas    
  4098ca:	mov    BYTE PTR ds:0x2f060125,ah
  4098d0:	dec    esi
  4098d1:	push   ecx
  4098d2:	in     eax,dx
  4098d3:	pop    eax
  4098d4:	lahf   
  4098d5:	rcr    DWORD PTR [edi+eiz*4],0xfd
  4098d9:	xchg   ebx,eax
  4098da:	inc    ecx
  4098db:	xor    BYTE PTR [esi],0xe9
  4098de:	test   al,0x9e
  4098e0:	call   0x2f23:0xe3441e88
  4098e7:	xchg   DWORD PTR [ecx-0x6a],edx
  4098ea:	pusha  
  4098eb:	adc    al,0xaa
  4098ed:	mov    esp,0xa6621182
  4098f2:	popa   
  4098f3:	mov    ds:0xe23c538b,al
  4098f8:	popa   
  4098f9:	mov    edx,0xac850341
  4098fe:	fsubr  QWORD PTR [ebx-0x1a]
  409901:	push   edx
  409902:	int3   
  409903:	or     BYTE PTR [esi+0x7f3e9e3c],bh
  409909:	push   cs
  40990a:	std    
  40990b:	add    BYTE PTR [ebx*4-0x42634e2b],dl
  409912:	cld    
  409913:	mov    edi,DWORD PTR [esi+0x60]
  409916:	push   edx
  409917:	push   0x22
  409919:	out    dx,al
  40991a:	or     al,0x33
  40991c:	sbb    BYTE PTR [edx-0x6adc3dd7],bh
  409922:	xor    eax,0xfa396c80
  409927:	inc    eax
  409928:	fadd   DWORD PTR [edx+0x16c02436]
  40992e:	das    
  40992f:	xor    eax,esi
  409931:	loop   0x409966
  409933:	cmc    
  409934:	retf   
  409935:	rol    BYTE PTR [ebx-0x29a0490],cl
  40993b:	les    ecx,FWORD PTR [eax]
  40993d:	push   es
  40993e:	push   cs
  40993f:	fs cmp ch,al
  409942:	adc    ebp,DWORD PTR [edx-0x2e]
  409945:	outs   dx,DWORD PTR ds:[esi]
  409946:	popf   
  409947:	adc    eax,0x354d3677
  40994c:	xor    bh,cl
  40994e:	nop
  40994f:	fisub  WORD PTR [ecx]
  409951:	inc    edx
  409952:	dec    ecx
  409953:	xor    esi,esp
  409955:	(bad)  
  409956:	push   0x7e
  409958:	rcr    BYTE PTR [edi+ecx*8+0x976081c],cl
  40995f:	xchg   ecx,eax
  409960:	cmc    
  409961:	jge    0x4099c0
  409963:	pop    edi
  409964:	pusha  
  409965:	mov    BYTE PTR [edi+esi*4+0x66],bh
  409969:	inc    esp
  40996a:	xchg   esp,eax
  40996b:	mov    dh,0xab
  40996d:	call   0xa99d:0xecd508a6
  409974:	and    ebx,esp
  409976:	add    BYTE PTR [edx],0x47
  409979:	jmp    0x4099ab
  40997b:	fs repz xchg edi,eax
  40997e:	pop    es
  40997f:	jbe    0x4099f6
  409981:	mov    eax,ds:0x678537e7
  409986:	push   0xa5aab9ee
  40998b:	icebp  
  40998c:	add    DWORD PTR [ebx-0x51ea9e6e],eax
  409992:	sub    ecx,DWORD PTR [ebx+0x73]
  409995:	inc    esp
  409996:	pop    edi
  409997:	mov    ah,0x30
  409999:	sar    BYTE PTR [ecx+0x7c],1
  40999c:	es ins BYTE PTR es:[edi],dx
  40999e:	out    dx,eax
  40999f:	mov    edx,0xa3d1705e
  4099a4:	test   edi,ecx
  4099a6:	test   BYTE PTR ds:0xd86c6f24,dh
  4099ac:	loopne 0x4099b8
  4099ae:	push   ss
  4099af:	icebp  
  4099b0:	sub    ah,dh
  4099b2:	inc    BYTE PTR [edx-0x4046ea64]
  4099b8:	or     DWORD PTR [edx-0x39],ecx
  4099bb:	js     0x4099d1
  4099bd:	add    DWORD PTR [edi-0x24],ebp
  4099c0:	test   al,0x80
  4099c2:	ja     0x409a24
  4099c4:	mov    ebx,0xb57d76a8
  4099c9:	adc    al,0x74
  4099cb:	pop    ecx
  4099cc:	in     eax,0x2b
  4099ce:	pop    ecx
  4099cf:	out    dx,al
  4099d0:	pop    ds
  4099d1:	jg     0x40999b
  4099d3:	scas   al,BYTE PTR es:[edi]
  4099d4:	and    esp,DWORD PTR [edx-0x7b]
  4099d7:	jnp    0x409993
  4099d9:	rol    DWORD PTR [esi-0x11eea922],cl
  4099df:	les    eax,FWORD PTR [eax+ecx*8+0x73]
  4099e3:	adc    al,0xc0
  4099e5:	dec    ebx
  4099e6:	push   ecx
  4099e7:	push   edx
  4099e8:	adc    BYTE PTR [ebp-0x79],ch
  4099eb:	mov    esp,es
  4099ed:	mov    ds:0x57bc6744,eax
  4099f2:	stos   BYTE PTR es:[edi],al
  4099f3:	jecxz  0x4099be
  4099f5:	add    eax,0x76b2c917
  4099fa:	aam    0x71
  4099fc:	outs   dx,BYTE PTR ds:[esi]
  4099fd:	sub    ah,ch
  4099ff:	mov    DWORD PTR [ebx+0x26],esp
  409a02:	adc    al,0x46
  409a04:	les    eax,FWORD PTR [ecx]
  409a06:	dec    edx
  409a07:	(bad)  
  409a08:	in     eax,dx
  409a09:	hlt    
  409a0a:	mov    WORD PTR [ecx-0x3ff6c6d],?
  409a10:	adc    al,0xe8
  409a12:	outs   dx,BYTE PTR ss:[esi]
  409a14:	xchg   esi,eax
  409a15:	push   ebx
  409a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a17:	jo     0x4099b6
  409a19:	or     al,0x58
  409a1b:	sti    
  409a1c:	push   0x9b669075
  409a21:	inc    esp
  409a22:	pop    edx
  409a23:	jecxz  0x409a53
  409a25:	out    0xf8,al
  409a27:	leave  
  409a28:	jno    0x4099b0
  409a2a:	sub    eax,esi
  409a2c:	popa   
  409a2d:	dec    DWORD PTR [ebp+0x0]
  409a30:	pop    ebx
  409a31:	pushf  
  409a32:	xchg   ebp,eax
  409a33:	pushf  
  409a34:	imul   esp,DWORD PTR [edi],0xffffffe9
  409a37:	inc    ebp
  409a38:	xor    BYTE PTR [ebp-0x7ebfc7fe],ah
  409a3e:	rcl    DWORD PTR [ebp-0x12],1
  409a41:	jae    0x409a56
  409a43:	scas   eax,DWORD PTR es:[edi]
  409a44:	sti    
  409a45:	jns    0x409a0b
  409a47:	cdq    
  409a48:	or     edx,DWORD PTR [ebp+0x3f]
  409a4b:	repz inc esp
  409a4d:	hlt    
  409a4e:	jge    0x409a54
  409a50:	push   edx
  409a51:	xor    al,0x1e
  409a53:	rcl    BYTE PTR [eax],cl
  409a55:	ins    BYTE PTR es:[edi],dx
  409a56:	pop    eax
  409a57:	jp     0x409a5f
  409a59:	dec    edi
  409a5a:	mov    ecx,ecx
  409a5c:	lods   eax,DWORD PTR ds:[esi]
  409a5d:	loope  0x409a49
  409a5f:	cmp    dl,BYTE PTR [eax-0x2c]
  409a62:	push   0x56
  409a64:	not    DWORD PTR [ecx]
  409a66:	and    eax,0xd594a36e
  409a6b:	fwait
  409a6c:	mov    DWORD PTR [esi-0x749b7b96],ebp
  409a72:	mov    eax,ds:0xf704d92b
  409a77:	and    al,0x95
  409a79:	cmp    al,0xc5
  409a7b:	lock cwde 
  409a7d:	repnz stc 
  409a7f:	push   DWORD PTR [ebp-0xdbfe775]
  409a85:	sbb    al,0xe5
  409a87:	jns    0x409a0a
  409a89:	add    BYTE PTR [edx+0x18],dl
  409a8c:	inc    esi
  409a8d:	popa   
  409a8e:	mov    ecx,0x1973ffb7
  409a93:	pop    ebp
  409a94:	inc    eax
  409a95:	fistp  WORD PTR [ebx+esi*4-0x1d3de5ea]
  409a9c:	push   esi
  409a9d:	inc    ebx
  409a9e:	adc    BYTE PTR [bx-0x23e0],cl
  409aa3:	and    BYTE PTR [edi+0x4f],bl
  409aa6:	jmp    DWORD PTR [esi]
  409aa8:	leave  
  409aa9:	jmp    0x409aac
  409aab:	and    DWORD PTR [edx-0x1e],0xd96409fa
  409ab2:	xor    DWORD PTR [edx],eax
  409ab4:	ror    BYTE PTR [edi+0x7008d824],0xf1
  409abb:	push   ebx
  409abc:	xlat   BYTE PTR ds:[ebx]
  409abd:	fadd   DWORD PTR [edx]
  409abf:	adc    eax,0x5406730d
  409ac4:	and    edi,DWORD PTR [ebx-0x55982ef2]
  409aca:	fimul  WORD PTR [ebx+edx*2]
  409acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ace:	add    al,0x6f
  409ad0:	sbb    DWORD PTR [edx+0xa468071],0xffffffdf
  409ad7:	add    al,0xd3
  409ad9:	mov    eax,ds:0xe8299c30
  409ade:	cmp    edi,edi
  409ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae1:	adc    eax,0x88a19e68
  409ae6:	mov    esp,ebx
  409ae8:	(bad)  
  409ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aea:	test   al,0xab
  409aec:	stos   DWORD PTR es:[edi],eax
  409aed:	std    
  409aee:	xor    BYTE PTR [edi+esi*4-0x64e8af03],ch
  409af5:	or     BYTE PTR [eax+0x36],bl
  409af8:	aam    0x4d
  409afa:	adc    al,0xb4
  409afc:	arpl   WORD PTR [edx-0x7],sp
  409aff:	mov    bl,0x91
  409b01:	adc    ebx,DWORD PTR ds:0x5bee6345
  409b07:	xor    esp,DWORD PTR [edx+eax*8]
  409b0a:	cmp    ah,BYTE PTR [edi+0x2046b98d]
  409b10:	fisttp WORD PTR [ebx]
  409b12:	ret    
  409b13:	and    ch,ch
  409b15:	repnz stos BYTE PTR es:[edi],al
  409b17:	mov    edx,ebp
  409b19:	add    dh,ah
  409b1b:	out    dx,al
  409b1c:	inc    edx
  409b1d:	mov    eax,ds:0x8c199ebb
  409b22:	pop    esi
  409b23:	enter  0x771f,0xa9
  409b27:	shl    DWORD PTR [edi+0x658b4d99],1
  409b2d:	adc    ch,BYTE PTR [esi-0x41ff5dd2]
  409b33:	sti    
  409b34:	push   cs
  409b35:	sbb    BYTE PTR [ecx-0x2e632089],dh
  409b3b:	push   esp
  409b3c:	xor    edi,DWORD PTR [eax+esi*2-0x1395880e]
  409b43:	ficomp WORD PTR [edx+0x4e]
  409b46:	not    BYTE PTR [ebx]
  409b48:	cmp    al,0x29
  409b4a:	repnz dec ecx
  409b4c:	jmp    0xf4bf77a0
  409b51:	and    dl,BYTE PTR [eax]
  409b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b54:	dec    edi
  409b55:	and    DWORD PTR [edx+0x0],ecx
  409b58:	(bad)  
  409b59:	mov    DWORD PTR [ebp+0x48],0x89786dfb
  409b60:	aas    
  409b61:	ret    0xecb1
  409b64:	jbe    0x409b5d
  409b66:	clc    
  409b67:	cmp    dl,dh
  409b69:	repz sti 
  409b6b:	adc    dl,BYTE PTR [eax+0x2e9c2547]
  409b71:	nop
  409b72:	mov    ebx,0x87d45364
  409b77:	mov    ebx,0xa10bc3c2
  409b7c:	xchg   esi,eax
  409b7d:	push   0x828eb538
  409b82:	pop    ds
  409b83:	iret   
  409b84:	jns    0x409b48
  409b86:	sub    edx,ebx
  409b88:	xchg   ecx,eax
  409b89:	stos   DWORD PTR es:[edi],eax
  409b8a:	xchg   ecx,eax
  409b8b:	mov    al,0x31
  409b8d:	in     al,dx
  409b8e:	bound  esp,QWORD PTR [ebp-0x65b789f2]
  409b94:	push   esi
  409b95:	adc    cl,BYTE PTR [eax+0x63]
  409b98:	push   0xffffff90
  409b9a:	mov    ecx,0x1b541232
  409b9f:	mov    bh,0xc5
  409ba1:	xor    edi,DWORD PTR [eax+0xe929a9]
  409ba7:	sub    eax,0xfacf00ac
  409bac:	clc    
  409bad:	jne    0x409b8a
  409baf:	push   ecx
  409bb0:	outs   dx,BYTE PTR ds:[esi]
  409bb1:	and    ebx,edi
  409bb3:	inc    ecx
  409bb4:	pop    edi
  409bb5:	leave  
  409bb6:	and    dl,BYTE PTR [edx-0x27]
  409bb9:	mov    al,0x30
  409bbb:	add    al,0xf2
  409bbd:	xchg   ebp,eax
  409bbe:	outs   dx,BYTE PTR ds:[esi]
  409bbf:	pop    ds
  409bc0:	add    al,cl
  409bc2:	cmp    DWORD PTR [ebx-0xb],ecx
  409bc5:	pushf  
  409bc6:	dec    ebp
  409bc7:	jmp    0x409be3
  409bc9:	out    dx,eax
  409bca:	icebp  
  409bcb:	mov    ebp,0xad6f7a7a
  409bd0:	outs   dx,DWORD PTR ds:[esi]
  409bd1:	or     eax,0x2904f38c
  409bd6:	lahf   
  409bd7:	add    eax,0xdbc9b016
  409bdc:	inc    ebx
  409bdd:	xchg   BYTE PTR ds:0x3a73ff2e,bh
  409be3:	fsub   QWORD PTR es:[ebx+0x6f1a5733]
  409bea:	xchg   ebp,esp
  409bec:	mov    ch,0x8c
  409bee:	icebp  
  409bef:	push   cs
  409bf0:	ret    
  409bf1:	inc    ebx
  409bf2:	pop    ebp
  409bf3:	dec    eax
  409bf4:	pop    ecx
  409bf5:	cmp    edi,DWORD PTR [eax]
  409bf7:	in     eax,dx
  409bf8:	cmp    eax,0xd52c48a9
  409bfd:	mov    al,ds:0x240d84ff
  409c02:	rcr    DWORD PTR [edi-0x27],cl
  409c05:	xchg   ebp,eax
  409c06:	jg     0x409b8d
  409c08:	aaa    
  409c09:	(bad)  
  409c0a:	(bad)  
  409c0b:	stc    
  409c0c:	sti    
  409c0d:	sbb    esp,0x5b
  409c10:	xor    al,0x13
  409c12:	mov    BYTE PTR [ebp+0xa],bh
  409c15:	pushf  
  409c16:	mov    ds:0x1de3eb51,al
  409c1b:	in     al,0xba
  409c1d:	cmp    esp,DWORD PTR [edx+edi*1+0x79398797]
  409c24:	clc    
  409c25:	adc    eax,0x1e64848f
  409c2a:	xlat   BYTE PTR ds:[ebx]
  409c2b:	arpl   WORD PTR [eax],dx
  409c2d:	push   ds
  409c2e:	scas   al,BYTE PTR es:[edi]
  409c2f:	cmova  eax,edx
  409c32:	jo     0x409c59
  409c34:	sbb    esi,ebx
  409c36:	sub    eax,0x3d3da180
  409c3b:	pop    ds
  409c3c:	mov    ebp,0x60b47b0d
  409c41:	retf   
  409c42:	dec    ecx
  409c43:	adc    BYTE PTR [edi],cl
  409c45:	idiv   BYTE PTR ss:[edx]
  409c48:	xchg   esi,eax
  409c49:	inc    ecx
  409c4a:	jns    0x409bf6
  409c4c:	test   BYTE PTR [eax+0x54],0xa8
  409c50:	cmc    
  409c51:	pop    ds
  409c52:	mov    WORD PTR [ebx+0x73f9b50f],ds
  409c58:	push   0x9879d130
  409c5d:	jbe    0x409c6c
  409c5f:	cmp    al,dh
  409c61:	popa   
  409c62:	mov    edx,eax
  409c64:	loopne 0x409c2c
  409c66:	loop   0x409c34
  409c68:	mov    ebx,0x98841fa8
  409c6d:	aad    0xb4
  409c6f:	mov    ds:0xa329ebb0,al
  409c74:	retf   
  409c75:	jge    0x409ce2
  409c77:	xor    eax,0x761d227
  409c7c:	popf   
  409c7d:	xor    BYTE PTR [edi+ebx*2],cl
  409c80:	jno    0x409cfc
  409c82:	sbb    edx,DWORD PTR ds:[eax+0x20]
  409c86:	loop   0x409cef
  409c88:	fistp  QWORD PTR [esi]
  409c8a:	pushf  
  409c8b:	pushf  
  409c8c:	shl    ecx,1
  409c8e:	sub    eax,esi
  409c90:	inc    ebx
  409c91:	pusha  
  409c92:	inc    ebp
  409c93:	in     al,0xb7
  409c95:	stc    
  409c96:	add    DWORD PTR [edx+esi*8+0x4c9b24f6],ebx
  409c9d:	xor    DWORD PTR ds:0xd2301f0d,ecx
  409ca3:	test   DWORD PTR [edx+0x5c],edx
  409ca6:	jae    0x409c4f
  409ca8:	sub    BYTE PTR [edi+0x7a],0xa8
  409cac:	push   edx
  409cad:	jmp    0xf1d54594
  409cb2:	and    DWORD PTR [ecx],esp
  409cb4:	push   es
  409cb5:	mov    edi,0xe534cc0
  409cba:	mov    esi,0x720527d9
  409cbf:	xchg   ebp,eax
  409cc0:	dec    esp
  409cc1:	lods   al,BYTE PTR ds:[esi]
  409cc2:	setne  BYTE PTR [edx+0x66]
  409cc6:	imul   ecx,DWORD PTR [eax-0x484fb173],0x382dbf85
  409cd0:	pop    esp
  409cd1:	cli    
  409cd2:	fcmovnb st,st(0)
  409cd4:	or     dh,BYTE PTR [esi+eax*4+0x57ff1230]
  409cdb:	bound  eax,QWORD PTR [edx-0x47]
  409cde:	jbe    0x409d55
  409ce0:	in     al,dx
  409ce1:	test   al,0x73
  409ce3:	pop    ebp
  409ce4:	add    ah,0x5
  409ce7:	(bad)  
  409ce8:	xor    BYTE PTR [ecx],dh
  409cea:	ss pop ebp
  409cec:	and    eax,0xf204ebe6
  409cf1:	mov    edi,0xc2cce1cf
  409cf6:	dec    ebx
  409cf7:	inc    ebx
  409cf8:	cmp    eax,0xa616549a
  409cfd:	or     BYTE PTR [edx-0x422c7c71],ah
  409d03:	mov    al,ch
  409d05:	inc    ecx
  409d06:	jne    0x409cd1
  409d08:	ins    DWORD PTR es:[edi],dx
  409d09:	jmp    0x409d7e
  409d0b:	pop    ds
  409d0c:	out    0x56,eax
  409d0e:	pop    ds
  409d0f:	int3   
  409d10:	mov    bl,0x6f
  409d12:	stos   DWORD PTR es:[edi],eax
  409d13:	add    al,0x2d
  409d15:	ret    
  409d16:	jb     0x409d1b
  409d18:	in     al,0xc7
  409d1a:	pop    ebx
  409d1b:	ins    BYTE PTR es:[edi],dx
  409d1c:	add    dh,dh
  409d1e:	xchg   ebp,eax
  409d1f:	pop    ebx
  409d20:	in     al,0xc2
  409d22:	test   DWORD PTR es:[ecx-0x80],eax
  409d26:	mov    eax,ds:0x75ea3c92
  409d2b:	or     al,0xb5
  409d2d:	dec    edx
  409d2e:	fwait
  409d2f:	and    bh,BYTE PTR [eax+0x27]
  409d32:	xchg   DWORD PTR [edx],ebp
  409d34:	dec    edx
  409d35:	js     0x409d1e
  409d37:	and    edx,DWORD PTR [esi]
  409d39:	nop
  409d3a:	nop
  409d3b:	inc    ebp
  409d3c:	and    edx,esp
  409d3e:	repz pusha 
  409d40:	jbe    0x409da8
  409d42:	mov    al,0xf0
  409d44:	fisttp DWORD PTR [ecx+eiz*8+0x73c45d99]
  409d4b:	mov    DWORD PTR [ebx-0x1b90788b],esp
  409d51:	or     eax,edx
  409d53:	loopne 0x409d2c
  409d55:	mov    dl,0xe0
  409d57:	and    dl,cl
  409d59:	call   esi
  409d5b:	push   ss
  409d5c:	jle    0x409d6e
  409d5e:	push   0x10
  409d60:	outs   dx,DWORD PTR ds:[esi]
  409d61:	(bad)  
  409d63:	loope  0x409dcd
  409d65:	ins    BYTE PTR es:[edi],dx
  409d66:	sub    edx,eax
  409d68:	xchg   ecx,eax
  409d69:	(bad)  
  409d6a:	leave  
  409d6b:	imul   eax,DWORD PTR [esp+edi*8],0x5b5830fc
  409d72:	aam    0xc6
  409d74:	jle    0x409de0
  409d76:	sub    dl,bh
  409d78:	(bad)  
  409d79:	(bad)  cs:[ecx]
  409d7c:	mov    edx,0x1081c684
  409d81:	hlt    
  409d82:	or     al,0x5d
  409d84:	adc    BYTE PTR [edx+0x34],dh
  409d87:	jge    0x409d88
  409d89:	mov    ebx,0xecaa4d40
  409d8e:	inc    ebx
  409d8f:	div    DWORD PTR [ebp-0x4e39385c]
  409d95:	pop    esi
  409d96:	sbb    al,0xbc
  409d98:	mov    al,0xbe
  409d9a:	xor    al,0xc0
  409d9c:	call   0xc7d9995d
  409da1:	xchg   dl,bl
  409da3:	xchg   edi,eax
  409da4:	mov    al,0xc7
  409da6:	pop    edi
  409da7:	ret    0x2520
  409daa:	add    al,0x49
  409dac:	push   ds
  409dad:	aam    0x91
  409daf:	push   0xffffffc3
  409db1:	call   0xcb68a567
  409db6:	mov    ah,0x5
  409db8:	cs push eax
  409dba:	aad    0xc8
  409dbc:	(bad)  
  409dbd:	scas   eax,DWORD PTR es:[edi]
  409dbe:	pop    esi
  409dbf:	sbb    eax,0x8437855f
  409dc4:	or     DWORD PTR [ecx+edi*2+0x2110686a],ebx
  409dcb:	sbb    eax,eax
  409dcd:	mov    ebp,DWORD PTR [ecx+0x1]
  409dd0:	pop    ebx
  409dd1:	lahf   
  409dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd3:	outs   dx,DWORD PTR ds:[esi]
  409dd4:	fcomp  DWORD PTR [ebx+ecx*8]
  409dd7:	fwait
  409dd8:	add    DWORD PTR [edx+0x442ca0ae],ebp
  409dde:	fdivr  DWORD PTR [edi-0x6d324edf]
  409de4:	shr    eax,1
  409de6:	jl     0x409e0a
  409de8:	in     eax,dx
  409de9:	inc    esi
  409dea:	cmp    ebx,DWORD PTR ds:0xa23d2944
  409df0:	sahf   
  409df1:	in     eax,0xcd
  409df3:	pop    ds
  409df4:	add    eax,0x5ae17d46
  409df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dfa:	adc    edi,DWORD PTR [ecx+0x622001c3]
  409e00:	cmp    BYTE PTR [edx-0x74],dl
  409e03:	arpl   ax,di
  409e05:	adc    BYTE PTR [esi+0x67],0x58
  409e09:	xor    BYTE PTR [esi-0x5],bl
  409e0c:	cmp    BYTE PTR [ebp+edx*4-0x17],bh
  409e10:	inc    edx
  409e11:	pop    esi
  409e12:	mov    esi,0x5f3489f1
  409e17:	mov    ebx,0x8abda123
  409e1c:	sub    BYTE PTR [edi],dl
  409e1e:	nop
  409e1f:	jae    0x409dc7
  409e21:	sbb    BYTE PTR [edx],ch
  409e23:	lods   eax,DWORD PTR ds:[esi]
  409e24:	sbb    ebx,edx
  409e26:	je     0x409e44
  409e28:	aad    0x19
  409e2a:	xchg   esp,eax
  409e2b:	or     BYTE PTR [ebx+edi*4+0x21],dh
  409e2f:	jmp    0x409e6f
  409e31:	dec    ebx
  409e32:	and    ebp,DWORD PTR [esp+edx*4-0x6a]
  409e36:	push   ebx
  409e37:	or     dh,BYTE PTR [esi+0xd]
  409e3a:	jge    0x409e58
  409e3c:	mov    al,ds:0xa092fa93
  409e41:	fstp   st(5)
  409e43:	retf   0x6da0
  409e46:	mov    edi,0x8e3918df
  409e4b:	sbb    BYTE PTR [esi],ch
  409e4d:	dec    esi
  409e4e:	aas    
  409e4f:	pusha  
  409e50:	xor    DWORD PTR [edi+0x35],ebx
  409e53:	jmp    0x69b31420
  409e58:	sti    
  409e59:	ins    DWORD PTR es:[edi],dx
  409e5a:	mov    cl,BYTE PTR [ecx]
  409e5c:	int3   
  409e5d:	inc    ecx
  409e5e:	or     al,0x99
  409e60:	out    0xdb,al
  409e62:	inc    ebp
  409e63:	mov    ss,WORD PTR [ebx+0x44]
  409e66:	fsub   st(2),st
  409e68:	sub    eax,0xbbaf5bb2
  409e6d:	dec    ecx
  409e6e:	je     0x409ea9
  409e70:	and    bh,BYTE PTR [ebp+0x0]
  409e73:	mov    bl,0x20
  409e75:	pop    ecx
  409e76:	mov    gs,WORD PTR [esi+ebp*8-0x162f68a0]
  409e7d:	jb     0x409e6f
  409e7f:	sahf   
  409e80:	push   ebx
  409e81:	cld    
  409e82:	retf   0xc05
  409e85:	imul   edi,DWORD PTR [esi],0x3b1c9be3
  409e8b:	ret    0xef85
  409e8e:	or     BYTE PTR [ecx+0x7],ah
  409e91:	jmp    0x35c28c3a
  409e96:	jno    0x409e83
  409e98:	ins    BYTE PTR es:[edi],dx
  409e99:	ficom  WORD PTR [esp+edx*4-0x4b42423]
  409ea0:	add    al,0x73
  409ea2:	pop    ebp
  409ea3:	aaa    
  409ea4:	or     dh,BYTE PTR [edx]
  409ea6:	add    eax,0xabe531a7
  409eab:	in     al,dx
  409eac:	loop   0x409e5f
  409eae:	aaa    
  409eaf:	sub    al,0xf1
  409eb1:	scas   al,BYTE PTR es:[edi]
  409eb2:	fs stc 
  409eb4:	jmp    0x409e63
  409eb6:	cdq    
  409eb7:	pop    esp
  409eb8:	ins    DWORD PTR es:[edi],dx
  409eb9:	mov    ?,WORD PTR [esi-0x638cd77c]
  409ebf:	adc    DWORD PTR [ebx+0x2f721cee],esp
  409ec5:	mov    esp,0xaf04a150
  409eca:	ror    DWORD PTR [ebx+edi*1-0x687e9ad0],cl
  409ed1:	dec    ecx
  409ed2:	cli    
  409ed3:	ins    BYTE PTR es:[edi],dx
  409ed4:	mov    bh,0xc2
  409ed6:	retf   0xcb69
  409ed9:	or     eax,DWORD PTR [ebx]
  409edb:	mov    bh,0x83
  409edd:	loop   0x409eaf
  409edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ee0:	in     al,dx
  409ee1:	nop
  409ee2:	js     0x409e82
  409ee4:	dec    ebp
  409ee5:	popa   
  409ee6:	mov    edx,0x67bc444d
  409eeb:	lods   al,BYTE PTR ds:[esi]
  409eec:	xchg   ebx,eax
  409eed:	mov    edi,0xae302ef9
  409ef2:	shr    DWORD PTR [esi-0x1a],cl
  409ef5:	gs pop ebx
  409ef7:	ficom  DWORD PTR [edi]
  409ef9:	jg     0x409ed8
  409efb:	out    0xb5,al
  409efd:	sub    ebx,esi
  409eff:	add    eax,0x5748ff60
  409f04:	in     eax,0x84
  409f06:	push   edi
  409f07:	pop    eax
  409f08:	jbe    0x409f60
  409f0a:	inc    esi
  409f0b:	inc    esp
  409f0c:	fwait
  409f0d:	(bad)  
  409f0e:	jb     0x409f87
  409f10:	dec    esi
  409f11:	xor    BYTE PTR [ebx+0x14501747],0x77
  409f18:	sti    
  409f19:	pop    eax
  409f1a:	lea    ecx,[ebx]
  409f1c:	stc    
  409f1d:	lds    ebx,FWORD PTR [ecx]
  409f1f:	inc    esi
  409f20:	xlat   BYTE PTR ds:[ebx]
  409f21:	retf   
  409f22:	sbb    dl,BYTE PTR [edi+0x67]
  409f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f26:	loope  0x409f0c
  409f28:	add    edi,DWORD PTR [edx+ecx*8]
  409f2b:	xchg   BYTE PTR [ecx-0x1629d986],dl
  409f31:	scas   eax,DWORD PTR es:[edi]
  409f32:	es inc ebp
  409f34:	pop    ds
  409f35:	dec    ebp
  409f36:	shl    DWORD PTR [esi+0x4],1
  409f39:	adc    DWORD PTR [edx+edi*4+0x4fbdf6a0],edx
  409f40:	adc    al,BYTE PTR ds:0xc51a2e6a
  409f46:	lods   eax,DWORD PTR ds:[esi]
  409f47:	or     BYTE PTR [edx-0x2dc4254d],ch
  409f4d:	enter  0x6fb3,0xc3
  409f51:	scas   eax,DWORD PTR es:[edi]
  409f52:	test   BYTE PTR cs:0x780fcb4b,0xc5
  409f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f5b:	fidiv  WORD PTR [eax-0x360701f6]
  409f61:	popf   
  409f62:	iret   
  409f63:	into   
  409f64:	sahf   
  409f65:	cmp    eax,0x60eca4ca
  409f6a:	push   ecx
  409f6b:	mov    DWORD PTR [edi-0x64451cfd],esp
  409f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f72:	fsubp  st(4),st
  409f74:	ins    BYTE PTR es:[edi],dx
  409f75:	(bad)  
  409f76:	js     0x409f70
  409f78:	and    al,0xf
  409f7a:	xor    BYTE PTR [esi-0x18],ah
  409f7d:	mov    ds:0x8c95291b,eax
  409f82:	add    BYTE PTR ds:0x24e5f2d5,cl
  409f88:	iret   
  409f89:	retf   0xa1f9
  409f8c:	inc    esp
  409f8d:	loop   0x409f9b
  409f8f:	mov    cl,0x37
  409f91:	push   ss
  409f92:	fist   WORD PTR [ebx]
  409f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f95:	jmp    0x47c6:0xdb25cbc0
  409f9c:	sub    esi,ecx
  409f9e:	sbb    ecx,DWORD PTR [ebp+0x19]
  409fa1:	push   esp
  409fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fa3:	mul    DWORD PTR [ebp+0x4721a3c8]
  409fa9:	jge    0x409f65
  409fab:	fidivr WORD PTR [edi+eax*4+0x377b8682]
  409fb2:	or     BYTE PTR [ebx+eax*4+0x30f6aa78],0x44
  409fba:	xchg   ch,bl
  409fbc:	jp     0x40a000
  409fbe:	pop    ecx
  409fbf:	sbb    BYTE PTR [esi-0x3af644e5],0x5a
  409fc6:	inc    ebx
  409fc7:	dec    edx
  409fc8:	inc    ebp
  409fc9:	inc    DWORD PTR [ebx-0x39]
  409fcc:	inc    ebx
  409fcd:	ror    BYTE PTR [ebx+eiz*1],1
  409fd0:	ror    BYTE PTR [ebx],1
  409fd2:	pop    ds
  409fd3:	pusha  
  409fd4:	adc    BYTE PTR [ecx],ch
  409fd6:	loope  0x409ff4
  409fd8:	jecxz  0x409ff2
  409fda:	xchg   ecx,eax
  409fdb:	or     ah,BYTE PTR [ecx-0x22134b1d]
  409fe1:	mov    cl,0x5b
  409fe3:	dec    eax
  409fe4:	mov    edx,0x7b353fb4
  409fe9:	push   es
  409fea:	rcl    DWORD PTR [ecx-0x5a],0x21
  409fee:	imul   ecx,DWORD PTR [si+0x5f],0x58
  409ff3:	cli    
  409ff4:	jmp    0x40a032
  409ff6:	int    0x4f
  409ff8:	xor    edx,esp
  409ffa:	mov    eax,ds:0xb99796a7
  409fff:	jb     0x40a03f
  40a001:	mov    DWORD PTR [edx-0x3b31984c],ebx
  40a007:	adc    dh,BYTE PTR [ebp+0x5e]
  40a00a:	inc    edi
  40a00b:	xchg   ebx,eax
  40a00c:	fsubr  DWORD PTR [esp+esi*4-0x77]
  40a010:	ret    
  40a011:	fwait
  40a012:	les    esp,FWORD PTR [eax+0x6f]
  40a015:	or     DWORD PTR [esi+0x54],0xfffffff0
  40a019:	outs   dx,DWORD PTR ds:[esi]
  40a01a:	jge    0x40a02f
  40a01c:	hlt    
  40a01d:	out    0x1d,al
  40a01f:	stos   BYTE PTR es:[edi],al
  40a020:	add    DWORD PTR [ebx+0x53],0xa
  40a024:	imul   edi,DWORD PTR [ecx+ebx*2-0x1edd7234],0x780f6589
  40a02f:	setnp  al
  40a032:	xor    eax,0x4a3a8636
  40a037:	mov    ds:0x1b28aa02,al
  40a03c:	cld    
  40a03d:	xor    al,0x40
  40a03f:	cmp    edi,esi
  40a041:	jno    0x40a058
  40a043:	int    0xf5
  40a045:	fidiv  DWORD PTR [eax]
  40a047:	js     0x40a037
  40a049:	sub    bl,BYTE PTR [ecx-0x69]
  40a04c:	dec    ecx
  40a04d:	dec    edx
  40a04e:	fsubr  st,st(1)
  40a050:	test   eax,0x5fca176e
  40a055:	fidiv  DWORD PTR [eax]
  40a057:	dec    esi
  40a058:	cmp    cl,BYTE PTR [eax-0x64]
  40a05b:	xchg   edx,eax
  40a05c:	fmul   QWORD PTR [edi+ecx*4]
  40a05f:	or     BYTE PTR [edx+0x38],0xd1
  40a063:	add    al,0x86
  40a065:	jns    0x40a0e0
  40a067:	mov    bh,0x43
  40a069:	push   ebx
  40a06a:	pop    es
  40a06b:	mov    dh,0x83
  40a06d:	imul   esi,DWORD PTR [ebx],0x63a14b8f
  40a073:	sbb    bh,BYTE PTR [ebp+0x53]
  40a076:	cmp    bh,0x62
  40a079:	ffree  st(1)
  40a07b:	aas    
  40a07c:	mov    al,ds:0xbc3c8296
  40a081:	test   eax,0x46cd1810
  40a086:	mov    al,0x38
  40a088:	std    
  40a089:	adc    ch,BYTE PTR [edx]
  40a08b:	push   eax
  40a08c:	pop    edi
  40a08d:	push   edx
  40a08e:	adc    BYTE PTR [eax],ah
  40a090:	loop   0x40a0ee
  40a092:	jo     0x40a032
  40a094:	dec    esp
  40a095:	adc    BYTE PTR [edx-0x4a],bh
  40a098:	dec    edi
  40a099:	and    bh,BYTE PTR [ebx]
  40a09b:	(bad)  
  40a09c:	xor    bl,BYTE PTR [esi+eiz*8+0x48]
  40a0a0:	pop    ebp
  40a0a1:	push   ss
  40a0a2:	call   0x47ef:0x8f9215e8
  40a0a9:	scas   eax,DWORD PTR es:[edi]
  40a0aa:	leave  
  40a0ab:	loope  0x40a068
  40a0ad:	push   es
  40a0ae:	mov    edi,0x6a6dfb50
  40a0b3:	push   ds
  40a0b4:	aam    0x9d
  40a0b6:	add    edx,ebx
  40a0b8:	mov    cl,0xb2
  40a0ba:	in     eax,0x1c
  40a0bc:	hlt    
  40a0bd:	fcomp  QWORD PTR [edi+0x23c704c2]
  40a0c3:	fild   DWORD PTR [ebx+0x398aeb7a]
  40a0c9:	mov    DWORD PTR [ebp+0x59],eax
  40a0cc:	xor    esi,DWORD PTR [ecx]
  40a0ce:	push   ebx
  40a0cf:	inc    eax
  40a0d0:	sub    eax,0x9ffc4798
  40a0d5:	mov    dh,0x78
  40a0d7:	jo     0x40a150
  40a0d9:	xchg   esp,eax
  40a0da:	mov    fs,WORD PTR [ecx-0x4a5108a]
  40a0e0:	adc    DWORD PTR [esi-0x40467d0c],0x37
  40a0e7:	in     eax,dx
  40a0e8:	loope  0x40a0f5
  40a0ea:	mov    edx,0xd95fd18f
  40a0ef:	stos   DWORD PTR es:[edi],eax
  40a0f0:	mov    esp,0x465ccda0
  40a0f5:	jmp    0x40a0c1
  40a0f7:	mov    ebx,0x7da242d2
  40a0fc:	sbb    DWORD PTR [ebp+ebx*4+0x65],eax
  40a100:	aaa    
  40a101:	sub    BYTE PTR [eax-0x26407b3b],ch
  40a107:	lahf   
  40a108:	mov    BYTE PTR [ecx-0x6ba61fe7],dh
  40a10e:	pop    edx
  40a10f:	add    ebp,DWORD PTR [ecx+0x45]
  40a112:	enter  0xba25,0xed
  40a116:	inc    esp
  40a117:	sub    al,0xf9
  40a119:	adc    ebp,0x8134df2f
  40a11f:	jb     0x40a12b
  40a121:	inc    esp
  40a122:	sbb    esp,DWORD PTR [esp+eiz*8]
  40a125:	ds pop eax
  40a127:	jae    0x40a188
  40a129:	adc    eax,0x21bb3b14
  40a12e:	jnp    0x40a11c
  40a130:	ja     0x40a197
  40a132:	jle    0x40a153
  40a134:	jb     0x40a1b5
  40a136:	nop
  40a137:	mov    ds:0xd0dd006d,eax
  40a13c:	lds    edx,FWORD PTR [ebp+0x67199b08]
  40a142:	and    eax,0xc76d1a6d
  40a147:	loope  0x40a1b0
  40a149:	pop    ebx
  40a14a:	int3   
  40a14b:	(bad)  
  40a14c:	jmp    0x40a108
  40a14e:	xor    DWORD PTR [edi+0x7a],esp
  40a151:	jne    0x40a13f
  40a153:	push   0xffffffe0
  40a155:	xlat   BYTE PTR ds:[ebx]
  40a156:	xchg   ebp,eax
  40a157:	fdivr  DWORD PTR [eax+0x37aa1625]
  40a15d:	mov    dh,0x60
  40a15f:	popw   ss
  40a161:	daa    
  40a162:	add    ch,BYTE PTR [edi+0x14ba09f2]
  40a168:	mov    edi,0xfb2f0405
  40a16d:	xchg   DWORD PTR [eax-0x2c739b53],edi
  40a173:	imul   ebp,DWORD PTR ds:[edi],0x31
  40a177:	jae    0x40a105
  40a179:	rcr    DWORD PTR [esi],cl
  40a17b:	cmp    BYTE PTR [edx+ebp*8-0x43],bl
  40a17f:	test   DWORD PTR [ebx],ecx
  40a181:	les    esp,FWORD PTR [ecx-0x46]
  40a184:	xchg   bh,ch
  40a186:	cmp    DWORD PTR [esi-0x55a3c7a7],esp
  40a18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a18d:	retf   
  40a18e:	fstsw  WORD PTR [edx+ecx*1+0x714b9088]
  40a196:	sti    
  40a197:	adc    ecx,esi
  40a199:	int    0xc4
  40a19b:	push   es
  40a19c:	loop   0x40a1bc
  40a19e:	xor    al,0x9a
  40a1a0:	pop    es
  40a1a1:	out    0x87,eax
  40a1a3:	xchg   BYTE PTR [edx-0x1e],ch
  40a1a6:	mov    esp,0xbfab2b7c
  40a1ab:	mov    esi,0x80c35bb4
  40a1b0:	mov    ecx,0x965a7e48
  40a1b5:	popf   
  40a1b6:	and    ebx,DWORD PTR [ebx]
  40a1b8:	call   DWORD PTR [ebx+0x60]
  40a1bb:	std    
  40a1bc:	sub    eax,0xd753df05
  40a1c1:	or     ebx,ebp
  40a1c3:	in     al,dx
  40a1c4:	push   eax
  40a1c5:	mov    dl,0x90
  40a1c7:	out    0xc9,al
  40a1c9:	cdq    
  40a1ca:	ret    0x5cba
  40a1cd:	pop    edx
  40a1ce:	mov    ecx,0x7be664a7
  40a1d3:	out    dx,al
  40a1d4:	popf   
  40a1d5:	repz sbb eax,0xabe11c2e
  40a1db:	inc    edx
  40a1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1dd:	mov    ds:0x18c84588,al
  40a1e2:	sub    bh,dh
  40a1e4:	std    
  40a1e5:	adc    DWORD PTR [edx+eax*1],ebx
  40a1e8:	not    ebp
  40a1ea:	dec    esp
  40a1eb:	mov    BYTE PTR [ecx],al
  40a1ed:	mov    ah,0x8c
  40a1ef:	or     bl,ah
  40a1f1:	add    ecx,0xffffffa9
  40a1f4:	xchg   edi,eax
  40a1f5:	inc    ecx
  40a1f6:	inc    ecx
  40a1f7:	test   dl,ah
  40a1f9:	or     ebx,DWORD PTR [edx]
  40a1fb:	adc    ah,cl
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	lock jge 0x40a5e9
  40a5eb:	sbb    BYTE PTR [edi],ah
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	(bad)  
  40a5f5:	test   DWORD PTR [eax+edi*2-0x1],ecx
  40a5f9:	(bad)  
  40a5fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5fb:	bnd js 0x40a595
  40a5fe:	mov    ds:0xd4af0116,al
  40a603:	icebp  
  40a604:	add    al,0x5f
  40a606:	or     ch,ah
  40a608:	sbb    ch,BYTE PTR [ebx-0x518f5031]
  40a60e:	shl    BYTE PTR [edi],1
  40a610:	jns    0x40a647
  40a612:	xchg   edi,eax
  40a613:	dec    esi
  40a614:	mov    ds:0xbba2a3a5,eax
  40a619:	mov    BYTE PTR [ebx+eiz*8-0x6cbc6578],0x8a
  40a621:	lds    edx,FWORD PTR [esp+ebx*1]
  40a624:	je     0x40a5ab
  40a626:	mov    dl,BYTE PTR [ebx-0x27e5657e]
  40a62c:	and    DWORD PTR [edi],eax
  40a62e:	cmp    eax,0xa0072441
  40a633:	mov    al,ah
  40a635:	xchg   BYTE PTR [edx-0x11a1dfe8],cl
  40a63b:	cwde   
  40a63c:	sub    al,0xf1
  40a63e:	push   edi
  40a63f:	iret   
  40a640:	adc    esi,DWORD PTR [edi]
  40a642:	xor    al,0x50
  40a644:	mov    al,ds:0xafa43d8a
  40a649:	pop    ebx
  40a64a:	jg     0x40a5f9
  40a64c:	sahf   
  40a64d:	scas   eax,DWORD PTR es:[edi]
  40a64e:	or     edi,DWORD PTR [edi-0x4875059e]
  40a654:	nop
  40a655:	stos   BYTE PTR es:[edi],al
  40a656:	and    BYTE PTR [edx+0x6b],bl
  40a659:	jecxz  0x40a608
  40a65b:	jmp    0x40a60d
  40a65d:	fbld   TBYTE PTR [edi+0x2e]
  40a660:	cmp    BYTE PTR [esi],dh
  40a662:	rcr    DWORD PTR [ecx+0x5c],1
  40a665:	ja     0x40a6d9
  40a667:	or     ah,BYTE PTR [eax]
  40a669:	dec    ecx
  40a66a:	cld    
  40a66b:	enter  0x8a80,0xd0
  40a66f:	jmp    0xfa43:0x423942bf
  40a676:	cmp    BYTE PTR [edx+0x59],0xb9
  40a67a:	pop    eax
  40a67b:	mov    bh,0x68
  40a67d:	fsubr  DWORD PTR [esp+eax*2+0x28b4bacf]
  40a684:	xor    esi,eax
  40a686:	push   ebx
  40a687:	int    0x33
  40a689:	shl    BYTE PTR [ecx-0x16],1
  40a68c:	(bad)  
  40a68d:	test   al,0x6f
  40a68f:	lea    eax,[ebx]
  40a691:	or     eax,0xf19bf04d
  40a696:	or     al,0xe
  40a698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a699:	mov    ds:0x1c33ddb,eax
  40a69e:	mov    ds:0x332358c3,al
  40a6a3:	es inc esi
  40a6a5:	add    esp,edx
  40a6a7:	out    dx,eax
  40a6a8:	push   0xfffffff7
  40a6aa:	dec    eax
  40a6ab:	loop   0x40a6ec
  40a6ad:	xor    al,0xa1
  40a6af:	push   0xffffffdd
  40a6b1:	mov    dl,0xff
  40a6b3:	arpl   ax,si
  40a6b5:	inc    ecx
  40a6b6:	(bad)  
  40a6b7:	dec    eax
  40a6b8:	cmc    
  40a6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6ba:	inc    eax
  40a6bb:	retf   
  40a6bc:	hlt    
  40a6bd:	daa    
  40a6be:	repnz adc DWORD PTR [edi+0x69],ebx
  40a6c2:	dec    edi
  40a6c3:	pushf  
  40a6c4:	xor    eax,0xf76d6a70
  40a6c9:	outs   dx,BYTE PTR ds:[esi]
  40a6ca:	lods   eax,DWORD PTR ds:[esi]
  40a6cb:	jecxz  0x40a685
  40a6cd:	ja     0x40a65b
  40a6cf:	push   cs
  40a6d0:	xchg   DWORD PTR [edi],esi
  40a6d2:	or     ebx,DWORD PTR [eax]
  40a6d4:	int3   
  40a6d5:	stos   BYTE PTR es:[edi],al
  40a6d6:	cwde   
  40a6d7:	vmread DWORD PTR [edx+0x75fc6a10],ebx
  40a6de:	pop    es
  40a6df:	sbb    eax,0xf62d6dc
  40a6e4:	mov    ds:0x5b2a3261,al
  40a6e9:	mov    esp,0xd7ddf882
  40a6ee:	fist   WORD PTR [ecx]
  40a6f0:	push   edx
  40a6f1:	xlat   BYTE PTR ds:[ebx]
  40a6f2:	mov    esp,0xab49b6ee
  40a6f7:	and    al,0xe7
  40a6f9:	jmp    0x40a73a
  40a6fb:	daa    
  40a6fc:	call   0x385:0x6b7ae70c
  40a703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a704:	test   al,0xf9
  40a706:	shl    BYTE PTR [edi+0x30],cl
  40a709:	cli    
  40a70a:	stc    
  40a70b:	popf   
  40a70c:	push   ss
  40a70d:	adc    eax,0xe9595d3b
  40a712:	out    0xe3,al
  40a714:	popf   
  40a715:	call   0xbe1b9f42
  40a71a:	rcr    ah,1
  40a71c:	out    dx,al
  40a71d:	clc    
  40a71e:	mov    ds:0x61d3291a,eax
  40a723:	fist   DWORD PTR [eax+edx*1+0x41f0a2e8]
  40a72a:	lea    edi,[ebx]
  40a72c:	sar    DWORD PTR [ebp+0x2e],0x65
  40a730:	add    al,0xc
  40a732:	xor    bh,ch
  40a734:	inc    eax
  40a735:	aam    0xe5
  40a737:	sbb    DWORD PTR [eax+0x47],ebx
  40a73a:	push   ecx
  40a73b:	outs   dx,BYTE PTR ds:[esi]
  40a73c:	sub    al,0xd8
  40a73e:	lock mov ds:0x310a208f,al
  40a744:	inc    edx
  40a745:	inc    ecx
  40a746:	mov    bl,0xcd
  40a748:	mov    DWORD PTR [ecx-0x78],edi
  40a74b:	call   0x6e02:0x507e4bf
  40a752:	push   eax
  40a753:	sbb    esp,0x18
  40a756:	sub    al,0x16
  40a758:	xor    bh,BYTE PTR [eax-0x62]
  40a75b:	cli    
  40a75c:	retf   0x54ba
  40a75f:	out    0xa0,eax
  40a761:	retf   0xbe31
  40a764:	js     0x40a7d1
  40a766:	sub    BYTE PTR [ebx+ebp*8+0x1386eb96],dh
  40a76d:	test   BYTE PTR [ebx-0x4c],bh
  40a770:	xor    DWORD PTR [eax+0x23],esp
  40a773:	inc    ecx
  40a774:	xchg   ebp,eax
  40a775:	out    0xad,eax
  40a777:	mov    ch,0xe1
  40a779:	mov    ds:0xa4f9371c,eax
  40a77e:	mov    cl,0xe9
  40a780:	mov    BYTE PTR [ebx-0x1ecac3b4],bh
  40a786:	mov    esi,0x8091e8c5
  40a78b:	xor    al,0x3
  40a78d:	mov    DWORD PTR [esi],ebx
  40a78f:	jnp    0x40a7c6
  40a791:	pop    edi
  40a792:	mov    WORD PTR [ecx],gs
  40a794:	test   al,0x27
  40a796:	mov    edi,0xcc9ffe76
  40a79b:	ins    DWORD PTR es:[edi],dx
  40a79c:	sbb    DWORD PTR [edx-0x27],esi
  40a79f:	or     BYTE PTR [eax-0x4a8bf034],al
  40a7a5:	and    bl,cl
  40a7a7:	dec    edx
  40a7a8:	or     DWORD PTR [eax-0x63],edi
  40a7ab:	arpl   WORD PTR [ebx],di
  40a7ad:	inc    ecx
  40a7ae:	mov    ebx,0xb77d20fe
  40a7b3:	test   DWORD PTR [esi+0x4c],edi
  40a7b6:	xchg   ebx,eax
  40a7b7:	mov    ebx,0x676ed281
  40a7bc:	mov    ds:0xa485028d,eax
  40a7c1:	adc    edx,ecx
  40a7c3:	call   0xc773:0x7c1ca06f
  40a7ca:	inc    ecx
  40a7cb:	lahf   
  40a7cc:	in     al,dx
  40a7cd:	mov    esp,0x9e459fc6
  40a7d2:	mov    ebp,0x121b1d41
  40a7d7:	lods   al,BYTE PTR ds:[esi]
  40a7d8:	mov    edx,edi
  40a7da:	pushf  
  40a7db:	out    0x50,al
  40a7dd:	push   esi
  40a7de:	fldpi  
  40a7e0:	nop
  40a7e1:	iret   
  40a7e2:	jno    0x40a82c
  40a7e4:	or     BYTE PTR [ebx-0x37ca8dcb],bl
  40a7ea:	push   0x55
  40a7ec:	jae    0x40a7a6
  40a7ee:	and    eax,0x978b150d
  40a7f3:	lahf   
  40a7f4:	pusha  
  40a7f5:	in     eax,dx
  40a7f6:	stc    
  40a7f7:	or     DWORD PTR [edx-0x4],0x6339618f
  40a7fe:	push   ebp
  40a7ff:	test   eax,0xef2a97b4
  40a804:	(bad)  
  40a805:	je     0x40a832
  40a807:	in     eax,0x1d
  40a809:	sti    
  40a80a:	jmp    0x8513:0x5f4b4da3
  40a811:	jnp    0x40a852
  40a813:	dec    ebx
  40a814:	sub    BYTE PTR [esp+edx*4-0x40d4991d],cl
  40a81b:	push   ecx
  40a81c:	push   ds
  40a81d:	xchg   ebp,eax
  40a81e:	xchg   esi,eax
  40a81f:	add    ch,dh
  40a821:	sti    
  40a822:	fsubrp st(2),st
  40a824:	ficom  DWORD PTR [edi+eax*8]
  40a827:	dec    esi
  40a828:	(bad)  
  40a829:	sbb    eax,0xcaa95612
  40a82e:	sub    bh,BYTE PTR [esp+ebx*2-0x3f]
  40a832:	jmp    0x40a806
  40a834:	and    BYTE PTR [ebp-0x2c387aff],bh
  40a83a:	stos   BYTE PTR es:[edi],al
  40a83b:	xchg   edi,eax
  40a83c:	adc    ah,BYTE PTR [edi+ebp*1-0x65968f1f]
  40a843:	push   cs
  40a844:	mov    edi,0x80c0d027
  40a849:	test   DWORD PTR [eax],ecx
  40a84b:	xchg   esp,eax
  40a84c:	pop    ds
  40a84d:	inc    ecx
  40a84e:	push   esp
  40a84f:	mov    dl,0x31
  40a851:	dec    ebx
  40a852:	and    al,0xd5
  40a854:	icebp  
  40a855:	fdivp  st(2),st
  40a857:	jp     0x40a85b
  40a859:	cs jne 0x40a80a
  40a85c:	ins    BYTE PTR es:[edi],dx
  40a85d:	push   0x1b
  40a85f:	mov    ah,0x97
  40a861:	inc    edi
  40a862:	repz repnz idiv DWORD PTR [eax]
  40a866:	std    
  40a867:	jl     0x40a8ad
  40a869:	sbb    DWORD PTR [ebp-0xb],esp
  40a86c:	mov    ah,0xcb
  40a86e:	xchg   DWORD PTR [ebx+esi*4],eax
  40a871:	(bad)  
  40a872:	push   ss
  40a873:	cmp    al,0xf7
  40a875:	hlt    
  40a876:	inc    DWORD PTR [edx+0x5e1bbc5a]
  40a87c:	sub    eax,DWORD PTR [edx-0x74]
  40a87f:	jmp    0x40a823
  40a881:	xor    eax,DWORD PTR [esi]
  40a883:	ss push edx
  40a885:	push   ebp
  40a886:	inc    ebp
  40a887:	shl    DWORD PTR [edx],0x65
  40a88a:	push   ebx
  40a88b:	xor    eax,0x6b9cd416
  40a890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a891:	ja     0x40a851
  40a893:	cmp    al,0x38
  40a895:	out    dx,al
  40a896:	sbb    DWORD PTR [ecx-0x3efec296],esi
  40a89c:	cs jno 0x40a8ae
  40a89f:	jns    0x40a84c
  40a8a1:	sbb    al,0x86
  40a8a3:	sub    eax,0x75d1411a
  40a8a8:	nop
  40a8a9:	rcl    BYTE PTR [edi],1
  40a8ab:	mov    al,ds:0x1cebd4de
  40a8b0:	rol    BYTE PTR [esi-0x26],cl
  40a8b3:	xchg   esp,eax
  40a8b4:	popa   
  40a8b5:	icebp  
  40a8b6:	pop    ecx
  40a8b7:	cdq    
  40a8b8:	add    DWORD PTR [ebx],edx
  40a8ba:	ins    DWORD PTR es:[edi],dx
  40a8bb:	test   esp,0xac7d7f14
  40a8c1:	arpl   WORD PTR [ecx+0x1f09f616],di
  40a8c7:	test   eax,ebp
  40a8c9:	bound  ecx,QWORD PTR [edx-0x29]
  40a8cc:	loop   0x40a870
  40a8ce:	nop
  40a8cf:	lahf   
  40a8d0:	clc    
  40a8d1:	jle    0x40a8fd
  40a8d3:	call   DWORD PTR [edx-0x1d2bd641]
  40a8d9:	lods   eax,DWORD PTR ds:[esi]
  40a8da:	or     BYTE PTR [ebp+0x7a],al
  40a8dd:	and    ah,BYTE PTR [edx+0x4e21400a]
  40a8e3:	jmp    0x617f:0xfcdf7279
  40a8ea:	mov    ebx,DWORD PTR [esi]
  40a8ec:	push   ss
  40a8ed:	cmc    
  40a8ee:	pop    ecx
  40a8ef:	cdq    
  40a8f0:	icebp  
  40a8f1:	jbe    0x40a971
  40a8f3:	out    0xc0,eax
  40a8f5:	fisttp DWORD PTR [ecx]
  40a8f7:	jmp    0x5e66ac0e
  40a8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8fd:	lods   al,BYTE PTR ds:[esi]
  40a8fe:	leave  
  40a8ff:	xchg   BYTE PTR [edx],dh
  40a901:	sahf   
  40a902:	inc    DWORD PTR [edi+0x42]
  40a905:	push   ebx
  40a906:	outs   dx,BYTE PTR ds:[esi]
  40a907:	(bad)  
  40a908:	xchg   edx,eax
  40a909:	push   ss
  40a90a:	lahf   
  40a90b:	mov    edi,0xec9f9703
  40a910:	pop    ss
  40a911:	adc    dh,cl
  40a913:	out    dx,al
  40a914:	dec    ebp
  40a915:	and    eax,0x41fd239d
  40a91a:	pop    ecx
  40a91b:	mov    eax,0x9cf4aa60
  40a920:	repnz into 
  40a922:	xlat   BYTE PTR ds:[ebx]
  40a923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a924:	sub    edi,DWORD PTR [esi+0x3f]
  40a927:	arpl   di,si
  40a929:	ret    
  40a92a:	cmp    ecx,DWORD PTR [ebx-0x13df66c1]
  40a930:	fucomip st,st(5)
  40a932:	sti    
  40a933:	jno    0x40a8ed
  40a935:	outs   dx,DWORD PTR ds:[esi]
  40a936:	fwait
  40a937:	(bad)  
  40a938:	jo     0x40a8fc
  40a93a:	mov    dl,0xbd
  40a93c:	sbb    ebx,DWORD PTR [edi]
  40a93e:	jb     0x40a8d2
  40a940:	sti    
  40a941:	pop    ss
  40a942:	aas    
  40a943:	jb     0x40a99b
  40a945:	inc    esp
  40a946:	cmp    esi,esi
  40a948:	das    
  40a949:	push   ds
  40a94a:	xchg   DWORD PTR [bx+di+0x3a06],eax
  40a94f:	sbb    al,0xa3
  40a951:	stc    
  40a952:	cli    
  40a953:	mov    WORD PTR [ebx-0x17d5abf],ds
  40a959:	out    0x2f,eax
  40a95b:	xor    BYTE PTR [edx+0x4c1075be],al
  40a961:	ja     0x40a98c
  40a963:	mov    fs,WORD PTR [ebx+0x3e]
  40a966:	gs inc edi
  40a968:	inc    eax
  40a969:	cmp    BYTE PTR [esi],bh
  40a96b:	xchg   esp,eax
  40a96c:	push   esi
  40a96d:	jge    0x40a92d
  40a96f:	jb     0x40a98f
  40a971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a972:	inc    dx
  40a974:	push   ebx
  40a975:	jle    0x40a900
  40a977:	inc    edx
  40a978:	dec    ebx
  40a979:	out    0x86,eax
  40a97b:	mov    ebp,0xe48221a4
  40a980:	add    al,0x65
  40a982:	push   esp
  40a983:	xor    eax,0x811deabd
  40a988:	sub    BYTE PTR [esi+0x7f60fa23],0xfd
  40a98f:	dec    ebx
  40a990:	push   es
  40a991:	bound  esp,QWORD PTR [edi+0x1c24e58b]
  40a997:	add    al,0xe1
  40a999:	fild   WORD PTR [ecx]
  40a99b:	gs pop ebx
  40a99d:	mov    WORD PTR [edi-0x6],cs
  40a9a0:	fcmovb st,st(0)
  40a9a2:	fiadd  DWORD PTR [esi-0x9]
  40a9a5:	out    dx,eax
  40a9a6:	xchg   esp,eax
  40a9a7:	xchg   BYTE PTR [edi+0x4be47cd5],dl
  40a9ad:	add    dl,dh
  40a9af:	sbb    ebp,DWORD PTR [ebx-0x3150353b]
  40a9b5:	cmp    al,bh
  40a9b7:	icebp  
  40a9b8:	outs   dx,DWORD PTR ds:[esi]
  40a9b9:	push   ecx
  40a9ba:	stc    
  40a9bb:	pop    ebx
  40a9bc:	(bad)  
  40a9bd:	scas   eax,DWORD PTR es:[edi]
  40a9be:	fmul   QWORD PTR [ebp-0x22a7b5ec]
  40a9c4:	out    dx,al
  40a9c5:	arpl   si,bp
  40a9c7:	add    DWORD PTR [ecx-0x2e14f2dc],0xffffffba
  40a9ce:	iret   
  40a9cf:	inc    ebx
  40a9d0:	dec    eax
  40a9d1:	jns    0x40a981
  40a9d3:	jge    0x40aa28
  40a9d5:	test   bl,bl
  40a9d7:	call   0x5cbb:0x88088b3e
  40a9de:	sub    cl,BYTE PTR [eax-0x424bcc5e]
  40a9e4:	xchg   edi,eax
  40a9e5:	lea    esp,[esi]
  40a9e7:	inc    esp
  40a9e8:	fisubr WORD PTR ds:0xe509fc62
  40a9ee:	retf   
  40a9ef:	xchg   esi,eax
  40a9f0:	or     dl,BYTE PTR [edi]
  40a9f2:	mov    ebp,0x85760739
  40a9f7:	sbb    al,0xfb
  40a9f9:	ds xchg esp,eax
  40a9fb:	(bad)  [edi+0x53c1b293]
  40aa01:	lods   al,BYTE PTR ds:[esi]
  40aa02:	fmul   st,st(4)
  40aa04:	ret    0x8380
  40aa07:	mov    ecx,0x8fee6ae5
  40aa0c:	cwde   
  40aa0d:	sbb    dh,ch
  40aa0f:	dec    ebp
  40aa10:	in     eax,0xda
  40aa12:	call   0xda14:0xcb957486
  40aa19:	push   es
  40aa1a:	adc    eax,0xbf38c800
  40aa1f:	push   es
  40aa20:	adc    DWORD PTR [ebx-0x4eb6159b],edi
  40aa26:	test   al,0x34
  40aa28:	pop    ds
  40aa29:	adc    BYTE PTR [esi*4+0x5fb40421],dh
  40aa30:	adc    al,0xed
  40aa32:	stos   BYTE PTR es:[edi],al
  40aa33:	inc    edi
  40aa34:	sub    esp,DWORD PTR [edx+0x69]
  40aa37:	in     eax,0x44
  40aa39:	push   ebp
  40aa3a:	pop    ds
  40aa3b:	sbb    BYTE PTR [edx-0x79f7b4b3],ch
  40aa41:	inc    ecx
  40aa42:	cmovl  ebp,DWORD PTR [edx]
  40aa45:	retf   
  40aa46:	or     DWORD PTR [edi],esi
  40aa48:	adc    ebx,DWORD PTR [edi-0x50e8e2b0]
  40aa4e:	rcl    BYTE PTR [eax],0x9d
  40aa51:	jmp    0x907f:0x41ce2129
  40aa58:	(bad)  
  40aa59:	adc    al,0x25
  40aa5b:	pop    edx
  40aa5c:	xchg   edx,eax
  40aa5d:	xor    al,0x19
  40aa5f:	sub    BYTE PTR [ebp-0x49],dh
  40aa62:	shr    BYTE PTR [eax],1
  40aa64:	mov    ecx,0xe2bbd8cb
  40aa69:	pushf  
  40aa6a:	pop    es
  40aa6b:	jo     0x40aad1
  40aa6d:	adc    ch,BYTE PTR [ecx+0x65]
  40aa70:	xlat   BYTE PTR ds:[ebx]
  40aa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa72:	(bad)  
  40aa73:	push   ebp
  40aa74:	mov    esp,0xd8adb8f7
  40aa79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7a:	pop    es
  40aa7b:	test   DWORD PTR ds:0x2ca9f86,eax
  40aa81:	imul   edx,esi,0xffffffd2
  40aa84:	push   ebp
  40aa85:	neg    DWORD PTR [esi-0xb9cc26c]
  40aa8b:	pop    ss
  40aa8c:	and    al,0x5
  40aa8e:	cmp    BYTE PTR [ecx-0x731a2548],0x24
  40aa95:	add    DWORD PTR [edx+ecx*2+0x49],0x10
  40aa9a:	xchg   edx,eax
  40aa9b:	fidivr WORD PTR [eax]
  40aa9d:	daa    
  40aa9e:	jp     0x40aa77
  40aaa0:	sbb    al,0x3d
  40aaa2:	lahf   
  40aaa3:	or     BYTE PTR [ebx-0x72],ch
  40aaa6:	data16 mov bl,BYTE PTR [ebp+0x6f]
  40aaaa:	mov    dl,cl
  40aaac:	adc    DWORD PTR [edi-0x4e],esi
  40aaaf:	std    
  40aab0:	js     0x40ab11
  40aab2:	mov    ecx,0x3c8a1881
  40aab7:	xor    al,BYTE PTR [edx+0xe0f3ed8]
  40aabd:	mov    al,ds:0xc8ec34cf
  40aac2:	inc    ebp
  40aac3:	clc    
  40aac4:	fwait
  40aac5:	out    dx,eax
  40aac6:	repnz shl BYTE PTR [esi],cl
  40aac9:	sbb    al,BYTE PTR [ebp-0x7c8a02c5]
  40aacf:	jge    0x40aabe
  40aad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aad2:	sub    eax,0x8561df67
  40aad7:	jno    0x40aa6d
  40aad9:	test   al,0xe8
  40aadb:	push   ecx
  40aadc:	cmp    eax,0xeb5a3616
  40aae1:	push   0xde0ca252
  40aae6:	imul   esi,ebx,0x7b
  40aae9:	and    eax,0x89bf9626
  40aaee:	inc    ebp
  40aaef:	sbb    DWORD PTR [edi],esp
  40aaf1:	ins    BYTE PTR es:[edi],dx
  40aaf2:	popf   
  40aaf3:	jmp    0xa6ca3d3a
  40aaf8:	adc    al,0xfd
  40aafa:	ror    BYTE PTR [ebp+0x7d],0x5b
  40aafe:	and    bl,BYTE PTR [ebp-0x262978ca]
  40ab04:	pop    eax
  40ab05:	fwait
  40ab06:	out    dx,eax
  40ab07:	cmp    BYTE PTR [edx+0x50d327c1],bh
  40ab0d:	adc    ebx,DWORD PTR [eax]
  40ab0f:	mov    dh,0xe4
  40ab11:	ss sti 
  40ab13:	and    eax,0xa9efd897
  40ab18:	sub    ch,dh
  40ab1a:	sub    DWORD PTR [ebp+0x44b617c8],ecx
  40ab20:	arpl   WORD PTR [ebx+0x3e1b2395],dx
  40ab26:	fild   WORD PTR [esi-0x1f8cd12e]
  40ab2c:	fldcw  WORD PTR [ebx-0x2983d785]
  40ab32:	mov    ecx,0x88386bf2
  40ab37:	push   esp
  40ab38:	sub    dl,BYTE PTR [ecx+0x19]
  40ab3b:	xchg   ebp,eax
  40ab3c:	and    BYTE PTR [ebp+0x10],ah
  40ab3f:	jb     0x40aad2
  40ab41:	sbb    BYTE PTR ds:0xa92e7c6c,dh
  40ab47:	xor    BYTE PTR [eax],0x3
  40ab4a:	cli    
  40ab4b:	push   ebp
  40ab4c:	inc    eax
  40ab4d:	pop    esi
  40ab4e:	pop    ds
  40ab4f:	and    esi,esi
  40ab51:	dec    ebp
  40ab52:	sub    dh,BYTE PTR [esi+eax*1]
  40ab55:	cdq    
  40ab56:	or     al,0x52
  40ab58:	and    DWORD PTR [ecx-0x1e74a474],esi
  40ab5e:	fnop   
  40ab60:	mov    ecx,0x779205ab
  40ab65:	fwait
  40ab66:	mov    bh,0xe
  40ab68:	or     DWORD PTR [edx-0x31],eax
  40ab6b:	jnp    0x40abd4
  40ab6d:	mov    ch,0x9e
  40ab6f:	jb     0x40ab89
  40ab71:	das    
  40ab72:	xchg   bl,cl
  40ab74:	pop    eax
  40ab75:	cli    
  40ab76:	fsub   st(0),st
  40ab78:	aam    0x5a
  40ab7a:	xor    dh,BYTE PTR [ebx-0x4c]
  40ab7d:	ins    BYTE PTR es:[edi],dx
  40ab7e:	daa    
  40ab7f:	aam    0x70
  40ab81:	rcl    eax,cl
  40ab83:	dec    esp
  40ab84:	adc    cl,0x8
  40ab87:	popf   
  40ab88:	adc    BYTE PTR [ecx],0xda
  40ab8b:	ins    BYTE PTR es:[edi],dx
  40ab8c:	push   ds
  40ab8d:	nop
  40ab8e:	xor    eax,0x2ab0febe
  40ab93:	sbb    bh,dh
  40ab95:	xor    eax,0x3326e85a
  40ab9a:	and    dh,BYTE PTR ds:0xd6287cce
  40aba0:	jecxz  0x40abf5
  40aba2:	sub    cl,BYTE PTR [esi]
  40aba4:	rol    DWORD PTR [eax-0x62],0xc3
  40aba8:	jecxz  0x40ac06
  40abaa:	test   al,0xe5
  40abac:	out    0x4d,eax
  40abae:	shl    DWORD PTR [ecx],1
  40abb0:	cmp    ch,BYTE PTR [eax+0x37537f59]
  40abb6:	push   ss
  40abb7:	test   BYTE PTR [edx-0x5a50a70a],ch
  40abbd:	sbb    edi,esi
  40abbf:	xchg   esp,eax
  40abc0:	call   0xfebb:0xf2059943
  40abc7:	and    BYTE PTR [ebx+0x4755eb14],0x9
  40abce:	mov    al,0xd0
  40abd0:	jae    0x40ac05
  40abd2:	xor    ebx,0xfffffff3
  40abd5:	xchg   edx,eax
  40abd6:	mov    cl,BYTE PTR [edx-0x1526c873]
  40abdc:	jg     0x40abed
  40abde:	jae    0x40ac58
  40abe0:	out    dx,al
  40abe1:	inc    ebp
  40abe2:	mov    dh,0x42
  40abe4:	sub    ecx,ebp
  40abe6:	and    DWORD PTR [edx-0x74dca14b],ebp
  40abec:	call   0x6b0fbec5
  40abf1:	or     esi,DWORD PTR [edx+0x65]
  40abf4:	je     0x40ac2b
  40abf6:	xor    DWORD PTR [edi+0x29934c41],0x40
  40abfd:	shl    DWORD PTR [edi-0x62b69cf8],cl
  40ac03:	lds    ebp,FWORD PTR [esi+0x399fa2a9]
  40ac09:	adc    edi,DWORD PTR [edx+0x56daecaa]
  40ac0f:	push   ebx
  40ac10:	add    esp,DWORD PTR [ebp+ebp*1+0x5d]
  40ac14:	and    dh,dl
  40ac16:	pushf  
  40ac17:	xchg   ebp,eax
  40ac18:	jecxz  0x40ac03
  40ac1a:	xor    eax,0x4056ed91
  40ac1f:	mov    esi,0x587f2125
  40ac24:	jecxz  0x40abaf
  40ac26:	cli    
  40ac27:	jae    0x40ac25
  40ac29:	push   ebp
  40ac2a:	inc    eax
  40ac2b:	xchg   esp,eax
  40ac2c:	xor    eax,ebp
  40ac2e:	(bad)  
  40ac2f:	cmc    
  40ac30:	icebp  
  40ac31:	fldcw  WORD PTR [eax+0x79]
  40ac34:	(bad)  
  40ac35:	jb     0x40ac12
  40ac37:	jae    0x40ac6a
  40ac39:	cmp    ebx,DWORD PTR [ecx+0x59]
  40ac3c:	push   esp
  40ac3d:	loopne 0x40ac25
  40ac3f:	(bad)  
  40ac40:	xchg   ebp,eax
  40ac41:	push   esp
  40ac42:	sub    al,0x1c
  40ac44:	dec    esi
  40ac45:	sub    esp,DWORD PTR [ecx]
  40ac47:	aam    0x54
  40ac49:	sub    al,BYTE PTR [ecx]
  40ac4b:	jns    0x40abde
  40ac4d:	ds jb  0x40ac9a
  40ac50:	xor    al,BYTE PTR [edi+ebx*1-0x1697f020]
  40ac57:	test   eax,0x237afc6c
  40ac5c:	outs   dx,BYTE PTR ds:[esi]
  40ac5d:	stc    
  40ac5e:	call   0xd151bfe4
  40ac63:	call   0xa779559a
  40ac68:	pop    ebx
  40ac69:	xor    eax,0x93e3819f
  40ac6e:	ficom  WORD PTR [eax]
  40ac70:	jle    0x40ac8d
  40ac72:	loopne 0x40acc0
  40ac74:	fs jnp 0x40acce
  40ac77:	mov    BYTE PTR [edi+0xa1dc728],bl
  40ac7d:	adc    ch,dh
  40ac7f:	imul   edi,DWORD PTR [edi+0x16],0xffffffa6
  40ac83:	lss    esp,FWORD PTR [edx-0xf]
  40ac87:	lds    edx,FWORD PTR [edi-0x52]
  40ac8a:	ins    DWORD PTR es:[edi],dx
  40ac8b:	loop   0x40ac20
  40ac8d:	outs   dx,DWORD PTR ds:[esi]
  40ac8e:	or     DWORD PTR [edi+eiz*4-0xb6a2d5a],0x9dc56233
  40ac99:	shl    DWORD PTR [edx],1
  40ac9b:	rcl    dl,cl
  40ac9d:	sub    al,0x85
  40ac9f:	enter  0x97a9,0x2
  40aca3:	or     bh,BYTE PTR [ebx+0x3f29893]
  40aca9:	(bad)  
  40acaa:	or     DWORD PTR [esi+ebx*4+0x59143f6d],esi
  40acb1:	xor    esi,esi
  40acb3:	je     0x40ad33
  40acb5:	push   ebx
  40acb6:	and    ecx,DWORD PTR [edx+edi*1]
  40acb9:	pop    ebx
  40acba:	frstor [edi+0x7e6fa7e4]
  40acc0:	and    al,0x84
  40acc2:	cmp    BYTE PTR [ebp+0x6e1ec5b6],bh
  40acc8:	test   eax,0x44f0a613
  40accd:	inc    eax
  40acce:	add    DWORD PTR [ebx],esp
  40acd0:	mov    esi,0x7592770f
  40acd5:	mov    ebx,0x23b0f4a
  40acda:	(bad)  
  40acdb:	(bad)  
  40acdc:	scas   eax,DWORD PTR es:[edi]
  40acdd:	mov    bh,BYTE PTR [edi+0x48bdf8c2]
  40ace3:	jns    0x40ad13
  40ace5:	fwait
  40ace6:	and    BYTE PTR [edi+eiz*2],0xbd
  40acea:	or     BYTE PTR ds:0x6ea431f2,bh
  40acf0:	adc    esi,esp
  40acf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acf3:	fs xchg edx,eax
  40acf5:	aas    
  40acf6:	sbb    esp,ebp
  40acf8:	je     0x40ad12
  40acfa:	adc    DWORD PTR ds:0x20e6dc4b,edi
  40ad00:	adc    ebx,edi
  40ad02:	ret    0xc228
  40ad05:	inc    esp
  40ad06:	sbb    al,0xa6
  40ad08:	cmc    
  40ad09:	pop    edx
  40ad0a:	xchg   edx,eax
  40ad0b:	add    dh,BYTE PTR [edx]
  40ad0d:	push   eax
  40ad0e:	aam    0xb6
  40ad10:	out    0x6a,al
  40ad12:	lahf   
  40ad13:	in     al,dx
  40ad14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad15:	fld    QWORD PTR [edi+0x2a]
  40ad18:	push   edi
  40ad19:	adc    esp,edx
  40ad1b:	xor    eax,0x635bccaa
  40ad20:	adc    DWORD PTR [esi-0x6f872753],0xffffffe8
  40ad27:	hlt    
  40ad28:	cmp    eax,0xdcf7bbf9
  40ad2d:	jg     0x40ad30
  40ad2f:	push   ecx
  40ad30:	jle    0x40ad71
  40ad32:	mov    ecx,0xbf1f5597
  40ad37:	mov    WORD PTR [eax-0x51],cs
  40ad3a:	cmc    
  40ad3b:	adc    ebx,DWORD PTR [edx+0x243fea65]
  40ad41:	jmp    0x68e1:0xf967b1a7
  40ad48:	sub    esi,esi
  40ad4a:	adc    BYTE PTR [edx-0x7963b49b],dh
  40ad50:	stos   DWORD PTR es:[edi],eax
  40ad51:	jl     0x40ad19
  40ad53:	ror    DWORD PTR [ebp-0x7306c5a2],cl
  40ad59:	test   eax,0x2e0d4de
  40ad5e:	(bad)  
  40ad5f:	push   ds
  40ad60:	or     eax,0x2967cce1
  40ad65:	lods   al,BYTE PTR ds:[esi]
  40ad66:	(bad)  ds:0xf5751812
  40ad6c:	dec    eax
  40ad6d:	rcr    DWORD PTR [eax+ebp*1],1
  40ad70:	mov    edx,0xf2f5a470
  40ad75:	fs inc eax
  40ad77:	dec    esi
  40ad78:	jmp    0x87cdf608
  40ad7d:	gs (bad) 
  40ad80:	xor    al,0x37
  40ad82:	mov    ds:0x53b367ea,al
  40ad87:	mov    cl,0xc6
  40ad89:	sar    DWORD PTR [edi-0x5bd77b11],cl
  40ad8f:	les    edx,FWORD PTR [bx+si+0x4a]
  40ad93:	mov    ecx,0x1cc1725c
  40ad98:	pop    eax
  40ad99:	ret    0x120d
  40ad9c:	or     eax,DWORD PTR [ecx]
  40ad9e:	test   DWORD PTR [edi+0x33],esi
  40ada1:	inc    eax
  40ada2:	sbb    DWORD PTR [esi-0x201138ae],eax
  40ada8:	jne    0x40ade4
  40adaa:	inc    esi
  40adab:	pop    edi
  40adac:	jmp    0x70cb:0x27cac49
  40adb3:	inc    eax
  40adb4:	pushf  
  40adb5:	out    dx,eax
  40adb6:	fs sti 
  40adb8:	jbe    0x40adbf
  40adba:	in     eax,dx
  40adbb:	cmp    eax,DWORD PTR [esi-0x55]
  40adbe:	icebp  
  40adbf:	mov    eax,ds:0xab5e4978
  40adc4:	sub    DWORD PTR [ecx+0x31],esp
  40adc7:	stos   DWORD PTR es:[edi],eax
  40adc8:	imul   ebx,DWORD PTR [eax-0x62c5a76d],0x46
  40adcf:	sub    BYTE PTR [eax],bl
  40add1:	in     eax,0x89
  40add3:	repnz add ch,BYTE PTR [ebx+eiz*1]
  40add7:	clc    
  40add8:	inc    edx
  40add9:	aad    0xf7
  40addb:	mov    bh,0x88
  40addd:	ins    BYTE PTR es:[edi],dx
  40adde:	loope  0x40add5
  40ade0:	popf   
  40ade1:	and    DWORD PTR [ebp+0x59],0x6f392d79
  40ade8:	jbe    0x40ad6d
  40adea:	enter  0xcb43,0x92
  40adee:	mov    ecx,0xe2e07640
  40adf3:	addr16 pop ebx
  40adf5:	lahf   
  40adf6:	loop   0x40ae45
  40adf8:	inc    eax
  40adf9:	sar    eax,1
  40adfb:	mov    cs,eax
  40adfd:	test   BYTE PTR [edx+0x37],bl
  40ae00:	pop    ebp
  40ae01:	cld    
  40ae02:	sub    cl,BYTE PTR [eax-0x4a]
  40ae05:	call   0x64963095
  40ae0a:	inc    ebx
  40ae0b:	fs int 0x3a
  40ae0e:	cs xor al,0x29
  40ae11:	outs   dx,BYTE PTR ds:[esi]
  40ae12:	cld    
  40ae13:	and    BYTE PTR [esi],bh
  40ae15:	shl    BYTE PTR [ebp-0x20],0x9d
  40ae19:	cmp    eax,0x1676b0d5
  40ae1e:	mov    edx,ebp
  40ae20:	mov    dl,0xa8
  40ae22:	adc    eax,0xc901ab80
  40ae27:	ftst   
  40ae29:	mov    eax,ds:0xc174e4bd
  40ae2e:	cmp    dh,cl
  40ae30:	push   esi
  40ae31:	xor    BYTE PTR [esp+eiz*4],al
  40ae34:	sbb    al,0x6f
  40ae36:	ret    0xdebc
  40ae39:	mov    ds:0xdc0c528f,eax
  40ae3e:	mov    ah,BYTE PTR [esp+ebx*1-0x70]
  40ae42:	aaa    
  40ae43:	call   0x79f265f2
  40ae48:	xchg   ebx,edx
  40ae4a:	xor    BYTE PTR [esi],dl
  40ae4c:	bound  esp,QWORD PTR [ecx+0x637f237]
  40ae52:	xchg   edi,eax
  40ae53:	adc    DWORD PTR [eax-0x59],ebx
  40ae56:	jb     0x40ade1
  40ae58:	dec    ecx
  40ae59:	scas   al,BYTE PTR es:[edi]
  40ae5a:	add    eax,0x97492af3
  40ae5f:	or     ecx,ecx
  40ae61:	fiadd  WORD PTR ds:0xdd5a13f0
  40ae67:	out    dx,eax
  40ae68:	push   edi
  40ae69:	in     al,0x85
  40ae6b:	fisub  WORD PTR [ebx-0x5e]
  40ae6e:	popf   
  40ae6f:	shl    DWORD PTR [ecx],0x64
  40ae72:	add    ebp,DWORD PTR ds:0xcb9a741b
  40ae78:	inc    esp
  40ae79:	adc    BYTE PTR [esi-0x1d],ch
  40ae7c:	repz in eax,0x87
  40ae7f:	mov    edx,0x5d4b2422
  40ae84:	mov    dl,0x80
  40ae86:	jl     0x40aed4
  40ae88:	push   ds
  40ae89:	adc    dh,dh
  40ae8b:	mov    esi,0xa2cd161
  40ae90:	jno    0x40ae5c
  40ae92:	rcl    DWORD PTR [esi+0x55bf1552],cl
  40ae98:	js     0x40aeba
  40ae9a:	scas   eax,DWORD PTR es:[edi]
  40ae9b:	sti    
  40ae9c:	adc    al,0x7b
  40ae9e:	inc    esp
  40ae9f:	push   ds
  40aea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aea1:	loop   0x40ae32
  40aea3:	(bad)  
  40aea4:	out    dx,eax
  40aea5:	outs   dx,BYTE PTR ds:[esi]
  40aea6:	ins    DWORD PTR es:[edi],dx
  40aea7:	ss (bad) 
  40aea9:	sub    edx,DWORD PTR [esi+0x46e2b840]
  40aeaf:	aas    
  40aeb0:	test   al,0x60
  40aeb2:	test   eax,0x8d18e5e4
  40aeb7:	jns    0x40aee8
  40aeb9:	lods   al,BYTE PTR ds:[esi]
  40aeba:	es nop
  40aebc:	out    0x3,eax
  40aebe:	pusha  
  40aebf:	cmp    eax,0xa468d21
  40aec4:	shl    al,0xd8
  40aec7:	mov    edx,0xdac65983
  40aecc:	ret    
  40aecd:	xchg   ecx,eax
  40aece:	push   ebp
  40aecf:	and    BYTE PTR [ecx],al
  40aed1:	jb     0x40ae6d
  40aed3:	mov    al,ds:0x58b6c995
  40aed8:	mov    eax,ds:0x66101d4
  40aedd:	cwde   
  40aede:	xor    BYTE PTR [edx],bh
  40aee0:	dec    esp
  40aee1:	sub    ch,BYTE PTR [ebp+0x5bf905a5]
  40aee7:	cmp    al,0x34
  40aee9:	jne    0x40af19
  40aeeb:	icebp  
  40aeec:	sub    eax,DWORD PTR [ebp-0x2e]
  40aeef:	pop    edi
  40aef0:	mov    es,WORD PTR [ebx-0x49e78234]
  40aef6:	mov    dl,0x8c
  40aef8:	sbb    al,0x8f
  40aefa:	mov    dl,0x43
  40aefc:	in     eax,0x47
  40aefe:	mov    bh,BYTE PTR [eax+edx*4+0x6d]
  40af02:	aam    0xd4
  40af04:	sbb    edi,0xb538ef07
  40af0a:	mov    al,ds:0x677ff163
  40af0f:	out    0x34,eax
  40af11:	inc    edx
  40af12:	into   
  40af13:	push   eax
  40af14:	mov    dl,0xc5
  40af16:	int3   
  40af17:	pop    es
  40af18:	xchg   ecx,eax
  40af19:	outs   dx,BYTE PTR ds:[esi]
  40af1a:	mov    eax,ds:0xe67c9412
  40af1f:	js     0x40aea9
  40af21:	jecxz  0x40af31
  40af23:	icebp  
  40af24:	shr    BYTE PTR [esi-0x4f],0x90
  40af28:	mov    ds:0x7e6e3ee8,al
  40af2d:	fstp   DWORD PTR [esi-0x6b0cd4ab]
  40af33:	jle    0x40aec3
  40af35:	mov    ds:0xdf743b4c,eax
  40af3a:	adc    al,0x8b
  40af3c:	stc    
  40af3d:	push   ecx
  40af3e:	xor    DWORD PTR [esi+0x13167c8b],edx
  40af44:	dec    ecx
  40af45:	iret   
  40af46:	mov    DWORD PTR [edi],ebp
  40af48:	or     eax,0x5d68ae21
  40af4d:	ins    BYTE PTR es:[edi],dx
  40af4e:	jmp    DWORD PTR [eax]
  40af50:	sub    eax,0x7c20face
  40af55:	(bad)  
  40af57:	xor    ah,bh
  40af59:	add    eax,0x7fdbcfe4
  40af5e:	inc    edx
  40af5f:	sti    
  40af60:	xchg   ecx,eax
  40af61:	dec    edi
  40af62:	scas   al,BYTE PTR es:[edi]
  40af63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af64:	popf   
  40af65:	mov    bh,0x3f
  40af67:	outs   dx,DWORD PTR ds:[esi]
  40af68:	in     al,dx
  40af69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af6a:	mov    eax,ds:0xed871b20
  40af6f:	add    DWORD PTR [edi+0x2798bc9a],ebp
  40af75:	jmp    FWORD PTR [ebx-0x6856f7c8]
  40af7b:	jecxz  0x40af6e
  40af7d:	lods   al,BYTE PTR ds:[esi]
  40af7e:	mov    esi,0x85fb529
  40af83:	fucomi st,st(4)
  40af85:	xor    eax,0x1f56bd5e
  40af8a:	test   al,0x4d
  40af8c:	pop    ebx
  40af8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af8e:	and    BYTE PTR [ebp-0x60ffcb92],dl
  40af94:	rcl    BYTE PTR [ebx],cl
  40af96:	js     0x40afff
  40af98:	sub    ah,al
  40af9a:	push   edx
  40af9b:	retf   
  40af9c:	jecxz  0x40af1e
  40af9e:	sub    eax,0x85fbc04e
  40afa3:	rcr    DWORD PTR [ecx+0x2bf5665c],1
  40afa9:	xchg   ecx,eax
  40afaa:	cmp    esp,DWORD PTR [edx-0x25]
  40afad:	enter  0x25dc,0xc8
  40afb1:	pop    ebx
  40afb2:	pushf  
  40afb3:	dec    eax
  40afb4:	mov    ds:0xa307de9b,al
  40afb9:	jg     0x40af8f
  40afbb:	in     eax,dx
  40afbc:	shr    cl,cl
  40afbe:	das    
  40afbf:	popa   
  40afc0:	xchg   ebp,eax
  40afc1:	pushf  
  40afc2:	repz pop esi
  40afc4:	cmp    edx,DWORD PTR [edi+0x59aa960]
  40afca:	(bad)  
  40afcb:	je     0x40b00c
  40afcd:	push   edx
  40afce:	shr    DWORD PTR [ecx-0x7eb40573],1
  40afd4:	xchg   DWORD PTR [esi+0x186b7d78],edi
  40afda:	es aad 0x74
  40afdd:	(bad)
  40afe1:	mov    ds:0xa689e55,al
  40afe6:	xor    BYTE PTR [edi],dl
  40afe8:	add    al,0x9a
  40afea:	add    ebx,DWORD PTR [ecx+eiz*2+0x54bd0fe]
  40aff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff2:	addr16 pop ss
  40aff4:	inc    ebx
  40aff5:	loope  0x40b03f
  40aff7:	pop    es
  40aff8:	lods   eax,DWORD PTR ds:[esi]
  40aff9:	sub    dl,BYTE PTR ss:[edi+eiz*8-0x3ebbd6c2]
  40b001:	aaa    
  40b002:	(bad)  
  40b003:	jg     0x40b00a
  40b005:	retf   
  40b006:	mov    BYTE PTR [edi-0x4713dc71],ah
  40b00c:	fld    DWORD PTR [esi+0x42]
  40b00f:	and    ecx,esi
  40b011:	enter  0x8167,0x51
  40b015:	(bad)  
  40b016:	jp     0x40b065
  40b018:	lock (bad) 
  40b01a:	popa   
  40b01b:	mov    ch,ah
  40b01d:	pop    edi
  40b01e:	mov    gs,WORD PTR [edx+ebp*4-0x544fa42f]
  40b025:	jmp    0x8fb219c2
  40b02a:	sub    bh,BYTE PTR [edi]
  40b02c:	jmp    0x40b03b
  40b02e:	mov    ah,0xd6
  40b030:	scas   eax,DWORD PTR es:[edi]
  40b031:	or     DWORD PTR [eax],ebp
  40b033:	loopne 0x40b02c
  40b035:	sbb    BYTE PTR [eax-0x42],dh
  40b038:	jg     0x40b016
  40b03a:	retf   0x4d39
  40b03d:	inc    ebp
  40b03e:	sti    
  40b03f:	fnstenv [esi+0x3f]
  40b042:	jle    0x40afc9
  40b044:	xor    dh,bh
  40b046:	xor    DWORD PTR ds:0x981feaf9,ebx
  40b04c:	dec    esp
  40b04d:	cwde   
  40b04e:	dec    esi
  40b04f:	dec    esp
  40b050:	adc    al,0x57
  40b052:	mov    ebp,0xd2c2432e
  40b057:	sahf   
  40b058:	(bad)  
  40b059:	mov    cl,cl
  40b05b:	loope  0x40b020
  40b05d:	loope  0x40b027
  40b05f:	push   0xffffffc0
  40b061:	cmp    dl,BYTE PTR [ebx]
  40b063:	inc    edx
  40b064:	cmp    dl,BYTE PTR [edx]
  40b066:	mov    edx,0xb8b6fa82
  40b06b:	loope  0x40b0d2
  40b06d:	jecxz  0x40b0c8
  40b06f:	or     DWORD PTR [ebx+0x5d9c56da],eax
  40b075:	dec    eax
  40b076:	pop    ebx
  40b077:	mov    ah,0x81
  40b079:	adc    ecx,DWORD PTR [edi]
  40b07b:	sbb    DWORD PTR [ebx+0x2cfcee9e],ebx
  40b081:	add    al,0x61
  40b083:	xchg   esi,eax
  40b084:	out    0x74,al
  40b086:	inc    edx
  40b087:	sub    edx,DWORD PTR ds:0x96fb346e
  40b08d:	dec    ecx
  40b08e:	xchg   edx,eax
  40b08f:	adc    cl,bh
  40b091:	js     0x40b0ab
  40b093:	jne    0x40b0f1
  40b095:	push   ss
  40b096:	or     DWORD PTR [esi],edi
  40b098:	icebp  
  40b099:	sbb    dh,BYTE PTR [ecx+0x4a919da2]
  40b09f:	lea    eax,ds:0xc45ae864
  40b0a5:	sar    edi,cl
  40b0a7:	jp     0x40b029
  40b0a9:	inc    esi
  40b0aa:	or     bl,BYTE PTR [edx+ebx*4+0x335b5bf1]
  40b0b1:	adc    bl,BYTE PTR [eax]
  40b0b3:	ins    BYTE PTR es:[edi],dx
  40b0b4:	mov    ecx,0x3f195fc5
  40b0b9:	cmp    al,0x93
  40b0bb:	inc    esi
  40b0bc:	enter  0xff40,0x75
  40b0c0:	fimul  WORD PTR [edx]
  40b0c2:	push   ds
  40b0c3:	(bad)  
  40b0c4:	jmp    0x40b05d
  40b0c6:	pop    ebp
  40b0c7:	lock fldcw WORD PTR [eax]
  40b0ca:	cs mov edi,0xe241577c
  40b0d0:	mov    esi,0x16006091
  40b0d5:	xor    eax,0x7a4fcb8b
  40b0da:	sbb    eax,0x51077412
  40b0df:	sub    al,0x47
  40b0e1:	mov    cl,0x27
  40b0e3:	add    ch,BYTE PTR [eax]
  40b0e5:	scas   eax,DWORD PTR es:[edi]
  40b0e6:	pop    es
  40b0e7:	pushf  
  40b0e8:	ins    DWORD PTR es:[edi],dx
  40b0e9:	je     0x40b06e
  40b0eb:	(bad)  
  40b0ec:	dec    ecx
  40b0ed:	sub    bh,BYTE PTR [edx]
  40b0ef:	test   DWORD PTR [esi],esp
  40b0f1:	sbb    al,0xcb
  40b0f3:	test   BYTE PTR [ecx+0x570be898],dh
  40b0f9:	mov    BYTE PTR [edx-0x40970c9a],al
  40b0ff:	xor    eax,0x2c21d6d6
  40b104:	jmp    0xf151db9e
  40b109:	loopne 0x40b0c1
  40b10b:	pop    ebp
  40b10c:	popf   
  40b10d:	stos   DWORD PTR es:[edi],eax
  40b10e:	dec    esp
  40b10f:	fild   DWORD PTR [ebp-0x36e0a6f1]
  40b115:	jmp    0x69313b66
  40b11a:	lock mov ah,0xf7
  40b11d:	jp     0x40b16f
  40b11f:	popf   
  40b120:	dec    edi
  40b121:	addr16 or eax,0x141ed49a
  40b127:	and    dl,ah
  40b129:	dec    ecx
  40b12a:	sub    DWORD PTR [eax-0xf9ed7ed],ecx
  40b130:	dec    eax
  40b131:	adc    eax,0x407b6cca
  40b136:	ret    0x5078
  40b139:	ret    
  40b13a:	fstp   QWORD PTR [ebx-0x69]
  40b13d:	jle    0x40b0d4
  40b13f:	inc    ecx
  40b140:	jae    0x40b0eb
  40b142:	mov    dl,BYTE PTR [ecx]
  40b144:	mov    dl,0xa5
  40b146:	fisubr DWORD PTR [ecx-0x574ddb80]
  40b14c:	dec    esp
  40b14d:	adc    eax,0x6c7b7139
  40b152:	push   es
  40b153:	xor    cl,BYTE PTR [ecx+ebx*8+0x54]
  40b157:	call   0x6baeb882
  40b15c:	retf   
  40b15d:	xor    eax,DWORD PTR es:[ecx-0x4c513fc4]
  40b164:	inc    ebp
  40b165:	cmp    bh,BYTE PTR [edi]
  40b167:	enter  0x13e6,0x3a
  40b16b:	nop
  40b16c:	pop    es
  40b16d:	pop    edi
  40b16e:	jp     0x40b124
  40b170:	pop    edx
  40b171:	pop    esp
  40b172:	nop
  40b173:	test   dh,dl
  40b175:	and    al,BYTE PTR fs:[esi-0x20]
  40b179:	mov    es,WORD PTR [eax-0x26]
  40b17c:	popa   
  40b17d:	or     eax,0x750d55f2
  40b182:	mov    ecx,0x3500095e
  40b187:	fwait
  40b188:	mov    ah,BYTE PTR [edi]
  40b18a:	push   0x3c0e285b
  40b18f:	sub    eax,DWORD PTR [ebx+0x4d]
  40b192:	sti    
  40b193:	ror    BYTE PTR [esi],0xc8
  40b196:	int3   
  40b197:	clts   
  40b199:	mov    ch,BYTE PTR [ebx+0x49]
  40b19c:	cs call 0xcd80:0x228d1c15
  40b1a4:	mov    eax,0xbc1a4772
  40b1a9:	popa   
  40b1aa:	and    edi,edi
  40b1ac:	fadd   st(3),st
  40b1ae:	push   edi
  40b1af:	test   BYTE PTR [esi-0x44],al
  40b1b2:	out    dx,eax
  40b1b3:	retf   0x29ab
  40b1b6:	aam    0xc
  40b1b8:	out    0x82,al
  40b1ba:	pop    ebp
  40b1bb:	outs   dx,DWORD PTR ds:[esi]
  40b1bc:	adc    BYTE PTR ds:0x93271943,ah
  40b1c2:	pop    ss
  40b1c3:	inc    edx
  40b1c4:	fld    TBYTE PTR [edx+0x5b]
  40b1c7:	jge    0x40b17f
  40b1c9:	add    DWORD PTR [ebx-0x1c],eax
  40b1cc:	ins    DWORD PTR es:[edi],dx
  40b1cd:	in     eax,0x51
  40b1cf:	inc    esi
  40b1d0:	outs   dx,BYTE PTR ds:[esi]
  40b1d1:	inc    esi
  40b1d2:	stos   DWORD PTR es:[edi],eax
  40b1d3:	js     0x40b1fd
  40b1d5:	scas   eax,DWORD PTR es:[edi]
  40b1d6:	fcmovnu st,st(5)
  40b1d8:	dec    esi
  40b1d9:	cmc    
  40b1da:	addr16 push ds
  40b1dc:	mov    ah,0x68
  40b1de:	mov    ss,esi
  40b1e0:	cld    
  40b1e1:	mov    eax,DWORD PTR [eax-0x5d]
  40b1e4:	call   FWORD PTR [ecx]
  40b1e6:	cmp    DWORD PTR [ecx-0x355b9d8f],edi
  40b1ec:	jo     0x40b19b
  40b1ee:	dec    edx
  40b1ef:	imul   ecx,DWORD PTR [ebx+0x34c971cb],0xffffffe2
  40b1f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f7:	in     al,0xa
  40b1f9:	pop    ecx
  40b1fa:	sbb    bh,BYTE PTR [ebx]
  40b1fc:	mov    dl,0xe6
  40b1fe:	mov    al,ds:0x52db6065
  40b203:	loope  0x40b1cd
  40b205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b206:	mov    ebx,0x28c62578
  40b20b:	jge    0x40b1ab
  40b20d:	sub    edi,ebp
  40b20f:	imul   ebp,DWORD PTR [edx-0x67],0xf86aa8f
  40b216:	dec    ecx
  40b217:	jmp    0x40b1e3
  40b219:	repnz mov al,ds:0xff5c018a
  40b21f:	fsubr  DWORD PTR [ebp-0x4dbc10a4]
  40b225:	dec    esi
  40b226:	xor    al,BYTE PTR [edx-0x6bc0ed2a]
  40b22c:	nop
  40b22d:	add    eax,0xd69218f1
  40b232:	aaa    
  40b233:	(bad)  
  40b234:	data16 and BYTE PTR [edi],ch
  40b237:	or     eax,0x53fc9918
  40b23c:	or     DWORD PTR [ebp+0x39e2e04d],eax
  40b242:	dec    eax
  40b243:	clc    
  40b244:	into   
  40b245:	jns    0x40b1fc
  40b247:	mov    bh,0x39
  40b249:	add    al,0xeb
  40b24b:	sbb    BYTE PTR [ebx-0x11aa0ebf],dh
  40b251:	call   0x2750:0x681877fb
  40b258:	mov    dl,0xa
  40b25a:	div    DWORD PTR [ebp+0x711e6910]
  40b260:	ret    
  40b261:	in     al,0x40
  40b263:	and    ah,BYTE PTR [ebx+edi*1-0x73]
  40b267:	push   edi
  40b268:	imul   BYTE PTR [esi]
  40b26a:	test   al,0x67
  40b26c:	xchg   BYTE PTR [edx+ebx*1+0x5125c627],dh
  40b273:	mov    esp,0x19ae7d83
  40b278:	bnd jmp 0x40b290
  40b27b:	mov    dh,0x4a
  40b27d:	stos   DWORD PTR es:[edi],eax
  40b27e:	aas    
  40b27f:	adc    bl,BYTE PTR [eax+0x2e]
  40b282:	xchg   ebx,eax
  40b283:	repz mov al,ds:0xb036206b
  40b289:	loopne 0x40b260
  40b28b:	jae    0x40b238
  40b28d:	xchg   ebx,eax
  40b28e:	cmp    al,0x0
  40b290:	jns    0x40b233
  40b292:	cmp    bl,BYTE PTR [esi-0x3b]
  40b295:	sub    ebx,DWORD PTR [eax+ecx*4]
  40b298:	(bad)  
  40b299:	mov    cs:0x4981db40,eax
  40b29f:	sub    esp,DWORD PTR [ebx+edx*8+0x49]
  40b2a3:	sub    ah,ah
  40b2a5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40b2a7:	fbld   TBYTE PTR [eax+0x39]
  40b2aa:	and    al,0xd5
  40b2ac:	jne    0x40b2eb
  40b2ae:	scas   al,BYTE PTR es:[edi]
  40b2af:	shl    esp,0x71
  40b2b2:	(bad)  
  40b2b3:	je     0x40b312
  40b2b5:	in     al,0x93
  40b2b7:	cmp    DWORD PTR [esi],ecx
  40b2b9:	sbb    BYTE PTR [eax+0x12db940f],dh
  40b2bf:	and    eax,0x292b3fc6
  40b2c4:	(bad)  
  40b2c5:	xchg   DWORD PTR [ebx-0x79b2d639],ebp
  40b2cb:	mov    ah,0x22
  40b2cd:	mov    bl,BYTE PTR [edi+0x30ad5f6e]
  40b2d3:	inc    edx
  40b2d4:	cmp    bh,ch
  40b2d6:	jp     0x40b30f
  40b2d8:	loop   0x40b2fb
  40b2da:	call   FWORD PTR [eax-0x3]
  40b2dd:	imul   edi,DWORD PTR [esi-0x1],0xffffffb5
  40b2e1:	inc    ecx
  40b2e2:	out    dx,al
  40b2e3:	js     0x40b336
  40b2e5:	cmp    DWORD PTR [esi-0x63205d31],edi
  40b2eb:	lods   eax,DWORD PTR ds:[esi]
  40b2ec:	stos   BYTE PTR es:[edi],al
  40b2ed:	pop    ds
  40b2ee:	scas   eax,DWORD PTR es:[edi]
  40b2ef:	and    eax,0x7abb271d
  40b2f4:	sar    DWORD PTR [ebx+edx*1-0x37],1
  40b2f8:	aas    
  40b2f9:	jns    0x40b366
  40b2fb:	mov    gs,esi
  40b2fd:	ds jl  0x40b372
  40b300:	clc    
  40b301:	adc    ebx,DWORD PTR [ebp-0x78cb0796]
  40b307:	aad    0x59
  40b309:	jbe    0x40b366
  40b30b:	repz jns 0x40b2ab
  40b30e:	sub    ah,BYTE PTR [ecx+0x51]
  40b311:	leave  
  40b312:	pop    ebp
  40b313:	pop    eax
  40b314:	dec    ebx
  40b315:	or     DWORD PTR [ecx],edi
  40b317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b318:	or     al,0xae
  40b31a:	jg     0x40b2d9
  40b31c:	jge    0x40b335
  40b31e:	fst    DWORD PTR [ecx-0x14]
  40b321:	mov    ?,WORD PTR [ebx+edx*4]
  40b324:	pop    esi
  40b325:	adc    al,cl
  40b327:	mov    ecx,0x18fe43c1
  40b32c:	xor    esp,eax
  40b32e:	out    dx,eax
  40b32f:	inc    ebp
  40b330:	cdq    
  40b331:	inc    esi
  40b332:	xor    al,0x72
  40b334:	imul   DWORD PTR fs:[edi]
  40b337:	jmp    0x40b368
  40b339:	pop    edi
  40b33a:	sbb    ecx,DWORD PTR [ebx-0xdee2a0e]
  40b340:	scas   al,BYTE PTR es:[edi]
  40b341:	sbb    BYTE PTR cs:[edx],0x1
  40b345:	cmp    DWORD PTR [edx-0x3b],0x7
  40b349:	add    BYTE PTR [esi-0x1f],al
  40b34c:	dec    ebx
  40b34d:	jne    0x40b2fe
  40b34f:	nop
  40b350:	shl    DWORD PTR [ebx+0x1859cf13],cl
  40b356:	cmp    DWORD PTR [edx+edi*1],ecx
  40b359:	dec    ebp
  40b35a:	mov    ebx,0x44e5be8
  40b35f:	add    esp,DWORD PTR [edi-0x1901a5e4]
  40b365:	ss je  0x40b339
  40b368:	xchg   ecx,eax
  40b369:	adc    al,0x66
  40b36b:	test   DWORD PTR [esi-0x14],0x4983c169
  40b372:	jb     0x40b31e
  40b374:	lahf   
  40b375:	or     esi,DWORD PTR gs:[edx]
  40b378:	dec    ebp
  40b379:	mov    WORD PTR [ebx],ss
  40b37b:	inc    esp
  40b37c:	cld    
  40b37d:	int    0xc4
  40b37f:	jnp    0x40b378
  40b381:	(bad)  
  40b382:	dec    esi
  40b383:	inc    ebp
  40b384:	push   ss
  40b385:	ret    0xd92e
  40b388:	xor    edx,DWORD PTR [ebx-0x24629aae]
  40b38e:	icebp  
  40b38f:	daa    
  40b390:	repz jg 0x40b345
  40b393:	or     DWORD PTR [eax-0x65],0xca0e94dd
  40b39a:	aas    
  40b39b:	dec    edx
  40b39c:	popf   
  40b39d:	daa    
  40b39e:	push   cs
  40b39f:	xor    BYTE PTR [edi],ch
  40b3a1:	mov    edx,DWORD PTR [ebp-0x2519579e]
  40b3a7:	clc    
  40b3a8:	add    eax,edx
  40b3aa:	jno    0x40b361
  40b3ac:	das    
  40b3ad:	(bad)  
  40b3ae:	loop   0x40b33e
  40b3b0:	nop
  40b3b1:	push   eax
  40b3b2:	mov    bh,0x85
  40b3b4:	pop    ebx
  40b3b5:	mov    edi,0x8e9a4912
  40b3ba:	dec    edx
  40b3bb:	enter  0xc9c,0xaa
  40b3bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c0:	lock out dx,eax
  40b3c2:	arpl   WORD PTR [edx+0x3d9ae3a7],di
  40b3c8:	jge    0x40b3c0
  40b3ca:	cmp    DWORD PTR [edi+0x5ff2fce6],edx
  40b3d0:	(bad)  
  40b3d1:	retf   0x79a2
  40b3d4:	pop    ebx
  40b3d5:	les    esi,FWORD PTR [edi+0x3e]
  40b3d8:	sti    
  40b3d9:	sbb    al,0x46
  40b3db:	popa   
  40b3dc:	ss pop ss
  40b3de:	jbe    0x40b3d9
  40b3e0:	sbb    al,bh
  40b3e2:	pop    ebp
  40b3e3:	test   eax,0x379ca1cd
  40b3e8:	mov    bl,0xf2
  40b3ea:	mov    BYTE PTR es:[edi+0x1b1c1008],al
  40b3f1:	sbb    edx,DWORD PTR [edx-0x32e74866]
  40b3f7:	loope  0x40b3a2
  40b3f9:	and    edi,esi
  40b3fb:	popf   
  40b3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3fd:	push   es
  40b3fe:	repz and esp,DWORD PTR [eax-0x4e394244]
  40b405:	sbb    ch,BYTE PTR [edi]
  40b407:	xlat   BYTE PTR ds:[ebx]
  40b408:	inc    edi
  40b409:	mov    ah,0xda
  40b40b:	inc    ebx
  40b40c:	add    edi,ebp
  40b40e:	aas    
  40b40f:	mov    WORD PTR [edx+edi*4],gs
  40b412:	cmp    BYTE PTR [edx-0x77],dl
  40b415:	cwde   
  40b416:	dec    dx
  40b418:	push   esi
  40b419:	jg     0x40b41c
  40b41b:	test   al,0xc7
  40b41d:	repnz xor al,0xd1
  40b420:	es (bad) 
  40b422:	jmp    0x1488:0x9aae6e18
  40b429:	mov    al,0x3
  40b42b:	mov    dh,0xe8
  40b42d:	mov    ds:0x6ee8eeca,eax
  40b432:	sbb    eax,0x3e594a54
  40b437:	cmp    edx,DWORD PTR [esi-0x45]
  40b43a:	popa   
  40b43b:	pop    ds
  40b43c:	sar    BYTE PTR [eax+0x7b32b8c],0xd
  40b443:	popa   
  40b444:	cmp    DWORD PTR [ebx+0x2ebdffda],ecx
  40b44a:	test   BYTE PTR [esi],al
  40b44c:	adc    ebp,esp
  40b44e:	(bad)  
  40b44f:	ror    dh,1
  40b451:	mov    dh,0xc6
  40b453:	fisttp QWORD PTR [eax+0x4a9fd53d]
  40b459:	mov    ecx,0x4090e2db
  40b45e:	sti    
  40b45f:	fisubr DWORD PTR [ecx-0x677df89b]
  40b465:	sub    DWORD PTR [edi],ebp
  40b467:	das    
  40b468:	lds    ecx,FWORD PTR [esi]
  40b46a:	sbb    cl,bl
  40b46c:	push   edx
  40b46d:	sub    bh,BYTE PTR [esi+0x6d]
  40b470:	inc    edi
  40b471:	pushf  
  40b472:	and    BYTE PTR [ecx+eiz*1+0x71],bl
  40b476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b477:	das    
  40b478:	lods   al,BYTE PTR ds:[esi]
  40b479:	jne    0x40b4ca
  40b47b:	les    esi,FWORD PTR [edi-0x20]
  40b47e:	lock int 0x8b
  40b481:	mov    ch,0xf7
  40b483:	and    cl,bh
  40b485:	mov    edi,0xb1d58e1d
  40b48a:	leave  
  40b48b:	push   es
  40b48c:	mov    eax,0x2de73fa5
  40b491:	in     eax,0xe0
  40b493:	bnd js 0x40b4f8
  40b496:	jne    0x40b497
  40b498:	sbb    dl,BYTE PTR [edx+0x533532e5]
  40b49e:	mov    al,ds:0xbe13d126
  40b4a3:	es leave 
  40b4a5:	repnz cmc 
  40b4a7:	rcr    esi,cl
  40b4a9:	jbe    0x40b447
  40b4ab:	scas   eax,DWORD PTR es:[edi]
  40b4ac:	cdq    
  40b4ad:	test   DWORD PTR [edi],esp
  40b4af:	clc    
  40b4b0:	hlt    
  40b4b1:	sahf   
  40b4b2:	xlat   BYTE PTR ds:[ebx]
  40b4b3:	mov    bh,0x27
  40b4b5:	test   dh,bh
  40b4b7:	leave  
  40b4b8:	dec    esi
  40b4b9:	mov    WORD PTR [ebp+0x38],es
  40b4bc:	scas   al,BYTE PTR es:[edi]
  40b4bd:	pop    esi
  40b4be:	test   BYTE PTR [ecx],0x5
  40b4c1:	adc    BYTE PTR [ebx-0x10],dh
  40b4c4:	cdq    
  40b4c5:	xchg   BYTE PTR [ecx-0x62],bl
  40b4c8:	pop    edx
  40b4c9:	mov    ebx,0x88c6a173
  40b4ce:	fwait
  40b4cf:	lock mov ebx,DWORD PTR [esi-0x3ffea3c]
  40b4d6:	sbb    DWORD PTR [ebx],esp
  40b4d8:	std    
  40b4d9:	out    dx,eax
  40b4da:	and    DWORD PTR [esi-0x78c365c9],0x51
  40b4e1:	push   0x43
  40b4e3:	sbb    al,0x2a
  40b4e5:	ss ins BYTE PTR es:[edi],dx
  40b4e7:	mov    ch,0x55
  40b4e9:	cld    
  40b4ea:	(bad)  
  40b4eb:	rcr    bh,cl
  40b4ed:	sbb    edi,DWORD PTR [ebx]
  40b4ef:	xor    ebx,edx
  40b4f1:	add    dl,cl
  40b4f3:	mov    cl,0x2c
  40b4f5:	rol    BYTE PTR [ecx-0x21c645c5],1
  40b4fb:	into   
  40b4fc:	ss call 0x716e086a
  40b502:	inc    eax
  40b503:	popa   
  40b504:	ror    BYTE PTR [edi],1
  40b506:	xor    BYTE PTR [eax],0x4
  40b509:	rcl    DWORD PTR [esp+eiz*8],cl
  40b50c:	pop    ss
  40b50d:	sub    BYTE PTR [esi],0x70
  40b510:	push   cs
  40b511:	mul    BYTE PTR [edx+0x20]
  40b514:	or     ah,BYTE PTR es:[ebp+edi*8-0x3b9857c5]
  40b51c:	jmp    0x72f8:0xef9ffbc6
  40b523:	je     0x40b544
  40b525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b526:	bound  ebx,QWORD PTR [ebx+0x29]
  40b529:	xchg   esi,eax
  40b52a:	inc    ebp
  40b52b:	push   es
  40b52c:	and    al,0x3
  40b52e:	sub    esi,DWORD PTR [ebx+ecx*1-0x4b0af2c7]
  40b535:	std    
  40b536:	pushf  
  40b537:	or     BYTE PTR [ebx+0x6a83e06c],ah
  40b53d:	push   esp
  40b53e:	scas   al,BYTE PTR es:[edi]
  40b53f:	push   ebp
  40b540:	ss aas 
  40b542:	(bad)  
  40b543:	push   esi
  40b544:	add    edx,edi
  40b546:	inc    esp
  40b547:	and    al,0x99
  40b549:	add    al,0xee
  40b54b:	push   0xa2ca520d
  40b550:	mov    edx,0x5841f405
  40b555:	jmp    0x40b589
  40b557:	inc    edi
  40b558:	shr    DWORD PTR [ebx],0xad
  40b55b:	je     0x40b563
  40b55d:	bound  ebp,QWORD PTR [edx+0x4d6fefe5]
  40b563:	(bad)  
  40b565:	loopne 0x40b4f6
  40b567:	cmp    BYTE PTR [eax-0x7825142e],dh
  40b56d:	(bad)  
  40b56e:	ins    BYTE PTR es:[edi],dx
  40b56f:	cmp    bh,BYTE PTR [edx-0x51321baf]
  40b575:	push   esp
  40b576:	sub    esp,DWORD PTR [ebx-0x25555c74]
  40b57c:	sahf   
  40b57d:	cmp    BYTE PTR [ebp+0x2768ab02],bl
  40b583:	jb     0x40b52e
  40b585:	push   cs
  40b586:	gs aad 0x4e
  40b589:	iret   
  40b58a:	push   esp
  40b58b:	fidivr WORD PTR [edx+0x6a]
  40b58e:	cmp    edx,DWORD PTR [esi-0x4eece3e9]
  40b594:	xor    bh,dl
  40b596:	(bad)  
  40b598:	int    0x1e
  40b59a:	sub    al,0xe2
  40b59c:	cmp    dl,ah
  40b59e:	and    DWORD PTR [ebx+0x1b],ebx
  40b5a1:	jns    0x40b578
  40b5a3:	xchg   edi,eax
  40b5a4:	loopne 0x40b576
  40b5a6:	fadd   QWORD PTR [eax+0x1dfd6812]
  40b5ac:	(bad)  
  40b5ae:	imul   BYTE PTR [ecx+0x41]
  40b5b1:	mov    ebp,0xf7de923d
  40b5b6:	sub    ebp,DWORD PTR [eax-0x45]
  40b5b9:	mov    dl,0x0
  40b5bb:	and    bh,BYTE PTR [ebp+0x7280f2c6]
  40b5c1:	add    DWORD PTR [edi],0x72c5e7a6
  40b5c7:	in     eax,0x76
  40b5c9:	mov    eax,ds:0xfd4127e2
  40b5ce:	(bad)  
  40b5d0:	sub    WORD PTR [ebp-0x2f4be705],cx
  40b5d7:	les    edx,FWORD PTR [ebx]
  40b5d9:	xchg   edi,eax
  40b5da:	jecxz  0x40b5c2
  40b5dc:	icebp  
  40b5dd:	xchg   esp,eax
  40b5de:	mov    eax,cs
  40b5e0:	je     0x40b5ec
  40b5e2:	(bad)  
  40b5e3:	jae    0x40b5af
  40b5e5:	mov    bl,0x65
  40b5e7:	ds stc 
  40b5e9:	scas   eax,DWORD PTR es:[edi]
  40b5ea:	das    
  40b5eb:	test   eax,0x494f41d8
  40b5f0:	into   
  40b5f1:	les    ebp,FWORD PTR [esp+ebp*1]
  40b5f4:	mov    fs,WORD PTR [edi+0x4c]
  40b5f7:	imul   ecx,DWORD PTR [ecx+0x5b0e4451],0x4b4d2ffe
  40b601:	cld    
  40b602:	int    0xcc
  40b604:	fwait
  40b605:	add    DWORD PTR [esi+0x2c78975d],edx
  40b60b:	lds    edi,FWORD PTR [esi-0x30]
  40b60e:	fsubr  st,st(0)
  40b610:	mov    eax,ds:0xa4a1b43d
  40b615:	sti    
  40b616:	hlt    
  40b617:	(bad)  [ecx-0x21401fa7]
  40b61d:	loope  0x40b604
  40b61f:	mov    eax,ds:0x8943ee6f
  40b624:	mov    fs,WORD PTR [esi+esi*4+0x77]
  40b628:	mov    edx,0xcfc1bed9
  40b62d:	scas   al,BYTE PTR es:[edi]
  40b62e:	aam    0xbe
  40b630:	mov    ds:0x5354cbcb,eax
  40b635:	adc    DWORD PTR [edx-0x6b],ebp
  40b638:	pop    ss
  40b639:	sub    dl,bl
  40b63b:	sub    bl,BYTE PTR [edx-0x69]
  40b63e:	loopne 0x40b63a
  40b640:	pusha  
  40b641:	mov    esp,0xa1548260
  40b646:	cmp    BYTE PTR [ebp+0x3c],0xe5
  40b64a:	adc    DWORD PTR [esi],0xfc0835b7
  40b650:	jmp    0x1957:0x69500f69
  40b657:	scas   eax,DWORD PTR es:[edi]
  40b658:	jmp    0x164e:0x1ac758e3
  40b65f:	or     bh,BYTE PTR [edi+0x55]
  40b662:	fwait
  40b663:	ins    BYTE PTR es:[edi],dx
  40b664:	jmp    0xe282:0xcf30bb81
  40b66b:	mov    bh,0xf5
  40b66d:	dec    ebx
  40b66e:	jo     0x40b6eb
  40b670:	push   edi
  40b671:	cmp    DWORD PTR [ebx+0x35],ecx
  40b674:	or     eax,0xe274bcc8
  40b679:	inc    eax
  40b67a:	out    0x3a,al
  40b67c:	das    
  40b67d:	adc    BYTE PTR [eax],0x5
  40b680:	jno    0x40b615
  40b682:	mov    cl,0x96
  40b684:	push   ds
  40b685:	jb     0x40b68a
  40b687:	retf   0xbd24
  40b68a:	in     eax,dx
  40b68b:	ror    eax,cl
  40b68d:	dec    esp
  40b68e:	dec    ecx
  40b68f:	pop    ds
  40b690:	jns    0x40b707
  40b692:	cmp    BYTE PTR [esi],cl
  40b694:	or     eax,DWORD PTR [ebp+0x50]
  40b697:	or     al,0xe
  40b699:	xor    BYTE PTR [edx],bh
  40b69b:	ds and eax,0x414a4250
  40b6a1:	in     al,dx
  40b6a2:	adc    al,0x4a
  40b6a4:	rol    bh,cl
  40b6a6:	ret    0x3d93
  40b6a9:	test   eax,0x46a79e52
  40b6ae:	xchg   edi,eax
  40b6af:	sbb    al,BYTE PTR [edx+0x52]
  40b6b2:	sbb    eax,0x92e43a11
  40b6b7:	push   ds
  40b6b8:	xor    ah,BYTE PTR [esi-0x74e2ca1b]
  40b6be:	xor    eax,0xde1ffc5d
  40b6c3:	imul   ecx,eax,0x5a3b7acd
  40b6c9:	dec    eax
  40b6ca:	sbb    DWORD PTR [eax+0x10],ecx
  40b6cd:	rol    DWORD PTR [edi],1
  40b6cf:	and    DWORD PTR [ebx],eax
  40b6d1:	clc    
  40b6d2:	(bad)  
  40b6d3:	push   edi
  40b6d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d5:	popa   
  40b6d6:	mov    BYTE PTR [esi],dl
  40b6d8:	pop    esi
  40b6d9:	mov    esi,0x5514819
  40b6de:	ins    DWORD PTR es:[edi],dx
  40b6df:	add    esi,DWORD PTR [esi]
  40b6e1:	dec    eax
  40b6e2:	mov    al,0xf0
  40b6e4:	test   BYTE PTR [eax+0x50],dl
  40b6e7:	cmp    al,0x7e
  40b6e9:	into   
  40b6ea:	lds    ecx,FWORD PTR [eax+0x73484e9b]
  40b6f0:	fdivp  st(2),st
  40b6f2:	int    0x70
  40b6f4:	fiadd  WORD PTR [ebp+0x7d84451a]
  40b6fa:	dec    edx
  40b6fb:	clc    
  40b6fc:	and    eax,0x5887680b
  40b701:	and    BYTE PTR [ebp+0x5],0x59
  40b705:	aas    
  40b706:	mov    eax,0x61a41117
  40b70b:	push   0x883af6a8
  40b710:	or     DWORD PTR [eax],esp
  40b712:	and    eax,0xc51239a8
  40b717:	mov    ?,WORD PTR [esi]
  40b719:	rol    eax,0x83
  40b71c:	repz loopne 0x40b763
  40b71f:	pop    es
  40b720:	int    0x9c
  40b722:	xchg   ecx,eax
  40b723:	sub    DWORD PTR [ebx+0x264d068],edi
  40b729:	sbb    BYTE PTR [eax+esi*8-0x6bb19a3a],dh
  40b730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b731:	loop   0x40b6e9
  40b733:	pop    es
  40b734:	jmp    DWORD PTR [esi+0x7a]
  40b737:	jne    0x40b6bc
  40b739:	fadd   QWORD PTR [ebx-0x2050610d]
  40b73f:	mov    gs,esp
  40b741:	adc    BYTE PTR [ecx+ebp*1],ch
  40b744:	xor    cl,dl
  40b746:	faddp  st(0),st
  40b748:	gs in  eax,0xcb
  40b74b:	popf   
  40b74c:	xor    ecx,DWORD PTR [ecx-0x6]
  40b74f:	cmp    al,0x2c
  40b751:	xor    DWORD PTR [ecx],0xffffffea
  40b754:	stos   BYTE PTR es:[edi],al
  40b755:	jmp    0xa128:0xa5e8d166
  40b75c:	lock cli 
  40b75e:	xor    esp,DWORD PTR [ecx+esi*4-0x63]
  40b762:	jle    0x40b707
  40b764:	scas   al,BYTE PTR es:[edi]
  40b765:	push   es
  40b766:	dec    esi
  40b767:	mov    ds:0x4182eb3b,al
  40b76c:	or     esp,DWORD PTR [edx+0x58]
  40b76f:	ja     0x40b78a
  40b771:	push   cs
  40b772:	jmp    0x40b738
  40b774:	mov    bl,0x4a
  40b776:	dec    edx
  40b777:	icebp  
  40b778:	mov    ebp,0xe2a5c752
  40b77d:	mov    WORD PTR [eax],es
  40b77f:	sahf   
  40b780:	bound  ebp,QWORD PTR [esi+edx*1]
  40b783:	sbb    bl,BYTE PTR [ecx]
  40b785:	xor    bh,BYTE PTR [ebx]
  40b787:	pop    esi
  40b788:	mov    edi,0x333d381e
  40b78d:	xlat   BYTE PTR ds:[ebx]
  40b78e:	xlat   BYTE PTR ds:[ebx]
  40b78f:	and    eax,0xea2be156
  40b794:	das    
  40b795:	sbb    al,0x9d
  40b797:	push   ds
  40b798:	clc    
  40b799:	mov    cl,BYTE PTR [ebp+0x37e5d16f]
  40b79f:	adc    eax,0x912d2d0b
  40b7a4:	jl     0x40b7db
  40b7a6:	cmp    BYTE PTR [ebx-0x7a],0xa
  40b7aa:	mov    ds:0x121af91b,eax
  40b7af:	add    eax,0xb4258ef
  40b7b4:	int3   
  40b7b5:	xor    DWORD PTR [esi+0x60768282],0x9e896356
  40b7bf:	popa   
  40b7c0:	data16 jo 0x40b82e
  40b7c3:	jb     0x40b811
  40b7c5:	gs sbb esi,0x57bb5a25
  40b7cc:	add    eax,0xc7892692
  40b7d1:	mov    eax,0x162cb02
  40b7d6:	stos   BYTE PTR es:[edi],al
  40b7d7:	dec    ecx
  40b7d8:	cmp    eax,0xeb58fc4b
  40b7dd:	cld    
  40b7de:	or     eax,0x3783bb75
  40b7e3:	test   bl,ah
  40b7e5:	mov    ecx,0x63939c71
  40b7ea:	mov    al,ds:0x48314020
  40b7ef:	inc    esp
  40b7f0:	sbb    dl,BYTE PTR [edx]
  40b7f2:	push   cs
  40b7f3:	push   ss
  40b7f4:	pop    esp
  40b7f5:	sar    BYTE PTR ds:0x9e4f55ff,1
  40b7fb:	add    eax,0xccef9a1b
  40b800:	outs   dx,BYTE PTR ds:[esi]
  40b801:	sbb    al,0x91
  40b803:	inc    edx
  40b804:	sbb    al,dh
  40b806:	daa    
  40b807:	mov    ds:0x235c37da,eax
  40b80c:	test   eax,0xd234e1d5
  40b811:	or     eax,0x8b5409ce
  40b816:	add    ebx,DWORD PTR [eax]
  40b818:	mov    edi,ebx
  40b81a:	jmp    0xee08478f
  40b81f:	push   esp
  40b820:	xchg   ebp,eax
  40b822:	push   esi
  40b823:	hlt    
  40b824:	stos   BYTE PTR es:[edi],al
  40b825:	inc    esp
  40b826:	jns    0x40b7e1
  40b828:	dec    edi
  40b829:	sub    BYTE PTR [ebx],0x5b
  40b82c:	in     al,dx
  40b82d:	push   edx
  40b82e:	call   0xefa2:0xac62e044
  40b835:	xor    bh,BYTE PTR [ebx]
  40b837:	inc    edi
  40b838:	jge    0x40b805
  40b83a:	inc    ebp
  40b83b:	(bad)  
  40b83d:	adc    eax,0xe435c164
  40b842:	xchg   ecx,eax
  40b843:	out    dx,al
  40b844:	test   BYTE PTR [ebp+0x238f3ad7],bh
  40b84a:	bound  ebp,QWORD PTR [edi+ebx*4+0x1c]
  40b84e:	in     eax,dx
  40b84f:	sub    ebp,eax
  40b851:	push   ss
  40b852:	fidivr WORD PTR [ebp+esi*2-0x5414c2d7]
  40b859:	aaa    
  40b85a:	mov    bh,BYTE PTR [edx-0x4e998315]
  40b860:	imul   ebp,ecx,0xbed4991c
  40b866:	icebp  
  40b867:	stc    
  40b868:	pop    ds
  40b869:	adc    BYTE PTR [ebx-0x4763581c],cl
  40b86f:	sbb    BYTE PTR [esi-0x5d],0x65
  40b873:	jnp    0x40b874
  40b875:	pushf  
  40b876:	cmp    eax,0x7f5b2cce
  40b87b:	xchg   ebx,eax
  40b87c:	(bad)  
  40b87d:	dec    ecx
  40b87e:	and    edi,edx
  40b880:	int3   
  40b881:	jl     0x40b86e
  40b883:	pushf  
  40b884:	(bad)  
  40b885:	mov    ch,0xad
  40b887:	cwde   
  40b888:	push   eax
  40b889:	pop    esp
  40b88a:	mov    ah,0xa
  40b88c:	sti    
  40b88d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b88e:	scas   al,BYTE PTR es:[edi]
  40b88f:	jmp    0x40b87b
  40b891:	es retf 0x92b2
  40b895:	pusha  
  40b896:	cmp    eax,0xf1c219bd
  40b89b:	push   0x2d656f10
  40b8a0:	imul   esi
  40b8a2:	fs (bad) 
  40b8a4:	cmp    DWORD PTR [eax+0xc],edx
  40b8a7:	push   0xa328b5c
  40b8ac:	daa    
  40b8ad:	(bad)  
  40b8ae:	pusha  
  40b8af:	mul    BYTE PTR [esi+0x42]
  40b8b2:	rcr    BYTE PTR [ebp+0x41312667],0xf8
  40b8b9:	and    al,0x70
  40b8bb:	call   0x96e7:0x88f88369
  40b8c2:	les    ecx,FWORD PTR [edx+0x3e]
  40b8c5:	and    eax,0x5a1d4201
  40b8ca:	mov    dh,0x27
  40b8cc:	jmp    0x40b897
  40b8ce:	jl     0x40b882
  40b8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8d1:	xchg   ebp,eax
  40b8d2:	push   eax
  40b8d3:	push   ecx
  40b8d4:	mov    esi,0x46ad5ea
  40b8d9:	pop    esi
  40b8da:	mov    edx,0x4016811f
  40b8df:	xchg   ecx,eax
  40b8e0:	jmp    DWORD PTR [edx]
  40b8e2:	cwde   
  40b8e3:	jmp    0xb3736553
  40b8e8:	mov    bl,0xf4
  40b8ea:	iret   
  40b8eb:	push   ebp
  40b8ec:	or     dh,0x9c
  40b8ef:	push   edi
  40b8f0:	jle    0x40b887
  40b8f2:	jmp    0x40b944
  40b8f4:	ja     0x40b8fe
  40b8f6:	cbw    
  40b8f8:	and    cl,bl
  40b8fa:	and    BYTE PTR [ebx-0x5],cl
  40b8fd:	repz add al,0x67
  40b900:	sub    al,0x8b
  40b902:	jmp    0x656:0x4436846a
  40b909:	neg    BYTE PTR [esi+0x5]
  40b90c:	jb     0x40b96a
  40b90e:	sbb    edi,edi
  40b910:	push   edi
  40b911:	xchg   ecx,eax
  40b912:	or     DWORD PTR [edx-0x41b061d9],0xffffffa3
  40b919:	sbb    esi,ecx
  40b91b:	mov    ah,0xdd
  40b91d:	mov    eax,0x78c7b220
  40b922:	out    0x7d,al
  40b924:	jb     0x40b961
  40b926:	adc    ah,BYTE PTR [ebp-0x411501c5]
  40b92c:	jb     0x40b8c6
  40b92e:	(bad)  
  40b92f:	sbb    eax,0xaa7090b9
  40b934:	xchg   ebx,eax
  40b935:	inc    ebp
  40b936:	lods   al,BYTE PTR ds:[esi]
  40b937:	jae    0x40b963
  40b939:	adc    BYTE PTR [esi-0xc],bh
  40b93c:	add    ah,BYTE PTR [edx]
  40b93e:	jb     0x40b928
  40b940:	dec    esp
  40b941:	pop    esp
  40b942:	add    al,0xb1
  40b944:	push   ecx
  40b945:	adc    eax,0xce9d373b
  40b94a:	mov    edx,0xd35e18f8
  40b94f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b950:	mov    dl,0x3c
  40b952:	(bad)  
  40b953:	test   eax,0x25c72462
  40b958:	mov    edi,0x35ebdbbb
  40b95d:	cmp    eax,0x7759d8b
  40b962:	jnp    0x40b96f
  40b964:	mov    fs,WORD PTR [ecx-0x5c]
  40b967:	(bad)  
  40b968:	out    dx,eax
  40b969:	test   BYTE PTR [si+0x57e3],ah
  40b96e:	icebp  
  40b96f:	push   0x2605f9fb
  40b974:	fild   QWORD PTR [ebx-0xd]
  40b977:	or     ah,BYTE PTR [edx+ebx*8]
  40b97a:	js     0x40b9ce
  40b97c:	mov    al,0xcd
  40b97e:	dec    eax
  40b97f:	popa   
  40b980:	pop    eax
  40b981:	lds    edx,FWORD PTR [ebx]
  40b983:	sbb    BYTE PTR [edx],0x75
  40b986:	rep stos DWORD PTR es:[edi],eax
  40b988:	or     al,0x39
  40b98a:	fcomp  QWORD PTR ds:0x84a31c47
  40b990:	sub    eax,0x25d829ea
  40b995:	jle    0x40b9e3
  40b997:	sub    edi,esi
  40b999:	jmp    0x17bc7378
  40b99e:	mov    eax,0x61c3af78
  40b9a3:	push   eax
  40b9a4:	push   esi
  40b9a5:	or     bh,BYTE PTR [esi+0x5afb9ee3]
  40b9ab:	js     0x40b9f1
  40b9ad:	mov    esi,0x6df96e9d
  40b9b2:	clc    
  40b9b3:	cli    
  40b9b4:	add    al,0xf9
  40b9b6:	sahf   
  40b9b7:	and    DWORD PTR [esi-0x6b8bbd21],ebp
  40b9bd:	gs pop ebx
  40b9bf:	(bad)  
  40b9c0:	popa   
  40b9c1:	stc    
  40b9c2:	clc    
  40b9c3:	and    ecx,DWORD PTR [edx+ebx*1+0x76]
  40b9c7:	lods   al,BYTE PTR ds:[esi]
  40b9c8:	mov    BYTE PTR [ecx],bh
  40b9ca:	outs   dx,BYTE PTR ds:[esi]
  40b9cb:	cmp    al,0xac
  40b9cd:	xlat   BYTE PTR ds:[ebx]
  40b9ce:	bound  edi,QWORD PTR [esi-0x68]
  40b9d1:	or     dh,0x6d
  40b9d4:	push   edi
  40b9d5:	mov    BYTE PTR [ebp+0x53],bh
  40b9d8:	dec    ebp
  40b9d9:	dec    esp
  40b9da:	cmp    edx,DWORD PTR [edx]
  40b9dc:	nop
  40b9dd:	cmp    edx,DWORD PTR [ebp+0x25]
  40b9e0:	and    ebp,edx
  40b9e2:	add    al,0xb0
  40b9e4:	mov    ebx,0x3db71385
  40b9e9:	cld    
  40b9ea:	fimul  DWORD PTR [edi+0x72ec4214]
  40b9f0:	adc    al,0x25
  40b9f2:	(bad)  
  40b9f4:	js     0x40ba24
  40b9f6:	(bad)  
  40b9f7:	fistp  DWORD PTR [ecx-0x46c026bd]
  40b9fd:	in     al,0xc7
  40b9ff:	pop    ebx
  40ba00:	dec    eax
  40ba01:	push   ss
  40ba02:	push   eax
  40ba03:	js     0x40ba19
  40ba05:	shl    eax,0x2d
  40ba08:	(bad)  
  40ba0a:	outs   dx,BYTE PTR ds:[esi]
  40ba0b:	mov    ebx,0x6b46ff5e
  40ba10:	adc    al,0x24
  40ba12:	xor    eax,0x18262820
  40ba17:	add    eax,0x5f0cff2c
  40ba1c:	sub    eax,0xbe57f348
  40ba21:	cmc    
  40ba22:	fsubr  DWORD PTR [eax+0xa3ca663]
  40ba28:	out    0x9b,al
  40ba2a:	dec    eax
  40ba2b:	in     al,dx
  40ba2c:	dec    ecx
  40ba2d:	mov    bl,0x94
  40ba2f:	sti    
  40ba30:	call   0x6389:0x7887c933
  40ba37:	hlt    
  40ba38:	lds    edx,FWORD PTR ds:0x6892b3fd
  40ba3e:	les    edi,FWORD PTR [ecx+ebp*8-0x39]
  40ba42:	(bad)  
  40ba44:	and    al,0x15
  40ba46:	sbb    dh,BYTE PTR [ecx+0x53]
  40ba49:	retf   0xffd9
  40ba4c:	pop    esi
  40ba4d:	int3   
  40ba4e:	ret    0x7851
  40ba51:	sbb    eax,0xaa0d8541
  40ba56:	fild   DWORD PTR es:[eax+0x771f7526]
  40ba5d:	imul   ecx,DWORD PTR [edi-0x3c],0xffffffb6
  40ba61:	mov    edx,0x12c881ea
  40ba66:	push   0x1d
  40ba68:	nop
  40ba69:	clc    
  40ba6a:	cwde   
  40ba6b:	fsub   QWORD PTR [edx-0x186f979b]
  40ba71:	retf   0x927a
  40ba74:	mov    bh,0xb8
  40ba76:	fs (bad) 
  40ba79:	push   esp
  40ba7a:	lock jecxz 0x40bada
  40ba7d:	inc    eax
  40ba7e:	push   ecx
  40ba7f:	mov    ebp,edi
  40ba81:	outs   dx,BYTE PTR ds:[esi]
  40ba82:	loop   0x40baf8
  40ba84:	ret    0xd912
  40ba87:	sbb    eax,DWORD PTR [edi+eax*1+0x3d]
  40ba8b:	test   al,0x7a
  40ba8d:	mov    edi,0x2012b1d1
  40ba92:	les    ebp,FWORD PTR [esi]
  40ba94:	xor    edx,ecx
  40ba96:	gs pop esp
  40ba98:	cmp    DWORD PTR [edx+0x68ec1aff],0xc88223b4
  40baa2:	jmp    0x40bac2
  40baa4:	jmp    0x40bae2
  40baa6:	or     BYTE PTR [edx-0x229fa7b3],dl
  40baac:	xchg   edx,esi
  40baae:	loop   0x40bb2c
  40bab0:	jmp    0xce64:0xd66ace6c
  40bab7:	sub    al,0x47
  40bab9:	inc    esp
  40baba:	xor    edi,DWORD PTR [ecx+ebp*8-0x3b]
  40babe:	enter  0x57d8,0xe4
  40bac2:	mov    edx,0xf0f59cf3
  40bac7:	adc    edx,eax
  40bac9:	sub    dx,di
  40bacc:	out    dx,al
  40bacd:	xchg   esp,eax
  40bace:	scas   al,BYTE PTR es:[edi]
  40bacf:	jle    0x40ba95
  40bad1:	outs   dx,DWORD PTR ds:[esi]
  40bad2:	xor    al,0xda
  40bad4:	pop    esi
  40bad5:	add    eax,0x6bcfb43c
  40bada:	jle    0x40baa2
  40badc:	imul   ebp,DWORD PTR [ebp-0x2d],0xfffffffd
  40bae0:	fwait
  40bae1:	sub    al,0x3e
  40bae3:	lods   eax,DWORD PTR ds:[esi]
  40bae4:	add    al,0x7f
  40bae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bae7:	jo     0x40bb5c
  40bae9:	fidiv  DWORD PTR [ebp-0x5a]
  40baec:	popa   
  40baed:	mov    ah,0x22
  40baef:	call   0x51ec:0x679593b8
  40baf6:	jecxz  0x40baac
  40baf8:	arpl   WORD PTR [edx+0x13],bp
  40bafb:	rcl    BYTE PTR [edx],cl
  40bafd:	cmp    bl,BYTE PTR [edx+ebx*2]
  40bb00:	pop    ebp
  40bb01:	push   cs
  40bb02:	inc    eax
  40bb03:	inc    esp
  40bb04:	jmp    0xafec:0xe38dbfb9
  40bb0b:	addr16 ret 
  40bb0d:	fsubr  DWORD PTR [eax+0x5d]
  40bb10:	inc    eax
  40bb11:	cdq    
  40bb12:	ret    
  40bb13:	lods   eax,DWORD PTR ds:[esi]
  40bb14:	cwde   
  40bb15:	call   0xc2ef:0xf4d55ef3
  40bb1c:	mov    DWORD PTR [esi+0x57d222d1],ebx
  40bb22:	js     0x40bb7a
  40bb24:	aas    
  40bb25:	dec    edx
  40bb26:	and    esp,ebx
  40bb28:	sahf   
  40bb29:	sub    al,0xec
  40bb2b:	ss ret 0x4bf
  40bb2f:	in     al,0x46
  40bb31:	sbb    al,0x5e
  40bb33:	pop    eax
  40bb34:	in     al,0xc6
  40bb36:	dec    ebp
  40bb37:	dec    esi
  40bb38:	(bad)  
  40bb39:	ins    DWORD PTR es:[edi],dx
  40bb3a:	push   ds
  40bb3b:	imul   ecx,DWORD PTR [eax-0x4b],0xc7f798f5
  40bb42:	xchg   ebx,eax
  40bb43:	test   eax,0x4ef2e54a
  40bb48:	jmp    0xfc38:0xe5567279
  40bb4f:	cmp    al,0x80
  40bb51:	lock xor BYTE PTR [edx-0x1dfaf555],dl
  40bb58:	push   ebp
  40bb59:	and    esp,ecx
  40bb5b:	mov    ds:0x9caa2820,al
  40bb60:	lods   al,BYTE PTR ds:[esi]
  40bb61:	jl     0x40bb3f
  40bb63:	adc    BYTE PTR [eax+edx*1],0x1
  40bb67:	outs   dx,BYTE PTR ds:[esi]
  40bb68:	pop    ebp
  40bb69:	inc    ebx
  40bb6a:	fsubr  DWORD PTR [eax+ebp*8]
  40bb6d:	mov    gs,WORD PTR [ebx+0x6d]
  40bb70:	shl    DWORD PTR [edi+0x42ef2a36],0xd0
  40bb77:	add    esp,ebp
  40bb79:	mov    al,0xfc
  40bb7b:	push   ss
  40bb7c:	jmp    0x7e164f78
  40bb81:	fdivp  st(7),st
  40bb83:	leave  
  40bb84:	lods   al,BYTE PTR ds:[esi]
  40bb85:	rcr    BYTE PTR [edx-0x16000e80],1
  40bb8b:	push   es
  40bb8c:	call   FWORD PTR [edi+0x7b]
  40bb8f:	sbb    BYTE PTR [eax+0x16],bh
  40bb92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb93:	(bad)  
  40bb94:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40bb96:	mov    dh,BYTE PTR [eax]
  40bb98:	cmp    BYTE PTR [eax-0x32],dl
  40bb9b:	pushf  
  40bb9c:	mov    ebx,DWORD PTR [ecx]
  40bb9e:	and    BYTE PTR [bp+si-0x5b57],dh
  40bba3:	cli    
  40bba4:	lods   eax,DWORD PTR ds:[esi]
  40bba5:	push   esi
  40bba6:	or     ebp,DWORD PTR [ebx]
  40bba8:	or     ah,al
  40bbaa:	out    0xd8,al
  40bbac:	or     eax,0xbc879481
  40bbb1:	pop    es
  40bbb2:	or     dh,bh
  40bbb4:	push   es
  40bbb5:	ins    DWORD PTR es:[edi],dx
  40bbb6:	je     0x40bba8
  40bbb8:	cli    
  40bbb9:	(bad)  
  40bbba:	mov    ds:0xbee8f386,al
  40bbbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc0:	inc    BYTE PTR [ecx]
  40bbc2:	iret   
  40bbc3:	cwde   
  40bbc4:	cs sub eax,0x236e593b
  40bbca:	or     al,0xd4
  40bbcc:	sub    DWORD PTR [ebp-0x134bc5ce],0xd55a8742
  40bbd6:	cmc    
  40bbd7:	scas   al,BYTE PTR es:[edi]
  40bbd8:	or     al,0xe9
  40bbda:	or     BYTE PTR [eax-0x76],dl
  40bbdd:	jns    0x40bb7e
  40bbdf:	pop    ebx
  40bbe0:	pop    ss
  40bbe1:	adc    ch,bl
  40bbe3:	xchg   edi,eax
  40bbe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe5:	inc    esi
  40bbe6:	jae    0x40bbfc
  40bbe8:	lods   eax,DWORD PTR ds:[esi]
  40bbe9:	inc    esp
  40bbea:	pop    ebx
  40bbeb:	retf   
  40bbec:	sbb    BYTE PTR [esp+ebx*1-0x31],al
  40bbf0:	bswap  esi
  40bbf2:	arpl   WORD PTR [ebp+0x6c],sp
  40bbf5:	and    ah,BYTE PTR [ecx+0x1661100]
  40bbfb:	cmp    BYTE PTR [ebx+eiz*4-0x5f912dd5],cl
  40bc02:	(bad)  
  40bc04:	sub    DWORD PTR [ebp+0x56],edx
  40bc07:	sub    al,0xec
  40bc09:	mov    cl,0x27
  40bc0b:	je     0x40bc44
  40bc0d:	adc    dl,BYTE PTR [edx+0x3c]
  40bc10:	aad    0xa
  40bc12:	loopne 0x40bba2
  40bc14:	pop    ds
  40bc15:	cmp    DWORD PTR [ecx],ecx
  40bc17:	cmp    bl,ah
  40bc19:	jmp    0xe82abd6d
  40bc1e:	xchg   ecx,eax
  40bc1f:	adc    eax,0x874568f9
  40bc24:	int    0x44
  40bc26:	sub    edx,DWORD PTR ds:0x4602845d
  40bc2c:	sub    dh,BYTE PTR [edx]
  40bc2e:	out    0x76,eax
  40bc30:	jae    0x40bc52
  40bc32:	js     0x40bbd1
  40bc34:	and    DWORD PTR [ebx+0x51],esi
  40bc37:	(bad)  
  40bc38:	data16 repnz sub dh,BYTE PTR [ebx+0x4c0f6b08]
  40bc40:	cmp    al,0x13
  40bc42:	push   edx
  40bc43:	pushf  
  40bc44:	call   0x8ad0:0x6b747a1f
  40bc4b:	sub    eax,0x2a6a4f6b
  40bc50:	sar    DWORD PTR [ebp-0x3],1
  40bc53:	cpuid  
  40bc55:	adc    DWORD PTR [ebx+0x7a],ebx
  40bc58:	imul   ebp
  40bc5a:	sub    bh,BYTE PTR [eax]
  40bc5c:	sar    BYTE PTR [ecx+0x4c974b6e],cl
  40bc62:	xchg   edx,eax
  40bc63:	ds xor eax,0x46cf04e6
  40bc69:	pusha  
  40bc6a:	push   eax
  40bc6b:	sub    al,0x49
  40bc6d:	pop    ebx
  40bc6e:	fcmovu st,st(6)
  40bc70:	xchg   edx,eax
  40bc71:	cs sub al,ah
  40bc74:	pop    eax
  40bc75:	repnz sbb edx,DWORD PTR [esi+0x2c9c16c5]
  40bc7c:	mov    eax,ds:0x54e19595
  40bc81:	cmp    BYTE PTR [edi+edx*2],bh
  40bc84:	push   0x75f8985b
  40bc89:	out    dx,al
  40bc8a:	mov    ecx,0x35297d0d
  40bc8f:	je     0x40bcc9
  40bc91:	outs   dx,BYTE PTR ds:[esi]
  40bc92:	jb     0x40bcbb
  40bc94:	xchg   BYTE PTR [edx],dh
  40bc96:	outs   dx,DWORD PTR ds:[esi]
  40bc97:	pushf  
  40bc98:	in     eax,0xa3
  40bc9a:	mov    edx,0x54e81d7d
  40bc9f:	pop    ss
  40bca0:	lahf   
  40bca1:	pop    esi
  40bca2:	mov    dh,cl
  40bca4:	in     al,0xf0
  40bca6:	mov    dh,0xb6
  40bca8:	pop    edx
  40bca9:	and    cl,BYTE PTR [edi-0x79]
  40bcac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcad:	inc    ebp
  40bcae:	lahf   
  40bcaf:	(bad)  
  40bcb0:	in     al,dx
  40bcb1:	dec    ecx
  40bcb2:	add    ebp,DWORD PTR ds:[eax+0x76]
  40bcb6:	or     al,BYTE PTR [eax+0x1e]
  40bcb9:	dec    esp
  40bcba:	inc    esp
  40bcbb:	in     eax,0xd9
  40bcbd:	int    0x21
  40bcbf:	mov    BYTE PTR [ebx+0x47],0x3a
  40bcc3:	es sub esi,ebp
  40bcc6:	(bad)  
  40bcc7:	test   eax,0x94e28008
  40bccc:	call   0x5e2b3ac1
  40bcd1:	mov    ds:0x4bc158f7,eax
  40bcd6:	retf   
  40bcd7:	pushf  
  40bcd8:	mov    ch,0xd5
  40bcda:	fwait
  40bcdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcdc:	fcomp  DWORD PTR [edx-0x3f]
  40bcdf:	pop    ds
  40bce0:	in     eax,0x1
  40bce2:	mov    ebp,0x74b468e2
  40bce7:	mov    al,ds:0xc2a33638
  40bcec:	mov    dl,0x45
  40bcee:	std    
  40bcef:	cmp    ch,BYTE PTR [eax]
  40bcf1:	int    0xb4
  40bcf3:	sbb    al,0xea
  40bcf5:	out    0x1,eax
  40bcf7:	test   al,0x4c
  40bcf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcfa:	fdiv   DWORD PTR [ecx-0x6682b520]
  40bd00:	dec    edx
  40bd01:	jge    0x40bd3f
  40bd03:	aad    0xee
  40bd05:	rol    DWORD PTR [ecx-0x3f8c0d9f],1
  40bd0b:	sbb    ecx,DWORD PTR [esi+0x5880ba59]
  40bd11:	or     eax,0xa3d660e1
  40bd16:	bound  ebp,QWORD PTR [ebp-0x1f391ac1]
  40bd1c:	fadd   DWORD PTR [esi]
  40bd1e:	das    
  40bd1f:	inc    edi
  40bd20:	xchg   BYTE PTR [esi],ah
  40bd22:	adc    ebp,DWORD PTR [ebx-0x3809919c]
  40bd28:	mov    eax,0x1f972edd
  40bd2d:	xchg   esp,eax
  40bd2e:	sar    esp,cl
  40bd30:	dec    ebp
  40bd31:	xchg   edi,eax
  40bd32:	(bad)  
  40bd33:	(bad)  
  40bd35:	mov    ds:0x12cc519b,al
  40bd3a:	dec    eax
  40bd3b:	inc    ebx
  40bd3c:	xchg   edx,eax
  40bd3d:	xchg   ebx,eax
  40bd3e:	sbb    eax,0x5f936fd7
  40bd43:	pop    eax
  40bd44:	rcl    BYTE PTR [edx+0x10],0x43
  40bd48:	fwait
  40bd49:	xchg   BYTE PTR [eax+0xfbfbd47],cl
  40bd4f:	ret    0xf037
  40bd52:	push   edx
  40bd53:	and    DWORD PTR [edx],esi
  40bd55:	push   esp
  40bd56:	mov    dl,0xba
  40bd58:	mov    WORD PTR [eax-0x17fac5ec],fs
  40bd5e:	xlat   BYTE PTR ds:[ebx]
  40bd5f:	sar    ebx,cl
  40bd61:	repz adc eax,0x29435b98
  40bd67:	in     al,0x8b
  40bd69:	out    0xc7,al
  40bd6b:	pop    eax
  40bd6c:	(bad)  
  40bd6d:	ss imul esi,eax,0xffffffac
  40bd71:	imul   eax,DWORD PTR [edx-0xdc345cb],0xde6879db
  40bd7b:	mov    DWORD PTR [ebp-0x40126dc2],ebx
  40bd81:	or     dl,cl
  40bd83:	or     eax,0x21c313d
  40bd88:	or     BYTE PTR [edx+eiz*8],dl
  40bd8b:	inc    esp
  40bd8c:	cmp    al,0xc7
  40bd8e:	sbb    ebx,DWORD PTR [ebx+0x293993c0]
  40bd94:	sub    eax,0x120d413a
  40bd99:	push   ds
  40bd9a:	adc    esp,DWORD PTR [esi-0x5eed80f]
  40bda0:	sbb    dh,BYTE PTR [edx-0xff24986]
  40bda6:	shl    DWORD PTR [edi-0x4b602684],1
  40bdac:	fbld   TBYTE PTR ds:0xe22dad7e
  40bdb2:	jns    0x40be0c
  40bdb4:	nop
  40bdb5:	mov    eax,edi
  40bdb7:	fld    QWORD PTR [ecx-0x74]
  40bdba:	pop    ebx
  40bdbb:	arpl   WORD PTR [ebx],ax
  40bdbd:	cld    
  40bdbe:	(bad)  
  40bdc0:	jle    0x40bdaa
  40bdc2:	int3   
  40bdc3:	mov    bl,0x93
  40bdc5:	mov    eax,0x460d90b0
  40bdca:	xchg   ebp,eax
  40bdcb:	adc    BYTE PTR [esi+0x1b],0x2d
  40bdcf:	push   eax
  40bdd1:	aaa    
  40bdd2:	in     eax,0x48
  40bdd4:	fstp   QWORD PTR [edi-0x42758769]
  40bdda:	repnz mov cl,0xf
  40bddd:	and    ah,al
  40bddf:	fimul  WORD PTR [edi]
  40bde1:	jno    0x40bd6a
  40bde3:	out    dx,al
  40bde4:	shl    DWORD PTR [edi-0x28],1
  40bde7:	(bad)  
  40bde8:	inc    ecx
  40bde9:	fcomp  QWORD PTR [ebx+0x6b]
  40bdec:	sub    ebp,eax
  40bdee:	xor    eax,0x931947b9
  40bdf3:	jmp    eax
  40bdf5:	xchg   esi,eax
  40bdf6:	inc    ebx
  40bdf7:	mov    ebp,0xcb2f8ea8
  40bdfc:	fild   DWORD PTR ds:0x3b7641c3
  40be02:	mov    edi,0xda29e5d9
  40be07:	pop    edx
  40be08:	fbld   TBYTE PTR [ecx+0x4cfadaeb]
  40be0e:	sub    bh,BYTE PTR [ecx+0x4273ff84]
  40be14:	imul   ebx,DWORD PTR [eax-0x41],0x8111e4de
  40be1b:	std    
  40be1c:	mov    eax,0x314fcb7f
  40be21:	xor    bl,ah
  40be23:	loop   0x40be9e
  40be25:	inc    edx
  40be26:	pusha  
  40be27:	xor    al,0x54
  40be29:	repnz push dx
  40be2c:	(bad)
  40be31:	dec    ebp
  40be32:	ins    DWORD PTR es:[edi],dx
  40be33:	out    dx,al
  40be34:	mov    ch,ch
  40be36:	repz leave 
  40be38:	sub    BYTE PTR [ecx-0x36519ac1],dl
  40be3e:	or     al,0xdb
  40be40:	jno    0x40be07
  40be42:	sbb    eax,0x5e3a95bc
  40be47:	xchg   ebx,eax
  40be48:	clc    
  40be49:	in     al,0xc8
  40be4b:	jg     0x40bde9
  40be4d:	add    DWORD PTR [ebx+0x4],eax
  40be50:	lea    eax,[ecx]
  40be52:	test   DWORD PTR [eax+0x62bfc2ba],esp
  40be58:	outs   dx,DWORD PTR ds:[esi]
  40be59:	into   
  40be5a:	call   0xb52d02cb
  40be5f:	lds    ebp,FWORD PTR cs:[eax+0xa49f113]
  40be66:	mov    esp,0x13ef6acd
  40be6b:	imul   edx,DWORD PTR [ebx],0x6fb7bd1f
  40be71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be72:	popf   
  40be73:	xor    bh,BYTE PTR ds:0xcd1845d0
  40be79:	js     0x40be88
  40be7b:	sbb    BYTE PTR [ebx+edi*4],ah
  40be7e:	gs mov al,0xec
  40be81:	mov    eax,ds:0x84601df0
  40be86:	push   ecx
  40be87:	(bad)  
  40be88:	pcmpgtb mm1,mm7
  40be8b:	cmp    al,0x90
  40be8d:	stos   BYTE PTR es:[edi],al
  40be8e:	mov    ch,0xbc
  40be90:	in     al,0x48
  40be92:	shl    BYTE PTR [edx+0x30d83ab0],1
  40be98:	(bad)  
  40be99:	iret   
  40be9a:	shl    ah,1
  40be9c:	fsubr  QWORD PTR [ebx-0x56503a1c]
  40bea2:	or     BYTE PTR [ebx-0x6d],0xdb
  40bea6:	xchg   esp,eax
  40bea7:	loopne 0x40bf00
  40bea9:	adc    eax,0x4773c994
  40beae:	inc    ecx
  40beaf:	(bad)  
  40beb0:	int3   
  40beb1:	and    al,0x2a
  40beb3:	sub    esi,DWORD PTR [ecx-0xe275ed7]
  40beb9:	mov    bl,0x37
  40bebb:	popa   
  40bebc:	mov    cl,0xc4
  40bebe:	repnz icebp 
  40bec0:	jno    0x40bead
  40bec2:	into   
  40bec3:	push   0x81610cd7
  40bec8:	popf   
  40bec9:	cs sbb eax,0xa91a8343
  40becf:	fimul  WORD PTR ds:0x949b08bb
  40bed5:	scas   al,BYTE PTR es:[edi]
  40bed6:	ret    
  40bed7:	jmp    0x40be5b
  40bed9:	mov    ah,0x3c
  40bedb:	lock (bad) 
  40bedd:	fimul  DWORD PTR [ebx+0x3cc35e1f]
  40bee3:	(bad)  
  40bee4:	jns    0x40beee
  40bee6:	lahf   
  40bee7:	add    al,0x99
  40bee9:	in     al,0x34
  40beeb:	jle    0x40bf07
  40beed:	pop    ebx
  40beee:	stos   BYTE PTR es:[edi],al
  40beef:	das    
  40bef0:	mov    esp,0x2a2b3f42
  40bef5:	int3   
  40bef6:	mov    esi,0x2cfde54a
  40befb:	push   ecx
  40befc:	xchg   ebp,eax
  40befd:	dec    DWORD PTR [edx+0x4]
  40bf00:	lds    ebx,FWORD PTR [edx]
  40bf02:	xor    ecx,DWORD PTR [eax-0x5875c25]
  40bf08:	call   0x116ffefd
  40bf0d:	mov    esi,0x9b396173
  40bf12:	loope  0x40bf01
  40bf14:	pop    ss
  40bf15:	int3   
  40bf16:	push   0xfffffffc
  40bf18:	bound  ecx,QWORD PTR [ecx-0x5ffba3e7]
  40bf1e:	jle    0x40bf5d
  40bf20:	sbb    ebx,ebx
  40bf22:	sub    DWORD PTR [esi+0x20fc84cc],edx
  40bf28:	push   cs
  40bf29:	hlt    
  40bf2a:	sub    al,0xa1
  40bf2c:	push   esp
  40bf2d:	push   ds
  40bf2e:	mov    edx,0x3637f36b
  40bf33:	add    DWORD PTR [ecx+ecx*4+0x186926f3],esi
  40bf3a:	jo     0x40bf67
  40bf3c:	xor    eax,0x3ee7b41c
  40bf41:	popa   
  40bf42:	jg     0x40bfb3
  40bf44:	test   ch,ch
  40bf46:	inc    ecx
  40bf47:	adc    edi,esi
  40bf49:	loop   0x40bf88
  40bf4b:	mov    esp,esi
  40bf4d:	and    eax,0x1d12ef5b
  40bf52:	or     al,0x60
  40bf54:	xchg   edi,eax
  40bf55:	mov    ch,0xf5
  40bf57:	push   eax
  40bf58:	mov    ebx,0x4ab97880
  40bf5d:	mov    eax,0xbab6b4a5
  40bf62:	or     al,0x73
  40bf64:	les    esp,FWORD PTR [ecx]
  40bf66:	popa   
  40bf67:	dec    esp
  40bf68:	shl    BYTE PTR [ebp+eiz*4+0x6cbe519f],0x39
  40bf70:	icebp  
  40bf71:	mov    es,edx
  40bf73:	stos   DWORD PTR es:[edi],eax
  40bf74:	sub    edx,DWORD PTR [ecx+0x606893eb]
  40bf7a:	adc    DWORD PTR [eax],esi
  40bf7c:	xchg   ebx,eax
  40bf7d:	rcl    DWORD PTR [edi],cl
  40bf7f:	or     esp,DWORD PTR [edx]
  40bf81:	pop    ss
  40bf82:	sbb    dh,dh
  40bf84:	sub    ebp,DWORD PTR [esi]
  40bf86:	pop    esp
  40bf87:	dec    esi
  40bf88:	sar    dl,cl
  40bf8a:	mov    esp,0x49d26f2
  40bf8f:	jmp    0x40bfea
  40bf91:	lds    eax,FWORD PTR [ebp-0x4b]
  40bf94:	dec    esp
  40bf95:	mov    cs,edx
  40bf97:	xchg   BYTE PTR ds:0xf0961dac,al
  40bf9d:	jbe    0x40bfee
  40bf9f:	mov    ah,0x7f
  40bfa1:	div    DWORD PTR [esi]
  40bfa3:	xchg   ebp,eax
  40bfa4:	cmp    BYTE PTR [ecx],ch
  40bfa6:	push   es
  40bfa7:	nop
  40bfa8:	dec    ebx
  40bfa9:	fimul  DWORD PTR [edi]
  40bfab:	push   0xfffffffb
  40bfad:	xchg   edi,eax
  40bfae:	xor    cl,BYTE PTR [ebx]
  40bfb0:	sar    DWORD PTR [eax-0x581bdb76],cl
  40bfb6:	jae    0x40bf69
  40bfb8:	stc    
  40bfb9:	in     eax,dx
  40bfba:	out    dx,eax
  40bfbb:	xchg   ebp,eax
  40bfbc:	ss push ebp
  40bfbe:	jmp    0xdf0faf81
  40bfc3:	test   ebp,edx
  40bfc5:	mov    DWORD PTR [ebp+0x5b],0x7656f414
  40bfcc:	aam    0xec
  40bfce:	lods   eax,DWORD PTR ds:[esi]
  40bfcf:	adc    al,0x31
  40bfd1:	popa   
  40bfd2:	jae    0x40bf8b
  40bfd4:	jle    0x40c030
  40bfd6:	dec    ecx
  40bfd7:	enter  0x3280,0xdb
  40bfdb:	mov    esp,0xad36ae67
  40bfe0:	inc    edx
  40bfe1:	add    DWORD PTR [eax+0x3e],esp
  40bfe4:	mov    eax,DWORD PTR [edx+0x40]
  40bfe7:	add    al,0x43
  40bfe9:	fs pop eax
  40bfeb:	fist   WORD PTR [edx]
  40bfed:	mov    bl,dh
  40bfef:	and    BYTE PTR [ebx],ch
  40bff1:	or     eax,ecx
  40bff3:	stos   BYTE PTR es:[edi],al
  40bff4:	or     BYTE PTR [esi],bh
  40bff6:	iret   
  40bff7:	sbb    BYTE PTR [eax],cl
  40bff9:	sub    cl,BYTE PTR [edx-0x10]
  40bffc:	shl    bh,cl
  40bffe:	sub    DWORD PTR [edi+0x7a],ecx
  40c001:	adc    al,0x55
  40c003:	cmp    BYTE PTR [esi+0x50],bh
  40c006:	inc    esp
  40c007:	aam    0x6d
  40c009:	and    bl,BYTE PTR [ebx-0x1e]
  40c00c:	stos   BYTE PTR es:[edi],al
  40c00d:	cmc    
  40c00e:	(bad)  
  40c010:	push   esi
  40c011:	xchg   esp,eax
  40c012:	dec    esi
  40c013:	popf   
  40c014:	or     al,0x14
  40c016:	das    
  40c017:	leave  
  40c018:	jb     0x40c037
  40c01a:	add    ebp,DWORD PTR [eax]
  40c01c:	jg     0x40bfea
  40c01e:	outs   dx,BYTE PTR ds:[esi]
  40c01f:	(bad)  
  40c020:	shl    dl,cl
  40c022:	stos   BYTE PTR es:[edi],al
  40c023:	shl    DWORD PTR [ecx+0x3a],1
  40c026:	jecxz  0x40c08d
  40c028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c029:	call   0xdc58:0x74113e80
  40c030:	pop    ebx
  40c031:	test   al,0xb4
  40c033:	sbb    BYTE PTR [ecx-0x2a062f4b],al
  40c039:	or     al,0x8b
  40c03b:	mov    esi,0x19d1e4c2
  40c040:	stos   BYTE PTR es:[edi],al
  40c041:	aaa    
  40c042:	fld    QWORD PTR [ebp-0x60]
  40c045:	(bad)  [ebx]
  40c047:	test   DWORD PTR [edx],0x43cad922
  40c04d:	push   eax
  40c04e:	rcr    DWORD PTR [eax],0xff
  40c051:	jae    0x40bfe4
  40c053:	inc    eax
  40c054:	les    eax,FWORD PTR [eax+ebp*2-0x15]
  40c058:	imul   edx,DWORD PTR ds:0xdef4dcd9,0xfffffff8
  40c05f:	outs   dx,DWORD PTR ds:[esi]
  40c060:	mov    edx,DWORD PTR [ebx-0x62]
  40c063:	jae    0x40bff9
  40c065:	dec    ebp
  40c066:	pusha  
  40c067:	pop    DWORD PTR [ecx]
  40c069:	jge    0x40c055
  40c06b:	push   ds
  40c06c:	sti    
  40c06d:	cmp    eax,ecx
  40c06f:	popf   
  40c070:	xchg   edx,eax
  40c071:	xchg   edx,eax
  40c072:	xchg   DWORD PTR [ebx-0x78],edx
  40c075:	xchg   edi,eax
  40c076:	ds int3 
  40c078:	xchg   DWORD PTR gs:[esp+ebx*1-0x5e],esp
  40c07d:	push   cs
  40c07e:	inc    edx
  40c07f:	rol    ebx,0x5c
  40c082:	in     eax,0x4f
  40c084:	xor    DWORD PTR [ecx],edi
  40c086:	pop    ss
  40c087:	std    
  40c088:	sar    DWORD PTR [ecx],1
  40c08a:	pop    edi
  40c08b:	mov    cl,0xf3
  40c08d:	fistp  QWORD PTR [ecx+0x33]
  40c090:	scas   eax,DWORD PTR es:[edi]
  40c091:	and    cl,BYTE PTR [edi]
  40c093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c094:	data16 mov BYTE PTR [eax-0x17ef781e],ah
  40c09b:	mov    eax,0xbaafb972
  40c0a0:	sbb    DWORD PTR [ebx+ecx*4+0x20],ebp
  40c0a4:	fcomp  QWORD PTR [esi]
  40c0a6:	fstp   QWORD PTR [edx+0x9617664]
  40c0ac:	scas   al,BYTE PTR es:[edi]
  40c0ad:	lock push eax
  40c0af:	ffreep st(6)
  40c0b1:	stc    
  40c0b2:	mov    eax,0xe6aaa825
  40c0b7:	or     BYTE PTR [eax+0x2ca482a0],ch
  40c0bd:	push   edi
  40c0be:	mov    BYTE PTR [ecx+0x21c87d07],dl
  40c0c4:	stos   BYTE PTR es:[edi],al
  40c0c5:	scas   eax,DWORD PTR es:[edi]
  40c0c6:	stos   DWORD PTR es:[edi],eax
  40c0c7:	add    eax,0x754bf7a5
  40c0cc:	imul   ecx,edi,0xd8aa3a7
  40c0d2:	ja     0x40c0e3
  40c0d4:	pushf  
  40c0d5:	sbb    DWORD PTR [edx+edi*8-0x5bbbd274],0xffffffe0
  40c0dd:	push   esp
  40c0de:	fild   DWORD PTR [edi+0x2d]
  40c0e1:	jl     0x40c0bd
  40c0e3:	sub    DWORD PTR [ebp-0x4d3c233f],0xffffffa5
  40c0ea:	outs   dx,BYTE PTR ds:[esi]
  40c0eb:	repnz sbb DWORD PTR [edx+0x12],ebx
  40c0ef:	push   esp
  40c0f0:	add    DWORD PTR [esi-0x2cc377ce],edx
  40c0f6:	dec    edx
  40c0f7:	div    DWORD PTR [ecx-0x73]
  40c0fa:	sbb    ebp,eax
  40c0fc:	sbb    ah,bh
  40c0fe:	adc    BYTE PTR [edx-0x23],0xb0
  40c102:	idiv   DWORD PTR [edi+0x594bd5b]
  40c108:	or     bl,BYTE PTR [ebx+0x74976a55]
  40c10e:	jl     0x40c167
  40c110:	jp     0x9b26e757
  40c116:	cdq    
  40c117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c118:	ret    0x7a26
  40c11b:	loope  0x40c130
  40c11d:	sahf   
  40c11e:	(bad)  
  40c11f:	or     dh,BYTE PTR [ecx-0x66]
  40c122:	mov    ecx,esi
  40c124:	mov    dh,0x3f
  40c126:	stos   BYTE PTR es:[edi],al
  40c127:	loope  0x40c170
  40c129:	cmp    eax,edi
  40c12b:	dec    esi
  40c12c:	stos   DWORD PTR es:[edi],eax
  40c12d:	rol    DWORD PTR [edx+eax*1],cl
  40c130:	mov    ebx,0x63d6078
  40c135:	in     eax,0x78
  40c137:	push   eax
  40c138:	sbb    DWORD PTR [edi-0x7af799ee],ecx
  40c13e:	jae    0x40c100
  40c140:	int    0x2b
  40c142:	xor    BYTE PTR ds:0xf7b015b1,0xb7
  40c149:	int3   
  40c14a:	sub    dh,BYTE PTR [ecx-0x31]
  40c14d:	dec    ebp
  40c14e:	dec    edi
  40c14f:	sub    DWORD PTR [ebx+0x5fa87698],esi
  40c155:	aam    0xf0
  40c157:	shl    BYTE PTR [esi+ebx*8+0x2],1
  40c15b:	(bad)  
  40c15c:	cld    
  40c15d:	jmp    0xcb7f4a6a
  40c162:	xchg   BYTE PTR [ecx+0x4d],ch
  40c165:	enter  0x9959,0x60
  40c169:	dec    esp
  40c16a:	jb     0x40c1e9
  40c16c:	sub    bl,BYTE PTR [esi+eax*2-0x6e]
  40c170:	leave  
  40c171:	jmp    0xd8ab:0xf76a0ba1
  40c178:	fadd   QWORD PTR [ebx+0x15]
  40c17b:	in     al,dx
  40c17c:	cmp    dl,BYTE PTR ds:0x76bc5eb9
  40c182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c183:	ja     0x40c1ef
  40c185:	out    0x69,al
  40c187:	sub    BYTE PTR [ebx-0x7b],cl
  40c18a:	mov    ah,bl
  40c18c:	push   0xc28c0ec9
  40c191:	cmp    esi,DWORD PTR [ebp-0x4b]
  40c194:	and    ecx,DWORD PTR [ecx+eax*2]
  40c197:	sahf   
  40c198:	in     al,dx
  40c199:	pushf  
  40c19a:	icebp  
  40c19b:	test   al,ah
  40c19d:	or     bh,BYTE PTR [edx-0x12d9bc4c]
  40c1a3:	loope  0x40c169
  40c1a5:	shl    BYTE PTR [edx-0x25c55c2],cl
  40c1ab:	dec    ebp
  40c1ac:	jmp    0x39e5:0xa85bca11
  40c1b3:	mov    ecx,0x1544627c
  40c1b8:	imul   eax,ebp,0xffffff88
  40c1bb:	push   0xb6ce1a7d
  40c1c0:	or     DWORD PTR [eax],esp
  40c1c2:	or     cl,BYTE PTR [ebx+0x62e0c21c]
  40c1c8:	or     cl,bh
  40c1ca:	mov    dl,ah
  40c1cc:	repz mov ecx,0x1c710bd
  40c1d2:	repnz neg DWORD PTR [edx+eiz*8+0x61fc33aa]
  40c1da:	dec    edx
  40c1db:	cdq    
  40c1dc:	js     0x40c23e
  40c1de:	or     BYTE PTR [eax],bl
  40c1e0:	and    edx,0xffffffe5
  40c1e3:	adc    BYTE PTR [eax],bh
  40c1e5:	or     DWORD PTR [ebp+0x5a6d7b50],0x59
  40c1ec:	push   ss
  40c1ed:	mov    ds,esp
  40c1ef:	(bad)
  40c1f3:	stos   BYTE PTR es:[edi],al
  40c1f4:	daa    
  40c1f5:	fisttp WORD PTR [ebp-0x791fc719]
  40c1fb:	push   eax
  40c1fc:	mov    al,0xac
  40c1fe:	rcl    BYTE PTR [ebx+0x3eab427],1
  40c204:	and    cl,BYTE PTR [ecx+0x25]
  40c207:	hlt    
  40c208:	ror    BYTE PTR [esi-0x42968044],1
  40c20e:	cwde   
  40c20f:	sbb    BYTE PTR cs:[eax+eax*8-0x133f58b7],ah
  40c217:	jno    0x40c241
  40c219:	push   eax
  40c21a:	jbe    0x40c202
  40c21c:	or     al,0x85
  40c21e:	scas   al,BYTE PTR es:[edi]
  40c21f:	jl     0x40c203
  40c221:	pop    esp
  40c222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c223:	cmp    eax,ebp
  40c225:	pop    ebx
  40c226:	popa   
  40c227:	leave  
  40c228:	popa   
  40c229:	fidiv  DWORD PTR [edx+0x29]
  40c22c:	adc    dh,BYTE PTR [eax+0x509abfb1]
  40c232:	add    edx,ebp
  40c234:	mov    eax,0xae9cee54
  40c239:	dec    esp
  40c23a:	lock xor BYTE PTR [esi+0x2f],0x7b
  40c23f:	outs   dx,BYTE PTR ds:[esi]
  40c240:	add    DWORD PTR [edx],0x59
  40c243:	imul   ebp,ecx,0x558b2d82
  40c249:	in     eax,dx
  40c24a:	push   es
  40c24b:	out    0x5f,al
  40c24d:	je     0x40c276
  40c24f:	stc    
  40c250:	push   es
  40c251:	mov    ds:0xf1388c17,al
  40c256:	dec    ebp
  40c257:	in     al,0xb8
  40c259:	and    DWORD PTR [edx],ebx
  40c25b:	jle    0x40c24f
  40c25d:	int    0xf0
  40c25f:	jb     0x40c24f
  40c261:	xchg   ecx,eax
  40c262:	push   0x6d
  40c264:	pusha  
  40c265:	stos   DWORD PTR es:[edi],eax
  40c266:	cmp    eax,0x893c1c74
  40c26b:	mov    eax,ds:0x2d699476
  40c270:	xor    ch,BYTE PTR [esi+eax*1-0x3e5cb8a4]
  40c277:	outs   dx,DWORD PTR ds:[esi]
  40c278:	push   0x63
  40c27a:	out    dx,eax
  40c27b:	adc    bl,BYTE PTR [edi]
  40c27d:	xor    eax,DWORD PTR [eax+edx*4-0x43]
  40c281:	aaa    
  40c282:	inc    ebp
  40c283:	arpl   WORD PTR fs:[ebp-0x18],bx
  40c287:	pop    ecx
  40c288:	mov    eax,0x49348cae
  40c28d:	idiv   BYTE PTR [edi-0x139a6d8a]
  40c293:	cdq    
  40c294:	aam    0x69
  40c296:	cmp    DWORD PTR [esi+0x6a93979c],edi
  40c29c:	in     eax,dx
  40c29d:	fs sti 
  40c29f:	inc    esp
  40c2a0:	popf   
  40c2a1:	dec    ecx
  40c2a2:	rcr    dh,0x9
  40c2a5:	dec    esp
  40c2a6:	jne    0x40c2e8
  40c2a8:	and    BYTE PTR [edi],0x55
  40c2ab:	not    BYTE PTR [ebx+0x3b321c1d]
  40c2b1:	jmp    0x40c239
  40c2b3:	mov    dh,0x7c
  40c2b5:	sar    BYTE PTR [ecx*8-0x64d5c48d],0xf0
  40c2bd:	push   ecx
  40c2be:	repz or ecx,DWORD PTR [ebx-0x539f3bc4]
  40c2c5:	pop    esi
  40c2c6:	fsubp  st(7),st
  40c2c8:	fisttp WORD PTR [edi-0x6a]
  40c2cb:	pop    ss
  40c2cc:	mov    esi,DWORD PTR [ecx-0x3c4e0f03]
  40c2d2:	adc    bl,BYTE PTR ds:0x74571de
  40c2d8:	jns    0x40c26e
  40c2da:	push   ecx
  40c2db:	mov    edi,0x6c8a37a0
  40c2e0:	data16 jns 0x40c287
  40c2e3:	imul   esi,DWORD PTR [eax-0x33524205],0x35a39e49
  40c2ed:	adc    eax,eax
  40c2ef:	or     esp,ecx
  40c2f1:	jg     0x40c2a5
  40c2f3:	sub    bh,ch
  40c2f5:	mov    cl,0x39
  40c2f7:	sbb    ch,BYTE PTR [esi]
  40c2f9:	js     0x40c2c7
  40c2fb:	mov    ebx,0x25d18142
  40c300:	mov    al,0xc3
  40c302:	pop    es
  40c303:	xchg   esp,eax
  40c304:	in     al,0x29
  40c306:	dec    ebx
  40c307:	les    edi,FWORD PTR [eax+0x60db8c99]
  40c30d:	rcl    DWORD PTR [esi],0xfb
  40c310:	adc    esi,edi
  40c312:	stos   DWORD PTR es:[edi],eax
  40c313:	or     eax,0xd3150f79
  40c318:	and    al,0x38
  40c31a:	adc    BYTE PTR [ecx],0xa4
  40c31d:	int3   
  40c31e:	fcmovbe st,st(4)
  40c320:	(bad)  [ecx]
  40c322:	(bad)  
  40c323:	pop    ebp
  40c324:	es mov ebp,0xc013c2d9
  40c32b:	mov    ebp,0x2b0bc2cf
  40c330:	stc    
  40c331:	leave  
  40c332:	jecxz  0x40c387
  40c334:	dec    ebp
  40c335:	sub    dh,BYTE PTR [edx]
  40c337:	inc    edi
  40c338:	in     al,0x49
  40c33a:	sahf   
  40c33b:	in     al,dx
  40c33c:	jne    0x40c325
  40c33e:	dec    eax
  40c33f:	in     al,dx
  40c340:	sbb    eax,0xd820f721
  40c345:	inc    edi
  40c346:	or     eax,ebx
  40c348:	add    esp,DWORD PTR [eax+0x74]
  40c34b:	lods   al,BYTE PTR ds:[esi]
  40c34c:	push   esp
  40c34d:	mov    edx,0x597c1faf
  40c352:	jae    0x40c3a8
  40c354:	test   DWORD PTR [ecx],eax
  40c356:	xchg   edi,eax
  40c357:	aas    
  40c358:	fdiv   DWORD PTR [esi+0x32]
  40c35b:	test   eax,0xfcbc75f2
  40c360:	into   
  40c361:	sub    eax,0x2801b524
  40c366:	pop    ecx
  40c367:	mov    edi,0xafbf77e5
  40c36c:	adc    al,BYTE PTR [edx]
  40c36e:	dec    ecx
  40c36f:	fistp  DWORD PTR ds:0xdf95ba4a
  40c375:	xchg   BYTE PTR [edi+edi*8+0x30],dl
  40c379:	mov    ds:0x431d9db,eax
  40c37e:	inc    eax
  40c37f:	test   BYTE PTR [edi-0x4546f43],cl
  40c385:	aad    0x51
  40c387:	push   esi
  40c388:	test   ah,bl
  40c38a:	sub    DWORD PTR [esi+0x24746ed0],ecx
  40c390:	or     cl,BYTE PTR [edx+0xb]
  40c393:	mov    dh,0x23
  40c395:	ficom  DWORD PTR [ecx+0x42]
  40c398:	clc    
  40c399:	pop    ds
  40c39a:	inc    esi
  40c39b:	xchg   edx,eax
  40c39c:	mov    BYTE PTR [eax+0x6],bh
  40c39f:	jmp    0xccc6cee
  40c3a4:	(bad)  
  40c3a5:	adc    al,dl
  40c3a7:	int3   
  40c3a8:	jo     0x40c401
  40c3aa:	mov    dh,0x8f
  40c3ac:	mov    cl,dl
  40c3ae:	jo     0x40c401
  40c3b0:	in     eax,0x9e
  40c3b2:	cmp    eax,0x58c6771e
  40c3b7:	cmc    
  40c3b8:	shl    BYTE PTR [eax-0x5],1
  40c3bb:	pop    ecx
  40c3bc:	sbb    eax,0xda05e725
  40c3c1:	inc    eax
  40c3c2:	loope  0x40c42a
  40c3c4:	ss adc al,0x8e
  40c3c7:	push   ebx
  40c3c8:	mov    ah,0xc7
  40c3ca:	jbe    0x40c36d
  40c3cc:	jge    0x40c3bb
  40c3ce:	mov    ch,0x9a
  40c3d0:	pop    esp
  40c3d1:	fcomp  QWORD PTR [esi+0x2d]
  40c3d4:	sahf   
  40c3d5:	mov    ah,0x86
  40c3d7:	pop    ecx
  40c3d8:	sbb    bh,BYTE PTR [ecx-0x7e342da5]
  40c3de:	mov    al,ds:0xf344855e
  40c3e3:	jmp    0x6ae9e796
  40c3e8:	(bad)  
  40c3e9:	mov    edi,0xc5f4db59
  40c3ee:	mov    ch,0x85
  40c3f0:	outs   dx,DWORD PTR ds:[esi]
  40c3f1:	cmp    eax,0xbf4447a5
  40c3f6:	jae    0x40c3c1
  40c3f8:	outs   dx,DWORD PTR ds:[esi]
  40c3f9:	gs shl esp,cl
  40c3fc:	pop    edi
  40c3fd:	xchg   edi,eax
  40c3fe:	or     ch,al
  40c400:	cmp    al,0x53
  40c402:	(bad)  
  40c403:	mov    edx,0xb206794
  40c408:	mov    ah,BYTE PTR [eax+edx*1+0x7940f9bf]
  40c40f:	je     0x40c413
  40c411:	inc    ebx
  40c412:	dec    edx
  40c413:	mov    dl,0x73
  40c415:	ret    
  40c416:	pop    ebx
  40c417:	shl    BYTE PTR [esi+0x14fa0c89],0xae
  40c41e:	and    eax,0x2d624a0d
  40c423:	xchg   ecx,eax
  40c424:	test   BYTE PTR [esi-0xdf28931],0xf4
  40c42b:	and    ah,BYTE PTR cs:[esi]
  40c42e:	pop    ss
  40c42f:	sti    
  40c430:	xchg   ecx,eax
  40c431:	pop    esp
  40c432:	adc    esp,DWORD PTR ds:0x6b8dcaca
  40c438:	das    
  40c439:	xchg   esi,eax
  40c43a:	and    bl,dl
  40c43c:	shr    DWORD PTR [eax-0x29462c44],0xf7
  40c443:	jl     0x40c47d
  40c445:	stos   DWORD PTR es:[edi],eax
  40c446:	outs   dx,BYTE PTR ds:[esi]
  40c447:	lods   eax,DWORD PTR ds:[esi]
  40c448:	adc    ebx,DWORD PTR [ebp+0x130cb227]
  40c44e:	or     eax,0xafbb8aac
  40c453:	sbb    eax,0xfc67bcae
  40c458:	shl    BYTE PTR [edx+0x58],1
  40c45b:	out    0x79,al
  40c45d:	cmc    
  40c45e:	out    0xae,al
  40c460:	les    esp,FWORD PTR [eax]
  40c462:	jl     0x40c42d
  40c464:	add    al,al
  40c466:	loope  0x40c3ff
  40c468:	mov    al,0xdb
  40c46a:	xchg   esp,eax
  40c46b:	xor    al,0x94
  40c46d:	fcomp  QWORD PTR [edx-0xa6392fd]
  40c473:	push   esp
  40c474:	cmc    
  40c475:	les    esp,FWORD PTR [edx-0x11]
  40c478:	xchg   esp,eax
  40c479:	jg     0x40c490
  40c47b:	mov    ebx,fs
  40c47d:	mov    esi,0xa9eb31c2
  40c482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c483:	outs   dx,BYTE PTR ds:[esi]
  40c484:	ins    BYTE PTR es:[edi],dx
  40c485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c486:	out    dx,al
  40c487:	cmp    BYTE PTR [eax+0x22],al
  40c48a:	int    0x81
  40c48c:	mov    ecx,0xd7e431a0
  40c491:	retf   
  40c492:	xchg   al,ch
  40c494:	mov    eax,ds:0x1bfd231d
  40c499:	mov    dl,0x9
  40c49b:	mov    al,0x89
  40c49d:	rcr    BYTE PTR [ecx],0x1c
  40c4a0:	mov    ss,WORD PTR [edi+0x62]
  40c4a3:	ss push edx
  40c4a5:	pusha  
  40c4a6:	xchg   DWORD PTR [edx+eax*4-0x7f],eax
  40c4aa:	cmc    
  40c4ab:	adc    eax,esp
  40c4ad:	and    bh,0xec
  40c4b0:	or     al,0x2d
  40c4b2:	mov    ds:0x9272df3c,eax
  40c4b7:	(bad)  
  40c4b8:	adc    BYTE PTR [ebp+0x7f],bh
  40c4bb:	sbb    dh,dl
  40c4bd:	leave  
  40c4be:	mov    al,ds:0x4946376f
  40c4c3:	xchg   BYTE PTR [edi],bh
  40c4c5:	pop    esi
  40c4c6:	add    al,0x2b
  40c4c8:	inc    esp
  40c4ca:	fdivp  st(1),st
  40c4cc:	mov    esi,0x4a488b7c
  40c4d1:	mov    ds:0x4684ce51,al
  40c4d6:	pusha  
  40c4d7:	cdq    
  40c4d8:	dec    esi
  40c4d9:	imul   esi,ebx,0xffffffff
  40c4dc:	(bad)  
  40c4dd:	cmp    ebx,edi
  40c4df:	dec    ebx
  40c4e0:	jmp    0x40c499
  40c4e2:	cli    
  40c4e3:	ret    0x9eab
  40c4e6:	ja     0x40c4a2
  40c4e8:	cld    
  40c4e9:	xchg   esi,eax
  40c4ea:	add    bh,BYTE PTR [ecx]
  40c4ec:	in     eax,0xb9
  40c4ee:	mov    edx,0x98204819
  40c4f3:	cmp    esi,DWORD PTR [edx+eax*8-0x7e]
  40c4f7:	imul   DWORD PTR [ecx]
  40c4f9:	push   esi
  40c4fa:	outs   dx,DWORD PTR ds:[esi]
  40c4fb:	data16 jp 0x40c4c8
  40c4fe:	iret   
  40c4ff:	pusha  
  40c500:	out    dx,eax
  40c501:	push   esp
  40c502:	xchg   esi,eax
  40c503:	fdivp  st(5),st
  40c505:	pop    ss
  40c506:	sub    eax,0x4fd109a0
  40c50b:	outs   dx,DWORD PTR ds:[esi]
  40c50c:	xor    ebp,DWORD PTR [esi+0x49]
  40c50f:	xchg   ebp,eax
  40c510:	in     al,dx
  40c511:	mov    eax,ds:0x29003c27
  40c516:	lds    eax,FWORD PTR [ebx]
  40c518:	outs   dx,BYTE PTR ds:[esi]
  40c519:	leave  
  40c51a:	and    BYTE PTR [ebp-0x23],dl
  40c51d:	ffree  st(1)
  40c51f:	sub    ecx,DWORD PTR [ebx+edx*1]
  40c522:	cwde   
  40c523:	dec    esi
  40c524:	sbb    al,ah
  40c526:	int    0xce
  40c528:	inc    DWORD PTR [eax+0x435e45e0]
  40c52e:	jg     0x40c4e2
  40c530:	jbe    0x40c4c2
  40c532:	or     BYTE PTR [ecx],dl
  40c534:	fcomi  st,st(6)
  40c536:	fs mov ebp,0x526bc0a9
  40c53c:	sbb    BYTE PTR [esi+edx*2],dl
  40c53f:	push   cs
  40c540:	xchg   ecx,eax
  40c541:	mov    ah,0xf9
  40c543:	sar    DWORD PTR [edx-0x4f],cl
  40c546:	jmp    0x4e37:0x66fd6d4d
  40c54d:	xor    al,0x9e
  40c54f:	sbb    ecx,DWORD PTR [esi-0x26]
  40c552:	inc    ebx
  40c553:	add    eax,0x850639a3
  40c558:	das    
  40c559:	std    
  40c55a:	leave  
  40c55b:	xor    al,0x5b
  40c55d:	pop    es
  40c55e:	inc    ebx
  40c55f:	jae    0x40c5b1
  40c561:	jg     0x40c561
  40c563:	pusha  
  40c564:	mov    ah,0x54
  40c566:	jae    0x40c5c1
  40c568:	and    DWORD PTR [edi-0x24],ecx
  40c56b:	jo     0x40c5af
  40c56d:	push   ecx
  40c56e:	pusha  
  40c56f:	into   
  40c570:	sbb    eax,0x4c34d666
  40c575:	loop   0x40c515
  40c577:	psrlq  mm4,QWORD PTR [esi-0x16]
  40c57b:	add    DWORD PTR [eax],0x17
  40c57e:	shr    BYTE PTR [esi+ebp*1-0x74],cl
  40c582:	inc    edx
  40c583:	rcr    BYTE PTR [edi*4-0x2e42fffc],1
  40c58a:	bnd jne 0x40c5f0
  40c58d:	mov    ebx,DWORD PTR [ecx-0x487e554]
  40c593:	jecxz  0x40c515
  40c595:	sbb    ecx,eax
  40c597:	sbb    eax,0x4dc67042
  40c59c:	rol    DWORD PTR [eax+eax*1-0x68d5aa7d],cl
  40c5a3:	sbb    cl,dl
  40c5a5:	jmp    0x40c5e2
  40c5a7:	xor    BYTE PTR [edi],cl
  40c5a9:	shr    BYTE PTR [eax-0x1b],1
  40c5ac:	(bad)  
  40c5ad:	retf   0x92b1
  40c5b0:	inc    edx
  40c5b1:	sub    ecx,ecx
  40c5b3:	add    al,BYTE PTR [esp+esi*2+0x79ff0967]
  40c5ba:	outs   dx,DWORD PTR ds:[esi]
  40c5bb:	call   0xf35a:0x6ea6359c
  40c5c2:	fs popa 
  40c5c4:	rcl    DWORD PTR [ebx+0x534586fd],0xb4
  40c5cb:	xlat   BYTE PTR ds:[ebx]
  40c5cc:	and    al,0x1
  40c5ce:	fcom   st(4)
  40c5d0:	cld    
  40c5d1:	mov    ah,0xf9
  40c5d3:	pop    ebx
  40c5d4:	push   cs
  40c5d5:	loopne 0x40c5a7
  40c5d7:	out    0x50,eax
  40c5d9:	mov    ah,0x5
  40c5db:	inc    edi
  40c5dc:	(bad)  
  40c5dd:	imul   bh
  40c5df:	aam    0xaf
  40c5e1:	xchg   edx,eax
  40c5e2:	sti    
  40c5e3:	and    ebp,DWORD PTR [edi]
  40c5e5:	bound  esi,QWORD PTR [ebx+esi*1]
  40c5e8:	in     eax,dx
  40c5e9:	xchg   ebp,eax
  40c5ea:	push   es
  40c5eb:	dec    ebx
  40c5ec:	popf   
  40c5ed:	retf   
  40c5ee:	repz mov ecx,0x8941372d
  40c5f4:	in     eax,0x88
  40c5f6:	mov    edi,0x3fbf9529
  40c5fb:	or     eax,0xfab68a51
  40c600:	adc    eax,0x80221ac
  40c605:	jns    0x40c648
  40c607:	ret    
  40c608:	add    eax,0x55623add
  40c60d:	outs   dx,BYTE PTR ds:[esi]
  40c60e:	jae    0x40c641
  40c610:	pop    edx
  40c611:	fild   QWORD PTR [edx+0x6a]
  40c614:	jns    0x40c5d3
  40c616:	in     al,dx
  40c617:	into   
  40c618:	cdq    
  40c619:	sbb    al,0xc8
  40c61b:	and    bl,BYTE PTR ds:0x558aa922
  40c621:	sub    ah,BYTE PTR gs:[ebx-0x20]
  40c625:	mov    edi,DWORD PTR [edx-0xefd1744]
  40c62b:	test   BYTE PTR [edx+eax*4],bh
  40c62e:	cmp    DWORD PTR [edx+ecx*1+0x49bf8224],ebx
  40c635:	shl    DWORD PTR [ebx-0x48],1
  40c638:	adc    eax,0xb14ab5d1
  40c63d:	push   ebp
  40c63f:	push   es
  40c640:	xchg   ecx,eax
  40c641:	jmp    0xa0d671e2
  40c646:	nop
  40c647:	pop    ebp
  40c648:	pop    edx
  40c649:	mul    DWORD PTR [edx+0x79674b29]
  40c64f:	div    BYTE PTR [ebx-0xe]
  40c652:	or     al,0x98
  40c654:	add    ebp,DWORD PTR [edi]
  40c656:	mov    WORD PTR [eax-0x3939e811],ds
  40c65c:	loope  0x40c662
  40c65e:	xchg   edi,eax
  40c65f:	ret    
  40c660:	mov    cl,0x64
  40c662:	cs jo  0x40c647
  40c665:	mov    eax,0x3d86803e
  40c66a:	int    0x1b
  40c66c:	xlat   BYTE PTR ds:[ebx]
  40c66d:	in     al,0x6b
  40c66f:	pop    ebx
  40c670:	dec    ecx
  40c671:	jbe    0x40c6de
  40c673:	mov    bl,0x36
  40c675:	push   ebx
  40c676:	mov    esp,0x538d816
  40c67b:	xor    DWORD PTR [esi+0x6622ec2b],ebx
  40c681:	xchg   esp,eax
  40c682:	test   DWORD PTR ds:0xa14036fb,0x581a23b2
  40c68c:	mov    ebp,0xcb3a1031
  40c691:	test   al,0xdf
  40c693:	stos   DWORD PTR es:[edi],eax
  40c694:	int3   
  40c695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c696:	fnsave [edi+eiz*2]
  40c699:	mov    dl,0x32
  40c69b:	jmp    0xe2e82e4a
  40c6a0:	mov    esp,0x470982c1
  40c6a5:	rcr    esp,cl
  40c6a7:	test   eax,0xf413e7df
  40c6ac:	cmp    DWORD PTR [edi],eax
  40c6ae:	pop    eax
  40c6af:	mov    edx,edx
  40c6b1:	or     BYTE PTR [esi+0x5f],cl
  40c6b4:	mov    gs:0xe17b2b8c,eax
  40c6ba:	fcomp  DWORD PTR [edx+ecx*1]
  40c6bd:	rcl    BYTE PTR [ecx],1
  40c6bf:	xchg   BYTE PTR [ebx-0x5e],al
  40c6c2:	jnp    0x40c711
  40c6c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6c5:	and    esi,0xc585a82c
  40c6cb:	pop    edx
  40c6cc:	test   DWORD PTR [eax],eax
  40c6ce:	addr16 loopne 0x40c69b
  40c6d1:	shr    DWORD PTR [esi],cl
  40c6d3:	fisubr WORD PTR [ecx]
  40c6d5:	sbb    ebx,DWORD PTR [edi+0x3d54ed9d]
  40c6db:	and    DWORD PTR [edi],esi
  40c6dd:	in     eax,0xa
  40c6df:	mov    bh,0x7a
  40c6e1:	inc    edi
  40c6e2:	adc    al,0x67
  40c6e4:	sbb    DWORD PTR [esi+0x2aaa6cd1],edx
  40c6ea:	call   0xe9aebee4
  40c6ef:	xlat   BYTE PTR ds:[ebx]
  40c6f0:	sbb    ebx,DWORD PTR [esi+0x56]
  40c6f3:	mov    ah,0xb4
  40c6f5:	dec    ebx
  40c6f6:	clc    
  40c6f7:	in     al,0x46
  40c6f9:	out    0xa,eax
  40c6fb:	inc    ebp
  40c6fc:	pop    eax
  40c6fd:	xor    DWORD PTR [eax+0xe55a90c],0x83508c1b
  40c707:	fucomi st,st(4)
  40c709:	cmp    al,0x33
  40c70b:	fsub   st(0),st
  40c70d:	pop    es
  40c70e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c70f:	inc    edi
  40c710:	and    esp,DWORD PTR [edi-0x5f]
  40c713:	mov    bl,0xf3
  40c715:	jmp    0x40c745
  40c717:	pop    edx
  40c718:	call   0xedc1:0x5d12fefb
  40c71f:	sti    
  40c720:	lods   al,BYTE PTR ds:[esi]
  40c721:	mov    ebp,DWORD PTR [eax+ecx*1-0x1d]
  40c725:	mov    ch,bl
  40c727:	jno    0x40c79f
  40c729:	xchg   ecx,eax
  40c72a:	lods   al,BYTE PTR ds:[esi]
  40c72b:	lods   eax,DWORD PTR ds:[esi]
  40c72c:	enter  0xad6,0x1e
  40c730:	out    dx,al
  40c731:	push   ebp
  40c732:	adc    al,0x3d
  40c734:	retf   0x9214
  40c737:	add    eax,0x4b74db60
  40c73c:	sub    BYTE PTR [ebx+eiz*8],al
  40c73f:	ss push esi
  40c741:	sti    
  40c742:	inc    esp
  40c743:	sbb    al,0x32
  40c745:	lea    si,[ecx]
  40c748:	mov    DWORD PTR [edi-0x31],esp
  40c74b:	push   0xc58f7ca2
  40c750:	test   eax,0xf589501c
  40c755:	cli    
  40c756:	push   ds
  40c757:	mov    BYTE PTR [edi],bl
  40c759:	(bad)  
  40c75a:	clc    
  40c75b:	ror    BYTE PTR [edx],0x9d
  40c75e:	lods   al,BYTE PTR ds:[esi]
  40c75f:	dec    ebp
  40c760:	adc    esp,ebp
  40c762:	rcr    DWORD PTR [esi-0x1a],cl
  40c765:	or     ch,BYTE PTR [edi+0x2fe9b271]
  40c76b:	dec    eax
  40c76c:	cmp    BYTE PTR [ebp-0x71],ch
  40c76f:	push   eax
  40c770:	rcl    BYTE PTR [ecx+ebp*8+0x3af5febb],cl
  40c777:	les    ecx,FWORD PTR [eax]
  40c779:	push   ds
  40c77a:	loope  0x40c769
  40c77c:	xchg   esp,eax
  40c77d:	icebp  
  40c77e:	xchg   edi,eax
  40c77f:	cli    
  40c780:	(bad)  
  40c781:	jnp    0x40c782
  40c783:	pop    edx
  40c784:	aad    0x13
  40c786:	mov    ds:0xc0f5e511,al
  40c78b:	repz mov dh,0x41
  40c78e:	hlt    
  40c78f:	jae    0x40c7e2
  40c791:	push   ebx
  40c792:	retf   0x342b
  40c795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c796:	inc    ebx
  40c797:	mov    eax,0x939af3ab
  40c79c:	ja     0x40c7b0
  40c79e:	or     bh,cl
  40c7a0:	retf   0x6a80
  40c7a3:	pop    edi
  40c7a4:	int3   
  40c7a5:	jne    0x40c7db
  40c7a7:	inc    DWORD PTR [edx]
  40c7a9:	push   ds
  40c7aa:	mov    es,WORD PTR [ebx-0xa]
  40c7ad:	(bad)  
  40c7ae:	in     eax,0x41
  40c7b0:	sti    
  40c7b1:	xlat   BYTE PTR ds:[ebx]
  40c7b2:	div    DWORD PTR [ecx]
  40c7b4:	or     eax,0x7a7d2290
  40c7b9:	xchg   ecx,eax
  40c7ba:	(bad)  
  40c7bb:	push   ebx
  40c7bc:	fisttp DWORD PTR [esi]
  40c7be:	pop    eax
  40c7bf:	pop    esi
  40c7c0:	add    edi,DWORD PTR ds:0x228f2ffb
  40c7c6:	jae    0x40c7b9
  40c7c8:	xchg   esi,eax
  40c7c9:	and    BYTE PTR [ecx],dl
  40c7cb:	sub    BYTE PTR [edi],bl
  40c7cd:	pop    ds
  40c7ce:	jne    0x40c804
  40c7d0:	repz or BYTE PTR [esi+0xe781a67],al
  40c7d7:	mov    ebx,es
  40c7d9:	lock pop esi
  40c7db:	mov    esp,0x34cbd8eb
  40c7e0:	or     eax,0x8acd3fef
  40c7e5:	mov    al,0x5d
  40c7e7:	sub    ch,dh
  40c7e9:	xchg   ebx,eax
  40c7ea:	add    esp,DWORD PTR cs:[edx-0x64]
  40c7ee:	and    eax,0x45764ae6
  40c7f3:	xor    ebx,esp
  40c7f5:	push   ebp
  40c7f6:	cld    
  40c7f7:	(bad)  
  40c7f8:	pop    ebp
  40c7f9:	mov    esi,DWORD PTR [eax+0x1b]
  40c7fc:	jne    0x40c862
  40c7fe:	lods   eax,DWORD PTR ds:[esi]
  40c7ff:	pop    ecx
  40c800:	rcl    BYTE PTR [ebp*1+0x3047e3de],0xd7
  40c808:	cmp    ecx,0x22
  40c80b:	and    BYTE PTR ds:0x51b03689,0xeb
  40c812:	in     eax,dx
  40c813:	jecxz  0x40c7eb
  40c815:	mov    edi,DWORD PTR [edi+0x1e]
  40c818:	popa   
  40c819:	nop
  40c81a:	pop    es
  40c81b:	adc    ecx,DWORD PTR [bp+di-0x18d]
  40c820:	or     bh,BYTE PTR [edx]
  40c822:	xchg   BYTE PTR [esp+esi*8],al
  40c825:	ins    DWORD PTR es:[edi],dx
  40c826:	lock xchg ebp,eax
  40c828:	in     al,0xfe
  40c82a:	mov    BYTE PTR [ebx],0xb5
  40c82d:	jg     0x40c865
  40c82f:	lock push eax
  40c831:	into   
  40c832:	les    ecx,FWORD PTR [ebp-0x61]
  40c835:	nop
  40c836:	not    DWORD PTR [eax-0x60a53742]
  40c83c:	in     eax,dx
  40c83d:	jmp    0x40c848
  40c83f:	das    
  40c840:	into   
  40c841:	pop    ss
  40c842:	or     eax,0x618ec55e
  40c847:	dec    esi
  40c848:	leave  
  40c849:	dec    ebp
  40c84a:	pop    esi
  40c84b:	push   esp
  40c84c:	hlt    
  40c84d:	inc    edi
  40c84e:	jmp    0x629bdc3d
  40c853:	fs in  al,0x8f
  40c856:	mov    WORD PTR [edx+ebp*2],?
  40c859:	jmp    0x40c8d0
  40c85b:	inc    esp
  40c85c:	mov    cl,0x7f
  40c85e:	mov    eax,0x3107d854
  40c863:	push   ds
  40c864:	cmp    al,0x59
  40c866:	adc    eax,0x66247b2
  40c86b:	and    BYTE PTR [edx-0x5a],ah
  40c86e:	fmul   DWORD PTR [eax+0x47]
  40c871:	and    DWORD PTR [esi+esi*8-0x2e],esi
  40c875:	aaa    
  40c876:	xchg   ebp,eax
  40c877:	sbb    DWORD PTR [eax+0x3495a110],edx
  40c87d:	sub    eax,0xa7aeb138
  40c882:	dec    esi
  40c883:	sub    eax,0xe8c6ecd7
  40c888:	sub    al,0x47
  40c88a:	rol    DWORD PTR [eax+edi*2-0x5f],0x8
  40c88f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c890:	cmc    
  40c891:	repnz test BYTE PTR [ebx-0x7a926bcb],al
  40c898:	inc    ecx
  40c899:	idiv   DWORD PTR [ebp+eiz*4-0x28]
  40c89d:	add    al,0x50
  40c89f:	mov    DWORD PTR [edi+0x22],ecx
  40c8a2:	aaa    
  40c8a3:	mov    al,0x2a
  40c8a5:	mov    DWORD PTR [esp+edi*1+0x3c],ebx
  40c8a9:	add    eax,0x3176a943
  40c8ae:	cs push esp
  40c8b0:	es push ecx
  40c8b2:	mov    cl,0xf5
  40c8b4:	imul   ecx,edx,0xdef47b40
  40c8ba:	idiv   ecx
  40c8bc:	in     al,dx
  40c8bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8be:	dec    esi
  40c8bf:	test   DWORD PTR [edx+0x40f5c514],ebx
  40c8c5:	test   eax,0x9f186d24
  40c8ca:	(bad)  
  40c8cc:	popf   
  40c8cd:	inc    ebx
  40c8ce:	pop    ecx
  40c8cf:	dec    ebp
  40c8d0:	stc    
  40c8d1:	rol    DWORD PTR [eax-0xc],1
  40c8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8d5:	adc    dh,BYTE PTR [ebx-0x452c5c56]
  40c8db:	adc    ch,BYTE PTR [edx-0x39]
  40c8de:	ins    DWORD PTR es:[edi],dx
  40c8df:	fdivr  DWORD PTR [ebp-0x1d28a6df]
  40c8e5:	xlat   BYTE PTR ds:[ebx]
  40c8e6:	ror    BYTE PTR [ecx+edx*2-0x1fba7111],cl
  40c8ed:	shl    DWORD PTR [ebp-0x117dbfe7],0x87
  40c8f4:	scas   al,BYTE PTR es:[edi]
  40c8f5:	xor    DWORD PTR [edi+0xf],esi
  40c8f8:	(bad)  
  40c8fa:	jbe    0x40c92c
  40c8fc:	sbb    bl,BYTE PTR [ecx+0x1]
  40c8ff:	mov    ecx,0x7004ef48
  40c904:	fsubr  st(1),st
  40c906:	sahf   
  40c907:	out    0xdf,eax
  40c909:	enter  0xe6ce,0xf
  40c90d:	dec    edx
  40c90e:	xcrypt-cfb (bad)
  40c90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c910:	in     al,0x6b
  40c912:	sbb    eax,0x691aed4
  40c917:	sub    cl,BYTE PTR [ebx-0x67]
  40c91a:	(bad)  [esi+0x3d6632a4]
  40c920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c921:	xchg   BYTE PTR [edi-0x76753605],ch
  40c927:	loop   0x40c970
  40c929:	es dec ebx
  40c92b:	xchg   edi,eax
  40c92c:	icebp  
  40c92d:	mov    eax,ds:0xfeb8da76
  40c932:	dec    ebx
  40c933:	cdq    
  40c934:	dec    ebx
  40c935:	push   ecx
  40c936:	leave  
  40c937:	xchg   esi,eax
  40c938:	daa    
  40c939:	pop    es
  40c93a:	xor    eax,0xdfd2bd52
  40c940:	push   ebx
  40c941:	lock push esi
  40c943:	cmp    BYTE PTR [ebp+0x1f7c3ca3],bl
  40c949:	xor    edx,ecx
  40c94b:	stos   BYTE PTR es:[edi],al
  40c94c:	rcr    BYTE PTR [ebx],cl
  40c94e:	jbe    0x40c95c
  40c950:	out    0xcb,eax
  40c952:	lods   eax,DWORD PTR ds:[esi]
  40c953:	out    dx,eax
  40c954:	or     ah,ch
  40c956:	pop    ds
  40c957:	pop    esi
  40c958:	lods   al,BYTE PTR ds:[esi]
  40c959:	icebp  
  40c95a:	ins    BYTE PTR es:[edi],dx
  40c95b:	and    al,0x81
  40c95d:	or     ch,BYTE PTR [eax-0x39]
  40c960:	inc    ebp
  40c961:	clc    
  40c962:	mov    cl,0x85
  40c964:	pushf  
  40c965:	clc    
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax+0xb8e35d]
  40d00c:	cmc    
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	mov    edx,0x80574a88
  40d01a:	and    eax,0x83a9900b
  40d01f:	addr16 cwde 
  40d021:	stos   DWORD PTR es:[edi],eax
  40d022:	add    eax,0xda7207f0
  40d027:	(bad)  
  40d028:	(bad)  
  40d029:	clc    
  40d02a:	push   0xeefa206f
  40d02f:	pop    es
  40d030:	scas   eax,DWORD PTR es:[edi]
  40d031:	repz cwde 
  40d033:	xchg   ebp,eax
  40d034:	fsub   st(0),st
  40d036:	push   cs
  40d037:	sub    DWORD PTR ds:0x6f11f1d3,ebp
  40d03d:	mov    ds:0x43a9a244,al
  40d042:	dec    edi
  40d043:	xchg   esi,eax
  40d044:	jnp    0x40d073
  40d046:	sub    DWORD PTR [ecx-0x42],eax
  40d049:	popf   
  40d04a:	and    eax,0x4e4df9c4
  40d04f:	xchg   ebp,eax
  40d050:	sar    al,cl
  40d052:	mov    eax,0x70d40f0a
  40d057:	pop    ebx
  40d058:	or     dl,dl
  40d05a:	lahf   
  40d05b:	jmp    0x40d055
  40d05d:	jo     0x40d06b
  40d05f:	arpl   WORD PTR [eax-0x26],si
  40d062:	(bad)  
  40d063:	hlt    
  40d064:	fwait
  40d065:	and    ah,BYTE PTR ds:0x29e27e7
  40d06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d06c:	dec    ecx
  40d06d:	cmp    al,0xe
  40d06f:	loop   0x40d08c
  40d071:	repz pop ecx
  40d073:	aam    0x3a
  40d075:	adc    esp,DWORD PTR [ecx+0x28cffac7]
  40d07b:	aam    0x10
  40d07d:	inc    eax
  40d07e:	int    0xc9
  40d080:	adc    ebx,DWORD PTR [esi+eax*2-0x1f]
  40d084:	hlt    
  40d085:	cmp    cl,al
  40d087:	std    
  40d088:	retf   
  40d089:	dec    esi
  40d08a:	pop    ebx
  40d08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d08c:	jg     0x40d0ce
  40d08e:	ret    0x7704
  40d091:	add    BYTE PTR [ebx],ch
  40d093:	mov    al,ds:0x25405cf0
  40d098:	add    dh,dh
  40d09a:	dec    esp
  40d09b:	arpl   WORD PTR [eax+0x57],bx
  40d09e:	cmp    al,0xe6
  40d0a0:	sbb    al,0x4b
  40d0a2:	pop    eax
  40d0a3:	popa   
  40d0a4:	or     bl,BYTE PTR [esp+edx*2]
  40d0a7:	push   cs
  40d0a8:	cmc    
  40d0a9:	mov    eax,0xaf2460ff
  40d0ae:	xor    ecx,ebx
  40d0b0:	dec    ebx
  40d0b1:	sbb    bl,ah
  40d0b3:	xor    DWORD PTR [ebx],0x9ddf02ee
  40d0b9:	lods   al,BYTE PTR ds:[esi]
  40d0ba:	xchg   esp,eax
  40d0bb:	push   esp
  40d0bc:	fild   DWORD PTR [edi-0x783d5e9]
  40d0c2:	push   eax
  40d0c3:	lods   al,BYTE PTR ds:[esi]
  40d0c4:	add    eax,0x18b90ed1
  40d0c9:	out    0xcf,eax
  40d0cb:	popf   
  40d0cc:	push   ss
  40d0cd:	lock fisttp WORD PTR [ebx-0x66f65ace]
  40d0d4:	mov    ds:0x657eb83d,al
  40d0d9:	pop    edx
  40d0da:	jg     0x40d07c
  40d0dc:	lods   al,BYTE PTR ds:[esi]
  40d0dd:	sub    eax,0x8a7fbb64
  40d0e2:	push   edx
  40d0e3:	arpl   WORD PTR [esi+0x18],di
  40d0e6:	pusha  
  40d0e7:	lods   al,BYTE PTR ds:[esi]
  40d0e8:	dec    ecx
  40d0e9:	mov    cl,0x81
  40d0eb:	repnz add al,0xb0
  40d0ee:	sub    eax,0xf61563
  40d0f3:	or     DWORD PTR [edi],esi
  40d0f5:	fdiv   st(1),st
  40d0f7:	pop    es
  40d0f8:	fist   WORD PTR ds:0x6c2b24f9
  40d0fe:	into   
  40d0ff:	fidiv  DWORD PTR [esi+0xd]
  40d102:	outs   dx,BYTE PTR ds:[esi]
  40d103:	fcom   DWORD PTR [edi]
  40d105:	dec    ebx
  40d106:	xchg   ecx,eax
  40d107:	xor    eax,ecx
  40d109:	iret   
  40d10a:	mov    edx,0x5011583f
  40d10f:	sti    
  40d110:	jle    0x40d11d
  40d112:	outs   dx,BYTE PTR ds:[esi]
  40d113:	push   es
  40d114:	or     edx,DWORD PTR ds:0xa5acaa43
  40d11a:	jb     0x40d0a1
  40d11c:	out    0x4d,al
  40d11e:	fadd   st,st(0)
  40d120:	mov    ebp,0xe1d9bb8a
  40d125:	stc    
  40d126:	cmp    al,BYTE PTR [edx]
  40d128:	or     esi,DWORD PTR [eax-0x716edbaf]
  40d12e:	mov    ecx,0x47b08545
  40d133:	je     0x40d136
  40d135:	jne    0x40d162
  40d137:	out    0xa8,eax
  40d139:	pop    ds
  40d13a:	imul   DWORD PTR [esp+edi*8+0x75]
  40d13e:	int    0x1
  40d140:	icebp  
  40d141:	inc    ecx
  40d142:	and    dl,BYTE PTR [ebp-0x64a6226f]
  40d148:	push   ss
  40d149:	ds pop edi
  40d14b:	adc    DWORD PTR [esi],ebx
  40d14d:	jmp    0xe392:0x25d3b767
  40d154:	ja     0x40d112
  40d156:	push   ecx
  40d157:	push   edi
  40d158:	daa    
  40d159:	mov    ds:0x70c9298d,eax
  40d15e:	mov    bl,0x4e
  40d160:	mov    ds:0xf84d9d86,al
  40d165:	push   ss
  40d166:	fnsave [eax-0x27]
  40d169:	push   edi
  40d16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d16b:	add    edi,DWORD PTR [eax-0x75]
  40d16e:	inc    ebp
  40d16f:	pop    es
  40d170:	in     eax,dx
  40d171:	adc    DWORD PTR [esi-0x25],esi
  40d174:	(bad)  
  40d175:	stos   DWORD PTR es:[edi],eax
  40d176:	xchg   edx,eax
  40d177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d179:	sbb    al,0x9
  40d17b:	repnz xchg edx,eax
  40d17e:	rcr    DWORD PTR [ebp-0x3e],1
  40d181:	mov    ecx,0x57d94aea
  40d186:	jnp    0x40d118
  40d188:	ror    DWORD PTR [edi],1
  40d18a:	into   
  40d18b:	xor    ah,BYTE PTR [ecx]
  40d18d:	mov    WORD PTR ds:[ebp-0x47],?
  40d191:	stc    
  40d192:	fdivrp st(7),st
  40d194:	mov    WORD PTR [edx+eiz*1-0x2b6eac91],cs
  40d19b:	retf   
  40d19c:	(bad)  
  40d19d:	mov    ah,0x8c
  40d19f:	arpl   WORD PTR [esi],sp
  40d1a1:	jb     0x40d1c0
  40d1a3:	jbe    0x40d1c1
  40d1a5:	pop    esp
  40d1a6:	dec    esp
  40d1a7:	mov    cl,0x25
  40d1a9:	add    BYTE PTR [ebx-0x63ac6cac],cl
  40d1af:	cmp    esp,edx
  40d1b1:	sbb    BYTE PTR [esi+0xb],bh
  40d1b4:	in     al,0x8d
  40d1b6:	xor    eax,0x25ed683b
  40d1bb:	jnp    0x40d222
  40d1bd:	scas   al,BYTE PTR es:[edi]
  40d1be:	push   edx
  40d1bf:	inc    eax
  40d1c0:	arpl   WORD PTR [esi],dx
  40d1c2:	imul   ebp,DWORD PTR [ebp+0x1],0xf0fa3f0f
  40d1c9:	xchg   ebp,eax
  40d1ca:	or     ebx,ebx
  40d1cc:	jge    0x40d1c4
  40d1ce:	test   al,0x67
  40d1d0:	leave  
  40d1d1:	loopne 0x40d230
  40d1d3:	fiadd  DWORD PTR [edx-0x47]
  40d1d6:	out    0x12,al
  40d1d8:	rcr    BYTE PTR [esi+0x1b],1
  40d1db:	stos   BYTE PTR es:[edi],al
  40d1dc:	sub    bh,ch
  40d1de:	aaa    
  40d1df:	mov    ah,0x25
  40d1e1:	je     0x40d1de
  40d1e3:	sub    eax,esp
  40d1e5:	mov    esi,0xe2bb1116
  40d1ea:	aaa    
  40d1eb:	mov    esi,eax
  40d1ed:	mov    eax,0x3f6819e5
  40d1f2:	pop    es
  40d1f3:	push   ds
  40d1f4:	xchg   esi,eax
  40d1f5:	adc    BYTE PTR [ecx+0x3c],dh
  40d1f8:	jl     0x40d1ac
  40d1fa:	xor    al,0x3f
  40d1fc:	retf   0x9374
  40d1ff:	pop    edx
  40d200:	push   ebp
  40d201:	xchg   DWORD PTR [ebx+ebp*2-0x5f],ecx
  40d205:	out    0xb7,eax
  40d207:	push   esi
  40d208:	stc    
  40d209:	push   edi
  40d20a:	bound  ebx,QWORD PTR [edx]
  40d20c:	sbb    eax,0xda677877
  40d211:	adc    edi,ebx
  40d213:	(bad)  
  40d215:	retf   
  40d216:	or     DWORD PTR [esi+0x56e55f8],eax
  40d21c:	imul   esi,DWORD PTR [esi],0x7485f7da
  40d222:	stos   DWORD PTR es:[edi],eax
  40d223:	xor    al,0xac
  40d225:	jge    0x40d1cc
  40d227:	xor    eax,0xb7c9e9c6
  40d22c:	les    eax,FWORD PTR [ecx]
  40d22e:	or     ebx,eax
  40d230:	adc    DWORD PTR [ebp+0x20],eax
  40d233:	cdq    
  40d234:	dec    ebx
  40d235:	jnp    0x40d1c2
  40d237:	lods   al,BYTE PTR ds:[esi]
  40d238:	or     edi,DWORD PTR [ebx-0x3a1a038a]
  40d23e:	dec    edx
  40d23f:	or     DWORD PTR [eax-0x38],0x1d
  40d243:	sti    
  40d244:	cld    
  40d245:	(bad)  
  40d246:	clc    
  40d247:	ror    ah,cl
  40d249:	push   ebx
  40d24a:	hlt    
  40d24b:	mov    bh,0x2b
  40d24d:	bound  edx,QWORD PTR [edx]
  40d24f:	lea    eax,[ecx+0x24a09a06]
  40d255:	and    ebx,DWORD PTR [esi+0x11]
  40d258:	jnp    0x40d265
  40d25a:	and    bl,dl
  40d25c:	imul   eax,DWORD PTR [ebx-0x6e134271],0x1f
  40d263:	out    dx,eax
  40d264:	push   cs
  40d265:	xor    eax,0x1d3f6810
  40d26a:	jmp    0xc49d2fd5
  40d26f:	mov    esi,0xd4ce3cda
  40d274:	xor    al,0x64
  40d276:	icebp  
  40d277:	not    dh
  40d279:	call   0xa461:0x4c38d2d
  40d280:	sub    BYTE PTR [ebx-0x109720a6],ch
  40d286:	fs mov esi,0xadca4f15
  40d28d:	jl     0x40d301
  40d28f:	leave  
  40d290:	lods   eax,DWORD PTR ds:[esi]
  40d291:	cs dec esi
  40d293:	sbb    al,0x48
  40d295:	test   edx,esi
  40d297:	(bad)  
  40d298:	xchg   esi,eax
  40d299:	or     eax,0x77ca4197
  40d29e:	(bad)  
  40d29f:	lods   eax,DWORD PTR ds:[esi]
  40d2a0:	xor    esi,DWORD PTR [edi+0x4fa85ab5]
  40d2a6:	inc    esi
  40d2a7:	inc    edi
  40d2a8:	push   0xdc5338f4
  40d2ad:	in     al,dx
  40d2ae:	scas   eax,DWORD PTR es:[edi]
  40d2af:	jl     0x40d30f
  40d2b1:	test   eax,0xc4d21950
  40d2b6:	in     al,0x43
  40d2b8:	and    DWORD PTR [edx+0x5],eax
  40d2bb:	mov    ds:0xdd8fe8d2,al
  40d2c0:	pop    eax
  40d2c1:	mov    fs,WORD PTR [esi+esi*1]
  40d2c4:	fcomi  st,st(1)
  40d2c6:	popf   
  40d2c7:	shr    BYTE PTR [ebp+0x4dda95f1],1
  40d2cd:	sub    edi,ecx
  40d2cf:	sub    edi,edi
  40d2d1:	add    dl,BYTE PTR [edi]
  40d2d3:	rcl    BYTE PTR [ebx+edi*2],0x1a
  40d2d7:	mov    dh,cl
  40d2d9:	sub    eax,0x324f3370
  40d2de:	imul   esi,esi,0xbd7a89b7
  40d2e4:	jp     0x40d34b
  40d2e6:	inc    ebp
  40d2e7:	lock repz call 0x93:0x7b90c1c7
  40d2f0:	retf   
  40d2f1:	sti    
  40d2f2:	add    ebx,esp
  40d2f4:	mov    ebp,0x14eec061
  40d2f9:	xchg   DWORD PTR [ecx+0x12539e04],ebx
  40d2ff:	dec    eax
  40d300:	jmp    0x40d346
  40d302:	loopne 0x40d343
  40d304:	xor    edx,esi
  40d306:	loopne 0x40d365
  40d308:	cmp    ebx,DWORD PTR [ebx]
  40d30a:	test   al,0x55
  40d30c:	jmp    0x40d304
  40d30e:	fidivr WORD PTR [esi+0x6a]
  40d311:	xor    ebp,ecx
  40d313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d314:	cmp    edi,DWORD PTR [ebx-0x6d]
  40d317:	and    edx,esi
  40d319:	jg     0x40d2be
  40d31b:	sub    DWORD PTR [edx+0xa],0xd
  40d31f:	pop    ss
  40d320:	int    0x9d
  40d322:	xor    eax,0x8c171574
  40d327:	ja     0x40d353
  40d329:	mov    ds:0xf694ea37,al
  40d32e:	jno    0x40d2c3
  40d330:	fbstp  TBYTE PTR [ebx]
  40d332:	cmc    
  40d333:	ins    BYTE PTR es:[edi],dx
  40d334:	jge    0x40d3ab
  40d336:	push   edi
  40d337:	or     eax,ebx
  40d339:	call   ebp
  40d33b:	call   0x7c9e:0xda4eb28a
  40d342:	inc    esp
  40d343:	(bad)  
  40d344:	cdq    
  40d345:	or     DWORD PTR [esi+0x1c],esi
  40d348:	mov    al,0x68
  40d34a:	out    0x18,al
  40d34c:	imul   ecx,DWORD PTR [ebp+0x41],0xd871667
  40d353:	mov    bl,0xf9
  40d355:	inc    ebx
  40d357:	shl    edi,0x9c
  40d35a:	sub    eax,0xe23d6432
  40d35f:	fist   DWORD PTR [edi-0x1c]
  40d362:	xor    DWORD PTR ds:0x4a4021dc,edx
  40d368:	test   DWORD PTR [eax],esi
  40d36a:	xchg   ecx,eax
  40d36b:	xor    dl,BYTE PTR [ebx+0x43]
  40d36e:	pop    esi
  40d36f:	(bad)  
  40d370:	xlat   BYTE PTR ds:[ebx]
  40d371:	mov    dh,0x9a
  40d373:	aaa    
  40d374:	lock jo 0x40d34a
  40d377:	push   esp
  40d378:	and    eax,0x18710078
  40d37d:	jecxz  0x40d3f4
  40d37f:	test   BYTE PTR [edi],cl
  40d381:	hlt    
  40d382:	push   0x191a35fe
  40d387:	dec    edx
  40d388:	shl    edx,cl
  40d38a:	push   edx
  40d38b:	mov    ch,0x29
  40d38d:	test   BYTE PTR [edi-0x48],dh
  40d390:	fcom   DWORD PTR [edx]
  40d392:	push   esi
  40d393:	mov    esp,0x8aaff242
  40d398:	and    al,0xa9
  40d39a:	cli    
  40d39b:	pop    ecx
  40d39c:	call   0xbded8653
  40d3a1:	xchg   DWORD PTR [ebp-0x3300eccd],ebp
  40d3a7:	rcr    DWORD PTR [ecx],cl
  40d3a9:	add    edi,DWORD PTR [edx+0x5e]
  40d3ac:	inc    edi
  40d3ad:	jle    0x40d3e9
  40d3af:	pop    ecx
  40d3b0:	les    esp,FWORD PTR [ecx-0x596907eb]
  40d3b6:	xor    al,0x18
  40d3b8:	xor    edi,DWORD PTR [esi+esi*2+0x4f2a7a4d]
  40d3bf:	mov    esi,0xbc0027f6
  40d3c4:	mov    bl,0x1a
  40d3c6:	ss push 0xbe4ea71
  40d3cc:	sub    eax,0x73df4f0a
  40d3d1:	inc    ebx
  40d3d2:	push   es
  40d3d3:	mov    dl,0x15
  40d3d5:	jae    0x40d3b4
  40d3d7:	enter  0x3c4,0x15
  40d3db:	scas   al,BYTE PTR es:[edi]
  40d3dc:	sub    ecx,DWORD PTR [esp+eax*4-0x28]
  40d3e0:	sub    eax,0x679c09fe
  40d3e5:	add    DWORD PTR [edx],eax
  40d3e7:	mul    DWORD PTR ds:0x3e34df20
  40d3ed:	loopne 0x40d37c
  40d3ef:	dec    ecx
  40d3f0:	push   edx
  40d3f1:	std    
  40d3f2:	or     ebx,edx
  40d3f4:	lods   eax,DWORD PTR ds:[esi]
  40d3f5:	ins    BYTE PTR es:[edi],dx
  40d3f6:	adc    ebx,DWORD PTR [ecx+ebp*1]
  40d3f9:	arpl   WORD PTR [edi],si
  40d3fb:	push   0x5b
  40d3fd:	xchg   ebp,eax
  40d3fe:	xor    DWORD PTR [edi+0x67],edi
  40d401:	pop    eax
  40d402:	jbe    0x40d3fc
  40d404:	aaa    
  40d405:	jl     0x40d38a
  40d407:	ja     0x40d463
  40d409:	nop
  40d40a:	retf   
  40d40b:	mov    bh,BYTE PTR [edx-0x43d5d93b]
  40d411:	xchg   esi,eax
  40d412:	jl     0x40d3f1
  40d414:	ret    
  40d415:	daa    
  40d416:	pusha  
  40d417:	mov    ebx,0xdf309844
  40d41c:	dec    esp
  40d41d:	mov    edi,0x9936c5f0
  40d422:	push   edi
  40d423:	fld    st(2)
  40d425:	pop    edx
  40d426:	ja     0x40d3b7
  40d428:	es fs push ss
  40d42b:	or     al,0x93
  40d42d:	pop    edi
  40d42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d42f:	std    
  40d430:	or     BYTE PTR [edx-0x32],0xfc
  40d434:	imul   eax,DWORD PTR [esi-0x684fe700],0x6a
  40d43b:	imul   eax,ebp,0xed420762
  40d441:	and    esp,DWORD PTR [eax-0x25]
  40d444:	lahf   
  40d445:	jmp    0x31a087da
  40d44a:	sub    edi,edi
  40d44c:	pop    es
  40d44d:	scas   al,BYTE PTR es:[edi]
  40d44e:	test   BYTE PTR [ecx-0x6d8c0307],bh
  40d454:	inc    eax
  40d455:	push   ebx
  40d456:	push   es
  40d457:	or     eax,0x1a58042d
  40d45c:	xor    BYTE PTR [eax-0x16],bh
  40d45f:	das    
  40d460:	mov    dh,0xcc
  40d462:	test   eax,eax
  40d464:	into   
  40d465:	and    BYTE PTR [eax+0x61affcd],ah
  40d46b:	and    bl,0x31
  40d46e:	adc    ebp,DWORD PTR [edi+0x60]
  40d471:	in     eax,0x2c
  40d473:	sti    
  40d474:	inc    esp
  40d475:	repnz fstp TBYTE PTR [ecx-0x40]
  40d479:	pusha  
  40d47a:	mov    ch,0x21
  40d47c:	and    al,0x91
  40d47e:	sbb    DWORD PTR [edx-0x2],0xf72fbafd
  40d485:	jne    0x40d47d
  40d487:	jbe    0x40d497
  40d489:	call   0x85a1:0x98156e04
  40d490:	call   0x547d:0x2644e93f
  40d497:	mov    dl,0x76
  40d499:	xlat   BYTE PTR ds:[ebx]
  40d49a:	xchg   edx,eax
  40d49b:	stos   BYTE PTR es:[edi],al
  40d49c:	in     al,dx
  40d49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d49e:	fistp  QWORD PTR [ebx]
  40d4a0:	push   ebx
  40d4a1:	stos   BYTE PTR es:[edi],al
  40d4a2:	shl    DWORD PTR [ebp-0x71],1
  40d4a5:	popa   
  40d4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4a7:	jl     0x40d4c6
  40d4a9:	fsub   DWORD PTR [eax+0x3f62c2ed]
  40d4af:	fs out 0x1f,al
  40d4b2:	xor    eax,0x451abfaa
  40d4b7:	cmp    DWORD PTR [edx-0x5d0226a3],esp
  40d4bd:	inc    esi
  40d4be:	add    DWORD PTR [ebp+0x34],0xffffffec
  40d4c2:	push   ecx
  40d4c3:	pushf  
  40d4c4:	cmp    bh,BYTE PTR [edx]
  40d4c6:	cmc    
  40d4c7:	fstp   TBYTE PTR [ecx-0x22ac4404]
  40d4cd:	mov    es,ecx
  40d4cf:	sub    esi,DWORD PTR [esi]
  40d4d1:	sub    edx,DWORD PTR [ebx+0x5491ff14]
  40d4d7:	sbb    DWORD PTR [edi+0x56],edx
  40d4da:	mov    ebx,0x89787c3d
  40d4df:	jae    0x40d491
  40d4e1:	jns    0x40d4b2
  40d4e3:	or     al,0xdc
  40d4e5:	in     al,0x42
  40d4e7:	in     eax,0x74
  40d4e9:	mov    bl,0xb7
  40d4eb:	pop    ebp
  40d4ec:	test   DWORD PTR [edi-0x31bc028],esi
  40d4f2:	pushf  
  40d4f3:	stos   DWORD PTR es:[edi],eax
  40d4f4:	in     eax,0xac
  40d4f6:	fadd   DWORD PTR [edi+ebx*8]
  40d4f9:	jmp    0x169ccd6e
  40d4fe:	mov    ebp,0x7cfaa29f
  40d503:	jb     0x40d4ea
  40d505:	mov    eax,ds:0x4dd02098
  40d50a:	out    dx,eax
  40d50b:	or     edi,DWORD PTR [esi-0x5874feda]
  40d511:	mov    WORD PTR [esp+eiz*2+0x3790bfe1],fs
  40d518:	test   ah,dh
  40d51a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d51c:	xchg   ebx,eax
  40d51d:	mov    ah,0xeb
  40d51f:	and    BYTE PTR [ecx],0xf1
  40d522:	jmp    0x2100:0x42b7a62b
  40d529:	jge    0x40d54a
  40d52b:	das    
  40d52c:	rcl    DWORD PTR [eax],cl
  40d52e:	call   0x2078:0x4b07b250
  40d535:	xor    esp,DWORD PTR [esi]
  40d537:	shl    DWORD PTR [edi-0x4d11e6f7],cl
  40d53d:	and    al,BYTE PTR ds:0xd18676b7
  40d543:	push   esi
  40d544:	iret   
  40d545:	(bad)  
  40d546:	xchg   edx,eax
  40d547:	mov    ds:0x587e04b4,al
  40d54c:	sub    eax,0xa7262fab
  40d551:	(bad)  
  40d552:	jl     0x40d527
  40d554:	xchg   esi,eax
  40d555:	xor    bl,al
  40d557:	jecxz  0x40d4f5
  40d559:	stos   BYTE PTR es:[edi],al
  40d55a:	call   FWORD PTR [ecx+0x1b]
  40d55d:	inc    esi
  40d55e:	dec    esp
  40d55f:	mov    ?,esi
  40d561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d562:	sub    ebp,DWORD PTR es:[edi-0xed6dcc7]
  40d569:	mov    dl,0x9f
  40d56b:	ret    
  40d56c:	mov    BYTE PTR [eax-0x5de03e1c],dh
  40d572:	fiadd  WORD PTR [edx-0x668e0f53]
  40d578:	ds mov ebp,0xe997b2b0
  40d57e:	retf   0x9047
  40d581:	retf   0xe433
  40d584:	cli    
  40d585:	(bad)  
  40d586:	enter  0xfae7,0xb1
  40d58a:	test   al,0x76
  40d58c:	and    al,0x9
  40d58e:	pop    esp
  40d58f:	imul   edx,DWORD PTR [edx],0x2050a1da
  40d595:	dec    esi
  40d596:	sbb    ch,BYTE PTR [ebx]
  40d598:	jo     0x40d5c5
  40d59a:	imul   edi,DWORD PTR [edx],0x645403c2
  40d5a0:	inc    ecx
  40d5a1:	scas   al,BYTE PTR es:[edi]
  40d5a2:	sahf   
  40d5a3:	xlat   BYTE PTR ds:[ebx]
  40d5a4:	jecxz  0x40d60c
  40d5a6:	cmp    BYTE PTR [ebx],dl
  40d5a8:	xchg   ecx,eax
  40d5a9:	add    eax,0xa4a483df
  40d5ae:	jb     0x40d581
  40d5b0:	in     al,dx
  40d5b1:	push   ds
  40d5b2:	clc    
  40d5b3:	call   0xab70efc7
  40d5b8:	sub    esi,ebp
  40d5ba:	dec    eax
  40d5bb:	or     dl,BYTE PTR [ebx+0x18]
  40d5be:	sbb    ah,ah
  40d5c0:	(bad)  
  40d5c1:	mov    al,ds:0x4252db0a
  40d5c6:	inc    edi
  40d5c7:	ins    BYTE PTR es:[edi],dx
  40d5c8:	mov    BYTE PTR [ecx],bh
  40d5ca:	sbb    DWORD PTR [esi-0x6dcd471c],0x76
  40d5d1:	fsubr  DWORD PTR [edx+0x1df27d96]
  40d5d7:	(bad)  
  40d5d8:	inc    esi
  40d5d9:	into   
  40d5da:	js     0x40d603
  40d5dc:	fisubr WORD PTR [edx+0x1afecbc8]
  40d5e2:	(bad)  
  40d5e3:	rep stos BYTE PTR es:[edi],al
  40d5e5:	mov    edi,0x6607ce34
  40d5ea:	(bad)  
  40d5eb:	lock clc 
  40d5ed:	fidivr DWORD PTR [eax]
  40d5ef:	aas    
  40d5f0:	mov    esp,0xf8519eb
  40d5f5:	pushfw 
  40d5f7:	mov    eax,0x3d84d85a
  40d5fc:	pop    edx
  40d5fd:	jp     0x40d5d5
  40d5ff:	xor    DWORD PTR [edi],eax
  40d601:	xchg   edx,eax
  40d602:	test   BYTE PTR [edx+0x78675036],dl
  40d608:	scas   al,BYTE PTR es:[edi]
  40d609:	shl    DWORD PTR [edi-0x78],cl
  40d60c:	ins    DWORD PTR es:[edi],dx
  40d60d:	aaa    
  40d60e:	stos   BYTE PTR es:[edi],al
  40d60f:	xor    DWORD PTR [edx+0x3a23eb3a],edx
  40d615:	test   BYTE PTR [ecx],cl
  40d617:	and    cl,BYTE PTR [edx]
  40d619:	test   BYTE PTR [ecx+0x41],ch
  40d61c:	ret    0xcc2b
  40d61f:	adc    al,0x28
  40d621:	push   ecx
  40d622:	or     BYTE PTR [ecx],0xcd
  40d625:	mov    al,0x8f
  40d627:	add    al,0x11
  40d629:	cmp    al,0xed
  40d62c:	mov    bl,0x6d
  40d62e:	lahf   
  40d62f:	and    eax,0x7670ec2a
  40d634:	enter  0xa822,0x8c
  40d638:	mov    esp,DWORD PTR [edx+ecx*8+0x47]
  40d63c:	push   es
  40d63d:	sbb    al,0xed
  40d63f:	adc    eax,DWORD PTR [ebp-0x20]
  40d642:	sub    al,BYTE PTR [ecx-0x69]
  40d645:	fs jmp 0x186691f2
  40d64b:	aad    0x67
  40d64d:	mov    ah,0x8e
  40d64f:	cmp    cl,0x74
  40d652:	mov    dl,0x9d
  40d654:	pop    es
  40d655:	ds sub eax,0x166493a3
  40d65b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d65c:	call   0xa2ed15ed
  40d661:	sbb    cl,BYTE PTR [edi+eax*2+0x65]
  40d665:	cmp    eax,0xf1a6fb12
  40d66a:	sbb    dl,ah
  40d66c:	xchg   edi,eax
  40d66d:	pmaddwd mm5,mm1
  40d670:	inc    ecx
  40d671:	popf   
  40d672:	fcmovnb st,st(0)
  40d674:	pop    es
  40d675:	mov    dl,0xec
  40d677:	jmp    0x5afaa754
  40d67c:	clc    
  40d67d:	jae    0x40d65f
  40d67f:	xchg   edi,eax
  40d680:	xor    al,0xf1
  40d682:	in     eax,0x9
  40d684:	xchg   ebx,eax
  40d685:	sub    eax,ebp
  40d687:	push   ebx
  40d688:	imul   esi,DWORD PTR [esi-0x61ab1126],0xffffffea
  40d68f:	imul   ebp,DWORD PTR [edx+0x3140d832],0xffffffc2
  40d696:	push   esp
  40d697:	mov    bl,0x40
  40d699:	scas   al,BYTE PTR es:[edi]
  40d69a:	or     eax,0x289c7e1a
  40d69f:	test   al,0x1
  40d6a1:	cmp    esi,esi
  40d6a3:	xchg   DWORD PTR [edi-0x78567134],edx
  40d6a9:	mov    al,ds:0x15987ecc
  40d6ae:	jb     0x40d70c
  40d6b0:	cmc    
  40d6b1:	sahf   
  40d6b2:	mov    gs,WORD PTR [edi-0x6970f8bf]
  40d6b8:	dec    ebp
  40d6b9:	retf   
  40d6ba:	loopne 0x40d734
  40d6bc:	cs jae 0x40d6ff
  40d6bf:	and    dl,al
  40d6c1:	dec    esi
  40d6c2:	(bad)  [edx-0x60]
  40d6c5:	cwde   
  40d6c6:	mov    esi,0x76a5b09
  40d6cb:	shl    DWORD PTR [esi-0x2d],cl
  40d6ce:	lods   al,BYTE PTR ds:[esi]
  40d6cf:	rcl    BYTE PTR [ebp+0x24],0x62
  40d6d3:	sub    esp,DWORD PTR [eax-0xfbd3e90]
  40d6d9:	(bad)  
  40d6da:	leave  
  40d6db:	or     DWORD PTR gs:[esi+0x61],0xc0fa793d
  40d6e3:	repnz cdq 
  40d6e5:	xor    eax,0xa492e777
  40d6ea:	fcomp  QWORD PTR [eax-0x3099333c]
  40d6f0:	stc    
  40d6f1:	vpsubusb xmm0,xmm0,XMMWORD PTR [edi+edx*1]
  40d6f6:	mov    ebx,DWORD PTR [edx-0x23e2f02b]
  40d6fc:	shr    DWORD PTR [edi],cl
  40d6fe:	rol    DWORD PTR ds:0x1e954afa,cl
  40d704:	js     0x40d716
  40d706:	dec    edx
  40d707:	xchg   dl,cl
  40d709:	push   esp
  40d70a:	das    
  40d70b:	iret   
  40d70c:	cmp    DWORD PTR [ebp-0x30],0x4a4540d6
  40d713:	mov    eax,ds:0xb82fe146
  40d718:	popa   
  40d719:	cli    
  40d71a:	sub    BYTE PTR [edi-0x2e],ch
  40d71d:	pop    es
  40d71e:	and    dh,BYTE PTR [esi-0x30b04b83]
  40d724:	je     0x40d713
  40d726:	je     0x40d780
  40d728:	mov    ss,edi
  40d72a:	push   ebp
  40d72b:	xor    BYTE PTR [ebx],dl
  40d72d:	pusha  
  40d72e:	adc    eax,0x74b25264
  40d733:	add    al,0x3b
  40d735:	pushf  
  40d736:	xchg   edi,eax
  40d737:	sahf   
  40d738:	rcr    dl,1
  40d73a:	loop   0x40d790
  40d73c:	inc    ebx
  40d73d:	or     dl,dh
  40d73f:	pop    ebx
  40d740:	test   ecx,ecx
  40d742:	cmp    al,0x72
  40d744:	lea    esp,[edi]
  40d746:	call   0xa64:0xd256355a
  40d74d:	xor    ebx,DWORD PTR [esi]
  40d74f:	mov    ebp,0x19722d84
  40d754:	or     ah,BYTE PTR [ebx]
  40d756:	inc    ebx
  40d757:	pop    ebx
  40d758:	add    DWORD PTR ds:0x1be1b55b,edx
  40d75e:	pop    edx
  40d75f:	and    DWORD PTR [ebp+0x21fb2368],0x492bfcb9
  40d769:	pop    esp
  40d76a:	dec    edx
  40d76b:	fdivp  st(2),st
  40d76d:	stos   DWORD PTR es:[edi],eax
  40d76e:	push   ss
  40d76f:	dec    ebp
  40d770:	daa    
  40d771:	in     eax,dx
  40d772:	mov    ah,0xcc
  40d774:	add    DWORD PTR ds:0x41b03334,eax
  40d77a:	xchg   esi,eax
  40d77b:	adc    DWORD PTR [ecx+0x2c],eax
  40d77e:	mov    dl,0x99
  40d780:	(bad)  [esi+0x5d]
  40d783:	push   eax
  40d784:	sar    BYTE PTR [eax+0x1b7cf365],1
  40d78a:	cmove  esi,DWORD PTR [edi-0x5a8dc98d]
  40d791:	add    al,0x73
  40d793:	cmp    al,0x6c
  40d795:	mov    dl,0x1a
  40d797:	xchg   esi,eax
  40d798:	pop    esp
  40d799:	fsubr  DWORD PTR [eax]
  40d79b:	jnp    0x40d772
  40d79d:	pop    eax
  40d79e:	and    edi,DWORD PTR [ecx-0x42]
  40d7a1:	cdq    
  40d7a2:	(bad)  
  40d7a3:	sti    
  40d7a4:	fstp   TBYTE PTR [eax+0x5884cc46]
  40d7aa:	jns    0x40d7b2
  40d7ac:	mov    esp,0xff30ad7c
  40d7b1:	je     0x40d7fa
  40d7b3:	push   eax
  40d7b4:	xor    DWORD PTR [ebx+0x55],edx
  40d7b7:	dec    eax
  40d7b8:	iret   
  40d7b9:	and    DWORD PTR [ebp-0x4bdc393b],eax
  40d7bf:	test   BYTE PTR [edx-0x5a4b4e13],al
  40d7c5:	adc    dh,BYTE PTR ds:0x58c44238
  40d7cb:	lods   eax,DWORD PTR ds:[esi]
  40d7cc:	lea    ecx,[eax+ecx*1+0x19]
  40d7d0:	(bad)  [ecx-0x31e03261]
  40d7d6:	inc    edi
  40d7d7:	sub    BYTE PTR [ebx+0xb],0xf8
  40d7db:	add    ah,BYTE PTR [eax]
  40d7dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7de:	add    BYTE PTR [ecx-0x52bd4516],al
  40d7e4:	xchg   ecx,eax
  40d7e5:	cmp    bh,ah
  40d7e7:	sub    al,0x80
  40d7e9:	inc    esp
  40d7ea:	(bad)  
  40d7ec:	sti    
  40d7ed:	pop    edi
  40d7ee:	jo     0x40d820
  40d7f0:	call   DWORD PTR [edi]
  40d7f2:	mov    bl,0xb3
  40d7f4:	dec    esi
  40d7f5:	inc    DWORD PTR [ecx+esi*2-0x7bfc59b8]
  40d7fc:	jbe    0x40d817
  40d7fe:	xchg   edx,eax
  40d800:	out    dx,eax
  40d801:	imul   eax,edi,0xf6f00a9a
  40d807:	adc    eax,0x5a1609c
  40d80c:	and    BYTE PTR [edx],bh
  40d80e:	lods   eax,DWORD PTR ds:[esi]
  40d80f:	add    bh,al
  40d811:	inc    ebx
  40d812:	shl    DWORD PTR [esi-0x2f],cl
  40d815:	jns    0x2733612b
  40d81b:	xchg   BYTE PTR [ebp-0x1a6d67bf],bl
  40d821:	cmp    al,0xa
  40d823:	fs xor eax,0x51816bd6
  40d829:	cmp    al,0x4d
  40d82b:	inc    eax
  40d82c:	mov    eax,ds:0x2b80eb2d
  40d831:	ret    
  40d832:	and    al,0x41
  40d834:	cmp    al,0x66
  40d836:	daa    
  40d837:	ins    DWORD PTR es:[edi],dx
  40d838:	and    edx,ebx
  40d83a:	frstor [edi-0x5f]
  40d83d:	dec    esp
  40d83e:	je     0x40d8bb
  40d840:	xor    eax,ecx
  40d842:	dec    ebx
  40d843:	pop    ebp
  40d844:	nop
  40d845:	inc    ebp
  40d846:	mov    dl,0xb4
  40d848:	mov    dh,0x77
  40d84a:	pop    ss
  40d84b:	fcom   QWORD PTR [esi-0x32]
  40d84e:	mov    ecx,0x77ec34e3
  40d853:	adc    eax,0x4b9cdab9
  40d858:	push   esp
  40d859:	mov    ax,ds:0xb086dfe
  40d85f:	inc    eax
  40d860:	xor    al,0xe3
  40d862:	daa    
  40d863:	daa    
  40d864:	xchg   ecx,eax
  40d865:	lahf   
  40d866:	sbb    ebp,esi
  40d868:	adc    BYTE PTR [edi-0x3d801d81],dh
  40d86e:	lock bndstx [ecx],bnd2
  40d872:	call   0xae08:0x94e9d78b
  40d879:	into   
  40d87a:	rcl    DWORD PTR [ecx-0x80],cl
  40d87d:	push   ss
  40d87e:	sti    
  40d87f:	xchg   ebp,eax
  40d880:	in     al,0x88
  40d882:	pop    esp
  40d883:	daa    
  40d884:	addr16 clc 
  40d886:	jno    0x40d864
  40d888:	sar    DWORD PTR [edx-0xf],0xbf
  40d88c:	xchg   esi,eax
  40d88d:	jne    0x40d8b1
  40d88f:	sbb    al,dh
  40d891:	adc    dl,ch
  40d893:	cmp    ah,al
  40d895:	mov    dl,0x8d
  40d897:	jne    0x40d88c
  40d899:	jnp    0x40d84d
  40d89b:	scas   al,BYTE PTR es:[edi]
  40d89c:	inc    ebx
  40d89d:	xchg   edi,eax
  40d89e:	or     DWORD PTR [eax+esi*1],ebx
  40d8a1:	mov    ebx,0x2cf1e01a
  40d8a6:	je     0x40d88b
  40d8a8:	shl    BYTE PTR [eax+0x5f],1
  40d8ab:	dec    esi
  40d8ac:	in     eax,0xbf
  40d8ae:	repnz pop esp
  40d8b0:	xor    dl,BYTE PTR [esi+0x9]
  40d8b3:	add    DWORD PTR [esi],eax
  40d8b5:	jmp    FWORD PTR [edi+esi*4]
  40d8b8:	pop    eax
  40d8b9:	sbb    edx,esp
  40d8bb:	not    dl
  40d8bd:	mov    ds:0x3b64cadf,eax
  40d8c2:	and    BYTE PTR [esi],ch
  40d8c4:	mov    cl,BYTE PTR [ecx-0x70]
  40d8c7:	jmp    0xcd69b646
  40d8cc:	out    dx,al
  40d8cd:	sub    edx,DWORD PTR [edx+0x48]
  40d8d0:	push   0xffffffc0
  40d8d2:	dec    ebx
  40d8d3:	repz int3 
  40d8d5:	add    eax,esp
  40d8d7:	lods   eax,DWORD PTR ss:[esi]
  40d8d9:	adc    BYTE PTR [ecx+0x63],al
  40d8dc:	jo     0x40d85e
  40d8de:	ins    DWORD PTR es:[edi],dx
  40d8df:	inc    ebx
  40d8e0:	xchg   DWORD PTR [esi+0x13],ebx
  40d8e3:	icebp  
  40d8e4:	inc    esp
  40d8e5:	adc    al,0xd1
  40d8e7:	clc    
  40d8e8:	adc    DWORD PTR [esi-0x14d34a4c],eax
  40d8ee:	pusha  
  40d8ef:	adc    DWORD PTR [ebp-0x361dcce8],esp
  40d8f5:	dec    edi
  40d8f6:	jmp    0xec7d:0x3155a98
  40d8fd:	popa   
  40d8fe:	mov    dh,BYTE PTR fs:[edi-0x17]
  40d902:	ins    BYTE PTR es:[edi],dx
  40d903:	ins    DWORD PTR es:[edi],dx
  40d904:	and    al,0xd7
  40d906:	jae    0x40d907
  40d908:	pop    DWORD PTR [ebp-0x597ea584]
  40d90e:	push   ds
  40d90f:	imul   esi,DWORD PTR [esi+0x1],0xbdfcae48
  40d916:	test   BYTE PTR [ebx],0x4
  40d919:	jp     0x40d990
  40d91b:	mov    cl,0x52
  40d91d:	mov    esp,0x4ba5bf30
  40d922:	xor    ebx,esi
  40d924:	push   es
  40d925:	or     DWORD PTR ds:0x4e85a77f,0xffffffb0
  40d92c:	ins    DWORD PTR es:[edi],dx
  40d92d:	mov    cl,0x2c
  40d92f:	data16 in al,0x41
  40d932:	mov    cl,0xe7
  40d934:	push   ss
  40d935:	push   edi
  40d936:	mov    dl,0x51
  40d938:	enter  0xa757,0x1f
  40d93c:	xchg   bl,dl
  40d93e:	mov    eax,ds:0x49e79f57
  40d943:	shl    BYTE PTR [ebp+0x11],0x27
  40d947:	inc    ecx
  40d948:	mov    edx,0x8deaf5cf
  40d94d:	sti    
  40d94e:	loop   0x40d999
  40d950:	and    bh,0xe4
  40d953:	(bad)  
  40d955:	popa   
  40d956:	xor    eax,0xe332754
  40d95b:	push   ebx
  40d95c:	bnd jg 0x40d92d
  40d95f:	or     BYTE PTR [eax*4+0x2cdf2a36],dl
  40d966:	sahf   
  40d967:	jns    0x40d8ed
  40d969:	js     0x40d9ce
  40d96b:	int3   
  40d96c:	mov    ds:0xb6395c0d,al
  40d971:	repnz stc 
  40d973:	jge    0x40d933
  40d975:	mov    BYTE PTR [esi+0x58],0xa9
  40d979:	sub    ecx,edx
  40d97b:	data16 and BYTE PTR [edi],dh
  40d97e:	or     al,0x4e
  40d980:	mov    BYTE PTR [ebp+0x7ad0cfdc],dl
  40d986:	bound  esp,QWORD PTR ds:0x2f17187d
  40d98c:	scas   al,BYTE PTR es:[edi]
  40d98d:	jl     0x40d931
  40d98f:	sub    eax,0xc1085091
  40d994:	jb     0x40d9e0
  40d996:	lds    edx,FWORD PTR [esi]
  40d998:	adc    esi,DWORD PTR [eax+eax*2-0x6c]
  40d99c:	jae    0x40d922
  40d99e:	retf   0x3b9a
  40d9a1:	or     ebp,DWORD PTR [ecx]
  40d9a3:	add    ecx,eax
  40d9a5:	es dec ecx
  40d9a7:	test   BYTE PTR ds:0x68a8b551,cl
  40d9ad:	add    bl,BYTE PTR [eax+0x31]
  40d9b0:	stos   BYTE PTR es:[edi],al
  40d9b1:	shl    DWORD PTR [ecx+0x40],cl
  40d9b4:	dec    ecx
  40d9b5:	push   edi
  40d9b6:	xchg   ecx,eax
  40d9b7:	fstp   QWORD PTR [ebp+ebp*4-0x1feacfd4]
  40d9be:	mov    al,BYTE PTR [ebx-0x19b2bd72]
  40d9c4:	popa   
  40d9c5:	lods   eax,DWORD PTR ds:[esi]
  40d9c6:	cmc    
  40d9c7:	pushf  
  40d9c8:	jmp    0x16a296e2
  40d9cd:	out    dx,al
  40d9ce:	xor    DWORD PTR [ecx+eax*4+0x7bc0c6d4],ecx
  40d9d5:	or     eax,0x98b013cf
  40d9da:	pop    esi
  40d9db:	push   cs
  40d9dc:	add    edi,DWORD PTR [ebp-0x183d625a]
  40d9e2:	and    eax,0x7f93c0f4
  40d9e7:	hlt    
  40d9e8:	mov    dh,0x2a
  40d9ea:	pop    ebx
  40d9eb:	int    0x10
  40d9ed:	mov    eax,0x72a5c51c
  40d9f2:	enter  0x6b73,0xba
  40d9f6:	mov    ebp,0x6ae6e18f
  40d9fb:	dec    esi
  40d9fc:	je     0x40d9f1
  40d9fe:	mov    ah,0xea
  40da00:	dec    ebx
  40da01:	aaa    
  40da02:	imul   ebx,DWORD PTR [edx+0x439ee39c],0xc9268875
  40da0c:	popf   
  40da0d:	and    DWORD PTR [ebp+0x52c82f0],0xcf19d482
  40da17:	jmp    0x31f4:0x3a8d8ffb
  40da1e:	test   eax,0x2ac25a30
  40da23:	xchg   edx,eax
  40da24:	retf   0x7393
  40da27:	daa    
  40da28:	ss stc 
  40da2a:	mov    ebp,0xd1bbafd0
  40da2f:	test   BYTE PTR [edx],dl
  40da31:	jle    0x40da2a
  40da33:	mov    ah,0xf
  40da35:	xor    DWORD PTR [eax+0x49a59e4a],edi
  40da3b:	cwde   
  40da3c:	jmp    0x40da6b
  40da3e:	rcr    BYTE PTR [edi-0x792647a5],0xfb
  40da45:	(bad)  
  40da46:	call   0x293b:0xe50395ef
  40da4d:	repz pushf 
  40da4f:	sahf   
  40da50:	aad    0xb7
  40da52:	pop    eax
  40da53:	ss dec ebp
  40da55:	cmp    eax,0x61a681d1
  40da5a:	pop    es
  40da5b:	adc    DWORD PTR [edx],eax
  40da5d:	fidiv  DWORD PTR [ebp-0x72]
  40da60:	push   es
  40da61:	ficom  WORD PTR [esi+edi*1+0x70]
  40da65:	(bad)  
  40da66:	cmc    
  40da67:	adc    bl,BYTE PTR [esp+ecx*4+0xc64f579]
  40da6e:	sub    DWORD PTR [edx-0x22],ebp
  40da71:	cs xchg ebp,eax
  40da73:	mov    ch,0x1a
  40da75:	pushf  
  40da76:	test   BYTE PTR [ecx-0x2728c502],ah
  40da7c:	inc    ebp
  40da7d:	mov    al,ds:0x44c0e633
  40da82:	stc    
  40da83:	in     al,dx
  40da84:	mov    al,0xa4
  40da86:	push   ebp
  40da87:	inc    eax
  40da88:	mov    BYTE PTR [edx-0x68],ah
  40da8b:	pusha  
  40da8c:	mov    esi,0x15380224
  40da91:	into   
  40da92:	xor    BYTE PTR ds:0xda54180c,al
  40da98:	cmp    ecx,DWORD PTR [esp+ebx*2+0x521add71]
  40da9f:	fwait
  40daa0:	daa    
  40daa1:	test   al,0x6e
  40daa3:	inc    ebp
  40daa4:	cld    
  40daa5:	xor    eax,0x539cb2f6
  40daaa:	mov    DWORD PTR [edi-0x44],esp
  40daad:	(bad)  
  40daae:	std    
  40daaf:	dec    ebx
  40dab0:	inc    eax
  40dab1:	mov    bl,0x2a
  40dab3:	push   esp
  40dab4:	mov    ecx,0xcf088f58
  40dab9:	repz push es
  40dabb:	ss mov cl,0x17
  40dabe:	in     al,dx
  40dabf:	shr    esi,0xf1
  40dac2:	and    edi,DWORD PTR [edx-0x6f]
  40dac5:	and    BYTE PTR [ebx],0x94
  40dac8:	push   esp
  40dac9:	sar    esp,0x14
  40dacc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dacd:	retf   0x838
  40dad0:	scas   eax,DWORD PTR es:[edi]
  40dad1:	fmul   DWORD PTR [esi-0x73]
  40dad4:	sub    DWORD PTR [edx-0x16a417a8],edi
  40dada:	fsub   st,st(5)
  40dadc:	shl    DWORD PTR [esi+0x7],0xa0
  40dae0:	stc    
  40dae1:	call   0xd818:0xb618d747
  40dae8:	int    0x88
  40daea:	enter  0x3b05,0x7d
  40daee:	mov    al,0xb7
  40daf0:	sahf   
  40daf1:	sbb    al,0x36
  40daf3:	pop    ebp
  40daf4:	aaa    
  40daf5:	loop   0x40dade
  40daf7:	jns    0x40db1b
  40daf9:	jle    0x40db51
  40dafb:	inc    edi
  40dafc:	lods   al,BYTE PTR ds:[esi]
  40dafd:	sti    
  40dafe:	mov    ebp,0x738631b5
  40db03:	add    ecx,0x33
  40db06:	icebp  
  40db07:	loope  0x40db02
  40db09:	sub    al,0xa4
  40db0b:	test   eax,0x95f31ab
  40db10:	in     eax,dx
  40db11:	push   ds
  40db12:	adc    bh,dl
  40db14:	out    dx,eax
  40db15:	ss into 
  40db17:	ss aaa 
  40db19:	pmulhw mm0,mm0
  40db1c:	push   eax
  40db1d:	inc    eax
  40db1e:	rdtsc  
  40db20:	sar    DWORD PTR [edi-0xcbb5cfd],cl
  40db26:	mov    edi,0x34ab2eea
  40db2b:	into   
  40db2c:	xchg   edi,ebp
  40db2e:	jmp    0x2c6954
  40db33:	xor    bl,BYTE PTR ds:0x97650679
  40db39:	xchg   ebp,eax
  40db3a:	xor    DWORD PTR [esi],edi
  40db3c:	adc    al,0xff
  40db3e:	sbb    DWORD PTR [ebp+0x7e],ecx
  40db41:	shl    DWORD PTR [eax+0x4644bc3c],cl
  40db47:	repnz shr edx,cl
  40db4a:	out    dx,eax
  40db4b:	jmp    FWORD PTR [esp+ebx*4+0x3462d783]
  40db52:	idiv   dl
  40db54:	test   al,0x86
  40db56:	and    DWORD PTR [ebx-0x11509843],eax
  40db5c:	inc    edi
  40db5d:	imul   edi,DWORD PTR [ebx-0x576820de],0x4c
  40db64:	shl    BYTE PTR [edx-0x14],1
  40db67:	adc    ecx,DWORD PTR [eax]
  40db69:	retf   0x88b4
  40db6c:	jns    0x40db77
  40db6e:	jmp    0x98af:0x3cf63dd4
  40db75:	out    0x37,al
  40db77:	sub    al,0x6c
  40db79:	fstp   DWORD PTR [edx]
  40db7b:	dec    eax
  40db7c:	cmp    BYTE PTR [ecx],0xc
  40db7f:	push   edi
  40db80:	jecxz  0x40db83
  40db82:	in     al,dx
  40db83:	psubusw mm3,QWORD PTR [ecx+eiz*2]
  40db87:	sbb    al,0xaa
  40db89:	js     0x40dbc4
  40db8b:	not    BYTE PTR [ebx-0x26516fe5]
  40db91:	aaa    
  40db92:	stos   DWORD PTR es:[edi],eax
  40db93:	xchg   ebx,eax
  40db94:	and    cl,dl
  40db96:	call   0xdf8d238e
  40db9b:	inc    ecx
  40db9c:	mov    cl,0xa7
  40db9e:	pop    eax
  40db9f:	shl    esp,1
  40dba1:	cmp    edi,esi
  40dba3:	fidivr WORD PTR ds:0x384857aa
  40dba9:	or     ch,BYTE PTR [edx+eax*2]
  40dbac:	stos   DWORD PTR es:[edi],eax
  40dbad:	das    
  40dbae:	fld    QWORD PTR [edx]
  40dbb0:	push   eax
  40dbb1:	push   0x5bcb6163
  40dbb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbb7:	adc    eax,0xc8701a8c
  40dbbc:	push   esi
  40dbbd:	xor    DWORD PTR [ebx],0xf10cf770
  40dbc3:	hlt    
  40dbc4:	shl    DWORD PTR ds:0xbba4b125,0xce
  40dbcb:	inc    edi
  40dbcc:	jmp    0x435f:0x4fb49514
  40dbd3:	cmp    edi,ecx
  40dbd5:	mov    ch,0x69
  40dbd7:	lods   al,BYTE PTR ds:[esi]
  40dbd8:	cdq    
  40dbd9:	popa   
  40dbda:	adc    BYTE PTR [eax+esi*4],ah
  40dbdd:	mov    esp,0x1b0c6a8b
  40dbe2:	ins    BYTE PTR es:[edi],dx
  40dbe3:	dec    ebp
  40dbe4:	int    0x9b
  40dbe6:	fld    DWORD PTR [edx]
  40dbe8:	gs mov dh,0xaf
  40dbeb:	sub    eax,0x7d71fa05
  40dbf0:	xchg   esp,eax
  40dbf1:	out    dx,eax
  40dbf2:	or     eax,0xa1314392
  40dbf7:	dec    eax
  40dbf8:	push   esi
  40dbf9:	pop    es
  40dbfa:	jno    0x40dbb8
  40dbfc:	mov    cl,0xbd
  40dbfe:	push   ebx
  40dbff:	popa   
  40dc00:	ins    BYTE PTR es:[edi],dx
  40dc01:	push   esp
  40dc02:	sub    al,0x8c
  40dc04:	or     DWORD PTR [esi-0x68],esp
  40dc07:	lods   eax,DWORD PTR ds:[esi]
  40dc08:	imul   BYTE PTR [esi]
  40dc0a:	pop    es
  40dc0b:	ja     0x40dc20
  40dc0d:	push   ecx
  40dc0e:	outs   dx,DWORD PTR ds:[esi]
  40dc0f:	lods   eax,DWORD PTR ds:[esi]
  40dc10:	jmp    0xdcc17376
  40dc15:	ret    
  40dc16:	es mov esi,0xc2c21261
  40dc1c:	shl    al,cl
  40dc1e:	cmp    al,0xac
  40dc20:	or     BYTE PTR [esi+0x4bf3aa9d],al
  40dc26:	jmp    0x40dc48
  40dc28:	jg     0x40dc63
  40dc2a:	or     DWORD PTR [ebp-0x61feb78e],edx
  40dc30:	lahf   
  40dc31:	cmp    cl,dh
  40dc33:	mov    bl,0x4a
  40dc35:	outs   dx,DWORD PTR ds:[esi]
  40dc36:	lods   al,BYTE PTR ds:[esi]
  40dc37:	adc    ch,BYTE PTR [edi+edi*1]
  40dc3a:	xor    eax,0xc4b06794
  40dc3f:	in     al,0x5c
  40dc41:	xchg   ebp,eax
  40dc42:	mov    BYTE PTR [esi],dh
  40dc44:	xchg   BYTE PTR [edi],dh
  40dc46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc47:	xor    al,0xd1
  40dc49:	sub    al,0x8c
  40dc4b:	mov    BYTE PTR [edx+0x2a1049b],dl
  40dc51:	jge    0x40dcab
  40dc53:	or     esi,DWORD PTR [edi-0x2d239f2b]
  40dc59:	push   esp
  40dc5a:	adc    DWORD PTR [esi-0x13bc5b6c],ebp
  40dc60:	add    eax,0x6d512ec
  40dc65:	pop    es
  40dc66:	jecxz  0x40dc65
  40dc68:	ror    ecx,cl
  40dc6a:	and    eax,esp
  40dc6c:	adc    BYTE PTR gs:[edi],dl
  40dc6f:	(bad)  
  40dc70:	cmp    BYTE PTR [ecx-0x2f827aae],dl
  40dc76:	xchg   edx,eax
  40dc77:	out    0xf9,eax
  40dc79:	lock sbb bh,0x2b
  40dc7d:	pusha  
  40dc7e:	cmp    DWORD PTR [ebx+0x4c],esp
  40dc81:	jle    0x40dc2a
  40dc83:	je     0x40dce2
  40dc85:	jmp    DWORD PTR [edx]
  40dc87:	cmp    edi,esi
  40dc89:	std    
  40dc8a:	js     0x40dc3b
  40dc8c:	ins    DWORD PTR es:[edi],dx
  40dc8d:	or     al,0x15
  40dc8f:	(bad)  
  40dc91:	xchg   ecx,eax
  40dc92:	xor    esp,DWORD PTR [edx-0x3e6097c9]
  40dc98:	jmp    0x9f0a96fa
  40dc9d:	es mov bh,0x8
  40dca0:	(bad)  [eax+0x28]
  40dca3:	mov    cl,BYTE PTR [edi-0x1f8776dc]
  40dca9:	add    dh,ch
  40dcab:	shl    BYTE PTR [eax],cl
  40dcad:	and    al,0xf7
  40dcaf:	adc    DWORD PTR [edx+0x12],0x75faf2ab
  40dcb6:	adc    eax,0xc7a53925
  40dcbb:	out    dx,al
  40dcbc:	mov    ebp,0x316f7def
  40dcc1:	outs   dx,BYTE PTR ds:[esi]
  40dcc2:	push   0x63afbe39
  40dcc7:	lea    ebp,[ecx-0x31]
  40dcca:	cmp    edi,ebx
  40dccc:	adc    DWORD PTR [esi+0x490f756f],0x5b13591b
  40dcd6:	cmp    edx,DWORD PTR [esi-0x14]
  40dcd9:	push   ds
  40dcda:	sbb    esi,DWORD PTR [ebx]
  40dcdc:	cmp    DWORD PTR [eax+ecx*1-0x775577d],0x73f1e85a
  40dce7:	stc    
  40dce8:	push   edx
  40dce9:	aas    
  40dcea:	xchg   ecx,eax
  40dceb:	(bad)  
  40dcec:	sub    BYTE PTR ds:0xb183bf73,al
  40dcf2:	mov    DWORD PTR [ebp+esi*4-0x73],esi
  40dcf6:	enter  0x5c4e,0xda
  40dcfa:	cmp    BYTE PTR [ecx+0xf],0xa
  40dcfe:	aam    0x28
  40dd00:	push   0xde56ba75
  40dd05:	fwait
  40dd06:	xchg   esp,eax
  40dd07:	mov    eax,ds:0x3e541758
  40dd0c:	cmp    esi,eax
  40dd0e:	sbb    DWORD PTR [eax-0x6f0b6a44],esp
  40dd14:	sar    dl,0x9d
  40dd17:	inc    ebp
  40dd18:	and    esi,esi
  40dd1a:	int3   
  40dd1b:	push   0xffffff8f
  40dd1d:	into   
  40dd1e:	fs cdq 
  40dd20:	call   0xa1148552
  40dd25:	mov    cl,BYTE PTR [edx]
  40dd27:	jecxz  0x40dd73
  40dd29:	xchg   BYTE PTR ss:[eax],dl
  40dd2c:	mov    eax,0xd6cdc3c3
  40dd31:	js     0x40dd7c
  40dd33:	jle    0x40ddac
  40dd35:	lods   eax,DWORD PTR ds:[esi]
  40dd36:	or     DWORD PTR [ecx-0x22f8c9e7],esp
  40dd3c:	sub    DWORD PTR [ecx+edx*4],ecx
  40dd3f:	xchg   ebx,eax
  40dd40:	and    esi,DWORD PTR [edx]
  40dd42:	fnstenv [esi]
  40dd44:	push   ecx
  40dd45:	les    edx,FWORD PTR [ecx]
  40dd47:	sub    eax,DWORD PTR [ecx+0x8]
  40dd4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd4b:	and    cl,dh
  40dd4d:	xor    eax,0xadeaf1e6
  40dd52:	bound  ebx,QWORD PTR [edx+0xa]
  40dd55:	sub    DWORD PTR [esi],esp
  40dd57:	call   0xc011:0x3d6e58d8
  40dd5e:	adc    BYTE PTR [edi-0x2f],dh
  40dd61:	int3   
  40dd62:	sahf   
  40dd63:	(bad)  
  40dd64:	and    eax,0x93583a3f
  40dd69:	(bad)  [ecx]
  40dd6b:	imul   esp,DWORD PTR [ebx-0x774427fb],0x316f3a2
  40dd75:	mov    BYTE PTR [edx+0x34ce15e],bl
  40dd7b:	daa    
  40dd7c:	(bad)  
  40dd7d:	daa    
  40dd7e:	xchg   edx,eax
  40dd7f:	and    ch,BYTE PTR [edx+0x443d0e4f]
  40dd85:	cmp    al,0xf3
  40dd87:	outs   dx,DWORD PTR ds:[esi]
  40dd88:	mov    WORD PTR ds:0x1a22af5d,ds
  40dd8e:	jae    0x40ddcd
  40dd90:	push   es
  40dd91:	fdiv   QWORD PTR [ebx+eax*4]
  40dd94:	ret    0x5d18
  40dd97:	or     eax,0x581cfce6
  40dd9c:	stos   DWORD PTR es:[edi],eax
  40dd9d:	xlat   BYTE PTR ds:[ebx]
  40dd9e:	test   eax,0x597014bf
  40dda3:	or     eax,0x2a8a01c1
  40dda8:	sbb    DWORD PTR [edx-0xb],esi
  40ddab:	rcl    BYTE PTR es:[edi+0x17],0x81
  40ddb0:	dec    ebp
  40ddb1:	pusha  
  40ddb2:	xchg   ecx,eax
  40ddb3:	cmp    al,0x43
  40ddb5:	stc    
  40ddb6:	mov    cl,0x69
  40ddb8:	jl     0x40de30
  40ddba:	fmul   st(6),st
  40ddbc:	jmp    0x2c85:0xc1e530f3
  40ddc3:	xchg   esi,eax
  40ddc4:	jbe    0x40ddab
  40ddc6:	ds mov eax,0x20cd700c
  40ddcc:	jg     0x40ddb0
  40ddce:	xor    bl,bl
  40ddd0:	xor    eax,0xaede538c
  40ddd5:	test   ah,0xf7
  40ddd8:	retf   0x2e14
  40dddb:	ds addr16 sbb eax,0xcdcf3bce
  40dde2:	xor    al,0x80
  40dde4:	mov    ebx,DWORD PTR [ebp+0x1ccccd38]
  40ddea:	jle    0x40de54
  40ddec:	bound  esp,QWORD PTR [edx+0x38]
  40ddef:	out    dx,eax
  40ddf0:	mov    ebx,DWORD PTR ss:0x3ec247aa
  40ddf7:	and    al,0xef
  40ddf9:	shl    BYTE PTR fs:[esi+0x4f],0x1d
  40ddfe:	jge    0x40de68
  40de00:	sti    
  40de01:	std    
  40de02:	mov    al,ds:0x27d27253
  40de07:	jmp    0xba5e:0xb5802ff
  40de0e:	and    al,0x8e
  40de10:	xchg   edi,eax
  40de11:	lea    ebx,[ebp-0x36]
  40de14:	xchg   edi,eax
  40de15:	mov    cs,ebx
  40de17:	or     DWORD PTR [ebp+0x50b73408],0x7f
  40de1e:	into   
  40de1f:	das    
  40de20:	repz add al,0xe
  40de23:	cmp    bh,BYTE PTR [ebx+0x21e9d060]
  40de29:	fwait
  40de2a:	add    ah,al
  40de2c:	cdq    
  40de2d:	test   DWORD PTR [edi-0x5f7d13b4],esi
  40de33:	xchg   esp,eax
  40de34:	pushf  
  40de35:	retf   0x792
  40de38:	mov    al,0xf2
  40de3a:	bswap  ebx
  40de3c:	push   ecx
  40de3d:	out    dx,al
  40de3e:	dec    esi
  40de3f:	out    dx,eax
  40de40:	fsubr  st(6),st
  40de42:	(bad)  
  40de43:	mov    al,0x2c
  40de45:	xchg   ecx,eax
  40de46:	enter  0xa4a9,0xfd
  40de4a:	mov    bl,0xb7
  40de4c:	js     0x40de01
  40de4e:	adc    eax,0x7f97375f
  40de53:	repnz dec ebp
  40de55:	into   
  40de56:	mov    eax,0x97173091
  40de5b:	mov    ebx,0xe2997586
  40de60:	push   esp
  40de61:	inc    edi
  40de62:	fldenv [ecx-0x2d]
  40de65:	cli    
  40de66:	mov    ah,0x1b
  40de68:	push   esp
  40de69:	not    DWORD PTR [ebx-0x57]
  40de6c:	push   cs
  40de6d:	stc    
  40de6e:	jecxz  0x40de8c
  40de70:	jns    0x40de42
  40de72:	mov    DWORD PTR [eax+0x31],esp
  40de75:	jo     0x40de63
  40de77:	cmp    BYTE PTR [ecx-0x7b9dc152],cl
  40de7d:	jae    0x40de52
  40de7f:	sbb    bh,bl
  40de81:	adc    BYTE PTR [esi],bl
  40de83:	lsl    edx,WORD PTR [ebx+0x768f22f5]
  40de8a:	add    edi,DWORD PTR [ecx+0x1b]
  40de8d:	mov    dl,0xbc
  40de8f:	mov    esi,0xd7c85852
  40de94:	or     eax,0xa7b6aa8c
  40de99:	adc    eax,0xdacf2492
  40de9e:	(bad)  
  40de9f:	or     bl,BYTE PTR [esp+edi*8+0x70]
  40dea3:	jle    0x40de8f
  40dea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dea6:	xor    BYTE PTR [esp+ebx*4+0x3c2f5a75],ch
  40dead:	lods   al,BYTE PTR ds:[esi]
  40deae:	scas   eax,DWORD PTR es:[edi]
  40deaf:	shl    BYTE PTR [edx+0x7e],1
  40deb2:	or     al,0x23
  40deb4:	and    BYTE PTR [ebp-0x55],bl
  40deb7:	std    
  40deb8:	lods   al,BYTE PTR ds:[esi]
  40deb9:	add    BYTE PTR [ebx],ah
  40debb:	fistp  DWORD PTR [ebx-0x45594fd]
  40dec1:	rcl    cl,0x15
  40dec4:	adc    BYTE PTR [ebp-0x4a],ah
  40dec7:	mov    WORD PTR [ecx-0x1f421d6a],ss
  40decd:	das    
  40dece:	in     eax,0xa3
  40ded0:	sti    
  40ded1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ded3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ded4:	dec    esp
  40ded5:	mov    esi,0x7c8fe167
  40deda:	adc    al,0x8
  40dedc:	test   dh,dl
  40dede:	add    ch,BYTE PTR [edx+0x559e5ed]
  40dee4:	cdq    
  40dee5:	mov    edx,0x49cddfb
  40deea:	sahf   
  40deeb:	int3   
  40deec:	sub    al,0x39
  40deee:	add    al,0xb
  40def0:	add    eax,ebx
  40def2:	inc    ecx
  40def3:	jb     0x40def9
  40def5:	je     0x40decb
  40def7:	lahf   
  40def8:	mov    ds:0xfb764b69,al
  40defd:	lock fld TBYTE PTR [ecx]
  40df00:	in     al,dx
  40df01:	daa    
  40df02:	mov    ch,0xc1
  40df04:	js     0x40df79
  40df06:	sub    DWORD PTR [esi-0x47],0x48
  40df0a:	inc    edi
  40df0b:	pop    es
  40df0c:	test   BYTE PTR [eax+edi*4],bh
  40df0f:	push   0x18315eb3
  40df14:	mov    al,ds:0x72084040
  40df19:	(bad)  
  40df1c:	and    eax,0x85b08813
  40df21:	push   ss
  40df22:	imul   eax,DWORD PTR [ebp+0xabcd1],0xc3f6087e
  40df2c:	mov    ah,0xa4
  40df2e:	jp     0x40defb
  40df30:	adc    eax,0x4aebdb9d
  40df35:	outs   dx,BYTE PTR ds:[esi]
  40df36:	int3   
  40df37:	sbb    dl,BYTE PTR [ebx+eiz*4+0x1c043040]
  40df3e:	test   eax,0xdfe6c01e
  40df43:	xchg   ecx,eax
  40df44:	out    0xd4,eax
  40df46:	mov    eax,0xf2c9c76f
  40df4b:	inc    eax
  40df4c:	xor    esi,DWORD PTR [ebx]
  40df4e:	call   0xa665:0xc26695fe
  40df55:	rcr    dh,1
  40df57:	xor    DWORD PTR [esi+0x68648fba],0x741cce7f
  40df61:	dec    edi
  40df62:	out    dx,eax
  40df63:	xor    ch,BYTE PTR [eax-0x6fd663ad]
  40df69:	jp     0x1e6ab251
  40df6f:	retf   0x86de
  40df72:	or     al,0xc
  40df74:	rcr    eax,1
  40df76:	push   cs
  40df77:	sbb    DWORD PTR [ebp-0x1f],esi
  40df7a:	mov    cl,0x55
  40df7c:	adc    edx,esp
  40df7e:	push   eax
  40df7f:	add    ebx,DWORD PTR [edi]
  40df81:	stos   DWORD PTR es:[edi],eax
  40df82:	xor    DWORD PTR [ebp-0x234f694d],edx
  40df88:	ds dec esi
  40df8a:	xchg   ebx,eax
  40df8b:	loop   0x40dfe9
  40df8d:	add    eax,0x1426856f
  40df92:	xlat   BYTE PTR ds:[ebx]
  40df93:	push   ebp
  40df94:	shr    BYTE PTR [edx],1
  40df96:	repz popf 
  40df98:	dec    eax
  40df99:	fwait
  40df9a:	xchg   ecx,eax
  40df9b:	outs   dx,BYTE PTR ds:[esi]
  40df9c:	cmp    BYTE PTR [edx+ebx*2+0x3],al
  40dfa0:	cld    
  40dfa1:	mov    ecx,0x84d695a2
  40dfa6:	inc    eax
  40dfa7:	or     DWORD PTR [edx-0x4c4877d8],esp
  40dfad:	cmp    cl,BYTE PTR [eax+0x74]
  40dfb0:	in     al,0xff
  40dfb2:	pop    eax
  40dfb3:	pop    es
  40dfb4:	xchg   BYTE PTR [eax-0x4],al
  40dfb7:	adc    al,0xca
  40dfb9:	xchg   edi,eax
  40dfba:	push   eax
  40dfbb:	ds gs mov ch,bh
  40dfbf:	sti    
  40dfc0:	jmp    0x1b34:0xe0560ce4
  40dfc7:	xchg   esp,eax
  40dfc8:	dec    eax
  40dfc9:	subps  xmm1,xmm5
  40dfcc:	xchg   BYTE PTR [esi-0x6a4502ca],al
  40dfd2:	mov    ds:0xdc75aaca,al
  40dfd7:	jbe    0x40df59
  40dfd9:	dec    eax
  40dfda:	fidivr DWORD PTR [ebp+0x1e385470]
  40dfe0:	ds scas al,BYTE PTR es:[edi]
  40dfe2:	mov    cl,0x11
  40dfe4:	(bad)  
  40dfe5:	ins    DWORD PTR es:[edi],dx
  40dfe6:	add    ecx,esp
  40dfe8:	xor    DWORD PTR [eax],eax
  40dfea:	test   eax,0x7d54324f
  40dfef:	dec    edx
  40dff0:	mov    esi,0x9ee4b3fa
  40dff5:	mov    BYTE PTR [ebp-0x6c],dh
  40dff8:	pusha  
  40dff9:	pop    es
  40dffa:	loopne 0x40dfec
  40dffc:	mov    esi,0x1c5a4b1f
  40e001:	(bad)  
  40e002:	scas   al,BYTE PTR es:[edi]
  40e003:	loope  0x40e05a
  40e005:	mov    cl,0x6a
  40e007:	and    edi,0x844d4a9e
  40e00d:	int    0xd9
  40e00f:	jne    0x40dfc8
  40e011:	cmp    bh,BYTE PTR [ebx-0x7d]
  40e014:	call   0xf85cc694
  40e019:	mov    eax,0xb94336e4
  40e01e:	push   eax
  40e01f:	dec    ebx
  40e020:	js     0x40dfa5
  40e022:	clc    
  40e023:	data16 mov dh,0xcb
  40e026:	repnz dec ebx
  40e028:	mov    edx,0x1e09fb9d
  40e02d:	pop    eax
  40e02e:	aad    0xea
  40e030:	stos   BYTE PTR es:[edi],al
  40e031:	sub    bh,BYTE PTR [ecx+0x45]
  40e034:	add    ah,cl
  40e036:	inc    ecx
  40e037:	call   0x7fbdb8ed
  40e03c:	inc    edi
  40e03d:	loopne 0x40dfee
  40e03f:	jp     0x40e01e
  40e041:	jge    0x7e0f902f
  40e047:	jg     0x40e058
  40e049:	push   edx
  40e04a:	jb     0x40e008
  40e04c:	and    al,0x37
  40e04e:	pop    edi
  40e04f:	xor    esi,0x51
  40e052:	push   edi
  40e053:	ret    
  40e054:	(bad)  
  40e056:	mov    edi,DWORD PTR [esi]
  40e058:	bound  esi,QWORD PTR [eax+0xd8e214f]
  40e05e:	sub    ch,BYTE PTR [edi+eax*1-0x52]
  40e062:	lea    ebp,[ecx+0x5cebdeb2]
  40e068:	mov    ch,0xff
  40e06a:	cmc    
  40e06b:	sti    
  40e06c:	adc    eax,0x6514a5c2
  40e071:	mov    eax,0xe6e9493
  40e076:	mov    BYTE PTR [ebx+0x7b],dl
  40e079:	(bad)  
  40e07a:	out    dx,al
  40e07b:	int    0xdc
  40e07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e07e:	add    DWORD PTR [ebp-0x52f43169],ecx
  40e084:	std    
  40e085:	stos   BYTE PTR es:[edi],al
  40e086:	push   cs
  40e087:	fs inc edx
  40e089:	dec    ebp
  40e08a:	mov    al,ds:0x7baf785e
  40e08f:	out    0x34,al
  40e091:	dec    ecx
  40e092:	ds push esi
  40e094:	adc    bl,dh
  40e096:	xchg   bl,cl
  40e098:	mov    ebx,0xc53e66e8
  40e09d:	fmulp  st(0),st
  40e09f:	mov    bh,0x92
  40e0a1:	outs   dx,BYTE PTR ds:[esi]
  40e0a2:	ret    
  40e0a3:	aad    0x60
  40e0a5:	jbe    0x40e035
  40e0a7:	mov    DWORD PTR [eax-0x64],eax
  40e0aa:	and    eax,DWORD PTR [edx+0x55]
  40e0ad:	adc    eax,0x6869dc5b
  40e0b2:	out    0xea,eax
  40e0b4:	test   eax,0x351bc37
  40e0b9:	jmp    0x527ef3e5
  40e0be:	or     DWORD PTR [edi+0x674a9a34],0x7efb756e
  40e0c8:	sbb    al,0x66
  40e0ca:	dec    edx
  40e0cb:	dec    edx
  40e0cc:	pop    edi
  40e0cd:	push   ds
  40e0ce:	in     eax,0xab
  40e0d0:	in     al,dx
  40e0d1:	rcl    ch,0x8c
  40e0d4:	retf   
  40e0d5:	pop    edi
  40e0d6:	pop    ecx
  40e0d7:	cmp    eax,0x7e424d2
  40e0dc:	rol    DWORD PTR ds:0x853fbafa,1
  40e0e2:	fldenv [edx-0x78]
  40e0e5:	test   cl,dh
  40e0e7:	mov    bl,0x6
  40e0e9:	shl    BYTE PTR [ebx+0x2a],0xe7
  40e0ed:	xchg   ebp,eax
  40e0ee:	cpuid  
  40e0f0:	cli    
  40e0f1:	inc    ebp
  40e0f2:	in     al,0xb3
  40e0f4:	ds xchg edx,eax
  40e0f6:	pop    esp
  40e0f7:	add    esp,esi
  40e0f9:	and    al,0xfa
  40e0fb:	push   ecx
  40e0fc:	mov    ecx,DWORD PTR [ebx+0x74]
  40e0ff:	and    DWORD PTR [esi+0x4d],esi
  40e102:	add    BYTE PTR [ecx+edi*1+0x6359af3c],bh
  40e109:	push   ds
  40e10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e10b:	mov    esp,0xe3af1929
  40e110:	inc    esp
  40e111:	imul   edi,DWORD PTR [esi+0x5b],0x4d76e31c
  40e118:	mov    eax,0x9fe06a48
  40e11d:	and    al,0x5e
  40e11f:	sbb    eax,0x4b57c48a
  40e124:	test   eax,0x55490f94
  40e129:	ds inc ebp
  40e12b:	jne    0x40e189
  40e12d:	xchg   ebx,edx
  40e12f:	push   es
  40e130:	ja     0x40e15a
  40e132:	iret   
  40e133:	scas   al,BYTE PTR es:[edi]
  40e134:	repz retf 0x7bb4
  40e138:	mov    ss,WORD PTR [edx]
  40e13a:	sbb    BYTE PTR [ecx+ecx*4],0xb5
  40e13e:	sub    bh,dl
  40e140:	jl     0x40e0d9
  40e142:	ins    DWORD PTR es:[edi],dx
  40e143:	ret    
  40e144:	cmp    ah,cl
  40e146:	pop    ebx
  40e147:	mov    ebp,0x15577819
  40e14c:	sub    al,0xb0
  40e14e:	test   BYTE PTR ds:[bx-0x625b],bl
  40e154:	(bad)
  40e157:	test   eax,0x418248e
  40e15c:	iret   
  40e15d:	inc    eax
  40e15e:	and    al,0xdd
  40e160:	outs   dx,BYTE PTR ds:[esi]
  40e161:	mov    ecx,ecx
  40e163:	test   DWORD PTR [edx+0x433682c7],esi
  40e169:	cwde   
  40e16a:	add    eax,0x4c72c194
  40e16f:	xor    eax,ecx
  40e171:	(bad)  
  40e172:	loope  0x40e1f2
  40e174:	and    al,0x7c
  40e176:	xor    BYTE PTR [edi+0x35],bh
  40e179:	stc    
  40e17a:	push   ebx
  40e17b:	inc    edi
  40e17c:	adc    bl,ch
  40e17e:	or     al,0x38
  40e180:	int3   
  40e181:	test   BYTE PTR [ebx+ebx*1],ah
  40e184:	(bad)  
  40e185:	test   eax,0x6ed3a2ad
  40e18a:	aas    
  40e18b:	push   esp
  40e18c:	adc    al,0x9
  40e18e:	out    dx,eax
  40e18f:	int3   
  40e190:	and    al,0x6d
  40e192:	jecxz  0x40e127
  40e194:	xor    al,0x29
  40e196:	add    DWORD PTR [ecx],0xffffffd6
  40e199:	int3   
  40e19a:	xor    DWORD PTR fs:[eax+0x2],0x1
  40e19f:	adc    eax,0xd5d5782d
  40e1a4:	fwait
  40e1a5:	jp     0x40e173
  40e1a7:	push   0x39
  40e1a9:	repz retf 
  40e1ab:	push   esp
  40e1ac:	xchg   DWORD PTR [edx-0x74],edi
  40e1af:	pop    ebx
  40e1b0:	mov    ah,0x69
  40e1b2:	adc    eax,0xd56ad154
  40e1b7:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40e1b9:	mov    ecx,0xc413cdbb
  40e1be:	cli    
  40e1bf:	aaa    
  40e1c0:	and    esi,esi
  40e1c2:	not    BYTE PTR [edi-0x1]
  40e1c5:	loop   0x40e187
  40e1c7:	add    eax,0x5ee7d2bd
  40e1cc:	gs push cs
  40e1ce:	sub    eax,0x4390b192
  40e1d3:	fucomp st(7)
  40e1d5:	jo     0x40e22d
  40e1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1d8:	mov    eax,ds:0xebae0f7a
  40e1dd:	xor    al,0x59
  40e1df:	fldenv [eax+0x41]
  40e1e2:	dec    edi
  40e1e3:	mov    al,BYTE PTR [ebp-0x368c08cb]
  40e1e9:	test   DWORD PTR [esi],ebx
  40e1eb:	int    0x2a
  40e1ed:	pop    es
  40e1ee:	out    dx,al
  40e1ef:	or     DWORD PTR [ebx-0x5b16c3a4],edi
  40e1f5:	mov    BYTE PTR [ebp+0x7ec88920],ah
  40e1fb:	dec    edi
  40e1fc:	aad    0xb0
  40e1fe:	in     al,dx
  40e1ff:	pop    ss
  40e200:	js     0x5518359f
  40e206:	call   0x8ed02bad
  40e20b:	push   ebp
  40e20c:	sub    DWORD PTR [ecx+ebp*1-0x474f24c3],esi
  40e213:	adc    eax,0x671df2d3
  40e218:	mov    edi,0x6a76a54c
  40e21d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e21e:	icebp  
  40e21f:	add    DWORD PTR [eax-0x55],edi
  40e222:	cs add al,0xc0
  40e225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e226:	cmc    
  40e227:	shr    edx,1
  40e229:	jmp    0x9606:0xe3784f14
  40e230:	mov    ah,0xca
  40e232:	repz iret 
  40e234:	dec    ebx
  40e235:	stos   BYTE PTR es:[edi],al
  40e236:	cmp    ch,BYTE PTR [ebx-0x34]
  40e239:	add    dh,BYTE PTR [ecx-0x5]
  40e23c:	mov    BYTE PTR [edx*1+0x3c69e59a],bh
  40e243:	or     eax,0x1bfeb2d0
  40e248:	cmp    cl,BYTE PTR [ebx+0x20]
  40e24b:	xor    DWORD PTR [edx-0x56],esi
  40e24e:	dec    edx
  40e24f:	fimul  WORD PTR [ecx-0xd]
  40e252:	data16 loop 0x40e293
  40e255:	mov    eax,ds:0x10c92ceb
  40e25a:	scas   eax,DWORD PTR es:[edi]
  40e25b:	psubsb mm7,mm1
  40e25e:	and    BYTE PTR [ecx],0x82
  40e261:	jbe    0x40e23d
  40e263:	test   BYTE PTR ds:0xd299d081,bh
  40e269:	mov    ecx,0x1e98269
  40e26e:	div    DWORD PTR [ebp-0x4433204b]
  40e274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e275:	or     ch,bh
  40e277:	lods   al,BYTE PTR ds:[esi]
  40e278:	aad    0xb2
  40e27a:	xchg   DWORD PTR [ecx],ebx
  40e27c:	js     0x40e2ac
  40e27e:	add    ah,BYTE PTR [eax+0x5f]
  40e281:	mov    ah,0x16
  40e283:	pop    ebx
  40e284:	mov    esp,0xca5ec77f
  40e289:	adc    DWORD PTR [edi],ebx
  40e28b:	mov    eax,ds:0x654061e7
  40e290:	mov    bh,0xc0
  40e292:	xchg   ecx,eax
  40e293:	aam    0x6f
  40e295:	cdq    
  40e296:	cmp    DWORD PTR [edx],ebx
  40e298:	jg     0x40e276
  40e29a:	lock and al,0x84
  40e29d:	mov    dl,0xac
  40e29f:	jbe    0x40e319
  40e2a1:	rcl    BYTE PTR ds:0x2c07a15d,0x92
  40e2a8:	mov    ecx,0x7c6c7d4d
  40e2ad:	in     al,dx
  40e2ae:	xlat   BYTE PTR ds:[ebx]
  40e2af:	mov    al,0x9d
  40e2b1:	push   esp
  40e2b2:	into   
  40e2b3:	enter  0x40c8,0x1a
  40e2b7:	dec    DWORD PTR [edx-0x5ce6b0ea]
  40e2bd:	jno    0x40e2d3
  40e2bf:	xchg   ebx,eax
  40e2c0:	je     0x40e2ac
  40e2c2:	push   ss
  40e2c3:	dec    ebx
  40e2c4:	lods   eax,DWORD PTR ds:[esi]
  40e2c5:	inc    eax
  40e2c6:	loope  0x40e263
  40e2c8:	shr    BYTE PTR [esi-0x29],1
  40e2cb:	inc    ebp
  40e2cc:	icebp  
  40e2cd:	jmp    0x40e293
  40e2cf:	jl     0x40e307
  40e2d1:	cmp    ah,ah
  40e2d3:	mov    edi,0xdb71a45d
  40e2d8:	aaa    
  40e2d9:	aad    0x50
  40e2db:	push   ebp
  40e2dc:	test   BYTE PTR [esi-0x5c3a04e9],ah
  40e2e2:	lods   eax,DWORD PTR ds:[esi]
  40e2e3:	loopne 0x40e2fe
  40e2e5:	dec    ebp
  40e2e6:	out    0x0,eax
  40e2e8:	sbb    ebp,DWORD PTR [eax]
  40e2ea:	xchg   BYTE PTR [ebx+0x56],bh
  40e2ed:	call   0xfb43d0a5
  40e2f2:	dec    ecx
  40e2f3:	lahf   
  40e2f4:	dec    ebx
  40e2f5:	sub    ah,dl
  40e2f7:	mov    edx,0xbf14f7d5
  40e2fc:	fsub   DWORD PTR [esi]
  40e2fe:	lods   eax,DWORD PTR ds:[esi]
  40e2ff:	xor    al,0x28
  40e301:	pop    es
  40e302:	pushf  
  40e303:	or     eax,0x21f0d9b
  40e308:	fwait
  40e309:	aam    0x51
  40e30b:	jne    0x40e330
  40e30d:	pop    eax
  40e30e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e30f:	lods   al,BYTE PTR ds:[esi]
  40e310:	out    0x18,eax
  40e312:	inc    ecx
  40e313:	jae    0x40e2ef
  40e315:	addr16 jmp 0x53165a38
  40e31b:	stos   BYTE PTR es:[edi],al
  40e31c:	mov    al,0x6
  40e31e:	push   ds
  40e31f:	xchg   ebx,eax
  40e320:	rcr    ebp,cl
  40e322:	outs   dx,BYTE PTR ds:[esi]
  40e323:	es pop edx
  40e325:	scas   al,BYTE PTR es:[edi]
  40e326:	xchg   DWORD PTR ds:0xd527c945,ecx
  40e32c:	mov    eax,ds:0xe52292c8
  40e331:	stos   BYTE PTR es:[edi],al
  40e332:	mul    BYTE PTR [esi+esi*1+0x27]
  40e336:	scas   eax,DWORD PTR es:[edi]
  40e337:	pop    edi
  40e338:	mov    ebx,0xa31af028
  40e33d:	dec    eax
  40e33e:	mov    ds:0xb7480cf5,al
  40e343:	jae    0x40e364
  40e345:	loope  0x40e2e1
  40e347:	jns    0x40e37a
  40e349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e34a:	adc    eax,0x784351c2
  40e34f:	add    edi,ebx
  40e351:	pop    es
  40e352:	fiadd  DWORD PTR [edx+0x1935178]
  40e358:	pop    es
  40e359:	push   0xffffffcc
  40e35b:	in     eax,dx
  40e35c:	dec    ebp
  40e35d:	aam    0x70
  40e35f:	adc    eax,0xee270a07
  40e364:	dec    eax
  40e365:	loopne 0x40e2f3
  40e367:	jno    0x40e305
  40e369:	inc    esi
  40e36a:	std    
  40e36b:	inc    ebp
  40e36c:	inc    edi
  40e36d:	ja     0x40e35b
  40e36f:	cmp    BYTE PTR [esi+0x2],ah
  40e372:	xchg   DWORD PTR [ecx-0x39876a91],edi
  40e378:	stos   BYTE PTR es:[edi],al
  40e379:	retf   
  40e37a:	jmp    0xd37cbc37
  40e37f:	pop    esi
  40e380:	int3   
  40e381:	imul   ecx,DWORD PTR [ebp-0x16b436aa],0xd4fa1b6a
  40e38b:	(bad)  
  40e38d:	retf   
  40e38e:	bound  ebx,QWORD PTR [ebx+0x5b12e787]
  40e394:	mov    ds:0x9da7f6fd,eax
  40e399:	pop    ecx
  40e39a:	cld    
  40e39b:	cmc    
  40e39c:	add    DWORD PTR [esi],ebx
  40e39e:	cld    
  40e39f:	jmp    0x2bcb9287
  40e3a4:	jge    0x40e37e
  40e3a6:	pop    edi
  40e3a7:	xor    DWORD PTR [eax-0x19],edi
  40e3aa:	imul   esi,DWORD PTR [esi+0x7093e647],0x8408409b
  40e3b4:	js     0x40e40a
  40e3b6:	dec    edx
  40e3b7:	jmp    FWORD PTR [edi+esi*2]
  40e3ba:	jle    0x40e39b
  40e3bc:	jb     0x40e41f
  40e3be:	stos   BYTE PTR es:[edi],al
  40e3bf:	std    
  40e3c0:	(bad)  
  40e3c1:	pop    eax
  40e3c2:	xor    eax,ebx
  40e3c4:	ja     0x40e37f
  40e3c6:	clc    
  40e3c7:	jne    0x40e37e
  40e3c9:	dec    edi
  40e3ca:	xor    eax,DWORD PTR es:[esi-0x44]
  40e3ce:	or     dh,0x42
  40e3d1:	or     edx,0xac75a64e
  40e3d7:	loope  0x40e452
  40e3d9:	pop    eax
  40e3da:	sub    ebp,edx
  40e3dc:	lock cld 
  40e3de:	lods   al,BYTE PTR ds:[esi]
  40e3df:	sub    dl,cl
  40e3e1:	xchg   esi,eax
  40e3e2:	int3   
  40e3e3:	repnz or al,BYTE PTR [eax]
  40e3e6:	push   ds
  40e3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e8:	lock pop ecx
  40e3ea:	jg     0x40e3c1
  40e3ec:	jmp    0x40e448
  40e3ee:	xchg   DWORD PTR [eax+0x1b],edi
  40e3f1:	je     0x40e401
  40e3f3:	repnz in eax,dx
  40e3f5:	stc    
  40e3f6:	mov    edi,0xc96e6fc4
  40e3fb:	dec    esi
  40e3fc:	push   es
  40e3fd:	sub    al,0xed
  40e3ff:	test   BYTE PTR [esi],bl
  40e401:	mov    al,ds:0xffe8bbf
  40e406:	aam    0x7f
  40e408:	mov    eax,0x939f51c
  40e40d:	mov    edx,ebp
  40e40f:	imul   DWORD PTR [eax+0x4fef2c6a]
  40e415:	scas   al,BYTE PTR es:[edi]
  40e416:	sar    BYTE PTR [ecx-0x2aedebaf],cl
  40e41c:	add    DWORD PTR [esi+0x3cb1e86b],esp
  40e422:	loop   0x40e3e6
  40e424:	sbb    DWORD PTR [ebx],ebx
  40e426:	adc    ebp,0x97989d29
  40e42c:	mov    dl,0x61
  40e42e:	sub    DWORD PTR [ebp+0x9],ebx
  40e431:	div    BYTE PTR ds:0x10f97677
  40e437:	into   
  40e438:	call   0x7e2f:0x29af2d1f
  40e43f:	pop    ebp
  40e440:	in     al,0x52
  40e442:	enter  0x7b3,0x10
  40e446:	sar    BYTE PTR [edx],1
  40e448:	sbb    edi,DWORD PTR ds:0xa01e0691
  40e44e:	xchg   esp,eax
  40e44f:	cmp    ah,BYTE PTR [edi-0x58275dd8]
  40e455:	mov    fs:0xf9b82743,al
  40e45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e45c:	mov    WORD PTR [ebp+0x361fb7ef],?
  40e462:	gs loope 0x40e42b
  40e465:	ret    
  40e466:	inc    edi
  40e467:	pop    es
  40e468:	and    DWORD PTR [ebx+0x0],ebp
  40e46b:	fist   WORD PTR [ecx]
  40e46d:	test   BYTE PTR [ebx+0x45],cl
  40e470:	je     0x40e44b
  40e472:	dec    esp
  40e473:	sbb    al,BYTE PTR [ebx+0x56]
  40e476:	sahf   
  40e477:	cmp    edx,DWORD PTR [edi]
  40e479:	fs add eax,0x8055573a
  40e47f:	outs   dx,DWORD PTR ds:[esi]
  40e480:	je     0x40e47f
  40e482:	dec    esp
  40e483:	mov    ecx,edx
  40e485:	(bad)  
  40e486:	pop    esi
  40e487:	ret    0xafa4
  40e48a:	pop    edi
  40e48b:	jo     0x40e4a4
  40e48d:	mov    cl,0x71
  40e48f:	test   ch,al
  40e491:	ja     0x40e4bf
  40e493:	in     al,dx
  40e494:	test   al,0x22
  40e496:	add    DWORD PTR [edx],esp
  40e498:	ficomp WORD PTR [esi-0x30]
  40e49b:	inc    esp
  40e49c:	int3   
  40e49d:	cmp    bh,dh
  40e49f:	popf   
  40e4a0:	outs   dx,DWORD PTR ds:[esi]
  40e4a1:	in     al,dx
  40e4a2:	mov    edi,0x9cc42945
  40e4a7:	nop
  40e4a8:	lds    esi,FWORD PTR [eax-0x77940c9c]
  40e4ae:	cs push cs
  40e4b0:	int3   
  40e4b1:	jno    0x40e466
  40e4b3:	call   FWORD PTR [di+0x4a06]
  40e4b8:	psllq  mm5,QWORD PTR [ebx]
  40e4bb:	and    ecx,DWORD PTR [edx-0x50]
  40e4be:	ins    DWORD PTR es:[edi],dx
  40e4bf:	mov    esp,0xdc2df37f
  40e4c4:	scas   eax,DWORD PTR es:[edi]
  40e4c5:	adc    dh,bl
  40e4c7:	dec    ebp
  40e4c8:	ds jae 0x40e513
  40e4cb:	sbb    eax,0x440c2e72
  40e4d0:	pop    ss
  40e4d1:	aaa    
  40e4d2:	mov    bh,BYTE PTR ds:0xad1d7722
  40e4d8:	cdq    
  40e4d9:	mov    al,ds:0x5cd49701
  40e4de:	sbb    al,0x36
  40e4e0:	or     DWORD PTR [edi-0x4b2635a5],eax
  40e4e6:	or     DWORD PTR [ebx],0x641fda6a
  40e4ec:	pop    ecx
  40e4ed:	pop    eax
  40e4ee:	mov    edi,0xc0b8b47c
  40e4f3:	in     al,dx
  40e4f4:	outs   dx,BYTE PTR ds:[esi]
  40e4f5:	jb     0x40e575
  40e4f7:	stos   BYTE PTR es:[edi],al
  40e4f8:	bnd jmp 0x7fdcbba7
  40e4fe:	aas    
  40e4ff:	inc    esi
  40e500:	mov    ds:0xb3c63006,al
  40e505:	and    al,0x55
  40e507:	repz (bad) 
  40e509:	or     DWORD PTR [ecx+edi*2],eax
  40e50c:	inc    esi
  40e50d:	pop    ss
  40e50e:	and    DWORD PTR [esi+0x79fcc729],edx
  40e514:	mov    bh,0x7
  40e516:	rcr    ah,0xca
  40e519:	sbb    edx,DWORD PTR [ebp+0x40fa39af]
  40e51f:	call   0xfe5a53ca
  40e524:	lods   al,BYTE PTR ds:[esi]
  40e525:	and    BYTE PTR [ebx-0x63],bh
  40e528:	loop   0x40e587
  40e52a:	hlt    
  40e52b:	outs   dx,BYTE PTR ds:[esi]
  40e52c:	(bad)
  40e52f:	nop
  40e530:	xchg   ecx,eax
  40e531:	and    DWORD PTR [eax-0x4e],ebp
  40e534:	xchg   DWORD PTR ds:0x879cf13f,esi
  40e53a:	inc    edi
  40e53b:	mov    esp,DWORD PTR [esi-0x3935f3fd]
  40e541:	mov    bh,0x27
  40e543:	cmp    DWORD PTR [eax-0x4dbd7955],edx
  40e549:	push   ebx
  40e54a:	fdivr  QWORD PTR [ebx+0x2b]
  40e54d:	and    al,0xce
  40e54f:	xor    ecx,ebp
  40e551:	stos   DWORD PTR es:[edi],eax
  40e552:	mov    edx,esp
  40e554:	or     BYTE PTR [esp+eax*1],dl
  40e557:	jmp    0x40e58d
  40e559:	cdq    
  40e55a:	rcr    DWORD PTR [eax+esi*4],1
  40e55d:	pop    ecx
  40e55e:	push   0xffffff99
  40e560:	fwait
  40e561:	jae    0x40e5d3
  40e563:	mov    ebx,0x56cb4fa7
  40e568:	(bad)  
  40e56a:	nop
  40e56b:	loopne 0x40e4ed
  40e56d:	lahf   
  40e56e:	mov    dl,0x19
  40e570:	sub    DWORD PTR [edi+0x689cbcfa],0x93189a19
  40e57a:	mov    bh,0x27
  40e57c:	jg     0x40e596
  40e57e:	add    eax,0x31c882a
  40e583:	cmp    DWORD PTR ss:[eax],ecx
  40e586:	(bad)  
  40e588:	loopne 0x40e5d2
  40e58a:	(bad)  
  40e58b:	ins    DWORD PTR es:[edi],dx
  40e58c:	fs jmp 0xb600:0x81d79221
  40e594:	mov    edi,0xec9aa9dc
  40e599:	fbld   TBYTE PTR [ebp-0x70]
  40e59c:	rcl    BYTE PTR [ecx],0xba
  40e59f:	(bad)  
  40e5a0:	sbb    al,0x37
  40e5a2:	jmp    0x40e619
  40e5a4:	scas   eax,DWORD PTR es:[edi]
  40e5a5:	mov    eax,ds:0x66f42699
  40e5aa:	push   es
  40e5ab:	lds    ebx,FWORD PTR [edi+edx*8+0x7842da3d]
  40e5b2:	lds    edx,FWORD PTR [edx-0x4c]
  40e5b5:	or     al,0xca
  40e5b7:	fisttp QWORD PTR [esi]
  40e5b9:	outs   dx,DWORD PTR ds:[esi]
  40e5ba:	jmp    0x40e555
  40e5bc:	shl    DWORD PTR [ecx],cl
  40e5be:	ret    0x276b
  40e5c1:	js     0x40e5b2
  40e5c3:	mov    ?,WORD PTR [edx+0x77]
  40e5c6:	add    eax,0xe926221e
  40e5cb:	fwait
  40e5cc:	mov    al,0x77
  40e5ce:	(bad)  
  40e5cf:	scas   al,BYTE PTR es:[edi]
  40e5d0:	stc    
  40e5d1:	sbb    al,0xb3
  40e5d3:	mov    ebx,0x2535d916
  40e5d8:	push   ss
  40e5d9:	mov    al,0xd8
  40e5db:	out    0x5c,al
  40e5dd:	jmp    0x821:0x4a881637
  40e5e4:	mov    ?,WORD PTR [edx]
  40e5e6:	dec    edi
  40e5e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5e8:	or     eax,0xf6f3743b
  40e5ed:	gs (bad) 
  40e5ef:	pop    esi
  40e5f0:	fist   DWORD PTR [edi-0x5fb77cbc]
  40e5f6:	test   al,0x46
  40e5f8:	scas   eax,DWORD PTR es:[edi]
  40e5f9:	adc    DWORD PTR [ebp+0x52],ecx
  40e5fc:	pop    edi
  40e5fd:	iret   
  40e5fe:	lea    esp,[edx]
  40e600:	add    eax,0x8e87176d
  40e605:	cmp    al,0xbf
  40e607:	sbb    ebp,edi
  40e609:	push   ss
  40e60a:	xchg   cl,bl
  40e60c:	inc    ebp
  40e60d:	xor    edx,edx
  40e60f:	scas   eax,DWORD PTR es:[edi]
  40e610:	mov    eax,ds:0x3fafba53
  40e615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e617:	cmp    al,0x3
  40e619:	sub    ah,BYTE PTR [edx+ebx*8]
  40e61c:	push   ebp
  40e61d:	cmp    al,0x7a
  40e61f:	imul   DWORD PTR [ebx-0x60fe139]
  40e625:	fsub   QWORD PTR [eax-0x37b75964]
  40e62b:	leave  
  40e62c:	jmp    0x83f8:0x779bd866
  40e633:	dec    esi
  40e634:	(bad)  
  40e635:	sbb    bh,BYTE PTR [ecx-0x25]
  40e638:	addr16 and edi,esp
  40e63b:	sbb    BYTE PTR [ebx],dh
  40e63d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e63e:	inc    edi
  40e63f:	xchg   ebx,eax
  40e640:	sub    esp,DWORD PTR [ebp+ebp*4+0x71]
  40e644:	ds sub al,0x5
  40e647:	mov    ecx,0xbe399e7d
  40e64c:	push   0xe79bdae1
  40e651:	fnsave ds:0x913605ef
  40e657:	xchg   DWORD PTR [ebp+0x73],ebp
  40e65a:	mov    ds:0xcbbc2b84,eax
  40e65f:	mov    ch,0x12
  40e661:	sub    eax,0x3abbfadf
  40e666:	call   0xd2ba:0xe6b912d1
  40e66d:	hlt    
  40e66e:	and    edi,DWORD PTR [ebx]
  40e670:	fbstp  TBYTE PTR [edi]
  40e672:	adc    al,0x49
  40e674:	push   edx
  40e675:	fidiv  WORD PTR [eax]
  40e677:	push   ebx
  40e678:	std    
  40e679:	jmp    0x4c18a31f
  40e67e:	jmp    DWORD PTR [edi+0x11728d13]
  40e684:	mov    ecx,0x12d5ed50
  40e689:	ror    BYTE PTR [ecx+0x25],1
  40e68c:	js     0x40e652
  40e68e:	push   ds
  40e68f:	pop    ss
  40e690:	pop    es
  40e691:	je     0x40e66d
  40e693:	(bad)  
  40e694:	cli    
  40e695:	or     DWORD PTR [ecx-0x77343626],esi
  40e69b:	stos   WORD PTR es:[edi],ax
  40e69d:	sbb    BYTE PTR [edi+0x5364c523],cl
  40e6a3:	push   ebx
  40e6a4:	cmp    ah,bh
  40e6a6:	call   0x769f22f4
  40e6ab:	jge    0x40e636
  40e6ad:	jmp    0x40e713
  40e6af:	xlat   BYTE PTR ds:[ebx]
  40e6b0:	pop    ecx
  40e6b1:	cmp    bl,BYTE PTR [ebp+0x77]
  40e6b4:	out    0x66,eax
  40e6b6:	cld    
  40e6b7:	out    0x25,al
  40e6b9:	jle    0x40e67c
  40e6bb:	xlat   BYTE PTR ds:[ebx]
  40e6bc:	out    0xbd,al
  40e6be:	mov    esp,DWORD PTR [esi+0x6f482534]
  40e6c4:	adc    eax,0x758e3a9b
  40e6c9:	xchg   esp,eax
  40e6ca:	cdq    
  40e6cb:	add    cl,BYTE PTR [edx+edi*2-0x4953f891]
  40e6d2:	mov    fs,WORD PTR [ecx+edi*1-0x7a64f768]
  40e6d9:	cwde   
  40e6da:	cld    
  40e6db:	pushf  
  40e6dc:	fcom   DWORD PTR [edx-0x11]
  40e6df:	in     al,0x2b
  40e6e1:	sub    edx,edi
  40e6e3:	int3   
  40e6e4:	das    
  40e6e5:	jecxz  0x40e766
  40e6e7:	sbb    BYTE PTR [ebp+0x334bf1c3],ch
  40e6ed:	dec    ebp
  40e6ee:	fild   DWORD PTR [edx-0x51]
  40e6f1:	push   esp
  40e6f2:	sub    eax,0xbf85d194
  40e6f7:	pop    edx
  40e6f8:	fidivr DWORD PTR [ebp+ebx*4-0x2b]
  40e6fc:	lea    edi,[ebp-0x34]
  40e6ff:	in     al,0x4e
  40e701:	sub    esi,DWORD PTR [eax+eiz*8+0x40476c4b]
  40e708:	and    eax,0xa34f4b2b
  40e70d:	ja     0x40e77e
  40e70f:	mov    esp,0xc98d1d1f
  40e714:	dec    edx
  40e715:	jp     0x40e6e6
  40e717:	(bad)  [edi+0x59616b42]
  40e71d:	jb     0x40e6ff
  40e71f:	in     eax,0xfb
  40e721:	jp     0x40e79a
  40e723:	lahf   
  40e724:	pop    edi
  40e725:	cmp    eax,DWORD PTR [ecx+0x53]
  40e728:	xchg   edi,eax
  40e729:	sub    BYTE PTR [edx-0x5c],al
  40e72c:	cmp    DWORD PTR [edi+eiz*1-0x3c],esp
  40e730:	mov    ebp,0x52a525f0
  40e735:	call   0xe896db98
  40e73a:	sbb    bl,BYTE PTR [ecx-0x6f4605fa]
  40e740:	iret   
  40e741:	dec    edi
  40e742:	lea    eax,[esi+0x7b3b9e0a]
  40e748:	icebp  
  40e749:	jl     0x40e733
  40e74b:	sub    ah,BYTE PTR [ebx+0x57]
  40e74e:	pop    ecx
  40e74f:	dec    esi
  40e750:	imul   eax,DWORD PTR [edx+0x59440aa4],0x7da39608
  40e75a:	adc    eax,ebp
  40e75c:	pop    ds
  40e75d:	aam    0x8b
  40e75f:	mov    bh,0x63
  40e761:	mov    edi,0x309bf4db
  40e766:	rcl    BYTE PTR [ebx],1
  40e768:	and    al,0xc4
  40e76a:	pushf  
  40e76b:	out    dx,eax
  40e76c:	mov    ecx,eax
  40e76e:	mov    DWORD PTR [ecx],eax
  40e770:	xchg   esp,eax
  40e771:	int    0xc5
  40e773:	cmp    dh,ch
  40e775:	pop    edx
  40e776:	aas    
  40e777:	fild   WORD PTR [esi+0x53]
  40e77a:	lock pusha 
  40e77c:	dec    edx
  40e77d:	pop    es
  40e77e:	fcomp  DWORD PTR [esi+0x156cb39e]
  40e784:	imul   esi,DWORD PTR [ecx+0x5f12b50b],0xf5b217ed
  40e78e:	jecxz  0x40e79e
  40e790:	loope  0x40e7c0
  40e792:	push   ebp
  40e793:	(bad)  
  40e795:	and    BYTE PTR [edi],al
  40e797:	shr    DWORD PTR [ebx-0x6a],1
  40e79a:	pushf  
  40e79b:	mov    edi,0x5203cb67
  40e7a0:	or     edi,eax
  40e7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7a3:	or     ecx,ebp
  40e7a5:	xchg   edx,eax
  40e7a6:	(bad)  
  40e7a7:	xor    al,0x66
  40e7a9:	dec    esp
  40e7aa:	test   DWORD PTR [edi-0x4a],ecx
  40e7ad:	aas    
  40e7ae:	jmp    0xe29dd817
  40e7b3:	out    dx,al
  40e7b4:	mov    ecx,0x60577fb0
  40e7b9:	icebp  
  40e7ba:	xchg   edx,eax
  40e7bb:	mov    edx,0xfd6e720c
  40e7c0:	fisttp WORD PTR [ecx-0x1b]
  40e7c3:	js     0x40e789
  40e7c5:	ins    BYTE PTR es:[edi],dx
  40e7c6:	test   BYTE PTR [edi],0xfc
  40e7c9:	add    DWORD PTR [ebx+0x27],esp
  40e7cc:	and    eax,0x4101f3de
  40e7d1:	jae    0x40e7cb
  40e7d3:	mov    DWORD PTR [esi],esi
  40e7d5:	aaa    
  40e7d6:	fdivr  QWORD PTR [edi+0x739d9312]
  40e7dc:	push   edi
  40e7dd:	ficomp WORD PTR [ebp+0x16]
  40e7e0:	fisttp DWORD PTR [ebx+0x57]
  40e7e3:	cmp    al,0x32
  40e7e5:	jmp    0x40e807
  40e7e7:	xchg   BYTE PTR [edi+0x26],al
  40e7ea:	in     eax,dx
  40e7eb:	inc    BYTE PTR [esi]
  40e7ed:	and    al,0xec
  40e7ef:	adc    eax,0xe7447cb5
  40e7f4:	xor    BYTE PTR [edx+0x42],dh
  40e7f7:	out    dx,eax
  40e7f8:	scas   eax,DWORD PTR es:[edi]
  40e7f9:	sar    ch,cl
  40e7fb:	pop    es
  40e7fc:	inc    eax
  40e7fd:	and    ch,BYTE PTR [eax]
  40e7ff:	lods   al,BYTE PTR ds:[esi]
  40e800:	js     0x40e852
  40e802:	and    dh,0x64
  40e805:	sbb    BYTE PTR [edx+0x6f],0x77
  40e809:	lods   eax,DWORD PTR ds:[esi]
  40e80a:	mov    ebp,0xd0354fc6
  40e80f:	add    al,0x8e
  40e811:	test   eax,0x6f17330c
  40e816:	jmp    0xb8cb88c1
  40e81b:	push   ecx
  40e81c:	aad    0x6
  40e81e:	mov    bl,0x48
  40e820:	test   al,0x54
  40e822:	sbb    DWORD PTR [ebx+0x57251560],eax
  40e828:	mov    dh,0x8c
  40e82a:	cmp    DWORD PTR [ebx],ecx
  40e82c:	dec    ebx
  40e82d:	push   ss
  40e82e:	xor    esp,ebx
  40e830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e831:	std    
  40e832:	xor    DWORD PTR [ebx-0x1bb60bab],ebx
  40e838:	dec    esi
  40e839:	iret   
  40e83a:	scas   al,BYTE PTR es:[edi]
  40e83b:	push   ebx
  40e83c:	sbb    dl,BYTE PTR [eax+0x16]
  40e83f:	adc    al,0x97
  40e841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e842:	lahf   
  40e843:	out    dx,eax
  40e844:	mov    ebp,ebx
  40e846:	in     eax,dx
  40e847:	movhps xmm4,QWORD PTR [eax+esi*1]
  40e84b:	lahf   
  40e84c:	retf   0x4e6e
  40e84f:	lods   al,BYTE PTR ds:[esi]
  40e850:	ror    BYTE PTR [ebp-0x784fed7e],cl
  40e856:	scas   eax,DWORD PTR es:[edi]
  40e857:	and    DWORD PTR [eax-0x49],0x9ec21d60
  40e85e:	outs   dx,DWORD PTR ds:[esi]
  40e85f:	push   es
  40e860:	pop    edi
  40e861:	jge    0x40e870
  40e863:	adc    dl,ah
  40e865:	push   edi
  40e866:	push   ss
  40e867:	icebp  
  40e868:	bnd jl 0x40e83e
  40e86b:	sbb    eax,0xaca00e59
  40e870:	ficomp WORD PTR [ebp-0x394d2381]
  40e876:	ret    0x7c0b
  40e879:	outs   dx,BYTE PTR ds:[esi]
  40e87a:	sub    eax,0xd4f9d162
  40e87f:	push   0x35
  40e881:	stc    
  40e882:	(bad)  
  40e883:	loopne 0x40e850
  40e885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e886:	xchg   ebx,eax
  40e887:	cmp    DWORD PTR [edx],ebx
  40e889:	std    
  40e88a:	xor    ecx,DWORD PTR [ecx+0x5f]
  40e88d:	out    dx,eax
  40e88e:	xor    al,0x97
  40e890:	mov    ebp,0x33f9ac28
  40e895:	arpl   di,ax
  40e897:	out    0xa6,al
  40e899:	jl     0x40e8ae
  40e89b:	and    DWORD PTR [esi+eax*1+0x76],eax
  40e89f:	retf   
  40e8a0:	mov    dl,0x8c
  40e8a2:	or     BYTE PTR [eax+0x4155aa85],bl
  40e8a8:	test   al,0x40
  40e8aa:	cmp    eax,0x4b72c33e
  40e8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b0:	sub    DWORD PTR [edi-0x5a],esp
  40e8b3:	mov    dl,0x94
  40e8b5:	out    dx,eax
  40e8b6:	(bad)  
  40e8b7:	sbb    dh,bh
  40e8b9:	jecxz  0x40e8d8
  40e8bb:	mov    edi,0xf83eb5ce
  40e8c0:	into   
  40e8c1:	jmp    0x9462d51a
  40e8c6:	dec    eax
  40e8c7:	outs   dx,BYTE PTR ds:[esi]
  40e8c8:	nop
  40e8c9:	inc    edx
  40e8ca:	jb     0x40e91b
  40e8cc:	aas    
  40e8cd:	mov    eax,ds:0xb1d4a098
  40e8d2:	jb     0x40e949
  40e8d4:	aad    0x1b
  40e8d6:	rcl    dl,cl
  40e8d8:	fild   QWORD PTR [esi+0x47875770]
  40e8de:	call   0xb27def2d
  40e8e3:	pop    ecx
  40e8e4:	or     ch,BYTE PTR [ebx+edx*2+0x27d83e31]
  40e8eb:	sbb    eax,0x7c35d83c
  40e8f0:	add    BYTE PTR [edx],ah
  40e8f2:	int3   
  40e8f3:	imul   edx,DWORD PTR [edi],0x4d
  40e8f6:	xchg   ecx,eax
  40e8f7:	ss and al,0x2f
  40e8fa:	mov    bl,0x4b
  40e8fc:	sub    eax,0x9eb221c3
  40e901:	sbb    eax,0x3cdc8694
  40e906:	pop    edx
  40e907:	popa   
  40e908:	shr    DWORD PTR [ebx+0x47],cl
  40e90b:	enter  0x5e59,0x32
  40e90f:	stos   BYTE PTR es:[edi],al
  40e910:	jb     0x40e93c
  40e912:	arpl   WORD PTR [edx+0x63],bx
  40e915:	sar    DWORD PTR [edi],0x62
  40e918:	aad    0x98
  40e91a:	inc    ecx
  40e91b:	pop    ebp
  40e91c:	in     al,dx
  40e91d:	ins    BYTE PTR es:[edi],dx
  40e91e:	cmp    DWORD PTR [edi],esp
  40e920:	sub    cl,0xb3
  40e923:	sbb    BYTE PTR ds:0xf4a99fc,bh
  40e929:	inc    edi
  40e92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e92b:	adc    BYTE PTR [edx-0x2a],al
  40e92e:	cs gs mov esi,0x41e46be
  40e935:	outs   dx,DWORD PTR ds:[esi]
  40e936:	loope  0x40e90b
  40e938:	jo     0x40e8bf
  40e93a:	pusha  
  40e93b:	inc    esp
  40e93c:	cmp    eax,0x7057a2a2
  40e941:	xchg   ebx,eax
  40e942:	push   0x3f
  40e944:	loopne 0x40e9b7
  40e946:	rcl    BYTE PTR [edx+0x5a67e550],cl
  40e94c:	loopne 0x40e98d
  40e94e:	adc    DWORD PTR [eax-0x350f5a3f],esi
  40e954:	pop    ecx
  40e955:	adc    dh,BYTE PTR [edx+ecx*4]
  40e958:	test   esi,ecx
  40e95a:	sub    eax,0x5a8203b2
  40e95f:	fstp   TBYTE PTR [edi+0x21213d78]
  40e965:	icebp  
  40e966:	dec    esp
  40e967:	add    esp,0x203c2155
  40e96d:	xor    dl,BYTE PTR [ebp-0x5b]
  40e970:	xor    ecx,DWORD PTR [ebx-0x1e]
  40e973:	sbb    esp,DWORD PTR [edx+0x76]
  40e976:	fld    TBYTE PTR [esp+eiz*2-0x3b]
  40e97a:	les    ebx,FWORD PTR [eax-0x398d703f]
  40e980:	or     dh,dl
  40e982:	shr    DWORD PTR [edi+esi*1-0x30e58136],1
  40e989:	adc    eax,0x83d748b8
  40e98e:	push   0xffffffde
  40e990:	mov    eax,ds:0x5fdbea9d
  40e995:	cwde   
  40e996:	ins    BYTE PTR es:[edi],dx
  40e997:	ins    BYTE PTR es:[edi],dx
  40e998:	sar    BYTE PTR es:[ecx],0x1a
  40e99c:	in     al,dx
  40e99d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e99e:	cmp    al,0x38
  40e9a0:	pop    esp
  40e9a1:	call   0x94fde958
  40e9a6:	pop    ds
  40e9a7:	mov    ebx,0x3d5b6f63
  40e9ac:	push   ss
  40e9ad:	or     eax,0x8c3f7a3e
  40e9b2:	push   es
  40e9b3:	jb     0x40e9c3
  40e9b5:	pop    ebp
  40e9b6:	jae    0x40e9d1
  40e9b8:	enter  0x9878,0xa5
  40e9bc:	inc    ebx
  40e9bd:	xor    cl,BYTE PTR [ebp-0x35ff6127]
  40e9c3:	jno    0x40e9be
  40e9c5:	or     bh,BYTE PTR [edi+eiz*4+0x7]
  40e9c9:	push   edi
  40e9ca:	sub    al,BYTE PTR [edx+0x4641b782]
  40e9d0:	xor    BYTE PTR ds:0x50d5b094,ah
  40e9d6:	fidiv  WORD PTR [eax]
  40e9d8:	in     al,0x1f
  40e9da:	int    0xf4
  40e9dc:	xor    DWORD PTR [edx],ebx
  40e9de:	jg     0x40e961
  40e9e0:	sub    al,0x7b
  40e9e2:	sub    al,0xa9
  40e9e4:	sahf   
  40e9e5:	dec    edx
  40e9e6:	outs   dx,BYTE PTR ds:[esi]
  40e9e7:	jl     0x40ea28
  40e9e9:	retf   
  40e9ea:	dec    BYTE PTR [esi+0x16]
  40e9ed:	inc    edi
  40e9ee:	cmp    ecx,DWORD PTR [esi-0x9e489a3]
  40e9f4:	mov    ds:0xc83dd84b,al
  40e9f9:	sbb    eax,0x81ba2dce
  40e9fe:	push   0xffffff97
  40ea00:	outs   dx,DWORD PTR ds:[esi]
  40ea01:	aas    
  40ea02:	or     BYTE PTR [ebp+0x724f870a],0xe6
  40ea09:	push   es
  40ea0a:	(bad)  
  40ea0b:	pop    ds
  40ea0c:	or     ah,ah
  40ea0e:	pop    ecx
  40ea0f:	adc    eax,0xb7fcabcc
  40ea14:	out    0xf3,eax
  40ea16:	adc    BYTE PTR [edx+0x121f5b53],0xdd
  40ea1d:	cmp    ah,BYTE PTR [ecx-0x36e1c811]
  40ea23:	inc    esi
  40ea24:	int    0xa0
  40ea26:	jmp    0x40ea2c
  40ea28:	cmp    BYTE PTR [esi],dh
  40ea2a:	mov    ecx,0x3e3164b9
  40ea2f:	dec    esp
  40ea30:	bts    DWORD PTR [ebp+ecx*4-0x12],ebx
  40ea35:	mov    dl,0xdc
  40ea37:	xchg   edx,eax
  40ea38:	mov    edi,0x53b1d905
  40ea3d:	mov    ebp,0x46e6a197
  40ea42:	jo     0x40eab8
  40ea44:	pop    edi
  40ea45:	pop    es
  40ea46:	add    eax,0x7f6a3f2c
  40ea4b:	icebp  
  40ea4c:	add    al,0x6
  40ea4e:	cwde   
  40ea4f:	fstp   QWORD PTR [edi+0x3cc372b0]
  40ea55:	add    BYTE PTR [ebx-0x7d],bh
  40ea58:	iret   
  40ea59:	arpl   WORD PTR [ebx-0x21],ax
  40ea5c:	retf   0xe748
  40ea5f:	lds    eax,FWORD PTR [eax+ecx*1-0x6504f56b]
  40ea66:	lahf   
  40ea67:	clc    
  40ea68:	cdq    
  40ea69:	sub    eax,0xd1b69d32
  40ea6e:	or     bl,al
  40ea70:	test   ebx,0x34e79788
  40ea76:	frstor [edx-0x69]
  40ea79:	mov    eax,0xd6fe9517
  40ea7e:	jo     0x40eaf3
  40ea80:	jnp    0x40eaa1
  40ea82:	pop    edx
  40ea83:	addr16 push edx
  40ea85:	mov    dl,0x3b
  40ea87:	adc    al,0xa8
  40ea89:	mov    bl,0xfa
  40ea8b:	jmp    0x40ea39
  40ea8d:	das    
  40ea8e:	or     BYTE PTR [edx+0x65],cl
  40ea91:	mov    ah,0xbe
  40ea93:	iret   
  40ea94:	iret   
  40ea95:	aaa    
  40ea96:	test   ah,dh
  40ea98:	mul    DWORD PTR [edi+0x592ef2b]
  40ea9e:	jp     0x40eacc
  40eaa0:	and    eax,0x13603f51
  40eaa5:	push   cs
  40eaa6:	dec    ebx
  40eaa7:	into   
  40eaa8:	xlat   BYTE PTR ds:[ebx]
  40eaa9:	or     DWORD PTR [edi],ebp
  40eaab:	or     eax,0x9b88c9e8
  40eab0:	inc    eax
  40eab1:	loope  0x40ea42
  40eab3:	pop    edx
  40eab4:	lock cmp eax,0x12cadc43
  40eaba:	in     eax,0x94
  40eabc:	(bad)  
  40eabd:	lea    ebx,[eax+0x6ddcd43e]
  40eac3:	mov    bh,0x4b
  40eac5:	test   eax,0xf68a61ff
  40eaca:	daa    
  40eacb:	or     BYTE PTR ds:0xce9c2154,bl
  40ead1:	sbb    DWORD PTR [esi-0x55cd7d9],ebp
  40ead7:	call   0x14f8957
  40eadc:	test   DWORD PTR [ebp-0x1e72cd21],edx
  40eae2:	cmp    ebx,edi
  40eae4:	xor    BYTE PTR [eax+0x5c],al
  40eae7:	fs dec ebx
  40eae9:	fisub  WORD PTR [edx-0x3861a3eb]
  40eaef:	xor    eax,0x313219f7
  40eaf4:	mov    eax,ds:0x61b4f5bc
  40eaf9:	and    BYTE PTR [eax+0x77],al
  40eafc:	sbb    edi,DWORD PTR [edx+0x503756f8]
  40eb02:	mov    eax,DWORD PTR [eax-0x37424947]
  40eb08:	xchg   edi,eax
  40eb09:	inc    ecx
  40eb0a:	add    dl,0x65
  40eb0d:	mov    esi,0x703cd014
  40eb12:	jp     0x40eb7d
  40eb14:	mov    bh,dh
  40eb16:	lea    edi,[ebx-0x5ef68792]
  40eb1c:	jmp    0x4c0f:0xb6c1285d
  40eb23:	sbb    dl,BYTE PTR [ebx+0x2c59dab8]
  40eb29:	mov    ds:0x8f287342,al
  40eb2e:	das    
  40eb2f:	sbb    edi,edi
  40eb31:	in     eax,dx
  40eb32:	mov    edx,0x552a9c03
  40eb37:	push   ebp
  40eb38:	mov    al,ds:0x3f472d06
  40eb3d:	mov    dh,0x51
  40eb3f:	(bad)  
  40eb40:	inc    ebx
  40eb41:	mov    al,0xc1
  40eb43:	(bad)  
  40eb45:	xchg   ebp,eax
  40eb46:	xorps  xmm6,XMMWORD PTR [esi+0x66]
  40eb4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb4b:	ins    DWORD PTR es:[edi],dx
  40eb4c:	sbb    DWORD PTR [edx+0x72],ebx
  40eb4f:	jmp    0x9119:0x32fe1397
  40eb56:	fidivr WORD PTR [esi-0x55]
  40eb59:	mov    bl,0x6d
  40eb5b:	dec    edi
  40eb5c:	and    esp,eax
  40eb5e:	clc    
  40eb5f:	gs leave 
  40eb61:	push   0x2f9d7b39
  40eb66:	jnp    0x40eba3
  40eb68:	push   es
  40eb69:	push   esi
  40eb6a:	call   0xb52dc4cf
  40eb6f:	xor    ebp,0xffffff8a
  40eb72:	fisttp WORD PTR [edx]
  40eb74:	imul   esp,eax,0xb3739148
  40eb7a:	shl    dh,0x8f
  40eb7d:	in     al,dx
  40eb7e:	push   edi
  40eb7f:	imul   BYTE PTR [edi+ecx*4+0x7e]
  40eb83:	std    
  40eb84:	pusha  
  40eb85:	xchg   edi,eax
  40eb86:	xchg   ebp,eax
  40eb87:	aam    0x34
  40eb89:	ins    DWORD PTR es:[edi],dx
  40eb8a:	fadd   DWORD PTR [eax+0x24]
  40eb8d:	adc    BYTE PTR [edx+0x31],dl
  40eb90:	mov    ch,0x69
  40eb92:	leave  
  40eb93:	ret    
  40eb94:	sbb    BYTE PTR [ebp+0x5b],ch
  40eb97:	or     edi,DWORD PTR [edx]
  40eb99:	lock mov bl,0x27
  40eb9c:	mov    dl,0xb5
  40eb9e:	repz fmul st,st(2)
  40eba1:	test   BYTE PTR [edx+0x48],0xe7
  40eba5:	(bad)
  40eba9:	outs   dx,DWORD PTR ds:[esi]
  40ebaa:	out    0x73,al
  40ebac:	mov    al,ds:0x8d8f3075
  40ebb1:	retf   
  40ebb2:	scas   al,BYTE PTR es:[edi]
  40ebb3:	or     DWORD PTR [esi],0x30781eeb
  40ebb9:	scas   eax,DWORD PTR es:[edi]
  40ebba:	shl    BYTE PTR [ecx],0x8e
  40ebbd:	add    al,BYTE PTR [ebp+0x13]
  40ebc0:	xor    edx,DWORD PTR [ebx+0x35b185db]
  40ebc6:	sar    BYTE PTR [esi],0xfe
  40ebc9:	cld    
  40ebca:	lods   eax,DWORD PTR ds:[esi]
  40ebcb:	mov    bh,0xc7
  40ebcd:	data16 jns 0x40eb8e
  40ebd0:	add    DWORD PTR [edx+0x16f13dc1],eax
  40ebd6:	cs fld st(6)
  40ebd9:	inc    edx
  40ebda:	test   dl,0xf3
  40ebdd:	jge    0x40eb78
  40ebdf:	push   ds
  40ebe0:	xor    al,0x2a
  40ebe2:	or     bl,BYTE PTR ds:0xd469ca5a
  40ebe8:	in     eax,dx
  40ebe9:	cmp    ch,bh
  40ebeb:	jae    0x40ebe6
  40ebed:	mov    ch,0x2a
  40ebef:	in     eax,dx
  40ebf0:	nop
  40ebf1:	shl    DWORD PTR [edx+0x33],cl
  40ebf4:	js     0x40ebee
  40ebf6:	xchg   DWORD PTR [edx],eax
  40ebf8:	pop    ss
  40ebf9:	in     eax,0xb8
  40ebfb:	(bad)  
  40ebfc:	fcmovb st,st(2)
  40ebfe:	pop    esp
  40ebff:	adc    bl,ah
  40ec01:	lods   al,BYTE PTR ds:[esi]
  40ec02:	dec    esi
  40ec03:	mov    ds:0x697e026c,al
  40ec08:	into   
  40ec09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec0a:	xchg   esp,eax
  40ec0b:	scas   al,BYTE PTR es:[edi]
  40ec0c:	mov    ds:0xb2307b0e,al
  40ec11:	and    esi,esi
  40ec13:	and    eax,0x900a4836
  40ec18:	mov    ebx,0x24609d08
  40ec1d:	mov    cl,0x93
  40ec1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec20:	cs (bad) 
  40ec22:	and    al,0xe0
  40ec24:	ja     0x40ec3c
  40ec26:	xchg   esi,eax
  40ec27:	ins    DWORD PTR es:[edi],dx
  40ec28:	sub    bl,BYTE PTR ds:0xf8a257cc
  40ec2e:	aam    0x79
  40ec30:	imul   esi,DWORD PTR [esi-0x9ed3225],0x75
  40ec37:	cmp    ch,dh
  40ec39:	push   ss
  40ec3a:	ins    BYTE PTR es:[edi],dx
  40ec3b:	sub    ch,bl
  40ec3d:	in     eax,0xd7
  40ec3f:	lss    eax,FWORD PTR [ebp-0x55]
  40ec43:	rep lods al,BYTE PTR ds:[esi]
  40ec45:	jb     0x40ec3d
  40ec47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec48:	iret   
  40ec49:	(bad)  
  40ec4a:	std    
  40ec4b:	dec    eax
  40ec4c:	sbb    eax,0x538015f7
  40ec51:	(bad)  
  40ec52:	bound  edx,QWORD PTR [edx-0x13]
  40ec55:	in     eax,0xc6
  40ec57:	imul   edx,esp,0x71c939a0
  40ec5d:	jmp    0x401b9383
  40ec62:	push   ebx
  40ec63:	push   di
  40ec65:	popa   
  40ec66:	mov    edi,0xb338e47b
  40ec6b:	loop   0x40ec00
  40ec6d:	sbb    ecx,DWORD PTR [ebx]
  40ec6f:	ins    BYTE PTR es:[edi],dx
  40ec70:	add    dl,BYTE PTR [eax-0x2b189750]
  40ec76:	sbb    al,0xb8
  40ec78:	and    bh,ch
  40ec7a:	jp     0x40ec27
  40ec7c:	dec    edi
  40ec7d:	jge    0x40ecf1
  40ec7f:	sbb    al,0x45
  40ec81:	pop    ds
  40ec82:	push   es
  40ec83:	xor    DWORD PTR [edx],ecx
  40ec85:	mov    ecx,DWORD PTR [edx+0x12]
  40ec88:	idiv   BYTE PTR [ebp+0x41]
  40ec8b:	repz repnz pop ecx
  40ec8e:	je     0x40ec2f
  40ec90:	and    bl,dl
  40ec92:	retf   0xa15f
  40ec95:	(bad)  
  40ec96:	loop   0x40ed03
  40ec98:	out    0x58,al
  40ec9a:	fistp  WORD PTR [esi+0x2cc35f43]
  40eca0:	mov    edi,0x4418820a
  40eca5:	out    0xa2,al
  40eca7:	add    eax,0x41169ac6
  40ecac:	jmp    0xe223:0xa572c24d
  40ecb3:	add    BYTE PTR [eax],al
  40ecb5:	mov    ecx,0x78bd86c3
  40ecba:	fist   DWORD PTR [ebp+0x1538d523]
  40ecc0:	and    BYTE PTR [esi-0x26],0x33
  40ecc4:	mov    WORD PTR [edx],cs
  40ecc6:	pop    ebx
  40ecc7:	mov    bl,0x9a
  40ecc9:	fstp   QWORD PTR [ebx]
  40eccb:	push   ebp
  40eccc:	mov    ebx,0x7659081c
  40ecd1:	loope  0x40ed02
  40ecd3:	repnz xchg ebp,eax
  40ecd5:	lock xchg ebp,eax
  40ecd7:	mov    ch,0x8d
  40ecd9:	je     0x40ecf9
  40ecdb:	push   ebp
  40ecdc:	std    
  40ecdd:	ds ss clc 
  40ece0:	or     BYTE PTR [ebx+0x36],ah
  40ece3:	jne    0x40ec9e
  40ece5:	mov    BYTE PTR [esi-0x48],cl
  40ece8:	mov    gs:0x4d20b212,eax
  40ecee:	mov    dh,bl
  40ecf0:	sub    esi,ebp
  40ecf2:	cmp    al,0x10
  40ecf4:	jbe    0x40ec87
  40ecf6:	mov    ch,0x9b
  40ecf8:	xlat   BYTE PTR ds:[ebx]
  40ecf9:	les    edi,FWORD PTR [edi]
  40ecfb:	cdq    
  40ecfc:	sub    edx,eax
  40ecfe:	ror    DWORD PTR [ebp-0x40],1
  40ed01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed02:	shl    BYTE PTR [ebp-0x57d26dd8],1
  40ed08:	add    cl,BYTE PTR [edi+0x1e043094]
  40ed0e:	mov    ch,0x13
  40ed10:	add    eax,0xfca5f8fb
  40ed15:	add    esp,ebp
  40ed17:	lds    ecx,FWORD PTR [ecx]
  40ed19:	pop    eax
  40ed1a:	sub    eax,0x51b37a6e
  40ed1f:	cmp    al,0x84
  40ed21:	sub    DWORD PTR [ebx+ecx*1+0x4],0x5e77f3e0
  40ed29:	aas    
  40ed2a:	loope  0x40ecd6
  40ed2c:	xor    dl,BYTE PTR [ecx-0x30b037a1]
  40ed32:	in     al,0xe2
  40ed34:	or     cl,bh
  40ed36:	adc    bl,bh
  40ed38:	js     0x40eceb
  40ed3a:	mov    edi,0x7649af22
  40ed3f:	or     eax,0xce3e89c4
  40ed44:	fbld   TBYTE PTR cs:[ecx]
  40ed47:	cs pop cx
  40ed4a:	sub    eax,0xea62a1bf
  40ed4f:	fidivr WORD PTR [ebp+0x3a]
  40ed52:	inc    ebp
  40ed53:	(bad)  
  40ed55:	jnp    0x40ed42
  40ed57:	loop   0x40ecfd
  40ed59:	xchg   DWORD PTR [esp+edx*1+0x12],edi
  40ed5d:	lahf   
  40ed5e:	pop    ds
  40ed5f:	aaa    
  40ed60:	out    0xcd,al
  40ed62:	dec    esp
  40ed63:	fcmovb st,st(5)
  40ed65:	jecxz  0x40ed9a
  40ed67:	fsub   DWORD PTR [edx]
  40ed69:	xor    dh,BYTE PTR [eax]
  40ed6b:	lods   eax,DWORD PTR ds:[esi]
  40ed6c:	xor    eax,0xae82f804
  40ed71:	fstp   st(6)
  40ed73:	in     eax,0x81
  40ed75:	sub    al,0xf4
  40ed77:	cmp    eax,DWORD PTR [ebp+0x2a]
  40ed7a:	pop    es
  40ed7b:	pop    es
  40ed7c:	sbb    cl,BYTE PTR [ebp+0x35b1c38f]
  40ed82:	inc    esp
  40ed83:	clc    
  40ed84:	repnz mov BYTE PTR [edx],0x7c
  40ed88:	aaa    
  40ed89:	in     al,0xb
  40ed8b:	ror    BYTE PTR [edx+0x2c],1
  40ed8e:	mov    ch,0x8c
  40ed90:	sub    edi,DWORD PTR [ecx]
  40ed92:	adc    ebx,ebx
  40ed94:	jmp    0x279b4189
  40ed99:	adc    BYTE PTR [ebx-0x4f],ch
  40ed9c:	mov    bl,0x3c
  40ed9e:	jge    0x40ed36
  40eda0:	or     BYTE PTR fs:[esi+0x26],ch
  40eda4:	jne    0x40ee14
  40eda6:	adc    eax,DWORD PTR [eax+0x4b]
  40eda9:	inc    edi
  40edaa:	cmp    cl,BYTE PTR [edi-0x1d497c53]
  40edb0:	push   esi
  40edb1:	adc    ebx,DWORD PTR [edx]
  40edb3:	and    DWORD PTR [ecx+esi*1],edx
  40edb6:	jmp    FWORD PTR ds:0x18aa767a
  40edbc:	outs   dx,BYTE PTR ds:[esi]
  40edbd:	push   ss
  40edbe:	xor    edx,esp
  40edc0:	(bad)  
  40edc1:	imul   ebx,DWORD PTR [edx+0x32c12f48],0x3a0881da
  40edcb:	sti    
  40edcc:	mov    dh,0x2
  40edce:	jns    0x40edf7
  40edd0:	mov    bh,0x84
  40edd2:	jb     0x40ee13
  40edd4:	(bad)  
  40edd6:	call   0x56a1:0x3c1d53e
  40eddd:	popf   
  40edde:	adc    DWORD PTR [ebp-0x6e],ecx
  40ede1:	in     eax,0x5b
  40ede3:	retf   0x87e3
  40ede6:	dec    esi
  40ede7:	loope  0x40ee21
  40ede9:	test   eax,0x8eb01bee
  40edee:	mov    edx,0x1559b461
  40edf3:	fmul   st(4),st
  40edf5:	(bad)  
  40edf6:	je     0x40ee71
  40edf8:	inc    ebx
  40edf9:	and    bl,BYTE PTR [ebx+eiz*2+0x70]
  40edfd:	inc    ecx
  40edfe:	mov    ds:0xb5340f01,eax
  40ee03:	js     0x40edba
  40ee05:	inc    ebp
  40ee06:	stos   DWORD PTR es:[edi],eax
  40ee07:	dec    esp
  40ee08:	or     bl,BYTE PTR [edx+edi*1]
  40ee0b:	rol    DWORD PTR [eax+0x570795c7],1
  40ee11:	push   esi
  40ee12:	dec    esi
  40ee13:	push   esi
  40ee14:	push   esi
  40ee15:	fld    TBYTE PTR [edx]
  40ee17:	(bad)  
  40ee18:	mov    eax,0xf61fdca2
  40ee1d:	ret    0x5d6a
  40ee20:	inc    esi
  40ee21:	call   0x76d9:0xc7e6f55d
  40ee28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee29:	jb     0x40ee9d
  40ee2b:	stos   BYTE PTR es:[edi],al
  40ee2c:	xor    ebp,DWORD PTR ds:[edx]
  40ee2f:	aaa    
  40ee30:	fdiv   DWORD PTR [ebx*2+0x4779c241]
  40ee37:	cli    
  40ee38:	dec    ebp
  40ee39:	and    eax,0xdfad3033
  40ee3e:	jg     0x40ee70
  40ee40:	fnsave [edi-0x3c]
  40ee43:	inc    ebp
  40ee44:	cli    
  40ee45:	jb     0x40edf0
  40ee47:	leave  
  40ee48:	push   cs
  40ee49:	jb     0x40ee32
  40ee4b:	jle    0x40eddd
  40ee4d:	inc    ebx
  40ee4e:	das    
  40ee4f:	dec    ebp
  40ee50:	pushf  
  40ee51:	test   eax,0xe2624756
  40ee56:	icebp  
  40ee57:	cs adc al,0xc3
  40ee5a:	jle    0x40ede7
  40ee5c:	sub    DWORD PTR [edi-0xc37159],edx
  40ee62:	scas   al,BYTE PTR es:[edi]
  40ee63:	es sti 
  40ee65:	jge    0x40ee82
  40ee67:	and    esi,eax
  40ee69:	cmp    DWORD PTR [ebp+0x4f],0xddc0d552
  40ee70:	xchg   esp,eax
  40ee71:	add    ah,dh
  40ee73:	cs push edx
  40ee75:	mov    bh,0x6b
  40ee77:	pop    ebp
  40ee78:	imul   ebp,DWORD PTR [esi+0x18],0xd38db340
  40ee7f:	mov    edi,0xf5743b37
  40ee84:	or     BYTE PTR [ebx],0xbe
  40ee87:	je     0x40eebf
  40ee89:	push   cs
  40ee8a:	pop    edx
  40ee8b:	dec    esi
  40ee8c:	mov    eax,0x9e55d3a
  40ee91:	mov    esp,0xf98e0c3d
  40ee96:	std    
  40ee97:	xchg   ebx,eax
  40ee98:	fnstcw WORD PTR [edx-0x23]
  40ee9b:	repnz xchg edx,eax
  40ee9d:	scas   eax,DWORD PTR es:[edi]
  40ee9e:	pop    ecx
  40ee9f:	(bad)  
  40eea0:	aaa    
  40eea1:	out    dx,eax
  40eea2:	out    dx,al
  40eea3:	scas   al,BYTE PTR es:[edi]
  40eea4:	mov    DWORD PTR [edx+0x13192d5f],ecx
  40eeaa:	cmp    eax,0xbb7e1b6e
  40eeaf:	int3   
  40eeb0:	fwait
  40eeb1:	pop    eax
  40eeb2:	jbe    0x40ef23
  40eeb4:	or     ah,BYTE PTR [esi+0x3d40bfdf]
  40eeba:	pop    ecx
  40eebb:	shl    BYTE PTR [eax+0x78d55e10],1
  40eec1:	imul   ebx,DWORD PTR [esi-0x4bc11677],0xfffffff9
  40eec8:	sub    DWORD PTR [ebx+0x14],ebp
  40eecb:	das    
  40eecc:	repz imul ebp,esp,0x45
  40eed0:	dec    ebx
  40eed1:	or     eax,0xa6bb4a9f
  40eed6:	not    edx
  40eed8:	push   ebp
  40eed9:	int3   
  40eeda:	test   eax,0xeacf6374
  40eedf:	repnz pop ds
  40eee1:	sub    edx,DWORD PTR [ebx+edi*1-0x19386fe9]
  40eee8:	fadd   DWORD PTR [eax]
  40eeea:	mov    BYTE PTR [ecx],ah
  40eeec:	add    ah,BYTE PTR [edi]
  40eeee:	xor    al,0xe2
  40eef0:	inc    esi
  40eef1:	dec    esp
  40eef2:	fst    st(3)
  40eef4:	pop    ebp
  40eef5:	sub    eax,0x5b2cfc8e
  40eefa:	inc    edx
  40eefb:	icebp  
  40eefc:	dec    edi
  40eefd:	jle    0x40ef1c
  40eeff:	std    
  40ef00:	lds    ebp,FWORD PTR [ebx+0x52]
  40ef03:	add    BYTE PTR ds:0xb7594280,bl
  40ef09:	stos   BYTE PTR es:[edi],al
  40ef0a:	div    ebx
  40ef0c:	cmp    al,0xd8
  40ef0e:	in     al,0xaf
  40ef10:	fadd   QWORD PTR [esi]
  40ef12:	(bad)  
  40ef13:	cwde   
  40ef14:	test   DWORD PTR [esi+0x1a],esp
  40ef17:	push   cs
  40ef18:	pushf  
  40ef19:	test   BYTE PTR [edi+0x6e],al
  40ef1c:	mov    es,WORD PTR [ebp+0x4ec0ad3e]
  40ef22:	std    
  40ef23:	ins    DWORD PTR es:[edi],dx
  40ef24:	sub    al,0x73
  40ef26:	fsubrp st(3),st
  40ef28:	jnp    0x40eed1
  40ef2a:	jp     0x40eecd
  40ef2c:	dec    ebx
  40ef2d:	xor    ebx,DWORD PTR [edi+0x1]
  40ef30:	gs test dh,ch
  40ef33:	mov    dh,0xf9
  40ef35:	mov    ebx,0xc57f9469
  40ef3a:	in     al,0x65
  40ef3c:	jnp    0x40ef16
  40ef3e:	rol    BYTE PTR [esi+0x3f5e3afd],1
  40ef44:	push   ds
  40ef45:	pop    ebp
  40ef46:	jl     0x40ef6a
  40ef48:	mov    eax,ds:0x8933e57b
  40ef4d:	aaa    
  40ef4e:	mov    edx,0xf9335418
  40ef53:	imul   BYTE PTR [ecx-0x2c6b018e]
  40ef59:	push   esp
  40ef5a:	mov    eax,0x612debb4
  40ef5f:	pop    edx
  40ef60:	(bad)  
  40ef61:	xchg   esp,eax
  40ef62:	xlat   BYTE PTR ds:[ebx]
  40ef63:	mov    dl,0x33
  40ef65:	push   cs
  40ef66:	push   esi
  40ef67:	or     bh,BYTE PTR [ecx]
  40ef69:	hlt    
  40ef6a:	xor    eax,0xc9d2769d
  40ef6f:	jne    0x40ef8c
  40ef71:	xchg   ebx,eax
  40ef72:	pop    ebx
  40ef73:	adc    edx,DWORD PTR [esi+0x54]
  40ef76:	outs   dx,DWORD PTR ds:[esi]
  40ef77:	stos   BYTE PTR es:[edi],al
  40ef78:	int3   
  40ef79:	pop    ebp
  40ef7a:	shr    DWORD PTR [eiz*8-0x11489a9d],0xfe
  40ef82:	or     esp,DWORD PTR [eax+0x55035287]
  40ef88:	sbb    eax,0x7e9f19f2
  40ef8d:	aas    
  40ef8e:	inc    eax
  40ef8f:	push   esi
  40ef90:	pop    ecx
  40ef91:	jg     0x40ef31
  40ef93:	jle    0x40ef30
  40ef95:	ins    BYTE PTR es:[edi],dx
  40ef96:	push   ds
  40ef97:	push   0xffffffdd
  40ef99:	bound  edi,QWORD PTR [ebx-0x20]
  40ef9c:	sub    DWORD PTR [edx-0x3b],edi
  40ef9f:	push   ds
  40efa0:	push   esp
  40efa1:	mov    cl,0xe9
  40efa3:	mov    edx,0xd8746345
  40efa8:	or     dl,dl
  40efaa:	dec    edx
  40efab:	dec    esp
  40efac:	sbb    al,0x53
  40efae:	push   cs
  40efaf:	fimul  DWORD PTR [eax+0x63]
  40efb2:	gs inc eax
  40efb4:	rol    BYTE PTR [ecx+0x8],0x89
  40efb8:	mov    ebp,0x5fde00ea
  40efbd:	stos   DWORD PTR es:[edi],eax
  40efbe:	nop
  40efbf:	adc    esp,eax
  40efc1:	xor    BYTE PTR [edi+0x1a],0x89
  40efc5:	scas   eax,DWORD PTR es:[edi]
  40efc6:	mov    ecx,esi
  40efc8:	mov    bh,al
  40efca:	pop    eax
  40efcb:	add    eax,0xea940b5e
  40efd0:	repnz icebp 
  40efd2:	(bad)  
  40efd3:	push   cs
  40efd4:	push   ecx
  40efd5:	stc    
  40efd6:	fmul   st,st(4)
  40efd8:	int3   
  40efd9:	dec    edi
  40efda:	jae    0x40ef9d
  40efdc:	mov    WORD PTR [edi-0x1257428c],es
  40efe2:	out    0xe1,al
  40efe4:	les    edx,FWORD PTR [ecx-0x53007cc2]
  40efea:	push   es
  40efeb:	arpl   WORD PTR [ebx+0x2f502e9c],di
  40eff1:	les    esi,FWORD PTR [ebp+0x767392ed]
  40eff7:	ins    DWORD PTR es:[edi],dx
  40eff8:	ins    BYTE PTR es:[edi],dx
  40eff9:	(bad)  [ebx-0xe5945ef]
  40efff:	fadd   DWORD PTR [eax]
  40f001:	in     al,0x1a
  40f003:	mov    dl,0xe5
  40f005:	outs   dx,DWORD PTR ds:[esi]
  40f006:	das    
  40f007:	or     eax,0x9207605b
  40f00c:	outs   dx,BYTE PTR ds:[esi]
  40f00d:	loopne 0x40efe0
  40f00f:	adc    ch,bh
  40f011:	lods   al,BYTE PTR ds:[esi]
  40f012:	inc    eax
  40f013:	aas    
  40f014:	jle    0x40f076
  40f016:	jge    0x40f06f
  40f018:	addr16 dec ecx
  40f01a:	je     0x40efb3
  40f01c:	inc    ebx
  40f01d:	clc    
  40f01e:	js     0x40efda
  40f020:	dec    DWORD PTR [ecx+0x68]
  40f023:	push   eax
  40f024:	out    dx,eax
  40f025:	in     eax,0x92
  40f027:	test   al,0x4a
  40f029:	cmp    DWORD PTR [ecx],0x98a70935
  40f02f:	lods   al,BYTE PTR ds:[esi]
  40f030:	daa    
  40f031:	adc    BYTE PTR [esi+0x6f],dh
  40f034:	aaa    
  40f035:	sbb    al,0x67
  40f037:	stos   BYTE PTR es:[edi],al
  40f038:	retf   
  40f039:	cmc    
  40f03a:	push   cs
  40f03b:	cmp    DWORD PTR [esi],0xffffffa8
  40f03e:	dec    edx
  40f03f:	adc    al,0xd1
  40f041:	cwde   
  40f042:	shl    DWORD PTR [ecx+0x67],1
  40f045:	sahf   
  40f046:	loop   0x40f043
  40f048:	jmp    0x40efd6
  40f04a:	(bad)  
  40f04b:	icebp  
  40f04c:	fdiv   DWORD PTR [ebp-0x6090dcf4]
  40f052:	leave  
  40f053:	dec    ebp
  40f054:	xor    DWORD PTR [edx+eax*4],edi
  40f057:	mov    edx,0xe5c028f4
  40f05c:	imul   esi,DWORD PTR [ebp+0x46],0xffffff97
  40f060:	cs xchg esi,eax
  40f062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f063:	nop
  40f064:	repnz and al,0xc2
  40f067:	outs   dx,BYTE PTR ds:[esi]
  40f068:	sbb    al,0x5
  40f06a:	mov    ch,0x43
  40f06c:	call   0xeb0f0840
  40f071:	cmp    al,0x12
  40f073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f074:	xor    al,0xc9
  40f076:	xor    edx,eax
  40f078:	pop    ss
  40f079:	push   0x29
  40f07b:	dec    eax
  40f07c:	mov    edi,0x8dd9445d
  40f082:	or     DWORD PTR [ebx],0x26491632
  40f088:	push   ecx
  40f089:	sbb    eax,DWORD PTR [edx]
  40f08b:	iret   
  40f08c:	or     al,0xf9
  40f08e:	loop   0x40f022
  40f090:	clc    
  40f091:	cli    
  40f092:	push   esi
  40f093:	xor    ebx,edi
  40f095:	retf   
  40f096:	cwde   
  40f097:	jne    0x40f0c1
  40f099:	aas    
  40f09a:	dec    eax
  40f09b:	fwait
  40f09c:	pop    ecx
  40f09d:	cwde   
  40f09e:	cmp    esp,edx
  40f0a0:	mov    esi,0xf5f0d511
  40f0a5:	sbb    ch,ah
  40f0a7:	sub    eax,DWORD PTR [ebx]
  40f0a9:	(bad)  
  40f0ab:	imul   esp,DWORD PTR [ebx+esi*8-0x659301dc],0x2cf32ce3
  40f0b6:	lods   al,BYTE PTR ds:[esi]
  40f0b7:	xchg   edi,eax
  40f0b8:	aad    0x80
  40f0ba:	test   BYTE PTR ss:[eax+0x2d],ah
  40f0be:	sub    cl,dl
  40f0c0:	pusha  
  40f0c1:	mov    edi,0xaf791546
  40f0c6:	jno    0x40f107
  40f0c8:	out    dx,eax
  40f0c9:	ins    DWORD PTR es:[edi],dx
  40f0ca:	or     al,0x69
  40f0cc:	sbb    DWORD PTR [esi+0x31fe4f7d],ebx
  40f0d2:	pop    ds
  40f0d3:	adc    ebx,DWORD PTR [ebp+edx*4+0x7c1fe3dd]
  40f0da:	mov    bh,0xa7
  40f0dc:	and    DWORD PTR [edi+ebp*2-0x51],0xffffffe0
  40f0e1:	cli    
  40f0e2:	in     eax,dx
  40f0e3:	ret    0xce12
  40f0e6:	xchg   BYTE PTR [ebx-0x2e],ah
  40f0e9:	scas   al,BYTE PTR es:[edi]
  40f0ea:	inc    ebp
  40f0eb:	jbe    0x40f0ed
  40f0ed:	and    eax,0x9193bab0
  40f0f2:	ins    DWORD PTR es:[edi],dx
  40f0f3:	out    dx,eax
  40f0f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0f5:	enter  0x9c34,0xe2
  40f0f9:	lods   al,BYTE PTR ds:[esi]
  40f0fa:	fild   QWORD PTR [eax-0xf]
  40f0fd:	js     0x40f089
  40f0ff:	pop    esp
  40f100:	inc    edi
  40f101:	aad    0xd3
  40f103:	mov    dl,0xc8
  40f105:	je     0x40f094
  40f107:	jle    0x40f0fc
  40f109:	mov    cl,0xf5
  40f10b:	and    cl,BYTE PTR [eax-0x6666ec11]
  40f111:	fwait
  40f112:	int3   
  40f113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f114:	outs   dx,DWORD PTR ds:[esi]
  40f115:	aaa    
  40f116:	jmp    0x40f182
  40f118:	retf   0x7dac
  40f11b:	and    eax,0x7ff0b56b
  40f120:	cmp    eax,0x2850bd70
  40f125:	loop   0x40f146
  40f127:	and    DWORD PTR [ecx-0x79],edi
  40f12a:	xor    eax,0x2fa192d4
  40f12f:	dec    ebp
  40f130:	inc    esp
  40f131:	mov    bl,0xe7
  40f133:	(bad)  
  40f136:	rol    DWORD PTR [edi],0x71
  40f139:	add    DWORD PTR [eax-0x11beebb9],esp
  40f13f:	sbb    DWORD PTR [esi-0x2c],ebx
  40f142:	dec    edi
  40f143:	xchg   ebp,eax
  40f144:	jns    0x40f155
  40f146:	xor    dl,BYTE PTR [ebx]
  40f148:	repz into 
  40f14a:	mov    dl,0xd8
  40f14c:	push   0xffffff8b
  40f14e:	js     0x40f1ce
  40f150:	(bad)  
  40f151:	jno    0x40f12b
  40f153:	cmp    eax,0x961cd8c1
  40f158:	push   esi
  40f159:	in     al,dx
  40f15a:	mov    dh,0xd7
  40f15c:	sar    DWORD PTR [esi],cl
  40f15e:	or     al,0x1a
  40f160:	mov    esp,0xd53c61b8
  40f165:	mov    WORD PTR [eax-0x3b321725],cs
  40f16b:	ret    0x7f61
  40f16e:	pop    edx
  40f16f:	loopne 0x40f1cf
  40f171:	mov    ds:0x7273bbbf,al
  40f176:	xchg   ebx,eax
  40f177:	mov    ss,WORD PTR [esi+0x5f005a0d]
  40f17d:	pop    esp
  40f17e:	jne    0x40f1fd
  40f180:	mov    WORD PTR [esi-0x433a4bfe],es
  40f186:	dec    esp
  40f187:	arpl   WORD PTR [ebp+0x5c],sp
  40f18a:	sub    dl,BYTE PTR [eax+0x19]
  40f18d:	sbb    al,0x9f
  40f18f:	arpl   WORD PTR [ecx],di
  40f191:	pop    ds
  40f192:	jae    0x40f13d
  40f194:	jae    0x40f178
  40f196:	push   cs
  40f197:	dec    esp
  40f198:	xor    DWORD PTR [eax+0x79726dfe],ecx
  40f19e:	cmp    esp,DWORD PTR cs:[edi-0x35]
  40f1a2:	sahf   
  40f1a3:	cmc    
  40f1a4:	dec    esp
  40f1a5:	adc    al,0xfa
  40f1a7:	and    edi,DWORD PTR [esi-0x489e0f6b]
  40f1ad:	xor    edi,DWORD PTR [ebx-0x7fb57f44]
  40f1b3:	fcom   DWORD PTR [esi]
  40f1b5:	cli    
  40f1b6:	test   DWORD PTR [edi+0x4e43c5ce],0x863caab7
  40f1c0:	sahf   
  40f1c1:	(bad)  
  40f1c2:	in     al,0xd3
  40f1c4:	clc    
  40f1c5:	sbb    esi,0x674aff66
  40f1cb:	mov    ds:0x42b0bf66,al
  40f1d0:	out    0x3a,al
  40f1d2:	adc    al,0xcc
  40f1d4:	ret    0xd7a4
  40f1d7:	xchg   edi,ebp
  40f1d9:	cmp    eax,0x6a6fc82d
  40f1de:	jae    0x40f16f
  40f1e0:	push   eax
  40f1e1:	bound  edx,QWORD PTR [esi+0x2da8ba0f]
  40f1e7:	js     0x40f191
  40f1e9:	or     esp,DWORD PTR [edx-0x7b362705]
  40f1ef:	ss adc al,0xef
  40f1f2:	fadd   DWORD PTR [edi]
  40f1f4:	lods   al,BYTE PTR ds:[esi]
  40f1f5:	jnp    0x40f20e
  40f1f7:	bound  esp,QWORD PTR [ebx+0x71]
  40f1fa:	and    BYTE PTR [edi+0x6a],ch
  40f1fd:	push   edi
  40f1fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ff:	mov    eax,0x598f69c
  40f204:	icebp  
  40f205:	mov    dl,0x84
  40f207:	aaa    
  40f208:	shl    DWORD PTR [ecx+0x58],1
  40f20b:	jle    0x40f23f
  40f20d:	pop    ss
  40f20e:	hlt    
  40f20f:	sub    eax,0xbc4e76d1
  40f214:	bound  eax,QWORD PTR ds:0x682e5c40
  40f21a:	push   cs
  40f21b:	pop    esp
  40f21c:	xor    DWORD PTR [edi-0x76],ebp
  40f21f:	jmp    0x6781:0xef838270
  40f226:	ds cld 
  40f228:	mov    ds:0x1ae2b7d7,al
  40f22d:	adc    DWORD PTR [eax-0x6bffddff],esp
  40f233:	dec    esi
  40f234:	aaa    
  40f235:	mov    cl,0xea
  40f237:	stos   BYTE PTR es:[edi],al
  40f238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f239:	jmp    0x40f237
  40f23b:	dec    esp
  40f23c:	(bad)  
  40f23d:	xchg   ebx,eax
  40f23e:	repnz rol BYTE PTR [edi-0x1],0xce
  40f243:	inc    DWORD PTR [ebx-0x6f79730f]
  40f249:	dec    ecx
  40f24a:	hlt    
  40f24b:	dec    DWORD PTR cs:[ebp-0x64]
  40f24f:	mov    esp,0x9e2f7276
  40f254:	pop    ecx
  40f255:	retf   
  40f256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f257:	add    eax,0x8c48f46f
  40f25c:	inc    ebp
  40f25d:	not    DWORD PTR [edi+0x2bfd832]
  40f263:	cwde   
  40f264:	(bad)  
  40f265:	sbb    ecx,edi
  40f267:	xlat   BYTE PTR ds:[ebx]
  40f268:	imul   BYTE PTR [edi+0x5f]
  40f26b:	lock lods eax,DWORD PTR ss:[esi]
  40f26e:	cdq    
  40f26f:	lock mov eax,ds:0x51473924
  40f275:	(bad)  
  40f276:	in     eax,0x3c
  40f278:	test   ebx,esp
  40f27a:	xlat   BYTE PTR ds:[ebx]
  40f27b:	xlat   BYTE PTR ds:[ebx]
  40f27c:	mov    esp,DWORD PTR [eax-0x32]
  40f27f:	imul   eax,ebp,0x65
  40f282:	sbb    DWORD PTR [ebx+0x5b9d9349],ecx
  40f288:	fidivr WORD PTR [eax]
  40f28a:	mov    ds,WORD PTR [ecx]
  40f28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28d:	mov    esi,0x24d94cf1
  40f292:	push   ebx
  40f293:	add    dl,BYTE PTR [esi]
  40f295:	cmp    esi,DWORD PTR [edi-0x7]
  40f298:	lock xchg ebp,eax
  40f29a:	stos   BYTE PTR es:[edi],al
  40f29b:	(bad)  
  40f29d:	mov    eax,0x284f15ca
  40f2a2:	push   es
  40f2a3:	test   BYTE PTR [ebp-0x36],bh
  40f2a6:	ret    
  40f2a7:	jg     0x40f2f7
  40f2a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2aa:	add    ecx,esi
  40f2ac:	in     eax,0x10
  40f2ae:	(bad)
  40f2b2:	fisubr DWORD PTR ds:0x87c92dad
  40f2b8:	(bad)  
  40f2ba:	push   es
  40f2bb:	mov    al,ds:0x3b1612e3
  40f2c0:	push   ds
  40f2c1:	push   eax
  40f2c2:	pop    edi
  40f2c3:	data16 scas al,BYTE PTR es:[edi]
  40f2c5:	(bad)  
  40f2c6:	ins    DWORD PTR es:[edi],dx
  40f2c7:	mov    edx,0xfe5d5d11
  40f2cc:	fld    DWORD PTR [esi+ebp*4-0x3a]
  40f2d0:	pop    ebp
  40f2d1:	mov    BYTE PTR [esi-0x1e],cl
  40f2d4:	aam    0xa1
  40f2d6:	nop
  40f2d7:	cmp    esp,DWORD PTR [eax+0x3d8b57ef]
  40f2dd:	(bad)  
  40f2de:	js     0x40f352
  40f2e0:	sar    BYTE PTR [ecx+ecx*8],1
  40f2e3:	stc    
  40f2e4:	mov    edi,0xd8fb2881
  40f2e9:	xchg   edi,eax
  40f2ea:	js     0x40f32c
  40f2ec:	jb     0x40f315
  40f2ee:	pop    ebp
  40f2ef:	inc    ebx
  40f2f0:	dec    ebx
  40f2f1:	imul   edx,DWORD PTR [eax-0x1b],0xffffff9a
  40f2f5:	ror    BYTE PTR [esi+ecx*8+0x4c45a920],0x4
  40f2fd:	scas   al,BYTE PTR es:[edi]
  40f2fe:	pushf  
  40f2ff:	fld    st(5)
  40f301:	push   ecx
  40f302:	pop    ds
  40f303:	mov    ds:0x528bccbb,eax
  40f308:	int    0x7c
  40f30a:	dec    ebp
  40f30b:	lods   eax,DWORD PTR ds:[esi]
  40f30c:	push   edx
  40f30d:	and    DWORD PTR [ebx+ebp*2],0xb4dbd800
  40f314:	xchg   ebp,eax
  40f315:	fst    QWORD PTR [edx+0x28]
  40f318:	daa    
  40f319:	(bad)  
  40f31b:	in     al,0x43
  40f31d:	cld    
  40f31e:	mov    eax,ds:0xb04f2ad3
  40f323:	out    dx,eax
  40f324:	adc    DWORD PTR [esi-0x57704ab4],esi
  40f32a:	jo     0x40f2e7
  40f32c:	mov    ah,0x89
  40f32e:	into   
  40f32f:	(bad)  
  40f330:	push   edi
  40f331:	mov    bl,BYTE PTR [esi+0x1bdddd7d]
  40f337:	pop    ebp
  40f338:	loop   0x40f30c
  40f33a:	test   eax,0xaaea094a
  40f33f:	popa   
  40f340:	iret   
  40f341:	dec    eax
  40f342:	ret    
  40f343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f344:	retf   0x6787
  40f347:	inc    ebx
  40f348:	icebp  
  40f349:	jp     0x40f3aa
  40f34b:	xlat   BYTE PTR ds:[ebx]
  40f34c:	sub    al,0x2e
  40f34e:	fidiv  WORD PTR [ebp-0x6169f24f]
  40f354:	loopne 0x40f313
  40f356:	cs out 0xd,eax
  40f359:	ficomp DWORD PTR [esi]
  40f35b:	mov    ebp,0xef0fb7eb
  40f360:	cdq    
  40f361:	aam    0xc2
  40f363:	test   DWORD PTR [ecx],esp
  40f365:	dec    ebp
  40f366:	jae    0x40f3c0
  40f368:	xchg   ebp,eax
  40f369:	push   edx
  40f36a:	hlt    
  40f36b:	and    eax,0xb35ef79a
  40f370:	call   FWORD PTR [ecx-0x52]
  40f373:	popa   
  40f374:	xchg   esp,eax
  40f375:	ins    DWORD PTR es:[edi],dx
  40f376:	mov    WORD PTR [esi+0xa],?
  40f379:	sbb    BYTE PTR ds:[esi],ch
  40f37c:	(bad)  
  40f37d:	mov    ebx,DWORD PTR ds:[ebx+ecx*4+0x1a]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x493fa6a8,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	jnp    0x40f46a
  40f485:	sahf   
  40f486:	add    BYTE PTR [edi-0x7f],ah
  40f489:	mov    ebp,0x162d1c0b
  40f48e:	jns    0x40f4da
  40f490:	(bad)  
  40f491:	(bad)  
  40f493:	leave  
  40f494:	out    0x7,eax
  40f496:	call   0x761c:0x4e75c5cf
  40f49d:	(bad)  
  40f49e:	sar    DWORD PTR [esi-0x4398fa85],1
  40f4a4:	jle    0x40f4b0
  40f4a6:	mul    DWORD PTR [ebx+0x5c]
  40f4a9:	mov    dl,0x79
  40f4ab:	mov    bh,0x28
  40f4ad:	pushf  
  40f4ae:	fist   WORD PTR [ecx+0x3f1cb4b2]
  40f4b4:	xor    DWORD PTR [ecx+0x71a49b8f],edx
  40f4ba:	cli    
  40f4bb:	nop    DWORD PTR [esi]
  40f4be:	and    bl,BYTE PTR ds:0x99fbe6a2
  40f4c4:	(bad)  
  40f4c5:	mov    bl,0x88
  40f4c7:	jns    0x40f50a
  40f4c9:	mov    ds:0xbd5ce9f5,al
  40f4ce:	pushf  
  40f4cf:	ret    
  40f4d0:	xor    DWORD PTR [esp+eax*2-0x5c6af105],esi
  40f4d7:	cwde   
  40f4d8:	test   esi,edi
  40f4da:	xor    eax,0xa66e9141
  40f4df:	scas   eax,DWORD PTR es:[edi]
  40f4e0:	iret   
  40f4e1:	jle    0x40f562
  40f4e3:	out    dx,eax
  40f4e4:	popf   
  40f4e5:	imul   esi,ebp,0xf048f808
  40f4eb:	rcr    edi,0x10
  40f4ee:	push   esp
  40f4ef:	cmp    bl,ch
  40f4f1:	or     eax,0x832422d0
  40f4f6:	ds ffree st(0)
  40f4f9:	push   ebp
  40f4fa:	rcr    dh,cl
  40f4fc:	mov    al,ds:0xfe9830b8
  40f501:	es xchg ebx,eax
  40f503:	inc    edi
  40f504:	loop   0x40f4ef
  40f506:	pop    ecx
  40f507:	cwde   
  40f508:	ss sahf 
  40f50a:	and    al,dh
  40f50c:	fcmovb st,st(6)
  40f50e:	push   ecx
  40f50f:	ret    0x6e37
  40f512:	and    DWORD PTR [edx],ecx
  40f514:	aam    0x28
  40f516:	ins    DWORD PTR es:[edi],dx
  40f517:	imul   eax,DWORD PTR [edi+eiz*1],0x12
  40f51b:	gs and ebx,ebx
  40f51e:	loope  0x40f51d
  40f520:	lahf   
  40f521:	push   eax
  40f522:	mov    cl,0x2c
  40f524:	in     eax,0x62
  40f526:	pop    ebx
  40f527:	fbstp  TBYTE PTR [ebp-0x65]
  40f52a:	mov    al,0xd7
  40f52c:	cmp    eax,0x8f1cc35a
  40f531:	je     0x40f525
  40f533:	jne    0x40f564
  40f535:	mov    bh,0xef
  40f537:	test   eax,0xa76a5a18
  40f53c:	xchg   esp,eax
  40f53d:	pop    ss
  40f53e:	adc    al,0xd7
  40f540:	mov    al,ds:0xa6e035f5
  40f545:	jae    0x40f59f
  40f547:	mov    edx,ebp
  40f549:	pop    esp
  40f54a:	aas    
  40f54b:	cs out 0x1f,al
  40f54e:	ror    DWORD PTR [edx+0x5d],0xa7
  40f552:	jl     0x40f522
  40f554:	(bad)  
  40f556:	repz call 0x486f:0x4b07bcc3
  40f55e:	xchg   edi,eax
  40f55f:	xor    ch,BYTE PTR [ebp+0x0]
  40f562:	ror    DWORD PTR [eax],cl
  40f564:	mov    edx,0x8022cc08
  40f569:	add    edi,ebp
  40f56b:	shl    bh,0x78
  40f56e:	inc    edx
  40f56f:	imul   eax,DWORD PTR [esi],0xfffffffc
  40f572:	mov    DWORD PTR [ebx+0x58],eax
  40f575:	mov    dl,BYTE PTR [eax+0x18c104d0]
  40f57b:	mov    ds:0x42a9d852,eax
  40f580:	cmp    ecx,DWORD PTR [ebx+0x4e]
  40f583:	and    BYTE PTR [edi+0x215aa88f],cl
  40f589:	cmp    ebp,edi
  40f58b:	sti    
  40f58c:	and    edx,DWORD PTR [eax+ebp*8+0x27]
  40f590:	aas    
  40f591:	pop    ebx
  40f592:	mov    al,ds:0x4c7fdfae
  40f597:	clc    
  40f598:	int3   
  40f599:	mov    ds,WORD PTR [edi+0x34]
  40f59c:	add    DWORD PTR [esi],0x8b365586
  40f5a2:	into   
  40f5a3:	leave  
  40f5a4:	mov    al,ds:0xb0544f59
  40f5a9:	jg     0x40f550
  40f5ab:	bound  ecx,QWORD PTR [edx]
  40f5ad:	fldcw  WORD PTR [edx+0x22]
  40f5b0:	loope  0x40f54d
  40f5b2:	popa   
  40f5b3:	bound  ebp,QWORD PTR [edx-0x11ae316]
  40f5b9:	add    ebx,DWORD PTR [esi]
  40f5bb:	push   eax
  40f5bc:	push   es
  40f5bd:	pop    ss
  40f5be:	inc    ecx
  40f5bf:	lds    ebx,FWORD PTR [esp+esi*8+0xe2d89b7]
  40f5c6:	jge    0x40f592
  40f5c8:	cs push ebx
  40f5ca:	fistp  WORD PTR ds:0xe67763e6
  40f5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5d1:	jl     0x40f600
  40f5d3:	add    BYTE PTR [esi+0x5d741c14],0xc
  40f5da:	mov    ecx,0xc8b85af3
  40f5df:	mov    DWORD PTR [edi],esi
  40f5e1:	mov    ds:0xa1637ce6,al
  40f5e6:	in     eax,dx
  40f5e7:	ja     0x40f58e
  40f5e9:	rcr    BYTE PTR [edi],1
  40f5eb:	mov    dl,0xaf
  40f5ed:	call   0xe37a:0xe54a62a8
  40f5f4:	stc    
  40f5f5:	ret    
  40f5f6:	xor    ah,0xd3
  40f5f9:	inc    edx
  40f5fa:	neg    al
  40f5fc:	aas    
  40f5fd:	ins    DWORD PTR es:[edi],dx
  40f5fe:	pop    ss
  40f5ff:	inc    eax
  40f600:	mov    dh,0x9f
  40f602:	lea    esi,[esi+esi*2]
  40f605:	inc    ecx
  40f606:	xchg   edi,eax
  40f607:	fmul   DWORD PTR [esi+0x77]
  40f60a:	jno    0x40f625
  40f60c:	mov    edx,0x53ae7210
  40f611:	mov    dh,0x7b
  40f613:	sub    BYTE PTR [edx-0x4],0xd7
  40f617:	xor    al,BYTE PTR [ebx-0x37811f30]
  40f61d:	pop    edx
  40f61e:	jmp    0x60b1:0xaa7f9239
  40f625:	pop    ds
  40f626:	push   esi
  40f627:	jnp    0x40f68b
  40f629:	rcl    esi,cl
  40f62b:	lods   al,BYTE PTR ds:[esi]
  40f62c:	jo     0x40f5c6
  40f62e:	lods   eax,DWORD PTR ds:[esi]
  40f62f:	mov    al,ds:0x1e39ca5f
  40f634:	rcl    DWORD PTR [ebx+0x733aab3e],cl
  40f63a:	jge    0x40f5c0
  40f63c:	mov    bh,0x19
  40f63e:	dec    edi
  40f63f:	xor    ecx,DWORD PTR [edx+0x3b]
  40f642:	(bad)  
  40f643:	(bad)  
  40f645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f646:	loope  0x40f6a5
  40f648:	fdiv   st(7),st
  40f64a:	fsub   st(3),st
  40f64c:	fs scas eax,DWORD PTR es:[edi]
  40f64e:	or     edi,DWORD PTR [edi+0x5a]
  40f651:	dec    ebx
  40f652:	les    edx,FWORD PTR [ebp-0x67]
  40f655:	ja     0x40f671
  40f657:	pop    ebx
  40f658:	retf   0xa1ea
  40f65b:	repz add eax,0x7e5e35db
  40f661:	pop    edx
  40f662:	sub    ebx,DWORD PTR [eax+0x22b85efb]
  40f668:	cld    
  40f669:	mov    ecx,0x382098f2
  40f66e:	pop    edx
  40f66f:	sub    al,0x1d
  40f671:	xchg   edi,eax
  40f672:	fnstenv [ebp-0x54]
  40f675:	sbb    eax,0x63f2d6d6
  40f67a:	push   es
  40f67b:	sbb    eax,0xc179277f
  40f680:	call   0x3c9d28f4
  40f685:	mov    ds:0x8f1feb77,eax
  40f68a:	popa   
  40f68b:	xchg   ecx,eax
  40f68c:	je     0x40f69e
  40f68e:	rcl    BYTE PTR [bp+di-0x7a],cl
  40f692:	jge    0x40f67b
  40f694:	test   eax,0xa8af0fb2
  40f699:	out    dx,eax
  40f69a:	sub    BYTE PTR [edx],bl
  40f69c:	and    al,bh
  40f69e:	mov    ebp,cr4
  40f6a1:	sub    bh,BYTE PTR [esi-0x59]
  40f6a4:	xchg   edi,eax
  40f6a5:	adc    DWORD PTR [ecx+0x57f12440],edx
  40f6ab:	push   ecx
  40f6ac:	jbe    0x40f6f6
  40f6ae:	adc    DWORD PTR [edx+0x7d],ebp
  40f6b1:	je     0x40f712
  40f6b3:	lea    edx,[edx+0x28]
  40f6b6:	not    esp
  40f6b8:	stos   DWORD PTR es:[edi],eax
  40f6b9:	fild   DWORD PTR [eax-0x5a]
  40f6bc:	push   esp
  40f6bd:	push   ecx
  40f6be:	cld    
  40f6bf:	(bad)
  40f6c2:	pop    ecx
  40f6c3:	in     eax,0xdc
  40f6c5:	sar    BYTE PTR [edx+0x18],cl
  40f6c8:	push   ecx
  40f6c9:	idiv   DWORD PTR [ebx+0x4c]
  40f6cc:	aaa    
  40f6cd:	jle    0x40f67c
  40f6cf:	push   esi
  40f6d0:	cmp    edi,DWORD PTR [ebp-0x54]
  40f6d3:	loope  0x40f6ca
  40f6d5:	and    dh,al
  40f6d7:	enter  0x2d0,0xf1
  40f6db:	loop   0x40f708
  40f6dd:	mov    esp,0x86b444e5
  40f6e2:	ret    0x25c9
  40f6e5:	pop    edx
  40f6e6:	jnp    0x40f6c5
  40f6e8:	aam    0xfd
  40f6ea:	cmc    
  40f6eb:	push   ebp
  40f6ec:	add    DWORD PTR [ebx-0x3cabc9eb],0x289fddb9
  40f6f6:	scas   eax,DWORD PTR es:[edi]
  40f6f7:	aam    0x8
  40f6f9:	out    0x11,eax
  40f6fb:	mov    ebx,0x4faf0158
  40f700:	jmp    0x40f737
  40f702:	adc    eax,0xfc5a7437
  40f707:	jno    0x40f756
  40f709:	jbe    0x40f6f6
  40f70b:	je     0x40f6e3
  40f70d:	fimul  WORD PTR [edx-0xc]
  40f710:	(bad)  
  40f711:	or     al,0x3b
  40f713:	adc    dl,bl
  40f715:	sub    al,0x13
  40f717:	sbb    ch,BYTE PTR [eax+0x202e2657]
  40f71d:	(bad)  
  40f71e:	aas    
  40f71f:	push   ss
  40f720:	jbe    0x40f748
  40f722:	xor    BYTE PTR [eax+0x32],bh
  40f725:	popa   
  40f726:	ins    DWORD PTR es:[edi],dx
  40f727:	cli    
  40f728:	pop    esi
  40f729:	fsubr  QWORD PTR [edi]
  40f72b:	ffree  st(6)
  40f72d:	or     BYTE PTR [ecx-0x27],cl
  40f730:	pop    ebx
  40f731:	clc    
  40f732:	lods   eax,DWORD PTR ds:[esi]
  40f733:	outs   dx,DWORD PTR ds:[esi]
  40f734:	sub    eax,0x6f5543bf
  40f739:	sbb    edi,ebx
  40f73b:	adc    al,BYTE PTR [edi+0x50]
  40f73e:	mov    eax,ss:0x152e5c39
  40f744:	and    bh,BYTE PTR [ebx-0x61]
  40f747:	pop    ss
  40f748:	loopne 0x40f730
  40f74a:	mov    cl,0xfd
  40f74c:	adc    eax,0xb9597307
  40f751:	dec    esi
  40f752:	mov    al,0x17
  40f754:	in     eax,dx
  40f755:	cmp    ah,BYTE PTR ds:0xe3f29712
  40f75b:	cld    
  40f75c:	push   es
  40f75d:	mov    ch,0xb3
  40f75f:	sub    dl,BYTE PTR [esi+0x4c]
  40f762:	sti    
  40f763:	mov    BYTE PTR [esi+0x2e1f71b6],bh
  40f769:	xor    ch,dh
  40f76b:	or     bl,BYTE PTR [esi-0x68]
  40f76e:	int3   
  40f76f:	mov    edx,0xad525659
  40f774:	push   ss
  40f775:	jnp    0x40f729
  40f777:	jno    0x40f78e
  40f779:	mov    edx,0x948e1299
  40f77e:	mov    ebp,0x4a379e2a
  40f783:	inc    esp
  40f784:	fs out 0xf1,al
  40f787:	add    eax,ebp
  40f789:	xchg   edi,eax
  40f78a:	mov    ds:0x2635d78c,al
  40f78f:	cmp    eax,0x4053dc8e
  40f794:	jne    0x40f7f7
  40f796:	push   cs
  40f797:	test   al,0x2e
  40f799:	int    0x5f
  40f79b:	or     al,0x2a
  40f79d:	pop    es
  40f79e:	popa   
  40f79f:	sbb    DWORD PTR [ebx+0x4a5528a3],ebx
  40f7a5:	leave  
  40f7a6:	in     al,dx
  40f7a7:	inc    esp
  40f7a8:	shl    DWORD PTR [ecx],1
  40f7aa:	out    0xe7,al
  40f7ac:	add    edi,eax
  40f7ae:	(bad)  
  40f7af:	mov    dl,BYTE PTR [ebx+0xc501363]
  40f7b5:	dec    esi
  40f7b6:	cmp    dl,BYTE PTR [eax+0x6b128b96]
  40f7bc:	dec    ecx
  40f7bd:	mov    ds:0x8dda0475,eax
  40f7c2:	adc    edx,DWORD PTR [edx+eiz*4-0x7fea5d7f]
  40f7c9:	test   eax,0xbba8cf06
  40f7ce:	sbb    eax,0xf882ae24
  40f7d3:	ret    
  40f7d4:	ins    DWORD PTR es:[edi],dx
  40f7d5:	lahf   
  40f7d6:	fisub  WORD PTR [esi]
  40f7d8:	ins    BYTE PTR es:[edi],dx
  40f7d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7da:	mov    ah,0x8f
  40f7dc:	add    bh,bl
  40f7de:	(bad)  
  40f7df:	ds inc edx
  40f7e1:	xor    eax,0xdf5fd192
  40f7e6:	pop    es
  40f7e7:	adc    bl,dl
  40f7e9:	xor    eax,0xe2140bc9
  40f7ee:	dec    ebx
  40f7ef:	(bad)  
  40f7f0:	mov    ah,0xbc
  40f7f2:	das    
  40f7f3:	dec    eax
  40f7f4:	pop    ebp
  40f7f5:	mov    cl,BYTE PTR ds:0x57e3d2a6
  40f7fb:	adc    DWORD PTR [ecx],ebx
  40f7fd:	sub    edi,ecx
  40f7ff:	mov    eax,ds:0x25404506
  40f804:	sbb    dh,BYTE PTR ds:0x6c60e4b0
  40f80a:	stos   BYTE PTR es:[edi],al
  40f80b:	push   ss
  40f80c:	pop    es
  40f80d:	mov    dh,0xbc
  40f80f:	cli    
  40f810:	scas   eax,DWORD PTR es:[edi]
  40f811:	retf   0x9514
  40f814:	push   ss
  40f815:	mov    ch,0xde
  40f817:	fnstcw WORD PTR [edx-0x3209cc18]
  40f81d:	mov    cl,0x11
  40f81f:	enter  0xa293,0xc2
  40f823:	jle    0x40f80d
  40f825:	adc    edx,ebx
  40f827:	dec    esp
  40f828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f829:	sub    DWORD PTR [esp+ebp*2],esi
  40f82c:	dec    edi
  40f82d:	int3   
  40f82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f82f:	sbb    ch,BYTE PTR [ecx+0x44]
  40f832:	imul   bh
  40f834:	and    eax,0xf0c2aa4
  40f839:	int    0x11
  40f83b:	and    esp,eax
  40f83d:	inc    ecx
  40f83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f83f:	xor    cl,BYTE PTR [ecx]
  40f841:	enter  0x9b36,0xf1
  40f845:	mov    al,dh
  40f847:	dec    ecx
  40f848:	pushf  
  40f849:	(bad)  
  40f84a:	fsub   DWORD PTR [ecx-0x50]
  40f84d:	dec    esi
  40f84e:	lods   eax,DWORD PTR ds:[esi]
  40f84f:	push   eax
  40f850:	xor    DWORD PTR [ebx],eax
  40f852:	outs   dx,BYTE PTR ds:[esi]
  40f853:	push   ds
  40f854:	les    esp,FWORD PTR [edi]
  40f856:	jnp    0x40f83c
  40f858:	js     0x40f862
  40f85a:	inc    ebp
  40f85b:	lahf   
  40f85c:	dec    ebx
  40f85d:	inc    ecx
  40f85e:	inc    esp
  40f85f:	inc    edx
  40f860:	cmp    edx,DWORD PTR [eax+edx*1+0x14a65289]
  40f867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f869:	aaa    
  40f86a:	sub    BYTE PTR [edi-0x51],dl
  40f86d:	push   cs
  40f86e:	in     eax,dx
  40f86f:	ds jl  0x40f82a
  40f872:	sub    DWORD PTR [ebp+esi*2+0x6851ea9c],ebx
  40f879:	outs   dx,DWORD PTR ds:[esi]
  40f87a:	pop    ecx
  40f87b:	clc    
  40f87c:	sub    DWORD PTR [ecx],esi
  40f87e:	nop    eax
  40f881:	sub    DWORD PTR [ebp-0x24417451],eax
  40f887:	or     DWORD PTR [eiz*1+0x6bd21cd7],ecx
  40f88e:	shl    DWORD PTR [eax+esi*8-0x56],0xa7
  40f893:	and    esi,DWORD PTR [edi-0x7e]
  40f896:	mov    eax,ds:0x3bbce929
  40f89b:	or     ah,ah
  40f89d:	nop
  40f89e:	dec    ebx
  40f89f:	and    ecx,eax
  40f8a1:	inc    ebx
  40f8a2:	fs inc ebp
  40f8a4:	or     al,0x1
  40f8a6:	lds    ebx,FWORD PTR ds:0xe5a7f59e
  40f8ac:	test   BYTE PTR [ecx-0x39],bh
  40f8af:	mov    esp,0xf69aa0f0
  40f8b4:	adc    al,0xa2
  40f8b6:	inc    edx
  40f8b7:	mov    ch,0xfa
  40f8b9:	icebp  
  40f8ba:	repnz sbb dl,BYTE PTR [edx]
  40f8bd:	mov    cl,0xdc
  40f8bf:	loopne 0x40f90b
  40f8c1:	adc    edx,edi
  40f8c3:	loopne 0x40f8a2
  40f8c5:	not    DWORD PTR [edi+0x50]
  40f8c8:	gs (bad) 
  40f8ca:	and    esp,DWORD PTR [edx+ebp*2]
  40f8cd:	xor    DWORD PTR [ebx+eiz*4+0x54],edx
  40f8d1:	xor    eax,0x6bc39e43
  40f8d6:	je     0x40f911
  40f8d8:	fnstenv [ebx+0x49]
  40f8db:	dec    esp
  40f8dc:	xor    bl,BYTE PTR [ebx-0x30]
  40f8df:	aam    0x83
  40f8e1:	out    dx,al
  40f8e2:	pop    ss
  40f8e3:	sub    bl,BYTE PTR [edx+0x16]
  40f8e6:	xchg   BYTE PTR [eax],dh
  40f8e8:	mov    ebx,DWORD PTR [ebx+0x44dbd2f0]
  40f8ee:	lahf   
  40f8ef:	loopne 0x40f8c1
  40f8f1:	cmp    DWORD PTR [edx],ebp
  40f8f3:	(bad)  
  40f8f4:	xchg   ebx,eax
  40f8f5:	dec    ecx
  40f8f6:	xor    eax,0xee2901b6
  40f8fb:	popf   
  40f8fc:	inc    edx
  40f8fd:	jmp    0x4e94:0xa38cd5be
  40f904:	stos   BYTE PTR es:[edi],al
  40f905:	push   ss
  40f906:	or     ch,ch
  40f908:	fist   DWORD PTR [edx]
  40f90a:	lock mov ds:0x8fd4c5,eax
  40f910:	sub    eax,0x6212556a
  40f915:	(bad)  
  40f916:	mov    WORD PTR [eax-0x55f631c8],cs
  40f91c:	lea    esp,[ebx]
  40f91e:	sbb    BYTE PTR [eax-0x7c],bh
  40f921:	push   eax
  40f922:	push   esi
  40f923:	jmp    0x1dea5308
  40f928:	(bad)  
  40f929:	retf   0x6a29
  40f92c:	aam    0xba
  40f92e:	or     ch,ah
  40f930:	(bad)  
  40f931:	and    al,0xc1
  40f933:	fucomi st,st(5)
  40f935:	sbb    esi,DWORD PTR [ebx-0x4da04338]
  40f93b:	cs loopne 0x40f98e
  40f93e:	xlat   BYTE PTR ds:[ebx]
  40f93f:	jmp    0xdef5b986
  40f944:	jae    0x40f8ce
  40f946:	push   ebx
  40f947:	std    
  40f948:	add    al,dh
  40f94a:	jmp    0x40f97a
  40f94c:	jmp    0xe2b6f0cb
  40f951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f952:	les    esi,FWORD PTR gs:[eax+0x6b]
  40f956:	inc    ecx
  40f957:	inc    edx
  40f958:	push   eax
  40f959:	enter  0x4bd1,0x4f
  40f95d:	es (bad) 
  40f960:	pop    ebp
  40f961:	in     al,0xa6
  40f963:	adc    al,0x38
  40f965:	inc    esp
  40f966:	or     BYTE PTR [eax+0x11],cl
  40f969:	in     eax,dx
  40f96a:	repz jecxz 0x40f974
  40f96d:	out    0x2e,al
  40f96f:	jae    0x40f9c8
  40f971:	or     ch,BYTE PTR ds:0x49cde5be
  40f977:	mov    WORD PTR [edi+0x4e],ds
  40f97a:	sub    ch,BYTE PTR [esi+0x71]
  40f97d:	add    eax,0x5e6bd8ee
  40f982:	dec    esi
  40f983:	popf   
  40f984:	lahf   
  40f985:	mov    cl,BYTE PTR [esi]
  40f987:	pop    ss
  40f988:	sbb    eax,0x1848de66
  40f98d:	cmc    
  40f98e:	mov    cl,0x43
  40f990:	into   
  40f991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f992:	in     eax,0x10
  40f994:	inc    ebx
  40f995:	add    DWORD PTR [eax],ecx
  40f997:	cli    
  40f998:	std    
  40f999:	push   edx
  40f99a:	dec    edx
  40f99b:	fiadd  DWORD PTR [eax-0x71970c35]
  40f9a1:	cmp    DWORD PTR ds:[edi],edi
  40f9a4:	pop    edx
  40f9a5:	icebp  
  40f9a6:	add    DWORD PTR [esi-0xf],0x26
  40f9aa:	fsubr  DWORD PTR [ecx+0x35]
  40f9ad:	test   bl,dl
  40f9af:	out    0xaf,eax
  40f9b1:	inc    esi
  40f9b2:	push   edx
  40f9b3:	sbb    eax,0xc47c04c2
  40f9b8:	pusha  
  40f9b9:	or     eax,0x614ac12a
  40f9be:	js     0x40fa0f
  40f9c0:	mov    bl,0x3a
  40f9c2:	lds    eax,FWORD PTR [edx]
  40f9c4:	lock outs dx,BYTE PTR ds:[esi]
  40f9c6:	xor    ax,0x52dc
  40f9ca:	jns    0x40f9b3
  40f9cc:	sub    al,0x5e
  40f9ce:	sahf   
  40f9cf:	cmp    DWORD PTR ds:[ecx-0x15],edi
  40f9d3:	loopne 0x40f995
  40f9d5:	sbb    BYTE PTR [ecx-0x12f23f9b],bl
  40f9db:	jne    0x40fa0b
  40f9dd:	push   eax
  40f9de:	sar    DWORD PTR [eax],cl
  40f9e0:	into   
  40f9e1:	add    BYTE PTR [edi-0x74],dl
  40f9e4:	ficomp WORD PTR [ebx]
  40f9e6:	jmp    0x7106b404
  40f9eb:	das    
  40f9ec:	pop    ds
  40f9ed:	cdq    
  40f9ee:	scas   al,BYTE PTR es:[edi]
  40f9ef:	adc    ebx,DWORD PTR [ecx]
  40f9f1:	mov    esp,0x191c49b3
  40f9f6:	pop    ebp
  40f9f7:	pop    ebp
  40f9f8:	mov    edx,0x35dfe37a
  40f9fd:	sub    BYTE PTR [ebp-0x67d17e37],0xab
  40fa04:	mov    ebx,0xb5828958
  40fa09:	adc    al,0x46
  40fa0b:	xor    al,BYTE PTR [eax-0x69]
  40fa0e:	in     eax,dx
  40fa0f:	dec    esi
  40fa10:	xor    ch,bl
  40fa12:	sti    
  40fa13:	mov    DWORD PTR [edx-0x6d],esi
  40fa16:	out    dx,al
  40fa17:	jae    0x40f9b3
  40fa19:	mov    eax,0x92068b04
  40fa1e:	fild   WORD PTR [eax+0x25fd8f08]
  40fa24:	add    bh,BYTE PTR [ecx]
  40fa26:	(bad)  
  40fa27:	jne    0x40fa94
  40fa29:	(bad)  
  40fa2a:	fld    DWORD PTR [esi]
  40fa2c:	bnd jae 0x40faae
  40fa2f:	test   DWORD PTR [eax+0x6e],eax
  40fa32:	lock mov eax,0x73782905
  40fa38:	sbb    eax,0x850e80c3
  40fa3d:	mov    ds,WORD PTR [edx+0x5e]
  40fa40:	xor    ebx,DWORD PTR [esi+0xb]
  40fa43:	int3   
  40fa44:	iret   
  40fa45:	sub    eax,0x98c8df4e
  40fa4a:	arpl   bx,bp
  40fa4c:	mov    WORD PTR [ecx+0x20],?
  40fa4f:	jnp    0x40fa42
  40fa51:	outs   dx,DWORD PTR ds:[esi]
  40fa52:	cmp    eax,0x9a13b1e7
  40fa57:	push   0x43
  40fa59:	ds fwait
  40fa5b:	enter  0xba43,0x58
  40fa5f:	pop    es
  40fa60:	(bad)  
  40fa61:	iret   
  40fa62:	xchg   edx,eax
  40fa63:	xchg   DWORD PTR [ecx-0x6c],ebp
  40fa66:	les    esp,FWORD PTR [edx+0x37e76ec0]
  40fa6c:	fcomi  st,st(0)
  40fa6e:	push   esi
  40fa6f:	jae    0x40faa6
  40fa71:	in     al,dx
  40fa72:	jl     0x40fab8
  40fa74:	cmp    ch,BYTE PTR [ebx]
  40fa76:	pop    es
  40fa77:	push   ds
  40fa78:	xor    BYTE PTR [esp+edx*8-0x6f38ffed],0x7a
  40fa80:	push   es
  40fa81:	adc    bl,dl
  40fa83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa84:	inc    ecx
  40fa85:	loope  0x40fada
  40fa87:	jbe    0x40faaf
  40fa89:	fiadd  WORD PTR [edx-0x2c]
  40fa8c:	xor    BYTE PTR [esi-0x25b96dc2],0x9d
  40fa93:	dec    edx
  40fa94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa95:	cli    
  40fa96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa97:	call   0xefea:0x2e0ee350
  40fa9e:	es stos BYTE PTR es:[edi],al
  40faa0:	xchg   esp,eax
  40faa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faa2:	add    bh,BYTE PTR [edi+0x2]
  40faa5:	retf   0x3af9
  40faa8:	push   ecx
  40faa9:	jno    0x40faf0
  40faab:	jmp    0xf9feab7b
  40fab0:	out    0xf5,al
  40fab2:	stos   DWORD PTR es:[edi],eax
  40fab3:	inc    edi
  40fab4:	or     DWORD PTR [esp+ebx*4+0x41c0f44e],ecx
  40fabb:	aaa    
  40fabc:	sub    DWORD PTR [ecx-0x5c382d7d],edi
  40fac2:	fisubr DWORD PTR [eax-0x31ec895f]
  40fac8:	jae    0x40fa72
  40faca:	pop    esi
  40facb:	dec    ebp
  40facc:	adc    bh,al
  40face:	mov    bh,dh
  40fad0:	xchg   esp,eax
  40fad1:	inc    ecx
  40fad2:	xchg   ebx,eax
  40fad3:	jl     0x40faca
  40fad5:	xchg   edi,eax
  40fad6:	jl     0x40fb07
  40fad8:	sbb    esi,ecx
  40fada:	jle    0x40fa63
  40fadc:	shr    BYTE PTR [edi-0x25],cl
  40fadf:	mov    ebp,0xebc4dc77
  40fae4:	test   al,0x67
  40fae6:	fldenv [edx-0x410ff40e]
  40faec:	sbb    eax,0xc822fb2a
  40faf1:	imul   esp,DWORD PTR [edi],0xffffff85
  40faf4:	inc    ecx
  40faf5:	mov    ebp,0xb936f96
  40fafa:	inc    eax
  40fafb:	xor    al,0x55
  40fafd:	and    al,0xb8
  40faff:	xchg   ebp,eax
  40fb00:	cmp    BYTE PTR ds:0x724a18c3,dh
  40fb06:	lahf   
  40fb07:	pop    edi
  40fb08:	mov    ebp,0x1e10c519
  40fb0d:	cmp    DWORD PTR [edi],edi
  40fb0f:	mov    bl,0xdb
  40fb11:	pop    edi
  40fb12:	adc    DWORD PTR [eax-0x6b],ecx
  40fb15:	add    eax,0xa77b28ef
  40fb1a:	jmp    0x9bb43710
  40fb1f:	add    esp,esp
  40fb21:	push   ds
  40fb22:	jae    0x40fad7
  40fb24:	mov    edi,0xc6d025e1
  40fb29:	(bad)  
  40fb2a:	popf   
  40fb2b:	test   DWORD PTR [eax+ecx*8],ebp
  40fb2e:	fstp   DWORD PTR [ebp-0x7b2a1bab]
  40fb34:	dec    ecx
  40fb35:	pop    ebp
  40fb36:	or     edx,DWORD PTR [ebp-0x23]
  40fb39:	pop    ebp
  40fb3a:	ja     0x40fb1c
  40fb3c:	sbb    al,bh
  40fb3e:	loop   0x40fb23
  40fb40:	lods   al,BYTE PTR ds:[esi]
  40fb41:	rol    DWORD PTR ds:0x5b77e7d3,1
  40fb47:	and    esi,DWORD PTR [eax+0x67925868]
  40fb4d:	xchg   esp,eax
  40fb4e:	jbe    0x40fb5d
  40fb50:	aaa    
  40fb51:	xchg   ebx,eax
  40fb52:	ins    DWORD PTR es:[edi],dx
  40fb53:	mov    es,WORD PTR [eax+edi*8-0x7e036d01]
  40fb5a:	or     al,0xf9
  40fb5c:	in     al,dx
  40fb5d:	mov    al,0x38
  40fb5f:	push   esp
  40fb60:	pop    ebx
  40fb61:	sbb    ebx,DWORD PTR [eax-0x6f380f6a]
  40fb67:	sub    BYTE PTR [ebx+0x29e6f828],al
  40fb6d:	and    al,0x2b
  40fb6f:	stos   BYTE PTR es:[edi],al
  40fb70:	mov    esp,0x6bb5d82d
  40fb75:	cmp    BYTE PTR [eax],bh
  40fb77:	inc    ecx
  40fb78:	or     al,0x45
  40fb7a:	mov    dh,0xcf
  40fb7c:	scas   al,BYTE PTR es:[edi]
  40fb7d:	aaa    
  40fb7e:	ins    BYTE PTR es:[edi],dx
  40fb7f:	pop    edi
  40fb80:	and    esp,DWORD PTR [ecx+edi*2+0x5a]
  40fb84:	inc    edx
  40fb85:	faddp  st(4),st
  40fb87:	inc    edi
  40fb88:	inc    eax
  40fb89:	xor    ecx,DWORD PTR [esi]
  40fb8b:	in     eax,0x8f
  40fb8d:	add    al,0xa5
  40fb8f:	push   ecx
  40fb90:	cs js  0x40fbb5
  40fb93:	push   edx
  40fb94:	adc    DWORD PTR [ecx+0x22a49bf0],ebx
  40fb9a:	je     0x40fbc7
  40fb9c:	fst    QWORD PTR [edi+0x7f23dfa9]
  40fba2:	lds    ebp,FWORD PTR [esi+0x32]
  40fba5:	hlt    
  40fba6:	(bad)  
  40fba7:	jecxz  0x40fbe7
  40fba9:	or     DWORD PTR ss:[ebx],0x5cb6d52d
  40fbb0:	jmp    0x9250:0x57f68210
  40fbb7:	mov    al,0x82
  40fbb9:	out    0xac,eax
  40fbbb:	mov    ds:0xcbb86dc9,eax
  40fbc0:	pop    eax
  40fbc1:	mov    edi,0x10f9d9cf
  40fbc6:	mov    ch,0x6f
  40fbc8:	shl    DWORD PTR [ebx],cl
  40fbca:	mov    ds:0x4381b689,eax
  40fbcf:	gs aad 0xd4
  40fbd2:	and    eax,0x47cfbaf3
  40fbd7:	sub    DWORD PTR [ebx-0x32cd256],eax
  40fbdd:	pop    edi
  40fbde:	adc    eax,0x4064967f
  40fbe3:	xchg   esp,eax
  40fbe4:	test   eax,0x18576a82
  40fbe9:	jbe    0x40fbc0
  40fbeb:	xor    DWORD PTR [ebx+0x51],esp
  40fbee:	es stos DWORD PTR es:[edi],eax
  40fbf0:	mov    ah,0x50
  40fbf2:	stos   DWORD PTR es:[edi],eax
  40fbf3:	push   ebp
  40fbf4:	or     BYTE PTR [esi-0x4c],0x9e
  40fbf8:	sub    DWORD PTR [eax],eax
  40fbfa:	cmp    dl,ch
  40fbfc:	pop    esi
  40fbfd:	dec    esi
  40fbfe:	jmp    0x40fc10
  40fc00:	ficom  WORD PTR [eax]
  40fc02:	adc    DWORD PTR [edi+0x3c096e9a],edx
  40fc08:	pusha  
  40fc09:	mov    ds:0xac698324,al
  40fc0e:	(bad)  
  40fc0f:	out    0xbf,eax
  40fc11:	and    ebp,0x994ceee7
  40fc17:	xchg   DWORD PTR [ecx+0x7ca184f6],edi
  40fc1d:	fdiv   QWORD PTR [esi+eax*1-0x2c]
  40fc21:	fild   QWORD PTR [ecx-0x38]
  40fc24:	and    eax,0x40a84df1
  40fc29:	push   edi
  40fc2a:	dec    eax
  40fc2b:	ret    0xbf44
  40fc2e:	fcomp  DWORD PTR [ebx]
  40fc30:	ja     0x40fbca
  40fc32:	loop   0x40fbc8
  40fc34:	xchg   esi,eax
  40fc35:	loope  0x40fc64
  40fc37:	add    al,BYTE PTR [esi]
  40fc39:	jle    0x40fc22
  40fc3b:	mov    ds:0xf4f713d,eax
  40fc40:	adc    cl,BYTE PTR [ecx+edx*2-0x1586f3b5]
  40fc47:	dec    esi
  40fc48:	out    dx,al
  40fc49:	and    BYTE PTR [eax-0x26069e52],bh
  40fc4f:	cld    
  40fc50:	pop    esi
  40fc51:	push   es
  40fc52:	add    DWORD PTR [ebp-0x4f289cd3],esi
  40fc58:	lahf   
  40fc59:	or     eax,0x7f1332a3
  40fc5e:	xor    BYTE PTR [ebx+0x222dca9c],ch
  40fc64:	or     al,0x6d
  40fc66:	out    dx,al
  40fc67:	adc    eax,0x45bd72b0
  40fc6c:	cmp    eax,ebp
  40fc6e:	rcr    esi,cl
  40fc70:	add    bl,dl
  40fc72:	hlt    
  40fc73:	fwait
  40fc74:	pop    esi
  40fc75:	push   ecx
  40fc76:	hlt    
  40fc77:	and    ecx,DWORD PTR [ecx-0x59a0cd7e]
  40fc7d:	pop    ebp
  40fc7e:	out    dx,eax
  40fc7f:	mov    esp,0x14dba6e2
  40fc84:	cmp    BYTE PTR [ecx+edx*2-0x6f0814cf],bh
  40fc8b:	aad    0xbe
  40fc8d:	bound  esp,QWORD PTR [esi-0x2405964e]
  40fc93:	xor    dl,al
  40fc95:	adc    ebx,DWORD PTR [eax]
  40fc97:	jns    0x40fc75
  40fc99:	mov    al,0xab
  40fc9b:	imul   ecx,DWORD PTR [edi+ebp*8+0x21461fab],0xffffffab
  40fca3:	popa   
  40fca4:	outs   dx,DWORD PTR ds:[esi]
  40fca5:	mov    al,ds:0x65b24782
  40fcaa:	cwde   
  40fcab:	push   ds
  40fcac:	aas    
  40fcad:	sub    DWORD PTR [ebp+0x36],0x4b
  40fcb1:	and    eax,0x493c7857
  40fcb6:	loope  0x40fcd3
  40fcb8:	popa   
  40fcb9:	fisttp WORD PTR [ebx+edi*1-0x22d01f6e]
  40fcc0:	adc    ch,ch
  40fcc2:	ins    DWORD PTR es:[edi],dx
  40fcc3:	ret    0x5cfd
  40fcc6:	loope  0x40fc91
  40fcc8:	leave  
  40fcc9:	ss mov edx,0xccbe817b
  40fccf:	xor    bl,al
  40fcd1:	push   0x71
  40fcd3:	fldcw  WORD PTR [edx-0x6fb8565e]
  40fcd9:	jae    0x40fd4f
  40fcdb:	(bad)  
  40fcdd:	mov    edi,0x462dafff
  40fce2:	mov    ebp,0x694e3e69
  40fce7:	jns    0x40fcf0
  40fce9:	mov    ds:0xb0ded6a6,eax
  40fcee:	sub    BYTE PTR [ebp-0x28],bh
  40fcf1:	cwde   
  40fcf2:	enter  0xc043,0x50
  40fcf6:	sbb    DWORD PTR [edi+0x3cd51571],edx
  40fcfc:	or     al,0x2c
  40fcfe:	pop    esi
  40fcff:	mov    al,ds:0xd6bc06af
  40fd04:	sti    
  40fd05:	pop    ss
  40fd06:	in     al,0x8b
  40fd08:	iret   
  40fd09:	aam    0x25
  40fd0b:	mov    bl,0xc6
  40fd0d:	xchg   ebx,eax
  40fd0e:	lods   eax,DWORD PTR ds:[esi]
  40fd0f:	cmp    bh,0xad
  40fd12:	lods   eax,DWORD PTR ds:[esi]
  40fd13:	daa    
  40fd14:	test   cl,ah
  40fd16:	int    0x18
  40fd18:	xor    ecx,edi
  40fd1a:	jmp    0x40fd3c
  40fd1c:	dec    esi
  40fd1d:	pusha  
  40fd1e:	popa   
  40fd1f:	mov    cl,0x2
  40fd21:	cld    
  40fd22:	adc    eax,0x9d4e2cc8
  40fd27:	mov    DWORD PTR [eax-0x5e9aac28],esp
  40fd2d:	push   ds
  40fd2e:	sub    DWORD PTR [ecx-0x59],edx
  40fd31:	in     eax,dx
  40fd32:	icebp  
  40fd33:	std    
  40fd34:	inc    esp
  40fd35:	mov    esp,0x980df816
  40fd3a:	pop    ss
  40fd3b:	xchg   DWORD PTR [ebx-0x1c],edx
  40fd3e:	aad    0xbe
  40fd40:	adc    cl,BYTE PTR [edi]
  40fd42:	iret   
  40fd43:	jno    0x40fd30
  40fd45:	test   eax,0xc60a06e7
  40fd4a:	rcl    esp,1
  40fd4c:	and    ah,dl
  40fd4e:	mov    DWORD PTR [esp+ebp*2+0x36],edi
  40fd52:	sbb    eax,0xfe736e13
  40fd57:	iret   
  40fd58:	xor    esp,DWORD PTR [ecx]
  40fd5a:	cmp    DWORD PTR [ecx],0xffffff98
  40fd5d:	loopne 0x40fcf3
  40fd5f:	dec    esp
  40fd60:	rcl    BYTE PTR [ecx],cl
  40fd62:	or     DWORD PTR [ebx],eax
  40fd64:	es cmp eax,0x9ca0828e
  40fd6a:	jmp    0x38d7f794
  40fd6f:	sbb    eax,0xbf6e9094
  40fd74:	mov    eax,cs:0x3a07c2ff
  40fd7a:	sbb    eax,0x7bdafe1e
  40fd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd80:	pop    es
  40fd81:	pop    DWORD PTR [edx-0x29]
  40fd84:	ja     0x40fdab
  40fd86:	ds mov edi,0xd450e440
  40fd8c:	jns    0x40fdf3
  40fd8e:	out    0x91,al
  40fd90:	popa   
  40fd91:	loopne 0x40fdd1
  40fd93:	xchg   ebp,eax
  40fd94:	outs   dx,DWORD PTR ds:[esi]
  40fd95:	sub    edi,DWORD PTR [ebp+0x79f107b4]
  40fd9b:	dec    esi
  40fd9c:	mov    ebx,0xc57d725b
  40fda1:	or     bh,bl
  40fda3:	pop    esp
  40fda4:	(bad)  
  40fda6:	ret    0x4ab0
  40fda9:	lock and ecx,DWORD PTR [eax]
  40fdac:	mov    eax,ds:0xc2d96bdb
  40fdb1:	imul   ecx,esi,0xbcab70e5
  40fdb7:	inc    edi
  40fdb8:	cmp    DWORD PTR [ebp-0x7],esp
  40fdbb:	scas   eax,DWORD PTR es:[edi]
  40fdbc:	inc    ebx
  40fdbd:	jnp    0x40fdef
  40fdbf:	jb     0x40fda5
  40fdc1:	or     eax,0xa9bad739
  40fdc6:	inc    eax
  40fdc7:	adc    al,ch
  40fdc9:	adc    BYTE PTR [ebp-0x60],ch
  40fdcc:	xor    al,0x8e
  40fdce:	das    
  40fdcf:	jb     0x40fe1e
  40fdd1:	push   ebx
  40fdd2:	mov    bh,0xb7
  40fdd4:	and    al,0xa9
  40fdd6:	ficom  WORD PTR [esi+0x5a6a9dbe]
  40fddc:	sub    edi,DWORD PTR [ebp+0x184c701a]
  40fde2:	dec    esp
  40fde3:	in     al,dx
  40fde4:	xor    edi,edx
  40fde6:	mov    esi,DWORD PTR [esi]
  40fde8:	int3   
  40fde9:	fild   QWORD PTR [ebx-0x1d]
  40fdec:	clc    
  40fded:	dec    edx
  40fdee:	add    BYTE PTR [bx+di-0x1026],bl
  40fdf3:	lds    ebx,FWORD PTR [edi]
  40fdf5:	es icebp 
  40fdf7:	xlat   BYTE PTR ds:[ebx]
  40fdf8:	ins    DWORD PTR es:[edi],dx
  40fdf9:	push   edi
  40fdfa:	cld    
  40fdfb:	jns    0x40fdd3
  40fdfd:	ror    cl,0x18
  40fe00:	pop    ebp
  40fe01:	das    
  40fe02:	inc    ebp
  40fe03:	inc    ebx
  40fe04:	cwde   
  40fe05:	jae    0x40fdbd
  40fe07:	cwde   
  40fe08:	js     0x40fdd9
  40fe0a:	xor    eax,DWORD PTR [edi]
  40fe0c:	dec    esp
  40fe0d:	adc    DWORD PTR [esi+edx*1+0x75],esi
  40fe11:	jl     0x40fe3b
  40fe13:	pop    edi
  40fe14:	out    dx,al
  40fe15:	aad    0x94
  40fe17:	(bad)  
  40fe19:	dec    ecx
  40fe1a:	mov    edx,0x2d2b7363
  40fe1f:	loope  0x40fdc4
  40fe21:	icebp  
  40fe22:	ja     0x40fdba
  40fe24:	ja     0x40fe3b
  40fe26:	pop    ebp
  40fe27:	test   BYTE PTR [ecx-0x4954e283],ch
  40fe2d:	adc    DWORD PTR [edi-0x6e],ebp
  40fe30:	nop
  40fe31:	mov    edi,0x67cbe462
  40fe36:	add    cl,BYTE PTR [ecx+ecx*4]
  40fe39:	mov    ebp,0xab1ff7f2
  40fe3e:	fdivp  st(7),st
  40fe40:	gs jne 0x40fe94
  40fe43:	(bad)  
  40fe44:	or     eax,0xc93df978
  40fe49:	jmp    0x40fe2e
  40fe4b:	int3   
  40fe4c:	ret    0xd9c1
  40fe4f:	cmp    DWORD PTR [ecx-0x355eb32],ebp
  40fe55:	idiv   BYTE PTR [ecx-0x1c2aea01]
  40fe5b:	out    0xd0,eax
  40fe5d:	jle    0x40fe37
  40fe5f:	lea    ebx,[edi+ecx*8]
  40fe62:	sub    BYTE PTR [esi-0x29594f56],al
  40fe68:	push   ebp
  40fe69:	xchg   ebx,eax
  40fe6a:	(bad)  
  40fe6b:	ret    
  40fe6c:	mov    WORD PTR [ebx+0x7d],gs
  40fe6f:	out    0x10,al
  40fe71:	pop    ebx
  40fe72:	jmp    0x6e602193
  40fe77:	ins    BYTE PTR es:[edi],dx
  40fe78:	dec    ecx
  40fe79:	jno    0x40fe41
  40fe7b:	mov    ecx,0xbf25f1e7
  40fe80:	rcr    BYTE PTR [esp+eax*8],0x55
  40fe84:	and    dh,al
  40fe86:	adc    eax,0x5701de57
  40fe8b:	call   0xa2e438b3
  40fe90:	xor    dh,dl
  40fe92:	jmp    0x5bc4:0xf02822e2
  40fe99:	or     BYTE PTR [edx-0x3e],0x4c
  40fe9d:	inc    esp
  40fe9e:	outs   dx,DWORD PTR ds:[esi]
  40fe9f:	lahf   
  40fea0:	shr    BYTE PTR [edx+0x2d],cl
  40fea3:	jmp    0x8901cd35
  40fea8:	mov    esp,0xd46ea117
  40fead:	test   eax,0x77a2f364
  40feb2:	jp     0x40ff04
  40feb4:	mov    al,ds:0xa61e95e
  40feb9:	sub    al,0x7d
  40febb:	cmp    eax,DWORD PTR [eax+0x48]
  40febe:	outs   dx,BYTE PTR ds:[esi]
  40febf:	pop    edx
  40fec0:	inc    edi
  40fec1:	aaa    
  40fec2:	sub    cl,BYTE PTR [esi]
  40fec4:	lds    ebx,FWORD PTR [ecx+ebx*1+0x2e]
  40fec8:	les    esp,FWORD PTR [ebx]
  40feca:	(bad)  
  40fecb:	push   eax
  40fecc:	push   ebx
  40fecd:	add    al,0xf9
  40fecf:	shr    BYTE PTR [eax],1
  40fed1:	push   edi
  40fed2:	jle    0x40fe8a
  40fed4:	mov    esp,0x5f440576
  40fed9:	pop    edi
  40feda:	ror    BYTE PTR [edx+0x4f],1
  40fedd:	jg     0x40ff4a
  40fedf:	mov    ebx,DWORD PTR [edi-0x27]
  40fee2:	add    al,0xa1
  40fee4:	and    eax,0xfea5cba9
  40fee9:	(bad)  
  40feea:	aam    0x4
  40feec:	ja     0x40fefa
  40feee:	xchg   edi,eax
  40feef:	lock jns 0x40ff21
  40fef2:	xor    bl,BYTE PTR [ecx+0x37]
  40fef5:	mov    edx,0xfe61a68d
  40fefa:	stc    
  40fefb:	mov    al,ds:0xd093ad54
  40ff00:	mov    bl,0xdf
  40ff02:	loopne 0x40ff33
  40ff04:	cmp    esi,esi
  40ff06:	cmp    ah,ah
  40ff08:	fsub   QWORD PTR [edi+0x100d8d7]
  40ff0e:	cmp    eax,DWORD PTR [ebp-0x958b90c]
  40ff14:	mov    dh,0x76
  40ff16:	mov    bl,0x92
  40ff18:	sbb    edx,DWORD PTR [ebx-0x6b]
  40ff1b:	je     0x40feec
  40ff1d:	push   0xa3927269
  40ff22:	jmp    0x40ff5c
  40ff24:	sahf   
  40ff25:	jp     0x40ff51
  40ff27:	lock mov eax,ds:0x553c7afb
  40ff2d:	or     DWORD PTR [esi+0x1eea39eb],edi
  40ff33:	pop    es
  40ff34:	std    
  40ff35:	mov    al,ds:0xe3ed169e
  40ff3a:	jne    0x40feda
  40ff3c:	mov    esp,0xa78efac0
  40ff41:	mov    dl,0xf1
  40ff43:	adc    BYTE PTR [ebx-0x12],ah
  40ff46:	sbb    eax,0x88e6d9cf
  40ff4b:	stos   BYTE PTR es:[edi],al
  40ff4c:	mov    eax,ds:0x7713d36b
  40ff51:	enter  0x6888,0x17
  40ff55:	(bad)  
  40ff56:	cmc    
  40ff57:	clc    
  40ff58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff5a:	pushf  
  40ff5b:	xchg   ecx,eax
  40ff5c:	push   ecx
  40ff5d:	mov    eax,0xcfea7699
  40ff62:	xor    al,0x6f
  40ff64:	cmp    BYTE PTR [esi-0x13d30e33],bl
  40ff6a:	or     BYTE PTR [esp+eiz*2],bh
  40ff6d:	pop    ebp
  40ff6e:	outs   dx,BYTE PTR ds:[esi]
  40ff6f:	shl    DWORD PTR [edx+0x52],cl
  40ff72:	rcr    DWORD PTR [esi],0x9f
  40ff75:	cwde   
  40ff76:	loope  0x40ffac
  40ff78:	cmc    
  40ff79:	dec    ebp
  40ff7a:	retf   0xf6c5
  40ff7d:	out    0xb9,al
  40ff7f:	jg     0x40ff72
  40ff81:	(bad)  
  40ff82:	les    ebx,FWORD PTR [eax+0x5403ddcc]
  40ff88:	rcl    DWORD PTR [edx-0x5d],1
  40ff8b:	retf   0x584e
  40ff8e:	add    BYTE PTR [edi-0x3e],bl
  40ff91:	gs test eax,0x34d7cfa0
  40ff97:	repnz repz pop es
  40ff9a:	int3   
  40ff9b:	add    al,0x60
  40ff9d:	pop    ds
  40ff9e:	lods   al,BYTE PTR ds:[esi]
  40ff9f:	pop    ds
  40ffa0:	shl    DWORD PTR [ecx-0x24b8aecd],cl
  40ffa6:	lahf   
  40ffa7:	xchg   esp,eax
  40ffa8:	pop    edi
  40ffa9:	test   al,0x87
  40ffab:	dec    ebx
  40ffac:	sub    BYTE PTR [ebx],0xb8
  40ffaf:	cmp    al,0x4
  40ffb1:	jg     0x40ff8f
  40ffb3:	clc    
  40ffb4:	adc    DWORD PTR [esi-0x74d3ac53],eax
  40ffba:	adc    BYTE PTR [edi+esi*1+0x32],dh
  40ffbe:	test   DWORD PTR [eax],edx
  40ffc0:	mov    bh,0x1a
  40ffc2:	jmp    0xb01967ba
  40ffc7:	(bad)  
  40ffc8:	xor    eax,0xc326fdb5
  40ffcd:	and    eax,0x93b4eb00
  40ffd2:	cmc    
  40ffd3:	popf   
  40ffd4:	mov    ecx,0x2f82c962
  40ffd9:	cmp    edi,DWORD PTR [edi+0x32]
  40ffdc:	hlt    
  40ffdd:	in     eax,dx
  40ffde:	push   edx
  40ffdf:	jle    0x40ff62
  40ffe1:	xor    eax,0xfc3f13d5
  40ffe6:	jb     0x40ff9d
  40ffe8:	ficomp WORD PTR [edx+eiz*1-0x4f]
  40ffec:	mov    ebp,0x8c8b8027
  40fff1:	cdq    
  40fff2:	inc    edx
  40fff3:	pop    edi
  40fff4:	test   al,0x12
  40fff6:	xor    eax,0x3f6bb0e6
  40fffb:	jae    0x40ff9a
  40fffd:	ins    BYTE PTR es:[edi],dx
  40fffe:	or     BYTE PTR ds:0xafc3494c,cl
  410004:	fcmovnb st,st(7)
  410006:	shr    ecx,0xb
  410009:	xchg   ecx,eax
  41000a:	ss pop ebp
  41000c:	and    al,0xee
  41000e:	push   ebx
  41000f:	lea    esi,ds:0x5a1a0abc
  410015:	sub    DWORD PTR [ebx],edx
  410017:	sbb    esi,ebp
  410019:	sbb    bh,al
  41001b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41001c:	mov    bl,0xff
  41001e:	cmc    
  41001f:	(bad)  
  410020:	out    dx,eax
  410021:	push   esp
  410022:	cmc    
  410023:	ds scas eax,DWORD PTR es:[edi]
  410025:	daa    
  410026:	pushf  
  410027:	sub    bl,BYTE PTR [edi-0x72]
  41002a:	int3   
  41002b:	je     0x410097
  41002d:	jge    0x40ffc1
  41002f:	inc    ebp
  410030:	cmp    BYTE PTR [ebx-0x2cb4f54b],bh
  410036:	pop    ss
  410037:	xor    eax,0xcf1d3cd5
  41003c:	cmc    
  41003d:	mov    eax,0xce500007
  410042:	fld    QWORD PTR [ebx+esi*2-0x62]
  410046:	push   0xa48b7c1f
  41004b:	fs int3 
  41004d:	daa    
  41004e:	inc    esp
  41004f:	pushf  
  410050:	pop    edx
  410051:	pop    edi
  410052:	imul   edi,DWORD PTR [ecx-0x64d482a],0xffffff89
  410059:	(bad)  
  41005a:	sub    DWORD PTR [eax-0x4e],ebp
  41005d:	gs jmp 0x55bd:0xaed359a8
  410065:	inc    ebp
  410066:	mov    eax,fs
  410068:	xor    DWORD PTR ds:[ebp-0x2f],ebx
  41006c:	inc    esp
  41006d:	xchg   edx,eax
  41006e:	imul   ebp,DWORD PTR [ebp-0x35],0xaf3a97e6
  410075:	bound  esi,QWORD PTR [edi+0x58cfe034]
  41007b:	stos   DWORD PTR es:[edi],eax
  41007c:	js     0x410002
  41007e:	call   DWORD PTR [ebx-0x5c]
  410081:	push   esp
  410082:	jmp    0x410074
  410084:	test   DWORD PTR [esi-0x2c],ecx
  410087:	jg     0x410063
  410089:	xchg   ebx,eax
  41008a:	or     eax,0xfcf8969c
  41008f:	pop    eax
  410090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410091:	push   esp
  410092:	rol    DWORD PTR [edx],1
  410094:	leave  
  410095:	mov    eax,ds:0x17313c6c
  41009a:	or     bh,BYTE PTR [edx]
  41009c:	sub    al,0xbf
  41009e:	daa    
  41009f:	xchg   edi,eax
  4100a0:	pop    ebp
  4100a1:	test   BYTE PTR [ecx-0x541cf76],dh
  4100a7:	adc    dl,0xef
  4100aa:	sahf   
  4100ab:	cmc    
  4100ac:	inc    ebp
  4100ad:	jecxz  0x410089
  4100af:	pop    esp
  4100b0:	fistp  WORD PTR [eax+0x18]
  4100b3:	arpl   WORD PTR [edi+0xe],bp
  4100b6:	pop    esp
  4100b7:	jmp    FWORD PTR [edi]
  4100b9:	shr    BYTE PTR ss:0xa776ac69,0x81
  4100c1:	mov    bh,BYTE PTR [esp+ebx*2-0x7a110bd0]
  4100c8:	sub    DWORD PTR [ecx+0x2ed98bfa],0x55ed81f0
  4100d2:	and    eax,0x932d57b5
  4100d7:	pop    es
  4100d8:	pop    edx
  4100d9:	or     al,0x3f
  4100db:	hlt    
  4100dc:	sub    eax,0xe4eff18f
  4100e1:	je     0x41011a
  4100e3:	sub    BYTE PTR [ebx+0x37206004],dh
  4100e9:	jle    0x41014f
  4100eb:	mov    BYTE PTR [edx+0x507f0d4a],dh
  4100f1:	xor    BYTE PTR [edi+ecx*8-0x534ef5e3],cl
  4100f8:	jmp    0x410097
  4100fa:	outs   dx,DWORD PTR ds:[esi]
  4100fb:	ds test eax,0x9951c022
  410101:	iret   
  410102:	adc    eax,0xb01436ea
  410107:	retf   0x7dc8
  41010a:	call   0x6009:0x40970a3e
  410111:	test   esi,eax
  410113:	dec    ecx
  410114:	popa   
  410115:	inc    eax
  410116:	pop    esp
  410117:	mov    edi,0x2aa9378b
  41011c:	dec    edx
  41011d:	mov    edi,0x7a271d7
  410122:	pusha  
  410123:	push   eax
  410124:	dec    edx
  410125:	sahf   
  410126:	push   edx
  410127:	mov    gs,WORD PTR [ebp-0x22eb2311]
  41012d:	cmp    edx,ebx
  41012f:	pop    edx
  410130:	shl    BYTE PTR [edx+0x5],0xb3
  410134:	pop    es
  410135:	pushf  
  410136:	icebp  
  410137:	retf   
  410138:	test   DWORD PTR [esi-0x4a9fbdfa],ebx
  41013e:	inc    ebx
  41013f:	shl    bh,1
  410141:	outs   dx,DWORD PTR ds:[esi]
  410142:	iret   
  410143:	addr16 jp 0x410186
  410146:	scas   eax,DWORD PTR es:[edi]
  410147:	mov    ecx,DWORD PTR [ecx]
  410149:	push   edi
  41014a:	xchg   edx,eax
  41014b:	nop
  41014c:	cmp    BYTE PTR [esp+ecx*4-0x10],bh
  410150:	rol    BYTE PTR [ebp+0x3a],cl
  410153:	or     ah,BYTE PTR [ebp-0x34]
  410156:	inc    ebp
  410157:	dec    ecx
  410158:	or     al,0x74
  41015a:	pop    ebp
  41015b:	inc    eax
  41015c:	cmp    BYTE PTR [esi-0x69],ah
  41015f:	rcl    DWORD PTR [edx+0x1c],0x5f
  410163:	add    esp,DWORD PTR [edx+ebx*4-0x159c01df]
  41016a:	mov    DWORD PTR [esp+ebx*1+0x45],edx
  41016e:	lahf   
  41016f:	pop    eax
  410170:	idiv   DWORD PTR [ecx+eiz*8-0x3d07d2dc]
  410177:	ret    0x7099
  41017a:	jmp    0x6be:0xce224802
  410181:	cld    
  410182:	(bad)  
  410183:	dec    esi
  410184:	stc    
  410185:	mov    ecx,0x757c1c23
  41018a:	xor    cl,0xfe
  41018d:	mov    ah,0x81
  41018f:	sub    DWORD PTR [edi],ebx
  410191:	inc    esi
  410192:	out    dx,al
  410193:	mul    DWORD PTR [ecx+ebx*1-0x2d]
  410197:	retf   
  410198:	cmp    al,0x3
  41019a:	sub    al,BYTE PTR [edx-0x787bedb]
  4101a0:	xchg   esi,eax
  4101a1:	in     eax,0x43
  4101a3:	mov    ch,BYTE PTR [esi+ebx*2]
  4101a6:	imul   ecx,ebx,0x56f8f349
  4101ac:	or     DWORD PTR [ebx-0x3d],eax
  4101af:	mov    ah,BYTE PTR [edi+0x62]
  4101b2:	cdq    
  4101b3:	mov    edi,DWORD PTR [ebx+0x2f1a2d76]
  4101b9:	lahf   
  4101ba:	or     BYTE PTR ds:0xadbf2cf2,al
  4101c0:	nop
  4101c1:	push   ecx
  4101c2:	sahf   
  4101c3:	outs   dx,DWORD PTR ds:[esi]
  4101c4:	and    bl,BYTE PTR [esp+ecx*1-0x5eb4da50]
  4101cb:	adc    DWORD PTR [esi+0x4e91e51a],0x80e89ec2
  4101d5:	aad    0x3e
  4101d7:	ficom  WORD PTR [edi+0x61ac726e]
  4101dd:	jmp    0x41020d
  4101df:	fcom   QWORD PTR [ecx-0x4a221cba]
  4101e5:	xchg   ebx,eax
  4101e6:	stos   DWORD PTR es:[edi],eax
  4101e7:	push   ds
  4101e8:	ret    
  4101e9:	in     al,dx
  4101ea:	stos   BYTE PTR es:[edi],al
  4101eb:	loop   0x4101d1
  4101ed:	add    DWORD PTR [ecx-0x744ea15b],0x95e194e9
  4101f7:	les    ebp,FWORD PTR [edi-0x70]
  4101fa:	lods   eax,DWORD PTR ds:[esi]
  4101fb:	ss mov bh,0x85
  4101fe:	jnp    0x4101c8
  410200:	xchg   esp,eax
  410201:	mov    al,ds:0xf6bea3f7
  410206:	stos   DWORD PTR es:[edi],eax
  410207:	pop    esp
  410208:	lods   al,BYTE PTR ds:[esi]
  410209:	adc    eax,0xac698c0e
  41020e:	mov    ebp,0x93ddc232
  410213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410214:	xchg   esi,eax
  410215:	pusha  
  410216:	mov    DWORD PTR [ecx+ebx*2-0x19],ebx
  41021a:	mov    ah,0xfa
  41021c:	and    BYTE PTR [edi+0x0],bh
  41021f:	xchg   edi,eax
  410220:	inc    edx
  410221:	enter  0xeed6,0xf0
  410225:	cdq    
  410226:	push   0xffffff96
  410228:	mov    ds:0x60c277f8,eax
  41022d:	scas   al,BYTE PTR es:[edi]
  41022e:	cmp    al,0x5c
  410230:	sub    al,bl
  410232:	mov    bl,0xb7
  410234:	jae    0x41028b
  410236:	fwait
  410237:	sub    dl,bh
  410239:	mov    ds:0x20ae912b,eax
  41023e:	sbb    ch,BYTE PTR [esi-0x5f5584eb]
  410244:	xchg   esi,eax
  410245:	ins    DWORD PTR es:[edi],dx
  410246:	lock mov WORD PTR [esi],?
  410249:	mov    es,WORD PTR [edx]
  41024b:	cmp    ch,dh
  41024d:	fstp   DWORD PTR [ebp-0x2c]
  410250:	outs   dx,BYTE PTR ds:[esi]
  410251:	pop    esp
  410252:	cdq    
  410253:	ja     0x410243
  410255:	cmp    al,0xd5
  410257:	push   cs
  410258:	adc    bl,al
  41025a:	sbb    edi,DWORD PTR [ebp+0x3f]
  41025d:	in     eax,dx
  41025e:	xchg   ebx,eax
  41025f:	sbb    eax,0xeb378375
  410264:	ins    BYTE PTR es:[edi],dx
  410265:	mov    ch,BYTE PTR [ebx-0x74]
  410268:	xor    BYTE PTR [esi+0x2ddc9e95],0xee
  41026f:	repnz mov edx,0x8991863b
  410275:	mov    cl,0x39
  410277:	cwde   
  410278:	ror    BYTE PTR [esi],1
  41027a:	fdivr  DWORD PTR [ebp+0x4fcd420c]
  410280:	jns    0x4102d2
  410282:	lahf   
  410283:	pop    edi
  410284:	inc    ecx
  410285:	jbe    0x4102d5
  410287:	call   0x5f1d:0xf37b8d2
  41028e:	cmp    edi,DWORD PTR [esi-0x52]
  410291:	stc    
  410292:	push   esi
  410293:	in     eax,0xea
  410295:	dec    ebp
  410296:	fimul  DWORD PTR [edx-0x7f]
  410299:	jl     0x410289
  41029b:	int3   
  41029c:	clc    
  41029d:	cld    
  41029e:	xchg   BYTE PTR [eax],ah
  4102a0:	push   edi
  4102a1:	or     DWORD PTR [ebp-0x7d],ecx
  4102a4:	jecxz  0x410315
  4102a6:	jne    0x410245
  4102a8:	jns    0xac0c9b37
  4102ae:	jl     0x410298
  4102b0:	mov    bh,0x6d
  4102b2:	mov    DWORD PTR [edx+0x3e],eax
  4102b5:	mov    bl,0x2d
  4102b7:	adc    ch,al
  4102b9:	outs   dx,BYTE PTR ds:[esi]
  4102ba:	add    eax,0x6900ff42
  4102bf:	jmp    0x7b34ddd0
  4102c4:	out    dx,eax
  4102c5:	arpl   bx,cx
  4102c7:	mov    ebp,0xc1be016d
  4102cc:	adc    DWORD PTR [esi+0x227d0003],0x8f40fee6
  4102d6:	rcr    bl,cl
  4102d8:	jns    0x4102bb
  4102da:	adc    eax,0xb5d1a2eb
  4102df:	cmp    BYTE PTR [edx+0x3d],dh
  4102e2:	mov    ebx,0xe96c5128
  4102e7:	fcomp  DWORD PTR [edi+0x65ce0c6c]
  4102ed:	neg    edx
  4102ef:	clc    
  4102f0:	test   eax,esp
  4102f2:	(bad)  
  4102f3:	jmp    0x410347
  4102f5:	and    ebx,ecx
  4102f7:	cmp    BYTE PTR [ebx+edi*8],bh
  4102fa:	fldenv [ecx+ecx*4+0x5ed7198b]
  410301:	mov    al,ds:0xe8d6f7e3
  410306:	push   0xec09bd68
  41030b:	leave  
  41030c:	push   ebx
  41030d:	stc    
  41030e:	outs   dx,BYTE PTR ds:[esi]
  41030f:	aaa    
  410310:	cdq    
  410311:	pop    esp
  410312:	stos   DWORD PTR es:[edi],eax
  410313:	shr    DWORD PTR [ebx+0x49],0x3f
  410317:	inc    ebp
  410318:	or     eax,0x3e8eca39
  41031d:	xchg   ebp,eax
  41031e:	push   cs
  41031f:	int3   
  410320:	or     DWORD PTR [ebp-0x1e4d724b],eax
  410326:	fmul   st,st(5)
  410328:	aam    0x44
  41032a:	pop    ebp
  41032b:	or     eax,0xe4396903
  410330:	inc    ebp
  410331:	fs pop esp
  410333:	(bad)  
  410334:	push   ss
  410335:	pop    es
  410336:	(bad)  [esi]
  410338:	adc    edi,DWORD PTR [ebx-0x13e5a588]
  41033e:	or     al,0xc6
  410340:	test   BYTE PTR [ecx+esi*2+0x77],0xc1
  410345:	mov    ds:0x630e9757,eax
  41034a:	(bad)  
  41034b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41034c:	mov    edi,0x975ce9b1
  410351:	adc    al,BYTE PTR [eax]
  410353:	mov    dh,0xfd
  410355:	daa    
  410356:	xchg   esi,eax
  410357:	sbb    BYTE PTR [edi-0x3d1df4f9],dh
  41035d:	leave  
  41035e:	fnstcw WORD PTR [esi]
  410360:	jmp    0x5894:0xd2d84d33
  410367:	pushf  
  410368:	mov    al,ds:0x7057d797
  41036d:	xchg   esi,eax
  41036e:	inc    eax
  41036f:	adc    al,0x3c
  410371:	or     al,0x78
  410373:	lds    edx,FWORD PTR [eax+0x29]
  410376:	leave  
  410377:	fcom   QWORD PTR [esi+0x65d7240f]
  41037d:	and    edi,DWORD PTR [edx+ecx*8]
  410380:	inc    edi
  410381:	daa    
  410382:	aad    0x4d
  410384:	mov    ds:0xa4ecdffb,al
  410389:	push   esp
  41038a:	(bad)  
  41038c:	xchg   esp,eax
  41038d:	mov    ecx,0x5486a16f
  410392:	inc    ecx
  410393:	sbb    eax,0x117270f1
  410398:	xchg   edi,eax
  410399:	rcr    BYTE PTR [eax+edx*2],1
  41039c:	cmp    al,0x9
  41039e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41039f:	sub    DWORD PTR [esi+0x19cbf029],0xa32fc0f5
  4103a9:	lahf   
  4103aa:	retf   
  4103ab:	dec    ecx
  4103ac:	sbb    dl,BYTE PTR [edx-0x7a]
  4103af:	retf   
  4103b0:	ds mov bh,0x87
  4103b3:	jmp    0x410428
  4103b5:	jg     0x410426
  4103b7:	xchg   ebx,eax
  4103b8:	shl    DWORD PTR [ecx+0x4705b9f4],0x1a
  4103bf:	jp     0x41041a
  4103c1:	jecxz  0x410377
  4103c3:	pop    esi
  4103c4:	icebp  
  4103c5:	mov    bl,BYTE PTR [edi]
  4103c7:	or     BYTE PTR [esi+0x25],0xd4
  4103cb:	cwde   
  4103cc:	mov    BYTE PTR [edx+0x9ea98ea],bl
  4103d2:	leave  
  4103d3:	push   ds
  4103d4:	xbegin 0xebeb5333
  4103da:	mov    esp,0x4830944
  4103df:	or     eax,DWORD PTR [esi-0x3683aff0]
  4103e5:	cmp    eax,0x3250338a
  4103ea:	aam    0xa0
  4103ec:	dec    edi
  4103ed:	jno    0x4103f8
  4103ef:	sbb    BYTE PTR [ecx],ah
  4103f1:	xor    eax,DWORD PTR [esi+0x1dee1f9d]
  4103f7:	loopne 0x4103ed
  4103f9:	or     al,0x6
  4103fb:	inc    ebp
  4103fc:	mov    al,0x91
  4103fe:	xchg   edx,eax
  4103ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410400:	jecxz  0x4103de
  410402:	setne  BYTE PTR [esi+0x7e]
  410406:	cmp    dl,cl
  410408:	popf   
  410409:	adc    BYTE PTR [ecx],0x65
  41040c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41040d:	daa    
  41040e:	dec    esi
  41040f:	cdq    
  410410:	adc    al,0xa9
  410412:	out    dx,al
  410413:	scas   al,BYTE PTR es:[edi]
  410414:	(bad)  
  410415:	mov    eax,ds:0xab7bb84
  41041a:	fld    DWORD PTR [esi]
  41041c:	mov    eax,DWORD PTR [edx+0x24f3a7c5]
  410422:	push   cs
  410423:	js     0x410418
  410425:	xchg   BYTE PTR [edx+0x53],dl
  410428:	(bad)  
  410429:	dec    DWORD PTR [ebx+0x5b195b2f]
  41042f:	cld    
  410430:	arpl   WORD PTR [esi-0x53],di
  410433:	push   0xc396c04
  410438:	cdq    
  410439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41043a:	into   
  41043b:	dec    edx
  41043c:	mov    ecx,0x30b1b594
  410441:	jl     0x410430
  410443:	pop    ds
  410444:	dec    edi
  410445:	dec    esp
  410446:	sbb    al,0xcb
  410448:	repz mov edi,0x7a7f2d06
  41044e:	mov    ah,BYTE PTR [eax-0x25]
  410451:	ss ds jb 0x410418
  410455:	jne    0x4104d6
  410457:	les    ebx,FWORD PTR [eax-0x39]
  41045a:	retf   0x4984
  41045d:	cwde   
  41045e:	daa    
  41045f:	fisttp QWORD PTR cs:[eax-0x26ee4a81]
  410466:	pop    eax
  410467:	and    BYTE PTR [eax],bl
  410469:	lea    edx,[edx]
  41046b:	sar    bl,0xce
  41046e:	adc    eax,DWORD PTR ds:0x9aca0664
  410474:	mov    al,0xa3
  410476:	add    eax,0xa3d79a9c
  41047b:	loopne 0x41040f
  41047d:	fistp  WORD PTR [eax+0x26]
  410480:	inc    eax
  410481:	es sbb al,al
  410484:	mov    ds:0xccd6fa7e,eax
  410489:	xor    BYTE PTR [esi+0x4700a163],al
  41048f:	shr    DWORD PTR [edx+0xe49b919],cl
  410495:	adc    esi,DWORD PTR [eax]
  410497:	xchg   DWORD PTR [eax],ebp
  410499:	hlt    
  41049a:	int3   
  41049b:	add    al,0xa4
  41049d:	mov    ebp,0x50e33420
  4104a2:	test   eax,0x4966d32e
  4104a7:	imul   DWORD PTR [esi*8-0x1e93852f]
  4104ae:	sub    eax,0xfc18db8c
  4104b3:	inc    esi
  4104b4:	scas   eax,DWORD PTR es:[edi]
  4104b5:	hlt    
  4104b6:	hlt    
  4104b7:	rcl    DWORD PTR [eax-0x80],0x3b
  4104bb:	jns    0x410455
  4104bd:	call   0x45df734a
  4104c2:	sub    DWORD PTR [esp+eax*1-0x3e95c7ab],edx
  4104c9:	arpl   WORD PTR [eax+ebx*2-0x4163046b],bp
  4104d0:	stos   DWORD PTR es:[edi],eax
  4104d1:	sbb    DWORD PTR [eax-0x7be3b8e7],eax
  4104d7:	xchg   ecx,eax
  4104d8:	js     0x4104f4
  4104da:	repnz dec ebx
  4104dc:	add    bh,ch
  4104de:	xor    DWORD PTR [ebp+eax*4+0x297e1222],ecx
  4104e5:	lahf   
  4104e6:	jp     0x4104f7
  4104e8:	or     al,BYTE PTR [ecx+0x20]
  4104eb:	sub    esp,DWORD PTR [edx+edi*1-0x16]
  4104ef:	xchg   esp,eax
  4104f0:	jmp    0x41048e
  4104f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f3:	ds pop ss
  4104f5:	jae    0x4104de
  4104f7:	sbb    al,0x3c
  4104f9:	rcr    dl,0x8c
  4104fc:	push   edx
  4104fd:	mov    al,0x9a
  4104ff:	shl    DWORD PTR [eax],1
  410501:	retf   
  410502:	jle    0x4104da
  410504:	js     0x410491
  410506:	sub    BYTE PTR [eax+0x10909294],bl
  41050c:	jne    0x410549
  41050e:	in     al,dx
  41050f:	imul   esp,DWORD PTR [edi+0x7a44dbe6],0xa9c10821
  410519:	bound  eax,QWORD PTR fs:[ecx]
  41051c:	xchg   esp,eax
  41051d:	jmp    0x58b38709
  410522:	mov    ebp,0x9d99199f
  410527:	ret    
  410528:	test   BYTE PTR [ecx+ebx*2+0x10a27b1c],dh
  41052f:	cwde   
  410530:	cli    
  410531:	in     eax,dx
  410532:	out    0x5d,al
  410534:	mov    DWORD PTR [ebp+ebx*1+0x24aaa1d3],ecx
  41053b:	popf   
  41053c:	pop    esi
  41053d:	fld    DWORD PTR [eax+0x76459501]
  410543:	inc    esi
  410544:	adc    DWORD PTR [ecx],esp
  410546:	mov    bh,0x10
  410549:	add    al,0xab
  41054b:	imul   ebx,DWORD PTR ds:0x358fac3c,0x40c4bd5e
  410555:	mov    edx,0x1cdcecfc
  41055a:	mov    esp,0xdde9812d
  41055f:	shl    DWORD PTR gs:[esi+0x18],0xd5
  410564:	inc    eax
  410565:	fmul   st,st(7)
  410567:	pop    esi
  410568:	(bad)  
  410569:	xchg   ecx,eax
  41056a:	sahf   
  41056b:	mov    esi,0x166913b5
  410570:	xchg   bl,cl
  410572:	xor    eax,0xc8bef6a6
  410577:	clc    
  410578:	test   bl,cl
  41057a:	adc    DWORD PTR [ebp+0x4a],0x78414bd9
  410581:	dec    edi
  410582:	or     DWORD PTR [ecx+0x4464e8a3],0xffffff99
  410589:	mov    ah,0x2a
  41058b:	add    DWORD PTR ds:0x7ae1ef2c,0xffffffe5
  410592:	rcr    DWORD PTR [ebp+eax*8-0x63],0x62
  410597:	xor    edx,DWORD PTR [edi-0x48eae6de]
  41059d:	int    0x8e
  41059f:	clc    
  4105a0:	xchg   ebx,eax
  4105a1:	pop    edx
  4105a2:	ss cdq 
  4105a4:	cwde   
  4105a5:	jb     0x410576
  4105a7:	xor    ch,bh
  4105a9:	jle    0x410589
  4105ab:	pop    ss
  4105ac:	test   eax,0x806b002e
  4105b1:	fidiv  WORD PTR [ecx+ebx*4]
  4105b4:	and    BYTE PTR [eax],0xa9
  4105b7:	cld    
  4105b8:	push   eax
  4105b9:	loope  0x41055f
  4105bb:	fwait
  4105bc:	xor    ebp,DWORD PTR [edi]
  4105be:	les    ebp,FWORD PTR [eax+ebp*1+0x27005d97]
  4105c5:	lea    edi,[ebx+0x10]
  4105c8:	push   edx
  4105c9:	sub    DWORD PTR ds:0x1b21ea7,0x788de0f3
  4105d3:	imul   esi,eax,0x2d1b95c4
  4105d9:	retf   
  4105da:	shl    DWORD PTR [esi],1
  4105dc:	cmp    ebx,0x24
  4105df:	mov    ebx,0xb5cd28cc
  4105e4:	out    dx,eax
  4105e5:	xchg   ecx,eax
  4105e6:	mov    BYTE PTR [eax+0x36],cl
  4105e9:	push   esp
  4105ea:	call   0xbc93:0xd40d54ce
  4105f1:	lea    edi,[esi-0x2e7d1208]
  4105f7:	pop    ecx
  4105f8:	mov    gs,WORD PTR [edi+0x79]
  4105fb:	clc    
  4105fc:	cmp    BYTE PTR [ebx+ebp*4-0x174a2571],ah
  410603:	cmp    BYTE PTR [ecx],0xb9
  410606:	mov    ecx,0xa0664938
  41060b:	adc    ebx,0xbc171c5e
  410611:	shr    DWORD PTR [ebx+0x2904aeeb],1
  410617:	(bad)  
  410618:	sti    
  410619:	retf   0xffe0
  41061c:	xor    al,al
  41061e:	cmp    al,0x14
  410620:	daa    
  410621:	mov    esi,0x7ddce023
  410626:	sub    dl,cl
  410628:	dec    eax
  410629:	cmp    ebp,edx
  41062b:	pop    esp
  41062c:	(bad)  
  41062d:	arpl   si,ax
  41062f:	xchg   bh,ch
  410631:	or     BYTE PTR [ebp-0x146a17cd],ah
  410637:	ror    DWORD PTR [edi],0xe7
  41063a:	dec    eax
  41063b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063c:	push   ebx
  41063d:	add    cl,BYTE PTR [ebx+0x2f9b6d4e]
  410643:	aad    0x95
  410645:	or     ebx,DWORD PTR [edx+0x5f]
  410648:	leave  
  410649:	xor    edx,DWORD PTR [ecx-0x61]
  41064c:	mov    ah,0xa6
  41064e:	mov    ds:0x6a8b3e13,eax
  410653:	pop    edi
  410654:	dec    eax
  410655:	push   ebp
  410656:	dec    DWORD PTR [eax-0x4e73b515]
  41065c:	pop    ds
  41065d:	aad    0x7b
  41065f:	xchg   DWORD PTR [ebx+0x40],ebx
  410662:	(bad)  
  410663:	xchg   ecx,eax
  410664:	jbe    0x410636
  410666:	xor    eax,0xf08529af
  41066b:	mov    esi,0xad4ef21b
  410670:	pushf  
  410671:	dec    esi
  410672:	xor    esp,DWORD PTR [ebx]
  410674:	lds    esp,FWORD PTR [eax+0x79]
  410677:	mov    WORD PTR [eax+0x17],?
  41067a:	jns    0x41068a
  41067c:	fist   WORD PTR es:[edx]
  41067f:	jmp    0xa6dc:0xce73b1b4
  410686:	adc    al,0x16
  410688:	in     eax,dx
  410689:	xchg   ecx,eax
  41068a:	(bad)  [ebp-0x2a]
  41068d:	xchg   edx,eax
  41068e:	gs out 0xb0,eax
  410691:	shl    BYTE PTR [eax+0x586af3cf],1
  410697:	xor    BYTE PTR [eax+ebp*2-0x52],ah
  41069b:	adc    DWORD PTR [edx],edi
  41069d:	adc    al,0x36
  41069f:	jb     0x410661
  4106a1:	pop    edi
  4106a2:	mov    edx,?
  4106a4:	daa    
  4106a5:	fcomp  DWORD PTR [eax-0x671d6768]
  4106ab:	add    esp,DWORD PTR [esi-0x2e5d5ac6]
  4106b1:	xchg   edx,eax
  4106b2:	pop    ecx
  4106b3:	xor    bh,BYTE PTR [edi+0x3e]
  4106b6:	js     0x4106a3
  4106b8:	or     DWORD PTR [ebx+0x3890e0e0],0x9d1f3116
  4106c2:	inc    DWORD PTR [ebx-0x21a18650]
  4106c8:	shl    DWORD PTR [edi],1
  4106ca:	imul   ebp,DWORD PTR [edi-0x29],0xaaa937e
  4106d1:	or     al,0x2c
  4106d3:	les    ebx,FWORD PTR [ebx]
  4106d5:	jae    0x4106c0
  4106d7:	xchg   ebx,eax
  4106d8:	adc    dh,BYTE PTR ds:0x81731b94
  4106de:	neg    DWORD PTR [eax+0x2c478b7a]
  4106e4:	push   cs
  4106e5:	sbb    DWORD PTR ds:0xbd914097,esi
  4106eb:	aam    0xf9
  4106ed:	jge    0x410706
  4106ef:	jmp    FWORD PTR [edx+0x18b0d9a]
  4106f5:	xor    BYTE PTR [esi],ah
  4106f7:	test   al,0xdf
  4106f9:	add    al,0x93
  4106fb:	fmul   QWORD PTR [ebx-0x358eb669]
  410701:	jne    0x410683
  410703:	scas   eax,DWORD PTR es:[edi]
  410704:	xor    ebp,DWORD PTR [edx]
  410706:	inc    ebx
  410707:	mov    eax,0x7c205e47
  41070c:	(bad)  
  41070d:	xor    DWORD PTR [ebp+0x29],esp
  410710:	xor    eax,0x61abfcea
  410715:	fdiv   st,st(1)
  410717:	or     ecx,DWORD PTR [eax]
  410719:	jne    0x41076c
  41071b:	test   BYTE PTR [esi-0x7e],0x4a
  41071f:	dec    edi
  410720:	retf   0xb258
  410723:	das    
  410724:	pop    ebx
  410725:	data16 rcl BYTE PTR ss:0x7b2e6c98,1
  41072d:	inc    DWORD PTR [ebp+0x11b2ae35]
  410733:	test   al,0x7a
  410735:	setg   BYTE PTR [esi+0x792cd942]
  41073c:	std    
  41073d:	jne    0x4106c8
  41073f:	pop    es
  410740:	in     al,dx
  410741:	fs add edi,ebx
  410744:	ror    BYTE PTR [ecx+ebx*1],0x7f
  410748:	loope  0x4107a8
  41074a:	pop    edi
  41074b:	lock sbb BYTE PTR ss:[edx-0x7089bff9],ch
  410753:	retf   
  410754:	out    dx,al
  410755:	out    dx,eax
  410756:	cmp    BYTE PTR [esi+0x3a77ba14],0x2b
  41075d:	iret   
  41075e:	jne    0x410786
  410760:	pmaxub mm5,QWORD PTR [ecx]
  410763:	sub    eax,0xd7e97fb2
  410768:	cmp    bl,dh
  41076a:	leave  
  41076b:	adc    BYTE PTR [edx+0x55],0x15
  41076f:	jp     0x4107c2
  410771:	dec    ebp
  410772:	xor    BYTE PTR [ecx],cl
  410774:	jo     0x4107be
  410776:	mov    esp,0xcdd2a488
  41077b:	rcl    DWORD PTR ds:0x6a9ce5d7,0xe5
  410782:	cld    
  410783:	outs   dx,DWORD PTR ds:[esi]
  410784:	rol    BYTE PTR [edi+edx*2],0x20
  410788:	inc    ecx
  410789:	cli    
  41078a:	popf   
  41078b:	push   0xd6788653
  410790:	and    DWORD PTR [edi-0x25],edx
  410793:	jmp    0x758a:0x86af9383
  41079a:	push   ebx
  41079b:	stc    
  41079c:	cmp    eax,0x5b23a286
  4107a1:	outs   dx,DWORD PTR ds:[esi]
  4107a2:	and    BYTE PTR [esi-0x4c7057f6],ch
  4107a8:	sbb    BYTE PTR [esi],ch
  4107aa:	adc    al,0x4e
  4107ac:	cli    
  4107ad:	ja     0x4107c1
  4107af:	jle    0x4107d5
  4107b1:	js     0x410782
  4107b3:	cmp    BYTE PTR [ebp-0x73],0x4c
  4107b7:	and    DWORD PTR [edx],ebx
  4107b9:	lahf   
  4107ba:	repnz imul ecx,edi,0xffffff9a
  4107be:	fcomp  DWORD PTR [ebx-0x4c]
  4107c1:	and    eax,ecx
  4107c3:	cld    
  4107c4:	jmp    0xaf1fc46
  4107c9:	mov    esi,0xfb0aee70
  4107ce:	xor    al,BYTE PTR [edi-0x6a59a184]
  4107d4:	add    al,0x5e
  4107d6:	jbe    0x4107d5
  4107d8:	fbld   TBYTE PTR [ebx-0x18d3ab6c]
  4107de:	aam    0xd2
  4107e0:	mov    BYTE PTR [edi-0x19],bh
  4107e3:	addr16 jmp 0x410787
  4107e6:	push   0x3e808e9e
  4107eb:	shl    BYTE PTR [edx-0x6cb923f],cl
  4107f1:	dec    ebx
  4107f2:	xlat   BYTE PTR ds:[ebx]
  4107f3:	outs   dx,DWORD PTR ds:[esi]
  4107f4:	push   esp
  4107f5:	jne    0x410847
  4107f7:	push   edi
  4107f8:	mov    edi,0x4501496d
  4107fd:	mov    dh,0x55
  4107ff:	jae    0x41079f
  410801:	push   ebx
  410802:	inc    ebx
  410803:	sub    BYTE PTR [ebp+0x1b13a03e],dh
  410809:	pop    ds
  41080a:	push   es
  41080b:	cmp    ch,BYTE PTR [ecx]
  41080d:	push   es
  41080e:	es fnop 
  410811:	mov    ?,WORD PTR [ebx+0x6c]
  410814:	adc    al,0xda
  410816:	cs mov ah,0xb1
  410819:	lea    esi,[ebp-0x41]
  41081c:	lock std 
  41081e:	retf   0x3a46
  410821:	jl     0x4107f9
  410823:	retf   
  410824:	shl    BYTE PTR [eax-0x349a04a2],1
  41082a:	mov    ebx,0x31b49fb2
  41082f:	popa   
  410830:	fcom   QWORD PTR [ecx]
  410832:	mov    esp,0x2a3252ed
  410837:	fdiv   st(6),st
  410839:	icebp  
  41083a:	mov    edx,cs
  41083c:	mov    edi,0x67b9bac2
  410841:	lea    ecx,[edx]
  410843:	push   eax
  410844:	in     al,0x1b
  410846:	push   esi
  410847:	test   eax,0xe5783082
  41084c:	and    eax,0x9f77be11
  410851:	inc    edi
  410852:	mov    ebp,0xe5784b05
  410857:	mov    WORD PTR [eax],es
  410859:	adc    eax,0x65b1508b
  41085e:	(bad)  
  41085f:	mov    edx,0x87b4c545
  410864:	mov    edx,edx
  410866:	dec    esi
  410867:	push   0xffffffcb
  410869:	dec    edi
  41086a:	dec    eax
  41086b:	push   edx
  41086c:	aas    
  41086d:	dec    esp
  41086e:	lock mov bh,0x98
  410871:	and    bl,BYTE PTR ds:0xdaf75018
  410877:	jae    0x410820
  410879:	adc    dh,0x4f
  41087c:	fwait
  41087d:	les    edi,FWORD PTR [eax+esi*1]
  410880:	dec    esi
  410881:	(bad)  
  410882:	dec    ebp
  410883:	inc    ebp
  410884:	add    DWORD PTR [ebx-0x3],ecx
  410887:	mov    edx,DWORD PTR [esi-0x2ba1a0df]
  41088d:	in     eax,dx
  41088e:	sbb    BYTE PTR [edx-0x1b72c2e9],dl
  410894:	jg     0x41085f
  410896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410897:	pop    ss
  410898:	cld    
  410899:	mov    dl,0x37
  41089b:	loopne 0x41090b
  41089d:	cmp    eax,0xb036e9d
  4108a2:	xor    ecx,DWORD PTR [eax+0x4424b0a3]
  4108a8:	jp     0x4108f4
  4108aa:	mov    eax,ds:0xfafa30b6
  4108af:	sub    BYTE PTR [edx+0x4dd8b292],bl
  4108b5:	cld    
  4108b6:	pop    edi
  4108b7:	dec    ebx
  4108b8:	mov    dh,0x83
  4108ba:	cwde   
  4108bb:	loopne 0x410843
  4108bd:	loope  0x41088c
  4108bf:	mov    dh,0xf
  4108c1:	cmpps  xmm7,XMMWORD PTR [ecx],0x3d
  4108c5:	sbb    cl,BYTE PTR [edi+0x22]
  4108c8:	xchg   esi,eax
  4108c9:	sub    bh,BYTE PTR [ebp-0x262b47b]
  4108cf:	sbb    eax,0x2b3b6ee1
  4108d4:	xor    ah,BYTE PTR [eax-0x90e90b9]
  4108da:	jecxz  0x4108fe
  4108dc:	sub    bh,BYTE PTR [ecx-0x134c3f8f]
  4108e2:	gs retf 0xee17
  4108e6:	push   esi
  4108e7:	das    
  4108e8:	xlat   BYTE PTR ds:[ebx]
  4108e9:	mov    dh,0x3e
  4108eb:	and    esp,esi
  4108ed:	sub    dl,bl
  4108ef:	sbb    eax,0xa4d30810
  4108f4:	pusha  
  4108f5:	push   es
  4108f6:	dec    eax
  4108f7:	cmp    DWORD PTR [ecx+0xb955fa1],ecx
  4108fd:	push   ebp
  4108fe:	xlat   BYTE PTR ds:[ebx]
  4108ff:	fld    DWORD PTR [ebp+0x2efea073]
  410905:	mov    esp,DWORD PTR ds:0x3c4b24e
  41090b:	xchg   ecx,eax
  41090c:	(bad)  [esi-0x37]
  41090f:	jne    0x410925
  410911:	jecxz  0x410920
  410913:	add    eax,0x11e94a1
  410918:	or     dl,BYTE PTR [ebx-0x30]
  41091b:	jnp    0x41099b
  41091d:	repnz xor eax,0x2891cbad
  410923:	outs   dx,DWORD PTR ds:[esi]
  410924:	mov    eax,0x8b0104db
  410929:	leave  
  41092a:	push   ds
  41092b:	push   edx
  41092c:	test   ch,cl
  41092e:	pop    esp
  41092f:	xchg   ebp,eax
  410930:	cwde   
  410931:	scas   eax,DWORD PTR es:[edi]
  410932:	bnd ret 0xc27
  410936:	push   esp
  410937:	pop    ebx
  410938:	jb     0x41099a
  41093a:	aas    
  41093b:	sbb    bl,BYTE PTR [ecx+0x163a20c5]
  410941:	stos   BYTE PTR es:[edi],al
  410942:	mov    edi,0x5f9801de
  410947:	inc    esi
  410948:	jle    0x41090f
  41094a:	adc    eax,0x59ceb800
  41094f:	jb     0x410968
  410951:	ins    DWORD PTR es:[edi],dx
  410952:	sub    bh,cl
  410954:	cmp    ecx,0xffffffc0
  410957:	inc    ebp
  410958:	call   0x4c94:0x84347bcf
  41095f:	inc    edx
  410960:	adc    eax,0xeb7b18a3
  410965:	shl    DWORD PTR [esi+0x26],0x4d
  410969:	loop   0x41098e
  41096b:	sbb    ebp,DWORD PTR [esi-0x30]
  41096e:	outs   dx,DWORD PTR ds:[esi]
  41096f:	push   edx
  410970:	and    bl,al
  410972:	ins    DWORD PTR es:[edi],dx
  410973:	and    eax,0xbc1468b9
  410978:	dec    BYTE PTR ds:0x56b474cf
  41097e:	outs   dx,BYTE PTR ds:[esi]
  41097f:	daa    
  410980:	mov    bh,0x9d
  410982:	cmp    ch,dl
  410984:	mov    gs,WORD PTR [edx+ebx*4-0x37]
  410988:	jae    0x4109d3
  41098a:	xor    ebp,DWORD PTR [edi-0x45]
  41098d:	mov    ch,0x93
  41098f:	and    eax,0xc9c295a0
  410994:	ror    dh,0xbe
  410997:	sub    DWORD PTR [ecx+0x6fac0ddf],ecx
  41099d:	pop    esp
  41099e:	(bad)  
  41099f:	sar    esi,1
  4109a1:	push   ss
  4109a2:	cs aad 0x26
  4109a5:	push   ds
  4109a6:	and    al,0x2
  4109a8:	push   0xe7f387a8
  4109ad:	call   0x8722:0xa8e6fbba
  4109b4:	push   ss
  4109b5:	ret    0x82a3
  4109b8:	jo     0x4109e6
  4109ba:	mov    edx,0xb285b63e
  4109bf:	add    BYTE PTR [esi+ebp*8+0x77],dl
  4109c3:	add    al,0x18
  4109c5:	or     esp,edi
  4109c7:	sub    bl,BYTE PTR [edx+eiz*4-0x403bc660]
  4109ce:	test   DWORD PTR [ebx-0x4eb5d1],eax
  4109d4:	loopne 0x410a0c
  4109d6:	inc    edi
  4109d7:	add    DWORD PTR [ebp-0x56c820a6],edi
  4109dd:	enter  0x4997,0xd6
  4109e1:	stc    
  4109e2:	pop    eax
  4109e3:	mov    dh,0x52
  4109e5:	inc    ecx
  4109e6:	fisubr DWORD PTR [ebx]
  4109e8:	pop    ecx
  4109e9:	out    0xe9,eax
  4109eb:	xor    BYTE PTR [esi-0x687fe549],dl
  4109f1:	unpcklps xmm4,XMMWORD PTR [ebx+eiz*1-0x76]
  4109f6:	jg     0x410a51
  4109f8:	fwait
  4109f9:	js     0x4109d5
  4109fb:	xor    eax,0x18880d39
  410a00:	jnp    0x410a10
  410a02:	xor    al,0x7e
  410a04:	mov    ds:0x85b4c08f,eax
  410a09:	mov    ebp,0xc6c277a5
  410a0e:	lea    ecx,[ebx-0x74b3cc18]
  410a14:	or     cl,BYTE PTR [eax-0x5e]
  410a17:	into   
  410a18:	imul   BYTE PTR [edi+ebx*8]
  410a1b:	xor    ebx,ecx
  410a1d:	sbb    BYTE PTR [esi-0x64819952],bl
  410a23:	call   0xa83641a1
  410a28:	xor    bl,dh
  410a2a:	push   ds
  410a2b:	add    bh,cl
  410a2d:	add    eax,0x357ae8f1
  410a32:	popa   
  410a33:	sbb    esp,edi
  410a35:	and    eax,0x6e6f41d0
  410a3a:	inc    ecx
  410a3b:	loope  0x410a83
  410a3d:	std    
  410a3e:	adc    al,0xdd
  410a40:	cli    
  410a41:	mov    ah,0x8
  410a43:	or     dl,BYTE PTR [ebp+0x7473e6d9]
  410a49:	stc    
  410a4a:	mov    ch,0x9b
  410a4c:	dec    ebp
  410a4d:	lods   eax,DWORD PTR ds:[esi]
  410a4e:	or     eax,edx
  410a50:	mov    eax,ds:0xd64c9c50
  410a55:	jae    0x410a8f
  410a57:	mov    cl,0xc3
  410a59:	lahf   
  410a5a:	cs xchg esp,eax
  410a5c:	mov    DWORD PTR [esi],0x6c322d93
  410a62:	ret    
  410a63:	inc    edx
  410a64:	pop    edi
  410a65:	loopne 0x4109ee
  410a67:	inc    ebp
  410a68:	je     0x410a81
  410a6a:	mov    cl,0x2c
  410a6c:	lock push es
  410a6e:	xor    al,bl
  410a70:	push   cs
  410a71:	xchg   edx,eax
  410a72:	int    0x57
  410a74:	xor    esi,eax
  410a76:	call   0x30a6:0xf26b9e45
  410a7d:	inc    eax
  410a7e:	sub    al,0x3e
  410a80:	pop    ecx
  410a81:	pop    eax
  410a82:	cmp    eax,0xfbaa3437
  410a87:	aam    0xc3
  410a89:	or     al,0xc1
  410a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a8c:	lods   al,BYTE PTR ds:[esi]
  410a8d:	sub    DWORD PTR [ecx-0x5682ad12],esi
  410a93:	test   eax,ebx
  410a95:	int3   
  410a96:	xchg   edi,eax
  410a97:	data16 mov ah,0x70
  410a9a:	hlt    
  410a9b:	stc    
  410a9c:	dec    ebp
  410a9d:	ret    0xa536
  410aa0:	ror    DWORD PTR [esp+edx*1],cl
  410aa3:	push   esp
  410aa4:	into   
  410aa5:	add    al,0xf0
  410aa7:	pop    esp
  410aa8:	or     ebp,DWORD PTR [edi-0x3db628da]
  410aae:	test   esp,eax
  410ab0:	cld    
  410ab1:	pop    edi
  410ab2:	add    BYTE PTR [eax],al
  410ab4:	inc    ebx
  410ab5:	test   DWORD PTR [edx+0x26],edi
  410ab8:	inc    ebp
  410ab9:	sahf   
  410aba:	stos   BYTE PTR es:[edi],al
  410abb:	popf   
  410abc:	scas   al,BYTE PTR es:[edi]
  410abd:	aam    0x5e
  410abf:	repnz xor BYTE PTR [ecx-0x6f],ah
  410ac3:	inc    ebp
  410ac4:	sbb    esi,edi
  410ac6:	sub    DWORD PTR [eax*2-0x3e519606],esp
  410acd:	xchg   edi,eax
  410ace:	(bad)  
  410acf:	mov    ds:0x65b1e829,al
  410ad4:	push   ebx
  410ad5:	mov    bl,BYTE PTR [esi-0x2c6f1661]
  410adb:	ds sahf 
  410add:	mov    ?,WORD PTR [edi]
  410adf:	cwde   
  410ae0:	pop    esp
  410ae1:	imul   edi,DWORD PTR ss:[ebp-0x24d12d40],0xffffffc8
  410ae9:	pop    ebx
  410aea:	and    ebx,DWORD PTR [edi]
  410aec:	adc    DWORD PTR [eax+edx*8+0x70db1321],edi
  410af3:	mov    esp,0xdd13d43a
  410af8:	add    BYTE PTR [eax],cl
  410afa:	ja     0x410b3a
  410afc:	fisttp WORD PTR ds:0x1e633412
  410b02:	dec    esp
  410b03:	cmp    DWORD PTR [esi],edi
  410b05:	jg     0x410b69
  410b07:	xor    al,0xf6
  410b09:	icebp  
  410b0a:	xchg   edi,eax
  410b0b:	push   ecx
  410b0c:	jo     0x410ae9
  410b0e:	ins    BYTE PTR es:[edi],dx
  410b0f:	fadd   QWORD PTR [edi-0x3b]
  410b12:	out    dx,al
  410b13:	push   ss
  410b14:	xor    eax,0xd0051c41
  410b19:	dec    eax
  410b1a:	xor    al,0xb8
  410b1c:	dec    esp
  410b1d:	inc    edi
  410b1e:	mov    ebp,0x95b1a9db
  410b23:	xchg   ebx,eax
  410b24:	icebp  
  410b25:	add    eax,0x4a534d84
  410b2a:	test   BYTE PTR [esi+0x7d2d05b7],ah
  410b30:	mov    WORD PTR [eax+ebx*8],?
  410b33:	pop    ebp
  410b34:	sub    BYTE PTR [ebx-0x29],cl
  410b37:	inc    edx
  410b38:	call   0x38bed5ab
  410b3d:	std    
  410b3e:	add    BYTE PTR [ebx-0x7bc49b99],cl
  410b44:	mov    dl,0x4f
  410b46:	pop    ecx
  410b47:	mov    bx,0x6961
  410b4b:	sub    BYTE PTR [ebp+ebp*1-0x5a5a7206],ch
  410b52:	loop   0x410b48
  410b54:	adc    edx,DWORD PTR [esi-0x70]
  410b57:	fldpi  
  410b59:	fmul   DWORD PTR [ebp-0x26]
  410b5c:	push   ecx
  410b5d:	inc    esi
  410b5e:	ror    DWORD PTR [ecx+0x685930c6],cl
  410b64:	sub    DWORD PTR [ecx+0x59],esi
  410b67:	(bad)  
  410b6a:	loop   0x410af8
  410b6c:	pop    esp
  410b6d:	adc    ax,0x13ca
  410b71:	jo     0x410b0b
  410b73:	ror    DWORD PTR [ecx+ebx*1-0x3fa2b2d2],1
  410b7a:	pusha  
  410b7b:	fnstcw WORD PTR [eax+0x64c5d36]
  410b81:	in     al,dx
  410b82:	into   
  410b83:	in     al,dx
  410b84:	pop    ecx
  410b85:	out    dx,al
  410b86:	jne    0x410bdf
  410b88:	mov    ah,0xf7
  410b8a:	and    DWORD PTR [edi+edi*8+0x64bc6555],ebx
  410b91:	push   esp
  410b92:	xor    eax,0xd12d4952
  410b97:	out    0x7a,al
  410b99:	idiv   edi
  410b9b:	mov    dh,0x6c
  410b9d:	and    ecx,edx
  410b9f:	aas    
  410ba0:	clc    
  410ba1:	enter  0x5779,0x80
  410ba5:	jle    0x410ba3
  410ba7:	lds    esi,FWORD PTR [ebp+0x4e]
  410baa:	xchg   esp,eax
  410bab:	sahf   
  410bac:	xor    cl,0xad
  410baf:	mov    DWORD PTR [ebx],ecx
  410bb1:	jle    0x410bb2
  410bb3:	outs   dx,DWORD PTR ds:[esi]
  410bb4:	pop    esp
  410bb5:	outs   dx,DWORD PTR ds:[esi]
  410bb6:	mov    ebp,0x2f460b7b
  410bbb:	or     ebp,DWORD PTR [edi-0x51]
  410bbe:	push   ss
  410bbf:	jge    0x410bb4
  410bc1:	jns    0x410b6b
  410bc3:	sub    DWORD PTR ss:[edx],esi
  410bc6:	fmul   QWORD PTR [ebx+0x36]
  410bc9:	push   ecx
  410bca:	into   
  410bcb:	mov    eax,0xa61f75e4
  410bd0:	mov    ds:0x1b15f574,al
  410bd5:	int3   
  410bd6:	push   ebp
  410bd7:	pop    ecx
  410bd8:	mov    ds:0x1c956177,al
  410bdd:	jne    0x410ba3
  410bdf:	xchg   ebp,eax
  410be0:	(bad)  
  410be1:	mov    esp,0xcaa12827
  410be6:	mov    bh,0x29
  410be8:	cmp    ch,BYTE PTR [edi+0x5a]
  410beb:	add    al,0x20
  410bed:	aaa    
  410bee:	push   esi
  410bef:	out    dx,eax
  410bf0:	mov    bl,0x1f
  410bf2:	jmp    0x631f:0xc8fc7e19
  410bf9:	adc    BYTE PTR [eax-0x2a],bl
  410bfc:	jmp    0x410bd8
  410bfe:	aad    0x7c
  410c00:	push   esi
  410c01:	mov    dh,0xbc
  410c03:	inc    esp
  410c04:	int    0x6d
  410c06:	js     0x410c47
  410c08:	mov    ah,0x96
  410c0a:	xor    DWORD PTR [ebp+0x1b],esi
  410c0d:	push   eax
  410c0e:	cmp    ebp,ebx
  410c10:	test   BYTE PTR [ecx],bl
  410c12:	das    
  410c13:	clc    
  410c14:	and    esi,ecx
  410c16:	adc    al,0x94
  410c18:	imul   ebp,ecx,0x1ea740f7
  410c1e:	lods   al,BYTE PTR ds:[esi]
  410c1f:	aad    0xd7
  410c21:	xor    BYTE PTR [ebx-0x7a],ch
  410c24:	mov    ecx,0x841a76a5
  410c29:	xor    bl,BYTE PTR [ebx+0x1d2f46ea]
  410c2f:	(bad)  
  410c30:	call   0x35c0:0x89e08200
  410c37:	ins    DWORD PTR es:[edi],dx
  410c38:	push   cs
  410c39:	(bad)  
  410c3a:	sbb    DWORD PTR [ecx+0x6d],eax
  410c3d:	pop    ebx
  410c3e:	pusha  
  410c3f:	cwde   
  410c40:	xchg   edi,eax
  410c41:	or     DWORD PTR [esi],ecx
  410c43:	xchg   ebx,eax
  410c44:	pop    ebx
  410c45:	and    BYTE PTR [esi],bh
  410c47:	or     al,0xd7
  410c49:	pushf  
  410c4a:	outs   dx,DWORD PTR ds:[esi]
  410c4b:	ds out dx,al
  410c4d:	outs   dx,BYTE PTR ds:[esi]
  410c4e:	dec    ecx
  410c4f:	cmp    eax,0xceb8cce1
  410c54:	fnstsw WORD PTR [edx+0x1b]
  410c57:	sbb    DWORD PTR [ecx],esi
  410c59:	sbb    DWORD PTR [eax+0x30fcbc20],esi
  410c5f:	cmp    al,ah
  410c61:	popa   
  410c62:	fst    QWORD PTR [ebx]
  410c64:	(bad)  
  410c65:	fwait
  410c66:	cmp    al,0xbc
  410c68:	xor    al,0x53
  410c6a:	xor    BYTE PTR [edx-0x4f],bh
  410c6d:	jmp    0x92fa:0x2470ceab
  410c74:	cmp    al,dh
  410c76:	pop    edi
  410c77:	ss or  eax,0xde2391aa
  410c7d:	mul    BYTE PTR [esi+0x58]
  410c80:	jmp    0x2316e8ef
  410c85:	loopne 0x410ca5
  410c87:	push   eax
  410c88:	mov    bh,0x53
  410c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c8b:	mov    edx,0x40b78b06
  410c90:	dec    ebp
  410c91:	pop    esp
  410c92:	or     ch,al
  410c94:	add    al,0x54
  410c96:	mov    al,dh
  410c98:	inc    esp
  410c99:	mov    ds:0x516741b,eax
  410c9e:	jp     0x410cb4
  410ca0:	popf   
  410ca1:	jg     0x410d03
  410ca3:	ins    DWORD PTR es:[edi],dx
  410ca4:	mov    al,ds:0xf5ea5178
  410ca9:	sub    bl,BYTE PTR [ebp-0x42939138]
  410caf:	adc    DWORD PTR ds:[edx],ebx
  410cb2:	sub    dl,ah
  410cb4:	imul   esp,DWORD PTR [ecx-0x7f55c033],0xffffff87
  410cbb:	pop    esi
  410cbc:	test   BYTE PTR [eax+edx*8],ch
  410cbf:	cmp    DWORD PTR [edx],0x7ed971ab
  410cc5:	lods   eax,DWORD PTR ds:[esi]
  410cc6:	icebp  
  410cc7:	retf   
  410cc8:	inc    ebp
  410cc9:	sbb    eax,0xb33f3d0a
  410cce:	cmp    eax,0xea276ff5
  410cd3:	call   0x40fc4f9a
  410cd8:	mov    edx,ecx
  410cda:	and    dl,dh
  410cdc:	aas    
  410cdd:	int    0xb7
  410cdf:	pop    ecx
  410ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ce1:	(bad)  
  410ce2:	sub    DWORD PTR [esi-0x19c7835a],0xffffffad
  410ce9:	push   ecx
  410cea:	push   0xffffffd4
  410cec:	ficom  DWORD PTR [edi+0x42]
  410cef:	cmc    
  410cf0:	lahf   
  410cf1:	xchg   ebx,eax
  410cf2:	and    DWORD PTR [esi],eax
  410cf4:	xor    eax,0x8c83d023
  410cf9:	dec    eax
  410cfa:	pop    ebx
  410cfb:	mov    DWORD PTR [esi-0x1c1b3959],ebp
  410d01:	push   edx
  410d02:	sbb    al,0x10
  410d04:	into   
  410d05:	mov    dh,0xc
  410d07:	or     al,0x99
  410d09:	std    
  410d0a:	cwde   
  410d0b:	daa    
  410d0c:	or     ecx,edi
  410d0e:	loopne 0x410d69
  410d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d11:	dec    ebx
  410d12:	jae    0x410cbd
  410d14:	jmp    0x410ce0
  410d16:	ror    BYTE PTR fs:[edi+0x632621ad],0xb6
  410d1e:	inc    ebp
  410d1f:	dec    ebx
  410d20:	mov    eax,0xb60e7859
  410d25:	loopne 0x410cd5
  410d27:	add    eax,0x79801b
  410d2c:	adc    DWORD PTR [edx+0x66c217e6],ebx
  410d32:	mov    edi,0x3a47bcba
  410d37:	clc    
  410d38:	cmp    ah,bl
  410d3a:	(bad)  
  410d3c:	xchg   ecx,eax
  410d3d:	adc    DWORD PTR [ecx+0x3bdccc05],eax
  410d43:	std    
  410d44:	mov    esi,DWORD PTR [edx+eax*1+0x2a828443]
  410d4b:	imul   ebp,DWORD PTR ds:0x3b69a348,0xffffffc9
  410d52:	jne    0x410d59
  410d54:	call   0xad04f616
  410d59:	fbstp  TBYTE PTR [ebp+eax*8-0x745cf158]
  410d60:	mov    eax,ds:0x25f14c2f
  410d65:	test   BYTE PTR [edi+0x18ecfe6d],al
  410d6b:	mov    edx,0xfb30ce8f
  410d70:	or     dl,bl
  410d72:	xchg   esi,eax
  410d73:	clc    
  410d74:	pop    ds
  410d75:	scas   eax,DWORD PTR es:[edi]
  410d76:	adc    ch,0xdb
  410d79:	and    eax,0xbb49378c
  410d7e:	lods   al,BYTE PTR ds:[esi]
  410d7f:	xor    esi,DWORD PTR [ebx-0x59]
  410d82:	cli    
  410d83:	das    
  410d84:	mov    edx,0xd1d48f0c
  410d89:	retf   
  410d8a:	cmp    cl,bl
  410d8c:	fidivr WORD PTR [eax]
  410d8e:	out    0xdc,al
  410d90:	and    al,BYTE PTR [ebp+0x623c8a45]
  410d96:	mov    al,0x53
  410d98:	xchg   DWORD PTR [edi],ebp
  410d9a:	(bad)  
  410d9b:	pop    ebx
  410d9c:	sbb    BYTE PTR es:[ebx+0x36],ch
  410da0:	inc    esp
  410da1:	jbe    0x410dfb
  410da3:	sbb    BYTE PTR [ebp-0x5cfc3b0],bl
  410da9:	call   0x1b36abed
  410dae:	mov    dh,BYTE PTR [edx+0x54]
  410db1:	and    DWORD PTR [ebp-0x9],ebp
  410db4:	cmp    DWORD PTR [ebp+0xf64abc8],0x8285540c
  410dbe:	pusha  
  410dbf:	sbb    dl,bl
  410dc1:	imul   eax
  410dc3:	imul   DWORD PTR [edi-0x55723df8]
  410dc9:	add    eax,0x6e3c8d29
  410dce:	in     al,0x85
  410dd0:	inc    ecx
  410dd1:	mov    fs,eax
  410dd3:	call   0xcf5e:0x15b718c3
  410dda:	ret    0x4240
  410ddd:	(bad)  
  410dde:	aam    0xbc
  410de0:	jmp    eax
  410de2:	add    al,ch
  410de4:	jnp    0x410da1
  410de6:	inc    eax
  410de7:	mov    ecx,0xe569e121
  410dec:	idiv   DWORD PTR [ecx-0x6d]
  410def:	bound  esi,QWORD PTR [edi+eiz*1+0x60f8215a]
  410df6:	into   
  410df7:	pop    edx
  410df8:	lods   eax,DWORD PTR ds:[esi]
  410df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dfa:	mov    edi,0x60032bba
  410dff:	jnp    0x410e4e
  410e01:	ds jg  0x410da6
  410e04:	cld    
  410e05:	mov    cl,BYTE PTR [ecx+0x2870ae14]
  410e0b:	jnp    0x410e25
  410e0d:	enter  0xe761,0x30
  410e11:	shl    DWORD PTR [ecx+0x2dd2d31a],cl
  410e17:	mov    edi,0x5fbf4b18
  410e1c:	popf   
  410e1d:	cwde   
  410e1e:	add    esp,DWORD PTR [edi+ecx*8]
  410e21:	loop   0x410e5f
  410e23:	mov    ds:0xb687676b,eax
  410e28:	and    bh,BYTE PTR [ebx]
  410e2a:	popf   
  410e2b:	push   0x1c80ed35
  410e30:	inc    eax
  410e31:	jb     0x410dda
  410e33:	pushf  
  410e34:	pop    eax
  410e35:	idiv   dh
  410e37:	sbb    BYTE PTR [edi],0xdd
  410e3a:	ins    DWORD PTR es:[edi],dx
  410e3b:	loope  0x410e92
  410e3d:	xchg   edi,eax
  410e3e:	setge  BYTE PTR [ebp-0x1e1e1bba]
  410e45:	add    BYTE PTR [eax+0x1b1ffe10],0xf3
  410e4c:	cli    
  410e4d:	test   al,0xe8
  410e4f:	popf   
  410e50:	push   es
  410e51:	or     edx,DWORD PTR [ebx+0x654ebf3e]
  410e57:	pushf  
  410e58:	jle    0x410deb
  410e5a:	js     0x410e7d
  410e5c:	jmp    0x410ed9
  410e5e:	xchg   edx,eax
  410e5f:	xor    eax,0xf0793cfd
  410e64:	pop    ecx
  410e65:	jge    0x410ec1
  410e67:	push   0xffffffa7
  410e69:	fwait
  410e6a:	pop    esp
  410e6b:	jb     0x410e02
  410e6d:	xchg   esp,eax
  410e6e:	push   0xfcf63319
  410e73:	dec    esi
  410e74:	cmp    edx,ebx
  410e76:	mov    edi,0x87ca245f
  410e7b:	sub    ebp,DWORD PTR [esi]
  410e7d:	cmp    DWORD PTR [esi-0x689d9e24],edx
  410e83:	xchg   ecx,eax
  410e84:	inc    eax
  410e85:	rol    ah,cl
  410e87:	out    0x6b,al
  410e89:	daa    
  410e8a:	call   0x4933ef42
  410e8f:	scas   eax,DWORD PTR es:[edi]
  410e90:	inc    edx
  410e91:	cmp    DWORD PTR [ebp+0x172bf6be],edx
  410e97:	mov    cl,BYTE PTR [eax+0x7c]
  410e9a:	push   cs
  410e9b:	aaa    
  410e9c:	dec    edi
  410e9d:	and    ebp,edx
  410e9f:	jmp    0xcc34:0x2d533576
  410ea6:	inc    edi
  410ea7:	pop    ebp
  410ea8:	sar    DWORD PTR [edi],0x8e
  410eab:	and    eax,DWORD PTR [ebx+0x10]
  410eae:	ss pop edi
  410eb0:	and    bh,BYTE PTR [esi-0x43]
  410eb3:	xchg   ebx,eax
  410eb4:	mov    al,0xf
  410eb6:	inc    eax
  410eb7:	sbb    esi,0xfbdbfdb9
  410ebd:	jmp    0x410e44
  410ebf:	pop    ebx
  410ec0:	push   esi
  410ec1:	mov    edi,0xcc6f0728
  410ec6:	jp     0x410f26
  410ec8:	fwait
  410ec9:	js     0x410e79
  410ecb:	push   0x565fb8e1
  410ed0:	cs inc ebp
  410ed2:	dec    ebx
  410ed3:	hlt    
  410ed4:	repz xchg edx,eax
  410ed6:	pusha  
  410ed7:	test   eax,0xf5871c14
  410edc:	xchg   ebp,eax
  410edd:	xor    eax,0xad7fc53d
  410ee2:	xchg   edx,eax
  410ee3:	jle    0x410e74
  410ee5:	inc    esi
  410ee6:	cli    
  410ee7:	cs pop esi
  410ee9:	add    eax,0xc1b7964
  410eee:	pushf  
  410eef:	cmp    BYTE PTR [ecx-0x59e4dafd],al
  410ef5:	or     al,0xff
  410ef7:	test   BYTE PTR [ebp-0x4a9ca5b2],al
  410efd:	rol    BYTE PTR [esi-0x689ac586],0xc6
  410f04:	mov    ?,ebp
  410f06:	outs   dx,BYTE PTR ds:[esi]
  410f07:	retf   
  410f08:	loop   0x410f2e
  410f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f0b:	aam    0x4a
  410f0d:	shr    DWORD PTR [ecx-0x1e37129f],cl
  410f13:	sub    cl,BYTE PTR [ebx+0x246214bd]
  410f19:	jb     0x410efb
  410f1b:	(bad)  [ebp+0x1f6cb33]
  410f21:	mov    ch,0x36
  410f23:	sbb    ecx,DWORD PTR [edi]
  410f25:	or     edx,DWORD PTR [edx+0x1c]
  410f28:	jmp    0x410f89
  410f2a:	xchg   ebp,eax
  410f2b:	pop    es
  410f2c:	cmp    al,0x2e
  410f2e:	mov    gs,ebp
  410f30:	xlat   BYTE PTR ds:[ebx]
  410f31:	inc    ecx
  410f32:	inc    esp
  410f33:	adc    al,0x37
  410f35:	arpl   WORD PTR [ebp+0x3f8fb790],bx
  410f3b:	hlt    
  410f3c:	enter  0xd921,0x36
  410f40:	imul   ebx,ecx,0xa1efc794
  410f46:	sti    
  410f47:	pop    ecx
  410f48:	popa   
  410f49:	pop    esp
  410f4a:	cmp    eax,0xe6070563
  410f4f:	adc    eax,0x56f58257
  410f54:	sub    eax,0xaf12debe
  410f59:	div    BYTE PTR [edi]
  410f5b:	xchg   ecx,eax
  410f5c:	loope  0x410eee
  410f5e:	or     DWORD PTR [eax-0x6fb29b66],ebp
  410f64:	inc    eax
  410f65:	shl    BYTE PTR [edi-0x47b47418],cl
  410f6b:	mov    cl,0x64
  410f6d:	mov    ecx,0x783d927f
  410f72:	mov    DWORD PTR [ecx],ebx
  410f74:	or     al,0xa5
  410f76:	and    al,0xaa
  410f78:	push   ebx
  410f79:	idiv   BYTE PTR ss:[ecx+eax*4]
  410f7d:	mov    ds:0x642808e3,al
  410f82:	in     al,dx
  410f83:	jmp    0x76f2:0xa371cc3a
  410f8a:	jo     0x410fd5
  410f8c:	out    0x91,al
  410f8e:	xchg   esi,eax
  410f8f:	fadd   QWORD PTR es:[ebx+0x27]
  410f93:	pop    ecx
  410f94:	xor    BYTE PTR [edi+0x18],0x37
  410f98:	mov    ds:0x13b8acc1,eax
  410f9d:	in     al,dx
  410f9e:	lods   eax,DWORD PTR ds:[esi]
  410f9f:	test   eax,0x230e6fdf
  410fa4:	sub    BYTE PTR [ebx-0x7ff1f744],0x41
  410fab:	sbb    al,0x3a
  410fad:	stc    
  410fae:	adc    ebp,DWORD PTR [esi-0x39d240aa]
  410fb4:	push   0x786b8e44
  410fb9:	sbb    ebx,DWORD PTR [ebx+0x6c1e6427]
  410fbf:	dec    ebp
  410fc0:	push   ds
  410fc1:	mov    BYTE PTR [edi],dl
  410fc3:	test   DWORD PTR gs:[edx+0x6e2c89e4],edx
  410fca:	sub    eax,0xa3a13494
  410fcf:	sbb    DWORD PTR [ebx+0x463dfd8f],ebp
  410fd5:	in     al,dx
  410fd6:	sbb    BYTE PTR [edi+0x10],al
  410fd9:	mov    DWORD PTR [ebp+ebp*4+0x424f5553],ebx
  410fe0:	push   ss
  410fe1:	dec    esi
  410fe2:	test   BYTE PTR [edi],ah
  410fe4:	aas    
  410fe5:	jp     0x411059
  410fe7:	fadd   DWORD PTR [esi+0x2f6251f4]
  410fed:	or     BYTE PTR [edi],0x1
  410ff0:	sti    
  410ff1:	pop    eax
  410ff2:	pop    edi
  410ff3:	jne    0x410ff2
  410ff5:	fs loop 0x411026
  410ff8:	scas   eax,DWORD PTR es:[edi]
  410ff9:	xchg   BYTE PTR [edi],bl
  410ffb:	mov    eax,0xb3eb9f55
  411000:	retf   
  411001:	inc    edx
  411002:	push   ecx
  411003:	jmp    0x31bd:0x193f71dd
  41100a:	or     BYTE PTR [ecx+0x70],cl
  41100d:	(bad)  
  41100e:	test   eax,0xbf5beba4
  411013:	cmc    
  411014:	sti    
  411015:	push   edi
  411016:	mov    dh,0x69
  411018:	test   BYTE PTR [edx-0x26],0xa0
  41101c:	adc    al,0xbf
  41101e:	dec    esp
  41101f:	xor    ecx,ebx
  411021:	enter  0x8dca,0xd0
  411025:	push   esp
  411026:	sub    BYTE PTR [edi+eiz*2+0x1d50701e],0x88
  41102e:	call   0xbfe2:0x6e5e0f9e
  411035:	icebp  
  411036:	sbb    al,BYTE PTR [edi-0x4a61907a]
  41103c:	inc    esp
  41103d:	call   0xc176:0x6c0edd5c
  411044:	and    ah,BYTE PTR [esi-0x22]
  411047:	adc    al,0x8
  411049:	test   eax,esp
  41104b:	in     eax,0x4f
  41104d:	fmul   QWORD PTR [edi]
  41104f:	add    al,0xc
  411051:	jecxz  0x41106d
  411053:	and    edi,edx
  411055:	mov    ebp,0x66c744f4
  41105a:	mov    dl,0x9
  41105c:	mov    esp,0xb8cc86a4
  411061:	fimul  WORD PTR [edi+0x57170782]
  411067:	xchg   esp,eax
  411068:	lds    ebx,FWORD PTR [esi+edi*8-0x1005f571]
  41106f:	inc    edx
  411070:	and    al,0xa9
  411072:	sub    DWORD PTR [esi+ebp*1+0x22],0xf1a83b73
  41107a:	dec    esp
  41107b:	or     ah,0x52
  41107e:	into   
  41107f:	cdq    
  411080:	loopne 0x411012
  411082:	hlt    
  411083:	push   eax
  411084:	bound  esp,QWORD PTR [eax-0x3]
  411087:	jbe    0x4110c0
  411089:	scas   eax,DWORD PTR es:[edi]
  41108a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41108b:	imul   ecx,DWORD PTR [edi-0x5248ccf6],0xd84efb83
  411095:	fidiv  DWORD PTR fs:[esi+0x53]
  411099:	inc    ebx
  41109a:	imul   ebx,ebx,0xffffffdb
  41109d:	lods   eax,DWORD PTR ds:[esi]
  41109e:	and    DWORD PTR [ebx],edi
  4110a0:	les    esi,FWORD PTR [ecx+0xf]
  4110a3:	xor    esi,eax
  4110a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110a6:	sbb    esp,ebx
  4110a8:	jne    0x4110eb
  4110aa:	cmp    DWORD PTR [edi+0x4f],ebp
  4110ad:	aam    0x43
  4110af:	imul   ebp,DWORD PTR [ebp+0xfb5eef1],0xc5b9fd1b
  4110b9:	icebp  
  4110ba:	push   edx
  4110bb:	icebp  
  4110bc:	scas   al,BYTE PTR es:[edi]
  4110bd:	push   esp
  4110be:	ja     0x411060
  4110c0:	mov    ebx,0xe739d1be
  4110c5:	jb     0x4110bb
  4110c7:	sub    al,0x10
  4110c9:	test   eax,0x42819503
  4110ce:	xor    edx,edi
  4110d0:	mov    ds:0xe76342ab,eax
  4110d5:	outs   dx,DWORD PTR ds:[esi]
  4110d6:	push   ecx
  4110d7:	and    eax,0xd1ac7dec
  4110dc:	repz xor eax,0x75129931
  4110e2:	es aam 0x21
  4110e5:	fst    DWORD PTR [eax+0x50037a7]
  4110eb:	loopne 0x41116a
  4110ed:	iret   
  4110ee:	mov    ds:0xd790b2db,eax
  4110f3:	imul   edi
  4110f5:	mov    dl,0x27
  4110f7:	and    BYTE PTR [edx],al
  4110f9:	test   al,0x5
  4110fb:	dec    edx
  4110fc:	sub    eax,0x45bb8f83
  411101:	ja     0x41108e
  411103:	cwde   
  411104:	lahf   
  411105:	test   eax,0x8988d2f2
  41110a:	pushf  
  41110b:	js     0x41111a
  41110d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41110e:	stos   DWORD PTR es:[edi],eax
  41110f:	xchg   BYTE PTR [edi-0x43bf54cc],cl
  411115:	mov    DWORD PTR [edi],ecx
  411117:	gs ss jle 0x411124
  41111b:	aas    
  41111c:	out    0xa9,eax
  41111e:	js     0x41113d
  411120:	dec    edi
  411121:	sbb    ebx,DWORD PTR [eax+ecx*2+0x4b725465]
  411128:	popa   
  411129:	push   ebx
  41112a:	jnp    0x4110af
  41112c:	mov    cl,0x1b
  41112e:	dec    eax
  41112f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411130:	xor    al,0xa0
  411132:	mov    edx,0x40fa859d
  411137:	inc    esp
  411138:	jmp    0x85be6540
  41113d:	and    al,0xe
  41113f:	sub    edi,edx
  411141:	mov    DWORD PTR [esp+eiz*8+0x78],esi
  411145:	popf   
  411146:	xor    BYTE PTR [esi],bl
  411148:	mov    ebp,0x7b8620e8
  41114d:	sub    eax,0x1195fa92
  411152:	ret    
  411153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411154:	std    
  411155:	sub    esp,DWORD PTR [edi+0x5f21d9ab]
  41115b:	out    0x8a,eax
  41115d:	or     ecx,ebp
  41115f:	push   edi
  411160:	out    0xe8,eax
  411162:	test   eax,0xe0763a12
  411167:	xor    dh,ah
  411169:	not    DWORD PTR [ebp-0x27f45618]
  41116f:	mov    eax,ds:0x40f2e2b
  411174:	(bad)  
  411175:	mov    edi,0xdb923051
  41117a:	cmp    ch,BYTE PTR ds:[ebx-0x46]
  41117e:	jle    0x411101
  411180:	sub    BYTE PTR [esi+0x2b5e2a3e],0xee
  411187:	outs   dx,BYTE PTR ds:[esi]
  411188:	dec    edx
  411189:	cmp    al,0x77
  41118b:	and    al,BYTE PTR [ecx+0x729436ce]
  411191:	fisub  WORD PTR [eax-0x6]
  411194:	pop    ecx
  411195:	call   0xea4b267e
  41119a:	jge    0x411129
  41119c:	jmp    0xda64:0x799c0da1
  4111a3:	loope  0x411136
  4111a5:	mov    dh,0xf7
  4111a7:	mov    ah,0xcc
  4111a9:	and    al,0xd4
  4111ab:	jns    0x411185
  4111ad:	call   0xed05aaf3
  4111b2:	push   esi
  4111b3:	push   ecx
  4111b4:	test   al,0x8d
  4111b6:	(bad)  
  4111b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111b8:	aad    0x79
  4111ba:	loop   0x411202
  4111bc:	add    BYTE PTR [edx],0x5d
  4111bf:	mov    WORD PTR [ebp-0xc],?
  4111c2:	dec    edx
  4111c3:	sbb    edx,DWORD PTR [edi+ebx*4]
  4111c6:	clc    
  4111c7:	jmp    0xa7da:0xb4616f11
  4111ce:	add    BYTE PTR [esi+ebp*2],dh
  4111d1:	stos   DWORD PTR es:[edi],eax
  4111d2:	pop    es
  4111d3:	mul    BYTE PTR [edi+0x11362499]
  4111d9:	stos   BYTE PTR es:[edi],al
  4111da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111db:	aad    0xfc
  4111dd:	(bad)  
  4111de:	jmp    0x4111a9
  4111e0:	jle    0x41118a
  4111e2:	jl     0x4111a2
  4111e4:	jmp    0x4111fc
  4111e6:	push   edi
  4111e7:	pop    eax
  4111e8:	clc    
  4111e9:	jp     0x41118c
  4111eb:	(bad)  
  4111ec:	fwait
  4111ed:	scas   eax,DWORD PTR es:[edi]
  4111ee:	cmc    
  4111ef:	shl    cl,1
  4111f1:	fldenv [edi]
  4111f3:	jo     0x4111b9
  4111f5:	sbb    DWORD PTR [edx+0x49],ebx
  4111f8:	xchg   DWORD PTR [ecx-0x7f749371],ecx
  4111fe:	out    0x6b,al
  411200:	rol    DWORD PTR [edx-0x55503082],0x89
  411207:	push   edx
  411208:	es adc eax,0xec731786
  41120e:	daa    
  41120f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411210:	mov    bl,0xfc
  411212:	or     al,0xfc
  411214:	xor    eax,0x74fec7cc
  411219:	ret    
  41121a:	cmc    
  41121b:	add    al,ah
  41121d:	cmc    
  41121e:	test   al,0x4e
  411220:	jecxz  0x411234
  411222:	and    al,0x68
  411224:	sbb    al,0xb0
  411226:	sbb    eax,0x8be4059a
  41122b:	sub    edx,DWORD PTR [ebx]
  41122d:	sub    eax,0x859c3faa
  411232:	int3   
  411233:	push   esi
  411234:	adc    esi,eax
  411236:	lods   al,BYTE PTR ds:[esi]
  411237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411238:	ins    BYTE PTR es:[edi],dx
  411239:	xor    edi,DWORD PTR [esi-0x3910eb]
  41123f:	mov    DWORD PTR [ebx],ebx
  411241:	lock es push ebx
  411244:	mov    DWORD PTR [edx+0x61],ebp
  411247:	iret   
  411248:	mov    edx,0x1a3a06dd
  41124d:	jl     0x411213
  41124f:	mov    fs,WORD PTR [edi+0x3c59b78e]
  411255:	daa    
  411256:	mov    ecx,0xc90f9fb3
  41125b:	cwde   
  41125c:	loopne 0x411223
  41125e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41125f:	sar    DWORD PTR [esi+ebx*8+0x3c],1
  411263:	fst    QWORD PTR [esi+0x2a]
  411266:	jle    0x411236
  411268:	fild   QWORD PTR [ecx+eax*8+0x1f]
  41126c:	fcmove st,st(5)
  41126e:	ss cmp ecx,edx
  411271:	nop
  411272:	repnz or eax,0xa484880b
  411278:	(bad)  
  411279:	push   esi
  41127a:	xchg   ebp,eax
  41127b:	lock (bad) 
  41127d:	sti    
  41127e:	iret   
  41127f:	xchg   DWORD PTR [edx],eax
  411281:	add    bh,BYTE PTR [edx-0x4f]
  411284:	imul   edi,DWORD PTR [edx+0x5c],0x55
  411288:	mov    dh,0x56
  41128a:	add    al,bh
  41128c:	cwde   
  41128d:	mov    ds:0x53dbac62,eax
  411292:	adc    BYTE PTR [ebp+0x24],al
  411295:	xchg   ebx,eax
  411296:	cmp    BYTE PTR fs:[edi+0xd],cl
  41129a:	inc    esi
  41129b:	jge    0x4112a7
  41129d:	pushf  
  41129e:	mov    al,ds:0xd2072209
  4112a3:	out    0x32,eax
  4112a5:	push   ebx
  4112a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a7:	push   cs
  4112a8:	xor    al,BYTE PTR [ebp+0x4e80bdce]
  4112ae:	jns    0x4112a6
  4112b0:	push   ecx
  4112b1:	sub    al,0xd4
  4112b3:	das    
  4112b4:	sti    
  4112b5:	mov    cl,0x43
  4112b7:	js     0x4112f8
  4112b9:	sbb    al,0x27
  4112bb:	jno    0x4112fb
  4112bd:	popa   
  4112be:	inc    ecx
  4112bf:	int    0xe4
  4112c1:	test   DWORD PTR [edx],ecx
  4112c3:	rol    BYTE PTR [eax+0x13],1
  4112c6:	in     al,dx
  4112c7:	and    DWORD PTR fs:[ebx-0x72],esi
  4112cb:	rcr    BYTE PTR [edi-0x54eabd30],1
  4112d1:	lds    edx,FWORD PTR [ecx-0x7d]
  4112d4:	sub    DWORD PTR [ebx-0x567b0751],esi
  4112da:	in     al,dx
  4112db:	retf   0x5972
  4112de:	push   cs
  4112df:	mov    ch,0x60
  4112e1:	sub    ch,BYTE PTR [edi+eax*1-0x7ec79ca7]
  4112e8:	or     eax,DWORD PTR [esi-0x31]
  4112eb:	cmc    
  4112ec:	sub    BYTE PTR [ebx+0x54],0xf0
  4112f0:	mov    bl,0xcd
  4112f2:	lock ror DWORD PTR [eax],0x70
  4112f6:	add    DWORD PTR [esi+0x63ae5c29],edi
  4112fc:	loope  0x411318
  4112fe:	sub    esi,DWORD PTR [ebx+0x8]
  411301:	ja     0x411346
  411303:	cmp    al,0x6
  411305:	mov    bh,0xc3
  411307:	pop    eax
  411308:	cmp    al,0xd7
  41130a:	jecxz  0x41135b
  41130c:	xchg   edx,eax
  41130d:	xchg   DWORD PTR [edx-0x4bb133db],esp
  411313:	aaa    
  411314:	gs loopne 0x4112dc
  411317:	mov    bh,0x9c
  411319:	xor    DWORD PTR [esi-0x52],eax
  41131c:	cmp    dl,BYTE PTR [eax+0x11]
  41131f:	xchg   esi,eax
  411320:	mov    eax,ds:0xeda395f0
  411325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411326:	sub    eax,0xe62c60b1
  41132b:	mov    al,0x1
  41132d:	adc    esi,DWORD PTR [ebx+edx*1+0x2e]
  411331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411332:	imul   edx,DWORD PTR [edi-0x29],0x81108bdd
  411339:	into   
  41133a:	cmc    
  41133b:	popa   
  41133c:	xchg   esi,eax
  41133d:	cmp    al,0xa1
  41133f:	sti    
  411340:	leave  
  411341:	jmp    0x9c19:0x8507535
  411348:	enter  0x9bc4,0xa1
  41134c:	outs   dx,BYTE PTR ds:[esi]
  41134d:	fwait
  41134e:	dec    edx
  41134f:	xchg   edx,eax
  411350:	jmp    0x7b5b:0x9046fab4
  411357:	sub    eax,0xc1614afb
  41135c:	cmp    edi,DWORD PTR [ecx+eax*1+0x7f]
  411360:	mov    al,0xd1
  411362:	fldenv [eax+0x615e0ad2]
  411368:	scas   al,BYTE PTR es:[edi]
  411369:	or     ch,BYTE PTR [ebx]
  41136b:	int3   
  41136c:	cmp    dh,0x13
  41136f:	and    al,0xc6
  411371:	not    BYTE PTR [esi]
  411373:	cmp    al,0x92
  411375:	cmp    al,0x93
  411377:	daa    
  411378:	jnp    0x411301
  41137a:	sbb    DWORD PTR [edi-0x3670494f],ebx
  411380:	jge    0x41130b
  411382:	mov    eax,ds:0x51195b3a
  411387:	push   ebp
  411388:	outs   dx,BYTE PTR ds:[esi]
  411389:	hlt    
  41138a:	sub    bh,BYTE PTR [ecx+0x177d9aa3]
  411390:	pop    edi
  411391:	add    DWORD PTR [edi+0x346c85ca],edx
  411397:	(bad)  
  411398:	out    dx,al
  411399:	retf   
  41139a:	pusha  
  41139b:	sbb    al,0x28
  41139d:	mov    ds:0xa9c6de91,al
  4113a2:	push   esi
  4113a3:	inc    esi
  4113a4:	aas    
  4113a5:	cmp    BYTE PTR [edx-0x31180211],bh
  4113ab:	mov    DWORD PTR [ebx-0x2d39a6f7],esi
  4113b1:	sbb    al,0x12
  4113b3:	stos   DWORD PTR es:[edi],eax
  4113b4:	dec    edx
  4113b5:	push   ebx
  4113b6:	(bad)  
  4113b7:	shr    BYTE PTR [esp+esi*8+0x5d17e04b],0x66
  4113bf:	adc    ah,0x2c
  4113c2:	xchg   esi,eax
  4113c3:	leave  
  4113c4:	cli    
  4113c5:	xor    ah,ah
  4113c7:	sub    DWORD PTR [edx+0x7e],0x486e08a2
  4113ce:	xchg   esi,eax
  4113cf:	in     eax,0xf0
  4113d1:	dec    edi
  4113d2:	cmp    al,0xa9
  4113d4:	leave  
  4113d5:	stos   BYTE PTR es:[edi],al
  4113d6:	icebp  
  4113d7:	lods   eax,DWORD PTR ds:[esi]
  4113d8:	push   ecx
  4113d9:	or     al,ah
  4113db:	jnp    0x41135e
  4113dd:	popf   
  4113de:	xchg   ecx,eax
  4113df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113e0:	cmp    eax,0x7ef21349
  4113e5:	idiv   eax
  4113e7:	outs   dx,BYTE PTR ds:[esi]
  4113e8:	and    BYTE PTR [ebx-0x7d],ah
  4113eb:	jae    0x4113f2
  4113ed:	push   0xe45d1f0d
  4113f2:	push   esp
  4113f3:	ins    DWORD PTR es:[edi],dx
  4113f4:	or     eax,0xb7dabd69
  4113f9:	in     eax,dx
  4113fa:	pop    eax
  4113fb:	dec    ebp
  4113fc:	popa   
  4113fd:	jne    0x411431
  4113ff:	adc    dl,dh
  411401:	jae    0x4113ad
  411403:	inc    ecx
  411404:	xchg   edx,eax
  411405:	scas   eax,DWORD PTR es:[edi]
  411406:	push   esi
  411407:	es in  al,0x7a
  41140a:	shl    ah,1
  41140c:	push   0x67
  41140e:	xchg   DWORD PTR [ecx+0x42],edi
  411411:	and    DWORD PTR [ebx-0x687c1839],esi
  411417:	hlt    
  411418:	inc    esi
  411419:	mov    gs,WORD PTR [eax-0x1d]
  41141c:	add    al,0xe1
  41141e:	dec    edx
  41141f:	ins    DWORD PTR es:[edi],dx
  411420:	call   0xd4224675
  411425:	mov    ch,BYTE PTR [ebx+0x0]
  411428:	ret    
  411429:	mov    eax,0x7392a014
  41142e:	mov    ebp,0xe554b0cc
  411433:	and    esi,DWORD PTR [esi]
  411435:	sahf   
  411436:	es int3 
  411438:	out    dx,al
  411439:	fldpi  
  41143b:	out    dx,al
  41143c:	push   eax
  41143d:	mov    ss:0xc0f2ece0,al
  411443:	jp     0x4114a5
  411445:	(bad)  
  411447:	cmp    eax,0x3450d509
  41144c:	sbb    eax,0x2f20c4ef
  411451:	adc    dh,dh
  411453:	data16 jne 0x4114b3
  411456:	push   ecx
  411457:	sbb    al,0x47
  411459:	scas   eax,DWORD PTR es:[edi]
  41145a:	rcr    edi,cl
  41145c:	dec    ebx
  41145d:	push   0x112eae81
  411462:	lods   eax,DWORD PTR ds:[esi]
  411463:	push   ebp
  411464:	pop    ds
  411465:	and    esp,esp
  411467:	or     DWORD PTR [edi+eax*1],0xdcf34fed
  41146e:	pop    es
  41146f:	or     eax,DWORD PTR [ecx]
  411471:	push   edi
  411472:	nop
  411473:	fisttp QWORD PTR [eax]
  411475:	stc    
  411476:	ss mov ebp,0x293d7cfd
  41147c:	xor    esp,esp
  41147e:	adc    eax,0x7d74d048
  411483:	inc    edx
  411484:	or     BYTE PTR [esi+0x127ca48f],cl
  41148a:	inc    ebp
  41148b:	mov    cl,0x47
  41148d:	mov    eax,0x1589c4ad
  411492:	repz add DWORD PTR ds:0x6f0b7056,ecx
  411499:	repnz or BYTE PTR ds:0xaae879a8,cl
  4114a0:	lds    ebx,FWORD PTR [ebx+ebx*1-0x46]
  4114a4:	dec    esi
  4114a5:	sub    dh,BYTE PTR [ebx-0x5a615e00]
  4114ab:	pop    eax
  4114ac:	jp     0x4114a4
  4114ae:	mov    ebx,DWORD PTR [ecx]
  4114b0:	jae    0x4114bb
  4114b2:	xchg   DWORD PTR [esi+0x63],esp
  4114b5:	stc    
  4114b6:	aaa    
  4114b7:	sahf   
  4114b8:	pushf  
  4114b9:	mov    bh,0x77
  4114bb:	outs   dx,DWORD PTR ds:[esi]
  4114bc:	adc    BYTE PTR [ecx+0xe],ch
  4114bf:	or     ebx,DWORD PTR [eax-0x22]
  4114c2:	pop    ecx
  4114c3:	jle    0x411544
  4114c5:	push   ds
  4114c6:	out    dx,eax
  4114c7:	mov    al,0x70
  4114c9:	xor    BYTE PTR [esi+edx*4],cl
  4114cc:	push   ss
  4114cd:	(bad)  
  4114ce:	pop    ecx
  4114cf:	les    ebx,FWORD PTR [edi+0x6d]
  4114d2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d4:	daa    
  4114d5:	mov    esi,0x212b1206
  4114da:	inc    eax
  4114db:	bound  edx,QWORD PTR [ecx+ebp*2-0x27]
  4114df:	pop    esp
  4114e0:	ss retf 0xfb49
  4114e4:	or     edi,DWORD PTR [ecx]
  4114e6:	push   cs
  4114e7:	shl    bh,cl
  4114e9:	(bad)  [ebx+0x58a9ac44]
  4114ef:	ds ret 0x579b
  4114f3:	mov    bl,BYTE PTR [edi]
  4114f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114f6:	sub    DWORD PTR [edi+0x5e1be5eb],eax
  4114fc:	popa   
  4114fd:	scas   eax,DWORD PTR es:[edi]
  4114fe:	jno    0x411529
  411500:	jg     0x41148b
  411502:	into   
  411503:	cmc    
  411504:	xor    cl,BYTE PTR [ecx-0x36]
  411507:	jns    0x411561
  411509:	push   ebx
  41150a:	push   ds
  41150b:	pop    edi
  41150c:	pop    esp
  41150d:	push   eax
  41150e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41150f:	adc    eax,0x177e45af
  411514:	cmp    al,0x88
  411516:	jbe    0x41154e
  411518:	jp     0x4114e6
  41151a:	xor    al,0x5a
  41151c:	mov    ah,0xcf
  41151e:	sub    DWORD PTR ss:[edi],edi
  411521:	pop    ebx
  411522:	mov    al,0x82
  411524:	inc    edx
  411525:	int3   
  411526:	sahf   
  411527:	cmp    eax,0xf0e48cf9
  41152c:	test   DWORD PTR [edx+edx*2+0x1920d015],eax
  411533:	fstp   TBYTE PTR [ebx+eax*2]
  411536:	mov    esp,0xa36d906f
  41153b:	xor    eax,0xfaee2681
  411540:	aaa    
  411541:	jmp    0x8e06:0xf226614e
  411548:	sbb    eax,0xa6deb90c
  41154d:	ja     0x4114f0
  41154f:	lods   eax,DWORD PTR es:[esi]
  411551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411552:	cli    
  411553:	jne    0x4115a0
  411555:	div    BYTE PTR [ecx+0x4f]
  411558:	push   ebx
  411559:	push   ss
  41155a:	out    dx,al
  41155b:	mov    dl,0x66
  41155d:	pop    esi
  41155e:	push   0xffffffe6
  411560:	pusha  
  411561:	ss out dx,eax
  411563:	std    
  411564:	add    al,bl
  411566:	stos   BYTE PTR es:[edi],al
  411567:	popf   
  411568:	sbb    al,0x35
  41156a:	ss mov edi,0xbe6c9120
  411570:	inc    edx
  411571:	ret    
  411572:	call   0xfeb:0x2e2d3587
  411579:	xchg   esi,eax
  41157a:	out    0x10,al
  41157c:	ds and eax,0x1857604e
  411582:	adc    eax,0xb0024ea7
  411587:	clc    
  411588:	loopne 0x41154e
  41158a:	inc    eax
  41158b:	sar    al,cl
  41158d:	push   es
  41158e:	pop    ebp
  41158f:	xor    al,ah
  411591:	mov    BYTE PTR fs:[ecx-0x4e390011],0xde
  411599:	std    
  41159a:	adc    eax,0xbc485bf0
  41159f:	and    al,0xe6
  4115a1:	jo     0x411616
  4115a3:	or     BYTE PTR [ebp+0x45],dh
  4115a6:	repnz push esi
  4115a8:	popf   
  4115a9:	outs   dx,DWORD PTR ds:[esi]
  4115aa:	pop    ebp
  4115ab:	cmp    BYTE PTR [esp+ebp*2+0x3f0099fd],0x56
  4115b3:	das    
  4115b4:	pop    eax
  4115b5:	loopne 0x411561
  4115b7:	jb     0x4115f8
  4115b9:	mov    DWORD PTR [ecx+0x314cfeef],edi
  4115bf:	mov    dl,0xc9
  4115c1:	shl    DWORD PTR ds:0xee358b0b,1
  4115c7:	cdq    
  4115c8:	popa   
  4115c9:	add    al,BYTE PTR [eax+ebx*4+0x7668bab4]
  4115d0:	das    
  4115d1:	sbb    esi,DWORD PTR [edx+ebx*1-0x6821332a]
  4115d8:	sti    
  4115d9:	imul   esp,DWORD PTR [ecx-0x14c51460],0xfffffff9
  4115e0:	idiv   BYTE PTR [edi]
  4115e2:	outs   dx,BYTE PTR ds:[esi]
  4115e3:	xor    ebx,ecx
  4115e5:	jl     0x411571
  4115e7:	test   al,0x33
  4115e9:	adc    al,0x49
  4115eb:	loopne 0x4115ec
  4115ed:	(bad)  
  4115ee:	push   ss
  4115ef:	sbb    al,0x4e
  4115f1:	mov    ah,BYTE PTR [ebx]
  4115f3:	sbb    al,0x10
  4115f5:	and    ebx,ebx
  4115f7:	inc    ebx
  4115f8:	push   ecx
  4115f9:	jbe    0x411638
  4115fb:	xchg   esp,eax
  4115fc:	int3   
  4115fd:	adc    al,0x85
  4115ff:	sub    al,0xdb
  411601:	and    al,0xa5
  411603:	les    edx,FWORD PTR [edi-0x4]
  411606:	dec    edi
  411608:	mov    ebp,esi
  41160a:	sub    DWORD PTR [edi],ebp
  41160c:	int3   
  41160d:	pop    ss
  41160e:	add    dh,ch
  411610:	mov    edx,0xa4b19b55
  411615:	sbb    DWORD PTR [eax],eax
  411617:	rcl    BYTE PTR ds:0x901c73ae,cl
  41161d:	in     eax,dx
  41161e:	fcomp  DWORD PTR [eax-0x7c]
  411621:	lods   al,BYTE PTR ds:[esi]
  411622:	cmp    bh,BYTE PTR [edx+eiz*1+0x5e]
  411626:	or     eax,0x6056a7aa
  41162b:	retf   0x1c63
  41162e:	inc    ebx
  41162f:	pop    ebp
  411630:	xor    edx,DWORD PTR ds:0x2ebf3cc8
  411636:	popf   
  411637:	fld    st(1)
  411639:	retf   0x51b7
  41163c:	inc    ecx
  41163d:	imul   ebx,DWORD PTR [esi],0x971ffb31
  411643:	bswap  esi
  411645:	push   ss
  411646:	jne    0x411663
  411648:	repz test al,0x3
  41164b:	mov    bl,0x91
  41164d:	cld    
  41164e:	lods   eax,DWORD PTR ds:[esi]
  41164f:	fwait
  411650:	dec    ebx
  411651:	push   0x2fd3d17f
  411656:	lahf   
  411657:	mov    ebp,0xa24cc458
  41165c:	jmp    0x411627
  41165e:	data16 jle 0x411629
  411661:	cdq    
  411662:	sbb    ch,BYTE PTR [ecx-0x14b4c2ea]
  411668:	pop    eax
  411669:	shl    ah,0x40
  41166c:	scas   al,BYTE PTR es:[edi]
  41166d:	mov    edx,0x15129ade
  411672:	jo     0x4116d2
  411674:	push   0xae8de2aa
  411679:	inc    eax
  41167a:	fnstsw WORD PTR [ebx+0x1d25bc2e]
  411680:	inc    ebp
  411681:	pop    es
  411682:	sbb    DWORD PTR [edi],0xffffffa8
  411685:	adc    eax,0x6970e25e
  41168a:	repz enter 0xb4e9,0x2b
  41168f:	jg     0x4116aa
  411691:	jnp    0x41166b
  411693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411694:	pop    edx
  411695:	outs   dx,DWORD PTR ds:[esi]
  411696:	mov    al,ds:0xa494595e
  41169b:	out    dx,al
  41169c:	out    0x39,al
  41169e:	dec    ebp
  41169f:	cmp    al,0x8a
  4116a1:	cmp    DWORD PTR cs:[ebx],0x79
  4116a5:	jle    0x41167c
  4116a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a8:	daa    
  4116a9:	cdq    
  4116aa:	or     al,0xf5
  4116ac:	adc    edx,ecx
  4116ae:	imul   eax,DWORD PTR [ebp-0x5aaaef0f],0x1fab1096
  4116b8:	(bad)  
  4116b9:	push   0x378f4867
  4116be:	ror    DWORD PTR [ebp-0x14e9e7e3],1
  4116c4:	ror    DWORD PTR [ecx+eax*8],1
  4116c7:	mov    dh,0xb8
  4116c9:	ret    
  4116ca:	and    al,0xed
  4116cc:	xchg   edi,eax
  4116cd:	and    DWORD PTR [esp+edi*4],esp
  4116d0:	rol    DWORD PTR [edi+0x7b],0xa8
  4116d4:	neg    DWORD PTR [ebp+0x54]
  4116d7:	sub    DWORD PTR [ebx+eax*8],esp
  4116da:	in     al,0x6c
  4116dc:	stos   BYTE PTR es:[edi],al
  4116dd:	mov    ebp,0x3d983664
  4116e2:	test   al,0x6b
  4116e4:	call   0x824:0xc96a400a
  4116eb:	and    edx,DWORD PTR es:[ecx]
  4116ee:	sub    ah,al
  4116f0:	xor    ecx,DWORD PTR [edx-0x7b]
  4116f3:	push   ebx
  4116f4:	scas   eax,DWORD PTR es:[edi]
  4116f5:	cdq    
  4116f6:	mov    edx,0xb469be29
  4116fb:	call   0xccf8:0x990d4f64
  411702:	lea    edi,[esp+edi*1+0x53]
  411706:	push   ebx
  411707:	andnps xmm5,XMMWORD PTR ds:0x1732f5ed
  41170e:	(bad)  
  41170f:	jbe    0x41173f
  411711:	test   BYTE PTR [edi],bh
  411713:	dec    ebp
  411714:	jo     0x4116df
  411716:	mov    al,0xc7
  411718:	mov    eax,0x9c1d9730
  41171d:	adc    DWORD PTR [edx],esp
  41171f:	ds sbb eax,0xd078da05
  411725:	sub    eax,0x95d1769e
  41172a:	sahf   
  41172b:	sbb    BYTE PTR [esp+edi*8],cl
  41172e:	pop    edx
  41172f:	xchg   edi,eax
  411730:	pusha  
  411731:	jae    0x41174d
  411733:	mov    al,ds:0xebc722de
  411738:	(bad)  
  411739:	es dec ebp
  41173b:	mov    esi,0x24f26ae8
  411740:	jle    0x41176a
  411742:	jb     0x41174c
  411744:	jge    0x411777
  411746:	sbb    edx,edx
  411748:	and    al,0x37
  41174a:	ror    DWORD PTR [ebp+ecx*1-0x53d10dbc],1
  411751:	ret    
  411752:	dec    esp
  411753:	xchg   esp,eax
  411754:	mul    BYTE PTR [ecx+0x12b78bbc]
  41175a:	gs jne 0x4117d0
  41175d:	cmp    bh,BYTE PTR [ebx+0xce83bd3]
  411763:	mov    eax,0xd1dd6f67
  411768:	push   ss
  411769:	cld    
  41176a:	out    dx,al
  41176b:	aas    
  41176c:	mov    eax,0xaf31fa30
  411771:	fs pusha 
  411773:	add    ebx,DWORD PTR [ebx]
  411775:	xor    ecx,esp
  411777:	sub    DWORD PTR [esi],esp
  411779:	fstp   QWORD PTR [ecx]
  41177b:	js     0x411715
  41177d:	jnp    0x4117db
  41177f:	jp     0x4117a9
  411781:	in     eax,dx
  411782:	jge    0x41174b
  411784:	jmp    0x3d1b:0x3be66654
  41178b:	jp     0x4117fb
  41178d:	inc    edi
  41178e:	xchg   ecx,eax
  41178f:	or     ah,BYTE PTR ds:0xf6e9d5bb
  411795:	pop    es
  411796:	outs   dx,BYTE PTR ds:[esi]
  411797:	xor    ah,BYTE PTR [ebx-0x626c4e64]
  41179d:	repnz call 0xa02b:0x77e38bd2
  4117a5:	not    DWORD PTR [ebp+0x39d6c474]
  4117ab:	push   ebx
  4117ac:	aad    0xf7
  4117ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117af:	or     DWORD PTR [eax],ebp
  4117b1:	jp     0x411823
  4117b3:	addr16 test eax,0xd598609e
  4117b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117ba:	push   eax
  4117bb:	mov    esi,0x7389415e
  4117c0:	mov    ebx,0x798a0901
  4117c5:	repnz icebp 
  4117c7:	leave  
  4117c8:	call   DWORD PTR ds:0x645f2005
  4117ce:	dec    ebp
  4117cf:	ret    
  4117d0:	lods   eax,DWORD PTR ds:[esi]
  4117d1:	jne    0x4117e3
  4117d3:	lods   al,BYTE PTR ds:[esi]
  4117d4:	and    cl,ah
  4117d6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4117d8:	mov    ds:0xfffbbce4,al
  4117dd:	jnp    0x4117a0
  4117df:	ins    BYTE PTR es:[edi],dx
  4117e0:	popa   
  4117e1:	nop
  4117e2:	xor    eax,DWORD PTR [ecx]
  4117e4:	and    ecx,DWORD PTR [esi-0x5]
  4117e7:	nop
  4117e8:	push   edx
  4117e9:	scas   eax,DWORD PTR es:[edi]
  4117ea:	jno    0x411795
  4117ec:	ja     0x411836
  4117ee:	sub    ecx,esi
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	mov    bl,0x95
  41186e:	add    cl,BYTE PTR [edi+0x7c7c90e8]
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	or     BYTE PTR [ecx+edx*4-0x36a5b626],0xcd
  411880:	fwait
  411881:	sar    ch,cl
  411883:	cmp    bl,0x64
  411886:	bound  esi,QWORD PTR [edx-0x3c]
  411889:	add    cl,cl
  41188b:	push   ss
  41188c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41188d:	cmc    
  41188e:	aaa    
  41188f:	sub    ecx,DWORD PTR [edx+eiz*4-0x6154edc3]
  411896:	mov    bl,0xef
  411898:	fidiv  DWORD PTR [ebx]
  41189a:	dec    ebp
  41189b:	jp     0x411854
  41189d:	retf   0xe619
  4118a0:	push   esp
  4118a1:	cmp    al,0xf4
  4118a3:	(bad)  
  4118a4:	push   ds
  4118a5:	mov    ebx,DWORD PTR [edx+0x40db19c]
  4118ab:	or     BYTE PTR [esi+ebp*2-0x62272b1a],al
  4118b2:	call   0x682abc1d
  4118b7:	jmp    0x4118ca
  4118b9:	jmp    DWORD PTR [esi-0xd]
  4118bc:	stos   BYTE PTR es:[edi],al
  4118bd:	xor    cl,al
  4118bf:	push   cs
  4118c0:	xor    eax,0xed41a4da
  4118c5:	popa   
  4118c6:	add    al,0xc6
  4118c9:	ret    0x81a1
  4118cc:	push   ds
  4118cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118ce:	repz repz push esp
  4118d1:	jl     0x4118af
  4118d3:	imul   esi,DWORD PTR [edi+0xc],0xffffff9d
  4118d7:	or     BYTE PTR [ecx+0x478bd96e],cl
  4118dd:	adc    DWORD PTR [ebx],ecx
  4118df:	test   al,0xc7
  4118e1:	sbb    edx,edx
  4118e3:	xor    cl,ch
  4118e5:	jge    0x411877
  4118e7:	ins    BYTE PTR es:[edi],dx
  4118e8:	sub    BYTE PTR [eax+eax*1-0x57],0x8d
  4118ed:	jae    0x41191f
  4118ef:	lea    edx,[ecx-0x122f4ddd]
  4118f5:	adc    DWORD PTR [esi],eax
  4118f7:	xor    ebx,DWORD PTR [esi-0x49]
  4118fa:	and    ebx,DWORD PTR [ebp-0x29]
  4118fd:	mov    ds:0x5dba3572,al
  411902:	and    DWORD PTR [edi],eax
  411904:	push   DWORD PTR [eax-0x32d437d7]
  41190a:	ds pop eax
  41190c:	inc    esp
  41190d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41190e:	inc    eax
  41190f:	cld    
  411910:	mov    cl,0xf6
  411912:	sahf   
  411913:	hlt    
  411914:	jae    0x41195a
  411916:	std    
  411917:	jl     0x41198c
  411919:	ret    
  41191a:	sub    ah,BYTE PTR [eax+eiz*8]
  41191d:	mov    bh,0xa2
  41191f:	push   ecx
  411920:	rol    DWORD PTR [esp+ebx*2],1
  411923:	mov    ah,0x90
  411925:	scas   al,BYTE PTR es:[edi]
  411926:	pushf  
  411927:	fbld   TBYTE PTR [eax+0x19]
  41192a:	(bad)  
  41192b:	mov    ds:0xd8e793df,eax
  411930:	cmc    
  411931:	lds    esi,FWORD PTR [edi+0x53]
  411934:	mov    ch,0x2c
  411936:	sub    al,0x8
  411938:	shr    DWORD PTR [eax],0x21
  41193b:	push   esi
  41193c:	or     al,0x60
  41193e:	pusha  
  41193f:	mov    ebx,0xafa3241f
  411944:	inc    esp
  411945:	pop    edi
  411946:	push   edi
  411947:	pop    ecx
  411948:	cdq    
  411949:	stos   BYTE PTR es:[edi],al
  41194a:	imul   eax,DWORD PTR [ecx],0x14
  41194d:	inc    esp
  41194e:	fild   DWORD PTR [ebp-0x382d75db]
  411954:	cmp    eax,0xb089afd0
  411959:	(bad)  
  41195a:	outs   dx,DWORD PTR ds:[esi]
  41195b:	shr    DWORD PTR [ecx-0x38],cl
  41195e:	es ins BYTE PTR es:[edi],dx
  411960:	shl    esi,0x27
  411963:	mov    ebp,0x758b2658
  411968:	inc    esp
  411969:	add    DWORD PTR [ebp+0x6d2088cd],edi
  41196f:	hlt    
  411970:	xor    eax,0x3762e764
  411975:	mov    bl,0xda
  411977:	sahf   
  411978:	loope  0x4118fb
  41197a:	ss jp  0x4119c5
  41197d:	repz sub esi,DWORD PTR [ecx+0x1f]
  411981:	or     eax,0xeb19dd80
  411986:	les    eax,FWORD PTR [edi]
  411988:	ror    BYTE PTR [ebx],0x7a
  41198b:	clc    
  41198c:	inc    ebx
  41198d:	pop    edx
  41198e:	adc    al,BYTE PTR [ecx+0x4d1ddb24]
  411994:	sbb    ecx,eax
  411996:	out    0x20,al
  411998:	sub    edx,edi
  41199a:	and    al,0x84
  41199c:	loope  0x411a1c
  41199e:	repnz or ebp,DWORD PTR [edi]
  4119a1:	cmc    
  4119a2:	add    ebx,DWORD PTR [esi]
  4119a4:	cmp    eax,0x1e94764f
  4119a9:	(bad)  
  4119ab:	jge    0x411982
  4119ad:	cmp    BYTE PTR [eax],ch
  4119af:	xor    DWORD PTR [edx+0x2a2ff0de],edx
  4119b5:	aas    
  4119b6:	test   DWORD PTR [esi-0x6bed61e4],esp
  4119bc:	jo     0x411a12
  4119be:	sbb    dl,BYTE PTR [eax]
  4119c0:	push   ebx
  4119c1:	es jnp 0x41196b
  4119c4:	xchg   edi,eax
  4119c5:	stos   DWORD PTR es:[edi],eax
  4119c6:	adc    BYTE PTR [esi+edi*2+0x18a7eff6],bh
  4119cd:	xchg   esi,eax
  4119ce:	xchg   ebx,eax
  4119cf:	dec    eax
  4119d0:	xor    ebp,DWORD PTR [edx-0x17e613e4]
  4119d6:	sub    ch,cl
  4119d8:	xchg   esp,eax
  4119d9:	cs loope 0x4119c3
  4119dc:	sub    esi,ebp
  4119de:	pop    eax
  4119df:	push   ss
  4119e0:	rcr    DWORD PTR [eax+eiz*2],0x56
  4119e4:	add    eax,0x24dd5cd4
  4119e9:	retf   
  4119ea:	aas    
  4119eb:	jmp    0xd8b11371
  4119f0:	xchg   esi,eax
  4119f1:	ja     0x411a21
  4119f3:	sub    al,0x8
  4119f5:	jbe    0x4119b8
  4119f7:	fbld   TBYTE PTR [eax]
  4119f9:	(bad)  
  4119fa:	ins    BYTE PTR es:[edi],dx
  4119fb:	stos   DWORD PTR es:[edi],eax
  4119fc:	jns    0x4119ab
  4119fe:	dec    ebx
  4119ff:	imul   ebp,DWORD PTR [ebx+esi*2-0x554db735],0x3b63d91d
  411a0a:	adc    ah,BYTE PTR [edx*4+0x2edae667]
  411a11:	xchg   edi,eax
  411a12:	jb     0x4119cd
  411a14:	pusha  
  411a15:	push   ecx
  411a16:	test   DWORD PTR [edx],0x4e278c61
  411a1c:	push   0x8b27373e
  411a21:	push   ebx
  411a22:	ja     0x411a71
  411a24:	fdivr  st(5),st
  411a26:	ins    DWORD PTR es:[edi],dx
  411a27:	shr    bl,0xd6
  411a2a:	jbe    0x411a1c
  411a2c:	pushf  
  411a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a2e:	(bad)  
  411a2f:	stc    
  411a30:	mov    eax,ds:0xb9e6c66d
  411a35:	lods   al,BYTE PTR ds:[esi]
  411a36:	int3   
  411a37:	retf   
  411a38:	ins    BYTE PTR es:[edi],dx
  411a39:	or     eax,edi
  411a3b:	and    esi,DWORD PTR [eax]
  411a3d:	int    0x3e
  411a3f:	fstp   QWORD PTR [ebp+0x13]
  411a42:	cli    
  411a43:	arpl   WORD PTR [edi-0x65],di
  411a46:	int3   
  411a47:	pop    eax
  411a48:	inc    esp
  411a49:	retf   
  411a4a:	hlt    
  411a4b:	ret    
  411a4c:	ins    DWORD PTR es:[edi],dx
  411a4d:	mov    ah,0xde
  411a4f:	sbb    DWORD PTR [ecx-0x26d6eee2],esi
  411a55:	mov    ah,0x2f
  411a57:	clc    
  411a58:	mov    edx,0x297b696f
  411a5d:	jns    0x411a5c
  411a5f:	mov    ah,0x21
  411a61:	xchg   edx,eax
  411a62:	dec    esp
  411a63:	mov    ebp,DWORD PTR [ebx+0x429a4eff]
  411a69:	adc    al,0xcb
  411a6b:	sub    ch,BYTE PTR [ecx]
  411a6d:	fisttp QWORD PTR [ebp+0x5d0012f8]
  411a73:	int    0xd2
  411a75:	sbb    BYTE PTR [eax+0xa43291a],ch
  411a7b:	jg     0x411adb
  411a7d:	mov    WORD PTR [eax+0x37],?
  411a80:	add    eax,0xb0b24f4f
  411a85:	add    al,BYTE PTR [ecx]
  411a87:	scas   eax,DWORD PTR es:[edi]
  411a88:	jge    0x411afc
  411a8a:	gs in  al,0x17
  411a8d:	or     DWORD PTR [ebx+0x19],ecx
  411a90:	mov    WORD PTR [ebx],ds
  411a92:	inc    edi
  411a93:	adc    esp,edi
  411a95:	ret    
  411a96:	jle    0x411a9f
  411a98:	jecxz  0x411a2b
  411a9a:	fistp  DWORD PTR [esi-0xc]
  411a9d:	sbb    al,0xf9
  411a9f:	jns    0x411ace
  411aa1:	inc    ebp
  411aa2:	jg     0x411a3c
  411aa4:	pop    ecx
  411aa5:	gs sahf 
  411aa7:	(bad)  
  411aa8:	bound  eax,QWORD PTR [edx+0x3e45c5c6]
  411aae:	mov    ds:0xbf80770a,al
  411ab3:	and    bh,ch
  411ab5:	pop    eax
  411ab6:	pop    esi
  411ab7:	adc    eax,0x87dcf760
  411abc:	cmp    BYTE PTR [eax+0x59db1301],cl
  411ac2:	in     al,0xf6
  411ac4:	icebp  
  411ac5:	dec    esp
  411ac6:	jg     0x411ac7
  411ac8:	iret   
  411ac9:	data16 or ah,BYTE PTR [edx+edi*1-0x6c]
  411ace:	or     DWORD PTR [edi],edi
  411ad0:	mov    edx,0x17853ad2
  411ad5:	in     eax,0x59
  411ad7:	sti    
  411ad8:	stos   DWORD PTR es:[edi],eax
  411ad9:	sub    DWORD PTR [ecx],eax
  411adb:	arpl   WORD PTR [eax+0x5b0d6e9d],di
  411ae1:	mov    ecx,0x21fdbeca
  411ae6:	mov    al,ds:0xe9fb6fe6
  411aeb:	mov    bl,0xd2
  411aed:	les    edi,FWORD PTR [ecx+0x51404a64]
  411af3:	mov    ds:0x625f4aaa,al
  411af8:	dec    esi
  411af9:	in     eax,dx
  411afa:	(bad)  
  411afb:	or     DWORD PTR [edx],ebp
  411afd:	mov    ebp,gs
  411aff:	fisub  DWORD PTR [edi]
  411b01:	imul   esi,edx,0xf16dd0bb
  411b07:	dec    ebp
  411b08:	add    BYTE PTR [eax+0x19],ch
  411b0b:	and    edx,DWORD PTR [ecx]
  411b0d:	mov    ecx,DWORD PTR [ebx-0x1cc67bac]
  411b13:	(bad)  
  411b15:	xchg   edi,eax
  411b16:	sub    eax,0x20ca313e
  411b1b:	int    0xe6
  411b1d:	adc    BYTE PTR [ebp+0x75aec9d5],cl
  411b23:	sbb    DWORD PTR [edi-0x7b],0x1b
  411b27:	test   DWORD PTR [ebx-0x42],ebp
  411b2a:	sub    al,0x75
  411b2c:	ret    
  411b2d:	jecxz  0x411b6a
  411b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b30:	lahf   
  411b31:	js     0x411b0e
  411b33:	cwde   
  411b34:	mov    dl,0x25
  411b36:	bound  ecx,QWORD PTR [ecx-0x2a]
  411b39:	inc    ebp
  411b3a:	dec    ebp
  411b3b:	cwde   
  411b3c:	xchg   ebx,eax
  411b3d:	adc    esi,ebp
  411b3f:	inc    esi
  411b40:	jg     0x411b9d
  411b42:	sbb    ah,BYTE PTR [ebp-0x277b2f10]
  411b48:	sbb    al,0xaa
  411b4a:	aas    
  411b4b:	test   BYTE PTR [ecx+0x71],bh
  411b4e:	lea    eax,ds:0x59187d14
  411b54:	push   esi
  411b55:	mov    ds:0xd25da6c5,eax
  411b5a:	nop
  411b5b:	popa   
  411b5c:	mov    eax,ds:0xd3c56232
  411b61:	add    al,al
  411b63:	fisubr DWORD PTR [edx-0x51]
  411b66:	test   ecx,edi
  411b68:	sti    
  411b69:	sub    DWORD PTR [eax-0x1439c6b3],ecx
  411b6f:	xor    eax,DWORD PTR [edi]
  411b71:	xchg   ebp,eax
  411b72:	enter  0x6b0,0x33
  411b76:	aaa    
  411b77:	xchg   ebx,eax
  411b78:	mov    ebx,0x86499b58
  411b7d:	cmp    DWORD PTR [esi],0xb56d8f5d
  411b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b84:	sbb    al,0xa7
  411b86:	sbb    bl,BYTE PTR [esi+0xe]
  411b89:	push   0x75
  411b8b:	in     eax,0xd9
  411b8d:	gs sahf 
  411b8f:	in     eax,dx
  411b90:	ins    DWORD PTR es:[edi],dx
  411b91:	dec    eax
  411b92:	mov    bl,0xe0
  411b94:	sbb    eax,0x28943287
  411b99:	in     eax,0x5c
  411b9b:	pop    ebx
  411b9c:	call   0x17b19c40
  411ba1:	mov    al,0xe0
  411ba3:	icebp  
  411ba4:	imul   edx,DWORD PTR [ebp+0x5177f8a4],0xfffffff5
  411bab:	loopne 0x411b32
  411bad:	or     DWORD PTR [ebx+0x1f],eax
  411bb0:	xchg   esi,eax
  411bb1:	jp     0x411bff
  411bb3:	dec    edi
  411bb4:	(bad)  
  411bb5:	popa   
  411bb6:	sub    eax,ecx
  411bb8:	add    bl,dl
  411bba:	jb     0x411be0
  411bbc:	les    edi,FWORD PTR [eax+0x1bd23bee]
  411bc2:	jl     0x411b4e
  411bc4:	fadd   st,st(1)
  411bc6:	jmp    0x411bbb
  411bc8:	jae    0x411b93
  411bca:	mov    ah,0x1
  411bcc:	imul   esp,DWORD PTR [esi],0xffffffb6
  411bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bd0:	mov    WORD PTR [esi],?
  411bd2:	push   esp
  411bd3:	(bad)  
  411bd4:	ds inc ebx
  411bd6:	mov    ecx,0x7641ebe
  411bdb:	xor    BYTE PTR [esi],bl
  411bdd:	dec    esp
  411bde:	lods   al,BYTE PTR ds:[esi]
  411bdf:	std    
  411be0:	sbb    dl,ch
  411be2:	ret    
  411be3:	pop    edx
  411be4:	loope  0x411ba3
  411be6:	cmp    al,0x7
  411be8:	inc    edi
  411be9:	les    esi,FWORD PTR [eax-0x28b1f5ed]
  411bef:	sub    edi,0xffffff87
  411bf2:	int3   
  411bf3:	(bad)  
  411bf4:	mov    bl,BYTE PTR [edx-0x1790a16e]
  411bfa:	or     BYTE PTR [ebp-0x1cb6d223],dh
  411c00:	mov    DWORD PTR [ecx-0x1f],eax
  411c03:	shl    DWORD PTR [edx+0x7619e7a2],0x45
  411c0a:	fidivr DWORD PTR [ecx]
  411c0c:	clc    
  411c0d:	cwde   
  411c0e:	xlat   BYTE PTR ds:[ebx]
  411c0f:	dec    edi
  411c10:	lods   eax,DWORD PTR ds:[esi]
  411c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c12:	(bad)  
  411c13:	adc    ecx,ebx
  411c15:	or     dx,sp
  411c18:	xchg   edi,eax
  411c19:	out    0x5,eax
  411c1b:	loope  0x411bbe
  411c1d:	dec    ecx
  411c1e:	sub    eax,ecx
  411c20:	jp     0x411c7d
  411c22:	mov    DWORD PTR [ebp-0x2a18cc01],esp
  411c28:	push   edx
  411c29:	loop   0x411c96
  411c2b:	dec    esp
  411c2c:	or     eax,0xc4fb5ec0
  411c31:	gs out dx,eax
  411c33:	inc    edi
  411c34:	ficomp DWORD PTR [edi+0x720ee643]
  411c3a:	fld    DWORD PTR [edi+edi*1+0x48]
  411c3e:	stos   DWORD PTR es:[edi],eax
  411c3f:	push   cs
  411c40:	mov    ds:0x65e013d4,eax
  411c45:	mov    eax,ds:0x427cbc33
  411c4a:	dec    esp
  411c4b:	mov    eax,0xf6240601
  411c50:	ins    BYTE PTR es:[edi],dx
  411c51:	jp     0x411c9c
  411c53:	dec    edx
  411c54:	je     0x411c28
  411c56:	fnsave [ebp+eiz*4-0x6c6736df]
  411c5d:	push   edx
  411c5e:	or     DWORD PTR [ebx],0x9
  411c61:	pop    eax
  411c62:	mov    edi,0x9e65877a
  411c67:	xor    BYTE PTR [ebx],bh
  411c69:	test   al,0xc7
  411c6b:	or     cl,BYTE PTR [eax+0x57b1e030]
  411c71:	cdq    
  411c72:	ds es pop es
  411c75:	bound  ecx,QWORD PTR [ebx-0x36e38805]
  411c7b:	push   ebp
  411c7c:	out    0x55,eax
  411c7e:	sub    edx,ebp
  411c80:	and    BYTE PTR [edi],al
  411c82:	xchg   ecx,eax
  411c83:	call   0x3503:0x87659f28
  411c8a:	or     ah,BYTE PTR [edi-0x7e43ed28]
  411c90:	push   cs
  411c91:	add    al,0xf3
  411c93:	lds    edx,FWORD PTR [ecx+0x11]
  411c96:	xchg   edx,eax
  411c97:	fsubr  DWORD PTR [eax+0x1f]
  411c9a:	sahf   
  411c9b:	cmp    cl,BYTE PTR [ebx]
  411c9d:	lods   eax,DWORD PTR ds:[esi]
  411c9e:	or     DWORD PTR gs:[ebx-0x75],0x11384b0c
  411ca6:	sub    ebx,eax
  411ca8:	(bad)  
  411ca9:	lock ss or al,0x54
  411cad:	cmp    al,BYTE PTR [ecx+0x336152a1]
  411cb3:	imul   eax,DWORD PTR [edx+0x5221959d],0x65
  411cba:	or     DWORD PTR ds:0x90612105,0x62c4f84
  411cc4:	fidiv  DWORD PTR ds:0x6d05725c
  411cca:	add    eax,0xa424d59d
  411ccf:	jmp    0x8d2c:0x20d36659
  411cd6:	adc    eax,0x7f381f9f
  411cdb:	or     cl,0x67
  411cde:	je     0x411d52
  411ce0:	bound  ecx,QWORD PTR [ebp-0x16]
  411ce3:	mov    ds,WORD PTR [eax-0x3]
  411ce6:	fbld   TBYTE PTR [ecx+0x106ae7af]
  411cec:	xchg   ecx,edx
  411cee:	push   esp
  411cef:	mov    esp,DWORD PTR [ebx+0x2133270e]
  411cf5:	ret    
  411cf6:	and    ebp,DWORD PTR [ecx+0x79]
  411cf9:	ss and esp,0x7d41cb8f
  411d00:	enter  0x1849,0xda
  411d04:	and    esp,DWORD PTR [edi+0x79f848ac]
  411d0a:	pop    ds
  411d0b:	xor    eax,0x24d0cbda
  411d10:	(bad)  
  411d11:	add    BYTE PTR [ecx],bl
  411d13:	push   eax
  411d14:	and    eax,0xc10aa7a0
  411d19:	imul   DWORD PTR [ebp-0x2b]
  411d1c:	dec    esi
  411d1d:	fsubr  QWORD PTR [edi+0x59]
  411d20:	(bad)  
  411d21:	(bad)  
  411d22:	push   edx
  411d23:	mov    bh,BYTE PTR [eax-0x4a]
  411d26:	fs jae 0x411cca
  411d29:	push   0x890644a3
  411d2e:	js     0x411dae
  411d30:	out    0x57,eax
  411d32:	aad    0x10
  411d34:	out    dx,al
  411d35:	inc    ebx
  411d36:	ds push ebp
  411d38:	xchg   BYTE PTR [ecx+edi*8+0xb11c167],bh
  411d3f:	bound  edi,QWORD PTR [ecx-0x36e29af8]
  411d45:	push   edx
  411d46:	ins    DWORD PTR es:[edi],dx
  411d47:	jmp    0xf4e31caf
  411d4c:	cmp    ah,ch
  411d4e:	ret    0xd28f
  411d51:	mov    ebp,0x1ca813a0
  411d56:	add    BYTE PTR [ebx-0x23b6e85f],0xa2
  411d5d:	and    ah,BYTE PTR [edx+0x1d]
  411d60:	pop    esi
  411d61:	retf   0x94db
  411d64:	scas   al,BYTE PTR es:[edi]
  411d65:	inc    eax
  411d66:	loope  0x411d4d
  411d68:	bnd jae 0x411ddb
  411d6b:	mov    WORD PTR [eax+0x5b194a8a],gs
  411d71:	fs mov ecx,0x96a384c3
  411d77:	std    
  411d78:	add    BYTE PTR [eax+0x4686e724],bh
  411d7e:	pop    ecx
  411d7f:	push   0x1d48670d
  411d84:	dec    ebp
  411d85:	mov    WORD PTR [esi],fs
  411d87:	pop    edi
  411d88:	in     al,dx
  411d89:	push   esi
  411d8a:	js     0x411dc7
  411d8c:	leave  
  411d8d:	cmc    
  411d8e:	lock ja 0x411d3c
  411d91:	jmp    0xc5c94250
  411d96:	pop    ebp
  411d97:	out    dx,al
  411d98:	mov    eax,DWORD PTR [ecx+0x7a431cad]
  411d9e:	mov    bl,BYTE PTR [esi]
  411da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411da1:	or     eax,0xbe012d85
  411da6:	adc    eax,0xd7ed2fd8
  411dab:	nop
  411dac:	imul   edx,ebp,0xffffffb2
  411daf:	addr16 push edi
  411db1:	push   ss
  411db2:	jmp    0x411daa
  411db4:	repz mov cl,0x25
  411db7:	(bad)  
  411db8:	repnz push cs
  411dba:	lahf   
  411dbb:	add    DWORD PTR [ecx+0x5ae2607b],esp
  411dc1:	in     al,0xfb
  411dc3:	mov    cl,0x3
  411dc5:	or     ah,BYTE PTR [ebx+0x5297f4e2]
  411dcb:	cli    
  411dcc:	jg     0x411da8
  411dce:	ins    BYTE PTR es:[edi],dx
  411dcf:	jg     0x411da4
  411dd1:	jle    0x411d8e
  411dd3:	(bad)  
  411dd4:	in     al,dx
  411dd5:	mov    ecx,0x11e00a2f
  411dda:	fmul   DWORD PTR [esp+esi*8-0x8]
  411dde:	mov    esp,0x14d0c811
  411de3:	out    dx,eax
  411de4:	add    dh,BYTE PTR [ebx+ecx*1]
  411de7:	test   ch,bh
  411de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dea:	jbe    0x411e3c
  411dec:	mov    esp,ebx
  411dee:	or     DWORD PTR [ebx+eiz*4+0x1399aa97],0x6a
  411df6:	xor    BYTE PTR [eax],0x87
  411df9:	and    DWORD PTR [edx-0x4b905299],0x43
  411e00:	je     0x411de1
  411e02:	inc    ebp
  411e03:	sbb    al,0x33
  411e05:	add    ecx,DWORD PTR ss:[edx-0x19]
  411e09:	lock inc ebx
  411e0b:	rcr    BYTE PTR [ebx],cl
  411e0d:	fwait
  411e0e:	dec    edi
  411e0f:	mov    esi,0xcc5f4a09
  411e14:	mov    ebp,DWORD PTR [ecx+0xc32d96a]
  411e1a:	jl     0x411e06
  411e1c:	std    
  411e1d:	pop    ss
  411e1e:	and    eax,0x24652da0
  411e23:	mov    esi,0x70ba4452
  411e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e29:	adc    al,0x75
  411e2b:	push   ss
  411e2c:	int    0x58
  411e2e:	adc    bh,dl
  411e30:	daa    
  411e31:	bound  esp,QWORD PTR [eax]
  411e33:	dec    ebx
  411e34:	sbb    eax,0x2c76cded
  411e39:	cmc    
  411e3a:	lahf   
  411e3b:	pusha  
  411e3c:	jnp    0x411e78
  411e3e:	xor    ch,al
  411e40:	cmc    
  411e41:	in     eax,dx
  411e42:	je     0x411e42
  411e44:	in     al,0xef
  411e46:	sub    BYTE PTR [ebx],bl
  411e48:	mov    ebx,0x52d5ae2f
  411e4d:	aas    
  411e4e:	pop    ecx
  411e4f:	cmc    
  411e50:	pusha  
  411e51:	xchg   esp,eax
  411e52:	xor    DWORD PTR [ecx+edi*4],edi
  411e55:	les    esp,FWORD PTR [eax+0x66]
  411e58:	or     bl,BYTE PTR [esi-0x11]
  411e5b:	adc    DWORD PTR ds:0x426e4449,0x21aaf334
  411e65:	outs   dx,DWORD PTR ds:[esi]
  411e66:	inc    ebp
  411e67:	mov    ah,0x74
  411e69:	ja     0x411eaf
  411e6b:	jnp    0x411e80
  411e6d:	jmp    0xd543:0xf54fdb47
  411e74:	pusha  
  411e75:	hlt    
  411e76:	(bad)  
  411e77:	push   edi
  411e78:	mov    edi,0xb7d9a5d
  411e7d:	daa    
  411e7e:	inc    edx
  411e7f:	cwde   
  411e80:	pop    ss
  411e81:	aad    0x94
  411e83:	xor    eax,0xb512b70b
  411e88:	scas   al,BYTE PTR es:[edi]
  411e89:	lods   al,BYTE PTR ds:[esi]
  411e8a:	push   esi
  411e8b:	int3   
  411e8c:	es stos BYTE PTR es:[edi],al
  411e8e:	pop    ds
  411e8f:	jmp    0xb3d66de8
  411e94:	mov    ebx,0x44ac7d00
  411e99:	xchg   ecx,eax
  411e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e9b:	cwde   
  411e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e9d:	jbe    0x411e77
  411e9f:	cmp    bl,ah
  411ea1:	sub    ah,BYTE PTR [eax]
  411ea3:	or     dh,BYTE PTR [ebp+0x46c643c4]
  411ea9:	leave  
  411eaa:	mov    dh,0x1
  411eac:	cld    
  411ead:	dec    ebx
  411eae:	imul   eax,DWORD PTR [esi+0x43],0x43
  411eb2:	scas   eax,DWORD PTR es:[edi]
  411eb3:	test   al,0xad
  411eb5:	inc    esp
  411eb6:	idiv   BYTE PTR [ebx]
  411eb8:	test   DWORD PTR [edi+0x49],edi
  411ebb:	xchg   edx,eax
  411ebc:	cmc    
  411ebd:	and    al,0xe6
  411ebf:	lods   al,BYTE PTR ds:[esi]
  411ec0:	test   BYTE PTR [eax],al
  411ec2:	lds    ebx,FWORD PTR [ebx+0x7ddc6cdd]
  411ec8:	add    esi,ecx
  411eca:	push   ecx
  411ecb:	sub    ebx,DWORD PTR [edx+0x204d2c7e]
  411ed1:	cli    
  411ed2:	into   
  411ed3:	fnstcw WORD PTR es:[ebx+0x723cf4e4]
  411eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411edb:	lods   al,BYTE PTR ds:[esi]
  411edc:	lock pop ebx
  411ede:	pop    edx
  411edf:	scas   al,BYTE PTR es:[edi]
  411ee0:	jp     0x411ea1
  411ee2:	ins    BYTE PTR es:[edi],dx
  411ee3:	(bad)  
  411ee4:	mov    ds:0xf27d3c8f,al
  411ee9:	sbb    BYTE PTR [ecx],al
  411eeb:	aam    0xd0
  411eed:	add    edi,DWORD PTR [edx-0x39]
  411ef0:	rcr    DWORD PTR [eax],0xef
  411ef3:	pop    es
  411ef4:	out    dx,eax
  411ef5:	and    ah,BYTE PTR [edi]
  411ef7:	xchg   ecx,eax
  411ef8:	push   0xffffffb2
  411efa:	and    al,0x13
  411efc:	in     al,0x97
  411efe:	or     al,0x96
  411f00:	inc    edx
  411f01:	les    ebx,FWORD PTR [eax+0x2c4988f7]
  411f07:	adc    ch,cl
  411f09:	fldlg2 
  411f0b:	retf   0x6c1e
  411f0e:	aad    0xdd
  411f10:	scas   al,BYTE PTR es:[edi]
  411f11:	sar    BYTE PTR [edi+ecx*2],0x5a
  411f15:	out    0xd9,al
  411f17:	jle    0x411ec4
  411f19:	push   ecx
  411f1a:	nop
  411f1b:	repz add BYTE PTR [edx-0x4d215674],dh
  411f22:	scas   al,BYTE PTR es:[edi]
  411f23:	jmp    0x411edb
  411f25:	push   esi
  411f26:	es stos DWORD PTR es:[edi],eax
  411f28:	mul    BYTE PTR [eax-0x2af641b3]
  411f2e:	pop    ebp
  411f2f:	in     al,dx
  411f30:	je     0x411f26
  411f32:	es pop esp
  411f34:	je     0x411f6e
  411f36:	mov    ebp,0x1b9af111
  411f3b:	repnz inc esi
  411f3d:	mov    bh,0x73
  411f3f:	rol    BYTE PTR [esi-0xa],cl
  411f42:	(bad)  
  411f43:	sub    dh,BYTE PTR [edx-0x48]
  411f46:	add    DWORD PTR [esi-0x19],0x6153fa87
  411f4d:	fisub  DWORD PTR [ebx-0x6745d46f]
  411f53:	push   0xfdf9d41a
  411f58:	cmp    BYTE PTR ds:0x77654461,bl
  411f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f5f:	inc    edi
  411f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f61:	or     DWORD PTR [ecx+0x513c0da7],edi
  411f67:	aaa    
  411f68:	pop    ebx
  411f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f6a:	add    edi,edx
  411f6c:	add    ebx,DWORD PTR [ebx+0x211fadc7]
  411f72:	nop
  411f73:	data16 arpl ax,di
  411f76:	iret   
  411f77:	sub    al,0x37
  411f79:	sbb    dh,BYTE PTR [eax-0x56ae6c3]
  411f7f:	and    ch,BYTE PTR [edx+0x357835f7]
  411f85:	jo     0x411f49
  411f87:	scas   al,BYTE PTR es:[edi]
  411f88:	mov    eax,0xbe5f4378
  411f8d:	adc    BYTE PTR [ecx+0xb6c70e5],dl
  411f93:	je     0x411ff2
  411f95:	stos   BYTE PTR es:[edi],al
  411f96:	jmp    0xeefc:0x254ebc8e
  411f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f9e:	push   0x34dc6bc5
  411fa3:	data16 icebp 
  411fa5:	xor    DWORD PTR [edx],eax
  411fa7:	add    eax,0xd875b664
  411fac:	sub    ch,bl
  411fae:	xchg   edx,eax
  411faf:	por    mm6,QWORD PTR [ecx-0x5d529c8a]
  411fb6:	mov    esp,0xab371b59
  411fbb:	rol    BYTE PTR [edi*1+0x580e1ab3],cl
  411fc2:	or     esi,DWORD PTR [edi]
  411fc4:	mov    BYTE PTR [ebp+ebx*2+0x1c],bl
  411fc8:	inc    edi
  411fc9:	outs   dx,BYTE PTR ds:[esi]
  411fca:	out    dx,eax
  411fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fcc:	and    al,0x68
  411fce:	call   0x5a0ad4e8
  411fd3:	mov    al,ds:0x13e5fe8a
  411fd8:	adc    DWORD PTR [ebx+0x477cef55],eax
  411fde:	sub    ebp,DWORD PTR [edx-0x3e9b670d]
  411fe4:	cmp    dh,cl
  411fe6:	aad    0x8b
  411fe8:	push   es
  411fe9:	dec    eax
  411fea:	sbb    bh,BYTE PTR [ebx-0x8dfb7dc]
  411ff0:	aam    0xb8
  411ff2:	or     al,0x10
  411ff4:	dec    edi
  411ff5:	mov    esi,0x5fd7e415
  411ffa:	int3   
  411ffb:	test   al,0xe1
  411ffd:	aad    0xa3
  411fff:	shl    DWORD PTR [ebx-0x70ca4fa7],cl
  412005:	sbb    eax,0x38af2aab
  41200a:	sub    eax,0x4c5fae2c
  41200f:	push   edx
  412010:	pop    edx
  412011:	jbe    0x412044
  412013:	mov    ch,0x7e
  412015:	jl     0x41201c
  412017:	std    
  412018:	push   ss
  412019:	jnp    0x41202a
  41201b:	xor    ah,BYTE PTR [edi-0x42]
  41201e:	sub    ebx,ecx
  412020:	mov    bh,0x23
  412022:	fild   DWORD PTR [ebx+0x39d4e1da]
  412028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412029:	data16 outs dx,BYTE PTR ds:[esi]
  41202b:	push   ss
  41202c:	or     al,0x42
  41202e:	mov    dl,0x7a
  412030:	sub    dl,bh
  412032:	loope  0x41206c
  412034:	jno    0x412072
  412036:	arpl   bx,dx
  412038:	je     0x411fff
  41203a:	dec    ecx
  41203b:	dec    esp
  41203c:	arpl   WORD PTR [esi+0x313d6443],dx
  412042:	popa   
  412043:	mov    eax,ds:0xdf12e421
  412048:	mov    dh,0x9e
  41204a:	stos   DWORD PTR es:[edi],eax
  41204b:	jmp    0x525f:0xb6cc4f3a
  412052:	cmp    eax,DWORD PTR [edx+ebp*4+0x7f5f4e99]
  412059:	pop    DWORD PTR [ebx+edi*8]
  41205c:	pop    ebp
  41205d:	fild   WORD PTR [edx+edi*2-0x6cb3cbd6]
  412064:	and    DWORD PTR [ebp+0x23],ecx
  412067:	mov    al,0x98
  412069:	mov    bl,0x4d
  41206b:	mov    eax,ds:0x5b984515
  412070:	xor    al,0xf
  412072:	into   
  412073:	fst    DWORD PTR [edx+0x43fa37fa]
  412079:	sbb    DWORD PTR [ebx-0x4a],edi
  41207c:	lahf   
  41207d:	xor    al,0xec
  41207f:	cli    
  412080:	cs xchg ax,ax
  412083:	sub    DWORD PTR [ebp+0x3f452ee1],ebx
  412089:	mov    ebp,edx
  41208b:	xchg   esp,eax
  41208c:	dec    eax
  41208d:	lea    esi,[ebx+0x5c]
  412090:	add    BYTE PTR [eax],ch
  412092:	inc    edx
  412093:	add    cl,ah
  412095:	add    bh,BYTE PTR [edx+0x33]
  412098:	adc    dh,BYTE PTR [edx]
  41209a:	pop    ds
  41209b:	xor    DWORD PTR [ecx-0x1a421aed],0xfffffffc
  4120a2:	stc    
  4120a3:	into   
  4120a4:	pop    ecx
  4120a5:	stos   DWORD PTR es:[edi],eax
  4120a6:	or     al,0x9e
  4120a8:	xor    eax,0x914d24db
  4120ad:	dec    edi
  4120ae:	fbld   TBYTE PTR [ebx+0x7c9fb64d]
  4120b4:	push   ebx
  4120b5:	xchg   edx,eax
  4120b6:	out    0x1f,eax
  4120b8:	(bad)  
  4120b9:	mov    esi,0xa2531546
  4120be:	push   esp
  4120bf:	arpl   WORD PTR [edi+0x3659052c],di
  4120c5:	or     al,0xb7
  4120c7:	inc    esi
  4120c8:	shl    BYTE PTR [edx+ecx*1-0x34a83d2d],0x9b
  4120d0:	pop    eax
  4120d1:	xor    ebx,DWORD PTR [edi+0x6342219a]
  4120d7:	or     eax,0x1f039106
  4120dc:	xchg   BYTE PTR [ecx-0x7856dba8],ah
  4120e2:	and    ah,ch
  4120e4:	ret    0x70af
  4120e7:	in     al,0xf4
  4120e9:	neg    BYTE PTR [eax+0x33f9a0d]
  4120ef:	mov    eax,ds:0x188bef06
  4120f4:	jecxz  0x4120ed
  4120f6:	push   es
  4120f7:	add    al,0x1e
  4120f9:	xor    BYTE PTR ds:0xa10c,ch
  4120fe:	jg     0x4120dc
  412100:	sbb    bh,BYTE PTR [ebp+0x2db28dc7]
  412106:	icebp  
  412107:	inc    esi
  412108:	fnstsw WORD PTR [ebp+0x1dc58b54]
  41210e:	mov    cl,0x75
  412110:	test   BYTE PTR [esi+0x25],0xdd
  412114:	xchg   edx,eax
  412115:	fild   DWORD PTR [edi+0x52]
  412118:	sub    bl,dl
  41211a:	push   esi
  41211b:	xchg   BYTE PTR [ebx+ecx*8+0x48],ch
  41211f:	or     eax,DWORD PTR [edx+0x764d842f]
  412125:	(bad)  
  412126:	test   BYTE PTR [edi+ebx*2],0xd3
  41212a:	sbb    eax,0xfab119fd
  41212f:	adc    DWORD PTR [ecx+0x29507cf],esp
  412135:	mov    ebx,DWORD PTR [ebx]
  412137:	push   ebp
  412138:	mov    DWORD PTR [edx+edi*4+0x27724610],edi
  41213f:	sub    esp,0x45a06488
  412145:	jl     0x412146
  412147:	mov    esi,0x8c002fb4
  41214c:	or     al,bl
  41214e:	test   DWORD PTR [ecx],ecx
  412150:	loope  0x41214e
  412152:	loop   0x4120ed
  412154:	cld    
  412155:	xor    eax,0xa8a6a99b
  41215a:	dec    esi
  41215b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41215c:	shl    BYTE PTR [ebx-0x29],0x77
  412160:	pop    ds
  412161:	xor    DWORD PTR [esi+ebx*4-0x3e],edi
  412165:	pusha  
  412166:	cs dec ebp
  412168:	dec    edi
  412169:	mov    cl,BYTE PTR [edi]
  41216b:	gs sub eax,0x4934fdbe
  412171:	sbb    DWORD PTR [ebx],ebx
  412173:	cld    
  412174:	xor    eax,0x5abf2704
  412179:	adc    dl,ch
  41217b:	sahf   
  41217c:	xchg   ebx,eax
  41217d:	mov    al,ds:0xa6678074
  412182:	or     DWORD PTR [edx+0x1beba3fc],esp
  412188:	cmp    ebx,DWORD PTR ds:0x1576dcfe
  41218e:	or     bh,bh
  412190:	and    eax,0x51f3e10b
  412195:	xor    eax,0x5f96dabd
  41219a:	dec    eax
  41219b:	mov    DWORD PTR [ebx-0x6a],esi
  41219e:	jmp    0x4121e2
  4121a0:	adc    eax,eax
  4121a2:	mov    ah,0x3f
  4121a4:	dec    edi
  4121a5:	and    DWORD PTR [esi+0x660ed7d],ebx
  4121ab:	sar    eax,1
  4121ad:	xchg   ebx,eax
  4121ae:	idiv   DWORD PTR [ebx+0x40]
  4121b1:	(bad)  
  4121b2:	fsubr  st(2),st
  4121b4:	jnp    0x4121ea
  4121b6:	sub    esp,0x1e489f5d
  4121bc:	cmp    ebp,DWORD PTR [edx-0x3052fcf1]
  4121c2:	jmp    0x7fd9513b
  4121c7:	outs   dx,BYTE PTR ds:[esi]
  4121c8:	call   FWORD PTR [ebx+0xe7ee5d9]
  4121ce:	pmaddwd mm7,QWORD PTR [edx+0x6e]
  4121d2:	test   bh,al
  4121d4:	and    eax,0xe4d72c90
  4121d9:	idiv   BYTE PTR [ebp-0xc340a40]
  4121df:	adc    ah,BYTE PTR [esi+esi*2+0x6f]
  4121e3:	out    0x59,eax
  4121e5:	xchg   ebp,eax
  4121e6:	test   al,0x15
  4121e8:	sub    dl,ah
  4121ea:	xchg   ebp,eax
  4121eb:	xchg   DWORD PTR [ebx+ecx*2],esp
  4121ee:	fcomp  st(7)
  4121f0:	jae    0x4121a7
  4121f2:	daa    
  4121f3:	loop   0x412197
  4121f5:	arpl   WORD PTR ds:0xf39c844d,ax
  4121fb:	xchg   BYTE PTR [ebx-0x32],ch
  4121fe:	xor    bl,BYTE PTR [esi-0x4e1b5e4f]
  412204:	xchg   esi,eax
  412205:	adc    al,BYTE PTR [esi+0x5f]
  412208:	ret    
  412209:	adc    bh,ch
  41220b:	inc    BYTE PTR [ebp-0x6927a644]
  412211:	mov    al,0x8e
  412213:	mov    ds:0x5e5f1ef0,eax
  412218:	test   eax,0x78345368
  41221d:	in     eax,dx
  41221e:	je     0x412261
  412220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412221:	test   BYTE PTR [edi-0x4a],bl
  412224:	or     ah,BYTE PTR [esi+0x6b]
  412227:	mov    ecx,cs
  412229:	or     eax,0x2f5cf1fd
  41222e:	into   
  41222f:	add    ecx,DWORD PTR [eax]
  412231:	inc    edx
  412232:	adc    eax,0xe1b8e323
  412237:	(bad)  
  412238:	push   0xffffffc2
  41223a:	ret    0xd263
  41223d:	pop    ecx
  41223e:	adc    ah,cl
  412240:	push   ss
  412241:	sub    edi,edi
  412243:	push   eax
  412244:	ret    0x4529
  412247:	or     bh,cl
  412249:	sub    DWORD PTR [esi+0x6743422e],0x3a42f383
  412253:	add    eax,0xeb580393
  412258:	fdivr  QWORD PTR [edi-0x536db26a]
  41225e:	jle    0x41220f
  412260:	mov    dl,BYTE PTR [edx]
  412262:	mov    DWORD PTR [edx-0xf],eax
  412265:	sub    ch,0x6c
  412268:	xchg   ebp,eax
  412269:	call   DWORD PTR [ecx-0x7b]
  41226c:	pop    ds
  41226d:	or     al,0x7a
  41226f:	arpl   WORD PTR [ebx+0x3b],bp
  412272:	inc    ecx
  412273:	bound  edi,QWORD PTR [edi-0x7a]
  412276:	pop    ebp
  412277:	mul    edx
  412279:	idiv   BYTE PTR ds:0xb574fa2e
  41227f:	mov    ebx,0x95330bf
  412284:	or     al,0xcb
  412286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412287:	xor    bl,BYTE PTR [eax-0x64]
  41228a:	cmp    BYTE PTR [edi+edx*1],ch
  41228d:	pop    ebp
  41228e:	xor    ecx,edi
  412290:	mov    ?,WORD PTR [esi+0x54f315d9]
  412296:	cmp    DWORD PTR [eax+eiz*4-0x80],esp
  41229a:	pop    ss
  41229b:	add    BYTE PTR [ecx+0x5f34d7d2],al
  4122a1:	daa    
  4122a2:	ins    BYTE PTR es:[edi],dx
  4122a3:	dec    edi
  4122a4:	pop    esi
  4122a5:	shl    BYTE PTR [ebx-0x60],cl
  4122a8:	cmp    bh,ch
  4122aa:	stos   BYTE PTR es:[edi],al
  4122ab:	fmulp  st(5),st
  4122ad:	or     ch,dl
  4122af:	sub    esi,DWORD PTR [ebp+0x3ce2f444]
  4122b5:	push   ds
  4122b6:	pop    ebp
  4122b7:	push   ds
  4122b8:	sti    
  4122b9:	jnp    0x41223d
  4122bb:	jmp    0x88446f59
  4122c0:	mov    ds:0xcab7bbc3,al
  4122c5:	and    BYTE PTR ds:0xf3116af8,cl
  4122cb:	scas   eax,DWORD PTR es:[edi]
  4122cc:	int    0x29
  4122ce:	pop    edx
  4122cf:	mov    dh,0xd9
  4122d1:	jg     0x41228e
  4122d3:	push   ss
  4122d4:	stos   DWORD PTR es:[edi],eax
  4122d5:	(bad)  
  4122d6:	push   DWORD PTR [edi+ebp*4-0x24de9df7]
  4122dd:	cmp    al,0x61
  4122df:	pop    ds
  4122e0:	je     0x412279
  4122e2:	pop    esi
  4122e3:	popa   
  4122e4:	int    0x6e
  4122e6:	sar    BYTE PTR [eax+0x3a0d4152],0xd2
  4122ed:	add    BYTE PTR [edi+edi*8],cl
  4122f0:	sbb    cl,ch
  4122f2:	pop    edx
  4122f3:	pop    esp
  4122f4:	js     0x412334
  4122f6:	out    dx,eax
  4122f7:	xchg   ebp,eax
  4122f8:	adc    dl,ch
  4122fa:	out    0xcb,al
  4122fc:	shl    BYTE PTR [eax-0x6e],0x99
  412300:	mov    ah,0x67
  412302:	jbe    0x4122a2
  412304:	rol    DWORD PTR [ecx+eiz*2+0x3b57bff8],1
  41230b:	xchg   esi,eax
  41230c:	pop    esi
  41230d:	ds enter 0x3b5d,0xfc
  412312:	sub    esp,ebx
  412314:	or     eax,0xd8d90180
  412319:	outs   dx,BYTE PTR ds:[esi]
  41231a:	icebp  
  41231b:	add    ebp,DWORD PTR [esi+0x41]
  41231e:	test   al,0x75
  412320:	sbb    eax,0x165eb5b
  412326:	cmp    BYTE PTR [edi-0x1f6f0efb],bl
  41232c:	clc    
  41232d:	cli    
  41232e:	push   ecx
  41232f:	or     al,0x2
  412331:	adc    bh,BYTE PTR [eax]
  412333:	in     eax,dx
  412334:	xor    eax,0xdbab2929
  412339:	jne    0x412312
  41233b:	xor    DWORD PTR [edx+0x2e2c8024],esi
  412341:	jb     0x41235d
  412343:	mov    dh,0x40
  412345:	mov    eax,0x3275ab29
  41234a:	sub    bh,BYTE PTR [edx]
  41234c:	dec    ebx
  41234d:	fist   WORD PTR [edi]
  41234f:	sub    BYTE PTR [di-0x1170],al
  412354:	gs test eax,0x4ea7b010
  41235a:	or     dl,BYTE PTR [edi]
  41235c:	jmp    0x412371
  41235e:	test   BYTE PTR [eax+ecx*1],ah
  412361:	nop
  412362:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  412364:	lods   al,BYTE PTR ds:[esi]
  412365:	xor    ch,BYTE PTR [edx]
  412367:	ja     0x412375
  412369:	sbb    dh,ah
  41236b:	and    DWORD PTR [ecx+eiz*4+0x74123352],edx
  412372:	cmp    DWORD PTR [esi],edx
  412374:	loopne 0x41234c
  412376:	js     0x412360
  412378:	sub    esi,DWORD PTR [ecx-0x72]
  41237b:	lea    edx,[ecx-0x13b820d3]
  412381:	pop    ds
  412382:	pusha  
  412383:	je     0x412382
  412385:	mov    al,0x68
  412387:	or     esi,ebx
  412389:	push   ebp
  41238a:	pop    edx
  41238b:	xchg   ecx,eax
  41238c:	pushf  
  41238d:	adc    al,0x30
  41238f:	jae    0x412401
  412391:	sub    edx,DWORD PTR ds:0x957fdce5
  412397:	jecxz  0x41236a
  412399:	jle    0x41234b
  41239b:	or     eax,0x4a166ad8
  4123a0:	lahf   
  4123a1:	or     BYTE PTR [edi+0x55b8ac1d],cl
  4123a7:	xchg   DWORD PTR [edx-0x1159ca21],ebx
  4123ad:	and    DWORD PTR [ecx-0x73],edx
  4123b0:	push   edi
  4123b1:	cwde   
  4123b2:	sbb    eax,0xe050ed5e
  4123b7:	pop    esp
  4123b8:	jns    0x412389
  4123ba:	sub    al,0x42
  4123bc:	ret    0xbb4f
  4123bf:	xor    cl,BYTE PTR [edi-0x5f]
  4123c2:	or     eax,0x7fca443d
  4123c7:	mov    ebp,0x64ab282e
  4123cc:	enter  0xc69a,0xe
  4123d0:	pmaxub mm0,mm5
  4123d3:	mov    edx,0x5993363a
  4123d8:	popf   
  4123d9:	(bad)  
  4123db:	inc    ebx
  4123dc:	fcom   DWORD PTR ds:0xb7e4d45c
  4123e2:	xlat   BYTE PTR ds:[ebx]
  4123e3:	iret   
  4123e4:	sahf   
  4123e5:	sub    ebx,ebx
  4123e7:	and    DWORD PTR [edx+0x4228b97],eax
  4123ed:	sahf   
  4123ee:	cdq    
  4123ef:	dec    edx
  4123f0:	xor    BYTE PTR ds:0xead28f6a,ah
  4123f6:	outs   dx,BYTE PTR ds:[esi]
  4123f7:	aas    
  4123f8:	test   BYTE PTR [ebx],0xd
  4123fb:	xchg   DWORD PTR [edi],esi
  4123fd:	out    0x3e,eax
  4123ff:	fisub  WORD PTR [ebp-0x2a]
  412402:	scas   eax,DWORD PTR es:[edi]
  412403:	(bad)  
  412404:	xchg   edx,eax
  412405:	(bad)  
  412406:	mov    al,0x61
  412408:	sbb    al,0x74
  41240a:	call   0x5789:0x66aaf655
  412411:	out    0x4,al
  412413:	push   ebx
  412414:	in     eax,0x7b
  412416:	loop   0x41245d
  412418:	ficomp DWORD PTR [ebx-0x2915d9b2]
  41241e:	dec    ebx
  41241f:	and    BYTE PTR [ecx],bh
  412421:	pop    ss
  412422:	scas   eax,DWORD PTR es:[edi]
  412423:	lds    ecx,FWORD PTR ds:0x876b8856
  412429:	(bad)  
  41242a:	stos   DWORD PTR es:[edi],eax
  41242b:	jns    0x4123e7
  41242d:	inc    esp
  41242e:	jmp    FWORD PTR [ebx+0x3c]
  412431:	mov    al,0xba
  412433:	sbb    DWORD PTR [ebx-0x56a4ea49],edi
  412439:	mov    DWORD PTR [edx-0x7b],ebx
  41243c:	stc    
  41243d:	je     0x412475
  41243f:	cmp    BYTE PTR [esi],bh
  412441:	sti    
  412442:	inc    ebx
  412444:	imul   ebp,DWORD PTR [esi+ecx*2+0x64cb717c],0xffffffce
  41244c:	push   esp
  41244d:	int3   
  41244e:	outs   dx,DWORD PTR ds:[esi]
  41244f:	mov    eax,ds:0x69d08d5b
  412454:	xchg   ecx,eax
  412455:	addr16 xchg edx,eax
  412457:	inc    eax
  412458:	sub    BYTE PTR [edx],dh
  41245a:	jae    0x4124a1
  41245c:	sbb    ch,BYTE PTR [edi+0x6cf90c84]
  412462:	mov    ebx,0x4a5d06f4
  412467:	pop    ds
  412468:	enter  0xfde,0xcb
  41246c:	pop    ebx
  41246d:	and    ah,ah
  41246f:	add    BYTE PTR [ecx-0x56c19def],dh
  412475:	push   si
  412477:	xor    cl,BYTE PTR [ebx-0x9fe97be]
  41247d:	dec    esp
  41247e:	fisttp DWORD PTR cs:[esi-0x41bfc31e]
  412485:	cli    
  412486:	pushf  
  412487:	jnp    0x4124fe
  412489:	test   BYTE PTR [esi+0x70],0x83
  41248d:	mov    dl,0x85
  41248f:	xchg   ebx,eax
  412490:	stos   DWORD PTR es:[edi],eax
  412491:	dec    ebx
  412492:	imul   edx,DWORD PTR [eax-0x61],0x80c42a72
  412499:	mov    ch,0x78
  41249b:	iret   
  41249c:	pop    eax
  41249d:	dec    ebx
  41249e:	xor    BYTE PTR [esi+0x52199ae],0x3e
  4124a5:	xor    al,ah
  4124a7:	in     eax,0xe4
  4124a9:	addr16 and eax,0xdf98192
  4124af:	push   0xd524d09f
  4124b4:	xchg   esi,eax
  4124b5:	lds    ebx,FWORD PTR [esi+0x1b]
  4124b8:	sbb    al,0x90
  4124ba:	xlat   BYTE PTR ds:[ebx]
  4124bb:	push   edx
  4124bc:	fwait
  4124bd:	xchg   ecx,eax
  4124be:	es jge 0x412474
  4124c1:	add    cl,BYTE PTR [eax+0x215ffdfd]
  4124c7:	pop    esi
  4124c8:	adc    eax,0xaa1e87a3
  4124cd:	mov    WORD PTR es:[ebx+eiz*8-0x3],fs
  4124d2:	xor    bh,BYTE PTR [edx-0x50888444]
  4124d8:	fidiv  DWORD PTR [ebp-0x3d]
  4124db:	mov    esp,es
  4124dd:	repnz gs inc ecx
  4124e0:	pop    edx
  4124e1:	imul   esp,DWORD PTR [edi+0xfd0efcd],0x11
  4124e8:	jmp    0xcd654b81
  4124ed:	jb     0x412527
  4124ef:	es out dx,eax
  4124f1:	jge    0x412572
  4124f3:	push   edi
  4124f4:	es jnp 0x412534
  4124f7:	daa    
  4124f8:	inc    ebp
  4124f9:	add    cl,BYTE PTR [edx]
  4124fb:	mov    esp,eax
  4124fd:	mov    ebp,0xa454cecd
  412502:	outs   dx,DWORD PTR ds:[esi]
  412503:	(bad)  [esi-0x13]
  412506:	cmc    
  412507:	ret    
  412508:	aam    0x76
  41250a:	sti    
  41250b:	mov    ebp,0x44a76dff
  412510:	mov    ecx,0xd55c8239
  412515:	add    BYTE PTR [ecx-0x3d],0x94
  412519:	pop    ebp
  41251a:	mov    ebp,DWORD PTR [edi+esi*4]
  41251d:	xchg   edx,eax
  41251e:	test   eax,0xebe525a2
  412523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412524:	pop    es
  412525:	aaa    
  412526:	push   ss
  412527:	xor    al,bl
  412529:	in     eax,dx
  41252a:	jmp    0xc9e7b1bf
  41252f:	cmp    eax,0xb17a4238
  412534:	push   es
  412535:	test   DWORD PTR [edi+0x73d10be1],ebx
  41253b:	add    DWORD PTR [ebp-0xbdb6211],ecx
  412541:	xchg   ebx,eax
  412542:	repnz mov WORD PTR [ecx+0x77],fs
  412546:	bnd jge 0x41253d
  412549:	pop    eax
  41254a:	sti    
  41254b:	ret    
  41254c:	test   eax,0x574c63f5
  412551:	hlt    
  412552:	aam    0xbb
  412554:	outs   dx,BYTE PTR ds:[esi]
  412555:	xor    ah,bh
  412557:	es aaa 
  412559:	adc    al,BYTE PTR [edx+edx*1]
  41255c:	mov    BYTE PTR [edi],dl
  41255e:	inc    edi
  41255f:	adc    edx,ebp
  412561:	sbb    ch,BYTE PTR [ebp-0x12]
  412564:	xor    esi,DWORD PTR [eax+eax*4]
  412567:	dec    ebp
  412568:	xor    eax,0xff3f5cc7
  41256d:	mov    edx,0xb6b8105b
  412572:	out    0xec,al
  412574:	lahf   
  412575:	mov    esi,0x82f92b4e
  41257a:	cwde   
  41257b:	sub    al,0x9f
  41257d:	out    0x6d,al
  41257f:	sahf   
  412580:	mov    dl,0x60
  412582:	dec    ebx
  412583:	int    0xc5
  412585:	mov    ds:0x99475089,eax
  41258a:	pop    ecx
  41258b:	outs   dx,DWORD PTR ds:[esi]
  41258c:	ror    cl,0x1d
  41258f:	fcom   QWORD PTR [ebx-0x78]
  412592:	or     al,0x48
  412594:	xor    ch,0xc6
  412597:	data16 aad 0xf7
  41259a:	popf   
  41259b:	jae    0x4125a9
  41259d:	sub    al,0x5c
  41259f:	sbb    esi,edi
  4125a1:	cmp    ah,BYTE PTR [ecx+0x1a8e8e4e]
  4125a7:	rcl    DWORD PTR [ebx+0x1bcd2bfc],0xe1
  4125ae:	out    0x9d,al
  4125b0:	rol    DWORD PTR [edi],cl
  4125b2:	data16 scas al,BYTE PTR es:[edi]
  4125b4:	test   ch,0x3b
  4125b7:	sti    
  4125b8:	push   ebp
  4125b9:	jnp    0x4125f2
  4125bb:	sbb    BYTE PTR [edx+ecx*1-0x6ef1f6db],0x4
  4125c3:	es push ebx
  4125c5:	into   
  4125c6:	fwait
  4125c7:	test   al,0xfa
  4125c9:	retf   
  4125ca:	dec    esi
  4125cb:	stos   BYTE PTR es:[edi],al
  4125cc:	mov    ecx,0x474fc199
  4125d1:	jmp    0x412593
  4125d3:	jmp    0x4125d1
  4125d5:	cmp    dl,BYTE PTR [esi+ebx*8+0x314653a7]
  4125dc:	loopne 0x4125c8
  4125de:	retf   0xfc6c
  4125e1:	pop    ds
  4125e2:	shl    BYTE PTR [ecx-0x21],cl
  4125e5:	cmp    al,0x4d
  4125e7:	out    dx,al
  4125e8:	ins    BYTE PTR es:[edi],dx
  4125e9:	cmp    ebp,DWORD PTR [ecx+0x5e]
  4125ec:	mov    dl,0x72
  4125ee:	jge    0x412607
  4125f0:	adc    eax,0xa8af0b18
  4125f5:	push   esp
  4125f6:	inc    esp
  4125f7:	dec    edx
  4125f8:	inc    eax
  4125f9:	cld    
  4125fa:	std    
  4125fb:	adc    esp,eax
  4125fd:	addr16 fcmovnu st,st(1)
  412600:	ins    DWORD PTR es:[edi],dx
  412601:	jg     0x412679
  412603:	adc    eax,eax
  412605:	out    dx,eax
  412606:	fs cmp al,0xb7
  412609:	add    edi,DWORD PTR [ebp+ebp*1-0x33]
  41260d:	dec    ecx
  41260e:	mov    dl,0x41
  412610:	mov    al,0x14
  412612:	rcr    BYTE PTR [ecx],cl
  412614:	outs   dx,DWORD PTR ds:[esi]
  412615:	lds    esi,FWORD PTR [ebp-0x6db4b67d]
  41261b:	xchg   esi,eax
  41261c:	clc    
  41261d:	add    ch,BYTE PTR [edi+0x1a]
  412620:	das    
  412621:	add    al,0x6
  412623:	jb     0x412613
  412625:	jmp    0x41269f
  412627:	nop
  412628:	adc    bl,BYTE PTR [ebp-0x73]
  41262b:	cmp    al,bh
  41262d:	push   ss
  41262e:	popa   
  41262f:	adc    al,0x85
  412631:	into   
  412632:	or     bh,BYTE PTR [edi]
  412634:	mov    dl,0xe
  412636:	retf   0x8b78
  412639:	call   0x8434:0x427a60ef
  412640:	mov    edi,0xfd89e070
  412645:	xchg   ecx,eax
  412646:	lock jle 0x41269f
  412649:	dec    edx
  41264a:	mov    ah,0xd
  41264c:	jb     0x41266a
  41264e:	ret    
  41264f:	fs in  eax,dx
  412651:	mov    ebp,0x4f92782d
  412656:	add    ax,0x49ec
  41265a:	push   cs
  41265b:	mov    esp,0xd3be3149
  412660:	mov    ebx,0x34b77707
  412665:	or     BYTE PTR [esi],dl
  412667:	das    
  412668:	aaa    
  412669:	cmp    esi,esp
  41266b:	repnz cli 
  41266d:	mov    ds:0xcc5d641b,al
  412672:	(bad)  
  412673:	into   
  412674:	test   al,0xbc
  412676:	mov    ds:0xf41253a5,eax
  41267b:	inc    esp
  41267c:	jecxz  0x4126c2
  41267e:	sbb    al,0xd2
  412680:	mov    WORD PTR [edx-0xc],fs
  412683:	ins    DWORD PTR es:[edi],dx
  412684:	mov    dh,0x63
  412686:	arpl   WORD PTR [ebx+0x7],si
  412689:	push   DWORD PTR [ecx-0x1c890d9]
  41268f:	inc    al
  412691:	adc    bl,bh
  412693:	xchg   DWORD PTR [esi],edi
  412695:	dec    eax
  412696:	sbb    DWORD PTR [eax-0xb],ebp
  412699:	mov    eax,ds:0x409d3e08
  41269e:	in     al,dx
  41269f:	div    DWORD PTR [edi-0xfa67cf5]
  4126a5:	into   
  4126a6:	xchg   esp,eax
  4126a7:	dec    edi
  4126a8:	push   cs
  4126a9:	ret    0x7f41
  4126ac:	xchg   edi,eax
  4126ad:	imul   esi,DWORD PTR [eax+0x79],0x9587453
  4126b4:	dec    ebx
  4126b5:	inc    DWORD PTR [ebx+0x683f143d]
  4126bb:	xor    edx,esi
  4126bd:	ret    0x4403
  4126c0:	outs   dx,BYTE PTR ds:[esi]
  4126c1:	sub    edi,DWORD PTR [edx]
  4126c3:	pushf  
  4126c4:	(bad)  
  4126c5:	les    ebx,FWORD PTR ds:0x614cca2c
  4126cb:	xchg   edi,eax
  4126cc:	xor    DWORD PTR gs:[eax],edx
  4126cf:	mov    edx,0xb6c445cf
  4126d4:	mov    ebp,0x24eec4f4
  4126d9:	lahf   
  4126da:	aaa    
  4126db:	stos   DWORD PTR es:[edi],eax
  4126dc:	(bad)  
  4126de:	retf   
  4126df:	enter  0x33d8,0xf7
  4126e3:	jecxz  0x4126de
  4126e5:	mov    edx,0x36dac4ca
  4126ea:	lods   eax,DWORD PTR ds:[esi]
  4126eb:	inc    BYTE PTR [ebp-0x4e]
  4126ee:	or     al,BYTE PTR [esi]
  4126f0:	xor    al,0xf6
  4126f2:	xchg   BYTE PTR [esi+eax*8],cl
  4126f5:	int    0x52
  4126f7:	aad    0xff
  4126f9:	ds mov edx,0x31fa4458
  4126ff:	inc    eax
  412700:	mov    gs,ebp
  412702:	jg     0x41271a
  412704:	inc    edi
  412705:	mov    edi,ecx
  412707:	arpl   WORD PTR [ebp-0x7e],bp
  41270a:	rcr    BYTE PTR [eax-0x13ffde72],0x72
  412711:	rol    esi,cl
  412713:	psrlq  mm7,QWORD PTR [ebx-0x625cf8da]
  41271a:	dec    ecx
  41271b:	call   0x5a78:0xe446324f
  412722:	ret    
  412723:	or     esi,DWORD PTR [edx-0x1b60824b]
  412729:	(bad)  
  41272a:	jg     0x4126c3
  41272c:	xor    al,0x84
  41272e:	test   dl,al
  412730:	adc    eax,0x4bac9c91
  412735:	inc    esp
  412736:	mov    dl,0xf1
  412738:	sbb    eax,0x9387142d
  41273d:	(bad)  
  41273e:	stc    
  41273f:	cmp    BYTE PTR [eax-0x3f],dl
  412742:	ret    
  412743:	fucomi st,st(5)
  412745:	shr    BYTE PTR [esi-0x63],cl
  412748:	int    0x30
  41274a:	inc    esp
  41274b:	or     BYTE PTR [ebx-0x7a],dl
  41274e:	add    edi,DWORD PTR [edx-0x7f7462fd]
  412754:	shr    dl,0x45
  412757:	rol    DWORD PTR [eax],1
  412759:	fwait
  41275a:	rcr    BYTE PTR [ebp+0x0],0x6d
  41275e:	in     eax,dx
  41275f:	dec    ecx
  412760:	inc    ecx
  412761:	or     al,0x16
  412763:	push   ds
  412764:	push   esi
  412765:	adc    BYTE PTR [eax+ebx*1],dh
  412768:	inc    ebp
  412769:	dec    edx
  41276a:	and    eax,0x8c6d3b6f
  41276f:	xchg   DWORD PTR [ebx+edx*4+0x41700ec6],edi
  412776:	jae    0x412742
  412778:	fcmovnb st,st(6)
  41277a:	push   0x9d97d209
  41277f:	cmc    
  412780:	out    dx,eax
  412781:	out    dx,al
  412782:	out    0xc5,eax
  412784:	jge    0x4127eb
  412786:	add    ebp,DWORD PTR [ebp+0x72]
  412789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41278a:	enter  0x255,0x62
  41278e:	pop    es
  41278f:	inc    esp
  412790:	add    eax,0x322ffed1
  412795:	lods   al,BYTE PTR ds:[esi]
  412796:	jp     0x4127f6
  412798:	fsubr  QWORD PTR [edx]
  41279a:	mov    DWORD PTR [edx+eax*4-0xa851d7d],eax
  4127a1:	out    dx,al
  4127a2:	(bad)  
  4127a3:	jae    0x412820
  4127a5:	ja     0x4127b0
  4127a7:	dec    ebx
  4127a8:	pop    edi
  4127a9:	inc    ebx
  4127aa:	mov    esi,0x87d4ad9b
  4127af:	adc    edi,edi
  4127b1:	cmp    ebp,DWORD PTR [ecx]
  4127b3:	aaa    
  4127b4:	cmp    BYTE PTR [eiz*4-0x412c52a2],cl
  4127bb:	shl    BYTE PTR [edi+0x1],cl
  4127be:	jnp    0x41275b
  4127c0:	addr16 xchg edx,eax
  4127c2:	pop    ebx
  4127c3:	mov    edx,DWORD PTR [edi+eax*2-0x5a]
  4127c7:	sti    
  4127c8:	sub    al,0x2d
  4127ca:	test   ch,dh
  4127cc:	push   0x8fb40593
  4127d1:	dec    esp
  4127d2:	xchg   ecx,eax
  4127d3:	test   al,0xb6
  4127d5:	cmp    cl,dl
  4127d7:	cld    
  4127d8:	cwde   
  4127d9:	(bad)  
  4127da:	repz push cs
  4127dc:	mov    al,ds:0xf3bb009d
  4127e1:	xor    ah,BYTE PTR cs:[esi+0x2f]
  4127e5:	lea    ebp,[ebp+0x353c8531]
  4127eb:	lods   al,BYTE PTR ds:[esi]
  4127ec:	add    DWORD PTR [edi-0x4baaf36d],ebp
  4127f2:	leave  
  4127f3:	push   ecx
  4127f4:	jge    0x41285a
  4127f6:	adc    dh,0xbc
  4127f9:	and    esi,DWORD PTR [edx+eiz*4]
  4127fc:	fdiv   QWORD PTR [eax+0x19bd55db]
  412802:	adc    BYTE PTR ds:0x54e21cf2,0xa9
  412809:	cld    
  41280a:	jle    0x4127c3
  41280c:	shr    al,cl
  41280e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41280f:	fbld   TBYTE PTR [ebx-0x34bcd630]
  412815:	nop
  412816:	pop    ds
  412817:	in     eax,0xe9
  412819:	inc    esp
  41281a:	mov    bh,0xfb
  41281c:	or     ebx,DWORD PTR [esi-0x3146da53]
  412822:	cmp    esp,DWORD PTR [ecx-0x4830f48a]
  412828:	dec    esi
  412829:	add    eax,0x178b4b2
  41282e:	cmp    eax,0x58bb698e
  412833:	(bad)  
  412834:	push   ebx
  412835:	out    dx,eax
  412836:	adc    BYTE PTR [bp-0x3bf5],ch
  41283b:	adc    eax,0xaf95d14a
  412840:	dec    ecx
  412841:	test   al,0x89
  412843:	jl     0x4128bd
  412845:	and    DWORD PTR [ecx],esi
  412847:	push   eax
  412848:	outs   dx,BYTE PTR ds:[esi]
  412849:	sub    DWORD PTR [edi],edx
  41284b:	call   0xcfc6:0x62f7652e
  412852:	and    eax,0xbc296b68
  412857:	dec    edi
  412858:	lea    ebx,[edi]
  41285a:	aam    0xdb
  41285c:	pmulhuw mm5,QWORD PTR [esi-0xa]
  412860:	shl    DWORD PTR [ebp+0x342c8995],1
  412866:	jo     0x412856
  412868:	mov    ebp,0x78a36976
  41286d:	sub    eax,0x224accba
  412872:	or     eax,0x6d5dbc9b
  412877:	fstp   DWORD PTR [edx+0x3d85fc5c]
  41287d:	push   eax
  41287e:	jg     0x41282f
  412880:	lock add eax,0xa60b8d3f
  412886:	xchg   ecx,eax
  412887:	push   ecx
  412888:	inc    DWORD PTR [edi+0x659d5d2]
  41288e:	mov    ebp,0x819435d6
  412893:	cli    
  412894:	stos   DWORD PTR es:[edi],eax
  412895:	sub    al,0xd2
  412897:	or     ecx,DWORD PTR ds:0x519374db
  41289d:	imul   edx,DWORD PTR [ebx],0x71
  4128a0:	aad    0x6f
  4128a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128a3:	mov    ?,WORD PTR ds:0xe569f86b
  4128a9:	bound  edx,QWORD PTR [esi+edi*1]
  4128ac:	leave  
  4128ad:	stos   BYTE PTR es:[edi],al
  4128ae:	inc    edx
  4128af:	ror    DWORD PTR [ecx+0x45],cl
  4128b2:	rcr    DWORD PTR [edi+0x4c],0x12
  4128b6:	clc    
  4128b7:	fidiv  WORD PTR ds:0x8e4bddc0
  4128bd:	mov    ds:0x22b4d9d7,al
  4128c2:	jge    0x41290f
  4128c4:	adc    al,0x53
  4128c6:	int    0x5
  4128c8:	and    DWORD PTR [ecx-0x724387fa],esi
  4128ce:	inc    esp
  4128cf:	cmp    eax,0x5e1059cd
  4128d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128d5:	or     eax,0x70fb0bc7
  4128da:	mov    eax,DWORD PTR [eax+eax*1-0x24f6d2ad]
  4128e1:	fcom   st(6)
  4128e3:	mov    esp,0x4199895e
  4128e8:	(bad)  
  4128e9:	jp     0x41290f
  4128eb:	std    
  4128ec:	pusha  
  4128ed:	popf   
  4128ee:	jg     0x412876
  4128f0:	xchg   edi,eax
  4128f1:	inc    ecx
  4128f2:	enter  0x3ba,0x98
  4128f6:	sbb    eax,0x1dd43db4
  4128fb:	outs   dx,DWORD PTR ds:[esi]
  4128fc:	daa    
  4128fd:	out    dx,al
  4128fe:	fwait
  4128ff:	sahf   
  412900:	jns    0x412907
  412902:	sti    
  412903:	and    BYTE PTR [eax+0x78],al
  412906:	out    dx,eax
  412907:	loope  0x41293b
  412909:	cli    
  41290a:	xor    edi,ecx
  41290c:	test   BYTE PTR [ecx],al
  41290e:	sar    ebx,0xb9
  412911:	popa   
  412912:	mov    esi,0x138e0b09
  412917:	aas    
  412918:	inc    DWORD PTR [eax-0x69cd8fed]
  41291e:	outs   dx,DWORD PTR ss:[esi]
  412920:	test   BYTE PTR [edx-0x4b],bl
  412923:	ret    0x9a64
  412926:	mov    DWORD PTR [eax],esp
  412928:	(bad)  
  412929:	ror    ebp,1
  41292b:	aad    0xd7
  41292d:	sub    BYTE PTR [eax+0x78],cl
  412930:	not    BYTE PTR [ebp-0x468021a2]
  412936:	inc    eax
  412937:	outs   dx,BYTE PTR ds:[esi]
  412938:	mov    WORD PTR [ebp+0x15],gs
  41293b:	add    al,0xdd
  41293d:	mov    dh,0x86
  41293f:	pop    ebx
  412940:	(bad)  
  412941:	jmp    0x4129a0
  412943:	pop    ecx
  412944:	mov    bl,0x3f
  412946:	shl    DWORD PTR [esi+eax*2+0x16240823],1
  41294d:	xchg   BYTE PTR [esi],ch
  41294f:	mov    BYTE PTR [eax+0x13f5d55e],bl
  412955:	sub    ebx,DWORD PTR [esi]
  412957:	jo     0x4129be
  412959:	hlt    
  41295a:	push   ds
  41295b:	sbb    cl,ah
  41295d:	sbb    ch,BYTE PTR [edi-0x7d]
  412960:	cmp    al,0x2a
  412962:	fst    QWORD PTR [ebx+ecx*8-0x45]
  412966:	and    BYTE PTR [ebp+0x426fb189],bh
  41296c:	out    dx,al
  41296d:	and    al,0x6a
  41296f:	xchg   ecx,eax
  412970:	sub    eax,0x3b4657da
  412975:	jp     0x412925
  412977:	add    eax,0x260dc522
  41297c:	cli    
  41297d:	or     esi,DWORD PTR [eax]
  41297f:	aaa    
  412980:	mov    ?,WORD PTR [ecx+eiz*4+0x20]
  412984:	pop    edi
  412985:	les    eax,FWORD PTR [edx-0x6678da0f]
  41298b:	xchg   DWORD PTR [edi-0x57ad5483],ecx
  412991:	loopne 0x41291c
  412993:	mov    esp,0x8e831b64
  412998:	iret   
  412999:	out    0x4,al
  41299b:	sub    ah,BYTE PTR [eax+ebp*8-0x2]
  41299f:	arpl   ax,di
  4129a1:	lock aad 0x36
  4129a4:	push   ecx
  4129a5:	push   0x70
  4129a7:	xchg   DWORD PTR [ebp+0x499045be],edi
  4129ad:	mov    es,WORD PTR [eax+eax*2+0x4e]
  4129b1:	push   cs
  4129b2:	cmp    eax,0x87aa861a
  4129b7:	fldcw  WORD PTR [esi]
  4129b9:	or     esi,DWORD PTR [edi+0x61]
  4129bc:	cmp    eax,0xec7dff58
  4129c1:	inc    ebp
  4129c2:	mov    ebx,0xa76f644d
  4129c7:	inc    ebp
  4129c8:	fld    st(3)
  4129ca:	xchg   BYTE PTR [ebp-0x18],ch
  4129cd:	push   esi
  4129ce:	pop    ebx
  4129cf:	or     esp,DWORD PTR gs:[bp+di]
  4129d3:	cmp    ah,BYTE PTR [edi+0x1ea8703a]
  4129d9:	add    DWORD PTR [edi-0x7b],ebx
  4129dc:	je     0x412a45
  4129de:	arpl   WORD PTR [edx-0xf],bx
  4129e1:	mov    ebx,0x5cf0b059
  4129e6:	cmp    ah,cl
  4129e8:	cmp    DWORD PTR [esi],ebp
  4129ea:	jne    0x4129df
  4129ec:	test   DWORD PTR [edi],esi
  4129ee:	push   ebp
  4129ef:	cld    
  4129f0:	dec    edi
  4129f1:	sbb    eax,0x67d6104e
  4129f6:	mov    edi,0x503e900d
  4129fb:	dec    edx
  4129fc:	add    bl,cl
  4129fe:	inc    edi
  4129ff:	dec    esp
  412a00:	xchg   edi,eax
  412a01:	cmp    eax,0xaf68e87d
  412a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a07:	imul   eax,DWORD PTR [ebp-0x5b1a7bac],0xbb3a5db0
  412a11:	cmp    DWORD PTR [esi+0x5e3633c],0xffffff84
  412a18:	pusha  
  412a19:	lock pop esp
  412a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a1c:	mov    bh,0x8a
  412a1e:	inc    edx
  412a1f:	dec    edx
  412a20:	in     eax,dx
  412a21:	xor    DWORD PTR [ebx+0x4e4c5ef3],edi
  412a27:	ds push ss
  412a29:	sahf   
  412a2a:	sbb    eax,0xa340f9c8
  412a2f:	stc    
  412a30:	add    ebx,DWORD PTR [esi]
  412a32:	lock leave 
  412a34:	mov    cl,0xea
  412a36:	xchg   esi,eax
  412a37:	adc    al,0x9a
  412a39:	mov    WORD PTR [eax+edx*8-0x2d],ds
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	pop    esp
  412a3f:	mov    ecx,0x8736f78c
  412a44:	xchg   esi,eax
  412a45:	and    BYTE PTR gs:[edi-0x69],al
  412a49:	and    eax,0xe48ad82c
  412a4e:	fdiv   QWORD PTR [esi+0x71]
  412a51:	and    eax,0xe7af2c4b
  412a56:	mov    edx,0x141dac7b
  412a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a5c:	hlt    
  412a5d:	jae    0x412a5d
  412a5f:	or     eax,0x6aa626c0
  412a64:	mov    eax,0xf446931d
  412a69:	sbb    al,0xf0
  412a6b:	push   0x2a
  412a6d:	into   
  412a6e:	adc    bh,ah
  412a70:	stos   BYTE PTR es:[edi],al
  412a71:	or     BYTE PTR [esp+edx*8+0x6a],0x6e
  412a76:	cmp    ch,BYTE PTR [ebx-0x6c]
  412a79:	mov    al,ds:0xbfc8854e
  412a7e:	mov    esp,0x6120d9c5
  412a83:	loope  0x412aef
  412a85:	add    ebx,edx
  412a87:	mov    cl,0x1d
  412a89:	cmp    BYTE PTR [edx+0x3c],bl
  412a8c:	dec    esi
  412a8d:	iret   
  412a8e:	ja     0x412a6a
  412a90:	in     al,dx
  412a91:	and    al,0x2d
  412a93:	inc    ecx
  412a94:	ins    DWORD PTR es:[edi],dx
  412a95:	lea    edx,[eax]
  412a97:	inc    edx
  412a98:	clc    
  412a99:	aaa    
  412a9a:	push   edi
  412a9b:	xchg   ebx,eax
  412a9c:	pop    ecx
  412a9d:	stos   BYTE PTR es:[edi],al
  412a9e:	lods   eax,DWORD PTR ds:[esi]
  412a9f:	xchg   ecx,eax
  412aa0:	imul   esp,DWORD PTR [eax+0x3e],0xffffff88
  412aa4:	mov    al,0x7e
  412aa6:	push   esp
  412aa7:	add    eax,0xf14d10d
  412aac:	or     esi,DWORD PTR [eax-0x644c0beb]
  412ab2:	lods   al,BYTE PTR ds:[esi]
  412ab3:	add    esi,edi
  412ab5:	sub    eax,DWORD PTR [ecx]
  412ab7:	leave  
  412ab8:	rcr    DWORD PTR [eax-0x6b],0x69
  412abc:	lods   al,BYTE PTR ds:[esi]
  412abd:	mov    ds:0x5ec370c9,al
  412ac2:	in     eax,0xf4
  412ac4:	scas   al,BYTE PTR es:[edi]
  412ac5:	sbb    al,0xd1
  412ac7:	xchg   ebp,eax
  412ac8:	(bad)  
  412ac9:	adc    esi,DWORD PTR [esi]
  412acb:	sub    eax,0xa7bdf9dc
  412ad0:	mov    al,0x98
  412ad2:	xor    edi,DWORD PTR [eax+0x69]
  412ad5:	mov    dh,0xcf
  412ad7:	ret    0x20e5
  412ada:	sub    ebp,DWORD PTR [ebp+0x60222700]
  412ae0:	pop    esp
  412ae1:	(bad)  
  412ae2:	sub    BYTE PTR [ecx],dh
  412ae4:	jg     0x412aa7
  412ae6:	ret    0x357b
  412ae9:	lock push ecx
  412aeb:	mov    esp,0xc7785f1a
  412af0:	mov    ecx,0x69799b7c
  412af5:	or     bl,BYTE PTR [edx]
  412af7:	jg     0x412b5f
  412af9:	fdiv   DWORD PTR [eax]
  412afb:	in     al,0xce
  412afd:	scas   al,BYTE PTR es:[edi]
  412afe:	pop    edi
  412aff:	add    esi,ebx
  412b01:	fnstenv [ebx-0x6e36b6f2]
  412b07:	fbstp  TBYTE PTR [edi-0x6b]
  412b0a:	mov    edi,0x73075328
  412b0f:	retf   0xdf2
  412b12:	or     DWORD PTR [ebp+0x40],ebx
  412b15:	jns    0x412b96
  412b17:	pop    ebx
  412b18:	adc    edx,DWORD PTR ds:0x3c8a7cac
  412b1e:	or     al,0xe
  412b21:	call   0xf8e:0xe55f3b10
  412b28:	inc    ebx
  412b29:	sub    al,BYTE PTR [ebx-0x23b56248]
  412b2f:	sahf   
  412b30:	fs stc 
  412b32:	cdq    
  412b33:	out    dx,eax
  412b34:	mov    esi,0xa14b7465
  412b39:	hlt    
  412b3a:	dec    ecx
  412b3b:	lds    ebp,FWORD PTR [edx-0xf]
  412b3e:	inc    edx
  412b3f:	and    DWORD PTR [esi-0x2ae843ac],0xffffffaa
  412b46:	push   eax
  412b47:	fiadd  DWORD PTR [ecx]
  412b49:	fld    TBYTE PTR [edi+esi*8-0x27ae6606]
  412b50:	jecxz  0x412b0e
  412b52:	mov    dh,0x16
  412b54:	imul   ebx,eax,0x7931d139
  412b5a:	pop    esp
  412b5b:	xlat   BYTE PTR ds:[ebx]
  412b5c:	out    dx,eax
  412b5d:	pop    es
  412b5e:	test   bh,ah
  412b60:	mov    cl,0x52
  412b62:	dec    esi
  412b63:	adc    eax,0xee255b24
  412b68:	push   esp
  412b69:	clc    
  412b6a:	cwde   
  412b6b:	push   ebx
  412b6c:	pop    edi
  412b6d:	(bad)  
  412b6e:	shl    BYTE PTR [ebp+0x15],cl
  412b71:	push   eax
  412b72:	cmp    al,0xc
  412b74:	mov    bh,0x28
  412b76:	cmp    BYTE PTR ds:0xebc832b7,bh
  412b7c:	dec    ebx
  412b7d:	sub    BYTE PTR [ecx-0x27],ah
  412b80:	lods   al,BYTE PTR ds:[esi]
  412b81:	inc    edi
  412b82:	outs   dx,BYTE PTR ds:[esi]
  412b83:	cmp    eax,0xce5504dd
  412b88:	and    DWORD PTR [edi-0xd],eax
  412b8b:	arpl   WORD PTR [ecx+ecx*8-0x1f],sp
  412b8f:	int    0xd4
  412b91:	mov    eax,ds:0xdd479526
  412b96:	pop    es
  412b97:	add    ebx,esp
  412b99:	push   ds
  412b9a:	lock fcomip st,st(1)
  412b9d:	pop    ecx
  412b9e:	jl     0x412b21
  412ba0:	cmp    edx,DWORD PTR [esi]
  412ba2:	popf   
  412ba3:	mov    fs,WORD PTR [ecx+0x4768ca7d]
  412ba9:	dec    edx
  412baa:	xchg   edi,eax
  412bab:	outs   dx,BYTE PTR ds:[esi]
  412bac:	push   ss
  412bad:	pop    esi
  412bae:	xchg   esi,eax
  412baf:	test   esi,esp
  412bb1:	cmp    cl,BYTE PTR [edx-0xb91c8aa]
  412bb7:	sti    
  412bb8:	mov    eax,ds:0xc276201a
  412bbd:	adc    al,0x91
  412bbf:	jmp    0x412b72
  412bc1:	lahf   
  412bc2:	and    cl,BYTE PTR [edx+ecx*1+0x0]
  412bc6:	pop    eax
  412bc7:	jmp    0x412cd51a
  412bcc:	lahf   
  412bcd:	jmp    0xc50e:0xe41b463a
  412bd4:	and    eax,0xeb797c8a
  412bd9:	or     dh,bh
  412bdb:	jae    0x412c01
  412bdd:	xor    dl,bl
  412bdf:	inc    eax
  412be0:	shr    DWORD PTR [eax-0x2c725db1],1
  412be6:	xor    dh,BYTE PTR [esi+edi*2-0x7303210a]
  412bed:	in     eax,0x6e
  412bef:	add    eax,0xa1d0c6f3
  412bf4:	xlat   BYTE PTR ds:[ebx]
  412bf5:	lahf   
  412bf6:	fdivr  DWORD PTR [ebx+ebp*1-0x3c]
  412bfa:	pop    edi
  412bfb:	jns    0x412c26
  412bfd:	repnz (bad) 
  412bff:	aam    0x83
  412c01:	or     ecx,DWORD PTR [ecx+0x63]
  412c04:	cmp    BYTE PTR ds:0xba76c5f9,bl
  412c0a:	(bad)  
  412c0b:	in     eax,dx
  412c0c:	push   es
  412c0d:	gs inc eax
  412c0f:	bound  esi,QWORD PTR [ecx+eax*4-0x53f26bd3]
  412c16:	mov    BYTE PTR [esi],bh
  412c18:	rol    DWORD PTR [edx+0x61],cl
  412c1b:	xchg   ebp,eax
  412c1c:	jnp    0x412c8f
  412c1e:	in     al,dx
  412c1f:	cmp    BYTE PTR [edx],bh
  412c21:	xchg   esp,eax
  412c22:	clc    
  412c23:	jmp    0xd6be664e
  412c28:	adc    bl,bl
  412c2a:	shl    ebp,cl
  412c2c:	jbe    0x412c5c
  412c2e:	fisubr DWORD PTR [esi+edx*1]
  412c31:	adc    ah,BYTE PTR [ecx+0x6b]
  412c34:	and    DWORD PTR [edx-0x10],0x3887f7b0
  412c3b:	xor    ah,dh
  412c3d:	push   edx
  412c3e:	pop    ds
  412c3f:	outs   dx,BYTE PTR ds:[esi]
  412c40:	test   DWORD PTR [ebx-0x363ca91f],ebp
  412c46:	repnz clc 
  412c48:	sub    DWORD PTR [ecx],esp
  412c4a:	or     al,0xff
  412c4c:	pop    edi
  412c4d:	sub    DWORD PTR [edi-0x75299acf],edx
  412c53:	imul   eax,DWORD PTR [ecx-0x16],0xd6dc14a5
  412c5a:	add    DWORD PTR [ecx-0xd],ebx
  412c5d:	ret    0x4a12
  412c60:	sub    ch,BYTE PTR ds:0x41ad1676
  412c66:	mov    esi,0x95523f0a
  412c6b:	cmp    dl,BYTE PTR [ebx+0x2b]
  412c6e:	xlat   BYTE PTR ds:[ebx]
  412c6f:	std    
  412c70:	ror    BYTE PTR [ebp-0x66],0x55
  412c74:	or     edx,esi
  412c76:	jmp    0x412c86
  412c78:	in     eax,0x53
  412c7a:	pop    ebp
  412c7b:	jbe    0x412c8c
  412c7d:	dec    ebx
  412c7e:	sbb    edi,eax
  412c80:	ins    BYTE PTR es:[edi],dx
  412c81:	dec    edi
  412c82:	or     eax,DWORD PTR [ebx+0xd]
  412c85:	in     eax,0x25
  412c87:	iret   
  412c88:	rcl    DWORD PTR [ebx-0x42],0xb0
  412c8c:	mov    bh,BYTE PTR [edx]
  412c8e:	or     cl,ch
  412c90:	xchg   BYTE PTR [esi],dl
  412c92:	dec    esp
  412c93:	imul   esp,DWORD PTR [ecx+0x60],0xffffffdc
  412c97:	bound  edx,QWORD PTR [eax]
  412c99:	popa   
  412c9a:	es iret 
  412c9c:	daa    
  412c9d:	pop    edi
  412c9e:	sub    ch,BYTE PTR [ecx]
  412ca0:	lahf   
  412ca1:	test   dh,dl
  412ca3:	ins    DWORD PTR es:[edi],dx
  412ca4:	je     0x412cdb
  412ca6:	mov    bh,0x7
  412ca8:	and    BYTE PTR [edi+0x18a2397b],0xce
  412caf:	sbb    BYTE PTR ds:0x2e32e6ea,0xc1
  412cb6:	mov    DWORD PTR [ecx-0x38],0x716fe6ac
  412cbd:	cmp    al,0x0
  412cbf:	add    eax,0xa8104aaf
  412cc4:	out    0x6a,eax
  412cc6:	mov    eax,DWORD PTR [ebx]
  412cc8:	jo     0x412c6b
  412cca:	mov    ecx,0xfad1877e
  412ccf:	outs   dx,DWORD PTR ds:[esi]
  412cd0:	les    edx,FWORD PTR [ebx]
  412cd2:	rcl    DWORD PTR [ecx+0x3e],1
  412cd5:	dec    edx
  412cd6:	dec    esp
  412cd7:	jle    0x412d1c
  412cd9:	addr16 mov dh,0x74
  412cdc:	or     DWORD PTR [ebp+0xca10a6f],ebp
  412ce2:	jae    0x412cad
  412ce4:	jo     0x412c95
  412ce6:	ror    DWORD PTR [ebx+ebp*2+0x32a0bef6],0x62
  412cee:	shr    DWORD PTR [esi+0x27ffb80a],cl
  412cf4:	jge    0x412d28
  412cf6:	xor    al,dh
  412cf8:	mov    edx,0x3e992f6b
  412cfd:	loope  0x412d68
  412cff:	loopne 0x412d54
  412d01:	ins    BYTE PTR es:[edi],dx
  412d02:	std    
  412d03:	mov    ds:0xf8385dee,al
  412d08:	add    al,0x6b
  412d0a:	ja     0x412ca7
  412d0c:	push   es
  412d0d:	sub    dl,BYTE PTR [edx]
  412d0f:	xor    BYTE PTR [esi],al
  412d11:	sar    DWORD PTR [eax-0x3b],0x81
  412d15:	mov    ds:0xad7ded1f,eax
  412d1a:	pop    ss
  412d1b:	adc    DWORD PTR [eax],eax
  412d1d:	mov    DWORD PTR [eax+0x89929e4],0x82f93b9c
  412d27:	stos   BYTE PTR es:[edi],al
  412d28:	ret    
  412d29:	xchg   DWORD PTR [eax],esi
  412d2b:	scas   al,BYTE PTR es:[edi]
  412d2c:	inc    edi
  412d2d:	add    al,0x53
  412d2f:	mov    dh,0xdb
  412d31:	scas   eax,DWORD PTR es:[edi]
  412d32:	jle    0x412d29
  412d34:	ret    0x561b
  412d37:	addr16 xchg bh,dh
  412d3a:	mov    ebx,0x5bdde060
  412d3f:	leave  
  412d40:	fnop   
  412d42:	ins    DWORD PTR es:[edi],dx
  412d43:	xchg   edx,eax
  412d44:	push   edi
  412d45:	ror    BYTE PTR ds:0xb74430ae,cl
  412d4b:	dec    ecx
  412d4c:	jb     0x412dbc
  412d4e:	(bad)  
  412d50:	dec    ecx
  412d51:	jnp    0x412d49
  412d53:	mov    ds:0x128562b5,eax
  412d58:	pop    es
  412d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d5a:	lods   al,BYTE PTR gs:[esi]
  412d5c:	test   al,0xd7
  412d5e:	sub    DWORD PTR [eax+esi*1+0xd8e4efb],ecx
  412d65:	xchg   edx,eax
  412d66:	xchg   edx,eax
  412d67:	(bad)  
  412d68:	xlat   BYTE PTR ds:[ebx]
  412d69:	xor    al,0x26
  412d6b:	mov    ebx,0xb351ccae
  412d70:	aas    
  412d71:	(bad)  
  412d72:	(bad)  
  412d73:	xchg   esp,eax
  412d74:	mov    al,0xb7
  412d76:	push   ds
  412d77:	(bad)
  412d7a:	xor    esp,DWORD PTR [eax]
  412d7c:	push   0xd010bdef
  412d81:	int3   
  412d82:	gs cli 
  412d84:	sub    esi,DWORD PTR ds:0xc5b02dda
  412d8a:	stc    
  412d8b:	sbb    DWORD PTR [ebp-0x175bea34],0x7d30ec78
  412d95:	aam    0x37
  412d97:	fdiv   st,st(1)
  412d99:	aad    0xcc
  412d9b:	cmp    DWORD PTR [edi-0x7c],esp
  412d9e:	sets   BYTE PTR [esi]
  412da1:	mov    ebp,0x4b73b341
  412da6:	call   0x9bd2:0x7d12d2e4
  412dad:	xor    DWORD PTR [ecx+0x653a8d22],ebp
  412db3:	jnp    0x412dfe
  412db5:	out    dx,eax
  412db6:	dec    ecx
  412db7:	sahf   
  412db8:	mov    WORD PTR [eax+0x1d331375],?
  412dbe:	and    BYTE PTR [esi+edx*1+0x34],al
  412dc2:	cmp    al,0xe3
  412dc4:	xlat   BYTE PTR ds:[ebx]
  412dc5:	cmp    DWORD PTR [ebp-0x56ce9d8d],esi
  412dcb:	mov    ah,0xf6
  412dcd:	inc    ecx
  412dce:	adc    BYTE PTR [esi+ebx*2-0x25ecf0ad],ch
  412dd5:	mov    al,0x89
  412dd7:	and    eax,0x56fb64b1
  412ddc:	cmp    eax,0x9350c903
  412de1:	cmp    al,0x27
  412de3:	addr16 jns 0x412e49
  412de6:	shr    BYTE PTR ds:[ebp+0xe296e1e],0x94
  412dee:	sbb    eax,0xf18b9326
  412df3:	inc    ebx
  412df4:	icebp  
  412df5:	mov    eax,ds:0x8064f6d
  412dfa:	fnsave [ebx+0x1e]
  412dfd:	and    esi,DWORD PTR [esi]
  412dff:	outs   dx,BYTE PTR ds:[esi]
  412e00:	jo     0x412e81
  412e02:	fisttp QWORD PTR [ecx+0x3dd9fd21]
  412e08:	xchg   ecx,eax
  412e09:	mov    dh,0x81
  412e0b:	add    BYTE PTR [eax+0x4a6309c1],dh
  412e11:	out    0x19,al
  412e13:	pop    edi
  412e14:	(bad)  
  412e15:	push   ss
  412e16:	adc    al,0x2c
  412e18:	mov    edi,ebp
  412e1a:	outs   dx,DWORD PTR ds:[esi]
  412e1b:	imul   ebp,DWORD PTR [eax],0x5a
  412e1e:	aad    0x6c
  412e20:	lds    ebx,FWORD PTR [ebx]
  412e22:	je     0x412e8b
  412e24:	cmp    ah,0x7c
  412e27:	dec    edx
  412e28:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  412e2a:	out    dx,eax
  412e2b:	jg     0x412e90
  412e2d:	in     eax,dx
  412e2e:	xor    DWORD PTR [ebp-0x7370ca46],0xea968a09
  412e38:	jmp    0x48101325
  412e3d:	pop    ebp
  412e3e:	push   0xffffffc1
  412e40:	pop    ebx
  412e41:	jo     0x412dfd
  412e43:	fisttp DWORD PTR [esi+0x78bc1342]
  412e49:	leave  
  412e4a:	pusha  
  412e4b:	mov    dh,bl
  412e4d:	lock das 
  412e4f:	xchg   ebp,eax
  412e50:	repnz mov ah,0x15
  412e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e54:	adc    DWORD PTR [eax],0x2b
  412e57:	jmp    0xc5d7:0x3f83d808
  412e5e:	xchg   BYTE PTR [eax-0x1391d7d8],dh
  412e64:	mov    ch,0x62
  412e66:	push   ds
  412e67:	(bad)  
  412e68:	jo     0x412ecc
  412e6a:	adc    bh,bl
  412e6c:	mov    ah,0x73
  412e6e:	retf   0x37e2
  412e71:	dec    esp
  412e72:	or     al,0xf6
  412e74:	das    
  412e75:	push   edi
  412e76:	lea    edi,[esi+0x732919f1]
  412e7c:	js     0x412e31
  412e7e:	add    al,0xa3
  412e80:	ret    0x4e23
  412e83:	sbb    al,0xc7
  412e85:	push   0xe1395bff
  412e8a:	xor    BYTE PTR [ecx],cl
  412e8c:	pop    esp
  412e8d:	test   BYTE PTR [ecx+edi*4],0x28
  412e91:	cmp    eax,0xcb735416
  412e96:	push   DWORD PTR [ebp+0x15cb683d]
  412e9c:	(bad)  
  412e9d:	(bad)  
  412e9e:	push   ds
  412e9f:	add    al,0xeb
  412ea1:	or     cl,BYTE PTR [eax-0x5ac8cc2d]
  412ea7:	(bad)  
  412ea8:	dec    edx
  412ea9:	into   
  412eaa:	pop    edi
  412eab:	addr16 jmp 0x412e44
  412eae:	arpl   WORD PTR [esi-0x79],sp
  412eb1:	ficom  WORD PTR [ebp-0x3475907b]
  412eb7:	std    
  412eb8:	ror    BYTE PTR [ecx-0x1c],0x58
  412ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ebd:	mov    ebx,0x7c8a5fc0
  412ec2:	cmp    DWORD PTR [eax+eax*8-0x3a],esi
  412ec6:	jl     0x412e6d
  412ec8:	sub    BYTE PTR [esi],dh
  412eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ecb:	and    esp,DWORD PTR ds:[edx+0x1]
  412ecf:	clc    
  412ed0:	or     dl,BYTE PTR [ebx-0x1e]
  412ed3:	cmc    
  412ed4:	in     eax,0xd4
  412ed6:	mov    al,ds:0xe45b807a
  412edb:	push   ebx
  412edc:	inc    eax
  412edd:	retf   
  412ede:	popf   
  412edf:	xchg   BYTE PTR [ecx],cl
  412ee1:	imul   eax,DWORD PTR [ecx-0x66ad1d39],0x1e1bc395
  412eeb:	mov    esi,0x7f71bd0d
  412ef0:	jbe    0x412ed6
  412ef2:	push   ss
  412ef3:	mov    ebx,DWORD PTR [eax+0x78b6658d]
  412ef9:	shl    BYTE PTR [esi+0x76],1
  412efc:	dec    eax
  412efd:	mov    BYTE PTR [edi+0x40],ah
  412f00:	std    
  412f01:	in     al,dx
  412f02:	adc    edx,edx
  412f04:	mov    ?,ebx
  412f06:	fwait
  412f07:	push   ebp
  412f08:	add    ebp,eax
  412f0a:	mov    eax,0xaf35dffd
  412f0f:	push   edx
  412f10:	js     0x412f4a
  412f12:	or     eax,0x3afbbe1a
  412f17:	or     BYTE PTR [ecx+0x51],ah
  412f1a:	repz or al,0x8b
  412f1d:	outs   dx,DWORD PTR ds:[esi]
  412f1e:	inc    eax
  412f1f:	inc    esp
  412f20:	mov    ebx,0xe68d4ac8
  412f25:	cmp    eax,0x4fd4618f
  412f2a:	mov    dh,0x56
  412f2c:	popa   
  412f2d:	mov    ds:0xbcb7a04b,eax
  412f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f33:	popa   
  412f34:	add    ecx,DWORD PTR [edx]
  412f36:	sti    
  412f37:	lods   al,BYTE PTR ds:[esi]
  412f38:	sub    BYTE PTR [eax+0x11233421],bl
  412f3e:	push   0xffffff96
  412f40:	inc    edi
  412f41:	xor    ebp,DWORD PTR [edi+0x96525b7]
  412f47:	xchg   esi,eax
  412f48:	data16 jb 0x412f77
  412f4b:	in     eax,0xfa
  412f4d:	push   ebp
  412f4e:	cdq    
  412f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f50:	add    dl,BYTE PTR [ebp-0x518c2018]
  412f56:	mov    DWORD PTR [ecx-0x404d0413],ecx
  412f5c:	rcr    DWORD PTR [ebp-0x77],0x46
  412f60:	dec    esp
  412f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f62:	push   es
  412f63:	fsubr  QWORD PTR [esi+edi*8]
  412f66:	mov    ch,0x9d
  412f68:	pop    ebx
  412f69:	ror    DWORD PTR [ecx+0x514e5e7b],cl
  412f6f:	mov    ah,0x2f
  412f71:	inc    esp
  412f72:	xor    bh,BYTE PTR [edi-0x52]
  412f75:	iret   
  412f76:	sbb    al,0x4a
  412f78:	dec    edx
  412f79:	(bad)  
  412f7a:	ja     0x412f41
  412f7c:	repz les ebp,FWORD PTR [edx+0x76]
  412f80:	mov    eax,0xbb4903d0
  412f85:	ret    0xfe01
  412f88:	xor    al,0xa2
  412f8a:	loop   0x412f63
  412f8c:	js     0x412fc2
  412f8e:	mov    eax,0xfd2fc04f
  412f93:	lods   al,BYTE PTR ds:[esi]
  412f94:	push   cs
  412f95:	jle    0x412f21
  412f97:	push   esp
  412f98:	pop    esi
  412f99:	bound  edi,QWORD PTR [ebx+0x6d6de29d]
  412f9f:	in     al,0xff
  412fa1:	xor    al,0x7d
  412fa3:	stos   DWORD PTR es:[edi],eax
  412fa4:	stos   BYTE PTR es:[edi],al
  412fa5:	xor    eax,0xec2acf26
  412faa:	stos   BYTE PTR es:[edi],al
  412fab:	idiv   DWORD PTR [esi]
  412fad:	adc    ebx,ebx
  412faf:	push   0x8aeb8aee
  412fb4:	xchg   ebx,edi
  412fb6:	pop    bp
  412fb8:	dec    edi
  412fb9:	inc    esi
  412fba:	add    al,0xd7
  412fbc:	and    al,0x46
  412fbe:	das    
  412fbf:	inc    esp
  412fc0:	cld    
  412fc1:	xor    al,0x60
  412fc3:	mov    WORD PTR [ecx],cs
  412fc5:	mov    bl,0x8f
  412fc7:	and    dh,BYTE PTR [eax-0x1f]
  412fca:	fisub  WORD PTR [esi+0x24]
  412fcd:	into   
  412fce:	inc    esp
  412fcf:	outs   dx,BYTE PTR ds:[esi]
  412fd0:	mov    ah,0xa1
  412fd2:	cmp    BYTE PTR [ebx+0x143687a],dh
  412fd8:	mov    ah,0xbe
  412fda:	sar    DWORD PTR [ebp+0x20a69998],0x6a
  412fe1:	fdiv   DWORD PTR [ebp+0x4f]
  412fe4:	jmp    0xbcd43d64
  412fe9:	lds    ebp,FWORD PTR [ebp+0x12]
  412fec:	xchg   esi,eax
  412fed:	dec    edx
  412fee:	ja     0x413062
  412ff0:	push   ebp
  412ff1:	loopne 0x413041
  412ff3:	mov    eax,0x807a05ad
  412ff8:	mov    ah,0xbc
  412ffa:	jbe    0x413068
  412ffc:	mov    edi,0xbce8af89
  413001:	fsub   QWORD PTR [esi+0x6c]
  413004:	test   eax,0x8a9e3454
  413009:	jg     0x412ff4
  41300b:	jle    0x412fb1
  41300d:	rcl    DWORD PTR [ecx+ebp*8-0x40],0xd7
  413012:	pop    ecx
  413013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413014:	into   
  413015:	fisub  WORD PTR [ebx]
  413017:	jecxz  0x412fcb
  413019:	sbb    DWORD PTR [ecx-0x2f88f847],0xffffffc1
  413020:	pop    esi
  413021:	fwait
  413022:	adc    al,0x70
  413024:	(bad)  
  413025:	add    eax,0xf02e2421
  41302a:	out    0x1,al
  41302c:	outs   dx,BYTE PTR ds:[esi]
  41302d:	int    0x6d
  41302f:	mov    ebp,0xd26ad3e7
  413034:	iret   
  413035:	(bad)  
  413036:	sbb    cl,dh
  413038:	pop    esp
  413039:	push   ss
  41303a:	ret    0x2feb
  41303d:	loopne 0x413027
  41303f:	ror    DWORD PTR [ebx-0x77],0xdb
  413043:	pop    edx
  413044:	mov    ebx,DWORD PTR [eax+esi*4]
  413047:	or     DWORD PTR [esi],ecx
  413049:	xchg   edi,eax
  41304a:	fnstsw WORD PTR [esi+edx*1]
  41304d:	inc    eax
  41304e:	add    dl,dh
  413050:	rol    BYTE PTR [ecx+0x7c123a4b],cl
  413056:	sub    BYTE PTR [ebx],dh
  413058:	sbb    BYTE PTR [ebp+0x45ec43e3],al
  41305e:	adc    ecx,DWORD PTR [ebx]
  413060:	ror    DWORD PTR [eax+0x3ee0543d],1
  413066:	adc    BYTE PTR [ecx],dh
  413068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413069:	scas   eax,DWORD PTR es:[edi]
  41306a:	pop    ebx
  41306b:	and    eax,0x2b9e0dc3
  413070:	mov    ah,0x3a
  413072:	xchg   ebp,eax
  413073:	in     eax,dx
  413074:	sbb    eax,0xc6a73081
  413079:	cs pop ss
  41307b:	push   0xce148ff
  413080:	and    esp,DWORD PTR [ecx+esi*4-0x1144b2cf]
  413087:	jae    0x4130b2
  413089:	in     eax,dx
  41308a:	cwde   
  41308b:	iret   
  41308c:	sub    eax,DWORD PTR [edi-0x34]
  41308f:	add    eax,0x686f7f31
  413094:	cli    
  413095:	ja     0x41302b
  413097:	lds    eax,FWORD PTR [ebx+ecx*4]
  41309a:	adc    ch,0xd4
  41309d:	adc    eax,0x8e1090ee
  4130a2:	mov    eax,0xcaa4af40
  4130a7:	stc    
  4130a8:	fistp  WORD PTR ds:0x7ac2b081
  4130ae:	outs   dx,BYTE PTR ds:[esi]
  4130af:	fsubr  DWORD PTR [esi+0x652a2e1]
  4130b5:	mov    ch,0x48
  4130b7:	in     eax,dx
  4130b8:	adc    bl,BYTE PTR [ecx+0xb]
  4130bb:	inc    edx
  4130bc:	mov    ch,0xe3
  4130be:	mov    bh,0xe8
  4130c0:	out    dx,eax
  4130c1:	pop    DWORD PTR [edi-0x455c1018]
  4130c7:	into   
  4130c8:	in     al,0x2e
  4130ca:	in     al,dx
  4130cb:	mov    bh,0x33
  4130cd:	cmp    eax,0x9d396f69
  4130d2:	xchg   eax,eax
  4130d4:	lods   al,BYTE PTR ds:[esi]
  4130d5:	cwde   
  4130d6:	lock cmp BYTE PTR [esi+0x3e],cl
  4130da:	fcomp  DWORD PTR [edx]
  4130dc:	stos   BYTE PTR es:[edi],al
  4130dd:	adc    eax,ebx
  4130df:	adc    DWORD PTR [ebp+0x73f5c283],0xab0c216c
  4130e9:	cld    
  4130ea:	ds mov ch,0x5d
  4130ed:	inc    esi
  4130ee:	adc    DWORD PTR [ecx+esi*1-0x5e7f62d6],edx
  4130f5:	dec    edx
  4130f6:	int    0xa
  4130f8:	cmp    ebp,edi
  4130fa:	aad    0xcb
  4130fc:	shr    BYTE PTR [esi],0x71
  4130ff:	loopne 0x41311c
  413101:	jne    0x4130e4
  413103:	mov    ds:0xd061f0e2,eax
  413108:	push   ss
  413109:	lods   eax,DWORD PTR ds:[esi]
  41310a:	jge    0x413184
  41310c:	es jb  0x413162
  41310f:	fwait
  413110:	mov    ecx,0x29b16921
  413115:	inc    ecx
  413116:	push   edi
  413117:	mov    esp,DWORD PTR [ecx+0x342990cf]
  41311d:	cli    
  41311e:	test   dl,al
  413120:	retf   0x10a8
  413123:	jns    0x413191
  413125:	lods   eax,DWORD PTR ds:[esi]
  413126:	popf   
  413127:	adc    ebx,ebp
  413129:	jmp    0x59e7bd0c
  41312e:	retf   
  41312f:	mov    ebp,0x84ca60ea
  413134:	clc    
  413135:	or     al,0xec
  413137:	scas   eax,DWORD PTR es:[edi]
  413138:	add    ebx,ecx
  41313a:	sar    BYTE PTR [edi-0x2e5ec0a4],0x97
  413141:	or     DWORD PTR [edx-0x72],edi
  413144:	ficom  WORD PTR [esi]
  413146:	ss push esi
  413148:	outs   dx,BYTE PTR ds:[esi]
  413149:	pop    ds
  41314a:	mov    edi,0x289b70e0
  41314f:	dec    ebx
  413150:	ss xchg edi,eax
  413152:	mov    eax,ds:0x9204fe0
  413157:	pop    esp
  413158:	jmp    0x4131c9
  41315a:	push   0xc97973fb
  41315f:	scas   eax,DWORD PTR es:[edi]
  413160:	xchg   edi,eax
  413161:	cmp    dl,BYTE PTR [edi-0x3e270ee6]
  413167:	or     DWORD PTR [edi],esi
  413169:	stos   BYTE PTR es:[edi],al
  41316a:	or     eax,0xd08f59c7
  41316f:	sub    BYTE PTR [eax],cl
  413171:	mov    dh,0x53
  413173:	jmp    0xb407:0xe455f229
  41317a:	push   ecx
  41317b:	icebp  
  41317c:	xor    ecx,edi
  41317e:	arpl   sp,dx
  413180:	not    BYTE PTR [ecx]
  413182:	popa   
  413183:	outs   dx,BYTE PTR ds:[esi]
  413184:	pop    edi
  413185:	in     eax,0xf2
  413187:	adc    eax,0xa93e7e40
  41318c:	sub    al,0xbf
  41318e:	imul   ebx,ecx,0xecb4b72
  413194:	repz dec ecx
  413196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413197:	sbb    al,0x93
  413199:	mov    BYTE PTR [edi-0x10],al
  41319c:	push   esp
  41319d:	or     ecx,DWORD PTR [eax+0x37d90cc3]
  4131a3:	in     eax,0x6a
  4131a5:	cmp    ch,BYTE PTR [esi-0x4]
  4131a8:	int    0x79
  4131aa:	leave  
  4131ab:	jne    0x41318a
  4131ad:	aad    0x60
  4131af:	sub    DWORD PTR [eax],ebp
  4131b1:	inc    dx
  4131b3:	cli    
  4131b4:	and    BYTE PTR gs:[edx],ah
  4131b7:	or     edx,DWORD PTR [ebp-0x4]
  4131ba:	ss add al,0x98
  4131bd:	nop
  4131be:	push   0xc1666331
  4131c3:	call   DWORD PTR [ebp+0x0]
  4131c6:	pushf  
  4131c7:	dec    esi
  4131c8:	test   ch,0x67
  4131cb:	cmp    dh,BYTE PTR es:[bp+si]
  4131cf:	fistp  DWORD PTR [ebx-0x1554cf09]
  4131d5:	arpl   WORD PTR ds:0x6337fb3d,bx
  4131db:	mov    WORD PTR [edi+eax*2-0x546822c6],?
  4131e2:	xor    al,0x97
  4131e4:	xchg   esp,eax
  4131e5:	add    edi,ecx
  4131e7:	int3   
  4131e8:	sahf   
  4131e9:	xchg   ecx,eax
  4131ea:	pop    es
  4131eb:	into   
  4131ec:	fsin   
  4131ee:	push   esp
  4131ef:	out    0xd0,al
  4131f1:	mov    dh,BYTE PTR ss:[edx]
  4131f4:	jge    0x4131bd
  4131f6:	js     0x41322c
  4131f8:	(bad)  
  4131f9:	js     0x4131a4
  4131fb:	jo     0x4131d5
  4131fd:	pop    ebp
  4131fe:	adc    DWORD PTR [edx+0x37],edi
  413201:	pusha  
  413202:	aaa    
  413203:	sbb    al,0x6f
  413205:	and    ebx,DWORD PTR fs:0x96c1dbda
  41320c:	mov    al,ds:0x94597595
  413211:	inc    edi
  413212:	mov    ecx,0xafcb16f6
  413217:	out    dx,eax
  413218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413219:	add    eax,0x62d5d89c
  41321e:	xchg   ebx,esp
  413220:	aam    0x32
  413222:	cmp    esp,DWORD PTR [edx-0x5a8adb42]
  413228:	mov    ah,0x83
  41322a:	sar    DWORD PTR [ebx+ebx*8],cl
  41322d:	rcr    eax,1
  41322f:	cmp    BYTE PTR [edi],0x69
  413232:	cmp    ch,BYTE PTR [ebp+0xc]
  413235:	jae    0x41327b
  413237:	sbb    DWORD PTR [eax-0x1a65d956],0x1b
  41323e:	sahf   
  41323f:	jne    0x413283
  413241:	int3   
  413242:	leave  
  413243:	jg     0x41328d
  413245:	sbb    edx,ebp
  413247:	ret    
  413248:	test   BYTE PTR [edi+ebp*2],bh
  41324b:	popf   
  41324c:	jbe    0x4132b9
  41324e:	add    al,0x9a
  413250:	add    BYTE PTR [edi],dl
  413252:	(bad)  
  413253:	fld    DWORD PTR [eax-0x2b39932c]
  413259:	pop    edx
  41325a:	pop    esi
  41325b:	nop
  41325c:	mov    bh,0xf2
  41325e:	xchg   esp,eax
  41325f:	cdq    
  413260:	int3   
  413261:	lahf   
  413262:	pop    edi
  413263:	jmp    0x413247
  413265:	jl     0x4132b1
  413267:	(bad)  
  413268:	push   cs
  413269:	sub    ch,dl
  41326b:	sar    BYTE PTR [esi+0x6f6f687d],cl
  413271:	div    dl
  413273:	xchg   ebp,eax
  413274:	mov    ds:0x14f9ae01,al
  413279:	icebp  
  41327a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41327b:	clc    
  41327c:	push   ecx
  41327d:	add    al,0x79
  41327f:	jle    0x413270
  413281:	cld    
  413282:	push   esi
  413283:	in     eax,0x7e
  413285:	xchg   DWORD PTR [ebx-0x550f9df4],ebx
  41328b:	ins    DWORD PTR es:[edi],dx
  41328c:	pop    es
  41328d:	push   es
  41328e:	mov    WORD PTR [ebx],cs
  413290:	and    al,0x68
  413292:	out    dx,eax
  413293:	inc    eax
  413294:	js     0x4132ff
  413296:	xor    BYTE PTR [edx+0x78],dl
  413299:	ret    
  41329a:	fwait
  41329b:	jo     0x4132db
  41329d:	(bad)  
  41329e:	jmp    0x28819b21
  4132a3:	lods   eax,DWORD PTR ds:[esi]
  4132a4:	xor    eax,DWORD PTR [esi-0x20]
  4132a7:	outs   dx,DWORD PTR ds:[esi]
  4132a8:	cmp    esi,ebp
  4132aa:	cdq    
  4132ab:	js     0x4132a2
  4132ad:	repnz xchg esi,eax
  4132af:	lods   eax,DWORD PTR ds:[esi]
  4132b0:	ret    
  4132b1:	enter  0x6c98,0x7c
  4132b5:	in     al,dx
  4132b6:	js     0x4132c5
  4132b8:	inc    ecx
  4132b9:	inc    edi
  4132ba:	xor    cl,0xe3
  4132bd:	pop    ds
  4132be:	cli    
  4132bf:	arpl   WORD PTR [eax+0xe076fbc],dx
  4132c5:	pop    ds
  4132c6:	sbb    DWORD PTR [edx+0x78],esi
  4132c9:	stc    
  4132ca:	and    dh,ah
  4132cc:	sub    dl,al
  4132ce:	and    DWORD PTR [eax],esi
  4132d0:	xor    DWORD PTR [esi+0x43],ebp
  4132d3:	mov    bl,0x4
  4132d5:	jno    0x4132ab
  4132d7:	(bad)  
  4132d8:	add    al,0xce
  4132da:	jmp    0x7efa:0x7207e13f
  4132e1:	xchg   DWORD PTR [eax],ebx
  4132e3:	push   ds
  4132e4:	add    BYTE PTR [edi],al
  4132e6:	push   edx
  4132e7:	js     0x413309
  4132e9:	sti    
  4132ea:	pop    ebp
  4132eb:	add    BYTE PTR [edi+0x238ec4e8],0xa6
  4132f2:	or     esp,DWORD PTR [ecx-0x125de0ca]
  4132f8:	in     eax,0x52
  4132fa:	cmp    al,0xf5
  4132fc:	push   edx
  4132fd:	je     0x4132ec
  4132ff:	stc    
  413300:	jp     0x4132fb
  413302:	adc    dh,BYTE PTR [esi]
  413304:	or     al,0xc6
  413306:	sbb    DWORD PTR [edi-0x53],esp
  413309:	cs push edx
  41330b:	mov    bp,0xd087
  41330f:	pop    edi
  413310:	jo     0x413372
  413312:	mov    dh,0x98
  413314:	icebp  
  413315:	test   DWORD PTR [ebx-0x63d674e2],eax
  41331b:	jmp    0x7e0d2e17
  413320:	inc    ebx
  413321:	inc    edx
  413322:	and    ebp,ecx
  413324:	fmul   QWORD PTR [edx]
  413326:	push   0x3d
  413328:	jnp    0x413307
  41332a:	cmp    DWORD PTR [edi],ebp
  41332c:	lock nop
  41332e:	jge    0x4132dd
  413330:	push   edi
  413331:	push   0xffffffc2
  413333:	mov    esp,esi
  413335:	sub    DWORD PTR [esp+ebx*2],esp
  413338:	add    dl,BYTE PTR ds:0x4bdcff25
  41333e:	or     al,0xbd
  413340:	or     edi,DWORD PTR [edx+0x15087bd8]
  413346:	out    0x18,eax
  413348:	mov    esp,0xdaaf4971
  41334d:	cld    
  41334e:	stc    
  41334f:	mov    bl,0xdd
  413351:	sub    BYTE PTR [edx-0x5c12b7df],cl
  413357:	icebp  
  413358:	lods   al,BYTE PTR ds:[esi]
  413359:	enter  0x6070,0x2a
  41335d:	add    DWORD PTR [ecx+0x2f17e297],esp
  413363:	ins    DWORD PTR es:[edi],dx
  413364:	ds push 0xffffffb0
  413367:	mov    esi,0x986a296
  41336c:	xchg   esi,eax
  41336d:	cli    
  41336e:	sub    edx,DWORD PTR [ebp-0x1]
  413371:	out    0xb9,al
  413373:	push   ss
  413374:	retf   0x81d1
  413377:	adc    DWORD PTR [ebp+0x4d],esi
  41337a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41337b:	iret   
  41337c:	push   DWORD PTR ds:0xcfbe619d
  413382:	(bad)  
  413383:	cli    
  413384:	cli    
  413385:	cld    
  413386:	cmp    al,0xc5
  413388:	or     cl,cl
  41338a:	leave  
  41338b:	inc    edx
  41338c:	sub    al,0x95
  41338e:	loopne 0x413334
  413390:	cwde   
  413391:	shl    DWORD PTR [edi+0x2a],1
  413394:	cmp    eax,0x1643b5d1
  413399:	and    BYTE PTR [edi+0x0],ch
  41339c:	sbb    al,0x7b
  41339e:	sub    al,0x85
  4133a0:	mov    al,0xb9
  4133a2:	push   esp
  4133a3:	clc    
  4133a4:	mov    ch,0x4a
  4133a6:	jp     0x4133bd
  4133a8:	dec    edx
  4133a9:	mov    WORD PTR [ebp+ebx*2+0x759cd328],es
  4133b0:	adc    edx,ecx
  4133b2:	sbb    al,0x1b
  4133b4:	btr    DWORD PTR [edi+0x3d899ced],ebp
  4133bb:	gs inc eax
  4133bd:	inc    eax
  4133be:	loop   0x413402
  4133c0:	or     eax,0x91d29930
  4133c5:	(bad)  
  4133c6:	(bad)  
  4133c7:	out    dx,al
  4133c8:	test   DWORD PTR [ebx-0x7],edx
  4133cb:	sbb    BYTE PTR [eax+0x67],bl
  4133ce:	push   ebx
  4133cf:	add    bl,BYTE PTR [edi-0x646b9ef2]
  4133d5:	ret    0x3afc
  4133d8:	and    dh,BYTE PTR [ebx+0x21c60707]
  4133de:	inc    esi
  4133df:	pop    ecx
  4133e0:	lea    ebx,[edx-0x194eabae]
  4133e6:	dec    esi
  4133e7:	sub    eax,0x4ddcad2a
  4133ec:	dec    edi
  4133ed:	std    
  4133ee:	add    ebp,edx
  4133f0:	xchg   esi,eax
  4133f1:	sbb    edi,eax
  4133f3:	push   ss
  4133f4:	add    BYTE PTR [edx-0x3bc9d18f],dh
  4133fa:	jp     0x413475
  4133fc:	ss mov esp,0x1a50cb09
  413402:	lods   al,BYTE PTR ds:[esi]
  413403:	addr16 mov edi,0x443e5e8a
  413409:	inc    eax
  41340a:	repnz adc DWORD PTR [esi+0x29ea8875],0xffffff99
  413412:	mov    ebp,0x44d9a524
  413417:	arpl   WORD PTR [edi],cx
  413419:	aad    0x39
  41341b:	ss mov esi,0x79e261cc
  413421:	jns    0x41346e
  413423:	sahf   
  413424:	xlat   BYTE PTR ds:[ebx]
  413425:	pop    ds
  413426:	sub    esi,DWORD PTR [esi]
  413428:	cmp    eax,0x38375be8
  41342d:	lods   eax,DWORD PTR ds:[esi]
  41342e:	push   ecx
  41342f:	add    al,BYTE PTR [ebx]
  413431:	cmp    eax,0x179d42c9
  413436:	and    eax,DWORD PTR [ecx]
  413438:	data16 das 
  41343a:	(bad)  
  41343b:	test   al,0xb1
  41343d:	pop    ds
  41343e:	clc    
  41343f:	dec    edi
  413440:	dec    BYTE PTR [eax+esi*2]
  413443:	or     ch,ch
  413445:	xor    edx,eax
  413447:	sbb    al,bh
  413449:	pop    ds
  41344a:	push   0x53
  41344c:	mov    BYTE PTR [ecx-0x9],dh
  41344f:	cli    
  413450:	adc    esp,edx
  413452:	loop   0x413417
  413454:	dec    ebp
  413455:	mov    ?,WORD PTR [ebp+0x4128e96b]
  41345b:	sbb    al,BYTE PTR [edx-0x66]
  41345e:	jl     0x413443
  413460:	outs   dx,BYTE PTR ds:[esi]
  413461:	sbb    ebx,DWORD PTR [esp+ebx*1-0x15cc6b14]
  413468:	sub    BYTE PTR [eax+0x24],bh
  41346b:	mov    WORD PTR [ecx-0x850b503],gs
  413471:	stos   DWORD PTR es:[edi],eax
  413472:	je     0x4134ea
  413474:	or     BYTE PTR [ebx],bh
  413476:	jnp    0x413414
  413478:	ds adc al,0xd8
  41347b:	aas    
  41347c:	lea    ebp,[esi]
  41347e:	inc    esi
  41347f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413480:	das    
  413481:	jp     0x413482
  413483:	aaa    
  413484:	mov    edx,0xbf22fda5
  413489:	sbb    eax,0x41e77889
  41348e:	test   bh,ch
  413490:	pop    eax
  413491:	(bad)  
  413492:	scas   al,BYTE PTR es:[edi]
  413493:	pop    ds
  413494:	xchg   ebx,eax
  413495:	mov    esp,0xe12748cb
  41349a:	push   ss
  41349b:	shl    DWORD PTR [ebx+0x21],1
  41349e:	mov    ebp,esi
  4134a0:	lea    ebx,[edi+ecx*8]
  4134a3:	mov    esi,0x5d64f870
  4134a8:	mov    bh,0xf7
  4134aa:	or     al,bh
  4134ac:	sub    BYTE PTR [esi],cl
  4134ae:	lds    edi,FWORD PTR [ebx]
  4134b0:	push   esi
  4134b1:	mov    al,0xd5
  4134b3:	retf   0x2cf2
  4134b6:	and    dl,BYTE PTR cs:[edx]
  4134b9:	jo     0x413451
  4134bb:	mov    cl,0x1d
  4134bd:	mov    ecx,0xc845da72
  4134c2:	cli    
  4134c3:	or     ebx,DWORD PTR [edx+0x2e110eab]
  4134c9:	mov    esp,0xb769bce8
  4134ce:	lock ins BYTE PTR es:[edi],dx
  4134d0:	fmulp  st(1),st
  4134d2:	in     al,0x4
  4134d4:	sub    ch,ch
  4134d6:	push   ebp
  4134d7:	scas   al,BYTE PTR es:[edi]
  4134d8:	sahf   
  4134d9:	inc    ebp
  4134da:	out    dx,al
  4134db:	outs   dx,DWORD PTR ds:[esi]
  4134dc:	push   esp
  4134dd:	inc    edi
  4134de:	add    esi,ebx
  4134e0:	dec    esp
  4134e1:	mov    cl,dh
  4134e3:	pop    edi
  4134e4:	mov    ds:0x7ea03603,eax
  4134e9:	ret    0xd3c0
  4134ec:	(bad)  
  4134ed:	adc    al,0xd
  4134ef:	adc    eax,0xca27f7f9
  4134f4:	clc    
  4134f5:	pop    ds
  4134f6:	jmp    0x4109:0x559f8a8f
  4134fd:	out    dx,eax
  4134fe:	sbb    BYTE PTR [edi],ah
  413500:	jl     0x413518
  413502:	pop    ebx
  413503:	xchg   esi,eax
  413504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413505:	jo     0x41352e
  413507:	push   es
  413508:	gs shl dh,0xd5
  41350c:	fs pop es
  41350e:	cdq    
  41350f:	call   0xf59d9adb
  413514:	add    al,BYTE PTR [esi+0x3f]
  413517:	jb     0x4134a6
  413519:	adc    eax,0x845c456d
  41351e:	mov    eax,ds:0xa5ba7ee9
  413523:	pop    esi
  413524:	lahf   
  413525:	jae    0x413533
  413527:	fsubr  DWORD PTR [edi+0x6681da87]
  41352d:	xchg   ecx,eax
  41352e:	test   DWORD PTR [ecx+0xa],ebp
  413531:	push   ss
  413532:	sahf   
  413533:	test   BYTE PTR [ebx+0x42],ah
  413536:	call   0x44b:0x4823e380
  41353d:	and    al,0x43
  41353f:	pxor   mm2,QWORD PTR [ebx-0x7beb288f]
  413546:	dec    eax
  413547:	lahf   
  413548:	xor    BYTE PTR [ebx+0x675a9401],dh
  41354e:	cmp    DWORD PTR [edx-0x640861ef],ecx
  413554:	(bad)  
  413555:	push   DWORD PTR [eax-0x47]
  413558:	xor    ch,BYTE PTR [ebx+0x28460cc7]
  41355e:	inc    ecx
  41355f:	cdq    
  413560:	pop    esi
  413561:	mov    ds:0xd6a34d41,eax
  413566:	mov    edi,DWORD PTR [ebp-0x3723f84b]
  41356c:	push   esp
  41356d:	add    ecx,DWORD PTR [ebx-0x52]
  413570:	or     BYTE PTR [edi+0x45],ch
  413573:	(bad)  
  413574:	cli    
  413575:	sti    
  413576:	les    esp,FWORD PTR [edx-0x19973b63]
  41357c:	cmp    al,0xdf
  41357e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41357f:	loop   0x4135a4
  413581:	adc    BYTE PTR [eax],dh
  413583:	lds    ebx,FWORD PTR [edi+eiz*2]
  413586:	add    ah,BYTE PTR [edi+0x73337ca0]
  41358c:	call   0xdc56:0xf7418860
  413593:	fwait
  413594:	scas   al,BYTE PTR es:[edi]
  413595:	fistp  DWORD PTR [ecx-0x45eb312]
  41359b:	js     0x413604
  41359d:	jae    0x413592
  41359f:	popf   
  4135a0:	inc    eax
  4135a1:	sahf   
  4135a2:	sub    DWORD PTR [edx+0x6d41bb9c],ecx
  4135a8:	or     ecx,DWORD PTR [edx-0x6f]
  4135ab:	mov    ch,cl
  4135ad:	out    0x85,eax
  4135af:	cmp    ah,ch
  4135b1:	sti    
  4135b2:	rol    BYTE PTR [esi+0x2b],0x73
  4135b6:	(bad)  
  4135b8:	mov    dh,0x75
  4135ba:	push   0x28d677e
  4135bf:	pop    esi
  4135c0:	xchg   esp,eax
  4135c1:	cmp    BYTE PTR gs:[ecx-0x54],0x4e
  4135c6:	in     al,0xe3
  4135c8:	jb     0x4135f8
  4135ca:	and    DWORD PTR [ebx-0x55cbd7e2],eax
  4135d0:	or     edi,edi
  4135d2:	cmp    dh,BYTE PTR [esi+0x36]
  4135d5:	dec    edi
  4135d6:	aas    
  4135d7:	(bad)  [ecx-0x48]
  4135da:	scas   al,BYTE PTR es:[edi]
  4135db:	jne    0x413611
  4135dd:	inc    edx
  4135de:	and    edi,DWORD PTR [ecx-0x11d09d62]
  4135e4:	lods   al,BYTE PTR ds:[esi]
  4135e5:	sbb    cl,BYTE PTR [edx-0x57]
  4135e8:	jle    0x413644
  4135ea:	xchg   edi,eax
  4135eb:	imul   esi,ecx,0x6e09806d
  4135f1:	mov    edx,0xd816eece
  4135f6:	mov    edi,0x6b5a1dff
  4135fb:	aas    
  4135fc:	(bad)  
  4135fe:	call   FWORD PTR [edx]
  413600:	mov    ecx,0x4d6641d
  413605:	mov    ebp,0x6db5cb7a
  41360a:	sar    DWORD PTR [ebp+edi*2-0x7f2dfd18],1
  413611:	mov    ah,0x3d
  413613:	sub    esi,DWORD PTR [ebx]
  413615:	fisttp WORD PTR [ecx]
  413617:	ret    
  413618:	pop    ebx
  413619:	pop    esp
  41361a:	pop    edx
  41361b:	jbe    0x41365a
  41361d:	fwait
  41361e:	push   edi
  41361f:	push   ebx
  413620:	mov    WORD PTR [ecx],ss
  413622:	leave  
  413623:	or     eax,0xf058e432
  413628:	dec    edi
  413629:	std    
  41362a:	xor    al,cl
  41362c:	fisubr DWORD PTR [ebp-0x6530d222]
  413632:	test   BYTE PTR [esi-0x41],bh
  413635:	mov    BYTE PTR [edi-0x5fc7f0fa],dh
  41363b:	mov    dh,0x7
  41363d:	sti    
  41363e:	xor    ebx,DWORD PTR [edx]
  413640:	push   esp
  413641:	mov    WORD PTR [esi-0x6e5910f],gs
  413647:	leave  
  413648:	pop    ebp
  413649:	clc    
  41364a:	pop    edi
  41364b:	sbb    al,dh
  41364d:	aad    0xe6
  41364f:	mov    eax,0x219ddcfe
  413654:	sti    
  413655:	mov    esp,0x87bea689
  41365a:	std    
  41365b:	rol    BYTE PTR [edx+0x26],0x2c
  41365f:	pushf  
  413660:	dec    ecx
  413661:	add    ch,0x4b
  413664:	jl     0x4135f9
  413666:	ror    esp,cl
  413668:	inc    ecx
  413669:	pop    ebp
  41366a:	mov    gs:0x2a9bf5cc,eax
  413670:	(bad)  
  413671:	sti    
  413672:	dec    ebx
  413673:	sbb    BYTE PTR [esi],al
  413675:	mov    BYTE PTR [ebx],al
  413677:	xor    DWORD PTR [edx-0x7c],eax
  41367a:	out    0x40,al
  41367c:	sbb    dh,bh
  41367e:	jge    0x4136b8
  413680:	outs   dx,BYTE PTR ds:[esi]
  413681:	push   cs
  413682:	jge    0x4136e2
  413684:	adc    esp,DWORD PTR ds:0x4aec75e2
  41368a:	cld    
  41368b:	fwait
  41368c:	call   0x199a6667
  413691:	fisttp DWORD PTR [ebx+0x4af51a53]
  413697:	mov    ecx,0x2f79df46
  41369c:	(bad)  
  41369d:	pop    ebx
  41369e:	lods   eax,DWORD PTR ds:[esi]
  41369f:	mov    dl,0x49
  4136a1:	imul   ebx,ecx,0xffffffb8
  4136a4:	test   DWORD PTR [ebp+0x23],0xcc6e66f7
  4136ab:	stos   BYTE PTR es:[edi],al
  4136ac:	iret   
  4136ad:	das    
  4136ae:	int    0xd5
  4136b0:	push   ebp
  4136b1:	iret   
  4136b2:	jno    0x413675
  4136b4:	stc    
  4136b5:	andps  xmm4,XMMWORD PTR [ebx]
  4136b8:	lods   al,BYTE PTR ds:[esi]
  4136b9:	push   edi
  4136ba:	cmp    eax,0x79d236e0
  4136bf:	ret    
  4136c0:	push   cs
  4136c1:	mov    esi,0x1a1620bd
  4136c6:	mov    bl,0x48
  4136c8:	ss test al,0xe4
  4136cb:	sub    ebp,edx
  4136cd:	xlat   BYTE PTR ds:[ebx]
  4136ce:	jno    0x4136e2
  4136d0:	jns    0x413750
  4136d2:	ret    
  4136d3:	outs   dx,BYTE PTR ds:[esi]
  4136d4:	jo     0x413675
  4136d6:	sub    edi,eax
  4136d8:	sbb    ch,BYTE PTR [ebp-0x54]
  4136db:	xchg   esi,eax
  4136dc:	inc    BYTE PTR [eax-0x7e374048]
  4136e2:	shr    BYTE PTR [edi+ebx*2-0x24],cl
  4136e6:	adc    eax,0x8fd57f4b
  4136eb:	test   DWORD PTR [esi],esp
  4136ed:	mov    ah,0xc8
  4136ef:	pop    ecx
  4136f0:	popa   
  4136f1:	call   0xa12b8bb
  4136f6:	or     esi,esi
  4136f8:	mov    edi,esp
  4136fa:	mov    WORD PTR [esi+0x74],ss
  4136fd:	xchg   ecx,eax
  4136fe:	mov    ch,0x2
  413700:	mov    eax,ecx
  413702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413703:	jmp    0xd1a9:0xa861336
  41370a:	repnz add al,0xf9
  41370d:	cmovno esi,DWORD PTR [edi+0x2a]
  413711:	sub    cl,BYTE PTR [edi]
  413713:	pop    ecx
  413714:	loope  0x413755
  413716:	(bad)  
  413717:	jns    0x8a516e3e
  41371d:	pop    ds
  41371e:	jmp    0xf6a9:0xd35e69dd
  413725:	sbb    esp,ebp
  413727:	pushf  
  413728:	scas   al,BYTE PTR es:[edi]
  413729:	mov    ebp,0x7a1bc90b
  41372e:	and    ebp,0xfffffffa
  413731:	push   ss
  413732:	js     0x4137a5
  413734:	jl     0x4136fe
  413736:	sar    DWORD PTR [ebp-0x3bf8b131],cl
  41373c:	fwait
  41373d:	add    ch,BYTE PTR [edx+0x622be416]
  413743:	cmp    ebx,eax
  413745:	xor    al,0x7f
  413747:	push   ds
  413748:	cmp    dl,bh
  41374a:	mov    cl,0x3f
  41374c:	jno    0x4137af
  41374e:	jmp    0x413723
  413750:	xlat   BYTE PTR ds:[ebx]
  413751:	push   eax
  413752:	push   ebp
  413753:	or     al,0x75
  413755:	ja     0x4137d4
  413757:	jmp    0x3b93:0x447ca2c7
  41375e:	pop    esi
  41375f:	pop    ss
  413760:	inc    edi
  413761:	mov    al,ds:0xa4374953
  413766:	jb     0x4137b3
  413768:	aad    0xae
  41376a:	test   DWORD PTR [ecx+0x71],esp
  41376d:	fist   WORD PTR [ecx]
  41376f:	xchg   ebx,eax
  413770:	jo     0x413722
  413772:	and    eax,0xe4720bee
  413777:	retf   
  413778:	(bad)  
  41377a:	fidiv  WORD PTR [edx+0x68d8a322]
  413780:	mov    ch,0x62
  413782:	xor    al,0x95
  413784:	rol    DWORD PTR [edx],0x5a
  413787:	xchg   DWORD PTR [eax+0x22db346f],ebx
  41378d:	push   ecx
  41378e:	jnp    0x413802
  413790:	ror    BYTE PTR [eax+0x34696afb],0xc0
  413797:	(bad)  
  413798:	jp     0x4137ae
  41379a:	xor    BYTE PTR [edx],al
  41379c:	or     al,0x44
  41379e:	nop
  41379f:	mov    eax,0xe8742781
  4137a4:	div    ah
  4137a6:	inc    esi
  4137a7:	sbb    DWORD PTR [esi],ebx
  4137a9:	jl     0x4137fc
  4137ab:	cmp    esp,DWORD PTR [ebx+0x7727ddd8]
  4137b1:	scas   al,BYTE PTR es:[edi]
  4137b2:	scas   eax,DWORD PTR es:[edi]
  4137b3:	mov    ebp,0x5dc054c3
  4137b8:	clc    
  4137b9:	mov    ah,0x57
  4137bb:	pop    eax
  4137bc:	test   BYTE PTR [ecx],bl
  4137be:	jns    0x413831
  4137c0:	push   eax
  4137c1:	jp     0x41382b
  4137c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137c4:	repz fdiv DWORD PTR ds:0x4e2582c9
  4137cb:	scas   eax,DWORD PTR es:[edi]
  4137cc:	and    DWORD PTR [eax-0x32],ebx
  4137cf:	aam    0xc0
  4137d1:	xor    eax,0xdd87814
  4137d6:	adc    ch,BYTE PTR [edx+0x1cf90b36]
  4137dc:	pop    ebx
  4137dd:	add    eax,0xdea06f44
  4137e2:	adc    eax,0x65223e59
  4137e7:	pop    ds
  4137e8:	int    0xbd
  4137ea:	cdq    
  4137eb:	ret    0xaaaf
  4137ee:	lahf   
  4137ef:	call   0xae4248fe
  4137f4:	dec    eax
  4137f5:	bnd je 0x41380b
  4137f8:	popa   
  4137f9:	inc    ebp
  4137fa:	xchg   DWORD PTR [edi+0x43],edi
  4137fd:	arpl   WORD PTR [edi+0x258379f6],si
  413803:	mov    dh,ah
  413805:	pop    es
  413806:	in     al,dx
  413807:	iret   
  413808:	xchg   edx,eax
  413809:	(bad)  
  41380a:	mov    eax,eax
  41380c:	xchg   edx,eax
  41380d:	rcr    DWORD PTR [ecx],0x45
  413810:	bound  edx,QWORD PTR [ebp+ecx*2+0x5b]
  413814:	push   cs
  413815:	imul   edi,DWORD PTR [ebp+eiz*1+0x58],0x46d55a9e
  41381d:	xchg   ebp,eax
  41381e:	sbb    al,0x59
  413820:	mov    esp,0xe1fd7a83
  413825:	cli    
  413826:	lahf   
  413827:	imul   ecx,DWORD PTR [ebp+0x7018171c],0x76c9015
  413831:	jnp    0x413859
  413833:	sub    al,0x65
  413835:	std    
  413836:	mov    bh,0xdc
  413838:	ins    BYTE PTR es:[edi],dx
  413839:	sbb    al,0x6
  41383b:	loopne 0x4137ef
  41383d:	sahf   
  41383e:	repz std 
  413840:	pcmpgtb mm5,QWORD PTR [edi-0x30]
  413844:	add    DWORD PTR [edx-0x24],esi
  413847:	inc    esp
  413848:	sub    cl,dl
  41384a:	inc    esi
  41384b:	sub    al,al
  41384d:	xchg   esi,eax
  41384e:	inc    esp
  41384f:	pop    ebx
  413850:	test   BYTE PTR [edi],ch
  413852:	mov    bh,0xb8
  413854:	xor    esi,edx
  413856:	cld    
  413857:	and    BYTE PTR ds:0x765276d3,bh
  41385d:	ds lock adc eax,0x233d8c5d
  413864:	shl    DWORD PTR [esp+eiz*4+0x2abb1e9e],0xda
  41386c:	inc    esi
  41386d:	bound  edi,QWORD PTR [edi-0x3]
  413870:	loope  0x413875
  413872:	loope  0x41386d
  413874:	enter  0xa926,0xad
  413878:	jne    0x413827
  41387a:	bound  ecx,QWORD PTR [ebx]
  41387c:	fcomp  DWORD PTR [edi]
  41387e:	adc    eax,0xd575fb1d
  413883:	push   edi
  413884:	push   edx
  413885:	ja     0x413882
  413887:	and    al,0xe0
  413889:	dec    esp
  41388a:	xchg   esi,eax
  41388b:	add    DWORD PTR [eax+esi*2+0x52],esi
  41388f:	out    dx,al
  413890:	sub    ebx,esp
  413892:	push   ecx
  413893:	(bad)  
  413895:	cmp    ah,BYTE PTR [esi]
  413897:	pop    ebp
  413898:	scas   al,BYTE PTR es:[edi]
  413899:	outs   dx,DWORD PTR ds:[esi]
  41389a:	imul   esp,DWORD PTR [ecx],0x8
  41389d:	xchg   ebx,eax
  41389e:	adc    ah,BYTE PTR [edi]
  4138a0:	retf   0x4d73
  4138a3:	mov    ds:0x472e2082,eax
  4138a8:	dec    esi
  4138a9:	push   0x2d
  4138ab:	pusha  
  4138ac:	repnz cmp ch,dl
  4138af:	inc    ecx
  4138b0:	sub    dh,BYTE PTR [edx+0x5a9f7973]
  4138b6:	jnp    0x413929
  4138b8:	pop    bx
  4138ba:	fs out dx,al
  4138bc:	xlat   BYTE PTR ds:[ebx]
  4138bd:	aaa    
  4138be:	(bad)  
  4138bf:	scas   al,BYTE PTR es:[edi]
  4138c0:	adc    BYTE PTR [edi-0x1c],bl
  4138c3:	(bad)  
  4138c4:	cli    
  4138c5:	mov    esp,0xa9cf47c
  4138ca:	loop   0x413866
  4138cc:	neg    BYTE PTR [esi]
  4138ce:	dec    edi
  4138cf:	in     eax,dx
  4138d0:	rol    BYTE PTR [ecx+0x7f],1
  4138d3:	cmp    eax,0x1768a04d
  4138d8:	xor    eax,0x48db0774
  4138dd:	test   al,0x19
  4138df:	add    eax,0x640f9ce1
  4138e4:	cmp    eax,0xbb45053e
  4138e9:	(bad)  
  4138ea:	xor    eax,0x3f1fab3f
  4138ef:	pushf  
  4138f0:	int    0x42
  4138f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138f3:	adc    eax,0x2ac02018
  4138f8:	add    BYTE PTR [ebp+ebx*1-0x57],dh
  4138fc:	push   0xc6369e14
  413901:	(bad)  
  413903:	mov    ch,0x12
  413905:	out    0x26,al
  413907:	and    eax,0x46a70b57
  41390c:	pushf  
  41390d:	es cwde 
  41390f:	mov    cl,0x43
  413911:	fmul   QWORD PTR [esi+0x182c8abc]
  413917:	cwde   
  413918:	daa    
  413919:	inc    ebx
  41391a:	jmp    0x89d6c645
  41391f:	(bad)
  413923:	add    al,0xf3
  413925:	pop    eax
  413926:	cmp    esi,esp
  413928:	arpl   di,si
  41392a:	jl     0x4138e7
  41392c:	jns    0x413992
  41392e:	xlat   BYTE PTR ds:[ebx]
  41392f:	repz test BYTE PTR [ebp-0x41c96c4a],cl
  413936:	pop    ds
  413937:	mov    ebp,0xc2c3b6dd
  41393c:	jmp    0x4bdf5dff
  413941:	xor    ah,dh
  413943:	jno    0x413928
  413945:	pop    es
  413946:	iret   
  413947:	mov    ecx,0x5ea97e75
  41394c:	xchg   ecx,eax
  41394d:	in     al,0xd7
  41394f:	add    BYTE PTR [ecx+0x20],dl
  413952:	fpatan 
  413954:	push   edx
  413955:	xor    ebx,DWORD PTR ds:0x164c0b3c
  41395b:	and    DWORD PTR [ecx-0x29f7bda2],ecx
  413961:	push   ds
  413962:	jmp    0x4139d6
  413964:	xlat   BYTE PTR ds:[ebx]
  413965:	fwait
  413966:	sbb    bl,BYTE PTR ds:0xf606ad45
  41396c:	mov    esi,0xa81df990
  413971:	(bad)  
  413972:	clc    
  413973:	mov    dh,BYTE PTR [esi-0x23]
  413976:	stos   BYTE PTR es:[edi],al
  413977:	and    esi,DWORD PTR ds:0x1ecc2097
  41397d:	in     eax,0xfc
  41397f:	jge    0x4139b3
  413981:	and    cl,BYTE PTR [edx+eiz*4+0x46]
  413985:	retf   
  413986:	cwde   
  413987:	dec    esp
  413988:	adc    BYTE PTR [ebx+0x13],bh
  41398b:	popa   
  41398c:	adc    edi,edi
  41398e:	inc    ebx
  41398f:	fwait
  413990:	aaa    
  413991:	cmp    eax,0x5aa31355
  413996:	mov    esi,0xd73e4f8a
  41399b:	nop
  41399c:	pop    esi
  41399d:	ins    DWORD PTR es:[edi],dx
  41399e:	cmp    eax,esp
  4139a0:	xchg   cx,ax
  4139a2:	retf   0x46a5
  4139a5:	mov    BYTE PTR [esi+0x7a],dh
  4139a8:	les    esi,FWORD PTR [ecx+0x55]
  4139ab:	(bad)  
  4139ad:	or     al,0x11
  4139af:	jl     0x413a13
  4139b1:	js     0x413976
  4139b3:	cli    
  4139b4:	(bad)  
  4139b5:	ds rcl ebp,cl
  4139b8:	outs   dx,DWORD PTR ds:[esi]
  4139b9:	fld    TBYTE PTR [edx-0x6b]
  4139bc:	xor    al,0xdf
  4139be:	ja     0x413949
  4139c0:	iret   
  4139c1:	adc    DWORD PTR [ecx],ecx
  4139c3:	outs   dx,DWORD PTR ds:[esi]
  4139c4:	and    BYTE PTR [eax+0x79],dl
  4139c7:	and    BYTE PTR [edx],ch
  4139c9:	stos   DWORD PTR es:[edi],eax
  4139ca:	imul   ebp,eax,0xde5a12a7
  4139d0:	or     ah,dh
  4139d2:	and    DWORD PTR [ebp-0x184f56ab],ebp
  4139d8:	retf   0x4c84
  4139db:	in     al,0xa0
  4139dd:	fsubr  st,st(6)
  4139df:	pop    ebp
  4139e0:	add    edx,DWORD PTR [edx-0x736bb13d]
  4139e6:	push   eax
  4139e7:	popa   
  4139e8:	call   esp
  4139ea:	cld    
  4139eb:	mov    WORD PTR [eax],ds
  4139ed:	jb     0x4139f5
  4139ef:	scas   al,BYTE PTR es:[edi]
  4139f0:	mov    cl,0xe1
  4139f2:	dec    ecx
  4139f3:	hlt    
  4139f4:	xchg   DWORD PTR [edi],ecx
  4139f6:	and    DWORD PTR [ecx-0x7b1586b7],eax
  4139fc:	out    0xbc,eax
  4139fe:	cdq    
  4139ff:	or     BYTE PTR [ebp+0x59],0xef
  413a03:	mov    bh,0x5f
  413a05:	sahf   
  413a06:	div    BYTE PTR [esi+0x66192a75]
  413a0c:	adc    ah,BYTE PTR [ecx+0x64]
  413a0f:	stos   BYTE PTR es:[edi],al
  413a10:	xlat   BYTE PTR ds:[ebx]
  413a11:	rcl    DWORD PTR [esi-0x6c],0xb6
  413a15:	push   0xffffffe5
  413a17:	pop    edi
  413a18:	call   0x582:0x9e20bc4a
  413a1f:	inc    eax
  413a20:	dec    esp
  413a21:	daa    
  413a22:	jns    0x413a2c
  413a24:	lods   eax,DWORD PTR ds:[esi]
  413a25:	mov    ds:0x67ba9e5a,eax
  413a2a:	daa    
  413a2b:	and    al,0x7e
  413a2d:	sbb    ebx,ebp
  413a2f:	pop    ebp
  413a30:	sbb    bl,BYTE PTR [eax-0x8]
  413a33:	out    0x4d,al
  413a35:	push   es
  413a36:	in     eax,0x5c
  413a38:	pop    ss
  413a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a3a:	gs dec ebp
  413a3c:	xchg   ebx,eax
  413a3d:	pavgw  mm0,QWORD PTR [ebx+0x130d4d30]
  413a44:	(bad)
  413a47:	retf   
  413a48:	inc    edx
  413a49:	mov    ebx,0xf50bc89f
  413a4e:	and    DWORD PTR [edx+0x5ddccfaf],eax
  413a54:	aad    0xa9
  413a56:	and    eax,0xc0820f71
  413a5b:	xor    eax,0x7d9a9c4e
  413a60:	push   0xffffffeb
  413a62:	push   0xa0b27701
  413a67:	rcl    DWORD PTR [eax],1
  413a69:	adc    DWORD PTR [ebp-0x2f27c524],esp
  413a6f:	lea    eax,[edi]
  413a71:	or     BYTE PTR [ecx+edi*1+0x6776dc07],ah
  413a78:	dec    esp
  413a79:	mov    ch,0x5f
  413a7b:	je     0x413a24
  413a7d:	sub    al,0x3f
  413a7f:	daa    
  413a80:	mov    ebp,0x81c17865
  413a85:	out    dx,eax
  413a86:	jmp    0xf7538d41
  413a8b:	mov    ds,WORD PTR [ebx-0x5a]
  413a8e:	clc    
  413a8f:	pop    edx
  413a90:	dec    ebp
  413a91:	jl     0x413b06
  413a93:	or     al,BYTE PTR [ebx+0x6d375282]
  413a99:	leave  
  413a9a:	push   edi
  413a9b:	jmp    0x8b67:0x248409c9
  413aa2:	jl     0x413a2a
  413aa4:	psrad  mm1,QWORD PTR [esi+eax*8+0x65]
  413aa9:	out    dx,al
  413aaa:	in     eax,0x3e
  413aac:	lock pusha 
  413aae:	cmp    bh,BYTE PTR [ecx]
  413ab0:	dec    eax
  413ab1:	aad    0xae
  413ab3:	mov    dh,0xdb
  413ab5:	xchg   edx,eax
  413ab6:	ins    DWORD PTR es:[edi],dx
  413ab7:	push   es
  413ab8:	lea    edx,[esi-0xf]
  413abb:	mov    eax,es:0x2dc5a62
  413ac1:	in     al,dx
  413ac2:	loopne 0x413aa2
  413ac4:	retf   
  413ac5:	fs test eax,0xc789476e
  413acb:	sbb    eax,0xf2bd7659
  413ad0:	pushf  
  413ad1:	xchg   edx,eax
  413ad2:	xchg   esi,eax
  413ad3:	sbb    al,0x82
  413ad5:	adc    ebp,ebx
  413ad7:	and    al,0xac
  413ad9:	mov    dh,0xaf
  413adb:	aaa    
  413adc:	ret    0xcc1c
  413adf:	mov    al,ds:0xbe2b2dc
  413ae4:	mov    WORD PTR [ecx],gs
  413ae6:	and    BYTE PTR [edx+0x7b3c9fba],ah
  413aec:	outs   dx,BYTE PTR ds:[esi]
  413aed:	rol    BYTE PTR [edi-0x52],1
  413af0:	dec    eax
  413af1:	xchg   ecx,eax
  413af2:	ret    0xbf1c
  413af5:	icebp  
  413af6:	mov    dh,0xba
  413af9:	add    BYTE PTR [edi],0xb7
  413afc:	sub    esi,DWORD PTR ds:0xf3f25a25
  413b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b03:	repnz push 0x3fc122c4
  413b09:	addr16 pop esp
  413b0b:	fimul  WORD PTR [edx+0x477b4784]
  413b11:	fist   DWORD PTR [eax-0x72e9a894]
  413b17:	jecxz  0x413b46
  413b19:	xor    ebp,DWORD PTR [ebx-0x7e]
  413b1c:	xor    edi,ecx
  413b1e:	xchg   ebx,eax
  413b1f:	aaa    
  413b20:	int3   
  413b21:	(bad)  
  413b22:	xchg   ecx,eax
  413b23:	stos   BYTE PTR es:[edi],al
  413b24:	sar    bl,0xec
  413b27:	les    edi,FWORD PTR [ebp-0x78]
  413b2a:	repz adc esi,ebp
  413b2d:	cmp    ah,0x3e
  413b30:	popa   
  413b31:	shr    BYTE PTR [esi+0x4b1fcf42],cl
  413b37:	xor    bh,BYTE PTR [eax+0x75]
  413b3a:	imul   ecx,eax,0xdd39865b
  413b40:	fwait
  413b41:	mov    bl,0x3f
  413b43:	xchg   esp,eax
  413b44:	pop    es
  413b45:	mov    WORD PTR [edi+0x45],gs
  413b48:	sbb    eax,0xfc7765b8
  413b4d:	inc    ebx
  413b4e:	shl    DWORD PTR [eax],1
  413b50:	mov    edx,ebp
  413b52:	dec    eax
  413b53:	scas   al,BYTE PTR es:[edi]
  413b54:	loop   0x413aec
  413b56:	iret   
  413b57:	retf   0xf90c
  413b5a:	aam    0xb1
  413b5c:	mov    gs,WORD PTR [ebp+0x21]
  413b5f:	xchg   esp,eax
  413b60:	xor    esi,DWORD PTR [eax]
  413b62:	jb     0x413b00
  413b64:	dec    edx
  413b65:	mov    al,dh
  413b67:	jb     0x413b22
  413b69:	add    BYTE PTR [ebx],ah
  413b6b:	cmp    al,0x83
  413b6d:	pop    ebx
  413b6e:	mov    DWORD PTR [edi+0x3b],edi
  413b71:	(bad)  
  413b73:	jb     0x413b84
  413b75:	sub    DWORD PTR ds:0xe6c1df91,esp
  413b7b:	and    ah,BYTE PTR [edi-0x11a15f3]
  413b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b82:	mov    ds:0x5b333cd7,al
  413b87:	xchg   ebx,eax
  413b88:	cmp    edx,ecx
  413b8a:	adc    DWORD PTR [esi+0x7d],edx
  413b8d:	push   es
  413b8e:	sub    al,0xa9
  413b90:	fisttp QWORD PTR [edx-0x7a]
  413b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b94:	cmp    ch,bh
  413b96:	xlat   BYTE PTR ds:[ebx]
  413b97:	(bad)  [edi+0x31]
  413b9a:	pusha  
  413b9b:	out    dx,eax
  413b9c:	jge    0x413b72
  413b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b9f:	ins    DWORD PTR es:[edi],dx
  413ba0:	inc    edx
  413ba1:	scas   al,BYTE PTR es:[edi]
  413ba2:	xchg   ebx,eax
  413ba3:	mov    BYTE PTR [ebx],al
  413ba5:	xlat   BYTE PTR ds:[ebx]
  413ba6:	loope  0x413b6e
  413ba8:	into   
  413ba9:	push   es
  413baa:	ret    
  413bab:	ins    DWORD PTR es:[edi],dx
  413bac:	loop   0x413b85
  413bae:	push   es
  413baf:	(bad)  
  413bb0:	cld    
  413bb1:	ficom  WORD PTR [ebx-0x17]
  413bb4:	jg     0x413b99
  413bb6:	scas   eax,DWORD PTR es:[edi]
  413bb7:	pop    ds
  413bb8:	cwde   
  413bb9:	ins    DWORD PTR es:[edi],dx
  413bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bbb:	jp     0x413b90
  413bbd:	sbb    cl,BYTE PTR [ebp-0x48145141]
  413bc3:	pop    ds
  413bc4:	adc    eax,0xc788eccd
  413bc9:	cmc    
  413bca:	cmc    
  413bcb:	mov    bl,0x3a
  413bcd:	ins    BYTE PTR es:[edi],dx
  413bce:	rcr    BYTE PTR [edx-0x3d],1
  413bd1:	sbb    al,0x36
  413bd3:	imul   DWORD PTR [ecx+0x41]
  413bd6:	cli    
  413bd7:	xor    eax,0xb7565794
  413bdc:	mov    bh,dh
  413bde:	jns    0x413bb6
  413be0:	push   es
  413be1:	mov    al,0x87
  413be3:	mov    ecx,DWORD PTR [ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	and    ebx,DWORD PTR [ecx+esi*1-0x581e9714]
  413d4b:	dec    ebx
  413d4c:	(bad)  
  413d50:	jl     0x413d01
  413d52:	jmp    0x413dc2
  413d54:	add    DWORD PTR [eax],eax
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
